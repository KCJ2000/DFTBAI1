/data/home/kongfh/DFTBAI1/module/Hamiltonian/Hamiltonian4TB/tight_binding_hamiltonian.py:80: UserWarning: Gimbal lock detected. Setting third angle to zero since it is not possible to uniquely determine all angles.
  orbit_rotation_list = [wyck_orbit.tool.get_orbit_rot_dict(rot_dict,latt,op_list) for wyck_orbit in orbit_list]
atom间距搜索达到近邻要求
rot_name  C4z+,第2阶，补全轨道dyz,轨道个数1
轨道dyz没设置自旋，根据对称性，设置自旋轨道数为1
atom_rep: [[0. 0. 0. 1. 1. 1. 0.]]
neighbour_table: [{'0': [(0, array([0., 0., 0.]))], '1': [(0, array([-1., -1., -1.])), (0, array([-1.,  0.,  0.])), (0, array([ 0., -1.,  0.])), (0, array([ 0.,  0., -1.])), (0, array([0., 0., 1.])), (0, array([0., 1., 0.])), (0, array([1., 0., 0.])), (0, array([1., 1., 1.]))]}]
orbit0 ['dxz', 'dz2', 'dx2-y2', 'dxy', 'dyz']{'dz2': 1, 'dxz': 1, 'dxy': 1, 'dx2-y2': 1, 'dyz': 1}
lattice vector: Matrix([[-1/2, 1/2, 1/2], [1/2, -1/2, 1/2], [1/2, 1/2, -1/2]])
完成无对称性约束的Hamiltonian生成
完成Hamiltonian旋转矩阵的构建
(100, 190)
[1, 20, 21, 2, 3, 40, 41, 4, 5, 60, 61, 6, 7, 80, 81, 8, 9, 100, 101, 10, 11, 120, 121, 12, 13, 140, 141, 14, 15, 160, 161, 16, 17, 180, 181, 18, 19, 23, 42, 43, 24, 25, 62, 63, 26, 27, 82, 83, 28, 29, 102, 103, 30, 31, 122, 123, 32, 33, 142, 143, 34, 35, 162, 163, 36, 37, 182, 183, 38, 39, 45, 64, 65, 46, 47, 84, 85, 48, 49, 104, 105, 50, 51, 124, 125, 52, 53, 144, 145, 54, 55, 164, 165, 56, 57, 184, 185, 58, 59, 67, 86, 87, 68, 69, 106, 107, 70, 71, 126, 127, 72, 73, 146, 147, 74, 75, 166, 167, 76, 77, 186, 187, 78, 79, 89, 108, 109, 90, 91, 128, 129, 92, 93, 148, 149, 94, 95, 168, 169, 96, 97, 188, 189, 98, 99, 111, 130, 131, 112, 113, 150, 151, 114, 115, 170, 171, 116, 117, 190, 191, 118, 119, 133, 152, 153, 134, 135, 172, 173, 136, 137, 192, 193, 138, 139, 155, 174, 175, 156, 157, 194, 195, 158, 159, 177, 196, 197, 178, 179, 199]
([0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 112, 113, 114, 115, 116, 117, 118, 119, 132, 134, 135, 136, 137, 138, 139, 154, 156, 157, 158, 159, 176, 178, 179, 198], 100)
neighbour: 0 op_name: ['E', [0.0, 0.0, 0.0], False]
([0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 112, 113, 114, 115, 116, 117, 118, 119, 132, 134, 135, 136, 137, 138, 139, 154, 156, 157, 158, 159, 176, 178, 179, 198], 100)
neighbour: 0 op_name: ['C4z+', [0.0, 0.0, 0.0], False]
(90, 88)
([0, 6, 7, 10, 11, 14, 15, 17, 22, 24, 25, 28, 29, 32, 33, 39, 44, 66, 88, 92, 93, 110, 114, 115, 132, 154], 26)
neighbour: 0 op_name: ['C4z-', [0.0, 0.0, 0.0], False]
([0, 6, 7, 10, 11, 14, 15, 17, 22, 24, 25, 28, 29, 32, 33, 39, 44, 66, 88, 92, 93, 110, 114, 115, 132, 154], 26)
neighbour: 0 op_name: ['C2x', [0.0, 0.0, 0.0], True]
(28, 8)
([0, 6, 10, 15, 17, 22, 24, 28, 33, 39, 44, 66, 88, 93, 110, 115, 132, 154], 18)
neighbour: 0 op_name: ['C2y', [0.0, 0.0, 0.0], True]
([0, 6, 10, 15, 17, 22, 24, 28, 33, 39, 44, 66, 88, 93, 110, 115, 132, 154], 18)
neighbour: 0 op_name: ['C2z', [0.0, 0.0, 0.0], False]
([0, 6, 10, 15, 17, 22, 24, 28, 33, 39, 44, 66, 88, 93, 110, 115, 132, 154], 18)
neighbour: 0 op_name: ['C2a', [0.0, 0.0, 0.0], True]
(24, 6)
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['C2b', [0.0, 0.0, 0.0], True]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['I', [0.0, 0.0, 0.0], False]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['S4z-', [0.0, 0.0, 0.0], False]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['S4z+', [0.0, 0.0, 0.0], False]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['Sigma_x', [0.0, 0.0, 0.0], True]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['Sigma_y', [0.0, 0.0, 0.0], True]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['Sigma_z', [0.0, 0.0, 0.0], False]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['Sigma_da', [0.0, 0.0, 0.0], True]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
neighbour: 0 op_name: ['Sigma_db', [0.0, 0.0, 0.0], True]
([0, 17, 22, 39, 44, 66, 88, 93, 110, 115, 132, 154], 12)
(800, 1600)
[0, 1, 14, 15, 2, 3, 12, 13, 4, 5, 10, 11, 6, 7, 8, 9, 160, 161, 30, 31, 162, 163, 28, 29, 164, 165, 26, 27, 166, 167, 24, 25, 168, 169, 22, 23, 170, 171, 20, 21, 172, 173, 18, 19, 174, 175, 16, 17, 320, 321, 46, 47, 322, 323, 44, 45, 324, 325, 42, 43, 326, 327, 40, 41, 328, 329, 38, 39, 330, 331, 36, 37, 332, 333, 34, 35, 334, 335, 32, 33, 480, 481, 62, 63, 482, 483, 60, 61, 484, 485, 58, 59, 486, 487, 56, 57, 488, 489, 54, 55, 490, 491, 52, 53, 492, 493, 50, 51, 494, 495, 48, 49, 640, 641, 78, 79, 642, 643, 76, 77, 644, 645, 74, 75, 646, 647, 72, 73, 648, 649, 70, 71, 650, 651, 68, 69, 652, 653, 66, 67, 654, 655, 64, 65, 800, 801, 94, 95, 802, 803, 92, 93, 804, 805, 90, 91, 806, 807, 88, 89, 808, 809, 86, 87, 810, 811, 84, 85, 812, 813, 82, 83, 814, 815, 80, 81, 960, 961, 110, 111, 962, 963, 108, 109, 964, 965, 106, 107, 966, 967, 104, 105, 968, 969, 102, 103, 970, 971, 100, 101, 972, 973, 98, 99, 974, 975, 96, 97, 1120, 1121, 126, 127, 1122, 1123, 124, 125, 1124, 1125, 122, 123, 1126, 1127, 120, 121, 1128, 1129, 118, 119, 1130, 1131, 116, 117, 1132, 1133, 114, 115, 1134, 1135, 112, 113, 1280, 1281, 142, 143, 1282, 1283, 140, 141, 1284, 1285, 138, 139, 1286, 1287, 136, 137, 1288, 1289, 134, 135, 1290, 1291, 132, 133, 1292, 1293, 130, 131, 1294, 1295, 128, 129, 1440, 1441, 158, 159, 1442, 1443, 156, 157, 1444, 1445, 154, 155, 1446, 1447, 152, 153, 1448, 1449, 150, 151, 1450, 1451, 148, 149, 1452, 1453, 146, 147, 1454, 1455, 144, 145, 176, 177, 190, 191, 178, 179, 188, 189, 180, 181, 186, 187, 182, 183, 184, 185, 336, 337, 206, 207, 338, 339, 204, 205, 340, 341, 202, 203, 342, 343, 200, 201, 344, 345, 198, 199, 346, 347, 196, 197, 348, 349, 194, 195, 350, 351, 192, 193, 496, 497, 222, 223, 498, 499, 220, 221, 500, 501, 218, 219, 502, 503, 216, 217, 504, 505, 214, 215, 506, 507, 212, 213, 508, 509, 210, 211, 510, 511, 208, 209, 656, 657, 238, 239, 658, 659, 236, 237, 660, 661, 234, 235, 662, 663, 232, 233, 664, 665, 230, 231, 666, 667, 228, 229, 668, 669, 226, 227, 670, 671, 224, 225, 816, 817, 254, 255, 818, 819, 252, 253, 820, 821, 250, 251, 822, 823, 248, 249, 824, 825, 246, 247, 826, 827, 244, 245, 828, 829, 242, 243, 830, 831, 240, 241, 976, 977, 270, 271, 978, 979, 268, 269, 980, 981, 266, 267, 982, 983, 264, 265, 984, 985, 262, 263, 986, 987, 260, 261, 988, 989, 258, 259, 990, 991, 256, 257, 1136, 1137, 286, 287, 1138, 1139, 284, 285, 1140, 1141, 282, 283, 1142, 1143, 280, 281, 1144, 1145, 278, 279, 1146, 1147, 276, 277, 1148, 1149, 274, 275, 1150, 1151, 272, 273, 1296, 1297, 302, 303, 1298, 1299, 300, 301, 1300, 1301, 298, 299, 1302, 1303, 296, 297, 1304, 1305, 294, 295, 1306, 1307, 292, 293, 1308, 1309, 290, 291, 1310, 1311, 288, 289, 1456, 1457, 318, 319, 1458, 1459, 316, 317, 1460, 1461, 314, 315, 1462, 1463, 312, 313, 1464, 1465, 310, 311, 1466, 1467, 308, 309, 1468, 1469, 306, 307, 1470, 1471, 304, 305, 352, 353, 366, 367, 354, 355, 364, 365, 356, 357, 362, 363, 358, 359, 360, 361, 512, 513, 382, 383, 514, 515, 380, 381, 516, 517, 378, 379, 518, 519, 376, 377, 520, 521, 374, 375, 522, 523, 372, 373, 524, 525, 370, 371, 526, 527, 368, 369, 672, 673, 398, 399, 674, 675, 396, 397, 676, 677, 394, 395, 678, 679, 392, 393, 680, 681, 390, 391, 682, 683, 388, 389, 684, 685, 386, 387, 686, 687, 384, 385, 832, 833, 414, 415, 834, 835, 412, 413, 836, 837, 410, 411, 838, 839, 408, 409, 840, 841, 406, 407, 842, 843, 404, 405, 844, 845, 402, 403, 846, 847, 400, 401, 992, 993, 430, 431, 994, 995, 428, 429, 996, 997, 426, 427, 998, 999, 424, 425, 1000, 1001, 422, 423, 1002, 1003, 420, 421, 1004, 1005, 418, 419, 1006, 1007, 416, 417, 1152, 1153, 446, 447, 1154, 1155, 444, 445, 1156, 1157, 442, 443, 1158, 1159, 440, 441, 1160, 1161, 438, 439, 1162, 1163, 436, 437, 1164, 1165, 434, 435, 1166, 1167, 432, 433, 1312, 1313, 462, 463, 1314, 1315, 460, 461, 1316, 1317, 458, 459, 1318, 1319, 456, 457, 1320, 1321, 454, 455, 1322, 1323, 452, 453, 1324, 1325, 450, 451, 1326, 1327, 448, 449, 1472, 1473, 478, 479, 1474, 1475, 476, 477, 1476, 1477, 474, 475, 1478, 1479, 472, 473, 1480, 1481, 470, 471, 1482, 1483, 468, 469, 1484, 1485, 466, 467, 1486, 1487, 464, 465, 528, 529, 542, 543, 530, 531, 540, 541, 532, 533, 538, 539, 534, 535, 536, 537, 688, 689, 558, 559, 690, 691, 556, 557, 692, 693, 554, 555, 694, 695, 552, 553, 696, 697, 550, 551, 698, 699, 548, 549, 700, 701, 546, 547, 702, 703, 544, 545, 848, 849, 574, 575, 850, 851, 572, 573, 852, 853, 570, 571, 854, 855, 568, 569, 856, 857, 566, 567, 858, 859, 564, 565, 860, 861, 562, 563, 862, 863, 560, 561, 1008, 1009, 590, 591, 1010, 1011, 588, 589, 1012, 1013, 586, 587, 1014, 1015, 584, 585, 1016, 1017, 582, 583, 1018, 1019, 580, 581, 1020, 1021, 578, 579, 1022, 1023, 576, 577, 1168, 1169, 606, 607, 1170, 1171, 604, 605, 1172, 1173, 602, 603, 1174, 1175, 600, 601, 1176, 1177, 598, 599, 1178, 1179, 596, 597, 1180, 1181, 594, 595, 1182, 1183, 592, 593, 1328, 1329, 622, 623, 1330, 1331, 620, 621, 1332, 1333, 618, 619, 1334, 1335, 616, 617, 1336, 1337, 614, 615, 1338, 1339, 612, 613, 1340, 1341, 610, 611, 1342, 1343, 608, 609, 1488, 1489, 638, 639, 1490, 1491, 636, 637, 1492, 1493, 634, 635, 1494, 1495, 632, 633, 1496, 1497, 630, 631, 1498, 1499, 628, 629, 1500, 1501, 626, 627, 1502, 1503, 624, 625, 704, 705, 718, 719, 706, 707, 716, 717, 708, 709, 714, 715, 710, 711, 712, 713, 864, 865, 734, 735, 866, 867, 732, 733, 868, 869, 730, 731, 870, 871, 728, 729, 872, 873, 726, 727, 874, 875, 724, 725, 876, 877, 722, 723, 878, 879, 720, 721, 1024, 1025, 750, 751, 1026, 1027, 748, 749, 1028, 1029, 746, 747, 1030, 1031, 744, 745, 1032, 1033, 742, 743, 1034, 1035, 740, 741, 1036, 1037, 738, 739, 1038, 1039, 736, 737, 1184, 1185, 766, 767, 1186, 1187, 764, 765, 1188, 1189, 762, 763, 1190, 1191, 760, 761, 1192, 1193, 758, 759, 1194, 1195, 756, 757, 1196, 1197, 754, 755, 1198, 1199, 752, 753, 1344, 1345, 782, 783, 1346, 1347, 780, 781, 1348, 1349, 778, 779, 1350, 1351, 776, 777, 1352, 1353, 774, 775, 1354, 1355, 772, 773, 1356, 1357, 770, 771, 1358, 1359, 768, 769, 1504, 1505, 798, 799, 1506, 1507, 796, 797, 1508, 1509, 794, 795, 1510, 1511, 792, 793, 1512, 1513, 790, 791, 1514, 1515, 788, 789, 1516, 1517, 786, 787, 1518, 1519, 784, 785, 880, 881, 894, 895, 882, 883, 892, 893, 884, 885, 890, 891, 886, 887, 888, 889, 1040, 1041, 910, 911, 1042, 1043, 908, 909, 1044, 1045, 906, 907, 1046, 1047, 904, 905, 1048, 1049, 902, 903, 1050, 1051, 900, 901, 1052, 1053, 898, 899, 1054, 1055, 896, 897, 1200, 1201, 926, 927, 1202, 1203, 924, 925, 1204, 1205, 922, 923, 1206, 1207, 920, 921, 1208, 1209, 918, 919, 1210, 1211, 916, 917, 1212, 1213, 914, 915, 1214, 1215, 912, 913, 1360, 1361, 942, 943, 1362, 1363, 940, 941, 1364, 1365, 938, 939, 1366, 1367, 936, 937, 1368, 1369, 934, 935, 1370, 1371, 932, 933, 1372, 1373, 930, 931, 1374, 1375, 928, 929, 1520, 1521, 958, 959, 1522, 1523, 956, 957, 1524, 1525, 954, 955, 1526, 1527, 952, 953, 1528, 1529, 950, 951, 1530, 1531, 948, 949, 1532, 1533, 946, 947, 1534, 1535, 944, 945, 1056, 1057, 1070, 1071, 1058, 1059, 1068, 1069, 1060, 1061, 1066, 1067, 1062, 1063, 1064, 1065, 1216, 1217, 1086, 1087, 1218, 1219, 1084, 1085, 1220, 1221, 1082, 1083, 1222, 1223, 1080, 1081, 1224, 1225, 1078, 1079, 1226, 1227, 1076, 1077, 1228, 1229, 1074, 1075, 1230, 1231, 1072, 1073, 1376, 1377, 1102, 1103, 1378, 1379, 1100, 1101, 1380, 1381, 1098, 1099, 1382, 1383, 1096, 1097, 1384, 1385, 1094, 1095, 1386, 1387, 1092, 1093, 1388, 1389, 1090, 1091, 1390, 1391, 1088, 1089, 1536, 1537, 1118, 1119, 1538, 1539, 1116, 1117, 1540, 1541, 1114, 1115, 1542, 1543, 1112, 1113, 1544, 1545, 1110, 1111, 1546, 1547, 1108, 1109, 1548, 1549, 1106, 1107, 1550, 1551, 1104, 1105, 1232, 1233, 1246, 1247, 1234, 1235, 1244, 1245, 1236, 1237, 1242, 1243, 1238, 1239, 1240, 1241, 1392, 1393, 1262, 1263, 1394, 1395, 1260, 1261, 1396, 1397, 1258, 1259, 1398, 1399, 1256, 1257, 1400, 1401, 1254, 1255, 1402, 1403, 1252, 1253, 1404, 1405, 1250, 1251, 1406, 1407, 1248, 1249, 1552, 1553, 1278, 1279, 1554, 1555, 1276, 1277, 1556, 1557, 1274, 1275, 1558, 1559, 1272, 1273, 1560, 1561, 1270, 1271, 1562, 1563, 1268, 1269, 1564, 1565, 1266, 1267, 1566, 1567, 1264, 1265, 1408, 1409, 1422, 1423, 1410, 1411, 1420, 1421, 1412, 1413, 1418, 1419, 1414, 1415, 1416, 1417, 1568, 1569, 1438, 1439, 1570, 1571, 1436, 1437, 1572, 1573, 1434, 1435, 1574, 1575, 1432, 1433, 1576, 1577, 1430, 1431, 1578, 1579, 1428, 1429, 1580, 1581, 1426, 1427, 1582, 1583, 1424, 1425, 1584, 1585, 1598, 1599, 1586, 1587, 1596, 1597, 1588, 1589, 1594, 1595, 1590, 1591, 1592, 1593]
([14, 15, 12, 13, 10, 11, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 190, 191, 188, 189, 186, 187, 184, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 366, 367, 364, 365, 362, 363, 360, 361, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 542, 543, 540, 541, 538, 539, 536, 537, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 718, 719, 716, 717, 714, 715, 712, 713, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 894, 895, 892, 893, 890, 891, 888, 889, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 1070, 1071, 1068, 1069, 1066, 1067, 1064, 1065, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1246, 1247, 1244, 1245, 1242, 1243, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1422, 1423, 1420, 1421, 1418, 1419, 1416, 1417, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1598, 1599, 1596, 1597, 1594, 1595, 1592, 1593], 800)
neighbour: 1 op_name: ['E', [0.0, 0.0, 0.0], False]
([14, 15, 12, 13, 10, 11, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 190, 191, 188, 189, 186, 187, 184, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 366, 367, 364, 365, 362, 363, 360, 361, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 542, 543, 540, 541, 538, 539, 536, 537, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 718, 719, 716, 717, 714, 715, 712, 713, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 894, 895, 892, 893, 890, 891, 888, 889, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 1070, 1071, 1068, 1069, 1066, 1067, 1064, 1065, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1246, 1247, 1244, 1245, 1242, 1243, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1422, 1423, 1420, 1421, 1418, 1419, 1416, 1417, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1598, 1599, 1596, 1597, 1594, 1595, 1592, 1593], 800)
neighbour: 1 op_name: ['C4z+', [0.0, 0.0, 0.0], False]
(800, 800)
([8, 9, 12, 13, 24, 25, 18, 19, 30, 31, 26, 27, 40, 41, 34, 35, 46, 47, 42, 43, 56, 57, 50, 51, 62, 63, 58, 59, 72, 73, 66, 67, 78, 79, 74, 75, 88, 89, 82, 83, 94, 95, 90, 91, 104, 105, 98, 99, 110, 111, 106, 107, 120, 121, 114, 115, 126, 127, 122, 123, 136, 137, 130, 131, 152, 153, 146, 147, 158, 159, 154, 155, 184, 185, 188, 189, 200, 201, 194, 195, 206, 207, 202, 203, 216, 217, 210, 211, 222, 223, 218, 219, 232, 233, 226, 227, 238, 239, 234, 235, 248, 249, 242, 243, 254, 255, 250, 251, 264, 265, 258, 259, 270, 271, 266, 267, 280, 281, 274, 275, 286, 287, 282, 283, 312, 313, 306, 307, 360, 361, 376, 377, 382, 383, 392, 393, 398, 399, 408, 409, 414, 415, 424, 425, 430, 431, 440, 441, 446, 447, 536, 537, 552, 553, 558, 559, 568, 569, 574, 575, 584, 585, 590, 591, 600, 601, 606, 607, 712, 713, 728, 729, 734, 735, 744, 745, 750, 751, 760, 761, 766, 767, 888, 889, 904, 905, 910, 911, 920, 921, 926, 927, 1064, 1065, 1080, 1081, 1086, 1087, 1240, 1241], 200)
neighbour: 1 op_name: ['C4z-', [0.0, 0.0, 0.0], False]
([8, 9, 12, 13, 24, 25, 18, 19, 30, 31, 26, 27, 40, 41, 34, 35, 46, 47, 42, 43, 56, 57, 50, 51, 62, 63, 58, 59, 72, 73, 66, 67, 78, 79, 74, 75, 88, 89, 82, 83, 94, 95, 90, 91, 104, 105, 98, 99, 110, 111, 106, 107, 120, 121, 114, 115, 126, 127, 122, 123, 136, 137, 130, 131, 152, 153, 146, 147, 158, 159, 154, 155, 184, 185, 188, 189, 200, 201, 194, 195, 206, 207, 202, 203, 216, 217, 210, 211, 222, 223, 218, 219, 232, 233, 226, 227, 238, 239, 234, 235, 248, 249, 242, 243, 254, 255, 250, 251, 264, 265, 258, 259, 270, 271, 266, 267, 280, 281, 274, 275, 286, 287, 282, 283, 312, 313, 306, 307, 360, 361, 376, 377, 382, 383, 392, 393, 398, 399, 408, 409, 414, 415, 424, 425, 430, 431, 440, 441, 446, 447, 536, 537, 552, 553, 558, 559, 568, 569, 574, 575, 584, 585, 590, 591, 600, 601, 606, 607, 712, 713, 728, 729, 734, 735, 744, 745, 750, 751, 760, 761, 766, 767, 888, 889, 904, 905, 910, 911, 920, 921, 926, 927, 1064, 1065, 1080, 1081, 1086, 1087, 1240, 1241], 200)
neighbour: 1 op_name: ['C2x', [0.0, 0.0, 0.0], True]
(720, 180)
([12, 13, 26, 27, 30, 31, 42, 43, 46, 47, 58, 59, 62, 63, 74, 75, 78, 79, 90, 91, 94, 95, 106, 107, 110, 111, 122, 123, 126, 127, 136, 137, 130, 131, 154, 155, 158, 159, 188, 189, 202, 203, 206, 207, 218, 219, 222, 223, 234, 235, 238, 239, 250, 251, 254, 255, 266, 267, 270, 271, 282, 283, 286, 287, 312, 313, 306, 307, 360, 361, 383, 382, 398, 399, 415, 414, 430, 431, 447, 446, 536, 537, 559, 558, 574, 575, 591, 590, 606, 607, 712, 713, 735, 734, 750, 751, 767, 766, 888, 889, 911, 910, 926, 927, 1064, 1065, 1087, 1086, 1240, 1241], 110)
neighbour: 1 op_name: ['C2y', [0.0, 0.0, 0.0], True]
([12, 13, 26, 27, 30, 31, 42, 43, 46, 47, 58, 59, 62, 63, 74, 75, 78, 79, 90, 91, 94, 95, 106, 107, 110, 111, 122, 123, 126, 127, 136, 137, 130, 131, 154, 155, 158, 159, 188, 189, 202, 203, 206, 207, 218, 219, 222, 223, 234, 235, 238, 239, 250, 251, 254, 255, 266, 267, 270, 271, 282, 283, 286, 287, 312, 313, 306, 307, 360, 361, 383, 382, 398, 399, 415, 414, 430, 431, 447, 446, 536, 537, 559, 558, 574, 575, 591, 590, 606, 607, 712, 713, 735, 734, 750, 751, 767, 766, 888, 889, 911, 910, 926, 927, 1064, 1065, 1087, 1086, 1240, 1241], 110)
neighbour: 1 op_name: ['C2z', [0.0, 0.0, 0.0], False]
([12, 13, 26, 27, 30, 31, 42, 43, 46, 47, 58, 59, 62, 63, 74, 75, 78, 79, 90, 91, 94, 95, 106, 107, 110, 111, 122, 123, 126, 127, 136, 137, 130, 131, 154, 155, 158, 159, 188, 189, 202, 203, 206, 207, 218, 219, 222, 223, 234, 235, 238, 239, 250, 251, 254, 255, 266, 267, 270, 271, 282, 283, 286, 287, 312, 313, 306, 307, 360, 361, 383, 382, 398, 399, 415, 414, 430, 431, 447, 446, 536, 537, 559, 558, 574, 575, 591, 590, 606, 607, 712, 713, 735, 734, 750, 751, 767, 766, 888, 889, 911, 910, 926, 927, 1064, 1065, 1087, 1086, 1240, 1241], 110)
neighbour: 1 op_name: ['C2a', [0.0, 0.0, 0.0], True]
(400, 50)
([12, 13, 42, 43, 46, 47, 74, 75, 78, 79, 106, 107, 110, 111, 136, 137, 130, 131, 188, 189, 218, 219, 222, 223, 250, 251, 254, 255, 282, 283, 286, 287, 312, 313, 306, 307, 360, 361, 398, 399, 430, 431, 536, 537, 574, 575, 606, 607, 712, 713, 750, 751, 888, 889, 926, 927, 1064, 1065, 1240, 1241], 60)
neighbour: 1 op_name: ['C2b', [0.0, 0.0, 0.0], True]
([12, 13, 42, 43, 46, 47, 74, 75, 78, 79, 106, 107, 110, 111, 136, 137, 130, 131, 188, 189, 218, 219, 222, 223, 250, 251, 254, 255, 282, 283, 286, 287, 312, 313, 306, 307, 360, 361, 398, 399, 430, 431, 536, 537, 574, 575, 606, 607, 712, 713, 750, 751, 888, 889, 926, 927, 1064, 1065, 1240, 1241], 60)
neighbour: 1 op_name: ['I', [0.0, 0.0, 0.0], False]
(400, 46)
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
neighbour: 1 op_name: ['S4z-', [0.0, 0.0, 0.0], False]
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
neighbour: 1 op_name: ['S4z+', [0.0, 0.0, 0.0], False]
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
neighbour: 1 op_name: ['Sigma_x', [0.0, 0.0, 0.0], True]
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
neighbour: 1 op_name: ['Sigma_y', [0.0, 0.0, 0.0], True]
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
neighbour: 1 op_name: ['Sigma_z', [0.0, 0.0, 0.0], False]
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
neighbour: 1 op_name: ['Sigma_da', [0.0, 0.0, 0.0], True]
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
neighbour: 1 op_name: ['Sigma_db', [0.0, 0.0, 0.0], True]
([12, 46, 47, 78, 79, 110, 111, 130, 131, 188, 222, 223, 254, 255, 286, 287, 306, 307, 360, 399, 430, 536, 575, 606, 712, 751, 888, 927, 1064, 1240], 30)
完成Hamiltonian构建
{0: 0, 17: 1, 22: 2, 39: 3, 44: 4, 66: 5, 88: 6, 93: 7, 110: 8, 115: 9, 132: 10, 154: 11}
{12: 12, 46: 13, 47: 14, 78: 15, 79: 16, 110: 17, 111: 18, 130: 19, 131: 20, 188: 21, 222: 22, 223: 23, 254: 24, 255: 25, 286: 26, 287: 27, 306: 28, 307: 29, 360: 30, 399: 31, 430: 32, 536: 33, 575: 34, 606: 35, 712: 36, 751: 37, 888: 38, 927: 39, 1064: 40, 1240: 41}
{0: array([[([array([0., 0., 0.])], [{0: 1}]), ([], []), ([], []), ([], []),
        ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{1: 1j}]), ([], [])],
       [([], []), ([array([0., 0., 0.])], [{2: 1}]), ([], []), ([], []),
        ([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{3: 1j}])],
       [([], []), ([], []), ([array([0., 0., 0.])], [{4: 1}]), ([], []),
        ([], []), ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([array([0., 0., 0.])], [{5: 1}]),
        ([], []), ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{6: 1}]), ([], []),
        ([array([0., 0., 0.])], [{7: 1j}]), ([], []), ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{8: 1}]), ([], []),
        ([array([0., 0., 0.])], [{9: 1j}]), ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{7: -1j}]), ([], []),
        ([array([0., 0., 0.])], [{10: 1}]), ([], []), ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{9: -1j}]), ([], []),
        ([array([0., 0., 0.])], [{11: 1}]), ([], []), ([], [])],
       [([array([0., 0., 0.])], [{1: -1j}]), ([], []), ([], []),
        ([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{0: (1-0j)}]), ([], [])],
       [([], []), ([array([0., 0., 0.])], [{3: -1j}]), ([], []),
        ([], []), ([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{2: (1-0j)}])]], dtype=object), 1: array([[([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: 1}, {12: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{13: (1+0j), 14: (-0+1j)}, {13: (-1+0j), 14: 1j}, {13: (1+0j), 14: -1j}, {13: (-1+0j), 14: -1j}, {13: (-1+0j), 14: -1j}, {13: (1-0j), 14: -1j}, {13: (-1+0j), 14: (-0+1j)}, {13: 1, 14: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{15: (1+0j), 16: (-0+1j)}, {15: (-1+0j), 16: 1j}, {15: (1+0j), 16: -1j}, {15: (-1+0j), 16: -1j}, {15: (-1+0j), 16: -1j}, {15: (1-0j), 16: -1j}, {15: (-1+0j), 16: (-0+1j)}, {15: 1, 16: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{17: (1+0j), 18: 1j}, {17: (1-0j), 18: -1j}, {17: (-1+0j), 18: (-0+1j)}, {17: (-1+0j), 18: -1j}, {17: (-1+0j), 18: -1j}, {17: (-1+0j), 18: 1j}, {17: (1+0j), 18: -1j}, {17: 1, 18: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{19: (-1+0j), 20: 1j}, {19: 1, 20: 1j}, {19: (1-0j), 20: 1j}, {19: (-1+0j), 20: 1j}, {19: (-1+0j), 20: 1j}, {19: (1+0j), 20: 1j}, {19: (1+0j), 20: 1j}, {19: (-1+0j), 20: 1j}]),
        ([], [])],
       [([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: 1}, {21: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{22: (1+0j), 23: (-0+1j)}, {22: (-1+0j), 23: 1j}, {22: (1+0j), 23: -1j}, {22: (-1+0j), 23: -1j}, {22: (-1+0j), 23: -1j}, {22: (1-0j), 23: -1j}, {22: (-1+0j), 23: (-0+1j)}, {22: 1, 23: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{24: (1+0j), 25: (-0+1j)}, {24: (-1+0j), 25: 1j}, {24: (1+0j), 25: -1j}, {24: (-1+0j), 25: -1j}, {24: (-1+0j), 25: -1j}, {24: (1-0j), 25: -1j}, {24: (-1+0j), 25: (-0+1j)}, {24: 1, 25: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{26: (1+0j), 27: 1j}, {26: (1-0j), 27: -1j}, {26: (-1+0j), 27: (-0+1j)}, {26: (-1+0j), 27: -1j}, {26: (-1+0j), 27: -1j}, {26: (-1+0j), 27: 1j}, {26: (1+0j), 27: -1j}, {26: 1, 27: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{28: (-1+0j), 29: 1j}, {28: 1, 29: 1j}, {28: (1-0j), 29: 1j}, {28: (-1+0j), 29: 1j}, {28: (-1+0j), 29: 1j}, {28: (1+0j), 29: 1j}, {28: (1+0j), 29: 1j}, {28: (-1+0j), 29: 1j}])],
       [([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{13: (1-0j), 14: -1j}, {13: (-1+0j), 14: -1j}, {13: (1-0j), 14: (-0+1j)}, {13: (-1+0j), 14: (-0+1j)}, {13: (-1+0j), 14: (-0+1j)}, {13: (1+0j), 14: 1j}, {13: (-1+0j), 14: -1j}, {13: (1+0j), 14: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{30: (1-0j)}, {30: (1-0j)}, {30: (1-0j)}, {30: (1-0j)}, {30: 1}, {30: (1-0j)}, {30: (1-0j)}, {30: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{31: 1j}, {31: -1j}, {31: -1j}, {31: 1j}, {31: 1j}, {31: -1j}, {31: -1j}, {31: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{32: (1-0j)}, {32: (-1+0j)}, {32: (-1+0j)}, {32: (1-0j)}, {32: (1-0j)}, {32: (-1+0j)}, {32: (-1+0j)}, {32: 1}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{13: (1-0j), 14: (-0+1j)}, {13: (1-0j), 14: -1j}, {13: (-1+0j), 14: 1j}, {13: (-1+0j), 14: -1j}, {13: (-1+0j), 14: -1j}, {13: (-1+0j), 14: (-0+1j)}, {13: (1+0j), 14: -1j}, {13: (1+0j), 14: 1j}]),
        ([], [])],
       [([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{22: (1-0j), 23: -1j}, {22: (-1+0j), 23: -1j}, {22: (1-0j), 23: (-0+1j)}, {22: (-1+0j), 23: (-0+1j)}, {22: (-1+0j), 23: (-0+1j)}, {22: (1+0j), 23: 1j}, {22: (-1+0j), 23: -1j}, {22: (1+0j), 23: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{33: (1-0j)}, {33: (1-0j)}, {33: (1-0j)}, {33: (1-0j)}, {33: 1}, {33: (1-0j)}, {33: (1-0j)}, {33: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{34: 1j}, {34: -1j}, {34: -1j}, {34: 1j}, {34: 1j}, {34: -1j}, {34: -1j}, {34: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{35: (1-0j)}, {35: (-1+0j)}, {35: (-1+0j)}, {35: (1-0j)}, {35: (1-0j)}, {35: (-1+0j)}, {35: (-1+0j)}, {35: 1}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{22: (1-0j), 23: (-0+1j)}, {22: (1-0j), 23: -1j}, {22: (-1+0j), 23: 1j}, {22: (-1+0j), 23: -1j}, {22: (-1+0j), 23: -1j}, {22: (-1+0j), 23: (-0+1j)}, {22: (1+0j), 23: -1j}, {22: (1+0j), 23: 1j}])],
       [([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{15: (1-0j), 16: -1j}, {15: (-1+0j), 16: -1j}, {15: (1-0j), 16: (-0+1j)}, {15: (-1+0j), 16: (-0+1j)}, {15: (-1+0j), 16: (-0+1j)}, {15: (1+0j), 16: 1j}, {15: (-1+0j), 16: -1j}, {15: (1+0j), 16: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{31: -1j}, {31: (-0+1j)}, {31: (-0+1j)}, {31: -1j}, {31: -1j}, {31: 1j}, {31: 1j}, {31: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{36: (1-0j)}, {36: (1-0j)}, {36: (1-0j)}, {36: (1-0j)}, {36: 1}, {36: (1-0j)}, {36: (1-0j)}, {36: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{37: 1j}, {37: 1j}, {37: 1j}, {37: 1j}, {37: 1j}, {37: 1j}, {37: 1j}, {37: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{15: (-1+0j), 16: -1j}, {15: (-1+0j), 16: 1j}, {15: (1-0j), 16: -1j}, {15: (1+0j), 16: 1j}, {15: (1-0j), 16: (-0+1j)}, {15: (1+0j), 16: -1j}, {15: (-1+0j), 16: (-0+1j)}, {15: (-1+0j), 16: -1j}]),
        ([], [])],
       [([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{24: (1-0j), 25: -1j}, {24: (-1+0j), 25: -1j}, {24: (1-0j), 25: (-0+1j)}, {24: (-1+0j), 25: (-0+1j)}, {24: (-1+0j), 25: (-0+1j)}, {24: (1+0j), 25: 1j}, {24: (-1+0j), 25: -1j}, {24: (1+0j), 25: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{34: -1j}, {34: (-0+1j)}, {34: (-0+1j)}, {34: -1j}, {34: -1j}, {34: 1j}, {34: 1j}, {34: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{38: (1-0j)}, {38: (1-0j)}, {38: (1-0j)}, {38: (1-0j)}, {38: 1}, {38: (1-0j)}, {38: (1-0j)}, {38: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{39: 1j}, {39: 1j}, {39: 1j}, {39: 1j}, {39: 1j}, {39: 1j}, {39: 1j}, {39: 1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{24: (-1+0j), 25: -1j}, {24: (-1+0j), 25: 1j}, {24: (1-0j), 25: -1j}, {24: (1+0j), 25: 1j}, {24: (1-0j), 25: (-0+1j)}, {24: (1+0j), 25: -1j}, {24: (-1+0j), 25: (-0+1j)}, {24: (-1+0j), 25: -1j}])],
       [([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{17: (1-0j), 18: -1j}, {17: (1+0j), 18: 1j}, {17: (-1+0j), 18: -1j}, {17: (-1+0j), 18: 1j}, {17: (-1+0j), 18: (-0+1j)}, {17: (-1+0j), 18: -1j}, {17: (1-0j), 18: (-0+1j)}, {17: (1+0j), 18: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{32: (1-0j)}, {32: (-1+0j)}, {32: (-1+0j)}, {32: (1-0j)}, {32: (1-0j)}, {32: (-1+0j)}, {32: (-1+0j)}, {32: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{37: -1j}, {37: -1j}, {37: -1j}, {37: -1j}, {37: -1j}, {37: -1j}, {37: -1j}, {37: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{40: (1-0j)}, {40: (1-0j)}, {40: (1-0j)}, {40: (1-0j)}, {40: 1}, {40: (1-0j)}, {40: (1-0j)}, {40: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{17: (1+0j), 18: 1j}, {17: (-1+0j), 18: 1j}, {17: (1-0j), 18: -1j}, {17: (-1+0j), 18: -1j}, {17: (-1+0j), 18: -1j}, {17: (1+0j), 18: -1j}, {17: (-1+0j), 18: 1j}, {17: (1-0j), 18: (-0+1j)}]),
        ([], [])],
       [([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{26: (1-0j), 27: -1j}, {26: (1+0j), 27: 1j}, {26: (-1+0j), 27: -1j}, {26: (-1+0j), 27: 1j}, {26: (-1+0j), 27: (-0+1j)}, {26: (-1+0j), 27: -1j}, {26: (1-0j), 27: (-0+1j)}, {26: (1+0j), 27: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{35: (1-0j)}, {35: (-1+0j)}, {35: (-1+0j)}, {35: (1-0j)}, {35: (1-0j)}, {35: (-1+0j)}, {35: (-1+0j)}, {35: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{39: -1j}, {39: -1j}, {39: -1j}, {39: -1j}, {39: -1j}, {39: -1j}, {39: -1j}, {39: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{41: (1-0j)}, {41: (1-0j)}, {41: (1-0j)}, {41: (1-0j)}, {41: 1}, {41: (1-0j)}, {41: (1-0j)}, {41: (1-0j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{26: (1+0j), 27: 1j}, {26: (-1+0j), 27: 1j}, {26: (1-0j), 27: -1j}, {26: (-1+0j), 27: -1j}, {26: (-1+0j), 27: -1j}, {26: (1+0j), 27: -1j}, {26: (-1+0j), 27: 1j}, {26: (1-0j), 27: (-0+1j)}])],
       [([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{19: (-1+0j), 20: -1j}, {19: (1+0j), 20: -1j}, {19: (1+0j), 20: -1j}, {19: (-1+0j), 20: -1j}, {19: (-1+0j), 20: -1j}, {19: (1-0j), 20: -1j}, {19: (1-0j), 20: -1j}, {19: (-1+0j), 20: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{13: (1+0j), 14: -1j}, {13: (1+0j), 14: (-0+1j)}, {13: (-1+0j), 14: -1j}, {13: (-1+0j), 14: (-0+1j)}, {13: (-1+0j), 14: 1j}, {13: (-1+0j), 14: -1j}, {13: (1-0j), 14: (-0+1j)}, {13: (1-0j), 14: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{15: (-1+0j), 16: 1j}, {15: (-1+0j), 16: -1j}, {15: (1+0j), 16: (-0+1j)}, {15: (1-0j), 16: -1j}, {15: (1+0j), 16: -1j}, {15: (1-0j), 16: (-0+1j)}, {15: (-1+0j), 16: -1j}, {15: (-1+0j), 16: (-0+1j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{17: (1-0j), 18: -1j}, {17: (-1+0j), 18: -1j}, {17: (1+0j), 18: 1j}, {17: (-1+0j), 18: 1j}, {17: (-1+0j), 18: (-0+1j)}, {17: (1-0j), 18: (-0+1j)}, {17: (-1+0j), 18: -1j}, {17: (1+0j), 18: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}, {12: (1-0j)}]),
        ([], [])],
       [([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{28: (-1+0j), 29: -1j}, {28: (1+0j), 29: -1j}, {28: (1+0j), 29: -1j}, {28: (-1+0j), 29: -1j}, {28: (-1+0j), 29: -1j}, {28: (1-0j), 29: -1j}, {28: (1-0j), 29: -1j}, {28: (-1+0j), 29: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{22: (1+0j), 23: -1j}, {22: (1+0j), 23: (-0+1j)}, {22: (-1+0j), 23: -1j}, {22: (-1+0j), 23: (-0+1j)}, {22: (-1+0j), 23: 1j}, {22: (-1+0j), 23: -1j}, {22: (1-0j), 23: (-0+1j)}, {22: (1-0j), 23: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{24: (-1+0j), 25: 1j}, {24: (-1+0j), 25: -1j}, {24: (1+0j), 25: (-0+1j)}, {24: (1-0j), 25: -1j}, {24: (1+0j), 25: -1j}, {24: (1-0j), 25: (-0+1j)}, {24: (-1+0j), 25: -1j}, {24: (-1+0j), 25: (-0+1j)}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{26: (1-0j), 27: -1j}, {26: (-1+0j), 27: -1j}, {26: (1+0j), 27: 1j}, {26: (-1+0j), 27: 1j}, {26: (-1+0j), 27: (-0+1j)}, {26: (1-0j), 27: (-0+1j)}, {26: (-1+0j), 27: -1j}, {26: (1+0j), 27: -1j}]),
        ([], []),
        ([array([-1., -1., -1.]), array([-1.,  0.,  0.]), array([ 0., -1.,  0.]), array([ 0.,  0., -1.]), array([0., 0., 1.]), array([0., 1., 0.]), array([1., 0., 0.]), array([1., 1., 1.])], [{21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}, {21: (1-0j)}])]],
      dtype=object)}
