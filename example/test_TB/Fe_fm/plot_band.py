import os
import sys
file_path = sys.argv[0]
root_path = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(file_path))))
sys.path.append(root_path)
sys.path.append(os.path.join(root_path,"module"))
import torch
import numpy as np


from module.physics_property.band.band import Band

band = Band()

band.get_data("/home/hp/users/kfh/DFTBAI1/example/BAND-total/Fe-fm/BAND.dat")
#band.get_data("/home/hp/users/kfh/DFTBAI1/example/test_TB/Si_like/Si_PC/BAND.dat")
print(band.content['k_vector'].shape)
print(band.content["energy"].shape)

band_index = [3,4,5,6,7,8,9,10]
model_index = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]

# band.plot_data("/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/DFT_Fe_fm.png",band_index)

### Fm_fm,120ÂèÇ
para_input = torch.tensor([[ 3.1449e-01,  0.0000e+00,  3.0007e-02,  0.0000e+00, -9.2690e-01,
         -3.7285e-01, -2.2936e-01,  0.0000e+00,  6.8980e-02,  0.0000e+00,
          5.3294e-01,  6.2783e-02,  1.2501e-01, -5.4191e-02, -1.2231e-02,
         -4.7208e-02, -9.0949e-02,  6.2335e-02,  1.1595e-01, -9.7765e-02,
          1.0804e-01, -2.1678e-02, -3.2298e-02, -1.3410e-02,  5.2251e-02,
         -7.2765e-04,  1.3536e-01, -2.0920e-02, -1.4852e-02,  1.4811e-01,
         -2.0859e-02, -9.3634e-02,  2.7238e-02, -1.9935e-02,  1.2383e-01,
         -2.1883e-03, -9.7113e-02,  9.7155e-02, -1.0025e-02, -1.7065e-01,
         -1.0181e-01,  2.5016e-01, -9.5027e-02,  2.7337e-01,  6.9479e-02,
         -3.5618e-01,  2.1650e-01,  1.5806e-01,  5.0611e-01, -4.1914e-01,
          1.5540e-01, -1.1275e-01,  5.3532e-02, -6.8087e-02,  3.2597e+00,
          3.3361e-01,  2.9780e-02,  2.8940e-01, -1.0893e+00, -2.6000e-01,
         -1.9474e-01, -2.6407e-01, -1.4054e-01,  8.8622e-02, -4.1666e-01,
          2.6290e-01,  5.2873e-02,  2.4868e-01, -1.7100e-01,  1.2699e-02,
         -4.4764e-01,  1.5227e-01,  1.2062e-01, -5.8649e-02, -7.0634e-02,
          3.1310e-02, -3.1861e-02,  1.3649e-01, -5.9242e-02,  1.3077e-01,
         -4.3811e-04, -2.0002e-01, -4.4256e-02,  5.4767e-02,  3.7920e-01,
         -4.7832e-02, -3.6674e-01, -7.2432e-02, -2.3562e-02, -4.4001e-03,
          2.3851e-02,  4.5495e-02,  8.1945e-02, -5.5422e-04, -2.3433e-01,
          2.8355e-02,  7.3658e-02, -6.1697e-02, -1.6039e+00, -1.1442e-01,
         -2.6495e-01, -9.6550e-02, -1.5469e-01, -9.2616e-02,  6.5629e-01,
         -3.6192e-01,  3.7998e-01, -1.1027e-01,  1.1223e-01, -1.3882e-01,
         -3.8986e-02,  1.3866e-01, -5.6301e-02,  1.9620e-01, -8.8530e-03,
         -3.9165e-02,  7.9158e-02, -1.6928e-02, -5.6420e-02,  1.9008e-01]])

para_input = torch.tensor([[ 0.5943,  0.0000, -0.6445,  0.0000,  0.0095, -0.0068,  0.3205,  0.0000,
         -1.2016,  0.0000,  0.1670,  0.7586,  0.1214,  0.0279,  0.2129,  0.0293,
         -0.1010,  0.1867, -0.1076,  0.0467,  0.1055, -0.0171, -0.0536, -0.0688,
          0.1642,  0.0167, -0.0281,  0.0979,  0.0812, -0.0033,  0.1253,  0.0925,
          0.0868, -0.0192,  0.1133,  0.0750,  0.0671,  0.0487, -0.0358,  0.0343,
         -0.0632, -0.0891, -0.3891,  0.2237,  0.2932, -0.5733,  0.0569, -0.0834,
         -0.3071,  0.1311, -0.0475,  0.1569,  0.0412, -0.1485, -0.7354, -1.2618,
          0.4537,  0.3643,  0.3896, -0.9746, -0.7008,  0.6589, -0.6407,  0.3508,
          0.3141, -0.4933,  0.0389, -0.3493, -0.0711, -0.1867, -0.1177,  0.2762,
          0.0184, -0.0101, -0.1830,  0.0791, -0.0432, -0.0066, -0.0560,  0.0818,
          0.0381, -0.1271, -0.0818,  0.0566, -0.0264, -0.0298,  0.1540, -0.0978,
         -0.0341, -0.0651,  0.0875,  0.0168, -0.0414, -0.0738, -0.0294,  0.0117,
          0.1122, -0.0031,  0.4040, -0.2274,  0.5449,  0.0126, -0.0430, -0.1214,
         -0.1072, -0.2067,  0.4692,  0.1376, -0.1059,  0.2673, -0.1861,  0.1768,
          0.1277, -0.0802,  0.0703, -0.1296,  0.0540, -0.0213, -0.0631, -0.1475]])
para_input = torch.tensor([[-0.1843,  0.0000, -0.1066,  0.0000, -0.3413,  0.0310, -0.3671,  0.0000,
         -0.2873,  0.0000,  0.5620,  0.8698,  0.0719,  0.1354,  0.0829, -0.0052,
          0.1517,  0.0037,  0.0356,  0.0094,  0.0936,  0.1055, -0.0119, -0.0869,
         -0.1861, -0.0612, -0.0634,  0.0466, -0.0232, -0.0653, -0.0103,  0.0187,
          0.0997, -0.1064, -0.0296,  0.0529,  0.0691,  0.2002, -0.1183,  0.0072,
         -0.0163,  0.0145, -0.2549,  0.9675, -0.5260, -0.6280,  0.3424, -0.1586,
         -0.1989,  0.5252, -0.0763, -0.0289,  0.0527, -0.3192,  0.1687,  0.7279,
         -0.0614,  0.2710, -1.5266,  0.2956,  0.3532, -0.0674, -0.3359,  0.1610,
         -0.1634, -0.2882, -0.3514,  0.3023, -0.6763,  0.1592,  0.2528,  0.2994,
          0.0795,  0.0130, -0.1822, -0.1214,  0.0549, -0.0618, -0.0181, -0.1082,
         -0.0590, -0.2442, -0.2938, -0.0241, -0.2218,  0.0728,  0.1773,  0.1624,
         -0.0323, -0.0474,  0.0239,  0.0353,  0.0363, -0.0129, -0.0529, -0.0142,
          0.0656,  0.0685,  0.0248, -0.1681, -0.3175, -0.0389,  0.0275, -0.0307,
          0.8906,  0.2233, -0.2203,  0.0225,  0.0738, -0.1937, -0.0577,  0.0175,
          0.0949, -0.1591, -0.0950,  0.0920, -0.0155,  0.0808, -0.0573, -0.0658]])
para_input = torch.tensor([[ 4.9200e-02,  0.0000e+00,  6.9109e-02,  0.0000e+00, -3.9523e-01,
         -1.2625e-01,  6.6799e-01,  0.0000e+00, -7.4792e-01,  0.0000e+00,
         -7.6328e-02,  2.7877e-01,  3.7091e-02,  1.3595e-02, -1.3930e-01,
         -7.3517e-02, -3.8733e-02, -9.1443e-02, -1.1923e-02,  4.1225e-02,
          3.0363e-01,  9.1545e-02,  1.4786e-01,  1.6779e-01,  9.1781e-02,
          1.1640e-01, -7.9700e-02,  1.5894e-01, -5.5565e-02,  3.6893e-02,
          5.4138e-02, -6.1258e-02,  8.9168e-02, -1.6945e-01, -2.8555e-02,
         -5.7776e-02, -5.9651e-02, -1.0340e-01,  9.9114e-02, -2.1026e-01,
          2.0875e-02,  1.0228e-02, -2.1704e-01, -2.7917e-01,  2.6764e-01,
         -9.6811e-02, -7.5616e-02, -2.9943e-01,  1.8852e+00, -1.3079e+00,
          1.8812e-01, -3.2940e-01, -1.3345e-03,  7.7421e-02,  9.9770e-01,
          8.7876e-02,  2.4302e-01, -4.9756e-02,  7.3784e-01,  4.3755e-01,
          8.6107e-02,  3.0852e-01, -8.1428e-02, -5.1813e-02, -6.9890e-01,
          5.2265e-01,  2.7129e-01, -1.6245e-01, -1.7535e-01, -1.4449e-01,
          5.3179e-01, -4.7199e-01,  6.3907e-02, -5.2939e-02, -2.9306e-02,
         -1.1895e-02, -3.0568e-03,  5.8475e-02,  1.1928e-01,  1.7255e-01,
         -5.7972e-03,  3.3491e-02, -2.0201e-01,  3.2672e-02,  7.1824e-01,
          3.1362e-02, -8.7445e-01, -6.6382e-02, -6.1965e-02, -1.4805e-02,
          1.4597e-02, -6.4299e-02, -7.6069e-02,  1.4933e-01,  1.9267e-02,
          1.3704e-02,  2.8942e-02, -5.5898e-02, -6.0786e-01,  1.9085e-01,
         -3.3666e-02, -8.0323e-03,  6.9632e-02, -1.0036e-01, -4.0757e-01,
          1.1194e-02, -1.0434e-01, -5.8008e-02, -9.2900e-02, -5.2213e-02,
         -2.1612e-02,  7.2834e-02, -1.2189e-01,  3.2657e-01,  4.0898e-02,
         -1.9483e-03,  9.3077e-02, -2.5882e-02,  1.9226e-01, -2.0573e-01]])

para_input = torch.tensor([[-5.8774e-02, -5.1226e-01,  4.0488e-01,  1.6624e-01, -5.1494e-01,
         -7.5673e-01, -1.3557e-01,  6.2479e-02,  1.2138e-01, -4.2287e-01,
         -1.5733e-01,  5.9695e-01,  1.0123e-01, -1.3406e-02, -8.6785e-02,
          2.0762e-01, -2.3154e-02, -7.3850e-02,  8.6752e-02,  1.5819e-01,
          1.2685e-01,  9.0164e-04, -2.5429e-02, -1.5349e-01,  7.2685e-02,
         -7.8346e-02,  4.8970e-02, -4.0164e-02, -3.9844e-02, -1.7075e-01,
          6.5058e-02,  3.5186e-02,  1.2783e-03, -2.2241e-02,  2.3320e-02,
         -6.3466e-02, -1.8932e-01,  1.3748e-01, -1.5921e-01,  7.1796e-03,
          6.8073e-02,  2.3442e-01, -1.1066e-01, -8.8109e-01,  1.4263e+00,
         -3.0114e-01,  1.3629e-01, -7.6636e-02,  2.0478e-01, -3.1243e-01,
         -1.2112e-01,  3.0370e-02, -1.1506e-01,  9.8178e-02,  9.6379e-01,
         -1.1676e-01, -1.9534e-01,  1.2266e-01,  4.9151e-01, -1.8026e+00,
         -1.6494e-01, -1.7513e-01, -1.4888e-01, -1.5705e-02,  1.9004e-01,
          9.2868e-02,  7.0359e-01, -6.5265e-01,  3.6522e-01, -1.1275e-02,
         -7.8391e-01,  2.7506e-01, -5.6957e-01, -1.0640e-02,  3.8151e-01,
         -1.4954e-02, -1.4141e-02, -1.2947e-02, -1.0943e-01, -8.3472e-02,
          4.4003e-02, -1.4505e-01,  2.5993e-01,  4.3754e-02,  1.0209e-01,
         -7.3670e-02,  1.0047e-01,  1.7465e-02, -5.3580e-03, -7.3263e-04,
          4.3678e-02,  5.3398e-04,  1.4069e-01, -3.5407e-02,  1.6006e-01,
          1.2428e-02,  5.3074e-02, -3.8886e-02, -5.2384e-01,  1.1509e-01,
          5.8381e-02,  1.4395e-01,  5.5141e-03, -2.0238e-02, -2.9869e-01,
         -9.2296e-02,  9.4323e-01, -9.6184e-02,  6.1999e-02,  6.7859e-03,
         -2.4659e-03,  7.1380e-02, -6.1613e-02,  8.6191e-03,  2.1260e-01,
         -2.5833e-01,  1.0671e-01, -1.6343e-01, -1.3278e-01,  2.3387e-01]])
para_input = torch.tensor([[ 9.0137e-02,  5.2490e-01, -1.6743e-01, -2.2474e-01, -3.9247e-01,
         -5.0419e-01,  6.4452e-01, -1.8619e-01, -1.0495e-01,  2.3201e-01,
         -2.3696e-01,  5.3986e-01, -6.2470e-02,  3.5945e-02,  1.7914e-01,
         -4.0583e-02, -5.1062e-02,  8.9316e-02,  5.0254e-03,  6.0562e-03,
         -4.4418e-02, -7.0328e-02, -9.0038e-02,  5.7824e-02, -9.5563e-02,
          1.9807e-02, -8.6223e-02, -4.4080e-02, -3.7866e-02,  1.9580e-01,
          8.5126e-02,  1.5078e-03,  7.0287e-02,  3.3626e-01,  3.8093e-02,
          3.9200e-02, -9.3299e-04,  2.4748e-02,  1.2524e-01, -8.8006e-02,
         -2.8624e-02, -6.4086e-02, -6.2648e-02,  2.4574e-02, -7.5805e-02,
         -5.1880e-02,  1.6765e-02,  9.3798e-02, -7.1036e-01,  7.9309e-01,
          2.7599e-02,  3.3485e-01, -5.7509e-01,  1.2628e-01, -1.9368e+00,
          2.2449e-02, -3.1972e-01,  2.0555e-01, -1.1847e+00,  1.4137e-01,
         -1.8290e-01,  4.5478e-01, -5.6060e-01,  1.4940e-01, -2.9259e-01,
          8.9247e-02, -3.1279e-01,  1.5176e-01,  2.1977e-01, -4.6145e-02,
          3.2273e-02, -2.8230e-02, -5.4221e-02, -3.6134e-02,  1.5355e-01,
          8.7199e-02, -4.7530e-02, -1.8235e-02, -2.9225e-02, -1.2548e-01,
          8.7477e-02,  3.5019e-02, -5.1126e-03,  5.0941e-02, -5.0465e-01,
         -6.7973e-02,  5.2185e-01, -3.3743e-02, -5.8090e-02,  4.6002e-02,
         -1.7309e-01,  1.6148e-02, -3.5999e-02, -6.3973e-02, -2.4209e-01,
         -6.7303e-02, -9.7521e-02,  8.1210e-02,  1.0431e+00, -9.3968e-03,
         -2.3300e-01,  1.3627e-01, -3.3997e-02,  1.2277e-02,  8.1127e-01,
         -2.2044e-01, -1.2639e-01,  1.2871e-01, -6.0059e-02, -5.9599e-02,
         -2.1762e-02,  1.0407e-01,  3.2898e-02,  2.0826e-01, -7.5618e-02,
          8.9396e-02, -2.3574e-02, -1.1955e-01,  1.1466e-01, -4.9124e-02]])

### Fe_fm_pd_4neighbour
para_input = torch.tensor([[ 1.2106e+00, -1.1977e+00,  1.1955e+00, -8.3764e-01,  2.7710e-01,
          1.5601e+00,  1.7571e+00, -1.2114e+00,  4.7784e-01, -8.3158e-02,
          7.2147e-01,  2.7499e+00,  1.2832e+00, -8.7182e-01,  1.4692e+00,
         -1.4360e-01,  1.2850e+00,  1.1180e+00, -1.2776e-01,  1.5850e-01,
          1.0599e-01, -1.8961e-01, -2.9123e-01, -4.8820e-02, -1.1291e-01,
         -7.0467e-02, -2.2606e-01, -4.3291e-02, -6.3837e-02,  1.0701e-01,
          1.1843e-01,  6.9330e-02, -2.1846e-01,  8.5538e-02,  2.1592e-01,
          7.7143e-01, -9.6325e-01, -1.3234e-01,  3.8588e-01,  1.8983e-02,
         -1.3534e+00,  3.0773e-01,  3.0079e-02,  6.0534e-02,  7.3484e-02,
          2.0016e-01,  3.1838e-02,  3.2659e-01,  1.9335e-01, -2.1997e-02,
         -2.5944e-01,  2.0097e-01, -1.1588e-01, -1.8594e-02,  1.7790e-02,
         -1.5626e-01,  3.2438e-02, -2.3269e-01, -8.2437e-02,  1.0498e-01,
          5.1686e-01, -1.4412e-01,  8.5245e-02,  8.2034e-02, -7.2872e-02,
         -1.7204e-01,  3.6004e-01, -1.0748e-01, -4.3821e-01, -2.4559e-01,
          1.1638e-01,  1.1834e-01,  1.3357e-01,  1.7126e-02,  8.0817e-02,
         -1.6665e-02, -4.1936e-02, -2.1702e-01, -5.4554e-01, -1.9291e-01,
         -9.9110e-02,  4.9977e-01, -3.2879e-01,  2.4825e-01, -4.3900e-01,
          4.8023e-01, -9.3125e-02, -5.0316e-02, -2.8423e-01,  1.2037e-01,
          1.8408e-01,  2.6795e-01,  1.5787e-01,  8.9103e-01, -7.4982e-01,
         -1.1317e-01, -5.3704e-02, -4.9362e-01,  4.1499e-01,  1.6194e-01,
          1.8989e-01, -3.1912e-01, -2.1051e-01, -5.8398e-02,  4.0628e-01,
         -2.7260e-01, -3.4842e-02, -5.8580e-01, -6.6776e-01, -7.7380e-01,
          2.5537e+00,  2.6083e-01, -1.2396e-01, -1.7859e-01, -1.4542e-01,
         -9.1784e-01,  3.1316e-01,  1.2288e-01,  4.2168e-01, -2.4222e-01,
          1.1033e-01, -6.4384e-01,  2.0520e-01, -8.7501e-02,  3.9118e-01,
          1.2546e-01, -2.7784e-01, -3.5517e-02,  5.0417e-01,  5.5963e-01,
         -4.4174e-01,  3.0221e-01,  6.4943e-02, -7.6753e-02,  5.1414e-01,
         -4.6699e-02,  5.8516e-01, -8.1178e-01,  5.6100e-01, -1.3966e-01,
          1.9717e+00, -4.6567e-01, -3.9447e-01, -8.0433e-01,  6.1189e-01,
          9.0236e-01, -2.5093e-01, -5.2055e-01, -4.0606e-01,  7.5898e-01,
         -2.6870e-01, -1.6165e-01, -7.8635e-02, -2.8606e-01, -2.1962e-01,
         -4.0718e-02,  2.2911e-01,  4.0901e-01, -8.3111e-01, -2.4113e-02,
         -6.8596e-02,  5.7442e-02, -5.2593e-02,  3.1978e-02, -7.1930e-03,
         -1.4037e-01,  5.9646e-01, -8.6788e-01, -3.4979e-01, -3.5115e-01,
          2.8317e-01, -1.7848e-01, -1.6668e-01,  4.5788e-02,  1.6779e-01,
         -2.1018e-01,  1.4768e-01,  1.9823e-02,  4.3796e-01, -4.0764e-01,
         -8.0016e-02, -9.9060e-01,  7.2044e-01, -7.3188e-01,  1.3804e-01,
          3.5504e-01,  7.3385e-01, -3.2352e-01,  3.4935e-01, -5.5348e-01,
          5.0905e-01,  2.0999e-01,  1.2037e+00,  8.0139e-01,  1.1005e-01,
         -2.7069e-01, -3.6930e-01, -4.2842e-01, -2.2940e-01, -7.2511e-01,
          4.8253e-01, -7.1975e-01,  1.0251e+00, -1.2003e+00,  1.9058e-01,
          6.1374e-02,  1.8251e-01, -4.4170e-01, -1.9218e-01,  2.1353e-01,
          3.9772e-02,  1.1831e+00, -4.3255e-01,  4.6576e-02,  1.0282e-01,
         -7.0278e-02,  5.9211e-02,  6.2104e-02,  7.0523e-02, -1.1068e-01,
         -1.1852e+00,  6.6537e-01, -3.3470e-01,  2.3951e-01,  2.2854e-01,
          1.3385e-01, -1.9468e-01, -2.5657e-01,  1.9375e-01,  3.5525e-01,
          6.0360e-02, -1.2246e-01,  3.1912e-01,  5.7228e-04,  2.5831e-01,
         -1.5415e-01,  1.5563e-01,  7.3634e-02,  1.1176e-01, -1.4856e-01,
          1.7563e-02, -1.7169e-01, -3.2016e-02,  2.4872e-01,  1.6516e-01,
          5.1241e-02, -8.4362e-02, -1.5356e-01, -1.5475e-01,  3.0066e-01,
          1.4873e-01,  1.6760e-01,  5.5267e-01, -9.2664e-01,  2.5071e-01,
         -5.7574e-02,  2.0474e-01, -4.2025e-01,  1.4746e-01,  6.0844e-01,
         -1.3927e-01, -1.8841e-01, -4.0312e-01,  1.8876e-01, -8.8990e-02,
          2.1456e-01,  3.9682e-01, -5.0103e-03, -1.7320e-01, -3.7635e-01]])
para_input = torch.tensor([[ 2.4450e-01, -1.8551e-01,  1.0606e+00,  5.1138e-01, -9.5664e-01,
         -3.4931e-01,  3.1351e-02, -4.6462e-01,  3.2216e-01,  3.1178e-01,
          4.7521e+00, -8.8375e-01,  1.2413e+00, -9.2169e-01,  1.5702e+00,
         -1.0096e+00,  7.8211e-04, -1.0667e+00,  5.3561e-01,  1.3149e-02,
         -4.6971e-01,  4.8006e-02,  1.9017e-01, -2.8561e-01,  2.3347e-02,
         -3.9967e-01,  2.6501e-01, -4.1901e-01, -2.2703e-01, -3.9961e-02,
          1.6223e-01, -5.4498e-02,  6.9737e-02,  1.9829e-02, -1.0800e-01,
          3.2299e-01, -1.3102e-01,  4.5208e-02,  1.0924e-01,  1.3874e-02,
          3.3450e-03,  4.0837e-02,  6.0895e-02, -1.3896e-01,  1.0913e-01,
          3.3771e-02, -1.1703e-01,  1.2961e-01, -1.4001e-01,  7.1664e-02,
          1.2072e-01, -2.8527e-01,  1.8945e-01,  6.1192e-02,  7.2130e-02,
         -2.5100e-03,  1.1710e-01,  1.0721e-01, -1.2957e-01,  1.6070e-01,
          2.9160e-02, -3.2025e-01,  5.3683e-01, -2.3619e-01, -2.6047e-01,
          7.6802e-02,  1.1638e-01,  1.3889e-02,  5.5082e-02,  7.6235e-02,
         -1.1925e-01, -6.5794e-02, -3.6981e-03,  9.0301e-02,  1.2206e-01,
          1.1712e-01,  8.6398e-02, -1.0116e-01, -1.7438e-02, -1.1789e-01,
         -6.1273e-01, -1.8363e-02, -5.2716e-02,  7.1882e-02,  2.0409e-01,
          1.4818e-01,  3.3304e-01, -1.5469e-01,  1.4593e-01, -1.4529e-01,
          4.4187e-01, -1.4955e-03,  8.6548e-01, -1.2546e+00,  2.4037e-02,
         -3.7389e-01, -7.9922e-01, -5.9289e-01,  2.7386e-01, -2.5469e-01,
          1.9614e-01,  4.9841e-02,  2.9363e-01,  5.9382e-01,  4.0246e-01,
         -1.0008e+00,  2.9601e-02, -2.3445e-01,  4.3917e-01,  4.7552e-02,
          1.0765e-01,  1.5532e-01,  6.5375e-01,  1.8472e-01, -3.5043e-01,
          1.1112e-01,  2.7425e-01, -6.9463e-02,  1.1807e-01, -1.2950e-01,
          6.2863e-01, -2.5389e-01, -6.3139e-03,  1.8050e-01,  8.2337e-02,
          1.1385e-01, -4.8078e-01,  1.6058e+00, -1.3017e+00,  2.3149e-02,
         -1.2304e-01, -4.6365e-01, -3.2598e-01,  9.4397e-01,  4.8582e-01,
         -4.4140e-01,  7.9928e-01, -1.1902e+00, -3.4208e-01,  1.1175e+00,
         -2.8755e-02,  3.3518e-02, -1.5960e-01, -8.6584e-01, -4.6455e-01,
          3.5236e-01,  6.2144e-02, -2.3597e-01, -5.0588e-01,  5.7551e-01,
          8.0969e-01, -5.9510e-01,  1.1506e-01,  4.6084e-02,  8.8852e-01,
         -1.1004e-01, -1.1486e-01,  2.3523e-01,  2.2505e-01, -4.0406e-01,
          4.8173e-02, -3.1005e-01,  1.1103e-02, -1.1830e-01,  2.7207e-01,
         -4.1280e-01, -2.8527e-01, -9.1551e-02,  3.1955e-01, -3.4612e-01,
         -5.2034e-02, -3.6036e-01, -2.0159e-01,  3.9953e-02,  3.2953e-02,
          1.5410e-01,  1.3261e-01,  7.1168e-04,  2.6617e-01, -3.8203e-03,
         -2.0856e-01, -6.5430e-01,  5.0771e-01,  7.3008e-02,  3.5209e-01,
         -1.2402e-01,  4.0315e-02,  1.8563e-01, -1.0428e-01,  3.2029e-01,
         -5.5375e-02,  2.1822e-01,  6.8644e-02,  4.9591e-02,  2.7906e-01,
         -1.1144e-01, -1.4620e-01, -2.3116e-01,  4.5742e-01, -3.0772e-02,
         -6.4957e-01,  6.5538e-02,  8.0909e-01, -9.8887e-01,  7.8275e-02,
          1.1663e-01,  4.2943e-03, -1.7157e-02, -4.8765e-02,  2.2238e-02,
         -1.7628e-03, -7.5716e-01, -5.5468e-01,  1.1080e-01, -2.7996e-02,
         -5.1466e-02, -7.2271e-02, -4.3185e-02, -2.5619e-02, -2.2576e-02,
          7.2708e-01,  4.5638e-01,  3.6638e-01,  2.0127e-02, -5.8172e-01,
         -2.8954e-01,  1.5289e-01,  4.5137e-02,  5.6929e-02, -7.5882e-03,
          2.0636e-01,  2.5028e-02, -8.8659e-03,  6.6757e-02, -3.1257e-01,
          7.2976e-02,  1.7801e-01,  1.3673e-01, -1.8702e-02, -2.7275e-01,
         -1.4677e-01,  1.1661e-01,  1.6245e-02,  2.7912e-01, -1.3054e-01,
         -1.4684e-01, -2.2254e-01, -1.4371e-01, -6.2605e-01, -6.5111e-01,
         -5.3012e-01, -2.6477e-01,  4.6160e-02, -8.3553e-02, -5.4942e-02,
         -1.7533e-02,  4.6409e-01,  6.1986e-02,  2.1611e-02, -3.3130e-01,
          1.4549e-02,  5.6861e-02, -3.6673e-01,  1.1563e-01, -2.8228e-02,
          1.6843e-02,  2.7513e-02, -9.3138e-02, -1.9372e-01,  4.3168e-01]])

para_input = torch.tensor([[-5.7767e-01,  3.4078e-01,  2.3997e-01,  6.6754e-01, -9.2248e-01,
         -4.2538e-01, -1.4517e-03,  5.9007e-01, -3.5168e-01,  7.5384e-01,
         -4.7805e-01, -1.3990e-01,  2.3699e-01,  3.4586e-02, -8.9273e-01,
          4.4705e-01,  1.8248e-02, -1.4800e+00, -3.0334e-01,  7.1203e-02,
          1.5532e-01, -1.8707e-02, -3.5723e-02,  1.1990e-02,  2.8296e-02,
         -2.2861e-02, -1.2247e-01,  8.5108e-02,  4.6012e-02,  3.9995e-02,
         -5.6451e-02, -8.2093e-02, -5.8968e-02, -2.3548e-01,  5.2446e-02,
         -1.8273e-03,  1.1160e-01, -4.5112e-02,  1.1905e-01,  4.8575e-02,
          2.3225e-02, -1.2464e-01,  6.8311e-02, -2.4183e-03, -9.9475e-02,
         -8.2412e-03, -9.2716e-02,  7.0285e-02, -5.2579e-01,  5.0645e-02,
          1.7196e-02,  2.1425e-01,  6.1423e-02, -2.9887e-02,  3.4719e-01,
         -2.3575e-02,  9.2280e-03, -4.5700e-02, -3.0283e-02,  2.3626e-01,
          9.1349e-02, -4.0239e-02,  1.1044e-01, -8.9033e-02,  6.1867e-02,
          6.6347e-02, -1.1412e-01, -1.8289e-02, -8.6325e-02, -8.7450e-02,
          2.8159e-02,  1.1809e-01,  3.0317e-02, -1.1169e-01, -1.2182e-01,
          2.6370e-02,  2.7363e-02, -7.3839e-02,  1.7340e-01, -5.4871e-03,
          2.8597e-02,  1.2368e-01, -3.2793e-02,  1.7069e-02,  1.9769e-01,
         -2.2938e-02,  1.3754e-01, -7.6007e-02,  2.2197e-01,  1.8696e-01,
          2.1653e-01,  4.0765e-01, -2.5567e-01, -1.7453e-01, -7.2418e-02,
         -5.9937e-02, -7.8926e-02,  3.0093e-02,  2.7218e-02, -1.1610e-01,
          2.0648e-01, -8.1522e-02,  1.6017e-01, -5.0632e-02,  4.4185e-01,
         -3.4596e-01, -2.2369e-01, -1.2739e-01, -8.6244e-02,  5.1956e-02,
          3.8931e-01,  9.6822e-02, -8.4533e-04, -3.5813e-01, -7.1320e-02,
          1.3959e-01,  8.3433e-01,  1.8235e-01,  2.6613e-02, -2.4274e-02,
         -3.4814e-01, -8.8162e-02, -2.4475e-02, -9.0046e-02,  5.1079e-03,
          2.0629e-01, -7.9211e-01,  9.1698e-01, -5.1385e-02, -2.4702e-01,
          2.8519e-02,  1.6470e-01,  8.6965e-02, -3.2834e-03, -5.4045e-02,
          1.8108e-02, -5.7124e-01,  1.8548e-02,  9.0747e-02,  3.4715e-02,
         -2.9596e-02,  1.7160e-01,  4.2250e-01,  8.3796e-01, -1.8385e-02,
         -1.6533e-01,  1.3490e-01, -6.4698e-02,  6.1168e-02,  2.1188e-01,
         -2.2001e-01,  1.6173e-01, -4.6921e-01,  5.2270e-01,  5.0709e-01,
         -3.4291e-01,  2.4972e-01,  2.4968e-01,  5.2354e-02, -2.2111e-02,
         -1.4468e-02, -3.9284e-01,  2.1911e-02, -1.3332e-01, -5.0920e-01,
          7.2414e-01, -4.8511e-02,  1.8574e-01, -7.3149e-02, -1.8445e-01,
          6.7781e-02,  4.2727e-02, -1.7276e-01, -9.1116e-02, -4.3318e-03,
          1.1307e-01,  1.2531e-02,  1.0454e-01, -1.4173e-01,  1.8610e-01,
          1.4860e-01, -2.1515e-01, -1.2972e-01,  8.6040e-02,  6.5250e-02,
         -1.0331e-01,  1.4378e-03, -6.1033e-02,  3.9545e-01, -2.4196e-01,
         -1.8748e-01,  1.4819e-01, -3.0018e-01, -1.2759e-01, -9.9132e-02,
          3.2105e-01, -1.4805e-01, -8.8456e-02, -2.9896e-02,  1.5975e-01,
         -3.4226e-04,  8.9721e-02,  7.7009e-01, -7.4272e-01,  2.2343e-01,
          3.3317e-01, -1.4357e-01,  9.6497e-02, -1.1968e-01,  1.7143e-01,
          5.5823e-02,  1.7705e+00, -4.2053e-01, -1.8148e-01,  4.0602e-01,
          1.6363e-01, -9.3811e-02,  8.9845e-02,  1.3662e-01,  2.1647e-03,
          8.2864e-02, -2.1022e-01, -2.0884e-01,  1.7694e-01, -5.5631e-01,
         -1.0893e-01,  1.5046e-03, -1.3784e-02,  2.7016e-02, -7.5228e-02,
          3.3304e-04, -3.4547e-02,  1.4489e-01, -2.2530e-02,  2.8690e-02,
         -1.0828e-01, -2.1048e-02, -3.2465e-02,  2.0861e-03, -1.4371e-01,
         -1.8586e-01, -2.2297e-02, -2.3272e-02,  1.2381e-02, -2.9353e-02,
         -7.7937e-02,  4.8739e-02,  8.7674e-02, -1.1860e-01,  1.3433e-01,
          1.4218e-01,  4.7639e-02,  1.0228e-02, -4.8278e-02, -2.6693e-01,
         -8.4563e-02, -3.8948e-01,  7.4004e-02,  1.6144e-01, -2.2487e-01,
          2.9994e-02,  8.3860e-02,  2.5177e-02,  7.2112e-02, -5.8133e-02,
         -2.0971e-01, -1.7190e-01,  1.8211e-01,  1.7820e-01, -3.9823e-01]])
threshold = 0
para_input = torch.where(abs(para_input) < threshold, torch.tensor(0.0), para_input)

band.init_calculate_model("/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/Fe_fm_pd_4neighbour.pkl",
                              para = para_input
                              )
# band.plot_model(band.content['k_vector'],save_path="/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/calculate_band.png",
#                     select_band=model_index
#                     )

print(para_input.shape)
band.plot_compare(band.content['k_vector'],save_path="/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/compare.png",
                  model_index=model_index,band_index=band_index)