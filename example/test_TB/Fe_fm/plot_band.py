import os
import sys
file_path = sys.argv[0]
root_path = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(file_path))))
sys.path.append(root_path)
sys.path.append(os.path.join(root_path,"module"))
import torch
import numpy as np


from module.physics_property.band.band import Band

band = Band()

band.get_data("/home/hp/users/kfh/DFTBAI1/example/BAND-total/Fe-fm/BAND.dat")
print(band.content['k_vector'].shape)
print(band.content["energy"].shape)

band_index = [3,4,5,6,7,8,9,10]
model_index = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]

# band.plot_data("/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/DFT_Fe_fm.png",band_index)

### Fm_fm,120ÂèÇ
para_input = torch.tensor([[ 3.1449e-01,  0.0000e+00,  3.0007e-02,  0.0000e+00, -9.2690e-01,
         -3.7285e-01, -2.2936e-01,  0.0000e+00,  6.8980e-02,  0.0000e+00,
          5.3294e-01,  6.2783e-02,  1.2501e-01, -5.4191e-02, -1.2231e-02,
         -4.7208e-02, -9.0949e-02,  6.2335e-02,  1.1595e-01, -9.7765e-02,
          1.0804e-01, -2.1678e-02, -3.2298e-02, -1.3410e-02,  5.2251e-02,
         -7.2765e-04,  1.3536e-01, -2.0920e-02, -1.4852e-02,  1.4811e-01,
         -2.0859e-02, -9.3634e-02,  2.7238e-02, -1.9935e-02,  1.2383e-01,
         -2.1883e-03, -9.7113e-02,  9.7155e-02, -1.0025e-02, -1.7065e-01,
         -1.0181e-01,  2.5016e-01, -9.5027e-02,  2.7337e-01,  6.9479e-02,
         -3.5618e-01,  2.1650e-01,  1.5806e-01,  5.0611e-01, -4.1914e-01,
          1.5540e-01, -1.1275e-01,  5.3532e-02, -6.8087e-02,  3.2597e+00,
          3.3361e-01,  2.9780e-02,  2.8940e-01, -1.0893e+00, -2.6000e-01,
         -1.9474e-01, -2.6407e-01, -1.4054e-01,  8.8622e-02, -4.1666e-01,
          2.6290e-01,  5.2873e-02,  2.4868e-01, -1.7100e-01,  1.2699e-02,
         -4.4764e-01,  1.5227e-01,  1.2062e-01, -5.8649e-02, -7.0634e-02,
          3.1310e-02, -3.1861e-02,  1.3649e-01, -5.9242e-02,  1.3077e-01,
         -4.3811e-04, -2.0002e-01, -4.4256e-02,  5.4767e-02,  3.7920e-01,
         -4.7832e-02, -3.6674e-01, -7.2432e-02, -2.3562e-02, -4.4001e-03,
          2.3851e-02,  4.5495e-02,  8.1945e-02, -5.5422e-04, -2.3433e-01,
          2.8355e-02,  7.3658e-02, -6.1697e-02, -1.6039e+00, -1.1442e-01,
         -2.6495e-01, -9.6550e-02, -1.5469e-01, -9.2616e-02,  6.5629e-01,
         -3.6192e-01,  3.7998e-01, -1.1027e-01,  1.1223e-01, -1.3882e-01,
         -3.8986e-02,  1.3866e-01, -5.6301e-02,  1.9620e-01, -8.8530e-03,
         -3.9165e-02,  7.9158e-02, -1.6928e-02, -5.6420e-02,  1.9008e-01]])

para_input = torch.tensor([[ 0.5943,  0.0000, -0.6445,  0.0000,  0.0095, -0.0068,  0.3205,  0.0000,
         -1.2016,  0.0000,  0.1670,  0.7586,  0.1214,  0.0279,  0.2129,  0.0293,
         -0.1010,  0.1867, -0.1076,  0.0467,  0.1055, -0.0171, -0.0536, -0.0688,
          0.1642,  0.0167, -0.0281,  0.0979,  0.0812, -0.0033,  0.1253,  0.0925,
          0.0868, -0.0192,  0.1133,  0.0750,  0.0671,  0.0487, -0.0358,  0.0343,
         -0.0632, -0.0891, -0.3891,  0.2237,  0.2932, -0.5733,  0.0569, -0.0834,
         -0.3071,  0.1311, -0.0475,  0.1569,  0.0412, -0.1485, -0.7354, -1.2618,
          0.4537,  0.3643,  0.3896, -0.9746, -0.7008,  0.6589, -0.6407,  0.3508,
          0.3141, -0.4933,  0.0389, -0.3493, -0.0711, -0.1867, -0.1177,  0.2762,
          0.0184, -0.0101, -0.1830,  0.0791, -0.0432, -0.0066, -0.0560,  0.0818,
          0.0381, -0.1271, -0.0818,  0.0566, -0.0264, -0.0298,  0.1540, -0.0978,
         -0.0341, -0.0651,  0.0875,  0.0168, -0.0414, -0.0738, -0.0294,  0.0117,
          0.1122, -0.0031,  0.4040, -0.2274,  0.5449,  0.0126, -0.0430, -0.1214,
         -0.1072, -0.2067,  0.4692,  0.1376, -0.1059,  0.2673, -0.1861,  0.1768,
          0.1277, -0.0802,  0.0703, -0.1296,  0.0540, -0.0213, -0.0631, -0.1475]])
para_input = torch.tensor([[-0.1843,  0.0000, -0.1066,  0.0000, -0.3413,  0.0310, -0.3671,  0.0000,
         -0.2873,  0.0000,  0.5620,  0.8698,  0.0719,  0.1354,  0.0829, -0.0052,
          0.1517,  0.0037,  0.0356,  0.0094,  0.0936,  0.1055, -0.0119, -0.0869,
         -0.1861, -0.0612, -0.0634,  0.0466, -0.0232, -0.0653, -0.0103,  0.0187,
          0.0997, -0.1064, -0.0296,  0.0529,  0.0691,  0.2002, -0.1183,  0.0072,
         -0.0163,  0.0145, -0.2549,  0.9675, -0.5260, -0.6280,  0.3424, -0.1586,
         -0.1989,  0.5252, -0.0763, -0.0289,  0.0527, -0.3192,  0.1687,  0.7279,
         -0.0614,  0.2710, -1.5266,  0.2956,  0.3532, -0.0674, -0.3359,  0.1610,
         -0.1634, -0.2882, -0.3514,  0.3023, -0.6763,  0.1592,  0.2528,  0.2994,
          0.0795,  0.0130, -0.1822, -0.1214,  0.0549, -0.0618, -0.0181, -0.1082,
         -0.0590, -0.2442, -0.2938, -0.0241, -0.2218,  0.0728,  0.1773,  0.1624,
         -0.0323, -0.0474,  0.0239,  0.0353,  0.0363, -0.0129, -0.0529, -0.0142,
          0.0656,  0.0685,  0.0248, -0.1681, -0.3175, -0.0389,  0.0275, -0.0307,
          0.8906,  0.2233, -0.2203,  0.0225,  0.0738, -0.1937, -0.0577,  0.0175,
          0.0949, -0.1591, -0.0950,  0.0920, -0.0155,  0.0808, -0.0573, -0.0658]])
para_input = torch.tensor([[ 4.9200e-02,  0.0000e+00,  6.9109e-02,  0.0000e+00, -3.9523e-01,
         -1.2625e-01,  6.6799e-01,  0.0000e+00, -7.4792e-01,  0.0000e+00,
         -7.6328e-02,  2.7877e-01,  3.7091e-02,  1.3595e-02, -1.3930e-01,
         -7.3517e-02, -3.8733e-02, -9.1443e-02, -1.1923e-02,  4.1225e-02,
          3.0363e-01,  9.1545e-02,  1.4786e-01,  1.6779e-01,  9.1781e-02,
          1.1640e-01, -7.9700e-02,  1.5894e-01, -5.5565e-02,  3.6893e-02,
          5.4138e-02, -6.1258e-02,  8.9168e-02, -1.6945e-01, -2.8555e-02,
         -5.7776e-02, -5.9651e-02, -1.0340e-01,  9.9114e-02, -2.1026e-01,
          2.0875e-02,  1.0228e-02, -2.1704e-01, -2.7917e-01,  2.6764e-01,
         -9.6811e-02, -7.5616e-02, -2.9943e-01,  1.8852e+00, -1.3079e+00,
          1.8812e-01, -3.2940e-01, -1.3345e-03,  7.7421e-02,  9.9770e-01,
          8.7876e-02,  2.4302e-01, -4.9756e-02,  7.3784e-01,  4.3755e-01,
          8.6107e-02,  3.0852e-01, -8.1428e-02, -5.1813e-02, -6.9890e-01,
          5.2265e-01,  2.7129e-01, -1.6245e-01, -1.7535e-01, -1.4449e-01,
          5.3179e-01, -4.7199e-01,  6.3907e-02, -5.2939e-02, -2.9306e-02,
         -1.1895e-02, -3.0568e-03,  5.8475e-02,  1.1928e-01,  1.7255e-01,
         -5.7972e-03,  3.3491e-02, -2.0201e-01,  3.2672e-02,  7.1824e-01,
          3.1362e-02, -8.7445e-01, -6.6382e-02, -6.1965e-02, -1.4805e-02,
          1.4597e-02, -6.4299e-02, -7.6069e-02,  1.4933e-01,  1.9267e-02,
          1.3704e-02,  2.8942e-02, -5.5898e-02, -6.0786e-01,  1.9085e-01,
         -3.3666e-02, -8.0323e-03,  6.9632e-02, -1.0036e-01, -4.0757e-01,
          1.1194e-02, -1.0434e-01, -5.8008e-02, -9.2900e-02, -5.2213e-02,
         -2.1612e-02,  7.2834e-02, -1.2189e-01,  3.2657e-01,  4.0898e-02,
         -1.9483e-03,  9.3077e-02, -2.5882e-02,  1.9226e-01, -2.0573e-01]])

para_input = torch.tensor([[-5.8774e-02, -5.1226e-01,  4.0488e-01,  1.6624e-01, -5.1494e-01,
         -7.5673e-01, -1.3557e-01,  6.2479e-02,  1.2138e-01, -4.2287e-01,
         -1.5733e-01,  5.9695e-01,  1.0123e-01, -1.3406e-02, -8.6785e-02,
          2.0762e-01, -2.3154e-02, -7.3850e-02,  8.6752e-02,  1.5819e-01,
          1.2685e-01,  9.0164e-04, -2.5429e-02, -1.5349e-01,  7.2685e-02,
         -7.8346e-02,  4.8970e-02, -4.0164e-02, -3.9844e-02, -1.7075e-01,
          6.5058e-02,  3.5186e-02,  1.2783e-03, -2.2241e-02,  2.3320e-02,
         -6.3466e-02, -1.8932e-01,  1.3748e-01, -1.5921e-01,  7.1796e-03,
          6.8073e-02,  2.3442e-01, -1.1066e-01, -8.8109e-01,  1.4263e+00,
         -3.0114e-01,  1.3629e-01, -7.6636e-02,  2.0478e-01, -3.1243e-01,
         -1.2112e-01,  3.0370e-02, -1.1506e-01,  9.8178e-02,  9.6379e-01,
         -1.1676e-01, -1.9534e-01,  1.2266e-01,  4.9151e-01, -1.8026e+00,
         -1.6494e-01, -1.7513e-01, -1.4888e-01, -1.5705e-02,  1.9004e-01,
          9.2868e-02,  7.0359e-01, -6.5265e-01,  3.6522e-01, -1.1275e-02,
         -7.8391e-01,  2.7506e-01, -5.6957e-01, -1.0640e-02,  3.8151e-01,
         -1.4954e-02, -1.4141e-02, -1.2947e-02, -1.0943e-01, -8.3472e-02,
          4.4003e-02, -1.4505e-01,  2.5993e-01,  4.3754e-02,  1.0209e-01,
         -7.3670e-02,  1.0047e-01,  1.7465e-02, -5.3580e-03, -7.3263e-04,
          4.3678e-02,  5.3398e-04,  1.4069e-01, -3.5407e-02,  1.6006e-01,
          1.2428e-02,  5.3074e-02, -3.8886e-02, -5.2384e-01,  1.1509e-01,
          5.8381e-02,  1.4395e-01,  5.5141e-03, -2.0238e-02, -2.9869e-01,
         -9.2296e-02,  9.4323e-01, -9.6184e-02,  6.1999e-02,  6.7859e-03,
         -2.4659e-03,  7.1380e-02, -6.1613e-02,  8.6191e-03,  2.1260e-01,
         -2.5833e-01,  1.0671e-01, -1.6343e-01, -1.3278e-01,  2.3387e-01]])
para_input = torch.tensor([[ 9.0137e-02,  5.2490e-01, -1.6743e-01, -2.2474e-01, -3.9247e-01,
         -5.0419e-01,  6.4452e-01, -1.8619e-01, -1.0495e-01,  2.3201e-01,
         -2.3696e-01,  5.3986e-01, -6.2470e-02,  3.5945e-02,  1.7914e-01,
         -4.0583e-02, -5.1062e-02,  8.9316e-02,  5.0254e-03,  6.0562e-03,
         -4.4418e-02, -7.0328e-02, -9.0038e-02,  5.7824e-02, -9.5563e-02,
          1.9807e-02, -8.6223e-02, -4.4080e-02, -3.7866e-02,  1.9580e-01,
          8.5126e-02,  1.5078e-03,  7.0287e-02,  3.3626e-01,  3.8093e-02,
          3.9200e-02, -9.3299e-04,  2.4748e-02,  1.2524e-01, -8.8006e-02,
         -2.8624e-02, -6.4086e-02, -6.2648e-02,  2.4574e-02, -7.5805e-02,
         -5.1880e-02,  1.6765e-02,  9.3798e-02, -7.1036e-01,  7.9309e-01,
          2.7599e-02,  3.3485e-01, -5.7509e-01,  1.2628e-01, -1.9368e+00,
          2.2449e-02, -3.1972e-01,  2.0555e-01, -1.1847e+00,  1.4137e-01,
         -1.8290e-01,  4.5478e-01, -5.6060e-01,  1.4940e-01, -2.9259e-01,
          8.9247e-02, -3.1279e-01,  1.5176e-01,  2.1977e-01, -4.6145e-02,
          3.2273e-02, -2.8230e-02, -5.4221e-02, -3.6134e-02,  1.5355e-01,
          8.7199e-02, -4.7530e-02, -1.8235e-02, -2.9225e-02, -1.2548e-01,
          8.7477e-02,  3.5019e-02, -5.1126e-03,  5.0941e-02, -5.0465e-01,
         -6.7973e-02,  5.2185e-01, -3.3743e-02, -5.8090e-02,  4.6002e-02,
         -1.7309e-01,  1.6148e-02, -3.5999e-02, -6.3973e-02, -2.4209e-01,
         -6.7303e-02, -9.7521e-02,  8.1210e-02,  1.0431e+00, -9.3968e-03,
         -2.3300e-01,  1.3627e-01, -3.3997e-02,  1.2277e-02,  8.1127e-01,
         -2.2044e-01, -1.2639e-01,  1.2871e-01, -6.0059e-02, -5.9599e-02,
         -2.1762e-02,  1.0407e-01,  3.2898e-02,  2.0826e-01, -7.5618e-02,
          8.9396e-02, -2.3574e-02, -1.1955e-01,  1.1466e-01, -4.9124e-02]])

### Fe_fm_pd_4neighbour
para_input = torch.tensor([[-5.2736e-01,  3.5617e-01, -5.0052e-01,  1.6044e-01, -7.9102e-01,
          2.3201e-01,  1.2233e-01, -1.4326e-01, -3.7523e-01, -4.6016e-01,
         -3.3698e-01,  2.8494e-01, -1.0092e+00, -3.1703e-02,  6.8307e-01,
          3.5613e-02, -8.0925e-01, -1.2449e+00, -1.6880e-01, -1.2109e-01,
          5.0521e-01,  7.6710e-03,  2.9270e-02, -8.0250e-02,  6.8801e-02,
         -2.3775e-02,  1.4562e-03,  4.7476e-03, -2.1496e-01,  1.5121e-02,
         -2.7325e-02, -4.8633e-02, -9.1380e-02,  9.0212e-02, -4.8712e-03,
          1.0128e-01, -9.6062e-02, -1.7488e-02,  6.1155e-02,  1.1928e-01,
          1.5179e-02,  7.6229e-02,  9.6595e-03,  4.9617e-03,  3.3317e-02,
          1.0961e-01,  7.1123e-02, -3.0127e-02, -1.6231e-03, -2.2411e-02,
         -6.8654e-03, -1.7878e-01, -2.5799e-02,  1.0657e-01, -1.7923e-01,
         -4.9913e-02,  1.1463e-01,  2.1647e-01,  6.8728e-02,  7.5003e-02,
          3.6430e-02,  2.9266e-02,  6.5068e-03,  9.5980e-02,  9.1702e-02,
         -7.4628e-03, -8.0343e-02,  4.7968e-02,  4.4898e-02,  4.8794e-02,
          1.1987e-01, -5.2652e-02,  1.1862e-01, -1.6978e-01, -6.4694e-02,
         -1.1647e-01,  6.0457e-02,  3.1121e-01,  9.3243e-02,  2.2922e-02,
         -2.9591e-03,  3.7003e-02, -2.5025e-02,  1.1916e-01, -2.3706e-02,
         -7.3856e-03,  2.5248e-01,  6.8268e-02, -5.4552e-03, -3.9994e-01,
          2.5225e-01, -7.6653e-02,  4.5029e-01, -2.4175e-01, -1.5140e-01,
         -1.6674e-01,  2.1244e-02,  2.5653e-03, -2.1396e-01,  1.7172e-01,
         -1.0294e-02,  3.4206e-02, -1.4960e-01, -2.2717e-01, -3.2591e-01,
          3.5798e-01, -1.5605e-01,  1.5791e-01, -2.7750e-02,  1.1633e-01,
          7.2018e-03, -5.0842e-02, -2.3828e-01,  2.9350e-01, -3.0489e-04,
          1.3722e-01,  4.8422e-01, -1.6193e-01, -1.4485e-01, -5.9806e-02,
         -7.8733e-03,  5.1707e-02,  2.7570e-02,  2.2942e-02,  2.8981e-02,
         -1.4952e-01, -4.7131e-03,  4.4809e-01, -6.0736e-01,  1.5419e-02,
         -1.0095e-01, -1.6596e-01,  1.2210e+00, -1.0684e+00, -1.3083e-01,
         -1.7484e-01, -4.8014e-01,  4.3024e-01, -9.6914e-02,  1.1411e-01,
         -3.5089e-01,  2.5024e-01, -7.5418e-01,  9.1523e-01, -2.9022e-02,
          3.2092e-01, -1.3959e-03, -7.6960e-02, -6.6337e-01,  3.6047e-01,
         -6.9442e-02,  4.6081e-02,  6.0114e-02, -1.2480e-02,  5.5845e-01,
          1.5923e-01,  8.0872e-02,  2.1815e-01, -1.3431e-01, -1.5564e-01,
         -7.0508e-02,  1.5332e-02,  2.8604e-02,  5.9582e-02,  5.8192e-01,
         -5.0749e-01, -3.9257e-02,  1.0704e-01,  1.0596e-01,  8.5456e-02,
         -2.3715e-02, -9.0646e-02, -1.5095e-01, -9.4058e-02,  1.0941e-02,
          5.4223e-02, -3.0854e-02,  5.1941e-02, -3.0638e-01,  3.8582e-01,
         -1.8427e-01,  6.2938e-02, -3.9824e-02, -6.9941e-02,  1.1825e-02,
          1.9487e-01,  8.5866e-02, -1.3320e-01, -2.4478e-01,  1.4374e-01,
          1.1578e-01, -1.9679e-02, -1.2793e-01,  1.9653e-01,  6.9695e-02,
         -4.7462e-02,  5.0294e-02,  1.0467e-01, -2.8370e-02,  7.3162e-02,
          1.3478e-01,  1.6569e-02, -1.6288e-01, -3.7493e-02,  9.7889e-02,
         -2.9885e-01,  8.8857e-02,  4.6263e-02, -1.9345e-02, -1.3354e-01,
          1.5519e-01,  6.3833e-01,  2.0109e+00,  3.2884e-02, -1.0244e-01,
          1.7584e-01, -1.6350e-01,  1.5215e-01,  7.2950e-02,  1.3000e-01,
         -2.6456e-01, -9.5043e-01,  5.3975e-01, -1.1040e-01, -2.1897e-01,
         -1.9325e-01, -8.7085e-02, -1.0207e-01,  7.6069e-02, -3.1953e-02,
         -2.1105e-02,  2.0317e-02,  1.4318e-01, -1.1970e-01,  6.4480e-01,
         -1.0142e-02, -6.5626e-01,  1.1910e-02,  4.9453e-02, -7.6213e-02,
         -7.8753e-02,  4.7757e-02, -1.2130e-01,  6.2649e-02, -2.1172e-01,
          2.0987e-01, -3.4009e-01,  2.0253e-01, -3.6197e-03, -6.4055e-02,
         -3.4161e-02, -3.1062e-02,  1.6247e-01, -7.7238e-03,  5.5151e-01,
          1.0351e-02, -5.0840e-01, -1.1637e-01, -2.0612e-01,  1.8081e-01,
          7.8355e-02, -5.3351e-02, -1.8420e-01, -1.3760e-01, -1.2121e-01,
         -2.1241e-02,  7.2787e-04,  1.2310e-03,  2.7702e-01,  4.6986e-01]])


threshold = 1e-2
para_input = torch.where(abs(para_input) < threshold, torch.tensor(0.0), para_input)

band.init_calculate_model("/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/Fe_fm_pd_4neighbour.pkl",
                              para = para_input
                              )
# band.plot_model(band.content['k_vector'],save_path="/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/calculate_band.png",
#                     select_band=model_index
#                     )

print(para_input.shape)
band.plot_compare(band.content['k_vector'],save_path="/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/compare.png",
                  model_index=model_index,band_index=band_index,title="Fe_fm_pd_4neighbour")