band_index: [5, 6, 7, 8]
model_index [0, 1, 2, 3, 4, 5, 6, 7]
mask: []
neighbour_list [2]
0 特征值优化 tensor(17.4634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[1.0010, 1.0010, 1.0010, 1.0010, 1.0010, 1.0010, 1.0010, 1.0010, 1.0010,
         1.0010, 1.0010, 1.0010, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990]], device='cuda:0') 0
1000 特征值优化 tensor(1.7000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8817e+00,  1.9088e+00, -1.1820e-01, -2.3441e-01,  1.1199e+00,
          1.6237e-02,  9.7316e-01,  2.2091e+00, -1.6942e-01, -1.1086e-01,
          1.4529e+00, -2.3133e-01,  2.5252e-01,  3.6316e-01,  2.2940e-01,
          3.0990e-01,  2.6704e-01,  4.0307e-01,  4.5537e-01,  4.7137e-01,
          3.9755e-01,  8.4672e-02,  1.1695e-01,  2.3033e-01,  1.8519e-01,
          2.2414e-01,  6.8662e-03,  2.0395e-01,  9.5996e-02,  2.1199e-01,
         -1.7261e-03, -2.0562e-03,  2.7577e-01,  6.4602e-02,  3.3921e-02,
          4.9557e-02,  1.8130e-01,  4.2581e-01,  1.2973e-01,  2.5773e-01,
          1.6585e-01,  1.3054e-01]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
2000 特征值优化 tensor(1.0824, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5177,  1.3868, -0.1162, -0.7929,  1.5473, -0.4912,  0.3168,  2.7455,
         -0.3057, -0.3991,  1.4194, -0.6003,  0.1865,  0.3856,  0.2963,  0.2173,
          0.0142, -0.0794,  0.3990,  0.5652,  0.4483,  0.0057, -0.1357,  0.0859,
          0.1106,  0.1740,  0.1000,  0.1907,  0.1073,  0.2193, -0.0216, -0.1748,
          0.2984,  0.0496,  0.0113,  0.0466,  0.0478,  0.1765,  0.1075,  0.2725,
          0.0882,  0.0900]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
3000 特征值优化 tensor(1.0994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5153,  1.2094, -0.1092, -0.8114,  1.5390, -0.4784,  0.2396,  2.7515,
         -0.2557, -0.4031,  1.4425, -0.6614,  0.1612,  0.3341,  0.3018,  0.2327,
          0.1313, -0.1770,  0.2657,  0.5744,  0.4519,  0.0044, -0.1917,  0.1170,
          0.0261,  0.1056,  0.1498,  0.1584,  0.1009,  0.2213, -0.0207, -0.2172,
          0.2517,  0.0435,  0.0132,  0.0420,  0.0946,  0.1880,  0.1172,  0.2729,
          0.0230,  0.0809]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
4000 特征值优化 tensor(1.0010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4256e+00,  1.0346e+00,  2.3805e-02, -7.0421e-01,  1.5432e+00,
         -6.1425e-01,  2.6881e-01,  2.7260e+00, -2.0185e-01, -5.9721e-01,
          1.3847e+00, -1.0105e+00,  1.4545e-01,  2.4568e-01,  2.1190e-01,
          2.5796e-01,  2.7212e-01, -2.5875e-01,  2.9833e-01,  5.1970e-01,
          4.2901e-01, -5.9880e-04, -2.1842e-01,  7.6051e-02, -8.3458e-02,
          6.1606e-02,  1.7181e-01,  4.7352e-02,  8.2852e-02,  2.1877e-01,
         -2.1446e-02, -2.1358e-01,  2.4908e-01,  6.6871e-02, -4.0245e-02,
          7.7285e-02,  4.1101e-02,  1.6944e-01,  1.3531e-01,  2.3931e-01,
          9.0487e-02,  3.7761e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
5000 特征值优化 tensor(0.9910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3060e+00,  9.1771e-01,  2.0143e-02, -7.0308e-01,  1.5467e+00,
         -6.1043e-01,  2.2464e-01,  2.7325e+00, -1.8330e-01, -6.0841e-01,
          1.3472e+00, -1.0227e+00,  1.2289e-01,  2.6357e-01,  2.6836e-01,
          2.7354e-01,  2.6156e-01, -2.6671e-01,  2.7327e-01,  5.0787e-01,
          4.0477e-01, -1.3280e-03, -2.4817e-01,  7.7887e-02, -1.0424e-01,
          1.3243e-02,  1.3369e-01,  8.4316e-02,  8.2820e-02,  2.1803e-01,
         -2.1612e-02, -2.3535e-01,  2.2601e-01,  6.6760e-02, -3.6417e-02,
          7.4538e-02,  7.6727e-02,  1.6971e-01,  1.3740e-01,  2.3830e-01,
          3.9343e-02,  3.6115e-02]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
6000 特征值优化 tensor(0.9963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2120e+00,  8.2023e-01,  2.5179e-02, -7.0714e-01,  1.5466e+00,
         -6.1294e-01,  2.7041e-01,  2.6826e+00, -1.9209e-01, -6.0279e-01,
          1.3353e+00, -1.0189e+00,  1.0754e-01,  2.5528e-01,  2.5844e-01,
          2.2741e-01,  1.8316e-01, -3.5464e-01,  3.3876e-01,  4.9647e-01,
          3.8991e-01, -1.6840e-03, -2.4299e-01,  1.1499e-01, -9.3575e-02,
          5.4026e-02,  1.5454e-01,  4.1934e-02,  8.2280e-02,  2.1806e-01,
         -2.1654e-02, -2.1165e-01,  2.4986e-01,  6.6870e-02, -2.4416e-02,
          8.4190e-02,  2.2955e-02,  1.5990e-01,  1.3769e-01,  2.3851e-01,
          9.8617e-02,  3.5915e-02]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
7000 特征值优化 tensor(0.9951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1983e+00,  8.0690e-01,  2.2673e-02, -7.0937e-01,  1.5464e+00,
         -6.1249e-01,  2.2256e-01,  2.6887e+00, -1.7623e-01, -6.0511e-01,
          1.3070e+00, -1.0301e+00,  1.0540e-01,  2.4920e-01,  2.5203e-01,
          2.8194e-01,  2.6258e-01, -2.6508e-01,  2.7235e-01,  4.9413e-01,
          3.8776e-01, -2.1034e-03, -2.5611e-01,  7.4306e-02, -1.2262e-01,
         -1.0278e-02,  1.2003e-01,  1.0843e-01,  8.2212e-02,  2.1793e-01,
         -2.1335e-02, -2.3657e-01,  2.2422e-01,  6.6927e-02, -3.8069e-02,
          7.5171e-02,  5.0018e-02,  1.6508e-01,  1.3578e-01,  2.3832e-01,
          5.4481e-02,  3.7899e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
8000 特征值优化 tensor(1.0063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1960e+00,  7.9670e-01,  4.4904e-02, -7.0226e-01,  1.5421e+00,
         -6.1157e-01,  2.5838e-01,  2.6417e+00, -1.8643e-01, -6.0387e-01,
          1.2982e+00, -1.0275e+00,  1.0359e-01,  2.5702e-01,  2.6849e-01,
          2.5161e-01,  2.4008e-01, -2.9195e-01,  2.9954e-01,  4.9573e-01,
          3.8692e-01,  2.6842e-04, -2.1540e-01,  9.2675e-02, -9.6819e-02,
          4.1124e-02,  1.3559e-01,  7.1545e-02,  8.2292e-02,  2.2194e-01,
         -2.1471e-02, -2.2025e-01,  2.3513e-01,  6.6343e-02, -3.2297e-02,
          7.9660e-02, -2.8904e-03,  1.6107e-01,  1.3444e-01,  2.3906e-01,
          1.1324e-01,  3.9151e-02]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
9000 特征值优化 tensor(1.0001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1966,  0.8055,  0.0425, -0.7289,  1.5462, -0.6125,  0.2374,  2.6273,
         -0.1891, -0.5984,  1.2686, -1.0198,  0.1053,  0.2487,  0.2536,  0.2253,
          0.2103, -0.3237,  0.3184,  0.4946,  0.3874, -0.0061, -0.2330,  0.0927,
         -0.0990,  0.0459,  0.1480,  0.0665,  0.0784,  0.2221, -0.0216, -0.2085,
          0.2427,  0.0667, -0.0256,  0.0841,  0.0408,  0.1674,  0.1349,  0.2392,
          0.0781,  0.0383]], device='cuda:0') tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
10000 特征值优化 tensor(0.9966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1962,  0.8054,  0.0397, -0.7310,  1.5403, -0.6112,  0.2084,  2.6191,
         -0.1744, -0.6013,  1.2330, -1.0314,  0.1050,  0.2543,  0.2712,  0.2764,
          0.2856, -0.2527,  0.2492,  0.4964,  0.3875, -0.0057, -0.2490,  0.0745,
         -0.1137,  0.0075,  0.1356,  0.0944,  0.0785,  0.2224, -0.0207, -0.2266,
          0.2249,  0.0667, -0.0383,  0.0750,  0.0394,  0.1619,  0.1342,  0.2387,
          0.0668,  0.0393]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
11000 特征值优化 tensor(0.9910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1963,  0.8036,  0.0447, -0.7264,  1.5445, -0.6134,  0.1909,  2.6076,
         -0.1826, -0.5998,  1.1463, -1.0278,  0.1045,  0.2427,  0.2521,  0.1926,
          0.2095, -0.3445,  0.3117,  0.4945,  0.3873, -0.0052, -0.2342,  0.1063,
         -0.0865,  0.0626,  0.1766,  0.0362,  0.0783,  0.2226, -0.0216, -0.1892,
          0.2464,  0.0669, -0.0161,  0.0870, -0.0115,  0.1433,  0.1350,  0.2390,
          0.1054,  0.0386]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
12000 特征值优化 tensor(0.9896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1965,  0.8069,  0.0406, -0.7316,  1.5425, -0.6106,  0.1401,  2.5781,
         -0.1661, -0.5962,  1.1222, -1.0389,  0.1049,  0.2492,  0.2671,  0.2812,
          0.3056, -0.2576,  0.2168,  0.4960,  0.3872, -0.0057, -0.2591,  0.0750,
         -0.1262, -0.0179,  0.1317,  0.1055,  0.0780,  0.2217, -0.0213, -0.2324,
          0.2062,  0.0669, -0.0357,  0.0752,  0.0704,  0.1536,  0.1310,  0.2392,
          0.0109,  0.0421]], device='cuda:0') tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
13000 特征值优化 tensor(1.0008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1941,  0.8037,  0.0406, -0.7303,  1.5474, -0.6114,  0.1820,  2.5157,
         -0.1711, -0.5990,  1.1010, -1.0354,  0.1050,  0.2536,  0.2853,  0.2466,
          0.2841, -0.2778,  0.2433,  0.4941,  0.3871, -0.0058, -0.2396,  0.0831,
         -0.1016,  0.0357,  0.1421,  0.0839,  0.0778,  0.2226, -0.0212, -0.2118,
          0.2239,  0.0670, -0.0391,  0.0757,  0.0036,  0.1467,  0.1325,  0.2392,
          0.0822,  0.0404]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
14000 特征值优化 tensor(0.9978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1970,  0.8059,  0.0427, -0.7265,  1.5443, -0.6126,  0.1605,  2.5021,
         -0.1726, -0.5980,  1.0573, -1.0373,  0.1048,  0.2462,  0.2778,  0.1989,
          0.2279, -0.3290,  0.2683,  0.4948,  0.3876, -0.0054, -0.2345,  0.1009,
         -0.1036,  0.0451,  0.1509,  0.0648,  0.0791,  0.2222, -0.0216, -0.1978,
          0.2303,  0.0669, -0.0152,  0.0841,  0.0237,  0.1460,  0.1329,  0.2393,
          0.0549,  0.0411]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
15000 特征值优化 tensor(0.9932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1955,  0.8065,  0.0409, -0.7320,  1.5465, -0.6102,  0.1234,  2.4984,
         -0.1609, -0.5918,  1.0223, -1.0442,  0.1054,  0.2482,  0.2662,  0.2737,
          0.3090, -0.2514,  0.2209,  0.4958,  0.3873, -0.0061, -0.2566,  0.0745,
         -0.1236, -0.0091,  0.1322,  0.1052,  0.0776,  0.2221, -0.0214, -0.2187,
          0.2098,  0.0668, -0.0355,  0.0756,  0.0428,  0.1442,  0.1289,  0.2397,
          0.0198,  0.0442]], device='cuda:0') tensor(0.2070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
16000 特征值优化 tensor(1.0059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2003,  0.7973,  0.0517, -0.7148,  1.5254, -0.6058,  0.1588,  2.4558,
         -0.1789, -0.5940,  1.0001, -1.0450,  0.1037,  0.2418,  0.2787,  0.2222,
          0.2628, -0.2996,  0.2538,  0.4976,  0.3878, -0.0041, -0.2161,  0.0950,
         -0.0968,  0.0476,  0.1360,  0.0712,  0.0781,  0.2245, -0.0199, -0.2002,
          0.2184,  0.0656, -0.0326,  0.0786, -0.0206,  0.1389,  0.1294,  0.2410,
          0.0842,  0.0452]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
17000 特征值优化 tensor(0.9973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1978,  0.8063,  0.0414, -0.7257,  1.5444, -0.6098,  0.1349,  2.4498,
         -0.1649, -0.5924,  0.9672, -1.0422,  0.1051,  0.2455,  0.2712,  0.1946,
          0.2219, -0.3349,  0.2777,  0.4948,  0.3871, -0.0050, -0.2340,  0.1011,
         -0.1008,  0.0479,  0.1523,  0.0614,  0.0784,  0.2221, -0.0215, -0.1969,
          0.2228,  0.0666, -0.0160,  0.0855,  0.0133,  0.1373,  0.1301,  0.2396,
          0.0479,  0.0435]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
18000 特征值优化 tensor(0.9952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1970,  0.8066,  0.0399, -0.7320,  1.5459, -0.6101,  0.1003,  2.4461,
         -0.1542, -0.5867,  0.9400, -1.0513,  0.1048,  0.2448,  0.2652,  0.2680,
          0.3076, -0.2545,  0.2091,  0.4961,  0.3877, -0.0060, -0.2555,  0.0744,
         -0.1250, -0.0086,  0.1320,  0.1056,  0.0779,  0.2222, -0.0218, -0.2191,
          0.2023,  0.0665, -0.0349,  0.0756,  0.0331,  0.1396,  0.1262,  0.2403,
          0.0177,  0.0470]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
19000 特征值优化 tensor(1.0270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1951,  0.8063,  0.0477, -0.7219,  1.5332, -0.6137,  0.1027,  2.4470,
         -0.1761, -0.5789,  0.8820, -1.0436,  0.1051,  0.2350,  0.2660,  0.1961,
          0.2421, -0.3226,  0.2638,  0.4943,  0.3881, -0.0050, -0.2271,  0.0989,
         -0.0937,  0.0578,  0.1558,  0.0471,  0.0766,  0.2222, -0.0203, -0.1861,
          0.2277,  0.0606, -0.0305,  0.0733, -0.0436,  0.1231,  0.1243,  0.2417,
          0.0764,  0.0447]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
20000 特征值优化 tensor(0.9926, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1955,  0.8048,  0.0491, -0.7161,  1.5454, -0.6125,  0.0800,  2.4199,
         -0.1553, -0.5901,  0.8976, -1.0492,  0.1050,  0.2453,  0.2670,  0.2877,
          0.3406, -0.2326,  0.2004,  0.4962,  0.3874, -0.0054, -0.2406,  0.0961,
         -0.0913,  0.0638,  0.1003,  0.0720,  0.0789,  0.2211, -0.0213, -0.2214,
          0.1939,  0.0669, -0.0349,  0.0766,  0.0617,  0.1330,  0.1277,  0.2400,
         -0.0261,  0.0460]], device='cuda:0') tensor(0.2132, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
21000 特征值优化 tensor(1.0488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1957,  0.8096,  0.0458, -0.7222,  1.5463, -0.6056,  0.0922,  2.4340,
         -0.1680, -0.5757,  0.8258, -1.0377,  0.1061,  0.2352,  0.2669,  0.1814,
          0.2362, -0.3273,  0.2799,  0.4942,  0.3885, -0.0064, -0.2382,  0.0759,
         -0.1052,  0.0266,  0.1762,  0.0682,  0.0782,  0.2225, -0.0209, -0.1730,
          0.2289,  0.0665, -0.0311,  0.0818, -0.0481,  0.1021,  0.1223,  0.2426,
          0.0745,  0.0512]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
22000 特征值优化 tensor(0.9931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1955,  0.8064,  0.0422, -0.7261,  1.5439, -0.6082,  0.0817,  2.3932,
         -0.1564, -0.5863,  0.8485, -1.0466,  0.1053,  0.2489,  0.2852,  0.2852,
          0.3361, -0.2257,  0.1687,  0.4940,  0.3872, -0.0058, -0.2313,  0.0832,
         -0.0999,  0.0456,  0.1386,  0.0724,  0.0777,  0.2222, -0.0214, -0.2164,
          0.1943,  0.0668, -0.0418,  0.0766,  0.0394,  0.1285,  0.1270,  0.2403,
         -0.0057,  0.0462]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
23000 特征值优化 tensor(1.0036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1953,  0.8028,  0.0448, -0.7280,  1.5398, -0.6104,  0.1229,  2.3537,
         -0.1512, -0.5878,  0.8357, -1.0524,  0.1043,  0.2454,  0.2855,  0.2244,
          0.2852, -0.2779,  0.2343,  0.4951,  0.3871, -0.0053, -0.2234,  0.0834,
         -0.1050,  0.0265,  0.1435,  0.0742,  0.0765,  0.2228, -0.0205, -0.2006,
          0.2073,  0.0664, -0.0347,  0.0757, -0.0157,  0.1251,  0.1272,  0.2402,
          0.0589,  0.0463]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
24000 特征值优化 tensor(0.9943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1958,  0.8061,  0.0439, -0.7224,  1.5452, -0.6111,  0.0707,  2.3713,
         -0.1533, -0.5862,  0.8089, -1.0510,  0.1050,  0.2532,  0.2952,  0.2950,
          0.3439, -0.2100,  0.1455,  0.4949,  0.3871, -0.0053, -0.2370,  0.0922,
         -0.0927,  0.0535,  0.1443,  0.0636,  0.0781,  0.2220, -0.0212, -0.2204,
          0.1864,  0.0668, -0.0348,  0.0758,  0.0502,  0.1300,  0.1264,  0.2402,
         -0.0214,  0.0470]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
25000 特征值优化 tensor(1.0218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1968,  0.8063,  0.0526, -0.7201,  1.5292, -0.6074,  0.0917,  2.3708,
         -0.1743, -0.5694,  0.7509, -1.0569,  0.1051,  0.2409,  0.2788,  0.1920,
          0.2541, -0.3111,  0.2398,  0.4943,  0.3877, -0.0055, -0.2299,  0.0841,
         -0.1197,  0.0144,  0.1260,  0.0761,  0.0765,  0.2217, -0.0204, -0.1895,
          0.2146,  0.0590, -0.0302,  0.0719, -0.0502,  0.1111,  0.1229,  0.2408,
          0.0668,  0.0503]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
26000 特征值优化 tensor(0.9979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1955,  0.8052,  0.0391, -0.7265,  1.5456, -0.6115,  0.1005,  2.3404,
         -0.1523, -0.5794,  0.7590, -1.0632,  0.1048,  0.2436,  0.2837,  0.1816,
          0.2326, -0.3246,  0.2517,  0.4951,  0.3870, -0.0055, -0.2352,  0.0802,
         -0.1018,  0.0314,  0.1361,  0.0862,  0.0786,  0.2217, -0.0212, -0.1844,
          0.2145,  0.0666, -0.0123,  0.0851,  0.0051,  0.1234,  0.1215,  0.2416,
          0.0273,  0.0527]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
27000 特征值优化 tensor(0.9920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1956,  0.8068,  0.0452, -0.7260,  1.5444, -0.6104,  0.0704,  2.3510,
         -0.1497, -0.5838,  0.7398, -1.0555,  0.1055,  0.2449,  0.2844,  0.2342,
          0.3001, -0.2574,  0.1894,  0.4953,  0.3876, -0.0055, -0.2317,  0.0893,
         -0.0972,  0.0517,  0.1456,  0.0643,  0.0777,  0.2226, -0.0214, -0.2067,
          0.1921,  0.0668, -0.0352,  0.0755,  0.0257,  0.1193,  0.1247,  0.2406,
         -0.0050,  0.0488]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
28000 特征值优化 tensor(1.0358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1961,  0.8066,  0.0481, -0.7224,  1.5347, -0.6082,  0.0767,  2.3597,
         -0.1653, -0.5660,  0.6954, -1.0537,  0.1058,  0.2423,  0.2837,  0.1597,
          0.2284, -0.3387,  0.2513,  0.4943,  0.3879, -0.0067, -0.2351,  0.0769,
         -0.1201,  0.0044,  0.1313,  0.0857,  0.0755,  0.2213, -0.0204, -0.1796,
          0.2160,  0.0606, -0.0296,  0.0751, -0.0639,  0.1085,  0.1190,  0.2430,
          0.0660,  0.0493]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
29000 特征值优化 tensor(1.0006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1932,  0.8046,  0.0430, -0.7257,  1.5452, -0.6116,  0.1002,  2.3098,
         -0.1529, -0.5755,  0.7349, -1.0631,  0.1046,  0.2397,  0.2835,  0.1798,
          0.2386, -0.3278,  0.2404,  0.4953,  0.3866, -0.0061, -0.2354,  0.0787,
         -0.1061,  0.0344,  0.1373,  0.0805,  0.0789,  0.2227, -0.0213, -0.1836,
          0.2104,  0.0668, -0.0136,  0.0849,  0.0184,  0.1240,  0.1204,  0.2420,
          0.0147,  0.0535]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
30000 特征值优化 tensor(0.9962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1948,  0.8059,  0.0418, -0.7272,  1.5456, -0.6103,  0.0767,  2.3191,
         -0.1471, -0.5816,  0.7155, -1.0581,  0.1053,  0.2428,  0.2927,  0.2291,
          0.3187, -0.2612,  0.1755,  0.4953,  0.3875, -0.0054, -0.2308,  0.0886,
         -0.0974,  0.0530,  0.1471,  0.0639,  0.0777,  0.2224, -0.0216, -0.2078,
          0.1902,  0.0668, -0.0350,  0.0757,  0.0135,  0.1201,  0.1237,  0.2406,
          0.0056,  0.0496]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
31000 特征值优化 tensor(0.9879, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1959,  0.8093,  0.0428, -0.7266,  1.5462, -0.6047,  0.0643,  2.3434,
         -0.1570, -0.5668,  0.6586, -1.0511,  0.1061,  0.2357,  0.2754,  0.1577,
          0.2311, -0.3370,  0.2462,  0.4945,  0.3876, -0.0057, -0.2415,  0.0745,
         -0.1161,  0.0096,  0.1372,  0.0884,  0.0769,  0.2221, -0.0213, -0.1753,
          0.2110,  0.0668, -0.0246,  0.0842, -0.0451,  0.1023,  0.1164,  0.2441,
          0.0526,  0.0587]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
32000 特征值优化 tensor(1.0065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2010,  0.7965,  0.0507, -0.7177,  1.5405, -0.6051,  0.0931,  2.2887,
         -0.1478, -0.5753,  0.7062, -1.0706,  0.1034,  0.2397,  0.2941,  0.1985,
          0.2649, -0.3010,  0.2176,  0.4967,  0.3873, -0.0048, -0.2092,  0.1032,
         -0.1041,  0.0520,  0.1140,  0.0665,  0.0770,  0.2248, -0.0207, -0.1861,
          0.2024,  0.0668, -0.0212,  0.0856,  0.0268,  0.1267,  0.1194,  0.2423,
         -0.0098,  0.0545]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
33000 特征值优化 tensor(0.9948, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1952,  0.8063,  0.0445, -0.7235,  1.5450, -0.6101,  0.0690,  2.3017,
         -0.1414, -0.5784,  0.6765, -1.0631,  0.1049,  0.2420,  0.2953,  0.2373,
          0.3300, -0.2473,  0.1698,  0.4945,  0.3873, -0.0060, -0.2366,  0.0934,
         -0.0940,  0.0551,  0.1448,  0.0613,  0.0777,  0.2229, -0.0214, -0.2070,
          0.1861,  0.0669, -0.0341,  0.0763,  0.0171,  0.1156,  0.1216,  0.2411,
         -0.0033,  0.0517]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
34000 特征值优化 tensor(0.9832, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1950e+00,  8.1055e-01,  4.2549e-02, -7.2627e-01,  1.5456e+00,
         -6.0514e-01,  5.0606e-02,  2.3405e+00, -1.5277e-01, -5.6252e-01,
          5.9822e-01, -1.0567e+00,  1.0596e-01,  2.2634e-01,  2.7268e-01,
          1.4374e-01,  2.4033e-01, -3.4890e-01,  2.4312e-01,  4.9431e-01,
          3.8759e-01, -5.9953e-03, -2.4237e-01,  7.1825e-02, -1.2306e-01,
          1.4851e-03,  1.3228e-01,  9.4621e-02,  7.6916e-02,  2.2260e-01,
         -2.1625e-02, -1.6190e-01,  2.1598e-01,  6.6835e-02, -2.5927e-02,
          8.4078e-02, -7.9033e-02,  9.1618e-02,  1.1373e-01,  2.4421e-01,
          7.3232e-02,  6.1188e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
35000 特征值优化 tensor(0.9950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1943,  0.8046,  0.0396, -0.7261,  1.5442, -0.6121,  0.0782,  2.2906,
         -0.1483, -0.5721,  0.6330, -1.0742,  0.1049,  0.2311,  0.2814,  0.1531,
          0.2413, -0.3506,  0.2258,  0.4957,  0.3869, -0.0062, -0.2349,  0.0763,
         -0.1123,  0.0204,  0.1364,  0.0855,  0.0790,  0.2223, -0.0211, -0.1818,
          0.2049,  0.0666, -0.0120,  0.0852, -0.0196,  0.1102,  0.1165,  0.2430,
          0.0319,  0.0588]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
36000 特征值优化 tensor(0.9891, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1953,  0.8063,  0.0436, -0.7263,  1.5438, -0.6101,  0.0398,  2.3019,
         -0.1398, -0.5751,  0.6212, -1.0663,  0.1050,  0.2312,  0.2952,  0.2177,
          0.3277, -0.2725,  0.1529,  0.4953,  0.3869, -0.0056, -0.2301,  0.0873,
         -0.0990,  0.0534,  0.1468,  0.0666,  0.0773,  0.2225, -0.0212, -0.2140,
          0.1744,  0.0668, -0.0340,  0.0761,  0.0364,  0.1102,  0.1207,  0.2411,
         -0.0371,  0.0529]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
37000 特征值优化 tensor(0.9998, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1937,  0.8026,  0.0393, -0.7274,  1.5466, -0.6106,  0.0818,  2.2606,
         -0.1373, -0.5748,  0.6304, -1.0707,  0.1046,  0.2388,  0.2951,  0.2035,
          0.3036, -0.2775,  0.1823,  0.4943,  0.3865, -0.0063, -0.2384,  0.0838,
         -0.0959,  0.0469,  0.1399,  0.0683,  0.0783,  0.2224, -0.0212, -0.1967,
          0.1914,  0.0669, -0.0396,  0.0761, -0.0153,  0.1126,  0.1202,  0.2412,
          0.0285,  0.0528]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
38000 特征值优化 tensor(0.9925, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1942,  0.8059,  0.0401, -0.7303,  1.5452, -0.6106,  0.0684,  2.2727,
         -0.1444, -0.5689,  0.5932, -1.0739,  0.1052,  0.2328,  0.2846,  0.1456,
          0.2296, -0.3448,  0.2289,  0.4953,  0.3871, -0.0063, -0.2441,  0.0860,
         -0.1087,  0.0214,  0.1482,  0.0703,  0.0778,  0.2227, -0.0215, -0.1783,
          0.2044,  0.0667, -0.0133,  0.0850, -0.0249,  0.1064,  0.1155,  0.2435,
          0.0288,  0.0597]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
39000 特征值优化 tensor(0.9904, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1950,  0.8052,  0.0448, -0.7259,  1.5454, -0.6102,  0.0324,  2.2780,
         -0.1365, -0.5724,  0.5880, -1.0689,  0.1051,  0.2380,  0.2971,  0.2277,
          0.3342, -0.2480,  0.1508,  0.4952,  0.3874, -0.0060, -0.2366,  0.0932,
         -0.0921,  0.0574,  0.1466,  0.0579,  0.0777,  0.2222, -0.0212, -0.2143,
          0.1690,  0.0668, -0.0338,  0.0764,  0.0419,  0.1095,  0.1191,  0.2412,
         -0.0454,  0.0541]], device='cuda:0') tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
40000 特征值优化 tensor(0.9978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1907,  0.8028,  0.0421, -0.7248,  1.5432, -0.6114,  0.0761,  2.2408,
         -0.1338, -0.5720,  0.5903, -1.0715,  0.1045,  0.2282,  0.3019,  0.1944,
          0.3128, -0.2873,  0.1735,  0.4945,  0.3867, -0.0066, -0.2365,  0.0838,
         -0.1008,  0.0471,  0.1400,  0.0696,  0.0786,  0.2229, -0.0208, -0.1903,
          0.1925,  0.0668, -0.0379,  0.0767, -0.0184,  0.1088,  0.1182,  0.2413,
          0.0263,  0.0552]], device='cuda:0') tensor(0.2183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
41000 特征值优化 tensor(0.9911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1954,  0.8056,  0.0394, -0.7286,  1.5441, -0.6109,  0.0599,  2.2614,
         -0.1437, -0.5661,  0.5447, -1.0763,  0.1050,  0.2272,  0.2901,  0.1216,
          0.2247, -0.3749,  0.2326,  0.4951,  0.3872, -0.0060, -0.2389,  0.0731,
         -0.1200,  0.0091,  0.1290,  0.0957,  0.0785,  0.2225, -0.0210, -0.1649,
          0.2099,  0.0667, -0.0126,  0.0852, -0.0545,  0.0986,  0.1138,  0.2436,
          0.0490,  0.0612]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
42000 特征值优化 tensor(1.0013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1902e+00,  8.0351e-01,  4.4851e-02, -7.2456e-01,  1.5422e+00,
         -6.0801e-01,  7.4425e-02,  2.2228e+00, -1.4706e-01, -5.6035e-01,
          5.7523e-01, -1.0687e+00,  1.0451e-01,  2.2774e-01,  3.0148e-01,
          1.5115e-01,  2.5118e-01, -3.4463e-01,  2.0542e-01,  4.9354e-01,
          3.8689e-01, -6.1756e-03, -2.3452e-01,  8.2648e-02, -1.0830e-01,
          3.7354e-02,  1.3003e-01,  8.2992e-02,  7.8198e-02,  2.2204e-01,
         -2.1081e-02, -1.7473e-01,  2.0186e-01,  6.6154e-02, -1.7522e-02,
          8.6824e-02,  7.2255e-03,  1.1284e-01,  1.1306e-01,  2.4362e-01,
          3.3048e-04,  6.1392e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
43000 特征值优化 tensor(0.9911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1941,  0.8052,  0.0447, -0.7268,  1.5447, -0.6098,  0.0348,  2.2477,
         -0.1335, -0.5700,  0.5449, -1.0720,  0.1044,  0.2283,  0.2938,  0.2040,
          0.3195, -0.2753,  0.1552,  0.4943,  0.3872, -0.0060, -0.2308,  0.0906,
         -0.0968,  0.0583,  0.1482,  0.0599,  0.0777,  0.2224, -0.0213, -0.2006,
          0.1780,  0.0668, -0.0388,  0.0762,  0.0121,  0.1051,  0.1178,  0.2415,
         -0.0198,  0.0553]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
44000 特征值优化 tensor(1.0086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2012,  0.7960,  0.0496, -0.7191,  1.5299, -0.6008,  0.0649,  2.2254,
         -0.1449, -0.5664,  0.5415, -1.0802,  0.1036,  0.2242,  0.3018,  0.1657,
          0.2821, -0.3162,  0.1979,  0.4960,  0.3877, -0.0048, -0.2149,  0.0967,
         -0.1196,  0.0235,  0.1163,  0.0719,  0.0820,  0.2231, -0.0197, -0.1822,
          0.1934,  0.0653, -0.0262,  0.0776, -0.0514,  0.1036,  0.1165,  0.2414,
          0.0389,  0.0569]], device='cuda:0') tensor(0.2130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
45000 特征值优化 tensor(0.9931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1912,  0.8033,  0.0434, -0.7261,  1.5415, -0.6064,  0.0504,  2.2304,
         -0.1439, -0.5590,  0.5208, -1.0683,  0.1051,  0.2238,  0.2935,  0.1367,
          0.2391, -0.3598,  0.2114,  0.4940,  0.3871, -0.0057, -0.2406,  0.0767,
         -0.1152,  0.0193,  0.1345,  0.0866,  0.0770,  0.2227, -0.0211, -0.1793,
          0.1948,  0.0669, -0.0192,  0.0859, -0.0277,  0.1018,  0.1114,  0.2442,
          0.0210,  0.0636]], device='cuda:0') tensor(0.2124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
46000 特征值优化 tensor(1.0247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1926,  0.8032,  0.0547, -0.7202,  1.5290, -0.6123,  0.0324,  2.2285,
         -0.1405, -0.5577,  0.5235, -1.0747,  0.1042,  0.2317,  0.3103,  0.2076,
          0.3026, -0.2798,  0.1536,  0.4938,  0.3871, -0.0063, -0.2005,  0.1052,
         -0.0853,  0.0839,  0.1333,  0.0455,  0.0786,  0.2220, -0.0189, -0.1961,
          0.1862,  0.0604, -0.0254,  0.0744,  0.0269,  0.1048,  0.1148,  0.2421,
         -0.0442,  0.0579]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
47000 特征值优化 tensor(0.9947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1937,  0.8044,  0.0432, -0.7266,  1.5429, -0.6105,  0.0397,  2.2138,
         -0.1296, -0.5681,  0.5190, -1.0755,  0.1048,  0.2253,  0.3037,  0.2032,
          0.3364, -0.2686,  0.1420,  0.4953,  0.3870, -0.0060, -0.2320,  0.0888,
         -0.0987,  0.0542,  0.1443,  0.0635,  0.0779,  0.2226, -0.0213, -0.1982,
          0.1762,  0.0668, -0.0336,  0.0762,  0.0062,  0.1033,  0.1165,  0.2417,
         -0.0172,  0.0564]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
48000 特征值优化 tensor(1.0095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1973,  0.7943,  0.0530, -0.7196,  1.5288, -0.5962,  0.0553,  2.2037,
         -0.1468, -0.5622,  0.5006, -1.0825,  0.1031,  0.2215,  0.3008,  0.1632,
          0.2873, -0.3149,  0.1931,  0.4950,  0.3867, -0.0059, -0.2132,  0.0982,
         -0.1174,  0.0251,  0.1195,  0.0686,  0.0816,  0.2233, -0.0197, -0.1806,
          0.1916,  0.0647, -0.0265,  0.0769, -0.0498,  0.1010,  0.1141,  0.2424,
          0.0307,  0.0582]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
49000 特征值优化 tensor(0.9928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1931,  0.8050,  0.0417, -0.7263,  1.5449, -0.6097,  0.0403,  2.2103,
         -0.1373, -0.5601,  0.4746, -1.0809,  0.1051,  0.2233,  0.2868,  0.1421,
          0.2447, -0.3403,  0.2083,  0.4950,  0.3866, -0.0057, -0.2359,  0.0791,
         -0.1111,  0.0262,  0.1384,  0.0813,  0.0779,  0.2226, -0.0214, -0.1714,
          0.1969,  0.0670, -0.0109,  0.0866, -0.0346,  0.0968,  0.1112,  0.2440,
          0.0201,  0.0637]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
50000 特征值优化 tensor(1.0152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2002,  0.7978,  0.0577, -0.7193,  1.5312, -0.6020,  0.0383,  2.1906,
         -0.1423, -0.5517,  0.4930, -1.0896,  0.1027,  0.2275,  0.3143,  0.1858,
          0.3049, -0.2855,  0.1607,  0.4947,  0.3879, -0.0059, -0.2065,  0.1099,
         -0.1014,  0.0471,  0.1129,  0.0535,  0.0824,  0.2224, -0.0197, -0.1878,
          0.1889,  0.0637, -0.0204,  0.0770,  0.0213,  0.1061,  0.1132,  0.2429,
         -0.0414,  0.0604]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
51000 特征值优化 tensor(5.9937, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2895, -0.1875, -0.1290, -0.4787, -0.8131,  0.5621,  2.7334,  1.5222,
         -0.6413, -0.0536, -0.2565,  0.2043,  0.3501, -0.3239, -0.3419,  0.0833,
         -0.2572,  0.1626,  0.3260,  0.6326, -0.1258, -0.2276,  0.0817, -0.2546,
          0.0159,  0.3671, -0.1290, -0.2245,  0.2528,  0.0037,  0.1298, -0.6007,
          0.0300, -0.5797,  0.0302, -0.0806, -0.2670, -0.7011,  0.3466, -0.0068,
         -2.3843,  0.1454]], device='cuda:0') tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
52000 特征值优化 tensor(2.6724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5148e+00, -7.3665e-02,  1.3269e-01, -4.4775e-01, -7.6696e-01,
          6.2525e-01,  2.6030e+00,  2.2963e+00, -1.5784e+00, -7.3594e-01,
          6.7564e-01, -3.7220e-02,  3.7740e-01, -9.4088e-02, -1.6038e-01,
          2.0339e-01,  1.4573e-01,  4.8661e-02,  6.8849e-02,  4.2244e-01,
         -1.1690e-01, -1.5931e-01,  3.1359e-01,  1.2165e-02, -5.3104e-02,
          6.7008e-03,  1.9137e-02, -2.8851e-01,  1.1971e-01, -1.2002e-02,
          7.9493e-02, -3.0261e-01,  1.0302e-01, -2.1798e-01, -3.7430e-02,
         -8.7719e-03, -2.1381e-01, -3.4776e-01,  3.0772e-01, -1.7605e-03,
         -1.3682e+00,  1.7367e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
53000 特征值优化 tensor(1.1891, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4268, -0.2747,  0.3664, -0.6267, -1.1898,  0.5874,  2.9662,  2.3140,
         -1.7400, -0.8273,  1.4148, -0.2742,  0.3715, -0.0136, -0.0344,  0.2641,
          0.2589,  0.0553,  0.0355,  0.4054, -0.1400, -0.1038,  0.2823,  0.0974,
          0.0376,  0.0393,  0.0208, -0.1893,  0.0728, -0.0657,  0.0151, -0.2032,
          0.1507, -0.1820, -0.0493, -0.0056, -0.2957, -0.2113,  0.2069,  0.0334,
         -0.5482,  0.1985]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
54000 特征值优化 tensor(1.1654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3137e+00, -4.5258e-01,  4.6696e-01, -6.3917e-01, -1.2548e+00,
          5.6876e-01,  2.8618e+00,  2.6188e+00, -1.6838e+00, -8.0765e-01,
          1.4279e+00, -2.4302e-01,  3.5758e-01,  1.4237e-02, -2.2138e-02,
          1.7339e-01,  1.4002e-01,  1.4120e-01,  1.3225e-01,  3.8276e-01,
         -1.6369e-01, -1.0856e-01,  2.8364e-01,  8.4617e-02,  3.8821e-02,
          3.4433e-02,  3.5409e-02, -2.1873e-01,  1.4358e-03, -6.2874e-02,
          1.3003e-03, -1.8625e-01,  1.5125e-01, -1.8349e-01, -2.4982e-02,
          3.6605e-02, -3.3353e-01, -1.0794e-01,  2.1860e-01,  2.4802e-02,
         -4.2531e-01,  1.8597e-01]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
55000 特征值优化 tensor(1.1380, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2822e+00, -4.4297e-01,  5.2045e-01, -6.9162e-01, -1.2648e+00,
          5.3254e-01,  2.7445e+00,  2.6768e+00, -1.6945e+00, -8.0848e-01,
          1.4282e+00, -2.7687e-01,  3.5773e-01,  3.9948e-02, -1.8445e-02,
          1.5601e-01,  1.2358e-01,  1.4721e-01,  1.4542e-01,  3.7843e-01,
         -1.5839e-01, -1.1868e-01,  2.2857e-01,  1.3093e-01,  8.2548e-02,
          6.8541e-03, -2.4738e-03, -2.2030e-01, -2.4243e-02, -5.6471e-02,
          2.6535e-03, -2.3868e-01,  1.1919e-01, -1.7921e-01,  3.5307e-02,
          2.0963e-02, -3.6236e-01, -8.7567e-02,  2.2675e-01,  1.6525e-02,
         -3.7560e-01,  1.7842e-01]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
56000 特征值优化 tensor(1.1422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2511, -0.4098,  0.4912, -0.6430, -1.2423,  0.5164,  2.6380,  2.6155,
         -1.6811, -0.8034,  1.4236, -0.2779,  0.3528,  0.0424, -0.0258,  0.1377,
          0.1252,  0.1600,  0.1199,  0.3732, -0.1543, -0.1143,  0.2646,  0.1115,
          0.0737,  0.0236,  0.0172, -0.2162, -0.0088, -0.0624,  0.0051, -0.2159,
          0.1460, -0.1756,  0.0112,  0.0323, -0.3612, -0.0711,  0.2223,  0.0187,
         -0.3457,  0.1815]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
57000 特征值优化 tensor(1.1386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2488, -0.4066,  0.5043, -0.6242, -1.2453,  0.5156,  2.4429,  2.5286,
         -1.6874, -0.8124,  1.4007, -0.2844,  0.3524,  0.0469, -0.0262,  0.1047,
          0.1180,  0.1591,  0.1104,  0.3739, -0.1541, -0.1159,  0.2739,  0.1131,
          0.0859,  0.0192,  0.0173, -0.2152, -0.0131, -0.0649,  0.0048, -0.2316,
          0.1493, -0.1754,  0.0116,  0.0281, -0.3520, -0.0553,  0.2223,  0.0198,
         -0.3289,  0.1833]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
58000 特征值优化 tensor(1.1507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2522e+00, -4.0423e-01,  5.0706e-01, -6.6107e-01, -1.2398e+00,
          5.0035e-01,  2.2780e+00,  2.3844e+00, -1.6654e+00, -8.1244e-01,
          1.3639e+00, -2.7746e-01,  3.5203e-01,  1.1335e-02, -2.2279e-02,
          1.1934e-01,  1.1982e-01,  1.5670e-01,  1.1764e-01,  3.7346e-01,
         -1.5551e-01, -1.1528e-01,  2.8040e-01,  9.4958e-02,  5.1818e-02,
          4.2667e-02,  5.1271e-02, -1.7030e-01,  9.4108e-03, -6.0232e-02,
          4.8929e-03, -2.0082e-01,  1.6095e-01, -1.7547e-01,  2.9057e-04,
         -3.0818e-02, -3.3510e-01, -3.6450e-02,  2.1988e-01,  2.0508e-02,
         -3.2141e-01,  1.8329e-01]], device='cuda:0') tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
59000 特征值优化 tensor(1.1356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2546, -0.4127,  0.5218, -0.6422, -1.2521,  0.5398,  2.1446,  2.3440,
         -1.6768, -0.8253,  1.2857, -0.2905,  0.3533,  0.0363, -0.0388,  0.1122,
          0.1551,  0.1362,  0.0857,  0.3748, -0.1547, -0.1180,  0.3234,  0.1122,
          0.0389,  0.0542,  0.0399, -0.1805,  0.0596, -0.0623,  0.0041, -0.1486,
          0.2170, -0.1814, -0.0413, -0.0092, -0.3337, -0.0250,  0.2113,  0.0288,
         -0.2923,  0.1934]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
60000 特征值优化 tensor(1.1680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2457e+00, -4.0406e-01,  5.1363e-01, -6.6458e-01, -1.2453e+00,
          5.1504e-01,  2.0743e+00,  2.2791e+00, -1.6595e+00, -8.2004e-01,
          1.3049e+00, -2.8358e-01,  3.5152e-01,  3.3794e-02, -1.3329e-02,
          1.1864e-01,  1.2865e-01,  1.4617e-01,  1.2594e-01,  3.7313e-01,
         -1.5427e-01, -1.1561e-01,  2.7353e-01,  1.0163e-01,  6.3631e-02,
          3.2709e-02,  3.9859e-02, -1.9568e-01, -1.8925e-03, -5.9694e-02,
          3.6323e-03, -2.1692e-01,  1.4861e-01, -1.7486e-01,  1.9475e-02,
         -4.4703e-03, -3.0089e-01, -2.5427e-02,  2.2332e-01,  1.9704e-02,
         -3.0633e-01,  1.8090e-01]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
61000 特征值优化 tensor(1.1453, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2494e+00, -4.0603e-01,  5.0796e-01, -6.2668e-01, -1.2392e+00,
          5.0931e-01,  2.0592e+00,  2.2932e+00, -1.6626e+00, -8.2429e-01,
          1.2617e+00, -2.8698e-01,  3.5211e-01,  3.6613e-02, -2.0408e-02,
          1.1659e-01,  1.3245e-01,  1.4098e-01,  1.2490e-01,  3.7295e-01,
         -1.5460e-01, -1.1606e-01,  2.7784e-01,  1.1292e-01,  8.1302e-02,
          2.5891e-02,  2.4562e-02, -2.1465e-01, -2.2020e-03, -6.4140e-02,
          5.1248e-03, -1.8199e-01,  1.5282e-01, -1.7464e-01,  1.1971e-02,
          3.3134e-02, -3.1247e-01, -2.0904e-02,  2.2134e-01,  2.0581e-02,
         -2.9899e-01,  1.8305e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
62000 特征值优化 tensor(1.1360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2490, -0.4052,  0.5203, -0.6389, -1.2575,  0.5370,  2.0774,  2.2607,
         -1.6692, -0.8222,  1.2386, -0.3014,  0.3527,  0.0316, -0.0326,  0.1093,
          0.1489,  0.1436,  0.0864,  0.3745, -0.1539, -0.1176,  0.3035,  0.1286,
          0.0524,  0.0596,  0.0282, -0.1761,  0.0472, -0.0626,  0.0029, -0.1651,
          0.2018, -0.1806, -0.0324, -0.0164, -0.3229, -0.0177,  0.2155,  0.0257,
         -0.2762,  0.1904]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
63000 特征值优化 tensor(1.1384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2501, -0.4088,  0.5197, -0.6337, -1.2544,  0.5238,  2.0521,  2.2665,
         -1.6741, -0.8294,  1.2164, -0.2994,  0.3530,  0.0132, -0.0344,  0.1137,
          0.1347,  0.1600,  0.1055,  0.3744, -0.1545, -0.1182,  0.3092,  0.1191,
          0.0861,  0.0593,  0.0328, -0.1704,  0.0375, -0.0635,  0.0037, -0.1604,
          0.1895, -0.1763, -0.0229, -0.0196, -0.3185, -0.0145,  0.2285,  0.0135,
         -0.2854,  0.1765]], device='cuda:0') tensor(0.2139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
64000 特征值优化 tensor(1.1363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2492, -0.4060,  0.5182, -0.6351, -1.2546,  0.5446,  2.0454,  2.2464,
         -1.6707, -0.8324,  1.1975, -0.2979,  0.3524,  0.0307, -0.0266,  0.1206,
          0.1458,  0.1467,  0.1074,  0.3746, -0.1543, -0.1173,  0.3252,  0.1108,
          0.0707,  0.0574,  0.0387, -0.1719,  0.0395, -0.0632,  0.0028, -0.1593,
          0.1930, -0.1797, -0.0223, -0.0099, -0.3177, -0.0125,  0.2277,  0.0165,
         -0.2812,  0.1779]], device='cuda:0') tensor(0.2162, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
65000 特征值优化 tensor(1.1426, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2510, -0.4105,  0.5129, -0.6276, -1.2531,  0.5234,  2.0240,  2.2436,
         -1.6716, -0.8269,  1.1775, -0.3045,  0.3535,  0.0288, -0.0381,  0.1083,
          0.1428,  0.1515,  0.1036,  0.3751, -0.1540, -0.1176,  0.3175,  0.1130,
          0.0688,  0.0467,  0.0439, -0.1771,  0.0264, -0.0645,  0.0041, -0.1547,
          0.1859, -0.1765, -0.0205, -0.0199, -0.3115, -0.0118,  0.2256,  0.0173,
         -0.2853,  0.1797]], device='cuda:0') tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
66000 特征值优化 tensor(1.1427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2490, -0.4077,  0.5186, -0.6300, -1.2521,  0.5238,  2.0065,  2.2317,
         -1.6703, -0.8284,  1.1667, -0.3067,  0.3531,  0.0115, -0.0308,  0.1175,
          0.1367,  0.1577,  0.1103,  0.3734, -0.1537, -0.1180,  0.3222,  0.1105,
          0.0719,  0.0453,  0.0459, -0.1766,  0.0278, -0.0641,  0.0040, -0.1562,
          0.1799, -0.1783, -0.0188, -0.0214, -0.3079, -0.0111,  0.2257,  0.0178,
         -0.2847,  0.1804]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
67000 特征值优化 tensor(1.1517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2510, -0.4095,  0.5034, -0.6419, -1.2415,  0.5092,  1.9830,  2.2080,
         -1.6538, -0.8201,  1.1799, -0.2980,  0.3529,  0.0183, -0.0229,  0.1213,
          0.1322,  0.1523,  0.1178,  0.3737, -0.1545, -0.1161,  0.3082,  0.1111,
          0.0589,  0.0304,  0.0380, -0.1830,  0.0079, -0.0623,  0.0058, -0.1749,
          0.1562, -0.1743, -0.0066, -0.0225, -0.2960, -0.0115,  0.2198,  0.0202,
         -0.2931,  0.1830]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
68000 特征值优化 tensor(1.1346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3329, -0.4317,  0.5061, -0.6631, -1.2520,  0.5236,  1.9191,  2.2281,
         -1.6664, -0.8304,  1.1570, -0.2971,  0.3562,  0.0492, -0.0063,  0.1607,
          0.1333,  0.1546,  0.1336,  0.3869, -0.1653, -0.1152,  0.2709,  0.1024,
          0.0786,  0.0121,  0.0305, -0.2124, -0.0135, -0.0597,  0.0026, -0.2080,
          0.1231, -0.1765,  0.0279,  0.0240, -0.2742, -0.0215,  0.2156,  0.0259,
         -0.2912,  0.1911]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
69000 特征值优化 tensor(1.1514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3230, -0.4260,  0.5055, -0.6187, -1.2398,  0.5018,  1.9186,  2.1966,
         -1.6503, -0.8260,  1.1242, -0.2858,  0.3542,  0.0432, -0.0227,  0.1638,
          0.1493,  0.1370,  0.1397,  0.3829, -0.1637, -0.1153,  0.2931,  0.1153,
          0.0946,  0.0447,  0.0321, -0.1924,  0.0171, -0.0656,  0.0045, -0.1721,
          0.1662, -0.1754, -0.0063,  0.0190, -0.2928, -0.0180,  0.2223,  0.0201,
         -0.2633,  0.1822]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
70000 特征值优化 tensor(1.1384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3335, -0.4257,  0.5123, -0.6343, -1.2559,  0.5247,  1.8970,  2.1798,
         -1.6655, -0.8287,  1.1038, -0.3043,  0.3568,  0.0268, -0.0227,  0.1616,
          0.1465,  0.1396,  0.1338,  0.3896, -0.1639, -0.1165,  0.3236,  0.1052,
          0.0738,  0.0419,  0.0452, -0.1738,  0.0329, -0.0632,  0.0027, -0.1562,
          0.1772, -0.1780, -0.0205, -0.0216, -0.2903, -0.0135,  0.2259,  0.0176,
         -0.2627,  0.1808]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
71000 特征值优化 tensor(1.1594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3248, -0.4293,  0.5166, -0.6596, -1.2409,  0.4998,  1.8493,  2.1579,
         -1.6458, -0.8339,  1.1234, -0.2893,  0.3549,  0.0388, -0.0038,  0.1484,
          0.1252,  0.1659,  0.1349,  0.3851, -0.1641, -0.1157,  0.2832,  0.1002,
          0.0520,  0.0230,  0.0487, -0.1949, -0.0059, -0.0604,  0.0031, -0.2018,
          0.1354, -0.1760,  0.0146, -0.0105, -0.2622, -0.0176,  0.2181,  0.0238,
         -0.2816,  0.1864]], device='cuda:0') tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
72000 特征值优化 tensor(1.1333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3300, -0.4263,  0.5050, -0.6635, -1.2493,  0.5234,  1.8121,  2.1430,
         -1.6640, -0.8352,  1.1099, -0.3072,  0.3563,  0.0528, -0.0032,  0.1461,
          0.1262,  0.1488,  0.1415,  0.3895, -0.1640, -0.1153,  0.2684,  0.1023,
          0.0759,  0.0082,  0.0275, -0.2152, -0.0149, -0.0598,  0.0036, -0.2128,
          0.1194, -0.1762,  0.0306,  0.0200, -0.2575, -0.0131,  0.2160,  0.0259,
         -0.2826,  0.1908]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
73000 特征值优化 tensor(1.1678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3351, -0.4165,  0.5034, -0.6388, -1.2439,  0.5145,  1.8050,  2.1022,
         -1.6472, -0.8322,  1.0427, -0.2994,  0.3566,  0.0280, -0.0277,  0.1677,
          0.1468,  0.1437,  0.1305,  0.3863, -0.1621, -0.1145,  0.3026,  0.1161,
          0.0895,  0.0423,  0.0290, -0.1814,  0.0287, -0.0628,  0.0032, -0.1509,
          0.1789, -0.1756, -0.0232,  0.0060, -0.2850, -0.0047,  0.2239,  0.0201,
         -0.2517,  0.1813]], device='cuda:0') tensor(0.2140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
74000 特征值优化 tensor(1.1389, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3397, -0.4201,  0.5117, -0.6319, -1.2486,  0.5249,  1.7485,  2.0775,
         -1.6622, -0.8346,  0.9920, -0.3136,  0.3575,  0.0295, -0.0352,  0.1618,
          0.1437,  0.1398,  0.1288,  0.3871, -0.1632, -0.1162,  0.3241,  0.1061,
          0.0769,  0.0437,  0.0431, -0.1720,  0.0317, -0.0640,  0.0036, -0.1410,
          0.1805, -0.1783, -0.0262, -0.0197, -0.2765,  0.0039,  0.2270,  0.0168,
         -0.2515,  0.1798]], device='cuda:0') tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
75000 特征值优化 tensor(1.1321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3340e+00, -4.2294e-01,  5.0947e-01, -6.7079e-01, -1.2550e+00,
          5.2151e-01,  1.6945e+00,  2.0183e+00, -1.6567e+00, -8.3969e-01,
          1.0301e+00, -3.1289e-01,  3.5627e-01,  6.7953e-02,  9.1373e-04,
          1.4272e-01,  1.2641e-01,  1.5194e-01,  1.3084e-01,  3.9047e-01,
         -1.6310e-01, -1.1606e-01,  2.7021e-01,  1.0152e-01,  7.0537e-02,
          3.9735e-03,  2.9837e-02, -2.1809e-01, -1.9567e-02, -5.8936e-02,
          2.8493e-03, -2.1004e-01,  1.3058e-01, -1.7774e-01,  3.4467e-02,
          1.8356e-02, -2.3071e-01, -2.7240e-03,  2.1447e-01,  2.6981e-02,
         -2.7625e-01,  1.9224e-01]], device='cuda:0') tensor(0.2130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
76000 特征值优化 tensor(1.1358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3379, -0.4270,  0.4926, -0.6509, -1.2543,  0.5095,  1.6519,  2.0345,
         -1.6506, -0.8411,  0.9865, -0.3084,  0.3572,  0.0457, -0.0145,  0.1465,
          0.1369,  0.1453,  0.1293,  0.3918, -0.1641, -0.1131,  0.2689,  0.0999,
          0.0899,  0.0221,  0.0243, -0.2081, -0.0088, -0.0616,  0.0021, -0.1953,
          0.1222, -0.1731,  0.0212,  0.0291, -0.2521,  0.0074,  0.2158,  0.0262,
         -0.2631,  0.1912]], device='cuda:0') tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
77000 特征值优化 tensor(1.1485, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3351, -0.4181,  0.5045, -0.6197, -1.2402,  0.5005,  1.6663,  2.0051,
         -1.6354, -0.8394,  0.9594, -0.3007,  0.3560,  0.0389, -0.0279,  0.1610,
          0.1431,  0.1406,  0.1318,  0.3858, -0.1626, -0.1151,  0.2916,  0.1118,
          0.0998,  0.0382,  0.0324, -0.1931,  0.0143, -0.0653,  0.0045, -0.1557,
          0.1543, -0.1754, -0.0042,  0.0199, -0.2619,  0.0082,  0.2210,  0.0208,
         -0.2474,  0.1829]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
78000 特征值优化 tensor(1.1350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3367, -0.4252,  0.5124, -0.6359, -1.2548,  0.5272,  1.6608,  1.9923,
         -1.6526, -0.8474,  0.9379, -0.3185,  0.3573,  0.0132, -0.0316,  0.1482,
          0.1441,  0.1440,  0.1207,  0.3891, -0.1637, -0.1161,  0.3181,  0.1065,
          0.0811,  0.0484,  0.0397, -0.1743,  0.0372, -0.0631,  0.0027, -0.1476,
          0.1773, -0.1788, -0.0229, -0.0205, -0.2613,  0.0120,  0.2269,  0.0174,
         -0.2412,  0.1806]], device='cuda:0') tensor(0.2157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
79000 特征值优化 tensor(1.1423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3353, -0.4261,  0.5092, -0.6421, -1.2553,  0.5200,  1.6253,  1.9888,
         -1.6382, -0.8398,  0.9289, -0.3124,  0.3567,  0.0180, -0.0201,  0.1429,
          0.1300,  0.1503,  0.1302,  0.3905, -0.1639, -0.1150,  0.3126,  0.1025,
          0.0656,  0.0330,  0.0396, -0.1819,  0.0158, -0.0625,  0.0020, -0.1497,
          0.1548, -0.1769, -0.0073, -0.0231, -0.2544,  0.0140,  0.2226,  0.0195,
         -0.2525,  0.1825]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
80000 特征值优化 tensor(1.1325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3673, -0.3759,  0.5036, -0.6503, -1.2487,  0.5092,  1.4888,  1.8907,
         -1.6511, -0.8460,  0.8989, -0.3243,  0.3630,  0.0585, -0.0120,  0.1651,
          0.1294,  0.1356,  0.1648,  0.3955, -0.1538, -0.1153,  0.2676,  0.1023,
          0.0906,  0.0192,  0.0235, -0.2165, -0.0051, -0.0613,  0.0039, -0.1989,
          0.1184, -0.1738,  0.0227,  0.0226, -0.2246,  0.0189,  0.2166,  0.0251,
         -0.2541,  0.1902]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
81000 特征值优化 tensor(1.1403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3641e+00, -3.7919e-01,  5.0357e-01, -6.1862e-01, -1.2454e+00,
          4.9460e-01,  1.4028e+00,  1.8174e+00, -1.6341e+00, -8.4009e-01,
          8.0643e-01, -3.1379e-01,  3.6296e-01,  4.0868e-02, -1.5519e-02,
          1.7472e-01,  1.5239e-01,  1.2467e-01,  1.5706e-01,  3.9374e-01,
         -1.5390e-01, -1.1517e-01,  2.8238e-01,  1.0076e-01,  9.8026e-02,
          3.7513e-02,  2.7083e-02, -2.0884e-01,  1.8165e-03, -6.5332e-02,
          3.7496e-03, -1.6495e-01,  1.3373e-01, -1.7171e-01,  6.4428e-03,
          2.7504e-02, -2.3075e-01,  3.4809e-02,  2.1835e-01,  2.2184e-02,
         -2.3233e-01,  1.8557e-01]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
82000 特征值优化 tensor(1.1441, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3658e+00, -3.7802e-01,  5.0372e-01, -6.1806e-01, -1.2421e+00,
          4.8926e-01,  1.3536e+00,  1.7608e+00, -1.6259e+00, -8.4986e-01,
          7.6444e-01, -3.1233e-01,  3.6299e-01,  4.8361e-02, -1.4693e-02,
          1.7302e-01,  1.6284e-01,  1.1546e-01,  1.5082e-01,  3.9147e-01,
         -1.5405e-01, -1.1454e-01,  2.8667e-01,  1.0693e-01,  1.0140e-01,
          3.5840e-02,  3.1694e-02, -2.0393e-01,  1.0719e-02, -6.5500e-02,
          3.7420e-03, -1.5198e-01,  1.4303e-01, -1.7273e-01,  8.0083e-04,
          2.2906e-02, -2.2780e-01,  4.1420e-02,  2.1968e-01,  2.1574e-02,
         -2.1942e-01,  1.8391e-01]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
83000 特征值优化 tensor(1.1373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3676, -0.3782,  0.5095, -0.6282, -1.2497,  0.5123,  1.3113,  1.7280,
         -1.6389, -0.8512,  0.7192, -0.3316,  0.3635,  0.0247, -0.0246,  0.1702,
          0.1654,  0.1184,  0.1338,  0.3955, -0.1545, -0.1160,  0.3264,  0.1041,
          0.0854,  0.0519,  0.0407, -0.1749,  0.0310, -0.0643,  0.0033, -0.1231,
          0.1738, -0.1775, -0.0245, -0.0194, -0.2290,  0.0487,  0.2272,  0.0171,
         -0.2079,  0.1801]], device='cuda:0') tensor(0.2118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
84000 特征值优化 tensor(1.1352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3688, -0.3784,  0.5120, -0.6379, -1.2534,  0.5120,  1.2518,  1.6855,
         -1.6252, -0.8500,  0.7106, -0.3297,  0.3630,  0.0047, -0.0162,  0.1611,
          0.1542,  0.1342,  0.1334,  0.3975, -0.1551, -0.1159,  0.3154,  0.1039,
          0.0586,  0.0417,  0.0395, -0.1851,  0.0250, -0.0632,  0.0025, -0.1421,
          0.1568, -0.1757, -0.0110, -0.0214, -0.2092,  0.0490,  0.2232,  0.0188,
         -0.2148,  0.1824]], device='cuda:0') tensor(0.2097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
85000 特征值优化 tensor(1.1363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4256, -0.2765,  0.5103, -0.6390, -1.2538,  0.5166,  1.1209,  1.5905,
         -1.6281, -0.8498,  0.6242, -0.3330,  0.3735,  0.0143, -0.0213,  0.1846,
          0.1510,  0.1291,  0.1510,  0.4065, -0.1382, -0.1160,  0.3176,  0.1053,
          0.0748,  0.0369,  0.0437, -0.1825,  0.0263, -0.0633,  0.0026, -0.1268,
          0.1562, -0.1757, -0.0189, -0.0245, -0.2024,  0.0644,  0.2242,  0.0191,
         -0.2015,  0.1820]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
86000 特征值优化 tensor(1.1325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4620, -0.1853,  0.5067, -0.6493, -1.2564,  0.5148,  0.9688,  1.4770,
         -1.6262, -0.8578,  0.5308, -0.3309,  0.3848,  0.0018, -0.0206,  0.1871,
          0.1507,  0.1257,  0.1522,  0.4116, -0.1201, -0.1154,  0.3145,  0.1030,
          0.0692,  0.0321,  0.0450, -0.1891,  0.0285, -0.0615,  0.0025, -0.1234,
          0.1521, -0.1771, -0.0196, -0.0242, -0.1854,  0.0800,  0.2231,  0.0200,
         -0.1862,  0.1821]], device='cuda:0') tensor(0.2175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
87000 特征值优化 tensor(1.1812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5466, -0.1403,  0.6418, -0.5935, -1.2937,  0.5552,  0.6520,  1.2715,
         -1.7270, -0.6733,  0.4274, -0.5273,  0.3995,  0.0326, -0.0059,  0.1270,
          0.1086,  0.1891,  0.1459,  0.4221, -0.1108, -0.1218,  0.2985,  0.1750,
          0.0341, -0.0124,  0.0341, -0.1062, -0.0291, -0.0750, -0.0070, -0.1570,
          0.0833, -0.1778,  0.0394,  0.0399, -0.0830,  0.1183,  0.2030,  0.0473,
         -0.1840,  0.1583]], device='cuda:0') tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
88000 特征值优化 tensor(1.1073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5488, -0.1427,  0.6343, -0.5672, -1.2928,  0.5241,  0.6531,  1.2572,
         -1.7366, -0.6652,  0.4105, -0.5176,  0.4004,  0.0075, -0.0046,  0.1047,
          0.1122,  0.1829,  0.1187,  0.4232, -0.1111, -0.1231,  0.2902,  0.1838,
          0.0312,  0.0072,  0.0231, -0.1060, -0.0259, -0.0745, -0.0074, -0.1449,
          0.0992, -0.1744,  0.0255,  0.0327, -0.1056,  0.1213,  0.2082,  0.0427,
         -0.1582,  0.1508]], device='cuda:0') tensor(0.2138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
89000 特征值优化 tensor(1.1084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5473e+00, -1.4075e-01,  6.3501e-01, -5.6233e-01, -1.2934e+00,
          5.1722e-01,  6.4092e-01,  1.2587e+00, -1.7461e+00, -6.5651e-01,
          4.1559e-01, -5.0768e-01,  3.9977e-01,  1.3596e-02, -7.0285e-03,
          1.0061e-01,  1.1395e-01,  1.8047e-01,  1.1939e-01,  4.2285e-01,
         -1.1105e-01, -1.2151e-01,  2.8999e-01,  1.8423e-01,  3.0033e-02,
          7.5814e-04,  2.3128e-02, -1.0533e-01, -2.4282e-02, -7.7010e-02,
         -7.2948e-03, -1.4502e-01,  9.6169e-02, -1.7319e-01,  2.6536e-02,
          3.3463e-02, -1.0543e-01,  1.2363e-01,  2.0713e-01,  4.3979e-02,
         -1.5867e-01,  1.5305e-01]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
90000 特征值优化 tensor(1.1339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5489e+00, -1.4315e-01,  6.2565e-01, -5.5799e-01, -1.2776e+00,
          5.3128e-01,  6.7750e-01,  1.2502e+00, -1.7448e+00, -6.4952e-01,
          4.0746e-01, -5.0620e-01,  3.9913e-01,  7.6850e-04, -3.2224e-02,
          9.9318e-02,  1.1508e-01,  1.6154e-01,  7.8652e-02,  4.2168e-01,
         -1.1198e-01, -1.1944e-01,  2.7582e-01,  1.8528e-01,  4.5897e-02,
          1.5297e-02,  6.6102e-03, -1.3146e-01, -1.1845e-03, -7.5182e-02,
         -4.7040e-03, -1.1572e-01,  1.1953e-01, -1.7512e-01, -6.5810e-03,
          4.5375e-03, -1.4369e-01,  1.2871e-01,  2.1664e-01,  3.6300e-02,
         -1.3221e-01,  1.4322e-01]], device='cuda:0') tensor(0.2136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
91000 特征值优化 tensor(1.1074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5470, -0.1388,  0.6287, -0.5727, -1.2954,  0.5368,  0.6738,  1.2739,
         -1.7665, -0.6520,  0.4020, -0.5008,  0.3997, -0.0076, -0.0444,  0.0993,
          0.1202,  0.1619,  0.0819,  0.4224, -0.1110, -0.1235,  0.2793,  0.1795,
          0.0521,  0.0282, -0.0028, -0.1466,  0.0202, -0.0727, -0.0072, -0.1006,
          0.1492, -0.1761, -0.0241, -0.0134, -0.1495,  0.1270,  0.2226,  0.0284,
         -0.1189,  0.1383]], device='cuda:0') tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
92000 特征值优化 tensor(1.1201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5460e+00, -1.4060e-01,  6.3133e-01, -5.4254e-01, -1.2815e+00,
          5.0702e-01,  6.5363e-01,  1.2699e+00, -1.7674e+00, -6.2747e-01,
          4.5184e-01, -4.8846e-01,  3.9883e-01,  8.7721e-03, -2.8266e-02,
          8.3003e-02,  1.1428e-01,  1.7308e-01,  8.7810e-02,  4.2267e-01,
         -1.1157e-01, -1.2031e-01,  2.8173e-01,  1.8204e-01,  2.7623e-02,
          9.9836e-05,  9.6908e-03, -1.0965e-01,  1.1074e-02, -8.0296e-02,
         -4.8922e-03, -1.1501e-01,  1.1779e-01, -1.7203e-01, -2.3170e-03,
         -1.2382e-02, -1.2377e-01,  1.2469e-01,  2.1661e-01,  3.5754e-02,
         -1.5368e-01,  1.4329e-01]], device='cuda:0') tensor(0.2373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
93000 特征值优化 tensor(1.1096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5455, -0.1412,  0.6383, -0.5475, -1.2956,  0.5044,  0.6013,  1.2526,
         -1.7734, -0.6219,  0.4613, -0.4804,  0.3998,  0.0314, -0.0098,  0.0761,
          0.1080,  0.1843,  0.1010,  0.4226, -0.1108, -0.1198,  0.2919,  0.1884,
          0.0174, -0.0100,  0.0262, -0.0910, -0.0351, -0.0792, -0.0079, -0.1572,
          0.0938, -0.1718,  0.0395,  0.0458, -0.1019,  0.1232,  0.2063,  0.0457,
         -0.1664,  0.1536]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
94000 特征值优化 tensor(1.1514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5525e+00, -1.4152e-01,  6.2757e-01, -5.7468e-01, -1.2924e+00,
          5.3961e-01,  6.5991e-01,  1.2489e+00, -1.7811e+00, -6.2406e-01,
          4.2852e-01, -4.8172e-01,  3.9780e-01, -7.6649e-04, -5.0034e-02,
          1.0152e-01,  1.2588e-01,  1.5989e-01,  8.0316e-02,  4.1958e-01,
         -1.1250e-01, -1.2308e-01,  2.7108e-01,  1.7847e-01,  4.8276e-02,
          3.2142e-02,  2.6593e-03, -1.3282e-01,  1.4196e-02, -7.1402e-02,
         -5.0992e-03, -1.1029e-01,  1.4712e-01, -1.7566e-01, -1.9250e-02,
         -6.7876e-03, -1.6020e-01,  1.3353e-01,  2.2370e-01,  3.0330e-02,
         -1.1203e-01,  1.3842e-01]], device='cuda:0') tensor(0.2130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
95000 特征值优化 tensor(1.1079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5462e+00, -1.3899e-01,  6.2778e-01, -5.7197e-01, -1.2944e+00,
          5.3098e-01,  6.3544e-01,  1.2780e+00, -1.7923e+00, -6.1780e-01,
          4.3012e-01, -4.7208e-01,  3.9941e-01, -8.1570e-03, -4.5782e-02,
          9.5084e-02,  1.1911e-01,  1.5799e-01,  8.5520e-02,  4.2227e-01,
         -1.1085e-01, -1.2322e-01,  2.7979e-01,  1.8282e-01,  5.2199e-02,
          2.2876e-02,  6.3952e-04, -1.4633e-01,  1.9600e-02, -7.3072e-02,
         -7.0730e-03, -9.9315e-02,  1.4794e-01, -1.7510e-01, -2.3358e-02,
         -1.4406e-02, -1.5318e-01,  1.2709e-01,  2.2392e-01,  2.6073e-02,
         -1.1586e-01,  1.3706e-01]], device='cuda:0') tensor(0.2162, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
96000 特征值优化 tensor(1.1150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5464e+00, -1.3890e-01,  6.2867e-01, -5.4721e-01, -1.2917e+00,
          5.0006e-01,  6.1520e-01,  1.2750e+00, -1.8032e+00, -5.9659e-01,
          4.6051e-01, -4.5710e-01,  3.9976e-01,  3.5262e-04, -3.7018e-02,
          8.5655e-02,  1.1689e-01,  1.6224e-01,  9.3578e-02,  4.2187e-01,
         -1.1056e-01, -1.2269e-01,  2.7769e-01,  1.8293e-01,  4.6052e-02,
          1.1235e-02, -3.2740e-04, -1.3439e-01,  1.6963e-02, -7.6558e-02,
         -6.9192e-03, -1.0212e-01,  1.3118e-01, -1.7103e-01, -1.4012e-02,
         -1.8243e-02, -1.3994e-01,  1.2823e-01,  2.2126e-01,  3.0082e-02,
         -1.3220e-01,  1.3853e-01]], device='cuda:0') tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
97000 特征值优化 tensor(1.1262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5516e+00, -1.4731e-01,  6.2774e-01, -5.5833e-01, -1.2793e+00,
          5.2685e-01,  6.0117e-01,  1.2515e+00, -1.8055e+00, -5.8820e-01,
          4.6338e-01, -4.4099e-01,  3.9972e-01,  2.7565e-03, -2.6901e-02,
          9.1510e-02,  1.1642e-01,  1.6511e-01,  7.9158e-02,  4.2259e-01,
         -1.1221e-01, -1.2178e-01,  2.7494e-01,  1.8724e-01,  3.8520e-02,
          1.1148e-02,  1.0157e-02, -1.2756e-01, -9.0516e-03, -7.7041e-02,
         -5.4166e-03, -1.1461e-01,  1.1557e-01, -1.7417e-01, -5.5676e-04,
          8.9334e-03, -1.4003e-01,  1.2994e-01,  2.1799e-01,  3.4487e-02,
         -1.2959e-01,  1.4162e-01]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
98000 特征值优化 tensor(1.1535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5533e+00, -1.4110e-01,  6.2624e-01, -5.7563e-01, -1.2897e+00,
          5.4687e-01,  6.0474e-01,  1.2536e+00, -1.8217e+00, -5.7673e-01,
          4.4415e-01, -4.4115e-01,  3.9739e-01, -4.4833e-03, -4.0386e-02,
          9.3274e-02,  1.2862e-01,  1.6527e-01,  8.0047e-02,  4.1870e-01,
         -1.1277e-01, -1.2337e-01,  2.6671e-01,  1.7973e-01,  4.3663e-02,
          2.1626e-02, -8.3859e-04, -1.3547e-01,  1.5434e-02, -7.2767e-02,
         -4.9343e-03, -9.7792e-02,  1.4322e-01, -1.7654e-01, -2.3522e-02,
         -1.6173e-02, -1.5965e-01,  1.3628e-01,  2.2481e-01,  2.5562e-02,
         -1.1228e-01,  1.3544e-01]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
99000 特征值优化 tensor(1.1057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5457, -0.1384,  0.6261, -0.5809, -1.2974,  0.5457,  0.6075,  1.2686,
         -1.8379, -0.5646,  0.4512, -0.4252,  0.3998, -0.0099, -0.0557,  0.1011,
          0.1228,  0.1547,  0.0774,  0.4225, -0.1108, -0.1226,  0.2766,  0.1846,
          0.0482,  0.0250, -0.0030, -0.1480,  0.0197, -0.0724, -0.0076, -0.0983,
          0.1523, -0.1770, -0.0284, -0.0195, -0.1638,  0.1263,  0.2272,  0.0208,
         -0.1018,  0.1341]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
100000 特征值优化 tensor(1.1134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5478e+00, -1.4008e-01,  6.2943e-01, -5.5109e-01, -1.2928e+00,
          5.0974e-01,  5.8469e-01,  1.2705e+00, -1.8516e+00, -5.3910e-01,
          4.7646e-01, -4.1074e-01,  3.9961e-01,  3.5696e-05, -3.7887e-02,
          8.4862e-02,  1.1571e-01,  1.6073e-01,  9.0920e-02,  4.2293e-01,
         -1.1098e-01, -1.2308e-01,  2.7917e-01,  1.8335e-01,  4.0524e-02,
          1.1172e-02,  4.5742e-03, -1.3923e-01,  1.8151e-02, -7.6510e-02,
         -6.9922e-03, -9.9474e-02,  1.3418e-01, -1.7234e-01, -1.8539e-02,
         -2.1077e-02, -1.4450e-01,  1.2939e-01,  2.2546e-01,  2.3378e-02,
         -1.2435e-01,  1.3567e-01]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
101000 特征值优化 tensor(15.7498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2305,  1.5446,  0.9345,  0.1655, -0.1545,  0.8758, -1.6881, -1.5743,
         -0.6766,  0.4253,  0.7050,  0.9035,  1.8313, -1.0920, -1.7091,  0.1138,
          0.1807,  0.5007, -1.8464,  0.6948, -0.5103, -0.9523,  0.0194, -0.3376,
         -0.7874,  0.3223,  1.2484,  0.1494,  0.0191, -0.3438,  0.0953,  1.5567,
          1.1251, -1.0053, -0.7937,  0.8062, -0.5395, -0.5171,  1.2716, -1.4390,
          0.4267,  0.1213]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
102000 特征值优化 tensor(3.5752, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5205,  0.4368,  0.0816,  0.4296,  0.6698,  1.0064, -0.6554, -1.7908,
          0.1233, -0.0645,  1.1007,  1.6763,  0.8672, -0.2756, -0.6793,  0.1524,
         -0.0156,  0.1008, -0.8541,  0.0634, -0.4961, -0.2131, -0.0817,  0.0140,
         -0.1602, -0.0453,  0.3864, -0.0391, -0.0279,  0.0338,  0.0987,  0.5336,
          0.3928, -0.0891, -0.2063,  0.2374, -0.0798,  0.0071,  0.2807, -0.4791,
         -0.0665, -0.3715]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
103000 特征值优化 tensor(1.3100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5193,  0.2453, -0.1980,  0.0345,  0.7326,  0.7685, -0.5514, -2.1141,
         -0.5393,  0.5049,  0.9525,  1.4054,  0.3724, -0.1270, -0.3485,  0.1632,
          0.0959,  0.2872, -0.4336,  0.0145, -0.1700, -0.1787, -0.0511,  0.2308,
         -0.1403,  0.1426,  0.1948,  0.0256, -0.0447, -0.0036,  0.1758,  0.3135,
          0.3396, -0.1250, -0.2094,  0.1554, -0.1234,  0.0258,  0.1008, -0.2284,
         -0.0929, -0.1872]], device='cuda:0') tensor(0.2198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
104000 特征值优化 tensor(1.1207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0460,  0.6522, -0.0965,  0.0712,  0.9885,  1.0248, -0.5099, -2.1443,
         -1.0640,  0.8457,  1.0122,  1.3898,  0.2828,  0.0074, -0.2491,  0.0165,
          0.1701,  0.2719, -0.2022,  0.0402, -0.1114, -0.1790,  0.0444,  0.3170,
          0.0144,  0.0242,  0.0332,  0.0409, -0.0412, -0.0081,  0.2175,  0.2780,
          0.3554, -0.1182, -0.1231,  0.1286, -0.1482,  0.0289,  0.0356, -0.1548,
         -0.0660, -0.0822]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
105000 特征值优化 tensor(1.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2727e-01,  9.5988e-01, -3.3039e-02,  1.3146e-01,  1.3557e+00,
          1.0693e+00, -4.6871e-01, -2.1277e+00, -1.1248e+00,  9.0661e-01,
          1.1006e+00,  1.4021e+00,  2.4830e-01, -1.5117e-02, -2.0815e-01,
         -1.3388e-02,  2.2779e-02,  2.7837e-01, -4.0326e-02, -4.3774e-02,
         -7.4391e-02, -1.8367e-01,  3.8802e-02,  3.4435e-01,  7.4346e-03,
          4.5255e-02, -2.3110e-03,  7.4045e-04, -1.6933e-02, -1.4830e-02,
          2.6407e-01,  3.0304e-01,  3.9000e-01, -1.1598e-01, -8.6095e-02,
          1.3331e-01, -7.5505e-02, -2.8811e-02,  3.3341e-02, -1.0951e-01,
         -7.0429e-02, -7.3630e-03]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
106000 特征值优化 tensor(1.0789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3633e-01,  9.6941e-01, -3.1893e-02,  1.3457e-01,  1.5128e+00,
          1.0896e+00, -4.5740e-01, -2.0970e+00, -1.1452e+00,  9.1840e-01,
          1.0965e+00,  1.3139e+00,  2.4750e-01, -4.6526e-02, -2.0796e-01,
         -6.7311e-02,  6.2903e-02,  2.3552e-01, -4.4054e-02, -1.7638e-02,
         -7.5472e-02, -1.8392e-01,  7.1964e-02,  3.1258e-01, -6.6016e-02,
         -1.6287e-02,  2.7636e-02,  4.9838e-02, -1.6585e-02, -1.5143e-02,
          2.8440e-01,  3.1557e-01,  4.0484e-01, -1.1598e-01, -5.8522e-03,
          1.5864e-01, -9.0429e-02, -2.1166e-02,  4.0882e-02, -9.0722e-02,
         -5.5223e-02,  1.5969e-03]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
107000 特征值优化 tensor(1.0664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2477,  0.9592, -0.0197,  0.1357,  1.5486,  1.5876, -0.4517, -2.1016,
         -1.1572,  0.8662,  1.0840,  1.1726,  0.2492, -0.0193, -0.2014, -0.0647,
          0.0554,  0.2464, -0.0244, -0.0165, -0.0730, -0.1846,  0.0266,  0.3993,
         -0.0380, -0.0233,  0.0103, -0.0268, -0.0126, -0.0152,  0.2928,  0.3205,
          0.4065, -0.2130, -0.0068,  0.1851, -0.0913, -0.0274,  0.0427, -0.0831,
         -0.0412,  0.0218]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
108000 特征值优化 tensor(1.0661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2403,  0.9759, -0.0252,  0.1344,  1.5631,  1.6798, -0.4447, -2.1019,
         -1.1481,  0.8478,  1.0706,  1.1573,  0.2473,  0.0079, -0.1964, -0.0991,
          0.0631,  0.2648,  0.0349, -0.0038, -0.0737, -0.1844,  0.0197,  0.4015,
         -0.0242, -0.0135, -0.0054, -0.0028, -0.0152, -0.0153,  0.2943,  0.3257,
          0.4058, -0.2252,  0.0051,  0.1966, -0.0807, -0.0379,  0.0390, -0.0893,
         -0.0337,  0.0249]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
109000 特征值优化 tensor(1.0610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2479,  0.9683, -0.0292,  0.1254,  1.5654,  1.6680, -0.4520, -2.1234,
         -1.1432,  0.8388,  1.0504,  1.1613,  0.2471,  0.0102, -0.1950, -0.1203,
          0.0657,  0.2372,  0.0126,  0.0534, -0.0728, -0.1828,  0.0150,  0.3995,
          0.0082,  0.0430,  0.0042, -0.0132, -0.0168, -0.0141,  0.2956,  0.3218,
          0.4024, -0.2230,  0.0174,  0.2042, -0.0791, -0.0414,  0.0387, -0.0915,
         -0.0289,  0.0259]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
110000 特征值优化 tensor(1.0639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2452,  0.9599, -0.0254,  0.1279,  1.5679,  1.6908, -0.4359, -2.1142,
         -1.1510,  0.8255,  1.0545,  1.1683,  0.2483,  0.0120, -0.1943, -0.1223,
          0.0702,  0.2383,  0.0055,  0.0302, -0.0736, -0.1833,  0.0201,  0.3954,
          0.0217,  0.0446,  0.0326, -0.0130, -0.0141, -0.0144,  0.2967,  0.3263,
          0.4057, -0.2258,  0.0205,  0.2079, -0.0806, -0.0378,  0.0395, -0.0918,
         -0.0376,  0.0246]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
111000 特征值优化 tensor(1.0654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2436,  0.9598, -0.0381,  0.1264,  1.5693,  1.7067, -0.4290, -2.1147,
         -1.1447,  0.8162,  1.0496,  1.1701,  0.2488,  0.0091, -0.1924, -0.1246,
          0.0854,  0.2318, -0.0075,  0.0496, -0.0732, -0.1833,  0.0356,  0.4013,
          0.0208,  0.0091, -0.0041, -0.0189, -0.0198, -0.0132,  0.2954,  0.3280,
          0.4051, -0.2280,  0.0215,  0.2083, -0.0845, -0.0325,  0.0395, -0.0927,
         -0.0438,  0.0248]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
112000 特征值优化 tensor(1.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2490,  0.9493, -0.0410,  0.1330,  1.5610,  1.7237, -0.4176, -2.1096,
         -1.1473,  0.8062,  1.0570,  1.1736,  0.2497, -0.0040, -0.2088, -0.1023,
          0.0723,  0.2388,  0.0366, -0.0084, -0.0735, -0.1849,  0.0252,  0.3952,
         -0.0195, -0.0088,  0.0223, -0.0131, -0.0227, -0.0132,  0.2978,  0.3218,
          0.4041, -0.2302,  0.0194,  0.2055, -0.0507, -0.0437,  0.0392, -0.0938,
         -0.0801,  0.0245]], device='cuda:0') tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
113000 特征值优化 tensor(1.0556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2299,  0.9747, -0.0343,  0.1315,  1.5680,  1.7376, -0.4346, -2.1420,
         -1.1584,  0.7929,  1.0405,  1.1683,  0.2470,  0.0296, -0.2212, -0.1113,
          0.0457,  0.2596,  0.0378, -0.0524, -0.0740, -0.1839,  0.0146,  0.3848,
         -0.0583, -0.0601,  0.0327,  0.0207, -0.0159, -0.0129,  0.2971,  0.3198,
          0.3981, -0.2316,  0.0263,  0.2123, -0.0581, -0.0438,  0.0390, -0.0967,
         -0.0674,  0.0253]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
114000 特征值优化 tensor(1.0766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2453,  0.9418, -0.0337,  0.1372,  1.5537,  1.7322, -0.4090, -2.1224,
         -1.1663,  0.7965,  1.0493,  1.2000,  0.2482, -0.0070, -0.2042, -0.0865,
          0.0639,  0.2632,  0.0371, -0.0280, -0.0731, -0.1845,  0.0471,  0.3888,
         -0.0438, -0.0447,  0.0558, -0.0351, -0.0230, -0.0126,  0.2976,  0.3212,
          0.4008, -0.2316,  0.0192,  0.2069, -0.0411, -0.0540,  0.0426, -0.0879,
         -0.0801,  0.0214]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
115000 特征值优化 tensor(1.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3997e-01,  9.5103e-01, -2.9520e-02,  1.3640e-01,  1.5577e+00,
          1.7281e+00, -3.9398e-01, -2.1111e+00, -1.1787e+00,  7.8656e-01,
          1.0466e+00,  1.2011e+00,  2.4848e-01, -6.1690e-03, -1.8180e-01,
         -9.2524e-02,  7.6619e-02,  2.4035e-01,  1.9731e-02,  9.6788e-04,
         -7.1500e-02, -1.8425e-01,  4.5262e-02,  3.9790e-01, -2.0019e-02,
         -6.5701e-03,  5.4500e-02, -4.5208e-02, -1.4751e-02, -1.4832e-02,
          2.9065e-01,  3.2272e-01,  4.0168e-01, -2.3136e-01,  1.9306e-02,
          2.0504e-01, -4.5061e-02, -5.1871e-02,  4.3719e-02, -8.8940e-02,
         -6.9426e-02,  2.0667e-02]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
116000 特征值优化 tensor(1.0652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2437,  0.9607, -0.0196,  0.1348,  1.5579,  1.7300, -0.3938, -2.1137,
         -1.1888,  0.7780,  1.0256,  1.2078,  0.2486,  0.0038, -0.1702, -0.0952,
          0.0745,  0.2500,  0.0204,  0.0170, -0.0739, -0.1844,  0.0340,  0.3981,
         -0.0128,  0.0048,  0.0473, -0.0479, -0.0128, -0.0158,  0.2949,  0.3287,
          0.4030, -0.2304,  0.0191,  0.2053, -0.0521, -0.0511,  0.0450, -0.0898,
         -0.0596,  0.0201]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
117000 特征值优化 tensor(1.0652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2482,  0.9623, -0.0185,  0.1377,  1.5491,  1.7378, -0.3879, -2.1162,
         -1.1907,  0.7700,  1.0180,  1.2166,  0.2491, -0.0052, -0.1753, -0.1014,
          0.0811,  0.2288, -0.0135,  0.0162, -0.0729, -0.1844,  0.0480,  0.3996,
         -0.0096, -0.0080,  0.0397, -0.0538, -0.0123, -0.0159,  0.2928,  0.3297,
          0.4022, -0.2312,  0.0211,  0.2071, -0.0587, -0.0460,  0.0454, -0.0886,
         -0.0564,  0.0194]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
118000 特征值优化 tensor(1.0858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2506,  0.9484, -0.0304,  0.1433,  1.4032,  1.7377, -0.3951, -2.1230,
         -1.2163,  0.7820,  0.9998,  1.2536,  0.2481, -0.0270, -0.2146, -0.0370,
          0.0150,  0.2347, -0.0160, -0.0568, -0.0738, -0.1846,  0.0629,  0.3911,
         -0.0649, -0.0290,  0.0127, -0.0447, -0.0209, -0.0153,  0.2766,  0.3070,
          0.3846, -0.2310,  0.0157,  0.2061, -0.0339, -0.0650,  0.0537, -0.0776,
         -0.0789,  0.0139]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
119000 特征值优化 tensor(1.0787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2588,  0.9447, -0.0333,  0.1398,  1.3931,  1.7371, -0.3847, -2.1220,
         -1.2090,  0.7729,  1.0025,  1.2492,  0.2472, -0.0398, -0.2062, -0.0366,
          0.0255,  0.2114, -0.0218, -0.0432, -0.0743, -0.1851,  0.0393,  0.3841,
         -0.0501, -0.0083, -0.0097, -0.0505, -0.0253, -0.0150,  0.2770,  0.3059,
          0.3860, -0.2314,  0.0162,  0.2046, -0.0339, -0.0688,  0.0514, -0.0780,
         -0.0580,  0.0136]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
120000 特征值优化 tensor(1.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2423,  0.9638, -0.0341,  0.1345,  1.4003,  1.7402, -0.3781, -2.1161,
         -1.2240,  0.7572,  0.9958,  1.2630,  0.2478, -0.0366, -0.1840, -0.0676,
          0.0691,  0.2046, -0.0561,  0.0059, -0.0738, -0.1845,  0.0572,  0.3972,
         -0.0140,  0.0206,  0.0058, -0.0478, -0.0182, -0.0141,  0.2694,  0.3217,
          0.3892, -0.2328,  0.0146,  0.2037, -0.0463, -0.0629,  0.0517, -0.0778,
         -0.0335,  0.0131]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
121000 特征值优化 tensor(1.0612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2432,  0.9819, -0.0209,  0.1354,  1.3906,  1.7399, -0.3818, -2.1256,
         -1.2247,  0.7482,  0.9800,  1.2639,  0.2461, -0.0465, -0.1816, -0.0822,
          0.0834,  0.1860, -0.0880,  0.0123, -0.0733, -0.1842,  0.0105,  0.4092,
         -0.0184, -0.0350,  0.0240, -0.0590, -0.0122, -0.0153,  0.2692,  0.3244,
          0.3850, -0.2321,  0.0159,  0.2043, -0.0639, -0.0598,  0.0517, -0.0788,
         -0.0107,  0.0133]], device='cuda:0') tensor(0.2193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
122000 特征值优化 tensor(1.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2449,  0.9634, -0.0252,  0.1387,  1.3836,  1.7517, -0.3682, -2.1186,
         -1.2262,  0.7379,  0.9957,  1.2574,  0.2480, -0.0336, -0.1874, -0.0674,
          0.0591,  0.2018, -0.0547,  0.0087, -0.0733, -0.1847,  0.0162,  0.4003,
         -0.0192, -0.0265,  0.0517, -0.0553, -0.0146, -0.0149,  0.2666,  0.3256,
          0.3843, -0.2343,  0.0164,  0.2032, -0.0372, -0.0677,  0.0506, -0.0821,
         -0.0408,  0.0139]], device='cuda:0') tensor(0.2268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
123000 特征值优化 tensor(1.0617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4685e-01,  9.8808e-01, -2.3894e-02,  1.3412e-01,  1.3756e+00,
          1.7404e+00, -3.7272e-01, -2.1281e+00, -1.2467e+00,  7.3607e-01,
          9.8374e-01,  1.2764e+00,  2.4540e-01, -2.1135e-02, -2.1014e-01,
          5.9196e-03, -3.0814e-02,  2.4665e-01,  1.3730e-03, -2.7809e-02,
         -7.2493e-02, -1.8405e-01,  1.7599e-02,  3.9813e-01, -7.9635e-02,
          2.9309e-02,  7.7693e-02, -2.7576e-02, -1.3657e-02, -1.5074e-02,
          2.6603e-01,  3.1568e-01,  3.8661e-01, -2.3281e-01,  1.2956e-02,
          2.0144e-01, -2.1599e-02, -7.1912e-02,  5.3187e-02, -7.5613e-02,
         -5.4820e-02,  1.0484e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
124000 特征值优化 tensor(1.0597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4372e-01,  9.8539e-01, -2.2377e-02,  1.3604e-01,  1.3819e+00,
          1.7420e+00, -3.7617e-01, -2.1360e+00, -1.2497e+00,  7.2674e-01,
          9.6408e-01,  1.2820e+00,  2.4620e-01, -2.4567e-02, -2.0711e-01,
         -1.3570e-02, -3.7721e-05,  2.3396e-01, -1.6325e-02, -1.7645e-02,
         -7.3315e-02, -1.8440e-01, -1.0060e-02,  3.9512e-01, -6.3411e-02,
          1.7257e-02,  5.2576e-02, -2.5770e-02, -1.3130e-02, -1.5448e-02,
          2.6787e-01,  3.1541e-01,  3.8265e-01, -2.3263e-01,  1.3392e-02,
          2.0118e-01, -3.4293e-02, -6.7565e-02,  5.3623e-02, -7.5888e-02,
         -4.1048e-02,  9.9949e-03]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
125000 特征值优化 tensor(1.0555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4149e-01,  9.8704e-01, -2.1103e-02,  1.3570e-01,  1.3888e+00,
          1.7403e+00, -3.8234e-01, -2.1593e+00, -1.2623e+00,  7.2532e-01,
          9.5489e-01,  1.2902e+00,  2.4520e-01, -2.2316e-02, -2.1231e-01,
         -9.1891e-03,  5.4390e-04,  2.2997e-01, -1.1570e-02, -9.7021e-03,
         -7.3232e-02, -1.8444e-01, -7.3699e-03,  3.9429e-01, -6.0056e-02,
          2.5098e-02,  5.4095e-02, -2.2220e-02, -1.2358e-02, -1.5528e-02,
          2.7326e-01,  3.1050e-01,  3.7843e-01, -2.3221e-01,  1.6810e-02,
          2.0325e-01, -3.4339e-02, -6.3392e-02,  5.5508e-02, -7.4827e-02,
         -4.9444e-02,  8.9919e-03]], device='cuda:0') tensor(0.2210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
126000 特征值优化 tensor(1.0603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2427,  0.9906, -0.0241,  0.1357,  1.3932,  1.7451, -0.3582, -2.1409,
         -1.2607,  0.7121,  0.9663,  1.2903,  0.2461, -0.0232, -0.2066, -0.0398,
          0.0094,  0.2193, -0.0373, -0.0067, -0.0729, -0.1843, -0.0253,  0.3885,
         -0.0607,  0.0103,  0.0533, -0.0149, -0.0137, -0.0151,  0.2682,  0.3194,
          0.3854, -0.2332,  0.0170,  0.2027, -0.0508, -0.0595,  0.0546, -0.0767,
         -0.0323,  0.0094]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
127000 特征值优化 tensor(1.0605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2428,  0.9821, -0.0241,  0.1335,  1.3751,  1.7423, -0.3583, -2.1492,
         -1.2755,  0.7084,  0.9594,  1.3056,  0.2455, -0.0218, -0.2079, -0.0272,
          0.0096,  0.2339, -0.0233, -0.0188, -0.0729, -0.1838,  0.0249,  0.4028,
         -0.0448,  0.0354,  0.0750, -0.0427, -0.0134, -0.0151,  0.2714,  0.3170,
          0.3797, -0.2325,  0.0161,  0.2031, -0.0513, -0.0592,  0.0572, -0.0706,
         -0.0296,  0.0063]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
128000 特征值优化 tensor(1.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5038e-01,  9.8336e-01, -2.0754e-02,  1.3644e-01,  1.3746e+00,
          1.7401e+00, -3.4623e-01, -2.1478e+00, -1.2693e+00,  6.9161e-01,
          9.6902e-01,  1.2987e+00,  2.4598e-01, -2.5189e-02, -2.0809e-01,
         -1.5055e-02,  1.8640e-03,  2.2398e-01, -1.8507e-02, -1.0127e-02,
         -7.2385e-02, -1.8454e-01,  1.0714e-02,  3.9191e-01, -6.1351e-02,
          2.9371e-02,  7.1972e-02, -2.4866e-02, -1.2633e-02, -1.5456e-02,
          2.6805e-01,  3.2211e-01,  3.8548e-01, -2.3275e-01,  1.8407e-02,
          2.0273e-01, -4.5726e-02, -6.1459e-02,  5.5799e-02, -7.6181e-02,
         -3.5513e-02,  8.1977e-03]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
129000 特征值优化 tensor(1.0613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2487,  0.9814, -0.0215,  0.1325,  1.3771,  1.7410, -0.3440, -2.1510,
         -1.2729,  0.6857,  0.9639,  1.3108,  0.2459, -0.0263, -0.2053, -0.0241,
          0.0083,  0.2236, -0.0232, -0.0124, -0.0724, -0.1838,  0.0099,  0.3982,
         -0.0512,  0.0257,  0.0769, -0.0360, -0.0123, -0.0149,  0.2707,  0.3246,
          0.3849, -0.2324,  0.0174,  0.2024, -0.0472, -0.0617,  0.0582, -0.0731,
         -0.0317,  0.0066]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
130000 特征值优化 tensor(1.0578, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2419,  0.9855, -0.0222,  0.1352,  1.3791,  1.7397, -0.3480, -2.1676,
         -1.2883,  0.6789,  0.9576,  1.3149,  0.2458, -0.0203, -0.2098, -0.0153,
          0.0027,  0.2371, -0.0129, -0.0186, -0.0733, -0.1839,  0.0029,  0.3955,
         -0.0569,  0.0289,  0.0647, -0.0275, -0.0127, -0.0150,  0.2703,  0.3163,
          0.3793, -0.2321,  0.0200,  0.2031, -0.0390, -0.0618,  0.0582, -0.0730,
         -0.0442,  0.0059]], device='cuda:0') tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
131000 特征值优化 tensor(1.0617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2434,  0.9860, -0.0203,  0.1376,  1.3888,  1.7412, -0.3287, -2.1554,
         -1.2942,  0.6679,  0.9648,  1.3254,  0.2459, -0.0261, -0.2032, -0.0441,
          0.0253,  0.2216, -0.0406, -0.0231, -0.0733, -0.1845, -0.0207,  0.3954,
         -0.0405,  0.0071,  0.0617, -0.0361, -0.0124, -0.0158,  0.2686,  0.3243,
          0.3873, -0.2322,  0.0176,  0.2008, -0.0594, -0.0565,  0.0588, -0.0711,
         -0.0236,  0.0048]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
132000 特征值优化 tensor(1.0614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4603e-01,  9.8255e-01, -2.3178e-02,  1.3019e-01,  1.3746e+00,
          1.7402e+00, -3.3011e-01, -2.1555e+00, -1.2879e+00,  6.5261e-01,
          9.5898e-01,  1.3234e+00,  2.4561e-01, -2.5349e-02, -2.0516e-01,
         -2.1410e-02,  3.7913e-03,  2.2473e-01, -1.9561e-02, -1.9238e-02,
         -7.2861e-02, -1.8383e-01, -1.2990e-03,  3.9709e-01, -5.4726e-02,
          2.5017e-02,  6.9032e-02, -3.0812e-02, -1.2787e-02, -1.4758e-02,
          2.7245e-01,  3.2571e-01,  3.8547e-01, -2.3203e-01,  2.1071e-02,
          2.0267e-01, -4.0492e-02, -6.3828e-02,  5.8471e-02, -7.4291e-02,
         -3.8940e-02,  5.5051e-03]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
133000 特征值优化 tensor(1.0566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4225e-01,  9.8510e-01, -2.3037e-02,  1.3504e-01,  1.3816e+00,
          1.7427e+00, -3.4104e-01, -2.1740e+00, -1.3071e+00,  6.4820e-01,
          9.4255e-01,  1.3320e+00,  2.4612e-01, -2.1720e-02, -2.1025e-01,
         -3.3171e-03, -5.2775e-03,  2.3645e-01, -3.0324e-03, -1.8404e-02,
         -7.3248e-02, -1.8403e-01,  1.6283e-03,  3.9010e-01, -7.1797e-02,
          3.2034e-02,  5.2046e-02, -2.2957e-02, -1.3034e-02, -1.5138e-02,
          2.7011e-01,  3.1287e-01,  3.7741e-01, -2.3310e-01,  2.1484e-02,
          2.0201e-01, -2.1112e-02, -6.8185e-02,  6.0478e-02, -7.2107e-02,
         -6.0989e-02,  4.2616e-03]], device='cuda:0') tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
134000 特征值优化 tensor(1.0907, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4468e-01,  9.8260e-01, -2.0662e-02,  1.3868e-01,  1.3917e+00,
          1.7409e+00, -3.3404e-01, -2.1793e+00, -1.3123e+00,  6.4110e-01,
          9.4187e-01,  1.3394e+00,  2.4628e-01, -2.2394e-02, -2.1038e-01,
         -1.1008e-02,  2.4250e-04,  2.3876e-01, -6.0032e-03, -1.8955e-02,
         -7.3355e-02, -1.8560e-01, -1.8428e-02,  3.8522e-01, -6.7178e-02,
          2.1938e-02,  4.1553e-02, -2.5804e-02, -1.4408e-02, -1.5008e-02,
          2.7162e-01,  3.1220e-01,  3.7840e-01, -2.3364e-01,  2.5298e-02,
          2.0232e-01, -2.5413e-02, -6.8723e-02,  6.0195e-02, -7.4740e-02,
         -6.5925e-02,  4.5767e-03]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
135000 特征值优化 tensor(1.0579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2420,  0.9890, -0.0240,  0.1376,  1.3955,  1.7416, -0.3232, -2.1686,
         -1.3209,  0.6265,  0.9453,  1.3411,  0.2458, -0.0191, -0.2125, -0.0178,
         -0.0138,  0.2285, -0.0150, -0.0181, -0.0733, -0.1842, -0.0265,  0.3914,
         -0.0814,  0.0211,  0.0410, -0.0186, -0.0134, -0.0154,  0.2690,  0.3181,
          0.3806, -0.2330,  0.0238,  0.2015, -0.0245, -0.0662,  0.0616, -0.0723,
         -0.0633,  0.0032]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
136000 特征值优化 tensor(1.0580, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2462,  0.9879, -0.0259,  0.1328,  1.3699,  1.7410, -0.3228, -2.1709,
         -1.3213,  0.6177,  0.9409,  1.3439,  0.2457, -0.0218, -0.2118,  0.0074,
         -0.0218,  0.2373,  0.0046, -0.0181, -0.0730, -0.1839, -0.0215,  0.3883,
         -0.0797,  0.0145,  0.0458, -0.0162, -0.0144, -0.0149,  0.2696,  0.3134,
          0.3774, -0.2328,  0.0255,  0.2027, -0.0127, -0.0701,  0.0617, -0.0726,
         -0.0730,  0.0030]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
137000 特征值优化 tensor(1.0571, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4528e-01,  9.8593e-01, -2.4149e-02,  1.3022e-01,  1.3679e+00,
          1.7420e+00, -3.2323e-01, -2.1753e+00, -1.3288e+00,  6.0615e-01,
          9.3234e-01,  1.3483e+00,  2.4520e-01, -2.3959e-02, -2.1128e-01,
          5.8922e-03, -2.3296e-02,  2.3531e-01,  6.0087e-03, -1.8793e-02,
         -7.2898e-02, -1.8341e-01,  5.1386e-03,  3.9159e-01, -7.5137e-02,
          1.7121e-02,  6.3768e-02, -2.0468e-02, -1.3750e-02, -1.4514e-02,
          2.7219e-01,  3.1159e-01,  3.7577e-01, -2.3254e-01,  2.3800e-02,
          2.0160e-01, -3.8342e-03, -7.4399e-02,  6.2798e-02, -7.1794e-02,
         -7.6467e-02,  2.0832e-03]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
138000 特征值优化 tensor(1.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6399e-01,  9.5113e-01, -3.6407e-02,  1.3857e-01,  1.3646e+00,
          1.7464e+00, -2.8916e-01, -2.1451e+00, -1.3072e+00,  5.8656e-01,
          9.5102e-01,  1.3377e+00,  2.4630e-01, -5.2673e-02, -1.9591e-01,
         -3.1910e-02,  2.5862e-02,  1.9233e-01, -2.2959e-02, -1.6108e-03,
         -7.3172e-02, -1.8466e-01,  6.7473e-03,  3.8572e-01, -4.0252e-02,
         -1.9028e-03,  6.8376e-02, -5.2299e-02, -1.9236e-02, -1.4737e-02,
          2.6782e-01,  3.1839e-01,  3.7978e-01, -2.3343e-01,  2.9202e-02,
          2.0125e-01, -1.4253e-02, -7.1818e-02,  6.0975e-02, -7.7381e-02,
         -5.7254e-02,  3.8136e-03]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
139000 特征值优化 tensor(1.0761, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6383e-01,  9.5282e-01, -3.2607e-02,  1.3972e-01,  1.3542e+00,
          1.7448e+00, -2.8733e-01, -2.1481e+00, -1.3084e+00,  5.7791e-01,
          9.4224e-01,  1.3403e+00,  2.4605e-01, -5.5902e-02, -2.0234e-01,
         -2.8865e-02,  1.4483e-02,  1.8346e-01, -1.8623e-02,  2.0302e-03,
         -7.1483e-02, -1.8569e-01,  1.5955e-02,  3.8497e-01, -3.8595e-02,
          4.1214e-04,  6.4296e-02, -5.2981e-02, -2.0122e-02, -1.4192e-02,
          2.6824e-01,  3.2219e-01,  3.7953e-01, -2.3417e-01,  3.0853e-02,
          2.0148e-01, -1.3730e-02, -7.3679e-02,  6.1034e-02, -7.8162e-02,
         -5.9656e-02,  3.3247e-03]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
140000 特征值优化 tensor(1.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6585e-01,  9.5238e-01, -3.5050e-02,  1.4075e-01,  1.3583e+00,
          1.7463e+00, -2.8231e-01, -2.1500e+00, -1.3087e+00,  5.6774e-01,
          9.3875e-01,  1.3423e+00,  2.4606e-01, -5.4903e-02, -1.9773e-01,
         -3.2757e-02,  2.3241e-02,  1.8649e-01, -2.1196e-02, -5.0615e-04,
         -7.2341e-02, -1.8521e-01,  6.0303e-03,  3.8823e-01, -3.9590e-02,
          1.7958e-03,  7.2641e-02, -5.0211e-02, -2.0355e-02, -1.4194e-02,
          2.6888e-01,  3.1906e-01,  3.7819e-01, -2.3249e-01,  3.2750e-02,
          2.0224e-01, -1.5892e-02, -7.1238e-02,  6.2169e-02, -7.8021e-02,
         -5.7692e-02,  3.2190e-03]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
141000 特征值优化 tensor(1.0701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2583,  0.9540, -0.0303,  0.1348,  1.3689,  1.7443, -0.2796, -2.1575,
         -1.3155,  0.5589,  0.9284,  1.3467,  0.2476, -0.0516, -0.1848, -0.0515,
          0.0361,  0.1891, -0.0460,  0.0124, -0.0721, -0.1845,  0.0229,  0.4006,
         -0.0188, -0.0247,  0.0648, -0.0518, -0.0156, -0.0146,  0.2624,  0.3282,
          0.3824, -0.2332,  0.0332,  0.2037, -0.0324, -0.0692,  0.0612, -0.0784,
         -0.0428,  0.0027]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
142000 特征值优化 tensor(1.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2483,  0.9578, -0.0229,  0.1385,  1.3814,  1.7450, -0.2781, -2.1640,
         -1.3180,  0.5494,  0.9180,  1.3509,  0.2473, -0.0493, -0.1868, -0.0606,
          0.0462,  0.1963, -0.0643,  0.0236, -0.0748, -0.1845,  0.0261,  0.3994,
         -0.0036, -0.0347,  0.0611, -0.0556, -0.0134, -0.0151,  0.2661,  0.3275,
          0.3820, -0.2334,  0.0334,  0.2023, -0.0431, -0.0665,  0.0616, -0.0787,
         -0.0290,  0.0025]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
143000 特征值优化 tensor(1.0673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5194e-01,  9.6303e-01, -2.4296e-02,  1.3678e-01,  1.3743e+00,
          1.7439e+00, -2.7163e-01, -2.1636e+00, -1.3242e+00,  5.4949e-01,
          9.1613e-01,  1.3544e+00,  2.4699e-01, -5.4739e-02, -1.8471e-01,
         -6.0403e-02,  3.7349e-02,  1.9011e-01, -5.8104e-02,  2.2357e-02,
         -7.4240e-02, -1.8475e-01,  2.3547e-02,  3.9895e-01, -9.8183e-03,
         -3.1733e-02,  5.7169e-02, -5.5843e-02, -1.5511e-02, -1.5679e-02,
          2.6607e-01,  3.2611e-01,  3.8151e-01, -2.3310e-01,  3.5310e-02,
          2.0286e-01, -3.7223e-02, -6.7736e-02,  6.2230e-02, -7.7339e-02,
         -3.5783e-02,  2.0837e-03]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
144000 特征值优化 tensor(1.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6301e-01,  9.6664e-01, -2.3092e-02,  1.3747e-01,  1.3753e+00,
          1.7503e+00, -2.7079e-01, -2.1649e+00, -1.3268e+00,  5.3592e-01,
          9.0385e-01,  1.3534e+00,  2.4620e-01, -5.6576e-02, -1.8394e-01,
         -6.4346e-02,  4.5351e-02,  1.9060e-01, -6.0369e-02,  1.8202e-02,
         -7.3178e-02, -1.8470e-01,  6.9409e-03,  3.9889e-01, -1.0653e-02,
         -2.9409e-02,  5.8759e-02, -5.4345e-02, -1.3458e-02, -1.5503e-02,
          2.6535e-01,  3.1138e-01,  3.7488e-01, -2.3285e-01,  3.7155e-02,
          2.0360e-01, -3.8475e-02, -6.7709e-02,  6.2743e-02, -8.0170e-02,
         -3.0441e-02,  1.8353e-03]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
145000 特征值优化 tensor(1.0654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4668e-01,  9.6442e-01, -2.2025e-02,  1.3844e-01,  1.3864e+00,
          1.7436e+00, -2.6446e-01, -2.1675e+00, -1.3265e+00,  5.2677e-01,
          9.0278e-01,  1.3609e+00,  2.4703e-01, -4.5964e-02, -1.8800e-01,
         -6.1742e-02,  5.0232e-02,  1.9917e-01, -7.0360e-02,  2.8831e-02,
         -7.3941e-02, -1.8449e-01,  9.7759e-03,  4.0475e-01, -1.2530e-02,
         -3.3488e-02,  4.4989e-02, -5.7140e-02, -1.2927e-02, -1.5746e-02,
          2.6693e-01,  3.2972e-01,  3.8128e-01, -2.3337e-01,  3.7815e-02,
          2.0369e-01, -4.5974e-02, -6.3293e-02,  6.3062e-02, -7.7724e-02,
         -3.1908e-02,  8.5252e-04]], device='cuda:0') tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
146000 特征值优化 tensor(1.0760, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6574e-01,  9.5694e-01, -3.5212e-02,  1.4000e-01,  1.3538e+00,
          1.7420e+00, -2.5283e-01, -2.1538e+00, -1.3284e+00,  5.1484e-01,
          9.1302e-01,  1.3659e+00,  2.4641e-01, -5.6973e-02, -2.0216e-01,
         -2.5632e-02,  6.7613e-03,  1.8532e-01, -1.9041e-02,  2.1679e-03,
         -7.0698e-02, -1.8453e-01,  2.2277e-02,  3.8662e-01, -3.6866e-02,
          6.0385e-03,  5.9788e-02, -5.8801e-02, -2.1608e-02, -1.3474e-02,
          2.7132e-01,  3.2626e-01,  3.7893e-01, -2.3313e-01,  3.5532e-02,
          2.0096e-01, -1.4983e-02, -7.0989e-02,  6.5198e-02, -7.6395e-02,
         -6.3017e-02,  1.4919e-04]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
147000 特征值优化 tensor(1.0780, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6447e-01,  9.5297e-01, -3.7986e-02,  1.4251e-01,  1.3575e+00,
          1.7420e+00, -2.4939e-01, -2.1568e+00, -1.3360e+00,  5.0741e-01,
          9.1261e-01,  1.3699e+00,  2.4864e-01, -5.4322e-02, -2.0524e-01,
         -2.1180e-02,  1.2845e-02,  1.9337e-01, -1.5721e-02, -5.2089e-05,
         -7.2990e-02, -1.8599e-01,  7.2019e-03,  3.8470e-01, -4.5691e-02,
          1.1105e-02,  5.8589e-02, -5.7212e-02, -2.5009e-02, -1.4021e-02,
          2.7176e-01,  3.2035e-01,  3.7613e-01, -2.3317e-01,  3.5427e-02,
          2.0103e-01, -7.4868e-03, -7.4208e-02,  6.5321e-02, -7.4595e-02,
         -7.0093e-02, -1.1840e-03]], device='cuda:0') tensor(0.2191, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
148000 特征值优化 tensor(1.0783, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6173e-01,  9.6067e-01, -3.2071e-02,  1.4495e-01,  1.3699e+00,
          1.7452e+00, -2.6263e-01, -2.1877e+00, -1.3580e+00,  5.0318e-01,
          8.8669e-01,  1.3847e+00,  2.4814e-01, -4.2931e-02, -2.1635e-01,
         -2.9659e-02,  3.5205e-02,  2.0872e-01, -2.3414e-02, -6.7319e-03,
         -7.3153e-02, -1.8510e-01, -2.7338e-03,  3.8568e-01, -4.5581e-02,
          7.2001e-03,  5.6271e-02, -4.8136e-02, -2.1396e-02, -1.5346e-02,
          2.7586e-01,  3.1322e-01,  3.7270e-01, -2.3460e-01,  3.6266e-02,
          2.0069e-01, -3.8022e-02, -6.9504e-02,  6.6608e-02, -7.2053e-02,
         -5.8041e-02, -1.6951e-03]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
149000 特征值优化 tensor(1.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2403,  0.9809, -0.0225,  0.1374,  1.3938,  1.7409, -0.2510, -2.1816,
         -1.3716,  0.4933,  0.8839,  1.3929,  0.2468, -0.0210, -0.2018, -0.0523,
          0.0402,  0.2332, -0.0370, -0.0387, -0.0736, -0.1841,  0.0080,  0.3984,
         -0.0413,  0.0218,  0.0716, -0.0425, -0.0128, -0.0154,  0.2684,  0.3306,
          0.3773, -0.2327,  0.0337,  0.2002, -0.0621, -0.0543,  0.0682, -0.0695,
         -0.0253, -0.0035]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
150000 特征值优化 tensor(1.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3247e-01,  9.6996e-01, -2.2667e-02,  1.3104e-01,  1.4047e+00,
          1.7391e+00, -2.6010e-01, -2.1853e+00, -1.3694e+00,  4.7531e-01,
          8.7413e-01,  1.4004e+00,  2.4699e-01, -1.7594e-02, -2.0456e-01,
         -4.3085e-02,  2.8938e-02,  2.3697e-01, -4.3202e-02, -5.8947e-02,
         -7.4884e-02, -1.8376e-01, -4.0987e-04,  4.0368e-01, -5.0495e-02,
          2.1606e-02,  6.2976e-02, -3.8967e-02, -1.2710e-02, -1.4803e-02,
          2.6935e-01,  3.2734e-01,  3.7700e-01, -2.3192e-01,  3.6466e-02,
          2.0175e-01, -3.7522e-02, -6.2604e-02,  6.7961e-02, -6.9349e-02,
         -4.5782e-02, -4.4808e-03]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
151000 特征值优化 tensor(1.0621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2445,  0.9569, -0.0235,  0.1355,  1.4079,  1.7467, -0.2563, -2.1896,
         -1.3638,  0.4653,  0.8668,  1.3907,  0.2468, -0.0215, -0.2057, -0.0452,
          0.0413,  0.2412, -0.0443, -0.0403, -0.0758, -0.1841,  0.0187,  0.3943,
         -0.0526,  0.0258,  0.0832, -0.0375, -0.0132, -0.0152,  0.2698,  0.3214,
          0.3723, -0.2336,  0.0396,  0.2021, -0.0460, -0.0605,  0.0678, -0.0732,
         -0.0359, -0.0036]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
152000 特征值优化 tensor(2.3195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7468, -0.7517, -0.5543, -0.9399,  1.2011,  0.6936, -0.2059,  1.0743,
          0.1954,  1.1523,  0.8609,  0.6697, -0.0843, -0.1049, -0.1867,  0.1427,
          0.2444, -1.1155,  0.3352,  0.0605,  0.3977, -0.0930,  0.0176, -0.0043,
          0.1410, -0.3217,  0.1059,  1.5744, -0.0194,  0.0753, -0.0513, -0.1521,
          0.4271,  0.0904,  0.2447, -0.0790,  0.1082,  0.0118,  0.0140, -0.3544,
         -0.0044,  0.0248]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
153000 特征值优化 tensor(1.0556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2379, -0.6965, -0.8325, -0.9645,  1.5367,  0.9057, -0.0640,  1.0418,
         -0.0912,  1.8100,  1.2477,  1.0695,  0.0088,  0.0070,  0.0299, -0.1334,
          0.0920, -0.4727,  0.1078, -0.0217,  0.2325, -0.1421, -0.0874,  0.0995,
          0.1483,  0.0275, -0.1478,  0.6922,  0.0041,  0.0522, -0.0227, -0.1982,
          0.3618,  0.2050,  0.2642, -0.1191,  0.0508, -0.0225, -0.1050, -0.2637,
          0.0258,  0.0951]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
154000 特征值优化 tensor(0.9495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1936, -0.6572, -0.8862, -0.9409,  1.5465,  1.2372,  0.0985,  1.2054,
         -0.2924,  2.1029,  1.3492,  1.1065,  0.0166, -0.0121,  0.0463, -0.0969,
          0.0351, -0.3044,  0.0694, -0.0081,  0.2245, -0.1408, -0.1271,  0.1694,
          0.1133,  0.1580, -0.1739,  0.3482, -0.0187,  0.0399, -0.0225, -0.2097,
          0.3896,  0.2426,  0.1451, -0.1958,  0.0269, -0.0262, -0.0739, -0.2243,
          0.0632,  0.0641]], device='cuda:0') tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
155000 特征值优化 tensor(0.8628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5622e-01, -6.7072e-01, -7.0196e-01, -7.6727e-01,  1.5829e+00,
          1.2028e+00,  2.2883e-01,  1.2982e+00, -6.4047e-01,  2.3332e+00,
          1.4496e+00,  9.1753e-01,  2.1219e-02, -3.3544e-02,  5.4815e-02,
         -1.3715e-01,  4.1562e-02, -2.1281e-01,  9.6479e-02, -6.7152e-04,
          2.3294e-01, -1.4328e-01, -1.5938e-01,  2.0293e-01,  1.6178e-01,
          1.6829e-01, -6.4993e-02,  2.0116e-01,  3.3257e-03,  3.6381e-02,
         -2.7113e-02, -2.5315e-01,  3.8991e-01,  2.3780e-01,  8.4046e-02,
         -2.1326e-01,  4.0598e-02, -9.5619e-03,  4.7657e-02, -1.2039e-01,
          9.2012e-02, -2.5352e-02]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
156000 特征值优化 tensor(0.8627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4942e-01, -6.7517e-01, -7.1838e-01, -7.3454e-01,  1.5671e+00,
          1.1943e+00,  2.9369e-01,  1.3807e+00, -7.5071e-01,  2.1407e+00,
          1.5001e+00,  7.1989e-01,  1.8520e-02, -4.0935e-02,  4.5899e-02,
         -1.2533e-01,  5.6340e-02, -2.0983e-01,  1.0610e-01, -1.3948e-02,
          2.3064e-01, -1.4027e-01, -1.9508e-01,  1.7717e-01,  6.7451e-02,
          1.0559e-01, -9.9139e-02,  1.4134e-01, -3.3284e-02,  3.3259e-02,
         -2.4677e-02, -2.1934e-01,  4.0989e-01,  2.3895e-01,  1.2052e-01,
         -1.6120e-01,  5.9234e-02,  3.0965e-03,  7.3095e-02, -9.9973e-02,
          8.6686e-02, -1.6207e-03]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
157000 特征值优化 tensor(0.7959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.3560e-02, -8.3017e-01, -7.4278e-01, -7.3739e-01,  1.5634e+00,
          1.3457e+00,  4.7516e-01,  1.4751e+00, -9.7954e-01,  1.8872e+00,
          1.6654e+00,  3.4941e-01, -1.1854e-03,  8.0983e-02,  1.5563e-01,
         -6.9160e-02,  6.7998e-02, -2.0374e-01,  2.1584e-01, -4.3782e-02,
          2.2743e-01, -1.3780e-01, -1.6650e-01,  2.4871e-01,  7.1902e-02,
          6.9485e-02, -1.5526e-02,  4.3097e-02,  1.5366e-02,  3.0759e-02,
         -1.9707e-02, -1.0612e-01,  4.1409e-01,  2.8079e-01,  1.1801e-01,
         -2.1991e-01,  3.4481e-02, -3.9616e-02,  9.3440e-02, -6.7377e-02,
          1.9996e-02,  5.4959e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
158000 特征值优化 tensor(0.7958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.9984e-02, -8.1338e-01, -7.7729e-01, -7.7109e-01,  1.5475e+00,
          1.3439e+00,  5.7881e-01,  1.6343e+00, -9.8689e-01,  1.8777e+00,
          1.8997e+00,  3.4787e-01, -6.4922e-04, -6.2509e-02, -3.4769e-04,
         -3.6942e-02,  6.7550e-02, -2.0254e-01,  2.0822e-01, -3.9858e-02,
          2.2765e-01, -1.3673e-01, -1.4960e-01,  2.5865e-01, -9.8896e-03,
         -4.1472e-02, -1.0736e-01,  7.7667e-02,  7.7268e-03,  3.2853e-02,
         -2.1462e-02, -1.2406e-01,  4.3206e-01,  2.8057e-01,  1.8321e-01,
         -1.6377e-01,  4.3226e-02, -4.0444e-02,  1.0062e-01, -6.3095e-02,
         -1.0163e-03,  4.7274e-02]], device='cuda:0') tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
159000 特征值优化 tensor(0.7962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.8220e-02, -8.1557e-01, -7.3938e-01, -7.3654e-01,  1.5470e+00,
          1.3430e+00,  6.5763e-01,  1.7608e+00, -9.9038e-01,  1.8721e+00,
          2.0980e+00,  3.5489e-01, -2.8138e-04, -5.2468e-02,  1.1675e-02,
         -3.8745e-02,  7.6949e-02, -2.1257e-01,  2.0848e-01, -4.2278e-02,
          2.2741e-01, -1.3774e-01, -1.5680e-01,  2.5822e-01,  3.0422e-02,
         -3.9434e-02, -1.0929e-01,  4.2117e-02, -5.2271e-04,  3.1452e-02,
         -2.1470e-02, -1.3420e-01,  4.4526e-01,  2.8193e-01,  1.6587e-01,
         -1.8596e-01,  4.6568e-02, -3.7020e-02,  9.8487e-02, -6.2308e-02,
          9.0151e-04,  4.7893e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
160000 特征值优化 tensor(0.7943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0192e-01, -8.2074e-01, -7.4572e-01, -7.4503e-01,  1.5470e+00,
          1.3439e+00,  7.0964e-01,  1.8667e+00, -9.9073e-01,  1.8612e+00,
          2.2746e+00,  3.7019e-01, -2.0068e-03, -5.5235e-02,  1.4562e-02,
         -4.8704e-02,  9.4065e-02, -2.3674e-01,  1.8588e-01, -4.0584e-02,
          2.2916e-01, -1.3692e-01, -1.8856e-01,  2.3676e-01,  2.3546e-02,
         -3.7049e-02, -9.9237e-02,  5.4917e-02,  3.5997e-02,  3.1951e-02,
         -2.1681e-02, -1.4032e-01,  4.5484e-01,  2.8299e-01,  1.6599e-01,
         -1.8884e-01,  5.4961e-02, -3.1124e-02,  9.6469e-02, -6.0608e-02,
         -3.6509e-05,  4.7656e-02]], device='cuda:0') tensor(0.2070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
161000 特征值优化 tensor(0.8154, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.6781e-02, -8.0346e-01, -7.3264e-01, -7.2125e-01,  1.5389e+00,
          1.3432e+00,  7.5958e-01,  1.9384e+00, -9.7967e-01,  1.8403e+00,
          2.4523e+00,  3.9734e-01,  9.1343e-04, -3.8559e-02,  2.5960e-02,
         -1.7685e-02,  7.9968e-02, -2.5011e-01,  2.1029e-01, -5.6761e-02,
          2.2615e-01, -1.3836e-01, -2.0699e-01,  2.3038e-01,  3.7420e-02,
         -1.6548e-02, -8.6623e-02,  4.1700e-02, -7.6372e-03,  3.0321e-02,
         -2.1333e-02, -1.4492e-01,  4.6435e-01,  2.8083e-01,  1.5207e-01,
         -2.1422e-01,  5.0661e-02, -3.2757e-02,  1.0067e-01, -6.8248e-02,
          3.7453e-03,  5.3826e-02]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
162000 特征值优化 tensor(0.8052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.4489e-02, -7.9932e-01, -7.2852e-01, -7.2794e-01,  1.5460e+00,
          1.3451e+00,  7.8625e-01,  2.0128e+00, -9.9350e-01,  1.8406e+00,
          2.6018e+00,  4.0471e-01,  1.3410e-03, -1.0830e-02,  5.2731e-02,
         -1.3262e-02,  7.7709e-02, -2.1910e-01,  2.4162e-01, -5.6913e-02,
          2.2476e-01, -1.3857e-01, -2.4096e-01,  2.0514e-01,  5.4502e-02,
          1.8862e-02, -4.9302e-02,  2.1736e-02, -2.4641e-02,  3.0359e-02,
         -2.1291e-02, -1.4853e-01,  4.7288e-01,  2.8269e-01,  1.3511e-01,
         -2.1900e-01,  4.3975e-02, -3.3851e-02,  9.8452e-02, -6.6174e-02,
          1.8202e-02,  5.3354e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
163000 特征值优化 tensor(0.7984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.7745e-02, -7.8903e-01, -7.3192e-01, -7.3096e-01,  1.5468e+00,
          1.3441e+00,  8.1622e-01,  2.0967e+00, -1.0204e+00,  1.8533e+00,
          2.7710e+00,  4.0092e-01,  2.4852e-03,  5.8711e-03,  6.6535e-02,
         -1.7633e-02,  7.5582e-02, -2.2331e-01,  2.5427e-01, -5.6619e-02,
          2.2336e-01, -1.3763e-01, -2.5150e-01,  1.8256e-01,  7.3941e-02,
          2.7663e-02, -3.9913e-02,  1.0069e-03, -3.3374e-02,  3.1170e-02,
         -2.1146e-02, -1.5139e-01,  4.8062e-01,  2.8257e-01,  1.2593e-01,
         -2.2273e-01,  3.9805e-02, -3.3184e-02,  9.5675e-02, -6.4092e-02,
          2.9776e-02,  5.2713e-02]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
164000 特征值优化 tensor(0.7938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0761, -0.7893, -0.7360, -0.7354,  1.5470,  1.3438,  0.8520,  2.1943,
         -1.0430,  1.8614,  2.9834,  0.3995,  0.0034,  0.0175,  0.0743, -0.0170,
          0.0752, -0.2288,  0.2687, -0.0549,  0.2238, -0.1378, -0.2555,  0.1676,
          0.0964,  0.0369, -0.0309, -0.0187, -0.0432,  0.0310, -0.0213, -0.1547,
          0.4911,  0.2827,  0.1154, -0.2287,  0.0397, -0.0279,  0.0948, -0.0643,
          0.0478,  0.0525]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
165000 特征值优化 tensor(0.7929, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.8001e-02, -7.8997e-01, -7.3787e-01, -7.3868e-01,  1.5475e+00,
          1.3439e+00,  8.8472e-01,  2.2849e+00, -1.0535e+00,  1.8583e+00,
          3.1921e+00,  4.1022e-01,  2.6734e-03,  2.6041e-02,  7.4841e-02,
         -1.0624e-02,  7.4626e-02, -2.3412e-01,  2.6546e-01, -5.6818e-02,
          2.2426e-01, -1.3767e-01, -2.4810e-01,  1.6836e-01,  1.0219e-01,
          5.6360e-02, -1.3569e-02, -2.0529e-02, -4.4509e-02,  3.1284e-02,
         -2.1392e-02, -1.5844e-01,  5.0119e-01,  2.8262e-01,  1.1235e-01,
         -2.3124e-01,  4.1653e-02, -2.2276e-02,  9.5696e-02, -6.3990e-02,
          6.0162e-02,  5.1349e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
166000 特征值优化 tensor(0.7922, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.7529e-02, -8.0043e-01, -7.3990e-01, -7.3898e-01,  1.5480e+00,
          1.3435e+00,  9.1796e-01,  2.3778e+00, -1.0614e+00,  1.8454e+00,
          3.4122e+00,  4.1346e-01,  1.3761e-05,  5.4066e-02,  4.1259e-02,
         -6.4678e-03,  8.5360e-02, -2.4711e-01,  2.7126e-01, -5.1571e-02,
          2.2755e-01, -1.3748e-01, -2.2684e-01,  1.7257e-01,  6.3331e-02,
          2.2774e-02,  1.7238e-02, -5.2370e-02, -3.5940e-02,  3.1366e-02,
         -2.1482e-02, -1.6062e-01,  5.1167e-01,  2.8270e-01,  1.1456e-01,
         -2.3088e-01,  4.2046e-02, -2.6504e-02,  1.0455e-01, -5.9835e-02,
          4.7044e-02,  4.4089e-02]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
167000 特征值优化 tensor(0.7934, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.2686e-02, -8.0824e-01, -7.3906e-01, -7.3751e-01,  1.5470e+00,
          1.3435e+00,  9.4874e-01,  2.4639e+00, -1.0728e+00,  1.8346e+00,
          3.6230e+00,  4.2339e-01, -7.4223e-04,  6.9845e-02,  5.7852e-02,
          1.7641e-03,  9.1119e-02, -2.6449e-01,  2.7816e-01, -4.7024e-02,
          2.2803e-01, -1.3779e-01, -2.2491e-01,  1.7689e-01,  7.2829e-02,
          1.6878e-02,  1.2407e-02, -5.6905e-02, -3.5933e-02,  3.1173e-02,
         -2.1566e-02, -1.6391e-01,  5.2125e-01,  2.8275e-01,  1.1720e-01,
         -2.2996e-01,  3.4152e-02, -4.0357e-02,  1.0545e-01, -5.7924e-02,
          2.1696e-02,  4.3307e-02]], device='cuda:0') tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
168000 特征值优化 tensor(0.7952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0586e-02, -8.0693e-01, -7.4037e-01, -7.4343e-01,  1.5469e+00,
          1.3440e+00,  9.7443e-01,  2.5328e+00, -1.0753e+00,  1.8177e+00,
          3.7950e+00,  4.4318e-01,  2.7128e-04,  7.2428e-02,  6.1268e-02,
         -3.5194e-03,  9.8214e-02, -2.8043e-01,  2.7788e-01, -4.7288e-02,
          2.2676e-01, -1.3717e-01, -2.2712e-01,  1.7687e-01,  7.2188e-02,
          1.7107e-02,  1.5041e-02, -5.6789e-02, -2.3433e-02,  3.1556e-02,
         -2.1523e-02, -1.6634e-01,  5.3004e-01,  2.8335e-01,  1.1713e-01,
         -2.3107e-01,  3.3882e-02, -4.4656e-02,  1.0287e-01, -5.7170e-02,
          1.0944e-02,  4.3540e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
169000 特征值优化 tensor(0.7990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.4066e-02, -8.0872e-01, -7.3653e-01, -7.3775e-01,  1.5476e+00,
          1.3431e+00,  9.9510e-01,  2.5988e+00, -1.0839e+00,  1.8098e+00,
          3.9513e+00,  4.6800e-01,  6.4469e-04,  6.3964e-02,  5.1159e-02,
         -4.1241e-03,  1.0202e-01, -2.9644e-01,  2.7619e-01, -4.6028e-02,
          2.2650e-01, -1.3735e-01, -2.1876e-01,  1.9011e-01,  4.6596e-02,
         -2.1456e-02, -5.5880e-03, -3.9983e-02, -2.6564e-02,  3.1112e-02,
         -2.1472e-02, -1.6770e-01,  5.3659e-01,  2.8231e-01,  1.2721e-01,
         -2.2467e-01,  4.1250e-02, -4.1642e-02,  1.0053e-01, -5.9891e-02,
         -1.2560e-04,  4.5904e-02]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
170000 特征值优化 tensor(0.8024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.2828e-02, -8.0798e-01, -7.4230e-01, -7.4126e-01,  1.5471e+00,
          1.3449e+00,  1.0153e+00,  2.6582e+00, -1.0870e+00,  1.7918e+00,
          4.1068e+00,  4.8845e-01,  4.9050e-04,  5.5955e-02,  4.3195e-02,
         -2.7216e-03,  9.8661e-02, -2.9812e-01,  2.8213e-01, -4.8174e-02,
          2.2646e-01, -1.3713e-01, -2.0694e-01,  2.0532e-01,  4.1247e-02,
         -1.5473e-02, -7.6054e-03, -3.4557e-02, -1.1166e-02,  3.1248e-02,
         -2.1530e-02, -1.6914e-01,  5.4391e-01,  2.8226e-01,  1.2667e-01,
         -2.2148e-01,  4.2614e-02, -3.9441e-02,  1.0914e-01, -6.3403e-02,
          2.0452e-03,  4.7873e-02]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
171000 特征值优化 tensor(0.7966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.6877e-02, -8.1544e-01, -7.5210e-01, -7.5076e-01,  1.5472e+00,
          1.3357e+00,  1.0304e+00,  2.7170e+00, -1.1104e+00,  1.7867e+00,
          4.2478e+00,  5.0057e-01, -1.7406e-03,  1.2934e-02,  4.3596e-04,
         -1.8436e-02,  1.2666e-01, -3.1760e-01,  2.7555e-01, -4.3661e-02,
          2.2872e-01, -1.3649e-01, -2.4693e-01,  1.6490e-01, -5.7167e-02,
         -8.3614e-03, -2.6129e-02,  5.5248e-02,  4.1242e-03,  3.2536e-02,
         -2.1453e-02, -1.7016e-01,  5.4920e-01,  2.8077e-01,  1.6098e-01,
         -1.9258e-01,  4.9758e-02, -3.4886e-02,  9.7593e-02, -6.4514e-02,
         -4.2751e-03,  5.4544e-02]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
172000 特征值优化 tensor(0.7923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.7387e-02, -8.0403e-01, -7.4553e-01, -7.4884e-01,  1.5468e+00,
          1.3370e+00,  1.0457e+00,  2.7671e+00, -1.1446e+00,  1.8053e+00,
          4.3957e+00,  4.9020e-01,  6.9726e-04,  7.5760e-02,  5.8719e-02,
          4.5016e-03,  9.4664e-02, -2.9287e-01,  2.9437e-01, -4.9009e-02,
          2.2638e-01, -1.3699e-01, -2.5115e-01,  1.5726e-01,  8.0140e-02,
          1.0909e-02,  7.0372e-03, -5.1823e-02,  9.7332e-03,  3.2040e-02,
         -2.1502e-02, -1.7280e-01,  5.5640e-01,  2.8212e-01,  1.1042e-01,
         -2.2720e-01,  3.6982e-02, -4.0176e-02,  1.0752e-01, -5.6947e-02,
          1.8139e-02,  4.2171e-02]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
173000 特征值优化 tensor(0.7962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0122e-02, -8.0441e-01, -7.4824e-01, -7.4880e-01,  1.5469e+00,
          1.3423e+00,  1.0609e+00,  2.8087e+00, -1.1371e+00,  1.7805e+00,
          4.5210e+00,  5.2780e-01,  1.2260e-03,  6.6576e-02,  5.2865e-02,
         -1.9882e-03,  1.0689e-01, -3.0639e-01,  2.8888e-01, -4.7399e-02,
          2.2682e-01, -1.3648e-01, -2.1481e-01,  1.8855e-01,  5.2654e-02,
         -1.0068e-02, -6.8832e-03, -5.0529e-02, -1.8863e-02,  3.2464e-02,
         -2.1520e-02, -1.7410e-01,  5.6199e-01,  2.8318e-01,  1.1943e-01,
         -2.2378e-01,  4.4367e-02, -3.6154e-02,  1.0552e-01, -5.8676e-02,
          9.2601e-03,  4.4239e-02]], device='cuda:0') tensor(0.2068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
174000 特征值优化 tensor(0.8229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.3565e-02, -8.0525e-01, -7.4741e-01, -7.2796e-01,  1.5452e+00,
          1.3269e+00,  1.0692e+00,  2.8644e+00, -1.1638e+00,  1.7768e+00,
          4.6295e+00,  5.3119e-01,  1.4556e-03,  2.7527e-02,  9.4713e-03,
         -7.5595e-03,  1.1273e-01, -3.3506e-01,  2.9096e-01, -4.8632e-02,
          2.2618e-01, -1.3803e-01, -1.7884e-01,  2.2120e-01, -5.8733e-03,
         -5.2541e-02, -4.1419e-02,  2.9390e-02,  6.4941e-03,  3.1214e-02,
         -2.1444e-02, -1.7010e-01,  5.6198e-01,  2.8244e-01,  1.5578e-01,
         -2.1271e-01,  5.0286e-02, -3.4004e-02,  1.0907e-01, -6.3770e-02,
          1.1645e-03,  4.9724e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
175000 特征值优化 tensor(0.8072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.4684e-02, -8.0464e-01, -7.3282e-01, -7.2830e-01,  1.5462e+00,
          1.3273e+00,  1.0809e+00,  2.9003e+00, -1.1573e+00,  1.7567e+00,
          4.7466e+00,  5.6565e-01, -5.8274e-04,  3.2526e-02,  1.0449e-02,
         -1.5808e-02,  1.1339e-01, -3.0449e-01,  2.8669e-01, -5.0058e-02,
          2.2735e-01, -1.3793e-01, -2.3621e-01,  2.0490e-01, -2.3613e-02,
          4.5201e-02,  1.9376e-02,  3.1719e-02, -2.4986e-03,  3.0878e-02,
         -2.1453e-02, -1.7396e-01,  5.7104e-01,  2.7903e-01,  1.4282e-01,
         -2.1505e-01,  4.5139e-02, -3.5159e-02,  1.1030e-01, -6.2901e-02,
          1.0602e-02,  4.6053e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
176000 特征值优化 tensor(0.7992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.5185e-02, -8.0905e-01, -7.3333e-01, -7.3468e-01,  1.5472e+00,
          1.3421e+00,  1.0922e+00,  2.9418e+00, -1.1896e+00,  1.7658e+00,
          4.8662e+00,  5.6609e-01,  5.9530e-04,  5.5857e-02,  4.3768e-02,
         -2.5874e-03,  1.1375e-01, -3.1978e-01,  2.9789e-01, -4.6971e-02,
          2.2665e-01, -1.3765e-01, -1.7861e-01,  2.3346e-01, -2.2662e-02,
          3.2975e-02,  2.8704e-02,  3.6898e-03,  2.9682e-02,  3.1401e-02,
         -2.1382e-02, -1.7511e-01,  5.7461e-01,  2.8164e-01,  1.1953e-01,
         -2.2674e-01,  4.8234e-02, -3.3417e-02,  1.0391e-01, -5.8639e-02,
          9.0712e-03,  4.4085e-02]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
177000 特征值优化 tensor(0.7972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.2735e-02, -8.1181e-01, -7.4433e-01, -7.4429e-01,  1.5472e+00,
          1.3338e+00,  1.1027e+00,  2.9827e+00, -1.2008e+00,  1.7511e+00,
          4.9721e+00,  5.8657e-01, -2.7572e-04,  1.6743e-02,  5.6770e-04,
         -1.4293e-02,  1.2579e-01, -3.3411e-01,  2.9424e-01, -4.5176e-02,
          2.2715e-01, -1.3685e-01, -1.9345e-01,  2.2208e-01,  1.0364e-02,
         -5.4651e-02, -5.7402e-02,  1.5147e-02,  5.0148e-05,  3.2040e-02,
         -2.1375e-02, -1.7600e-01,  5.7987e-01,  2.8051e-01,  1.5027e-01,
         -2.0185e-01,  5.0204e-02, -3.2072e-02,  9.9006e-02, -6.0877e-02,
          4.9413e-03,  4.8752e-02]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
178000 特征值优化 tensor(0.7905, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.2568e-02, -7.9954e-01, -7.3976e-01, -7.4335e-01,  1.5469e+00,
          1.3438e+00,  1.1136e+00,  3.0166e+00, -1.2374e+00,  1.7692e+00,
          5.0874e+00,  5.7757e-01,  1.0249e-03,  7.6872e-02,  6.2139e-02,
          4.8333e-03,  1.0486e-01, -3.1408e-01,  3.0393e-01, -5.2308e-02,
          2.2607e-01, -1.3730e-01, -2.3448e-01,  1.6872e-01, -1.7628e-02,
          1.0354e-01,  9.2450e-02,  2.7999e-02,  2.8814e-03,  3.1883e-02,
         -2.1356e-02, -1.7805e-01,  5.8523e-01,  2.8353e-01,  1.1291e-01,
         -2.3155e-01,  3.9232e-02, -3.8396e-02,  1.1195e-01, -5.5017e-02,
          1.8672e-02,  3.7644e-02]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
179000 特征值优化 tensor(0.8304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.1518e-02, -8.0810e-01, -7.5494e-01, -7.3942e-01,  1.5454e+00,
          1.3247e+00,  1.1215e+00,  3.0641e+00, -1.2477e+00,  1.7447e+00,
          5.1824e+00,  6.0192e-01, -1.4311e-03,  2.0704e-02,  1.7493e-03,
         -7.1435e-03,  1.2085e-01, -3.5388e-01,  3.0945e-01, -4.8204e-02,
          2.2706e-01, -1.3578e-01, -2.3493e-01,  1.6977e-01, -6.9491e-02,
         -1.6686e-02, -2.5943e-02,  5.6693e-02, -1.1033e-02,  3.1600e-02,
         -2.1688e-02, -1.7482e-01,  5.8627e-01,  2.8263e-01,  1.5641e-01,
         -2.0749e-01,  5.6595e-02, -2.9636e-02,  1.0605e-01, -6.4732e-02,
         -1.0903e-03,  4.9597e-02]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
180000 特征值优化 tensor(0.7934, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.4134e-02, -8.1619e-01, -7.3955e-01, -7.3839e-01,  1.5470e+00,
          1.3342e+00,  1.1323e+00,  3.0925e+00, -1.2594e+00,  1.7371e+00,
          5.2932e+00,  6.2200e-01, -1.6133e-03,  1.6954e-02,  7.5117e-04,
         -1.0211e-02,  1.2675e-01, -3.4392e-01,  3.0482e-01, -4.4757e-02,
          2.2880e-01, -1.3755e-01, -2.2487e-01,  1.7400e-01, -6.1035e-02,
          1.5184e-02, -1.7200e-02,  6.2812e-02, -3.8453e-02,  3.1498e-02,
         -2.1498e-02, -1.7897e-01,  5.9234e-01,  2.8127e-01,  1.5559e-01,
         -2.0372e-01,  5.1519e-02, -3.0735e-02,  1.0031e-01, -5.9627e-02,
          5.0288e-03,  4.8023e-02]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
181000 特征值优化 tensor(0.8407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.8348e-02, -8.0537e-01, -7.4422e-01, -7.4572e-01,  1.5462e+00,
          1.3435e+00,  1.1392e+00,  3.1264e+00, -1.2849e+00,  1.7476e+00,
          5.3988e+00,  6.2285e-01,  2.0727e-04,  7.1717e-02,  5.7880e-02,
          9.1131e-03,  1.0739e-01, -3.2452e-01,  3.1652e-01, -4.7473e-02,
          2.2569e-01, -1.3734e-01, -1.6566e-01,  2.3911e-01,  3.2201e-02,
          7.7099e-02,  4.6950e-02, -3.0405e-02,  2.0704e-02,  3.2922e-02,
         -2.1511e-02, -1.7887e-01,  5.9652e-01,  2.8313e-01,  9.6784e-02,
         -2.3637e-01,  4.1060e-02, -3.4852e-02,  1.1445e-01, -5.4093e-02,
          2.1299e-02,  3.5236e-02]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
182000 特征值优化 tensor(0.7989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.2691e-02, -8.0788e-01, -7.4553e-01, -7.4508e-01,  1.5471e+00,
          1.3411e+00,  1.1481e+00,  3.1592e+00, -1.2686e+00,  1.7054e+00,
          5.4939e+00,  6.6738e-01,  6.9653e-04,  6.5628e-02,  5.2394e-02,
          2.4558e-03,  1.1351e-01, -3.3843e-01,  3.1112e-01, -4.6987e-02,
          2.2622e-01, -1.3686e-01, -1.9932e-01,  2.0941e-01, -7.0996e-03,
          4.8377e-02,  4.4259e-02,  1.6626e-03,  8.1106e-03,  3.2180e-02,
         -2.1360e-02, -1.8003e-01,  6.0138e-01,  2.8170e-01,  1.1229e-01,
         -2.2969e-01,  4.9670e-02, -3.0342e-02,  1.1525e-01, -5.9555e-02,
          1.4263e-02,  4.1552e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
183000 特征值优化 tensor(0.7907, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.8235e-02, -8.1486e-01, -7.4242e-01, -7.3377e-01,  1.5469e+00,
          1.3394e+00,  1.1557e+00,  3.1942e+00, -1.3145e+00,  1.7167e+00,
          5.5856e+00,  6.6443e-01, -1.4598e-03,  1.7112e-02,  2.5446e-03,
         -8.8074e-03,  1.2875e-01, -3.5074e-01,  3.0748e-01, -4.2969e-02,
          2.2896e-01, -1.3759e-01, -2.2380e-01,  1.6847e-01, -5.8169e-02,
          6.4965e-03, -3.0604e-02,  6.0288e-02, -3.7920e-02,  3.1251e-02,
         -2.1383e-02, -1.8022e-01,  6.0362e-01,  2.8138e-01,  1.5666e-01,
         -1.9949e-01,  5.4860e-02, -2.6492e-02,  1.0116e-01, -5.9289e-02,
          1.0337e-02,  4.6612e-02]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
184000 特征值优化 tensor(0.8309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.3056e-02, -8.0810e-01, -7.4559e-01, -7.3075e-01,  1.5400e+00,
          1.3341e+00,  1.1631e+00,  3.2265e+00, -1.3211e+00,  1.7064e+00,
          5.6808e+00,  6.7973e-01, -1.8161e-04,  6.7485e-02,  4.5125e-02,
         -4.8540e-03,  1.0909e-01, -3.2613e-01,  3.2887e-01, -4.9698e-02,
          2.2553e-01, -1.3732e-01, -1.5976e-01,  2.4816e-01,  2.7689e-02,
          8.7949e-02,  3.9960e-02, -1.1744e-02, -6.1942e-03,  3.1127e-02,
         -2.2221e-02, -1.7820e-01,  6.0719e-01,  2.8477e-01,  1.0669e-01,
         -2.3371e-01,  4.6058e-02, -3.1654e-02,  1.1868e-01, -5.6956e-02,
          2.5747e-02,  3.7288e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
185000 特征值优化 tensor(0.7907, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.6897e-02, -8.1937e-01, -7.4066e-01, -7.3564e-01,  1.5475e+00,
          1.3336e+00,  1.1684e+00,  3.2584e+00, -1.3584e+00,  1.7073e+00,
          5.7735e+00,  6.9258e-01, -2.3491e-03,  1.6832e-03, -1.3650e-02,
         -1.1259e-02,  1.5235e-01, -3.9268e-01,  3.1275e-01, -4.0600e-02,
          2.2884e-01, -1.3728e-01, -2.2380e-01,  1.4401e-01, -1.7724e-02,
         -1.2600e-01, -1.1650e-01,  5.7540e-03, -2.9183e-03,  3.1120e-02,
         -2.1440e-02, -1.8104e-01,  6.1044e-01,  2.8039e-01,  1.6418e-01,
         -2.0196e-01,  6.6512e-02, -1.8220e-02,  9.4957e-02, -6.4246e-02,
         -3.7801e-04,  5.4321e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
186000 特征值优化 tensor(0.8197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.8951e-02, -8.0763e-01, -7.3531e-01, -7.1365e-01,  1.5445e+00,
          1.3256e+00,  1.1761e+00,  3.2946e+00, -1.3363e+00,  1.6664e+00,
          5.8626e+00,  7.3020e-01,  8.9605e-05,  3.6208e-02,  1.5766e-02,
          2.9834e-03,  1.0630e-01, -3.7688e-01,  3.2680e-01, -5.0413e-02,
          2.2671e-01, -1.3667e-01, -1.8143e-01,  2.3535e-01, -8.6436e-02,
         -1.0714e-02, -2.6220e-03,  4.9234e-02,  9.2357e-03,  3.2237e-02,
         -2.1723e-02, -1.7946e-01,  6.1167e-01,  2.7886e-01,  1.3362e-01,
         -2.2933e-01,  5.9499e-02, -2.1775e-02,  1.0897e-01, -6.0805e-02,
          8.4397e-03,  4.3074e-02]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
187000 特征值优化 tensor(0.8017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0876e-02, -8.1011e-01, -7.3456e-01, -7.3126e-01,  1.5461e+00,
          1.3200e+00,  1.1840e+00,  3.3189e+00, -1.3524e+00,  1.6524e+00,
          5.9590e+00,  7.5193e-01, -1.3119e-03,  2.8623e-02,  1.1727e-02,
         -8.9915e-03,  1.2430e-01, -3.4651e-01,  3.1338e-01, -4.7636e-02,
          2.2810e-01, -1.3774e-01, -2.3483e-01,  1.8963e-01, -1.8225e-02,
          3.0344e-02, -3.8230e-03,  3.2355e-02, -2.8407e-02,  3.0701e-02,
         -2.1185e-02, -1.8170e-01,  6.1704e-01,  2.7741e-01,  1.3574e-01,
         -2.1732e-01,  5.3231e-02, -2.5826e-02,  1.1362e-01, -6.0487e-02,
          1.9398e-02,  4.3472e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
188000 特征值优化 tensor(0.8095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.1839e-02, -8.1061e-01, -7.3775e-01, -7.2732e-01,  1.5474e+00,
          1.3306e+00,  1.1900e+00,  3.3512e+00, -1.3735e+00,  1.6485e+00,
          6.0438e+00,  7.6758e-01, -1.9057e-04,  3.6746e-02,  1.7766e-02,
          6.0710e-03,  1.1330e-01, -3.6278e-01,  3.3032e-01, -4.9600e-02,
          2.2680e-01, -1.3828e-01, -2.2200e-01,  2.0213e-01,  2.2100e-02,
         -4.6427e-02, -3.2821e-02,  1.1455e-04, -4.7206e-03,  3.0561e-02,
         -2.1390e-02, -1.8108e-01,  6.2173e-01,  2.7907e-01,  1.2244e-01,
         -2.3022e-01,  5.7476e-02, -2.1983e-02,  1.1442e-01, -5.9835e-02,
          1.8647e-02,  3.9623e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
189000 特征值优化 tensor(0.8164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0645e-02, -8.0801e-01, -7.3690e-01, -7.1404e-01,  1.5429e+00,
          1.3221e+00,  1.1987e+00,  3.3774e+00, -1.3890e+00,  1.6368e+00,
          6.1322e+00,  7.8135e-01, -1.3237e-03,  4.8250e-02,  2.4965e-02,
         -7.4928e-03,  1.1248e-01, -3.4005e-01,  3.2289e-01, -4.8179e-02,
          2.2611e-01, -1.3715e-01, -2.2469e-01,  2.0396e-01, -5.8560e-04,
          8.6082e-02,  1.2912e-02, -3.9638e-03, -4.3877e-03,  3.2002e-02,
         -2.1606e-02, -1.8202e-01,  6.2428e-01,  2.7821e-01,  1.1816e-01,
         -2.2512e-01,  4.9327e-02, -2.6755e-02,  1.2025e-01, -5.2070e-02,
          3.3308e-02,  3.0131e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
190000 特征值优化 tensor(0.8040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.3924e-02, -8.0788e-01, -7.3965e-01, -7.3947e-01,  1.5459e+00,
          1.3441e+00,  1.2057e+00,  3.4020e+00, -1.4031e+00,  1.6227e+00,
          6.2165e+00,  8.0399e-01,  8.9725e-04,  5.6149e-02,  3.6491e-02,
          2.9932e-03,  1.1432e-01, -3.5870e-01,  3.2043e-01, -4.7560e-02,
          2.2674e-01, -1.3739e-01, -1.9781e-01,  2.1673e-01, -9.7358e-03,
         -1.2581e-03,  3.5369e-03, -1.8001e-02,  2.3187e-03,  3.0947e-02,
         -2.1492e-02, -1.8440e-01,  6.2783e-01,  2.8305e-01,  1.1352e-01,
         -2.2785e-01,  5.6733e-02, -2.0570e-02,  1.1842e-01, -5.8373e-02,
          2.5455e-02,  3.8647e-02]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
191000 特征值优化 tensor(0.8130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0575e-02, -8.0933e-01, -7.3531e-01, -7.1666e-01,  1.5457e+00,
          1.3241e+00,  1.2097e+00,  3.4362e+00, -1.4214e+00,  1.6108e+00,
          6.2950e+00,  8.1962e-01,  3.8395e-04,  4.5047e-02,  2.3922e-02,
         -7.6487e-03,  1.1745e-01, -3.5139e-01,  3.1752e-01, -4.8180e-02,
          2.2614e-01, -1.3890e-01, -2.2116e-01,  2.0572e-01,  2.9299e-02,
          2.4168e-02,  1.3401e-02,  6.2769e-03,  4.2700e-03,  3.0598e-02,
         -2.1492e-02, -1.8215e-01,  6.2826e-01,  2.7739e-01,  1.1955e-01,
         -2.3091e-01,  5.3970e-02, -2.3105e-02,  1.1926e-01, -5.8942e-02,
          2.7310e-02,  3.7100e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
192000 特征值优化 tensor(0.7918, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.4513e-02, -8.1955e-01, -7.5813e-01, -7.5692e-01,  1.5478e+00,
          1.3262e+00,  1.2172e+00,  3.4558e+00, -1.4635e+00,  1.6114e+00,
          6.3774e+00,  8.2646e-01, -2.4534e-03,  1.2538e-02, -4.7800e-03,
         -1.1175e-03,  1.3268e-01, -3.7682e-01,  3.3671e-01, -4.3109e-02,
          2.2843e-01, -1.3630e-01, -2.4615e-01,  1.4962e-01, -6.0244e-02,
         -1.8410e-02, -4.5467e-02,  4.6294e-02, -3.1034e-02,  3.3133e-02,
         -2.1327e-02, -1.8498e-01,  6.3336e-01,  2.7918e-01,  1.5544e-01,
         -1.9378e-01,  5.9795e-02, -1.8759e-02,  1.0912e-01, -6.0150e-02,
          2.0014e-02,  4.4446e-02]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
193000 特征值优化 tensor(0.8110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.9053e-02, -8.0917e-01, -7.3207e-01, -7.1607e-01,  1.5481e+00,
          1.3238e+00,  1.2217e+00,  3.4865e+00, -1.4572e+00,  1.5873e+00,
          6.4462e+00,  8.5057e-01, -2.5632e-05,  4.2045e-02,  1.5913e-02,
         -3.9517e-03,  1.1756e-01, -3.5613e-01,  3.2407e-01, -4.8500e-02,
          2.2639e-01, -1.3675e-01, -1.8860e-01,  2.2976e-01, -5.2451e-03,
          6.1288e-02,  1.3688e-02,  2.1863e-02, -1.5810e-02,  3.2512e-02,
         -2.1335e-02, -1.8360e-01,  6.3439e-01,  2.7944e-01,  1.1789e-01,
         -2.3245e-01,  5.3900e-02, -2.2356e-02,  1.1749e-01, -5.5008e-02,
          3.0736e-02,  3.5208e-02]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
194000 特征值优化 tensor(0.8039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.3108e-02, -8.0842e-01, -7.3975e-01, -7.4156e-01,  1.5461e+00,
          1.3432e+00,  1.2303e+00,  3.5043e+00, -1.4713e+00,  1.5747e+00,
          6.5328e+00,  8.7011e-01,  6.3953e-04,  5.6432e-02,  3.6591e-02,
          4.4628e-03,  1.1586e-01, -3.6893e-01,  3.2487e-01, -4.6576e-02,
          2.2672e-01, -1.3768e-01, -1.9880e-01,  2.1474e-01, -5.1937e-03,
          2.4572e-03, -1.0804e-03, -3.1319e-02, -7.0609e-03,  3.1002e-02,
         -2.1480e-02, -1.8580e-01,  6.3918e-01,  2.8197e-01,  1.0917e-01,
         -2.3078e-01,  5.5967e-02, -2.0539e-02,  1.2184e-01, -5.5329e-02,
          3.0631e-02,  3.4992e-02]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
195000 特征值优化 tensor(0.8136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.8611e-02, -8.0617e-01, -7.2916e-01, -7.1375e-01,  1.5467e+00,
          1.3218e+00,  1.2338e+00,  3.5340e+00, -1.4904e+00,  1.5619e+00,
          6.6049e+00,  8.8398e-01, -3.2780e-04,  4.5809e-02,  2.3804e-02,
         -8.7603e-03,  1.2233e-01, -3.5849e-01,  3.2087e-01, -5.0019e-02,
          2.2686e-01, -1.3627e-01, -2.3137e-01,  2.0141e-01,  5.4420e-02,
          2.3952e-02, -6.6582e-04,  2.6876e-03,  1.6859e-02,  3.2376e-02,
         -2.1338e-02, -1.8487e-01,  6.3984e-01,  2.7649e-01,  1.1456e-01,
         -2.3091e-01,  5.2797e-02, -2.1962e-02,  1.1788e-01, -5.3674e-02,
          3.5841e-02,  3.3475e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
196000 特征值优化 tensor(0.7935, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.4404e-02, -8.0036e-01, -7.3989e-01, -7.3753e-01,  1.5469e+00,
          1.3409e+00,  1.2393e+00,  3.5523e+00, -1.5314e+00,  1.5710e+00,
          6.6818e+00,  8.8323e-01,  8.1929e-04,  7.1994e-02,  5.5009e-02,
          4.0272e-03,  1.2080e-01, -3.5501e-01,  3.3327e-01, -5.2868e-02,
          2.2629e-01, -1.3715e-01, -2.5286e-01,  1.5148e-01,  7.5868e-02,
          2.4789e-03,  5.1875e-04, -5.1253e-02,  2.4250e-03,  3.1164e-02,
         -2.1448e-02, -1.8636e-01,  6.4405e-01,  2.8258e-01,  9.1584e-02,
         -2.3726e-01,  5.3261e-02, -2.1252e-02,  1.2169e-01, -4.8635e-02,
          3.6900e-02,  2.8975e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
197000 特征值优化 tensor(0.7930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.5294e-02, -8.1874e-01, -7.3889e-01, -7.3758e-01,  1.5469e+00,
          1.3329e+00,  1.2449e+00,  3.5752e+00, -1.5541e+00,  1.5553e+00,
          6.7526e+00,  9.0359e-01, -2.1683e-03,  1.6006e-02, -4.4345e-03,
          1.5269e-03,  1.3071e-01, -3.7770e-01,  3.4400e-01, -4.2520e-02,
          2.2821e-01, -1.3768e-01, -1.5821e-01,  2.3579e-01, -1.1741e-02,
         -7.5463e-02, -6.1319e-02,  2.4927e-02,  4.3735e-02,  3.1139e-02,
         -2.1382e-02, -1.8723e-01,  6.4719e-01,  2.8033e-01,  1.4240e-01,
         -2.1566e-01,  6.2457e-02, -1.5052e-02,  1.0878e-01, -5.7156e-02,
          2.4384e-02,  4.1055e-02]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
198000 特征值优化 tensor(0.8402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.2428e-02, -8.0776e-01, -7.3844e-01, -7.3097e-01,  1.5458e+00,
          1.3256e+00,  1.2490e+00,  3.6028e+00, -1.5697e+00,  1.5415e+00,
          6.8129e+00,  9.1810e-01, -1.1813e-03,  1.6963e-02, -2.6761e-03,
          1.4357e-03,  1.3194e-01, -4.1661e-01,  3.4238e-01, -4.6168e-02,
          2.2708e-01, -1.3619e-01, -1.3921e-01,  2.5287e-01, -1.1454e-01,
          1.1207e-03,  1.9920e-02,  1.0415e-01, -1.1244e-03,  3.2500e-02,
         -2.1231e-02, -1.8569e-01,  6.5035e-01,  2.8080e-01,  1.3723e-01,
         -2.2834e-01,  6.5311e-02, -1.3098e-02,  1.1227e-01, -6.3413e-02,
          2.1347e-02,  4.3211e-02]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
199000 特征值优化 tensor(0.8332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.8482e-02, -8.0235e-01, -7.4372e-01, -7.2896e-01,  1.5438e+00,
          1.3379e+00,  1.2554e+00,  3.6215e+00, -1.5855e+00,  1.5364e+00,
          6.8921e+00,  9.2703e-01,  7.0008e-04,  6.0840e-02,  4.1741e-02,
         -4.5616e-03,  1.1797e-01, -3.6211e-01,  3.2459e-01, -4.9423e-02,
          2.2479e-01, -1.3747e-01, -1.3942e-01,  2.6002e-01,  2.1415e-02,
          7.8291e-02,  3.9491e-02,  3.3784e-03,  1.5337e-02,  3.1784e-02,
         -2.1510e-02, -1.8489e-01,  6.5270e-01,  2.8330e-01,  8.4858e-02,
         -2.4154e-01,  5.4374e-02, -1.9345e-02,  1.2691e-01, -5.1208e-02,
          3.6004e-02,  2.7655e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
200000 特征值优化 tensor(0.8058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.2453e-02, -8.0789e-01, -7.4302e-01, -7.3297e-01,  1.5454e+00,
          1.3462e+00,  1.2591e+00,  3.6428e+00, -1.5738e+00,  1.4972e+00,
          6.9574e+00,  9.7064e-01,  1.0034e-03,  4.1307e-02,  1.6488e-02,
          5.8411e-03,  1.1487e-01, -3.8639e-01,  3.3845e-01, -4.8343e-02,
          2.2614e-01, -1.3810e-01, -2.0130e-01,  2.0939e-01, -3.1744e-02,
          1.9725e-02,  1.0910e-02, -3.2918e-04, -1.6205e-03,  3.1386e-02,
         -2.1333e-02, -1.8649e-01,  6.5243e-01,  2.8143e-01,  1.0414e-01,
         -2.3384e-01,  5.7789e-02, -1.7732e-02,  1.2257e-01, -5.4127e-02,
          3.3551e-02,  3.1985e-02]], device='cuda:0') tensor(0.2098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
201000 特征值优化 tensor(0.7903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.8526e-02, -8.0413e-01, -7.4228e-01, -7.2954e-01,  1.5467e+00,
          1.3309e+00,  1.2631e+00,  3.6641e+00, -1.6238e+00,  1.5146e+00,
          7.0253e+00,  9.6480e-01,  6.1475e-04,  7.5636e-02,  6.0432e-02,
          9.3663e-03,  1.2114e-01, -3.7072e-01,  3.4188e-01, -5.2233e-02,
          2.2648e-01, -1.3759e-01, -1.9950e-01,  2.0711e-01,  1.0010e-01,
          8.2660e-04,  1.4118e-02, -5.0996e-02, -3.4731e-02,  3.1230e-02,
         -2.1427e-02, -1.8769e-01,  6.5588e-01,  2.7903e-01,  8.5867e-02,
         -2.4339e-01,  5.2853e-02, -2.1336e-02,  1.2886e-01, -4.1641e-02,
          4.2070e-02,  2.2052e-02]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
202000 特征值优化 tensor(12.3875, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8853, -0.2521,  2.4018,  0.0297,  1.0924,  0.4817,  0.0158, -1.2656,
         -0.6720,  1.7324, -0.3553, -0.0883,  0.3217, -0.8122,  0.6242, -0.5304,
         -0.1073,  0.2730, -0.9495,  0.0375, -0.7138,  0.1908, -0.3301,  0.1882,
          0.0031,  0.3103,  0.0500,  0.0697, -1.3371,  2.3835, -0.4595,  1.1040,
          0.2141,  0.0380, -0.7022, -0.6643, -1.0191,  0.0130, -0.3874, -1.3693,
          0.0160, -0.5266]], device='cuda:0') tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
203000 特征值优化 tensor(2.7613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0046e-01, -2.9529e-01,  3.3753e+00,  9.8973e-02,  1.3096e+00,
         -5.3798e-01,  3.5193e-01, -7.4722e-01,  6.0283e-02,  1.4284e+00,
         -3.5257e-01,  5.8800e-01, -3.2259e-02, -2.6423e-01, -2.5888e-02,
          4.6580e-02,  8.7975e-02,  8.5024e-02, -2.5461e-01, -4.8289e-02,
         -1.7449e-01,  1.0236e-01,  1.3598e-01, -9.2643e-02,  1.8409e-01,
          6.4598e-02,  2.4247e-01,  4.3830e-02, -6.4946e-01,  1.3723e+00,
          1.9940e-03,  3.4006e-01,  1.3524e-01,  6.3721e-02, -1.1894e-01,
         -8.6159e-02, -2.3560e-01, -4.3751e-02, -8.6091e-02, -3.7477e-01,
          1.5636e-01, -1.0959e-01]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
204000 特征值优化 tensor(1.1422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.1958e-02, -1.3536e-01,  3.7800e+00,  4.5793e-01,  1.5358e+00,
         -7.2631e-01,  4.6415e-01, -1.2942e+00, -7.1792e-01,  1.5274e+00,
         -4.6688e-01,  6.7649e-03,  2.5356e-03,  4.2574e-02,  4.9845e-02,
          1.4293e-01,  1.2986e-01,  1.2776e-02, -9.9748e-02, -2.6565e-02,
         -1.6927e-01,  8.9914e-02,  2.3047e-02, -1.3890e-01,  4.0829e-01,
         -1.5140e-02,  2.7011e-01,  1.5162e-01, -7.4709e-01,  8.6947e-01,
         -7.5420e-03,  1.9771e-01,  3.5185e-02,  6.7243e-02, -3.0283e-02,
         -2.6218e-02, -4.9589e-02, -3.7477e-03, -8.4140e-02, -1.2969e-01,
          5.0858e-03,  1.0436e-01]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
205000 特征值优化 tensor(1.0512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0162e-02, -1.4989e-01,  3.7674e+00,  4.5525e-01,  1.4392e+00,
         -6.7795e-01,  4.6365e-01, -1.2547e+00, -9.4339e-01,  1.6209e+00,
         -4.3538e-01, -2.1478e-01,  2.0436e-03, -1.0815e-01,  2.8349e-02,
          5.2622e-02,  2.0793e-01,  2.6313e-01, -6.8084e-03, -1.5365e-02,
         -1.6974e-01,  1.2394e-01,  1.7476e-01, -1.1601e-01,  3.2810e-01,
         -4.3964e-02,  2.4629e-02,  2.4620e-01, -7.4870e-01,  8.2852e-01,
          6.8573e-03,  2.1890e-01,  1.9650e-02,  6.7493e-02,  6.5806e-02,
          5.2862e-02, -8.8377e-03, -4.0916e-03,  2.8695e-02, -6.6322e-02,
         -8.0313e-03,  2.6107e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
206000 特征值优化 tensor(1.0111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2148e-02, -1.4015e-01,  3.6936e+00,  1.6100e-01,  1.4380e+00,
         -6.4090e-01,  4.7615e-01, -1.2579e+00, -1.0655e+00,  1.7489e+00,
         -3.9026e-01, -3.4256e-01,  1.0108e-03, -7.8262e-02,  8.9593e-02,
          1.1690e-01,  1.4301e-01,  1.5205e-01, -1.5390e-02, -1.4197e-02,
         -1.7201e-01,  4.0600e-02,  5.2815e-02, -5.0369e-02,  2.7861e-01,
         -1.1509e-01, -9.3144e-02,  3.1807e-01, -7.4467e-01,  7.7904e-01,
          7.0753e-03,  2.2987e-01,  1.7800e-02,  6.5017e-02, -2.8109e-02,
         -4.6982e-02, -5.5003e-03, -3.2890e-03,  1.0920e-01, -7.8659e-02,
         -8.1954e-03, -1.3865e-02]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
207000 特征值优化 tensor(1.0164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5818e-02, -1.5128e-01,  3.5084e+00, -2.4125e-01,  1.4747e+00,
         -6.7292e-01,  4.9463e-01, -1.2778e+00, -1.0254e+00,  1.7023e+00,
         -3.7651e-01, -2.9922e-01,  3.5071e-04, -8.5257e-02,  1.0779e-01,
          1.0561e-01,  1.3092e-01,  9.2591e-02, -7.0723e-02, -1.5770e-02,
         -1.7138e-01, -2.5141e-02,  3.8434e-02, -7.9587e-02,  2.5055e-01,
          2.6735e-03, -2.1478e-02,  3.5193e-01, -7.0846e-01,  7.5249e-01,
          2.5589e-03,  2.3825e-01,  3.3543e-02,  6.7514e-02,  2.0959e-02,
          3.3816e-03,  1.8802e-03,  9.8892e-04,  1.0322e-01, -7.4431e-02,
         -1.6638e-02, -1.9752e-02]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
208000 特征值优化 tensor(1.0419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7329e-02, -1.6059e-01,  3.3188e+00, -3.0385e-01,  1.5099e+00,
         -6.5633e-01,  5.2236e-01, -1.2845e+00, -1.0355e+00,  1.7292e+00,
         -3.7467e-01, -2.9655e-01,  2.5545e-04, -1.2321e-01,  1.1239e-01,
          1.6814e-01,  5.1323e-02,  1.0381e-01, -8.6654e-02, -1.6605e-02,
         -1.7188e-01, -2.9999e-02,  4.9602e-02, -7.0726e-02,  2.1310e-01,
          5.1427e-02, -8.9930e-04,  3.5829e-01, -6.7868e-01,  7.1946e-01,
          4.6443e-04,  2.3667e-01,  2.4622e-02,  6.2646e-02,  1.7917e-02,
          3.2840e-02,  2.1636e-03,  5.4249e-03,  1.0219e-01, -7.5247e-02,
         -1.9306e-02, -2.3000e-02]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
209000 特征值优化 tensor(1.0074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9625e-02, -1.5198e-01,  3.0784e+00, -4.0991e-01,  1.5340e+00,
         -6.6804e-01,  5.2880e-01, -1.3070e+00, -1.0299e+00,  1.7195e+00,
         -3.6308e-01, -2.7442e-01,  1.8123e-03, -1.5512e-01,  1.5107e-01,
          1.5877e-01,  6.7636e-02,  7.3076e-02, -4.2427e-02, -1.2820e-02,
         -1.7234e-01, -4.4251e-02,  1.0767e-01,  5.2227e-03,  2.6598e-01,
         -1.0377e-02, -5.9189e-02,  2.7882e-01, -6.3548e-01,  6.8746e-01,
         -7.7672e-04,  2.4781e-01,  4.4262e-02,  6.7431e-02, -3.9685e-02,
         -2.3404e-02, -1.2125e-02, -4.0626e-04,  1.1128e-01, -7.6253e-02,
         -8.9136e-03, -3.1244e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
210000 特征值优化 tensor(1.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9650e-02, -1.4425e-01,  2.9822e+00, -3.3056e-01,  1.5284e+00,
         -6.5141e-01,  4.9617e-01, -1.2882e+00, -1.0521e+00,  1.7355e+00,
         -3.6324e-01, -2.8944e-01,  4.7478e-04, -1.4239e-01,  1.0509e-01,
          9.0601e-02,  1.1229e-01,  5.0509e-02, -1.1850e-01, -1.2854e-02,
         -1.7205e-01, -3.3930e-02,  1.4257e-01,  5.1749e-02,  2.0894e-01,
          3.0394e-02, -1.9073e-02,  3.2835e-01, -6.1654e-01,  6.7492e-01,
          4.4117e-03,  2.3863e-01,  3.2500e-02,  6.6383e-02,  2.7064e-02,
          3.1230e-02,  5.6226e-04,  2.6847e-03,  1.0522e-01, -7.7298e-02,
         -1.7453e-02, -1.8848e-02]], device='cuda:0') tensor(0.2219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
211000 特征值优化 tensor(1.0017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5632e-02, -1.5096e-01,  2.8940e+00, -2.1074e-01,  1.5012e+00,
         -6.5600e-01,  5.0407e-01, -1.3002e+00, -1.0557e+00,  1.7309e+00,
         -3.4465e-01, -2.7556e-01,  2.0367e-04, -2.1376e-01,  7.3990e-02,
          7.3670e-02,  5.5464e-02,  1.1220e-01, -1.1048e-02, -1.0392e-02,
         -1.7092e-01, -1.8777e-02,  1.6578e-01,  6.5903e-02,  2.3915e-01,
         -2.8662e-02, -6.6220e-02,  2.8089e-01, -6.0586e-01,  6.6402e-01,
          2.8060e-04,  2.4000e-01,  3.2863e-02,  6.7212e-02, -4.0653e-02,
         -3.2787e-02, -8.8606e-03, -2.5350e-04,  1.1302e-01, -7.7178e-02,
         -1.1262e-02, -2.7825e-02]], device='cuda:0') tensor(0.2229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
212000 特征值优化 tensor(1.0084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3968e-02, -1.4705e-01,  2.7798e+00, -1.2873e-01,  1.4974e+00,
         -6.6816e-01,  4.8751e-01, -1.2878e+00, -1.0448e+00,  1.7179e+00,
         -3.4117e-01, -2.6192e-01,  4.8763e-04, -1.1608e-01,  8.0343e-02,
          1.2022e-01,  9.5539e-02,  6.6380e-02, -1.2324e-01, -1.4776e-02,
         -1.7232e-01, -6.2481e-03,  1.6963e-01,  1.5464e-02,  2.0322e-01,
          2.0984e-02, -1.7998e-02,  3.2032e-01, -5.8954e-01,  6.4720e-01,
          1.0942e-03,  2.3535e-01,  2.8433e-02,  6.7412e-02,  3.3189e-02,
          1.8149e-02, -9.2924e-04,  2.6069e-03,  9.9554e-02, -7.5206e-02,
         -1.4763e-02, -1.8334e-02]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
213000 特征值优化 tensor(1.0040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7141e-02, -1.4905e-01,  2.7559e+00, -1.0798e-01,  1.5116e+00,
         -6.5974e-01,  4.8782e-01, -1.3046e+00, -1.0516e+00,  1.7103e+00,
         -3.5168e-01, -2.6059e-01,  6.5527e-04, -7.1712e-02,  1.1071e-01,
          1.6518e-01,  7.0787e-02,  9.6593e-02, -6.9032e-02, -1.1643e-02,
         -1.7187e-01, -3.9584e-03,  1.5953e-01, -3.9477e-02,  2.0695e-01,
          1.8149e-03, -5.5405e-02,  2.8168e-01, -5.8694e-01,  6.4443e-01,
         -8.6536e-04,  2.3321e-01,  3.1449e-02,  6.7389e-02, -2.3908e-02,
         -2.1958e-02, -3.9128e-03,  2.2667e-03,  1.1567e-01, -7.5564e-02,
         -1.7813e-02, -3.2640e-02]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
214000 特征值优化 tensor(1.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3905e-02, -1.4813e-01,  2.7371e+00, -8.4382e-02,  1.5020e+00,
         -6.6788e-01,  4.8351e-01, -1.2999e+00, -1.0594e+00,  1.7201e+00,
         -3.3477e-01, -2.6074e-01,  2.8103e-04, -1.3122e-01,  5.2429e-02,
          1.2530e-01,  1.4914e-01,  4.4555e-02, -7.2836e-02, -1.5159e-02,
         -1.7121e-01,  1.1400e-03,  1.7759e-01,  4.4557e-02,  1.7500e-01,
          3.7919e-02,  2.7955e-03,  3.3683e-01, -5.8322e-01,  6.4113e-01,
          1.5320e-03,  2.4193e-01,  3.3582e-02,  6.7588e-02,  4.1250e-02,
          3.6426e-02,  8.7165e-03,  6.6627e-03,  1.0301e-01, -7.5002e-02,
         -2.5462e-02, -2.1093e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
215000 特征值优化 tensor(1.0012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9314e-02, -1.5126e-01,  2.7700e+00, -1.1654e-01,  1.5123e+00,
         -6.6935e-01,  4.7277e-01, -1.3058e+00, -1.0564e+00,  1.7092e+00,
         -3.3208e-01, -2.3695e-01,  3.7481e-04, -1.2813e-01,  6.4471e-02,
          1.2549e-01,  1.0344e-01,  1.3812e-01, -3.7699e-02, -1.6396e-02,
         -1.7121e-01, -3.9187e-03,  1.7917e-01,  5.0585e-02,  2.0581e-01,
          1.4223e-02, -8.4059e-03,  3.2105e-01, -5.8804e-01,  6.4596e-01,
         -2.1168e-03,  2.3880e-01,  3.2229e-02,  6.7311e-02,  2.5613e-02,
          2.2846e-02, -1.9259e-03,  3.0327e-03,  1.0649e-01, -7.4225e-02,
         -1.8033e-02, -2.7437e-02]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
216000 特征值优化 tensor(1.0378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0706e-02, -1.6080e-01,  2.7428e+00, -9.6736e-02,  1.5325e+00,
         -6.6511e-01,  4.6280e-01, -1.2958e+00, -1.0656e+00,  1.6991e+00,
         -3.2876e-01, -2.2385e-01,  2.0387e-05, -1.5411e-01,  1.1950e-01,
          9.0924e-02,  6.5048e-02,  9.8856e-02, -1.5505e-01, -1.9037e-02,
         -1.7214e-01, -2.2410e-03,  1.4797e-01, -1.9736e-02,  2.5755e-01,
         -3.5886e-02, -7.1703e-02,  2.6514e-01, -5.8530e-01,  6.4249e-01,
         -1.0885e-03,  2.3301e-01,  3.4981e-02,  6.3373e-02, -2.6486e-02,
         -3.1485e-02, -1.9053e-02, -3.5378e-04,  1.0451e-01, -7.2438e-02,
         -1.0716e-03, -2.8145e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
217000 特征值优化 tensor(1.0014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.1622e-02, -1.4956e-01,  2.7677e+00, -1.1781e-01,  1.5262e+00,
         -6.6146e-01,  4.5148e-01, -1.2941e+00, -1.0783e+00,  1.7040e+00,
         -3.2652e-01, -2.2712e-01,  7.9121e-04, -1.1133e-01,  8.2410e-02,
          9.1871e-02,  8.6688e-02,  1.0598e-01, -1.2744e-01, -1.2230e-02,
         -1.7120e-01, -4.7040e-03,  1.7111e-01,  4.9608e-02,  2.1141e-01,
         -6.4340e-03, -3.8537e-02,  2.9902e-01, -5.8770e-01,  6.4556e-01,
         -1.6951e-03,  2.3825e-01,  3.0291e-02,  6.7524e-02, -2.3824e-02,
         -1.2422e-02, -6.8338e-03,  5.5528e-03,  1.1624e-01, -7.3401e-02,
         -1.7887e-02, -3.5344e-02]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
218000 特征值优化 tensor(1.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3397e-02, -1.4972e-01,  2.7654e+00, -1.1533e-01,  1.5233e+00,
         -6.6747e-01,  4.7703e-01, -1.3282e+00, -1.0768e+00,  1.7060e+00,
         -3.0342e-01, -2.1715e-01,  4.0483e-04, -1.0165e-02,  1.1139e-01,
          1.1896e-01,  1.5104e-01,  2.5528e-02, -1.3399e-01, -1.4948e-02,
         -1.7152e-01, -3.6642e-03,  1.8019e-01,  4.9390e-03,  1.5817e-01,
          5.1104e-02,  1.7191e-02,  3.4882e-01, -5.8780e-01,  6.4540e-01,
         -3.7974e-03,  2.4733e-01,  4.2591e-02,  6.7372e-02,  4.4474e-02,
          4.4667e-02,  1.2325e-02,  7.9941e-03,  1.1382e-01, -7.4297e-02,
         -3.3373e-02, -3.5335e-02]], device='cuda:0') tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
219000 特征值优化 tensor(1.0086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8422e-02, -1.4289e-01,  2.7606e+00, -1.0442e-01,  1.4881e+00,
         -6.6592e-01,  4.4648e-01, -1.3023e+00, -1.0909e+00,  1.6959e+00,
         -3.0990e-01, -2.0944e-01,  3.3961e-04, -6.7300e-02,  1.5002e-01,
          1.0959e-01,  1.1325e-01,  1.1224e-01, -5.1860e-02, -1.4190e-02,
         -1.7159e-01, -2.6321e-03,  1.7413e-01,  1.6551e-02,  2.1212e-01,
          5.0943e-03, -2.7774e-02,  3.0537e-01, -5.8602e-01,  6.4426e-01,
          6.2798e-04,  2.3408e-01,  3.1303e-02,  6.7516e-02,  2.3676e-02,
          9.6897e-03, -8.1433e-03, -1.5529e-03,  1.0741e-01, -7.2556e-02,
         -6.5820e-03, -2.4696e-02]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
220000 特征值优化 tensor(1.0009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7611e-02, -1.4444e-01,  2.7731e+00, -1.2189e-01,  1.5175e+00,
         -6.5769e-01,  4.3658e-01, -1.3012e+00, -1.1104e+00,  1.7085e+00,
         -3.0589e-01, -2.1325e-01,  3.0916e-04, -9.2754e-02,  8.2802e-02,
          8.6857e-02,  8.1629e-02,  6.1734e-02, -1.3657e-01, -1.2685e-02,
         -1.7199e-01, -5.8193e-03,  1.7047e-01,  5.0113e-02,  2.0434e-01,
         -8.8177e-03, -4.8165e-02,  2.9860e-01, -5.8884e-01,  6.4666e-01,
          9.3319e-04,  2.3897e-01,  3.1628e-02,  6.7270e-02, -2.7477e-02,
         -2.1770e-02, -9.7184e-03,  4.0318e-03,  1.1705e-01, -7.3939e-02,
         -1.3207e-02, -3.2746e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
221000 特征值优化 tensor(1.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3899e-02, -1.4869e-01,  2.7761e+00, -1.2079e-01,  1.5110e+00,
         -6.6364e-01,  4.4981e-01, -1.3278e+00, -1.1084e+00,  1.7107e+00,
         -2.9068e-01, -2.0310e-01,  1.7407e-03, -1.4364e-01,  5.8812e-02,
          1.5371e-01,  1.0358e-01,  1.6956e-01,  1.8458e-02, -1.2655e-02,
         -1.7079e-01, -6.9860e-03,  1.6863e-01,  5.5743e-02,  1.4470e-01,
          5.7196e-02,  1.7885e-02,  3.5998e-01, -5.8910e-01,  6.4922e-01,
         -1.7380e-03,  2.3606e-01,  4.1976e-02,  6.6603e-02,  4.5124e-02,
          5.3819e-02,  1.6402e-02,  8.3018e-03,  1.1122e-01, -7.1673e-02,
         -3.8304e-02, -3.2508e-02]], device='cuda:0') tensor(0.2166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
222000 特征值优化 tensor(1.0040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0729e-02, -1.4225e-01,  2.7718e+00, -1.1934e-01,  1.5117e+00,
         -6.6411e-01,  4.4955e-01, -1.3282e+00, -1.1117e+00,  1.6955e+00,
         -2.7198e-01, -1.8394e-01,  7.4690e-04, -4.9702e-02,  1.5887e-01,
          1.2142e-01,  1.1474e-01,  5.7398e-02, -1.2641e-01, -1.4525e-02,
         -1.7176e-01, -4.8428e-03,  1.7887e-01,  3.4839e-02,  1.8738e-01,
          2.2008e-02, -3.5308e-03,  3.2779e-01, -5.8867e-01,  6.4628e-01,
         -2.1937e-03,  2.4691e-01,  4.7304e-02,  6.7171e-02,  3.0084e-02,
          2.7687e-02,  4.2704e-03,  4.4702e-03,  1.1216e-01, -7.2101e-02,
         -2.2599e-02, -3.2056e-02]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
223000 特征值优化 tensor(0.9944, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5182e-02, -1.5066e-01,  2.7451e+00, -9.6523e-02,  1.5417e+00,
         -6.3900e-01,  4.3992e-01, -1.3160e+00, -1.1493e+00,  1.7132e+00,
         -2.9033e-01, -2.0081e-01,  1.4877e-04, -1.1426e-01,  1.5473e-01,
          5.0668e-02,  8.9622e-02,  1.5403e-01, -1.2449e-01, -9.9301e-03,
         -1.7115e-01, -2.4594e-03,  1.4988e-01, -2.7856e-02,  2.3453e-01,
         -3.6106e-02, -7.9020e-02,  2.5827e-01, -5.8469e-01,  6.4307e-01,
          1.1126e-03,  2.4010e-01,  3.4739e-02,  6.5180e-02, -2.9422e-02,
         -3.9042e-02, -1.8783e-02, -1.0396e-03,  1.2150e-01, -7.4217e-02,
          1.7752e-03, -3.4848e-02]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
224000 特征值优化 tensor(1.0044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3937e-02, -1.5288e-01,  2.1093e+00,  2.5356e-01,  1.7395e+00,
         -6.5644e-01,  5.0479e-01, -1.3568e+00, -1.1063e+00,  1.6552e+00,
         -2.3578e-01, -1.6824e-01,  1.5911e-03, -3.7783e-02,  2.0780e-01,
          9.2616e-02,  1.6601e-01,  1.8344e-01,  6.2160e-03,  2.2671e-02,
         -1.7274e-01,  4.0374e-02,  1.5008e-01, -3.1948e-02,  8.0684e-02,
          4.2071e-02, -5.0463e-02,  2.2473e-01, -4.9598e-01,  5.6609e-01,
         -1.4334e-02,  2.9749e-01,  6.5912e-02,  6.7161e-02,  1.0843e-03,
          1.2940e-02, -8.9792e-03,  8.6796e-03,  1.2329e-01, -6.9775e-02,
         -2.0674e-02, -4.1524e-02]], device='cuda:0') tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
225000 特征值优化 tensor(0.9655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2458e-02, -1.5641e-01,  1.6047e+00,  1.1610e-01,  2.3015e+00,
         -6.1385e-01,  5.1683e-01, -1.3747e+00, -1.1319e+00,  1.7004e+00,
         -2.5240e-01, -1.5368e-01,  2.9846e-03, -7.8441e-02,  3.3795e-01,
          2.6740e-04,  1.4677e-01,  1.6152e-01, -2.3853e-02, -5.0570e-03,
         -1.7092e-01,  2.3264e-02,  1.3572e-01,  1.0328e-01, -4.3314e-02,
          6.9987e-02, -5.9274e-02,  8.1817e-02, -4.3002e-01,  4.9966e-01,
         -1.5757e-02,  3.4036e-01,  1.1384e-01,  6.3399e-02,  3.6025e-02,
          4.5324e-02, -5.8168e-03,  8.1010e-03,  1.2665e-01, -7.3835e-02,
         -2.6994e-02, -4.5906e-02]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
226000 特征值优化 tensor(0.9591, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8142e-02, -1.4928e-01,  1.6011e+00,  1.1595e-01,  2.7651e+00,
         -6.2095e-01,  5.2165e-01, -1.3913e+00, -1.1428e+00,  1.7058e+00,
         -2.4692e-01, -1.5704e-01,  2.3391e-03, -1.1852e-01,  3.3185e-01,
          5.4325e-02,  1.7695e-01,  9.3772e-02,  3.2285e-02,  1.3376e-02,
         -1.7234e-01,  2.3048e-02,  1.3841e-01,  9.3050e-02,  3.7669e-02,
         -2.4723e-02, -1.3433e-01,  1.2777e-02, -4.2943e-01,  4.9950e-01,
         -1.2649e-02,  3.6886e-01,  1.2803e-01,  6.4408e-02, -2.8280e-02,
         -3.7110e-02, -3.1802e-02,  1.1263e-03,  1.3194e-01, -7.4951e-02,
          3.9111e-05, -4.8599e-02]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
227000 特征值优化 tensor(1.0137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4909e-02, -1.5024e-01,  1.6046e+00,  1.1460e-01,  3.1121e+00,
         -6.3834e-01,  5.1848e-01, -1.3773e+00, -1.1333e+00,  1.6832e+00,
         -2.5398e-01, -1.2898e-01,  1.5970e-03, -1.0956e-01,  4.2580e-01,
         -2.5570e-02,  1.1819e-01,  1.2794e-01, -5.5330e-02,  3.9265e-03,
         -1.7224e-01,  2.0160e-02,  1.4097e-01,  9.1996e-02, -6.1887e-02,
          6.8744e-02, -6.8447e-02,  8.5861e-02, -4.2990e-01,  4.9676e-01,
         -1.6201e-02,  3.8536e-01,  1.3649e-01,  6.4941e-02,  3.7201e-02,
          4.4399e-02,  3.2427e-04,  9.9134e-03,  1.2142e-01, -7.2233e-02,
         -3.1333e-02, -4.9085e-02]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
228000 特征值优化 tensor(0.9800, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6386e-02, -1.5607e-01,  1.5972e+00,  1.3011e-01,  3.4261e+00,
         -6.6205e-01,  5.1103e-01, -1.3619e+00, -1.1319e+00,  1.6664e+00,
         -2.6083e-01, -1.1572e-01,  2.0286e-03, -9.6307e-02,  4.1119e-01,
          1.5486e-02,  1.4383e-01,  1.2645e-01, -1.9924e-02,  5.3793e-03,
         -1.7122e-01,  2.4488e-02,  1.6251e-01,  1.0234e-01,  2.1059e-02,
          2.5552e-02, -8.8252e-02,  4.1071e-02, -4.2903e-01,  4.9802e-01,
         -5.6378e-02,  3.9851e-01,  1.3866e-01,  6.6715e-02,  1.4103e-02,
         -4.3742e-03, -2.2573e-02,  4.2993e-03,  1.2096e-01, -6.9743e-02,
         -1.0378e-02, -4.4108e-02]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
229000 特征值优化 tensor(0.9565, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0784e-02, -8.7445e-02,  1.6097e+00,  1.0267e-01,  4.0056e+00,
         -6.3504e-01,  6.6196e-01, -1.4552e+00, -1.1355e+00,  1.7050e+00,
         -2.5143e-01, -7.7096e-02, -7.4500e-03, -2.6612e-02,  3.8197e-01,
          4.8562e-02,  1.9258e-01,  9.4597e-02,  3.4562e-03,  6.1705e-03,
         -1.6347e-01,  2.0192e-02,  1.5232e-01,  5.4497e-02,  4.8059e-02,
         -9.5682e-03, -1.3255e-01, -8.4170e-03, -4.2959e-01,  4.9973e-01,
         -1.2638e-01,  4.7428e-01,  2.4019e-01,  6.7686e-02,  3.5089e-02,
         -8.9506e-03, -1.3511e-03,  3.8008e-04,  1.2331e-01, -7.4673e-02,
         -1.1787e-02, -4.2939e-02]], device='cuda:0') tensor(0.2107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
230000 特征值优化 tensor(0.9725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.0734e-02, -4.7999e-02,  1.6058e+00,  1.0518e-01,  4.5145e+00,
         -6.1588e-01,  6.9721e-01, -1.4556e+00, -1.1378e+00,  1.6630e+00,
         -2.3059e-01, -1.0663e-01, -1.1374e-02,  4.9935e-02,  3.9476e-01,
          4.3858e-02,  1.3082e-01,  9.5025e-02, -5.0178e-02,  1.9830e-02,
         -1.5816e-01,  2.1512e-02,  1.7615e-01,  8.9921e-02, -2.2969e-02,
          6.6867e-02, -5.6111e-02,  4.7674e-02, -4.3059e-01,  4.9964e-01,
         -3.0264e-01,  4.8622e-01,  2.5475e-01,  6.6577e-02, -1.9191e-02,
         -4.3061e-03, -6.8823e-03, -1.1275e-02,  1.1196e-01, -6.9482e-02,
         -3.0645e-03, -2.5328e-02]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
231000 特征值优化 tensor(1.0073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0147e-02, -6.1134e-02,  1.6147e+00,  9.5992e-02,  4.9591e+00,
         -6.1948e-01,  6.9772e-01, -1.4641e+00, -1.1589e+00,  1.6932e+00,
         -2.3964e-01, -8.6615e-02, -1.1856e-02,  9.3917e-02,  3.9138e-01,
          3.1027e-02,  1.0478e-01,  1.3886e-01, -8.1485e-02,  1.7167e-02,
         -1.6117e-01,  1.9097e-02,  1.7342e-01,  9.5113e-02, -5.3002e-02,
          8.7389e-02, -2.4975e-02,  8.2223e-02, -4.3300e-01,  5.0171e-01,
         -2.8051e-01,  5.0419e-01,  2.6267e-01,  6.6298e-02, -4.7728e-02,
          3.5152e-02, -3.1697e-03, -1.2258e-02,  1.0475e-01, -7.0661e-02,
         -7.2772e-04, -2.6205e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
232000 特征值优化 tensor(0.9548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2851e-02, -5.0417e-02,  1.6184e+00,  9.2978e-02,  5.3046e+00,
         -6.2186e-01,  7.0458e-01, -1.4597e+00, -1.1577e+00,  1.6955e+00,
         -2.4344e-01, -9.2327e-02, -1.1049e-02,  7.9138e-02,  4.0687e-01,
          2.4107e-02,  1.0157e-01,  1.2046e-01, -6.4506e-02,  1.6341e-02,
         -1.5831e-01,  1.8826e-02,  1.8176e-01,  9.7626e-02, -3.1591e-02,
          7.4177e-02, -3.9099e-02,  6.9110e-02, -4.3233e-01,  4.9962e-01,
         -3.4360e-01,  5.1900e-01,  2.7202e-01,  6.7490e-02, -3.4640e-02,
          3.9742e-02, -2.2555e-03, -9.0106e-03,  1.0322e-01, -7.4684e-02,
         -8.3414e-03, -1.2591e-02]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
233000 特征值优化 tensor(0.9530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5203e-02, -5.3396e-02,  1.6113e+00,  1.0079e-01,  5.6099e+00,
         -6.3782e-01,  7.0348e-01, -1.4545e+00, -1.1475e+00,  1.7178e+00,
         -2.3341e-01, -6.0024e-02, -1.0691e-02,  4.8865e-02,  4.1391e-01,
          5.3252e-02,  1.7076e-01,  3.5576e-02, -9.9803e-03,  1.8048e-02,
         -1.5934e-01,  2.0458e-02,  1.6900e-01,  8.7767e-02,  5.9110e-02,
         -1.4048e-02, -1.2428e-01, -1.5974e-02, -4.3107e-01,  4.9949e-01,
         -3.8747e-01,  5.3360e-01,  2.7576e-01,  6.7361e-02,  4.1701e-02,
         -2.9331e-02,  2.4065e-02, -6.2736e-04,  1.0911e-01, -7.5775e-02,
         -3.2017e-02, -2.6153e-02]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
234000 特征值优化 tensor(0.9654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4890e-02, -4.3458e-02,  1.6079e+00,  1.0275e-01,  5.9110e+00,
         -6.2422e-01,  7.0738e-01, -1.4487e+00, -1.1165e+00,  1.6792e+00,
         -2.3853e-01, -1.0102e-01, -1.1929e-02,  7.9152e-02,  4.4561e-01,
          4.2815e-02,  1.3224e-01,  8.4906e-02, -4.8666e-02,  1.9168e-02,
         -1.5829e-01,  2.0794e-02,  1.7137e-01,  8.8586e-02,  3.5856e-03,
          4.8672e-02, -7.3521e-02,  2.4372e-02, -4.3173e-01,  4.9874e-01,
         -4.0909e-01,  5.4097e-01,  2.8524e-01,  6.7730e-02, -5.0704e-03,
         -2.7702e-02, -2.6159e-03, -1.0383e-02,  9.9275e-02, -7.2363e-02,
         -5.3215e-03, -1.4127e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
235000 特征值优化 tensor(0.9537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6253e-02, -5.0522e-02,  1.6141e+00,  9.8978e-02,  6.1567e+00,
         -6.3622e-01,  7.1479e-01, -1.4545e+00, -1.1291e+00,  1.7031e+00,
         -2.4406e-01, -9.7599e-02, -1.1485e-02,  8.9728e-02,  4.5808e-01,
          1.1830e-02,  9.6815e-02,  9.2005e-02, -7.0590e-02,  1.8060e-02,
         -1.5922e-01,  1.9756e-02,  1.7550e-01,  1.0474e-01, -1.2624e-02,
          6.6095e-02, -5.3073e-02,  5.8298e-02, -4.3025e-01,  4.9993e-01,
         -4.2002e-01,  5.6140e-01,  2.8681e-01,  6.7326e-02, -1.1114e-02,
          2.0728e-02,  1.2760e-03, -7.2085e-03,  1.0704e-01, -7.4658e-02,
         -9.1875e-03, -2.2453e-02]], device='cuda:0') tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
236000 特征值优化 tensor(0.9630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.1470e-02, -4.5659e-02,  1.6111e+00,  1.0182e-01,  6.3597e+00,
         -6.2087e-01,  7.0638e-01, -1.4509e+00, -1.1181e+00,  1.6877e+00,
         -2.3902e-01, -1.2449e-01, -1.1218e-02,  6.4435e-02,  4.5242e-01,
          4.3575e-02,  1.2563e-01,  7.9980e-02, -3.7775e-02,  1.8586e-02,
         -1.5773e-01,  2.0849e-02,  1.6704e-01,  8.3353e-02,  5.0116e-03,
          4.5306e-02, -7.9880e-02,  2.1384e-02, -4.2966e-01,  4.9955e-01,
         -4.5038e-01,  5.6768e-01,  2.9246e-01,  6.6973e-02,  4.4313e-03,
         -2.9377e-02, -4.7435e-04, -9.2097e-03,  1.0367e-01, -7.3902e-02,
         -8.8613e-03, -1.4712e-02]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
237000 特征值优化 tensor(0.9598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9460e-02, -4.9327e-02,  1.6081e+00,  1.0072e-01,  6.5374e+00,
         -6.3482e-01,  7.0288e-01, -1.4535e+00, -1.1156e+00,  1.7021e+00,
         -2.4708e-01, -9.3763e-02, -1.0586e-02,  8.5505e-02,  4.6775e-01,
          1.6979e-02,  1.0322e-01,  1.0259e-01, -6.0570e-02,  1.8635e-02,
         -1.5909e-01,  2.0087e-02,  1.7593e-01,  9.9180e-02, -1.6801e-02,
          6.8922e-02, -5.3965e-02,  5.4010e-02, -4.2914e-01,  4.9871e-01,
         -4.4012e-01,  5.7367e-01,  2.9495e-01,  6.7025e-02, -1.9734e-02,
          2.9245e-02,  1.2349e-03, -8.2974e-03,  9.9985e-02, -7.5296e-02,
         -1.1264e-02, -1.5486e-02]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
238000 特征值优化 tensor(0.9546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0345, -0.0515,  1.6181,  0.0936,  6.7068, -0.6184,  0.6928, -1.4614,
         -1.1252,  1.7042, -0.2389, -0.1263, -0.0107,  0.0798,  0.4458,  0.0425,
          0.1380,  0.0603, -0.0253,  0.0171, -0.1582,  0.0190,  0.1677,  0.0901,
          0.0205,  0.0280, -0.0936,  0.0182, -0.4312,  0.4999, -0.4669,  0.5781,
          0.3024,  0.0678,  0.0171, -0.0392,  0.0069, -0.0068,  0.1060, -0.0755,
         -0.0184, -0.0141]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
239000 特征值优化 tensor(0.9549, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5628e-02, -5.2413e-02,  1.6097e+00,  1.0232e-01,  6.8502e+00,
         -6.3241e-01,  7.0577e-01, -1.4539e+00, -1.1093e+00,  1.7086e+00,
         -2.3931e-01, -1.1070e-01, -1.0526e-02,  6.7960e-02,  4.7452e-01,
          1.3263e-02,  9.1776e-02,  1.0411e-01, -6.5957e-02,  1.7813e-02,
         -1.5963e-01,  2.0759e-02,  1.7526e-01,  9.6266e-02, -2.7919e-02,
          7.8563e-02, -4.3791e-02,  6.4385e-02, -4.2965e-01,  4.9911e-01,
         -4.6434e-01,  5.8504e-01,  3.0334e-01,  6.7334e-02, -2.6130e-02,
          2.5379e-02, -2.9815e-03, -8.6743e-03,  1.0080e-01, -7.4792e-02,
         -5.6111e-03, -1.8166e-02]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
240000 特征值优化 tensor(0.9472, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8535e-02, -5.1996e-02,  1.6204e+00,  8.9299e-02,  6.9959e+00,
         -6.1989e-01,  6.8779e-01, -1.4674e+00, -1.1253e+00,  1.7266e+00,
         -2.3204e-01, -1.2137e-01, -1.0245e-02,  7.6646e-02,  4.5720e-01,
          4.7338e-02,  1.4452e-01,  4.6885e-02, -2.2588e-02,  1.5967e-02,
         -1.5952e-01,  1.8579e-02,  1.6949e-01,  9.4824e-02,  3.0343e-02,
          1.5109e-02, -1.0463e-01,  1.3431e-02, -4.3133e-01,  5.0004e-01,
         -4.7234e-01,  5.8736e-01,  3.1060e-01,  6.7508e-02,  3.6544e-02,
         -4.0552e-02,  1.5090e-02, -4.0109e-03,  1.0421e-01, -7.8028e-02,
         -2.5898e-02, -1.4014e-02]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
241000 特征值优化 tensor(0.9601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8655e-02, -5.1797e-02,  1.6088e+00,  1.0355e-01,  7.1259e+00,
         -6.3548e-01,  6.9186e-01, -1.4472e+00, -1.0936e+00,  1.7105e+00,
         -2.3563e-01, -1.1968e-01, -1.1020e-02,  1.0154e-01,  4.7250e-01,
          2.4449e-02,  1.0490e-01,  1.0656e-01, -6.2441e-02,  1.8867e-02,
         -1.5927e-01,  2.1039e-02,  1.7582e-01,  1.0031e-01, -1.7559e-02,
          7.0835e-02, -5.1070e-02,  5.4371e-02, -4.2932e-01,  4.9937e-01,
         -4.5393e-01,  5.9361e-01,  3.0932e-01,  6.7574e-02, -1.8959e-02,
          3.5261e-02,  8.4283e-04, -7.3932e-03,  9.9306e-02, -7.5738e-02,
         -1.0246e-02, -1.6135e-02]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
242000 特征值优化 tensor(0.9506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.6831e-02, -2.6662e-02,  1.6202e+00,  9.1471e-02,  7.2870e+00,
         -6.2105e-01,  6.9169e-01, -1.4650e+00, -1.1006e+00,  1.7308e+00,
         -2.2888e-01, -1.2728e-01, -1.3687e-02,  1.0821e-01,  4.7332e-01,
          5.1975e-02,  1.3601e-01,  3.5007e-02, -1.9709e-02,  1.8881e-02,
         -1.5659e-01,  1.8458e-02,  1.6837e-01,  8.4642e-02,  3.8204e-02,
          8.5531e-03, -1.0556e-01, -3.7931e-03, -4.3130e-01,  4.9990e-01,
         -5.0859e-01,  5.9759e-01,  3.1518e-01,  6.7598e-02,  3.2455e-02,
         -4.0130e-02,  1.6875e-02, -3.5055e-03,  1.0636e-01, -7.6343e-02,
         -2.6633e-02, -1.2308e-02]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
243000 特征值优化 tensor(0.9869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.4033e-02, -1.5798e-02,  1.6091e+00,  9.9673e-02,  7.4784e+00,
         -6.2653e-01,  6.9724e-01, -1.4571e+00, -1.0800e+00,  1.7191e+00,
         -2.4115e-01, -1.4514e-01, -1.5683e-02,  1.5138e-01,  4.7746e-01,
          5.7682e-02,  7.9770e-02,  9.6481e-02, -7.3665e-02,  2.6706e-02,
         -1.5870e-01,  1.8180e-02,  1.6964e-01,  9.9336e-02, -3.9463e-02,
          7.8289e-02, -3.6454e-02,  6.5956e-02, -4.3169e-01,  4.9915e-01,
         -4.8920e-01,  5.9690e-01,  3.1094e-01,  6.3621e-02, -3.4726e-02,
         -2.5289e-03, -3.3534e-03, -1.3008e-02,  9.0533e-02, -7.5774e-02,
         -5.2838e-05, -9.9858e-03]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
244000 特征值优化 tensor(0.9632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.1588e-02, -2.9377e-02,  1.6034e+00,  1.0392e-01,  7.6373e+00,
         -6.4322e-01,  6.9692e-01, -1.4458e+00, -1.0503e+00,  1.7090e+00,
         -2.4382e-01, -1.4609e-01, -1.4168e-02,  1.2233e-01,  4.9638e-01,
          3.1973e-02,  9.4336e-02,  7.5425e-02, -6.4714e-02,  2.3940e-02,
         -1.5705e-01,  2.1170e-02,  1.7239e-01,  9.9176e-02, -1.1553e-03,
          4.8165e-02, -6.4560e-02,  3.7556e-02, -4.2951e-01,  4.9920e-01,
         -5.2613e-01,  6.0946e-01,  3.1325e-01,  6.7124e-02, -3.1168e-03,
          3.5096e-02,  9.5147e-03, -4.8701e-03,  9.1550e-02, -7.1829e-02,
         -1.8837e-02, -2.3394e-03]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
245000 特征值优化 tensor(0.9550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.1209e-02, -2.8493e-02,  1.6169e+00,  9.5747e-02,  7.8045e+00,
         -6.2772e-01,  7.0197e-01, -1.4562e+00, -1.0539e+00,  1.7240e+00,
         -2.4424e-01, -1.6205e-01, -1.3738e-02,  1.0655e-01,  4.8038e-01,
          5.8844e-02,  1.0958e-01,  4.1941e-02, -2.3782e-02,  2.0284e-02,
         -1.5687e-01,  1.8859e-02,  1.6882e-01,  8.5716e-02,  3.0292e-02,
          2.2211e-02, -9.4298e-02,  2.0664e-04, -4.3202e-01,  5.0015e-01,
         -5.5366e-01,  6.0288e-01,  3.2275e-01,  6.7743e-02,  1.7816e-02,
         -3.8536e-02,  8.5222e-03, -6.2975e-03,  9.1992e-02, -7.6521e-02,
         -1.8259e-02,  9.1854e-04]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
246000 特征值优化 tensor(0.9495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.8613e-02, -2.2762e-02,  1.6101e+00,  1.0099e-01,  7.9648e+00,
         -6.2840e-01,  7.1458e-01, -1.4538e+00, -1.0484e+00,  1.7397e+00,
         -2.6127e-01, -1.6163e-01, -1.4584e-02,  1.2672e-01,  4.7142e-01,
          2.4753e-02,  5.6603e-02,  9.2949e-02, -7.9990e-02,  2.0144e-02,
         -1.5724e-01,  2.0441e-02,  1.7878e-01,  9.8956e-02, -3.9411e-02,
          8.3130e-02, -3.1923e-02,  6.8987e-02, -4.3051e-01,  4.9923e-01,
         -5.4227e-01,  6.2220e-01,  3.2549e-01,  6.7534e-02, -3.6273e-02,
          1.9683e-02, -2.2389e-03, -9.0145e-03,  9.5366e-02, -7.4335e-02,
         -8.0111e-03,  1.1716e-03]], device='cuda:0') tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
247000 特征值优化 tensor(1.0003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.3978e-02, -2.6552e-02,  1.6119e+00,  9.6806e-02,  8.1148e+00,
         -6.1476e-01,  7.1281e-01, -1.4543e+00, -1.0409e+00,  1.7445e+00,
         -2.4777e-01, -1.7770e-01, -1.3253e-02,  1.6191e-01,  4.7947e-01,
          6.5800e-02,  1.3929e-01,  2.5425e-02, -3.5861e-02,  2.5228e-02,
         -1.6140e-01,  1.9094e-02,  1.6023e-01,  1.0573e-01,  3.4950e-02,
         -5.8408e-03, -1.1254e-01, -5.9137e-05, -4.3095e-01,  5.0177e-01,
         -5.4660e-01,  6.2542e-01,  3.2059e-01,  6.5308e-02,  4.6440e-02,
         -2.2168e-02,  3.1525e-02, -2.3513e-03,  9.3602e-02, -7.5726e-02,
         -3.3302e-02, -7.3981e-03]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
248000 特征值优化 tensor(0.9491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.7063e-02, -2.3420e-02,  1.6101e+00,  1.0030e-01,  8.2286e+00,
         -6.3741e-01,  7.2585e-01, -1.4613e+00, -1.0360e+00,  1.7542e+00,
         -2.6828e-01, -1.7814e-01, -1.4686e-02,  1.0618e-01,  5.0688e-01,
          4.6204e-03,  4.3836e-02,  1.1777e-01, -9.5167e-02,  2.0007e-02,
         -1.5699e-01,  1.9945e-02,  1.7589e-01,  1.0944e-01, -6.0974e-02,
          1.0545e-01, -1.1973e-02,  8.6984e-02, -4.2949e-01,  4.9922e-01,
         -6.0014e-01,  6.3327e-01,  3.2843e-01,  6.7107e-02, -4.3018e-02,
          1.5361e-02, -1.3100e-02, -1.2637e-02,  1.0358e-01, -7.5458e-02,
          3.4560e-03, -5.5622e-03]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
249000 特征值优化 tensor(0.9567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.3753e-02, -1.2589e-02,  1.6142e+00,  9.8968e-02,  8.3647e+00,
         -6.3522e-01,  7.0493e-01, -1.4506e+00, -9.9922e-01,  1.7310e+00,
         -2.5539e-01, -1.9903e-01, -1.5794e-02,  1.3914e-01,  5.0152e-01,
          6.3051e-02,  1.0945e-01,  5.8720e-02, -1.8930e-02,  2.0752e-02,
         -1.5651e-01,  1.9826e-02,  1.6874e-01,  8.0343e-02,  2.2725e-02,
          2.7940e-02, -8.8432e-02,  4.1210e-03, -4.3089e-01,  4.9951e-01,
         -5.5074e-01,  6.3429e-01,  3.3594e-01,  6.7258e-02,  9.0306e-03,
         -2.3976e-02,  7.2675e-03, -6.4181e-03,  9.9369e-02, -7.6065e-02,
         -1.8177e-02, -6.2961e-03]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
250000 特征值优化 tensor(0.9452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4609e-02, -2.1765e-02,  1.6159e+00,  9.5086e-02,  8.5010e+00,
         -6.2233e-01,  7.2575e-01, -1.4540e+00, -1.0124e+00,  1.7526e+00,
         -2.6242e-01, -2.2117e-01, -1.4495e-02,  1.2831e-01,  5.0610e-01,
          1.3240e-02,  4.8900e-02,  9.0045e-02, -8.4661e-02,  1.8867e-02,
         -1.5786e-01,  1.9273e-02,  1.8052e-01,  9.6214e-02, -4.8222e-02,
          8.4268e-02, -2.8118e-02,  7.4287e-02, -4.3138e-01,  4.9930e-01,
         -6.0651e-01,  6.4303e-01,  3.3416e-01,  6.7606e-02, -4.8415e-02,
          3.2756e-02, -1.1913e-02, -1.0291e-02,  9.6873e-02, -7.6203e-02,
          2.3843e-03,  1.0657e-03]], device='cuda:0') tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
251000 特征值优化 tensor(0.9665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.6298e-02, -2.7358e-02,  1.6047e+00,  1.0687e-01,  8.6276e+00,
         -6.2380e-01,  7.2183e-01, -1.4424e+00, -9.6431e-01,  1.7241e+00,
         -2.5782e-01, -2.3372e-01, -1.4375e-02,  1.5287e-01,  5.2310e-01,
          4.7161e-02,  1.0204e-01,  6.2556e-02, -6.7179e-02,  2.3304e-02,
         -1.5601e-01,  2.0874e-02,  1.6641e-01,  1.0307e-01,  1.1047e-02,
          4.2686e-02, -7.4067e-02,  2.5085e-02, -4.2960e-01,  4.9970e-01,
         -6.1458e-01,  6.4414e-01,  3.2833e-01,  6.6379e-02,  5.2715e-03,
          3.0826e-02,  1.3343e-02, -5.4362e-03,  8.2686e-02, -7.7183e-02,
         -2.0859e-02,  7.1886e-03]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
252000 特征值优化 tensor(9.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2609,  1.2217,  0.3841,  0.6029,  0.3952, -0.3049,  0.0722,  1.3796,
          0.1728,  1.1122,  1.3197,  0.3582, -0.2236, -1.4300, -0.5140,  0.2221,
         -0.0961,  0.7567, -0.9830, -0.3257, -1.0700, -0.6488, -0.1743, -0.4644,
          0.4541,  0.7753,  0.9817, -0.3280,  0.4891,  0.1877,  0.2127, -1.0991,
         -0.1386, -0.1284, -0.4023,  0.4037, -0.0387, -0.1222,  0.0596, -1.3126,
         -0.4378,  0.9382]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
253000 特征值优化 tensor(1.5963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4037,  0.9897, -0.1059,  0.2683,  0.9478, -0.0332,  0.3517,  1.2163,
          0.9987,  0.6548,  0.0939,  1.1421, -0.1157, -0.6400, -0.2331, -0.1177,
         -0.0228,  0.1485, -0.1910, -0.0213, -0.4171, -0.1843,  0.0108, -0.2447,
          0.0224,  0.0558,  0.3154,  0.0270,  0.0763, -0.0104,  0.2071, -0.4126,
          0.1833,  0.1222, -0.1534,  0.2772,  0.0210, -0.0370, -0.0490, -0.4717,
          0.0333,  0.1929]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
254000 特征值优化 tensor(1.2145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2022,  1.1332,  0.0428,  0.1881,  1.1225, -0.2011,  0.2887,  1.5552,
          1.0201,  0.7607, -0.0664,  1.2860, -0.0446, -0.3762, -0.2849,  0.0899,
          0.0857,  0.1437, -0.0693, -0.0427, -0.3626, -0.1823, -0.0878, -0.1815,
          0.0204,  0.1166,  0.2458, -0.0974,  0.0054, -0.0049,  0.2397, -0.3490,
          0.1796,  0.1171, -0.2095,  0.2487,  0.0260,  0.0202,  0.0112, -0.2805,
         -0.0186,  0.1060]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
255000 特征值优化 tensor(1.2150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2606,  1.0633,  0.0571,  0.1913,  1.1158, -0.2124,  0.3116,  1.5916,
          0.9564,  0.6897, -0.0352,  1.3325, -0.0389, -0.2909, -0.2658,  0.0888,
          0.1112,  0.1192, -0.0826, -0.0890, -0.3562, -0.1821, -0.1020, -0.1353,
          0.0574,  0.1225,  0.2188, -0.1736, -0.0020, -0.0042,  0.2366, -0.3597,
          0.1845,  0.1202, -0.2098,  0.2556,  0.0266,  0.0210, -0.0029, -0.2614,
         -0.0213,  0.1531]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
256000 特征值优化 tensor(1.1890, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2896,  1.0340,  0.0568,  0.2043,  1.1547, -0.2393,  0.3221,  1.6311,
          0.8926,  0.6183, -0.0182,  1.3436, -0.0362, -0.2970, -0.2530,  0.0907,
          0.1143,  0.1085, -0.0843, -0.1065, -0.3517, -0.1791, -0.1216, -0.1275,
          0.0696,  0.1380,  0.2015, -0.1814,  0.0100, -0.0044,  0.2489, -0.3730,
          0.1931,  0.1278, -0.2201,  0.2359,  0.0288,  0.0181,  0.0116, -0.2546,
         -0.0223,  0.1847]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
257000 特征值优化 tensor(1.1860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2959,  1.0357,  0.0471,  0.1953,  1.1686, -0.2371,  0.3170,  1.6368,
          0.9066,  0.6019, -0.0161,  1.2632, -0.0372, -0.2832, -0.2712,  0.0463,
          0.0637,  0.1573, -0.1280, -0.1089, -0.3514, -0.1803, -0.1259, -0.1316,
          0.1118,  0.1486,  0.1794, -0.1567,  0.0096, -0.0054,  0.2454, -0.3748,
          0.1941,  0.1243, -0.1200,  0.3061, -0.0518,  0.0269,  0.0210, -0.2482,
          0.0597,  0.1894]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
258000 特征值优化 tensor(1.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2921,  1.0374,  0.0522,  0.2050,  1.2081, -0.2203,  0.3242,  1.6074,
          0.8207,  0.5676,  0.0130,  1.1611, -0.0371, -0.2964, -0.2576,  0.0755,
          0.0882,  0.1362, -0.1083, -0.1087, -0.3521, -0.1794, -0.1213, -0.1209,
          0.1061,  0.1291,  0.1908, -0.1759, -0.0033, -0.0045,  0.2554, -0.3771,
          0.1986,  0.1218, -0.1494,  0.2636, -0.0125,  0.0228,  0.0412, -0.2484,
          0.0184,  0.1581]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
259000 特征值优化 tensor(1.2069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2587,  1.0453,  0.0194,  0.1916,  1.4018, -0.2128,  0.3513,  1.6274,
          0.6186,  0.3601,  0.0432,  0.9857, -0.0386, -0.3008, -0.2856,  0.1055,
          0.1202,  0.1097, -0.0715, -0.1022, -0.3585, -0.1808, -0.1406, -0.1204,
          0.1317,  0.1276,  0.1527, -0.2031,  0.0071, -0.0078,  0.2697, -0.3832,
          0.2055,  0.1186, -0.1675,  0.2296,  0.0120,  0.0159,  0.0706, -0.2093,
         -0.0177,  0.2069]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
260000 特征值优化 tensor(1.1854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2997,  1.0486,  0.0123,  0.1922,  1.5134, -0.2431,  0.3431,  1.6571,
          0.6109,  0.3132,  0.0444,  1.0396, -0.0443, -0.3549, -0.2647,  0.1228,
          0.1138,  0.0952, -0.0768, -0.1095, -0.3586, -0.1801, -0.1542, -0.1225,
          0.1412,  0.0986,  0.1302, -0.2380,  0.0045, -0.0102,  0.2898, -0.3932,
          0.2160,  0.1266, -0.1902,  0.2107,  0.0391,  0.0104,  0.0694, -0.2133,
         -0.0460,  0.2140]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
261000 正交保障 tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2995,  1.0465,  0.0027,  0.1813,  1.5226, -0.2433,  0.3340,  1.6601,
          0.6217,  0.3123,  0.0433,  1.0566, -0.0442, -0.3433, -0.2716,  0.1156,
          0.1185,  0.0950, -0.0765, -0.1098, -0.3584, -0.1816, -0.1713, -0.1316,
          0.1488,  0.0880,  0.1247, -0.2195,  0.0199, -0.0114,  0.2914, -0.3933,
          0.2171,  0.1263, -0.1898,  0.2161,  0.0354,  0.0114,  0.0673, -0.2156,
         -0.0412,  0.2239]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
262000 特征值优化 tensor(1.1826, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7060e-01,  1.0616e+00,  1.5110e-03,  1.7460e-01,  1.5229e+00,
         -2.4354e-01,  3.2892e-01,  1.6663e+00,  6.1305e-01,  3.2024e-01,
          4.6065e-02,  1.0406e+00, -4.1502e-02, -3.3503e-01, -2.8916e-01,
          1.1584e-01,  1.2601e-01,  9.5842e-02, -6.5596e-02, -9.7388e-02,
         -3.5543e-01, -1.8211e-01, -1.7648e-01, -1.3060e-01,  1.4462e-01,
          9.3153e-02,  1.1409e-01, -2.1702e-01,  2.1653e-02, -1.1857e-02,
          2.9035e-01, -3.9234e-01,  2.1879e-01,  1.2624e-01, -1.9741e-01,
          2.2387e-01,  4.1574e-02,  1.0305e-02,  6.4777e-02, -2.1178e-01,
         -4.8502e-02,  2.1743e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
263000 特征值优化 tensor(1.2248, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2993,  1.0386,  0.0023,  0.1775,  1.5234, -0.2375,  0.3216,  1.6746,
          0.6349,  0.3190,  0.0454,  1.0209, -0.0389, -0.3234, -0.3042,  0.1150,
          0.1017,  0.1198, -0.0561, -0.1043, -0.3588, -0.1835, -0.1764, -0.1279,
          0.1521,  0.0998,  0.1094, -0.2093,  0.0149, -0.0094,  0.2833, -0.3901,
          0.2173,  0.1253, -0.1807,  0.2199,  0.0274,  0.0136,  0.0655, -0.2095,
         -0.0362,  0.2235]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
264000 特征值优化 tensor(1.1900, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2970,  1.0460,  0.0056,  0.1856,  1.5267, -0.2426,  0.3262,  1.6388,
          0.6320,  0.3280,  0.0643,  1.0254, -0.0445, -0.3430, -0.2672,  0.1159,
          0.1207,  0.0970, -0.0789, -0.1093, -0.3585, -0.1811, -0.1774, -0.1261,
          0.1552,  0.0797,  0.1127, -0.2166,  0.0094, -0.0108,  0.2907, -0.3942,
          0.2173,  0.1268, -0.1808,  0.2146,  0.0230,  0.0136,  0.0590, -0.2105,
         -0.0274,  0.2266]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
265000 特征值优化 tensor(1.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2932,  1.0454,  0.0072,  0.1835,  1.5225, -0.2174,  0.3242,  1.6166,
          0.6523,  0.3709,  0.0714,  1.0280, -0.0449, -0.3051, -0.2917,  0.0931,
          0.0957,  0.1364, -0.0762, -0.1087, -0.3578, -0.1818, -0.1654, -0.1407,
          0.1571,  0.0870,  0.1088, -0.1841,  0.0121, -0.0107,  0.2844, -0.3962,
          0.2158,  0.1261, -0.1382,  0.2362, -0.0106,  0.0176,  0.0347, -0.1994,
          0.0058,  0.2526]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
266000 特征值优化 tensor(1.1778, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3033,  1.0347,  0.0111,  0.1801,  1.5276, -0.2248,  0.3060,  1.6578,
          0.6832,  0.3892,  0.0493,  1.0107, -0.0428, -0.2816, -0.3308,  0.0713,
          0.0809,  0.1362, -0.1123, -0.1105, -0.3550, -0.1813, -0.1648, -0.1111,
          0.1828,  0.1115,  0.1313, -0.1838,  0.0094, -0.0105,  0.2852, -0.3927,
          0.2153,  0.1283, -0.1226,  0.2762, -0.0260,  0.0179,  0.0262, -0.1996,
          0.0235,  0.2548]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
267000 特征值优化 tensor(1.1878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2843,  1.0475,  0.0116,  0.1767,  1.5169, -0.2130,  0.3114,  1.6429,
          0.6617,  0.3900,  0.0625,  0.9959, -0.0429, -0.2914, -0.3168,  0.0878,
          0.0802,  0.1359, -0.0960, -0.1039, -0.3564, -0.1819, -0.1643, -0.1146,
          0.1726,  0.1142,  0.1312, -0.1895,  0.0120, -0.0104,  0.2850, -0.3898,
          0.2173,  0.1220, -0.1344,  0.2628, -0.0182,  0.0177,  0.0319, -0.1999,
          0.0154,  0.2476]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
268000 特征值优化 tensor(1.1940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8271e-01,  1.0429e+00,  1.5934e-02,  1.9141e-01,  1.5062e+00,
         -2.0571e-01,  3.3097e-01,  1.6542e+00,  6.3625e-01,  3.8453e-01,
          8.7300e-02,  9.8270e-01, -4.1855e-02, -3.1253e-01, -3.0686e-01,
          1.0244e-01,  7.6943e-02,  1.4642e-01, -6.9378e-02, -1.0453e-01,
         -3.5954e-01, -1.7996e-01, -1.6285e-01, -9.5456e-02,  1.6834e-01,
          1.3189e-01,  1.2966e-01, -1.6921e-01,  1.1132e-02, -9.5998e-03,
          2.8211e-01, -3.9316e-01,  2.1939e-01,  1.2199e-01, -1.5422e-01,
          2.4281e-01, -1.5459e-03,  1.2401e-02,  3.8965e-02, -1.9765e-01,
         -9.0557e-03,  2.4257e-01]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
269000 特征值优化 tensor(1.1858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2829,  1.0570,  0.0087,  0.1909,  1.5057, -0.2410,  0.3077,  1.6646,
          0.6304,  0.3328,  0.0751,  1.0287, -0.0427, -0.3512, -0.2954,  0.1261,
          0.1037,  0.1162, -0.0588, -0.1040, -0.3559, -0.1806, -0.1621, -0.0939,
          0.1321,  0.1178,  0.1469, -0.2062,  0.0178, -0.0104,  0.2887, -0.3902,
          0.2194,  0.1267, -0.2006,  0.2121,  0.0390,  0.0113,  0.0539, -0.2072,
         -0.0458,  0.2299]], device='cuda:0') tensor(0.2151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
270000 特征值优化 tensor(1.2271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2765,  1.0528,  0.0242,  0.2050,  1.5146, -0.2390,  0.3052,  1.6695,
          0.6323,  0.3456,  0.0776,  1.0115, -0.0389, -0.3295, -0.3049,  0.1241,
          0.1041,  0.1191, -0.0534, -0.0993, -0.3615, -0.1813, -0.1593, -0.0861,
          0.1386,  0.1147,  0.1364, -0.2058,  0.0080, -0.0053,  0.2851, -0.3897,
          0.2177,  0.1243, -0.1976,  0.2134,  0.0382,  0.0121,  0.0479, -0.1994,
         -0.0475,  0.2323]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
271000 特征值优化 tensor(1.1775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3268,  1.0974,  0.0089,  0.1896,  1.5265, -0.2283,  0.2849,  1.7006,
          0.6553,  0.3236,  0.0649,  0.9918, -0.0494, -0.2986, -0.3279,  0.0887,
          0.0675,  0.1503, -0.0589, -0.1072, -0.3510, -0.1805, -0.1912, -0.0775,
          0.1264,  0.1360,  0.1265, -0.2090,  0.0177, -0.0102,  0.2919, -0.3907,
          0.2225,  0.1287, -0.2014,  0.2031,  0.0388,  0.0111,  0.0565, -0.2075,
         -0.0459,  0.2261]], device='cuda:0') tensor(0.2122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
272000 特征值优化 tensor(1.0952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5868,  1.4078,  0.0046,  0.1868,  1.4896, -0.1549,  0.3203,  1.5678,
          0.9361,  0.7199,  0.1003,  1.3233, -0.0859, -0.2716, -0.2829,  0.1419,
          0.0713,  0.0467, -0.0922, -0.1014, -0.3156, -0.1796, -0.1647, -0.1842,
          0.0831,  0.1583,  0.1903, -0.1165, -0.0031, -0.0124,  0.2859, -0.3347,
          0.2382,  0.1356, -0.0966,  0.3028, -0.0256,  0.0181,  0.0617, -0.1420,
          0.0230,  0.3132]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
273000 特征值优化 tensor(1.0938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9120e-01,  1.4279e+00,  1.4931e-02,  2.0189e-01,  1.4141e+00,
         -1.5264e-01,  3.0011e-01,  1.5626e+00,  9.3427e-01,  7.4519e-01,
          8.0726e-02,  1.4477e+00, -8.4167e-02, -2.8319e-01, -2.8296e-01,
          1.7012e-01,  5.1350e-02, -1.4457e-02, -6.4210e-02, -7.5270e-02,
         -3.1591e-01, -1.6989e-01, -1.1596e-01, -1.7670e-01,  6.4307e-02,
          1.7830e-01,  1.7908e-01, -1.0517e-01, -1.3659e-03, -2.3744e-03,
          2.7617e-01, -3.2867e-01,  2.2979e-01,  1.3607e-01, -1.1464e-01,
          2.9741e-01, -1.1784e-02,  2.0608e-02,  5.7415e-02, -1.3100e-01,
          1.5170e-02,  3.4074e-01]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
274000 特征值优化 tensor(1.0918, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5948,  1.4313,  0.0157,  0.2063,  1.4075, -0.1345,  0.2954,  1.5594,
          0.9084,  0.6877,  0.0837,  1.6066, -0.0839, -0.3853, -0.1889,  0.0765,
         -0.0249,  0.0686, -0.1264, -0.0442, -0.3160, -0.1691, -0.1166, -0.1952,
          0.0225,  0.1298,  0.2287, -0.0780,  0.0154, -0.0016,  0.2747, -0.3281,
          0.2317,  0.1398, -0.2084,  0.2702, -0.0228,  0.0218,  0.0642, -0.1439,
          0.0272,  0.3563]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
275000 特征值优化 tensor(1.1215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5855,  1.4147,  0.0124,  0.2007,  1.4173, -0.1413,  0.3209,  1.5635,
          0.9384,  0.7733,  0.0765,  1.5687, -0.0848, -0.2828, -0.2769,  0.1548,
          0.0489, -0.0044, -0.0538, -0.0627, -0.3124, -0.1725, -0.1025, -0.1956,
          0.0571,  0.1914,  0.1659, -0.0904, -0.0025, -0.0051,  0.2780, -0.3179,
          0.2422,  0.1375, -0.1062,  0.3055, -0.0165,  0.0207,  0.0571, -0.1297,
          0.0173,  0.3583]], device='cuda:0') tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
276000 特征值优化 tensor(1.0909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5922,  1.4308,  0.0268,  0.2223,  1.4068, -0.1308,  0.3085,  1.5601,
          0.8739,  0.7094,  0.0775,  1.6910, -0.0836, -0.3768, -0.1963,  0.0908,
         -0.0176,  0.0572, -0.1156, -0.0417, -0.3153, -0.1699, -0.1039, -0.1706,
          0.0419,  0.1447,  0.2291, -0.0868, -0.0319, -0.0018,  0.2755, -0.3291,
          0.2308,  0.1401, -0.1905,  0.2834, -0.0237,  0.0214,  0.0694, -0.1475,
          0.0272,  0.3553]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
277000 特征值优化 tensor(1.1189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5823,  1.4086, -0.0041,  0.1872,  1.4191, -0.1400,  0.3378,  1.5676,
          0.8890,  0.7719,  0.0700,  1.6284, -0.0844, -0.2771, -0.2746,  0.1583,
          0.0393, -0.0156, -0.0503, -0.0702, -0.3125, -0.1778, -0.1132, -0.1854,
          0.0706,  0.1961,  0.1457, -0.0739, -0.0060, -0.0109,  0.2795, -0.3214,
          0.2426,  0.1383, -0.0988,  0.3005, -0.0149,  0.0192,  0.0662, -0.1406,
          0.0140,  0.3394]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
278000 特征值优化 tensor(1.1247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8790e-01,  1.4271e+00,  1.7580e-02,  2.1092e-01,  1.4059e+00,
         -1.2843e-01,  3.1481e-01,  1.5571e+00,  8.3433e-01,  6.7950e-01,
          6.3798e-02,  1.7272e+00, -8.4940e-02, -3.5818e-01, -2.0961e-01,
          1.0240e-01, -1.6099e-02,  4.1189e-02, -1.1281e-01, -4.7941e-02,
         -3.1383e-01, -1.7048e-01, -1.1247e-01, -1.9161e-01,  3.1893e-02,
          1.5724e-01,  2.1091e-01, -8.4354e-02,  1.0460e-02,  1.1745e-05,
          2.7317e-01, -3.2460e-01,  2.3185e-01,  1.4260e-01, -1.7697e-01,
          2.8891e-01, -1.8291e-02,  2.2675e-02,  7.6177e-02, -1.4977e-01,
          2.3150e-02,  3.5059e-01]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
279000 特征值优化 tensor(1.0911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5969,  1.4240,  0.0227,  0.2151,  1.4169, -0.1552,  0.3321,  1.5630,
          0.8355,  0.7407,  0.0543,  1.6637, -0.0826, -0.2884, -0.2690,  0.1535,
          0.0504,  0.0033, -0.0671, -0.0817, -0.3142, -0.1703, -0.1013, -0.1710,
          0.0601,  0.2207,  0.1680, -0.0755,  0.0205, -0.0026,  0.2770, -0.3307,
          0.2275,  0.1361, -0.0954,  0.3164, -0.0140,  0.0206,  0.0746, -0.1460,
          0.0166,  0.3381]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
280000 特征值优化 tensor(1.0957, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5884,  1.4285,  0.0251,  0.2234,  1.4066, -0.1351,  0.3315,  1.5580,
          0.7834,  0.6684,  0.0548,  1.7724, -0.0840, -0.3703, -0.1950,  0.1022,
         -0.0173,  0.0471, -0.0981, -0.0435, -0.3147, -0.1697, -0.1139, -0.1832,
          0.0463,  0.1484,  0.2210, -0.0738, -0.0020, -0.0019,  0.2756, -0.3302,
          0.2290,  0.1395, -0.1679,  0.2895, -0.0224,  0.0217,  0.0882, -0.1616,
          0.0254,  0.3358]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
281000 特征值优化 tensor(1.1006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9167e-01,  1.4213e+00,  1.5867e-02,  2.0307e-01,  1.4221e+00,
         -1.2514e-01,  3.3224e-01,  1.5543e+00,  7.6302e-01,  7.0715e-01,
          4.5470e-02,  1.7786e+00, -8.2756e-02, -3.2503e-01, -2.3721e-01,
          1.1594e-01,  3.8579e-03,  1.9190e-02, -7.0148e-02, -7.7022e-02,
         -3.1355e-01, -1.6966e-01, -1.0931e-01, -1.7816e-01,  6.2241e-02,
          1.8038e-01,  1.7854e-01, -7.7186e-02, -4.0426e-03, -1.7468e-03,
          2.7569e-01, -3.3002e-01,  2.2683e-01,  1.3942e-01, -1.1584e-01,
          3.0411e-01, -1.6890e-02,  2.1796e-02,  8.6954e-02, -1.5400e-01,
          2.1058e-02,  3.3524e-01]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
282000 特征值优化 tensor(1.0994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8223e-01,  1.4205e+00,  2.8803e-02,  2.2427e-01,  1.4174e+00,
         -1.3787e-01,  3.4530e-01,  1.5587e+00,  7.3210e-01,  6.7633e-01,
          4.1474e-02,  1.7917e+00, -8.4460e-02, -3.3392e-01, -2.2039e-01,
          1.3497e-01,  4.3628e-03,  1.4795e-02, -7.9049e-02, -4.6304e-02,
         -3.1364e-01, -1.6949e-01, -1.1083e-01, -1.7194e-01,  5.9962e-02,
          1.7483e-01,  1.7634e-01, -7.9643e-02, -1.7453e-02, -1.5477e-03,
          2.7800e-01, -3.3139e-01,  2.3049e-01,  1.3913e-01, -1.3264e-01,
          2.9355e-01, -1.9827e-02,  2.1485e-02,  9.6413e-02, -1.6316e-01,
          2.2766e-02,  3.2027e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
283000 特征值优化 tensor(1.0907, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9287e-01,  1.4318e+00,  2.5891e-02,  2.2232e-01,  1.4072e+00,
         -1.2789e-01,  3.4264e-01,  1.5585e+00,  7.4134e-01,  5.9686e-01,
          4.1752e-02,  1.8767e+00, -8.3532e-02, -3.8691e-01, -1.8769e-01,
          7.2477e-02, -2.7508e-02,  6.9130e-02, -1.2816e-01, -4.3276e-02,
         -3.1550e-01, -1.6997e-01, -1.1394e-01, -1.6119e-01,  5.8508e-02,
          1.6488e-01,  2.1609e-01, -9.9526e-02, -1.2759e-02, -1.7525e-03,
          2.7395e-01, -3.3154e-01,  2.2720e-01,  1.4052e-01, -1.7027e-01,
          3.0227e-01, -2.3724e-02,  2.1926e-02,  1.0274e-01, -1.7501e-01,
          2.7101e-02,  3.2919e-01]], device='cuda:0') tensor(0.2067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
284000 特征值优化 tensor(1.0913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5953,  1.4230,  0.0230,  0.2115,  1.4165, -0.1562,  0.3621,  1.5606,
          0.7289,  0.6683,  0.0260,  1.7985, -0.0824, -0.2855, -0.2728,  0.1574,
          0.0492, -0.0025, -0.0685, -0.0816, -0.3143, -0.1701, -0.0957, -0.1840,
          0.0434,  0.2115,  0.1582, -0.0843,  0.0272, -0.0032,  0.2771, -0.3337,
          0.2245,  0.1356, -0.0696,  0.3252, -0.0135,  0.0206,  0.0981, -0.1642,
          0.0159,  0.3186]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
285000 特征值优化 tensor(1.0994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5822,  1.4197,  0.0284,  0.2201,  1.4238, -0.1404,  0.3646,  1.5561,
          0.6683,  0.6217,  0.0231,  1.8754, -0.0843, -0.3409, -0.2162,  0.1289,
          0.0024,  0.0191, -0.0806, -0.0461, -0.3138, -0.1695, -0.1065, -0.1874,
          0.0455,  0.1817,  0.1719, -0.0868,  0.0076, -0.0021,  0.2787, -0.3331,
          0.2278,  0.1391, -0.1233,  0.3006, -0.0192,  0.0217,  0.1129, -0.1739,
          0.0223,  0.3083]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
286000 特征值优化 tensor(1.0911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9214e-01,  1.4291e+00, -1.8527e-03,  1.9199e-01,  1.4066e+00,
         -1.2334e-01,  3.7115e-01,  1.5635e+00,  6.8667e-01,  5.4336e-01,
          3.1942e-02,  1.9511e+00, -8.2968e-02, -3.7994e-01, -1.9372e-01,
          6.9030e-02, -2.4650e-02,  7.3365e-02, -1.3017e-01, -5.2162e-02,
         -3.1475e-01, -1.7889e-01, -1.0906e-01, -1.7737e-01,  7.5280e-02,
          1.6845e-01,  2.0980e-01, -8.0135e-02,  3.0909e-04, -1.0880e-02,
          2.7529e-01, -3.3380e-01,  2.2603e-01,  1.4110e-01, -1.5536e-01,
          3.1276e-01, -2.6310e-02,  2.0860e-02,  1.2094e-01, -1.8777e-01,
          2.6793e-02,  3.0846e-01]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
287000 特征值优化 tensor(1.0915, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9679e-01,  1.4236e+00,  1.9801e-02,  2.1410e-01,  1.4165e+00,
         -1.5896e-01,  3.7953e-01,  1.5588e+00,  6.6605e-01,  6.2276e-01,
          4.6535e-03,  1.8858e+00, -8.2896e-02, -2.8324e-01, -2.7372e-01,
          1.5847e-01,  5.2907e-02,  3.1811e-04, -6.8595e-02, -8.2453e-02,
         -3.1420e-01, -1.7036e-01, -1.0492e-01, -1.8155e-01,  7.1599e-02,
          2.3140e-01,  1.4812e-01, -7.7277e-02,  2.3837e-02, -2.3865e-03,
          2.7667e-01, -3.3488e-01,  2.2272e-01,  1.3521e-01, -5.5947e-02,
          3.2750e-01, -1.2661e-02,  2.0996e-02,  1.1276e-01, -1.7278e-01,
          1.5717e-02,  3.0768e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
288000 特征值优化 tensor(1.0953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5848,  1.4240,  0.0292,  0.2211,  1.4125, -0.1376,  0.3842,  1.5553,
          0.6245,  0.5521,  0.0063,  1.9204, -0.0842, -0.3453, -0.2138,  0.1249,
         -0.0034,  0.0235, -0.0927, -0.0403, -0.3147, -0.1695, -0.1078, -0.1741,
          0.0649,  0.1917,  0.1653, -0.0714, -0.0237, -0.0019,  0.2766, -0.3341,
          0.2237,  0.1391, -0.1127,  0.3096, -0.0205,  0.0218,  0.1301, -0.1845,
          0.0230,  0.2903]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
289000 特征值优化 tensor(1.1046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8502e-01,  1.4144e+00,  1.4800e-02,  2.0777e-01,  1.4207e+00,
         -1.2410e-01,  3.8386e-01,  1.5523e+00,  6.0491e-01,  5.4505e-01,
         -6.1336e-03,  1.9019e+00, -8.4299e-02, -3.2176e-01, -2.3951e-01,
          1.1899e-01, -9.7109e-04,  1.6513e-02, -7.3334e-02, -7.3352e-02,
         -3.1302e-01, -1.6993e-01, -1.4744e-01, -1.4530e-01,  1.1018e-01,
          1.8763e-01,  1.4954e-01, -1.0581e-01, -1.6438e-02, -2.3329e-03,
          2.7642e-01, -3.3372e-01,  2.2375e-01,  1.4020e-01, -8.2557e-02,
          3.0757e-01, -1.5069e-02,  2.2032e-02,  1.3165e-01, -1.8123e-01,
          1.9076e-02,  2.8347e-01]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
290000 特征值优化 tensor(1.1124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5745,  1.4064,  0.0137,  0.2106,  1.4189, -0.1335,  0.4059,  1.5532,
          0.6036,  0.5515, -0.0119,  1.8788, -0.0857, -0.2866, -0.2709,  0.1501,
          0.0249, -0.0174, -0.0541, -0.0546, -0.3127, -0.1720, -0.1108, -0.1854,
          0.0657,  0.2116,  0.1335, -0.0667, -0.0116, -0.0044,  0.2784, -0.3243,
          0.2332,  0.1388, -0.0515,  0.2970, -0.0122,  0.0212,  0.1338, -0.1818,
          0.0137,  0.2770]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
291000 特征值优化 tensor(1.0978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5790,  1.4175,  0.0272,  0.2177,  1.4147, -0.1403,  0.4005,  1.5507,
          0.5726,  0.4895, -0.0144,  1.9805, -0.0849, -0.3507, -0.2100,  0.1228,
         -0.0025,  0.0237, -0.0865, -0.0446, -0.3137, -0.1697, -0.1162, -0.1806,
          0.0586,  0.1952,  0.1523, -0.0883,  0.0110, -0.0022,  0.2777, -0.3354,
          0.2224,  0.1388, -0.1014,  0.3133, -0.0198,  0.0225,  0.1466, -0.1904,
          0.0232,  0.2756]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
292000 特征值优化 tensor(1.0953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9061e-01,  1.4297e+00,  2.5052e-02,  2.2290e-01,  1.4094e+00,
         -1.1996e-01,  4.0330e-01,  1.5486e+00,  5.7964e-01,  4.3396e-01,
         -1.6348e-02,  2.0602e+00, -8.3344e-02, -3.9010e-01, -1.8326e-01,
          8.5847e-02, -2.5720e-02,  5.5136e-02, -1.0389e-01, -4.5088e-02,
         -3.1494e-01, -1.6968e-01, -1.2322e-01, -1.5899e-01,  8.2799e-02,
          1.9002e-01,  1.8241e-01, -9.3912e-02, -2.5490e-03, -1.8611e-03,
          2.7636e-01, -3.3551e-01,  2.2276e-01,  1.4148e-01, -1.2312e-01,
          3.2184e-01, -2.3429e-02,  2.3070e-02,  1.5427e-01, -1.9754e-01,
          2.6916e-02,  2.8034e-01]], device='cuda:0') tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
293000 特征值优化 tensor(1.0978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5903,  1.4207,  0.0172,  0.2041,  1.4195, -0.1433,  0.4125,  1.5508,
          0.5469,  0.4801, -0.0322,  1.9688, -0.0834, -0.3053, -0.2519,  0.1368,
          0.0221,  0.0086, -0.0756, -0.0762, -0.3140, -0.1697, -0.1217, -0.1561,
          0.0957,  0.2156,  0.1361, -0.0925, -0.0070, -0.0023,  0.2769, -0.3367,
          0.2209,  0.1373, -0.0468,  0.3199, -0.0142,  0.0224,  0.1512, -0.1882,
          0.0181,  0.2653]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
294000 特征值优化 tensor(1.1170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5786,  1.4055,  0.0067,  0.1995,  1.4153, -0.1347,  0.4378,  1.5508,
          0.5541,  0.4792, -0.0323,  1.9595, -0.0851, -0.2787, -0.2794,  0.1540,
          0.0355, -0.0136, -0.0537, -0.0595, -0.3126, -0.1723, -0.1127, -0.1921,
          0.0922,  0.2234,  0.1031, -0.0579, -0.0035, -0.0043,  0.2784, -0.3243,
          0.2324,  0.1382, -0.0232,  0.3041, -0.0149,  0.0220,  0.1520, -0.1891,
          0.0164,  0.2606]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
295000 特征值优化 tensor(1.0894, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5940,  1.4327,  0.0271,  0.2227,  1.4075, -0.1320,  0.4188,  1.5501,
          0.5537,  0.3631, -0.0333,  2.0306, -0.0831, -0.3724, -0.2003,  0.0834,
         -0.0207,  0.0631, -0.1276, -0.0431, -0.3155, -0.1698, -0.1152, -0.1884,
          0.0597,  0.1978,  0.1727, -0.0693,  0.0041, -0.0020,  0.2749, -0.3369,
          0.2188,  0.1398, -0.1049,  0.3283, -0.0209,  0.0229,  0.1741, -0.2022,
          0.0241,  0.2537]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
296000 特征值优化 tensor(1.0974, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8858e-01,  1.4181e+00,  1.8753e-02,  2.0763e-01,  1.4208e+00,
         -1.4759e-01,  4.2864e-01,  1.5478e+00,  5.0986e-01,  4.2075e-01,
         -4.7939e-02,  2.0177e+00, -8.3263e-02, -3.0439e-01, -2.5108e-01,
          1.3559e-01,  2.3421e-02,  1.0303e-02, -7.4636e-02, -7.9615e-02,
         -3.1353e-01, -1.6950e-01, -1.1392e-01, -1.7562e-01,  7.1343e-02,
          2.3062e-01,  1.1985e-01, -6.6644e-02,  1.5042e-02, -1.8893e-03,
          2.7780e-01, -3.3745e-01,  2.1846e-01,  1.3694e-01, -3.4221e-02,
          3.2123e-01, -1.3865e-02,  2.2278e-02,  1.6543e-01, -1.9200e-01,
          1.7284e-02,  2.5215e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
297000 特征值优化 tensor(1.1147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.7585e-01,  1.4070e+00,  1.1957e-02,  2.0600e-01,  1.4181e+00,
         -1.3573e-01,  4.4640e-01,  1.5464e+00,  5.1779e-01,  4.1476e-01,
         -5.1646e-02,  2.0043e+00, -8.5340e-02, -2.8852e-01, -2.7073e-01,
          1.4546e-01,  3.0547e-02, -9.5580e-03, -5.7021e-02, -5.4214e-02,
         -3.1223e-01, -1.7256e-01, -1.1075e-01, -1.9914e-01,  6.9296e-02,
          2.1970e-01,  1.1365e-01, -5.8987e-02, -1.0722e-03, -4.4817e-03,
          2.7903e-01, -3.2606e-01,  2.2823e-01,  1.3913e-01, -1.7190e-02,
          3.0371e-01, -1.3290e-02,  2.1653e-02,  1.6813e-01, -1.9290e-01,
          1.4857e-02,  2.4720e-01]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
298000 特征值优化 tensor(1.0958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8536e-01,  1.4258e+00,  2.7578e-02,  2.2265e-01,  1.4089e+00,
         -1.3407e-01,  4.3894e-01,  1.5452e+00,  5.0061e-01,  3.2934e-01,
         -5.0842e-02,  2.0972e+00, -8.3856e-02, -3.6788e-01, -1.9830e-01,
          1.0307e-01, -1.2688e-02,  3.8998e-02, -1.0011e-01, -4.3259e-02,
         -3.1457e-01, -1.6980e-01, -1.1250e-01, -1.8736e-01,  5.6288e-02,
          2.0987e-01,  1.5925e-01, -6.9751e-02,  1.7146e-02, -2.0022e-03,
          2.7630e-01, -3.3790e-01,  2.1714e-01,  1.3911e-01, -8.2672e-02,
          3.2562e-01, -2.0337e-02,  2.3086e-02,  1.8558e-01, -2.0181e-01,
          2.3212e-02,  2.4332e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
299000 特征值优化 tensor(1.1003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8084e-01,  1.4177e+00,  2.3687e-02,  2.2351e-01,  1.4071e+00,
         -1.3336e-01,  4.4355e-01,  1.5443e+00,  4.9432e-01,  3.0584e-01,
         -5.7957e-02,  2.1654e+00, -8.4764e-02, -3.7764e-01, -1.9623e-01,
          9.4435e-02, -8.7108e-03,  4.2333e-02, -8.3601e-02, -4.7235e-02,
         -3.1343e-01, -1.6982e-01, -1.1321e-01, -1.8227e-01,  7.4087e-02,
          2.0104e-01,  1.6127e-01, -5.2754e-02, -5.0509e-03, -2.1470e-03,
          2.7677e-01, -3.3822e-01,  2.1806e-01,  1.4012e-01, -8.5048e-02,
          3.2549e-01, -2.1829e-02,  2.3867e-02,  1.8783e-01, -2.0394e-01,
          2.5220e-02,  2.4972e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
300000 特征值优化 tensor(1.0977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9038e-01,  1.4321e+00,  2.4508e-02,  2.2205e-01,  1.4181e+00,
         -1.2853e-01,  4.3724e-01,  1.5441e+00,  5.2922e-01,  2.4646e-01,
         -5.2005e-02,  2.2432e+00, -8.3721e-02, -4.1880e-01, -1.6944e-01,
          4.0395e-02, -5.4375e-02,  9.0109e-02, -1.2458e-01, -4.6861e-02,
         -3.1510e-01, -1.6966e-01, -1.1567e-01, -1.6391e-01,  8.0897e-02,
          2.0482e-01,  1.8792e-01, -8.8896e-02, -1.1881e-03, -1.8966e-03,
          2.7813e-01, -3.3926e-01,  2.1962e-01,  1.4086e-01, -1.0722e-01,
          3.3131e-01, -2.4514e-02,  2.4150e-02,  1.9300e-01, -2.1106e-01,
          2.8369e-02,  2.5823e-01]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
301000 特征值优化 tensor(1.0984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9055e-01,  1.4180e+00,  1.6596e-02,  2.0190e-01,  1.4255e+00,
         -1.3921e-01,  4.5383e-01,  1.5479e+00,  4.6470e-01,  3.1739e-01,
         -5.6892e-02,  2.1614e+00, -8.2057e-02, -3.1880e-01, -2.3871e-01,
          1.2036e-01,  1.1245e-02,  2.0606e-02, -7.1565e-02, -8.5079e-02,
         -3.1319e-01, -1.7544e-01, -1.0776e-01, -1.8250e-01,  7.9084e-02,
          2.1955e-01,  1.1903e-01, -6.2075e-02, -2.0674e-03, -7.3984e-03,
          2.7896e-01, -3.4018e-01,  2.1593e-01,  1.3762e-01, -2.1154e-02,
          3.2643e-01, -1.6202e-02,  2.1479e-02,  1.8967e-01, -1.9975e-01,
          1.7259e-02,  2.3589e-01]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
302000 特征值优化 tensor(1.1082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5775,  1.4110,  0.0229,  0.2130,  1.4260, -0.1387,  0.4557,  1.5457,
          0.4467,  0.3137, -0.0736,  2.1002, -0.0848, -0.2976, -0.2487,  0.1354,
          0.0202, -0.0077, -0.0619, -0.0544, -0.3129, -0.1710, -0.1124, -0.1911,
          0.0737,  0.2192,  0.1027, -0.0544,  0.0070, -0.0026,  0.2810, -0.3391,
          0.2214,  0.1382, -0.0149,  0.3112, -0.0140,  0.0221,  0.1945, -0.1967,
          0.0166,  0.2258]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
303000 特征值优化 tensor(5.9883, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5351, -1.2046,  0.5409, -0.8879, -0.5018,  0.8786, -0.8206,  0.1831,
          0.0755,  1.0005,  0.8090,  0.8247,  1.4316,  0.0371,  0.0048,  0.4745,
         -0.4421,  0.2667, -0.2342, -0.0952, -1.2067, -0.1477, -0.3772,  1.3982,
          0.1726,  0.6751,  0.5284,  0.0710, -0.0262, -0.1139,  0.2090, -0.0776,
          0.1292, -0.2954, -0.2188,  0.7627,  0.0154, -0.0049,  0.8100,  0.1325,
         -0.2235, -0.1383]], device='cuda:0') tensor(0.2300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
304000 特征值优化 tensor(1.3029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2866, -1.9404,  0.5522, -0.6921, -0.8343,  1.3161, -1.5475,  0.9214,
          0.1859,  0.8933,  0.0786,  1.1459,  0.6166,  0.1237, -0.0265,  0.0630,
         -0.0774,  0.1744,  0.0994, -0.4872, -0.4105, -0.1183, -0.1748,  0.6349,
          0.0247,  0.2411,  0.1596, -0.1036, -0.0854, -0.0606,  0.0658, -0.0166,
          0.0147, -0.2728, -0.0998,  0.4171, -0.1079, -0.0384,  0.2955, -0.1054,
         -0.1724,  0.0285]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
305000 特征值优化 tensor(1.1605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2978, -1.9896,  0.4877, -0.6863, -0.7150,  1.4488, -1.5829,  0.9538,
         -0.0562,  1.3939, -0.0310,  1.0240,  0.5781,  0.1024, -0.0195,  0.1677,
         -0.0401,  0.1761,  0.1411, -0.5061, -0.3823, -0.1086, -0.0748,  0.4161,
         -0.0386,  0.1472,  0.0882, -0.0093,  0.0260, -0.0596,  0.0671,  0.0390,
         -0.0107, -0.2911, -0.1227,  0.3715, -0.0974, -0.0193,  0.1909, -0.0968,
         -0.1868,  0.0920]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
306000 特征值优化 tensor(1.1645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2824e+00, -1.9853e+00,  4.8567e-01, -6.8077e-01, -7.4230e-01,
          1.4755e+00, -1.5353e+00,  9.5034e-01, -1.3265e-01,  1.3235e+00,
         -4.5556e-02,  8.5472e-01,  5.7604e-01,  1.6703e-01, -1.2814e-01,
          1.8073e-01, -4.2999e-02,  1.9279e-01,  1.3572e-01, -5.0276e-01,
         -3.8028e-01, -1.1003e-01,  7.0870e-02,  3.2570e-01, -5.0800e-02,
          3.2432e-02, -9.7371e-05, -1.1050e-02, -4.4929e-03, -6.0206e-02,
          6.6054e-02,  3.9700e-03,  3.3275e-03, -2.9423e-01, -1.0403e-01,
          3.6871e-01, -1.1254e-01, -3.3839e-02,  1.8645e-01, -1.0430e-01,
         -1.7649e-01,  6.6414e-02]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
307000 特征值优化 tensor(1.0848, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2838, -2.0176,  0.4982, -0.6889, -0.6772,  1.5115, -1.5255,  0.9771,
         -0.2115,  1.4827, -0.0612,  0.7135,  0.5128,  0.0138,  0.0099,  0.1308,
         -0.0661,  0.1935,  0.1216, -0.4407, -0.3268, -0.1065,  0.0680,  0.3383,
         -0.1026, -0.0609, -0.0839,  0.0124, -0.0426, -0.0609,  0.0667, -0.0553,
          0.0179, -0.2990, -0.0982,  0.3893, -0.1342, -0.0494,  0.2281, -0.1401,
         -0.1546,  0.1007]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
308000 特征值优化 tensor(1.0931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2814, -2.0389,  0.4785, -0.6709, -0.6815,  1.5968, -1.4880,  0.9934,
         -0.2456,  1.4086, -0.0888,  0.6272,  0.5125, -0.0474, -0.0023,  0.1260,
         -0.0677,  0.1999,  0.1313, -0.4396, -0.3296, -0.1036,  0.0064,  0.3819,
         -0.0464, -0.0752, -0.1024, -0.0441,  0.0164, -0.0642,  0.0674,  0.0126,
         -0.0048, -0.3091, -0.0962,  0.3806, -0.1121, -0.0321,  0.2268, -0.1475,
         -0.1770,  0.0863]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
309000 特征值优化 tensor(1.1075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2840, -2.0464,  0.4730, -0.6683, -0.7020,  1.6909, -1.4412,  0.9838,
         -0.2564,  1.3994, -0.1116,  0.6044,  0.5139, -0.0426, -0.0161,  0.1256,
         -0.0664,  0.1973,  0.1265, -0.4372, -0.3304, -0.1041, -0.0033,  0.3775,
         -0.0557, -0.0710, -0.1130, -0.0432, -0.0039, -0.0635,  0.0670,  0.0173,
         -0.0107, -0.3234, -0.0942,  0.3734, -0.1094, -0.0316,  0.2331, -0.1463,
         -0.1779,  0.0754]], device='cuda:0') tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
310000 特征值优化 tensor(1.1507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2779, -2.0752,  0.4733, -0.6699, -0.6835,  1.7380, -1.4771,  1.0507,
         -0.2604,  1.4168, -0.0203,  0.6182,  0.5124, -0.0533, -0.0411,  0.1059,
         -0.0336,  0.2272,  0.1279, -0.4356, -0.3352, -0.1052,  0.0108,  0.3803,
         -0.0819, -0.0717, -0.1189, -0.0244,  0.0077, -0.0624,  0.0654,  0.0634,
          0.0395, -0.3306, -0.0905,  0.3875, -0.1066, -0.0300,  0.2148, -0.1491,
         -0.2047,  0.0929]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
311000 特征值优化 tensor(1.0923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3026, -2.0546,  0.4860, -0.6780, -0.6753,  1.7353, -1.4682,  0.9938,
         -0.2689,  1.4011, -0.1008,  0.5864,  0.5161, -0.0355, -0.0076,  0.1402,
         -0.0883,  0.1878,  0.1222, -0.4413, -0.3325, -0.1057, -0.0110,  0.3990,
         -0.0307, -0.0427, -0.0952, -0.0526, -0.0288, -0.0622,  0.0671, -0.0165,
         -0.0244, -0.3308, -0.0923,  0.3744, -0.1276, -0.0454,  0.2350, -0.1436,
         -0.1619,  0.0691]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
312000 特征值优化 tensor(1.1218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2946, -2.0490,  0.4757, -0.6710, -0.6816,  1.7404, -1.4713,  1.0119,
         -0.2629,  1.3823, -0.1329,  0.6020,  0.5165, -0.0433, -0.0035,  0.1395,
         -0.0880,  0.1974,  0.1229, -0.4416, -0.3320, -0.1081, -0.0080,  0.3889,
         -0.0383, -0.0607, -0.0886, -0.0363, -0.0212, -0.0598,  0.0647, -0.0134,
         -0.0297, -0.3344, -0.0929,  0.3686, -0.1415, -0.0459,  0.2363, -0.1472,
         -0.1577,  0.0732]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
313000 特征值优化 tensor(1.1288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2940, -2.0430,  0.4872, -0.6825, -0.6587,  1.7372, -1.4542,  1.0309,
         -0.2681,  1.3958, -0.1470,  0.6092,  0.5180, -0.0443,  0.0033,  0.1479,
         -0.0943,  0.1908,  0.1180, -0.4391, -0.3289, -0.1091, -0.0062,  0.4016,
         -0.0419, -0.0542, -0.0877, -0.0387, -0.0351, -0.0590,  0.0603, -0.0086,
         -0.0287, -0.3292, -0.0919,  0.3754, -0.1474, -0.0440,  0.2397, -0.1454,
         -0.1534,  0.0713]], device='cuda:0') tensor(0.2241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
314000 特征值优化 tensor(1.1056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2782e+00, -2.0525e+00,  4.7270e-01, -6.6120e-01, -6.8993e-01,
          1.7376e+00, -1.4103e+00,  1.0287e+00, -2.8115e-01,  1.3926e+00,
         -1.8077e-01,  6.0964e-01,  5.1198e-01, -4.8129e-02, -8.9531e-03,
          1.2045e-01, -6.6998e-02,  2.0285e-01,  1.2344e-01, -4.3808e-01,
         -3.3100e-01, -1.0635e-01, -1.3587e-03,  3.9127e-01, -6.2417e-02,
         -7.6357e-02, -1.0294e-01, -2.1756e-02,  6.8535e-04, -6.0953e-02,
          6.6592e-02,  1.5923e-02, -5.3427e-03, -3.3216e-01, -9.6221e-02,
          3.7472e-01, -1.2603e-01, -4.0598e-02,  2.2927e-01, -1.4799e-01,
         -1.6619e-01,  7.8188e-02]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
315000 特征值优化 tensor(1.0870, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2763, -2.0569,  0.4891, -0.6805, -0.6756,  1.7249, -1.4015,  1.0678,
         -0.2858,  1.3981, -0.2032,  0.6235,  0.5121, -0.0545, -0.0359,  0.1230,
         -0.0536,  0.2085,  0.1280, -0.4373, -0.3323, -0.1077, -0.0078,  0.3923,
         -0.0933, -0.0761, -0.1217, -0.0037,  0.0225, -0.0595,  0.0668,  0.0330,
          0.0295, -0.3258, -0.0929,  0.3962, -0.1033, -0.0291,  0.2223, -0.1478,
         -0.1889,  0.0844]], device='cuda:0') tensor(0.2098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
316000 特征值优化 tensor(1.0985, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2767, -2.0558,  0.4879, -0.6776, -0.6811,  1.7273, -1.3625,  1.0667,
         -0.2886,  1.4009, -0.2258,  0.6362,  0.5122, -0.0517, -0.0098,  0.1275,
         -0.0479,  0.2140,  0.1204, -0.4370, -0.3318, -0.1068,  0.0107,  0.3837,
         -0.0914, -0.0792, -0.1291, -0.0174,  0.0225, -0.0607,  0.0672,  0.0417,
          0.0306, -0.3288, -0.0960,  0.3917, -0.1051, -0.0303,  0.2239, -0.1464,
         -0.1876,  0.0846]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
317000 特征值优化 tensor(1.0874, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3144, -2.0658,  0.4770, -0.6624, -0.6303,  1.7386, -1.3548,  1.0553,
         -0.2764,  1.4307, -0.1677,  0.6883,  0.5179,  0.0252,  0.0169,  0.1394,
         -0.0941,  0.1900,  0.1243, -0.4421, -0.3329, -0.1060,  0.0143,  0.3902,
         -0.0417, -0.0662, -0.0964, -0.0382, -0.0090, -0.0615,  0.0610,  0.0100,
         -0.0136, -0.3306, -0.1820,  0.4016, -0.1210, -0.0420,  0.2465, -0.1373,
         -0.1613,  0.0717]], device='cuda:0') tensor(0.2404, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
318000 特征值优化 tensor(1.0973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3165e+00, -2.0826e+00,  4.7894e-01, -6.6479e-01, -6.4348e-01,
          1.8275e+00, -1.3648e+00,  1.0630e+00, -3.0573e-01,  1.4070e+00,
         -1.7361e-01,  6.5552e-01,  5.1842e-01, -1.3639e-02, -3.8356e-02,
          1.0198e-01, -8.6080e-02,  2.0535e-01,  1.1371e-01, -4.4023e-01,
         -3.3558e-01, -1.0431e-01, -3.0188e-03,  4.1522e-01, -3.1393e-02,
         -1.1549e-01, -9.7496e-02, -2.7100e-02,  5.7826e-04, -6.3193e-02,
          6.2061e-02, -4.2390e-03,  1.5822e-02, -3.4695e-01, -1.7505e-01,
          3.9355e-01, -1.3124e-01, -4.4935e-02,  2.2376e-01, -1.4731e-01,
         -1.7122e-01,  8.6207e-02]], device='cuda:0') tensor(0.2068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
319000 特征值优化 tensor(1.0856, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3358e+00, -2.0923e+00,  4.8747e-01, -6.7142e-01, -6.4882e-01,
          1.9657e+00, -1.3646e+00,  1.0767e+00, -2.9028e-01,  1.4260e+00,
         -1.5935e-01,  6.4592e-01,  5.2047e-01,  9.7286e-04, -1.7596e-02,
          1.2558e-01, -1.0479e-01,  1.8488e-01,  1.1272e-01, -4.4321e-01,
         -3.3714e-01, -1.0485e-01,  3.6658e-03,  4.2853e-01, -2.3607e-02,
         -6.3575e-02, -8.4174e-02, -5.0325e-02, -2.7245e-02, -6.2473e-02,
          6.3087e-02,  3.1780e-02, -3.5636e-02, -3.6093e-01, -1.8839e-01,
          4.1039e-01, -1.3920e-01, -4.7739e-02,  2.4854e-01, -1.3520e-01,
         -1.4927e-01,  5.9991e-02]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
320000 特征值优化 tensor(1.0830, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3616, -2.1592,  0.4874, -0.6678, -0.6837,  2.2207, -1.3323,  1.1081,
         -0.3109,  1.4185, -0.1198,  0.6618,  0.5241, -0.0458, -0.0353,  0.1069,
         -0.0597,  0.2248,  0.1047, -0.4397, -0.3467, -0.1038,  0.0229,  0.4204,
         -0.0905, -0.0976, -0.1324, -0.0088,  0.0303, -0.0637,  0.0673, -0.0420,
          0.0388, -0.3972, -0.1889,  0.4282, -0.0978, -0.0279,  0.2116, -0.1492,
         -0.2064,  0.0966]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
321000 特征值优化 tensor(1.0817, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4121, -2.1943,  0.4809, -0.6689, -0.6520,  2.4254, -1.3562,  1.0918,
         -0.3082,  1.4032, -0.1348,  0.5951,  0.5324,  0.0257,  0.0045,  0.1220,
         -0.1100,  0.1986,  0.1033, -0.4443, -0.3520, -0.1036, -0.0072,  0.4632,
         -0.0369, -0.0699, -0.0990, -0.0513, -0.0234, -0.0636,  0.0633,  0.0219,
         -0.0254, -0.4227, -0.1954,  0.4305, -0.1358, -0.0482,  0.2401, -0.1394,
         -0.1583,  0.0591]], device='cuda:0') tensor(0.2088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
322000 特征值优化 tensor(1.1156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4231e+00, -2.2136e+00,  4.8151e-01, -6.7062e-01, -6.7088e-01,
          2.6557e+00, -1.3435e+00,  1.0870e+00, -3.0486e-01,  1.3714e+00,
         -1.4370e-01,  5.9264e-01,  5.3425e-01,  2.5484e-02,  9.2901e-04,
          9.1218e-02, -1.1116e-01,  2.1797e-01,  1.0749e-01, -4.4483e-01,
         -3.5419e-01, -1.0510e-01, -2.6532e-02,  4.8066e-01, -3.2861e-02,
         -1.0172e-01, -9.6189e-02, -3.4653e-02, -1.3374e-02, -6.2734e-02,
          6.5467e-02,  1.3772e-02, -4.9143e-03, -4.5837e-01, -1.9097e-01,
          4.2926e-01, -1.4445e-01, -5.4165e-02,  2.2984e-01, -1.4871e-01,
         -1.6167e-01,  7.1834e-02]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
323000 特征值优化 tensor(1.0861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4430, -2.2393,  0.4799, -0.6672, -0.6480,  2.7615, -1.3526,  1.0968,
         -0.3181,  1.3896, -0.1434,  0.6025,  0.5363,  0.0116,  0.0080,  0.1028,
         -0.0858,  0.2211,  0.1011, -0.4452, -0.3582, -0.1039, -0.0113,  0.4803,
         -0.0767, -0.1024, -0.1260, -0.0190,  0.0159, -0.0641,  0.0631, -0.0227,
          0.0329, -0.4693, -0.2045,  0.4537, -0.1128, -0.0336,  0.2229, -0.1478,
         -0.1847,  0.0769]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
324000 特征值优化 tensor(1.0808, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4572e+00, -2.2585e+00,  4.9231e-01, -6.7981e-01, -6.5849e-01,
          2.7598e+00, -1.3379e+00,  1.1067e+00, -3.1731e-01,  1.3908e+00,
         -1.3639e-01,  6.1447e-01,  5.3807e-01,  4.8442e-04,  3.0223e-02,
          1.0669e-01, -7.5700e-02,  2.3504e-01,  9.9677e-02, -4.4596e-01,
         -3.6027e-01, -1.0492e-01, -1.5192e-02,  4.7388e-01, -9.6963e-02,
         -9.4560e-02, -1.3829e-01, -1.5198e-02,  3.4741e-02, -6.2357e-02,
          6.4734e-02, -3.9273e-02,  4.1349e-02, -4.6870e-01, -2.0510e-01,
          4.5724e-01, -1.0074e-01, -2.9085e-02,  2.2033e-01, -1.4891e-01,
         -2.0077e-01,  8.1881e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
325000 特征值优化 tensor(1.1120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4753, -2.2566,  0.4723, -0.6598, -0.6491,  2.7746, -1.3296,  1.0857,
         -0.3074,  1.3818, -0.1522,  0.6043,  0.5414,  0.0091,  0.0335,  0.1083,
         -0.0929,  0.2249,  0.0884, -0.4497, -0.3605, -0.1030, -0.0176,  0.4705,
         -0.0806, -0.0945, -0.1129, -0.0327,  0.0089, -0.0651,  0.0622, -0.0107,
          0.0084, -0.4701, -0.1942,  0.4385, -0.1118, -0.0380,  0.2377, -0.1432,
         -0.1938,  0.0643]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
326000 特征值优化 tensor(1.0862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4782, -2.2660,  0.4776, -0.6633, -0.6517,  2.7667, -1.3367,  1.0910,
         -0.3291,  1.3808, -0.1414,  0.5774,  0.5413,  0.0262,  0.0369,  0.1134,
         -0.1185,  0.2065,  0.0895, -0.4481, -0.3619, -0.1029, -0.0071,  0.4846,
         -0.0514, -0.0874, -0.1057, -0.0396, -0.0165, -0.0643,  0.0634,  0.0196,
         -0.0253, -0.4683, -0.2035,  0.4454, -0.1316, -0.0473,  0.2406, -0.1409,
         -0.1636,  0.0540]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
327000 特征值优化 tensor(1.0811, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4761, -2.2674,  0.4901, -0.6781, -0.6655,  2.7669, -1.3474,  1.1032,
         -0.3339,  1.3782, -0.1275,  0.5752,  0.5413,  0.0401,  0.0354,  0.1157,
         -0.1366,  0.2004,  0.0870, -0.4483, -0.3620, -0.1050, -0.0263,  0.4937,
         -0.0346, -0.0764, -0.0934, -0.0537, -0.0339, -0.0623,  0.0650,  0.0358,
         -0.0358, -0.4689, -0.2021,  0.4424, -0.1507, -0.0581,  0.2410, -0.1408,
         -0.1481,  0.0528]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
328000 特征值优化 tensor(1.1067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4739e+00, -2.2686e+00,  4.7639e-01, -6.6424e-01, -6.6841e-01,
          2.7684e+00, -1.3361e+00,  1.0960e+00, -3.1958e-01,  1.3667e+00,
         -1.4153e-01,  6.0632e-01,  5.4025e-01,  2.0054e-02, -5.7056e-03,
          8.4619e-02, -1.1574e-01,  2.2231e-01,  9.6828e-02, -4.4750e-01,
         -3.6152e-01, -1.0369e-01, -2.5847e-02,  4.9278e-01, -4.0409e-02,
         -1.0558e-01, -9.6879e-02, -3.3862e-02, -6.1788e-03, -6.4204e-02,
          6.4792e-02,  9.0349e-03,  1.2068e-03, -4.7105e-01, -1.9589e-01,
          4.3944e-01, -1.4519e-01, -5.3709e-02,  2.3051e-01, -1.4876e-01,
         -1.6819e-01,  7.1131e-02]], device='cuda:0') tensor(0.2110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
329000 特征值优化 tensor(1.0828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4751, -2.2754,  0.4837, -0.6710, -0.6523,  2.7618, -1.3432,  1.1075,
         -0.3304,  1.3872, -0.1477,  0.6208,  0.5404,  0.0028,  0.0166,  0.1009,
         -0.0832,  0.2298,  0.0959, -0.4475, -0.3629, -0.1039, -0.0123,  0.4791,
         -0.0864, -0.1008, -0.1307, -0.0173,  0.0235, -0.0633,  0.0641, -0.0297,
          0.0363, -0.4689, -0.2034,  0.4561, -0.1041, -0.0298,  0.2234, -0.1478,
         -0.1934,  0.0781]], device='cuda:0') tensor(0.2069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
330000 特征值优化 tensor(1.1086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4866, -2.2657,  0.4734, -0.6602, -0.6490,  2.7752, -1.3204,  1.0891,
         -0.3208,  1.3772, -0.1591,  0.6127,  0.5428,  0.0111,  0.0318,  0.1099,
         -0.0982,  0.2220,  0.0885, -0.4513, -0.3610, -0.1029, -0.0153,  0.4704,
         -0.0796, -0.0959, -0.1100, -0.0330,  0.0057, -0.0649,  0.0622, -0.0069,
          0.0040, -0.4702, -0.1939,  0.4395, -0.1147, -0.0402,  0.2402, -0.1421,
         -0.1915,  0.0611]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
331000 特征值优化 tensor(1.0862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4779, -2.2694,  0.4813, -0.6685, -0.6526,  2.7712, -1.3345,  1.0969,
         -0.3425,  1.3734, -0.1485,  0.5835,  0.5422,  0.0343,  0.0366,  0.1156,
         -0.1275,  0.2019,  0.0917, -0.4481, -0.3629, -0.1038, -0.0135,  0.4863,
         -0.0420, -0.0882, -0.1012, -0.0485, -0.0224, -0.0637,  0.0636,  0.0271,
         -0.0305, -0.4700, -0.2012,  0.4438, -0.1396, -0.0512,  0.2420, -0.1404,
         -0.1566,  0.0521]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
332000 特征值优化 tensor(1.1541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4763, -2.2714,  0.4972, -0.6856, -0.6733,  2.7651, -1.3422,  1.1179,
         -0.3443,  1.3725, -0.1255,  0.5894,  0.5420,  0.0429,  0.0326,  0.1192,
         -0.1442,  0.1925,  0.0877, -0.4480, -0.3624, -0.1066, -0.0335,  0.4995,
         -0.0289, -0.0774, -0.0905, -0.0557, -0.0393, -0.0608,  0.0658,  0.0396,
         -0.0339, -0.4688, -0.1977,  0.4449, -0.1576, -0.0577,  0.2389, -0.1420,
         -0.1447,  0.0578]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
333000 特征值优化 tensor(1.1448, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4786, -2.2700,  0.4950, -0.6840, -0.6786,  2.7680, -1.3225,  1.1161,
         -0.3397,  1.3653, -0.1291,  0.6007,  0.5425,  0.0432,  0.0323,  0.1048,
         -0.1290,  0.2118,  0.0889, -0.4499, -0.3633, -0.1094, -0.0391,  0.4904,
         -0.0243, -0.0849, -0.0927, -0.0521, -0.0366, -0.0588,  0.0640,  0.0374,
         -0.0272, -0.4698, -0.1921,  0.4420, -0.1554, -0.0567,  0.2368, -0.1458,
         -0.1554,  0.0643]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
334000 特征值优化 tensor(1.1038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4824e+00, -2.2760e+00,  4.7513e-01, -6.5992e-01, -6.5238e-01,
          2.7639e+00, -1.3330e+00,  1.0962e+00, -3.3997e-01,  1.3696e+00,
         -1.7035e-01,  6.2030e-01,  5.4162e-01,  9.2776e-03, -4.9783e-03,
          9.0209e-02, -1.1234e-01,  2.2171e-01,  8.8907e-02, -4.4789e-01,
         -3.6237e-01, -1.0341e-01, -1.3280e-02,  4.8666e-01, -4.9283e-02,
         -1.0662e-01, -1.0927e-01, -3.2933e-02, -3.1514e-03, -6.4135e-02,
          6.3153e-02,  4.5536e-04,  9.2689e-03, -4.6989e-01, -1.9914e-01,
          4.4327e-01, -1.3785e-01, -4.8832e-02,  2.3141e-01, -1.4655e-01,
         -1.7122e-01,  6.9478e-02]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
335000 特征值优化 tensor(1.0943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4837, -2.2803,  0.4770, -0.6639, -0.6485,  2.7624, -1.3326,  1.1010,
         -0.3440,  1.3757, -0.1721,  0.6257,  0.5415,  0.0112,  0.0066,  0.0984,
         -0.1058,  0.2265,  0.0923, -0.4482, -0.3627, -0.1035, -0.0205,  0.4868,
         -0.0576, -0.1093, -0.1191, -0.0285,  0.0076, -0.0642,  0.0628, -0.0091,
          0.0228, -0.4687, -0.2000,  0.4522, -0.1285, -0.0425,  0.2283, -0.1462,
         -0.1751,  0.0717]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
336000 特征值优化 tensor(1.0828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4844, -2.2837,  0.4862, -0.6741, -0.6491,  2.7614, -1.3260,  1.1152,
         -0.3462,  1.3792, -0.1662,  0.6351,  0.5419,  0.0055,  0.0157,  0.0996,
         -0.0900,  0.2278,  0.0932, -0.4474, -0.3640, -0.1045, -0.0146,  0.4803,
         -0.0844, -0.1000, -0.1299, -0.0190,  0.0244, -0.0630,  0.0634, -0.0286,
          0.0380, -0.4689, -0.2006,  0.4568, -0.1089, -0.0326,  0.2255, -0.1468,
         -0.1891,  0.0754]], device='cuda:0') tensor(0.2111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
337000 特征值优化 tensor(1.1241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4866, -2.2786,  0.4775, -0.6619, -0.6615,  2.7748, -1.3098,  1.1108,
         -0.3344,  1.3751, -0.1669,  0.6388,  0.5426,  0.0059,  0.0240,  0.1049,
         -0.0917,  0.2245,  0.0880, -0.4490, -0.3634, -0.1066, -0.0161,  0.4716,
         -0.0876, -0.0961, -0.1183, -0.0282,  0.0162, -0.0615,  0.0638, -0.0196,
          0.0184, -0.4713, -0.1876,  0.4421, -0.1077, -0.0357,  0.2384, -0.1432,
         -0.1988,  0.0659]], device='cuda:0') tensor(0.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
338000 特征值优化 tensor(1.0795, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4792e+00, -2.2773e+00,  4.8750e-01, -6.7189e-01, -6.6944e-01,
          2.7571e+00, -1.3228e+00,  1.1218e+00, -3.5542e-01,  1.3785e+00,
         -1.6190e-01,  6.3665e-01,  5.4159e-01, -1.0456e-02, -1.8662e-03,
          1.0725e-01, -8.7178e-02,  2.2625e-01,  1.0306e-01, -4.4780e-01,
         -3.6475e-01, -1.0409e-01, -1.0610e-02,  4.8038e-01, -8.3985e-02,
         -9.9062e-02, -1.2701e-01, -1.9515e-02,  2.1158e-02, -6.3536e-02,
          6.6526e-02, -2.7155e-02,  2.7076e-02, -4.6967e-01, -1.9964e-01,
          4.5721e-01, -1.0476e-01, -3.0416e-02,  2.2526e-01, -1.4641e-01,
         -1.9413e-01,  7.4682e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
339000 特征值优化 tensor(1.0825, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4777, -2.2776,  0.4834, -0.6719, -0.6684,  2.7597, -1.3174,  1.1164,
         -0.3584,  1.3774, -0.1701,  0.6377,  0.5405, -0.0232, -0.0348,  0.1008,
         -0.0894,  0.2274,  0.0990, -0.4470, -0.3635, -0.1041, -0.0142,  0.4817,
         -0.0773, -0.0999, -0.1232, -0.0220,  0.0191, -0.0630,  0.0659, -0.0234,
          0.0254, -0.4680, -0.1989,  0.4570, -0.1128, -0.0346,  0.2260, -0.1463,
         -0.1867,  0.0735]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
340000 特征值优化 tensor(1.1499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4776, -2.2811,  0.4924, -0.6794, -0.6789,  2.7681, -1.3004,  1.1414,
         -0.3515,  1.3785, -0.1469,  0.6584,  0.5413, -0.0268, -0.0228,  0.1066,
         -0.0729,  0.2360,  0.0942, -0.4499, -0.3637, -0.1077, -0.0197,  0.4715,
         -0.1053, -0.0917, -0.1352, -0.0177,  0.0339, -0.0601,  0.0643, -0.0367,
          0.0281, -0.4669, -0.1940,  0.4523, -0.0970, -0.0247,  0.2301, -0.1449,
         -0.2079,  0.0748]], device='cuda:0') tensor(0.2197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
341000 特征值优化 tensor(1.0814, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4821, -2.2837,  0.4904, -0.6792, -0.6747,  2.7602, -1.3064,  1.1372,
         -0.3619,  1.3743, -0.1589,  0.6505,  0.5416, -0.0155,  0.0434,  0.1068,
         -0.0677,  0.2435,  0.0907, -0.4479, -0.3640, -0.1054, -0.0061,  0.4728,
         -0.0898, -0.1033, -0.1393, -0.0347,  0.0410, -0.0620,  0.0665, -0.0474,
          0.0473, -0.4687, -0.1978,  0.4590, -0.0877, -0.0232,  0.2264, -0.1460,
         -0.2145,  0.0752]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
342000 特征值优化 tensor(1.1038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4905e+00, -2.2728e+00,  4.7356e-01, -6.6158e-01, -6.4387e-01,
          2.7718e+00, -1.2945e+00,  1.0990e+00, -3.5496e-01,  1.3663e+00,
         -1.8976e-01,  6.3579e-01,  5.4528e-01,  2.0901e-02,  2.7898e-02,
          1.0742e-01, -1.0720e-01,  2.2068e-01,  8.6230e-02, -4.5064e-01,
         -3.6324e-01, -1.0394e-01, -1.2575e-02,  4.7654e-01, -7.0978e-02,
         -9.3890e-02, -1.0689e-01, -3.6625e-02,  8.1410e-04, -6.4190e-02,
          6.1749e-02,  3.5453e-03, -2.9909e-03, -4.7096e-01, -1.9220e-01,
          4.4350e-01, -1.1940e-01, -4.2314e-02,  2.4464e-01, -1.4001e-01,
         -1.8611e-01,  5.6045e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
343000 特征值优化 tensor(1.1201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4901, -2.2738,  0.4764, -0.6646, -0.6669,  2.7763, -1.2879,  1.1218,
         -0.3518,  1.3676, -0.1687,  0.6534,  0.5439,  0.0085,  0.0245,  0.1024,
         -0.0979,  0.2247,  0.0853, -0.4504, -0.3631, -0.1035, -0.0177,  0.4699,
         -0.0842, -0.0985, -0.1138, -0.0319,  0.0139, -0.0641,  0.0643, -0.0182,
          0.0086, -0.4703, -0.1860,  0.4414, -0.1122, -0.0394,  0.2416, -0.1416,
         -0.1981,  0.0632]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
344000 特征值优化 tensor(1.0852, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4878, -2.2757,  0.4814, -0.6683, -0.6537,  2.7702, -1.2996,  1.1118,
         -0.3734,  1.3635, -0.1773,  0.6185,  0.5424,  0.0286,  0.0357,  0.1138,
         -0.1258,  0.2038,  0.0884, -0.4489, -0.3627, -0.1039, -0.0110,  0.4866,
         -0.0471, -0.0878, -0.0999, -0.0457, -0.0226, -0.0634,  0.0636,  0.0238,
         -0.0269, -0.4697, -0.1961,  0.4468, -0.1370, -0.0503,  0.2455, -0.1377,
         -0.1582,  0.0486]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
345000 特征值优化 tensor(1.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4804, -2.2726,  0.5107, -0.7020, -0.6790,  2.7668, -1.3131,  1.1501,
         -0.3783,  1.3669, -0.1303,  0.6187,  0.5428,  0.0614,  0.0543,  0.1243,
         -0.1614,  0.1818,  0.0783, -0.4487, -0.3634, -0.1078, -0.0441,  0.5078,
         -0.0173, -0.0820, -0.0877, -0.0641, -0.0528, -0.0593,  0.0674,  0.0489,
         -0.0350, -0.4688, -0.1959,  0.4471, -0.1720, -0.0681,  0.2437, -0.1380,
         -0.1240,  0.0507]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
346000 特征值优化 tensor(1.0836, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4810, -2.2729,  0.4896, -0.6772, -0.6724,  2.7685, -1.2963,  1.1255,
         -0.3782,  1.3612, -0.1652,  0.6202,  0.5413,  0.0461,  0.0354,  0.1150,
         -0.1394,  0.2029,  0.0824, -0.4483, -0.3623, -0.1053, -0.0291,  0.4951,
         -0.0286, -0.0837, -0.0943, -0.0565, -0.0334, -0.0622,  0.0660,  0.0379,
         -0.0372, -0.4696, -0.1945,  0.4459, -0.1534, -0.0587,  0.2448, -0.1382,
         -0.1463,  0.0490]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
347000 特征值优化 tensor(1.0903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4785, -2.2705,  0.4859, -0.6732, -0.6568,  2.7678, -1.2870,  1.1106,
         -0.3812,  1.3606, -0.1883,  0.6228,  0.5409,  0.0451,  0.0325,  0.1111,
         -0.1296,  0.2056,  0.0822, -0.4481, -0.3618, -0.1046, -0.0258,  0.4906,
         -0.0352, -0.0933, -0.0960, -0.0477, -0.0286, -0.0630,  0.0640,  0.0336,
         -0.0390, -0.4699, -0.1947,  0.4461, -0.1414, -0.0515,  0.2434, -0.1384,
         -0.1575,  0.0504]], device='cuda:0') tensor(0.2120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
348000 特征值优化 tensor(1.0904, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4829, -2.2654,  0.4736, -0.6598, -0.6430,  2.7690, -1.2848,  1.1154,
         -0.3797,  1.3653, -0.1916,  0.6345,  0.5425, -0.0043, -0.0071,  0.1136,
         -0.1195,  0.2098,  0.0891, -0.4495, -0.3620, -0.1032, -0.0079,  0.4814,
         -0.0564, -0.0932, -0.1066, -0.0388, -0.0122, -0.0645,  0.0621,  0.0150,
         -0.0261, -0.4695, -0.1959,  0.4504, -0.1293, -0.0464,  0.2469, -0.1366,
         -0.1710,  0.0488]], device='cuda:0') tensor(0.2127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
349000 特征值优化 tensor(1.0834, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4816, -2.2702,  0.4892, -0.6771, -0.6628,  2.7680, -1.2869,  1.1250,
         -0.3868,  1.3594, -0.1776,  0.6291,  0.5424,  0.0210, -0.0297,  0.1154,
         -0.1367,  0.1990,  0.0879, -0.4485, -0.3626, -0.1051, -0.0270,  0.4938,
         -0.0308, -0.0879, -0.0950, -0.0548, -0.0339, -0.0624,  0.0642,  0.0360,
         -0.0383, -0.4695, -0.1941,  0.4462, -0.1501, -0.0568,  0.2464, -0.1369,
         -0.1500,  0.0478]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
350000 特征值优化 tensor(1.0870, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4884e+00, -2.2726e+00,  4.7505e-01, -6.6209e-01, -6.5013e-01,
          2.7680e+00, -1.2775e+00,  1.1168e+00, -3.9097e-01,  1.3617e+00,
         -1.9768e-01,  6.3473e-01,  5.4273e-01,  1.6045e-02,  2.3461e-03,
          1.1798e-01, -1.1573e-01,  2.1034e-01,  9.0388e-02, -4.4957e-01,
         -3.6286e-01, -1.0264e-01, -8.5675e-03,  4.8197e-01, -5.6278e-02,
         -8.6175e-02, -1.0806e-01, -3.8138e-02, -1.4885e-02, -6.4877e-02,
          6.3350e-02,  1.4052e-02, -2.1604e-02, -4.6793e-01, -1.9457e-01,
          4.5040e-01, -1.3010e-01, -4.6512e-02,  2.4694e-01, -1.3639e-01,
         -1.6637e-01,  4.7362e-02]], device='cuda:0') tensor(0.2118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
351000 特征值优化 tensor(1.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4807, -2.2738,  0.4965, -0.6861, -0.6751,  2.7667, -1.2950,  1.1413,
         -0.3948,  1.3590, -0.1696,  0.6341,  0.5424,  0.0502,  0.0444,  0.1247,
         -0.1454,  0.1906,  0.0802, -0.4484, -0.3638, -0.1057, -0.0324,  0.4959,
         -0.0284, -0.0782, -0.0902, -0.0593, -0.0392, -0.0615,  0.0666,  0.0358,
         -0.0315, -0.4694, -0.1922,  0.4477, -0.1581, -0.0601,  0.2458, -0.1370,
         -0.1378,  0.0481]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
352000 特征值优化 tensor(1.0815, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4828, -2.2745,  0.4843, -0.6715, -0.6605,  2.7680, -1.2844,  1.1317,
         -0.3951,  1.3551, -0.1863,  0.6387,  0.5423,  0.0351,  0.0373,  0.1148,
         -0.1416,  0.1949,  0.0831, -0.4484, -0.3628, -0.1043, -0.0196,  0.4872,
         -0.0379, -0.0841, -0.0984, -0.0519, -0.0263, -0.0633,  0.0646,  0.0304,
         -0.0332, -0.4699, -0.1921,  0.4467, -0.1463, -0.0548,  0.2473, -0.1364,
         -0.1498,  0.0464]], device='cuda:0') tensor(0.2097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
353000 特征值优化 tensor(6.1435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1846,  1.0765, -0.0078,  0.2969,  0.7480, -0.2742, -0.2006, -0.5994,
         -1.7115, -0.3549, -1.0765,  0.9733, -0.1566, -0.6394, -0.3689,  0.1304,
         -1.0636, -0.1999, -0.6074, -0.8227, -0.0791,  0.1644, -0.0991, -0.7946,
         -0.0231,  0.0380, -1.0379,  0.3911,  0.0087, -0.0149,  1.3052,  0.2813,
          0.0200, -1.1152, -0.7238, -0.3861, -0.1039,  0.0535, -0.3011, -0.3337,
         -0.4955,  0.2150]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
354000 特征值优化 tensor(1.1938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5832,  1.0384, -0.0900,  0.6224,  1.2012,  0.2835, -0.6322, -0.5860,
         -1.7632,  0.1698, -0.7383,  1.0301, -0.0602, -0.2217, -0.3120,  0.2665,
         -0.3143, -0.0542, -0.1416, -0.5480, -0.0390,  0.1164, -0.1531, -0.2328,
          0.0474,  0.1375, -0.2088,  0.0033,  0.0036,  0.0490,  0.6253, -0.0261,
         -0.0042, -0.3866, -0.1397, -0.1069, -0.1054,  0.0882,  0.0693, -0.1114,
         -0.0793, -0.0549]], device='cuda:0') tensor(0.2271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
355000 特征值优化 tensor(0.9697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7582,  1.1711,  0.0170,  0.6390,  1.1971,  0.0262, -0.5669, -0.6195,
         -2.1963,  0.6291, -0.6745,  0.9744, -0.0625, -0.0564, -0.2684,  0.0923,
         -0.2453, -0.1140, -0.0818, -0.5446, -0.0386,  0.1209, -0.1631, -0.2241,
         -0.0049,  0.1904, -0.0832, -0.0437, -0.0314,  0.0537,  0.4773, -0.1598,
         -0.2356, -0.2945, -0.0282, -0.0043, -0.1111,  0.0796,  0.1328, -0.0376,
         -0.0735, -0.0233]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
356000 特征值优化 tensor(0.9134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1259,  1.1884, -0.0050,  0.5896,  1.1946, -0.3367, -0.4402, -0.7035,
         -2.2112,  0.6805, -0.6122,  1.1091, -0.0643, -0.0681, -0.2444,  0.1488,
         -0.2117, -0.1746, -0.1408, -0.5450,  0.0085,  0.1208, -0.1501, -0.1476,
         -0.1443, -0.0281, -0.0723, -0.0595,  0.0810,  0.0527,  0.4503, -0.2190,
         -0.2361, -0.2594, -0.0138, -0.0680, -0.1078,  0.0821,  0.1193, -0.0673,
         -0.0833, -0.0312]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
357000 特征值优化 tensor(0.9549, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2984,  1.3534, -0.0407,  0.5645,  1.2398, -0.3395, -0.4300, -0.7182,
         -2.1863,  0.6043, -0.6193,  1.0368, -0.0586, -0.0860, -0.2900,  0.1621,
         -0.2047, -0.1786, -0.1574, -0.5588,  0.0138,  0.1185, -0.1116, -0.1725,
         -0.0327, -0.0100, -0.0679, -0.1155,  0.0191,  0.0511,  0.4579, -0.2131,
         -0.2284, -0.2602, -0.0389, -0.0125, -0.1103,  0.0858,  0.1105, -0.0915,
         -0.0882, -0.0238]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
358000 特征值优化 tensor(0.9354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4734,  1.5323, -0.0444,  0.5540,  1.2521, -0.3435, -0.4522, -0.7166,
         -2.1731,  0.5847, -0.6177,  1.0231, -0.0638, -0.0959, -0.3186,  0.1630,
         -0.2041, -0.1756, -0.1651, -0.5719,  0.0097,  0.1177, -0.1288, -0.1724,
         -0.0354,  0.0387, -0.0679, -0.1054, -0.0138,  0.0499,  0.4581, -0.2270,
         -0.2288, -0.2640, -0.0516,  0.0094, -0.1156,  0.0840,  0.1130, -0.0979,
         -0.0838, -0.0222]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
359000 特征值优化 tensor(0.9315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.6362e+00,  1.7021e+00, -4.8974e-02,  5.4397e-01,  1.2536e+00,
         -3.4635e-01, -4.5057e-01, -7.2243e-01, -2.1978e+00,  5.5309e-01,
         -6.2754e-01,  9.9725e-01, -7.8707e-02, -1.1350e-01, -2.9349e-01,
          1.7095e-01, -2.0002e-01, -2.0454e-01, -1.4956e-01, -5.8500e-01,
         -6.8176e-03,  1.1832e-01, -1.3020e-01, -1.8069e-01, -5.9973e-02,
         -2.8833e-03, -8.9262e-02, -7.2886e-02,  3.1176e-02,  5.0950e-02,
          4.5821e-01, -2.1601e-01, -2.4318e-01, -2.6107e-01, -3.6523e-02,
         -2.6383e-02, -9.8703e-02,  8.1366e-02,  1.1259e-01, -1.0086e-01,
         -9.3678e-02, -1.9973e-02]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
360000 特征值优化 tensor(0.9180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.7709,  1.8325, -0.0279,  0.5696,  1.2303, -0.3556, -0.4661, -0.7237,
         -2.1965,  0.5590, -0.6091,  1.0350, -0.0762, -0.1126, -0.2897,  0.1543,
         -0.2382, -0.1697, -0.1739, -0.6142, -0.0039,  0.1201, -0.0833, -0.1994,
         -0.0062,  0.0539, -0.0508, -0.0968, -0.0406,  0.0522,  0.4551, -0.2194,
         -0.2323, -0.2620, -0.0508,  0.0405, -0.1175,  0.0772,  0.1141, -0.1158,
         -0.0702, -0.0287]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
361000 特征值优化 tensor(0.9187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.9432,  1.9888, -0.0206,  0.5745,  1.2345, -0.3524, -0.4446, -0.7234,
         -2.1850,  0.5411, -0.6247,  1.0572, -0.0826, -0.1206, -0.3070,  0.1903,
         -0.1974, -0.2257, -0.1571, -0.6337, -0.0079,  0.1193, -0.1907, -0.1625,
         -0.0825, -0.0187, -0.0728, -0.0703,  0.0534,  0.0517,  0.4557, -0.2018,
         -0.2453, -0.2625, -0.0365, -0.0460, -0.0934,  0.0793,  0.1129, -0.1097,
         -0.0942, -0.0304]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
362000 特征值优化 tensor(1.0118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1143,  2.1667, -0.0104,  0.5882,  1.2264, -0.3520, -0.4576, -0.7177,
         -2.2149,  0.5572, -0.5987,  1.0440, -0.0782, -0.1338, -0.3044,  0.1631,
         -0.2497, -0.1809, -0.1850, -0.6522, -0.0043,  0.1196, -0.1274, -0.1974,
          0.0084,  0.0696, -0.1034, -0.0334, -0.0428,  0.0534,  0.4536, -0.2114,
         -0.2348, -0.2619, -0.0415,  0.0413, -0.1136,  0.0794,  0.1125, -0.1047,
         -0.0692, -0.0332]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
363000 特征值优化 tensor(0.9470, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2753e+00,  2.3399e+00, -4.9746e-02,  5.4529e-01,  1.2221e+00,
         -3.2908e-01, -4.4475e-01, -7.1113e-01, -2.1567e+00,  5.2062e-01,
         -6.1011e-01,  1.0226e+00, -7.1015e-02, -1.3825e-01, -3.2063e-01,
          1.7931e-01, -2.2019e-01, -2.1795e-01, -1.9108e-01, -6.7453e-01,
         -6.6199e-04,  1.1641e-01, -1.4663e-01, -1.7739e-01, -4.5046e-02,
          1.5726e-02, -7.5348e-02, -9.3509e-02,  3.6273e-03,  4.8547e-02,
          4.5413e-01, -2.0520e-01, -2.3244e-01, -2.6453e-01, -6.1609e-02,
         -2.3650e-03, -1.1047e-01,  8.3325e-02,  1.1312e-01, -1.1029e-01,
         -8.4246e-02, -2.7336e-02]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
364000 特征值优化 tensor(0.9197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4397,  2.4783, -0.0268,  0.5653,  1.2328, -0.3509, -0.4517, -0.7227,
         -2.1911,  0.5321, -0.6247,  1.0462, -0.0830, -0.1454, -0.3175,  0.2059,
         -0.2142, -0.2357, -0.1625, -0.6805, -0.0063,  0.1185, -0.1999, -0.1428,
         -0.0695, -0.0049, -0.0687, -0.0701,  0.0428,  0.0504,  0.4553, -0.1986,
         -0.2456, -0.2630, -0.0369, -0.0397, -0.0956,  0.0795,  0.1145, -0.1132,
         -0.0932, -0.0302]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
365000 特征值优化 tensor(0.9677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5882e+00,  2.6220e+00, -3.8087e-02,  5.5635e-01,  1.2271e+00,
         -3.2531e-01, -4.4229e-01, -7.1500e-01, -2.1909e+00,  5.2671e-01,
         -5.9061e-01,  1.0229e+00, -1.0202e-01, -1.5653e-01, -3.1316e-01,
          1.8187e-01, -2.4959e-01, -2.0700e-01, -1.8223e-01, -6.9580e-01,
         -2.3214e-02,  1.1863e-01, -1.4246e-01, -1.5730e-01, -2.1925e-03,
          5.6760e-02, -1.0252e-01, -5.7927e-02, -2.1788e-02,  5.0726e-02,
          4.5623e-01, -1.9985e-01, -2.3364e-01, -2.6202e-01, -3.4686e-02,
          1.0605e-02, -1.0642e-01,  8.1076e-02,  1.1276e-01, -1.0826e-01,
         -7.9255e-02, -2.8317e-02]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
366000 特征值优化 tensor(0.9381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7184e+00,  2.7800e+00, -4.8237e-02,  5.4252e-01,  1.2214e+00,
         -3.3073e-01, -4.5392e-01, -7.1115e-01, -2.1644e+00,  5.1853e-01,
         -6.0811e-01,  1.0260e+00, -1.0209e-01, -1.6036e-01, -3.4484e-01,
          1.8390e-01, -2.3023e-01, -2.2035e-01, -2.0858e-01, -7.0357e-01,
         -2.9163e-02,  1.1717e-01, -1.4056e-01, -1.8206e-01, -4.1320e-02,
          1.7519e-02, -7.2911e-02, -1.0323e-01, -2.2248e-03,  4.9145e-02,
          4.5372e-01, -2.0677e-01, -2.3062e-01, -2.6496e-01, -5.9905e-02,
          3.9836e-03, -1.1143e-01,  8.2890e-02,  1.1317e-01, -1.1003e-01,
         -8.3587e-02, -2.7386e-02]], device='cuda:0') tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
367000 特征值优化 tensor(0.9224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8560,  2.8923, -0.0335,  0.5585,  1.2380, -0.3437, -0.4520, -0.7209,
         -2.1916,  0.5364, -0.6220,  1.0474, -0.1061, -0.1663, -0.3388,  0.2203,
         -0.2210, -0.2496, -0.1759, -0.7203, -0.0293,  0.1177, -0.1890, -0.1688,
         -0.0650, -0.0099, -0.0697, -0.0700,  0.0457,  0.0503,  0.4561, -0.1950,
         -0.2442, -0.2670, -0.0406, -0.0428, -0.0948,  0.0807,  0.1125, -0.1069,
         -0.0954, -0.0283]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
368000 特征值优化 tensor(0.9107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.9915e+00,  2.9762e+00, -1.2560e-02,  5.8393e-01,  1.2207e+00,
         -3.5228e-01, -4.7152e-01, -7.2653e-01, -2.2095e+00,  5.5393e-01,
         -5.9981e-01,  1.0514e+00, -1.2787e-01, -1.6671e-01, -3.4272e-01,
          1.7108e-01, -2.6953e-01, -2.0872e-01, -2.2057e-01, -7.4063e-01,
         -4.3889e-02,  1.1981e-01, -1.3648e-01, -1.8271e-01,  4.5236e-03,
          6.9002e-02, -7.2249e-02, -7.7375e-02, -4.1139e-02,  5.1887e-02,
          4.5359e-01, -2.1750e-01, -2.3325e-01, -2.6346e-01, -4.7347e-02,
          4.4586e-02, -1.1764e-01,  7.5733e-02,  1.1532e-01, -1.1091e-01,
         -6.8875e-02, -2.9589e-02]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
369000 特征值优化 tensor(0.9610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.0765,  3.1142, -0.0431,  0.5520,  1.2268, -0.3239, -0.4412, -0.7137,
         -2.1677,  0.5200, -0.5994,  1.0317, -0.1043, -0.1743, -0.3279,  0.1987,
         -0.2426, -0.2446, -0.1900, -0.7434, -0.0278,  0.1171, -0.1547, -0.1694,
         -0.0574,  0.0053, -0.0767, -0.0857,  0.0176,  0.0502,  0.4559, -0.2053,
         -0.2333, -0.2644, -0.0634, -0.0136, -0.1038,  0.0832,  0.1156, -0.1059,
         -0.0849, -0.0287]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
370000 特征值优化 tensor(0.9207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.1787e+00,  3.2185e+00, -3.2547e-02,  5.5763e-01,  1.2250e+00,
         -3.4405e-01, -4.5818e-01, -7.2155e-01, -2.1912e+00,  5.2322e-01,
         -6.2043e-01,  1.0377e+00, -1.1282e-01, -1.7695e-01, -3.4191e-01,
          2.2133e-01, -2.3085e-01, -2.5232e-01, -1.8181e-01, -7.4683e-01,
         -3.6534e-02,  1.1796e-01, -1.9928e-01, -1.4895e-01, -5.6812e-02,
         -1.1004e-04, -6.7777e-02, -7.0205e-02,  3.6780e-02,  4.9911e-02,
          4.5468e-01, -1.9817e-01, -2.4409e-01, -2.6561e-01, -3.8753e-02,
         -3.4766e-02, -9.5339e-02,  8.0262e-02,  1.1459e-01, -1.1151e-01,
         -9.4327e-02, -2.9208e-02]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
371000 特征值优化 tensor(1.0074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.2741,  3.3051, -0.0184,  0.5744,  1.2171, -0.3573, -0.4638, -0.7228,
         -2.2034,  0.5480, -0.5920,  1.0445, -0.1133, -0.1802, -0.3445,  0.1781,
         -0.2789, -0.2076, -0.2210, -0.7604, -0.0359,  0.1197, -0.1349, -0.1897,
          0.0087,  0.0713, -0.1025, -0.0369, -0.0450,  0.0514,  0.4526, -0.2079,
         -0.2369, -0.2613, -0.0429,  0.0386, -0.1119,  0.0786,  0.1127, -0.1060,
         -0.0711, -0.0333]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
372000 特征值优化 tensor(0.9310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.3499,  3.4097, -0.0495,  0.5362,  1.2239, -0.3422, -0.4684, -0.7115,
         -2.1631,  0.5087, -0.6026,  1.0180, -0.1088, -0.1859, -0.3464,  0.1951,
         -0.2620, -0.2312, -0.2180, -0.7585, -0.0345,  0.1187, -0.1341, -0.1756,
         -0.0262,  0.0308, -0.0654, -0.0873, -0.0159,  0.0509,  0.4538, -0.2105,
         -0.2358, -0.2672, -0.0643,  0.0125, -0.1121,  0.0806,  0.1124, -0.1135,
         -0.0802, -0.0274]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
373000 特征值优化 tensor(0.9164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.4444,  3.4819, -0.0237,  0.5674,  1.2171, -0.3540, -0.4573, -0.7240,
         -2.1969,  0.5423, -0.6173,  1.0539, -0.1164, -0.1839, -0.3474,  0.2272,
         -0.2302, -0.2652, -0.1833, -0.7684, -0.0391,  0.1190, -0.1988, -0.1661,
         -0.0736, -0.0200, -0.0502, -0.0741,  0.0504,  0.0512,  0.4536, -0.1978,
         -0.2446, -0.2667, -0.0307, -0.0428, -0.0917,  0.0799,  0.1151, -0.1095,
         -0.0975, -0.0294]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
374000 特征值优化 tensor(0.9405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.5228e+00,  3.5739e+00, -5.6143e-02,  5.3662e-01,  1.2282e+00,
         -3.2828e-01, -4.6121e-01, -7.1237e-01, -2.1917e+00,  5.0028e-01,
         -6.0361e-01,  1.0088e+00, -1.1035e-01, -1.8839e-01, -3.3358e-01,
          2.1248e-01, -2.6448e-01, -2.4672e-01, -2.0545e-01, -7.7441e-01,
         -3.5075e-02,  1.1837e-01, -1.7956e-01, -1.3459e-01, -1.4708e-02,
          3.5851e-02, -1.0226e-01, -5.6951e-02,  5.8992e-04,  5.0055e-02,
          4.5469e-01, -1.9230e-01, -2.4209e-01, -2.6457e-01, -3.2440e-02,
         -1.3810e-02, -1.0298e-01,  8.2109e-02,  1.1311e-01, -1.0971e-01,
         -8.9039e-02, -2.5770e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
375000 特征值优化 tensor(0.9132, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.6063,  3.6586, -0.0254,  0.5681,  1.2144, -0.3601, -0.4795, -0.7204,
         -2.1942,  0.5297, -0.5929,  1.0374, -0.1081, -0.1914, -0.3550,  0.1812,
         -0.2882, -0.2131, -0.2393, -0.7821, -0.0337,  0.1186, -0.1390, -0.1910,
          0.0143,  0.0750, -0.0959, -0.0382, -0.0485,  0.0508,  0.4527, -0.2148,
         -0.2347, -0.2688, -0.0539,  0.0412, -0.1178,  0.0771,  0.1124, -0.1121,
         -0.0706, -0.0287]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
376000 特征值优化 tensor(0.9312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.6758,  3.7434, -0.0462,  0.5411,  1.2228, -0.3323, -0.4689, -0.7103,
         -2.1674,  0.5057, -0.6002,  1.0267, -0.0985, -0.1875, -0.3504,  0.2060,
         -0.2613, -0.2531, -0.2266, -0.8082, -0.0266,  0.1167, -0.1380, -0.1782,
         -0.0340,  0.0254, -0.0668, -0.0887, -0.0104,  0.0489,  0.4538, -0.2069,
         -0.2357, -0.2647, -0.0623,  0.0131, -0.1108,  0.0818,  0.1126, -0.1127,
         -0.0821, -0.0282]], device='cuda:0') tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
377000 特征值优化 tensor(0.9787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.7700e+00,  3.8103e+00, -3.6797e-02,  5.5278e-01,  1.2265e+00,
         -3.2585e-01, -4.4959e-01, -7.1282e-01, -2.1936e+00,  5.1052e-01,
         -5.9325e-01,  1.0466e+00, -1.3099e-01, -2.0068e-01, -3.5292e-01,
          2.1703e-01, -2.4546e-01, -2.6629e-01, -2.0296e-01, -8.0102e-01,
         -5.6456e-02,  1.1660e-01, -1.6842e-01, -1.5686e-01, -7.5823e-02,
         -1.7048e-03, -6.0416e-02, -9.4526e-02,  3.7455e-02,  5.0262e-02,
          4.5551e-01, -2.0091e-01, -2.3192e-01, -2.6256e-01, -5.6366e-02,
         -2.4473e-02, -9.9610e-02,  8.2617e-02,  1.1284e-01, -1.0519e-01,
         -8.9221e-02, -3.0613e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
378000 特征值优化 tensor(0.9196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.8418e+00,  3.8952e+00, -4.4992e-02,  5.4713e-01,  1.2239e+00,
         -3.4554e-01, -4.6729e-01, -7.1917e-01, -2.2285e+00,  4.8437e-01,
         -6.1157e-01,  1.0531e+00, -1.0749e-01, -1.9994e-01, -3.5895e-01,
          2.3539e-01, -2.5159e-01, -2.6317e-01, -1.9769e-01, -8.0160e-01,
         -3.2710e-02,  1.1725e-01, -1.7756e-01, -1.5277e-01, -5.6659e-02,
         -5.7228e-03, -1.1457e-01, -4.2329e-02,  3.1732e-02,  4.9788e-02,
          4.5431e-01, -1.9506e-01, -2.4529e-01, -2.6257e-01, -3.6073e-02,
         -3.5405e-02, -9.5104e-02,  8.0797e-02,  1.1964e-01, -1.0311e-01,
         -9.5333e-02, -2.9865e-02]], device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
379000 特征值优化 tensor(0.9210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.9190e+00,  3.9625e+00, -4.1766e-02,  5.4866e-01,  1.2222e+00,
         -3.5100e-01, -4.6671e-01, -7.2141e-01, -2.2186e+00,  4.4011e-01,
         -6.1178e-01,  1.0611e+00, -1.0576e-01, -2.0073e-01, -3.6370e-01,
          2.3902e-01, -2.4578e-01, -2.6680e-01, -1.9523e-01, -8.0911e-01,
         -2.9822e-02,  1.1837e-01, -1.5893e-01, -1.5992e-01, -6.0572e-02,
         -5.8910e-03, -1.0080e-01, -6.0978e-02,  3.5481e-02,  5.0759e-02,
          4.5356e-01, -1.9490e-01, -2.4590e-01, -2.6144e-01, -4.1857e-02,
         -3.5756e-02, -9.6069e-02,  8.0192e-02,  1.1989e-01, -1.0599e-01,
         -9.4070e-02, -3.3447e-02]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
380000 特征值优化 tensor(0.9455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.9861e+00,  4.0350e+00, -5.2329e-02,  5.3865e-01,  1.2287e+00,
         -3.2236e-01, -4.6032e-01, -7.1629e-01, -2.2222e+00,  4.0617e-01,
         -5.9587e-01,  1.0505e+00, -1.0713e-01, -2.0768e-01, -3.5070e-01,
          2.1548e-01, -2.8270e-01, -2.3815e-01, -2.0821e-01, -8.1557e-01,
         -2.8907e-02,  1.1765e-01, -1.6834e-01, -1.3620e-01, -2.1722e-02,
          3.3337e-02, -5.8131e-02, -1.0361e-01, -8.7909e-03,  4.9494e-02,
          4.5489e-01, -1.9284e-01, -2.4112e-01, -2.6379e-01, -2.8529e-02,
         -4.3234e-03, -1.0337e-01,  8.2202e-02,  1.2122e-01, -1.0475e-01,
         -8.7817e-02, -3.3442e-02]], device='cuda:0') tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
381000 特征值优化 tensor(0.9075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.0633,  4.1050, -0.0121,  0.5849,  1.2130, -0.3497, -0.4836, -0.7205,
         -2.2618,  0.4208, -0.5913,  1.1017, -0.1064, -0.2091, -0.3718,  0.1830,
         -0.3117, -0.2033, -0.2557, -0.8206, -0.0301,  0.1215, -0.1701, -0.1363,
          0.0297,  0.0946, -0.0274, -0.1249, -0.0599,  0.0533,  0.4530, -0.2139,
         -0.2350, -0.2614, -0.0407,  0.0531, -0.1209,  0.0774,  0.1250, -0.0962,
         -0.0680, -0.0365]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
382000 特征值优化 tensor(0.9227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.1323,  4.1848, -0.0430,  0.5500,  1.2186, -0.3518, -0.4748, -0.7162,
         -2.2348,  0.3509, -0.5932,  1.0704, -0.1073, -0.2121, -0.3702,  0.2011,
         -0.2886, -0.2352, -0.2418, -0.8234, -0.0298,  0.1189, -0.1669, -0.1294,
          0.0098,  0.0595, -0.0792, -0.0731, -0.0361,  0.0511,  0.4535, -0.2144,
         -0.2353, -0.2653, -0.0522,  0.0298, -0.1155,  0.0798,  0.1237, -0.0978,
         -0.0760, -0.0363]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
383000 特征值优化 tensor(0.9121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.2182,  4.2444, -0.0162,  0.5810,  1.2174, -0.3492, -0.4599, -0.7215,
         -2.2776,  0.3377, -0.6136,  1.1222, -0.1152, -0.2091, -0.3689,  0.2445,
         -0.2342, -0.2964, -0.1998, -0.8354, -0.0372,  0.1214, -0.1842, -0.1001,
         -0.0721, -0.0156, -0.1391, -0.0191,  0.0591,  0.0535,  0.4535, -0.1968,
         -0.2446, -0.2608, -0.0294, -0.0529, -0.0920,  0.0805,  0.1285, -0.0974,
         -0.0972, -0.0438]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
384000 特征值优化 tensor(0.9474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.2766e+00,  4.3346e+00, -5.5047e-02,  5.4946e-01,  1.2418e+00,
         -3.2440e-01, -4.6277e-01, -7.1634e-01, -2.2527e+00,  2.6709e-01,
         -5.9015e-01,  1.0888e+00, -1.6845e-01, -2.2056e-01, -3.6820e-01,
          2.2293e-01, -2.8178e-01, -2.4212e-01, -2.1130e-01, -8.3915e-01,
         -9.4075e-02,  1.1706e-01, -1.7954e-01, -1.2545e-01,  7.7835e-03,
          3.1824e-02, -8.0820e-02, -7.7563e-02, -1.0214e-02,  5.0409e-02,
          4.5648e-01, -1.9132e-01, -2.4239e-01, -2.6360e-01, -3.8367e-02,
          3.7570e-04, -1.0475e-01,  8.2553e-02,  1.2902e-01, -9.8055e-02,
         -8.6725e-02, -4.3918e-02]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
385000 特征值优化 tensor(0.9207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.3556,  4.3837, -0.0420,  0.5516,  1.2296, -0.3407, -0.4759, -0.7174,
         -2.2575,  0.2305, -0.5893,  1.0971, -0.1811, -0.2209, -0.3839,  0.2102,
         -0.2923, -0.2361, -0.2371, -0.8554, -0.1011,  0.1189, -0.1367, -0.1701,
          0.0079,  0.0586, -0.0740, -0.0852, -0.0360,  0.0506,  0.4551, -0.2112,
         -0.2376, -0.2616, -0.0517,  0.0324, -0.1148,  0.0803,  0.1323, -0.0853,
         -0.0770, -0.0412]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
386000 特征值优化 tensor(0.9105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.4236,  4.4374, -0.0189,  0.5788,  1.2307, -0.3469, -0.4638, -0.7235,
         -2.2868,  0.1763, -0.6041,  1.1305, -0.1795, -0.2153, -0.3786,  0.2445,
         -0.2547, -0.2798, -0.2005, -0.8626, -0.1003,  0.1203, -0.1935, -0.1162,
         -0.0560, -0.0114, -0.1354, -0.0274,  0.0471,  0.0527,  0.4552, -0.1963,
         -0.2474, -0.2609, -0.0390, -0.0440, -0.0939,  0.0798,  0.1381, -0.0935,
         -0.0939, -0.0529]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
387000 特征值优化 tensor(0.9322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.4687,  4.5222, -0.0547,  0.5344,  1.2307, -0.3427, -0.4700, -0.7179,
         -2.2539,  0.1247, -0.6070,  1.0846, -0.1169, -0.2201, -0.3637,  0.2346,
         -0.2760, -0.2685, -0.2165, -0.8508, -0.0378,  0.1189, -0.1822, -0.1201,
         -0.0179,  0.0122, -0.1024, -0.0667,  0.0127,  0.0509,  0.4549, -0.1911,
         -0.2442, -0.2633, -0.0507, -0.0147, -0.1000,  0.0816,  0.1359, -0.0932,
         -0.0929, -0.0502]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
388000 特征值优化 tensor(0.9165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.5360,  4.5876, -0.0289,  0.5670,  1.2144, -0.3491, -0.4822, -0.7245,
         -2.2844,  0.1282, -0.5902,  1.1208, -0.1018, -0.2241, -0.3794,  0.2017,
         -0.2945, -0.2395, -0.2479, -0.8552, -0.0233,  0.1183, -0.1394, -0.1640,
          0.0231,  0.0592, -0.0820, -0.0761, -0.0426,  0.0507,  0.4530, -0.2152,
         -0.2352, -0.2657, -0.0356,  0.0391, -0.1183,  0.0793,  0.1353, -0.0786,
         -0.0738, -0.0459]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
389000 特征值优化 tensor(0.9222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.5962,  4.6464, -0.0441,  0.5464,  1.2203, -0.3505, -0.4761, -0.7113,
         -2.2789,  0.1172, -0.5890,  1.1023, -0.1086, -0.2266, -0.3750,  0.2150,
         -0.2965, -0.2491, -0.2379, -0.8605, -0.0309,  0.1191, -0.1352, -0.1715,
          0.0159,  0.0470, -0.0808, -0.0836, -0.0298,  0.0514,  0.4532, -0.2111,
         -0.2372, -0.2616, -0.0468,  0.0320, -0.1141,  0.0808,  0.1371, -0.0795,
         -0.0776, -0.0457]], device='cuda:0') tensor(0.2161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
390000 特征值优化 tensor(0.9370, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.6581,  4.7111, -0.0550,  0.5380,  1.2221, -0.3365, -0.4693, -0.7106,
         -2.2673,  0.0691, -0.5947,  1.1014, -0.1003, -0.2289, -0.3683,  0.2272,
         -0.2863, -0.2674, -0.2315, -0.8635, -0.0202,  0.1184, -0.1619, -0.1464,
         -0.0142,  0.0234, -0.0949, -0.0753, -0.0114,  0.0499,  0.4537, -0.2041,
         -0.2347, -0.2672, -0.0506,  0.0159, -0.1129,  0.0836,  0.1377, -0.0802,
         -0.0841, -0.0496]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
391000 特征值优化 tensor(0.9168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.7249,  4.7681, -0.0276,  0.5624,  1.2145, -0.3563, -0.4655, -0.7213,
         -2.2619,  0.0400, -0.6164,  1.1185, -0.1027, -0.2254, -0.3802,  0.2572,
         -0.2515, -0.2951, -0.2087, -0.8699, -0.0267,  0.1188, -0.1863, -0.1357,
         -0.0475, -0.0267, -0.1071, -0.0596,  0.0449,  0.0510,  0.4532, -0.1954,
         -0.2449, -0.2646, -0.0690, -0.0408, -0.0924,  0.0803,  0.1434, -0.0894,
         -0.0979, -0.0591]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
392000 特征值优化 tensor(1.0153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.7911,  4.8180, -0.0145,  0.5812,  1.2223, -0.3467, -0.4639, -0.7196,
         -2.2939,  0.0423, -0.6087,  1.1359, -0.1063, -0.2254, -0.3794,  0.2576,
         -0.2411, -0.3038, -0.2013, -0.8785, -0.0275,  0.1209, -0.1381, -0.1862,
         -0.1043, -0.0296, -0.1028, -0.0604,  0.0562,  0.0529,  0.4542, -0.1989,
         -0.2410, -0.2598, -0.0396, -0.0390, -0.0948,  0.0815,  0.1434, -0.0826,
         -0.0935, -0.0599]], device='cuda:0') tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
393000 特征值优化 tensor(0.9923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.8452,  4.8875, -0.0168,  0.5750,  1.2158, -0.3416, -0.4635, -0.7170,
         -2.2900,  0.0872, -0.6045,  1.1267, -0.1033, -0.2335, -0.3766,  0.2527,
         -0.2572, -0.2926, -0.2033, -0.8839, -0.0284,  0.1194, -0.2001, -0.1531,
         -0.0627, -0.0070, -0.0450, -0.0905,  0.0397,  0.0526,  0.4532, -0.1989,
         -0.2345, -0.2591, -0.0389, -0.0254, -0.0976,  0.0819,  0.1421, -0.0842,
         -0.0905, -0.0590]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
394000 特征值优化 tensor(0.9197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.9032,  4.9504, -0.0348,  0.5556,  1.2156, -0.3532, -0.4699, -0.7199,
         -2.2508,  0.1186, -0.6117,  1.1112, -0.1046, -0.2334, -0.3798,  0.2532,
         -0.2649, -0.2952, -0.2157, -0.8821, -0.0281,  0.1175, -0.1928, -0.1675,
         -0.0469, -0.0195, -0.0565, -0.0785,  0.0402,  0.0498,  0.4529, -0.1950,
         -0.2461, -0.2652, -0.0583, -0.0333, -0.0935,  0.0804,  0.1374, -0.0941,
         -0.0971, -0.0553]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
395000 特征值优化 tensor(0.9228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.9652,  5.0128, -0.0418,  0.5479,  1.2171, -0.3537, -0.4718, -0.7167,
         -2.2486,  0.1810, -0.6076,  1.1023, -0.1023, -0.2331, -0.3786,  0.2548,
         -0.2672, -0.2959, -0.2210, -0.8862, -0.0265,  0.1167, -0.1969, -0.1613,
         -0.0547, -0.0122, -0.0691, -0.0669,  0.0385,  0.0489,  0.4533, -0.1949,
         -0.2454, -0.2655, -0.0515, -0.0328, -0.0943,  0.0806,  0.1341, -0.0955,
         -0.0963, -0.0495]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
396000 特征值优化 tensor(0.9351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.0216,  5.0761, -0.0554,  0.5313,  1.2303, -0.3402, -0.4717, -0.7147,
         -2.2453,  0.2140, -0.6038,  1.0765, -0.1012, -0.2375, -0.3693,  0.2401,
         -0.2878, -0.2874, -0.2307, -0.8903, -0.0266,  0.1192, -0.1696, -0.1551,
         -0.0300,  0.0139, -0.0810, -0.0716,  0.0172,  0.0514,  0.4549, -0.1902,
         -0.2440, -0.2657, -0.0534, -0.0219, -0.0996,  0.0816,  0.1302, -0.0934,
         -0.0927, -0.0432]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
397000 特征值优化 tensor(0.9070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.0912e+00,  5.1245e+00, -2.0064e-02,  5.7669e-01,  1.2141e+00,
         -3.5942e-01, -4.8663e-01, -7.2501e-01, -2.2854e+00,  3.0390e-01,
         -5.9120e-01,  1.1107e+00, -1.0633e-01, -2.3513e-01, -3.9217e-01,
          2.0819e-01, -3.1299e-01, -2.5164e-01, -2.7391e-01, -8.9706e-01,
         -2.9597e-02,  1.1977e-01, -1.1290e-01, -2.1108e-01,  2.7921e-03,
          5.8007e-02, -1.0380e-01, -3.8379e-02, -3.6659e-02,  5.2101e-02,
          4.5261e-01, -2.1473e-01, -2.3550e-01, -2.6768e-01, -3.8620e-02,
          4.2292e-02, -1.1615e-01,  7.6722e-02,  1.3021e-01, -9.9609e-02,
         -7.1940e-02, -4.5186e-02]], device='cuda:0') tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
398000 特征值优化 tensor(0.9397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.1402e+00,  5.1963e+00, -5.3616e-02,  5.3845e-01,  1.2194e+00,
         -3.3026e-01, -4.6679e-01, -7.1408e-01, -2.2251e+00,  2.9505e-01,
         -5.9182e-01,  1.0753e+00, -1.0346e-01, -2.4324e-01, -3.8467e-01,
          2.3642e-01, -2.8162e-01, -2.9108e-01, -2.4177e-01, -8.9730e-01,
         -2.7932e-02,  1.1681e-01, -1.4127e-01, -1.7668e-01, -3.3466e-02,
          8.7118e-03, -7.1171e-02, -9.7416e-02,  3.3479e-03,  4.9399e-02,
          4.5341e-01, -2.0024e-01, -2.3255e-01, -2.6731e-01, -5.6943e-02,
          4.1466e-03, -1.0895e-01,  8.2580e-02,  1.2739e-01, -9.9919e-02,
         -8.5001e-02, -4.1065e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
399000 特征值优化 tensor(0.9115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.2051,  5.2449, -0.0112,  0.5809,  1.2159, -0.3542, -0.4657, -0.7230,
         -2.2488,  0.3431, -0.6129,  1.1129, -0.1079, -0.2332, -0.3884,  0.2701,
         -0.2437, -0.3216, -0.2115, -0.9036, -0.0310,  0.1194, -0.2059, -0.1725,
         -0.0937, -0.0404, -0.0514, -0.0767,  0.0602,  0.0518,  0.4531, -0.1950,
         -0.2452, -0.2652, -0.0384, -0.0461, -0.0908,  0.0796,  0.1271, -0.0996,
         -0.0986, -0.0426]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
400000 特征值优化 tensor(0.9202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.2543e+00,  5.3071e+00, -3.6115e-02,  5.5303e-01,  1.2183e+00,
         -3.5447e-01, -4.6913e-01, -7.1971e-01, -2.2325e+00,  3.3909e-01,
         -6.1108e-01,  1.0816e+00, -1.0676e-01, -2.4265e-01, -3.9125e-01,
          2.6306e-01, -2.7278e-01, -2.9891e-01, -2.2286e-01, -9.0589e-01,
         -3.1466e-02,  1.1724e-01, -1.9823e-01, -1.5842e-01, -6.0691e-02,
         -6.9973e-03, -6.8994e-02, -6.3483e-02,  3.9027e-02,  4.9412e-02,
          4.5324e-01, -1.9520e-01, -2.4541e-01, -2.6504e-01, -4.4226e-02,
         -3.3021e-02, -9.3522e-02,  8.0212e-02,  1.2620e-01, -1.0404e-01,
         -9.6699e-02, -4.0683e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
401000 特征值优化 tensor(0.9534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.3024e+00,  5.3671e+00, -5.1218e-02,  5.4338e-01,  1.2272e+00,
         -3.2739e-01, -4.6120e-01, -7.1040e-01, -2.2281e+00,  3.5060e-01,
         -5.8640e-01,  1.0549e+00, -1.0503e-01, -2.4873e-01, -3.7553e-01,
          2.2942e-01, -3.0448e-01, -2.7467e-01, -2.4131e-01, -9.1727e-01,
         -3.3437e-02,  1.1705e-01, -1.4772e-01, -1.5430e-01, -8.2482e-03,
          4.1408e-02, -9.9423e-02, -6.1328e-02, -9.9081e-03,  4.8970e-02,
          4.5428e-01, -1.9404e-01, -2.3936e-01, -2.6426e-01, -4.4457e-02,
         -4.8356e-04, -1.0411e-01,  8.2349e-02,  1.2479e-01, -1.0278e-01,
         -8.6831e-02, -3.6300e-02]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
402000 特征值优化 tensor(0.9155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.3612,  5.4165, -0.0306,  0.5607,  1.2152, -0.3578, -0.4837, -0.7170,
         -2.2320,  0.3875, -0.5923,  1.0640, -0.1073, -0.2441, -0.3896,  0.2221,
         -0.3171, -0.2568, -0.2675, -0.9124, -0.0324,  0.1184, -0.1357, -0.1830,
          0.0105,  0.0590, -0.0828, -0.0645, -0.0416,  0.0505,  0.4528, -0.2139,
         -0.2352, -0.2692, -0.0506,  0.0394, -0.1167,  0.0778,  0.1238, -0.1053,
         -0.0726, -0.0362]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
403000 特征值优化 tensor(0.9741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.4126,  5.4636, -0.0315,  0.5623,  1.2171, -0.3269, -0.4509, -0.7118,
         -2.2073,  0.3937, -0.5942,  1.0728, -0.1085, -0.2537, -0.3840,  0.2512,
         -0.2734, -0.3130, -0.2251, -0.9233, -0.0364,  0.1180, -0.1622, -0.1674,
         -0.0607, -0.0177, -0.0616, -0.0995,  0.0335,  0.0512,  0.4548, -0.2013,
         -0.2332, -0.2646, -0.0587, -0.0223, -0.1002,  0.0832,  0.1241, -0.1006,
         -0.0879, -0.0384]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
404000 特征值优化 tensor(3.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8871e+00, -7.0480e-01,  2.3758e-01, -2.2743e-01,  1.6891e+00,
         -1.6743e-01,  1.8002e+00,  1.6798e+00,  4.2523e-01, -8.3529e-01,
         -7.8979e-01, -1.8613e-01,  8.9831e-02, -9.7815e-01, -1.9819e-01,
         -8.5441e-01, -4.5699e-01,  1.1712e-01, -5.4586e-01, -6.3847e-01,
         -5.6635e-01, -1.7185e-01, -1.4493e-01, -1.5899e-01, -1.6159e-01,
         -1.3287e-01,  3.7734e-02, -3.3079e-01, -2.1063e-03, -4.1718e-02,
          9.1887e-01, -2.9208e-01,  2.2452e-01,  9.7352e-02, -4.1449e-02,
         -9.5977e-02, -5.3632e-01, -9.1643e-01, -1.3104e-01,  2.7511e-04,
         -3.7842e-01,  1.1384e-01]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
405000 特征值优化 tensor(1.1946, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7194e+00, -7.8865e-01,  8.5185e-02, -3.0329e-01,  1.9590e+00,
         -2.8949e-01,  2.2647e+00,  2.4147e+00,  4.4418e-01, -1.2261e+00,
         -7.3837e-01, -5.4683e-01,  1.1678e-01, -6.9014e-01, -2.4822e-01,
         -6.0422e-01, -3.9342e-01,  2.0834e-01, -4.0006e-01, -6.0453e-01,
         -4.8187e-01, -1.2684e-01,  1.1878e-01, -2.3500e-01, -1.9031e-02,
         -8.7230e-02,  3.7247e-03, -6.1148e-02, -5.0407e-02, -4.1912e-02,
          5.7078e-01, -4.2712e-01,  2.5587e-01,  1.2636e-01,  2.5557e-02,
          2.9751e-04, -1.3966e-01, -4.5095e-01, -5.9614e-02,  1.2706e-02,
         -2.3782e-01, -7.8319e-03]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
406000 特征值优化 tensor(1.1055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3246, -1.0128,  0.1039, -0.3148,  1.7000, -0.2621,  2.2521,  2.5728,
          0.5258, -1.2315, -0.8833, -0.4525,  0.1426, -0.5242, -0.3686, -0.4756,
         -0.3677,  0.2903, -0.2881, -0.5541, -0.4255, -0.1262,  0.1293, -0.2294,
         -0.0286, -0.0160, -0.0106,  0.0053,  0.0156, -0.0414,  0.5114, -0.4947,
          0.2411,  0.1261, -0.0193, -0.0730, -0.0912, -0.3323, -0.0299,  0.0187,
         -0.1870, -0.0177]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
407000 特征值优化 tensor(1.1024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0290, -1.1925,  0.1108, -0.2926,  1.4702, -0.2697,  2.1234,  2.5411,
          0.4557, -1.1644, -0.9767, -0.4866,  0.1641, -0.3756, -0.2641, -0.4648,
         -0.3563,  0.1886, -0.2822, -0.4998, -0.3820, -0.1278,  0.1848, -0.1906,
         -0.0349, -0.0092, -0.0136,  0.0192,  0.0147, -0.0427,  0.4832, -0.4521,
          0.2526,  0.1268, -0.0141,  0.0065, -0.0783, -0.2824, -0.0381,  0.0286,
         -0.1656, -0.0220]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
408000 特征值优化 tensor(1.0690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8475, -1.1801,  0.1654, -0.3633,  1.1925, -0.2551,  1.9093,  2.4123,
          0.4742, -1.1889, -1.0892, -0.4794,  0.1498, -0.3494, -0.2507, -0.4377,
         -0.3194,  0.1514, -0.2859, -0.4682, -0.3471, -0.1269,  0.2263, -0.1790,
         -0.0400, -0.0323, -0.0265,  0.0232, -0.0365, -0.0409,  0.4433, -0.3892,
          0.2534,  0.1272,  0.0271,  0.0214, -0.0505, -0.2603, -0.0355,  0.0244,
         -0.1506, -0.0249]], device='cuda:0') tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
409000 特征值优化 tensor(1.0420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5983, -1.3730,  0.2284, -0.4086,  1.1337, -0.2305,  1.6553,  2.2649,
          0.4060, -1.1352, -1.1767, -0.5366,  0.1690, -0.2633, -0.1684, -0.4136,
         -0.2478,  0.1822, -0.2056, -0.4044, -0.3176, -0.1328,  0.2028, -0.2153,
          0.0130, -0.0150, -0.0115, -0.0126,  0.0300, -0.0352,  0.4359, -0.4020,
          0.1928,  0.1261, -0.0260, -0.0204, -0.0123, -0.2314, -0.0231,  0.0088,
         -0.1354, -0.0142]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
410000 特征值优化 tensor(1.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5438, -1.3073,  0.2394, -0.4474,  1.0512, -0.2595,  1.3724,  2.1286,
          0.4521, -1.2169, -1.2894, -0.5566,  0.1515, -0.2703, -0.1376, -0.3437,
         -0.3058,  0.1094, -0.2495, -0.3997, -0.3117, -0.1353,  0.1826, -0.2138,
         -0.0071, -0.0415, -0.0089,  0.0224, -0.0407, -0.0313,  0.4279, -0.3133,
          0.1910,  0.1285,  0.0285,  0.0207,  0.0301, -0.2009, -0.0233,  0.0050,
         -0.1160, -0.0210]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
411000 特征值优化 tensor(1.0379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4796, -1.2461,  0.2302, -0.4099,  1.0549, -0.2429,  1.0964,  1.9835,
          0.4110, -1.1749, -1.3613, -0.5999,  0.1471, -0.2516, -0.1604, -0.3729,
         -0.2008,  0.1754, -0.1597, -0.3936, -0.2967, -0.1341,  0.1894, -0.2146,
          0.0136, -0.0324, -0.0093, -0.0083,  0.0416, -0.0349,  0.4267, -0.3126,
          0.1286,  0.1268, -0.0384, -0.0344,  0.0714, -0.1610, -0.0245,  0.0039,
         -0.0944, -0.0193]], device='cuda:0') tensor(0.2143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
412000 特征值优化 tensor(1.0488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4184, -1.1955,  0.2139, -0.4085,  1.0658, -0.2410,  0.9754,  1.9149,
          0.4184, -1.1677, -1.3961, -0.6154,  0.1412, -0.2539, -0.1589, -0.3466,
         -0.2027,  0.1475, -0.1661, -0.3864, -0.2877, -0.1324,  0.2031, -0.2210,
          0.0206, -0.0165, -0.0286, -0.0324,  0.0112, -0.0353,  0.4279, -0.2919,
          0.1437,  0.1260, -0.0288, -0.0172,  0.0916, -0.1449, -0.0229,  0.0030,
         -0.0801, -0.0190]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
413000 特征值优化 tensor(1.0424, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3751, -1.1460,  0.2163, -0.4122,  1.0606, -0.2418,  0.9583,  1.9027,
          0.4271, -1.1554, -1.4061, -0.6290,  0.1347, -0.2508, -0.1611, -0.3442,
         -0.1924,  0.1505, -0.1554, -0.3828, -0.2821, -0.1321,  0.2075, -0.2187,
          0.0352,  0.0161, -0.0034, -0.0315,  0.0224, -0.0348,  0.4271, -0.2960,
          0.1379,  0.1266, -0.0173, -0.0202,  0.0957, -0.1397, -0.0266,  0.0034,
         -0.0795, -0.0181]], device='cuda:0') tensor(0.2151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
414000 特征值优化 tensor(1.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3187, -1.0927,  0.2057, -0.4099,  1.3310, -0.2384,  0.9417,  1.8742,
          0.4478, -1.1563, -1.4202, -0.6353,  0.1283, -0.2790, -0.1745, -0.3244,
         -0.2027,  0.1268, -0.1703, -0.3770, -0.2736, -0.1326,  0.1967, -0.2292,
          0.0225, -0.0148, -0.0122, -0.0052, -0.0069, -0.0366,  0.4653, -0.3014,
          0.1638,  0.1259, -0.0293, -0.0148,  0.1018, -0.1357, -0.0229,  0.0022,
         -0.0744, -0.0173]], device='cuda:0') tensor(0.2230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
415000 特征值优化 tensor(1.0781, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2597e+00, -1.0337e+00,  2.1851e-01, -4.0756e-01,  1.3320e+00,
         -2.5227e-01,  9.5269e-01,  1.8650e+00,  4.4698e-01, -1.1374e+00,
         -1.4216e+00, -6.5705e-01,  1.1810e-01, -2.8027e-01, -1.7754e-01,
         -3.0396e-01, -2.0749e-01,  1.0463e-01, -1.8242e-01, -3.7065e-01,
         -2.6856e-01, -1.3388e-01,  1.8907e-01, -2.1126e-01, -8.5573e-03,
         -1.6522e-02, -7.2494e-03,  5.5030e-03, -1.7906e-02, -3.4864e-02,
          4.6561e-01, -2.9886e-01,  1.7146e-01,  1.2628e-01, -1.7473e-03,
          2.7520e-03,  9.9545e-02, -1.2838e-01, -2.7702e-02,  6.8653e-03,
         -6.7041e-02, -1.9671e-02]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
416000 特征值优化 tensor(1.0793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0047e+00, -7.7020e-01,  2.2898e-01, -4.0470e-01,  1.3249e+00,
         -2.5308e-01,  9.5371e-01,  1.8608e+00,  4.6825e-01, -1.1347e+00,
         -1.4301e+00, -6.6245e-01,  8.8404e-02, -2.7191e-01, -1.7856e-01,
         -2.7202e-01, -1.8688e-01,  8.7719e-02, -1.7026e-01, -3.4364e-01,
         -2.3822e-01, -1.3522e-01,  1.9581e-01, -2.0076e-01, -5.5379e-03,
         -1.3853e-02, -7.0623e-03,  6.8762e-03, -2.1382e-02, -3.6113e-02,
          4.6485e-01, -2.9828e-01,  1.7246e-01,  1.2634e-01, -1.8015e-03,
          2.1276e-03,  9.8978e-02, -1.2613e-01, -2.8088e-02,  7.2151e-03,
         -6.1441e-02, -1.9030e-02]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
417000 特征值优化 tensor(1.1077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9162, -0.6798,  0.2366, -0.4220,  1.3104, -0.2516,  0.9414,  1.8699,
          0.5097, -1.1535, -1.4591, -0.6572,  0.0690, -0.2620, -0.1817, -0.2440,
         -0.1894,  0.0544, -0.1869, -0.3382, -0.2274, -0.1387,  0.1798, -0.2123,
         -0.0222, -0.0096, -0.0266,  0.0114, -0.0420, -0.0346,  0.4629, -0.2969,
          0.1890,  0.1256,  0.0196,  0.0217,  0.0964, -0.1244, -0.0212,  0.0064,
         -0.0665, -0.0210]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
418000 特征值优化 tensor(1.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8544, -0.6218,  0.2323, -0.4187,  1.2974, -0.2444,  0.9425,  1.8654,
          0.5152, -1.1412, -1.4716, -0.6695,  0.0634, -0.2546, -0.1755, -0.2386,
         -0.1793,  0.0491, -0.1855, -0.3295, -0.2149, -0.1335,  0.1878, -0.2132,
         -0.0152, -0.0232, -0.0237,  0.0306, -0.0385, -0.0347,  0.4610, -0.2950,
          0.1957,  0.1276,  0.0273,  0.0287,  0.1058, -0.1361, -0.0197,  0.0040,
         -0.0723, -0.0216]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
419000 特征值优化 tensor(1.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7641, -0.5484,  0.2456, -0.4033,  1.2868, -0.2370,  0.9628,  1.8696,
          0.5088, -1.1198, -1.4727, -0.6908,  0.0525, -0.2515, -0.1801, -0.2278,
         -0.1601,  0.0415, -0.1695, -0.3248, -0.2042, -0.1347,  0.2058, -0.2087,
         -0.0067, -0.0416, -0.0222,  0.0089, -0.0345, -0.0362,  0.4599, -0.2974,
          0.1939,  0.1279,  0.0191,  0.0216,  0.1020, -0.1408, -0.0207,  0.0035,
         -0.0739, -0.0203]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
420000 特征值优化 tensor(1.0355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.6251e-01, -5.4014e-01,  2.3127e-01, -4.1455e-01,  1.3062e+00,
         -2.3577e-01,  9.7597e-01,  1.8579e+00,  5.1384e-01, -1.1033e+00,
         -1.4494e+00, -7.1278e-01,  5.1805e-02, -2.4357e-01, -1.4892e-01,
         -2.9604e-01, -9.4344e-02,  1.0969e-01, -1.0829e-01, -3.2484e-01,
         -2.0364e-01, -1.3327e-01,  2.2629e-01, -1.9764e-01,  3.9857e-03,
          1.1163e-02,  2.3967e-02,  1.1424e-03,  4.0290e-02, -3.4842e-02,
          4.6247e-01, -3.2700e-01,  1.4635e-01,  1.2683e-01, -2.3176e-02,
         -2.9304e-02,  9.6653e-02, -1.3663e-01, -2.6308e-02,  2.9786e-03,
         -7.1769e-02, -1.7827e-02]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
421000 特征值优化 tensor(1.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7558, -0.5361,  0.2320, -0.4138,  1.2923, -0.2377,  0.9682,  1.8639,
          0.5426, -1.1069, -1.4682, -0.7183,  0.0508, -0.2416, -0.1467, -0.2905,
         -0.0959,  0.1049, -0.1080, -0.3271, -0.2028, -0.1334,  0.2077, -0.1984,
          0.0211,  0.0333,  0.0219, -0.0098,  0.0338, -0.0349,  0.4604, -0.3261,
          0.1390,  0.1273, -0.0260, -0.0248,  0.0976, -0.1357, -0.0243,  0.0031,
         -0.0713, -0.0189]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
422000 特征值优化 tensor(1.0268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7566, -0.5410,  0.2393, -0.4170,  1.2984, -0.2390,  0.9712,  1.8634,
          0.5590, -1.0998, -1.4778, -0.7296,  0.0501, -0.2400, -0.1443, -0.2942,
         -0.0945,  0.1073, -0.1039, -0.3256, -0.2051, -0.1339,  0.1949, -0.2108,
          0.0312,  0.0394,  0.0186, -0.0107,  0.0370, -0.0343,  0.4612, -0.3288,
          0.1346,  0.1273, -0.0283, -0.0259,  0.0966, -0.1353, -0.0247,  0.0032,
         -0.0699, -0.0185]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
423000 特征值优化 tensor(1.0336, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.5732e-01, -5.3613e-01,  2.2965e-01, -4.1033e-01,  1.2955e+00,
         -2.3658e-01,  9.8423e-01,  1.8508e+00,  5.6278e-01, -1.0873e+00,
         -1.4827e+00, -7.4805e-01,  5.1853e-02, -2.4269e-01, -1.4792e-01,
         -2.8458e-01, -9.9065e-02,  1.0260e-01, -1.1034e-01, -3.2617e-01,
         -2.0238e-01, -1.3297e-01,  2.1690e-01, -1.9475e-01,  3.8713e-02,
          1.4941e-02,  2.5539e-02, -5.8042e-05,  2.6224e-02, -3.5325e-02,
          4.6102e-01, -3.2744e-01,  1.4106e-01,  1.2710e-01, -2.3688e-02,
         -2.2696e-02,  9.6613e-02, -1.3583e-01, -2.5686e-02,  2.6906e-03,
         -7.1559e-02, -1.8072e-02]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
424000 特征值优化 tensor(1.0338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7534, -0.5357,  0.2332, -0.4033,  1.2905, -0.2422,  0.9942,  1.8448,
          0.5811, -1.0838, -1.4899, -0.7590,  0.0517, -0.2379, -0.1490, -0.2877,
         -0.0998,  0.1002, -0.1089, -0.3218, -0.2022, -0.1336,  0.2151, -0.1986,
          0.0440,  0.0178,  0.0077, -0.0258,  0.0265, -0.0364,  0.4602, -0.3278,
          0.1409,  0.1273, -0.0244, -0.0208,  0.0965, -0.1369, -0.0218,  0.0019,
         -0.0717, -0.0183]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
425000 特征值优化 tensor(1.0348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.6512e-01, -5.5217e-01,  2.3410e-01, -3.9959e-01,  1.3059e+00,
         -2.3689e-01,  1.0016e+00,  1.8380e+00,  5.8151e-01, -1.0697e+00,
         -1.4989e+00, -7.7906e-01,  5.4108e-02, -2.4209e-01, -1.4529e-01,
         -2.8410e-01, -1.0137e-01,  1.0052e-01, -1.1221e-01, -3.2385e-01,
         -2.0446e-01, -1.3344e-01,  2.0850e-01, -2.0469e-01,  3.3062e-02,
         -3.1878e-02, -2.2654e-02, -1.4237e-02,  2.3595e-02, -3.6407e-02,
          4.6225e-01, -3.2868e-01,  1.4152e-01,  1.2733e-01, -3.0565e-02,
         -2.4674e-02,  9.5752e-02, -1.3553e-01, -2.2049e-02,  1.6516e-03,
         -7.0386e-02, -1.7994e-02]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
426000 特征值优化 tensor(1.0452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.5823e-01, -5.3516e-01,  2.3056e-01, -3.9273e-01,  1.2886e+00,
         -2.4213e-01,  1.0178e+00,  1.8281e+00,  5.9291e-01, -1.0665e+00,
         -1.5000e+00, -7.9772e-01,  5.3284e-02, -2.4792e-01, -1.4594e-01,
         -2.8019e-01, -1.0770e-01,  9.4183e-02, -1.1522e-01, -3.2239e-01,
         -2.0101e-01, -1.3424e-01,  2.0803e-01, -2.0441e-01,  1.9202e-02,
         -1.6251e-02, -5.9487e-03, -9.0499e-04,  1.5195e-02, -3.7061e-02,
          4.5980e-01, -3.2150e-01,  1.4689e-01,  1.2631e-01, -3.1711e-02,
         -2.0428e-02,  9.8920e-02, -1.3878e-01, -2.1409e-02,  1.0179e-03,
         -6.7166e-02, -1.7419e-02]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
427000 特征值优化 tensor(1.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7703, -0.5247,  0.2080, -0.4089,  1.3141, -0.2412,  1.0318,  1.8154,
          0.6154, -1.0560, -1.5023, -0.8001,  0.0531, -0.2682, -0.1550, -0.2559,
         -0.1352,  0.0668, -0.1429, -0.3243, -0.2020, -0.1344,  0.1941, -0.2171,
          0.0070, -0.0178, -0.0092,  0.0064, -0.0230, -0.0380,  0.4635, -0.3003,
          0.1584,  0.1263, -0.0247,  0.0023,  0.0907, -0.1342, -0.0254,  0.0043,
         -0.0621, -0.0179]], device='cuda:0') tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
428000 特征值优化 tensor(1.0624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7587, -0.5338,  0.2167, -0.3940,  1.2956, -0.2471,  1.0392,  1.8119,
          0.6120, -1.0413, -1.5107, -0.8282,  0.0542, -0.2540, -0.1451, -0.2687,
         -0.1213,  0.0762, -0.1324, -0.3211, -0.1997, -0.1334,  0.2095, -0.2034,
          0.0089, -0.0047, -0.0053, -0.0127,  0.0019, -0.0370,  0.4609, -0.3053,
          0.1505,  0.1264, -0.0158, -0.0141,  0.0961, -0.1390, -0.0221,  0.0024,
         -0.0676, -0.0181]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
429000 特征值优化 tensor(1.0854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.6547e-01, -5.2512e-01,  2.2064e-01, -4.1206e-01,  1.2999e+00,
         -2.5262e-01,  1.0515e+00,  1.8063e+00,  6.4531e-01, -1.0394e+00,
         -1.5204e+00, -8.2441e-01,  5.1500e-02, -2.6054e-01, -1.6382e-01,
         -2.4273e-01, -1.4198e-01,  5.1104e-02, -1.5660e-01, -3.2237e-01,
         -2.0192e-01, -1.3496e-01,  1.8849e-01, -2.0840e-01, -4.5065e-03,
         -1.2554e-02,  1.4792e-03,  1.7212e-02, -3.0063e-02, -3.6418e-02,
          4.6131e-01, -2.9908e-01,  1.6782e-01,  1.2610e-01, -1.9486e-03,
          9.2750e-03,  9.0367e-02, -1.3018e-01, -2.9004e-02,  6.4454e-03,
         -5.5445e-02, -1.6783e-02]], device='cuda:0') tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
430000 特征值优化 tensor(1.0259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7676, -0.5556,  0.2380, -0.4263,  1.2875, -0.2445,  1.0385,  1.8202,
          0.6726, -1.0445, -1.5567, -0.8292,  0.0504, -0.2485, -0.1672, -0.2220,
         -0.1739,  0.0241, -0.1827, -0.3238, -0.2077, -0.1340,  0.1932, -0.2143,
          0.0068, -0.0853, -0.0086, -0.0073, -0.0512, -0.0337,  0.4600, -0.2941,
          0.1957,  0.1274,  0.0227,  0.0312,  0.0929, -0.1390, -0.0253,  0.0050,
         -0.0633, -0.0206]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
431000 特征值优化 tensor(1.1019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7754, -0.5550,  0.2190, -0.4222,  1.2874, -0.2323,  1.0486,  1.8125,
          0.6830, -1.0250, -1.5552, -0.8449,  0.0543, -0.2458, -0.1734, -0.2450,
         -0.1548,  0.0481, -0.1585, -0.3244, -0.2059, -0.1340,  0.2082, -0.2057,
          0.0279, -0.0272, -0.0319, -0.0364, -0.0185, -0.0358,  0.4602, -0.3003,
          0.1826,  0.1263,  0.0454,  0.0170,  0.0939, -0.1449, -0.0203,  0.0029,
         -0.0692, -0.0197]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
432000 特征值优化 tensor(1.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7497, -0.5410,  0.2414, -0.4040,  1.2853, -0.2329,  1.0595,  1.8039,
          0.6773, -0.9999, -1.5578, -0.8718,  0.0502, -0.2579, -0.1743, -0.2290,
         -0.1632,  0.0297, -0.1721, -0.3233, -0.2038, -0.1342,  0.1998, -0.2144,
          0.0235, -0.0132, -0.0189, -0.0145, -0.0391, -0.0364,  0.4598, -0.3006,
          0.1838,  0.1266,  0.0356,  0.0323,  0.0943, -0.1445, -0.0221,  0.0046,
         -0.0682, -0.0211]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
433000 特征值优化 tensor(1.0269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7698, -0.5514,  0.2371, -0.4174,  1.2984, -0.2339,  1.0760,  1.8027,
          0.7038, -0.9915, -1.5624, -0.8793,  0.0525, -0.2522, -0.1743, -0.2424,
         -0.1555,  0.0421, -0.1618, -0.3277, -0.2054, -0.1334,  0.2213, -0.2143,
         -0.0146,  0.0237,  0.0150,  0.0310, -0.0323, -0.0347,  0.4612, -0.3108,
          0.1782,  0.1271,  0.0315,  0.0235,  0.0934, -0.1501, -0.0228,  0.0027,
         -0.0711, -0.0184]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
434000 特征值优化 tensor(1.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7625, -0.5525,  0.2451, -0.4078,  1.2974, -0.2323,  1.0758,  1.7985,
          0.7050, -0.9711, -1.5740, -0.9016,  0.0517, -0.2559, -0.1658, -0.2350,
         -0.1618,  0.0369, -0.1677, -0.3274, -0.2056, -0.1345,  0.2109, -0.2048,
          0.0333, -0.0295, -0.0066, -0.0197, -0.0383, -0.0361,  0.4616, -0.3046,
          0.1791,  0.1267,  0.0360,  0.0292,  0.0914, -0.1454, -0.0251,  0.0047,
         -0.0658, -0.0205]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
435000 特征值优化 tensor(1.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7686, -0.5511,  0.2341, -0.4083,  1.2975, -0.2368,  1.0833,  1.7874,
          0.7282, -0.9634, -1.5800, -0.9163,  0.0535, -0.2547, -0.1733, -0.2453,
         -0.1574,  0.0419, -0.1617, -0.3278, -0.2045, -0.1334,  0.2107, -0.2001,
          0.0353, -0.0283, -0.0168, -0.0373, -0.0305, -0.0359,  0.4612, -0.3020,
          0.1829,  0.1271,  0.0364,  0.0244,  0.0941, -0.1487, -0.0254,  0.0036,
         -0.0694, -0.0194]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
436000 特征值优化 tensor(1.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7615, -0.5526,  0.2416, -0.4134,  1.2876, -0.2341,  1.0853,  1.7882,
          0.7418, -0.9474, -1.5901, -0.9273,  0.0514, -0.2483, -0.1774, -0.2260,
         -0.1655,  0.0292, -0.1704, -0.3262, -0.2055, -0.1335,  0.2148, -0.1954,
          0.0150, -0.0076, -0.0136, -0.0195, -0.0413, -0.0349,  0.4601, -0.3057,
          0.1836,  0.1272,  0.0367,  0.0332,  0.0900, -0.1464, -0.0265,  0.0026,
         -0.0639, -0.0179]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
437000 特征值优化 tensor(1.0985, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.6304e-01, -5.3114e-01,  2.3871e-01, -4.0548e-01,  1.2923e+00,
         -2.4688e-01,  1.1036e+00,  1.7739e+00,  7.4870e-01, -9.2985e-01,
         -1.5851e+00, -9.4869e-01,  5.0488e-02, -2.5876e-01, -1.5846e-01,
         -2.3605e-01, -1.5305e-01,  3.4450e-02, -1.6257e-01, -3.1748e-01,
         -2.0402e-01, -1.3763e-01,  2.1049e-01, -1.7867e-01,  3.2708e-02,
         -1.9480e-02, -1.7168e-03, -8.0213e-03, -3.8070e-02, -3.5817e-02,
          4.6033e-01, -3.0047e-01,  1.7447e-01,  1.2681e-01,  2.6452e-02,
          2.0898e-02,  8.4064e-02, -1.3342e-01, -2.6434e-02,  6.6738e-03,
         -5.7230e-02, -1.6020e-02]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
438000 特征值优化 tensor(1.0784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.6818e-01, -5.2770e-01,  2.2297e-01, -3.9760e-01,  1.3113e+00,
         -2.5871e-01,  1.1142e+00,  1.7573e+00,  7.5215e-01, -9.0432e-01,
         -1.5777e+00, -9.6865e-01,  5.4653e-02, -2.6655e-01, -1.5935e-01,
         -2.4869e-01, -1.4064e-01,  4.9654e-02, -1.4930e-01, -3.2439e-01,
         -2.0007e-01, -1.3459e-01,  2.0153e-01, -1.9850e-01,  2.7192e-02,
          7.1917e-03,  5.5031e-04, -2.2948e-02, -2.5989e-02, -3.7534e-02,
          4.6300e-01, -3.0010e-01,  1.5839e-01,  1.2704e-01,  8.7802e-03,
          7.1039e-03,  8.4407e-02, -1.3627e-01, -2.8181e-02,  6.4231e-03,
         -5.5126e-02, -1.7276e-02]], device='cuda:0') tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
439000 特征值优化 tensor(1.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7703, -0.5271,  0.2175, -0.3979,  1.3054, -0.2549,  1.1212,  1.7519,
          0.7753, -0.8989, -1.5844, -0.9854,  0.0542, -0.2644, -0.1569, -0.2558,
         -0.1348,  0.0576, -0.1408, -0.3229, -0.2006, -0.1338,  0.2086, -0.1916,
          0.0415,  0.0277,  0.0147, -0.0260, -0.0193, -0.0370,  0.4621, -0.3069,
          0.1556,  0.1265, -0.0019,  0.0054,  0.0879, -0.1375, -0.0253,  0.0057,
         -0.0575, -0.0178]], device='cuda:0') tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
440000 特征值优化 tensor(1.0545, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7699, -0.5456,  0.2150, -0.3991,  1.3071, -0.2475,  1.1237,  1.7499,
          0.7824, -0.8853, -1.5973, -1.0089,  0.0554, -0.2679, -0.1575, -0.2709,
         -0.1214,  0.0779, -0.1248, -0.3208, -0.2017, -0.1323,  0.2077, -0.2248,
          0.0197, -0.0072, -0.0074, -0.0186,  0.0025, -0.0363,  0.4625, -0.3198,
          0.1456,  0.1268, -0.0128, -0.0135,  0.0897, -0.1430, -0.0222,  0.0035,
         -0.0616, -0.0193]], device='cuda:0') tensor(0.2076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
441000 特征值优化 tensor(1.0617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7751, -0.5416,  0.2181, -0.3984,  1.3207, -0.2502,  1.1388,  1.7471,
          0.8091, -0.8664, -1.6025, -1.0203,  0.0561, -0.2702, -0.1580, -0.2662,
         -0.1323,  0.0634, -0.1351, -0.3229, -0.2011, -0.1331,  0.2045, -0.2159,
          0.0110, -0.0058, -0.0066,  0.0087, -0.0104, -0.0367,  0.4641, -0.3087,
          0.1508,  0.1275, -0.0075, -0.0068,  0.0885, -0.1432, -0.0233,  0.0036,
         -0.0597, -0.0175]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
442000 特征值优化 tensor(1.1122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7500, -0.5506,  0.2427, -0.4392,  1.2776, -0.2390,  1.1314,  1.7541,
          0.8575, -0.8700, -1.6333, -1.0121,  0.0455, -0.2436, -0.1490, -0.2294,
         -0.1598,  0.0327, -0.1640, -0.3244, -0.2095, -0.1375,  0.2052, -0.1945,
         -0.0396, -0.0138, -0.0046,  0.0139, -0.0423, -0.0347,  0.4579, -0.3123,
          0.1855,  0.1261,  0.0197,  0.0302,  0.0835, -0.1410, -0.0287,  0.0063,
         -0.0593, -0.0169]], device='cuda:0') tensor(0.2144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
443000 特征值优化 tensor(1.1006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7574, -0.5351,  0.2406, -0.4195,  1.2791, -0.2380,  1.1399,  1.7460,
          0.8661, -0.8470, -1.6360, -1.0353,  0.0476, -0.2502, -0.1697, -0.2416,
         -0.1532,  0.0373, -0.1570, -0.3215, -0.2068, -0.1370,  0.1874, -0.2125,
         -0.0186, -0.0242,  0.0027,  0.0353, -0.0348, -0.0355,  0.4588, -0.3068,
          0.1748,  0.1266,  0.0246,  0.0219,  0.0826, -0.1416, -0.0283,  0.0031,
         -0.0589, -0.0155]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
444000 特征值优化 tensor(1.0385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7650, -0.5339,  0.2228, -0.4101,  1.2886, -0.2427,  1.1377,  1.7373,
          0.8764, -0.8277, -1.6383, -1.0633,  0.0531, -0.2562, -0.1783, -0.2547,
         -0.1494,  0.0505, -0.1456, -0.3230, -0.2018, -0.1331,  0.1862, -0.2213,
         -0.0160, -0.0229, -0.0063,  0.0280, -0.0121, -0.0353,  0.4600, -0.2897,
          0.1673,  0.1269,  0.0205,  0.0176,  0.0913, -0.1532, -0.0269,  0.0019,
         -0.0646, -0.0177]], device='cuda:0') tensor(0.2467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
445000 特征值优化 tensor(1.0454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.7235e-01, -5.4394e-01,  2.1861e-01, -4.0280e-01,  1.3031e+00,
         -2.4187e-01,  1.1565e+00,  1.7230e+00,  8.7835e-01, -8.0260e-01,
         -1.6314e+00, -1.0866e+00,  5.4695e-02, -2.5163e-01, -1.7110e-01,
         -2.5040e-01, -1.5086e-01,  4.0758e-02, -1.5517e-01, -3.2019e-01,
         -2.0228e-01, -1.3283e-01,  2.0041e-01, -2.1333e-01, -2.2132e-02,
         -3.6742e-02, -4.4302e-03,  2.9083e-02, -1.8851e-02, -3.5946e-02,
          4.6168e-01, -3.1148e-01,  1.6170e-01,  1.2625e-01,  1.4613e-02,
          2.2102e-02,  8.9982e-02, -1.5265e-01, -2.6945e-02,  2.2846e-04,
         -6.1698e-02, -1.6668e-02]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
446000 特征值优化 tensor(1.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.6773e-01, -5.4746e-01,  2.3315e-01, -4.0953e-01,  1.2907e+00,
         -2.3932e-01,  1.1589e+00,  1.7282e+00,  9.0711e-01, -7.7892e-01,
         -1.6554e+00, -1.0948e+00,  5.2910e-02, -2.5012e-01, -1.7204e-01,
         -2.4477e-01, -1.5720e-01,  3.7315e-02, -1.5696e-01, -3.2701e-01,
         -2.0399e-01, -1.3348e-01,  1.9354e-01, -2.1270e-01, -3.9692e-02,
         -1.8391e-02, -5.8285e-04,  2.4340e-02, -3.0320e-02, -3.5552e-02,
          4.6034e-01, -3.0687e-01,  1.7550e-01,  1.2704e-01,  2.2682e-02,
          2.2902e-02,  8.9290e-02, -1.5210e-01, -2.6975e-02,  1.5889e-03,
         -6.3055e-02, -1.7596e-02]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
447000 特征值优化 tensor(1.1029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7632, -0.5456,  0.2435, -0.4197,  1.2903, -0.2358,  1.1636,  1.7234,
          0.9349, -0.7576, -1.6658, -1.1066,  0.0490, -0.2506, -0.1719, -0.2384,
         -0.1578,  0.0357, -0.1576, -0.3252, -0.2076, -0.1369,  0.2090, -0.1901,
         -0.0346, -0.0204, -0.0077,  0.0071, -0.0371, -0.0351,  0.4600, -0.3124,
          0.1749,  0.1265,  0.0238,  0.0240,  0.0804, -0.1425, -0.0259,  0.0042,
         -0.0559, -0.0173]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
448000 特征值优化 tensor(1.0351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7758, -0.5446,  0.2265, -0.4134,  1.3015, -0.2418,  1.1903,  1.7159,
          0.9276, -0.7234, -1.6608, -1.1399,  0.0542, -0.2567, -0.1629, -0.2594,
         -0.1496,  0.0493, -0.1481, -0.3226, -0.2037, -0.1334,  0.2211, -0.1937,
         -0.0315, -0.0272, -0.0091,  0.0261, -0.0174, -0.0352,  0.4616, -0.3099,
          0.1614,  0.1270,  0.0147,  0.0168,  0.0860, -0.1588, -0.0285,  0.0018,
         -0.0632, -0.0172]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
449000 特征值优化 tensor(1.0825, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7713, -0.5440,  0.2336, -0.4117,  1.3229, -0.2578,  1.1833,  1.6928,
          0.9450, -0.6908, -1.6463, -1.1564,  0.0518, -0.2592, -0.1732, -0.2890,
         -0.1112,  0.0848, -0.1093, -0.3205, -0.2050, -0.1341,  0.1957, -0.1965,
          0.0036, -0.0113, -0.0238,  0.0042,  0.0295, -0.0355,  0.4643, -0.3028,
          0.1315,  0.1282, -0.0149, -0.0038,  0.0805, -0.1406, -0.0347,  0.0044,
         -0.0526, -0.0170]], device='cuda:0') tensor(0.2354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
450000 特征值优化 tensor(1.1232, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7525, -0.5459,  0.2459, -0.4181,  1.3019, -0.2439,  1.1866,  1.7017,
          0.9667, -0.6687, -1.6600, -1.1731,  0.0474, -0.2500, -0.1451, -0.3124,
         -0.0867,  0.1143, -0.0808, -0.3188, -0.2072, -0.1390,  0.1959, -0.1979,
          0.0273, -0.0259, -0.0255, -0.0157,  0.0555, -0.0373,  0.4617, -0.3280,
          0.1141,  0.1259, -0.0389, -0.0274,  0.0825, -0.1445, -0.0341,  0.0073,
         -0.0584, -0.0178]], device='cuda:0') tensor(0.2172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
451000 特征值优化 tensor(1.0579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.7006e-01, -5.4352e-01,  2.1991e-01, -3.9023e-01,  1.3082e+00,
         -2.4482e-01,  1.2103e+00,  1.6897e+00,  9.7137e-01, -6.3445e-01,
         -1.6705e+00, -1.2036e+00,  5.6139e-02, -2.5669e-01, -1.4817e-01,
         -2.7862e-01, -1.2092e-01,  7.6590e-02, -1.1545e-01, -3.2226e-01,
         -2.0079e-01, -1.3364e-01,  2.0498e-01, -2.0483e-01,  1.9906e-02,
          1.0576e-02, -1.1517e-03,  1.7727e-03,  5.5748e-03, -3.7934e-02,
          4.6253e-01, -3.2430e-01,  1.3852e-01,  1.2622e-01, -9.7147e-03,
         -4.1795e-03,  8.2480e-02, -1.4782e-01, -2.1055e-02,  2.2906e-03,
         -5.5525e-02, -1.7949e-02]], device='cuda:0') tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
452000 特征值优化 tensor(1.0516, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7697, -0.5467,  0.2206, -0.3936,  1.3098, -0.2441,  1.2061,  1.6854,
          1.0063, -0.6055, -1.6836, -1.2154,  0.0558, -0.2532, -0.1463, -0.2823,
         -0.1189,  0.0781, -0.1107, -0.3214, -0.2020, -0.1333,  0.2049, -0.2100,
          0.0110, -0.0084, -0.0158, -0.0099,  0.0039, -0.0372,  0.4627, -0.3212,
          0.1340,  0.1262, -0.0297,  0.0052,  0.0825, -0.1490, -0.0201,  0.0040,
         -0.0539, -0.0182]], device='cuda:0') tensor(0.2214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
453000 特征值优化 tensor(1.0763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.7158e-01, -5.3565e-01,  2.2154e-01, -3.9913e-01,  1.3089e+00,
         -2.5596e-01,  1.2208e+00,  1.6684e+00,  1.0233e+00, -5.6288e-01,
         -1.6899e+00, -1.2287e+00,  5.5258e-02, -2.6391e-01, -1.5658e-01,
         -2.5792e-01, -1.4007e-01,  5.2936e-02, -1.3428e-01, -3.2264e-01,
         -2.0068e-01, -1.3374e-01,  2.0810e-01, -1.9276e-01, -1.4624e-02,
         -3.8587e-03, -3.9556e-03, -2.8356e-03, -2.0482e-02, -3.6521e-02,
          4.6272e-01, -3.1091e-01,  1.4781e-01,  1.2683e-01, -1.0199e-03,
          7.9216e-03,  7.5337e-02, -1.3970e-01, -2.4663e-02,  3.8268e-03,
         -4.5242e-02, -1.6095e-02]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
454000 特征值优化 tensor(7.0959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7153, -0.1203,  0.8770, -0.3941, -1.6994,  1.5963,  0.0787,  1.6478,
          1.3010,  1.9482, -1.7209, -1.0685, -0.0760, -0.0931, -0.1735, -0.1459,
          0.0543, -0.3888, -0.6958,  0.0336, -0.2208,  0.0830,  2.5548,  0.0521,
          0.1058,  0.6199, -0.0195, -0.1765,  0.0523,  0.0957, -0.9098,  0.3736,
         -0.4306, -0.7749, -0.3614,  0.7179, -0.3457, -0.5930,  1.0653,  0.7972,
         -0.0319,  0.8835]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
455000 特征值优化 tensor(1.3885, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1433e-01,  2.9696e-01,  1.5429e+00, -3.6025e-01, -7.8655e-01,
          2.3712e+00,  5.0921e-01,  1.1776e+00,  1.9101e+00,  1.7925e+00,
         -1.2939e+00, -3.5958e-01, -4.5608e-02, -1.0373e-01, -5.5235e-02,
         -4.8315e-02,  9.5268e-03,  1.6357e-02, -8.0008e-02,  1.4508e-02,
         -1.4350e-01,  1.1163e-01,  1.5107e+00, -8.7031e-02,  1.2779e-01,
          1.8545e-03, -3.6515e-02,  2.5850e-02,  2.1782e-01,  1.1788e-01,
         -2.7043e-01,  1.0507e-02,  4.4106e-03, -1.2450e-01, -5.0152e-01,
          2.8961e-01,  4.0855e-02, -1.1346e-01,  4.6031e-01,  3.4527e-01,
         -2.5137e-02,  3.2500e-01]], device='cuda:0') tensor(0.2124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
456000 特征值优化 tensor(0.9535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2193,  0.2968,  1.5806, -0.2103, -0.5573,  2.6659,  0.3300,  1.4037,
          1.9023,  1.8416, -1.5249, -0.3578, -0.0547, -0.1741, -0.1126, -0.1304,
         -0.0223, -0.0403, -0.0442,  0.0088, -0.1321,  0.1313,  0.8175, -0.0492,
         -0.0332, -0.0807,  0.1144,  0.1426,  0.2310,  0.1377, -0.2844,  0.0512,
          0.0517, -0.1651, -0.5111,  0.2942,  0.0542, -0.1193,  0.3821,  0.2492,
          0.0426,  0.2522]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
457000 特征值优化 tensor(0.9113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2860,  0.2944,  1.5210, -0.2059, -0.4801,  2.5985,  0.4105,  1.4636,
          1.8120,  1.8090, -1.4924, -0.4065, -0.0541, -0.1456, -0.1305, -0.1367,
         -0.0037, -0.0292, -0.0389,  0.0404, -0.1214,  0.1416,  0.5702,  0.1674,
          0.0966,  0.0281, -0.0039,  0.1321,  0.2448,  0.1396, -0.2820,  0.0464,
          0.0248, -0.1550, -0.5025,  0.2849,  0.0448, -0.1210,  0.3655,  0.2315,
          0.0417,  0.2476]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
458000 特征值优化 tensor(0.8835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2898,  0.2781,  1.4855, -0.2324, -0.5034,  2.3970,  0.4202,  1.4781,
          1.6605,  1.7272, -1.5162, -0.4709, -0.0529, -0.0864, -0.1900, -0.0970,
         -0.0060,  0.0949, -0.0641,  0.0433, -0.1200,  0.1369,  0.4283,  0.1330,
          0.1623,  0.1191, -0.0909,  0.0812,  0.2377,  0.1354, -0.2820, -0.0232,
          0.0289, -0.1300, -0.4866,  0.2459,  0.0478, -0.1243,  0.3446,  0.2107,
          0.0402,  0.2358]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
459000 特征值优化 tensor(0.8911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2737,  0.2932,  1.4735, -0.2450, -0.4900,  2.1023,  0.3766,  1.4143,
          1.5084,  1.6030, -1.5002, -0.5543, -0.0538, -0.1134, -0.1197, -0.2090,
         -0.1014, -0.0152,  0.0157,  0.0303, -0.1210,  0.1348,  0.3629,  0.1339,
          0.1281,  0.1186, -0.1098,  0.1541,  0.2361,  0.1340, -0.2864,  0.0441,
         -0.0788, -0.0910, -0.4588,  0.2892,  0.0572, -0.1297,  0.3186,  0.1968,
          0.0337,  0.2201]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
460000 特征值优化 tensor(0.8780, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2735,  0.2937,  1.4735, -0.2440, -0.4866,  1.9692,  0.4327,  1.4476,
          1.4325,  1.6276, -1.5539, -0.5582, -0.0538, -0.1579, -0.0509, -0.0907,
         -0.0631,  0.0798, -0.1246,  0.0336, -0.1212,  0.1347,  0.3483,  0.1516,
          0.1802,  0.1711, -0.0368,  0.0803,  0.2360,  0.1337, -0.2857, -0.0166,
          0.0394, -0.0744, -0.4824,  0.2074,  0.0477, -0.1275,  0.3167,  0.1786,
          0.0468,  0.2164]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
461000 特征值优化 tensor(0.9172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8955e-01,  3.0187e-01,  1.4891e+00, -2.3278e-01, -4.8697e-01,
          1.9642e+00,  4.2670e-01,  1.4110e+00,  1.4211e+00,  1.5605e+00,
         -1.5533e+00, -5.6768e-01, -5.4857e-02, -1.4080e-01, -7.6546e-02,
         -1.3037e-01, -5.9729e-02,  8.0915e-02, -9.4561e-02,  3.4150e-02,
         -1.2210e-01,  1.3420e-01,  3.4228e-01,  1.3832e-01,  1.6137e-01,
          1.4479e-01, -7.1448e-02,  1.2192e-01,  2.2704e-01,  1.3309e-01,
         -2.8059e-01, -1.6147e-03,  7.9183e-03, -7.3666e-02, -4.4487e-01,
          2.3625e-01,  4.0917e-02, -1.1582e-01,  3.1073e-01,  1.7742e-01,
          5.0197e-02,  2.1496e-01]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
462000 特征值优化 tensor(0.8880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2825,  0.2907,  1.4792, -0.2422, -0.5100,  1.9826,  0.4526,  1.4068,
          1.3903,  1.5901, -1.5620, -0.5921, -0.0542, -0.1224, -0.1073, -0.1305,
         -0.0484,  0.0358, -0.0936,  0.0412, -0.1212,  0.1348,  0.3350,  0.1472,
          0.1724,  0.1905, -0.0662,  0.1180,  0.2373,  0.1331, -0.2829, -0.0047,
          0.0459, -0.0758, -0.4717,  0.2117,  0.0467, -0.1281,  0.3080,  0.1754,
          0.0413,  0.2131]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
463000 特征值优化 tensor(0.8899, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2865,  0.2918,  1.4844, -0.2421, -0.5015,  1.9769,  0.4658,  1.3949,
          1.4038,  1.5768, -1.5788, -0.5938, -0.0541, -0.1581, -0.0771, -0.1126,
         -0.0624,  0.0482, -0.0728,  0.0358, -0.1216,  0.1349,  0.3112,  0.1487,
          0.1930,  0.2096, -0.0880,  0.1200,  0.2376,  0.1338, -0.2842, -0.0214,
          0.0148, -0.0751, -0.4657,  0.2156,  0.0428, -0.1234,  0.3087,  0.1732,
          0.0490,  0.2121]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
464000 特征值优化 tensor(0.8895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2891,  0.2927,  1.4917, -0.2359, -0.4847,  1.9745,  0.4830,  1.3796,
          1.3889,  1.5630, -1.5935, -0.6005, -0.0537, -0.1232, -0.1093, -0.1254,
         -0.0532,  0.0694, -0.0636,  0.0401, -0.1208,  0.1374,  0.2322,  0.0848,
          0.2651,  0.3072, -0.1271,  0.1386,  0.2392,  0.1350, -0.2822, -0.0266,
          0.0078, -0.0751, -0.4661,  0.2151,  0.0454, -0.1312,  0.3042,  0.1671,
          0.0421,  0.2067]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
465000 特征值优化 tensor(0.8887, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2848,  0.2933,  1.4864, -0.2436, -0.5032,  1.9702,  0.4749,  1.3402,
          1.3831,  1.5628, -1.6063, -0.6144, -0.0537, -0.1625, -0.0618, -0.1196,
         -0.0785,  0.0198, -0.0997,  0.0385, -0.1210,  0.1358,  0.2167,  0.0651,
          0.2730,  0.3181, -0.1272,  0.1334,  0.2368,  0.1339, -0.2830, -0.0076,
          0.0267, -0.0743, -0.4646,  0.2138,  0.0476, -0.1339,  0.3088,  0.1646,
          0.0406,  0.2050]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
466000 特征值优化 tensor(0.8911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2888,  0.2952,  1.4875, -0.2436, -0.5016,  1.9744,  0.5060,  1.3457,
          1.3978,  1.5565, -1.6299, -0.6144, -0.0541, -0.1465, -0.0904, -0.1291,
         -0.0559,  0.0474, -0.0599,  0.0349, -0.1210,  0.1363,  0.2111,  0.0483,
          0.2863,  0.3145, -0.1384,  0.1348,  0.2359,  0.1338, -0.2856, -0.0262,
          0.0116, -0.0750, -0.4679,  0.2120,  0.0403, -0.1256,  0.3007,  0.1683,
          0.0521,  0.2089]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
467000 特征值优化 tensor(0.8895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2858,  0.2939,  1.4844, -0.2431, -0.4876,  1.9717,  0.5230,  1.3292,
          1.4039,  1.5512, -1.6324, -0.6101, -0.0539, -0.1597, -0.0767, -0.1407,
         -0.0589,  0.0774, -0.0682,  0.0341, -0.1212,  0.1352,  0.2096,  0.0414,
          0.2905,  0.3107, -0.1427,  0.1255,  0.2378,  0.1332, -0.2821, -0.0242,
          0.0045, -0.0750, -0.4684,  0.2068,  0.0416, -0.1326,  0.2999,  0.1687,
          0.0449,  0.2105]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
468000 特征值优化 tensor(0.8881, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2779,  0.2912,  1.4755, -0.2465, -0.4849,  1.9834,  0.5310,  1.3133,
          1.4530,  1.5218, -1.6505, -0.6451, -0.0537, -0.1335, -0.0939, -0.1670,
         -0.1282, -0.0214, -0.0637,  0.0325, -0.1211,  0.1351,  0.2123,  0.0486,
          0.2461,  0.2709, -0.1963,  0.1678,  0.2320,  0.1341, -0.2853,  0.0433,
         -0.0436, -0.0774, -0.4492,  0.2608,  0.0420, -0.1289,  0.3037,  0.1749,
          0.0490,  0.2061]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
469000 特征值优化 tensor(0.8793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2761,  0.2939,  1.4755, -0.2468, -0.4666,  1.9806,  0.5609,  1.3276,
          1.4543,  1.5148, -1.7008, -0.6495, -0.0539, -0.0783, -0.1456, -0.1797,
         -0.0982, -0.0186, -0.0089,  0.0327, -0.1211,  0.1351,  0.2107,  0.0444,
          0.2447,  0.2807, -0.1961,  0.1734,  0.2363,  0.1344, -0.2819,  0.0497,
         -0.0353, -0.0766, -0.4489,  0.2608,  0.0354, -0.1235,  0.3010,  0.1784,
          0.0552,  0.2081]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
470000 特征值优化 tensor(0.9197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2949,  0.3053,  1.4848, -0.2521, -0.4844,  1.9797,  0.5719,  1.2973,
          1.4514,  1.5158, -1.6706, -0.6249, -0.0556, -0.1092, -0.1139, -0.1614,
         -0.0777,  0.0308, -0.0079,  0.0328, -0.1210,  0.1397,  0.2090,  0.0461,
          0.2601,  0.3136, -0.1599,  0.1684,  0.2241,  0.1378, -0.2769,  0.0091,
         -0.0413, -0.0759, -0.4509,  0.2354,  0.0299, -0.1166,  0.3098,  0.1658,
          0.0618,  0.1962]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
471000 特征值优化 tensor(0.8909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2808,  0.2914,  1.4775, -0.2457, -0.4954,  1.9843,  0.5748,  1.2738,
          1.4700,  1.5131, -1.6907, -0.6481, -0.0537, -0.1576, -0.0634, -0.1481,
         -0.1205, -0.0292, -0.0626,  0.0328, -0.1211,  0.1355,  0.2138,  0.0525,
          0.2545,  0.2782, -0.2010,  0.1705,  0.2309,  0.1341, -0.2850,  0.0429,
         -0.0387, -0.0771, -0.4486,  0.2524,  0.0369, -0.1299,  0.3039,  0.1783,
          0.0530,  0.2067]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
472000 特征值优化 tensor(0.9209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2899,  0.3070,  1.4831, -0.2504, -0.4838,  1.9811,  0.5862,  1.2634,
          1.4626,  1.5129, -1.7219, -0.6328, -0.0557, -0.1282, -0.0805, -0.1044,
         -0.0812,  0.0312, -0.1267,  0.0348, -0.1221,  0.1367,  0.2165,  0.0665,
          0.2630,  0.2974, -0.1621,  0.1583,  0.2252,  0.1340, -0.2791,  0.0124,
         -0.0183, -0.0770, -0.4540,  0.2364,  0.0313, -0.1186,  0.3171,  0.1670,
          0.0621,  0.1945]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
473000 特征值优化 tensor(0.9585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2810,  0.2965,  1.4763, -0.2468, -0.4849,  1.9768,  0.6320,  1.2860,
          1.4664,  1.5099, -1.7363, -0.6659, -0.0561, -0.1043, -0.1308, -0.1080,
         -0.0463,  0.0768, -0.1384,  0.0284, -0.1227,  0.1360,  0.2128,  0.0484,
          0.2388,  0.2782, -0.1948,  0.1839,  0.2308,  0.1345, -0.2860,  0.0506,
         -0.0320, -0.0763, -0.4511,  0.2526,  0.0225, -0.1194,  0.3070,  0.1721,
          0.0643,  0.1989]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
474000 特征值优化 tensor(0.9533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2746,  0.2934,  1.4735, -0.2460, -0.4816,  1.9771,  0.6250,  1.2597,
          1.4799,  1.5052, -1.7491, -0.6620, -0.0554, -0.0832, -0.1322, -0.1227,
         -0.0424,  0.0774, -0.1278,  0.0304, -0.1220,  0.1354,  0.2116,  0.0452,
          0.2398,  0.2813, -0.1901,  0.1755,  0.2332,  0.1338, -0.2850,  0.0462,
         -0.0368, -0.0759, -0.4542,  0.2515,  0.0272, -0.1227,  0.3061,  0.1759,
          0.0646,  0.2046]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
475000 特征值优化 tensor(0.9593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2718,  0.2936,  1.4722, -0.2475, -0.4832,  1.9721,  0.6324,  1.2484,
          1.4843,  1.4967, -1.7561, -0.6702, -0.0549, -0.0876, -0.1462, -0.1283,
         -0.0246,  0.0955, -0.1162,  0.0298, -0.1215,  0.1352,  0.2104,  0.0413,
          0.2332,  0.2814, -0.1914,  0.1794,  0.2351,  0.1337, -0.2863,  0.0480,
         -0.0430, -0.0754, -0.4528,  0.2550,  0.0285, -0.1213,  0.3039,  0.1775,
          0.0655,  0.2054]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
476000 特征值优化 tensor(0.8769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2714,  0.2932,  1.4727, -0.2468, -0.4864,  1.9754,  0.6597,  1.2482,
          1.4956,  1.4959, -1.7771, -0.6781, -0.0539, -0.0780, -0.1374, -0.1212,
         -0.0358,  0.1012, -0.1206,  0.0292, -0.1210,  0.1348,  0.2099,  0.0418,
          0.2277,  0.2750, -0.1960,  0.1900,  0.2359,  0.1340, -0.2852,  0.0471,
         -0.0627, -0.0761, -0.4526,  0.2561,  0.0271, -0.1248,  0.3062,  0.1773,
          0.0667,  0.2048]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
477000 特征值优化 tensor(0.8933, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2799,  0.2925,  1.4776, -0.2469, -0.4914,  1.9633,  0.6174,  1.1917,
          1.4816,  1.4913, -1.7748, -0.6725, -0.0540, -0.1047, -0.1239, -0.1547,
         -0.0535,  0.0478, -0.0857,  0.0323, -0.1213,  0.1353,  0.2109,  0.0475,
          0.2623,  0.2932, -0.1834,  0.1530,  0.2328,  0.1341, -0.2855,  0.0401,
         -0.0128, -0.0737, -0.4489,  0.2475,  0.0327, -0.1243,  0.3044,  0.1780,
          0.0625,  0.2061]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
478000 特征值优化 tensor(0.8954, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2826,  0.2909,  1.4858, -0.2383, -0.4840,  1.9464,  0.6392,  1.1934,
          1.4748,  1.4804, -1.7876, -0.6755, -0.0535, -0.1150, -0.1142, -0.1306,
         -0.0868,  0.0322, -0.0604,  0.0325, -0.1206,  0.1376,  0.2156,  0.0553,
          0.2723,  0.3002, -0.1690,  0.1365,  0.2373,  0.1361, -0.2842,  0.0338,
         -0.0122, -0.0721, -0.4485,  0.2508,  0.0285, -0.1192,  0.3015,  0.1812,
          0.0694,  0.2069]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
479000 特征值优化 tensor(0.9032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8574e-01,  2.9740e-01,  1.4884e+00, -2.4294e-01, -4.8363e-01,
          1.9280e+00,  6.7073e-01,  1.1991e+00,  1.4647e+00,  1.4784e+00,
         -1.7938e+00, -6.7050e-01, -5.4311e-02, -1.2798e-01, -9.2231e-02,
         -1.1815e-01, -7.7694e-02,  1.3598e-02, -2.6641e-02,  3.1294e-02,
         -1.2138e-01,  1.3523e-01,  2.1549e-01,  6.6167e-02,  2.9336e-01,
          3.0337e-01, -1.6063e-01,  1.1673e-01,  2.3633e-01,  1.3374e-01,
         -2.8156e-01,  1.4554e-02, -1.2377e-03, -6.9730e-02, -4.4789e-01,
          2.3620e-01,  2.1491e-02, -1.1247e-01,  2.9917e-01,  1.7891e-01,
          7.4606e-02,  2.0753e-01]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
480000 特征值优化 tensor(0.8932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2805,  0.2941,  1.4787, -0.2472, -0.4869,  1.9490,  0.6727,  1.1685,
          1.4903,  1.4690, -1.8134, -0.6832, -0.0540, -0.1098, -0.1190, -0.1331,
         -0.0841,  0.0376, -0.0725,  0.0326, -0.1210,  0.1359,  0.2091,  0.0409,
          0.2692,  0.3042, -0.1722,  0.1434,  0.2368,  0.1341, -0.2854,  0.0366,
         -0.0166, -0.0719, -0.4495,  0.2502,  0.0259, -0.1223,  0.3034,  0.1814,
          0.0684,  0.2039]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
481000 特征值优化 tensor(0.8987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2805,  0.2927,  1.4816, -0.2423, -0.4801,  1.9415,  0.6625,  1.1366,
          1.4927,  1.4774, -1.8262, -0.6937, -0.0538, -0.1155, -0.1144, -0.1672,
         -0.0796,  0.0252, -0.0588,  0.0319, -0.1214,  0.1350,  0.2151,  0.0565,
          0.2760,  0.2934, -0.1662,  0.1377,  0.2348,  0.1337, -0.2838,  0.0291,
         -0.0057, -0.0715, -0.4490,  0.2486,  0.0266, -0.1190,  0.3051,  0.1779,
          0.0743,  0.2043]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
482000 特征值优化 tensor(0.9098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2878,  0.3026,  1.4829, -0.2504, -0.4736,  1.9890,  0.6828,  1.1233,
          1.5002,  1.4838, -1.8286, -0.6770, -0.0551, -0.1160, -0.0990, -0.1594,
         -0.0656,  0.0601, -0.0988,  0.0324, -0.1226,  0.1361,  0.2252,  0.0814,
          0.2532,  0.2873, -0.1505,  0.1577,  0.2281,  0.1331, -0.2754,  0.0069,
         -0.0200, -0.0768, -0.4578,  0.2207,  0.0234, -0.1196,  0.3249,  0.1587,
          0.0715,  0.1888]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
483000 特征值优化 tensor(0.8854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2854,  0.2926,  1.4859, -0.2426, -0.4897,  1.9679,  0.7167,  1.1386,
          1.4760,  1.5021, -1.8416, -0.6828, -0.0540, -0.1622, -0.0552, -0.1581,
         -0.1229,  0.0227, -0.0323,  0.0345, -0.1210,  0.1351,  0.2079,  0.0383,
          0.2946,  0.3165, -0.1327,  0.1244,  0.2372,  0.1329, -0.2836, -0.0202,
          0.0102, -0.0739, -0.4728,  0.1974,  0.0215, -0.1319,  0.3090,  0.1662,
          0.0657,  0.2016]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
484000 特征值优化 tensor(0.8855, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2820,  0.2926,  1.4816, -0.2434, -0.5120,  1.9739,  0.7368,  1.1348,
          1.4774,  1.5113, -1.8426, -0.6970, -0.0539, -0.1729, -0.0536, -0.1633,
         -0.1135,  0.0165, -0.0066,  0.0328, -0.1211,  0.1349,  0.2108,  0.0434,
          0.3011,  0.3115, -0.1422,  0.0970,  0.2368,  0.1333, -0.2823, -0.0198,
          0.0280, -0.0751, -0.4730,  0.1959,  0.0190, -0.1283,  0.3130,  0.1647,
          0.0684,  0.1970]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
485000 特征值优化 tensor(0.8816, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8160e-01,  2.9211e-01,  1.4804e+00, -2.4271e-01, -4.8664e-01,
          1.9620e+00,  7.5963e-01,  1.1349e+00,  1.4730e+00,  1.4978e+00,
         -1.8717e+00, -6.9103e-01, -5.3655e-02, -1.6038e-01, -5.7587e-02,
         -1.5395e-01, -1.4503e-01,  1.8216e-03, -1.3907e-02,  3.3794e-02,
         -1.2094e-01,  1.3557e-01,  2.0646e-01,  3.8085e-02,  2.9431e-01,
          3.1303e-01, -1.2826e-01,  1.1198e-01,  2.3699e-01,  1.3320e-01,
         -2.8448e-01, -2.8903e-02,  2.1382e-02, -7.4277e-02, -4.7260e-01,
          1.9019e-01,  1.5563e-02, -1.2363e-01,  3.0721e-01,  1.6490e-01,
          7.0961e-02,  2.0212e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
486000 特征值优化 tensor(0.8828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2809,  0.2929,  1.4801, -0.2445, -0.5083,  1.9788,  0.7689,  1.1191,
          1.4789,  1.5017, -1.8729, -0.6961, -0.0540, -0.1639, -0.0638, -0.1699,
         -0.0995,  0.0075, -0.0026,  0.0326, -0.1213,  0.1350,  0.2098,  0.0424,
          0.3045,  0.3107, -0.1290,  0.0802,  0.2370,  0.1335, -0.2831, -0.0186,
          0.0495, -0.0762, -0.4760,  0.1908,  0.0148, -0.1243,  0.3093,  0.1640,
          0.0729,  0.2023]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
487000 特征值优化 tensor(0.8792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2817,  0.2928,  1.4815, -0.2433, -0.4953,  1.9675,  0.7846,  1.1166,
          1.4778,  1.5000, -1.9082, -0.6970, -0.0539, -0.1616, -0.0417, -0.1643,
         -0.1780, -0.0314, -0.0083,  0.0332, -0.1212,  0.1347,  0.2060,  0.0413,
          0.3056,  0.3151, -0.1227,  0.0892,  0.2372,  0.1331, -0.2858, -0.0401,
          0.0023, -0.0741, -0.4770,  0.1867,  0.0123, -0.1195,  0.3099,  0.1640,
          0.0772,  0.2006]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
488000 特征值优化 tensor(0.9038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2822,  0.2930,  1.4918, -0.2367, -0.4844,  1.9609,  0.7514,  1.0525,
          1.5186,  1.4507, -1.8880, -0.7076, -0.0540, -0.1290, -0.0947, -0.1498,
         -0.0948,  0.0230, -0.0251,  0.0320, -0.1211,  0.1369,  0.2186,  0.0646,
          0.2942,  0.3158, -0.1546,  0.1174,  0.2343,  0.1350, -0.2837,  0.0185,
          0.0095, -0.0738, -0.4519,  0.2322,  0.0172, -0.1201,  0.3074,  0.1792,
          0.0816,  0.2034]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
489000 特征值优化 tensor(0.8947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2828,  0.2926,  1.4829, -0.2416, -0.4761,  1.9528,  0.7549,  1.0415,
          1.5331,  1.4442, -1.9077, -0.7210, -0.0540, -0.1118, -0.1192, -0.1853,
         -0.1092,  0.0202, -0.0487,  0.0326, -0.1211,  0.1362,  0.2142,  0.0500,
          0.2791,  0.3038, -0.1675,  0.1312,  0.2372,  0.1349, -0.2827,  0.0331,
         -0.0035, -0.0724, -0.4538,  0.2433,  0.0158, -0.1127,  0.3076,  0.1801,
          0.0846,  0.2004]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
490000 特征值优化 tensor(0.8911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2863,  0.2934,  1.4827, -0.2421, -0.4976,  1.9728,  0.8194,  1.0552,
          1.4966,  1.4814, -1.9033, -0.7104, -0.0540, -0.1658, -0.0598, -0.1269,
         -0.1085,  0.0788, -0.0543,  0.0342, -0.1214,  0.1357,  0.2111,  0.0472,
          0.3041,  0.3112, -0.1404,  0.1010,  0.2374,  0.1327, -0.2856, -0.0442,
          0.0109, -0.0757, -0.4799,  0.1837,  0.0085, -0.1216,  0.3092,  0.1680,
          0.0793,  0.1986]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
491000 特征值优化 tensor(0.8869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2840,  0.2920,  1.4819, -0.2438, -0.4924,  1.9655,  0.8194,  1.0314,
          1.5058,  1.4777, -1.9275, -0.7186, -0.0541, -0.1601, -0.0598, -0.1364,
         -0.0807,  0.0621, -0.0672,  0.0338, -0.1211,  0.1353,  0.2091,  0.0439,
          0.2953,  0.3143, -0.1259,  0.1029,  0.2372,  0.1331, -0.2853, -0.0277,
          0.0240, -0.0737, -0.4761,  0.1862,  0.0093, -0.1261,  0.3113,  0.1658,
          0.0781,  0.1996]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
492000 特征值优化 tensor(0.8862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2799,  0.2940,  1.4795, -0.2436, -0.4970,  1.9693,  0.8299,  1.0111,
          1.5156,  1.4782, -1.9362, -0.7290, -0.0538, -0.1504, -0.0649, -0.1417,
         -0.0816,  0.0536, -0.0635,  0.0323, -0.1211,  0.1350,  0.2077,  0.0420,
          0.2953,  0.3177, -0.1253,  0.1049,  0.2366,  0.1335, -0.2845, -0.0238,
          0.0239, -0.0750, -0.4724,  0.1900,  0.0086, -0.1273,  0.3124,  0.1660,
          0.0791,  0.1974]], device='cuda:0') tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
493000 特征值优化 tensor(0.8869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2829,  0.2942,  1.4820, -0.2419, -0.4956,  1.9709,  0.8378,  0.9910,
          1.5143,  1.4775, -1.9524, -0.7344, -0.0538, -0.1486, -0.0776, -0.1444,
         -0.0747,  0.0632, -0.0640,  0.0329, -0.1211,  0.1351,  0.2089,  0.0430,
          0.2944,  0.3162, -0.1220,  0.1032,  0.2374,  0.1330, -0.2848, -0.0263,
          0.0142, -0.0749, -0.4786,  0.1876,  0.0067, -0.1274,  0.3116,  0.1647,
          0.0801,  0.1967]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
494000 特征值优化 tensor(0.8831, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2790,  0.2937,  1.4797, -0.2444, -0.4869,  1.9834,  0.8556,  0.9839,
          1.5207,  1.4757, -1.9616, -0.7305, -0.0540, -0.1604, -0.0582, -0.1327,
         -0.0713,  0.0740, -0.0878,  0.0320, -0.1210,  0.1346,  0.2120,  0.0462,
          0.2968,  0.3126, -0.1362,  0.0855,  0.2367,  0.1337, -0.2824, -0.0363,
          0.0337, -0.0770, -0.4840,  0.1834,  0.0051, -0.1248,  0.3124,  0.1659,
          0.0829,  0.1964]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
495000 特征值优化 tensor(0.8863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2796,  0.2934,  1.4790, -0.2460, -0.4936,  1.9678,  0.8605,  0.9686,
          1.5328,  1.4582, -1.9884, -0.7345, -0.0540, -0.1487, -0.0801, -0.1445,
         -0.0629,  0.0494, -0.0630,  0.0323, -0.1212,  0.1350,  0.2084,  0.0423,
          0.2931,  0.3191, -0.1340,  0.1131,  0.2365,  0.1339, -0.2856, -0.0331,
          0.0291, -0.0744, -0.4738,  0.1860,  0.0055, -0.1248,  0.3138,  0.1657,
          0.0850,  0.1951]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
496000 特征值优化 tensor(0.8867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2855,  0.2950,  1.4860, -0.2398, -0.4863,  1.9753,  0.8724,  0.9580,
          1.5360,  1.4632, -1.9924, -0.7484, -0.0538, -0.1415, -0.0856, -0.1418,
         -0.0522,  0.0335, -0.0589,  0.0359, -0.1211,  0.1352,  0.2058,  0.0431,
          0.2915,  0.3219, -0.1106,  0.1207,  0.2372,  0.1334, -0.2836, -0.0323,
          0.0135, -0.0750, -0.4776,  0.1877,  0.0035, -0.1215,  0.3180,  0.1640,
          0.0856,  0.1957]], device='cuda:0') tensor(0.2178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
497000 特征值优化 tensor(0.8875, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2842,  0.2929,  1.4823, -0.2439, -0.4906,  1.9717,  0.8767,  0.9239,
          1.5356,  1.4607, -1.9950, -0.7524, -0.0537, -0.1460, -0.0811, -0.1501,
         -0.0770,  0.0423, -0.0555,  0.0338, -0.1210,  0.1352,  0.2074,  0.0421,
          0.2951,  0.3196, -0.1141,  0.1074,  0.2372,  0.1339, -0.2845, -0.0266,
          0.0189, -0.0746, -0.4778,  0.1866,  0.0020, -0.1266,  0.3172,  0.1627,
          0.0857,  0.1945]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
498000 特征值优化 tensor(0.8854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8135e-01,  2.9316e-01,  1.4811e+00, -2.4368e-01, -5.0768e-01,
          1.9783e+00,  8.9271e-01,  9.1407e-01,  1.5404e+00,  1.4586e+00,
         -2.0062e+00, -7.5127e-01, -5.3601e-02, -1.5703e-01, -6.0738e-02,
         -1.3810e-01, -8.6961e-02,  7.4835e-02, -7.6551e-02,  3.2983e-02,
         -1.2113e-01,  1.3508e-01,  2.1122e-01,  4.5044e-02,  3.0198e-01,
          3.1609e-01, -1.4043e-01,  8.4672e-02,  2.3673e-01,  1.3309e-01,
         -2.8300e-01, -3.8813e-02,  3.7632e-02, -7.5476e-02, -4.8017e-01,
          1.8222e-01, -8.8608e-05, -1.2473e-01,  3.1576e-01,  1.6612e-01,
          8.7217e-02,  1.9213e-01]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
499000 特征值优化 tensor(0.8845, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8164e-01,  2.9360e-01,  1.4810e+00, -2.4300e-01, -4.9253e-01,
          1.9727e+00,  9.0690e-01,  9.0431e-01,  1.5480e+00,  1.4532e+00,
         -2.0275e+00, -7.5917e-01, -5.3864e-02, -1.4755e-01, -7.8048e-02,
         -1.4145e-01, -7.7225e-02,  5.3905e-02, -6.6317e-02,  3.3538e-02,
         -1.2134e-01,  1.3504e-01,  2.0945e-01,  4.2396e-02,  2.9341e-01,
          3.1557e-01, -1.2580e-01,  1.0572e-01,  2.3708e-01,  1.3325e-01,
         -2.8522e-01, -3.0426e-02,  2.9868e-02, -7.5056e-02, -4.7942e-01,
          1.8325e-01, -1.2428e-03, -1.2275e-01,  3.1522e-01,  1.6495e-01,
          8.8801e-02,  1.9475e-01]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
500000 特征值优化 tensor(0.8870, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2817,  0.2937,  1.4809, -0.2440, -0.4889,  1.9678,  0.9248,  0.8936,
          1.5500,  1.4468, -2.0372, -0.7570, -0.0539, -0.1360, -0.0876, -0.1496,
         -0.0533,  0.0893, -0.0614,  0.0326, -0.1210,  0.1348,  0.2066,  0.0408,
          0.3038,  0.3225, -0.1306,  0.0850,  0.2334,  0.1334, -0.2825, -0.0324,
          0.0234, -0.0741, -0.4776,  0.1783, -0.0042, -0.1191,  0.3164,  0.1632,
          0.0933,  0.1949]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
501000 特征值优化 tensor(0.9386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2858,  0.2980,  1.4777, -0.2455, -0.4403,  1.9671,  0.9298,  0.8824,
          1.5504,  1.4475, -2.0803, -0.7663, -0.0570, -0.1082, -0.1229, -0.1570,
         -0.0828, -0.0077,  0.0033,  0.0380, -0.1230,  0.1363,  0.2095,  0.0358,
          0.3038,  0.3091, -0.1191,  0.0800,  0.2364,  0.1323, -0.2718, -0.0171,
          0.0549, -0.0750, -0.4743,  0.1866, -0.0083, -0.1174,  0.3152,  0.1703,
          0.0981,  0.1862]], device='cuda:0') tensor(0.2125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
502000 特征值优化 tensor(0.9106, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8753e-01,  3.0407e-01,  1.4905e+00, -2.3879e-01, -4.6954e-01,
          1.9668e+00,  9.2686e-01,  8.4064e-01,  1.5817e+00,  1.4093e+00,
         -2.0590e+00, -7.6066e-01, -5.5191e-02, -1.2784e-01, -9.8603e-02,
         -1.5312e-01, -9.1321e-02,  8.5042e-03, -2.3300e-02,  3.3578e-02,
         -1.2277e-01,  1.3733e-01,  2.1876e-01,  5.9189e-02,  2.9666e-01,
          3.0895e-01, -1.3366e-01,  1.0624e-01,  2.3446e-01,  1.3401e-01,
         -2.7991e-01, -2.5831e-04,  2.3171e-02, -7.5157e-02, -4.5616e-01,
          2.0918e-01, -7.2183e-03, -1.0578e-01,  3.1470e-01,  1.6961e-01,
          9.9219e-02,  1.9328e-01]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
503000 特征值优化 tensor(0.8854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2803,  0.2904,  1.4721, -0.2510, -0.4942,  1.9653,  0.9356,  0.8172,
          1.6116,  1.3896, -2.0712, -0.7887, -0.0540, -0.1509, -0.0679, -0.1535,
         -0.1274, -0.0356, -0.0136,  0.0323, -0.1214,  0.1383,  0.2076,  0.0431,
          0.2610,  0.3181, -0.1705,  0.1626,  0.2350,  0.1371, -0.2862,  0.0388,
         -0.0422, -0.0740, -0.4589,  0.2360, -0.0055, -0.1157,  0.3166,  0.1748,
          0.0980,  0.1900]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
504000 特征值优化 tensor(18.0468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3855, -2.4224, -0.1268,  0.4832, -0.1571, -0.0383, -1.4050, -0.0200,
          1.6116,  0.4981,  1.2617,  0.3571, -0.7318, -0.5779,  0.7288,  0.5659,
         -0.3032, -0.0957, -0.2814,  1.0286, -0.1025, -2.0337,  0.0704, -0.0558,
          0.2977, -1.0026, -0.1723, -1.5527,  0.9165,  0.8590,  1.0211, -0.6289,
          0.5663,  1.7831, -2.1209, -1.5138,  0.6892,  0.8765,  0.6056, -1.1424,
         -0.6350, -0.8858]], device='cuda:0') tensor(5.3840, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
505000 特征值优化 tensor(4.3842, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0504, -1.5162,  0.8397, -0.5264, -0.5027,  0.9717, -0.7766,  0.1792,
          2.5316, -0.4860,  0.7558,  1.1305, -0.0561, -0.0164,  0.0117,  0.0309,
         -0.0300,  0.0329, -0.0127,  0.0938, -0.0426, -0.9344,  0.1574,  0.0440,
          0.0301, -0.2791, -0.2234, -0.6382,  0.1920,  0.5743,  0.2921, -0.0221,
          0.0058,  0.7749, -1.1085, -0.5552,  0.0538,  0.1077,  0.1437, -0.3710,
         -0.0155, -0.1402]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
506000 特征值优化 tensor(1.3752, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3685e-01, -1.3995e+00,  1.1976e+00, -1.0724e+00, -7.7006e-01,
          1.2910e+00, -1.0183e+00,  1.5830e-01,  2.9046e+00, -9.5143e-01,
          4.0498e-01,  8.0808e-01, -3.4346e-02, -2.6950e-02,  1.0463e-01,
         -6.1599e-02,  6.5992e-02, -4.8488e-02,  1.3756e-02,  5.1535e-04,
          1.4895e-02, -4.3044e-01,  4.1411e-01, -3.9041e-01,  8.9113e-02,
         -1.8994e-01, -2.0747e-01, -4.2139e-01,  2.5672e-01,  2.2423e-01,
          2.7062e-01, -4.5244e-02, -2.3433e-02,  6.0032e-01, -5.6394e-01,
         -1.9245e-01,  1.2036e-02,  1.1569e-01,  1.9251e-01, -2.9087e-01,
         -5.3831e-02,  1.6762e-01]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
507000 特征值优化 tensor(1.2248, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1245, -1.3010,  1.2288, -1.0428, -0.6352,  1.2818, -1.1568,  0.3592,
          2.8232, -1.4436,  0.7302,  0.2783, -0.0342, -0.0280,  0.1131, -0.0788,
         -0.0050, -0.0510,  0.0655, -0.0088,  0.0134, -0.4009,  0.4991, -0.0233,
          0.0224, -0.0143,  0.2144, -0.3212,  0.2566,  0.2021,  0.2707, -0.0485,
          0.0751,  0.6165, -0.5496, -0.1178,  0.0102,  0.0639,  0.1609, -0.1015,
         -0.0464,  0.0974]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
508000 特征值优化 tensor(1.2306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1549e-01, -1.3497e+00,  1.1821e+00, -9.9844e-01, -6.6150e-01,
          1.2825e+00, -1.1529e+00,  2.4892e-01,  2.8118e+00, -1.4864e+00,
          6.8498e-01,  2.5023e-01, -4.1250e-02, -2.8754e-02,  7.4983e-02,
         -1.0045e-01,  6.2318e-03,  5.3510e-02,  1.6429e-01,  5.7511e-04,
          1.4398e-02, -3.8803e-01,  4.4713e-01,  6.1310e-02,  1.3089e-01,
          5.6320e-02,  1.8070e-01, -2.4858e-01,  2.4759e-01,  1.9143e-01,
          2.7281e-01, -3.2598e-02,  2.5312e-02,  6.1765e-01, -5.3483e-01,
         -1.0771e-01,  4.2143e-03,  7.9044e-02,  1.9250e-01, -6.8352e-02,
         -4.3132e-02,  6.2122e-02]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
509000 特征值优化 tensor(1.2761, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1469, -1.3015,  1.1183, -0.9304, -0.6318,  1.2618, -1.1730,  0.2104,
          2.7888, -1.4730,  0.7431,  0.2492, -0.0355, -0.0306,  0.0733, -0.0560,
          0.0254,  0.0700,  0.1858,  0.0316,  0.0105, -0.3758,  0.4203,  0.0778,
          0.1489,  0.0763,  0.1958, -0.2390,  0.2402,  0.1773,  0.2704, -0.0511,
         -0.0487,  0.6157, -0.5311, -0.1056,  0.0040,  0.0686,  0.1887, -0.0678,
         -0.0371,  0.0626]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
510000 特征值优化 tensor(1.2685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4242e-01, -1.3020e+00,  9.4965e-01, -7.6834e-01, -6.3054e-01,
          1.2560e+00, -1.1570e+00,  1.6821e-01,  2.7431e+00, -1.4622e+00,
          7.2336e-01,  2.4089e-01, -3.5659e-02, -2.4286e-02,  6.5286e-02,
         -8.0934e-02,  9.5052e-03,  6.9627e-02,  1.8519e-01,  3.0671e-02,
          1.0837e-02, -3.5735e-01,  3.9787e-01,  1.2219e-01,  1.6961e-01,
          1.0783e-01,  1.8272e-01, -2.3526e-01,  2.1984e-01,  1.6035e-01,
          2.7022e-01, -4.9172e-02, -4.3490e-02,  6.1384e-01, -5.3275e-01,
         -9.4906e-02, -1.1920e-03,  7.8297e-02,  1.7377e-01, -7.6224e-02,
         -3.6182e-02,  7.5270e-02]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
511000 特征值优化 tensor(1.2217, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2599e-01, -1.3307e+00,  7.9963e-01, -6.1365e-01, -6.3304e-01,
          1.2638e+00, -1.1635e+00,  1.6287e-01,  2.6787e+00, -1.4524e+00,
          7.1640e-01,  2.2438e-01, -3.9287e-02,  3.6634e-02,  8.9083e-02,
         -1.2175e-01,  6.2765e-03,  7.3965e-02,  1.8904e-01,  1.7387e-03,
          1.1939e-02, -3.3417e-01,  2.8894e-01,  1.6149e-01,  1.5012e-01,
          6.7911e-02,  1.7711e-01, -1.8625e-01,  2.0740e-01,  1.3882e-01,
          2.7053e-01, -3.1647e-02,  2.5590e-02,  6.3160e-01, -5.2190e-01,
         -8.8381e-02, -2.7223e-03,  8.0684e-02,  1.6092e-01, -5.4059e-02,
         -3.5644e-02,  5.7612e-02]], device='cuda:0') tensor(0.2130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
512000 特征值优化 tensor(1.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1065, -1.3385,  0.7722, -0.5801, -0.6190,  1.2680, -1.1609,  0.1387,
          2.6276, -1.4415,  0.7426,  0.2125, -0.0403,  0.0402,  0.0728, -0.1180,
         -0.0061,  0.0733,  0.1857, -0.0345,  0.0131, -0.3287,  0.2740,  0.1618,
          0.1402,  0.0960,  0.1783, -0.2169,  0.2124,  0.1345,  0.2702, -0.0405,
          0.0595,  0.6343, -0.5132, -0.0892, -0.0052,  0.0788,  0.1512, -0.0290,
         -0.0335,  0.0389]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
513000 特征值优化 tensor(1.2327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2741e-01, -1.3219e+00,  7.8223e-01, -5.8116e-01, -6.1178e-01,
          1.2576e+00, -1.1597e+00,  7.4226e-02,  2.5535e+00, -1.3949e+00,
          7.1419e-01,  2.1296e-01, -3.8285e-02,  3.7121e-02,  8.4467e-02,
         -1.4177e-01, -7.1004e-03,  6.4388e-02,  1.7242e-01,  2.2910e-03,
          1.2449e-02, -3.3034e-01,  2.9191e-01,  1.9660e-01,  1.8127e-01,
          5.0927e-02,  1.8102e-01, -1.6148e-01,  2.1217e-01,  1.3405e-01,
          2.6791e-01, -2.9530e-02,  6.0215e-03,  6.3028e-01, -5.1304e-01,
         -9.7550e-02, -9.7822e-03,  8.4139e-02,  1.0320e-01, -3.0637e-02,
         -2.9127e-02,  4.8055e-02]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
514000 特征值优化 tensor(1.2691, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1162, -1.3265,  0.7528, -0.5573, -0.6048,  1.2438, -1.1753,  0.0584,
          2.3977, -1.3483,  0.7368,  0.2099, -0.0396, -0.0048,  0.1010, -0.1129,
          0.0172,  0.0792,  0.1782,  0.0174,  0.0160, -0.3258,  0.2712,  0.1947,
          0.1546,  0.0473,  0.1711, -0.1587,  0.2065,  0.1309,  0.2661, -0.0429,
         -0.0475,  0.6259, -0.5218, -0.0845, -0.0101,  0.0784,  0.0417, -0.0209,
         -0.0270,  0.0607]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
515000 特征值优化 tensor(1.2764, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1051e-01, -1.3275e+00,  7.5347e-01, -5.4673e-01, -5.9698e-01,
          1.1785e+00, -1.1693e+00,  8.2809e-02,  2.1204e+00, -1.2780e+00,
          7.3196e-01,  1.6211e-01, -3.9250e-02,  3.8978e-02,  8.6762e-02,
         -1.2333e-01,  8.7581e-03,  7.1799e-02,  1.7254e-01, -2.3971e-02,
          1.6979e-02, -3.2409e-01,  2.7571e-01,  1.8063e-01,  1.1237e-01,
          3.4233e-02,  1.4968e-01, -1.8040e-01,  2.1363e-01,  1.3188e-01,
          2.6476e-01, -4.3719e-02,  5.5483e-02,  6.1074e-01, -4.9837e-01,
         -6.0389e-02, -6.6464e-03,  7.8691e-02,  7.0799e-05,  4.1425e-02,
         -2.9239e-02,  1.2629e-02]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
516000 特征值优化 tensor(1.2578, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1190, -1.3148,  0.7448, -0.5366, -0.6015,  1.1993, -1.1730,  0.0362,
          1.9018, -1.1830,  0.7244,  0.1397, -0.0371,  0.0170,  0.0980, -0.1251,
          0.0260,  0.0631,  0.1715,  0.0109,  0.0140, -0.3237,  0.2840,  0.1825,
          0.0731,  0.0035,  0.1314, -0.1761,  0.2132,  0.1310,  0.2662, -0.0493,
         -0.0351,  0.6154, -0.4876, -0.0540, -0.0142,  0.0827, -0.0604,  0.0441,
         -0.0243,  0.0317]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
517000 特征值优化 tensor(1.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0848, -1.3342,  0.7307, -0.5363, -0.6067,  1.2115, -1.1661,  0.0837,
          1.7498, -1.1495,  0.7488,  0.0873, -0.0399,  0.0419,  0.0823, -0.1481,
         -0.0107,  0.0650,  0.1653, -0.0419,  0.0155, -0.3254,  0.2684,  0.1825,
          0.0748,  0.0110,  0.1499, -0.1641,  0.2132,  0.1315,  0.2691, -0.0367,
          0.0625,  0.6231, -0.4757, -0.0500, -0.0098,  0.0800, -0.0148,  0.0506,
         -0.0290, -0.0053]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
518000 特征值优化 tensor(1.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0925, -1.3322,  0.7275, -0.5367, -0.6189,  1.2074, -1.1661,  0.0180,
          1.6118, -1.0841,  0.7465,  0.0956, -0.0392, -0.0112,  0.1124, -0.1191,
          0.0165,  0.0773,  0.1737,  0.0314,  0.0151, -0.3262,  0.2847,  0.1812,
          0.0410, -0.0265,  0.1289, -0.1387,  0.2102,  0.1316,  0.2706, -0.0338,
         -0.0472,  0.6224, -0.4688, -0.0470, -0.0154,  0.0815, -0.0545,  0.0213,
         -0.0232,  0.0347]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
519000 特征值优化 tensor(1.2179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1127, -1.3164,  0.7313, -0.5492, -0.6168,  1.2241, -1.1735,  0.0406,
          1.4119, -1.0041,  0.7337,  0.0535, -0.0373,  0.0133,  0.1033, -0.1295,
         -0.0069,  0.0791,  0.1889, -0.0280,  0.0134, -0.3273,  0.2532,  0.1970,
          0.0187,  0.0079,  0.1451, -0.1511,  0.2099,  0.1326,  0.2692, -0.0302,
          0.0290,  0.6224, -0.4624, -0.0512, -0.0138,  0.0820, -0.0069,  0.0344,
         -0.0254,  0.0089]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
520000 特征值优化 tensor(1.2206, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0993, -1.3241,  0.7236, -0.5295, -0.6230,  1.2228, -1.1605,  0.0069,
          1.3342, -0.9836,  0.7303,  0.0513, -0.0384,  0.0097,  0.0986, -0.1366,
         -0.0046,  0.0775,  0.1742,  0.0243,  0.0148, -0.3250,  0.2735,  0.1880,
          0.0181, -0.0130,  0.1374, -0.1338,  0.2111,  0.1303,  0.2701, -0.0301,
         -0.0231,  0.6240, -0.4545, -0.0409, -0.0161,  0.0832, -0.0282,  0.0250,
         -0.0229,  0.0293]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
521000 特征值优化 tensor(1.2253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1126, -1.3290,  0.7328, -0.5427, -0.6107,  1.2199, -1.1689,  0.0255,
          1.3113, -0.9725,  0.7263,  0.0568, -0.0386,  0.0037,  0.1132, -0.1302,
          0.0035,  0.0734,  0.1768, -0.0236,  0.0139, -0.3242,  0.2428,  0.2232,
          0.0300,  0.0037,  0.1455, -0.1311,  0.2105,  0.1293,  0.2680, -0.0279,
          0.0221,  0.6220, -0.4567, -0.0499, -0.0147,  0.0828, -0.0023,  0.0282,
         -0.0240,  0.0147]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
522000 特征值优化 tensor(1.2292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1155, -1.3222,  0.7382, -0.5317, -0.6099,  1.2206, -1.1541,  0.0144,
          1.2997, -0.9817,  0.7217,  0.0560, -0.0378,  0.0305,  0.0896, -0.1458,
         -0.0054,  0.0659,  0.1711,  0.0081,  0.0128, -0.3231,  0.2690,  0.1987,
          0.0164, -0.0198,  0.1308, -0.1247,  0.2139,  0.1299,  0.2685, -0.0300,
          0.0033,  0.6206, -0.4526, -0.0408, -0.0156,  0.0844, -0.0133,  0.0305,
         -0.0233,  0.0205]], device='cuda:0') tensor(0.2201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
523000 特征值优化 tensor(1.2313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1725e-01, -1.3137e+00,  7.3697e-01, -5.3397e-01, -6.0757e-01,
          1.2352e+00, -1.1618e+00,  2.4008e-02,  1.3088e+00, -9.7912e-01,
          7.2233e-01,  8.1733e-02, -3.6748e-02,  1.9237e-03,  1.1369e-01,
         -1.2795e-01,  6.9065e-03,  7.6918e-02,  1.8645e-01, -1.3173e-02,
          1.2672e-02, -3.2428e-01,  2.5273e-01,  2.1543e-01,  3.3461e-02,
          2.6113e-04,  1.4577e-01, -1.3184e-01,  2.1299e-01,  1.3064e-01,
          2.6753e-01, -2.8729e-02,  3.2282e-03,  6.2397e-01, -4.5810e-01,
         -5.2689e-02, -1.5255e-02,  8.4123e-02, -1.1630e-02,  2.5972e-02,
         -2.3532e-02,  2.1723e-02]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
524000 特征值优化 tensor(1.2402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1214, -1.3151,  0.7397, -0.5262, -0.5963,  1.2344, -1.1604,  0.0154,
          1.3009, -0.9943,  0.7160,  0.0752, -0.0370,  0.0368,  0.0843, -0.1504,
          0.0015,  0.0582,  0.1731,  0.0034,  0.0127, -0.3224,  0.2712,  0.1970,
          0.0210, -0.0198,  0.1306, -0.1269,  0.2141,  0.1302,  0.2656, -0.0386,
          0.0145,  0.6238, -0.4525, -0.0469, -0.0149,  0.0847, -0.0094,  0.0350,
         -0.0236,  0.0173]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
525000 特征值优化 tensor(1.2440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1233, -1.3057,  0.7391, -0.5302, -0.5942,  1.2279, -1.1627,  0.0037,
          1.2969, -0.9882,  0.7214,  0.0951, -0.0355,  0.0051,  0.1094, -0.1209,
          0.0144,  0.0751,  0.1827, -0.0039,  0.0118, -0.3230,  0.2522,  0.2093,
          0.0238,  0.0049,  0.1437, -0.1401,  0.2147,  0.1303,  0.2661, -0.0402,
         -0.0155,  0.6220, -0.4561, -0.0537, -0.0166,  0.0840, -0.0153,  0.0219,
         -0.0221,  0.0297]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
526000 特征值优化 tensor(1.2956, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0907, -1.3226,  0.7307, -0.5390, -0.5905,  1.2119, -1.1710,  0.0498,
          1.2650, -1.0037,  0.7490,  0.0683, -0.0396,  0.0305,  0.1027, -0.1426,
          0.0014,  0.0635,  0.1595, -0.0443,  0.0171, -0.3244,  0.2459,  0.2103,
          0.0180, -0.0106,  0.1311, -0.1191,  0.2085,  0.1298,  0.2659, -0.0401,
          0.0717,  0.6171, -0.4504, -0.0454, -0.0107,  0.0770,  0.0178,  0.0497,
         -0.0253,  0.0095]], device='cuda:0') tensor(0.2202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
527000 特征值优化 tensor(1.2676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1114, -1.3187,  0.7281, -0.5258, -0.5969,  1.2422, -1.1757,  0.0031,
          1.2903, -0.9999,  0.7433,  0.1088, -0.0378,  0.0020,  0.1037, -0.1130,
          0.0235,  0.0741,  0.1875,  0.0169,  0.0167, -0.3218,  0.2606,  0.2021,
          0.0112, -0.0032,  0.1302, -0.1447,  0.2119,  0.1273,  0.2664, -0.0453,
         -0.0484,  0.6242, -0.4516, -0.0469, -0.0138,  0.0784, -0.0193,  0.0255,
         -0.0216,  0.0486]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
528000 特征值优化 tensor(1.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0927, -1.3418,  0.7242, -0.5289, -0.5975,  1.2217, -1.1696,  0.0644,
          1.2571, -1.0138,  0.7521,  0.0774, -0.0408,  0.0149,  0.1109, -0.1495,
         -0.0072,  0.0615,  0.1594, -0.0518,  0.0146, -0.3207,  0.2360,  0.2198,
          0.0260, -0.0032,  0.1377, -0.1259,  0.2122,  0.1271,  0.2681, -0.0347,
          0.0708,  0.6205, -0.4515, -0.0545, -0.0115,  0.0802,  0.0123,  0.0398,
         -0.0274, -0.0022]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
529000 特征值优化 tensor(1.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0997, -1.3238,  0.7262, -0.5358, -0.6208,  1.2190, -1.1643,  0.0242,
          1.2587, -1.0081,  0.7425,  0.1037, -0.0386, -0.0060,  0.0999, -0.1330,
         -0.0060,  0.0818,  0.1833,  0.0169,  0.0147, -0.3252,  0.2732,  0.1928,
          0.0098, -0.0187,  0.1354, -0.1325,  0.2101,  0.1313,  0.2705, -0.0341,
         -0.0294,  0.6256, -0.4504, -0.0505, -0.0145,  0.0819, -0.0276,  0.0209,
         -0.0239,  0.0319]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
530000 特征值优化 tensor(1.2218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0755e-01, -1.3249e+00,  7.2702e-01, -5.4252e-01, -6.1144e-01,
          1.2281e+00, -1.1698e+00,  5.8065e-02,  1.2574e+00, -1.0084e+00,
          7.3007e-01,  1.0969e-01, -3.8591e-02,  6.1140e-03,  1.0964e-01,
         -1.3052e-01, -3.5563e-04,  7.0980e-02,  1.7605e-01, -2.6208e-02,
          1.4029e-02, -3.2658e-01,  2.4089e-01,  2.2208e-01,  2.1454e-02,
         -3.7413e-03,  1.4540e-01, -1.3236e-01,  2.0952e-01,  1.3106e-01,
          2.6830e-01, -2.8819e-02,  2.9230e-02,  6.2371e-01, -4.5521e-01,
         -6.2130e-02, -1.2128e-02,  8.2298e-02, -2.9713e-03,  3.1104e-02,
         -2.6458e-02,  1.1241e-02]], device='cuda:0') tensor(0.2069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
531000 特征值优化 tensor(1.2198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1059, -1.3223,  0.7275, -0.5299, -0.6253,  1.2213, -1.1612,  0.0301,
          1.2484, -1.0151,  0.7296,  0.1148, -0.0383,  0.0076,  0.0958, -0.1399,
         -0.0097,  0.0768,  0.1742,  0.0147,  0.0140, -0.3253,  0.2731,  0.1930,
          0.0171, -0.0175,  0.1364, -0.1323,  0.2112,  0.1289,  0.2703, -0.0313,
         -0.0171,  0.6220, -0.4511, -0.0552, -0.0142,  0.0833, -0.0217,  0.0271,
         -0.0249,  0.0255]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
532000 特征值优化 tensor(1.2338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1174, -1.3147,  0.7406, -0.5360, -0.6091,  1.2362, -1.1607,  0.0293,
          1.2615, -1.0097,  0.7219,  0.1391, -0.0367,  0.0077,  0.1109, -0.1242,
          0.0156,  0.0793,  0.1912, -0.0100,  0.0127, -0.3251,  0.2590,  0.2088,
          0.0186, -0.0024,  0.1441, -0.1431,  0.2136,  0.1313,  0.2683, -0.0298,
         -0.0088,  0.6249, -0.4568, -0.0656, -0.0149,  0.0843, -0.0146,  0.0246,
         -0.0239,  0.0234]], device='cuda:0') tensor(0.2150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
533000 特征值优化 tensor(1.2403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1213, -1.3173,  0.7390, -0.5289, -0.5966,  1.2330, -1.1581,  0.0109,
          1.2558, -1.0261,  0.7148,  0.1297, -0.0374,  0.0364,  0.0837, -0.1450,
          0.0044,  0.0648,  0.1753,  0.0042,  0.0123, -0.3223,  0.2682,  0.1963,
          0.0143, -0.0204,  0.1298, -0.1285,  0.2142,  0.1297,  0.2663, -0.0381,
          0.0120,  0.6241, -0.4522, -0.0594, -0.0158,  0.0852, -0.0093,  0.0348,
         -0.0232,  0.0171]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
534000 特征值优化 tensor(1.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0823, -1.3299,  0.7231, -0.5279, -0.6069,  1.2501, -1.1697, -0.0457,
          1.2508, -1.0433,  0.7531,  0.1447, -0.0390, -0.0195,  0.1117, -0.1052,
          0.0248,  0.0932,  0.1962,  0.0400,  0.0161, -0.3242,  0.2754,  0.1814,
          0.0132, -0.0207,  0.1366, -0.1361,  0.2123,  0.1298,  0.2693, -0.0338,
         -0.0635,  0.6308, -0.4503, -0.0470, -0.0209,  0.0807, -0.0405,  0.0170,
         -0.0180,  0.0430]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
535000 特征值优化 tensor(1.2945, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.3355e-02, -1.3316e+00,  7.2755e-01, -5.3256e-01, -5.9974e-01,
          1.2280e+00, -1.1726e+00,  1.6254e-02,  1.2281e+00, -1.0477e+00,
          7.5768e-01,  1.2014e-01, -3.8287e-02,  1.3139e-02,  1.1110e-01,
         -1.4911e-01, -1.0377e-03,  6.6865e-02,  1.6345e-01, -4.9648e-02,
          1.7020e-02, -3.2568e-01,  2.4213e-01,  2.1025e-01,  2.3757e-02,
         -7.0979e-03,  1.3820e-01, -1.2904e-01,  2.1198e-01,  1.3092e-01,
          2.6825e-01, -3.5043e-02,  6.5110e-02,  6.2562e-01, -4.4865e-01,
         -5.6228e-02, -1.5814e-02,  7.9797e-02,  1.1425e-02,  4.0108e-02,
         -2.2415e-02, -1.6563e-03]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
536000 特征值优化 tensor(1.2905, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0863, -1.3294,  0.7254, -0.5288, -0.6052,  1.2469, -1.1709, -0.0428,
          1.2328, -1.0472,  0.7587,  0.1528, -0.0387, -0.0176,  0.1132, -0.1123,
          0.0161,  0.0967,  0.1959,  0.0379,  0.0161, -0.3241,  0.2755,  0.1809,
          0.0109, -0.0212,  0.1346, -0.1331,  0.2140,  0.1298,  0.2694, -0.0360,
         -0.0621,  0.6301, -0.4490, -0.0485, -0.0201,  0.0791, -0.0385,  0.0163,
         -0.0187,  0.0433]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
537000 特征值优化 tensor(1.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.5857e-02, -1.3282e+00,  7.2827e-01, -5.3252e-01, -6.0290e-01,
          1.2321e+00, -1.1703e+00,  1.8402e-02,  1.2230e+00, -1.0537e+00,
          7.5799e-01,  1.3312e-01, -3.8754e-02,  9.6156e-03,  1.1158e-01,
         -1.4431e-01,  4.5511e-03,  6.6295e-02,  1.6414e-01, -4.3374e-02,
          1.5313e-02, -3.2580e-01,  2.4320e-01,  2.1300e-01,  2.4102e-02,
         -6.1864e-03,  1.3973e-01, -1.3289e-01,  2.1393e-01,  1.3149e-01,
          2.6906e-01, -3.5961e-02,  5.2597e-02,  6.2378e-01, -4.5065e-01,
         -6.6434e-02, -1.5295e-02,  7.9975e-02,  8.7699e-03,  3.6548e-02,
         -2.3195e-02,  9.5970e-05]], device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
538000 特征值优化 tensor(1.2111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0913, -1.3304,  0.7178, -0.5253, -0.6155,  1.2439, -1.1638, -0.0431,
          1.2303, -1.0503,  0.7463,  0.1635, -0.0390, -0.0077,  0.1012, -0.1227,
          0.0056,  0.0867,  0.1927,  0.0303,  0.0153, -0.3232,  0.2748,  0.1821,
          0.0108, -0.0211,  0.1371, -0.1328,  0.2093,  0.1288,  0.2700, -0.0341,
         -0.0473,  0.6304, -0.4506, -0.0579, -0.0208,  0.0812, -0.0346,  0.0218,
         -0.0182,  0.0358]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
539000 特征值优化 tensor(1.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.6984e-02, -1.3278e+00,  7.2965e-01, -5.3949e-01, -6.0863e-01,
          1.2379e+00, -1.1723e+00,  3.6906e-03,  1.2185e+00, -1.0465e+00,
          7.4503e-01,  1.5812e-01, -3.9126e-02,  3.5135e-03,  1.1517e-01,
         -1.3953e-01,  2.0639e-03,  7.0301e-02,  1.6894e-01, -3.4229e-02,
          1.4506e-02, -3.2652e-01,  2.4645e-01,  2.1495e-01,  2.1746e-02,
         -8.1867e-03,  1.4321e-01, -1.3399e-01,  2.1051e-01,  1.3209e-01,
          2.6920e-01, -3.1706e-02,  4.0986e-02,  6.2545e-01, -4.5371e-01,
         -7.2346e-02, -1.6510e-02,  8.1115e-02,  5.5657e-04,  3.5148e-02,
         -2.2175e-02,  5.4771e-03]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
540000 特征值优化 tensor(1.2144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.4772e-02, -1.3295e+00,  7.1841e-01, -5.2628e-01, -6.2022e-01,
          1.2420e+00, -1.1628e+00, -3.8881e-02,  1.2222e+00, -1.0524e+00,
          7.4097e-01,  1.7584e-01, -3.9351e-02, -6.0776e-04,  1.0212e-01,
         -1.2792e-01,  3.4074e-03,  8.1808e-02,  1.8269e-01,  2.5578e-02,
          1.5275e-02, -3.2397e-01,  2.7693e-01,  1.8438e-01,  8.1235e-03,
         -2.1591e-02,  1.3666e-01, -1.3559e-01,  2.0902e-01,  1.2945e-01,
          2.7015e-01, -3.2772e-02, -3.9290e-02,  6.2931e-01, -4.5139e-01,
         -6.5787e-02, -1.9828e-02,  8.2073e-02, -3.1359e-02,  2.4683e-02,
         -1.8635e-02,  3.1844e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
541000 特征值优化 tensor(1.2191, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0436e-01, -1.3271e+00,  7.2965e-01, -5.4565e-01, -6.1502e-01,
          1.2277e+00, -1.1708e+00,  2.7468e-03,  1.2036e+00, -1.0431e+00,
          7.3397e-01,  1.7291e-01, -3.8731e-02,  2.3239e-03,  1.1153e-01,
         -1.3439e-01,  2.1403e-03,  7.2961e-02,  1.7430e-01, -2.7920e-02,
          1.4285e-02, -3.2735e-01,  2.4535e-01,  2.2235e-01,  2.4466e-02,
         -1.0450e-02,  1.4680e-01, -1.2776e-01,  2.1024e-01,  1.3189e-01,
          2.6881e-01, -2.9413e-02,  2.7797e-02,  6.2170e-01, -4.5372e-01,
         -7.6833e-02, -1.6750e-02,  8.2409e-02, -1.2890e-03,  3.0800e-02,
         -2.1732e-02,  9.5694e-03]], device='cuda:0') tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
542000 特征值优化 tensor(1.2208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1103, -1.3282,  0.7341, -0.5284, -0.6255,  1.2180, -1.1616, -0.0139,
          1.1881, -1.0501,  0.7281,  0.1743, -0.0392,  0.0124,  0.0948, -0.1451,
         -0.0089,  0.0725,  0.1687,  0.0145,  0.0137, -0.3224,  0.2742,  0.1914,
          0.0152, -0.0168,  0.1338, -0.1335,  0.2136,  0.1287,  0.2704, -0.0323,
         -0.0112,  0.6224, -0.4496, -0.0686, -0.0181,  0.0835, -0.0193,  0.0295,
         -0.0207,  0.0227]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
543000 特征值优化 tensor(1.2285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1145, -1.3171,  0.7325, -0.5362, -0.6098,  1.2290, -1.1641,  0.0165,
          1.1874, -1.0383,  0.7239,  0.1876, -0.0373,  0.0051,  0.1097, -0.1311,
          0.0034,  0.0754,  0.1849, -0.0164,  0.0130, -0.3273,  0.2484,  0.2186,
          0.0235, -0.0078,  0.1476, -0.1346,  0.2101,  0.1305,  0.2684, -0.0286,
          0.0116,  0.6241, -0.4536, -0.0784, -0.0158,  0.0839, -0.0060,  0.0287,
         -0.0229,  0.0152]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
544000 特征值优化 tensor(1.2328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1174, -1.3168,  0.7355, -0.5283, -0.6042,  1.2335, -1.1551,  0.0036,
          1.1849, -1.0520,  0.7179,  0.1862, -0.0371,  0.0331,  0.0889, -0.1484,
         -0.0031,  0.0621,  0.1739,  0.0074,  0.0129, -0.3236,  0.2717,  0.1963,
          0.0139, -0.0222,  0.1296, -0.1289,  0.2139,  0.1302,  0.2678, -0.0304,
          0.0030,  0.6246, -0.4508, -0.0711, -0.0161,  0.0853, -0.0108,  0.0342,
         -0.0227,  0.0161]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
545000 特征值优化 tensor(1.2456, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1242, -1.3096,  0.7409, -0.5307, -0.5986,  1.2363, -1.1637, -0.0057,
          1.1890, -1.0476,  0.7221,  0.2079, -0.0360,  0.0101,  0.1044, -0.1216,
          0.0215,  0.0779,  0.1832, -0.0019,  0.0121, -0.3231,  0.2598,  0.2035,
          0.0134, -0.0059,  0.1420, -0.1433,  0.2144,  0.1304,  0.2665, -0.0445,
         -0.0233,  0.6241, -0.4527, -0.0795, -0.0170,  0.0839, -0.0185,  0.0253,
         -0.0211,  0.0273]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
546000 特征值优化 tensor(1.2538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1181, -1.3109,  0.7388, -0.5242, -0.5882,  1.2305, -1.1744,  0.0096,
          1.1819, -1.0628,  0.7211,  0.1946, -0.0358,  0.0334,  0.0866, -0.1440,
          0.0063,  0.0582,  0.1712, -0.0071,  0.0136, -0.3226,  0.2700,  0.1969,
          0.0085, -0.0265,  0.1250, -0.1296,  0.2138,  0.1310,  0.2655, -0.0478,
          0.0336,  0.6218, -0.4491, -0.0719, -0.0159,  0.0837,  0.0014,  0.0399,
         -0.0222,  0.0093]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
547000 特征值优化 tensor(1.2855, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0900, -1.3249,  0.7278, -0.5305, -0.6045,  1.2394, -1.1726, -0.0372,
          1.1783, -1.0684,  0.7613,  0.2198, -0.0393, -0.0119,  0.1096, -0.1121,
          0.0213,  0.0889,  0.1919,  0.0386,  0.0176, -0.3220,  0.2692,  0.1895,
          0.0031, -0.0202,  0.1342, -0.1416,  0.2105,  0.1275,  0.2673, -0.0396,
         -0.0613,  0.6300, -0.4456, -0.0650, -0.0163,  0.0767, -0.0303,  0.0253,
         -0.0195,  0.0490]], device='cuda:0') tensor(0.2156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
548000 特征值优化 tensor(1.2113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.7993e-02, -1.3327e+00,  7.2871e-01, -5.3609e-01, -6.0229e-01,
          1.2267e+00, -1.1661e+00,  1.9570e-02,  1.1578e+00, -1.0723e+00,
          7.4605e-01,  1.9627e-01, -3.9730e-02,  1.5699e-02,  1.0849e-01,
         -1.4511e-01,  1.3948e-04,  6.5808e-02,  1.6426e-01, -4.8349e-02,
          1.5311e-02, -3.2645e-01,  2.3630e-01,  2.1789e-01,  2.1509e-02,
         -1.0830e-02,  1.4025e-01, -1.2951e-01,  2.1149e-01,  1.3207e-01,
          2.6866e-01, -3.1984e-02,  6.0148e-02,  6.2552e-01, -4.4823e-01,
         -7.5142e-02, -1.5331e-02,  8.1952e-02,  9.9088e-03,  3.8435e-02,
         -2.3211e-02, -1.0938e-03]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
549000 特征值优化 tensor(1.2113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0940, -1.3287,  0.7221, -0.5294, -0.6142,  1.2432, -1.1650, -0.0253,
          1.1632, -1.0727,  0.7462,  0.2214, -0.0388, -0.0084,  0.1049, -0.1214,
          0.0046,  0.0864,  0.1932,  0.0260,  0.0147, -0.3250,  0.2757,  0.1850,
          0.0047, -0.0256,  0.1347, -0.1332,  0.2102,  0.1301,  0.2699, -0.0335,
         -0.0460,  0.6305, -0.4493, -0.0726, -0.0190,  0.0820, -0.0304,  0.0227,
         -0.0200,  0.0340]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
550000 特征值优化 tensor(1.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1073, -1.3255,  0.7307, -0.5423, -0.6252,  1.2355, -1.1674,  0.0049,
          1.1594, -1.0634,  0.7306,  0.2247, -0.0386,  0.0080,  0.1041, -0.1344,
          0.0016,  0.0783,  0.1805, -0.0227,  0.0142, -0.3268,  0.2524,  0.2142,
          0.0214, -0.0137,  0.1456, -0.1340,  0.2116,  0.1318,  0.2701, -0.0308,
          0.0179,  0.6253, -0.4536, -0.0878, -0.0163,  0.0827, -0.0056,  0.0309,
         -0.0218,  0.0095]], device='cuda:0') tensor(0.2158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
551000 特征值优化 tensor(1.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1093, -1.3194,  0.7316, -0.5276, -0.6193,  1.2199, -1.1555, -0.0145,
          1.1435, -1.0756,  0.7243,  0.2194, -0.0373,  0.0238,  0.0901, -0.1478,
         -0.0100,  0.0723,  0.1716,  0.0127,  0.0137, -0.3244,  0.2694,  0.1928,
          0.0115, -0.0238,  0.1334, -0.1300,  0.2138,  0.1296,  0.2690, -0.0307,
         -0.0018,  0.6211, -0.4468, -0.0751, -0.0176,  0.0840, -0.0124,  0.0319,
         -0.0212,  0.0182]], device='cuda:0') tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
552000 特征值优化 tensor(1.2337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1205, -1.3122,  0.7354, -0.5319, -0.6036,  1.2286, -1.1570,  0.0132,
          1.1409, -1.0569,  0.7218,  0.2395, -0.0367,  0.0051,  0.1089, -0.1271,
          0.0062,  0.0775,  0.1899, -0.0107,  0.0124, -0.3246,  0.2542,  0.2160,
          0.0231, -0.0083,  0.1476, -0.1402,  0.2133,  0.1310,  0.2676, -0.0284,
          0.0013,  0.6230, -0.4515, -0.0881, -0.0160,  0.0849, -0.0074,  0.0272,
         -0.0225,  0.0192]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
553000 特征值优化 tensor(1.2465, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2053e-01, -1.3125e+00,  7.3923e-01, -5.2861e-01, -5.9000e-01,
          1.2237e+00, -1.1620e+00,  2.0928e-02,  1.1349e+00, -1.0744e+00,
          7.1900e-01,  2.2658e-01, -3.6256e-02,  3.7919e-02,  8.1902e-02,
         -1.4551e-01,  6.8210e-03,  5.7010e-02,  1.7353e-01, -1.9894e-03,
          1.2664e-02, -3.2306e-01,  2.6846e-01,  2.0034e-01,  1.1909e-02,
         -3.1707e-02,  1.2658e-01, -1.2343e-01,  2.1408e-01,  1.3064e-01,
          2.6605e-01, -4.4922e-02,  2.6287e-02,  6.2087e-01, -4.4666e-01,
         -7.8322e-02, -1.4604e-02,  8.4165e-02,  5.0701e-04,  3.6549e-02,
         -2.4130e-02,  8.4895e-03]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
554000 特征值优化 tensor(1.2476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2357e-01, -1.3084e+00,  7.3833e-01, -5.2694e-01, -5.9449e-01,
          1.2208e+00, -1.1682e+00,  9.9270e-03,  1.1346e+00, -1.0655e+00,
          7.2239e-01,  2.5046e-01, -3.6165e-02, -9.8257e-05,  1.0618e-01,
         -1.2199e-01,  2.0259e-02,  7.0218e-02,  1.7876e-01, -3.8433e-03,
          1.2495e-02, -3.2228e-01,  2.5356e-01,  2.0769e-01,  1.5454e-02,
         -8.3457e-03,  1.4126e-01, -1.3419e-01,  2.1404e-01,  1.2961e-01,
          2.6640e-01, -4.3495e-02, -1.8677e-02,  6.2189e-01, -4.5038e-01,
         -8.5839e-02, -1.5917e-02,  8.3326e-02, -1.3183e-02,  2.8010e-02,
         -2.2601e-02,  2.7683e-02]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
555000 特征值优化 tensor(3.9182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5074,  1.3532,  1.7219,  1.1504,  0.2453,  1.0695,  0.6254,  0.4613,
         -1.2228, -0.5676,  1.3877, -0.4068, -0.5663, -0.0518, -0.0834, -0.0187,
         -0.0737,  0.5078,  0.2344,  0.0364, -0.5402,  0.0032, -0.2164, -0.6397,
          1.0289, -0.1952, -0.0126, -0.1187,  0.0366, -0.7142,  0.0560, -0.5159,
          0.1018, -0.0417, -0.3053, -0.4237, -0.0404,  0.1996,  0.1338,  0.0675,
          0.1609,  0.1538]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
556000 特征值优化 tensor(1.1978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1501e+00,  9.5879e-01,  8.0136e-01,  4.3881e-01,  1.0623e+00,
          1.4012e+00,  8.1702e-01,  7.0364e-01, -8.1150e-01, -4.0431e-01,
          6.9150e-01, -2.8624e-01, -1.0506e-01,  3.7292e-02, -6.6935e-02,
          1.3934e-01, -5.2862e-02,  1.8502e-01,  2.1550e-01, -4.8737e-02,
         -1.7344e-01,  9.2488e-02,  1.4668e-02, -2.0853e-01,  3.9863e-01,
          6.4502e-03, -1.9022e-01, -1.7986e-01,  4.5330e-04, -3.6835e-01,
         -2.2521e-02, -3.4394e-01,  1.7030e-01,  6.9979e-03, -1.5823e-01,
         -2.1084e-01, -8.9229e-02,  1.7468e-01,  7.8617e-02, -1.2117e-02,
          1.5691e-01,  1.1545e-01]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
557000 特征值优化 tensor(1.0229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3624,  1.0078,  0.6076,  0.2894,  1.5457,  1.6929,  0.9068,  1.1148,
         -0.6903, -0.5258,  0.7270, -0.1295, -0.0687, -0.0514, -0.0556,  0.0211,
         -0.0824,  0.1060,  0.1965, -0.0583, -0.2093,  0.0404,  0.0364, -0.0301,
          0.2686,  0.0623, -0.2118, -0.2201,  0.0232, -0.2611, -0.0227, -0.3578,
          0.2141,  0.0203, -0.1917, -0.2699, -0.1040,  0.1305,  0.0773, -0.0070,
          0.1881,  0.1173]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
558000 特征值优化 tensor(0.9429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3693e+00,  9.5322e-01,  3.6290e-01,  5.9289e-01,  1.5268e+00,
          1.5751e+00,  9.4426e-01,  1.6392e+00, -3.6019e-01, -8.5220e-01,
          6.7632e-01,  4.9527e-01, -6.8395e-02, -2.6066e-02, -3.1672e-02,
          2.5157e-02, -2.7600e-02,  1.6982e-02, -1.8023e-03,  8.8461e-03,
         -2.0810e-01,  2.0747e-02, -7.1784e-02,  1.1234e-02,  1.3747e-01,
          9.3124e-02, -9.6354e-02, -2.0452e-01, -8.4964e-03, -2.4944e-01,
         -2.3454e-02, -3.5806e-01,  1.2000e-01, -1.5335e-02, -2.3580e-01,
         -2.8511e-01, -1.2689e-02, -9.9358e-04,  1.1727e-01, -6.6494e-02,
         -3.0887e-02,  1.6003e-01]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
559000 特征值优化 tensor(0.8087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3526,  1.0065,  0.2013,  0.6875,  1.5419,  1.4948,  0.9923,  1.9729,
         -0.0726, -0.8016,  0.6391,  0.8971, -0.0646, -0.0445, -0.0293, -0.0397,
         -0.0456, -0.0213,  0.0546, -0.0369, -0.2028,  0.0180, -0.0715,  0.0125,
          0.0219,  0.0660, -0.1115, -0.2255,  0.0411, -0.2565, -0.0222, -0.3273,
          0.1423, -0.0153, -0.2932, -0.1933, -0.0624, -0.0260,  0.1084, -0.0880,
         -0.0071,  0.2499]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
560000 特征值优化 tensor(0.8131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3566,  0.9734,  0.1927,  0.6747,  1.5442,  1.4894,  1.1138,  2.0671,
         -0.0728, -0.8647,  0.7632,  0.9882, -0.0638,  0.0147,  0.0270,  0.0228,
          0.0323,  0.0199, -0.0297,  0.0117, -0.2038,  0.0188, -0.1042,  0.0454,
          0.0163,  0.0435, -0.1433, -0.2022,  0.0492, -0.2559, -0.0216, -0.3359,
          0.1513, -0.0144, -0.2955, -0.2057, -0.0617, -0.0579,  0.1321, -0.0986,
         -0.0717,  0.2263]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
561000 特征值优化 tensor(0.8163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3546,  0.9621,  0.1977,  0.6823,  1.5383,  1.4745,  1.2083,  2.1657,
         -0.0103, -0.9667,  0.8491,  1.0767, -0.0666, -0.0320, -0.0408, -0.0444,
         -0.0342, -0.0610,  0.0264, -0.0163, -0.2073,  0.0191, -0.0684,  0.0146,
          0.0266,  0.0629, -0.1352, -0.2399,  0.0465, -0.2552, -0.0217, -0.3496,
          0.1584, -0.0128, -0.2930, -0.2181, -0.0769, -0.0651,  0.1050, -0.0862,
         -0.0743,  0.2711]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
562000 特征值优化 tensor(0.8144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3559,  0.9613,  0.1932,  0.6789,  1.5405,  1.4817,  1.3030,  2.2372,
          0.0049, -0.9728,  0.9233,  1.1413, -0.0638, -0.0024,  0.0200,  0.0153,
          0.0341,  0.0057, -0.0463,  0.0033, -0.2043,  0.0181, -0.0880,  0.0283,
          0.0365,  0.0413, -0.1638, -0.2253,  0.0488, -0.2564, -0.0220, -0.3501,
          0.1674, -0.0136, -0.3033, -0.2253, -0.0801, -0.0724,  0.1448, -0.1184,
         -0.0841,  0.2497]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
563000 特征值优化 tensor(0.8147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3433,  0.9615,  0.1972,  0.6820,  1.5382,  1.4724,  1.3795,  2.3158,
          0.0426, -1.0218,  0.9813,  1.1484, -0.0671, -0.0113, -0.0240, -0.0321,
         -0.0040, -0.0432,  0.0074, -0.0052, -0.2041,  0.0184, -0.0696,  0.0244,
          0.0247,  0.0523, -0.1523, -0.2296,  0.0460, -0.2555, -0.0217, -0.3648,
          0.1706, -0.0130, -0.2971, -0.2273, -0.0768, -0.0755,  0.1192, -0.1032,
         -0.0938,  0.2812]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
564000 特征值优化 tensor(0.8195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3387e+00,  9.5238e-01,  1.9918e-01,  6.8287e-01,  1.5401e+00,
          1.4707e+00,  1.4401e+00,  2.3874e+00,  6.5757e-02, -1.0330e+00,
          1.0312e+00,  1.2236e+00, -6.7172e-02, -5.3552e-03,  9.3983e-03,
          2.1315e-02,  2.2898e-02, -3.8770e-04, -3.1509e-02,  1.5223e-03,
         -2.0522e-01,  1.7147e-02, -7.3108e-02,  2.4067e-02,  3.5236e-02,
          4.4561e-02, -1.6201e-01, -2.2625e-01,  5.1013e-02, -2.5754e-01,
         -2.2007e-02, -3.6000e-01,  1.7878e-01, -1.2473e-02, -3.0862e-01,
         -2.3542e-01, -9.3419e-02, -7.8409e-02,  1.4207e-01, -1.2472e-01,
         -8.8391e-02,  2.6240e-01]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
565000 特征值优化 tensor(0.8041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3654,  0.9840,  0.1919,  0.6837,  1.5366,  1.4740,  1.5366,  2.4125,
          0.0427, -1.0875,  1.0998,  1.2631, -0.0668, -0.0088, -0.0130,  0.0628,
          0.0399, -0.0114, -0.0890,  0.0343, -0.2053,  0.0169, -0.0992,  0.0486,
          0.0365,  0.0394, -0.1736, -0.2144,  0.0541, -0.2586, -0.0215, -0.3544,
          0.1811, -0.0127, -0.3062, -0.2404, -0.0770, -0.0900,  0.1646, -0.1281,
         -0.1124,  0.2358]], device='cuda:0') tensor(0.2202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
566000 特征值优化 tensor(0.8073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3387,  0.9885,  0.1983,  0.6872,  1.5397,  1.4704,  1.5634,  2.4899,
          0.0964, -1.1271,  1.1189,  1.2453, -0.0620, -0.0896, -0.0998, -0.0343,
         -0.0310, -0.0336,  0.0104, -0.0114, -0.2027,  0.0176, -0.1069,  0.0416,
          0.0063,  0.0249, -0.1946, -0.2104,  0.0780, -0.2577, -0.0217, -0.3710,
          0.1826, -0.0125, -0.3055, -0.2342, -0.1128, -0.0891,  0.1135, -0.0990,
         -0.0928,  0.2972]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
567000 特征值优化 tensor(0.8816, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3531e+00,  1.0040e+00,  1.8919e-01,  6.7903e-01,  1.5350e+00,
          1.4638e+00,  1.6311e+00,  2.5300e+00,  1.0728e-01, -1.1488e+00,
          1.1745e+00,  1.2663e+00, -6.2287e-02, -7.0346e-02, -6.8022e-02,
         -2.5954e-02, -2.1472e-02, -4.5858e-02, -2.2203e-03, -1.2782e-02,
         -2.0437e-01,  1.6304e-02, -9.1528e-02,  3.5732e-02,  1.0919e-02,
          1.8405e-02, -1.7478e-01, -2.3656e-01,  7.1501e-02, -2.5413e-01,
         -2.1156e-02, -3.7528e-01,  1.8781e-01, -1.0586e-02, -3.0584e-01,
         -2.4117e-01, -1.1410e-01, -9.5420e-02,  1.0898e-01, -1.0023e-01,
         -9.6520e-02,  2.9160e-01]], device='cuda:0') tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
568000 特征值优化 tensor(0.7952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3707e+00,  1.0073e+00,  2.1047e-01,  6.7875e-01,  1.5359e+00,
          1.4647e+00,  1.7078e+00,  2.5586e+00,  1.2154e-01, -1.1650e+00,
          1.2324e+00,  1.2787e+00, -6.5565e-02, -7.1657e-02, -7.4436e-02,
         -9.3941e-04, -2.7554e-02, -7.6568e-02, -3.6247e-02, -3.2590e-02,
         -2.0565e-01,  1.7432e-02, -1.0364e-01,  3.9709e-02,  6.4788e-03,
          3.0043e-02, -1.8135e-01, -2.2942e-01,  5.2527e-02, -2.5734e-01,
         -2.1208e-02, -3.7108e-01,  1.9393e-01, -1.1945e-02, -3.1328e-01,
         -2.3843e-01, -1.1433e-01, -1.0047e-01,  1.1528e-01, -9.9705e-02,
         -1.0169e-01,  2.9669e-01]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
569000 特征值优化 tensor(0.8041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3686,  0.9979,  0.1925,  0.6781,  1.5399,  1.4685,  1.7474,  2.6105,
          0.1344, -1.1655,  1.2661,  1.2867, -0.0655, -0.0538, -0.0678, -0.0297,
          0.0219, -0.0324, -0.0320, -0.0154, -0.2025,  0.0215, -0.0957,  0.0297,
          0.0356,  0.0297, -0.1843, -0.2329,  0.0473, -0.2539, -0.0218, -0.3904,
          0.1928, -0.0127, -0.3070, -0.2384, -0.1154, -0.1031,  0.1228, -0.1092,
         -0.1068,  0.3009]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
570000 特征值优化 tensor(0.8110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3677,  0.9678,  0.1931,  0.6779,  1.5399,  1.4787,  1.8098,  2.6609,
          0.1213, -1.1503,  1.3060,  1.3212, -0.0663,  0.0221,  0.0376,  0.0219,
          0.0829,  0.0209, -0.0715,  0.0200, -0.2045,  0.0183, -0.0713,  0.0129,
          0.0583,  0.0362, -0.1638, -0.2596,  0.0470, -0.2562, -0.0217, -0.3891,
          0.1996, -0.0132, -0.3145, -0.2410, -0.1087, -0.1027,  0.1673, -0.1373,
         -0.1118,  0.2618]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
571000 特征值优化 tensor(0.8725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3622,  0.9676,  0.1947,  0.6751,  1.5263,  1.4672,  1.8633,  2.7017,
          0.1315, -1.1715,  1.3337,  1.3263, -0.0655,  0.0444,  0.0287,  0.0424,
          0.0627,  0.0314, -0.0637,  0.0451, -0.2065,  0.0150, -0.1074,  0.0348,
          0.0477,  0.0314, -0.1790, -0.2348,  0.0438, -0.2532, -0.0212, -0.3920,
          0.1983, -0.0128, -0.3116, -0.2428, -0.1086, -0.1125,  0.1627, -0.1403,
         -0.1201,  0.2575]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
572000 特征值优化 tensor(0.8179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3394e+00,  9.5160e-01,  1.9540e-01,  6.7898e-01,  1.5240e+00,
          1.4693e+00,  1.8888e+00,  2.7560e+00,  1.7468e-01, -1.1725e+00,
          1.3408e+00,  1.2946e+00, -6.7185e-02, -1.7786e-02, -3.4869e-02,
         -2.6038e-02, -1.2943e-03, -7.2147e-02, -3.6060e-02,  4.3659e-03,
         -2.0745e-01,  1.8848e-02, -7.2662e-02,  2.5292e-02,  3.3654e-02,
          4.4505e-02, -1.7375e-01, -2.4365e-01,  4.5267e-02, -2.5474e-01,
         -2.0028e-02, -3.9218e-01,  2.0060e-01, -1.2970e-02, -3.1477e-01,
         -2.4414e-01, -1.1268e-01, -1.1003e-01,  1.3682e-01, -1.2747e-01,
         -1.2859e-01,  3.0010e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
573000 特征值优化 tensor(0.8375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3412,  0.9629,  0.1928,  0.7027,  1.5215,  1.4642,  1.9378,  2.7844,
          0.1872, -1.1669,  1.3826,  1.3255, -0.0667, -0.0480, -0.0383, -0.0172,
         -0.0157, -0.0382, -0.0078, -0.0244, -0.2058,  0.0197, -0.0649,  0.0130,
          0.0317,  0.0285, -0.1645, -0.2683,  0.0401, -0.2558, -0.0219, -0.4059,
          0.2061, -0.0120, -0.3135, -0.2502, -0.1297, -0.1116,  0.1388, -0.1344,
         -0.1114,  0.2839]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
574000 特征值优化 tensor(0.8121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3559e+00,  9.6720e-01,  1.8952e-01,  6.7652e-01,  1.5337e+00,
          1.4694e+00,  1.9829e+00,  2.8123e+00,  1.6671e-01, -1.1748e+00,
          1.4129e+00,  1.3231e+00, -6.4552e-02,  3.0071e-04,  2.9138e-03,
          3.4200e-02,  1.9835e-02, -3.3564e-02, -7.4248e-02,  1.6101e-02,
         -2.0502e-01,  1.8223e-02, -9.3027e-02,  3.7219e-02,  4.9049e-02,
          1.8593e-02, -1.7398e-01, -2.3935e-01,  4.7683e-02, -2.5697e-01,
         -2.1462e-02, -3.9871e-01,  2.0501e-01, -1.2504e-02, -3.1668e-01,
         -2.4613e-01, -1.2750e-01, -1.1526e-01,  1.6692e-01, -1.4053e-01,
         -1.2293e-01,  2.7572e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
575000 特征值优化 tensor(0.7980, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3787,  0.9816,  0.2039,  0.6694,  1.5322,  1.4703,  2.0430,  2.8279,
          0.1520, -1.1942,  1.4542,  1.3159, -0.0697,  0.0403,  0.0302,  0.0211,
          0.0488,  0.0085, -0.0601,  0.0466, -0.2098,  0.0180, -0.1036,  0.0390,
          0.0413,  0.0235, -0.1831, -0.2336,  0.0253, -0.2556, -0.0208, -0.3913,
          0.2117, -0.0130, -0.3172, -0.2426, -0.1202, -0.1199,  0.1744, -0.1390,
         -0.1292,  0.2580]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
576000 特征值优化 tensor(0.8047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3823e+00,  9.8234e-01,  1.9179e-01,  6.7313e-01,  1.5382e+00,
          1.4745e+00,  2.0847e+00,  2.8521e+00,  1.5871e-01, -1.2024e+00,
          1.4797e+00,  1.3258e+00, -6.8754e-02,  2.4428e-02,  1.8921e-03,
         -8.3557e-03,  6.9283e-02,  2.5183e-02, -4.2135e-02,  5.3558e-02,
         -2.0520e-01,  2.0649e-02, -8.0002e-02,  2.6698e-02,  6.2657e-02,
          2.2631e-02, -1.7751e-01, -2.3981e-01,  4.7973e-02, -2.5395e-01,
         -2.1704e-02, -3.9531e-01,  2.1026e-01, -1.2826e-02, -3.1747e-01,
         -2.4281e-01, -1.2195e-01, -1.2724e-01,  1.7864e-01, -1.3940e-01,
         -1.3866e-01,  2.5102e-01]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
577000 特征值优化 tensor(0.8086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3719,  0.9781,  0.1879,  0.6778,  1.5398,  1.4736,  2.1020,  2.9056,
          0.1712, -1.2069,  1.4884,  1.3174, -0.0651,  0.0104,  0.0088,  0.0540,
          0.0225, -0.0194, -0.0761,  0.0272, -0.2034,  0.0179, -0.1066,  0.0444,
          0.0461,  0.0169, -0.1848, -0.2209,  0.0607, -0.2577, -0.0219, -0.4047,
          0.2103, -0.0126, -0.3189, -0.2424, -0.1266, -0.1233,  0.1759, -0.1404,
         -0.1370,  0.2635]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
578000 特征值优化 tensor(0.8958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3797,  0.9816,  0.2096,  0.6927,  1.5306,  1.4702,  2.1556,  2.9153,
          0.1720, -1.2101,  1.5344,  1.3129, -0.0682,  0.0353,  0.0178,  0.0227,
          0.0621, -0.0118, -0.0796,  0.0675, -0.2095,  0.0136, -0.1148,  0.0433,
          0.0637,  0.0324, -0.1960, -0.2170,  0.0187, -0.2567, -0.0208, -0.4017,
          0.2160, -0.0117, -0.3178, -0.2362, -0.1228, -0.1283,  0.1773, -0.1418,
         -0.1393,  0.2480]], device='cuda:0') tensor(0.2140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
579000 特征值优化 tensor(0.8115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3625,  0.9732,  0.1961,  0.6816,  1.5211,  1.4659,  2.1577,  2.9707,
          0.2182, -1.2180,  1.5376,  1.2718, -0.0670, -0.0562, -0.0637, -0.0591,
         -0.0209, -0.0719,  0.0125, -0.0143, -0.2084,  0.0204, -0.0662,  0.0113,
          0.0538,  0.0422, -0.1550, -0.2652,  0.0509, -0.2540, -0.0200, -0.4068,
          0.2153, -0.0121, -0.3194, -0.2385, -0.1478, -0.1267,  0.1342, -0.1214,
         -0.1263,  0.3031]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
580000 特征值优化 tensor(0.8583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3278,  0.9931,  0.2037,  0.6874,  1.5278,  1.4633,  2.1788,  3.0163,
          0.2283, -1.2180,  1.5462,  1.2818, -0.0644, -0.1019, -0.0886, -0.0208,
         -0.0290, -0.0290, -0.0096, -0.0087, -0.2022,  0.0158, -0.0727,  0.0035,
          0.0525,  0.0292, -0.1895, -0.2722,  0.0431, -0.2558, -0.0210, -0.4159,
          0.2203, -0.0116, -0.3141, -0.2391, -0.1540, -0.1234,  0.1255, -0.1271,
         -0.1169,  0.2906]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
581000 特征值优化 tensor(0.7997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3707e+00,  9.9266e-01,  2.1198e-01,  6.7991e-01,  1.5383e+00,
          1.4701e+00,  2.2510e+00,  3.0153e+00,  2.2880e-01, -1.2265e+00,
          1.6044e+00,  1.2518e+00, -6.6767e-02, -5.3847e-02, -5.5519e-02,
         -3.3357e-02, -1.6244e-02, -5.6314e-02, -4.4326e-04, -3.5642e-02,
         -2.0700e-01,  1.7176e-02, -7.0078e-02,  9.1617e-03,  5.9172e-02,
          2.8996e-02, -1.7060e-01, -2.7510e-01,  4.2600e-02, -2.5695e-01,
         -2.1731e-02, -4.0598e-01,  2.2658e-01, -1.2293e-02, -3.2225e-01,
         -2.3140e-01, -1.4185e-01, -1.2575e-01,  1.3044e-01, -1.1641e-01,
         -1.2515e-01,  2.9936e-01]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
582000 特征值优化 tensor(0.8337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3413e+00,  9.3512e-01,  1.9073e-01,  6.7716e-01,  1.5127e+00,
          1.4714e+00,  2.2685e+00,  3.0611e+00,  2.4157e-01, -1.2007e+00,
          1.5975e+00,  1.2745e+00, -7.0690e-02, -2.7716e-03, -5.1192e-02,
         -1.5141e-03,  3.3966e-02, -8.1336e-02, -8.0126e-02,  3.4433e-02,
         -2.0827e-01,  2.2206e-02, -7.9032e-02,  1.9805e-02,  5.6331e-02,
          2.5298e-02, -1.9949e-01, -2.6589e-01,  4.5772e-02, -2.5200e-01,
         -2.1072e-02, -4.2154e-01,  2.2190e-01, -1.2892e-02, -3.1400e-01,
         -2.4244e-01, -1.2513e-01, -1.2874e-01,  1.5626e-01, -1.3950e-01,
         -1.5345e-01,  2.7156e-01]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
583000 特征值优化 tensor(0.8117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3491,  0.9880,  0.2001,  0.6861,  1.5181,  1.4692,  2.3048,  3.0923,
          0.2468, -1.2285,  1.6286,  1.2385, -0.0656, -0.0309, -0.0452, -0.0391,
         -0.0410, -0.1240, -0.0124, -0.0062, -0.2047,  0.0178, -0.0685,  0.0259,
          0.0452,  0.0273, -0.1976, -0.2475,  0.0660, -0.2567, -0.0219, -0.4250,
          0.2264, -0.0121, -0.3174, -0.2301, -0.1424, -0.1255,  0.1391, -0.1242,
         -0.1295,  0.2978]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
584000 特征值优化 tensor(0.7977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3758,  0.9909,  0.2134,  0.6691,  1.5377,  1.4662,  2.3588,  3.0984,
          0.2482, -1.2410,  1.6717,  1.2266, -0.0671, -0.0436, -0.0517, -0.0194,
         -0.0344, -0.0773, -0.0098, -0.0290, -0.2088,  0.0167, -0.1066,  0.0443,
          0.0300,  0.0172, -0.1859, -0.2418,  0.0538, -0.2563, -0.0215, -0.4134,
          0.2329, -0.0120, -0.3244, -0.2305, -0.1474, -0.1316,  0.1373, -0.1182,
         -0.1311,  0.2952]], device='cuda:0') tensor(0.2122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
585000 特征值优化 tensor(0.8058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3644,  0.9919,  0.1911,  0.6773,  1.5403,  1.4696,  2.3741,  3.1370,
          0.2588, -1.2362,  1.6800,  1.2152, -0.0632, -0.0300, -0.0296, -0.0143,
         -0.0172, -0.0390, -0.0032, -0.0061, -0.2024,  0.0212, -0.1013,  0.0314,
          0.0498,  0.0246, -0.1978, -0.2285,  0.0471, -0.2535, -0.0221, -0.4203,
          0.2258, -0.0121, -0.3221, -0.2306, -0.1524, -0.1334,  0.1355, -0.1206,
         -0.1341,  0.2962]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
586000 特征值优化 tensor(0.8068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3573e+00,  9.7617e-01,  1.9132e-01,  6.7791e-01,  1.5378e+00,
          1.4683e+00,  2.4027e+00,  3.1667e+00,  2.7697e-01, -1.2246e+00,
          1.6899e+00,  1.2154e+00, -6.4252e-02, -5.1285e-03, -4.6319e-02,
         -1.7128e-02, -1.1442e-03, -3.1879e-02, -4.3654e-03, -4.1274e-03,
         -2.0638e-01,  2.0804e-02, -8.8323e-02,  2.1393e-02,  5.0822e-02,
          2.6251e-02, -1.8272e-01, -2.5007e-01,  4.7925e-02, -2.5463e-01,
         -2.2010e-02, -4.2123e-01,  2.2745e-01, -1.2160e-02, -3.2531e-01,
         -2.3276e-01, -1.5094e-01, -1.3669e-01,  1.4429e-01, -1.2823e-01,
         -1.4423e-01,  2.8907e-01]], device='cuda:0') tensor(0.2163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
587000 特征值优化 tensor(0.8050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3727e+00,  9.8072e-01,  1.9402e-01,  6.7945e-01,  1.5396e+00,
          1.4694e+00,  2.4411e+00,  3.1752e+00,  2.7467e-01, -1.2425e+00,
          1.7268e+00,  1.1957e+00, -6.7598e-02, -1.4306e-02, -2.3721e-02,
         -1.5180e-02, -9.1707e-03, -2.5272e-02,  1.9462e-03, -1.6602e-02,
         -2.0520e-01,  2.1247e-02, -1.0197e-01,  3.0491e-02,  5.4520e-02,
          2.2829e-02, -1.9520e-01, -2.3353e-01,  4.6845e-02, -2.5385e-01,
         -2.1702e-02, -4.2858e-01,  2.3144e-01, -1.2069e-02, -3.1982e-01,
         -2.2577e-01, -1.5724e-01, -1.4178e-01,  1.3831e-01, -1.2216e-01,
         -1.4175e-01,  2.9253e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
588000 特征值优化 tensor(0.8107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3482e+00,  9.5391e-01,  2.0823e-01,  6.8649e-01,  1.5290e+00,
          1.4669e+00,  2.4527e+00,  3.2219e+00,  2.9174e-01, -1.2309e+00,
          1.7216e+00,  1.1996e+00, -6.5552e-02,  5.6150e-03, -3.3317e-02,
         -4.1324e-02, -1.5824e-02, -2.9215e-02,  3.2592e-02, -1.0171e-03,
         -2.0676e-01,  1.6288e-02, -6.8409e-02,  2.5384e-02,  4.6912e-02,
          2.8752e-02, -1.8449e-01, -2.3875e-01,  5.5999e-02, -2.5727e-01,
         -2.2497e-02, -4.2362e-01,  2.3262e-01, -1.2531e-02, -3.2649e-01,
         -2.2818e-01, -1.5443e-01, -1.3836e-01,  1.4715e-01, -1.3214e-01,
         -1.4441e-01,  2.8937e-01]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
589000 特征值优化 tensor(0.8115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3423,  0.9519,  0.2031,  0.6898,  1.5333,  1.4687,  2.4829,  3.2456,
          0.3049, -1.2282,  1.7406,  1.1898, -0.0663,  0.0153, -0.0252, -0.0209,
         -0.0146, -0.0312,  0.0147,  0.0057, -0.2039,  0.0169, -0.0792,  0.0209,
          0.0548,  0.0189, -0.1870, -0.2487,  0.0544, -0.2570, -0.0224, -0.4257,
          0.2341, -0.0124, -0.3275, -0.2287, -0.1540, -0.1385,  0.1490, -0.1351,
         -0.1476,  0.2882]], device='cuda:0') tensor(0.2219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
590000 特征值优化 tensor(0.8711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3463,  0.9901,  0.1969,  0.6962,  1.5198,  1.4571,  2.5230,  3.2488,
          0.2916, -1.2337,  1.7759,  1.2095, -0.0615,  0.0722,  0.0628,  0.0085,
          0.0613,  0.0690, -0.0105,  0.0573, -0.1996,  0.0189, -0.0825,  0.0095,
          0.0888,  0.0378, -0.1572, -0.2743,  0.0272, -0.2545, -0.0245, -0.4424,
          0.2303, -0.0108, -0.3223, -0.2292, -0.1470, -0.1413,  0.1718, -0.1491,
         -0.1391,  0.2510]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
591000 特征值优化 tensor(0.8198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3184,  0.9691,  0.1996,  0.6876,  1.5256,  1.4696,  2.5317,  3.2807,
          0.3235, -1.2253,  1.7736,  1.1830, -0.0643,  0.0280,  0.0136, -0.0194,
          0.0173,  0.0300,  0.0261,  0.0151, -0.2042,  0.0200, -0.0875,  0.0210,
          0.0636,  0.0265, -0.1911, -0.2508,  0.0491, -0.2547, -0.0222, -0.4345,
          0.2348, -0.0126, -0.3296, -0.2260, -0.1559, -0.1369,  0.1615, -0.1375,
         -0.1407,  0.2806]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
592000 特征值优化 tensor(0.8478, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3289,  0.9762,  0.1955,  0.6954,  1.5177,  1.4583,  2.5633,  3.2922,
          0.3212, -1.2339,  1.7958,  1.1839, -0.0617,  0.0762,  0.0405,  0.0168,
          0.0438,  0.0510, -0.0095,  0.0322, -0.2031,  0.0184, -0.0796,  0.0195,
          0.0826,  0.0368, -0.1679, -0.2560,  0.0370, -0.2545, -0.0228, -0.4445,
          0.2389, -0.0114, -0.3188, -0.2272, -0.1488, -0.1358,  0.1699, -0.1458,
         -0.1433,  0.2569]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
593000 特征值优化 tensor(0.8049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3461,  1.0161,  0.2110,  0.6884,  1.5167,  1.4766,  2.5906,  3.3065,
          0.2941, -1.2505,  1.8170,  1.1897, -0.0660, -0.0177, -0.0181,  0.0845,
          0.0771,  0.1269, -0.0405,  0.0523, -0.2059,  0.0174, -0.0587,  0.0089,
          0.0795,  0.0259, -0.1509, -0.2563,  0.0465, -0.2572, -0.0199, -0.4287,
          0.2421, -0.0126, -0.3292, -0.2154, -0.1537, -0.1370,  0.1917, -0.1429,
         -0.1393,  0.2380]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
594000 特征值优化 tensor(0.8061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3563,  0.9601,  0.1887,  0.6762,  1.5339,  1.4667,  2.6060,  3.3373,
          0.3424, -1.2464,  1.8179,  1.1458, -0.0628,  0.0767,  0.0311, -0.0184,
         -0.0222,  0.0164,  0.0604, -0.0048, -0.2062,  0.0206, -0.0842,  0.0181,
          0.0559,  0.0099, -0.1719, -0.2555,  0.0481, -0.2553, -0.0212, -0.4384,
          0.2339, -0.0126, -0.3252, -0.2189, -0.1550, -0.1440,  0.1480, -0.1300,
         -0.1559,  0.2815]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
595000 特征值优化 tensor(0.8233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3316,  0.9467,  0.1995,  0.6832,  1.5349,  1.4735,  2.6230,  3.3661,
          0.3381, -1.2284,  1.8284,  1.1656, -0.0648, -0.0076,  0.0067,  0.0204,
         -0.0070,  0.0310,  0.0154, -0.0037, -0.2029,  0.0184, -0.0771,  0.0164,
          0.0741,  0.0328, -0.1843, -0.2396,  0.0462, -0.2557, -0.0216, -0.4324,
          0.2408, -0.0124, -0.3327, -0.2256, -0.1696, -0.1474,  0.1768, -0.1467,
         -0.1519,  0.2612]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
596000 特征值优化 tensor(0.7930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3785e+00,  1.0039e+00,  1.9970e-01,  6.7302e-01,  1.5310e+00,
          1.4639e+00,  2.6910e+00,  3.3423e+00,  3.4596e-01, -1.2749e+00,
          1.8884e+00,  1.1205e+00, -6.8989e-02,  5.9703e-02,  7.4993e-02,
         -2.2104e-02, -3.9913e-02, -1.5210e-03,  6.0070e-02, -2.6332e-02,
         -2.0562e-01,  1.8345e-02, -1.0740e-01,  3.9505e-02,  4.6955e-02,
          1.5065e-02, -1.7237e-01, -2.4990e-01,  4.7458e-02, -2.5654e-01,
         -2.0980e-02, -4.3465e-01,  2.4267e-01, -1.1663e-02, -3.3222e-01,
         -2.1436e-01, -1.7375e-01, -1.5282e-01,  1.3334e-01, -1.1708e-01,
         -1.4089e-01,  2.8767e-01]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
597000 特征值优化 tensor(0.8628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3489,  1.0142,  0.1892,  0.6725,  1.5157,  1.4565,  2.7004,  3.3814,
          0.3509, -1.2664,  1.8865,  1.1250, -0.0638,  0.0668,  0.0727, -0.0176,
         -0.0132,  0.0160,  0.0470, -0.0317, -0.2040,  0.0169, -0.0907,  0.0178,
          0.0490,  0.0055, -0.1750, -0.2553,  0.0480, -0.2513, -0.0205, -0.4440,
          0.2397, -0.0109, -0.3315, -0.2242, -0.1715, -0.1545,  0.1382, -0.1361,
         -0.1404,  0.2726]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
598000 特征值优化 tensor(0.7920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3853e+00,  9.9817e-01,  2.0957e-01,  6.6807e-01,  1.5379e+00,
          1.4646e+00,  2.7443e+00,  3.3832e+00,  3.5608e-01, -1.2840e+00,
          1.9159e+00,  1.1052e+00, -6.6806e-02,  4.7244e-02,  7.2872e-02,
         -6.6778e-03, -3.6761e-02,  8.9050e-04,  3.5669e-02, -4.3154e-02,
         -2.1055e-01,  1.7558e-02, -1.0846e-01,  3.8702e-02,  3.7007e-02,
          7.8013e-03, -1.7861e-01, -2.5023e-01,  3.1944e-02, -2.5527e-01,
         -2.1641e-02, -4.3577e-01,  2.4853e-01, -1.2053e-02, -3.3308e-01,
         -2.1290e-01, -1.6998e-01, -1.5387e-01,  1.3658e-01, -1.1727e-01,
         -1.4630e-01,  2.8544e-01]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
599000 正交保障 tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3723e+00,  1.0187e+00,  2.1029e-01,  6.7299e-01,  1.5192e+00,
          1.4612e+00,  2.7691e+00,  3.3969e+00,  3.6536e-01, -1.2902e+00,
          1.9315e+00,  1.0959e+00, -6.5193e-02,  7.2928e-02,  8.6604e-02,
         -1.3336e-02, -2.7101e-02, -1.4574e-03,  3.7256e-02, -5.0543e-02,
         -2.0936e-01,  1.8105e-02, -1.1606e-01,  3.9398e-02,  3.0573e-02,
          8.9786e-03, -1.8986e-01, -2.3665e-01,  3.8580e-02, -2.5597e-01,
         -1.9661e-02, -4.3934e-01,  2.4648e-01, -1.1331e-02, -3.3270e-01,
         -2.1358e-01, -1.7697e-01, -1.5735e-01,  1.3129e-01, -1.1411e-01,
         -1.4570e-01,  2.8596e-01]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
600000 特征值优化 tensor(0.8272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3375,  0.9596,  0.1927,  0.6860,  1.5151,  1.4715,  2.7521,  3.4540,
          0.3798, -1.2360,  1.9044,  1.1341, -0.0655,  0.0077,  0.0176,  0.0203,
         -0.0117,  0.0287,  0.0240, -0.0114, -0.2077,  0.0193, -0.0767,  0.0243,
          0.0550,  0.0214, -0.1920, -0.2337,  0.0445, -0.2552, -0.0217, -0.4501,
          0.2472, -0.0126, -0.3350, -0.2146, -0.1781, -0.1536,  0.1767, -0.1417,
         -0.1543,  0.2602]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
601000 特征值优化 tensor(0.7966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3790e+00,  9.9261e-01,  2.0431e-01,  6.7514e-01,  1.5369e+00,
          1.4672e+00,  2.8101e+00,  3.4355e+00,  3.8081e-01, -1.2808e+00,
          1.9502e+00,  1.0907e+00, -6.9652e-02,  1.6317e-02,  2.6496e-02,
         -3.2884e-03, -4.4556e-02, -3.9791e-02, -8.8651e-03, -2.0844e-02,
         -2.0634e-01,  1.8087e-02, -1.1614e-01,  3.7890e-02,  6.0108e-02,
          1.5452e-02, -1.8930e-01, -2.3931e-01,  3.8475e-02, -2.5593e-01,
         -2.1424e-02, -4.3841e-01,  2.4883e-01, -1.2335e-02, -3.3524e-01,
         -2.1218e-01, -1.7748e-01, -1.6055e-01,  1.3679e-01, -1.1990e-01,
         -1.5242e-01,  2.8194e-01]], device='cuda:0') tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
602000 特征值优化 tensor(0.8422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3221,  0.9687,  0.1861,  0.6735,  1.5225,  1.4580,  2.7911,  3.4931,
          0.3921, -1.2467,  1.9229,  1.1064, -0.0623, -0.0558, -0.0920,  0.0181,
          0.0419,  0.0077, -0.0353,  0.0293, -0.2033,  0.0219, -0.0649,  0.0189,
          0.0760,  0.0391, -0.1721, -0.2595,  0.0483, -0.2510, -0.0220, -0.4528,
          0.2483, -0.0115, -0.3308, -0.2196, -0.1844, -0.1602,  0.1761, -0.1452,
         -0.1593,  0.2516]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
603000 特征值优化 tensor(0.8109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3510,  0.9659,  0.2067,  0.6876,  1.5355,  1.4783,  2.8229,  3.5090,
          0.3651, -1.2606,  1.9387,  1.1018, -0.0655,  0.0144,  0.0451,  0.0225,
          0.0496, -0.0251, -0.1034,  0.0492, -0.2069,  0.0174, -0.0564,  0.0044,
          0.0940,  0.0340, -0.1383, -0.2634,  0.0386, -0.2571, -0.0215, -0.4394,
          0.2508, -0.0131, -0.3366, -0.2058, -0.1781, -0.1590,  0.1955, -0.1450,
         -0.1644,  0.2403]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
604000 特征值优化 tensor(0.8018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3556e+00,  9.8447e-01,  2.1298e-01,  6.8293e-01,  1.5344e+00,
          1.4689e+00,  2.8601e+00,  3.5232e+00,  4.0560e-01, -1.2591e+00,
          1.9643e+00,  1.0774e+00, -6.5231e-02, -3.4562e-02, -3.7211e-02,
         -4.4241e-02,  7.2223e-03, -3.9781e-02,  2.5505e-03, -4.1326e-03,
         -2.0790e-01,  1.6217e-02, -8.6263e-02,  2.7171e-02,  6.7885e-02,
          2.0989e-02, -1.7181e-01, -2.4543e-01,  5.5089e-02, -2.5724e-01,
         -2.0925e-02, -4.4090e-01,  2.5216e-01, -1.2832e-02, -3.3691e-01,
         -2.1054e-01, -1.8164e-01, -1.6129e-01,  1.6011e-01, -1.3760e-01,
         -1.6222e-01,  2.7769e-01]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
605000 特征值优化 tensor(5.2736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2779,  0.0170,  1.3579, -0.1395,  0.2644,  0.5491,  0.5293, -0.4814,
          1.6877, -1.0254, -0.8886, -0.0702, -0.4652,  0.4574, -0.6812, -0.0030,
         -0.0897, -0.0144, -1.4098, -0.0845,  0.2068, -0.2467, -0.8198,  0.6791,
          1.0939, -1.2014, -0.3747, -0.8434, -0.8469,  0.3627, -0.1772,  0.5492,
          0.6769, -0.1057,  0.1989, -0.0643,  0.1375, -0.0201,  0.3335, -0.0843,
          0.8445,  0.2899]], device='cuda:0') tensor(0.2148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
606000 特征值优化 tensor(1.2474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1797, -0.1801,  1.7388,  0.6113,  0.4312, -0.1717,  0.3897, -1.0223,
          0.4963, -0.7959, -0.4975, -1.3727, -0.2772,  0.2104, -0.0571,  0.0457,
          0.0086, -0.0135, -0.5222,  0.0101,  0.0783, -0.0808, -0.2078,  0.1142,
          0.3748, -0.4319, -0.0869, -0.1595, -0.4364,  0.1659, -0.1695,  0.2956,
          0.2670,  0.1436,  0.0181, -0.0318,  0.2262,  0.0225,  0.2122,  0.0531,
          0.3410,  0.0935]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
607000 特征值优化 tensor(1.1146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3675, -0.5110,  1.8945,  0.4114,  0.3124, -0.2484,  0.7181, -1.1207,
          0.1495, -0.8793, -0.4596, -1.8060, -0.2810,  0.2327,  0.0418, -0.0123,
         -0.0496,  0.0781, -0.2361, -0.0523,  0.1056, -0.0563, -0.1989,  0.0769,
          0.2976, -0.2680, -0.0968, -0.1288, -0.4479,  0.1298, -0.1759,  0.2811,
          0.2039,  0.1273,  0.0183,  0.0384,  0.3019,  0.0329,  0.1654, -0.0421,
          0.2993,  0.0755]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
608000 特征值优化 tensor(1.0767, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3792, -0.5395,  1.9608,  0.3151,  0.1119, -0.2516,  0.6222, -1.1414,
          0.2690, -1.0050, -0.4418, -1.9015, -0.2095,  0.2247, -0.0049,  0.1354,
         -0.1070,  0.0087, -0.2129,  0.0072,  0.0389, -0.0628, -0.2774,  0.0412,
          0.2483, -0.0958, -0.1107, -0.0960, -0.4655,  0.1346, -0.2027,  0.2903,
          0.1674,  0.1279,  0.0098, -0.0260,  0.2839,  0.0318,  0.1570, -0.0594,
          0.3071,  0.0224]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
609000 特征值优化 tensor(1.0513, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3776, -0.5530,  1.9600,  0.1647,  0.1038, -0.2482,  0.6173, -1.1408,
          0.2515, -0.9827, -0.4406, -1.9160, -0.2077,  0.2085, -0.0058,  0.1271,
         -0.0997, -0.0088, -0.2110,  0.0025,  0.0389, -0.0773, -0.2829,  0.0347,
          0.2460, -0.0575, -0.0564, -0.1002, -0.4705,  0.1294, -0.2027,  0.2932,
          0.1670,  0.1277,  0.0391,  0.0094,  0.2835,  0.0315,  0.1571, -0.0599,
          0.3043,  0.0239]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
610000 特征值优化 tensor(1.0456, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.7936e-01, -5.6656e-01,  1.9421e+00,  5.2967e-02,  1.0304e-01,
         -2.4497e-01,  6.1938e-01, -1.1485e+00,  2.5661e-01, -9.7701e-01,
         -4.3269e-01, -1.9338e+00, -2.0626e-01,  2.2107e-01, -1.6522e-02,
          1.2146e-01, -1.1704e-01,  2.8271e-02, -2.0174e-01,  2.0626e-02,
          3.9043e-02, -9.2947e-02, -2.7890e-01,  3.3780e-02,  2.3293e-01,
         -4.5450e-02, -3.5176e-04, -9.6337e-02, -4.6843e-01,  1.2808e-01,
         -2.0211e-01,  2.9699e-01,  1.5953e-01,  1.2749e-01, -3.9348e-02,
         -2.8076e-02,  2.8907e-01,  3.2515e-02,  1.5393e-01, -6.4294e-02,
          2.9981e-01,  2.7362e-02]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
611000 特征值优化 tensor(1.0496, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1316e-01, -5.7483e-01,  2.0679e+00, -1.5395e-01,  1.0243e-01,
         -2.6502e-01,  6.0169e-01, -1.1456e+00,  2.3067e-01, -9.3691e-01,
         -4.2519e-01, -1.9584e+00, -2.1010e-01,  1.9785e-01, -5.2045e-03,
          1.1614e-01, -8.1646e-02, -1.7816e-02, -2.2051e-01, -1.9206e-02,
          3.9705e-02, -1.1566e-01, -2.6760e-01,  1.0802e-01,  2.5750e-01,
          3.7269e-02,  1.9332e-03, -8.6995e-02, -4.7890e-01,  1.4018e-01,
         -2.0263e-01,  2.8499e-01,  1.7174e-01,  1.2782e-01,  2.1754e-02,
          2.0484e-02,  2.7327e-01,  2.8378e-02,  1.6839e-01, -5.2250e-02,
          3.1123e-01,  1.6455e-02]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
612000 特征值优化 tensor(1.0505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4141, -0.5726,  2.2035, -0.3310,  0.1059, -0.2602,  0.5723, -1.1556,
          0.2230, -0.9054, -0.3972, -1.9835, -0.2098,  0.1975, -0.0069,  0.1238,
         -0.0828, -0.0218, -0.2227, -0.0123,  0.0395, -0.1389, -0.2611,  0.1263,
          0.2751,  0.0655,  0.0125, -0.0910, -0.4992,  0.1593, -0.2028,  0.2822,
          0.1756,  0.1276,  0.0152,  0.0145,  0.2775,  0.0281,  0.1679, -0.0526,
          0.3073,  0.0178]], device='cuda:0') tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
613000 特征值优化 tensor(1.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4151, -0.5571,  2.2155, -0.3854,  0.1093, -0.2565,  0.5023, -1.1793,
          0.2427, -0.8829, -0.3573, -1.9852, -0.2095,  0.2014, -0.0209,  0.1185,
         -0.1169,  0.0165, -0.2145,  0.0123,  0.0365, -0.1470, -0.2714,  0.0759,
          0.2733,  0.0543,  0.0079, -0.0819, -0.5001,  0.1622, -0.2028,  0.2952,
          0.1595,  0.1268, -0.0079,  0.0038,  0.2780,  0.0279,  0.1589, -0.0532,
          0.3146,  0.0207]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
614000 特征值优化 tensor(1.0960, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4059, -0.5522,  2.2404, -0.3574,  0.1128, -0.2606,  0.5001, -1.1844,
          0.2822, -0.8692, -0.3352, -2.0057, -0.2076,  0.2180, -0.0190,  0.0966,
         -0.1133,  0.0104, -0.1897,  0.0204,  0.0354, -0.1430, -0.2662,  0.1069,
          0.2383,  0.0221,  0.0499, -0.1264, -0.5056,  0.1652, -0.2030,  0.2757,
          0.1825,  0.1271, -0.0316, -0.0326,  0.3089,  0.0372,  0.1552, -0.0611,
          0.2822,  0.0230]], device='cuda:0') tensor(0.2162, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
615000 特征值优化 tensor(1.0783, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1358e-01, -5.6679e-01,  2.2179e+00, -3.7767e-01,  1.0729e-01,
         -2.5583e-01,  4.4307e-01, -1.1928e+00,  2.8188e-01, -8.3261e-01,
         -2.9032e-01, -2.0248e+00, -2.1079e-01,  1.8486e-01, -1.1891e-02,
          1.2190e-01, -1.0271e-01, -8.7057e-03, -2.2732e-01, -4.8323e-04,
          3.8257e-02, -1.4590e-01, -2.6306e-01,  9.5753e-02,  2.7732e-01,
          6.0687e-02, -5.5507e-04, -7.2405e-02, -5.0595e-01,  1.6213e-01,
         -2.0360e-01,  2.8903e-01,  1.7012e-01,  1.2636e-01,  5.6785e-03,
          1.3637e-02,  2.7693e-01,  2.9561e-02,  1.6157e-01, -4.9781e-02,
          3.1066e-01,  1.6547e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
616000 特征值优化 tensor(1.1075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4166, -0.5481,  2.2333, -0.3701,  0.1033, -0.2609,  0.4177, -1.2249,
          0.3284, -0.8129, -0.2786, -2.0654, -0.2104,  0.2199, -0.0231,  0.0888,
         -0.1242,  0.0210, -0.1844,  0.0309,  0.0364, -0.1449, -0.2680,  0.1009,
          0.2343,  0.0175,  0.0515, -0.1184, -0.5054,  0.1642, -0.2027,  0.2827,
          0.1831,  0.1278, -0.0415, -0.0370,  0.3086,  0.0405,  0.1581, -0.0616,
          0.2739,  0.0235]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
617000 特征值优化 tensor(1.0480, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4169, -0.5836,  2.2256, -0.3600,  0.1050, -0.2596,  0.4073, -1.2092,
          0.3388, -0.7785, -0.2333, -2.0808, -0.2114,  0.1779, -0.0029,  0.0983,
         -0.0728, -0.0414, -0.2565, -0.0192,  0.0416, -0.1433, -0.2625,  0.1144,
          0.2966,  0.0804, -0.0140, -0.0572, -0.5030,  0.1629, -0.2032,  0.2735,
          0.1913,  0.1272,  0.0322,  0.0315,  0.2645,  0.0269,  0.1769, -0.0362,
          0.3194,  0.0068]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
618000 特征值优化 tensor(1.0470, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4281, -0.5466,  2.2173, -0.3846,  0.1029, -0.2642,  0.3587, -1.2351,
          0.3524, -0.7341, -0.2118, -2.1052, -0.2121,  0.2122, -0.0209,  0.0944,
         -0.1134,  0.0136, -0.2096,  0.0235,  0.0371, -0.1470, -0.2768,  0.0696,
          0.2585,  0.0378,  0.0212, -0.0817, -0.5021,  0.1627, -0.2026,  0.2905,
          0.1710,  0.1284, -0.0226, -0.0117,  0.2843,  0.0356,  0.1624, -0.0486,
          0.3002,  0.0168]], device='cuda:0') tensor(0.2355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
619000 特征值优化 tensor(1.1071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4246, -0.5768,  2.2112, -0.3751,  0.1076, -0.2582,  0.3751, -1.2109,
          0.3772, -0.7036, -0.1971, -2.1108, -0.2146,  0.1917, -0.0119,  0.1168,
         -0.0856, -0.0151, -0.2482, -0.0182,  0.0406, -0.1442, -0.2691,  0.1075,
          0.2990,  0.0739, -0.0302, -0.0416, -0.5032,  0.1604, -0.2042,  0.2789,
          0.1850,  0.1266,  0.0405,  0.0375,  0.2591,  0.0284,  0.1682, -0.0320,
          0.3292,  0.0063]], device='cuda:0') tensor(0.2140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
620000 特征值优化 tensor(1.0896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4156, -0.5594,  2.2404, -0.3577,  0.1072, -0.2565,  0.3744, -1.2172,
          0.4102, -0.6535, -0.2167, -2.1382, -0.2106,  0.2075, -0.0162,  0.0947,
         -0.1133, -0.0054, -0.2004,  0.0169,  0.0372, -0.1435, -0.2682,  0.1047,
          0.2547,  0.0222,  0.0424, -0.0922, -0.5044,  0.1653, -0.2034,  0.2666,
          0.1954,  0.1273, -0.0270, -0.0280,  0.3072,  0.0344,  0.1667, -0.0459,
          0.2834,  0.0132]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
621000 特征值优化 tensor(1.0756, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1331e-01, -5.6171e-01,  2.2162e+00, -3.8009e-01,  1.0487e-01,
         -2.5653e-01,  3.3149e-01, -1.2146e+00,  4.1329e-01, -6.0162e-01,
         -1.7145e-01, -2.1582e+00, -2.1075e-01,  1.8512e-01, -8.1351e-03,
          1.1896e-01, -1.0464e-01, -9.8859e-03, -2.2828e-01, -4.3815e-04,
          3.8092e-02, -1.4612e-01, -2.6848e-01,  8.8610e-02,  2.7967e-01,
          5.8734e-02, -4.8495e-03, -4.8602e-02, -5.0487e-01,  1.6172e-01,
         -2.0409e-01,  2.8060e-01,  1.8373e-01,  1.2631e-01,  4.0864e-03,
          1.4322e-02,  2.8004e-01,  3.2676e-02,  1.6767e-01, -3.6135e-02,
          3.0698e-01,  8.9458e-03]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
622000 特征值优化 tensor(1.0664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4147, -0.5477,  2.2229, -0.3871,  0.1096, -0.2555,  0.3116, -1.2268,
          0.4063, -0.5241, -0.1397, -2.1975, -0.2097,  0.2131, -0.0231,  0.1054,
         -0.1180,  0.0095, -0.2161,  0.0164,  0.0354, -0.1471, -0.2779,  0.0783,
          0.2682,  0.0435,  0.0120, -0.0553, -0.5022,  0.1627, -0.2030,  0.2773,
          0.1913,  0.1268, -0.0178, -0.0023,  0.2932,  0.0340,  0.1741, -0.0395,
          0.2915,  0.0106]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
623000 特征值优化 tensor(1.0442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4228, -0.5558,  2.2299, -0.3752,  0.1024, -0.2603,  0.2789, -1.2467,
          0.4824, -0.4833, -0.1319, -2.2326, -0.2113,  0.2230, -0.0222,  0.0915,
         -0.1259,  0.0075, -0.1963,  0.0342,  0.0386, -0.1457, -0.2721,  0.0972,
          0.2473,  0.0152,  0.0481, -0.0775, -0.5048,  0.1639, -0.2024,  0.2728,
          0.1978,  0.1281, -0.0429, -0.0345,  0.3111,  0.0393,  0.1702, -0.0431,
          0.2721,  0.0111]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
624000 特征值优化 tensor(1.0466, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1830e-01, -5.7451e-01,  2.2342e+00, -3.4889e-01,  1.0366e-01,
         -2.5730e-01,  2.7677e-01, -1.2350e+00,  4.9499e-01, -4.0169e-01,
         -1.0909e-01, -2.2549e+00, -2.1019e-01,  1.8069e-01, -3.6329e-03,
          9.2636e-02, -7.5657e-02, -3.8093e-02, -2.4769e-01, -1.3108e-02,
          3.9987e-02, -1.4149e-01, -2.6786e-01,  1.3435e-01,  2.9287e-01,
          7.2388e-02, -9.7305e-03, -2.7558e-02, -5.0541e-01,  1.6324e-01,
         -2.0235e-01,  2.5975e-01,  2.0756e-01,  1.2767e-01,  2.3916e-02,
          1.9110e-02,  2.7903e-01,  3.1125e-02,  1.8484e-01, -1.6907e-02,
          3.0586e-01,  1.9379e-03]], device='cuda:0') tensor(0.2246, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
625000 特征值优化 tensor(1.0433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2009e-01, -5.8016e-01,  2.2277e+00, -3.6676e-01,  1.0435e-01,
         -2.5927e-01,  2.3475e-01, -1.2635e+00,  5.1901e-01, -3.1935e-01,
         -9.4375e-02, -2.2791e+00, -2.1131e-01,  1.8021e-01, -7.8065e-03,
          7.0874e-02, -6.8790e-02, -4.4800e-02, -2.6424e-01, -1.4668e-02,
          4.1320e-02, -1.4405e-01, -2.6291e-01,  1.0554e-01,  2.9771e-01,
          7.6074e-02, -2.6720e-02, -1.7051e-03, -5.0293e-01,  1.6318e-01,
         -2.0318e-01,  2.5777e-01,  2.0942e-01,  1.2730e-01,  2.4583e-02,
          2.9812e-02,  2.6522e-01,  3.0316e-02,  1.8474e-01, -5.0830e-03,
          3.1735e-01, -1.9574e-04]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
626000 特征值优化 tensor(1.0503, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1796e-01, -5.6997e-01,  2.2297e+00, -3.6240e-01,  1.0330e-01,
         -2.5666e-01,  2.2431e-01, -1.2525e+00,  5.1831e-01, -1.7287e-01,
         -5.7691e-02, -2.2974e+00, -2.0971e-01,  1.9762e-01, -8.9841e-03,
          8.0698e-02, -7.6184e-02, -3.5923e-02, -2.5132e-01, -9.0167e-03,
          3.9378e-02, -1.4365e-01, -2.6788e-01,  1.2131e-01,  2.9033e-01,
          6.6727e-02, -1.0418e-02, -6.9498e-03, -5.0416e-01,  1.6295e-01,
         -2.0262e-01,  2.5491e-01,  2.1536e-01,  1.2738e-01,  1.4640e-02,
          1.3470e-02,  2.8379e-01,  3.1250e-02,  1.8775e-01, -4.1893e-03,
          3.0162e-01,  2.2710e-04]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
627000 特征值优化 tensor(1.0867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2227e-01, -5.7237e-01,  2.2125e+00, -3.7758e-01,  1.0647e-01,
         -2.5455e-01,  1.8457e-01, -1.2493e+00,  5.5775e-01, -1.5656e-02,
         -4.0914e-02, -2.2896e+00, -2.1280e-01,  1.8656e-01, -1.3943e-02,
          9.3626e-02, -8.6144e-02, -2.6014e-02, -2.5766e-01, -9.0310e-03,
          4.0471e-02, -1.4524e-01, -2.6958e-01,  7.2302e-02,  2.9243e-01,
          6.0586e-02, -2.9909e-02,  2.4181e-02, -5.0450e-01,  1.6107e-01,
         -2.0315e-01,  2.6943e-01,  1.9881e-01,  1.2595e-01,  2.4185e-02,
          2.7448e-02,  2.7377e-01,  3.1871e-02,  1.7459e-01,  7.4539e-03,
          3.1918e-01,  6.7360e-04]], device='cuda:0') tensor(0.2163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
628000 特征值优化 tensor(1.0736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4189, -0.5612,  2.2107, -0.3851,  0.1051, -0.2573,  0.1956, -1.2358,
          0.5252,  0.1839, -0.0311, -2.2797, -0.2117,  0.1795, -0.0090,  0.1206,
         -0.1021, -0.0114, -0.2365,  0.0026,  0.0386, -0.1468, -0.2725,  0.0772,
          0.2667,  0.0417, -0.0237,  0.0370, -0.5023,  0.1610, -0.2037,  0.2739,
          0.1956,  0.1266,  0.0131,  0.0166,  0.2787,  0.0310,  0.1754,  0.0158,
          0.3113,  0.0033]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
629000 特征值优化 tensor(1.0742, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2055e-01, -5.6071e-01,  2.2084e+00, -3.8217e-01,  1.0733e-01,
         -2.5548e-01,  1.9427e-01, -1.2345e+00,  5.0729e-01,  3.1164e-01,
         -2.6803e-02, -2.2601e+00, -2.1154e-01,  1.8951e-01, -1.2776e-02,
          1.0903e-01, -1.0318e-01, -8.1397e-03, -2.3463e-01,  9.1576e-04,
          3.8042e-02, -1.4544e-01, -2.6712e-01,  8.9404e-02,  2.8506e-01,
          5.1329e-02, -2.9522e-02,  5.7790e-02, -5.0320e-01,  1.6051e-01,
         -2.0371e-01,  2.7073e-01,  1.9947e-01,  1.2598e-01,  1.0650e-02,
          6.9027e-03,  2.8156e-01,  2.9791e-02,  1.7491e-01,  2.2768e-02,
          3.1052e-01,  3.8062e-03]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
630000 特征值优化 tensor(1.0563, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2064e-01, -5.6330e-01,  2.2212e+00, -3.5165e-01,  1.0502e-01,
         -2.5808e-01,  2.0633e-01, -1.2503e+00,  5.2269e-01,  9.2368e-02,
         -3.8321e-02, -2.2995e+00, -2.1018e-01,  2.0814e-01, -1.3327e-02,
          8.0241e-02, -8.2718e-02, -3.0404e-02, -2.5022e-01, -9.8194e-03,
          3.7675e-02, -1.4159e-01, -2.6168e-01,  1.2738e-01,  2.8864e-01,
          6.5090e-02,  5.2753e-03,  2.6559e-02, -5.0201e-01,  1.6151e-01,
         -2.0319e-01,  2.5308e-01,  2.1603e-01,  1.2729e-01,  1.5665e-02,
         -4.2622e-03,  2.8799e-01,  3.2003e-02,  1.8245e-01,  9.3768e-03,
          2.9909e-01,  1.6789e-03]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
631000 特征值优化 tensor(1.0672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1978e-01, -5.5516e-01,  2.1986e+00, -3.8808e-01,  1.0627e-01,
         -2.5795e-01,  1.6490e-01, -1.2500e+00,  5.3029e-01, -8.3791e-02,
          3.7454e-03, -2.2933e+00, -2.1081e-01,  2.0229e-01, -2.3929e-02,
          9.8282e-02, -1.1278e-01,  2.9459e-03, -2.2725e-01,  9.2532e-03,
          3.7177e-02, -1.4725e-01, -2.7950e-01,  6.5747e-02,  2.7644e-01,
          4.8419e-02,  1.1910e-02,  3.5065e-03, -4.9909e-01,  1.5959e-01,
         -2.0338e-01,  2.7076e-01,  2.0071e-01,  1.2740e-01, -1.5901e-03,
         -1.1561e-02,  2.8718e-01,  3.4368e-02,  1.7358e-01, -8.6153e-03,
          3.0056e-01,  1.8119e-03]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
632000 特征值优化 tensor(1.0565, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2296e-01, -5.5508e-01,  2.2202e+00, -3.8317e-01,  1.0566e-01,
         -2.5926e-01,  1.4058e-01, -1.2595e+00,  5.0578e-01, -2.3595e-01,
          8.6909e-03, -2.2805e+00, -2.1112e-01,  2.2751e-01, -2.3458e-02,
          8.2939e-02, -1.2437e-01, -4.1802e-05, -2.1107e-01,  2.8141e-02,
          3.7079e-02, -1.4698e-01, -2.7702e-01,  8.9523e-02,  2.6488e-01,
          3.3544e-02, -8.0778e-03, -3.4058e-02, -5.0218e-01,  1.6311e-01,
         -2.0281e-01,  2.6720e-01,  2.0641e-01,  1.2736e-01, -3.2498e-02,
         -6.8487e-03,  3.0616e-01,  3.5259e-02,  1.7729e-01, -2.7952e-02,
          2.7821e-01,  5.4559e-03]], device='cuda:0') tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
633000 特征值优化 tensor(1.0601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1373e-01, -5.5377e-01,  2.2225e+00, -3.6016e-01,  1.0532e-01,
         -2.5857e-01,  1.5996e-01, -1.2482e+00,  5.2217e-01, -2.5503e-02,
          2.8933e-02, -2.2979e+00, -2.0952e-01,  2.1286e-01, -1.5084e-02,
          6.6300e-02, -8.8342e-02, -3.2527e-02, -2.4166e-01, -3.6996e-03,
          3.6107e-02, -1.4299e-01, -2.5796e-01,  1.2984e-01,  2.8497e-01,
          5.5486e-02,  7.3574e-03, -6.4515e-03, -5.0155e-01,  1.6239e-01,
         -2.0362e-01,  2.4703e-01,  2.2169e-01,  1.2693e-01, -2.1111e-03,
         -6.0946e-03,  2.9982e-01,  3.0643e-02,  1.8765e-01,  1.0045e-03,
          2.8877e-01,  1.1176e-03]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
634000 特征值优化 tensor(1.0880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2154e-01, -5.7981e-01,  2.2179e+00, -3.7205e-01,  1.0618e-01,
         -2.5258e-01,  1.3198e-01, -1.2500e+00,  5.4089e-01,  1.6631e-01,
          3.0364e-02, -2.2938e+00, -2.1217e-01,  1.8131e-01, -1.1324e-02,
          8.6620e-02, -8.6296e-02, -2.7389e-02, -2.5342e-01, -1.1862e-02,
          4.1168e-02, -1.4505e-01, -2.6576e-01,  8.5649e-02,  2.9267e-01,
          6.5040e-02, -3.3204e-02,  3.9336e-02, -5.0639e-01,  1.6189e-01,
         -2.0402e-01,  2.5875e-01,  2.1029e-01,  1.2639e-01,  2.5041e-02,
          2.3493e-02,  2.7475e-01,  3.0563e-02,  1.7261e-01,  1.7735e-02,
          3.1000e-01,  1.0195e-03]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
635000 特征值优化 tensor(1.0469, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1819e-01, -5.8836e-01,  2.2264e+00, -3.6323e-01,  1.0528e-01,
         -2.5977e-01,  1.2462e-01, -1.2729e+00,  5.2678e-01,  3.2531e-01,
          1.5968e-02, -2.2677e+00, -2.1154e-01,  1.7624e-01, -4.9246e-03,
          6.8145e-02, -6.7701e-02, -4.7871e-02, -2.6714e-01, -1.9346e-02,
          4.1578e-02, -1.4208e-01, -2.7271e-01,  1.2411e-01,  2.8848e-01,
          7.6665e-02, -3.8412e-02,  6.6295e-02, -5.0251e-01,  1.6170e-01,
         -2.0294e-01,  2.4908e-01,  2.1912e-01,  1.2729e-01,  3.0672e-02,
          3.0692e-04,  2.6074e-01,  3.2395e-02,  1.7723e-01,  3.4267e-02,
          3.1825e-01,  7.3736e-03]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
636000 特征值优化 tensor(1.0687, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.0847e-01, -5.5073e-01,  2.2170e+00, -3.5772e-01,  1.1062e-01,
         -2.5793e-01,  1.3196e-01, -1.2537e+00,  5.2034e-01,  9.7327e-02,
          3.1717e-02, -2.2924e+00, -2.0890e-01,  2.1802e-01, -1.9716e-02,
          6.4363e-02, -9.6562e-02, -2.4787e-02, -2.3905e-01, -1.2051e-03,
          3.4999e-02, -1.4289e-01, -2.6245e-01,  1.1620e-01,  2.8239e-01,
          4.9254e-02, -1.2138e-02,  1.3952e-02, -5.0007e-01,  1.6169e-01,
         -2.0306e-01,  2.4120e-01,  2.1987e-01,  1.2629e-01, -1.7054e-03,
          1.0716e-02,  2.9648e-01,  2.9634e-02,  1.8616e-01,  6.7926e-03,
          2.9289e-01,  2.1176e-03]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
637000 特征值优化 tensor(1.0464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1983e-01, -5.7580e-01,  2.2232e+00, -3.4603e-01,  1.0242e-01,
         -2.5384e-01,  1.1134e-01, -1.2434e+00,  5.4838e-01, -1.0601e-01,
          4.8049e-02, -2.3104e+00, -2.1144e-01,  1.7002e-01,  2.7292e-03,
          8.1422e-02, -7.7268e-02, -4.0846e-02, -2.5835e-01, -2.2734e-02,
          4.1106e-02, -1.3957e-01, -2.7739e-01,  1.3621e-01,  2.9310e-01,
          8.4397e-02,  3.5915e-02,  1.3933e-02, -5.0269e-01,  1.6033e-01,
         -2.0246e-01,  2.4511e-01,  2.2273e-01,  1.2720e-01,  3.7372e-02,
         -2.7928e-02,  2.6971e-01,  3.4551e-02,  1.8305e-01,  4.7406e-03,
          3.1004e-01,  1.4628e-03]], device='cuda:0') tensor(0.2253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
638000 特征值优化 tensor(1.0932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4164, -0.5850,  2.2256, -0.3639,  0.1050, -0.2533,  0.0854, -1.2651,
          0.5395, -0.2742,  0.0601, -2.2735, -0.2112,  0.1810, -0.0084,  0.0710,
         -0.0772, -0.0375, -0.2609, -0.0112,  0.0411, -0.1435, -0.2658,  0.1173,
          0.2918,  0.0746,  0.0300,  0.0120, -0.5018,  0.1624, -0.2035,  0.2513,
          0.2172,  0.1256,  0.0270,  0.0141,  0.2679,  0.0377,  0.1782, -0.0075,
          0.3157, -0.0027]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
639000 特征值优化 tensor(1.0871, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1387e-01, -5.5865e-01,  2.2287e+00, -3.6665e-01,  1.0501e-01,
         -2.5389e-01,  9.6629e-02, -1.2523e+00,  5.5562e-01,  4.8208e-02,
          6.1582e-02, -2.2940e+00, -2.1119e-01,  2.0673e-01, -1.6703e-02,
          7.1734e-02, -1.0808e-01, -2.3991e-02, -2.1321e-01,  1.6079e-02,
          3.8125e-02, -1.4436e-01, -2.7055e-01,  1.0932e-01,  2.7467e-01,
          2.6038e-02,  3.0827e-02, -2.9202e-02, -5.0660e-01,  1.6358e-01,
         -2.0327e-01,  2.4322e-01,  2.2287e-01,  1.2602e-01, -3.0635e-02,
         -2.4499e-02,  3.1767e-01,  3.0734e-02,  1.8248e-01, -2.7533e-03,
          2.7469e-01,  8.8460e-04]], device='cuda:0') tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
640000 特征值优化 tensor(1.0570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1990e-01, -5.6530e-01,  2.2219e+00, -3.6260e-01,  1.0564e-01,
         -2.5710e-01,  1.1636e-01, -1.2479e+00,  5.0734e-01,  2.1835e-01,
          6.2619e-02, -2.2877e+00, -2.1062e-01,  2.0747e-01, -1.1046e-02,
          7.5735e-02, -8.0180e-02, -3.3109e-02, -2.5156e-01, -1.2318e-02,
          3.8511e-02, -1.4329e-01, -2.6275e-01,  1.2533e-01,  2.8683e-01,
          6.1953e-02, -1.2174e-02,  2.8349e-02, -5.0234e-01,  1.6168e-01,
         -2.0350e-01,  2.4543e-01,  2.2436e-01,  1.2715e-01,  1.8566e-02,
         -1.1449e-03,  2.8752e-01,  3.1184e-02,  1.8299e-01,  2.1644e-02,
          2.9804e-01,  3.4539e-03]], device='cuda:0') tensor(0.2131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
641000 特征值优化 tensor(1.0540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1609e-01, -5.6655e-01,  2.2322e+00, -3.5090e-01,  1.0298e-01,
         -2.5934e-01,  1.1776e-01, -1.2567e+00,  4.8972e-01,  3.4639e-01,
          4.4480e-02, -2.2541e+00, -2.0946e-01,  1.9738e-01, -1.7771e-02,
          6.7551e-02, -8.2819e-02, -4.6683e-02, -2.4336e-01, -1.3086e-02,
          3.8174e-02, -1.4205e-01, -2.7068e-01,  1.3664e-01,  2.8389e-01,
          6.8583e-02, -3.0217e-04,  3.7064e-02, -5.0303e-01,  1.6394e-01,
         -2.0283e-01,  2.3727e-01,  2.2868e-01,  1.2711e-01,  1.0389e-02,
         -4.2680e-02,  2.9405e-01,  3.0687e-02,  1.8164e-01,  2.6314e-02,
          2.9335e-01,  6.1495e-03]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
642000 特征值优化 tensor(1.0438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2324e-01, -5.6154e-01,  2.2289e+00, -3.7114e-01,  1.0256e-01,
         -2.5935e-01,  9.1880e-02, -1.2709e+00,  5.5453e-01,  1.4313e-01,
          4.4463e-02, -2.3026e+00, -2.1168e-01,  2.2243e-01, -2.2469e-02,
          7.2595e-02, -1.2601e-01,  5.4448e-04, -1.9973e-01,  3.5501e-02,
          3.9173e-02, -1.4508e-01, -2.7442e-01,  9.7310e-02,  2.5891e-01,
          1.8391e-02, -4.5087e-02, -9.1971e-04, -5.0450e-01,  1.6356e-01,
         -2.0226e-01,  2.5724e-01,  2.1693e-01,  1.2780e-01, -4.4229e-02,
          3.2577e-02,  3.1985e-01,  3.5127e-02,  1.8353e-01, -9.5328e-03,
          2.6213e-01, -1.4332e-03]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
643000 特征值优化 tensor(1.1013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1226e-01, -5.5206e-01,  2.2334e+00, -3.5839e-01,  1.0473e-01,
         -2.5757e-01,  1.0461e-01, -1.2480e+00,  5.5319e-01, -3.3639e-02,
          8.0692e-02, -2.2927e+00, -2.0878e-01,  2.1696e-01, -2.3912e-02,
          6.6135e-02, -1.1755e-01, -1.6546e-02, -2.0329e-01,  2.4357e-02,
          3.5646e-02, -1.4282e-01, -2.6591e-01,  1.2357e-01,  2.7640e-01,
          2.2701e-02, -3.6122e-02, -2.1006e-02, -5.0632e-01,  1.6390e-01,
         -2.0342e-01,  2.4050e-01,  2.2654e-01,  1.2692e-01, -4.8921e-02,
          3.4556e-02,  3.2757e-01,  3.0544e-02,  1.7573e-01, -1.2855e-02,
          2.6607e-01,  1.9756e-03]], device='cuda:0') tensor(0.2140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
644000 特征值优化 tensor(1.0567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1978e-01, -5.6147e-01,  2.2218e+00, -3.5969e-01,  1.0453e-01,
         -2.5959e-01,  8.0519e-02, -1.2555e+00,  5.1620e-01, -1.7324e-01,
          9.7476e-02, -2.2945e+00, -2.0995e-01,  2.0809e-01, -1.5091e-02,
          6.6618e-02, -8.2457e-02, -3.4340e-02, -2.5184e-01, -8.7985e-03,
          3.7208e-02, -1.4326e-01, -2.6635e-01,  1.3127e-01,  2.8828e-01,
          7.0010e-02,  6.2685e-03, -1.3280e-02, -5.0169e-01,  1.6165e-01,
         -2.0300e-01,  2.3438e-01,  2.2843e-01,  1.2710e-01,  1.7746e-02,
          1.6530e-02,  2.8884e-01,  3.1706e-02,  1.8431e-01, -5.0883e-03,
          2.9760e-01,  1.5858e-03]], device='cuda:0') tensor(0.2089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
645000 特征值优化 tensor(1.0617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2230e-01, -5.4596e-01,  2.2120e+00, -3.8020e-01,  1.0751e-01,
         -2.5849e-01,  5.5835e-02, -1.2492e+00,  5.1984e-01,  1.2567e-01,
          9.7012e-02, -2.2953e+00, -2.1081e-01,  2.1895e-01, -2.1424e-02,
          8.1215e-02, -1.1789e-01, -1.0529e-03, -2.2666e-01,  1.7464e-02,
          3.5869e-02, -1.4568e-01, -2.8062e-01,  7.2636e-02,  2.7454e-01,
          4.2646e-02, -1.5826e-03,  1.1306e-02, -5.0095e-01,  1.6083e-01,
         -2.0342e-01,  2.5677e-01,  2.1816e-01,  1.2725e-01, -1.5137e-02,
          5.2755e-03,  2.9805e-01,  3.4788e-02,  1.7989e-01,  3.8457e-03,
          2.8712e-01,  1.0316e-03]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
646000 特征值优化 tensor(1.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2424e-01, -5.5779e-01,  2.2074e+00, -3.8918e-01,  1.0792e-01,
         -2.5833e-01,  5.3659e-02, -1.2408e+00,  5.1484e-01,  2.9324e-01,
          9.9495e-02, -2.2615e+00, -2.1178e-01,  2.0443e-01, -2.4637e-02,
          9.5611e-02, -1.1190e-01, -1.5654e-03, -2.3424e-01,  1.0649e-02,
          3.7895e-02, -1.4762e-01, -2.7630e-01,  6.5268e-02,  2.8012e-01,
          5.2332e-02, -2.1936e-02,  4.2994e-02, -4.9970e-01,  1.6130e-01,
         -2.0330e-01,  2.6313e-01,  2.0911e-01,  1.2735e-01,  1.2805e-03,
          1.6053e-02,  2.8587e-01,  3.3563e-02,  1.7408e-01,  2.1083e-02,
          3.0200e-01,  3.7560e-03]], device='cuda:0') tensor(0.2233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
647000 特征值优化 tensor(1.0825, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1654e-01, -5.5520e-01,  2.2179e+00, -3.6018e-01,  1.0693e-01,
         -2.5396e-01,  5.8263e-02, -1.2674e+00,  5.3039e-01,  2.2650e-01,
          7.2254e-02, -2.2770e+00, -2.1101e-01,  2.1157e-01, -1.5539e-02,
          5.4339e-02, -1.1779e-01, -8.7735e-03, -2.2747e-01,  9.0073e-03,
          3.6589e-02, -1.4286e-01, -2.7339e-01,  8.2438e-02,  2.7409e-01,
          2.5800e-02, -2.2743e-02,  2.9253e-02, -5.0506e-01,  1.6205e-01,
         -2.0296e-01,  2.4561e-01,  2.2349e-01,  1.2605e-01, -1.8343e-02,
          2.1003e-02,  3.0328e-01,  3.2799e-02,  1.7561e-01,  1.0879e-02,
          2.8605e-01,  1.2130e-03]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
648000 特征值优化 tensor(1.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1260e-01, -5.5774e-01,  2.2140e+00, -3.5834e-01,  1.0838e-01,
         -2.5629e-01,  8.2743e-02, -1.2438e+00,  5.2516e-01,  6.1308e-02,
          9.5923e-02, -2.2926e+00, -2.0926e-01,  2.0048e-01, -1.0846e-02,
          7.6168e-02, -8.7034e-02, -3.9798e-02, -2.3695e-01, -3.6674e-03,
          3.6280e-02, -1.4295e-01, -2.6799e-01,  1.0927e-01,  2.7796e-01,
          4.3704e-02, -8.8628e-03, -9.2438e-03, -4.9971e-01,  1.6127e-01,
         -2.0327e-01,  2.4148e-01,  2.2749e-01,  1.2669e-01, -2.2830e-04,
          7.5210e-03,  2.9900e-01,  3.3149e-02,  1.8538e-01,  5.6321e-03,
          2.8987e-01,  2.8439e-03]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
649000 特征值优化 tensor(1.0882, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2247e-01, -5.6806e-01,  2.2089e+00, -3.9201e-01,  1.0848e-01,
         -2.5544e-01,  4.2149e-02, -1.2510e+00,  5.2222e-01, -1.3930e-01,
          7.8528e-02, -2.2773e+00, -2.1241e-01,  1.9090e-01, -1.3696e-02,
          7.4421e-02, -1.0905e-01,  3.7354e-03, -2.6171e-01, -6.0930e-03,
          3.9869e-02, -1.4702e-01, -2.6681e-01,  9.3943e-02,  2.8480e-01,
          5.3042e-02,  3.8142e-02,  3.8634e-02, -5.0216e-01,  1.6064e-01,
         -2.0277e-01,  2.5523e-01,  2.1284e-01,  1.2616e-01,  3.2841e-02,
         -2.5367e-02,  2.7696e-01,  3.0438e-02,  1.7519e-01, -2.5107e-03,
          3.1041e-01,  2.4005e-04]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
650000 特征值优化 tensor(1.0439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2532e-01, -5.5626e-01,  2.2214e+00, -3.8074e-01,  1.0404e-01,
         -2.5468e-01,  4.8547e-02, -1.2619e+00,  5.2997e-01, -2.3635e-01,
          9.8015e-02, -2.2913e+00, -2.1175e-01,  2.2474e-01, -2.3334e-02,
          6.8184e-02, -1.2444e-01, -8.0675e-05, -2.1278e-01,  2.7746e-02,
          3.8320e-02, -1.4659e-01, -2.8152e-01,  8.8272e-02,  2.5335e-01,
          2.8260e-02,  7.8521e-03, -4.2592e-02, -5.0278e-01,  1.6276e-01,
         -2.0205e-01,  2.5740e-01,  2.2011e-01,  1.2717e-01, -3.0607e-02,
         -6.0276e-02,  3.0593e-01,  3.4908e-02,  1.7501e-01, -2.4111e-02,
          2.7953e-01,  5.2093e-03]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
651000 特征值优化 tensor(1.0457, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.3002e-01, -5.8932e-01,  2.2183e+00, -3.6937e-01,  1.0245e-01,
         -2.5497e-01,  5.9338e-02, -1.2494e+00,  5.6205e-01,  1.5864e-02,
          1.0973e-01, -2.3170e+00, -2.1335e-01,  1.7212e-01, -2.1019e-03,
          6.4088e-02, -6.3558e-02, -5.3753e-02, -2.7600e-01, -2.4473e-02,
          4.3433e-02, -1.4447e-01, -2.6575e-01,  1.0235e-01,  2.9730e-01,
          7.5919e-02, -3.9475e-02,  5.4844e-02, -5.0270e-01,  1.6188e-01,
         -2.0248e-01,  2.4446e-01,  2.2639e-01,  1.2718e-01,  4.1470e-02,
          3.0128e-02,  2.6292e-01,  3.4401e-02,  1.7937e-01,  2.2946e-02,
          3.1825e-01,  2.3443e-03]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
652000 特征值优化 tensor(1.0831, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4263, -0.5731,  2.2140, -0.3864,  0.1088, -0.2551,  0.0535, -1.2380,
          0.5330,  0.2360,  0.1192, -2.2707, -0.2132,  0.1891, -0.0150,  0.0889,
         -0.0936, -0.0172, -0.2505, -0.0036,  0.0405, -0.1466, -0.2694,  0.0674,
          0.2876,  0.0558, -0.0356,  0.0517, -0.5049,  0.1619, -0.2033,  0.2607,
          0.2128,  0.1261,  0.0238,  0.0232,  0.2755,  0.0306,  0.1732,  0.0235,
          0.3162,  0.0043]], device='cuda:0') tensor(0.2166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
653000 特征值优化 tensor(1.0464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2239e-01, -5.4326e-01,  2.2194e+00, -3.7712e-01,  1.0383e-01,
         -2.5559e-01,  6.3892e-02, -1.2534e+00,  5.1102e-01,  2.5397e-01,
          1.1540e-01, -2.2876e+00, -2.1058e-01,  2.1742e-01, -1.8609e-02,
          8.4867e-02, -1.2202e-01, -2.7666e-03, -2.1492e-01,  2.5728e-02,
          3.5585e-02, -1.4633e-01, -2.7144e-01,  8.4468e-02,  2.6259e-01,
          2.9690e-02, -2.7228e-02,  3.3880e-02, -5.0327e-01,  1.6255e-01,
         -2.0253e-01,  2.5428e-01,  2.2202e-01,  1.2716e-01, -3.1358e-02,
          3.6551e-02,  3.0708e-01,  3.3405e-02,  1.8029e-01,  6.1898e-03,
          2.7937e-01, -1.0759e-03]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
654000 特征值优化 tensor(1.0570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4214, -0.5588,  2.2220, -0.3558,  0.1055, -0.2571,  0.0705, -1.2486,
          0.5234,  0.0462,  0.1038, -2.3050, -0.2099,  0.2067, -0.0124,  0.0662,
         -0.0828, -0.0308, -0.2520, -0.0101,  0.0372, -0.1426, -0.2610,  0.1274,
          0.2866,  0.0691,  0.0061,  0.0318, -0.5020,  0.1623, -0.2036,  0.2410,
          0.2286,  0.1271,  0.0172, -0.0029,  0.2900,  0.0313,  0.1814,  0.0088,
          0.2971,  0.0024]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
655000 特征值优化 tensor(1.0905, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2143e-01, -5.6698e-01,  2.2037e+00, -3.7591e-01,  1.1012e-01,
         -2.5344e-01,  3.2205e-02, -1.2574e+00,  5.4669e-01, -1.3989e-01,
          1.1175e-01, -2.2913e+00, -2.1214e-01,  1.9177e-01, -1.2710e-02,
          6.7160e-02, -8.7017e-02, -2.1142e-02, -2.6309e-01, -1.3846e-02,
          3.7757e-02, -1.4497e-01, -2.6560e-01,  8.5908e-02,  2.9409e-01,
          6.3368e-02,  3.5655e-02,  1.2931e-02, -5.0331e-01,  1.6007e-01,
         -2.0340e-01,  2.4569e-01,  2.2185e-01,  1.2687e-01,  2.9535e-02,
         -2.7342e-02,  2.7548e-01,  3.4728e-02,  1.7469e-01, -5.3885e-03,
          3.1439e-01,  1.3612e-03]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
656000 特征值优化 tensor(6.9425, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0538,  0.2892,  0.9882, -0.0048, -0.8664, -0.0914,  0.3621, -1.1619,
          0.0460, -0.0723,  1.0990,  0.3818, -0.0636,  0.0549,  0.0155,  0.6900,
          0.4200, -1.5512,  0.2017,  0.0413, -0.1128,  0.0656,  0.4820, -0.0304,
          0.0284, -0.0351, -0.0226,  0.2622,  1.2373, -0.0171, -0.3631, -1.1777,
          1.0043,  0.1290, -0.0656, -0.1269, -0.1399,  0.1895,  0.4908,  0.1639,
         -0.2407,  0.4951]], device='cuda:0') tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
657000 特征值优化 tensor(1.3089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5119,  0.9705,  1.7107, -0.1641, -0.2034, -0.4439,  0.7305, -0.2629,
         -1.0465, -0.2909,  1.3695,  0.0244, -0.0952,  0.0135, -0.0958,  0.1461,
         -0.1249, -0.6491, -0.0293,  0.0108, -0.0774, -0.0454,  0.2827, -0.0455,
          0.0703, -0.0374, -0.0193,  0.0809,  0.5054,  0.0238, -0.2599, -0.2947,
          0.2296,  0.0245, -0.0556, -0.0304,  0.0042,  0.2149,  0.3231,  0.0117,
         -0.1146,  0.2897]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
658000 特征值优化 tensor(1.0780, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4357,  0.9224,  1.9303, -0.3854, -0.2731, -0.4317,  0.8534, -0.0147,
         -1.5351, -0.5708,  1.2534, -0.3757, -0.0986, -0.0249, -0.2173,  0.0518,
         -0.1627, -0.2517, -0.0019, -0.0094, -0.0805, -0.0294,  0.2183, -0.2304,
          0.0710, -0.0711, -0.0026,  0.1193,  0.3697,  0.0085, -0.2594, -0.2326,
          0.1972,  0.0376, -0.0852, -0.0032,  0.1015,  0.1953,  0.2499,  0.0719,
         -0.1460,  0.3304]], device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
659000 特征值优化 tensor(0.9594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3850,  0.9396,  2.0505, -0.5056, -0.3352, -0.8055,  0.9389,  0.0899,
         -1.6480, -0.6859,  1.3747, -0.5374, -0.1000, -0.1362, -0.1414,  0.0135,
         -0.0469, -0.1071,  0.0044, -0.0554, -0.0809, -0.0445,  0.1817, -0.0629,
         -0.0469,  0.0952,  0.1572,  0.0942,  0.3087,  0.0233, -0.2676, -0.2202,
          0.1951, -0.0203,  0.0278, -0.0361,  0.1733,  0.1174,  0.2121,  0.0055,
          0.0164,  0.3016]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
660000 特征值优化 tensor(0.9648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9122e-01,  9.0503e-01,  2.1113e+00, -5.6457e-01, -3.5167e-01,
         -8.0285e-01,  9.6374e-01,  1.2847e-01, -1.6784e+00, -7.3208e-01,
          1.4312e+00, -6.2143e-01, -9.7969e-02, -1.4614e-01, -1.4475e-01,
          1.3109e-03, -6.4393e-02, -7.9741e-02,  2.9436e-02, -6.1493e-03,
         -8.0145e-02, -5.1763e-02,  1.4491e-01, -6.1057e-02, -3.8422e-02,
          7.6626e-02,  1.5579e-01,  7.7741e-02,  3.0986e-01,  3.0238e-02,
         -2.6765e-01, -2.1178e-01,  1.9967e-01, -1.7796e-02,  2.6815e-02,
          1.4241e-02,  1.8746e-01,  1.1141e-01,  2.3932e-01, -1.8622e-02,
          7.2248e-03,  2.6332e-01]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
661000 特征值优化 tensor(0.9342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3771,  0.9231,  2.1828, -0.6354, -0.3618, -0.7903,  0.9863,  0.1488,
         -1.6811, -0.7827,  1.4501, -0.6563, -0.1022, -0.1816, -0.1240,  0.0059,
         -0.0666, -0.0678,  0.0128,  0.0345, -0.0829, -0.0691,  0.1402, -0.0718,
         -0.0694,  0.1068,  0.1271,  0.0673,  0.3169,  0.0476, -0.2652, -0.2132,
          0.2056, -0.0177, -0.0107,  0.0300,  0.1894,  0.1146,  0.2783, -0.0416,
          0.0126,  0.2135]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
662000 特征值优化 tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3896,  0.9146,  2.2737, -0.7292, -0.3470, -0.7981,  0.9941,  0.2319,
         -1.6152, -0.7918,  1.5573, -0.6805, -0.0977, -0.1851, -0.1474,  0.0651,
         -0.0576, -0.0345, -0.0108,  0.0104, -0.0793, -0.0727,  0.1345, -0.0700,
         -0.0292,  0.0682,  0.1496,  0.0728,  0.3266,  0.0513, -0.2639, -0.1936,
          0.2044, -0.0173,  0.0026,  0.0246,  0.1933,  0.1235,  0.2317, -0.0237,
          0.0208,  0.2717]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
663000 特征值优化 tensor(0.9447, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3684,  0.9190,  2.3799, -0.8364, -0.3585, -0.8128,  1.0344,  0.2870,
         -1.5389, -0.7919,  1.6052, -0.7142, -0.1074, -0.1771, -0.1347,  0.0708,
         -0.0453, -0.0492, -0.0142, -0.0379, -0.0881, -0.0914,  0.1304, -0.0951,
         -0.0240,  0.0697,  0.1629,  0.0656,  0.3354,  0.0702, -0.2640, -0.1894,
          0.2248, -0.0186,  0.0298,  0.0049,  0.2032,  0.1258,  0.2171, -0.0062,
          0.0252,  0.2894]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
664000 特征值优化 tensor(0.9472, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7433e-01,  9.1895e-01,  2.5067e+00, -9.6305e-01, -3.6920e-01,
         -8.0618e-01,  1.0461e+00,  2.8966e-01, -1.4971e+00, -8.0930e-01,
          1.6178e+00, -7.3183e-01, -1.0685e-01, -1.7775e-01, -1.3673e-01,
          7.0590e-02, -4.1114e-02, -5.7202e-02, -1.1650e-02, -3.6742e-02,
         -8.7443e-02, -9.8993e-02,  1.1834e-01, -9.7014e-02, -1.4548e-02,
          7.8600e-02,  1.7493e-01,  5.2044e-02,  3.4710e-01,  7.7685e-02,
         -2.6362e-01, -1.9660e-01,  2.4134e-01, -1.7506e-02,  3.1714e-02,
         -6.4240e-04,  2.0424e-01,  1.2825e-01,  2.2112e-01, -7.9333e-03,
          2.6429e-02,  2.9022e-01]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
665000 特征值优化 tensor(0.9698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3798,  0.9152,  2.6316, -1.0904, -0.3478, -0.8142,  1.0284,  0.3007,
         -1.4597, -0.8145,  1.6175, -0.7687, -0.1005, -0.1881, -0.1414,  0.0640,
         -0.0500, -0.0463, -0.0135, -0.0133, -0.0821, -0.1093,  0.1294, -0.1011,
         -0.0116,  0.0812,  0.1664,  0.0468,  0.3626,  0.0884, -0.2653, -0.1965,
          0.2273, -0.0186,  0.0103,  0.0279,  0.2007,  0.1301,  0.2230, -0.0195,
          0.0314,  0.2824]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
666000 特征值优化 tensor(0.9405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3727,  0.9278,  2.7327, -1.1938, -0.3617, -0.8011,  1.0078,  0.3006,
         -1.4573, -0.8521,  1.6605, -0.8015, -0.1035, -0.1974, -0.1214,  0.0271,
         -0.0747, -0.0232, -0.0338,  0.0354, -0.0840, -0.1232,  0.1232, -0.1154,
         -0.0469,  0.1240,  0.1413,  0.0272,  0.3707,  0.1025, -0.2654, -0.2259,
          0.2078, -0.0170, -0.0106,  0.0291,  0.1952,  0.1327,  0.2809, -0.0343,
          0.0360,  0.2298]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
667000 特征值优化 tensor(0.9474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8752e-01,  9.0612e-01,  2.8428e+00, -1.3046e+00, -3.6479e-01,
         -8.1032e-01,  1.0583e+00,  3.1479e-01, -1.4034e+00, -8.4413e-01,
          1.6571e+00, -8.2779e-01, -1.0346e-01, -1.8331e-01, -1.3643e-01,
          6.7158e-02, -3.8985e-02, -5.6737e-02, -8.3638e-03, -3.6001e-02,
         -8.4131e-02, -1.3471e-01,  1.2643e-01, -9.7322e-02, -8.7958e-03,
          9.8076e-02,  1.7386e-01,  4.4180e-02,  3.8038e-01,  1.1367e-01,
         -2.6367e-01, -2.0405e-01,  2.3534e-01, -1.7030e-02,  3.5226e-02,
         -2.1050e-03,  2.0312e-01,  1.3464e-01,  2.2508e-01, -1.3970e-02,
          3.3220e-02,  2.8932e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
668000 特征值优化 tensor(0.9673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8585e-01,  9.1362e-01,  2.9544e+00, -1.4152e+00, -3.4554e-01,
         -8.2088e-01,  1.0378e+00,  3.3115e-01, -1.3695e+00, -8.4758e-01,
          1.6616e+00, -8.4055e-01, -9.9873e-02, -1.8497e-01, -1.4791e-01,
          6.4957e-02, -4.9183e-02, -4.3019e-02, -1.5480e-02, -1.0188e-02,
         -8.1823e-02, -1.4690e-01,  1.3022e-01, -1.1370e-01, -2.0301e-03,
          1.0210e-01,  1.6997e-01,  2.7041e-02,  3.8911e-01,  1.2609e-01,
         -2.6557e-01, -2.0190e-01,  2.2597e-01, -1.7528e-02,  5.8002e-03,
          2.6907e-02,  2.0440e-01,  1.3411e-01,  2.3274e-01, -2.1584e-02,
          3.4077e-02,  2.7903e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
669000 特征值优化 tensor(0.9402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3749,  0.9268,  3.0545, -1.5168, -0.3619, -0.8025,  1.0229,  0.3256,
         -1.3765, -0.8809,  1.6859, -0.8806, -0.1029, -0.1970, -0.1207,  0.0287,
         -0.0713, -0.0235, -0.0366,  0.0347, -0.0837, -0.1547,  0.1181, -0.1224,
         -0.0378,  0.1400,  0.1475,  0.0131,  0.3980,  0.1343, -0.2651, -0.2259,
          0.2096, -0.0166, -0.0076,  0.0268,  0.1977,  0.1357,  0.2820, -0.0309,
          0.0387,  0.2282]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
670000 特征值优化 tensor(0.9525, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9101e-01,  9.0214e-01,  3.1335e+00, -1.5973e+00, -3.5736e-01,
         -8.1899e-01,  1.0493e+00,  3.2481e-01, -1.3185e+00, -8.5858e-01,
          1.6734e+00, -8.8183e-01, -1.0276e-01, -1.7570e-01, -1.4807e-01,
          6.3295e-02, -4.6763e-02, -4.6855e-02, -1.4474e-02, -2.2656e-02,
         -8.4042e-02, -1.6358e-01,  1.2398e-01, -1.0688e-01, -7.7750e-03,
          1.2404e-01,  1.7663e-01,  2.2384e-02,  4.0386e-01,  1.4301e-01,
         -2.6446e-01, -2.0012e-01,  2.1705e-01, -1.7861e-02,  2.6645e-02,
          2.8951e-03,  2.0162e-01,  1.3598e-01,  2.4060e-01, -2.1198e-02,
          3.6122e-02,  2.7604e-01]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
671000 特征值优化 tensor(0.9461, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3872,  0.9062,  3.2150, -1.6778, -0.3657, -0.8091,  1.0605,  0.3190,
         -1.3081, -0.8768,  1.6601, -0.9295, -0.1034, -0.1859, -0.1312,  0.0703,
         -0.0365, -0.0591, -0.0066, -0.0428, -0.0840, -0.1725,  0.1274, -0.1104,
          0.0035,  0.1108,  0.1863,  0.0336,  0.4102,  0.1518, -0.2644, -0.2032,
          0.2358, -0.0171,  0.0383, -0.0078,  0.2038,  0.1346,  0.2204, -0.0156,
          0.0337,  0.2937]], device='cuda:0') tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
672000 特征值优化 tensor(0.9444, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3771,  0.9178,  3.2867, -1.7502, -0.3676, -0.8102,  1.0600,  0.3152,
         -1.2893, -0.8870,  1.6524, -0.9545, -0.1032, -0.1817, -0.1277,  0.0720,
         -0.0349, -0.0634, -0.0043, -0.0537, -0.0840, -0.1801,  0.1142, -0.1137,
          0.0154,  0.1083,  0.1982,  0.0324,  0.4162,  0.1596, -0.2637, -0.2023,
          0.2378, -0.0169,  0.0459, -0.0157,  0.2043,  0.1333,  0.2087, -0.0132,
          0.0318,  0.3060]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
673000 特征值优化 tensor(0.9526, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8414e-01,  9.1150e-01,  3.3449e+00, -1.8080e+00, -3.5429e-01,
         -8.0876e-01,  1.0297e+00,  3.3413e-01, -1.2519e+00, -8.6413e-01,
          1.6750e+00, -9.3761e-01, -1.0275e-01, -1.9206e-01, -1.3452e-01,
          5.6250e-02, -5.7494e-02, -3.8555e-02, -2.4780e-02,  1.4765e-02,
         -8.4001e-02, -1.8424e-01,  1.1687e-01, -1.1858e-01, -8.5941e-04,
          1.4028e-01,  1.7770e-01,  8.8519e-03,  4.2124e-01,  1.6381e-01,
         -2.6352e-01, -2.0989e-01,  2.2719e-01, -1.7300e-02, -2.9069e-03,
          2.8517e-02,  2.0271e-01,  1.3170e-01,  2.5583e-01, -2.3148e-02,
          3.3826e-02,  2.5656e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
674000 特征值优化 tensor(0.9399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7390e-01,  9.2655e-01,  3.4026e+00, -1.8658e+00, -3.6048e-01,
         -8.0451e-01,  1.0276e+00,  3.2979e-01, -1.2729e+00, -8.9967e-01,
          1.6788e+00, -9.8068e-01, -1.0200e-01, -1.9522e-01, -1.2180e-01,
          3.1243e-02, -7.1882e-02, -2.6207e-02, -3.4802e-02,  3.1938e-02,
         -8.2663e-02, -1.8935e-01,  1.1295e-01, -1.2369e-01, -2.0719e-02,
          1.5545e-01,  1.5933e-01, -2.8834e-03,  4.2527e-01,  1.6894e-01,
         -2.6489e-01, -2.2470e-01,  2.1019e-01, -1.7098e-02, -5.0023e-03,
          2.7420e-02,  2.0010e-01,  1.3395e-01,  2.7889e-01, -2.8007e-02,
          3.6101e-02,  2.3158e-01]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
675000 特征值优化 tensor(0.9701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3933,  0.9088,  3.4545, -1.9211, -0.3426, -0.8256,  1.0277,  0.3320,
         -1.2380, -0.8881,  1.6704, -0.9802, -0.0992, -0.1652, -0.1537,  0.0499,
         -0.0564, -0.0330, -0.0225,  0.0076, -0.0816, -0.1959,  0.1438, -0.1256,
         -0.0073,  0.1500,  0.1639, -0.0044,  0.4292,  0.1749, -0.2656, -0.2109,
          0.2200, -0.0175,  0.0214,  0.0087,  0.2000,  0.1347,  0.2709, -0.0306,
          0.0340,  0.2444]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
676000 特征值优化 tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8624e-01,  9.1357e-01,  3.5079e+00, -1.9757e+00, -3.4345e-01,
         -8.2487e-01,  1.0314e+00,  3.4217e-01, -1.2157e+00, -8.8414e-01,
          1.6660e+00, -9.8462e-01, -1.0237e-01, -1.6155e-01, -1.5886e-01,
          6.3348e-02, -5.4930e-02, -4.7800e-02, -2.2158e-02, -8.3290e-03,
         -8.3599e-02, -2.0224e-01,  1.3450e-01, -1.2177e-01, -8.6642e-04,
          1.5049e-01,  1.7176e-01,  1.5284e-03,  4.3272e-01,  1.8184e-01,
         -2.6738e-01, -1.8803e-01,  2.2442e-01, -1.6415e-02,  2.5439e-02,
          5.7127e-03,  2.0807e-01,  1.3088e-01,  2.5892e-01, -2.2310e-02,
          3.1402e-02,  2.5950e-01]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
677000 特征值优化 tensor(0.9537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3913,  0.9006,  3.5620, -2.0258, -0.3601, -0.8138,  1.0536,  0.3267,
         -1.1904, -0.8746,  1.6666, -0.9960, -0.1024, -0.1792, -0.1425,  0.0613,
         -0.0435, -0.0496, -0.0128, -0.0271, -0.0838, -0.2070,  0.1244, -0.1139,
          0.0045,  0.1451,  0.1840,  0.0070,  0.4374,  0.1863, -0.2630, -0.2090,
          0.2251, -0.0174,  0.0313, -0.0052,  0.2034,  0.1346,  0.2427, -0.0233,
          0.0339,  0.2737]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
678000 特征值优化 tensor(0.9482, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3909,  0.9058,  3.6171, -2.0816, -0.3650, -0.8109,  1.0674,  0.3311,
         -1.1911, -0.8884,  1.6592, -1.0231, -0.1037, -0.1822, -0.1375,  0.0631,
         -0.0407, -0.0530, -0.0141, -0.0350, -0.0846, -0.2118,  0.1189, -0.1193,
          0.0117,  0.1453,  0.1878,  0.0092,  0.4416,  0.1914, -0.2642, -0.2083,
          0.2289, -0.0168,  0.0305, -0.0061,  0.2066,  0.1335,  0.2348, -0.0215,
          0.0319,  0.2805]], device='cuda:0') tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
679000 特征值优化 tensor(0.9429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3805,  0.9110,  3.6645, -2.1284, -0.3693, -0.8085,  1.0734,  0.3269,
         -1.1969, -0.9066,  1.6509, -1.0553, -0.1029, -0.1816, -0.1302,  0.0714,
         -0.0347, -0.0629, -0.0062, -0.0540, -0.0837, -0.2154,  0.1098, -0.1197,
          0.0322,  0.1279,  0.2096,  0.0229,  0.4456,  0.1944, -0.2644, -0.2047,
          0.2348, -0.0164,  0.0430, -0.0191,  0.2082,  0.1319,  0.2078, -0.0180,
          0.0296,  0.3070]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
680000 特征值优化 tensor(0.9490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3740,  0.9033,  3.7089, -2.1726, -0.3744, -0.8171,  1.0703,  0.3272,
         -1.1743, -0.8937,  1.6512, -1.0538, -0.1052, -0.1835, -0.1308,  0.0831,
         -0.0307, -0.0572, -0.0076, -0.0327, -0.0870, -0.2202,  0.1130, -0.1244,
          0.0266,  0.1421,  0.1994,  0.0155,  0.4489,  0.1995, -0.2645, -0.2023,
          0.2400, -0.0159,  0.0315, -0.0082,  0.2085,  0.1302,  0.2185, -0.0188,
          0.0298,  0.2948]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
681000 特征值优化 tensor(0.9465, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3921,  0.9034,  3.7550, -2.2197, -0.3679, -0.8237,  1.0745,  0.3262,
         -1.1650, -0.8965,  1.6553, -1.0639, -0.1036, -0.1840, -0.1339,  0.0705,
         -0.0395, -0.0558, -0.0084, -0.0391, -0.0844, -0.2232,  0.1094, -0.1207,
          0.0252,  0.1504,  0.1964,  0.0065,  0.4523,  0.2023, -0.2646, -0.2030,
          0.2300, -0.0172,  0.0309, -0.0078,  0.2072,  0.1341,  0.2263, -0.0207,
          0.0315,  0.2868]], device='cuda:0') tensor(0.2196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
682000 特征值优化 tensor(0.9684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3864,  0.9085,  3.7951, -2.2598, -0.3479, -0.8254,  1.0458,  0.3339,
         -1.1475, -0.8849,  1.6514, -1.0565, -0.1003, -0.1857, -0.1405,  0.0629,
         -0.0514, -0.0432, -0.0135, -0.0141, -0.0820, -0.2263,  0.1276, -0.1331,
          0.0282,  0.1504,  0.1898, -0.0076,  0.4561,  0.2059, -0.2648, -0.2076,
          0.2211, -0.0171,  0.0060,  0.0235,  0.2061,  0.1322,  0.2349, -0.0272,
          0.0310,  0.2780]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
683000 特征值优化 tensor(0.9422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3748,  0.9247,  3.8290, -2.2927, -0.3643, -0.8076,  1.0355,  0.3358,
         -1.1722, -0.9074,  1.6781, -1.0745, -0.1021, -0.1935, -0.1212,  0.0310,
         -0.0689, -0.0284, -0.0348,  0.0394, -0.0830, -0.2284,  0.1137, -0.1335,
         -0.0079,  0.1864,  0.1568, -0.0232,  0.4583,  0.2075, -0.2651, -0.2213,
          0.2126, -0.0164, -0.0110,  0.0336,  0.2024,  0.1331,  0.2884, -0.0244,
          0.0348,  0.2230]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
684000 特征值优化 tensor(0.9616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9205e-01,  9.1535e-01,  3.8573e+00, -2.3220e+00, -3.4454e-01,
         -8.2591e-01,  1.0381e+00,  3.4615e-01, -1.1504e+00, -8.9306e-01,
          1.6699e+00, -1.0676e+00, -1.0025e-01, -1.6004e-01, -1.6196e-01,
          5.6168e-02, -5.7385e-02, -4.2228e-02, -2.2358e-02,  1.6360e-03,
         -8.2422e-02, -2.3222e-01,  1.3399e-01, -1.2580e-01,  5.7351e-03,
          1.7294e-01,  1.6047e-01, -2.0763e-02,  4.6018e-01,  2.1151e-01,
         -2.6560e-01, -1.9116e-01,  2.2091e-01, -1.7357e-02,  2.0318e-02,
          8.1120e-03,  2.0707e-01,  1.3440e-01,  2.6937e-01, -2.3713e-02,
          3.1714e-02,  2.4684e-01]], device='cuda:0') tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
685000 特征值优化 tensor(0.9473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7540e-01,  9.2014e-01,  3.8822e+00, -2.3470e+00, -3.6436e-01,
         -8.0460e-01,  1.0568e+00,  3.3013e-01, -1.1405e+00, -8.9078e-01,
          1.6689e+00, -1.0739e+00, -1.0461e-01, -1.8040e-01, -1.3841e-01,
          6.2755e-02, -4.0137e-02, -5.4999e-02, -1.2606e-02, -2.8809e-02,
         -8.5220e-02, -2.3362e-01,  1.2230e-01, -1.2263e-01,  1.2858e-02,
          1.6397e-01,  1.8004e-01, -1.3400e-03,  4.6227e-01,  2.1308e-01,
         -2.6446e-01, -2.1035e-01,  2.3180e-01, -1.7146e-02,  2.2039e-02,
          1.3591e-03,  2.0442e-01,  1.3411e-01,  2.3886e-01, -2.2835e-02,
          3.4014e-02,  2.7542e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
686000 特征值优化 tensor(0.9422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7929e-01,  9.1982e-01,  3.9087e+00, -2.3735e+00, -3.6235e-01,
         -8.0538e-01,  1.0579e+00,  3.3409e-01, -1.1495e+00, -9.1121e-01,
          1.6637e+00, -1.0959e+00, -1.0610e-01, -1.8563e-01, -1.3086e-01,
          7.5123e-02, -3.4324e-02, -6.4724e-02, -7.8797e-03, -4.2797e-02,
         -8.6866e-02, -2.3727e-01,  1.1368e-01, -1.2859e-01,  2.9231e-02,
          1.4831e-01,  1.9775e-01,  9.2237e-03,  4.6378e-01,  2.1696e-01,
         -2.6319e-01, -1.9817e-01,  2.4489e-01, -1.6256e-02,  2.4960e-02,
         -2.8481e-03,  2.0555e-01,  1.3345e-01,  2.2124e-01, -2.0684e-02,
          3.2835e-02,  2.9022e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
687000 特征值优化 tensor(0.9540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8451e-01,  9.0663e-01,  3.9285e+00, -2.3997e+00, -3.5019e-01,
         -8.2216e-01,  1.0462e+00,  3.3692e-01, -1.1168e+00, -8.8554e-01,
          1.6593e+00, -1.0745e+00, -1.0471e-01, -1.6479e-01, -1.4959e-01,
          6.8088e-02, -4.8464e-02, -5.4310e-02, -1.5440e-02, -2.0709e-02,
         -8.5817e-02, -2.3939e-01,  1.2796e-01, -1.2475e-01,  1.9455e-02,
          1.6874e-01,  1.8819e-01, -5.9219e-03,  4.6459e-01,  2.1978e-01,
         -2.6671e-01, -1.8978e-01,  2.2986e-01, -1.7543e-02,  2.7225e-02,
         -1.9687e-03,  2.0657e-01,  1.2947e-01,  2.4586e-01, -2.3441e-02,
          2.8463e-02,  2.6828e-01]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
688000 特征值优化 tensor(0.9566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9055e-01,  8.9598e-01,  3.9552e+00, -2.4281e+00, -3.5331e-01,
         -8.1950e-01,  1.0582e+00,  3.3109e-01, -1.1056e+00, -8.7867e-01,
          1.6674e+00, -1.0765e+00, -1.0185e-01, -1.7391e-01, -1.4761e-01,
          6.5313e-02, -4.7504e-02, -4.5551e-02, -1.3966e-02, -1.9125e-02,
         -8.4078e-02, -2.4164e-01,  1.2285e-01, -1.3047e-01,  2.0923e-02,
          1.6973e-01,  1.8847e-01, -7.4964e-03,  4.6637e-01,  2.2184e-01,
         -2.6490e-01, -1.9892e-01,  2.1886e-01, -1.7300e-02,  2.5987e-02,
         -9.7505e-04,  2.0524e-01,  1.3389e-01,  2.4714e-01, -2.4258e-02,
          3.2582e-02,  2.6867e-01]], device='cuda:0') tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
689000 特征值优化 tensor(0.9414, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3727,  0.9264,  3.9822, -2.4466, -0.3624, -0.8038,  1.0627,  0.3271,
         -1.1291, -0.9112,  1.6554, -1.1192, -0.1028, -0.1840, -0.1323,  0.0708,
         -0.0354, -0.0634, -0.0053, -0.0426, -0.0836, -0.2445,  0.1107, -0.1241,
          0.0392,  0.1496,  0.2059,  0.0101,  0.4688,  0.2238, -0.2633, -0.2044,
          0.2363, -0.0169,  0.0318, -0.0087,  0.2062,  0.1338,  0.2194, -0.0233,
          0.0320,  0.2943]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
690000 特征值优化 tensor(0.9646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3813,  0.9194,  4.0069, -2.4709, -0.3439, -0.8255,  1.0388,  0.3510,
         -1.1043, -0.8848,  1.6582, -1.0899, -0.1010, -0.1823, -0.1397,  0.0652,
         -0.0507, -0.0473, -0.0174, -0.0133, -0.0829, -0.2486,  0.1365, -0.1307,
          0.0333,  0.1629,  0.1947, -0.0128,  0.4705,  0.2277, -0.2652, -0.1985,
          0.2325, -0.0172,  0.0049,  0.0220,  0.2072,  0.1315,  0.2392, -0.0261,
          0.0319,  0.2772]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
691000 特征值优化 tensor(0.9504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3884,  0.9132,  4.0315, -2.4964, -0.3545, -0.8063,  1.0401,  0.3326,
         -1.1024, -0.8826,  1.6730, -1.0919, -0.1021, -0.1942, -0.1348,  0.0497,
         -0.0559, -0.0383, -0.0241,  0.0120, -0.0827, -0.2502,  0.1182, -0.1329,
          0.0230,  0.1731,  0.1847, -0.0146,  0.4723,  0.2296, -0.2634, -0.2154,
          0.2185, -0.0173,  0.0046,  0.0173,  0.2026,  0.1327,  0.2574, -0.0245,
          0.0323,  0.2547]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
692000 特征值优化 tensor(0.9464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3797,  0.9188,  4.0571, -2.5215, -0.3576, -0.8017,  1.0378,  0.3338,
         -1.1085, -0.8903,  1.6703, -1.0992, -0.1029, -0.1942, -0.1332,  0.0459,
         -0.0589, -0.0368, -0.0256,  0.0133, -0.0825, -0.2524,  0.1086, -0.1352,
          0.0244,  0.1791,  0.1862, -0.0185,  0.4735,  0.2320, -0.2641, -0.2191,
          0.2192, -0.0169,  0.0084,  0.0131,  0.2026,  0.1320,  0.2598, -0.0253,
          0.0331,  0.2508]], device='cuda:0') tensor(0.2163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
693000 特征值优化 tensor(0.9418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7667e-01,  9.2149e-01,  4.0851e+00, -2.5490e+00, -3.6742e-01,
         -8.1096e-01,  1.0337e+00,  3.3350e-01, -1.1152e+00, -8.9800e-01,
          1.6794e+00, -1.1116e+00, -1.0435e-01, -2.0477e-01, -1.1817e-01,
          4.1071e-02, -6.1431e-02, -3.3871e-02, -3.4434e-02,  2.1454e-02,
         -8.5175e-02, -2.5539e-01,  1.0979e-01, -1.3120e-01,  1.4554e-02,
          1.8677e-01,  1.7766e-01, -2.4008e-02,  4.7613e-01,  2.3480e-01,
         -2.6462e-01, -2.1935e-01,  2.1857e-01, -1.6566e-02,  1.4115e-03,
          2.1670e-02,  2.0049e-01,  1.3085e-01,  2.7025e-01, -2.4437e-02,
          3.2611e-02,  2.4085e-01]], device='cuda:0') tensor(0.2138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
694000 特征值优化 tensor(0.9703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3932,  0.9075,  4.1136, -2.5776, -0.3431, -0.8263,  1.0314,  0.3391,
         -1.1054, -0.8964,  1.6747, -1.1065, -0.0996, -0.1694, -0.1514,  0.0504,
         -0.0542, -0.0354, -0.0223,  0.0074, -0.0815, -0.2581,  0.1419, -0.1410,
          0.0197,  0.1819,  0.1765, -0.0223,  0.4776,  0.2375, -0.2649, -0.2146,
          0.2203, -0.0171,  0.0228,  0.0072,  0.2017,  0.1340,  0.2738, -0.0279,
          0.0340,  0.2414]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
695000 特征值优化 tensor(0.9534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8442e-01,  9.1098e-01,  4.1393e+00, -2.6052e+00, -3.4750e-01,
         -8.1762e-01,  1.0415e+00,  3.4776e-01, -1.0971e+00, -8.9163e-01,
          1.6712e+00, -1.1082e+00, -1.0223e-01, -1.6247e-01, -1.5519e-01,
          6.4124e-02, -5.5684e-02, -4.7235e-02, -2.1036e-02, -1.5611e-02,
         -8.3804e-02, -2.6154e-01,  1.2549e-01, -1.2527e-01,  2.4663e-02,
          1.7634e-01,  1.8420e-01, -1.1778e-02,  4.7912e-01,  2.4115e-01,
         -2.6644e-01, -1.9012e-01,  2.2877e-01, -1.6079e-02,  2.6370e-02,
          1.2208e-03,  2.0809e-01,  1.3110e-01,  2.5049e-01, -2.3292e-02,
          2.9542e-02,  2.6207e-01]], device='cuda:0') tensor(0.2191, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
696000 特征值优化 tensor(0.9457, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7564e-01,  9.2053e-01,  4.1666e+00, -2.6308e+00, -3.6353e-01,
         -8.1346e-01,  1.0682e+00,  3.4076e-01, -1.1043e+00, -9.0015e-01,
          1.6648e+00, -1.1288e+00, -1.0665e-01, -1.7616e-01, -1.3290e-01,
          7.7245e-02, -2.9895e-02, -6.5655e-02, -1.0943e-02, -4.0634e-02,
         -8.7496e-02, -2.6350e-01,  1.1476e-01, -1.2848e-01,  4.2756e-02,
          1.6034e-01,  2.0830e-01,  6.1719e-04,  4.8122e-01,  2.4317e-01,
         -2.6369e-01, -1.9672e-01,  2.4411e-01, -1.6742e-02,  3.3801e-02,
         -9.7194e-03,  2.0772e-01,  1.3347e-01,  2.2324e-01, -2.3258e-02,
          3.2309e-02,  2.9032e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
697000 特征值优化 tensor(0.9393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3647,  0.9179,  4.1941, -2.6571, -0.3727, -0.8170,  1.0854,  0.3327,
         -1.1241, -0.9141,  1.6645, -1.1522, -0.1072, -0.1697, -0.1315,  0.0860,
         -0.0244, -0.0678, -0.0057, -0.0387, -0.0880, -0.2667,  0.1218, -0.1324,
          0.0448,  0.1449,  0.2120,  0.0180,  0.4829,  0.2463, -0.2649, -0.1863,
          0.2335, -0.0161,  0.0302, -0.0047,  0.2098,  0.1334,  0.2131, -0.0201,
          0.0312,  0.2942]], device='cuda:0') tensor(0.2242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
698000 特征值优化 tensor(0.9618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9461e-01,  9.0875e-01,  4.2167e+00, -2.6793e+00, -3.4457e-01,
         -8.2580e-01,  1.0471e+00,  3.4322e-01, -1.0833e+00, -8.7516e-01,
          1.6625e+00, -1.1042e+00, -1.0179e-01, -1.9011e-01, -1.4738e-01,
          6.1752e-02, -5.4441e-02, -4.3919e-02, -1.6218e-02, -6.0703e-03,
         -8.3001e-02, -2.6997e-01,  1.3237e-01, -1.3591e-01,  3.4005e-02,
          1.6713e-01,  1.8945e-01, -1.6881e-02,  4.8453e-01,  2.4926e-01,
         -2.6488e-01, -2.0611e-01,  2.2293e-01, -1.7235e-02,  4.1137e-03,
          2.3428e-02,  2.0753e-01,  1.3352e-01,  2.4757e-01, -2.2553e-02,
          3.1121e-02,  2.7082e-01]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
699000 特征值优化 tensor(0.9450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7392e-01,  9.2465e-01,  4.2412e+00, -2.7051e+00, -3.5993e-01,
         -8.0193e-01,  1.0343e+00,  3.3926e-01, -1.1003e+00, -8.9380e-01,
          1.6736e+00, -1.1130e+00, -1.0254e-01, -1.9273e-01, -1.2697e-01,
          4.3385e-02, -6.2571e-02, -3.4400e-02, -2.7397e-02,  1.8055e-02,
         -8.2954e-02, -2.7214e-01,  1.1026e-01, -1.3460e-01,  2.3581e-02,
          1.8731e-01,  1.8725e-01, -2.5799e-02,  4.8617e-01,  2.5138e-01,
         -2.6341e-01, -2.2279e-01,  2.2082e-01, -1.7622e-02, -2.4787e-03,
          2.5510e-02,  2.0358e-01,  1.3211e-01,  2.6884e-01, -2.5439e-02,
          3.4617e-02,  2.4304e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
700000 特征值优化 tensor(0.9804, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3852,  0.9142,  4.2656, -2.7363, -0.3425, -0.8196,  1.0297,  0.3447,
         -1.1079, -0.9052,  1.6847, -1.1177, -0.0999, -0.1788, -0.1383,  0.0376,
         -0.0618, -0.0333, -0.0334,  0.0227, -0.0832, -0.2741,  0.1341, -0.1406,
          0.0188,  0.1915,  0.1693, -0.0349,  0.4865,  0.2537, -0.2653, -0.2175,
          0.2144, -0.0161,  0.0132,  0.0167,  0.2036,  0.1352,  0.2853, -0.0292,
          0.0359,  0.2276]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
701000 特征值优化 tensor(0.9474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3900,  0.9087,  4.2923, -2.7556, -0.3628, -0.8171,  1.0598,  0.3366,
         -1.0977, -0.8938,  1.6751, -1.1190, -0.1041, -0.1802, -0.1414,  0.0629,
         -0.0441, -0.0500, -0.0153, -0.0305, -0.0846, -0.2778,  0.1174, -0.1260,
          0.0320,  0.1733,  0.1923, -0.0107,  0.4896,  0.2571, -0.2641, -0.2065,
          0.2255, -0.0161,  0.0271, -0.0044,  0.2044,  0.1354,  0.2375, -0.0229,
          0.0348,  0.2748]], device='cuda:0') tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
702000 特征值优化 tensor(0.9451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3701,  0.9330,  4.3170, -2.7805, -0.3588, -0.8055,  1.0655,  0.3475,
         -1.1002, -0.8995,  1.6639, -1.1299, -0.1069, -0.1849, -0.1291,  0.0766,
         -0.0333, -0.0655, -0.0072, -0.0474, -0.0876, -0.2799,  0.1201, -0.1296,
          0.0411,  0.1647,  0.2050, -0.0057,  0.4907,  0.2594, -0.2634, -0.2008,
          0.2439, -0.0165,  0.0372, -0.0129,  0.2075,  0.1337,  0.2207, -0.0233,
          0.0329,  0.2933]], device='cuda:0') tensor(0.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
703000 特征值优化 tensor(0.9443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9202e-01,  9.0520e-01,  4.3415e+00, -2.8055e+00, -3.6234e-01,
         -8.1871e-01,  1.0719e+00,  3.4161e-01, -1.1073e+00, -9.0789e-01,
          1.6705e+00, -1.1407e+00, -1.0352e-01, -1.8737e-01, -1.2962e-01,
          8.2010e-02, -3.0783e-02, -6.0051e-02, -4.0309e-03, -4.9095e-02,
         -8.4388e-02, -2.8220e-01,  1.1827e-01, -1.3325e-01,  4.7888e-02,
          1.5515e-01,  2.1621e-01,  8.0768e-04,  4.9300e-01,  2.6168e-01,
         -2.6304e-01, -1.9705e-01,  2.1806e-01, -1.5861e-02,  3.2823e-02,
         -9.2598e-03,  2.0846e-01,  1.3488e-01,  2.1393e-01, -2.3400e-02,
          3.3305e-02,  3.0032e-01]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
704000 特征值优化 tensor(1.0089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7495e-01,  9.2325e-01,  4.3642e+00, -2.8288e+00, -3.6145e-01,
         -8.0494e-01,  1.0728e+00,  3.4062e-01, -1.1070e+00, -9.1271e-01,
          1.6560e+00, -1.1477e+00, -1.0165e-01, -1.8463e-01, -1.3020e-01,
          7.3275e-02, -3.3353e-02, -6.4614e-02, -3.9651e-03, -5.1402e-02,
         -8.3049e-02, -2.8459e-01,  1.1468e-01, -1.3224e-01,  5.0155e-02,
          1.5403e-01,  2.1936e-01,  2.1486e-03,  4.9506e-01,  2.6385e-01,
         -2.6326e-01, -2.0685e-01,  2.3528e-01, -1.6976e-02,  3.6146e-02,
         -1.3568e-02,  2.0849e-01,  1.3257e-01,  2.1143e-01, -2.4432e-02,
          3.0063e-02,  3.0304e-01]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
705000 特征值优化 tensor(0.9553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8833e-01,  9.1107e-01,  4.3860e+00, -2.8509e+00, -3.5031e-01,
         -8.1656e-01,  1.0448e+00,  3.4790e-01, -1.0800e+00, -8.7861e-01,
          1.6653e+00, -1.1058e+00, -1.0096e-01, -1.8976e-01, -1.3790e-01,
          5.8676e-02, -5.7708e-02, -4.1801e-02, -2.0635e-02,  2.8505e-03,
         -8.3400e-02, -2.8713e-01,  1.2567e-01, -1.3818e-01,  3.6195e-02,
          1.7979e-01,  1.9581e-01, -2.1474e-02,  4.9530e-01,  2.6719e-01,
         -2.6548e-01, -2.0781e-01,  2.2230e-01, -1.5465e-02,  3.8526e-03,
          2.0482e-02,  2.0947e-01,  1.3018e-01,  2.5237e-01, -2.6248e-02,
          2.9145e-02,  2.6357e-01]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
706000 特征值优化 tensor(8.6523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7467,  0.1866,  2.3414, -0.9873, -0.4627,  0.1868, -0.2589,  1.2632,
         -0.6365, -0.1254,  0.1355, -0.7938,  0.0087,  0.1554,  0.2170, -0.0951,
         -0.3881,  0.2416,  0.0474, -1.2535,  0.0284, -0.5589, -0.1000,  0.0122,
          0.2004, -0.0576, -0.1008,  0.3147, -0.2022,  2.1816,  0.0341, -0.9991,
          0.2755, -0.1954,  0.1362,  0.0046, -0.1059, -0.5361,  0.1979, -0.0267,
         -0.1055, -0.0210]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
707000 特征值优化 tensor(2.2334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3468e+00,  4.9630e-01,  3.1392e+00, -1.3882e+00, -2.2080e-01,
          5.3594e-02, -2.7239e-01,  9.5450e-01, -9.2545e-01, -6.1396e-01,
         -1.3968e-01, -1.1955e+00,  2.1269e-02,  1.5412e-01,  1.9253e-01,
          8.3838e-02, -1.0579e-01,  8.8643e-02,  3.0713e-02, -5.9262e-01,
          1.2553e-03, -2.0082e-01, -3.5899e-02, -2.8312e-01, -1.7036e-02,
         -6.9581e-02, -6.9804e-02,  7.8534e-02, -3.4072e-01,  1.2056e+00,
          1.3794e-01, -1.6914e-01, -2.9637e-02, -2.0847e-01,  5.2891e-02,
          1.6913e-02, -8.1294e-02, -1.3582e-01,  1.0768e-01, -6.1476e-03,
          1.5614e-01, -7.7471e-02]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
708000 特征值优化 tensor(1.0589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3943e+00,  6.0760e-01,  3.4646e+00, -1.7830e+00, -2.0484e-01,
         -4.4799e-02, -5.3716e-01,  1.6910e+00, -9.1913e-01, -3.7787e-01,
         -4.6553e-01, -1.0081e+00, -5.2898e-02,  1.3504e-01,  2.1181e-01,
          1.7047e-01, -7.7887e-02,  1.1515e-01,  4.7494e-02, -5.1779e-01,
         -6.1311e-02, -1.9320e-01,  7.4681e-02, -3.2532e-01, -1.0603e-01,
         -8.3309e-02, -1.5762e-01,  1.7957e-01, -4.6626e-01,  8.2513e-01,
          1.2652e-01, -5.3111e-02, -5.7144e-02, -1.7282e-01,  3.0584e-02,
          3.6602e-02, -8.4097e-04, -6.3995e-02,  4.0258e-02, -3.3640e-02,
          4.6602e-02,  5.9027e-03]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
709000 特征值优化 tensor(0.9992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5343,  0.7556,  3.3644, -2.0186, -0.2182, -0.0431, -0.6204,  1.7564,
         -0.9149, -0.3670, -0.6100, -1.0068, -0.0410,  0.1318,  0.2401,  0.1307,
         -0.0807,  0.1239,  0.1200, -0.5252, -0.0484, -0.2834,  0.1204, -0.3673,
         -0.0688, -0.1636, -0.1457,  0.0907, -0.4015,  0.7489,  0.1292, -0.0072,
         -0.0131, -0.1738,  0.0303,  0.0338,  0.0660, -0.0822,  0.0292, -0.0369,
          0.0285,  0.0232]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
710000 特征值优化 tensor(0.9849, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7064,  0.9365,  3.2209, -1.9162, -0.2059, -0.0419, -0.6210,  1.7552,
         -0.9423, -0.3644, -0.6134, -1.0031, -0.0501,  0.1359,  0.2755,  0.1283,
         -0.0936,  0.1157,  0.1138, -0.5495, -0.0575, -0.2706,  0.1106, -0.3488,
         -0.0779, -0.1791, -0.1425,  0.0766, -0.3807,  0.7308,  0.1286,  0.0070,
         -0.0069, -0.1744,  0.0324,  0.0369,  0.0907, -0.0839,  0.0434, -0.0374,
          0.0042,  0.0074]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
711000 特征值优化 tensor(0.9755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9036e+00,  1.1315e+00,  3.0549e+00, -1.7740e+00, -2.0891e-01,
         -5.4062e-02, -6.2947e-01,  1.7669e+00, -9.1841e-01, -3.9817e-01,
         -6.0617e-01, -1.0065e+00, -6.4812e-02,  1.3204e-01,  2.6720e-01,
          1.0975e-01, -1.4805e-01,  9.4193e-02,  1.6629e-01, -5.7546e-01,
         -7.1557e-02, -2.5315e-01,  8.9085e-02, -3.5370e-01, -6.6209e-02,
         -2.1125e-01, -1.2531e-01,  1.1716e-01, -3.5431e-01,  7.0918e-01,
          1.2895e-01, -4.2727e-03,  2.6014e-02, -1.7422e-01,  4.5444e-02,
          2.0485e-02,  9.2874e-02, -8.4743e-02,  2.4605e-02, -3.5004e-02,
         -1.2873e-03,  2.8787e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
712000 特征值优化 tensor(1.0243, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1162,  1.3453,  2.9136, -1.6485, -0.2070, -0.0482, -0.6517,  1.7741,
         -0.9376, -0.3806, -0.5851, -0.9958, -0.0680,  0.1665,  0.2716,  0.1949,
         -0.0726,  0.1749,  0.0961, -0.5956, -0.0754, -0.2344,  0.0779, -0.3373,
         -0.0849, -0.1774, -0.1718,  0.1017, -0.3399,  0.6876,  0.1262, -0.0233,
         -0.0559, -0.1738,  0.0330,  0.0339,  0.0853, -0.0866,  0.0478, -0.0361,
          0.0076, -0.0038]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
713000 特征值优化 tensor(0.9663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2964,  1.5304,  2.8046, -1.5428, -0.2018, -0.0480, -0.6638,  1.7672,
         -0.9459, -0.3789, -0.5961, -0.9975, -0.0750,  0.1427,  0.2839,  0.1685,
         -0.0836,  0.1616,  0.1130, -0.6143, -0.0819, -0.2147,  0.0904, -0.3431,
         -0.0968, -0.1768, -0.1569,  0.0722, -0.3292,  0.6688,  0.1288, -0.0695,
         -0.0183, -0.1742,  0.0145,  0.0562,  0.0632, -0.0798,  0.0538, -0.0355,
          0.0356, -0.0045]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
714000 特征值优化 tensor(0.9659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4426e+00,  1.6738e+00,  2.6612e+00, -1.3855e+00, -2.0545e-01,
         -4.6039e-02, -6.6045e-01,  1.7757e+00, -9.4598e-01, -3.6928e-01,
         -5.8781e-01, -1.0035e+00, -8.6126e-02,  1.8151e-01,  2.9334e-01,
          1.8215e-01, -1.0441e-01,  1.6401e-01,  1.3849e-01, -6.3085e-01,
         -9.2922e-02, -1.7708e-01,  5.5985e-02, -3.4017e-01, -7.6263e-02,
         -1.5963e-01, -1.4793e-01,  1.1770e-01, -3.2285e-01,  6.3266e-01,
          1.2901e-01, -1.3828e-02, -5.9031e-02, -1.7333e-01,  1.9453e-02,
          4.6055e-02,  6.3311e-02, -8.0746e-02,  4.6243e-02, -3.8049e-02,
          3.1483e-02,  3.3534e-03]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
715000 特征值优化 tensor(1.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.5734e+00,  1.8040e+00,  2.4829e+00, -1.2436e+00, -2.0496e-01,
         -3.1618e-02, -6.5947e-01,  1.7811e+00, -9.4468e-01, -3.6950e-01,
         -5.8889e-01, -1.0031e+00, -9.5267e-02,  1.4677e-01,  2.9052e-01,
          1.8903e-01, -1.0499e-01,  1.8733e-01,  1.2216e-01, -6.4485e-01,
         -1.0245e-01, -1.5629e-01,  3.3141e-02, -3.1782e-01, -1.2169e-01,
         -1.7251e-01, -1.7362e-01,  1.0868e-01, -2.8850e-01,  6.0628e-01,
          1.2861e-01, -7.8305e-02, -1.7117e-02, -1.7175e-01,  1.3231e-02,
          5.4078e-02,  8.2502e-02, -8.0968e-02,  4.7166e-02, -3.7443e-02,
          7.4473e-03,  1.2940e-03]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
716000 特征值优化 tensor(0.9599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.6841,  1.9141,  2.4803, -1.2307, -0.1887, -0.0403, -0.6952,  1.7599,
         -0.9467, -0.3772, -0.6298, -1.0013, -0.0923,  0.1709,  0.2948,  0.2244,
         -0.0751,  0.2110,  0.0951, -0.6564, -0.0991, -0.1533,  0.0422, -0.3170,
         -0.0949, -0.1503, -0.1658,  0.0954, -0.2893,  0.6050,  0.1276, -0.0575,
         -0.0538, -0.1725,  0.0113,  0.0555,  0.0898, -0.0802,  0.0533, -0.0360,
          0.0098, -0.0038]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
717000 特征值优化 tensor(0.9901, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.7666e+00,  2.0124e+00,  2.4585e+00, -1.2094e+00, -2.1462e-01,
         -3.9165e-02, -6.5337e-01,  1.7461e+00, -9.2119e-01, -3.5821e-01,
         -5.7533e-01, -9.9730e-01, -9.4208e-02,  1.8098e-01,  2.8320e-01,
          1.9806e-01, -1.0649e-01,  1.7344e-01,  1.3543e-01, -6.6357e-01,
         -9.9624e-02, -1.4989e-01,  6.9029e-02, -3.2032e-01, -2.3185e-02,
         -1.5524e-01, -1.1623e-01,  5.9836e-02, -2.9004e-01,  6.0077e-01,
          1.3008e-01, -1.0739e-02, -3.5860e-02, -1.7047e-01,  2.2644e-02,
          4.0739e-02,  8.8454e-02, -8.1812e-02,  2.9155e-02, -3.4262e-02,
         -2.8902e-04,  1.5215e-02]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
718000 特征值优化 tensor(0.9713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.8545e+00,  2.0859e+00,  2.2458e+00, -9.0422e-01, -2.0699e-01,
         -5.4088e-02, -6.6495e-01,  1.7530e+00, -9.1801e-01, -3.7826e-01,
         -5.8781e-01, -1.0079e+00, -9.7423e-02,  1.8724e-01,  2.9562e-01,
          1.6136e-01, -1.4525e-01,  1.4222e-01,  1.7357e-01, -6.7523e-01,
         -1.0437e-01, -1.1132e-01,  3.3178e-02, -3.0340e-01, -3.2568e-02,
         -1.6561e-01, -1.5699e-01,  7.7883e-02, -2.7814e-01,  5.7783e-01,
          1.2930e-01, -3.5898e-04, -1.0469e-02, -1.7523e-01,  4.1106e-02,
          2.9106e-02,  7.5097e-02, -7.7928e-02,  2.6025e-02, -3.4394e-02,
          1.9796e-02,  2.7630e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
719000 特征值优化 tensor(0.9570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.9311e+00,  2.1641e+00,  2.2425e+00, -9.0111e-01, -1.9642e-01,
         -4.7439e-02, -6.8026e-01,  1.7741e+00, -9.4782e-01, -3.7772e-01,
         -6.0195e-01, -9.9029e-01, -1.0218e-01,  1.7005e-01,  3.2119e-01,
          2.2874e-01, -9.1637e-02,  2.1701e-01,  1.1261e-01, -6.8360e-01,
         -1.0865e-01, -1.1023e-01,  5.4098e-02, -3.0231e-01, -6.1417e-02,
         -2.0591e-01, -1.1015e-01,  1.5494e-02, -2.7761e-01,  5.7723e-01,
          1.2894e-01, -5.8011e-02, -2.7208e-02, -1.7421e-01,  2.0282e-02,
          4.9738e-02,  6.2673e-02, -8.0086e-02,  5.2881e-02, -3.5424e-02,
          3.6319e-02, -2.9614e-03]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
720000 特征值优化 tensor(0.9628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.9963e+00,  2.2290e+00,  2.2283e+00, -8.8458e-01, -1.9777e-01,
         -4.9679e-02, -6.8062e-01,  1.7614e+00, -9.1485e-01, -3.9397e-01,
         -5.9482e-01, -1.0040e+00, -1.0595e-01,  1.8091e-01,  2.7924e-01,
          2.0377e-01, -1.1760e-01,  1.9502e-01,  1.4031e-01, -6.9045e-01,
         -1.1255e-01, -1.0824e-01,  5.8871e-02, -3.0885e-01, -1.7523e-02,
         -1.6356e-01, -1.6304e-01,  7.9412e-02, -2.7665e-01,  5.7547e-01,
          1.2911e-01, -2.4229e-03,  2.0072e-02, -1.7424e-01,  4.6539e-02,
          2.1658e-02,  9.7988e-02, -8.1460e-02,  2.4659e-02, -3.4397e-02,
         -3.5739e-03,  2.8097e-02]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
721000 特征值优化 tensor(0.9961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.0636,  2.3006,  2.1848, -0.8432, -0.2037, -0.0436, -0.6966,  1.7430,
         -0.9316, -0.3695, -0.6101, -0.9876, -0.1070,  0.1444,  0.2611,  0.1166,
         -0.1875,  0.1069,  0.2161, -0.6951, -0.1143, -0.1053,  0.0219, -0.3400,
         -0.0826, -0.1793, -0.1079,  0.0550, -0.2756,  0.5692,  0.1255, -0.0427,
         -0.0203, -0.1724,  0.0338,  0.0321,  0.0757, -0.0793,  0.0302, -0.0352,
          0.0141,  0.0041]], device='cuda:0') tensor(0.2169, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
722000 特征值优化 tensor(1.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1197,  2.3558,  2.1257, -0.7776, -0.1927, -0.0637, -0.6771,  1.7732,
         -0.9046, -0.3964, -0.6129, -0.9881, -0.1093,  0.1623,  0.1720,  0.1798,
         -0.0877,  0.1988,  0.0819, -0.6995, -0.1155, -0.0982, -0.0146, -0.3509,
         -0.0370, -0.1627, -0.1661,  0.0894, -0.2701,  0.5590,  0.1273,  0.0459,
          0.0077, -0.1700,  0.0452,  0.0203,  0.0658, -0.0782,  0.0198, -0.0399,
          0.0225,  0.0195]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
723000 特征值优化 tensor(0.9715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1569,  2.3962,  2.0631, -0.7196, -0.1924, -0.0532, -0.6528,  1.7458,
         -0.9383, -0.3622, -0.5821, -0.9968, -0.1109,  0.1385,  0.2032,  0.1370,
         -0.1234,  0.1264,  0.1354, -0.7068, -0.1164, -0.0953,  0.0236, -0.3626,
         -0.0585, -0.1900, -0.1390,  0.0413, -0.2601,  0.5627,  0.1290,  0.0099,
         -0.0090, -0.1733,  0.0304,  0.0377,  0.0663, -0.0803,  0.0385, -0.0391,
          0.0354,  0.0106]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
724000 特征值优化 tensor(0.9564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1987e+00,  2.4363e+00,  2.0568e+00, -7.1271e-01, -1.8681e-01,
         -6.6084e-02, -6.7303e-01,  1.7614e+00, -9.2403e-01, -3.9744e-01,
         -5.9842e-01, -1.0011e+00, -1.1490e-01,  1.3166e-01,  1.9087e-01,
          1.6891e-01, -1.1819e-01,  1.7631e-01,  1.2092e-01, -7.1146e-01,
         -1.2113e-01, -9.4812e-02,  2.7072e-02, -3.5822e-01,  3.6094e-04,
         -1.9117e-01, -1.5171e-01,  8.9131e-02, -2.5945e-01,  5.6208e-01,
          1.2857e-01,  5.8528e-03,  2.7288e-02, -1.7137e-01,  5.0812e-02,
          1.7714e-02,  9.9058e-02, -8.3577e-02,  2.4198e-02, -3.7182e-02,
          3.4503e-03,  2.7087e-02]], device='cuda:0') tensor(0.2118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
725000 特征值优化 tensor(1.0049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2350,  2.4746,  2.0679, -0.7228, -0.1958, -0.0628, -0.6567,  1.7702,
         -0.9181, -0.3900, -0.5757, -0.9847, -0.1151,  0.1522,  0.1882,  0.2038,
         -0.1016,  0.1917,  0.1091, -0.7119, -0.1212, -0.0944,  0.0176, -0.3650,
         -0.0257, -0.1778, -0.1576,  0.0638, -0.2631,  0.5578,  0.1271,  0.0622,
          0.0148, -0.1715,  0.0450,  0.0195,  0.0434, -0.0853,  0.0202, -0.0410,
          0.0437,  0.0178]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
726000 特征值优化 tensor(0.9670, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2739,  2.5109,  2.0653, -0.7214, -0.1882, -0.0661, -0.6815,  1.7394,
         -0.9200, -0.3981, -0.6057, -1.0006, -0.1170,  0.1278,  0.2025,  0.1668,
         -0.1084,  0.1573,  0.1191, -0.7189, -0.1232, -0.0956,  0.0296, -0.3725,
         -0.0135, -0.1563, -0.1784,  0.0794, -0.2602,  0.5633,  0.1286,  0.0205,
          0.0183, -0.1717,  0.0442,  0.0259,  0.0259, -0.0796,  0.0233, -0.0345,
          0.0765,  0.0282]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
727000 特征值优化 tensor(0.9588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.3038e+00,  2.5413e+00,  2.0593e+00, -7.1721e-01, -1.8804e-01,
         -6.0738e-02, -6.7815e-01,  1.7697e+00, -9.1953e-01, -3.9990e-01,
         -5.9055e-01, -9.9831e-01, -1.1894e-01,  1.0546e-01,  2.0200e-01,
          2.1808e-01, -1.0245e-01,  2.0112e-01,  1.2112e-01, -7.2248e-01,
         -1.2474e-01, -9.4997e-02,  3.6060e-02, -3.6227e-01,  1.4597e-03,
         -1.7665e-01, -1.6393e-01,  7.9360e-02, -2.6122e-01,  5.6178e-01,
          1.2849e-01,  8.4057e-03,  4.3678e-02, -1.7222e-01,  5.3252e-02,
          1.5598e-02,  5.4754e-02, -8.0239e-02,  2.3254e-02, -3.4289e-02,
          4.5753e-02,  2.8516e-02]], device='cuda:0') tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
728000 特征值优化 tensor(0.9666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.3365,  2.5844,  2.0637, -0.7205, -0.1870, -0.0572, -0.6781,  1.7313,
         -0.9205, -0.3788, -0.5924, -0.9950, -0.1199,  0.1395,  0.1863,  0.1240,
         -0.1341,  0.1245,  0.1460, -0.7231, -0.1244, -0.0954,  0.0105, -0.3659,
         -0.0307, -0.1830, -0.1549,  0.0747, -0.2585,  0.5629,  0.1285,  0.0274,
         -0.0095, -0.1739,  0.0437,  0.0249,  0.0730, -0.0780,  0.0256, -0.0361,
          0.0318,  0.0266]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
729000 特征值优化 tensor(0.9625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.3650e+00,  2.6018e+00,  2.0646e+00, -7.2088e-01, -1.8808e-01,
         -5.3867e-02, -6.7216e-01,  1.7536e+00, -9.2007e-01, -3.9984e-01,
         -5.9249e-01, -9.9829e-01, -1.1951e-01,  1.4755e-01,  2.0002e-01,
          2.0682e-01, -9.0663e-02,  1.9806e-01,  1.0165e-01, -7.2835e-01,
         -1.2580e-01, -9.5444e-02,  2.4849e-02, -3.6929e-01, -1.9208e-02,
         -1.7008e-01, -1.6920e-01,  8.5839e-02, -2.6025e-01,  5.6266e-01,
          1.2866e-01,  3.9083e-02,  4.2136e-03, -1.7415e-01,  5.3474e-02,
          1.4010e-02,  3.2721e-02, -8.1543e-02,  2.3269e-02, -3.3887e-02,
          7.0139e-02,  2.8465e-02]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
730000 特征值优化 tensor(0.9705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.3898,  2.6392,  2.0634, -0.7208, -0.1966, -0.0527, -0.6650,  1.7430,
         -0.9254, -0.3786, -0.5831, -1.0006, -0.1191,  0.1332,  0.2065,  0.1417,
         -0.1364,  0.1301,  0.1543, -0.7297, -0.1240, -0.0954,  0.0120, -0.3657,
         -0.0344, -0.1718, -0.1539,  0.0729, -0.2601,  0.5632,  0.1296, -0.0074,
          0.0068, -0.1745,  0.0411,  0.0264,  0.0441, -0.0790,  0.0250, -0.0359,
          0.0557,  0.0265]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
731000 特征值优化 tensor(0.9742, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4142,  2.6637,  2.0619, -0.7193, -0.1974, -0.0566, -0.6678,  1.7390,
         -0.9193, -0.3739, -0.5783, -0.9928, -0.1227,  0.1464,  0.2205,  0.1353,
         -0.1565,  0.1422,  0.1608, -0.7319, -0.1275, -0.0952,  0.0130, -0.3651,
         -0.0374, -0.1898, -0.1482,  0.0635, -0.2618,  0.5619,  0.1292, -0.0083,
         -0.0112, -0.1722,  0.0418,  0.0264,  0.0736, -0.0797,  0.0270, -0.0376,
          0.0270,  0.0275]], device='cuda:0') tensor(0.2184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
732000 特征值优化 tensor(0.9589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4420,  2.6744,  2.0568, -0.7130, -0.1964, -0.0653, -0.6694,  1.7693,
         -0.9215, -0.3868, -0.5800, -1.0084, -0.1204,  0.1488,  0.1996,  0.2023,
         -0.1121,  0.1925,  0.1278, -0.7349, -0.1274, -0.0953,  0.0503, -0.3575,
         -0.0259, -0.1666, -0.1917,  0.0908, -0.2597,  0.5616,  0.1285,  0.0517,
          0.0048, -0.1737,  0.0405,  0.0234,  0.0477, -0.0818,  0.0246, -0.0348,
          0.0519,  0.0274]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
733000 特征值优化 tensor(0.9801, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4650e+00,  2.7130e+00,  2.0633e+00, -7.1425e-01, -2.0074e-01,
         -6.3817e-02, -6.5210e-01,  1.7210e+00, -9.1641e-01, -3.6766e-01,
         -5.6586e-01, -9.8257e-01, -1.2701e-01,  1.4352e-01,  2.0080e-01,
          1.8653e-01, -1.0004e-01,  1.6263e-01,  1.2356e-01, -7.2922e-01,
         -1.3182e-01, -9.4479e-02,  2.2748e-02, -3.5693e-01, -3.6692e-02,
         -1.9123e-01, -1.4461e-01,  5.2037e-02, -2.9411e-01,  5.6316e-01,
          1.3035e-01,  3.2802e-02, -3.5867e-04, -1.7393e-01,  3.5393e-02,
          3.4368e-02,  2.2167e-02, -8.5537e-02,  2.9226e-02, -3.9010e-02,
          8.3065e-02,  1.6115e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
734000 特征值优化 tensor(0.9536, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4886e+00,  2.7254e+00,  2.0632e+00, -7.1921e-01, -1.8819e-01,
         -5.0433e-02, -6.8246e-01,  1.7699e+00, -9.4642e-01, -3.7548e-01,
         -5.8390e-01, -9.9347e-01, -1.2591e-01,  1.6846e-01,  1.8816e-01,
          1.0374e-01, -2.0801e-01,  1.0930e-01,  2.0722e-01, -7.3574e-01,
         -1.3245e-01, -9.5501e-02,  1.7322e-02, -3.6340e-01, -7.8057e-02,
         -2.0977e-01, -1.2658e-01,  2.2566e-02, -2.6021e-01,  5.6270e-01,
          1.2850e-01, -7.8517e-03, -4.8435e-02, -1.7476e-01,  2.9930e-02,
          3.8839e-02,  5.3045e-02, -8.3412e-02,  4.8312e-02, -3.6476e-02,
          5.4337e-02,  6.1461e-04]], device='cuda:0') tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
735000 特征值优化 tensor(0.9548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5093,  2.7457,  2.0640, -0.7199, -0.1859, -0.0519, -0.6877,  1.7442,
         -0.9435, -0.3670, -0.5868, -0.9934, -0.1279,  0.1247,  0.2086,  0.1193,
         -0.1516,  0.1232,  0.1558, -0.7418, -0.1345, -0.0956,  0.0182, -0.3622,
         -0.0722, -0.1964, -0.1328,  0.0342, -0.2602,  0.5628,  0.1284, -0.0637,
         -0.0061, -0.1748,  0.0343,  0.0322,  0.0641, -0.0799,  0.0439, -0.0383,
          0.0469,  0.0059]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
736000 特征值优化 tensor(1.0043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5262e+00,  2.7686e+00,  2.0650e+00, -7.1919e-01, -1.8701e-01,
         -4.7528e-02, -6.8873e-01,  1.7728e+00, -9.3760e-01, -3.6836e-01,
         -5.9412e-01, -9.9238e-01, -1.2342e-01,  1.4359e-01,  2.0668e-01,
          1.0161e-01, -2.0343e-01,  1.2290e-01,  1.9024e-01, -7.4149e-01,
         -1.2868e-01, -9.5170e-02,  1.9494e-02, -3.6905e-01, -5.2843e-02,
         -2.0201e-01, -1.2182e-01,  3.0664e-02, -2.6106e-01,  5.5971e-01,
          1.2716e-01, -4.2769e-02, -1.1051e-02, -1.7340e-01,  1.9702e-02,
          4.4750e-02,  2.8094e-02, -8.2584e-02,  4.1040e-02, -3.8051e-02,
          7.0863e-02,  3.5220e-03]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
737000 特征值优化 tensor(0.9992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5367,  2.7894,  2.0665, -0.7215, -0.1988, -0.0500, -0.6655,  1.7700,
         -0.9283, -0.3617, -0.5602, -0.9943, -0.1288,  0.1549,  0.2015,  0.1415,
         -0.1606,  0.1376,  0.1820, -0.7421, -0.1338, -0.0955,  0.0156, -0.3637,
         -0.0583, -0.1932, -0.1339,  0.0348, -0.2614,  0.5576,  0.1275, -0.0131,
         -0.0612, -0.1736,  0.0341,  0.0340,  0.0322, -0.0886,  0.0302, -0.0378,
          0.0545,  0.0061]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
738000 特征值优化 tensor(0.9543, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5631e+00,  2.8002e+00,  2.0626e+00, -7.1846e-01, -1.8550e-01,
         -4.5150e-02, -7.0715e-01,  1.7671e+00, -9.3972e-01, -3.6977e-01,
         -5.9859e-01, -9.9378e-01, -1.2963e-01,  1.6908e-01,  1.7695e-01,
          1.0064e-01, -1.9889e-01,  1.1140e-01,  1.9585e-01, -7.4394e-01,
         -1.3521e-01, -9.5205e-02,  1.3390e-02, -3.6940e-01, -6.4578e-02,
         -2.0041e-01, -1.2592e-01,  2.9733e-02, -2.5982e-01,  5.6268e-01,
          1.2848e-01, -1.0759e-02, -4.2490e-02, -1.7373e-01,  1.6155e-02,
          5.0851e-02,  6.5283e-02, -7.9966e-02,  4.5711e-02, -3.7281e-02,
          4.1858e-02,  3.3281e-03]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
739000 特征值优化 tensor(0.9923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5690,  2.8242,  2.0637, -0.7237, -0.2044, -0.0583, -0.6549,  1.7523,
         -0.9204, -0.3642, -0.5497, -0.9865, -0.1276,  0.1100,  0.2103,  0.1280,
         -0.1816,  0.1224,  0.2026, -0.7442, -0.1329, -0.0949,  0.0133, -0.3598,
         -0.0527, -0.1920, -0.1339,  0.0501, -0.2608,  0.5602,  0.1282, -0.0483,
         -0.0153, -0.1766,  0.0353,  0.0338,  0.0448, -0.0845,  0.0274, -0.0347,
          0.0494,  0.0101]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
740000 特征值优化 tensor(0.9579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5942e+00,  2.8287e+00,  2.0642e+00, -7.2028e-01, -1.9018e-01,
         -4.6702e-02, -7.0150e-01,  1.7513e+00, -9.4856e-01, -3.7846e-01,
         -6.0264e-01, -9.9381e-01, -1.3316e-01,  1.3397e-01,  2.0181e-01,
          9.6873e-02, -2.0001e-01,  1.0805e-01,  1.9754e-01, -7.4911e-01,
         -1.3981e-01, -9.5821e-02,  1.1322e-02, -3.6490e-01, -9.0548e-02,
         -2.0966e-01, -1.2840e-01,  2.6448e-02, -2.6043e-01,  5.6297e-01,
          1.2842e-01, -3.7093e-02, -2.6568e-02, -1.7407e-01,  3.6517e-02,
          3.2350e-02,  2.2206e-02, -8.1986e-02,  4.7618e-02, -3.6575e-02,
          8.1828e-02,  1.4489e-03]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
741000 特征值优化 tensor(1.0251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6023e+00,  2.8387e+00,  2.0671e+00, -7.1917e-01, -1.9282e-01,
         -5.4574e-02, -6.7593e-01,  1.7639e+00, -9.4946e-01, -3.8630e-01,
         -5.7298e-01, -9.8846e-01, -1.3307e-01,  1.6982e-01,  1.9117e-01,
          9.2744e-02, -2.2207e-01,  9.8132e-02,  2.3181e-01, -7.4875e-01,
         -1.3948e-01, -9.6446e-02,  2.1227e-02, -3.5991e-01, -7.4736e-02,
         -1.9472e-01, -1.3607e-01,  1.3746e-02, -2.6050e-01,  5.5951e-01,
          1.2749e-01, -1.8244e-02, -6.5978e-02, -1.7538e-01,  3.1122e-02,
          3.6229e-02,  5.5494e-02, -8.3453e-02,  4.9574e-02, -3.5833e-02,
          4.5115e-02, -3.3214e-03]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
742000 特征值优化 tensor(0.9599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6141e+00,  2.8510e+00,  2.0626e+00, -7.1912e-01, -1.8385e-01,
         -5.1260e-02, -7.0045e-01,  1.7312e+00, -9.5016e-01, -3.6658e-01,
         -6.0009e-01, -9.9045e-01, -1.3349e-01,  1.1833e-01,  2.0695e-01,
          1.2693e-01, -1.4852e-01,  1.3016e-01,  1.5386e-01, -7.5171e-01,
         -1.3980e-01, -9.4964e-02,  2.0461e-02, -3.6365e-01, -6.2582e-02,
         -1.8553e-01, -1.4167e-01,  4.0030e-02, -2.6036e-01,  5.6224e-01,
          1.2819e-01, -4.6624e-02, -1.4878e-03, -1.7478e-01,  3.3188e-02,
          3.3427e-02,  7.3214e-02, -7.9677e-02,  4.2348e-02, -3.8306e-02,
          3.8580e-02,  6.9343e-03]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
743000 特征值优化 tensor(0.9991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6221,  2.8717,  2.0672, -0.7217, -0.1986, -0.0451, -0.6734,  1.7637,
         -0.9320, -0.3667, -0.5812, -0.9787, -0.1289,  0.1314,  0.2078,  0.0981,
         -0.2123,  0.1141,  0.2098, -0.7485, -0.1333, -0.0948,  0.0189, -0.3657,
         -0.0493, -0.2004, -0.1322,  0.0385, -0.2614,  0.5588,  0.1279, -0.0490,
         -0.0122, -0.1727,  0.0294,  0.0366,  0.0317, -0.0837,  0.0289, -0.0362,
          0.0520,  0.0052]], device='cuda:0') tensor(0.2155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
744000 特征值优化 tensor(0.9906, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6264,  2.8855,  2.0643, -0.7237, -0.2078, -0.0538, -0.6540,  1.7560,
         -0.9330, -0.3629, -0.5597, -0.9825, -0.1321,  0.1547,  0.2007,  0.1292,
         -0.1563,  0.1246,  0.1730, -0.7496, -0.1364, -0.0949,  0.0166, -0.3645,
         -0.0512, -0.1932, -0.1378,  0.0384, -0.2614,  0.5597,  0.1285, -0.0221,
         -0.0442, -0.1734,  0.0370,  0.0301,  0.0290, -0.0879,  0.0269, -0.0349,
          0.0598,  0.0105]], device='cuda:0') tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
745000 特征值优化 tensor(0.9783, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6390,  2.8942,  2.0630, -0.7189, -0.2039, -0.0524, -0.6663,  1.7404,
         -0.9204, -0.3676, -0.5665, -0.9865, -0.1256,  0.1602,  0.2157,  0.1378,
         -0.1720,  0.1414,  0.1809, -0.7490, -0.1298, -0.0957,  0.0253, -0.3611,
         -0.0415, -0.1858, -0.1532,  0.0572, -0.2605,  0.5621,  0.1300, -0.0069,
         -0.0202, -0.1749,  0.0376,  0.0264,  0.0660, -0.0803,  0.0271, -0.0382,
          0.0329,  0.0258]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
746000 特征值优化 tensor(1.0128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6538,  2.9009,  2.0683, -0.7220, -0.1982, -0.0503, -0.6551,  1.7798,
         -0.9414, -0.3663, -0.5580, -0.9847, -0.1291,  0.1214,  0.2026,  0.1137,
         -0.1689,  0.1210,  0.1786, -0.7521, -0.1339, -0.0957,  0.0197, -0.3641,
         -0.0579, -0.1948, -0.1338,  0.0320, -0.2613,  0.5577,  0.1270, -0.0727,
         -0.0265, -0.1738,  0.0301,  0.0386,  0.0479, -0.0845,  0.0341, -0.0387,
          0.0418,  0.0047]], device='cuda:0') tensor(0.2328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
747000 特征值优化 tensor(1.0121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6675e+00,  2.9060e+00,  2.0655e+00, -7.2023e-01, -1.8819e-01,
         -4.8247e-02, -6.8885e-01,  1.7742e+00, -9.5082e-01, -3.7578e-01,
         -5.9677e-01, -9.8125e-01, -1.2787e-01,  1.3623e-01,  2.0684e-01,
          9.6037e-02, -2.1213e-01,  1.1591e-01,  2.0086e-01, -7.5542e-01,
         -1.3424e-01, -9.5468e-02,  1.4764e-02, -3.6543e-01, -7.5735e-02,
         -2.0198e-01, -1.2806e-01,  1.8761e-02, -2.6071e-01,  5.6074e-01,
          1.2708e-01, -4.7088e-02, -1.0491e-02, -1.7407e-01,  3.4903e-02,
          3.0102e-02,  3.1592e-02, -8.0886e-02,  4.5444e-02, -3.7158e-02,
          6.8414e-02,  9.3514e-04]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
748000 特征值优化 tensor(0.9524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6720e+00,  2.9091e+00,  2.0652e+00, -7.2084e-01, -1.8976e-01,
         -4.8713e-02, -6.5409e-01,  1.7764e+00, -9.5396e-01, -3.7168e-01,
         -5.5291e-01, -9.8469e-01, -1.2860e-01,  1.7827e-01,  2.0956e-01,
          1.4017e-01, -1.7495e-01,  1.3817e-01,  1.9192e-01, -7.5488e-01,
         -1.3499e-01, -9.5790e-02,  2.3969e-02, -3.6691e-01, -6.5529e-02,
         -2.1504e-01, -1.1179e-01,  2.2129e-02, -2.6012e-01,  5.6307e-01,
          1.2855e-01, -1.7836e-02, -7.6664e-02, -1.7442e-01,  2.6665e-02,
          4.0731e-02,  4.4010e-02, -8.2213e-02,  4.8032e-02, -3.7248e-02,
          5.4403e-02,  1.3743e-03]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
749000 特征值优化 tensor(0.9696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6867e+00,  2.9228e+00,  2.0637e+00, -7.1980e-01, -1.8796e-01,
         -4.8280e-02, -6.8775e-01,  1.7329e+00, -9.5158e-01, -3.6548e-01,
         -5.8947e-01, -9.8808e-01, -1.2798e-01,  1.4376e-01,  2.1073e-01,
          1.2255e-01, -1.7278e-01,  1.1775e-01,  1.8985e-01, -7.5554e-01,
         -1.3443e-01, -9.5864e-02,  1.2393e-02, -3.6571e-01, -1.1654e-01,
         -1.8515e-01, -1.5483e-01,  4.0168e-03, -2.6032e-01,  5.6322e-01,
          1.2855e-01, -1.0405e-02, -1.7125e-02, -1.7492e-01,  3.5696e-02,
          3.0352e-02,  6.7530e-02, -7.8863e-02,  4.3643e-02, -3.8139e-02,
          3.8757e-02,  5.6132e-03]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
750000 特征值优化 tensor(0.9686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6915,  2.9297,  2.0625, -0.7185, -0.1877, -0.0601, -0.6633,  1.7454,
         -0.9423, -0.3556, -0.5705, -0.9889, -0.1276,  0.1395,  0.2091,  0.1710,
         -0.1629,  0.1555,  0.1860, -0.7572, -0.1340, -0.0947,  0.0075, -0.3663,
         -0.0728, -0.1684, -0.1495,  0.0211, -0.2603,  0.5621,  0.1289, -0.0049,
          0.0075, -0.1732,  0.0281,  0.0372,  0.0450, -0.0816,  0.0373, -0.0403,
          0.0592,  0.0132]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
751000 特征值优化 tensor(0.9523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7001,  2.9401,  2.0648, -0.7208, -0.1698, -0.0611, -0.7242,  1.7489,
         -0.9202, -0.4058, -0.6348, -0.9918, -0.1347,  0.1335,  0.1695,  0.1845,
         -0.1135,  0.1991,  0.1068, -0.7601, -0.1407, -0.0959,  0.0201, -0.3695,
         -0.0057, -0.1815, -0.1590,  0.0792, -0.2595,  0.5628,  0.1283,  0.0261,
          0.0476, -0.1718,  0.0529,  0.0163,  0.0377, -0.0794,  0.0224, -0.0348,
          0.0747,  0.0293]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
752000 特征值优化 tensor(0.9813, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6967,  2.9524,  2.0589, -0.7140, -0.2011, -0.0652, -0.6647,  1.7445,
         -0.9262, -0.3676, -0.5663, -0.9699, -0.1350,  0.1420,  0.2054,  0.1733,
         -0.1369,  0.1732,  0.1484, -0.7566, -0.1392, -0.0950,  0.0158, -0.3609,
         -0.0409, -0.1855, -0.1487,  0.0522, -0.2602,  0.5620,  0.1292,  0.0069,
          0.0196, -0.1714,  0.0352,  0.0336,  0.0637, -0.0804,  0.0318, -0.0385,
          0.0360,  0.0159]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
753000 特征值优化 tensor(0.9991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7036,  2.9452,  2.0683, -0.7209, -0.1962, -0.0633, -0.6838,  1.7659,
         -0.9280, -0.3910, -0.5849, -0.9842, -0.1373,  0.1620,  0.2054,  0.1629,
         -0.1358,  0.1725,  0.1363, -0.7575, -0.1428, -0.0954,  0.0179, -0.3683,
         -0.0178, -0.1835, -0.1600,  0.0773, -0.2609,  0.5589,  0.1268,  0.0572,
          0.0155, -0.1719,  0.0428,  0.0241,  0.0681, -0.0807,  0.0217, -0.0406,
          0.0286,  0.0210]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
754000 特征值优化 tensor(0.9978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7077,  2.9561,  2.0641, -0.7203, -0.1936, -0.0614, -0.6800,  1.7686,
         -0.9195, -0.3920, -0.5879, -0.9754, -0.1370,  0.1711,  0.1881,  0.1889,
         -0.1166,  0.2064,  0.1144, -0.7556, -0.1422, -0.0949,  0.0077, -0.3632,
         -0.0281, -0.1770, -0.1608,  0.0644, -0.2623,  0.5589,  0.1273,  0.0409,
          0.0097, -0.1722,  0.0440,  0.0211,  0.0336, -0.0825,  0.0200, -0.0408,
          0.0568,  0.0185]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
755000 特征值优化 tensor(0.9786, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7147,  2.9615,  2.0623, -0.7191, -0.1943, -0.0550, -0.6679,  1.7467,
         -0.9404, -0.3598, -0.5702, -0.9833, -0.1329,  0.1400,  0.2138,  0.1774,
         -0.1431,  0.1558,  0.1720, -0.7588, -0.1376, -0.0955,  0.0233, -0.3603,
         -0.0520, -0.1930, -0.1412,  0.0447, -0.2601,  0.5621,  0.1286,  0.0109,
          0.0089, -0.1745,  0.0285,  0.0384,  0.0462, -0.0798,  0.0342, -0.0393,
          0.0513,  0.0131]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
756000 特征值优化 tensor(18.1013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0786,  1.1561, -1.4439,  0.6967, -0.3753,  1.3377,  0.6979, -1.9167,
         -0.1959, -0.9299,  0.3950,  0.2652,  0.4243,  0.5899, -1.2199,  0.1804,
         -0.3872,  0.0981, -0.1230, -0.1000,  1.1009, -0.0984, -0.9575,  2.2573,
         -1.6288, -0.3656,  1.0029, -1.3398,  0.8783, -1.7783, -0.5280, -0.4087,
         -0.0980, -0.0492, -2.1454,  0.1398, -1.4675, -1.6860,  1.2503,  0.4582,
         -0.2060,  1.4425]], device='cuda:0') tensor(0.2068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
757000 特征值优化 tensor(4.9170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2122,  0.9030, -0.4482,  1.2989,  0.3510,  2.2798,  1.6880, -1.1744,
          0.6703, -0.4855,  1.4771,  0.1741,  0.0374, -0.0851, -0.2702,  0.0432,
         -0.0716, -0.2671, -0.0533,  0.0289,  0.3506, -0.1305, -0.0708,  1.1791,
         -0.6229,  0.3424,  0.1703, -0.3233,  0.0175, -0.7555, -0.1587, -0.3230,
         -0.1958, -0.0165, -1.1146, -0.0948, -0.4549, -0.6996,  0.3915,  0.0330,
          0.3007,  0.5200]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
758000 特征值优化 tensor(1.1755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.1149e-02,  1.9243e-01, -4.3128e-01,  1.5922e+00, -1.7576e-01,
          2.4120e+00,  1.6396e+00, -1.1375e+00,  1.1151e+00, -7.8776e-01,
          1.7711e+00, -6.3134e-01, -6.5189e-03, -2.6978e-01, -1.5489e-01,
         -1.2627e-01, -1.0195e-03, -1.2000e-01,  2.8569e-01,  2.4214e-02,
          1.6054e-01, -1.2640e-01,  3.8526e-01,  5.6727e-01, -9.1877e-02,
          7.1484e-02, -1.4656e-02, -4.3239e-03,  8.8217e-03, -3.5318e-01,
         -1.7416e-01, -3.1972e-01, -2.2060e-01, -9.0555e-02, -5.1425e-01,
         -1.2061e-01,  6.4330e-02, -2.9578e-01,  2.6463e-01, -1.2941e-02,
          2.5310e-01,  2.3953e-01]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
759000 特征值优化 tensor(1.0863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6912e-02,  1.5983e-01, -6.8637e-01,  1.6086e+00, -1.6952e-01,
          2.2611e+00,  1.6955e+00, -1.0096e+00,  1.1275e+00, -7.2842e-01,
          1.7018e+00, -6.9121e-01, -3.9417e-03, -2.4153e-01, -9.2123e-02,
          7.2525e-04, -3.0440e-02, -9.0942e-02,  3.0320e-01,  2.0215e-02,
          1.6405e-01, -1.3360e-01,  3.6828e-01,  4.2525e-01, -7.3239e-02,
          7.8195e-02,  1.9558e-02,  1.6041e-02,  2.0797e-02, -2.8504e-01,
         -1.7008e-01, -2.2605e-01, -3.6387e-01, -7.1062e-02, -4.3451e-01,
         -1.2755e-01,  6.3823e-02, -2.5479e-01,  2.5487e-01, -2.4181e-02,
          2.9423e-01,  2.3994e-01]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
760000 特征值优化 tensor(1.0773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0278,  0.1568, -0.7459,  1.5879, -0.1759,  1.9087,  1.7178, -1.0141,
          1.1148, -0.8356,  1.5438, -0.7213, -0.0035, -0.2056, -0.0625,  0.0774,
         -0.0027, -0.1520,  0.2902,  0.0178,  0.1635, -0.1288,  0.3292,  0.3479,
         -0.0356,  0.0312,  0.0283,  0.0235, -0.0020, -0.2698, -0.1682, -0.2230,
         -0.2806, -0.0099, -0.4166, -0.1264,  0.0210, -0.1878,  0.2337, -0.0562,
          0.2901,  0.2607]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
761000 特征值优化 tensor(1.0806, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0761e-02,  1.5832e-01, -7.4726e-01,  1.5896e+00, -1.6770e-01,
          1.8015e+00,  1.6535e+00, -9.1257e-01,  1.1536e+00, -9.0156e-01,
          1.3931e+00, -6.4789e-01, -4.3568e-03, -2.1109e-01, -5.6868e-02,
          9.0118e-02,  5.0456e-04, -1.3405e-01,  2.8303e-01,  1.9154e-02,
          1.6295e-01, -1.2891e-01,  3.2226e-01,  3.3568e-01, -4.4024e-02,
          2.3568e-02,  2.9026e-02,  1.9318e-02, -1.6382e-02, -2.7070e-01,
         -1.6978e-01, -2.0743e-01, -2.9223e-01,  1.3978e-02, -4.1129e-01,
         -1.4169e-01,  3.6843e-03, -1.6554e-01,  2.3422e-01, -6.1615e-02,
          2.6796e-01,  2.7178e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
762000 特征值优化 tensor(1.0191, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1669, -0.0143, -0.7782,  1.6697,  0.2047,  1.7474,  1.6672, -0.8815,
          1.1063, -1.0720,  1.1133, -0.7606, -0.0187, -0.1852, -0.0745,  0.0688,
          0.0634, -0.1295,  0.2335,  0.0393,  0.1484, -0.1263,  0.2174,  0.2944,
         -0.0920, -0.0401,  0.0821,  0.0351, -0.0787, -0.2565, -0.1912, -0.2274,
         -0.2863,  0.0169, -0.3900, -0.1177,  0.0083,  0.0287,  0.2745, -0.0616,
          0.1813,  0.1717]], device='cuda:0') tensor(0.2131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
763000 特征值优化 tensor(1.0134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1645, -0.0137, -0.7913,  1.6841,  0.2513,  1.7474,  1.7373, -0.9759,
          1.0979, -1.0740,  1.0652, -0.7609, -0.0189, -0.1910, -0.0992,  0.1472,
          0.0942, -0.1099,  0.1617,  0.0389,  0.1483, -0.1167,  0.2142,  0.3232,
         -0.0762, -0.0233,  0.0577,  0.0943, -0.0577, -0.2508, -0.1879, -0.2460,
         -0.2841,  0.0163, -0.3891, -0.1161, -0.0436,  0.1108,  0.2834, -0.0478,
          0.1000,  0.1569]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
764000 特征值优化 tensor(1.0177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1743, -0.0120, -0.7820,  1.6565,  0.2586,  1.7541,  1.8095, -1.0439,
          1.0446, -1.0712,  1.1542, -0.7781, -0.0192, -0.1992, -0.1166,  0.0925,
          0.1249, -0.1415,  0.1586,  0.0397,  0.1487, -0.1193,  0.3082,  0.2527,
         -0.0219,  0.0660,  0.1308,  0.0453,  0.0076, -0.2472, -0.1892, -0.2833,
         -0.2649,  0.0163, -0.3812, -0.1165, -0.0546,  0.1219,  0.2444, -0.0648,
          0.0911,  0.1899]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
765000 特征值优化 tensor(1.0261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1816, -0.0116, -0.7497,  1.6341,  0.2676,  1.7535,  1.9103, -1.1419,
          1.0005, -1.0633,  1.1998, -0.7521, -0.0190, -0.1946, -0.1203,  0.1141,
          0.0957, -0.1261,  0.1684,  0.0394,  0.1486, -0.1251,  0.2732,  0.2879,
         -0.0408,  0.0411,  0.0877,  0.0815, -0.0139, -0.2464, -0.1874, -0.2780,
         -0.2735,  0.0176, -0.3799, -0.1168, -0.0643,  0.1289,  0.2779, -0.0520,
          0.0848,  0.1662]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
766000 特征值优化 tensor(1.0167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1717, -0.0108, -0.7803,  1.6580,  0.2565,  1.7537,  2.0216, -1.2310,
          0.9992, -1.0824,  1.2589, -0.7392, -0.0190, -0.1891, -0.1112,  0.1013,
          0.1016, -0.1309,  0.1692,  0.0400,  0.1487, -0.1187,  0.2630,  0.2994,
         -0.0549,  0.0245,  0.0642,  0.1059, -0.0095, -0.2471, -0.1864, -0.2647,
         -0.2907,  0.0157, -0.3808, -0.1188, -0.0779,  0.1396,  0.2693, -0.0459,
          0.0753,  0.1635]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
767000 特征值优化 tensor(1.0208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1727, -0.0133, -0.7682,  1.6427,  0.2565,  1.7516,  2.1086, -1.3015,
          0.9980, -1.0853,  1.3435, -0.7461, -0.0192, -0.1838, -0.1159,  0.1298,
          0.0877, -0.1319,  0.1516,  0.0400,  0.1485, -0.1199,  0.3018,  0.2550,
         -0.0130,  0.0670,  0.1077,  0.0664,  0.0033, -0.2466, -0.1894, -0.2930,
         -0.2793,  0.0166, -0.3796, -0.1227, -0.0907,  0.1505,  0.2574, -0.0609,
          0.0680,  0.1804]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
768000 特征值优化 tensor(1.0128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1702, -0.0127, -0.7844,  1.6700,  0.2539,  1.7506,  2.2108, -1.3869,
          1.0132, -1.1012,  1.4006, -0.7580, -0.0190, -0.1899, -0.1092,  0.1269,
          0.1003, -0.1225,  0.1525,  0.0398,  0.1489, -0.1170,  0.3294,  0.2251,
          0.0230,  0.0925,  0.1204,  0.0463,  0.0566, -0.2476, -0.1897, -0.2935,
         -0.2857,  0.0159, -0.3794, -0.1235, -0.1033,  0.1613,  0.2154, -0.0782,
          0.0586,  0.2110]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
769000 特征值优化 tensor(1.0221, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1767, -0.0095, -0.7558,  1.6383,  0.2624,  1.7595,  2.2769, -1.4596,
          0.9801, -1.0841,  1.4565, -0.7133, -0.0191, -0.1780, -0.1186,  0.1072,
          0.1122, -0.1214,  0.1634,  0.0416,  0.1486, -0.1195,  0.2814,  0.2752,
         -0.0351,  0.0495,  0.0676,  0.0989,  0.0125, -0.2519, -0.1856, -0.2903,
         -0.2949,  0.0166, -0.3823, -0.1209, -0.1095,  0.1679,  0.2583, -0.0670,
          0.0547,  0.1845]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
770000 特征值优化 tensor(1.0179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1726, -0.0118, -0.7772,  1.6560,  0.2564,  1.7525,  2.3162, -1.4843,
          0.9819, -1.1008,  1.4774, -0.7116, -0.0191, -0.1861, -0.1161,  0.0978,
          0.1234, -0.1351,  0.1613,  0.0408,  0.1486, -0.1191,  0.2613,  0.2997,
         -0.0539,  0.0261,  0.0659,  0.1089, -0.0064, -0.2467, -0.1871, -0.2992,
         -0.2905,  0.0167, -0.3812, -0.1225, -0.1149,  0.1712,  0.2690, -0.0514,
          0.0512,  0.1668]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
771000 特征值优化 tensor(1.0134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1720, -0.0115, -0.7872,  1.6691,  0.2565,  1.7532,  2.3453, -1.5055,
          0.9765, -1.1137,  1.4934, -0.7126, -0.0192, -0.1858, -0.1131,  0.0878,
          0.1242, -0.1381,  0.1667,  0.0404,  0.1487, -0.1171,  0.2437,  0.3110,
         -0.0655,  0.0046,  0.0648,  0.1059, -0.0335, -0.2476, -0.1869, -0.3018,
         -0.2923,  0.0161, -0.3804, -0.1225, -0.1190,  0.1733,  0.2789, -0.0354,
          0.0491,  0.1551]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
772000 特征值优化 tensor(1.0092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1697, -0.0125, -0.7909,  1.6813,  0.2535,  1.7505,  2.3627, -1.5215,
          0.9754, -1.1213,  1.5144, -0.7064, -0.0192, -0.1877, -0.1107,  0.0808,
          0.1346, -0.1430,  0.1656,  0.0398,  0.1487, -0.1166,  0.2182,  0.3279,
         -0.0863, -0.0234,  0.0574,  0.0995, -0.0572, -0.2500, -0.1898, -0.3046,
         -0.2940,  0.0163, -0.3831, -0.1203, -0.1203,  0.1747,  0.2895, -0.0160,
          0.0470,  0.1434]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
773000 特征值优化 tensor(1.0155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1676, -0.0120, -0.7781,  1.6609,  0.2513,  1.7501,  2.3897, -1.5497,
          0.9740, -1.1131,  1.5300, -0.7256, -0.0192, -0.1908, -0.1045,  0.1149,
          0.0971, -0.1210,  0.1659,  0.0391,  0.1488, -0.1182,  0.3065,  0.2519,
         -0.0077,  0.0655,  0.1155,  0.0602,  0.0173, -0.2473, -0.1877, -0.2894,
         -0.3036,  0.0159, -0.3771, -0.1265, -0.1242,  0.1801,  0.2429, -0.0647,
          0.0410,  0.1895]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
774000 特征值优化 tensor(1.0200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7446e-01, -1.1635e-02, -7.7125e-01,  1.6490e+00,  2.6050e-01,
          1.7547e+00,  2.4140e+00, -1.5545e+00,  9.5799e-01, -1.1042e+00,
          1.5300e+00, -6.9640e-01, -1.9294e-02, -1.8509e-01, -1.1326e-01,
          1.0204e-01,  1.0752e-01, -1.2798e-01,  1.6833e-01,  4.1028e-02,
          1.4860e-01, -1.1948e-01,  2.6844e-01,  2.9211e-01, -4.6689e-02,
          3.4874e-02,  6.2902e-02,  1.0762e-01,  2.2471e-03, -2.4852e-01,
         -1.8839e-01, -3.1266e-01, -2.9597e-01,  1.6857e-02, -3.7934e-01,
         -1.2489e-01, -1.2572e-01,  1.7608e-01,  2.6430e-01, -5.5768e-02,
          5.1377e-02,  1.7220e-01]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
775000 特征值优化 tensor(1.0093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7416e-01, -1.2111e-02, -7.8869e-01,  1.6735e+00,  2.5862e-01,
          1.7536e+00,  2.4329e+00, -1.5619e+00,  9.7360e-01, -1.1258e+00,
          1.5435e+00, -6.9550e-01, -1.9386e-02, -1.8203e-01, -1.1346e-01,
          8.1109e-02,  1.3169e-01, -1.3503e-01,  1.6770e-01,  4.1066e-02,
          1.4854e-01, -1.1751e-01,  2.4153e-01,  3.0794e-01, -6.7470e-02,
          1.2385e-03,  6.3169e-02,  9.6137e-02, -3.4586e-02, -2.4903e-01,
         -1.8950e-01, -3.1421e-01, -2.9620e-01,  1.6607e-02, -3.8148e-01,
         -1.2378e-01, -1.2699e-01,  1.7462e-01,  2.7743e-01, -2.7842e-02,
          5.3486e-02,  1.5830e-01]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
776000 特征值优化 tensor(1.0153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1678, -0.0120, -0.7827,  1.6655,  0.2516,  1.7501,  2.4436, -1.5799,
          0.9704, -1.1235,  1.5547, -0.7161, -0.0192, -0.1890, -0.1025,  0.1222,
          0.0961, -0.1194,  0.1634,  0.0390,  0.1487, -0.1173,  0.3225,  0.2376,
          0.0089,  0.0827,  0.1173,  0.0578,  0.0338, -0.2472, -0.1874, -0.2926,
         -0.3048,  0.0163, -0.3770, -0.1290, -0.1313,  0.1844,  0.2302, -0.0711,
          0.0385,  0.1991]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
777000 特征值优化 tensor(1.0201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1766, -0.0096, -0.7600,  1.6405,  0.2618,  1.7598,  2.4564, -1.5796,
          0.9440, -1.1119,  1.5537, -0.6851, -0.0193, -0.1780, -0.1171,  0.1081,
          0.1138, -0.1256,  0.1625,  0.0414,  0.1487, -0.1202,  0.2802,  0.2760,
         -0.0329,  0.0470,  0.0698,  0.0975,  0.0110, -0.2499, -0.1885, -0.3175,
         -0.2962,  0.0168, -0.3789, -0.1264, -0.1299,  0.1771,  0.2569, -0.0627,
          0.0509,  0.1820]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
778000 特征值优化 tensor(1.0208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7058e-01, -1.1866e-02, -7.6614e-01,  1.6406e+00,  2.5509e-01,
          1.7522e+00,  2.4632e+00, -1.5919e+00,  9.4214e-01, -1.1223e+00,
          1.5652e+00, -6.9235e-01, -1.9278e-02, -1.8138e-01, -1.0873e-01,
          1.2160e-01,  9.4117e-02, -1.2310e-01,  1.6153e-01,  4.0119e-02,
          1.4872e-01, -1.1918e-01,  2.9890e-01,  2.6255e-01, -2.0528e-02,
          6.0979e-02,  1.1043e-01,  6.8819e-02, -1.3180e-04, -2.4690e-01,
         -1.8705e-01, -2.9569e-01, -3.0489e-01,  1.6120e-02, -3.7587e-01,
         -1.2915e-01, -1.3391e-01,  1.8488e-01,  2.5852e-01, -6.0866e-02,
          3.9232e-02,  1.8129e-01]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
779000 特征值优化 tensor(1.0194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7448e-01, -1.1210e-02, -7.7321e-01,  1.6498e+00,  2.5886e-01,
          1.7545e+00,  2.4707e+00, -1.5905e+00,  9.3135e-01, -1.1225e+00,
          1.5585e+00, -6.7283e-01, -1.8976e-02, -1.8243e-01, -1.1509e-01,
          1.0206e-01,  1.1646e-01, -1.2912e-01,  1.6527e-01,  4.0658e-02,
          1.4883e-01, -1.1908e-01,  2.6832e-01,  2.9462e-01, -4.6270e-02,
          3.0887e-02,  6.3804e-02,  1.0760e-01,  8.3192e-04, -2.4772e-01,
         -1.8840e-01, -3.1619e-01, -2.9688e-01,  1.6531e-02, -3.7832e-01,
         -1.2854e-01, -1.3088e-01,  1.7681e-01,  2.6385e-01, -5.5012e-02,
          5.3299e-02,  1.7204e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
780000 特征值优化 tensor(1.0223, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1728, -0.0123, -0.7611,  1.6367,  0.2568,  1.7545,  2.4720, -1.5967,
          0.9292, -1.1288,  1.5726, -0.6797, -0.0193, -0.1800, -0.1074,  0.1250,
          0.0948, -0.1250,  0.1643,  0.0394,  0.1485, -0.1192,  0.2904,  0.2680,
         -0.0250,  0.0527,  0.1053,  0.0722, -0.0056, -0.2478, -0.1866, -0.2991,
         -0.3046,  0.0161, -0.3762, -0.1312, -0.1344,  0.1841,  0.2650, -0.0597,
          0.0402,  0.1750]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
781000 特征值优化 tensor(1.0235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1783, -0.0107, -0.7520,  1.6361,  0.2650,  1.7606,  2.4788, -1.5970,
          0.9199, -1.1189,  1.5585, -0.6586, -0.0191, -0.1810, -0.1168,  0.1112,
          0.1083, -0.1203,  0.1690,  0.0414,  0.1487, -0.1212,  0.2832,  0.2718,
         -0.0285,  0.0517,  0.0710,  0.0979,  0.0156, -0.2504, -0.1863, -0.3183,
         -0.2978,  0.0171, -0.3788, -0.1301, -0.1321,  0.1784,  0.2555, -0.0700,
          0.0497,  0.1885]], device='cuda:0') tensor(0.2103, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
782000 特征值优化 tensor(1.0229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1729, -0.0116, -0.7597,  1.6360,  0.2582,  1.7568,  2.4776, -1.6025,
          0.9162, -1.1355,  1.5745, -0.6728, -0.0190, -0.1761, -0.1124,  0.1170,
          0.0899, -0.1266,  0.1714,  0.0404,  0.1486, -0.1196,  0.2863,  0.2704,
         -0.0277,  0.0517,  0.1007,  0.0757, -0.0070, -0.2478, -0.1865, -0.2986,
         -0.3044,  0.0157, -0.3753, -0.1319, -0.1339,  0.1836,  0.2661, -0.0600,
          0.0411,  0.1745]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
783000 特征值优化 tensor(1.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1858, -0.0138, -0.7582,  1.6483,  0.2633,  1.7542,  2.4810, -1.6030,
          0.9152, -1.1281,  1.5573, -0.6514, -0.0192, -0.1833, -0.1129,  0.1123,
          0.1022, -0.1184,  0.1752,  0.0398,  0.1489, -0.1215,  0.2980,  0.2600,
         -0.0174,  0.0585,  0.0884,  0.0715,  0.0264, -0.2486, -0.1851, -0.3127,
         -0.2959,  0.0163, -0.3784, -0.1335, -0.1336,  0.1805,  0.2469, -0.0782,
          0.0464,  0.1943]], device='cuda:0') tensor(0.2148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
784000 特征值优化 tensor(1.0121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1735, -0.0113, -0.7892,  1.6721,  0.2578,  1.7537,  2.4846, -1.5982,
          0.9121, -1.1557,  1.5699, -0.6519, -0.0191, -0.1826, -0.1145,  0.0834,
          0.1350, -0.1410,  0.1671,  0.0407,  0.1488, -0.1171,  0.2283,  0.3194,
         -0.0746, -0.0130,  0.0576,  0.1055, -0.0471, -0.2485, -0.1888, -0.3166,
         -0.2971,  0.0161, -0.3773, -0.1305, -0.1313,  0.1743,  0.2809, -0.0288,
          0.0553,  0.1472]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
785000 特征值优化 tensor(1.0116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1694, -0.0117, -0.7852,  1.6714,  0.2535,  1.7504,  2.4860, -1.6067,
          0.9337, -1.1587,  1.5675, -0.6808, -0.0193, -0.1908, -0.0986,  0.1269,
          0.0929, -0.1196,  0.1614,  0.0396,  0.1489, -0.1172,  0.3266,  0.2233,
          0.0179,  0.0788,  0.1319,  0.0346,  0.0521, -0.2483, -0.1873, -0.2934,
         -0.3071,  0.0160, -0.3746, -0.1361, -0.1364,  0.1871,  0.2103, -0.0760,
          0.0362,  0.2167]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
786000 特征值优化 tensor(1.0123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1738, -0.0123, -0.7900,  1.6735,  0.2579,  1.7529,  2.4846, -1.5974,
          0.8986, -1.1631,  1.5706, -0.6440, -0.0192, -0.1816, -0.1130,  0.0807,
          0.1245, -0.1387,  0.1729,  0.0409,  0.1488, -0.1163,  0.2261,  0.3261,
         -0.0783, -0.0201,  0.0483,  0.1180, -0.0553, -0.2478, -0.1888, -0.3171,
         -0.2971,  0.0165, -0.3763, -0.1310, -0.1316,  0.1744,  0.2837, -0.0260,
          0.0569,  0.1423]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
787000 特征值优化 tensor(1.0483, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1724, -0.0125, -0.7816,  1.6690,  0.2558,  1.7508,  2.4845, -1.6067,
          0.9157, -1.1570,  1.5624, -0.6653, -0.0188, -0.1893, -0.1005,  0.1174,
          0.0968, -0.1202,  0.1698,  0.0407,  0.1502, -0.1200,  0.3256,  0.2275,
          0.0179,  0.0797,  0.1205,  0.0431,  0.0508, -0.2450, -0.1865, -0.3000,
         -0.3007,  0.0178, -0.3786, -0.1349, -0.1365,  0.1851,  0.2166, -0.0780,
          0.0424,  0.2114]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
788000 特征值优化 tensor(1.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1873, -0.0173, -0.7562,  1.6388,  0.2646,  1.7545,  2.4746, -1.6110,
          0.8836, -1.1468,  1.5738, -0.6337, -0.0199, -0.1740, -0.1128,  0.1107,
          0.1040, -0.1219,  0.1739,  0.0393,  0.1474, -0.1229,  0.2611,  0.2962,
         -0.0515,  0.0216,  0.0840,  0.0873, -0.0239, -0.2466, -0.1864, -0.3042,
         -0.3034,  0.0175, -0.3746, -0.1352, -0.1312,  0.1805,  0.2806, -0.0542,
          0.0429,  0.1634]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
789000 特征值优化 tensor(1.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1840, -0.0130, -0.7496,  1.6371,  0.2647,  1.7582,  2.4875, -1.6042,
          0.8848, -1.1390,  1.5594, -0.6282, -0.0194, -0.1824, -0.1149,  0.1162,
          0.1059, -0.1191,  0.1708,  0.0398,  0.1482, -0.1208,  0.2977,  0.2601,
         -0.0183,  0.0592,  0.0873,  0.0786,  0.0252, -0.2440, -0.1844, -0.3146,
         -0.2982,  0.0169, -0.3755, -0.1354, -0.1338,  0.1796,  0.2482, -0.0754,
          0.0484,  0.2005]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
790000 特征值优化 tensor(1.0234, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1750, -0.0106, -0.7575,  1.6346,  0.2587,  1.7569,  2.4858, -1.6075,
          0.8797, -1.1564,  1.5744, -0.6337, -0.0192, -0.1773, -0.1119,  0.1179,
          0.0940, -0.1233,  0.1754,  0.0407,  0.1486, -0.1207,  0.2828,  0.2742,
         -0.0283,  0.0466,  0.0974,  0.0794, -0.0095, -0.2461, -0.1853, -0.2984,
         -0.3048,  0.0161, -0.3737, -0.1377, -0.1345,  0.1839,  0.2669, -0.0599,
          0.0400,  0.1755]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
791000 特征值优化 tensor(1.0242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1789, -0.0127, -0.7489,  1.6341,  0.2670,  1.7586,  2.4890, -1.6042,
          0.8759, -1.1484,  1.5595, -0.6167, -0.0192, -0.1803, -0.1194,  0.1101,
          0.1088, -0.1212,  0.1699,  0.0410,  0.1482, -0.1232,  0.2862,  0.2705,
         -0.0252,  0.0514,  0.0758,  0.0928,  0.0183, -0.2498, -0.1864, -0.3179,
         -0.2984,  0.0173, -0.3761, -0.1379, -0.1336,  0.1802,  0.2514, -0.0719,
          0.0474,  0.1948]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
792000 特征值优化 tensor(1.0206, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6863e-01, -1.4828e-02, -7.6447e-01,  1.6390e+00,  2.5556e-01,
          1.7525e+00,  2.4910e+00, -1.6054e+00,  8.7344e-01, -1.1675e+00,
          1.5765e+00, -6.3160e-01, -1.8816e-02, -1.8210e-01, -1.0762e-01,
          1.2068e-01,  9.4382e-02, -1.1987e-01,  1.6393e-01,  3.9493e-02,
          1.4850e-01, -1.1800e-01,  2.9616e-01,  2.6491e-01, -1.7508e-02,
          5.7056e-02,  1.0834e-01,  7.2994e-02, -2.2617e-03, -2.4806e-01,
         -1.8707e-01, -2.9884e-01, -3.0506e-01,  1.6098e-02, -3.7100e-01,
         -1.3981e-01, -1.3723e-01,  1.8623e-01,  2.5777e-01, -6.1620e-02,
          4.0106e-02,  1.8128e-01]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
793000 特征值优化 tensor(1.0187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1740, -0.0109, -0.7754,  1.6506,  0.2586,  1.7550,  2.4957, -1.6028,
          0.8681, -1.1705,  1.5652, -0.6138, -0.0192, -0.1826, -0.1140,  0.0984,
          0.1196, -0.1300,  0.1653,  0.0411,  0.1486, -0.1193,  0.2640,  0.2986,
         -0.0499,  0.0218,  0.0662,  0.1093, -0.0031, -0.2474, -0.1871, -0.3171,
         -0.2972,  0.0165, -0.3741, -0.1398, -0.1338,  0.1774,  0.2630, -0.0550,
          0.0524,  0.1732]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
794000 特征值优化 tensor(1.0183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1677, -0.0128, -0.7732,  1.6506,  0.2522,  1.7498,  2.4909, -1.6124,
          0.8767, -1.1749,  1.5703, -0.6227, -0.0189, -0.1862, -0.1095,  0.1127,
          0.0930, -0.1252,  0.1670,  0.0393,  0.1487, -0.1186,  0.3079,  0.2534,
         -0.0062,  0.0650,  0.1168,  0.0648,  0.0103, -0.2467, -0.1876, -0.2954,
         -0.3061,  0.0156, -0.3715, -0.1411, -0.1369,  0.1866,  0.2451, -0.0656,
          0.0392,  0.1907]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
795000 特征值优化 tensor(1.0167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1744, -0.0112, -0.7804,  1.6568,  0.2587,  1.7554,  2.4937, -1.6043,
          0.8593, -1.1795,  1.5609, -0.6052, -0.0189, -0.1819, -0.1143,  0.0985,
          0.1115, -0.1288,  0.1671,  0.0406,  0.1488, -0.1191,  0.2607,  0.2990,
         -0.0489,  0.0186,  0.0662,  0.1070, -0.0087, -0.2470, -0.1873, -0.3170,
         -0.2970,  0.0162, -0.3731, -0.1414, -0.1341,  0.1793,  0.2638, -0.0519,
          0.0514,  0.1689]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
796000 特征值优化 tensor(1.0176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1684, -0.0127, -0.7736,  1.6521,  0.2521,  1.7496,  2.4940, -1.6102,
          0.8646, -1.1815,  1.5713, -0.6154, -0.0190, -0.1867, -0.1063,  0.1177,
          0.0909, -0.1249,  0.1644,  0.0387,  0.1488, -0.1186,  0.3042,  0.2563,
         -0.0092,  0.0597,  0.1149,  0.0658,  0.0080, -0.2467, -0.1875, -0.2967,
         -0.3052,  0.0162, -0.3711, -0.1421, -0.1366,  0.1862,  0.2451, -0.0651,
          0.0393,  0.1906]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
797000 特征值优化 tensor(1.0175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1743, -0.0125, -0.7784,  1.6549,  0.2588,  1.7549,  2.4956, -1.6036,
          0.8508, -1.1837,  1.5620, -0.5960, -0.0193, -0.1825, -0.1145,  0.0970,
          0.1182, -0.1309,  0.1651,  0.0406,  0.1484, -0.1188,  0.2610,  0.2998,
         -0.0503,  0.0179,  0.0659,  0.1088, -0.0067, -0.2472, -0.1874, -0.3174,
         -0.2970,  0.0165, -0.3722, -0.1428, -0.1342,  0.1780,  0.2634, -0.0537,
          0.0529,  0.1709]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
798000 特征值优化 tensor(1.0181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1703, -0.0141, -0.7721,  1.6493,  0.2508,  1.7498,  2.4942, -1.6080,
          0.8500, -1.1858,  1.5717, -0.6061, -0.0194, -0.1862, -0.1093,  0.1186,
          0.0911, -0.1273,  0.1626,  0.0390,  0.1485, -0.1176,  0.2992,  0.2617,
         -0.0146,  0.0536,  0.1152,  0.0681,  0.0026, -0.2473, -0.1873, -0.2976,
         -0.3043,  0.0158, -0.3697, -0.1441, -0.1365,  0.1854,  0.2487, -0.0637,
          0.0394,  0.1876]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
799000 特征值优化 tensor(1.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1869, -0.0140, -0.7502,  1.6368,  0.2638,  1.7553,  2.4969, -1.6052,
          0.8414, -1.1684,  1.5560, -0.5813, -0.0198, -0.1868, -0.1056,  0.1172,
          0.1034, -0.1115,  0.1749,  0.0395,  0.1479, -0.1214,  0.3033,  0.2540,
         -0.0103,  0.0644,  0.0908,  0.0727,  0.0293, -0.2476, -0.1838, -0.3151,
         -0.2974,  0.0158, -0.3744, -0.1435, -0.1355,  0.1804,  0.2425, -0.0796,
          0.0468,  0.2080]], device='cuda:0') tensor(0.2152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
800000 特征值优化 tensor(1.0256, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1793, -0.0129, -0.7546,  1.6335,  0.2639,  1.7592,  2.4933, -1.6074,
          0.8308, -1.1867,  1.5719, -0.5873, -0.0193, -0.1710, -0.1176,  0.1176,
          0.0980, -0.1204,  0.1767,  0.0416,  0.1490, -0.1239,  0.2755,  0.2811,
         -0.0364,  0.0348,  0.0940,  0.0805, -0.0139, -0.2458, -0.1856, -0.3024,
         -0.3030,  0.0165, -0.3708, -0.1447, -0.1350,  0.1830,  0.2701, -0.0601,
          0.0412,  0.1759]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
801000 特征值优化 tensor(1.0553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1706, -0.0134, -0.7802,  1.6686,  0.2530,  1.7512,  2.5043, -1.6097,
          0.8572, -1.2021,  1.5559, -0.6052, -0.0192, -0.1875, -0.1069,  0.1181,
          0.1009, -0.1191,  0.1670,  0.0407,  0.1507, -0.1197,  0.3342,  0.2174,
          0.0281,  0.0842,  0.1346,  0.0329,  0.0595, -0.2452, -0.1872, -0.3006,
         -0.3010,  0.0175, -0.3747, -0.1465, -0.1392,  0.1854,  0.2064, -0.0812,
          0.0418,  0.2215]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
802000 正交保障 tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1729, -0.0119, -0.7904,  1.6770,  0.2559,  1.7523,  2.5049, -1.6018,
          0.8268, -1.2103,  1.5687, -0.5647, -0.0192, -0.1843, -0.1129,  0.0791,
          0.1314, -0.1411,  0.1681,  0.0403,  0.1486, -0.1167,  0.2188,  0.3274,
         -0.0807, -0.0258,  0.0540,  0.1074, -0.0577, -0.2490, -0.1891, -0.3175,
         -0.2973,  0.0162, -0.3733, -0.1432, -0.1329,  0.1741,  0.2833, -0.0251,
          0.0585,  0.1443]], device='cuda:0') tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
803000 特征值优化 tensor(1.0393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1786, -0.0144, -0.7775,  1.6656,  0.2592,  1.7530,  2.5039, -1.6095,
          0.8340, -1.2006,  1.5554, -0.5766, -0.0196, -0.1889, -0.1035,  0.1163,
          0.0997, -0.1212,  0.1729,  0.0401,  0.1506, -0.1227,  0.3135,  0.2437,
          0.0041,  0.0650,  0.1128,  0.0509,  0.0397, -0.2425, -0.1866, -0.3059,
         -0.2959,  0.0201, -0.3758, -0.1474, -0.1385,  0.1847,  0.2228, -0.0776,
          0.0444,  0.2073]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
804000 特征值优化 tensor(1.0104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1743, -0.0110, -0.7885,  1.6721,  0.2592,  1.7549,  2.5006, -1.6033,
          0.8269, -1.2208,  1.5662, -0.5580, -0.0192, -0.1812, -0.1138,  0.0826,
          0.1222, -0.1341,  0.1696,  0.0412,  0.1487, -0.1174,  0.2394,  0.3096,
         -0.0639, -0.0073,  0.0631,  0.1024, -0.0370, -0.2483, -0.1886, -0.3190,
         -0.2967,  0.0163, -0.3722, -0.1470, -0.1338,  0.1755,  0.2733, -0.0383,
          0.0573,  0.1606]], device='cuda:0') tensor(0.2261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
805000 特征值优化 tensor(1.0171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1679, -0.0128, -0.7782,  1.6569,  0.2515,  1.7500,  2.5038, -1.6117,
          0.8272, -1.2112,  1.5650, -0.5688, -0.0191, -0.1918, -0.0990,  0.1277,
          0.0939, -0.1196,  0.1610,  0.0391,  0.1487, -0.1180,  0.3181,  0.2437,
          0.0045,  0.0711,  0.1240,  0.0584,  0.0207, -0.2468, -0.1874, -0.2959,
         -0.3057,  0.0157, -0.3688, -0.1504, -0.1387,  0.1879,  0.2330, -0.0696,
          0.0374,  0.2005]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
806000 特征值优化 tensor(1.0157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1737, -0.0124, -0.7799,  1.6568,  0.2584,  1.7553,  2.5062, -1.6040,
          0.8024, -1.2157,  1.5638, -0.5497, -0.0190, -0.1833, -0.1127,  0.0957,
          0.1247, -0.1309,  0.1629,  0.0407,  0.1486, -0.1191,  0.2616,  0.2965,
         -0.0447,  0.0153,  0.0696,  0.1059, -0.0083, -0.2470, -0.1883, -0.3193,
         -0.2972,  0.0165, -0.3699, -0.1503, -0.1351,  0.1773,  0.2600, -0.0540,
          0.0531,  0.1722]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
807000 特征值优化 tensor(2.3491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0461, -0.9969,  1.1869,  1.3384, -0.1559, -0.5258,  1.3755, -0.1000,
          0.5706,  1.3433, -0.4071,  0.8445, -0.0366,  0.2491, -0.0120, -0.8472,
         -0.1774,  0.0046, -0.0222,  0.0668,  0.0241,  0.4341, -0.4399, -0.3619,
          0.0739, -0.0279,  0.1170, -0.3224, -0.4796,  0.3630, -0.2409, -0.0471,
         -0.1475,  0.7730,  0.3544, -0.1945,  0.0559,  0.0327, -0.5257, -0.1582,
          0.1846, -0.2388]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
808000 特征值优化 tensor(1.3581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4719, -1.0566,  1.4431,  1.1281,  0.4829, -0.3891,  1.1801, -0.1375,
          0.6035,  1.2828, -0.2948,  0.2080, -0.0638,  0.1806, -0.1375, -0.4033,
         -0.1409,  0.0419, -0.0323,  0.0029,  0.0452,  0.3959, -0.3229, -0.1043,
          0.1395, -0.0500,  0.1757, -0.1999, -0.3824,  0.2214, -0.2007,  0.0311,
          0.0169,  0.4368,  0.2770, -0.1917, -0.0604,  0.0065, -0.3345, -0.0418,
          0.1322, -0.2906]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
809000 特征值优化 tensor(1.3227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4021, -1.1033,  1.5317,  1.0840,  0.5131, -0.6782,  1.1180, -0.2058,
          0.5334,  0.9902, -0.2811, -0.1905, -0.0701,  0.2213, -0.3150, -0.3428,
         -0.0843,  0.0301, -0.1290,  0.0268,  0.0507,  0.4116, -0.2249, -0.0714,
          0.1089, -0.0622,  0.1019, -0.2575, -0.3991,  0.2118, -0.2063,  0.0334,
          0.0039,  0.3831,  0.2615, -0.1303, -0.0562,  0.0208, -0.2830, -0.0024,
          0.1276, -0.2633]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
810000 正交保障 tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3807, -1.0955,  1.5730,  1.2113,  0.5309, -1.1630,  1.0879, -0.2378,
          0.5625,  0.8243, -0.3907, -0.0459, -0.0634,  0.2800, -0.3100, -0.2533,
          0.1054,  0.0461, -0.0433,  0.0450,  0.0458,  0.4017, -0.1642,  0.0095,
          0.1700,  0.0248,  0.1013, -0.1227, -0.3984,  0.2450, -0.1930,  0.0324,
          0.0394,  0.3464,  0.2304, -0.1535, -0.0133,  0.0441, -0.2652, -0.0073,
          0.1094, -0.2436]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
811000 特征值优化 tensor(1.2978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3860e-01, -1.0405e+00,  1.6068e+00,  1.2291e+00,  5.3383e-01,
         -1.2102e+00,  9.8250e-01, -2.3519e-01,  5.6922e-01,  8.4919e-01,
         -3.4728e-01,  1.3019e-03, -6.1145e-02,  2.6796e-01, -3.2242e-01,
         -1.7309e-01,  1.4351e-01,  3.0112e-02, -5.8236e-03,  1.0644e-02,
          4.3996e-02,  4.0677e-01, -1.3345e-01,  2.6968e-02,  1.6904e-01,
          1.4469e-02,  6.9243e-02, -1.2862e-01, -4.0195e-01,  2.4682e-01,
         -1.9416e-01,  4.1531e-02,  1.9255e-02,  3.4178e-01,  2.2844e-01,
         -1.5770e-01, -3.7425e-04,  4.2394e-02, -2.6516e-01, -1.0164e-02,
          1.0545e-01, -2.4214e-01]], device='cuda:0') tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
812000 特征值优化 tensor(1.3066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4342e-01, -1.0394e+00,  1.6107e+00,  1.2242e+00,  5.2094e-01,
         -1.2132e+00,  9.8624e-01, -2.3083e-01,  5.5630e-01,  8.8079e-01,
         -3.0323e-01,  3.5221e-02, -5.9696e-02,  2.9807e-01, -2.5653e-01,
         -1.1712e-01,  1.6953e-01,  4.0748e-02,  1.1060e-02, -1.3182e-02,
          4.3376e-02,  4.0457e-01, -1.2188e-01,  4.0504e-02,  1.7103e-01,
          9.0922e-03,  6.2933e-02, -1.3247e-01, -4.0276e-01,  2.4878e-01,
         -1.9773e-01,  4.6400e-02,  6.5902e-03,  3.4220e-01,  2.2911e-01,
         -1.4789e-01, -4.9845e-04,  3.3272e-02, -2.5878e-01, -1.7967e-02,
          1.1131e-01, -2.5826e-01]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
813000 特征值优化 tensor(1.3107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4316e-01, -1.0406e+00,  1.6143e+00,  1.2158e+00,  5.2240e-01,
         -1.2162e+00,  9.9774e-01, -2.5473e-01,  5.2921e-01,  8.9421e-01,
         -3.1135e-01,  6.4753e-02, -6.2668e-02,  3.2150e-01, -2.4666e-01,
         -1.0782e-01,  1.6224e-01,  1.4121e-03,  3.2229e-02, -1.9946e-02,
          4.4312e-02,  4.0068e-01, -1.1812e-01,  3.8012e-02,  1.7050e-01,
         -1.1514e-02,  6.2118e-02, -1.3648e-01, -4.0373e-01,  2.5192e-01,
         -1.9183e-01,  5.1046e-02,  6.8753e-03,  3.4032e-01,  2.2603e-01,
         -1.5114e-01,  8.6060e-03,  3.0909e-02, -2.5252e-01, -1.7946e-02,
          1.1449e-01, -2.6582e-01]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
814000 特征值优化 tensor(1.3399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4311, -1.0535,  1.6030,  1.2327,  0.5388, -1.2150,  0.9801, -0.2867,
          0.4879,  0.9149, -0.3157,  0.0968, -0.0624,  0.3188, -0.2585, -0.1142,
          0.1907,  0.0647,  0.0179, -0.0374,  0.0429,  0.4041, -0.1227,  0.0382,
          0.1664, -0.0192,  0.0624, -0.1439, -0.4011,  0.2491, -0.1925,  0.0459,
         -0.0165,  0.3395,  0.2350, -0.1411, -0.0144,  0.0048, -0.2392, -0.0186,
          0.1295, -0.2788]], device='cuda:0') tensor(0.2089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
815000 特征值优化 tensor(1.3127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4451, -1.0465,  1.6125,  1.2162,  0.5222, -1.2077,  0.9936, -0.2613,
          0.4510,  0.9007, -0.2920,  0.1238, -0.0625,  0.3093, -0.2635, -0.0964,
          0.1769,  0.0668, -0.0067, -0.0284,  0.0447,  0.4017, -0.1261,  0.0545,
          0.1756, -0.0037,  0.0545, -0.1326, -0.4036,  0.2510, -0.1891,  0.0515,
          0.0039,  0.3428,  0.2180, -0.1530,  0.0055,  0.0288, -0.2430, -0.0167,
          0.1183, -0.2734]], device='cuda:0') tensor(0.2139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
816000 特征值优化 tensor(1.2972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4400, -1.0323,  1.6005,  1.2291,  0.5294, -1.2095,  0.9711, -0.2752,
          0.4447,  0.9012, -0.3115,  0.1317, -0.0606,  0.3046, -0.2594, -0.1078,
          0.2015,  0.0159,  0.0182,  0.0152,  0.0431,  0.4063, -0.1419,  0.0486,
          0.1847,  0.0116,  0.0651, -0.1121, -0.4010,  0.2478, -0.2030,  0.0383,
          0.0200,  0.3410,  0.2095, -0.1770, -0.0017,  0.0426, -0.2708, -0.0115,
          0.1103, -0.2424]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
817000 特征值优化 tensor(1.3414, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4289, -1.0486,  1.5972,  1.2348,  0.5389, -1.2111,  0.9751, -0.2938,
          0.4177,  0.9038, -0.3224,  0.1281, -0.0618,  0.3325, -0.2590, -0.1071,
          0.2198,  0.0304,  0.0181,  0.0427,  0.0445,  0.4042, -0.1288,  0.0563,
          0.1856,  0.0349,  0.0787, -0.0915, -0.4004,  0.2485, -0.1954,  0.0298,
          0.0359,  0.3407,  0.2079, -0.1878,  0.0043,  0.0434, -0.2848, -0.0062,
          0.1088, -0.2208]], device='cuda:0') tensor(0.2096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
818000 特征值优化 tensor(1.3116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4473, -1.0448,  1.6186,  1.2165,  0.5256, -1.2115,  0.9560, -0.3061,
          0.4085,  0.8905, -0.2925,  0.1725, -0.0618,  0.3208, -0.2599, -0.0908,
          0.1943,  0.0456,  0.0228,  0.0294,  0.0441,  0.4064, -0.1122,  0.0360,
          0.1803,  0.0153,  0.0621, -0.1016, -0.4037,  0.2482, -0.1944,  0.0492,
          0.0166,  0.3385,  0.2070, -0.1752, -0.0123,  0.0202, -0.2808, -0.0094,
          0.1219, -0.2377]], device='cuda:0') tensor(0.2166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
819000 特征值优化 tensor(1.3070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4491, -1.0399,  1.6178,  1.2190,  0.5257, -1.2121,  0.9449, -0.3181,
          0.4096,  0.8984, -0.2889,  0.1890, -0.0606,  0.3318, -0.2475, -0.1002,
          0.1956,  0.0426,  0.0205,  0.0225,  0.0436,  0.4103, -0.1175,  0.0291,
          0.1811,  0.0079,  0.0630, -0.1034, -0.4034,  0.2445, -0.1980,  0.0433,
          0.0157,  0.3388,  0.1959, -0.1802, -0.0130,  0.0143, -0.2720, -0.0140,
          0.1224, -0.2440]], device='cuda:0') tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
820000 特征值优化 tensor(1.3011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4451, -1.0372,  1.6183,  1.2198,  0.5299, -1.2174,  0.9555, -0.3372,
          0.3842,  0.9095, -0.2886,  0.2183, -0.0598,  0.3409, -0.2575, -0.0983,
          0.1801,  0.0059,  0.0329,  0.0144,  0.0421,  0.4122, -0.1245,  0.0367,
          0.1863, -0.0032,  0.0589, -0.1107, -0.4043,  0.2416, -0.1935,  0.0380,
          0.0115,  0.3408,  0.2080, -0.1715, -0.0166,  0.0116, -0.2710, -0.0150,
          0.1219, -0.2444]], device='cuda:0') tensor(0.2366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
821000 特征值优化 tensor(1.3080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4431, -1.0413,  1.6192,  1.2202,  0.5247, -1.2169,  0.9695, -0.3342,
          0.3644,  0.9036, -0.2823,  0.2217, -0.0610,  0.3517, -0.2443, -0.1037,
          0.1408,  0.0785,  0.0086,  0.0180,  0.0435,  0.4109, -0.1196,  0.0388,
          0.1888,  0.0018,  0.0593, -0.1069, -0.4031,  0.2430, -0.1934,  0.0429,
          0.0112,  0.3391,  0.2049, -0.1741, -0.0174,  0.0185, -0.2726, -0.0137,
          0.1200, -0.2466]], device='cuda:0') tensor(0.2194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
822000 特征值优化 tensor(1.3001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4384, -1.0375,  1.6071,  1.2335,  0.5251, -1.2100,  0.9345, -0.3481,
          0.3456,  0.9107, -0.2844,  0.2355, -0.0608,  0.3240, -0.2403, -0.1087,
          0.1749,  0.0181,  0.0507, -0.0087,  0.0435,  0.4099, -0.1231,  0.0347,
          0.1873, -0.0078,  0.0578, -0.1205, -0.4008,  0.2443, -0.1992,  0.0425,
          0.0186,  0.3422,  0.2132, -0.1715, -0.0224,  0.0120, -0.2533, -0.0145,
          0.1250, -0.2619]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
823000 特征值优化 tensor(1.3485, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4273, -1.0439,  1.6043,  1.2300,  0.5380, -1.2107,  0.9493, -0.3590,
          0.3007,  0.9187, -0.2785,  0.2595, -0.0620,  0.3244, -0.2505, -0.1057,
          0.1626,  0.1001, -0.0095, -0.0395,  0.0449,  0.4082, -0.1310,  0.0364,
          0.1716, -0.0063,  0.0535, -0.1385, -0.4014,  0.2450, -0.1941,  0.0313,
          0.0325,  0.3410,  0.2230, -0.1612, -0.0267,  0.0066, -0.2314, -0.0120,
          0.1287, -0.2801]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
824000 特征值优化 tensor(1.3042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4475, -1.0356,  1.6067,  1.2254,  0.5204, -1.2040,  0.9557, -0.3345,
          0.3222,  0.9079, -0.2644,  0.2569, -0.0601,  0.3089, -0.2483, -0.0745,
          0.1896,  0.0171,  0.0473, -0.0111,  0.0431,  0.4088, -0.1355,  0.0532,
          0.1862,  0.0111,  0.0576, -0.1110, -0.4029,  0.2443, -0.1993,  0.0418,
          0.0115,  0.3428,  0.2009, -0.1764,  0.0060,  0.0400, -0.2527, -0.0133,
          0.1033, -0.2644]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
825000 特征值优化 tensor(1.3194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4211e-01, -1.0505e+00,  1.6114e+00,  1.2201e+00,  5.1638e-01,
         -1.2132e+00,  9.5116e-01, -3.6222e-01,  3.2599e-01,  8.9782e-01,
         -2.7367e-01,  2.3452e-01, -6.3843e-02,  3.3072e-01, -2.4852e-01,
         -6.5824e-02,  2.2037e-01, -1.9736e-02,  7.6144e-02,  3.5057e-02,
          4.4858e-02,  4.0179e-01, -1.2359e-01,  4.5691e-02,  1.8457e-01,
          2.5011e-02,  6.9372e-02, -8.8591e-02, -4.0312e-01,  2.5059e-01,
         -1.8919e-01,  5.3026e-02, -3.8794e-04,  3.4199e-01,  2.0146e-01,
         -1.8826e-01, -6.1853e-03,  3.7631e-02, -2.7956e-01, -9.7254e-03,
          1.2169e-01, -2.3581e-01]], device='cuda:0') tensor(0.2148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
826000 特征值优化 tensor(1.2960, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4424, -1.0389,  1.6121,  1.2331,  0.5234, -1.2178,  0.9340, -0.3551,
          0.3115,  0.9127, -0.2432,  0.2687, -0.0615,  0.3034, -0.2568, -0.0995,
          0.2174, -0.0199,  0.0347, -0.0089,  0.0436,  0.4104, -0.1337,  0.0433,
          0.1823, -0.0106,  0.0527, -0.1201, -0.4015,  0.2448, -0.1982,  0.0392,
          0.0178,  0.3402,  0.2113, -0.1731, -0.0310,  0.0191, -0.2522, -0.0127,
          0.1261, -0.2614]], device='cuda:0') tensor(0.2111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
827000 特征值优化 tensor(1.3097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4784e-01, -1.0360e+00,  1.6200e+00,  1.2270e+00,  5.1227e-01,
         -1.2310e+00,  9.6258e-01, -3.4476e-01,  2.9952e-01,  9.0936e-01,
         -2.3474e-01,  2.7169e-01, -6.0706e-02,  3.1187e-01, -2.4607e-01,
         -7.7295e-02,  1.9169e-01, -7.3429e-03,  3.6573e-02, -1.8431e-02,
          4.2730e-02,  4.0615e-01, -1.2620e-01,  4.9818e-02,  1.7956e-01,
          7.1647e-03,  4.9732e-02, -1.1809e-01, -4.0369e-01,  2.4887e-01,
         -1.9190e-01,  4.6624e-02,  1.7544e-02,  3.3948e-01,  2.0586e-01,
         -1.7313e-01,  2.1424e-06,  3.8976e-02, -2.4645e-01, -1.1964e-02,
          1.1196e-01, -2.6837e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
828000 特征值优化 tensor(1.3057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4755e-01, -1.0342e+00,  1.6025e+00,  1.2216e+00,  5.0860e-01,
         -1.2022e+00,  9.4876e-01, -3.4549e-01,  2.9963e-01,  9.0343e-01,
         -2.2796e-01,  2.7155e-01, -5.9883e-02,  2.9943e-01, -2.4173e-01,
         -6.5427e-02,  2.0750e-01,  1.1631e-04,  4.0799e-02, -1.2908e-02,
          4.1873e-02,  4.0735e-01, -1.3854e-01,  5.2025e-02,  1.8529e-01,
          1.1512e-02,  5.0342e-02, -1.1678e-01, -4.0223e-01,  2.4471e-01,
         -1.9206e-01,  4.3475e-02,  1.4019e-02,  3.4346e-01,  2.0127e-01,
         -1.7370e-01, -2.4248e-03,  3.9804e-02, -2.5007e-01, -1.3247e-02,
          1.0736e-01, -2.6708e-01]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
829000 特征值优化 tensor(1.3190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4393, -1.0516,  1.6142,  1.2292,  0.5100, -1.2127,  0.9334, -0.3745,
          0.3110,  0.8951, -0.2535,  0.2441, -0.0642,  0.3215, -0.2461, -0.0571,
          0.2320,  0.0139,  0.0788,  0.0349,  0.0452,  0.4023, -0.1240,  0.0518,
          0.1863,  0.0269,  0.0671, -0.0957, -0.4032,  0.2523, -0.1894,  0.0520,
         -0.0026,  0.3420,  0.1973, -0.1889, -0.0101,  0.0400, -0.2788, -0.0114,
          0.1195, -0.2351]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
830000 特征值优化 tensor(1.2983, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4352, -1.0347,  1.5992,  1.2341,  0.5124, -1.2102,  0.9378, -0.3824,
          0.3105,  0.9083, -0.2518,  0.2647, -0.0605,  0.3264, -0.2334, -0.0571,
          0.2354,  0.0210,  0.0725,  0.0159,  0.0436,  0.4056, -0.1331,  0.0601,
          0.1941,  0.0292,  0.0706, -0.0932, -0.4006,  0.2485, -0.1975,  0.0458,
         -0.0060,  0.3407,  0.1987, -0.1912, -0.0046,  0.0456, -0.2672, -0.0137,
          0.1043, -0.2447]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
831000 特征值优化 tensor(1.3042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4659e-01, -1.0363e+00,  1.6114e+00,  1.2250e+00,  5.1509e-01,
         -1.2251e+00,  9.1223e-01, -3.8660e-01,  3.0691e-01,  9.0221e-01,
         -2.2537e-01,  2.7705e-01, -6.1404e-02,  3.1311e-01, -2.4340e-01,
         -8.4562e-02,  2.0870e-01, -7.9840e-04,  5.4756e-02,  5.4888e-03,
          4.3423e-02,  4.0881e-01, -1.2516e-01,  3.4445e-02,  1.9316e-01,
          2.6299e-03,  5.5313e-02, -1.1297e-01, -4.0287e-01,  2.4630e-01,
         -1.9712e-01,  4.2791e-02,  1.4444e-02,  3.4180e-01,  2.0674e-01,
         -1.7679e-01, -2.4061e-02,  2.5708e-02, -2.6278e-01, -1.3197e-02,
          1.2333e-01, -2.5217e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
832000 特征值优化 tensor(1.2932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3836e-01, -1.0383e+00,  1.6056e+00,  1.2279e+00,  5.2369e-01,
         -1.2212e+00,  9.0885e-01, -3.9717e-01,  2.8588e-01,  9.1119e-01,
         -2.1158e-01,  2.8289e-01, -6.1760e-02,  2.9999e-01, -2.5522e-01,
         -9.4426e-02,  2.2311e-01, -6.6434e-03,  3.5622e-02, -2.4171e-02,
          4.3788e-02,  4.0946e-01, -1.2178e-01,  2.4123e-02,  1.7946e-01,
         -7.4330e-04,  5.6366e-02, -1.3122e-01, -4.0166e-01,  2.4380e-01,
         -1.9492e-01,  3.7528e-02,  2.6731e-02,  3.4126e-01,  2.1805e-01,
         -1.6737e-01, -3.3108e-02,  1.9907e-02, -2.4405e-01, -1.1943e-02,
          1.2729e-01, -2.6947e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
833000 特征值优化 tensor(1.2940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4378, -1.0398,  1.6016,  1.2263,  0.5319, -1.2003,  0.9098, -0.3995,
          0.2765,  0.9132, -0.2009,  0.2909, -0.0617,  0.3116, -0.2522, -0.1019,
          0.2045, -0.0298,  0.0150, -0.0356,  0.0439,  0.4094, -0.1475,  0.0424,
          0.1748, -0.0110,  0.0471, -0.1391, -0.4010,  0.2454, -0.1941,  0.0302,
          0.0405,  0.3429,  0.2159, -0.1570, -0.0273,  0.0263, -0.2310, -0.0126,
          0.1242, -0.2827]], device='cuda:0') tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
834000 特征值优化 tensor(1.3117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4475, -1.0431,  1.6145,  1.2170,  0.5131, -1.2142,  0.9336, -0.3959,
          0.2779,  0.9048, -0.1887,  0.2840, -0.0613,  0.3062, -0.2511, -0.0690,
          0.2052, -0.0018,  0.0280, -0.0299,  0.0437,  0.4057, -0.1275,  0.0480,
          0.1786,  0.0066,  0.0464, -0.1225, -0.4038,  0.2469, -0.1927,  0.0453,
          0.0215,  0.3395,  0.2075, -0.1704, -0.0025,  0.0437, -0.2412, -0.0105,
          0.1131, -0.2733]], device='cuda:0') tensor(0.2098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
835000 特征值优化 tensor(1.2919, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3519e-01, -1.0392e+00,  1.6024e+00,  1.2335e+00,  5.1627e-01,
         -1.2125e+00,  9.0933e-01, -4.2174e-01,  3.0083e-01,  9.1357e-01,
         -2.2293e-01,  2.6745e-01, -6.0806e-02,  3.2756e-01, -2.3309e-01,
         -5.9039e-02,  2.3105e-01,  2.1198e-02,  7.4229e-02,  2.1226e-02,
          4.3761e-02,  4.0587e-01, -1.2965e-01,  5.9777e-02,  1.9360e-01,
          3.2414e-02,  6.7724e-02, -9.1568e-02, -4.0150e-01,  2.4773e-01,
         -1.9802e-01,  4.2680e-02,  1.7454e-05,  3.4077e-01,  1.9823e-01,
         -1.9338e-01,  8.1197e-04,  4.9390e-02, -2.7027e-01, -1.2549e-02,
          9.9325e-02, -2.4143e-01]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
836000 特征值优化 tensor(1.3057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4464, -1.0340,  1.6138,  1.2257,  0.5154, -1.2222,  0.8868, -0.4223,
          0.2990,  0.9001, -0.1929,  0.2785, -0.0613,  0.3134, -0.2471, -0.0773,
          0.2146,  0.0111,  0.0606,  0.0102,  0.0433,  0.4105, -0.1232,  0.0330,
          0.1940,  0.0056,  0.0552, -0.1089, -0.4012,  0.2444, -0.1948,  0.0418,
          0.0129,  0.3401,  0.2047, -0.1791, -0.0177,  0.0344, -0.2657, -0.0118,
          0.1199, -0.2483]], device='cuda:0') tensor(0.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
837000 特征值优化 tensor(1.2955, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4442, -1.0392,  1.6163,  1.2379,  0.5152, -1.2161,  0.8705, -0.4399,
          0.3006,  0.9133, -0.1946,  0.2882, -0.0615,  0.2991, -0.2563, -0.0901,
          0.2083,  0.0111,  0.0507, -0.0027,  0.0436,  0.4116, -0.1323,  0.0429,
          0.1840, -0.0061,  0.0564, -0.1166, -0.4030,  0.2462, -0.2002,  0.0388,
          0.0210,  0.3423,  0.2114, -0.1739, -0.0239,  0.0273, -0.2584, -0.0139,
          0.1233, -0.2567]], device='cuda:0') tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
838000 特征值优化 tensor(1.3064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4490, -1.0364,  1.6144,  1.2291,  0.5156, -1.2082,  0.8689, -0.4379,
          0.3165,  0.9065, -0.1807,  0.2757, -0.0618,  0.3190, -0.2458, -0.0899,
          0.2006,  0.0094,  0.0592,  0.0070,  0.0435,  0.4092, -0.1342,  0.0422,
          0.1813, -0.0031,  0.0512, -0.1148, -0.4007,  0.2459, -0.1933,  0.0429,
          0.0167,  0.3405,  0.1992, -0.1787, -0.0146,  0.0367, -0.2639, -0.0134,
          0.1183, -0.2543]], device='cuda:0') tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
839000 特征值优化 tensor(1.2928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4386, -1.0399,  1.6092,  1.2325,  0.5284, -1.2213,  0.8613, -0.4613,
          0.2841,  0.9096, -0.1841,  0.2805, -0.0619,  0.3052, -0.2563, -0.0969,
          0.2041,  0.0051,  0.0431, -0.0148,  0.0436,  0.4101, -0.1295,  0.0423,
          0.1789, -0.0028,  0.0504, -0.1247, -0.4020,  0.2439, -0.1969,  0.0335,
          0.0249,  0.3406,  0.2141, -0.1688, -0.0242,  0.0259, -0.2477, -0.0117,
          0.1248, -0.2645]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
840000 特征值优化 tensor(1.3200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4374, -1.0550,  1.6138,  1.2156,  0.5187, -1.2145,  0.8804, -0.4476,
          0.2701,  0.9081, -0.1591,  0.2818, -0.0630,  0.3062, -0.2595, -0.0854,
          0.2186, -0.0025,  0.0289, -0.0366,  0.0444,  0.4014, -0.1296,  0.0519,
          0.1818,  0.0025,  0.0492, -0.1262, -0.4038,  0.2519, -0.1866,  0.0424,
          0.0315,  0.3430,  0.2150, -0.1670, -0.0042,  0.0459, -0.2350, -0.0130,
          0.1223, -0.2792]], device='cuda:0') tensor(0.2115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
841000 特征值优化 tensor(1.3042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4432, -1.0361,  1.6093,  1.2361,  0.5097, -1.2132,  0.8708, -0.4577,
          0.2978,  0.9109, -0.1696,  0.2724, -0.0605,  0.3151, -0.2446, -0.0672,
          0.2055,  0.0248,  0.0584, -0.0034,  0.0428,  0.4083, -0.1351,  0.0556,
          0.1911,  0.0123,  0.0591, -0.1076, -0.4012,  0.2465, -0.1999,  0.0458,
          0.0148,  0.3405,  0.2018, -0.1835,  0.0057,  0.0512, -0.2574, -0.0136,
          0.0942, -0.2583]], device='cuda:0') tensor(0.2185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
842000 特征值优化 tensor(1.2890, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3536e-01, -1.0472e+00,  1.6102e+00,  1.2387e+00,  5.1858e-01,
         -1.2051e+00,  8.5125e-01, -4.8305e-01,  3.1920e-01,  9.1188e-01,
         -1.8295e-01,  2.4870e-01, -6.1364e-02,  3.2826e-01, -2.3485e-01,
         -5.4100e-02,  2.2877e-01,  4.4205e-02,  8.6215e-02,  3.0516e-02,
          4.4582e-02,  4.0648e-01, -1.3957e-01,  6.1088e-02,  1.8730e-01,
          2.8718e-02,  6.5632e-02, -9.0729e-02, -4.0203e-01,  2.4876e-01,
         -1.9787e-01,  4.4536e-02, -1.5668e-04,  3.4239e-01,  1.8398e-01,
         -1.9891e-01,  7.5819e-03,  5.3887e-02, -2.7780e-01, -1.2197e-02,
          9.4935e-02, -2.3153e-01]], device='cuda:0') tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
843000 特征值优化 tensor(1.2871, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3138e-01, -1.0454e+00,  1.6063e+00,  1.2360e+00,  5.2332e-01,
         -1.2122e+00,  8.6081e-01, -4.9145e-01,  3.0213e-01,  9.0977e-01,
         -1.7235e-01,  2.4918e-01, -6.1726e-02,  3.1820e-01, -2.3471e-01,
         -4.7044e-02,  2.4865e-01,  4.7427e-02,  8.5650e-02,  2.9503e-02,
          4.4465e-02,  4.0608e-01, -1.2720e-01,  6.2041e-02,  1.8994e-01,
          3.4258e-02,  7.1133e-02, -9.0709e-02, -4.0142e-01,  2.4828e-01,
         -1.9952e-01,  4.1243e-02, -3.1620e-03,  3.4080e-01,  1.9665e-01,
         -1.9623e-01,  1.4945e-03,  5.6084e-02, -2.7484e-01, -1.1000e-02,
          9.6185e-02, -2.3303e-01]], device='cuda:0') tensor(0.2076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
844000 特征值优化 tensor(1.3013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4680e-01, -1.0366e+00,  1.6141e+00,  1.2298e+00,  5.2011e-01,
         -1.2229e+00,  8.3011e-01, -4.8795e-01,  3.0889e-01,  9.0610e-01,
         -1.3575e-01,  2.7830e-01, -6.1382e-02,  3.1311e-01, -2.4919e-01,
         -8.7077e-02,  2.0684e-01,  1.8350e-02,  5.3938e-02, -1.4485e-03,
          4.3570e-02,  4.1164e-01, -1.3658e-01,  4.1143e-02,  1.8633e-01,
         -7.2744e-03,  5.1561e-02, -1.1670e-01, -4.0239e-01,  2.4502e-01,
         -1.9824e-01,  3.8333e-02,  1.9768e-02,  3.4127e-01,  2.0485e-01,
         -1.8001e-01, -1.8830e-02,  4.0672e-02, -2.5590e-01, -1.2579e-02,
          1.1660e-01, -2.5836e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
845000 特征值优化 tensor(1.2927, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3480e-01, -1.0377e+00,  1.6068e+00,  1.2315e+00,  5.2003e-01,
         -1.2128e+00,  8.1704e-01, -4.9728e-01,  2.6919e-01,  9.0868e-01,
         -1.1779e-01,  2.8724e-01, -6.1598e-02,  3.0030e-01, -2.6038e-01,
         -9.1037e-02,  2.1847e-01,  6.6600e-03,  3.2581e-02, -3.4524e-02,
          4.3678e-02,  4.0974e-01, -1.2321e-01,  2.5037e-02,  1.7767e-01,
          3.2226e-04,  5.3907e-02, -1.3398e-01, -4.0194e-01,  2.4439e-01,
         -2.0215e-01,  3.4454e-02,  3.2600e-02,  3.4162e-01,  2.2274e-01,
         -1.6353e-01, -2.7932e-02,  3.5470e-02, -2.3523e-01, -1.1485e-02,
          1.2223e-01, -2.7571e-01]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
846000 特征值优化 tensor(1.3471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3221e-01, -1.0494e+00,  1.6111e+00,  1.2361e+00,  5.3503e-01,
         -1.2027e+00,  8.2533e-01, -5.1818e-01,  2.6107e-01,  9.1177e-01,
         -1.1525e-01,  2.9487e-01, -6.2253e-02,  3.1514e-01, -2.5352e-01,
         -9.6487e-02,  2.0716e-01,  5.4651e-04,  2.3925e-02, -4.7458e-02,
          4.5338e-02,  4.0446e-01, -1.2253e-01,  3.1128e-02,  1.7571e-01,
         -2.9950e-03,  5.5831e-02, -1.4009e-01, -4.0203e-01,  2.4927e-01,
         -1.9202e-01,  2.4696e-02,  4.5463e-02,  3.4085e-01,  2.1998e-01,
         -1.6299e-01, -2.2813e-02,  3.6177e-02, -2.2787e-01, -1.2364e-02,
          1.2571e-01, -2.8427e-01]], device='cuda:0') tensor(0.2215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
847000 特征值优化 tensor(1.2946, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4414, -1.0393,  1.6127,  1.2340,  0.5201, -1.2249,  0.8264, -0.5152,
          0.3016,  0.9110, -0.1238,  0.2666, -0.0611,  0.3226, -0.2340, -0.0554,
          0.2193,  0.0419,  0.0782,  0.0136,  0.0439,  0.4077, -0.1243,  0.0466,
          0.1808,  0.0307,  0.0722, -0.0956, -0.4027,  0.2478, -0.1990,  0.0384,
          0.0098,  0.3406,  0.1978, -0.1893,  0.0107,  0.0593, -0.2665, -0.0121,
          0.0957, -0.2457]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
848000 特征值优化 tensor(1.2930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4345, -1.0402,  1.6100,  1.2402,  0.5124, -1.2061,  0.7981, -0.5440,
          0.3175,  0.9040, -0.1498,  0.2488, -0.0613,  0.3324, -0.2287, -0.0344,
          0.2340,  0.0627,  0.0997,  0.0444,  0.0441,  0.4066, -0.1318,  0.0580,
          0.2070,  0.0322,  0.0722, -0.0697, -0.4021,  0.2488, -0.1975,  0.0498,
         -0.0017,  0.3421,  0.1924, -0.2063,  0.0183,  0.0642, -0.2867, -0.0122,
          0.0831, -0.2212]], device='cuda:0') tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
849000 特征值优化 tensor(1.3120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4426, -1.0458,  1.6184,  1.2199,  0.5124, -1.2195,  0.8052, -0.5330,
          0.3025,  0.9223, -0.0944,  0.2764, -0.0619,  0.3302, -0.2597, -0.0601,
          0.1783,  0.0256,  0.0693,  0.0148,  0.0443,  0.4076, -0.1033,  0.1381,
          0.2039,  0.0035,  0.0530, -0.1039, -0.4036,  0.2460, -0.1929,  0.0501,
          0.0175,  0.3422,  0.2097, -0.1802,  0.0067,  0.0544, -0.2720, -0.0129,
          0.0991, -0.2492]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
850000 特征值优化 tensor(1.3265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3475e-01, -1.0567e+00,  1.5976e+00,  1.2306e+00,  5.3354e-01,
         -1.2092e+00,  8.0194e-01, -5.4909e-01,  3.1386e-01,  9.4101e-01,
         -9.8576e-02,  2.6905e-01, -6.2192e-02,  3.4072e-01, -2.4614e-01,
         -5.2880e-02,  2.1349e-01,  3.1894e-02,  8.1128e-02,  1.9433e-02,
          4.4944e-02,  4.0426e-01, -9.4561e-02,  1.4036e-01,  1.9658e-01,
          2.4570e-02,  6.9730e-02, -1.0214e-01, -4.0051e-01,  2.4806e-01,
         -1.9578e-01,  3.9543e-02, -6.8701e-04,  3.4284e-01,  2.0223e-01,
         -1.8701e-01,  1.1900e-02,  5.9575e-02, -2.7552e-01, -1.1613e-02,
          8.8825e-02, -2.3579e-01]], device='cuda:0') tensor(0.2161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
851000 特征值优化 tensor(1.2807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4222, -1.0522,  1.5981,  1.2310,  0.5235, -1.2103,  0.7744, -0.5691,
          0.3153,  0.9149, -0.1074,  0.2374, -0.0621,  0.3460, -0.2278, -0.0454,
          0.2237,  0.0495,  0.0941,  0.0379,  0.0454,  0.4050, -0.1362,  0.0522,
          0.1940,  0.0377,  0.0699, -0.0810, -0.4009,  0.2478, -0.1911,  0.0439,
         -0.0072,  0.3408,  0.1970, -0.1993,  0.0176,  0.0586, -0.2844, -0.0088,
          0.0881, -0.2222]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
852000 特征值优化 tensor(1.2900, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4329, -1.0412,  1.6061,  1.2300,  0.5322, -1.2126,  0.7412, -0.5658,
          0.2746,  0.9094, -0.0623,  0.2843, -0.0618,  0.3156, -0.2545, -0.0987,
          0.1963,  0.0137,  0.0417, -0.0309,  0.0440,  0.4104, -0.1296,  0.0401,
          0.1832, -0.0027,  0.0505, -0.1316, -0.4020,  0.2445, -0.1991,  0.0283,
          0.0352,  0.3414,  0.2209, -0.1622, -0.0150,  0.0420, -0.2373, -0.0117,
          0.1162, -0.2741]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
853000 特征值优化 tensor(1.2870, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4308, -1.0463,  1.6032,  1.2300,  0.5330, -1.2156,  0.7452, -0.5692,
          0.2739,  0.9190, -0.0469,  0.2834, -0.0627,  0.3078, -0.2612, -0.0872,
          0.2120,  0.0149,  0.0389, -0.0304,  0.0443,  0.4095, -0.1307,  0.0427,
          0.1766, -0.0104,  0.0498, -0.1347, -0.4014,  0.2441, -0.1924,  0.0227,
          0.0412,  0.3410,  0.2214, -0.1647, -0.0153,  0.0454, -0.2364, -0.0100,
          0.1142, -0.2744]], device='cuda:0') tensor(0.2313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
854000 特征值优化 tensor(1.3168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.5092e-01, -1.0437e+00,  1.6136e+00,  1.2118e+00,  5.1275e-01,
         -1.2081e+00,  7.5346e-01, -5.5432e-01,  2.7916e-01,  9.1142e-01,
         -2.6681e-02,  2.9084e-01, -6.2491e-02,  3.0847e-01, -2.5135e-01,
         -7.5605e-02,  2.0121e-01,  2.3433e-02,  3.8674e-02, -3.3962e-02,
          4.3881e-02,  4.0416e-01, -1.3378e-01,  4.6237e-02,  1.8304e-01,
          1.3454e-03,  4.5524e-02, -1.2570e-01, -4.0381e-01,  2.5017e-01,
         -1.9109e-01,  4.0385e-02,  3.6241e-02,  3.4098e-01,  2.0961e-01,
         -1.6387e-01,  1.0447e-02,  5.9173e-02, -2.3472e-01, -1.3187e-02,
          1.0589e-01, -2.8062e-01]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
855000 特征值优化 tensor(1.2957, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4396, -1.0377,  1.6020,  1.2293,  0.5201, -1.2111,  0.7420, -0.5795,
          0.2988,  0.9063, -0.0494,  0.2676, -0.0609,  0.3246, -0.2318, -0.0530,
          0.2107,  0.0554,  0.0822,  0.0134,  0.0439,  0.4055, -0.1328,  0.0591,
          0.1915,  0.0250,  0.0650, -0.1000, -0.4015,  0.2475, -0.1971,  0.0424,
          0.0089,  0.3413,  0.1991, -0.1900,  0.0161,  0.0651, -0.2656, -0.0125,
          0.0831, -0.2455]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
856000 特征值优化 tensor(1.3062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4455, -1.0338,  1.6149,  1.2245,  0.5165, -1.2115,  0.7194, -0.5743,
          0.3072,  0.9049, -0.0189,  0.2762, -0.0609,  0.3177, -0.2519, -0.0638,
          0.2066,  0.0482,  0.0735,  0.0140,  0.0431,  0.4096, -0.1271,  0.0380,
          0.1871,  0.0055,  0.0579, -0.1076, -0.4030,  0.2451, -0.1932,  0.0399,
          0.0186,  0.3402,  0.2004, -0.1822,  0.0028,  0.0568, -0.2695, -0.0121,
          0.1006, -0.2460]], device='cuda:0') tensor(0.2110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
857000 特征值优化 tensor(15.4116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0830,  1.3383,  1.3671,  0.4504,  1.6358,  1.4703,  0.5471,  1.0741,
         -0.0891, -0.3555,  0.2523, -1.0928,  1.2952,  1.1796, -1.1037,  0.1995,
          1.4486,  0.4069,  0.9033,  0.1444,  0.0721,  0.4400,  1.5474,  0.6694,
         -0.7019,  0.3096,  1.7429, -0.2178, -0.0928,  1.3510, -0.2001,  0.2993,
          0.0354, -0.2393,  1.1243, -2.1523, -0.8649,  0.3680,  1.0013,  0.7265,
         -0.1794,  1.8114]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
858000 特征值优化 tensor(3.2515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.4246e-02,  6.0064e-01,  2.2897e+00,  8.3386e-01,  8.6584e-01,
          2.5818e+00, -2.0329e-01,  5.0127e-01, -2.7130e-02,  4.5240e-01,
         -3.2743e-01, -1.2667e-03,  3.2695e-01,  1.4392e-01, -2.0106e-01,
         -1.0453e-01,  3.4357e-01, -2.4904e-02,  5.3575e-02, -1.0674e-02,
         -2.9746e-02, -4.0426e-05,  6.2063e-01,  1.9957e-01, -1.8439e-01,
          9.8722e-02,  7.3632e-01, -3.3055e-02, -5.2748e-01,  6.0045e-01,
         -1.1158e-01,  4.0068e-02, -3.1494e-02, -4.4188e-01,  3.0062e-01,
         -1.1143e+00, -2.4376e-01, -1.5465e-02,  2.0028e-01,  6.9167e-02,
         -1.3550e-01,  7.5039e-01]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
859000 特征值优化 tensor(1.3776, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4174,  0.6598,  2.3896,  0.7799,  0.7813,  3.0650, -0.4797,  0.5281,
         -0.3417,  0.7443, -0.5374,  0.4031,  0.1996,  0.1998, -0.1766, -0.1219,
          0.2239, -0.0181, -0.1573,  0.0043, -0.0260,  0.0956,  0.3798,  0.1624,
         -0.2253, -0.1573,  0.4544, -0.1523, -0.5291,  0.4486, -0.1263,  0.0934,
         -0.0033, -0.5152,  0.1232, -0.5108, -0.1979,  0.0374,  0.2054, -0.0671,
         -0.2520,  0.4433]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
860000 特征值优化 tensor(1.1507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5765e-01,  7.1431e-01,  2.2295e+00,  8.9699e-01,  1.3735e+00,
          3.0412e+00, -3.6974e-01,  2.0497e-01, -9.9043e-01,  1.0696e+00,
         -4.1536e-01,  4.2512e-01,  1.5694e-01,  2.8446e-02, -2.0032e-03,
         -9.3215e-02,  1.8849e-01, -6.9042e-02, -1.9870e-01,  1.4712e-02,
          1.6138e-02,  1.0945e-01,  3.4767e-01,  5.5113e-01, -2.4600e-01,
         -3.4957e-01,  2.2948e-01, -2.1972e-01, -5.0737e-01,  4.0856e-01,
         -4.1855e-02,  7.1986e-02, -7.5131e-02, -4.9282e-01,  7.5969e-02,
         -4.6807e-01, -2.4166e-01,  6.1259e-02,  2.7848e-01, -2.8525e-02,
         -2.1613e-01,  2.5636e-01]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
861000 特征值优化 tensor(1.1462, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5553,  0.7190,  2.0521,  1.0316,  1.2818,  3.0354, -0.2811,  0.1754,
         -0.9323,  1.1726, -0.4508,  0.4653,  0.1579,  0.0231,  0.0212, -0.0360,
          0.1571, -0.1410, -0.2024,  0.0105,  0.0158,  0.1290,  0.3217,  0.5560,
         -0.2261, -0.3356,  0.2112, -0.1996, -0.4815,  0.3853, -0.0546, -0.0261,
          0.0213, -0.4948,  0.0669, -0.4562, -0.2255,  0.0629,  0.3096,  0.0062,
         -0.2347,  0.2721]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
862000 特征值优化 tensor(1.1570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6102e-01,  7.1410e-01,  2.0296e+00,  1.0178e+00,  1.2566e+00,
          3.0165e+00, -2.9517e-01,  1.9382e-01, -8.4447e-01,  1.2476e+00,
         -4.3350e-01,  5.0265e-01,  1.5773e-01,  3.2881e-02,  2.4049e-02,
         -5.1168e-02,  1.7877e-01, -1.2077e-01, -2.0103e-01,  1.3366e-02,
          1.5853e-02,  1.2618e-01,  3.1263e-01,  5.6718e-01, -2.2766e-01,
         -3.3529e-01,  2.0983e-01, -2.0542e-01, -4.7789e-01,  3.7960e-01,
         -5.6571e-02, -1.1228e-02,  5.9885e-03, -4.8807e-01,  8.6823e-02,
         -4.6535e-01, -2.2813e-01,  6.2538e-02,  2.9812e-01,  1.8411e-04,
         -2.3229e-01,  2.8862e-01]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
863000 特征值优化 tensor(1.1546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5759e-01,  7.2140e-01,  2.0277e+00,  1.0177e+00,  1.2533e+00,
          2.9992e+00, -3.3671e-01,  1.8698e-01, -7.8108e-01,  1.3050e+00,
         -4.2593e-01,  5.3250e-01,  1.5719e-01,  4.2953e-02,  3.2338e-02,
         -4.4715e-02,  1.6753e-01, -1.3154e-01, -2.1211e-01,  8.5308e-03,
          1.5979e-02,  1.2669e-01,  3.1618e-01,  5.5814e-01, -2.3143e-01,
         -3.5068e-01,  2.1280e-01, -2.0948e-01, -4.7813e-01,  3.7987e-01,
         -5.7473e-02, -1.3716e-02,  1.0437e-02, -4.8584e-01,  1.0209e-01,
         -4.7091e-01, -2.1877e-01,  6.0930e-02,  3.0407e-01,  2.2414e-03,
         -2.3753e-01,  2.7990e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
864000 特征值优化 tensor(1.1980, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5857e-01,  7.2023e-01,  2.0239e+00,  1.0185e+00,  1.2941e+00,
          2.9965e+00, -3.3343e-01,  1.9650e-01, -7.8521e-01,  1.3615e+00,
         -4.0759e-01,  4.8350e-01,  1.5591e-01,  3.0097e-02,  1.4062e-02,
         -3.8229e-02,  1.6443e-01, -1.5964e-01, -2.0100e-01,  6.5045e-04,
          1.7446e-02,  1.2988e-01,  2.8852e-01,  5.9384e-01, -2.2511e-01,
         -3.2276e-01,  2.0216e-01, -2.0399e-01, -4.7664e-01,  3.7900e-01,
         -5.3105e-02,  2.5654e-02, -2.3790e-02, -4.8375e-01,  1.1513e-01,
         -4.6995e-01, -2.1843e-01,  5.8338e-02,  2.5905e-01, -1.5927e-02,
         -2.3917e-01,  3.2281e-01]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
865000 特征值优化 tensor(1.1374, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5564,  0.7254,  2.0316,  1.0136,  1.2861,  2.9888, -0.3348,  0.1931,
         -0.7380,  1.3742, -0.4248,  0.4431,  0.1581,  0.0250,  0.0127, -0.0357,
          0.1839, -0.1687, -0.2000,  0.0155,  0.0150,  0.1264,  0.2952,  0.5848,
         -0.2393, -0.3258,  0.1947, -0.2045, -0.4784,  0.3796, -0.0541,  0.0566,
         -0.0524, -0.4818,  0.1331, -0.4695, -0.2169,  0.0608,  0.2547, -0.0287,
         -0.2395,  0.3183]], device='cuda:0') tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
866000 特征值优化 tensor(1.1380, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5509,  0.7345,  1.9199,  1.0325,  1.2924,  2.9826, -0.3096,  0.1789,
         -0.6876,  1.3738, -0.4420,  0.4145,  0.1593,  0.0260,  0.0121, -0.0383,
          0.1895, -0.1716, -0.1967,  0.0239,  0.0151,  0.1251,  0.2737,  0.5786,
         -0.2604, -0.3191,  0.1824, -0.1837, -0.4719,  0.3618, -0.0534,  0.0615,
         -0.0585, -0.4826,  0.1373, -0.4694, -0.2274,  0.0662,  0.2535, -0.0269,
         -0.2301,  0.3175]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
867000 特征值优化 tensor(1.1382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5525,  0.7292,  1.8468,  0.9599,  1.2765,  2.9947, -0.3285,  0.1883,
         -0.6339,  1.3803, -0.4221,  0.3968,  0.1585,  0.0680,  0.0450, -0.0617,
          0.1563, -0.1067, -0.2395, -0.0177,  0.0145,  0.1146,  0.3037,  0.5498,
         -0.2311, -0.3564,  0.1561, -0.2019, -0.4642,  0.3518, -0.0550, -0.0330,
          0.0322, -0.4871,  0.1359, -0.4657, -0.2052,  0.0596,  0.3284,  0.0058,
         -0.2517,  0.2436]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
868000 特征值优化 tensor(1.1679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4751e-01,  7.3056e-01,  1.7845e+00,  9.2314e-01,  1.2488e+00,
          2.9992e+00, -3.0936e-01,  1.9004e-01, -5.8312e-01,  1.3803e+00,
         -4.2974e-01,  3.7644e-01,  1.5928e-01,  1.1176e-02, -3.2562e-03,
         -5.4674e-02,  1.5637e-01, -1.0844e-01, -2.0874e-01, -7.8144e-03,
          1.8443e-02,  1.1526e-01,  2.9789e-01,  5.3692e-01, -2.4317e-01,
         -3.5848e-01,  1.7556e-01, -2.0245e-01, -4.4591e-01,  3.4768e-01,
         -5.8713e-02, -5.4052e-03,  4.6003e-03, -4.8385e-01,  1.3295e-01,
         -4.6679e-01, -2.0825e-01,  5.4679e-02,  3.1588e-01, -1.4606e-03,
         -2.5052e-01,  2.5802e-01]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
869000 特征值优化 tensor(1.1391, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5521,  0.7333,  1.7476,  0.8570,  1.2715,  2.9915, -0.2808,  0.1704,
         -0.5681,  1.4012, -0.4762,  0.3260,  0.1591,  0.0198,  0.0048, -0.0673,
          0.2076, -0.1335, -0.1898,  0.0147,  0.0150,  0.1011,  0.2659,  0.5272,
         -0.2530, -0.3399,  0.1645, -0.1899, -0.4531,  0.3388, -0.0559,  0.0291,
         -0.0300, -0.4850,  0.1505, -0.4649, -0.2066,  0.0592,  0.2813, -0.0145,
         -0.2502,  0.2921]], device='cuda:0') tensor(0.2137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
870000 特征值优化 tensor(1.1465, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5028e-01,  7.2575e-01,  1.6858e+00,  8.1449e-01,  1.2548e+00,
          2.9974e+00, -2.4651e-01,  1.4877e-01, -5.3377e-01,  1.4045e+00,
         -5.0936e-01,  3.0670e-01,  1.5823e-01,  4.4658e-02,  3.2353e-02,
         -8.5295e-02,  1.8093e-01, -1.0077e-01, -2.0702e-01,  3.0660e-03,
          1.5686e-02,  9.7164e-02,  2.6657e-01,  5.4604e-01, -2.5078e-01,
         -3.4717e-01,  1.2944e-01, -1.8464e-01, -4.4587e-01,  3.3083e-01,
         -5.6087e-02, -1.6199e-02,  1.4582e-02, -4.8691e-01,  1.4934e-01,
         -4.6267e-01, -1.8975e-01,  4.9122e-02,  3.0951e-01, -2.1112e-04,
         -2.6809e-01,  2.7119e-01]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
871000 特征值优化 tensor(1.1399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5104e-01,  7.3138e-01,  1.6382e+00,  7.6322e-01,  1.2567e+00,
          2.9993e+00, -1.8670e-01,  5.9598e-02, -5.0886e-01,  1.4190e+00,
         -5.9691e-01,  2.7898e-01,  1.5875e-01,  4.8348e-02,  3.4888e-02,
         -1.2524e-01,  1.9461e-01, -6.5597e-02, -1.8917e-01,  1.0174e-03,
          1.5626e-02,  9.0972e-02,  2.6249e-01,  5.3774e-01, -2.4389e-01,
         -3.5557e-01,  1.1608e-01, -1.8797e-01, -4.4008e-01,  3.2470e-01,
         -5.6340e-02, -1.6689e-02,  1.6024e-02, -4.8734e-01,  1.5519e-01,
         -4.6063e-01, -1.7483e-01,  3.1613e-02,  3.1605e-01, -7.3754e-04,
         -2.7991e-01,  2.6349e-01]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
872000 特征值优化 tensor(1.1793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4680e-01,  7.2126e-01,  1.4614e+00,  5.6002e-01,  1.2565e+00,
          2.9968e+00, -1.3256e-01, -2.0340e-02, -4.8203e-01,  1.3827e+00,
         -5.7571e-01,  2.1193e-01,  1.5789e-01,  2.9472e-02, -2.6039e-03,
         -1.6023e-01,  1.8090e-01, -7.0539e-03, -1.4165e-01, -9.1354e-03,
          1.7381e-02,  6.9427e-02,  2.0996e-01,  5.0475e-01, -2.3839e-01,
         -3.6692e-01,  1.3660e-01, -1.8162e-01, -4.1738e-01,  3.0891e-01,
         -5.8067e-02, -2.4268e-02,  2.0658e-02, -4.8412e-01,  1.3963e-01,
         -4.4730e-01, -1.7566e-01, -4.4572e-03,  3.3674e-01,  1.1085e-02,
         -2.8877e-01,  2.5440e-01]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
873000 特征值优化 tensor(1.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5507,  0.7321,  1.4585,  0.5725,  1.2734,  3.0047, -0.1883, -0.1779,
         -0.4873,  1.4428, -0.5207,  0.1509,  0.1567,  0.0329,  0.0067, -0.1880,
          0.2397,  0.0678, -0.0619,  0.0109,  0.0175,  0.0722,  0.1958,  0.5057,
         -0.2366, -0.3242,  0.1235, -0.1654, -0.4157,  0.3075, -0.0558,  0.0518,
         -0.0297, -0.4849,  0.1580, -0.4473, -0.1893, -0.0312,  0.2577, -0.0127,
         -0.2789,  0.3344]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
874000 特征值优化 tensor(1.2272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4475e-01,  7.2122e-01,  1.4467e+00,  5.7055e-01,  1.2942e+00,
          3.0083e+00, -1.7412e-01, -1.3392e-01, -4.3323e-01,  1.4189e+00,
         -5.3618e-01,  1.5849e-01,  1.5650e-01,  3.3707e-02,  7.0325e-04,
         -1.7423e-01,  2.1624e-01,  1.3829e-01, -2.2405e-02, -6.3522e-03,
          1.8422e-02,  7.5763e-02,  1.7550e-01,  5.5336e-01, -2.5646e-01,
         -3.6304e-01,  1.2009e-01, -1.4542e-01, -4.1460e-01,  3.0273e-01,
         -5.2468e-02,  3.6525e-02,  8.3224e-02, -4.8468e-01,  1.5423e-01,
         -4.5350e-01, -2.0576e-01, -4.7537e-02,  2.6874e-01, -6.6836e-03,
         -2.6936e-01,  3.1999e-01]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
875000 特征值优化 tensor(1.1559, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5436e-01,  7.2452e-01,  1.4353e+00,  5.6935e-01,  1.2343e+00,
          3.0068e+00, -1.1918e-01,  5.1279e-03, -4.1917e-01,  1.4092e+00,
         -5.2746e-01,  1.4751e-01,  1.5825e-01,  4.1593e-02,  3.2877e-02,
         -1.9763e-01,  2.0548e-01,  1.1645e-01, -2.8159e-02, -1.1997e-02,
          1.6470e-02,  7.1814e-02,  1.7433e-01,  5.5402e-01, -2.4901e-01,
         -3.6508e-01,  1.1399e-01, -1.4484e-01, -4.1162e-01,  3.0167e-01,
         -5.5087e-02,  3.0525e-03, -5.7025e-03, -4.8760e-01,  1.6341e-01,
         -4.5179e-01, -1.6998e-01,  7.3606e-04,  2.9600e-01,  3.9288e-03,
         -2.8992e-01,  3.0136e-01]], device='cuda:0') tensor(0.2125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
876000 特征值优化 tensor(1.1321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5110e-01,  7.3177e-01,  1.4527e+00,  5.6759e-01,  1.2704e+00,
          3.0061e+00, -1.7922e-01,  1.8027e-01, -4.2483e-01,  1.4579e+00,
         -5.3225e-01,  8.9468e-02,  1.5870e-01,  2.3014e-02, -2.1350e-03,
         -1.9115e-01,  2.3256e-01,  8.0650e-02, -7.0350e-02,  1.2101e-03,
          1.5318e-02,  6.9959e-02,  1.9385e-01,  5.0003e-01, -2.3945e-01,
         -3.2231e-01,  1.2346e-01, -1.5897e-01, -4.1169e-01,  3.0662e-01,
         -5.6277e-02,  4.0351e-02,  3.3765e-02, -4.8387e-01,  1.7466e-01,
         -4.4633e-01, -1.8379e-01,  2.9378e-02,  2.6312e-01, -9.6605e-03,
         -2.7994e-01,  3.2582e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
877000 特征值优化 tensor(1.1508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5348e-01,  7.2489e-01,  1.4408e+00,  5.6686e-01,  1.2453e+00,
          3.0083e+00, -2.8535e-01,  2.1028e-01, -3.6758e-01,  1.4250e+00,
         -4.0121e-01,  9.6528e-02,  1.5793e-01,  4.1958e-02,  3.4085e-02,
         -1.8089e-01,  2.1139e-01,  1.8476e-02, -1.1511e-01, -5.6791e-03,
          1.6395e-02,  7.1221e-02,  1.9874e-01,  5.2819e-01, -2.5793e-01,
         -3.5175e-01,  1.2265e-01, -1.3882e-01, -4.1379e-01,  3.0428e-01,
         -5.4734e-02,  1.2450e-03,  2.8202e-02, -4.8806e-01,  1.6777e-01,
         -4.4765e-01, -2.0964e-01,  5.4005e-02,  3.0006e-01,  4.9919e-03,
         -2.5173e-01,  2.9915e-01]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
878000 特征值优化 tensor(1.1751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4777e-01,  7.2507e-01,  1.4526e+00,  5.7147e-01,  1.2692e+00,
          3.0108e+00, -1.9810e-01,  1.3584e-01, -3.5335e-01,  1.4254e+00,
         -5.2633e-01,  8.1625e-02,  1.5807e-01,  1.9516e-02, -6.2024e-03,
         -1.8096e-01,  1.9215e-01,  4.2551e-02, -1.1274e-01, -1.3317e-02,
          1.8637e-02,  7.3145e-02,  1.9596e-01,  5.1079e-01, -2.5359e-01,
         -3.5638e-01,  1.2784e-01, -1.6558e-01, -4.1510e-01,  3.0637e-01,
         -5.6193e-02, -1.5575e-02,  7.3239e-03, -4.8570e-01,  1.6205e-01,
         -4.4103e-01, -1.9070e-01,  4.3599e-02,  3.2615e-01,  2.6115e-03,
         -2.7041e-01,  2.6430e-01]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
879000 特征值优化 tensor(1.1495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4958e-01,  7.2634e-01,  1.4514e+00,  5.7043e-01,  1.2441e+00,
          3.0110e+00, -1.4626e-01,  7.7286e-02, -3.3404e-01,  1.4256e+00,
         -5.5043e-01,  6.8853e-02,  1.5844e-01,  2.7199e-02, -4.2813e-03,
         -1.7363e-01,  2.2905e-01,  5.2241e-02, -1.0149e-01, -2.5769e-03,
          1.6170e-02,  7.0345e-02,  2.1657e-01,  4.9801e-01, -2.5356e-01,
         -3.5176e-01,  1.1440e-01, -1.5571e-01, -4.1402e-01,  3.0562e-01,
         -5.5603e-02,  2.0390e-02, -2.1619e-02, -4.8827e-01,  1.7634e-01,
         -4.4795e-01, -1.7109e-01,  2.0286e-02,  2.9635e-01, -2.1113e-03,
         -2.9522e-01,  2.9543e-01]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
880000 特征值优化 tensor(1.1347, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5560,  0.7272,  1.4603,  0.5670,  1.2766,  3.0043, -0.1322, -0.0519,
         -0.3393,  1.4464, -0.5807,  0.0308,  0.1586,  0.0716,  0.0379, -0.2162,
          0.1832,  0.0361, -0.1215, -0.0186,  0.0149,  0.0703,  0.2056,  0.5070,
         -0.2534, -0.3561,  0.1233, -0.1539, -0.4167,  0.3077, -0.0555, -0.0347,
          0.0362, -0.4885,  0.1826, -0.4431, -0.1734, -0.0060,  0.3455,  0.0054,
         -0.2910,  0.2432]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
881000 特征值优化 tensor(1.1433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5226e-01,  7.2749e-01,  1.4506e+00,  5.7110e-01,  1.2498e+00,
          3.0031e+00, -2.1097e-01, -1.9793e-01, -3.1931e-01,  1.4415e+00,
         -4.9909e-01,  1.7486e-02,  1.5847e-01,  2.4266e-02, -6.6961e-03,
         -1.9324e-01,  2.2709e-01,  8.3015e-02, -5.2743e-02,  1.0814e-02,
          1.5840e-02,  7.0896e-02,  2.1788e-01,  5.0427e-01, -2.4216e-01,
         -3.5661e-01,  9.4867e-02, -1.5364e-01, -4.1272e-01,  3.0564e-01,
         -5.6449e-02,  3.5261e-02, -1.9996e-02, -4.8676e-01,  1.8384e-01,
         -4.4341e-01, -1.9203e-01, -4.0364e-02,  2.8285e-01, -2.5436e-03,
         -2.7344e-01,  3.1162e-01]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
882000 特征值优化 tensor(1.1816, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4659e-01,  7.2399e-01,  1.4465e+00,  5.7441e-01,  1.3005e+00,
          3.0107e+00, -2.0982e-01, -1.8846e-01, -3.0176e-01,  1.4444e+00,
         -4.8361e-01,  9.2337e-03,  1.5734e-01,  3.4964e-02,  8.1403e-03,
         -1.9564e-01,  1.8396e-01,  1.3695e-01, -3.8131e-02,  6.1078e-03,
          1.8359e-02,  7.5399e-02,  2.1530e-01,  5.2099e-01, -2.5309e-01,
         -3.5741e-01,  9.7427e-02, -1.4762e-01, -4.1331e-01,  3.0435e-01,
         -5.2153e-02,  2.0595e-02,  3.2922e-02, -4.8704e-01,  1.7213e-01,
         -4.4391e-01, -2.1076e-01, -5.6160e-02,  2.7425e-01, -2.4389e-03,
         -2.5832e-01,  3.1813e-01]], device='cuda:0') tensor(0.2127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
883000 特征值优化 tensor(1.1575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4970e-01,  7.2187e-01,  1.4502e+00,  5.6495e-01,  1.2386e+00,
          3.0075e+00, -1.2944e-01, -3.9378e-02, -2.7292e-01,  1.4168e+00,
         -5.5140e-01,  1.8390e-02,  1.5737e-01,  1.0118e-02, -5.7905e-03,
         -2.1318e-01,  1.6550e-01,  1.1719e-01, -3.1023e-02, -6.7539e-03,
          1.6085e-02,  7.0508e-02,  2.0474e-01,  4.9925e-01, -2.5472e-01,
         -3.6699e-01,  1.2470e-01, -1.4979e-01, -4.1461e-01,  3.0574e-01,
         -5.3992e-02,  2.7188e-03,  5.6092e-03, -4.8758e-01,  1.7371e-01,
         -4.4411e-01, -1.7431e-01, -1.9510e-02,  3.1505e-01,  3.4380e-03,
         -2.9422e-01,  2.7984e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
884000 特征值优化 tensor(1.1467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5519,  0.7220,  1.4473,  0.5653,  1.2457,  3.0074, -0.1332,  0.0990,
         -0.2722,  1.4332, -0.5720, -0.0034,  0.1578,  0.0517,  0.0307, -0.2200,
          0.1784,  0.1083, -0.0231, -0.0140,  0.0156,  0.0699,  0.1980,  0.5308,
         -0.2704, -0.3555,  0.1063, -0.1330, -0.4144,  0.3046, -0.0557, -0.0118,
         -0.0149, -0.4874,  0.1895, -0.4435, -0.1811,  0.0241,  0.3139,  0.0033,
         -0.2853,  0.2839]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
885000 特征值优化 tensor(1.1323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5571,  0.7235,  1.4538,  0.5670,  1.2664,  3.0131, -0.2523,  0.2170,
         -0.2824,  1.4599, -0.4728, -0.0378,  0.1580,  0.0528,  0.0460, -0.2139,
          0.1920,  0.0361, -0.1111, -0.0204,  0.0155,  0.0705,  0.1849,  0.5279,
         -0.2712, -0.3452,  0.1233, -0.1324, -0.4155,  0.3061, -0.0566, -0.0206,
         -0.0173, -0.4890,  0.1825, -0.4350, -0.2022,  0.0515,  0.3382,  0.0035,
         -0.2608,  0.2531]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
886000 特征值优化 tensor(1.1599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5184e-01,  7.2365e-01,  1.4493e+00,  5.7207e-01,  1.2576e+00,
          3.0109e+00, -2.0047e-01,  1.7830e-01, -2.3756e-01,  1.4284e+00,
         -4.8923e-01, -1.0475e-02,  1.5770e-01, -5.4122e-03,  1.4499e-02,
         -1.4265e-01,  2.0703e-01, -3.5433e-03, -1.4886e-01, -1.1624e-02,
          1.6821e-02,  7.1267e-02,  2.1359e-01,  4.9859e-01, -2.6112e-01,
         -3.5965e-01,  1.1434e-01, -1.5071e-01, -4.1338e-01,  3.0566e-01,
         -5.7772e-02, -4.7750e-03,  1.7436e-03, -4.8714e-01,  1.7810e-01,
         -4.4192e-01, -1.9943e-01,  4.5433e-02,  3.1758e-01,  1.0223e-03,
         -2.6606e-01,  2.7308e-01]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
887000 特征值优化 tensor(1.1659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4536e-01,  7.3005e-01,  1.4420e+00,  5.7286e-01,  1.2494e+00,
          3.0022e+00, -1.8534e-01,  1.4013e-01, -2.4165e-01,  1.4371e+00,
         -4.9679e-01, -2.8811e-02,  1.5750e-01, -3.5786e-02, -1.5277e-02,
         -1.1521e-01,  2.1317e-01, -5.3020e-02, -1.6708e-01, -2.3089e-03,
          1.7176e-02,  7.2358e-02,  2.1338e-01,  5.1287e-01, -2.6065e-01,
         -3.5730e-01,  1.0037e-01, -1.3779e-01, -4.1077e-01,  3.0342e-01,
         -5.8699e-02, -1.2839e-02,  2.0786e-03, -4.8601e-01,  1.8334e-01,
         -4.4038e-01, -1.7902e-01,  2.4681e-02,  2.8932e-01,  1.2508e-03,
         -2.8208e-01,  3.0524e-01]], device='cuda:0') tensor(0.2067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
888000 特征值优化 tensor(1.1501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5347e-01,  7.2210e-01,  1.4467e+00,  5.7006e-01,  1.2422e+00,
          3.0065e+00, -1.3640e-01,  1.8801e-02, -2.3231e-01,  1.4347e+00,
         -5.7496e-01, -4.1752e-02,  1.5773e-01, -1.4689e-02, -4.6978e-03,
         -1.4656e-01,  2.2731e-01, -4.1066e-02, -1.5595e-01,  1.3190e-02,
          1.5676e-02,  7.0622e-02,  2.1500e-01,  5.0657e-01, -2.5272e-01,
         -3.5593e-01,  9.6118e-02, -1.4397e-01, -4.1509e-01,  3.0422e-01,
         -5.6080e-02, -2.4583e-02,  2.1290e-02, -4.8702e-01,  1.8637e-01,
         -4.3913e-01, -1.7830e-01,  2.9448e-02,  2.9478e-01, -9.8562e-04,
         -2.8660e-01,  2.9961e-01]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
889000 正交保障 tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5490,  0.7290,  1.4622,  0.5771,  1.2728,  2.9962, -0.1517, -0.1054,
         -0.2678,  1.4786, -0.5695, -0.0880,  0.1587, -0.0199, -0.0059, -0.1714,
          0.2507,  0.0072, -0.1113,  0.0182,  0.0157,  0.0719,  0.2110,  0.5157,
         -0.2235, -0.3439,  0.0828, -0.1456, -0.4157,  0.3080, -0.0555, -0.0592,
          0.0352, -0.4845,  0.1987, -0.4344, -0.1693,  0.0085,  0.2494, -0.0044,
         -0.2925,  0.3430]], device='cuda:0') tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
890000 特征值优化 tensor(1.1377, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4969e-01,  7.3155e-01,  1.4549e+00,  5.6397e-01,  1.2681e+00,
          3.0067e+00, -2.2618e-01, -1.8514e-01, -2.3481e-01,  1.4540e+00,
         -4.9198e-01, -6.6291e-02,  1.5899e-01, -3.7696e-02, -2.5553e-02,
         -2.2362e-01,  1.7961e-01,  7.8518e-02, -6.0638e-02, -4.6004e-03,
          1.5025e-02,  6.9398e-02,  1.9567e-01,  5.2228e-01, -2.6781e-01,
         -3.4657e-01,  1.1233e-01, -1.3495e-01, -4.1369e-01,  3.0755e-01,
         -5.5951e-02,  1.3482e-02, -2.8553e-02, -4.8940e-01,  1.8990e-01,
         -4.3373e-01, -1.8620e-01, -4.6146e-02,  3.3609e-01,  2.9458e-03,
         -2.7452e-01,  2.5965e-01]], device='cuda:0') tensor(0.2098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
891000 特征值优化 tensor(1.1385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5529,  0.7321,  1.4576,  0.5732,  1.2778,  2.9945, -0.1779, -0.1129,
         -0.2192,  1.4451, -0.5618, -0.0658,  0.1590, -0.0420, -0.0669, -0.1853,
          0.1872,  0.1544, -0.0134,  0.0089,  0.0152,  0.0712,  0.2176,  0.4963,
         -0.2568, -0.3495,  0.0922, -0.1491, -0.4123,  0.3074, -0.0552,  0.0382,
          0.0311, -0.4854,  0.1978, -0.4381, -0.1832, -0.0363,  0.2807, -0.0034,
         -0.2777,  0.3091]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
892000 特征值优化 tensor(1.1667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4447e-01,  7.3314e-01,  1.4507e+00,  5.6347e-01,  1.2526e+00,
          3.0112e+00, -1.3870e-01, -6.0422e-02, -1.9424e-01,  1.4263e+00,
         -5.3207e-01, -5.4138e-02,  1.5650e-01, -1.0274e-02, -3.4434e-02,
         -2.2672e-01,  1.3790e-01,  1.3869e-01,  3.7374e-02,  2.5144e-04,
          1.5835e-02,  7.0953e-02,  1.9935e-01,  4.9859e-01, -2.5750e-01,
         -3.7906e-01,  1.1265e-01, -1.5180e-01, -4.1474e-01,  3.0451e-01,
         -5.7808e-02, -1.7270e-02, -3.6086e-03, -4.8507e-01,  1.8738e-01,
         -4.3547e-01, -1.7534e-01, -7.3417e-03,  3.2296e-01, -1.2821e-03,
         -2.9152e-01,  2.6281e-01]], device='cuda:0') tensor(0.2300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
893000 特征值优化 tensor(1.1455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5198e-01,  7.2731e-01,  1.4441e+00,  5.6284e-01,  1.2533e+00,
          3.0071e+00, -1.6607e-01,  8.7363e-02, -2.0713e-01,  1.4366e+00,
         -5.4066e-01, -7.8156e-02,  1.5844e-01, -5.0819e-04, -2.0090e-02,
         -2.3670e-01,  1.7417e-01,  9.8646e-02, -2.8028e-02, -1.4824e-02,
          1.5744e-02,  6.9418e-02,  2.1113e-01,  5.1903e-01, -2.5436e-01,
         -3.6378e-01,  7.8711e-02, -1.4605e-01, -4.1498e-01,  3.0389e-01,
         -5.6633e-02, -3.5663e-02, -2.0955e-02, -4.8804e-01,  1.8461e-01,
         -4.3427e-01, -1.7055e-01,  2.4544e-02,  3.3228e-01,  4.6538e-03,
         -2.9398e-01,  2.6664e-01]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
894000 特征值优化 tensor(1.1608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5057e-01,  7.2039e-01,  1.4521e+00,  5.6216e-01,  1.2461e+00,
          3.0111e+00, -2.0295e-01,  1.8975e-01, -1.7979e-01,  1.4330e+00,
         -4.9243e-01, -6.9684e-02,  1.5757e-01, -1.0650e-02, -3.1659e-02,
         -2.0017e-01,  1.8736e-01,  5.2698e-02, -7.8953e-02, -1.7147e-02,
          1.6951e-02,  6.9288e-02,  1.9406e-01,  5.0830e-01, -2.5536e-01,
         -3.7612e-01,  1.1861e-01, -1.5502e-01, -4.1455e-01,  3.0331e-01,
         -5.7415e-02, -1.8439e-02, -1.3099e-03, -4.8637e-01,  1.8818e-01,
         -4.2979e-01, -1.9481e-01,  4.4593e-02,  3.2983e-01,  1.2988e-03,
         -2.7113e-01,  2.5962e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
895000 特征值优化 tensor(1.1433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5259e-01,  7.2728e-01,  1.4485e+00,  5.6787e-01,  1.2520e+00,
          3.0062e+00, -1.3391e-01, -1.8105e-02, -1.8266e-01,  1.4332e+00,
         -5.5598e-01, -8.0611e-02,  1.5829e-01, -5.6840e-02, -2.8077e-02,
         -1.7404e-01,  2.1152e-01,  2.1468e-02, -1.2789e-01, -1.2008e-02,
          1.5390e-02,  7.1244e-02,  2.1328e-01,  5.0912e-01, -2.6466e-01,
         -3.5966e-01,  8.9275e-02, -1.3620e-01, -4.1579e-01,  3.0529e-01,
         -5.5858e-02,  1.7738e-02, -1.3180e-02, -4.8770e-01,  1.9986e-01,
         -4.3842e-01, -1.7376e-01,  5.3789e-02,  3.0733e-01, -6.9444e-05,
         -2.9343e-01,  2.8562e-01]], device='cuda:0') tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
896000 特征值优化 tensor(1.1426, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4792e-01,  7.2251e-01,  1.4426e+00,  5.6381e-01,  1.2562e+00,
          3.0091e+00, -1.3767e-01, -8.1453e-02, -1.9008e-01,  1.4527e+00,
         -5.9142e-01, -9.3703e-02,  1.5742e-01, -2.3425e-02,  1.4184e-03,
         -1.7630e-01,  2.2010e-01,  3.0201e-02, -1.0800e-01,  3.9433e-03,
          1.6407e-02,  7.0248e-02,  1.6771e-01,  5.2128e-01, -2.5090e-01,
         -3.5823e-01,  8.8964e-02, -1.3262e-01, -4.1379e-01,  3.0290e-01,
         -5.6760e-02, -1.6441e-02,  2.9825e-02, -4.8714e-01,  2.0019e-01,
         -4.3661e-01, -1.7323e-01, -6.0646e-03,  2.8727e-01, -3.4994e-03,
         -2.8970e-01,  3.0183e-01]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
897000 特征值优化 tensor(1.1371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5178e-01,  7.3439e-01,  1.4569e+00,  5.6808e-01,  1.2688e+00,
          3.0022e+00, -1.8930e-01, -1.9350e-01, -1.9295e-01,  1.4605e+00,
         -5.2742e-01, -1.0664e-01,  1.5926e-01, -2.9743e-02,  8.2108e-03,
         -1.8837e-01,  2.3347e-01,  8.6423e-02, -5.0839e-02,  7.5961e-05,
          1.5204e-02,  6.9972e-02,  2.1630e-01,  4.9010e-01, -2.5697e-01,
         -3.4880e-01,  9.1653e-02, -1.4894e-01, -4.1267e-01,  3.0747e-01,
         -5.6585e-02, -3.6781e-02,  2.6340e-02, -4.8601e-01,  2.0519e-01,
         -4.3458e-01, -1.8136e-01, -2.6511e-02,  2.7672e-01, -5.0790e-03,
         -2.8182e-01,  3.0925e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
898000 特征值优化 tensor(1.1432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5147e-01,  7.2527e-01,  1.4520e+00,  5.6992e-01,  1.2651e+00,
          3.0058e+00, -1.9020e-01, -1.7438e-01, -1.7458e-01,  1.4366e+00,
         -5.2951e-01, -9.6645e-02,  1.5817e-01, -4.9526e-02, -3.8399e-02,
         -2.1819e-01,  1.7194e-01,  9.8187e-02, -5.1797e-02, -9.8157e-03,
          1.5927e-02,  7.0413e-02,  2.0446e-01,  5.1479e-01, -2.7565e-01,
         -3.5826e-01,  9.7478e-02, -1.2897e-01, -4.1433e-01,  3.0523e-01,
         -5.6439e-02,  1.9285e-02,  2.6785e-02, -4.8715e-01,  2.0430e-01,
         -4.3765e-01, -1.8665e-01, -3.5162e-02,  3.1895e-01,  1.7623e-03,
         -2.7790e-01,  2.7760e-01]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
899000 特征值优化 tensor(1.1498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5018e-01,  7.2445e-01,  1.4433e+00,  5.6692e-01,  1.2525e+00,
          3.0034e+00, -1.4926e-01, -5.5570e-02, -1.7687e-01,  1.4455e+00,
         -5.5052e-01, -1.0249e-01,  1.5777e-01, -1.4110e-02, -1.1821e-03,
         -1.5866e-01,  2.4732e-01,  9.6058e-02, -4.7444e-02, -2.6307e-04,
          1.6881e-02,  7.0127e-02,  1.6024e-01,  5.4628e-01, -2.4686e-01,
         -3.7473e-01,  8.6125e-02, -1.2264e-01, -4.1368e-01,  3.0292e-01,
         -5.6471e-02, -3.1568e-02, -3.6543e-02, -4.8639e-01,  2.0378e-01,
         -4.3710e-01, -1.7451e-01, -2.4520e-02,  2.7823e-01, -2.6161e-03,
         -2.9108e-01,  3.1106e-01]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
900000 特征值优化 tensor(1.1398, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5019e-01,  7.1984e-01,  1.4459e+00,  5.6180e-01,  1.2583e+00,
          3.0141e+00, -1.4927e-01,  6.6953e-02, -1.8052e-01,  1.4555e+00,
         -5.5553e-01, -1.1633e-01,  1.5704e-01, -5.8467e-02, -4.8304e-02,
         -1.7797e-01,  2.1033e-01,  1.4107e-02, -1.3702e-01, -9.3564e-03,
          1.6305e-02,  6.9163e-02,  1.9892e-01,  5.1663e-01, -2.6114e-01,
         -3.6012e-01,  1.0495e-01, -1.3625e-01, -4.1441e-01,  3.0420e-01,
         -5.7479e-02,  2.9157e-02,  2.8339e-02, -4.8893e-01,  1.9583e-01,
         -4.3264e-01, -1.6978e-01,  5.3273e-03,  3.3594e-01,  7.2212e-04,
         -2.9588e-01,  2.5453e-01]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
901000 特征值优化 tensor(1.1407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5528,  0.7344,  1.4559,  0.5698,  1.2638,  2.9997, -0.1975,  0.2050,
         -0.1799,  1.4604, -0.5048, -0.1266,  0.1596, -0.0276,  0.0100, -0.0880,
          0.2295, -0.0618, -0.1599,  0.0092,  0.0150,  0.0704,  0.2164,  0.4959,
         -0.2490, -0.3487,  0.0867, -0.1487, -0.4120,  0.3073, -0.0569, -0.0312,
         -0.0337, -0.4851,  0.2083, -0.4335, -0.1940,  0.0419,  0.2748, -0.0037,
         -0.2697,  0.3152]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
902000 特征值优化 tensor(1.1459, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5006e-01,  7.2708e-01,  1.4546e+00,  5.6765e-01,  1.2653e+00,
          3.0038e+00, -1.6617e-01,  1.2506e-01, -1.5642e-01,  1.4343e+00,
         -5.5207e-01, -1.0860e-01,  1.5813e-01, -9.1126e-03, -1.9273e-02,
         -1.0637e-01,  1.9498e-01, -8.6461e-02, -1.9365e-01, -2.1074e-03,
          1.5577e-02,  7.0443e-02,  2.0582e-01,  5.1642e-01, -2.7785e-01,
         -3.5992e-01,  9.4249e-02, -1.2779e-01, -4.1616e-01,  3.0600e-01,
         -5.6891e-02, -2.8071e-02,  2.5241e-02, -4.8714e-01,  1.9897e-01,
         -4.3470e-01, -1.8581e-01,  3.6400e-02,  3.1394e-01,  2.1008e-03,
         -2.7680e-01,  2.8247e-01]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
903000 特征值优化 tensor(1.1442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5176e-01,  7.2119e-01,  1.4532e+00,  5.6121e-01,  1.2560e+00,
          3.0098e+00, -1.5515e-01,  4.7436e-02, -1.3068e-01,  1.4602e+00,
         -5.7857e-01, -8.4151e-02,  1.5739e-01, -3.0413e-02, -2.5455e-02,
         -1.3675e-01,  2.0381e-01, -2.7028e-02, -1.5762e-01,  7.5306e-04,
          1.5995e-02,  7.0027e-02,  2.0649e-01,  4.7785e-01, -2.6877e-01,
         -3.7683e-01,  1.1079e-01, -1.4767e-01, -4.1203e-01,  3.0638e-01,
         -5.5621e-02,  6.1276e-03, -1.4886e-02, -4.8825e-01,  2.1340e-01,
         -4.4016e-01, -1.7091e-01,  1.1613e-02,  2.9810e-01, -1.0827e-02,
         -2.9037e-01,  2.7765e-01]], device='cuda:0') tensor(0.2136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
904000 特征值优化 tensor(1.1707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4737e-01,  7.3044e-01,  1.4553e+00,  5.8329e-01,  1.2455e+00,
          3.0078e+00, -1.6730e-01, -1.0575e-01, -1.3863e-01,  1.4708e+00,
         -5.2580e-01, -9.6032e-02,  1.5914e-01, -1.3276e-02,  1.1110e-03,
         -1.7486e-01,  1.9927e-01,  8.2383e-03, -1.1313e-01,  2.1433e-03,
          1.7981e-02,  7.4303e-02,  2.2247e-01,  4.8632e-01, -2.6497e-01,
         -3.6626e-01,  1.0514e-01, -1.5505e-01, -4.1156e-01,  3.0636e-01,
         -5.8035e-02,  9.0623e-03,  9.2570e-04, -4.8545e-01,  2.1295e-01,
         -4.3995e-01, -1.7529e-01, -2.4839e-02,  2.8209e-01, -7.5730e-03,
         -2.7901e-01,  2.9826e-01]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
905000 特征值优化 tensor(1.1700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4519e-01,  7.2966e-01,  1.4529e+00,  5.6796e-01,  1.2803e+00,
          3.0089e+00, -1.4593e-01, -6.5720e-02, -1.4379e-01,  1.4399e+00,
         -5.4502e-01, -1.1436e-01,  1.5887e-01,  6.6813e-03,  3.7144e-03,
         -1.8901e-01,  1.7494e-01,  1.1187e-01, -3.5416e-02,  2.0126e-03,
          1.8859e-02,  7.0888e-02,  2.1402e-01,  5.1543e-01, -2.7797e-01,
         -3.8101e-01,  9.1034e-02, -1.3612e-01, -4.1232e-01,  3.0575e-01,
         -5.4776e-02,  4.5905e-03,  1.1593e-03, -4.8699e-01,  1.9662e-01,
         -4.3570e-01, -1.8173e-01, -3.3538e-02,  2.8576e-01, -9.3706e-04,
         -2.7536e-01,  3.0402e-01]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
906000 特征值优化 tensor(1.1414, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5028e-01,  7.2709e-01,  1.4542e+00,  5.6786e-01,  1.2547e+00,
          3.0020e+00, -1.1333e-01,  5.6073e-02, -1.5721e-01,  1.4490e+00,
         -5.9256e-01, -1.4110e-01,  1.5817e-01, -3.2378e-02, -5.9796e-02,
         -1.8625e-01,  2.0845e-01,  9.8164e-02, -5.9513e-02, -1.5471e-03,
          1.5861e-02,  7.0075e-02,  2.1021e-01,  5.0101e-01, -2.5705e-01,
         -3.5004e-01,  9.6582e-02, -1.3946e-01, -4.1223e-01,  3.0642e-01,
         -5.6685e-02,  2.2297e-02,  2.3736e-02, -4.8656e-01,  2.0857e-01,
         -4.3317e-01, -1.7613e-01,  6.0113e-03,  2.8692e-01, -1.6423e-03,
         -2.8937e-01,  3.0666e-01]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
907000 特征值优化 tensor(1.1510, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5733e-01,  7.2336e-01,  1.4406e+00,  5.6895e-01,  1.2409e+00,
          3.0148e+00, -2.1801e-01,  1.9643e-01, -1.4022e-01,  1.4414e+00,
         -4.9131e-01, -1.2653e-01,  1.5807e-01,  4.7900e-03, -1.8419e-02,
         -1.9994e-01,  1.9750e-01,  5.5655e-02, -7.9791e-02, -1.4830e-02,
          1.5732e-02,  7.0569e-02,  2.0237e-01,  5.3247e-01, -2.6860e-01,
         -3.5940e-01,  8.6886e-02, -1.2230e-01, -4.1227e-01,  3.0238e-01,
         -5.6308e-02, -1.2526e-02, -1.1449e-02, -4.8857e-01,  1.9922e-01,
         -4.3379e-01, -1.9881e-01,  4.7810e-02,  3.0947e-01,  1.6567e-03,
         -2.6730e-01,  2.9072e-01]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
908000 特征值优化 tensor(7.3512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6599,  0.6638,  1.4475, -0.7989,  0.5635,  0.7043, -0.1048, -0.8889,
          0.4114,  0.9088,  0.5800,  0.1015, -0.0347,  0.7404,  0.2464,  0.1171,
          0.3142,  0.1300, -0.0192, -0.3457, -0.1347, -0.1072, -0.0197, -0.0403,
          0.3864,  0.0511,  0.1090,  0.2651,  0.3826,  0.7121, -0.0581, -0.0924,
          0.0156,  1.7144, -2.0561,  0.1662,  0.0494, -0.0358,  0.1848, -0.0231,
         -0.0729, -0.0967]], device='cuda:0') tensor(0.2218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
909000 特征值优化 tensor(2.3010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7565,  0.9471,  1.6097, -0.2436,  0.6121,  1.6338, -0.2139, -1.1024,
          1.3372,  1.0497,  0.5281, -0.2180, -0.0512,  0.2508,  0.0145,  0.0596,
          0.0547,  0.0094,  0.0550, -0.0383, -0.0331, -0.0316, -0.0145,  0.0289,
          0.0752,  0.0069,  0.1651,  0.2306,  0.4296,  0.4936, -0.0215,  0.0116,
          0.0219,  0.7559, -1.0905,  0.1212,  0.0357,  0.0113, -0.0034,  0.0257,
         -0.0688,  0.0093]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
910000 特征值优化 tensor(1.3802, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.9026e-01,  9.0680e-01,  1.5188e+00,  5.8699e-04,  7.5475e-01,
          1.8423e+00, -3.5642e-01, -1.1371e+00,  1.7198e+00,  9.1581e-01,
          3.9120e-01, -3.9229e-01, -5.5770e-02,  2.4387e-01, -1.5754e-01,
         -3.8551e-02,  6.2275e-02,  2.5538e-02,  1.3407e-01,  9.1594e-04,
         -3.3899e-02, -1.2728e-03,  6.8475e-02,  1.6766e-01,  2.1280e-01,
         -4.3645e-01,  1.4751e-01,  1.8171e-01,  4.3939e-01,  4.8200e-01,
         -2.1520e-02, -2.6365e-02,  5.9509e-02,  7.1226e-01, -5.4998e-01,
          9.1497e-02,  1.9944e-02,  3.5121e-02, -2.7231e-03, -6.8891e-03,
         -5.4452e-02, -2.0464e-02]], device='cuda:0') tensor(0.2118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
911000 特征值优化 tensor(1.3289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6122,  0.9282,  1.1051,  0.8605,  0.8107,  1.7708, -0.4575, -1.0884,
          1.7023,  0.8342,  0.3281, -0.4319, -0.0520,  0.2220, -0.1283, -0.0059,
          0.1141,  0.0177,  0.1439,  0.0166, -0.0328,  0.1085,  0.0112,  0.5158,
          0.1342, -0.2992,  0.1372,  0.0439,  0.3544,  0.4370, -0.0224,  0.0391,
          0.0332,  0.7144, -0.5165,  0.0591, -0.0132,  0.0364,  0.0126, -0.0230,
         -0.0275, -0.0336]], device='cuda:0') tensor(0.2266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
912000 特征值优化 tensor(1.2702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5699,  0.9269,  0.8174,  1.1350,  0.9742,  1.6251, -0.6026, -0.9067,
          1.6359,  0.7032,  0.2256, -0.5397, -0.0512,  0.1941, -0.0939,  0.0764,
          0.0575,  0.0760,  0.2531, -0.0034, -0.0343,  0.1459,  0.0876,  0.4097,
          0.0506, -0.2411,  0.1099, -0.0083,  0.2988,  0.3982, -0.0316,  0.0599,
          0.0195,  0.6900, -0.4997,  0.0277, -0.1054,  0.0558,  0.0157, -0.0046,
          0.0458, -0.0193]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
913000 特征值优化 tensor(1.2624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5552,  0.9333,  0.7767,  1.0671,  0.9869,  1.4825, -0.6454, -0.8745,
          1.5522,  0.6066,  0.2621, -0.5785, -0.0516,  0.1855, -0.0953,  0.0686,
          0.0344,  0.0677,  0.2683,  0.0345, -0.0330,  0.1354,  0.0682,  0.3729,
          0.0087, -0.2392,  0.0407,  0.0421,  0.2975,  0.3924, -0.0340, -0.0161,
          0.0779,  0.6704, -0.4808, -0.0051, -0.1081,  0.0596,  0.0439, -0.0247,
          0.0455, -0.0321]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
914000 特征值优化 tensor(1.2739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5799,  0.9291,  0.7809,  1.0499,  0.9761,  1.2765, -0.7049, -0.8081,
          1.4924,  0.5410,  0.3058, -0.6046, -0.0518,  0.1843, -0.0895,  0.0925,
          0.0464,  0.0704,  0.2531,  0.0097, -0.0332,  0.1316,  0.0387,  0.3573,
          0.0096, -0.2428,  0.0554,  0.0238,  0.2996,  0.3926, -0.0343,  0.0321,
          0.0479,  0.6479, -0.4375,  0.0021, -0.0969,  0.0674,  0.0420, -0.0100,
          0.0426, -0.0232]], device='cuda:0') tensor(0.2180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
915000 特征值优化 tensor(1.2632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5518,  0.9411,  0.7679,  1.0592,  0.9819,  1.0645, -0.7816, -0.7644,
          1.4951,  0.5232,  0.3684, -0.6198, -0.0516,  0.1741, -0.0734,  0.1221,
          0.0377,  0.1009,  0.2557, -0.0236, -0.0332,  0.1342,  0.0284,  0.3828,
          0.0306, -0.1768,  0.0900, -0.0285,  0.2966,  0.3898, -0.0272,  0.0685,
          0.0228,  0.6137, -0.4281,  0.0037, -0.0974,  0.0693,  0.0370, -0.0025,
          0.0397, -0.0172]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
916000 特征值优化 tensor(1.2903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5768,  0.9226,  0.7830,  1.0472,  0.9800,  1.0603, -0.8218, -0.7532,
          1.4994,  0.5132,  0.4184, -0.6041, -0.0520,  0.1747, -0.0661,  0.1014,
          0.0296,  0.0759,  0.2437,  0.0167, -0.0336,  0.1327,  0.0372,  0.3391,
          0.0224, -0.1954,  0.0461,  0.0349,  0.2994,  0.3940, -0.0357, -0.0149,
          0.0502,  0.6122, -0.4284,  0.0017, -0.0888,  0.0737,  0.0390, -0.0122,
          0.0301, -0.0224]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
917000 特征值优化 tensor(1.2775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5763,  0.9241,  0.7777,  1.0423,  0.9730,  1.0559, -0.8685, -0.6733,
          1.4805,  0.4988,  0.4481, -0.6148, -0.0514,  0.1811, -0.0814,  0.1218,
          0.0404,  0.0756,  0.2436,  0.0100, -0.0333,  0.1335,  0.0256,  0.3479,
         -0.0053, -0.1942,  0.0563,  0.0111,  0.2992,  0.3926, -0.0341,  0.0372,
          0.0452,  0.6115, -0.4321,  0.0107, -0.0802,  0.0795,  0.0436, -0.0122,
          0.0283, -0.0229]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
918000 特征值优化 tensor(1.2636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5355e-01,  9.4347e-01,  7.6943e-01,  1.0621e+00,  9.8477e-01,
          1.0611e+00, -9.2337e-01, -6.2991e-01,  1.5072e+00,  4.9476e-01,
          5.0269e-01, -6.3523e-01, -5.1138e-02,  1.7963e-01, -7.6093e-02,
          1.4369e-01,  2.7755e-02,  1.0222e-01,  2.3904e-01, -7.2280e-03,
         -3.3556e-02,  1.3464e-01,  3.7004e-02,  3.7912e-01,  2.6989e-02,
         -1.7226e-01,  8.4141e-02, -1.4564e-02,  2.9671e-01,  3.9106e-01,
         -2.8449e-02,  4.7891e-02,  3.5064e-02,  6.1182e-01, -4.2622e-01,
         -1.6745e-03, -8.1613e-02,  8.1308e-02,  3.5611e-02,  1.4431e-04,
          2.5244e-02, -1.5082e-02]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
919000 特征值优化 tensor(1.2597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.7157e-01,  9.3477e-01,  7.7911e-01,  1.0608e+00,  9.9189e-01,
          1.0687e+00, -9.6635e-01, -6.0755e-01,  1.4987e+00,  4.9654e-01,
          5.5135e-01, -6.1548e-01, -5.2171e-02,  1.7577e-01, -9.7007e-02,
          1.2694e-01,  2.5671e-02,  6.9835e-02,  2.4758e-01,  4.5521e-02,
         -3.2847e-02,  1.3292e-01,  9.3356e-03,  3.4704e-01, -1.0646e-02,
         -2.0545e-01,  2.9134e-02,  3.9399e-02,  2.9827e-01,  3.9117e-01,
         -3.3841e-02, -9.6305e-03,  6.6730e-02,  6.1252e-01, -4.4196e-01,
          8.3579e-04, -7.7396e-02,  8.5575e-02,  4.3859e-02, -2.2178e-02,
          1.7180e-02, -2.7490e-02]], device='cuda:0') tensor(0.2202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
920000 特征值优化 tensor(1.2907, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5766,  0.9257,  0.7684,  1.0456,  0.9595,  1.0653, -1.0011, -0.5401,
          1.5189,  0.4791,  0.5755, -0.6277, -0.0515,  0.1601, -0.0691,  0.1545,
          0.0325,  0.0892,  0.2250, -0.0018, -0.0329,  0.1324,  0.0384,  0.3375,
         -0.0089, -0.1639,  0.0518, -0.0123,  0.2966,  0.3930, -0.0321,  0.0606,
          0.0304,  0.6110, -0.4518, -0.0036, -0.0626,  0.0860,  0.0394, -0.0049,
          0.0110, -0.0182]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
921000 特征值优化 tensor(1.2626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4052e-01,  9.3538e-01,  7.6102e-01,  1.0557e+00,  9.7258e-01,
          1.0673e+00, -1.0197e+00, -4.8292e-01,  1.5256e+00,  4.8345e-01,
          6.1409e-01, -6.5629e-01, -5.1372e-02,  1.8662e-01, -7.5144e-02,
          1.6598e-01,  2.0331e-02,  1.0030e-01,  2.2660e-01, -1.5069e-02,
         -3.3686e-02,  1.3375e-01,  3.5010e-02,  3.6336e-01,  2.5507e-02,
         -1.5597e-01,  7.7710e-02, -2.4135e-02,  2.9606e-01,  3.8924e-01,
         -2.5223e-02,  5.1034e-02,  3.7546e-02,  6.1615e-01, -4.4995e-01,
         -1.5286e-02, -6.6070e-02,  9.0834e-02,  3.4511e-02,  5.8733e-04,
          8.9873e-03, -1.5276e-02]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
922000 特征值优化 tensor(1.2811, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.7096e-01,  9.3770e-01,  7.7603e-01,  1.0502e+00,  9.5495e-01,
          1.0665e+00, -1.0528e+00, -4.4809e-01,  1.5385e+00,  4.5643e-01,
          6.2735e-01, -6.3898e-01, -5.1923e-02,  1.8418e-01, -6.8656e-02,
          1.5692e-01,  1.1335e-02,  8.2736e-02,  2.2208e-01,  4.3507e-03,
         -3.2711e-02,  1.3286e-01,  3.7853e-02,  3.2561e-01, -5.5806e-04,
         -1.7944e-01,  3.9317e-02,  9.6198e-03,  2.9798e-01,  3.9081e-01,
         -3.3315e-02, -5.7416e-03,  5.2482e-02,  6.1338e-01, -4.4176e-01,
         -5.2151e-03, -6.1822e-02,  9.4593e-02,  4.1322e-02, -1.1665e-02,
          2.8703e-03, -2.0818e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
923000 特征值优化 tensor(1.2706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5652,  0.9262,  0.7719,  1.0530,  0.9618,  1.0773, -1.0581, -0.3980,
          1.5249,  0.4514,  0.6449, -0.6443, -0.0515,  0.1743, -0.1006,  0.1527,
          0.0179,  0.0745,  0.2182,  0.0271, -0.0336,  0.1327,  0.0171,  0.3365,
         -0.0142, -0.1928,  0.0259,  0.0424,  0.2974,  0.3900, -0.0302, -0.0045,
          0.0567,  0.6141, -0.4517, -0.0149, -0.0571,  0.0984,  0.0423, -0.0196,
         -0.0025, -0.0250]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
924000 特征值优化 tensor(1.2583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5494,  0.9407,  0.7645,  1.0583,  0.9977,  1.0608, -1.1185, -0.3477,
          1.5348,  0.4325,  0.6934, -0.6736, -0.0518,  0.1796, -0.0767,  0.1851,
          0.0092,  0.1029,  0.2081, -0.0206, -0.0331,  0.1341,  0.0365,  0.3694,
          0.0286, -0.1726,  0.0760, -0.0326,  0.2961,  0.3894, -0.0284,  0.0554,
          0.0391,  0.6132, -0.4266, -0.0187, -0.0489,  0.0911,  0.0377, -0.0025,
         -0.0064, -0.0159]], device='cuda:0') tensor(0.2147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
925000 特征值优化 tensor(1.2624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6360e-01,  9.2523e-01,  7.8226e-01,  1.0616e+00,  9.6917e-01,
          1.0815e+00, -1.1212e+00, -3.4194e-01,  1.5356e+00,  4.3091e-01,
          7.0227e-01, -6.4373e-01, -5.1176e-02,  1.5615e-01, -1.0017e-01,
          1.6136e-01,  8.3036e-04,  7.2268e-02,  2.2879e-01,  2.9105e-02,
         -3.3841e-02,  1.3363e-01,  7.2479e-03,  3.3897e-01, -1.0721e-02,
         -2.0730e-01,  1.4075e-02,  4.3529e-02,  2.9887e-01,  3.9095e-01,
         -3.4062e-02, -4.5568e-02,  6.6694e-02,  6.1422e-01, -4.5489e-01,
         -1.5742e-02, -4.8529e-02,  9.5969e-02,  4.7959e-02, -3.5095e-02,
         -1.2102e-02, -3.0338e-02]], device='cuda:0') tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
926000 特征值优化 tensor(1.2576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5478,  0.9433,  0.7594,  1.0568,  0.9972,  1.0535, -1.1435, -0.2654,
          1.5442,  0.4044,  0.7248, -0.6765, -0.0506,  0.1813, -0.0821,  0.1925,
          0.0165,  0.1106,  0.1891, -0.0087, -0.0341,  0.1336,  0.0363,  0.3785,
          0.0253, -0.1623,  0.0885, -0.0382,  0.2957,  0.3898, -0.0267,  0.0590,
          0.0406,  0.6108, -0.4273, -0.0210, -0.0404,  0.0923,  0.0373, -0.0024,
         -0.0144, -0.0148]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
927000 特征值优化 tensor(1.2583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5708,  0.9344,  0.7800,  1.0642,  1.0030,  1.0768, -1.1526, -0.2655,
          1.5409,  0.4084,  0.7391, -0.6490, -0.0522,  0.1710, -0.0882,  0.1747,
          0.0097,  0.0710,  0.2196,  0.0587, -0.0329,  0.1332,  0.0103,  0.3566,
         -0.0047, -0.2184,  0.0219,  0.0563,  0.2985,  0.3925, -0.0373, -0.0425,
          0.0619,  0.6132, -0.4299, -0.0162, -0.0402,  0.0961,  0.0430, -0.0275,
         -0.0206, -0.0263]], device='cuda:0') tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
928000 特征值优化 tensor(1.2813, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5757,  0.9280,  0.7723,  1.0417,  0.9601,  1.0706, -1.1394, -0.1940,
          1.5507,  0.3876,  0.7060, -0.6632, -0.0519,  0.1806, -0.0823,  0.1865,
          0.0182,  0.0810,  0.1942,  0.0112, -0.0332,  0.1333,  0.0312,  0.3383,
         -0.0161, -0.1828,  0.0392,  0.0104,  0.2971,  0.3918, -0.0322,  0.0279,
          0.0494,  0.6143, -0.4503, -0.0243, -0.0308,  0.0985,  0.0416, -0.0130,
         -0.0243, -0.0197]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
929000 特征值优化 tensor(1.2651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4722e-01,  9.4005e-01,  7.6431e-01,  1.0592e+00,  9.6986e-01,
          1.0620e+00, -1.1422e+00, -1.5537e-01,  1.5591e+00,  3.8359e-01,
          7.2449e-01, -6.8785e-01, -5.1789e-02,  1.8862e-01, -6.9873e-02,
          2.0142e-01, -4.8898e-03,  9.5114e-02,  1.9439e-01,  4.6426e-05,
         -3.3006e-02,  1.3427e-01,  3.3395e-02,  3.5607e-01,  2.1861e-02,
         -1.6349e-01,  5.2038e-02, -9.8452e-03,  2.9540e-01,  3.8967e-01,
         -2.8079e-02,  1.6692e-02,  5.0453e-02,  6.1443e-01, -4.4768e-01,
         -3.7145e-02, -3.1274e-02,  9.7502e-02,  4.0185e-02, -8.0616e-03,
         -2.4929e-02, -1.8134e-02]], device='cuda:0') tensor(0.2278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
930000 特征值优化 tensor(1.2713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.7121e-01,  9.3519e-01,  7.7374e-01,  1.0524e+00,  9.6356e-01,
          1.0664e+00, -1.1410e+00, -1.5075e-01,  1.5450e+00,  3.5535e-01,
          7.2196e-01, -6.7359e-01, -5.2219e-02,  1.7230e-01, -9.8607e-02,
          1.8251e-01,  7.8935e-03,  7.8003e-02,  1.9395e-01,  2.4799e-02,
         -3.2753e-02,  1.3308e-01,  1.9713e-02,  3.5629e-01, -1.0927e-02,
         -2.0287e-01,  3.1167e-02,  3.6969e-02,  2.9791e-01,  3.9068e-01,
         -3.0878e-02, -1.4181e-03,  5.5350e-02,  6.1270e-01, -4.2797e-01,
         -2.3020e-02, -2.7822e-02,  1.0016e-01,  4.0125e-02, -2.1156e-02,
         -2.9657e-02, -2.2393e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
931000 特征值优化 tensor(1.2994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5768,  0.9241,  0.7881,  1.0472,  0.9804,  1.0664, -1.1686, -0.1496,
          1.5751,  0.3474,  0.7590, -0.6575, -0.0517,  0.1765, -0.0614,  0.1854,
         -0.0056,  0.0829,  0.1993,  0.0158, -0.0338,  0.1317,  0.0353,  0.3409,
          0.0277, -0.2089,  0.0286,  0.0372,  0.2990,  0.3933, -0.0373, -0.0558,
          0.0421,  0.6158, -0.4346, -0.0318, -0.0267,  0.0995,  0.0378, -0.0233,
         -0.0350, -0.0214]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
932000 特征值优化 tensor(1.2777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5747,  0.9278,  0.7735,  1.0447,  0.9546,  1.0697, -1.1488, -0.1013,
          1.5668,  0.3511,  0.7217, -0.6769, -0.0520,  0.1699, -0.1018,  0.1958,
          0.0098,  0.0881,  0.1814,  0.0174, -0.0326,  0.1334,  0.0275,  0.3304,
         -0.0142, -0.1876,  0.0263,  0.0094,  0.2975,  0.3912, -0.0299,  0.0202,
          0.0506,  0.6128, -0.4513, -0.0312, -0.0202,  0.0974,  0.0429, -0.0151,
         -0.0345, -0.0201]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
933000 特征值优化 tensor(1.2644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5464,  0.9369,  0.7680,  1.0610,  0.9671,  1.0651, -1.1517, -0.0619,
          1.5842,  0.3407,  0.7363, -0.7054, -0.0519,  0.1879, -0.0706,  0.2117,
         -0.0109,  0.0977,  0.1847, -0.0137, -0.0332,  0.1344,  0.0369,  0.3644,
          0.0260, -0.1664,  0.0627, -0.0205,  0.2967,  0.3900, -0.0275,  0.0284,
          0.0510,  0.6131, -0.4485, -0.0450, -0.0208,  0.0978,  0.0383, -0.0065,
         -0.0353, -0.0163]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
934000 特征值优化 tensor(1.2588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6186e-01,  9.2757e-01,  7.7938e-01,  1.0628e+00,  9.9265e-01,
          1.0811e+00, -1.1824e+00, -9.2175e-02,  1.5764e+00,  3.2642e-01,
          7.6076e-01, -6.8098e-01, -5.1205e-02,  1.6256e-01, -9.7212e-02,
          1.8804e-01, -1.2518e-04,  6.6045e-02,  2.0183e-01,  6.2868e-02,
         -3.3811e-02,  1.3300e-01,  7.1275e-03,  3.4271e-01, -6.7121e-03,
         -2.1372e-01,  5.4413e-03,  4.2729e-02,  2.9859e-01,  3.9178e-01,
         -3.6538e-02, -5.2387e-02,  5.5355e-02,  6.1427e-01, -4.4918e-01,
         -4.3137e-02, -2.2597e-02,  9.5860e-02,  4.4651e-02, -3.4466e-02,
         -3.6458e-02, -2.5383e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
935000 特征值优化 tensor(1.2717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5662,  0.9301,  0.7710,  1.0517,  0.9614,  1.0762, -1.1496, -0.0613,
          1.5788,  0.2987,  0.7265, -0.6946, -0.0514,  0.1741, -0.0978,  0.1914,
          0.0050,  0.0750,  0.1849,  0.0275, -0.0335,  0.1324,  0.0194,  0.3374,
         -0.0136, -0.1912,  0.0198,  0.0326,  0.2971,  0.3905, -0.0301, -0.0022,
          0.0544,  0.6131, -0.4507, -0.0435, -0.0185,  0.0991,  0.0429, -0.0221,
         -0.0381, -0.0215]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
936000 特征值优化 tensor(1.2584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.3559e-01,  9.3499e-01,  7.5510e-01,  1.0542e+00,  9.9343e-01,
          1.0571e+00, -1.1715e+00, -1.6843e-02,  1.6052e+00,  2.8928e-01,
          7.5856e-01, -7.3530e-01, -5.1451e-02,  1.7814e-01, -7.6266e-02,
          2.2719e-01, -6.9836e-03,  1.1414e-01,  1.7055e-01, -1.6067e-02,
         -3.3632e-02,  1.3347e-01,  3.9918e-02,  3.6817e-01,  2.4070e-02,
         -1.5422e-01,  7.4909e-02, -3.9954e-02,  2.9499e-01,  3.8862e-01,
         -2.6504e-02,  6.0143e-02,  5.0127e-02,  6.1280e-01, -4.4311e-01,
         -5.9721e-02, -1.6434e-02,  9.3276e-02,  3.6321e-02, -1.6519e-04,
         -3.8886e-02, -1.3959e-02]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
937000 特征值优化 tensor(1.2753, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6281e-01,  9.4066e-01,  7.7655e-01,  1.0579e+00,  9.5544e-01,
          1.0658e+00, -1.1560e+00, -3.0195e-02,  1.5999e+00,  2.5270e-01,
          7.2697e-01, -7.1267e-01, -5.2100e-02,  1.9033e-01, -7.3454e-02,
          2.0902e-01, -1.1947e-02,  9.0654e-02,  1.8309e-01, -2.8510e-03,
         -3.2667e-02,  1.3341e-01,  3.4741e-02,  3.3620e-01,  1.1521e-02,
         -1.8800e-01,  3.8419e-02, -6.4702e-04,  2.9778e-01,  3.9088e-01,
         -3.1634e-02,  1.0583e-03,  5.1496e-02,  6.1276e-01, -4.3738e-01,
         -4.8937e-02, -1.6277e-02,  9.7967e-02,  4.0707e-02, -1.4299e-02,
         -4.0365e-02, -1.7242e-02]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
938000 特征值优化 tensor(1.2604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5642,  0.9266,  0.7757,  1.0595,  0.9907,  1.0808, -1.1750, -0.0512,
          1.5959,  0.2502,  0.7565, -0.7027, -0.0514,  0.1756, -0.0922,  0.1877,
          0.0035,  0.0670,  0.1948,  0.0536, -0.0338,  0.1321,  0.0112,  0.3402,
         -0.0070, -0.2056,  0.0023,  0.0448,  0.2977,  0.3916, -0.0351, -0.0399,
          0.0534,  0.6149, -0.4479, -0.0574, -0.0187,  0.0981,  0.0392, -0.0331,
         -0.0420, -0.0223]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
939000 特征值优化 tensor(1.2799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5736,  0.9262,  0.7735,  1.0441,  0.9586,  1.0709, -1.1584, -0.0214,
          1.5990,  0.2166,  0.7284, -0.7090, -0.0518,  0.1853, -0.0901,  0.1993,
          0.0122,  0.0833,  0.1755,  0.0112, -0.0331,  0.1339,  0.0301,  0.3402,
         -0.0147, -0.1854,  0.0243,  0.0168,  0.2974,  0.3922, -0.0307,  0.0184,
          0.0505,  0.6131, -0.4488, -0.0580, -0.0128,  0.0973,  0.0401, -0.0185,
         -0.0433, -0.0181]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
940000 特征值优化 tensor(1.2635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5435,  0.9361,  0.7648,  1.0592,  0.9751,  1.0625, -1.1543,  0.0048,
          1.6167,  0.2023,  0.7407, -0.7404, -0.0515,  0.1862, -0.0763,  0.2180,
         -0.0089,  0.1005,  0.1722, -0.0127, -0.0337,  0.1339,  0.0356,  0.3622,
          0.0231, -0.1683,  0.0505, -0.0231,  0.2966,  0.3897, -0.0271,  0.0341,
          0.0523,  0.6139, -0.4438, -0.0716, -0.0142,  0.0966,  0.0361, -0.0073,
         -0.0422, -0.0146]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
941000 特征值优化 tensor(1.3080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5642,  0.9259,  0.7799,  1.0632,  0.9946,  1.0818, -1.1824, -0.0329,
          1.6067,  0.1936,  0.7645, -0.7110, -0.0513,  0.1744, -0.0893,  0.1888,
          0.0028,  0.0667,  0.1943,  0.0600, -0.0340,  0.1325,  0.0102,  0.3421,
         -0.0020, -0.2094, -0.0055,  0.0413,  0.2972,  0.3915, -0.0370, -0.0511,
          0.0525,  0.6145, -0.4447, -0.0703, -0.0167,  0.0967,  0.0369, -0.0360,
         -0.0444, -0.0209]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
942000 特征值优化 tensor(1.2734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5689,  0.9312,  0.7688,  1.0495,  0.9608,  1.0717, -1.1548, -0.0134,
          1.6014,  0.1661,  0.7254, -0.7202, -0.0520,  0.1790, -0.0988,  0.1954,
          0.0053,  0.0746,  0.1759,  0.0212, -0.0332,  0.1328,  0.0224,  0.3366,
         -0.0139, -0.1844,  0.0113,  0.0272,  0.2977,  0.3901, -0.0293,  0.0045,
          0.0534,  0.6134, -0.4469, -0.0700, -0.0134,  0.0982,  0.0397, -0.0227,
         -0.0422, -0.0176]], device='cuda:0') tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
943000 特征值优化 tensor(1.2600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.3590e-01,  9.3455e-01,  7.5713e-01,  1.0560e+00,  9.8598e-01,
          1.0569e+00, -1.1648e+00,  2.3385e-02,  1.6471e+00,  1.4711e-01,
          7.5141e-01, -7.5947e-01, -5.1263e-02,  1.8044e-01, -8.0598e-02,
          2.2782e-01, -4.7959e-03,  1.1431e-01,  1.6058e-01, -2.1953e-02,
         -3.3684e-02,  1.3410e-01,  3.9229e-02,  3.5888e-01, -9.2337e-04,
         -1.5438e-01,  6.3790e-02, -4.2022e-02,  2.9577e-01,  3.8901e-01,
         -2.5291e-02,  6.1581e-02,  5.1535e-02,  6.1239e-01, -4.4229e-01,
         -8.3971e-02, -1.2715e-02,  9.4010e-02,  3.7704e-02, -2.9069e-03,
         -4.2807e-02, -1.3417e-02]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
944000 特征值优化 tensor(1.2749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6328e-01,  9.4233e-01,  7.8318e-01,  1.0640e+00,  9.5383e-01,
          1.0685e+00, -1.1582e+00,  4.8350e-03,  1.6245e+00,  1.2310e-01,
          7.3166e-01, -7.3341e-01, -5.2109e-02,  1.7953e-01, -7.7016e-02,
          2.1451e-01, -1.6897e-02,  9.0496e-02,  1.8375e-01, -6.2004e-04,
         -3.3452e-02,  1.3520e-01,  3.7205e-02,  3.4367e-01,  1.7393e-02,
         -1.8891e-01,  2.7963e-02,  3.4549e-03,  2.9842e-01,  3.9203e-01,
         -3.0943e-02,  2.8357e-04,  5.1784e-02,  6.1402e-01, -4.3238e-01,
         -7.2761e-02, -1.3178e-02,  9.7599e-02,  3.8177e-02, -1.6705e-02,
         -4.4197e-02, -1.5977e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
945000 特征值优化 tensor(1.2620, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5645,  0.9254,  0.7748,  1.0570,  0.9862,  1.0810, -1.1681, -0.0129,
          1.6120,  0.1282,  0.7514, -0.7242, -0.0512,  0.1747, -0.0955,  0.1929,
          0.0035,  0.0740,  0.1879,  0.0454, -0.0337,  0.1322,  0.0150,  0.3396,
         -0.0055, -0.2011, -0.0044,  0.0445,  0.2981,  0.3912, -0.0335, -0.0317,
          0.0523,  0.6138, -0.4448, -0.0801, -0.0146,  0.0993,  0.0349, -0.0332,
         -0.0461, -0.0183]], device='cuda:0') tensor(0.2173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
946000 特征值优化 tensor(1.2953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5653,  0.9215,  0.7634,  1.0454,  0.9776,  1.0622, -1.1765,  0.0227,
          1.6211,  0.0936,  0.7476, -0.7368, -0.0527,  0.1663, -0.0705,  0.2165,
          0.0083,  0.1029,  0.1664, -0.0041, -0.0336,  0.1335,  0.0403,  0.3402,
         -0.0037, -0.1612,  0.0304, -0.0175,  0.2961,  0.3907, -0.0325,  0.0521,
          0.0414,  0.6094, -0.4446, -0.0796, -0.0060,  0.0918,  0.0399, -0.0135,
         -0.0464, -0.0164]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
947000 特征值优化 tensor(1.2728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5941e-01,  9.3533e-01,  7.7275e-01,  1.0564e+00,  9.5192e-01,
          1.0642e+00, -1.1557e+00,  2.1940e-02,  1.6351e+00,  8.2489e-02,
          7.2299e-01, -7.4042e-01, -5.1706e-02,  1.8319e-01, -7.7518e-02,
          2.1195e-01, -1.2870e-02,  9.1152e-02,  1.7284e-01, -5.8277e-03,
         -3.3441e-02,  1.3404e-01,  3.4983e-02,  3.4081e-01, -1.2769e-03,
         -1.7732e-01,  3.0320e-02, -4.9041e-03,  2.9760e-01,  3.9037e-01,
         -2.8540e-02,  7.9700e-03,  5.1473e-02,  6.1262e-01, -4.4424e-01,
         -9.0944e-02, -1.1641e-02,  9.7759e-02,  3.9663e-02, -1.6335e-02,
         -4.4858e-02, -1.5297e-02]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
948000 特征值优化 tensor(1.2631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6464e-01,  9.2669e-01,  7.7672e-01,  1.0598e+00,  9.8381e-01,
          1.0837e+00, -1.1654e+00, -1.5681e-03,  1.6204e+00,  8.9293e-02,
          7.5077e-01, -7.2527e-01, -5.1422e-02,  1.8221e-01, -9.7128e-02,
          1.8818e-01,  6.6174e-03,  6.9516e-02,  1.8608e-01,  4.5999e-02,
         -3.3867e-02,  1.3217e-01,  1.1994e-02,  3.4153e-01, -2.5827e-03,
         -2.0798e-01, -1.1448e-02,  4.5381e-02,  2.9805e-01,  3.9144e-01,
         -3.4431e-02, -3.7599e-02,  5.0900e-02,  6.1528e-01, -4.4272e-01,
         -8.7956e-02, -1.3303e-02,  9.9517e-02,  3.3248e-02, -3.6833e-02,
         -4.7967e-02, -1.7211e-02]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
949000 特征值优化 tensor(1.2856, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5752,  0.9251,  0.7699,  1.0404,  0.9702,  1.0670, -1.1668,  0.0228,
          1.6175,  0.0604,  0.7377, -0.7269, -0.0512,  0.1770, -0.0703,  0.2114,
          0.0083,  0.0886,  0.1654,  0.0056, -0.0333,  0.1324,  0.0369,  0.3402,
         -0.0096, -0.1786,  0.0203,  0.0045,  0.2972,  0.3920, -0.0334,  0.0324,
          0.0523,  0.6130, -0.4412, -0.0882, -0.0080,  0.0950,  0.0374, -0.0187,
         -0.0467, -0.0147]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
950000 特征值优化 tensor(1.2640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5458,  0.9363,  0.7676,  1.0608,  0.9723,  1.0641, -1.1538,  0.0373,
          1.6332,  0.0493,  0.7406, -0.7566, -0.0518,  0.1818, -0.0752,  0.2227,
         -0.0127,  0.0991,  0.1712, -0.0151, -0.0332,  0.1349,  0.0367,  0.3637,
          0.0233, -0.1708,  0.0393, -0.0238,  0.2964,  0.3903, -0.0267,  0.0337,
          0.0527,  0.6139, -0.4390, -0.1002, -0.0105,  0.0967,  0.0344, -0.0118,
         -0.0460, -0.0136]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
951000 特征值优化 tensor(1.3042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5881e-01,  9.2926e-01,  7.7327e-01,  1.0569e+00,  9.9889e-01,
          1.0728e+00, -1.1899e+00,  2.8233e-03,  1.6212e+00,  5.9111e-02,
          7.6822e-01, -7.2474e-01, -5.1001e-02,  1.7156e-01, -8.1581e-02,
          2.0007e-01, -1.0909e-03,  7.5450e-02,  1.9193e-01,  5.4451e-02,
         -3.1929e-02,  1.3523e-01,  1.6462e-02,  3.3113e-01,  2.3862e-03,
         -1.9536e-01, -1.5007e-02,  3.7605e-02,  2.9498e-01,  3.9033e-01,
         -3.6992e-02, -4.7954e-02,  4.8852e-02,  6.1241e-01, -4.3816e-01,
         -9.5202e-02, -1.4070e-02,  9.2443e-02,  3.6738e-02, -3.3693e-02,
         -4.7301e-02, -1.5238e-02]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
952000 特征值优化 tensor(1.2772, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5723,  0.9260,  0.7709,  1.0451,  0.9607,  1.0693, -1.1538,  0.0226,
          1.6174,  0.0416,  0.7264, -0.7307, -0.0516,  0.1833, -0.0968,  0.2019,
          0.0096,  0.0828,  0.1700,  0.0147, -0.0341,  0.1329,  0.0242,  0.3349,
         -0.0076, -0.1889,  0.0097,  0.0218,  0.2974,  0.3907, -0.0305,  0.0113,
          0.0522,  0.6120, -0.4426, -0.0919, -0.0089,  0.0976,  0.0361, -0.0247,
         -0.0479, -0.0149]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
953000 特征值优化 tensor(1.2725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6227e-01,  9.4199e-01,  7.7686e-01,  1.0637e+00,  9.5303e-01,
          1.0674e+00, -1.1583e+00,  3.3891e-02,  1.6352e+00,  1.5682e-02,
          7.2559e-01, -7.3983e-01, -5.1779e-02,  1.8498e-01, -7.5947e-02,
          2.1212e-01, -1.2867e-02,  9.0241e-02,  1.7219e-01,  2.4734e-03,
         -3.3392e-02,  1.3396e-01,  3.5402e-02,  3.4015e-01,  6.4124e-04,
         -1.8318e-01,  1.7951e-02, -1.8946e-03,  2.9773e-01,  3.9185e-01,
         -2.9240e-02, -2.8026e-03,  5.3112e-02,  6.1313e-01, -4.3079e-01,
         -9.4144e-02, -1.0936e-02,  9.7701e-02,  3.7698e-02, -1.9727e-02,
         -4.6237e-02, -1.3876e-02]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
954000 特征值优化 tensor(1.2673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6056e-01,  9.3269e-01,  7.7662e-01,  1.0617e+00,  9.6522e-01,
          1.0753e+00, -1.1477e+00,  1.3659e-02,  1.6177e+00,  3.8399e-02,
          7.3401e-01, -7.3035e-01, -5.1814e-02,  1.7741e-01, -9.8043e-02,
          1.9829e-01,  1.2153e-03,  7.1862e-02,  1.7565e-01,  3.9484e-02,
         -3.3258e-02,  1.3362e-01,  1.8895e-02,  3.3427e-01, -5.6110e-03,
         -1.9020e-01, -1.2125e-02,  4.0218e-02,  2.9756e-01,  3.9060e-01,
         -2.9140e-02, -1.4992e-02,  5.2653e-02,  6.1390e-01, -4.4308e-01,
         -9.6073e-02, -1.0729e-02,  9.8022e-02,  3.6103e-02, -3.0521e-02,
         -4.5971e-02, -1.5408e-02]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
955000 特征值优化 tensor(1.2592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.3984e-01,  9.3687e-01,  7.5879e-01,  1.0560e+00,  9.8607e-01,
          1.0598e+00, -1.1668e+00,  5.1079e-02,  1.6526e+00,  1.3763e-02,
          7.4909e-01, -7.6093e-01, -5.1791e-02,  1.8792e-01, -8.9981e-02,
          2.1551e-01, -2.6819e-05,  1.0921e-01,  1.5344e-01, -1.1400e-02,
         -3.3571e-02,  1.3387e-01,  3.5904e-02,  3.5156e-01, -4.4980e-03,
         -1.6014e-01,  4.7956e-02, -3.6881e-02,  2.9570e-01,  3.8887e-01,
         -2.6824e-02,  4.3138e-02,  5.2218e-02,  6.1448e-01, -4.3810e-01,
         -1.0696e-01, -9.7655e-03,  9.3560e-02,  3.7752e-02, -9.1455e-03,
         -4.5398e-02, -1.2778e-02]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
956000 特征值优化 tensor(1.2629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5466,  0.9343,  0.7634,  1.0584,  0.9789,  1.0640, -1.1585,  0.0035,
          1.6322,  0.0351,  0.7604, -0.7250, -0.0515,  0.1727, -0.0925,  0.2055,
         -0.0059,  0.0683,  0.1932,  0.0655, -0.0333,  0.1325,  0.0176,  0.3232,
         -0.0062, -0.1851, -0.0225,  0.0419,  0.2960,  0.3901, -0.0335, -0.0572,
          0.0508,  0.6130, -0.4404, -0.1010, -0.0131,  0.0971,  0.0361, -0.0359,
         -0.0459, -0.0156]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
957000 特征值优化 tensor(1.2841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.7686e-01,  9.2928e-01,  7.6937e-01,  1.0416e+00,  9.5895e-01,
          1.0665e+00, -1.1600e+00,  2.7596e-02,  1.6248e+00,  1.2978e-02,
          7.3144e-01, -7.2787e-01, -5.1173e-02,  1.8423e-01, -7.8626e-02,
          2.0714e-01,  1.0101e-02,  9.2293e-02,  1.6413e-01,  6.8427e-03,
         -3.2935e-02,  1.3332e-01,  3.6638e-02,  3.3197e-01, -6.7366e-03,
         -1.7592e-01,  1.1451e-02,  1.0483e-03,  2.9723e-01,  3.9188e-01,
         -3.1267e-02,  3.0364e-02,  5.2488e-02,  6.1263e-01, -4.4154e-01,
         -9.6749e-02, -7.4003e-03,  9.5972e-02,  3.6917e-02, -1.9676e-02,
         -4.8245e-02, -1.3345e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
958000 特征值优化 tensor(9.9487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7837,  1.3859,  1.7223,  0.1504,  2.9128,  0.1090,  1.0795, -0.5877,
         -0.1406, -0.9064,  1.4065,  0.1305, -1.3934,  0.0187,  0.2058, -0.9885,
          0.1096, -0.5951,  0.0682, -0.0104, -0.4694, -0.2412, -0.0508, -0.0296,
          0.7986, -1.1616, -0.0338,  0.2165, -1.5526,  0.4370,  0.9512,  0.7392,
          0.2920,  0.1582, -0.5381, -0.1374, -0.6060, -0.3755,  0.6470,  0.7454,
          0.1465, -0.9478]], device='cuda:0') tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
959000 特征值优化 tensor(1.5845, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1407,  0.7271,  2.5958,  0.7074,  2.5434, -0.9725,  0.2781, -0.2585,
         -0.7052, -1.3749,  0.3756,  0.1665, -0.4223,  0.1779,  0.0299, -0.3000,
          0.1291, -0.1022,  0.0473,  0.0250, -0.1846,  0.2503,  0.0516,  0.0130,
          0.3821, -0.4915, -0.3402, -0.3226, -0.6830,  0.2575,  0.6398,  0.3298,
          0.2178,  0.0683, -0.0401,  0.0100, -0.1285, -0.0453,  0.2583,  0.1425,
          0.1745, -0.2200]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
960000 特征值优化 tensor(1.1671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9782e-01,  3.9929e-01,  2.5789e+00,  9.4918e-01,  2.0688e+00,
         -8.0630e-01, -1.9389e-02, -3.1421e-01, -1.0947e+00, -1.6629e+00,
         -1.6962e-02, -1.5476e-01, -2.6806e-01, -5.1469e-02,  5.2504e-02,
         -1.4611e-01,  1.4705e-01, -8.7520e-03,  2.5853e-01,  3.8913e-02,
         -9.9905e-02,  2.9425e-01,  9.6072e-02,  5.5053e-02,  2.7661e-01,
         -2.1424e-01, -3.0435e-01, -3.8366e-01, -5.4791e-01,  2.6583e-01,
          5.7274e-01,  3.4190e-01,  1.7008e-01,  6.6897e-02,  1.0515e-02,
         -5.4695e-02, -1.7108e-01, -1.9775e-03,  1.5738e-01,  5.6997e-02,
          1.5154e-01, -4.3655e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
961000 特征值优化 tensor(1.0935, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9448e-01,  3.9768e-01,  2.5219e+00,  9.2695e-01,  1.7518e+00,
         -7.9581e-01, -4.2033e-02, -3.2421e-01, -1.1382e+00, -1.6524e+00,
         -2.8418e-02, -1.7678e-01, -2.6694e-01, -7.0108e-02,  7.3052e-02,
         -1.2742e-01,  1.9601e-01, -1.1284e-02,  2.5392e-01, -4.5534e-02,
         -1.0012e-01,  2.9372e-01,  9.4775e-02,  8.4435e-02,  2.4503e-01,
         -2.1695e-01, -2.8173e-01, -3.8033e-01, -5.3044e-01,  2.6073e-01,
          5.2102e-01,  3.2006e-01,  1.8951e-01,  6.6675e-02, -2.4140e-02,
          1.5818e-02, -1.7210e-01, -1.6489e-02,  1.2503e-01,  6.6753e-02,
          1.4947e-01,  7.4632e-04]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
962000 特征值优化 tensor(1.0871, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1957,  0.4013,  2.4432,  0.8401,  1.7346, -0.7876, -0.0423, -0.3492,
         -1.1661, -1.6838,  0.0062, -0.1913, -0.2674, -0.0738,  0.0692, -0.1451,
          0.1896, -0.0377,  0.2487, -0.0453, -0.1005,  0.2827,  0.1041,  0.0562,
          0.1994, -0.2369, -0.2464, -0.3859, -0.5240,  0.2498,  0.5172,  0.3166,
          0.2015,  0.0660, -0.0395,  0.0561, -0.1719, -0.0248,  0.0967,  0.0767,
          0.1551,  0.0208]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
963000 特征值优化 tensor(1.0991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1572,  0.3587,  2.2953,  0.7220,  1.7354, -0.7906, -0.0220, -0.3189,
         -1.1567, -1.6579,  0.0178, -0.1981, -0.2619, -0.0879,  0.0458, -0.1449,
          0.1634, -0.0056,  0.2793,  0.0344, -0.0949,  0.2628,  0.1081,  0.0300,
          0.2550, -0.1778, -0.2675, -0.3129, -0.5080,  0.2310,  0.5165,  0.3306,
          0.1558,  0.0678,  0.0265, -0.0093, -0.1674, -0.0213,  0.0905,  0.0732,
          0.1574,  0.0288]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
964000 特征值优化 tensor(1.0999, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1541,  0.3565,  2.2328,  0.6535,  1.7393, -0.7967, -0.0371, -0.3077,
         -1.1536, -1.6524,  0.0340, -0.2108, -0.2612, -0.0643,  0.0507, -0.1340,
          0.1839, -0.0135,  0.2601, -0.0298, -0.0944,  0.2503,  0.0861, -0.0962,
          0.2242, -0.1927, -0.2266, -0.3322, -0.5014,  0.2162,  0.5169,  0.3270,
          0.1592,  0.0673, -0.0372,  0.0107, -0.1695, -0.0151,  0.0802,  0.0763,
          0.1591,  0.0380]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
965000 特征值优化 tensor(1.0940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1598,  0.3594,  2.2289,  0.6503,  1.7352, -0.7822, -0.0263, -0.3093,
         -1.1648, -1.6599,  0.0270, -0.2211, -0.2622, -0.0987,  0.0476, -0.1484,
          0.1630, -0.0036,  0.2807,  0.0385, -0.0957,  0.2488,  0.0762, -0.1084,
          0.2513, -0.1602, -0.2476, -0.2918, -0.5007,  0.2157,  0.5170,  0.3262,
          0.1587,  0.0671,  0.0244, -0.0188, -0.1673, -0.0150,  0.0830,  0.0744,
          0.1575,  0.0332]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
966000 特征值优化 tensor(1.0871, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1980,  0.3990,  2.2410,  0.6498,  1.7328, -0.7672, -0.0327, -0.3363,
         -1.1636, -1.6774,  0.0118, -0.2246, -0.2676, -0.0693,  0.0682, -0.1517,
          0.1791, -0.0389,  0.2441, -0.0487, -0.1005,  0.2498,  0.0816, -0.1173,
          0.1843, -0.2277, -0.1967, -0.3563, -0.5031,  0.2164,  0.5170,  0.3220,
          0.1865,  0.0668, -0.0343,  0.0398, -0.1715, -0.0264,  0.0768,  0.0808,
          0.1565,  0.0456]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
967000 特征值优化 tensor(1.1302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1635,  0.3767,  2.2161,  0.6633,  1.7350, -0.8086, -0.0108, -0.3034,
         -1.1307, -1.6444,  0.0402, -0.1913, -0.2648, -0.0756,  0.0802, -0.1144,
          0.1827,  0.0075,  0.2582,  0.0165, -0.0975,  0.2538,  0.0763, -0.0793,
          0.2651, -0.1604, -0.2518, -0.3010, -0.4991,  0.2171,  0.5160,  0.3295,
          0.1714,  0.0682, -0.0149, -0.0224, -0.1640, -0.0272,  0.0733,  0.0791,
          0.1548,  0.0379]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
968000 特征值优化 tensor(1.0965, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1582,  0.3594,  2.2295,  0.6517,  1.7384, -0.7922, -0.0360, -0.3068,
         -1.1493, -1.6555,  0.0347, -0.2326, -0.2624, -0.0972,  0.0495, -0.1427,
          0.1630, -0.0032,  0.2817,  0.0366, -0.0952,  0.2492,  0.0716, -0.1141,
          0.2508, -0.1607, -0.2435, -0.2890, -0.5007,  0.2161,  0.5170,  0.3242,
          0.1604,  0.0673,  0.0330, -0.0172, -0.1686, -0.0110,  0.0853,  0.0756,
          0.1584,  0.0330]], device='cuda:0') tensor(0.2114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
969000 特征值优化 tensor(1.0877, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1966,  0.3983,  2.2357,  0.6571,  1.7337, -0.7693, -0.0416, -0.3348,
         -1.1430, -1.6710,  0.0220, -0.2190, -0.2676, -0.0697,  0.0681, -0.1477,
          0.1823, -0.0368,  0.2448, -0.0505, -0.1004,  0.2493,  0.0862, -0.1180,
          0.1911, -0.2274, -0.1926, -0.3570, -0.5025,  0.2169,  0.5178,  0.3196,
          0.1915,  0.0673, -0.0315,  0.0472, -0.1724, -0.0228,  0.0714,  0.0806,
          0.1572,  0.0467]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
970000 特征值优化 tensor(1.1007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1548,  0.3559,  2.2287,  0.6532,  1.7418, -0.7962, -0.0520, -0.3114,
         -1.1307, -1.6504,  0.0309, -0.2243, -0.2617, -0.0655,  0.0549, -0.1290,
          0.1837, -0.0182,  0.2623, -0.0350, -0.0950,  0.2489,  0.0867, -0.0945,
          0.2285, -0.1980, -0.2226, -0.3293, -0.5003,  0.2159,  0.5184,  0.3202,
          0.1730,  0.0669, -0.0407,  0.0123, -0.1715, -0.0149,  0.0734,  0.0764,
          0.1576,  0.0431]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
971000 特征值优化 tensor(1.0877, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1875,  0.3849,  2.2330,  0.6564,  1.7302, -0.7827, -0.0338, -0.3280,
         -1.1502, -1.6732,  0.0236, -0.2325, -0.2659, -0.0974,  0.0589, -0.1354,
          0.1657,  0.0086,  0.2891,  0.0470, -0.0986,  0.2498,  0.0877, -0.1049,
          0.2786, -0.1401, -0.2633, -0.2756, -0.5015,  0.2153,  0.5175,  0.3213,
          0.1802,  0.0661,  0.0334, -0.0424, -0.1664, -0.0091,  0.0845,  0.0732,
          0.1547,  0.0314]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
972000 特征值优化 tensor(1.1058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4573e-01,  3.5288e-01,  2.2240e+00,  6.6105e-01,  1.7484e+00,
         -8.0284e-01, -3.6501e-02, -2.8728e-01, -1.1247e+00, -1.6465e+00,
          6.4868e-02, -2.3289e-01, -2.6116e-01, -8.9705e-02,  4.3525e-02,
         -1.4656e-01,  1.6312e-01, -8.6305e-03,  2.7508e-01,  1.7830e-02,
         -9.4537e-02,  2.5056e-01,  6.8653e-02, -1.0964e-01,  2.3644e-01,
         -1.7670e-01, -2.3115e-01, -3.0176e-01, -4.9969e-01,  2.1646e-01,
          5.1769e-01,  3.3215e-01,  1.5569e-01,  6.7046e-02,  2.8641e-02,
         -1.5788e-03, -1.6635e-01, -4.9568e-03,  8.2453e-02,  7.5788e-02,
          1.5993e-01,  3.4801e-02]], device='cuda:0') tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
973000 特征值优化 tensor(1.0930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1773,  0.3745,  2.2371,  0.6474,  1.7365, -0.7826, -0.0527, -0.3282,
         -1.1341, -1.6668,  0.0370, -0.2327, -0.2642, -0.0701,  0.0573, -0.1411,
          0.1882, -0.0278,  0.2557, -0.0471, -0.0970,  0.2480,  0.0858, -0.1103,
          0.2093, -0.2126, -0.2045, -0.3454, -0.5015,  0.2160,  0.5186,  0.3185,
          0.1867,  0.0662, -0.0406,  0.0310, -0.1737, -0.0170,  0.0722,  0.0792,
          0.1579,  0.0472]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
974000 特征值优化 tensor(1.1069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1477,  0.3495,  2.2211,  0.6539,  1.7476, -0.8062, -0.0443, -0.3076,
         -1.1194, -1.6485,  0.0465, -0.2226, -0.2608, -0.0711,  0.0652, -0.1189,
          0.1773, -0.0051,  0.2601, -0.0194, -0.0936,  0.2496,  0.0916, -0.0911,
          0.2402, -0.1887, -0.2301, -0.3210, -0.4996,  0.2153,  0.5174,  0.3227,
          0.1703,  0.0669, -0.0295,  0.0041, -0.1669, -0.0057,  0.0737,  0.0791,
          0.1595,  0.0452]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
975000 特征值优化 tensor(1.0853, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1979,  0.3998,  2.2377,  0.6517,  1.7325, -0.7650, -0.0367, -0.3327,
         -1.1571, -1.6908,  0.0272, -0.2481, -0.2675, -0.0937,  0.0559, -0.1303,
          0.1684,  0.0123,  0.2874,  0.0480, -0.1009,  0.2497,  0.0868, -0.1069,
          0.2895, -0.1342, -0.2763, -0.2695, -0.5026,  0.2155,  0.5180,  0.3208,
          0.1878,  0.0668,  0.0295, -0.0442, -0.1670, -0.0052,  0.0862,  0.0734,
          0.1546,  0.0339]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
976000 特征值优化 tensor(1.1004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5228e-01,  3.5623e-01,  2.2254e+00,  6.5237e-01,  1.7456e+00,
         -7.9327e-01, -4.9598e-02, -2.9432e-01, -1.1287e+00, -1.6553e+00,
          6.1428e-02, -2.4908e-01, -2.6169e-01, -9.0653e-02,  4.1836e-02,
         -1.4492e-01,  1.5966e-01, -6.1425e-03,  2.8095e-01,  2.5929e-02,
         -9.5042e-02,  2.4933e-01,  7.3626e-02, -1.1009e-01,  2.4166e-01,
         -1.7182e-01, -2.3322e-01, -2.9689e-01, -5.0082e-01,  2.1570e-01,
          5.1750e-01,  3.2642e-01,  1.6403e-01,  6.7320e-02,  2.7444e-02,
         -8.3848e-03, -1.6776e-01, -2.1388e-03,  8.1480e-02,  7.5662e-02,
          1.6087e-01,  3.2863e-02]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
977000 特征值优化 tensor(1.0908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1855,  0.3802,  2.2443,  0.6461,  1.7329, -0.7715, -0.0588, -0.3297,
         -1.1328, -1.6715,  0.0438, -0.2404, -0.2651, -0.0689,  0.0576, -0.1392,
          0.1855, -0.0259,  0.2564, -0.0491, -0.0981,  0.2494,  0.0807, -0.1151,
          0.2030, -0.2180, -0.2017, -0.3484, -0.5030,  0.2160,  0.5176,  0.3158,
          0.1915,  0.0672, -0.0405,  0.0319, -0.1740, -0.0131,  0.0719,  0.0800,
          0.1582,  0.0484]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
978000 特征值优化 tensor(1.0999, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1575,  0.3581,  2.2266,  0.6501,  1.7421, -0.7982, -0.0630, -0.3171,
         -1.1172, -1.6536,  0.0487, -0.2279, -0.2622, -0.0689,  0.0543, -0.1241,
          0.1855, -0.0120,  0.2634, -0.0379, -0.0953,  0.2481,  0.0871, -0.0988,
          0.2269, -0.2020, -0.2183, -0.3319, -0.5008,  0.2151,  0.5186,  0.3152,
          0.1829,  0.0670, -0.0377,  0.0173, -0.1725, -0.0086,  0.0710,  0.0764,
          0.1587,  0.0451]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
979000 特征值优化 tensor(1.1652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1945,  0.4006,  2.2266,  0.6531,  1.7350, -0.7823, -0.0409, -0.3218,
         -1.1338, -1.6792,  0.0358, -0.2269, -0.2672, -0.0884,  0.0651, -0.1120,
          0.1705,  0.0154,  0.2776,  0.0414, -0.0998,  0.2524,  0.0870, -0.0977,
          0.2876, -0.1421, -0.2718, -0.2784, -0.5009,  0.2181,  0.5182,  0.3132,
          0.1956,  0.0675,  0.0114, -0.0473, -0.1659, -0.0073,  0.0742,  0.0698,
          0.1566,  0.0370]], device='cuda:0') tensor(0.2157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
980000 特征值优化 tensor(1.0938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6363e-01,  3.6400e-01,  2.2316e+00,  6.5390e-01,  1.7368e+00,
         -7.8362e-01, -5.7708e-02, -3.1111e-01, -1.1353e+00, -1.6682e+00,
          5.2311e-02, -2.5777e-01, -2.6283e-01, -9.8717e-02,  5.0570e-02,
         -1.2920e-01,  1.6318e-01,  4.6052e-03,  2.8940e-01,  4.0036e-02,
         -9.5764e-02,  2.4989e-01,  8.1722e-02, -1.1150e-01,  2.5949e-01,
         -1.5639e-01, -2.4775e-01, -2.8334e-01, -5.0093e-01,  2.1589e-01,
          5.1770e-01,  3.1476e-01,  1.7688e-01,  6.8283e-02,  3.1777e-02,
         -2.3017e-02, -1.6782e-01,  5.9682e-04,  8.3932e-02,  7.5466e-02,
          1.5756e-01,  3.4139e-02]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
981000 特征值优化 tensor(1.0885, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1959,  0.3975,  2.2453,  0.6534,  1.7340, -0.7656, -0.0681, -0.3323,
         -1.1344, -1.6799,  0.0474, -0.2499, -0.2675, -0.0666,  0.0648, -0.1389,
          0.1821, -0.0303,  0.2502, -0.0509, -0.1000,  0.2507,  0.0779, -0.1204,
          0.1900, -0.2283, -0.1956, -0.3577, -0.5034,  0.2172,  0.5173,  0.3126,
          0.2014,  0.0668, -0.0426,  0.0393, -0.1731, -0.0090,  0.0727,  0.0803,
          0.1582,  0.0495]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
982000 特征值优化 tensor(1.0954, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1669,  0.3649,  2.2290,  0.6481,  1.7404, -0.7932, -0.0727, -0.3192,
         -1.1215, -1.6653,  0.0560, -0.2378, -0.2633, -0.0713,  0.0522, -0.1273,
          0.1859, -0.0172,  0.2635, -0.0432, -0.0961,  0.2478,  0.0880, -0.1069,
          0.2189, -0.2092, -0.2101, -0.3387, -0.5008,  0.2152,  0.5190,  0.3130,
          0.1887,  0.0669, -0.0375,  0.0274, -0.1732, -0.0050,  0.0726,  0.0777,
          0.1588,  0.0466]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
983000 特征值优化 tensor(1.1752, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0297e-01,  4.0877e-01,  2.2365e+00,  6.4681e-01,  1.7356e+00,
         -7.6402e-01, -5.3452e-02, -3.1841e-01, -1.1527e+00, -1.6952e+00,
          3.7594e-02, -2.5876e-01, -2.6876e-01, -9.0747e-02,  5.9181e-02,
         -1.1957e-01,  1.6999e-01,  1.5854e-02,  2.8616e-01,  4.6471e-02,
         -1.0053e-01,  2.5029e-01,  8.1066e-02, -1.1442e-01,  2.8453e-01,
         -1.3761e-01, -2.7039e-01, -2.7299e-01, -5.0238e-01,  2.1662e-01,
          5.1691e-01,  3.1178e-01,  1.9836e-01,  6.7412e-02,  2.8808e-02,
         -2.9105e-02, -1.6681e-01, -5.5502e-04,  8.3665e-02,  7.3346e-02,
          1.5527e-01,  3.4640e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
984000 特征值优化 tensor(1.0898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1827,  0.3778,  2.2379,  0.6470,  1.7313, -0.7866, -0.0749, -0.3275,
         -1.1310, -1.6699,  0.0583, -0.2365, -0.2647, -0.0722,  0.0572, -0.1345,
          0.1846, -0.0251,  0.2612, -0.0482, -0.0978,  0.2486,  0.0972, -0.1081,
          0.1999, -0.2128, -0.2025, -0.3503, -0.5019,  0.2157,  0.5174,  0.3118,
          0.1978,  0.0668, -0.0580,  0.0176, -0.1743, -0.0058,  0.0723,  0.0794,
          0.1587,  0.0475]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
985000 特征值优化 tensor(1.1035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5105e-01,  3.5340e-01,  2.2297e+00,  6.5494e-01,  1.7451e+00,
         -8.0246e-01, -7.1636e-02, -3.0805e-01, -1.1289e+00, -1.6469e+00,
          6.1381e-02, -2.2387e-01, -2.6121e-01, -6.8528e-02,  6.1297e-02,
         -1.1790e-01,  1.8049e-01,  2.5839e-04,  2.6435e-01, -2.7570e-02,
         -9.4365e-02,  2.5005e-01,  7.4893e-02, -1.0648e-01,  2.2491e-01,
         -1.8583e-01, -2.2177e-01, -3.2038e-01, -5.0111e-01,  2.1652e-01,
          5.1786e-01,  3.1392e-01,  1.8684e-01,  6.7034e-02, -9.9795e-03,
          2.8351e-02, -1.6977e-01,  2.2259e-03,  7.4598e-02,  7.8959e-02,
          1.5852e-01,  4.2299e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
986000 特征值优化 tensor(1.1411, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1831,  0.3776,  2.2129,  0.6550,  1.7312, -0.8021, -0.0560, -0.3152,
         -1.1298, -1.6657,  0.0480, -0.1695, -0.2663, -0.0760,  0.0677, -0.1011,
          0.1776,  0.0142,  0.2763,  0.0187, -0.0981,  0.2501,  0.0870, -0.0777,
          0.2734, -0.1610, -0.2662, -0.3230, -0.4986,  0.2147,  0.5164,  0.3141,
          0.1984,  0.0680, -0.0048, -0.0415, -0.1660, -0.0023,  0.0734,  0.0747,
          0.1603,  0.0342]], device='cuda:0') tensor(0.2153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
987000 特征值优化 tensor(1.1799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2008,  0.4056,  2.2345,  0.6502,  1.7335, -0.7725, -0.0698, -0.3290,
         -1.1729, -1.6775,  0.0537, -0.2154, -0.2692, -0.0904,  0.0608, -0.1184,
          0.1724,  0.0182,  0.2849,  0.0473, -0.1008,  0.2491,  0.0859, -0.1041,
          0.2961, -0.1281, -0.2776, -0.2643, -0.5021,  0.2165,  0.5159,  0.3060,
          0.2016,  0.0669,  0.0317, -0.0488, -0.1719, -0.0081,  0.0868,  0.0760,
          0.1588,  0.0323]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
988000 特征值优化 tensor(1.0979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5427e-01,  3.6065e-01,  2.2297e+00,  6.5523e-01,  1.7386e+00,
         -7.9495e-01, -6.5863e-02, -2.9664e-01, -1.1527e+00, -1.6514e+00,
          6.7830e-02, -2.2219e-01, -2.6217e-01, -9.6401e-02,  5.0264e-02,
         -1.2466e-01,  1.6019e-01,  1.2210e-03,  2.8868e-01,  3.4448e-02,
         -9.4866e-02,  2.4982e-01,  7.0439e-02, -1.0807e-01,  2.5391e-01,
         -1.5822e-01, -2.4700e-01, -2.8868e-01, -5.0127e-01,  2.1689e-01,
          5.1748e-01,  3.1575e-01,  1.7655e-01,  6.6559e-02,  3.2024e-02,
         -1.7935e-02, -1.6810e-01,  7.6304e-03,  8.2993e-02,  7.3458e-02,
          1.5866e-01,  3.0471e-02]], device='cuda:0') tensor(0.2098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
989000 特征值优化 tensor(1.0907, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2019,  0.4089,  2.2273,  0.6531,  1.7345, -0.7772, -0.0773, -0.3179,
         -1.1463, -1.6634,  0.0457, -0.2169, -0.2677, -0.0719,  0.0692, -0.1343,
          0.1805, -0.0310,  0.2523, -0.0537, -0.1010,  0.2493,  0.0907, -0.1104,
          0.1917, -0.2299, -0.1928, -0.3630, -0.5016,  0.2157,  0.5165,  0.3049,
          0.2088,  0.0675, -0.0547,  0.0472, -0.1745, -0.0081,  0.0739,  0.0776,
          0.1583,  0.0443]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
990000 特征值优化 tensor(1.0973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1653,  0.3619,  2.2324,  0.6467,  1.7367, -0.7947, -0.0729, -0.3200,
         -1.1415, -1.6506,  0.0586, -0.1983, -0.2627, -0.0730,  0.0601, -0.1262,
          0.1887, -0.0097,  0.2636, -0.0428, -0.0961,  0.2480,  0.0808, -0.1136,
          0.2163, -0.1994, -0.2149, -0.3423, -0.5012,  0.2158,  0.5175,  0.3107,
          0.2027,  0.0670, -0.0291,  0.0209, -0.1732, -0.0049,  0.0737,  0.0774,
          0.1593,  0.0432]], device='cuda:0') tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
991000 特征值优化 tensor(1.0880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1936,  0.3921,  2.2369,  0.6510,  1.7313, -0.7650, -0.0610, -0.3271,
         -1.1899, -1.6738,  0.0529, -0.2119, -0.2669, -0.0958,  0.0543, -0.1190,
          0.1677,  0.0203,  0.2935,  0.0485, -0.0996,  0.2491,  0.0751, -0.1087,
          0.2755, -0.1389, -0.2706, -0.2771, -0.5024,  0.2152,  0.5175,  0.3129,
          0.1969,  0.0671,  0.0295, -0.0265, -0.1669,  0.0081,  0.0901,  0.0721,
          0.1547,  0.0300]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
992000 特征值优化 tensor(1.1799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0353e-01,  4.1301e-01,  2.2304e+00,  6.5046e-01,  1.7337e+00,
         -7.7323e-01, -6.1516e-02, -3.2165e-01, -1.1939e+00, -1.6731e+00,
          4.4682e-02, -1.8572e-01, -2.6940e-01, -8.2853e-02,  6.3456e-02,
         -1.1029e-01,  1.7123e-01,  1.9677e-02,  2.8962e-01,  4.6222e-02,
         -1.0205e-01,  2.4957e-01,  8.7401e-02, -9.5846e-02,  3.0070e-01,
         -1.2426e-01, -2.8488e-01, -2.6791e-01, -5.0099e-01,  2.1573e-01,
          5.1693e-01,  3.0898e-01,  2.0420e-01,  6.7021e-02,  2.3319e-02,
         -5.9548e-02, -1.6756e-01,  1.9405e-03,  8.6708e-02,  7.2142e-02,
          1.5555e-01,  3.0999e-02]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
993000 特征值优化 tensor(1.0916, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1852,  0.3854,  2.2307,  0.6572,  1.7336, -0.7916, -0.0656, -0.3233,
         -1.1816, -1.6509,  0.0633, -0.1899, -0.2661, -0.0907,  0.0619, -0.1127,
          0.1658,  0.0172,  0.2961,  0.0469, -0.0986,  0.2495,  0.0846, -0.1096,
          0.2747, -0.1341, -0.2667, -0.2809, -0.5020,  0.2158,  0.5174,  0.3113,
          0.1986,  0.0674,  0.0416, -0.0359, -0.1665,  0.0071,  0.0870,  0.0711,
          0.1560,  0.0276]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
994000 特征值优化 tensor(1.1613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1884,  0.3906,  2.2296,  0.6590,  1.7382, -0.7903, -0.0713, -0.3110,
         -1.1642, -1.6528,  0.0693, -0.1747, -0.2675, -0.0593,  0.0526, -0.1213,
          0.1705, -0.0155,  0.2611, -0.0418, -0.1006,  0.2545,  0.0807, -0.1025,
          0.1858, -0.2218, -0.2013, -0.3553, -0.5014,  0.2191,  0.5166,  0.3124,
          0.1985,  0.0674, -0.0167,  0.0377, -0.1703, -0.0061,  0.0791,  0.0768,
          0.1578,  0.0325]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
995000 特征值优化 tensor(1.0947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6672e-01,  3.6420e-01,  2.2347e+00,  6.4598e-01,  1.7405e+00,
         -7.8547e-01, -8.2767e-02, -3.1683e-01, -1.1757e+00, -1.6540e+00,
          6.4755e-02, -1.9218e-01, -2.6318e-01, -7.1303e-02,  5.5736e-02,
         -1.2389e-01,  1.8706e-01, -1.6338e-02,  2.6496e-01, -4.4019e-02,
         -9.5887e-02,  2.4771e-01,  8.6891e-02, -1.0534e-01,  2.1337e-01,
         -2.0400e-01, -2.1382e-01, -3.4027e-01, -5.0148e-01,  2.1555e-01,
          5.1820e-01,  3.1093e-01,  1.9618e-01,  6.7217e-02, -3.7048e-02,
          2.5072e-02, -1.7453e-01, -1.8073e-03,  7.5342e-02,  7.7893e-02,
          1.5921e-01,  4.3757e-02]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
996000 特征值优化 tensor(1.1148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1490,  0.3574,  2.2179,  0.6613,  1.7431, -0.8077, -0.0616, -0.2897,
         -1.1542, -1.6341,  0.0854, -0.1783, -0.2618, -0.0707,  0.0665, -0.1006,
          0.1806,  0.0092,  0.2644, -0.0053, -0.0949,  0.2509,  0.0874, -0.0866,
          0.2474, -0.1742, -0.2419, -0.3147, -0.4989,  0.2154,  0.5175,  0.3217,
          0.1792,  0.0670, -0.0243, -0.0079, -0.1660,  0.0062,  0.0766,  0.0792,
          0.1590,  0.0410]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
997000 特征值优化 tensor(1.1016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1510,  0.3564,  2.2263,  0.6577,  1.7405, -0.7974, -0.0671, -0.2833,
         -1.1721, -1.6431,  0.0891, -0.1982, -0.2618, -0.0963,  0.0462, -0.1228,
          0.1630,  0.0031,  0.2879,  0.0256, -0.0951,  0.2509,  0.0751, -0.1062,
          0.2376, -0.1698, -0.2389, -0.3011, -0.5007,  0.2168,  0.5169,  0.3200,
          0.1728,  0.0660,  0.0285, -0.0146, -0.1664,  0.0110,  0.0841,  0.0757,
          0.1603,  0.0310]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
998000 特征值优化 tensor(1.1681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1960,  0.4036,  2.2225,  0.6536,  1.7365, -0.7887, -0.0741, -0.3119,
         -1.1562, -1.6441,  0.0639, -0.1677, -0.2682, -0.0649,  0.0603, -0.1157,
          0.1750, -0.0112,  0.2582, -0.0464, -0.1009,  0.2521,  0.0787, -0.1057,
          0.1943, -0.2203, -0.1992, -0.3529, -0.5003,  0.2185,  0.5160,  0.3100,
          0.2039,  0.0677, -0.0284,  0.0465, -0.1678,  0.0042,  0.0750,  0.0756,
          0.1608,  0.0338]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
999000 特征值优化 tensor(1.0926, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7615e-01,  3.7108e-01,  2.2398e+00,  6.4521e-01,  1.7352e+00,
         -7.8323e-01, -8.9927e-02, -3.2039e-01, -1.1750e+00, -1.6565e+00,
          7.0721e-02, -1.9389e-01, -2.6399e-01, -7.2420e-02,  5.6340e-02,
         -1.2473e-01,  1.8884e-01, -1.4604e-02,  2.6535e-01, -4.5650e-02,
         -9.7013e-02,  2.4857e-01,  8.5894e-02, -1.1104e-01,  2.0477e-01,
         -2.1010e-01, -2.0798e-01, -3.4585e-01, -5.0233e-01,  2.1562e-01,
          5.1877e-01,  3.0776e-01,  2.0242e-01,  6.6759e-02, -3.9234e-02,
          2.8820e-02, -1.7490e-01,  1.5734e-03,  7.5138e-02,  7.8630e-02,
          1.5850e-01,  4.4868e-02]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
完成共1000000轮迭代 推荐参数如下：
收敛loss为： ('超出最大迭代次数', tensor(0.8014))
tensor([[ 1.0822e-01, -8.1577e-01, -7.6137e-01, -7.6164e-01,  1.5477e+00,
          1.3290e+00,  1.2679e+00,  3.6680e+00, -1.6224e+00,  1.4893e+00,
          7.0518e+00,  9.8476e-01, -2.4643e-03,  1.0878e-02, -7.6843e-03,
          4.0583e-03,  1.3116e-01, -3.9600e-01,  3.5037e-01, -3.6064e-02,
          2.2978e-01, -1.3694e-01, -1.4395e-01,  2.4991e-01,  2.3926e-03,
         -6.3093e-02, -6.3717e-02,  3.9274e-02, -3.6370e-03,  3.3078e-02,
         -2.1436e-02, -1.8970e-01,  6.5875e-01,  2.8095e-01,  1.3150e-01,
         -2.1243e-01,  6.1594e-02, -1.4754e-02,  1.1348e-01, -5.5040e-02,
          2.8891e-02,  3.8317e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8162))
tensor([[-1.3562,  0.9760,  0.1981,  0.6840,  1.5351,  1.4787,  2.8804,  3.5244,
          0.3703, -1.2627,  1.9825,  1.1012, -0.0678,  0.0579,  0.0610,  0.0440,
          0.0629,  0.0282, -0.0719,  0.0326, -0.2072,  0.0190, -0.0583,  0.0037,
          0.0973,  0.0319, -0.1537, -0.2654,  0.0446, -0.2558, -0.0211, -0.4431,
          0.2543, -0.0129, -0.3370, -0.2051, -0.1825, -0.1642,  0.1968, -0.1460,
         -0.1629,  0.2377]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8991))
tensor([[-2.7646e-01,  2.9411e-01,  1.4754e+00, -2.4451e-01, -4.4825e-01,
          1.9767e+00,  9.6163e-01,  8.2384e-01,  1.5590e+00,  1.4500e+00,
         -2.0968e+00, -7.8183e-01, -5.3941e-02, -9.4078e-02, -1.2198e-01,
         -1.8371e-01, -8.6829e-02, -1.2742e-02,  3.2474e-04,  3.6309e-02,
         -1.2117e-01,  1.3511e-01,  2.0781e-01,  4.1796e-02,  2.9767e-01,
          3.1215e-01, -1.1229e-01,  8.6027e-02,  2.3602e-01,  1.3359e-01,
         -2.7829e-01, -2.4267e-02,  4.5728e-02, -7.5591e-02, -4.8530e-01,
          1.7475e-01, -8.7413e-03, -1.1857e-01,  3.1816e-01,  1.6350e-01,
          9.4679e-02,  1.9031e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.9391))
tensor([[ 7.4082e+00,  5.4695e+00, -4.4127e-02,  5.5201e-01,  1.2201e+00,
         -3.2610e-01, -4.5315e-01, -7.1265e-01, -2.2009e+00,  3.8614e-01,
         -5.9279e-01,  1.0635e+00, -1.0716e-01, -2.4959e-01, -3.8686e-01,
          2.4725e-01, -2.8046e-01, -3.0775e-01, -2.3054e-01, -9.2424e-01,
         -3.5009e-02,  1.1758e-01, -1.5399e-01, -1.6869e-01, -5.0024e-02,
         -6.3971e-03, -6.4931e-02, -1.0173e-01,  2.0647e-02,  4.9775e-02,
          4.5388e-01, -2.0175e-01, -2.3505e-01, -2.6577e-01, -5.6749e-02,
         -1.0981e-02, -1.0472e-01,  8.3206e-02,  1.2195e-01, -1.0301e-01,
         -8.6790e-02, -3.6419e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.9567))
tensor([[-3.7723e-01,  9.1836e-01,  4.3943e+00, -2.8660e+00, -3.5922e-01,
         -8.1718e-01,  1.0677e+00,  3.5016e-01, -1.1012e+00, -9.0566e-01,
          1.6505e+00, -1.1408e+00, -1.0471e-01, -1.7954e-01, -1.3136e-01,
          7.8170e-02, -2.7515e-02, -6.5631e-02, -8.6966e-03, -4.2231e-02,
         -8.7373e-02, -2.8798e-01,  1.1834e-01, -1.3273e-01,  5.3076e-02,
          1.5182e-01,  2.1650e-01, -4.1586e-03,  4.9720e-01,  2.6751e-01,
         -2.6303e-01, -2.0133e-01,  2.3457e-01, -1.6374e-02,  2.5218e-02,
         -2.6441e-03,  2.0880e-01,  1.3216e-01,  2.1304e-01, -2.7977e-02,
          2.8336e-02,  3.0040e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.9626))
tensor([[-4.9475e-02, -2.9026e-02,  1.6150e+00,  9.7445e-02,  8.7055e+00,
         -6.2803e-01,  7.1910e-01, -1.4576e+00, -9.8570e-01,  1.7588e+00,
         -2.6046e-01, -2.4456e-01, -1.3762e-02,  9.6118e-02,  5.0527e-01,
          5.3518e-02,  1.1288e-01,  2.8929e-02, -2.0535e-02,  2.0065e-02,
         -1.5671e-01,  1.9293e-02,  1.7011e-01,  9.2024e-02,  1.7724e-02,
          1.6649e-02, -9.9768e-02,  5.6796e-03, -4.3152e-01,  4.9960e-01,
         -6.4278e-01,  6.3811e-01,  3.3537e-01,  6.7209e-02,  2.2882e-02,
         -2.1040e-02,  1.3201e-02, -4.0814e-03,  9.8048e-02, -8.0514e-02,
         -2.2784e-02, -8.7752e-04]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.9728))
tensor([[ 4.7177,  2.9715,  2.0628, -0.7210, -0.2004, -0.0602, -0.6760,  1.7546,
         -0.9206, -0.3832, -0.5821, -0.9701, -0.1360,  0.1500,  0.2075,  0.1711,
         -0.1340,  0.1861,  0.1307, -0.7556, -0.1403, -0.0961,  0.0170, -0.3711,
         -0.0189, -0.1763, -0.1651,  0.0696, -0.2627,  0.5614,  0.1285,  0.0092,
          0.0288, -0.1713,  0.0293,  0.0380,  0.0681, -0.0835,  0.0244, -0.0354,
          0.0230,  0.0162]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.9996))
tensor([[ 2.1932e+00,  8.0345e-01,  4.2847e-02, -7.2792e-01,  1.5421e+00,
         -6.0990e-01,  3.2779e-02,  2.1964e+00, -1.2724e-01, -5.6447e-01,
          4.8110e-01, -1.0784e+00,  1.0464e-01,  2.2407e-01,  2.9940e-01,
          2.0584e-01,  3.3178e-01, -2.6232e-01,  1.4488e-01,  4.9417e-01,
          3.8705e-01, -5.5480e-03, -2.3137e-01,  9.0557e-02, -9.6143e-02,
          5.8449e-02,  1.4635e-01,  5.8171e-02,  7.7458e-02,  2.2255e-01,
         -2.0790e-02, -1.8960e-01,  1.7978e-01,  6.6761e-02, -3.8757e-02,
          7.7133e-02,  4.8025e-04,  1.0078e-01,  1.1504e-01,  2.4203e-01,
         -1.6129e-02,  5.8373e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.0211))
tensor([[-0.1746, -0.0144, -0.7762,  1.6633,  0.2546,  1.7534,  2.5081, -1.6131,
          0.8224, -1.2135,  1.5570, -0.5682, -0.0187, -0.1876, -0.1044,  0.1199,
          0.0994, -0.1200,  0.1698,  0.0398,  0.1509, -0.1216,  0.3289,  0.2279,
          0.0243,  0.0813,  0.1221,  0.0462,  0.0529, -0.2431, -0.1866, -0.3038,
         -0.2977,  0.0193, -0.3746, -0.1496, -0.1383,  0.1855,  0.2127, -0.0826,
          0.0441,  0.2163]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.0590))
tensor([[ 0.7623, -0.5482,  0.2436, -0.4235,  1.3143, -0.2417,  1.2065,  1.6784,
          1.0363, -0.5472, -1.6916, -1.2355,  0.0472, -0.2516, -0.1474, -0.3103,
         -0.0939,  0.1116, -0.0794, -0.3208, -0.2089, -0.1400,  0.2123, -0.1843,
          0.0384, -0.0270, -0.0437, -0.0295,  0.0531, -0.0362,  0.4631, -0.3281,
          0.1070,  0.1265, -0.0364, -0.0202,  0.0800, -0.1425, -0.0336,  0.0070,
         -0.0551, -0.0170]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.0652))
tensor([[-0.2442,  0.9572, -0.0248,  0.1304,  1.4070,  1.7487, -0.2728, -2.2031,
         -1.3766,  0.4676,  0.8603,  1.3927,  0.2470, -0.0105, -0.2147, -0.0326,
          0.0218,  0.2505, -0.0287, -0.0613, -0.0755, -0.1836,  0.0063,  0.3867,
         -0.0745,  0.0494,  0.0804, -0.0244, -0.0138, -0.0145,  0.2697,  0.3140,
          0.3699, -0.2332,  0.0395,  0.2025, -0.0117, -0.0687,  0.0688, -0.0721,
         -0.0738, -0.0039]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.0663))
tensor([[ 4.2293e-01, -5.6103e-01,  2.2127e+00, -3.7547e-01,  1.0313e-01,
         -2.6193e-01,  4.2073e-02, -1.2677e+00,  5.3171e-01, -1.4160e-01,
          1.2788e-01, -2.2999e+00, -2.1084e-01,  2.0388e-01, -2.3721e-02,
          6.6297e-02, -1.2679e-01,  5.3022e-04, -2.1280e-01,  2.6030e-02,
          3.7904e-02, -1.4529e-01, -2.8249e-01,  7.9461e-02,  2.6248e-01,
          3.4538e-02, -1.9310e-02, -3.3484e-02, -5.0104e-01,  1.6109e-01,
         -2.0254e-01,  2.6569e-01,  2.0932e-01,  1.2758e-01, -3.0091e-02,
          1.0202e-02,  3.1234e-01,  2.8576e-02,  1.7742e-01, -2.2935e-02,
          2.7251e-01,  2.9967e-03]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.1010))
tensor([[-5.8950e-01,  1.4298e+00,  2.5979e-02,  2.2236e-01,  1.4071e+00,
         -1.3338e-01,  4.5005e-01,  1.5422e+00,  4.8651e-01,  2.3255e-01,
         -6.3831e-02,  2.1537e+00, -8.3569e-02, -3.8776e-01, -1.8122e-01,
          7.9558e-02, -2.2205e-02,  5.6364e-02, -1.0992e-01, -4.3398e-02,
         -3.1507e-01, -1.6993e-01, -1.1550e-01, -1.8606e-01,  5.9584e-02,
          2.1079e-01,  1.6506e-01, -6.3195e-02,  1.4458e-02, -1.8880e-03,
          2.7592e-01, -3.3869e-01,  2.1643e-01,  1.3983e-01, -7.8724e-02,
          3.3401e-01, -2.2184e-02,  2.3823e-02,  2.0575e-01, -2.0651e-01,
          2.5097e-02,  2.2905e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.1028))
tensor([[ 2.4821e+00, -2.2741e+00,  4.7427e-01, -6.6036e-01, -6.5367e-01,
          2.7630e+00, -1.2895e+00,  1.1210e+00, -3.8896e-01,  1.3543e+00,
         -2.1339e-01,  6.6912e-01,  5.4167e-01,  9.5325e-03, -1.0015e-02,
          9.5855e-02, -1.1342e-01,  2.1780e-01,  8.6193e-02, -4.4865e-01,
         -3.6210e-01, -1.0352e-01, -1.6373e-02,  4.8604e-01, -5.0184e-02,
         -1.1057e-01, -1.0994e-01, -3.0401e-02,  1.3461e-03, -6.4150e-02,
          6.3424e-02, -4.0559e-03,  1.5112e-02, -4.7021e-01, -1.9360e-01,
          4.5006e-01, -1.3602e-01, -4.6826e-02,  2.3412e-01, -1.4355e-01,
         -1.7091e-01,  6.5638e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.1258))
tensor([[ 1.5474, -0.1419,  0.6382, -0.5495, -1.2945,  0.5139,  0.5475,  1.2615,
         -1.8628, -0.5218,  0.5045, -0.3923,  0.4003,  0.0257, -0.0147,  0.0782,
          0.1166,  0.1815,  0.0944,  0.4235, -0.1112, -0.1202,  0.2902,  0.1888,
          0.0164, -0.0057,  0.0238, -0.1027, -0.0278, -0.0787, -0.0078, -0.1412,
          0.1005, -0.1725,  0.0258,  0.0334, -0.1143,  0.1258,  0.2140,  0.0388,
         -0.1491,  0.1456]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.1547))
tensor([[-0.5540,  0.7293,  1.4517,  0.5671,  1.2570,  3.0091, -0.2423,  0.2205,
         -0.1567,  1.4597, -0.4676, -0.1436,  0.1585, -0.0394, -0.0574, -0.1879,
          0.2195,  0.0619, -0.0681,  0.0038,  0.0152,  0.0701,  0.2067,  0.5060,
         -0.2606, -0.3449,  0.0841, -0.1382, -0.4126,  0.3061, -0.0566,  0.0278,
          0.0160, -0.4874,  0.2083, -0.4326, -0.1985,  0.0458,  0.2800, -0.0037,
         -0.2664,  0.3081]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.2328))
tensor([[-1.0005e-01, -1.3257e+00,  7.2416e-01, -5.3329e-01, -6.2640e-01,
          1.2116e+00, -1.1621e+00,  8.0132e-03,  1.1212e+00, -1.0817e+00,
          7.3759e-01,  2.3462e-01, -3.8642e-02,  3.6252e-03,  9.9338e-02,
         -1.4292e-01, -9.1642e-03,  7.8401e-02,  1.7093e-01,  2.2462e-02,
          1.4328e-02, -3.2523e-01,  2.7419e-01,  1.8563e-01,  7.9667e-04,
         -2.6705e-02,  1.3721e-01, -1.3804e-01,  2.0938e-01,  1.3088e-01,
          2.7087e-01, -3.4685e-02, -2.0418e-02,  6.2147e-01, -4.4435e-01,
         -7.3976e-02, -1.6624e-02,  8.2546e-02, -1.9300e-02,  2.7751e-02,
         -2.2720e-02,  2.5458e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.2737))
tensor([[-0.5496,  0.9455,  0.7583,  1.0550,  1.0015,  1.0577, -1.1802,  0.0567,
          1.6156, -0.0098,  0.7661, -0.7498, -0.0511,  0.1710, -0.0727,  0.2363,
         -0.0141,  0.1144,  0.1666, -0.0127, -0.0335,  0.1338,  0.0359,  0.3737,
          0.0179, -0.1737,  0.0524, -0.0432,  0.2955,  0.3888, -0.0273,  0.0680,
          0.0523,  0.6134, -0.4162, -0.0972, -0.0095,  0.0913,  0.0335, -0.0132,
         -0.0465, -0.0130]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.3038))
tensor([[-0.4384, -1.0441,  1.6020,  1.2292,  0.5137, -1.2046,  0.7198, -0.5895,
          0.3086,  0.9081, -0.0335,  0.2596, -0.0613,  0.3159, -0.2345, -0.0413,
          0.2296,  0.0679,  0.0880,  0.0214,  0.0441,  0.4062, -0.1400,  0.0559,
          0.1833,  0.0277,  0.0663, -0.0951, -0.4012,  0.2479, -0.2000,  0.0411,
          0.0099,  0.3423,  0.1878, -0.1956,  0.0160,  0.0653, -0.2706, -0.0128,
          0.0823, -0.2406]], device='cuda:0')
3542.4400746822357
         2083578343 function calls (2080895435 primitive calls) in 3573.748 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   2837/1    0.064    0.000 3573.753 3573.753 {built-in method builtins.exec}
        1    0.001    0.001 3573.752 3573.752 test.py:1(<module>)
        1   61.543   61.543 3542.439 3542.439 para4band.py:230(train)
  1000000   49.819    0.000 1268.827    0.001 para4band.py:168(loss)
  1000000   10.368    0.000 1226.098    0.001 optimizer.py:265(wrapper)
  1000000    6.135    0.000 1189.521    0.001 optimizer.py:29(_use_grad)
  1000000    5.856    0.000 1179.936    0.001 adam.py:108(step)
  1000000   38.052    0.000 1037.784    0.001 adam.py:231(adam)
  1000000   13.885    0.000  966.152    0.001 adam.py:396(_multi_tensor_adam)
  1000000    3.470    0.000  809.307    0.001 _tensor.py:428(backward)
  1000000    4.426    0.000  805.543    0.001 __init__.py:106(backward)
  1000000  780.475    0.001  780.475    0.001 {method 'run_backward' of 'torch._C._EngineBase' objects}
2000000/1000000    5.972    0.000  691.153    0.001 module.py:1494(_call_impl)
  1000000    7.342    0.000  686.871    0.001 para4band.py:111(forward)
  1000021    1.913    0.000  396.544    0.000 para4tb.py:113(create_model_function)
  1000021  156.427    0.000  394.631    0.000 para4tb.py:87(__create_TB_function)
  2000378  268.004    0.000  268.004    0.000 {built-in method torch._foreach_add_}
  1000000   82.298    0.000  240.262    0.000 para4band.py:155(loss3)
  1000021    8.516    0.000  171.626    0.000 para4tb.py:92(<listcomp>)
  1007813   22.686    0.000  170.066    0.000 para4tb.py:101(matrix_function)
 43044720   14.851    0.000  163.285    0.000 container.py:629(<genexpr>)
  4007813  158.846    0.000  158.846    0.000 {built-in method torch.matmul}
  1000000   30.482    0.000  151.737    0.000 para4band.py:145(loss2)
  1000189  148.586    0.000  148.586    0.000 {built-in method torch._foreach_addcmul_}
 42043680   33.521    0.000  148.434    0.000 container.py:603(__getitem__)
  1000000   29.808    0.000  128.165    0.000 para4band.py:136(loss1)
  1000000   91.047    0.000  121.054    0.000 adam.py:66(_init_group)
  1000000    2.584    0.000  116.902    0.000 _contextlib.py:112(decorate_context)
  1000000   86.695    0.000  107.085    0.000 _foreach_utils.py:20(_group_tensors_by_device_and_dtype)
  2015626   11.969    0.000  100.587    0.000 functional.py:192(einsum)
  1000000    6.146    0.000  100.396    0.000 para4band.py:76(forward)
      295    0.011    0.000  100.015    0.339 __init__.py:1(<module>)
 84000378   54.219    0.000   90.791    0.000 optimizer.py:39(_get_value)
  2015626   84.842    0.000   84.842    0.000 {built-in method torch.einsum}
  2000001   74.685    0.000   74.685    0.000 {built-in method torch.sort}
  6798547   74.352    0.000   74.352    0.000 {built-in method torch.mean}
   799468   71.853    0.000   71.853    0.000 {built-in method torch.tensor}
  1000189   15.143    0.000   63.613    0.000 adam.py:489(<listcomp>)
 42044520   31.929    0.000   62.549    0.000 container.py:586(_get_abs_string_index)
  1000000   31.223    0.000   61.096    0.000 optimizer.py:435(zero_grad)
  3000000   58.123    0.000   58.123    0.000 {built-in method torch.abs}
  1000189   55.345    0.000   55.345    0.000 {built-in method torch._foreach_sqrt}
  1000189   55.046    0.000   55.046    0.000 {built-in method torch._foreach_add}
  1000189   12.674    0.000   54.995    0.000 adam.py:490(<listcomp>)
  3000000   54.976    0.000   54.976    0.000 {built-in method torch.topk}
 47155681   34.915    0.000   48.439    0.000 {built-in method builtins.getattr}
  1000189    8.550    0.000   45.886    0.000 adam.py:494(<listcomp>)
 42000189   25.542    0.000   37.336    0.000 optimizer.py:52(_dispatch_sqrt)
  3007835   36.208    0.000   36.215    0.000 {method 'type' of 'torch._C._TensorBase' objects}
188567981/188564880   26.408    0.000   35.954    0.000 {built-in method builtins.len}
 85039419   34.884    0.000   34.884    0.000 {method 'item' of 'torch._C._TensorBase' objects}
168000756   31.951    0.000   31.951    0.000 {built-in method torch.is_complex}
  3038204    8.681    0.000   31.563    0.000 {built-in method builtins.all}
  1001040   30.176    0.000   30.176    0.000 {built-in method torch.stack}
  1000189   29.508    0.000   29.508    0.000 {built-in method torch._foreach_div_}
   2671/5    0.013    0.000   29.190    5.838 <frozen importlib._bootstrap>:1167(_find_and_load)
   2637/5    0.010    0.000   29.190    5.838 <frozen importlib._bootstrap>:1122(_find_and_load_unlocked)
  2361/12    0.008    0.000   29.184    2.432 <frozen importlib._bootstrap>:666(_load_unlocked)
   2163/5    0.005    0.000   29.184    5.837 <frozen importlib._bootstrap_external>:934(exec_module)
  5725/13    0.003    0.000   29.143    2.242 <frozen importlib._bootstrap>:233(_call_with_frames_removed)
422101924   26.909    0.000   26.909    0.000 {method 'append' of 'list' objects}
  1074/92    0.002    0.000   26.515    0.288 {built-in method builtins.__import__}
  2000378   26.257    0.000   26.257    0.000 {built-in method torch._foreach_mul_}
  2000000    3.886    0.000   26.238    0.000 profiler.py:491(__enter__)
  2000000    1.543    0.000   22.351    0.000 _ops.py:497(__call__)
  1000189   22.024    0.000   22.024    0.000 {built-in method torch._foreach_addcdiv_}
     2163    0.014    0.000   21.680    0.010 <frozen importlib._bootstrap_external>:1007(get_code)
     2163    0.006    0.000   21.325    0.010 <frozen importlib._bootstrap_external>:1127(get_data)
  2000000   20.808    0.000   20.808    0.000 {built-in method torch._ops.profiler._record_function_enter_new}
  2000000    8.591    0.000   20.586    0.000 profiler.py:495(__exit__)
 2430/662    0.005    0.000   20.432    0.031 <frozen importlib._bootstrap>:1209(_handle_fromlist)
  1000023   19.788    0.000   19.788    0.000 {built-in method torch.zeros}
  1000000    4.018    0.000   18.902    0.000 __init__.py:50(_make_grads)
2239/2169   18.665    0.008   18.804    0.009 {method 'read' of '_io.BufferedReader' objects}
 48053392   18.589    0.000   18.597    0.000 module.py:1601(__getattr__)
  1000001   18.397    0.000   18.397    0.000 {built-in method torch.diag_embed}
137232943/136213016   15.768    0.000   17.782    0.000 {built-in method builtins.isinstance}
  1000000    1.957    0.000   17.734    0.000 optimizer.py:64(_default_to_fused_or_foreach)
  1000000   16.984    0.000   16.984    0.000 {method 'repeat' of 'torch._C._TensorBase' objects}
  1000189    8.447    0.000   16.783    0.000 adam.py:433(<listcomp>)
  1000189    7.149    0.000   15.152    0.000 adam.py:436(<listcomp>)
  1000000    1.965    0.000   14.947    0.000 optimizer.py:228(_cuda_graph_capture_health_check)
  1000189    7.089    0.000   14.912    0.000 adam.py:434(<listcomp>)
  1000189    7.036    0.000   14.826    0.000 adam.py:435(<listcomp>)
  1000000   14.056    0.000   14.056    0.000 {built-in method torch.ones_like}
 42004489    8.799    0.000   12.981    0.000 _tensor.py:942(__hash__)
   798547    6.449    0.000   12.429    0.000 functional.py:1387(norm)
 43000189    9.296    0.000   11.797    0.000 adam.py:268(<genexpr>)
  2000000    1.539    0.000   11.321    0.000 _ops.py:286(__call__)
 43000189   11.072    0.000   11.072    0.000 optimizer.py:72(<genexpr>)
  1000002    1.633    0.000   10.669    0.000 __init__.py:94(is_available)
  2000000   10.470    0.000   10.470    0.000 {method 'view' of 'torch._C._TensorBase' objects}
  2000000    9.910    0.000    9.910    0.000 {built-in method torch.diagonal}
  2000000    9.783    0.000    9.783    0.000 {built-in method torch._ops.profiler.}
 85090939    9.545    0.000    9.545    0.000 container.py:625(__len__)
133007680    9.490    0.000    9.490    0.000 _jit_internal.py:1102(is_scripting)
  1025201    5.089    0.000    8.931    0.000 module.py:1617(__setattr__)
  2000001    8.905    0.000    8.905    0.000 {method 'transpose' of 'torch._C._TensorBase' objects}
  1007813    8.174    0.000    8.174    0.000 {built-in method torch.exp}
  1000002    1.112    0.000    7.776    0.000 __init__.py:91(_nvml_based_avail)
  1000019    7.691    0.000    7.691    0.000 {built-in method torch.randn}
  2000000    4.569    0.000    6.848    0.000 profiler.py:482(__init__)
  1000024    0.752    0.000    6.663    0.000 <frozen os>:772(getenv)
        1    0.001    0.001    6.315    6.315 _meta_registrations.py:1(<module>)
        1    0.000    0.000    6.256    6.256 band_data_in.py:1(<module>)
        2    0.001    0.000    5.966    2.983 decompositions.py:1(<module>)
  1001245    1.604    0.000    5.912    0.000 <frozen _collections_abc>:771(get)
        1    0.000    0.000    5.742    5.742 fake_tensor.py:1(<module>)
        1    0.000    0.000    5.688    5.688 _guards.py:1(<module>)
   798547    5.599    0.000    5.599    0.000 {built-in method torch._C._linalg.linalg_vector_norm}
 85000567    5.357    0.000    5.357    0.000 _utils.py:786(is_compiling)
  4013828    3.693    0.000    5.172    0.000 grad_mode.py:149(__init__)
  1000000    4.877    0.000    4.877    0.000 {built-in method torch.flatten}
     7813    0.068    0.000    4.685    0.001 para4band.py:101(init_trans_matrix)
  1000356    2.842    0.000    4.308    0.000 <frozen os>:673(__getitem__)
        1    0.000    0.000    4.298    4.298 outputs.py:1(<module>)
  1000000    4.219    0.000    4.219    0.000 {built-in method torch.conj}
 42027643    4.184    0.000    4.184    0.000 {built-in method builtins.id}
  1000000    3.831    0.000    3.831    0.000 {method 'conj' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    3.778    3.778 dos.py:1(<module>)
2361/2230    0.004    0.000    3.750    0.002 <frozen importlib._bootstrap>:566(module_from_spec)
        5    0.000    0.000    3.726    0.745 functional.py:1(<module>)
        3    0.000    0.000    3.723    1.241 _support_alternative_backends.py:1(<module>)
  160/140    0.000    0.000    3.695    0.026 <frozen importlib._bootstrap_external>:1231(create_module)
  160/140    2.115    0.013    3.694    0.026 {built-in method _imp.create_dynamic}
 42000196    3.682    0.000    3.682    0.000 {built-in method math.sqrt}
        1    0.000    0.000    3.550    3.550 _signal_api.py:1(<module>)
  1001040    2.032    0.000    3.444    0.000 container.py:628(__iter__)
  1000189    3.435    0.000    3.435    0.000 adam.py:492(<listcomp>)
2498/2416    0.019    0.000    3.413    0.001 <frozen importlib._bootstrap>:1056(_find_spec)
 42050873    3.240    0.000    3.240    0.000 {built-in method _operator.index}
  1000000    2.600    0.000    3.227    0.000 _foreach_utils.py:24(<listcomp>)
     2491    0.002    0.000    2.799    0.001 <frozen importlib._bootstrap_external>:1496(find_spec)
2504/2491    0.007    0.000    2.797    0.001 <frozen importlib._bootstrap_external>:1464(_get_spec)
  1000000    0.938    0.000    2.781    0.000 _contextlib.py:141(clone)
     3709    0.028    0.000    2.776    0.001 <frozen importlib._bootstrap_external>:1604(find_spec)
  2006075    2.707    0.000    2.707    0.000 {built-in method torch._C._get_tracing_state}
    10622    0.004    0.000    2.705    0.000 <frozen importlib._bootstrap_external>:140(_path_stat)
    10795    2.703    0.000    2.703    0.000 {built-in method posix.stat}
     2163    2.688    0.001    2.688    0.001 {built-in method io.open_code}
     4458    0.003    0.000    2.669    0.001 <frozen importlib._bootstrap_external>:150(_path_is_mode_type)
     4007    0.002    0.000    2.669    0.001 <frozen importlib._bootstrap_external>:159(_path_isfile)
        1    0.000    0.000    2.537    2.537 band.py:1(<module>)
  1006914    1.258    0.000    2.527    0.000 grad_mode.py:53(__enter__)
     7813    2.480    0.000    2.480    0.000 {built-in method torch._C._linalg.linalg_eigh}
  1019585    1.795    0.000    2.260    0.000 parameter.py:8(__instancecheck__)
        1    0.000    0.000    2.204    2.204 tight_binding_hamiltonian.py:1(<module>)
        1    0.000    0.000    2.183    2.183 para4band.py:123(__init__)
        1    0.000    0.000    2.183    2.183 para4band.py:83(__init__)
        1    0.000    0.000    2.183    2.183 para4tb.py:13(__init__)
  1000000    0.437    0.000    2.109    0.000 graphs.py:19(is_current_stream_capturing)
2003902/2003650    2.022    0.000    2.070    0.000 typing.py:357(inner)
        1    0.000    0.000    2.061    2.061 Orbit_spd_manager.py:1(<module>)
        1    0.000    0.000    2.049    2.049 Orbit_spd_with_spin.py:1(<module>)
        1    0.000    0.000    2.035    2.035 Orbit_spd_without_spin.py:1(<module>)
        1    0.000    0.000    2.033    2.033 Orbit_spd.py:1(<module>)
  1006914    0.888    0.000    1.953    0.000 grad_mode.py:57(__exit__)
     9957    0.513    0.000    1.915    0.000 {method 'to' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    1.908    1.908 inputs.py:1(<module>)
       20    0.000    0.000    1.903    0.095 module.py:1039(to)
       20    0.003    0.000    1.902    0.095 module.py:795(_apply)
      840    0.001    0.000    1.895    0.002 module.py:1139(convert)
  1006924    1.758    0.000    1.853    0.000 grad_mode.py:48(__init__)
  160/128    0.000    0.000    1.852    0.014 <frozen importlib._bootstrap_external>:1239(exec_module)
  160/128    0.013    0.000    1.852    0.014 {built-in method _imp.exec_dynamic}
  1000189    1.198    0.000    1.850    0.000 _foreach_utils.py:27(<lambda>)
     1063    0.013    0.000    1.810    0.002 {built-in method builtins.print}
     3037    0.008    0.000    1.797    0.001 _tensor.py:420(__repr__)
     3037    0.029    0.000    1.789    0.001 _tensor_str.py:633(_str)
  2015638    1.228    0.000    1.765    0.000 _VF.py:26(__getattr__)
     3037    0.084    0.000    1.706    0.001 _tensor_str.py:366(_str_intern)
        1    0.000    0.000    1.700    1.700 _spline_filters.py:1(<module>)
        1    0.000    0.000    1.679    1.679 _signaltools.py:1(<module>)
  1000000    1.672    0.000    1.672    0.000 {built-in method torch._C._cuda_isCurrentStreamCapturing}
        1    0.000    0.000    1.652    1.652 _ltisys.py:1(<module>)
     3037    0.025    0.000    1.573    0.001 _tensor_str.py:287(_tensor_str)
  1195501    1.141    0.000    1.537    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    1.478    1.478 _peak_finding.py:1(<module>)
  1000364    0.927    0.000    1.466    0.000 <frozen os>:755(encode)
        1    0.000    0.000    1.418    1.418 _interpolate.py:1(<module>)
        1    0.000    0.000    1.410    1.410 pyplot.py:1(<module>)
      4/1    0.000    0.000    1.402    1.402 __init__.py:219(_lazy_init)
     3037    0.355    0.000    1.379    0.000 _tensor_str.py:100(__init__)
        1    1.372    1.372    1.372    1.372 {built-in method torch._C._cuda_init}
        1    0.000    0.000    1.358    1.358 _fitpack_py.py:1(<module>)
  6020742    1.334    0.000    1.334    0.000 {built-in method torch.is_grad_enabled}
        1    0.000    0.000    1.317    1.317 _bsplines.py:1(<module>)
    46/41    0.000    0.000    1.306    0.032 __init__.py:108(import_module)
    47/41    0.000    0.000    1.306    0.032 <frozen importlib._bootstrap>:1194(_gcd_import)
       10    0.000    0.000    1.245    0.125 linear.py:1(<module>)
2052435/2052094    0.577    0.000    1.150    0.000 {built-in method builtins.hasattr}
5017/4863    0.073    0.000    1.035    0.000 {built-in method builtins.__build_class__}
        1    0.000    0.000    1.030    1.030 _jit_internal.py:1(<module>)
        1    0.000    0.000    1.013    1.013 polyfuncs.py:1(<module>)
        1    0.000    0.000    1.011    1.011 specialpolys.py:1(<module>)
        1    0.000    0.000    0.979    0.979 eager_transforms.py:1(<module>)
  4122010    0.865    0.000    0.865    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.862    0.862 _stats_py.py:1(<module>)
  1000003    0.581    0.000    0.860    0.000 __init__.py:87(_is_compiled)
        1    0.000    0.000    0.849    0.849 rings.py:1(<module>)
  4013828    0.757    0.000    0.757    0.000 {built-in method torch._C._set_grad_enabled}
        1    0.000    0.000    0.725    0.725 partfrac.py:1(<module>)
        1    0.000    0.000    0.724    0.724 decorator.py:65(xthreaded)
        1    0.000    0.000    0.724    0.724 decorator.py:16(threaded_factory)
        6    0.000    0.000    0.705    0.117 __init__.py:274(load)
        1    0.000    0.000    0.694    0.694 distributions.py:1(<module>)
        5    0.000    0.000    0.694    0.139 serialization.py:28(loadfn)
        1    0.000    0.000    0.685    0.685 proxy_tensor.py:1(<module>)
        1    0.000    0.000    0.682    0.682 _kdtree.py:1(<module>)
  1000189    0.555    0.000    0.679    0.000 optimizer.py:46(_stack_if_compiling)
        3    0.000    0.000    0.677    0.226 __config__.py:1(<module>)
        2    0.000    0.000    0.673    0.337 python.py:1(<module>)
       19    0.001    0.000    0.659    0.035 utils.py:1(<module>)
2500/2416    0.002    0.000    0.657    0.000 __init__.py:101(find_spec)
      2/1    0.000    0.000    0.654    0.654 __init__.py:111(spec_for_distutils)
        1    0.000    0.000    0.649    0.649 polytools.py:1(<module>)
        1    0.000    0.000    0.606    0.606 pycode.py:1(<module>)
        1    0.000    0.000    0.604    0.604 codeprinter.py:1(<module>)
        1    0.000    0.000    0.603    0.603 expr.py:1(<module>)
  2015626    0.596    0.000    0.596    0.000 {built-in method torch._C._has_torch_function}
        2    0.000    0.000    0.591    0.296 constructor.py:1(<module>)
  4016489    0.591    0.000    0.591    0.000 {method 'values' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.588    0.588 inputs.py:1947(PotcarSingle)
  1000189    0.585    0.000    0.585    0.000 _foreach_utils.py:27(<listcomp>)
        1    0.000    0.000    0.580    0.580 colorbar.py:1(<module>)
        1    0.000    0.000    0.575    0.575 distributed_c10d.py:1(<module>)
        1    0.000    0.000    0.569    0.569 figure.py:1(<module>)
  1000000    0.552    0.000    0.552    0.000 {built-in method torch._C._are_functorch_transforms_active}
        1    0.000    0.000    0.547    0.547 ctx_fp.py:1(<module>)
        5    0.000    0.000    0.530    0.106 errors.py:1(<module>)
  1846400    0.525    0.000    0.525    0.000 {built-in method torch._C._has_torch_function_unary}
       31    0.000    0.000    0.514    0.017 __init__.py:129(__getattr__)
        1    0.000    0.000    0.496    0.496 ctx_base.py:1(<module>)
        1    0.004    0.004    0.489    0.489 {built-in method torch._C._initExtension}
        7    0.005    0.001    0.488    0.070 __init__.py:299(loads)
        5    0.000    0.000    0.480    0.096 json.py:885(decode)
  1000000    0.476    0.000    0.476    0.000 __init__.py:98(_tensor_or_tensors_to_tuple)
        1    0.000    0.000    0.471    0.471 _diagnostic.py:1(<module>)
        2    0.000    0.000    0.466    0.233 quantize.py:1(<module>)
  2000000    0.462    0.000    0.462    0.000 {method '__exit__' of 'torch._C.DisableTorchFunctionSubclass' objects}
        1    0.000    0.000    0.461    0.461 _subplots.py:1(<module>)
        1    0.000    0.000    0.461    0.461 json.py:1(<module>)
        1    0.000    0.000    0.455    0.455 hub.py:1(<module>)
  1000499    0.432    0.000    0.432    0.000 {method 'encode' of 'str' objects}
        1    0.000    0.000    0.423    0.423 _infra.py:1(<module>)
        1    0.000    0.000    0.422    0.422 _geometric_slerp.py:1(<module>)
        1    0.000    0.000    0.419    0.419 _axes.py:1(<module>)
  1012148    0.414    0.000    0.414    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.412    0.412 formatter.py:1(<module>)
  1000002    0.401    0.000    0.401    0.000 {built-in method torch._C._cuda_getDeviceCount}
        1    0.000    0.000    0.399    0.399 cyaml.py:1(<module>)
    44816    0.052    0.000    0.396    0.000 _tensor.py:868(__format__)
        2    0.000    0.000    0.387    0.193 distance.py:1(<module>)
        1    0.000    0.000    0.384    0.384 immutable.py:1(<module>)
 571498/5    0.172    0.000    0.383    0.077 json.py:728(process_decoded)
26830/756    0.063    0.000    0.382    0.001 json.py:876(<dictcomp>)
        1    0.000    0.000    0.381    0.381 contour.py:1(<module>)
        4    0.000    0.000    0.379    0.095 _base.py:1(<module>)
        1    0.000    0.000    0.378    0.378 symbolic_opset11.py:1(<module>)
        1    0.000    0.000    0.373    0.373 mock.py:1(<module>)
        1    0.000    0.000    0.372    0.372 _distn_infrastructure.py:1(<module>)
        2    0.000    0.000    0.360    0.180 structure.py:1(<module>)
        1    0.000    0.000    0.355    0.355 _optimize.py:1(<module>)
23121/12951    0.076    0.000    0.351    0.000 json.py:881(<listcomp>)
        2    0.000    0.000    0.331    0.166 function.py:1(<module>)
        2    0.000    0.000    0.329    0.165 dist.py:1(<module>)
       12    0.001    0.000    0.326    0.027 core.py:1(<module>)
        1    0.000    0.000    0.304    0.304 base_events.py:1(<module>)
     2163    0.006    0.000    0.295    0.000 <frozen importlib._bootstrap_external>:727(_compile_bytecode)
        1    0.000    0.000    0.292    0.292 _minimize.py:1(<module>)
        1    0.000    0.000    0.289    0.289 _script.py:1(<module>)
     2163    0.286    0.000    0.286    0.000 {built-in method marshal.loads}
        1    0.000    0.000    0.282    0.282 para4tb.py:32(load_and_check_matrix)
        3    0.000    0.000    0.272    0.091 numbers.py:1(<module>)
     7813    0.036    0.000    0.270    0.000 para4band.py:73(__init__)
        1    0.000    0.000    0.268    0.268 _sputils.py:1(<module>)
  2000000    0.260    0.000    0.260    0.000 __init__.py:89(annotate)
        2    0.000    0.000    0.257    0.129 dense.py:1(<module>)
1008193/1008188    0.257    0.000    0.257    0.000 {built-in method builtins.iter}
        2    0.000    0.000    0.257    0.128 _util.py:1(<module>)
        1    0.000    0.000    0.247    0.247 override.py:1(<module>)
        1    0.000    0.000    0.247    0.247 __init__.py:80(do_override)
        1    0.000    0.000    0.247    0.247 __init__.py:63(ensure_local_distutils)
        1    0.000    0.000    0.247    0.247 rcsetup.py:1(<module>)
        1    0.000    0.000    0.244    0.244 autograd_function.py:1(<module>)
        1    0.000    0.000    0.243    0.243 _array_api.py:1(<module>)
        1    0.000    0.000    0.242    0.242 sympify.py:1(<module>)
        1    0.000    0.000    0.239    0.239 _linprog.py:1(<module>)
     1000    0.018    0.000    0.239    0.000 para4band.py:321(<listcomp>)
        1    0.000    0.000    0.238    0.238 sparse_adam.py:1(<module>)
        6    0.000    0.000    0.237    0.039 rnn.py:1(<module>)
       10    0.065    0.006    0.229    0.023 {method 'read' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    0.229    0.229 mul.py:1(<module>)
        1    0.000    0.000    0.229    0.229 _functional.py:1(<module>)
        1    0.000    0.000    0.228    0.228 _recursive.py:1(<module>)
        2    0.000    0.000    0.226    0.113 parser.py:1(<module>)
        1    0.000    0.000    0.225    0.225 request.py:1(<module>)
        1    0.000    0.000    0.222    0.222 wannier90.py:1(<module>)
        1    0.000    0.000    0.222    0.222 matrixbase.py:1(<module>)
        1    0.017    0.017    0.221    0.221 {built-in method _pickle.load}
        1    0.000    0.000    0.218    0.218 client.py:1(<module>)
        1    0.000    0.000    0.217    0.217 slice.py:1(<module>)
        1    0.000    0.000    0.216    0.216 _misc.py:1(<module>)
        2    0.000    0.000    0.215    0.108 text.py:1(<module>)
  1019585    0.213    0.000    0.213    0.000 {function _ParameterMeta.__instancecheck__ at 0x14ca873d7920}
        1    0.000    0.000    0.211    0.211 const_fold.py:1(<module>)
        1    0.000    0.000    0.208    0.208 matexpr.py:1(<module>)
        1    0.000    0.000    0.206    0.206 find_first_use_of_broken_modules.py:1(<module>)
        1    0.000    0.000    0.206    0.206 package_exporter.py:1(<module>)
 2056/183    0.001    0.000    0.205    0.001 cache.py:69(wrapper)
    28/25    0.000    0.000    0.204    0.008 operations.py:62(__new__)
        1    0.000    0.000    0.202    0.202 algebraicfield.py:1(<module>)
        5    0.000    0.000    0.201    0.040 add.py:197(flatten)
      245    0.000    0.000    0.194    0.001 _docscrape.py:579(__init__)
        3    0.000    0.000    0.191    0.064 serialization.py:1(<module>)
        1    0.000    0.000    0.189    0.189 index_tricks.py:1(<module>)
        1    0.000    0.000    0.189    0.189 _multicomp.py:1(<module>)
        1    0.000    0.000    0.186    0.186 tensor.py:1(<module>)
  1001188    0.183    0.000    0.183    0.000 {method 'values' of 'dict' objects}
        4    0.000    0.000    0.182    0.046 eigen.py:1(<module>)
        1    0.000    0.000    0.182    0.182 _windows.py:1(<module>)
        1    0.000    0.000    0.182    0.182 numerictypes.py:1(<module>)
        1    0.000    0.000    0.180    0.180 _continuous_distns.py:1(<module>)
        1    0.000    0.000    0.180    0.180 polyclasses.py:1(<module>)
      251    0.001    0.000    0.173    0.001 _docscrape.py:140(__init__)
        1    0.000    0.000    0.170    0.170 textpath.py:1(<module>)
        1    0.000    0.000    0.170    0.170 _qmc.py:1(<module>)
        2    0.000    0.000    0.170    0.085 _ops.py:1(<module>)
      110    0.000    0.000    0.169    0.002 linecache.py:36(getlines)
       51    0.000    0.000    0.169    0.003 linecache.py:80(updatecache)
       14    0.000    0.000    0.167    0.012 tokenize.py:392(open)
        1    0.000    0.000    0.166    0.166 mathtext.py:1(<module>)
4056/3037    0.010    0.000    0.165    0.000 _tensor_str.py:250(_tensor_str_with_formatter)
        1    0.000    0.000    0.165    0.165 fontconfig_pattern.py:1(<module>)
       30    0.000    0.000    0.165    0.005 tokenize.py:299(detect_encoding)
        2    0.000    0.000    0.164    0.082 _compression.py:113(readall)
       36    0.000    0.000    0.164    0.005 tokenize.py:323(read_or_stop)
       20    0.164    0.008    0.164    0.008 {method 'readline' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.163    0.163 bz2.py:157(read)
        2    0.000    0.000    0.162    0.081 callable.py:1(<module>)
        1    0.000    0.000    0.161    0.161 memory.py:1(<module>)
        9    0.000    0.000    0.161    0.018 _compression.py:72(read)
        2    0.000    0.000    0.160    0.080 quantization_mappings.py:1(<module>)
        4    0.000    0.000    0.157    0.039 basic.py:1(<module>)
        1    0.000    0.000    0.156    0.156 Image.py:1(<module>)
        1    0.000    0.000    0.153    0.153 _type_aliases.py:1(<module>)
        2    0.000    0.000    0.152    0.076 utilities.py:1(<module>)
        1    0.000    0.000    0.152    0.152 _memory_viz.py:1(<module>)
        1    0.000    0.000    0.150    0.150 multiarray.py:1(<module>)
        1    0.000    0.000    0.149    0.149 products.py:1(<module>)
     3037    0.147    0.000    0.147    0.000 {built-in method torch.masked_select}
        2    0.000    0.000    0.145    0.073 overrides.py:1(<module>)
        1    0.000    0.000    0.142    0.142 feedparser.py:1(<module>)
        1    0.000    0.000    0.139    0.139 band.py:29(get_data)
        1    0.000    0.000    0.139    0.139 maggroups.py:1(<module>)
        1    0.000    0.000    0.139    0.139 band_data_in.py:13(__init__)
        1    0.000    0.000    0.139    0.139 band_data_in.py:29(__module_choose)
        1    0.001    0.001    0.139    0.139 band_data_in.py:36(__get_dat_content)
        1    0.000    0.000    0.139    0.139 evalf.py:1(<module>)
        1    0.000    0.000    0.138    0.138 matmul.py:1(<module>)
  1000000    0.136    0.000    0.136    0.000 optimizer.py:249(_optimizer_step_code)
       39    0.136    0.003    0.136    0.003 {method 'decompress' of '_bz2.BZ2Decompressor' objects}
        1    0.013    0.013    0.136    0.136 band_data_in.py:71(get_band)
        1    0.000    0.000    0.134    0.134 summations.py:1(<module>)
        3    0.000    0.000    0.134    0.045 solvers.py:1(<module>)
     1019    0.007    0.000    0.134    0.000 _tensor_str.py:276(<listcomp>)
      251    0.004    0.000    0.133    0.001 _docscrape.py:388(_parse)
     3037    0.130    0.000    0.130    0.000 {built-in method torch.isfinite}
        2    0.000    0.000    0.129    0.065 fake_quantize.py:1(<module>)
        3    0.000    0.000    0.129    0.043 linalg.py:1(<module>)
        1    0.000    0.000    0.128    0.128 defmatrix.py:1(<module>)
        1    0.000    0.000    0.128    0.128 _ndimage_api.py:1(<module>)
     1019    0.009    0.000    0.124    0.000 _tensor_str.py:208(_vector_str)
        1    0.000    0.000    0.124    0.124 symbolic_caffe2.py:1(<module>)
        1    0.000    0.000    0.122    0.122 _conversion.py:1(<module>)
        1    0.000    0.000    0.117    0.117 Periodicity_System.py:1(<module>)
        2    0.000    0.000    0.117    0.058 observer.py:1(<module>)
        3    0.000    0.000    0.114    0.038 reductions.py:1(<module>)
        1    0.000    0.000    0.114    0.114 simplify.py:1(<module>)
        1    0.000    0.000    0.112    0.112 _root.py:1(<module>)
        1    0.000    0.000    0.112    0.112 pyfunctorch.py:1(<module>)
        3    0.000    0.000    0.111    0.037 _basic.py:1(<module>)
        1    0.000    0.000    0.111    0.111 datapipe.py:1(<module>)
        1    0.000    0.000    0.110    0.110 bandstructure.py:1(<module>)
        6    0.000    0.000    0.109    0.018 conv.py:1(<module>)
       84    0.000    0.000    0.109    0.001 linecache.py:26(getline)
    30998    0.106    0.000    0.106    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.105    0.105 image.py:1(<module>)
        1    0.000    0.000    0.105    0.105 frontend.py:1(<module>)
        3    0.000    0.000    0.105    0.035 profiler.py:1(<module>)
        1    0.000    0.000    0.104    0.104 _csr.py:1(<module>)
        1    0.000    0.000    0.104    0.104 forward_ad.py:1(<module>)
       16    0.000    0.000    0.103    0.006 traceback.py:220(extract_stack)
       16    0.000    0.000    0.103    0.006 traceback.py:375(extract)
       16    0.000    0.000    0.103    0.006 traceback.py:397(_extract_from_extended_frame_gen)
        1    0.000    0.000    0.103    0.103 npyio.py:1(<module>)
      181    0.000    0.000    0.103    0.001 traceback.py:316(line)
        1    0.000    0.000    0.101    0.101 _tensor.py:1(<module>)
        1    0.000    0.000    0.101    0.101 minimize_trustregion_constr.py:1(<module>)
        6    0.000    0.000    0.100    0.017 linear_relu.py:1(<module>)
       10    0.098    0.010    0.098    0.010 {orjson.loads}
        1    0.000    0.000    0.098    0.098 minpoly.py:1(<module>)
        1    0.000    0.000    0.097    0.097 _policybase.py:1(<module>)
        2    0.000    0.000    0.096    0.048 domainmatrix.py:1(<module>)
        7    0.000    0.000    0.096    0.014 common.py:1(<module>)
        1    0.000    0.000    0.095    0.095 point.py:1(<module>)
        1    0.000    0.000    0.094    0.094 symbolic_helper.py:1(<module>)
     6407    0.005    0.000    0.091    0.000 __init__.py:272(_compile)
        1    0.000    0.000    0.091    0.091 power.py:1(<module>)
        1    0.000    0.000    0.091    0.091 gmpy.py:1(<module>)
        1    0.000    0.000    0.091    0.091 _utils_internal.py:1(<module>)
     7834    0.074    0.000    0.090    0.000 module.py:437(__init__)
     1019    0.010    0.000    0.090    0.000 _tensor_str.py:238(<listcomp>)
        1    0.000    0.000    0.088    0.088 _minpack_py.py:1(<module>)
     6075    0.011    0.000    0.087    0.000 _tensor.py:920(__iter__)
     2500    0.002    0.000    0.086    0.000 inspect.py:3270(signature)
        1    0.000    0.000    0.085    0.085 ivp.py:1(<module>)
3228/2522    0.014    0.000    0.085    0.000 inspect.py:2422(_signature_from_callable)
        1    0.000    0.000    0.085    0.085 tempfile.py:1(<module>)
     2500    0.002    0.000    0.084    0.000 inspect.py:3016(from_callable)
       97    0.001    0.000    0.083    0.001 _array_api.py:806(decorator)
        4    0.000    0.000    0.083    0.021 graph.py:1(<module>)
        2    0.000    0.000    0.083    0.041 distributed.py:1(<module>)
      295    0.001    0.000    0.083    0.000 _compiler.py:738(compile)
        2    0.000    0.000    0.080    0.040 __init__.py:181(_lazy_call)
        2    0.000    0.000    0.080    0.040 traceback.py:213(format_stack)
        1    0.000    0.000    0.080    0.080 net_min_base.py:1(<module>)
    42798    0.013    0.000    0.080    0.000 _tensor_str.py:219(_val_formatter)
        1    0.000    0.000    0.078    0.078 _kde.py:1(<module>)
    50611    0.078    0.000    0.078    0.000 {method 'detach' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.078    0.078 py3k.py:1(<module>)
        1    0.000    0.000    0.078    0.078 gumbel.py:1(<module>)
     8653    0.029    0.000    0.077    0.000 module.py:539(register_parameter)
       26    0.000    0.000    0.076    0.003 _jit_internal.py:847(_check_overload_body)
        1    0.000    0.000    0.076    0.076 analyzer.py:1(<module>)
       26    0.000    0.000    0.076    0.003 _sources.py:119(parse_def)
        1    0.000    0.000    0.076    0.076 composition.py:1(<module>)
        1    0.000    0.000    0.075    0.075 ode.py:1(<module>)
        1    0.000    0.000    0.075    0.075 _linprog_highs.py:1(<module>)
        1    0.000    0.000    0.075    0.075 cmd.py:1(<module>)
        1    0.000    0.000    0.075    0.075 lapack.py:1(<module>)
        1    0.000    0.000    0.075    0.075 blocking_input.py:1(<module>)
        1    0.000    0.000    0.074    0.074 trigonometric.py:1(<module>)
        1    0.000    0.000    0.074    0.074 _entry_points.py:1(<module>)
       26    0.000    0.000    0.074    0.003 _sources.py:11(get_source_lines_and_file)
       26    0.000    0.000    0.073    0.003 inspect.py:1243(getsourcelines)
        1    0.000    0.000    0.073    0.073 kl.py:1(<module>)
    44816    0.036    0.000    0.073    0.000 _tensor_str.py:176(format)
      110    0.002    0.000    0.073    0.001 _distn_infrastructure.py:1863(__init__)
        2    0.000    0.000    0.073    0.036 bsplines.py:1(<module>)
        1    0.000    0.000    0.072    0.072 collections.py:1(<module>)
        1    0.000    0.000    0.072    0.072 _morestats.py:1(<module>)
        4    0.000    0.000    0.072    0.018 random.py:1(<module>)
        1    0.000    0.000    0.071    0.071 _linprog_ip.py:1(<module>)
      531    0.000    0.000    0.071    0.000 __init__.py:225(compile)
        2    0.000    0.000    0.071    0.036 _matfuncs.py:1(<module>)
        1    0.000    0.000    0.071    0.071 periodic_table.py:1(<module>)
        1    0.000    0.000    0.070    0.070 __init__.py:155(_check_versions)
        1    0.000    0.000    0.069    0.069 _ode.py:1(<module>)
       28    0.044    0.002    0.069    0.002 __init__.py:785(_rc_params_in_file)
        1    0.000    0.000    0.068    0.068 computed_entries.py:1(<module>)
        1    0.000    0.000    0.068    0.068 split_utils.py:1(<module>)
        2    0.000    0.000    0.067    0.034 _parser.py:1(<module>)
        1    0.000    0.000    0.067    0.067 backend_bases.py:1(<module>)
     6075    0.067    0.000    0.067    0.000 {method 'unbind' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.067    0.067 sslproto.py:1(<module>)
        2    0.000    0.000    0.066    0.033 events.py:1(<module>)
      130    0.000    0.000    0.066    0.001 dataclasses.py:1210(wrap)
      130    0.005    0.000    0.065    0.001 dataclasses.py:885(_process_class)
        2    0.000    0.000    0.065    0.033 kind.py:1(<module>)
        1    0.000    0.000    0.065    0.065 hierarchy.py:1(<module>)
     3025    0.040    0.000    0.065    0.000 inspect.py:867(cleandoc)
      376    0.000    0.000    0.064    0.000 __init__.py:686(__getitem__)
      3/2    0.000    0.000    0.064    0.032 pyplot.py:216(switch_backend)
        1    0.000    0.000    0.064    0.064 polyhedron.py:1(<module>)
        1    0.000    0.000    0.064    0.064 cli.py:1(<module>)
        1    0.000    0.000    0.063    0.063 PngImagePlugin.py:1(<module>)
        1    0.000    0.000    0.063    0.063 spglib.py:1(<module>)
       11    0.000    0.000    0.063    0.006 artist.py:1613(kwdoc)
        1    0.000    0.000    0.062    0.062 _filters.py:1(<module>)
     1400    0.005    0.000    0.062    0.000 _docscrape.py:201(_read_to_next_section)
        1    0.000    0.000    0.062    0.062 shutil.py:1(<module>)
       26    0.000    0.000    0.062    0.002 inspect.py:1055(findsource)
     2667    0.003    0.000    0.061    0.000 <frozen importlib._bootstrap>:169(__enter__)
 1159/799    0.000    0.000    0.061    0.000 {built-in method builtins.sum}
        2    0.000    0.000    0.061    0.030 pyplot.py:276(backend_mod)
     1444    0.002    0.000    0.060    0.000 _docscrape.py:212(_read_sections)
      200    0.001    0.000    0.060    0.000 matrix_element.py:127(__add__)
       63    0.001    0.000    0.060    0.001 _axis_nan_policy.py:418(axis_nan_policy_decorator)
        1    0.000    0.000    0.060    0.060 homomorphisms.py:1(<module>)
        1    0.000    0.000    0.060    0.060 plot.py:1(<module>)
        1    0.000    0.000    0.059    0.059 _package_pickler.py:1(<module>)
        1    0.000    0.000    0.059    0.059 _compressed.py:1(<module>)
        1    0.000    0.000    0.058    0.058 _helper.py:1(<module>)
        1    0.000    0.000    0.057    0.057 finitefield.py:1(<module>)
        1    0.000    0.000    0.057    0.057 densebasic.py:1(<module>)
        1    0.000    0.000    0.057    0.057 ring_series.py:1(<module>)
     2632    0.002    0.000    0.056    0.000 inspect.py:848(getdoc)
        1    0.000    0.000    0.056    0.056 mg_operation.py:1(<module>)
        1    0.000    0.000    0.056    0.056 gradcheck.py:1(<module>)
        1    0.000    0.000    0.056    0.056 category.py:1(<module>)
        1    0.000    0.000    0.056    0.056 least_squares.py:1(<module>)
     1706    0.003    0.000    0.056    0.000 numeric.py:2170(allclose)
        1    0.000    0.000    0.056    0.056 _multivariate.py:1(<module>)
      130    0.000    0.000    0.055    0.000 dataclasses.py:1193(dataclass)
        1    0.000    0.000    0.055    0.055 ask.py:1(<module>)
        1    0.000    0.000    0.055    0.055 _rotation_groups.py:1(<module>)
        2    0.000    0.000    0.054    0.027 polynomial.py:1(<module>)
     2005    0.017    0.000    0.054    0.000 inspect.py:2327(_signature_from_function)
      295    0.001    0.000    0.054    0.000 _parser.py:970(parse)
      200    0.000    0.000    0.053    0.000 matrix_element.py:14(__init__)
        1    0.000    0.000    0.053    0.053 scimath.py:1(<module>)
        1    0.000    0.000    0.053    0.053 entity.py:1(<module>)
        1    0.000    0.000    0.052    0.052 groups.py:1(<module>)
        1    0.000    0.000    0.052    0.052 grad_mode.py:1(<module>)
      200    0.002    0.000    0.052    0.000 matrix_element.py:21(check_input)
     2361    0.009    0.000    0.052    0.000 <frozen importlib._bootstrap>:493(_init_module_attrs)
  877/295    0.003    0.000    0.052    0.000 _parser.py:447(_parse_sub)
        1    0.000    0.000    0.051    0.051 _mio.py:1(<module>)
        2    0.000    0.000    0.051    0.026 scanner.py:1(<module>)
        1    0.000    0.000    0.051    0.051 uarray.py:1(<module>)
        1    0.000    0.000    0.051    0.051 blas.py:1(<module>)
        1    0.000    0.000    0.051    0.051 composer.py:1(<module>)
13049/11832    0.012    0.000    0.050    0.000 {built-in method __new__ of type object at 0x864300}
        1    0.000    0.000    0.050    0.050 pickle.py:1(<module>)
 1297/316    0.019    0.000    0.050    0.000 _parser.py:507(_parse)
        1    0.000    0.000    0.050    0.050 _delegation.py:1(<module>)
     4862    0.049    0.000    0.050    0.000 <frozen importlib._bootstrap>:100(acquire)
        1    0.000    0.000    0.050    0.050 result.py:1(<module>)
        1    0.000    0.000    0.050    0.050 _highs_wrapper.py:1(<module>)
        1    0.000    0.000    0.050    0.050 header.py:1(<module>)
      462    0.001    0.000    0.050    0.000 basic.py:212(__init_subclass__)
       68    0.000    0.000    0.049    0.001 _util.py:1195(decorator)
      463    0.022    0.000    0.049    0.000 assumptions.py:614(_prepare_class_assumptions)
        1    0.000    0.000    0.049    0.049 iterables.py:1(<module>)
        1    0.000    0.000    0.048    0.048 ddm.py:1(<module>)
      449    0.001    0.000    0.048    0.000 __init__.py:80(decomposition_decorator)
        1    0.000    0.000    0.048    0.048 limits.py:1(<module>)
        1    0.000    0.000    0.048    0.048 _tool.py:1(<module>)
        2    0.000    0.000    0.047    0.024 context.py:1(<module>)
        6    0.000    0.000    0.047    0.008 _jit_internal.py:928(_overload_method)
        1    0.000    0.000    0.047    0.047 single.py:1(<module>)
     1706    0.007    0.000    0.047    0.000 numeric.py:2249(isclose)
       11    0.001    0.000    0.047    0.004 artist.py:1386(pprint_setters)
        1    0.000    0.000    0.046    0.046 integrals.py:1(<module>)
        1    0.000    0.000    0.046    0.046 data_parallel.py:1(<module>)
        1    0.000    0.000    0.046    0.046 rnn.py:340(RNN)
        1    0.000    0.000    0.045    0.045 _svds.py:1(<module>)
        1    0.000    0.000    0.044    0.044 dbapi2.py:1(<module>)
        1    0.000    0.000    0.044    0.044 _beartype.py:1(<module>)
        1    0.000    0.000    0.044    0.044 annotations.py:1(<module>)
        1    0.000    0.000    0.044    0.044 graph_module.py:1(<module>)
      521    0.005    0.000    0.044    0.000 _docscrape.py:224(_parse_param_list)
       87    0.000    0.000    0.044    0.001 dispatcher.py:178(add)
        1    0.000    0.000    0.044    0.044 chi2.py:1(<module>)
        1    0.000    0.000    0.044    0.044 singularity_functions.py:1(<module>)
       87    0.000    0.000    0.044    0.001 dispatcher.py:222(reorder)
        1    0.000    0.000    0.043    0.043 core.py:164(load_base_library)
        1    0.000    0.000    0.043    0.043 core.py:196(read_style_directory)
      463    0.009    0.000    0.043    0.000 doccer.py:29(docformat)
       19    0.001    0.000    0.043    0.002 para4tb.py:118(init_para)
       91    0.002    0.000    0.043    0.000 enum.py:466(__new__)
       26    0.000    0.000    0.042    0.002 __init__.py:859(rc_params_from_file)
     2700    0.007    0.000    0.042    0.000 textwrap.py:419(dedent)
      550    0.001    0.000    0.042    0.000 _pytree.py:194(tree_map)
        1    0.000    0.000    0.041    0.041 replicate.py:1(<module>)
        1    0.000    0.000    0.041    0.041 dataloader.py:1(<module>)
        1    0.000    0.000    0.041    0.041 numeric.py:1(<module>)
        1    0.000    0.000    0.040    0.040 _svdp.py:1(<module>)
        1    0.000    0.000    0.039    0.039 assumptions.py:1(<module>)
        1    0.000    0.000    0.039    0.039 uuid.py:1(<module>)
        1    0.000    0.000    0.039    0.039 type_check.py:1(<module>)
      131    0.001    0.000    0.039    0.000 _distn_infrastructure.py:830(_construct_doc)
        1    0.000    0.000    0.038    0.038 _linprog_util.py:1(<module>)
        1    0.000    0.000    0.037    0.037 _builtins.py:1(<module>)
        1    0.000    0.000    0.037    0.037 _discrete_distns.py:1(<module>)
      421    0.002    0.000    0.037    0.000 dataclasses.py:413(_create_fn)
     5425    0.016    0.000    0.037    0.000 _docscrape.py:67(read_to_condition)
        1    0.000    0.000    0.037    0.037 _code_flow.py:1(<module>)
        1    0.000    0.000    0.037    0.037 pretty.py:1(<module>)
     1002    0.007    0.000    0.036    0.000 enum.py:233(__set_name__)
     4326    0.013    0.000    0.036    0.000 <frozen importlib._bootstrap_external>:437(cache_from_source)
      550    0.000    0.000    0.036    0.000 _pytree.py:196(<listcomp>)
      592    0.003    0.000    0.036    0.000 __init__.py:31(_add_op_to_registry)
        1    0.000    0.000    0.036    0.036 _shgo.py:1(<module>)
        2    0.000    0.000    0.035    0.018 markers.py:1(<module>)
        2    0.000    0.000    0.035    0.018 subprocess.py:1(<module>)
        1    0.000    0.000    0.035    0.035 domain.py:1(<module>)
    21317    0.014    0.000    0.035    0.000 <frozen importlib._bootstrap_external>:126(_path_join)
      454    0.000    0.000    0.035    0.000 __init__.py:127(register)
        1    0.000    0.000    0.034    0.034 _thread_flow.py:1(<module>)
        1    0.000    0.000    0.034    0.034 _pickle.py:1(<module>)
     8653    0.011    0.000    0.034    0.000 parameter.py:30(__new__)
       68    0.033    0.000    0.033    0.000 {built-in method io.open}
        1    0.000    0.000    0.033    0.033 _thread_flow_location.py:1(<module>)
        2    0.000    0.000    0.033    0.017 __init__.py:12(__getattr__)
        1    0.000    0.000    0.033    0.033 artist.py:1(<module>)
        1    0.000    0.000    0.032    0.032 base_backend.py:1(<module>)
     3037    0.032    0.000    0.032    0.000 {method 'min' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.032    0.032 axes3d.py:1(<module>)
        1    0.000    0.000    0.032    0.032 bernoulli.py:1(<module>)
     3969    0.003    0.000    0.032    0.000 _docscrape.py:77(read_to_next_empty_line)
    10012    0.005    0.000    0.031    0.000 {built-in method builtins.next}
     1465    0.005    0.000    0.031    0.000 _ops.py:447(__getattr__)
        3    0.000    0.000    0.031    0.010 __init__.py:984(version)
        1    0.000    0.000    0.031    0.031 delta_functions.py:1(<module>)
        1    0.003    0.003    0.031    0.031 _meta_registrations.py:2649(activate_meta)
        1    0.000    0.000    0.031    0.031 graph_settings.py:1(<module>)
        1    0.000    0.000    0.031    0.031 lines.py:1(<module>)
        4    0.000    0.000    0.030    0.008 transforms.py:1(<module>)
        1    0.000    0.000    0.030    0.030 __init__.py:128(_check_capability)
        1    0.000    0.000    0.030    0.030 archive_util.py:1(<module>)
        1    0.000    0.000    0.030    0.030 legend.py:1(<module>)
     4220    0.014    0.000    0.030    0.000 _docscrape.py:168(_is_at_section)
        1    0.000    0.000    0.030    0.030 font_manager.py:1(<module>)
        2    0.000    0.000    0.030    0.015 exponential.py:1(<module>)
       20    0.000    0.000    0.030    0.001 _jit_internal.py:875(_overload)
        1    0.000    0.000    0.030    0.030 _spectral_py.py:1(<module>)
        1    0.000    0.000    0.029    0.029 _root_scalar.py:1(<module>)
        1    0.000    0.000    0.029    0.029 __init__.py:645(device_count)
        1    0.000    0.000    0.029    0.029 __init__.py:616(_device_count_nvml)
        1    0.023    0.023    0.029    0.029 __init__.py:539(_raw_device_count_nvml)
      398    0.003    0.000    0.029    0.000 _util.py:504(getfullargspec_no_self)
        2    0.000    0.000    0.029    0.014 batchnorm.py:1(<module>)
     1706    0.010    0.000    0.029    0.000 numeric.py:2330(within_tol)
     9111    0.008    0.000    0.029    0.000 _tensor_str.py:94(tensor_totype)
        1    0.000    0.000    0.029    0.029 blockmatrix.py:1(<module>)
        1    0.000    0.000    0.028    0.028 setupcfg.py:1(<module>)
        3    0.000    0.000    0.028    0.009 __init__.py:625(version)
        3    0.000    0.000    0.028    0.009 __init__.py:598(metadata)
        1    0.001    0.001    0.028    0.028 groups.py:293(SpaceGroup)
     4486    0.003    0.000    0.028    0.000 <frozen importlib._bootstrap>:392(cached)
        1    0.000    0.000    0.028    0.028 polyroots.py:1(<module>)
        1    0.000    0.000    0.028    0.028 _odepack_py.py:1(<module>)
     3037    0.028    0.000    0.028    0.000 {built-in method torch.ceil}
        1    0.000    0.000    0.028    0.028 tokens.py:1(<module>)
        1    0.000    0.000    0.028    0.028 cm.py:1(<module>)
        1    0.000    0.000    0.028    0.028 pc_groups.py:1(<module>)
        1    0.000    0.000    0.028    0.028 _external_properties.py:1(<module>)
        1    0.000    0.000    0.028    0.028 complexes.py:1(<module>)
        1    0.000    0.000    0.027    0.027 scatter_gather.py:1(<module>)
        1    0.000    0.000    0.027    0.027 logging.py:1(<module>)
        1    0.000    0.000    0.027    0.027 subsets.py:1(<module>)
      778    0.003    0.000    0.027    0.000 _ops.py:553(__getattr__)
        1    0.000    0.000    0.027    0.027 gridspec.py:1(<module>)
      295    0.001    0.000    0.027    0.000 _compiler.py:571(_code)
        1    0.000    0.000    0.027    0.027 _modified.py:1(<module>)
     3037    0.027    0.000    0.027    0.000 {method 'max' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.026    0.026 dispatcher.py:1(<module>)
        1    0.000    0.000    0.026    0.026 galoisgroups.py:1(<module>)
       10    0.000    0.000    0.026    0.003 version.py:1(<module>)
        1    0.000    0.000    0.026    0.026 trigsimp.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _distribution_infrastructure.py:1(<module>)
        5    0.000    0.000    0.026    0.005 pathlib.py:1053(read_text)
        4    0.000    0.000    0.026    0.006 __init__.py:926(read_text)
        1    0.000    0.000    0.026    0.026 secrets.py:1(<module>)
       26    0.000    0.000    0.026    0.001 _util.py:277(decorator)
        1    0.000    0.000    0.026    0.026 comm.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _zeros_py.py:1(<module>)
     2323    0.003    0.000    0.026    0.000 <frozen importlib._bootstrap_external>:567(_get_cached)
        1    0.000    0.000    0.025    0.025 _expm_multiply.py:1(<module>)
        1    0.000    0.000    0.025    0.025 conflict.py:1(<module>)
        1    0.000    0.000    0.025    0.025 formal.py:1(<module>)
        1    0.000    0.000    0.025    0.025 ImagePalette.py:1(<module>)
        1    0.000    0.000    0.025    0.025 monkey.py:1(<module>)
      120    0.001    0.000    0.025    0.000 periodic_table.py:77(__init__)
        1    0.000    0.000    0.025    0.025 _mstats_basic.py:1(<module>)
        1    0.000    0.000    0.025    0.025 fancy_getopt.py:1(<module>)
        5    0.000    0.000    0.025    0.005 polyhedron.py:34(__new__)
        1    0.000    0.000    0.025    0.025 trf.py:1(<module>)
        1    0.000    0.000    0.025    0.025 node.py:1(<module>)
     1111    0.004    0.000    0.025    0.000 typing.py:1336(__init__)
     4775    0.003    0.000    0.024    0.000 contextlib.py:132(__enter__)
       12    0.002    0.000    0.024    0.002 artist.py:1337(get_setters)
        1    0.000    0.000    0.024    0.024 error_functions.py:1(<module>)
        1    0.000    0.000    0.024    0.024 lsq_linear.py:1(<module>)
       43    0.000    0.000    0.024    0.001 dispatcher.py:147(_)
        1    0.000    0.000    0.024    0.024 nvfuser_prims.py:1(<module>)
     3037    0.024    0.000    0.024    0.000 {method 'ne' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.024    0.024 tags.py:1(<module>)
        1    0.000    0.000    0.024    0.024 staggered.py:1(<module>)
        1    0.000    0.000    0.024    0.024 _tool_component.py:1(<module>)
     1411    0.005    0.000    0.024    0.000 library.py:71(impl)
        1    0.000    0.000    0.024    0.024 _new_distributions.py:1(<module>)
        1    0.000    0.000    0.024    0.024 bdf.py:1(<module>)
        3    0.000    0.000    0.024    0.008 __init__.py:342(__init__)
      426    0.001    0.000    0.024    0.000 units.py:153(__init__)
        1    0.000    0.000    0.024    0.024 _funcs.py:1(<module>)
        1    0.000    0.000    0.024    0.024 axis.py:1(<module>)
    44816    0.024    0.000    0.024    0.000 {method '__format__' of 'float' objects}
        3    0.024    0.008    0.024    0.008 {built-in method _ctypes.dlopen}
        3    0.000    0.000    0.023    0.008 _distribution_infrastructure.py:1317(_combine_docs)
     3037    0.023    0.000    0.023    0.000 {method 'abs' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.023    0.023 io.py:1(<module>)
        1    0.000    0.000    0.023    0.023 ElementTree.py:1(<module>)
        1    0.000    0.000    0.023    0.023 _plotutils.py:1(<module>)
        1    0.000    0.000    0.023    0.023 symbol.py:1(<module>)
     8653    0.023    0.000    0.023    0.000 {built-in method _make_subclass}
        2    0.000    0.000    0.023    0.012 _backend.py:1(<module>)
       23    0.023    0.001    0.023    0.001 {method 'readlines' of '_io._IOBase' objects}
        1    0.000    0.000    0.023    0.023 dataframes.py:1(<module>)
      425    0.001    0.000    0.023    0.000 artist.py:1290(get_valid_values)
     2137    0.002    0.000    0.022    0.000 _docscrape.py:573(dedent_lines)
     2018    0.002    0.000    0.022    0.000 _tensor_str.py:195(_scalar_str)
        1    0.000    0.000    0.022    0.022 adadelta.py:1(<module>)
       87    0.000    0.000    0.022    0.000 conflict.py:24(ambiguities)
     6709    0.013    0.000    0.022    0.000 inspect.py:2676(__init__)
      778    0.022    0.000    0.022    0.000 {built-in method torch._C._jit_get_operation}
       87    0.005    0.000    0.022    0.000 conflict.py:27(<setcomp>)
     1747    0.001    0.000    0.022    0.000 artist.py:1356(is_alias)
        1    0.000    0.000    0.022    0.022 monkey.py:72(patch_all)
        1    0.000    0.000    0.022    0.022 monkey.py:93(_patch_distribution_metadata)
        2    0.000    0.000    0.022    0.011 traverse.py:1(<module>)
      426    0.012    0.000    0.022    0.000 units.py:163(check_mappings)
  583/432    0.000    0.000    0.022    0.000 typing.py:477(__getitem__)
       13    0.000    0.000    0.022    0.002 library.py:32(__init__)
        1    0.000    0.000    0.022    0.022 locks.py:1(<module>)
        2    0.000    0.000    0.022    0.011 main.py:1(<module>)
 9538/251    0.010    0.000    0.022    0.000 copy.py:128(deepcopy)
        1    0.000    0.000    0.021    0.021 _slsqp_py.py:1(<module>)
       87    0.001    0.000    0.021    0.000 conflict.py:56(ordering)
       35    0.000    0.000    0.021    0.001 core.py:59(_)
        1    0.000    0.000    0.021    0.021 _upfirdn.py:1(<module>)
 2251/295    0.009    0.000    0.021    0.000 _compiler.py:37(_compile)
  502/251    0.003    0.000    0.021    0.000 copy.py:227(_deepcopy_dict)
        1    0.000    0.000    0.021    0.021 _fitpack_impl.py:1(<module>)
        1    0.000    0.000    0.020    0.020 tz.py:1(<module>)
       21    0.000    0.000    0.020    0.001 para4tb.py:126(set_zero_and_init_matrix_fuction)
        1    0.000    0.000    0.020    0.020 equality_constrained_sqp.py:1(<module>)
      481    0.013    0.000    0.020    0.000 doccer.py:225(indentcount_lines)
        1    0.000    0.000    0.020    0.020 _normalization.py:1(<module>)
        2    0.000    0.000    0.020    0.010 modules.py:1(<module>)
        1    0.000    0.000    0.020    0.020 generate.py:1(<module>)
     3038    0.020    0.000    0.020    0.000 {method 'reshape' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.020    0.020 mod.py:1(<module>)
        1    0.000    0.000    0.020    0.020 pyprojecttoml.py:1(<module>)
      131    0.001    0.000    0.020    0.000 _distn_infrastructure.py:749(_construct_argparser)
      431    0.002    0.000    0.020    0.000 typing.py:652(Union)
        1    0.000    0.000    0.019    0.019 _rbfinterp.py:1(<module>)
        1    0.000    0.000    0.019    0.019 art3d.py:1(<module>)
        1    0.000    0.000    0.019    0.019 actions.py:1(<module>)
      130    0.001    0.000    0.019    0.000 dataclasses.py:530(_init_fn)
61582/61579    0.017    0.000    0.019    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.019    0.019 _apply_pyprojecttoml.py:1(<module>)
        1    0.000    0.000    0.019    0.019 backend_agg.py:1(<module>)
        2    0.000    0.000    0.019    0.009 bessel.py:1(<module>)
     1019    0.019    0.000    0.019    0.000 {method 'tolist' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.019    0.019 _tnc.py:1(<module>)
        1    0.000    0.000    0.018    0.018 module.py:1(<module>)
        1    0.000    0.000    0.018    0.018 parametrizations.py:1(<module>)
        1    0.000    0.000    0.018    0.018 bz2.py:1(<module>)
        1    0.000    0.000    0.018    0.018 sg_operation.py:1(<module>)
    51840    0.015    0.000    0.018    0.000 {built-in method builtins.max}
      121    0.001    0.000    0.018    0.000 __init__.py:259(_make_prim)
        1    0.000    0.000    0.018    0.018 __init__.py:159(_load_global_deps)
        1    0.000    0.000    0.018    0.018 _validation.py:1(<module>)
    21317    0.013    0.000    0.017    0.000 <frozen importlib._bootstrap_external>:128(<listcomp>)
        1    0.000    0.000    0.017    0.017 _remove_redundancy.py:1(<module>)
        1    0.000    0.000    0.017    0.017 graphs.py:1(<module>)
       12    0.000    0.000    0.017    0.001 artist.py:1242(__init__)
        1    0.000    0.000    0.017    0.017 _decomp_lu.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _lbfgsb_py.py:1(<module>)
     3037    0.012    0.000    0.017    0.000 _tensor_str.py:331(_add_suffixes)
        1    0.000    0.000    0.017    0.017 combsimp.py:1(<module>)
       12    0.001    0.000    0.017    0.001 artist.py:1262(get_aliases)
        1    0.000    0.000    0.017    0.017 _support_alternative_backends.py:294(<dictcomp>)
       23    0.000    0.000    0.017    0.001 _support_alternative_backends.py:46(wrapper)
        1    0.000    0.000    0.017    0.017 intersection.py:1(<module>)
        1    0.000    0.000    0.017    0.017 onnx_proto_utils.py:1(<module>)
        1    0.000    0.000    0.017    0.017 visualization.py:1(<module>)
       87    0.002    0.000    0.017    0.000 conflict.py:62(<listcomp>)
        1    0.000    0.000    0.017    0.017 _numdiff.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _measurements.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _tokenizer.py:1(<module>)
        1    0.000    0.000    0.017    0.017 libmpf.py:1(<module>)
        1    0.000    0.000    0.017    0.017 mstats.py:1(<module>)
        1    0.000    0.000    0.017    0.017 structures.py:1(<module>)
        5    0.000    0.000    0.017    0.003 polyhedron.py:388(<listcomp>)
        6    0.000    0.000    0.017    0.003 _docscrape.py:626(__init__)
       50    0.000    0.000    0.017    0.000 iterables.py:2618(minlex)
        1    0.000    0.000    0.017    0.017 _invocation.py:1(<module>)
      251    0.001    0.000    0.016    0.000 _docscrape.py:366(_parse_summary)
        1    0.000    0.000    0.016    0.016 factor_.py:1(<module>)
     7854    0.016    0.000    0.016    0.000 {built-in method torch._C._log_api_usage_once}
        1    0.000    0.000    0.016    0.016 discovery.py:1(<module>)
        1    0.000    0.000    0.016    0.016 package_importer.py:1(<module>)
        1    0.000    0.000    0.016    0.016 _linprog_rs.py:1(<module>)
     4862    0.010    0.000    0.016    0.000 <frozen importlib._bootstrap>:179(_get_module_lock)
     5118    0.003    0.000    0.016    0.000 fromnumeric.py:2421(all)
        1    0.000    0.000    0.016    0.016 _artifact_change.py:1(<module>)
        1    0.000    0.000    0.016    0.016 comments.py:1(<module>)
        2    0.000    0.000    0.016    0.008 series.py:1(<module>)
        2    0.000    0.000    0.016    0.008 laplace.py:1(<module>)
        1    0.000    0.000    0.016    0.016 _testutils.py:1(<module>)
      232    0.001    0.000    0.016    0.000 function.py:164(__init__)
        1    0.000    0.000    0.016    0.016 _trustregion_krylov.py:1(<module>)
        2    0.000    0.000    0.015    0.008 shape_base.py:1(<module>)
     6176    0.002    0.000    0.015    0.000 conflict.py:19(ambiguous)
        2    0.000    0.000    0.015    0.008 function_base.py:1(<module>)
        1    0.000    0.000    0.015    0.015 jit_utils.py:1(<module>)
     6043    0.015    0.000    0.015    0.000 {method 'sub' of 're.Pattern' objects}
     3197    0.009    0.000    0.015    0.000 functools.py:35(update_wrapper)
      245    0.001    0.000    0.015    0.000 _docscrape.py:599(__str__)
        1    0.000    0.000    0.015    0.015 hmac.py:1(<module>)
       20    0.000    0.000    0.015    0.001 container.py:580(__init__)
    28425    0.008    0.000    0.015    0.000 {built-in method builtins.setattr}
        1    0.000    0.000    0.015    0.015 colors.py:1(<module>)
    13223    0.003    0.000    0.015    0.000 conflict.py:43(edge)
        1    0.000    0.000    0.015    0.015 pythonfinitefield.py:1(<module>)
        1    0.000    0.000    0.015    0.015 _docscrape.py:1(<module>)
     3146    0.010    0.000    0.015    0.000 inspect.py:2962(__init__)
        2    0.000    0.000    0.015    0.007 _aliases.py:1(<module>)
     1411    0.014    0.000    0.014    0.000 {built-in method torch._C.impl}
     2700    0.014    0.000    0.014    0.000 {method 'findall' of 're.Pattern' objects}
      524    0.000    0.000    0.014    0.000 __init__.py:173(search)
        2    0.000    0.000    0.014    0.007 _helpers.py:1(<module>)
     2163    0.002    0.000    0.014    0.000 <frozen importlib._bootstrap_external>:1146(path_stats)
       20    0.000    0.000    0.014    0.001 container.py:631(__iadd__)
        1    0.000    0.000    0.014    0.014 exp_family.py:1(<module>)
        1    0.000    0.000    0.014    0.014 std.py:1(<module>)
        1    0.000    0.000    0.014    0.014 worker.py:1(<module>)
       21    0.000    0.000    0.014    0.001 _distn_infrastructure.py:3319(__init__)
        1    0.000    0.000    0.014    0.014 line.py:1(<module>)
       20    0.000    0.000    0.014    0.001 container.py:650(extend)
     4775    0.004    0.000    0.014    0.000 contextlib.py:284(helper)
        1    0.000    0.000    0.014    0.014 _linesearch.py:1(<module>)
        1    0.000    0.000    0.014    0.014 loss.py:1(<module>)
        5    0.000    0.000    0.014    0.003 pathlib.py:1036(open)
        2    0.000    0.000    0.014    0.007 abc.py:1(<module>)
        1    0.000    0.000    0.013    0.013 font_manager.py:1004(json_load)
      248    0.002    0.000    0.013    0.000 _docscrape.py:548(__str__)
     2324    0.003    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:1599(_get_spec)
    89500    0.013    0.000    0.013    0.000 {method 'startswith' of 'str' objects}
      367    0.001    0.000    0.013    0.000 permutations.py:1628(__call__)
      840    0.001    0.000    0.013    0.000 container.py:639(append)
      131    0.000    0.000    0.013    0.000 _distn_infrastructure.py:735(_attach_argparser_methods)
     4775    0.006    0.000    0.013    0.000 contextlib.py:141(__exit__)
        1    0.000    0.000    0.013    0.013 libhyper.py:1(<module>)
        1    0.000    0.000    0.013    0.013 basis.py:1(<module>)
        1    0.000    0.000    0.013    0.013 charset.py:1(<module>)
        1    0.000    0.000    0.013    0.013 fromnumeric.py:1(<module>)
        1    0.000    0.000    0.013    0.013 libmpc.py:1(<module>)
     1465    0.012    0.000    0.013    0.000 _ops.py:239(__init__)
      110    0.001    0.000    0.013    0.000 _distn_infrastructure.py:1923(_attach_methods)
     5155    0.005    0.000    0.013    0.000 fromnumeric.py:71(_wrapreduction)
     4326    0.006    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:132(_path_split)
        1    0.000    0.000    0.013    0.013 _reporting_descriptor.py:1(<module>)
      232    0.001    0.000    0.013    0.000 function.py:124(arity)
     2195    0.002    0.000    0.013    0.000 <frozen importlib._bootstrap>:216(_lock_unlock_module)
     6176    0.006    0.000    0.012    0.000 conflict.py:12(consistent)
        1    0.000    0.000    0.012    0.012 lowrank_multivariate_normal.py:1(<module>)
        1    0.000    0.000    0.012    0.012 meta_utils.py:1(<module>)
      213    0.000    0.000    0.012    0.000 units.py:318(__new__)
      213    0.000    0.000    0.012    0.000 units.py:299(__init__)
    71960    0.010    0.000    0.012    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.012    0.012 _notification.py:1(<module>)
      142    0.005    0.000    0.012    0.000 __init__.py:348(namedtuple)
        1    0.000    0.000    0.012    0.012 partitions_.py:1(<module>)
     1456    0.001    0.000    0.012    0.000 _docscrape.py:85(read_to_next_unindented_line)
    15898    0.008    0.000    0.012    0.000 conflict.py:7(supercedes)
     3879    0.003    0.000    0.012    0.000 <frozen importlib._bootstrap_external>:1421(_path_importer_cache)
     1241    0.001    0.000    0.012    0.000 __init__.py:655(__setitem__)
        1    0.000    0.000    0.012    0.012 encoders.py:1(<module>)
        1    0.000    0.000    0.012    0.012 beta.py:1(<module>)
        1    0.000    0.000    0.012    0.012 facts.py:1(<module>)
        1    0.000    0.000    0.012    0.012 _rgi.py:1(<module>)
       56    0.000    0.000    0.012    0.000 __init__.py:770(_open_file_or_url)
       55    0.000    0.000    0.012    0.000 __init__.py:388(inner)
       26    0.001    0.000    0.011    0.000 inspect.py:1232(getblock)
     2221    0.011    0.000    0.011    0.000 {method '__exit__' of '_io._IOBase' objects}
    16486    0.011    0.000    0.011    0.000 module.py:1618(remove_from)
     2245    0.005    0.000    0.011    0.000 typing.py:168(_type_check)
        1    0.000    0.000    0.011    0.011 lambdarepr.py:1(<module>)
        1    0.000    0.000    0.011    0.011 field.py:1(<module>)
        1    0.000    0.000    0.011    0.011 _ccallback.py:1(<module>)
        2    0.000    0.000    0.011    0.006 linsolve.py:1(<module>)
        1    0.000    0.000    0.011    0.011 hb.py:1(<module>)
        1    0.000    0.000    0.011    0.011 unix_events.py:1(<module>)
        1    0.000    0.000    0.011    0.011 para4tb.py:73(__get_TB_fix_data)
        1    0.000    0.000    0.011    0.011 contingency.py:1(<module>)
        1    0.000    0.000    0.011    0.011 _axes.py:71(Axes)
     1503    0.003    0.000    0.011    0.000 tokenize.py:433(_tokenize)
      131    0.000    0.000    0.011    0.000 _distn_infrastructure.py:683(__init__)
    19254    0.006    0.000    0.011    0.000 _parser.py:252(get)
        1    0.000    0.000    0.011    0.011 dir_util.py:1(<module>)
     1720    0.011    0.000    0.011    0.000 {built-in method torch.zeros_like}
     2038    0.011    0.000    0.011    0.000 {built-in method torch._C._dispatch_has_kernel_for_dispatch_key}
      100    0.002    0.000    0.011    0.000 iterables.py:1165(least_rotation)
        1    0.000    0.000    0.010    0.010 _at.py:1(<module>)
    54947    0.010    0.000    0.010    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.010    0.010 nvfuser_prims.py:806(register_nvprims)
        1    0.000    0.000    0.010    0.010 _static.py:1(<module>)
      222    0.002    0.000    0.010    0.000 wrappers.py:191(_out_wrapper)
    34455    0.008    0.000    0.010    0.000 _docscrape.py:64(eof)
     6074    0.008    0.000    0.010    0.000 _python_dispatch.py:86(_disable_current_modes)
      129    0.000    0.000    0.010    0.000 dataclasses.py:589(_repr_fn)
     8262    0.005    0.000    0.010    0.000 typing.py:1280(__setattr__)
     1465    0.010    0.000    0.010    0.000 {built-in method torch._C._get_operation_overload}
        1    0.000    0.000    0.010    0.010 _location.py:1(<module>)
     3310    0.002    0.000    0.010    0.000 __init__.py:178(sub)
       36    0.000    0.000    0.010    0.000 __init__.py:893(inner)
       11    0.000    0.000    0.010    0.001 __init__.py:10(partialclass)
     4775    0.008    0.000    0.010    0.000 contextlib.py:104(__init__)
        1    0.000    0.000    0.010    0.010 gtk.py:1(<module>)
      403    0.001    0.000    0.010    0.000 <frozen abc>:105(__new__)
      292    0.001    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:1655(_fill_cache)
      840    0.001    0.000    0.009    0.000 container.py:614(__setitem__)
      128    0.000    0.000    0.009    0.000 dataclasses.py:625(_cmp_fn)
     8189    0.006    0.000    0.009    0.000 _docscrape.py:57(seek_next_non_empty_line)
     2324    0.006    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:778(spec_from_file_location)
        1    0.000    0.000    0.009    0.009 polyoptions.py:1(<module>)
      191    0.007    0.000    0.009    0.000 {built-in method builtins.eval}
      292    0.001    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:1408(_path_hooks)
        1    0.000    0.000    0.009    0.009 ellipse.py:1(<module>)
        1    0.000    0.000    0.009    0.009 _decomp.py:1(<module>)
        1    0.000    0.000    0.009    0.009 _result.py:1(<module>)
        1    0.000    0.000    0.009    0.009 gamma_functions.py:1(<module>)
      465    0.001    0.000    0.009    0.000 permutations.py:902(__new__)
     7323    0.006    0.000    0.009    0.000 enum.py:669(__call__)
        1    0.000    0.000    0.009    0.009 constraint_registry.py:1(<module>)
     4862    0.007    0.000    0.009    0.000 <frozen importlib._bootstrap>:125(release)
        1    0.000    0.000    0.009    0.009 routeddecoder.py:1(<module>)
      300    0.009    0.000    0.009    0.000 {built-in method posix.listdir}
2659/2614    0.002    0.000    0.009    0.000 {built-in method builtins.any}
        1    0.000    0.000    0.009    0.009 transformed_distribution.py:1(<module>)
      393    0.001    0.000    0.009    0.000 typing.py:1539(copy_with)
      189    0.000    0.000    0.008    0.000 library.py:50(define)
        1    0.000    0.000    0.008    0.008 pythonmpq.py:1(<module>)
     3448    0.004    0.000    0.008    0.000 _ufunc_config.py:33(seterr)
      257    0.001    0.000    0.008    0.000 typing.py:1530(__getitem__)
      189    0.008    0.000    0.008    0.000 {built-in method torch._C.define}
        1    0.000    0.000    0.008    0.008 ctx_mp.py:1(<module>)
    95906    0.008    0.000    0.008    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.008    0.008 hyperexpand.py:1(<module>)
      965    0.002    0.000    0.008    0.000 typing_extensions.py:3177(_collect_parameters)
        1    0.000    0.000    0.008    0.008 expr_with_intlimits.py:1(<module>)
        1    0.000    0.000    0.008    0.008 rl.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _artifact.py:1(<module>)
    12610    0.008    0.000    0.008    0.000 {method 'expandtabs' of 'str' objects}
        1    0.000    0.000    0.008    0.008 _cubature.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _lowrank.py:1(<module>)
       70    0.001    0.000    0.008    0.000 __init__.py:1364(_preprocess_data)
      151    0.000    0.000    0.008    0.000 typing.py:692(Optional)
        1    0.000    0.000    0.008    0.008 _resampling.py:1(<module>)
        1    0.000    0.000    0.008    0.008 diophantine.py:1(<module>)
        2    0.000    0.000    0.008    0.004 fourier.py:1(<module>)
       97    0.001    0.000    0.008    0.000 __init__.py:427(_make_inplace)
     3037    0.004    0.000    0.008    0.000 forward_ad.py:114(unpack_dual)
        2    0.000    0.000    0.007    0.004 error.py:1(<module>)
     2163    0.004    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:642(_classify_pyc)
     2667    0.002    0.000    0.007    0.000 <frozen importlib._bootstrap>:173(__exit__)
        1    0.000    0.000    0.007    0.007 _memory_profiler.py:1(<module>)
     1318    0.003    0.000    0.007    0.000 enum.py:352(__setitem__)
       93    0.000    0.000    0.007    0.000 pydoc.py:186(getdoc)
        1    0.000    0.000    0.007    0.007 specifiers.py:1(<module>)
        1    0.000    0.000    0.007    0.007 common.py:8(pyparsing_common)
1062/1021    0.003    0.000    0.007    0.000 sorting.py:10(default_sort_key)
        1    0.000    0.000    0.007    0.007 patches.py:1(<module>)
        1    0.000    0.000    0.007    0.007 engine.py:1(<module>)
     9689    0.007    0.000    0.007    0.000 {method 'splitlines' of 'str' objects}
   112/79    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1311(__iter__)
    10171    0.005    0.000    0.007    0.000 _docscrape.py:91(peek)
     2232    0.004    0.000    0.007    0.000 _docscrape.py:475(_str_param_list)
   164/92    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1297(_recalculate)
        1    0.000    0.000    0.007    0.007 union.py:1(<module>)
        1    0.006    0.006    0.007    0.007 para4tb.py:55(__get_values_and_index)
       41    0.001    0.000    0.007    0.000 typing.py:2817(__new__)
        1    0.000    0.000    0.007    0.007 vq.py:1(<module>)
      748    0.003    0.000    0.007    0.000 dataclasses.py:724(_get_field)
        1    0.000    0.000    0.007    0.007 warnings.py:96(_showwarnmsg)
        1    0.000    0.000    0.007    0.007 warnings.py:20(_showwarnmsg_impl)
     1115    0.001    0.000    0.007    0.000 typing.py:1241(__init__)
       47    0.000    0.000    0.007    0.000 __init__.py:424(_make_elementwise_unary_prim)
        1    0.000    0.000    0.007    0.007 warnings.py:117(_formatwarnmsg)
        1    0.000    0.000    0.007    0.007 warnings.py:35(_formatwarnmsg_impl)
       93    0.000    0.000    0.007    0.000 pydoc.py:170(_getdoc)
        1    0.000    0.000    0.007    0.007 _run.py:1(<module>)
        1    0.000    0.000    0.007    0.007 specifiers.py:99(Specifier)
    21761    0.005    0.000    0.007    0.000 _docscrape.py:80(is_empty)
        2    0.000    0.000    0.007    0.003 fft.py:1(<module>)
  515/173    0.001    0.000    0.007    0.000 sorting.py:202(ordered)
     2603    0.004    0.000    0.006    0.000 inspect.py:735(unwrap)
      665    0.005    0.000    0.006    0.000 _compiler.py:241(_optimize_charset)
        1    0.000    0.000    0.006    0.006 ExifTags.py:1(<module>)
        1    0.000    0.000    0.006    0.006 pathlib.py:1(<module>)
        1    0.000    0.000    0.006    0.006 arpack.py:1(<module>)
        3    0.000    0.000    0.006    0.002 _distribution_infrastructure.py:1368(_generate_example)
        2    0.000    0.000    0.006    0.003 sysconfig.py:710(get_config_var)
      4/3    0.000    0.000    0.006    0.002 sysconfig.py:629(get_config_vars)
    14840    0.005    0.000    0.006    0.000 _parser.py:162(__getitem__)
      459    0.001    0.000    0.006    0.000 permutations.py:354(list)
        1    0.000    0.000    0.006    0.006 reduction.py:1(<module>)
        5    0.000    0.000    0.006    0.001 sets.py:1982(__new__)
     9305    0.004    0.000    0.006    0.000 typing.py:1229(_is_dunder)
       21    0.000    0.000    0.006    0.000 _distn_infrastructure.py:3380(_construct_docstrings)
    28116    0.005    0.000    0.006    0.000 units.py:166(<genexpr>)
        1    0.000    0.000    0.006    0.006 tokenize.py:99(_compile)
        1    0.000    0.000    0.006    0.006 _qmvnt.py:1(<module>)
     5726    0.004    0.000    0.006    0.000 _docscrape.py:86(is_unindented)
    22106    0.006    0.000    0.006    0.000 _parser.py:231(__next)
      317    0.001    0.000    0.006    0.000 overrides.py:142(decorator)
     6489    0.004    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:84(_unpack_uint32)
       44    0.000    0.000    0.006    0.000 typing.py:2797(_make_nmtuple)
2164/2161    0.002    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:599(_check_name_wrapper)
     2163    0.003    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:675(_validate_timestamp_pyc)
        1    0.000    0.000    0.006    0.006 _codata.py:1(<module>)
    66802    0.006    0.000    0.006    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.006    0.006 lattice.py:1(<module>)
     1298    0.006    0.000    0.006    0.000 {built-in method torch._C._dispatch_has_kernel}
        1    0.000    0.000    0.006    0.006 half_normal.py:1(<module>)
        2    0.000    0.000    0.006    0.003 polyutils.py:1(<module>)
        9    0.000    0.000    0.006    0.001 exceptions.py:1(<module>)
        1    0.000    0.000    0.006    0.006 sysconfig.py:527(_init_posix)
     5162    0.006    0.000    0.006    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     1724    0.001    0.000    0.005    0.000 _ufunc_config.py:430(__enter__)
      706    0.002    0.000    0.005    0.000 inspect.py:2042(_signature_bound_method)
    21721    0.005    0.000    0.005    0.000 <frozen importlib._bootstrap>:244(_verbose_message)
    30632    0.005    0.000    0.005    0.000 assumptions.py:489(as_property)
        1    0.000    0.000    0.005    0.005 graph_drawer.py:1(<module>)
        1    0.000    0.000    0.005    0.005 trf_linear.py:1(<module>)
        2    0.000    0.000    0.005    0.003 path.py:1(<module>)
        1    0.000    0.000    0.005    0.005 api.py:1(<module>)
    30618    0.005    0.000    0.005    0.000 _docscrape.py:43(__getitem__)
        1    0.000    0.000    0.005    0.005 lgmres.py:1(<module>)
        1    0.000    0.000    0.005    0.005 _reporting_descriptor_reference.py:1(<module>)
        1    0.000    0.000    0.005    0.005 comparison.py:1(<module>)
     1724    0.001    0.000    0.005    0.000 _ufunc_config.py:435(__exit__)
 2638/706    0.004    0.000    0.005    0.000 _parser.py:172(getwidth)
      295    0.001    0.000    0.005    0.000 _compiler.py:509(_compile_info)
     1019    0.005    0.000    0.005    0.000 {built-in method torch.transpose}
      472    0.001    0.000    0.005    0.000 assumptions.py:469(__init__)
    53199    0.005    0.000    0.005    0.000 {method 'rstrip' of 'str' objects}
      136    0.000    0.000    0.005    0.000 typing.py:1614(__getitem__)
3977/3797    0.003    0.000    0.005    0.000 sympify.py:124(sympify)
      459    0.001    0.000    0.005    0.000 permutations.py:385(<listcomp>)
        1    0.000    0.000    0.005    0.005 residue_ntheory.py:1(<module>)
        1    0.000    0.000    0.005    0.005 _hypotests.py:1(<module>)
        1    0.000    0.000    0.005    0.005 _info.py:1(<module>)
        1    0.000    0.000    0.005    0.005 _entropy.py:1(<module>)
        2    0.000    0.000    0.005    0.002 inverse.py:1(<module>)
      292    0.001    0.000    0.005    0.000 <frozen importlib._bootstrap_external>:1696(path_hook_for_FileFinder)
      901    0.001    0.000    0.005    0.000 inspect.py:3032(replace)
        1    0.000    0.000    0.005    0.005 _graph.py:1(<module>)
       20    0.000    0.000    0.005    0.000 adam.py:14(__init__)
      134    0.000    0.000    0.005    0.000 wrappers.py:105(__call__)
     1477    0.001    0.000    0.005    0.000 typing.py:684(<genexpr>)
       19    0.003    0.000    0.005    0.000 para4tb.py:121(<listcomp>)
      700    0.001    0.000    0.005    0.000 colors.py:161(to_rgba)
       20    0.000    0.000    0.005    0.000 optimizer.py:169(__init__)
     7790    0.003    0.000    0.005    0.000 <frozen importlib._bootstrap>:405(parent)
     1644    0.002    0.000    0.005    0.000 dataclasses.py:665(_is_type)
        1    0.000    0.000    0.005    0.005 lambdify.py:1(<module>)
        1    0.000    0.000    0.005    0.005 cm.py:53(_gen_cmap_registry)
       19    0.000    0.000    0.005    0.000 para4band.py:307(<listcomp>)
     2005    0.003    0.000    0.005    0.000 inspect.py:167(get_annotations)
     2492    0.002    0.000    0.005    0.000 <frozen importlib._bootstrap>:922(find_spec)
        1    0.000    0.000    0.005    0.005 wavfile.py:1(<module>)
  580/530    0.001    0.000    0.005    0.000 containers.py:54(__new__)
    93/40    0.000    0.000    0.005    0.000 typing.py:1363(__getitem__)
       29    0.000    0.000    0.005    0.000 __init__.py:439(_make_elementwise_binary_prim)
     3518    0.001    0.000    0.004    0.000 <frozen abc>:117(__instancecheck__)
        1    0.000    0.000    0.004    0.004 message.py:1(<module>)
       68    0.000    0.000    0.004    0.000 _internal.py:31(inner)
       81    0.000    0.000    0.004    0.000 docstring.py:77(dedent_interpd)
    13536    0.003    0.000    0.004    0.000 conflict.py:15(<genexpr>)
        2    0.000    0.000    0.004    0.002 spawn.py:1(<module>)
        1    0.000    0.000    0.004    0.004 ssl.py:1(<module>)
       97    0.000    0.000    0.004    0.000 _array_api.py:733(_make_capabilities_note)
       17    0.000    0.000    0.004    0.000 rcsetup.py:928(validate_cycler)
      131    0.002    0.000    0.004    0.000 facts.py:599(deduce_all_facts)
        1    0.000    0.000    0.004    0.004 _symbolic_trace.py:1(<module>)
     6077    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
41415/39575    0.004    0.000    0.004    0.000 {built-in method builtins.hash}
      428    0.000    0.000    0.004    0.000 rcsetup.py:360(validate_color)
       14    0.000    0.000    0.004    0.000 inspect.py:592(getmembers)
       13    0.000    0.000    0.004    0.000 enum.py:874(_convert_)
        2    0.000    0.000    0.004    0.002 grouping.py:1(<module>)
       14    0.002    0.000    0.004    0.000 inspect.py:550(_getmembers)
      459    0.001    0.000    0.004    0.000 permutations.py:433(__init__)
        2    0.000    0.000    0.004    0.002 operations.py:1(<module>)
    19564    0.004    0.000    0.004    0.000 {method 'rpartition' of 'str' objects}
        1    0.000    0.000    0.004    0.004 smtlib.py:1(<module>)
       11    0.000    0.000    0.004    0.000 core.py:1152(parse_string)
     2597    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:198(cb)
        1    0.000    0.000    0.004    0.004 headerregistry.py:1(<module>)
       20    0.002    0.000    0.004    0.000 enum.py:1625(convert_class)
      805    0.001    0.000    0.004    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.004    0.004 expand.py:1(<module>)
     9982    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1032(__exit__)
        1    0.000    0.000    0.004    0.004 _decomp_svd.py:1(<module>)
     2597    0.002    0.000    0.004    0.000 <frozen importlib._bootstrap>:71(__init__)
        1    0.000    0.000    0.004    0.004 mathtext.py:2275(Parser)
      160    0.001    0.000    0.004    0.000 _docscrape.py:290(_parse_see_also)
        1    0.000    0.000    0.004    0.004 gmpyfinitefield.py:1(<module>)
        1    0.000    0.000    0.004    0.004 platform.py:1(<module>)
       64    0.000    0.000    0.004    0.000 core.py:1449(__add__)
     1602    0.001    0.000    0.004    0.000 __init__.py:163(match)
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<lambda>)
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<listcomp>)
        1    0.000    0.000    0.004    0.004 _solvers.py:1(<module>)
        1    0.000    0.000    0.004    0.004 helpers.py:1(<module>)
      909    0.004    0.000    0.004    0.000 {built-in method numpy.array}
        1    0.000    0.000    0.004    0.004 _differentialevolution.py:1(<module>)
  628/550    0.001    0.000    0.004    0.000 _pytree.py:143(tree_flatten)
    54996    0.004    0.000    0.004    0.000 {method 'items' of 'dict' objects}
        8    0.000    0.000    0.004    0.000 core.py:5842(__init__)
     8132    0.004    0.000    0.004    0.000 {method 'replace' of 'str' objects}
       36    0.000    0.000    0.004    0.000 __init__.py:1329(_add_data_doc)
        1    0.000    0.000    0.004    0.004 _mio5.py:1(<module>)
     28/7    0.000    0.000    0.004    0.001 core.py:4715(leave_whitespace)
       65    0.000    0.000    0.004    0.000 core.py:4081(__init__)
     9982    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1028(__enter__)
        1    0.000    0.000    0.004    0.004 _replacement.py:1(<module>)
        1    0.001    0.001    0.004    0.004 symbolic_opset9.py:1(<module>)
    58/39    0.000    0.000    0.004    0.000 functools.py:981(__get__)
     8288    0.003    0.000    0.004    0.000 inspect.py:3011(<genexpr>)
       45    0.000    0.000    0.004    0.000 core.py:3146(mayReturnEmpty)
     8652    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap_external>:134(<genexpr>)
     4952    0.001    0.000    0.004    0.000 permutations.py:320(__missing__)
     3518    0.001    0.000    0.004    0.000 {built-in method _abc._abc_instancecheck}
       32    0.001    0.000    0.004    0.000 colors.py:776(from_list)
     1048    0.003    0.000    0.004    0.000 _ops.py:314(inner)
 2209/389    0.000    0.000    0.004    0.000 <frozen abc>:121(__subclasscheck__)
    38/19    0.000    0.000    0.004    0.000 core.py:3119(re)
     2015    0.001    0.000    0.004    0.000 containers.py:60(__getitem__)
        1    0.000    0.000    0.004    0.004 _array_like.py:1(<module>)
      426    0.000    0.000    0.004    0.000 colors.py:129(is_color_like)
      138    0.000    0.000    0.004    0.000 rcsetup.py:87(f)
        1    0.000    0.000    0.004    0.004 ops.py:205(add_arithmetic_ops)
     2568    0.001    0.000    0.004    0.000 typing.py:159(_type_convert)
 2209/389    0.003    0.000    0.003    0.000 {built-in method _abc._abc_subclasscheck}
        2    0.000    0.000    0.003    0.002 _globals.py:1(<module>)
        1    0.000    0.000    0.003    0.003 dense_ndim_array.py:1(<module>)
     3514    0.003    0.000    0.003    0.000 copy.py:201(_deepcopy_list)
        1    0.000    0.000    0.003    0.003 iterative.py:1(<module>)
       18    0.000    0.000    0.003    0.000 ops.py:348(_wrap)
      786    0.001    0.000    0.003    0.000 _builtins.py:161(_register_builtin)
       22    0.000    0.000    0.003    0.000 inspect.py:1344(getfullargspec)
      278    0.001    0.000    0.003    0.000 overrides.py:83(verify_matching_signatures)
        1    0.000    0.000    0.003    0.003 stringpict.py:1(<module>)
       42    0.000    0.000    0.003    0.000 doccer.py:283(decorate)
        4    0.002    0.001    0.003    0.001 _codata.py:1993(parse_constants_2002to2014)
      436    0.000    0.000    0.003    0.000 core.py:526(copy)
     1019    0.002    0.000    0.003    0.000 _tensor_str.py:243(<listcomp>)
      401    0.000    0.000    0.003    0.000 _parser.py:94(closegroup)
       87    0.000    0.000    0.003    0.000 typing.py:483(__getitem__)
        5    0.000    0.000    0.003    0.001 _common.py:1(<module>)
        2    0.000    0.000    0.003    0.002 readers.py:1(<module>)
     6266    0.002    0.000    0.003    0.000 misc.py:500(as_int)
        1    0.000    0.000    0.003    0.003 _common.py:17(files)
        1    0.000    0.000    0.003    0.003 _methods.py:1(<module>)
        1    0.000    0.000    0.003    0.003 relational.py:1(<module>)
     3037    0.003    0.000    0.003    0.000 {built-in method torch._C._functorch.is_functorch_wrapped_tensor}
        1    0.000    0.000    0.003    0.003 _common.py:59(from_package)
      213    0.003    0.000    0.003    0.000 {built-in method builtins.compile}
      370    0.001    0.000    0.003    0.000 colors.py:197(_to_rgba_no_colorcycle)
2950/2720    0.001    0.000    0.003    0.000 containers.py:56(<genexpr>)
        1    0.000    0.000    0.003    0.003 _adapters.py:28(get_resource_reader)
        2    0.000    0.000    0.003    0.002 _adapters.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _adapters.py:151(_native)
      140    0.001    0.000    0.003    0.000 deprecation.py:168(deprecate)
        1    0.000    0.000    0.003    0.003 _adapters.py:146(_reader)
      129    0.000    0.000    0.003    0.000 typing.py:1585(__getitem__)
        1    0.000    0.000    0.003    0.003 <frozen importlib._bootstrap_external>:1136(get_resource_reader)
        2    0.000    0.000    0.003    0.002 decoder.py:1(<module>)
     1513    0.001    0.000    0.003    0.000 sympify.py:514(_sympify)
   260/11    0.001    0.000    0.003    0.000 core.py:813(_parseNoCache)
     3448    0.003    0.000    0.003    0.000 _ufunc_config.py:132(geterr)
        2    0.000    0.000    0.003    0.002 decorator.py:1(<module>)
       15    0.000    0.000    0.003    0.000 _bunch.py:32(_make_tuple_bunch)
       71    0.000    0.000    0.003    0.000 typing.py:701(Literal)
        4    0.000    0.000    0.003    0.001 _utils.py:1(<module>)
        1    0.000    0.000    0.003    0.003 perm_groups.py:1(<module>)
    63/11    0.000    0.000    0.003    0.000 core.py:4172(parseImpl)
      292    0.001    0.000    0.003    0.000 <frozen zipimport>:64(__init__)
        6    0.000    0.000    0.003    0.001 _docscrape.py:680(methods)
        1    0.000    0.000    0.003    0.003 matpow.py:1(<module>)
        1    0.000    0.000    0.003    0.003 rootoftools.py:1(<module>)
       18    0.000    0.000    0.003    0.000 rcsetup.py:437(validate_font_properties)
        1    0.000    0.000    0.003    0.003 _artifact_content.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _pep440.py:1(<module>)
        9    0.000    0.000    0.003    0.000 fontconfig_pattern.py:119(parse)
       16    0.000    0.000    0.003    0.000 util.py:412(_inner)
        1    0.000    0.000    0.003    0.003 _decomp_schur.py:1(<module>)
        9    0.000    0.000    0.003    0.000 util.py:1(<module>)
        2    0.000    0.000    0.003    0.001 deprecation.py:208(_inner_deprecate_positional_args)
        1    0.000    0.000    0.003    0.003 _construct.py:1(<module>)
    10746    0.002    0.000    0.003    0.000 mathtext.py:2847(<genexpr>)
      436    0.001    0.000    0.003    0.000 copy.py:66(copy)
        1    0.000    0.000    0.003    0.003 _filter_design.py:1(<module>)
     7622    0.003    0.000    0.003    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.003    0.003 radsimp.py:1(<module>)
     59/7    0.000    0.000    0.003    0.000 core.py:3923(leave_whitespace)
      100    0.000    0.000    0.003    0.000 iterables.py:1127(rotate_left)
        3    0.000    0.000    0.003    0.001 __init__.py:958(distribution)
        1    0.000    0.000    0.003    0.003 binary.py:1(<module>)
    20723    0.003    0.000    0.003    0.000 {method 'get' of 'mappingproxy' objects}
        3    0.000    0.000    0.003    0.001 __init__.py:545(from_name)
       64    0.000    0.000    0.003    0.000 rcsetup.py:106(<listcomp>)
      239    0.000    0.000    0.003    0.000 rcsetup.py:353(validate_color_for_prop_cycle)
        1    0.000    0.000    0.003    0.003 hyper.py:1(<module>)
   127/59    0.000    0.000    0.003    0.000 core.py:4015(copy)
        1    0.000    0.000    0.003    0.003 hyperbolic.py:1(<module>)
      544    0.000    0.000    0.003    0.000 registration.py:296(wrapper)
     1465    0.003    0.000    0.003    0.000 {built-in method torch._C._get_schema}
        6    0.000    0.000    0.003    0.000 _typing.py:1(<module>)
        1    0.000    0.000    0.003    0.003 compat.py:1(<module>)
       16    0.000    0.000    0.003    0.000 inspect.py:2311(_signature_from_builtin)
       87    0.001    0.000    0.003    0.000 utils.py:25(_toposort)
        1    0.000    0.000    0.003    0.003 splitter_base.py:1(<module>)
        2    0.000    0.000    0.003    0.001 _pytree.py:1(<module>)
        1    0.000    0.000    0.003    0.003 boolalg.py:1(<module>)
       12    0.000    0.000    0.003    0.000 dataclasses.py:600(_frozen_get_del_attr)
     4016    0.002    0.000    0.003    0.000 copy.py:243(_keep_alive)
      101    0.000    0.000    0.003    0.000 _meta_registrations.py:33(wrapper)
    93/40    0.000    0.000    0.003    0.000 typing.py:1395(_determine_new_args)
        1    0.000    0.000    0.003    0.003 galoistools.py:1(<module>)
       16    0.000    0.000    0.003    0.000 inspect.py:2177(_signature_fromstr)
       74    0.000    0.000    0.003    0.000 typing.py:1599(__getitem_inner__)
     2163    0.003    0.000    0.003    0.000 {built-in method _imp._fix_co_filename}
      292    0.001    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:1559(__init__)
        1    0.000    0.000    0.003    0.003 _fit.py:1(<module>)
        1    0.000    0.000    0.003    0.003 table.py:1(<module>)
        1    0.000    0.000    0.003    0.003 configparser.py:1(<module>)
        1    0.000    0.000    0.003    0.003 socket.py:1(<module>)
       64    0.000    0.000    0.003    0.000 util.py:401(replaced_by_pep8)
       21    0.000    0.000    0.003    0.000 _distn_infrastructure.py:3358(_attach_methods)
        1    0.000    0.000    0.003    0.003 _stats_mstats_common.py:1(<module>)
       21    0.000    0.000    0.003    0.000 __init__.py:910(<genexpr>)
      786    0.001    0.000    0.003    0.000 _builtins.py:128(_get_builtin_table)
     3037    0.003    0.000    0.003    0.000 {built-in method torch._C._get_default_device}
       69    0.003    0.000    0.003    0.000 {built-in method builtins.dir}
      140    0.000    0.000    0.003    0.000 core.py:4109(<genexpr>)
       18    0.000    0.000    0.003    0.000 __init__.py:808(search)
        1    0.000    0.000    0.003    0.003 message.py:135(Message)
        1    0.000    0.000    0.003    0.003 structure.py:5581(<dictcomp>)
        1    0.000    0.000    0.002    0.002 _logsumexp.py:1(<module>)
        1    0.000    0.000    0.002    0.002 mutable_ndim_array.py:1(<module>)
       16    0.000    0.000    0.002    0.000 structure.py:5069(__init__)
        1    0.000    0.000    0.002    0.002 c10d_error_logger.py:1(<module>)
        1    0.000    0.000    0.002    0.002 relativedelta.py:1(<module>)
        1    0.000    0.000    0.002    0.002 version.py:161(Version)
        1    0.000    0.000    0.002    0.002 _pep440.py:285(Version)
       16    0.000    0.000    0.002    0.000 structure.py:3449(__init__)
      880    0.000    0.000    0.002    0.000 module.py:2059(parameters)
       24    0.001    0.000    0.002    0.000 util.py:210(_collapse_string_to_ranges)
      367    0.001    0.000    0.002    0.000 permutations.py:1323(__mul__)
      431    0.001    0.000    0.002    0.000 typing.py:320(_remove_dups_flatten)
        1    0.000    0.000    0.002    0.002 _decomp_qr.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _dtype_like.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _basinhopping.py:1(<module>)
        7    0.000    0.000    0.002    0.000 core.py:2833(__init__)
    16972    0.002    0.000    0.002    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.002    0.002 lie_group.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _configuration_override.py:1(<module>)
        6    0.000    0.000    0.002    0.000 _docscrape.py:694(properties)
       21    0.000    0.000    0.002    0.000 decompositions.py:3288(register_inplace)
      451    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:164(_path_isdir)
       93    0.000    0.000    0.002    0.000 _compatibility.py:10(mark_back_compat)
       54    0.000    0.000    0.002    0.000 deprecation.py:333(_delete_parameter)
        1    0.000    0.000    0.002    0.002 typing_extensions.py:1(<module>)
       16    0.000    0.000    0.002    0.000 rcsetup.py:843(cycler)
    17441    0.002    0.000    0.002    0.000 {built-in method _imp.acquire_lock}
        2    0.000    0.000    0.002    0.001 polynomials.py:1(<module>)
      291    0.000    0.000    0.002    0.000 <frozen codecs>:319(decode)
        1    0.000    0.000    0.002    0.002 _decomp_qz.py:1(<module>)
       78    0.000    0.000    0.002    0.000 typing.py:1772(__class_getitem__)
      512    0.000    0.000    0.002    0.000 numbers.py:1984(__lt__)
   127/59    0.000    0.000    0.002    0.000 core.py:4018(<listcomp>)
        1    0.000    0.000    0.002    0.002 _decomp_cholesky.py:1(<module>)
        1    0.000    0.000    0.002    0.002 twodim_base.py:1(<module>)
    17441    0.002    0.000    0.002    0.000 {built-in method _imp.release_lock}
        1    0.000    0.000    0.002    0.002 polynomialring.py:1(<module>)
      605    0.001    0.000    0.002    0.000 _inspect.py:96(getargspec)
    10198    0.002    0.000    0.002    0.000 {method 'endswith' of 'str' objects}
        8    0.000    0.000    0.002    0.000 __init__.py:817(lookup)
      880    0.000    0.000    0.002    0.000 module.py:2084(named_parameters)
     1193    0.002    0.000    0.002    0.000 _docscrape.py:188(_strip)
       16    0.000    0.000    0.002    0.000 _functools.py:75(wrapper)
        8    0.000    0.000    0.002    0.000 __init__.py:823(__init__)
        1    0.000    0.000    0.002    0.002 _compat.py:1(<module>)
        1    0.000    0.000    0.002    0.002 difflib.py:1(<module>)
        1    0.000    0.000    0.002    0.002 integerring.py:1(<module>)
        1    0.000    0.000    0.002    0.002 groundtypes.py:1(<module>)
        1    0.000    0.000    0.002    0.002 permutations.py:1(<module>)
        1    0.000    0.000    0.002    0.002 storage.py:1(<module>)
        3    0.000    0.000    0.002    0.001 __init__.py:32(message_from_string)
       15    0.000    0.000    0.002    0.000 core.py:1601(__or__)
      291    0.002    0.000    0.002    0.000 {built-in method _codecs.utf_8_decode}
      165    0.000    0.000    0.002    0.000 typing.py:832(__init__)
        3    0.000    0.000    0.002    0.001 patches.py:1867(pprint_styles)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:2043(_draw)
       20    0.000    0.000    0.002    0.000 mul.py:205(flatten)
        1    0.000    0.000    0.002    0.002 ctx_mp_python.py:1(<module>)
       93    0.000    0.000    0.002    0.000 sites.py:38(__init__)
        1    0.000    0.000    0.002    0.002 _docscrape.py:112(NumpyDocString)
        1    0.000    0.000    0.002    0.002 common_types.py:1(<module>)
        3    0.000    0.000    0.002    0.001 ctx_mp.py:63(__init__)
       59    0.000    0.000    0.002    0.000 core.py:3931(<listcomp>)
        2    0.001    0.001    0.002    0.001 _codata.py:2019(parse_constants_2018toXXXX)
        3    0.000    0.000    0.002    0.001 parser.py:59(parsestr)
     6251    0.001    0.000    0.002    0.000 _parser.py:247(match)
       15    0.000    0.000    0.002    0.000 core.py:4399(__init__)
      325    0.001    0.000    0.002    0.000 function_base.py:497(add_newdoc)
      965    0.002    0.000    0.002    0.000 typing_extensions.py:3092(_has_generic_or_protocol_as_origin)
        3    0.000    0.000    0.002    0.001 parser.py:41(parse)
     5359    0.002    0.000    0.002    0.000 {method 'update' of 'dict' objects}
       28    0.000    0.000    0.002    0.000 _basic.py:16(_dispatch)
        2    0.000    0.000    0.002    0.001 decoder.py:332(decode)
     3037    0.002    0.000    0.002    0.000 {built-in method torch._is_functional_tensor}
       28    0.000    0.000    0.002    0.000 _backend.py:174(generate_multimethod)
        2    0.001    0.000    0.002    0.001 decoder.py:343(raw_decode)
      125    0.000    0.000    0.002    0.000 cache.py:66(func_wrapper)
        1    0.000    0.000    0.002    0.002 afm.py:1(<module>)
        1    0.000    0.000    0.002    0.002 unary.py:1(<module>)
        2    0.000    0.000    0.002    0.001 _add_newdocs.py:1(<module>)
      756    0.002    0.000    0.002    0.000 {built-in method torch.view_as_real}
        1    0.000    0.000    0.002    0.002 interpreter.py:1(<module>)
        2    0.002    0.001    0.002    0.001 {method 'join' of 'bytes' objects}
        1    0.000    0.000    0.002    0.002 symbolic_shapes.py:1(<module>)
        1    0.000    0.000    0.002    0.002 integers.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _mannwhitneyu.py:1(<module>)
      590    0.001    0.000    0.002    0.000 enum.py:1483(__and__)
        7    0.001    0.000    0.002    0.000 _builtins.py:134(register_all)
        1    0.000    0.000    0.002    0.002 proxy.py:1(<module>)
     2602    0.001    0.000    0.002    0.000 numbers.py:1965(__eq__)
        1    0.000    0.000    0.002    0.002 pyplot.py:2138(_setup_pyplot_info_docstrings)
      607    0.000    0.000    0.002    0.000 typing.py:1535(<genexpr>)
       22    0.000    0.000    0.002    0.000 core.py:620(set_parse_action)
        1    0.000    0.000    0.002    0.002 _differentiable_functions.py:1(<module>)
     3412    0.001    0.000    0.002    0.000 _ufunc_config.py:452(_no_nep50_warning)
        1    0.000    0.000    0.002    0.002 _attachment.py:1(<module>)
     2616    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:180(_path_isabs)
      100    0.000    0.000    0.002    0.000 matrix_element.py:167(__radd__)
       35    0.000    0.000    0.002    0.000 _typing.py:346(__new__)
        1    0.000    0.000    0.002    0.002 _gauss_kronrod.py:1(<module>)
        5    0.000    0.000    0.002    0.000 ctx_base.py:42(__init__)
        1    0.000    0.000    0.002    0.002 _arffread.py:1(<module>)
     5212    0.002    0.000    0.002    0.000 {built-in method _thread.allocate_lock}
       64    0.000    0.000    0.002    0.000 wrappers.py:285(backwards_not_supported)
        3    0.000    0.000    0.002    0.001 patches.py:1871(<listcomp>)
     1800    0.001    0.000    0.002    0.000 _docscrape.py:457(_str_indent)
        1    0.000    0.000    0.002    0.002 rk.py:1(<module>)
       71    0.000    0.000    0.002    0.000 enum.py:451(__prepare__)
        7    0.000    0.000    0.002    0.000 ctx_mp_python.py:279(binary_op)
      880    0.001    0.000    0.002    0.000 module.py:2045(_named_members)
        1    0.002    0.002    0.002    0.002 {built-in method torch._C._c10d_init}
      200    0.000    0.000    0.002    0.000 containers.py:75(__add__)
     1019    0.002    0.000    0.002    0.000 _tensor_str.py:240(<listcomp>)
     5155    0.002    0.000    0.002    0.000 fromnumeric.py:72(<dictcomp>)
        1    0.000    0.000    0.002    0.002 _directory_reader.py:1(<module>)
     7319    0.002    0.000    0.002    0.000 enum.py:1074(__new__)
       28    0.000    0.000    0.002    0.000 _backend.py:312(get_defaults)
        4    0.000    0.000    0.002    0.000 feedparser.py:173(feed)
       22    0.000    0.000    0.002    0.000 core.py:701(<listcomp>)
      544    0.001    0.000    0.002    0.000 registration.py:213(register)
        1    0.000    0.000    0.002    0.002 gzip.py:296(read)
       26    0.000    0.000    0.002    0.000 core.py:257(_trim_arity)
        1    0.000    0.000    0.002    0.002 stateless.py:1(<module>)
        1    0.000    0.000    0.002    0.002 vmap.py:1(<module>)
        2    0.000    0.000    0.002    0.001 factorials.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _artifact_location.py:1(<module>)
       74    0.000    0.000    0.002    0.000 typing.py:1580(copy_with)
     3908    0.002    0.000    0.002    0.000 {built-in method builtins.abs}
     1043    0.001    0.000    0.002    0.000 typing.py:1270(__getattr__)
     5579    0.001    0.000    0.002    0.000 _ops.py:289(__hash__)
        1    0.000    0.000    0.002    0.002 _ni_docstrings.py:1(<module>)
        1    0.000    0.000    0.002    0.002 parameters.py:1(<module>)
     2776    0.001    0.000    0.002    0.000 inspect.py:755(_is_wrapper)
        1    0.000    0.000    0.002    0.002 _header_value_parser.py:1(<module>)
     4901    0.001    0.000    0.002    0.000 inspect.py:378(isfunction)
        1    0.000    0.000    0.002    0.002 pretty_symbology.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _dual_annealing.py:1(<module>)
        1    0.000    0.000    0.002    0.002 dates.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _stack.py:1(<module>)
     1126    0.000    0.000    0.002    0.000 colors.py:124(_is_nth_color)
        7    0.000    0.000    0.002    0.000 feedparser.py:178(_call_parse)
        2    0.000    0.000    0.002    0.001 sets.py:1(<module>)
        7    0.000    0.000    0.002    0.000 gzip.py:474(read)
        1    0.000    0.000    0.002    0.002 _manylinux.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _fftlog.py:1(<module>)
        5    0.001    0.000    0.002    0.000 functions.py:18(__init__)
        1    0.000    0.000    0.002    0.002 nonhomogeneous.py:1(<module>)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:868(draw)
       22    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:1083(filtered)
       44    0.000    0.000    0.002    0.000 typing.py:2799(<dictcomp>)
      243    0.001    0.000    0.002    0.000 functools.py:518(decorating_function)
      592    0.001    0.000    0.002    0.000 _pytree.py:136(__init__)
        1    0.000    0.000    0.002    0.002 _address.py:1(<module>)
        7    0.000    0.000    0.002    0.000 feedparser.py:218(_parsegen)
     4289    0.001    0.000    0.002    0.000 _parser.py:170(append)
        1    0.000    0.000    0.002    0.002 _tanhsinh.py:1(<module>)
      459    0.001    0.000    0.002    0.000 iterables.py:1923(has_dups)
        6    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:605(draw)
        1    0.000    0.000    0.002    0.002 _comparison.py:1(<module>)
    11196    0.001    0.000    0.002    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.002    0.002 assume.py:1(<module>)
        5    0.000    0.000    0.002    0.000 io.py:28(zopen)
        1    0.000    0.000    0.002    0.002 _parseaddr.py:1(<module>)
       72    0.000    0.000    0.002    0.000 inspect.py:3224(__str__)
     1456    0.001    0.000    0.002    0.000 _docscrape.py:49(read)
        1    0.000    0.000    0.002    0.002 _char_codes.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _complex.py:1(<module>)
     2492    0.002    0.000    0.002    0.000 {built-in method _imp.find_frozen}
        1    0.000    0.000    0.002    0.002 backend_tools.py:1(<module>)
        2    0.000    0.000    0.002    0.001 fnmatch.py:1(<module>)
     4881    0.001    0.000    0.002    0.000 _parser.py:158(__len__)
     9727    0.002    0.000    0.002    0.000 {method '__exit__' of '_thread.lock' objects}
        1    0.000    0.000    0.002    0.002 trajectory.py:1(<module>)
      840    0.001    0.000    0.002    0.000 module.py:799(compute_should_use_set_data)
       20    0.001    0.000    0.002    0.000 optimizer.py:489(add_param_group)
      976    0.001    0.000    0.002    0.000 _compiler.py:396(_simple)
        3    0.000    0.000    0.002    0.001 _constants.py:1(<module>)
     2194    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:48(_new_module)
     2671    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:357(__init__)
      961    0.002    0.000    0.002    0.000 {method 'search' of 're.Pattern' objects}
        2    0.000    0.000    0.002    0.001 fractions.py:1(<module>)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:977(exec_module)
      532    0.001    0.000    0.002    0.000 function_base.py:2285(__init__)
        1    0.000    0.000    0.001    0.001 ExifTags.py:21(Base)
        1    0.000    0.000    0.001    0.001 _quadpack_py.py:1(<module>)
      403    0.001    0.000    0.001    0.000 {built-in method _abc._abc_init}
        1    0.000    0.000    0.001    0.001 _nonlin.py:1(<module>)
     2869    0.001    0.000    0.001    0.000 functools.py:65(wraps)
        1    0.000    0.000    0.001    0.001 <frozen ntpath>:1(<module>)
       30    0.000    0.000    0.001    0.000 __init__.py:652(__init__)
        1    0.000    0.000    0.001    0.001 _mio4.py:1(<module>)
      317    0.000    0.000    0.001    0.000 font_manager.py:962(_json_decode)
       13    0.000    0.000    0.001    0.000 enum.py:891(<listcomp>)
        1    0.000    0.000    0.001    0.001 Bravais_Lattice.py:1(<module>)
     6074    0.001    0.000    0.001    0.000 {built-in method torch.get_default_dtype}
        1    0.000    0.000    0.001    0.001 accumulationbounds.py:1(<module>)
       30    0.000    0.000    0.001    0.000 <frozen _collections_abc>:941(update)
     1482    0.001    0.000    0.001    0.000 enum.py:809(__setattr__)
        1    0.000    0.000    0.001    0.001 timeutils.py:1(<module>)
        1    0.000    0.000    0.001    0.001 parsing.py:1(<module>)
        1    0.000    0.000    0.001    0.001 zeta_functions.py:1(<module>)
        2    0.000    0.000    0.001    0.001 fuse_modules.py:1(<module>)
        1    0.000    0.000    0.001    0.001 core.py:6281(<listcomp>)
        1    0.000    0.000    0.001    0.001 wavfile.py:72(WAVE_FORMAT)
        1    0.000    0.000    0.001    0.001 fancysets.py:1(<module>)
     3037    0.001    0.000    0.001    0.000 {method '_is_zerotensor' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 polyoptions.py:397(Domain)
       35    0.000    0.000    0.001    0.000 core.py:76(ismethod)
        1    0.000    0.000    0.001    0.001 _trustregion_dogleg.py:1(<module>)
        1    0.000    0.000    0.001    0.001 module.py:366(Module)
        1    0.000    0.000    0.001    0.001 _max_len_seq.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _expm_frechet.py:1(<module>)
        1    0.000    0.000    0.001    0.001 core.py:389(ParserElement)
        1    0.000    0.000    0.001    0.001 connection.py:1(<module>)
     9746    0.001    0.000    0.001    0.000 {built-in method _thread.get_ident}
     2209    0.001    0.000    0.001    0.000 {method 'extend' of 'list' objects}
       20    0.000    0.000    0.001    0.000 core.py:5363(parseImpl)
  274/176    0.000    0.000    0.001    0.000 core.py:1947(name)
      248    0.001    0.000    0.001    0.000 _docscrape.py:499(_str_see_also)
        1    0.000    0.000    0.001    0.001 _spherical_voronoi.py:1(<module>)
      541    0.001    0.000    0.001    0.000 dataclasses.py:828(_set_new_attribute)
       83    0.000    0.000    0.001    0.000 core.py:3887(__init__)
      927    0.001    0.000    0.001    0.000 permutations.py:1028(_af_new)
        1    0.000    0.000    0.001    0.001 _ufunc_config.py:1(<module>)
        1    0.000    0.000    0.001    0.001 animation.py:1(<module>)
       42    0.000    0.000    0.001    0.000 _typing.py:257(__new__)
     6493    0.001    0.000    0.001    0.000 {built-in method from_bytes}
       12    0.001    0.000    0.001    0.000 artist.py:1273(<listcomp>)
       97    0.001    0.000    0.001    0.000 {method 'sort' of 'list' objects}
     1627    0.001    0.000    0.001    0.000 enum.py:78(_is_private)
      628    0.000    0.000    0.001    0.000 _pytree.py:105(_is_leaf)
  206/114    0.000    0.000    0.001    0.000 core.py:1910(default_name)
  108/107    0.000    0.000    0.001    0.000 __init__.py:235(wrapper)
       29    0.000    0.000    0.001    0.000 typing.py:1628(copy_with)
     1366    0.000    0.000    0.001    0.000 {built-in method builtins.delattr}
      502    0.001    0.000    0.001    0.000 typing.py:306(_deduplicate)
        7    0.000    0.000    0.001    0.000 _nonlin.py:1584(_nonlin_wrapper)
        1    0.000    0.000    0.001    0.001 __init__.py:42(_load_pmg_settings)
        1    0.000    0.000    0.001    0.001 configparser.py:569(RawConfigParser)
        2    0.000    0.000    0.001    0.001 core.py:6134(srange)
        1    0.000    0.000    0.001    0.001 band_data_out.py:1(<module>)
       14    0.000    0.000    0.001    0.000 core.py:115(doc_note)
      365    0.000    0.000    0.001    0.000 typing.py:1623(<genexpr>)
      436    0.001    0.000    0.001    0.000 copy.py:259(_reconstruct)
     3037    0.001    0.000    0.001    0.000 {built-in method torch._C._len_torch_dispatch_stack}
        2    0.000    0.000    0.001    0.001 base.py:1(<module>)
     3872    0.001    0.000    0.001    0.000 typing.py:1348(__eq__)
      104    0.000    0.000    0.001    0.000 typing.py:1006(__init__)
    28/22    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1136(wrapped)
     4191    0.001    0.000    0.001    0.000 numbers.py:2011(__hash__)
       20    0.000    0.000    0.001    0.000 core.py:5119(parseImpl)
     6074    0.001    0.000    0.001    0.000 {method 'has_names' of 'torch._C._TensorBase' objects}
       57    0.000    0.000    0.001    0.000 <frozen genericpath>:16(exists)
      628    0.000    0.000    0.001    0.000 <string>:2(__init__)
     22/3    0.000    0.000    0.001    0.000 core.py:4122(streamline)
     8013    0.001    0.000    0.001    0.000 _docscrape.py:153(__getitem__)
        5    0.000    0.000    0.001    0.000 perm_groups.py:124(__new__)
        1    0.000    0.000    0.001    0.001 sequences.py:1(<module>)
     2994    0.001    0.000    0.001    0.000 _parser.py:284(tell)
    11121    0.001    0.000    0.001    0.000 inspect.py:2729(name)
        1    0.000    0.000    0.001    0.001 clip_grad.py:1(<module>)
        1    0.000    0.000    0.001    0.001 getlimits.py:162(_register_known_types)
       43    0.000    0.000    0.001    0.000 ast.py:33(parse)
     1662    0.001    0.000    0.001    0.000 basic.py:288(__new__)
      822    0.000    0.000    0.001    0.000 typing_extensions.py:3114(_is_unpacked_typevartuple)
1647/1434    0.001    0.000    0.001    0.000 typing.py:1354(__hash__)
       75    0.000    0.000    0.001    0.000 pathlib.py:868(__new__)
      992    0.001    0.000    0.001    0.000 _docscrape.py:491(_str_section)
        1    0.000    0.000    0.001    0.001 _sensitivity_analysis.py:1(<module>)
     7528    0.001    0.000    0.001    0.000 {built-in method posix.fspath}
        1    0.001    0.001    0.001    0.001 para4tb.py:45(__get_exp)
      138    0.000    0.000    0.001    0.000 _meta_registrations.py:34(register)
       82    0.000    0.000    0.001    0.000 pathlib.py:504(_from_parts)
        1    0.000    0.000    0.001    0.001 more.py:1(<module>)
        1    0.000    0.000    0.001    0.001 helpers.py:634(make_html_tags)
      755    0.001    0.000    0.001    0.000 dataclasses.py:451(_field_init)
     72/4    0.000    0.000    0.001    0.000 core.py:980(_parseCache)
       44    0.000    0.000    0.001    0.000 core.py:4404(<genexpr>)
        1    0.000    0.000    0.001    0.001 helpers.py:576(_makeTags)
        1    0.000    0.000    0.001    0.001 unary.py:167(<dictcomp>)
        1    0.000    0.000    0.001    0.001 _correlation.py:1(<module>)
      199    0.000    0.000    0.001    0.000 typing.py:245(_collect_parameters)
        1    0.000    0.000    0.001    0.001 _sketches.py:1(<module>)
       96    0.000    0.000    0.001    0.000 pathlib.py:484(_parse_args)
       64    0.000    0.000    0.001    0.000 typing.py:1470(copy_with)
        1    0.000    0.000    0.001    0.001 _torch_docs.py:1(<module>)
     8747    0.001    0.000    0.001    0.000 {method 'isidentifier' of 'str' objects}
  755/724    0.001    0.000    0.001    0.000 typing.py:1636(__hash__)
     30/4    0.000    0.000    0.001    0.000 core.py:3963(streamline)
       31    0.000    0.000    0.001    0.000 _base.py:56(__set_name__)
        1    0.000    0.000    0.001    0.001 realfield.py:1(<module>)
      748    0.001    0.000    0.001    0.000 dataclasses.py:347(field)
      215    0.000    0.000    0.001    0.000 symbolic_helper.py:263(decorator)
     6941    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.001    0.001 interval_arithmetic.py:1(<module>)
      105    0.000    0.000    0.001    0.000 typing.py:1822(__init_subclass__)
     1456    0.001    0.000    0.001    0.000 _docscrape.py:16(strip_blank_lines)
      129    0.000    0.000    0.001    0.000 dataclasses.py:394(_recursive_repr)
      141    0.000    0.000    0.001    0.000 sorting.py:179(_nodes)
       55    0.000    0.000    0.001    0.000 __init__.py:2081(getLogger)
        1    0.000    0.000    0.001    0.001 extras.py:1(<module>)
        6    0.000    0.000    0.001    0.000 warnings.py:130(filterwarnings)
    11885    0.001    0.000    0.001    0.000 inspect.py:2741(kind)
        1    0.000    0.000    0.001    0.001 realfield.py:87(__init__)
     1800    0.001    0.000    0.001    0.000 _docscrape.py:458(<listcomp>)
        1    0.000    0.000    0.001    0.001 fontconfig_pattern.py:62(__init__)
        1    0.000    0.000    0.001    0.001 _survival.py:1(<module>)
        1    0.000    0.000    0.001    0.001 subgraph_rewriter.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _decomp_ldl.py:1(<module>)
        1    0.000    0.000    0.001    0.001 singleton.py:1(<module>)
      586    0.001    0.000    0.001    0.000 _inspect.py:65(getargs)
        1    0.000    0.000    0.001    0.001 _reqs.py:1(<module>)
        1    0.000    0.000    0.001    0.001 dviread.py:1(<module>)
        1    0.000    0.000    0.001    0.001 graph.py:675(Graph)
        9    0.000    0.000    0.001    0.000 assume.py:175(__new__)
    11079    0.001    0.000    0.001    0.000 {built-in method builtins.callable}
  518/510    0.000    0.000    0.001    0.000 {built-in method builtins.repr}
       52    0.000    0.000    0.001    0.000 inspect.py:936(getsourcefile)
        1    0.000    0.000    0.001    0.001 _rules.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _direct_py.py:1(<module>)
      146    0.000    0.000    0.001    0.000 enum.py:923(_get_mixins_)
        2    0.000    0.000    0.001    0.001 combining.py:1(<module>)
     3037    0.001    0.000    0.001    0.000 {method 'is_neg' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 rnn.py:551(LSTM)
        6    0.000    0.000    0.001    0.000 getlimits.py:34(__init__)
        1    0.000    0.000    0.001    0.001 tools_common.py:1(<module>)
        1    0.000    0.000    0.001    0.001 miscellaneous.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:454(StrFormatStyle)
       16    0.000    0.000    0.001    0.000 inspect.py:2105(_signature_strip_non_python_syntax)
     2546    0.001    0.000    0.001    0.000 _docscrape.py:403(<genexpr>)
       90    0.000    0.000    0.001    0.000 basic.py:447(sort_key)
       69    0.000    0.000    0.001    0.000 _compatibility.py:24(mark_not_back_compat)
     3387    0.001    0.000    0.001    0.000 facts.py:633(<genexpr>)
       21    0.000    0.000    0.001    0.000 arrayprint.py:506(wrapper)
     7354    0.001    0.000    0.001    0.000 {method '__contains__' of 'frozenset' objects}
      665    0.001    0.000    0.001    0.000 _compiler.py:214(_compile_charset)
      205    0.000    0.000    0.001    0.000 inspect.py:2763(__str__)
        2    0.000    0.000    0.001    0.000 container.py:1(<module>)
        1    0.000    0.000    0.001    0.001 binary.py:171(<dictcomp>)
      459    0.000    0.000    0.001    0.000 permutations.py:455(<listcomp>)
       17    0.000    0.000    0.001    0.000 deprecation.py:416(_make_keyword_only)
        2    0.000    0.000    0.001    0.000 __init__.py:368(get_device_capability)
        1    0.000    0.000    0.001    0.001 _miobase.py:1(<module>)
        3    0.000    0.000    0.001    0.000 __init__.py:385(get_device_properties)
      425    0.000    0.000    0.001    0.000 artist.py:1363(aliased_name)
        1    0.000    0.000    0.001    0.001 scalarstring.py:1(<module>)
  628/550    0.001    0.000    0.001    0.000 _pytree.py:165(tree_unflatten)
      426    0.000    0.000    0.001    0.000 __init__.py:218(finditer)
        1    0.000    0.000    0.001    0.001 sites.py:1(<module>)
       59    0.000    0.000    0.001    0.000 __init__.py:791(joinpath)
        1    0.000    0.000    0.001    0.001 _external_property_file_references.py:1(<module>)
        5    0.000    0.000    0.001    0.000 polyhedron.py:390(<listcomp>)
        1    0.000    0.000    0.001    0.001 _variation.py:1(<module>)
     1375    0.001    0.000    0.001    0.000 enum.py:37(_is_descriptor)
     3449    0.001    0.000    0.001    0.000 {built-in method numpy.seterrobj}
        1    0.000    0.000    0.001    0.001 elliptic_integrals.py:1(<module>)
        3    0.000    0.000    0.001    0.000 string.py:1(<module>)
        3    0.001    0.000    0.001    0.000 {built-in method torch.cuda._get_device_properties}
     10/3    0.000    0.000    0.001    0.000 unicode.py:14(__get__)
        2    0.000    0.000    0.001    0.000 gzip.py:467(_read_gzip_header)
      277    0.001    0.000    0.001    0.000 results.py:153(__new__)
       54    0.000    0.000    0.001    0.000 __init__.py:1327(getLogger)
       37    0.001    0.000    0.001    0.000 function_base.py:24(linspace)
     2237    0.001    0.000    0.001    0.000 inspect.py:292(isclass)
        1    0.000    0.000    0.001    0.001 server_process_global_profiler.py:1(<module>)
        2    0.000    0.000    0.001    0.000 gzip.py:418(_read_gzip_header)
     2686    0.001    0.000    0.001    0.000 util.py:202(__call__)
      115    0.000    0.000    0.001    0.000 inspect.py:786(_finddoc)
       80    0.000    0.000    0.001    0.000 _array_api.py:757(xp_capabilities)
      106    0.000    0.000    0.001    0.000 contextlib.py:257(contextmanager)
        1    0.000    0.000    0.001    0.001 _lil.py:1(<module>)
     20/6    0.000    0.000    0.001    0.000 core.py:4741(streamline)
        1    0.000    0.000    0.001    0.001 mathieu_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 torch_version.py:1(<module>)
        2    0.000    0.000    0.001    0.000 _internal.py:1(<module>)
       31    0.000    0.000    0.001    0.000 gzip.py:86(read)
        1    0.000    0.000    0.001    0.001 operator_schemas.py:1(<module>)
        1    0.000    0.000    0.001    0.001 distribution.py:1(<module>)
      628    0.001    0.000    0.001    0.000 _pytree.py:120(__post_init__)
        1    0.000    0.000    0.001    0.001 grad_scaler.py:1(<module>)
       84    0.000    0.000    0.001    0.000 __init__.py:1641(get_aten_op)
      542    0.001    0.000    0.001    0.000 _parser.py:367(_escape)
        1    0.000    0.000    0.001    0.001 lzma.py:1(<module>)
      772    0.001    0.000    0.001    0.000 _docscrape.py:28(__init__)
      182    0.000    0.000    0.001    0.000 numbers.py:1975(__gt__)
        1    0.000    0.000    0.001    0.001 matcher_utils.py:1(<module>)
       15    0.000    0.000    0.001    0.000 typing.py:2893(__new__)
        1    0.000    0.000    0.001    0.001 datetime.py:1(<module>)
     1747    0.001    0.000    0.001    0.000 enum.py:47(_is_dunder)
        1    0.000    0.000    0.001    0.001 defchararray.py:1(<module>)
        6    0.000    0.000    0.001    0.000 _docscrape.py:698(<listcomp>)
        1    0.000    0.000    0.001    0.001 depends.py:1(<module>)
       50    0.000    0.000    0.001    0.000 basic.py:737(as_dummy)
        1    0.000    0.000    0.001    0.001 __init__.py:1129(manager_path)
        1    0.000    0.000    0.001    0.001 _interpolation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2297(entropy)
       98    0.001    0.000    0.001    0.000 pathlib.py:56(parse_parts)
      886    0.001    0.000    0.001    0.000 typing.py:2374(get_origin)
      395    0.000    0.000    0.001    0.000 containers.py:110(__hash__)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2317(_entropy_quadrature)
        1    0.000    0.000    0.001    0.001 coord.py:1(<module>)
      401    0.000    0.000    0.001    0.000 _parser.py:82(opengroup)
       12    0.000    0.000    0.001    0.000 __init__.py:1852(_define_aliases)
        1    0.000    0.000    0.001    0.001 decimal.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2076(_quadrature)
     1286    0.001    0.000    0.001    0.000 enum.py:728(__delattr__)
       14    0.000    0.000    0.001    0.000 periodic_table.py:1608(get_el_sp)
        1    0.000    0.000    0.001    0.001 indexed.py:1(<module>)
       53    0.000    0.000    0.001    0.000 core.py:3161(parseImpl)
      664    0.000    0.000    0.001    0.000 _pytree.py:99(_get_node_type)
        1    0.000    0.000    0.001    0.001 special.py:1(<module>)
        1    0.000    0.000    0.001    0.001 unary.py:170(<dictcomp>)
        1    0.000    0.000    0.001    0.001 ImageMode.py:1(<module>)
        8    0.000    0.000    0.001    0.000 core.py:2951(_generateDefaultName)
        2    0.000    0.000    0.001    0.000 __init__.py:456(_get_config_or_cache_dir)
     5813    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.001    0.001 signal.py:1(<module>)
    24/12    0.000    0.000    0.001    0.000 core.py:4425(parseImpl)
        1    0.000    0.000    0.001    0.001 _nnls.py:1(<module>)
        1    0.000    0.000    0.001    0.001 scale.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _region.py:1(<module>)
       11    0.000    0.000    0.001    0.000 core.py:2952(charsAsStr)
        2    0.000    0.000    0.001    0.000 _procrustes.py:1(<module>)
     3037    0.001    0.000    0.001    0.000 _python_dispatch.py:89(<listcomp>)
        1    0.000    0.000    0.001    0.001 string.py:69(__init_subclass__)
      468    0.000    0.000    0.001    0.000 _parser.py:444(_uniq)
      485    0.001    0.000    0.001    0.000 _array_api.py:676(__str__)
      398    0.001    0.000    0.001    0.000 _util.py:526(<listcomp>)
        1    0.000    0.000    0.001    0.001 ElementPath.py:1(<module>)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._autograd_init}
     1820    0.001    0.000    0.001    0.000 _docscrape.py:156(__setitem__)
     5261    0.001    0.000    0.001    0.000 {built-in method numpy.asanyarray}
        1    0.000    0.000    0.001    0.001 _type_utils.py:1(<module>)
        1    0.000    0.000    0.001    0.001 grad.py:1(<module>)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1(<module>)
        3    0.000    0.000    0.001    0.000 ctx_mp.py:96(init_builtins)
     1721    0.001    0.000    0.001    0.000 typing.py:1631(__eq__)
        1    0.000    0.000    0.001    0.001 _short_time_fft.py:1(<module>)
        1    0.001    0.001    0.001    0.001 helpers.py:678(<dictcomp>)
     2667    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:165(__init__)
      110    0.000    0.000    0.001    0.000 _compiler.py:384(_mk_bitmap)
       80    0.001    0.000    0.001    0.000 function.py:289(__init__)
        1    0.000    0.000    0.001    0.001 runner.py:1(<module>)
        2    0.000    0.000    0.001    0.000 pathlib.py:1111(mkdir)
        1    0.001    0.001    0.001    0.001 events.py:644(BaseDefaultEventLoopPolicy)
        1    0.000    0.000    0.001    0.001 _tanhsinh.py:958(nsum)
        2    0.000    0.000    0.001    0.000 combinatorics.py:1(<module>)
     6898    0.001    0.000    0.001    0.000 {built-in method numpy.geterrobj}
        1    0.000    0.000    0.001    0.001 std.py:245(tqdm)
     1019    0.001    0.000    0.001    0.000 {method 'size' of 'torch._C._TensorBase' objects}
        3    0.000    0.000    0.001    0.000 feedparser.py:471(_parse_headers)
      266    0.000    0.000    0.001    0.000 <frozen _collections_abc>:859(__iter__)
       18    0.000    0.000    0.001    0.000 core.py:5230(parseImpl)
      235    0.001    0.000    0.001    0.000 core.py:456(__init__)
        1    0.000    0.000    0.001    0.001 reader.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _decomp_polar.py:1(<module>)
     2412    0.001    0.000    0.001    0.000 _parser.py:109(__init__)
      349    0.000    0.000    0.001    0.000 _docscrape.py:303(parse_item_name)
        2    0.001    0.000    0.001    0.000 {built-in method posix.mkdir}
        4    0.000    0.000    0.001    0.000 enum.py:822(_create_)
      327    0.001    0.000    0.001    0.000 <frozen posixpath>:60(isabs)
     1627    0.001    0.000    0.001    0.000 enum.py:58(_is_sunder)
        1    0.000    0.000    0.001    0.001 equality.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pydoc.py:1(<module>)
     5118    0.001    0.000    0.001    0.000 fromnumeric.py:2416(_all_dispatcher)
        1    0.000    0.000    0.001    0.001 _pocketfft.py:1(<module>)
        1    0.000    0.000    0.001    0.001 rnn.py:830(GRU)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1372(<listcomp>)
      750    0.000    0.000    0.001    0.000 numbers.py:1972(__ne__)
        1    0.000    0.000    0.001    0.001 _tensor_docs.py:1(<module>)
        1    0.000    0.000    0.001    0.001 unicode.py:80(alphanums)
     3208    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
       15    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:3136(moment)
       63    0.000    0.000    0.001    0.000 colors.py:829(reversed)
        1    0.000    0.000    0.001    0.001 parse.py:1(<module>)
        1    0.000    0.000    0.001    0.001 tools_common.py:78(FxNetAccFusionsFinder)
       27    0.000    0.000    0.001    0.000 pathlib.py:940(glob)
       93    0.000    0.000    0.001    0.000 composition.py:141(__init__)
      423    0.001    0.000    0.001    0.000 {method 'copy' of 'dict' objects}
       80    0.001    0.000    0.001    0.000 _array_api.py:682(_make_sphinx_capabilities)
     1008    0.000    0.000    0.001    0.000 colors.py:266(<genexpr>)
        6    0.000    0.000    0.001    0.000 _docscrape.py:684(<listcomp>)
        3    0.000    0.000    0.001    0.000 activation.py:1(<module>)
       58    0.000    0.000    0.001    0.000 wrappers.py:328(elementwise_unary_scalar_wrapper)
        1    0.000    0.000    0.001    0.001 pkgutil.py:506(extend_path)
       38    0.000    0.000    0.001    0.000 getlimits.py:111(_float_to_str)
       28    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:305(get_numerical_endpoints)
     2496    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:748(find_spec)
        1    0.000    0.000    0.001    0.001 complexfield.py:1(<module>)
       10    0.000    0.000    0.001    0.000 extras.py:233(__init__)
       20    0.000    0.000    0.001    0.000 typing.py:1357(__or__)
      428    0.001    0.000    0.001    0.000 libmpf.py:291(from_man_exp)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1597(__init__)
      269    0.000    0.000    0.001    0.000 __init__.py:304(<genexpr>)
        1    0.000    0.000    0.001    0.001 _web_request.py:1(<module>)
       71    0.000    0.000    0.001    0.000 enum.py:987(_find_new_)
       10    0.000    0.000    0.001    0.000 extras.py:237(getdoc)
        2    0.000    0.000    0.001    0.000 unicode.py:55(_chars_for_ranges)
       90    0.000    0.000    0.001    0.000 basic.py:475(<listcomp>)
        1    0.000    0.000    0.001    0.001 pickletools.py:1(<module>)
        1    0.000    0.000    0.001    0.001 unicode.py:70(alphas)
        1    0.000    0.000    0.001    0.001 _web_response.py:1(<module>)
        6    0.001    0.000    0.001    0.000 {method 'decompress' of 'zlib.Decompress' objects}
     20/6    0.000    0.000    0.001    0.000 core.py:4698(parseImpl)
       65    0.000    0.000    0.001    0.000 assumptions.py:497(getit)
  335/280    0.000    0.000    0.001    0.000 _compiler.py:434(_get_literal_prefix)
        1    0.000    0.000    0.001    0.001 __init__.py:569(matplotlib_fname)
        2    0.000    0.000    0.001    0.000 sysconfig.py:185(_safe_realpath)
        1    0.000    0.000    0.001    0.001 beta_functions.py:1(<module>)
       83    0.000    0.000    0.001    0.000 deprecation.py:222(finalize)
        1    0.000    0.000    0.001    0.001 pooling.py:1(<module>)
      431    0.000    0.000    0.001    0.000 _util.py:541(<genexpr>)
        2    0.000    0.000    0.001    0.000 <frozen posixpath>:411(realpath)
       34    0.000    0.000    0.001    0.000 symbol.py:494(__new__)
        1    0.000    0.000    0.001    0.001 conventions.py:1(<module>)
      840    0.001    0.000    0.001    0.000 {built-in method torch._has_compatible_shallow_copy_type}
     2164    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1097(__init__)
        1    0.000    0.000    0.001    0.001 latex.py:1(<module>)
       26    0.000    0.000    0.001    0.000 _hook_iterator.py:102(hook_iterator)
      297    0.000    0.000    0.001    0.000 _parser.py:222(__init__)
        1    0.000    0.000    0.001    0.001 tarfile.py:1(<module>)
     1246    0.000    0.000    0.001    0.000 _docscrape.py:454(_str_header)
       42    0.000    0.000    0.001    0.000 {numpy.random._generator.default_rng}
      186    0.000    0.000    0.001    0.000 typing.py:1673(__hash__)
      3/2    0.000    0.000    0.001    0.000 <frozen posixpath>:420(_joinrealpath)
        1    0.000    0.000    0.001    0.001 periodic_table.py:865(Element)
        1    0.000    0.000    0.001    0.001 dataset.py:1(<module>)
      266    0.000    0.000    0.001    0.000 dataclasses.py:380(_tuple_str)
        1    0.000    0.000    0.001    0.001 reinplace.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _realtransforms.py:1(<module>)
        1    0.000    0.000    0.001    0.001 interpolative.py:1(<module>)
     2776    0.001    0.000    0.001    0.000 facts.py:582(_tell)
        1    0.000    0.000    0.001    0.001 complexfield.py:48(__init__)
        1    0.000    0.000    0.001    0.001 libintmath.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ctx_iv.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:1(<module>)
        2    0.000    0.000    0.001    0.000 loader.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _graph_traversal.py:1(<module>)
      106    0.000    0.000    0.001    0.000 typing.py:932(__init__)
        1    0.000    0.000    0.001    0.001 ctx_iv.py:306(__init__)
        1    0.000    0.000    0.001    0.001 tensor_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 symbolic_opset10.py:1(<module>)
      130    0.000    0.000    0.001    0.000 dataclasses.py:371(_fields_in_init_order)
        1    0.000    0.000    0.001    0.001 texmanager.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _exception.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:149(EntryPoint)
        1    0.000    0.000    0.001    0.001 _linalg.py:1(<module>)
       50    0.000    0.000    0.001    0.000 containers.py:177(<lambda>)
        1    0.000    0.000    0.001    0.001 _suppression.py:1(<module>)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._rpc_init}
        1    0.000    0.000    0.001    0.001 figure.py:220(Figure)
        1    0.000    0.000    0.001    0.001 TiffTags.py:1(<module>)
        4    0.000    0.000    0.001    0.000 __init__.py:590(gen_candidates)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1616(_update_parameters)
       61    0.000    0.000    0.001    0.000 core.py:4672(__init__)
     3959    0.001    0.000    0.001    0.000 typing.py:1341(<genexpr>)
        1    0.000    0.000    0.001    0.001 sampler.py:1(<module>)
       45    0.000    0.000    0.001    0.000 basic.py:1386(has)
        1    0.000    0.000    0.001    0.001 _result_provenance.py:1(<module>)
       19    0.000    0.000    0.001    0.000 functools.py:852(register)
      544    0.000    0.000    0.001    0.000 registration.py:159(add)
        1    0.000    0.000    0.001    0.001 _text.py:1(<module>)
      185    0.000    0.000    0.001    0.000 inspect.py:1449(formatannotation)
       29    0.000    0.000    0.001    0.000 _array_api.py:553(xp_promote)
        3    0.000    0.000    0.001    0.000 arrayprint.py:1487(_array_repr_implementation)
        4    0.000    0.000    0.001    0.000 __init__.py:2295(_make_reduction_prim)
     4835    0.001    0.000    0.001    0.000 _ops.py:398(name)
        1    0.000    0.000    0.001    0.001 _rectangle.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:27(_parse_docstrings)
     4878    0.001    0.000    0.001    0.000 basic.py:906(args)
        1    0.000    0.000    0.001    0.001 _special_matrices.py:1(<module>)
     3970    0.001    0.000    0.001    0.000 {method 'values' of 'mappingproxy' objects}
        1    0.000    0.000    0.001    0.001 ticker.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _translation_metadata.py:1(<module>)
       72    0.000    0.000    0.001    0.000 pydoc.py:104(_finddoc)
        5    0.000    0.000    0.001    0.000 decorator.py:177(create)
       10    0.000    0.000    0.001    0.000 dataclasses.py:846(_hash_add)
        1    0.000    0.000    0.001    0.001 ase.py:1(<module>)
        1    0.000    0.000    0.001    0.001 operator_support.py:1(<module>)
      664    0.000    0.000    0.001    0.000 _pytree.py:89(_is_namedtuple_instance)
      237    0.000    0.000    0.001    0.000 libmpf.py:330(from_int)
     1019    0.001    0.000    0.001    0.000 {built-in method math.floor}
        1    0.000    0.000    0.001    0.001 __init__.py:1151(<listcomp>)
       82    0.000    0.000    0.001    0.000 __init__.py:1873(make_alias)
      245    0.000    0.000    0.001    0.000 _docscrape.py:591(get_func)
        1    0.000    0.000    0.001    0.001 _elffile.py:1(<module>)
        6    0.000    0.000    0.001    0.000 pathlib.py:1245(is_dir)
        3    0.000    0.000    0.001    0.000 arrayprint.py:561(array2string)
      330    0.000    0.000    0.001    0.000 basic.py:468(inner_key)
        1    0.000    0.000    0.001    0.001 __init__.py:486(get_configdir)
     5303    0.001    0.000    0.001    0.000 inspect.py:3024(parameters)
       87    0.000    0.000    0.001    0.000 utils.py:83(groupby)
        1    0.000    0.000    0.001    0.001 _logical_location.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _stack_frame.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _version_control_details.py:1(<module>)
        1    0.000    0.000    0.001    0.001 polar.py:1(<module>)
        6    0.000    0.000    0.001    0.000 printer.py:424(decorator)
      420    0.000    0.000    0.001    0.000 _ops.py:505(overloads)
     6709    0.001    0.000    0.001    0.000 {built-in method builtins.ord}
       45    0.000    0.000    0.001    0.000 basic.py:1507(_has)
        1    0.000    0.000    0.001    0.001 texmanager.py:47(TexManager)
      130    0.000    0.000    0.001    0.000 dataclasses.py:574(<listcomp>)
        1    0.000    0.000    0.001    0.001 registration.py:1(<module>)
       63    0.000    0.000    0.001    0.000 colors.py:848(<dictcomp>)
        1    0.001    0.001    0.001    0.001 platform.py:781(uname_result)
        1    0.000    0.000    0.001    0.001 six.py:1(<module>)
       58    0.000    0.000    0.001    0.000 <frozen abc>:110(register)
       42    0.000    0.000    0.001    0.000 symbol.py:359(__xnew__)
        6    0.000    0.000    0.001    0.000 pathlib.py:1008(stat)
        6    0.000    0.000    0.001    0.000 printer.py:392(__init__)
       19    0.001    0.000    0.001    0.000 {built-in method posix.lstat}
        1    0.000    0.000    0.001    0.001 __init__.py:345(<listcomp>)
        1    0.000    0.000    0.001    0.001 __init__.py:421(PercentStyle)
        1    0.000    0.000    0.001    0.001 _page_trend_test.py:1(<module>)
      790    0.000    0.000    0.001    0.000 containers.py:66(__len__)
        1    0.000    0.000    0.001    0.001 _message.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ordinals.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _short_time_fft.py:229(ShortTimeFFT)
        1    0.000    0.000    0.001    0.001 _node.py:1(<module>)
        1    0.001    0.001    0.001    0.001 comments.py:1007(CommentedKeyMap)
        1    0.000    0.000    0.001    0.001 widgets.py:1(<module>)
       10    0.000    0.000    0.001    0.000 dataclasses.py:639(_hash_fn)
        1    0.000    0.000    0.001    0.001 diagonal.py:1(<module>)
        8    0.000    0.000    0.001    0.000 __init__.py:794(children)
      639    0.000    0.000    0.001    0.000 ctx_mp_python.py:1014(_wrap_specfun)
      540    0.000    0.000    0.001    0.000 _tensor_docs.py:8(add_docstr_all)
        1    0.000    0.000    0.001    0.001 gzip.py:25(open)
       12    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:943(filtered)
        1    0.001    0.001    0.001    0.001 modules.py:606(SubModule)
       18    0.000    0.000    0.001    0.000 arrayprint.py:1595(_array_str_implementation)
     5522    0.001    0.000    0.001    0.000 copy.py:182(_deepcopy_atomic)
       58    0.000    0.000    0.000    0.000 {built-in method _abc._abc_register}
      271    0.000    0.000    0.000    0.000 _parser.py:307(_class_escape)
        1    0.000    0.000    0.000    0.000 internal.py:1(<module>)
      146    0.000    0.000    0.000    0.000 deprecation.py:24(_generate_deprecation_warning)
      540    0.000    0.000    0.000    0.000 dataclasses.py:821(_set_qualname)
        1    0.000    0.000    0.000    0.000 binary.py:174(<dictcomp>)
     1318    0.000    0.000    0.000    0.000 enum.py:69(_is_internal_class)
        2    0.000    0.000    0.000    0.000 qconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 relativedelta.py:18(relativedelta)
     1406    0.000    0.000    0.000    0.000 _parser.py:79(groups)
      163    0.000    0.000    0.000    0.000 iterables.py:585(sift)
        1    0.000    0.000    0.000    0.000 csv.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bz2.py:271(open)
        1    0.000    0.000    0.000    0.000 return_types.py:1(<module>)
      544    0.000    0.000    0.000    0.000 registration.py:135(__init__)
        7    0.000    0.000    0.000    0.000 periodic_table.py:1223(from_str)
      248    0.000    0.000    0.000    0.000 _docscrape.py:531(_str_index)
        1    0.000    0.000    0.000    0.000 gzip.py:134(__init__)
        3    0.000    0.000    0.000    0.000 arrayprint.py:523(_array2string)
      217    0.000    0.000    0.000    0.000 enum.py:913(_check_for_existing_members_)
        1    0.000    0.000    0.000    0.000 polygon.py:1(<module>)
       16    0.000    0.000    0.000    0.000 arraypad.py:533(pad)
        1    0.000    0.000    0.000    0.000 pyplot.py:1872(get_plot_commands)
       23    0.000    0.000    0.000    0.000 overrides.py:177(decorator)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 node.py:105(Node)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:291(_get_axis_params)
     2213    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
       14    0.000    0.000    0.000    0.000 __init__.py:2089(_warn_external)
       40    0.000    0.000    0.000    0.000 mul.py:483(_gather)
      163    0.000    0.000    0.000    0.000 fromnumeric.py:53(_wrapfunc)
       87    0.000    0.000    0.000    0.000 conflict.py:67(<dictcomp>)
      129    0.000    0.000    0.000    0.000 ctx_mp_python.py:979(_wrap_libmp_function)
       28    0.000    0.000    0.000    0.000 _decorator.py:23(__call__)
      146    0.000    0.000    0.000    0.000 enum.py:959(_find_data_type_)
     3709    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:71(_relax_case)
        1    0.000    0.000    0.000    0.000 libintmath.py:127(<listcomp>)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:1(<module>)
      325    0.000    0.000    0.000    0.000 function_base.py:483(_add_docstring)
     1164    0.000    0.000    0.000    0.000 {built-in method torch._C._add_docstr}
        1    0.000    0.000    0.000    0.000 _location_relationship.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _physical_location.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _isotonic.py:1(<module>)
      748    0.000    0.000    0.000    0.000 dataclasses.py:267(__init__)
     2369    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
   190/92    0.000    0.000    0.000    0.000 core.py:1956(__str__)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:1(<module>)
      115    0.000    0.000    0.000    0.000 containers.py:100(__eq__)
       87    0.000    0.000    0.000    0.000 utils.py:61(reverse_dict)
     1293    0.000    0.000    0.000    0.000 inspect.py:1182(tokeneater)
       15    0.000    0.000    0.000    0.000 typing.py:2916(<dictcomp>)
     1191    0.000    0.000    0.000    0.000 libintmath.py:91(python_bitcount)
        1    0.000    0.000    0.000    0.000 backend_agg.py:389(FigureCanvasAgg)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:1(<module>)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:1(<module>)
     10/4    0.000    0.000    0.000    0.000 core.py:4409(streamline)
      129    0.000    0.000    0.000    0.000 fromnumeric.py:1025(argsort)
        1    0.000    0.000    0.000    0.000 bz2.py:37(__init__)
       24    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:386(draw)
      117    0.000    0.000    0.000    0.000 typing.py:1020(__typing_subst__)
        1    0.000    0.000    0.000    0.000 utils.py:34(envwrap)
        1    0.000    0.000    0.000    0.000 _cm_listed.py:1(<module>)
     2336    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1565(<genexpr>)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 encoder.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _edge.py:1(<module>)
      347    0.000    0.000    0.000    0.000 pretty_symbology.py:10(U)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3211(_moment_central_dispatch)
        1    0.000    0.000    0.000    0.000 _trace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ops.py:1(<module>)
      174    0.000    0.000    0.000    0.000 <frozen posixpath>:71(join)
        1    0.000    0.000    0.000    0.000 para4tb.py:24(<listcomp>)
       18    0.000    0.000    0.000    0.000 arrayprint.py:1588(_guarded_repr_or_str)
        1    0.000    0.000    0.000    0.000 utils.py:73(<dictcomp>)
        6    0.000    0.000    0.000    0.000 _version.py:55(__init__)
     1706    0.000    0.000    0.000    0.000 {method 'set' of '_contextvars.ContextVar' objects}
        1    0.000    0.000    0.000    0.000 timeouts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:1(<module>)
        1    0.000    0.000    0.000    0.000 projections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _scalars.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:1(<module>)
       25    0.000    0.000    0.000    0.000 decorator.py:317(deprecated_decorator)
        2    0.000    0.000    0.000    0.000 __init__.py:2078(_make_copy_from_view)
     1036    0.000    0.000    0.000    0.000 _parser.py:166(__setitem__)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 join.py:1(<module>)
     1272    0.000    0.000    0.000    0.000 typing.py:882(__eq__)
      436    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
        5    0.000    0.000    0.000    0.000 perm_groups.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 version.py:112(StrictVersion)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:1(<module>)
        1    0.000    0.000    0.000    0.000 interpreter.py:16(Interpreter)
        1    0.000    0.000    0.000    0.000 reductions.py:148(<dictcomp>)
        1    0.000    0.000    0.000    0.000 due.py:1(<module>)
       52    0.000    0.000    0.000    0.000 core.py:894(__init__)
  460/100    0.000    0.000    0.000    0.000 sorting.py:168(_node_count)
        2    0.000    0.000    0.000    0.000 sysconfig.py:621(get_path)
        5    0.000    0.000    0.000    0.000 ctx_iv.py:244(_binary_op)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1779(_validate)
        1    0.000    0.000    0.000    0.000 dataloader.py:129(DataLoader)
      398    0.000    0.000    0.000    0.000 _util.py:531(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:505(get_cachedir)
        2    0.000    0.000    0.000    0.000 sysconfig.py:609(get_paths)
        1    0.000    0.000    0.000    0.000 request.py:939(AbstractBasicAuthHandler)
        6    0.000    0.000    0.000    0.000 deprecation.py:56(warn_deprecated)
      459    0.000    0.000    0.000    0.000 iterables.py:1943(<genexpr>)
      148    0.000    0.000    0.000    0.000 enum.py:753(__getattr__)
       10    0.000    0.000    0.000    0.000 contextlib.py:78(inner)
       86    0.000    0.000    0.000    0.000 _parser.py:265(getuntil)
        2    0.000    0.000    0.000    0.000 sysconfig.py:261(_expand_vars)
      135    0.000    0.000    0.000    0.000 pyplot.py:1884(<genexpr>)
       49    0.000    0.000    0.000    0.000 core.py:131(get_object_signature)
     1694    0.000    0.000    0.000    0.000 unicode.py:63(<genexpr>)
      776    0.000    0.000    0.000    0.000 enum.py:188(__get__)
      471    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        1    0.000    0.000    0.000    0.000 options.py:1(<module>)
       25    0.000    0.000    0.000    0.000 typing.py:2013(__init_subclass__)
        1    0.000    0.000    0.000    0.000 queue.py:1(<module>)
        1    0.000    0.000    0.000    0.000 shape_prop.py:1(<module>)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:358(decorator)
        1    0.000    0.000    0.000    0.000 _property_bag.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3276(_moment_standardized)
      110    0.000    0.000    0.000    0.000 _compiler.py:386(<listcomp>)
       57    0.000    0.000    0.000    0.000 <frozen posixpath>:228(expanduser)
        2    0.000    0.000    0.000    0.000 __init__.py:474(_get_data_path)
        1    0.000    0.000    0.000    0.000 str.py:1(<module>)
       54    0.000    0.000    0.000    0.000 decorators.py:46(deco)
        1    0.000    0.000    0.000    0.000 ImageFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_registry.py:1(<module>)
       68    0.000    0.000    0.000    0.000 _internal.py:14(get_xp)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:833(validation)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _fix.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3282(_moment_standardized_dispatch)
      266    0.000    0.000    0.000    0.000 inspect.py:973(getmodule)
        1    0.000    0.000    0.000    0.000 ops.py:89(get_ops_with_reflection)
  157/148    0.000    0.000    0.000    0.000 fake_tensor.py:92(contains_tensor_types)
        1    0.000    0.000    0.000    0.000 main.py:57(__init__)
      188    0.000    0.000    0.000    0.000 colors.py:850(<listcomp>)
     4061    0.000    0.000    0.000    0.000 inspect.py:2733(default)
     1716    0.000    0.000    0.000    0.000 _ufunc_config.py:426(__init__)
      109    0.000    0.000    0.000    0.000 inspect.py:2068(_signature_is_builtin)
        2    0.000    0.000    0.000    0.000 _functions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:18(__init__)
       26    0.000    0.000    0.000    0.000 core.py:6855(__init__)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:647(_is_classvar)
        1    0.000    0.000    0.000    0.000 artist.py:1236(ArtistInspector)
      140    0.000    0.000    0.000    0.000 basic.py:497(__eq__)
        1    0.000    0.000    0.000    0.000 hashlib.py:1(<module>)
     2603    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        1    0.000    0.000    0.000    0.000 entities.py:1(<module>)
        6    0.000    0.000    0.000    0.000 rcsetup.py:340(validate_color_or_inherit)
        1    0.000    0.000    0.000    0.000 piecewise.py:1(<module>)
      398    0.000    0.000    0.000    0.000 _util.py:536(<listcomp>)
        1    0.000    0.000    0.000    0.000 collate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:295(<dictcomp>)
        1    0.000    0.000    0.000    0.000 matadd.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4172(get_distribution_names)
     2169    0.000    0.000    0.000    0.000 typing.py:1662(<genexpr>)
       87    0.000    0.000    0.000    0.000 _docscrape.py:658(splitlines_x)
      154    0.000    0.000    0.000    0.000 <frozen _collections_abc>:428(__new__)
      778    0.000    0.000    0.000    0.000 _ops.py:419(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method torch.max}
       54    0.000    0.000    0.000    0.000 decorators.py:52(__sympifyit)
        1    0.000    0.000    0.000    0.000 hadamard.py:1(<module>)
       26    0.000    0.000    0.000    0.000 core.py:6860(getdoc)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:664(register_var_mean)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3308(_moment_standardized_normalize)
     1760    0.000    0.000    0.000    0.000 dataclasses.py:427(<genexpr>)
      231    0.000    0.000    0.000    0.000 _compiler.py:465(_get_charset_prefix)
        1    0.000    0.000    0.000    0.000 main.py:761(official_plug_ins)
       91    0.000    0.000    0.000    0.000 core.py:2408(__init__)
        9    0.000    0.000    0.000    0.000 _multivariate.py:5755(_docfill)
        1    0.000    0.000    0.000    0.000 dlpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutation.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _deprecation.py:20(decorator)
       62    0.000    0.000    0.000    0.000 decorator.py:233(memoize_property)
       82    0.000    0.000    0.000    0.000 linecache.py:52(checkcache)
       50    0.000    0.000    0.000    0.000 numbers.py:1622(__eq__)
      482    0.000    0.000    0.000    0.000 dataclasses.py:306(__set_name__)
        1    0.000    0.000    0.000    0.000 band_data_in.py:60(generate_k_path)
        1    0.000    0.000    0.000    0.000 selectors.py:1(<module>)
      347    0.000    0.000    0.000    0.000 {built-in method unicodedata.lookup}
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:1(<module>)
      398    0.000    0.000    0.000    0.000 _util.py:553(<dictcomp>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 compatibility.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mlab.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gammasimp.py:1(<module>)
      398    0.000    0.000    0.000    0.000 _util.py:550(<dictcomp>)
       14    0.000    0.000    0.000    0.000 hashlib.py:126(__get_openssl_constructor)
        1    0.000    0.000    0.000    0.000 pickle.py:197(<listcomp>)
      398    0.000    0.000    0.000    0.000 _util.py:546(<listcomp>)
        1    0.000    0.000    0.000    0.000 _spdx.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1506(UnivariateDistribution)
        1    0.000    0.000    0.000    0.000 ask.py:21(AssumptionKeys)
        3    0.000    0.000    0.000    0.000 typing.py:2852(NamedTuple)
        2    0.000    0.000    0.000    0.000 determinant.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset8.py:1(<module>)
      200    0.000    0.000    0.000    0.000 matrix_element.py:90(__extract_var)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1122(get_filename)
        1    0.000    0.000    0.000    0.000 glob.py:13(glob)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:1(<module>)
     2361    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:413(has_location)
      456    0.000    0.000    0.000    0.000 feedparser.py:128(__next__)
      200    0.000    0.000    0.000    0.000 matrix_element.py:41(<listcomp>)
        1    0.000    0.000    0.000    0.000 _special_locations.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datapipes.py:1(<module>)
        3    0.000    0.000    0.000    0.000 decorators.py:123(sympify_method_args)
      191    0.000    0.000    0.000    0.000 typing.py:1608(<genexpr>)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:724(validate)
     3323    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       10    0.000    0.000    0.000    0.000 _torch_docs.py:10(parse_kwargs)
        3    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(_held_figure)
        5    0.000    0.000    0.000    0.000 decorator.py:144(make)
        1    0.000    0.000    0.000    0.000 colorbar.py:321(ColorbarBase)
     1706    0.000    0.000    0.000    0.000 {method 'reset' of '_contextvars.ContextVar' objects}
        3    0.000    0.000    0.000    0.000 functions.py:1(<module>)
      171    0.000    0.000    0.000    0.000 typing.py:1287(__instancecheck__)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:204(Tracer)
     1371    0.000    0.000    0.000    0.000 {method 'capitalize' of 'str' objects}
        3    0.000    0.000    0.000    0.000 decorator.py:200(decorate)
      829    0.000    0.000    0.000    0.000 {method 'update' of 'set' objects}
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1293(_get_parent_path)
        4    0.000    0.000    0.000    0.000 assumptions.py:509(_ask)
        6    0.000    0.000    0.000    0.000 typing.py:1360(__ror__)
       13    0.000    0.000    0.000    0.000 deprecation.py:277(_rename_parameter)
        1    0.000    0.000    0.000    0.000 constraints.py:1(<module>)
       35    0.000    0.000    0.000    0.000 transforms.py:1251(__init_subclass__)
        1    0.000    0.000    0.000    0.000 __init__.py:516(get_data_path)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:655(_is_initvar)
        1    0.000    0.000    0.000    0.000 argparse.py:1(<module>)
     2523    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 base64.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _sources.py:1(<module>)
      240    0.000    0.000    0.000    0.000 functools.py:479(lru_cache)
      100    0.000    0.000    0.000    0.000 iterables.py:1970(uniq)
      115    0.000    0.000    0.000    0.000 inspect.py:776(_findclass)
        1    0.000    0.000    0.000    0.000 containers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 types.py:1(<module>)
       19    0.000    0.000    0.000    0.000 path.py:98(__init__)
      3/1    0.000    0.000    0.000    0.000 glob.py:60(_iglob)
        3    0.000    0.000    0.000    0.000 arrayprint.py:452(_get_format_function)
        1    0.000    0.000    0.000    0.000 threading.py:1(<module>)
      216    0.000    0.000    0.000    0.000 _policybase.py:293(header_source_parse)
       52    0.000    0.000    0.000    0.000 package_importer.py:687(_patched_getfile)
        4    0.000    0.000    0.000    0.000 core.py:1518(__mul__)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:1125(_qualified_name)
       54    0.000    0.000    0.000    0.000 __init__.py:1378(_fixupParents)
      757    0.000    0.000    0.000    0.000 __init__.py:907(<lambda>)
      735    0.000    0.000    0.000    0.000 dataclasses.py:511(_init_param)
      129    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
       43    0.000    0.000    0.000    0.000 decompositions.py:43(type_casts)
       62    0.000    0.000    0.000    0.000 __init__.py:873(normalize)
        1    0.000    0.000    0.000    0.000 _base.py:422(_AxesBase)
       24    0.000    0.000    0.000    0.000 core.py:5818(__init__)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importtools.py:1(<module>)
       40    0.000    0.000    0.000    0.000 core.py:2462(__init__)
        1    0.000    0.000    0.000    0.000 _script.py:892(_get_methods)
       17    0.000    0.000    0.000    0.000 getlimits.py:484(__new__)
       34    0.000    0.000    0.000    0.000 core.py:3064(__init__)
       10    0.000    0.000    0.000    0.000 symbol.py:654(symbols)
      436    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      536    0.000    0.000    0.000    0.000 function_base.py:348(iterable)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glob.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:537(_get_data_path)
        1    0.000    0.000    0.000    0.000 _meta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 smtlib.py:25(SMTLibPrinter)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3017(sample)
       26    0.000    0.000    0.000    0.000 _sources.py:102(make_source_context)
        1    0.000    0.000    0.000    0.000 bonds.py:1(<module>)
      590    0.000    0.000    0.000    0.000 _compiler.py:568(isstring)
       22    0.000    0.000    0.000    0.000 core.py:4215(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 axis.py:628(Axis)
        1    0.000    0.000    0.000    0.000 sharding.py:1(<module>)
        1    0.000    0.000    0.000    0.000 geo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nanfunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:72(ElementBase)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
       30    0.000    0.000    0.000    0.000 _array_api.py:503(xp_result_type)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _color_data.py:1(<module>)
        2    0.000    0.000    0.000    0.000 doccer.py:263(filldoc)
       71    0.000    0.000    0.000    0.000 typing.py:335(_flatten_literal_params)
        1    0.000    0.000    0.000    0.000 profiler_util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gmpy.py:110(_get_flint)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:352(contains)
        1    0.000    0.000    0.000    0.000 heapq.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tensor.py:81(Tensor)
        2    0.000    0.000    0.000    0.000 doccer.py:292(unindent_dict)
      295    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
       73    0.000    0.000    0.000    0.000 rcsetup.py:90(<listcomp>)
        1    0.000    0.000    0.000    0.000 symbolic_opset12.py:1(<module>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1536(from_str)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:1(<module>)
      295    0.000    0.000    0.000    0.000 _distn_infrastructure.py:839(<genexpr>)
        1    0.000    0.000    0.000    0.000 passthrough.py:1(<module>)
        1    0.000    0.000    0.000    0.000 split_module.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:258(WordSet)
        1    0.000    0.000    0.000    0.000 para4band.py:122(Para4Band_train)
        1    0.000    0.000    0.000    0.000 binrel.py:1(<module>)
        1    0.000    0.000    0.000    0.000 markers.py:145(MarkerStyle)
        1    0.000    0.000    0.000    0.000 _conversions.py:1(<module>)
      958    0.000    0.000    0.000    0.000 utils.py:56(<genexpr>)
        2    0.000    0.000    0.000    0.000 hashlib.py:82(__get_builtin_constructor)
        3    0.000    0.000    0.000    0.000 arrayprint.py:411(<lambda>)
        1    0.000    0.000    0.000    0.000 pkgutil.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _foreach_utils.py:1(<module>)
       18    0.000    0.000    0.000    0.000 message.py:489(get)
        7    0.000    0.000    0.000    0.000 power.py:136(__new__)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:25(__init__)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:85(NamedMemberAccessor)
       41    0.000    0.000    0.000    0.000 decorators.py:110(priority_decorator)
       26    0.000    0.000    0.000    0.000 _sources.py:37(normalize_source_lines)
       77    0.000    0.000    0.000    0.000 <frozen posixpath>:150(dirname)
       21    0.000    0.000    0.000    0.000 symbol.py:325(__new__)
        1    0.000    0.000    0.000    0.000 matrixbase.py:99(MatrixBase)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:931(create_module)
      187    0.000    0.000    0.000    0.000 typing.py:908(_is_unpacked_typevartuple)
        1    0.000    0.000    0.000    0.000 collections.py:22(Collection)
        3    0.000    0.000    0.000    0.000 arrayprint.py:907(__init__)
        1    0.000    0.000    0.000    0.000 partitions.py:1(<module>)
       43    0.000    0.000    0.000    0.000 {built-in method torch.ones}
        4    0.000    0.000    0.000    0.000 assumptions.py:481(copy)
        1    0.000    0.000    0.000    0.000 struct.py:1(<module>)
  420/397    0.000    0.000    0.000    0.000 basic.py:315(__hash__)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:771(register_view)
      367    0.000    0.000    0.000    0.000 permutations.py:1385(<listcomp>)
     1330    0.000    0.000    0.000    0.000 {built-in method sys.intern}
        1    0.000    0.000    0.000    0.000 pathlib.py:313(select_from)
      790    0.000    0.000    0.000    0.000 containers.py:63(<genexpr>)
        1    0.000    0.000    0.000    0.000 add.py:1(<module>)
        8    0.000    0.000    0.000    0.000 typing.py:2248(get_type_hints)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:633(__new__)
       10    0.000    0.000    0.000    0.000 _contextlib.py:123(__call__)
        1    0.000    0.000    0.000    0.000 _mgc.py:1(<module>)
       24    0.000    0.000    0.000    0.000 doccer.py:311(unindent_string)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2391(skewness)
        1    0.000    0.000    0.000    0.000 zipfile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 para4band.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:49(__init__)
        5    0.000    0.000    0.000    0.000 perm_groups.py:146(<listcomp>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:1(<module>)
        3    0.000    0.000    0.000    0.000 streams.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:257(LOBPCGAutogradFunction)
      605    0.000    0.000    0.000    0.000 _inspect.py:13(ismethod)
       17    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
        1    0.000    0.000    0.000    0.000 proxy.py:83(TracerBase)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1(<module>)
       73    0.000    0.000    0.000    0.000 _internal.py:872(_ufunc_doc_signature_formatter)
        1    0.000    0.000    0.000    0.000 callable.py:171(CollatorIterDataPipe)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3247(_moment_central_transform)
       14    0.000    0.000    0.000    0.000 __init__.py:198(split)
        1    0.000    0.000    0.000    0.000 bonds.py:21(_load_bond_length_data)
        1    0.000    0.000    0.000    0.000 padding.py:1(<module>)
        2    0.000    0.000    0.000    0.000 traceback.py:29(format_list)
        1    0.000    0.000    0.000    0.000 numpy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adjoint.py:1(<module>)
     12/2    0.000    0.000    0.000    0.000 core.py:1578(makeOptionalList)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1057(__hash__)
       71    0.000    0.000    0.000    0.000 inspect.py:2745(replace)
        1    0.000    0.000    0.000    0.000 contextvars.py:1(<module>)
        1    0.000    0.000    0.000    0.000 functional_call.py:1(<module>)
      156    0.000    0.000    0.000    0.000 inspect.py:330(isdatadescriptor)
        1    0.000    0.000    0.000    0.000 unicode.py:1(<module>)
        2    0.000    0.000    0.000    0.000 decorator.py:215(decorator)
        2    0.000    0.000    0.000    0.000 conv_fused.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _sources.py:87(__init__)
      190    0.000    0.000    0.000    0.000 pyplot.py:82(_copy_docstring_and_deprecators)
        1    0.000    0.000    0.000    0.000 sysconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:385(register_full)
        2    0.000    0.000    0.000    0.000 normalization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 case.py:1(<module>)
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:292(_apply)
        3    0.000    0.000    0.000    0.000 arrayprint.py:934(fillFormat)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:1(<module>)
      453    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}
        7    0.000    0.000    0.000    0.000 pathlib.py:909(home)
        2    0.000    0.000    0.000    0.000 operations.py:623(register_handlerclass)
        1    0.000    0.000    0.000    0.000 dviread.py:185(Dvi)
     1019    0.000    0.000    0.000    0.000 _tensor_str.py:173(width)
      686    0.000    0.000    0.000    0.000 inspect.py:2457(<lambda>)
        1    0.000    0.000    0.000    0.000 _musllinux.py:1(<module>)
      840    0.000    0.000    0.000    0.000 {method 'is_floating_point' of 'torch._C._TensorBase' objects}
        2    0.000    0.000    0.000    0.000 traceback.py:1(<module>)
      171    0.000    0.000    0.000    0.000 typing.py:1546(__subclasscheck__)
    429/1    0.000    0.000    0.000    0.000 __config__.py:14(_cleanup)
      606    0.000    0.000    0.000    0.000 <frozen posixpath>:41(_get_sep)
       87    0.000    0.000    0.000    0.000 docstring.py:38(__call__)
     1706    0.000    0.000    0.000    0.000 numeric.py:2166(_allclose_dispatcher)
        1    0.000    0.000    0.000    0.000 pickletools.py:2224(assure_pickle_consistency)
        2    0.000    0.000    0.000    0.000 sysconfig.py:253(_extend_dict)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1276(__init__)
     49/1    0.000    0.000    0.000    0.000 __config__.py:20(<dictcomp>)
        1    0.000    0.000    0.000    0.000 glob.py:105(_glob1)
      268    0.000    0.000    0.000    0.000 libmpf.py:322(<genexpr>)
        2    0.000    0.000    0.000    0.000 units.py:1(<module>)
        1    0.000    0.000    0.000    0.000 streamreader.py:1(<module>)
        1    0.000    0.000    0.000    0.000 kronecker.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _decorator.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transformer.py:1(<module>)
       52    0.000    0.000    0.000    0.000 inspect.py:896(getfile)
      325    0.000    0.000    0.000    0.000 function_base.py:465(_needs_add_docstring)
     2914    0.000    0.000    0.000    0.000 basic.py:208(__sympy__)
       27    0.000    0.000    0.000    0.000 singleton.py:190(__init__)
        1    0.000    0.000    0.000    0.000 bisect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:310(Pair)
     1239    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
      259    0.000    0.000    0.000    0.000 dataclasses.py:389(<listcomp>)
       79    0.000    0.000    0.000    0.000 core.py:4216(<genexpr>)
       95    0.000    0.000    0.000    0.000 permutations.py:2051(is_identity)
        4    0.000    0.000    0.000    0.000 sparse.py:1(<module>)
      232    0.000    0.000    0.000    0.000 function.py:147(<listcomp>)
       24    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:71(add_newdoc_for_scalar_type)
        1    0.000    0.000    0.000    0.000 __init__.py:917(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1504(<dictcomp>)
        2    0.000    0.000    0.000    0.000 quant_type.py:1(<module>)
       12    0.000    0.000    0.000    0.000 message.py:591(get_content_type)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1(<module>)
      251    0.000    0.000    0.000    0.000 _docscrape.py:393(<setcomp>)
        4    0.000    0.000    0.000    0.000 constants.py:1(<module>)
      295    0.000    0.000    0.000    0.000 _parser.py:954(fix_flags)
       32    0.000    0.000    0.000    0.000 rcsetup.py:925(<genexpr>)
        1    0.000    0.000    0.000    0.000 TiffTags.py:439(_populate)
      172    0.000    0.000    0.000    0.000 decorator.py:184(public)
        3    0.000    0.000    0.000    0.000 pyplot.py:794(close)
      130    0.000    0.000    0.000    0.000 dataclasses.py:550(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:1(<module>)
   160/80    0.000    0.000    0.000    0.000 module.py:2224(named_modules)
        1    0.000    0.000    0.000    0.000 isoparser.py:1(<module>)
       10    0.000    0.000    0.000    0.000 {function SeedSequence.generate_state at 0x14ca87d2ea20}
        1    0.000    0.000    0.000    0.000 artist.py:60(Artist)
        1    0.000    0.000    0.000    0.000 axis.py:34(Tick)
        2    0.000    0.000    0.000    0.000 getlimits.py:540(_init)
      135    0.000    0.000    0.000    0.000 core.py:2016(__eq__)
        1    0.000    0.000    0.000    0.000 graph_module.py:283(GraphModule)
       26    0.000    0.000    0.000    0.000 _mangling.py:44(is_mangled)
        2    0.000    0.000    0.000    0.000 traceback.py:513(format)
       26    0.000    0.000    0.000    0.000 core.py:921(__init__)
        1    0.000    0.000    0.000    0.000 sysconfig.py:443(get_makefile_filename)
        1    0.000    0.000    0.000    0.000 runners.py:1(<module>)
      243    0.000    0.000    0.000    0.000 iterables.py:3083(is_sequence)
       16    0.000    0.000    0.000    0.000 structure.py:3569(nelectrons)
        1    0.000    0.000    0.000    0.000 _binned_statistic.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _pylab_helpers.py:79(destroy_all)
        1    0.000    0.000    0.000    0.000 nccl.py:1(<module>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:465(_str_summary)
        1    0.000    0.000    0.000    0.000 fileopener.py:1(<module>)
     1623    0.000    0.000    0.000    0.000 permutations.py:456(<genexpr>)
        1    0.000    0.000    0.000    0.000 quaternion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2694(__init__)
        2    0.000    0.000    0.000    0.000 _shape.py:1(<module>)
       37    0.000    0.000    0.000    0.000 decorators.py:214(make_wrapped)
        1    0.000    0.000    0.000    0.000 rrule.py:1(<module>)
        2    0.000    0.000    0.000    0.000 kind.py:287(_)
      453    0.000    0.000    0.000    0.000 wrappers.py:210(<genexpr>)
      970    0.000    0.000    0.000    0.000 _array_api.py:665(_render)
      519    0.000    0.000    0.000    0.000 inspect.py:300(ismethod)
      449    0.000    0.000    0.000    0.000 __init__.py:57(register_decomposition)
       12    0.000    0.000    0.000    0.000 core.py:6035(__init__)
      267    0.000    0.000    0.000    0.000 function.py:152(<lambda>)
      231    0.000    0.000    0.000    0.000 inspect.py:1950(_signature_get_user_defined_method)
        1    0.000    0.000    0.000    0.000 _meta.py:7(PackageMetadata)
        1    0.000    0.000    0.000    0.000 parametrize.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pydoc.py:465(Doc)
        1    0.000    0.000    0.000    0.000 container.py:42(Sequential)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:661(_is_kw_only)
        1    0.000    0.000    0.000    0.000 transpose.py:1(<module>)
       55    0.000    0.000    0.000    0.000 __init__.py:1447(__init__)
     1023    0.000    0.000    0.000    0.000 _docscrape.py:46(reset)
     1048    0.000    0.000    0.000    0.000 _ops.py:313(py_impl)
       30    0.000    0.000    0.000    0.000 _inspect.py:140(formatargspec)
        1    0.000    0.000    0.000    0.000 instancenorm.py:1(<module>)
       27    0.000    0.000    0.000    0.000 pathlib.py:353(_select_from)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:391(__init__)
      552    0.000    0.000    0.000    0.000 <frozen os>:759(decode)
      737    0.000    0.000    0.000    0.000 dataclasses.py:439(_field_assign)
        1    0.000    0.000    0.000    0.000 tensor_can.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:30(ErrorMeta)
        9    0.000    0.000    0.000    0.000 functools.py:800(singledispatch)
        1    0.000    0.000    0.000    0.000 selecting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:300(Wrt)
       24    0.000    0.000    0.000    0.000 dviread.py:167(decorate)
      456    0.000    0.000    0.000    0.000 feedparser.py:78(readline)
       16    0.000    0.000    0.000    0.000 __init__.py:482(cycler)
        1    0.000    0.000    0.000    0.000 param_fetch.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _multivariate.py:2009(__init__)
       26    0.000    0.000    0.000    0.000 {slot wrapper '__init__' of 'object' objects}
       48    0.000    0.000    0.000    0.000 periodic_table.py:1485(__str__)
        1    0.000    0.000    0.000    0.000 flatten.py:1(<module>)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr.py:46(Expr)
        1    0.000    0.000    0.000    0.000 _crosstab.py:1(<module>)
     1019    0.000    0.000    0.000    0.000 permutations.py:1065(array_form)
        7    0.000    0.000    0.000    0.000 ops.py:136(<listcomp>)
        3    0.000    0.000    0.000    0.000 _version.py:114(_compare)
        1    0.000    0.000    0.000    0.000 tasks.py:1(<module>)
      108    0.000    0.000    0.000    0.000 typing.py:2532(overload)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2394(kurtosis)
        1    0.000    0.000    0.000    0.000 _interface.py:1(<module>)
        1    0.000    0.000    0.000    0.000 options.py:43(TensorPipeRpcBackendOptions)
        1    0.000    0.000    0.000    0.000 process.py:1(<module>)
       43    0.000    0.000    0.000    0.000 pathlib.py:546(__fspath__)
        1    0.000    0.000    0.000    0.000 scale.py:670(_get_scale_docs)
       10    0.000    0.000    0.000    0.000 _contextlib.py:69(context_decorator)
      420    0.000    0.000    0.000    0.000 _ops.py:506(<listcomp>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:305(GPS)
        1    0.000    0.000    0.000    0.000 net_min_base.py:89(_MinimizerBase)
       13    0.000    0.000    0.000    0.000 enum.py:1473(__or__)
        2    0.000    0.000    0.000    0.000 _version.py:151(__ge__)
        1    0.000    0.000    0.000    0.000 _guards.py:83(Guard)
       19    0.000    0.000    0.000    0.000 _continuous_distns.py:59(_call_super_mom)
      309    0.000    0.000    0.000    0.000 types.py:164(__init__)
       95    0.000    0.000    0.000    0.000 permutations.py:2055(is_Identity)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:922(ShapeEnv)
        3    0.000    0.000    0.000    0.000 {built-in method gc.collect}
        1    0.000    0.000    0.000    0.000 plane.py:1(<module>)
        1    0.000    0.000    0.000    0.000 isoparser.py:42(isoparser)
       42    0.000    0.000    0.000    0.000 core.py:277(wrapper)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3336(_moment_transform_center)
     1774    0.000    0.000    0.000    0.000 multiarray.py:669(result_type)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:605(register_rand_like)
        1    0.000    0.000    0.000    0.000 filelister.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gmpy.py:135(_get_gmpy2)
       82    0.000    0.000    0.000    0.000 return_types.py:9(pytree_register_structseq)
        1    0.000    0.000    0.000    0.000 _type_utils.py:58(JitScalarType)
        1    0.000    0.000    0.000    0.000 animation.py:408(FileMovieWriter)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:1(<module>)
     1706    0.000    0.000    0.000    0.000 numeric.py:2245(_isclose_dispatcher)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:296(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:746(copy)
    347/1    0.000    0.000    0.000    0.000 __config__.py:19(_cleanup)
        3    0.000    0.000    0.000    0.000 _itertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:29(_initialize)
      472    0.000    0.000    0.000    0.000 facts.py:579(__init__)
       23    0.000    0.000    0.000    0.000 core.py:5355(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:747(<dictcomp>)
        1    0.000    0.000    0.000    0.000 graycode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 path.py:23(Path)
       24    0.000    0.000    0.000    0.000 dtypes.py:66(_add_dtype_helper)
        1    0.000    0.000    0.000    0.000 widgets.py:1087(SubplotTool)
     39/1    0.000    0.000    0.000    0.000 __config__.py:25(<dictcomp>)
        1    0.000    0.000    0.000    0.000 order.py:1(<module>)
       56    0.000    0.000    0.000    0.000 pathlib.py:536(__str__)
      605    0.000    0.000    0.000    0.000 _inspect.py:26(isfunction)
        2    0.000    0.000    0.000    0.000 fuser_method_mappings.py:1(<module>)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1536(find_distributions)
        1    0.000    0.000    0.000    0.000 ndim_array.py:1(<module>)
        2    0.000    0.000    0.000    0.000 fused.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importtools.py:48(import_module)
        5    0.000    0.000    0.000    0.000 symbol.py:339(_canonical_assumptions)
      544    0.000    0.000    0.000    0.000 registration.py:267(onnx_symbolic)
       72    0.000    0.000    0.000    0.000 pydoc.py:94(_findclass)
        1    0.000    0.000    0.000    0.000 _decomp_cossin.py:1(<module>)
      222    0.000    0.000    0.000    0.000 wrappers.py:187(out_wrapper)
      248    0.000    0.000    0.000    0.000 _docscrape.py:460(_str_signature)
        1    0.000    0.000    0.000    0.000 _encoded_words.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1(<module>)
       27    0.000    0.000    0.000    0.000 artist.py:20(allow_rasterization)
        1    0.000    0.000    0.000    0.000 shlex.py:1(<module>)
     1260    0.000    0.000    0.000    0.000 colors.py:276(<genexpr>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:470(_str_extended_summary)
        1    0.000    0.000    0.000    0.000 polytools.py:106(Poly)
       27    0.000    0.000    0.000    0.000 <frozen genericpath>:27(isfile)
        1    0.000    0.000    0.000    0.000 container.py:684(ParameterDict)
        1    0.000    0.000    0.000    0.000 _covariance.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _adapters.py:35(__init__)
      273    0.000    0.000    0.000    0.000 typing_extensions.py:3054(_check_generic)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2385(variance)
      363    0.000    0.000    0.000    0.000 socket.py:78(<lambda>)
        1    0.000    0.000    0.000    0.000 _interpolate.py:282(__init__)
       20    0.000    0.000    0.000    0.000 numbers.py:3148(__eq__)
        1    0.000    0.000    0.000    0.000 _decorator.py:63(non_deterministic)
      586    0.000    0.000    0.000    0.000 _inspect.py:41(iscode)
        1    0.000    0.000    0.000    0.000 companion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph.py:19(Node)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1(<module>)
     1191    0.000    0.000    0.000    0.000 {built-in method _bisect.bisect_right}
     2730    0.000    0.000    0.000    0.000 inspect.py:589(<lambda>)
       16    0.000    0.000    0.000    0.000 __init__.py:546(_cycler)
        1    0.000    0.000    0.000    0.000 utils.py:76(wrap)
        3    0.000    0.000    0.000    0.000 _adapters.py:42(_repair_headers)
     2343    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.000    0.000 package_exporter.py:186(PackageExporter)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:360(_get_scalar_type_map)
        1    0.000    0.000    0.000    0.000 mathml.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 join.py:112(Join)
        1    0.000    0.000    0.000    0.000 quiver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arraysetops.py:1(<module>)
      213    0.000    0.000    0.000    0.000 ctx_fp.py:51(_wrap_specfun)
        1    0.000    0.000    0.000    0.000 mathtext.py:1925(<dictcomp>)
      266    0.000    0.000    0.000    0.000 <frozen os>:696(__iter__)
      750    0.000    0.000    0.000    0.000 rcsetup.py:234(validator)
        1    0.000    0.000    0.000    0.000 timeouts.py:26(Timeout)
      628    0.000    0.000    0.000    0.000 _pytree.py:121(<listcomp>)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:67(_apply)
        1    0.000    0.000    0.000    0.000 __init__.py:342(<listcomp>)
       23    0.000    0.000    0.000    0.000 distributed_c10d.py:1432(exception_handler)
        5    0.000    0.000    0.000    0.000 decorator.py:75(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:281(_make_selector)
       42    0.000    0.000    0.000    0.000 traceback.py:458(format_frame_summary)
        1    0.000    0.000    0.000    0.000 exprtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:371(<dictcomp>)
        3    0.000    0.000    0.000    0.000 __init__.py:801(zip_children)
      185    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
       89    0.000    0.000    0.000    0.000 _parser.py:894(_parse_flags)
        1    0.000    0.000    0.000    0.000 _cubic.py:1(<module>)
      366    0.000    0.000    0.000    0.000 socket.py:93(<lambda>)
        1    0.000    0.000    0.000    0.000 calendar.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:15(_init_logger)
      364    0.000    0.000    0.000    0.000 socket.py:83(<lambda>)
        3    0.000    0.000    0.000    0.000 __init__.py:893(find_distributions)
      295    0.000    0.000    0.000    0.000 _parser.py:73(__init__)
        1    0.000    0.000    0.000    0.000 monomials.py:1(<module>)
        9    0.000    0.000    0.000    0.000 message.py:615(get_content_maintype)
        6    0.000    0.000    0.000    0.000 deprecation.py:272(__set_name__)
       18    0.000    0.000    0.000    0.000 __init__.py:811(mtime)
       32    0.000    0.000    0.000    0.000 basic.py:2117(_exec_constructor_postprocessors)
      544    0.000    0.000    0.000    0.000 registration.py:76(set_base)
        1    0.000    0.000    0.000    0.000 _vmap_internals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 upsampling.py:1(<module>)
       21    0.000    0.000    0.000    0.000 deprecation.py:178(finalize)
        1    0.000    0.000    0.000    0.000 axis3d.py:1(<module>)
      226    0.000    0.000    0.000    0.000 rcsetup.py:150(validate_bool)
       55    0.000    0.000    0.000    0.000 symbol.py:294(_sanitize)
        7    0.000    0.000    0.000    0.000 pathlib.py:1377(expanduser)
        1    0.000    0.000    0.000    0.000 radau.py:1(<module>)
       54    0.000    0.000    0.000    0.000 typing.py:1620(<genexpr>)
       13    0.000    0.000    0.000    0.000 core.py:8389(__init__)
        1    0.000    0.000    0.000    0.000 representer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matexpr.py:37(MatrixExpr)
        1    0.000    0.000    0.000    0.000 __init__.py:2306(_make_var_reduction_prim)
       28    0.000    0.000    0.000    0.000 <frozen _collections_abc>:778(__contains__)
        1    0.000    0.000    0.000    0.000 container.py:408(ModuleDict)
      304    0.000    0.000    0.000    0.000 _docscrape.py:374(<listcomp>)
      365    0.000    0.000    0.000    0.000 socket.py:88(<lambda>)
       32    0.000    0.000    0.000    0.000 arraypad.py:458(_as_pairs)
      367    0.000    0.000    0.000    0.000 permutations.py:381(<listcomp>)
        5    0.000    0.000    0.000    0.000 core.py:1485(__radd__)
        1    0.000    0.000    0.000    0.000 selector_events.py:1(<module>)
       23    0.000    0.000    0.000    0.000 symbolic_shapes.py:699(_make_node_magic)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:1(<module>)
      426    0.000    0.000    0.000    0.000 {method 'finditer' of 're.Pattern' objects}
       28    0.000    0.000    0.000    0.000 inspect.py:2248(p)
      265    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:1(<module>)
       17    0.000    0.000    0.000    0.000 __init__.py:416(by_key)
      129    0.000    0.000    0.000    0.000 dataclasses.py:593(<listcomp>)
       20    0.000    0.000    0.000    0.000 optimizer.py:291(_patch_step_function)
        1    0.000    0.000    0.000    0.000 pathlib.py:349(__init__)
      840    0.000    0.000    0.000    0.000 __future__.py:20(get_overwrite_module_params_on_conversion)
      113    0.000    0.000    0.000    0.000 typing.py:1926(_caller)
       36    0.000    0.000    0.000    0.000 inspect.py:402(isgeneratorfunction)
       40    0.000    0.000    0.000    0.000 rcsetup.py:51(__init__)
        1    0.000    0.000    0.000    0.000 conditionset.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _creation.py:1(<module>)
       93    0.000    0.000    0.000    0.000 typing.py:277(_unpack_args)
        1    0.000    0.000    0.000    0.000 adam.py:1(<module>)
        2    0.000    0.000    0.000    0.000 helper.py:1(<module>)
       52    0.000    0.000    0.000    0.000 singleton.py:131(__getattr__)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:526(register_native_batch_norm)
       30    0.000    0.000    0.000    0.000 utils.py:104(__init__)
        1    0.000    0.000    0.000    0.000 _color_data.py:995(<dictcomp>)
       68    0.000    0.000    0.000    0.000 _util.py:1165(_apply_over_batch)
      117    0.000    0.000    0.000    0.000 __init__.py:321(filter)
       19    0.000    0.000    0.000    0.000 deprecation.py:372(<listcomp>)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:1(<module>)
      865    0.000    0.000    0.000    0.000 dataclasses.py:375(<genexpr>)
        1    0.000    0.000    0.000    0.000 pathlib.py:260(compile_pattern)
     1534    0.000    0.000    0.000    0.000 {method 'isupper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _quadrature.py:1(<module>)
        3    0.000    0.000    0.000    0.000 embedding_ops.py:1(<module>)
      126    0.000    0.000    0.000    0.000 colors.py:704(__init__)
        1    0.000    0.000    0.000    0.000 trace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 meijerint.py:1(<module>)
       39    0.000    0.000    0.000    0.000 inspect.py:391(_has_code_flag)
     1326    0.000    0.000    0.000    0.000 _builtins.py:124(_is_special_functional_bound_op)
       58    0.000    0.000    0.000    0.000 _utils.py:779(classproperty)
      237    0.000    0.000    0.000    0.000 pydoc.py:155(_getowndoc)
      635    0.000    0.000    0.000    0.000 typing.py:729(<genexpr>)
        9    0.000    0.000    0.000    0.000 deprecation.py:435(<listcomp>)
        8    0.000    0.000    0.000    0.000 deprecation.py:231(wrapper)
        3    0.000    0.000    0.000    0.000 __init__.py:906(_search_paths)
        1    0.000    0.000    0.000    0.000 backend_managers.py:1(<module>)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:480(broadcast_arrays)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1018(<listcomp>)
        1    0.000    0.000    0.000    0.000 configparser.py:376(BasicInterpolation)
       16    0.000    0.000    0.000    0.000 __init__.py:226(_from_iter)
        1    0.000    0.000    0.000    0.000 powerset.py:1(<module>)
        1    0.000    0.000    0.000    0.000 flatten.py:54(Unflatten)
        1    0.000    0.000    0.000    0.000 results.py:1(<module>)
        1    0.000    0.000    0.000    0.000 groups.py:316(<dictcomp>)
      109    0.000    0.000    0.000    0.000 inspect.py:310(ismethoddescriptor)
        1    0.000    0.000    0.000    0.000 prufer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 legend_handler.py:1(<module>)
        7    0.000    0.000    0.000    0.000 ops.py:140(<listcomp>)
       14    0.000    0.000    0.000    0.000 pathlib.py:530(_make_child)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:75(TensorKey)
        1    0.000    0.000    0.000    0.000 _polybase.py:1(<module>)
        1    0.000    0.000    0.000    0.000 curve.py:1(<module>)
       40    0.000    0.000    0.000    0.000 getlimits.py:91(_float_to_float)
        1    0.000    0.000    0.000    0.000 testing.py:1(<module>)
       13    0.000    0.000    0.000    0.000 core.py:8394(getdoc)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2177(sum)
      255    0.000    0.000    0.000    0.000 traversal.py:12(iterargs)
       68    0.000    0.000    0.000    0.000 pickletools.py:1124(__init__)
      163    0.000    0.000    0.000    0.000 function.py:149(<listcomp>)
      306    0.000    0.000    0.000    0.000 rcsetup.py:1043(_convert_validator_spec)
        7    0.000    0.000    0.000    0.000 __init__.py:72(CFUNCTYPE)
       16    0.000    0.000    0.000    0.000 tokenize.py:408(tokenize)
       18    0.000    0.000    0.000    0.000 core.py:997(__init__)
       13    0.000    0.000    0.000    0.000 {built-in method torch._C._dispatch_library}
        1    0.000    0.000    0.000    0.000 series_class.py:1(<module>)
       93    0.000    0.000    0.000    0.000 inspect.py:2080(_signature_is_functionlike)
       17    0.000    0.000    0.000    0.000 ctx_iv.py:407(_mpq)
      162    0.000    0.000    0.000    0.000 core.py:2446(__new__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1385(AnnotationBbox)
      494    0.000    0.000    0.000    0.000 _compiler.py:31(_combine_flags)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:324(_init_builtins)
        1    0.000    0.000    0.000    0.000 core.py:6550(__new__)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:1(<module>)
        3    0.000    0.000    0.000    0.000 zipfile.py:2370(__init__)
       20    0.000    0.000    0.000    0.000 colors.py:929(reversed)
        1    0.000    0.000    0.000    0.000 _vertex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:306(profile)
        1    0.000    0.000    0.000    0.000 _trace.py:566(ignore_lib_warnings)
        1    0.000    0.000    0.000    0.000 parabola.py:1(<module>)
        1    0.000    0.000    0.000    0.000 container.py:250(ModuleList)
       19    0.000    0.000    0.000    0.000 pythonmpq.py:57(__new__)
        1    0.000    0.000    0.000    0.000 printer.py:1(<module>)
        3    0.000    0.000    0.000    0.000 autocast_mode.py:1(<module>)
    52/46    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1320(__len__)
      582    0.000    0.000    0.000    0.000 __init__.py:422(<genexpr>)
        1    0.000    0.000    0.000    0.000 common.py:432(<listcomp>)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adaptive.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fnmatch.py:48(filter)
        1    0.000    0.000    0.000    0.000 resolver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:2812(ArrowStyle)
        1    0.000    0.000    0.000    0.000 combinatorics.py:17(SamplerIterDataPipe)
      108    0.000    0.000    0.000    0.000 iterables.py:3025(iterable)
     1080    0.000    0.000    0.000    0.000 inspect.py:729(getmro)
        1    0.000    0.000    0.000    0.000 analyzer.py:1018(PointGroupAnalyzer)
       20    0.000    0.000    0.000    0.000 numbers.py:3314(__eq__)
      386    0.000    0.000    0.000    0.000 inspect.py:283(ismodule)
        8    0.000    0.000    0.000    0.000 symbol.py:393(__xnew_cached_)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2894(icdf)
        1    0.000    0.000    0.000    0.000 axes3d.py:44(Axes3D)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1254(_direct)
        1    0.000    0.000    0.000    0.000 gruntz.py:1(<module>)
     1269    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       46    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:276(__init__)
        1    0.000    0.000    0.000    0.000 backend_registry.py:56(register_backend)
       40    0.000    0.000    0.000    0.000 colors.py:889(__init__)
        3    0.000    0.000    0.000    0.000 arrayprint.py:780(_formatArray)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:340(_axis_nan_policy_factory)
        1    0.000    0.000    0.000    0.000 configparser.py:522(LegacyInterpolation)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:393(DataFlowNode)
      871    0.000    0.000    0.000    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
        3    0.000    0.000    0.000    0.000 __init__.py:866(__init__)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wishart.py:1(<module>)
      151    0.000    0.000    0.000    0.000 libintmath.py:353(ifac)
       42    0.000    0.000    0.000    0.000 results.py:573(copy)
        1    0.000    0.000    0.000    0.000 contains.py:1(<module>)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:100(<lambda>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:634(MemoryProfile)
        1    0.000    0.000    0.000    0.000 _collections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 immutable_collections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unicode.py:123(pyparsing_unicode)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:86(DomainMatrix)
      871    0.000    0.000    0.000    0.000 conflict.py:67(<listcomp>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:566(__new__)
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1283(_find_parent_path_names)
      786    0.000    0.000    0.000    0.000 utils.py:45(<genexpr>)
        1    0.000    0.000    0.000    0.000 weak.py:1(<module>)
        1    0.000    0.000    0.000    0.000 helpers.py:1084(<listcomp>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1249(wrapped)
        1    0.000    0.000    0.000    0.000 _basic.py:33(<dictcomp>)
       18    0.000    0.000    0.000    0.000 _static.py:27(_prevent_modification)
        1    0.000    0.000    0.000    0.000 polar.py:776(PolarAxes)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:58(_timelex)
      130    0.000    0.000    0.000    0.000 <frozen abc>:146(update_abstractmethods)
     1282    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
       12    0.000    0.000    0.000    0.000 datetime.py:592(__new__)
        1    0.000    0.000    0.000    0.000 dotproduct.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mul.py:91(Mul)
        1    0.000    0.000    0.000    0.000 testing.py:17(pyparsing_test)
        4    0.000    0.000    0.000    0.000 feedparser.py:101(push)
        1    0.000    0.000    0.000    0.000 rcsetup.py:96(<listcomp>)
        1    0.000    0.000    0.000    0.000 operations.py:415(inversion)
       12    0.000    0.000    0.000    0.000 doccer.py:161(_doc)
       21    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1118(_dispatch)
        1    0.000    0.000    0.000    0.000 _qmc.py:802(QMCEngine)
      544    0.000    0.000    0.000    0.000 registration.py:71(__init__)
        1    0.000    0.000    0.000    0.000 repmatrix.py:569(_new)
     1185    0.000    0.000    0.000    0.000 enum.py:1125(__init__)
       40    0.000    0.000    0.000    0.000 rcsetup.py:63(<dictcomp>)
        1    0.000    0.000    0.000    0.000 fnmatch.py:38(_compile_pattern)
     1297    0.000    0.000    0.000    0.000 permutations.py:1613(__iter__)
        1    0.000    0.000    0.000    0.000 bezier.py:1(<module>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1044(<listcomp>)
        1    0.000    0.000    0.000    0.000 jit_utils.py:22(GraphContext)
      158    0.000    0.000    0.000    0.000 typing.py:1800(<genexpr>)
     15/3    0.000    0.000    0.000    0.000 arrayprint.py:789(recurser)
        1    0.000    0.000    0.000    0.000 solveset.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:361(LightSource)
        1    0.000    0.000    0.000    0.000 mathtext.py:1863(Glue)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:108(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 _recursive.py:354(ConcreteTypeStore)
        1    0.000    0.000    0.000    0.000 hooks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:45(GradScaler)
        3    0.000    0.000    0.000    0.000 feedparser.py:184(close)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2318(integrand)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:1(<module>)
       64    0.000    0.000    0.000    0.000 wrappers.py:294(BackwardsNotSupported)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:94(_add_aliases)
       20    0.000    0.000    0.000    0.000 module.py:2167(children)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:593(CategoryElement)
        2    0.000    0.000    0.000    0.000 _delegators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:617(Shadow)
        2    0.000    0.000    0.000    0.000 bn_relu.py:1(<module>)
       71    0.000    0.000    0.000    0.000 enum.py:345(__init__)
        3    0.000    0.000    0.000    0.000 zipfile.py:2251(make)
       15    0.000    0.000    0.000    0.000 _bunch.py:5(_validate_names)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._dist_autograd_init}
        9    0.000    0.000    0.000    0.000 textwrap.py:470(indent)
      432    0.000    0.000    0.000    0.000 colors.py:224(<genexpr>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:149(Backend)
        1    0.000    0.000    0.000    0.000 backend_agg.py:71(RendererAgg)
        7    0.000    0.000    0.000    0.000 numeric.py:1393(moveaxis)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:108(<dictcomp>)
        5    0.000    0.000    0.000    0.000 core.py:6040(__add__)
        2    0.000    0.000    0.000    0.000 mixins.py:1(<module>)
      566    0.000    0.000    0.000    0.000 _compiler.py:426(_get_iscased)
        1    0.000    0.000    0.000    0.000 lattice.py:38(Lattice)
        2    0.000    0.000    0.000    0.000 windows.py:1(<module>)
        1    0.000    0.000    0.000    0.000 storage.py:18(_StorageBase)
      865    0.000    0.000    0.000    0.000 dataclasses.py:1102(<genexpr>)
        1    0.000    0.000    0.000    0.000 kl.py:818(_add_kl_info)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:191(SchemaMatcher)
        1    0.000    0.000    0.000    0.000 profiler.py:47(_KinetoProfile)
        1    0.000    0.000    0.000    0.000 _iotools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathematica.py:1(<module>)
        2    0.000    0.000    0.000    0.000 dropout.py:1(<module>)
       27    0.000    0.000    0.000    0.000 singleton.py:125(register)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1660(ElementType)
        1    0.000    0.000    0.000    0.000 polyoptions.py:187(_init_dependencies_order)
      688    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
       11    0.000    0.000    0.000    0.000 fractions.py:62(__new__)
      416    0.000    0.000    0.000    0.000 typing.py:1667(__eq__)
      147    0.000    0.000    0.000    0.000 TiffTags.py:35(__new__)
        1    0.000    0.000    0.000    0.000 spines.py:1(<module>)
       54    0.000    0.000    0.000    0.000 typing.py:1496(__mro_entries__)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:899(_nsum_iv)
        1    0.000    0.000    0.000    0.000 _bsr.py:1(<module>)
        4    0.000    0.000    0.000    0.000 enum.py:1357(_missing_)
        5    0.000    0.000    0.000    0.000 core.py:589(_setResultsName)
      166    0.000    0.000    0.000    0.000 pathlib.py:239(splitroot)
        1    0.000    0.000    0.000    0.000 _multivariate.py:394(__init__)
        6    0.000    0.000    0.000    0.000 _codata.py:2045(replace_exact)
      138    0.000    0.000    0.000    0.000 {built-in method builtins.round}
     1790    0.000    0.000    0.000    0.000 __init__.py:785(<lambda>)
        1    0.000    0.000    0.000    0.000 _exceptions.py:1(<module>)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:585(__init__)
       32    0.000    0.000    0.000    0.000 basic.py:2128(<setcomp>)
     1002    0.000    0.000    0.000    0.000 enum.py:230(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:329(tribonacci)
      513    0.000    0.000    0.000    0.000 {method 'items' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 configparser.py:448(ExtendedInterpolation)
       43    0.000    0.000    0.000    0.000 symbolic_shapes.py:817(_make_user_magic)
        1    0.000    0.000    0.000    0.000 transports.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parameter.py:1(<module>)
        5    0.000    0.000    0.000    0.000 backend_bases.py:1580(_check_savefig_extra_args)
     1616    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        1    0.000    0.000    0.000    0.000 serializer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _rules.py:382(_POERules)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:181(SymNode)
       36    0.000    0.000    0.000    0.000 tokenize.py:329(find_cookie)
       26    0.000    0.000    0.000    0.000 _basic.py:33(<listcomp>)
        1    0.000    0.000    0.000    0.000 unicode.py:85(identchars)
        1    0.000    0.000    0.000    0.000 legend.py:269(Legend)
        2    0.000    0.000    0.000    0.000 typing.py:1556(__or__)
       10    0.000    0.000    0.000    0.000 version.py:52(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:219(MathtextBackendPs)
      117    0.000    0.000    0.000    0.000 _parser.py:1090(expand_template)
        1    0.000    0.000    0.000    0.000 monomials.py:387(MonomialOps)
        1    0.000    0.000    0.000    0.000 _coo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combinatorics.py:14(ShufflerIterDataPipe)
        1    0.000    0.000    0.000    0.000 sequences.py:26(SeqBase)
       23    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:593(__init__)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:121(RendererBase)
        1    0.000    0.000    0.000    0.000 gzip.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3206(_moment_central)
       83    0.000    0.000    0.000    0.000 linecache.py:147(lazycache)
      307    0.000    0.000    0.000    0.000 __init__.py:722(__iter__)
        1    0.000    0.000    0.000    0.000 core.py:52(Orbital)
        1    0.000    0.000    0.000    0.000 fake_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dirichlet.py:1(<module>)
        1    0.000    0.000    0.000    0.000 exponential.py:1108(LambertW)
        2    0.000    0.000    0.000    0.000 _basic.py:3190(factorial2)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2382(mean)
      261    0.000    0.000    0.000    0.000 dispatcher.py:204(<genexpr>)
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 von_mises.py:1(<module>)
       34    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 fu.py:1(<module>)
    27/23    0.000    0.000    0.000    0.000 basic.py:366(compare)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2979(prod)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:1(<module>)
       62    0.000    0.000    0.000    0.000 rational.py:31(__new__)
        1    0.000    0.000    0.000    0.000 sampler.py:210(BatchSampler)
        1    0.000    0.000    0.000    0.000 _adapters.py:8(Message)
        1    0.000    0.000    0.000    0.000 tricontour.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _dok.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1339(_generate_domain_support)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2007(_validate_order_kind)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1652(_avg_pool)
        1    0.000    0.000    0.000    0.000 configparser.py:1325(ConverterMapping)
      216    0.000    0.000    0.000    0.000 typing.py:1389(<genexpr>)
        8    0.000    0.000    0.000    0.000 typing.py:2345(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _tukeylambda_stats.py:1(<module>)
       55    0.000    0.000    0.000    0.000 <frozen codecs>:309(__init__)
       15    0.000    0.000    0.000    0.000 decorator.py:170(depends_on_deco)
      694    0.000    0.000    0.000    0.000 boolalg.py:480(<lambda>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2785(NavigationToolbar2)
       34    0.000    0.000    0.000    0.000 libmpf.py:491(from_rational)
        1    0.000    0.000    0.000    0.000 fields.py:1(<module>)
        2    0.000    0.000    0.000    0.000 conv_relu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quoprimime.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4994(__init__)
        1    0.000    0.000    0.000    0.000 ddm.py:102(DDM)
       92    0.000    0.000    0.000    0.000 _collections.py:20(__missing__)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2249(_support)
        1    0.000    0.000    0.000    0.000 glob_group.py:1(<module>)
       21    0.000    0.000    0.000    0.000 domain.py:379(__call__)
       16    0.000    0.000    0.000    0.000 _internal.py:32(wrapped_f)
        1    0.000    0.000    0.000    0.000 transformer.py:17(Transformer)
        1    0.000    0.000    0.000    0.000 doccer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 routeddecoder.py:17(RoutedDecoderIterDataPipe)
        1    0.000    0.000    0.000    0.000 repr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:15(ExpressionDomain)
        1    0.000    0.000    0.000    0.000 _legacy.py:1(<module>)
        5    0.000    0.000    0.000    0.000 random.py:119(__init__)
       18    0.000    0.000    0.000    0.000 __init__.py:844(search)
        1    0.000    0.000    0.000    0.000 _base.py:85(_spbase)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 adam.py:13(Adam)
       21    0.000    0.000    0.000    0.000 __init__.py:315(_subx)
        1    0.000    0.000    0.000    0.000 _data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pyplot.py:2172(<listcomp>)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:1(<module>)
       20    0.000    0.000    0.000    0.000 {built-in method torch._C._nn._parse_to}
        1    0.000    0.000    0.000    0.000 records.py:1(<module>)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:7(_ExtractModuleReferences)
      166    0.000    0.000    0.000    0.000 colors.py:521(__init__)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2894(__call__)
        1    0.000    0.000    0.000    0.000 _csc.py:1(<module>)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:58(bitname)
        1    0.000    0.000    0.000    0.000 unicode.py:99(identbodychars)
        1    0.000    0.000    0.000    0.000 tritools.py:1(<module>)
       29    0.000    0.000    0.000    0.000 _array_api.py:576(<listcomp>)
       27    0.000    0.000    0.000    0.000 pretty_symbology.py:121(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:5241(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1128(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:1909(BoxStyle)
        1    0.000    0.000    0.000    0.000 _adapters.py:42(CompatibilityFiles)
       92    0.000    0.000    0.000    0.000 permutations.py:463(size)
       10    0.000    0.000    0.000    0.000 _text.py:79(__hash__)
      149    0.000    0.000    0.000    0.000 _util.py:373(check_random_state)
        1    0.000    0.000    0.000    0.000 _endian.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sdm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 animation.py:96(MovieWriterRegistry)
       18    0.000    0.000    0.000    0.000 _compiler.py:389(_bytes_to_codes)
       43    0.000    0.000    0.000    0.000 core.py:3157(_generateDefaultName)
      160    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1220(__init__)
       58    0.000    0.000    0.000    0.000 core.py:1922(set_name)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:107(FullHessianUpdateStrategy)
       41    0.000    0.000    0.000    0.000 deprecation.py:365(<genexpr>)
        1    0.000    0.000    0.000    0.000 package_importer.py:48(PackageImporter)
       44    0.000    0.000    0.000    0.000 core.py:4124(<genexpr>)
      711    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
        6    0.000    0.000    0.000    0.000 ctx_iv.py:413(convert)
      114    0.000    0.000    0.000    0.000 textwrap.py:482(prefixed_lines)
        1    0.000    0.000    0.000    0.000 _fir_filter_design.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:166(ComplexRootOf)
       87    0.000    0.000    0.000    0.000 utils.py:44(<dictcomp>)
       20    0.000    0.000    0.000    0.000 mul.py:34(_mulsort)
        1    0.000    0.000    0.000    0.000 zetazeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1211(Rational)
       16    0.000    0.000    0.000    0.000 arraypad.py:86(_pad_simple)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:757(__init_subclass__)
        1    0.000    0.000    0.000    0.000 proxy.py:476(ParameterProxy)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1656(DraggableBase)
       37    0.000    0.000    0.000    0.000 mul.py:494(<listcomp>)
        1    0.000    0.000    0.000    0.000 orderings.py:1(<module>)
       23    0.000    0.000    0.000    0.000 functools.py:841(_is_union_type)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1(<module>)
        3    0.000    0.000    0.000    0.000 zipfile.py:1242(__init__)
        1    0.000    0.000    0.000    0.000 repmatrix.py:1(<module>)
      135    0.000    0.000    0.000    0.000 containers.py:72(__iter__)
        1    0.000    0.000    0.000    0.000 emitter.py:1(<module>)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:582(_ReducedHCT_Element)
       34    0.000    0.000    0.000    0.000 operations.py:118(_from_args)
        1    0.000    0.000    0.000    0.000 histograms.py:1(<module>)
       99    0.000    0.000    0.000    0.000 traceback.py:389(extended_frame_gen)
        1    0.000    0.000    0.000    0.000 _polyint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3267(__init__)
        1    0.000    0.000    0.000    0.000 splitter_base.py:256(_SplitterBase)
      480    0.000    0.000    0.000    0.000 artist.py:1371(<genexpr>)
        2    0.000    0.000    0.000    0.000 _basic.py:3035(_factorialx_wrapper)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6108(__init__)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dumper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 spglib.py:84(DictInterface)
        1    0.000    0.000    0.000    0.000 conv.py:1195(LazyConv1d)
        1    0.000    0.000    0.000    0.000 _netcdf.py:1(<module>)
        8    0.000    0.000    0.000    0.000 kind.py:43(__new__)
        1    0.000    0.000    0.000    0.000 optimization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linear.py:9(Linear)
        1    0.000    0.000    0.000    0.000 upsampling.py:11(Upsample)
       90    0.000    0.000    0.000    0.000 _pytree.py:47(_register_pytree_node)
        4    0.000    0.000    0.000    0.000 functools.py:861(<lambda>)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:87(_apply)
        1    0.000    0.000    0.000    0.000 hermite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _freeze.py:1(<module>)
       66    0.000    0.000    0.000    0.000 __init__.py:228(_acquireLock)
        1    0.000    0.000    0.000    0.000 getlimits.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _pep440.py:292(__init__)
        4    0.000    0.000    0.000    0.000 _new_distributions.py:412(_icdf_formula)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:118(<lambda>)
        1    0.000    0.000    0.000    0.000 colors.py:97(<dictcomp>)
       21    0.000    0.000    0.000    0.000 domain.py:371(new)
        1    0.000    0.000    0.000    0.000 queues.py:1(<module>)
      309    0.000    0.000    0.000    0.000 enum.py:220(__set_name__)
        1    0.000    0.000    0.000    0.000 para4band.py:14(Stiefel_Frame)
        3    0.000    0.000    0.000    0.000 design_patterns.py:43(cached_class)
      544    0.000    0.000    0.000    0.000 registration.py:81(in_base)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:90(<listcomp>)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2223(support)
       12    0.000    0.000    0.000    0.000 weakref.py:104(__init__)
        1    0.000    0.000    0.000    0.000 expr.py:266(__pow__)
        1    0.000    0.000    0.000    0.000 _guards.py:26(GuardSource)
        1    0.000    0.000    0.000    0.000 polyclasses.py:138(DMP)
        6    0.000    0.000    0.000    0.000 numeric.py:2507(extend_all)
        9    0.000    0.000    0.000    0.000 pathlib.py:765(__truediv__)
        1    0.000    0.000    0.000    0.000 backend_managers.py:39(ToolManager)
      143    0.000    0.000    0.000    0.000 core.py:794(preParse)
        1    0.000    0.000    0.000    0.000 streamplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bdist.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset7.py:1(<module>)
      254    0.000    0.000    0.000    0.000 core.py:3902(<genexpr>)
        1    0.000    0.000    0.000    0.000 spines.py:11(Spine)
      200    0.000    0.000    0.000    0.000 _ops.py:437(__hash__)
        3    0.000    0.000    0.000    0.000 blas.py:395(getter)
        4    0.000    0.000    0.000    0.000 random.py:128(seed)
       26    0.000    0.000    0.000    0.000 pathlib.py:657(stem)
        1    0.000    0.000    0.000    0.000 uuid.py:85(UUID)
        1    0.000    0.000    0.000    0.000 libelefun.py:1(<module>)
        1    0.000    0.000    0.000    0.000 structure.py:1006(IStructure)
       49    0.000    0.000    0.000    0.000 _compiler.py:405(_generate_overlap_table)
        1    0.000    0.000    0.000    0.000 __init__.py:666(<listcomp>)
        2    0.000    0.000    0.000    0.000 _distributor_init.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset14.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _dia.py:1(<module>)
       16    0.000    0.000    0.000    0.000 sysconfig.py:244(_subst_vars)
    18/17    0.000    0.000    0.000    0.000 typing.py:1474(__repr__)
        1    0.000    0.000    0.000    0.000 testing.py:22(reset_pyparsing_context)
      224    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
        6    0.000    0.000    0.000    0.000 core.py:1737(__call__)
        1    0.000    0.000    0.000    0.000 patches.py:3564(FancyBboxPatch)
        1    0.000    0.000    0.000    0.000 __init__.py:351(_sanity_check)
      213    0.000    0.000    0.000    0.000 ctx_iv.py:369(_wrap_specfun)
        1    0.000    0.000    0.000    0.000 sampler.py:18(Sampler)
        2    0.000    0.000    0.000    0.000 extension.py:1(<module>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:209(_flat_list_to_DomainMatrix)
        1    0.000    0.000    0.000    0.000 exceptions.py:30(ParseBaseException)
       15    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)
      257    0.000    0.000    0.000    0.000 typing.py:1661(_value_and_type_iter)
        1    0.000    0.000    0.000    0.000 _distr_params.py:1(<module>)
       10    0.000    0.000    0.000    0.000 para4tb.py:74(<listcomp>)
       22    0.000    0.000    0.000    0.000 numbers.py:1811(__new__)
        1    0.000    0.000    0.000    0.000 mathtext.py:261(MathtextBackendPdf)
        2    0.000    0.000    0.000    0.000 typing.py:2962(TypedDict)
        1    0.000    0.000    0.000    0.000 _guards.py:318(TracingContext)
       72    0.000    0.000    0.000    0.000 util.py:113(set_)
      216    0.000    0.000    0.000    0.000 message.py:506(set_raw)
       48    0.000    0.000    0.000    0.000 string.py:139(formula_double_format)
        1    0.000    0.000    0.000    0.000 chebyshev.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:2312(MultivariateNormalQMC)
        1    0.000    0.000    0.000    0.000 core.py:141(MaskedTensor)
        1    0.000    0.000    0.000    0.000 glob.py:175(_listdir)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1379(<listcomp>)
        1    0.000    0.000    0.000    0.000 lazy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:1(<module>)
       23    0.000    0.000    0.000    0.000 pythonmpq.py:103(_new)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4440(TruncatedDistribution)
       71    0.000    0.000    0.000    0.000 enum.py:945(_find_data_repr_)
        1    0.000    0.000    0.000    0.000 _compat_pickle.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decorators.py:236(_func)
        1    0.000    0.000    0.000    0.000 interpolate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _state.py:1(<module>)
       16    0.000    0.000    0.000    0.000 {method 'uniform' of 'numpy.random._generator.Generator' objects}
        4    0.000    0.000    0.000    0.000 typing.py:349(_tp_cache)
    32/24    0.000    0.000    0.000    0.000 typing.py:2348(_strip_annotations)
        1    0.000    0.000    0.000    0.000 optimizer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:3882(ParseExpression)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:913(_set_invalid_nan)
        1    0.000    0.000    0.000    0.000 hooks.py:9(RemovableHandle)
      128    0.000    0.000    0.000    0.000 dataclasses.py:1053(<listcomp>)
        1    0.000    0.000    0.000    0.000 basic.py:156(Basic)
      350    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.add_docstring}
        1    0.000    0.000    0.000    0.000 spectral_norm.py:1(<module>)
        5    0.000    0.000    0.000    0.000 pathlib.py:757(joinpath)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:414(StreamContext)
        6    0.000    0.000    0.000    0.000 abc.py:32(_register)
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:37(SecondaryAxis)
        1    0.000    0.000    0.000    0.000 logic.py:1(<module>)
        2    0.000    0.000    0.000    0.000 deprecation.py:1(<module>)
       47    0.000    0.000    0.000    0.000 numbers.py:1927(__mul__)
      212    0.000    0.000    0.000    0.000 transforms.py:1256(<genexpr>)
      841    0.000    0.000    0.000    0.000 inspect.py:2737(annotation)
        1    0.000    0.000    0.000    0.000 interpreter.py:370(Transformer)
        1    0.000    0.000    0.000    0.000 wishart.py:30(Wishart)
        3    0.000    0.000    0.000    0.000 _adapters.py:49(<listcomp>)
        1    0.000    0.000    0.000    0.000 free_groups.py:1(<module>)
       37    0.000    0.000    0.000    0.000 numeric.py:1855(isscalar)
       10    0.000    0.000    0.000    0.000 deprecation.py:83(wrap)
        1    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<dictcomp>)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:138(_family)
      130    0.000    0.000    0.000    0.000 dataclasses.py:325(__init__)
        1    0.000    0.000    0.000    0.000 container.py:552(ParameterList)
        8    0.000    0.000    0.000    0.000 core.py:5098(__init__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3646(_logpxf_dispatch)
        1    0.000    0.000    0.000    0.000 _sysconfigdata__linux_x86_64-linux-gnu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 legendre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _interface.py:55(LinearOperator)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:120(<dictcomp>)
        1    0.000    0.000    0.000    0.000 systems.py:1(<module>)
        1    0.000    0.000    0.000    0.000 maple.py:1(<module>)
       19    0.000    0.000    0.000    0.000 __init__.py:2271(_check_shape)
       72    0.000    0.000    0.000    0.000 util.py:110(get)
       38    0.000    0.000    0.000    0.000 assumptions.py:494(make_property)
        2    0.000    0.000    0.000    0.000 __init__.py:305(_compile_repl)
        1    0.000    0.000    0.000    0.000 distribution.py:10(Distribution)
        1    0.000    0.000    0.000    0.000 conv.py:272(Conv1d)
        4    0.000    0.000    0.000    0.000 polynomial.py:1227(__init__)
      748    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       37    0.000    0.000    0.000    0.000 libmpf.py:950(mpf_div)
        1    0.000    0.000    0.000    0.000 rnn.py:18(LSTMCell)
        4    0.000    0.000    0.000    0.000 ctx_iv.py:43(__new__)
      567    0.000    0.000    0.000    0.000 permutations.py:1184(size)
      317    0.000    0.000    0.000    0.000 overrides.py:105(array_function_dispatch)
        1    0.000    0.000    0.000    0.000 _fuser.py:1(<module>)
        1    0.000    0.000    0.000    0.000 basic.py:2233(Atom)
       40    0.000    0.000    0.000    0.000 getlimits.py:24(_fr1)
        3    0.000    0.000    0.000    0.000 blas.py:422(get_blas_funcs)
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.isSubtypeOf}
        3    0.000    0.000    0.000    0.000 __init__.py:882(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4391(__init__)
        1    0.000    0.000    0.000    0.000 laguerre.py:1(<module>)
       51    0.000    0.000    0.000    0.000 nvfuser_prims.py:144(_assert_nvfuser_op_exists)
        1    0.000    0.000    0.000    0.000 repmatrix.py:183(_dod_to_DomainMatrix)
       23    0.000    0.000    0.000    0.000 rcsetup.py:347(validate_color_or_auto)
        1    0.000    0.000    0.000    0.000 serialization.py:281(_open_zipfile_reader)
        2    0.000    0.000    0.000    0.000 sysconfig.py:109(_getuserbase)
        1    0.000    0.000    0.000    0.000 abc.py:56(Traversable)
        5    0.000    0.000    0.000    0.000 matrices.py:749(__init__)
        2    0.000    0.000    0.000    0.000 version.py:47(parse)
        1    0.000    0.000    0.000    0.000 __init__.py:437(_get_xdg_config_dir)
       28    0.000    0.000    0.000    0.000 ops.py:324(__getitem__)
        1    0.000    0.000    0.000    0.000 assumptions_generated.py:1(<module>)
      127    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
      777    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_iscased}
      576    0.000    0.000    0.000    0.000 {method '__init_subclass__' of 'object' objects}
       10    0.000    0.000    0.000    0.000 typing_extensions.py:649(__init__)
        3    0.000    0.000    0.000    0.000 message.py:243(get_payload)
      129    0.000    0.000    0.000    0.000 dataclasses.py:1047(<listcomp>)
        2    0.000    0.000    0.000    0.000 core.py:6169(<listcomp>)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:169(FakeTensorConverter)
        1    0.000    0.000    0.000    0.000 accumulationbounds.py:14(AccumulationBounds)
        1    0.000    0.000    0.000    0.000 cnf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fancysets.py:1386(CartesianComplexRegion)
      108    0.000    0.000    0.000    0.000 typing.py:1015(<genexpr>)
       29    0.000    0.000    0.000    0.000 _array_api.py:571(<listcomp>)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:101(<lambda>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:376(<genexpr>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:37(Category)
       26    0.000    0.000    0.000    0.000 {built-in method torch._C.call_stack}
        1    0.000    0.000    0.000    0.000 patches.py:1185(Arrow)
      152    0.000    0.000    0.000    0.000 typing.py:456(__repr__)
       62    0.000    0.000    0.000    0.000 rational.py:7(create_reduced)
        1    0.000    0.000    0.000    0.000 __init__.py:979(ComplexFloatStorage)
  277/275    0.000    0.000    0.000    0.000 results.py:176(__init__)
        1    0.000    0.000    0.000    0.000 importer.py:28(Importer)
        1    0.000    0.000    0.000    0.000 conv.py:182(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 pooling.py:257(MaxUnpool1d)
       45    0.000    0.000    0.000    0.000 pathlib.py:523(_format_parsed_parts)
      107    0.000    0.000    0.000    0.000 rcsetup.py:65(__call__)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:29(_nonzero_schemas)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1539(_max_pool)
        4    0.000    0.000    0.000    0.000 typing.py:353(decorator)
        1    0.000    0.000    0.000    0.000 docstring.py:1(<module>)
       93    0.000    0.000    0.000    0.000 _script.py:897(<lambda>)
        1    0.000    0.000    0.000    0.000 _cubic.py:378(Akima1DInterpolator)
        1    0.000    0.000    0.000    0.000 _at.py:27(_AtOp)
        1    0.000    0.000    0.000    0.000 decorators.py:111(binary_op_wrapper)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:9(PythonRationalField)
        1    0.000    0.000    0.000    0.000 functional_modules.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:13(DenseNDimArray)
       16    0.000    0.000    0.000    0.000 __init__.py:150(__init__)
      377    0.000    0.000    0.000    0.000 enum.py:779(<genexpr>)
        2    0.000    0.000    0.000    0.000 twodim_base.py:158(eye)
        1    0.000    0.000    0.000    0.000 scalarint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:35(IdentityFunction)
        1    0.000    0.000    0.000    0.000 activation.py:889(MultiheadAttention)
        1    0.000    0.000    0.000    0.000 patches.py:3828(FancyArrowPatch)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:5544(Forward)
        1    0.000    0.000    0.000    0.000 libintmath.py:126(<listcomp>)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2835(deprecated)
        2    0.000    0.000    0.000    0.000 expressiondomain.py:26(__init__)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:1(<module>)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:117(<lambda>)
        1    0.000    0.000    0.000    0.000 _tzpath.py:1(<module>)
      729    0.000    0.000    0.000    0.000 conflict.py:63(<lambda>)
        1    0.000    0.000    0.000    0.000 mixins.py:59(NDArrayOperatorsMixin)
        2    0.000    0.000    0.000    0.000 core.py:555(set_results_name)
        1    0.000    0.000    0.000    0.000 assumptions.py:220(_load_pre_generated_assumption_rules)
        4    0.000    0.000    0.000    0.000 _script.py:265(__init__)
        1    0.000    0.000    0.000    0.000 factorials.py:285(subfactorial)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:1(<module>)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:109(<genexpr>)
        2    0.000    0.000    0.000    0.000 warnings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv_add.py:1(<module>)
        1    0.000    0.000    0.000    0.000 add.py:93(Add)
        1    0.000    0.000    0.000    0.000 swa_utils.py:1(<module>)
        8    0.000    0.000    0.000    0.000 core.py:4464(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 operator_support.py:37(OperatorSupport)
        6    0.000    0.000    0.000    0.000 constraints.py:192(__init__)
        1    0.000    0.000    0.000    0.000 expr.py:261(_pow)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 para4tb.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ask_generated.py:1(<module>)
        7    0.000    0.000    0.000    0.000 enum.py:1532(unique)
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 sgd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scale.py:204(LogTransform)
    36/32    0.000    0.000    0.000    0.000 typing.py:224(_type_repr)
       58    0.000    0.000    0.000    0.000 results.py:454(__iadd__)
        1    0.000    0.000    0.000    0.000 _fft.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:748(FakeTensor)
        1    0.000    0.000    0.000    0.000 core.py:4667(ParseElementEnhance)
       19    0.000    0.000    0.000    0.000 __init__.py:1281(_to_unmasked_float_array)
        7    0.000    0.000    0.000    0.000 dev.py:112(decorator)
        1    0.000    0.000    0.000    0.000 _dataclass_impls.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dlpack.py:10(DLDeviceType)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:199(ExprWithLimits)
        1    0.000    0.000    0.000    0.000 _trigonometric_special.py:1(<module>)
        1    0.000    0.000    0.000    0.000 streams.py:395(StreamReader)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:129(_max_pool)
        1    0.000    0.000    0.000    0.000 core.py:2697(MaskedArray)
        9    0.000    0.000    0.000    0.000 numeric.py:136(ones)
       40    0.000    0.000    0.000    0.000 _parser.py:256(getwhile)
        3    0.000    0.000    0.000    0.000 patches.py:1885(<listcomp>)
        1    0.000    0.000    0.000    0.000 ellipse.py:41(Ellipse)
      682    0.000    0.000    0.000    0.000 {function RcParams.__getitem__ at 0x14ca589e8c20}
        1    0.000    0.000    0.000    0.000 band_data_in.py:40(get_Kpoint)
      208    0.000    0.000    0.000    0.000 inspect.py:946(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:125(Diagnostics)
        1    0.000    0.000    0.000    0.000 facts.py:474(_from_python)
        1    0.000    0.000    0.000    0.000 futures.py:1(<module>)
        9    0.000    0.000    0.000    0.000 warnings.py:165(simplefilter)
        1    0.000    0.000    0.000    0.000 rnn.py:32(RNNBase)
        1    0.000    0.000    0.000    0.000 selectors.py:341(_PollLikeSelector)
      4/3    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
      250    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        2    0.000    0.000    0.000    0.000 version.py:188(__init__)
        1    0.000    0.000    0.000    0.000 ordinals.py:56(Ordinal)
        1    0.000    0.000    0.000    0.000 ntheory.py:1(<module>)
       24    0.000    0.000    0.000    0.000 constructor.py:337(add_default_constructor)
       80    0.000    0.000    0.000    0.000 _sources.py:51(remove_prefix)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:508(contains)
        1    0.000    0.000    0.000    0.000 extensions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:213(BboxBase)
        1    0.000    0.000    0.000    0.000 categorical.py:1(<module>)
        1    0.000    0.000    0.000    0.000 composition.py:38(Composition)
        1    0.000    0.000    0.000    0.000 cse_main.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:281(Number)
      174    0.000    0.000    0.000    0.000 _docscrape.py:713(_should_skip_member)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:517(GaussianRationalField)
      212    0.000    0.000    0.000    0.000 transforms.py:1262(<genexpr>)
        1    0.000    0.000    0.000    0.000 pprint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _compression.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lines.py:200(Line2D)
        1    0.000    0.000    0.000    0.000 adamw.py:1(<module>)
      397    0.000    0.000    0.000    0.000 enum.py:1226(value)
        1    0.000    0.000    0.000    0.000 inputs.py:1182(KpointsSupportedModes)
        1    0.000    0.000    0.000    0.000 core.py:2808(__new__)
        1    0.000    0.000    0.000    0.000 binomial.py:1(<module>)
       37    0.000    0.000    0.000    0.000 rcsetup.py:558(_validate_linestyle)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:255(WriteSubprocessPipeProto)
        1    0.000    0.000    0.000    0.000 patches.py:4184(ConnectionPatch)
        1    0.000    0.000    0.000    0.000 dataset.py:202(ConcatDataset)
       14    0.000    0.000    0.000    0.000 _infra.py:65(from_sarif)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:1(<module>)
        4    0.000    0.000    0.000    0.000 {function Random.seed at 0x14cb422018a0}
        1    0.000    0.000    0.000    0.000 lbfgs.py:1(<module>)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:367(broadcast_to)
        1    0.000    0.000    0.000    0.000 fake_utils.py:48(CrossRefFakeMode)
        2    0.000    0.000    0.000    0.000 multinomial.py:1(<module>)
       12    0.000    0.000    0.000    0.000 polytools.py:69(_polifyit)
        1    0.000    0.000    0.000    0.000 module.py:53(_WrappedHook)
        1    0.000    0.000    0.000    0.000 _parser.py:569(__init__)
       15    0.000    0.000    0.000    0.000 <frozen _collections_abc>:933(clear)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:328(GaussianIntegerRing)
        9    0.000    0.000    0.000    0.000 _util.py:981(decorator)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:397(_logpmf_formula)
        2    0.000    0.000    0.000    0.000 linear_fused.py:1(<module>)
       55    0.000    0.000    0.000    0.000 numbers.py:3145(__hash__)
        1    0.000    0.000    0.000    0.000 ticker.py:1689(Locator)
        1    0.000    0.000    0.000    0.000 _datasource.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <frozen os>:44(_get_exports_list)
        1    0.000    0.000    0.000    0.000 symbol.py:456(Dummy)
        1    0.000    0.000    0.000    0.000 conv.py:103(Conv1d)
        1    0.000    0.000    0.000    0.000 _multicomp.py:25(DunnettResult)
        1    0.000    0.000    0.000    0.000 trigonometry.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:1(<module>)
        2    0.000    0.000    0.000    0.000 glob.py:141(_iterdir)
        2    0.000    0.000    0.000    0.000 _pep440.py:117(parse)
        1    0.000    0.000    0.000    0.000 __init__.py:892(MetadataPathFinder)
        5    0.000    0.000    0.000    0.000 iterables.py:1948(has_variety)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2457(pdf)
       68    0.000    0.000    0.000    0.000 _internal.py:38(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:270(ComposeTransform)
        1    0.000    0.000    0.000    0.000 grouping.py:144(GrouperIterDataPipe)
        1    0.000    0.000    0.000    0.000 _cm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polysys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 facts.py:380(FactRules)
       65    0.000    0.000    0.000    0.000 core.py:4087(<listcomp>)
       14    0.000    0.000    0.000    0.000 numeric.py:1330(normalize_axis_tuple)
        1    0.000    0.000    0.000    0.000 polyconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polytools.py:4542(PurePoly)
        1    0.000    0.000    0.000    0.000 polar.py:225(ThetaLocator)
        1    0.000    0.000    0.000    0.000 numbers.py:419(bernoulli)
       40    0.000    0.000    0.000    0.000 numbers.py:780(__new__)
        1    0.000    0.000    0.000    0.000 json.py:111(MSONable)
        5    0.000    0.000    0.000    0.000 functools.py:188(total_ordering)
       11    0.000    0.000    0.000    0.000 _tensor.py:31(_handle_torch_function_and_wrap_type_error_to_not_implemented)
        1    0.000    0.000    0.000    0.000 uniform.py:1(<module>)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:1(<module>)
      156    0.000    0.000    0.000    0.000 inspect.py:943(<genexpr>)
    35/24    0.000    0.000    0.000    0.000 typing.py:371(_eval_type)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1644(FigureCanvasBase)
        1    0.000    0.000    0.000    0.000 suite.py:328(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wrappers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 filelist.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:294(__init__)
        1    0.000    0.000    0.000    0.000 puiseux.py:1(<module>)
      120    0.000    0.000    0.000    0.000 periodic_table.py:170(__getattr__)
        4    0.000    0.000    0.000    0.000 typing_extensions.py:491(__init__)
       59    0.000    0.000    0.000    0.000 _array_api.py:170(_asarray)
       85    0.000    0.000    0.000    0.000 _parser.py:295(checkgroupname)
        1    0.000    0.000    0.000    0.000 combining.py:56(ZipperMapDataPipe)
        1    0.000    0.000    0.000    0.000 pydoc.py:1803(Helper)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:410(ints)
       23    0.000    0.000    0.000    0.000 stride_tricks.py:416(_broadcast_shape)
        1    0.000    0.000    0.000    0.000 weight_norm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 julia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cm.py:211(ScalarMappable)
        8    0.000    0.000    0.000    0.000 deprecation.py:493(_suppress_matplotlib_deprecation_warning)
        1    0.000    0.000    0.000    0.000 _comparison.py:484(NumberPair)
        6    0.000    0.000    0.000    0.000 gzip.py:525(_add_read_data)
        6    0.000    0.000    0.000    0.000 core.py:5220(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:1402(__init__)
       24    0.000    0.000    0.000    0.000 {built-in method _warnings.warn}
       28    0.000    0.000    0.000    0.000 locale.py:678(getpreferredencoding)
        3    0.000    0.000    0.000    0.000 blas.py:337(_get_funcs)
       26    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<listcomp>)
        1    0.000    0.000    0.000    0.000 rationalfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bz2.py:97(close)
        1    0.000    0.000    0.000    0.000 response.py:1(<module>)
       10    0.000    0.000    0.000    0.000 version.py:314(parse)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:1(<module>)
       76    0.000    0.000    0.000    0.000 signal.py:9(<lambda>)
        1    0.000    0.000    0.000    0.000 filelister.py:13(FileListerIterDataPipe)
        4    0.000    0.000    0.000    0.000 _miobase.py:134(convert_dtypes)
        4    0.000    0.000    0.000    0.000 enum.py:1420(<listcomp>)
        1    0.000    0.000    0.000    0.000 win.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:857(Path)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor.py:17(ReportingDescriptor)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset15.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scale.py:263(LogScale)
        1    0.000    0.000    0.000    0.000 package_exporter.py:74(PackagingErrorReason)
        1    0.000    0.000    0.000    0.000 _subplots.py:11(SubplotBase)
       62    0.000    0.000    0.000    0.000 __init__.py:26(__new__)
       66    0.000    0.000    0.000    0.000 __init__.py:237(_releaseLock)
       11    0.000    0.000    0.000    0.000 __init__.py:119(inplace_wrapper)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4472(halfcauchy_gen)
        1    0.000    0.000    0.000    0.000 pooling.py:331(MaxUnpool2d)
       30    0.000    0.000    0.000    0.000 warnings.py:466(__enter__)
        1    0.000    0.000    0.000    0.000 Image.py:138(Transpose)
      507    0.000    0.000    0.000    0.000 boolalg.py:440(__bool__)
        1    0.000    0.000    0.000    0.000 pooling.py:418(MaxUnpool3d)
        1    0.000    0.000    0.000    0.000 fold.py:1(<module>)
        1    0.000    0.000    0.000    0.000 single.py:1107(Liouville)
      673    0.000    0.000    0.000    0.000 _beartype.py:34(_no_op_decorator)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:1(<module>)
        1    0.000    0.000    0.000    0.000 split_utils.py:31(Component)
        1    0.000    0.000    0.000    0.000 pooling.py:735(FractionalMaxPool2d)
      140    0.000    0.000    0.000    0.000 deprecation.py:112(deprecated)
        2    0.000    0.000    0.000    0.000 _parser.py:997(parse_template)
        3    0.000    0.000    0.000    0.000 six.py:887(wrapper)
        1    0.000    0.000    0.000    0.000 einsumfunc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 coreerrors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1960(PoissonDisk)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:1(<module>)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3269(round)
        1    0.000    0.000    0.000    0.000 _factories.py:1(<module>)
       10    0.000    0.000    0.000    0.000 util.py:421(_inner)
      252    0.000    0.000    0.000    0.000 rcsetup.py:58(func)
        1    0.000    0.000    0.000    0.000 polynomial.py:1472(Polynomial)
        1    0.000    0.000    0.000    0.000 geometric.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parametrize.py:69(ParametrizationList)
        1    0.000    0.000    0.000    0.000 polar.py:407(RadialLocator)
        1    0.000    0.000    0.000    0.000 _constraints.py:1(<module>)
       20    0.000    0.000    0.000    0.000 core.py:1030(reset_cache)
        2    0.000    0.000    0.000    0.000 init.py:1(<module>)
      101    0.000    0.000    0.000    0.000 core.py:6161(_expanded)
       27    0.000    0.000    0.000    0.000 functools.py:845(_is_valid_dispatch_type)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:1(<module>)
      130    0.000    0.000    0.000    0.000 core.py:1785(set_whitespace_chars)
        3    0.000    0.000    0.000    0.000 {method 'integers' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 patches.py:2376(ConnectionStyle)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:567(_get_protocol_attrs)
       26    0.000    0.000    0.000    0.000 _sources.py:75(<listcomp>)
        1    0.000    0.000    0.000    0.000 selecting.py:19(FilterIterDataPipe)
        1    0.000    0.000    0.000    0.000 extrapolation.py:1(<module>)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:340(_broadcast_to)
        2    0.000    0.000    0.000    0.000 core.py:2978(__array_finalize__)
        8    0.000    0.000    0.000    0.000 {built-in method zlib.crc32}
       26    0.000    0.000    0.000    0.000 _sources.py:72(<listcomp>)
        1    0.000    0.000    0.000    0.000 pooling.py:805(FractionalMaxPool3d)
       26    0.000    0.000    0.000    0.000 pathlib.py:877(_make_child_relpath)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:100(dtype_from_ctypes_type)
        1    0.000    0.000    0.000    0.000 lll.py:1(<module>)
        3    0.000    0.000    0.000    0.000 symbolic_opset10.py:240(_avg_pool)
        1    0.000    0.000    0.000    0.000 datapipe.py:42(IterDataPipe)
        2    0.000    0.000    0.000    0.000 sysconfig.py:118(joinuser)
        5    0.000    0.000    0.000    0.000 symbolic_shapes.py:858(_lru_cache)
        8    0.000    0.000    0.000    0.000 _ops.py:603(__getattr__)
        1    0.000    0.000    0.000    0.000 colorbar.py:1186(Colorbar)
        4    0.000    0.000    0.000    0.000 doccer.py:202(_doc)
        2    0.000    0.000    0.000    0.000 __init__.py:653(get_arch_list)
       13    0.000    0.000    0.000    0.000 core.py:8406(_replace_return_type)
        1    0.000    0.000    0.000    0.000 iterables.py:781(topological_sort)
       19    0.000    0.000    0.000    0.000 path.py:193(_update_values)
        1    0.000    0.000    0.000    0.000 transforms.py:543(PowerTransform)
       88    0.000    0.000    0.000    0.000 six.py:146(__init__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:204(_LogUniform)
        1    0.000    0.000    0.000    0.000 storage.py:318(TypedStorage)
        7    0.000    0.000    0.000    0.000 dev.py:80(deprecated_function_decorator)
        6    0.000    0.000    0.000    0.000 core.py:1146(__init__)
        1    0.000    0.000    0.000    0.000 parametrizations.py:33(_OrthMaps)
       30    0.000    0.000    0.000    0.000 _array_api.py:523(<listcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:180(Conv1d)
        1    0.000    0.000    0.000    0.000 conv.py:465(Conv3d)
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.get}
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1609(Sobol)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:1(<module>)
        3    0.000    0.000    0.000    0.000 core.py:1627(__xor__)
        1    0.000    0.000    0.000    0.000 _contextlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 independent.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ksstats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _sf_error.py:1(<module>)
      144    0.000    0.000    0.000    0.000 core.py:2025(__hash__)
        1    0.000    0.000    0.000    0.000 tokens.py:334(CommentToken)
        1    0.000    0.000    0.000    0.000 preview.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1502(<listcomp>)
      643    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_tolower}
        1    0.000    0.000    0.000    0.000 octave.py:1(<module>)
       20    0.000    0.000    0.000    0.000 module.py:2176(named_children)
        1    0.000    0.000    0.000    0.000 proxy.py:321(Proxy)
        1    0.000    0.000    0.000    0.000 conv.py:47(_ConvNd)
        1    0.000    0.000    0.000    0.000 conv.py:156(Conv2d)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ellip_harm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1122(ELEMENTWISE_TYPE_PROMOTION_KIND)
        1    0.000    0.000    0.000    0.000 asgd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset16.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph.py:275(CodeGen)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:1(<module>)
       15    0.000    0.000    0.000    0.000 copyreg.py:113(_slotnames)
       13    0.000    0.000    0.000    0.000 sympy_parser.py:1239(<genexpr>)
       40    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
        1    0.000    0.000    0.000    0.000 ideals.py:1(<module>)
       95    0.000    0.000    0.000    0.000 permutations.py:1060(_hashable_content)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2388(standard_deviation)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _infra.py:13(Level)
        1    0.000    0.000    0.000    0.000 trace_dependencies.py:1(<module>)
        2    0.000    0.000    0.000    0.000 hypergeometric.py:1(<module>)
       12    0.000    0.000    0.000    0.000 matexpr.py:23(deco)
        3    0.000    0.000    0.000    0.000 patches.py:1878(<listcomp>)
        1    0.000    0.000    0.000    0.000 adamax.py:1(<module>)
    18/17    0.000    0.000    0.000    0.000 typing.py:1480(<listcomp>)
        1    0.000    0.000    0.000    0.000 quadrature.py:1(<module>)
       13    0.000    0.000    0.000    0.000 enum.py:1347(_iter_member_by_def_)
        1    0.000    0.000    0.000    0.000 numbers.py:594(Float)
        2    0.000    0.000    0.000    0.000 log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datetime.py:1311(time)
       16    0.000    0.000    0.000    0.000 arraypad.py:129(_set_pad_area)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:1(<module>)
       30    0.000    0.000    0.000    0.000 core.py:4465(<genexpr>)
        1    0.000    0.000    0.000    0.000 quoprimime.py:55(<listcomp>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:14(Normal)
        5    0.000    0.000    0.000    0.000 _basic.py:3009(_is_subdtype)
       42    0.000    0.000    0.000    0.000 ctx_mp_python.py:336(__new__)
        9    0.000    0.000    0.000    0.000 api.py:74(_require_initialized)
        1    0.000    0.000    0.000    0.000 package_exporter.py:53(_ModuleProviderAction)
        5    0.000    0.000    0.000    0.000 add.py:40(_addsort)
        1    0.000    0.000    0.000    0.000 symbol.py:212(Symbol)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph.py:131(saved_tensors_hooks)
        1    0.000    0.000    0.000    0.000 logging_handlers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adagrad.py:1(<module>)
        4    0.000    0.000    0.000    0.000 typing.py:1520(__init__)
       28    0.000    0.000    0.000    0.000 <frozen posixpath>:388(normpath)
        2    0.000    0.000    0.000    0.000 cache.py:168(lazy_function)
        1    0.000    0.000    0.000    0.000 facts.py:411(__init__)
        1    0.000    0.000    0.000    0.000 constants.py:31(_SendfileMode)
      110    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 quiver.py:195(QuiverKey)
       51    0.000    0.000    0.000    0.000 rcsetup.py:407(validate_fontsize)
      100    0.000    0.000    0.000    0.000 matrix_element.py:157(<listcomp>)
        1    0.000    0.000    0.000    0.000 rmsprop.py:1(<module>)
       99    0.000    0.000    0.000    0.000 traceback.py:325(walk_stack)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:18(autocast)
        1    0.000    0.000    0.000    0.000 _rules.py:22(_NodeMissingOnnxShapeInference)
       11    0.000    0.000    0.000    0.000 __init__.py:12(NewCls)
        1    0.000    0.000    0.000    0.000 _pytree.py:114(TreeSpec)
        1    0.000    0.000    0.000    0.000 __init__.py:491(_parse_visible_devices)
        2    0.000    0.000    0.000    0.000 traversal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glsl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 registration.py:64(OverrideDict)
        1    0.000    0.000    0.000    0.000 _fftlog_backend.py:1(<module>)
       46    0.000    0.000    0.000    0.000 getlimits.py:101(_float_conv)
       55    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        1    0.000    0.000    0.000    0.000 von_mises.py:70(VonMises)
       26    0.000    0.000    0.000    0.000 _util.py:188(_transition_to_rng)
      130    0.000    0.000    0.000    0.000 unicode.py:105(<genexpr>)
      362    0.000    0.000    0.000    0.000 inspect.py:3028(return_annotation)
        1    0.000    0.000    0.000    0.000 mathtext.py:1078(StandardPsFonts)
        1    0.000    0.000    0.000    0.000 nadam.py:1(<module>)
      231    0.000    0.000    0.000    0.000 periodic_table.py:237(__hash__)
       10    0.000    0.000    0.000    0.000 getlimits.py:685(__init__)
       11    0.000    0.000    0.000    0.000 __init__.py:1467(debug)
        1    0.000    0.000    0.000    0.000 power.py:22(Pow)
       93    0.000    0.000    0.000    0.000 sites.py:138(species)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:24(<dictcomp>)
        7    0.000    0.000    0.000    0.000 memoization.py:27(decorator)
        1    0.000    0.000    0.000    0.000 conv.py:316(Conv2d)
        1    0.000    0.000    0.000    0.000 protocols.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:154(UniformQuantizationObserverBase)
        1    0.000    0.000    0.000    0.000 cache.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:386(__getattr__)
        1    0.000    0.000    0.000    0.000 registration.py:123(_SymbolicFunctionGroup)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.000    0.000    0.000    0.000 latex.py:142(LatexPrinter)
        1    0.000    0.000    0.000    0.000 ExifTags.py:341(<dictcomp>)
        1    0.000    0.000    0.000    0.000 combining.py:313(DemultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:65(_DTypeDictBase)
        1    0.000    0.000    0.000    0.000 report.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _path.py:1(<module>)
       85    0.000    0.000    0.000    0.000 typing.py:891(__hash__)
       15    0.000    0.000    0.000    0.000 arrayprint.py:989(<genexpr>)
        1    0.000    0.000    0.000    0.000 radam.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:298(OpTree)
        1    0.000    0.000    0.000    0.000 _compatibility.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:43(RuntimeTypeCheckState)
        1    0.000    0.000    0.000    0.000 scale.py:560(LogitScale)
        1    0.000    0.000    0.000    0.000 conv.py:214(Conv3d)
        1    0.000    0.000    0.000    0.000 meta_utils.py:70(MetaConverter)
        6    0.000    0.000    0.000    0.000 {method 'multinomial' of 'numpy.random._generator.Generator' objects}
        7    0.000    0.000    0.000    0.000 decoder.py:284(__init__)
        1    0.000    0.000    0.000    0.000 ufunclike.py:1(<module>)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:1(<module>)
        3    0.000    0.000    0.000    0.000 feedparser.py:139(__init__)
        5    0.000    0.000    0.000    0.000 version.py:70(__lt__)
        1    0.000    0.000    0.000    0.000 recipes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 powsimp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:31(Cursors)
        2    0.000    0.000    0.000    0.000 getlimits.py:307(_get_machar)
      423    0.000    0.000    0.000    0.000 typing.py:2216(cast)
        1    0.000    0.000    0.000    0.000 numbers.py:2986(Infinity)
        1    0.000    0.000    0.000    0.000 numbers.py:3176(NegativeInfinity)
        7    0.000    0.000    0.000    0.000 <frozen posixpath>:396(abspath)
        1    0.000    0.000    0.000    0.000 simplex.py:1(<module>)
      109    0.000    0.000    0.000    0.000 inspect.py:505(isbuiltin)
        1    0.000    0.000    0.000    0.000 _bvp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:447(_get_xdg_cache_dir)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sslproto.py:19(SSLProtocolState)
        1    0.000    0.000    0.000    0.000 cauchy.py:1(<module>)
      215    0.000    0.000    0.000    0.000 symbolic_helper.py:234(parse_args)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:44(_bits_of)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:422(spec_from_loader)
        1    0.000    0.000    0.000    0.000 weak.py:79(WeakIdKeyDictionary)
        1    0.000    0.000    0.000    0.000 collections.py:1306(LineCollection)
        1    0.000    0.000    0.000    0.000 tensor.py:968(TensorIndexType)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2494(pmf)
       24    0.000    0.000    0.000    0.000 proxy.py:514(_scope)
        1    0.000    0.000    0.000    0.000 modularinteger.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _polyint.py:108(_reshape_yi)
        1    0.000    0.000    0.000    0.000 _fortran.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scale.py:431(SymmetricalLogScale)
        1    0.000    0.000    0.000    0.000 normal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gamma.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:863(__str__)
        1    0.000    0.000    0.000    0.000 ExifTags.py:352(IFD)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 libmpi.py:1(<module>)
       87    0.000    0.000    0.000    0.000 kl.py:41(register_kl)
        1    0.000    0.000    0.000    0.000 arraypad.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _bws_test.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4590(ShiftedScaledDistribution)
       12    0.000    0.000    0.000    0.000 __init__.py:1893(get_aliased_and_aliases)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:1(<module>)
        1    0.000    0.000    0.000    0.000 umath.py:1(<module>)
        3    0.000    0.000    0.000    0.000 numbers.py:1306(__new__)
        1    0.000    0.000    0.000    0.000 matplotlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:1(<module>)
       13    0.000    0.000    0.000    0.000 weakref.py:367(__init__)
        1    0.000    0.000    0.000    0.000 matrices.py:1(<module>)
        1    0.000    0.000    0.000    0.000 studentT.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _globals.py:65(_CopyMode)
        1    0.000    0.000    0.000    0.000 scale.py:515(LogitTransform)
        7    0.000    0.000    0.000    0.000 symbolic_opset11.py:345(_interpolate)
       50    0.000    0.000    0.000    0.000 sets.py:125(_infimum_key)
        1    0.000    0.000    0.000    0.000 graph.py:267(_PyTreeInfo)
        1    0.000    0.000    0.000    0.000 compositedomain.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:1460(setLevel)
        1    0.000    0.000    0.000    0.000 pareto.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rings.py:586(PolyElement)
        1    0.000    0.000    0.000    0.000 patches.py:1551(Arc)
      191    0.000    0.000    0.000    0.000 <frozen abc>:7(abstractmethod)
        1    0.000    0.000    0.000    0.000 primes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:57(pretty_try_use_unicode)
        3    0.000    0.000    0.000    0.000 core.py:4241(__init__)
        1    0.000    0.000    0.000    0.000 requirements.py:1(<module>)
      391    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 _mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rprop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 evalf.py:1395(_create_evalf_table)
        1    0.000    0.000    0.000    0.000 numbers.py:4474(_register_classes)
        1    0.000    0.000    0.000    0.000 math2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 const_fold.py:11(FoldedGraphModule)
        1    0.000    0.000    0.000    0.000 _web_request.py:15(WebRequest)
        2    0.000    0.000    0.000    0.000 lsoda.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _web_response.py:15(WebResponse)
        1    0.000    0.000    0.000    0.000 ImageColor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2029(InverseTrigonometricFunction)
        3    0.000    0.000    0.000    0.000 monkey.py:44(get_unpatched)
        1    0.000    0.000    0.000    0.000 _comparison.py:607(TensorLikePair)
       91    0.000    0.000    0.000    0.000 dataclasses.py:604(<genexpr>)
        1    0.000    0.000    0.000    0.000 dist.py:77(Distribution)
        1    0.000    0.000    0.000    0.000 rcode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:888(HistogramObserver)
        1    0.000    0.000    0.000    0.000 docstring.py:6(Substitution)
       42    0.000    0.000    0.000    0.000 docstring.py:43(update)
        1    0.000    0.000    0.000    0.000 padding.py:82(ConstantPad2d)
        1    0.000    0.000    0.000    0.000 sets.py:47(Set)
       30    0.000    0.000    0.000    0.000 warnings.py:487(__exit__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3145(_moment_raw)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2692(max)
       62    0.000    0.000    0.000    0.000 unary.py:149(_torch_unary)
        1    0.000    0.000    0.000    0.000 __init__.py:1076(__init__)
        2    0.000    0.000    0.000    0.000 stubs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:172(SDPBackend)
        1    0.000    0.000    0.000    0.000 docinfo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _result.py:28(Result)
        7    0.000    0.000    0.000    0.000 _parser.py:309(_convert)
        8    0.000    0.000    0.000    0.000 _aliases.py:89(asarray)
        1    0.000    0.000    0.000    0.000 pretty.py:30(PrettyPrinter)
        6    0.000    0.000    0.000    0.000 {method 'permuted' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 Image.py:158(Resampling)
        1    0.000    0.000    0.000    0.000 _kdtree.py:206(KDTree)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _spherical_bessel.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:47(Action)
        1    0.000    0.000    0.000    0.000 readers.py:16(__init__)
       10    0.000    0.000    0.000    0.000 basic.py:135(_get_postprocessors)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:1(<module>)
      162    0.000    0.000    0.000    0.000 _compatibility.py:7(compatibility)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:138(__new__)
      169    0.000    0.000    0.000    0.000 contextlib.py:431(__exit__)
       43    0.000    0.000    0.000    0.000 pathlib.py:515(_from_parsed_parts)
        1    0.000    0.000    0.000    0.000 fractionfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sdm.py:25(SDM)
        1    0.000    0.000    0.000    0.000 geo.py:252(AitoffAxes)
        1    0.000    0.000    0.000    0.000 _run.py:30(Run)
        1    0.000    0.000    0.000    0.000 pg_operation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _policybase.py:99(_extend_docstrings)
        8    0.000    0.000    0.000    0.000 core.py:1031(deprecation_wrapper)
        1    0.000    0.000    0.000    0.000 polyconfig.py:52(configure)
        1    0.000    0.000    0.000    0.000 gridspec.py:602(SubplotSpec)
        1    0.000    0.000    0.000    0.000 _comparison.py:430(BooleanPair)
       30    0.000    0.000    0.000    0.000 _array_api.py:531(<listcomp>)
       83    0.000    0.000    0.000    0.000 traceback.py:264(__init__)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:133(<genexpr>)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 weibull.py:1(<module>)
       62    0.000    0.000    0.000    0.000 __init__.py:202(_checkLevel)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:516(ProxySymDispatchMode)
        1    0.000    0.000    0.000    0.000 timeouts.py:18(_State)
        1    0.000    0.000    0.000    0.000 plane.py:27(<listcomp>)
        3    0.000    0.000    0.000    0.000 TiffTags.py:450(<dictcomp>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:344(Interop)
      127    0.000    0.000    0.000    0.000 ssl.py:130(<lambda>)
       14    0.000    0.000    0.000    0.000 numerictypes.py:357(issubdtype)
        5    0.000    0.000    0.000    0.000 version.py:334(_cmp)
        1    0.000    0.000    0.000    0.000 _mio5.py:149(MatFile5Reader)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:50(SubgraphMatcher)
        6    0.000    0.000    0.000    0.000 libmpf.py:410(from_float)
        7    0.000    0.000    0.000    0.000 symbolic_helper.py:1064(_interpolate_helper)
        1    0.000    0.000    0.000    0.000 _ndbspline.py:1(<module>)
       20    0.000    0.000    0.000    0.000 <frozen io>:60(__getattr__)
        1    0.000    0.000    0.000    0.000 taskgroups.py:1(<module>)
        7    0.000    0.000    0.000    0.000 core.py:3633(__init__)
        1    0.000    0.000    0.000    0.000 pycode.py:79(AbstractPythonCodePrinter)
        1    0.000    0.000    0.000    0.000 core.py:3127(view)
        2    0.000    0.000    0.000    0.000 _compression.py:39(__init__)
       87    0.000    0.000    0.000    0.000 kl.py:72(decorator)
        1    0.000    0.000    0.000    0.000 _stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 poisson.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:354(<listcomp>)
        1    0.000    0.000    0.000    0.000 rrule.py:1307(rruleset)
        3    0.000    0.000    0.000    0.000 functools.py:651(cache)
        1    0.000    0.000    0.000    0.000 structure.py:213(SiteCollection)
        1    0.000    0.000    0.000    0.000 jiterator.py:1(<module>)
        1    0.000    0.000    0.000    0.000 order.py:11(Order)
        3    0.000    0.000    0.000    0.000 core.py:1667(__invert__)
      120    0.000    0.000    0.000    0.000 _multiufuncs.py:43(<genexpr>)
       38    0.000    0.000    0.000    0.000 constructor.py:321(add_constructor)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:4(_InsertPoint)
        1    0.000    0.000    0.000    0.000 core.py:23(Spin)
        3    0.000    0.000    0.000    0.000 misc.py:1(<module>)
       29    0.000    0.000    0.000    0.000 constraint_registry.py:106(<lambda>)
        1    0.000    0.000    0.000    0.000 getlimits.py:612(tiny)
        1    0.000    0.000    0.000    0.000 recurr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1366(MouseButton)
        1    0.000    0.000    0.000    0.000 reductions.py:379(init_reductions)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:772(create_module)
        1    0.000    0.000    0.000    0.000 symbolic_opset17.py:1(<module>)
       58    0.000    0.000    0.000    0.000 unary.py:158(_torch_inplace_unary)
        1    0.000    0.000    0.000    0.000 _signal_api.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:1(<module>)
       60    0.000    0.000    0.000    0.000 module.py:2113(<lambda>)
       14    0.000    0.000    0.000    0.000 rcsetup.py:623(validate_capstyle)
        4    0.000    0.000    0.000    0.000 ssl.py:461(__new__)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:835(__iter__)
        1    0.000    0.000    0.000    0.000 _czt.py:1(<module>)
        1    0.000    0.000    0.000    0.000 design_patterns.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:230(ProfilerAction)
      141    0.000    0.000    0.000    0.000 __init__.py:259(__iter__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3841(Format)
        1    0.000    0.000    0.000    0.000 _tool_component.py:19(ToolComponent)
        1    0.000    0.000    0.000    0.000 _core_metadata.py:1(<module>)
       36    0.000    0.000    0.000    0.000 deprecation.py:192(_deprecated_property)
       42    0.000    0.000    0.000    0.000 typing.py:1803(<genexpr>)
        1    0.000    0.000    0.000    0.000 _monitor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 plotgrid.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:888(Symbol)
        1    0.000    0.000    0.000    0.000 symbolic_opset18.py:1(<module>)
       57    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:865(<listcomp>)
        1    0.000    0.000    0.000    0.000 _classes.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:36(__deprecate_private_class)
        2    0.000    0.000    0.000    0.000 immutable_collections.py:18(_create_immutable_container)
        4    0.000    0.000    0.000    0.000 getlimits.py:62(smallest_subnormal)
        1    0.000    0.000    0.000    0.000 log_normal.py:1(<module>)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:433(broadcast_shapes)
        1    0.000    0.000    0.000    0.000 mock.py:44(<setcomp>)
        1    0.000    0.000    0.000    0.000 combining.py:562(ZipperIterDataPipe)
        1    0.000    0.000    0.000    0.000 internal.py:23(RPCExecMode)
        1    0.000    0.000    0.000    0.000 quant_type.py:9(QuantType)
       90    0.000    0.000    0.000    0.000 basic.py:938(_sorted_args)
       16    0.000    0.000    0.000    0.000 __init__.py:62(_process_keys)
       13    0.000    0.000    0.000    0.000 mixins.py:44(_numeric_methods)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:1(<module>)
        1    0.000    0.000    0.000    0.000 variable.py:1(<module>)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:4792(_one_hidden_rnn)
        1    0.000    0.000    0.000    0.000 combining.py:362(_DemultiplexerIterDataPipe)
       48    0.000    0.000    0.000    0.000 lapack.py:908(backtickrepl)
        1    0.000    0.000    0.000    0.000 jscode.py:1(<module>)
       14    0.000    0.000    0.000    0.000 <frozen posixpath>:140(basename)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rendezvous.py:1(<module>)
        1    0.000    0.000    0.000    0.000 qs.py:1(<module>)
       12    0.000    0.000    0.000    0.000 misc.py:304(func_name)
        1    0.000    0.000    0.000    0.000 Image.py:149(Transform)
        2    0.000    0.000    0.000    0.000 __init__.py:912(createLock)
        1    0.000    0.000    0.000    0.000 registration.py:202(SymbolicRegistry)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:387(_WorldMeta)
        1    0.000    0.000    0.000    0.000 geo.py:416(LambertAxes)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:17(_get_or_create_logger)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2772(_Mode)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:744(FakeTensorConfig)
        1    0.000    0.000    0.000    0.000 core.py:39(OrbitalType)
        1    0.000    0.000    0.000    0.000 _elffile.py:33(EMachine)
        1    0.000    0.000    0.000    0.000 polygon.py:25(<listcomp>)
        1    0.000    0.000    0.000    0.000 compatibility.py:240(IPolys)
        1    0.000    0.000    0.000    0.000 _translation_metadata.py:15(TranslationMetadata)
        1    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
        1    0.000    0.000    0.000    0.000 scale.py:541(LogisticTransform)
        1    0.000    0.000    0.000    0.000 trifinder.py:1(<module>)
        2    0.000    0.000    0.000    0.000 getlimits.py:86(_str_smallest_subnormal)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:1(<module>)
        6    0.000    0.000    0.000    0.000 <frozen posixpath>:117(splitext)
      127    0.000    0.000    0.000    0.000 ssl.py:125(<lambda>)
      134    0.000    0.000    0.000    0.000 wrappers.py:96(__init__)
        1    0.000    0.000    0.000    0.000 gzip.py:456(__init__)
      100    0.000    0.000    0.000    0.000 perm_groups.py:136(<genexpr>)
        1    0.000    0.000    0.000    0.000 inference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 operations.py:29(AssocOp)
        3    0.000    0.000    0.000    0.000 core.py:5079(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:393(norm_gen)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:659(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:231(<listcomp>)
        1    0.000    0.000    0.000    0.000 table.py:30(Cell)
        6    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 widgets.py:672(TextBox)
        3    0.000    0.000    0.000    0.000 core.py:2488(__init__)
       55    0.000    0.000    0.000    0.000 numbers.py:546(__hash__)
       93    0.000    0.000    0.000    0.000 exceptions.py:49(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._init_names}
        7    0.000    0.000    0.000    0.000 _legacy.py:15(deprecated)
        1    0.000    0.000    0.000    0.000 padding.py:133(ConstantPad3d)
       92    0.000    0.000    0.000    0.000 {built-in method math.log}
      377    0.000    0.000    0.000    0.000 enum.py:1221(name)
       38    0.000    0.000    0.000    0.000 observer.py:77(_with_args)
        1    0.000    0.000    0.000    0.000 dates.py:589(DateFormatter)
        1    0.000    0.000    0.000    0.000 rings.py:196(PolyRing)
       52    0.000    0.000    0.000    0.000 _add_newdocs.py:6754(refer_to_array_attribute)
        1    0.000    0.000    0.000    0.000 geo.py:301(HammerAxes)
       38    0.000    0.000    0.000    0.000 getlimits.py:16(_fr0)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:12(FPContext)
        1    0.000    0.000    0.000    0.000 core.py:2510(Keyword)
        3    0.000    0.000    0.000    0.000 __init__.py:576(__init__)
       61    0.000    0.000    0.000    0.000 _inspect.py:144(<lambda>)
        1    0.000    0.000    0.000    0.000 importtools.py:14(__sympy_debug)
        9    0.000    0.000    0.000    0.000 typing.py:1639(__repr__)
        3    0.000    0.000    0.000    0.000 numbers.py:1374(_new)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:1(<module>)
       28    0.000    0.000    0.000    0.000 typing_extensions.py:495(__setattr__)
        1    0.000    0.000    0.000    0.000 remote_device.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:1(<module>)
       36    0.000    0.000    0.000    0.000 constraints.py:170(__init__)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:464(__str__)
       47    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1103(_sanity_check)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:1(<module>)
      104    0.000    0.000    0.000    0.000 inspect.py:456(istraceback)
    54/46    0.000    0.000    0.000    0.000 fake_tensor.py:94(<genexpr>)
       26    0.000    0.000    0.000    0.000 basic.py:88(_cmp_name)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:262(_interpolate)
        5    0.000    0.000    0.000    0.000 transforms.py:242(make_wrapper)
        2    0.000    0.000    0.000    0.000 dispatcher.py:46(ambiguity_register_error_ignore_dup)
        1    0.000    0.000    0.000    0.000 _lazy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:446(record_function)
        1    0.000    0.000    0.000    0.000 _polybase.py:18(ABCPolyBase)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2322(any)
      127    0.000    0.000    0.000    0.000 ssl.py:135(<lambda>)
        1    0.000    0.000    0.000    0.000 locks.py:439(_BarrierState)
        1    0.000    0.000    0.000    0.000 _invocation.py:17(Invocation)
        1    0.000    0.000    0.000    0.000 reinplace.py:16(_ViewType)
        1    0.000    0.000    0.000    0.000 fetch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 settings.py:1(<module>)
        6    0.000    0.000    0.000    0.000 bessel.py:893(assume_integer_order)
        2    0.000    0.000    0.000    0.000 polyclasses.py:146(__new__)
        1    0.000    0.000    0.000    0.000 quiver.py:442(Quiver)
        2    0.000    0.000    0.000    0.000 calculus.py:1(<module>)
        1    0.000    0.000    0.000    0.000 groups.py:317(<dictcomp>)
      116    0.000    0.000    0.000    0.000 typing.py:1812(<genexpr>)
        1    0.000    0.000    0.000    0.000 _guards.py:253(GuardsCheckpointState)
        3    0.000    0.000    0.000    0.000 <frozen os>:681(__setitem__)
       89    0.000    0.000    0.000    0.000 operations.py:73(<genexpr>)
        1    0.000    0.000    0.000    0.000 base_futures.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2345(mode)
      105    0.000    0.000    0.000    0.000 textwrap.py:479(predicate)
      127    0.000    0.000    0.000    0.000 ssl.py:140(<lambda>)
        1    0.000    0.000    0.000    0.000 spectrum.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1242(FancyArrow)
       15    0.000    0.000    0.000    0.000 arrayprint.py:984(<genexpr>)
       47    0.000    0.000    0.000    0.000 enum.py:1128(_generate_next_value_)
        5    0.000    0.000    0.000    0.000 misc.py:181(debug_decorator)
        4    0.000    0.000    0.000    0.000 ctx_base.py:52(_init_aliases)
        1    0.000    0.000    0.000    0.000 fancysets.py:1440(PolarComplexRegion)
        1    0.000    0.000    0.000    0.000 profiler.py:820(KinetoStepTracker)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:604(CategoryDict)
      127    0.000    0.000    0.000    0.000 ssl.py:145(<lambda>)
       58    0.000    0.000    0.000    0.000 constraint_registry.py:87(register)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:8(_SnapshotState)
        3    0.000    0.000    0.000    0.000 symbolic_opset11.py:577(_avg_pool)
        1    0.000    0.000    0.000    0.000 __init__.py:319(ELEMENTWISE_PRIM_TYPE_PROMOTION_KIND)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:456(<listcomp>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:225(BackendConfig)
       71    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        1    0.000    0.000    0.000    0.000 transforms.py:2038(IdentityTransform)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1730(_adaptive_pool)
        1    0.000    0.000    0.000    0.000 quasirandom.py:1(<module>)
      124    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3153(_moment_raw_dispatch)
        1    0.000    0.000    0.000    0.000 _spectral.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._multiprocessing_init}
        2    0.000    0.000    0.000    0.000 blas.py:388(_memoize_get_funcs)
      127    0.000    0.000    0.000    0.000 ssl.py:150(<lambda>)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:1(<module>)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:465(boolean_dispatch)
       95    0.000    0.000    0.000    0.000 iterables.py:2000(check)
        1    0.000    0.000    0.000    0.000 logistic_normal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mio5.py:817(MatFile5Writer)
        1    0.000    0.000    0.000    0.000 immutable.py:30(ImmutableRepMatrix)
       23    0.000    0.000    0.000    0.000 qconfig.py:98(__new__)
        1    0.000    0.000    0.000    0.000 dop853_coefficients.py:1(<module>)
      302    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
       11    0.000    0.000    0.000    0.000 __init__.py:1734(isEnabledFor)
        1    0.000    0.000    0.000    0.000 _mio4.py:316(MatFile4Reader)
        1    0.000    0.000    0.000    0.000 _common.py:47(get_package)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:3376(_unsupported_dropout)
        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1744(_broadcast)
        1    0.000    0.000    0.000    0.000 base_tasks.py:1(<module>)
        3    0.000    0.000    0.000    0.000 monkey.py:54(get_unpatched_class)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11012(vonmises_gen)
       12    0.000    0.000    0.000    0.000 weakref.py:289(update)
        4    0.000    0.000    0.000    0.000 platform.py:915(system)
        1    0.000    0.000    0.000    0.000 factortools.py:1(<module>)
       15    0.000    0.000    0.000    0.000 rcsetup.py:84(_listify_validator)
        3    0.000    0.000    0.000    0.000 rcsetup.py:701(_validate_hinting)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:211(_set_array_types)
       13    0.000    0.000    0.000    0.000 fromnumeric.py:200(reshape)
        1    0.000    0.000    0.000    0.000 base_events.py:387(BaseEventLoop)
        6    0.000    0.000    0.000    0.000 gaussiandomains.py:23(__new__)
        1    0.000    0.000    0.000    0.000 domainscalar.py:1(<module>)
        3    0.000    0.000    0.000    0.000 coroutines.py:21(iscoroutinefunction)
        2    0.000    0.000    0.000    0.000 __init__.py:1415(_clear_cache)
      124    0.000    0.000    0.000    0.000 functions.py:85(defun)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2327(median)
        1    0.000    0.000    0.000    0.000 contour.py:670(ContourSet)
       42    0.000    0.000    0.000    0.000 _typing.py:275(__init__)
        1    0.000    0.000    0.000    0.000 getlimits.py:589(smallest_normal)
       12    0.000    0.000    0.000    0.000 arrayprint.py:753(_extendLine_pretty)
        2    0.000    0.000    0.000    0.000 rationaltools.py:1(<module>)
      112    0.000    0.000    0.000    0.000 patches.py:1885(<genexpr>)
        1    0.000    0.000    0.000    0.000 _string_helpers.py:1(<module>)
       23    0.000    0.000    0.000    0.000 pkgutil.py:407(get_importer)
        1    0.000    0.000    0.000    0.000 datetime.py:2293(timezone)
        1    0.000    0.000    0.000    0.000 _machar.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:16(_FuncInfo)
       47    0.000    0.000    0.000    0.000 core.py:2501(parseImpl)
        1    0.000    0.000    0.000    0.000 _morphology.py:1(<module>)
        1    0.000    0.000    0.000    0.000 operations.py:575(AssocOpDispatcher)
        2    0.000    0.000    0.000    0.000 signals.py:1(<module>)
        8    0.000    0.000    0.000    0.000 resolver.py:131(add_implicit_resolver_base)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:47(__new__)
        1    0.000    0.000    0.000    0.000 defaults.py:1(<module>)
       13    0.000    0.000    0.000    0.000 {method 'random' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 case.py:344(TestCase)
        1    0.000    0.000    0.000    0.000 _VF.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _utils.py:46(EventKey)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:601(__str__)
        1    0.000    0.000    0.000    0.000 _tzpath.py:5(reset_tzpath)
       93    0.000    0.000    0.000    0.000 composition.py:207(items)
        1    0.000    0.000    0.000    0.000 bdist.py:48(bdist)
        1    0.000    0.000    0.000    0.000 lbfgs.py:184(LBFGS)
       25    0.000    0.000    0.000    0.000 polyoptions.py:64(__init__)
        1    0.000    0.000    0.000    0.000 runners.py:15(_State)
       12    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        1    0.000    0.000    0.000    0.000 library.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sslproto.py:27(AppProtocolState)
        2    0.000    0.000    0.000    0.000 core.py:6744(__init__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5382(MonotonicTransformedDistribution)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:21(ReplacedPatterns)
        1    0.000    0.000    0.000    0.000 _external_properties.py:25(ExternalProperties)
        3    0.000    0.000    0.000    0.000 core.py:3727(__init__)
        1    0.000    0.000    0.000    0.000 identification.py:1(<module>)
      104    0.000    0.000    0.000    0.000 inspect.py:466(isframe)
        1    0.000    0.000    0.000    0.000 __init__.py:154(_check_cubins)
       12    0.000    0.000    0.000    0.000 arrayprint.py:1018(__call__)
        1    0.000    0.000    0.000    0.000 distributed.py:256(DistributedDataParallel)
        1    0.000    0.000    0.000    0.000 Image.py:190(Quantize)
        1    0.000    0.000    0.000    0.000 __init__.py:42(__sympy_debug)
        1    0.000    0.000    0.000    0.000 _location.py:19(Location)
        1    0.000    0.000    0.000    0.000 core.py:5454(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:1770(Integer)
       49    0.000    0.000    0.000    0.000 results.py:215(__getitem__)
        1    0.000    0.000    0.000    0.000 index_methods.py:1(<module>)
        1    0.000    0.000    0.000    0.000 enumerative.py:1(<module>)
      110    0.000    0.000    0.000    0.000 _internal.py:883(<genexpr>)
        1    0.000    0.000    0.000    0.000 Image.py:177(Dither)
        1    0.000    0.000    0.000    0.000 transforms.py:1746(Affine2DBase)
        1    0.000    0.000    0.000    0.000 core.py:6568(__array_finalize__)
        1    0.000    0.000    0.000    0.000 common.py:286(StreamWrapper)
        1    0.000    0.000    0.000    0.000 decompositions.py:34(Reduction)
        1    0.000    0.000    0.000    0.000 arrayop.py:1(<module>)
       44    0.000    0.000    0.000    0.000 typing.py:2798(<listcomp>)
        1    0.000    0.000    0.000    0.000 tensor.py:2417(TensAdd)
        1    0.000    0.000    0.000    0.000 _mode_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1131(REDUCTION_OUTPUT_TYPE_KIND)
        1    0.000    0.000    0.000    0.000 core.py:4777(IndentedBlock)
        1    0.000    0.000    0.000    0.000 geo.py:346(MollweideAxes)
        1    0.000    0.000    0.000    0.000 combining.py:10(ConcaterMapDataPipe)
        4    0.000    0.000    0.000    0.000 platform.py:1107(python_implementation)
      100    0.000    0.000    0.000    0.000 perm_groups.py:134(<genexpr>)
        3    0.000    0.000    0.000    0.000 core.py:5901(__init__)
        1    0.000    0.000    0.000    0.000 combining.py:23(ConcaterIterDataPipe)
       41    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:83(<genexpr>)
        1    0.000    0.000    0.000    0.000 patches.py:698(Rectangle)
       10    0.000    0.000    0.000    0.000 __init__.py:216(_logged_cached)
        1    0.000    0.000    0.000    0.000 __init__.py:264(_reset_cache)
        1    0.000    0.000    0.000    0.000 _binomtest.py:1(<module>)
       49    0.000    0.000    0.000    0.000 core.py:2472(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 linalg.py:97(_determine_error_states)
        4    0.000    0.000    0.000    0.000 {built-in method _ssl.txt2obj}
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:107(Disposal)
        1    0.000    0.000    0.000    0.000 _cm_listed.py:2061(<dictcomp>)
        1    0.000    0.000    0.000    0.000 core.py:231(reload_library)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.create_builtin}
       28    0.000    0.000    0.000    0.000 {built-in method _locale.getencoding}
        1    0.000    0.000    0.000    0.000 combinatorics.py:54(ShufflerIterDataPipe)
        1    0.000    0.000    0.000    0.000 numerictypes.py:589(_register_types)
        2    0.000    0.000    0.000    0.000 contextlib.py:77(__call__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:270(Uniform)
        2    0.000    0.000    0.000    0.000 __init__.py:393(__getitem__)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:35(OptState)
        1    0.000    0.000    0.000    0.000 outputs.py:205(Vasprun)
        9    0.000    0.000    0.000    0.000 pythonmpq.py:93(_new_check)
        1    0.000    0.000    0.000    0.000 _miobase.py:351(MatFileReader)
        1    0.000    0.000    0.000    0.000 distributed.py:148(_BufferCommHookLocation)
        2    0.000    0.000    0.000    0.000 fnmatch.py:74(translate)
        1    0.000    0.000    0.000    0.000 ellipse.py:38(<listcomp>)
      116    0.000    0.000    0.000    0.000 typing.py:1814(<genexpr>)
       16    0.000    0.000    0.000    0.000 fake_quantize.py:106(with_args)
        1    0.000    0.000    0.000    0.000 ssl.py:1006(SSLSocket)
      256    0.000    0.000    0.000    0.000 libintmath.py:62(python_trailing)
        1    0.000    0.000    0.000    0.000 subscheck.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _complex.py:13(Complex)
       41    0.000    0.000    0.000    0.000 numbers.py:442(sort_key)
        1    0.000    0.000    0.000    0.000 libmpf.py:136(<listcomp>)
        2    0.000    0.000    0.000    0.000 conflict.py:34(super_signature)
        1    0.000    0.000    0.000    0.000 _external_property_file_references.py:15(ExternalPropertyFileReferences)
       24    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.dragon4_positional}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:707(beta_gen)
        5    0.000    0.000    0.000    0.000 inverselaplace.py:668(__init__)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:328(impl_decorator)
        1    0.000    0.000    0.000    0.000 sparse_adam.py:7(SparseAdam)
        1    0.000    0.000    0.000    0.000 matpow.py:12(MatPow)
       27    0.000    0.000    0.000    0.000 pathlib.py:622(name)
        1    0.000    0.000    0.000    0.000 zeta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Image.py:527(Image)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:512(__div__)
        1    0.000    0.000    0.000    0.000 autograd_function.py:511(WrappedCtx)
        2    0.000    0.000    0.000    0.000 __init__.py:144(is_cpython)
        2    0.000    0.000    0.000    0.000 {built-in method posix.scandir}
        5    0.000    0.000    0.000    0.000 quadrature.py:461(__init__)
        1    0.000    0.000    0.000    0.000 _linalg_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 text.py:104(Text)
       25    0.000    0.000    0.000    0.000 rcsetup.py:773(_validate_greaterequal0_lessequal1)
       89    0.000    0.000    0.000    0.000 functions.py:81(defun_wrapped)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:776(runtime_checkable)
        1    0.000    0.000    0.000    0.000 grouping.py:10(BatcherMapDataPipe)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6024(laplace_gen)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:132(<dictcomp>)
        1    0.000    0.000    0.000    0.000 trirefine.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:296(_SingleLevelFunction)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:370(Binomial)
        1    0.000    0.000    0.000    0.000 inequalities.py:1(<module>)
        1    0.000    0.000    0.000    0.000 refine.py:1(<module>)
      449    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 patches.py:883(RegularPolygon)
        2    0.000    0.000    0.000    0.000 _codata.py:1533(exact2018)
      186    0.000    0.000    0.000    0.000 __init__.py:108(<lambda>)
        1    0.000    0.000    0.000    0.000 glob.py:111(_glob0)
        1    0.000    0.000    0.000    0.000 callable.py:21(MapperIterDataPipe)
        1    0.000    0.000    0.000    0.000 helpers.py:692(OpAssoc)
        1    0.000    0.000    0.000    0.000 sampler.py:160(WeightedRandomSampler)
        1    0.000    0.000    0.000    0.000 ssl.py:477(Purpose)
        1    0.000    0.000    0.000    0.000 kind.py:190(KindDispatcher)
       14    0.000    0.000    0.000    0.000 __init__.py:144(_check_size)
        1    0.000    0.000    0.000    0.000 typing.py:611(ClassVar)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:538(<listcomp>)
        3    0.000    0.000    0.000    0.000 core.py:1757(suppress)
        2    0.000    0.000    0.000    0.000 complexfield.py:81(dtype)
        1    0.000    0.000    0.000    0.000 _parser.py:1371(_tzparser)
        5    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1074(_set_invalid_nan_property)
        1    0.000    0.000    0.000    0.000 ecm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1019(<listcomp>)
       28    0.000    0.000    0.000    0.000 core.py:17(__setattr__)
        1    0.000    0.000    0.000    0.000 sharding.py:16(SHARDING_PRIORITIES)
        4    0.000    0.000    0.000    0.000 vmap.py:30(doesnt_support_saved_tensors_hooks)
        1    0.000    0.000    0.000    0.000 _polyint.py:53(__init__)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:506(convert_to)
        1    0.000    0.000    0.000    0.000 bivariate.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _hook_iterator.py:110(IteratorDecorator)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:487(DataFlowGraph)
        1    0.000    0.000    0.000    0.000 exponential.py:219(exp)
        1    0.000    0.000    0.000    0.000 _sparse.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _version.py:20(get_versions)
        1    0.000    0.000    0.000    0.000 sysconfig.py:219(is_python_build)
        1    0.000    0.000    0.000    0.000 core.py:3839(Tag)
        1    0.000    0.000    0.000    0.000 ring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:3343(NaN)
        1    0.000    0.000    0.000    0.000 _rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 intfunc.py:1(<module>)
        2    0.000    0.000    0.000    0.000 quantize_jit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 grouping.py:29(BatcherIterDataPipe)
        1    0.000    0.000    0.000    0.000 distributed.py:13(DistributedSampler)
        1    0.000    0.000    0.000    0.000 line.py:47(<listcomp>)
      196    0.000    0.000    0.000    0.000 core.py:485(mayReturnEmpty)
        1    0.000    0.000    0.000    0.000 binomial.py:13(Binomial)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2584(atan)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3968(genhyperbolic_gen)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:22(<listcomp>)
        1    0.000    0.000    0.000    0.000 _elffile.py:23(EIClass)
      235    0.000    0.000    0.000    0.000 basic.py:324(_hashable_content)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 inputs.py:2869(Potcar)
        1    0.000    0.000    0.000    0.000 __init__.py:1145(RETURN_TYPE)
        9    0.000    0.000    0.000    0.000 mul.py:844(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 core.py:3589(__init__)
        1    0.000    0.000    0.000    0.000 _typing.py:248(_DataPipeMeta)
        1    0.000    0.000    0.000    0.000 timestamp.py:1(<module>)
      147    0.000    0.000    0.000    0.000 <frozen _collections_abc>:477(_is_param_expr)
       36    0.000    0.000    0.000    0.000 binary.py:153(_torch_binary)
       36    0.000    0.000    0.000    0.000 deprecation.py:211(finalize)
      102    0.000    0.000    0.000    0.000 patches.py:1878(<genexpr>)
        1    0.000    0.000    0.000    0.000 _digraph.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _check.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2037(expon_gen)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2630(FigureManagerBase)
        2    0.000    0.000    0.000    0.000 __init__.py:256(_register_at_fork_reinit_lock)
        4    0.000    0.000    0.000    0.000 isoparser.py:22(_takes_ascii)
        1    0.000    0.000    0.000    0.000 datapipe.py:358(_IterDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 numeric.py:2123(identity)
        1    0.000    0.000    0.000    0.000 _structures.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fractions.py:38(Fraction)
        1    0.000    0.000    0.000    0.000 __init__.py:1243(__init__)
        1    0.000    0.000    0.000    0.000 laplace.py:2203(InverseLaplaceTransform)
        9    0.000    0.000    0.000    0.000 deprecation.py:433(<listcomp>)
      181    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 util.py:49(get_platform)
       93    0.000    0.000    0.000    0.000 _inspect.py:131(strseq)
        1    0.000    0.000    0.000    0.000 entity.py:67(<listcomp>)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parametrizations.py:39(_Orthogonal)
        1    0.000    0.000    0.000    0.000 rnn.py:382(LSTM)
        1    0.000    0.000    0.000    0.000 core.py:3696(__init__)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:9(NegativeBinomial)
        5    0.000    0.000    0.000    0.000 symbolic_opset9.py:2119(wrap_logical_op_with_negation)
        1    0.000    0.000    0.000    0.000 datapipe.py:377(DataChunk)
        1    0.000    0.000    0.000    0.000 subfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 orthopolys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dates.py:1124(RRuleLocator)
        1    0.000    0.000    0.000    0.000 _trustregion.py:1(<module>)
       15    0.000    0.000    0.000    0.000 weakref.py:495(popitem)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3643(_pxf_dispatch)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:80(MultivariateNormal)
        1    0.000    0.000    0.000    0.000 gui.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:441(_construct_lookups)
        1    0.000    0.000    0.000    0.000 __config__.py:14(DisplayModes)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:1(<module>)
       66    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        5    0.000    0.000    0.000    0.000 decorator.py:127(update)
        1    0.000    0.000    0.000    0.000 _cm.py:158(<dictcomp>)
       12    0.000    0.000    0.000    0.000 core.py:6117(<lambda>)
      166    0.000    0.000    0.000    0.000 enum.py:897(<lambda>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4810(OrderStatisticDistribution)
        1    0.000    0.000    0.000    0.000 _index.py:1(<module>)
        1    0.000    0.000    0.000    0.000 animation.py:789(HTMLWriter)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:227(_SpecialForm)
        1    0.000    0.000    0.000    0.000 appellseqs.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {built-in method _ctypes.POINTER}
        6    0.000    0.000    0.000    0.000 numbers.py:3598(__hash__)
        3    0.000    0.000    0.000    0.000 sdm.py:78(__init__)
        2    0.000    0.000    0.000    0.000 typing.py:1211(__init__)
        2    0.000    0.000    0.000    0.000 densebasic.py:343(dmp_validate)
        3    0.000    0.000    0.000    0.000 inspect.py:409(iscoroutinefunction)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:14(decorator)
      216    0.000    0.000    0.000    0.000 _adapters.py:43(redent)
      169    0.000    0.000    0.000    0.000 contextlib.py:425(__init__)
        1    0.000    0.000    0.000    0.000 simpledomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 categorical.py:9(Categorical)
      161    0.000    0.000    0.000    0.000 core.py:1774(leave_whitespace)
        1    0.000    0.000    0.000    0.000 util.py:35(get_host_platform)
        2    0.000    0.000    0.000    0.000 __future__.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mstats_extras.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1375(Ellipse)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:1(<module>)
        3    0.000    0.000    0.000    0.000 rcsetup.py:487(validate_whiskers)
        1    0.000    0.000    0.000    0.000 perm_groups.py:26(PermutationGroup)
       14    0.000    0.000    0.000    0.000 constraints.py:175(__call__)
        1    0.000    0.000    0.000    0.000 riccati.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataset.py:63(IterableDataset)
        4    0.000    0.000    0.000    0.000 rrule.py:80(_invalidates_cache)
        1    0.000    0.000    0.000    0.000 patches.py:19(Patch)
        1    0.000    0.000    0.000    0.000 result.py:24(TestResult)
        1    0.000    0.000    0.000    0.000 _script.py:1506(_ScriptProfileTable)
        1    0.000    0.000    0.000    0.000 transforms.py:821(InverseMellinTransform)
        1    0.000    0.000    0.000    0.000 lowrank_multivariate_normal.py:48(LowRankMultivariateNormal)
        1    0.000    0.000    0.000    0.000 tableform.py:1(<module>)
       58    0.000    0.000    0.000    0.000 __init__.py:795(__init__)
        5    0.000    0.000    0.000    0.000 _version.py:1(<module>)
       44    0.000    0.000    0.000    0.000 unicode.py:17(<genexpr>)
      101    0.000    0.000    0.000    0.000 _meta_registrations.py:32(register_meta)
        1    0.000    0.000    0.000    0.000 __init__.py:221(<listcomp>)
       78    0.000    0.000    0.000    0.000 inspect.py:480(iscode)
        1    0.000    0.000    0.000    0.000 rszeta.py:1(<module>)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:440(__repr__)
       59    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 polyclasses.py:1735(DUP_Flint)
        1    0.000    0.000    0.000    0.000 dist.py:144(<listcomp>)
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:473(_get_endpoint_str)
        1    0.000    0.000    0.000    0.000 _basic_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 error_functions.py:49(erf)
      4/2    0.000    0.000    0.000    0.000 _aliases.py:594(isdtype)
        1    0.000    0.000    0.000    0.000 gzip.py:327(close)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9038(rayleigh_gen)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3548(export)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1159(_cdf2_input_validation)
        1    0.000    0.000    0.000    0.000 getopt.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:568(parser)
       97    0.000    0.000    0.000    0.000 core.py:6163(<genexpr>)
        7    0.000    0.000    0.000    0.000 core.py:4767(_generateDefaultName)
        9    0.000    0.000    0.000    0.000 overrides.py:23(set_array_function_like_doc)
        1    0.000    0.000    0.000    0.000 _asarray.py:1(<module>)
       55    0.000    0.000    0.000    0.000 logic.py:92(fuzzy_bool)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:1(<module>)
       32    0.000    0.000    0.000    0.000 decorators.py:202(wrapper)
        1    0.000    0.000    0.000    0.000 series_class.py:11(SeriesBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8375(pearson3_gen)
       12    0.000    0.000    0.000    0.000 rcsetup.py:200(validate_axisbelow)
        6    0.000    0.000    0.000    0.000 basic.py:147(_get_postprocessors_for_type)
        1    0.000    0.000    0.000    0.000 _exception.py:16(Exception)
        1    0.000    0.000    0.000    0.000 timeit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unicode.py:75(nums)
        1    0.000    0.000    0.000    0.000 activation.py:15(MultiheadAttention)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8574(powerlaw_gen)
      195    0.000    0.000    0.000    0.000 permutations.py:2083(<genexpr>)
       85    0.000    0.000    0.000    0.000 __init__.py:185(keys)
        1    0.000    0.000    0.000    0.000 error_functions.py:2383(fresnels)
        3    0.000    0.000    0.000    0.000 message.py:409(__getitem__)
        1    0.000    0.000    0.000    0.000 __init__.py:58(Sectioned)
        3    0.000    0.000    0.000    0.000 _common.py:132(_validate_fromutc_inputs)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:153(__new__)
       23    0.000    0.000    0.000    0.000 functools.py:966(__init__)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:311(SizeMap)
       42    0.000    0.000    0.000    0.000 typing.py:266(_check_generic)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_reference.py:15(ReportingDescriptorReference)
       21    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3308(__new__)
        2    0.000    0.000    0.000    0.000 datetime.py:765(__neg__)
        1    0.000    0.000    0.000    0.000 core.py:177(update_user_library)
        1    0.000    0.000    0.000    0.000 __config__.py:9(DisplayModes)
       17    0.000    0.000    0.000    0.000 <frozen _collections_abc>:78(_check_methods)
       13    0.000    0.000    0.000    0.000 enum.py:1337(_iter_member_by_value_)
        3    0.000    0.000    0.000    0.000 __init__.py:503(PYFUNCTYPE)
        2    0.000    0.000    0.000    0.000 realfield.py:121(dtype)
       26    0.000    0.000    0.000    0.000 {method 'fullmatch' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 _globals.py:24(__init__)
        1    0.000    0.000    0.000    0.000 realtransforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dev.py:1(<module>)
        1    0.000    0.000    0.000    0.000 format.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sampler.py:64(SequentialSampler)
        6    0.000    0.000    0.000    0.000 _methods.py:55(_any)
       17    0.000    0.000    0.000    0.000 _multivariate.py:216(__init__)
        1    0.000    0.000    0.000    0.000 bessel.py:1374(airyai)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:368(__new__)
        1    0.000    0.000    0.000    0.000 glob.py:191(_lexists)
       57    0.000    0.000    0.000    0.000 core.py:4169(<genexpr>)
       18    0.000    0.000    0.000    0.000 {method 'tolist' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 _matrix.py:1(<module>)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 results.py:39(ParseResults)
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       30    0.000    0.000    0.000    0.000 warnings.py:440(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4238(<dictcomp>)
       36    0.000    0.000    0.000    0.000 _string_helpers.py:16(english_lower)
       46    0.000    0.000    0.000    0.000 six.py:110(__init__)
        1    0.000    0.000    0.000    0.000 _polyint.py:116(_set_yi)
        2    0.000    0.000    0.000    0.000 rcsetup.py:130(_validate_date)
        1    0.000    0.000    0.000    0.000 approximants.py:1(<module>)
        2    0.000    0.000    0.000    0.000 tools.py:1(<module>)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:150(_families)
        1    0.000    0.000    0.000    0.000 dogbox.py:1(<module>)
       24    0.000    0.000    0.000    0.000 pickletools.py:193(__init__)
        1    0.000    0.000    0.000    0.000 powerset.py:10(PowerSet)
       81    0.000    0.000    0.000    0.000 __init__.py:14(set_module)
        1    0.000    0.000    0.000    0.000 _qmc.py:1117(Halton)
       45    0.000    0.000    0.000    0.000 {built-in method torch._C.containedTypes}
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3600(_overrides)
        1    0.000    0.000    0.000    0.000 json.py:46(_load_redirect)
        1    0.000    0.000    0.000    0.000 _censored_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expintegrals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6801(lognorm_gen)
        1    0.000    0.000    0.000    0.000 _ndimage_api.py:16(<listcomp>)
        1    0.000    0.000    0.000    0.000 lsqr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 euclidtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:281(Application)
        3    0.000    0.000    0.000    0.000 numeric.py:67(zeros_like)
       13    0.000    0.000    0.000    0.000 enum.py:901(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _subplots.py:199(subplot_class_factory)
       90    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 trigonometric.py:2797(acot)
        4    0.000    0.000    0.000    0.000 random.py:797(getrandbits)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:128(Blend)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3605(_pmf_formula)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:71(_DTypeDict)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:394(_pmf_formula)
        7    0.000    0.000    0.000    0.000 _aliases.py:447(reshape)
       53    0.000    0.000    0.000    0.000 six.py:182(_add_module)
       19    0.000    0.000    0.000    0.000 {method 'round' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 py39.py:1(<module>)
       12    0.000    0.000    0.000    0.000 _basic.py:3032(<genexpr>)
        1    0.000    0.000    0.000    0.000 polyutils.py:188(<listcomp>)
        1    0.000    0.000    0.000    0.000 elliptic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 codeprinter.py:53(CodePrinter)
        1    0.000    0.000    0.000    0.000 _backend.py:51(set_global_backend)
        1    0.000    0.000    0.000    0.000 lobpcg.py:1(<module>)
       55    0.000    0.000    0.000    0.000 <frozen codecs>:260(__init__)
        1    0.000    0.000    0.000    0.000 _fourier.py:1(<module>)
       82    0.000    0.000    0.000    0.000 typing.py:2823(<genexpr>)
        1    0.000    0.000    0.000    0.000 _artifact.py:17(Artifact)
        1    0.000    0.000    0.000    0.000 numbers.py:609(bell)
        3    0.000    0.000    0.000    0.000 {built-in method posix.putenv}
        8    0.000    0.000    0.000    0.000 _nonlin.py:119(_set_doc)
        1    0.000    0.000    0.000    0.000 geo.py:14(GeoAxes)
       82    0.000    0.000    0.000    0.000 core.py:1962(streamline)
        3    0.000    0.000    0.000    0.000 expr.py:220(__neg__)
       24    0.000    0.000    0.000    0.000 datapipe.py:133(register_datapipe_as_function)
        1    0.000    0.000    0.000    0.000 unicode.py:236(Japanese)
       97    0.000    0.000    0.000    0.000 docstring.py:63(copy)
       18    0.000    0.000    0.000    0.000 conflict.py:30(<genexpr>)
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arrayterator.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9339(irwinhall_gen)
       90    0.000    0.000    0.000    0.000 basic.py:442(class_key)
       30    0.000    0.000    0.000    0.000 binary.py:162(_torch_inplace_binary)
        1    0.000    0.000    0.000    0.000 _milp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pin_memory.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:253(escape)
        1    0.000    0.000    0.000    0.000 dfm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 exponential.py:607(log)
       81    0.000    0.000    0.000    0.000 __init__.py:25(decorator)
        1    0.000    0.000    0.000    0.000 permutations.py:473(Permutation)
        1    0.000    0.000    0.000    0.000 pde.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:3494(__init__)
      257    0.000    0.000    0.000    0.000 hmac.py:19(<genexpr>)
        6    0.000    0.000    0.000    0.000 _jit_internal.py:895(get_class_name_lineno)
        3    0.000    0.000    0.000    0.000 feedparser.py:197(_new_message)
        1    0.000    0.000    0.000    0.000 deltafunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:524(ToolViewsPositions)
      187    0.000    0.000    0.000    0.000 boolalg.py:365(__bool__)
        8    0.000    0.000    0.000    0.000 ctx_iv.py:30(convert_mpf_)
        1    0.000    0.000    0.000    0.000 __init__.py:327(<listcomp>)
       55    0.000    0.000    0.000    0.000 __init__.py:382(_make_elementwise_unary_reference)
        1    0.000    0.000    0.000    0.000 pycode.py:753(MpmathPrinter)
        1    0.000    0.000    0.000    0.000 cmd.py:34(Command)
      122    0.000    0.000    0.000    0.000 core.py:2459(__getnewargs__)
        1    0.000    0.000    0.000    0.000 interval_membership.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _thread_flow_location.py:19(ThreadFlowLocation)
        3    0.000    0.000    0.000    0.000 {built-in method _csv.register_dialect}
        4    0.000    0.000    0.000    0.000 fontconfig_pattern.py:158(_property)
        1    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       15    0.000    0.000    0.000    0.000 decorator.py:132(doctest_depends_on)
        1    0.000    0.000    0.000    0.000 <frozen posixpath>:174(lexists)
        1    0.000    0.000    0.000    0.000 _infra.py:270(__post_init__)
        4    0.000    0.000    0.000    0.000 __init__.py:511(cast)
        5    0.000    0.000    0.000    0.000 functools.py:191(<setcomp>)
        4    0.000    0.000    0.000    0.000 symbolic_opset9.py:787(overload_by_arg_count)
        1    0.000    0.000    0.000    0.000 decorators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tensor.py:3394(TensMul)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:18(numeric_type_aliases)
        1    0.000    0.000    0.000    0.000 _waveforms.py:1(<module>)
        5    0.000    0.000    0.000    0.000 perm_groups.py:149(__init__)
       15    0.000    0.000    0.000    0.000 proxy.py:524(_define_reflectable)
      174    0.000    0.000    0.000    0.000 _docscrape.py:724(_is_show_member)
        1    0.000    0.000    0.000    0.000 _async.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _at.py:52(Undef)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:804(_reduce_with_dtype)
        3    0.000    0.000    0.000    0.000 arrayprint.py:64(_make_options_dict)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3028(_sample_dispatch)
        1    0.000    0.000    0.000    0.000 domain.py:18(Domain)
       97    0.000    0.000    0.000    0.000 docstring.py:65(do_copy)
        1    0.000    0.000    0.000    0.000 core.py:170(iter_user_libraries)
        1    0.000    0.000    0.000    0.000 libintmath.py:89(<listcomp>)
        1    0.000    0.000    0.000    0.000 signal_handling.py:1(<module>)
        4    0.000    0.000    0.000    0.000 uuid.py:139(__init__)
        1    0.000    0.000    0.000    0.000 domainelement.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _region.py:16(Region)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1884(asech)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9661(skewnorm_gen)
        1    0.000    0.000    0.000    0.000 typing.py:1563(__repr__)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:153(sinh)
      130    0.000    0.000    0.000    0.000 __init__.py:247(<genexpr>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:367(<listcomp>)
        1    0.000    0.000    0.000    0.000 mathml.py:547(MathMLPresentationPrinter)
        2    0.000    0.000    0.000    0.000 traceback.py:439(from_list)
        1    0.000    0.000    0.000    0.000 Lattice.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elffile.py:28(EIData)
        1    0.000    0.000    0.000    0.000 tag.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _stats.py:14(count)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:12(ContinuousBernoulli)
        3    0.000    0.000    0.000    0.000 datetime.py:1673(__new__)
      161    0.000    0.000    0.000    0.000 util.py:242(escape_re_range_char)
        1    0.000    0.000    0.000    0.000 differentiation.py:1(<module>)
       28    0.000    0.000    0.000    0.000 power.py:803(as_base_exp)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2149(_overrides)
        1    0.000    0.000    0.000    0.000 egyptian_fraction.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1236(DMP_Python)
        1    0.000    0.000    0.000    0.000 _common.py:42(resolve)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:313(quantized_args)
       40    0.000    0.000    0.000    0.000 libmpf.py:208(_normalize1)
        3    0.000    0.000    0.000    0.000 typing.py:856(_evaluate)
        7    0.000    0.000    0.000    0.000 rcsetup.py:292(validate_backend)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:365(cosh)
        1    0.000    0.000    0.000    0.000 geometric.py:11(Geometric)
        1    0.000    0.000    0.000    0.000 inputs.py:1212(Kpoints)
        1    0.000    0.000    0.000    0.000 bernoulli.py:12(Bernoulli)
        1    0.000    0.000    0.000    0.000 function.py:382(Function)
        1    0.000    0.000    0.000    0.000 <frozen os>:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 trsock.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:553(cos)
        1    0.000    0.000    0.000    0.000 threading.py:849(__init__)
        1    0.000    0.000    0.000    0.000 dates.py:1475(YearLocator)
        1    0.000    0.000    0.000    0.000 pickle.py:1137(_Unpickler)
       35    0.000    0.000    0.000    0.000 core.py:13(dispatch)
       41    0.000    0.000    0.000    0.000 typing.py:2885(_namedtuple_mro_entries)
        1    0.000    0.000    0.000    0.000 matrix_element.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:2(__div__)
        8    0.000    0.000    0.000    0.000 sympify.py:78(_is_numpy_instance)
       62    0.000    0.000    0.000    0.000 _bunch.py:128(<genexpr>)
        4    0.000    0.000    0.000    0.000 _ops.py:130(inner)
       18    0.000    0.000    0.000    0.000 _ops.py:31(_apply_docstring_templates)
        1    0.000    0.000    0.000    0.000 _await.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _pep440.py:437(_cmpkey)
        1    0.000    0.000    0.000    0.000 trigonometric.py:915(tan)
        4    0.000    0.000    0.000    0.000 enum.py:1727(<listcomp>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1255(cot)
        3    0.000    0.000    0.000    0.000 __init__.py:435(validate)
        1    0.000    0.000    0.000    0.000 mock.py:402(NonCallableMock)
      230    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       16    0.000    0.000    0.000    0.000 pretty_symbology.py:169(<lambda>)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:63(__init__)
        1    0.000    0.000    0.000    0.000 parametrizations.py:288(_SpectralNorm)
        1    0.000    0.000    0.000    0.000 Image.py:185(Palette)
        1    0.000    0.000    0.000    0.000 tz.py:1470(__get_gettz)
       38    0.000    0.000    0.000    0.000 __init__.py:23(<genexpr>)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:628(<dictcomp>)
        1    0.000    0.000    0.000    0.000 PaletteFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 epathtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4094(<lambda>)
        2    0.000    0.000    0.000    0.000 multidimensional.py:93(__call__)
        1    0.000    0.000    0.000    0.000 core.py:1103(enable_packrat)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:780(exec_module)
        1    0.000    0.000    0.000    0.000 str.py:20(StrPrinter)
        1    0.000    0.000    0.000    0.000 trigonometric.py:243(sin)
        1    0.000    0.000    0.000    0.000 error_functions.py:288(erfc)
        4    0.000    0.000    0.000    0.000 platform.py:826(uname)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:472(<listcomp>)
       25    0.000    0.000    0.000    0.000 {built-in method _struct.calcsize}
        1    0.000    0.000    0.000    0.000 frontend.py:682(ExprBuilder)
       28    0.000    0.000    0.000    0.000 inspect.py:2211(parse_name)
        1    0.000    0.000    0.000    0.000 singularities.py:1(<module>)
      257    0.000    0.000    0.000    0.000 hmac.py:20(<genexpr>)
        2    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
        2    0.000    0.000    0.000    0.000 tree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 series.py:126(BaseSeries)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2836(min)
        1    0.000    0.000    0.000    0.000 sym_operation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:850(TarInfo)
        1    0.000    0.000    0.000    0.000 scalarbool.py:1(<module>)
       96    0.000    0.000    0.000    0.000 {built-in method math.isclose}
        1    0.000    0.000    0.000    0.000 triangulation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1286(LatinHypercube)
        1    0.000    0.000    0.000    0.000 engine.py:177(DiagnosticContext)
        1    0.000    0.000    0.000    0.000 densetools.py:1(<module>)
      169    0.000    0.000    0.000    0.000 contextlib.py:428(__enter__)
       16    0.000    0.000    0.000    0.000 doccer.py:126(_doc)
        1    0.000    0.000    0.000    0.000 pyplot.py:1891(colormaps)
        1    0.000    0.000    0.000    0.000 discovery.py:210(FlatLayoutPackageFinder)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bessel.py:1546(airybi)
        1    0.000    0.000    0.000    0.000 pprint.py:106(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 core.py:4055(And)
       56    0.000    0.000    0.000    0.000 patches.py:1901(_register_style)
       39    0.000    0.000    0.000    0.000 functools.py:421(_unwrap_partial)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:611(tanh)
        1    0.000    0.000    0.000    0.000 boolalg.py:972(Xor)
        1    0.000    0.000    0.000    0.000 dates.py:1230(AutoDateLocator)
        1    0.000    0.000    0.000    0.000 odes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matmul.py:24(MatMul)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3040(_sample_inverse_transform)
       24    0.000    0.000    0.000    0.000 numerictypes.py:514(_scalar_type_key)
        1    0.000    0.000    0.000    0.000 optimizer.py:262(profile_hook_step)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1141(sech)
       20    0.000    0.000    0.000    0.000 mixins.py:16(_binary_method)
       12    0.000    0.000    0.000    0.000 functools.py:355(__init__)
        2    0.000    0.000    0.000    0.000 numbers.py:408(__float__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:55(_pdf_formula)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4259(gumbel_r_gen)
        1    0.000    0.000    0.000    0.000 pathlib.py:455(PurePath)
        1    0.000    0.000    0.000    0.000 facts.py:95(deduce_alpha_implications)
        1    0.000    0.000    0.000    0.000 function.py:1045(Derivative)
        1    0.000    0.000    0.000    0.000 ctx_base.py:24(StandardBaseContext)
       18    0.000    0.000    0.000    0.000 pickletools.py:961(__init__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2343(acos)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:95(take)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _iotools.py:450(StringConverter)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2110(asin)
        1    0.000    0.000    0.000    0.000 tarfile.py:715(TarInfo)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:22(<listcomp>)
        1    0.000    0.000    0.000    0.000 axis3d.py:35(Axis)
        3    0.000    0.000    0.000    0.000 result.py:12(failfast)
        6    0.000    0.000    0.000    0.000 numeric.py:274(full)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1800(csc)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:490(_SpecialGenericAlias)
       16    0.000    0.000    0.000    0.000 inspect.py:2124(<listcomp>)
       26    0.000    0.000    0.000    0.000 core.py:4417(<genexpr>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3246(acsc)
        1    0.000    0.000    0.000    0.000 rationalfield.py:14(RationalField)
        1    0.000    0.000    0.000    0.000 _array_api_compat_vendor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _norm.py:1(<module>)
       11    0.000    0.000    0.000    0.000 init.py:531(_make_deprecate)
        1    0.000    0.000    0.000    0.000 matadd.py:19(MatAdd)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1206(asinh)
        1    0.000    0.000    0.000    0.000 __init__.py:727(DistributionFinder)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1384(acosh)
        1    0.000    0.000    0.000    0.000 lib_interval.py:1(<module>)
        1    0.000    0.000    0.000    0.000 random.py:358(randint)
       21    0.000    0.000    0.000    0.000 _codata.py:2127(value)
        1    0.000    0.000    0.000    0.000 uniform.py:11(Uniform)
        2    0.000    0.000    0.000    0.000 conflict.py:39(<listcomp>)
       28    0.000    0.000    0.000    0.000 {built-in method posix._path_normpath}
       28    0.000    0.000    0.000    0.000 numerictypes.py:283(issubclass_)
        9    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3622(_overrides)
       30    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 error_functions.py:482(erfi)
        1    0.000    0.000    0.000    0.000 _mangling.py:1(<module>)
        4    0.000    0.000    0.000    0.000 platform.py:1003(_sys_version)
        1    0.000    0.000    0.000    0.000 parallel_apply.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _constrained_layout.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1017(<listcomp>)
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:301(wrapper)
        1    0.000    0.000    0.000    0.000 image.py:215(_ImageBase)
        3    0.000    0.000    0.000    0.000 _adapters.py:30(__new__)
        1    0.000    0.000    0.000    0.000 core.py:336(AffineScalarFunc)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:417(<lambda>)
        1    0.000    0.000    0.000    0.000 sorting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ratsimp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 text.py:1521(Annotation)
        1    0.000    0.000    0.000    0.000 sysconfig.py:719(get_platform)
        1    0.000    0.000    0.000    0.000 pathlib.py:112(_WindowsFlavour)
        2    0.000    0.000    0.000    0.000 __init__.py:394(pass_none)
       30    0.000    0.000    0.000    0.000 _type_aliases.py:203(_add_array_type)
        1    0.000    0.000    0.000    0.000 subprocess.py:693(_use_posix_spawn)
        1    0.000    0.000    0.000    0.000 Image.py:3874(_apply_env_variables)
        1    0.000    0.000    0.000    0.000 limitseq.py:1(<module>)
        1    0.000    0.000    0.000    0.000 printing.py:1(<module>)
        6    0.000    0.000    0.000    0.000 operations.py:135(_new_rawargs)
        1    0.000    0.000    0.000    0.000 __init__.py:118(<listcomp>)
        1    0.000    0.000    0.000    0.000 densearith.py:1(<module>)
        1    0.000    0.000    0.000    0.000 property.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bvls.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linalg.py:39(EigResult)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:1(<module>)
       18    0.000    0.000    0.000    0.000 transforms.py:52(_make_str_method)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3176(ndim)
        2    0.000    0.000    0.000    0.000 types.py:247(coroutine)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1689(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:39(_get_running_interactive_framework)
        6    0.000    0.000    0.000    0.000 rcsetup.py:617(validate_joinstyle)
        1    0.000    0.000    0.000    0.000 _address.py:12(Address)
        1    0.000    0.000    0.000    0.000 error_functions.py:2544(fresnelc)
        1    0.000    0.000    0.000    0.000 minres.py:1(<module>)
       21    0.000    0.000    0.000    0.000 fancy_getopt.py:443(translate_longopt)
        1    0.000    0.000    0.000    0.000 primetest.py:1(<module>)
      115    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        9    0.000    0.000    0.000    0.000 _ops.py:545(__init__)
        1    0.000    0.000    0.000    0.000 generate.py:45(__init__)
       36    0.000    0.000    0.000    0.000 __init__.py:884(_make_elementwise_binary_reference)
      208    0.000    0.000    0.000    0.000 multiarray.py:503(can_cast)
        1    0.000    0.000    0.000    0.000 _serialization.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _weakrefset.py:37(__init__)
        4    0.000    0.000    0.000    0.000 shape_base.py:23(atleast_1d)
        1    0.000    0.000    0.000    0.000 formatting.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:3767(__init__)
       16    0.000    0.000    0.000    0.000 structure.py:230(__iter__)
        1    0.000    0.000    0.000    0.000 plot_implicit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3015(asec)
        1    0.000    0.000    0.000    0.000 Files_out.py:1(<module>)
        1    0.000    0.000    0.000    0.000 multidimensional.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1692(sec)
        1    0.000    0.000    0.000    0.000 core.py:720(add_condition)
        1    0.000    0.000    0.000    0.000 _lti_conversion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:824(coth)
        1    0.000    0.000    0.000    0.000 _onenormest.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:3529(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 tensor.py:2845(Tensor)
       23    0.000    0.000    0.000    0.000 <frozen os>:817(fsdecode)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3545(gamma_gen)
        3    0.000    0.000    0.000    0.000 monkey.py:26(_get_mro)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 main.py:56(YAML)
       20    0.000    0.000    0.000    0.000 __init__.py:2254(_check_in_list)
        1    0.000    0.000    0.000    0.000 rules.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dos.py:644(CompleteDos)
       89    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 format_helpers.py:1(<module>)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:175(<lambda>)
        1    0.000    0.000    0.000    0.000 anchor.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:71(_from_ctypes_scalar)
       24    0.000    0.000    0.000    0.000 calculus.py:4(defun)
        1    0.000    0.000    0.000    0.000 reader.py:59(Reader)
       22    0.000    0.000    0.000    0.000 __init__.py:1273(append)
       18    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:19(type_aliases_gen)
       58    0.000    0.000    0.000    0.000 results.py:269(__bool__)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1070(csch)
        1    0.000    0.000    0.000    0.000 boolalg.py:1286(Equivalent)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1572(atanh)
        1    0.000    0.000    0.000    0.000 _gcrotmk.py:1(<module>)
       26    0.000    0.000    0.000    0.000 inspect.py:1172(__init__)
        1    0.000    0.000    0.000    0.000 eigen_symmetric.py:1(<module>)
       22    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
       75    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        3    0.000    0.000    0.000    0.000 six.py:96(__get__)
        7    0.000    0.000    0.000    0.000 feedparser.py:122(pushlines)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:125(StandardNormal)
       28    0.000    0.000    0.000    0.000 typing_extensions.py:486(_is_dunder)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2697(weibull_min_gen)
        1    0.000    0.000    0.000    0.000 pyplot.py:111(install_repl_displayhook)
       32    0.000    0.000    0.000    0.000 _type_aliases.py:46(<genexpr>)
       15    0.000    0.000    0.000    0.000 _util.py:356(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9162(reciprocal_gen)
        1    0.000    0.000    0.000    0.000 coroutines.py:1(<module>)
       56    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:1635(TarFile)
        1    0.000    0.000    0.000    0.000 patches.py:1001(Polygon)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:355(_Gamma)
        1    0.000    0.000    0.000    0.000 _stack.py:16(Stack)
        1    0.000    0.000    0.000    0.000 __init__.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 _notification.py:18(Notification)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:860(is_pass)
        6    0.000    0.000    0.000    0.000 <frozen genericpath>:121(_splitext)
        1    0.000    0.000    0.000    0.000 normalforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ast.py:82(_convert)
       25    0.000    0.000    0.000    0.000 enum.py:787(__members__)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:171(<lambda>)
        3    0.000    0.000    0.000    0.000 __init__.py:863(_addHandlerRef)
      144    0.000    0.000    0.000    0.000 periodic_table.py:1519(oxi_state)
        1    0.000    0.000    0.000    0.000 _polyint.py:533(BarycentricInterpolator)
        1    0.000    0.000    0.000    0.000 patches.py:1347(CirclePolygon)
       15    0.000    0.000    0.000    0.000 __init__.py:593(<genexpr>)
        1    0.000    0.000    0.000    0.000 Files_in.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scanner.py:71(Scanner)
        2    0.000    0.000    0.000    0.000 <frozen os>:687(__delitem__)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:124(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:995(CatTransform)
        1    0.000    0.000    0.000    0.000 events.py:203(AbstractEventLoop)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:2080(acsch)
        1    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 typing.py:2356(<genexpr>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1381(<listcomp>)
      138    0.000    0.000    0.000    0.000 core.py:809(postParse)
       14    0.000    0.000    0.000    0.000 numeric.py:1380(<listcomp>)
        1    0.000    0.000    0.000    0.000 _backend.py:330(set_global_backend)
       16    0.000    0.000    0.000    0.000 arraypad.py:58(_view_roi)
       41    0.000    0.000    0.000    0.000 representer.py:131(add_representer)
        2    0.000    0.000    0.000    0.000 __init__.py:16(_deprecation_notice)
        2    0.000    0.000    0.000    0.000 _compression.py:59(close)
        1    0.000    0.000    0.000    0.000 itt.py:1(<module>)
       44    0.000    0.000    0.000    0.000 core.py:699(<genexpr>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1737(acoth)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:951(FakeTensorMode)
        1    0.000    0.000    0.000    0.000 typing.py:1569(<listcomp>)
        9    0.000    0.000    0.000    0.000 <frozen _collections_abc>:516(__subclasshook__)
        1    0.000    0.000    0.000    0.000 Orbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6455(logistic_gen)
        1    0.000    0.000    0.000    0.000 bessel.py:1028(yn)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:1(<module>)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:235(<lambda>)
        1    0.000    0.000    0.000    0.000 patches.py:1095(Wedge)
        2    0.000    0.000    0.000    0.000 _utils_internal.py:23(get_file_path)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1713(_identify_parameterization)
       12    0.000    0.000    0.000    0.000 arrayprint.py:739(_extendLine)
        1    0.000    0.000    0.000    0.000 symbol.py:524(Wild)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4565(halflogistic_gen)
        1    0.000    0.000    0.000    0.000 calendar.py:52(_localized_month)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3758(erlang_gen)
        1    0.000    0.000    0.000    0.000 function.py:818(DefinedFunction)
        1    0.000    0.000    0.000    0.000 defchararray.py:1922(chararray)
        1    0.000    0.000    0.000    0.000 _realtransforms_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6694(loglaplace_gen)
        1    0.000    0.000    0.000    0.000 _state.py:18(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:277(DeprecatedList)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:23(<listcomp>)
       39    0.000    0.000    0.000    0.000 _jit_internal.py:530(export)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:11(LogitRelaxedBernoulli)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:434(mpc_convert_lhs)
        1    0.000    0.000    0.000    0.000 groebnertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 timeutils.py:37(__do_timings)
        1    0.000    0.000    0.000    0.000 _polyint.py:136(_set_dtype)
        1    0.000    0.000    0.000    0.000 patches.py:1510(Circle)
        1    0.000    0.000    0.000    0.000 reductions.py:151(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _version_control_details.py:15(VersionControlDetails)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:150(_pdf_formula)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:74(_add_types)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:513(__str__)
        1    0.000    0.000    0.000    0.000 tarfile.py:1445(TarFile)
        1    0.000    0.000    0.000    0.000 sites.py:289(PeriodicSite)
        1    0.000    0.000    0.000    0.000 engine.py:28(Diagnostic)
        1    0.000    0.000    0.000    0.000 patches.py:973(PathPatch)
       22    0.000    0.000    0.000    0.000 typing.py:913(_is_typevar_like)
        1    0.000    0.000    0.000    0.000 inputs.py:82(Poscar)
        1    0.000    0.000    0.000    0.000 Manager.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dirichlet.py:16(_Dirichlet)
        1    0.000    0.000    0.000    0.000 __init__.py:775(FastPath)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:123(_add_integer_aliases)
        1    0.000    0.000    0.000    0.000 _interpolate.py:434(fill_value)
        1    0.000    0.000    0.000    0.000 computed_entries.py:696(GibbsComputedStructureEntry)
       32    0.000    0.000    0.000    0.000 arraypad.py:109(<genexpr>)
        3    0.000    0.000    0.000    0.000 __init__.py:290(__getattr__)
       78    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
        1    0.000    0.000    0.000    0.000 rnn.py:518(GRU)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:89(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8154(pareto_gen)
        1    0.000    0.000    0.000    0.000 _compressed.py:25(_cs_matrix)
        4    0.000    0.000    0.000    0.000 function_base.py:1804(trim_zeros)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2108(decorator)
        5    0.000    0.000    0.000    0.000 datetime.py:515(_check_date_fields)
        1    0.000    0.000    0.000    0.000 mock.py:1256(_patch)
        1    0.000    0.000    0.000    0.000 request.py:317(Request)
       57    0.000    0.000    0.000    0.000 __init__.py:2291(<genexpr>)
        1    0.000    0.000    0.000    0.000 quaternion.py:58(Quaternion)
        1    0.000    0.000    0.000    0.000 continued_fraction.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _array_api.py:485(xp_ravel)
        1    0.000    0.000    0.000    0.000 para4band.py:329(<listcomp>)
        4    0.000    0.000    0.000    0.000 {built-in method posix.uname}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10433(truncpareto_gen)
        1    0.000    0.000    0.000    0.000 table.py:232(Table)
        1    0.000    0.000    0.000    0.000 stringpict.py:22(stringPict)
        1    0.000    0.000    0.000    0.000 coreerrors.py:14(LazyExceptionMessage)
       24    0.000    0.000    0.000    0.000 ctx_iv.py:397(make_mpf)
        1    0.000    0.000    0.000    0.000 _graph_traversal.py:16(GraphTraversal)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:70(_icdf_formula)
        3    0.000    0.000    0.000    0.000 intfunc.py:162(igcd)
        3    0.000    0.000    0.000    0.000 core.py:708(add_parse_action)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2845(ANP)
        1    0.000    0.000    0.000    0.000 textpath.py:18(TextToPath)
        2    0.000    0.000    0.000    0.000 libmpi.py:454(mpi_from_str)
       87    0.000    0.000    0.000    0.000 kl.py:822(<lambda>)
        1    0.000    0.000    0.000    0.000 _parser.py:1373(_result)
        3    0.000    0.000    0.000    0.000 _policybase.py:311(header_fetch_parse)
       66    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
       61    0.000    0.000    0.000    0.000 stride_tricks.py:542(<genexpr>)
        2    0.000    0.000    0.000    0.000 ordinals.py:81(__new__)
       10    0.000    0.000    0.000    0.000 inspect.py:1754(currentframe)
        1    0.000    0.000    0.000    0.000 dist.py:244(Distribution)
        1    0.000    0.000    0.000    0.000 sqfreetools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 point.py:42(Point)
       22    0.000    0.000    0.000    0.000 util.py:197(__init__)
        2    0.000    0.000    0.000    0.000 datetime.py:923(__new__)
        1    0.000    0.000    0.000    0.000 common.py:449(PMGDir)
       29    0.000    0.000    0.000    0.000 __init__.py:1830(_str_equal)
      115    0.000    0.000    0.000    0.000 dataclasses.py:843(_hash_set_none)
        1    0.000    0.000    0.000    0.000 numbers.py:189(fibonacci)
        2    0.000    0.000    0.000    0.000 _mio5_params.py:184(_convert_codecs)
        1    0.000    0.000    0.000    0.000 _infra.py:36(Tag)
        1    0.000    0.000    0.000    0.000 tasks.py:78(Task)
        1    0.000    0.000    0.000    0.000 singularityfunctions.py:1(<module>)
        7    0.000    0.000    0.000    0.000 getlimits.py:709(max)
        4    0.000    0.000    0.000    0.000 <frozen os>:1080(__subclasshook__)
        1    0.000    0.000    0.000    0.000 _coo.py:26(_coo_base)
       79    0.000    0.000    0.000    0.000 reduction.py:43(register)
      129    0.000    0.000    0.000    0.000 fromnumeric.py:1021(_argsort_dispatcher)
        1    0.000    0.000    0.000    0.000 outputs.py:1962(Outcar)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:612(_set_prec)
       20    0.000    0.000    0.000    0.000 para4band.py:131(mask)
        1    0.000    0.000    0.000    0.000 {built-in method posix.readlink}
        1    0.000    0.000    0.000    0.000 matcher_utils.py:31(InternalMatch)
        1    0.000    0.000    0.000    0.000 compat.py:62(with_metaclass)
        1    0.000    0.000    0.000    0.000 frontend.py:531(StmtBuilder)
        1    0.000    0.000    0.000    0.000 filelist.py:21(FileList)
        1    0.000    0.000    0.000    0.000 linalg.py:55(SVDResult)
        1    0.000    0.000    0.000    0.000 core.py:103(__diag__)
        6    0.000    0.000    0.000    0.000 rcsetup.py:264(validate_fonttype)
      134    0.000    0.000    0.000    0.000 six.py:93(__init__)
        3    0.000    0.000    0.000    0.000 _codata.py:478(exact2006)
        1    0.000    0.000    0.000    0.000 convert_parameters.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:685(Bbox)
       54    0.000    0.000    0.000    0.000 decorators.py:23(_sympifyit)
       28    0.000    0.000    0.000    0.000 operations.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 _dtype.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:119(Cycler)
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:807(__init__)
        1    0.000    0.000    0.000    0.000 _logical_location.py:12(LogicalLocation)
        1    0.000    0.000    0.000    0.000 pydoc.py:565(HTMLDoc)
        1    0.000    0.000    0.000    0.000 ssl.py:484(SSLContext)
        1    0.000    0.000    0.000    0.000 _result_provenance.py:15(ResultProvenance)
        1    0.000    0.000    0.000    0.000 puiseux.py:231(PuiseuxPoly)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:475(ProxyTorchDispatchMode)
        1    0.000    0.000    0.000    0.000 mathtext.py:3302(MathTextParser)
       14    0.000    0.000    0.000    0.000 util.py:30(__init__)
       18    0.000    0.000    0.000    0.000 {method 'cast' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 convolutions.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sparsetools.py:1(<module>)
        3    0.000    0.000    0.000    0.000 blas.py:270(find_best_blas_type)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.exec_builtin}
       41    0.000    0.000    0.000    0.000 decorators.py:83(call_highest_priority)
        1    0.000    0.000    0.000    0.000 context.py:30(BaseContext)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4694(halfnorm_gen)
       23    0.000    0.000    0.000    0.000 __init__.py:1267(__init__)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1596(<listcomp>)
       57    0.000    0.000    0.000    0.000 <frozen _collections_abc>:315(__subclasshook__)
       93    0.000    0.000    0.000    0.000 composition.py:542(num_atoms)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:302(_World)
        1    0.000    0.000    0.000    0.000 nvtx.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:934(_scandir)
        2    0.000    0.000    0.000    0.000 core.py:2952(_update_from)
        1    0.000    0.000    0.000    0.000 pareto.py:9(Pareto)
        1    0.000    0.000    0.000    0.000 bessel.py:1094(SphericalHankelBase)
        4    0.000    0.000    0.000    0.000 gaussiandomains.py:56(__neg__)
        1    0.000    0.000    0.000    0.000 para4band.py:327(<listcomp>)
        1    0.000    0.000    0.000    0.000 _methods.py:47(_sum)
       18    0.000    0.000    0.000    0.000 traceback.py:310(_original_line)
        5    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
        1    0.000    0.000    0.000    0.000 sdm.py:910(convert_to)
        1    0.000    0.000    0.000    0.000 _factories.py:26(__init__)
        1    0.000    0.000    0.000    0.000 matrixbase.py:3796(_handle_creation_inputs)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:276(__init__)
        1    0.000    0.000    0.000    0.000 decompogen.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 datetime.py:1665(datetime)
        1    0.000    0.000    0.000    0.000 _replicated_tensor_ddp_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 precedence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function_docs.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {built-in method zlib.decompressobj}
        1    0.000    0.000    0.000    0.000 chebyshev.py:1995(Chebyshev)
        3    0.000    0.000    0.000    0.000 _aliases.py:612(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4391(gumbel_l_gen)
       16    0.000    0.000    0.000    0.000 inspect.py:2230(RewriteSymbolics)
       12    0.000    0.000    0.000    0.000 domain.py:403(convert)
        1    0.000    0.000    0.000    0.000 argparse.py:157(HelpFormatter)
        1    0.000    0.000    0.000    0.000 colors.py:81(__init__)
        1    0.000    0.000    0.000    0.000 observer.py:611(PerChannelMinMaxObserver)
        1    0.000    0.000    0.000    0.000 tensor.py:1984(TensExpr)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1015(<listcomp>)
        1    0.000    0.000    0.000    0.000 boolalg.py:68(Boolean)
        1    0.000    0.000    0.000    0.000 pathlib.py:667(with_name)
        1    0.000    0.000    0.000    0.000 _laplacian.py:1(<module>)
        1    0.000    0.000    0.000    0.000 resolver.py:106(BaseResolver)
       14    0.000    0.000    0.000    0.000 dispatcher.py:113(__init__)
        3    0.000    0.000    0.000    0.000 zipfile.py:1868(__del__)
        1    0.000    0.000    0.000    0.000 tz.py:41(tzutc)
        1    0.000    0.000    0.000    0.000 gzip.py:529(_read_eof)
        1    0.000    0.000    0.000    0.000 _common.py:149(_tzinfo)
        3    0.000    0.000    0.000    0.000 feedparser.py:53(__init__)
        8    0.000    0.000    0.000    0.000 __init__.py:150(<genexpr>)
        1    0.000    0.000    0.000    0.000 threading.py:1008(_set_tstate_lock)
       43    0.000    0.000    0.000    0.000 dispatcher.py:120(register)
        1    0.000    0.000    0.000    0.000 {built-in method uarray._uarray.set_global_backend}
        4    0.000    0.000    0.000    0.000 core.py:5381(_generateDefaultName)
       76    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
       50    0.000    0.000    0.000    0.000 typing.py:2018(<genexpr>)
        1    0.000    0.000    0.000    0.000 batch_norm_replacement.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:2955(motzkin)
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:5(_ProbabilityDistribution)
        1    0.000    0.000    0.000    0.000 emitter.py:103(Emitter)
        1    0.000    0.000    0.000    0.000 threads.py:1(<module>)
        1    0.000    0.000    0.000    0.000 reductions.py:154(<dictcomp>)
        2    0.000    0.000    0.000    0.000 weakref.py:164(__setitem__)
        3    0.000    0.000    0.000    0.000 arrayprint.py:403(_get_formatdict)
        1    0.000    0.000    0.000    0.000 facts.py:75(transitive_closure)
        2    0.000    0.000    0.000    0.000 datetime.py:1336(__new__)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:1(<module>)
        2    0.000    0.000    0.000    0.000 cache.py:123(_getenv)
       16    0.000    0.000    0.000    0.000 _collections.py:23(freeze)
        1    0.000    0.000    0.000    0.000 sslproto.py:262(SSLProtocol)
        1    0.000    0.000    0.000    0.000 mock.py:1960(<setcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:209(_InverseTransform)
        8    0.000    0.000    0.000    0.000 copyreg.py:12(pickle)
       15    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.generic' objects}
       27    0.000    0.000    0.000    0.000 _testutils.py:86(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:43(EighResult)
        1    0.000    0.000    0.000    0.000 mathtext.py:966(StixFonts)
        1    0.000    0.000    0.000    0.000 threading.py:583(set)
        1    0.000    0.000    0.000    0.000 sites.py:28(Site)
       30    0.000    0.000    0.000    0.000 core.py:4416(<genexpr>)
        1    0.000    0.000    0.000    0.000 _mio5.py:516(VarWriter5)
       11    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2035(_preserve_type)
       23    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        1    0.000    0.000    0.000    0.000 periodic_table.py:1431(__init__)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:91(Tokenizer)
        1    0.000    0.000    0.000    0.000 _dok.py:17(_dok_base)
        8    0.000    0.000    0.000    0.000 util.py:119(clear)
       25    0.000    0.000    0.000    0.000 decorator.py:251(deprecated)
        1    0.000    0.000    0.000    0.000 modular.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:16(SarifLog)
        1    0.000    0.000    0.000    0.000 _state.py:23(parse_env)
        1    0.000    0.000    0.000    0.000 __init__.py:638(levy_stable_gen)
        1    0.000    0.000    0.000    0.000 subprocess.py:747(Popen)
        1    0.000    0.000    0.000    0.000 sslproto.py:78(_SSLProtocolTransport)
        1    0.000    0.000    0.000    0.000 _crash_handler.py:1(<module>)
       36    0.000    0.000    0.000    0.000 _pytree.py:59(_list_unflatten)
        1    0.000    0.000    0.000    0.000 rk.py:293(RK45)
       40    0.000    0.000    0.000    0.000 enum.py:92(_is_single_bit)
        1    0.000    0.000    0.000    0.000 animation.py:172(AbstractMovieWriter)
        1    0.000    0.000    0.000    0.000 theta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _rectangle.py:12(Rectangle)
        1    0.000    0.000    0.000    0.000 Physics_System.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tight_binding_hamiltonian.py:18(TBHamiltonian)
        1    0.000    0.000    0.000    0.000 __init__.py:136(script_if_tracing)
        1    0.000    0.000    0.000    0.000 _savitzky_golay.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2898(_icdf_dispatch)
        1    0.000    0.000    0.000    0.000 rnn.py:62(RNNBase)
        1    0.000    0.000    0.000    0.000 core.py:321(condition_as_parse_action)
       26    0.000    0.000    0.000    0.000 inspect.py:752(_is_wrapper)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:119(__repr__)
        1    0.000    0.000    0.000    0.000 font_manager.py:1022(FontManager)
       26    0.000    0.000    0.000    0.000 tokenize.py:616(generate_tokens)
        1    0.000    0.000    0.000    0.000 _suppression.py:12(Suppression)
        1    0.000    0.000    0.000    0.000 pythonrational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polynomialring.py:10(PolynomialRing)
        1    0.000    0.000    0.000    0.000 remote_device.py:6(_remote_device)
        1    0.000    0.000    0.000    0.000 gosper.py:1(<module>)
       32    0.000    0.000    0.000    0.000 arraypad.py:33(_slice_at_axis)
        1    0.000    0.000    0.000    0.000 multinomial.py:11(Multinomial)
        1    0.000    0.000    0.000    0.000 dot.py:1(<module>)
       56    0.000    0.000    0.000    0.000 __init__.py:1894(<genexpr>)
        1    0.000    0.000    0.000    0.000 _mmio.py:248(MMFile)
        3    0.000    0.000    0.000    0.000 __init__.py:4998(_make_r_binary_op)
       74    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        1    0.000    0.000    0.000    0.000 trajectory.py:42(Trajectory)
        1    0.000    0.000    0.000    0.000 more.py:2049(numeric_range)
        8    0.000    0.000    0.000    0.000 rrule.py:77(<genexpr>)
        6    0.000    0.000    0.000    0.000 rcsetup.py:228(_make_type_validator)
       20    0.000    0.000    0.000    0.000 rcsetup.py:600(_deprecate_case_insensitive_join_cap)
        1    0.000    0.000    0.000    0.000 piecewise.py:65(Piecewise)
        1    0.000    0.000    0.000    0.000 pickle.py:407(_Pickler)
        3    0.000    0.000    0.000    0.000 six.py:194(find_spec)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parameter.py:81(UninitializedTensorMixin)
        1    0.000    0.000    0.000    0.000 __init__.py:142(CudnnModule)
        1    0.000    0.000    0.000    0.000 outputs.py:5920(Vaspout)
        1    0.000    0.000    0.000    0.000 repmatrix.py:23(RepMatrix)
        6    0.000    0.000    0.000    0.000 _policybase.py:94(_append_doc)
        1    0.000    0.000    0.000    0.000 __init__.py:112(<listcomp>)
        1    0.000    0.000    0.000    0.000 _cubature.py:29(CubatureRegion)
        1    0.000    0.000    0.000    0.000 __init__.py:121(<listcomp>)
        2    0.000    0.000    0.000    0.000 version.py:523(_cmpkey)
       11    0.000    0.000    0.000    0.000 threading.py:90(RLock)
        1    0.000    0.000    0.000    0.000 approximation.py:1(<module>)
        3    0.000    0.000    0.000    0.000 numbers.py:1397(from_coprime_ints)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:27(merge_dicts)
        1    0.000    0.000    0.000    0.000 core.py:87(Magmom)
        1    0.000    0.000    0.000    0.000 std.py:76(TqdmDefaultWriteLock)
        2    0.000    0.000    0.000    0.000 arrayprint.py:503(decorating_function)
        1    0.000    0.000    0.000    0.000 defmatrix.py:73(matrix)
        1    0.000    0.000    0.000    0.000 generators.py:1(<module>)
        3    0.000    0.000    0.000    0.000 feedparser.py:70(close)
        1    0.000    0.000    0.000    0.000 sets.py:1819(EmptySet)
        1    0.000    0.000    0.000    0.000 transformed_distribution.py:11(TransformedDistribution)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:165(_icdf_formula)
        1    0.000    0.000    0.000    0.000 __init__.py:353(get_device_name)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:382(PngStream)
        1    0.000    0.000    0.000    0.000 art3d.py:74(Text3D)
        1    0.000    0.000    0.000    0.000 __init__.py:939(ByteStorage)
        1    0.000    0.000    0.000    0.000 _message.py:12(Message)
       16    0.000    0.000    0.000    0.000 doccer.py:82(inherit_docstring_from)
       33    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        5    0.000    0.000    0.000    0.000 assume.py:305(__new__)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:12(ReportingConfiguration)
        1    0.000    0.000    0.000    0.000 independent.py:9(Independent)
        1    0.000    0.000    0.000    0.000 linear.py:9(LinearPackedParams)
        1    0.000    0.000    0.000    0.000 client.py:789(HTTPConnection)
        6    0.000    0.000    0.000    0.000 glob.py:222(has_magic)
        1    0.000    0.000    0.000    0.000 process.py:71(BaseProcess)
        1    0.000    0.000    0.000    0.000 calendar.py:54(<listcomp>)
        1    0.000    0.000    0.000    0.000 lsmr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _thread_flow.py:16(ThreadFlow)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:677(rv_generic)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:12(EdgeTraversal)
       32    0.000    0.000    0.000    0.000 typing.py:2906(<genexpr>)
        1    0.000    0.000    0.000    0.000 single.py:42(SingleODEProblem)
        1    0.000    0.000    0.000    0.000 _rgi.py:56(RegularGridInterpolator)
        1    0.000    0.000    0.000    0.000 _quantile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _edge.py:12(Edge)
        7    0.000    0.000    0.000    0.000 {method 'read' of '_io.StringIO' objects}
       59    0.000    0.000    0.000    0.000 {function FreezableDefaultDict.__missing__ at 0x14ca5eb81c60}
        1    0.000    0.000    0.000    0.000 selector_events.py:43(BaseSelectorEventLoop)
        2    0.000    0.000    0.000    0.000 numerictypes.py:229(obj2sctype)
        6    0.000    0.000    0.000    0.000 deprecation.py:269(__init__)
        1    0.000    0.000    0.000    0.000 _util.py:671(_workers_wrapper)
        1    0.000    0.000    0.000    0.000 case.py:44(_Outcome)
       41    0.000    0.000    0.000    0.000 typing.py:2835(<listcomp>)
        1    0.000    0.000    0.000    0.000 _linprog_simplex.py:1(<module>)
        2    0.000    0.000    0.000    0.000 matexpr.py:81(__new__)
        1    0.000    0.000    0.000    0.000 rk.py:183(RK23)
       36    0.000    0.000    0.000    0.000 symbol.py:410(_hashable_content)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:26(_apply)
        1    0.000    0.000    0.000    0.000 _stack_frame.py:12(StackFrame)
        1    0.000    0.000    0.000    0.000 shape_prop.py:11(TensorMetadata)
       71    0.000    0.000    0.000    0.000 <frozen _collections_abc>:409(__subclasshook__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
        1    0.000    0.000    0.000    0.000 datetime.py:893(date)
       15    0.000    0.000    0.000    0.000 _helpers.py:660(_check_device)
       16    0.000    0.000    0.000    0.000 ctx_mp_python.py:597(make_mpf)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:254(_requires_builtin_wrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:129(Command)
        1    0.000    0.000    0.000    0.000 collections.py:1233(RegularPolyCollection)
        3    0.000    0.000    0.000    0.000 libmpf.py:59(prec_to_dps)
        1    0.000    0.000    0.000    0.000 conv.py:675(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 random.py:284(randrange)
        1    0.000    0.000    0.000    0.000 groups.py:66(SymmetryGroup)
        1    0.000    0.000    0.000    0.000 context.py:79(_compose)
        2    0.000    0.000    0.000    0.000 selectors.py:583(_can_use)
       10    0.000    0.000    0.000    0.000 gaussiandomains.py:27(new)
        1    0.000    0.000    0.000    0.000 euler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _dtype_ctypes.py:1(<module>)
       85    0.000    0.000    0.000    0.000 _compat_pickle.py:167(<genexpr>)
        1    0.000    0.000    0.000    0.000 repr.py:18(ReprPrinter)
       93    0.000    0.000    0.000    0.000 {method 'ljust' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _cobyla_py.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rref.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _helpers.py:310(is_numpy_namespace)
        1    0.000    0.000    0.000    0.000 unicode.py:31(unicode_set)
       16    0.000    0.000    0.000    0.000 {method 'popitem' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 charset.py:211(__init__)
      8/2    0.000    0.000    0.000    0.000 densebasic.py:315(_rec_validate)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5028(Mixture)
       40    0.000    0.000    0.000    0.000 typing_extensions.py:723(__hash__)
        1    0.000    0.000    0.000    0.000 ops.py:726(add_comparative_ops)
        1    0.000    0.000    0.000    0.000 _property_bag.py:10(PropertyBag)
        1    0.000    0.000    0.000    0.000 _decomposition_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 testing.py:126(TestParseResultsAsserts)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:12(RunAutomationDetails)
        5    0.000    0.000    0.000    0.000 __init__.py:750(__init__)
       13    0.000    0.000    0.000    0.000 _conversions.py:38(_make_conversion_method)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2067(_num_parameters)
        1    0.000    0.000    0.000    0.000 _stats_py.py:9096(QuantileTestResult)
        1    0.000    0.000    0.000    0.000 dev.py:159(__call__)
        1    0.000    0.000    0.000    0.000 conv.py:39(Conv1d)
        1    0.000    0.000    0.000    0.000 linalg.py:47(QRResult)
        1    0.000    0.000    0.000    0.000 laguerre.py:1606(Laguerre)
        1    0.000    0.000    0.000    0.000 __init__.py:45(enabled)
        1    0.000    0.000    0.000    0.000 qp_subproblem.py:1(<module>)
        1    0.000    0.000    0.000    0.000 inputs.py:3075(VaspInput)
        1    0.000    0.000    0.000    0.000 dviread.py:789(PsfontsMap)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:117(_sample_formula)
        1    0.000    0.000    0.000    0.000 julia.py:48(JuliaCodePrinter)
        1    0.000    0.000    0.000    0.000 hb.py:354(HBMatrixType)
        1    0.000    0.000    0.000    0.000 octave.py:65(OctaveCodePrinter)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:25(__init__)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:10(Gcf)
        1    0.000    0.000    0.000    0.000 _node.py:17(Node)
        1    0.000    0.000    0.000    0.000 _physical_location.py:17(PhysicalLocation)
        1    0.000    0.000    0.000    0.000 finitefield.py:108(FiniteField)
        7    0.000    0.000    0.000    0.000 dev.py:20(deprecated)
        1    0.000    0.000    0.000    0.000 queue.py:28(Queue)
        1    0.000    0.000    0.000    0.000 ImageChops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 argparse.py:1142(_SubParsersAction)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:104(_format_size)
        1    0.000    0.000    0.000    0.000 _spfun_stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:9(MixtureSameFamily)
       13    0.000    0.000    0.000    0.000 enum.py:775(__iter__)
        1    0.000    0.000    0.000    0.000 conv.py:36(_ConvNd)
        2    0.000    0.000    0.000    0.000 __init__.py:12(<listcomp>)
        1    0.000    0.000    0.000    0.000 tensor.py:416(_TensorDataLazyEvaluator)
        1    0.000    0.000    0.000    0.000 linalg.py:51(SlogdetResult)
        1    0.000    0.000    0.000    0.000 legendre.py:1619(Legendre)
        1    0.000    0.000    0.000    0.000 numbers.py:32(Complex)
        1    0.000    0.000    0.000    0.000 _location_relationship.py:12(LocationRelationship)
        7    0.000    0.000    0.000    0.000 legend_handler.py:136(__init__)
        1    0.000    0.000    0.000    0.000 dbapi2.py:54(register_adapters_and_converters)
        1    0.000    0.000    0.000    0.000 _text.py:7(FoldedCase)
        2    0.000    0.000    0.000    0.000 _importlib.py:1(<module>)
        9    0.000    0.000    0.000    0.000 __init__.py:163(__new__)
        1    0.000    0.000    0.000    0.000 free_groups.py:350(FreeGroupElement)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10826(uniform_gen)
        4    0.000    0.000    0.000    0.000 legend_handler.py:181(__init__)
        1    0.000    0.000    0.000    0.000 core.py:5959(__init__)
        8    0.000    0.000    0.000    0.000 __init__.py:56(__init_subclass__)
        1    0.000    0.000    0.000    0.000 ast.py:74(_convert_signed_num)
        1    0.000    0.000    0.000    0.000 _lil.py:20(_lil_base)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:379(MinMaxBase)
        1    0.000    0.000    0.000    0.000 __init__.py:192(<dictcomp>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:993(Species)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:10(ArrayComprehension)
        1    0.000    0.000    0.000    0.000 _base.py:352(ProductNestedFixed)
        1    0.000    0.000    0.000    0.000 ndim_array.py:86(NDimArray)
        1    0.000    0.000    0.000    0.000 _script.py:562(RecursiveScriptModule)
        1    0.000    0.000    0.000    0.000 _pade.py:1(<module>)
        1    0.000    0.000    0.000    0.000 futures.py:30(Future)
        1    0.000    0.000    0.000    0.000 _survival.py:17(EmpiricalDistributionFunction)
        8    0.000    0.000    0.000    0.000 fontconfig_pattern.py:144(_name)
        1    0.000    0.000    0.000    0.000 _version.py:136(__lt__)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1650(HermiteE)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1013(<listcomp>)
       15    0.000    0.000    0.000    0.000 ssl.py:1000(_sslcopydoc)
        1    0.000    0.000    0.000    0.000 inputs.py:791(Incar)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 common.py:465(<dictcomp>)
        4    0.000    0.000    0.000    0.000 libmpf.py:631(mpf_le)
        1    0.000    0.000    0.000    0.000 transforms.py:687(AffineTransform)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:122(<listcomp>)
        1    0.000    0.000    0.000    0.000 sparse.py:9(Embedding)
        1    0.000    0.000    0.000    0.000 finite_diff.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:282(define_parameters)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:16(ReportingDescriptorRelationship)
        1    0.000    0.000    0.000    0.000 serializer.py:33(Serializer)
       30    0.000    0.000    0.000    0.000 _array_api.py:525(<listcomp>)
        1    0.000    0.000    0.000    0.000 polynomial.py:1077(poly1d)
        1    0.000    0.000    0.000    0.000 _trace.py:1215(_script_if_tracing)
        1    0.000    0.000    0.000    0.000 session.py:1(<module>)
        4    0.000    0.000    0.000    0.000 results.py:224(__setitem__)
       13    0.000    0.000    0.000    0.000 {method 'index' of 'tuple' objects}
        1    0.000    0.000    0.000    0.000 _artifact_location.py:12(ArtifactLocation)
        1    0.000    0.000    0.000    0.000 representer.py:238(SafeRepresenter)
        1    0.000    0.000    0.000    0.000 printer.py:235(Printer)
        1    0.000    0.000    0.000    0.000 linear.py:99(Linear)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1657(rv_continuous)
       14    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:12(MultiformatMessageString)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:397(PythonKeyTracer)
        1    0.000    0.000    0.000    0.000 operations.py:29(SymmOp)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1692(reset_cache)
        1    0.000    0.000    0.000    0.000 __init__.py:21(__deprecated_private_func)
        1    0.000    0.000    0.000    0.000 transformer.py:370(TransformerEncoderLayer)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:151(_set_up_aliases)
       12    0.000    0.000    0.000    0.000 typing.py:389(<genexpr>)
       19    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        1    0.000    0.000    0.000    0.000 tempfile.py:665(SpooledTemporaryFile)
        1    0.000    0.000    0.000    0.000 art3d.py:128(Line3D)
        2    0.000    0.000    0.000    0.000 {built-in method posix.access}
        8    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        5    0.000    0.000    0.000    0.000 <frozen _collections_abc>:489(_type_repr)
        1    0.000    0.000    0.000    0.000 fusion.py:1(<module>)
       32    0.000    0.000    0.000    0.000 arraypad.py:120(<genexpr>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3635(_pdf_formula)
        1    0.000    0.000    0.000    0.000 _attachment.py:18(Attachment)
        6    0.000    0.000    0.000    0.000 parse.py:786(__getattr__)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:39(_mpf)
        1    0.000    0.000    0.000    0.000 core.py:1329(make_mask_descr)
        1    0.000    0.000    0.000    0.000 utils.py:17(LinearBlockSparsePattern)
       28    0.000    0.000    0.000    0.000 _decorator.py:14(__init__)
        1    0.000    0.000    0.000    0.000 core.py:2420(__init__)
        1    0.000    0.000    0.000    0.000 function.py:517(once_differentiable)
        1    0.000    0.000    0.000    0.000 abc.py:14(ResourceReader)
       18    0.000    0.000    0.000    0.000 _data.py:142(_create_method)
       15    0.000    0.000    0.000    0.000 weakref.py:427(__setitem__)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:232(<lambda>)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:60(FakeQuantizeBase)
        5    0.000    0.000    0.000    0.000 __init__.py:10(set_module)
       17    0.000    0.000    0.000    0.000 __init__.py:438(<dictcomp>)
       59    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
        1    0.000    0.000    0.000    0.000 mathtext.py:642(BakomaFonts)
        1    0.000    0.000    0.000    0.000 core.py:4918(__init__)
        1    0.000    0.000    0.000    0.000 glsl.py:30(GLSLPrinter)
       13    0.000    0.000    0.000    0.000 enum.py:116(_iter_bits_lsb)
        1    0.000    0.000    0.000    0.000 formal.py:968(FormalPowerSeries)
        1    0.000    0.000    0.000    0.000 socket.py:214(socket)
        4    0.000    0.000    0.000    0.000 kind.py:75(__new__)
        1    0.000    0.000    0.000    0.000 sparse.py:13(Embedding)
        1    0.000    0.000    0.000    0.000 residues.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:425(_reduce_with_dtype)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2448(DMF)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:85(add)
        1    0.000    0.000    0.000    0.000 hermite.py:1658(Hermite)
        1    0.000    0.000    0.000    0.000 _qmc.py:2486(MultinomialQMC)
        1    0.000    0.000    0.000    0.000 transformer.py:593(TransformerDecoderLayer)
       24    0.000    0.000    0.000    0.000 dviread.py:168(<listcomp>)
        1    0.000    0.000    0.000    0.000 conditionset.py:19(ConditionSet)
        3    0.000    0.000    0.000    0.000 core.py:5093(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 sparse.py:226(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 structure.py:3439(IMolecule)
        1    0.000    0.000    0.000    0.000 animation.py:256(MovieWriter)
        1    0.000    0.000    0.000    0.000 special.py:75(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._distributed_c10d.set_debug_level_from_env}
        1    0.000    0.000    0.000    0.000 _multivariate.py:5334(random_table_gen)
        1    0.000    0.000    0.000    0.000 operations.py:516(MagSymmOp)
        1    0.000    0.000    0.000    0.000 qmc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:15(ExternalPropertyFileReference)
        7    0.000    0.000    0.000    0.000 fractions.py:277(_operator_fallbacks)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3121(_one)
        1    0.000    0.000    0.000    0.000 normal.py:12(Normal)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:12(ExpressionRawDomain)
       10    0.000    0.000    0.000    0.000 version.py:319(<listcomp>)
        1    0.000    0.000    0.000    0.000 relational.py:65(Relational)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1832(tol)
        1    0.000    0.000    0.000    0.000 memory_format.py:1(<module>)
       36    0.000    0.000    0.000    0.000 __init__.py:888(__bool__)
       58    0.000    0.000    0.000    0.000 _utils.py:770(__init__)
        1    0.000    0.000    0.000    0.000 exprtools.py:809(Term)
       36    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}
        1    0.000    0.000    0.000    0.000 _internal.py:240(_missing_ctypes)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:12(ToolComponentReference)
       14    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 image.py:1010(NonUniformImage)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:71(_export_c_types)
        1    0.000    0.000    0.000    0.000 _bsplines.py:69(BSpline)
        1    0.000    0.000    0.000    0.000 pycode.py:664(CmathPrinter)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:58(MPContext)
        1    0.000    0.000    0.000    0.000 _script.py:486(ScriptModule)
        1    0.000    0.000    0.000    0.000 libmpc.py:205(mpc_div_mpf)
        1    0.000    0.000    0.000    0.000 rcode.py:78(RCodePrinter)
       59    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1846(cache_policy)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:359(_mpc)
        1    0.000    0.000    0.000    0.000 specifiers.py:44(BaseSpecifier)
        5    0.000    0.000    0.000    0.000 core.py:6175(token_map)
        1    0.000    0.000    0.000    0.000 entity.py:71(GeometryEntity)
       10    0.000    0.000    0.000    0.000 dataclasses.py:847(<listcomp>)
       10    0.000    0.000    0.000    0.000 symbol.py:798(<listcomp>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2331(_median_dispatch)
        1    0.000    0.000    0.000    0.000 base64mime.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _artifact_content.py:15(ArtifactContent)
        1    0.000    0.000    0.000    0.000 _reduction.py:1(<module>)
       14    0.000    0.000    0.000    0.000 libelefun.py:85(constant_memo)
        1    0.000    0.000    0.000    0.000 loss.py:1498(TripletMarginWithDistanceLoss)
        1    0.000    0.000    0.000    0.000 core.py:238(<listcomp>)
        1    0.000    0.000    0.000    0.000 random.py:103(Random)
        1    0.000    0.000    0.000    0.000 gamma.py:14(Gamma)
        1    0.000    0.000    0.000    0.000 rnn.py:178(LSTMCell)
        1    0.000    0.000    0.000    0.000 _conversion.py:17(Conversion)
        1    0.000    0.000    0.000    0.000 dataclasses.py:1224(fields)
        1    0.000    0.000    0.000    0.000 tz.py:132(tzoffset)
       11    0.000    0.000    0.000    0.000 eigen.py:41(defun)
       20    0.000    0.000    0.000    0.000 enum.py:1609(_simple_enum)
        1    0.000    0.000    0.000    0.000 {built-in method time.localtime}
        1    0.000    0.000    0.000    0.000 _finite_differences.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dir_util.py:30(wrap)
       33    0.000    0.000    0.000    0.000 _collections.py:24(<lambda>)
       13    0.000    0.000    0.000    0.000 mixins.py:36(_inplace_binary_method)
       52    0.000    0.000    0.000    0.000 pathlib.py:327(_select_from)
        1    0.000    0.000    0.000    0.000 _tzpath.py:31(_parse_python_tzpath)
        1    0.000    0.000    0.000    0.000 settings.py:27(JonesFaithfulTransformation)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:307(_pdf_formula)
        1    0.000    0.000    0.000    0.000 _ltisys.py:490(TransferFunction)
        1    0.000    0.000    0.000    0.000 patches.py:2415(_Base)
        7    0.000    0.000    0.000    0.000 core.py:2544(_arraymethod)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:623(convert)
        1    0.000    0.000    0.000    0.000 _graph.py:17(Graph)
        1    0.000    0.000    0.000    0.000 tripcolor.py:1(<module>)
        8    0.000    0.000    0.000    0.000 mock.py:322(_delegating_property)
        1    0.000    0.000    0.000    0.000 polytools.py:7556(GroebnerBasis)
        1    0.000    0.000    0.000    0.000 datapipe.py:212(MapDataPipe)
        1    0.000    0.000    0.000    0.000 debug.py:1(<module>)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:82(mpf_convert_arg)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:195(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 sparse.py:49(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 analyzer.py:84(SpacegroupAnalyzer)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:327(register_op_impl)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:444(<listcomp>)
        1    0.000    0.000    0.000    0.000 client.py:108(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _fix.py:16(Fix)
        1    0.000    0.000    0.000    0.000 cse_opts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:527(Distribution)
        1    0.000    0.000    0.000    0.000 factor_.py:665(FactorCache)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:70(_apply)
        1    0.000    0.000    0.000    0.000 tensor.py:812(__init__)
       38    0.000    0.000    0.000    0.000 ops.py:33(set_doc_string)
       36    0.000    0.000    0.000    0.000 discovery.py:252(<genexpr>)
       18    0.000    0.000    0.000    0.000 __init__.py:788(__init__)
        1    0.000    0.000    0.000    0.000 decorator.py:85(conserve_mpmath_dps)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:28(<dictcomp>)
        1    0.000    0.000    0.000    0.000 sets.py:1035(Interval)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:695(LOBPCG)
        2    0.000    0.000    0.000    0.000 _adapters.py:165(wrap_spec)
        1    0.000    0.000    0.000    0.000 structure.py:4137(Structure)
        1    0.000    0.000    0.000    0.000 __init__.py:869(ByteStorage)
        1    0.000    0.000    0.000    0.000 base_backend.py:49(Plot)
        1    0.000    0.000    0.000    0.000 subspaces.py:1(<module>)
        1    0.000    0.000    0.000    0.000 file_util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 special.py:181(__new__)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1221(StateSpace)
        1    0.000    0.000    0.000    0.000 _aliases.py:122(ones)
        1    0.000    0.000    0.000    0.000 dos.py:171(Dos)
        6    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 _diagnostic.py:99(__init__)
       38    0.000    0.000    0.000    0.000 ops.py:25(set_doc)
        1    0.000    0.000    0.000    0.000 numbers.py:294(Integral)
        1    0.000    0.000    0.000    0.000 ssl.py:845(SSLObject)
        1    0.000    0.000    0.000    0.000 _csr.py:18(_csr_base)
        1    0.000    0.000    0.000    0.000 binrel.py:15(BinaryRelation)
        1    0.000    0.000    0.000    0.000 numpy.py:37(NumPyPrinter)
        1    0.000    0.000    0.000    0.000 subsets.py:6(Subset)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:386(_set_prec)
        1    0.000    0.000    0.000    0.000 rnn.py:111(RNNCell)
        1    0.000    0.000    0.000    0.000 _replacement.py:16(Replacement)
        1    0.000    0.000    0.000    0.000 {method 'normal' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 threading.py:555(__init__)
        1    0.000    0.000    0.000    0.000 complexfield.py:16(ComplexField)
        1    0.000    0.000    0.000    0.000 core.py:1315(_replace_dtype_fields)
        1    0.000    0.000    0.000    0.000 exponential.py:10(Exponential)
        1    0.000    0.000    0.000    0.000 bessel.py:1207(hn2)
        1    0.000    0.000    0.000    0.000 kind.py:64(__new__)
        1    0.000    0.000    0.000    0.000 error_functions.py:1828(Si)
       11    0.000    0.000    0.000    0.000 windows.py:53(decorator)
        9    0.000    0.000    0.000    0.000 core.py:3771(parseImpl)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1011(<listcomp>)
       32    0.000    0.000    0.000    0.000 decorators.py:196(sympify_return)
        1    0.000    0.000    0.000    0.000 mathematica.py:122(MCodePrinter)
        1    0.000    0.000    0.000    0.000 tight_layout.py:1(<module>)
        1    0.000    0.000    0.000    0.000 computed_entries.py:287(ComputedEntry)
        1    0.000    0.000    0.000    0.000 zipfile.py:1216(ZipFile)
        1    0.000    0.000    0.000    0.000 axis.py:1965(XAxis)
        2    0.000    0.000    0.000    0.000 operations.py:613(__init__)
       38    0.000    0.000    0.000    0.000 observer.py:53(__init__)
        1    0.000    0.000    0.000    0.000 reductions.py:52(__init__)
       31    0.000    0.000    0.000    0.000 _base.py:51(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:98(<listcomp>)
        1    0.000    0.000    0.000    0.000 constructor.py:62(BaseConstructor)
       37    0.000    0.000    0.000    0.000 numbers.py:1761(as_coeff_Mul)
       10    0.000    0.000    0.000    0.000 _text.py:90(lower)
        1    0.000    0.000    0.000    0.000 ast.py:70(_convert_num)
       10    0.000    0.000    0.000    0.000 axis.py:1935(_make_getset_interval)
        1    0.000    0.000    0.000    0.000 setupcfg.py:228(ConfigHandler)
        1    0.000    0.000    0.000    0.000 pycode.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 client.py:239(HTTPResponse)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1413(DummySpecies)
       31    0.000    0.000    0.000    0.000 laplace.py:48(DEBUG_WRAP)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:583(PythonMPContext)
       12    0.000    0.000    0.000    0.000 patches.py:1883(<genexpr>)
       58    0.000    0.000    0.000    0.000 units.py:138(<genexpr>)
        1    0.000    0.000    0.000    0.000 Orbit_spd_without_spin.py:15(orbit_spd_without_spin)
        1    0.000    0.000    0.000    0.000 conv.py:961(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 line.py:50(LinearEntity)
        1    0.000    0.000    0.000    0.000 queues.py:21(Queue)
        1    0.000    0.000    0.000    0.000 distance.py:1796(MetricInfo)
       37    0.000    0.000    0.000    0.000 function_base.py:19(_linspace_dispatcher)
        1    0.000    0.000    0.000    0.000 deutils.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1759(<listcomp>)
        1    0.000    0.000    0.000    0.000 _extract.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:348(_sample_formula)
        1    0.000    0.000    0.000    0.000 dist.py:1109(DistributionMetadata)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:170(<lambda>)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:145(__float__)
        1    0.000    0.000    0.000    0.000 rootoftools.py:1101(RootSum)
        1    0.000    0.000    0.000    0.000 conv.py:806(ConvTranspose2d)
       14    0.000    0.000    0.000    0.000 mixins.py:26(_reflected_binary_method)
       74    0.000    0.000    0.000    0.000 util.py:245(no_escape_re_range_char)
        1    0.000    0.000    0.000    0.000 _data.py:20(_data_matrix)
        1    0.000    0.000    0.000    0.000 context.py:297(passes)
        1    0.000    0.000    0.000    0.000 _infra.py:272(<setcomp>)
        1    0.000    0.000    0.000    0.000 digits.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_registry.py:43(backend_registered)
        1    0.000    0.000    0.000    0.000 linear.py:67(Linear)
       43    0.000    0.000    0.000    0.000 _compat_pickle.py:165(<genexpr>)
        1    0.000    0.000    0.000    0.000 _bracket.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _lebedev.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1803(LoggerAdapter)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:418(_mode_formula)
        1    0.000    0.000    0.000    0.000 matrices.py:9(_matrix)
        1    0.000    0.000    0.000    0.000 optimizer.py:154(Optimizer)
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:24(MultiUFunc)
        3    0.000    0.000    0.000    0.000 legend_handler.py:341(__init__)
        6    0.000    0.000    0.000    0.000 {built-in method math.frexp}
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3172(_ndim_dispatcher)
        1    0.000    0.000    0.000    0.000 integerring.py:20(IntegerRing)
       13    0.000    0.000    0.000    0.000 basic.py:539(__ne__)
       44    0.000    0.000    0.000    0.000 core.py:4405(<genexpr>)
        1    0.000    0.000    0.000    0.000 comments.py:706(CommentedMap)
        1    0.000    0.000    0.000    0.000 transforms.py:391(IndependentTransform)
        1    0.000    0.000    0.000    0.000 re.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tool.py:12(Tool)
        1    0.000    0.000    0.000    0.000 threading.py:838(Thread)
        2    0.000    0.000    0.000    0.000 kind.py:266(register)
        1    0.000    0.000    0.000    0.000 threading.py:389(notify_all)
        1    0.000    0.000    0.000    0.000 numbers.py:2231(AlgebraicNumber)
        1    0.000    0.000    0.000    0.000 qfunctions.py:1(<module>)
        5    0.000    0.000    0.000    0.000 {built-in method posix.register_at_fork}
       45    0.000    0.000    0.000    0.000 ctx_iv.py:394(<lambda>)
        1    0.000    0.000    0.000    0.000 heuristicgcd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 is_from_package.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _matrix.py:1(spmatrix)
        2    0.000    0.000    0.000    0.000 {method 'replace' of 'code' objects}
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:289(_apply_params)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:70(Embedding)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:506(rv_frozen)
       29    0.000    0.000    0.000    0.000 core.py:4695(recurse)
        1    0.000    0.000    0.000    0.000 legend_handler.py:545(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1327(_TorchCompileInductorWrapper)
        1    0.000    0.000    0.000    0.000 pooling.py:16(_MaxPoolNd)
       77    0.000    0.000    0.000    0.000 signal.py:16(<lambda>)
        2    0.000    0.000    0.000    0.000 _parser.py:1006(addgroup)
        1    0.000    0.000    0.000    0.000 _stdlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:46(PythonMPQ)
        1    0.000    0.000    0.000    0.000 _interpolate.py:173(interp1d)
        1    0.000    0.000    0.000    0.000 dispatcher.py:89(Dispatcher)
        1    0.000    0.000    0.000    0.000 {built-in method math.exp}
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:507(DifferentialEvolutionSolver)
       55    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1867(validation_policy)
        1    0.000    0.000    0.000    0.000 beta.py:11(Beta)
        1    0.000    0.000    0.000    0.000 dirichlet.py:30(Dirichlet)
        1    0.000    0.000    0.000    0.000 art3d.py:246(Line3DCollection)
        1    0.000    0.000    0.000    0.000 std.py:131(Bar)
        1    0.000    0.000    0.000    0.000 io_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:23(PandasWrapper)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2349(_mode_dispatch)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:304(MPIntervalContext)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:18(ModuleHomomorphism)
       29    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 modules.py:840(Submodule)
        3    0.000    0.000    0.000    0.000 arrayprint.py:1415(dtype_is_implied)
        1    0.000    0.000    0.000    0.000 modules.py:1280(ModuleElement)
        6    0.000    0.000    0.000    0.000 basic.py:149(<genexpr>)
       18    0.000    0.000    0.000    0.000 ops.py:312(__init__)
        1    0.000    0.000    0.000    0.000 hyper.py:90(hyper)
        7    0.000    0.000    0.000    0.000 graph.py:57(_register_custom_builtin)
        1    0.000    0.000    0.000    0.000 tfqmr.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _internal.py:920(npy_ctypes_check)
        1    0.000    0.000    0.000    0.000 message.py:972(MIMEPart)
        2    0.000    0.000    0.000    0.000 pathlib.py:777(parent)
        7    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:816(matches)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:24(BlockMatrix)
        3    0.000    0.000    0.000    0.000 core.py:714(<listcomp>)
        1    0.000    0.000    0.000    0.000 observer.py:1365(RecordingObserver)
        1    0.000    0.000    0.000    0.000 axis.py:2253(YAxis)
        1    0.000    0.000    0.000    0.000 _deprecate.py:1(<module>)
       78    0.000    0.000    0.000    0.000 signal.py:21(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:221(<dictcomp>)
        3    0.000    0.000    0.000    0.000 _policybase.py:281(_sanitize_header)
        1    0.000    0.000    0.000    0.000 fourier.py:127(FourierSeries)
        1    0.000    0.000    0.000    0.000 datetime.py:573(timedelta)
        1    0.000    0.000    0.000    0.000 bessel.py:1151(hn1)
        2    0.000    0.000    0.000    0.000 {built-in method _struct.unpack}
        1    0.000    0.000    0.000    0.000 polygon.py:28(Polygon)
        1    0.000    0.000    0.000    0.000 mock.py:2158(AsyncMockMixin)
        1    0.000    0.000    0.000    0.000 process.py:399(__init__)
       23    0.000    0.000    0.000    0.000 functools.py:972(__set_name__)
        3    0.000    0.000    0.000    0.000 message.py:150(__init__)
        1    0.000    0.000    0.000    0.000 _builtins.py:114(_gen_torch_functional_registered_ops)
        1    0.000    0.000    0.000    0.000 algebraicfield.py:15(AlgebraicField)
        1    0.000    0.000    0.000    0.000 difflib.py:44(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:994(wrap)
       10    0.000    0.000    0.000    0.000 bz2.py:121(closed)
        1    0.000    0.000    0.000    0.000 distance.py:1984(<dictcomp>)
        6    0.000    0.000    0.000    0.000 libmpf.py:653(mpf_pos)
        1    0.000    0.000    0.000    0.000 conv.py:16(_ConvNd)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1052(TimerBase)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:262(__subclasshook__)
        2    0.000    0.000    0.000    0.000 __init__.py:2356(_backend_module_name)
        9    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:388(_attrgetter)
        1    0.000    0.000    0.000    0.000 linear.py:17(LinearPackedParams)
       12    0.000    0.000    0.000    0.000 doccer.py:139(extend_notes_in_docstring)
        6    0.000    0.000    0.000    0.000 monkey.py:60(<genexpr>)
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:298(_export)
        1    0.000    0.000    0.000    0.000 matexpr.py:739(_LeftRightArgs)
        1    0.000    0.000    0.000    0.000 units.py:141(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _artifact_change.py:16(ArtifactChange)
        1    0.000    0.000    0.000    0.000 realfield.py:54(RealField)
        7    0.000    0.000    0.000    0.000 {method 'deleter' of 'property' objects}
        1    0.000    0.000    0.000    0.000 collections.py:1824(TriMesh)
        1    0.000    0.000    0.000    0.000 comments.py:88(Comment)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:16(GaussianElement)
        1    0.000    0.000    0.000    0.000 wrappers.py:78(elementwise_type_promotion_wrapper)
        1    0.000    0.000    0.000    0.000 exponential.py:35(ExpBase)
        1    0.000    0.000    0.000    0.000 unary.py:75(<listcomp>)
        1    0.000    0.000    0.000    0.000 _covariance.py:11(Covariance)
        1    0.000    0.000    0.000    0.000 collections.py:1888(QuadMesh)
        1    0.000    0.000    0.000    0.000 bz2.py:131(seekable)
       20    0.000    0.000    0.000    0.000 _parser.py:160(__delitem__)
        1    0.000    0.000    0.000    0.000 hyper.py:391(meijerg)
        1    0.000    0.000    0.000    0.000 conv.py:588(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 error_functions.py:2710(_erfs)
        1    0.000    0.000    0.000    0.000 tensor.py:98(_IndexStructure)
       25    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 profiler.py:59(profile)
        6    0.000    0.000    0.000    0.000 _version.py:62(<listcomp>)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:145(__neg__)
        1    0.000    0.000    0.000    0.000 core.py:3750(__init__)
        1    0.000    0.000    0.000    0.000 _code_flow.py:16(CodeFlow)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:790(items)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1531(symbol)
        5    0.000    0.000    0.000    0.000 datetime.py:528(_check_time_fields)
        1    0.000    0.000    0.000    0.000 tokens.py:13(Token)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:185(IterativeSubproblem)
        1    0.000    0.000    0.000    0.000 _shgo.py:488(SHGO)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2461(_pdf_dispatch)
        1    0.000    0.000    0.000    0.000 maple.py:84(MapleCodePrinter)
        1    0.000    0.000    0.000    0.000 core.py:3039(Regex)
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 parser.py:102(Parser)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:5(CanonicalConstraint)
       14    0.000    0.000    0.000    0.000 pathlib.py:94(join_parsed_parts)
        1    0.000    0.000    0.000    0.000 font_manager.py:618(FontProperties)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1037(_resolve_name)
        1    0.000    0.000    0.000    0.000 _array_api.py:659(_XPSphinxCapability)
        1    0.000    0.000    0.000    0.000 __init__.py:37(FoldedCase)
        1    0.000    0.000    0.000    0.000 _bsr.py:24(_bsr_base)
        1    0.000    0.000    0.000    0.000 fontconfig_pattern.py:27(FontconfigPatternParser)
        1    0.000    0.000    0.000    0.000 _cobyqa_py.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _namedtensor_internals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pydoc.py:1159(TextDoc)
        7    0.000    0.000    0.000    0.000 rrule.py:70(__init__)
        1    0.000    0.000    0.000    0.000 collections.py:887(_CollectionWithSizes)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3125(_constants)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:14(GMPYIntegerRing)
        1    0.000    0.000    0.000    0.000 parse.py:143(_NetlocResultMixinBase)
       11    0.000    0.000    0.000    0.000 legend_handler.py:59(__init__)
        1    0.000    0.000    0.000    0.000 _special_locations.py:15(SpecialLocations)
        2    0.000    0.000    0.000    0.000 reprlib.py:12(decorating_function)
        1    0.000    0.000    0.000    0.000 comments.py:273(CommentedBase)
        1    0.000    0.000    0.000    0.000 numpy.py:34(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _configuration_override.py:16(ConfigurationOverride)
       70    0.000    0.000    0.000    0.000 _jit_internal.py:1091(__getitem__)
        1    0.000    0.000    0.000    0.000 profiler_util.py:352(FormattedTimesMixin)
        1    0.000    0.000    0.000    0.000 function.py:2101(Subs)
        1    0.000    0.000    0.000    0.000 core.py:80(__compat__)
        1    0.000    0.000    0.000    0.000 numbers.py:147(Real)
        1    0.000    0.000    0.000    0.000 ImagePalette.py:31(ImagePalette)
        1    0.000    0.000    0.000    0.000 collections.py:1684(EllipseCollection)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:172(<lambda>)
        1    0.000    0.000    0.000    0.000 numpy.py:9(<listcomp>)
        2    0.000    0.000    0.000    0.000 core.py:3613(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 _polyutils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rnn.py:334(LSTM)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1279(BPoly)
        1    0.000    0.000    0.000    0.000 _factories.py:56(__init__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2342(_median_icdf)
        1    0.000    0.000    0.000    0.000 cnf.py:270(CNF)
        1    0.000    0.000    0.000    0.000 transforms.py:41(Transform)
        1    0.000    0.000    0.000    0.000 _testutils.py:138(_TestPythranFunc)
        1    0.000    0.000    0.000    0.000 iterators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 units.py:277(FloatWithUnit)
        1    0.000    0.000    0.000    0.000 _digraph.py:5(DiGraph)
        6    0.000    0.000    0.000    0.000 utils.py:51(_has_surrogates)
       15    0.000    0.000    0.000    0.000 math2.py:27(_mathfun_real)
        1    0.000    0.000    0.000    0.000 plane.py:30(Plane)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:225(from_rep)
        1    0.000    0.000    0.000    0.000 compositedomain.py:9(CompositeDomain)
       20    0.000    0.000    0.000    0.000 {method 'isdisjoint' of 'set' objects}
        1    0.000    0.000    0.000    0.000 _multivariate.py:1897(wishart_gen)
       36    0.000    0.000    0.000    0.000 _pytree.py:56(_list_flatten)
        1    0.000    0.000    0.000    0.000 glob.py:31(iglob)
        1    0.000    0.000    0.000    0.000 series.py:2180(ImplicitSeries)
        1    0.000    0.000    0.000    0.000 domainscalar.py:17(DomainScalar)
        1    0.000    0.000    0.000    0.000 index_tricks.py:310(AxisConcatenator)
        1    0.000    0.000    0.000    0.000 bz2.py:26(BZ2File)
        1    0.000    0.000    0.000    0.000 modules.py:204(Module)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1407(<listcomp>)
        1    0.000    0.000    0.000    0.000 numpy.py:503(<dictcomp>)
        1    0.000    0.000    0.000    0.000 integers.py:496(frac)
        1    0.000    0.000    0.000    0.000 transforms.py:1098(StackTransform)
       10    0.000    0.000    0.000    0.000 quadrature.py:21(__init__)
       10    0.000    0.000    0.000    0.000 rcsetup.py:765(_validate_greaterequal0_lessthan1)
        1    0.000    0.000    0.000    0.000 polygon.py:2053(Triangle)
        1    0.000    0.000    0.000    0.000 conv.py:617(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 transforms.py:1080(LockableBbox)
       24    0.000    0.000    0.000    0.000 sympify.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 _ltisys.py:299(dlti)
        1    0.000    0.000    0.000    0.000 error_functions.py:1502(li)
        1    0.000    0.000    0.000    0.000 _binary.py:1(<module>)
        1    0.000    0.000    0.000    0.000 representer.py:52(BaseRepresenter)
        1    0.000    0.000    0.000    0.000 _chandrupatla.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adadelta.py:12(Adadelta)
        1    0.000    0.000    0.000    0.000 transforms.py:2266(CompositeGenericTransform)
        1    0.000    0.000    0.000    0.000 _resampling.py:2175(PermutationMethod)
        1    0.000    0.000    0.000    0.000 sparse.py:21(SparseRepMatrix)
        1    0.000    0.000    0.000    0.000 _dia.py:20(_dia_base)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:90(KroneckerDelta)
        1    0.000    0.000    0.000    0.000 comments.py:467(CommentedSeq)
        1    0.000    0.000    0.000    0.000 main.py:56(TestProgram)
       21    0.000    0.000    0.000    0.000 _script.py:940(_make_fail)
       32    0.000    0.000    0.000    0.000 decorators.py:210(__init__)
       11    0.000    0.000    0.000    0.000 results.py:272(__iter__)
        5    0.000    0.000    0.000    0.000 __init__.py:20(is_available)
        3    0.000    0.000    0.000    0.000 bz2.py:135(readable)
        1    0.000    0.000    0.000    0.000 _netcdf.py:811(netcdf_variable)
        1    0.000    0.000    0.000    0.000 prufer.py:11(Prufer)
        1    0.000    0.000    0.000    0.000 connection.py:114(_ConnectionBase)
        5    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        5    0.000    0.000    0.000    0.000 ctx_base.py:458(memoize)
        1    0.000    0.000    0.000    0.000 filters.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _bunch.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _policybase.py:104(<genexpr>)
        2    0.000    0.000    0.000    0.000 _aliases.py:116(astype)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3161(rv_discrete)
        1    0.000    0.000    0.000    0.000 selectors.py:80(BaseSelector)
        1    0.000    0.000    0.000    0.000 quasirandom.py:5(SobolEngine)
        1    0.000    0.000    0.000    0.000 _ops.py:597(__init__)
        1    0.000    0.000    0.000    0.000 _csc.py:17(_csc_base)
        1    0.000    0.000    0.000    0.000 backend_bases.py:733(GraphicsContextBase)
        1    0.000    0.000    0.000    0.000 core.py:6540(MaskedConstant)
       31    0.000    0.000    0.000    0.000 singleton.py:192(<lambda>)
       23    0.000    0.000    0.000    0.000 _support_alternative_backends.py:35(name)
        8    0.000    0.000    0.000    0.000 relativedelta.py:13(<genexpr>)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:46(LayoutBox)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1879(validation_policy)
        1    0.000    0.000    0.000    0.000 __init__.py:273(<dictcomp>)
        4    0.000    0.000    0.000    0.000 serialization.py:90(register_package)
        1    0.000    0.000    0.000    0.000 sets.py:1947(FiniteSet)
        1    0.000    0.000    0.000    0.000 bandstructure.py:38(Kpoint)
        1    0.000    0.000    0.000    0.000 textplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _kde.py:36(gaussian_kde)
        1    0.000    0.000    0.000    0.000 tensor.py:1695(TensorHead)
        8    0.000    0.000    0.000    0.000 __init__.py:463(_asdict)
        1    0.000    0.000    0.000    0.000 _text_layout.py:1(<module>)
        2    0.000    0.000    0.000    0.000 gzip.py:463(_init_read)
        1    0.000    0.000    0.000    0.000 context.py:270(raises)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:176(<lambda>)
        1    0.000    0.000    0.000    0.000 linear.py:12(Linear)
        1    0.000    0.000    0.000    0.000 gammazeta.py:394(bernoulli_size)
        5    0.000    0.000    0.000    0.000 _new_distributions.py:339(_moment_raw_formula)
        5    0.000    0.000    0.000    0.000 typing.py:2191(runtime_checkable)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:117(<listcomp>)
        1    0.000    0.000    0.000    0.000 jscode.py:46(JavascriptCodePrinter)
        1    0.000    0.000    0.000    0.000 formatting.py:112(<dictcomp>)
        1    0.000    0.000    0.000    0.000 tensor.py:1392(TensorSymmetry)
        2    0.000    0.000    0.000    0.000 typing.py:3089(__init__)
        1    0.000    0.000    0.000    0.000 _inspect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1067(StreamHandler)
        1    0.000    0.000    0.000    0.000 ast.py:65(_raise_malformed_node)
        9    0.000    0.000    0.000    0.000 timeutils.py:54(decorator)
        1    0.000    0.000    0.000    0.000 proxy.py:455(Attribute)
        1    0.000    0.000    0.000    0.000 products.py:17(Product)
        3    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 _resampling.py:2261(BootstrapMethod)
        4    0.000    0.000    0.000    0.000 libmpf.py:1313(from_str)
        1    0.000    0.000    0.000    0.000 _multivariate.py:295(multivariate_normal_gen)
       17    0.000    0.000    0.000    0.000 ctx_fp.py:28(<lambda>)
        1    0.000    0.000    0.000    0.000 tensor.py:815(_comm_init)
        1    0.000    0.000    0.000    0.000 csv.py:80(DictReader)
       24    0.000    0.000    0.000    0.000 expr.py:2053(as_base_exp)
        2    0.000    0.000    0.000    0.000 results.py:462(<listcomp>)
       15    0.000    0.000    0.000    0.000 libelefun.py:106(def_mpf_constant)
        1    0.000    0.000    0.000    0.000 exceptions.py:11(SymPyDeprecationWarning)
       32    0.000    0.000    0.000    0.000 expr.py:185(_hashable_content)
        3    0.000    0.000    0.000    0.000 legend_handler.py:212(__init__)
        1    0.000    0.000    0.000    0.000 context.py:99(compose_two)
        1    0.000    0.000    0.000    0.000 report.py:3(ReportBase)
        1    0.000    0.000    0.000    0.000 wannier90.py:24(Unk)
        1    0.000    0.000    0.000    0.000 subprocess.py:126(CalledProcessError)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:73(UnivariateSpline)
        1    0.000    0.000    0.000    0.000 fractionfield.py:9(FractionField)
        1    0.000    0.000    0.000    0.000 request.py:1694(URLopener)
        1    0.000    0.000    0.000    0.000 conv_fused.py:25(_ConvBnNd)
        1    0.000    0.000    0.000    0.000 functions.py:3(SpecialFunctions)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:12(SpectralNorm)
        6    0.000    0.000    0.000    0.000 six.py:131(__init__)
        1    0.000    0.000    0.000    0.000 std.py:67(TRLock)
        1    0.000    0.000    0.000    0.000 mathml.py:84(MathMLContentPrinter)
        2    0.000    0.000    0.000    0.000 sysconfig.py:311(get_default_scheme)
        1    0.000    0.000    0.000    0.000 pycode.py:87(<listcomp>)
        8    0.000    0.000    0.000    0.000 core.py:5113(stopOn)
        1    0.000    0.000    0.000    0.000 __init__.py:236(SymInt)
        5    0.000    0.000    0.000    0.000 _basic.py:3031(<listcomp>)
        1    0.000    0.000    0.000    0.000 _log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _builtins.py:120(<setcomp>)
        1    0.000    0.000    0.000    0.000 types.py:39(Storage)
        1    0.000    0.000    0.000    0.000 tz.py:386(tzfile)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4981(invgauss_gen)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.set_typeDict}
        4    0.000    0.000    0.000    0.000 __init__.py:798(__init__)
        1    0.000    0.000    0.000    0.000 summations.py:42(Sum)
        1    0.000    0.000    0.000    0.000 constructor.py:348(SafeConstructor)
        3    0.000    0.000    0.000    0.000 message.py:330(set_payload)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1836(NdPPoly)
        1    0.000    0.000    0.000    0.000 axis.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 ordinals.py:273(__new__)
       15    0.000    0.000    0.000    0.000 arrayprint.py:993(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:165(<listcomp>)
        1    0.000    0.000    0.000    0.000 adaptive.py:19(AdaptiveLogSoftmaxWithLoss)
        6    0.000    0.000    0.000    0.000 _exceptions.py:17(_display_as_base)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:12(GMPYRationalField)
        1    0.000    0.000    0.000    0.000 transforms.py:1613(TransformWrapper)
        1    0.000    0.000    0.000    0.000 polygon.py:1420(RegularPolygon)
        1    0.000    0.000    0.000    0.000 _ltisys.py:879(ZerosPolesGain)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:22(PolyQuintic)
        1    0.000    0.000    0.000    0.000 complexes.py:265(sign)
        1    0.000    0.000    0.000    0.000 unix_events.py:57(_UnixSelectorEventLoop)
        1    0.000    0.000    0.000    0.000 pathlib.py:971(absolute)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:996(ReciprocalHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1881(ComplexInterval)
        1    0.000    0.000    0.000    0.000 ticker.py:468(ScalarFormatter)
        1    0.000    0.000    0.000    0.000 patches.py:1824(_simpleprint_styles)
        2    0.000    0.000    0.000    0.000 _functools.py:6(method_cache)
        1    0.000    0.000    0.000    0.000 {built-in method math.log2}
        4    0.000    0.000    0.000    0.000 core.py:5236(_generateDefaultName)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:712(__eq__)
        1    0.000    0.000    0.000    0.000 _netcdf.py:98(netcdf_file)
        2    0.000    0.000    0.000    0.000 _helpers.py:305(_compat_module_name)
        1    0.000    0.000    0.000    0.000 sysconfig.py:456(_get_sysconfigdata_name)
       24    0.000    0.000    0.000    0.000 dviread.py:135(_dispatch)
        1    0.000    0.000    0.000    0.000 tz.py:1545(__init__)
        1    0.000    0.000    0.000    0.000 _base.py:325(Future)
        1    0.000    0.000    0.000    0.000 feedparser.py:136(FeedParser)
        1    0.000    0.000    0.000    0.000 upsampling.py:168(UpsamplingNearest2d)
        1    0.000    0.000    0.000    0.000 mstats_extras.py:1(<module>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:179(OffsetBox)
        1    0.000    0.000    0.000    0.000 observer.py:383(MinMaxObserver)
       11    0.000    0.000    0.000    0.000 ctx_iv.py:293(__new__)
        1    0.000    0.000    0.000    0.000 pycode.py:707(<listcomp>)
       13    0.000    0.000    0.000    0.000 utils.py:34(exposed_in)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
        1    0.000    0.000    0.000    0.000 __init__.py:855(_CudaLegacyStorage)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1572(ReciprocalTrigonometricFunction)
        1    0.000    0.000    0.000    0.000 modularinteger.py:15(ModularInteger)
        1    0.000    0.000    0.000    0.000 _imp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:18(Option)
        1    0.000    0.000    0.000    0.000 outputs.py:5666(Waveder)
        1    0.000    0.000    0.000    0.000 abc.py:177(InspectLoader)
        1    0.000    0.000    0.000    0.000 activation.py:175(Hardtanh)
        1    0.000    0.000    0.000    0.000 <frozen genericpath>:39(isdir)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:61(_ResourceSharer)
        1    0.000    0.000    0.000    0.000 interval_arithmetic.py:42(interval)
        1    0.000    0.000    0.000    0.000 modules.py:698(PowerBasis)
        1    0.000    0.000    0.000    0.000 sdm.py:186(new)
        1    0.000    0.000    0.000    0.000 tempfile.py:840(TemporaryDirectory)
       16    0.000    0.000    0.000    0.000 _pep440.py:301(<genexpr>)
        6    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
       20    0.000    0.000    0.000    0.000 core.py:3915(recurse)
        1    0.000    0.000    0.000    0.000 add_newdocs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:480(<dictcomp>)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:100(split)
        1    0.000    0.000    0.000    0.000 loader.py:66(TestLoader)
        1    0.000    0.000    0.000    0.000 pooling.py:564(AvgPool2d)
        1    0.000    0.000    0.000    0.000 six.py:236(create_module)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:8(OneHotCategorical)
        1    0.000    0.000    0.000    0.000 indexed.py:362(IndexedBase)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:38(ivmpf)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:337(_ExpmPadeHelper)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1612(<dictcomp>)
       21    0.000    0.000    0.000    0.000 _codata.py:2121(_check_obsolete)
        1    0.000    0.000    0.000    0.000 ideals.py:7(Ideal)
        1    0.000    0.000    0.000    0.000 fancysets.py:291(ImageSet)
        1    0.000    0.000    0.000    0.000 computed_entries.py:47(EnergyAdjustment)
        2    0.000    0.000    0.000    0.000 densebasic.py:333(_rec_strip)
        1    0.000    0.000    0.000    0.000 _infra.py:309(DiagnosticOptions)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12328(rel_breitwigner_gen)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:11(GenzMalikCubature)
       12    0.000    0.000    0.000    0.000 domain.py:470(of_type)
        5    0.000    0.000    0.000    0.000 datapipe.py:265(register_datapipe_as_function)
        2    0.000    0.000    0.000    0.000 __init__.py:1646(addHandler)
        1    0.000    0.000    0.000    0.000 base_events.py:274(Server)
        1    0.000    0.000    0.000    0.000 group_constructs.py:1(<module>)
        5    0.000    0.000    0.000    0.000 decorator.py:152(<listcomp>)
        1    0.000    0.000    0.000    0.000 Orbit_spd_with_spin.py:19(orbit_spd_with_spin)
       11    0.000    0.000    0.000    0.000 optimizer.py:28(_use_grad_for_differentiable)
        1    0.000    0.000    0.000    0.000 error.py:35(HTTPError)
        6    0.000    0.000    0.000    0.000 __init__.py:784(__new__)
        1    0.000    0.000    0.000    0.000 _helpers.py:487(_AutoJITWrapper)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1364(<listcomp>)
        3    0.000    0.000    0.000    0.000 rcsetup.py:459(_validate_mathtext_fallback)
        1    0.000    0.000    0.000    0.000 __init__.py:999(ShortStorage)
        1    0.000    0.000    0.000    0.000 fancysets.py:519(Range)
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:808(<dictcomp>)
        1    0.000    0.000    0.000    0.000 pg_operation.py:10(PointGroupOp)
        1    0.000    0.000    0.000    0.000 complexes.py:446(Abs)
        1    0.000    0.000    0.000    0.000 pydoc.py:525(__init__)
        3    0.000    0.000    0.000    0.000 _header_value_parser.py:876(__new__)
        1    0.000    0.000    0.000    0.000 context.py:206(ExceptionTrap)
        1    0.000    0.000    0.000    0.000 profiler_util.py:385(FunctionEvent)
        2    0.000    0.000    0.000    0.000 {method 'difference_update' of 'set' objects}
        1    0.000    0.000    0.000    0.000 factor_.py:700(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11322(wrapcauchy_gen)
        1    0.000    0.000    0.000    0.000 _trace.py:1202(TopLevelTracedModule)
        1    0.000    0.000    0.000    0.000 _policybase.py:112(Policy)
        1    0.000    0.000    0.000    0.000 rk.py:407(DOP853)
       14    0.000    0.000    0.000    0.000 mock.py:1936(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:909(LongStorage)
        1    0.000    0.000    0.000    0.000 special_matrices.py:1(<module>)
       23    0.000    0.000    0.000    0.000 overrides.py:173(array_function_from_dispatcher)
        1    0.000    0.000    0.000    0.000 logic.py:221(Logic)
        1    0.000    0.000    0.000    0.000 {built-in method posix.confstr}
        1    0.000    0.000    0.000    0.000 widgets.py:1893(RectangleSelector)
        1    0.000    0.000    0.000    0.000 rnn.py:163(_LSTMLayer)
        1    0.000    0.000    0.000    0.000 fields.py:103(FracField)
        3    0.000    0.000    0.000    0.000 mock.py:298(__getattr__)
        1    0.000    0.000    0.000    0.000 __init__.py:1039(ComplexDoubleStorage)
        3    0.000    0.000    0.000    0.000 __init__.py:42(__init__)
        1    0.000    0.000    0.000    0.000 wavelets.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _parser.py:286(seek)
        1    0.000    0.000    0.000    0.000 named_groups.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cauchy.py:12(Cauchy)
       22    0.000    0.000    0.000    0.000 reductions.py:123(_torch_grad_reduce)
        1    0.000    0.000    0.000    0.000 function.py:1941(Lambda)
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:841(<genexpr>)
        1    0.000    0.000    0.000    0.000 series.py:989(Line2DBaseSeries)
        1    0.000    0.000    0.000    0.000 numbers.py:2771(Zero)
        1    0.000    0.000    0.000    0.000 dataframes.py:60(Capture)
        1    0.000    0.000    0.000    0.000 core.py:726(Variable)
       41    0.000    0.000    0.000    0.000 numbers.py:438(class_key)
        1    0.000    0.000    0.000    0.000 bessel.py:438(besseli)
        1    0.000    0.000    0.000    0.000 _ni_support.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis3d.py:470(XAxis)
        1    0.000    0.000    0.000    0.000 band.py:17(__init__)
        1    0.000    0.000    0.000    0.000 version.py:280(LooseVersion)
        1    0.000    0.000    0.000    0.000 rrule.py:1418(_rrulestr)
        3    0.000    0.000    0.000    0.000 __init__.py:590(_discover_resolvers)
        1    0.000    0.000    0.000    0.000 sets.py:1496(Intersection)
        1    0.000    0.000    0.000    0.000 _globals.py:17(_InternalGlobals)
        1    0.000    0.000    0.000    0.000 bonds.py:58(CovalentBond)
        1    0.000    0.000    0.000    0.000 structure.py:83(Neighbor)
       26    0.000    0.000    0.000    0.000 core.py:4415(<genexpr>)
        1    0.000    0.000    0.000    0.000 case.py:243(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 random.py:235(_randbelow_with_getrandbits)
        1    0.000    0.000    0.000    0.000 linear_relu.py:12(LinearReLU)
        1    0.000    0.000    0.000    0.000 repmatrix.py:555(MutableRepMatrix)
        1    0.000    0.000    0.000    0.000 conv.py:232(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 zipfile.py:344(ZipInfo)
        1    0.000    0.000    0.000    0.000 num.py:1(<module>)
        1    0.000    0.000    0.000    0.000 idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 functional_modules.py:9(FloatFunctional)
        1    0.000    0.000    0.000    0.000 core.py:51(InputFile)
        1    0.000    0.000    0.000    0.000 __init__.py:283(SymFloat)
        1    0.000    0.000    0.000    0.000 conv.py:856(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:157(QConfigMapping)
        1    0.000    0.000    0.000    0.000 nadam.py:10(NAdam)
        1    0.000    0.000    0.000    0.000 polar.py:17(PolarTransform)
        1    0.000    0.000    0.000    0.000 common.py:32(VolumetricData)
        1    0.000    0.000    0.000    0.000 containers.py:219(Dict)
        1    0.000    0.000    0.000    0.000 biasedurn.py:1(<module>)
       12    0.000    0.000    0.000    0.000 rcsetup.py:424(validate_fontweight)
        1    0.000    0.000    0.000    0.000 __init__.py:37(cuFFTPlanCache)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:75(NumExprPrinter)
        1    0.000    0.000    0.000    0.000 observer.py:124(ObserverBase)
        1    0.000    0.000    0.000    0.000 integrals.py:35(Integral)
        1    0.000    0.000    0.000    0.000 __init__.py:637(RcParams)
        1    0.000    0.000    0.000    0.000 _censored_data.py:60(CensoredData)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:9(Directory)
        5    0.000    0.000    0.000    0.000 _compression.py:12(_check_not_closed)
        1    0.000    0.000    0.000    0.000 sgd.py:10(SGD)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:588(transpose)
        1    0.000    0.000    0.000    0.000 _ccallback.py:26(LowLevelCallable)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._using_numpy2_behavior}
       35    0.000    0.000    0.000    0.000 core.py:1967(recurse)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:18(profile)
        1    0.000    0.000    0.000    0.000 transforms.py:1702(__init__)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1761(<genexpr>)
        1    0.000    0.000    0.000    0.000 zipfile.py:2290(Path)
        1    0.000    0.000    0.000    0.000 quiver.py:904(Barbs)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2301(_entropy_dispatch)
        1    0.000    0.000    0.000    0.000 poisson.py:10(Poisson)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:151(<listcomp>)
        1    0.000    0.000    0.000    0.000 rmsprop.py:11(RMSprop)
        1    0.000    0.000    0.000    0.000 outputs.py:4448(Oszicar)
        4    0.000    0.000    0.000    0.000 mixins.py:51(_unary_method)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:54(_get_platform_and_machine)
       17    0.000    0.000    0.000    0.000 __init__.py:190(change_key)
        1    0.000    0.000    0.000    0.000 Image.py:3915(Exif)
        3    0.000    0.000    0.000    0.000 six.py:85(_import_module)
        1    0.000    0.000    0.000    0.000 _covariance.py:463(CovViaPrecision)
        1    0.000    0.000    0.000    0.000 dfm.py:18(DFM_dummy)
        1    0.000    0.000    0.000    0.000 contour.py:48(ContourLabeler)
        1    0.000    0.000    0.000    0.000 _nonlin.py:615(LowRankMatrix)
        1    0.000    0.000    0.000    0.000 request.py:2139(FancyURLopener)
        1    0.000    0.000    0.000    0.000 factorials.py:36(factorial)
        1    0.000    0.000    0.000    0.000 _kdtree.py:287(node)
        1    0.000    0.000    0.000    0.000 laplace.py:9(Laplace)
        1    0.000    0.000    0.000    0.000 ElementTree.py:125(Element)
        1    0.000    0.000    0.000    0.000 data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gridspec.py:26(GridSpecBase)
        1    0.000    0.000    0.000    0.000 proj3d.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fglmtools.py:1(<module>)
        2    0.000    0.000    0.000    0.000 matfuncs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1792(__init__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2498(_pmf_dispatch)
        1    0.000    0.000    0.000    0.000 _lambertw.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gzip.py:121(GzipFile)
        4    0.000    0.000    0.000    0.000 {method '__exit__' of 'numpy.nditer' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:282(Throttler)
        2    0.000    0.000    0.000    0.000 {built-in method posix.unsetenv}
        1    0.000    0.000    0.000    0.000 numpy.py:348(SciPyPrinter)
        1    0.000    0.000    0.000    0.000 _ltisys.py:46(LinearTimeInvariant)
        1    0.000    0.000    0.000    0.000 adamw.py:12(AdamW)
        1    0.000    0.000    0.000    0.000 discovery.py:185(ModuleFinder)
        2    0.000    0.000    0.000    0.000 Files_in.py:4(__init__)
        1    0.000    0.000    0.000    0.000 constructor.py:664(Constructor)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        1    0.000    0.000    0.000    0.000 base_subprocess.py:10(BaseSubprocessTransport)
        1    0.000    0.000    0.000    0.000 outputs.py:4596(Xdatcar)
        1    0.000    0.000    0.000    0.000 _aliases.py:536(floor)
       25    0.000    0.000    0.000    0.000 symbolic_helper.py:664(_block_list_in_opset)
        1    0.000    0.000    0.000    0.000 studentT.py:11(StudentT)
        1    0.000    0.000    0.000    0.000 fields.py:292(FracElement)
        1    0.000    0.000    0.000    0.000 coord.py:362(Simplex)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2877(__init__)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:11(EmbeddingPackedParams)
        2    0.000    0.000    0.000    0.000 six.py:119(_resolve)
        1    0.000    0.000    0.000    0.000 typing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:873(Handler)
        1    0.000    0.000    0.000    0.000 abc.py:131(TraversableResources)
        1    0.000    0.000    0.000    0.000 annotations.py:41(EvalEnv)
       15    0.000    0.000    0.000    0.000 serialization.py:59(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:33(Entry)
        1    0.000    0.000    0.000    0.000 axis.py:553(Ticker)
        1    0.000    0.000    0.000    0.000 _mannwhitneyu.py:21(_MWU)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1599(<listcomp>)
        1    0.000    0.000    0.000    0.000 byteordercodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:236(__init__)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1105(EvaluateFalseTransformer)
        1    0.000    0.000    0.000    0.000 streams.py:140(Event)
        1    0.000    0.000    0.000    0.000 series.py:1978(ParametricSurfaceSeries)
        1    0.000    0.000    0.000    0.000 _ops.py:238(OpOverload)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1060(digamma)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:123(<listcomp>)
        1    0.000    0.000    0.000    0.000 creation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 exprtools.py:288(Factors)
        1    0.000    0.000    0.000    0.000 __init__.py:1059(QUInt8Storage)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:6(DisjointSet)
        1    0.000    0.000    0.000    0.000 argparse.py:1708(ArgumentParser)
        1    0.000    0.000    0.000    0.000 __init__.py:889(FloatStorage)
        1    0.000    0.000    0.000    0.000 rnn.py:261(LSTM)
       20    0.000    0.000    0.000    0.000 inverselaplace.py:17(__init__)
        1    0.000    0.000    0.000    0.000 spawn.py:39(ProcessExitedException)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:747(_copy_to_script_wrapper)
        1    0.000    0.000    0.000    0.000 weight_norm.py:11(WeightNorm)
        2    0.000    0.000    0.000    0.000 reprlib.py:9(recursive_repr)
        1    0.000    0.000    0.000    0.000 hyper.py:1087(HyperRep_cosasin)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:19(ArgsKwargsPair)
        1    0.000    0.000    0.000    0.000 __init__.py:83(OptEinsumModule)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:12(add_docstr_all)
        1    0.000    0.000    0.000    0.000 pooling.py:643(AvgPool3d)
       12    0.000    0.000    0.000    0.000 {method 'islower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _datasource.py:196(DataSource)
        1    0.000    0.000    0.000    0.000 ticker.py:1413(EngFormatter)
        1    0.000    0.000    0.000    0.000 linear_fused.py:13(LinearBn1d)
        1    0.000    0.000    0.000    0.000 curve.py:22(Curve)
        1    0.000    0.000    0.000    0.000 functional_modules.py:129(QFunctional)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10191(truncnorm_gen)
        1    0.000    0.000    0.000    0.000 para4tb.py:12(ParaTB)
       16    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
        4    0.000    0.000    0.000    0.000 assumptions.py:484(generator)
        1    0.000    0.000    0.000    0.000 series.py:1496(ParametricLineBaseSeries)
        8    0.000    0.000    0.000    0.000 {method 'removeprefix' of 'str' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:71(MkldnnModule)
        1    0.000    0.000    0.000    0.000 functions.py:11(TensorProduct)
        1    0.000    0.000    0.000    0.000 composer.py:31(Composer)
        6    0.000    0.000    0.000    0.000 signal.py:49(decorator)
        1    0.000    0.000    0.000    0.000 quopri.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1432(Logger)
        1    0.000    0.000    0.000    0.000 _aliases.py:24(arange)
        1    0.000    0.000    0.000    0.000 numbers.py:59(carmichael)
        2    0.000    0.000    0.000    0.000 constraints.py:126(__call__)
        1    0.000    0.000    0.000    0.000 subprocess.py:469(CompletedProcess)
        1    0.000    0.000    0.000    0.000 six.py:498(Module_six_moves_urllib)
        1    0.000    0.000    0.000    0.000 assume.py:358(UndefinedPredicate)
        1    0.000    0.000    0.000    0.000 animation.py:895(Animation)
        1    0.000    0.000    0.000    0.000 core.py:191(<listcomp>)
        2    0.000    0.000    0.000    0.000 deprecation.py:184(_deprecate_positional_args)
        1    0.000    0.000    0.000    0.000 backend_tools.py:40(ToolBase)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:11(ExpRelaxedCategorical)
        1    0.000    0.000    0.000    0.000 colors.py:1238(SymLogNorm)
        2    0.000    0.000    0.000    0.000 polyclasses.py:155(new)
        1    0.000    0.000    0.000    0.000 sets.py:1319(Union)
        1    0.000    0.000    0.000    0.000 _utils.py:93(BasicEvaluation)
        1    0.000    0.000    0.000    0.000 trsock.py:4(TransportSocket)
        1    0.000    0.000    0.000    0.000 util.py:15(__config_flags)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:560(BlockDiagMatrix)
        1    0.000    0.000    0.000    0.000 error_functions.py:1092(Ei)
        1    0.000    0.000    0.000    0.000 join.py:43(Joinable)
        1    0.000    0.000    0.000    0.000 extract.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:897(_resolve_filename)
        1    0.000    0.000    0.000    0.000 _data.py:168(_minmax_mixin)
        1    0.000    0.000    0.000    0.000 __init__.py:969(HalfStorage)
        1    0.000    0.000    0.000    0.000 reduction.py:33(ForkingPickler)
        1    0.000    0.000    0.000    0.000 linear.py:11(Linear)
        1    0.000    0.000    0.000    0.000 conv.py:277(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:172(_ConfigExpander)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:379(DataFlowEdge)
        1    0.000    0.000    0.000    0.000 constructor.py:932(RoundTripConstructor)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:11(FisherSnedecor)
        1    0.000    0.000    0.000    0.000 rnn.py:135(_LSTMSingleLayer)
        1    0.000    0.000    0.000    0.000 _infra.py:55(Rule)
        1    0.000    0.000    0.000    0.000 connection.py:431(Listener)
        5    0.000    0.000    0.000    0.000 sets.py:2010(__iter__)
        1    0.000    0.000    0.000    0.000 numbers.py:3602(Exp1)
        1    0.000    0.000    0.000    0.000 locks.py:446(Barrier)
        1    0.000    0.000    0.000    0.000 permutations.py:244(Cycle)
        1    0.000    0.000    0.000    0.000 storage.py:981(_LegacyStorage)
        1    0.000    0.000    0.000    0.000 modules.py:44(Module)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:190(_Domain)
        1    0.000    0.000    0.000    0.000 special.py:213(OneMatrix)
        1    0.000    0.000    0.000    0.000 __init__.py:949(DoubleStorage)
        1    0.000    0.000    0.000    0.000 traceback.py:636(TracebackException)
        1    0.000    0.000    0.000    0.000 dop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 miobase.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _util.py:13(DeferredError)
        2    0.000    0.000    0.000    0.000 _aliases.py:51(empty_like)
        1    0.000    0.000    0.000    0.000 rk.py:74(RungeKutta)
        1    0.000    0.000    0.000    0.000 log_normal.py:8(LogNormal)
        1    0.000    0.000    0.000    0.000 transforms.py:1827(Affine2D)
        1    0.000    0.000    0.000    0.000 _base.py:174(_process_plot_var_args)
        1    0.000    0.000    0.000    0.000 overrides.py:1786(TorchFunctionMode)
        1    0.000    0.000    0.000    0.000 rnn.py:1159(LSTMCell)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._tracer_warn_use_python}
        1    0.000    0.000    0.000    0.000 _infra.py:266(RuleCollection)
        2    0.000    0.000    0.000    0.000 reprlib.py:38(__init__)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:282(nbinom_gen)
        1    0.000    0.000    0.000    0.000 numbers.py:4083(ImaginaryUnit)
        1    0.000    0.000    0.000    0.000 rational.py:24(mpq)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:30(binom_gen)
        1    0.000    0.000    0.000    0.000 _interpolate.py:816(PPoly)
        1    0.000    0.000    0.000    0.000 typing.py:1258(__mro_entries__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1007(AnchoredOffsetbox)
        1    0.000    0.000    0.000    0.000 series.py:1861(SurfaceOver2DRangeSeries)
        1    0.000    0.000    0.000    0.000 pathlib.py:128(<setcomp>)
        1    0.000    0.000    0.000    0.000 utilities.py:8(__init__)
        1    0.000    0.000    0.000    0.000 _common.py:267(tzrangebase)
        1    0.000    0.000    0.000    0.000 depends.py:20(Require)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3460(_Backend)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:362(__subclasshook__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1824(dpareto_lognorm_gen)
        5    0.000    0.000    0.000    0.000 rszeta.py:54(__init__)
       21    0.000    0.000    0.000    0.000 multiarray.py:153(concatenate)
        1    0.000    0.000    0.000    0.000 __init__.py:545(Stack)
        3    0.000    0.000    0.000    0.000 __init__.py:753(path)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:290(FusedMovingAvgObsFakeQuantize)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:576(unused)
        1    0.000    0.000    0.000    0.000 __init__.py:918(PathDistribution)
        8    0.000    0.000    0.000    0.000 version.py:207(<genexpr>)
        1    0.000    0.000    0.000    0.000 representer.py:492(RoundTripRepresenter)
        1    0.000    0.000    0.000    0.000 units.py:494(ArrayWithUnit)
        1    0.000    0.000    0.000    0.000 bandstructure.py:157(BandStructure)
        1    0.000    0.000    0.000    0.000 glob_group.py:7(GlobGroup)
       22    0.000    0.000    0.000    0.000 symbol.py:799(<genexpr>)
        1    0.000    0.000    0.000    0.000 hadamard.py:313(HadamardPower)
        1    0.000    0.000    0.000    0.000 dos.py:37(DOS)
        1    0.000    0.000    0.000    0.000 ideals.py:282(ModuleImplementedIdeal)
        1    0.000    0.000    0.000    0.000 matplotlib.py:43(MatplotlibBackend)
        1    0.000    0.000    0.000    0.000 _ndbspline.py:26(NdBSpline)
        1    0.000    0.000    0.000    0.000 decorator.py:65(FunctionMaker)
       39    0.000    0.000    0.000    0.000 {built-in method _ctypes.sizeof}
        2    0.000    0.000    0.000    0.000 _adapters.py:12(__init__)
        9    0.000    0.000    0.000    0.000 _util.py:949(_rename_parameter)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:15(Ynm)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8080(nct_gen)
        1    0.000    0.000    0.000    0.000 batchnorm.py:552(SyncBatchNorm)
        1    0.000    0.000    0.000    0.000 boolalg.py:741(Or)
        1    0.000    0.000    0.000    0.000 internal.py:41(__init__)
        1    0.000    0.000    0.000    0.000 conv_relu.py:119(ConvReLU3d)
       51    0.000    0.000    0.000    0.000 iterables.py:861(key)
        7    0.000    0.000    0.000    0.000 __init__.py:101(CFunctionType)
        1    0.000    0.000    0.000    0.000 __init__.py:439(LibraryLoader)
        4    0.000    0.000    0.000    0.000 core.py:3536(parseImpl)
        1    0.000    0.000    0.000    0.000 __init__.py:104(CallbackRegistry)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:441(_setdef)
        3    0.000    0.000    0.000    0.000 __init__.py:370(_FuncPtr)
        1    0.000    0.000    0.000    0.000 _aliases.py:665(finfo)
        1    0.000    0.000    0.000    0.000 extensions.py:219(MonogenicFiniteExtension)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:36(IntFormat)
        1    0.000    0.000    0.000    0.000 matrix_element.py:5(Matrix_Ele)
        1    0.000    0.000    0.000    0.000 loss.py:104(NLLLoss)
        1    0.000    0.000    0.000    0.000 Image.py:3765(register_extensions)
        1    0.000    0.000    0.000    0.000 legend_handler.py:436(__init__)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:21(Expression)
        1    0.000    0.000    0.000    0.000 sampler.py:82(RandomSampler)
        1    0.000    0.000    0.000    0.000 numbers.py:1204(catalan)
       18    0.000    0.000    0.000    0.000 multiarray.py:1080(copyto)
        1    0.000    0.000    0.000    0.000 tz.py:201(tzlocal)
       13    0.000    0.000    0.000    0.000 _deprecation.py:8(deprecated)
        1    0.000    0.000    0.000    0.000 log.py:41(Log)
        1    0.000    0.000    0.000    0.000 worker.py:64(WorkerInfo)
        1    0.000    0.000    0.000    0.000 delta_functions.py:393(Heaviside)
        1    0.000    0.000    0.000    0.000 primes.py:41(PrimeIdeal)
        1    0.000    0.000    0.000    0.000 function_base.py:2117(vectorize)
        1    0.000    0.000    0.000    0.000 adamax.py:12(Adamax)
        1    0.000    0.000    0.000    0.000 core.py:109(InputSet)
        1    0.000    0.000    0.000    0.000 rnn.py:1000(LSTMCell)
        1    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
        1    0.000    0.000    0.000    0.000 indexed.py:124(Indexed)
        1    0.000    0.000    0.000    0.000 _common.py:127(_TZifHeader)
        1    0.000    0.000    0.000    0.000 extensions.py:11(ExtensionElement)
        1    0.000    0.000    0.000    0.000 collections.py:1464(EventCollection)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:8(Embedding)
        1    0.000    0.000    0.000    0.000 _index.py:25(IndexMixin)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:236(<lambda>)
        1    0.000    0.000    0.000    0.000 _iotools.py:229(NameValidator)
        1    0.000    0.000    0.000    0.000 bessel.py:607(besselk)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2578(invwishart_gen)
        1    0.000    0.000    0.000    0.000 upsampling.py:213(UpsamplingBilinear2d)
       10    0.000    0.000    0.000    0.000 _pytesttester.py:76(__init__)
        1    0.000    0.000    0.000    0.000 adagrad.py:12(Adagrad)
        1    0.000    0.000    0.000    0.000 minpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gumbel.py:12(Gumbel)
        1    0.000    0.000    0.000    0.000 connection.py:347(Connection)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3265(_round_dispatcher)
        1    0.000    0.000    0.000    0.000 free_groups.py:114(FreeGroup)
        1    0.000    0.000    0.000    0.000 transforms.py:1203(Transform)
        4    0.000    0.000    0.000    0.000 libmpf.py:574(mpf_cmp)
        1    0.000    0.000    0.000    0.000 lambdify.py:1123(_EvaluatorPrinter)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2861(truncweibull_min_gen)
        1    0.000    0.000    0.000    0.000 operator_support.py:27(OperatorSupportBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10074(truncexpon_gen)
       20    0.000    0.000    0.000    0.000 mul.py:571(<listcomp>)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:287(CubicTriInterpolator)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6257(vonmises_fisher_gen)
        3    0.000    0.000    0.000    0.000 arrayprint.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 calendar.py:71(_localized_day)
        3    0.000    0.000    0.000    0.000 __init__.py:7(is_available)
        1    0.000    0.000    0.000    0.000 util.py:103(__init__)
        5    0.000    0.000    0.000    0.000 due.py:28(dcite)
        1    0.000    0.000    0.000    0.000 join.py:88(_JoinConfig)
        1    0.000    0.000    0.000    0.000 backend_tools.py:394(ToolQuit)
        1    0.000    0.000    0.000    0.000 conv.py:10(_ConvNd)
        1    0.000    0.000    0.000    0.000 __init__.py:70(__init__)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:602(make_mpc)
       15    0.000    0.000    0.000    0.000 arrayprint.py:994(<genexpr>)
        1    0.000    0.000    0.000    0.000 radam.py:13(RAdam)
        1    0.000    0.000    0.000    0.000 kronecker.py:86(KroneckerProduct)
        1    0.000    0.000    0.000    0.000 __init__.py:879(DoubleStorage)
        2    0.000    0.000    0.000    0.000 decorator.py:319(wrapper)
        1    0.000    0.000    0.000    0.000 triangulation.py:4(Triangulation)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3621(DiscreteDistribution)
        1    0.000    0.000    0.000    0.000 outputs.py:4975(Wavecar)
       24    0.000    0.000    0.000    0.000 traceback.py:307(__len__)
        1    0.000    0.000    0.000    0.000 error_functions.py:1964(Ci)
        1    0.000    0.000    0.000    0.000 functional_modules.py:82(FXFloatFunctional)
        1    0.000    0.000    0.000    0.000 arrayterator.py:16(Arrayterator)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:41(<setcomp>)
        1    0.000    0.000    0.000    0.000 padding.py:15(_ConstantPadNd)
        5    0.000    0.000    0.000    0.000 cache.py:155(cached_property)
       10    0.000    0.000    0.000    0.000 __init__.py:318(_wrap_deprecated_method)
        1    0.000    0.000    0.000    0.000 operator_support.py:177(OpSupports)
       30    0.000    0.000    0.000    0.000 polyoptions.py:196(<genexpr>)
        1    0.000    0.000    0.000    0.000 internal.py:30(_InternalRPCPickler)
        1    0.000    0.000    0.000    0.000 boolalg.py:483(BooleanFunction)
        1    0.000    0.000    0.000    0.000 warnings.py:403(__init__)
        1    0.000    0.000    0.000    0.000 decoder.py:254(JSONDecoder)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1363(exec_module)
       27    0.000    0.000    0.000    0.000 singleton.py:152(__repr__)
        1    0.000    0.000    0.000    0.000 comments.py:1089(CommentedSet)
        1    0.000    0.000    0.000    0.000 figure.py:47(_AxesStack)
        1    0.000    0.000    0.000    0.000 stringpict.py:354(prettyForm)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:119(ScalarFunction)
        2    0.000    0.000    0.000    0.000 results.py:441(__getattr__)
        1    0.000    0.000    0.000    0.000 interval_membership.py:4(intervalMembership)
        1    0.000    0.000    0.000    0.000 markers.py:274(Marker)
        1    0.000    0.000    0.000    0.000 _atfork.py:18(register_after_fork)
        9    0.000    0.000    0.000    0.000 core.py:4246(<genexpr>)
        1    0.000    0.000    0.000    0.000 assume.py:224(Predicate)
        1    0.000    0.000    0.000    0.000 afm.py:358(AFM)
       22    0.000    0.000    0.000    0.000 core.py:3595(<genexpr>)
        1    0.000    0.000    0.000    0.000 vode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tags.py:42(Tag)
        1    0.000    0.000    0.000    0.000 bessel.py:36(BesselBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1432(cauchy_gen)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:913(ReduceLROnPlateau)
       10    0.000    0.000    0.000    0.000 case.py:1366(_deprecate)
        1    0.000    0.000    0.000    0.000 __init__.py:106(__version__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1257(burr12_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:531(Formatter)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:84(_apply_params)
        1    0.000    0.000    0.000    0.000 activation.py:14(ReLU6)
       29    0.000    0.000    0.000    0.000 {method 'groupdict' of 're.Match' objects}
        4    0.000    0.000    0.000    0.000 pythonmpq.py:194(__neg__)
        1    0.000    0.000    0.000    0.000 _guards.py:238(Checkpointable)
        1    0.000    0.000    0.000    0.000 __init__.py:17(Future)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11258(wald_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3046(genlogistic_gen)
        1    0.000    0.000    0.000    0.000 zipfile.py:802(ZipExtFile)
        1    0.000    0.000    0.000    0.000 netcdf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:345(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 numbers.py:3465(ComplexInfinity)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:47(Resolvent)
        1    0.000    0.000    0.000    0.000 spline.py:1(<module>)
        1    0.000    0.000    0.000    0.000 asgd.py:18(ASGD)
        1    0.000    0.000    0.000    0.000 singleton.py:24(SingletonRegistry)
        1    0.000    0.000    0.000    0.000 pooling.py:874(_LPPoolNd)
        1    0.000    0.000    0.000    0.000 _interpolate.py:151(_check_broadcast_up_to)
        1    0.000    0.000    0.000    0.000 Periodicity_System.py:12(PeriodicityPhysicsSystem)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:433(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 structure.py:5062(Molecule)
        1    0.000    0.000    0.000    0.000 conv.py:382(Conv2d)
        1    0.000    0.000    0.000    0.000 ops.py:153(<listcomp>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1027(matrix_normal_gen)
        1    0.000    0.000    0.000    0.000 sequences.py:726(RecursiveSeq)
        1    0.000    0.000    0.000    0.000 tight_bbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 outputs.py:177(KpointOptProps)
        1    0.000    0.000    0.000    0.000 generate.py:26(Sieve)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8859(powerlognorm_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:143(__init__)
        1    0.000    0.000    0.000    0.000 selector_events.py:744(_SelectorTransport)
        1    0.000    0.000    0.000    0.000 normalization.py:87(LayerNorm)
        1    0.000    0.000    0.000    0.000 graycode.py:6(GrayCode)
        1    0.000    0.000    0.000    0.000 setupcfg.py:603(ConfigOptionsHandler)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1767(yulesimon_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:321(CDLL)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4158(Sentinel)
        1    0.000    0.000    0.000    0.000 linear_relu.py:9(LinearReLU)
        1    0.000    0.000    0.000    0.000 __init__.py:347(EntryPoints)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:961(poisson_gen)
       24    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 series.py:1289(LineOver1DRangeSeries)
        1    0.000    0.000    0.000    0.000 core.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:6(HTTPStatus)
        1    0.000    0.000    0.000    0.000 __init__.py:35(_SupportedQEnginesProp)
        1    0.000    0.000    0.000    0.000 numbers.py:2839(One)
        1    0.000    0.000    0.000    0.000 batchnorm.py:17(_NormBase)
        1    0.000    0.000    0.000    0.000 threading.py:822(_maintain_shutdown_locks)
        1    0.000    0.000    0.000    0.000 _internal.py:249(_ctypes)
       11    0.000    0.000    0.000    0.000 _color_data.py:31(<genexpr>)
        1    0.000    0.000    0.000    0.000 error_functions.py:674(erf2)
        3    0.000    0.000    0.000    0.000 __init__.py:1720(getEffectiveLevel)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1595(chi2_gen)
        1    0.000    0.000    0.000    0.000 conv_fused.py:695(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 __init__.py:979(LongStorage)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:553(_Parameter)
        1    0.000    0.000    0.000    0.000 transforms.py:955(LowerCholeskyTransform)
        1    0.000    0.000    0.000    0.000 lzma.py:38(LZMAFile)
        1    0.000    0.000    0.000    0.000 __init__.py:331(_Stream)
        1    0.000    0.000    0.000    0.000 traceback.py:372(StackSummary)
        1    0.000    0.000    0.000    0.000 transforms.py:1012(TransformedBbox)
        1    0.000    0.000    0.000    0.000 kind.py:257(__init__)
        1    0.000    0.000    0.000    0.000 graph_module.py:230(_WrappedCall)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11392(gennorm_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11558(crystalball_gen)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1728(RealInterval)
        1    0.000    0.000    0.000    0.000 core.py:2766(Word)
        1    0.000    0.000    0.000    0.000 numbers.py:762(harmonic)
        1    0.000    0.000    0.000    0.000 _compression.py:9(BaseStream)
        1    0.000    0.000    0.000    0.000 ssl.py:185(_TLSAlertType)
        1    0.000    0.000    0.000    0.000 containers.py:23(Tuple)
        1    0.000    0.000    0.000    0.000 readers.py:53(MultiplexedPath)
        1    0.000    0.000    0.000    0.000 _infra.py:180(Stack)
        2    0.000    0.000    0.000    0.000 sysconfig.py:299(get_preferred_scheme)
        1    0.000    0.000    0.000    0.000 structure.py:25(SymmetrizedStructure)
        1    0.000    0.000    0.000    0.000 transforms.py:459(ReshapeTransform)
        1    0.000    0.000    0.000    0.000 diophantine.py:1213(<setcomp>)
        1    0.000    0.000    0.000    0.000 discovery.py:298(ConfigDiscovery)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:18(_NestedSequence)
        1    0.000    0.000    0.000    0.000 matexpr.py:666(MatrixSymbol)
        1    0.000    0.000    0.000    0.000 relational.py:549(Equality)
        8    0.000    0.000    0.000    0.000 mathtext.py:1903(__init__)
        3    0.000    0.000    0.000    0.000 constraints.py:109(__init__)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:64(_apply_params)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:151(ivmpc)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:129(bernoulli_gen)
        1    0.000    0.000    0.000    0.000 fancysets.py:166(Integers)
        1    0.000    0.000    0.000    0.000 tag.py:20(Tag)
        1    0.000    0.000    0.000    0.000 art3d.py:557(Poly3DCollection)
        1    0.000    0.000    0.000    0.000 distance.py:1990(<dictcomp>)
        1    0.000    0.000    0.000    0.000 bessel.py:106(besselj)
        1    0.000    0.000    0.000    0.000 _backend.py:36(_backend_from_arg)
       12    0.000    0.000    0.000    0.000 matexpr.py:21(_sympifyit)
        1    0.000    0.000    0.000    0.000 _ode.py:843(vode)
        1    0.000    0.000    0.000    0.000 integers.py:297(ceiling)
        1    0.000    0.000    0.000    0.000 conv.py:483(Conv3d)
        1    0.000    0.000    0.000    0.000 __init__.py:1224(levy_stable_frozen)
        1    0.000    0.000    0.000    0.000 _vertex.py:9(VertexBase)
        3    0.000    0.000    0.000    0.000 __init__.py:880(legacy_normalize)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:246(GaussianDomain)
        1    0.000    0.000    0.000    0.000 spglib.py:108(SpglibDataset)
        1    0.000    0.000    0.000    0.000 __init__.py:385(check_sparse_tensor_invariants)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3254(genexpon_gen)
        1    0.000    0.000    0.000    0.000 single.py:211(SingleODESolver)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:233(<lambda>)
        1    0.000    0.000    0.000    0.000 expr.py:3989(AtomicExpr)
       14    0.000    0.000    0.000    0.000 _common.py:9(__init__)
        1    0.000    0.000    0.000    0.000 hyper.py:796(HyperRep)
        1    0.000    0.000    0.000    0.000 __init__.py:72(__init__)
        1    0.000    0.000    0.000    0.000 graphs.py:40(CUDAGraph)
        1    0.000    0.000    0.000    0.000 point.py:1073(Point3D)
        1    0.000    0.000    0.000    0.000 sets.py:10(MatrixSet)
        1    0.000    0.000    0.000    0.000 transforms.py:80(TransformNode)
        2    0.000    0.000    0.000    0.000 gzip.py:402(_read_exact)
        1    0.000    0.000    0.000    0.000 bdist.py:37(ListCompat)
        3    0.000    0.000    0.000    0.000 zipfile.py:1872(close)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:118(<listcomp>)
        1    0.000    0.000    0.000    0.000 rprop.py:11(Rprop)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:398(uppergamma)
        1    0.000    0.000    0.000    0.000 function_base.py:2314(<listcomp>)
        1    0.000    0.000    0.000    0.000 colors.py:371(ColorConverter)
        1    0.000    0.000    0.000    0.000 extras.py:1607(MAxisConcatenator)
        1    0.000    0.000    0.000    0.000 inverse.py:8(Inverse)
        1    0.000    0.000    0.000    0.000 activation.py:617(GLU)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:19(LKJCholesky)
        1    0.000    0.000    0.000    0.000 singleton.py:114(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3162(multinomial_gen)
        1    0.000    0.000    0.000    0.000 slice.py:31(MatrixSlice)
        1    0.000    0.000    0.000    0.000 _script.py:1478(_ScriptProfileColumn)
        1    0.000    0.000    0.000    0.000 mathtext.py:1444(Char)
        1    0.000    0.000    0.000    0.000 hierarchy.py:1074(ClusterNode)
        1    0.000    0.000    0.000    0.000 __init__.py:959(FloatStorage)
        1    0.000    0.000    0.000    0.000 __init__.py:434(Stripper)
        2    0.000    0.000    0.000    0.000 facts.py:305(rules_beta)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:114(FakeQuantize)
        1    0.000    0.000    0.000    0.000 pc_groups.py:42(Collector)
        1    0.000    0.000    0.000    0.000 line.py:1343(Ray)
        1    0.000    0.000    0.000    0.000 __init__.py:989(IntStorage)
        1    0.000    0.000    0.000    0.000 rnn.py:230(GRUCell)
        1    0.000    0.000    0.000    0.000 specifiers.py:690(SpecifierSet)
        1    0.000    0.000    0.000    0.000 discovery.py:84(_Finder)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8315(lomax_gen)
        1    0.000    0.000    0.000    0.000 _ltisys.py:132(lti)
        1    0.000    0.000    0.000    0.000 discovery.py:132(PackageFinder)
        1    0.000    0.000    0.000    0.000 argparse.py:1328(_ActionsContainer)
        1    0.000    0.000    0.000    0.000 _ode.py:110(ode)
        3    0.000    0.000    0.000    0.000 zipfile.py:689(_check_compression)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:34(gamma)
        1    0.000    0.000    0.000    0.000 threading.py:544(Event)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7648(nakagami_gen)
        1    0.000    0.000    0.000    0.000 conv_relu.py:19(ConvReLU1d)
       18    0.000    0.000    0.000    0.000 typing_extensions.py:762(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:6345(mvoid)
        1    0.000    0.000    0.000    0.000 core.py:3237(QuotedString)
        1    0.000    0.000    0.000    0.000 unix_events.py:457(_UnixReadPipeTransport)
       11    0.000    0.000    0.000    0.000 reductions.py:110(_torch_reduce)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:476(Hyper_Function)
        1    0.000    0.000    0.000    0.000 __init__.py:13(register)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:161(SobolResult)
        1    0.000    0.000    0.000    0.000 binary.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 selector_events.py:888(_SelectorSocketTransport)
        1    0.000    0.000    0.000    0.000 mathtext.py:535(TruetypeFonts)
        1    0.000    0.000    0.000    0.000 operations.py:38(__init__)
        1    0.000    0.000    0.000    0.000 _wavelets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:877(_DomainGreaterEqual)
        1    0.000    0.000    0.000    0.000 _pep440.py:140(__lt__)
        1    0.000    0.000    0.000    0.000 blocking_input.py:101(BlockingMouseInput)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:324(_icdf_formula)
        1    0.000    0.000    0.000    0.000 widgets.py:1417(_SelectorWidget)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1074(bradford_gen)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:12(HalfCauchy)
        1    0.000    0.000    0.000    0.000 error_functions.py:2210(Chi)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:237(<lambda>)
        1    0.000    0.000    0.000    0.000 mio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tarfile.py:328(_Stream)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3579(TypeAliasType)
        1    0.000    0.000    0.000    0.000 conv_add.py:52(ConvAddReLU2d)
        1    0.000    0.000    0.000    0.000 swa_utils.py:200(SWALR)
        1    0.000    0.000    0.000    0.000 events.py:24(Handle)
        1    0.000    0.000    0.000    0.000 delta_functions.py:17(DiracDelta)
        1    0.000    0.000    0.000    0.000 npyio.py:106(NpzFile)
        1    0.000    0.000    0.000    0.000 image.py:1134(PcolorImage)
        1    0.000    0.000    0.000    0.000 decomp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph_module.py:27(_EvalCacheLoader)
        1    0.000    0.000    0.000    0.000 combining.py:117(_ForkerIterDataPipe)
        1    0.000    0.000    0.000    0.000 polyhedron.py:11(Polyhedron)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:9(__PrinterOptions)
        1    0.000    0.000    0.000    0.000 __init__.py:1009(CharStorage)
        1    0.000    0.000    0.000    0.000 dense.py:28(DenseMatrix)
        1    0.000    0.000    0.000    0.000 scalarint.py:12(ScalarInt)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:299(_process_parameters)
        1    0.000    0.000    0.000    0.000 utils.py:11(WeightedQuantizedModule)
        1    0.000    0.000    0.000    0.000 conv.py:82(Conv2d)
        2    0.000    0.000    0.000    0.000 util.py:289(<listcomp>)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:674(Formula)
        1    0.000    0.000    0.000    0.000 adjoint.py:6(Adjoint)
        1    0.000    0.000    0.000    0.000 dataloader.py:684(_MultiProcessingDataLoaderIter)
        1    0.000    0.000    0.000    0.000 integers.py:97(floor)
        1    0.000    0.000    0.000    0.000 dos.py:395(FermiDos)
        6    0.000    0.000    0.000    0.000 rcsetup.py:177(_validate_tex_preamble)
        1    0.000    0.000    0.000    0.000 maggroups.py:33(MagneticSpaceGroup)
        1    0.000    0.000    0.000    0.000 __config__.py:95(<listcomp>)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:607(default)
        1    0.000    0.000    0.000    0.000 splitter_base.py:193(SplitResult)
        1    0.000    0.000    0.000    0.000 integers.py:21(RoundFunction)
        1    0.000    0.000    0.000    0.000 _cubic.py:160(PchipInterpolator)
        1    0.000    0.000    0.000    0.000 _parser.py:241(parserinfo)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:295(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4780(hypsecant_gen)
        2    0.000    0.000    0.000    0.000 densebasic.py:255(dup_strip)
        1    0.000    0.000    0.000    0.000 units.py:110(ConversionInterface)
        1    0.000    0.000    0.000    0.000 __init__.py:1019(BoolStorage)
        1    0.000    0.000    0.000    0.000 autograd_function.py:30(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:2380(CompositeAffine2D)
        1    0.000    0.000    0.000    0.000 error_functions.py:2104(Shi)
        1    0.000    0.000    0.000    0.000 rnn.py:749(RNNCellBase)
        1    0.000    0.000    0.000    0.000 band.py:16(Band)
        1    0.000    0.000    0.000    0.000 kind.py:97(__new__)
        1    0.000    0.000    0.000    0.000 partitions.py:15(Partition)
        1    0.000    0.000    0.000    0.000 difflib.py:1666(HtmlDiff)
        1    0.000    0.000    0.000    0.000 __init__.py:939(CharStorage)
       10    0.000    0.000    0.000    0.000 wrappers.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:76(Options)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1857(cache_policy)
        1    0.000    0.000    0.000    0.000 filter_design.py:1(<module>)
        3    0.000    0.000    0.000    0.000 glob.py:213(_join)
       16    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:79(<genexpr>)
        1    0.000    0.000    0.000    0.000 main.py:1489(YAMLObject)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:565(anglit_gen)
        1    0.000    0.000    0.000    0.000 mio4.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis.py:29(<listcomp>)
        1    0.000    0.000    0.000    0.000 _docscrape.py:623(ClassDoc)
        1    0.000    0.000    0.000    0.000 pydoc.py:1855(<listcomp>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1547(dirichlet_gen)
        3    0.000    0.000    0.000    0.000 feedparser.py:210(_pop_message)
        1    0.000    0.000    0.000    0.000 __init__.py:929(ShortStorage)
        6    0.000    0.000    0.000    0.000 _type_aliases.py:92(<genexpr>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2479(_logpmf_dispatch)
        4    0.000    0.000    0.000    0.000 libmpf.py:454(to_float)
        1    0.000    0.000    0.000    0.000 tensor.py:4488(TensorElement)
        8    0.000    0.000    0.000    0.000 unicode.py:9(__init__)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:103(elliptic_f)
        1    0.000    0.000    0.000    0.000 combining.py:93(_ContainerTemplate)
        6    0.000    0.000    0.000    0.000 docstring.py:33(__init__)
        1    0.000    0.000    0.000    0.000 _internal.py:217(_getintp_ctype)
        1    0.000    0.000    0.000    0.000 splitter_base.py:81(FxNetAccNodesFinder)
        1    0.000    0.000    0.000    0.000 transforms.py:280(__init__)
        7    0.000    0.000    0.000    0.000 __init__.py:27(__init__)
        1    0.000    0.000    0.000    0.000 sets.py:854(ProductSet)
        1    0.000    0.000    0.000    0.000 warnings.py:25(SetuptoolsWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:222(__exit__)
        1    0.000    0.000    0.000    0.000 __init__.py:899(HalfStorage)
        1    0.000    0.000    0.000    0.000 conv.py:672(ConvTranspose1d)
       11    0.000    0.000    0.000    0.000 windows.py:41(_add_docstr)
        1    0.000    0.000    0.000    0.000 trace.py:11(Trace)
        1    0.000    0.000    0.000    0.000 util.py:182(Finalize)
        1    0.000    0.000    0.000    0.000 __init__.py:1049(ComplexFloatStorage)
        1    0.000    0.000    0.000    0.000 _exceptions.py:116(_ArrayMemoryError)
        1    0.000    0.000    0.000    0.000 streams.py:301(StreamWriter)
        1    0.000    0.000    0.000    0.000 dataset.py:280(Subset)
        1    0.000    0.000    0.000    0.000 __init__.py:919(IntStorage)
        1    0.000    0.000    0.000    0.000 getlimits.py:378(finfo)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1744(dgamma_gen)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:115(TokenList)
        1    0.000    0.000    0.000    0.000 configparser.py:297(ParsingError)
        1    0.000    0.000    0.000    0.000 backend_tools.py:992(ToolHelpBase)
        2    0.000    0.000    0.000    0.000 {method 'tobytes' of 'numpy.generic' objects}
       13    0.000    0.000    0.000    0.000 utils.py:35(wrapper)
        1    0.000    0.000    0.000    0.000 arffread.py:1(<module>)
        1    0.000    0.000    0.000    0.000 activation.py:1249(PReLU)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:900(_Patcher)
        1    0.000    0.000    0.000    0.000 __init__.py:503(PackagePath)
        1    0.000    0.000    0.000    0.000 mock.py:2422(_Call)
        1    0.000    0.000    0.000    0.000 ticker.py:1909(LinearLocator)
        1    0.000    0.000    0.000    0.000 __init__.py:1079(QInt32Storage)
        1    0.000    0.000    0.000    0.000 _interpolate.py:592(_PPolyBase)
        1    0.000    0.000    0.000    0.000 facts.py:135(apply_beta_to_alpha_route)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:1122(TOMS748Solver)
        1    0.000    0.000    0.000    0.000 single.py:646(AlmostLinear)
        1    0.000    0.000    0.000    0.000 outputs.py:5824(WSWQ)
        1    0.000    0.000    0.000    0.000 solvers.py:23(RawMatrix)
       11    0.000    0.000    0.000    0.000 api.py:488(method_factory)
        1    0.000    0.000    0.000    0.000 parabola.py:20(Parabola)
        1    0.000    0.000    0.000    0.000 boolalg.py:230(BooleanAtom)
        1    0.000    0.000    0.000    0.000 groups.py:139(PointGroup)
        2    0.000    0.000    0.000    0.000 _pep440.py:158(_compare)
        1    0.000    0.000    0.000    0.000 fileopener.py:13(FileOpenerIterDataPipe)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:428(FloorDiv)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:163(__neg__)
        4    0.000    0.000    0.000    0.000 generate.py:67(<genexpr>)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:512(AddressList)
       20    0.000    0.000    0.000    0.000 numbers.py:2835(__bool__)
        1    0.000    0.000    0.000    0.000 function.py:674(NestedIOFunction)
        1    0.000    0.000    0.000    0.000 msgpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ode.py:1121(dopri5)
        3    0.000    0.000    0.000    0.000 rcsetup.py:990(validate_hist_bins)
        1    0.000    0.000    0.000    0.000 transpose.py:5(Transpose)
        1    0.000    0.000    0.000    0.000 profiler_util.py:16(EventList)
        1    0.000    0.000    0.000    0.000 cobyla.py:1(<module>)
        3    0.000    0.000    0.000    0.000 typing.py:900(__repr__)
        1    0.000    0.000    0.000    0.000 mvn.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph.py:113(_Namespace)
        6    0.000    0.000    0.000    0.000 ops.py:752(force_aff_func_args)
       25    0.000    0.000    0.000    0.000 polyoptions.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 ckdtree.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:6643(__setattr__)
        1    0.000    0.000    0.000    0.000 axis3d.py:477(YAxis)
        1    0.000    0.000    0.000    0.000 _byteordercodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polar.py:666(RadialAxis)
       16    0.000    0.000    0.000    0.000 dataclasses.py:1239(<genexpr>)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:20(Kumaraswamy)
        1    0.000    0.000    0.000    0.000 _docscrape.py:25(Reader)
        1    0.000    0.000    0.000    0.000 __init__.py:959(BFloat16Storage)
        1    0.000    0.000    0.000    0.000 conv.py:765(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 _covariance.py:562(CovViaEigendecomposition)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6001(dirichlet_multinomial_gen)
        1    0.000    0.000    0.000    0.000 ase.py:86(AseAtomsAdaptor)
        1    0.000    0.000    0.000    0.000 sequences.py:962(SeqExprOp)
        1    0.000    0.000    0.000    0.000 codata.py:1(<module>)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:393(WORLD)
       10    0.000    0.000    0.000    0.000 decorator.py:195(<genexpr>)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:740(nhypergeom_gen)
        1    0.000    0.000    0.000    0.000 cpp_backtrace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _deprecation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mock.py:1761(_patch_dict)
        1    0.000    0.000    0.000    0.000 loss.py:622(BCEWithLogitsLoss)
        1    0.000    0.000    0.000    0.000 _spherical_voronoi.py:36(SphericalVoronoi)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 outputs.py:4849(Dynmat)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:132(ImmutableDenseNDimArray)
        1    0.000    0.000    0.000    0.000 mod.py:12(Mod)
        1    0.000    0.000    0.000    0.000 _at.py:61(at)
        1    0.000    0.000    0.000    0.000 modules.py:1647(PowerBasisElement)
        1    0.000    0.000    0.000    0.000 __init__.py:219(__enter__)
        1    0.000    0.000    0.000    0.000 complexes.py:20(re)
        1    0.000    0.000    0.000    0.000 _functions.py:6(SyncBatchNorm)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:556(DisplayName)
        1    0.000    0.000    0.000    0.000 ndim_array.py:15(ArrayKind)
        1    0.000    0.000    0.000    0.000 fitpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tz.py:1475(GettzFunc)
       20    0.000    0.000    0.000    0.000 mul.py:672(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7473(kappa3_gen)
        1    0.000    0.000    0.000    0.000 engine.py:342(DiagnosticEngine)
        1    0.000    0.000    0.000    0.000 socket.py:662(SocketIO)
        1    0.000    0.000    0.000    0.000 ndgriddata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:97(<listcomp>)
        2    0.000    0.000    0.000    0.000 math2.py:53(_mathfun_n)
        1    0.000    0.000    0.000    0.000 matexpr.py:597(MatrixElement)
        1    0.000    0.000    0.000    0.000 bessel.py:282(bessely)
        1    0.000    0.000    0.000    0.000 backend_tools.py:800(ToolZoom)
        1    0.000    0.000    0.000    0.000 para4tb.py:132(ParaTB_train)
        1    0.000    0.000    0.000    0.000 isolve.py:1(<module>)
        1    0.000    0.000    0.000    0.000 queue.py:258(_PySimpleQueue)
        3    0.000    0.000    0.000    0.000 __init__.py:6(is_available)
        7    0.000    0.000    0.000    0.000 memoization.py:4(recurrence_memo)
        1    0.000    0.000    0.000    0.000 _atfork.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fft.py:250(_ShapeAndDims)
        1    0.000    0.000    0.000    0.000 conv.py:118(Conv3d)
        1    0.000    0.000    0.000    0.000 _ops.py:589(__init__)
        1    0.000    0.000    0.000    0.000 _globals.py:52(__new__)
        1    0.000    0.000    0.000    0.000 core.py:3553(White)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:174(<lambda>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5835(__init__)
        1    0.000    0.000    0.000    0.000 six.py:164(_resolve)
        1    0.000    0.000    0.000    0.000 base_events.py:206(_SendfileFallbackProtocol)
        1    0.000    0.000    0.000    0.000 pycode.py:416(ArrayPrinter)
        1    0.000    0.000    0.000    0.000 fft.py:409(_CanonicalizeC2rReturn)
        1    0.000    0.000    0.000    0.000 sets.py:1893(UniversalSet)
        1    0.000    0.000    0.000    0.000 formal.py:1492(FiniteFormalPowerSeries)
        1    0.000    0.000    0.000    0.000 modules.py:1339(QuotientModule)
        1    0.000    0.000    0.000    0.000 mio_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 normalization.py:5(LayerNorm)
       12    0.000    0.000    0.000    0.000 symbol.py:784(literal)
        1    0.000    0.000    0.000    0.000 dates.py:1052(DateLocator)
        1    0.000    0.000    0.000    0.000 ticker.py:1218(LogitFormatter)
        1    0.000    0.000    0.000    0.000 sampler.py:139(SubsetRandomSampler)
        1    0.000    0.000    0.000    0.000 nodes.py:11(Node)
        3    0.000    0.000    0.000    0.000 message.py:211(is_multipart)
        1    0.000    0.000    0.000    0.000 half_normal.py:12(HalfNormal)
        1    0.000    0.000    0.000    0.000 libmpi.py:96(mpi_neg)
        1    0.000    0.000    0.000    0.000 periodic_table.py:637(is_valid_symbol)
        1    0.000    0.000    0.000    0.000 numpy.py:506(JaxPrinter)
        1    0.000    0.000    0.000    0.000 transformer.py:166(TransformerEncoder)
        1    0.000    0.000    0.000    0.000 unix_events.py:823(AbstractChildWatcher)
        1    0.000    0.000    0.000    0.000 ticker.py:232(Formatter)
        1    0.000    0.000    0.000    0.000 widgets.py:1836(ToolHandles)
       12    0.000    0.000    0.000    0.000 patches.py:1879(<genexpr>)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:386(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rotation.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {method 'title' of 'str' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:79(method_cache)
        1    0.000    0.000    0.000    0.000 single.py:341(NthAlgebraic)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:191(<listcomp>)
        1    0.000    0.000    0.000    0.000 inference.py:252(KB)
        1    0.000    0.000    0.000    0.000 header.py:413(_ValueFormatter)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1347(ReduceOrder)
        1    0.000    0.000    0.000    0.000 _script.py:179(OrderedDictWrapper)
       14    0.000    0.000    0.000    0.000 {method 'seek' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 typing_extensions.py:886(SupportsAbs)
        1    0.000    0.000    0.000    0.000 rnn.py:282(RNNBase)
        1    0.000    0.000    0.000    0.000 hmac.py:27(HMAC)
        1    0.000    0.000    0.000    0.000 six.py:219(is_package)
        1    0.000    0.000    0.000    0.000 pycode.py:552(PythonCodePrinter)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:13(PythonIntegerRing)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3599(ContinuousDistribution)
        1    0.000    0.000    0.000    0.000 linear.py:48(Linear)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:88(RelaxedOneHotCategorical)
       10    0.000    0.000    0.000    0.000 __future__.py:83(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._jit_init}
        1    0.000    0.000    0.000    0.000 tritools.py:11(TriAnalyzer)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1235(_kwargs2args)
        1    0.000    0.000    0.000    0.000 outputs.py:4024(Procar)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:14(Match)
        1    0.000    0.000    0.000    0.000 factorials.py:828(binomial)
        1    0.000    0.000    0.000    0.000 assume.py:80(AppliedPredicate)
        1    0.000    0.000    0.000    0.000 point.py:860(Point2D)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:6(autocast)
        1    0.000    0.000    0.000    0.000 enumerative.py:368(MultisetPartitionTraverser)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:753(PngImageFile)
        1    0.000    0.000    0.000    0.000 __init__.py:1308(__init__)
        1    0.000    0.000    0.000    0.000 singularity_functions.py:14(SingularityFunction)
        1    0.000    0.000    0.000    0.000 decoder.py:269(Decoder)
        1    0.000    0.000    0.000    0.000 __init__.py:84(__init__)
        1    0.000    0.000    0.000    0.000 subprocess.py:17(SubprocessStreamProtocol)
        1    0.000    0.000    0.000    0.000 tempfile.py:459(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:1069(QInt8Storage)
        1    0.000    0.000    0.000    0.000 text.py:1326(_AnnotationBase)
        5    0.000    0.000    0.000    0.000 constructor.py:331(add_multi_constructor)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7768(ncx2_gen)
        1    0.000    0.000    0.000    0.000 _functions.py:10(Broadcast)
        1    0.000    0.000    0.000    0.000 blocking_input.py:32(BlockingInput)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3321(genextreme_gen)
        1    0.000    0.000    0.000    0.000 bn_relu.py:12(BNReLU2d)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:395(zeta)
        1    0.000    0.000    0.000    0.000 __init__.py:1402(_fixupChildren)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:44(__new__)
        1    0.000    0.000    0.000    0.000 _structures.py:6(InfinityType)
        9    0.000    0.000    0.000    0.000 enum.py:1354(<lambda>)
        1    0.000    0.000    0.000    0.000 conv_add.py:9(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 six.py:205(load_module)
        1    0.000    0.000    0.000    0.000 io.py:344(FileLock)
        1    0.000    0.000    0.000    0.000 memoization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method posix.sysconf}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11948(rv_histogram)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_224}
        1    0.000    0.000    0.000    0.000 __init__.py:1099(QUInt2x4Storage)
        1    0.000    0.000    0.000    0.000 unix_events.py:1337(ThreadedChildWatcher)
        1    0.000    0.000    0.000    0.000 orderings.py:63(ProductOrder)
        1    0.000    0.000    0.000    0.000 conv.py:1141(_LazyConvXdMixin)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3629(__init__)
        1    0.000    0.000    0.000    0.000 ticker.py:2084(MaxNLocator)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1347(fisk_gen)
        1    0.000    0.000    0.000    0.000 gridspec.py:362(GridSpec)
        1    0.000    0.000    0.000    0.000 __init__.py:949(BoolStorage)
        1    0.000    0.000    0.000    0.000 spectrum.py:38(Spectrum)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7553(moyal_gen)
        2    0.000    0.000    0.000    0.000 cache.py:190(LazyFunction)
        1    0.000    0.000    0.000    0.000 headerregistry.py:156(BaseHeader)
        1    0.000    0.000    0.000    0.000 loss.py:1414(TripletMarginLoss)
        1    0.000    0.000    0.000    0.000 function.py:155(FunctionClass)
        1    0.000    0.000    0.000    0.000 locks.py:158(Event)
        1    0.000    0.000    0.000    0.000 __init__.py:969(ComplexDoubleStorage)
        1    0.000    0.000    0.000    0.000 transforms.py:634(TanhTransform)
        1    0.000    0.000    0.000    0.000 _multivariate.py:211(multi_rv_generic)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:10(LaplacianNd)
        1    0.000    0.000    0.000    0.000 numbers.py:3888(TribonacciConstant)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1767(C14NWriterTarget)
        1    0.000    0.000    0.000    0.000 weibull.py:11(Weibull)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:498(geom_gen)
        1    0.000    0.000    0.000    0.000 kdtree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linear.py:15(Linear)
        1    0.000    0.000    0.000    0.000 colors.py:695(LinearSegmentedColormap)
        1    0.000    0.000    0.000    0.000 ticker.py:333(FixedFormatter)
        1    0.000    0.000    0.000    0.000 morphology.py:1(<module>)
        1    0.000    0.000    0.000    0.000 optimize.py:1(<module>)
        2    0.000    0.000    0.000    0.000 weakref.py:347(__new__)
        7    0.000    0.000    0.000    0.000 getlimits.py:157(_register_type)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_adapter}
        1    0.000    0.000    0.000    0.000 _atfork.py:15(_register)
        1    0.000    0.000    0.000    0.000 difflib.py:724(Differ)
        4    0.000    0.000    0.000    0.000 doccer.py:180(replace_notes_in_docstring)
        1    0.000    0.000    0.000    0.000 patches.py:1833(_Style)
        1    0.000    0.000    0.000    0.000 transforms.py:60(IntegralTransform)
       16    0.000    0.000    0.000    0.000 structure.py:244(sites)
        1    0.000    0.000    0.000    0.000 core.py:237(LinearCombination)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5836(johnsonsu_gen)
        1    0.000    0.000    0.000    0.000 contour.py:1388(QuadContourSet)
        1    0.000    0.000    0.000    0.000 _nbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4308(multivariate_t_gen)
        1    0.000    0.000    0.000    0.000 mock.py:293(_Sentinel)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:99(_Formatter)
        1    0.000    0.000    0.000    0.000 diophantine.py:40(DiophantineSolutionSet)
        1    0.000    0.000    0.000    0.000 polyoptions.py:349(Order)
        1    0.000    0.000    0.000    0.000 __init__.py:1303(Manager)
        5    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        1    0.000    0.000    0.000    0.000 _encoded_words.py:73(_QByteMap)
        1    0.000    0.000    0.000    0.000 headerregistry.py:260(UnstructuredHeader)
        1    0.000    0.000    0.000    0.000 headerregistry.py:12(Address)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'select.epoll' objects}
        1    0.000    0.000    0.000    0.000 backend_tools.py:414(_ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 activation.py:161(Softmax)
        1    0.000    0.000    0.000    0.000 __init__.py:1089(QUInt4x2Storage)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:579(DecompositionInterpreter)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:13(elliptic_k)
        1    0.000    0.000    0.000    0.000 dsolve.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rnn.py:1018(RNNCellBase)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2974(_prod_dispatcher)
        1    0.000    0.000    0.000    0.000 hyper.py:866(HyperRep_power1)
        1    0.000    0.000    0.000    0.000 Orbit_spd.py:16(orbit_spd)
        1    0.000    0.000    0.000    0.000 __init__.py:1029(BFloat16Storage)
        1    0.000    0.000    0.000    0.000 container.py:5(Container)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:30(_isnull)
        1    0.000    0.000    0.000    0.000 lazy.py:10(_LazyProtocol)
        1    0.000    0.000    0.000    0.000 parser.py:818(RoundTripParserSC)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4006(rv_sample)
        5    0.000    0.000    0.000    0.000 typing.py:2588(final)
        1    0.000    0.000    0.000    0.000 utils.py:104(_Deprecate)
        1    0.000    0.000    0.000    0.000 taskgroups.py:12(TaskGroup)
        1    0.000    0.000    0.000    0.000 threading.py:224(Condition)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:23(BarrierSubproblem)
        1    0.000    0.000    0.000    0.000 decomp_cholesky.py:1(<module>)
        1    0.000    0.000    0.000    0.000 boolalg.py:572(And)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4346(_shift_scale_distribution_function)
        1    0.000    0.000    0.000    0.000 rnn.py:30(PackedSequence)
        1    0.000    0.000    0.000    0.000 configparser.py:1210(ConfigParser)
       16    0.000    0.000    0.000    0.000 results.py:29(__getitem__)
       16    0.000    0.000    0.000    0.000 structure.py:3559(charge)
       15    0.000    0.000    0.000    0.000 dataclasses.py:179(__repr__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3772(__init__)
        1    0.000    0.000    0.000    0.000 ImageFile.py:113(ImageFile)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:960(betaprime_gen)
        8    0.000    0.000    0.000    0.000 animation.py:116(wrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:99(version_info)
        1    0.000    0.000    0.000    0.000 sputils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mstats_basic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _version.py:14(NumpyVersion)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:37(FancyGetopt)
        1    0.000    0.000    0.000    0.000 contains.py:10(Contains)
        1    0.000    0.000    0.000    0.000 quadpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 complexes.py:142(im)
        1    0.000    0.000    0.000    0.000 beta_functions.py:20(beta)
        1    0.000    0.000    0.000    0.000 __init__.py:1148(<listcomp>)
        1    0.000    0.000    0.000    0.000 axis3d.py:484(ZAxis)
        1    0.000    0.000    0.000    0.000 repmatrix.py:585(_fromrep)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:786(keys)
        1    0.000    0.000    0.000    0.000 indexed.py:580(Idx)
        1    0.000    0.000    0.000    0.000 para4band.py:53(Stiefel_Frame_Function)
        3    0.000    0.000    0.000    0.000 rcsetup.py:740(validate_bbox)
        1    0.000    0.000    0.000    0.000 more.py:2733(seekable)
        1    0.000    0.000    0.000    0.000 _sources.py:111(ParsedDef)
        1    0.000    0.000    0.000    0.000 rrule.py:1112(_iterinfo)
        1    0.000    0.000    0.000    0.000 sets.py:1726(Complement)
        1    0.000    0.000    0.000    0.000 streams.py:12(Stream)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:202(_concrete_ndptr)
        1    0.000    0.000    0.000    0.000 _machar.py:17(MachAr)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3789(Doc)
        1    0.000    0.000    0.000    0.000 six.py:108(MovedModule)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2460(foldcauchy_gen)
        1    0.000    0.000    0.000    0.000 fancysets.py:1110(ComplexRegion)
        1    0.000    0.000    0.000    0.000 _type_utils.py:270(<dictcomp>)
        1    0.000    0.000    0.000    0.000 traceback.py:247(FrameSummary)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:564(polygamma)
        1    0.000    0.000    0.000    0.000 activation.py:1361(Softmin)
        1    0.000    0.000    0.000    0.000 configparser.py:1255(SectionProxy)
        1    0.000    0.000    0.000    0.000 _structures.py:35(NegativeInfinityType)
        1    0.000    0.000    0.000    0.000 batchnorm.py:9(_BatchNorm)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4367(_shift_scale_inverse_function)
        1    0.000    0.000    0.000    0.000 immutable.py:82(ImmutableDenseMatrix)
        1    0.000    0.000    0.000    0.000 _ode.py:1250(lsoda)
        1    0.000    0.000    0.000    0.000 animation.py:696(ImageMagickBase)
        1    0.000    0.000    0.000    0.000 odepack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 special.py:104(Identity)
        1    0.000    0.000    0.000    0.000 core.py:2372(_MaskedPrintOption)
        1    0.000    0.000    0.000    0.000 _ode.py:600(complex_ode)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:67(_apply_params)
        1    0.000    0.000    0.000    0.000 fold.py:10(Fold)
        9    0.000    0.000    0.000    0.000 multiarray.py:346(where)
        1    0.000    0.000    0.000    0.000 numbers.py:3545(NumberSymbol)
        1    0.000    0.000    0.000    0.000 _trustregion.py:30(BaseQuadraticSubproblem)
        1    0.000    0.000    0.000    0.000 constraints.py:96(_Dependent)
       14    0.000    0.000    0.000    0.000 mock.py:1937(<genexpr>)
        1    0.000    0.000    0.000    0.000 utils.py:8(ReferenceQuantizedModule)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:476(_broadcast_arrays_dispatcher)
        1    0.000    0.000    0.000    0.000 mio5_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 case.py:1388(FunctionTestCase)
        1    0.000    0.000    0.000    0.000 rnn.py:1061(RNNCell)
        1    0.000    0.000    0.000    0.000 numbers.py:267(Rational)
        1    0.000    0.000    0.000    0.000 normalization.py:14(LocalResponseNorm)
        1    0.000    0.000    0.000    0.000 gzip.py:455(_GzipReader)
        3    0.000    0.000    0.000    0.000 rcsetup.py:754(validate_sketch)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:13(autocast)
        1    0.000    0.000    0.000    0.000 signaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 property.py:3(Property)
        1    0.000    0.000    0.000    0.000 requirements.py:21(Requirement)
        1    0.000    0.000    0.000    0.000 dos.py:1413(LobsterCompleteDos)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:215(_ProxyTensor)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:10(GaussLegendreQuadrature)
        6    0.000    0.000    0.000    0.000 printer.py:422(print_function)
        1    0.000    0.000    0.000    0.000 activation.py:241(PReLU)
        1    0.000    0.000    0.000    0.000 calendar.py:150(Calendar)
        1    0.000    0.000    0.000    0.000 colors.py:1681(LightSource)
        1    0.000    0.000    0.000    0.000 numbers.py:3757(Pi)
        1    0.000    0.000    0.000    0.000 numbers.py:1350(genocchi)
        1    0.000    0.000    0.000    0.000 offsetbox.py:651(DrawingArea)
        1    0.000    0.000    0.000    0.000 profiler.py:553(ExecutionGraphObserver)
       18    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISLNK}
        1    0.000    0.000    0.000    0.000 error_functions.py:1275(expint)
        1    0.000    0.000    0.000    0.000 mathtext.py:2632(State)
        1    0.000    0.000    0.000    0.000 ssl.py:456(_ASN1Object)
        1    0.000    0.000    0.000    0.000 dates.py:1872(DateConverter)
        1    0.000    0.000    0.000    0.000 lbfgsb.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linear_relu.py:50(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 transforms.py:2503(BboxTransformTo)
        1    0.000    0.000    0.000    0.000 zeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:412(AngleAddr)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:222(lowergamma)
        1    0.000    0.000    0.000    0.000 activation.py:140(Sigmoid)
        1    0.000    0.000    0.000    0.000 headerregistry.py:104(Group)
        1    0.000    0.000    0.000    0.000 minpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:410(Function)
        1    0.000    0.000    0.000    0.000 rnn.py:7(LSTM)
        1    0.000    0.000    0.000    0.000 dbapi2.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:516(VectorFunction)
        1    0.000    0.000    0.000    0.000 _kdtree.py:98(Rectangle)
        1    0.000    0.000    0.000    0.000 _script.py:413(RecursiveScriptClass)
        1    0.000    0.000    0.000    0.000 _infra.py:129(Location)
        2    0.000    0.000    0.000    0.000 traceback.py:297(__getitem__)
        1    0.000    0.000    0.000    0.000 distance.py:8(PairwiseDistance)
        1    0.000    0.000    0.000    0.000 _interface.py:593(_CustomLinearOperator)
        1    0.000    0.000    0.000    0.000 _rules.py:231(_FxIrAddNode)
        2    0.000    0.000    0.000    0.000 scale.py:634(get_scale_names)
        1    0.000    0.000    0.000    0.000 Orbit.py:2(orbit)
        1    0.000    0.000    0.000    0.000 extrapolation.py:266(levin_class)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:381(__subclasshook__)
        1    0.000    0.000    0.000    0.000 loss.py:28(_WeightedLoss)
        1    0.000    0.000    0.000    0.000 image.py:1288(FigureImage)
        1    0.000    0.000    0.000    0.000 ticker.py:1564(PercentFormatter)
        9    0.000    0.000    0.000    0.000 typing.py:3026(<lambda>)
        1    0.000    0.000    0.000    0.000 rnn.py:948(RNNCell)
        1    0.000    0.000    0.000    0.000 events.py:98(TimerHandle)
        1    0.000    0.000    0.000    0.000 hyper.py:959(HyperRep_asin1)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:223(polylog)
        1    0.000    0.000    0.000    0.000 __init__.py:606(_FileInFile)
        1    0.000    0.000    0.000    0.000 kde.py:1(<module>)
        1    0.000    0.000    0.000    0.000 morestats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pkgutil.py:269(ImpLoader)
      2/1    0.000    0.000    0.000    0.000 {method 'seekable' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 conv.py:19(Conv1d)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:582(hypergeom_gen)
        1    0.000    0.000    0.000    0.000 tz.py:1167(_tzicalvtz)
        1    0.000    0.000    0.000    0.000 core.py:116(<listcomp>)
        1    0.000    0.000    0.000    0.000 scanner.py:2211(RoundTripScannerSC)
        1    0.000    0.000    0.000    0.000 gzip.py:80(__init__)
        1    0.000    0.000    0.000    0.000 string.py:57(Template)
        1    0.000    0.000    0.000    0.000 compat.py:187(MutableSliceableSequence)
        1    0.000    0.000    0.000    0.000 fancysets.py:24(Rationals)
        1    0.000    0.000    0.000    0.000 colors.py:509(Colormap)
        1    0.000    0.000    0.000    0.000 gammasimp.py:463(_rf)
        1    0.000    0.000    0.000    0.000 _backend.py:7(_ScipyBackend)
        1    0.000    0.000    0.000    0.000 decomp_svd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:521(ExpTransform)
        1    0.000    0.000    0.000    0.000 fir_filter_design.py:1(<module>)
        3    0.000    0.000    0.000    0.000 index_tricks.py:320(__init__)
        1    0.000    0.000    0.000    0.000 contextlib.py:344(__exit__)
        1    0.000    0.000    0.000    0.000 __init__.py:60(Quantize)
       12    0.000    0.000    0.000    0.000 comments.py:55(__call__)
        1    0.000    0.000    0.000    0.000 calculus.py:5(MatrixCalculusMethods)
        1    0.000    0.000    0.000    0.000 core.py:5097(_MultipleMatch)
        1    0.000    0.000    0.000    0.000 sets.py:2192(SymmetricDifference)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1030(planck_gen)
        1    0.000    0.000    0.000    0.000 animation.py:657(AVConvBase)
        1    0.000    0.000    0.000    0.000 _matrix_io.py:1(<module>)
        1    0.000    0.000    0.000    0.000 batchnorm.py:48(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 spglib.py:254(SpglibMagneticDataset)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:83(VmapInterpreter)
        1    0.000    0.000    0.000    0.000 polynomials.py:443(chebyshevt)
        1    0.000    0.000    0.000    0.000 kind.py:156(__new__)
        1    0.000    0.000    0.000    0.000 padding.py:341(ReplicationPad1d)
        1    0.000    0.000    0.000    0.000 core.py:5478(_update_ignorer)
        3    0.000    0.000    0.000    0.000 __init__.py:43(private_class)
        1    0.000    0.000    0.000    0.000 interface.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:394(_ymd)
       13    0.000    0.000    0.000    0.000 fromnumeric.py:195(_reshape_dispatcher)
        1    0.000    0.000    0.000    0.000 qhull.py:1(<module>)
        3    0.000    0.000    0.000    0.000 parser.py:17(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:463(SelectableGroups)
        1    0.000    0.000    0.000    0.000 function.py:16(FunctionCtx)
        1    0.000    0.000    0.000    0.000 rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 activation.py:18(Threshold)
        1    0.000    0.000    0.000    0.000 _aliases.py:147(zeros)
        1    0.000    0.000    0.000    0.000 Image.py:3689(register_open)
        1    0.000    0.000    0.000    0.000 _typing.py:36(JustInt)
        1    0.000    0.000    0.000    0.000 transformer.py:317(TransformerDecoder)
        1    0.000    0.000    0.000    0.000 linear.py:134(Bilinear)
        1    0.000    0.000    0.000    0.000 measurements.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sf_error.py:1(<module>)
        1    0.000    0.000    0.000    0.000 band_data_in.py:12(BandDataIn)
        1    0.000    0.000    0.000    0.000 structure.py:142(PeriodicNeighbor)
        1    0.000    0.000    0.000    0.000 numbers.py:2890(NegativeOne)
        1    0.000    0.000    0.000    0.000 threading.py:637(Barrier)
        1    0.000    0.000    0.000    0.000 hyper.py:918(HyperRep_log1)
        1    0.000    0.000    0.000    0.000 fancysets.py:73(Naturals)
        2    0.000    0.000    0.000    0.000 legend_handler.py:264(__init__)
        1    0.000    0.000    0.000    0.000 dok.py:1(<module>)
        1    0.000    0.000    0.000    0.000 worker.py:124(_ResumeIteration)
        1    0.000    0.000    0.000    0.000 runner.py:30(TextTestResult)
        1    0.000    0.000    0.000    0.000 headerregistry.py:276(DateHeader)
        1    0.000    0.000    0.000    0.000 mio5.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyper.py:890(HyperRep_power2)
        1    0.000    0.000    0.000    0.000 modules.py:260(FreeModuleElement)
        1    0.000    0.000    0.000    0.000 modules.py:160(ModuleElement)
        1    0.000    0.000    0.000    0.000 __init__.py:43(QuantizedEngine)
        1    0.000    0.000    0.000    0.000 mathtext.py:291(MathtextBackendSvg)
        1    0.000    0.000    0.000    0.000 dir_util.py:15(SkipRepeatAbsolutePaths)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5454(norminvgauss_gen)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:51(FuncTorchInterpreter)
        1    0.000    0.000    0.000    0.000 _gauss_kronrod.py:9(GaussKronrodQuadrature)
        4    0.000    0.000    0.000    0.000 ops.py:52(nan_if_exception)
        1    0.000    0.000    0.000    0.000 hyper.py:978(HyperRep_asin2)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1905(sinc)
       16    0.000    0.000    0.000    0.000 arraypad.py:525(_pad_dispatcher)
        1    0.000    0.000    0.000    0.000 core.py:2430(Literal)
        1    0.000    0.000    0.000    0.000 _check.py:8(AttributeTypeIsSupportedChecker)
        1    0.000    0.000    0.000    0.000 polyint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 proxy.py:53(ScopeContextManager)
        3    0.000    0.000    0.000    0.000 datetime.py:2313(_create)
       12    0.000    0.000    0.000    0.000 _pep440.py:392(_parse_letter_version)
        1    0.000    0.000    0.000    0.000 unix_events.py:1033(SafeChildWatcher)
        1    0.000    0.000    0.000    0.000 dviread.py:516(DviFont)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:508(alpha_gen)
        1    0.000    0.000    0.000    0.000 core.py:6004(Suppress)
        1    0.000    0.000    0.000    0.000 interpolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bsr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 stats.py:1(<module>)
       10    0.000    0.000    0.000    0.000 ctx_iv.py:355(_wrap_mpi_function)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:9(FunctionMatrix)
        1    0.000    0.000    0.000    0.000 _mio4.py:601(MatFile4Writer)
        1    0.000    0.000    0.000    0.000 csc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decomp_lu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _datasource.py:536(Repository)
        1    0.000    0.000    0.000    0.000 core.py:5392(SkipTo)
        1    0.000    0.000    0.000    0.000 logistic_normal.py:8(LogisticNormal)
        1    0.000    0.000    0.000    0.000 monomials.py:512(Monomial)
        1    0.000    0.000    0.000    0.000 linesearch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 complexes.py:820(conjugate)
        1    0.000    0.000    0.000    0.000 triplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutation.py:9(PermutationMatrix)
        1    0.000    0.000    0.000    0.000 special.py:10(ZeroMatrix)
        1    0.000    0.000    0.000    0.000 linalg.py:108(LinearAlgebraMethods)
        1    0.000    0.000    0.000    0.000 activation.py:52(Hardswish)
        1    0.000    0.000    0.000    0.000 immutable.py:140(ImmutableSparseMatrix)
        1    0.000    0.000    0.000    0.000 function.py:882(UndefinedFunction)
        1    0.000    0.000    0.000    0.000 shlex.py:19(shlex)
        2    0.000    0.000    0.000    0.000 polyclasses.py:1241(_new)
        2    0.000    0.000    0.000    0.000 representer.py:137(add_multi_representer)
        1    0.000    0.000    0.000    0.000 distance.py:1983(<dictcomp>)
        1    0.000    0.000    0.000    0.000 utils.py:8(IterableWrapperIterDataPipe)
        1    0.000    0.000    0.000    0.000 _arffread.py:65(Attribute)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5604(invweibull_gen)
        1    0.000    0.000    0.000    0.000 plotgrid.py:16(PlotGrid)
        1    0.000    0.000    0.000    0.000 transports.py:197(SubprocessTransport)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3134(genpareto_gen)
        1    0.000    0.000    0.000    0.000 tensor.py:1270(TensorIndex)
        1    0.000    0.000    0.000    0.000 nonlin.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gzip.py:75(_PaddedFile)
        1    0.000    0.000    0.000    0.000 scanner.py:1979(CommentBase)
        1    0.000    0.000    0.000    0.000 spfun_stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4888(invgamma_gen)
        1    0.000    0.000    0.000    0.000 expr.py:4134(ExprBuilder)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1632(TypeVar)
        1    0.000    0.000    0.000    0.000 calendar.py:74(<listcomp>)
        1    0.000    0.000    0.000    0.000 units.py:148(Unit)
        1    0.000    0.000    0.000    0.000 _arffread.py:339(RelationalAttribute)
        2    0.000    0.000    0.000    0.000 multidimensional.py:81(__init__)
        1    0.000    0.000    0.000    0.000 stackplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1557(List)
        1    0.000    0.000    0.000    0.000 collections.py:1769(PatchCollection)
        1    0.000    0.000    0.000    0.000 calendar.py:295(TextCalendar)
        1    0.000    0.000    0.000    0.000 computed_entries.py:549(ComputedStructureEntry)
        1    0.000    0.000    0.000    0.000 conv_fused.py:407(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 extras.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 events.py:189(ScalarEvent)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 scale.py:686(<listcomp>)
        2    0.000    0.000    0.000    0.000 Image.py:3754(register_extension)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1154(trigamma)
        1    0.000    0.000    0.000    0.000 ltisys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:1273(FixedQParamsObserver)
        1    0.000    0.000    0.000    0.000 ellipse.py:1477(Circle)
        1    0.000    0.000    0.000    0.000 _cubature.py:48(CubatureResult)
        1    0.000    0.000    0.000    0.000 harwell_boeing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:23(GimpPaletteFile)
        1    0.000    0.000    0.000    0.000 __init__.py:2401(_CustomTextWrap)
        1    0.000    0.000    0.000    0.000 hyper.py:1109(HyperRep_sinasin)
        1    0.000    0.000    0.000    0.000 single.py:1297(SeparableReduced)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 core.py:8376(_convert2ma)
        9    0.000    0.000    0.000    0.000 core.py:1550(<genexpr>)
        1    0.000    0.000    0.000    0.000 utils.py:163(SimpleTextIOWrapper)
        1    0.000    0.000    0.000    0.000 transforms.py:976(PositiveDefiniteTransform)
        1    0.000    0.000    0.000    0.000 conv.py:155(Conv3d)
        1    0.000    0.000    0.000    0.000 moduleTNC.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importer.py:170(_SysImporter)
        1    0.000    0.000    0.000    0.000 more.py:2880(run_length)
        1    0.000    0.000    0.000    0.000 hyper.py:1002(HyperRep_sqrts1)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4776(multivariate_t_frozen)
        1    0.000    0.000    0.000    0.000 decomp_schur.py:1(<module>)
        1    0.000    0.000    0.000    0.000 zipfile.py:2222(CompleteDirs)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6574(loggamma_gen)
        1    0.000    0.000    0.000    0.000 category.py:26(StrCategoryConverter)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6964(normal_inverse_gamma_gen)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:196(AAA)
        1    0.000    0.000    0.000    0.000 dropout.py:5(Dropout)
        1    0.000    0.000    0.000    0.000 polar.py:111(PolarAffine)
        1    0.000    0.000    0.000    0.000 _base.py:569(Executor)
        1    0.000    0.000    0.000    0.000 _typing.py:7(RingElement)
        1    0.000    0.000    0.000    0.000 _type_utils.py:338(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _tqdm_pandas.py:1(<module>)
        1    0.000    0.000    0.000    0.000 context.py:276(ForkProcess)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:188(elliptic_e)
        1    0.000    0.000    0.000    0.000 operations.py:487(LatticeOp)
        1    0.000    0.000    0.000    0.000 dataloader.py:71(_DatasetKind)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7002(gibrat_gen)
        1    0.000    0.000    0.000    0.000 json.py:713(MontyDecoder)
       32    0.000    0.000    0.000    0.000 {method 'is_dir' of 'posix.DirEntry' objects}
        1    0.000    0.000    0.000    0.000 slsqp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:7(ProjectionRegistry)
        1    0.000    0.000    0.000    0.000 py38.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ode.py:781(IntegratorBase)
        1    0.000    0.000    0.000    0.000 composition.py:1400(ChemicalPotential)
        1    0.000    0.000    0.000    0.000 activation.py:109(LeakyReLU)
        1    0.000    0.000    0.000    0.000 line.py:2362(Segment2D)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:895(_PatchedFnSetAttr)
        1    0.000    0.000    0.000    0.000 padding.py:31(ConstantPad1d)
        1    0.000    0.000    0.000    0.000 headerregistry.py:402(MIMEVersionHeader)
        2    0.000    0.000    0.000    0.000 main.py:1482(__init__)
        1    0.000    0.000    0.000    0.000 tensor.py:792(_TensorManager)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:518(Sakurai)
        1    0.000    0.000    0.000    0.000 decomp_qr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unix_events.py:593(_UnixWritePipeTransport)
        2    0.000    0.000    0.000    0.000 integerring.py:54(__eq__)
        1    0.000    0.000    0.000    0.000 bandstructure.py:909(LobsterBandStructureSymmLine)
        4    0.000    0.000    0.000    0.000 typing.py:442(__init__)
        4    0.000    0.000    0.000    0.000 sympify.py:28(__init__)
        1    0.000    0.000    0.000    0.000 loss.py:1614(CTCLoss)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:639(ignore)
        1    0.000    0.000    0.000    0.000 backend_tools.py:926(ToolPan)
        1    0.000    0.000    0.000    0.000 colors.py:102(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1132(burr_gen)
        1    0.000    0.000    0.000    0.000 dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 diophantine.py:1029(GeneralPythagorean)
        6    0.000    0.000    0.000    0.000 sdm.py:85(<genexpr>)
        1    0.000    0.000    0.000    0.000 fitpack2.py:1(<module>)
        3    0.000    0.000    0.000    0.000 units.py:808(wrap)
        3    0.000    0.000    0.000    0.000 __init__.py:428(__init__)
        1    0.000    0.000    0.000    0.000 backend_registration.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:302(<dictcomp>)
       12    0.000    0.000    0.000    0.000 message.py:633(get_default_type)
        1    0.000    0.000    0.000    0.000 ase.py:55(MSONAtoms)
        1    0.000    0.000    0.000    0.000 cnf.py:15(Literal)
        1    0.000    0.000    0.000    0.000 colors.py:861(ListedColormap)
        4    0.000    0.000    0.000    0.000 polynomial.py:1218(_coeffs)
        1    0.000    0.000    0.000    0.000 construct.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathml.py:21(MathMLPrinterBase)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:159(ChunkStream)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8974(rdist_gen)
        1    0.000    0.000    0.000    0.000 ElementTree.py:525(ElementTree)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3936(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2511(f_gen)
        1    0.000    0.000    0.000    0.000 units.py:682(_my_partial)
        1    0.000    0.000    0.000    0.000 transforms.py:900(StickBreakingTransform)
        1    0.000    0.000    0.000    0.000 flatten.py:9(Flatten)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:14(TorchDispatchMode)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:27(ExecutionStats)
        1    0.000    0.000    0.000    0.000 tricontour.py:8(TriContourSet)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:25(lerchphi)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1506(XMLParser)
        1    0.000    0.000    0.000    0.000 outputs.py:194(BandgapProps)
        1    0.000    0.000    0.000    0.000 tarfile.py:600(_FileInFile)
        1    0.000    0.000    0.000    0.000 compat.py:38(ordereddict)
        1    0.000    0.000    0.000    0.000 spectral.py:1(<module>)
        1    0.000    0.000    0.000    0.000 complexes.py:696(arg)
        1    0.000    0.000    0.000    0.000 scale.py:26(ScaleBase)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:902(logser_gen)
        1    0.000    0.000    0.000    0.000 _resampling.py:257(BootstrapResult)
        1    0.000    0.000    0.000    0.000 coo.py:1(<module>)
        8    0.000    0.000    0.000    0.000 animation.py:106(register)
        1    0.000    0.000    0.000    0.000 _arffread.py:95(NominalAttribute)
        1    0.000    0.000    0.000    0.000 widgets.py:91(AxesWidget)
       12    0.000    0.000    0.000    0.000 distance.py:1814(<lambda>)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:330(_constant)
        1    0.000    0.000    0.000    0.000 sharding.py:25(ShardingFilterIterDataPipe)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6247(levy_gen)
        1    0.000    0.000    0.000    0.000 linear_relu.py:6(LinearReLU)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:197(betabinom_gen)
        1    0.000    0.000    0.000    0.000 instancenorm.py:9(_InstanceNorm)
        1    0.000    0.000    0.000    0.000 tnc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 representer.py:383(Representer)
        1    0.000    0.000    0.000    0.000 tensor.py:4578(WildTensorHead)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3816(gengamma_gen)
        1    0.000    0.000    0.000    0.000 lil.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hadamard.py:41(HadamardProduct)
        1    0.000    0.000    0.000    0.000 polyoptions.py:602(Symmetric)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:181(_ndptr)
        1    0.000    0.000    0.000    0.000 _windows.py:2509(<listcomp>)
        1    0.000    0.000    0.000    0.000 distributed.py:164(_DDPSink)
        1    0.000    0.000    0.000    0.000 piecewise.py:19(ExprCondPair)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11743(argus_gen)
        1    0.000    0.000    0.000    0.000 callable.py:18(MapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 ImageFile.py:458(StubImageFile)
        1    0.000    0.000    0.000    0.000 csr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3858(random_correlation_gen)
        1    0.000    0.000    0.000    0.000 binrel.py:135(AppliedBinaryRelation)
        1    0.000    0.000    0.000    0.000 frontend.py:519(WithItemBuilder)
        1    0.000    0.000    0.000    0.000 core.py:4491(Each)
        1    0.000    0.000    0.000    0.000 _rbf.py:55(Rbf)
        6    0.000    0.000    0.000    0.000 deprecation.py:81(_deprecated)
        1    0.000    0.000    0.000    0.000 _parser.py:219(_resultbase)
        1    0.000    0.000    0.000    0.000 _covariance.py:538(CovViaCholesky)
        1    0.000    0.000    0.000    0.000 specfun.py:1(<module>)
        7    0.000    0.000    0.000    0.000 {method 'truncate' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 _util.py:1062(_RichResult)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:8(PixelShuffle)
        1    0.000    0.000    0.000    0.000 error_functions.py:2327(FresnelIntegral)
        1    0.000    0.000    0.000    0.000 parse.py:353(_fix_result_transcoding)
        1    0.000    0.000    0.000    0.000 __init__.py:408(Deprecated)
        1    0.000    0.000    0.000    0.000 threading.py:1005(_set_native_id)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7066(maxwell_gen)
        2    0.000    0.000    0.000    0.000 {method 'cache_clear' of 'functools._lru_cache_wrapper' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 pydoc.py:1129(__init__)
        1    0.000    0.000    0.000    0.000 base.py:28(OdeSolver)
        1    0.000    0.000    0.000    0.000 core.py:3782(WordStart)
        1    0.000    0.000    0.000    0.000 bessel.py:1880(airybiprime)
        6    0.000    0.000    0.000    0.000 sdm.py:83(<genexpr>)
        1    0.000    0.000    0.000    0.000 mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 outputs.py:3894(Locpot)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1962(dweibull_gen)
        1    0.000    0.000    0.000    0.000 _linprog_doc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polynomials.py:889(assoc_legendre)
        1    0.000    0.000    0.000    0.000 activation.py:1408(Softmax)
        1    0.000    0.000    0.000    0.000 streamplot.py:365(StreamMask)
        6    0.000    0.000    0.000    0.000 profiler_util.py:348(_attr_formatter)
        1    0.000    0.000    0.000    0.000 random.py:215(__init_subclass__)
        6    0.000    0.000    0.000    0.000 core.py:3614(<genexpr>)
        1    0.000    0.000    0.000    0.000 mock.py:2891(PropertyMock)
        1    0.000    0.000    0.000    0.000 polynomials.py:1210(laguerre)
        1    0.000    0.000    0.000    0.000 polar.py:144(InvertedPolarTransform)
        2    0.000    0.000    0.000    0.000 domain.py:846(__eq__)
        1    0.000    0.000    0.000    0.000 dataframes.py:371(CaptureDataFrameWithDataPipeOps)
        1    0.000    0.000    0.000    0.000 _multivariate.py:877(multivariate_normal_frozen)
        4    0.000    0.000    0.000    0.000 dataclasses.py:566(<genexpr>)
        1    0.000    0.000    0.000    0.000 outputs.py:3920(Chgcar)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:509(LinearLR)
        1    0.000    0.000    0.000    0.000 colors.py:956(Normalize)
        1    0.000    0.000    0.000    0.000 comments.py:654(CommentedMapKeysView)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:11(SparseNDimArray)
        1    0.000    0.000    0.000    0.000 dataset.py:181(TensorDataset)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:232(LinearTriInterpolator)
        1    0.000    0.000    0.000    0.000 image.py:841(AxesImage)
        1    0.000    0.000    0.000    0.000 index_tricks.py:530(__init__)
        1    0.000    0.000    0.000    0.000 instancenorm.py:385(LazyInstanceNorm3d)
        1    0.000    0.000    0.000    0.000 interpnd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:404(ToolQuitAll)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:253(iTXt)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:54(_Storage)
        5    0.000    0.000    0.000    0.000 core.py:3142(re_match)
        1    0.000    0.000    0.000    0.000 mathtext.py:378(Fonts)
        1    0.000    0.000    0.000    0.000 waveforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 platform.py:739(_Processor)
        1    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:503(_MissingDynamic)
        1    0.000    0.000    0.000    0.000 relational.py:752(Unequality)
        1    0.000    0.000    0.000    0.000 permutation.py:168(MatrixPermute)
        1    0.000    0.000    0.000    0.000 hb.py:44(HBInfo)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:8(ChannelShuffle)
        1    0.000    0.000    0.000    0.000 error_functions.py:1669(Li)
        1    0.000    0.000    0.000    0.000 setupcfg.py:520(ConfigMetadataHandler)
        1    0.000    0.000    0.000    0.000 bessel.py:940(jn)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:234(<lambda>)
        1    0.000    0.000    0.000    0.000 docinfo.py:25(Version)
        1    0.000    0.000    0.000    0.000 bezier.py:182(BezierSegment)
        1    0.000    0.000    0.000    0.000 _VF.py:22(__init__)
        1    0.000    0.000    0.000    0.000 conv.py:1470(LazyConvTranspose2d)
        1    0.000    0.000    0.000    0.000 mio5_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _typing.py:72(HasShape)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3448(atan2)
        1    0.000    0.000    0.000    0.000 _compression.py:33(DecompressReader)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:865(loggamma)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:13(ScalarFloat)
        1    0.000    0.000    0.000    0.000 polynomials.py:1006(hermite)
        1    0.000    0.000    0.000    0.000 ImageFile.py:488(Parser)
        3    0.000    0.000    0.000    0.000 rcsetup.py:520(_update_savefig_format)
        1    0.000    0.000    0.000    0.000 lti_conversion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:11(HessianUpdateStrategy)
        1    0.000    0.000    0.000    0.000 _typing.py:210(_DataPipeType)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7199(kappa4_gen)
        1    0.000    0.000    0.000    0.000 charset.py:167(Charset)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:842(SupportsInt)
        1    0.000    0.000    0.000    0.000 diophantine.py:146(DiophantineEquationType)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3112(_moment_methods)
        1    0.000    0.000    0.000    0.000 getlimits.py:32(MachArLike)
        1    0.000    0.000    0.000    0.000 _utils.py:25(EventMetrics)
        3    0.000    0.000    0.000    0.000 rcsetup.py:541(validate_ps_distiller)
        1    0.000    0.000    0.000    0.000 streams.py:181(StreamReaderProtocol)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:42(LeviCivita)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7963(t_gen)
        6    0.000    0.000    0.000    0.000 conflict.py:37(<genexpr>)
        1    0.000    0.000    0.000    0.000 threading.py:359(notify)
        3    0.000    0.000    0.000    0.000 <frozen _collections_abc>:812(__init__)
        1    0.000    0.000    0.000    0.000 more.py:270(peekable)
        1    0.000    0.000    0.000    0.000 field.py:8(Field)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10754(tukeylambda_gen)
        1    0.000    0.000    0.000    0.000 formal.py:958(Coeff)
        1    0.000    0.000    0.000    0.000 patches.py:2923(_Curve)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:211(AddrlistClass)
        1    0.000    0.000    0.000    0.000 trigonometric.py:45(TrigonometricFunction)
        1    0.000    0.000    0.000    0.000 constraints.py:550(_Stack)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1384(TreeBuilder)
        1    0.000    0.000    0.000    0.000 main.py:1477(YAMLObjectMetaclass)
        1    0.000    0.000    0.000    0.000 Image.py:521(SupportsGetData)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1686(cosine_gen)
        1    0.000    0.000    0.000    0.000 conv_relu.py:69(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 _rules.py:42(_MissingCustomSymbolicFunction)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:584(dirichlet_eta)
        2    0.000    0.000    0.000    0.000 weakref.py:352(__init__)
        1    0.000    0.000    0.000    0.000 hyper.py:1031(HyperRep_sqrts2)
        1    0.000    0.000    0.000    0.000 scalarstring.py:23(ScalarString)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2380(fatiguelife_gen)
        1    0.000    0.000    0.000    0.000 special.py:174(GenericIdentity)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:20(VisitingDistribution)
        4    0.000    0.000    0.000    0.000 results.py:266(__len__)
        1    0.000    0.000    0.000    0.000 _svdp.py:50(_AProd)
        1    0.000    0.000    0.000    0.000 error_functions.py:1765(TrigonometricIntegral)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:103(ksone_gen)
        1    0.000    0.000    0.000    0.000 bn_relu.py:48(BNReLU3d)
        3    0.000    0.000    0.000    0.000 _utils.py:7(_get_device_index)
        1    0.000    0.000    0.000    0.000 hb.py:414(HBFile)
        4    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:403(_some_attrgetter)
        7    0.000    0.000    0.000    0.000 numeric.py:1455(<listcomp>)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:608(G_Function)
        1    0.000    0.000    0.000    0.000 polynomials.py:773(legendre)
        3    0.000    0.000    0.000    0.000 _add_docstring.py:11(add_newdoc)
        1    0.000    0.000    0.000    0.000 docinfo.py:95(Tag)
        1    0.000    0.000    0.000    0.000 polynomials.py:28(OrthogonalPolynomial)
        1    0.000    0.000    0.000    0.000 single.py:1046(SecondNonlinearAutonomousConserved)
        1    0.000    0.000    0.000    0.000 index_tricks.py:255(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:792(is_absolute)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4200(gompertz_gen)
        4    0.000    0.000    0.000    0.000 timeutils.py:53(timethis)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:282(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:117(<listcomp>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:160(ToolToggleBase)
        1    0.000    0.000    0.000    0.000 _fit.py:41(FitResult)
        1    0.000    0.000    0.000    0.000 _mio4.py:107(VarReader4)
        1    0.000    0.000    0.000    0.000 _cubature.py:535(_VariableTransform)
        1    0.000    0.000    0.000    0.000 _dok.py:589(dok_matrix)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1511(chi_gen)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:160(MutableDenseNDimArray)
        1    0.000    0.000    0.000    0.000 headerregistry.py:327(AddressHeader)
        1    0.000    0.000    0.000    0.000 _pep440.py:149(__ge__)
        1    0.000    0.000    0.000    0.000 grad_mode.py:258(_force_original_view_tracking)
        1    0.000    0.000    0.000    0.000 compressed.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _info.py:33(__array_namespace_info__)
        1    0.000    0.000    0.000    0.000 _compression.py:16(_check_can_read)
        1    0.000    0.000    0.000    0.000 dataloader.py:661(_SingleProcessDataLoaderIter)
        1    0.000    0.000    0.000    0.000 polynomials.py:1108(hermite_prob)
        1    0.000    0.000    0.000    0.000 factorials.py:383(factorial2)
        1    0.000    0.000    0.000    0.000 _arraytools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 textpath.py:336(TextPath)
        1    0.000    0.000    0.000    0.000 events.py:610(AbstractEventLoopPolicy)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5258(SymmetricPermutationGroup)
        1    0.000    0.000    0.000    0.000 _pep440.py:165(LegacyVersion)
        1    0.000    0.000    0.000    0.000 header.py:541(_Accumulator)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2172(_sum_dispatcher)
        1    0.000    0.000    0.000    0.000 bessel.py:1723(airyaiprime)
        1    0.000    0.000    0.000    0.000 tensor.py:4928(_WildTensExpr)
        1    0.000    0.000    0.000    0.000 __init__.py:858(Prepared)
        1    0.000    0.000    0.000    0.000 backend_tools.py:319(ToolCursorPosition)
        1    0.000    0.000    0.000    0.000 mock.py:2441(__new__)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:171(MatrixPowerOperator)
        1    0.000    0.000    0.000    0.000 rnn.py:1043(GRUCell)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:94(RelaxedBernoulli)
        1    0.000    0.000    0.000    0.000 zipfile.py:782(_Tellable)
        5    0.000    0.000    0.000    0.000 six.py:186(_get_module)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4881(multivariate_hypergeom_gen)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1384(<listcomp>)
        1    0.000    0.000    0.000    0.000 filelist.py:335(_UniqueDirs)
        1    0.000    0.000    0.000    0.000 function.py:263(BackwardCFunction)
        1    0.000    0.000    0.000    0.000 __init__.py:732(Context)
        1    0.000    0.000    0.000    0.000 exp_family.py:6(ExponentialFamily)
        1    0.000    0.000    0.000    0.000 extension.py:38(Extension)
        1    0.000    0.000    0.000    0.000 dataloader.py:567(_BaseDataLoaderIter)
        1    0.000    0.000    0.000    0.000 utils.py:183(DisableOnWriteError)
        1    0.000    0.000    0.000    0.000 __init__.py:329(SymBool)
        1    0.000    0.000    0.000    0.000 ImageFile.py:449(StubHandler)
        1    0.000    0.000    0.000    0.000 linear_relu.py:116(LinearTanh)
        1    0.000    0.000    0.000    0.000 pathlib.py:129(<setcomp>)
        1    0.000    0.000    0.000    0.000 units.py:153(DecimalConverter)
        2    0.000    0.000    0.000    0.000 _parser.py:96(checkgroup)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2062(_num_parameterizations)
        9    0.000    0.000    0.000    0.000 core.py:4247(<genexpr>)
        1    0.000    0.000    0.000    0.000 function.py:826(AppliedUndef)
        1    0.000    0.000    0.000    0.000 _polyint.py:19(_Interpolator1D)
        1    0.000    0.000    0.000    0.000 batchnorm.py:78(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 utils.py:97(lazy_property)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5508(FoldedDistribution)
        1    0.000    0.000    0.000    0.000 lazy.py:53(LazyModuleMixin)
        1    0.000    0.000    0.000    0.000 sequences.py:1020(SeqAdd)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:52(normcase)
        1    0.000    0.000    0.000    0.000 subprocess.py:115(Process)
        1    0.000    0.000    0.000    0.000 widgets.py:63(Widget)
        1    0.000    0.000    0.000    0.000 outputs.py:3969(Elfcar)
        1    0.000    0.000    0.000    0.000 polar.py:464(_ThetaShift)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3282(ToolContainerBase)
        1    0.000    0.000    0.000    0.000 orderings.py:10(MonomialOrder)
        1    0.000    0.000    0.000    0.000 more.py:3665(callback_iter)
        1    0.000    0.000    0.000    0.000 autograd_function.py:536(CtxWithSavedTensors)
        1    0.000    0.000    0.000    0.000 sg_operation.py:11(SpaceGroupOp)
        1    0.000    0.000    0.000    0.000 facts.py:257(Prover)
        1    0.000    0.000    0.000    0.000 hierarchy.py:1105(__init__)
        1    0.000    0.000    0.000    0.000 Image.py:3018(ImagePointHandler)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:408(Pow)
        1    0.000    0.000    0.000    0.000 constraints.py:328(_GreaterThanEq)
        1    0.000    0.000    0.000    0.000 bessel.py:2044(marcumq)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 epathtools.py:6(EPath)
        1    0.000    0.000    0.000    0.000 mg_operation.py:10(MagneticGroupOp)
        1    0.000    0.000    0.000    0.000 hyper.py:1062(HyperRep_log2)
        1    0.000    0.000    0.000    0.000 special.py:68(GenericZeroMatrix)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1395(_TensorExtractor)
        1    0.000    0.000    0.000    0.000 core.py:1283(_replace_dtype_fields_recursive)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1567(poisson_binom_gen)
        1    0.000    0.000    0.000    0.000 sets.py:2261(DisjointUnion)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:688(MikotaM)
        1    0.000    0.000    0.000    0.000 polyoptions.py:327(Sort)
        1    0.000    0.000    0.000    0.000 mock.py:1084(CallableMixin)
        1    0.000    0.000    0.000    0.000 loss.py:301(GaussianNLLLoss)
        1    0.000    0.000    0.000    0.000 tensor.py:1597(TensorType)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5932(landau_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9591(skewcauchy_gen)
        1    0.000    0.000    0.000    0.000 request.py:426(OpenerDirector)
        1    0.000    0.000    0.000    0.000 normalization.py:198(GroupNorm)
        1    0.000    0.000    0.000    0.000 trirefine.py:47(UniformTriRefiner)
        1    0.000    0.000    0.000    0.000 blocking_input.py:330(BlockingKeyMouseInput)
        1    0.000    0.000    0.000    0.000 memmap.py:22(memmap)
        1    0.000    0.000    0.000    0.000 _type_utils.py:293(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2972(weibull_max_gen)
        1    0.000    0.000    0.000    0.000 padding.py:173(_ReflectionPadNd)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5135(geninvgauss_gen)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:261(FixedQParamsFakeQuantize)
        1    0.000    0.000    0.000    0.000 factorials.py:664(FallingFactorial)
        3    0.000    0.000    0.000    0.000 {built-in method time.time}
        2    0.000    0.000    0.000    0.000 __init__.py:87(__setattr__)
        1    0.000    0.000    0.000    0.000 polynomials.py:561(chebyshevu)
        1    0.000    0.000    0.000    0.000 relational.py:909(GreaterThan)
        1    0.000    0.000    0.000    0.000 outputs.py:3699(VolumetricData)
        1    0.000    0.000    0.000    0.000 band_data_out.py:9(BandDataOut)
        1    0.000    0.000    0.000    0.000 backend_tools.py:444(ToolGrid)
        1    0.000    0.000    0.000    0.000 ssl.py:159(TLSVersion)
        1    0.000    0.000    0.000    0.000 ring.py:9(Ring)
        1    0.000    0.000    0.000    0.000 _fortran.py:33(FortranFile)
        1    0.000    0.000    0.000    0.000 diagonal.py:9(DiagonalMatrix)
        1    0.000    0.000    0.000    0.000 observer.py:520(MovingAverageMinMaxObserver)
        1    0.000    0.000    0.000    0.000 numbers.py:3825(GoldenRatio)
        1    0.000    0.000    0.000    0.000 dviread.py:955(Encoding)
        1    0.000    0.000    0.000    0.000 computed_entries.py:168(CompositionEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 numbers.py:1729(udivisor_sigma)
        1    0.000    0.000    0.000    0.000 partitions.py:308(IntegerPartition)
        1    0.000    0.000    0.000    0.000 polar.py:720(_WedgeBbox)
        1    0.000    0.000    0.000    0.000 observer.py:1311(PlaceholderObserver)
        1    0.000    0.000    0.000    0.000 numbers.py:1490(andre)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:751(Protocol)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5401(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:1662(divisor_sigma)
        1    0.000    0.000    0.000    0.000 ticker.py:2735(LogitLocator)
        1    0.000    0.000    0.000    0.000 evalf.py:1560(EvalfMixin)
        1    0.000    0.000    0.000    0.000 animation.py:534(PillowWriter)
        1    0.000    0.000    0.000    0.000 animation.py:561(FFMpegBase)
        1    0.000    0.000    0.000    0.000 numbers.py:1604(partition)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:40(ExportDiagnostic)
        1    0.000    0.000    0.000    0.000 pyplot.py:92(<dictcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:758(is_url)
        1    0.000    0.000    0.000    0.000 assumptions.py:464(StdFactKB)
        1    0.000    0.000    0.000    0.000 fourier.py:475(FiniteFourierSeries)
        1    0.000    0.000    0.000    0.000 linear.py:208(LazyLinear)
        1    0.000    0.000    0.000    0.000 polyoptions.py:648(Formal)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4186(__init__)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:757(MikotaK)
        1    0.000    0.000    0.000    0.000 backend_tools.py:694(ToolHome)
        1    0.000    0.000    0.000    0.000 functions.py:89(defun_static)
        1    0.000    0.000    0.000    0.000 reduction.py:251(AbstractReducer)
        1    0.000    0.000    0.000    0.000 __init__.py:764(Grouper)
        1    0.000    0.000    0.000    0.000 pooling.py:497(AvgPool1d)
        3    0.000    0.000    0.000    0.000 datetime.py:46(_days_before_year)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9471(recipinvgauss_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:196(kstwo_gen)
        2    0.000    0.000    0.000    0.000 constraints.py:315(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:1421(_DummyThread)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:81(ExportDiagnosticEngine)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6351(levy_l_gen)
        1    0.000    0.000    0.000    0.000 relational.py:1150(LessThan)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:870(Terminal)
        1    0.000    0.000    0.000    0.000 _lbfgsb_py.py:513(LbfgsInvHessProduct)
        1    0.000    0.000    0.000    0.000 tools.py:38(typed)
        1    0.000    0.000    0.000    0.000 puiseux.py:59(PuiseuxRing)
        1    0.000    0.000    0.000    0.000 conv_fused.py:539(ConvBnReLU2d)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:293(kstwobign_gen)
        1    0.000    0.000    0.000    0.000 runners.py:21(Runner)
        1    0.000    0.000    0.000    0.000 ticker.py:2903(AutoMinorLocator)
        1    0.000    0.000    0.000    0.000 header.py:179(Header)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9274(rice_gen)
        1    0.000    0.000    0.000    0.000 line.py:2670(Ray3D)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1367(StructuredVoidFormat)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7864(ncf_gen)
        1    0.000    0.000    0.000    0.000 dropout.py:8(_DropoutNd)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9528(semicircular_gen)
        1    0.000    0.000    0.000    0.000 _interface.py:846(IdentityOperator)
        1    0.000    0.000    0.000    0.000 headerregistry.py:468(ContentTypeHeader)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_TextToBytesWrapper)
        3    0.000    0.000    0.000    0.000 wrappers.py:204(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9998(triang_gen)
        1    0.000    0.000    0.000    0.000 _cubic.py:569(CubicSpline)
        1    0.000    0.000    0.000    0.000 timeit.py:84(Timer)
        1    0.000    0.000    0.000    0.000 loss.py:1032(CrossEntropyLoss)
        6    0.000    0.000    0.000    0.000 core.py:5906(postParse)
        1    0.000    0.000    0.000    0.000 polynomials.py:45(jacobi)
        1    0.000    0.000    0.000    0.000 sequences.py:415(SeqExpr)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:12(WilcoxonDistribution)
        3    0.000    0.000    0.000    0.000 __init__.py:421(<genexpr>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:123(_PSD)
        1    0.000    0.000    0.000    0.000 graph.py:607(_PyTreeCodeGen)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:965(__new__)
        1    0.000    0.000    0.000    0.000 complexes.py:954(adjoint)
        1    0.000    0.000    0.000    0.000 determinant.py:9(Determinant)
        1    0.000    0.000    0.000    0.000 mathtext.py:755(UnicodeFonts)
        1    0.000    0.000    0.000    0.000 _vertex.py:247(VertexCacheField)
        1    0.000    0.000    0.000    0.000 quadrature.py:5(QuadratureRule)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4387(TransformedDistribution)
        1    0.000    0.000    0.000    0.000 collections.py:1190(BrokenBarHCollection)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8917(powernorm_gen)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:721(MimeParameters)
        1    0.000    0.000    0.000    0.000 modules.py:286(FreeModule)
        1    0.000    0.000    0.000    0.000 boolalg.py:856(Not)
        1    0.000    0.000    0.000    0.000 polyoptions.py:512(Split)
        1    0.000    0.000    0.000    0.000 __init__.py:936(setLevel)
        1    0.000    0.000    0.000    0.000 category.py:133(StrCategoryFormatter)
        1    0.000    0.000    0.000    0.000 _policybase.py:18(_PolicyBase)
        1    0.000    0.000    0.000    0.000 _cubature.py:589(_InfiniteLimitsTransform)
        1    0.000    0.000    0.000    0.000 _arffread.py:256(DateAttribute)
        1    0.000    0.000    0.000    0.000 modules.py:1106(SubModulePolyRing)
        1    0.000    0.000    0.000    0.000 error_functions.py:912(erfcinv)
        1    0.000    0.000    0.000    0.000 factorials.py:503(RisingFactorial)
        1    0.000    0.000    0.000    0.000 conv.py:90(Conv2d)
        1    0.000    0.000    0.000    0.000 mathtext.py:2107(Ship)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:238(_Interval)
        1    0.000    0.000    0.000    0.000 comments.py:692(CommentedMapValuesView)
        1    0.000    0.000    0.000    0.000 graph.py:214(PythonCode)
        1    0.000    0.000    0.000    0.000 transforms.py:2106(BlendedGenericTransform)
        1    0.000    0.000    0.000    0.000 activation.py:1492(LogSoftmax)
        1    0.000    0.000    0.000    0.000 animation.py:1452(ArtistAnimation)
        1    0.000    0.000    0.000    0.000 radau.py:179(Radau)
        2    0.000    0.000    0.000    0.000 __init__.py:132(DistutilsLoader)
        1    0.000    0.000    0.000    0.000 mock.py:2069(MagicMixin)
        1    0.000    0.000    0.000    0.000 transports.py:9(BaseTransport)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:420(TrueDiv)
        1    0.000    0.000    0.000    0.000 unix_events.py:1212(MultiLoopChildWatcher)
        1    0.000    0.000    0.000    0.000 {built-in method _ctypes.byref}
        1    0.000    0.000    0.000    0.000 client.py:1398(HTTPSConnection)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6468(__init__)
        1    0.000    0.000    0.000    0.000 _nonlin.py:454(InverseJacobian)
        4    0.000    0.000    0.000    0.000 core.py:3417(dtype)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:60(PixelUnshuffle)
        1    0.000    0.000    0.000    0.000 polyoptions.py:621(Auto)
        1    0.000    0.000    0.000    0.000 package_importer.py:662(_PackageNode)
        1    0.000    0.000    0.000    0.000 six.py:169(_SixMetaPathImporter)
        1    0.000    0.000    0.000    0.000 modules.py:1847(ModuleEndomorphism)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:20(LambdaPrinter)
        1    0.000    0.000    0.000    0.000 normalization.py:81(InstanceNorm1d)
        1    0.000    0.000    0.000    0.000 feedparser.py:45(BufferedSubFile)
        1    0.000    0.000    0.000    0.000 transforms.py:2088(_BlendedMixin)
        1    0.000    0.000    0.000    0.000 pycode.py:765(<dictcomp>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:402(MultiStepLR)
       12    0.000    0.000    0.000    0.000 core.py:970(clear)
        1    0.000    0.000    0.000    0.000 dist.py:75(__getattr__)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1390(zipfian_gen)
        1    0.000    0.000    0.000    0.000 backend_tools.py:1030(ToolCopyToClipboardBase)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:444(MatrixHomomorphism)
       10    0.000    0.000    0.000    0.000 contextlib.py:65(_recreate_cm)
        1    0.000    0.000    0.000    0.000 normalization.py:63(CrossMapLRN2d)
        2    0.000    0.000    0.000    0.000 pyplot.py:211(_get_required_interactive_framework)
        1    0.000    0.000    0.000    0.000 _pep440.py:45(Infinity)
        1    0.000    0.000    0.000    0.000 spglib.py:365(SpaceGroupType)
        2    0.000    0.000    0.000    0.000 constraints.py:332(__init__)
        1    0.000    0.000    0.000    0.000 serialization.py:294(_open_zipfile_writer_buffer)
        7    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISDIR}
        1    0.000    0.000    0.000    0.000 threading.py:103(_RLock)
        1    0.000    0.000    0.000    0.000 __init__.py:23(get_projection_names)
        1    0.000    0.000    0.000    0.000 complexes.py:1105(periodic_argument)
        1    0.000    0.000    0.000    0.000 loss.py:228(PoissonNLLLoss)
        1    0.000    0.000    0.000    0.000 dataframes.py:417(DataFrameTracer)
        2    0.000    0.000    0.000    0.000 cache.py:183(LazyFunctionMeta)
        1    0.000    0.000    0.000    0.000 extras.py:213(_fromnxfunction)
        1    0.000    0.000    0.000    0.000 __init__.py:61(get_calls)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1849(_nchypergeom_gen)
        1    0.000    0.000    0.000    0.000 equality.py:25(EqualityPredicate)
        1    0.000    0.000    0.000    0.000 _resampling.py:740(MonteCarloTestResult)
        1    0.000    0.000    0.000    0.000 widgets.py:2647(Lasso)
        4    0.000    0.000    0.000    0.000 _array_api.py:131(array_namespace)
        1    0.000    0.000    0.000    0.000 boolalg.py:1370(ITE)
        1    0.000    0.000    0.000    0.000 activation.py:199(MultiheadAttention)
        1    0.000    0.000    0.000    0.000 computed_entries.py:112(ConstantEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 _expm_multiply.py:396(LazyOperatorNormInfo)
        1    0.000    0.000    0.000    0.000 dataset.py:252(ChainDataset)
        1    0.000    0.000    0.000    0.000 observer.py:804(MovingAveragePerChannelMinMaxObserver)
        1    0.000    0.000    0.000    0.000 core.py:376(dtype)
        3    0.000    0.000    0.000    0.000 units.py:791(unitized)
        4    0.000    0.000    0.000    0.000 math2.py:42(_mathfun)
        2    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getArchFlags}
        1    0.000    0.000    0.000    0.000 decoder.py:236(MatHandler)
        1    0.000    0.000    0.000    0.000 collections.py:934(PathCollection)
        1    0.000    0.000    0.000    0.000 conv_fused.py:458(ConvReLU1d)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:765(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:30(_get_logging_handler)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:24(mathieus)
        1    0.000    0.000    0.000    0.000 test.py:56(<listcomp>)
        1    0.000    0.000    0.000    0.000 line.py:1578(Segment)
        1    0.000    0.000    0.000    0.000 numbers.py:1037(euler)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1783(DraggableOffsetBox)
        1    0.000    0.000    0.000    0.000 backend_tools.py:248(SetCursorBase)
        1    0.000    0.000    0.000    0.000 numbers.py:2194(reduced_totient)
        1    0.000    0.000    0.000    0.000 periodic_table.py:852(_ElementMeta)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1255(multigamma)
        1    0.000    0.000    0.000    0.000 encoder.py:74(JSONEncoder)
        1    0.000    0.000    0.000    0.000 __init__.py:44(__init__)
        1    0.000    0.000    0.000    0.000 core.py:5202(_generateDefaultName)
        4    0.000    0.000    0.000    0.000 numbers.py:2871(__neg__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5777(johnsonsb_gen)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1197(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:4862(AtLineStart)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1171(randint_gen)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:75(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 error_functions.py:819(erfinv)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1490(KeyEvent)
        1    0.000    0.000    0.000    0.000 dropout.py:62(Dropout1d)
        1    0.000    0.000    0.000    0.000 ElementTree.py:477(QName)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:103(ExponentialCapsFloat)
        1    0.000    0.000    0.000    0.000 _adapters.py:48(SpecPath)
        1    0.000    0.000    0.000    0.000 argparse.py:691(ArgumentDefaultsHelpFormatter)
        1    0.000    0.000    0.000    0.000 single.py:2012(SecondHypergeometric)
        1    0.000    0.000    0.000    0.000 cm.py:75(_DeprecatedCmapDictWrapper)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:913(WhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 mathtext.py:1899(GlueSpec)
        1    0.000    0.000    0.000    0.000 comments.py:230(LineCol)
        1    0.000    0.000    0.000    0.000 activation.py:80(ELU)
        1    0.000    0.000    0.000    0.000 polyoptions.py:543(Extension)
        1    0.000    0.000    0.000    0.000 rrule.py:94(rrulebase)
        1    0.000    0.000    0.000    0.000 pycode.py:837(SymPyPrinter)
        1    0.000    0.000    0.000    0.000 cnf.py:77(OR)
        1    0.000    0.000    0.000    0.000 zipfile.py:1131(_ZipWriteFile)
        1    0.000    0.000    0.000    0.000 headerregistry.py:504(ContentTransferEncodingHeader)
        1    0.000    0.000    0.000    0.000 polynomials.py:290(gegenbauer)
        1    0.000    0.000    0.000    0.000 numbers.py:2954(Half)
        1    0.000    0.000    0.000    0.000 backend_tools.py:459(ToolMinorGrid)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1140(_fdat)
        1    0.000    0.000    0.000    0.000 colorsys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _base.py:154(FixedRule)
        1    0.000    0.000    0.000    0.000 loader.py:77(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:226(insert_shim)
        1    0.000    0.000    0.000    0.000 para4band.py:330(<listcomp>)
        3    0.000    0.000    0.000    0.000 utils.py:17(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:169(<listcomp>)
        1    0.000    0.000    0.000    0.000 tableform.py:9(TableForm)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:964(create_module)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:683(Max)
        1    0.000    0.000    0.000    0.000 loss.py:1336(MultiMarginLoss)
       11    0.000    0.000    0.000    0.000 {built-in method io.text_encoding}
        1    0.000    0.000    0.000    0.000 text.py:1243(OffsetFrom)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:36(_BarycentricRational)
        1    0.000    0.000    0.000    0.000 __init__.py:531(__init__)
        1    0.000    0.000    0.000    0.000 beta_functions.py:173(betainc)
        1    0.000    0.000    0.000    0.000 dataframes.py:282(CaptureSetItem)
        1    0.000    0.000    0.000    0.000 _ops.py:418(OpOverloadPacket)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:30(<dictcomp>)
        1    0.000    0.000    0.000    0.000 kind.py:181(__new__)
        1    0.000    0.000    0.000    0.000 gruntz.py:155(SubsSet)
        1    0.000    0.000    0.000    0.000 rnn.py:40(RNNCellBase)
        1    0.000    0.000    0.000    0.000 backend_tools.py:474(ToolFullScreen)
        1    0.000    0.000    0.000    0.000 scanner.py:2044(ScannedComments)
        1    0.000    0.000    0.000    0.000 sequences.py:378(EmptySequence)
        1    0.000    0.000    0.000    0.000 _parser.py:661(_result)
        1    0.000    0.000    0.000    0.000 transforms.py:2624(AffineDeltaTransform)
        1    0.000    0.000    0.000    0.000 events.py:161(AbstractServer)
        1    0.000    0.000    0.000    0.000 fold.py:156(Unfold)
        1    0.000    0.000    0.000    0.000 _morestats.py:2625(_ABW)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6099(laplace_asymmetric_gen)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:801(Min)
        1    0.000    0.000    0.000    0.000 conv_fused.py:763(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 limits.py:132(Limit)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:19(RelativeRiskResult)
        1    0.000    0.000    0.000    0.000 string.py:188(Formatter)
        1    0.000    0.000    0.000    0.000 normalization.py:46(GroupNorm)
        1    0.000    0.000    0.000    0.000 Image.py:468(ImagePointTransform)
        1    0.000    0.000    0.000    0.000 selectors.py:290(SelectSelector)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2443(__init__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:810(__len__)
        1    0.000    0.000    0.000    0.000 _docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:227(_TLSMessageType)
        1    0.000    0.000    0.000    0.000 companion.py:8(CompanionMatrix)
        1    0.000    0.000    0.000    0.000 _functools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matrices.py:747(MatrixMethods)
        1    0.000    0.000    0.000    0.000 dos.py:622(DosFingerprint)
        1    0.000    0.000    0.000    0.000 _policybase.py:271(Compat32)
        3    0.000    0.000    0.000    0.000 _version.py:78(_compare_version)
        1    0.000    0.000    0.000    0.000 _ops.py:44(PyOperatorABC)
        1    0.000    0.000    0.000    0.000 linear.py:21(Identity)
        1    0.000    0.000    0.000    0.000 rnn.py:492(GRU)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1104(boltzmann_gen)
        1    0.000    0.000    0.000    0.000 _typing.py:44(JustFloat)
        1    0.000    0.000    0.000    0.000 relational.py:827(_Inequality)
        1    0.000    0.000    0.000    0.000 ticker.py:923(LogFormatter)
        1    0.000    0.000    0.000    0.000 wavfile.py:31(SeekEmulatingReader)
        1    0.000    0.000    0.000    0.000 _mio4.py:461(VarWriter4)
        1    0.000    0.000    0.000    0.000 observer.py:52(_PartialWrapper)
        1    0.000    0.000    0.000    0.000 optimization.py:7(OptimizationMethods)
        1    0.000    0.000    0.000    0.000 _trace.py:565(TracerWarning)
        1    0.000    0.000    0.000    0.000 transforms.py:2460(BboxTransform)
        1    0.000    0.000    0.000    0.000 core.py:190(<listcomp>)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:76(_interpolate)
        5    0.000    0.000    0.000    0.000 datetime.py:51(_days_in_month)
        1    0.000    0.000    0.000    0.000 expand.py:379(EnsurePackagesDiscovered)
        1    0.000    0.000    0.000    0.000 distance.py:56(CosineSimilarity)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1162(MeijerUnShiftA)
        1    0.000    0.000    0.000    0.000 context.py:220(Process)
        1    0.000    0.000    0.000    0.000 backend_tools.py:728(SaveFigureBase)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4297(PearsonRResult)
        1    0.000    0.000    0.000    0.000 polynomials.py:1320(assoc_laguerre)
        1    0.000    0.000    0.000    0.000 complexes.py:1233(principal_branch)
        1    0.000    0.000    0.000    0.000 _functions.py:37(ReduceAddCoalesced)
        1    0.000    0.000    0.000    0.000 comments.py:591(CommentedKeySeq)
        1    0.000    0.000    0.000    0.000 observer.py:1393(NoopObserver)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9889(trapezoid_gen)
        1    0.000    0.000    0.000    0.000 function.py:252(_HookMixin)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:860(SupportsComplex)
        1    0.000    0.000    0.000    0.000 _trace.py:1111(TracedModule)
        1    0.000    0.000    0.000    0.000 padding.py:184(ReflectionPad1d)
        3    0.000    0.000    0.000    0.000 utils.py:16(<genexpr>)
        1    0.000    0.000    0.000    0.000 _ops.py:116(__init__)
        1    0.000    0.000    0.000    0.000 markers.py:52(Environment)
        1    0.000    0.000    0.000    0.000 index_tricks.py:717(IndexExpression)
        1    0.000    0.000    0.000    0.000 abc.py:43(Finder)
        1    0.000    0.000    0.000    0.000 unix_events.py:902(PidfdChildWatcher)
        1    0.000    0.000    0.000    0.000 weak.py:37(WeakIdRef)
        1    0.000    0.000    0.000    0.000 _elffile.py:41(ELFFile)
        1    0.000    0.000    0.000    0.000 chi2.py:6(Chi2)
        1    0.000    0.000    0.000    0.000 transforms.py:2598(ScaledTranslation)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12129(studentized_range_gen)
        1    0.000    0.000    0.000    0.000 complexes.py:897(transpose)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:310(elliptic_pi)
        1    0.000    0.000    0.000    0.000 __config__.py:98(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:1696(AffineBase)
        1    0.000    0.000    0.000    0.000 datetime.py:1280(IsoCalendarDate)
        1    0.000    0.000    0.000    0.000 docinfo.py:112(DocInfo)
        1    0.000    0.000    0.000    0.000 equality.py:113(StrictGreaterThanPredicate)
        1    0.000    0.000    0.000    0.000 fancysets.py:239(Reals)
        9    0.000    0.000    0.000    0.000 typing.py:495(__repr__)
        3    0.000    0.000    0.000    0.000 tag.py:25(__init__)
        1    0.000    0.000    0.000    0.000 activation.py:68(ReLU)
        1    0.000    0.000    0.000    0.000 argparse.py:1047(_AppendConstAction)
        1    0.000    0.000    0.000    0.000 _optimize.py:61(MemoizeJac)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2249(exponweib_gen)
        1    0.000    0.000    0.000    0.000 cnf.py:394(EncodedCNF)
        2    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        1    0.000    0.000    0.000    0.000 pathlib.py:231(_PosixFlavour)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11491(halfgennorm_gen)
        1    0.000    0.000    0.000    0.000 transforms.py:1169(CumulativeDistributionTransform)
        1    0.000    0.000    0.000    0.000 _functions.py:180(CrossMapLRN2d)
        1    0.000    0.000    0.000    0.000 tempfile.py:416(_TemporaryFileCloser)
        1    0.000    0.000    0.000    0.000 numbers.py:1849(jacobi_symbol)
        3    0.000    0.000    0.000    0.000 core.py:1362(getmask)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:72(_override_resolve_out_shapes)
        1    0.000    0.000    0.000    0.000 offsetbox.py:770(TextArea)
        1    0.000    0.000    0.000    0.000 blas.py:249(<dictcomp>)
        1    0.000    0.000    0.000    0.000 datapipes.py:42(ConcatDataFramesPipe)
        1    0.000    0.000    0.000    0.000 activation.py:110(RReLU)
        1    0.000    0.000    0.000    0.000 kind.py:165(_BooleanKind)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:928(_BivariateSplineBase)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:13(ExprWithIntLimits)
        1    0.000    0.000    0.000    0.000 boolalg.py:281(BooleanTrue)
        1    0.000    0.000    0.000    0.000 normalization.py:121(InstanceNorm2d)
        1    0.000    0.000    0.000    0.000 _classes.py:18(_Classes)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:402(betanbinom_gen)
        1    0.000    0.000    0.000    0.000 ordinals.py:5(OmegaPower)
        1    0.000    0.000    0.000    0.000 padding.py:225(ReflectionPad2d)
        1    0.000    0.000    0.000    0.000 calendar.py:412(HTMLCalendar)
        1    0.000    0.000    0.000    0.000 subprocess.py:163(TimeoutExpired)
        1    0.000    0.000    0.000    0.000 pooling.py:249(_MaxUnpoolNd)
        1    0.000    0.000    0.000    0.000 numbers.py:2039(primenu)
        4    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.000    0.000    0.000    0.000 conv_fused.py:590(ConvReLU2d)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:25(_maybe_view_as_subclass)
        1    0.000    0.000    0.000    0.000 csv.py:23(Dialect)
        1    0.000    0.000    0.000    0.000 _ops.py:115(PyOperator)
        7    0.000    0.000    0.000    0.000 typing.py:406(__init_subclass__)
        1    0.000    0.000    0.000    0.000 beta_functions.py:282(betainc_regularized)
        1    0.000    0.000    0.000    0.000 selectors.py:206(_BaseSelectorImpl)
        1    0.000    0.000    0.000    0.000 transforms.py:2562(BboxTransformFrom)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5674(jf_skew_t_gen)
        1    0.000    0.000    0.000    0.000 random.py:784(SystemRandom)
        1    0.000    0.000    0.000    0.000 version.py:45(Version)
        1    0.000    0.000    0.000    0.000 logic.py:320(AndOr_Base)
        7    0.000    0.000    0.000    0.000 __init__.py:176(is_initialized)
        1    0.000    0.000    0.000    0.000 _ode.py:1209(dop853)
        1    0.000    0.000    0.000    0.000 __init__.py:7(Warning)
        1    0.000    0.000    0.000    0.000 complexes.py:1020(polar_lift)
        8    0.000    0.000    0.000    0.000 six.py:80(_add_doc)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:864(Rem)
        1    0.000    0.000    0.000    0.000 loss.py:539(BCELoss)
        1    0.000    0.000    0.000    0.000 patches.py:2850(_Base)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:343(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 single.py:443(FirstExact)
        1    0.000    0.000    0.000    0.000 fused.py:113(BNReLU3d)
        1    0.000    0.000    0.000    0.000 records.py:223(record)
        1    0.000    0.000    0.000    0.000 tensor.py:4849(WildTensorIndex)
        1    0.000    0.000    0.000    0.000 backend_tools.py:504(ToolYScale)
        1    0.000    0.000    0.000    0.000 response.py:68(addinfourl)
        1    0.000    0.000    0.000    0.000 version.py:69(_BaseVersion)
        1    0.000    0.000    0.000    0.000 __init__.py:123(DeprecatedTuple)
        1    0.000    0.000    0.000    0.000 modules.py:1005(SubQuotientModule)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1087(CyclicLR)
        1    0.000    0.000    0.000    0.000 axis.py:409(XTick)
        2    0.000    0.000    0.000    0.000 glob.py:108(<genexpr>)
        1    0.000    0.000    0.000    0.000 ticker.py:183(_DummyAxis)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1483(dlaplace_gen)
        1    0.000    0.000    0.000    0.000 records.py:308(recarray)
        1    0.000    0.000    0.000    0.000 tempfile.py:132(_RandomNameSequence)
        1    0.000    0.000    0.000    0.000 tz.py:1253(tzical)
        1    0.000    0.000    0.000    0.000 padding.py:277(ReflectionPad3d)
        1    0.000    0.000    0.000    0.000 numbers.py:2252(primepi)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:26(LRScheduler)
        1    0.000    0.000    0.000    0.000 core.py:6735(_extrema_operation)
        1    0.000    0.000    0.000    0.000 widgets.py:2443(PolygonSelector)
        1    0.000    0.000    0.000    0.000 _input_validation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sym_operation.py:4(SymOp)
        1    0.000    0.000    0.000    0.000 _factories.py:9(__init__)
        1    0.000    0.000    0.000    0.000 widgets.py:25(LockDraw)
        1    0.000    0.000    0.000    0.000 sequences.py:1126(SeqMul)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:86(mathieuc)
        1    0.000    0.000    0.000    0.000 numbers.py:2091(primeomega)
        1    0.000    0.000    0.000    0.000 _comparison.py:74(<dictcomp>)
        6    0.000    0.000    0.000    0.000 fuser_method_mappings.py:153(_sequential_wrapper2)
        1    0.000    0.000    0.000    0.000 _rbfinterp.py:134(RBFInterpolator)
        1    0.000    0.000    0.000    0.000 sequences.py:466(SeqPer)
        1    0.000    0.000    0.000    0.000 selector_events.py:1126(_SelectorDatagramTransport)
        1    0.000    0.000    0.000    0.000 numbers.py:3961(EulerGamma)
        1    0.000    0.000    0.000    0.000 _VF.py:19(VFModule)
        1    0.000    0.000    0.000    0.000 mathtext.py:137(MathtextBackendAgg)
        1    0.000    0.000    0.000    0.000 _resampling.py:2105(MonteCarloMethod)
        5    0.000    0.000    0.000    0.000 transforms.py:224(_noconds_)
        1    0.000    0.000    0.000    0.000 pickle.py:200(_Framer)
        1    0.000    0.000    0.000    0.000 graph_drawer.py:322(FxGraphDrawer)
        1    0.000    0.000    0.000    0.000 __init__.py:230(_remove_shim)
        1    0.000    0.000    0.000    0.000 _optimize.py:2439(Brent)
        1    0.000    0.000    0.000    0.000 backend_registry.py:74(<dictcomp>)
        1    0.000    0.000    0.000    0.000 tz.py:874(tzrange)
        1    0.000    0.000    0.000    0.000 hyper.py:937(HyperRep_atanh)
        1    0.000    0.000    0.000    0.000 batchnorm.py:519(LazyBatchNorm3d)
        1    0.000    0.000    0.000    0.000 para4band.py:331(<listcomp>)
        1    0.000    0.000    0.000    0.000 _hypotests.py:705(SomersDResult)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:267(Znm)
        2    0.000    0.000    0.000    0.000 constraints.py:366(__init__)
        1    0.000    0.000    0.000    0.000 request.py:1080(AbstractDigestAuthHandler)
        4    0.000    0.000    0.000    0.000 expr.py:3570(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 normalization.py:161(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 boolalg.py:397(BooleanFalse)
        1    0.000    0.000    0.000    0.000 _contextlib.py:120(_DecoratorContextManager)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2149(exponnorm_gen)
        1    0.000    0.000    0.000    0.000 _common.py:6(weekday)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3117(_zero)
        1    0.000    0.000    0.000    0.000 stubs.py:38(QuantWrapper)
        1    0.000    0.000    0.000    0.000 diagonal.py:86(DiagonalOf)
        1    0.000    0.000    0.000    0.000 bandstructure.py:707(BandStructureSymmLine)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1189(BivariateSpline)
        1    0.000    0.000    0.000    0.000 net_min_base.py:58(_MinimizerSettingBase)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1385(matrix_normal_frozen)
        1    0.000    0.000    0.000    0.000 transports.py:251(_FlowControlMixin)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:913(Reader)
        1    0.000    0.000    0.000    0.000 laplace.py:1267(LaplaceTransform)
        1    0.000    0.000    0.000    0.000 fnmatch.py:12(WildCard)
        1    0.000    0.000    0.000    0.000 mathtext.py:82(MathtextBackend)
        1    0.000    0.000    0.000    0.000 numbers.py:2144(totient)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1001(_DOF_estimator)
        1    0.000    0.000    0.000    0.000 patches.py:2349(Roundtooth)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5342(Coset)
        1    0.000    0.000    0.000    0.000 legend_handler.py:652(__init__)
        1    0.000    0.000    0.000    0.000 _ode.py:1049(zvode)
        1    0.000    0.000    0.000    0.000 resolver.py:303(VersionedResolver)
        1    0.000    0.000    0.000    0.000 _cm.py:66(cubehelix)
        1    0.000    0.000    0.000    0.000 cse_main.py:345(Unevaluated)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2324(exponpow_gen)
        1    0.000    0.000    0.000    0.000 polyoptions.py:576(Modulus)
        1    0.000    0.000    0.000    0.000 scanner.py:1730(RoundTripScanner)
        1    0.000    0.000    0.000    0.000 numbers.py:277(lucas)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:96(ExpFormat)
        1    0.000    0.000    0.000    0.000 series.py:1229(List2DSeries)
        6    0.000    0.000    0.000    0.000 core.py:846(__init__)
        1    0.000    0.000    0.000    0.000 colors.py:1174(LogNorm)
        1    0.000    0.000    0.000    0.000 _mangling.py:9(PackageMangler)
        1    0.000    0.000    0.000    0.000 Files_out.py:2(FilesOut)
        1    0.000    0.000    0.000    0.000 numbers.py:1801(legendre_symbol)
        1    0.000    0.000    0.000    0.000 pycode.py:89(<dictcomp>)
        1    0.000    0.000    0.000    0.000 line.py:2160(Ray2D)
        1    0.000    0.000    0.000    0.000 error_functions.py:995(erf2inv)
        2    0.000    0.000    0.000    0.000 constraint_registry.py:83(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:783(CorrCholeskyTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:199(strict_fusion)
        1    0.000    0.000    0.000    0.000 _infra.py:203(ThreadFlowLocation)
        3    0.000    0.000    0.000    0.000 __init__.py:1319(disable)
        1    0.000    0.000    0.000    0.000 combining.py:238(_ChildDataPipe)
        2    0.000    0.000    0.000    0.000 _adapters.py:16(__getattr__)
        1    0.000    0.000    0.000    0.000 constraints.py:186(_IndependentConstraint)
        1    0.000    0.000    0.000    0.000 enumerative.py:92(PartComponent)
        1    0.000    0.000    0.000    0.000 mathtext.py:1731(Vlist)
        1    0.000    0.000    0.000    0.000 _parser.py:15(Node)
        1    0.000    0.000    0.000    0.000 colorbar.py:229(_ColorbarAutoLocator)
        1    0.000    0.000    0.000    0.000 _iotools.py:133(LineSplitter)
        1    0.000    0.000    0.000    0.000 bdf.py:72(BDF)
        1    0.000    0.000    0.000    0.000 padding.py:475(ZeroPad2d)
        1    0.000    0.000    0.000    0.000 polyoptions.py:271(Gens)
        1    0.000    0.000    0.000    0.000 backend_tools.py:703(ToolBack)
        2    0.000    0.000    0.000    0.000 decorator.py:120(__init__)
        1    0.000    0.000    0.000    0.000 distributed.py:194(_DDPJoinHook)
        1    0.000    0.000    0.000    0.000 hyper.py:29(TupleArg)
        1    0.000    0.000    0.000    0.000 _guards.py:78(ShapeGuard)
        1    0.000    0.000    0.000    0.000 util.py:6(assoc)
        1    0.000    0.000    0.000    0.000 relational.py:1167(StrictGreaterThan)
        1    0.000    0.000    0.000    0.000 _binomtest.py:10(BinomTestResult)
        1    0.000    0.000    0.000    0.000 _kdtree.py:327(innernode)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:667(riemann_xi)
        1    0.000    0.000    0.000    0.000 loader.py:71(RoundTripLoader)
        3    0.000    0.000    0.000    0.000 __init__.py:919(__init__)
        1    0.000    0.000    0.000    0.000 shape_prop.py:68(ShapeProp)
        1    0.000    0.000    0.000    0.000 formal.py:1543(FormalPowerSeriesProduct)
        1    0.000    0.000    0.000    0.000 utils.py:138(ObjectWrapper)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1272(XMLPullParser)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:13(ReentrancyLock)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:61(_override_key)
        1    0.000    0.000    0.000    0.000 _stats_py.py:5955(TtestResult)
        1    0.000    0.000    0.000    0.000 Bravais_Lattice.py:10(bravaislattice)
        1    0.000    0.000    0.000    0.000 numbers.py:1920(kronecker_symbol)
        1    0.000    0.000    0.000    0.000 numbers.py:4020(Catalan)
        3    0.000    0.000    0.000    0.000 core.py:806(__init__)
        1    0.000    0.000    0.000    0.000 arpack.py:990(IterOpInv)
        1    0.000    0.000    0.000    0.000 json.py:552(MontyEncoder)
        1    0.000    0.000    0.000    0.000 version.py:38(_Version)
        1    0.000    0.000    0.000    0.000 pydoc.py:523(HTMLRepr)
        1    0.000    0.000    0.000    0.000 relational.py:1185(StrictLessThan)
        1    0.000    0.000    0.000    0.000 formal.py:1690(FormalPowerSeriesInverse)
        1    0.000    0.000    0.000    0.000 _resampling.py:981(PowerResult)
        1    0.000    0.000    0.000    0.000 _util.py:597(MapWrapper)
        1    0.000    0.000    0.000    0.000 loss.py:219(NLLLoss2d)
        3    0.000    0.000    0.000    0.000 __init__.py:504(CFunctionType)
        1    0.000    0.000    0.000    0.000 getlimits.py:630(iinfo)
        1    0.000    0.000    0.000    0.000 backend_tools.py:514(ToolXScale)
        1    0.000    0.000    0.000    0.000 matrixbase.py:5400(DeferredVector)
        1    0.000    0.000    0.000    0.000 function.py:966(WildFunction)
        6    0.000    0.000    0.000    0.000 iterables.py:858(<genexpr>)
        1    0.000    0.000    0.000    0.000 containers.py:339(OrderedSet)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2447(_UnpackAlias)
        1    0.000    0.000    0.000    0.000 _guards.py:354(Source)
        1    0.000    0.000    0.000    0.000 bz2.py:140(writable)
        1    0.000    0.000    0.000    0.000 padding.py:330(_ReplicationPadNd)
        1    0.000    0.000    0.000    0.000 data_parallel.py:42(DataParallel)
        1    0.000    0.000    0.000    0.000 _constraints.py:127(LinearConstraint)
        1    0.000    0.000    0.000    0.000 observer.py:1419(ReuseInputObserver)
        1    0.000    0.000    0.000    0.000 results.py:22(_ParseResultsWithOffset)
        1    0.000    0.000    0.000    0.000 rules.py:5(Transform)
        1    0.000    0.000    0.000    0.000 _rules.py:92(_OperatorSupportedInNewerOpsetVersion)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:985(__new__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:245(multi_rv_frozen)
        1    0.000    0.000    0.000    0.000 core.py:4223(Or)
        1    0.000    0.000    0.000    0.000 error_functions.py:2759(_eis)
        1    0.000    0.000    0.000    0.000 outputs.py:1766(BSVasprun)
        1    0.000    0.000    0.000    0.000 __init__.py:154(HTTPMethod)
        1    0.000    0.000    0.000    0.000 hub.py:20(_Faketqdm)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:897(SupportsRound)
        1    0.000    0.000    0.000    0.000 single.py:294(SinglePatternODESolver)
        1    0.000    0.000    0.000    0.000 parameters.py:60(__init__)
        1    0.000    0.000    0.000    0.000 core.py:2362(_PendingSkip)
        1    0.000    0.000    0.000    0.000 numbers.py:1959(mobius)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:413(_EnsurePackagesDiscovered)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3915(genhalflogistic_gen)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:505(IsNonOverlappingAndDenseIndicator)
        1    0.000    0.000    0.000    0.000 _vertex.py:75(VertexScalarField)
        1    0.000    0.000    0.000    0.000 due.py:22(InactiveDueCreditCollector)
        1    0.000    0.000    0.000    0.000 cse_main.py:218(FuncArgTracker)
        1    0.000    0.000    0.000    0.000 response.py:14(addbase)
        1    0.000    0.000    0.000    0.000 __init__.py:488(StringTemplateStyle)
        1    0.000    0.000    0.000    0.000 _resampling.py:1314(PermutationTestResult)
        1    0.000    0.000    0.000    0.000 _constraints.py:227(Bounds)
        1    0.000    0.000    0.000    0.000 index_tricks.py:562(__init__)
        1    0.000    0.000    0.000    0.000 _root_scalar.py:20(MemoizeDer)
        1    0.000    0.000    0.000    0.000 axis.py:482(YTick)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:207(ProductOperator)
        1    0.000    0.000    0.000    0.000 emitter.py:57(Indents)
        1    0.000    0.000    0.000    0.000 _infra.py:230(Graph)
        1    0.000    0.000    0.000    0.000 conv.py:1264(LazyConv2d)
        1    0.000    0.000    0.000    0.000 core.py:2589(MaskedIterator)
        1    0.000    0.000    0.000    0.000 threading.py:264(__enter__)
        4    0.000    0.000    0.000    0.000 function_base.py:1800(_trim_zeros)
        1    0.000    0.000    0.000    0.000 pyplot.py:514(_xkcd)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2512(wishart_frozen)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:538(AddWithLimits)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:930(Writer)
        1    0.000    0.000    0.000    0.000 transforms.py:107(__init__)
        1    0.000    0.000    0.000    0.000 suite.py:92(TestSuite)
        1    0.000    0.000    0.000    0.000 rnn.py:1248(GRUCell)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1304(OffsetImage)
        1    0.000    0.000    0.000    0.000 _base.py:245(NestedFixedRule)
        1    0.000    0.000    0.000    0.000 diagonal.py:157(DiagMatrix)
        1    0.000    0.000    0.000    0.000 gui.py:24(tqdm_gui)
        1    0.000    0.000    0.000    0.000 polyoptions.py:684(Gen)
        1    0.000    0.000    0.000    0.000 setupcfg.py:759(_AmbiguousMarker)
        1    0.000    0.000    0.000    0.000 headerregistry.py:439(ParameterizedMIMEHeader)
        1    0.000    0.000    0.000    0.000 __init__.py:1198(is_interactive)
        4    0.000    0.000    0.000    0.000 utils.py:8(_ntuple)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7134(mielke_gen)
        1    0.000    0.000    0.000    0.000 server_process_global_profiler.py:16(_server_process_global_profile)
        1    0.000    0.000    0.000    0.000 factor_.py:740(maxsize)
        1    0.000    0.000    0.000    0.000 _script.py:1534(_ScriptProfile)
        1    0.000    0.000    0.000    0.000 _decorator.py:11(functional_datapipe)
        1    0.000    0.000    0.000    0.000 process.py:364(_ParentProcess)
        1    0.000    0.000    0.000    0.000 _resampling.py:2082(ResamplingMethod)
        1    0.000    0.000    0.000    0.000 _factories.py:13(__call__)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:8(Printable)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_converter}
        1    0.000    0.000    0.000    0.000 fake_tensor.py:64(DynamicOutputShapeException)
        1    0.000    0.000    0.000    0.000 expand.py:422(LazyMappingProxy)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:611(arcsine_gen)
        1    0.000    0.000    0.000    0.000 equality.py:161(GreaterThanPredicate)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11024(_SimpleNormal)
        1    0.000    0.000    0.000    0.000 polyoptions.py:258(Expand)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:344(ArrayComprehensionMap)
        1    0.000    0.000    0.000    0.000 dates.py:947(rrulewrapper)
        1    0.000    0.000    0.000    0.000 sequences.py:611(SeqFormula)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:385(NameAddr)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:17(DCSRCH)
        2    0.000    0.000    0.000    0.000 compat.py:113(__init__)
        1    0.000    0.000    0.000    0.000 headerregistry.py:490(ContentDispositionHeader)
        1    0.000    0.000    0.000    0.000 discovery.py:179(PEP420PackageFinder)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:113(Unpickler)
        3    0.000    0.000    0.000    0.000 {method 'toordinal' of 'datetime.date' objects}
        1    0.000    0.000    0.000    0.000 inputs.py:1919(Orbital)
        1    0.000    0.000    0.000    0.000 _infra.py:167(StackFrame)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1295(zipf_gen)
        1    0.000    0.000    0.000    0.000 reductions.py:22(StorageWeakRef)
        1    0.000    0.000    0.000    0.000 torch_version.py:6(_LazyImport)
        1    0.000    0.000    0.000    0.000 mathtext.py:3324(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:156(__init__)
        1    0.000    0.000    0.000    0.000 request.py:2399(ftpwrapper)
        1    0.000    0.000    0.000    0.000 art3d.py:375(Patch3DCollection)
        1    0.000    0.000    0.000    0.000 _idl.py:629(AttrDict)
        1    0.000    0.000    0.000    0.000 transports.py:72(WriteTransport)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1832(dirichlet_frozen)
        1    0.000    0.000    0.000    0.000 boolalg.py:1202(Implies)
        1    0.000    0.000    0.000    0.000 colorbar.py:262(_ColorbarAutoMinorLocator)
        1    0.000    0.000    0.000    0.000 scalarbool.py:21(ScalarBoolean)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:782(_make_node_sizes_strides)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:280(PngInfo)
        1    0.000    0.000    0.000    0.000 _backend.py:412(Dispatchable)
        1    0.000    0.000    0.000    0.000 lsoda.py:7(LSODA)
        1    0.000    0.000    0.000    0.000 _collections.py:27(Pair)
        1    0.000    0.000    0.000    0.000 line.py:2429(LinearEntity3D)
        1    0.000    0.000    0.000    0.000 _nonlin.py:843(BroydenFirst)
        1    0.000    0.000    0.000    0.000 _typing.py:52(JustComplex)
        1    0.000    0.000    0.000    0.000 TiffTags.py:32(TagInfo)
        1    0.000    0.000    0.000    0.000 _guards.py:216(DuplicateInputs)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1997(_interpolate)
        4    0.000    0.000    0.000    0.000 _ops.py:129(py_impl)
        1    0.000    0.000    0.000    0.000 batchnorm.py:186(_LazyNormBase)
        1    0.000    0.000    0.000    0.000 context.py:283(SpawnProcess)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2632(foldnorm_gen)
        1    0.000    0.000    0.000    0.000 loss.py:35(L1Loss)
        1    0.000    0.000    0.000    0.000 unix_events.py:1426(_UnixDefaultEventLoopPolicy)
        1    0.000    0.000    0.000    0.000 __init__.py:303(device)
        1    0.000    0.000    0.000    0.000 dates.py:1697(MicrosecondLocator)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:9(use_reflection)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:148(mathieusprime)
        1    0.000    0.000    0.000    0.000 request.py:645(HTTPRedirectHandler)
        1    0.000    0.000    0.000    0.000 utilities.py:166(AlgIntPowers)
        1    0.000    0.000    0.000    0.000 inputs.py:1927(OrbitalDescription)
        1    0.000    0.000    0.000    0.000 request.py:1588(CacheFTPHandler)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1615(_ShapeInfo)
        1    0.000    0.000    0.000    0.000 streamplot.py:249(DomainMap)
        1    0.000    0.000    0.000    0.000 printer.py:388(_PrintFunction)
        1    0.000    0.000    0.000    0.000 _arffread.py:170(NumericAttribute)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:367(errstate)
        1    0.000    0.000    0.000    0.000 more.py:941(bucket)
        1    0.000    0.000    0.000    0.000 package_exporter.py:103(_PatternInfo)
        1    0.000    0.000    0.000    0.000 para4band.py:82(Para4Band)
        6    0.000    0.000    0.000    0.000 version.py:471(_parse_letter_version)
        1    0.000    0.000    0.000    0.000 _decorator.py:148(runtime_validation_disabled)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3061(invwishart_frozen)
        1    0.000    0.000    0.000    0.000 library.py:18(Library)
        1    0.000    0.000    0.000    0.000 queues.py:218(PriorityQueue)
        1    0.000    0.000    0.000    0.000 collections.py:1102(PolyCollection)
        1    0.000    0.000    0.000    0.000 spawn.py:12(ProcessException)
        1    0.000    0.000    0.000    0.000 transforms.py:89(__init__)
        1    0.000    0.000    0.000    0.000 batchnorm.py:121(_BatchNorm)
        1    0.000    0.000    0.000    0.000 single.py:1203(Separable)
        1    0.000    0.000    0.000    0.000 python.py:10(PythonPrinter)
        1    0.000    0.000    0.000    0.000 _constraints.py:309(PreparedConstraint)
        1    0.000    0.000    0.000    0.000 core.py:255(InputGenerator)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:9(detect_anomaly)
        1    0.000    0.000    0.000    0.000 comments.py:671(CommentedMapItemsView)
        1    0.000    0.000    0.000    0.000 context.py:230(DefaultContext)
        1    0.000    0.000    0.000    0.000 __init__.py:41(_LazySeedTracker)
        1    0.000    0.000    0.000    0.000 outputs.py:5528(Eigenval)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:80(_override_finalize_out)
        1    0.000    0.000    0.000    0.000 art3d.py:293(Patch3D)
        1    0.000    0.000    0.000    0.000 single.py:912(RiccatiSpecial)
        1    0.000    0.000    0.000    0.000 torch_version.py:41(TorchVersion)
        1    0.000    0.000    0.000    0.000 transforms.py:1428(HankelTypeTransform)
        1    0.000    0.000    0.000    0.000 csv.py:130(DictWriter)
        1    0.000    0.000    0.000    0.000 autograd_function.py:547(CtxCustomSave)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:18(Storage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4829(gausshyper_gen)
        1    0.000    0.000    0.000    0.000 dispatcher.py:366(MethodDispatcher)
        1    0.000    0.000    0.000    0.000 _trace.py:75(ONNXTracedModule)
        1    0.000    0.000    0.000    0.000 request.py:834(HTTPPasswordMgr)
        1    0.000    0.000    0.000    0.000 polar.py:362(ThetaAxis)
        1    0.000    0.000    0.000    0.000 padding.py:382(ReplicationPad2d)
        1    0.000    0.000    0.000    0.000 spglib.py:402(MagneticSpaceGroupType)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1175(DiagBroyden)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:49(IncrementRecursionCount)
        1    0.000    0.000    0.000    0.000 request.py:908(HTTPPasswordMgrWithPriorAuth)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1105(_ListDataStream)
        1    0.000    0.000    0.000    0.000 unix_events.py:1107(FastChildWatcher)
        9    0.000    0.000    0.000    0.000 _globals.py:58(__repr__)
        3    0.000    0.000    0.000    0.000 <frozen _collections_abc>:98(__subclasshook__)
        1    0.000    0.000    0.000    0.000 timeutils.py:40(<listcomp>)
        1    0.000    0.000    0.000    0.000 _internal.py:616(_Stream)
        3    0.000    0.000    0.000    0.000 libmpf.py:663(mpf_neg)
        1    0.000    0.000    0.000    0.000 _adapters.py:83(ChildPath)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1702(TukeyHSDResult)
        1    0.000    0.000    0.000    0.000 graph.py:247(_node_list)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:775(_Parameterization)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:12(PageTrendTestResult)
        1    0.000    0.000    0.000    0.000 qconfig.py:106(QConfigDynamic)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:210(mathieucprime)
        1    0.000    0.000    0.000    0.000 polyoptions.py:711(Symbols)
        1    0.000    0.000    0.000    0.000 _survival.py:469(LogRankResult)
        1    0.000    0.000    0.000    0.000 equality.py:69(UnequalityPredicate)
        1    0.000    0.000    0.000    0.000 importer.py:183(OrderedImporter)
        1    0.000    0.000    0.000    0.000 locks.py:219(Condition)
        1    0.000    0.000    0.000    0.000 grad_mode.py:164(inference_mode)
        1    0.000    0.000    0.000    0.000 legend_handler.py:43(HandlerBase)
        1    0.000    0.000    0.000    0.000 ImageMode.py:24(ModeDescriptor)
        1    0.000    0.000    0.000    0.000 __init__.py:2111(_OrderedSet)
        1    0.000    0.000    0.000    0.000 ssl.py:154(<dictcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:1402(LazyConvTranspose1d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:851(SupportsFloat)
        6    0.000    0.000    0.000    0.000 _common.py:13(tzname_in_python2)
        1    0.000    0.000    0.000    0.000 backend_tools.py:712(ToolForward)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1232(_Sparse_Matrix_coo)
        1    0.000    0.000    0.000    0.000 configparser.py:168(Error)
        1    0.000    0.000    0.000    0.000 __init__.py:2317(JupyterHTMLStr)
        1    0.000    0.000    0.000    0.000 scale.py:334(FuncScaleLog)
        1    0.000    0.000    0.000    0.000 line.py:1987(Line2D)
        1    0.000    0.000    0.000    0.000 loss.py:1179(MultiLabelSoftMarginLoss)
        1    0.000    0.000    0.000    0.000 activation.py:807(Softplus)
        1    0.000    0.000    0.000    0.000 grad_mode.py:9(no_grad)
        1    0.000    0.000    0.000    0.000 constraints.py:515(_Cat)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1701(skellam_gen)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:455(Mailbox)
        1    0.000    0.000    0.000    0.000 sparse.py:462(MutableSparseMatrix)
        1    0.000    0.000    0.000    0.000 _rules.py:182(_FxFrontendAotautograd)
        1    0.000    0.000    0.000    0.000 arpack.py:389(_SymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 codeprinter.py:18(requires)
        2    0.000    0.000    0.000    0.000 pathlib.py:53(__init__)
        1    0.000    0.000    0.000    0.000 hb.py:375(<dictcomp>)
        1    0.000    0.000    0.000    0.000 analyzer.py:1691(SpacegroupOperations)
        1    0.000    0.000    0.000    0.000 polar.py:269(ThetaTick)
        1    0.000    0.000    0.000    0.000 cnf.py:109(AND)
        1    0.000    0.000    0.000    0.000 version.py:78(__lt__)
        1    0.000    0.000    0.000    0.000 _rules.py:62(_MissingStandardSymbolicFunction)
        4    0.000    0.000    0.000    0.000 numbers.py:1444(_eval_is_zero)
        1    0.000    0.000    0.000    0.000 graphs.py:118(graph)
        1    0.000    0.000    0.000    0.000 threading.py:1317(_make_invoke_excepthook)
        1    0.000    0.000    0.000    0.000 polynomials.py:728(chebyshevu_root)
        1    0.000    0.000    0.000    0.000 _comparison.py:414(NonePair)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11039(_SimpleChi2)
        1    0.000    0.000    0.000    0.000 kl.py:80(_Match)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:626(_ProtocolMeta)
        1    0.000    0.000    0.000    0.000 offsetbox.py:918(AuxTransformBox)
        1    0.000    0.000    0.000    0.000 _functions.py:52(Gather)
        1    0.000    0.000    0.000    0.000 forward_ad.py:190(_set_fwd_grad_enabled)
        1    0.000    0.000    0.000    0.000 selectors.py:442(EpollSelector)
        1    0.000    0.000    0.000    0.000 _parser.py:50(ParsedRequirement)
        1    0.000    0.000    0.000    0.000 hyper.py:1129(appellf1)
        1    0.000    0.000    0.000    0.000 comments.py:204(Format)
        2    0.000    0.000    0.000    0.000 constraints.py:290(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5288(multivariate_hypergeom_frozen)
        1    0.000    0.000    0.000    0.000 _base.py:1554(sparray)
        1    0.000    0.000    0.000    0.000 rootoftools.py:38(_pure_key_dict)
        1    0.000    0.000    0.000    0.000 _rules.py:126(_FxTracerSuccess)
        1    0.000    0.000    0.000    0.000 csv.py:165(Sniffer)
        1    0.000    0.000    0.000    0.000 grad_mode.py:108(set_grad_enabled)
        1    0.000    0.000    0.000    0.000 package_importer.py:697(_PackageResourceReader)
        6    0.000    0.000    0.000    0.000 signal.py:48(_wraps)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:138(MutableSparseNDimArray)
        1    0.000    0.000    0.000    0.000 boolalg.py:1487(Exclusive)
        4    0.000    0.000    0.000    0.000 core.py:6544(__has_singleton)
        1    0.000    0.000    0.000    0.000 tz.py:328(_ttinfo)
        1    0.000    0.000    0.000    0.000 pycode.py:673(<dictcomp>)
        1    0.000    0.000    0.000    0.000 ecm.py:17(Point)
        1    0.000    0.000    0.000    0.000 ImageFile.py:812(PyDecoder)
        1    0.000    0.000    0.000    0.000 Files_in.py:3(FilesIn)
        1    0.000    0.000    0.000    0.000 padding.py:434(ReplicationPad3d)
        1    0.000    0.000    0.000    0.000 py3k.py:92(contextlib_nullcontext)
        1    0.000    0.000    0.000    0.000 _convertions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rnn.py:46(PackedParameter)
        1    0.000    0.000    0.000    0.000 hooks.py:92(BackwardHook)
        1    0.000    0.000    0.000    0.000 computed_entries.py:226(TemperatureEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 series.py:1608(Parametric2DLineSeries)
        1    0.000    0.000    0.000    0.000 __init__.py:280(LogRecord)
        1    0.000    0.000    0.000    0.000 loader.py:23(_FailedTest)
        3    0.000    0.000    0.000    0.000 core.py:104(do_one)
        1    0.000    0.000    0.000    0.000 swa_utils.py:13(AveragedModel)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11053(_SimpleBeta)
        1    0.000    0.000    0.000    0.000 colors.py:80(_ColorMapping)
        7    0.000    0.000    0.000    0.000 _pep440.py:446(<lambda>)
        1    0.000    0.000    0.000    0.000 scale.py:91(LinearScale)
        1    0.000    0.000    0.000    0.000 __init__.py:7(is_built)
        1    0.000    0.000    0.000    0.000 rrule.py:305(rrule)
        1    0.000    0.000    0.000    0.000 bessel.py:2149(_besseli)
        1    0.000    0.000    0.000    0.000 constraint_registry.py:79(ConstraintRegistry)
        1    0.000    0.000    0.000    0.000 exponential.py:139(exp_polar)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:224(QuotedString)
        1    0.000    0.000    0.000    0.000 utils.py:117(Comparable)
        1    0.000    0.000    0.000    0.000 core.py:5313(Opt)
        1    0.000    0.000    0.000    0.000 boolalg.py:368(__hash__)
        1    0.000    0.000    0.000    0.000 polyoptions.py:384(Composite)
        1    0.000    0.000    0.000    0.000 ops.py:156(<listcomp>)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:53(_ScalarHessWrapper)
        1    0.000    0.000    0.000    0.000 distance.py:1771(PDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 headerregistry.py:525(MessageIDHeader)
        1    0.000    0.000    0.000    0.000 relational.py:873(_Greater)
        1    0.000    0.000    0.000    0.000 _testutils.py:56(PytestTester)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:118(GradInterpreter)
        1    0.000    0.000    0.000    0.000 category.py:163(UnitData)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:13(_MultiDeviceReplicator)
        8    0.000    0.000    0.000    0.000 _pep440.py:70(__neg__)
        1    0.000    0.000    0.000    0.000 timestamp.py:16(TimeStamp)
        1    0.000    0.000    0.000    0.000 _functions.py:273(BackwardHookFunction)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:706(stieltjes)
        1    0.000    0.000    0.000    0.000 reductions.py:62(_after_fork)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:174(OddsRatioResult)
        1    0.000    0.000    0.000    0.000 locks.py:24(Lock)
        1    0.000    0.000    0.000    0.000 loss.py:726(HingeEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:7(PackageUnpickler)
        1    0.000    0.000    0.000    0.000 single.py:1748(LinearCoefficients)
        1    0.000    0.000    0.000    0.000 __init__.py:110(DeQuantize)
        1    0.000    0.000    0.000    0.000 __init__.py:275(cudaStatus)
        5    0.000    0.000    0.000    0.000 _inspect.py:143(<lambda>)
        1    0.000    0.000    0.000    0.000 conv_fused.py:363(ConvBn1d)
        4    0.000    0.000    0.000    0.000 results.py:26(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:840(_CudaBase)
        1    0.000    0.000    0.000    0.000 polynomials.py:687(chebyshevt_root)
        1    0.000    0.000    0.000    0.000 boolalg.py:1108(Nand)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:517(AddrSpec)
        1    0.000    0.000    0.000    0.000 _czt.py:115(CZT)
        1    0.000    0.000    0.000    0.000 __init__.py:1237(_StderrHandler)
        1    0.000    0.000    0.000    0.000 records.py:87(format_parser)
        1    0.000    0.000    0.000    0.000 colors.py:1099(TwoSlopeNorm)
        1    0.000    0.000    0.000    0.000 formal.py:1613(FormalPowerSeriesCompose)
        1    0.000    0.000    0.000    0.000 tools_common.py:90(FusionGroup)
        1    0.000    0.000    0.000    0.000 text.py:6(TextBackend)
        1    0.000    0.000    0.000    0.000 orderings.py:137(InverseOrder)
        1    0.000    0.000    0.000    0.000 headerregistry.py:562(HeaderRegistry)
        1    0.000    0.000    0.000    0.000 runner.py:161(TextTestRunner)
        3    0.000    0.000    0.000    0.000 facts.py:290(split_alpha_beta)
        1    0.000    0.000    0.000    0.000 parse.py:795(_Quoter)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:417(_PageL)
        6    0.000    0.000    0.000    0.000 expr.py:1021(_eval_power)
        1    0.000    0.000    0.000    0.000 _functions.py:85(Scatter)
        1    0.000    0.000    0.000    0.000 widgets.py:238(Slider)
        1    0.000    0.000    0.000    0.000 pooling.py:990(_AdaptiveMaxPoolNd)
        1    0.000    0.000    0.000    0.000 activation.py:478(ELU)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:17(DirectoryReader)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:91(set_detect_anomaly)
        1    0.000    0.000    0.000    0.000 _globals.py:32(_NoValueType)
        1    0.000    0.000    0.000    0.000 assume.py:14(AssumptionsContext)
        1    0.000    0.000    0.000    0.000 constraints.py:146(_DependentProperty)
        1    0.000    0.000    0.000    0.000 _adapters.py:114(OrphanPath)
        1    0.000    0.000    0.000    0.000 selectors.py:433(PollSelector)
        5    0.000    0.000    0.000    0.000 multiarray.py:85(empty_like)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:41(BasinHoppingRunner)
        1    0.000    0.000    0.000    0.000 _polyint.py:245(KroghInterpolator)
        1    0.000    0.000    0.000    0.000 _aliases.py:182(UniqueAllResult)
        1    0.000    0.000    0.000    0.000 mock.py:2473(__init__)
        1    0.000    0.000    0.000    0.000 distance.py:1744(CDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 line.py:1872(LinearEntity2D)
        1    0.000    0.000    0.000    0.000 ImageFile.py:101(_Tile)
        7    0.000    0.000    0.000    0.000 numeric.py:1389(_moveaxis_dispatcher)
        1    0.000    0.000    0.000    0.000 common.py:137(OdeSolution)
        1    0.000    0.000    0.000    0.000 conv.py:220(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:81(_SupportsDType)
        1    0.000    0.000    0.000    0.000 _vertex.py:179(VertexCacheBase)
        1    0.000    0.000    0.000    0.000 _docscrape.py:578(FunctionDoc)
        1    0.000    0.000    0.000    0.000 para4tb.py:133(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5769(uniform_direction_gen)
        1    0.000    0.000    0.000    0.000 abc.py:161(ResourceLoader)
        1    0.000    0.000    0.000    0.000 distributed.py:153(_BufferCommHook)
        1    0.000    0.000    0.000    0.000 _decorator.py:47(guaranteed_datapipes_determinism)
        1    0.000    0.000    0.000    0.000 _classes.py:21(__init__)
        1    0.000    0.000    0.000    0.000 join.py:11(JoinHook)
        1    0.000    0.000    0.000    0.000 ops.py:294(IndexableIter)
        5    0.000    0.000    0.000    0.000 due.py:43(_donothing_func)
        1    0.000    0.000    0.000    0.000 line.py:2504(Line3D)
        2    0.000    0.000    0.000    0.000 rl.py:10(rm_id)
        1    0.000    0.000    0.000    0.000 mlab.py:962(GaussianKDE)
        1    0.000    0.000    0.000    0.000 kind.py:7(MatrixKind)
        1    0.000    0.000    0.000    0.000 loss.py:1279(MarginRankingLoss)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1044(_TypedDictMeta)
        1    0.000    0.000    0.000    0.000 core.py:4381(MatchFirst)
        1    0.000    0.000    0.000    0.000 equality.py:209(StrictLessThanPredicate)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:186(LambdaLR)
        1    0.000    0.000    0.000    0.000 _adapters.py:7(SpecLoaderAdapter)
        1    0.000    0.000    0.000    0.000 constraints.py:68(Constraint)
        1    0.000    0.000    0.000    0.000 request.py:1256(AbstractHTTPHandler)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:15(TriInterpolator)
        1    0.000    0.000    0.000    0.000 anchor.py:10(Anchor)
        1    0.000    0.000    0.000    0.000 boolalg.py:1137(Nor)
        1    0.000    0.000    0.000    0.000 _internal.py:205(dummy_ctype)
        1    0.000    0.000    0.000    0.000 traversal.py:68(preorder_traversal)
        1    0.000    0.000    0.000    0.000 parser.py:16(Parser)
        1    0.000    0.000    0.000    0.000 _rules.py:254(_AtenlibSymbolicFunction)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11078(_SimpleStudentT)
        1    0.000    0.000    0.000    0.000 polyoptions.py:527(Gaussian)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3505(multinomial_frozen)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:12(LRUDict)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:129(EnergyState)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:285(BFGS)
        1    0.000    0.000    0.000    0.000 pathlib.py:304(__init__)
        1    0.000    0.000    0.000    0.000 polyoptions.py:611(Strict)
        1    0.000    0.000    0.000    0.000 transforms.py:331(MellinTransform)
        1    0.000    0.000    0.000    0.000 sets.py:2759(SetKind)
        1    0.000    0.000    0.000    0.000 __init__.py:9(verbose)
        1    0.000    0.000    0.000    0.000 core.py:957(NullCache)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1328(_DerivedBivariateSpline)
        1    0.000    0.000    0.000    0.000 _kdtree.py:318(leafnode)
        4    0.000    0.000    0.000    0.000 bessel.py:385(c_memo)
        1    0.000    0.000    0.000    0.000 stubs.py:4(QuantStub)
        1    0.000    0.000    0.000    0.000 activation.py:733(LeakyReLU)
        1    0.000    0.000    0.000    0.000 _rules.py:152(_FxTracerFailure)
        1    0.000    0.000    0.000    0.000 abc.py:112(PathEntryFinder)
        4    0.000    0.000    0.000    0.000 function.py:613(_iter_filter)
        1    0.000    0.000    0.000    0.000 __init__.py:307(_LowLevelFile)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2317(_any_dispatcher)
        1    0.000    0.000    0.000    0.000 dir_util.py:23(__init__)
        1    0.000    0.000    0.000    0.000 abc.py:230(ExecutionLoader)
        1    0.000    0.000    0.000    0.000 grouping.py:89(UnBatcherIterDataPipe)
        1    0.000    0.000    0.000    0.000 streamplot.py:313(Grid)
        1    0.000    0.000    0.000    0.000 ticker.py:2372(LogLocator)
        1    0.000    0.000    0.000    0.000 transforms.py:1137(SineCosineTypeTransform)
        1    0.000    0.000    0.000    0.000 blocking_input.py:271(BlockingContourLabeler)
        1    0.000    0.000    0.000    0.000 symbol.py:26(Str)
        1    0.000    0.000    0.000    0.000 _creation.py:17(<dictcomp>)
        1    0.000    0.000    0.000    0.000 expand.py:53(StaticModule)
        1    0.000    0.000    0.000    0.000 _pep440.py:77(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 _pep440.py:135(_BaseVersion)
        2    0.000    0.000    0.000    0.000 glob.py:229(_ishidden)
        1    0.000    0.000    0.000    0.000 _datasource.py:74(_FileOpeners)
        1    0.000    0.000    0.000    0.000 rcsetup.py:50(ValidateInStrings)
        1    0.000    0.000    0.000    0.000 _meta.py:32(SimplePath)
        1    0.000    0.000    0.000    0.000 proxy.py:22(Scope)
        1    0.000    0.000    0.000    0.000 _script.py:215(OrderedModuleDict)
        1    0.000    0.000    0.000    0.000 dates.py:648(ConciseDateFormatter)
        1    0.000    0.000    0.000    0.000 _trustregion_dogleg.py:38(DoglegSubproblem)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:251(RotationSpline)
        1    0.000    0.000    0.000    0.000 parameters.py:7(_global_parameters)
        1    0.000    0.000    0.000    0.000 request.py:791(ProxyHandler)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1740(ParamSpec)
        1    0.000    0.000    0.000    0.000 selectors.py:60(_SelectorMapping)
        1    0.000    0.000    0.000    0.000 _morestats.py:4287(DirectionalStats)
        1    0.000    0.000    0.000    0.000 context.py:203(reducer)
        1    0.000    0.000    0.000    0.000 _rules.py:346(_ArgFormatTooVerbose)
        1    0.000    0.000    0.000    0.000 mathtext.py:1618(Hlist)
        1    0.000    0.000    0.000    0.000 loss.py:380(KLDivLoss)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3562(special_ortho_group_gen)
        1    0.000    0.000    0.000    0.000 string.py:54(Stringify)
        1    0.000    0.000    0.000    0.000 image.py:1351(BboxImage)
        1    0.000    0.000    0.000    0.000 determinant.py:72(Permanent)
        1    0.000    0.000    0.000    0.000 error.py:24(StreamMark)
        1    0.000    0.000    0.000    0.000 {built-in method _thread.get_native_id}
        1    0.000    0.000    0.000    0.000 fancysets.py:139(Naturals0)
        1    0.000    0.000    0.000    0.000 gzip.py:99(prepend)
        4    0.000    0.000    0.000    0.000 __init__.py:799(<dictcomp>)
        1    0.000    0.000    0.000    0.000 mock.py:388(_MockIter)
        1    0.000    0.000    0.000    0.000 parameter.py:13(Parameter)
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 streams.py:117(FlowControlMixin)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:1301(PrecisionManager)
        1    0.000    0.000    0.000    0.000 tarfile.py:570(_StreamProxy)
        3    0.000    0.000    0.000    0.000 core.py:16(exhaust)
        1    0.000    0.000    0.000    0.000 grouping.py:19(__getattr__)
        1    0.000    0.000    0.000    0.000 pooling.py:1121(_AdaptiveAvgPoolNd)
        1    0.000    0.000    0.000    0.000 _base.py:33(_axis_method_wrapper)
        1    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 encoder.py:105(__init__)
        1    0.000    0.000    0.000    0.000 TiffTags.py:24(_TagInfo)
        1    0.000    0.000    0.000    0.000 calendar.py:573(LocaleTextCalendar)
        1    0.000    0.000    0.000    0.000 protocols.py:9(BaseProtocol)
        1    0.000    0.000    0.000    0.000 _utils.py:39(Interval)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 equality.py:257(LessThanPredicate)
        1    0.000    0.000    0.000    0.000 single.py:1560(HomogeneousCoeffSubsIndepDivDep)
        1    0.000    0.000    0.000    0.000 __future__.py:81(_Feature)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_256}
        1    0.000    0.000    0.000    0.000 ImageFile.py:734(PyCodec)
        1    0.000    0.000    0.000    0.000 mathtext.py:1374(Node)
        1    0.000    0.000    0.000    0.000 least_squares.py:255(_WrapArgsKwargs)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:61(ThroughputBenchmark)
        2    0.000    0.000    0.000    0.000 {function DecompressReader.close at 0x14cb421cd3a0}
        1    0.000    0.000    0.000    0.000 PaletteFile.py:22(PaletteFile)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:18(ParserSyntaxError)
        2    0.000    0.000    0.000    0.000 __init__.py:24(__init__)
        1    0.000    0.000    0.000    0.000 pooling.py:38(MaxPool1d)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5689(random_table_frozen)
        4    0.000    0.000    0.000    0.000 _inspect.py:142(<lambda>)
        1    0.000    0.000    0.000    0.000 arrayop.py:458(Flatten)
        1    0.000    0.000    0.000    0.000 scale.py:126(FuncTransform)
        3    0.000    0.000    0.000    0.000 six.py:885(add_metaclass)
        1    0.000    0.000    0.000    0.000 modules.py:504(FreeModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 _rules.py:323(_FxFrontendDynamoMakeFx)
        1    0.000    0.000    0.000    0.000 __init__.py:1323(disable)
        1    0.000    0.000    0.000    0.000 lines.py:1399(_AxLine)
        1    0.000    0.000    0.000    0.000 _ops.py:594(_Ops)
        1    0.000    0.000    0.000    0.000 activation.py:298(Hardsigmoid)
        1    0.000    0.000    0.000    0.000 _datasource.py:99(__init__)
        1    0.000    0.000    0.000    0.000 _rules.py:277(_AtenlibFxToOnnx)
        1    0.000    0.000    0.000    0.000 core.py:195(<listcomp>)
        1    0.000    0.000    0.000    0.000 line.py:1109(Line)
        1    0.000    0.000    0.000    0.000 events.py:17(Event)
        1    0.000    0.000    0.000    0.000 single.py:1436(HomogeneousCoeffSubsDepDivIndep)
        1    0.000    0.000    0.000    0.000 transforms.py:1165(SineTransform)
        1    0.000    0.000    0.000    0.000 _pytree.py:135(LeafSpec)
        1    0.000    0.000    0.000    0.000 core.py:3473(CharsNotIn)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:2011(nchypergeom_wallenius_gen)
        3    0.000    0.000    0.000    0.000 rcsetup.py:217(validate_dpi)
        1    0.000    0.000    0.000    0.000 _arffread.py:655(MetaData)
        1    0.000    0.000    0.000    0.000 analyzer.py:1751(PointGroupOperations)
        1    0.000    0.000    0.000    0.000 __init__.py:13(verbose)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3705(ortho_group_gen)
        1    0.000    0.000    0.000    0.000 mock.py:281(_SentinelObject)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:263(Comment)
        1    0.000    0.000    0.000    0.000 pc_groups.py:7(PolycyclicGroup)
        1    0.000    0.000    0.000    0.000 _rules.py:208(_FxPassConvertNegToSigmoid)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:24(Iterator)
        1    0.000    0.000    0.000    0.000 figure.py:159(SubplotParams)
        1    0.000    0.000    0.000    0.000 core.py:943(_CacheType)
        1    0.000    0.000    0.000    0.000 Orbit_spd_manager.py:11(orbit_spd_manager)
        1    0.000    0.000    0.000    0.000 base.py:233(DenseOutput)
        1    0.000    0.000    0.000    0.000 main.py:882(YAMLContextManager)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:91(AppliedFunction)
        1    0.000    0.000    0.000    0.000 widgets.py:133(Button)
        1    0.000    0.000    0.000    0.000 ImageFile.py:866(PyEncoder)
        1    0.000    0.000    0.000    0.000 autograd_function.py:251(VmapInfo)
        3    0.000    0.000    0.000    0.000 rcsetup.py:391(validate_aspect)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:885(MeijerFormula)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:463(_VectorHessWrapper)
        1    0.000    0.000    0.000    0.000 mathtext.py:1994(Kern)
        1    0.000    0.000    0.000    0.000 _interpolate.py:125(interp2d)
        7    0.000    0.000    0.000    0.000 due.py:31(non_decorating_decorator)
        1    0.000    0.000    0.000    0.000 _util.py:1064(__getattr__)
        1    0.000    0.000    0.000    0.000 qs.py:9(SievePolynomial)
        1    0.000    0.000    0.000    0.000 _exceptions.py:38(_UFuncNoLoopError)
        1    0.000    0.000    0.000    0.000 extension.py:23(Extension)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:292(ivmpf_constant)
        1    0.000    0.000    0.000    0.000 pprint.py:80(_safe_key)
        1    0.000    0.000    0.000    0.000 assume.py:174(PredicateMeta)
        1    0.000    0.000    0.000    0.000 legend.py:50(DraggableLegend)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:667(LaplaceTransformInversionMethods)
        1    0.000    0.000    0.000    0.000 graph.py:42(_CustomBuiltin)
        1    0.000    0.000    0.000    0.000 combining.py:496(MultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 index_tricks.py:618(ndindex)
        1    0.000    0.000    0.000    0.000 transforms.py:587(SigmoidTransform)
        1    0.000    0.000    0.000    0.000 pathlib.py:422(_PathParents)
        1    0.000    0.000    0.000    0.000 _interface.py:719(_ProductLinearOperator)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:760(LinearVectorFunction)
        1    0.000    0.000    0.000    0.000 reinplace.py:53(_FunctionalizationMetadataProp)
        1    0.000    0.000    0.000    0.000 transforms.py:2654(TransformedPath)
        1    0.000    0.000    0.000    0.000 _survival.py:219(ECDFResult)
        1    0.000    0.000    0.000    0.000 transforms.py:1224(InverseSineTransform)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:485(_IntegerInterval)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:599(FloaterHormannInterpolator)
        1    0.000    0.000    0.000    0.000 boolalg.py:1171(Xnor)
        1    0.000    0.000    0.000    0.000 __init__.py:711(BufferingFormatter)
        1    0.000    0.000    0.000    0.000 _upfirdn.py:73(_UpFIRDn)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:3(Hamiltonian)
        1    0.000    0.000    0.000    0.000 __init__.py:290(_DeviceGuard)
        2    0.000    0.000    0.000    0.000 sysconfig.py:279(_get_preferred_schemes)
        5    0.000    0.000    0.000    0.000 datetime.py:545(_check_tzinfo_arg)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4063(AlexanderGovernResult)
        1    0.000    0.000    0.000    0.000 bessel.py:2180(_besselk)
        3    0.000    0.000    0.000    0.000 rendezvous.py:22(register_rendezvous_handler)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:147(JvpInterpreter)
        1    0.000    0.000    0.000    0.000 conv_fused.py:495(ConvBn2d)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:43(size_bytes)
        1    0.000    0.000    0.000    0.000 conv.py:154(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:878(SupportsIndex)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1251(__init__)
        1    0.000    0.000    0.000    0.000 tensor.py:4666(WildTensor)
        1    0.000    0.000    0.000    0.000 _arffread.py:232(StringAttribute)
        1    0.000    0.000    0.000    0.000 _base.py:6(Rule)
        1    0.000    0.000    0.000    0.000 profiler.py:552(emit_itt)
        1    0.000    0.000    0.000    0.000 __init__.py:2213(NullHandler)
        1    0.000    0.000    0.000    0.000 __init__.py:1239(<dictcomp>)
        1    0.000    0.000    0.000    0.000 core.py:2403(Token)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4330(_shift_scale_distribution_function_2arg)
        1    0.000    0.000    0.000    0.000 loss.py:17(_Loss)
        1    0.000    0.000    0.000    0.000 relational.py:891(_Less)
        1    0.000    0.000    0.000    0.000 jiterator.py:42(_JittedFunction)
        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 _tokenizer.py:11(Token)
        1    0.000    0.000    0.000    0.000 _base.py:74(_AsCompletedWaiter)
        1    0.000    0.000    0.000    0.000 transforms.py:865(SoftmaxTransform)
        1    0.000    0.000    0.000    0.000 lines.py:1440(VertexSelector)
        1    0.000    0.000    0.000    0.000 _shgo.py:1538(LMapCache)
        1    0.000    0.000    0.000    0.000 arrayprint.py:905(FloatingFormat)
        1    0.000    0.000    0.000    0.000 _nonlin.py:382(Jacobian)
        1    0.000    0.000    0.000    0.000 _monitor.py:15(TMonitor)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:29(SemiInfiniteFunc)
        1    0.000    0.000    0.000    0.000 activation.py:361(SiLU)
        1    0.000    0.000    0.000    0.000 storage.py:230(UntypedStorage)
        1    0.000    0.000    0.000    0.000 mathtext.py:1262(FontConstantsBase)
        1    0.000    0.000    0.000    0.000 discovery.py:68(_Filter)
        2    0.000    0.000    0.000    0.000 __init__.py:8(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getCompiledVersion}
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:482(InvalidMailbox)
        1    0.000    0.000    0.000    0.000 more.py:2438(islice_extended)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3305(_moment_standardized_formula)
        1    0.000    0.000    0.000    0.000 _rules.py:300(_FxNodeToOnnx)
        1    0.000    0.000    0.000    0.000 activation.py:650(GELU)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:345(<genexpr>)
        1    0.000    0.000    0.000    0.000 widgets.py:1621(SpanSelector)
        1    0.000    0.000    0.000    0.000 tarfile.py:304(_LowLevelFile)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_128}
        1    0.000    0.000    0.000    0.000 core.py:2483(Empty)
        1    0.000    0.000    0.000    0.000 threading.py:279(_is_owned)
        1    0.000    0.000    0.000    0.000 backend_tools.py:736(ZoomPanBase)
        1    0.000    0.000    0.000    0.000 _multivariate.py:7252(normal_inverse_gamma_frozen)
        1    0.000    0.000    0.000    0.000 _guards.py:284(GuardsContext)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_512}
        1    0.000    0.000    0.000    0.000 pickle.py:263(_Unframer)
        1    0.000    0.000    0.000    0.000 _codata.py:142(exact2002)
        1    0.000    0.000    0.000    0.000 _state.py:12(EnabledProxy)
        1    0.000    0.000    0.000    0.000 activation.py:524(CELU)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:631(_IgnoreContextManager)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1285(<listcomp>)
        1    0.000    0.000    0.000    0.000 _recursive.py:358(__init__)
        1    0.000    0.000    0.000    0.000 loss.py:931(HuberLoss)
        1    0.000    0.000    0.000    0.000 dviread.py:607(Vf)
        1    0.000    0.000    0.000    0.000 readers.py:31(ZipReader)
        1    0.000    0.000    0.000    0.000 __init__.py:58(cuFFTPlanCacheManager)
        1    0.000    0.000    0.000    0.000 datapipe.py:326(_DataPipeSerializationWrapper)
        2    0.000    0.000    0.000    0.000 annotations.py:30(__init__)
        1    0.000    0.000    0.000    0.000 numpy.py:35(<dictcomp>)
        1    0.000    0.000    0.000    0.000 numpy.py:483(CuPyPrinter)
        3    0.000    0.000    0.000    0.000 orderings.py:156(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__getattr__)
        1    0.000    0.000    0.000    0.000 font_manager.py:338(FontEntry)
        1    0.000    0.000    0.000    0.000 kind.py:106(_NumberKind)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:876(_PatchedFn)
        1    0.000    0.000    0.000    0.000 getopt.py:43(GetoptError)
        4    0.000    0.000    0.000    0.000 _pytree.py:8(register_pytree_flatten_spec)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:410(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 dates.py:846(AutoDateFormatter)
        1    0.000    0.000    0.000    0.000 polar.py:202(_AxisWrapper)
        1    0.000    0.000    0.000    0.000 widgets.py:2368(LassoSelector)
        1    0.000    0.000    0.000    0.000 mathtext.py:888(DejaVuFonts)
        1    0.000    0.000    0.000    0.000 ssl.py:170(_TLSContentType)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1243(LinearMixing)
        1    0.000    0.000    0.000    0.000 colors.py:1418(BoundaryNorm)
        1    0.000    0.000    0.000    0.000 _base.py:59(_Waiter)
        1    0.000    0.000    0.000    0.000 bessel.py:901(SphericalBesselBase)
        1    0.000    0.000    0.000    0.000 facts.py:214(rules_2prereq)
        1    0.000    0.000    0.000    0.000 collections.py:1664(CircleCollection)
        1    0.000    0.000    0.000    0.000 variable.py:13(Variable)
        1    0.000    0.000    0.000    0.000 pythonfinitefield.py:9(PythonFiniteField)
        1    0.000    0.000    0.000    0.000 grad_mode.py:293(_unsafe_preserve_version_counter)
        1    0.000    0.000    0.000    0.000 scale.py:246(InvertedLogTransform)
        1    0.000    0.000    0.000    0.000 geo.py:229(_GeoTransform)
        2    0.000    0.000    0.000    0.000 __init__.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:26(ContextProp)
        1    0.000    0.000    0.000    0.000 _collections.py:5(FreezableDefaultDict)
        1    0.000    0.000    0.000    0.000 mathtext.py:932(DejaVuSerifFonts)
        1    0.000    0.000    0.000    0.000 actions.py:19(OnlyOnce)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:514(FunctionModifiers)
        1    0.000    0.000    0.000    0.000 argparse.py:109(_AttributeHolder)
        1    0.000    0.000    0.000    0.000 datetime.py:1219(tzinfo)
        1    0.000    0.000    0.000    0.000 dev.py:125(requires)
        1    0.000    0.000    0.000    0.000 transports.py:46(ReadTransport)
        1    0.000    0.000    0.000    0.000 utils.py:8(SequenceWrapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 _interface.py:639(_AdjointLinearOperator)
        1    0.000    0.000    0.000    0.000 queue.py:223(PriorityQueue)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1623(_TypeVarLikeMeta)
        4    0.000    0.000    0.000    0.000 shape_base.py:19(_atleast_1d_dispatcher)
        1    0.000    0.000    0.000    0.000 pydoc.py:1127(TextRepr)
        1    0.000    0.000    0.000    0.000 Image.py:3029(ImageTransformHandler)
        1    0.000    0.000    0.000    0.000 ticker.py:211(TickHelper)
        1    0.000    0.000    0.000    0.000 dataloader.py:83(_InfiniteConstantSampler)
        1    0.000    0.000    0.000    0.000 tasks.py:689(_GatheringFuture)
        1    0.000    0.000    0.000    0.000 case.py:1446(_SubTest)
        1    0.000    0.000    0.000    0.000 bessel.py:800(hankel1)
        1    0.000    0.000    0.000    0.000 dataset.py:36(Dataset)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6860(vonmises_fisher_frozen)
        1    0.000    0.000    0.000    0.000 unix_events.py:980(BaseChildWatcher)
        4    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        1    0.000    0.000    0.000    0.000 scale.py:372(SymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:196(AdaptiveStepsize)
        1    0.000    0.000    0.000    0.000 compat.py:112(Nprint)
        2    0.000    0.000    0.000    0.000 __init__.py:133(create_module)
        1    0.000    0.000    0.000    0.000 _parser.py:1589(ParserError)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:69(_override_ufunc_default_kwargs)
        1    0.000    0.000    0.000    0.000 _package_pickler.py:21(PackagePickler)
        1    0.000    0.000    0.000    0.000 typing.py:951(__repr__)
        2    0.000    0.000    0.000    0.000 rootoftools.py:83(__init__)
        6    0.000    0.000    0.000    0.000 feedparser.py:125(__iter__)
        1    0.000    0.000    0.000    0.000 core.py:903(_MaskedUnaryOperation)
        1    0.000    0.000    0.000    0.000 conv.py:1538(LazyConvTranspose3d)
        1    0.000    0.000    0.000    0.000 core.py:5823(Combine)
        1    0.000    0.000    0.000    0.000 transforms.py:964(FourierTypeTransform)
        1    0.000    0.000    0.000    0.000 _spdx.py:6(SPDXLicense)
        1    0.000    0.000    0.000    0.000 __init__.py:21(cuFFTPlanCacheAttrContextProp)
        1    0.000    0.000    0.000    0.000 visualization.py:9(VisualizationMethods)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:869(SupportsBytes)
        1    0.000    0.000    0.000    0.000 split_module.py:11(Partition)
        1    0.000    0.000    0.000    0.000 loss.py:1226(CosineEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 deprecation.py:101(_DeprecationHelperStr)
        1    0.000    0.000    0.000    0.000 fancysets.py:1493(Complexes)
        1    0.000    0.000    0.000    0.000 _factories.py:8(_TzSingleton)
        1    0.000    0.000    0.000    0.000 version.py:454(_TrimmedRelease)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:1398(FakeCopyMode)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:155(BootstrapSobolResult)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:797(is_package)
        1    0.000    0.000    0.000    0.000 offsetbox.py:577(PaddedBox)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:416(F)
        1    0.000    0.000    0.000    0.000 dev.py:147(__init__)
        1    0.000    0.000    0.000    0.000 animation.py:1521(FuncAnimation)
        5    0.000    0.000    0.000    0.000 polyhedron.py:473(faces)
        1    0.000    0.000    0.000    0.000 bessel.py:1347(AiryBase)
        1    0.000    0.000    0.000    0.000 arpack.py:274(ArpackError)
        1    0.000    0.000    0.000    0.000 conv.py:1333(LazyConv3d)
        1    0.000    0.000    0.000    0.000 linear.py:127(NonDynamicallyQuantizableLinear)
        1    0.000    0.000    0.000    0.000 core.py:194(<listcomp>)
        1    0.000    0.000    0.000    0.000 _interface.py:692(_SumLinearOperator)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1274(_TypedDictSpecialForm)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:228(IntervalPrinter)
        1    0.000    0.000    0.000    0.000 widgets.py:1303(MultiCursor)
        1    0.000    0.000    0.000    0.000 optimization.py:15(Newton)
        1    0.000    0.000    0.000    0.000 _musllinux.py:18(_MuslVersion)
        1    0.000    0.000    0.000    0.000 _infra.py:40(PatchedPropertyBag)
        1    0.000    0.000    0.000    0.000 activation.py:849(Softshrink)
        1    0.000    0.000    0.000    0.000 sdm.py:1447(unop_dict)
        1    0.000    0.000    0.000    0.000 overrides.py:1872(enable_reentrant_dispatch)
        1    0.000    0.000    0.000    0.000 argparse.py:1638(_ArgumentGroup)
        1    0.000    0.000    0.000    0.000 __init__.py:1152(FileHandler)
        1    0.000    0.000    0.000    0.000 ordinals.py:261(OrdinalOmega)
        1    0.000    0.000    0.000    0.000 request.py:1374(HTTPHandler)
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:1851(_ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:115(<dictcomp>)
        1    0.000    0.000    0.000    0.000 report.py:28(BasicReport)
        1    0.000    0.000    0.000    0.000 gmpyfinitefield.py:9(GMPYFiniteField)
        2    0.000    0.000    0.000    0.000 _adapters.py:25(__init__)
        1    0.000    0.000    0.000    0.000 _cubic.py:72(CubicHermiteSpline)
        1    0.000    0.000    0.000    0.000 activation.py:568(SELU)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:634(DomainLiteral)
        5    0.000    0.000    0.000    0.000 version.py:537(<lambda>)
        1    0.000    0.000    0.000    0.000 _interpolate.py:167(_do_extrapolate)
        1    0.000    0.000    0.000    0.000 pydoc.py:1979(__init__)
        1    0.000    0.000    0.000    0.000 polyutils.py:444(PicklableWithSlots)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:67(GradientFile)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3437(StatusbarBase)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2500(TypeVarTuple)
        1    0.000    0.000    0.000    0.000 {built-in method posix.cpu_count}
        1    0.000    0.000    0.000    0.000 mathtext.py:1527(Accent)
        1    0.000    0.000    0.000    0.000 patches.py:2001(Square)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1289(ExcitingMixing)
        1    0.000    0.000    0.000    0.000 __init__.py:46(PackageNotFoundError)
        1    0.000    0.000    0.000    0.000 decoder.py:20(JSONDecodeError)
        1    0.000    0.000    0.000    0.000 configparser.py:360(Interpolation)
        1    0.000    0.000    0.000    0.000 reductions.py:49(SharedCache)
        1    0.000    0.000    0.000    0.000 contour.py:35(ClabelText)
        1    0.000    0.000    0.000    0.000 argparse.py:878(BooleanOptionalAction)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:900(ShapeGuardPrinter)
        1    0.000    0.000    0.000    0.000 constraints.py:384(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:86(_StrongRef)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:425(SR1)
        1    0.000    0.000    0.000    0.000 single.py:572(FirstLinear)
        1    0.000    0.000    0.000    0.000 graph_module.py:28(__init__)
        1    0.000    0.000    0.000    0.000 core.py:2679(CloseMatch)
        1    0.000    0.000    0.000    0.000 _pytree.py:41(NodeDef)
        1    0.000    0.000    0.000    0.000 npyio.py:42(BagObj)
        1    0.000    0.000    0.000    0.000 conv_fused.py:627(ConvBn3d)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1459(OneCycleLR)
        1    0.000    0.000    0.000    0.000 linear.py:5(Linear)
        1    0.000    0.000    0.000    0.000 _typing.py:118(DTypesSigned)
        1    0.000    0.000    0.000    0.000 widgets.py:2298(EllipseSelector)
        1    0.000    0.000    0.000    0.000 widgets.py:517(CheckButtons)
        1    0.000    0.000    0.000    0.000 dataframes.py:311(CaptureMul)
        1    0.000    0.000    0.000    0.000 combining.py:62(ForkerIterDataPipe)
        1    0.000    0.000    0.000    0.000 zipfile.py:1995(PyZipFile)
        1    0.000    0.000    0.000    0.000 forward_ad.py:145(dual_level)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1304(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 _numdiff.py:863(_Fun_Wrapper)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:113(OneHotCategoricalStraightThrough)
        3    0.000    0.000    0.000    0.000 core.py:867(__init__)
        1    0.000    0.000    0.000    0.000 widgets.py:1209(Cursor)
        1    0.000    0.000    0.000    0.000 transforms.py:1284(CosineTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:28(_QEngineProp)
        1    0.000    0.000    0.000    0.000 doccer.py:23(Decorator)
        1    0.000    0.000    0.000    0.000 series.py:1742(Line3DBaseSeries)
        1    0.000    0.000    0.000    0.000 core.py:2627(CaselessLiteral)
        1    0.000    0.000    0.000    0.000 _nonlin.py:318(TerminationCondition)
        1    0.000    0.000    0.000    0.000 arpack.py:606(_UnsymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 single.py:976(RationalRiccati)
        1    0.000    0.000    0.000    0.000 polyutils.py:516(IntegerPowerable)
        1    0.000    0.000    0.000    0.000 autograd_function.py:29(CustomFunctionPyOperator)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:308(Address)
        1    0.000    0.000    0.000    0.000 _linalg.py:33(EighResult)
        1    0.000    0.000    0.000    0.000 mock.py:341(_CallList)
        1    0.000    0.000    0.000    0.000 memory.py:673(_CUDAAllocator)
        1    0.000    0.000    0.000    0.000 quadrature.py:459(QuadratureMethods)
        1    0.000    0.000    0.000    0.000 zipfile.py:742(_SharedFile)
        1    0.000    0.000    0.000    0.000 activation.py:402(Mish)
        1    0.000    0.000    0.000    0.000 patches.py:2252(Sawtooth)
        1    0.000    0.000    0.000    0.000 _basic.py:2819(_range_prod)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:4(InverseLaplaceTransform)
        1    0.000    0.000    0.000    0.000 core.py:977(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:212(StrategyChain)
        1    0.000    0.000    0.000    0.000 decoder.py:114(ImageHandler)
        1    0.000    0.000    0.000    0.000 _typing.py:126(DTypesUnsigned)
        1    0.000    0.000    0.000    0.000 _base.py:96(_FirstCompletedWaiter)
        1    0.000    0.000    0.000    0.000 comments.py:1085(CommentedOrderedMap)
        1    0.000    0.000    0.000    0.000 runner.py:14(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 modules.py:1286(SubModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 modules.py:1746(ModuleHomomorphism)
        2    0.000    0.000    0.000    0.000 _onenormest.py:121(_blocked_elementwise)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:16(_ScalarGradWrapper)
        1    0.000    0.000    0.000    0.000 _interface.py:781(_PowerLinearOperator)
        1    0.000    0.000    0.000    0.000 logic.py:399(Not)
        1    0.000    0.000    0.000    0.000 threading.py:410(Semaphore)
        1    0.000    0.000    0.000    0.000 case.py:282(_AssertWarnsContext)
        1    0.000    0.000    0.000    0.000 zipfile.py:2271(FastLookup)
        1    0.000    0.000    0.000    0.000 more.py:2688(SequenceView)
        1    0.000    0.000    0.000    0.000 series.py:1755(Parametric3DLineSeries)
        1    0.000    0.000    0.000    0.000 colors.py:1367(PowerNorm)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:493(Domain)
        1    0.000    0.000    0.000    0.000 Lattice.py:7(lattice)
        1    0.000    0.000    0.000    0.000 numpy.py:481(<dictcomp>)
        2    0.000    0.000    0.000    0.000 libmpf.py:692(mpf_sign)
        2    0.000    0.000    0.000    0.000 {built-in method maketrans}
        1    0.000    0.000    0.000    0.000 six.py:129(_LazyModule)
        1    0.000    0.000    0.000    0.000 mathtext.py:349(MathtextBackendCairo)
        1    0.000    0.000    0.000    0.000 context.py:330(on_interrupt)
        1    0.000    0.000    0.000    0.000 pydoc.py:389(ErrorDuringImport)
        1    0.000    0.000    0.000    0.000 _base.py:111(_AllCompletedWaiter)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:69(SymDispatchMode)
        1    0.000    0.000    0.000    0.000 index_tricks.py:303(__init__)
        1    0.000    0.000    0.000    0.000 grad_mode.py:226(set_multithreading_enabled)
        1    0.000    0.000    0.000    0.000 art3d.py:441(Path3DCollection)
        1    0.000    0.000    0.000    0.000 pooling.py:97(MaxPool2d)
        1    0.000    0.000    0.000    0.000 _ops.py:524(_OpNamespace)
        1    0.000    0.000    0.000    0.000 more.py:3250(time_limited)
        1    0.000    0.000    0.000    0.000 polyerrors.py:13(ExactQuotientFailed)
        1    0.000    0.000    0.000    0.000 facts.py:286(__init__)
        1    0.000    0.000    0.000    0.000 category.py:113(StrCategoryLocator)
        1    0.000    0.000    0.000    0.000 gridspec.py:545(GridSpecFromSubplotSpec)
        1    0.000    0.000    0.000    0.000 colorbar.py:289(_ColorbarLogLocator)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:35(RootResults)
        1    0.000    0.000    0.000    0.000 dbapi2.py:49(<listcomp>)
        1    0.000    0.000    0.000    0.000 bessel.py:846(hankel2)
        1    0.000    0.000    0.000    0.000 graph.py:236(_InsertPoint)
        1    0.000    0.000    0.000    0.000 facts.py:301(rules_alpha)
        1    0.000    0.000    0.000    0.000 sympify.py:27(SympifyError)
        3    0.000    0.000    0.000    0.000 arrayprint.py:898(_none_or_positive_arg)
        1    0.000    0.000    0.000    0.000 rrule.py:1315(_genitem)
        1    0.000    0.000    0.000    0.000 bdf.py:456(BdfDenseOutput)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:48(ProxyableClassMeta)
        1    0.000    0.000    0.000    0.000 trifinder.py:24(TrapezoidMapTriFinder)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:657(Parameter)
        1    0.000    0.000    0.000    0.000 _interface.py:660(_TransposedLinearOperator)
        1    0.000    0.000    0.000    0.000 numpy.py:504(<dictcomp>)
        1    0.000    0.000    0.000    0.000 container.py:31(Container)
        1    0.000    0.000    0.000    0.000 polyoptions.py:50(BooleanOption)
        1    0.000    0.000    0.000    0.000 kind.py:84(_UndefinedKind)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:67(SourceLoader)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:224(FortranFormatParser)
        1    0.000    0.000    0.000    0.000 parameters.py:70(evaluate)
        1    0.000    0.000    0.000    0.000 dataframes.py:241(CaptureVariable)
        1    0.000    0.000    0.000    0.000 legend_handler.py:338(HandlerRegularPolyCollection)
        1    0.000    0.000    0.000    0.000 readers.py:15(FileReader)
        1    0.000    0.000    0.000    0.000 pathlib.py:49(_Flavour)
        1    0.000    0.000    0.000    0.000 exceptions.py:98(AxisError)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6223(dirichlet_multinomial_frozen)
        1    0.000    0.000    0.000    0.000 pooling.py:893(LPPool1d)
        1    0.000    0.000    0.000    0.000 activation.py:691(Hardshrink)
        1    0.000    0.000    0.000    0.000 art3d.py:324(PathPatch3D)
        1    0.000    0.000    0.000    0.000 transforms.py:40(IntegralTransformError)
        1    0.000    0.000    0.000    0.000 _miobase.py:337(MatVarReader)
        1    0.000    0.000    0.000    0.000 transforms.py:611(SoftplusTransform)
        1    0.000    0.000    0.000    0.000 _hypotests.py:917(BarnardExactResult)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:69(DataDependentOutputException)
        1    0.000    0.000    0.000    0.000 rrule.py:66(weekday)
        1    0.000    0.000    0.000    0.000 transforms.py:986(FourierTransform)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:171(GaussianInteger)
        1    0.000    0.000    0.000    0.000 index_tricks.py:569(ndenumerate)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:289(AddressList)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:115(orthopoly1d)
        1    0.000    0.000    0.000    0.000 scale.py:162(FuncScale)
        1    0.000    0.000    0.000    0.000 abc.py:276(SourceLoader)
        1    0.000    0.000    0.000    0.000 splitter_base.py:186(Subgraph)
        1    0.000    0.000    0.000    0.000 polyoptions.py:638(Frac)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:598(LocalPart)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:20(NearestNDInterpolator)
        1    0.000    0.000    0.000    0.000 response.py:37(addclosehook)
        1    0.000    0.000    0.000    0.000 util.py:368(ForkAwareThreadLock)
        1    0.000    0.000    0.000    0.000 __init__.py:156(py_object)
        1    0.000    0.000    0.000    0.000 _interface.py:832(_AdjointMatrixOperator)
        1    0.000    0.000    0.000    0.000 polar.py:515(RadialTick)
        1    0.000    0.000    0.000    0.000 pooling.py:171(MaxPool3d)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1374(MouseEvent)
        1    0.000    0.000    0.000    0.000 core.py:5(Registry)
        1    0.000    0.000    0.000    0.000 zipfile.py:618(LZMACompressor)
        1    0.000    0.000    0.000    0.000 _beartype.py:38(_create_beartype_decorator)
        1    0.000    0.000    0.000    0.000 _compression.py:63(seekable)
        1    0.000    0.000    0.000    0.000 error.py:52(StringMark)
        1    0.000    0.000    0.000    0.000 extrapolation.py:728(cohen_alt_class)
        1    0.000    0.000    0.000    0.000 comments.py:1136(TaggedScalar)
        1    0.000    0.000    0.000    0.000 _optimize.py:3934(_Brute_Wrapper)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1352(KrylovJacobian)
        1    0.000    0.000    0.000    0.000 series.py:28(IntervalMathPrinter)
        1    0.000    0.000    0.000    0.000 utils.py:102(FormatReplace)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1677(poisson_binomial_frozen)
        1    0.000    0.000    0.000    0.000 inference.py:273(PropKB)
        1    0.000    0.000    0.000    0.000 mul.py:25(NC_Marker)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:1330(P2POp)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_256}
        1    0.000    0.000    0.000    0.000 _memory_viz.py:112(Bytes)
        1    0.000    0.000    0.000    0.000 pooling.py:488(_AvgPoolNd)
        1    0.000    0.000    0.000    0.000 profiler_util.py:534(FunctionEventAvg)
        1    0.000    0.000    0.000    0.000 base.py:274(ConstantDenseOutput)
        3    0.000    0.000    0.000    0.000 mock.py:283(__init__)
        1    0.000    0.000    0.000    0.000 conv.py:281(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_384}
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:182(WhiteSpaceTokenList)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:364(Group)
        1    0.000    0.000    0.000    0.000 util.py:19(LazyEval)
        1    0.000    0.000    0.000    0.000 ticker.py:2041(_Edge_integer)
        1    0.000    0.000    0.000    0.000 comments.py:50(IDX)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:59(UnsupportedFakeTensorException)
        2    0.000    0.000    0.000    0.000 core.py:3433(shape)
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'set' objects}
        1    0.000    0.000    0.000    0.000 streamreader.py:8(StreamReaderIterDataPipe)
        1    0.000    0.000    0.000    0.000 activation.py:244(ReLU6)
        1    0.000    0.000    0.000    0.000 serialization.py:250(_open_file)
        1    0.000    0.000    0.000    0.000 package_exporter.py:128(PackagingError)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2687(_max_dispatcher)
        1    0.000    0.000    0.000    0.000 core.py:3639(GoToColumn)
        1    0.000    0.000    0.000    0.000 request.py:1226(HTTPDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 parser.py:79(BytesParser)
        1    0.000    0.000    0.000    0.000 colorbar.py:1636(ColorbarPatch)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:443(_RealInterval)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:12(ConstantInputWarning)
        1    0.000    0.000    0.000    0.000 _hypotests.py:356(CramerVonMisesResult)
        1    0.000    0.000    0.000    0.000 _minimize.py:1050(_Patch_Callback_Equal_Variables)
        1    0.000    0.000    0.000    0.000 single.py:839(Factorable)
        1    0.000    0.000    0.000    0.000 modules.py:1889(EndomorphismRing)
        1    0.000    0.000    0.000    0.000 orderings.py:35(LexOrder)
        1    0.000    0.000    0.000    0.000 request.py:1398(HTTPCookieProcessor)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1188(BoschlooExactResult)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:926(MeijerFormulaCollection)
        1    0.000    0.000    0.000    0.000 groundtypes.py:21(_GMPYInteger)
        1    0.000    0.000    0.000    0.000 request.py:1474(FileHandler)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:672(FitSolverError)
        1    0.000    0.000    0.000    0.000 rk.py:552(RkDenseOutput)
        1    0.000    0.000    0.000    0.000 grad_mode.py:61(enable_grad)
        1    0.000    0.000    0.000    0.000 stubs.py:21(DeQuantStub)
        1    0.000    0.000    0.000    0.000 _classes.py:6(_ClassNamespace)
        1    0.000    0.000    0.000    0.000 polyutils.py:187(<listcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:342(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 request.py:1531(FTPHandler)
        1    0.000    0.000    0.000    0.000 profiler.py:619(emit_nvtx)
        1    0.000    0.000    0.000    0.000 core.py:3810(WordEnd)
        1    0.000    0.000    0.000    0.000 core.py:2654(CaselessKeyword)
        1    0.000    0.000    0.000    0.000 common.py:11(HolderModule)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_tolower}
        1    0.000    0.000    0.000    0.000 mathtext.py:321(MathtextBackendPath)
        1    0.000    0.000    0.000    0.000 core.py:184(_should_enable_warnings)
        1    0.000    0.000    0.000    0.000 single.py:1930(NthOrderReducible)
        1    0.000    0.000    0.000    0.000 locks.py:421(BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 _covariance.py:503(CovViaDiagonal)
        1    0.000    0.000    0.000    0.000 client.py:1481(IncompleteRead)
        1    0.000    0.000    0.000    0.000 single.py:2192(NthLinearConstantCoeffVariationOfParameters)
        1    0.000    0.000    0.000    0.000 dotproduct.py:6(DotProduct)
        1    0.000    0.000    0.000    0.000 polyoptions.py:728(Method)
        1    0.000    0.000    0.000    0.000 backend_tools.py:366(RubberbandBase)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:836(MikotaPair)
        1    0.000    0.000    0.000    0.000 dense.py:115(MutableDenseMatrix)
        1    0.000    0.000    0.000    0.000 mathtext.py:949(DejaVuSansFonts)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4127(unitary_group_gen)
        1    0.000    0.000    0.000    0.000 diophantine.py:224(Univariate)
        1    0.000    0.000    0.000    0.000 ticker.py:1816(IndexLocator)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1242(_T)
        1    0.000    0.000    0.000    0.000 single.py:2294(NthLinearConstantCoeffUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 containers.py:379(TupleKind)
        1    0.000    0.000    0.000    0.000 six.py:91(_LazyDescr)
        1    0.000    0.000    0.000    0.000 exceptions.py:29(IncompleteReadError)
        1    0.000    0.000    0.000    0.000 locks.py:331(Semaphore)
        1    0.000    0.000    0.000    0.000 dates.py:621(IndexDateFormatter)
        2    0.000    0.000    0.000    0.000 gzip.py:323(closed)
        1    0.000    0.000    0.000    0.000 fetch.py:18(_IterableDatasetFetcher)
        1    0.000    0.000    0.000    0.000 request.py:605(BaseHandler)
        1    0.000    0.000    0.000    0.000 core.py:5054(NotAny)
        1    0.000    0.000    0.000    0.000 _polyint.py:145(_Interpolator1DWithDerivatives)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CudaError)
        1    0.000    0.000    0.000    0.000 __init__.py:790(Filterer)
        1    0.000    0.000    0.000    0.000 recipes.py:336(UnequalIterablesError)
        1    0.000    0.000    0.000    0.000 facts.py:571(FactKB)
        1    0.000    0.000    0.000    0.000 connection.py:578(SocketListener)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:960(NoDefaultType)
        1    0.000    0.000    0.000    0.000 legend_handler.py:132(HandlerNpoints)
        1    0.000    0.000    0.000    0.000 offsetbox.py:417(VPacker)
        1    0.000    0.000    0.000    0.000 argparse.py:783(Action)
        1    0.000    0.000    0.000    0.000 transforms.py:1047(InverseFourierTransform)
        1    0.000    0.000    0.000    0.000 storage.py:972(_LegacyStorageMeta)
        1    0.000    0.000    0.000    0.000 animation.py:99(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:670(AbsTransform)
        1    0.000    0.000    0.000    0.000 permutations.py:3067(AppliedPermutation)
        1    0.000    0.000    0.000    0.000 tz.py:1036(tzstr)
        1    0.000    0.000    0.000    0.000 annotations.py:29(Module)
        1    0.000    0.000    0.000    0.000 activation.py:438(Hardswish)
        1    0.000    0.000    0.000    0.000 serialization.py:239(_opener)
        1    0.000    0.000    0.000    0.000 kind.py:36(KindMeta)
        2    0.000    0.000    0.000    0.000 ops.py:173(no_complex_result)
        1    0.000    0.000    0.000    0.000 pkgutil.py:194(ImpImporter)
        1    0.000    0.000    0.000    0.000 six.py:178(__init__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:336(_median_formula)
        1    0.000    0.000    0.000    0.000 diophantine.py:676(InhomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:9(_HasStorage)
        2    0.000    0.000    0.000    0.000 core.py:883(__init__)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:809(FormulaCollection)
        1    0.000    0.000    0.000    0.000 ndim_array.py:591(ImmutableNDimArray)
        2    0.000    0.000    0.000    0.000 index_tricks.py:144(__init__)
        1    0.000    0.000    0.000    0.000 _vertex.py:205(VertexCube)
        1    0.000    0.000    0.000    0.000 _aliases.py:189(UniqueCountsResult)
        1    0.000    0.000    0.000    0.000 loss.py:850(SmoothL1Loss)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:46(PytestTester)
        1    0.000    0.000    0.000    0.000 entity.py:540(GeometrySet)
        1    0.000    0.000    0.000    0.000 mutable_ndim_array.py:4(MutableNDimArray)
        1    0.000    0.000    0.000    0.000 multidimensional.py:56(vectorize)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1336(CosineAnnealingWarmRestarts)
        1    0.000    0.000    0.000    0.000 inputs.py:1943(PmgVaspPspDirError)
        1    0.000    0.000    0.000    0.000 module.py:27(_IncompatibleKeys)
        1    0.000    0.000    0.000    0.000 threading.py:498(BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 transforms.py:2199(BlendedAffine2D)
        1    0.000    0.000    0.000    0.000 parameter.py:165(UninitializedParameter)
        1    0.000    0.000    0.000    0.000 __init__.py:576(_StreamProxy)
        1    0.000    0.000    0.000    0.000 memory.py:683(CUDAPluggableAllocator)
        1    0.000    0.000    0.000    0.000 Image.py:3727(register_save)
        1    0.000    0.000    0.000    0.000 qconfig.py:79(QConfig)
        1    0.000    0.000    0.000    0.000 errors.py:93(NonPrintableDefect)
        1    0.000    0.000    0.000    0.000 util.py:127(LRUMemo)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:230(__init__)
        2    0.000    0.000    0.000    0.000 {method 'removesuffix' of 'str' objects}
        1    0.000    0.000    0.000    0.000 report.py:36(SQPReport)
        1    0.000    0.000    0.000    0.000 dates.py:1928(ConciseDateConverter)
        1    0.000    0.000    0.000    0.000 __init__.py:234(silent_list)
        1    0.000    0.000    0.000    0.000 design_patterns.py:115(NullFile)
        1    0.000    0.000    0.000    0.000 polyoptions.py:701(Series)
        1    0.000    0.000    0.000    0.000 core.py:4841(AtStringStart)
        1    0.000    0.000    0.000    0.000 events.py:76(CollectionStartEvent)
        1    0.000    0.000    0.000    0.000 Manager.py:1(manager)
        1    0.000    0.000    0.000    0.000 loss.py:786(MultiLabelMarginLoss)
        1    0.000    0.000    0.000    0.000 ticker.py:296(IndexFormatter)
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:26(HessianLinearOperator)
        1    0.000    0.000    0.000    0.000 py39.py:28(UnequalIterablesError)
        1    0.000    0.000    0.000    0.000 decorators.py:207(_SympifyWrapper)
        1    0.000    0.000    0.000    0.000 transforms.py:1343(InverseCosineTransform)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:5(ReorderError)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:363(_broadcast_to_dispatcher)
        1    0.000    0.000    0.000    0.000 configparser.py:276(InterpolationSyntaxError)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1213(_RangeFunc)
        1    0.000    0.000    0.000    0.000 _array_api.py:585(<setcomp>)
        1    0.000    0.000    0.000    0.000 _linalg.py:41(SlogdetResult)
        1    0.000    0.000    0.000    0.000 spawn.py:25(ProcessRaisedException)
        3    0.000    0.000    0.000    0.000 _parser.py:99(checklookbehindgroup)
        1    0.000    0.000    0.000    0.000 geo.py:17(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 ticker.py:2964(OldAutoLocator)
        1    0.000    0.000    0.000    0.000 argparse.py:1308(Namespace)
        1    0.000    0.000    0.000    0.000 single.py:1685(HomogeneousCoeffBest)
        1    0.000    0.000    0.000    0.000 _vertex.py:222(VertexCacheIndex)
        1    0.000    0.000    0.000    0.000 polyerrors.py:6(BasePolynomialError)
        1    0.000    0.000    0.000    0.000 core.py:6844(_frommethod)
        1    0.000    0.000    0.000    0.000 index_tricks.py:109(nd_grid)
        1    0.000    0.000    0.000    0.000 mathtext.py:1404(Box)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:591(rv_discrete_frozen)
        1    0.000    0.000    0.000    0.000 str.py:998(StrReprPrinter)
        1    0.000    0.000    0.000    0.000 utils.py:226(CallbackIOWrapper)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:384(LocalSearchWrapper)
        1    0.000    0.000    0.000    0.000 abc.py:75(MetaPathFinder)
        1    0.000    0.000    0.000    0.000 constraints.py:245(_IntegerInterval)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:577(ExponentialLR)
        1    0.000    0.000    0.000    0.000 connection.py:764(ConnectionWrapper)
        1    0.000    0.000    0.000    0.000 animation.py:1384(TimedAnimation)
        1    0.000    0.000    0.000    0.000 nodes.py:79(ScalarNode)
        1    0.000    0.000    0.000    0.000 usertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _exceptions.py:56(_UFuncBinaryResolutionError)
        1    0.000    0.000    0.000    0.000 scale.py:404(InvertedSymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:7(CharacteristicZero)
        1    0.000    0.000    0.000    0.000 _static.py:9(Static)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:234(MatlabObject)
        1    0.000    0.000    0.000    0.000 optimization.py:58(Secant)
        1    0.000    0.000    0.000    0.000 util.py:185(_GroupConsecutive)
        1    0.000    0.000    0.000    0.000 core.py:451(DebugActions)
        1    0.000    0.000    0.000    0.000 arpack.py:315(_ArpackParams)
        1    0.000    0.000    0.000    0.000 readers.py:107(NamespaceReader)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:424(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 request.py:624(HTTPErrorProcessor)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:608(SequentialLR)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:301(Metropolis)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1019(Anderson)
        1    0.000    0.000    0.000    0.000 _sources.py:86(SourceContext)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:376(_RewindState)
        1    0.000    0.000    0.000    0.000 constraints.py:311(_GreaterThan)
        1    0.000    0.000    0.000    0.000 scanner.py:2023(EOLComment)
        1    0.000    0.000    0.000    0.000 serialization.py:286(_open_zipfile_writer_file)
        1    0.000    0.000    0.000    0.000 collections.py:1296(StarPolygonCollection)
        1    0.000    0.000    0.000    0.000 worker.py:51(ManagerWatchdog)
        5    0.000    0.000    0.000    0.000 platform.py:775(_unknown_as_blank)
        1    0.000    0.000    0.000    0.000 ticker.py:1845(FixedLocator)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:450(OptionDummy)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:658(InterpolatedUnivariateSpline)
        1    0.000    0.000    0.000    0.000 _constraints.py:21(NonlinearConstraint)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:537(FreeModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 _comparison.py:389(ObjectPair)
        1    0.000    0.000    0.000    0.000 csv.py:54(excel)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000    0.000    0.000 proxy.py:304(GraphAppendingTracer)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:272(MultiplicativeLR)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:33(mpnumeric)
        1    0.000    0.000    0.000    0.000 core.py:5206(ZeroOrMore)
        1    0.000    0.000    0.000    0.000 core.py:241(_ParseActionIndexError)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:173(_enable_get_lr_call)
        1    0.000    0.000    0.000    0.000 widgets.py:948(RadioButtons)
        1    0.000    0.000    0.000    0.000 _recursive.py:123(SourceContext)
        1    0.000    0.000    0.000    0.000 _linalg.py:37(QRResult)
        1    0.000    0.000    0.000    0.000 threading.py:1370(Timer)
        1    0.000    0.000    0.000    0.000 _mio4.py:89(VarHeader4)
        1    0.000    0.000    0.000    0.000 _mgc.py:17(_ParallelP)
        1    0.000    0.000    0.000    0.000 _linalg.py:45(SVDResult)
        1    0.000    0.000    0.000    0.000 mock.py:2388(_ANY)
        2    0.000    0.000    0.000    0.000 calendar.py:76(__init__)
        1    0.000    0.000    0.000    0.000 radau.py:549(RadauDenseOutput)
        1    0.000    0.000    0.000    0.000 _ltisys.py:737(TransferFunctionContinuous)
        1    0.000    0.000    0.000    0.000 fused.py:13(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 ticker.py:1985(MultipleLocator)
        1    0.000    0.000    0.000    0.000 _animation_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mock.py:2933(_AsyncIterator)
        1    0.000    0.000    0.000    0.000 threading.py:1001(_set_ident)
        1    0.000    0.000    0.000    0.000 parse.py:182(_NetlocResultMixinStr)
        1    0.000    0.000    0.000    0.000 _util.py:559(_FunctionWrapper)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:9(MathieuBase)
        1    0.000    0.000    0.000    0.000 geo.py:419(LambertTransform)
        1    0.000    0.000    0.000    0.000 context.py:295(ForkServerProcess)
        2    0.000    0.000    0.000    0.000 core.py:47(condition)
        1    0.000    0.000    0.000    0.000 instancenorm.py:153(LazyInstanceNorm1d)
        1    0.000    0.000    0.000    0.000 traceback.py:613(_ExceptionPrintContext)
        1    0.000    0.000    0.000    0.000 _policybase.py:41(__init__)
        1    0.000    0.000    0.000    0.000 errors.py:45(UnsupportedOperatorError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1430(Vbox)
        1    0.000    0.000    0.000    0.000 _manylinux.py:80(_GLibCVersion)
        1    0.000    0.000    0.000    0.000 structures.py:7(DataChunkDF)
        1    0.000    0.000    0.000    0.000 __init__.py:822(Lookup)
        1    0.000    0.000    0.000    0.000 queue.py:23(Full)
        1    0.000    0.000    0.000    0.000 __init__.py:29(context)
        3    0.000    0.000    0.000    0.000 numeric.py:63(_zeros_like_dispatcher)
        1    0.000    0.000    0.000    0.000 message.py:1195(EmailMessage)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1153(_Frame)
        1    0.000    0.000    0.000    0.000 blas.py:250(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:152(RootOf)
        1    0.000    0.000    0.000    0.000 polyoptions.py:664(Include)
        1    0.000    0.000    0.000    0.000 polyoptions.py:674(All)
        1    0.000    0.000    0.000    0.000 loss.py:474(MSELoss)
        1    0.000    0.000    0.000    0.000 core.py:5880(Group)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2106(wrap_logical_op_with_cast_to)
        1    0.000    0.000    0.000    0.000 parse.py:212(_NetlocResultMixinBytes)
        1    0.000    0.000    0.000    0.000 protocols.py:109(BufferedProtocol)
        1    0.000    0.000    0.000    0.000 constraints.py:504(_PositiveDefinite)
        1    0.000    0.000    0.000    0.000 expr.py:4076(UnevaluatedExpr)
        1    0.000    0.000    0.000    0.000 decorator.py:101(no_attrs_in_subclass)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1245(ComplexFloatingFormat)
        1    0.000    0.000    0.000    0.000 offsetbox.py:368(PackerBase)
        1    0.000    0.000    0.000    0.000 tz.py:373(_tzfile)
        1    0.000    0.000    0.000    0.000 pickletools.py:948(StackObject)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:659(FitDataError)
        1    0.000    0.000    0.000    0.000 __init__.py:1786(RootLogger)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:94(_Bunch)
        1    0.000    0.000    0.000    0.000 arpack.py:957(IterInv)
        1    0.000    0.000    0.000    0.000 fused.py:149(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 _infra.py:302(Invocation)
        1    0.000    0.000    0.000    0.000 batchnorm.py:306(LazyBatchNorm1d)
        1    0.000    0.000    0.000    0.000 _interface.py:747(_ScaledLinearOperator)
        1    0.000    0.000    0.000    0.000 source.py:1(<module>)
        2    0.000    0.000    0.000    0.000 axis.py:604(__init__)
        1    0.000    0.000    0.000    0.000 core.py:5917(Dict)
        1    0.000    0.000    0.000    0.000 dataframes.py:337(CaptureGetAttr)
        1    0.000    0.000    0.000    0.000 _version.py:70(<listcomp>)
        1    0.000    0.000    0.000    0.000 legend_handler.py:541(HandlerStem)
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:39(LagrangianHessian)
        5    0.000    0.000    0.000    0.000 libmpf.py:49(<lambda>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:451(ConstantLR)
        1    0.000    0.000    0.000    0.000 _typing.py:63(NestedSequence)
        1    0.000    0.000    0.000    0.000 __init__.py:10(warn_distutils_present)
        1    0.000    0.000    0.000    0.000 backend_agg.py:612(_BackendAgg)
        4    0.000    0.000    0.000    0.000 core.py:6052(postParse)
        1    0.000    0.000    0.000    0.000 _spdx.py:10(SPDXException)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10816(FitUniformFixedScaleDataError)
        1    0.000    0.000    0.000    0.000 errors.py:33(MessageDefect)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:404(GroupMember)
        1    0.000    0.000    0.000    0.000 frontend.py:101(FrontendError)
        1    0.000    0.000    0.000    0.000 parameter.py:6(_ParameterMeta)
        1    0.000    0.000    0.000    0.000 _array_like.py:39(_SupportsArray)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3563(Show)
        1    0.000    0.000    0.000    0.000 emitter.py:32(ScalarAnalysis)
        1    0.000    0.000    0.000    0.000 utils.py:77(_ntuple_from_first)
        1    0.000    0.000    0.000    0.000 single.py:732(Bernoulli)
        1    0.000    0.000    0.000    0.000 instancenorm.py:269(LazyInstanceNorm2d)
        1    0.000    0.000    0.000    0.000 _aliases.py:194(UniqueInverseResult)
        1    0.000    0.000    0.000    0.000 numerictypes.py:425(_typedict)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:9(ExportTypes)
        1    0.000    0.000    0.000    0.000 lambdify.py:1336(_TensorflowEvaluatorPrinter)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1088(_DOF_estimator_geom)
        1    0.000    0.000    0.000    0.000 locks.py:13(_ContextManagerMixin)
        1    0.000    0.000    0.000    0.000 single.py:2842(LieGroup)
        1    0.000    0.000    0.000    0.000 cache.py:5(_cache)
        1    0.000    0.000    0.000    0.000 pickletools.py:174(ArgumentDescriptor)
        1    0.000    0.000    0.000    0.000 {built-in method _imp.get_frozen_object}
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1798(_process_parameters)
        1    0.000    0.000    0.000    0.000 calendar.py:26(IllegalMonthError)
        1    0.000    0.000    0.000    0.000 jiterator.py:10(_CodeParser)
        1    0.000    0.000    0.000    0.000 serialization.py:1096(StorageType)
        1    0.000    0.000    0.000    0.000 _utils.py:610(ExceptionWrapper)
        1    0.000    0.000    0.000    0.000 core.py:4073(_ErrorStop)
        1    0.000    0.000    0.000    0.000 single.py:2572(NthLinearEulerEqNonhomogeneousUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 fetch.py:7(_BaseDatasetFetcher)
        1    0.000    0.000    0.000    0.000 spawn.py:79(ProcessContext)
        1    0.000    0.000    0.000    0.000 __init__.py:41(PropModule)
        1    0.000    0.000    0.000    0.000 legend_handler.py:176(HandlerNpointsYoffsets)
        1    0.000    0.000    0.000    0.000 __init__.py:522(maxdict)
        1    0.000    0.000    0.000    0.000 rcsetup.py:442(_validate_mathtext_fallback_to_cm)
        1    0.000    0.000    0.000    0.000 single.py:2483(NthLinearEulerEqNonhomogeneousVariationOfParameters)
        1    0.000    0.000    0.000    0.000 trirefine.py:12(TriRefiner)
        1    0.000    0.000    0.000    0.000 backend_tools.py:487(AxisScaleBase)
        1    0.000    0.000    0.000    0.000 numbers.py:12(Number)
        1    0.000    0.000    0.000    0.000 parser.py:804(RoundTripParser)
        1    0.000    0.000    0.000    0.000 threading.py:267(__exit__)
        1    0.000    0.000    0.000    0.000 contextlib.py:340(__init__)
        1    0.000    0.000    0.000    0.000 geo.py:255(AitoffTransform)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1278(LocationEvent)
        1    0.000    0.000    0.000    0.000 ticker.py:1154(LogFormatterMathtext)
        1    0.000    0.000    0.000    0.000 __init__.py:2332(_classproperty)
        1    0.000    0.000    0.000    0.000 _czt.py:275(ZoomFFT)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:440(__init__)
        2    0.000    0.000    0.000    0.000 _state.py:39(__bool__)
        1    0.000    0.000    0.000    0.000 events.py:128(DocumentStartEvent)
        1    0.000    0.000    0.000    0.000 std.py:214(EMA)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:353(StepLR)
        1    0.000    0.000    0.000    0.000 utilities.py:7(DotProdSimpState)
        1    0.000    0.000    0.000    0.000 profiler_util.py:622(MemRecordsAcc)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:97(BaseTorchDispatchMode)
        1    0.000    0.000    0.000    0.000 parse.py:127(_ResultMixinStr)
        3    0.000    0.000    0.000    0.000 {built-in method sys.audit}
        1    0.000    0.000    0.000    0.000 __init__.py:235(Splitter)
        1    0.000    0.000    0.000    0.000 series.py:1800(SurfaceBaseSeries)
        1    0.000    0.000    0.000    0.000 protocols.py:66(Protocol)
        1    0.000    0.000    0.000    0.000 loss.py:991(SoftMarginLoss)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1173(_DOF_estimator_min_E)
        1    0.000    0.000    0.000    0.000 core.py:2415(NoMatch)
        1    0.000    0.000    0.000    0.000 hb.py:376(<dictcomp>)
        1    0.000    0.000    0.000    0.000 events.py:170(AliasEvent)
        1    0.000    0.000    0.000    0.000 argparse.py:1097(_HelpAction)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:333(MailboxList)
        1    0.000    0.000    0.000    0.000 hyper.py:71(TupleParametersBase)
        1    0.000    0.000    0.000    0.000 instancenorm.py:308(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 graph.py:203(save_on_cpu)
        1    0.000    0.000    0.000    0.000 _adapters.py:20(TraversableResourcesLoader)
        1    0.000    0.000    0.000    0.000 _typing.py:47(SupportsRead)
        1    0.000    0.000    0.000    0.000 index_tricks.py:211(MGridClass)
        1    0.000    0.000    0.000    0.000 unicode.py:322(Hebrew)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:4(DegenerateDataWarning)
        1    0.000    0.000    0.000    0.000 {built-in method _functools.cmp_to_key}
        1    0.000    0.000    0.000    0.000 trifinder.py:7(TriFinder)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:107(<listcomp>)
        1    0.000    0.000    0.000    0.000 font_manager.py:939(_JSONEncoder)
        1    0.000    0.000    0.000    0.000 protocols.py:177(SubprocessProtocol)
        1    0.000    0.000    0.000    0.000 core.py:5240(DelimitedList)
        1    0.000    0.000    0.000    0.000 _morestats.py:1203(_BigFloat)
        1    0.000    0.000    0.000    0.000 package_importer.py:668(_ModuleNode)
        1    0.000    0.000    0.000    0.000 deprecation.py:254(_deprecate_privatize_attribute)
        1    0.000    0.000    0.000    0.000 unicode.py:8(_lazyclassproperty)
        1    0.000    0.000    0.000    0.000 scalarstring.py:54(LiteralScalarString)
        1    0.000    0.000    0.000    0.000 modules.py:454(FreeModulePolyRing)
        1    0.000    0.000    0.000    0.000 orderings.py:242(_ItemGetter)
        1    0.000    0.000    0.000    0.000 numbers.py:2751(RationalConstant)
        1    0.000    0.000    0.000    0.000 _covariance.py:618(CovViaPSD)
        1    0.000    0.000    0.000    0.000 _vertex.py:165(VertexVectorField)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1355(SmoothBivariateSpline)
        1    0.000    0.000    0.000    0.000 report.py:44(IPReport)
        1    0.000    0.000    0.000    0.000 mock.py:394(Base)
        1    0.000    0.000    0.000    0.000 single.py:2387(NthLinearEulerEqHomogeneous)
        1    0.000    0.000    0.000    0.000 dispatcher.py:33(RaiseNotImplementedError)
        1    0.000    0.000    0.000    0.000 pooling.py:1036(AdaptiveMaxPool2d)
        1    0.000    0.000    0.000    0.000 Image.py:3712(register_mime)
        1    0.000    0.000    0.000    0.000 client.py:176(HTTPMessage)
        1    0.000    0.000    0.000    0.000 ticker.py:367(FuncFormatter)
        1    0.000    0.000    0.000    0.000 _typing.py:113(DTypesBool)
        1    0.000    0.000    0.000    0.000 mixins.py:9(_LoopBoundMixin)
        1    0.000    0.000    0.000    0.000 queue.py:242(LifoQueue)
        1    0.000    0.000    0.000    0.000 constraints.py:232(_OneHot)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1454(LSQBivariateSpline)
        1    0.000    0.000    0.000    0.000 error.py:120(MarkedYAMLError)
        1    0.000    0.000    0.000    0.000 ticker.py:2577(SymmetricalLogLocator)
        1    0.000    0.000    0.000    0.000 unicode.py:282(Hangul)
        1    0.000    0.000    0.000    0.000 arpack.py:288(ArpackNoConvergence)
        1    0.000    0.000    0.000    0.000 argparse.py:1680(_MutuallyExclusiveGroup)
        4    0.000    0.000    0.000    0.000 _pep440.py:426(_parse_local_version)
        1    0.000    0.000    0.000    0.000 conv.py:1128(_ConvTransposeMixin)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:268(_reduce_op)
        1    0.000    0.000    0.000    0.000 std.py:40(TqdmWarning)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:15(DummyArray)
        1    0.000    0.000    0.000    0.000 orderings.py:45(GradedLexOrder)
        1    0.000    0.000    0.000    0.000 Image.py:3228(SupportsArrayInterface)
        1    0.000    0.000    0.000    0.000 cm.py:78(__init__)
        1    0.000    0.000    0.000    0.000 exceptions.py:300(RecursiveGrammarException)
        1    0.000    0.000    0.000    0.000 band_data_in.py:25(check)
        1    0.000    0.000    0.000    0.000 response.py:57(addinfo)
        1    0.000    0.000    0.000    0.000 reader.py:35(ReaderError)
        1    0.000    0.000    0.000    0.000 request.py:1641(DataHandler)
        1    0.000    0.000    0.000    0.000 _spectral.py:11(_NoConvergence)
        1    0.000    0.000    0.000    0.000 legend_handler.py:433(HandlerErrorbar)
        1    0.000    0.000    0.000    0.000 events.py:659(_Local)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:106(HyperbolicFunction)
        1    0.000    0.000    0.000    0.000 para4band.py:72(Eigen_Trans)
        1    0.000    0.000    0.000    0.000 pyplot.py:121(_NotIPython)
        1    0.000    0.000    0.000    0.000 _base.py:141(_AcquireFutures)
        2    0.000    0.000    0.000    0.000 calendar.py:57(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2442(_UnpackSpecialForm)
        1    0.000    0.000    0.000    0.000 ElementPath.py:350(_SelectorContext)
        1    0.000    0.000    0.000    0.000 backend_tools.py:429(_ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 _trace.py:290(TracingCheckError)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:159(SpectralNormLoadStateDictPreHook)
        1    0.000    0.000    0.000    0.000 core.py:797(_DomainCheckInterval)
        1    0.000    0.000    0.000    0.000 __init__.py:413(SeparatedValues)
        2    0.000    0.000    0.000    0.000 results.py:460(<lambda>)
        1    0.000    0.000    0.000    0.000 datapipes.py:18(DataFramesAsTuplesPipe)
        1    0.000    0.000    0.000    0.000 core.py:1125(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 mathtext.py:1810(Rule)
        1    0.000    0.000    0.000    0.000 error.py:176(MarkedYAMLWarning)
        1    0.000    0.000    0.000    0.000 transports.py:172(DatagramTransport)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:574(SubModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 core.py:3673(LineStart)
        1    0.000    0.000    0.000    0.000 calendar.py:594(LocaleHTMLCalendar)
        1    0.000    0.000    0.000    0.000 optimizer.py:20(_RequiredParameter)
        1    0.000    0.000    0.000    0.000 mathtext.py:1309(STIXFontConstants)
        1    0.000    0.000    0.000    0.000 more.py:4171(countable)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:104(ImmutableSparseNDimArray)
        1    0.000    0.000    0.000    0.000 _exceptions.py:32(UFuncTypeError)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_iscased}
        1    0.000    0.000    0.000    0.000 exceptions.py:19(DuplicateConstraint)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:169(Token)
        1    0.000    0.000    0.000    0.000 serialization.py:258(_open_buffer_reader)
        1    0.000    0.000    0.000    0.000 error.py:248(MantissaNoDotYAML1_1Warning)
        1    0.000    0.000    0.000    0.000 _coo.py:1352(coo_array)
        1    0.000    0.000    0.000    0.000 argparse.py:1253(FileType)
        1    0.000    0.000    0.000    0.000 argparse.py:917(_StoreAction)
        1    0.000    0.000    0.000    0.000 domainelement.py:6(DomainElement)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:446(ObsRoute)
        2    0.000    0.000    0.000    0.000 six.py:199(__get_module)
        1    0.000    0.000    0.000    0.000 sympify.py:49(CantSympify)
        2    0.000    0.000    0.000    0.000 _compression.py:36(readable)
        1    0.000    0.000    0.000    0.000 configparser.py:1242(SafeConfigParser)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:153(JitTypeTraceStoreLogger)
        1    0.000    0.000    0.000    0.000 instancenorm.py:77(InstanceNorm1d)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:600(rv_continuous_frozen)
        1    0.000    0.000    0.000    0.000 constraints.py:284(_IntegerGreaterThan)
        1    0.000    0.000    0.000    0.000 computed_entries.py:155(ManualEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 simpledomain.py:7(SimpleDomain)
        1    0.000    0.000    0.000    0.000 __init__.py:10(NBitBase)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:840(ChainedScheduler)
        1    0.000    0.000    0.000    0.000 pooling.py:935(LPPool2d)
        1    0.000    0.000    0.000    0.000 context.py:233(__init__)
        1    0.000    0.000    0.000    0.000 mock.py:1053(_AnyComparer)
        1    0.000    0.000    0.000    0.000 feedparser.py:532(BytesFeedParser)
        1    0.000    0.000    0.000    0.000 calendar.py:548(different_locale)
        1    0.000    0.000    0.000    0.000 _array_like.py:44(_SupportsArrayFunc)
        1    0.000    0.000    0.000    0.000 python.py:67(Lit)
        1    0.000    0.000    0.000    0.000 lsoda.py:211(LsodaDenseOutput)
        1    0.000    0.000    0.000    0.000 _nonlin.py:589(GenericBroyden)
        1    0.000    0.000    0.000    0.000 factorials.py:17(CombinatorialFunction)
        1    0.000    0.000    0.000    0.000 legend_handler.py:306(HandlerLineCollection)
        1    0.000    0.000    0.000    0.000 series.py:2122(GenericDataSeries)
        1    0.000    0.000    0.000    0.000 error.py:19(URLError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:251(BareQuotedString)
        1    0.000    0.000    0.000    0.000 __init__.py:414(_make_alias)
        1    0.000    0.000    0.000    0.000 argparse.py:1116(_VersionAction)
        1    0.000    0.000    0.000    0.000 dataframes.py:43(DataFrameTracedOps)
        1    0.000    0.000    0.000    0.000 diophantine.py:256(Linear)
        1    0.000    0.000    0.000    0.000 patches.py:2025(Circle)
        1    0.000    0.000    0.000    0.000 linsolve.py:28(MatrixRankWarning)
        1    0.000    0.000    0.000    0.000 dumper.py:21(BaseDumper)
        1    0.000    0.000    0.000    0.000 datapipes.py:111(ExampleAggregateAsDataFrames)
        2    0.000    0.000    0.000    0.000 __init__.py:983(setFormatter)
        1    0.000    0.000    0.000    0.000 single.py:2667(SecondLinearBessel)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:44(_FakeGlobalNamespace)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:176(FunctionalizeInterpreter)
        1    0.000    0.000    0.000    0.000 constraints.py:409(_Multinomial)
        1    0.000    0.000    0.000    0.000 mathtext.py:1298(ComputerModernFontConstants)
        1    0.000    0.000    0.000    0.000 sharding.py:21(_ShardingIterDataPipe)
        1    0.000    0.000    0.000    0.000 __init__.py:82(is_available)
        1    0.000    0.000    0.000    0.000 pooling.py:1006(AdaptiveMaxPool1d)
        1    0.000    0.000    0.000    0.000 tensor.py:816(<listcomp>)
        1    0.000    0.000    0.000    0.000 configparser.py:181(NoSectionError)
        1    0.000    0.000    0.000    0.000 polyoptions.py:366(Field)
        1    0.000    0.000    0.000    0.000 _endian.py:23(_swapped_meta)
        1    0.000    0.000    0.000    0.000 animation.py:637(FFMpegFileWriter)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:57(DoubleInfiniteFunc)
        1    0.000    0.000    0.000    0.000 modules.py:1328(QuotientModuleElement)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:717(PolynomialLR)
        1    0.000    0.000    0.000    0.000 _array_like.py:160(_UnknownType)
        1    0.000    0.000    0.000    0.000 core.py:4783(_Indent)
        1    0.000    0.000    0.000    0.000 _filter_design.py:38(BadCoefficients)
        1    0.000    0.000    0.000    0.000 queues.py:234(LifoQueue)
        1    0.000    0.000    0.000    0.000 function.py:867(UndefSageHelper)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1928(nchypergeom_fisher_gen)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1625(StateSpaceContinuous)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:949(Operator)
        1    0.000    0.000    0.000    0.000 pickletools.py:1093(OpcodeInfo)
        2    0.000    0.000    0.000    0.000 torch_version.py:19(__init__)
        1    0.000    0.000    0.000    0.000 _factories.py:25(_TzOffsetFactory)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:122(__bool__)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:366(ObjectiveFunWrapper)
        1    0.000    0.000    0.000    0.000 outputs.py:4533(VaspParseError)
        1    0.000    0.000    0.000    0.000 polyoptions.py:375(Greedy)
        1    0.000    0.000    0.000    0.000 frontend.py:315(Builder)
        1    0.000    0.000    0.000    0.000 rszeta.py:53(RSCache)
        1    0.000    0.000    0.000    0.000 six.py:144(MovedAttribute)
        1    0.000    0.000    0.000    0.000 decorator.py:254(ContextManager)
        1    0.000    0.000    0.000    0.000 dataframes.py:205(CaptureCall)
        1    0.000    0.000    0.000    0.000 _ltisys.py:2295(Bunch)
        1    0.000    0.000    0.000    0.000 case.py:201(_AssertRaisesBaseContext)
        1    0.000    0.000    0.000    0.000 profiler.py:745(EnforceUnique)
        1    0.000    0.000    0.000    0.000 _minimize.py:1066(_Remove_From_Func)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:980(NoExtraItemsType)
        2    0.000    0.000    0.000    0.000 arrayprint.py:493(_recursive_guard)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1670(SphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 diophantine.py:695(HomogeneousTernaryQuadraticNormal)
        1    0.000    0.000    0.000    0.000 logic.py:365(And)
        1    0.000    0.000    0.000    0.000 constraints.py:345(_LessThan)
        1    0.000    0.000    0.000    0.000 frontend.py:118(UnsupportedNodeError)
        2    0.000    0.000    0.000    0.000 version.py:511(_parse_local_version)
        1    0.000    0.000    0.000    0.000 typing.py:1543(__repr__)
        1    0.000    0.000    0.000    0.000 constraints.py:265(_IntegerLessThan)
        1    0.000    0.000    0.000    0.000 api.py:87(AllGatherStates)
        1    0.000    0.000    0.000    0.000 _typing.py:139(DTypesReal)
        1    0.000    0.000    0.000    0.000 Physics_System.py:5(Phy_Sys)
        1    0.000    0.000    0.000    0.000 diophantine.py:454(BinaryQuadratic)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:885(_PatchedFnSetItem)
        1    0.000    0.000    0.000    0.000 graph.py:422(_swap_with_cloned)
        1    0.000    0.000    0.000    0.000 function.py:576(InplaceFunction)
        1    0.000    0.000    0.000    0.000 _vertex.py:430(ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 series.py:2104(ContourSeries)
        1    0.000    0.000    0.000    0.000 dropout.py:25(Dropout)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:16(PlaceHolder)
        1    0.000    0.000    0.000    0.000 dtypes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1226(_OptFunc)
        1    0.000    0.000    0.000    0.000 splitter_base.py:37(_SplitterSettingBase)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._reload_guard}
        1    0.000    0.000    0.000    0.000 unicode.py:160(Greek)
        1    0.000    0.000    0.000    0.000 _util.py:571(_ScalarFunctionWrapper)
        1    0.000    0.000    0.000    0.000 pickletools.py:2550(_Example)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3256(_NamedTupleMeta)
        1    0.000    0.000    0.000    0.000 axis.py:596(_LazyTickList)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:347(GroupList)
        1    0.000    0.000    0.000    0.000 singleton.py:158(Singleton)
        1    0.000    0.000    0.000    0.000 ase.py:31(Atoms)
        1    0.000    0.000    0.000    0.000 _interface.py:816(MatrixLinearOperator)
        1    0.000    0.000    0.000    0.000 _typing.py:68(SupportsArrayNamespace)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:211(GaussianRational)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:99(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 quadrature.py:260(TanhSinh)
        1    0.000    0.000    0.000    0.000 constraints.py:362(_Interval)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1090(BroadcastingListCls)
        1    0.000    0.000    0.000    0.000 patches.py:2047(LArrow)
        1    0.000    0.000    0.000    0.000 constraints.py:398(_Simplex)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:273(_ExtensionsSpecialForm)
        1    0.000    0.000    0.000    0.000 core.py:5813(TokenConverter)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:163(_Sentinel)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:360(_unspecified)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:717(_RealParameter)
        1    0.000    0.000    0.000    0.000 parser.py:71(HeaderParser)
        1    0.000    0.000    0.000    0.000 headerregistry.py:387(SingleAddressHeader)
        1    0.000    0.000    0.000    0.000 argparse.py:975(_StoreTrueAction)
        1    0.000    0.000    0.000    0.000 single.py:2098(NthLinearConstantCoeffHomogeneous)
        1    0.000    0.000    0.000    0.000 core.py:3017(Char)
        1    0.000    0.000    0.000    0.000 __init__.py:160(_special_method_cache)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(LimitOverrunError)
        1    0.000    0.000    0.000    0.000 mock.py:40(InvalidSpecError)
        1    0.000    0.000    0.000    0.000 modules.py:1867(InnerEndomorphism)
        1    0.000    0.000    0.000    0.000 qs.py:36(FactorBaseElem)
        1    0.000    0.000    0.000    0.000 reduction.py:211(_C)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1554(RectBivariateSpline)
        1    0.000    0.000    0.000    0.000 constraints.py:380(_HalfOpenInterval)
        1    0.000    0.000    0.000    0.000 patches.py:2200(Round4)
        1    0.000    0.000    0.000    0.000 legend_handler.py:260(HandlerPatch)
        1    0.000    0.000    0.000    0.000 pathlib.py:331(_PreciseSelector)
        1    0.000    0.000    0.000    0.000 _codata.py:2116(ConstantWarning)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1009(ShiftA)
        1    0.000    0.000    0.000    0.000 modules.py:1096(ModuleOrder)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:18(SymbolicContext)
        1    0.000    0.000    0.000    0.000 geo.py:458(InvertedLambertTransform)
        1    0.000    0.000    0.000    0.000 ticker.py:1889(NullLocator)
        1    0.000    0.000    0.000    0.000 configparser.py:340(MissingSectionHeaderError)
        1    0.000    0.000    0.000    0.000 solveset.py:68(NonlinearError)
        1    0.000    0.000    0.000    0.000 pathlib.py:300(_Selector)
        1    0.000    0.000    0.000    0.000 patches.py:3165(_Bracket)
        1    0.000    0.000    0.000    0.000 _idl.py:145(Pointer)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3675(special_ortho_group_frozen)
        1    0.000    0.000    0.000    0.000 polyerrors.py:30(PolynomialDivisionFailed)
        1    0.000    0.000    0.000    0.000 __init__.py:323(device_of)
        1    0.000    0.000    0.000    0.000 _ode.py:767(IntegratorConcurrencyError)
        1    0.000    0.000    0.000    0.000 _typing.py:145(DTypesComplex)
        1    0.000    0.000    0.000    0.000 dataframes.py:187(CaptureLikeMock)
        1    0.000    0.000    0.000    0.000 datapipe.py:207(DFIterDataPipe)
        1    0.000    0.000    0.000    0.000 tarfile.py:704(ExFileObject)
        1    0.000    0.000    0.000    0.000 mathtext.py:1318(STIXSansFontConstants)
        1    0.000    0.000    0.000    0.000 __init__.py:310(first_invoke)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5899(uniform_direction_frozen)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1076(UnShiftB)
        1    0.000    0.000    0.000    0.000 dataframes.py:360(CaptureInitial)
        1    0.000    0.000    0.000    0.000 loader.py:23(BaseLoader)
        1    0.000    0.000    0.000    0.000 worker.py:119(_IterableDatasetStopIteration)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:458(_ExperimentalConfiguration)
        1    0.000    0.000    0.000    0.000 diophantine.py:782(HomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 animation.py:753(ImageMagickFileWriter)
        1    0.000    0.000    0.000    0.000 tokens.py:200(DirectiveToken)
        1    0.000    0.000    0.000    0.000 function.py:281(FunctionMeta)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3571(ShowBase)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(BadRequiredStrength)
        1    0.000    0.000    0.000    0.000 overrides.py:1865(BaseTorchFunctionMode)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'generator' objects}
        1    0.000    0.000    0.000    0.000 _fitpack2.py:780(LSQUnivariateSpline)
        1    0.000    0.000    0.000    0.000 arpack.py:932(LuInv)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:45(DupFd)
        1    0.000    0.000    0.000    0.000 core.py:84(MaskedArrayFutureWarning)
        1    0.000    0.000    0.000    0.000 ElementTree.py:106(ParseError)
        1    0.000    0.000    0.000    0.000 scalarint.py:89(OctalInt)
        1    0.000    0.000    0.000    0.000 csv.py:69(unix_dialect)
        1    0.000    0.000    0.000    0.000 parameter.py:196(UninitializedBuffer)
        1    0.000    0.000    0.000    0.000 core.py:840(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 pathlib.py:378(_RecursiveWildcardSelector)
        1    0.000    0.000    0.000    0.000 parse.py:315(DefragResult)
        1    0.000    0.000    0.000    0.000 mock.py:295(__init__)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:191(PHBase)
        1    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 request.py:1383(HTTPSHandler)
        1    0.000    0.000    0.000    0.000 pathlib.py:834(PurePosixPath)
        2    0.000    0.000    0.000    0.000 _compression.py:160(tell)
        2    0.000    0.000    0.000    0.000 {method '__exit__' of 'posix.ScandirIterator' objects}
        1    0.000    0.000    0.000    0.000 suite.py:375(_DebugResult)
        1    0.000    0.000    0.000    0.000 graph.py:458(_CloneArgBeforeMutateMode)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1129(_idat)
        1    0.000    0.000    0.000    0.000 patches.py:2496(Arc3)
        1    0.000    0.000    0.000    0.000 diophantine.py:958(GeneralSumOfSquares)
        1    0.000    0.000    0.000    0.000 libmpf.py:132(h_mask_big)
        1    0.000    0.000    0.000    0.000 _misc.py:9(LinAlgWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:753(Filter)
        1    0.000    0.000    0.000    0.000 __init__.py:1261(PlaceHolder)
        1    0.000    0.000    0.000    0.000 mathtext.py:1974(HCentered)
        1    0.000    0.000    0.000    0.000 cyaml.py:22(CBaseLoader)
        1    0.000    0.000    0.000    0.000 __init__.py:250(ExecutableNotFoundError)
        1    0.000    0.000    0.000    0.000 ticker.py:325(NullFormatter)
        1    0.000    0.000    0.000    0.000 __init__.py:714(ExFileObject)
        1    0.000    0.000    0.000    0.000 tokens.py:220(StreamStartToken)
        1    0.000    0.000    0.000    0.000 _exceptions.py:80(_UFuncInputCastingError)
        1    0.000    0.000    0.000    0.000 units.py:74(AxisInfo)
        1    0.000    0.000    0.000    0.000 patches.py:2080(RArrow)
        1    0.000    0.000    0.000    0.000 configparser.py:284(InterpolationDepthError)
        1    0.000    0.000    0.000    0.000 variable.py:8(VariableMeta)
        1    0.000    0.000    0.000    0.000 __init__.py:399(PyDLL)
        1    0.000    0.000    0.000    0.000 mathtext.py:2079(AutoWidthChar)
        1    0.000    0.000    0.000    0.000 numbers.py:2764(IntegerConstant)
        1    0.000    0.000    0.000    0.000 core.py:3722(LineEnd)
        1    0.000    0.000    0.000    0.000 pydoc.py:2209(ModuleScanner)
        1    0.000    0.000    0.000    0.000 numbers.py:3308(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:39(FixedTalbot)
        1    0.000    0.000    0.000    0.000 cyaml.py:158(CDumper)
        1    0.000    0.000    0.000    0.000 numpy.py:346(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rk.py:577(Dop853DenseOutput)
        1    0.000    0.000    0.000    0.000 streams.py:117(ExternalStream)
        1    0.000    0.000    0.000    0.000 backend_managers.py:11(ToolEvent)
        1    0.000    0.000    0.000    0.000 exceptions.py:265(ParseException)
        1    0.000    0.000    0.000    0.000 _guards.py:74(GuardBuilderBase)
        1    0.000    0.000    0.000    0.000 datapipes.py:30(PerRowDataFramesPipe)
        1    0.000    0.000    0.000    0.000 request.py:1244(ProxyDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 patches.py:1945(_Base)
        1    0.000    0.000    0.000    0.000 events.py:151(DocumentEndEvent)
        1    0.000    0.000    0.000    0.000 single.py:2787(SecondLinearAiry)
        1    0.000    0.000    0.000    0.000 optimization.py:104(MNewton)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:767(CosineAnnealingLR)
        2    0.000    0.000    0.000    0.000 index_tricks.py:761(__init__)
        1    0.000    0.000    0.000    0.000 Image.py:70(DecompressionBombWarning)
        1    0.000    0.000    0.000    0.000 arpack.py:908(SpLuInv)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:262(RandomDisplacement)
        1    0.000    0.000    0.000    0.000 comments.py:643(CommentedMapView)
        1    0.000    0.000    0.000    0.000 mock.py:2140(MagicProxy)
        1    0.000    0.000    0.000    0.000 instancenorm.py:192(InstanceNorm2d)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1081(ZerosPolesGainContinuous)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1129(MeijerShiftB)
        1    0.000    0.000    0.000    0.000 parsing.py:52(NotParenUncert)
        1    0.000    0.000    0.000    0.000 _testutils.py:51(FPUModeChangeWarning)
        1    0.000    0.000    0.000    0.000 meijerint.py:313(_CoeffExpValueError)
        1    0.000    0.000    0.000    0.000 utils.py:34(MatchAllNode)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._set_promotion_state}
        1    0.000    0.000    0.000    0.000 _factories.py:19(_TzFactory)
        1    0.000    0.000    0.000    0.000 collections.py:1301(AsteriskPolygonCollection)
        1    0.000    0.000    0.000    0.000 _linesearch.py:23(LineSearchWarning)
        1    0.000    0.000    0.000    0.000 spglib.py:75(SpglibError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:807(ParameterizedHeaderValue)
        1    0.000    0.000    0.000    0.000 _odepack_py.py:16(ODEintWarning)
        1    0.000    0.000    0.000    0.000 _typing.py:340(_IterDataPipeMeta)
        1    0.000    0.000    0.000    0.000 __init__.py:2349(__init__)
        1    0.000    0.000    0.000    0.000 request.py:1050(HTTPBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 __init__.py:78(UnidentifiedImageError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:217(EncodedWord)
        1    0.000    0.000    0.000    0.000 mathtext.py:1938(Fill)
        1    0.000    0.000    0.000    0.000 constraints.py:222(_Boolean)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2831(_min_dispatcher)
        1    0.000    0.000    0.000    0.000 core.py:4895(FollowedBy)
        1    0.000    0.000    0.000    0.000 boolalg.py:443(__hash__)
        1    0.000    0.000    0.000    0.000 core.py:2378(__init__)
        1    0.000    0.000    0.000    0.000 Image.py:3740(register_save_all)
        1    0.000    0.000    0.000    0.000 polyutils.py:47(RankWarning)
        1    0.000    0.000    0.000    0.000 index_tricks.py:262(OGridClass)
        1    0.000    0.000    0.000    0.000 streamplot.py:233(StreamplotSet)
        1    0.000    0.000    0.000    0.000 offsetbox.py:495(HPacker)
        1    0.000    0.000    0.000    0.000 argparse.py:754(ArgumentError)
        1    0.000    0.000    0.000    0.000 util.py:385(ForkAwareLocal)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1615(_DefaultMixin)
        2    0.000    0.000    0.000    0.000 matexpr.py:486(get_postprocessor)
        1    0.000    0.000    0.000    0.000 tarfile.py:273(ReadError)
        1    0.000    0.000    0.000    0.000 patches.py:2099(DArrow)
        1    0.000    0.000    0.000    0.000 results.py:103(List)
        1    0.000    0.000    0.000    0.000 scanner.py:2037(BlankLineComment)
        1    0.000    0.000    0.000    0.000 polyerrors.py:155(PolificationFailed)
        1    0.000    0.000    0.000    0.000 mathtext.py:1984(VCentered)
        1    0.000    0.000    0.000    0.000 configparser.py:190(DuplicateSectionError)
        1    0.000    0.000    0.000    0.000 numbers.py:3142(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 errors.py:73(SymbolicValueError)
        1    0.000    0.000    0.000    0.000 core.py:4931(PrecededBy)
        1    0.000    0.000    0.000    0.000 unicode.py:135(BasicMultilingualPlane)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:620(<lambda>)
        1    0.000    0.000    0.000    0.000 dataframes.py:298(CaptureAdd)
        1    0.000    0.000    0.000    0.000 activation.py:274(Sigmoid)
        1    0.000    0.000    0.000    0.000 ImageFile.py:723(PyCodecState)
        1    0.000    0.000    0.000    0.000 legend_handler.py:689(HandlerPolyCollection)
        1    0.000    0.000    0.000    0.000 animation.py:613(FFMpegWriter)
        1    0.000    0.000    0.000    0.000 util.py:81(_UnboundedCache)
        1    0.000    0.000    0.000    0.000 dataframes.py:231(CaptureVariableAssign)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:220(Stehfest)
        1    0.000    0.000    0.000    0.000 pooling.py:1132(AdaptiveAvgPool1d)
        1    0.000    0.000    0.000    0.000 unicode.py:141(Latin1)
        1    0.000    0.000    0.000    0.000 uuid.py:78(SafeUUID)
        1    0.000    0.000    0.000    0.000 gradcheck.py:18(GradcheckError)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:42(CGSteihaugSubproblem)
        1    0.000    0.000    0.000    0.000 rl.py:43(glom)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1278(_TimelikeFormat)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:923(ValueTerminal)
        1    0.000    0.000    0.000    0.000 case.py:192(_BaseTestCaseContext)
        1    0.000    0.000    0.000    0.000 process.py:349(AuthenticationString)
        1    0.000    0.000    0.000    0.000 patches.py:3340(Simple)
        1    0.000    0.000    0.000    0.000 mathtext.py:1932(Fil)
        1    0.000    0.000    0.000    0.000 _pep440.py:141(<lambda>)
        1    0.000    0.000    0.000    0.000 pickle.py:97(_Stop)
        1    0.000    0.000    0.000    0.000 _endian.py:48(BigEndianStructure)
        1    0.000    0.000    0.000    0.000 polyoptions.py:44(Flag)
        1    0.000    0.000    0.000    0.000 function.py:107(ArgumentIndexError)
        1    0.000    0.000    0.000    0.000 engine.py:379(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:3420(Fancy)
        1    0.000    0.000    0.000    0.000 magic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataframes.py:178(CaptureA)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:13(IntegrationWarning)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1449(PickEvent)
        2    0.000    0.000    0.000    0.000 rcsetup.py:400(validate_fontsize_None)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:182(Tokenizer)
        1    0.000    0.000    0.000    0.000 transforms.py:453(MellinTransformStripError)
        1    0.000    0.000    0.000    0.000 dates.py:1583(WeekdayLocator)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:820(IdentityVectorFunction)
        1    0.000    0.000    0.000    0.000 _typing.py:22(GenericMeta)
        1    0.000    0.000    0.000    0.000 request.py:1416(UnknownHandler)
        1    0.000    0.000    0.000    0.000 pooling.py:1160(AdaptiveAvgPool2d)
        1    0.000    0.000    0.000    0.000 __init__.py:730(AbsolutePathError)
        1    0.000    0.000    0.000    0.000 argparse.py:204(_Section)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:310(__init__)
        1    0.000    0.000    0.000    0.000 serialization.py:52(SourceChangeWarning)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:933(EWWhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 cache.py:45(__cacheit)
        1    0.000    0.000    0.000    0.000 colors.py:1525(NoNorm)
        1    0.000    0.000    0.000    0.000 scalarstring.py:75(SingleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 core.py:822(_DomainTan)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:9(ReentrancyError)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1837(SmoothSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 polyerrors.py:106(NotAlgebraic)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1260(AnchoredText)
        1    0.000    0.000    0.000    0.000 dviread.py:734(Tfm)
        1    0.000    0.000    0.000    0.000 exceptions.py:20(_ExceptionWordUnicodeSet)
        1    0.000    0.000    0.000    0.000 profiler_util.py:373(Interval)
        1    0.000    0.000    0.000    0.000 patches.py:3053(Curve)
        1    0.000    0.000    0.000    0.000 _parser.py:29(Variable)
        1    0.000    0.000    0.000    0.000 inputs.py:3071(UnknownPotcarWarning)
        1    0.000    0.000    0.000    0.000 mock.py:2100(NonCallableMagicMock)
        1    0.000    0.000    0.000    0.000 _base.py:45(Error)
        1    0.000    0.000    0.000    0.000 _guards.py:205(GuardEnvExpr)
        1    0.000    0.000    0.000    0.000 activation.py:1315(Softsign)
        1    0.000    0.000    0.000    0.000 batchnorm.py:233(BatchNorm1d)
        1    0.000    0.000    0.000    0.000 std.py:36(TqdmKeyError)
        1    0.000    0.000    0.000    0.000 spawn.py:163(SpawnContext)
        1    0.000    0.000    0.000    0.000 tz.py:1156(_tzicalvtzcomp)
        1    0.000    0.000    0.000    0.000 evalf.py:65(PrecisionExhausted)
        1    0.000    0.000    0.000    0.000 core.py:3745(StringStart)
        1    0.000    0.000    0.000    0.000 isoparser.py:43(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:2139(Round)
        1    0.000    0.000    0.000    0.000 configparser.py:264(InterpolationMissingOptionError)
        1    0.000    0.000    0.000    0.000 error.py:278(MarkedYAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 scalarint.py:82(BinaryInt)
        1    0.000    0.000    0.000    0.000 functions.py:138(NoShapeError)
        1    0.000    0.000    0.000    0.000 analyzer.py:66(SymmetryUndeterminedError)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:537(Bunch)
        1    0.000    0.000    0.000    0.000 process.py:397(_MainProcess)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1809(DraggableAnnotation)
        1    0.000    0.000    0.000    0.000 numbers.py:2315(_MultisetHistogram)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1222(IntegerFormat)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1298(MeijerUnShiftD)
        1    0.000    0.000    0.000    0.000 _factories.py:55(_TzStrFactory)
        1    0.000    0.000    0.000    0.000 container.py:46(BarContainer)
        1    0.000    0.000    0.000    0.000 outputs.py:5916(UnconvergedVASPWarning)
        1    0.000    0.000    0.000    0.000 optimization.py:357(Illinois)
        1    0.000    0.000    0.000    0.000 index_tricks.py:435(RClass)
        1    0.000    0.000    0.000    0.000 argparse.py:720(MetavarTypeHelpFormatter)
        1    0.000    0.000    0.000    0.000 pooling.py:1078(AdaptiveMaxPool3d)
        1    0.000    0.000    0.000    0.000 _exceptions.py:98(_UFuncOutputCastingError)
        1    0.000    0.000    0.000    0.000 events.py:108(StreamStartEvent)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1341(SubArrayFormat)
        1    0.000    0.000    0.000    0.000 fused.py:159(ConvAddReLU2d)
        1    0.000    0.000    0.000    0.000 Image.py:3238(SupportsArrowArrayInterface)
        1    0.000    0.000    0.000    0.000 mock.py:2778(_SpecState)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1140(MeijerShiftC)
        1    0.000    0.000    0.000    0.000 activation.py:1465(Softmax2d)
        1    0.000    0.000    0.000    0.000 traceback.py:90(_Sentinel)
        1    0.000    0.000    0.000    0.000 backend_tools.py:682(ViewsPositionsBase)
        1    0.000    0.000    0.000    0.000 context.py:242(__init__)
        1    0.000    0.000    0.000    0.000 tokens.py:294(AliasToken)
        1    0.000    0.000    0.000    0.000 inputs.py:787(BadPoscarWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:240(c_char_p)
        1    0.000    0.000    0.000    0.000 diophantine.py:1134(GeneralSumOfEvenPowers)
        1    0.000    0.000    0.000    0.000 __init__.py:94(cuBLASModule)
        1    0.000    0.000    0.000    0.000 errors.py:21(OnnxExporterWarning)
        1    0.000    0.000    0.000    0.000 core.py:5305(_NullToken)
        1    0.000    0.000    0.000    0.000 errors.py:81(HeaderDefect)
        1    0.000    0.000    0.000    0.000 resolver.py:102(ResolverError)
        1    0.000    0.000    0.000    0.000 kind.py:48(Kind)
        1    0.000    0.000    0.000    0.000 exceptions.py:189(DTypePromotionError)
        1    0.000    0.000    0.000    0.000 mock.py:1188(Mock)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:28(BadFortranFormat)
        1    0.000    0.000    0.000    0.000 protocols.py:162(DatagramProtocol)
        1    0.000    0.000    0.000    0.000 optimization.py:458(Ridder)
        1    0.000    0.000    0.000    0.000 patches.py:3508(Wedge)
        1    0.000    0.000    0.000    0.000 six.py:245(_MovedItems)
        1    0.000    0.000    0.000    0.000 tokens.py:210(DocumentStartToken)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:821(ContentType)
        1    0.000    0.000    0.000    0.000 parse.py:135(_ResultMixinBytes)
        1    0.000    0.000    0.000    0.000 geo.py:280(InvertedAitoffTransform)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1039(_ignorecase)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:2163(RectSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 scalarstring.py:66(FoldedScalarString)
        1    0.000    0.000    0.000    0.000 assumptions.py:680(ManagedProperties)
        1    0.000    0.000    0.000    0.000 utils.py:117(_lazy_property_and_property)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:949(SingletonMeta)
        1    0.000    0.000    0.000    0.000 pathlib.py:1398(WindowsPath)
        1    0.000    0.000    0.000    0.000 patches.py:3242(BracketAB)
        1    0.000    0.000    0.000    0.000 mathtext.py:212(MathtextBackendBitmap)
        2    0.000    0.000    0.000    0.000 ordinals.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 _comparison.py:306(UnsupportedInputs)
        1    0.000    0.000    0.000    0.000 <decorator-gen-0>:1(<module>)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:86(ParenthesisGroup)
        1    0.000    0.000    0.000    0.000 registration.py:210(__init__)
        1    0.000    0.000    0.000    0.000 deprecation.py:7(MatplotlibDeprecationWarning)
        1    0.000    0.000    0.000    0.000 solvers.py:18(PolyNonlinearError)
        1    0.000    0.000    0.000    0.000 extras.py:263(_fromnxfunction_single)
        1    0.000    0.000    0.000    0.000 graph.py:494(_AllowMutationOnSavedContext)
        1    0.000    0.000    0.000    0.000 serialization.py:264(_open_buffer_writer)
        1    0.000    0.000    0.000    0.000 units.py:189(Registry)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:115(GimpGradientFile)
        1    0.000    0.000    0.000    0.000 _arffread.py:58(ParseArffError)
        1    0.000    0.000    0.000    0.000 client.py:1470(UnknownProtocol)
        1    0.000    0.000    0.000    0.000 pathlib.py:844(PureWindowsPath)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3828(ortho_group_frozen)
        2    0.000    0.000    0.000    0.000 _multiufuncs.py:66(_override_ufunc_default_args)
        1    0.000    0.000    0.000    0.000 polyerrors.py:136(ComputationFailed)
        1    0.000    0.000    0.000    0.000 pooling.py:1199(AdaptiveAvgPool3d)
        1    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:50(InvalidLicenseExpression)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:98(ExponentialFloat)
        1    0.000    0.000    0.000    0.000 cyaml.py:38(CSafeLoader)
        1    0.000    0.000    0.000    0.000 io.py:25(EncodingWarning)
        1    0.000    0.000    0.000    0.000 exponential.py:212(ExpMeta)
        1    0.000    0.000    0.000    0.000 importer.py:16(ObjNotFoundError)
        1    0.000    0.000    0.000    0.000 core.py:3762(StringEnd)
        1    0.000    0.000    0.000    0.000 animation.py:735(ImageMagickWriter)
        1    0.000    0.000    0.000    0.000 unicode.py:213(Chinese)
        1    0.000    0.000    0.000    0.000 unicode.py:307(Thai)
        1    0.000    0.000    0.000    0.000 pickle.py:73(PickleError)
        1    0.000    0.000    0.000    0.000 __init__.py:10(__init__)
        1    0.000    0.000    0.000    0.000 markers.py:39(UndefinedComparison)
        1    0.000    0.000    0.000    0.000 _helpers.py:685(_dask_device)
        1    0.000    0.000    0.000    0.000 line.py:2834(Segment3D)
        1    0.000    0.000    0.000    0.000 _monitor.py:9(TqdmSynchronisationWarning)
        1    0.000    0.000    0.000    0.000 _script.py:264(ScriptMeta)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1235(_NQuad)
        1    0.000    0.000    0.000    0.000 {built-in method _elementtree._set_factories}
        1    0.000    0.000    0.000    0.000 events.py:66(NodeEvent)
        1    0.000    0.000    0.000    0.000 argparse.py:1009(_AppendAction)
        1    0.000    0.000    0.000    0.000 batchnorm.py:413(LazyBatchNorm2d)
        1    0.000    0.000    0.000    0.000 package_exporter.py:120(EmptyMatchError)
        1    0.000    0.000    0.000    0.000 __init__.py:201(DeferredCudaCallError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1022(ShiftB)
        1    0.000    0.000    0.000    0.000 optimization.py:159(Halley)
        1    0.000    0.000    0.000    0.000 mathtext.py:2025(SubSuperCluster)
        1    0.000    0.000    0.000    0.000 _typing.py:156(DTypesAll)
        1    0.000    0.000    0.000    0.000 libmpf.py:43(ComplexResult)
        1    0.000    0.000    0.000    0.000 fused.py:67(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 patches.py:3111(CurveFilledA)
        1    0.000    0.000    0.000    0.000 scalarint.py:100(HexInt)
        1    0.000    0.000    0.000    0.000 _sparse.py:6(SparseABC)
        1    0.000    0.000    0.000    0.000 package_importer.py:658(_PathNode)
        1    0.000    0.000    0.000    0.000 extras.py:1637(mr_class)
        1    0.000    0.000    0.000    0.000 parser.py:126(BytesHeaderParser)
        1    0.000    0.000    0.000    0.000 ticker.py:1138(LogFormatterExponent)
        1    0.000    0.000    0.000    0.000 unicode.py:246(Hiragana)
        1    0.000    0.000    0.000    0.000 dataframes.py:268(CaptureGetItem)
        1    0.000    0.000    0.000    0.000 geo.py:322(InvertedHammerTransform)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:690(Attribute)
        1    0.000    0.000    0.000    0.000 groundtypes.py:25(_GMPYRational)
        1    0.000    0.000    0.000    0.000 calendar.py:33(IllegalWeekdayError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1437(Hbox)
        1    0.000    0.000    0.000    0.000 __init__.py:735(OutsideDestinationError)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:408(_VectorFunWrapper)
        1    0.000    0.000    0.000    0.000 argparse.py:669(RawDescriptionHelpFormatter)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:41(pretty_use_unicode)
        1    0.000    0.000    0.000    0.000 errors.py:64(InvalidMultipartContentTransferEncodingDefect)
        1    0.000    0.000    0.000    0.000 core.py:861(_DomainGreater)
        1    0.000    0.000    0.000    0.000 _utils.py:769(_ClassPropertyDescriptor)
        1    0.000    0.000    0.000    0.000 legend_handler.py:208(HandlerLine2D)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:157(JitTypeTraceStore)
        1    0.000    0.000    0.000    0.000 _ops.py:588(_PyOpNamespace)
        1    0.000    0.000    0.000    0.000 tarfile.py:267(TarError)
        1    0.000    0.000    0.000    0.000 _internal.py:244(c_void_p)
        1    0.000    0.000    0.000    0.000 error.py:232(UnsafeLoaderWarning)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:25(GuardOnDataDependentSymNode)
        1    0.000    0.000    0.000    0.000 identification.py:13(IdentificationMethods)
        1    0.000    0.000    0.000    0.000 optimization.py:290(Bisection)
        1    0.000    0.000    0.000    0.000 optimization.py:602(MDNewton)
        1    0.000    0.000    0.000    0.000 core.py:4789(_IndentGreater)
        2    0.000    0.000    0.000    0.000 ordinals.py:83(<listcomp>)
        1    0.000    0.000    0.000    0.000 optimization.py:517(ANewton)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:205(SpectralNormStateDictHook)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:313(default_pg)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:268(MatlabOpaque)
        1    0.000    0.000    0.000    0.000 _optimize.py:1152(_LineSearchError)
        1    0.000    0.000    0.000    0.000 csv.py:64(excel_tab)
        1    0.000    0.000    0.000    0.000 errors.py:8(MessageError)
        1    0.000    0.000    0.000    0.000 _parser.py:1378(_attr)
        1    0.000    0.000    0.000    0.000 _vertex.py:446(FieldWrapper)
        1    0.000    0.000    0.000    0.000 datapipes.py:83(FilterDataFramesPipe)
        1    0.000    0.000    0.000    0.000 geo.py:349(MollweideTransform)
        1    0.000    0.000    0.000    0.000 copyreg.py:22(constructor)
        1    0.000    0.000    0.000    0.000 geo.py:390(InvertedMollweideTransform)
        1    0.000    0.000    0.000    0.000 dates.py:1558(MonthLocator)
        1    0.000    0.000    0.000    0.000 request.py:898(HTTPPasswordMgrWithDefaultRealm)
        1    0.000    0.000    0.000    0.000 core.py:893(_MaskedUFunc)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1235(BoolFormat)
        1    0.000    0.000    0.000    0.000 errors.py:1(Error)
        1    0.000    0.000    0.000    0.000 _arffread.py:54(ArffError)
        1    0.000    0.000    0.000    0.000 scanner.py:2030(FullLineComment)
        1    0.000    0.000    0.000    0.000 argparse.py:680(RawTextHelpFormatter)
        1    0.000    0.000    0.000    0.000 polysys.py:35(SolveFailed)
        1    0.000    0.000    0.000    0.000 repmatrix.py:202(<genexpr>)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:113(__init__)
        1    0.000    0.000    0.000    0.000 unicode.py:200(Cyrillic)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:225(mat_struct)
        1    0.000    0.000    0.000    0.000 simplex.py:77(UnboundedLPError)
        1    0.000    0.000    0.000    0.000 odes.py:4(ODEMethods)
        1    0.000    0.000    0.000    0.000 optimization.py:213(Muller)
        1    0.000    0.000    0.000    0.000 api.py:466(RRef)
        1    0.000    0.000    0.000    0.000 _nonlin.py:955(BroydenSecond)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 exceptions.py:13(DMError)
        1    0.000    0.000    0.000    0.000 _sf_error.py:5(SpecialFunctionWarning)
        1    0.000    0.000    0.000    0.000 context.py:310(ForkServerContext)
        1    0.000    0.000    0.000    0.000 warnings.py:99(SetuptoolsDeprecationWarning)
        1    0.000    0.000    0.000    0.000 inputs.py:1178(BadIncarWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:3(GeometryError)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:364(split_symbols_custom)
        1    0.000    0.000    0.000    0.000 error.py:73(ContentTooShortError)
        1    0.000    0.000    0.000    0.000 request.py:641(HTTPDefaultErrorHandler)
        1    0.000    0.000    0.000    0.000 socket.py:211(_GiveupOnSendfile)
        1    0.000    0.000    0.000    0.000 unicode.py:148(LatinA)
        1    0.000    0.000    0.000    0.000 markers.py:33(InvalidMarker)
        1    0.000    0.000    0.000    0.000 _optimize.py:544(_MaxFuncCallError)
        1    0.000    0.000    0.000    0.000 composition.py:1396(CompositionError)
        1    0.000    0.000    0.000    0.000 exceptions.py:4(ClosureFailure)
        1    0.000    0.000    0.000    0.000 polynomial.py:29(RankWarning)
        1    0.000    0.000    0.000    0.000 backend_managers.py:27(ToolManagerMessageEvent)
        1    0.000    0.000    0.000    0.000 _sf_error.py:13(SpecialFunctionError)
        1    0.000    0.000    0.000    0.000 single.py:37(ODEMatchError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:151(MultivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 constraints.py:481(_Symmetric)
        1    0.000    0.000    0.000    0.000 core.py:5174(OneOrMore)
        1    0.000    0.000    0.000    0.000 utils.py:18(InvalidName)
        1    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(<module>)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:158(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:2725(TransformedPatchPath)
        1    0.000    0.000    0.000    0.000 dumper.py:171(RoundTripDumper)
        1    0.000    0.000    0.000    0.000 facts.py:252(TautologyDetected)
        1    0.000    0.000    0.000    0.000 _typing.py:215(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:3060(CurveA)
        1    0.000    0.000    0.000    0.000 unicode.py:239(Kanji)
        1    0.000    0.000    0.000    0.000 requirements.py:15(InvalidRequirement)
        1    0.000    0.000    0.000    0.000 __init__.py:519(FileHash)
        1    0.000    0.000    0.000    0.000 conflict.py:3(AmbiguityWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(ComplexWarning)
        1    0.000    0.000    0.000    0.000 enum.py:769(__getitem__)
        1    0.000    0.000    0.000    0.000 contextlib.py:342(__enter__)
        1    0.000    0.000    0.000    0.000 {built-in method _thread._set_sentinel}
        1    0.000    0.000    0.000    0.000 argparse.py:952(_StoreConstAction)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:216(SqrtdenestStopIteration)
        1    0.000    0.000    0.000    0.000 _exceptions.py:71(_UFuncCastingError)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:37(SmallSampleWarning)
        1    0.000    0.000    0.000    0.000 unix_events.py:798(_UnixSubprocessTransport)
        1    0.000    0.000    0.000    0.000 connection.py:786(XmlListener)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1078(_DOF_estimator_user)
        1    0.000    0.000    0.000    0.000 core.py:2500(_SingleCharLiteral)
        1    0.000    0.000    0.000    0.000 _nonlin.py:32(NoConvergence)
        1    0.000    0.000    0.000    0.000 _base.py:19(SparseWarning)
        1    0.000    0.000    0.000    0.000 _utils.py:603(KeyErrorMessage)
        1    0.000    0.000    0.000    0.000 core.py:5012(Located)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:706(Value)
        1    0.000    0.000    0.000    0.000 orderings.py:54(ReversedGradedLexOrder)
        1    0.000    0.000    0.000    0.000 zipfile.py:641(LZMADecompressor)
        1    0.000    0.000    0.000    0.000 types.py:26(SymInt)
        1    0.000    0.000    0.000    0.000 unicode.py:314(Arabic)
        1    0.000    0.000    0.000    0.000 mock.py:2118(MagicMock)
        1    0.000    0.000    0.000    0.000 fused.py:31(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 legend_handler.py:637(HandlerTuple)
        1    0.000    0.000    0.000    0.000 figure.py:154(AxesStack)
        1    0.000    0.000    0.000    0.000 patches.py:2632(Arc)
        1    0.000    0.000    0.000    0.000 comments.py:52(__init__)
        1    0.000    0.000    0.000    0.000 exceptions.py:43(DMRankError)
        1    0.000    0.000    0.000    0.000 ordinals.py:253(OrdinalZero)
        1    0.000    0.000    0.000    0.000 _parser.py:34(Value)
        1    0.000    0.000    0.000    0.000 resolver.py:294(Resolver)
        1    0.000    0.000    0.000    0.000 emitter.py:28(EmitterError)
        1    0.000    0.000    0.000    0.000 unicode.py:336(Devanagari)
        1    0.000    0.000    0.000    0.000 datapipes.py:59(ShuffleDataFramesPipe)
        1    0.000    0.000    0.000    0.000 context.py:302(ForkContext)
        1    0.000    0.000    0.000    0.000 core.py:830(__init__)
        1    0.000    0.000    0.000    0.000 dist.py:1119(DistDeprecationWarning)
        1    0.000    0.000    0.000    0.000 container.py:103(StemContainer)
        1    0.000    0.000    0.000    0.000 mathtext.py:1840(Vrule)
        1    0.000    0.000    0.000    0.000 exceptions.py:33(UnknownConstraint)
        3    0.000    0.000    0.000    0.000 core.py:2493(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 results.py:19(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:270(TarError)
        1    0.000    0.000    0.000    0.000 design_patterns.py:128(NullStream)
        1    0.000    0.000    0.000    0.000 error.py:109(CommentMark)
        1    0.000    0.000    0.000    0.000 pathlib.py:347(_WildcardSelector)
        1    0.000    0.000    0.000    0.000 configparser.py:216(DuplicateOptionError)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:285(MinimizerWrapper)
        1    0.000    0.000    0.000    0.000 tokens.py:261(FlowSequenceEndToken)
        1    0.000    0.000    0.000    0.000 repmatrix.py:186(<genexpr>)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:39(GaloisGroupException)
        1    0.000    0.000    0.000    0.000 datapipe.py:372(_MapDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2055(_EllipsisDummy)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1592(DummySpecie)
        1    0.000    0.000    0.000    0.000 cyaml.py:70(CBaseDumper)
        1    0.000    0.000    0.000    0.000 ticker.py:395(FormatStrFormatter)
        1    0.000    0.000    0.000    0.000 __init__.py:281(sic)
        1    0.000    0.000    0.000    0.000 facts.py:565(InconsistentAssumptions)
        1    0.000    0.000    0.000    0.000 polar.py:185(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 exceptions.py:26(DuplicateEditVariable)
        1    0.000    0.000    0.000    0.000 configparser.py:243(NoOptionError)
        1    0.000    0.000    0.000    0.000 constraints.py:427(_LowerTriangular)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1228(DrawEvent)
        1    0.000    0.000    0.000    0.000 tokens.py:321(ScalarToken)
        1    0.000    0.000    0.000    0.000 pydoc.py:1545(_PlainTextDoc)
        1    0.000    0.000    0.000    0.000 indexed.py:120(IndexException)
        1    0.000    0.000    0.000    0.000 polyerrors.py:57(OperationNotSupported)
        1    0.000    0.000    0.000    0.000 legend_handler.py:412(HandlerPathCollection)
        1    0.000    0.000    0.000    0.000 patches.py:3077(CurveB)
        1    0.000    0.000    0.000    0.000 core.py:3632(PositionToken)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:828(ContentDisposition)
        1    0.000    0.000    0.000    0.000 cyaml.py:115(CSafeDumper)
        1    0.000    0.000    0.000    0.000 _lil.py:505(lil_array)
        1    0.000    0.000    0.000    0.000 dataframes.py:324(CaptureSub)
        1    0.000    0.000    0.000    0.000 exceptions.py:18(DMBadInputError)
        1    0.000    0.000    0.000    0.000 fused.py:22(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 activation.py:784(LogSigmoid)
        1    0.000    0.000    0.000    0.000 {method 'isdecimal' of 'str' objects}
        1    0.000    0.000    0.000    0.000 exceptions.py:10(CancelledError)
        1    0.000    0.000    0.000    0.000 diophantine.py:918(InhomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 fetch.py:45(_MapDatasetFetcher)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:313(PlotWriter)
        1    0.000    0.000    0.000    0.000 _elffile.py:19(ELFInvalid)
        1    0.000    0.000    0.000    0.000 tokens.py:303(AnchorToken)
        1    0.000    0.000    0.000    0.000 index_tricks.py:537(CClass)
        1    0.000    0.000    0.000    0.000 patches.py:3147(CurveFilledAB)
        1    0.000    0.000    0.000    0.000 hierarchy.py:157(ClusterWarning)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1586(Specie)
        1    0.000    0.000    0.000    0.000 events.py:709(_RunningLoop)
        1    0.000    0.000    0.000    0.000 linalg.py:67(LinAlgError)
        1    0.000    0.000    0.000    0.000 dates.py:1657(MinuteLocator)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:418(_VectorJacWrapper)
        1    0.000    0.000    0.000    0.000 tokens.py:312(TagToken)
        1    0.000    0.000    0.000    0.000 argparse.py:1074(_CountAction)
        1    0.000    0.000    0.000    0.000 wavfile.py:27(WavFileWarning)
        1    0.000    0.000    0.000    0.000 vq.py:84(ClusterError)
        1    0.000    0.000    0.000    0.000 nodes.py:107(CollectionNode)
        1    0.000    0.000    0.000    0.000 _tzpath.py:170(InvalidTZPathWarning)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1200(InverseHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 dumper.py:121(Dumper)
        1    0.000    0.000    0.000    0.000 {built-in method _abc.get_cache_token}
        1    0.000    0.000    0.000    0.000 geo.py:304(HammerTransform)
        1    0.000    0.000    0.000    0.000 backend_managers.py:20(ToolTriggerEvent)
        1    0.000    0.000    0.000    0.000 ticker.py:434(OldScalarFormatter)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1118(MeijerShiftA)
        1    0.000    0.000    0.000    0.000 coreerrors.py:6(BaseCoreError)
        1    0.000    0.000    0.000    0.000 calculus.py:1(CalculusMethods)
        1    0.000    0.000    0.000    0.000 _csr.py:314(csr_array)
        1    0.000    0.000    0.000    0.000 dataframes.py:39(CaptureControl)
        1    0.000    0.000    0.000    0.000 _script.py:323(_CachedForward)
        1    0.000    0.000    0.000    0.000 extras.py:281(_fromnxfunction_seq)
        1    0.000    0.000    0.000    0.000 pathlib.py:43(_is_wildcard_pattern)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1207(Event)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4083(random_correlation_frozen)
        1    0.000    0.000    0.000    0.000 __init__.py:169(c_ushort)
        1    0.000    0.000    0.000    0.000 extension.py:176(Library)
        1    0.000    0.000    0.000    0.000 _base.py:49(CancelledError)
        1    0.000    0.000    0.000    0.000 fused.py:140(LinearTanh)
        1    0.000    0.000    0.000    0.000 request.py:1061(ProxyBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 _fortran.py:24(FortranFormattingError)
        1    0.000    0.000    0.000    0.000 constraints.py:303(_Real)
        1    0.000    0.000    0.000    0.000 profiler_util.py:613(StringTable)
        1    0.000    0.000    0.000    0.000 ticker.py:414(StrMethodFormatter)
        1    0.000    0.000    0.000    0.000 version.py:59(InvalidVersion)
        1    0.000    0.000    0.000    0.000 nodes.py:130(MappingNode)
        1    0.000    0.000    0.000    0.000 mock.py:2112(AsyncMagicMixin)
        1    0.000    0.000    0.000    0.000 __init__.py:14(_Await)
        1    0.000    0.000    0.000    0.000 unicode.py:258(Katakana)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1035(UnShiftA)
        1    0.000    0.000    0.000    0.000 libhyper.py:43(NoConvergence)
        1    0.000    0.000    0.000    0.000 dates.py:1637(HourLocator)
        1    0.000    0.000    0.000    0.000 patches.py:2532(Angle3)
        1    0.000    0.000    0.000    0.000 _miobase.py:20(MatReadError)
        1    0.000    0.000    0.000    0.000 core.py:720(NegativeStdDev)
        1    0.000    0.000    0.000    0.000 util.py:167(UnboundedMemo)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:256(MatlabFunction)
        1    0.000    0.000    0.000    0.000 <decorator-gen-2>:1(<module>)
        1    0.000    0.000    0.000    0.000 _docscrape.py:615(ObjDoc)
        1    0.000    0.000    0.000    0.000 events.py:237(SequenceStartEvent)
        1    0.000    0.000    0.000    0.000 systems.py:32(ODEOrderError)
        1    0.000    0.000    0.000    0.000 quadrature.py:389(GaussLegendre)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:200(Word)
        1    0.000    0.000    0.000    0.000 scanner.py:53(ScannerError)
        1    0.000    0.000    0.000    0.000 scanner.py:57(SimpleKey)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1002(MultOperator)
        1    0.000    0.000    0.000    0.000 factorials.py:281(MultiFactorial)
        1    0.000    0.000    0.000    0.000 pathlib.py:325(_TerminatingSelector)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:21(NearConstantInputWarning)
        1    0.000    0.000    0.000    0.000 error.py:48(FileMark)
        1    0.000    0.000    0.000    0.000 _docscrape.py:101(ParseError)
        1    0.000    0.000    0.000    0.000 index_methods.py:22(IndexConformanceException)
        1    0.000    0.000    0.000    0.000 activation.py:337(Tanh)
        1    0.000    0.000    0.000    0.000 _shgo.py:1529(LMap)
        1    0.000    0.000    0.000    0.000 structure.py:5574(StructureError)
        1    0.000    0.000    0.000    0.000 units.py:144(UnitError)
        1    0.000    0.000    0.000    0.000 _common.py:163(ZoneInfoNotFoundError)
        1    0.000    0.000    0.000    0.000 _static.py:108(Dict)
        1    0.000    0.000    0.000    0.000 _dok.py:536(dok_array)
        1    0.000    0.000    0.000    0.000 _coo.py:1463(coo_matrix)
        1    0.000    0.000    0.000    0.000 _array_api.py:582(<listcomp>)
        1    0.000    0.000    0.000    0.000 tokens.py:279(ValueToken)
        1    0.000    0.000    0.000    0.000 deprecation.py:325(_deprecated_parameter_class)
        1    0.000    0.000    0.000    0.000 resolver.py:135(<dictcomp>)
        1    0.000    0.000    0.000    0.000 transports.py:148(Transport)
        1    0.000    0.000    0.000    0.000 constraints.py:493(_PositiveSemidefinite)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:333(_mode_formula)
        1    0.000    0.000    0.000    0.000 mathtext.py:1956(NegFill)
        1    0.000    0.000    0.000    0.000 _bvp.py:515(BVPResult)
        1    0.000    0.000    0.000    0.000 argparse.py:1144(_ChoicesPseudoAction)
        1    0.000    0.000    0.000    0.000 solveset.py:794(_SolveTrig1Error)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1200(MeijerUnShiftB)
        1    0.000    0.000    0.000    0.000 parse.py:347(ParseResultBytes)
        1    0.000    0.000    0.000    0.000 patches.py:3314(BarAB)
        1    0.000    0.000    0.000    0.000 rl.py:83(sort)
        1    0.000    0.000    0.000    0.000 client.py:1495(ImproperConnectionState)
        1    0.000    0.000    0.000    0.000 transforms.py:2542(BboxTransformToMaxOnly)
        1    0.000    0.000    0.000    0.000 diophantine.py:938(HomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 logic.py:391(Or)
        1    0.000    0.000    0.000    0.000 engine.py:20(DiagnosticError)
        1    0.000    0.000    0.000    0.000 __init__.py:11(_PyAwaitMeta)
        1    0.000    0.000    0.000    0.000 ticker.py:1202(LogFormatterSciNotation)
        1    0.000    0.000    0.000    0.000 io.py:340(FileLockException)
        1    0.000    0.000    0.000    0.000 iterables.py:3015(NotIterable)
        1    0.000    0.000    0.000    0.000 zipfile.py:43(BadZipFile)
        1    0.000    0.000    0.000    0.000 _endian.py:55(BigEndianUnion)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:650(MIMEVersion)
        1    0.000    0.000    0.000    0.000 transforms.py:1454(HankelTransform)
        1    0.000    0.000    0.000    0.000 _script.py:352(ConstMap)
        1    0.000    0.000    0.000    0.000 threading.py:1400(_MainThread)
        1    0.000    0.000    0.000    0.000 _adapters.py:143(__init__)
        1    0.000    0.000    0.000    0.000 dates.py:1611(DayLocator)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:354(deHoog)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:845(MsgID)
        1    0.000    0.000    0.000    0.000 errors.py:33(DistutilsClassError)
        1    0.000    0.000    0.000    0.000 client.py:1507(BadStatusLine)
        1    0.000    0.000    0.000    0.000 forward_ad.py:108(UnpackedDualTensor)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:193(UnstructuredTokenList)
        1    0.000    0.000    0.000    0.000 polyoptions.py:61(OptionType)
        1    0.000    0.000    0.000    0.000 fused.py:123(LinearBn1d)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:169(_LRScheduler)
        1    0.000    0.000    0.000    0.000 context.py:306(SpawnContext)
        1    0.000    0.000    0.000    0.000 configparser.py:254(InterpolationError)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:33(FitError)
        1    0.000    0.000    0.000    0.000 scalarstring.py:93(PlainScalarString)
        1    0.000    0.000    0.000    0.000 cyaml.py:54(CLoader)
        1    0.000    0.000    0.000    0.000 core.py:115(switch)
        1    0.000    0.000    0.000    0.000 dispatcher.py:10(MDNotImplementedError)
        1    0.000    0.000    0.000    0.000 emitter.py:1777(RoundTripEmitter)
        1    0.000    0.000    0.000    0.000 parse.py:323(SplitResult)
        1    0.000    0.000    0.000    0.000 unicode.py:154(LatinB)
        1    0.000    0.000    0.000    0.000 warnings.py:89(InformationOnly)
        1    0.000    0.000    0.000    0.000 _lil.py:570(lil_matrix)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:281(ReadSubprocessPipeProto)
        1    0.000    0.000    0.000    0.000 errors.py:12(MessageParseError)
        1    0.000    0.000    0.000    0.000 gzip.py:117(BadGzipFile)
        1    0.000    0.000    0.000    0.000 pathlib.py:1391(PosixPath)
        1    0.000    0.000    0.000    0.000 codeprinter.py:31(AssignmentError)
        1    0.000    0.000    0.000    0.000 alphabets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _iotools.py:421(ConverterError)
        1    0.000    0.000    0.000    0.000 patches.py:2570(Angle)
        1    0.000    0.000    0.000    0.000 __init__.py:742(SpecialFileError)
        1    0.000    0.000    0.000    0.000 queues.py:11(QueueEmpty)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(ModuleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:161(JitTypeTraceConfig)
        1    0.000    0.000    0.000    0.000 __init__.py:2229(createLock)
        1    0.000    0.000    0.000    0.000 subprocess.py:123(SubprocessError)
        1    0.000    0.000    0.000    0.000 operations.py:483(ShortCircuit)
        1    0.000    0.000    0.000    0.000 bezier.py:25(NonIntersectingPathException)
        1    0.000    0.000    0.000    0.000 scalarstring.py:84(DoubleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 <decorator-gen-3>:1(<module>)
        1    0.000    0.000    0.000    0.000 fused.py:94(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 _parser.py:39(Op)
        1    0.000    0.000    0.000    0.000 specifiers.py:32(InvalidSpecifier)
        1    0.000    0.000    0.000    0.000 parse.py:334(DefragResultBytes)
        1    0.000    0.000    0.000    0.000 errors.py:39(CheckerError)
        1    0.000    0.000    0.000    0.000 activation.py:1338(Tanhshrink)
        1    0.000    0.000    0.000    0.000 patches.py:3094(CurveAB)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1979(LSQSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 function.py:103(PoleError)
        1    0.000    0.000    0.000    0.000 client.py:1459(HTTPException)
        1    0.000    0.000    0.000    0.000 util.py:108(_platform_supports_abstract_sockets)
        1    0.000    0.000    0.000    0.000 __init__.py:13(_PyFutureMeta)
        1    0.000    0.000    0.000    0.000 tensor.py:5253(get_postprocessor)
        1    0.000    0.000    0.000    0.000 container.py:71(ErrorbarContainer)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4243(unitary_group_frozen)
        1    0.000    0.000    0.000    0.000 _pep440.py:150(<lambda>)
        1    0.000    0.000    0.000    0.000 transforms.py:1516(InverseHankelTransform)
        1    0.000    0.000    0.000    0.000 constructor.py:47(ConstructorError)
        1    0.000    0.000    0.000    0.000 diophantine.py:1107(CubicThue)
        1    0.000    0.000    0.000    0.000 patches.py:2726(Bar)
        1    0.000    0.000    0.000    0.000 errors.py:33(InvalidConfigError)
        1    0.000    0.000    0.000    0.000 _ltisys.py:814(TransferFunctionDiscrete)
        1    0.000    0.000    0.000    0.000 _pep440.py:129(InvalidVersion)
        1    0.000    0.000    0.000    0.000 __init__.py:165(c_short)
        1    0.000    0.000    0.000    0.000 random.py:811(seed)
        1    0.000    0.000    0.000    0.000 patches.py:3274(BracketA)
        1    0.000    0.000    0.000    0.000 net_min_base.py:31(FxNetMinimizerBadModuleError)
        1    0.000    0.000    0.000    0.000 batchnorm.py:341(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:68(__init__)
        1    0.000    0.000    0.000    0.000 _typing.py:134(DTypesIntegral)
        1    0.000    0.000    0.000    0.000 importer.py:22(ObjMismatchError)
        1    0.000    0.000    0.000    0.000 std.py:32(TqdmTypeError)
        1    0.000    0.000    0.000    0.000 dropout.py:104(Dropout2d)
        1    0.000    0.000    0.000    0.000 _static.py:145(SpecifierSet)
        1    0.000    0.000    0.000    0.000 case.py:33(_ShouldStop)
        1    0.000    0.000    0.000    0.000 exceptions.py:6(MatrixError)
        1    0.000    0.000    0.000    0.000 _dist_ver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 errors.py:27(CallHintViolationWarning)
        1    0.000    0.000    0.000    0.000 scalarint.py:118(DecimalInt)
        1    0.000    0.000    0.000    0.000 _ccallback.py:9(CData)
        1    0.000    0.000    0.000    0.000 simplex.py:96(InfeasibleLPError)
        1    0.000    0.000    0.000    0.000 misc.py:13(Undecidable)
        1    0.000    0.000    0.000    0.000 fused.py:49(ConvBn1d)
        1    0.000    0.000    0.000    0.000 _csc.py:179(csc_array)
        1    0.000    0.000    0.000    0.000 errors.py:33(OnnxExporterError)
        1    0.000    0.000    0.000    0.000 ticker.py:2883(AutoLocator)
        1    0.000    0.000    0.000    0.000 _mio5.py:445(EmptyStructMarker)
        1    0.000    0.000    0.000    0.000 dumper.py:71(SafeDumper)
        1    0.000    0.000    0.000    0.000 exceptions.py:17(InvalidStateError)
        1    0.000    0.000    0.000    0.000 fused.py:131(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 ops.py:861(NotUpcast)
        1    0.000    0.000    0.000    0.000 _bsr.py:660(bsr_array)
        1    0.000    0.000    0.000    0.000 case.py:334(_OrderedChainMap)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1247(MeijerUnShiftC)
        1    0.000    0.000    0.000    0.000 graph.py:419(_Handle)
        1    0.000    0.000    0.000    0.000 parse.py:328(ParseResult)
        1    0.000    0.000    0.000    0.000 dropout.py:153(Dropout3d)
        1    0.000    0.000    0.000    0.000 dropout.py:237(FeatureAlphaDropout)
        1    0.000    0.000    0.000    0.000 tarfile.py:279(StreamError)
        1    0.000    0.000    0.000    0.000 _subplots.py:218(<genexpr>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:118(UnificationFailed)
        2    0.000    0.000    0.000    0.000 groundtypes.py:22(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1950(NegFil)
        1    0.000    0.000    0.000    0.000 hb.py:377(<dictcomp>)
        1    0.000    0.000    0.000    0.000 fused.py:76(ConvBnReLU2d)
        1    0.000    0.000    0.000    0.000 constraints.py:466(_Square)
        1    0.000    0.000    0.000    0.000 dropout.py:195(AlphaDropout)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1336(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 dates.py:1677(SecondLocator)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2625(NonGuiException)
        1    0.000    0.000    0.000    0.000 serializer.py:29(SerializerError)
        1    0.000    0.000    0.000    0.000 facts.py:451(<setcomp>)
        1    0.000    0.000    0.000    0.000 fused.py:104(BNReLU2d)
        1    0.000    0.000    0.000    0.000 _optimize.py:112(OptimizeResult)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1151(MeijerShiftD)
        1    0.000    0.000    0.000    0.000 constraints.py:438(_LowerCholesky)
        1    0.000    0.000    0.000    0.000 _fortran.py:13(FortranEOFError)
        1    0.000    0.000    0.000    0.000 <decorator-gen-4>:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:14(is_available)
        1    0.000    0.000    0.000    0.000 shutil.py:61(Error)
        1    0.000    0.000    0.000    0.000 setupcfg.py:779(_DeprecatedConfig)
        1    0.000    0.000    0.000    0.000 fused.py:40(LinearReLU)
        1    0.000    0.000    0.000    0.000 argparse.py:992(_StoreFalseAction)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:542(Cohen)
        1    0.000    0.000    0.000    0.000 _idl.py:153(ObjectPointer)
        1    0.000    0.000    0.000    0.000 main.py:773(<listcomp>)
        1    0.000    0.000    0.000    0.000 representer.py:48(RepresenterError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1944(Filll)
        1    0.000    0.000    0.000    0.000 std.py:52(TqdmExperimentalWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:11(DeprecatedTzFormatWarning)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1255(ResizeEvent)
        1    0.000    0.000    0.000    0.000 hb.py:30(MalformedHeader)
        1    0.000    0.000    0.000    0.000 _csr.py:437(csr_matrix)
        1    0.000    0.000    0.000    0.000 __init__.py:25(clear_distutils)
        1    0.000    0.000    0.000    0.000 streamplot.py:416(InvalidIndexError)
        1    0.000    0.000    0.000    0.000 __init__.py:747(AbsoluteLinkError)
        1    0.000    0.000    0.000    0.000 polyoptions.py:658(Polys)
        1    0.000    0.000    0.000    0.000 extras.py:294(_fromnxfunction_args)
        1    0.000    0.000    0.000    0.000 mathtext.py:2040(AutoHeightChar)
        1    0.000    0.000    0.000    0.000 nodes.py:125(SequenceNode)
        1    0.000    0.000    0.000    0.000 _typing.py:151(DTypesNumeric)
        1    0.000    0.000    0.000    0.000 net_min_base.py:40(FxNetMinimizerRunFuncError)
        1    0.000    0.000    0.000    0.000 constraints.py:452(_CorrCholesky)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:1608(UnknownTimezoneWarning)
        1    0.000    0.000    0.000    0.000 _miobase.py:24(MatWriteError)
        1    0.000    0.000    0.000    0.000 loader.py:39(SafeLoader)
        1    0.000    0.000    0.000    0.000 fused.py:85(ConvBn3d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2223(_TypeFormForm)
        1    0.000    0.000    0.000    0.000 mathtext.py:1370(MathTextWarning)
        1    0.000    0.000    0.000    0.000 core.py:270(ParseError)
        1    0.000    0.000    0.000    0.000 events.py:123(StreamEndEvent)
        1    0.000    0.000    0.000    0.000 codeprinter.py:37(PrintMethodNotImplementedError)
        1    0.000    0.000    0.000    0.000 release.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1070(StixSansFonts)
        1    0.000    0.000    0.000    0.000 ctx_base.py:21(Context)
        1    0.000    0.000    0.000    0.000 exceptions.py:33(DMFormatError)
        1    0.000    0.000    0.000    0.000 units.py:54(ConversionError)
        1    0.000    0.000    0.000    0.000 patches.py:3129(CurveFilledB)
        1    0.000    0.000    0.000    0.000 mathtext.py:1829(Hrule)
        1    0.000    0.000    0.000    0.000 __init__.py:273(ExtractError)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1699(StateSpaceDiscrete)
        1    0.000    0.000    0.000    0.000 fused.py:58(ConvBn2d)
        1    0.000    0.000    0.000    0.000 calendar.py:162(setfirstweekday)
        1    0.000    0.000    0.000    0.000 context.py:14(ProcessError)
        1    0.000    0.000    0.000    0.000 exceptions.py:284(ParseFatalException)
        1    0.000    0.000    0.000    0.000 mock.py:2345(AsyncMock)
        1    0.000    0.000    0.000    0.000 eigen.py:38(Eigen)
        1    0.000    0.000    0.000    0.000 core.py:148(MAError)
        1    0.000    0.000    0.000    0.000 _base.py:55(InvalidStateError)
        1    0.000    0.000    0.000    0.000 fused.py:10(_FusedModule)
        1    0.000    0.000    0.000    0.000 dataframes.py:169(CaptureF)
        1    0.000    0.000    0.000    0.000 __init__.py:256(c_wchar_p)
        1    0.000    0.000    0.000    0.000 legend_handler.py:423(HandlerCircleCollection)
        1    0.000    0.000    0.000    0.000 mathtext.py:1968(SsGlue)
        1    0.000    0.000    0.000    0.000 events.py:253(MappingStartEvent)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:23(_apply_params)
        1    0.000    0.000    0.000    0.000 __init__.py:752(LinkOutsideDestinationError)
        1    0.000    0.000    0.000    0.000 tokens.py:215(DocumentEndToken)
        1    0.000    0.000    0.000    0.000 exceptions.py:39(StructureError)
        1    0.000    0.000    0.000    0.000 _typing.py:30(Boolean)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:114(<listcomp>)
        1    0.000    0.000    0.000    0.000 batchnorm.py:446(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 composer.py:27(ComposerError)
        1    0.000    0.000    0.000    0.000 errors.py:67(UndecodableBytesDefect)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3403(Buffer)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:834(ContentTransferEncoding)
        1    0.000    0.000    0.000    0.000 headerregistry.py:271(UniqueUnstructuredHeader)
        1    0.000    0.000    0.000    0.000 animation.py:674(AVConvWriter)
        1    0.000    0.000    0.000    0.000 case.py:38(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 argparse.py:1242(_ExtendAction)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:43(ResolventException)
        1    0.000    0.000    0.000    0.000 mathtext.py:1962(NegFilll)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1151(ZerosPolesGainDiscrete)
        1    0.000    0.000    0.000    0.000 patches.py:3294(BracketB)
        1    0.000    0.000    0.000    0.000 utils.py:79(<dictcomp>)
        1    0.000    0.000    0.000    0.000 patches.py:2428(SimpleEvent)
        1    0.000    0.000    0.000    0.000 decorator.py:46(get_init)
        1    0.000    0.000    0.000    0.000 __init__.py:282(StreamError)
        1    0.000    0.000    0.000    0.000 json.py:906(MSONError)
        1    0.000    0.000    0.000    0.000 ivp.py:24(OdeResult)
        1    0.000    0.000    0.000    0.000 frontend.py:114(NotSupportedError)
        1    0.000    0.000    0.000    0.000 animation.py:685(AVConvFileWriter)
        1    0.000    0.000    0.000    0.000 _optimize.py:157(OptimizeWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:23(DMDomainError)
        1    0.000    0.000    0.000    0.000 six.py:402(Module_six_moves_urllib_request)
        1    0.000    0.000    0.000    0.000 parser.py:98(ParserError)
        1    0.000    0.000    0.000    0.000 config.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:1199(daemon)
        1    0.000    0.000    0.000    0.000 function.py:583(_nested_map)
        2    0.000    0.000    0.000    0.000 __init__.py:137(exec_module)
        1    0.000    0.000    0.000    0.000 errors.py:37(RemovedConfigError)
        1    0.000    0.000    0.000    0.000 _base.py:28(SparseEfficiencyWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:28(DMNotAField)
        1    0.000    0.000    0.000    0.000 client.py:1467(InvalidURL)
        1    0.000    0.000    0.000    0.000 extras.py:319(_fromnxfunction_allargs)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1823(tol)
        1    0.000    0.000    0.000    0.000 systems.py:37(ODENonlinearError)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:401(group)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:507(DotAtomText)
        1    0.000    0.000    0.000    0.000 comments.py:200(NotNone)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:890(_PatchedFnDel)
        1    0.000    0.000    0.000    0.000 context.py:319(suppress)
        1    0.000    0.000    0.000    0.000 bdist.py:21(deprecated)
        1    0.000    0.000    0.000    0.000 _base.py:651(BrokenExecutor)
        1    0.000    0.000    0.000    0.000 parse.py:342(SplitResultBytes)
        1    0.000    0.000    0.000    0.000 six.py:340(Module_six_moves_urllib_parse)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:212(Token)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(UnsatisfiableConstraint)
        1    0.000    0.000    0.000    0.000 client.py:1464(NotConnected)
        1    0.000    0.000    0.000    0.000 _csc.py:274(csc_matrix)
        1    0.000    0.000    0.000    0.000 boolalg.py:371(__eq__)
        1    0.000    0.000    0.000    0.000 __init__.py:173(c_long)
        1    0.000    0.000    0.000    0.000 backend_tools.py:721(ConfigureSubplotsBase)
        1    0.000    0.000    0.000    0.000 _base.py:24(SparseFormatWarning)
        1    0.000    0.000    0.000    0.000 galoisgroups.py:35(MaxTriesException)
        1    0.000    0.000    0.000    0.000 utils.py:30(InvalidSdistFilename)
        1    0.000    0.000    0.000    0.000 exceptions.py:40(UnknownEditVariable)
        1    0.000    0.000    0.000    0.000 exceptions.py:10(ShapeError)
        1    0.000    0.000    0.000    0.000 boolalg.py:446(__eq__)
        1    0.000    0.000    0.000    0.000 scalarint.py:109(HexCapsInt)
        1    0.000    0.000    0.000    0.000 _dia.py:528(dia_array)
        1    0.000    0.000    0.000    0.000 threading.py:798(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1325(DejaVuSerifFontConstants)
        1    0.000    0.000    0.000    0.000 discovery.py:263(FlatLayoutModuleFinder)
        1    0.000    0.000    0.000    0.000 events.py:101(CollectionEndEvent)
        1    0.000    0.000    0.000    0.000 errors.py:24(MultipartConversionError)
        1    0.000    0.000    0.000    0.000 _script.py:328(ScriptWarning)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:512(NoFoldLiteral)
        1    0.000    0.000    0.000    0.000 __init__.py:85(_16Bit)
        1    0.000    0.000    0.000    0.000 errors.py:51(PackageDiscoveryError)
        1    0.000    0.000    0.000    0.000 error.py:168(YAMLStreamError)
        1    0.000    0.000    0.000    0.000 zipfile.py:47(LargeZipFile)
        1    0.000    0.000    0.000    0.000 client.py:1514(LineTooLong)
        1    0.000    0.000    0.000    0.000 errors.py:16(HeaderParseError)
        1    0.000    0.000    0.000    0.000 errors.py:28(CharsetError)
        1    0.000    0.000    0.000    0.000 errors.py:41(NoBoundaryInMultipartDefect)
        1    0.000    0.000    0.000    0.000 tarfile.py:276(CompressionError)
        1    0.000    0.000    0.000    0.000 Image.py:74(DecompressionBombError)
        1    0.000    0.000    0.000    0.000 utils.py:24(InvalidWheelFilename)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:943(_InvalidEwError)
        1    0.000    0.000    0.000    0.000 repmatrix.py:201(<genexpr>)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:700(Section)
        1    0.000    0.000    0.000    0.000 errors.py:5(PreprocessError)
        1    0.000    0.000    0.000    0.000 events.py:248(SequenceEndEvent)
        1    0.000    0.000    0.000    0.000 loader.py:55(Loader)
        2    0.000    0.000    0.000    0.000 groundtypes.py:26(__init__)
        1    0.000    0.000    0.000    0.000 function.py:118(BadArgumentsError)
        1    0.000    0.000    0.000    0.000 util.py:102(_FifoCache)
        1    0.000    0.000    0.000    0.000 std.py:57(TqdmDeprecationWarning)
        1    0.000    0.000    0.000    0.000 tarfile.py:270(ExtractError)
        1    0.000    0.000    0.000    0.000 core.py:156(MaskError)
        1    0.000    0.000    0.000    0.000 tokens.py:271(KeyToken)
        1    0.000    0.000    0.000    0.000 constructor.py:51(DuplicateKeyFutureWarning)
        1    0.000    0.000    0.000    0.000 frontend.py:131(FrontendTypeError)
        1    0.000    0.000    0.000    0.000 six.py:459(Module_six_moves_urllib_response)
        1    0.000    0.000    0.000    0.000 _optimize.py:3113(BracketError)
        1    0.000    0.000    0.000    0.000 events.py:264(MappingEndEvent)
        1    0.000    0.000    0.000    0.000 error.py:116(YAMLError)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._set_madvise_hugepage}
        1    0.000    0.000    0.000    0.000 {method 'isascii' of 'str' objects}
        1    0.000    0.000    0.000    0.000 exceptions.py:19(NonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 six.py:382(Module_six_moves_urllib_error)
        1    0.000    0.000    0.000    0.000 unicode.py:304(CJK)
        1    0.000    0.000    0.000    0.000 _bsr.py:771(bsr_matrix)
        1    0.000    0.000    0.000    0.000 function.py:113(BadSignatureError)
        1    0.000    0.000    0.000    0.000 _dia.py:604(dia_matrix)
        1    0.000    0.000    0.000    0.000 exceptions.py:61(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 threading.py:832(<listcomp>)
        1    0.000    0.000    0.000    0.000 splitter_base.py:182(FxNetSplitterInternalError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:78(IsomorphismFailed)
        1    0.000    0.000    0.000    0.000 polyerrors.py:82(ExtraneousFactors)
        1    0.000    0.000    0.000    0.000 client.py:1519(RemoteDisconnected)
        1    0.000    0.000    0.000    0.000 std.py:62(TqdmMonitorWarning)
        1    0.000    0.000    0.000    0.000 polyerrors.py:122(UnsolvableFactorError)
        1    0.000    0.000    0.000    0.000 context.py:17(BufferTooShort)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:107(background_context)
        1    0.000    0.000    0.000    0.000 _iotools.py:429(ConverterLockError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1274(CloseEvent)
        1    0.000    0.000    0.000    0.000 polyerrors.py:86(EvaluationFailed)
        1    0.000    0.000    0.000    0.000 tokens.py:256(FlowMappingStartToken)
        1    0.000    0.000    0.000    0.000 abc.py:267(FileLoader)
        1    0.000    0.000    0.000    0.000 error.py:228(ReusedAnchorWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:21(SendfileNotAvailableError)
        1    0.000    0.000    0.000    0.000 _typing.py:26(Integer)
        1    0.000    0.000    0.000    0.000 markers.py:45(UndefinedEnvironmentName)
        1    0.000    0.000    0.000    0.000 tokens.py:251(FlowSequenceStartToken)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(DMValueError)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(NonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 tokens.py:231(StreamEndToken)
        1    0.000    0.000    0.000    0.000 exceptions.py:48(DMShapeError)
        1    0.000    0.000    0.000    0.000 errors.py:44(StartBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 exceptions.py:291(ParseSyntaxException)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:862(Header)
        1    0.000    0.000    0.000    0.000 more.py:3661(AbortThread)
        1    0.000    0.000    0.000    0.000 errors.py:42(DistutilsGetoptError)
        1    0.000    0.000    0.000    0.000 errors.py:53(MisplacedEnvelopeHeaderDefect)
        1    0.000    0.000    0.000    0.000 errors.py:61(MultipartInvariantViolationDefect)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:840(HeaderLabel)
        1    0.000    0.000    0.000    0.000 errors.py:41(RemovedCommandError)
        1    0.000    0.000    0.000    0.000 _static.py:61(Str)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:550(ObsLocalPart)
        1    0.000    0.000    0.000    0.000 __init__.py:276(ReadError)
        1    0.000    0.000    0.000    0.000 __init__.py:177(c_ulong)
        1    0.000    0.000    0.000    0.000 error.py:274(YAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 errors.py:20(BoundaryError)
        1    0.000    0.000    0.000    0.000 context.py:23(AuthenticationError)
        1    0.000    0.000    0.000    0.000 pickle.py:84(UnpicklingError)
        1    0.000    0.000    0.000    0.000 _static.py:65(Tuple)
        1    0.000    0.000    0.000    0.000 errors.py:9(CompileError)
        1    0.000    0.000    0.000    0.000 tokens.py:266(FlowMappingEndToken)
        1    0.000    0.000    0.000    0.000 queues.py:16(QueueFull)
        1    0.000    0.000    0.000    0.000 polyerrors.py:90(RefinementFailed)
        1    0.000    0.000    0.000    0.000 context.py:20(TimeoutError)
        1    0.000    0.000    0.000    0.000 __init__.py:198(c_double)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:465(_ToolsTypoInMetadata)
        1    0.000    0.000    0.000    0.000 coreerrors.py:10(NonCommutativeExpression)
        1    0.000    0.000    0.000    0.000 exceptions.py:74(VisibleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 argparse.py:774(ArgumentTypeError)
        1    0.000    0.000    0.000    0.000 package_importer.py:675(_ExternNode)
        1    0.000    0.000    0.000    0.000 _endian.py:34(_swapped_struct_meta)
        1    0.000    0.000    0.000    0.000 readers.py:27(files)
        1    0.000    0.000    0.000    0.000 shutil.py:64(SameFileError)
        1    0.000    0.000    0.000    0.000 {method 'clear' of 'list' objects}
        1    0.000    0.000    0.000    0.000 proxy.py:317(TraceError)
        1    0.000    0.000    0.000    0.000 tarfile.py:291(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 __init__.py:260(IgnoredKeywordWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:53(DMNonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 headerregistry.py:382(UniqueAddressHeader)
        1    0.000    0.000    0.000    0.000 errors.py:63(DistutilsOptionError)
        1    0.000    0.000    0.000    0.000 errors.py:50(FirstHeaderLineIsContinuationDefect)
        1    0.000    0.000    0.000    0.000 _static.py:69(List)
        1    0.000    0.000    0.000    0.000 errors.py:13(LibError)
        1    0.000    0.000    0.000    0.000 tarfile.py:297(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 net_min_base.py:49(FxNetMinimizerResultMismatchError)
        1    0.000    0.000    0.000    0.000 __init__.py:202(c_longdouble)
        1    0.000    0.000    0.000    0.000 errors.py:96(DistutilsInternalError)
        1    0.000    0.000    0.000    0.000 errors.py:107(DistutilsByteCompileError)
        1    0.000    0.000    0.000    0.000 errors.py:23(UnknownFileType)
        1    0.000    0.000    0.000    0.000 shutil.py:74(ReadError)
        1    0.000    0.000    0.000    0.000 tarfile.py:288(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:81(DistutilsPlatformError)
        1    0.000    0.000    0.000    0.000 tokens.py:241(BlockMappingStartToken)
        1    0.000    0.000    0.000    0.000 __init__.py:261(c_wchar)
        1    0.000    0.000    0.000    0.000 shutil.py:67(SpecialFileError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:204(CFWSList)
        1    0.000    0.000    0.000    0.000 colors.py:1169(DivergingNorm)
        1    0.000    0.000    0.000    0.000 __init__.py:727(FilterError)
        1    0.000    0.000    0.000    0.000 errors.py:103(DistutilsTemplateError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:71(ModularGCDFailed)
        1    0.000    0.000    0.000    0.000 polyerrors.py:98(NotInvertible)
        1    0.000    0.000    0.000    0.000 headerregistry.py:322(UniqueDateHeader)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:197(Phrase)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:685(InvalidParameter)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(MissingUnityError)
        1    0.000    0.000    0.000    0.000 tarfile.py:294(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 headerregistry.py:397(UniqueSingleAddressHeader)
        1    0.000    0.000    0.000    0.000 errors.py:48(DistutilsArgError)
        1    0.000    0.000    0.000    0.000 tokens.py:284(BlockEntryToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:110(DomainError)
        1    0.000    0.000    0.000    0.000 errors.py:55(DistutilsFileError)
        1    0.000    0.000    0.000    0.000 exceptions.py:24(NonPositiveDefiniteMatrixError)
        1    0.000    0.000    0.000    0.000 six.py:480(Module_six_moves_urllib_robotparser)
        1    0.000    0.000    0.000    0.000 __init__.py:73(_96Bit)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:91(_take_dispatcher)
        1    0.000    0.000    0.000    0.000 errors.py:18(LinkError)
        1    0.000    0.000    0.000    0.000 exceptions.py:38(DMNonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:67(HeuristicGCDFailed)
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 errors.py:74(DistutilsSetupError)
        1    0.000    0.000    0.000    0.000 client.py:1475(UnknownTransferEncoding)
        1    0.000    0.000    0.000    0.000 errors.py:56(MissingHeaderBodySeparatorDefect)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:854(MessageID)
        1    0.000    0.000    0.000    0.000 errors.py:20(DistutilsError)
        1    0.000    0.000    0.000    0.000 facts.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 dataframes.py:367(CaptureDataFrame)
        1    0.000    0.000    0.000    0.000 polyerrors.py:94(CoercionFailed)
        1    0.000    0.000    0.000    0.000 errors.py:104(ObsoleteHeaderDefect)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:503(DotAtom)
        1    0.000    0.000    0.000    0.000 tokens.py:246(BlockEndToken)
        1    0.000    0.000    0.000    0.000 tokens.py:289(FlowEntryToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:102(NotReversible)
        1    0.000    0.000    0.000    0.000 __init__.py:67(_256Bit)
        1    0.000    0.000    0.000    0.000 tokens.py:236(BlockSequenceStartToken)
        1    0.000    0.000    0.000    0.000 errors.py:47(CloseBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 pickle.py:77(PicklingError)
        1    0.000    0.000    0.000    0.000 streamplot.py:420(TerminateTrajectory)
        1    0.000    0.000    0.000    0.000 errors.py:89(DistutilsExecError)
        1    0.000    0.000    0.000    0.000 _miobase.py:31(MatWriteWarning)
        1    0.000    0.000    0.000    0.000 _utils_internal.py:37(prepare_multiprocessing_environment)
        1    0.000    0.000    0.000    0.000 __init__.py:230(c_byte)
        1    0.000    0.000    0.000    0.000 _miobase.py:28(MatReadWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:194(c_float)
        1    0.000    0.000    0.000    0.000 font_manager.py:957(JSONEncoder)
        1    0.000    0.000    0.000    0.000 __init__.py:246(c_void_p)
        1    0.000    0.000    0.000    0.000 __init__.py:297(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 exceptions.py:85(TooHardError)
        1    0.000    0.000    0.000    0.000 shutil.py:81(_GiveupOnFastCopy)
        1    0.000    0.000    0.000    0.000 __init__.py:300(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 backend_tools.py:424(ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:208(Atom)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:858(InvalidMessageID)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CompressionError)
        1    0.000    0.000    0.000    0.000 __init__.py:294(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:26(DistutilsModuleError)
        1    0.000    0.000    0.000    0.000 tarfile.py:285(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 _iotools.py:437(ConversionWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:82(_32Bit)
        1    0.000    0.000    0.000    0.000 shutil.py:77(RegistryError)
        1    0.000    0.000    0.000    0.000 __init__.py:291(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 integerring.py:51(__init__)
        1    0.000    0.000    0.000    0.000 polyerrors.py:114(PolynomialError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:128(GeneratorsError)
        1    0.000    0.000    0.000    0.000 error.py:172(YAMLWarning)
        1    0.000    0.000    0.000    0.000 client.py:1501(CannotSendHeader)
        1    0.000    0.000    0.000    0.000 constructor.py:58(DuplicateKeyError)
        1    0.000    0.000    0.000    0.000 tarfile.py:282(HeaderError)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_64Bit)
        1    0.000    0.000    0.000    0.000 __init__.py:251(c_bool)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:28(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:70(_128Bit)
        1    0.000    0.000    0.000    0.000 __init__.py:223(c_ubyte)
        1    0.000    0.000    0.000    0.000 errors.py:90(HeaderMissingRequiredValue)
        1    0.000    0.000    0.000    0.000 errors.py:107(NonASCIILocalPartDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:76(_80Bit)
        1    0.000    0.000    0.000    0.000 _endian.py:35(_swapped_union_meta)
        1    0.000    0.000    0.000    0.000 polyerrors.py:132(GeneratorsNeeded)
        1    0.000    0.000    0.000    0.000 <string>:1(__create_fn__)
        1    0.000    0.000    0.000    0.000 __init__.py:285(HeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:112(InvalidDateDefect)
        1    0.000    0.000    0.000    0.000 errors.py:70(InvalidBase64PaddingDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:186(c_int)
        1    0.000    0.000    0.000    0.000 __init__.py:288(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:177(OptionError)
        1    0.000    0.000    0.000    0.000 errors.py:87(InvalidHeaderDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:190(c_uint)
        1    0.000    0.000    0.000    0.000 shutil.py:71(ExecError)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:584(_transpose_dispatcher)
        1    0.000    0.000    0.000    0.000 client.py:1478(UnimplementedFileMode)
        1    0.000    0.000    0.000    0.000 mathtext.py:1329(DejaVuSansFontConstants)
        1    0.000    0.000    0.000    0.000 __init__.py:88(_8Bit)
        1    0.000    0.000    0.000    0.000 streamplot.py:495(OutOfBounds)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:163(__init__)
        1    0.000    0.000    0.000    0.000 polyerrors.py:74(HomomorphismFailed)
        1    0.000    0.000    0.000    0.000 hb.py:34(LineOverflow)
        1    0.000    0.000    0.000    0.000 polyerrors.py:147(UnivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 __init__.py:235(c_char)
        1    0.000    0.000    0.000    0.000 errors.py:73(InvalidBase64CharactersDefect)
        1    0.000    0.000    0.000    0.000 errors.py:76(InvalidBase64LengthDefect)
        1    0.000    0.000    0.000    0.000 backend_tools.py:439(ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 client.py:1498(CannotSendRequest)
        1    0.000    0.000    0.000    0.000 rationalfield.py:45(__init__)
        1    0.000    0.000    0.000    0.000 bdist.py:22(<lambda>)
        1    0.000    0.000    0.000    0.000 client.py:1504(ResponseNotReady)
        1    0.000    0.000    0.000    0.000 enum.py:1163(_missing_)
        1    0.000    0.000    0.000    0.000 six.py:239(exec_module)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:442(__init__)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:647(__init__)
        1    0.000    0.000    0.000    0.000 polyerrors.py:181(FlagError)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:96(_mode_formula)
        1    0.000    0.000    0.000    0.000 _functools.py:83(<lambda>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:93(_median_formula)


