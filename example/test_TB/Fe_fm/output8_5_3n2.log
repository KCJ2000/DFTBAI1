band_index: [5, 6, 7, 8]
model_index_up: [0, 2, 4, 6]
model_index_dn: [0, 2, 4, 6]
mask: []
neighbour_list [3]
0 特征值优化 tensor(19.1525, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[1.0010, 1.0010, 0.9990, 1.0010, 0.9990, 1.0010, 1.0010, 1.0010, 1.0010,
         0.9990, 1.0010, 1.0010, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         1.0010, 1.0010, 0.9990, 0.9990, 1.0010, 1.0010, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990]],
       device='cuda:0') 0
1000 特征值优化 tensor(2.4664, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7719,  1.6965,  0.0984,  0.0531,  0.1955,  1.0710,  1.7519,  1.2284,
          1.7719,  0.9046,  1.7218,  1.7038,  0.6002,  0.1963,  0.1760,  0.1212,
          0.0737,  0.2629,  0.2667,  0.2572,  0.7633,  0.0189,  0.0475,  0.0682,
          0.0330,  0.0868,  0.1529,  0.1869,  0.0525,  0.0445,  0.0976,  0.2430,
          0.2214, -0.0404,  0.2273,  0.2115,  0.4130,  0.5921,  0.4873,  0.4937,
          0.4683,  0.4515,  0.2579,  0.2824,  0.2824,  0.3830,  0.4108,  0.0396,
          0.1129,  0.1129,  0.0509,  0.0536, -0.0185,  0.0245,  0.8066,  0.8393,
          0.0408,  0.1405,  0.4856,  0.3417,  0.3026,  0.4149,  0.2261,  0.8025,
          0.2740,  0.4840,  0.3530,  0.6077,  0.3275,  0.3910,  0.2652,  0.5178]],
       device='cuda:0') tensor(2.2205, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
2000 特征值优化 tensor(2.1077, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8031,  1.6839,  0.3531,  0.0787,  0.0310,  0.8048,  1.6566,  1.2376,
          1.4360,  1.0669,  1.4215,  1.2677,  0.5146,  0.1023,  0.1418,  0.1646,
          0.0618,  0.3604,  0.2692,  0.2465,  0.6678,  0.0047,  0.0224,  0.0473,
          0.0301, -0.0026, -0.0285,  0.0092,  0.0025,  0.0230,  0.0570,  0.1275,
          0.0345, -0.1499,  0.0992,  0.0255,  0.3926,  0.5013,  0.4364,  0.4497,
          0.3677,  0.4181, -0.0837,  0.2863,  0.2863,  0.0178,  0.4507, -0.0581,
          0.0818,  0.0818, -0.0507,  0.0526, -0.1544,  0.0074,  0.5350,  0.8407,
         -0.0818,  0.1942,  0.1043,  0.1460,  0.0413,  0.5259,  0.2712,  0.6197,
          0.1883,  0.5524,  0.3466,  0.4710,  0.0238,  0.6043,  0.1067,  0.6378]],
       device='cuda:0') tensor(1.1399, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
3000 特征值优化 tensor(5.1537, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2181,  0.2378, -0.1636,  0.9440,  0.1896,  0.8058,  1.1246,  0.7504,
          1.0013, -1.0999,  0.1976,  2.3429, -0.5695,  0.4202, -1.2125,  0.3077,
          0.0913,  0.0416,  0.1416,  0.1909,  0.5879, -0.1624,  0.2094, -0.0343,
          1.1936,  0.2314, -1.5157, -0.1497, -0.1521, -0.0239, -0.2571, -0.0397,
          0.5483,  0.2260, -0.0252,  0.0330,  0.0527,  0.0732,  0.3343, -0.5520,
          0.5299,  0.1803,  0.3831, -0.0660,  0.1553, -0.7789,  0.1562,  0.3947,
         -1.2110, -1.4288,  0.3941, -1.0724,  1.4205, -0.4694,  0.7682,  0.4544,
         -0.1190,  0.0650,  0.4681, -0.7112, -1.0569,  0.3046,  0.1410,  0.0433,
          0.1046,  0.5973,  0.1181, -0.4902,  0.8379, -0.7809, -0.6395,  0.5323]],
       device='cuda:0') tensor(3.4512, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
4000 特征值优化 tensor(2.1884, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3687, -0.0780,  0.3747,  0.1944,  0.5963,  0.2749,  0.3232,  0.6755,
          1.2664, -1.2746,  0.1073,  3.0520, -0.1575,  0.0358, -0.4015,  0.0521,
          0.0339,  0.0370,  0.0945, -0.0219,  0.1802,  0.0268, -0.0174,  0.0473,
          0.4335, -0.2154, -0.7186, -0.2776, -0.2187,  0.0479, -0.0644, -0.1039,
          0.5379,  0.0263, -0.0382,  0.0544,  0.0790, -0.0141,  0.5387, -0.2798,
          0.3135,  0.0718, -0.1352,  0.1711,  0.1741, -0.0508,  0.0050,  0.7957,
         -0.7073, -0.8914,  0.9600, -0.9060,  0.6971, -0.3545,  0.1494,  0.4872,
         -0.1911,  0.1761,  0.5746, -0.6074, -0.4941,  0.2259,  0.2815,  0.0556,
          0.1879,  0.7730,  0.1957, -0.3477,  0.9934, -0.5235, -1.2403,  0.3172]],
       device='cuda:0') tensor(1.3558, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
5000 特征值优化 tensor(15.6839, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.2359,  1.3059,  0.5762, -0.4654, -0.6896, -1.1002,  0.6272,  0.2047,
          0.5648,  2.4354,  0.9352, -0.4021, -0.7005,  0.6427,  0.7242,  1.3803,
          0.6888,  0.3708, -0.7202,  0.4398, -0.6973,  0.4430,  0.1486, -0.3921,
         -0.1068,  0.0859, -0.1003, -0.1509, -0.3511,  0.2196,  0.6545,  0.7676,
          1.5962, -0.3679, -0.1866, -0.0934,  1.1507, -0.7854,  0.8119,  0.4384,
         -0.3075,  0.4685,  1.6354,  1.1149, -0.8030,  1.0469, -2.9167, -0.5776,
         -1.2930, -0.2637, -0.7218,  0.5528,  1.0775, -0.5010, -0.4255,  0.2873,
         -0.5397, -0.4363,  0.0704,  0.1211, -0.6814,  0.0733, -0.4167,  1.8211,
          0.3044,  0.9946,  0.4013, -0.0700,  3.5205, -1.6661,  0.6506,  1.4165]],
       device='cuda:0') tensor(9.2993, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
6000 特征值优化 tensor(3.2556, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.8562e-01,  2.3019e-01, -4.4004e-03, -5.9318e-01, -8.6486e-02,
         -4.1705e-01,  1.3518e+00, -2.3956e-01,  1.1518e+00,  1.9571e+00,
          1.7553e+00,  7.7761e-02, -7.7761e-02, -4.5279e-02,  4.3667e-02,
          4.6499e-01, -1.4681e-01, -6.4034e-03, -5.9362e-02,  1.2396e-02,
         -4.4639e-02,  5.1871e-02, -8.0900e-04, -1.2212e-02, -1.6219e-01,
         -2.1084e-01,  1.3958e-01, -2.4364e-01,  2.5014e-03,  7.3777e-02,
          2.4720e-02,  3.5891e-01,  9.3968e-01, -2.4165e-02, -2.2228e-02,
         -1.0274e-02,  4.5023e-01, -2.5496e-01,  3.8498e-01,  3.7125e-01,
         -5.1134e-01,  4.1474e-01,  2.4749e+00,  9.1883e-02, -1.8470e+00,
          1.9613e+00, -1.9292e+00, -3.5292e-01, -4.0789e-01,  3.2612e-01,
         -1.0289e-01,  6.0687e-02,  7.3056e-01, -4.7645e-01, -4.1770e-01,
          7.7784e-01,  1.6464e-02,  2.0214e-02,  1.5006e-02, -3.5724e-02,
         -1.5488e-01,  1.3277e-01, -1.0969e+00,  1.0214e+00, -2.0333e-01,
          5.7850e-01, -2.4334e-01,  3.8586e-01,  3.4431e+00, -1.9490e+00,
          3.0731e-01,  8.6716e-01]], device='cuda:0') tensor(1.4293, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
7000 特征值优化 tensor(2.1007, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.6747e-02,  4.2501e-02, -3.2074e-01, -5.0654e-01,  8.7249e-02,
          2.6352e-02,  1.2542e+00, -5.7998e-01,  1.3696e+00,  1.6407e+00,
          1.9128e+00,  6.8012e-01, -1.4073e-01,  3.6227e-02,  2.1510e-02,
          3.1598e-01, -8.7432e-02,  6.1965e-02, -7.3686e-02,  2.1813e-02,
         -1.3421e-03,  8.5222e-02, -2.7500e-03,  3.7178e-02, -1.2463e-01,
         -6.7409e-02, -7.1617e-02, -9.7094e-02, -3.1880e-02,  1.1534e-01,
         -1.6276e-02,  2.8300e-01,  6.2019e-01, -2.3807e-02, -4.0914e-02,
          3.1093e-02,  3.3012e-01, -3.2085e-01,  3.2417e-01,  3.4579e-01,
         -3.3183e-01,  4.0846e-01,  2.6522e+00, -1.5230e-01, -2.0832e+00,
          2.3761e+00, -1.6461e+00, -3.9176e-01, -1.9402e-01,  3.6848e-01,
         -3.8600e-02, -7.2196e-02,  2.3506e-01, -1.3830e-01, -2.2003e-01,
          5.5619e-01, -1.0317e-01,  7.5141e-02,  3.1959e-02,  6.1761e-02,
         -2.0452e-01, -1.1772e-02, -1.2458e+00,  9.2137e-01, -1.6177e-01,
          4.9033e-01, -1.2848e-01,  3.1305e-01,  3.1242e+00, -1.7925e+00,
          3.7055e-01,  5.1521e-01]], device='cuda:0') tensor(0.8665, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
8000 特征值优化 tensor(12.4148, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2828,  1.6950,  0.9963, -0.1837, -0.7274, -0.1048,  1.2542, -0.0781,
          0.7915, -1.1828, -1.1656, -0.2586, -0.1905, -0.0721,  0.0332, -0.3447,
         -0.0105, -0.8201, -0.0998, -0.2082, -0.2581, -0.9581,  0.6933,  0.0191,
          0.3486,  0.4185, -1.2329,  0.0210,  0.0294,  1.3431, -0.0189, -0.2711,
         -0.4498, -0.0686, -1.4516, -0.2526,  0.3592, -0.1867, -1.3709,  1.2669,
          0.2247,  0.6628,  0.2231,  0.1303, -0.3413, -0.4711,  0.1519,  1.2707,
          1.2564,  1.6186, -0.4246, -0.7627, -0.0877,  0.0335,  0.9604, -0.2760,
          1.6559, -0.6767,  0.1736, -0.0757, -0.4737, -1.1011,  0.3601,  1.0212,
          0.5564,  2.1964, -0.5941, -1.9820,  0.1762, -0.6342, -0.5012,  1.1586]],
       device='cuda:0') tensor(5.8225, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
9000 特征值优化 tensor(2.9961, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.7516e-01,  7.6219e-01,  1.5107e+00, -7.5229e-01, -2.1506e-01,
          4.9508e-01,  4.7458e-01,  8.7583e-02,  1.7602e+00, -2.2972e+00,
         -5.5513e-01,  4.9486e-01, -1.1690e-03,  9.7575e-03, -1.5861e-03,
          3.2155e-01, -3.5160e-01, -1.4360e-01, -1.4802e-01, -3.1028e-02,
          1.6660e-02, -7.6101e-01,  9.5893e-02,  3.9550e-03,  1.2062e-01,
         -8.3393e-02, -3.0759e-01, -4.1576e-02,  4.2984e-04,  9.1656e-01,
         -2.2913e-02, -3.3986e-02, -4.7974e-02, -1.1405e-02, -6.3398e-01,
          3.6504e-01,  1.4017e-01, -1.4402e-01, -1.1969e+00,  6.0162e-01,
          1.2973e-01, -7.4156e-02, -4.7016e-01,  1.3832e-01,  1.4043e-01,
         -4.2312e-01,  7.6175e-02,  5.9835e-01,  6.0982e-01,  1.1500e+00,
         -6.3924e-01, -7.1760e-01, -2.1399e-01,  1.4711e-01,  3.3191e-01,
         -3.5191e-01,  2.0939e+00, -1.2071e+00,  1.2467e+00, -7.8190e-01,
         -4.7480e-01,  3.7240e-03, -6.0349e-02,  2.1040e-01,  1.3721e+00,
          1.1562e+00, -1.1748e-01, -1.1157e+00,  1.1134e-01, -1.8735e-01,
          8.2339e-02,  2.6852e-01]], device='cuda:0') tensor(2.2071, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
10000 特征值优化 tensor(2.0944, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.7552e-01,  6.3341e-01,  1.6779e+00, -1.1336e+00,  3.4695e-02,
          5.8877e-01,  1.3902e-01,  3.7610e-01,  2.1090e+00, -2.4198e+00,
         -4.8142e-01,  6.2701e-01, -9.5102e-04,  3.0835e-02,  3.1096e-03,
          2.5751e-01, -3.0359e-01,  2.0494e-02, -4.7360e-03,  4.6945e-02,
          2.2560e-02, -6.4473e-01,  1.2611e-01, -1.3165e-02,  1.7447e-01,
         -1.7717e-01, -1.2761e-01, -1.0794e-02,  1.6931e-01,  7.0918e-01,
         -2.4889e-02,  2.8418e-02,  5.4708e-03,  2.2227e-02, -4.5332e-01,
          2.9191e-01,  1.1598e-01, -1.2213e-01, -9.4942e-01,  5.6810e-01,
          1.1484e-01, -1.8434e-01, -4.6016e-01,  1.3554e-01,  1.8023e-01,
         -3.5061e-01,  7.2899e-02,  4.1497e-01,  2.8531e-01,  8.2206e-01,
         -3.7553e-01, -5.2421e-01, -2.2880e-01,  1.4311e-01,  2.5469e-01,
         -2.2167e-01,  2.1382e+00, -1.1180e+00,  1.0760e+00, -8.0460e-01,
         -5.9218e-01,  2.0839e-01,  1.4380e-01,  2.5355e-02,  8.4513e-01,
          7.5852e-01,  8.2755e-02, -8.8895e-01,  7.3914e-02, -1.4278e-01,
         -4.5625e-02,  2.2538e-01]], device='cuda:0') tensor(1.4475, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
11000 特征值优化 tensor(6.1757, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1569, -2.5182,  0.2305,  0.4906,  0.3599,  1.3863,  1.3814, -0.1727,
          0.7096, -0.3836,  0.7301,  0.4765,  0.3219, -0.1310, -0.0536, -1.8868,
         -1.6702, -0.1209,  0.8663, -0.2121, -0.3260,  0.9890,  0.0132, -0.2199,
          0.2180, -0.0260, -0.0393, -0.7581, -0.0127, -0.4912, -0.1707, -0.2335,
         -0.1212, -0.7578,  0.0126,  0.0253, -0.3627, -0.2099,  0.1088, -0.3593,
         -0.4824,  0.2416,  0.7589,  0.4217, -1.3907, -0.7627,  0.4278, -0.0290,
         -0.3372,  1.5106, -2.2009,  0.1011, -0.2746, -0.7028,  0.1188,  1.3671,
          1.7034,  0.0784, -0.1537, -0.1573, -0.9211,  0.8178,  0.1103,  1.1199,
         -0.1080,  0.6274, -0.2243, -0.1630,  0.3288,  0.0359,  0.1344,  0.3140]],
       device='cuda:0') tensor(4.1401, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
12000 特征值优化 tensor(2.2752, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9340e+00, -2.9403e+00,  9.0867e-01,  3.1339e-01,  9.0797e-02,
          9.0029e-01,  1.9272e+00,  1.3271e-01,  4.6277e-01, -1.5518e-01,
          9.8369e-01,  1.3657e-01,  1.0108e-01, -4.5336e-02, -2.0639e-02,
         -1.0411e+00, -9.1860e-01, -1.2252e-01,  2.5168e-01, -9.7403e-02,
         -1.2208e-01,  5.7825e-01, -1.7136e-01, -1.4508e-01,  7.8585e-02,
         -2.4905e-02, -4.7864e-02, -6.5523e-02, -3.0550e-02, -3.6923e-01,
         -3.6979e-02, -2.0486e-02, -3.0275e-02, -2.5529e-01,  1.1205e-02,
          1.5838e-03, -1.9422e-01, -2.0101e-01,  4.3846e-02, -1.1573e-02,
         -5.4367e-01, -2.7557e-02,  6.7326e-01, -9.4958e-02, -9.4043e-01,
         -7.8896e-01,  6.4579e-01, -3.0674e-01, -1.3225e-01,  6.9336e-01,
         -1.1941e+00, -2.1158e-01,  2.5824e-02, -1.2453e-02,  3.5552e-01,
          6.5078e-01,  9.5796e-01, -1.7323e-01, -4.4260e-02,  6.5239e-02,
         -7.8095e-01,  3.9086e-01,  3.7367e-01,  5.3374e-01, -2.8943e-01,
          2.3236e-01,  7.0759e-04,  8.1412e-03,  4.9454e-01,  2.4770e-01,
         -2.3663e-01,  1.2867e-01]], device='cuda:0') tensor(1.4359, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
13000 特征值优化 tensor(2.1449, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0913, -3.0049,  0.9552,  0.5284,  0.0657,  0.2878,  2.0623,  0.1496,
          0.3057, -0.0381,  0.8599,  0.1456,  0.0562, -0.0735,  0.0724, -0.8290,
         -0.8004, -0.1916,  0.1909, -0.2466, -0.0776,  0.5307, -0.1450, -0.2751,
          0.0425,  0.0738,  0.0695,  0.0187, -0.0101, -0.3598, -0.0182, -0.0342,
          0.0043, -0.2947, -0.0518,  0.0074, -0.1421, -0.1922,  0.0173, -0.0274,
         -0.5462, -0.0122,  0.7050, -0.2987, -0.7100, -0.8332,  0.6041, -0.4462,
         -0.0787,  0.7384, -1.0212, -0.2557, -0.0329,  0.0492,  0.1506,  0.4508,
          0.3868, -0.1066, -0.0593,  0.0350, -0.6927,  0.3240,  0.3932,  0.4908,
         -0.2474,  0.1710, -0.0223, -0.0110,  0.2299,  0.4748, -0.2440,  0.1713]],
       device='cuda:0') tensor(0.9798, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
14000 特征值优化 tensor(10.9850, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.1079e-01,  5.8507e-01, -3.0257e-01,  4.6964e-01,  1.1817e+00,
          9.2755e-01,  7.8147e-01,  7.4397e-01,  1.7420e+00, -1.2941e-01,
         -9.3280e-01,  4.3087e-01,  2.0734e-02, -1.4327e-01,  4.7706e-01,
          3.2324e-02, -6.6020e-01,  2.9301e-01,  1.4292e+00,  1.0089e-01,
          7.8397e-03,  1.3269e+00,  5.7763e-01, -3.2536e-01,  1.2665e-01,
          6.5784e-01, -8.1862e-02, -1.7130e-01,  4.2357e-01,  3.9560e-01,
         -1.8022e+00, -9.1818e-01, -2.5094e-01,  2.7874e-02, -1.1817e-01,
          1.2270e+00, -1.4594e-01, -7.9967e-02,  6.9376e-01, -5.8442e-01,
         -2.1756e-01, -1.1785e-01, -2.5275e-01,  1.3498e+00, -2.7944e-01,
         -3.4915e-01, -4.0336e-01, -8.0033e-01, -1.1772e+00,  7.2201e-01,
          4.6847e-01,  4.6022e-01, -7.4442e-01, -1.4589e-01,  7.1757e-04,
          7.2232e-04, -1.0885e+00, -3.3685e-01,  3.5932e-01,  4.7677e-02,
          1.1109e+00, -7.4383e-01, -6.4510e-01,  5.2099e-01,  2.8535e-01,
          8.7887e-01, -7.8707e-01, -4.6569e-01,  5.0172e-01,  1.4292e-01,
         -2.1351e-01, -1.4445e-01]], device='cuda:0') tensor(5.6581, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
15000 特征值优化 tensor(2.3376, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.8603e-01,  5.8273e-01,  3.4174e-01,  7.5308e-01,  2.0343e+00,
          1.5854e+00,  9.8522e-02,  5.5276e-01,  9.1323e-01, -5.3310e-01,
         -1.5759e-01,  1.0282e+00,  5.8653e-02, -1.7702e-02, -2.4294e-02,
          2.0333e-01, -1.6400e-01,  1.9381e-01,  5.3133e-01, -3.7544e-04,
          3.8865e-02,  5.8474e-01,  1.7516e-01,  5.9300e-02, -8.2285e-02,
          1.2178e-01,  5.1150e-02,  7.5762e-02,  2.1137e-02,  4.2127e-01,
         -9.2801e-01, -1.4415e-01, -7.6199e-02, -3.1809e-02,  1.4138e-01,
          5.9483e-01, -9.2396e-02, -4.0777e-02,  2.1887e-01, -1.8610e-01,
         -4.5801e-02, -7.2903e-02, -4.4919e-01,  9.3924e-01, -4.9151e-01,
         -1.7167e-01,  3.6974e-03, -8.6955e-02, -3.7286e-01,  1.2904e+00,
          3.7942e-01,  3.4891e-01,  8.7239e-02,  7.2029e-01, -2.0302e-02,
         -4.6583e-02, -3.7767e-01, -2.1963e-01,  1.7100e-02, -1.9705e-02,
          6.2347e-01, -2.0636e-01, -4.6062e-01,  2.0092e-01, -2.5460e-01,
          4.3340e-01, -2.6848e-01, -8.6141e-03,  1.7370e-01,  3.0971e-04,
          4.1625e-01, -6.3477e-01]], device='cuda:0') tensor(1.6383, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
16000 特征值优化 tensor(2.1152, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.0299e-01,  6.5103e-01,  4.2260e-01,  6.9300e-01,  2.1647e+00,
          1.5230e+00, -2.5962e-01,  3.7999e-01,  2.2555e-01, -7.2199e-01,
         -3.1504e-02,  9.7080e-01,  4.4271e-02, -6.0358e-02, -9.7178e-02,
          1.0931e-01, -1.0476e-01,  1.6220e-01,  3.0528e-01, -1.2439e-02,
          1.5840e-02,  5.1320e-01,  1.9716e-01,  1.1713e-01, -7.5129e-02,
          7.7517e-02,  1.0293e-01,  1.5514e-01,  4.5931e-02,  4.7662e-01,
         -8.5440e-01, -5.0346e-02,  8.6635e-04, -1.7772e-02,  1.5218e-01,
          5.1838e-01, -1.6808e-02, -7.1148e-03,  4.9580e-02, -1.0469e-01,
         -3.6728e-02, -1.1716e-01, -5.4912e-01,  6.1136e-01, -1.5207e-01,
         -2.6515e-01,  5.6298e-03, -1.5628e-02, -2.3809e-01,  1.1679e+00,
          3.0285e-01,  3.2923e-01, -3.6278e-02,  6.1359e-01,  3.2893e-02,
         -9.3358e-02, -3.6512e-01, -1.8465e-01,  2.2246e-01, -2.9324e-02,
          1.4151e-01,  1.1880e-02, -2.2121e-01,  2.6777e-02, -8.7816e-02,
          1.2471e-01, -2.2503e-01,  6.8622e-02, -8.9477e-03,  7.7111e-02,
          4.8417e-01, -5.9614e-01]], device='cuda:0') tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
17000 特征值优化 tensor(5.4149, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5772e+00,  1.0802e+00, -7.0346e-01,  7.0688e-01, -1.1388e-01,
          5.5183e-01,  1.5593e+00, -1.0639e+00,  4.0692e-01, -2.2816e+00,
          2.3360e+00,  2.4567e-01,  5.7556e-01,  4.7884e-01,  1.4013e+00,
         -5.8837e-01,  3.5595e-01,  2.0984e-01, -1.8521e+00, -2.5704e-01,
          5.4900e-01,  4.4467e-01, -2.1646e-01,  6.2380e-01, -6.7428e-01,
         -5.2166e-02,  3.5459e-02, -1.8086e-01,  1.0551e-01,  4.0019e-01,
          4.2123e-02,  6.2977e-04, -5.3776e-05, -7.2037e-02, -7.4262e-02,
          6.7270e-01,  2.9539e-01, -6.4539e-01, -2.4757e-01,  1.1440e-01,
          3.9026e-01, -4.9940e-01,  1.6484e-01, -5.8042e-02,  1.1632e-01,
          1.2722e+00, -3.9405e-01,  1.3391e+00, -6.2478e-01, -1.1687e-02,
         -6.6392e-01,  4.3910e-01, -1.5659e-01,  1.1760e-03, -8.5395e-03,
         -3.2896e-03,  1.5068e-01,  1.6065e-01, -2.8701e-02,  1.0837e-01,
         -4.6999e-01,  3.4170e-01, -1.6452e-01, -1.1463e+00, -1.9974e-01,
          6.8485e-01,  4.3575e-01, -6.0649e-01, -7.0892e-01,  4.1367e-01,
          1.0556e+00, -9.4320e-01]], device='cuda:0') tensor(2.8191, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
18000 特征值优化 tensor(2.2553, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9748e+00,  1.5457e+00, -6.0815e-01,  4.5625e-01,  3.6929e-01,
          1.6098e-01,  1.5377e+00, -1.2921e+00,  1.2614e+00, -1.6803e+00,
          2.9149e+00,  7.1550e-01,  3.6488e-01,  3.2735e-01,  5.1079e-01,
         -4.1770e-03,  1.1656e-01, -3.7781e-02, -9.2944e-01, -5.9463e-03,
          4.1040e-01,  1.1141e-01,  1.8149e-02,  5.2348e-02, -1.8206e-02,
         -3.4516e-02,  3.4761e-02, -2.3482e-01, -4.6229e-02,  1.2807e-01,
         -1.8835e-02, -2.4922e-02, -1.7287e-02, -2.1591e-02,  3.8601e-04,
          3.0325e-01,  4.4983e-01, -5.3667e-01, -2.3046e-01,  1.5141e-01,
          3.3513e-01, -3.4111e-01,  3.5572e-01, -2.6603e-01, -1.0473e-01,
          7.8651e-01, -4.0251e-01,  1.0976e-01, -3.5318e-01,  5.1510e-01,
         -5.0460e-01,  5.5559e-02, -2.5255e-01,  8.9517e-02,  5.4345e-03,
          2.2415e-02, -5.0291e-02,  4.2440e-02,  7.2629e-03, -5.1087e-03,
         -2.5403e-02,  6.5813e-01, -2.4591e-01, -6.5113e-01, -4.5555e-01,
          4.3415e-01,  5.3022e-01, -4.4555e-01, -8.6027e-01,  4.8499e-01,
          1.2435e+00, -5.3324e-01]], device='cuda:0') tensor(1.4326, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
19000 特征值优化 tensor(20.6399, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0770e+00, -1.1482e+00, -4.2844e-01,  1.2680e+00,  3.1649e-03,
         -8.3755e-01,  4.7953e-01, -1.1663e+00, -8.0715e-01,  5.0879e-01,
         -9.8795e-03,  4.2997e-01, -4.6941e-01, -2.1225e+00, -7.2954e-01,
          5.5010e-02, -2.1007e-01,  1.1247e+00,  2.3954e-01,  5.3778e-01,
         -8.8566e-03, -7.4161e-01,  4.2261e-02,  2.0202e-01,  2.5604e-01,
         -7.4853e-01, -2.3557e-01,  1.9996e+00, -9.2695e-02, -2.2407e+00,
          2.0818e-01,  1.6957e-01, -1.4948e-03, -1.1521e-01, -1.7518e-01,
         -2.0740e+00, -6.4293e-01, -1.3710e-01, -1.0692e+00,  4.4222e-01,
          2.6800e+00,  2.7408e-01,  3.1457e-01, -6.5510e-02, -5.5026e-01,
          3.8356e-01, -5.5867e-01, -2.0846e-01, -1.0891e+00, -5.9944e-01,
         -1.1606e+00,  1.9428e+00, -1.2196e+00, -1.1267e+00,  7.6240e-01,
         -7.1469e-01,  4.9802e-01, -5.4666e-01, -2.0947e+00,  9.4924e-01,
          6.8425e-02,  4.9955e-01, -3.0438e-01, -3.4036e-01, -7.2406e-01,
         -7.5820e-01,  8.5366e-01,  4.3233e-01, -9.5677e-01, -1.2932e+00,
          1.8319e+00,  1.5640e+00]], device='cuda:0') tensor(11.5596, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
20000 特征值优化 tensor(6.4339, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.2380e-01, -3.8193e-01,  5.9696e-01,  2.0280e+00,  7.7474e-01,
          4.3061e-02,  5.2740e-01, -8.1349e-01, -4.9093e-01, -5.9188e-02,
          8.8353e-01,  1.4199e+00, -6.0739e-02, -9.8080e-01,  4.9558e-02,
          8.5964e-03,  3.6008e-02,  7.2400e-01, -1.4034e-03, -1.5149e-03,
         -5.2346e-02, -2.7965e-01, -5.9733e-02,  6.1553e-02, -9.6023e-03,
         -2.0225e-02, -2.9021e-01,  9.6128e-01, -4.1036e-02, -1.3015e+00,
         -2.8195e-02,  1.2311e-02,  3.2897e-01, -2.9340e-02,  7.1202e-02,
         -1.1342e+00, -7.4006e-02, -1.9750e-01, -1.6424e-01,  7.3950e-02,
          1.8260e+00, -2.7140e-02, -3.1114e-01,  2.5807e-01, -6.4847e-02,
          1.6256e-01, -1.0030e-01,  6.5796e-01, -4.2384e-01,  1.3344e-02,
         -5.9617e-01,  1.9784e+00, -3.7771e-01, -2.4354e-01,  4.8142e-02,
         -1.7414e-02,  1.5897e+00, -1.0596e+00, -1.0425e+00,  1.9601e-01,
         -2.7909e-01,  1.0290e-01,  1.5330e-02, -1.7442e-01,  3.2467e-01,
         -1.0714e-01,  2.7574e-01, -1.8214e-01, -2.0472e-02, -5.1658e-01,
          1.7069e+00,  5.6890e-01]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
21000 特征值优化 tensor(2.2516, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5194e-01, -3.0043e-01,  1.1216e+00,  2.0917e+00,  6.8412e-01,
          3.1544e-01,  1.2613e-01, -7.5535e-01, -1.9756e-01, -1.6640e-02,
          1.6131e+00,  1.8006e+00,  3.8458e-03, -2.1895e-01,  1.7605e-01,
         -2.7913e-02, -1.9968e-02, -2.2474e-04, -1.8951e-02, -1.2015e-02,
         -2.3161e-02, -5.7255e-01,  8.7090e-02,  1.8928e-01, -2.5979e-02,
          7.1342e-03,  4.9544e-02,  3.1206e-01, -6.8802e-03, -8.4984e-01,
         -2.2624e-02, -2.7194e-02,  1.7355e-01, -1.2054e-01,  6.4252e-02,
         -7.9408e-01,  2.1672e-02, -1.9756e-01, -1.7242e-02, -6.0186e-02,
          1.0210e+00, -7.0825e-02, -3.9812e-01,  2.9225e-01,  1.6892e-01,
          1.6008e-01, -8.2693e-02,  1.0415e+00,  4.8086e-02,  2.5757e-01,
         -7.4498e-01,  1.2085e+00, -4.5921e-01,  5.6289e-02,  9.1343e-04,
         -4.2266e-03,  1.7658e+00, -1.1793e+00, -8.4564e-01,  4.6660e-01,
         -2.4464e-01,  1.7848e-01,  6.9467e-02, -2.0666e-01, -9.2079e-02,
          9.7674e-02,  1.3135e-01, -8.1339e-02,  7.0028e-01,  3.0847e-01,
          5.6996e-01,  2.1175e-01]], device='cuda:0') tensor(1.6038, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
22000 特征值优化 tensor(2.1121, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3427e-01, -2.1122e-01,  1.2183e+00,  1.9052e+00,  6.7197e-01,
          4.4485e-01,  1.6111e-01, -7.1979e-01,  7.9733e-02, -2.9990e-01,
          1.5599e+00,  1.8378e+00, -2.5228e-03, -1.3599e-01,  1.7395e-01,
         -1.8887e-02,  1.7197e-02, -2.1115e-02,  8.3223e-02, -4.5272e-02,
         -2.2250e-02, -5.6443e-01,  3.8102e-02,  1.7658e-01, -7.0362e-02,
          1.2119e-02, -8.0430e-04,  2.8131e-01, -1.6136e-02, -8.1627e-01,
         -1.6865e-02, -1.9282e-02,  5.8474e-02, -1.4250e-01, -4.6510e-02,
         -7.3235e-01,  6.0438e-02, -2.8443e-01,  1.5925e-02, -6.2665e-02,
          9.5880e-01,  2.6614e-02, -3.8040e-01,  3.3982e-01,  1.0375e-01,
          1.0119e-01, -5.4346e-02,  9.5665e-01, -1.0901e-01,  4.8743e-01,
         -6.3586e-01,  1.1316e+00, -4.7254e-01,  1.1694e-01,  2.1765e-02,
         -9.7015e-02,  1.7549e+00, -1.2230e+00, -6.6427e-01,  1.2303e+00,
         -2.0694e-01,  1.7140e-01,  3.0278e-01, -2.7285e-01, -1.2306e-01,
          1.2703e-01, -1.1871e-01, -5.5582e-02,  5.7919e-01,  4.8318e-01,
          1.1775e-01,  1.2624e-01]], device='cuda:0') tensor(1.4570, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
23000 特征值优化 tensor(13.7973, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2747, -1.0192,  0.4684,  0.1165, -0.1514, -0.3567, -0.9212,  0.2109,
          2.4000,  0.7940, -1.0492, -1.3915,  0.8514,  0.2523, -0.0579, -1.0112,
          0.0303,  1.3023, -0.6135, -0.1968, -0.0603,  0.5424, -0.2087,  0.1109,
          1.4896,  1.0135, -0.0279, -1.2130,  1.4909,  0.7690, -0.0150,  0.1576,
          0.6602,  0.3130, -0.8367, -0.5545, -2.5216, -0.1800, -1.1322, -1.4089,
         -0.3008,  1.3677,  1.3261,  0.6007, -0.7542, -0.0391,  0.1562,  1.3854,
         -1.4890, -2.7493, -0.9935, -0.6867, -0.0977, -0.0911,  0.2825,  0.2150,
          0.4864,  0.4761, -0.4386, -0.9291,  0.9576,  1.5044,  0.5310, -0.0678,
         -1.3911,  0.5395, -0.0792,  1.4503, -0.0401,  0.2970,  0.7977, -0.7729]],
       device='cuda:0') tensor(8.0919, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
24000 特征值优化 tensor(3.8530, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3730e+00, -1.4726e+00,  1.4407e+00, -8.2796e-02, -1.2555e-01,
         -7.9260e-02,  2.5209e-02,  3.7259e-01,  3.2225e+00,  2.6179e-01,
         -2.2727e-01, -5.1274e-01,  3.9431e-01, -6.2087e-03,  2.4479e-02,
         -2.0968e-01, -1.2486e-01,  2.1811e-01, -1.0829e-01,  2.8296e-03,
         -3.7485e-01,  6.9001e-02, -1.2511e-01,  8.3745e-02,  7.3744e-01,
          3.5387e-01, -4.8369e-02, -3.3587e-01,  1.2092e+00,  1.6052e-01,
         -4.1556e-02, -2.2963e-03,  4.7396e-02,  4.0448e-02, -3.1924e-01,
         -2.9029e-01, -1.5677e+00, -4.8283e-02, -1.1382e+00, -5.7028e-01,
         -2.1832e-02,  5.3250e-01,  2.1559e-01,  5.6196e-01,  1.0949e-01,
         -2.3326e-01, -2.2988e-01,  1.2972e+00, -2.6075e-01, -2.1229e+00,
         -4.4701e-01, -6.1268e-02, -2.6270e-01,  1.6386e-01, -1.3599e-02,
          6.1003e-02,  7.2305e-02,  3.1765e-02, -1.4645e-01, -7.4696e-01,
          1.2880e+00,  6.3494e-01,  8.8051e-02,  1.0782e-01, -5.3901e-01,
          1.0481e-01, -5.4807e-01,  6.2523e-01, -1.8941e-01,  1.5798e-01,
          1.5526e+00,  7.8777e-02]], device='cuda:0') tensor(1.5939, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
25000 特征值优化 tensor(2.2244, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1631e+00, -1.1483e+00,  1.7685e+00, -1.7985e-01,  8.3407e-03,
         -1.4536e-01,  6.7664e-01,  3.2913e-01,  3.3455e+00,  2.8726e-01,
          7.7995e-02, -4.1944e-01,  3.1042e-01,  3.3967e-02, -1.4199e-02,
         -5.2458e-02,  2.4731e-02,  5.3288e-02, -3.5606e-02, -1.4439e-03,
         -2.8824e-01, -4.2435e-02, -3.9849e-02, -9.5754e-04,  2.7985e-01,
          3.0788e-01, -3.7015e-02, -1.4510e-01,  1.0712e+00,  4.4074e-02,
         -1.8942e-02,  5.7519e-04,  7.9418e-03, -1.4926e-02, -1.7342e-01,
         -2.2047e-01, -8.9277e-01, -6.7011e-02, -6.7206e-01, -4.2416e-01,
          2.4950e-02,  4.7684e-01, -1.3653e-01,  4.3980e-01,  4.3665e-01,
          7.5340e-02, -3.1502e-01,  1.1273e+00,  1.5888e-01, -1.9225e+00,
         -3.3652e-01,  4.4243e-02, -2.6734e-01,  1.3220e-01, -1.1438e-01,
          8.3044e-02, -2.6010e-01,  1.6336e-01,  1.7448e-01, -6.7038e-01,
          9.7300e-01,  5.0352e-01, -1.4582e-02,  1.0839e-01, -4.3824e-01,
          2.4595e-01, -4.5700e-01,  5.1678e-01, -2.0117e-01,  2.0457e-01,
          1.1553e+00,  9.4129e-02]], device='cuda:0') tensor(1.5818, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
26000 特征值优化 tensor(2.1198, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0122, -0.8933,  1.9255, -0.2081,  0.1198,  0.1083,  0.7584,  0.3606,
          3.3625,  0.1330,  0.2746, -0.4997,  0.1958, -0.0098, -0.0095, -0.0879,
         -0.0567,  0.0644, -0.0383,  0.0725, -0.2163, -0.0241, -0.1146, -0.0055,
          0.2180,  0.4340, -0.0279, -0.0925,  0.9885,  0.0667, -0.0227, -0.0088,
          0.0272, -0.0179, -0.1496, -0.1780, -0.7881, -0.0969, -0.5702, -0.3836,
          0.0185,  0.4518, -0.0858,  0.2770,  0.2773,  0.0697, -0.2418,  1.0521,
          0.2012, -1.7527, -0.3615,  0.0696, -0.1821,  0.1212, -0.0112,  0.0996,
         -0.2419,  0.1451,  0.6010, -0.4772,  0.6115,  0.5684, -0.1001,  0.0263,
         -0.3916,  0.3504, -0.4598,  0.3668, -0.3593,  0.2656,  0.8109,  0.0984]],
       device='cuda:0') tensor(1.0271, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
27000 特征值优化 tensor(14.5193, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.7480e-01,  2.0563e-01,  5.4486e-01, -6.4118e-01,  7.2984e-02,
          1.7827e-01, -5.1964e-01, -1.7000e-01,  2.6385e-01,  6.9201e-01,
          1.8168e+00,  3.8810e-01, -8.8395e-01, -1.0069e+00, -4.7552e-01,
          1.6120e+00, -1.1465e-01,  1.7237e-01, -1.4540e-01,  2.2942e+00,
          5.5361e-01, -7.8425e-01, -3.2688e-01,  1.1220e+00,  1.9592e-01,
         -1.4023e-01, -4.5804e-01,  3.9126e-01,  4.7385e-01, -8.0858e-01,
          9.9982e-01, -7.2803e-01,  3.1606e-02, -3.5630e-01,  2.6956e-01,
          2.2818e-01,  1.1911e+00,  1.6392e-01, -1.0187e+00, -4.2232e-01,
          1.4863e+00,  1.0425e+00,  1.0214e+00, -1.7485e-01, -6.7585e-01,
         -1.1909e+00,  1.7377e-01, -1.6682e-01,  2.8952e+00,  1.9375e+00,
          2.9920e-01,  9.5349e-01, -6.9870e-01,  1.0229e+00, -5.2562e-02,
          1.0338e-01,  8.4969e-01, -2.2278e-03,  1.0525e+00, -3.8621e-01,
         -1.7995e-01, -8.7862e-01,  6.4764e-01,  3.0345e-02,  1.7156e+00,
          4.6821e-02, -9.2476e-01,  2.0062e+00,  8.4412e-01,  8.5995e-01,
          1.8386e+00,  5.3730e-01]], device='cuda:0') tensor(8.2647, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
28000 特征值优化 tensor(4.0417, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2202e+00,  1.8676e-02,  1.5472e+00,  3.9118e-01,  6.5221e-01,
         -5.9197e-02,  1.5663e-01,  8.8851e-01,  8.9457e-01,  1.1754e+00,
          2.1053e+00,  1.0291e+00, -3.7864e-01, -2.4599e-01, -3.3113e-02,
          5.9483e-01, -1.4205e-01, -4.8492e-02,  1.5790e-01,  1.4270e+00,
          3.5844e-01, -5.0789e-01,  1.0515e-01,  1.8433e-01, -7.7634e-02,
          7.3556e-02, -2.0851e-03,  1.3232e-01,  6.8575e-02, -5.3574e-01,
          1.4375e-01, -2.0126e-01,  9.6331e-02, -8.3626e-02,  2.4469e-01,
          2.2019e-01,  4.9246e-01,  3.1773e-01, -4.0564e-01, -1.7374e-01,
          5.5157e-01,  3.9680e-01,  1.6121e+00, -4.1774e-01, -9.2400e-01,
         -1.1356e+00,  6.7802e-02, -5.0309e-01,  1.7526e+00,  7.9990e-01,
          5.9515e-01,  4.9853e-01, -4.7874e-01,  4.3073e-01, -1.9760e-01,
          7.0237e-02,  3.6812e-01, -9.7679e-02,  3.4076e-01, -2.3119e-01,
          4.0562e-01, -1.9784e-01,  6.8029e-01, -4.3166e-02,  1.5400e+00,
         -7.0362e-01, -1.6903e+00,  1.2171e+00,  9.9469e-03,  5.5109e-01,
          8.1418e-01, -3.2518e-01]], device='cuda:0') tensor(2.4706, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
29000 特征值优化 tensor(2.2223, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4868, -0.1905,  1.9346,  0.7675,  0.3509,  0.0263,  0.1439,  1.0924,
          0.6515,  1.1783,  1.2039,  0.6872, -0.2553, -0.0438, -0.0212,  0.1207,
         -0.1734,  0.0042,  0.0914,  1.0509,  0.2460, -0.4342,  0.0247,  0.0032,
          0.1001,  0.3725, -0.3594,  0.1803, -0.0139, -0.5705,  0.0242, -0.0215,
         -0.0535, -0.0210,  0.0507,  0.0570,  0.4233,  0.1695, -0.3328, -0.1162,
          0.2375,  0.1233,  1.4980, -0.4369, -1.2810, -1.1315,  0.3967, -0.1504,
          1.2623,  0.3710,  0.4896,  0.3852, -0.2709,  0.2243, -0.2791,  0.1104,
          0.0149,  0.0649,  0.0540, -0.0401,  0.2216, -0.0707,  0.2959,  0.1493,
          1.6157, -0.8021, -1.8459,  1.0122, -0.3969,  0.4193,  0.5394, -0.4892]],
       device='cuda:0') tensor(1.3052, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
30000 特征值优化 tensor(17.8221, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4147, -0.3650, -1.0078,  0.3117,  0.9238,  0.8182,  1.0404, -0.3226,
         -0.0592,  0.4989, -1.0289, -0.6871, -1.0984,  1.0538, -1.1198,  1.2236,
          0.4404,  0.3996, -0.2908, -1.1977, -0.6330,  0.2884, -0.6756, -0.5294,
          1.4741,  2.1760,  0.5378,  0.2072,  0.6765,  1.3819, -0.7463, -1.7765,
          1.3143, -0.2120, -0.1511, -0.0796, -0.9755, -0.4642,  1.3313,  1.6832,
          0.3035, -0.0798, -0.3509, -0.2576, -0.3361,  2.6324, -0.6853, -1.4730,
          1.0742,  0.4174,  1.2805,  0.1123,  0.8845, -1.5122, -0.0207,  0.0175,
          0.7136,  1.1882,  0.0717, -0.7207,  1.4665,  0.9591, -0.9451, -0.9427,
         -0.7229,  0.0393, -0.2818,  0.3752,  0.6076,  1.7952, -0.0910,  0.5630]],
       device='cuda:0') tensor(8.5868, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
31000 特征值优化 tensor(3.6789, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1921e+00, -1.0787e+00,  7.3648e-02, -1.9129e-01,  1.8724e+00,
          1.9596e-01,  1.8222e+00, -8.1531e-02,  8.7630e-01,  1.2904e+00,
         -2.4172e-02,  2.1449e-01, -2.2845e-01,  4.9091e-01, -5.3043e-02,
          3.2692e-01, -3.8560e-02,  2.1781e-01,  1.0190e-01, -5.2831e-01,
         -1.9188e-01,  2.7113e-01, -3.1084e-02, -8.7363e-02,  4.8429e-01,
          1.0292e+00, -1.1638e-01,  1.4563e-02, -5.9160e-03,  4.5894e-01,
         -7.0789e-02, -1.0020e+00,  4.1446e-01,  5.8409e-02,  3.3637e-03,
          2.0220e-02, -5.3861e-01, -9.1686e-02,  6.7033e-01,  8.8604e-01,
          3.7651e-01,  5.3300e-01,  3.9225e-01, -3.5745e-01, -4.0284e-01,
          1.8105e+00, -3.5394e-01, -5.7823e-01,  5.3000e-01,  4.7256e-02,
          5.5388e-01,  5.2529e-02,  1.8417e+00, -1.7094e+00, -7.7053e-01,
          6.3265e-01, -7.9612e-02,  2.6437e-01,  1.9721e-02,  4.7726e-04,
          8.4614e-01,  1.5297e-01, -8.5707e-02, -3.3091e-01, -3.2252e-02,
          5.3556e-01,  2.7961e-01,  5.1837e-01,  4.0916e-01,  7.3731e-01,
          4.0779e-01,  7.7304e-01]], device='cuda:0') tensor(2.4602, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
32000 特征值优化 tensor(2.1288, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2514e+00, -9.6964e-01,  1.9861e-01, -6.6876e-01,  2.1144e+00,
          5.1397e-02,  1.8731e+00, -4.0967e-01,  1.2098e+00,  1.4087e+00,
          9.3733e-02,  5.3006e-01, -3.2151e-02,  2.8063e-01, -5.3812e-02,
          1.0218e-01,  1.5057e-01,  1.9559e-01, -1.4887e-01, -4.2466e-01,
         -5.7074e-03,  5.7201e-02,  2.8539e-02, -1.0092e-02,  2.3050e-01,
          4.3288e-01, -1.7162e-01,  9.7093e-02,  4.8419e-02,  1.5801e-01,
         -2.1702e-02, -7.9407e-01,  1.7199e-01, -2.2500e-02,  5.2074e-02,
          1.4579e-02, -3.8232e-01,  2.0615e-01,  5.7899e-01,  6.7558e-01,
         -7.7457e-02,  4.6815e-01,  4.3160e-01, -3.7278e-01, -4.8307e-01,
          1.5267e+00, -4.6353e-01, -5.9545e-01,  4.1034e-01, -2.5928e-01,
          2.0277e-01, -5.2397e-04,  2.0005e+00, -1.5052e+00, -1.0733e+00,
          1.0630e-01, -1.2170e-01,  9.0369e-02,  6.3698e-02,  2.1734e-02,
          6.7199e-01,  1.2634e-01, -1.9028e-02, -3.1698e-01, -3.4551e-02,
          4.0904e-01,  3.4763e-02,  6.0049e-01, -2.5134e-02,  3.9412e-01,
          2.4813e-01,  5.0782e-01]], device='cuda:0') tensor(0.9557, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
33000 特征值优化 tensor(9.2350, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3731,  0.0804,  0.2982, -0.1428,  0.2725, -0.7030,  1.1502,  1.6296,
         -0.0226,  1.1308,  0.5393,  0.3004, -0.1136, -0.0906, -0.2722, -1.2337,
          0.1215,  0.3618,  1.0554, -0.6607, -0.7101,  0.2557,  0.1128, -0.2241,
          1.7097,  0.1815, -0.0242, -0.1055,  0.3165, -0.2748, -0.5113, -0.3301,
         -0.0471, -0.0085, -0.3895,  0.1568,  0.2753,  0.7159, -1.0084, -0.2553,
          0.6431,  0.4086, -0.7170,  0.3610,  0.5614,  0.3455, -0.4862, -1.8265,
         -0.1290,  1.4714, -0.1463,  0.5179,  0.2850,  0.2546,  0.5338, -0.5950,
          0.3719, -0.2196,  0.6940,  0.1336, -1.1340, -0.2906, -0.9787,  0.1396,
          0.1609, -0.1186,  0.0484,  0.2794,  0.1282, -1.2161,  0.5343,  0.0614]],
       device='cuda:0') tensor(5.5602, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
34000 特征值优化 tensor(2.1663, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8632e-01, -4.3124e-04,  8.9758e-01, -6.1939e-01,  1.0050e-01,
         -1.8868e-01,  1.6326e+00,  1.4050e+00,  5.5240e-01,  9.7587e-01,
          1.0407e+00,  1.9002e-01, -1.3631e-01, -7.0005e-02, -1.4899e-01,
         -3.8584e-01,  2.7858e-01, -6.4917e-02,  2.6872e-01, -5.5317e-02,
         -1.6795e-01,  1.7786e-01, -3.6311e-03, -1.2762e-01,  6.6402e-01,
          4.3058e-01, -8.5225e-02,  3.2057e-01,  1.3941e-05, -1.4780e-01,
         -3.0882e-01, -7.2544e-02, -2.7282e-01, -1.7962e-02, -8.6042e-02,
         -1.5934e-02,  1.2294e-01,  1.8607e-01, -5.4558e-01, -1.5371e-01,
          3.5610e-01, -8.8792e-02, -1.8731e-01,  1.6062e-01,  1.6130e-01,
          4.7969e-02, -2.6827e-02, -9.3903e-01, -3.0761e-01,  7.6547e-01,
          4.4834e-01,  6.7860e-02,  3.8922e-01,  4.0503e-01, -6.9882e-02,
         -3.1655e-01,  1.7013e-01, -3.8832e-02,  1.6285e-01,  7.7508e-02,
         -7.3246e-01,  2.1962e-01, -6.5717e-01,  1.9627e-01,  4.6031e-01,
          2.6081e-01, -1.5639e-01,  1.8241e-01,  5.9874e-01, -6.6933e-01,
         -2.2803e-01,  2.0680e-01]], device='cuda:0') tensor(1.5893, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
35000 特征值优化 tensor(8.6978, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3439,  1.4887,  1.4011,  0.4574,  0.2684,  0.7983,  1.7760,  1.0787,
         -0.0022, -0.8773,  1.0010,  0.7439,  1.3525,  0.2403, -0.4292,  0.2672,
         -0.4481,  0.3061,  0.8635, -0.4094,  0.3633, -0.2521,  0.0304,  0.0558,
         -0.5168,  0.7740,  0.0558,  0.1381,  0.3816, -1.2109,  0.1472, -0.0949,
         -1.1483, -0.8828,  0.2368, -0.3571, -0.2764, -0.7356,  0.2107, -0.0541,
         -0.1810,  0.1365, -0.2107,  0.5394,  1.4976, -0.9773,  0.1888, -0.1467,
          0.6257, -0.5960,  0.7730,  0.4480,  0.3387, -0.7858,  0.5509, -0.0122,
          0.7672, -0.5027,  0.0489, -0.5851,  0.1574,  0.5144,  0.1883,  0.1669,
         -0.5641, -0.2848,  0.7230, -0.8411, -0.2103,  0.4525, -0.4959,  0.5907]],
       device='cuda:0') tensor(5.0126, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
36000 特征值优化 tensor(2.2701, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.2702e-01,  1.5368e+00,  1.6519e+00,  7.2263e-01,  5.9578e-01,
          6.5986e-01,  1.1982e+00,  1.3604e+00,  2.7693e-01, -4.0567e-01,
          1.4550e+00,  2.9316e-01,  5.5652e-01, -4.3965e-02,  1.9815e-02,
          6.5350e-02, -2.1524e-02,  4.4172e-02,  1.8912e-01, -2.9659e-02,
          4.9019e-01, -4.1239e-01, -4.5735e-02,  1.4766e-01,  4.2888e-02,
          1.3451e-01,  1.0121e-01, -9.1067e-02, -7.5072e-03, -8.3666e-01,
         -1.4635e-03,  2.5326e-01, -5.3235e-01, -4.9132e-01,  2.2864e-01,
         -1.1143e-01, -3.1233e-01, -2.8369e-01, -1.8441e-03, -2.3775e-02,
         -2.9635e-01,  9.2623e-03,  1.9401e-01,  1.1934e-01,  8.1503e-01,
         -3.8357e-01,  2.8451e-01, -5.6119e-02,  1.2344e+00, -1.5865e-01,
          8.9075e-01,  3.7951e-01,  6.5422e-01, -4.9071e-01,  4.6596e-01,
          6.0572e-01,  6.0848e-01, -6.7750e-02, -1.1177e-02,  1.5412e-03,
         -2.2406e-01,  4.2314e-01,  2.1664e-01,  1.4891e-01, -5.4667e-02,
         -4.5587e-02,  4.5917e-01, -2.0549e-01,  3.9282e-01,  7.6285e-02,
         -1.6700e-01,  1.3063e-01]], device='cuda:0') tensor(0.9436, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
37000 特征值优化 tensor(2.0898, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5153,  1.5494,  1.6303,  0.7690,  0.4702,  0.4082,  1.2849,  1.3570,
          0.0430, -0.0844,  1.5771,  0.1346,  0.4741,  0.0018, -0.0343,  0.0464,
         -0.1379,  0.0398,  0.0947, -0.0171,  0.4488, -0.4203, -0.2445,  0.3044,
          0.0525,  0.0729,  0.0181,  0.0025, -0.0307, -0.7825, -0.0137,  0.2901,
         -0.4440, -0.3386,  0.0842, -0.0376, -0.1889, -0.1693, -0.0106, -0.0090,
         -0.1924,  0.0020,  0.1175,  0.3349,  0.4799, -0.3776,  0.2530, -0.1178,
          1.2629, -0.0716,  0.8387,  0.4171,  0.3644, -0.2830,  0.3906,  0.4850,
         -0.0027,  0.0168, -0.0221, -0.0334, -0.2724,  0.2314,  0.2154, -0.0121,
         -0.0237,  0.0439,  0.1806, -0.1060,  0.3572, -0.0156, -0.0519,  0.0706]],
       device='cuda:0') tensor(1.4173, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
38000 特征值优化 tensor(11.3589, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2336,  2.2639,  1.9292, -0.7777,  0.8677,  0.8559,  0.7685,  0.1551,
          1.7855,  0.6123, -0.1043,  0.1943, -0.4831, -0.1081, -0.3410,  0.0911,
         -0.4994, -0.2830, -0.4306, -0.1151,  0.2629, -2.2610,  0.0350,  1.3912,
          1.7028, -0.5220,  1.5126, -0.4115, -0.0522, -0.4375,  0.0179, -1.0967,
          0.2264,  0.6327, -0.3198, -0.4076,  0.7488, -0.3597, -1.0421,  0.5560,
          0.6760,  0.8068, -1.1666, -0.5673, -0.4651, -0.1692,  1.1935,  0.6822,
          1.3223,  0.0261,  1.5233, -1.4254,  0.6704, -0.4660,  0.2169,  0.7763,
         -0.0397, -1.0633,  0.0801, -0.4681, -0.7185, -0.4027, -1.2801, -0.4756,
          1.2619,  0.2262, -1.0852,  0.6363,  1.0601,  0.6296,  0.1802,  0.2926]],
       device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
39000 特征值优化 tensor(2.7185, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2866,  1.2761,  2.8660, -1.1570, -0.2290,  0.9560,  1.1696, -0.1079,
          2.5116,  0.0932,  0.1834,  0.8079, -0.0120,  0.0199,  0.0150,  0.2928,
         -0.2398,  0.0812,  0.0810, -0.0029,  0.1401, -1.3550, -0.3209,  0.4646,
          0.6185, -0.0679,  0.5566,  0.0179, -0.0784,  0.1557, -0.0146, -0.2232,
         -0.0692,  0.2393, -0.4254, -0.3068,  0.4237, -0.1715, -0.7458,  0.1827,
          0.1018,  0.2914, -0.4335,  0.1180,  0.1614, -0.5622,  0.2667,  1.3678,
          1.5624,  0.2351,  0.9391, -0.7474, -0.0166,  0.0237,  0.2833,  0.1261,
         -0.1339, -0.5467,  0.3750, -0.2039, -0.4109, -0.0932, -0.6894,  0.0419,
          0.9041,  0.3448, -0.8156,  0.3594, -0.0479,  0.1769,  0.2359,  0.3005]],
       device='cuda:0') tensor(1.1609, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
40000 特征值优化 tensor(2.1427, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3545,  0.7547,  3.0229, -1.0744,  0.1528,  0.7048,  0.8571, -0.0591,
          2.6902, -0.3474,  0.1286,  0.8053, -0.0533, -0.0289, -0.0153,  0.2396,
         -0.2051,  0.0540,  0.0489,  0.0060,  0.1001, -1.1993,  0.0824,  0.1565,
          0.2105,  0.0500, -0.0058,  0.1743, -0.1241,  0.1510, -0.0227, -0.0207,
          0.0216,  0.2583, -0.3305, -0.2672,  0.3747,  0.1094, -0.6039,  0.0515,
          0.0247,  0.1036, -0.3006,  0.0858,  0.0671, -0.2943,  0.1648,  1.3294,
          1.4821,  0.0148,  0.8744, -0.7398, -0.2474,  0.1687,  0.3125,  0.1498,
         -0.3365, -0.2883,  0.3050, -0.2444, -0.4870,  0.1343, -0.3824,  0.0749,
          0.6080,  0.2834, -0.8207,  0.3002, -0.1457,  0.0372,  0.1128,  0.1019]],
       device='cuda:0') tensor(1.1259, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
41000 特征值优化 tensor(12.2131, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3656, -0.5234, -0.5147,  1.6061, -0.6252,  0.1254,  0.3117, -1.5387,
         -0.6663, -0.9061, -0.8575,  0.5569, -1.0735, -1.2619, -0.9789,  1.8723,
         -0.1849,  0.0492, -0.4840, -0.0438, -0.2750, -0.1952,  0.3572, -1.5111,
          2.1528,  0.3711,  0.2274, -0.2025,  0.5436,  0.2118,  0.9857, -0.9716,
          0.1416,  0.1391,  0.0659,  0.0136, -0.7277,  0.5838,  0.7133, -0.1300,
         -0.0672,  0.0281, -0.6664, -0.6064,  1.6275,  0.2687,  1.2016,  1.3945,
         -1.0116, -0.0132,  0.1687, -0.2051,  0.8618,  2.0693,  0.8455, -0.7132,
         -0.7602, -0.3912,  0.3375, -1.1673,  0.3000, -1.1034,  1.1362, -2.0577,
         -0.1009,  0.0766, -0.3096, -0.1105,  0.1650, -0.4373, -0.1283,  1.1982]],
       device='cuda:0') tensor(5.7435, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
42000 特征值优化 tensor(3.1532, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1356,  0.3499,  0.5665,  0.8742,  0.4031,  0.1772,  1.1036, -1.2997,
          0.1716, -0.6878, -0.1542,  0.6429, -0.4721, -0.3627, -0.3528,  0.8853,
          0.0707,  0.0428, -0.0857,  0.0280, -0.3364,  0.0347, -0.1435, -0.4626,
          1.0593, -0.2979, -0.1288, -0.1249,  0.2524,  0.0571,  0.5749, -0.2139,
          0.1404, -0.0241, -0.0045, -0.0272, -0.2186,  0.2629,  0.1455,  0.0279,
         -0.1131,  0.1371, -0.0866, -0.3134,  1.1527,  0.2702,  0.6444,  0.8139,
         -0.8978, -0.0620,  0.6147, -0.4168,  0.2610,  1.0263,  0.5060,  0.2074,
         -0.3080,  0.1165, -0.1845, -0.3129,  1.0607, -0.8247,  1.5693, -1.2618,
         -0.4476,  0.1134,  0.0581, -0.1031,  0.8732, -0.4141, -0.6251,  0.4504]],
       device='cuda:0') tensor(2.3508, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
43000 特征值优化 tensor(2.0955, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2589,  0.5755,  0.9890,  0.9335,  0.7074,  0.0637,  1.2508, -0.8746,
          0.1566, -0.4667, -0.2747,  0.0639, -0.4064, -0.1318, -0.1416,  0.4805,
          0.1724,  0.0393, -0.0924, -0.0637, -0.2703,  0.0115, -0.0476, -0.0270,
          0.4897, -0.3889, -0.0632, -0.0497, -0.0564,  0.0297,  0.4481, -0.1004,
          0.0851, -0.0233,  0.0029,  0.0087, -0.1767,  0.1171,  0.1847,  0.0258,
          0.0626,  0.0506, -0.1591, -0.0398,  0.7198,  0.2698,  0.4995,  0.6430,
         -0.5484, -0.3964,  0.7112, -0.5341,  0.2335,  0.6968,  0.6595,  0.3145,
         -0.2043,  0.1320, -0.3153, -0.1156,  1.1388, -0.9375,  1.6434, -1.1026,
         -0.6160,  0.1538, -0.0745, -0.0792,  0.8108, -0.5298, -0.2687,  0.2210]],
       device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
44000 特征值优化 tensor(9.7952, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1699,  1.0655,  1.0620, -0.3115,  0.4007,  0.7947, -0.8867, -0.1167,
          2.0429,  1.3225, -0.8788,  1.0875, -1.0386,  1.3971, -0.2447,  0.2220,
          0.2057, -1.3464, -1.9664,  0.2752, -0.5939,  0.3232, -0.2577, -0.8765,
         -0.1034,  0.3540, -0.4128, -0.1709, -0.6815,  0.1107, -0.6626,  0.5806,
          0.2753,  0.3822, -0.7086, -0.1396, -0.5473, -0.0260, -0.2360,  0.2539,
          0.1148, -0.6407,  1.1731,  0.1896, -0.8149, -1.0648,  1.2107,  0.2273,
          0.8037, -1.0859, -0.0336, -0.8940,  0.5078,  0.9317, -1.4774,  0.8447,
         -0.2643, -0.7027,  1.3183,  0.1104, -0.4335, -0.1924,  0.4125, -0.5007,
         -0.1586, -0.9847, -1.2679,  0.4056, -0.7108,  1.3962,  0.9108, -0.1332]],
       device='cuda:0') tensor(5.4782, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
45000 特征值优化 tensor(2.7487, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4062,  1.7693,  0.8987, -0.1134,  0.5539,  0.4012, -0.0451, -0.4069,
          2.0111,  0.6681, -0.0145,  0.4946, -0.5018,  0.5221, -0.0687,  0.0983,
         -0.0438, -0.4734, -0.9072, -0.0641, -0.3751,  0.1795, -0.1781, -0.1946,
         -0.2969, -0.0726, -0.0232, -0.1743, -0.0653, -0.0231, -0.3965,  0.0775,
         -0.0085,  0.3333, -0.3486, -0.1339, -0.0023, -0.0525,  0.0030, -0.0210,
          0.1932, -0.1229,  1.0126,  0.2930, -0.6160, -0.9026,  0.7950, -0.2126,
          0.0036, -0.1237,  0.1964, -0.5008,  0.3495,  0.6511, -0.6836,  0.4789,
         -0.2605,  0.1163,  0.9182, -0.6248, -0.1066,  0.1292,  0.0610, -0.0762,
          0.0965, -0.6115, -1.1967,  0.4998, -0.0022,  0.4883,  0.2196,  0.0078]],
       device='cuda:0') tensor(1.2340, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
46000 特征值优化 tensor(2.1642, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7831,  1.4587,  0.4678, -0.1091,  0.1144, -0.1929,  0.0632, -0.3308,
          2.0681,  0.6130,  0.1529,  0.0774, -0.4192,  0.0745, -0.0290,  0.0769,
         -0.0970, -0.2368, -0.4233, -0.2359, -0.2809,  0.1098, -0.1692, -0.1825,
         -0.2096, -0.2775,  0.0472, -0.0673, -0.0031,  0.0470, -0.2271,  0.0268,
         -0.0117,  0.2282, -0.1654, -0.0383, -0.0067, -0.0395, -0.0464, -0.0323,
          0.0987, -0.0245,  0.6288,  0.3228, -0.6027, -0.7194,  0.6531, -0.2102,
         -0.0885, -0.0563,  0.1104, -0.3029,  0.1298,  0.5514, -0.4508,  0.4590,
         -0.4134,  0.1068,  0.6601, -0.2322, -0.1567,  0.1228,  0.1081, -0.0676,
          0.2051, -0.5273, -0.9659,  0.3938, -0.1619,  0.3331,  0.0721, -0.0260]],
       device='cuda:0') tensor(0.9255, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
47000 特征值优化 tensor(2.0854, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.8385e-01,  1.4048e+00,  3.7567e-01, -1.1580e-01, -1.2399e-01,
         -4.0791e-01, -2.8191e-03, -2.6345e-01,  2.1154e+00,  5.8903e-01,
          1.8581e-01,  9.3953e-02, -3.8362e-01,  1.5062e-02, -9.8247e-03,
          6.6309e-02, -5.9979e-02, -2.2442e-01, -2.7293e-01, -3.2725e-01,
         -2.4265e-01,  1.0237e-01, -1.4166e-01, -1.4057e-01, -2.3106e-01,
         -2.4376e-01,  5.0312e-02, -8.1884e-02,  2.9129e-02,  5.5682e-02,
         -2.0205e-01,  2.5530e-02, -3.2349e-02,  2.0218e-01, -9.8757e-02,
         -2.0423e-03, -1.4869e-02, -2.7895e-02, -1.2865e-01, -3.4488e-02,
          7.4405e-02, -2.5967e-02,  3.5735e-01,  2.8558e-01, -4.2513e-01,
         -1.1127e-01,  2.8267e-01, -2.1777e-01, -8.3835e-02, -5.8044e-02,
          1.1090e-01, -2.8463e-01,  1.8069e-01,  5.2966e-01, -1.7038e-01,
          2.2160e-01, -4.0590e-01,  8.6997e-02,  7.1384e-01, -1.1441e-01,
         -1.2908e-01,  1.0625e-01,  1.2090e-01, -6.1535e-02,  2.5806e-01,
         -4.2473e-01, -9.2759e-01,  4.0673e-01, -1.0075e-01,  2.3421e-01,
          4.9655e-02, -2.1187e-02]], device='cuda:0') tensor(0.9113, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
48000 特征值优化 tensor(5.5970, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2773,  0.3785,  1.1649,  0.4248,  1.3682,  0.1815,  0.3494, -1.1157,
         -0.1359, -0.2919, -0.6882,  0.9993,  0.1839,  0.3313,  0.2074, -0.3917,
          0.2721,  0.1539, -0.0595, -0.5920, -0.9224, -0.2123,  0.0025,  0.2099,
         -0.2290,  0.8116,  0.4071,  0.1734,  0.3487,  0.1813, -0.0564, -0.1421,
         -0.1823,  0.1307, -0.0187,  0.0501,  0.8919, -0.3010, -0.6495,  0.5933,
          0.0902, -0.4538,  1.0954, -0.3220, -0.1746, -1.1319,  0.0595,  0.0268,
          0.6269, -0.3624,  0.3894, -1.2832, -1.7289,  0.3582,  0.1558, -2.2687,
         -0.2502,  0.2551, -0.0426,  0.2435,  0.7472,  0.0158,  0.2181, -0.0688,
          0.3128,  0.1814, -0.5791, -0.1867,  0.9528, -0.3799,  0.1979,  0.0497]],
       device='cuda:0') tensor(2.6852, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
49000 特征值优化 tensor(2.3662, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.0199e-01, -1.4729e-01,  1.5010e+00,  2.5594e-01,  1.7213e+00,
          2.8851e-01,  5.0807e-01, -1.0627e+00,  3.1800e-01, -3.7046e-01,
          2.5038e-01,  3.8526e-01,  2.6948e-01,  3.6258e-01, -3.0828e-02,
         -1.2656e-01,  2.9881e-03, -6.8021e-02, -4.3659e-02, -3.8849e-01,
         -6.0148e-01, -2.1609e-01, -5.0772e-02,  1.5314e-01, -1.0998e-01,
          3.5077e-01,  1.9888e-01,  8.0418e-02,  1.5687e-01,  1.9559e-01,
         -1.0154e-02, -1.1256e-01, -8.5915e-02,  2.6958e-02, -3.4332e-02,
         -3.1099e-02,  5.5205e-01, -1.7957e-01, -6.9266e-02,  4.7585e-02,
          1.3680e-01, -6.9358e-02,  1.0849e+00, -1.6878e-01, -4.5552e-02,
         -1.1645e+00,  1.7744e-01,  4.7122e-01,  4.5770e-01, -5.9764e-01,
          3.9510e-01, -8.1300e-01, -1.1485e+00,  2.0961e-01,  5.2330e-01,
         -1.2700e+00, -1.3578e-01,  1.3349e-01, -3.5568e-04, -6.4484e-02,
          4.8930e-02,  1.7078e-01, -4.0119e-01, -6.0166e-02, -2.8470e-01,
          2.0384e-01,  1.3437e-01, -7.5137e-02,  8.7372e-01, -2.2142e-01,
         -3.4225e-01,  2.1039e-01]], device='cuda:0') tensor(1.0922, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
50000 特征值优化 tensor(2.1317, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4818, -0.5049,  1.4654,  0.3067,  1.6223,  0.5240,  0.5689, -0.8382,
          0.3655, -0.1591,  0.6253,  0.4170,  0.3489,  0.3175, -0.1838, -0.1161,
         -0.1108, -0.0408,  0.0336, -0.1899, -0.4761, -0.2066,  0.0026,  0.0641,
         -0.1448,  0.2262,  0.1563,  0.0861,  0.1857,  0.1491, -0.0396, -0.1171,
         -0.0963,  0.0266,  0.0120, -0.0263,  0.4763, -0.1544, -0.0304,  0.0070,
          0.1030, -0.0278,  1.0292, -0.1677, -0.1163, -1.2204,  0.1382,  0.4701,
          0.4440, -0.6384,  0.3512, -0.7544, -0.9040,  0.1872,  0.4847, -0.8304,
         -0.1672,  0.1595, -0.0182,  0.0278, -0.1115,  0.1111, -0.3107, -0.0232,
         -0.3188,  0.1907,  0.1658, -0.0647,  0.6177, -0.1344, -0.1826,  0.1078]],
       device='cuda:0') tensor(1.1761, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
51000 特征值优化 tensor(5.2456, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.7327e-01, -7.8109e-01,  1.7404e-01,  1.6987e-01,  1.0061e+00,
          1.5463e+00,  7.2918e-01,  6.5307e-01,  7.9951e-01, -2.1273e-01,
          2.7604e-01,  8.0093e-01, -7.2344e-02, -1.2389e+00, -6.6133e-01,
         -6.6166e-01,  1.1902e-01, -3.8512e-01, -2.0926e-01,  1.0103e-02,
          9.4039e-03, -5.8065e-01,  2.9151e-01,  5.9309e-01,  1.2879e+00,
         -2.5515e-01, -4.6027e-02, -4.4924e-01, -1.9987e-01,  6.3077e-01,
         -1.1395e-01,  7.0640e-01, -8.2581e-01,  1.1234e+00,  1.5319e-01,
         -4.9332e-02,  3.8306e-01, -1.3639e-04,  5.3449e-02, -1.2101e-01,
         -1.3677e+00,  2.2339e-01, -5.2409e-01,  3.9875e-01, -2.1318e-02,
          8.2832e-01, -3.1627e-01,  3.0288e-01, -1.7525e-01,  2.6529e-01,
          2.1966e-01, -4.9363e-01,  1.6178e+00, -9.7211e-01, -5.6311e-01,
         -7.8831e-01,  1.4510e-02,  6.5513e-01, -1.8822e-01, -2.5805e-01,
          4.2042e-01, -8.1283e-01,  7.9683e-01, -4.8811e-01,  2.6150e-01,
         -3.0566e-01,  8.9110e-01, -7.4303e-01,  7.7555e-01,  3.8142e-01,
          5.6848e-01, -1.4255e-01]], device='cuda:0') tensor(3.1907, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
52000 特征值优化 tensor(2.1703, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3217,  0.0043,  0.3042, -0.2834,  1.5626,  1.8987,  0.5709,  0.6236,
          1.0734, -0.5442,  0.8244,  0.3484, -0.0062, -0.4043, -0.1233, -0.0687,
          0.0881, -0.0641, -0.0558,  0.0410, -0.0157, -0.2356,  0.0253,  0.0931,
          0.4751,  0.3011,  0.1315, -0.1168,  0.0137,  0.2154,  0.0667,  0.6962,
         -0.5561,  0.9017,  0.0798, -0.0254,  0.0308, -0.1461,  0.0221, -0.0531,
         -0.8008,  0.0687, -0.3535,  0.2531,  0.1683,  0.0875, -0.1108,  0.0462,
          0.1657,  0.3943, -0.0503, -0.2378,  1.5534, -0.9850, -0.6161, -1.0447,
         -0.2132,  0.6149, -0.1451, -0.8204,  0.3682, -0.3964,  0.6978, -0.2829,
         -0.3639,  0.0804,  0.4437, -0.2387,  1.0761,  0.3525, -0.0185,  0.0852]],
       device='cuda:0') tensor(0.9856, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
53000 特征值优化 tensor(17.1457, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0485, -1.6025,  2.0472,  1.0698,  1.3604,  0.6413,  1.3209,  0.5443,
         -0.1154,  1.2555,  0.3269, -0.2138,  0.5202,  0.0197, -0.0804,  0.4324,
         -0.7900, -0.9441, -0.1238, -0.4774, -2.0880, -0.5664, -0.2096,  0.7999,
         -1.3371, -1.2409, -1.8194, -0.5334, -0.2875, -0.1605,  0.1048,  2.0408,
          0.8140, -1.4810,  0.4153, -0.6512, -0.9662, -1.3016,  0.6918, -0.9479,
          0.7205, -0.6465,  1.2369,  0.0747, -0.9398, -1.2106, -0.2219,  0.5457,
         -0.3050,  0.8570,  0.5292,  0.1499,  0.5844, -0.5657, -0.9841, -0.3754,
          0.4815,  0.3661,  0.4973,  1.0135,  0.9378,  1.6402, -0.3840, -1.4190,
         -0.1791,  0.3735, -1.6516,  0.1120,  0.3629, -1.4835, -0.4306,  0.4510]],
       device='cuda:0') tensor(8.5579, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
54000 特征值优化 tensor(3.7346, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0749, -3.0768,  1.3224,  0.9563,  2.1857,  1.2127,  2.2985, -0.2907,
          0.3830,  0.5748,  0.9204,  0.3994,  0.9641,  0.0435, -0.0802, -0.0066,
         -0.1857, -0.1546,  0.1108,  0.0259, -1.2182, -0.3074,  0.0316,  0.0352,
         -0.1909, -0.1373, -0.6733, -0.2780,  0.0308, -0.3531, -0.0141,  1.1318,
          0.0839, -0.4933, -0.0120,  0.0061, -0.1463, -0.3900,  0.3196, -0.2319,
          0.3523,  0.0398,  1.8155,  0.6570, -0.3428, -1.1162, -0.3200, -0.1013,
          0.0386,  0.7725, -0.0088,  0.3188,  1.2954, -1.4172, -1.2249,  0.4930,
         -0.0813,  0.5157, -0.0133,  0.2864,  1.5861,  0.6049, -0.1147, -0.5707,
         -0.1101,  0.6299, -0.9588, -0.0387,  0.9300, -1.3516, -0.4711,  0.3075]],
       device='cuda:0') tensor(1.6531, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
55000 特征值优化 tensor(2.2324, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6715e+00, -2.3788e+00,  8.6017e-01,  5.9979e-01,  2.3419e+00,
          3.7151e-01,  2.5720e+00, -4.8060e-01, -3.5305e-03,  7.6487e-01,
          1.9525e-01,  5.3980e-01,  8.4725e-01, -1.0401e-02,  1.2358e-02,
         -7.9347e-02, -6.9102e-02, -1.8890e-01,  2.1520e-01, -3.9660e-03,
         -1.0051e+00, -1.2211e-01, -1.2396e-02,  1.0617e-02, -1.0805e-01,
          9.3414e-02, -3.3346e-01, -3.0318e-01,  2.1130e-02, -1.4921e-01,
         -9.2060e-03,  9.7204e-01,  2.1322e-03, -8.5759e-02,  9.9705e-03,
         -3.0941e-02,  2.0234e-01, -1.7756e-01, -2.0667e-02, -1.1280e-02,
          1.6724e-01,  6.6595e-02,  1.6462e+00,  4.7797e-01, -3.5907e-01,
         -1.5675e+00, -1.6238e-01, -3.4881e-01,  3.3797e-01,  3.3292e-01,
         -2.0821e-01,  1.8840e-01,  1.3873e+00, -1.2911e+00, -1.8572e+00,
          5.9429e-01, -3.2388e-01,  2.4586e-01,  4.0997e-02, -2.0894e-02,
          8.5922e-01,  2.2039e-01,  5.6469e-02, -3.4742e-01, -3.9531e-01,
          2.6117e-01, -4.8868e-01,  1.4869e-02,  3.5846e-01, -7.5287e-01,
         -4.1637e-01,  2.7616e-01]], device='cuda:0') tensor(0.9820, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
56000 特征值优化 tensor(2.1302, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8136e+00, -2.1681e+00,  9.3753e-01,  5.6993e-01,  2.3335e+00,
          1.7377e-01,  2.6025e+00, -4.3187e-01, -1.6115e-02,  8.3805e-01,
         -3.2531e-01,  4.4459e-01,  8.1579e-01, -7.5373e-02,  4.4609e-02,
         -9.0488e-02, -1.0727e-01, -1.9774e-01,  1.9640e-01, -1.7485e-02,
         -9.6191e-01, -1.4447e-01, -1.2223e-02, -1.9145e-03, -7.8997e-02,
          8.7225e-02, -2.7326e-01, -1.9792e-01,  1.5328e-02, -1.6990e-01,
         -1.1600e-02,  9.3015e-01,  4.1468e-02, -2.1709e-02,  1.9534e-02,
         -5.8564e-02,  2.1839e-01, -2.1082e-01, -2.7003e-02,  2.3425e-03,
          1.3971e-01,  5.9268e-02,  1.5631e+00,  4.3913e-01, -3.3294e-01,
         -1.6277e+00, -1.2238e-01, -3.2035e-01,  3.2372e-01,  3.6282e-01,
         -1.0136e-01,  1.5113e-01,  1.4316e+00, -1.2504e+00, -1.6060e+00,
          5.9426e-01, -4.6660e-02,  4.9337e-02, -2.0407e-02, -3.4121e-02,
          7.2902e-01,  1.1186e-01,  2.3872e-01, -2.5933e-01, -2.1486e-01,
          2.0125e-01, -4.7262e-01,  4.8306e-02, -2.6550e-01, -2.7754e-01,
         -3.1131e-01,  3.3623e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
57000 特征值优化 tensor(7.2021, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.9502e-02,  1.6239e+00,  1.9605e+00, -8.7370e-03,  8.2127e-01,
          6.7620e-01,  8.8238e-02,  4.3170e-01,  4.0407e-01, -5.6541e-01,
          4.4316e-01,  1.6085e+00, -9.6606e-02,  5.2626e-01, -1.4748e+00,
          6.7194e-01,  1.9821e-01,  1.9817e-01,  3.9904e-01,  1.9234e-02,
          6.1295e-02, -2.9383e-01,  2.2720e-03, -1.7859e-01, -9.3843e-02,
          4.8388e-02,  2.0409e-01,  5.5504e-02,  3.2143e-06,  1.0698e+00,
          3.7620e-01, -5.0611e-01, -2.4198e-01,  2.9359e-02, -1.3193e-02,
          1.0001e+00,  2.1631e+00, -2.6353e-01, -8.0549e-02,  1.7278e-01,
          1.2560e-01, -5.0022e-01,  7.1649e-02, -1.1706e+00,  2.6371e-01,
         -7.1902e-01,  1.2257e-01,  4.1900e-01,  1.6252e+00,  1.2808e-01,
         -4.6823e-01, -1.1631e-02,  2.6016e-03, -5.3522e-01,  4.6174e-02,
         -2.4048e-02,  1.5032e-01, -3.3553e-01,  1.4778e-01, -5.1586e-01,
          1.7932e+00, -3.1545e-01,  2.3052e-01, -1.3208e+00,  3.4936e-01,
          2.2326e-01,  1.0362e-01, -2.6888e-01,  8.4733e-01, -6.5377e-01,
          1.5588e+00, -4.0813e-01]], device='cuda:0') tensor(3.4211, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
58000 特征值优化 tensor(2.4686, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2716,  0.8879,  1.9644, -0.2617,  1.2441,  0.2554,  0.9988, -0.1713,
          0.0462, -0.3757,  0.6706,  1.8230, -0.0686, -0.1920, -0.6878, -0.0513,
         -0.0403,  0.1351,  0.1524, -0.0110,  0.0744, -0.4022, -0.0152, -0.0457,
         -0.0216,  0.0586,  0.2733,  0.0747, -0.0062,  0.8024,  0.2262, -0.1796,
         -0.0225, -0.0174,  0.0453,  0.5029,  1.2538, -0.1065, -0.0492,  0.1269,
         -0.0088, -0.3811, -0.3597, -0.4564,  0.6566, -0.3630,  0.1965,  0.0241,
          1.4566,  0.2697, -0.4027, -0.2353, -0.6591, -0.5044,  0.3670, -0.0839,
          0.2019, -0.1522,  0.0243, -0.5145,  2.2217,  0.0956,  1.1402, -0.7898,
         -0.1954,  0.1595,  0.0740, -0.1232,  0.4788, -0.4041,  1.6753, -0.4179]],
       device='cuda:0') tensor(1.1264, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
59000 特征值优化 tensor(2.1082, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3016,  0.5645,  1.8484, -0.5762,  1.2749,  0.2800,  1.1917, -0.2539,
          0.3302, -0.5330,  0.2950,  1.9775, -0.0742, -0.2215, -0.4672, -0.0387,
          0.0109, -0.0115,  0.0120,  0.0403,  0.0700, -0.5071, -0.0073, -0.0309,
         -0.0327,  0.0311,  0.3119,  0.2118, -0.0124,  0.6813,  0.2121, -0.1820,
          0.0421, -0.0223,  0.0268,  0.2807,  1.0627,  0.0150, -0.0454,  0.0717,
         -0.0086, -0.2488, -0.2980, -0.1485,  0.3943, -0.2650,  0.2069,  0.0366,
          0.9828,  0.4576, -0.3895, -0.3781, -0.9342, -0.2211,  0.8516,  0.1013,
         -0.0575,  0.0493,  0.0408, -0.0527,  2.2349, -0.0652,  1.2147, -0.6970,
         -0.2593,  0.1730,  0.2366, -0.1783,  0.3751, -0.1962,  1.5405, -0.5166]],
       device='cuda:0') tensor(1.0816, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
60000 特征值优化 tensor(13.2842, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3221,  1.0376,  1.0140, -2.6910,  0.4492, -0.1566, -2.4056, -0.2550,
         -0.2700, -1.3915,  0.0968,  0.6965,  1.4510,  1.6797, -0.2220,  0.0754,
          0.0625,  0.3428,  0.4317, -0.7756,  0.2479, -0.8229, -0.6391,  0.6558,
          1.3053,  0.1334,  0.1738, -0.7098,  0.7466,  1.3038, -0.1835,  0.0972,
          1.8788,  0.1301, -0.7065, -1.0525, -0.2105,  0.1939, -0.1245, -0.6384,
          0.0333, -0.2305, -0.5365,  0.6367,  2.1059,  0.0889,  1.3832, -0.2176,
         -0.0893,  0.0185, -0.2715, -1.4101, -0.9726,  1.5127, -0.2175,  0.4716,
          0.1380, -0.4618,  0.1428, -0.0124,  0.4175, -0.0343,  0.2939,  0.3855,
         -0.6990,  0.0756,  0.4583,  0.5308, -0.1486, -1.3763,  1.2213, -0.7115]],
       device='cuda:0') tensor(7.8892, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
61000 特征值优化 tensor(3.1419, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6475,  1.9843,  1.6790, -2.6334,  1.4565,  0.1983, -1.4849, -0.2327,
          0.3457, -1.1322,  0.9666,  1.2948,  0.6460,  0.5512,  0.1377,  0.0159,
          0.0396,  0.1247,  0.1172, -0.0430,  0.3933, -0.7009,  0.0201, -0.0654,
          0.4265,  0.1892,  0.1685, -0.3654,  0.1353,  0.7616,  0.0996, -0.0338,
          0.8790, -0.0217, -0.2410, -0.6613, -0.0360,  0.0367,  0.0690, -0.1340,
         -0.1293, -0.0400, -0.2504,  0.1133,  1.3848, -0.2291,  0.8417,  0.0565,
          0.5107,  0.5811,  0.1192, -0.6920, -0.1060,  0.4801,  0.0036,  0.2313,
          0.5045, -0.4342,  0.0228, -0.2106,  0.5410, -0.0307,  0.0540,  0.0890,
         -0.2938,  0.0974,  0.0160,  0.1509,  0.6943, -1.0317,  1.3991, -0.6807]],
       device='cuda:0') tensor(1.0446, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
62000 特征值优化 tensor(2.1457, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9221,  1.7564,  1.8565, -2.0057,  1.6370,  0.2017, -1.3178, -0.1105,
          0.3889, -1.0083,  1.1018,  1.5285,  0.5479,  0.3236,  0.2384, -0.1691,
          0.0338,  0.2672,  0.1617, -0.0168,  0.3080, -0.6252,  0.1364, -0.1374,
          0.1410,  0.1163,  0.2175, -0.1808,  0.0176,  0.6014,  0.1427,  0.0165,
          0.6487, -0.0183, -0.2139, -0.4996, -0.0246,  0.0188, -0.0217,  0.0136,
         -0.0933, -0.0606, -0.2342,  0.0681,  1.0973,  0.1193,  0.5373, -0.3041,
          0.6320,  0.6481,  0.1179, -0.5211,  0.2462,  0.2387,  0.1385,  0.7221,
          0.3581, -0.2520,  0.1383, -0.6063,  0.4945,  0.0402,  0.0578,  0.1125,
         -0.2534,  0.0963, -0.1401,  0.1567,  0.8670, -1.0588,  1.2396, -0.7006]],
       device='cuda:0') tensor(0.7253, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
63000 特征值优化 tensor(14.0488, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8131, -1.4626,  1.8038,  0.8724, -0.4980,  1.5296,  0.7910,  0.0198,
          1.0417, -0.1423, -0.5397, -0.6329,  1.2268,  0.3522, -0.1130, -1.8183,
         -0.1320,  0.1690, -0.3125,  0.0171, -0.0588, -0.3857, -0.1333, -0.4855,
         -0.1942,  0.4557,  0.3000,  0.1493, -0.0077, -0.3612,  0.5037,  0.5403,
          2.1684,  0.8141, -0.1099, -0.4456, -0.4137,  0.8436,  1.3480,  1.6530,
         -0.5012,  0.4569, -1.4674,  0.5072, -0.3802,  0.1619, -0.8366, -0.3662,
          1.5004, -0.5467,  0.0909,  0.4788,  1.3678, -1.4138,  0.0908, -0.4032,
         -0.5528,  1.1774, -0.1225,  0.3626,  0.2901,  0.0188, -1.0697,  0.4105,
          1.0295,  0.2783, -1.1435,  1.8770, -1.1119,  0.4909, -0.7405, -0.3484]],
       device='cuda:0') tensor(6.8075, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
64000 特征值优化 tensor(3.1825, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5635e+00, -1.8892e+00,  1.2795e+00,  1.1458e+00,  5.9879e-01,
          9.7266e-01,  1.4676e+00, -3.9743e-01,  2.0250e+00,  1.1106e+00,
          4.8101e-01,  2.9338e-01,  5.7335e-01,  6.0588e-02, -4.9201e-02,
         -9.0428e-01, -3.9510e-01,  2.5802e-02, -1.1485e-01,  2.8243e-03,
         -2.7623e-01, -3.9472e-01,  1.0868e-02, -2.2640e-02, -5.6648e-03,
          6.8029e-03,  3.0207e-03, -1.2968e-02, -8.7877e-04, -3.5976e-01,
          1.9208e-02,  5.0774e-01,  1.2180e+00,  1.0714e-01,  1.1346e-02,
         -1.3973e-02, -1.6719e-01,  1.0002e-01,  8.0459e-01,  8.0225e-01,
         -1.2588e-01,  3.2770e-01, -7.0207e-01,  9.5454e-01,  1.2696e-01,
          8.3826e-02, -4.9318e-01, -2.1891e-01,  1.0210e+00, -5.9890e-03,
         -2.5667e-02,  4.0140e-01,  2.5161e+00, -1.5990e+00,  8.0762e-01,
         -4.7652e-01, -6.1797e-01,  4.1238e-01, -9.2632e-02,  6.6353e-02,
         -1.5323e-01, -3.3566e-02, -3.2647e-01,  2.8837e-01,  1.6452e+00,
          1.8995e-01, -9.7029e-01,  1.1132e+00, -3.6173e-02, -3.6513e-01,
          5.4875e-02,  2.3405e-01]], device='cuda:0') tensor(1.2910, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
65000 特征值优化 tensor(2.1897, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5802e+00, -2.0168e+00,  8.2542e-01,  7.8474e-01,  9.4781e-01,
          2.3825e-01,  1.5458e+00, -6.4979e-01,  2.1086e+00,  1.4918e+00,
          8.0400e-01,  3.1123e-01,  5.1394e-01, -1.3959e-01, -6.1629e-02,
         -6.2360e-01, -3.6261e-01,  6.8862e-02, -5.2045e-02, -4.7594e-02,
         -2.6786e-01, -2.5441e-01, -4.0675e-02, -1.2031e-02,  6.2134e-03,
         -6.9700e-02, -2.4738e-02, -4.8254e-02,  4.1314e-02, -2.3456e-01,
         -3.7994e-02,  3.8075e-01,  9.5234e-01,  2.5824e-02, -1.5900e-03,
         -1.0757e-02, -1.9820e-02,  8.9955e-04,  8.8781e-01,  6.2351e-01,
         -1.2097e-01,  2.1898e-01, -5.1304e-01,  9.4096e-01,  1.4926e-01,
         -8.3740e-02, -4.4235e-01, -1.5817e-01,  3.8860e-01,  3.8122e-01,
         -1.2768e-01,  3.4161e-01,  2.7611e+00, -1.5396e+00,  5.2289e-01,
         -7.5920e-01, -1.9991e-01,  1.7719e-01,  3.0317e-01,  1.6830e-01,
         -4.6987e-01, -1.0868e-01, -1.4975e-01,  2.4061e-01,  1.8279e+00,
          1.4763e-01, -5.1310e-01,  8.8606e-01,  2.4666e-01, -4.9130e-01,
          1.3380e-02,  2.0366e-01]], device='cuda:0') tensor(1.4013, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
66000 特征值优化 tensor(18.7611, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.9604e-01, -1.2665e+00,  2.5070e+00, -2.6572e-01, -2.4055e+00,
         -4.0427e-01, -5.9053e-01,  6.3689e-01, -9.7291e-01, -7.0362e-01,
         -3.1026e+00,  1.0300e+00, -9.4205e-01, -2.1531e+00,  6.5313e-01,
         -4.5273e-01, -4.0377e-01, -2.4897e-01, -8.8302e-01,  6.4075e-01,
          6.6020e-01, -7.2140e-01,  3.3872e-01,  1.5388e+00,  1.3774e+00,
         -7.9309e-01,  1.1568e+00,  1.1908e+00, -2.6209e+00,  4.3527e-02,
         -1.1007e+00, -6.3334e-01,  1.7943e+00, -1.1280e+00,  2.4494e-03,
         -5.6045e-01, -3.1363e-01,  1.1279e+00, -1.0869e+00,  9.5435e-02,
          2.4189e-02,  6.1423e-01,  5.8458e-02, -1.6419e-01, -1.2237e+00,
         -1.9888e+00,  5.9618e-01, -3.4968e-01, -3.0858e-01, -3.0884e-01,
         -1.9162e-02,  7.6272e-01,  1.5996e+00,  1.2661e+00, -3.6979e-01,
         -2.8388e-02,  4.3247e-01, -1.0274e+00,  8.1818e-01,  7.2595e-01,
          1.4091e+00,  1.9548e-01,  2.1478e-01, -2.1670e+00,  1.4845e+00,
          8.8826e-01,  5.1733e-01, -4.4008e-01,  3.8168e-01,  9.9042e-02,
          1.1699e+00,  3.2924e-01]], device='cuda:0') tensor(10.0749, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
67000 特征值优化 tensor(4.5058, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5149e-01, -2.7168e-01,  3.3273e+00, -1.4417e-01, -1.2885e+00,
         -5.7858e-01,  2.3895e-01, -5.8075e-02, -2.3180e-01, -8.1210e-02,
         -2.1100e+00,  2.8567e-01, -1.6393e-01, -1.0617e+00,  1.2052e-01,
          4.3117e-02,  4.1581e-02,  7.6637e-02, -1.2620e-03,  2.2430e-02,
          3.7876e-02,  1.1224e-01, -4.8983e-03,  5.3932e-01,  4.3649e-01,
          6.8627e-02,  3.5393e-01,  3.1983e-01, -1.6620e+00,  1.1482e-01,
         -3.2039e-01, -7.2479e-01,  7.6347e-01, -2.1170e-01,  1.2990e-02,
         -1.0661e-02, -4.1776e-01,  3.5155e-01, -1.4534e-01,  2.2455e-02,
          1.8779e-02,  1.4404e-01,  6.5094e-01, -1.5411e-02, -1.0472e+00,
         -1.1200e+00,  7.3503e-01,  4.3244e-01, -1.3425e+00, -1.3432e+00,
         -6.5493e-01,  2.0095e-01,  1.7737e+00,  1.8167e-01, -1.0935e+00,
         -1.2437e-01,  1.6177e-01, -1.5134e-01,  5.5228e-03,  5.3688e-02,
          2.4103e+00, -4.4701e-01,  1.0499e+00, -1.3133e+00,  2.8496e-01,
          1.2374e-02, -2.4459e-02, -8.4689e-02,  1.4684e+00, -5.5582e-01,
         -3.2890e-02,  2.3876e-01]], device='cuda:0') tensor(2.3152, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
68000 特征值优化 tensor(2.2407, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9853e-01, -2.6017e-01,  3.2394e+00, -9.6999e-01, -7.3505e-01,
         -4.6474e-01,  4.2383e-01,  2.2317e-01, -1.4376e-01, -2.4294e-02,
         -1.6337e+00,  2.2074e-01, -8.1782e-02, -2.4409e-01,  1.2647e-01,
         -1.0556e-01, -5.6074e-02,  6.3830e-02,  4.3919e-03, -4.8541e-02,
          5.4119e-02,  1.5818e-01, -1.1029e-02,  4.5979e-02,  6.9822e-02,
          1.0104e-01,  2.0925e-01, -2.3359e-02, -1.3228e+00,  4.4678e-02,
          3.0759e-02, -3.6677e-01,  3.3906e-01, -1.3174e-01,  1.6819e-02,
          3.6219e-02, -1.2957e-01,  1.2363e-01, -1.6382e-02,  3.0994e-03,
          1.7539e-01,  2.0191e-02,  6.4697e-01, -3.3221e-01, -6.5088e-01,
         -9.3075e-01,  6.5672e-01,  7.8523e-01, -1.2819e+00, -1.2852e+00,
         -1.2329e+00,  5.0421e-01,  5.3496e-01,  2.4135e-02, -1.1007e+00,
         -8.1465e-01, -5.1305e-02, -6.0787e-02, -8.5990e-03, -9.2195e-03,
          1.9269e+00, -5.0163e-01,  1.4643e+00, -9.6896e-01, -5.6885e-02,
          6.0826e-02,  1.8626e-02, -3.4484e-02,  1.5801e+00, -7.4289e-01,
         -1.8320e-01,  1.7793e-01]], device='cuda:0') tensor(0.9374, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
69000 特征值优化 tensor(2.1292, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.8292e-01, -2.2987e-01,  2.8330e+00, -1.7312e+00, -6.2891e-01,
         -4.0275e-01,  4.4104e-01,  2.5987e-01, -2.3311e-03, -5.6965e-02,
         -1.4122e+00,  3.2735e-01, -7.9822e-02, -7.9415e-02,  4.9166e-02,
         -5.5435e-02, -6.1793e-02,  3.6329e-02, -9.7223e-03, -5.5911e-02,
          5.5231e-02,  1.7897e-01, -1.6932e-01,  6.2162e-02,  3.5375e-02,
          7.1040e-02,  2.5723e-01, -1.1603e-01, -1.1331e+00, -3.7061e-03,
          4.3132e-02, -1.8123e-01,  2.1303e-01, -1.4273e-01,  1.2355e-02,
          3.6228e-02, -1.0707e-01,  1.0285e-01, -1.1098e-02, -1.8597e-02,
          1.8459e-01,  2.7399e-02,  6.1648e-01, -4.6639e-01, -4.9324e-01,
         -8.7138e-01,  6.1483e-01,  1.0588e+00, -1.1962e+00, -1.2031e+00,
         -1.3406e+00,  7.0675e-01,  3.2272e-01,  1.6744e-01, -9.2590e-01,
         -8.5965e-01, -5.0903e-02, -7.0947e-02,  2.4552e-02, -2.1126e-02,
          1.7738e+00, -4.6880e-01,  1.4323e+00, -9.4219e-01, -4.1621e-02,
          5.8640e-02,  4.0816e-02, -3.7645e-02,  1.5429e+00, -7.6388e-01,
         -1.9534e-01,  1.8392e-01]], device='cuda:0') tensor(1.3890, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
70000 特征值优化 tensor(16.6600, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1709, -2.4718,  1.6012,  0.3822, -0.6383, -0.3818,  1.4296,  0.8103,
         -0.1628, -0.3150,  1.9806, -0.8627,  2.1355, -0.1081, -1.0761, -0.3127,
          0.0433,  1.0558,  1.1885, -0.0961,  0.8295, -0.2044,  0.0204, -1.3037,
          0.1077, -0.3126,  1.1764, -0.5716,  0.7727,  0.1346, -0.3148, -1.5729,
          1.5998,  0.2995, -0.2790,  0.3089,  0.6865, -0.7377, -1.2922,  0.9778,
         -0.9675,  0.1142, -0.6857, -0.4220,  1.2550,  1.2576,  0.8414,  0.9320,
         -0.8448,  0.4233, -0.9669, -0.5957, -0.4146,  0.0978, -0.5749, -0.7291,
         -1.3671,  0.1002, -0.4641,  0.3934,  2.0148,  0.9499,  1.7241, -0.9979,
          0.8509,  1.5919, -0.5052,  1.4124,  0.7517,  1.0602, -1.1470, -0.2104]],
       device='cuda:0') tensor(8.4373, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
71000 特征值优化 tensor(4.2099, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2164e+00, -1.5133e+00,  1.6067e+00,  1.3248e-01,  2.1659e-01,
          2.9080e-01,  2.2752e+00,  1.2486e+00,  4.9423e-01,  1.2578e-01,
          2.7611e+00, -1.0820e-02,  1.1198e+00,  3.6320e-01, -3.5438e-01,
          2.8929e-01,  1.6005e-01,  1.4190e-01,  3.2555e-01,  1.4354e-02,
          4.6574e-01, -2.7025e-01, -1.0102e-01, -2.2571e-01,  1.6915e-01,
         -2.5695e-03,  5.9565e-02, -1.4117e-01,  5.7163e-01,  2.5381e-01,
         -1.4174e-01, -8.3732e-01,  8.5643e-01, -4.9708e-02,  2.8145e-02,
          1.8148e-02,  3.7717e-01, -2.5312e-01, -7.7956e-01,  2.5696e-01,
         -7.4223e-01, -5.2513e-04, -5.4197e-01, -3.4623e-01,  4.9225e-01,
          1.7045e+00,  4.5680e-01,  7.4968e-01, -9.8127e-01,  1.9075e-01,
         -6.4816e-01, -2.4681e-01,  3.3361e-01, -6.3341e-01, -3.9384e-01,
         -3.5179e-01, -6.3380e-01,  1.7447e-01,  6.1729e-03,  2.5744e-02,
          1.4128e+00, -8.0074e-03,  1.7688e+00, -6.4815e-01,  1.6088e+00,
          4.8505e-01, -7.1485e-01,  4.9122e-01,  1.3036e+00,  1.6034e-01,
         -2.1310e-01,  1.0321e-01]], device='cuda:0') tensor(2.5957, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
72000 特征值优化 tensor(2.1971, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6927e+00, -1.2053e+00,  9.3901e-01, -6.5935e-01,  5.5985e-01,
          1.9064e-01,  2.3132e+00,  2.1289e+00,  4.8766e-01,  3.7948e-01,
          2.8042e+00,  2.7838e-02,  6.5498e-01,  6.6286e-02, -1.4149e-02,
          1.6076e-01,  4.4073e-02, -2.1371e-02,  1.4748e-01, -4.8196e-03,
          2.4585e-01, -1.9573e-01,  4.0701e-02, -2.4551e-02, -1.7347e-02,
          6.0129e-02, -4.9454e-03, -8.5779e-03,  1.1318e-01,  1.8318e-01,
         -1.5097e-01, -6.4589e-01,  6.8817e-01, -2.0176e-02,  1.2044e-03,
          1.9314e-04,  6.0440e-02, -1.6943e-01, -5.8252e-01,  1.1012e-01,
         -4.4616e-01, -5.6131e-02, -6.5641e-01,  7.8834e-02,  7.3354e-01,
          1.2302e+00,  1.7795e-01,  3.2993e-01, -1.7807e-01,  2.3205e-01,
         -3.0937e-01, -3.0281e-02,  3.5927e-01, -5.4918e-01, -6.2168e-01,
         -7.5842e-01, -2.9294e-01,  1.7185e-01, -6.6254e-03,  1.0048e-01,
          1.2296e+00, -1.6657e-01,  1.5375e+00, -3.8632e-01,  7.3243e-01,
          4.7710e-01, -4.0570e-01,  2.6407e-01,  1.2053e+00, -1.0226e-01,
         -1.1133e-01,  5.6314e-02]], device='cuda:0') tensor(1.2961, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
73000 特征值优化 tensor(19.8315, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0630,  1.3106,  0.4582, -0.6864, -0.6636, -0.3537, -2.0462,  0.8019,
          0.6645, -0.2218,  0.0144, -1.7150, -0.7132, -0.7652,  0.0647, -0.3085,
          0.4227,  1.8149, -1.6691,  0.9774,  1.1246,  1.0619,  0.2901,  0.4230,
          0.6813, -0.7447,  0.1470,  0.2493, -0.6327, -0.2653, -1.0110,  1.4855,
         -1.0638, -0.8675,  1.1110, -0.3344,  0.0346,  0.3456,  0.8996,  0.7923,
         -0.2630, -0.3814,  0.3062,  2.1696,  0.6362,  0.6837,  1.7441, -1.2789,
          0.4571, -0.3468,  2.0874,  0.9890,  0.6814,  1.0912, -0.6536,  1.9093,
         -0.1355,  1.0800,  1.1190, -1.2507, -0.8978,  0.7028, -0.1129, -0.8098,
         -0.0385, -0.1359,  0.9166,  1.5124,  1.9221, -0.0319, -0.3257, -0.6235]],
       device='cuda:0') tensor(9.9423, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
74000 特征值优化 tensor(3.3315, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.0406e-01,  8.0273e-01,  1.1428e+00, -1.0732e+00,  3.5709e-01,
         -7.5758e-04, -9.5280e-01,  4.2218e-01,  1.3794e+00, -1.6679e-01,
          8.7485e-01, -7.2278e-01,  7.0734e-02,  7.4755e-03, -1.7660e-04,
         -2.9962e-02, -1.0226e-01,  7.5277e-01, -5.7235e-01,  1.3142e-01,
          3.3298e-01,  4.2479e-01,  6.2953e-02,  1.6101e-02,  1.6080e-01,
         -3.8041e-02, -1.5523e-02, -6.4572e-02,  9.6932e-05,  1.6772e-01,
         -4.1570e-01,  4.6085e-01, -5.0367e-01, -2.3379e-02,  3.9078e-01,
          1.4039e-01, -4.4857e-02, -4.3288e-02,  1.8390e-01,  7.4919e-02,
         -1.8845e-02,  9.6700e-02,  6.3044e-01,  1.0357e+00, -4.5234e-01,
         -1.4258e-01,  8.5931e-01, -7.5921e-01,  7.5114e-01,  7.7745e-02,
          1.3439e+00,  3.0443e-01,  9.6391e-01, -1.8139e-02,  3.2807e-01,
          8.0441e-01, -3.6132e-01,  2.1063e-01,  2.4535e-01, -4.1987e-01,
          1.5339e-01, -1.3328e-01,  4.4486e-01, -4.2689e-01,  5.8833e-01,
         -6.6153e-01, -5.5756e-02,  6.5299e-01,  6.9444e-01, -6.7647e-01,
          2.7169e-01, -3.4994e-01]], device='cuda:0') tensor(1.4142, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
75000 特征值优化 tensor(2.2438, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.2431e-01,  1.0561e+00,  9.3365e-01, -1.0405e+00,  4.6856e-01,
         -9.3296e-02, -3.3282e-01,  2.9964e-01,  7.8650e-01,  1.0363e-01,
          1.3145e+00, -3.5226e-01,  1.2673e-01,  4.7629e-02,  4.1500e-02,
         -3.2070e-02, -8.3414e-02,  2.9365e-01, -9.5581e-02,  1.1397e-01,
          2.9407e-01,  2.2280e-01, -3.8177e-02,  1.4240e-01,  1.4753e-01,
          1.4268e-01,  8.3813e-02, -1.5349e-01, -1.1498e-03,  2.9451e-02,
         -1.4379e-01,  2.2718e-01, -5.1789e-01, -2.3352e-02,  2.2407e-01,
          1.1714e-01, -1.0618e-02,  3.4337e-03,  4.8949e-03, -2.5475e-02,
          5.6651e-02,  8.3880e-02,  3.5348e-01,  8.4081e-01, -1.7021e-01,
         -2.2763e-01,  6.2897e-01, -8.1513e-01,  5.4960e-01, -5.1018e-02,
          1.0970e+00,  1.9954e-01,  6.3375e-01, -2.1336e-01,  2.3573e-01,
          5.9098e-01, -1.9079e-01,  1.2207e-01,  4.4640e-02, -1.0255e-01,
          2.6701e-01, -9.6551e-02,  5.7057e-01, -3.9743e-01, -1.0471e-01,
         -5.5721e-01, -1.5172e-01,  4.2678e-01,  5.3728e-01, -4.2333e-01,
         -6.4532e-03, -1.1898e-01]], device='cuda:0') tensor(1.5475, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
76000 特征值优化 tensor(2.0825, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.8770e-01,  1.2190e+00,  5.7917e-01, -1.4186e+00,  4.6132e-01,
         -5.0966e-02, -3.3192e-02,  3.4050e-01,  5.0996e-01,  1.8673e-01,
          1.3710e+00, -2.3068e-01,  1.5290e-01, -4.4790e-02,  3.9088e-02,
          1.2467e-02, -7.8760e-03,  1.4257e-01,  1.1566e-02,  1.5756e-02,
          2.7282e-01,  1.1928e-01, -8.4055e-02,  8.2606e-02,  5.1821e-01,
          3.9882e-01,  1.3450e-01, -8.3917e-02, -1.1293e-02, -5.3758e-02,
         -9.7145e-02,  1.9688e-01, -5.2826e-01, -2.3866e-02,  1.6943e-01,
          9.8699e-02, -8.5548e-03,  3.1898e-02, -8.1477e-04,  2.4351e-02,
          3.6989e-02,  4.5386e-03,  2.3089e-02,  5.3917e-01,  2.9513e-01,
         -4.7679e-02,  5.4086e-01, -7.3321e-01,  4.9404e-01, -2.0820e-01,
          1.0721e+00,  9.4189e-02,  5.0694e-01, -2.1362e-01,  2.5911e-01,
          4.8318e-01, -1.3324e-01,  8.8150e-02,  5.7811e-02, -8.9900e-02,
          2.0310e-01, -8.4163e-02,  5.2541e-01, -2.9970e-01, -2.2531e-01,
         -2.8683e-01, -4.1160e-02,  2.9335e-01,  4.6944e-01, -4.3391e-01,
         -1.3998e-01, -2.5486e-02]], device='cuda:0') tensor(1.4598, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
77000 特征值优化 tensor(7.9515, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3202, -0.1423,  1.0935, -0.1186,  1.7177, -0.3743,  1.7383, -0.8442,
         -0.0359,  1.6440, -0.3576, -0.0389, -0.0608, -0.1764,  0.0170,  1.0689,
         -0.0987, -0.0667, -0.0943, -0.3263, -0.6604, -0.2228, -0.5726, -0.3780,
         -0.0676,  0.0123, -0.1727, -0.4527,  0.2585,  0.1341, -0.0520,  0.3108,
          0.3383,  1.2233,  0.0928, -0.2916,  0.3220, -1.1206, -0.9166, -0.3174,
          0.0590, -0.6776, -0.8796,  0.1455,  0.8687,  0.2769, -0.5512, -1.8881,
          1.0291,  0.0244,  0.3329,  0.4739,  0.1893, -1.1640,  0.5409,  0.1908,
          1.7668, -0.4500, -0.8302,  1.1119,  1.5714,  1.0104,  0.2358,  0.3282,
          0.7102, -0.3445, -0.0311,  0.5160, -0.4639, -0.4401,  0.7146,  0.1480]],
       device='cuda:0') tensor(3.8607, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
78000 特征值优化 tensor(2.1907, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0375e-01, -6.7635e-01,  1.5211e+00, -6.0073e-01,  5.9614e-01,
          2.1256e-01,  2.2631e+00, -3.8201e-01,  5.7931e-01,  1.1120e+00,
          1.2620e-01,  3.0684e-01,  7.5618e-03,  1.3850e-01, -1.2815e-01,
          3.3455e-01,  3.8090e-02,  3.7655e-02, -3.2087e-02, -3.8324e-03,
         -1.5038e-01, -2.0086e-02, -2.3548e-01,  2.8978e-01, -3.5878e-02,
          3.3097e-02, -5.9546e-02, -3.2172e-02, -1.8973e-02,  1.7155e-03,
         -1.6840e-02,  3.4203e-01,  1.4781e-01,  4.8210e-01,  1.1740e-01,
         -1.3818e-01,  2.4646e-01, -5.7214e-01, -5.0879e-01, -3.6304e-01,
          2.2651e-01, -4.0731e-01, -3.6596e-01,  1.5600e-01,  2.9334e-01,
          1.3650e-01, -2.0358e-01, -1.0602e+00,  3.4028e-01,  2.0272e-01,
          3.4403e-01,  7.1828e-02, -2.4271e-01, -1.2927e-02,  2.3274e-01,
         -3.7850e-02,  1.3994e+00, -6.2205e-01, -4.2597e-01,  8.9702e-01,
          1.3033e+00,  5.5738e-01, -1.0189e-01,  8.5073e-02,  6.5414e-01,
         -2.2246e-02,  2.9623e-01,  3.5036e-01,  1.4036e-02,  1.2451e-01,
          5.8456e-01,  4.5667e-01]], device='cuda:0') tensor(1.4859, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
79000 特征值优化 tensor(12.1120, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.3986e-01, -9.8447e-01,  1.0422e+00,  4.0130e-01, -2.5984e-02,
          2.1142e-03, -4.0492e-02, -4.4795e-01,  5.9086e-01, -1.0726e+00,
          5.8554e-02,  5.5828e-02, -6.3178e-01,  7.4426e-01, -1.7244e-01,
         -1.0182e+00,  1.4026e+00,  2.5104e-01, -7.2863e-02, -3.8546e-01,
         -5.6133e-03,  9.6444e-01,  1.2946e+00,  2.8413e-01,  2.0246e-01,
          8.4796e-01, -5.5396e-01,  4.4374e-01, -9.4572e-01,  8.9829e-01,
          2.6008e-01, -7.5661e-04, -3.1433e-01, -1.2651e+00, -4.9211e-01,
         -2.0084e-01, -4.9265e-01,  3.4662e-01,  1.7714e+00, -7.8349e-01,
          2.5100e-02,  1.1764e+00, -4.7067e-01, -6.0813e-01, -1.0393e+00,
         -5.8100e-01, -2.1327e-01, -1.3690e+00, -2.5095e-02, -8.6161e-01,
          3.3606e-01,  1.1725e-01, -7.4617e-01,  6.7378e-01,  1.0430e+00,
         -5.3957e-01,  1.4531e+00, -1.6538e+00,  1.0539e+00,  9.2905e-01,
          8.4018e-01,  3.4703e-01, -1.3253e-01, -5.3584e-01,  2.9892e-01,
          4.8705e-02,  4.5498e-02,  6.8060e-01,  1.0263e+00,  3.0592e-01,
          1.2469e+00,  3.1928e-01]], device='cuda:0') tensor(6.9797, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
80000 特征值优化 tensor(2.3233, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1605, -0.0669,  1.7066,  0.3392,  0.0206,  0.8633,  0.5812, -0.2588,
          1.4547, -1.2681, -0.5982,  0.9788, -0.0886,  0.0241, -0.0041, -0.1990,
          0.4486,  0.0899,  0.0134, -0.0943, -0.0686,  0.3529,  0.3531,  0.1935,
          0.2028,  0.2390,  0.1320, -0.2386, -0.2105,  0.3747, -0.0286, -0.0439,
         -0.0065, -0.4732, -0.4452, -0.5820, -0.1429,  0.0773,  1.0003, -0.3146,
         -0.0509,  0.3500,  0.0138,  0.0923, -0.2506,  0.1017, -0.1708, -0.6446,
          0.7175, -0.3224,  0.2111,  0.0954, -0.2772,  0.1683,  0.0538, -0.0085,
          2.1027, -0.9047,  0.5596,  0.4719, -0.1351,  0.2363,  0.0150, -0.1712,
          0.6812,  0.5690, -0.2912,  0.1720,  0.2891,  0.2386,  0.5874,  0.0827]],
       device='cuda:0') tensor(0.9688, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
81000 特征值优化 tensor(2.0995, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1215, -0.2579,  1.6709,  0.4994,  0.1244,  1.0443,  0.4555,  0.0986,
          1.5275, -1.1537, -0.4531,  1.1208, -0.0844,  0.0138, -0.0136, -0.0023,
          0.0801,  0.0523,  0.0138, -0.0417, -0.0631,  0.3468,  0.3643,  0.1972,
          0.1595,  0.1859,  0.1684, -0.1844, -0.1706,  0.3673, -0.0229, -0.0405,
          0.0188, -0.4398, -0.4441, -0.4750, -0.1342,  0.0382,  0.9254, -0.3235,
         -0.0201,  0.1564, -0.1057,  0.0684, -0.0390,  0.0828, -0.1065, -0.5889,
          0.8737, -0.4426,  0.1301,  0.0962, -0.1445,  0.0978,  0.0257,  0.0286,
          2.0121, -0.8956,  0.1289,  0.3953, -0.1940,  0.3288, -0.0763, -0.1600,
          0.6155,  0.6101, -0.2183,  0.0661,  0.1575,  0.2165,  0.1109, -0.0537]],
       device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
82000 特征值优化 tensor(4.6527, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.2393e-01,  3.1658e-01, -4.4206e-01, -5.8168e-01,  1.0582e+00,
          1.2109e+00,  3.7969e-01,  1.7019e-01,  1.1002e+00,  1.2128e+00,
         -5.6261e-01,  1.8219e+00, -1.4471e-01, -7.6915e-01, -3.4201e-01,
          4.2918e-02,  5.7507e-02,  1.3906e+00, -7.1883e-03, -8.5843e-01,
          1.9752e-01,  4.6301e-01, -5.3272e-01, -2.5780e-02,  1.2405e-01,
         -1.7147e-01, -7.5749e-02,  4.9118e-02, -3.1723e-02, -2.3308e-01,
         -1.7473e-01, -7.6587e-02, -7.1721e-01,  3.1952e-01, -6.6302e-01,
          1.0590e+00,  6.8504e-01, -6.0650e-02, -1.0788e-01, -2.1642e-02,
         -8.7903e-02, -1.7207e-01,  1.0482e+00, -1.0340e+00, -3.8594e-01,
          2.7644e-01, -7.1106e-01,  1.7267e-01, -9.7393e-02,  5.2988e-01,
         -1.0916e-03, -8.6514e-01,  1.4110e+00, -7.9958e-01,  8.9390e-01,
          2.7842e-01,  1.7715e+00, -3.2231e-01, -2.6713e-01, -8.9194e-01,
         -2.6614e-01,  5.5280e-01,  2.4040e-01,  2.1381e-01, -1.8326e-01,
         -1.0444e+00,  4.4598e-01, -6.0716e-01,  5.5274e-01, -9.5507e-01,
          3.9818e-01, -1.9810e-01]], device='cuda:0') tensor(2.2428, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
83000 特征值优化 tensor(2.2799, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.7321e-01,  7.8809e-01, -1.6738e-01, -6.2442e-01,  7.9726e-01,
          1.3222e+00,  5.6574e-01,  4.8271e-01,  1.4371e+00,  1.5304e+00,
          2.9021e-02,  1.9533e+00, -2.5592e-02,  1.5304e-02, -2.9928e-02,
          1.7426e-01, -1.0496e-01,  5.3007e-01,  1.1848e-01, -3.3660e-01,
         -3.7397e-03,  2.3407e-01, -1.4509e-01, -2.3946e-03,  8.3263e-02,
         -1.0565e-01,  1.1488e-01,  5.4600e-02,  1.4390e-02, -1.9639e-02,
         -1.6929e-01, -5.0975e-03, -5.4756e-01,  1.9013e-01, -7.6883e-01,
          8.8771e-01,  2.9375e-01, -9.4273e-02, -1.6350e-01, -7.9707e-02,
          1.2686e-03, -5.9495e-02,  3.5378e-01, -5.4727e-01, -1.8854e-01,
          3.5987e-01, -3.8918e-01,  2.0044e-02, -8.2557e-03,  4.0335e-01,
         -5.4741e-02, -3.8753e-01,  8.4508e-01, -2.9767e-01,  1.0196e+00,
          5.9515e-03,  1.5340e+00, -6.0877e-01, -6.9914e-01, -8.5842e-01,
         -3.1276e-01,  3.2164e-01,  9.7812e-02,  9.9805e-02,  2.0925e-01,
         -6.2772e-01,  3.5377e-01, -5.8207e-01,  3.5465e-01, -6.3746e-01,
          3.9130e-01, -4.2692e-01]], device='cuda:0') tensor(1.3843, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
84000 特征值优化 tensor(2.1128, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.6523e-01,  4.8888e-01, -3.0959e-01, -2.4479e-01,  8.3532e-01,
          1.1608e+00,  4.0841e-01,  7.3652e-01,  1.4936e+00,  1.3205e+00,
          1.9561e-01,  2.1484e+00, -2.2155e-02,  6.1097e-03, -1.9011e-03,
          1.2823e-01, -1.1474e-01,  2.6617e-01,  8.8722e-02, -1.8983e-01,
          2.3298e-03,  1.2478e-01, -1.0157e-01, -4.0709e-02,  1.1673e-01,
         -1.3359e-01,  1.5133e-01,  1.7186e-01,  2.3566e-02,  7.5283e-02,
         -1.2490e-01,  9.7799e-02, -3.9009e-01,  1.0399e-01, -6.9968e-01,
          8.0230e-01,  1.0912e-01, -6.8851e-02, -1.5959e-01, -8.1703e-02,
          9.3289e-03, -5.9309e-02,  2.7937e-02, -1.3544e-01, -1.2440e-01,
          1.2385e-01, -1.9150e-01,  6.5570e-02, -6.6415e-03,  2.3830e-01,
         -7.7945e-02, -2.7606e-01,  4.7349e-01, -1.1810e-01,  5.4526e-01,
         -4.2039e-02,  1.4407e+00, -6.4629e-01, -6.1684e-01, -7.9591e-01,
         -4.2831e-01,  1.9953e-01,  1.2040e-01,  2.9548e-02,  2.3155e-01,
         -5.7985e-01,  3.7015e-01, -5.4772e-01,  1.8647e-01, -5.6295e-01,
          3.9470e-01, -3.8263e-01]], device='cuda:0') tensor(1.0347, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
85000 特征值优化 tensor(7.9233, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.4828e-01,  4.7830e-01,  4.5574e-01,  1.3183e+00,  1.7111e-01,
          1.1460e+00,  5.0752e-01, -9.5024e-01,  5.4495e-01,  8.4244e-01,
         -5.5217e-01, -1.7659e-01, -5.1284e-01,  4.1871e-01,  2.8990e-01,
          1.1746e-01, -5.1240e-01, -3.8104e-01, -3.2626e-01, -1.8623e-01,
          1.0064e+00,  7.6965e-02, -9.2433e-01,  4.3588e-01, -1.5496e-01,
          1.3676e-01, -4.1883e-02, -7.3595e-01, -5.8197e-02,  2.3337e-01,
          1.3589e+00, -4.4021e-03,  6.3796e-03,  1.9277e-01, -6.4746e-02,
         -9.1569e-01, -5.2192e-01,  3.6484e-01,  7.7425e-01,  1.0546e+00,
         -4.9935e-01,  1.9072e-01,  1.4434e+00, -1.6459e-01,  3.5044e-01,
         -1.0727e+00,  1.7534e-01,  2.6976e-01, -1.1335e+00,  1.6839e+00,
         -5.6535e-01,  4.6785e-01, -9.9994e-01, -1.2260e-01,  9.2707e-04,
          2.9582e-03,  4.9753e-01,  4.6789e-01,  2.8324e-01,  1.8975e-01,
          9.1988e-01,  4.9700e-01, -2.0789e-03, -5.0453e-01, -8.7725e-01,
          2.2072e-01, -4.7168e-01,  1.9069e-01, -4.1521e-02,  8.4513e-01,
          6.0739e-01, -1.3139e+00]], device='cuda:0') tensor(3.8797, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
86000 特征值优化 tensor(2.2339, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7650e-01, -2.5913e-01,  5.2114e-01,  5.5102e-01,  6.3658e-01,
          1.3006e+00,  6.5003e-01, -4.6304e-01,  1.1441e+00,  1.1966e+00,
          7.3727e-03,  2.7879e-01, -3.9672e-01,  1.5950e-02, -3.3818e-02,
         -5.0228e-03,  1.3731e-02,  1.9946e-02, -3.3922e-04, -7.8851e-02,
          4.2667e-01,  8.3083e-02, -3.9897e-01, -1.7888e-01, -1.0244e-01,
          4.9139e-02, -4.9280e-02, -1.7309e-01,  2.7939e-02,  1.0212e-01,
          5.0045e-01,  1.8728e-02,  1.9465e-02, -1.2062e-01, -2.1298e-02,
         -4.9761e-01, -3.4238e-01,  2.2335e-01,  4.2171e-01,  4.7927e-01,
         -1.8856e-01,  2.7115e-01,  1.1152e+00, -2.4510e-01,  1.3734e-01,
         -1.1726e+00,  1.7390e-01, -1.6218e-01, -7.1456e-01,  1.0384e+00,
         -2.2681e-01,  1.8250e-01, -5.9285e-01,  3.5463e-01,  6.9313e-02,
          7.8126e-02, -2.7517e-01,  3.5417e-02, -3.4531e-02,  2.8137e-03,
          3.3570e-02,  4.7556e-01, -1.8818e-01, -2.6657e-01, -3.7654e-01,
          5.1703e-01, -1.6479e-01,  3.6653e-01, -2.0996e-02,  3.4261e-01,
          1.0682e+00, -5.8562e-01]], device='cuda:0') tensor(0.8912, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
87000 特征值优化 tensor(2.0970, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4338, -0.2007,  0.4661,  0.4457,  0.2383,  1.2742,  0.5712, -0.1929,
          1.2298,  1.2830,  0.0486,  0.2281, -0.3640, -0.0500, -0.1306,  0.0063,
         -0.0091,  0.0503, -0.0076, -0.0485,  0.3932,  0.0281, -0.2930, -0.2682,
         -0.0298,  0.0096, -0.0115, -0.0339,  0.0178,  0.0461,  0.2474, -0.0566,
          0.0256, -0.0197,  0.0525, -0.3899, -0.2628,  0.1710,  0.2964,  0.4314,
         -0.1417,  0.3495,  1.0189, -0.2713,  0.1549, -1.1046,  0.1864, -0.1479,
         -0.5611,  0.8786, -0.2902,  0.1978, -0.8005,  0.0479,  0.1732,  0.0735,
         -0.5229, -0.0171,  0.0614,  0.0447, -0.0394,  0.3985, -0.1724, -0.2172,
         -0.3329,  0.4716, -0.0370,  0.3305, -0.0640,  0.3249,  1.0182, -0.5444]],
       device='cuda:0') tensor(0.9290, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
88000 特征值优化 tensor(5.8681, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.9111e-01,  6.7221e-01,  1.6419e+00,  3.3698e-01,  5.4497e-01,
          9.5777e-01, -6.8990e-01, -8.9842e-01,  2.3752e+00,  1.8170e+00,
          7.9135e-01,  3.9976e-01, -4.3469e-01, -4.4354e-01, -7.7330e-01,
          3.9565e-01, -5.0969e-01, -2.3646e-01, -2.4705e-01, -4.1656e-01,
          1.3710e-01, -2.7852e-01, -6.2279e-02, -6.4813e-03, -4.2249e-01,
          1.7196e-01, -1.4992e-03,  2.9335e-02, -1.7638e-02, -4.1836e-01,
          1.9204e-01, -4.5694e-02, -4.6441e-02,  5.4741e-01, -3.8355e-01,
         -1.4925e+00,  3.1076e-01, -6.5141e-02, -1.9306e+00, -8.3008e-01,
         -2.6017e-02, -4.1377e-01, -3.7772e-01, -6.4124e-01,  1.4212e-01,
         -1.7968e+00, -9.6478e-01,  1.8497e-01,  8.2919e-01,  1.2951e-01,
          3.4073e-01,  9.5996e-02, -1.2911e-01,  4.7922e-01,  4.9063e-02,
          2.7947e-01,  2.7201e+00, -1.1664e+00, -8.5317e-01, -5.5400e-01,
          2.8454e-01, -5.9871e-01, -1.0018e-02,  4.2192e-01,  2.9648e-01,
          5.7896e-01,  4.7339e-02,  1.1313e+00,  4.6371e-01, -7.5803e-01,
          1.7562e+00, -5.1010e-01]], device='cuda:0') tensor(3.6612, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
89000 特征值优化 tensor(2.2617, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0955e+00,  1.2049e+00,  5.0115e-01, -2.5577e-01,  1.5511e-01,
          1.4455e+00, -2.6081e-01, -1.7085e-01,  3.0096e+00,  1.6507e+00,
          5.0040e-01,  9.6451e-01, -1.3781e-01, -8.4315e-02, -1.4512e-01,
          1.9657e-01, -2.3496e-01, -2.6825e-01, -2.5128e-01, -7.5905e-03,
          2.2706e-01,  1.0449e-01,  4.9641e-02, -4.7948e-02, -5.9751e-03,
         -1.1282e-02, -5.2493e-02, -2.9163e-02, -1.6187e-03, -7.7449e-02,
          2.2443e-02, -7.4455e-02, -6.1999e-02,  1.8246e-01,  1.4528e-01,
         -1.1902e+00,  1.1930e-01, -1.1217e-01, -1.3315e+00, -4.6670e-01,
          6.6149e-02, -2.4625e-01, -7.8363e-01, -1.6831e-01,  4.5564e-01,
         -1.2325e+00, -3.7446e-01, -2.3580e-01,  2.9320e-01,  2.3654e-01,
         -2.8734e-02, -8.2386e-02, -3.7780e-01,  2.7129e-01, -8.2817e-02,
          2.1802e-02,  2.6671e+00, -1.2753e+00, -9.4867e-01, -1.3895e+00,
          2.2235e-01, -3.0831e-01, -2.4450e-01,  3.7393e-01,  6.0690e-01,
          1.0664e+00,  4.2221e-01,  4.5621e-01,  2.1143e-01, -3.7370e-01,
          1.5421e+00, -5.9308e-01]], device='cuda:0') tensor(1.5234, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
90000 特征值优化 tensor(2.1442, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0261e+00,  1.4765e+00,  4.5618e-01, -1.5506e-01,  3.0412e-01,
          1.6771e+00, -1.1883e-01,  6.4714e-02,  3.1658e+00,  1.7384e+00,
          2.2110e-01,  1.0406e+00, -1.9482e-02, -1.0535e-01, -6.9671e-02,
          2.6167e-01, -1.9221e-01, -2.5042e-01, -3.4262e-01,  1.8849e-02,
          1.6321e-01,  5.9815e-02, -1.0900e-01, -8.2444e-02, -5.7801e-03,
         -2.2788e-02, -3.8660e-03,  1.9879e-02, -8.6052e-03, -3.4495e-02,
          2.8669e-02, -4.8890e-02, -3.4123e-02,  9.4084e-02,  2.4428e-01,
         -1.1092e+00,  8.6885e-02, -9.7094e-02, -1.2392e+00, -4.3877e-01,
          6.0664e-02, -2.8539e-01, -9.5236e-01, -8.0611e-02,  4.0311e-01,
         -1.1710e+00, -2.3805e-01, -2.2196e-01,  2.4824e-01,  1.9972e-01,
         -1.6942e-03, -2.7954e-02, -2.3484e-01,  2.0170e-01,  3.8942e-02,
         -3.0334e-02,  2.5414e+00, -1.4145e+00, -9.0125e-01, -1.2948e+00,
          2.6266e-01, -2.5579e-01, -1.7387e-01,  2.3916e-01,  5.0731e-01,
          1.0568e+00,  5.5390e-01,  4.1252e-01,  1.9102e-01, -2.4741e-01,
          1.3048e+00, -4.9226e-01]], device='cuda:0') tensor(1.3283, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
91000 特征值优化 tensor(15.7258, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5784,  0.8118,  1.3845, -0.7028,  0.8760,  0.4464, -0.8492,  0.8887,
          0.4294, -1.0516,  1.5232, -0.2274, -0.3033, -0.7534,  0.8265, -2.3352,
         -0.5530, -0.0394, -0.5503, -1.5189,  0.8365, -0.7631, -0.3880,  0.4711,
         -0.8017, -1.1662, -1.4749,  0.6162, -0.4252,  2.0100, -0.6766,  0.7239,
         -1.4164, -0.6006, -0.7939,  0.2658,  0.2174, -0.0811, -0.3624,  0.5000,
         -0.6605,  1.2946, -0.7446,  0.4150,  0.1322, -0.3261, -0.6116,  1.1247,
          0.7425, -0.6571, -0.5168,  0.1924, -1.0139,  0.9091,  0.0286,  1.5249,
          0.9344, -0.7441, -0.1990,  0.7736,  0.1775, -0.3396,  0.7480, -0.3786,
          0.0540,  1.5873,  0.6901,  0.2774,  0.8988, -0.0451,  0.2488,  0.6243]],
       device='cuda:0') tensor(4.7635, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
92000 特征值优化 tensor(3.1641, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3347,  0.3243,  2.3412, -0.8574,  1.3110, -0.3850,  0.1735,  1.3896,
          1.1287, -0.6036,  1.6996,  0.1928,  0.0565, -0.0655,  0.0780, -1.2507,
          0.0771, -0.0209, -0.4855, -0.6450,  0.1169, -0.4912, -0.0406, -0.0146,
          0.0055, -0.1514, -0.4132, -0.0617,  0.1738,  1.1920,  0.0151,  0.2579,
         -0.4109, -0.0455, -0.0399, -0.0043, -0.0052, -0.0611, -0.3727, -0.0234,
         -0.3019,  0.4446,  0.2188, -0.3837, -0.6435, -0.2948, -0.0719,  1.3058,
          1.4116, -0.0396, -0.5765, -0.1989, -0.6918,  0.1021,  0.3081,  0.8547,
          0.2596, -0.0636, -0.2449,  0.2567,  0.4976, -0.4119,  0.6199, -0.5371,
          0.0761,  0.8311,  0.0802, -0.1436,  0.8856, -0.3640, -0.4077,  0.2532]],
       device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
93000 特征值优化 tensor(2.1652, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4511,  0.6494,  2.6033, -1.1799,  0.6980,  0.1370,  0.9263,  1.0122,
          0.9942, -0.2898,  1.6065, -0.2912,  0.0257, -0.0637, -0.0198, -0.5570,
          0.1379, -0.1286, -0.3492, -0.4854,  0.1744, -0.5347,  0.0236, -0.0059,
          0.0117, -0.1463, -0.0579,  0.0228,  0.3547,  1.0211,  0.0269,  0.2245,
         -0.3493, -0.0188, -0.0134,  0.0320, -0.0792, -0.1124, -0.0511,  0.0123,
         -0.2344,  0.2108,  0.0617, -0.3831, -0.5297, -0.2254, -0.1276,  0.9980,
          1.4180, -0.0991, -0.3808, -0.2850, -0.2060,  0.0931,  0.3277,  0.5598,
         -0.1009,  0.0756, -0.1405,  0.4080,  0.3506, -0.2156,  0.7800, -0.4164,
         -0.4193,  0.4660, -0.0083, -0.0265,  0.8754, -0.3681, -0.3915,  0.0886]],
       device='cuda:0') tensor(1.4107, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
94000 特征值优化 tensor(13.4119, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.5387e-01, -9.3385e-02, -1.4953e+00, -7.4935e-01,  1.3603e+00,
          4.6204e-01,  6.8763e-04, -1.8039e+00,  1.1528e+00, -2.4065e-01,
         -1.0084e+00,  6.7250e-01,  1.1427e-02, -2.6188e-01, -1.6183e-01,
         -8.5508e-01, -2.9816e-01,  1.1543e+00,  1.2605e+00, -3.9327e-01,
         -2.1414e-01, -8.8858e-01, -3.8890e-01,  6.1240e-01, -1.8712e+00,
          2.9013e+00,  2.1865e+00,  1.2692e+00,  7.0520e-01,  2.1923e-01,
         -9.4785e-02, -1.4167e-01, -1.7664e-01, -5.3211e-01, -4.0782e-01,
         -9.9061e-01, -7.4742e-01, -6.1248e-01, -3.0743e-01,  2.1355e-02,
         -5.3765e-02, -5.9078e-01,  2.0023e+00,  1.6279e+00,  2.6745e-01,
         -2.3276e-01,  1.2320e+00,  5.8469e-01,  4.1404e-01, -1.8024e+00,
         -7.8707e-03, -7.1916e-01,  8.6053e-01, -1.1554e+00,  1.8361e-01,
         -1.2781e+00,  2.1650e-01,  6.9412e-01, -8.2738e-01,  4.7008e-01,
          4.4707e-02, -3.5383e-01, -5.4467e-02,  2.7244e-01, -6.7670e-01,
         -7.3838e-01, -2.2869e-01,  1.0511e-01, -4.1304e-01,  3.3620e-01,
          6.6035e-01,  1.0173e-01]], device='cuda:0') tensor(6.7895, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
95000 特征值优化 tensor(3.5596, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2728e+00,  5.0491e-01, -6.6102e-01,  1.9228e-01,  1.3849e-01,
          9.0752e-01,  1.6749e-01, -1.1266e+00,  2.2574e+00, -1.1109e+00,
         -3.8287e-01,  1.1515e+00, -1.3846e-01, -1.7428e-02,  2.7402e-03,
         -2.6460e-01,  1.7618e-01,  5.7964e-01,  6.3583e-01, -2.4036e-02,
         -4.5414e-01, -1.3442e-01,  2.8013e-02,  3.6335e-03, -8.2038e-01,
          1.8428e+00,  1.1565e+00,  4.4502e-01,  1.9630e-01, -2.6028e-02,
         -3.9911e-03,  6.4722e-03,  7.7879e-03, -1.2956e-01, -3.4931e-01,
         -4.1375e-01, -6.5390e-02, -2.1896e-02,  1.0942e-02, -2.1095e-02,
          1.5492e-01, -1.5541e-03,  1.0990e+00,  1.0724e+00, -4.9548e-01,
         -3.2554e-01,  5.6102e-01,  8.4379e-01,  7.6254e-01, -1.2855e+00,
          2.7120e-01, -4.0581e-01, -5.4389e-02, -5.5616e-04, -1.3006e-01,
         -3.0130e-01,  3.0364e-01,  7.1920e-02, -2.2808e-01,  3.9157e-01,
         -3.9234e-01,  4.5564e-02,  2.8661e-01, -1.8290e-01, -8.3585e-01,
         -1.0828e-01, -8.7792e-02,  3.7633e-01, -6.0440e-01, -1.5994e-02,
          1.5541e-01, -3.5210e-01]], device='cuda:0') tensor(1.6967, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
96000 特征值优化 tensor(2.1901, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8272,  0.5438, -0.1178,  0.6624,  0.0043,  0.8488, -0.1511, -0.6970,
          3.0328, -1.7487, -0.5319,  1.1687, -0.2216, -0.0711, -0.0174, -0.0949,
          0.0689,  0.1321,  0.1954, -0.3167, -0.3033, -0.0202, -0.0870,  0.0516,
         -0.3160,  0.9213,  0.4352,  0.1404,  0.0699, -0.0123, -0.0175, -0.0261,
         -0.0105, -0.1181, -0.2982, -0.3137,  0.0082,  0.0194, -0.0154, -0.0178,
          0.1248, -0.0080,  0.7955,  0.8840, -0.5845, -0.1288,  0.5166,  0.7776,
          0.5370, -1.2517,  0.5268, -0.4928, -0.2395,  0.1433, -0.1143, -0.2525,
          0.1769,  0.1263, -0.3128,  0.3426, -0.1481,  0.0338,  0.0929, -0.1880,
         -1.0957, -0.2083,  0.1310,  0.4218, -0.5152,  0.0278,  0.0540, -0.3228]],
       device='cuda:0') tensor(1.4497, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
97000 特征值优化 tensor(14.0360, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.2494e+00,  1.0927e+00,  1.6472e+00, -1.8888e+00,  6.9808e-01,
         -1.3564e-01, -1.0682e+00,  1.6387e-01, -7.2108e-01, -7.0448e-01,
         -5.2581e-01,  3.4734e-01, -2.5432e-01,  1.2076e+00,  3.0119e-01,
          2.8260e-01, -2.2880e-01,  2.9322e-02,  1.0568e+00,  1.0147e-02,
         -2.2887e-01,  6.0286e-01, -4.4615e-01,  8.0512e-02, -3.2807e-01,
         -1.2439e+00, -1.4979e+00,  1.1224e-01, -9.2187e-01,  3.5380e-01,
         -3.6185e-01, -2.3425e-01,  8.9903e-01,  5.3263e-02,  1.4158e+00,
          5.4941e-01,  6.0485e-01, -9.7170e-01, -3.1834e-01,  1.9516e+00,
         -1.0671e+00,  2.9345e-01,  1.1916e+00,  1.7324e-01,  1.3517e-01,
          3.3368e-01,  4.6728e-01,  1.6575e-01, -9.7108e-01, -6.0288e-01,
          1.3708e+00, -1.8808e+00,  1.0092e+00, -1.0400e+00, -4.2932e-01,
         -1.3757e+00, -5.0393e-01,  8.5342e-01,  1.2297e+00,  4.0572e-01,
          6.4031e-01,  1.0775e+00,  1.0970e+00, -8.5276e-01, -4.7321e-01,
          3.4179e-01, -1.6567e+00,  7.0842e-01,  1.5132e+00,  1.5391e-03,
          2.6956e-01,  4.7178e-01]], device='cuda:0') tensor(7.8118, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
98000 特征值优化 tensor(3.1372, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.0029e-01,  3.0033e-01,  2.1946e+00, -1.2242e+00,  9.5716e-01,
          6.1365e-01, -3.8339e-01, -2.3851e-02,  2.6019e-01, -3.0292e-01,
          1.8115e-01,  1.3526e+00, -1.7466e-02,  2.5215e-01,  9.7610e-02,
         -7.0262e-02,  8.1675e-03,  1.3629e-01,  3.4102e-01, -2.8206e-03,
          2.0749e-03,  1.7629e-01,  1.5193e-01, -5.0950e-01, -1.5276e-01,
         -3.1868e-01, -5.8324e-01,  3.6723e-02, -4.9085e-01,  5.1493e-02,
         -2.4471e-02, -2.7754e-01,  7.5683e-01,  5.2956e-02,  4.6064e-01,
          2.3847e-01,  4.8627e-03, -2.4197e-01, -8.1021e-02,  9.9278e-01,
         -5.7251e-01, -2.4641e-01,  2.5760e-01, -1.6891e-02, -4.5849e-02,
         -5.8276e-02,  5.1912e-02,  6.5538e-01, -1.1554e+00, -5.8008e-01,
          1.9181e+00, -1.3206e+00,  8.5294e-01, -8.1465e-01,  5.3508e-02,
         -1.0744e+00,  1.9439e-01, -2.6280e-02,  5.1461e-01, -2.0292e-01,
         -1.8642e-01,  2.1167e-01,  6.0578e-01, -4.8341e-01,  4.5385e-01,
          2.3357e-01, -8.0787e-01,  5.8525e-02,  1.5816e+00, -8.4893e-02,
          8.9997e-01,  7.5924e-01]], device='cuda:0') tensor(1.6601, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
99000 特征值优化 tensor(2.1261, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2504e-01, -3.3000e-03,  1.5669e+00, -1.1566e+00,  8.9097e-01,
          3.6233e-01, -1.6230e-01,  3.7056e-02,  4.2748e-01, -1.0364e+00,
          4.4342e-01,  1.6261e+00, -2.1655e-02,  1.6905e-03,  8.6026e-03,
         -4.4729e-03, -1.7983e-02,  1.0284e-02, -6.5083e-03, -3.5526e-02,
          1.1177e-03,  6.3683e-02,  1.7199e-01, -2.8914e-01, -1.0558e-01,
         -9.6564e-03, -2.1969e-01, -1.3261e-01, -5.5594e-01,  1.0220e-01,
         -1.6061e-02, -1.6374e-01,  6.1835e-01,  2.8635e-02,  2.3401e-01,
          1.8138e-01, -1.0244e-01, -9.5638e-02, -3.5673e-01,  7.3300e-01,
         -1.9382e-01, -3.6487e-01, -1.3758e-01,  6.7826e-02,  1.2471e-01,
          2.6812e-02, -1.4423e-02,  9.2068e-01, -1.2817e+00, -3.6387e-01,
          2.0379e+00, -1.0759e+00,  3.1436e-01, -3.3399e-01, -1.2101e-02,
         -1.1478e+00,  1.0224e-01,  1.3945e-02,  1.0293e-01, -4.1323e-01,
         -9.6047e-02,  5.7102e-03,  3.6616e-01, -2.6511e-01,  4.7407e-01,
          1.6396e-01, -9.9436e-01, -1.2998e-01,  1.4024e+00, -2.6449e-01,
          6.1236e-01,  4.8106e-01]], device='cuda:0') tensor(1.3322, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
100000 特征值优化 tensor(7.5538, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.7747e-01,  8.1276e-01, -8.4657e-01, -1.8042e+00, -9.2820e-01,
          1.8075e+00,  8.5293e-02, -1.4885e+00,  1.7076e-01, -2.5775e+00,
          8.3762e-01, -1.0861e+00,  2.4001e-01, -2.0137e-01,  5.0313e-02,
          2.3924e+00, -2.7839e-01, -7.9156e-01,  9.9414e-01,  9.5785e-01,
         -4.4220e-01, -7.0345e-02, -9.3895e-01,  2.6087e-01, -7.6704e-01,
          4.0102e-01, -5.2562e-01, -1.0655e+00,  1.9110e-01,  2.8795e-01,
         -7.0996e-01,  8.1904e-02, -4.9532e-01,  1.9748e-01,  9.3951e-01,
         -4.6703e-01,  1.0066e-01,  9.4776e-02,  6.0841e-01, -3.2530e-01,
         -7.8544e-01,  1.7031e-02,  5.7364e-01, -1.2152e+00,  1.0463e+00,
         -7.1214e-01,  4.1645e-01,  8.3395e-04,  7.2102e-01, -7.0552e-01,
          8.3641e-01, -2.6993e-04,  1.0690e+00,  2.3077e-01, -2.0761e-02,
         -3.4748e-01,  5.8281e-01, -3.2837e-01,  3.5121e-01, -2.1253e-01,
         -4.8836e-01, -2.0449e-01,  9.2246e-01, -2.3280e-01,  4.2778e-01,
         -3.2759e-01, -2.3382e-01, -2.7936e-01, -4.5181e-01,  2.4700e-01,
          1.7572e-02,  4.4976e-02]], device='cuda:0') tensor(4.3882, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
101000 特征值优化 tensor(2.5828, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4664e+00,  2.0388e-03, -6.5512e-01, -7.8546e-01, -2.2530e-01,
          2.0044e+00,  1.0771e+00, -5.3569e-01,  5.4400e-01, -2.0301e+00,
          1.1668e+00, -7.2953e-01,  4.5064e-02, -1.8577e-02,  4.7865e-02,
          1.3555e+00, -9.3239e-02, -3.0491e-01,  1.4254e-01,  5.1093e-01,
          4.9686e-02,  2.1668e-02, -8.3337e-02,  2.0198e-03, -1.7211e-01,
          6.4107e-02, -1.4538e-01, -2.5130e-01,  5.7536e-02,  4.2134e-02,
         -1.4532e-02,  1.8665e-02, -6.7609e-02, -7.8658e-02,  6.6692e-01,
         -7.9815e-02, -9.9737e-03, -3.9163e-03,  3.0987e-01, -2.2164e-01,
         -4.0708e-01,  2.3972e-01,  4.8120e-01, -1.0578e+00,  4.2115e-01,
         -2.7447e-01,  4.4878e-01, -5.3718e-03,  4.8790e-01, -2.7109e-01,
          4.0010e-01, -7.9603e-02,  2.4873e-01, -7.0923e-02,  5.1948e-02,
         -1.2245e-01,  7.6653e-01, -5.7068e-01,  4.7941e-01, -3.4438e-01,
         -7.0424e-01,  1.5020e-01,  3.0896e-01, -2.2356e-01,  6.8249e-01,
         -1.2067e-01,  2.1157e-01, -4.3893e-01, -1.8778e-01,  3.9964e-01,
          1.3420e-01,  1.5719e-01]], device='cuda:0') tensor(1.0709, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
102000 特征值优化 tensor(2.1212, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6278e+00, -6.1666e-01, -5.0092e-01, -5.1957e-01,  6.4684e-03,
          1.8103e+00,  1.5665e+00, -3.9939e-01,  7.7243e-01, -1.7645e+00,
          1.1838e+00, -5.4157e-01,  4.0309e-02, -6.1942e-02, -3.4605e-02,
          8.3597e-01,  1.0614e-01, -2.8567e-01, -2.0129e-02,  3.9985e-01,
          3.4699e-02, -1.9156e-02,  2.9710e-02,  1.1191e-01, -1.3630e-01,
          1.2908e-01,  5.0566e-03, -2.2145e-02,  5.3229e-03,  7.5467e-04,
         -1.7504e-02,  3.8072e-02,  1.7200e-03, -1.1798e-01,  6.5211e-01,
          2.7689e-02,  9.7876e-03, -3.1601e-02,  2.6412e-01, -1.6730e-01,
         -3.8501e-01,  2.4108e-01,  6.6400e-02, -7.0873e-01,  2.0242e-01,
          6.4525e-02,  3.3896e-01, -2.1615e-02,  2.8867e-01,  6.0280e-02,
          3.3434e-01, -2.7213e-02,  7.7990e-02, -1.8443e-02,  3.5151e-03,
         -7.4865e-02,  7.9606e-01, -4.3524e-01,  5.1626e-01, -7.4879e-01,
         -8.6347e-01,  1.3235e-01,  2.2291e-01, -1.0576e-01,  5.9164e-01,
         -1.2097e-01,  1.2911e-01, -3.1640e-01, -2.8149e-01,  4.3494e-01,
         -1.3018e-01,  1.4068e-01]], device='cuda:0') tensor(0.8896, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
103000 特征值优化 tensor(2.0667, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6171e+00, -1.1458e+00, -4.6527e-01, -5.3246e-01,  7.3997e-02,
          1.5454e+00,  1.7324e+00, -4.6334e-01,  8.4561e-01, -1.6007e+00,
          1.2003e+00, -4.5410e-01,  5.8611e-03, -2.9608e-02, -4.2575e-02,
          5.9764e-01,  1.2487e-01, -2.0217e-01, -2.6442e-02,  3.3897e-01,
          2.5617e-02, -1.3283e-02,  6.4353e-02,  7.0380e-02, -5.0839e-02,
          1.4656e-02,  1.5663e-02, -9.7182e-03, -6.7760e-04,  3.7286e-03,
         -2.2733e-02,  2.6949e-02,  3.0390e-03, -1.8889e-01,  6.0673e-01,
          1.0600e-01,  6.2082e-03, -6.6303e-02,  2.8334e-01, -1.4110e-01,
         -3.7994e-01,  2.1187e-01, -8.5605e-02, -5.9259e-01,  7.1352e-02,
          2.6040e-01,  2.2947e-01, -1.7622e-03,  2.8780e-01,  6.6664e-02,
          3.7757e-01, -3.4702e-02,  8.3712e-02, -1.8275e-02, -1.5210e-02,
         -2.6965e-02,  9.6326e-01, -2.8748e-01,  5.5825e-01, -6.8088e-01,
         -9.3119e-01,  1.4840e-01,  2.5892e-01, -5.9892e-02,  6.1718e-01,
         -7.2495e-02,  6.0346e-02, -2.5362e-01, -2.7168e-01,  3.8719e-01,
         -2.8946e-01,  7.4914e-02]], device='cuda:0') tensor(0.9346, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
104000 特征值优化 tensor(5.8528, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0121,  1.3270, -0.5133, -0.0407,  1.0995,  0.4688,  1.1454, -0.4545,
         -0.4939,  2.5347,  0.1276,  0.2477, -0.4887,  0.1655,  1.0545,  0.0207,
         -0.0605, -0.1665, -0.3275,  0.0060, -0.4517,  0.2811,  0.1291,  0.6818,
         -0.2501, -0.3188, -0.1726, -0.4225,  1.0421,  0.2675, -0.0406,  0.5154,
          0.4566, -0.4815,  0.2404, -0.1697,  0.0475,  0.0047,  0.3813,  0.8592,
         -0.3159,  0.4847, -0.3576,  0.4241,  1.0151,  0.1100,  0.4198,  0.4381,
         -0.9644, -1.1925, -0.6364, -0.0372,  0.4256,  0.2089,  0.6842, -0.1749,
         -0.0584,  0.3559,  0.0180,  0.0190, -0.0497,  0.1462, -0.5094,  0.3872,
          0.5008, -0.9805, -0.0574, -0.0854, -0.2187, -1.2828,  0.6667, -0.3224]],
       device='cuda:0') tensor(3.6151, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
105000 特征值优化 tensor(2.2320, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6602,  1.5496, -0.0762,  0.0791,  1.3670,  0.1830,  0.5235, -0.7301,
         -0.0419,  1.7049,  0.7007,  0.6379, -0.3636,  0.2190,  0.3220,  0.2159,
         -0.1816, -0.2323, -0.2541, -0.0242, -0.3902,  0.1020,  0.1312,  0.1302,
         -0.0931, -0.0415, -0.1426, -0.1421,  0.6592,  0.1033,  0.0449,  0.3149,
          0.5001, -0.0350,  0.0607, -0.0128,  0.0236, -0.0075,  0.2770,  0.5037,
         -0.1363,  0.4994, -0.3452,  0.5087,  0.6231, -0.2242,  0.4116,  0.6941,
         -0.4384, -0.6565, -0.4134, -0.0188,  0.2959,  0.0629,  1.0515, -0.6325,
         -0.2611,  0.1828,  0.0441, -0.0135,  0.0232, -0.0152, -0.4293,  0.3728,
          0.8827, -0.3954,  0.3786, -0.0322,  0.3733, -0.6678,  0.7947,  0.2065]],
       device='cuda:0') tensor(0.9256, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
106000 特征值优化 tensor(2.1376, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2878,  1.0107,  0.0266, -0.1048,  1.2648,  0.0853,  0.5413, -0.7568,
          0.0166,  1.4309,  0.7637,  0.6247, -0.2410,  0.3086,  0.2793,  0.1271,
         -0.2112, -0.2399, -0.2194, -0.0145, -0.2674,  0.0971,  0.0983,  0.0238,
         -0.0366, -0.0451, -0.1445,  0.0136,  0.5663,  0.1107,  0.0661,  0.3431,
          0.4457, -0.0201,  0.0324,  0.0312,  0.0226, -0.0329,  0.2478,  0.5060,
         -0.1173,  0.5150, -0.3645,  0.4100,  0.4843, -0.1976,  0.2855,  0.5668,
         -0.3037, -0.6501, -0.4895,  0.0471,  0.1801,  0.0453,  0.9933, -0.6785,
         -0.1161,  0.0887, -0.0605, -0.1399,  0.0772, -0.0413, -0.3864,  0.3297,
          0.7751, -0.3405,  0.3927, -0.0095,  0.4470, -0.5852,  0.6802,  0.3374]],
       device='cuda:0') tensor(0.9647, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
107000 特征值优化 tensor(14.0827, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.0796, -0.5723, -0.0963,  1.7357, -0.2325,  0.2810,  0.3791,  0.5199,
          1.1257,  0.4028,  0.3292,  0.8042, -1.0574, -0.0120, -0.4416, -1.5551,
          0.5109,  0.4726,  0.5929,  0.6740,  0.3850, -0.5620, -2.1108,  0.1344,
          0.3438, -0.4677,  0.1490,  1.0679, -0.4167,  1.0311, -0.6516, -0.8886,
         -0.2391,  0.2644,  0.2138, -0.0301, -0.3900, -1.0510, -0.4893, -0.8425,
          0.1476,  1.1736, -0.6025,  2.5684,  0.2845, -0.7071, -0.3090, -0.6181,
          1.0723, -0.4199, -1.8955,  0.0668, -0.2260, -0.2486, -0.3786,  1.2704,
         -1.7203, -1.8969, -1.0185, -0.2319, -1.8173, -0.1218, -1.6392,  0.9402,
         -0.9986,  0.9454, -0.1729, -0.3015, -0.2565, -0.4293,  0.5102,  1.1311]],
       device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
108000 特征值优化 tensor(2.7597, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1548, -0.3365,  0.7938,  1.1360, -0.3276,  1.2511,  1.2181,  0.3912,
          1.3353, -0.2515,  0.7465,  1.3274, -0.2873,  0.0632,  0.0475, -0.6119,
         -0.0657,  0.0858, -0.0239,  0.0054,  0.2586, -0.1359, -0.9103, -0.2968,
          0.3088, -0.0967,  0.0753,  0.2086,  0.0103,  0.2784, -0.0197, -0.1640,
         -0.1032,  0.1120, -0.0232, -0.0691,  0.1310, -0.3930, -0.0352, -0.2617,
          0.4700,  0.3743,  0.0261,  1.5693, -0.5889, -0.3770, -0.2302,  0.0032,
          0.6310, -0.0414, -1.1421,  0.0776,  0.0234,  0.0044,  0.0378,  0.2483,
         -0.7740, -0.9277, -0.1655, -0.0453, -0.9909, -0.2342, -1.1023,  0.2644,
         -0.4657,  0.5543, -0.1079, -0.1140,  0.4291,  0.0203, -0.2190,  0.6068]],
       device='cuda:0') tensor(1.1953, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
109000 特征值优化 tensor(2.1602, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.8706e-02, -6.8090e-03,  8.8578e-01,  9.8046e-01,  1.2653e-01,
          1.4281e+00,  1.2614e+00, -2.6942e-01,  8.1894e-01, -3.7775e-02,
          8.3481e-01,  1.0158e+00, -1.0291e-01,  9.9424e-03,  7.3199e-04,
         -2.4337e-01, -5.1339e-02, -8.0670e-03,  4.4855e-03,  3.8931e-03,
          7.9696e-02, -1.1763e-01, -5.2980e-01, -1.8103e-01,  2.6813e-01,
         -2.3806e-01,  1.7518e-01,  1.9720e-01,  4.1579e-03,  1.2265e-01,
         -1.8991e-02, -6.3710e-02, -3.8519e-02,  7.6194e-02, -1.8539e-01,
         -1.2556e-01,  2.2033e-01, -2.5738e-01,  3.5297e-02, -1.0122e-01,
          2.0772e-01,  1.5065e-01,  1.0167e-01,  1.2300e+00, -5.5382e-01,
         -3.0394e-01, -1.9106e-01, -1.7316e-01,  1.9885e-01,  1.4503e-01,
         -8.0895e-01, -3.8428e-02, -7.8269e-02,  6.2971e-02,  1.7128e-01,
         -2.2030e-02, -6.0359e-01, -7.4419e-01,  7.1085e-03,  5.9508e-02,
         -9.5622e-01, -1.6930e-01, -7.1881e-01,  1.6146e-01, -4.4096e-01,
          2.9538e-01, -1.4969e-01,  7.5785e-03,  4.0507e-01,  2.0966e-02,
         -2.4079e-01,  3.5798e-01]], device='cuda:0') tensor(1.3688, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
110000 特征值优化 tensor(2.0940, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6051e-01,  3.4191e-02,  8.5899e-01,  1.0642e+00,  1.9782e-01,
          1.4677e+00,  1.2460e+00, -4.1486e-01,  5.9669e-01,  2.8596e-01,
          4.1498e-01,  1.0196e+00, -9.8851e-02,  5.4140e-03, -1.0469e-02,
         -1.5950e-01, -3.8421e-02, -1.6249e-02,  1.7154e-02,  6.4716e-04,
          7.3824e-02, -2.6903e-02, -4.4643e-01, -1.5457e-01,  1.9566e-01,
         -2.5887e-01,  2.5584e-01,  2.6604e-01, -2.2151e-02,  5.0667e-02,
         -1.8138e-02, -6.8749e-02, -8.5697e-03,  4.6688e-02, -1.6955e-01,
         -9.2905e-02,  2.7823e-01, -2.1243e-01,  3.4640e-03,  1.4869e-04,
          7.3853e-02,  1.1128e-01,  1.2627e-01,  1.0411e+00, -4.0085e-01,
         -3.7989e-01, -1.5816e-01, -3.2708e-01,  1.5336e-01,  1.1189e-01,
         -6.3778e-01,  3.7118e-02, -1.0085e-01,  7.1102e-02,  4.4277e-01,
         -1.3141e-01, -5.4034e-01, -7.0511e-01,  3.1047e-02, -7.7618e-03,
         -9.2982e-01, -1.9313e-02, -4.4881e-01,  1.2394e-01, -2.9054e-01,
          2.5205e-01, -1.7040e-01,  1.1238e-01,  3.7153e-01, -9.5434e-02,
         -3.1064e-01,  2.8269e-01]], device='cuda:0') tensor(1.0804, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
111000 特征值优化 tensor(3.0867, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0847,  0.0404,  1.2088, -0.1452, -0.7678,  0.9104, -0.6300,  0.6736,
          2.4800, -1.5151, -0.1899,  0.7626,  0.0339, -0.1947, -0.2010, -0.3118,
         -0.2938, -0.0223,  0.0541, -0.7812, -0.0616, -0.2628,  0.1579, -0.0464,
         -0.4729, -0.1656,  0.8325,  0.7195,  0.0073, -0.2970, -0.0372,  0.6490,
          0.1807,  0.3674, -0.0126,  0.0213,  0.0760,  0.1428,  0.7709, -0.7479,
          0.0319,  0.6055,  0.2026, -0.4759, -0.7088,  0.1671,  0.2019, -0.7052,
          0.7753,  0.0633,  0.2534,  0.1508,  1.3539, -0.6513,  0.5254, -0.1578,
         -0.1331,  0.5071, -0.3531,  0.9098,  1.0449,  0.0188, -0.7188,  0.3760,
          0.1354,  0.8143, -0.8391, -0.1563,  0.1547,  0.0788,  0.7522, -0.0483]],
       device='cuda:0') tensor(2.3474, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
112000 特征值优化 tensor(2.1830, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.8423e-02,  2.2538e-02,  1.3012e+00, -4.8328e-02, -9.2123e-02,
          2.0622e-01, -5.0819e-01,  1.9464e-01,  2.5247e+00, -1.7127e+00,
         -1.4222e-01,  9.3713e-01,  2.6867e-02, -4.1245e-02, -6.5891e-02,
         -1.9420e-01, -2.8314e-02, -1.1347e-04,  4.5083e-02, -5.5553e-01,
         -3.9770e-02, -2.1702e-01,  1.3307e-01, -3.7117e-02, -4.3666e-01,
          1.4801e-02,  4.4804e-01,  3.0885e-01,  1.4411e-02, -2.4273e-01,
         -7.1622e-03,  3.1965e-01,  3.4620e-02,  2.5526e-02, -1.8562e-02,
         -6.2646e-02, -5.9922e-03, -3.0658e-02,  6.1268e-01, -6.3581e-01,
         -6.1114e-03,  6.3356e-01,  2.8857e-01, -5.1679e-01, -5.1947e-01,
          1.4395e-01,  2.6152e-01, -6.5023e-01,  6.1163e-01,  6.7504e-02,
          1.8272e-01,  1.3071e-01,  1.1677e+00, -5.5247e-01,  3.9929e-01,
         -2.4359e-02, -2.9011e-01,  2.1999e-01, -4.6592e-01,  7.3368e-01,
          7.8881e-01,  1.7883e-02, -1.8289e-01, -1.2816e-02, -1.7692e-02,
          7.0124e-01, -5.3982e-01, -2.8258e-01, -7.0440e-02,  9.3722e-02,
          4.3746e-01,  2.3346e-01]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
113000 特征值优化 tensor(17.2003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2997,  0.2052,  1.9755,  0.5479,  0.8208, -1.1936, -0.7703,  1.3816,
         -0.4448,  0.5830,  0.1909, -0.7326,  1.5250, -0.8214, -0.9015,  0.0281,
         -1.4853,  1.0325,  0.4804, -0.7923,  0.1973,  1.3952,  0.6856, -0.5609,
          0.6485, -0.5057,  1.1868,  0.7866, -0.0327, -0.3749,  1.9254,  0.1992,
         -0.1436, -0.8079, -0.4116, -1.0184, -0.4166, -1.2340,  1.4940,  0.1179,
          0.1043,  0.3956,  1.2612, -0.4224, -0.8874, -0.6148,  0.2597,  0.1807,
          0.8764,  2.6459,  1.4063, -0.0155, -0.3876, -0.1756, -0.9274,  1.2852,
         -1.9488,  0.0155,  0.3236, -0.9761,  1.1314,  1.4997,  0.2645,  0.5099,
          1.4920, -0.4375, -1.2431, -0.4612, -0.0211, -0.7395, -0.4815, -0.2022]],
       device='cuda:0') tensor(8.9258, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
114000 正交保障 tensor(2.4878, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.8759e-01,  6.7874e-01,  2.6379e+00,  8.4259e-02,  1.5803e+00,
         -2.2263e-01,  1.6237e-01,  1.2180e+00,  2.2804e-01,  9.3974e-01,
          3.8909e-01,  7.7137e-02,  4.6183e-01, -2.2288e-01, -1.4866e-01,
         -5.7828e-02, -4.1172e-01,  1.5172e-01,  1.0080e-01, -3.2390e-01,
          1.2114e-01,  6.9216e-01, -1.7203e-04, -1.1750e-01,  6.9077e-02,
         -9.2324e-02,  1.4131e-01,  1.2151e-01, -9.7835e-04,  2.0356e-01,
          1.1570e+00, -6.7464e-03,  2.5914e-02, -1.5223e-01, -9.9945e-04,
         -1.7984e-01, -5.1130e-01, -4.4070e-01,  5.5086e-01,  4.4003e-02,
         -3.5304e-01, -2.1132e-02,  4.9606e-01, -3.2784e-01, -5.0921e-01,
         -3.4585e-01,  1.9533e-01, -7.4160e-02,  3.8634e-01,  1.7260e+00,
          6.9351e-01,  8.7552e-02,  2.2895e-01,  5.7267e-01, -2.5128e-01,
          5.5820e-01, -9.7006e-01,  1.1195e-01, -1.9325e-02, -4.7761e-02,
          2.9043e-01,  5.9567e-01, -9.5742e-02,  2.8560e-01,  6.0201e-01,
         -3.9265e-01, -5.5355e-01,  4.1322e-02,  4.6666e-02,  8.5482e-02,
          2.8272e-01, -3.3583e-01]], device='cuda:0') tensor(2.4878, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
115000 特征值优化 tensor(2.0946, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4314, -0.2123,  2.4131,  0.1532,  2.0078,  0.1426,  0.2600,  0.6556,
          0.1830,  0.3316,  0.2732,  0.1108,  0.1065, -0.0781, -0.1360,  0.0257,
         -0.0573, -0.0076,  0.0642,  0.0033,  0.1251,  0.4224,  0.1453, -0.3109,
         -0.0187, -0.2544,  0.2159,  0.0185, -0.0335,  0.5453,  0.9453,  0.0143,
         -0.0759, -0.1417,  0.0392, -0.0325, -0.3990, -0.3222,  0.0169,  0.0110,
         -0.3360, -0.0464, -0.1811,  0.0561,  0.0113, -0.2119,  0.0185, -0.1113,
          0.4545,  1.4526,  0.4785,  0.1989,  0.0397,  0.5341, -0.2733,  0.6645,
         -0.5878,  0.0184,  0.1048,  0.0205,  0.0940,  0.5666,  0.1358,  0.2369,
         -0.0723,  0.0332, -0.2441,  0.0963, -0.1605,  0.2394, -0.0347,  0.0352]],
       device='cuda:0') tensor(0.7643, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
116000 特征值优化 tensor(11.2418, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3038, -0.7933,  0.8713,  1.2723,  1.6571,  0.2470, -1.2460,  1.1494,
          1.5760,  0.0121,  0.4511,  1.0893,  1.4053, -1.5820,  0.4412, -0.2781,
         -0.5366, -0.0102,  0.1298,  0.5258, -0.0433, -0.1957,  1.6265,  0.6740,
         -0.4227, -0.1676,  0.2843, -2.0594,  1.3827, -0.1919,  0.0064,  0.5199,
          0.0554, -0.2509,  0.1906, -0.3086, -0.8416,  0.4873,  0.0189,  0.0231,
         -0.3724, -0.7673,  0.4044, -0.8341,  0.7650, -1.0614,  0.6480, -0.0946,
         -0.6695, -0.2967, -1.2906,  0.2203, -0.6431,  0.4701,  0.0059,  0.8021,
         -1.1490, -1.3538, -0.0491,  0.2250, -1.2889,  0.4594, -0.9536,  0.8678,
          0.2456, -1.8722,  0.0519, -0.0984, -0.3810, -0.8018,  1.0390,  1.1510]],
       device='cuda:0') tensor(5.7546, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
117000 特征值优化 tensor(2.6724, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6544e+00, -6.8062e-01,  1.5076e+00,  1.4836e+00,  1.4327e+00,
          1.0380e+00, -4.5657e-01,  5.7012e-01,  1.3391e+00,  1.2830e+00,
         -2.9003e-01,  1.7333e+00,  8.8175e-01, -6.2185e-01,  2.2470e-01,
         -8.3437e-03,  2.4889e-02, -3.3634e-03, -1.5636e-02,  1.5792e-01,
         -2.2139e-01, -2.7522e-02,  5.9405e-01, -8.5252e-02, -4.4461e-01,
          3.4366e-01, -2.7904e-01, -1.0253e+00,  3.5728e-01, -1.7473e-04,
         -2.9089e-01,  4.2876e-03,  4.0113e-03, -1.3089e-01,  5.6051e-01,
         -2.6021e-01, -1.2189e-01,  6.2025e-02,  1.9490e-02,  1.7278e-02,
         -6.5557e-02, -3.0599e-02,  7.1807e-01, -4.5801e-01,  1.1638e+00,
         -1.0559e+00,  2.1566e-01, -3.4537e-01, -1.8726e-01, -2.3633e-01,
         -1.0110e+00,  1.3429e-01, -4.5205e-01,  5.8047e-01,  5.5100e-02,
          2.8934e-02, -3.5909e-01, -4.7110e-01, -3.8124e-02,  3.3021e-02,
         -4.6786e-01,  1.4284e-01, -3.4374e-01,  1.6730e-01,  9.8155e-01,
         -9.0663e-01,  3.6489e-01, -3.6629e-01, -3.5809e-02, -1.2823e-02,
          1.9952e-01,  6.2839e-01]], device='cuda:0') tensor(1.7907, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
118000 特征值优化 tensor(2.1061, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5422e+00, -8.0971e-01,  1.5650e+00,  1.4692e+00,  1.3599e+00,
          9.9231e-01, -2.3819e-01,  2.1131e-01,  1.0261e+00,  1.7369e+00,
         -1.7601e-02,  1.8154e+00,  7.8182e-01, -3.2072e-01, -7.4806e-04,
         -1.2766e-02,  7.0381e-02, -1.6218e-02, -2.9458e-03,  1.9280e-01,
         -2.8905e-01, -2.2295e-02,  6.0966e-02, -1.3192e-01, -4.7237e-01,
          4.7396e-01, -5.2779e-01, -6.7593e-01,  7.6584e-02, -7.6737e-04,
         -2.0493e-01, -1.7443e-02, -5.5898e-02, -1.5249e-01,  4.5881e-01,
         -2.6851e-01, -1.0413e-01,  5.0227e-02,  9.7125e-03,  1.1424e-01,
         -5.4365e-02,  2.5552e-01,  7.4271e-01, -5.1908e-01,  1.2936e+00,
         -1.1047e+00, -3.9293e-02, -8.0997e-01,  4.9687e-02,  7.3370e-02,
         -7.0194e-01, -1.7456e-02, -4.7846e-01,  5.0999e-01, -2.8144e-01,
          1.0308e-01, -3.4833e-01, -3.2063e-01,  2.0163e-01,  2.2064e-01,
         -3.5159e-01,  1.2140e-01, -1.2854e-01,  1.1760e-01,  1.2615e+00,
         -5.4824e-01,  5.6198e-01, -1.9140e-01, -1.5090e-01,  5.9812e-02,
          2.3438e-01,  5.0178e-01]], device='cuda:0') tensor(1.3559, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
119000 特征值优化 tensor(8.9392, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6884, -0.9555,  1.7775, -0.6926, -0.1249,  0.1977,  0.4429, -0.8761,
          1.0597, -0.1795,  1.3094, -1.1151,  0.0613, -0.2471, -1.0094,  0.1368,
         -0.1504, -0.3553, -0.4748,  0.0879,  0.2144,  0.2622, -0.5905,  1.0354,
          0.2780,  0.4728, -0.1376,  0.1009,  0.2175,  0.2892, -0.4017, -0.0067,
          0.1227,  1.0745, -0.6961, -0.5805, -0.6108, -0.6560, -0.7436,  0.0142,
          1.3392,  0.5099, -0.4701, -0.3507,  0.1234,  0.9817, -1.4263,  0.9990,
         -0.9407,  0.3358, -0.2605,  1.1649, -0.3345, -0.1743,  0.0950, -0.2935,
         -2.1088,  0.7605, -0.1143,  0.3490,  1.3895, -0.2852,  0.3614, -0.4149,
          0.8545,  0.5155, -0.3176, -0.4485, -0.5752,  0.4239,  1.5710, -1.2897]],
       device='cuda:0') tensor(5.2151, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
120000 特征值优化 tensor(2.3908, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0037e+00, -1.0195e+00,  1.3653e+00, -1.2524e+00,  8.3248e-02,
          9.2760e-01, -3.5306e-01, -8.2933e-01,  1.2146e+00, -1.9007e-01,
          1.5706e+00, -4.3900e-01, -3.3207e-02,  2.1650e-01, -3.0502e-01,
          2.6390e-02, -1.8380e-02,  6.2877e-02, -6.8301e-02,  1.5243e-02,
          1.3219e-02, -1.0599e-02, -4.3418e-01,  5.3013e-01, -4.8091e-02,
         -5.5383e-02, -6.1206e-02,  6.1062e-02, -9.5368e-02, -1.2655e-02,
         -9.0912e-02, -2.5896e-02, -1.4791e-02,  2.9266e-01, -1.1151e-01,
         -1.4345e-01, -2.1926e-01, -3.2071e-01, -4.1714e-01,  1.5546e-01,
          8.1058e-01, -7.4194e-02,  4.2163e-04, -6.7732e-02,  1.3224e-01,
          1.0254e+00, -5.7481e-01,  4.6913e-01, -7.7272e-01, -3.1130e-01,
         -6.7240e-01,  6.7295e-01, -3.6632e-01,  8.4414e-02, -7.4574e-03,
          4.5831e-02, -1.2851e+00,  1.1882e-01, -3.3557e-01,  3.5020e-01,
          3.7026e-01,  1.6044e-01,  1.8601e-01, -2.0948e-01,  4.1170e-01,
          4.9374e-01, -8.9485e-01,  3.4504e-02, -3.6935e-01,  6.1482e-01,
          1.8954e+00, -6.5219e-01]], device='cuda:0') tensor(1.2290, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
121000 特征值优化 tensor(2.0981, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9746, -0.9065,  1.3133, -1.1343,  0.1379,  1.0005, -0.6661, -0.7860,
          1.1363, -0.2649,  1.2519, -0.2813,  0.0020,  0.1247, -0.1800,  0.0082,
         -0.0663,  0.1698, -0.1320,  0.0426, -0.0188,  0.0225, -0.4404,  0.5386,
         -0.0165, -0.0411, -0.1105,  0.0674, -0.1160, -0.0468, -0.0622, -0.0688,
         -0.0259,  0.2531, -0.0512, -0.1244, -0.0617, -0.2092, -0.3486,  0.1822,
          0.5432, -0.1151, -0.3480,  0.0638,  0.0578,  0.6541, -0.1814,  0.5441,
         -0.5092, -0.4077, -0.6755,  0.5492, -0.2058,  0.0618,  0.0380,  0.1656,
         -1.1725,  0.0566, -0.5162,  0.4995,  0.3024,  0.1368,  0.0748, -0.2536,
          0.1998,  0.4431, -1.0523,  0.1185, -0.4567,  0.5207,  1.8578, -0.5082]],
       device='cuda:0') tensor(1.2804, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
122000 特征值优化 tensor(8.1970, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3386,  0.4735,  1.6394,  0.5962,  0.7459,  0.2550,  0.4428, -0.9756,
          1.8951, -0.2668,  1.9684,  1.5792,  0.6925, -0.5360,  0.5250, -0.3995,
         -0.0155, -0.4670,  0.3444, -0.6328, -0.1626,  0.2787, -0.0527, -0.3796,
         -0.0972,  0.3095, -0.3010, -0.0967,  0.0098,  0.1612, -0.1149, -0.1082,
          0.7524, -1.8823,  0.5157, -0.6557, -0.1314, -0.0186,  1.9756,  0.7769,
         -1.2247, -0.7957,  0.7318, -1.0211, -0.9362,  0.4366,  0.9730, -0.4867,
          0.2309,  0.6967, -0.0570,  0.2797,  0.9823, -0.9230, -0.0714, -0.7387,
          0.7773,  0.4625, -0.2919,  0.1134, -0.9878,  0.6464,  0.3194, -0.8922,
          2.6560, -0.4515, -0.6338, -0.5533, -0.2350, -0.1278,  0.1729,  0.7011]],
       device='cuda:0') tensor(4.1558, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
123000 特征值优化 tensor(2.3469, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8819e-02,  3.2261e-01,  7.9587e-01,  4.8586e-01,  8.0634e-02,
          1.1236e+00,  4.5084e-01, -1.0995e+00,  2.6232e+00,  1.8252e-01,
          2.2417e+00,  1.8510e+00,  1.3476e-01,  2.3259e-02, -2.1951e-02,
         -1.4301e-01, -5.3879e-02, -1.0107e-01,  3.8766e-01, -1.7510e-01,
         -9.2763e-02,  6.2049e-02, -6.5679e-07, -1.1265e-02,  7.3094e-04,
         -7.8411e-03, -2.7814e-01, -2.4911e-01, -1.4802e-02,  3.4108e-02,
         -1.6105e-02,  9.3162e-02,  4.2003e-01, -1.0666e+00,  1.0996e-01,
         -6.6268e-02, -8.1886e-02,  1.4974e-01,  1.3734e+00,  3.5480e-01,
         -5.3519e-01, -5.8505e-01, -1.7961e-01, -7.2740e-02, -4.4365e-02,
         -1.1137e-02,  2.3244e-01, -4.9746e-01,  3.0832e-01,  1.9594e-01,
         -2.9281e-01,  9.8386e-02,  3.8059e-01, -1.8436e-01, -6.0979e-02,
         -8.3107e-01,  1.0620e+00,  7.4587e-01, -1.2379e+00, -2.2724e-01,
         -3.8183e-01,  2.5000e-01,  1.4179e-01, -1.3440e-01,  3.0041e+00,
         -4.3695e-02, -2.1223e-01, -2.2093e-01,  1.4099e-01, -1.3468e-02,
          2.2753e-02,  7.2958e-01]], device='cuda:0') tensor(1.5034, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
124000 特征值优化 tensor(2.0934, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2293,  0.3951,  0.6303,  0.3315,  0.1443,  1.2586,  0.4976, -1.1137,
          2.7304,  0.1050,  2.5210,  1.8270,  0.0994,  0.0253, -0.0426, -0.0980,
          0.0297,  0.0212,  0.2812, -0.0271, -0.1088,  0.0769, -0.0583, -0.0196,
          0.1447, -0.0559, -0.2354, -0.3028,  0.0196,  0.0514, -0.0175,  0.1103,
          0.3804, -0.9670,  0.0614, -0.0808, -0.0339,  0.0407,  1.3039,  0.3659,
         -0.3114, -0.3951, -0.2892,  0.0069,  0.0692,  0.1800,  0.0464, -0.2730,
          0.2331,  0.2245, -0.1071,  0.0692,  0.2016, -0.0954,  0.1173, -0.8242,
          0.9411,  0.6017, -1.1878, -0.1152, -0.2094,  0.1640, -0.0572, -0.0599,
          2.8870, -0.0274, -0.3107, -0.0102, -0.0689,  0.1278, -0.3063,  0.5669]],
       device='cuda:0') tensor(1.3571, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
125000 特征值优化 tensor(8.6262, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5864, -0.2754,  1.0116,  0.4772, -0.9965,  0.8925,  0.1237,  1.0468,
          1.5579,  1.3111,  0.3587, -0.2132,  0.6707, -0.1553, -0.2544, -0.1619,
          0.2834, -0.3528, -0.0167,  0.0028,  1.1493,  1.1903,  0.1672, -0.0778,
         -0.0278,  0.4885, -0.1285, -0.0564, -0.7071, -0.7702,  0.2718,  0.5187,
         -0.1144,  0.4731, -0.7730,  0.5368, -1.3277,  0.6668, -0.1034, -0.2774,
         -0.2929, -1.8458,  0.2038,  0.7840,  0.5292,  0.8001, -0.0970,  1.0987,
         -1.0625, -0.4249, -0.8519, -0.8825,  0.4309, -0.8045,  0.5242, -0.2790,
          0.6021,  0.1068, -0.4394, -0.1744,  1.2117, -1.3167, -0.0295, -0.2681,
          0.4184, -0.8736,  0.6457, -0.2186, -0.0482,  0.0577,  0.5335, -0.3623]],
       device='cuda:0') tensor(5.0956, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
126000 特征值优化 tensor(2.3878, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.2164e-01,  3.1928e-01,  1.5175e+00, -5.7918e-01, -2.0978e-01,
          1.0367e+00,  4.7135e-01,  5.0362e-01,  1.7207e+00,  1.3379e+00,
          2.5197e-01,  7.6172e-01,  2.8772e-01, -1.8357e-02, -3.4610e-02,
         -9.0216e-02,  1.2928e-01, -8.2165e-02, -8.1236e-02,  1.4124e-03,
          3.8494e-01,  6.3564e-01,  2.6656e-02,  1.8295e-04, -4.7023e-02,
          1.0261e-01,  2.2388e-03, -2.7957e-02, -6.0037e-01, -6.5046e-01,
         -1.5036e-02,  3.0872e-01, -3.2907e-02,  2.2850e-01, -5.2516e-01,
          3.8219e-01, -4.7620e-01, -2.3463e-02, -1.7405e-01, -3.5830e-01,
          9.1952e-03, -9.2300e-01, -4.3293e-01,  4.0742e-01,  4.1432e-01,
          6.7831e-03,  9.8061e-02,  1.4538e+00, -5.8088e-01,  7.8439e-02,
         -1.6392e+00,  7.3355e-02,  4.0147e-01, -1.8423e-01,  5.6982e-01,
         -1.7837e-01,  4.5717e-01, -1.0367e-02, -6.1063e-01, -7.5069e-01,
          9.7440e-01, -4.0022e-01,  4.3890e-03,  5.1049e-02,  6.0226e-01,
         -4.3623e-01,  9.9523e-01, -2.3963e-01, -3.2381e-01,  2.0844e-01,
          1.1439e+00,  3.3240e-01]], device='cuda:0') tensor(1.6139, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
127000 特征值优化 tensor(2.1075, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0960, -0.1479,  1.5060, -0.7719,  0.1534,  0.9217,  0.6257,  0.5655,
          1.6531,  1.5620,  0.3540,  0.9209,  0.1268, -0.0401, -0.0249, -0.1768,
          0.1257, -0.0837, -0.0915,  0.0230,  0.1621,  0.6073,  0.0711,  0.0931,
         -0.0040,  0.1077,  0.0950,  0.0821, -0.4803, -0.6245, -0.0188,  0.1250,
         -0.0488,  0.1580, -0.4118,  0.3664, -0.2936,  0.0061, -0.2580, -0.4267,
         -0.0164, -0.7935, -0.4509,  0.1458,  0.1455, -0.1650, -0.0320,  1.4805,
         -0.5471,  0.0796, -1.5994,  0.1699, -0.0215,  0.0331,  0.5593, -0.0789,
          0.3010,  0.0299, -0.5083, -0.5997,  0.6940, -0.2816,  0.0570,  0.0779,
          0.6790, -0.2680,  0.9535, -0.1821, -0.2680,  0.1977,  1.1551,  0.3099]],
       device='cuda:0') tensor(1.0336, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
128000 特征值优化 tensor(7.7323, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0493e-01,  1.5345e+00, -9.7402e-03,  1.2256e+00,  2.2088e+00,
          8.9985e-01, -1.5437e-01,  6.9821e-03,  1.0561e+00, -9.6142e-01,
         -1.2609e+00,  1.5856e+00, -3.5526e-02,  9.9250e-01,  2.2223e-01,
          1.0785e-01, -5.4201e-02,  3.5416e-01,  2.9276e-01, -3.6379e-03,
          3.5248e-01, -7.9582e-01,  3.1766e-01, -9.6132e-04,  9.6230e-02,
          1.6574e-01,  3.0815e-02, -7.4951e-01,  2.7778e-01, -9.7991e-01,
          1.1191e+00,  5.1242e-01,  3.7132e-02,  3.4606e-02, -5.7838e-01,
         -9.4658e-01,  4.0217e-02,  2.9434e-02, -1.5716e+00,  8.4936e-02,
         -1.1852e+00,  5.9471e-01, -8.9798e-01, -9.9758e-04, -5.5150e-01,
         -4.9359e-01, -1.2951e-01,  1.9562e-01, -2.1722e-01,  8.4661e-01,
          1.4900e-02,  8.3031e-01,  9.1744e-01, -1.2971e-01,  3.6996e-01,
         -1.6697e-01,  4.6633e-01, -6.4036e-01, -4.2462e-01,  3.2176e-01,
         -7.5355e-01, -7.0982e-01, -2.8273e-01,  6.0698e-02, -2.5554e-01,
          1.0107e+00, -3.4502e-01,  3.2793e-01,  6.7058e-02,  1.1732e+00,
          5.9772e-01,  7.0135e-01]], device='cuda:0') tensor(4.7749, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
129000 特征值优化 tensor(2.3298, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.6303e-01,  9.1146e-01,  7.3449e-01,  1.3624e+00,  2.3048e+00,
          9.8993e-01,  2.0092e-01,  1.8033e-02,  1.6867e+00, -1.4361e+00,
         -3.9903e-01,  1.9065e+00,  6.6309e-03,  2.7280e-01,  2.5064e-01,
         -1.2488e-01,  1.3387e-01,  1.3026e-02,  6.3447e-03, -2.0917e-03,
          2.5219e-02, -4.7072e-01, -2.1875e-02, -4.9648e-02, -3.2214e-02,
          4.4630e-02, -5.7369e-02, -4.9053e-02,  3.5117e-02, -4.6396e-01,
          9.6294e-01,  4.4024e-01,  1.1966e-02,  4.6150e-02, -2.7281e-01,
         -5.7347e-01,  1.8674e-01, -1.7170e-02, -9.8718e-01,  3.6267e-01,
         -3.6500e-01,  3.4315e-01, -6.4388e-01,  4.3271e-01, -7.8656e-02,
         -4.0650e-01,  2.5538e-02,  1.4301e-01,  1.1529e-01,  5.8163e-01,
         -2.2070e-02,  3.5179e-01,  9.8077e-01,  8.7806e-02,  9.1408e-01,
         -4.5695e-01,  5.7948e-01, -5.2262e-01, -4.9342e-01,  4.6381e-01,
         -3.8688e-01, -2.5412e-01, -8.2754e-02,  1.6570e-02,  3.0980e-01,
          8.4996e-01, -1.8491e-01, -5.3933e-03,  3.9097e-01,  4.9085e-01,
          6.4757e-01,  2.7156e-01]], device='cuda:0') tensor(0.7912, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
130000 特征值优化 tensor(2.1116, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.9964e-01,  5.7542e-01,  1.0037e+00,  1.0419e+00,  2.2892e+00,
          6.6367e-01,  1.7067e-01,  2.7350e-02,  1.7423e+00, -1.8968e+00,
         -3.7466e-01,  1.9048e+00,  3.7365e-03,  2.2031e-01,  2.3088e-01,
         -1.5406e-01,  1.9647e-01, -2.8835e-02, -2.8231e-02, -7.4528e-03,
          2.4088e-02, -4.1310e-01, -3.1694e-02, -3.7546e-02,  4.5221e-02,
         -2.1605e-02, -2.2376e-02,  1.8483e-02, -6.5259e-04, -3.9556e-01,
          9.5049e-01,  3.7309e-01, -7.1779e-02,  3.5464e-02, -3.2891e-01,
         -3.9866e-01,  1.9451e-01, -4.8792e-03, -8.8187e-01,  4.9156e-01,
         -2.3746e-01, -1.3224e-01, -4.3710e-01,  1.9702e-01,  9.8005e-02,
         -2.6407e-01,  4.1100e-02, -4.1292e-02,  2.9175e-01,  3.3082e-01,
         -3.1047e-02,  2.7611e-01,  9.5633e-01,  4.9623e-02,  6.7300e-01,
         -6.7297e-01,  2.8360e-01, -1.8803e-01, -4.7180e-01,  4.0240e-01,
         -3.9933e-01, -2.4624e-01,  1.4494e-02, -6.8225e-03,  4.0383e-01,
          6.4464e-01, -3.9252e-01, -1.3366e-01,  2.7554e-01,  4.5284e-01,
          4.8202e-01,  1.6038e-01]], device='cuda:0') tensor(0.8772, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
131000 特征值优化 tensor(8.9400, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.6078,  0.2538,  1.4777, -1.1015,  2.5259,  2.1493,  0.5336, -0.9823,
          0.4429, -0.6009,  0.9381,  0.7153, -0.3403,  0.4882, -0.4450,  0.4314,
          0.1497,  0.8139, -0.5595, -0.0228, -1.0096, -0.8430,  0.0268,  0.0095,
         -0.1738,  1.3791, -0.9888,  0.6983,  0.7707,  0.4532, -0.8439, -0.0981,
          0.0675,  0.5992,  1.2372,  0.3795, -0.0348, -0.0709,  0.3253, -0.9064,
         -0.6140,  0.2318,  0.0176,  0.0878,  0.9510,  1.2311,  0.1519,  1.5540,
         -1.3178,  0.5476, -0.5715, -0.4631, -0.5981,  1.0769,  0.4146,  0.5020,
         -0.2261,  1.4363,  0.0191, -0.0067, -1.0288,  0.7923,  0.8427, -0.5406,
         -0.2412,  0.2484, -0.6718,  0.3760, -0.5477,  0.2418,  0.6515, -0.0923]],
       device='cuda:0') tensor(4.5488, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
132000 特征值优化 tensor(2.3092, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.0426e-02,  5.7185e-01,  2.0166e+00, -1.7009e+00,  1.7552e+00,
          2.8651e+00,  6.5615e-01, -5.9840e-01,  1.0945e+00, -6.4159e-01,
          6.9047e-01,  1.2798e+00, -2.6863e-01,  3.0414e-02, -3.6911e-02,
          7.3113e-03, -3.1258e-02,  7.1291e-02,  6.1041e-02, -4.3983e-04,
         -5.1814e-01, -4.2700e-01,  7.9846e-02, -1.8943e-01,  2.2713e-01,
          5.8920e-01, -1.5814e-01,  1.0362e-01,  4.8249e-01,  4.2346e-01,
         -4.4388e-01,  3.2569e-02, -2.4915e-02,  8.2213e-01,  4.8344e-01,
          2.5213e-01,  8.5800e-03,  4.7376e-02,  3.6267e-01, -4.0556e-01,
         -1.0619e-01,  4.5197e-01,  2.1048e-01, -3.4927e-02,  5.3937e-01,
          6.8872e-01,  1.7409e-01,  9.0983e-01, -8.2120e-01,  6.3585e-01,
         -5.7600e-01, -1.1672e-01, -4.6638e-01,  6.8253e-01, -1.3214e-03,
         -1.7447e-03,  4.9166e-01,  7.1736e-01,  1.7706e-01, -5.0462e-02,
         -4.3918e-01,  1.5675e-01,  4.2347e-01,  3.2160e-02,  4.2724e-01,
         -3.3123e-01, -8.3446e-01,  1.9583e-01, -7.3496e-01,  5.7058e-02,
          4.2804e-01,  1.6413e-01]], device='cuda:0') tensor(1.4988, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
133000 特征值优化 tensor(2.1392, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0627,  0.4130,  2.1939, -1.7498,  0.7946,  2.7759,  0.6497, -0.1378,
          1.1278, -0.5429,  0.7450,  1.3367, -0.1774, -0.0145, -0.0664, -0.0164,
         -0.0226,  0.0255,  0.0169, -0.0102, -0.4538, -0.3483,  0.0717, -0.0995,
          0.3008,  0.4834,  0.0344,  0.0797,  0.3349,  0.3356, -0.0883, -0.0209,
          0.0106,  0.7554,  0.3920,  0.2587,  0.0270, -0.0031,  0.3622, -0.3685,
         -0.0528,  0.3577,  0.0714, -0.0279,  0.5201,  0.5097,  0.2034,  0.7379,
         -0.5572,  0.3219, -0.4827,  0.0097, -0.3855,  0.2725, -0.0077,  0.0127,
          0.4786,  0.7321,  0.4423, -0.3003, -0.1486,  0.1464,  0.1036, -0.0210,
          0.5148, -0.3138, -0.6827,  0.2065, -0.4038,  0.1009,  0.2579,  0.1210]],
       device='cuda:0') tensor(1.3286, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
134000 特征值优化 tensor(7.1951, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.9842e-02, -1.0451e+00,  1.1072e+00, -3.6287e-02,  1.6959e-02,
          1.2247e+00,  9.2301e-01, -3.3255e-02, -1.4063e-01, -8.9632e-01,
         -3.9461e-01,  1.9627e+00, -1.2890e+00, -1.7105e-01,  1.0342e+00,
          4.5892e-01,  3.7314e-01, -5.3727e-01,  1.0829e+00, -9.8206e-01,
         -4.1498e-01,  1.7942e-01,  4.0118e-01,  3.1485e-01,  2.9231e-01,
          6.2448e-02,  1.1001e-01, -1.6453e-01,  8.9491e-02, -3.0452e-01,
          5.2343e-01,  9.6654e-02, -1.7565e-03, -6.7128e-02, -4.8842e-01,
         -3.6532e-01,  1.0641e-01,  5.2519e-02, -1.2677e-02,  2.4585e-02,
          2.3838e-01,  1.7931e-01, -1.0220e-01, -7.3874e-01, -1.0313e+00,
          5.1222e-01,  8.4615e-01,  5.1954e-01,  1.0445e+00, -5.2195e-01,
          5.8841e-01, -7.0003e-01, -1.7064e-01, -1.8814e-01,  1.3917e-01,
         -2.5070e-01,  1.8975e-01,  1.6346e-01, -4.1636e-02, -6.7600e-01,
         -2.0540e+00,  3.8214e-01, -1.8905e-01, -1.8618e-01,  1.7232e-01,
         -4.2927e-01,  4.1072e-01,  1.4052e-01,  1.0182e-01, -1.3383e-01,
         -6.0444e-01,  4.1264e-01]], device='cuda:0') tensor(4.1492, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
135000 特征值优化 tensor(2.1911, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.6583e-01, -4.8186e-01,  2.0445e-01, -3.1775e-01, -5.7400e-02,
          8.5128e-01,  1.3416e+00,  4.7038e-01,  3.0383e-01, -8.1819e-01,
          7.8456e-02,  1.6304e+00, -4.3040e-01, -2.3637e-01,  3.7822e-01,
          2.7430e-01,  1.1338e-01, -1.8563e-01,  2.7786e-01, -4.4048e-01,
         -2.3977e-01,  1.4477e-01,  2.9265e-02, -1.2125e-02, -7.0139e-03,
          8.7388e-02,  6.7044e-02, -3.1139e-02,  5.5462e-02, -1.6335e-01,
          2.9985e-01, -1.3584e-04, -2.0857e-02, -1.2679e-01, -2.8946e-01,
         -2.0930e-01,  1.8689e-01,  4.6710e-02, -5.2746e-03, -4.5243e-02,
         -1.3396e-02,  1.1876e-01,  5.2051e-01, -6.3171e-02, -1.8656e-01,
          6.0401e-01,  3.2010e-01,  1.0038e-01,  2.6672e-01,  2.1759e-01,
         -4.7503e-02, -2.3072e-01, -3.5726e-01,  1.0621e-01, -3.2078e-01,
         -8.3506e-02,  1.5463e-01,  1.2901e-01,  3.6180e-01, -3.7601e-01,
         -1.5281e+00,  3.7094e-02, -3.1761e-01, -3.4962e-02,  2.2106e-01,
         -1.6538e-01,  2.3004e-02,  1.3072e-01, -1.7492e-01,  6.0703e-02,
         -6.3509e-01,  1.8855e-01]], device='cuda:0') tensor(0.8659, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
136000 特征值优化 tensor(2.0715, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7326, -0.3650,  0.0325,  0.0879, -0.2998,  0.5246,  1.3736,  0.5772,
          0.4806, -0.6669,  0.2431,  1.3977, -0.3769, -0.1436,  0.1993,  0.3955,
          0.3045, -0.0988,  0.1932, -0.3707, -0.1729,  0.0573, -0.0050,  0.0096,
         -0.0520, -0.0118,  0.0121,  0.1014,  0.0770, -0.0783,  0.2256,  0.0205,
         -0.0493, -0.0124, -0.2477, -0.2466,  0.1900, -0.0346, -0.0084, -0.0230,
         -0.0209,  0.0236,  0.4983, -0.0616, -0.1381,  0.5119,  0.2931,  0.1457,
          0.1501,  0.1293, -0.1645, -0.1037, -0.4733,  0.0784, -0.2067, -0.2239,
          0.1964,  0.0137,  0.1895, -0.2354, -1.4483,  0.0319, -0.2522,  0.0560,
          0.1535, -0.1210, -0.0637,  0.1599, -0.2974,  0.1474, -0.3304, -0.0525]],
       device='cuda:0') tensor(1.0006, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
137000 特征值优化 tensor(5.4154, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9654, -0.7347,  2.2841,  0.2724,  0.2844,  0.1246,  2.5438, -0.2007,
          0.0444,  0.7820,  0.8031,  0.6796,  0.1507, -0.0141, -0.0030,  0.0283,
          0.0565, -1.2961, -0.1466,  0.4506, -1.2130,  0.8584, -0.1024, -0.2492,
          0.4657, -0.0217, -0.1891,  0.8316, -0.0332,  0.6427, -0.1909,  0.2505,
         -0.1642,  0.2195, -0.2346,  0.6730, -0.9571,  0.0932,  0.0601,  0.6434,
         -0.0458, -0.1120,  2.2013, -1.1096,  1.4217,  1.4119, -0.4254, -0.6035,
          0.4636,  0.7855,  0.6036,  0.4165,  0.0311, -0.6244,  0.1354, -0.4114,
          0.6052, -0.3048, -0.1428, -0.7455,  0.7517,  0.5088,  0.2725, -0.3642,
          0.6351,  0.2944,  0.6071,  0.2166, -0.7819,  0.0207,  0.3869,  1.3390]],
       device='cuda:0') tensor(2.5907, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
138000 特征值优化 tensor(2.2201, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3279e+00, -1.6478e-01,  2.8259e+00,  5.0702e-01,  7.0166e-02,
          1.3675e-01,  1.8536e+00, -8.4041e-01,  2.7519e-01,  9.5627e-01,
          1.1253e+00,  1.1741e+00, -4.8619e-02,  2.1471e-02,  1.8279e-02,
         -6.0052e-02, -1.8132e-01, -5.4323e-01,  1.3518e-01,  3.8999e-01,
         -7.9387e-01,  6.3342e-01, -8.7184e-02, -2.1203e-01,  2.2235e-01,
          1.4899e-01, -3.2798e-01,  3.7360e-01,  1.6418e-02,  6.0873e-01,
         -1.8112e-02, -2.2571e-03, -2.8180e-02, -1.6259e-02, -1.8563e-01,
          2.8189e-01, -5.4234e-01,  1.6056e-01,  7.0907e-02,  2.7485e-01,
         -2.5430e-02,  4.5596e-02,  1.0747e+00, -1.5001e+00,  1.5702e+00,
          1.3264e+00, -3.9545e-01, -7.8143e-01,  5.8992e-01,  5.9858e-01,
          4.6770e-01,  4.0123e-01,  1.4459e-02,  1.7190e-02,  7.5431e-02,
          2.1640e-02,  6.6972e-01, -3.3651e-01, -1.8812e-01, -5.3653e-01,
         -3.4974e-01,  6.3703e-01,  2.4594e-01, -1.8239e-01,  1.6208e-01,
          5.8500e-02,  4.7342e-01,  1.7448e-01, -6.8758e-01,  2.8888e-01,
          4.9638e-01,  6.6571e-01]], device='cuda:0') tensor(1.0541, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
139000 特征值优化 tensor(2.1023, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4118e+00,  2.9254e-02,  2.7036e+00,  5.7657e-01,  1.5689e-01,
          1.2678e-01,  1.6124e+00, -1.0817e+00,  3.1316e-01,  9.7997e-01,
          1.0446e+00,  1.2043e+00, -1.3431e-01, -3.0608e-02,  2.3194e-03,
         -2.2417e-01, -3.8033e-01, -3.8250e-01,  1.8129e-01,  4.7347e-01,
         -6.7785e-01,  5.8153e-01, -4.5008e-02, -2.3347e-02,  3.4908e-01,
          2.7561e-01, -2.8780e-01,  3.3756e-01,  6.1242e-03,  6.0518e-01,
         -1.7413e-02, -3.6582e-02, -3.2906e-02, -1.8110e-02, -1.4004e-01,
          2.3500e-01, -3.0092e-01,  1.5861e-01, -2.5771e-02,  1.5670e-01,
         -9.8721e-02,  9.9287e-02,  8.4807e-01, -1.4361e+00,  1.2923e+00,
          1.2156e+00, -2.1512e-01, -7.7333e-01,  5.4727e-01,  5.4702e-01,
          4.1126e-01,  4.0481e-01,  5.2490e-02,  4.6218e-03,  3.3164e-02,
          4.6320e-02,  3.5696e-01, -1.4471e-01, -1.7180e-01, -3.6193e-01,
         -4.7116e-01,  5.1355e-01,  2.7791e-01, -2.7521e-01,  1.9346e-01,
          3.2924e-02,  4.0589e-01,  2.2324e-01, -4.3518e-01,  3.4135e-01,
          4.6467e-01,  6.0965e-01]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
140000 特征值优化 tensor(8.5549, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5934, -0.8080,  1.3568, -0.7150, -0.4088, -0.5977, -0.0829, -0.1795,
         -1.8755,  0.4448,  1.1921,  0.2596, -0.9661,  1.1499,  0.5802, -0.4961,
         -0.2253, -0.6754,  0.4422, -0.5846,  0.2862,  0.0248,  0.7617, -0.1566,
         -0.4536,  0.2209, -0.2446,  0.2397, -0.0953,  0.2887, -0.7499,  0.4249,
          0.4288, -0.0696, -0.0704, -0.1674,  0.4113,  0.3162,  0.4905,  0.3335,
          1.2453,  0.4279, -1.1224,  0.7806, -0.0834, -0.2577, -0.2418,  0.3709,
         -0.3625,  0.6892,  1.9395,  0.2282,  1.7060, -0.1400,  0.0205, -0.3981,
         -0.4732,  0.4241, -0.4359, -0.0721, -0.0363,  0.0697, -0.3386,  0.8092,
         -0.4500,  1.2006, -0.5067,  0.6522,  0.7691,  0.2904,  1.1087,  0.6237]],
       device='cuda:0') tensor(5.5167, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
141000 特征值优化 tensor(2.1935, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1366, -0.7075,  1.7994, -0.6506,  0.1723, -0.1969, -0.0593,  0.1702,
         -1.0878,  0.7897,  1.6305,  0.7308, -0.2944,  0.3002, -0.0549, -0.0030,
         -0.0239, -0.1208,  0.1058,  0.0055,  0.1541,  0.1632,  0.0778, -0.0262,
         -0.0597,  0.0759, -0.1888,  0.1705, -0.4828,  0.1955, -0.1114,  0.1062,
          0.4832, -0.0230,  0.0355, -0.0204, -0.0033,  0.1115,  0.1864,  0.0941,
          0.8870,  0.4841, -0.3909,  0.1915,  0.2515,  0.0870, -0.1810,  0.3491,
         -0.6874,  0.1626,  1.4799, -0.2123,  0.5370, -0.1572,  0.1298, -0.5368,
         -0.2469,  0.1533, -0.2750,  0.2093, -0.0776,  0.0421, -0.4783,  0.3127,
          0.0999,  0.3472,  0.1638,  0.2463,  0.7653,  0.1474,  0.4891,  0.1138]],
       device='cuda:0') tensor(1.6443, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
142000 特征值优化 tensor(11.4380, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-6.2075e-01, -7.1070e-01, -3.4354e-01,  2.0615e+00, -8.4104e-01,
         -6.9819e-02,  1.7867e-01, -7.4537e-01,  9.6762e-03,  3.8747e-02,
          9.0415e-01,  1.0285e+00,  6.3717e-02,  4.9860e-01,  1.2043e-01,
          1.9722e-01,  3.3330e-02, -6.4135e-01,  1.1870e+00, -3.7642e-01,
         -5.5673e-01, -2.5917e-01, -5.0430e-02, -2.1154e-01, -3.4424e-01,
         -1.9416e+00, -7.9293e-01,  7.2943e-01, -1.0453e+00, -7.1487e-01,
          1.1418e+00, -2.3612e-01,  9.7452e-01,  7.2254e-01, -2.0652e-01,
          4.5500e-01, -3.4035e-01,  7.6767e-01, -1.0177e+00,  1.0728e+00,
         -2.8344e-01, -1.1932e-01,  1.3371e-01, -6.7657e-01,  3.7491e-01,
          9.8822e-01,  1.7826e-03,  1.7963e+00, -1.3726e+00,  2.6283e-01,
         -1.2664e-01,  2.4365e-01,  8.4215e-02,  6.2161e-01,  3.8983e-02,
          3.5649e-02, -1.0217e+00, -7.5910e-01,  5.6706e-01,  4.1219e-01,
         -2.8220e-01, -1.0902e-01,  9.9604e-01, -7.1814e-01, -1.0936e+00,
         -2.3503e-01,  4.3755e-01, -6.1193e-01,  1.5208e-01, -1.4114e+00,
          7.1597e-01,  2.5054e-01]], device='cuda:0') tensor(5.9202, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
143000 特征值优化 tensor(2.4930, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9917e-01, -6.7920e-01,  4.5139e-01,  1.5904e+00, -3.1316e-01,
          3.9604e-01,  1.1117e-01, -8.0837e-01,  8.0195e-01, -5.9049e-01,
          1.5678e+00,  1.6964e+00,  2.2470e-02,  1.8697e-02, -3.4670e-02,
         -5.9854e-02, -9.0161e-02, -3.4964e-01,  5.4753e-01,  1.3418e-02,
         -4.3060e-02, -2.3226e-01, -2.9050e-02,  1.6450e-01,  2.0990e-01,
         -8.3848e-01, -2.1085e-02,  5.1460e-02, -5.2370e-01, -2.2710e-01,
          5.6535e-01, -6.9458e-02,  5.2606e-01,  2.4610e-01, -4.0332e-02,
          2.6904e-01, -3.3660e-02,  1.0645e-03, -3.2611e-01,  4.1923e-01,
         -2.4352e-01, -3.3603e-01, -2.6853e-01,  1.6336e-01,  1.8632e-01,
          4.2466e-01, -1.4962e-01,  1.3861e+00, -1.1367e+00,  4.3726e-01,
          2.4266e-01, -8.3597e-02,  5.4524e-01,  1.5776e-01,  2.6625e-01,
          6.4451e-01, -5.3530e-01, -1.6104e-01,  1.5496e-01,  6.9016e-01,
         -2.0045e-01,  8.1322e-02,  7.2364e-01, -2.9405e-01, -4.6658e-01,
          3.7421e-01,  9.8155e-03, -2.6222e-01,  8.5843e-01, -8.9255e-01,
          9.3769e-01,  1.0684e-01]], device='cuda:0') tensor(1.8079, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
144000 特征值优化 tensor(2.0987, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0921e-01, -1.7212e-01,  6.4744e-01,  1.5684e+00, -3.1392e-01,
          3.4968e-01,  1.8322e-01, -4.5574e-01,  9.3330e-01, -6.8670e-01,
          1.6026e+00,  1.7489e+00,  1.6085e-03,  9.7148e-02, -8.6587e-02,
         -5.9187e-02, -3.5929e-02, -2.6707e-01,  2.6678e-01, -9.0168e-03,
         -2.3515e-02, -2.0115e-01, -6.9943e-02,  2.1329e-01,  2.3017e-01,
         -3.4191e-01, -2.6722e-02,  2.6592e-02, -1.7268e-01, -1.8396e-01,
          3.7542e-01, -4.3411e-02,  4.8097e-01,  2.4618e-01,  3.5595e-02,
          3.3978e-01, -3.2812e-02,  1.0390e-03, -2.3014e-01,  3.4120e-01,
         -2.5463e-01, -4.2362e-01, -1.5340e-01,  1.2829e-01,  9.8365e-02,
          1.3261e-01, -7.7477e-02,  1.1223e+00, -6.8718e-01,  1.1043e-01,
          5.3108e-01, -3.0669e-01,  5.1791e-01,  5.4286e-02,  2.7568e-01,
          5.7365e-01, -5.3300e-01, -9.4321e-02,  4.5079e-02,  6.7844e-01,
         -2.4106e-01,  1.3251e-01,  4.6160e-01, -2.3846e-01, -5.0510e-01,
          3.5591e-01, -1.0903e-01, -1.4830e-01,  8.3855e-01, -8.1277e-01,
          8.0439e-01,  1.9049e-02]], device='cuda:0') tensor(1.3199, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
145000 特征值优化 tensor(6.6285, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.8398e+00,  7.4801e-01,  1.2602e+00, -4.8829e-01,  1.4005e+00,
          7.7159e-01,  5.8517e-01,  8.5193e-01,  5.9802e-02,  6.1260e-01,
         -1.0361e+00,  8.3439e-01, -1.0955e-01, -1.3402e+00, -3.1835e-01,
          5.6812e-01,  1.4727e-01, -2.0429e-01,  3.2563e-01, -5.1103e-01,
         -9.6621e-01, -1.6723e-01,  2.0400e-01,  1.9532e-02,  2.8518e-01,
          9.4744e-01, -3.1430e-01,  2.5131e-01, -9.0980e-02,  1.2696e-01,
          9.9761e-01, -1.1787e+00,  3.6902e-01,  7.9268e-02,  1.0012e+00,
         -2.9567e-01,  6.7353e-01, -2.4871e-01, -1.2688e-01,  1.4309e-01,
         -6.2858e-02, -1.0862e-01,  1.8408e-01, -1.4064e+00,  1.5589e+00,
          3.2789e-03, -5.1189e-01, -4.6624e-01,  1.6960e+00, -7.5939e-01,
          2.2172e-01, -4.1572e-01,  8.6791e-02,  4.4966e-01, -4.1417e-01,
         -1.0333e-01, -8.3721e-01,  6.3024e-01,  5.3019e-01,  3.0287e-02,
          2.0275e-01,  5.1241e-01, -1.3434e-01, -1.7142e-01, -4.8914e-01,
          6.3719e-01,  1.7935e-01, -6.7657e-01, -3.4928e-01, -7.0908e-01,
         -3.4972e-01,  3.0895e-01]], device='cuda:0') tensor(0.2137, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
146000 特征值优化 tensor(2.2462, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.2195,  0.9342,  0.7673, -0.3781,  1.8514,  0.8519,  1.0121,  0.3427,
          0.5826,  0.5556, -0.7084,  0.7525, -0.0625, -0.7044, -0.2552,  0.2714,
         -0.1284,  0.1037,  0.0736, -0.6066, -0.7542, -0.1019,  0.0621, -0.0448,
          0.1090,  0.2101, -0.0838,  0.0452,  0.0432,  0.0795,  0.6862, -0.3929,
          0.0626,  0.0294,  0.2728, -0.1569,  0.3665, -0.1218, -0.1788,  0.0701,
          0.0105, -0.0527,  0.3718, -1.0182,  1.4234, -0.0047, -0.3123, -0.2133,
          0.7498, -0.3024,  0.1726, -0.1740,  0.2742, -0.0235, -0.6144,  0.2871,
         -0.0915,  0.0612,  0.0527,  0.0371,  0.3221,  0.1619,  0.1070,  0.0585,
          0.2643,  0.1014, -0.1659, -0.2628, -0.0353, -0.2769, -0.1578,  0.1508]],
       device='cuda:0') tensor(1.4145, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
147000 特征值优化 tensor(2.0972, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.2313,  1.1187,  0.7405, -0.1794,  1.8434,  0.7314,  0.8313,  0.3244,
          0.4512,  0.6289, -0.5289,  0.4798, -0.1535, -0.6104, -0.1048,  0.2894,
         -0.1852, -0.0075, -0.0093, -0.6133, -0.7172, -0.0606,  0.0070, -0.0324,
          0.0387,  0.1139, -0.0568,  0.0253,  0.0633,  0.0387,  0.6188, -0.3499,
         -0.1129,  0.0314,  0.1395, -0.0173,  0.2275, -0.1290, -0.1330,  0.0237,
         -0.0069, -0.0069,  0.1838, -0.8692,  1.1856, -0.1358, -0.2043, -0.2006,
          0.2980,  0.0395,  0.0452, -0.0548,  0.2682, -0.0758, -0.3465,  0.4890,
         -0.0574,  0.1074, -0.0062, -0.0537,  0.0365,  0.0322, -0.0537,  0.1421,
          0.1236,  0.1156, -0.2618, -0.1478, -0.0051, -0.2022, -0.1526,  0.2065]],
       device='cuda:0') tensor(0.8972, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
148000 特征值优化 tensor(8.4197, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-8.1492e-01,  3.0696e-01, -1.7319e-01,  6.5973e-01, -4.3500e-01,
          1.1499e+00,  1.3270e-01,  6.2498e-01,  7.1623e-01, -7.1632e-02,
          9.6498e-02, -8.4925e-01, -2.3382e-01,  1.8364e-01,  2.1584e+00,
         -1.7862e-01,  7.7763e-01, -1.6903e-01, -1.2169e-01, -1.1769e-03,
         -1.0154e-01,  1.8017e-01,  6.6899e-02,  3.0627e-01, -8.8599e-01,
          4.6282e-01, -2.3898e-01, -8.6707e-01,  3.2387e-02,  4.1628e-02,
         -3.7968e-01,  4.2393e-01, -2.5792e-01, -1.0746e+00,  1.3486e+00,
         -2.9018e-01,  9.0466e-03, -1.2869e-01,  1.5235e-01, -4.7912e-01,
         -1.3027e+00,  6.9520e-02,  3.9780e-01,  4.4025e-01, -4.4318e-01,
         -2.9349e-01,  2.7531e-01,  4.7814e-01, -8.4990e-01,  1.9765e-01,
          1.0339e-01, -6.4320e-01, -1.2275e-02, -2.0587e-01, -1.8040e-01,
         -5.0300e-02, -3.3868e-01,  4.2018e-01,  7.8698e-01,  2.2567e-01,
          4.7605e-01, -3.9741e-01, -2.3287e-01,  2.3311e-01,  4.9269e-01,
         -4.2139e-01,  9.3222e-02, -7.6618e-01, -2.9392e-01,  6.7236e-01,
          3.3118e-01, -7.4467e-01]], device='cuda:0') tensor(5.2768, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
149000 特征值优化 tensor(2.5156, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1144,  0.2665, -0.0759, -0.1021,  0.6258,  1.6957,  0.2005,  0.6861,
          1.2062,  0.5345,  0.8945, -0.5827, -0.0230,  0.0934,  1.1422,  0.0273,
          0.0344,  0.0038,  0.0095, -0.0361, -0.0028,  0.0967,  0.2448,  0.3081,
         -0.2479,  0.1757, -0.2420, -0.3513,  0.0100,  0.0679, -0.0182,  0.1879,
          0.0075, -0.5071,  0.7767, -0.4018, -0.0315, -0.2021,  0.0335, -0.0072,
         -0.7536,  0.1937, -0.1553,  0.1108,  0.1113, -0.1497,  0.0154,  0.0823,
         -0.7234,  0.6313,  0.3265, -0.2562, -0.1440, -0.0936, -0.1839, -0.1314,
          0.2647, -0.1120,  0.7203,  0.3194,  0.4204, -0.0519,  0.1211,  0.1591,
          1.0738, -0.7790,  0.8384, -0.5926,  0.1582,  0.7685,  0.1094, -0.3272]],
       device='cuda:0') tensor(1.8496, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
150000 特征值优化 tensor(2.0889, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1797e-01,  2.1901e-01,  1.1050e-01,  6.6068e-02,  1.0054e+00,
          1.7146e+00,  2.7278e-01,  5.5576e-01,  1.1819e+00,  5.9348e-01,
          1.0933e+00, -4.8370e-01, -1.3246e-02,  2.2049e-01,  6.2802e-01,
          1.6584e-02,  1.8710e-02,  1.7476e-02,  1.5128e-02, -1.9280e-02,
          1.5504e-02,  3.1126e-02,  8.2321e-03,  4.3396e-02, -1.6858e-02,
          4.6796e-03, -3.1748e-03, -4.9269e-02, -4.2108e-02,  2.7787e-03,
         -1.7156e-02,  8.6977e-02, -1.6247e-02, -4.2764e-01,  7.6939e-01,
         -4.0114e-01, -6.5504e-02, -2.1085e-01,  9.6532e-02,  4.5727e-02,
         -5.9940e-01,  2.0616e-01, -2.2329e-01,  1.2347e-01,  1.3622e-01,
         -9.2515e-02,  4.2484e-02, -5.8750e-02, -5.9413e-01,  8.2044e-01,
          1.8020e-01, -1.1273e-01, -4.7626e-01,  7.9951e-04, -5.4989e-02,
         -7.9113e-02,  2.9505e-01, -2.0657e-01,  9.9116e-01,  1.4364e-01,
          2.0704e-01,  9.3981e-02,  3.0984e-01,  2.0941e-01,  1.1058e+00,
         -6.9505e-01,  8.0138e-01, -5.5064e-01,  2.7196e-01,  8.0881e-01,
          1.3899e-02, -2.9688e-01]], device='cuda:0') tensor(0.8004, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
151000 特征值优化 tensor(5.7613, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.8061e-01, -5.3747e-01,  1.3720e+00,  3.4797e-01, -2.5598e-01,
         -4.4517e-01,  6.5548e-01,  1.0185e+00,  3.8555e-01, -6.1279e-01,
          4.6587e-01, -7.1809e-01, -1.7085e-01,  1.7971e-02,  2.5481e-02,
         -1.5128e-02, -1.4528e-01,  3.6512e-01,  5.0697e-01,  5.7944e-01,
         -9.2923e-02,  1.7302e+00, -2.3538e-01, -3.0708e-02, -2.3213e-02,
         -6.2076e-02,  5.0557e-01,  8.7317e-02, -3.8458e-02,  8.5845e-02,
          1.9322e-01, -4.8986e-02,  2.7516e-01,  9.3321e-04,  1.3540e-02,
         -8.7552e-03, -1.3168e-01, -1.3375e-02, -3.1622e-01, -1.2320e-01,
          4.1076e-01,  1.1320e+00,  2.6115e-01,  1.0558e-01, -2.5978e-01,
          4.1420e-01, -4.3729e-01, -6.5411e-02,  8.4616e-01,  8.4176e-01,
          2.8239e-02,  7.1189e-02,  6.1540e-01, -1.2083e-01, -2.3091e-01,
         -5.5983e-03, -4.5869e-02, -9.2904e-02, -1.0984e-01,  4.8045e-03,
         -5.3214e-01, -3.5573e-01, -1.8057e-01, -2.5320e-01,  4.4812e-01,
          6.9849e-01, -4.6692e-02, -2.2422e-01,  6.7245e-01, -1.0981e+00,
          1.0131e+00,  4.9862e-01]], device='cuda:0') tensor(3.4400, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
152000 特征值优化 tensor(2.3008, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.0315e-01, -2.9171e-01,  2.0155e+00,  1.2629e-01,  6.1910e-02,
         -1.1840e-01,  5.1286e-01,  5.0107e-01,  6.7123e-01, -3.9866e-01,
          3.4705e-01, -3.0572e-02, -1.8227e-01,  3.7987e-02, -5.5550e-02,
          1.5525e-01, -2.4714e-01,  1.5589e-01,  1.2603e-01,  3.4491e-01,
         -8.5719e-04,  1.1562e+00,  1.7346e-02,  1.3836e-02,  1.7301e-02,
          4.4896e-02,  1.5802e-01, -8.2388e-02, -1.6311e-02,  2.0910e-01,
          2.7506e-02, -4.2132e-02,  6.7985e-02, -2.2172e-02,  2.8553e-02,
         -1.4404e-02, -1.3541e-01, -4.2109e-02, -2.0604e-01, -3.7651e-02,
         -2.4979e-02,  4.2254e-01,  1.0004e-02,  4.9233e-02, -3.1454e-01,
          2.2265e-01, -3.0979e-01,  7.2901e-02,  9.1034e-01,  9.0401e-01,
          3.5838e-01,  2.0731e-01, -1.4251e-01,  1.5321e-01, -6.9922e-02,
          6.3198e-03, -1.8746e-01,  1.2913e-01, -3.1249e-02,  6.4133e-02,
         -6.4894e-01, -1.1677e-02, -1.6488e-01, -1.7513e-01, -3.1722e-01,
          4.0629e-01,  4.6999e-02, -1.3131e-01,  4.2351e-01, -3.9896e-01,
          1.0456e+00,  2.9487e-01]], device='cuda:0') tensor(1.7178, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
153000 特征值优化 tensor(2.1290, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3871, -0.2607,  2.0578,  0.1237,  0.3249,  0.1324,  0.5079,  0.0543,
          0.8195, -0.4768,  0.0881,  0.0590, -0.1479, -0.0195, -0.0126,  0.0527,
         -0.1865,  0.0539,  0.0489,  0.1389, -0.0077,  1.0704, -0.0475,  0.0164,
          0.0801,  0.2945,  0.1643, -0.2042, -0.0097,  0.2220,  0.0258, -0.0053,
          0.0322, -0.0223,  0.0650,  0.0097, -0.1206, -0.0707, -0.1289, -0.0511,
         -0.0686,  0.3023, -0.2149,  0.1425, -0.0426,  0.0386, -0.2134, -0.1080,
          0.8823,  0.8626,  0.4187,  0.2064, -0.2414,  0.2005, -0.2313, -0.1375,
         -0.2250,  0.1438,  0.0424,  0.0984, -0.5981,  0.1547, -0.1179, -0.0406,
         -0.2076,  0.2409, -0.0037, -0.0737,  0.0211, -0.0609,  0.8975,  0.2570]],
       device='cuda:0') tensor(1.3358, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
154000 特征值优化 tensor(7.7097, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.2741e-01, -3.9894e-01,  1.4036e+00,  1.6813e-01, -5.4224e-01,
          2.4395e-01, -5.0044e-01, -7.0563e-01,  6.4468e-01,  3.1469e-01,
          1.8060e+00,  1.5026e+00, -1.2890e-02, -2.5161e-02, -2.5866e-01,
          7.1601e-01,  1.9486e-01,  1.3031e-01, -1.1088e+00,  6.3498e-01,
          1.4486e-03, -5.1662e-02,  1.2581e+00,  6.7641e-04,  8.3777e-01,
          5.0424e-01,  3.0313e-02, -9.3217e-01, -3.9776e-01,  1.0182e+00,
         -5.6458e-01,  4.6642e-01,  1.8196e-01, -4.9569e-02,  2.4990e-02,
          4.3723e-02, -1.7702e+00,  3.2110e-01,  2.2238e-01,  6.0395e-01,
          2.1216e-01,  3.3758e-01,  1.1038e+00, -7.4636e-01, -7.5184e-01,
          4.1873e-01, -2.5718e-01,  1.6166e+00, -1.4117e-01,  2.7322e-01,
          2.2689e-01, -6.3777e-01, -5.6500e-01, -9.0104e-01,  1.2337e-01,
         -7.9032e-01, -3.9822e-01, -1.1701e-01, -6.4068e-01, -4.7021e-01,
          3.3376e-01, -7.5528e-01, -5.3616e-01,  4.0143e-01,  2.2297e-01,
          1.9689e-01, -3.8669e-01,  1.6494e-02, -1.9771e-01,  6.1126e-01,
          7.3855e-02,  5.7098e-01]], device='cuda:0') tensor(3.8169, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
155000 特征值优化 tensor(2.2553, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2831e-01, -9.9472e-02,  1.7575e+00,  1.0416e-01, -2.8236e-01,
          5.9893e-01,  4.3494e-01, -1.1993e+00,  2.8768e-01, -4.9259e-02,
          2.2172e+00,  1.1648e+00, -1.7776e-02,  1.2074e-02, -1.0130e-02,
          1.2619e-01,  1.6052e-02,  3.2256e-02, -2.7206e-01, -1.5869e-03,
          3.6403e-03,  9.8420e-02,  4.7429e-01,  1.5148e-01,  2.2042e-01,
          5.3154e-02, -1.9415e-01, -3.2874e-01, -5.0595e-01,  6.9757e-01,
         -9.9522e-02,  1.4406e-01,  1.2652e-01, -2.2414e-02, -2.0053e-03,
          2.9354e-02, -8.3604e-01,  2.6969e-01,  2.4971e-01,  2.6129e-01,
          1.2582e-01,  1.8003e-01,  8.5448e-02, -3.7495e-02, -3.7974e-02,
          2.4444e-01, -1.0473e-01,  9.6747e-01, -2.4236e-01,  3.7100e-01,
          5.3187e-01, -5.0497e-01, -8.8350e-02, -1.1430e-02,  1.4521e-01,
         -1.7721e-01, -5.6533e-01,  1.8151e-01, -2.8622e-01, -2.9886e-01,
          1.1659e+00,  2.9231e-01, -4.9427e-01,  1.0585e-01, -3.4853e-01,
          2.3388e-01, -6.9185e-02,  4.9690e-02, -2.8701e-01,  3.1593e-01,
         -5.2341e-01,  4.3652e-01]], device='cuda:0') tensor(1.4513, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
156000 特征值优化 tensor(2.0791, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4733e-01, -1.6029e-02,  1.7806e+00,  2.0940e-01, -2.5515e-01,
          3.0401e-01,  6.2926e-01, -1.3097e+00,  2.1568e-02, -2.8910e-01,
          2.1295e+00,  7.5470e-01, -1.8979e-02,  3.0398e-04, -9.6002e-03,
          7.6722e-03,  1.1431e-01,  1.3769e-02, -1.0712e-01,  5.8127e-03,
          1.3246e-03,  9.5484e-02,  2.1434e-01,  7.3534e-02,  1.0268e-01,
         -1.9575e-02, -3.9635e-01, -2.8250e-01, -3.2609e-01,  6.3804e-01,
         -1.2637e-01,  7.9624e-02,  8.7775e-02, -2.3127e-02, -3.9855e-02,
          1.5844e-04, -7.4214e-01,  3.0726e-01,  2.4040e-01,  1.6712e-01,
          8.0066e-02,  9.7724e-02,  5.0063e-03, -1.4717e-02,  4.9695e-02,
          1.1522e-01, -5.6055e-02,  8.7087e-01, -4.7855e-01,  5.9564e-01,
          5.6121e-01, -5.9379e-01, -1.6457e-01,  7.2537e-03, -2.1263e-02,
         -8.7484e-02, -3.8928e-01,  1.8887e-01, -3.1200e-01, -1.5861e-01,
          1.1186e+00,  2.4313e-01, -6.2529e-01,  7.8456e-02, -4.6815e-01,
          1.6659e-01, -2.3682e-02, -3.7070e-02,  4.4383e-02,  3.1390e-01,
         -4.0696e-01,  2.7044e-01]], device='cuda:0') tensor(0.9822, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
157000 特征值优化 tensor(11.2448, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.9407e-03,  6.7074e-01,  1.0830e+00, -1.0257e+00, -7.8817e-01,
          1.2828e+00,  8.4073e-01,  2.5886e+00,  1.4766e+00, -6.8638e-01,
          1.5009e+00,  1.0856e+00, -3.9924e-01, -2.8370e-02,  1.1043e-01,
         -1.3406e+00, -1.5887e-02, -4.7306e-01, -7.2180e-01, -2.7497e-03,
         -1.7549e-01, -4.9910e-01,  9.9608e-01, -3.3129e-01,  3.9569e-01,
          6.5118e-01, -4.5763e-01,  1.3983e+00,  2.6235e-01, -2.1083e+00,
          1.4686e-01,  1.3625e+00, -7.2542e-01, -7.5031e-02, -1.9199e-01,
         -5.0290e-01, -1.2788e-01, -6.5749e-02,  5.5717e-01, -7.5669e-01,
          4.2644e-01,  1.6001e-01, -5.5262e-01, -2.8081e-01, -5.3793e-01,
         -3.0290e-01, -6.8362e-01,  8.4733e-01,  7.5952e-01,  1.0206e+00,
          1.0415e+00,  8.7940e-01,  1.7090e-01, -7.4236e-01,  8.9929e-02,
          7.4974e-02, -8.5433e-02, -5.3186e-01,  8.2425e-02,  1.3133e+00,
         -9.8376e-01,  9.3257e-01, -5.0350e-01, -3.9524e-01,  2.1628e-01,
          4.9795e-01,  6.3520e-01,  1.7883e-01, -1.3333e+00, -6.1947e-02,
         -3.5905e-01, -1.2696e+00]], device='cuda:0') tensor(5.4534, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
158000 特征值优化 tensor(2.4170, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2776e-01,  3.7634e-01,  2.0277e+00, -1.3425e-01,  1.9305e-02,
          7.6628e-02,  1.6297e+00,  2.2894e+00,  1.3163e+00, -8.7767e-01,
          1.9336e+00,  1.6358e+00, -8.7546e-02,  2.1317e-02,  1.4582e-02,
         -3.7768e-01,  3.0235e-01, -2.7654e-01, -3.3987e-01, -5.3978e-04,
         -6.7688e-02, -4.6073e-02,  6.4934e-02,  5.9296e-02, -9.9272e-02,
          1.9011e-03, -1.7111e-01,  4.9120e-01, -1.6701e-01, -1.2483e+00,
         -1.9099e-02,  5.7889e-01, -3.6877e-01, -8.3532e-04, -5.5842e-02,
         -2.3413e-01, -6.0879e-02, -4.1708e-02,  2.1351e-01, -2.5143e-01,
          1.8702e-02,  2.3507e-01, -4.1964e-01,  1.2880e-01, -6.5233e-02,
         -1.9379e-01, -1.3334e-01,  6.8078e-01,  6.5209e-01,  9.4287e-01,
          3.7658e-01,  9.7347e-02,  1.0424e+00, -5.6164e-01,  3.1717e-01,
          1.2402e-01, -9.5345e-03,  1.1682e-02, -3.9492e-01,  8.5940e-01,
         -2.0198e-01,  7.4521e-02, -6.0830e-01, -2.2959e-01, -5.3659e-01,
          5.6536e-01,  8.1981e-02,  9.5600e-02, -9.3797e-01,  7.7327e-02,
          1.2099e-01, -7.2750e-01]], device='cuda:0') tensor(1.0669, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
159000 特征值优化 tensor(2.1083, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.4088e-02, -4.6533e-02,  2.1590e+00, -1.4034e-01,  7.2420e-02,
          5.8632e-02,  1.6899e+00,  2.3236e+00,  1.0377e+00, -1.1710e+00,
          2.0177e+00,  1.6964e+00, -7.6857e-02, -4.7043e-03,  5.5670e-03,
         -1.8969e-01,  3.0380e-01, -2.8441e-01, -1.6398e-01,  2.3675e-02,
         -5.4463e-02, -8.2870e-02,  2.3224e-02,  3.9161e-02, -1.9792e-01,
         -5.2319e-02, -1.6204e-01,  3.9760e-01, -1.5624e-01, -1.0782e+00,
         -1.3709e-02,  5.0596e-01, -3.4599e-01, -1.7586e-02, -1.1036e-01,
         -1.7004e-01, -5.9866e-02, -6.2680e-02,  2.0781e-01, -2.4037e-01,
         -1.1443e-02,  2.4548e-01, -1.9383e-01,  9.1396e-02, -1.5010e-02,
          2.0186e-03, -9.0873e-02,  3.1518e-01,  3.8461e-01,  1.1549e+00,
          4.5356e-01,  1.0463e-01,  1.0663e+00, -5.0900e-01,  4.7472e-01,
          2.7851e-01, -6.8954e-02,  5.5643e-02, -5.8820e-01,  6.0206e-01,
         -1.4396e-01,  2.0676e-02, -6.7174e-01, -1.3449e-01, -6.1690e-01,
          2.3987e-01,  1.5226e-01,  1.4777e-01, -7.9750e-01,  1.0106e-01,
          2.4553e-01, -5.4882e-01]], device='cuda:0') tensor(1.3917, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
160000 特征值优化 tensor(5.8617, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0461,  1.3672,  0.5957,  0.1242,  2.0097,  0.9500,  1.4964, -0.3775,
         -0.1276,  0.7006,  1.8406,  1.8161, -0.3992, -0.0856,  0.4194,  0.0758,
          0.2067,  0.5675, -0.0035, -0.3410, -0.7223, -0.2075,  0.1920,  0.2614,
          0.1472, -0.6815,  0.2034, -0.2327,  0.6581, -0.1893,  0.2562,  0.5730,
          0.7556,  0.0921, -0.1987, -0.7627,  0.1281,  1.0563, -0.3803,  0.0188,
          0.4963,  0.3031, -0.5951,  0.6019,  0.3615, -0.1647,  0.7631,  0.7687,
         -0.5903, -0.3012,  1.2018, -0.2070,  0.5037, -0.2084, -0.4769,  0.4102,
          0.7399, -0.5702, -0.0520, -0.3703,  0.3002,  1.0810, -1.4883,  1.1183,
         -0.4807, -0.0676, -0.8381,  0.3046, -0.1379,  0.3019,  0.5169, -0.4511]],
       device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
161000 特征值优化 tensor(2.2823, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.3193e-01,  1.2803e+00,  3.6809e-01,  3.0175e-01,  1.7299e+00,
          9.0859e-02,  1.8544e+00, -3.9112e-02, -1.7708e-02,  7.0956e-01,
          2.1887e+00,  1.6925e+00, -2.4069e-01, -4.4157e-02,  5.2864e-02,
          4.4362e-02, -1.8009e-01,  2.2841e-01,  1.4617e-01, -3.0169e-03,
         -4.4537e-01, -1.3220e-01,  6.1091e-05,  4.8012e-04,  1.6621e-01,
         -1.3492e-01,  2.7119e-01,  2.7610e-01,  1.2054e-01, -1.1162e-01,
          2.1359e-01,  5.0921e-01,  6.3628e-01,  2.8152e-02,  2.0995e-02,
         -2.1005e-01, -5.3918e-02,  6.3654e-01, -1.4114e-01,  5.1606e-02,
          2.4903e-01,  2.2044e-01, -3.7320e-01,  4.9364e-01,  2.2996e-01,
          4.4637e-02,  3.4421e-01,  4.8532e-01, -1.2587e-01, -1.0766e-01,
          6.1033e-01, -1.9290e-01,  5.0276e-01, -2.5682e-01, -7.9563e-01,
          6.7637e-01,  7.2909e-02,  5.6648e-02,  6.6695e-02, -1.4372e-03,
          8.5113e-01,  6.2390e-01, -1.0910e+00,  5.0128e-01, -3.5662e-01,
          2.2573e-02, -4.0601e-01,  9.2966e-02,  2.6015e-01, -2.5878e-01,
          3.3077e-01, -2.0114e-01]], device='cuda:0') tensor(1.0690, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
162000 特征值优化 tensor(16.6628, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3899, -0.0598,  0.0627,  0.1334, -0.1965,  0.4607, -0.9671, -2.3725,
         -0.3392, -0.6719, -1.1937,  0.1400, -0.1414, -2.1662,  1.2037,  2.2211,
          0.7049, -0.1560, -0.4623,  0.7966,  0.4150,  0.1520,  0.0828,  1.4431,
         -1.3706,  0.0379, -0.9226, -1.4950, -0.2550, -0.9744, -0.7208, -1.3979,
          1.1050,  0.8168, -0.7538, -0.0243, -1.1652, -0.5982,  0.8933, -0.8954,
          0.9792,  1.8112,  0.7990, -0.6144, -0.6376, -0.5643,  2.0406,  0.4573,
          1.2943,  0.6199, -0.5857,  0.2184,  1.3436, -0.3061, -0.4380, -1.5553,
         -0.2694, -0.2984,  0.5225, -0.2429,  0.6111, -0.4769, -0.1576, -0.5429,
          1.0714, -1.7869,  0.1215,  0.3620,  0.4829,  0.3105, -0.1630,  0.0590]],
       device='cuda:0') tensor(8.3760, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
163000 特征值优化 tensor(3.4294, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9561, -0.8166,  0.5928,  0.6750,  0.5707,  0.3041, -0.1219, -1.5095,
          0.1095, -1.1433, -0.4519,  0.8893, -0.0767, -1.0082,  0.3807,  1.1097,
          0.2533,  0.1907, -0.1832,  0.1695,  0.0611, -0.1875,  0.2931,  0.6402,
         -0.5436,  0.2460, -0.1618, -0.6219,  0.0230, -0.2101, -0.0262, -0.7296,
          0.4223,  0.0084, -0.0567, -0.0379, -0.3830,  0.0219,  0.3288, -0.3703,
          0.1065,  1.0359,  0.9112, -0.8516, -0.8652, -1.3324,  1.1044, -0.1697,
          0.5675,  0.0910, -0.0727,  0.2053,  1.6903, -1.0543,  0.5351, -1.1746,
         -0.3605,  0.1902,  0.0665, -0.0742,  1.0338, -0.2493,  0.6782, -0.4281,
          1.6671, -1.0143, -0.5042, -0.1829,  0.7516,  0.0839,  0.4934,  0.7666]],
       device='cuda:0') tensor(1.6327, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
164000 特征值优化 tensor(2.2190, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3386, -0.8948,  0.4521,  0.1464,  0.9543,  0.2663,  0.1883, -1.1867,
          0.2587, -1.3197, -0.2994,  0.9364, -0.0716, -0.4616, -0.0430,  0.4859,
          0.1981,  0.1884, -0.2837,  0.1324,  0.0339, -0.0610,  0.0206,  0.0404,
          0.1254, -0.0554, -0.1522, -0.3020, -0.0060, -0.0846,  0.0128, -0.5766,
          0.2019,  0.0235,  0.0446, -0.0412, -0.1305, -0.0622,  0.2615, -0.3390,
         -0.0362,  0.9293,  0.9598, -0.8469, -0.8533, -1.3766,  1.0372, -0.3292,
          0.3127,  0.2310, -0.1172,  0.0954,  1.5056, -0.9060,  1.0945, -0.4697,
         -0.2458,  0.2034,  0.0149, -0.2175,  0.6296, -0.2729,  0.6286, -0.2646,
          1.5070, -0.6612, -0.7194, -0.0602,  0.1805,  0.0538,  0.2938,  0.6916]],
       device='cuda:0') tensor(1.0090, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
165000 特征值优化 tensor(17.4872, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5644, -0.7023,  0.2960, -0.8827,  0.5923,  0.3233,  0.5598,  1.0279,
          1.3567, -0.8063,  0.6309, -0.7179, -0.9034, -0.6454,  0.5186, -0.0256,
          1.1772,  1.3999, -1.3194,  1.1973, -0.1894, -1.0222, -0.1414,  0.7262,
          0.3945, -0.4503, -0.2859,  0.0125, -0.2329, -1.7775, -1.1184,  0.0843,
          0.8508,  1.4753, -0.0132, -0.0128, -0.3821,  0.3509, -0.8501,  1.8738,
         -0.5940,  1.1128,  0.8943, -0.6332,  0.4652, -0.2087,  0.3896,  0.4175,
         -1.3314, -2.0985, -1.1954,  1.0809,  1.4879, -0.5441,  0.0207,  0.2239,
         -0.4347,  1.8317,  2.1444, -0.8445, -0.7375,  0.8254,  0.6158,  0.4574,
         -0.6082,  1.5861, -1.4777,  0.0910, -0.9337, -1.7039,  0.4429,  0.4939]],
       device='cuda:0') tensor(9.2551, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
166000 特征值优化 tensor(3.8448, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5644e+00, -1.0933e+00,  1.3505e+00, -2.5710e-03, -4.9606e-02,
          1.0503e+00,  8.2837e-01,  2.0164e-01,  2.1949e+00, -2.2518e-01,
          1.4544e+00,  1.5269e-01, -7.5565e-02, -1.1805e-01,  2.0672e-02,
          2.9918e-01,  3.1297e-01,  5.3591e-01, -4.8267e-01,  5.9988e-01,
          3.3141e-02, -3.8272e-01, -6.1412e-02,  1.5093e-01,  9.2596e-02,
          3.8476e-02, -5.8386e-02, -4.5720e-02,  2.2172e-01, -7.0336e-01,
         -1.8881e-01,  1.8365e-02,  4.3227e-01,  7.1921e-01,  1.1038e-02,
         -1.5157e-02,  1.4500e-02,  5.3886e-02, -3.7528e-01,  1.0884e+00,
         -1.6610e-01,  3.8776e-01,  3.1425e-01, -7.9471e-01, -1.3887e-01,
          1.4294e-01,  2.9263e-01,  1.2931e+00, -3.6843e-01, -1.1708e+00,
         -7.1875e-01,  1.4193e+00,  8.7288e-01, -5.8949e-01,  4.2194e-04,
          1.3856e-02,  3.3739e-01,  9.9625e-01,  1.2459e+00, -6.6386e-01,
         -6.2158e-01,  3.2696e-01,  2.0418e-02,  5.5408e-02,  9.9467e-02,
          1.0795e+00, -5.9006e-01,  2.8905e-02, -3.6460e-01, -6.7196e-01,
          9.0772e-01,  6.3194e-01]], device='cuda:0') tensor(2.4551, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
167000 特征值优化 tensor(2.1636, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0083e+00, -7.9859e-01,  1.5319e+00,  3.6857e-01, -1.7027e-01,
          1.0494e+00,  2.9166e-01, -2.2836e-02,  2.4742e+00, -1.7036e-01,
          9.2587e-01,  4.7024e-01, -2.0727e-04, -1.9060e-02, -2.2247e-02,
          2.2029e-02,  9.4549e-02,  3.8364e-01, -4.2110e-01,  7.1381e-02,
          2.5395e-02, -2.8775e-01, -8.4104e-02, -8.2564e-03,  2.0513e-01,
          3.5069e-01, -1.4957e-01,  2.8346e-02,  4.5570e-01, -4.7715e-01,
         -1.9143e-02, -2.9270e-02, -3.9815e-03,  4.8605e-01, -1.0313e-02,
          1.1549e-02,  2.8277e-02,  2.6122e-02, -1.5489e-01,  7.5026e-01,
         -1.4446e-01,  1.9451e-01, -5.2865e-01,  9.5913e-02,  8.2667e-02,
          4.1519e-01,  3.7154e-02,  1.1898e+00, -2.6174e-01, -1.1284e+00,
         -1.0695e+00,  1.1273e+00,  2.8268e-01, -8.3608e-02, -3.1579e-02,
          6.7593e-03,  2.6368e-01,  6.6568e-01,  1.1615e+00, -1.9670e-01,
         -4.8832e-01,  2.7297e-01,  3.3475e-02,  3.8665e-02, -5.9947e-02,
          7.9957e-01, -3.3006e-01, -1.0387e-01, -8.3891e-01,  1.0791e-01,
          4.4502e-01,  5.8127e-01]], device='cuda:0') tensor(0.9552, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
168000 特征值优化 tensor(5.1199, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7661e+00,  6.0434e-02,  1.4227e+00, -1.3916e-01, -1.0641e-01,
          3.3984e-01, -3.1395e-01,  3.1362e-02,  2.7063e+00, -7.1833e-01,
          1.0338e+00, -1.6173e+00,  9.1486e-02,  2.1488e-01, -1.0177e+00,
         -3.0240e-01, -9.7305e-02, -1.1289e-01,  5.9173e-01, -6.4303e-02,
          3.6038e-01, -7.4097e-01,  7.2894e-02, -2.3911e-01, -2.6098e-01,
         -5.6017e-02, -2.1691e-01,  9.6338e-01, -3.4378e-01, -9.9799e-01,
         -1.8734e-01,  2.2195e-01, -4.8993e-03, -1.9011e-02, -4.7763e-01,
          2.9804e-02, -1.9081e-01, -8.7026e-02,  2.0434e-01,  5.6202e-02,
         -4.3439e-01,  8.9959e-02,  1.1221e+00,  2.2573e-02,  9.6944e-02,
         -1.7596e+00,  8.8673e-01,  1.3425e+00, -1.1728e-01, -8.9896e-01,
          2.0356e-01,  1.6668e+00, -2.0429e-01,  1.4026e-01, -6.3925e-04,
         -3.8284e-03,  3.9360e-02, -4.4574e-01, -1.4708e-02, -9.0350e-03,
         -5.2817e-01, -5.4151e-03, -1.8042e-01, -3.5862e-01, -1.0859e+00,
         -1.4721e+00,  8.6944e-01, -3.1183e-01, -2.9545e-01,  4.3227e-01,
          1.6915e-01,  1.9071e-01]], device='cuda:0') tensor(3.4483, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
169000 特征值优化 tensor(2.1939, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.6214e-01, -7.8755e-01,  1.7756e+00,  2.0925e-01,  7.5151e-02,
         -7.4027e-02, -5.8128e-02, -1.2713e-01,  3.1021e+00, -5.9122e-01,
          1.9372e-01, -1.0204e+00, -7.6375e-02,  1.7601e-01, -1.9353e-01,
         -6.0350e-02, -2.8028e-02, -1.0631e-01,  1.0962e-01, -1.0307e-01,
          1.0320e-01, -3.8868e-01,  2.8455e-02, -7.5355e-02, -5.0505e-01,
         -1.3714e-01, -7.7065e-02,  2.8929e-01, -6.5001e-01, -6.5470e-01,
         -2.2175e-02,  4.7237e-02,  1.5300e-02, -1.7383e-02, -2.9755e-01,
         -4.6796e-03, -2.2816e-02, -2.7536e-04,  1.8442e-01, -4.3185e-02,
          2.1296e-02,  4.1689e-02,  1.2245e+00, -5.1480e-01, -4.5083e-01,
         -1.4305e+00,  6.6248e-01,  1.0748e+00,  4.5686e-02, -8.8750e-01,
         -4.3094e-01,  1.1169e+00, -3.0014e-01,  1.5327e-01, -1.0028e-01,
          2.3498e-02,  2.1250e-02,  2.2813e-02, -2.6000e-01,  3.1922e-01,
         -2.0944e-01,  1.3962e-01,  1.1341e-01, -8.1538e-02, -6.9076e-01,
         -8.9774e-01,  8.8186e-01, -8.7699e-02, -2.2584e-01,  1.9603e-01,
          1.9872e-01,  1.9785e-01]], device='cuda:0') tensor(0.9285, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
170000 特征值优化 tensor(2.0934, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0744, -0.7117,  1.7725,  0.3073,  0.2700,  0.1652,  0.1501, -0.0367,
          3.1010, -0.4829,  0.1860, -1.0119, -0.0383,  0.1287, -0.1454, -0.0474,
         -0.0349, -0.0433,  0.0472, -0.2505,  0.0668, -0.2718,  0.0679, -0.0354,
         -0.3070, -0.0940, -0.0631,  0.2132, -0.7104, -0.5855, -0.0236,  0.0211,
         -0.0107, -0.0221, -0.2081,  0.0138, -0.0248,  0.0050, -0.0049, -0.0463,
         -0.0181,  0.1321,  1.2376, -0.5333, -0.4988, -1.3772,  0.6636,  0.8703,
          0.4060, -1.1293, -0.2141,  0.7503, -0.2647,  0.1389, -0.0822,  0.0454,
         -0.0648,  0.0643, -0.0474,  0.3211, -0.2016,  0.1389,  0.1065, -0.0565,
         -0.6960, -0.8403,  0.9897, -0.0035, -0.1481,  0.1001,  0.1306,  0.1321]],
       device='cuda:0') tensor(1.2656, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
171000 特征值优化 tensor(6.9500, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6997,  0.0029, -0.0164,  0.0354, -0.0671, -0.3684, -0.6907,  1.2629,
          1.9332, -0.7584,  0.0284,  2.0793,  0.6504, -1.3227, -1.0725, -0.7152,
         -0.2224,  0.5634, -0.3104, -0.0230,  1.2446, -0.0561,  0.2137,  0.0710,
          0.6644, -1.5157, -0.0774, -0.0618,  1.3724, -0.0634, -0.1814, -0.0395,
          0.0280, -0.7536, -0.2823,  0.3866,  0.0372,  0.0164,  1.6014, -0.2277,
         -0.0092, -0.4096, -0.1191,  1.0192, -0.6815,  0.9375,  0.6077,  2.2388,
         -1.8058, -0.4050,  0.2727, -0.2171, -0.3773,  0.3726,  0.1305, -0.1904,
          0.0260, -0.3776,  0.4103,  0.2575, -0.3956,  0.0334, -0.7600,  0.0399,
          0.3389,  0.4162,  1.0603,  0.3486,  0.5111, -0.9840,  0.0382,  0.7009]],
       device='cuda:0') tensor(3.1504, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
172000 特征值优化 tensor(2.3667, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1357,  0.5451,  0.7741,  0.5659,  0.3542, -0.2856, -0.0126,  0.4288,
          1.9856, -0.3252,  0.2070,  1.5688,  0.3338, -0.4820, -0.2484, -0.0759,
         -0.0393,  0.0825, -0.0503, -0.0181,  0.7917,  0.0122, -0.1125,  0.0892,
          0.2167, -0.3392, -0.0081, -0.0200,  0.8386,  0.0341, -0.0301, -0.0168,
         -0.0615, -0.0512, -0.1628,  0.1621, -0.0130,  0.0085,  0.9605, -0.0302,
         -0.0178, -0.4691,  0.0487,  1.4824, -0.2731,  0.0953,  0.3467,  1.4650,
         -1.7373, -0.0502,  0.7647, -0.4878, -0.5097,  0.1590, -0.0755, -0.0049,
          0.1595, -0.0756,  0.1115,  0.1445, -0.2202,  0.1259, -0.3177,  0.1277,
          0.4268,  0.7766,  0.5651, -0.0548,  0.5644, -0.4018,  0.0542,  0.6698]],
       device='cuda:0') tensor(0.9830, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
173000 特征值优化 tensor(2.0847, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1795e+00,  6.0162e-01,  1.1710e+00,  4.7008e-01,  1.9744e-01,
         -1.8547e-01,  1.6322e-01,  8.3690e-02,  1.9540e+00, -3.1238e-01,
         -2.7275e-02,  1.2694e+00,  4.0716e-01, -2.8431e-01, -8.0639e-02,
          6.3177e-04, -3.1627e-03, -1.7729e-03, -2.8561e-02,  6.4762e-04,
          7.3843e-01,  3.7359e-02, -1.5665e-03,  8.7454e-02,  2.2138e-01,
         -1.1710e-01,  2.8307e-01,  2.6161e-02,  7.1140e-01,  6.4164e-02,
         -2.1865e-02,  1.5920e-02,  6.0715e-02, -9.4460e-02, -9.5832e-02,
          1.0408e-01, -1.7092e-02,  1.8765e-02,  6.3252e-01, -6.8870e-02,
         -1.9582e-02, -3.0380e-01,  1.7507e-02,  1.4224e+00, -3.0208e-01,
          1.6954e-01,  3.9695e-01,  1.2764e+00, -1.4276e+00, -1.0713e-01,
          1.0568e+00, -5.4804e-01, -4.6804e-01,  2.4157e-01, -1.3486e-01,
          2.5524e-02,  1.6598e-02, -6.2250e-02,  7.0992e-02,  2.6638e-03,
         -2.4010e-01,  1.3074e-01, -5.2386e-02,  4.2563e-02,  4.0667e-01,
          7.7077e-01,  5.6599e-01,  1.9368e-02,  2.2560e-01, -6.5438e-02,
         -1.1831e-01,  5.6303e-01]], device='cuda:0') tensor(0.9739, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
174000 特征值优化 tensor(8.4673, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.6323e-01, -1.1948e+00,  3.0016e+00,  4.0596e-01,  1.3420e+00,
         -5.5614e-01,  8.6584e-01, -4.6315e-02,  2.1533e+00, -1.4046e+00,
         -2.9033e-02, -1.8171e-01, -2.2947e-01, -5.0795e-01,  3.7866e-01,
         -3.3027e-01, -1.0725e-01,  2.8096e-02, -1.1764e-01, -5.4651e-04,
         -1.3314e+00,  2.9630e-02, -2.6493e-01, -1.2848e-01,  1.2147e+00,
          1.8131e-01,  5.8289e-01, -7.3063e-02, -1.3035e+00,  6.4733e-01,
         -5.0379e-03, -1.3863e+00,  2.8465e-02, -8.5918e-03,  9.9648e-02,
         -8.6126e-02, -5.4255e-01,  6.4592e-02, -4.9530e-02, -2.9833e-01,
          8.7863e-01,  2.5071e-01, -6.2105e-01,  1.4069e+00, -5.8140e-01,
          1.3771e+00,  1.2390e-01,  1.3723e+00,  9.9318e-02, -4.3359e-01,
          3.8556e-03,  1.5116e-01,  1.3152e+00, -1.6135e+00, -2.7683e-01,
         -6.9908e-01,  1.6603e-01, -5.5743e-01, -2.0938e-01,  5.1361e-02,
         -4.8154e-01, -1.0804e+00,  7.5975e-01,  1.2992e-01,  1.2694e+00,
          1.2939e+00, -8.3228e-02, -2.6673e-01, -1.3062e-02, -1.8232e+00,
          8.1481e-01,  2.8648e-01]], device='cuda:0') tensor(4.5939, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
175000 特征值优化 tensor(2.7531, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1803e+00, -6.5259e-01,  2.7284e+00, -1.2473e-01,  1.1360e+00,
         -1.1825e-01,  1.5119e+00, -4.5905e-01,  2.0708e+00, -1.0097e+00,
          4.8688e-01,  2.3179e-01, -3.4352e-02, -1.2531e-01,  1.2178e-01,
         -2.5620e-01, -3.0067e-01, -1.6353e-01,  1.0493e-01,  5.6287e-02,
         -7.3508e-01, -1.0738e-02, -9.1603e-03,  3.2336e-02,  3.8651e-01,
          2.7047e-01,  3.3219e-02, -1.0212e-01, -8.2122e-01,  5.7749e-01,
         -1.6140e-01, -9.2525e-01,  1.4312e-01, -1.8153e-02,  5.6931e-03,
         -2.9414e-02, -1.5067e-01, -4.5188e-02,  8.1644e-01, -1.8516e-01,
          1.7696e-01,  7.2308e-02, -1.0274e-01,  1.3149e+00, -1.4235e-01,
          7.3813e-01, -2.6484e-02,  1.0010e+00,  5.3114e-01, -5.7532e-01,
         -1.5184e-01,  1.0815e-01,  1.4820e+00, -9.0219e-01, -2.2431e-01,
         -2.3220e-01,  8.1942e-02,  1.2697e-02, -2.5713e-03,  3.5890e-02,
          6.1846e-02, -6.3277e-01,  4.2169e-01, -1.4228e-01,  4.9264e-01,
          9.8542e-01,  1.4986e-01, -2.1146e-01,  5.6693e-01, -9.6815e-01,
         -7.9817e-02,  2.0231e-01]], device='cuda:0') tensor(1.5813, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
176000 特征值优化 tensor(2.2725, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9644, -0.2676,  2.4331, -0.7689,  0.4966,  0.3851,  1.4218, -0.3720,
          1.4938, -0.6866,  0.2546,  0.4320, -0.0650, -0.1144, -0.0227, -0.2244,
         -0.3637,  0.0074,  0.0055, -0.0147, -0.5320, -0.0370, -0.0218, -0.0274,
          0.2260,  0.2828,  0.1228, -0.1204, -0.5652,  0.2959, -0.0425, -0.5341,
          0.1593, -0.0235,  0.0085, -0.0461, -0.1070,  0.0174,  0.4770, -0.0529,
          0.1607,  0.0258, -0.0672,  1.1428, -0.2451,  0.5437,  0.0661,  0.3364,
          0.6225, -0.7894,  0.2264,  0.0315,  0.9272, -0.4616, -0.1690,  0.0152,
         -0.1493,  0.1167,  0.0198, -0.0551, -0.1154, -0.4295,  0.4157, -0.3663,
          0.1077,  0.7763,  0.2876, -0.0727,  0.4472, -0.6909, -0.1317,  0.2154]],
       device='cuda:0') tensor(1.4403, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
177000 特征值优化 tensor(23.9326, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6333,  0.0326, -2.5354, -1.6469,  0.5050,  1.0201, -1.2630, -1.8377,
         -0.2658,  3.2566, -0.5727, -0.7551,  0.9087, -1.4297, -0.6558,  1.3426,
          0.6637,  0.8444, -0.2142,  1.9329,  2.5687, -0.2234,  1.3367, -2.0366,
         -0.0822, -0.6312,  0.1916, -1.5726,  0.4890, -2.0870,  0.8507, -0.2051,
          1.3952,  0.0665, -0.8640, -0.0370,  1.5119, -0.2975, -1.8893, -0.1572,
         -2.2407, -0.3776,  1.9724, -0.6678, -0.0095,  0.6137, -1.6300, -1.3369,
          0.7167, -0.4104, -0.7448,  0.2443, -0.3140, -0.6555,  1.6445, -0.5459,
          1.4395, -0.1542,  0.4880,  0.2544, -0.2205,  0.0450, -0.6105,  1.1339,
         -0.0493,  1.7678,  0.6681,  0.7560, -0.7838,  0.6396,  1.0996,  0.4447]],
       device='cuda:0') tensor(12.3579, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
178000 特征值优化 tensor(6.8275, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4953e+00,  4.7520e-01, -1.3416e+00, -1.3562e+00,  1.4424e+00,
          1.2536e+00, -2.8515e-01, -8.6854e-01,  6.3283e-01,  2.4304e+00,
          3.9921e-01,  3.6904e-01,  3.1416e-01, -7.6122e-01, -3.9631e-01,
          3.7718e-01, -2.2391e-01,  4.1759e-02, -2.6675e-01,  8.3581e-01,
          1.7855e+00,  4.4593e-01,  3.6769e-01, -9.2892e-01, -3.0374e-01,
         -9.6184e-02,  1.9582e-02, -5.4428e-01, -6.3670e-02, -1.0297e+00,
          1.5716e-01,  3.2835e-01,  7.6546e-01,  6.2136e-02, -2.2648e-01,
          2.5688e-01,  6.5433e-01, -2.4549e-02, -1.0904e+00, -5.2739e-01,
         -1.0997e+00, -3.1488e-01,  2.6222e+00, -2.2085e-01,  5.4381e-01,
          1.2423e+00, -8.8437e-01, -1.3075e-01,  7.2433e-01,  1.4612e-01,
         -2.5102e-01, -2.5757e-01,  5.8250e-01, -1.0060e+00,  8.5844e-01,
         -4.2960e-01,  5.0208e-01, -6.1835e-01, -7.6517e-03,  1.6092e-03,
          4.4834e-01,  4.8543e-01, -4.8193e-01,  2.5065e-01,  7.4406e-01,
          9.6695e-01,  8.9120e-02,  4.3495e-01,  9.7948e-02,  1.9175e-01,
          5.7548e-01,  8.3721e-03]], device='cuda:0') tensor(4.2126, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
179000 特征值优化 tensor(2.4369, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9857e+00,  6.1205e-01, -4.1739e-01, -8.4185e-01,  1.2797e+00,
         -5.0838e-02,  1.9719e-01, -6.8010e-01,  1.1899e+00,  1.6197e+00,
          8.4115e-01,  1.0091e+00,  3.2822e-01, -1.3371e-01,  6.9888e-02,
          7.7151e-02,  7.4777e-02, -5.5719e-02, -2.3429e-02,  7.4131e-01,
          1.2028e+00,  2.9020e-01,  1.4149e-01, -1.4795e-01, -2.0713e-01,
         -1.4360e-01,  4.2828e-02, -1.0677e-01,  9.5733e-02, -4.3160e-01,
         -2.2248e-03,  3.9809e-01,  5.5990e-01,  2.9755e-02, -3.9606e-03,
          2.4982e-03,  1.7325e-01, -1.1543e-02, -6.8836e-01, -4.7880e-01,
         -4.9755e-01, -3.7008e-01,  2.0249e+00, -7.4331e-01,  9.2827e-01,
          1.4134e+00, -6.4488e-01,  8.7620e-02,  5.3246e-01, -3.1690e-01,
          7.0106e-02, -2.4575e-01,  4.2827e-01, -6.4620e-01,  6.2304e-01,
         -7.8099e-01, -2.1379e-01,  1.6372e-01, -3.4405e-03, -1.2998e-03,
          3.5398e-01,  1.3970e-01, -5.4754e-01,  1.0901e-01,  5.2137e-01,
          7.3588e-01,  7.4999e-02,  5.2203e-01,  4.0577e-01,  6.2460e-02,
         -2.6976e-01,  4.9999e-01]], device='cuda:0') tensor(0.7937, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
180000 特征值优化 tensor(2.1383, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9202,  0.7126, -0.2255, -0.4393,  1.0383,  0.1225,  0.3441, -0.7312,
          1.2237,  1.4005,  0.8671,  1.0866,  0.4371, -0.1247,  0.1807,  0.1467,
          0.0922,  0.0584, -0.2629,  0.7693,  1.0055,  0.1644,  0.0863, -0.0499,
         -0.1887, -0.1725,  0.0988, -0.1532,  0.0853, -0.3078, -0.0053,  0.3281,
          0.5292,  0.0266,  0.0392, -0.0288,  0.0053,  0.0219, -0.6385, -0.4409,
         -0.3363, -0.3333,  1.6212, -1.2153,  1.2433,  1.3708, -0.3944, -0.1775,
          0.4807, -0.3451,  0.1680, -0.1601,  0.1726, -0.3664,  0.2747, -0.6934,
         -0.1865,  0.1686, -0.0363, -0.0292,  0.1722,  0.0344, -0.5617,  0.1520,
          0.2755,  0.8054,  0.0689,  0.4861,  0.3912, -0.1790, -0.1646,  0.4285]],
       device='cuda:0') tensor(0.8113, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
181000 特征值优化 tensor(10.4907, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.4065e-01,  4.1630e-01,  1.5027e+00,  1.7704e+00,  2.3766e+00,
         -3.6349e-01, -6.1599e-01,  9.5159e-01, -2.3758e-01,  1.5760e-01,
          3.8305e-01,  1.2257e+00,  1.9094e-01, -1.2058e+00,  3.7956e-01,
          1.6228e+00, -9.1266e-02,  5.0531e-04,  3.1940e-01, -2.7745e-01,
          3.2431e-01, -2.5359e-01,  2.4610e-01,  9.4606e-01, -4.4228e-01,
         -9.2597e-02, -3.0842e-01,  2.1350e-01, -4.4100e-02, -1.6306e+00,
          5.2722e-01, -3.2104e-01, -1.4548e+00, -1.6164e-01, -2.1117e-01,
         -1.3711e+00, -2.5336e-02,  5.4520e-03,  1.1745e-01,  5.3638e-01,
         -9.9405e-01,  3.2198e-01,  5.5640e-01,  3.2777e-01, -1.1571e+00,
         -2.3677e-01,  9.9493e-01,  6.0943e-01, -5.4191e-01,  5.4270e-01,
          2.7955e-01,  3.8792e-01,  7.6893e-01,  4.5973e-01,  1.2583e+00,
         -7.4691e-01,  1.9647e-01,  1.5563e+00, -3.4835e-03, -4.4525e-01,
         -4.0530e-01,  1.4161e-01, -8.5876e-01, -4.8527e-01,  1.1830e+00,
         -5.6350e-01, -1.2503e+00,  1.2382e-01,  1.8690e-01,  2.2492e-02,
         -4.1942e-01, -1.6578e+00]], device='cuda:0') tensor(5.4467, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
182000 特征值优化 tensor(2.5747, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.2071e-01, -5.9578e-03,  1.8621e+00,  1.8157e+00,  2.8935e+00,
          7.3559e-01,  7.9942e-02,  5.9445e-01, -2.4079e-01,  2.2639e-01,
          1.0485e+00,  1.9218e+00,  3.2262e-02, -4.0019e-01,  6.2313e-02,
          6.4172e-01, -2.4966e-03, -7.8066e-02,  2.3354e-01, -4.0050e-02,
          5.7964e-02, -3.7580e-01, -3.2380e-02,  1.5611e-01,  1.7126e-02,
         -1.2348e-02, -5.0345e-01, -1.1280e-01,  8.0569e-02, -1.0353e+00,
          6.4158e-01,  4.8132e-02, -5.6697e-01, -5.2439e-01, -7.8034e-02,
         -5.3225e-01, -2.6553e-03, -6.6241e-03, -1.4321e-02, -1.8616e-02,
         -5.4066e-01,  2.0131e-01, -5.6988e-01,  3.3323e-01,  6.5748e-02,
         -4.1771e-02,  1.4260e-01,  3.7198e-01,  9.6683e-02,  1.1815e+00,
          2.0446e-01,  3.5130e-01,  6.4780e-01,  2.3720e-01,  5.9025e-01,
         -1.3867e+00,  7.0029e-01,  6.4445e-01,  3.2538e-01, -4.8277e-01,
         -2.1747e-01,  1.7843e-01, -5.8253e-01, -2.0650e-01,  2.3330e-01,
         -8.4208e-02, -7.1002e-01,  3.9296e-01,  5.1987e-01,  1.6836e-01,
          3.1260e-01, -1.1640e+00]], device='cuda:0') tensor(1.8597, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
183000 特征值优化 tensor(2.1307, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.4196e-01,  1.4221e-01,  2.2728e+00,  2.2338e+00,  2.7694e+00,
          8.3878e-01,  7.9768e-02,  8.5420e-01,  8.5117e-02, -1.1164e-03,
          1.1163e+00,  1.8692e+00,  4.3594e-04,  1.4614e-03, -9.2584e-02,
          2.0561e-01,  8.1363e-02,  1.9579e-02,  2.6348e-01, -3.3416e-02,
          2.5676e-02, -5.0688e-01, -6.2289e-02, -3.5051e-02,  1.2180e-02,
         -8.8115e-02, -5.0116e-01, -9.4193e-02,  1.4573e-01, -8.8756e-01,
          6.4659e-01,  6.5134e-02, -3.9119e-01, -4.4041e-01, -7.0111e-02,
         -4.5438e-01, -4.6446e-02, -8.7310e-02, -2.1247e-03, -5.8295e-02,
         -4.4623e-01,  1.7607e-01, -2.7406e-01,  1.6584e-01,  1.7143e-01,
         -4.9203e-03,  1.8126e-02,  5.2355e-02, -1.4050e-02,  1.0495e+00,
          3.9591e-01,  3.8822e-01,  2.7048e-01,  5.3856e-01,  2.8421e-01,
         -1.3741e+00,  6.2131e-01,  5.0893e-01,  1.6680e-01, -5.0883e-01,
         -2.1390e-01,  1.0789e-01, -5.0321e-01, -1.5506e-01,  5.1808e-02,
         -1.0661e-02, -3.9416e-01,  3.1194e-01,  5.4605e-01,  1.1343e-01,
          3.4461e-01, -9.9903e-01]], device='cuda:0') tensor(1.0274, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
184000 特征值优化 tensor(9.7940, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9748,  1.8301,  0.4459, -0.9027,  1.1212,  0.1698,  0.6296,  1.0281,
         -0.8624, -0.6527,  0.3677,  0.8320, -0.4537,  0.5468,  0.9392, -0.1929,
          0.4738, -0.0642, -0.9313, -0.0785, -0.7212,  1.0848, -0.1950, -0.1521,
         -0.6264, -0.2973,  0.8126, -0.1467,  0.4590, -0.9157,  0.1450,  2.0673,
         -0.8866,  1.0533,  0.4810, -0.2961,  1.1787, -0.2903, -0.2680,  0.2068,
          0.3187,  0.3615,  0.2219,  0.2307, -0.1827,  0.3755, -0.0461,  0.1557,
          1.3008,  1.0425,  0.0526, -0.6299, -0.2157, -0.6526, -0.1825,  0.0356,
          1.6255, -0.6054,  0.1045,  0.9940,  0.5544,  0.2756, -0.1098, -0.8716,
         -0.1738, -0.4950,  0.4232, -0.4784,  0.6514, -0.3495, -0.3662, -0.0120]],
       device='cuda:0') tensor(5.7979, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
185000 特征值优化 tensor(2.2626, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1577,  1.4483,  1.0632, -1.3211,  2.0286,  1.0364,  1.3804,  1.3228,
         -0.6400,  0.2042,  0.1593,  0.8243, -0.5048,  0.0825,  0.1455, -0.0134,
          0.0099, -0.0949, -0.1682, -0.0210, -0.4823,  0.6642,  0.0688, -0.0697,
         -0.1048, -0.0865,  0.3053, -0.1623, -0.0706, -0.6371, -0.0083,  1.2187,
         -0.5075,  0.4000,  0.1432, -0.3442,  0.5151,  0.0398, -0.1216, -0.0189,
         -0.0393, -0.0756,  0.0766,  0.4992,  0.1901,  0.2828,  0.2088, -0.0191,
          0.7658,  0.5968, -0.0460, -0.5269,  0.7787, -1.0096, -0.8100, -0.3513,
          1.8002, -0.4483, -0.2012,  0.9726,  1.3310, -0.8256,  0.2634, -0.4813,
         -0.0730, -0.0543,  0.1414, -0.1441,  0.0054, -0.0475, -0.4155,  0.0927]],
       device='cuda:0') tensor(0.7739, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
186000 特征值优化 tensor(2.1192, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0876e+00,  1.0718e+00,  1.2203e+00, -1.0303e+00,  2.0642e+00,
          1.2208e+00,  1.4402e+00,  1.2580e+00, -3.9805e-01,  1.5355e-01,
          9.2865e-02,  6.6594e-01, -4.1678e-01,  9.6829e-02,  5.0152e-02,
          1.2147e-01, -7.8326e-02,  2.4644e-02, -4.1666e-02, -4.3016e-02,
         -3.9771e-01,  6.5222e-01,  3.6063e-02,  1.3902e-03, -3.8563e-02,
          2.3117e-02,  1.3066e-01, -2.4458e-01,  7.6365e-03, -6.2461e-01,
         -1.7102e-02,  1.1612e+00, -5.0561e-01,  2.8847e-01,  7.3524e-02,
         -4.6826e-01,  3.6582e-01,  6.9737e-02, -1.5686e-01, -2.8448e-03,
         -1.7701e-02, -3.7336e-02, -2.1126e-01,  4.6225e-01,  3.5120e-01,
         -6.8257e-02,  3.0931e-01,  1.7761e-02,  6.5232e-01,  5.9409e-01,
         -1.5739e-01, -4.7242e-01,  8.4985e-01, -9.2561e-01, -9.5113e-01,
         -3.7928e-01,  1.7128e+00, -5.2935e-01, -2.1225e-02,  1.2278e+00,
          1.4195e+00, -8.7683e-01,  2.6286e-01, -4.5835e-01,  4.1428e-03,
         -1.5055e-01,  1.1401e-01, -8.8153e-02,  8.8931e-02, -2.9870e-02,
         -1.0206e-01, -5.7816e-02]], device='cuda:0') tensor(0.8402, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
187000 特征值优化 tensor(8.1784, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5674e-01, -4.8915e-01,  7.7206e-01,  1.0869e+00,  2.1557e-01,
          6.4376e-01, -1.6607e-01,  1.5768e-01, -5.7567e-01, -2.1660e-01,
          1.1681e+00,  7.9246e-02,  6.5262e-01, -1.0214e+00, -1.5672e-01,
          8.7902e-02,  7.5620e-02,  6.5251e-02, -1.6650e-02, -6.8059e-01,
          8.6513e-01,  3.2491e-01, -2.2646e-01, -3.1456e-01, -4.6917e-02,
          1.5940e-03,  5.1840e-01,  3.6543e-01,  6.1650e-01, -7.8831e-01,
         -1.0203e+00, -7.4605e-02,  5.6889e-02, -3.4360e-01, -8.6317e-02,
          3.9129e-01, -5.5761e-01, -1.1061e+00, -4.1828e-01,  6.5966e-03,
          1.7094e+00, -2.9100e-02,  1.1868e+00, -1.9106e+00,  6.9838e-02,
         -6.0283e-01,  2.2416e-01,  6.4795e-01,  2.6825e-01, -1.0115e+00,
         -5.9409e-01, -1.2262e+00,  1.1334e+00,  9.1024e-01,  4.9198e-01,
          2.3160e-01, -2.3498e-01,  7.8650e-01, -1.4951e-02,  1.8433e-01,
          1.5053e+00, -5.2892e-01,  3.1859e-01, -5.5326e-01,  6.9247e-01,
         -3.7414e-01,  3.3566e-02,  4.1573e-02,  5.1342e-01,  1.8690e-02,
         -8.3021e-01, -5.2814e-01]], device='cuda:0') tensor(4.7187, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
188000 特征值优化 tensor(2.3759, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5904,  0.2585,  1.0824,  0.6516,  0.4794,  0.6572,  0.3104, -0.6869,
         -0.1163,  0.0406,  2.0114,  0.1560,  0.3030, -0.2376, -0.2281, -0.0156,
          0.0339, -0.0396,  0.0455, -0.3582,  0.3062,  0.1399, -0.1662, -0.1598,
         -0.1245, -0.0770,  0.0173,  0.0262,  0.3122, -0.2965, -0.3427, -0.0455,
          0.0834, -0.0822, -0.0200,  0.0244, -0.2968, -0.5139, -0.0250,  0.0093,
          0.9949, -0.0178,  0.2442, -0.9945,  0.7926,  0.1926,  0.0021,  0.5420,
          0.2204, -0.6915, -0.0801, -0.7486, -0.0035,  0.5415,  0.2200,  0.2405,
         -0.4383,  0.3849, -0.0059, -0.0028,  1.2571, -0.2695,  1.1038, -0.7231,
         -0.0567,  0.0631,  0.0572, -0.0226,  0.8441,  0.3984, -0.3494,  0.1603]],
       device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
189000 特征值优化 tensor(2.1581, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.3033e-01,  3.5325e-01,  9.7279e-01,  6.3598e-01,  3.6219e-01,
          3.8318e-01,  3.0995e-01, -4.5547e-01,  2.2344e-02,  4.3305e-02,
          2.2632e+00,  1.6917e-01,  2.6662e-01, -1.7891e-01, -2.0322e-01,
          7.3057e-02,  1.1397e-02, -1.7750e-01, -1.5417e-01, -1.6716e-01,
          2.8460e-01,  8.8858e-02, -1.3758e-01, -1.2244e-01, -1.1803e-02,
         -6.6746e-02, -3.3036e-02, -2.2287e-02,  3.5709e-01, -2.5305e-01,
         -1.6939e-01, -1.2872e-01,  1.1429e-01,  2.0267e-02, -4.0893e-02,
          1.5755e-02, -2.6421e-01, -3.3992e-01, -2.3216e-02, -4.0842e-05,
          8.9341e-01, -2.2626e-02,  1.2211e-01, -7.0840e-01,  7.1507e-01,
          1.0350e-01, -1.2253e-02,  5.3986e-01,  1.1831e-01, -5.9573e-01,
         -1.2796e-01, -6.1362e-01, -2.2040e-01,  3.7103e-01,  2.1701e-01,
          3.3661e-01, -3.1278e-01,  2.1874e-01,  1.1745e-02,  1.6001e-03,
          7.5914e-01, -2.9845e-01,  1.2535e+00, -6.8067e-01, -3.4801e-02,
          5.9652e-02,  1.0252e-02, -1.5452e-02,  7.3874e-01,  2.2654e-01,
         -2.4208e-01,  1.4295e-01]], device='cuda:0') tensor(1.0088, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
190000 特征值优化 tensor(8.6389, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3593, -0.8471, -0.0171, -0.5208,  1.7882, -0.0468,  0.3401, -1.3622,
          2.1816, -0.0302,  0.4389,  1.2219,  0.6072,  0.3120,  0.6209, -0.0479,
          1.0606,  0.6029, -0.1299, -0.8891,  0.2372, -0.2928,  0.1019, -0.1971,
         -0.8603,  0.0472, -0.1955,  0.3752,  0.1280, -0.8271, -0.4631, -0.7335,
          0.1857,  0.1901,  0.8385,  0.4938,  0.1653,  0.6732, -0.0687, -0.9810,
         -0.2808,  0.6193, -0.3216,  0.2041, -1.3824,  0.1922, -0.1116,  0.9718,
         -1.5480,  0.8160,  0.0048,  0.2094, -1.0627, -1.0348,  0.0939, -0.0227,
         -0.0412, -0.6035,  0.0697, -1.2218,  2.2896, -0.7865,  0.1775, -0.6850,
          0.7875,  1.2144,  0.2137,  0.6693,  1.6569,  1.0978, -0.0680, -0.3113]],
       device='cuda:0') tensor(4.1308, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
191000 特征值优化 tensor(2.4547, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.7161e-04, -6.2170e-01,  4.1103e-01, -2.0767e-01,  1.7418e+00,
          2.3484e-01,  1.1371e+00, -1.0821e+00,  2.6468e+00, -5.4133e-01,
          6.8587e-01,  7.2984e-01,  1.2216e-01,  1.8652e-02,  1.6096e-01,
          2.9281e-02,  2.1805e-01,  1.2556e-01, -1.9646e-01, -1.3319e-01,
          8.8141e-02, -9.5731e-02,  9.5180e-03, -1.8939e-02, -2.5910e-01,
         -1.6106e-01, -1.4298e-01,  1.3861e-01,  1.3055e-02, -3.0804e-01,
         -1.5638e-01, -4.5720e-01,  4.2041e-02, -2.5999e-02,  4.2867e-01,
          2.9769e-01, -2.6026e-01,  3.2871e-01, -2.7123e-01, -4.4968e-01,
         -1.2902e-01,  3.2835e-01, -1.1248e-01,  5.4458e-01, -6.9173e-01,
          2.1612e-01, -2.2318e-01,  2.8342e-01, -9.4990e-01,  1.2886e+00,
          2.5433e-02, -6.7952e-02, -8.8045e-01, -2.1325e-01,  6.4850e-02,
         -2.8395e-02,  3.7136e-01, -1.9319e-01,  5.0846e-01, -1.4348e-01,
          1.4518e+00, -4.6145e-01,  3.2875e-01, -3.8923e-01,  1.0169e+00,
          7.1071e-01, -4.0964e-01,  2.3152e-01,  5.6877e-01,  6.4825e-01,
         -2.0183e-01,  6.4941e-02]], device='cuda:0') tensor(1.4126, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
192000 特征值优化 tensor(2.1686, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.7966e-02, -5.6574e-01,  7.2991e-01, -1.9943e-01,  1.2599e+00,
          2.9296e-01,  1.4493e+00, -9.0789e-01,  2.7238e+00, -7.6025e-01,
          4.8379e-01,  7.8546e-01,  1.2084e-01,  1.1629e-01,  1.9349e-01,
         -1.4157e-03,  1.2985e-01, -2.6750e-02, -1.6923e-01, -7.0221e-02,
          9.3391e-02, -7.4394e-02,  6.3961e-02, -1.2759e-02, -3.6528e-01,
         -1.8017e-01, -1.2944e-01,  1.8591e-01,  2.9705e-02, -2.0708e-01,
         -9.5163e-02, -1.5156e-01, -2.3416e-02, -1.6067e-02,  3.4298e-01,
          1.7748e-01, -2.4312e-01,  3.2441e-01, -1.1207e-01, -3.0760e-01,
         -1.0424e-01,  1.3573e-01, -2.6851e-01,  3.7561e-01, -2.6128e-01,
          7.5166e-03, -1.4473e-01, -4.2521e-02, -7.5005e-01,  1.0556e+00,
          9.4782e-02, -9.6648e-02, -8.0822e-01,  3.9556e-02, -2.9553e-02,
         -5.4009e-02,  1.3736e-01, -5.1942e-02,  3.6068e-01, -1.1946e-01,
          9.8782e-01, -1.7608e-01,  1.9404e-01, -2.2751e-01,  1.0411e+00,
          6.3360e-01, -4.2898e-01,  1.7707e-01,  3.0324e-01,  6.1241e-01,
         -1.7503e-02,  5.6906e-02]], device='cuda:0') tensor(1.1994, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
193000 特征值优化 tensor(2.0908, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.2778e-02, -5.1614e-01,  5.4327e-01, -4.3725e-01,  9.5471e-01,
          3.8855e-01,  1.5345e+00, -9.0154e-01,  2.7849e+00, -9.3188e-01,
          4.7104e-01,  6.7709e-01,  1.1781e-01,  1.1228e-01,  8.9000e-02,
         -6.0880e-03,  1.2528e-01, -2.4199e-02, -1.4017e-01, -2.5775e-02,
          9.1342e-02,  7.9957e-04,  5.4001e-02, -3.0299e-02, -4.1794e-01,
         -2.4089e-01, -9.0538e-02,  6.4502e-02,  3.9386e-02, -1.3415e-01,
         -1.0303e-01, -1.3426e-01, -1.1628e-02, -1.7461e-02,  2.7942e-01,
          1.1402e-01, -2.2010e-01,  3.0710e-01, -7.4057e-02, -1.1138e-01,
         -2.0186e-01,  2.4513e-02, -3.1206e-01,  3.0431e-01, -1.2992e-01,
         -1.0250e-01, -9.3049e-02, -1.9922e-02, -6.7840e-01,  7.7853e-01,
          6.0812e-03, -1.2007e-01, -5.9051e-01,  2.7061e-02, -3.0605e-02,
         -2.0701e-02,  1.4815e-02,  1.3195e-02,  8.2739e-02, -1.4239e-02,
          7.6401e-01, -1.0383e-01,  6.6016e-02, -2.0383e-01,  9.7845e-01,
          5.6936e-01, -4.1948e-01,  1.2006e-01,  2.9802e-01,  5.5918e-01,
         -3.7057e-02,  7.9417e-02]], device='cuda:0') tensor(1.0632, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
194000 特征值优化 tensor(6.8015, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8913,  0.1942,  0.6468,  0.4024,  2.8061,  0.3062,  0.9145, -0.0633,
          1.7846,  0.3515,  0.6254, -0.8181,  0.2159, -0.0748, -1.1607, -0.1396,
         -0.1537, -1.1424, -0.0158,  0.3050,  0.2384,  0.6106, -0.0073,  0.6934,
          0.4445, -0.0033,  0.0318, -0.3002,  0.0048, -0.6010, -0.9226,  0.7939,
          0.5651, -0.1374, -0.1145, -0.4729,  0.1894, -1.1181, -0.1990, -0.1130,
          0.7510, -0.4779,  1.1017, -0.8056,  0.6481,  0.4125,  0.0799, -0.1750,
         -1.1383,  1.4554, -1.3328, -0.0915,  0.2090,  0.7585, -0.1346,  0.2361,
         -0.1875, -0.0144,  0.3651,  0.1066, -0.9381,  0.3718, -1.2702,  0.4791,
         -0.8305, -0.3489, -1.1632,  1.2136,  1.1180, -0.0376,  0.4162,  0.2381]],
       device='cuda:0') tensor(4.2595, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
195000 特征值优化 tensor(2.3057, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2412e+00,  7.7620e-01,  5.4368e-01,  4.2794e-01,  3.0952e+00,
          1.3393e-01,  1.3756e+00, -3.1974e-01,  1.6345e+00,  7.7147e-01,
          1.1601e+00, -1.5600e-01,  2.3206e-01, -4.3677e-02, -4.2561e-01,
         -8.9308e-02,  1.5877e-01, -3.6022e-01, -4.0831e-02,  4.2062e-02,
          2.0384e-01,  2.5898e-01, -4.3128e-02,  8.3849e-02,  5.2828e-01,
         -6.3887e-02, -5.0804e-02,  7.3144e-02,  3.6596e-03, -2.7860e-01,
         -6.9673e-01,  3.2396e-01,  4.5885e-01, -2.1824e-02,  1.4323e-02,
          4.5382e-04,  3.1308e-01, -6.3825e-01, -5.3152e-02,  7.3063e-02,
          4.9290e-01, -1.0592e-01,  8.1063e-01, -7.6534e-01,  4.6412e-01,
          9.0583e-01, -2.5006e-01, -5.8906e-02, -5.4057e-01,  1.1931e+00,
         -6.7884e-01, -1.2111e-01,  4.3445e-01,  4.1064e-01, -5.5713e-01,
          9.1943e-01, -2.0001e-01,  1.3711e-01, -4.6909e-02, -5.3372e-02,
         -4.1018e-01,  2.0183e-01, -9.7478e-01,  3.5621e-02, -6.5863e-01,
         -5.3191e-03, -7.8770e-01,  4.0164e-01,  1.2675e+00,  1.5981e-01,
          1.8260e-01, -1.4002e-01]], device='cuda:0') tensor(1.3558, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
196000 特征值优化 tensor(2.1158, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4607e+00,  8.2074e-01,  1.7514e-01,  4.2921e-01,  3.0271e+00,
          4.1720e-01,  1.3022e+00, -6.5184e-01,  1.5186e+00,  6.0908e-01,
          1.1654e+00,  1.3019e-01,  1.9842e-01, -3.6404e-02, -1.9946e-01,
         -2.8150e-01,  2.2788e-01, -1.7705e-01,  4.7009e-02,  4.7298e-03,
          1.7241e-01,  1.9072e-01, -2.6495e-02,  2.7085e-02,  2.7206e-01,
          5.6632e-02, -4.7885e-02,  6.2773e-02, -3.3571e-02, -2.1301e-01,
         -6.7663e-01,  2.5956e-01,  3.9213e-01, -2.1036e-02,  1.5782e-02,
         -2.4504e-02,  4.9922e-01, -5.4932e-01, -4.9762e-02,  5.9072e-02,
          4.9218e-01, -1.0514e-01,  8.1862e-01, -6.0352e-01,  1.9843e-01,
          9.1809e-01, -3.2817e-01, -2.0526e-03, -4.7630e-01,  1.0273e+00,
         -3.6551e-01, -1.0313e-01,  3.9500e-01,  4.7504e-01, -5.8159e-01,
          8.6313e-01, -2.2935e-01,  1.4949e-01, -5.4357e-02, -3.3219e-03,
         -3.4881e-01,  1.9813e-01, -9.0903e-01, -7.1381e-02, -6.1437e-01,
          2.7852e-02, -3.6779e-01,  1.6912e-01,  1.1761e+00,  1.7808e-01,
         -7.0569e-05, -8.4085e-02]], device='cuda:0') tensor(1.2883, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
197000 特征值优化 tensor(14.9985, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.7406, -0.4302,  0.7292,  1.3020, -1.3531,  0.6554,  1.6500, -0.0996,
         -0.2762,  1.7549,  0.4590,  0.0518, -0.3782,  0.1127, -0.1222,  0.2467,
         -1.2052, -0.2362, -0.6264, -0.9450, -0.1347, -0.0658, -0.8924, -0.4520,
          0.2519, -1.6678,  0.6324, -0.0732,  0.1501, -0.9165,  0.5744, -2.2281,
         -0.1034, -1.2218,  0.0189, -0.0383,  0.1948,  0.2766, -0.0543, -0.0113,
          0.5689,  0.0804, -2.0368, -0.1294,  1.6749, -0.0599, -0.2442,  0.2382,
          1.9359, -0.7849, -0.5871,  0.2585,  0.4260,  1.8010,  0.6747, -1.5508,
         -2.2968, -0.4461, -0.0830, -1.4720, -0.2445,  0.8262,  0.9007,  0.5741,
          0.6427, -0.2263, -0.9993,  0.2395,  0.8612, -0.4437, -0.3138,  0.3538]],
       device='cuda:0') tensor(8.4137, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
198000 特征值优化 tensor(4.8286, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.3335e-01, -1.4840e-01,  1.1804e+00,  1.2753e+00, -3.2423e-01,
          1.5650e+00,  2.4572e+00, -4.0940e-01,  3.5150e-02,  6.3563e-01,
          7.3648e-01,  1.1058e-01, -3.8784e-02,  3.4695e-02,  3.1465e-02,
          1.4678e-02, -3.7195e-01, -1.0516e-01, -1.7329e-02, -1.7647e-01,
         -1.0151e-01, -3.0681e-01, -2.7474e-01, -1.0631e-01,  3.1549e-01,
         -7.6928e-01,  1.9487e-01,  1.1635e-01,  1.1203e-01, -4.3007e-01,
          4.1121e-03, -1.2439e+00, -1.3174e-01, -3.6671e-01,  4.2937e-02,
         -4.0907e-02,  5.0928e-01,  3.4584e-01,  6.5849e-02,  2.8419e-02,
          3.1449e-01, -3.5515e-02, -9.3348e-01,  1.1037e-01,  7.4503e-01,
          4.6478e-01, -3.0491e-01,  3.6941e-01,  1.0376e+00, -4.1383e-01,
         -1.6026e-01,  3.9872e-01,  6.7863e-01,  7.6221e-01,  2.2205e-01,
         -7.3016e-01, -1.3691e+00,  3.3469e-01, -2.4044e-03, -5.5996e-01,
          4.8088e-01, -1.3423e-01,  3.7269e-01,  2.6380e-01, -1.1387e-01,
          1.2000e-01, -3.6181e-01,  8.4242e-02,  1.0684e+00, -6.1150e-01,
         -3.3134e-01,  1.0517e-01]], device='cuda:0') tensor(2.1514, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
199000 特征值优化 tensor(2.1127, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.4563e-01,  1.5115e-01,  1.3679e+00,  1.2521e+00,  2.3585e-01,
          1.6745e+00,  2.8597e+00, -1.1952e-01,  3.4020e-02,  2.4230e-01,
          3.6817e-01, -7.7403e-02,  3.5225e-02, -3.8386e-02,  1.4813e-02,
         -2.7434e-02, -1.2925e-01, -3.0728e-02,  1.9264e-02, -1.5294e-02,
         -1.5880e-01, -3.1949e-01, -2.1633e-01, -1.7638e-01,  2.4862e-01,
         -2.5336e-01,  6.7185e-02,  2.4134e-02,  2.7240e-02, -3.5151e-01,
          4.7774e-02, -6.8785e-01, -1.2314e-01, -2.5608e-01, -3.4614e-02,
          7.8702e-03,  5.7922e-01,  2.9982e-01,  2.7035e-02, -1.7606e-03,
          1.4339e-01, -2.5190e-02, -3.5408e-01, -2.5664e-01,  3.2888e-01,
          1.1508e-01,  7.6438e-03, -6.3731e-03,  6.5745e-01,  9.6363e-02,
         -9.6105e-02,  3.4273e-01,  1.0959e+00,  1.3165e-01,  4.8014e-01,
         -5.0479e-01, -1.1990e+00,  2.2380e-01,  1.6465e-02, -1.3205e-01,
          8.7252e-01, -6.3215e-01,  2.5911e-01,  1.6677e-01, -6.5690e-02,
          1.5402e-01, -8.6164e-02, -1.7515e-02,  9.0700e-01, -4.1873e-01,
         -1.9220e-01,  1.3246e-01]], device='cuda:0') tensor(1.5174, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
200000 特征值优化 tensor(14.7235, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1039e-01, -9.3221e-01,  1.8495e-03, -8.0947e-01, -7.0109e-01,
          6.6424e-01,  4.6197e-01,  5.0992e-02, -7.2771e-01, -2.1819e+00,
          4.8046e-01,  3.9336e-01, -6.6848e-01, -1.1792e+00, -3.5730e-01,
         -5.2304e-02, -4.3884e-01, -4.1447e-01,  2.3821e+00, -3.2704e-02,
         -2.2675e-01,  4.1449e-01, -5.6360e-01, -2.7406e-01,  4.1338e-01,
         -9.4959e-01, -1.4102e-01,  1.5813e-01, -6.1304e-02, -6.7463e-03,
         -2.2084e-01,  4.3834e-01, -2.3794e-01,  8.8768e-01, -8.3892e-03,
          6.1206e-01,  3.0879e-01, -1.3981e+00, -8.1515e-01,  4.2713e-01,
         -7.8085e-01,  1.7632e+00, -2.0616e+00,  8.7737e-02,  7.2510e-01,
          1.6309e+00, -4.3935e-01,  1.0103e-01,  3.5492e-01,  2.1930e-01,
          1.0116e+00,  5.9509e-01, -6.2261e-01,  9.7318e-01,  6.4629e-01,
          7.8990e-01, -9.3888e-02,  9.5827e-01, -6.5968e-01, -6.5204e-01,
         -8.9150e-01,  2.9153e+00, -2.8100e-01, -1.0664e+00, -1.4473e-01,
          5.8511e-01,  8.9223e-01,  6.9308e-01,  6.3080e-01,  2.4971e+00,
          6.5330e-02,  1.6327e+00]], device='cuda:0') tensor(7.3471, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
201000 特征值优化 tensor(4.8510, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0308, -1.5813,  0.2359, -0.9966, -0.1036,  1.2085,  1.5353, -0.5001,
         -0.1140, -1.4635,  1.5796,  1.1093, -0.1309, -0.2290,  0.0782, -0.2869,
         -0.1034, -0.4916,  1.3257, -0.0257,  0.0089,  0.0709,  0.0536, -0.0565,
         -0.0266, -0.1864, -0.0932,  0.4135,  0.0058, -0.0619, -0.0101,  0.0133,
         -0.0384,  0.4657, -0.0151,  0.0503,  0.2788, -0.5479, -0.3628,  0.1129,
         -0.1146,  1.2722, -1.2933, -0.0197,  0.0967,  0.9309, -0.0881, -0.1853,
         -0.0517, -0.1239,  0.5945,  0.1680, -0.2388,  0.2033,  0.0494,  0.0179,
          0.1986,  0.4051, -0.2929, -0.1901, -0.1353,  1.8356, -0.4547, -0.6355,
          0.2397,  0.4922,  0.6880,  0.1568,  0.2093,  1.3636,  0.4566,  1.4719]],
       device='cuda:0') tensor(1.9228, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
202000 特征值优化 tensor(2.1110, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2394e+00, -1.8098e+00,  3.6010e-01, -6.5638e-01, -2.8769e-01,
          1.1476e+00,  2.1719e+00, -1.0111e+00,  1.0577e-02, -1.0001e+00,
          2.0929e+00,  1.5521e+00, -1.1725e-01, -2.1306e-02, -4.9364e-02,
         -4.0287e-01, -3.7740e-01, -6.1476e-01,  7.2832e-01, -1.6645e-02,
         -1.2870e-02, -2.0107e-02,  1.5746e-01, -1.5415e-01, -1.7669e-01,
         -1.6671e-01, -3.4818e-01,  2.3462e-01, -2.1085e-02,  1.2410e-03,
         -2.3378e-02,  1.8392e-02,  5.7896e-03,  3.3460e-01, -7.8860e-02,
         -6.9266e-02, -1.5253e-01, -4.2666e-01, -6.0671e-02, -9.7346e-02,
          1.9494e-01,  1.0517e+00, -1.1407e+00, -1.2902e-01,  1.7240e-01,
          8.9056e-01, -1.3555e-02, -3.4277e-01,  4.9740e-02,  3.0249e-02,
          3.4410e-01, -8.3584e-03, -2.0284e-01,  1.3598e-01, -1.1631e-01,
         -1.7475e-01,  1.6554e-01,  2.7743e-01, -6.0455e-01, -8.0828e-01,
          2.2861e-01,  1.1634e+00, -5.7909e-02, -2.6168e-01,  6.8463e-02,
          1.5933e-01,  4.5788e-01, -1.3302e-01, -4.4833e-01,  8.2046e-01,
          1.8458e-01,  8.2622e-01]], device='cuda:0') tensor(0.6130, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
203000 特征值优化 tensor(9.8243, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0755,  1.2784, -0.1066, -1.3929,  0.0117,  0.9234, -0.8973, -0.9871,
          0.2555, -1.7596,  0.2298,  1.1331,  0.6344,  0.5177,  1.1707, -0.0116,
         -0.1862,  0.1712, -0.9747, -0.6461, -0.9826, -0.2042,  0.5167, -0.3367,
         -1.1692, -0.2626, -0.8639, -0.2152, -0.0052, -0.8494, -0.0597,  0.8241,
         -0.5780,  1.7932,  0.5086, -0.4051, -0.3663, -0.4192, -1.2178,  0.3864,
         -0.5385, -0.4719,  1.4819,  0.4717, -1.8609, -0.3229, -0.7003, -0.9753,
          1.5825, -0.3873,  0.9833,  0.7182,  1.4134, -0.4593, -1.5823, -0.0957,
          1.4711, -0.0656, -1.3006,  0.3056,  0.0217,  0.2274,  1.0523, -0.4827,
          1.0613,  0.2705,  0.8136, -1.8918, -0.6763,  0.6313, -0.1972,  0.1963]],
       device='cuda:0') tensor(4.6021, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
204000 特征值优化 tensor(2.5996, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.4994e-01,  7.2503e-01,  5.6401e-01, -3.2521e-01,  1.0124e-01,
          1.7630e+00, -3.7994e-01, -3.2669e-01,  1.0377e+00, -2.1963e+00,
          2.2808e-01,  1.6664e+00,  2.6903e-01,  1.9220e-01,  4.1274e-01,
          8.8946e-02,  6.8422e-02, -1.0668e-01, -2.5510e-01, -4.0526e-01,
         -2.7612e-01, -1.6629e-01,  4.6233e-05, -1.7247e-02, -2.1737e-01,
         -8.1906e-02, -2.7357e-01,  2.7492e-01, -1.4733e-02, -2.0138e-01,
          1.5597e-02,  3.3786e-01, -1.2225e-01,  1.1212e+00,  5.8515e-01,
         -4.5334e-01, -1.0256e-01, -7.5013e-02, -7.3981e-01,  4.5445e-01,
         -2.6057e-02, -4.3992e-01,  4.5672e-01,  5.1567e-01, -1.2328e+00,
         -4.9196e-01, -1.2836e-02, -3.4095e-01,  8.7072e-01,  1.6666e-02,
          4.4795e-01,  1.5368e-01,  1.0830e+00, -5.0862e-01, -2.3005e-01,
         -5.1091e-02,  1.4740e+00,  7.1589e-02, -1.0305e+00,  3.5025e-01,
          8.4000e-02, -1.2032e-01,  2.4876e-01, -1.6707e-01,  1.4262e+00,
          4.5310e-02,  1.0150e+00, -1.1221e+00, -4.2874e-01,  2.0380e-01,
          1.3896e-01,  1.9498e-01]], device='cuda:0') tensor(1.1447, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
205000 特征值优化 tensor(2.1211, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4740,  0.6932,  0.4840, -0.4771,  0.0804,  2.0535, -0.2800, -0.2173,
          1.3044, -1.9302,  0.2301,  1.8048,  0.1600,  0.0218,  0.0875,  0.0343,
          0.0096, -0.0159, -0.0843, -0.2375, -0.1729, -0.0936, -0.0256,  0.0124,
         -0.1759, -0.0771, -0.1898,  0.2046,  0.0426, -0.1370, -0.0184,  0.0332,
         -0.0346,  0.9261,  0.6380, -0.4237, -0.1197, -0.0577, -0.6457,  0.3956,
          0.0029, -0.4594,  0.1152,  0.6333, -1.1025, -0.5961,  0.2309, -0.2250,
          0.3717,  0.3777,  0.2869,  0.1546,  0.1172, -0.0255,  0.0660, -0.0314,
          1.0312, -0.0203, -0.7690,  0.4915, -0.0490, -0.0448,  0.0042, -0.0700,
          1.1702,  0.0711,  0.6349, -0.9012, -0.2404,  0.1757, -0.1366,  0.3281]],
       device='cuda:0') tensor(1.3532, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
206000 特征值优化 tensor(7.4487, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-9.9096e-01, -7.9299e-01,  4.1853e-01,  8.2847e-01, -4.4991e-01,
         -8.4065e-01, -4.2365e-01, -2.1063e-02, -4.8930e-01,  7.1297e-01,
          1.3725e+00,  1.1095e+00, -1.2849e-01, -2.4626e-01, -8.1644e-02,
         -6.9451e-01, -1.0908e-01, -1.5665e+00, -9.5925e-02,  1.1281e+00,
          1.2988e-01,  9.5181e-01, -5.6467e-01, -2.0671e-01, -3.8652e-01,
          4.4559e-01, -8.4187e-01, -8.4012e-01,  5.2254e-01,  1.2719e-01,
         -8.9401e-01, -1.0014e-01, -1.5331e-01,  1.6096e-02,  1.6058e-03,
         -1.1977e-01, -3.5176e-01,  2.3250e-01, -2.6012e-01, -2.6239e-01,
         -1.8134e-01, -1.8942e-01,  3.7974e-01, -6.3240e-01, -1.4241e+00,
         -8.3963e-01,  7.6599e-01,  1.5544e+00, -2.7601e-01, -8.2983e-01,
          4.7822e-01, -1.9825e-01, -3.7765e-03,  1.4766e+00, -6.4013e-02,
          1.6010e-02,  1.8064e+00, -2.5222e-01,  6.7636e-01,  1.1297e+00,
          5.2617e-01,  6.6243e-02, -4.0889e-01, -4.2124e-01, -1.7422e+00,
         -1.8726e-01, -7.7212e-02,  1.4305e-01, -1.2373e+00, -2.9209e-01,
          4.3742e-01,  5.1031e-01]], device='cuda:0') tensor(3.4582, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
207000 特征值优化 tensor(2.3177, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.8283e-01, -6.9300e-02,  6.6449e-01,  1.2934e+00,  2.4180e-01,
         -8.1790e-01, -2.9846e-01,  1.4716e-01,  3.1031e-01,  5.7563e-01,
          1.6789e+00,  8.3877e-01, -7.6399e-02, -7.9686e-02, -8.0301e-02,
         -7.3433e-04,  6.9983e-02, -6.1759e-01,  8.9165e-02,  4.9493e-01,
          6.5248e-02,  5.6521e-01, -1.9201e-01, -6.1132e-02, -2.5771e-01,
          1.7776e-01, -2.6315e-01, -2.2870e-01,  3.4439e-01,  3.5836e-01,
         -4.1001e-01, -1.0332e-03,  2.8034e-03,  1.2253e-01, -8.1589e-03,
          3.2976e-02, -2.0306e-02,  4.7323e-03, -8.8953e-02,  2.2113e-02,
         -6.2894e-03, -1.4495e-01,  7.9436e-01, -2.1991e-01, -7.9362e-01,
         -3.8885e-01,  3.2592e-01,  1.1067e+00, -2.2735e-02, -6.5601e-01,
          1.3605e+00, -3.2324e-01,  8.3206e-02,  6.4290e-01, -2.5930e-02,
          3.2950e-03,  1.3859e+00, -3.0030e-01,  4.0319e-01,  7.3651e-01,
         -1.3498e-01,  9.7481e-02, -3.6322e-02, -1.6329e-02, -8.8122e-01,
          1.7714e-01, -2.6901e-01,  6.8327e-02, -1.1275e+00,  1.4591e-01,
         -2.7558e-01,  3.0185e-01]], device='cuda:0') tensor(1.7802, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
208000 特征值优化 tensor(2.1356, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.5928e-02,  1.1221e-01,  7.5187e-01,  1.3086e+00,  1.8420e-01,
         -9.4394e-01, -7.6159e-02,  9.7055e-02,  3.6679e-01,  5.5413e-01,
          1.7068e+00,  3.6280e-01, -8.8071e-02, -7.9926e-04, -7.6071e-02,
          2.8722e-03,  3.9688e-02, -4.2647e-01,  1.1612e-01,  3.3519e-01,
          6.7220e-02,  5.3224e-01, -1.2099e-01,  4.8864e-02, -1.2597e-01,
         -4.2858e-02,  4.8960e-02, -9.0090e-02,  6.1917e-02,  2.8553e-01,
         -2.1368e-01, -6.7044e-03, -6.1763e-03,  7.8479e-02,  1.1923e-03,
          2.7587e-02, -1.8274e-02,  1.6051e-02, -8.0123e-02,  2.8990e-02,
         -4.6311e-03, -8.8280e-02,  6.3956e-01, -2.5706e-01, -5.9384e-01,
         -6.1867e-01,  4.2365e-01,  9.3782e-01,  7.8467e-02, -6.2952e-01,
          1.3777e+00, -3.1644e-01, -1.6053e-01,  4.4771e-01,  5.5611e-04,
          5.3929e-04,  1.0458e+00, -8.5765e-02,  5.4782e-01,  4.2849e-01,
         -9.8440e-02,  7.8071e-02, -4.3809e-02, -2.7560e-03, -6.3834e-01,
          2.1336e-01, -1.7913e-01,  1.5917e-01, -1.0398e+00,  2.1664e-01,
         -1.2614e-01,  1.4985e-01]], device='cuda:0') tensor(0.8557, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
209000 特征值优化 tensor(13.7133, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8594,  0.6055,  0.2198, -0.5380,  1.0910,  1.0868, -1.2451, -1.5519,
         -0.3019,  0.1103, -1.4258,  1.1564, -1.1086,  1.1562, -1.0657, -1.1970,
          0.2412, -0.6785, -2.2970,  0.4796, -0.1332, -1.6378,  1.0094,  1.0947,
          0.9209,  0.4800, -0.2496, -0.0830, -1.0928, -0.3764, -0.1914,  0.0805,
         -0.0986, -1.1343, -0.1669, -1.5339, -0.1161,  0.7615, -0.5776,  0.3460,
         -0.2512, -1.0643,  0.5815, -1.5224, -1.3966, -0.1158, -0.3761,  2.3242,
         -0.2114,  0.6056, -0.2330, -0.5439, -0.2088,  0.0685, -0.6600,  0.3911,
         -0.8865, -0.5780,  1.1528,  0.6166,  1.0299, -0.5585,  0.2301,  0.1889,
          0.2985, -0.5473, -0.2440,  0.3867, -0.3567, -1.1294,  2.0686, -0.2526]],
       device='cuda:0') tensor(7.1741, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
210000 特征值优化 tensor(3.2330, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7733e+00,  1.2137e+00,  1.1302e+00, -3.9253e-01,  6.1265e-01,
          1.7661e+00, -5.5033e-01, -6.7018e-01, -2.7062e-01, -2.5349e-01,
         -7.1095e-01,  1.6336e+00, -1.2219e-01,  2.4008e-01, -1.9450e-01,
         -2.8459e-01,  1.2596e-01, -2.4369e-01, -1.1871e+00,  2.3095e-01,
         -3.4731e-02, -8.1248e-01,  3.0464e-01,  2.3819e-01,  6.2598e-02,
         -8.8918e-02, -1.9319e-01, -2.8127e-02, -6.3614e-01, -1.0774e-01,
          5.2707e-02, -3.2415e-02,  1.3575e-02, -1.4445e-01, -1.2540e-01,
         -9.5179e-01,  9.4489e-02,  1.2549e-01, -6.0648e-02,  7.3130e-02,
          6.7229e-02, -4.2618e-01, -1.4223e-01, -6.3709e-01, -4.9624e-01,
         -1.0140e-01, -5.2247e-01,  1.8657e+00, -3.9264e-01,  5.2006e-01,
          1.7702e-01, -1.9527e-01, -7.1084e-01,  3.2907e-01,  2.3613e-02,
          2.8451e-01, -2.3901e-01, -3.6067e-01,  3.1216e-01, -3.9312e-01,
          7.5174e-02,  5.5272e-05,  1.5381e-01, -1.2892e-01,  1.9197e-01,
          2.7620e-02, -5.0746e-01,  2.3926e-01, -3.7592e-02, -2.5751e-01,
          2.5560e+00, -7.9006e-01]], device='cuda:0') tensor(2.1288, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
211000 特征值优化 tensor(2.1756, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3041,  1.2723,  1.2479, -0.0270,  0.1323,  1.8244, -0.1017, -0.4362,
          0.0646, -0.3286, -0.2794,  1.9116,  0.0196,  0.0355,  0.0117,  0.0275,
         -0.0517, -0.3937, -0.5478, -0.0048,  0.0390, -0.5390, -0.0934,  0.0343,
          0.0184,  0.0088,  0.0321, -0.0385, -0.5621, -0.0278,  0.0251, -0.0584,
          0.0145, -0.0129, -0.1166, -0.8580,  0.0930,  0.0778, -0.0276,  0.0121,
          0.1122, -0.1598, -0.6201, -0.3407, -0.3083, -0.5646, -0.3843,  1.1637,
         -0.5756,  0.5772,  0.0499, -0.3369, -0.2622,  0.2395,  0.2404,  0.2450,
         -0.2544, -0.3006,  0.1541, -0.7367, -0.2988,  0.1463, -0.0999, -0.0743,
         -0.1254,  0.0922, -0.5578,  0.2628, -0.2234, -0.0039,  2.4994, -0.9107]],
       device='cuda:0') tensor(1.3720, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
212000 特征值优化 tensor(2.1099, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2703,  1.0825,  1.1462, -0.0137, -0.0219,  1.8370, -0.0133, -0.3949,
          0.2177, -0.2712, -0.2058,  2.0226,  0.0404,  0.0141,  0.0101,  0.0034,
          0.0086, -0.3121, -0.3859, -0.1058,  0.0604, -0.4207, -0.0435,  0.0170,
          0.0703, -0.0144, -0.0052, -0.0455, -0.5606,  0.0356,  0.0266, -0.0114,
          0.0245, -0.0158, -0.1274, -0.8132,  0.1228,  0.1114, -0.0151, -0.0277,
          0.1010, -0.0492, -0.6412, -0.2489, -0.2539, -0.6212, -0.2810,  0.9606,
         -0.6407,  0.4981, -0.1628, -0.3644, -0.0642,  0.2136,  0.2501,  0.2036,
         -0.3030, -0.2532,  0.1326, -0.6081, -0.2887,  0.1264, -0.1394, -0.0291,
         -0.1455,  0.1119, -0.5854,  0.2492, -0.2780,  0.0229,  2.4870, -0.8788]],
       device='cuda:0') tensor(1.0438, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
213000 特征值优化 tensor(2.0667, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2307,  0.9405,  1.0517, -0.2462, -0.0990,  1.8490,  0.0165, -0.2998,
          0.3404, -0.3688, -0.1287,  2.0489,  0.0483,  0.0637,  0.0132, -0.0936,
          0.0947, -0.2110, -0.2769, -0.1472,  0.0678, -0.3365,  0.0492,  0.1279,
          0.0681,  0.0044, -0.0492, -0.0729, -0.5263,  0.1473,  0.0266, -0.0092,
          0.0233, -0.0169, -0.1304, -0.7663,  0.0705,  0.1280, -0.0081, -0.0416,
          0.1608,  0.0133, -0.6219, -0.2148, -0.2146, -0.6297, -0.2290,  0.8047,
         -0.5806,  0.3559, -0.4116, -0.4070,  0.0573,  0.1982,  0.1990,  0.2651,
         -0.2938, -0.2324,  0.0426, -0.5996, -0.2072,  0.0716, -0.1849,  0.0067,
         -0.1040,  0.1143, -0.5675,  0.1826, -0.3036,  0.0522,  2.4846, -0.9116]],
       device='cuda:0') tensor(1.1630, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
214000 特征值优化 tensor(4.0874, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3379, -0.0957,  0.2002,  0.0447,  1.4458,  1.0559,  0.3820,  1.1595,
          1.1452,  0.1755,  1.7394,  0.1715,  0.1400,  0.1093,  0.0737,  0.6896,
         -0.0277, -0.0723,  0.5439, -0.0668,  0.2104, -0.0567, -0.0662,  0.0768,
          0.0227,  0.6477,  0.1426,  0.0160, -0.1159,  0.0420,  0.2120, -0.1880,
          0.1548, -0.4575,  0.3256, -0.3706,  0.1355,  0.0112,  0.2958, -0.0327,
         -0.6859, -0.3324, -0.3128,  0.2696,  0.1013,  0.1963,  0.0295, -0.0833,
         -1.2135,  1.0829, -0.1884,  0.1914, -1.0711,  0.0096,  0.6312, -0.1212,
          1.2301, -0.1035,  0.4398,  0.2929,  0.4345, -0.0383,  0.9833, -1.1562,
         -0.3532,  0.9139,  0.0407,  0.6305, -0.0551,  0.3280, -0.2314,  0.8528]],
       device='cuda:0') tensor(2.9991, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
215000 特征值优化 tensor(2.1389, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.4768e-01,  6.4778e-02,  2.4014e-01,  1.0441e-01,  8.5266e-01,
          1.0492e+00,  5.4786e-01,  9.1013e-01,  1.4467e+00,  5.0390e-01,
          1.9168e+00,  4.2542e-01,  2.7694e-03, -1.5970e-02, -6.0886e-02,
          2.9550e-01,  3.2791e-02,  1.9543e-02,  3.2912e-01, -3.3661e-02,
          2.5609e-02, -1.4357e-03,  1.9783e-02,  2.0966e-02, -6.0057e-02,
          2.3845e-01, -1.3496e-01, -1.1745e-02, -3.9448e-02,  1.5249e-02,
          2.5303e-01, -1.7107e-01,  1.5313e-01, -3.8417e-01,  1.2513e-01,
         -8.6015e-02,  1.4012e-01, -4.4169e-03,  1.5377e-01,  3.6329e-02,
         -5.9168e-01, -8.4827e-02, -2.3828e-01,  1.5241e-01,  1.6827e-01,
          4.7927e-02,  7.0649e-03,  3.8597e-03, -6.2848e-01,  7.1863e-01,
         -1.0724e-01,  6.1166e-02, -9.5983e-01, -6.3710e-03,  2.6692e-01,
         -2.6589e-02,  1.1160e+00, -2.8983e-01,  5.2501e-01,  4.2674e-01,
          7.2445e-01, -5.4267e-01,  5.0345e-01, -6.6269e-01, -8.5017e-02,
          5.5235e-01,  3.1757e-01,  3.2625e-01,  1.4157e-01,  1.5640e-01,
          1.0611e-01,  4.4681e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
216000 正交保障 tensor(3.2610, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9348,  0.1389,  0.6580, -0.1924, -0.3311,  0.3950,  2.5254, -0.1979,
          1.2664, -0.1789,  0.9126, -0.5157,  0.8018, -0.3677, -0.1580, -0.8619,
         -0.0555, -1.2488, -0.2579,  0.3049,  0.5168,  0.1180, -0.1904,  0.0133,
         -0.4946, -1.5759, -0.1736,  0.3225, -0.8402, -1.1391, -0.0914,  0.0574,
          0.1027,  0.3043, -0.0107, -0.1228,  0.2391, -0.8231, -0.0298,  0.0123,
          0.8733, -0.1844,  1.4114,  0.6758, -1.0722,  2.3346, -0.2189,  1.0695,
          0.3533, -0.3780,  0.3985,  0.0044, -0.1664,  0.1590,  1.1148, -0.5455,
         -0.6434,  0.2080, -0.5078, -0.1404, -0.1763,  0.2390, -1.1512, -0.3316,
         -0.4397,  0.1658, -0.0397, -0.0307,  0.1586, -0.3441,  0.8474,  0.2374]],
       device='cuda:0') tensor(3.2610, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
217000 特征值优化 tensor(2.2787, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.2814e+00,  6.7307e-01,  1.0822e+00, -6.4669e-01,  4.9733e-02,
          3.2331e-01,  2.4632e+00, -7.0084e-01,  1.4226e+00, -1.0926e-01,
          1.4340e+00, -8.2407e-02,  5.0097e-01,  4.1665e-03,  3.2457e-02,
         -4.9922e-01, -1.5489e-01, -5.4354e-01,  6.7055e-02,  5.0102e-01,
          5.0808e-01,  1.2692e-01, -3.4799e-02, -3.1318e-03, -3.7594e-01,
         -6.3654e-01,  5.0082e-02,  2.8437e-02, -5.4625e-01, -7.3161e-01,
         -1.8526e-02,  5.5912e-04, -3.1064e-02,  2.3793e-02,  4.3679e-02,
          4.7178e-03,  3.8294e-01, -5.3193e-01, -1.1459e-01, -2.2514e-02,
          4.9550e-01,  6.0432e-03,  1.4853e+00,  5.3575e-01, -9.6893e-01,
          2.1357e+00, -2.2273e-01,  1.1087e+00,  6.4829e-01, -7.7273e-01,
          2.9073e-01, -9.2016e-02, -2.4437e-01,  1.5213e-01,  7.2592e-01,
         -6.0644e-01, -4.8004e-01,  3.1017e-01, -9.9758e-02, -1.2783e-02,
         -7.2359e-01,  5.0137e-01, -7.1577e-01, -1.9644e-01, -8.7376e-01,
          3.1538e-01,  6.2904e-02,  2.0299e-02,  3.6563e-01, -2.5588e-01,
          2.9800e-02,  1.6564e-03]], device='cuda:0') tensor(1.5024, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
218000 特征值优化 tensor(2.1069, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3136e+00,  7.0178e-01,  1.1644e+00, -8.5585e-01,  2.7478e-01,
          5.5941e-01,  1.9710e+00, -9.9112e-01,  1.0532e+00,  6.4644e-02,
          1.1903e+00,  2.0804e-01,  4.7524e-01, -3.1596e-02,  8.3448e-03,
         -4.3053e-01, -2.8796e-01, -2.6973e-01,  1.4486e-01,  5.9774e-01,
          4.9793e-01,  1.6346e-01, -3.3393e-02, -3.8276e-02, -3.8319e-01,
         -3.3163e-01, -2.0231e-02, -1.2491e-02, -4.7777e-01, -6.6419e-01,
         -2.2128e-02,  6.1381e-03, -3.8201e-02,  2.6819e-02,  4.1998e-02,
         -1.4796e-02,  5.0480e-01, -5.6546e-01, -1.1518e-01, -3.5718e-04,
          3.6613e-01, -1.3953e-02,  1.5725e+00,  3.8156e-01, -8.4922e-01,
          1.9868e+00, -1.4500e-01,  1.0005e+00,  5.6241e-01, -7.4418e-01,
          1.0285e-01,  7.9213e-03, -2.6706e-01,  1.6992e-01,  5.2494e-01,
         -2.8131e-01, -2.4293e-01,  1.8337e-01, -4.7309e-02,  1.6913e-02,
         -7.5851e-01,  4.8648e-01, -3.0623e-01, -2.6758e-01, -5.6965e-01,
          3.2474e-01,  4.5587e-02, -3.1814e-02,  5.1626e-01, -8.1964e-02,
         -8.4531e-03,  3.8620e-02]], device='cuda:0') tensor(1.1719, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
219000 特征值优化 tensor(8.5652, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.4943e-01,  1.6503e-01,  1.0909e+00,  1.0757e+00,  6.1075e-01,
          1.4156e+00,  1.5091e-01, -8.6261e-01,  7.3216e-01,  1.4894e+00,
          1.4200e+00,  1.1950e+00, -4.2610e-01, -1.1148e+00, -6.0403e-01,
         -1.1896e-01, -1.8429e-01,  8.9859e-02, -2.8002e-01,  6.8235e-01,
         -5.5875e-01, -7.7995e-01,  2.7533e-01, -1.2719e+00, -1.4669e+00,
         -3.5071e-01,  3.1693e-02,  1.9055e-02, -6.6317e-01, -5.2154e-01,
         -4.6351e-04, -3.9468e-01,  7.0304e-01,  1.0706e+00, -3.4162e-01,
          6.2127e-01,  1.1836e-02, -2.4652e-01,  9.3047e-02,  1.1247e-01,
         -3.5809e-02,  2.3705e-01,  2.6979e-01, -3.7803e-01, -2.8480e-01,
          2.7632e-01, -7.1607e-02,  1.6562e-01, -3.5951e-01,  9.3259e-01,
         -6.1429e-01,  2.2828e+00, -2.7191e-01,  4.1244e-01,  2.5771e-01,
          1.5585e-01,  8.8254e-01, -9.3213e-02,  4.8375e-01,  1.9850e+00,
          2.5685e-01, -7.0924e-02,  8.7236e-01,  1.1694e+00,  2.1361e-01,
         -7.9018e-02,  1.3051e-01, -2.8787e-01, -9.8883e-01,  7.9240e-01,
          1.0352e+00, -4.7180e-01]], device='cuda:0') tensor(4.2399, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
220000 特征值优化 tensor(2.3862, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.9638e-01,  6.1207e-01,  1.8374e+00,  1.2232e+00,  8.6524e-02,
          1.8506e+00, -1.4760e-01,  6.6456e-03,  1.5001e+00,  1.1357e+00,
          1.5470e+00,  8.7413e-01, -3.1336e-01, -1.3414e-03,  6.3069e-05,
          5.7268e-02, -1.0719e-02,  3.5069e-01,  3.7334e-01,  1.4309e-01,
         -2.9288e-01, -5.0492e-01,  2.9393e-01, -4.8974e-01, -6.1066e-01,
          1.5274e-01, -1.1868e-01, -2.2879e-01, -1.1965e-01, -4.0233e-01,
         -1.7859e-04, -2.5966e-02,  6.9374e-02,  7.6885e-01, -2.6488e-01,
          3.1927e-01, -3.3259e-02, -2.4606e-01,  1.4335e-01,  1.5768e-01,
         -1.0510e-02,  1.2504e-01,  2.0005e-01,  7.5258e-02,  1.1168e-01,
          2.2545e-01,  3.6553e-02,  1.0551e+00, -8.8352e-01,  5.5696e-01,
         -1.1024e+00,  1.4486e+00, -1.2193e-01,  1.2011e-01, -3.5009e-02,
         -7.4928e-02,  5.6426e-01,  7.3074e-02,  4.4144e-01,  1.1455e+00,
         -1.5189e-01,  2.1493e-01,  4.9355e-01,  3.7763e-01, -3.4916e-01,
          1.0769e-01,  9.2394e-03, -3.4145e-02, -7.7899e-01,  4.2325e-01,
         -4.6934e-02,  9.0642e-02]], device='cuda:0') tensor(1.2081, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
221000 特征值优化 tensor(2.0886, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.3086e-01,  1.7058e-01,  1.9049e+00,  1.2904e+00,  2.2068e-01,
          1.8148e+00, -8.5297e-01, -2.1119e-01,  1.6324e+00,  8.7255e-01,
          1.3122e+00,  8.7854e-01, -1.2048e-01, -2.3247e-02, -1.9892e-02,
         -3.2921e-04,  6.3048e-02,  2.4734e-01,  1.8746e-01,  5.5510e-02,
         -1.0919e-01, -5.0642e-01,  2.3851e-01, -3.6043e-01, -4.5390e-01,
          1.5745e-01, -1.5764e-01, -1.8526e-01, -1.4376e-01, -3.5211e-01,
         -1.7852e-02,  1.8320e-02,  1.1318e-02,  7.7425e-01, -1.2918e-01,
          1.5916e-01,  1.2660e-01, -8.5350e-02,  1.7446e-01,  1.5415e-01,
          9.4744e-02,  9.2328e-02, -1.6887e-01,  1.0722e-01,  1.0819e-01,
         -1.0149e-01,  3.0524e-02,  1.1360e+00, -1.0092e+00,  7.0220e-01,
         -1.1256e+00,  1.3212e+00, -5.2248e-02,  6.1291e-02,  7.2282e-03,
          2.7838e-02,  3.0957e-01,  1.8245e-01,  4.7234e-02,  8.5085e-01,
          9.5893e-02,  1.4163e-01,  4.1513e-01,  1.5713e-01, -3.7522e-01,
          2.8218e-01, -6.0371e-02,  1.0034e-01, -9.4231e-01,  5.8978e-02,
         -3.4225e-01,  2.5609e-01]], device='cuda:0') tensor(1.2143, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
222000 特征值优化 tensor(5.7124, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7611, -1.0574,  1.6245,  1.8896, -1.2518, -0.2272,  0.3024, -1.5910,
          1.0275, -1.5542, -0.1914,  2.2308,  0.4729, -0.5378,  0.7142, -0.6975,
         -0.1427,  0.0614,  0.0886, -0.5545, -0.2266,  0.0237,  0.4509, -0.8545,
         -0.9356, -0.4782, -0.4636, -0.0494, -0.0886, -0.4672,  0.3341,  0.0234,
          0.0899, -0.7029, -0.0203,  0.2495, -1.0011,  0.6888, -0.0187, -0.1000,
          0.0168,  0.0553,  0.0152,  1.5931, -0.5069, -0.2100, -0.6525,  1.6820,
         -1.4789,  0.9742,  0.7275, -1.0136,  0.3612,  0.8083,  0.4464, -0.7664,
          1.2276, -0.2999, -0.0901,  0.0867,  0.7987,  0.4992, -0.5516, -0.3227,
         -0.3826, -0.0072,  1.2112, -0.2955,  1.9967, -0.9270, -0.3781, -0.3470]],
       device='cuda:0') tensor(3.4051, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
223000 特征值优化 tensor(2.2139, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.4342e-01, -1.4364e+00,  1.9636e+00,  1.7077e+00, -8.2263e-01,
         -8.6208e-02,  8.3363e-01, -1.4320e+00,  1.1927e+00, -1.2574e+00,
          2.5503e-01,  1.7258e+00,  3.3888e-01, -5.0499e-02,  8.4901e-02,
         -2.1094e-01, -1.9194e-01, -6.8179e-02,  1.0875e-01, -7.0351e-02,
         -1.8305e-01, -2.3642e-01, -8.3760e-02, -2.9872e-01, -3.2554e-01,
         -6.2665e-02, -3.6355e-01,  3.4661e-02, -3.2530e-01, -3.2558e-01,
          2.8656e-02,  2.5975e-02,  1.2809e-01, -2.6902e-01, -8.7404e-02,
         -1.3299e-01, -4.4932e-01,  4.5142e-01,  2.3501e-02, -7.2504e-03,
         -1.2212e-01, -1.8730e-02, -3.7242e-01,  1.2174e+00, -4.9643e-01,
         -1.0467e-03, -3.6018e-01,  1.4082e+00, -1.5639e+00,  5.7900e-01,
          1.3780e+00, -6.9477e-01,  1.4210e-01,  2.9869e-01,  7.3121e-02,
         -8.2542e-01,  4.1302e-01, -2.0707e-01, -7.3339e-02,  2.3362e-02,
         -6.0182e-02,  2.4317e-01, -5.4708e-01, -7.2010e-02, -6.7492e-01,
          1.8595e-01,  7.0846e-01, -4.3873e-02,  1.9244e+00, -8.7187e-01,
         -8.6775e-01,  3.1219e-02]], device='cuda:0') tensor(0.9898, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
224000 特征值优化 tensor(2.0941, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9301, -1.3921,  2.0893,  1.7009, -0.8234, -0.3793,  0.9354, -1.3482,
          1.2018, -1.2813,  0.3610,  1.6162,  0.3160, -0.0900,  0.0717, -0.1998,
         -0.1329, -0.1928,  0.2288, -0.0424, -0.1682, -0.2825, -0.1650, -0.1732,
         -0.2203, -0.0229, -0.1772,  0.0342, -0.5877, -0.3441,  0.0257, -0.0140,
          0.1398, -0.1411, -0.0255, -0.0631, -0.3205,  0.4345, -0.0243, -0.0153,
         -0.1590,  0.0095, -0.3978,  1.0947, -0.3762, -0.0244, -0.3057,  1.5259,
         -1.4048,  0.3197,  1.3549, -0.5846,  0.2346,  0.2482, -0.0498, -0.5037,
          0.0288, -0.1213,  0.0479, -0.0415, -0.1460,  0.2393, -0.5236,  0.0186,
         -0.6005,  0.0852,  0.6657, -0.0846,  1.7824, -0.9580, -0.8520,  0.1830]],
       device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
225000 特征值优化 tensor(3.0099, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.1924e-01, -1.2697e+00,  7.6520e-01, -1.4159e-02,  1.3815e+00,
          2.5367e+00, -4.9481e-01, -9.6339e-01,  1.3744e+00,  2.8658e-02,
          1.7992e+00, -5.4267e-01,  3.8516e-01,  1.9508e-01, -3.9053e-01,
          7.2305e-01,  1.5138e-01,  1.9907e-01, -5.0159e-01,  1.6078e-02,
         -4.0268e-01, -1.1667e-01, -9.4528e-02, -6.8907e-02,  9.3910e-01,
         -9.9839e-02,  1.5462e-02,  6.5438e-02, -1.3152e-02,  6.5239e-01,
         -1.5423e-02,  1.3505e-01,  2.9486e-01, -1.2860e+00, -2.9110e-01,
          2.0913e-01,  3.2319e-02, -1.2752e-01, -1.2442e-02,  1.4459e-02,
          3.0330e-01, -7.6063e-02, -5.8249e-02,  2.6993e-02,  6.3952e-01,
          2.4781e-01, -3.4788e-01,  4.4977e-01,  9.3279e-01,  8.2826e-02,
         -4.1980e-01,  3.3499e-01, -8.3007e-01, -1.7490e-03, -2.7786e-01,
          1.1106e+00,  4.8334e-01,  9.5699e-01,  1.0852e-01, -2.0791e-01,
          1.5393e-01, -1.1922e-01, -3.5918e-03,  2.3781e-01, -1.0625e-01,
         -3.6276e-01,  4.3541e-01, -4.3978e-01, -1.7050e-02, -4.9139e-01,
          2.8230e-01,  2.6162e-01]], device='cuda:0') tensor(1.1347, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
226000 特征值优化 tensor(2.1688, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.8568e-01, -6.8677e-01,  8.5809e-01, -2.0277e-01,  1.3291e+00,
          2.5816e+00,  5.9340e-02, -7.2796e-01,  1.2045e+00, -1.3673e-01,
          1.8012e+00, -1.6922e-01,  2.8477e-01,  1.5849e-01, -1.0654e-01,
          2.0704e-01,  1.2548e-01,  2.7060e-01, -4.1239e-01, -1.2785e-03,
         -3.0702e-01, -6.3519e-02, -3.0294e-02,  3.8241e-03,  4.8607e-01,
          5.1634e-02,  2.7007e-02, -6.8233e-02, -1.2349e-01,  4.9889e-01,
          6.4284e-04,  1.8292e-01,  3.6833e-01, -1.1767e+00, -1.0911e-03,
          1.0307e-01,  3.8359e-02, -1.4018e-01,  5.2415e-03, -6.6652e-03,
          3.2838e-01, -1.5202e-02, -3.3337e-01,  2.8719e-01,  3.2732e-01,
          2.2704e-01, -2.3118e-01,  4.3394e-01,  7.5441e-01, -1.2096e-01,
         -7.0873e-02,  2.8719e-01, -7.1196e-01,  6.2638e-02, -3.2863e-01,
          9.2786e-01,  3.6855e-01,  9.5161e-01, -2.3623e-02,  3.2848e-02,
          3.8237e-02, -6.1584e-02, -1.9831e-01,  3.3845e-01, -6.5030e-01,
          1.5474e-01,  1.9449e-01, -1.1811e-01,  3.3611e-02, -4.4348e-01,
          3.5279e-02,  6.1494e-02]], device='cuda:0') tensor(0.9117, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
227000 特征值优化 tensor(2.1127, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6906, -0.5101,  0.7646, -0.2986,  1.1779,  2.5153,  0.2721, -0.5078,
          0.9339, -0.0788,  1.7823,  0.1112,  0.2432,  0.1873, -0.0970,  0.1433,
          0.0976,  0.2675, -0.3126,  0.0197, -0.2618, -0.0668,  0.0321, -0.0341,
          0.2823,  0.1183,  0.0644, -0.0776, -0.1449,  0.4417, -0.0088,  0.1972,
          0.3551, -1.1643,  0.0505,  0.0525,  0.0084, -0.1117,  0.0122, -0.0152,
          0.3467, -0.0118, -0.3140,  0.2072,  0.3089,  0.2335, -0.1952,  0.4164,
          0.6482, -0.0815,  0.0990,  0.2154, -0.5848,  0.0793, -0.2192,  0.8892,
          0.3472,  1.0261, -0.0040, -0.0080,  0.0509, -0.0355, -0.3347,  0.3280,
         -0.4552,  0.1720,  0.1180, -0.0747,  0.0615, -0.4578,  0.0918, -0.0028]],
       device='cuda:0') tensor(1.2694, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
228000 特征值优化 tensor(20.3367, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.8367e-01,  9.3526e-02, -3.7316e-01,  6.6371e-01, -1.2653e+00,
          6.1897e-01,  9.2956e-01, -3.5312e-01,  1.7803e-01,  2.7075e-01,
          1.1238e+00,  1.2590e+00, -1.4511e+00,  3.5070e-01,  6.1022e-01,
         -8.7287e-01,  6.0176e-01,  2.0533e-01, -8.0727e-01,  2.8776e+00,
         -1.4431e-01,  4.6517e-01,  2.0719e-01, -2.7642e-01,  1.8548e+00,
         -4.7476e-01,  8.1472e-01, -8.1362e-01,  6.3905e-02,  9.3082e-01,
         -1.0034e+00,  1.9155e-02,  3.1022e-01,  9.7731e-01, -1.4036e+00,
         -4.8488e-01,  7.2443e-01, -6.1570e-01, -1.5389e+00,  6.7048e-01,
          3.7663e-01, -4.8679e-01, -1.1478e+00, -1.4676e+00,  4.4785e-02,
         -3.1963e+00, -1.9764e+00,  9.5406e-01, -6.1270e-01,  8.3409e-01,
         -1.2310e+00,  2.8547e-01,  2.1587e+00,  8.7276e-01,  1.4043e-02,
         -4.7872e-01,  5.9332e-01, -6.6014e-02, -1.1994e-03, -4.1959e-03,
          4.2738e-01, -9.9593e-01,  6.8131e-01, -4.5940e-01, -1.0877e-01,
          7.8377e-01, -2.6076e-01,  1.1800e+00,  7.4496e-01,  7.3646e-02,
         -1.0958e+00, -3.8085e-01]], device='cuda:0') tensor(11.2682, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
229000 特征值优化 tensor(8.0489, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.8731e-01,  1.1629e+00,  3.0852e-01,  1.0703e+00, -5.4977e-01,
          1.1664e+00,  5.1384e-01, -3.1897e-01,  9.8996e-01,  1.8286e-01,
          6.8120e-01,  1.5180e+00, -6.0493e-01,  5.0761e-02,  5.4850e-02,
         -2.4703e-01,  2.4120e-01, -4.0217e-02, -1.1012e-01,  1.8554e+00,
          3.5119e-02,  3.9778e-01,  3.3540e-03,  8.9439e-02,  1.0668e+00,
         -2.7856e-01,  1.2624e-01, -1.4940e-01,  3.6415e-02,  5.0142e-01,
         -4.2005e-01, -1.5814e-01,  9.9205e-02,  5.0380e-01, -5.5193e-01,
         -4.0631e-01,  1.5159e-02, -2.7523e-02, -1.3707e+00,  5.0026e-01,
          3.6148e-02, -1.7988e-01, -1.4816e-03, -1.7777e+00, -4.5797e-01,
         -2.1831e+00, -9.7046e-01, -7.7531e-02, -3.4075e-01,  6.9351e-01,
         -6.4048e-01,  2.9569e-01,  1.1520e+00,  5.4198e-02,  3.8235e-02,
         -1.7223e-02,  8.4403e-01,  1.3817e-01, -1.5089e-01,  1.0300e-01,
          3.4418e-01, -2.7774e-01,  3.3377e-01, -3.3156e-01, -6.0508e-01,
          1.5796e-01, -3.2696e-01,  6.9051e-01, -4.1681e-02,  7.9958e-02,
         -8.3520e-01, -3.8059e-01]], device='cuda:0') tensor(3.9306, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
230000 特征值优化 tensor(2.1595, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3881e+00,  2.0334e+00,  8.2726e-01,  1.0693e+00, -4.4206e-01,
          1.2600e+00, -2.1717e-01,  6.1156e-02,  1.5108e+00, -2.3959e-01,
          1.3999e-02,  8.1264e-01, -1.1019e-02,  3.4462e-02, -5.0959e-02,
         -4.3488e-02, -2.6618e-02,  5.1532e-03, -1.9227e-02,  1.1034e+00,
          7.9850e-02,  3.1425e-01,  9.7835e-04,  1.8446e-02,  6.1782e-01,
         -5.0163e-01,  1.1605e-01,  8.0744e-02, -1.9792e-03,  3.3493e-01,
         -1.9524e-02, -1.3275e-02,  7.1942e-03,  3.4419e-01, -3.6446e-01,
         -3.5386e-01, -1.9496e-02,  2.6201e-03, -3.8338e-01,  1.1282e-01,
          1.9248e-02, -1.0594e-01,  7.8951e-01, -1.5901e+00, -3.5394e-01,
         -1.5285e+00, -2.6966e-01, -4.7112e-01, -3.5990e-01,  8.8742e-01,
         -4.3711e-01,  2.1257e-01,  2.0687e-01, -1.1766e-02, -2.5994e-02,
          8.1997e-03,  6.6845e-01,  3.3873e-02, -5.8538e-01,  2.5661e-01,
         -1.5969e-01,  1.0275e-01, -3.4837e-03, -3.0392e-03, -1.5541e-01,
          2.2012e-01, -2.7927e-01,  3.4044e-01, -2.0994e-01,  1.8839e-01,
         -3.4742e-01, -3.2467e-02]], device='cuda:0') tensor(1.6497, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
231000 特征值优化 tensor(21.7650, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.0771,  0.1031, -0.9899,  0.0452, -0.6937, -0.1089, -0.5661,  0.5517,
          1.4689, -2.1542,  1.0126,  0.8729, -0.1006, -0.0415, -0.0051,  0.3815,
         -1.0736, -0.2294, -0.5464,  0.1435,  0.0369, -0.1551, -1.4276,  0.8628,
         -1.5875,  0.8926, -0.3802,  0.2495,  0.6423, -0.3785, -3.0895,  0.4869,
         -0.8158,  0.0195, -1.1686, -1.3661,  0.3547,  1.0641, -0.4349,  1.5272,
         -2.6629, -0.1764, -0.5990, -0.0492,  0.9533, -0.0145, -0.4941, -0.3149,
         -0.5589,  0.3488,  0.1734, -1.0986,  0.6399, -2.3051,  0.0681, -0.6844,
         -0.6993,  2.2775, -0.9314,  0.2922, -0.9412, -1.5057,  0.0584,  0.5758,
          0.0913,  0.1096,  1.0361,  0.2805, -0.9218,  0.4542, -0.2610, -1.7545]],
       device='cuda:0') tensor(11.0026, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
232000 特征值优化 tensor(6.7281, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.1401,  0.0445, -0.0888, -0.4342,  0.3220,  0.9554,  0.2333,  0.6034,
          2.3332, -2.6704,  1.9660,  1.7652, -0.0284, -0.0187, -0.0179,  0.0776,
         -0.1011, -0.1102, -0.0175,  0.0036,  0.0106,  0.0510, -0.4317,  0.0883,
         -0.5626,  0.0248, -0.0333,  0.2941,  0.0039, -0.0617, -2.0808,  0.5781,
         -0.1662,  0.7128, -0.2696, -0.4711,  0.1748,  0.4210,  0.0960,  0.6707,
         -1.7336,  0.1314,  0.1267, -0.2723,  0.2914, -0.0437,  0.0330, -0.1110,
         -0.0816,  0.2730,  0.5024, -0.3287,  1.6304, -1.2981, -0.0982, -0.0496,
          0.2458,  1.2538, -0.5452,  0.3209, -0.2196, -0.7132, -0.0511,  0.0688,
          0.7524,  0.6696,  0.3218,  0.3635,  0.0885,  0.6088,  0.6210, -0.8354]],
       device='cuda:0') tensor(3.1561, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
233000 特征值优化 tensor(2.5423, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.5638e-01,  9.7703e-02, -1.4976e-01, -2.0229e-01,  1.3185e+00,
          1.3226e+00, -3.9295e-01, -4.4777e-01,  2.4196e+00, -2.6866e+00,
          2.4638e+00,  1.9003e+00, -2.1965e-02, -9.0724e-02, -1.6647e-02,
         -3.8777e-02,  4.0279e-03, -1.8735e-01,  2.3247e-02, -2.7065e-04,
         -7.0913e-04,  2.8196e-03, -2.8161e-02, -1.7353e-02, -2.6780e-01,
         -2.1420e-01, -2.1262e-01,  3.0327e-01, -2.4023e-02, -2.3488e-02,
         -1.1384e+00, -3.2204e-02,  6.4858e-03,  6.9457e-01, -1.2561e-01,
         -2.4097e-01,  1.8029e-01,  2.6664e-01, -1.7087e-01,  5.1101e-01,
         -1.1013e+00, -5.3925e-03, -1.7481e-01,  5.5867e-02,  2.4164e-01,
         -4.5446e-02, -1.7940e-03, -1.3695e-01,  8.7691e-02,  1.1914e-01,
          1.4751e-01, -7.0781e-02,  2.4137e+00, -4.5970e-01,  1.8434e-02,
          2.9296e-03,  3.4393e-01,  8.7841e-01, -7.3255e-01,  6.2038e-01,
         -3.4168e-01, -4.6649e-02, -5.6554e-01,  1.2212e-01,  4.4306e-01,
          6.7177e-01, -1.0279e-01,  2.1986e-01,  5.2944e-01,  4.3954e-01,
          6.8619e-01, -6.9087e-01]], device='cuda:0') tensor(0.8918, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
234000 特征值优化 tensor(25.6938, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.7858e-01, -8.9813e-03, -7.8324e-01,  3.0951e-01, -7.9891e-01,
         -9.9520e-01, -1.7362e+00, -2.2298e-01,  1.3885e-01, -1.9861e-01,
          5.4400e-01, -6.1828e-01,  9.2984e-01,  3.7597e-01, -4.1738e-01,
          5.3999e-01,  6.6221e-01,  5.3662e-01, -7.4383e-01, -6.8995e-01,
         -7.9305e-01,  3.9708e-01,  8.9043e-01,  2.3009e+00,  7.0922e-01,
         -1.0142e+00,  4.2973e-04,  8.0399e-01, -6.9749e-01, -1.3006e+00,
          1.9620e+00,  2.2014e+00,  1.2336e+00, -8.5791e-01, -1.1365e+00,
          9.6799e-01, -1.4518e+00,  1.1677e+00,  7.0979e-01,  2.2981e+00,
          1.1631e+00, -6.0972e-01,  1.1501e+00, -2.9033e-01, -2.3032e+00,
          1.7138e+00,  5.9900e-02, -1.4960e-01,  2.8956e-03,  9.9746e-02,
          7.0156e-03, -1.8879e+00,  6.2154e-01,  4.7916e-01,  9.5608e-01,
         -1.0388e+00,  1.8592e-01,  8.5984e-01,  1.7310e+00, -1.6238e+00,
         -3.9660e-01,  8.7907e-01,  9.1663e-01,  9.6616e-01, -1.9606e-01,
         -2.3593e+00,  8.8105e-01, -1.2780e-01,  1.9038e+00,  3.7381e-01,
          3.2573e-01, -1.0705e+00]], device='cuda:0') tensor(11.0177, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
235000 特征值优化 tensor(8.3048, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5032, -0.2639,  0.1661, -0.1161,  0.1986, -0.0941, -0.7553, -0.7686,
          1.1541, -1.1139,  1.0679,  0.4056,  0.2073, -0.0922,  0.2622,  0.2671,
          0.2425,  0.1591, -0.1123, -0.3969, -0.2283,  0.5390,  0.3266,  1.1387,
         -0.0020, -0.2068, -0.0670, -0.0109, -0.0308, -0.5799,  0.9701,  1.2056,
          0.6799, -0.0968, -0.3587,  0.1293, -0.5789,  0.5035, -0.1582,  1.3116,
          0.5524, -0.6633,  0.9109, -0.0656, -1.3102,  0.9558, -0.2507,  0.0096,
          0.6441,  0.7313,  0.3544, -1.0393,  1.5634, -0.0210,  0.3833, -0.6897,
          0.3649,  0.0099,  0.7730, -0.7384,  0.5745, -0.1374, -0.0119,  0.9208,
          0.8169, -1.3055,  0.0125, -0.9450,  1.5056, -0.0078,  1.2161, -0.0831]],
       device='cuda:0') tensor(4.9847, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
236000 特征值优化 tensor(2.2266, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.8544e-02, -1.3453e-02,  8.2777e-01, -8.4259e-01,  6.3662e-01,
          3.4652e-01, -2.8899e-01, -1.2545e+00,  1.7241e+00, -1.7749e+00,
          1.0952e+00,  8.7866e-01, -2.3916e-02, -3.9694e-02, -1.5227e-02,
          9.4918e-02,  1.7019e-03,  4.7049e-02,  6.3064e-02,  1.6272e-02,
          3.0894e-03,  1.5061e-01, -2.3699e-01,  3.9234e-01, -1.5224e-01,
         -2.5925e-01,  3.4773e-02, -2.3775e-01, -4.2023e-02, -1.7045e-01,
          6.1833e-01,  8.2029e-01,  7.2321e-01, -2.6714e-02, -1.8035e-01,
          1.5343e-02, -1.5725e-01,  6.0012e-02, -4.3569e-01,  7.6790e-01,
          2.8490e-03, -5.6632e-01,  2.4287e-01,  1.1071e-01, -3.1291e-01,
          5.2391e-01, -2.6843e-01, -3.4443e-01,  3.1192e-01,  3.5019e-01,
          2.6395e-01, -2.7361e-01,  1.7016e+00, -6.9820e-01,  6.9386e-01,
         -1.4617e+00, -3.1017e-01,  1.0391e-01,  1.1279e-01, -5.3590e-02,
          7.6897e-01, -5.1869e-01, -4.4068e-01,  6.1001e-01,  1.3574e+00,
         -5.8938e-01,  2.4945e-01, -8.5433e-01,  3.6630e-01, -3.5063e-01,
          6.5762e-01,  5.5817e-01]], device='cuda:0') tensor(1.5829, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
237000 特征值优化 tensor(16.5386, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.4423, -1.0343, -1.8343, -0.4762,  1.5155,  0.9888,  1.7632, -0.1531,
          1.8131, -0.5284,  0.1751, -1.2298, -1.0499,  0.4702,  0.6247,  0.0938,
          0.2750, -1.9230,  0.4893, -1.1396, -0.0127,  0.9901,  1.9100,  0.8247,
         -0.4259, -0.7287, -0.3819,  0.4418,  0.7999, -1.8073,  0.5157,  0.5840,
         -1.7776, -0.3051,  0.1113, -0.7460,  0.3339, -0.2466, -0.4179, -0.9585,
          0.7900,  0.1703,  1.7112, -0.5613, -0.6338, -0.1893, -0.4349, -0.9220,
         -0.3904,  1.8458,  0.0619, -1.1025,  1.5235,  0.3048,  1.6259, -0.0107,
          0.5466, -1.2893,  1.4898,  1.0911, -0.2928,  0.1250,  0.3038, -0.7980,
          1.0954,  0.9730,  0.1048,  1.9141, -1.2222,  0.2755, -0.9014, -0.4192]],
       device='cuda:0') tensor(8.0438, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
238000 特征值优化 tensor(4.3052, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.7929e-01, -8.5965e-01, -7.1411e-01, -1.0055e+00,  2.3541e+00,
          1.2682e+00,  9.7558e-01,  2.3064e-01,  2.6082e+00, -1.4427e-01,
          1.0500e+00, -4.0265e-01, -2.9752e-01, -1.5117e-01,  1.1196e-02,
         -1.8322e-02,  1.5715e-01, -9.0773e-01,  1.2536e-01, -2.6704e-01,
          6.7561e-02,  5.0192e-01,  8.0146e-01,  1.5955e-01,  5.3398e-02,
         -1.2737e-01, -1.1082e-01, -6.0504e-02,  8.1334e-04, -8.4761e-01,
          7.3119e-01,  3.0469e-01, -1.0098e+00,  3.3890e-02, -4.2518e-01,
         -3.9424e-01,  1.5314e-02, -4.8416e-02, -6.2489e-01, -3.3684e-01,
          1.3562e-02,  1.0310e-01,  9.0920e-01, -3.9753e-01, -4.1874e-01,
          2.1561e-01, -3.2423e-01,  2.1586e-02, -2.3641e-01,  1.6169e+00,
         -3.0406e-01, -4.1790e-01,  2.4467e+00, -3.1692e-01,  8.5607e-01,
          3.2310e-01,  1.0333e-01, -5.5484e-01,  1.1450e+00,  7.1603e-01,
         -1.1030e-01,  1.3669e-01,  3.4355e-01, -2.3295e-01,  8.1920e-01,
          5.4500e-01, -8.3159e-02,  1.1424e+00, -3.5225e-01, -3.9041e-01,
         -5.7436e-02, -3.1049e-01]], device='cuda:0') tensor(1.9758, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
239000 特征值优化 tensor(2.1098, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.0990e-01, -1.5969e-01, -2.1627e-01, -6.0511e-01,  2.5438e+00,
          1.0652e+00,  1.4717e-01,  4.8914e-01,  2.9066e+00, -4.5265e-02,
          1.3343e+00, -1.4503e-01, -7.4948e-02, -1.6283e-02,  2.9637e-03,
          1.9618e-02,  4.0284e-03, -1.3425e-01, -5.7748e-02,  9.9454e-03,
         -5.7834e-02,  3.6262e-01,  2.3775e-01, -7.0430e-02, -7.8856e-02,
         -3.4960e-02, -7.9407e-02, -1.4317e-02,  2.5220e-03, -5.0180e-01,
          5.1762e-01,  2.7120e-01, -8.1360e-01, -1.7496e-02, -5.0415e-01,
         -3.5463e-01,  1.8801e-02, -1.8816e-02, -6.8550e-01, -3.3327e-01,
         -3.7643e-02,  4.2001e-02,  4.2920e-02, -3.4129e-02, -7.2438e-02,
          5.8661e-02, -1.0424e-01,  1.2548e-01, -4.1468e-01,  1.0516e+00,
         -2.1069e-01, -3.5049e-01,  2.3859e+00, -5.4686e-01,  3.3211e-01,
          8.1908e-01, -3.4196e-01, -1.5006e-01,  7.9127e-01, -6.2089e-02,
         -2.2751e-01,  1.5180e-01, -1.8025e-02, -1.1381e-01,  1.0039e+00,
          2.9665e-01, -2.5247e-01,  8.1560e-01, -1.2834e-01, -2.7672e-01,
          7.7544e-02, -2.0612e-01]], device='cuda:0') tensor(0.6176, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
240000 特征值优化 tensor(11.2448, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1412e+00,  2.5764e-01,  1.7582e+00, -3.7679e-01,  4.4715e-01,
          1.2052e+00,  8.6274e-01,  1.7858e-01,  6.2767e-01,  4.7680e-01,
          6.5401e-02, -8.3801e-01, -1.0775e+00,  9.2129e-01, -2.4107e-01,
          4.1288e-01,  2.7948e-01, -1.6283e-02, -4.2505e-03, -5.1061e-01,
         -1.1209e+00,  4.0398e-01, -2.0954e-01, -5.8801e-01,  7.5152e-01,
          3.1546e-02,  7.2780e-02,  1.3475e+00, -8.4305e-02, -3.6393e-01,
          1.4420e+00, -1.2458e-02, -1.0457e-01,  2.7027e+00,  1.2466e-01,
         -1.8245e-01, -4.0771e-01, -1.6529e-03, -9.7572e-01, -5.1752e-01,
          3.4493e-02, -6.8787e-02,  6.6038e-01,  8.6012e-01, -1.3916e+00,
          3.7939e-01,  2.3654e+00, -1.2665e+00,  5.4766e-01, -2.9381e-01,
         -5.2909e-01, -1.8248e+00,  8.7519e-01, -2.2385e+00, -9.2141e-01,
         -4.2422e-01,  1.8135e+00,  6.2907e-01,  2.0618e+00,  1.5978e+00,
         -2.4945e-01,  4.9191e-01, -1.0321e-02,  6.1067e-02,  1.2417e-01,
          1.1446e+00, -1.5405e-01, -9.0765e-02, -2.9799e-01,  7.7054e-02,
         -3.0196e-01,  4.6752e-01]], device='cuda:0') tensor(5.1867, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
241000 特征值优化 tensor(2.9949, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8834,  0.8785,  2.4862, -0.1746,  1.3508,  2.3176,  0.5738,  0.1586,
          1.2295,  0.8233, -0.0608, -0.0801, -0.6826,  0.2999, -0.1683,  0.2262,
          0.2951, -0.0299,  0.0041, -0.1039, -0.5473,  0.2868, -0.1526, -0.1196,
          0.3323, -0.2966,  0.1453,  0.4179, -0.0053, -0.4227,  0.5905,  0.0414,
         -0.0099,  1.6042,  0.0319, -0.0305, -0.0394,  0.0201, -0.4298, -0.2137,
         -0.0108, -0.1258,  1.0686,  0.7194, -0.9166, -0.5513,  1.4904, -0.5689,
          0.3424, -0.0899, -0.0501, -0.9220,  1.7898, -1.2530, -0.1112, -0.0165,
          1.0018,  1.0589,  1.3737,  0.8707, -0.4970,  0.3224, -0.0383,  0.0375,
          0.0633,  0.4509,  0.0417,  0.1791, -0.2368,  0.1576, -0.0722,  0.1959]],
       device='cuda:0') tensor(1.3843, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
242000 特征值优化 tensor(2.3338, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9428e+00,  1.1580e+00,  2.1507e+00, -1.5174e-01,  1.3703e+00,
          2.4759e+00,  4.5028e-01,  5.7918e-02,  1.0970e+00,  3.2642e-01,
          2.8419e-01,  3.2320e-01, -6.0178e-01,  4.0956e-01, -4.5194e-01,
          7.7977e-02, -6.4468e-02,  3.3187e-02,  2.1267e-02, -5.3597e-03,
         -4.4926e-01,  1.1094e-01, -3.8177e-01, -2.1749e-01,  1.0336e-01,
         -1.2154e-01,  3.8523e-02,  1.8091e-01,  6.6389e-02, -2.5791e-01,
          4.9736e-01,  3.4169e-02, -6.6759e-05,  1.3354e+00, -5.5208e-03,
          5.5073e-04,  2.2596e-02,  1.6677e-02, -2.0170e-01, -7.1867e-02,
         -1.4062e-02, -4.8443e-02,  8.3975e-01,  8.2974e-01, -6.9905e-01,
         -6.0457e-01,  1.2038e+00, -7.3148e-01,  2.2473e-01,  1.6798e-01,
         -6.8593e-02, -5.2257e-01,  1.8667e+00, -1.0868e+00,  4.6034e-02,
          6.8676e-02,  4.1375e-01,  1.0968e+00,  9.4971e-01,  5.9381e-01,
         -1.5697e-01,  1.4842e-01,  1.7433e-02,  1.4892e-02, -2.3474e-01,
          3.3390e-01, -1.6718e-01,  1.5757e-01, -1.9318e-01,  1.4897e-01,
         -1.4762e-01,  1.5046e-01]], device='cuda:0') tensor(1.1485, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
243000 特征值优化 tensor(2.1347, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9058e+00,  1.2638e+00,  1.7402e+00,  3.4084e-01,  1.3571e+00,
          2.5537e+00,  7.9474e-01,  3.5482e-02,  8.3531e-01,  2.3109e-02,
          6.5887e-01,  5.4484e-01, -5.6575e-01,  3.1836e-01, -2.5568e-01,
          7.6934e-04, -1.3244e-02, -1.4536e-02,  3.2424e-02,  2.8264e-04,
         -4.2679e-01, -3.8627e-02, -3.9483e-01, -3.2682e-01,  2.1270e-02,
         -4.2547e-02, -2.3958e-02,  8.1804e-02, -2.7137e-02, -1.1776e-01,
          4.6680e-01,  9.3387e-04, -3.1729e-03,  1.2166e+00, -1.1474e-02,
         -6.5348e-03,  2.5565e-02,  1.3610e-02, -5.7444e-02, -9.6784e-03,
         -1.9579e-02, -2.0348e-02,  8.4016e-01,  9.1512e-01, -6.3120e-01,
         -5.3081e-01,  1.0552e+00, -7.3028e-01,  1.0925e-01,  8.9251e-02,
         -1.6291e-01, -2.6556e-01,  1.8873e+00, -1.0178e+00, -3.3710e-02,
         -7.0269e-03,  2.6715e-01,  1.0223e+00,  7.5062e-01,  5.0603e-01,
         -1.7785e-01,  1.6965e-01,  2.9240e-02,  6.6381e-03, -2.7870e-01,
          1.9555e-01, -1.1420e-01,  7.4928e-02, -1.9584e-01,  1.4300e-01,
         -7.3586e-02,  8.8207e-02]], device='cuda:0') tensor(0.8087, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
244000 特征值优化 tensor(5.8260, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.9388, -0.3231, -1.0797,  0.2442,  1.9421,  0.2905, -0.0041, -0.6136,
          0.6453,  0.0650,  0.4139, -1.7308, -0.0947, -0.3914,  1.2201,  0.3615,
         -0.9457,  0.0561,  0.0346,  0.0051, -0.0441,  0.0770, -0.3401, -0.0060,
          0.6075,  0.3297, -0.3782,  0.0323,  0.1170, -0.1267, -0.1988,  0.0996,
          0.7106,  0.4989, -0.1240, -0.2096, -0.8099,  0.3912,  0.2137,  0.4910,
         -0.2446, -0.1254,  0.1471, -0.3571, -0.0453,  0.9278, -0.5667, -1.1280,
         -0.1601,  0.4147, -0.2588,  0.5927,  0.3840,  0.3045, -0.2608, -0.8639,
          0.9417,  0.1995,  0.7499,  0.3029,  0.2564,  0.5365,  0.4052, -0.3817,
          0.0656,  0.5074, -0.6547,  0.0028,  1.2956, -0.3454,  0.7458, -0.9651]],
       device='cuda:0') tensor(2.6024, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
245000 特征值优化 tensor(2.1376, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.1792e-01, -6.0972e-02, -5.5547e-01,  2.9086e-01,  2.3827e+00,
          1.6119e-01,  2.2235e-01, -7.5476e-01,  9.5194e-01, -2.3746e-01,
          4.1833e-01, -1.3313e+00, -9.7209e-03, -2.4244e-04,  4.5236e-01,
          1.2374e-02, -1.6094e-01, -4.6300e-02, -3.5854e-02, -1.3185e-02,
         -2.0357e-03,  3.8102e-02,  2.5998e-02,  1.8894e-02,  1.9171e-01,
          4.1716e-02, -2.3335e-02,  5.9035e-03, -2.8297e-03, -6.1036e-02,
         -1.9621e-01,  1.0670e-02,  4.3443e-01,  1.6704e-01, -1.0441e-01,
         -1.2717e-01, -4.0074e-01,  2.5898e-01, -1.0287e-01,  1.9645e-01,
         -1.1054e-01,  2.4694e-02,  6.4111e-02,  9.9025e-03,  3.9648e-03,
          2.1772e-01, -1.2353e-01, -5.1100e-01, -1.3587e-01,  2.7808e-01,
          1.4161e-01,  1.3814e-01, -1.9613e-01,  5.0552e-03,  4.8192e-03,
         -5.7330e-01, -1.9238e-02,  2.9918e-01,  7.9083e-01,  5.3982e-03,
          2.2972e-01,  6.0438e-01,  1.2011e-02, -2.3731e-01, -2.2735e-01,
          3.8980e-01, -3.8265e-01,  1.1748e-01,  8.8599e-01, -2.8125e-01,
          9.0575e-01, -6.8097e-01]], device='cuda:0') tensor(0.6254, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
246000 特征值优化 tensor(12.4659, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0879,  1.3059, -1.2108,  0.1514, -0.5247, -0.9959,  1.0023, -2.0090,
         -0.4875, -1.2449, -0.9666,  1.1632, -1.2138, -0.7454,  1.6620,  0.4222,
         -0.8992, -0.1154, -0.0308, -0.2327,  0.5956, -0.6702,  0.1374,  0.1173,
          0.1718,  0.1100, -1.4396,  0.4750,  0.6340,  0.6693,  1.3776,  0.5811,
         -0.3503,  0.2356, -0.2019, -0.4701, -0.2717,  0.9080,  0.1379, -0.3874,
         -0.2425,  0.9866, -0.3508, -0.2627,  0.0586, -0.7466,  0.2258,  0.5917,
          0.5127,  0.4924,  0.3778,  1.8055,  1.6235,  0.1700, -0.0623, -0.9493,
         -0.2496,  0.4314, -1.1701,  0.4096,  0.0109, -0.0789,  1.6371, -1.2140,
          0.0861,  0.4962,  0.2567, -0.5249,  0.2346,  0.1880, -0.4410,  0.8725]],
       device='cuda:0') tensor(5.8321, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
247000 特征值优化 tensor(2.6280, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0163,  0.3620, -0.3642,  0.8016,  0.2202, -0.3561,  1.5984, -1.9397,
          0.1236, -0.9306, -0.2084,  1.8519, -0.3354,  0.0159,  0.5639,  0.0782,
         -0.2502, -0.3272, -0.1042, -0.0169,  0.3093, -0.0811,  0.0117,  0.0304,
          0.0980, -0.0746, -0.5322, -0.1188,  0.1198,  0.0514,  0.7478,  0.3530,
         -0.2919, -0.0192,  0.0362, -0.0147, -0.3808,  0.3832,  0.0596, -0.1835,
         -0.0708,  0.4701,  0.0554, -0.0733,  0.0292, -1.1247,  0.1611,  1.0437,
         -0.1232, -0.1455, -0.6652,  0.8868,  1.0968,  0.0719, -1.0971, -0.0094,
         -0.1682,  0.1185, -0.4174,  0.1776,  0.2901,  0.2857,  0.9174, -0.8087,
         -0.2572,  0.2037,  0.2075, -0.2707,  0.3731, -0.0779, -0.3714,  0.6508]],
       device='cuda:0') tensor(2.0278, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
248000 特征值优化 tensor(2.1438, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0297,  0.3007, -0.2649,  0.3437,  0.4165,  0.0773,  1.7986, -1.4923,
          0.2821, -0.4337,  0.0242,  1.7354, -0.2402, -0.0515,  0.2309,  0.1350,
         -0.4286, -0.1849, -0.1081,  0.1768,  0.2231, -0.0633,  0.0072, -0.0058,
          0.0685, -0.0892, -0.2115, -0.2432,  0.0784,  0.0814,  0.5609,  0.3069,
         -0.2029, -0.0237,  0.0441, -0.0232, -0.3246,  0.2953,  0.0118, -0.1033,
          0.0214,  0.3053, -0.1952,  0.0441,  0.0448, -0.5183,  0.0187,  0.8894,
         -0.1698, -0.2556, -0.7619,  0.7290,  0.5389,  0.2299, -1.2084, -0.1440,
         -0.2633,  0.1576, -0.0236, -0.0022,  0.1484,  0.2841,  0.5905, -0.5913,
         -0.2049,  0.1367,  0.1598, -0.1781, -0.0719,  0.0313, -0.5265,  0.5429]],
       device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
249000 特征值优化 tensor(15.5598, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4472,  0.4596, -0.8415,  0.3880,  0.8889,  0.2539, -0.5859,  1.4581,
         -1.2291,  1.3474, -0.8553, -0.2047, -0.2789,  0.6539, -0.2534,  0.9471,
         -1.1678,  0.7785, -0.1263, -0.1535, -0.2585,  0.2724,  0.1961,  0.2162,
         -0.1185, -0.7124,  0.0360, -0.1658, -0.0599,  1.6130,  0.4982, -0.0150,
          0.0120,  1.4900, -2.2272,  1.1633, -0.6288,  1.1729, -0.8872, -1.4316,
         -0.0458, -1.1709,  0.5932, -0.9638,  0.6894, -1.2624,  0.7612,  0.7712,
          0.0058,  0.7557, -0.0056,  2.2737,  0.4715,  0.5816,  0.7459, -0.1928,
          0.3953,  0.2874, -0.6758, -1.3926,  0.4053,  0.2575, -0.9593, -1.2819,
          1.8816, -1.4960,  0.2084, -0.0174,  0.8239,  0.0473,  1.6448,  0.6250]],
       device='cuda:0') tensor(9.2356, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
250000 特征值优化 tensor(3.3916, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.3054e-03,  8.4876e-01,  1.8801e-01,  1.5953e+00,  1.3018e-01,
          1.1307e+00,  2.1278e-01,  1.8723e-01, -1.4155e-01,  1.6958e+00,
         -6.4224e-02,  7.4216e-01,  4.3137e-03,  4.4188e-02,  3.5364e-02,
          2.5081e-01, -2.6695e-01,  1.9855e-01,  1.9559e-01,  6.8719e-03,
          2.4962e-02,  5.5650e-01,  3.6802e-02,  4.3473e-02,  8.1226e-02,
         -6.3199e-02,  2.0882e-02,  4.2184e-02,  1.8009e-02,  7.4642e-01,
          7.7513e-03, -1.0087e-02, -1.3522e-02,  5.9107e-01, -1.3190e+00,
          5.4407e-01, -2.7383e-01,  5.1570e-01, -3.8092e-01, -4.0774e-01,
         -2.6277e-01, -4.6071e-01, -3.3823e-01, -9.6088e-04,  2.8398e-01,
         -4.3269e-01,  1.6006e-01,  1.8521e+00, -4.7710e-01,  2.9044e-01,
         -7.6780e-01,  1.3957e+00, -2.3488e-01,  2.0374e-01,  4.6268e-02,
         -3.4817e-02,  1.1678e+00, -5.9297e-01, -1.1010e+00, -1.3604e+00,
          3.9154e-01,  2.5803e-01, -7.6527e-01, -5.3891e-01,  2.8381e+00,
         -1.4736e+00,  9.8534e-01, -2.9929e-01,  4.9945e-01,  1.8442e-01,
          7.0864e-01,  8.7562e-02]], device='cuda:0') tensor(1.2744, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
251000 特征值优化 tensor(2.1505, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.5993e-03,  2.1913e-01,  6.1446e-01,  1.4349e+00, -3.2190e-02,
          1.3641e+00,  2.6673e-01, -2.0639e-01,  3.5494e-01,  1.3517e+00,
          7.6955e-02,  9.7172e-01,  5.7197e-04,  3.6836e-02,  1.0531e-02,
          1.4358e-01, -1.3519e-01,  1.3158e-01,  1.2215e-01, -2.0493e-02,
          1.8129e-02,  3.6821e-01, -5.6666e-02,  2.7779e-02,  3.5858e-02,
         -7.5205e-02, -5.1930e-03,  8.6185e-02,  1.8059e-02,  5.0885e-01,
          2.5295e-02,  3.2475e-02, -7.4315e-02,  3.3558e-01, -1.0998e+00,
          5.1199e-01, -1.6331e-01,  3.3445e-01, -2.8392e-01, -1.5200e-01,
         -1.3803e-01, -2.6106e-01, -2.4584e-01,  1.6240e-01,  1.4570e-01,
         -1.2071e-01,  6.3454e-02,  1.4932e+00, -7.2028e-01,  3.7356e-01,
         -1.0548e+00,  1.2164e+00, -1.5946e-01,  1.6140e-01, -5.6715e-02,
         -8.8793e-02,  8.3587e-01, -8.3182e-01, -1.4781e+00, -1.1814e+00,
         -2.7329e-01,  3.3145e-01, -5.4619e-01, -3.4953e-01,  2.7506e+00,
         -1.4377e+00,  1.1164e+00, -4.2172e-01, -1.7693e-01,  2.8132e-01,
          1.0745e-01,  1.0055e-01]], device='cuda:0') tensor(0.6887, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
252000 特征值优化 tensor(2.0858, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3628e-01,  2.2515e-01,  6.6526e-01,  1.2348e+00, -4.7956e-02,
          1.3998e+00,  2.3622e-01, -2.4798e-01,  5.7170e-01,  1.2454e+00,
          7.7350e-02,  9.4556e-01,  2.8029e-03, -1.1906e-03, -3.7427e-04,
          1.3930e-01, -1.1024e-01,  9.6084e-02,  9.1434e-02,  3.3620e-03,
          2.2995e-02,  3.3158e-01, -7.0075e-02,  7.7196e-02,  1.2909e-01,
          4.5255e-03,  1.6547e-02,  7.3999e-02, -8.8039e-03,  4.8747e-01,
         -1.7760e-02, -1.6834e-02, -2.1124e-02,  2.7284e-01, -1.0626e+00,
          5.2669e-01, -1.3157e-01,  3.1390e-01, -2.5479e-01, -7.4563e-02,
         -1.0952e-01, -1.5343e-01, -1.2789e-01,  8.2262e-02,  1.0394e-01,
         -2.0349e-01,  1.0073e-01,  1.5247e+00, -7.9934e-01,  3.7531e-01,
         -1.0398e+00,  1.1966e+00, -1.5238e-01,  1.1607e-01, -5.9536e-02,
         -3.6412e-02,  6.2754e-01, -8.4389e-01, -1.3576e+00, -1.1526e+00,
         -3.1928e-01,  3.3626e-01, -5.1464e-01, -3.0996e-01,  2.5927e+00,
         -1.3330e+00,  1.1566e+00, -4.1287e-01, -2.2948e-01,  2.9171e-01,
          1.1476e-01,  1.0871e-01]], device='cuda:0') tensor(0.7639, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
253000 特征值优化 tensor(8.0899, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.9534,  0.9880,  1.4528,  0.4971,  1.5534,  1.5324,  0.2299, -0.5793,
          0.9423,  0.9725,  0.3790,  0.4154,  0.8452,  0.2847,  0.0467,  0.0796,
         -0.1213, -0.8652, -0.1502,  0.0024,  0.1997,  0.9042, -0.0983, -0.6565,
          0.1302,  0.1330, -0.1240,  0.0056, -0.0050, -0.8614, -0.5007, -0.4114,
         -0.4288,  1.4444, -0.0985,  0.3188, -0.1126,  0.2288, -0.2467, -0.4320,
         -0.1106, -0.6613,  0.1868, -1.5133,  0.2162, -0.6424,  1.9508, -0.2943,
          1.3068, -0.8867, -0.3014,  0.4896,  1.0236,  1.0763, -0.0039,  0.1349,
          1.5861,  0.6450,  0.3586,  0.3071, -1.5250,  0.3183,  0.0983,  0.4164,
          0.4876,  0.0133,  0.6025,  0.4242,  1.1499, -0.9306,  1.5037,  0.2886]],
       device='cuda:0') tensor(3.9131, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
254000 特征值优化 tensor(2.2875, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.3493e-01,  1.4167e+00,  7.0317e-01, -1.1343e-01,  2.0679e+00,
          2.2504e+00,  7.2926e-01, -3.9576e-01,  8.7023e-01,  1.0882e+00,
          4.5751e-03,  9.3137e-01,  3.6647e-01, -2.7302e-02,  2.7165e-02,
         -1.8259e-03, -1.0228e-01, -2.2876e-01, -1.8394e-02,  8.4001e-02,
          3.0310e-01,  3.2799e-01,  1.0327e-01,  2.1256e-02,  1.2569e-01,
         -3.5355e-02,  7.5586e-02,  1.1475e-01,  1.0720e-02, -3.0721e-01,
         -6.2902e-01, -1.1857e-01, -1.4844e-01,  9.9506e-01, -2.1072e-01,
          3.1440e-01, -7.8419e-02,  5.8265e-02, -2.7686e-01, -2.8760e-01,
         -9.2078e-02, -3.4344e-01,  1.1023e+00, -1.0121e+00,  6.2459e-01,
         -8.1439e-01,  1.1104e+00, -5.2011e-01,  9.9895e-01, -2.6148e-01,
         -9.9412e-02, -1.0172e-01,  1.8963e-01,  5.8221e-01, -6.2809e-02,
         -7.1267e-02,  1.4994e+00,  6.4523e-01,  5.3234e-01,  6.2087e-01,
         -8.4010e-01,  1.1176e-01,  1.9130e-01,  1.4868e-01, -1.4256e-01,
          3.4695e-01,  2.0707e-01,  1.9383e-01, -5.3318e-02, -1.5030e-01,
          2.3949e-01,  2.7304e-01]], device='cuda:0') tensor(0.8775, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
255000 特征值优化 tensor(2.0992, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0399,  1.2940,  0.2577,  0.1209,  2.0605,  2.3155,  0.8148, -0.2557,
          0.8922,  0.8625,  0.0869,  0.9746,  0.3171, -0.1384, -0.1201,  0.0536,
         -0.2190, -0.1123,  0.0138,  0.1835,  0.2523,  0.1625,  0.0105, -0.0682,
          0.1965,  0.1978, -0.1743,  0.1515, -0.0361, -0.1334, -0.5109, -0.0742,
         -0.0246,  0.9307, -0.2231,  0.2668, -0.0893,  0.0561, -0.2045, -0.1982,
         -0.1084, -0.2403,  1.0940, -1.0839,  0.5837, -0.8268,  1.0477, -0.5062,
          0.4898, -0.1646,  0.2660,  0.0165, -0.1014,  0.5719,  0.0749,  0.0716,
          1.3602,  0.6716,  0.5389,  0.6159, -0.6489,  0.1366,  0.1324,  0.1316,
         -0.2027,  0.2903,  0.0739,  0.1422, -0.1385, -0.0887,  0.1237,  0.1867]],
       device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
256000 特征值优化 tensor(7.2404, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2081e+00,  6.5707e-01,  3.6896e-01, -1.0063e+00, -1.1162e+00,
          4.7273e-01,  9.7145e-01,  1.1826e+00,  1.2506e+00,  3.7471e-01,
         -9.0021e-01,  1.9195e+00,  1.2975e-02, -7.8271e-01, -6.0025e-02,
          4.0623e-01, -1.0695e-01,  1.9236e-01,  4.2274e-01,  1.9342e+00,
         -1.2290e-01,  8.5975e-03, -1.8188e-01, -6.9391e-01, -9.0777e-01,
         -8.0749e-01,  8.8410e-01, -3.1361e-01,  7.9770e-01, -1.0859e-01,
          4.5952e-01,  2.5158e-02, -1.5537e-02, -2.4420e-02, -9.3045e-01,
         -3.9093e-01, -4.9511e-01, -4.6523e-01,  9.5505e-01,  3.1684e-01,
         -3.1753e-01, -8.4003e-01,  3.4479e-01, -9.2110e-01, -9.8414e-01,
          5.8335e-01,  3.1122e-02,  2.7609e-01, -8.2791e-01,  6.3951e-01,
          4.0334e-01, -1.0087e-01,  9.2401e-01,  5.8979e-01,  8.3741e-04,
          1.5585e-03, -1.9084e-01, -1.9724e-01,  6.7108e-01,  2.5517e-01,
          8.7174e-01,  9.5995e-02, -3.1140e-01,  7.1602e-01,  1.1193e+00,
         -3.1324e-01,  1.1341e+00, -8.2755e-02,  2.0324e-01,  9.6428e-01,
          5.8292e-02,  3.3102e-01]], device='cuda:0') tensor(4.5997, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
257000 特征值优化 tensor(2.2752, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7782,  0.4124,  0.8040, -0.7297, -0.7467,  0.2069,  0.0879,  0.5635,
          1.4526,  0.4363, -0.3695,  1.9824,  0.0343, -0.1762,  0.0134, -0.0311,
          0.0124,  0.0115,  0.0503,  1.3322, -0.0382,  0.0070,  0.0511, -0.0335,
         -0.2420, -0.3088,  0.1462, -0.0883,  0.4610, -0.0278,  0.0238,  0.0141,
         -0.0407,  0.0268, -0.0691,  0.0291, -0.0497, -0.0633,  0.7743,  0.1998,
         -0.1498, -0.6517,  0.9745, -1.2386, -1.3304,  0.4385,  0.0340,  0.4122,
         -1.0592,  0.4019,  0.3527, -0.0337,  0.2874,  0.1846, -0.0349, -0.0161,
         -0.2353,  0.2000,  0.8534,  0.5567, -0.1244,  0.1350, -0.3046,  0.1422,
          1.2322, -0.2726,  0.9120, -0.3375,  0.1162,  0.3655,  0.0453,  0.5002]],
       device='cuda:0') tensor(1.0629, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
258000 特征值优化 tensor(2.1432, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7821,  0.6932,  0.9477, -0.5363, -0.5766,  0.3008, -0.2374,  0.3625,
          1.3247,  0.5197, -0.5813,  2.0212,  0.0208, -0.1212, -0.0204,  0.0417,
         -0.0166, -0.0481,  0.0807,  1.2356, -0.0356, -0.0092, -0.0031,  0.0032,
         -0.1454, -0.1459,  0.0491, -0.0480,  0.4428, -0.0451,  0.0263, -0.0187,
         -0.0397,  0.0268, -0.0460,  0.0149, -0.0132,  0.0385,  0.7193,  0.1682,
         -0.0408, -0.5959,  0.9762, -1.1580, -1.3166,  0.8293, -0.2369,  0.3282,
         -0.9444,  0.4091,  0.3235, -0.0404,  0.3013,  0.1508, -0.0483, -0.0495,
         -0.2057,  0.1833,  0.8367,  0.6252,  0.0594,  0.0717, -0.3151, -0.0197,
          1.1002, -0.2421,  0.8516, -0.2872,  0.1042,  0.1971,  0.1056,  0.4767]],
       device='cuda:0') tensor(1.0449, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
259000 特征值优化 tensor(3.8628, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8626, -0.4182,  0.4860, -0.5239,  0.5016, -1.0467,  1.5974, -0.7183,
          0.2287,  0.7798,  0.0437,  0.3423, -0.0470,  0.3576, -0.0338,  0.8531,
         -0.1988,  1.0756,  0.0263, -0.1801,  0.0667, -0.2050,  0.0512, -0.1094,
         -0.1887, -0.1703, -0.9567,  0.5295,  0.8051,  0.1892, -0.7239,  0.5834,
          0.8135,  0.1968, -0.5396, -0.4343,  0.5496,  0.0594, -0.1137,  0.1887,
          0.0770, -0.0748, -0.3574, -0.2470,  0.7716,  0.0807, -0.0902,  1.1787,
         -0.1067, -0.6151,  0.4463, -0.5769,  0.8215, -0.3855, -0.4907,  0.6884,
          0.8748, -0.7211,  0.0722, -0.0543,  0.4536, -0.4732, -1.6757,  1.5091,
          0.3440, -0.3817, -0.4797,  0.5854,  2.7179, -1.4413,  0.1439, -0.2520]],
       device='cuda:0') tensor(2.6557, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
260000 特征值优化 tensor(2.2564, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.8478e-01,  8.1579e-02,  5.8293e-01, -5.2891e-01,  7.6893e-01,
         -3.0043e-01,  1.7082e+00, -1.1673e+00,  1.3815e-01,  3.4858e-01,
          3.2007e-01,  5.3683e-01,  1.5456e-02, -1.2245e-01, -3.7660e-02,
          2.3508e-01,  2.4531e-01,  3.9283e-01, -2.1322e-01, -3.2618e-02,
          1.3980e-03, -4.4285e-02, -6.9438e-02, -5.5332e-03, -4.2238e-02,
         -1.2008e-02, -3.9147e-01,  4.0334e-01,  6.2229e-01,  5.3535e-02,
         -4.1195e-01,  5.6583e-01,  6.9630e-01,  1.2379e-01, -4.7388e-02,
         -1.1023e-01,  3.9997e-01,  5.1055e-02, -4.5307e-02,  6.4142e-02,
         -2.8996e-02, -3.6676e-02, -4.6517e-01, -1.6947e-01,  6.7830e-01,
         -3.6666e-02, -5.0396e-03,  9.7586e-01, -3.5469e-02, -8.5844e-01,
          8.9262e-01, -3.7178e-01,  7.1603e-01, -1.9823e-01, -8.4471e-01,
          9.3207e-01,  5.3400e-01, -3.8701e-01,  1.0894e-02,  2.6018e-02,
          4.4398e-01, -6.9352e-01, -1.5478e+00,  1.2558e+00, -7.6701e-02,
          3.6286e-02, -1.6672e-01,  1.3787e-01,  2.7540e+00, -1.2398e+00,
         -2.2700e-01,  5.7457e-02]], device='cuda:0') tensor(1.2594, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
261000 特征值优化 tensor(2.0998, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4209,  0.0115,  0.5593, -0.6349,  0.7679,  0.1915,  1.7038, -1.5081,
          0.1628,  0.1874,  0.4101,  0.4757,  0.0047, -0.1001, -0.0426,  0.0842,
          0.1766,  0.1836, -0.0710, -0.0423,  0.0259,  0.0038, -0.0373, -0.0051,
         -0.0067,  0.0640, -0.3120,  0.2539,  0.5608,  0.0583, -0.3785,  0.5619,
          0.6235, -0.0170,  0.0191, -0.0483,  0.3152,  0.0363, -0.0191,  0.0479,
         -0.0723, -0.0089, -0.4041, -0.1787,  0.6243, -0.0169,  0.0518,  0.9013,
         -0.0177, -0.8924,  1.0122, -0.3526,  0.5269, -0.1106, -0.9344,  0.8791,
          0.1064, -0.0292, -0.0185,  0.0627,  0.3616, -0.8213, -1.5376,  1.1718,
         -0.1590,  0.1065, -0.0687,  0.0707,  2.6951, -1.0846, -0.2151,  0.1016]],
       device='cuda:0') tensor(1.0815, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
262000 特征值优化 tensor(9.7073, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9141,  0.1938, -0.9500, -0.0491,  0.8617,  1.1428,  1.9033, -1.1217,
          1.5867, -0.5171, -0.7319,  1.5365,  0.2107,  0.2806,  0.0438, -0.1255,
         -0.1118,  1.3298,  0.0791,  0.3418,  0.1408,  0.0951,  0.8815, -0.2546,
          0.2515,  0.0355,  0.7856,  0.5822,  0.2357, -0.1828,  0.0626,  1.7408,
         -0.0849, -0.2124,  1.8519, -0.4586,  0.1803, -0.8449, -0.1190,  0.4000,
          0.2599, -1.1532,  0.3759,  0.2112, -0.4698, -0.3827,  0.4462, -0.2361,
          0.7953, -0.8269,  0.0997,  0.0062, -2.4758, -0.9654, -0.0243,  0.0351,
          1.3025, -0.2385, -1.6548,  0.6910,  0.3025,  0.5337,  1.4530, -0.0122,
         -1.6405, -0.5609, -0.2495, -0.0810, -0.3414,  0.4341, -0.5178,  0.6607]],
       device='cuda:0') tensor(5.9099, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
263000 特征值优化 tensor(2.3569, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.4542e-01,  4.9475e-01, -5.3031e-01, -1.9228e-01,  1.8830e+00,
          1.7825e+00,  2.6195e+00, -9.5836e-01,  2.1774e+00, -3.5695e-01,
         -1.7181e-01,  2.0710e+00,  1.3363e-01,  1.9684e-01,  2.3175e-01,
         -6.1039e-02,  3.4481e-01,  4.2676e-01,  8.4237e-02,  8.0418e-02,
          1.0506e-01, -2.0307e-02,  5.1421e-02,  5.4921e-02, -2.5384e-02,
          4.3868e-02,  3.8049e-02,  3.2506e-02,  1.4143e-02,  7.5406e-04,
          9.0979e-02,  8.1680e-01, -1.6636e-01, -7.8876e-02,  8.0506e-01,
          1.1434e-01,  7.0801e-02, -3.4342e-01, -1.2759e-01,  1.9469e-01,
          1.0900e-02, -7.2027e-01, -1.4454e-01,  2.7182e-01,  1.9710e-01,
         -1.2766e-01,  1.5594e-01,  1.6574e-02,  9.4253e-02,  9.4213e-02,
          1.2560e-01, -1.4279e-02, -1.4290e+00, -5.7442e-01, -6.4260e-01,
          1.9602e-01,  1.9929e+00, -5.7284e-01, -9.2918e-01,  2.8187e-01,
          1.1277e+00, -2.8493e-01,  1.0691e+00, -1.2433e-01, -1.0739e+00,
         -1.5769e-01, -1.7671e-01,  4.1937e-02,  1.0642e-02,  1.7685e-01,
         -1.5475e-01,  7.4076e-01]], device='cuda:0') tensor(0.8489, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
264000 特征值优化 tensor(2.1028, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.4177e-01,  1.6984e-01, -2.9560e-01, -3.3001e-01,  2.0232e+00,
          1.6765e+00,  2.6700e+00, -9.8717e-01,  2.2907e+00, -4.3174e-01,
         -2.8873e-01,  2.0382e+00,  6.1533e-02,  3.2927e-01,  1.9754e-01,
         -1.5996e-01,  3.1767e-01,  1.8040e-01, -4.6623e-02,  7.4912e-02,
          3.4194e-02, -2.1220e-02,  4.2971e-02,  4.5442e-02,  1.2228e-01,
         -6.1592e-02,  9.7967e-03,  1.0687e-01,  8.2924e-03,  2.4589e-03,
          6.4992e-02,  6.9413e-01, -9.1949e-02, -5.7854e-02,  6.6165e-01,
          6.8777e-02,  1.8414e-01, -3.5511e-01, -8.9445e-02,  1.6997e-01,
          9.4056e-02, -6.8359e-01, -1.1802e-01,  1.4158e-01,  1.7297e-01,
          6.1026e-02, -4.8224e-03,  3.8144e-02,  7.3089e-02,  1.2067e-01,
          2.2003e-01, -2.7474e-02, -1.2447e+00, -5.6900e-01, -6.8719e-01,
          2.2982e-01,  2.1647e+00, -6.6355e-01, -7.3278e-01,  2.0948e-01,
          1.2200e+00, -4.0726e-01,  1.0092e+00, -3.5952e-02, -8.7954e-01,
         -1.7217e-01, -1.4157e-02,  4.2523e-02, -5.1765e-02,  1.2975e-01,
         -2.5616e-01,  6.4638e-01]], device='cuda:0') tensor(0.9180, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
265000 特征值优化 tensor(4.5584, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.0308e-01,  1.2478e+00,  1.3026e+00, -1.6947e-01,  1.5472e+00,
          3.8134e-02,  7.9763e-02,  8.4419e-01, -3.6489e-01,  1.6100e+00,
          4.4869e-01,  1.7829e-01, -4.8672e-01,  1.8166e-01,  1.2590e+00,
          4.3458e-02,  4.0435e-02, -2.4600e-01,  4.1112e-02,  1.9633e-02,
         -8.1542e-01,  8.1932e-01,  2.7155e-02,  6.2281e-02, -1.7001e-01,
          6.8932e-02, -3.2214e-01, -3.4817e-01,  1.2851e+00, -1.8598e-01,
          7.7375e-01,  4.3503e-01, -4.1470e-01, -1.1366e-02,  1.4397e-03,
         -1.4041e-02, -2.1621e-01, -1.5538e-01, -8.0683e-02,  1.2917e-01,
         -8.2209e-02,  5.4755e-02,  1.7195e+00,  4.6457e-01, -6.6767e-01,
          1.3316e+00,  1.7909e-02,  2.2991e+00,  4.6608e-01, -4.0202e-01,
         -4.5466e-01, -1.0181e-01,  3.8992e-01,  1.2719e-02, -5.8353e-01,
         -1.5745e+00, -1.3196e+00,  4.6314e-01,  3.3645e-02, -5.9357e-02,
          1.1436e+00, -3.8841e-01,  5.5866e-01, -1.9796e-01, -1.8845e-01,
         -1.3159e-01, -6.2249e-01,  1.7830e-01,  4.3569e-01, -1.5121e-01,
         -1.4716e-01, -1.3565e-01]], device='cuda:0') tensor(3.0272, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
266000 特征值优化 tensor(2.1666, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3697e-01,  1.1040e+00,  1.6218e+00, -1.2609e+00,  2.0061e+00,
          1.6399e-01,  5.0049e-01,  5.2529e-01,  1.6199e-01,  7.3348e-01,
          5.0766e-01,  2.3399e-01, -3.6857e-01,  1.2392e-01,  4.9580e-01,
          1.0323e-01, -4.9655e-02,  5.6739e-02,  6.3877e-02, -1.5149e-02,
         -5.6484e-01,  4.1169e-01, -3.6372e-02,  3.9734e-02, -2.4106e-01,
         -1.1502e-03, -6.2622e-03, -2.8626e-01,  8.7445e-01, -3.8161e-01,
          3.5604e-01,  4.4498e-01, -4.2432e-01, -1.4599e-02,  1.0827e-02,
          1.7140e-02, -1.4226e-01, -1.2720e-01, -5.1038e-02,  9.3147e-02,
         -1.2863e-01, -5.9849e-02,  1.2664e+00,  2.1240e-01, -7.2022e-01,
          1.6132e+00, -2.3052e-01,  1.8216e+00,  1.3883e-01, -8.5884e-01,
         -1.3427e+00,  1.3593e-01,  2.4264e-01,  3.2514e-02, -8.4736e-01,
         -1.1837e+00, -5.0778e-01,  2.5263e-01, -3.9410e-02, -1.1874e-02,
          5.7367e-01, -1.8344e-01,  6.6587e-01, -2.6398e-01, -2.6955e-01,
          5.8037e-02, -3.2056e-01,  1.6019e-01,  3.0194e-01, -3.3709e-02,
         -3.2901e-01,  5.1156e-02]], device='cuda:0') tensor(0.8715, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
267000 特征值优化 tensor(11.7622, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6060, -0.5242,  0.9487,  0.6393,  1.1055,  0.8297, -0.0684, -0.4237,
         -1.1608, -1.0340,  0.6127,  0.8096,  0.8219,  0.0382, -2.4596,  0.8894,
         -1.7712, -0.2484,  0.5642,  0.1818, -0.4936,  0.3720, -0.0725,  0.2449,
          0.9170, -0.6676, -0.1039, -0.4053, -0.0081,  0.3824,  1.2349,  1.2145,
         -0.4921,  0.5071, -0.1676, -0.0305,  0.3165, -0.2227,  0.3279, -0.6322,
          0.2481,  0.1643,  0.6618,  0.0583,  1.9889, -1.3241,  0.3306,  1.2413,
          0.0527, -0.2240,  1.6223, -0.3893,  0.4787,  0.5050,  0.6145,  0.6220,
         -0.0578,  0.1496,  2.0115, -0.2154, -0.2310,  1.4466,  0.7908,  0.3031,
          0.1700, -0.2135,  0.2739, -0.3923, -0.7096, -0.3199, -0.3143, -0.9165]],
       device='cuda:0') tensor(6.2909, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
268000 特征值优化 tensor(2.6847, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5422e+00, -1.7829e-01,  1.0768e+00,  9.1479e-01,  1.8301e+00,
          1.4634e-01,  8.4384e-01, -2.3232e-01, -3.3736e-01, -5.5889e-01,
          3.4387e-01,  7.8949e-01,  3.2128e-01, -2.0184e-01, -1.3846e+00,
          8.7412e-02, -8.1630e-01, -9.4407e-02, -1.0841e-03,  4.3363e-02,
         -5.3730e-01,  2.0444e-01,  1.2813e-02,  6.8872e-03,  1.6806e-01,
         -1.3445e-01, -2.5413e-01, -2.4222e-01,  8.2525e-03,  2.2351e-01,
          6.6878e-01,  3.8570e-01, -1.2620e-01, -3.6373e-02,  8.8841e-03,
          3.3846e-03, -3.4289e-01,  6.1770e-02,  7.4943e-02, -1.7414e-01,
         -2.9702e-02, -2.7866e-02, -2.3138e-01, -1.6259e-01,  1.6419e+00,
         -7.2546e-01, -1.6272e-01,  1.0636e+00, -2.2920e-01, -3.3376e-01,
          1.2465e+00, -4.1533e-01,  9.0417e-01, -3.6686e-01,  6.3978e-03,
         -6.4769e-03, -2.6737e-01,  1.4002e-01,  7.5673e-01, -1.1571e-01,
          4.4129e-01,  5.5583e-01,  1.6659e-01, -1.0845e-01, -2.3163e-01,
         -1.5812e-01,  5.4413e-01, -6.1219e-02, -2.7156e-01,  1.3220e-01,
         -4.0929e-01, -2.3628e-01]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
269000 特征值优化 tensor(2.1072, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8931, -0.3360,  1.1156,  0.7225,  2.0566,  0.1841,  0.8134, -0.2259,
         -0.2561, -0.4894,  0.4413,  0.8585,  0.2032, -0.2866, -0.7810, -0.1727,
         -0.2893, -0.0554, -0.0319,  0.0480, -0.5451,  0.1647,  0.0220,  0.0988,
          0.1592, -0.1536, -0.2455, -0.2293,  0.0247,  0.1838,  0.5510,  0.2733,
         -0.0895, -0.0738,  0.0297, -0.0122, -0.3522,  0.0699,  0.1535, -0.1193,
         -0.0380, -0.0649, -0.3063, -0.0386,  1.5213, -0.3417, -0.0775,  1.0263,
         -0.3081, -0.3104,  1.1087, -0.3691,  0.6608, -0.5322,  0.3998, -0.0144,
         -0.2318,  0.0924,  0.3134, -0.0820,  0.3172,  0.5394,  0.1023, -0.1069,
         -0.5085, -0.0814,  0.4021, -0.0474, -0.2348,  0.1352, -0.4626, -0.0300]],
       device='cuda:0') tensor(1.1241, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
270000 特征值优化 tensor(12.7197, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3054, -0.4646,  0.3234,  2.0773,  0.9971,  0.2381,  0.7958, -0.5074,
         -0.3687,  0.5367,  0.9361,  0.9379,  1.6482, -1.0615,  0.6819,  0.2934,
          0.6663,  0.1343,  0.1931, -0.1922,  0.2343, -0.4301, -0.1737,  0.4177,
         -0.3576,  0.5995, -0.3792, -0.4838, -0.0802, -0.5419, -0.0498, -0.4568,
          1.1227, -0.1211, -0.2989, -0.4249,  0.2756,  0.5413,  1.1597, -0.5129,
          2.2962, -0.0919, -1.1255, -0.7213,  1.8626,  0.1339,  2.0930, -1.1399,
          0.7655,  0.3335, -1.0118,  2.0856,  1.0542, -1.0748, -1.4384, -0.2665,
          1.0332, -0.5310, -0.9697,  1.0889, -0.3653,  0.6448, -1.5041, -0.5630,
          1.1985,  0.2724, -2.1389,  1.2519,  2.4713,  0.3119,  1.2726, -0.2786]],
       device='cuda:0') tensor(7.1924, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
271000 特征值优化 tensor(3.2678, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.2243e+00,  2.6037e-01,  1.2911e+00,  2.9830e+00,  8.8806e-01,
         -3.2311e-01,  8.3293e-01, -1.1065e-01,  4.0855e-01, -1.8651e-02,
          1.8950e+00,  9.4470e-01,  8.8512e-01, -4.7725e-01,  1.8059e-01,
          1.1544e-01,  1.1616e-01, -1.6781e-01,  7.8551e-02, -2.8656e-01,
          6.1638e-01, -5.3953e-01, -9.8752e-02,  2.8302e-02, -5.6411e-02,
          2.4799e-03, -5.9555e-02, -1.0645e-02, -2.2342e-03, -4.3982e-01,
         -1.8771e-01,  2.0960e-01,  7.4091e-01, -3.8650e-02, -6.1207e-02,
         -8.4612e-02, -1.2594e-01, -5.3438e-02,  2.3266e-01, -2.7551e-02,
          1.4457e+00, -3.4393e-01, -3.7657e-01, -6.0658e-01,  1.4468e+00,
          6.6354e-01,  1.1637e+00, -2.8081e-01,  6.9461e-01,  6.1219e-01,
         -6.6088e-01,  1.0328e+00,  1.2454e-01, -7.2081e-01, -5.4220e-01,
          6.4889e-01,  1.8614e-01, -6.2526e-02, -4.1696e-01,  5.0024e-01,
         -4.8942e-01,  2.5437e-01, -8.1657e-01,  1.6323e-01,  1.3756e+00,
         -3.8527e-01, -1.9077e+00,  8.9453e-01,  2.5010e+00,  1.0759e-01,
          1.7336e+00, -5.4370e-01]], device='cuda:0') tensor(2.3561, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
272000 特征值优化 tensor(2.1958, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.1134e+00,  5.5990e-01,  1.6357e+00,  2.2392e+00,  8.5911e-01,
          2.8703e-02,  4.5098e-01, -2.2424e-01,  2.6387e-01,  1.0708e-02,
          2.1108e+00, -3.2053e-02,  7.2804e-01, -3.7562e-01, -3.5816e-02,
          3.3020e-01,  2.4904e-01, -1.6931e-01,  5.0216e-02, -6.9091e-02,
          4.7374e-01, -5.5923e-01, -3.0380e-02,  8.4483e-03, -1.7667e-02,
         -2.2664e-02, -3.0208e-03, -1.7863e-03,  1.4433e-02, -4.0207e-01,
         -1.3841e-01,  2.1392e-01,  5.7958e-01, -2.2536e-02,  6.2688e-02,
          8.7407e-03, -8.9561e-02, -7.2231e-02,  3.4346e-02, -9.1043e-03,
          1.2653e+00, -2.1647e-02, -7.7868e-01,  8.8802e-02,  1.3048e+00,
          1.0840e+00,  7.1835e-01, -1.8120e-01,  5.2069e-01,  5.2114e-01,
         -3.2160e-01,  6.9318e-01, -2.1653e-01, -3.2835e-01, -4.2622e-01,
          7.4718e-01, -1.2164e-01,  8.7260e-02,  3.0552e-02,  1.0198e-02,
         -2.5343e-01,  2.1209e-01, -7.5246e-01,  2.3690e-01,  1.3358e+00,
         -6.0034e-01, -1.6935e+00,  8.3191e-01,  2.3884e+00, -6.2833e-03,
          1.6972e+00, -8.1514e-01]], device='cuda:0') tensor(1.4439, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
273000 特征值优化 tensor(2.1476, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0036e+00,  5.6084e-01,  1.5812e+00,  1.9029e+00,  7.5328e-01,
          7.5648e-02,  4.7334e-01, -2.0749e-01,  3.1045e-01, -1.9559e-03,
          2.1556e+00,  7.4310e-02,  6.8186e-01, -4.2725e-01,  3.8589e-02,
          3.0237e-01,  2.1130e-01, -1.6172e-01,  9.5473e-02, -8.0445e-02,
          4.2212e-01, -4.8183e-01, -5.1059e-02, -5.7004e-02,  6.2922e-02,
         -2.9578e-02, -2.3470e-02, -2.3156e-02,  1.9412e-03, -3.5438e-01,
         -1.2263e-01,  1.8622e-01,  4.6634e-01, -2.0642e-02, -3.1914e-02,
         -7.9374e-03, -5.8938e-02, -8.9977e-02,  3.3503e-02, -9.8599e-03,
          1.2325e+00, -2.2942e-02, -8.6559e-01,  3.5449e-01,  1.0441e+00,
          1.1474e+00,  5.8527e-01, -1.9528e-01,  4.7134e-01,  4.7100e-01,
         -2.9220e-01,  6.0586e-01, -3.9184e-01, -1.5243e-01, -3.4756e-01,
          8.4209e-01, -2.0306e-02,  4.6178e-02,  8.8218e-03,  5.5057e-03,
         -1.1644e-01,  1.0496e-01, -7.2592e-01,  2.4146e-01,  1.3427e+00,
         -6.0508e-01, -1.6684e+00,  8.3490e-01,  2.3799e+00, -3.2254e-02,
          1.7027e+00, -8.1017e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
274000 特征值优化 tensor(7.2140, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3015e+00,  9.7675e-01,  2.2908e+00, -9.8745e-01,  2.1496e+00,
          2.5447e-01,  5.2860e-01, -3.1813e-01, -1.1812e+00, -1.1801e+00,
          2.5593e+00, -8.4884e-02,  2.8508e-01, -9.6709e-02,  7.5084e-02,
          1.2842e-01,  2.4012e-01, -5.1125e-01, -8.6300e-01,  4.5428e-02,
          1.4395e-01, -1.0238e+00, -2.0149e-01, -1.1697e-01, -1.6066e-03,
         -4.4433e-03,  2.5948e-01,  2.2869e-01, -8.2087e-01,  2.2429e-01,
          6.2655e-01,  3.2325e-01,  5.0731e-01, -6.9995e-02, -1.1511e-02,
         -1.2583e-02,  2.7019e-01,  1.7859e+00,  6.5399e-01,  3.4511e-01,
          1.5806e-01,  2.3576e-01, -3.2975e-01,  2.1865e-01,  4.4244e-01,
         -9.3438e-02,  1.1697e-01,  1.6299e+00, -1.5083e+00, -7.4396e-01,
          6.7972e-01, -2.1017e+00,  3.1528e-02,  1.1125e+00, -1.0269e+00,
          1.6289e-01, -3.5900e-01,  1.0794e-01,  4.4110e-02, -1.6424e-01,
          1.7892e+00, -3.9139e-01, -6.2962e-01,  8.5975e-01, -1.1041e+00,
          6.7105e-02,  5.3202e-01, -6.0892e-01, -6.0633e-02, -6.6448e-01,
          4.4025e-01, -7.8443e-01]], device='cuda:0') tensor(4.3492, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
275000 特征值优化 tensor(2.2496, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4584e-01,  8.4291e-02,  2.4189e+00, -5.1231e-01,  2.3561e+00,
         -6.3061e-02,  1.3626e+00, -1.3288e-01, -5.4275e-01, -8.3688e-01,
          3.1679e+00,  2.5223e-01,  2.5422e-02, -5.0731e-02,  2.6246e-02,
         -5.0110e-02,  2.4772e-02, -1.8294e-01, -3.3078e-01,  1.8744e-02,
         -1.3285e-04, -5.8844e-01, -2.9006e-02,  1.8035e-02, -3.3343e-01,
          1.8628e-01,  1.7936e-01,  2.3727e-01, -5.4684e-01,  4.1299e-01,
          5.7553e-01,  3.4274e-01,  3.3634e-01, -2.6524e-02, -1.9841e-03,
         -1.9808e-02,  1.0704e-01,  1.0805e+00,  1.9465e-01,  7.5572e-02,
          4.6311e-02,  1.0363e-02, -2.5270e-01,  1.8065e-01,  1.7905e-01,
         -9.2355e-02,  2.5697e-02,  1.6794e+00, -1.1972e+00, -2.1690e-02,
          1.3766e+00, -1.6997e+00, -1.1013e-01,  6.7676e-01, -9.1587e-01,
          6.7661e-01, -2.8551e-01,  1.8423e-01,  2.8276e-01,  7.5447e-02,
          2.2782e+00,  2.6261e-02, -1.1637e+00,  6.1723e-01, -5.3160e-01,
         -1.3947e-02,  4.0825e-01, -1.7897e-01,  5.7008e-01,  1.4389e-01,
         -8.4503e-02, -5.5351e-02]], device='cuda:0') tensor(1.5314, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
276000 特征值优化 tensor(2.1309, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.6783e-01,  6.7795e-03,  2.3231e+00, -4.7622e-01,  2.1045e+00,
          1.0613e-01,  1.4370e+00, -3.8112e-01, -4.1456e-01, -5.6656e-01,
          3.1354e+00,  5.0606e-01,  2.4629e-02,  3.7631e-03, -4.3748e-02,
          8.9611e-03,  5.5082e-02, -5.4259e-02, -8.6166e-02,  3.9207e-02,
         -1.5007e-03, -5.3588e-01,  1.2239e-01,  5.7902e-02, -3.7912e-01,
          2.5368e-01,  1.1100e-01,  3.4562e-01, -4.8722e-01,  3.6836e-01,
          4.1901e-01,  4.9189e-01,  4.3300e-01, -2.3339e-02,  6.0326e-02,
          8.5202e-03,  1.1418e-01,  1.0245e+00,  1.9952e-01,  4.1258e-02,
         -9.6549e-02, -1.2851e-02, -1.3102e-01,  1.4536e-01,  1.4463e-01,
         -2.9106e-03,  2.9637e-03,  1.6195e+00, -1.4612e+00,  2.7043e-01,
          1.4175e+00, -1.6184e+00,  5.5585e-02,  3.6520e-01, -9.4421e-01,
          6.7839e-01, -2.2717e-01,  1.4889e-01,  2.1818e-01,  2.4718e-02,
          2.1202e+00,  3.0875e-02, -1.1467e+00,  5.5421e-01, -6.2032e-01,
          2.8658e-02,  2.5327e-01, -6.8223e-02,  5.1856e-01,  2.4607e-01,
         -1.7489e-01,  8.4932e-03]], device='cuda:0') tensor(1.0049, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
277000 特征值优化 tensor(2.1031, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.8077e-01,  2.0876e-03,  2.3110e+00, -5.0332e-01,  1.7699e+00,
          1.9509e-01,  1.4729e+00, -6.5493e-01, -3.6738e-01, -4.4575e-01,
          3.0830e+00,  5.3041e-01,  2.6868e-02, -2.6202e-03,  3.7809e-03,
          1.0073e-01,  4.1572e-02, -3.7555e-02, -2.9918e-02,  2.6075e-02,
         -1.0930e-05, -5.6300e-01,  2.5482e-02, -4.5305e-02, -3.6030e-01,
          2.1889e-01,  9.4407e-02,  3.3196e-01, -5.5831e-01,  3.4544e-01,
          3.2104e-01,  5.4740e-01,  4.4977e-01, -2.2959e-02,  4.9661e-02,
          3.2798e-02,  1.1234e-01,  9.9654e-01,  2.0975e-01,  2.1448e-02,
         -2.0457e-01, -1.7234e-02, -1.3387e-01,  1.4072e-01,  1.4051e-01,
         -1.1469e-03,  3.8576e-05,  1.7021e+00, -1.5252e+00,  4.1944e-01,
          1.3798e+00, -1.5364e+00,  1.9632e-01,  1.9461e-01, -1.0076e+00,
          6.9158e-01, -1.8803e-01,  1.2227e-01,  1.9495e-01,  5.7511e-02,
          2.0129e+00,  5.2322e-02, -1.1361e+00,  4.8749e-01, -6.4626e-01,
          3.9063e-02,  1.7702e-01, -3.2129e-02,  4.4897e-01,  2.8281e-01,
         -1.5973e-01,  2.4866e-02]], device='cuda:0') tensor(1.0708, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
278000 特征值优化 tensor(11.2630, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4654,  0.5726,  1.3223, -0.6943, -0.2312,  0.3573, -0.1416, -0.5890,
          1.1334,  1.3717,  0.0688,  0.0333,  0.3013, -0.4640, -0.7756,  0.6011,
         -1.1228, -0.3519, -2.0621,  0.0096,  0.6538, -0.3069,  0.7820, -0.0671,
         -0.2224,  0.2338, -1.1349,  0.2985,  0.3392, -0.2353, -0.0708,  0.4101,
         -0.4972, -0.4842, -0.1245,  0.1280, -1.3392,  1.1609, -2.1541, -0.2177,
         -0.2770, -0.4839, -0.3318, -0.5755,  0.1737, -0.5294,  0.1407,  0.4405,
         -0.0527, -0.8986,  0.1396,  1.0957,  0.5747, -1.3054,  0.0878, -1.2444,
          0.1548, -0.2583,  0.0127,  0.0214, -0.2111,  0.0639,  0.5499, -1.1997,
         -0.7310, -0.1481,  1.0100, -1.1253,  0.9445, -1.1023,  0.4900, -0.3350]],
       device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
279000 特征值优化 tensor(2.7763, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7158e-01,  3.8167e-01,  1.1825e+00, -6.9094e-01,  2.3400e-01,
         -2.0364e-02,  7.0768e-01, -1.1895e+00,  2.1020e+00,  7.5418e-01,
          1.1406e+00,  3.9149e-01,  1.6505e-01,  3.1143e-02, -5.5468e-02,
          2.6341e-01, -2.4599e-01, -1.5504e-01, -1.0219e+00,  1.4347e-03,
          1.8438e-01, -9.3368e-02,  4.9524e-02, -2.2357e-02,  2.5467e-01,
          6.5221e-01, -2.8299e-01,  1.6162e-01, -4.3717e-02, -1.8857e-01,
          2.4667e-04,  1.6300e-01, -6.7296e-01, -3.1907e-02,  7.8834e-04,
         -1.1663e-02, -1.8864e-01,  4.1309e-01, -1.1704e+00, -1.7253e-01,
         -2.6773e-01, -2.7068e-02, -3.6021e-01, -1.5401e-01,  5.1643e-01,
         -2.6627e-01,  8.9639e-02,  4.6251e-01,  4.9418e-01, -6.1631e-01,
         -3.5445e-01,  6.7723e-01,  1.0887e+00, -6.4924e-01,  1.8736e-01,
         -6.0923e-01, -1.9088e-02,  3.4456e-02,  3.1099e-02, -1.0906e-02,
         -3.4755e-01,  3.5276e-01,  7.4947e-01, -5.2760e-01,  1.9233e-01,
          8.1652e-01,  5.1289e-01, -3.2620e-01,  6.1314e-01, -7.3372e-01,
          8.5432e-01, -5.2989e-01]], device='cuda:0') tensor(1.8942, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
280000 特征值优化 tensor(2.1185, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9551e-01,  9.4680e-02,  6.3804e-01, -9.1594e-01,  2.1086e-01,
          1.6752e-01,  6.1791e-01, -1.1854e+00,  2.3136e+00,  6.8930e-01,
          1.5934e+00,  2.2939e-01,  1.0902e-01, -1.0737e-02, -6.5000e-02,
          1.9672e-01, -1.9546e-01, -1.6108e-01, -5.2458e-01, -1.1134e-02,
          1.3287e-01,  1.8799e-02,  3.1333e-03,  2.0349e-02,  2.7522e-01,
          2.7960e-01, -1.2370e-01,  5.2894e-02, -1.7812e-01, -4.4551e-02,
         -6.4702e-03,  3.0635e-02, -5.7406e-01, -1.8342e-02,  5.3990e-02,
         -1.4752e-02,  1.6752e-04,  7.7086e-02, -9.8392e-01, -2.5674e-01,
          6.2535e-03, -9.2253e-02, -5.4046e-01, -1.8988e-01,  4.3893e-01,
         -2.4813e-01, -4.8832e-02,  4.3200e-01,  4.5716e-01, -6.2424e-01,
         -1.7713e-01,  4.3215e-01,  9.4144e-01, -4.8120e-01,  9.6286e-02,
         -3.6298e-01, -7.5108e-02,  6.1393e-02, -4.4768e-02, -5.8315e-02,
         -4.1446e-01,  2.4195e-01,  5.0082e-01, -3.6046e-01,  3.5218e-01,
          8.1454e-01,  5.0805e-01, -1.4547e-01, -4.7076e-02, -6.9058e-01,
          5.7834e-01, -2.5219e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
281000 特征值优化 tensor(12.8930, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1741,  0.7853,  0.5545,  0.0593, -0.6836,  0.0057,  0.1924,  0.1841,
         -0.7607,  0.3786, -0.1382,  0.0553,  1.8374, -1.4200, -0.4565,  0.2205,
          1.1987, -0.5316,  0.8213,  0.2993,  1.3675,  0.2207, -1.1977,  0.4353,
         -0.4972, -0.6014, -0.5660,  0.4867, -0.0046, -0.3178, -0.1575, -1.1814,
          0.3884,  0.4009,  1.0029, -0.2912, -0.0473, -0.2133,  0.7322, -0.3980,
         -0.6984,  0.2981, -0.3524,  0.5868, -0.6487, -0.4956,  1.1019, -0.7711,
          0.7946, -0.7959, -0.3403,  0.7153,  1.8737, -0.6674,  0.2802, -0.5068,
          0.4590, -0.6663,  1.7091, -0.6902, -2.2042, -0.7916,  0.6676, -0.0959,
          0.7492, -0.8024,  2.0129,  1.0631,  0.1145, -0.9522, -0.6015,  1.2626]],
       device='cuda:0') tensor(6.5417, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
282000 特征值优化 tensor(2.5353, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8870e+00,  1.6588e+00,  1.9733e-01,  3.2339e-01,  6.2568e-02,
         -4.5251e-04,  1.1382e+00,  7.3064e-01,  1.3119e-01,  4.1546e-01,
          1.9982e-02,  8.6922e-01,  1.0314e+00, -4.7271e-01,  3.8519e-02,
         -9.5423e-02,  2.8626e-01, -1.1633e-01,  6.1178e-02,  2.3227e-01,
          9.8825e-01, -8.3013e-02, -1.5934e-01, -1.2980e-01,  3.8165e-02,
         -7.3676e-02, -1.7576e-01, -2.5794e-03, -1.4648e-02, -6.5139e-02,
         -1.5537e-02, -3.8166e-01,  5.9091e-01,  2.5525e-02,  5.7998e-01,
         -1.2238e-01, -1.3537e-01, -1.7842e-02,  1.4680e-01, -1.1652e-01,
         -1.3690e-01,  6.8325e-02,  2.9555e-01,  1.2959e+00,  7.6283e-02,
          2.9022e-01,  9.5761e-01, -2.6495e-01,  2.8207e-01,  1.7190e-01,
         -1.8902e-01,  1.4945e-01,  2.1543e+00, -1.1000e+00, -7.8801e-02,
         -6.7905e-01,  5.7088e-01, -2.1164e-01,  1.0879e+00,  1.7532e-01,
         -1.2170e+00,  1.4968e-02,  5.1392e-02, -2.2365e-01,  1.6298e+00,
         -6.8086e-01,  1.0850e+00,  2.1982e-01,  4.0971e-01, -3.8916e-01,
         -3.0688e-01,  5.4846e-01]], device='cuda:0') tensor(1.0217, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
283000 特征值优化 tensor(2.1110, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8112e+00,  1.9931e+00,  9.5922e-02,  8.9008e-03,  2.0524e-01,
          3.3536e-01,  1.3415e+00,  8.0387e-01,  2.5015e-01,  6.5589e-01,
          3.3699e-02,  7.6563e-01,  9.6383e-01, -3.2725e-01, -9.1475e-02,
         -3.3371e-01,  7.1195e-02,  7.6389e-02, -1.4377e-01,  2.4354e-01,
          9.3299e-01, -2.1218e-02,  4.7062e-03,  2.4804e-03,  2.0115e-02,
          1.1787e-02, -3.7830e-04,  1.4887e-02, -4.4243e-03, -2.5763e-03,
         -2.1973e-02, -3.3914e-01,  3.4072e-01,  3.2803e-02,  4.7145e-01,
         -1.6272e-01, -1.7205e-01, -1.9000e-02,  2.6476e-01, -1.0842e-01,
         -1.6119e-01, -1.4120e-01,  2.3166e-01,  1.3490e+00,  1.6309e-01,
          4.9595e-01,  6.7543e-01, -1.2178e-01,  1.0884e-01,  8.9563e-02,
         -7.6375e-02,  4.0282e-02,  1.8047e+00, -8.8998e-01, -2.2427e-01,
         -1.6956e-01,  2.7008e-01, -6.9149e-02,  1.0073e+00,  2.4950e-01,
         -8.9283e-01,  3.5519e-02, -1.8242e-01, -9.8087e-02,  1.6557e+00,
         -6.1097e-01,  9.6189e-01,  1.1792e-01,  1.2071e-02, -2.2472e-01,
          2.3664e-02,  4.7320e-01]], device='cuda:0') tensor(1.0032, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
284000 特征值优化 tensor(5.4582, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3746,  0.4523,  1.2441, -0.7879,  0.2417,  1.0710, -0.0127,  0.2262,
          1.2466,  0.7953, -0.2553,  1.2877, -0.4036,  0.0298, -0.0575, -1.1336,
         -0.0613,  0.0032, -0.0124, -1.3421, -0.4178,  1.1518,  0.1039, -0.1487,
         -0.0670,  0.1133,  0.1068, -0.2300, -0.0200, -0.3703, -0.6311, -1.1393,
          0.4072, -0.0670,  0.1378, -0.0902,  0.4804,  0.1680, -0.1297, -0.0775,
          0.0382, -0.0424,  1.5456, -0.6435, -0.6148,  1.0198, -0.0999,  0.6942,
         -0.1891,  1.6770,  0.2321, -0.2554,  1.9798,  0.0026,  0.8360,  1.0468,
         -0.3864,  0.5039, -0.0216, -0.2018,  0.4716, -0.3593,  0.5829, -0.3195,
          1.2525, -1.4158,  0.7278, -0.9993,  0.3127, -0.5071, -0.1693, -0.1716]],
       device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
285000 特征值优化 tensor(2.4738, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4645e-03,  2.3256e-01,  1.5986e+00, -6.1686e-01,  5.5396e-01,
          2.9432e-01,  4.0732e-01,  4.0338e-01,  6.4727e-01,  6.1841e-01,
          1.3599e-01,  5.6051e-01, -2.1747e-01, -2.9549e-02, -1.9456e-02,
         -3.1041e-01,  2.5475e-03,  1.4318e-01, -1.1734e-01, -7.5374e-01,
         -2.0642e-01,  6.2646e-01,  2.0626e-02,  7.4178e-02, -1.3642e-01,
          7.8977e-02, -9.2609e-02, -1.9720e-01, -3.6137e-02, -3.7834e-01,
         -4.1734e-01, -7.9442e-01,  3.7247e-01,  3.4967e-02,  1.0679e-01,
         -7.0326e-02,  2.2587e-01,  7.0568e-02, -9.5919e-02, -5.8324e-02,
         -4.5036e-04, -8.0429e-02,  1.5315e+00, -6.5250e-01, -6.2960e-01,
          6.9235e-01, -2.6800e-01, -2.5352e-01, -1.2910e-01,  1.3245e+00,
          1.2353e-01, -2.2191e-01,  1.9530e+00, -2.7407e-01,  1.3159e+00,
          6.5468e-01, -2.2058e-01,  1.6136e-01,  1.5352e-01,  4.2025e-02,
          5.9198e-01, -7.1176e-01,  5.8584e-01, -4.6254e-01,  6.6274e-01,
         -6.8920e-01,  3.3741e-01, -4.8172e-01,  2.3839e-01, -1.4356e-01,
         -2.0006e-01, -9.9877e-02]], device='cuda:0') tensor(1.5297, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
286000 特征值优化 tensor(2.1276, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0670e-01,  5.4957e-02,  1.5174e+00, -9.8179e-01,  6.5216e-01,
          3.1349e-01,  5.6297e-01,  5.0858e-01,  9.2223e-02,  1.8241e-01,
          3.5265e-01,  5.8771e-01, -1.9813e-01, -1.6161e-02,  9.1038e-02,
         -1.8822e-01,  1.4780e-02, -1.7534e-02, -6.4406e-02, -4.7869e-01,
         -1.7926e-01,  5.2450e-01, -1.2226e-02,  4.4059e-02, -1.5758e-01,
         -4.3178e-02,  2.3929e-02, -2.7401e-01,  1.1204e-02, -4.6922e-01,
         -3.5816e-01, -6.9138e-01,  3.2662e-01,  2.6000e-02, -9.0617e-03,
         -2.0407e-02,  2.4472e-01,  4.2554e-02, -8.5197e-02, -6.0597e-02,
         -1.0802e-02, -9.5319e-02,  1.3604e+00, -5.7555e-01, -5.3961e-01,
          1.2585e+00, -5.3703e-01, -3.7717e-01, -1.8063e-01,  1.2002e+00,
          8.2942e-02, -2.8293e-01,  1.8019e+00, -1.9385e-01,  1.2087e+00,
          3.1989e-01, -1.7075e-01,  1.6296e-01, -4.3659e-04,  2.0671e-02,
          5.1167e-01, -6.9011e-01,  5.5691e-01, -4.3893e-01, -5.9917e-02,
         -6.7548e-02, -1.2865e-01, -7.9458e-02,  3.1032e-02, -5.6924e-02,
         -4.7177e-01,  9.6158e-02]], device='cuda:0') tensor(1.3256, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
287000 特征值优化 tensor(13.7272, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1265,  0.1805,  0.3583, -0.0692, -0.8020,  1.7440, -0.4542,  0.4431,
          1.6942,  0.9086, -0.5081,  0.3776,  0.0661, -0.0239, -0.1939,  0.9771,
         -0.1623,  0.5607,  0.3553, -0.5967, -0.0033, -0.0895, -0.1642, -0.9364,
         -1.0804,  0.3865,  0.9443,  0.6741, -0.8098, -1.0702,  0.4895,  2.6117,
         -0.2438, -0.4662,  0.0467, -0.5923, -0.1791,  0.6018,  0.8945,  0.4016,
          0.0786,  0.5953,  1.7070, -0.3105, -1.6745,  0.6701, -0.3964, -0.8155,
          1.4713,  0.3812, -0.9249,  1.2457,  0.9798, -0.8346,  0.6196, -0.4025,
          0.3770,  0.0841, -1.0508, -1.0752, -0.0251,  1.0737, -0.4728,  0.7108,
         -0.7462, -0.3712,  0.3493,  0.3208,  1.8848, -1.5448,  0.2014,  1.4229]],
       device='cuda:0') tensor(6.8784, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
288000 特征值优化 tensor(3.9477, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.1995e-01, -2.9794e-02,  1.1812e+00,  1.0492e+00,  1.7908e-01,
          7.6908e-01,  4.9487e-01,  5.1212e-01,  1.2886e+00,  1.4719e+00,
         -1.2861e-01,  1.0577e+00, -2.4515e-02, -3.5985e-02, -7.8522e-03,
          1.2679e-01,  2.0713e-03,  2.0135e-02,  4.2287e-03, -2.2859e-02,
          6.8333e-03, -3.2137e-02,  1.8800e-02, -4.7986e-01,  6.4955e-02,
         -2.6552e-01,  2.9865e-01,  4.7973e-01, -1.3954e-01, -4.6249e-01,
          7.5535e-02,  1.6082e+00,  8.9442e-02, -1.3665e-01, -3.8501e-02,
         -3.6083e-02,  7.5408e-02,  1.7852e-01,  2.5382e-01,  3.1119e-01,
         -3.8690e-02,  4.4695e-01,  5.2382e-01, -1.5669e-02, -4.2484e-01,
          4.9152e-01, -2.5339e-01, -1.0042e+00,  1.1479e+00,  4.4133e-01,
         -6.8216e-01,  6.4125e-01,  1.8574e+00, -1.7604e+00,  6.6251e-02,
         -9.7645e-01, -3.7595e-01,  2.5627e-01, -5.9783e-01, -7.9295e-01,
          7.6219e-01, -3.4080e-02, -4.2821e-01,  3.4210e-01, -4.1112e-01,
          3.9512e-01, -1.4949e-01,  3.9269e-01,  2.1896e+00, -1.1112e+00,
          1.3697e-01,  7.0400e-01]], device='cuda:0') tensor(2.5618, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
289000 特征值优化 tensor(2.1864, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.5853e-03, -6.5690e-02,  1.1702e+00,  1.2545e+00,  6.4217e-01,
          1.7933e-01,  8.6994e-01,  1.1332e-01,  1.1592e+00,  1.5390e+00,
         -1.1229e-01,  1.0352e+00, -2.0048e-02,  3.3562e-02,  7.2353e-03,
          8.2200e-03,  1.4282e-03, -1.8408e-02,  2.1136e-02,  2.3927e-02,
         -1.2724e-03, -8.3635e-02,  1.4446e-01, -1.9372e-03,  3.2521e-01,
         -2.4466e-01,  1.7004e-01,  4.6678e-01,  1.5869e-02, -3.3064e-01,
          2.8555e-02,  1.1832e+00,  5.1339e-02, -5.1388e-02, -1.7490e-02,
          1.1109e-03,  9.6531e-02,  8.3130e-02,  2.0449e-01,  3.3972e-01,
         -8.2381e-02,  5.0433e-01,  1.5368e-02,  3.5064e-02,  1.7403e-02,
          6.0645e-02, -1.0801e-02, -6.6733e-01,  4.6460e-01,  3.2160e-01,
         -3.0206e-02,  3.6297e-01,  2.1922e+00, -1.8820e+00,  4.5596e-01,
         -1.0823e+00, -4.1939e-01,  2.6004e-01, -4.9805e-01, -6.3568e-01,
          1.0286e+00, -4.4812e-01, -3.7308e-01,  2.3961e-01, -2.8263e-01,
          3.2513e-01, -1.2219e-01,  3.6685e-01,  2.1260e+00, -1.0754e+00,
          3.5343e-01,  6.6330e-01]], device='cuda:0') tensor(0.9612, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
290000 特征值优化 tensor(2.1305, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.7828e-02, -3.7198e-02,  9.1314e-01,  1.0811e+00,  8.0977e-01,
          2.4505e-01,  8.8688e-01, -2.9901e-01,  1.1770e+00,  1.3072e+00,
         -1.4067e-01,  1.0352e+00, -1.9802e-02, -3.9688e-02,  3.4327e-02,
         -1.9496e-02, -4.9158e-02,  5.0860e-03,  3.1450e-02,  1.7153e-02,
         -1.0254e-03, -3.2182e-02,  1.0619e-01,  7.1649e-02,  3.2156e-01,
         -2.0507e-01,  9.7343e-02,  3.7997e-01,  8.4144e-03, -2.8486e-01,
         -2.6018e-02,  1.0856e+00,  2.4604e-02, -3.9603e-02,  5.3268e-02,
          1.4885e-02,  7.9276e-02, -1.5821e-02,  1.8614e-01,  3.3886e-01,
         -1.4308e-01,  5.1630e-01,  1.3208e-02,  2.9722e-02,  3.1292e-02,
          3.9213e-02, -7.3198e-03, -5.8889e-01,  3.4120e-01,  3.4102e-01,
          2.9106e-03,  2.9785e-01,  2.1779e+00, -1.7827e+00,  7.6497e-01,
         -1.0517e+00, -3.8138e-01,  2.3574e-01, -4.9104e-01, -6.3655e-01,
          9.3840e-01, -4.0671e-01, -7.2334e-01,  2.8044e-01, -2.7593e-01,
          3.1412e-01, -3.4410e-02,  3.5374e-01,  2.0144e+00, -1.0414e+00,
          4.2662e-01,  6.6863e-01]], device='cuda:0') tensor(1.3699, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
291000 特征值优化 tensor(17.7844, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1039e+00,  2.0810e-01, -4.6390e-01,  1.5982e+00, -8.2611e-01,
          3.6462e-01, -2.4894e-01, -3.5788e-01,  6.3026e-01,  2.1840e+00,
         -5.1124e-01, -1.0652e+00, -9.9675e-01, -1.0482e-01, -5.1603e-01,
         -5.6649e-01,  3.9959e-01,  1.7263e-01,  4.1189e-01, -3.0881e-01,
          7.8758e-01,  4.3151e-01,  1.7964e+00, -1.2475e-01,  1.9487e+00,
         -4.3200e-01,  2.3301e-01, -3.9270e-01,  8.6249e-01,  5.9837e-01,
          1.5910e-01,  1.4931e+00,  2.1435e-01, -3.3530e-01,  6.1489e-01,
         -2.7196e-01, -4.8140e-01,  7.1248e-01,  8.9114e-01, -1.7244e-01,
          3.5520e-01,  4.0037e-01, -8.3925e-01, -1.8092e-01, -7.3679e-01,
         -2.6806e-01,  2.7060e+00, -2.1521e+00, -2.7907e-01,  7.5579e-01,
          9.9294e-03,  3.6674e-01, -5.2081e-01,  1.0923e+00,  1.4090e+00,
         -7.9925e-01,  4.5342e-01, -2.9723e-01, -1.3527e+00, -9.7127e-01,
         -1.6913e+00,  1.0502e+00,  5.6073e-01, -1.6080e+00, -4.5846e-01,
          5.0236e-02,  1.5613e-01, -1.0001e+00,  2.2147e+00, -9.0499e-01,
         -2.5584e-01,  1.0447e-03]], device='cuda:0') tensor(8.6210, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
292000 特征值优化 tensor(3.7872, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0748e+00, -6.6716e-01,  5.6692e-01,  6.6185e-01,  1.3876e-01,
          9.3305e-01,  5.6003e-01, -9.7101e-01,  1.3108e+00,  1.4164e+00,
          1.0143e-01, -4.3075e-01, -1.9120e-01,  1.9460e-01, -3.0246e-02,
         -9.9371e-02, -1.2976e-01,  3.8162e-02,  4.2989e-02, -1.4205e-02,
          9.7359e-04, -6.2791e-02,  8.6535e-01,  1.5152e-01,  9.6436e-01,
          1.2599e-02,  4.8303e-02,  3.1062e-01,  8.6412e-02,  2.6997e-02,
          6.6517e-02,  5.1697e-01, -4.0401e-01, -4.2036e-03,  1.5935e-01,
         -1.6321e-01,  3.8547e-02,  1.7316e-01,  4.6862e-01,  1.6703e-01,
         -7.6108e-02,  4.2572e-02,  1.8946e-01, -2.0578e-01, -1.0580e+00,
         -1.0244e+00,  1.6806e+00, -1.1356e+00,  1.3117e-01,  7.7527e-01,
         -3.7362e-01,  2.5259e-01,  2.6729e-01,  1.0630e-01,  4.5086e-01,
         -9.3787e-01, -1.4810e-02, -9.1036e-02, -3.3320e-01, -1.9540e-01,
         -7.2357e-01,  4.9512e-02,  1.0529e+00, -8.5277e-01, -8.6628e-02,
          4.6963e-02, -1.7537e-01, -2.7073e-01,  2.3268e+00, -7.5866e-01,
          2.3609e-01, -2.1157e-01]], device='cuda:0') tensor(1.6892, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
293000 特征值优化 tensor(2.1523, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.2897e+00, -1.2134e+00,  4.6156e-01,  3.3203e-01,  2.9279e-01,
          3.3710e-01,  5.6493e-01, -6.5394e-01,  1.4931e+00,  1.1504e+00,
         -6.8564e-02,  3.2567e-02, -2.1764e-01,  9.9405e-02,  6.8842e-02,
         -3.8004e-01, -4.4637e-01, -5.7425e-03,  1.2335e-01, -3.1873e-02,
         -6.8408e-02, -5.0919e-02,  6.5691e-02,  1.0774e-02,  5.7193e-01,
         -1.4203e-01,  1.0865e-01,  1.2521e-01,  5.2753e-03,  6.9555e-02,
         -1.7736e-02,  2.3357e-01, -3.1670e-01, -2.4226e-02, -4.7757e-03,
          4.3330e-02,  2.2532e-01,  3.8647e-02,  4.2983e-01,  8.0727e-02,
         -1.6785e-02, -2.8437e-03,  5.3136e-01, -4.6541e-02, -1.3366e+00,
         -9.3473e-01,  1.3578e+00, -4.4974e-01,  1.8153e-02,  3.3845e-01,
         -1.2319e-01,  1.3416e-01,  1.7261e-01, -6.0217e-02,  2.3485e-01,
         -8.5547e-01, -1.9730e-01,  1.2237e-01, -1.3066e-02,  6.2273e-02,
         -4.6818e-01, -2.0418e-01,  9.9694e-01, -6.0832e-01, -7.5555e-02,
         -5.0440e-02, -3.2118e-01, -2.0768e-01,  2.2058e+00, -5.6310e-01,
          2.5649e-01, -6.3510e-02]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
294000 特征值优化 tensor(22.1916, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0832, -0.4163,  1.2619,  1.5248,  0.9780,  0.3622, -0.0873, -0.1032,
          1.3106, -0.5851,  0.2069, -1.0398, -2.3015, -0.2120, -0.2970, -0.1836,
         -0.7200, -0.8378,  1.0648,  0.7152, -0.3084, -0.7855,  0.1823,  0.3768,
          1.4652, -0.1833,  0.4782, -0.1292, -0.2872, -0.2321, -0.6454, -2.8068,
          0.6814, -1.4714,  1.9029,  0.3544,  0.5991, -0.4385,  0.6910,  0.0956,
         -2.3501, -0.4744,  1.1815, -0.7149,  0.0872,  0.9704, -1.0783, -0.1709,
          0.1983,  0.1370,  0.9621, -0.8574,  0.7279, -0.1326,  0.0988, -0.8386,
          0.7608,  1.7552, -0.5429, -0.2448, -0.8315, -0.2137, -0.6638, -0.7197,
          1.2942, -1.2573,  0.5211,  2.6706, -1.0313, -0.2855,  0.5627, -1.0547]],
       device='cuda:0') tensor(11.7898, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
295000 特征值优化 tensor(5.9679, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9845,  0.4315,  0.7319,  0.5871,  1.9133,  1.3175,  0.9300,  0.5362,
          2.2747, -1.0984,  1.4625, -0.0437, -1.1202, -0.1378, -0.0040,  0.0665,
          0.0943, -0.2820,  0.3072,  0.0396, -0.9000, -0.0425, -0.0118,  0.0379,
          0.5763, -0.1261, -0.0957, -0.1970, -0.0072,  0.0145,  0.2447, -1.7803,
          0.2524, -0.6590,  0.8923,  0.4465,  0.2680,  0.0175,  0.4221,  0.1223,
         -1.6533,  0.2188,  1.4752, -0.5896,  0.5460,  2.0352, -0.0902, -0.2873,
          0.2210,  0.2220, -0.0620, -0.0938,  1.6890, -1.0792, -0.0566, -0.7662,
          0.3757,  0.6067, -0.7189,  0.1917,  0.1940, -1.1803,  0.0127, -0.2149,
          1.6865, -1.0470, -0.4753,  1.6503,  0.2444,  0.7739,  1.0504, -0.6521]],
       device='cuda:0') tensor(2.8147, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
296000 特征值优化 tensor(2.4922, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2305e+00,  1.3205e+00,  1.0862e-01,  2.3872e-02,  2.2155e+00,
          1.5048e+00,  1.3795e+00,  1.1031e+00,  2.5060e+00, -1.5040e+00,
          2.4253e+00,  1.7225e-01, -6.5773e-01, -1.1692e-01, -2.2240e-02,
         -3.9715e-02,  4.6131e-02,  1.7751e-01,  1.0446e-01,  2.0449e-02,
         -6.3654e-01,  2.5044e-02,  1.2141e-01, -2.9610e-03,  1.4527e-01,
         -1.1522e-01, -1.1303e-01, -1.6448e-01, -8.8740e-03, -1.8579e-03,
          2.4308e-01, -1.3329e+00,  5.3008e-01, -4.4987e-01,  5.4483e-01,
          3.0931e-01,  1.6804e-01, -2.4506e-01,  4.0425e-01, -1.5207e-02,
         -9.8145e-01,  1.0286e-01,  1.3116e+00, -8.3500e-01,  8.9291e-01,
          1.7601e+00, -2.1716e-01, -2.1980e-01,  1.7557e-01,  1.7467e-01,
         -6.7896e-03,  8.9326e-04,  1.9598e+00, -1.2170e+00, -1.0387e+00,
         -1.2323e+00,  2.3596e-01,  3.9734e-01, -8.5900e-01,  4.3543e-01,
          6.1440e-01, -1.1127e+00,  6.2293e-01, -2.1208e-01,  1.6481e+00,
         -1.2079e+00, -8.6631e-01,  1.2800e+00,  9.4820e-02,  7.3150e-01,
          8.5602e-01, -6.1182e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
297000 特征值优化 tensor(2.2109, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3289e+00,  1.2989e+00,  2.7489e-01,  1.1232e-02,  2.1894e+00,
          1.3822e+00,  1.4465e+00,  1.6729e+00,  2.4758e+00, -1.8459e+00,
          2.5163e+00,  1.7468e-01, -6.2867e-01, -1.0061e-01, -1.4309e-01,
          5.8118e-03,  6.9111e-04,  1.8818e-01,  1.6921e-01,  7.2669e-03,
         -6.1392e-01,  2.6561e-02, -2.8656e-02,  1.1794e-03,  3.4930e-02,
         -2.0410e-01, -5.8630e-02, -5.7812e-02, -1.1920e-02,  1.7763e-04,
          2.7922e-01, -1.1995e+00,  7.4486e-01, -3.4089e-01,  6.0072e-01,
          3.0374e-01,  6.0015e-02, -3.6722e-01,  2.4981e-01, -1.2545e-01,
         -7.3543e-01,  6.5037e-02,  1.3905e+00, -9.7082e-01,  8.9634e-01,
          1.7136e+00, -2.2349e-01, -1.8790e-01,  1.7468e-01,  1.6961e-01,
         -3.1091e-02,  1.2461e-02,  1.8148e+00, -9.9741e-01, -1.5930e+00,
         -1.2600e+00,  2.9049e-02,  3.2117e-01, -8.3696e-01,  4.0574e-01,
          6.3957e-01, -9.5443e-01,  8.7853e-01, -3.6963e-01,  1.6889e+00,
         -1.4339e+00, -9.6558e-01,  1.1204e+00,  1.2936e-01,  3.7686e-01,
          9.9399e-01, -6.3479e-01]], device='cuda:0') tensor(1.0118, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
298000 特征值优化 tensor(2.1311, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4193e+00,  1.2728e+00,  3.7000e-01, -2.6512e-02,  2.0994e+00,
          1.2231e+00,  1.4597e+00,  2.0942e+00,  2.4613e+00, -1.9015e+00,
          2.4874e+00,  2.0025e-01, -6.1651e-01, -1.0085e-01, -1.4727e-01,
          2.4259e-02,  1.9708e-02,  1.4245e-01,  1.5299e-01,  8.8433e-02,
         -5.9448e-01,  2.6810e-02,  4.2291e-02, -2.8869e-02,  1.4842e-02,
         -1.6554e-01,  5.5152e-04,  7.3839e-03, -2.0249e-02,  2.1649e-04,
          2.4314e-01, -1.1040e+00,  8.4951e-01, -2.6166e-01,  6.5592e-01,
          3.5279e-01,  4.7184e-02, -3.4528e-01,  1.5090e-01, -1.2168e-01,
         -5.6647e-01,  6.9266e-02,  1.3873e+00, -8.5687e-01,  7.9095e-01,
          1.7145e+00, -2.2891e-01, -1.8875e-01,  1.7407e-01,  1.6603e-01,
          2.0810e-03,  4.9623e-03,  1.5638e+00, -8.2153e-01, -1.5903e+00,
         -1.1672e+00,  1.2023e-01,  1.8012e-01, -8.3960e-01,  4.6028e-01,
          6.6783e-01, -8.8641e-01,  8.5906e-01, -4.8549e-01,  1.6981e+00,
         -1.5129e+00, -9.9270e-01,  1.0696e+00,  1.8727e-01,  8.3227e-05,
          1.1255e+00, -6.0859e-01]], device='cuda:0') tensor(1.0494, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
299000 特征值优化 tensor(4.2255, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.3143e-01, -7.2986e-01,  1.2616e-01, -5.0531e-01,  3.4907e-01,
          1.9363e+00, -3.1007e-01,  5.1386e-01,  4.6605e-01, -7.2743e-01,
         -1.6197e-03,  2.2399e+00,  8.0741e-02,  2.7801e-01, -1.2183e-01,
          1.8519e-01,  8.4595e-01,  2.6792e-01, -1.2943e-01, -3.8781e-01,
         -1.0282e-01,  6.1326e-02,  2.4009e-02, -5.9416e-01,  9.2812e-02,
          4.1601e-02, -8.2924e-02,  2.2372e-01,  1.7603e-01,  4.1807e-02,
         -7.9743e-01,  1.7416e-01, -5.7709e-02, -9.9208e-01, -8.3044e-02,
          4.1801e-01,  2.1136e-01,  6.4939e-02, -1.5465e-01,  8.7752e-01,
         -7.1269e-04,  7.6691e-01, -7.4917e-01,  1.3336e+00, -5.0100e-01,
          2.3362e-01, -2.5462e-01,  1.1126e+00, -3.5105e-01, -5.8323e-01,
          1.2362e+00, -6.1744e-01,  1.0781e+00,  6.6419e-01, -2.2725e-01,
         -5.3667e-01,  1.2486e+00,  4.4672e-02, -4.1907e-01, -1.0638e+00,
          8.4339e-01, -1.0569e+00, -6.9399e-02, -2.4270e-01, -3.5970e-01,
          2.4440e-01,  8.0654e-01, -2.1470e-01, -5.9688e-02, -2.4424e-01,
          6.1948e-01,  1.2319e+00]], device='cuda:0') tensor(1.8397, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
300000 特征值优化 tensor(2.2261, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5328, -0.3708,  0.3821, -0.1449,  0.5683,  2.1194, -0.0728,  0.0871,
          0.5774, -0.3129,  0.1060,  2.4867,  0.0502, -0.0203,  0.0038,  0.1872,
          0.3093, -0.0436,  0.0258, -0.0380, -0.0619,  0.0340,  0.1206, -0.2581,
         -0.0086, -0.0313,  0.0225,  0.0216, -0.0509,  0.0073, -0.4919,  0.1440,
         -0.0450, -0.7435, -0.1376,  0.3057,  0.1978,  0.0082, -0.0314,  0.6856,
         -0.0194,  0.6690, -0.4081,  0.9175, -0.3944,  0.1289, -0.0934,  0.3590,
         -0.1277, -0.1268,  0.5986, -0.2781,  0.5196,  0.6025,  0.0188,  0.0116,
          0.5175,  0.1633, -0.2067, -1.0611,  0.5605, -0.6518, -0.0249, -0.0249,
         -0.2347,  0.3789,  0.3902, -0.0103, -0.1149,  0.0890,  0.4713,  0.8814]],
       device='cuda:0') tensor(1.1115, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
301000 特征值优化 tensor(17.7576, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1576, -0.5117, -0.0855, -1.2199, -1.2835, -0.5155,  0.4545,  0.5607,
          2.7380, -1.2020, -0.0394, -0.1318,  0.5912,  0.8049,  1.9446,  0.2140,
         -3.2589,  0.7087, -0.2217,  0.9823, -0.2123, -1.1014, -0.3090,  1.0923,
         -0.6613,  0.1166,  0.4298, -1.1115, -1.4370,  1.1860, -1.2297, -0.4892,
          0.5709, -0.0310,  0.0633,  0.4066,  0.6555, -0.8991, -0.2166, -0.6910,
         -0.4847,  2.3251,  0.8370,  0.3023,  0.0592,  0.5173,  1.2711,  1.5932,
         -0.2101, -1.3314, -0.0817,  0.8538, -1.6520,  0.3479, -0.4650, -1.4962,
         -0.3337,  1.1921, -0.3914,  1.4124,  1.2163, -0.0243, -1.5267,  0.1081,
         -0.9414, -0.7619, -1.6489,  0.4092,  0.4770,  0.8017, -0.8239, -0.2463]],
       device='cuda:0') tensor(8.1666, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
302000 特征值优化 tensor(4.3877, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0204e+00, -4.4833e-02,  6.7407e-01, -1.6997e+00, -2.9356e-01,
          3.5558e-01,  1.3046e+00,  1.1113e+00,  2.3272e+00, -7.2414e-01,
          4.2781e-01,  9.0968e-01,  7.1609e-02,  8.9226e-02,  1.0896e+00,
         -1.9570e-01, -2.1760e+00,  3.5992e-01,  9.5555e-02,  4.5340e-01,
         -1.3424e-01, -4.7140e-01, -4.8251e-02,  8.2220e-02, -1.5440e-01,
         -2.3073e-01, -9.6305e-02,  4.3263e-04, -4.8755e-01,  5.1414e-01,
         -1.6458e-01, -9.2600e-03,  1.7033e-02,  5.7738e-02,  1.6878e-02,
         -1.1455e-02,  8.8741e-02, -1.5466e-01,  1.0322e-01, -3.6191e-01,
         -1.1960e-01,  1.3095e+00,  4.5756e-02, -3.8242e-01, -5.1174e-01,
         -2.6822e-01,  5.2733e-01,  1.6571e+00,  2.3901e-01, -8.0483e-01,
         -8.2076e-01,  1.5510e-01, -6.6028e-01,  1.7619e-01,  5.3340e-02,
         -5.4988e-01, -3.4259e-01,  3.8331e-01, -2.9075e-01,  5.5929e-01,
         -2.2227e-02,  2.7211e-01, -5.3357e-01,  9.7269e-02, -4.1890e-01,
         -2.3079e-01, -7.6382e-01, -4.4736e-02,  1.2354e-01,  2.2648e-01,
          9.7165e-02,  6.1679e-01]], device='cuda:0') tensor(1.9622, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
303000 特征值优化 tensor(2.2196, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6861, -0.5914,  1.1407, -1.3760, -0.0125,  0.2728,  2.1836,  0.6436,
          1.0878, -1.0930,  0.3068,  1.2169, -0.0095, -0.0221,  0.5697, -0.1612,
         -1.2208,  0.3212,  0.0626,  0.3101, -0.1829, -0.3881, -0.0143, -0.0063,
         -0.0907, -0.1634, -0.0857,  0.1701, -0.1278,  0.4099, -0.1148, -0.0120,
         -0.0107,  0.0248, -0.0246,  0.0177, -0.1348, -0.0491,  0.1760, -0.4342,
         -0.0410,  1.0141,  0.0119, -0.2645, -0.3940, -0.3148,  0.6077,  1.1939,
          0.2466, -0.6075, -0.9075,  0.2390, -0.4540,  0.1074,  0.0063, -0.1196,
         -0.2663,  0.2024, -0.0309,  0.5976, -0.7128,  0.2567, -0.3244,  0.1421,
         -0.2259,  0.2755, -0.4039, -0.2449, -0.3518,  0.2068,  0.3107,  0.7901]],
       device='cuda:0') tensor(1.4679, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
304000 特征值优化 tensor(13.2856, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.8433, -1.7668,  0.0755,  2.7294, -1.2935,  0.2894,  1.0274, -0.1433,
         -0.8699, -0.5807, -0.6193,  0.6591,  0.1526,  0.0874,  0.3896, -0.5131,
          1.9981,  0.8589, -1.0598, -1.8806, -0.1274, -0.8096,  0.4073,  1.1925,
          0.3221,  0.5433,  0.0264,  0.4692, -0.3498,  0.6572, -1.3637, -1.2425,
         -0.3666,  0.7935, -0.1983,  0.4760, -1.8132, -0.7684, -0.9250,  0.0426,
          0.5204,  0.3975,  1.3406, -0.7604, -0.8825,  0.3397, -0.5298, -0.0894,
          0.8211, -1.8874, -2.1492, -0.8178,  1.5674, -0.0218,  0.8708,  0.2792,
         -1.0806, -0.0845, -0.7389,  1.2261,  1.8081,  1.1302,  1.9039, -0.2389,
         -1.2400,  0.6503,  0.9407, -0.1692, -0.7472,  0.5919,  0.1969,  1.4381]],
       device='cuda:0') tensor(7.6288, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
305000 特征值优化 tensor(3.3970, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.6762e-01, -7.6230e-01,  8.0606e-01,  1.8274e+00, -4.2106e-01,
          6.2077e-01,  1.8688e+00, -2.7329e-01, -2.4341e-01, -5.8123e-01,
          1.1410e-01,  1.2467e+00,  1.1201e-01, -7.8576e-02, -9.7160e-03,
          1.9857e-01,  9.5737e-01,  6.4571e-02, -1.4255e-01, -8.0723e-01,
          7.4927e-02, -1.7625e-01,  3.0809e-01,  2.3680e-01,  5.0849e-02,
         -1.5757e-02, -6.3344e-02, -9.3601e-03, -2.4222e-01,  1.6448e-01,
         -4.1372e-01, -6.6885e-01,  1.4136e-01,  3.4174e-01,  7.7684e-03,
         -6.8300e-04, -9.3367e-01, -1.3163e-01, -1.8614e-01, -3.2780e-02,
         -6.7510e-04,  3.5678e-01,  1.5954e+00, -9.2969e-01, -9.2051e-01,
          7.1728e-01, -4.4867e-01,  3.3917e-01,  9.9532e-01, -1.3466e+00,
         -1.5038e+00,  3.7851e-02,  1.6737e+00, -6.3216e-01,  6.3577e-01,
          1.8951e-01, -6.3157e-01,  2.9933e-01, -1.4756e-01,  2.7006e-01,
          1.6110e+00,  3.6420e-01,  1.0326e+00, -1.9109e-01, -5.4149e-01,
          7.2611e-02,  3.4375e-01, -7.5957e-02, -1.9787e-01,  1.5957e-01,
         -3.9830e-01,  6.7448e-01]], device='cuda:0') tensor(2.2450, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
306000 特征值优化 tensor(2.1427, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.3198e-01, -5.3691e-01,  9.6021e-01,  1.5546e+00, -3.1124e-01,
         -9.2782e-02,  2.1365e+00, -1.8640e-01, -1.9098e-01, -2.1483e-01,
          4.5560e-02,  7.2363e-01,  9.2004e-02,  2.8547e-02, -1.4394e-01,
          2.5569e-01,  2.6083e-01, -8.3698e-03,  1.3849e-02, -2.4644e-01,
          1.1077e-01, -6.4984e-02,  1.1659e-01,  2.2567e-01,  3.1956e-02,
         -9.2622e-02, -2.2939e-01, -1.3723e-01, -3.9577e-01,  9.4648e-02,
         -1.2408e-01, -6.0052e-01,  1.5278e-01,  2.0951e-01,  2.4481e-03,
          4.3660e-03, -5.6364e-01, -9.7052e-04, -1.0271e-01, -5.9265e-03,
         -1.6986e-02,  3.8737e-02,  1.0025e+00, -6.0865e-01, -6.0952e-01,
          1.2124e+00, -7.0026e-01,  3.9456e-01,  8.0448e-01, -1.1920e+00,
         -1.3094e+00,  1.7750e-01,  1.0875e+00, -6.3127e-01,  6.8215e-01,
          2.0304e-01, -5.8116e-01,  1.3125e-01, -3.1419e-01, -2.5003e-02,
          1.0890e+00,  2.4778e-01,  6.5705e-01, -2.0738e-01, -2.5648e-01,
          6.2346e-02,  1.1762e-01, -8.8301e-02, -5.6400e-02,  9.1157e-02,
         -3.9766e-01,  2.6950e-01]], device='cuda:0') tensor(1.3545, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
307000 特征值优化 tensor(14.3385, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.5384, -0.6477, -0.6734,  0.7979,  0.5150, -1.2526,  0.6419, -0.0282,
         -0.0326, -0.3101, -1.3604, -0.7812, -1.2498, -0.1841, -1.2458,  4.0399,
          0.5135, -0.3896,  0.1866,  1.2999, -0.0479, -0.0567, -0.3706,  0.8320,
          1.2406, -0.0977, -0.3083,  0.8018,  1.4174, -0.4949,  0.0771, -0.2426,
         -0.5415, -0.0502, -0.9136,  0.3293,  0.3105,  0.4485, -1.1916, -0.2749,
         -0.3675, -0.5977,  1.5120,  0.0283,  1.4442, -0.2945,  0.2506,  0.5750,
         -1.8848,  0.3032, -0.2162, -0.1675,  0.0709, -0.2041,  0.6827, -0.4477,
          0.4372,  0.6444,  0.6201, -0.0502,  0.6089, -1.2234,  0.3621,  1.3300,
          0.0955,  0.3057, -0.1804,  0.3984, -0.2212,  0.9551,  0.3593, -1.1881]],
       device='cuda:0') tensor(8.0139, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
308000 特征值优化 tensor(4.5439, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.6313, -0.4350, -0.1412,  0.4343,  0.2709, -0.2937,  1.6294,  0.5755,
          0.7293, -0.0091, -0.5400, -0.8442, -0.3673,  0.0379, -0.3677,  2.9829,
          0.0994, -0.0275,  0.0491,  0.5833,  0.1022,  0.1289,  0.0059, -0.0106,
          0.1910, -0.0148,  0.0668,  0.0039,  0.5711, -0.1214,  0.0353, -0.3995,
         -0.1436,  0.0331, -0.0060,  0.0559,  0.1657,  0.0741, -0.5305, -0.0875,
          0.0745, -0.0646,  1.7558, -0.8602,  0.5737, -0.0640, -0.0767,  0.6694,
         -1.5061,  0.4087, -0.2616,  0.1373, -0.1458,  0.0175,  0.0334,  0.1055,
         -0.1081,  0.1482, -0.0074,  0.0059,  0.7163, -1.1103, -0.5236,  0.6070,
         -0.0300,  0.4694,  0.0135, -0.0597, -0.0964,  0.1625,  0.1921, -0.1363]],
       device='cuda:0') tensor(1.7923, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
309000 特征值优化 tensor(2.9391, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.0096e-01, -5.9612e-01, -7.0045e-02,  1.1425e-01,  9.5238e-02,
          5.0431e-02,  2.5027e+00,  4.9092e-01,  6.5642e-01, -1.1527e-01,
         -2.0799e-01, -3.4520e-01, -1.2118e-01, -5.7658e-02,  1.3891e-02,
          1.9715e+00,  2.5886e-01, -8.4429e-02,  7.8074e-02,  5.0959e-01,
          4.3901e-02,  1.2759e-01, -4.0408e-02,  2.1871e-02, -5.9229e-02,
         -1.1042e-01,  7.2337e-03,  8.7993e-03,  3.4302e-01, -1.4400e-01,
          2.5497e-02, -1.1693e-01, -6.0902e-02,  2.5251e-02,  7.9187e-03,
          2.6419e-02,  1.3582e-01, -4.2573e-03, -3.0027e-01, -7.6759e-02,
         -5.0061e-03, -7.0092e-02,  1.2800e+00, -1.0529e+00,  3.4584e-01,
         -4.1058e-02,  1.1698e-01,  1.1674e-01, -9.4860e-01,  5.6329e-01,
         -9.7081e-02,  1.6876e-01, -2.0723e-01,  1.7605e-01, -3.4709e-02,
          3.7727e-02, -1.8351e-01,  1.7881e-01, -2.6954e-02,  1.7251e-02,
          3.0502e-01, -1.1797e+00, -6.4824e-01,  4.5525e-01, -4.6649e-01,
          3.8697e-01,  1.6499e-02, -4.4792e-02, -1.4955e-01,  7.1710e-02,
         -2.5336e-02,  1.6517e-03]], device='cuda:0') tensor(2.0444, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
310000 特征值优化 tensor(2.2677, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0260e-01, -8.9258e-01,  1.2720e-02,  5.0961e-02,  2.3605e-01,
          2.3699e-01,  3.1550e+00,  5.2245e-01,  5.3545e-01, -1.3185e-01,
         -4.0002e-02, -3.1479e-01, -6.0600e-02, -4.5483e-02, -2.5804e-02,
          1.1648e+00,  3.2467e-01,  1.9097e-02, -5.5488e-02,  4.1998e-01,
         -2.4927e-02,  1.1556e-01, -5.4410e-02,  3.2065e-02, -6.0495e-02,
         -1.0257e-01, -3.7176e-02,  1.8394e-02,  2.1495e-01, -1.3410e-01,
          2.5862e-02, -5.5583e-02, -3.0818e-02,  2.6818e-02, -1.4281e-02,
          9.5927e-03,  2.1682e-01, -4.7371e-02, -2.3570e-01, -3.7266e-02,
          1.5727e-03, -5.1545e-02,  1.0048e+00, -1.0454e+00,  2.3072e-01,
         -7.1957e-02,  3.3451e-01, -1.5166e-01, -6.4810e-01,  5.2744e-01,
          1.5125e-01,  8.3611e-02, -2.1440e-01,  1.9126e-01, -1.2311e-03,
          1.6933e-02, -2.1477e-01,  1.9023e-01, -6.2896e-03, -1.2246e-03,
          6.8972e-03, -1.0580e+00, -6.5034e-01,  3.9512e-01, -4.4641e-01,
          2.9486e-01, -9.2610e-02, -2.7924e-02, -2.0344e-01,  9.7888e-02,
          4.6108e-02,  3.4343e-02]], device='cuda:0') tensor(0.9662, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
311000 特征值优化 tensor(2.0915, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.4657e-01, -1.0541e+00, -7.7534e-03,  1.9979e-02,  2.6188e-01,
          2.3559e-01,  3.3990e+00,  4.7489e-01,  2.8421e-01, -6.2639e-02,
         -1.6694e-02, -4.1683e-01, -7.6483e-02,  5.1788e-02, -1.4450e-02,
          7.8479e-01,  6.2351e-01, -1.5898e-02,  9.6871e-03,  2.1272e-01,
         -4.3685e-02,  1.1637e-01, -1.3220e-01,  3.9686e-02, -1.8922e-01,
         -2.1212e-01,  1.7819e-02, -6.1301e-02,  1.9183e-01, -1.3449e-01,
          2.7199e-02, -6.1176e-02, -3.6414e-02,  2.6677e-02, -4.4919e-02,
          6.6202e-04,  2.8765e-01, -6.9529e-02, -1.7527e-01, -4.3846e-02,
         -1.0365e-03, -4.9593e-02,  8.4351e-01, -9.2870e-01,  1.4957e-01,
         -2.5386e-01,  5.4119e-01, -2.0907e-01, -5.2660e-01,  4.5425e-01,
          1.4874e-01,  8.9104e-02, -2.3180e-01,  1.8684e-01, -3.9220e-02,
          1.2922e-02, -2.3249e-01,  1.9485e-01, -1.8409e-03,  4.4246e-04,
          2.0082e-02, -9.8630e-01, -6.5071e-01,  3.6695e-01, -4.1853e-01,
          2.0763e-01, -7.6231e-02, -3.3934e-02, -2.2931e-01,  1.1262e-01,
          1.3321e-01,  2.2023e-02]], device='cuda:0') tensor(0.9458, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
312000 特征值优化 tensor(4.6514, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1451e+00, -8.1539e-02,  1.1099e+00, -6.8649e-01, -6.9017e-01,
          5.6463e-01,  1.1535e+00, -9.1923e-01,  5.9390e-02, -8.6627e-02,
          6.9443e-01,  1.3953e+00, -5.9934e-01,  1.0165e-02,  3.3815e-03,
          1.9443e-01, -1.4786e-01, -1.0963e-01, -2.4396e-01, -6.5211e-01,
          7.5341e-01,  7.0780e-01,  1.8075e-01, -3.5701e-02,  7.2770e-01,
          6.4330e-02, -2.8806e-01, -1.4590e-01, -3.9558e-01, -7.0390e-01,
         -1.2148e+00, -1.1750e-02, -2.5374e-01,  1.4495e-01, -4.9504e-02,
          8.2399e-02,  2.7965e-01, -3.6876e-01, -4.1799e-01, -2.5191e-02,
          2.4554e-01,  5.1606e-01,  4.9613e-01, -5.5371e-01,  3.6652e-01,
         -8.9583e-02, -3.9359e-01,  9.3393e-01, -2.6673e-01,  1.5345e-01,
          6.4998e-01, -1.1596e+00,  1.4170e+00,  8.5682e-02, -4.3948e-01,
          7.5387e-01, -9.2500e-01, -6.5750e-01, -1.0474e-04,  2.4265e-01,
          2.2481e-01,  2.2331e-01, -3.6093e-01, -1.3991e-01, -8.7498e-02,
          2.9340e-01,  4.5296e-02,  5.8983e-03,  1.2539e-01,  2.6911e-01,
         -2.1161e-01,  7.0600e-01]], device='cuda:0') tensor(2.0115, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
313000 特征值优化 tensor(2.2118, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3315, -0.5191,  1.2216, -0.9086,  0.1000,  0.5715,  0.3947, -0.2996,
          0.2175, -0.3167,  0.4258,  0.9432, -0.3294,  0.0123, -0.0246,  0.0323,
         -0.0448, -0.0525, -0.0608, -0.4741,  0.3652,  0.5401,  0.2131, -0.0056,
          0.2434,  0.0643, -0.0735, -0.2361, -0.2669, -0.5505, -0.6575,  0.0776,
          0.0050,  0.2091,  0.0479, -0.0017,  0.0281, -0.0638, -0.0203, -0.0092,
          0.0543,  0.1017,  0.4688, -0.5597,  0.4030, -0.3035, -0.0710,  0.8896,
         -0.5140,  0.6777,  0.6023, -0.8641,  1.2588,  0.1148, -0.0035,  0.2372,
         -0.7927, -0.1415,  0.0796,  0.3478, -0.3508,  0.2458,  0.0554, -0.0807,
         -0.1883,  0.1332,  0.0438, -0.0522, -0.2275,  0.2233, -0.5177,  0.3546]],
       device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
314000 特征值优化 tensor(2.1069, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3896, -0.5793,  1.1981, -0.8143,  0.1513,  0.3493,  0.3435, -0.0918,
          0.3462, -0.2021,  0.4250,  0.6701, -0.2780,  0.0074, -0.0219,  0.0342,
          0.0273,  0.0176, -0.0592, -0.4500,  0.3122,  0.5194,  0.1420, -0.0788,
          0.1307,  0.0195,  0.0201, -0.2448, -0.2167, -0.5356, -0.5891, -0.0134,
          0.0146,  0.2093,  0.0297,  0.0370, -0.0138, -0.0229, -0.0210, -0.0220,
          0.0190,  0.0209,  0.4146, -0.5359,  0.2994, -0.2601,  0.0250,  0.8744,
         -0.5358,  0.6815,  0.6307, -0.8234,  0.8942,  0.1991, -0.0434,  0.0096,
         -0.8323, -0.0218, -0.0591,  0.2671, -0.2364,  0.1599,  0.0262, -0.0306,
         -0.0479,  0.0518,  0.0945, -0.0696, -0.1479,  0.1447, -0.3404,  0.2085]],
       device='cuda:0') tensor(1.1855, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
315000 特征值优化 tensor(11.1074, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.0504,  0.4458,  0.6140, -0.2800,  0.6695,  0.4646,  2.0344,  0.5485,
         -0.6172, -0.1031,  0.8278,  1.5330,  0.3284,  0.1695,  1.2638,  1.1615,
         -1.0183, -0.7873,  1.0917,  0.0094, -1.1229, -1.1561,  0.0474, -0.0720,
          0.0586, -0.0287, -0.0390,  0.9431, -2.3082,  0.2216, -0.4196, -0.7243,
          0.2496, -0.5265,  0.5501,  0.1241, -0.0738,  0.3267,  0.2280, -0.2266,
         -0.6653,  0.4429, -0.3659,  0.8409,  1.3171, -0.2006, -0.2849,  0.9993,
         -1.4021, -1.1175, -1.6112,  0.4579, -0.0994, -0.7323,  0.8934,  0.1112,
          0.0161, -0.3320, -1.7790,  0.6712,  0.9156, -1.1240,  0.1138, -0.0956,
          1.2805, -0.6386, -0.0783, -0.0044,  0.0040,  0.2717, -1.2315,  0.9083]],
       device='cuda:0') tensor(5.1425, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
316000 特征值优化 tensor(2.4401, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.6449e-01,  1.2447e-01,  1.4794e+00,  4.0146e-01,  9.8195e-01,
         -6.1512e-02,  2.4923e+00,  7.4659e-01, -7.8650e-01,  9.3788e-02,
          9.4789e-01,  6.2655e-01,  1.8000e-01,  1.3132e-02,  3.6831e-01,
          3.8834e-01, -9.8671e-02,  1.0553e-02,  3.3572e-01,  2.6549e-02,
         -4.0120e-01, -3.0426e-01,  9.9791e-04, -3.0351e-02, -1.7182e-01,
          5.7390e-02, -5.5536e-04,  1.0490e-01, -1.4664e+00,  1.5859e-01,
         -2.2566e-02, -6.5283e-01,  3.3619e-02, -1.6647e-02,  4.4895e-02,
          5.9609e-03, -1.2769e-01,  7.2143e-02,  1.9658e-01, -5.9823e-02,
         -6.2294e-02,  8.1927e-02,  9.4420e-02,  2.1242e-01,  5.8509e-01,
         -6.4445e-02,  2.1236e-02,  1.8340e+00, -1.3774e+00, -1.0938e+00,
         -1.0625e+00,  8.7251e-02,  1.9002e-01, -3.3860e-01,  6.8274e-01,
         -4.7023e-02,  3.0743e-02, -9.8322e-04, -5.1527e-01,  1.0791e-01,
          1.2226e+00, -8.2146e-01, -3.9000e-01, -2.0032e-01,  1.6413e-01,
         -1.7771e-01,  4.8873e-02, -3.2378e-02, -7.1104e-01,  2.4147e-01,
         -5.1130e-01,  3.2275e-01]], device='cuda:0') tensor(1.6562, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
317000 特征值优化 tensor(2.1321, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.2034e-01,  1.9306e-01,  1.6960e+00,  8.3926e-02,  9.5108e-01,
          7.1232e-02,  2.5004e+00,  9.4693e-01, -6.2712e-01,  1.6221e-01,
          8.3434e-01,  1.1205e-01,  2.0729e-01, -7.1860e-02,  1.9581e-01,
          2.9159e-01, -5.4996e-02, -3.4130e-02,  2.2896e-01, -1.6312e-02,
         -2.9725e-01, -1.8883e-01, -7.4317e-03,  2.1596e-02, -2.0420e-01,
          5.7354e-02,  3.5634e-02,  9.2802e-02, -1.2905e+00,  3.5902e-02,
         -1.5137e-02, -6.4460e-01,  1.4463e-02, -2.0714e-02,  2.2182e-05,
          3.0225e-03, -1.0163e-01,  2.9861e-02,  2.0657e-01, -9.5352e-02,
         -3.0723e-02,  2.5179e-02, -4.9682e-02,  7.7614e-02,  4.1547e-01,
         -2.1988e-01, -1.7536e-01,  1.8209e+00, -1.3455e+00, -8.7249e-01,
         -1.3095e+00,  1.6268e-01,  1.8864e-01, -2.9918e-01,  5.9786e-01,
          7.4681e-02, -4.9317e-02,  4.8679e-02, -2.8592e-01,  9.1425e-02,
          1.2568e+00, -8.1588e-01, -2.8159e-01, -1.5909e-01, -3.0203e-01,
          1.6616e-02,  1.5314e-01, -2.9429e-02, -6.1051e-01,  1.5433e-01,
         -2.7449e-01,  1.5800e-01]], device='cuda:0') tensor(0.9354, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
318000 特征值优化 tensor(2.0837, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2683,  0.1834,  1.8270, -0.1168,  0.8904,  0.1577,  2.5300,  0.8965,
         -0.5771,  0.2167,  0.7880,  0.0848,  0.1434, -0.0201,  0.1151,  0.2849,
         -0.0378, -0.0516,  0.2476, -0.0076, -0.2447, -0.1550,  0.1009,  0.0448,
         -0.1877, -0.0162,  0.0093,  0.0702, -1.1859,  0.0033, -0.0152, -0.6184,
          0.0292, -0.0169,  0.0185, -0.0448, -0.1323, -0.0096,  0.1750, -0.1160,
         -0.0281,  0.0516, -0.0130,  0.0317,  0.3932, -0.1985, -0.1819,  1.7615,
         -1.3359, -0.7104, -1.5709,  0.2637,  0.2008, -0.2849,  0.5437,  0.0901,
         -0.0555,  0.0554, -0.2962,  0.0787,  1.3312, -0.7985, -0.2565, -0.1460,
         -0.3865,  0.0645,  0.1179,  0.0167, -0.5192,  0.1098, -0.2053,  0.1231]],
       device='cuda:0') tensor(1.3353, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
319000 特征值优化 tensor(4.7098, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.6864e-01, -2.7821e-01,  2.5156e+00, -4.6784e-01,  2.2587e-01,
          9.9961e-02,  7.4583e-01, -5.1593e-01, -1.3384e-01, -1.1735e-01,
         -6.3738e-01,  5.5999e-01,  1.1014e-02,  3.0700e-01, -3.5804e-02,
          3.1833e-01,  2.2459e-02,  1.8324e-01,  4.9000e-02, -2.4170e-01,
         -9.2467e-02, -7.4001e-01,  2.2247e-01,  5.4845e-01, -8.6951e-02,
         -2.7769e-01, -3.4760e-01,  6.1017e-01,  1.4143e-02,  1.0409e+00,
         -4.9626e-01, -2.7151e-01,  3.8986e-01,  4.4059e-01,  2.3772e-02,
         -1.4548e-01,  2.5679e-01, -4.6998e-01, -4.9231e-02, -2.7315e-02,
         -4.2569e-02,  1.8882e-01,  2.3582e-01,  4.9486e-02, -4.8652e-01,
          8.1288e-01, -4.6932e-01,  1.6294e+00,  5.0526e-01, -9.9518e-01,
         -1.6725e+00,  1.3787e+00,  3.1977e-01,  4.9669e-01, -6.4467e-01,
          1.4632e-01,  5.7476e-01,  4.6893e-01,  2.4366e-04, -6.6750e-02,
          1.2181e+00, -6.5547e-01,  5.0920e-01, -1.7583e+00,  1.7757e-02,
          1.2264e-01,  8.1614e-02, -2.3462e-02,  1.2171e+00, -1.1798e+00,
         -1.1052e+00, -1.9042e-01]], device='cuda:0') tensor(2.4162, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
320000 特征值优化 tensor(2.1620, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2953e-01, -1.3349e-01,  2.7650e+00, -8.3891e-01,  5.0051e-01,
          1.5997e-01,  1.1093e+00,  1.5313e-01,  6.2407e-02, -1.8214e-01,
         -4.2725e-01,  2.3026e-02,  1.9080e-03,  1.2941e-02, -1.3421e-02,
          6.7352e-02, -1.0855e-02,  2.3739e-02, -2.0409e-02,  2.7819e-03,
         -2.1325e-02, -4.5058e-01,  1.4984e-01,  2.5355e-01, -2.7627e-02,
         -1.4438e-01, -1.4006e-01,  5.0892e-01, -1.1510e-01,  6.5100e-01,
         -1.5050e-01, -3.2049e-01,  2.7256e-01,  2.6845e-02,  1.3927e-02,
         -2.3910e-02,  4.4618e-01, -7.4816e-02, -2.6336e-02,  9.4645e-04,
         -1.9219e-03,  1.9976e-01, -1.1122e-01,  9.5657e-02,  9.4401e-02,
          3.5189e-01, -1.9847e-01,  1.7679e+00,  9.0304e-01, -1.2837e+00,
         -2.0133e+00,  9.8431e-01,  1.2003e-01,  9.2060e-02, -4.5524e-01,
         -3.2942e-01, -9.5358e-02,  1.2763e-01,  6.9609e-02, -3.0983e-01,
          1.5481e+00, -5.9590e-01,  1.1511e+00, -1.2332e+00, -2.7601e-01,
          1.5884e-01,  6.5695e-02,  9.4560e-03,  1.2827e+00, -8.4061e-01,
         -8.9824e-01,  5.0198e-02]], device='cuda:0') tensor(1.0000, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
321000 特征值优化 tensor(23.0591, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2500,  0.1049,  0.6418, -0.6660, -0.0653, -1.0118, -0.1879,  0.7013,
          0.1481,  2.0238,  1.5056,  0.3740, -1.6657, -1.0537, -0.4919,  0.9597,
          0.6801,  1.0277, -2.7087, -0.6236, -1.4961, -0.4528,  1.9657, -0.6666,
          0.6343, -0.5530,  0.2164, -0.5825, -1.5794, -0.9729,  0.7907,  0.1918,
          1.1809, -0.1836, -0.3064,  0.5446, -0.3019,  1.4251, -0.7570,  1.5339,
          1.0547,  1.8850, -0.7971, -0.8713, -0.1531, -0.0357, -0.0241, -0.3335,
          0.2410,  1.8796, -0.8667,  2.2998,  0.4428, -0.8003, -0.0148, -0.9817,
          0.0174,  1.1470, -0.0445,  1.0274,  0.8792,  0.9892, -0.3805,  0.5553,
          0.6498,  1.0872,  0.1139, -1.9695, -0.0141, -1.7517,  0.7534,  1.1436]],
       device='cuda:0') tensor(12.1908, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
322000 特征值优化 tensor(4.8226, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.8846e-01,  1.0270e+00,  1.6049e+00,  1.0041e-01, -6.9158e-02,
         -1.5269e-01,  2.0628e-01,  1.1820e+00,  1.0712e+00,  6.6683e-01,
          2.6499e+00,  1.4045e+00, -6.7038e-01, -1.4712e-01, -7.2283e-02,
          3.5834e-02,  2.0695e-02,  4.5648e-02, -1.4823e+00, -1.0315e-02,
         -6.3409e-01, -4.0471e-01,  9.7876e-01, -4.0855e-01,  2.0075e-03,
         -1.5958e-01,  2.2625e-01, -7.9638e-02, -6.6161e-01, -4.0698e-01,
          1.2205e-01, -5.1552e-02,  5.6185e-01,  8.6183e-02,  3.3971e-02,
         -6.1913e-02,  2.4828e-01,  6.0662e-01, -4.7795e-01,  6.8130e-01,
          5.5655e-01,  1.0202e+00,  8.3232e-02,  1.2853e-02,  7.0208e-01,
          5.4798e-01,  4.2572e-01,  6.5454e-01, -6.3769e-01,  1.0060e+00,
         -1.1905e-01,  1.2646e+00,  4.8583e-01, -3.0121e-01, -8.4723e-02,
         -2.7297e-02, -2.7094e-01,  2.3993e-01,  3.3477e-01,  5.1937e-01,
          3.4909e-01,  3.8472e-01, -4.4694e-02,  5.7365e-01,  7.3939e-01,
          1.4857e-01,  9.6688e-01, -9.9364e-01,  8.0075e-01, -1.2434e+00,
          1.0787e+00,  6.9804e-01]], device='cuda:0') tensor(3.7318, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
323000 特征值优化 tensor(2.2678, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1168,  1.1175,  1.8214,  0.3237, -0.0470,  0.2499,  0.4936,  1.1986,
          1.2701,  0.5224,  2.8989,  1.5827, -0.4143, -0.0064, -0.0235, -0.2005,
          0.1077, -0.3118, -0.7681, -0.0418, -0.3913, -0.3423,  0.1634, -0.1108,
         -0.1559, -0.1118,  0.2511,  0.0999, -0.4748, -0.3654, -0.0141, -0.0495,
          0.3156,  0.0293,  0.0903, -0.1320,  0.1707,  0.3832, -0.2594,  0.4337,
          0.4645,  0.8663, -0.2013,  0.1215,  0.6504, -0.0410,  0.2768,  0.7128,
         -0.8520,  0.8282, -0.2045,  0.8209, -0.0398,  0.0497, -0.0147, -0.0551,
         -0.2887,  0.2043,  0.6981,  0.7647, -0.2582,  0.2725, -0.2613,  0.2621,
          1.2737, -0.2092,  1.1117, -0.7031, -0.2703, -0.4048,  0.9881,  0.3242]],
       device='cuda:0') tensor(1.4781, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
324000 特征值优化 tensor(2.1296, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2171e+00,  9.9719e-01,  1.7705e+00,  4.6727e-01,  2.1222e-01,
          4.3474e-01,  5.8387e-01,  1.2069e+00,  1.2183e+00,  7.7003e-01,
          2.7063e+00,  1.4882e+00, -3.4105e-01,  1.3012e-02, -1.5884e-02,
         -1.5596e-01,  1.1947e-01, -4.3405e-01, -5.4241e-01, -3.7322e-02,
         -3.1821e-01, -2.4001e-01,  2.8056e-02,  2.7493e-03, -2.4026e-01,
         -1.0116e-01,  2.1704e-01,  1.2422e-01, -5.1599e-01, -2.7387e-01,
         -2.0693e-02,  1.2569e-03,  7.1674e-02,  2.6593e-02,  9.4736e-02,
         -4.8682e-02,  1.3219e-01,  3.6226e-01, -6.0387e-02,  3.8463e-01,
          4.6015e-01,  8.5837e-01, -2.8501e-01,  2.1676e-01,  4.9791e-01,
         -1.5948e-01,  2.6073e-01,  6.5548e-01, -7.7726e-01,  8.2246e-01,
         -7.7928e-02,  5.9408e-01, -6.2894e-02,  6.4180e-02,  3.9720e-02,
          7.4125e-03, -2.0815e-01,  1.8344e-01,  6.7886e-01,  8.2497e-01,
         -3.7442e-01,  2.4769e-01, -4.4042e-01,  2.8173e-01,  1.0289e+00,
         -3.5248e-01,  1.1514e+00, -6.0819e-01, -8.4336e-01,  4.2487e-02,
          1.1502e+00,  2.3852e-01]], device='cuda:0') tensor(1.1929, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
325000 特征值优化 tensor(14.1578, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4177,  0.3594,  0.0839, -0.2021,  0.8026,  0.2840,  2.5966, -0.7157,
         -0.1874,  0.8879, -0.2232,  0.0084,  0.5568,  0.4939, -0.2564,  0.2659,
         -0.5088,  0.1420,  0.0628,  0.8715, -0.4485,  2.1980,  0.1058, -0.0107,
          0.2651,  1.6562,  0.2114,  0.0393,  0.4320,  1.3757,  0.3797,  0.2701,
         -0.8815,  0.9988,  0.8028, -0.8576, -1.0532, -0.4080,  0.2439, -0.3416,
         -0.9166, -0.3918, -1.1800, -1.0502, -0.6098,  1.4171, -0.1172, -0.3165,
          0.8784,  0.3438,  1.3016,  0.9444,  0.2421,  0.2838,  1.4894,  0.4275,
         -0.2281,  0.8460, -0.1531, -0.1132, -0.3911,  0.2535,  1.3516,  0.0946,
          0.9473, -1.8063, -0.0350, -0.3859,  0.0592,  1.4242, -0.6874,  1.0533]],
       device='cuda:0') tensor(8.3694, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
326000 特征值优化 tensor(3.5285, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7912, -0.5274,  1.1688,  0.6515,  0.3991,  0.7730,  2.3361, -0.2624,
          0.7236,  1.0141,  0.2835,  0.6533,  0.1754,  0.0120, -0.0193,  0.0383,
         -0.1483, -0.0439,  0.1372,  0.2879, -0.1967,  1.2213,  0.0736,  0.1258,
          0.1948,  0.5806, -0.1751,  0.0807, -0.0163,  0.6043, -0.0034, -0.0129,
         -0.0348,  0.4513,  0.4564, -0.2382, -0.8357, -0.2247, -0.1728, -0.0971,
         -0.5676, -0.1990, -0.5699, -0.5068, -0.3071,  0.6494,  0.2067,  0.4358,
          1.1590,  0.6103,  0.4873,  0.2096, -0.3827,  0.2112,  0.3958,  0.0410,
          0.2401,  0.2078, -0.5435, -0.3359, -0.0809,  0.7345,  0.5988, -0.0089,
          1.3642, -1.1071,  0.3335, -0.2398,  0.4877,  0.5007, -0.1120,  0.3498]],
       device='cuda:0') tensor(1.4532, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
327000 特征值优化 tensor(2.1285, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3800, -0.3705,  1.4928,  0.8275,  0.2305,  0.7370,  2.1381,  0.0628,
          0.9414,  0.9755,  0.3917,  0.6708,  0.0946,  0.0076, -0.0604, -0.0848,
         -0.1112, -0.0759,  0.1051, -0.0313, -0.1127,  0.9151,  0.0353,  0.0067,
          0.0134,  0.2948, -0.2204,  0.0289, -0.0656,  0.4627,  0.0269, -0.0575,
          0.0290,  0.1214,  0.4138, -0.1906, -0.6893, -0.1460, -0.3840, -0.1654,
         -0.2170, -0.1434, -0.5871, -0.1650,  0.1928,  0.6618, -0.0270,  0.5533,
          1.0512,  0.5707,  0.2249,  0.1503, -0.1915,  0.1753,  0.0178, -0.0311,
          0.1637,  0.0370, -0.5198, -0.2997, -0.3643,  0.7065,  0.1239, -0.0493,
          1.2673, -0.6654,  0.3767, -0.1028, -0.1914,  0.2204, -0.1466,  0.1842]],
       device='cuda:0') tensor(1.5358, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
328000 特征值优化 tensor(7.2154, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2828, -1.5266,  0.4767,  1.0309, -0.4919, -0.2848,  2.4743,  1.4082,
          1.1284,  0.1371,  0.2192, -0.8523,  0.2377, -0.0380, -0.1200, -0.3650,
         -0.5784, -0.0792, -0.0843,  0.2872,  0.0116,  0.0099, -0.9014,  0.3773,
          0.9486, -0.6590, -0.1954, -0.0165,  0.4171, -0.0275,  0.2330,  0.7616,
         -0.3926, -0.4693,  0.2541,  0.6978, -0.0118, -1.2696,  0.7311,  0.4745,
         -1.1338,  0.1329,  0.3992,  0.0445, -0.7533,  1.2177, -0.2041, -1.0638,
         -0.4214,  1.0482, -0.8308,  0.2090,  1.1808, -0.3388,  0.7250,  0.2356,
          1.2717,  0.9646, -0.5585, -0.5164,  0.9787, -0.2815,  0.8525,  0.1817,
         -0.0605,  1.3938,  1.2248,  0.8824,  1.3385,  0.2371, -0.5782, -0.7060]],
       device='cuda:0') tensor(4.5206, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
329000 特征值优化 tensor(2.1796, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0206e-01, -4.6109e-01,  7.5272e-01,  9.6369e-01, -2.3367e-01,
          3.2480e-01,  2.9382e+00,  1.9306e+00,  1.6628e+00,  2.7508e-01,
          8.1649e-01, -3.5028e-01,  3.3648e-02, -1.3826e-02, -4.3448e-03,
         -3.4186e-01, -3.3055e-01,  1.6885e-01, -1.0624e-01,  6.5730e-02,
          2.5599e-04, -3.2762e-02, -1.2647e-01, -9.3859e-02,  2.8680e-01,
         -2.0177e-01, -1.1915e-01, -1.6612e-01,  3.4451e-03, -1.0176e-02,
         -1.7111e-02,  2.7238e-01, -1.4503e-01, -4.5862e-01, -4.0725e-02,
          1.7936e-01, -1.4578e-01, -7.2902e-01,  7.1092e-01,  1.5799e-01,
         -4.8903e-01,  7.7061e-02,  3.6070e-01,  8.2176e-02, -3.9358e-01,
          9.6646e-01, -3.8210e-01, -7.4418e-01,  9.7309e-02,  3.0110e-01,
         -4.8799e-01,  3.8128e-02,  1.6286e-01, -5.4512e-02,  3.6051e-01,
          1.3941e-01,  7.0682e-01,  4.2131e-01, -8.3258e-01, -5.3934e-02,
          1.2551e+00,  7.7206e-02,  9.2903e-01,  2.2065e-02, -1.4350e-01,
          7.8847e-01,  7.5259e-01,  2.8314e-01,  4.1620e-01,  1.0891e-01,
         -1.4300e-01, -1.9745e-01]], device='cuda:0') tensor(0.7454, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
330000 特征值优化 tensor(10.6475, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1832,  0.0613,  1.6301, -0.3327,  0.2754,  2.0494,  1.7391, -0.6052,
          0.4262, -1.3828, -0.3192, -0.5732, -0.1391,  0.4046,  0.9323, -0.5566,
          1.1633, -0.8770, -0.0574, -0.0407,  0.2761, -0.3416,  0.1276,  0.0208,
          0.2990, -1.9583, -0.4229,  0.2567, -0.1309, -0.9921, -0.9082, -0.3111,
         -2.3004,  0.0236,  0.3535,  0.3260,  0.7653,  0.6333, -0.8706, -0.6247,
         -0.0095,  0.6827, -0.8871,  0.2699,  0.8855, -0.1380, -0.6393,  0.5478,
          1.2247, -0.3156,  0.9018,  0.1497,  0.7383, -0.2316,  0.3579,  1.0324,
         -0.5167,  0.2244,  0.5649, -0.4594,  0.0339,  0.4085,  0.3518,  0.1806,
          0.4376, -0.9440, -0.9810,  0.7747,  1.1035, -0.8806,  1.4937, -0.4946]],
       device='cuda:0') tensor(6.2854, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
331000 特征值优化 tensor(2.5129, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3753,  0.9066,  2.1091,  0.1768,  1.0873,  0.9172,  1.3337,  0.3794,
          1.2271, -0.5703,  0.5363, -0.0390, -0.0204,  0.1340,  0.2113, -0.2912,
          0.3853, -0.2377, -0.1146,  0.0116, -0.0050, -0.2248,  0.0518, -0.0142,
         -0.2246, -0.8875, -0.2832,  0.1222, -0.1277, -0.5538, -0.0079,  0.1285,
         -1.4282,  0.0503,  0.0759,  0.0500,  0.0569,  0.0797, -0.4404, -0.2721,
          0.1533,  0.3247, -0.8941,  0.0529,  0.4380, -0.3558, -0.0523,  0.3531,
          1.1727, -0.1682,  0.6569,  0.0232,  1.6741, -0.9979,  0.6910,  1.5215,
         -0.4205,  0.2838,  0.1489, -0.1013, -0.5158,  0.3388,  0.1671, -0.0048,
          1.0170, -0.3142, -0.8407,  0.7362,  1.9747, -1.6398,  1.3786, -0.6229]],
       device='cuda:0') tensor(1.4202, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
332000 特征值优化 tensor(2.2110, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1757e+00,  7.3071e-01,  1.9589e+00,  1.9949e-02,  1.1913e+00,
          5.4769e-01,  8.4411e-01,  6.4414e-01,  1.3832e+00, -2.9724e-01,
          8.0093e-01, -1.2249e-02, -2.2023e-02,  1.0593e-01,  1.5104e-01,
         -1.4519e-01,  1.6313e-01, -1.0290e-01, -1.5691e-01, -3.1532e-03,
         -1.3564e-03, -1.8910e-01,  8.8880e-02, -2.9535e-02, -2.2492e-01,
         -5.9755e-01, -2.2220e-01,  1.6622e-01, -9.1895e-02, -5.3112e-01,
          6.5744e-02,  1.9367e-01, -1.3129e+00, -2.1434e-03,  1.1246e-01,
          1.0209e-01,  1.7048e-02,  7.1432e-02, -3.8619e-01, -1.7964e-01,
          1.7761e-01,  2.0465e-01, -6.2046e-01,  5.3302e-02,  2.5500e-01,
         -3.0915e-01, -2.5841e-02,  2.6702e-01,  1.0760e+00,  7.6293e-02,
          3.9622e-01,  1.3665e-01,  1.6934e+00, -8.5885e-01,  7.7200e-01,
          1.5795e+00, -1.5288e-01,  1.2168e-01, -8.7165e-04, -2.4118e-02,
         -2.6183e-01,  1.7954e-01,  1.6996e-01, -1.1381e-01,  9.4519e-01,
         -4.0312e-01, -1.0356e+00,  6.9216e-01,  1.8274e+00, -1.5844e+00,
          1.1588e+00, -7.9571e-01]], device='cuda:0') tensor(1.0663, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
333000 特征值优化 tensor(2.1214, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.0601e-01,  3.1547e-01,  1.7971e+00, -1.4163e-01,  1.3171e+00,
          3.9666e-01,  5.1303e-01,  5.5859e-01,  1.4681e+00, -1.6915e-01,
          1.0712e+00, -4.1453e-02, -1.5546e-02,  8.1700e-02,  6.3276e-02,
         -2.1560e-03,  5.9109e-02, -4.6547e-02, -1.0576e-01, -5.0043e-02,
          7.1654e-03, -1.9312e-01,  7.6747e-02, -7.5842e-04, -2.6751e-01,
         -4.3764e-01, -5.8115e-02,  8.2714e-02, -8.9074e-02, -5.1412e-01,
          1.4790e-01,  2.3062e-01, -1.2213e+00, -2.1983e-02,  5.4039e-02,
          4.4178e-02,  4.3174e-03,  1.5556e-01, -3.6587e-01, -1.3542e-01,
          1.3239e-01,  1.5056e-01, -4.4438e-01,  6.2964e-02,  3.0294e-01,
         -1.5137e-01,  1.0455e-02,  2.2308e-01,  1.0161e+00,  1.6388e-01,
          4.3532e-01,  1.6037e-01,  1.5874e+00, -6.8749e-01,  8.3039e-01,
          1.4137e+00, -8.7710e-02,  7.1282e-02,  7.9292e-03, -3.7581e-02,
         -3.2016e-01,  1.2151e-01,  8.1782e-02, -1.9165e-01,  8.6219e-01,
         -4.6986e-01, -1.1494e+00,  6.8058e-01,  1.5106e+00, -1.5095e+00,
          1.2373e+00, -6.9435e-01]], device='cuda:0') tensor(1.2637, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
334000 特征值优化 tensor(12.2405, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.3335e-01,  3.2526e-01,  2.2935e+00,  2.4094e+00, -1.1317e+00,
         -2.9111e+00, -4.1772e-01,  8.6635e-01,  1.2176e+00,  1.4458e+00,
          8.0395e-03,  5.2420e-01,  4.5694e-01,  9.0064e-02,  6.5119e-01,
          4.7140e-01, -1.8258e+00, -1.7718e+00,  2.1535e-01, -1.7675e+00,
         -3.2209e-01,  1.3579e+00, -1.6538e-01,  3.1305e-01, -4.9656e-01,
          1.9206e-01, -7.3040e-01,  7.8462e-01, -9.7119e-01,  7.6652e-01,
         -2.9465e-01, -8.5081e-02, -7.4572e-01, -7.6508e-01,  5.0997e-01,
          3.8891e-01,  4.5071e-01,  4.5022e-01, -3.4759e-02, -1.1534e-01,
         -5.5899e-02,  2.1652e-01,  6.6120e-01, -1.6160e+00,  6.6808e-01,
         -7.1786e-01,  4.6689e-01, -7.7088e-01, -3.4055e-02,  1.1546e-01,
          2.4409e-01, -2.0340e-01,  1.2761e-01, -6.7862e-02,  2.4578e-01,
         -6.9569e-01, -1.3860e+00,  9.4554e-01,  3.6088e-01,  1.0804e+00,
         -1.8995e-01,  3.9934e-01,  1.1915e-01, -2.2432e-01,  4.5614e-01,
         -1.9764e-01, -6.9783e-01,  2.5641e-01,  2.6695e-01,  5.8060e-01,
          4.5021e-01, -2.0214e-03]], device='cuda:0') tensor(6.0347, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
335000 特征值优化 tensor(2.8402, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.5632e-01,  7.0081e-01,  2.7819e+00,  2.7467e+00, -3.4283e-01,
         -1.7688e+00,  1.1737e-01, -7.4766e-03,  6.8941e-01,  7.4578e-01,
          5.3042e-01, -9.1366e-02, -6.1815e-02, -1.3604e-02,  3.3040e-02,
          1.3619e-01, -8.1048e-01, -8.0781e-01, -2.6407e-02, -1.1880e+00,
          9.3401e-03,  8.0761e-01,  6.0932e-03, -1.5252e-02,  1.3308e-01,
         -9.5243e-02,  5.4796e-02,  9.9596e-02, -2.7198e-01,  6.0242e-01,
         -2.4049e-02, -7.6898e-04, -6.2930e-02, -1.1617e-01, -2.5615e-02,
          5.6664e-02, -7.1194e-02, -9.4977e-02, -2.1452e-01, -1.1043e-01,
         -7.3166e-02, -5.2537e-02,  1.2870e+00, -1.9588e+00,  2.0805e-01,
         -5.1259e-01,  1.5185e-01, -1.6275e-01,  2.0157e-01,  3.5216e-01,
          2.5090e-01,  3.2536e-01, -9.3448e-02,  8.0833e-02, -4.3798e-04,
         -3.9288e-03, -2.5622e-01,  2.2115e-01, -7.6289e-03,  1.3304e-01,
         -2.5791e-01,  1.8224e-01,  3.5725e-02,  8.0265e-02,  5.4737e-01,
          6.4460e-02, -5.9837e-01,  4.1405e-01, -3.2364e-01,  3.1103e-01,
          7.1307e-02,  2.4293e-02]], device='cuda:0') tensor(1.0377, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
336000 特征值优化 tensor(2.1369, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0098e+00,  5.9651e-01,  2.6463e+00,  3.3219e+00, -5.4771e-02,
         -1.5063e+00,  1.9205e-01, -3.2768e-01,  8.0327e-01,  5.0534e-01,
          4.7338e-01,  3.3091e-02, -2.5296e-02, -1.3293e-01,  4.2786e-02,
          7.8754e-02, -2.6788e-01, -2.8905e-01, -5.0783e-02, -1.0020e+00,
         -4.9827e-02,  7.8275e-01, -7.1079e-02,  1.1373e-01,  3.0450e-01,
         -2.7512e-01,  8.3649e-02,  1.2728e-01, -1.6506e-01,  5.3632e-01,
         -1.8012e-02, -1.1255e-02, -2.5422e-03, -1.1680e-01,  4.9933e-03,
         -1.5718e-03, -2.0023e-02, -3.1864e-02, -1.7656e-01, -1.0042e-01,
         -1.4030e-02, -6.3107e-02,  1.2866e+00, -1.8675e+00,  1.3052e-01,
         -6.1026e-01,  9.2035e-02, -1.1133e-01,  2.1351e-01,  4.9741e-01,
          2.6554e-01,  3.1882e-01, -4.7921e-02,  5.2737e-02,  3.6114e-02,
          2.7663e-02,  1.3790e-01,  1.4737e-01,  2.2909e-01,  5.2478e-02,
         -3.3023e-01,  1.4700e-01,  1.1191e-01, -2.3312e-02,  5.3424e-01,
          7.4562e-02, -2.4984e-01,  1.7177e-01, -3.8012e-01,  2.5250e-01,
          1.5615e-02,  6.2298e-02]], device='cuda:0') tensor(1.5241, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
337000 特征值优化 tensor(9.2055, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4704, -0.1186,  0.2157, -0.1061,  1.7242,  1.8866,  1.6069,  1.3305,
          0.1025, -1.1489,  2.2275, -0.7710,  0.4834, -1.6513,  0.7454,  0.0964,
          0.5191,  0.6025, -0.5126,  0.2057, -0.5990, -0.4722, -1.0649, -0.2957,
         -0.6730,  1.5670, -0.3307, -0.2662, -0.5101, -0.4413,  0.2544,  0.1563,
         -0.9878,  0.0342, -0.5551, -0.4705, -0.0583,  0.7840,  0.1653,  0.7926,
          0.1667, -0.5069,  0.8978,  0.8459,  0.8450,  0.6950, -1.8851,  0.4259,
          0.6121,  1.7723,  0.2259,  0.9911,  0.8465, -1.7056, -1.1350,  0.0869,
         -0.3973, -0.9619,  0.3660,  0.1223,  0.3610,  0.6902, -0.0076,  0.1457,
          0.5512,  0.1252,  0.1647, -0.3727,  0.9486, -0.9180,  0.5159,  0.2081]],
       device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
338000 特征值优化 tensor(2.6921, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4293, -0.9545,  0.4894,  0.3698,  2.2780,  1.6458,  1.4166,  1.1122,
          0.3035, -0.9424,  2.4537, -0.2364,  0.3226, -0.7023,  0.1347, -0.0415,
         -0.0230,  0.2372, -0.0881, -0.0104, -0.3464, -0.1268, -0.4199,  0.1353,
         -0.0931,  0.4763, -0.0495, -0.0478, -0.0185, -0.0963,  0.1967,  0.1054,
         -1.0629, -0.0426, -0.2248, -0.2953,  0.2133,  0.4814, -0.1888,  0.3964,
          0.0920, -0.1425,  0.9836,  0.0341,  0.0329,  0.8093, -0.9733, -0.0737,
          0.1180,  0.6454, -0.0056,  0.3667,  0.1438, -1.0947, -0.9408,  0.3671,
         -0.4707, -0.2388, -0.0386, -0.0821, -0.2336,  0.5348, -0.0295,  0.2139,
          0.1802,  0.1174, -0.1181, -0.1577,  1.1964, -0.5720,  0.2590, -0.1284]],
       device='cuda:0') tensor(1.2595, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
339000 特征值优化 tensor(2.2165, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6160, -0.7734,  0.2116,  0.0834,  1.7344,  1.3331,  0.7971,  1.3853,
          0.1684, -0.5776,  2.3668, -0.2442,  0.2812, -0.4075,  0.2598, -0.0890,
         -0.0761,  0.1106, -0.1382,  0.0421, -0.3083, -0.0228, -0.2538, -0.1790,
         -0.0566,  0.0949, -0.0453, -0.0244,  0.0583,  0.0037,  0.2048,  0.2256,
         -0.8659, -0.0247, -0.0579, -0.1079,  0.1226,  0.2678, -0.1366,  0.3179,
          0.2770, -0.0130,  0.8237,  0.0751,  0.0730,  0.6354, -0.7766, -0.1606,
          0.1747,  0.1533, -0.0630,  0.1150, -0.2637, -0.7019, -0.6618,  0.1430,
         -0.7349,  0.0931, -0.0849, -0.0774, -0.2939,  0.2835,  0.2592,  0.0762,
         -0.0927,  0.1268, -0.0087, -0.1318,  1.3851, -0.4483, -0.0344, -0.0483]],
       device='cuda:0') tensor(1.3529, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
340000 特征值优化 tensor(2.0948, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7134, -0.6310,  0.2910,  0.0992,  1.1432,  1.2522,  0.5978,  1.3923,
          0.0600, -0.4135,  2.1335, -0.3132,  0.2912, -0.2965,  0.3008, -0.0820,
         -0.0980,  0.1004, -0.1213,  0.0228, -0.3091, -0.0098, -0.2035, -0.1472,
         -0.0153,  0.0069, -0.0309, -0.0242,  0.0536,  0.0129,  0.2010,  0.1629,
         -0.6576, -0.0253, -0.0327, -0.0464,  0.0154,  0.2610, -0.0757,  0.2727,
          0.3671,  0.0215,  0.7348,  0.1404,  0.1363,  0.3207, -0.6365, -0.1614,
          0.1563,  0.1271, -0.0771,  0.0907, -0.6335, -0.3584, -0.6238, -0.6005,
         -0.7200,  0.1102, -0.0718, -0.0954, -0.1840,  0.1721,  0.4579,  0.0603,
         -0.1847,  0.1157,  0.0103, -0.1057,  1.5764, -0.3440, -0.1795, -0.0081]],
       device='cuda:0') tensor(1.0545, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
341000 特征值优化 tensor(4.4335, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.9267e-01, -1.2003e+00,  1.4470e+00, -1.9519e+00,  1.0697e+00,
          5.6842e-01,  5.0881e-01, -1.3833e-01,  7.9751e-01,  1.3355e+00,
          1.7329e+00,  2.1199e+00,  2.4125e-02,  1.1839e+00, -7.2733e-01,
         -3.0943e-01,  2.3263e-01,  5.0420e-01, -8.3219e-01,  6.7854e-01,
         -3.3369e-02,  2.1962e-01, -7.4980e-01,  1.1938e+00,  3.8081e-02,
          2.5976e-01, -8.7109e-01,  5.3014e-01, -1.0125e+00, -7.9587e-01,
          4.2824e-01, -4.4440e-01,  2.2173e-01, -1.5178e-03, -3.9129e-01,
          9.4770e-03,  1.9161e-01, -1.4013e-01,  5.6503e-02,  3.0526e-03,
         -5.3900e-01, -6.4966e-01,  6.8614e-01, -2.8035e-01, -1.0827e+00,
          6.2061e-01, -7.4958e-02,  1.0817e+00, -2.9230e-01, -2.2961e-01,
          1.3968e+00, -4.7397e-01,  1.6981e-01,  5.3972e-01, -4.4601e-01,
         -1.1665e+00, -1.6569e-01,  1.6948e-01,  1.1106e-01, -2.6141e-01,
          1.1517e+00, -1.3298e+00,  2.4442e+00, -8.7701e-01, -1.8122e-01,
          4.1820e-01, -1.6882e-01,  3.7855e-01,  1.9221e+00, -4.5883e-01,
         -9.7451e-02,  7.4064e-01]], device='cuda:0') tensor(2.5088, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
342000 特征值优化 tensor(2.2380, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.1722e-01, -4.6905e-01,  1.7126e+00, -2.1185e+00,  1.0526e+00,
          6.5367e-01,  4.8589e-01,  5.2916e-01,  7.6657e-01,  5.4652e-01,
          1.5515e+00,  1.6202e+00, -1.6804e-02,  3.6247e-01, -1.6492e-01,
         -7.7451e-02,  2.8791e-02,  3.5165e-01, -3.7661e-01,  5.4591e-02,
         -7.0292e-04,  1.8044e-01, -3.6958e-01,  4.4678e-01,  2.9339e-02,
          5.1555e-02, -1.6549e-01,  1.3993e-01, -7.7537e-01, -5.4206e-01,
          1.9481e-01, -3.6000e-01,  3.1708e-01, -2.3097e-02, -4.4662e-02,
          1.3229e-02,  6.8411e-02, -2.4966e-01, -3.0105e-02, -1.2049e-01,
         -2.7623e-01, -3.0718e-01, -7.7860e-02,  2.2354e-02, -8.2663e-02,
          3.4128e-01, -5.5799e-02,  1.0134e+00, -6.7135e-01, -2.0496e-01,
          1.3114e+00, -3.5520e-01, -1.5260e-04,  3.1719e-01, -4.6418e-01,
         -1.2157e+00, -3.4572e-01,  1.5351e-01, -6.5190e-02, -6.4033e-02,
          1.3110e+00, -1.1204e+00,  2.1629e+00, -1.0210e+00, -1.0001e-01,
          1.9853e-01, -9.0493e-02,  1.7486e-01,  1.7763e+00, -6.3174e-01,
         -4.2883e-01,  5.2425e-01]], device='cuda:0') tensor(1.0364, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
343000 特征值优化 tensor(2.1173, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7808, -0.3266,  1.7240, -2.0700,  1.0318,  0.6268,  0.2574,  1.0315,
          0.8402,  0.3374,  1.5515,  1.4164, -0.0176,  0.0934, -0.1275, -0.1626,
         -0.1761,  0.2920, -0.3081,  0.0432, -0.0043,  0.1614, -0.2978,  0.3065,
          0.1615, -0.0832, -0.0854,  0.2195, -0.6787, -0.5353,  0.1222, -0.3226,
          0.3348, -0.0240, -0.0138, -0.0128, -0.1136, -0.3091, -0.0075, -0.1126,
         -0.1412, -0.2629, -0.1477,  0.0212,  0.0223,  0.1722, -0.0048,  0.7896,
         -0.7705,  0.1357,  1.1302, -0.2532, -0.0556,  0.2032, -0.3749, -1.1491,
         -0.3305,  0.1546,  0.0677, -0.0215,  1.4215, -0.9035,  2.0308, -0.9155,
         -0.1157,  0.1893, -0.0188,  0.1184,  1.7644, -0.7606, -0.4702,  0.4844]],
       device='cuda:0') tensor(0.9501, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
344000 特征值优化 tensor(9.4407, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6215, -0.9198,  0.2857, -0.8873,  0.8314,  0.1486, -1.9177,  0.2683,
          0.7013, -1.0812, -0.8276,  1.2108, -0.1482,  0.2373,  0.0483,  0.1888,
          0.8717, -0.8777, -0.1512,  0.4741, -0.6734,  0.6454,  0.1802,  0.0767,
          0.2730,  0.0916,  1.1974, -0.6372, -0.4380, -0.9412,  0.2138, -0.5306,
          0.2845, -0.1389, -1.3472, -1.0204,  0.1758, -0.6567,  0.0231,  0.0120,
          0.3191,  0.0509, -0.4793,  0.4704, -1.0275,  1.3280,  1.5285,  0.6380,
          1.9764,  0.2844, -1.2304,  0.0836,  1.4053, -0.3634, -0.2780,  0.2150,
          1.2112, -0.0171, -0.7100,  1.0949,  1.0533, -1.7269,  0.7069,  0.0873,
         -0.0897,  0.3311, -1.2794,  1.0093, -0.6111,  0.6097,  1.9959, -1.1083]],
       device='cuda:0') tensor(4.9411, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
345000 特征值优化 tensor(2.3222, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3061e+00, -4.4705e-01,  9.5092e-01, -8.9654e-01, -1.1308e-01,
          7.3469e-01, -1.2871e+00, -3.8799e-02,  1.2677e+00, -1.6385e+00,
         -8.8856e-02,  1.9007e+00, -2.7261e-01,  1.2774e-01, -1.1645e-01,
         -2.2010e-04,  2.1148e-01, -1.1008e-01,  2.9477e-02,  8.1082e-02,
         -3.4743e-01,  3.9663e-01,  7.2783e-03,  6.7855e-02,  4.8442e-02,
          2.0446e-01,  3.3667e-01, -8.7084e-02, -7.8677e-03, -4.4185e-01,
         -1.8215e-02, -3.2295e-01,  2.8104e-02,  9.3837e-03, -7.5761e-01,
         -1.0153e+00,  9.3363e-02, -9.2172e-02,  4.8013e-02, -3.0594e-02,
          6.9590e-03,  2.9879e-03, -2.5269e-01,  5.8509e-01, -5.2687e-01,
          6.7372e-01,  7.5329e-01,  7.4469e-02,  1.4036e+00, -1.7351e-01,
         -5.3247e-01, -3.3677e-01,  2.8668e-01, -1.2687e-01, -8.8409e-02,
          1.6051e-02,  1.2732e+00, -6.3133e-01, -8.0304e-01,  9.6402e-01,
          1.4647e+00, -1.1076e+00,  2.0022e-01, -1.4697e-01,  2.8557e-01,
         -3.0750e-01, -1.0341e+00,  8.7428e-01, -1.5978e-01,  1.3963e-01,
          1.2677e+00, -1.1018e+00]], device='cuda:0') tensor(0.9125, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
346000 特征值优化 tensor(2.1472, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2726, -0.0667,  0.9365, -0.8346, -0.0029,  0.8398, -1.2157, -0.1375,
          1.3434, -1.6627,  0.1402,  2.1380, -0.2832,  0.0191,  0.0081,  0.1619,
          0.2330,  0.0212, -0.0347, -0.0302, -0.3741,  0.3634,  0.0150,  0.0323,
          0.0829,  0.1028,  0.1491, -0.0699,  0.0076, -0.4111, -0.0224, -0.0274,
         -0.0316,  0.0408, -0.7128, -0.9485,  0.0448, -0.0339,  0.0221, -0.0343,
          0.0216,  0.0187, -0.5213,  0.6024, -0.0738,  0.7904,  0.5998,  0.0558,
          1.4099, -0.2377, -0.3868, -0.3676, -0.0558,  0.0549, -0.0640, -0.0076,
          1.1721, -0.6132, -0.7432,  0.6906,  1.2584, -0.9736,  0.1512, -0.0966,
          0.2397, -0.3430, -0.9673,  0.8440, -0.1683,  0.1636,  1.0545, -0.9737]],
       device='cuda:0') tensor(0.8836, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
347000 特征值优化 tensor(14.6089, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.8561e-01, -3.7726e-01,  3.0058e-01, -1.0012e+00,  4.4893e-01,
          3.5055e-01,  2.4561e-01, -1.7180e+00,  3.4286e-01, -3.2503e-01,
         -1.3858e+00,  7.9845e-01, -4.5268e-01,  2.9019e-01,  7.0281e-01,
          1.9756e-03, -3.0485e-01, -4.1985e-01, -3.1469e-02,  6.5700e-01,
         -4.9370e-01, -2.2112e+00,  2.0104e+00,  3.7617e-02, -1.7902e-01,
         -1.2193e-01, -1.5151e+00,  4.2426e-01,  6.4298e-01,  5.1137e-02,
         -8.6654e-01, -2.6131e-01, -7.8551e-01,  4.7933e-01,  2.7389e-01,
         -1.2488e+00,  1.2719e+00, -3.5572e-01,  5.7983e-01, -1.6369e-01,
          2.5681e-01,  1.2470e+00, -7.5108e-01,  9.5995e-01,  1.5106e+00,
          6.6373e-01,  1.2177e+00,  9.4110e-01,  1.5425e+00, -2.3039e-01,
         -2.9903e-01,  2.9723e-01,  3.5091e-01,  1.0781e+00,  2.0126e-01,
         -1.0629e+00,  2.3874e-01,  1.5710e-01,  3.2281e-01, -1.3028e+00,
          7.9055e-01, -6.3813e-01, -4.3255e-01,  2.4448e-02, -3.2192e-01,
         -1.2532e-01, -1.7477e+00, -1.1638e+00,  1.1816e+00,  7.0364e-01,
          5.7218e-01,  1.7499e+00]], device='cuda:0') tensor(7.6801, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
348000 特征值优化 tensor(3.6043, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1537,  0.2922,  1.4416, -0.6460, -0.3054,  1.0474,  0.9200, -0.9270,
          0.9733, -0.9913, -0.5858,  1.6832, -0.3089, -0.0265,  0.0245, -0.0330,
         -0.0545, -0.0334, -0.0291,  0.0298, -0.2960, -1.2347,  0.9076, -0.0863,
          0.0496,  0.0399, -0.5408,  0.0423,  0.1464,  0.1657, -0.0802, -0.0367,
         -0.0593,  0.0629, -0.1824, -0.4333,  0.7547, -0.3001,  0.2649, -0.3469,
          0.1290,  0.9640, -0.3161,  0.4487,  0.6341,  0.4077,  0.5041,  1.0255,
          1.0533, -0.3119, -0.3417,  0.0193, -0.3606,  0.2682,  0.0627, -0.3029,
          0.6182, -0.5910,  0.1953, -0.4462,  1.1557, -0.1615, -0.4472, -0.1351,
         -0.4555,  0.1872, -0.8525, -0.4023,  0.5605,  0.0606,  0.3416,  0.8246]],
       device='cuda:0') tensor(2.5689, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
349000 特征值优化 tensor(2.1467, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4126,  0.3168,  1.7692, -0.4836,  0.0036,  1.0435,  1.0588, -0.1974,
          0.6000, -1.0856, -0.0761,  1.7877, -0.0078,  0.0302, -0.0203,  0.2069,
         -0.3487,  0.0020, -0.0303,  0.0057,  0.0029, -0.8760,  0.4615,  0.0921,
          0.0866, -0.1014, -0.1795, -0.1424,  0.2815,  0.3306, -0.0233, -0.0093,
          0.0079,  0.0347, -0.2219, -0.3342,  0.6461, -0.0143,  0.2512, -0.5098,
         -0.0235,  1.0103, -0.4172,  0.2341,  0.2292, -0.1798,  0.0795,  0.8176,
          0.9017, -0.1034, -0.6630, -0.1412, -0.2756,  0.1670, -0.0688, -0.0515,
          0.1589, -0.2266,  0.3101, -1.0854,  0.6783, -0.1416, -0.0516,  0.0264,
          0.1674,  0.3244, -0.6018, -0.3094, -0.0131,  0.0559,  0.3951,  0.6720]],
       device='cuda:0') tensor(1.4469, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
350000 特征值优化 tensor(16.1998, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1868, -1.4601, -0.5177, -0.5499,  0.0290, -0.3123, -0.5641,  1.4749,
          0.4534, -2.1174,  0.7047,  1.8879,  0.0501, -0.3371, -2.0731,  0.1645,
          0.7011,  1.1065,  0.0183,  0.7884, -0.7517, -1.2040, -0.0511, -2.7708,
          0.0255,  0.1513, -0.5797, -1.2900, -0.8309,  0.6975,  0.8706, -1.4500,
          1.3965, -0.7287, -2.4427, -0.4415, -0.8737,  1.1014,  0.9779,  0.3300,
         -0.8996, -0.8777,  0.8758, -1.1056, -0.1319, -1.6028,  0.3011, -0.2141,
          1.6757, -0.4548, -0.8404, -0.1267, -0.4964, -1.5000,  1.6875,  0.5721,
          0.4584, -0.2450, -2.1780,  0.4612,  0.6523, -0.1859, -0.2583, -1.0324,
          0.5554, -1.0766, -0.2066, -0.8558,  0.4326,  0.7489, -0.5428,  0.3510]],
       device='cuda:0') tensor(8.1411, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
351000 特征值优化 tensor(3.7269, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6078, -1.0475,  0.2869, -0.5910,  0.7466,  0.7139,  0.1161,  0.4981,
          1.4766, -1.8387,  0.7252,  1.7893,  0.2803, -0.5191, -1.3292, -0.4603,
          0.1945,  0.2731,  0.5116,  0.2321, -0.3222, -0.3690,  0.1199, -1.7066,
          0.4068, -0.0313,  0.0403, -0.4073, -0.0726,  0.3270,  0.2726, -0.6487,
          0.5448,  0.0231, -1.5003, -0.1594, -0.2199,  0.3505,  0.1934,  0.1017,
         -0.0694, -0.1109,  1.1282, -0.6040,  0.1160, -1.0901,  0.2817,  0.0882,
          0.5948,  0.0754, -0.0637, -0.2863,  0.2089, -0.7714,  0.9216,  0.4877,
          1.5066, -1.0933, -1.2690,  0.5142,  0.9619, -0.2281,  0.2391, -0.3315,
          1.5920, -1.6488,  0.3130, -0.0369,  0.5709,  0.1326, -0.8109,  0.5058]],
       device='cuda:0') tensor(1.6826, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
352000 特征值优化 tensor(2.3400, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.3267e-01, -5.5228e-01,  5.6768e-01, -1.6133e-01,  9.2965e-01,
          1.2196e+00, -7.4421e-03,  4.2768e-01,  1.7051e+00, -1.1147e+00,
          7.6488e-02,  1.1363e+00,  1.7873e-01,  1.9214e-01, -6.5599e-01,
         -2.5646e-01,  8.9756e-02,  1.0082e-04,  2.7159e-01, -1.3463e-02,
         -2.0032e-01, -3.1781e-02, -1.7263e-02, -8.1557e-01,  1.0304e-01,
          1.6638e-01,  1.3579e-01, -8.5366e-02, -1.7865e-02,  1.1167e-02,
          2.8061e-01, -4.0707e-01,  3.0904e-01, -7.0829e-03, -1.3454e+00,
         -2.5986e-01, -3.1460e-01,  4.3542e-02,  1.6085e-01, -4.9129e-02,
          3.5514e-02,  3.0487e-03,  8.8161e-01, -2.7914e-01, -8.0070e-02,
         -1.0961e+00,  3.1554e-01, -2.6529e-01,  1.3229e-01,  1.4159e-01,
          1.7280e-01, -6.9865e-02,  2.4065e-01, -6.4236e-01,  7.6617e-01,
          4.5127e-01,  1.6028e+00, -1.0129e+00, -1.2698e+00,  4.2915e-01,
          7.7222e-01, -2.2626e-01, -2.0107e-02, -1.6842e-01,  1.6292e+00,
         -1.4653e+00,  1.4109e-01,  1.9965e-01,  1.0711e-01,  1.8321e-01,
         -5.1261e-01,  1.7610e-01]], device='cuda:0') tensor(1.3053, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
353000 特征值优化 tensor(2.1177, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.1302e-01, -4.2533e-01,  5.2211e-01, -1.3716e-01,  9.1595e-01,
          1.5087e+00, -1.7493e-01,  4.4674e-01,  1.9208e+00, -8.6980e-01,
         -1.7578e-01,  8.6215e-01,  1.2186e-01,  2.0512e-01, -2.6543e-01,
         -1.0409e-01, -9.0072e-04, -3.9569e-02,  1.3780e-01, -4.0160e-02,
         -1.4511e-01, -2.4029e-02,  3.6035e-02, -3.5443e-01,  1.2764e-01,
          1.2336e-01,  9.9167e-02, -4.4399e-02, -7.4458e-03,  5.3611e-03,
          2.8245e-01, -3.3788e-01,  2.9662e-01, -1.3293e-02, -1.2360e+00,
         -2.5737e-01, -2.3261e-01,  1.1853e-02,  8.7497e-02, -5.0493e-02,
          3.1221e-02, -2.6631e-03,  8.3649e-01, -2.6365e-01, -1.8283e-01,
         -1.0538e+00,  3.5848e-01, -2.1500e-01,  1.0270e-01,  1.0608e-01,
          1.5970e-01, -5.4739e-02,  5.2509e-02, -5.3811e-01,  5.9879e-01,
          4.6570e-01,  1.4403e+00, -9.8495e-01, -1.2582e+00,  5.2155e-01,
          5.3921e-01, -1.8801e-01, -1.0354e-01, -1.2911e-01,  1.5555e+00,
         -1.3008e+00, -1.2024e-01,  2.3619e-01,  2.9956e-01,  1.2753e-01,
         -3.6596e-01,  1.6429e-01]], device='cuda:0') tensor(1.2504, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
354000 特征值优化 tensor(10.7298, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.5791e-01,  5.3822e-01, -1.8603e+00,  1.2278e+00,  6.1976e-01,
          6.1769e-01, -3.3349e-01, -1.0099e+00,  2.2497e+00, -1.6343e+00,
         -3.7436e-01,  1.1301e-01, -9.2240e-01,  4.0460e-01,  1.7812e+00,
         -2.1489e-01,  5.0821e-01, -5.1048e-01, -7.8923e-01,  7.0861e-02,
         -2.5861e-01, -7.2701e-01,  3.0655e-01,  1.0506e+00, -1.7112e+00,
          3.3909e-01,  9.6244e-02, -4.6590e-02, -3.3272e-01,  3.9846e-01,
          8.6412e-01,  3.0694e-01,  7.4979e-01,  5.0902e-01,  9.2802e-01,
         -5.5062e-01, -5.9740e-01,  2.4269e-01, -1.7047e+00,  8.7548e-01,
          1.4691e-01, -1.4213e+00,  1.2079e+00,  1.7911e+00, -2.6690e-01,
         -1.1988e+00,  3.4104e-01,  2.6445e-01, -9.0618e-01, -3.0215e-01,
         -5.8674e-02, -1.4335e-03,  5.5761e-01,  9.3257e-02,  3.1313e-02,
         -4.0243e-01,  1.1904e-01, -4.0077e-01, -1.1043e+00, -1.7804e-01,
          1.1588e-01,  1.1129e-01, -1.1535e+00,  8.4466e-01,  1.4919e+00,
         -4.7129e-01, -4.2261e-02, -2.5666e-01,  4.8513e-01, -6.7173e-01,
          3.0754e-01,  4.2824e-01]], device='cuda:0') tensor(6.5584, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
355000 特征值优化 tensor(2.4783, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0600,  1.1119, -0.8767,  0.4193,  1.1787,  0.9268, -0.2003, -0.1628,
          3.1185, -2.1394, -0.1290,  1.1089, -0.1535,  0.2203,  0.8583,  0.0105,
          0.0141,  0.0190,  0.0073,  0.0584, -0.1887, -0.0689,  0.0451, -0.0197,
         -0.6388,  0.0242,  0.0051,  0.0940, -0.0059,  0.0592,  0.3009,  0.3305,
          0.4420,  0.3094,  0.6415, -0.1011, -0.0173, -0.0217, -0.9961,  0.7853,
          0.0173, -0.6916,  0.2551,  1.0674, -0.6319, -0.6636,  0.3298,  0.0794,
         -0.0788,  0.0842, -0.1541,  0.1198, -0.1222, -0.3829,  0.3360, -0.9616,
         -0.1315, -0.3930, -0.7537,  0.3011,  0.2255, -0.0765, -0.6054,  0.2978,
          1.8072,  0.1775, -0.3804, -0.7341,  0.6972, -0.3012, -0.0243,  0.6146]],
       device='cuda:0') tensor(1.9481, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
356000 特征值优化 tensor(2.1097, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.7768e-02,  8.9675e-01, -4.4882e-01,  2.4045e-01,  1.3110e+00,
          6.5877e-01, -1.8765e-01, -3.0786e-02,  3.2247e+00, -2.1777e+00,
         -6.8580e-02,  1.2740e+00, -8.8351e-02,  1.9353e-01,  4.9317e-01,
         -1.5730e-02,  1.9296e-03,  8.3172e-02, -2.8194e-03,  4.2583e-02,
         -1.6530e-01, -7.0048e-02, -4.7367e-02, -2.0412e-01, -2.8255e-01,
         -2.7466e-02,  1.9015e-02,  9.8638e-02, -1.4051e-02,  5.5952e-02,
          2.9892e-01,  2.0321e-01,  3.1007e-01,  2.5786e-01,  5.7175e-01,
          2.1551e-02, -2.1602e-02, -1.0743e-02, -1.0058e+00,  7.3389e-01,
          3.4601e-02, -5.5773e-01,  1.1544e-01,  7.8697e-01, -3.4668e-01,
         -6.3482e-01,  2.3099e-01, -1.2696e-01, -1.3559e-03,  9.9724e-02,
         -5.9826e-02,  9.0137e-02, -6.2715e-01, -2.5798e-01,  1.3264e-01,
         -8.1382e-01, -4.2979e-01, -2.7578e-01, -5.2642e-01,  2.2753e-01,
          1.0647e-01, -3.8137e-02, -4.9982e-01,  2.5169e-01,  1.6633e+00,
          2.7174e-01, -5.7852e-01, -6.1370e-01,  5.7279e-01, -2.1033e-01,
          1.9477e-02,  7.1077e-01]], device='cuda:0') tensor(1.6878, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
357000 特征值优化 tensor(9.2077, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4755,  1.5729,  0.1059,  0.5840, -1.0020, -0.1272,  2.4681,  0.9098,
         -0.1297,  1.6426, -0.3070,  1.1659, -0.2170, -0.2603, -0.4256,  0.4060,
         -0.8776,  0.3853,  0.1905,  0.3208,  1.6099,  0.3320,  0.1161, -0.0628,
         -1.3482,  0.0723,  0.2142, -0.2513, -0.1492,  0.1087, -0.6351, -0.1371,
         -0.4822,  0.0741,  0.0025, -0.0730, -0.5371,  0.7788,  0.1713, -0.2692,
          0.1274, -0.4677,  1.2642,  0.8079,  0.0457,  0.4755, -0.1066,  0.1823,
          1.3986, -0.2099, -0.1510,  0.5915, -0.2436, -1.1087,  0.0029,  0.0037,
          0.1337,  0.6221,  0.5597,  0.0496,  1.2338, -0.6153, -0.9289, -2.2586,
         -0.1511, -0.1980, -0.4163,  0.3713,  0.8613, -0.7104, -0.1103,  0.4317]],
       device='cuda:0') tensor(5.5324, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
358000 特征值优化 tensor(2.6421, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1960,  1.2221,  0.5449,  0.7180, -0.6545, -0.0907,  3.2245,  0.9304,
          0.4193,  1.3095,  0.4423,  0.7909,  0.0856,  0.0357, -0.0197,  0.0514,
         -0.2490,  0.1186, -0.0276,  0.2755,  0.9899,  0.0904,  0.0214,  0.0303,
         -0.4754,  0.2839, -0.2268, -0.3195, -0.0203,  0.1090, -0.1352,  0.0982,
         -0.2336,  0.0250, -0.0224, -0.0101, -0.5548,  0.4411,  0.2070, -0.0353,
         -0.2351, -0.0436,  1.3852,  1.0237,  0.2101,  0.0909, -0.2147, -0.4674,
          0.8813, -0.2735, -0.1843,  0.1336,  0.2278, -0.2380, -0.1100, -0.0137,
         -0.2164,  0.2093,  0.0907, -0.0150,  1.5230, -0.7660, -0.0089, -1.4765,
         -0.9300,  0.0219, -0.5072,  0.1149,  1.0855, -0.6208, -0.7228,  0.2817]],
       device='cuda:0') tensor(1.9437, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
359000 特征值优化 tensor(2.1651, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4297e+00,  1.1454e+00,  3.9231e-01,  3.9288e-01, -4.7104e-01,
          1.2609e-01,  3.3969e+00,  7.6655e-01,  4.7995e-01,  1.2002e+00,
          5.0987e-01,  8.2722e-01,  1.4812e-01,  7.0700e-02, -5.8727e-02,
         -6.7288e-02, -1.2613e-01,  6.4092e-02, -1.1934e-01,  4.3900e-01,
          7.8609e-01,  4.5605e-02,  6.3338e-02,  7.4506e-02, -3.7430e-01,
          2.8188e-01, -2.0298e-01, -2.6047e-01,  4.5541e-02,  6.7345e-02,
         -1.5173e-01,  1.3084e-01, -1.4419e-01,  2.6463e-02,  4.9196e-03,
         -5.7951e-03, -5.0767e-01,  3.3785e-01,  2.2584e-01, -3.5202e-02,
         -1.2335e-01, -3.2847e-02,  9.7042e-01,  9.2785e-01, -3.3804e-03,
          1.5614e-01, -6.3094e-02, -4.0584e-01,  7.1941e-01, -1.8300e-01,
         -9.1288e-02,  8.3262e-02,  9.3532e-03, -1.5105e-01,  1.0465e-01,
         -8.1443e-02, -1.4084e-01,  1.6791e-01,  4.8409e-02, -2.2800e-04,
          1.4519e+00, -7.6189e-01,  2.3258e-01, -1.2813e+00, -1.0103e+00,
          7.4562e-02, -4.5360e-01,  7.8207e-02,  6.8177e-01, -5.4991e-01,
         -6.4850e-01,  2.1207e-01]], device='cuda:0') tensor(1.5043, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
360000 特征值优化 tensor(2.0936, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4542e+00,  1.1555e+00,  3.6726e-01,  1.8725e-01, -2.5800e-01,
          3.2957e-01,  3.4493e+00,  9.0939e-01,  5.6951e-01,  1.1194e+00,
          4.1414e-01,  8.8013e-01,  1.7136e-01,  4.6664e-02, -6.7843e-02,
         -5.3976e-02, -2.9925e-01,  3.8930e-02, -1.6356e-01,  4.5835e-01,
          6.9757e-01,  8.0858e-05,  3.5494e-02,  5.0887e-02, -2.7888e-01,
          2.1832e-01, -1.5741e-01, -1.9964e-01,  4.3518e-02,  2.2719e-02,
         -1.5854e-01,  9.9751e-02, -3.5346e-02,  2.9783e-02,  1.4262e-02,
          9.4564e-03, -5.0419e-01,  2.4567e-01,  2.4373e-01, -2.7947e-02,
         -2.5600e-02, -1.6452e-02,  8.0348e-01,  9.3967e-01, -8.9269e-02,
          1.0487e-01,  2.4102e-02, -3.5343e-01,  3.1388e-01,  1.0674e-01,
         -6.2475e-02,  3.8751e-02, -7.7847e-03, -1.3926e-01,  1.0302e-01,
         -6.1825e-02, -1.3946e-01,  1.5293e-01,  3.0881e-01,  1.7355e-02,
          1.5809e+00, -6.9179e-01,  2.8258e-01, -1.2117e+00, -1.0044e+00,
          7.6354e-02, -3.9250e-01,  4.4720e-02,  4.0439e-01, -5.2370e-01,
         -5.8100e-01,  1.5166e-01]], device='cuda:0') tensor(1.0275, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
361000 特征值优化 tensor(11.3862, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1007,  1.1501, -1.8821,  0.2458,  1.2060, -0.0847, -0.0067, -0.6703,
          0.5092, -0.3474,  0.3498,  1.4721,  0.8831,  0.1090,  1.6071,  1.8744,
          0.3875,  1.0365,  0.0384,  0.0267,  1.5135,  0.0079, -1.5192,  0.5016,
          0.0354,  0.1993, -0.1808,  0.9205,  0.3835, -0.0186, -0.6667,  0.0071,
         -0.0273, -0.4384, -0.8563,  0.7562,  0.2681, -0.9436, -0.4348,  0.9275,
          0.6207, -0.8339, -0.9712, -0.4942,  1.0021, -0.5762,  1.1458,  1.4655,
         -0.3564, -0.4944, -0.0666, -0.0826, -1.9518,  0.6774, -0.0781,  0.2513,
          1.1260,  0.1142, -0.5847, -0.3282,  0.9920, -0.4970,  0.5387,  0.8220,
          1.3859,  0.3578,  0.0396, -0.1208, -0.3392, -0.1468,  0.5540, -0.6497]],
       device='cuda:0') tensor(5.8175, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
362000 特征值优化 tensor(2.4725, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.6795e-01,  1.8386e+00, -1.0039e+00,  4.3695e-01,  2.0090e+00,
          4.8695e-01,  6.9575e-01, -1.0177e+00,  8.4325e-01, -2.0951e-01,
          6.6451e-01,  1.5871e+00,  5.3908e-01,  3.2897e-01,  6.9915e-01,
          7.5738e-01, -1.6891e-01,  4.0747e-02, -1.8284e-01,  1.0259e-03,
          6.7672e-01, -1.6118e-02, -5.0690e-01,  5.9661e-02,  4.7963e-02,
         -6.6344e-02, -1.1102e-03,  7.1027e-03,  5.8121e-02, -2.9204e-03,
         -2.1518e-01, -1.1052e-01, -9.8194e-02, -3.6846e-02, -5.1610e-01,
          6.0861e-01,  2.0256e-01, -2.0051e-01, -1.2615e-01,  4.6084e-01,
          1.7676e-01, -3.9137e-01, -2.6502e-01, -1.0192e-01,  1.1893e+00,
         -3.5126e-03,  4.9494e-01,  2.7867e-01,  5.2092e-02,  4.4747e-02,
         -1.4942e-01, -4.8887e-02, -1.1692e+00,  4.0700e-01,  1.6333e-02,
         -1.1776e-02,  7.7062e-01, -3.3421e-01, -7.5009e-01, -7.6308e-01,
          1.6951e-01, -3.3253e-01, -5.1079e-02,  1.4849e-01,  7.5890e-01,
          4.5487e-03,  7.4558e-01, -5.6848e-01, -1.9827e-01,  9.8796e-02,
          7.6558e-01, -7.9065e-02]], device='cuda:0') tensor(1.9008, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
363000 特征值优化 tensor(2.1394, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1066e+00,  1.7310e+00, -6.7080e-01,  4.9331e-01,  2.0418e+00,
          5.2863e-01,  7.3566e-01, -6.5774e-01,  8.9836e-01,  2.0699e-01,
          3.9924e-01,  1.6516e+00,  4.8564e-01,  4.3530e-01,  5.1172e-01,
          3.6142e-01, -1.8178e-01, -1.0030e-01, -6.0576e-02,  1.5187e-03,
          6.2077e-01, -1.3969e-02, -8.4166e-02,  1.6790e-02, -7.6760e-02,
         -7.0627e-02,  3.3889e-02, -8.1684e-03,  6.2759e-02, -8.0877e-03,
         -1.4521e-01, -2.5571e-01, -8.6796e-02, -7.4459e-03, -4.5259e-01,
          5.1201e-01,  1.9708e-01, -1.2977e-01, -1.5651e-01,  3.3226e-01,
          6.1388e-02, -3.6071e-01, -2.9627e-01, -1.5807e-01,  1.0883e+00,
         -1.0561e-01,  4.3892e-01,  2.0902e-01,  7.1422e-02,  9.0489e-02,
         -2.2300e-01, -3.0459e-02, -1.0004e+00,  2.3559e-01, -8.0862e-02,
          5.2266e-02,  5.6286e-01, -2.4475e-01, -5.7031e-01, -8.0658e-01,
          9.3624e-02, -2.3383e-01,  1.6172e-02,  9.0547e-02,  5.1929e-01,
         -2.0850e-01,  6.6773e-01, -5.9492e-01, -1.4049e-01,  4.4196e-02,
          6.5979e-01, -9.3296e-02]], device='cuda:0') tensor(1.5312, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
364000 特征值优化 tensor(19.6443, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0928, -0.2044, -0.0998,  0.7981, -0.5590, -1.2192,  0.4559,  0.1369,
         -0.4019,  1.0129, -0.0202, -0.0379, -0.6380, -0.1109,  0.5418, -0.0120,
         -0.1787, -1.0368, -0.1190, -1.3214,  1.3755, -0.8024,  0.6824,  0.4008,
          0.1503, -0.0182, -1.3676, -0.4352, -1.9966,  1.2944, -0.2559, -0.2752,
          1.1452, -1.8810,  0.4264,  0.4826, -0.0071, -0.1015,  0.5231,  0.4759,
          0.5055,  2.0712,  0.2288,  0.7582, -0.0252,  1.4029, -0.8976, -0.0786,
         -0.5370, -1.5350,  0.4091,  0.7653,  1.4687, -1.7836, -0.3683,  0.8790,
         -0.5333, -0.9647,  0.9465, -0.1446,  0.6960, -0.1742,  0.7388,  2.2501,
          0.4438,  0.6211,  0.4454,  0.6181, -0.4828, -2.3692,  0.0570, -0.8782]],
       device='cuda:0') tensor(10.7589, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
365000 特征值优化 tensor(3.8139, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.9528e-01, -7.6597e-01,  8.0597e-01, -1.6257e-02, -4.6293e-01,
         -1.4728e-01,  1.6792e+00, -8.1119e-01,  6.6865e-02,  8.9535e-01,
          1.1005e+00,  7.0862e-01, -1.3318e-01, -7.0212e-02,  1.0517e-01,
          1.7089e-01, -1.0297e-02, -1.8656e-01, -2.3671e-01, -5.7550e-01,
          5.6867e-01, -2.5776e-01,  2.7846e-03, -7.1820e-03, -1.0142e-01,
          1.1846e-01, -3.9899e-01, -1.2054e-01, -8.3330e-01,  3.8476e-01,
         -1.6463e-02,  5.1038e-01,  8.6123e-01, -5.1779e-01,  1.7567e-03,
          4.4065e-03,  5.0146e-01,  8.6491e-02,  1.2376e-01,  2.2208e-01,
          2.7028e-01,  1.0690e+00,  9.7642e-01,  4.6300e-01, -2.7595e-01,
          7.5868e-01, -3.3680e-01,  7.8774e-01,  6.2895e-02, -8.2587e-01,
         -3.6048e-01, -4.0456e-02,  1.7784e+00, -9.8052e-01, -5.3555e-01,
          4.6884e-01,  1.2752e-01,  2.0660e-01,  2.7684e-01, -1.7748e-01,
          6.1224e-01,  3.2014e-02, -2.9203e-01,  1.2207e+00, -2.5434e-01,
          2.6414e-01, -4.3932e-02,  2.4773e-01,  6.3950e-01, -1.1994e+00,
          5.9351e-01,  1.9690e-01]], device='cuda:0') tensor(2.4624, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
366000 特征值优化 tensor(2.2482, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8031, -0.8421,  0.8851, -0.1443,  0.2004, -0.1662,  1.8350, -1.4683,
          0.0329,  0.5901,  1.2403,  0.7803, -0.0561, -0.1002,  0.1663,  0.2737,
          0.0081,  0.0390, -0.1363, -0.3970,  0.3854, -0.2317,  0.0303, -0.0113,
          0.0048, -0.0183, -0.0545, -0.0254, -0.4991,  0.2634, -0.0162,  0.6833,
          0.7621, -0.0976, -0.0089, -0.0348,  0.2984, -0.1269,  0.0105,  0.0257,
          0.1162,  0.5959,  0.9468,  0.8192, -0.6272,  0.5887, -0.1701,  0.5842,
          0.1943, -0.7112, -0.4027,  0.0739,  1.2574, -0.6542, -1.1063,  0.7836,
         -0.3510,  0.0970,  0.1582, -0.3049,  0.3969, -0.2555, -0.6473,  0.9086,
         -0.2800,  0.1650, -0.0128,  0.1499,  0.6994, -0.9084, -0.3829,  0.4218]],
       device='cuda:0') tensor(1.0042, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
367000 特征值优化 tensor(2.1189, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8461, -0.8376,  0.7879, -0.2794,  0.6653,  0.0196,  2.0143, -1.3687,
          0.0160,  0.3666,  1.3741,  0.3988, -0.0624,  0.0209,  0.1004,  0.1754,
          0.0633, -0.0084, -0.1894, -0.2969,  0.3104, -0.2148,  0.0850, -0.0339,
          0.0304, -0.0518,  0.0212, -0.1793, -0.3220,  0.2448,  0.0147,  0.6989,
          0.7178, -0.1059,  0.0154,  0.0242,  0.0800, -0.1315,  0.0423, -0.0939,
          0.1462,  0.3125,  0.7783,  0.6959, -0.4930,  0.4299, -0.0928,  0.4185,
          0.1270, -0.3239, -0.4317,  0.1704,  1.0613, -0.5499, -1.1461,  0.9182,
         -0.2482,  0.0563,  0.1945, -0.2369,  0.2599, -0.6035, -0.6537,  0.8379,
         -0.2429,  0.0909,  0.1279,  0.0654,  0.7127, -0.8610, -0.4730,  0.2717]],
       device='cuda:0') tensor(1.1605, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
368000 特征值优化 tensor(10.2753, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7196,  0.5647,  0.4971,  0.5662,  0.0925,  0.2579,  2.6421,  0.2441,
          0.5474, -0.8148,  0.2648,  0.0973,  0.4099, -0.0268, -0.2561,  0.9775,
          0.1914, -0.0217, -1.4604,  1.6333, -0.0059, -0.4097, -0.7109, -0.2810,
          0.2303,  0.1857,  0.7672,  0.5068,  0.3696,  0.2580,  0.0240, -0.6829,
         -1.0599,  0.0407,  0.3268, -0.7361, -0.6117, -0.7830, -1.5049, -0.1566,
         -0.1548,  1.4164, -0.5119, -0.4051,  0.0990, -0.2064,  1.0107, -1.0976,
          0.0887,  0.6524, -0.3422,  0.2102, -1.3374, -0.5769, -0.2530,  0.0291,
         -0.6871,  0.2047,  0.0845, -0.4464,  1.7464,  0.6334, -1.3623,  1.3501,
          0.2261,  1.1487,  0.5621, -0.3712, -2.3360,  0.5044,  1.7241, -0.1841]],
       device='cuda:0') tensor(4.8716, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
369000 特征值优化 tensor(2.6024, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3904e+00, -3.0300e-01,  9.4407e-02,  1.3070e-01,  8.7640e-01,
          2.0276e-01,  3.1344e+00,  6.8198e-01,  1.3249e+00, -4.5487e-01,
          1.1297e+00,  8.1222e-01,  9.4083e-02,  9.5922e-02, -1.4307e-01,
          2.0346e-01, -3.8910e-02,  1.9449e-01, -5.1315e-01,  9.1751e-01,
         -1.3808e-01, -1.5898e-02, -5.4886e-02, -7.5651e-02,  3.5797e-03,
          8.6474e-03,  2.0041e-02, -4.6040e-02,  2.1134e-04,  3.1989e-03,
         -7.7060e-03, -4.5210e-01, -1.3434e-01,  2.9046e-02,  8.1244e-02,
         -1.5212e-01, -9.3648e-01, -2.8244e-01, -8.4784e-01, -1.0328e-01,
         -1.7231e-01,  8.8722e-01,  2.1383e-01, -8.4008e-01, -3.1666e-01,
         -4.8528e-02,  4.7815e-01, -3.1244e-01,  2.7928e-02,  2.9627e-01,
         -1.1066e-01,  3.0055e-02, -4.6355e-01, -2.9683e-03,  3.8552e-02,
         -4.7041e-02, -2.5850e-01,  2.0153e-01,  9.7143e-02, -9.1095e-02,
          2.1997e+00,  1.3244e-01, -4.0029e-01,  4.7475e-01,  5.0622e-01,
          5.2858e-01,  1.0323e+00, -2.6246e-01, -1.4520e+00,  3.5956e-01,
          1.7996e+00, -2.5802e-01]], device='cuda:0') tensor(1.1680, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
370000 特征值优化 tensor(2.1819, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3824e+00, -8.1739e-01,  1.5352e-01,  5.1881e-03,  6.3665e-01,
          3.8264e-01,  3.1616e+00,  8.9451e-01,  1.2903e+00, -1.4445e-01,
          1.3594e+00,  8.9015e-01,  1.3257e-01,  3.8015e-02, -8.8944e-02,
          9.5712e-02, -2.5489e-01,  4.6246e-01, -3.8201e-01,  7.5844e-01,
         -9.3141e-02, -2.0783e-02, -2.8440e-02, -5.6303e-02,  6.8823e-02,
          4.5384e-02, -3.0761e-02, -1.8566e-02,  1.4170e-02, -1.3085e-03,
         -2.0864e-02, -2.9443e-01, -3.3804e-02,  1.8239e-02,  9.9853e-02,
         -8.7409e-02, -9.0016e-01, -1.9790e-01, -7.7536e-01, -4.8074e-02,
         -9.9710e-02,  7.6926e-01,  2.9496e-01, -1.0678e+00, -1.8561e-01,
          3.6521e-01,  3.0516e-01, -1.3533e-01,  6.3682e-02,  1.4726e-01,
         -6.2352e-02,  3.1798e-02, -4.2702e-01,  1.3120e-01,  7.8009e-01,
         -3.0530e-01, -1.4165e-01,  1.6719e-01, -7.6645e-02, -1.0517e-01,
          2.2934e+00,  1.6603e-01, -2.0804e-01,  2.3866e-01,  4.3235e-01,
          5.2032e-01,  1.0411e+00, -1.7517e-01, -1.0919e+00,  2.3238e-01,
          1.7061e+00, -2.7928e-01]], device='cuda:0') tensor(1.0726, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
371000 特征值优化 tensor(16.8594, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0342,  1.0930,  0.9947,  0.3141,  1.0567,  1.0363, -0.5339, -0.1546,
          0.3644, -0.8098,  1.2013,  0.1515,  0.2962,  0.6360,  1.2896,  0.7168,
         -0.6696, -1.3590, -0.7646, -1.3502,  0.4622, -0.9188,  0.8829,  1.4553,
         -0.5399,  1.4039,  0.6976,  0.0595, -0.8127,  0.6397,  0.2337,  0.5210,
          0.3761, -1.3686, -0.4244,  2.0785,  1.3332,  0.6583, -1.7429,  0.8797,
          1.2629, -0.7325, -1.0379,  1.4301,  0.0201,  0.5564,  1.2283,  0.7043,
         -0.0506, -1.2675,  0.0882, -0.6022,  0.1159, -1.2612,  0.7890,  0.1674,
          1.6421, -0.0767, -1.1780,  1.8314,  0.3080, -1.2028,  1.1320,  0.5374,
          0.3933, -1.2204,  0.4886, -0.4343,  1.9808,  0.2699,  0.0298, -0.7668]],
       device='cuda:0') tensor(8.0976, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
372000 特征值优化 tensor(3.4595, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6237,  1.6093,  1.2325, -0.0503,  0.7305,  1.9594,  0.1260,  1.0528,
          1.2925, -0.7460,  1.3369,  0.9234,  0.3419,  0.2918,  0.4482,  0.0048,
         -0.0383, -0.3622, -0.2776, -0.3349,  0.1252, -0.1996,  0.2048,  0.3778,
         -0.1420,  0.4490,  0.0689, -0.1611, -0.3442,  0.1435,  0.0507,  0.3933,
         -0.1762, -0.5298, -0.6211,  1.0474,  0.5574,  0.4225, -0.7767,  0.3689,
          0.6874, -0.3853, -0.2434,  0.8025, -0.3848, -0.1568,  0.4637,  0.1727,
          0.1382, -0.3507, -0.1806, -0.1831,  0.1368, -0.2702,  0.0629,  0.0882,
          2.3117, -0.6969, -0.5051,  1.1228,  0.9411, -0.4129,  0.5999,  0.1298,
          1.2291, -0.2516,  0.4076, -0.8527,  0.8130,  0.6527,  0.6136, -0.3880]],
       device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
373000 特征值优化 tensor(2.1434, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6538,  1.2766,  0.2672,  0.0218,  0.6234,  2.3057,  0.3940,  1.0496,
          1.3870, -0.3082,  1.3731,  1.2052,  0.2361,  0.1614,  0.2051, -0.0540,
          0.0657, -0.1222, -0.1590, -0.1546,  0.0193, -0.0255,  0.0313,  0.0906,
          0.1177,  0.0442, -0.0420,  0.0608, -0.0205, -0.0027,  0.0257,  0.0985,
         -0.0752, -0.2611, -0.7727,  0.7676,  0.4654,  0.4059, -0.6581,  0.3251,
          0.6029, -0.2692, -0.2972,  0.5296, -0.3060, -0.2208,  0.3038, -0.2722,
          0.1621,  0.1604, -0.0160,  0.0080, -0.2104,  0.1323,  0.0489,  0.0254,
          1.7234, -0.8737,  0.2611,  0.9741,  0.8711, -0.3664,  0.7278, -0.0429,
          1.0659, -0.0497,  0.4721, -0.7339,  0.6523,  0.6087,  0.4607, -0.2238]],
       device='cuda:0') tensor(1.1692, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
374000 特征值优化 tensor(11.1778, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.9695, -0.7560, -0.7986,  0.5961, -0.7307,  0.5801,  1.7186, -0.4297,
          0.6951, -0.5041, -0.1867,  0.6771, -0.0660,  0.0723, -0.5586,  0.1833,
         -0.0262, -0.4137,  0.6756,  0.1520,  0.2509,  0.0354,  1.4288,  0.4839,
         -0.1113, -0.1176,  0.5075,  0.9851, -0.0162,  0.1856,  0.2810, -1.0570,
          0.3046,  0.1279, -0.1808,  1.3718,  0.3540, -0.5541, -0.6729, -0.0695,
         -2.1944, -1.0029, -0.4130, -0.1320,  0.2125,  0.2693, -0.4595, -0.2713,
          0.9243, -0.6008,  0.3529, -0.4247, -0.1591, -0.8802,  0.5441, -0.4677,
         -0.4103,  0.7482, -0.1086,  0.0273,  0.0234, -0.0303, -0.8424, -0.2396,
          1.3064, -1.0048, -1.7760, -0.7249, -0.1701,  0.6123,  0.3401, -0.3711]],
       device='cuda:0') tensor(6.4269, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
375000 特征值优化 tensor(2.5558, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.0757e+00, -3.8706e-01, -2.0178e-01,  1.5052e-01, -3.8255e-01,
          1.2599e+00,  1.9114e+00,  1.3310e-01,  7.9383e-01, -4.0017e-01,
          9.6733e-01,  1.2591e+00,  8.0468e-02, -4.4474e-02, -2.0838e-02,
          4.8097e-02,  2.4481e-02, -6.4655e-03, -6.0531e-04, -6.5315e-03,
          1.0292e-01,  3.6592e-03,  5.2334e-01,  5.8197e-02,  4.9812e-02,
         -2.3866e-02,  5.7673e-02,  1.7731e-01, -4.7700e-03,  3.1870e-02,
          1.6550e-01, -3.1275e-01, -9.4906e-02, -1.1164e-02,  1.0393e-01,
          7.1470e-01,  5.3279e-01, -1.3938e-02, -2.7910e-01,  1.1958e-01,
         -1.1634e+00, -3.1068e-01,  4.6963e-03, -1.8988e-01,  1.5716e-01,
          5.3978e-02, -1.2719e-01, -2.2390e-01,  4.6734e-01, -1.7267e-01,
          7.0815e-02, -1.8038e-02,  1.4405e-01, -4.4274e-01, -7.7687e-03,
         -4.8231e-02,  2.8359e-01,  7.9894e-02, -9.0520e-01,  6.5870e-01,
         -7.4087e-02,  5.4251e-01, -2.5871e-01,  1.4457e-01,  1.7794e+00,
         -5.9831e-01, -1.2830e+00,  1.2318e-01,  6.5804e-01,  8.8571e-01,
          1.0155e+00, -8.9418e-01]], device='cuda:0') tensor(0.7939, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
376000 特征值优化 tensor(2.1045, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-8.6395e-01, -6.1797e-02,  2.5858e-03,  1.7918e-01, -4.1891e-01,
          1.3625e+00,  1.5175e+00,  7.3383e-02,  2.3726e-01, -1.0318e+00,
          1.1974e+00,  1.3118e+00,  9.2345e-02,  1.1322e-02, -1.5860e-02,
         -4.7305e-02, -4.9637e-02, -3.7678e-03, -4.9682e-02, -5.6196e-02,
          1.1259e-01,  1.0319e-03,  2.7002e-01,  9.8194e-02,  9.8375e-03,
         -5.3417e-02, -9.3353e-02,  7.7216e-02,  2.1156e-03,  2.5428e-02,
          9.5548e-02, -1.6600e-01, -1.1026e-01, -1.0033e-01,  2.3479e-01,
          6.4671e-01,  4.1368e-01, -1.9265e-02, -7.9347e-02,  1.8517e-02,
         -9.6497e-01, -2.1917e-01, -1.1035e-01, -2.4802e-01,  3.7652e-01,
         -2.4292e-01, -5.5954e-02, -2.4864e-01,  1.5392e-01,  1.5561e-01,
         -4.9969e-02,  3.2036e-02, -7.3897e-03, -1.5282e-01, -5.8270e-02,
         -9.6779e-03,  2.7021e-01, -8.8629e-03, -7.2188e-01,  8.7766e-01,
         -8.1235e-02,  4.9135e-01, -2.5122e-01,  1.1571e-01,  1.3613e+00,
         -5.9930e-01, -1.2354e+00,  5.4472e-01,  6.2048e-01,  7.4537e-01,
          1.0750e+00, -8.4472e-01]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
377000 特征值优化 tensor(7.5726, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.7713e-01,  1.0588e+00, -9.2205e-02,  1.6090e+00, -2.4379e-01,
         -2.1929e-01,  1.6292e+00, -1.5155e+00,  1.8444e-01,  1.3299e+00,
          2.0739e+00,  1.5640e-01, -2.1983e-01,  4.4205e-02, -1.2864e-01,
          1.2995e+00, -4.2901e-01, -7.0123e-01, -2.7625e-01,  5.0445e-01,
          3.5884e-01, -1.7842e-01, -2.7305e-01, -2.3599e-03,  5.9279e-01,
         -1.0550e+00,  3.1968e-01, -1.2200e-02,  4.5305e-01, -5.4375e-01,
         -7.0607e-01, -9.3271e-01,  5.6319e-01,  1.3562e-01, -4.3943e-01,
          3.6905e-02,  5.6421e-01, -5.4947e-01,  3.1491e-01, -7.6031e-02,
          1.0521e+00,  8.7223e-01,  1.8640e+00, -1.6462e-02, -2.1554e+00,
         -1.8206e-01, -1.5704e+00, -4.6698e-02,  1.4357e+00,  2.3742e-02,
         -1.1877e+00, -9.0859e-02,  5.6144e-01,  3.6103e-01,  8.6433e-01,
          4.3054e-01,  4.8130e-01, -7.0562e-02,  1.3279e-03, -1.2411e-01,
          3.6968e-01,  9.9722e-01,  7.4929e-01, -1.1607e+00,  1.2636e+00,
         -1.0413e+00, -7.5802e-01, -1.3991e-01,  1.0243e+00, -8.0069e-01,
          5.0510e-01,  3.8889e-01]], device='cuda:0') tensor(5.1019, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
378000 特征值优化 tensor(2.3227, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.3570e-01,  1.3041e+00,  1.0062e-01,  1.2908e+00,  3.6426e-01,
         -2.1430e-02,  2.2471e+00, -1.4337e+00,  1.3153e-01,  6.0735e-01,
          2.3916e+00,  8.0532e-01, -6.7233e-03, -1.4604e-01, -1.8628e-01,
          6.0885e-01, -4.1405e-01, -1.8898e-01, -2.2484e-01,  1.3603e-01,
          8.0231e-02, -2.2247e-01, -9.6862e-03, -9.5044e-02,  1.5327e-01,
         -1.2860e-01,  2.0257e-01,  1.4220e-01,  3.7174e-04, -2.4665e-01,
         -7.8708e-02, -3.7015e-01,  6.4555e-01,  2.4582e-02, -4.2895e-02,
         -6.8643e-03,  5.3780e-01, -5.7767e-01,  1.3737e-02,  6.2873e-02,
          7.5348e-01,  2.2274e-01,  9.4299e-01,  1.4986e-01, -1.9133e+00,
          4.9577e-01, -1.0112e+00, -1.2655e-01,  8.5674e-01, -7.6645e-02,
         -4.6829e-01,  1.7654e-01,  4.8306e-01, -2.3044e-01,  4.2112e-01,
          5.0029e-01, -1.7944e-01,  1.7548e-01,  7.4841e-02,  6.0599e-02,
          1.0454e-01,  4.1996e-01,  9.4138e-01, -1.1236e+00,  2.6927e-01,
         -1.3695e-01, -3.6691e-01,  2.5079e-01,  1.0316e+00, -4.9588e-01,
         -1.2865e-01,  3.0538e-01]], device='cuda:0') tensor(1.7125, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
379000 特征值优化 tensor(2.1149, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4222,  1.0983,  0.1806,  1.1596,  0.3916,  0.2378,  2.2823, -1.0616,
          0.1645,  0.3014,  2.4853,  0.6684,  0.0264, -0.1101, -0.0702,  0.5577,
         -0.4229, -0.1281, -0.0351,  0.0121,  0.0468, -0.2306, -0.0459, -0.0803,
          0.1945, -0.0319,  0.1843,  0.1743, -0.0179, -0.2374, -0.0406, -0.3325,
          0.5963,  0.0236, -0.0220,  0.0505,  0.4849, -0.5735, -0.0138,  0.0176,
          0.7172,  0.0154,  0.8619,  0.2043, -1.9265,  0.5768, -0.9188, -0.1347,
          0.5023,  0.2812, -0.3427,  0.0915,  0.3690, -0.2157,  0.3470,  0.4274,
         -0.1726,  0.1522,  0.0640,  0.0038, -0.0333,  0.3842,  0.7766, -1.0048,
         -0.0287,  0.0166, -0.2290,  0.0756,  1.0140, -0.4325, -0.4350,  0.1618]],
       device='cuda:0') tensor(1.3982, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
380000 特征值优化 tensor(12.0613, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.2268e+00,  3.6275e-01, -3.8327e-01,  3.0454e-01, -1.5755e+00,
          1.8108e-01, -6.0050e-01, -4.4959e-01, -1.2399e-02, -2.6144e+00,
         -1.1852e+00,  1.0467e+00, -6.2103e-01,  5.9115e-01, -9.7273e-01,
          2.5005e-01,  6.7803e-01,  6.5394e-01, -2.0404e-01,  9.6734e-01,
         -2.0380e-01,  1.6736e+00, -3.6900e-02,  6.6781e-02, -4.5278e-02,
         -3.2441e-04,  5.3847e-02, -5.5177e-02,  1.6257e+00,  9.0810e-01,
         -4.6390e-01, -3.1759e-01, -2.1101e-01, -3.3860e-02,  1.2678e-01,
         -1.0543e-01,  1.0580e+00, -3.8616e-01,  2.6471e-01, -1.4393e+00,
          1.8461e-01,  4.8596e-01,  1.1927e+00,  9.9367e-02, -5.4405e-01,
         -9.6808e-02,  5.3037e-01,  5.3676e-01, -7.0795e-01,  2.4693e-01,
          2.1247e+00,  6.5553e-01, -1.4041e+00,  4.8264e-02,  2.4149e-01,
         -4.9038e-01, -1.5452e-01, -1.9155e-01,  3.3742e-01, -1.0771e-02,
         -1.1523e+00,  9.0500e-01,  7.3393e-01, -9.2317e-01, -2.6997e-01,
         -1.9710e-01,  1.1224e+00, -9.3692e-01,  4.5777e-01,  3.6290e-01,
          7.1199e-01,  5.3644e-01]], device='cuda:0') tensor(5.8427, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
381000 特征值优化 tensor(2.4676, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5950e+00,  2.5124e-01,  4.7780e-01,  6.2672e-01, -6.2327e-01,
         -2.3211e-01,  3.1824e-01, -4.6245e-01,  7.1445e-01, -2.1499e+00,
         -3.2331e-01,  1.9343e+00, -3.5376e-01,  5.6469e-02, -1.3551e-01,
          1.6737e-01,  3.9951e-01,  2.6704e-01, -8.6618e-02,  6.2552e-01,
         -3.4423e-01,  7.3977e-01, -1.9629e-02,  3.5579e-02,  1.9522e-02,
          1.1126e-02,  3.6877e-02, -8.1637e-02,  8.4619e-01,  4.9547e-01,
         -1.2903e-01,  9.6246e-03,  1.9539e-02, -2.1284e-02,  4.6567e-03,
         -2.0109e-03, -4.2476e-02, -1.0785e-02,  3.9410e-01, -7.2976e-01,
         -1.0632e-02,  6.7082e-01,  2.2636e-01,  4.7747e-01, -5.9981e-01,
          9.3926e-01,  2.6761e-01,  1.3728e+00, -8.1890e-01, -4.8774e-02,
          1.2291e+00,  2.0830e-01, -4.2954e-01,  1.0249e-01,  1.2828e-01,
         -4.8251e-02, -1.6373e-01,  8.5554e-02, -1.3092e-03,  6.8740e-03,
         -4.1539e-01,  2.7299e-01,  3.0805e-01, -1.5572e-01,  3.0790e-01,
          5.0158e-01,  1.5819e-01, -8.8309e-01, -6.2012e-02,  1.1114e-01,
          8.9951e-01,  5.2310e-01]], device='cuda:0') tensor(1.9634, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
382000 特征值优化 tensor(2.1157, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4498e+00,  3.8549e-01,  6.4282e-01,  9.7908e-01, -4.2391e-01,
         -9.1984e-02,  3.1024e-01, -2.2463e-01,  7.5921e-01, -2.0127e+00,
         -5.1110e-02,  2.0290e+00, -3.3606e-01,  1.1667e-01, -1.4517e-02,
          1.1250e-01,  3.8491e-01,  1.5645e-01, -2.8503e-02,  5.7899e-01,
         -3.1915e-01,  5.5575e-01,  6.2168e-03, -5.0653e-03,  8.4981e-03,
          3.8178e-02,  1.2565e-01, -8.6043e-02,  6.9626e-01,  3.6665e-01,
         -1.2152e-01, -8.2123e-04,  4.2041e-02, -2.5881e-02,  1.8815e-02,
          5.6582e-02,  5.4872e-03, -1.2130e-02,  3.9326e-01, -6.7867e-01,
         -1.4502e-02,  6.8921e-01,  2.8696e-01,  5.4733e-01, -6.1390e-01,
          1.0816e+00,  1.0160e-01,  1.3692e+00, -8.7750e-01,  8.2040e-02,
          1.2502e+00,  5.9011e-03, -3.2044e-01,  6.8408e-02,  1.9881e-01,
         -1.9707e-01, -1.5879e-01,  1.0505e-01, -2.3906e-02,  1.0915e-02,
         -4.1830e-01,  2.4245e-01,  2.2973e-01, -1.1069e-01,  2.0786e-01,
          5.3748e-01, -1.7573e-01, -7.6615e-01, -1.7439e-01,  1.0832e-01,
          8.4795e-01,  4.6631e-01]], device='cuda:0') tensor(0.7425, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
383000 特征值优化 tensor(3.3888, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.1116, -0.3016,  0.6389, -1.0699,  0.2843,  1.2222,  1.3027, -0.0226,
          0.9518, -0.7137, -1.8900,  2.1097, -0.0579, -0.3174, -0.1175,  0.1409,
         -0.1836,  0.0251,  0.1096,  0.0720, -0.1019, -0.1994, -0.0465,  0.0366,
         -0.4740,  0.1937,  1.3877, -0.2066,  0.0456,  0.1808, -0.0773,  0.4029,
          0.0844, -0.0214,  0.4748,  0.0301, -0.0259, -0.5295,  0.5189, -0.0359,
          0.0707,  0.2444,  0.2369, -0.8273,  0.7208, -0.0060, -0.0731, -0.3531,
          0.1328,  0.3973,  0.4015, -0.3622,  0.0199, -0.1355, -0.2862,  0.2688,
          1.1387, -1.0624,  0.4225, -0.5622,  0.3192, -0.4360, -0.2768,  0.2982,
          0.7378,  0.4072, -0.4665,  0.9066,  0.9486,  0.0821,  0.7193, -1.3267]],
       device='cuda:0') tensor(2.3019, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
384000 特征值优化 tensor(2.1393, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.7925e-01, -2.4231e-01,  5.4197e-01, -6.0150e-01,  5.7338e-02,
          7.8688e-01,  1.4239e+00,  1.0861e-01,  1.0480e+00, -6.3740e-01,
         -1.5933e+00,  2.4323e+00, -8.2185e-02, -3.1316e-02,  2.5764e-02,
          1.6031e-01, -1.0330e-01,  1.4145e-01, -5.4259e-02,  1.2049e-02,
         -5.9072e-02, -5.8180e-02, -1.7547e-02,  1.3067e-03,  2.9010e-02,
          5.5710e-02,  7.9385e-01, -4.2066e-01, -2.9193e-02,  4.6560e-02,
         -1.6753e-02,  2.9742e-01,  1.7597e-01, -1.6623e-02,  4.4380e-01,
          1.5058e-01, -4.9911e-02, -3.5452e-01,  1.8306e-01,  3.0342e-02,
          1.0198e-01,  2.8871e-01, -1.6471e-01, -1.1643e-01,  2.3439e-01,
          7.5286e-02, -9.8443e-02, -3.8941e-01,  3.0982e-01,  2.9775e-01,
          2.3879e-01, -2.0133e-01, -1.2175e-01,  4.4518e-02, -8.1405e-01,
          2.5696e-01,  8.7837e-01, -6.5657e-01,  6.5328e-01, -6.1612e-01,
          4.0690e-01, -2.9238e-01, -2.8455e-01,  1.9520e-01,  5.9541e-01,
          1.7424e-01, -6.9388e-01,  7.2301e-01,  6.0424e-01, -2.5358e-02,
          8.0586e-01, -1.2686e+00]], device='cuda:0') tensor(0.7962, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
385000 特征值优化 tensor(7.3462, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.6253e-02,  6.9037e-01, -2.6434e-01,  6.1603e-02, -9.8199e-01,
         -7.8740e-01,  7.4027e-02,  4.2290e-01,  5.6791e-01,  5.3922e-01,
          2.3128e-01,  2.3536e-01, -7.5833e-02, -6.3026e-01,  2.2063e-01,
          1.0468e-03,  3.5742e-01, -1.4266e-01,  7.6350e-01,  9.7996e-01,
          2.3884e-03, -6.7821e-01, -6.2751e-01, -9.8252e-01,  3.9415e-01,
         -5.0453e-01, -3.9738e-01, -9.4379e-01,  2.0140e-02, -1.8679e-01,
         -6.0689e-01,  2.1480e-01,  1.8393e-02, -4.7991e-01,  1.4387e-03,
          1.1832e-03,  5.7260e-01,  2.5666e-01,  3.7740e-01,  1.5507e-01,
         -8.2786e-01, -8.0582e-02,  1.2528e+00, -1.0988e+00, -3.6819e-01,
         -1.3180e+00,  6.7811e-01,  1.2332e-01, -6.7232e-01, -3.0657e-03,
          1.3414e+00, -8.7335e-02,  2.1794e-01,  1.0052e+00,  2.3389e-02,
         -3.9245e-01, -2.3060e-02,  1.8094e-01, -3.5556e-01,  4.9462e-01,
          1.0451e+00, -6.0676e-01, -3.0143e-01, -4.2184e-01,  7.8184e-01,
          3.9040e-02,  9.5458e-01,  9.5092e-01,  6.3478e-01, -1.8383e-01,
         -6.3159e-01, -5.0030e-01]], device='cuda:0') tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
386000 特征值优化 tensor(2.1889, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.2503e-01, -4.5958e-03,  2.4366e-01,  5.4651e-01, -5.8048e-01,
         -1.4012e-01, -1.6386e-01, -2.5806e-02,  2.9806e-01,  3.5843e-01,
          7.9333e-01,  3.1728e-01,  9.7147e-02, -1.3079e-01,  6.8200e-02,
          2.6434e-02, -9.6010e-03, -5.9267e-02,  6.2216e-02,  3.9642e-01,
         -6.9507e-02, -2.1672e-01, -5.7935e-02, -1.3901e-01, -1.3559e-02,
          9.6309e-03, -1.4887e-01, -3.5419e-01,  6.3590e-03, -1.0575e-01,
         -1.3996e-02,  1.0508e-03, -7.4387e-03, -2.4146e-02, -3.4728e-02,
         -7.1053e-03, -2.1562e-02, -4.8500e-02,  3.0655e-01,  1.9442e-01,
         -3.4207e-01,  2.6788e-01,  1.0319e+00, -9.0958e-01, -2.8251e-01,
         -1.0603e+00,  6.2763e-01,  3.9642e-01, -3.7527e-01,  2.4127e-01,
          8.7027e-01, -2.1102e-01,  5.5944e-02,  3.3850e-01,  7.0643e-02,
          1.2286e-02, -2.2940e-01,  1.4784e-01, -1.1947e-01,  2.0417e-01,
          2.1839e-01, -7.1191e-02,  3.8082e-01, -1.5561e-01, -8.8582e-02,
          4.6776e-01,  5.2416e-01,  3.8564e-01,  6.0143e-01,  7.4799e-02,
         -6.4861e-01,  1.1807e-01]], device='cuda:0') tensor(1.6039, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
387000 特征值优化 tensor(2.0815, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.6930e-01,  9.7044e-03,  3.2700e-01,  6.0444e-01, -5.9675e-01,
         -1.2358e-02,  7.6273e-02, -3.8382e-01,  1.7385e-01,  2.9448e-01,
          7.9721e-01,  1.7102e-01,  8.8324e-02, -1.2225e-01, -1.7449e-02,
          6.1872e-04, -1.1831e-01, -1.7945e-01, -1.3366e-03,  3.1239e-01,
         -5.6740e-02, -1.8202e-01, -1.0560e-02, -4.0760e-02,  2.7561e-02,
          5.7885e-03, -1.8923e-01, -3.4881e-01,  1.8032e-02, -6.4520e-02,
          1.2273e-02, -1.1980e-02,  7.7208e-03, -2.5996e-02, -2.1165e-02,
          2.5875e-03, -5.1748e-02,  9.0398e-02,  2.2638e-01,  1.5702e-01,
         -2.2748e-01,  2.9529e-01,  1.0428e+00, -8.1865e-01, -3.5522e-01,
         -1.1175e+00,  6.6942e-01,  4.5758e-01, -4.4520e-01,  1.2976e-01,
          7.3913e-01, -2.0454e-01,  1.0605e-01,  2.5075e-01, -4.9273e-02,
         -7.8662e-02, -2.9672e-01,  1.7970e-01, -1.1008e-01,  2.1460e-01,
          5.0888e-02,  5.0848e-02,  1.4372e-01, -1.4987e-01, -6.4277e-02,
          4.0821e-01,  4.5693e-01,  3.0822e-01,  3.6046e-02,  1.8962e-01,
         -6.5484e-01,  1.8771e-01]], device='cuda:0') tensor(1.4422, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
388000 特征值优化 tensor(3.8436, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9452e-01, -9.7783e-01,  3.1640e-01, -2.3412e-01,  9.8150e-01,
         -6.3262e-01, -2.3560e-01,  8.2555e-01, -7.4245e-01, -3.7644e-02,
         -2.7772e-01,  1.0258e+00, -3.0142e-01,  5.7686e-03,  1.9176e-04,
          1.1086e-02, -4.9709e-02,  1.6366e-01, -9.8547e-02, -1.3988e-01,
          4.7125e-01,  8.5842e-01,  4.0661e-02, -1.0660e+00, -2.1288e-02,
         -7.4212e-02,  7.7009e-03, -4.6208e-05,  3.4152e-03, -7.0861e-02,
         -3.8641e-01, -2.6143e-01,  2.6555e-01, -4.5178e-03,  5.1418e-03,
         -4.8801e-02,  1.0778e-01, -8.0883e-02, -8.6918e-02,  2.2363e-02,
         -6.3681e-01,  4.5906e-01,  5.2228e-01, -7.9356e-01,  8.0091e-01,
          8.0267e-01, -5.5756e-01,  7.6726e-01, -2.2549e-01,  1.2486e+00,
          3.4568e-01,  1.7493e-01,  3.6894e-01,  1.3131e-01, -5.9524e-02,
          2.8146e-03, -1.4101e-02, -5.6334e-02, -3.2489e-02, -2.4801e-01,
         -3.7857e-01, -7.0421e-01, -1.4620e-01, -1.6309e-01,  3.5330e-02,
          1.1440e-01,  2.4194e-01, -1.1366e-01,  1.3082e+00,  4.0416e-01,
          1.0030e+00, -2.3667e-01]], device='cuda:0') tensor(1.7905, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
389000 特征值优化 tensor(2.2138, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.4485e-01, -8.9124e-01,  5.9485e-01, -1.2235e-01, -5.2170e-02,
         -1.1104e-02, -1.4580e-01,  1.8654e-01, -2.9670e-01,  4.0847e-02,
         -8.7398e-01,  1.0631e+00, -3.0809e-01,  1.9966e-02, -2.6875e-02,
         -2.8712e-03, -4.5231e-02,  4.7005e-02, -4.0466e-02, -9.2891e-02,
          3.3711e-01,  5.0963e-01,  1.0156e-01, -4.1645e-01,  1.0174e-04,
          6.7179e-03,  3.0901e-02,  6.1815e-02, -5.4313e-03, -6.7861e-02,
         -2.1914e-02, -1.5794e-01,  6.4949e-02, -2.1919e-02,  8.7719e-03,
         -5.1853e-02,  1.6245e-02, -3.4573e-03, -2.6176e-02, -4.5858e-03,
         -2.5636e-02,  3.1946e-01,  3.1170e-01, -5.5663e-01,  7.9533e-01,
          5.6725e-01, -4.6238e-01, -5.5656e-02, -2.7248e-01,  1.3343e+00,
          3.5101e-01,  1.4584e-01, -1.7666e-01,  7.2652e-02,  3.7631e-02,
          1.7851e-02, -2.7235e-01,  1.1379e-01,  3.3492e-02,  1.4624e-02,
         -7.1916e-02, -4.2805e-01, -1.0563e-01, -2.1541e-01, -2.2054e-01,
          1.6326e-01,  1.8074e-01, -8.5756e-02,  2.8521e-01,  2.3651e-02,
          9.1071e-01, -1.1396e-01]], device='cuda:0') tensor(0.7545, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
390000 特征值优化 tensor(2.1066, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.7847e-01, -7.6824e-01,  5.6102e-01, -1.5518e-02, -4.6693e-02,
          1.3729e-01, -5.6987e-01, -2.6578e-02, -1.5738e-01,  9.5984e-02,
         -8.8778e-01,  1.1576e+00, -2.7727e-01, -3.1954e-02,  4.1080e-02,
         -1.7885e-04, -2.0551e-02,  7.3721e-03,  1.5913e-02, -1.4537e-03,
          3.2052e-01,  3.9539e-01,  7.7298e-02, -3.5408e-01, -4.0486e-02,
         -5.8226e-03, -8.6737e-03,  9.2447e-02,  3.1234e-03, -3.7621e-03,
         -2.2539e-02, -4.1825e-02,  3.7440e-02, -2.0405e-02,  3.1970e-02,
         -1.9530e-01, -1.3539e-01, -3.6327e-02, -2.4019e-02,  1.9896e-02,
         -1.9975e-03,  2.6798e-01,  8.9318e-02, -3.3854e-01,  7.3992e-01,
          3.8252e-01, -3.8724e-01, -1.9315e-01, -2.4960e-01,  1.2311e+00,
          4.6664e-01,  1.9081e-01, -1.3118e-01,  7.8452e-02,  1.0970e-02,
          1.1413e-02, -1.4456e-01,  3.6393e-02,  1.0163e-03,  3.6201e-03,
          6.3717e-02, -1.3654e-01, -4.3522e-02, -3.2795e-02, -2.2833e-01,
          1.5614e-01,  1.1177e-01, -6.5160e-02,  2.7994e-01,  1.4203e-01,
          8.4795e-01, -1.4921e-01]], device='cuda:0') tensor(0.8012, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
391000 特征值优化 tensor(7.5851, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2566, -0.2943,  0.9318,  0.2040,  1.3657,  0.8409,  0.9478, -0.2108,
          0.7424,  0.7794,  0.9619, -0.6394,  0.2448,  0.0756,  0.1085,  0.5015,
         -0.1182,  0.1302,  1.2425, -0.0106, -0.0799,  0.1198, -0.1598, -0.0778,
          1.3738, -0.0961, -1.1332,  1.8550, -0.0198,  0.2931, -0.5098, -0.6522,
          1.1263,  0.0287, -0.9119,  0.4641, -0.2029,  0.4648, -0.4635, -0.1854,
          0.2982, -0.1574, -0.3381,  0.9521, -0.5584,  0.0717, -0.1248,  0.5632,
         -1.2973,  0.0247,  0.6741, -1.8313, -0.3113, -0.4714, -0.7503, -0.0782,
          0.1198, -0.2533, -0.1347,  0.1463, -0.4747,  0.0275,  1.0737, -1.2746,
         -0.4073, -0.2207,  1.3877, -0.4774, -0.6609, -0.6376,  0.1505,  0.5278]],
       device='cuda:0') tensor(4.5093, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
392000 特征值优化 tensor(2.4558, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.3091e-01, -2.0001e-02,  1.3997e+00,  6.9484e-02,  1.2280e+00,
          3.1957e-01,  1.2676e+00,  7.5893e-01,  1.2410e+00,  6.4771e-02,
          1.3937e+00,  2.9062e-01,  2.2542e-02,  8.3751e-03, -3.4416e-02,
          1.6711e-01, -7.6486e-03, -2.7501e-02,  2.3167e-01, -5.5106e-03,
          2.8160e-04, -1.9376e-03,  4.3642e-02, -1.4499e-01,  4.2614e-01,
         -2.8858e-01, -2.3231e-01,  8.5070e-01, -1.2339e-01,  1.0285e-01,
         -1.3892e-01, -6.0724e-01,  6.5654e-01, -2.3561e-02, -2.7143e-01,
          1.4351e-01,  8.2927e-02,  1.1795e-01, -1.8122e-01, -2.6576e-02,
          1.4911e-01, -2.3398e-02, -3.3525e-01,  6.9728e-01, -1.7653e-01,
          4.5460e-02, -1.9074e-02,  1.0589e+00, -1.3971e+00,  1.8808e-02,
          1.0517e+00, -1.4024e+00,  2.1139e-01, -5.5976e-01, -3.0889e-01,
         -3.8218e-01,  3.1622e-01, -1.3827e-01, -5.7548e-03, -1.3181e-02,
          1.6613e-01, -3.2796e-01,  4.7928e-01, -6.9804e-01,  1.6361e-01,
          8.0025e-02,  5.3857e-01, -2.7335e-01, -7.9985e-02, -5.5386e-01,
          2.3635e-01, -6.7705e-02]], device='cuda:0') tensor(1.4003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
393000 特征值优化 tensor(2.1127, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5731, -0.0152,  1.3552,  0.2267,  1.0106,  0.1673,  1.2885,  1.0472,
          1.2265,  0.1454,  1.3048,  0.4568,  0.0281, -0.0070, -0.0708, -0.0016,
          0.0103,  0.0328,  0.0689,  0.0163,  0.0018,  0.0364, -0.0256,  0.0060,
          0.2694, -0.3669,  0.0292,  0.4734, -0.3622,  0.0547, -0.1340, -0.4959,
          0.6603, -0.0206, -0.0736,  0.0332,  0.0142,  0.1016, -0.2200, -0.0266,
          0.2617, -0.0218, -0.2796,  0.3496,  0.0997,  0.1186, -0.0590,  1.1588,
         -1.4193, -0.0173,  0.8801, -1.3463,  0.3544, -0.5370, -0.4621, -0.8788,
          0.1254,  0.0339, -0.0146,  0.0058,  0.2999, -0.3369,  0.4782, -0.5750,
          0.0068,  0.2172,  0.3151, -0.1422, -0.0454, -0.5331,  0.0515, -0.0058]],
       device='cuda:0') tensor(1.2863, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
394000 特征值优化 tensor(7.4199, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9137,  0.0034,  0.1171,  0.7111,  1.0746, -1.1355,  0.4427, -0.7367,
          0.0908, -0.4826, -0.1257,  1.6427,  0.1062, -0.2387, -0.2484, -0.4329,
          0.1940,  0.0666,  0.0555, -0.2439, -0.1043,  0.1506, -0.3593, -1.6891,
          0.4608, -0.0304,  0.3179,  0.1597, -1.5390,  0.0910, -0.1168,  0.5379,
         -0.2800, -0.0064, -0.0672, -0.0152, -0.2415,  0.1454,  0.0497,  0.4103,
         -0.5032,  0.2772,  0.4245, -0.7895,  0.8068, -0.1365, -0.2520, -0.4122,
         -1.0415,  0.4819, -0.0511, -0.5565, -0.2251, -0.6241, -0.1460, -0.3750,
         -0.0496,  0.0933, -0.0753, -0.0747,  1.3561, -1.1026,  1.3417, -1.0209,
         -0.1438,  0.5574, -0.2022, -1.0112,  1.1181, -0.0348,  0.2324,  1.0584]],
       device='cuda:0') tensor(4.6252, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
395000 特征值优化 tensor(2.2624, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.9465e-02,  8.9895e-05,  8.4897e-01,  5.7378e-01,  6.9123e-01,
         -3.4569e-01,  2.7714e-01,  1.1337e-01,  2.1049e-01, -1.1694e+00,
          1.0256e-01,  1.7511e+00,  1.0389e-02,  7.7980e-03,  2.6633e-02,
         -9.6337e-03, -3.6376e-02,  1.0149e-02,  2.5807e-02,  4.1748e-03,
         -2.7258e-05,  3.3543e-02, -1.7014e-01, -7.0984e-01,  4.3423e-02,
          9.2641e-02,  2.9228e-01, -5.6548e-02, -8.1210e-01,  3.9160e-02,
         -2.1102e-02,  3.6020e-01, -2.5472e-01, -2.1707e-02,  1.0312e-02,
          1.1943e-01, -7.4934e-02, -5.4254e-02, -9.3975e-02,  2.5846e-01,
         -8.6838e-02,  1.5435e-01, -1.9216e-01,  1.2102e-01,  2.1392e-01,
          2.8495e-03, -1.4625e-03,  3.8925e-01, -1.5825e+00,  7.5939e-02,
         -6.5093e-01, -1.9134e-01, -2.0847e-01, -4.6863e-02, -2.8788e-01,
         -2.3648e-01,  1.5140e-01,  3.9543e-02,  2.1782e-03,  4.6056e-02,
          1.5911e+00, -8.1700e-01,  1.4877e+00, -7.5165e-01,  1.5214e-01,
          2.9660e-01,  6.9600e-02, -6.5655e-01,  8.6874e-01, -3.9587e-01,
          8.4863e-02,  6.1009e-01]], device='cuda:0') tensor(0.9705, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
396000 特征值优化 tensor(20.4972, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2697e+00, -6.3254e-01,  5.3977e-02, -9.1957e-01, -1.1264e+00,
          1.5797e+00, -2.1149e+00, -9.8582e-01, -1.2350e-01,  1.3408e+00,
          3.4016e+00,  3.2489e-01, -3.6026e-01, -1.0350e+00, -2.5359e-02,
          1.4991e+00, -2.0598e-03,  8.1520e-01,  3.9462e-01,  9.4838e-01,
          2.1781e+00,  8.6559e-01,  6.0065e-01, -1.1162e+00, -1.1629e+00,
          4.3152e-02,  1.8606e+00, -2.3018e+00,  8.8044e-01, -4.5461e-01,
         -4.1428e-01,  4.6261e-01, -4.3462e-01, -1.0145e-01,  2.2759e+00,
         -1.2466e+00, -1.6557e-01, -7.6273e-01, -1.1547e+00, -7.6359e-01,
          1.2386e+00,  2.0882e-01, -7.5375e-01, -1.8143e+00,  4.5465e-01,
         -7.9602e-01,  5.4393e-01, -4.3964e-02, -5.6505e-01,  2.9144e+00,
         -3.8426e-01, -1.4823e+00,  1.1229e+00, -3.1480e-01,  9.9258e-01,
         -6.5904e-01, -1.2639e+00,  8.0914e-01, -1.0577e+00, -1.4292e+00,
         -1.0150e+00,  1.9393e+00,  1.0024e-01, -1.8150e+00, -1.0344e+00,
         -1.4110e+00,  1.1707e-03, -6.5826e-01,  1.0222e+00,  3.7867e-01,
          2.1688e+00, -1.1683e+00]], device='cuda:0') tensor(10.6787, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
397000 特征值优化 tensor(5.3926, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1310, -1.6213,  0.8828, -1.7280, -0.3963,  2.4861, -0.9900, -2.0388,
          1.0098,  2.0085,  3.6399,  1.4416, -0.6684, -0.1596,  0.1271,  0.5822,
          0.2817,  0.2426, -0.4393, -0.0048,  1.2638,  0.2225,  0.1234, -0.2845,
         -0.4985, -0.3021,  0.8647, -1.2409,  0.1175, -0.2383, -0.0343,  0.1114,
         -0.3932, -0.1599,  1.3038, -0.7859,  0.1168, -0.3988, -0.2991, -0.1270,
          0.9082, -0.0083,  0.1409, -0.8926,  1.3313, -1.0325, -0.0350,  0.2604,
         -1.1495,  2.1915,  0.1459, -0.6620,  0.6479, -0.2863,  0.0502,  0.0149,
         -0.2932, -0.1129, -0.3579, -0.6003, -0.1173,  0.7198,  0.8091, -0.9098,
          0.1369, -1.6387,  0.7227, -1.1995,  0.6252,  0.5440,  1.2115, -1.0378]],
       device='cuda:0') tensor(2.6027, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
398000 特征值优化 tensor(2.3025, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.2182, -2.7538,  1.3889, -1.6700, -0.1350,  2.7763, -0.4850, -1.6826,
          1.4708,  2.0986,  2.6290,  2.0406, -0.7130,  0.0095,  0.0204,  0.1459,
          0.1747,  0.3796, -0.2332, -0.0040,  0.9211,  0.0290,  0.0297, -0.0914,
         -0.4591, -0.3229,  0.4927, -0.6357,  0.0335, -0.0467, -0.0196,  0.0392,
         -0.0979, -0.0123,  0.9677, -0.8555,  0.1282, -0.3333, -0.0392,  0.0964,
          0.6364,  0.0784,  0.3116, -0.4940,  1.4796, -0.7154, -0.4217, -0.1619,
         -0.6855,  1.7791,  0.1906, -0.4953, -0.0955,  0.0739,  0.0186, -0.0618,
         -0.0049, -0.4295, -0.5195, -0.7541,  0.3315,  0.3002,  0.3912, -0.3955,
          0.6463, -1.2074,  0.7738, -1.1394, -0.3138,  0.7748,  0.7213, -1.0323]],
       device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
399000 特征值优化 tensor(2.1444, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1176, -2.7603,  1.5727, -1.5961,  0.0543,  2.8572, -0.4688, -1.1709,
          1.5488,  2.0861,  1.9084,  2.1795, -0.6813, -0.0056,  0.0095,  0.1932,
          0.1419,  0.4788, -0.4514,  0.0216,  0.9188, -0.0476,  0.0113, -0.1470,
         -0.4220, -0.3832,  0.4630, -0.5215,  0.0387,  0.0294, -0.0233,  0.0553,
         -0.0525, -0.0822,  0.9206, -0.8654,  0.0972, -0.2163, -0.0915,  0.0702,
          0.2908,  0.0617,  0.1902, -0.2450,  1.3610, -0.5888, -0.4871, -0.3084,
         -0.4179,  1.4777,  0.2013, -0.4483, -0.1634,  0.1001, -0.0330, -0.0302,
          0.0731, -0.3982, -0.7361, -0.8411,  0.3446,  0.2620,  0.4454, -0.2862,
          0.7257, -1.1325,  0.7934, -1.0795, -0.6601,  0.4558,  0.6844, -1.0238]],
       device='cuda:0') tensor(0.9122, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
400000 特征值优化 tensor(2.0972, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1127, -2.7068,  1.6363, -1.5366,  0.1297,  2.8943, -0.4354, -0.8619,
          1.5698,  1.9968,  1.4663,  2.2905, -0.6527,  0.0129, -0.0058,  0.1419,
          0.0099,  0.4124, -0.4924,  0.0618,  0.9058, -0.1405,  0.0587, -0.2185,
         -0.4094, -0.3783,  0.4799, -0.4991,  0.0396,  0.1225, -0.0256,  0.0376,
         -0.0724, -0.0967,  0.9111, -0.8622,  0.0402, -0.0644, -0.0853,  0.0759,
          0.0763,  0.0918,  0.1203, -0.0497,  1.2374, -0.5368, -0.5320, -0.3241,
         -0.3147,  1.3550,  0.1929, -0.4273, -0.2236,  0.1359,  0.0364,  0.0247,
          0.1138, -0.3754, -0.8161, -0.7482,  0.3797,  0.2205,  0.4419, -0.2005,
          0.7323, -1.1295,  0.8219, -1.0413, -0.7097,  0.1279,  0.7135, -0.9261]],
       device='cuda:0') tensor(0.9762, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
401000 特征值优化 tensor(4.2908, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3093e-01, -9.9104e-01,  9.2711e-01,  3.6757e-01,  4.8725e-01,
          5.0531e-01, -7.4266e-02, -3.4854e-02,  8.6483e-01, -4.9305e-01,
          1.5174e+00, -1.8025e-01, -2.6066e-01, -1.3699e-02, -1.3892e-01,
         -5.5238e-02,  4.2738e-02, -2.0390e-01,  7.0192e-01, -3.0653e-02,
         -9.2378e-02, -1.2963e+00, -4.0455e-02,  1.3902e-01,  2.1728e-01,
          5.6727e-02,  1.1016e-01, -9.2569e-02, -2.9033e-01, -9.3504e-04,
         -1.3973e-01, -3.7326e-02, -6.1590e-02, -2.1747e-02, -2.3819e-02,
         -2.2530e-02,  1.3229e-01, -1.2356e+00,  5.0060e-01, -4.7772e-01,
          2.8631e-02,  3.9670e-01, -2.2985e-01, -1.2495e-01, -5.0003e-02,
         -6.2717e-02,  1.4649e-01,  1.7529e+00,  8.9948e-01, -1.9353e-02,
         -5.3216e-01,  1.6236e-01, -3.4831e-01,  4.6024e-02,  2.7464e-01,
         -4.3823e-01, -2.9962e-01,  1.8999e-01,  6.0818e-02, -2.2472e-01,
          4.2233e-01,  6.1376e-01,  3.3853e-01, -2.6469e-01, -2.4261e-02,
          4.6316e-01,  3.0714e-01, -2.5224e-01,  2.1748e+00,  5.3520e-01,
          1.8340e-01,  1.3447e-01]], device='cuda:0') tensor(2.7492, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
402000 特征值优化 tensor(2.1664, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4037e-01, -3.3668e-01,  1.5553e+00,  2.5667e-01, -1.1261e-01,
         -3.0368e-02,  2.8820e-01,  8.0743e-02,  9.8905e-01, -5.3746e-01,
          1.9698e+00,  1.1466e-01, -2.1537e-02, -1.8365e-02, -4.1661e-02,
          1.1645e-01,  6.4039e-02, -1.9396e-01,  2.9762e-01, -4.5871e-02,
         -2.2436e-03, -8.1115e-01, -4.4973e-02,  7.3255e-02,  8.4852e-02,
         -7.3912e-02, -3.4872e-02, -1.1521e-01, -2.0730e-01, -4.1140e-02,
         -2.2524e-02, -4.1710e-02, -1.3474e-02,  2.3991e-02,  1.1395e-03,
          3.4058e-03,  1.3188e-01, -8.3366e-01,  4.1896e-01, -3.1843e-01,
          1.9867e-01,  3.0249e-01, -3.2096e-01,  8.9681e-02,  8.9234e-02,
          1.3579e-01,  1.3498e-02,  1.4331e+00,  6.2554e-01, -2.7521e-01,
         -7.9798e-01,  1.3669e-01, -3.5469e-01,  1.9378e-01,  1.2163e-01,
         -8.7556e-01, -2.7101e-01,  2.2167e-01, -5.1032e-02, -1.0184e-02,
          8.3622e-02,  3.2856e-01,  2.5027e-01, -3.6595e-01, -3.6103e-01,
          4.7365e-01,  1.8535e-01, -1.9109e-01,  2.0125e+00,  1.6157e-01,
         -2.2375e-01,  2.0738e-01]], device='cuda:0') tensor(0.7329, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
403000 特征值优化 tensor(16.9530, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4612, -0.1286, -1.0018,  0.0786, -0.0592, -0.6088, -1.2211,  0.6218,
         -0.4518,  0.4551,  0.9600,  1.4681,  0.0328, -1.2084, -0.9073, -0.6955,
          0.2065,  0.8208,  1.1548, -0.3995, -0.0341, -0.7618,  0.5101,  0.3804,
          1.7606, -0.3868,  0.2090,  0.7547, -0.4590, -1.4084,  1.4224, -0.6979,
          1.7774,  0.4392,  0.7565,  0.4338,  1.1310,  0.1651,  0.5415, -0.2427,
          0.4185, -0.2839,  0.2007, -0.5705, -0.1517, -1.1167,  0.5230, -0.0374,
          2.2770, -1.3893,  0.3016, -2.0384,  0.8842, -1.1862, -0.7650, -0.5786,
          1.4371, -1.2070,  1.5532,  0.4151,  1.2101,  0.2064,  0.2691, -0.3565,
         -0.2110, -0.0882,  0.5410,  1.5149,  0.3519,  1.8127, -0.7749, -0.6785]],
       device='cuda:0') tensor(9.0793, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
404000 特征值优化 tensor(3.6248, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4164e-02,  2.4311e-01,  1.0164e-01,  3.4747e-02,  6.5166e-01,
         -6.4156e-01, -2.7272e-01,  8.5836e-01,  2.3204e-01,  4.7201e-01,
          1.8629e+00,  1.7537e+00, -3.4780e-03, -3.1710e-01, -1.2864e-01,
          9.1689e-03, -1.3984e-02,  2.0658e-02,  2.4925e-01, -1.2202e-02,
          4.9445e-02,  9.4764e-03,  1.1488e-01,  9.4722e-02,  6.5537e-01,
         -8.3048e-02,  1.1259e-01,  9.1338e-02, -2.1066e-02, -4.8454e-01,
          4.6536e-01, -5.5850e-01,  9.8848e-01, -1.0429e-03,  4.1051e-01,
          6.3377e-01,  3.4756e-01,  3.0795e-02,  7.2992e-02, -1.3946e-01,
         -3.1873e-01, -1.4407e-01, -1.2172e-01, -4.9547e-02,  2.3678e-01,
         -3.3344e-01,  8.2935e-02,  1.0718e+00,  1.5605e+00, -1.5246e+00,
          1.0997e+00, -1.0770e+00,  1.4773e+00, -1.3201e+00, -4.8727e-01,
         -8.2458e-01,  1.4960e+00, -8.1239e-01,  6.4511e-01,  3.1333e-01,
          9.8686e-01,  4.7751e-02,  2.9821e-01, -3.3589e-01,  2.3753e-02,
         -3.9461e-01, -4.5855e-01,  9.2116e-01,  8.2555e-01,  7.9062e-01,
         -2.5080e-01, -4.9719e-01]], device='cuda:0') tensor(1.6105, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
405000 特征值优化 tensor(2.1466, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.3317e-02,  1.0807e-02,  2.3358e-01, -1.9676e-01,  9.0602e-01,
          7.6940e-02, -2.8413e-02,  1.2996e+00,  1.8254e-02, -6.1274e-02,
          2.1578e+00,  1.6258e+00, -2.1927e-02, -5.1611e-02, -5.6537e-02,
         -5.8335e-02, -4.8488e-02, -6.6487e-04,  1.3819e-02, -1.4762e-02,
         -2.1329e-03,  2.4330e-02, -1.0217e-01,  7.6425e-02,  3.0372e-01,
          5.1402e-02, -7.4421e-02,  1.0397e-01, -1.6541e-03, -2.9888e-01,
          2.5827e-01, -4.7580e-01,  7.4936e-01, -1.5606e-02,  2.8557e-01,
          5.0856e-01, -1.4549e-03, -1.2092e-01,  9.3528e-02, -4.6752e-02,
         -4.5061e-01, -1.6215e-01, -1.5248e-01,  9.0816e-02,  1.1033e-01,
         -9.1303e-02,  4.8380e-02,  1.2138e+00,  1.0863e+00, -1.6765e+00,
          1.1223e+00, -8.8907e-01,  1.5417e+00, -1.3152e+00, -5.0729e-01,
         -1.0408e+00,  6.4155e-01, -3.1144e-01,  2.2805e-01,  4.7435e-01,
          4.9954e-01, -3.7431e-02,  3.3128e-01, -2.1402e-01, -5.6807e-01,
         -1.7540e-01, -1.8086e-01,  5.1942e-01,  7.6582e-01,  4.2853e-01,
         -2.6006e-02, -2.7079e-01]], device='cuda:0') tensor(0.9505, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
406000 特征值优化 tensor(10.2079, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9103, -0.9357,  1.2076,  0.6984,  0.9501, -0.4569, -0.9358,  0.2464,
          0.8252,  0.6149, -1.2083,  0.8356,  0.1395, -0.8432,  0.3279,  0.3059,
          0.9319, -0.1716,  0.1000,  1.5114,  0.3219, -2.3117,  0.0904,  0.5530,
         -0.5592,  0.6790, -0.0685,  0.4217, -0.0032, -0.1488,  0.0698,  0.1464,
         -1.2301,  0.2582, -0.1290, -0.3878,  0.1150, -0.1465, -0.0975, -0.5789,
          0.1872,  0.5730,  0.3022, -1.0699,  0.4650,  1.1345,  0.0127,  0.1107,
         -0.5337, -0.0591,  0.9381, -0.6647,  0.9826, -0.7454, -0.3157,  0.2557,
         -0.4866, -0.7105, -0.1078,  0.2630,  0.1860,  0.4691, -0.6179, -0.2958,
         -0.5246,  0.3172, -0.0603, -0.0072,  0.2476,  0.0853, -0.2800,  0.3111]],
       device='cuda:0') tensor(5.4316, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
407000 特征值优化 tensor(2.7453, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3935e+00, -1.1401e+00,  2.2356e+00,  6.0904e-01,  9.2926e-01,
         -7.2077e-01, -4.4578e-01,  4.5777e-01,  4.4429e-01,  1.3306e-02,
         -6.4034e-01,  6.2679e-01,  1.1043e-01, -1.6789e-01,  1.8884e-01,
          1.8249e-01,  2.0885e-01, -3.2774e-02,  4.0461e-02,  1.0313e+00,
          1.3242e-01, -1.3156e+00,  4.6245e-02, -5.3973e-03, -7.5455e-02,
          6.3765e-02,  9.6765e-03, -5.1858e-02, -1.0614e-02, -6.8942e-02,
          1.4311e-01,  1.2844e-02, -4.6814e-01,  1.8453e-01,  1.6617e-03,
         -3.0058e-03, -1.0475e-03, -2.1080e-02,  1.1552e-01, -2.3284e-01,
          6.5163e-03,  3.6642e-01,  7.3308e-01, -1.5340e+00,  1.4610e-01,
          1.0086e+00,  4.9996e-02,  1.0423e+00,  2.9474e-01,  7.4839e-01,
          5.8823e-01, -3.6558e-01,  7.3389e-01, -3.6527e-01, -1.4835e-01,
          9.2501e-03, -1.6697e-01, -1.3105e-01, -3.0700e-01,  1.8041e-01,
         -1.3132e-03,  1.6611e-01, -2.9114e-01, -1.9435e-02, -5.9304e-01,
          2.0512e-01, -3.4996e-02, -8.8384e-02,  6.7214e-01, -1.2215e-01,
         -4.0639e-01,  3.8167e-01]], device='cuda:0') tensor(1.7918, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
408000 特征值优化 tensor(2.0805, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4148e+00, -1.2133e+00,  2.5517e+00,  8.5143e-01,  3.8963e-01,
         -7.2441e-01, -2.2957e-01,  4.7037e-01, -6.6299e-02, -3.1769e-02,
         -7.0586e-01,  2.4830e-01,  4.8653e-02,  2.0615e-03,  1.1917e-01,
          6.0448e-02,  1.7241e-02, -2.0122e-03, -9.9595e-03,  9.5731e-01,
          6.1850e-02, -1.0908e+00,  2.3020e-02, -1.9361e-02, -9.3980e-02,
          3.4364e-02,  1.0865e-01,  1.0801e-01, -4.4904e-03, -3.9434e-02,
          6.2341e-02,  4.0199e-02, -5.7028e-02,  2.0414e-01,  1.0253e-02,
         -9.3627e-03, -2.6811e-02, -1.5713e-02,  5.0862e-02, -1.0392e-01,
          2.8439e-02,  1.3990e-01,  7.0310e-01, -1.6246e+00,  2.4223e-01,
          1.1483e+00, -2.3507e-02,  9.8068e-01,  3.2053e-01,  7.3003e-01,
          4.7466e-01, -3.9921e-01,  7.6881e-02,  6.5813e-02, -7.2369e-02,
         -1.1395e-01, -2.3303e-01, -1.0324e-01, -2.9033e-01,  2.6581e-02,
         -1.1866e-01,  1.4392e-01, -2.6042e-01, -1.5928e-02, -4.3528e-01,
          1.5969e-01,  2.3613e-01, -2.0162e-03,  3.4839e-01,  1.6031e-01,
         -4.4254e-01,  1.6630e-01]], device='cuda:0') tensor(0.9296, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
409000 特征值优化 tensor(9.2905, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6754e+00, -6.6588e-01, -6.4278e-01, -6.4221e-01, -2.1344e-01,
          2.2384e-01,  2.6919e+00, -1.7010e-01, -1.1658e+00, -3.4882e-01,
         -5.3932e-01, -2.3136e+00, -4.0203e-01,  4.4549e-02, -7.5463e-02,
          1.3851e+00, -7.2282e-01, -6.5810e-01,  1.9898e-01,  6.6857e-01,
          1.0703e+00,  5.6551e-01,  9.1102e-01,  1.8765e-02,  1.1504e+00,
         -6.9728e-02,  2.2985e+00, -4.4199e-01,  1.5154e-01,  1.5282e+00,
         -1.3835e-02,  1.5822e-03, -2.4781e-02,  3.7761e-02,  1.1142e-01,
          1.6563e-01, -2.3748e-01, -2.0186e-02,  7.1718e-01, -1.1104e+00,
          4.4434e-03,  4.7635e-01,  2.0896e+00, -4.9502e-01, -2.0390e-03,
         -5.0245e-01,  1.2050e-01,  1.6183e+00,  1.1410e+00, -3.5319e-03,
         -2.3998e-01,  4.6443e-01, -2.3159e-01,  1.0805e-01,  4.6700e-01,
          1.0803e-01, -1.3332e-01, -3.8394e-02,  4.4814e-01,  4.9633e-01,
         -6.8408e-01, -7.4472e-01, -3.3879e-01,  1.8539e-01,  1.0226e+00,
          1.1955e+00, -4.0961e-01, -1.5041e-01, -1.7200e-01,  9.1879e-01,
         -7.5701e-01,  2.7683e-01]], device='cuda:0') tensor(5.4397, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
410000 特征值优化 tensor(3.1650, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0683e+00, -7.5266e-01,  2.9305e-01, -3.1650e-01, -1.9701e-01,
          9.7198e-02,  3.2065e+00, -1.7138e-01, -4.5656e-01, -5.4190e-01,
          1.9474e-01, -1.3870e+00, -4.6112e-01, -4.8394e-02, -4.9832e-02,
          4.5379e-01, -4.7273e-01, -7.8224e-02, -2.8716e-02,  5.1803e-01,
          6.2220e-01,  2.8333e-01,  1.8567e-01, -3.3043e-02,  5.9977e-01,
          4.6240e-02,  1.2445e+00, -1.9893e-01,  2.3091e-01,  6.5229e-01,
         -2.9861e-02,  6.4193e-03, -6.3297e-03,  2.5132e-02,  1.8546e-03,
          1.0436e-03, -1.1871e-01,  9.6776e-02,  4.2120e-01, -3.7465e-01,
         -1.0853e-01,  2.0126e-01,  1.0333e+00, -7.2660e-01,  4.8927e-01,
         -1.0766e+00,  1.2279e-01,  8.8640e-01,  8.4372e-01, -4.5343e-01,
         -9.8907e-02,  2.8277e-01, -2.2658e-01,  1.3554e-01,  1.0396e-04,
          3.7491e-03, -1.7767e-01,  1.4203e-01, -1.9875e-02,  1.1368e-01,
         -1.1208e+00, -1.7335e-01, -1.1716e-01, -6.2933e-02,  6.0070e-01,
          4.7577e-01, -3.4262e-02, -2.1514e-01, -4.1710e-01,  3.6176e-01,
         -1.2935e-01, -1.4667e-02]], device='cuda:0') tensor(1.2309, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
411000 特征值优化 tensor(2.1468, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0677e+00, -8.9993e-01,  6.2405e-01, -3.7237e-01, -1.4095e-01,
          5.4051e-02,  2.8308e+00, -3.2037e-01, -3.5009e-01, -3.1101e-01,
          1.4397e-02, -9.8120e-01, -4.9008e-01, -5.8999e-02, -6.1953e-02,
          2.8243e-01, -5.7305e-01, -7.6544e-02, -3.2221e-02,  4.2468e-01,
          5.4457e-01,  1.5477e-01, -2.5963e-03,  2.7463e-03,  1.4432e-01,
         -2.1769e-02,  4.4153e-01, -5.7908e-02,  2.1331e-01,  3.8860e-01,
         -2.2707e-02, -6.9774e-02,  7.0909e-03,  2.7299e-02,  3.1766e-02,
         -2.5870e-04, -2.2078e-01,  5.6655e-02,  2.3987e-01, -1.9325e-01,
         -4.5824e-02,  1.0237e-01,  9.0750e-01, -7.6429e-01,  4.6592e-01,
         -1.1505e+00,  1.1565e-01,  3.0522e-01,  8.6429e-01, -4.8229e-01,
          1.5425e-01,  1.0188e-01, -1.5616e-01,  1.1372e-01,  1.1414e-02,
          3.2322e-02, -2.7298e-01,  2.2107e-01, -1.5056e-01,  3.1889e-01,
         -1.3277e+00,  3.9340e-01,  1.1157e-01, -1.2018e-01,  2.8543e-01,
          3.9203e-01,  1.9627e-01, -1.6436e-01, -2.8839e-01,  1.8654e-01,
         -1.9568e-01, -1.7974e-01]], device='cuda:0') tensor(0.7881, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
412000 特征值优化 tensor(9.6875, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.5433e+00, -7.7082e-02, -6.4746e-01,  5.7700e-01, -1.3051e+00,
          3.4394e-01,  1.2004e-01, -2.8073e-01, -1.1172e+00,  1.2462e+00,
          6.3491e-01,  1.4556e+00, -2.4548e-01, -2.1501e-01,  4.0979e-01,
         -1.2143e+00, -4.3697e-01,  5.9808e-02, -8.3965e-01,  4.8913e-01,
          4.9652e-01,  3.6690e-01,  1.2688e+00,  3.3563e-01, -1.0890e+00,
         -9.2523e-02,  6.3558e-01,  1.2011e+00, -5.3166e-01,  2.8194e-01,
         -2.0467e-01,  1.0014e+00, -9.3383e-02, -1.7647e-01,  5.1489e-01,
         -7.0398e-01,  2.8723e-01, -2.3970e-01, -1.5090e-01,  3.8287e-01,
         -5.9721e-02,  2.7354e-02,  9.9506e-01,  3.8170e-01,  3.5149e-01,
         -2.9978e-01, -2.4431e-01,  8.8776e-02,  5.0306e-01, -6.6689e-01,
          5.2417e-01,  9.9971e-01, -1.0053e+00,  2.5862e-01, -4.3966e-01,
          2.9759e-01,  3.1074e-01, -2.1506e-01,  8.8765e-02,  3.6844e-01,
          1.3674e+00, -8.7169e-01, -5.0663e-04, -3.4559e-01, -8.6420e-01,
         -4.1306e-01,  6.9602e-01, -1.9658e+00,  1.2686e+00,  7.7492e-02,
         -8.9232e-02, -8.4279e-01]], device='cuda:0') tensor(4.4174, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
413000 特征值优化 tensor(2.3256, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.7040e+00, -2.1563e-02,  7.5440e-02,  6.7245e-01, -5.3385e-01,
          6.1140e-01,  7.8034e-01,  7.7999e-01, -2.3734e-01,  4.6427e-01,
          3.7622e-01,  2.1954e+00, -2.1941e-02, -2.6976e-03, -7.5107e-02,
         -2.4523e-01,  2.3052e-02,  3.9094e-03, -1.0528e-01,  4.8963e-02,
         -5.7957e-04, -1.6296e-02,  2.8792e-01,  5.6036e-02, -2.5331e-01,
          1.0209e-01,  2.1855e-01,  3.4791e-01, -1.5169e-01,  4.3361e-02,
          1.3516e-01,  3.6787e-01, -2.0218e-01, -2.2591e-05,  3.8625e-01,
         -5.6231e-01,  2.6307e-02, -1.7104e-02,  5.0050e-02,  4.8824e-02,
         -1.2426e-02, -2.3077e-02,  5.8049e-01,  7.3200e-02,  6.6853e-02,
          6.2410e-03,  2.3014e-03, -4.0001e-02,  3.7109e-02, -1.5268e-01,
         -4.4348e-01,  1.4351e-01, -4.3137e-01, -1.1801e-02, -1.0974e-01,
         -1.1513e-01,  2.8737e-01,  7.8120e-02,  8.4387e-01,  7.8152e-01,
          1.4805e+00, -7.9700e-01,  9.7930e-01, -5.4595e-01,  4.4840e-02,
         -5.1083e-01,  1.0217e+00, -1.0546e+00,  5.6878e-01, -1.9486e-01,
          6.7215e-01, -1.0556e+00]], device='cuda:0') tensor(1.9340, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
414000 特征值优化 tensor(2.1030, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.3788e+00, -2.5149e-02,  1.4869e-01,  6.2451e-01, -7.6029e-01,
          7.0187e-01,  9.2990e-01,  7.0273e-01, -1.6560e-01,  5.4969e-01,
          4.4496e-01,  2.2711e+00, -2.1664e-02, -9.7202e-02,  1.4750e-02,
         -2.1077e-02,  6.0126e-02,  1.0552e-01, -1.3788e-02,  4.8287e-02,
         -4.8711e-04, -2.4493e-02,  5.7711e-02,  3.4211e-02, -9.9820e-02,
          2.7416e-02,  2.2825e-01,  1.7902e-01, -3.4918e-02,  5.0891e-02,
          1.6350e-01,  2.3022e-01, -1.7982e-01,  1.1209e-01,  3.4243e-01,
         -5.2511e-01,  7.5232e-02,  1.4637e-02, -3.8664e-02,  1.3198e-01,
          2.1078e-02, -7.2548e-02,  4.4614e-01,  9.2717e-02,  9.0777e-02,
          5.8967e-02, -2.4564e-02, -2.7660e-01,  5.2089e-02,  5.3031e-02,
         -3.4843e-01,  1.2969e-01, -4.0935e-01, -1.2284e-02, -3.7489e-01,
          7.8931e-02,  2.2080e-01,  1.4734e-01,  8.3610e-01,  9.1527e-01,
          1.4936e+00, -6.9220e-01,  1.0659e+00, -5.4650e-01,  1.4081e-01,
         -4.9872e-01,  8.5390e-01, -9.5702e-01,  5.3886e-01, -1.9957e-01,
          7.7839e-01, -9.2947e-01]], device='cuda:0') tensor(0.6510, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
415000 特征值优化 tensor(9.9700, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2211, -1.8525,  0.6109,  1.9948, -0.1888,  1.7836,  0.3120, -0.1246,
          0.2432, -0.1890, -1.0577,  0.8340, -0.6087, -0.2068, -0.3377, -0.5637,
          0.3932,  0.1105,  0.3283,  0.0238,  0.1002,  0.4480,  0.2702,  0.1067,
          0.0860,  0.1344, -0.0290,  0.9067, -1.1092,  0.4433,  0.1278,  0.2771,
          0.0782, -0.1654,  1.5654,  0.6502,  0.7627, -0.0684,  0.0436, -1.1500,
          0.4842,  0.0563,  0.1580,  0.7132, -1.0309,  0.0504, -0.4843,  0.4192,
          0.5895,  0.4857, -0.0360,  1.7377,  0.3112, -1.1836,  1.0068,  0.3411,
         -1.4017, -0.7137, -0.9879,  0.6801,  0.1320,  0.2675,  1.2190,  0.7233,
          0.3270, -0.1029, -0.9732,  0.8558,  0.1312,  0.0878, -0.0979, -0.7190]],
       device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
416000 特征值优化 tensor(2.3664, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0753, -0.4789,  1.1935,  2.1984,  0.3495,  2.5975,  0.5177, -0.0921,
          0.9355, -0.9458, -0.5748,  1.3103, -0.1387,  0.0048,  0.0504, -0.0586,
          0.0030,  0.0191, -0.0678,  0.0371, -0.0047,  0.5350,  0.3234,  0.3736,
         -0.0401,  0.1567,  0.0953,  0.3179, -0.4226,  0.3770, -0.0053,  0.3010,
         -0.0226, -0.0273,  0.7125,  0.5877,  0.2118,  0.1083,  0.2954, -0.5704,
          0.0908,  0.3058, -0.2061,  0.5516, -0.3015,  0.1364, -0.1873,  0.8484,
          0.1307,  0.0563, -0.5644,  1.0160,  0.8631, -0.5550,  0.3962,  0.2004,
         -0.5812, -0.4488, -1.1580,  0.6974,  0.2092,  0.2171,  0.3241,  0.1025,
          0.9510, -0.2447, -1.1606,  0.4087,  0.3537,  0.2437,  0.4525, -0.1530]],
       device='cuda:0') tensor(1.5639, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
417000 特征值优化 tensor(2.1527, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1174, -0.2162,  1.2492,  2.1913,  0.3136,  2.6424,  0.6582, -0.2293,
          0.9834, -1.1159, -0.4894,  1.2636, -0.0879, -0.0091,  0.0198, -0.0232,
          0.0658, -0.0096, -0.0333,  0.0119, -0.0608,  0.5491,  0.2928,  0.3839,
         -0.1846,  0.2404,  0.1638,  0.2247, -0.3586,  0.3471, -0.0167,  0.2489,
          0.0053, -0.0301,  0.6581,  0.5931,  0.1052,  0.0437,  0.3797, -0.5115,
          0.0411,  0.3724, -0.1504,  0.1271, -0.0572,  0.1288, -0.1416,  0.4417,
          0.2405,  0.1219, -0.3366,  0.7775,  0.8611, -0.4704,  0.2410,  0.0489,
         -0.4915, -0.3936, -1.1499,  0.6637,  0.0173,  0.1247,  0.2133,  0.0562,
          0.9697, -0.3084, -1.0558,  0.3429,  0.2157,  0.2568,  0.5409, -0.0773]],
       device='cuda:0') tensor(1.3517, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
418000 特征值优化 tensor(13.4880, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7566, -0.9123, -0.7024, -0.5306, -0.3508,  0.3562,  0.6936,  0.2236,
          0.6761, -0.0814,  1.7478,  0.2149,  0.1001,  0.5028, -0.1129, -0.7654,
          0.1819, -0.0146, -1.4503,  0.1176,  1.6675, -1.2428, -0.0231, -0.9194,
          0.2365, -0.6122, -1.2572,  1.8236, -0.0369, -0.1136, -0.1581,  0.6902,
         -0.1755,  0.1906,  0.6222,  0.3954,  0.1001, -0.0210, -0.1466, -0.2881,
         -0.3509,  1.0786,  0.1783,  0.3956,  0.3981, -2.5294, -1.4432, -0.3828,
         -1.9530,  0.0698, -1.3431,  1.1017,  0.8879, -0.0301, -0.0854,  0.0637,
          1.4574, -0.7909, -0.1472,  0.9194,  1.1732, -0.6140,  0.5539, -0.2131,
          0.0732, -1.0800,  0.1353, -0.0416, -0.0036,  0.6042, -0.5103, -0.6847]],
       device='cuda:0') tensor(7.0271, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
419000 特征值优化 tensor(2.4300, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.6198e+00, -9.7886e-01,  1.9020e-01,  1.9638e-01, -2.0783e-01,
          3.7615e-02, -2.1709e-01, -1.7869e-02,  8.3019e-01, -9.5285e-01,
          9.3717e-01,  1.2656e+00, -5.9441e-01,  1.3562e-02,  3.5917e-02,
         -7.8610e-02,  2.7689e-02, -4.4209e-01, -6.4966e-01,  2.1798e-01,
          8.6833e-01, -3.9297e-01,  4.9905e-02, -8.4704e-02, -3.2358e-01,
         -7.1233e-02, -2.3190e-01,  7.1930e-01, -8.4254e-03, -1.1775e-01,
         -2.1740e-02,  1.6934e-02, -2.8862e-03,  3.4314e-02,  3.8959e-01,
          2.1150e-01, -1.8535e-02,  7.0606e-03,  9.8219e-02, -1.4003e-01,
          1.3974e-01,  1.6570e-01,  1.6498e-01,  4.4978e-01,  4.5174e-01,
         -1.6941e+00, -5.3153e-01,  4.4783e-01, -9.3807e-01,  9.6552e-01,
         -4.9500e-01,  5.1376e-01, -1.9598e-01,  1.3540e-01,  6.4596e-02,
          1.2018e-01,  4.6487e-01, -1.6756e-01,  2.5509e-01, -7.0997e-02,
         -1.1830e-02,  3.9106e-02,  2.5013e-03,  1.7878e-02,  2.5797e-01,
         -6.4899e-01,  2.0448e-01,  3.6241e-01, -5.3325e-01,  3.4511e-01,
         -8.3417e-01, -1.5919e-02]], device='cuda:0') tensor(1.1414, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
420000 特征值优化 tensor(2.1416, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7447e+00, -1.1739e+00,  2.0066e-01, -5.0155e-02,  1.3491e-01,
          3.9063e-01,  1.1212e-01,  9.6797e-05,  7.9308e-01, -1.0898e+00,
          5.8072e-01,  1.6037e+00, -5.4840e-01, -2.1920e-03, -1.7076e-04,
          3.1672e-02, -2.4956e-02, -2.9419e-01, -3.3467e-01,  8.4434e-02,
          8.0737e-01, -2.5741e-01,  4.3254e-03, -4.1041e-02, -2.5928e-01,
         -1.0512e-01, -4.6650e-02,  4.7166e-01, -5.6655e-02, -3.5808e-02,
         -2.2683e-02,  1.6411e-03, -5.1478e-04,  2.5911e-02,  1.4500e-01,
          9.3668e-02, -2.0429e-02,  1.5194e-02,  1.8848e-01, -1.2614e-01,
          4.2716e-02,  4.8214e-02,  1.1099e-01,  4.7835e-01,  4.8292e-01,
         -1.6024e+00, -4.2378e-01,  4.9455e-01, -7.7264e-01,  6.2055e-01,
         -4.9635e-01,  5.1681e-01, -2.1939e-01,  1.5049e-01, -2.5762e-02,
          1.7633e-02, -7.4397e-02,  1.0901e-01,  4.1409e-02, -4.9260e-02,
         -5.5222e-02,  5.4592e-02, -9.0630e-03,  4.5289e-02,  2.6704e-01,
         -5.6349e-01,  1.4231e-01,  3.3580e-01, -3.1233e-01,  2.2262e-01,
         -7.1049e-01, -3.4851e-02]], device='cuda:0') tensor(1.3194, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
421000 特征值优化 tensor(8.2630, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.4024e-01, -1.2702e+00, -5.8348e-01,  6.0899e-01,  7.4517e-01,
         -4.9858e-01,  1.6447e-01,  5.3920e-01,  1.4884e-01, -1.2226e+00,
          2.7262e+00,  2.8814e-01, -2.3084e-01,  2.5978e-01, -2.5794e-01,
         -8.3573e-01, -7.4035e-01,  9.1819e-02, -4.9066e-02, -2.2368e-03,
          2.1669e-01, -5.7607e-01,  1.0831e-02,  8.4786e-03,  9.6580e-02,
          4.0397e-03,  3.1189e-02, -5.4965e-02, -4.1625e-01, -7.6145e-01,
          7.2565e-02, -1.4178e-01,  7.5265e-01,  1.1050e-02,  2.0252e+00,
          7.6239e-01, -2.2384e-01, -4.3225e-03,  2.0840e-01, -2.0099e-01,
         -4.6732e-01, -1.0259e+00,  1.2998e-01,  1.4706e-01,  3.8490e-01,
          1.1056e-01, -3.5904e-01,  1.8386e+00, -1.7352e+00,  8.9850e-01,
          2.1770e+00,  3.8194e-01,  5.2236e-01, -9.8100e-01, -3.0121e-02,
          1.3719e-02,  6.0278e-01, -1.0958e+00,  6.5876e-01,  7.2688e-01,
          2.5668e-01, -1.0923e-01, -5.2257e-02, -1.3634e-01,  4.5000e-01,
         -1.3501e+00, -6.1058e-01,  9.3781e-01, -4.9886e-01, -1.6755e+00,
          6.9884e-01, -2.1635e-01]], device='cuda:0') tensor(5.2212, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
422000 特征值优化 tensor(2.4260, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4268e-01, -4.0222e-01,  5.5769e-02,  1.1643e+00,  5.8192e-02,
          2.9560e-01, -4.1699e-03,  6.0581e-01,  1.0007e+00, -1.7168e+00,
          3.0862e+00,  7.6039e-01,  1.0392e-02,  1.0502e-01, -1.1459e-01,
         -5.9260e-02, -1.1113e-01,  3.4059e-01, -3.1252e-01, -3.5379e-02,
         -5.1029e-03, -2.7354e-01, -5.6425e-02,  2.8395e-02,  2.3795e-02,
         -2.8237e-03,  5.9311e-03, -1.5021e-02, -8.8827e-02, -4.7050e-01,
          1.0692e-02, -1.0944e-01,  6.2407e-01,  1.8529e-02,  1.2373e+00,
          6.9389e-01,  2.1623e-03,  1.5962e-02,  4.5999e-02,  1.2376e-01,
         -1.1367e-01, -3.4150e-01, -3.5956e-01,  2.6242e-01,  2.6321e-01,
          2.0179e-01, -1.1975e-01,  1.4100e+00, -1.1235e+00,  6.2569e-01,
          1.6640e+00, -1.8276e-01,  6.4005e-01, -3.2052e-01, -6.6557e-02,
         -4.4048e-02,  1.3272e+00, -8.4472e-01,  4.5986e-01,  4.7922e-01,
         -1.4903e-01,  1.2022e-01, -1.3033e-01, -1.2816e-01,  1.2718e+00,
         -1.5971e+00, -9.8903e-01,  7.2436e-01, -1.4566e-01, -1.1193e+00,
          8.4293e-01,  8.0032e-02]], device='cuda:0') tensor(0.8177, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
423000 特征值优化 tensor(2.1832, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5044e-01, -1.6588e-01,  2.0567e-01,  1.0849e+00,  1.4608e-01,
          4.4853e-01,  1.2218e-02,  4.6711e-01,  1.1788e+00, -1.8306e+00,
          2.8670e+00,  7.9769e-01,  3.3057e-03,  4.7292e-02, -9.1197e-02,
         -6.0783e-02, -4.9541e-02,  2.5390e-01, -1.9003e-01, -2.7424e-02,
         -2.6872e-02, -2.1100e-01, -5.1858e-02, -4.3316e-02, -7.9220e-03,
          1.1871e-02,  3.2868e-02, -7.6355e-03, -1.1011e-01, -3.9863e-01,
          3.3644e-02, -6.4369e-02,  3.8770e-01, -7.7857e-03,  1.1249e+00,
          6.9075e-01, -3.6899e-02, -1.0735e-03,  3.9230e-02,  7.5447e-02,
         -1.2454e-01, -1.3492e-01, -2.2660e-01,  1.6044e-01,  1.2123e-01,
          5.3959e-02, -3.5072e-02,  1.3106e+00, -9.7410e-01,  5.4342e-01,
          1.6615e+00, -2.0696e-01,  2.4032e-01, -5.8620e-02, -2.7638e-02,
          4.0348e-02,  1.2922e+00, -7.8714e-01,  3.0598e-01,  4.4316e-01,
         -2.2002e-01,  1.2950e-01, -2.7491e-01, -4.1161e-02,  1.2873e+00,
         -1.5326e+00, -1.1012e+00,  7.0143e-01, -3.8724e-01, -8.5822e-01,
          7.0052e-01,  2.4651e-03]], device='cuda:0') tensor(0.8522, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
424000 特征值优化 tensor(2.0990, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9865e-01, -2.0041e-01,  2.3965e-01,  1.0706e+00,  2.7468e-01,
          5.6759e-01,  1.0529e-01,  4.5792e-01,  1.2974e+00, -1.7352e+00,
          2.5155e+00,  8.3104e-01, -9.3509e-03,  1.0777e-02, -7.0306e-02,
         -5.4265e-02, -2.7149e-02,  2.2032e-01, -2.4980e-01, -2.3220e-02,
         -1.3114e-02, -1.7268e-01,  4.4461e-02,  3.9094e-02, -7.3537e-04,
          1.2186e-01,  2.2575e-02,  4.5424e-02, -1.0148e-01, -3.7197e-01,
          3.2388e-02,  1.8881e-03,  1.9903e-01,  5.4390e-02,  1.0598e+00,
          6.5805e-01, -3.8255e-02, -3.3591e-02,  8.4689e-02, -1.9464e-02,
         -1.3359e-01, -3.9747e-02, -1.7606e-01,  1.0356e-01,  1.1871e-01,
          1.5102e-01, -6.9902e-02,  1.3119e+00, -9.1871e-01,  5.0900e-01,
          1.6669e+00, -1.8782e-01, -4.9929e-02,  7.8492e-02,  4.3064e-02,
          1.5029e-01,  1.2535e+00, -6.1840e-01,  2.5988e-01,  4.2389e-01,
         -3.1326e-01,  1.8146e-01, -3.1025e-01,  4.7091e-02,  1.2618e+00,
         -1.5248e+00, -1.1279e+00,  6.5686e-01, -7.3368e-01, -5.5500e-01,
          6.7385e-01,  1.0622e-02]], device='cuda:0') tensor(1.4672, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
425000 特征值优化 tensor(3.0283, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4122, -1.2128,  0.5937,  1.1516, -0.4370,  0.8051,  1.4272, -1.0533,
          0.5894,  1.0021,  0.0823,  0.9429,  0.4859,  0.0247, -0.0680,  0.1892,
          0.2575,  0.1080, -0.2134, -0.0037, -0.1816, -0.0619, -0.0492, -0.0312,
          0.6800, -0.1472, -0.5296, -0.0165,  0.4675, -0.0539, -0.3615,  0.0772,
         -0.4234, -1.0277,  0.3783, -0.3423,  0.4853, -0.2873,  0.2903,  0.3674,
          0.1413,  0.1180, -0.5092,  0.3518,  0.0491,  0.0376, -0.0432,  0.3694,
         -0.6414, -0.1282, -0.3090, -0.0260,  1.0495,  0.3046, -0.4596,  0.2038,
          1.1544,  0.5689, -0.7264, -0.8993,  0.0512,  0.5127,  0.0787, -0.3360,
          1.2391, -0.2892,  1.2810, -0.2619,  0.7741, -0.1523,  0.4326, -0.2216]],
       device='cuda:0') tensor(2.0978, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
426000 特征值优化 tensor(2.1137, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2132, -0.8236,  0.7136,  0.7461, -0.3442,  1.0506,  1.1959, -0.8188,
          0.8323,  0.9881,  0.4203,  1.0185,  0.3950, -0.1104, -0.1228,  0.2513,
          0.1699,  0.2374, -0.2269,  0.0144, -0.1481, -0.0211,  0.0943,  0.0121,
          0.2263, -0.1101, -0.1299,  0.0125,  0.0573, -0.0028, -0.2529, -0.0643,
         -0.3013, -0.7726,  0.3455, -0.3304,  0.2516, -0.1872,  0.1615,  0.2780,
          0.1192,  0.1596, -0.5398,  0.5395, -0.0402,  0.0436, -0.1549, -0.3877,
          0.0169,  0.0389, -0.3756,  0.0082,  0.6822,  0.2241, -0.2962,  0.3218,
          0.7897,  0.3927, -0.7222, -0.8253, -0.2851,  0.4327, -0.0787, -0.1450,
          1.1070, -0.3199,  1.1429, -0.2875,  0.4308, -0.0708,  0.5488, -0.1678]],
       device='cuda:0') tensor(1.4887, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
427000 特征值优化 tensor(9.9482, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.4773e-01, -3.4272e-01,  6.4215e-01, -9.8296e-01,  4.0849e-01,
         -3.8325e-01, -8.4858e-01, -1.3797e-01,  5.7235e-01, -1.2733e-01,
          4.4803e-01,  1.7136e+00,  3.5430e-01, -4.5624e-02,  9.5115e-03,
         -2.6557e-01, -5.1400e-01, -6.5113e-01,  8.1880e-01, -3.8471e-01,
          1.4150e+00, -4.6721e-01, -1.3161e-01, -4.1342e-01,  5.7796e-02,
         -1.2120e-01,  4.6675e-02, -1.0363e+00, -4.0448e-02,  4.2918e-01,
          4.1865e-01, -5.3341e-02, -5.8762e-02, -1.3804e+00, -2.0991e-01,
          3.1530e-01,  1.5581e-01,  4.5104e-01,  2.5080e-01, -1.3857e-03,
         -1.6673e-01, -3.9065e-01,  8.8576e-01,  2.0266e-01,  1.4049e-01,
          1.4131e-01,  1.2716e-02,  9.5969e-02,  1.3182e+00,  5.1205e-01,
         -2.7499e-01, -7.4560e-01, -1.4345e-01,  7.2399e-01,  2.9245e-01,
         -5.7536e-01, -1.6934e+00,  3.3624e-01, -2.1575e-02,  1.8708e-01,
         -8.7406e-01, -1.0780e+00, -5.7543e-01,  2.6435e+00, -2.6439e-01,
          6.1472e-02, -2.9665e-01,  2.5390e-01,  6.3922e-01, -9.0652e-01,
         -5.0468e-01, -6.6040e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
428000 特征值优化 tensor(2.7443, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5776e+00,  4.9727e-01,  1.0622e+00, -1.2498e+00,  1.1075e-01,
          5.2263e-01,  1.6950e-01, -6.3102e-01, -2.2416e-03,  6.9061e-02,
          1.4060e+00,  1.6504e+00,  4.0930e-01,  1.6482e-02, -2.3412e-02,
         -1.2373e-01, -1.0258e-01, -3.1383e-01,  3.1672e-01, -7.2015e-03,
          9.0793e-01, -2.9624e-01, -1.6374e-02, -3.9629e-02, -1.2179e-02,
         -2.4737e-02,  4.1239e-01, -4.2184e-01, -2.7741e-02,  2.8049e-01,
         -3.1225e-02, -5.6731e-02,  3.8851e-03, -3.3643e-01, -1.8085e-05,
          4.8877e-03,  1.6457e-01,  7.4126e-02,  1.7369e-02, -3.7046e-03,
          2.5133e-01, -1.1064e-02,  9.1167e-01,  3.5504e-01,  2.5171e-01,
          6.8141e-01, -2.1619e-01,  1.1217e-01,  8.6375e-01,  2.4832e-01,
         -2.0141e-01, -4.6831e-01, -3.8497e-01,  1.5543e-01, -3.2235e-01,
         -1.4876e-01, -7.4397e-01,  4.3972e-01,  4.8266e-02,  5.8164e-04,
          2.5679e-01, -7.0949e-01, -1.4218e+00,  1.6737e+00, -2.0520e-01,
          1.9269e-01, -1.0216e-02,  1.8629e-02,  1.8440e+00, -1.2482e+00,
         -8.3854e-01, -3.7291e-02]], device='cuda:0') tensor(1.1131, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
429000 特征值优化 tensor(2.1285, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7826e+00,  1.1168e+00,  1.1791e+00, -1.0827e+00,  1.8265e-01,
          3.2717e-01,  3.3490e-01, -1.2142e+00,  1.1507e-01,  9.1991e-02,
          1.6558e+00,  1.3087e+00,  5.1662e-01, -6.3828e-02, -4.0658e-02,
         -2.4733e-01, -2.1900e-01, -4.1970e-01,  2.3419e-01, -2.6317e-02,
          6.8458e-01, -2.1945e-01, -3.5781e-02,  2.6064e-02,  1.6312e-02,
         -1.6142e-03,  3.3089e-01, -3.7397e-01, -3.6928e-02,  2.0017e-01,
         -2.3396e-02, -2.6155e-02, -1.8051e-02, -1.2170e-01,  6.2155e-03,
          2.8467e-02,  1.1975e-01,  4.8011e-02, -1.8979e-02,  1.3637e-02,
          9.9459e-02,  2.6925e-02,  6.2213e-01,  2.8539e-01,  4.8877e-02,
          7.6943e-01, -9.6358e-02,  7.2585e-02,  7.4053e-01,  4.0519e-01,
         -1.8779e-01, -4.8042e-01, -2.6711e-01,  1.4943e-01, -5.0035e-01,
          1.5394e-01, -6.4201e-01,  1.9494e-01, -3.1918e-02, -7.6995e-03,
          5.2398e-01, -9.8225e-01, -1.5709e+00,  1.3689e+00, -1.0756e-01,
          9.3663e-02, -1.0971e-01,  6.9918e-02,  2.2213e+00, -1.2967e+00,
         -6.2514e-01,  1.2997e-01]], device='cuda:0') tensor(1.3461, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
430000 特征值优化 tensor(17.9205, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7657e-01, -1.3068e+00, -1.6575e+00,  3.9316e-01,  1.0532e+00,
          1.8382e-01,  1.9475e+00,  1.3867e+00,  1.0031e+00, -9.6453e-01,
         -1.0823e+00,  6.6473e-01, -9.7623e-02, -1.4740e-01,  1.5576e-01,
          8.4290e-01,  1.1377e+00,  5.0163e-01,  1.7763e-01,  3.1405e-01,
          8.9229e-01, -1.6187e+00, -1.4272e+00,  1.9780e-01, -6.7081e-01,
         -2.5719e+00, -6.1684e-01,  6.2390e-01,  8.8939e-01,  1.2095e-01,
          1.6134e-02,  4.6913e-02, -7.0579e-02, -7.0630e-02,  3.9643e-01,
         -3.7808e-01, -1.5651e+00,  1.4475e+00, -1.4022e+00,  1.1927e+00,
          5.1396e-01, -1.0739e+00, -1.1548e+00,  1.6690e-01, -2.8980e-01,
          1.4417e+00,  2.2058e-01, -2.4263e-01,  4.7100e-01, -4.8524e-02,
         -2.5739e-01,  1.4623e+00, -8.0802e-01,  2.2327e-01, -5.3403e-01,
          7.7394e-02, -5.3051e-01,  8.9632e-01,  1.7247e-01,  5.5005e-04,
         -9.7599e-01,  7.2130e-01, -1.7604e+00,  1.6045e+00,  5.6310e-01,
          4.2802e-01, -9.7625e-01,  1.8965e+00,  4.9796e-01, -1.1065e+00,
          5.7299e-01, -1.2446e-01]], device='cuda:0') tensor(9.3262, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
431000 特征值优化 tensor(4.2471, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.9447e-01, -1.2358e+00, -6.5176e-01,  1.3402e+00,  4.3361e-01,
          6.2628e-01,  2.8216e+00,  1.3107e+00,  1.9475e+00, -1.6325e+00,
         -3.4841e-01,  1.3579e+00,  1.8415e-01,  3.2519e-02, -6.5335e-03,
          2.8793e-01,  5.5013e-01, -2.6261e-01,  3.7243e-02, -6.1980e-04,
          1.7231e-01, -6.9088e-01, -4.6364e-01, -6.5951e-02, -7.6377e-02,
         -1.4760e+00, -3.1509e-01,  8.5248e-02,  1.5055e-01, -3.0203e-01,
         -9.9114e-03,  1.1906e-02,  3.7625e-03,  3.6387e-02, -4.9953e-02,
         -3.6690e-02, -6.2098e-01,  6.5014e-01, -5.6043e-01,  4.4448e-01,
          2.4570e-01, -2.1144e-01, -7.4322e-01,  4.6074e-01, -2.2650e-01,
          7.3082e-01, -8.1101e-02,  6.0113e-01,  3.4602e-01,  2.8559e-02,
         -5.2167e-03,  6.4956e-01, -4.9212e-01,  2.0325e-01, -6.1098e-02,
         -1.1793e-02, -5.7076e-01,  3.4341e-01, -4.3041e-04,  9.0227e-03,
         -1.5024e-01,  6.8146e-01, -1.2638e+00,  6.8045e-01,  1.4342e+00,
         -2.4339e-01, -1.6308e+00,  9.3816e-01,  1.1006e+00, -5.6603e-01,
          1.4210e+00, -6.1813e-01]], device='cuda:0') tensor(1.7869, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
432000 特征值优化 tensor(2.1883, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.0559e-01, -1.0235e+00, -2.5025e-01,  1.5573e+00, -8.7321e-02,
          1.1293e-01,  3.0782e+00,  6.3676e-01,  2.4299e+00, -1.7867e+00,
         -2.8739e-02,  1.2604e+00,  9.9795e-02, -1.7691e-03,  7.4441e-03,
          4.0830e-01,  5.0549e-01, -1.9255e-01, -5.0284e-02, -2.8587e-02,
          1.2196e-01, -3.8826e-01, -3.0168e-02, -4.7725e-02,  2.4256e-01,
         -6.1389e-01, -2.9196e-01, -1.2301e-01,  1.0466e-01, -2.5576e-01,
         -1.9471e-02,  4.7342e-03,  2.4386e-02,  2.6935e-02, -1.2900e-01,
         -9.7007e-02, -2.2756e-01,  2.7773e-01, -3.0354e-01,  2.0465e-01,
          3.6258e-01, -1.7168e-01, -8.1020e-01,  4.3695e-01, -1.9346e-01,
          2.9843e-01, -3.8519e-02,  5.7140e-01,  2.5632e-01,  1.9403e-01,
         -2.4189e-01,  4.0415e-01, -6.0984e-02,  6.6011e-02, -6.2904e-04,
         -9.1455e-03, -1.7085e-01,  1.7078e-01, -1.6558e-02,  5.7812e-03,
          2.0589e-02,  6.8283e-01, -1.0331e+00,  6.0393e-01,  1.3068e+00,
         -5.7178e-01, -1.7546e+00,  8.0762e-01,  1.1081e+00, -5.8345e-01,
          1.5457e+00, -6.7688e-01]], device='cuda:0') tensor(1.5259, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
433000 特征值优化 tensor(2.0912, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.4569e-01, -8.6310e-01, -1.8387e-01,  1.3286e+00,  1.0083e-02,
          2.1921e-01,  3.0476e+00,  4.8964e-01,  2.5183e+00, -1.7718e+00,
         -4.2309e-03,  1.2659e+00,  1.1270e-01,  2.5954e-03,  6.1516e-02,
          4.1019e-01,  4.5467e-01, -1.6557e-01, -1.0089e-01, -2.7523e-02,
          1.3525e-01, -3.8008e-01,  3.5456e-02, -1.0817e-01,  2.4339e-01,
         -4.1494e-01, -1.4449e-01, -2.3195e-01,  6.9679e-02, -2.6704e-01,
         -1.7138e-02,  4.4711e-02,  3.9828e-02,  2.6521e-02, -1.7816e-01,
         -1.6479e-01, -1.3985e-01,  1.9406e-01, -2.9550e-01,  1.7985e-01,
          2.9526e-01, -1.4348e-01, -7.2225e-01,  4.0725e-01, -1.9433e-01,
          1.7401e-01, -4.0189e-02,  4.1564e-01,  2.1492e-01,  2.1500e-01,
         -2.8198e-01,  3.4795e-01, -6.8392e-02,  5.2973e-02,  4.7760e-02,
         -3.9391e-02, -1.6627e-01,  1.5868e-01, -6.8370e-03,  4.7480e-03,
          4.2630e-02,  6.5243e-01, -1.0357e+00,  6.0336e-01,  1.2901e+00,
         -5.2591e-01, -1.7401e+00,  8.2786e-01,  1.0582e+00, -6.0909e-01,
          1.5214e+00, -7.2275e-01]], device='cuda:0') tensor(0.8628, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
434000 特征值优化 tensor(6.3948, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0224,  0.4780,  0.2264, -1.9840, -0.1076,  0.4606, -1.1952,  0.2354,
          1.0001,  2.0725, -0.4162,  0.2732, -0.2581, -0.0240,  0.0613, -0.3487,
          0.3311,  0.0369, -0.0261, -0.0608,  0.1431,  0.4515, -0.1802,  0.0965,
         -0.0215, -0.4660,  0.6339, -0.4104,  0.3436,  0.2403,  0.0845, -0.9401,
         -0.3889, -0.5107,  0.2049, -0.2816, -0.0715, -0.0493,  0.3193, -0.4733,
          0.0562, -0.0983,  0.1527, -1.4361,  0.0856,  1.4335, -0.8865, -1.4723,
         -0.1793,  1.0091,  1.4701,  0.5204,  0.7737, -0.3549,  0.0529, -0.3521,
          0.1809,  0.3115, -0.4136, -1.3031, -1.0833, -0.2374, -0.8450,  0.4245,
         -0.3672, -0.5429,  0.2118, -0.7216,  0.8831, -0.3193,  2.4072, -0.3108]],
       device='cuda:0') tensor(4.1776, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
435000 特征值优化 tensor(2.2852, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0312e+00,  5.6702e-01,  7.1712e-01, -1.4128e+00,  1.9185e-01,
          1.0144e-01, -6.5137e-01,  4.9478e-01,  1.3115e+00,  1.6507e+00,
         -3.1066e-02,  7.4159e-01, -3.9487e-02,  6.2656e-02,  2.4110e-01,
         -1.9349e-01,  1.2212e-01, -8.1781e-02, -3.0699e-03, -1.7965e-01,
          2.4161e-02,  9.5167e-02, -1.0928e-01, -9.1369e-02, -4.5223e-01,
         -5.6399e-01,  2.9062e-01, -3.9972e-01, -1.4036e-03, -7.0013e-02,
          3.2406e-02, -2.7905e-01, -1.7928e-01, -3.2208e-02,  1.2924e-01,
         -1.3131e-01,  1.1980e-01,  1.3539e-02, -5.9446e-02, -8.3179e-02,
          1.7227e-03, -1.7366e-01,  5.5705e-01, -9.4486e-01,  1.2574e-02,
          9.6489e-01, -6.7802e-01, -8.9529e-01, -1.9211e-01,  4.6494e-01,
          1.0897e+00,  7.1252e-02,  1.1418e+00, -5.0243e-01,  8.7981e-02,
         -1.0570e-01, -5.7248e-02,  6.0369e-02, -1.8292e-01, -5.6736e-01,
         -4.6244e-01, -1.0522e-01, -2.5982e-01,  2.6794e-01, -1.1369e-01,
         -1.5954e-01,  5.0847e-01, -4.5633e-01,  7.5366e-02, -1.8947e-02,
          2.2638e+00, -6.5764e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
436000 特征值优化 tensor(2.1208, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9850,  0.7546,  0.6925, -1.2694,  0.2041,  0.1484, -0.6780,  0.4560,
          1.3572,  1.5840, -0.0100,  0.8415, -0.0165,  0.0031,  0.0882, -0.1271,
          0.0584, -0.0385, -0.0742, -0.3056,  0.0198,  0.0705,  0.0328, -0.0709,
         -0.2298, -0.2789,  0.2611, -0.2192,  0.0030, -0.0491,  0.0329, -0.1151,
          0.0302, -0.0223,  0.1583, -0.1895,  0.1363,  0.0459, -0.0401, -0.0617,
         -0.0311, -0.2506,  0.6672, -0.6993, -0.2933,  0.8445, -0.6132, -0.8117,
         -0.1671,  0.3916,  1.0112,  0.1006,  0.9509, -0.3806,  0.1195,  0.0215,
         -0.0733,  0.0600, -0.1106, -0.2826, -0.4105, -0.0369, -0.0772,  0.1294,
         -0.0658, -0.1985,  0.4928, -0.4593, -0.0263,  0.0402,  2.2304, -0.5898]],
       device='cuda:0') tensor(1.2910, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
437000 特征值优化 tensor(10.4189, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.7045,  1.4499,  0.5705, -0.0309,  1.4807, -0.5414,  2.3284, -0.2340,
         -0.7406, -0.6770,  1.7740,  2.6798, -0.0880, -0.7864,  1.1052, -0.0315,
          0.3408, -0.9746, -1.4146,  0.0197,  0.6695,  1.1282,  0.1484, -0.2906,
          2.2184,  0.0377, -0.0596, -0.6188,  0.0503,  0.1368, -0.1107,  1.1229,
         -1.7268,  0.1519,  0.5530,  0.7954,  0.1788, -0.1442,  0.6363,  0.8053,
          0.1768, -1.6619, -0.1075,  0.6091,  0.1664,  0.3498, -0.3068, -0.3947,
          1.1998,  0.3494, -0.0726, -0.6042,  1.2028,  0.6585,  1.1969, -0.7696,
         -0.9489,  0.3078, -0.4239,  0.3175,  0.8148, -0.4696,  0.6424, -0.8263,
          0.1761, -0.6164, -0.4308, -0.2356,  0.3585, -1.0417,  0.6298,  1.1948]],
       device='cuda:0') tensor(6.2859, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
438000 特征值优化 tensor(2.5662, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.5592e-01,  7.6722e-01,  1.1975e+00, -2.8621e-01,  2.0503e+00,
          6.4692e-02,  1.6964e+00,  5.4533e-01, -2.8494e-02, -1.3264e+00,
          2.4818e+00,  3.4754e+00, -5.1343e-02, -1.5208e-01,  2.6321e-01,
         -1.9868e-01,  1.4687e-01, -2.1411e-01, -4.8100e-01,  4.1577e-02,
          9.7154e-02,  3.5896e-01, -3.3452e-02, -1.4195e-02,  1.0697e+00,
          8.8885e-02,  3.6300e-02, -5.6439e-01,  4.1056e-02,  9.8227e-02,
         -6.4674e-01,  6.0480e-01, -1.0731e+00, -2.1700e-02,  4.8489e-02,
          2.5028e-02,  1.4884e-03, -5.5117e-03,  9.2780e-02,  3.4770e-01,
         -3.3420e-02, -1.0674e+00, -7.6722e-02,  8.3580e-02,  7.0592e-02,
         -1.6806e-01,  8.4196e-02, -4.6182e-01,  5.4500e-01,  3.6655e-01,
          3.6931e-03, -2.0752e-02,  1.8837e+00,  4.1987e-02,  6.1497e-01,
          4.5617e-02, -3.2971e-01,  1.9986e-01, -3.1262e-01, -1.7052e-01,
          6.8255e-01, -7.0783e-01,  1.3122e+00, -7.7294e-01,  5.7626e-02,
         -3.3678e-01, -2.9723e-01,  2.1942e-02,  1.0594e+00, -1.1083e+00,
          2.9976e-01,  6.9197e-01]], device='cuda:0') tensor(1.5721, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
439000 特征值优化 tensor(2.1351, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.9633e-02,  5.0697e-01,  9.9047e-01, -1.1011e-01,  2.1194e+00,
          2.7471e-01,  1.1545e+00,  7.3274e-01,  2.9084e-01, -1.7457e+00,
          2.6037e+00,  3.3767e+00, -5.5101e-02, -5.4630e-02, -7.9005e-03,
          2.8127e-02,  9.0466e-02, -1.7343e-03, -1.6311e-01,  1.0673e-02,
          7.8418e-02,  2.0071e-01, -6.3424e-03,  3.5201e-02,  5.4401e-01,
          1.4081e-01,  1.5052e-01, -5.5884e-01, -1.7622e-03,  8.0828e-02,
         -5.5320e-01,  5.8061e-01, -9.5695e-01, -2.1857e-02,  6.1909e-02,
          6.0116e-02, -1.5858e-02,  3.7988e-04,  8.6236e-02,  3.6362e-01,
         -1.8730e-02, -8.2449e-01, -7.4149e-02,  6.5130e-02,  7.4543e-02,
         -1.7624e-01,  1.3268e-01, -3.9715e-01,  4.4909e-01,  2.2043e-01,
         -4.4702e-02,  4.1827e-02,  1.9030e+00,  7.5790e-02,  9.2510e-01,
          1.0029e+00, -2.2561e-01,  1.5261e-01, -2.2197e-01, -1.8232e-01,
          7.8494e-01, -5.8297e-01,  1.1605e+00, -7.6576e-01, -1.2482e-01,
         -1.8226e-01, -2.5661e-01,  1.9979e-02,  1.1182e+00, -1.1081e+00,
         -2.4777e-01,  5.0842e-01]], device='cuda:0') tensor(1.2000, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
440000 特征值优化 tensor(2.0878, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2746e-01,  4.5410e-01,  8.8525e-01, -1.0402e-02,  2.1875e+00,
          3.5870e-01,  8.9650e-01,  9.4293e-01,  3.8045e-01, -1.8204e+00,
          2.6552e+00,  3.3470e+00, -5.2414e-02, -1.2850e-01, -7.6955e-02,
         -9.7970e-02,  1.0730e-02, -1.1940e-01, -1.3344e-01,  2.4629e-02,
          7.5829e-02,  1.2615e-01, -7.6343e-03,  1.5361e-02,  3.8193e-01,
          1.2192e-01,  2.3988e-01, -5.1249e-01, -1.9587e-02,  7.2286e-02,
         -4.5174e-01,  4.9848e-01, -8.9751e-01, -2.3571e-02,  9.1924e-02,
          9.6509e-02, -1.6301e-02, -8.7984e-04,  8.0461e-02,  3.6126e-01,
         -2.1182e-02, -7.2260e-01, -8.0656e-02,  8.4885e-02,  7.1159e-02,
         -1.3466e-01,  1.1211e-01, -3.8180e-01,  3.9777e-01,  1.7992e-01,
         -5.5502e-02,  7.4753e-02,  1.7977e+00,  1.5285e-01,  8.8731e-01,
          1.2725e+00, -1.9159e-01,  1.2275e-01, -1.5705e-01, -2.7719e-01,
          8.5573e-01, -5.5202e-01,  9.8266e-01, -7.2583e-01, -3.0578e-01,
         -9.6082e-02, -1.2704e-01, -9.3089e-03,  1.0930e+00, -1.0989e+00,
         -3.8100e-01,  4.1105e-01]], device='cuda:0') tensor(1.0787, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
441000 特征值优化 tensor(9.3459, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5341,  1.6126,  0.9597,  0.1743,  0.9255,  0.2006, -0.0985,  0.4000,
          0.2695,  0.9959,  2.0946,  0.0450,  0.3277,  1.9560,  0.6655,  0.1062,
         -0.8551,  0.2353, -0.4505,  0.5398,  1.6525,  0.7616, -0.2981, -0.2112,
         -0.0116,  0.7853,  1.6784,  1.0570, -0.1585,  0.4353, -0.4807,  0.5623,
          0.7093, -0.1229,  0.1202, -0.2565, -0.0584,  0.1747, -0.0347, -0.1903,
          0.9213, -0.2846,  1.2965,  0.5722,  1.3969, -1.1384, -0.0804,  0.5119,
         -0.6577,  0.4574,  0.1190,  2.3898,  0.2579, -0.1318, -0.3525, -0.1331,
         -0.1471,  0.0501,  0.2393,  0.5406,  1.5416, -0.6698, -1.4138,  1.0743,
          0.6525, -0.4405,  0.7546, -0.7945,  2.1349, -0.1291,  1.5414, -1.4019]],
       device='cuda:0') tensor(5.2301, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
442000 特征值优化 tensor(2.9208, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.3077e-01,  1.2268e+00,  1.6515e+00,  6.2176e-01,  1.5333e+00,
         -2.0655e-01, -1.7904e-01, -4.4423e-01,  2.0800e-01,  4.1469e-01,
          2.1391e+00,  3.0315e-01,  2.0854e-01,  9.1216e-01,  2.5580e-01,
          2.4675e-02, -6.4121e-02,  1.3953e-02,  1.6470e-02,  2.4165e-02,
          7.3322e-01,  5.0209e-01,  2.3130e-02, -6.5684e-02,  2.9895e-02,
          7.3383e-02,  5.9527e-01,  2.1388e-01,  8.0016e-02,  4.1538e-01,
         -3.7332e-02,  3.4699e-01,  5.0118e-01, -3.0308e-02,  1.0497e-02,
         -2.9198e-02, -2.7628e-04, -1.2863e-01,  1.5022e-02, -1.5831e-02,
          6.1150e-01, -5.3442e-02,  1.8039e-01,  3.3851e-01,  5.7491e-01,
         -5.9657e-01,  2.2599e-01,  9.6316e-01, -8.1093e-01,  1.2029e-01,
         -6.4529e-01,  1.5708e+00, -5.9520e-01, -1.6682e-01, -2.1155e-01,
          2.5163e-01, -3.2695e-01,  1.9115e-01, -2.2518e-01,  1.5445e-01,
          1.1467e+00, -5.1015e-01, -1.7658e+00,  7.3407e-01, -1.4967e-01,
          5.9903e-02,  6.3867e-01, -4.8369e-01,  1.8726e+00, -2.5604e-01,
          1.5590e+00, -9.1743e-01]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
443000 特征值优化 tensor(2.2795, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4383,  1.4027,  1.4607,  0.7412,  1.6963,  0.0738,  0.5082, -0.8747,
          0.3839, -0.0764,  2.0276,  0.0709,  0.2845,  0.4990,  0.3412, -0.0893,
         -0.0146,  0.0587,  0.1024,  0.0336,  0.4786,  0.3408, -0.0316,  0.0090,
         -0.0893,  0.0905,  0.1467,  0.0376,  0.4203,  0.2804, -0.0279,  0.3194,
          0.4637, -0.0218, -0.0095, -0.0091,  0.0704, -0.2082,  0.0196, -0.0025,
          0.4529, -0.0281, -0.1313,  0.3400,  0.3153, -0.5350,  0.2500,  0.8551,
         -0.9627,  0.0158, -0.8693,  1.2693, -0.6749, -0.0245, -0.1946,  0.2970,
         -0.3231,  0.2014, -0.1537,  0.2664,  0.9828, -0.3794, -1.4512,  0.5280,
         -0.3037,  0.2068,  0.4208, -0.2364,  1.8185, -0.4084,  1.1704, -0.5270]],
       device='cuda:0') tensor(1.1453, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
444000 特征值优化 tensor(2.1698, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.3661e-01,  1.3713e+00,  1.3140e+00,  8.3107e-01,  1.6630e+00,
          2.7207e-01,  7.8112e-01, -7.7040e-01,  5.3279e-01, -2.5687e-01,
          2.0915e+00,  9.6952e-02,  2.1026e-01,  4.4325e-01,  4.5503e-01,
         -9.1563e-03, -8.5158e-02,  1.3845e-01,  1.0356e-01,  9.5309e-04,
          3.8381e-01,  2.3290e-01,  5.3357e-02,  6.9056e-03, -2.6365e-02,
          2.3842e-02, -2.4565e-02,  2.8599e-02,  5.8549e-01,  1.5992e-01,
         -2.3625e-02,  3.3474e-01,  4.4889e-01, -2.2338e-02, -1.2704e-02,
         -1.6030e-02,  8.2011e-02, -2.1102e-01,  4.0643e-03,  1.3693e-02,
          4.0281e-01, -1.3067e-02, -1.8713e-01,  2.9372e-01,  1.0497e-01,
         -6.7428e-01,  1.9792e-01,  8.0185e-01, -1.0894e+00, -9.9078e-02,
         -9.0195e-01,  1.0270e+00, -5.6087e-01, -2.6679e-02, -1.5712e-01,
          2.4630e-01, -3.1252e-01,  1.9673e-01, -2.3334e-01,  3.3618e-01,
          9.2068e-01, -3.3558e-01, -1.4606e+00,  5.0219e-01, -4.0145e-01,
          2.8317e-01,  1.4887e-01, -1.0735e-01,  1.7268e+00, -4.5065e-01,
          6.1109e-01, -2.0522e-01]], device='cuda:0') tensor(1.2074, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
445000 特征值优化 tensor(2.1146, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.2634e-01,  1.3590e+00,  1.1391e+00,  2.9628e-01,  1.6460e+00,
          3.7301e-01,  8.3752e-01, -8.4827e-01,  5.1627e-01, -1.7215e-03,
          2.0491e+00, -1.4236e-02,  1.6385e-01,  3.8371e-01,  3.4756e-01,
         -3.1572e-02, -7.2268e-02,  7.8757e-02, -1.4671e-02,  3.5955e-02,
          3.2014e-01,  7.3285e-02, -3.0615e-02,  2.7556e-02, -5.9127e-02,
         -3.5599e-03, -7.1269e-02,  1.3990e-03,  5.6503e-01,  1.1711e-01,
         -3.0077e-02,  3.4339e-01,  4.0874e-01, -2.2825e-02, -1.4371e-02,
         -1.1412e-02,  8.0495e-02, -2.0922e-01, -2.1205e-02, -6.7482e-03,
          4.0965e-01, -8.5109e-03, -2.5589e-01,  2.9802e-01,  2.6087e-03,
         -7.2452e-01,  1.4291e-01,  8.4684e-01, -1.0286e+00, -2.5859e-01,
         -9.3516e-01,  8.5263e-01, -5.6037e-01,  9.8821e-04, -1.0868e-01,
          1.9789e-01, -3.1578e-01,  1.8315e-01, -3.1280e-01,  2.7812e-01,
          8.6613e-01, -3.1614e-01, -1.4195e+00,  5.0395e-01, -3.3840e-01,
          2.5825e-01,  6.5604e-02, -1.2063e-01,  1.7243e+00, -4.2246e-01,
          2.5012e-01,  6.3075e-02]], device='cuda:0') tensor(1.0780, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
446000 特征值优化 tensor(7.8826, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0267,  2.2613,  0.4116, -0.8579,  0.1769,  1.5007,  0.1296, -0.6410,
          0.2019, -1.8346,  0.4912,  1.1701, -0.5412,  0.8546,  0.6696, -0.7509,
          1.7269,  0.1072,  0.5223,  0.5523, -0.5151,  0.4658, -0.2095,  0.0120,
         -0.0503, -0.1002,  0.6642, -0.5242,  0.0609,  0.0906, -0.0580, -0.0135,
         -0.0028,  2.1677,  0.1535,  0.7391,  0.8040,  0.0484, -1.0896, -1.0254,
         -0.3954,  1.1342,  0.6712, -0.2782, -0.6745, -0.5867,  0.0190,  0.8162,
          0.2913, -0.4929,  0.9761, -0.7793, -0.0997, -0.1541,  0.6459,  0.0198,
          0.7493,  1.6058,  0.3037, -0.8741, -0.4444, -0.1828,  0.3543, -0.1291,
          1.6057,  1.1848,  0.4497, -0.6046,  0.1895,  0.2975,  1.4779,  0.3009]],
       device='cuda:0') tensor(4.6731, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
447000 特征值优化 tensor(2.3380, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7269e+00,  1.8811e+00,  7.5862e-02, -3.5032e-01,  1.1962e-01,
          2.2156e+00,  3.7547e-01, -4.3093e-01,  7.7375e-01, -6.3944e-01,
          3.7564e-01,  1.8334e+00, -3.7360e-01,  1.2694e-01,  2.0026e-01,
         -4.0942e-01,  7.6455e-01,  1.1666e-01,  8.5446e-02,  3.7156e-02,
         -3.5491e-01,  1.9666e-02, -3.1953e-02,  4.8486e-02, -8.2101e-03,
         -3.1493e-02,  6.2944e-02, -6.2500e-02, -2.8877e-02, -6.3810e-03,
         -2.2360e-02, -3.3329e-02, -6.1841e-03,  1.4631e+00, -7.2948e-02,
          2.8388e-01,  2.9728e-01,  1.0805e-03, -5.7266e-01, -5.1550e-01,
         -1.1722e-01,  4.6943e-01, -4.9154e-01,  3.6743e-01,  3.5540e-01,
         -4.6554e-01,  2.9695e-01,  4.5023e-01, -1.3865e-01, -3.0647e-01,
          9.3939e-01, -4.6672e-01, -4.2898e-01,  1.9459e-01,  2.7281e-01,
         -7.2415e-02,  1.0102e+00,  9.0527e-01,  3.6203e-01, -5.1850e-01,
         -8.3060e-01,  9.2268e-03,  2.3320e-01, -7.0229e-02,  9.1379e-01,
          5.8923e-01,  7.3319e-01, -5.1702e-01, -3.5544e-01,  2.9079e-01,
          1.5695e+00, -1.8122e-01]], device='cuda:0') tensor(1.5743, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
448000 特征值优化 tensor(2.1250, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8165,  1.6869,  0.1521, -0.2078,  0.1587,  2.3091,  0.3198, -0.4300,
          0.7626, -0.2367,  0.2071,  1.9121, -0.2512,  0.0430,  0.0672, -0.4339,
          0.5600,  0.1793,  0.0882,  0.0315, -0.2317,  0.0125,  0.0098,  0.0651,
          0.0373, -0.0442, -0.0193, -0.0355, -0.0633, -0.0142, -0.0230, -0.0454,
          0.0219,  1.3625, -0.0631,  0.2381,  0.2401,  0.0422, -0.4977, -0.4857,
         -0.0284,  0.3396, -0.7380,  0.2410,  0.2839, -0.6368,  0.1872,  0.2943,
         -0.1037, -0.0985,  0.5812, -0.3098, -0.2569,  0.1445,  0.2493,  0.0284,
          1.0118,  0.8384,  0.6304,  0.0235, -0.8633,  0.0744,  0.0689, -0.0546,
          0.7171,  0.4969,  0.8376, -0.5403, -0.3358,  0.1941,  1.4278, -0.1888]],
       device='cuda:0') tensor(1.3624, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
449000 特征值优化 tensor(17.3600, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4874, -0.3235,  0.7425, -1.0702,  0.9645, -0.7960,  1.6997,  0.6358,
          0.9170, -0.4654,  0.9766, -0.0287, -0.1116, -0.5943,  2.3462, -1.4289,
         -0.5347,  0.1160,  1.4160, -0.6497,  0.6976, -0.4122,  0.2990,  1.9492,
          0.6201, -0.5036, -1.5671,  0.0519,  1.9490, -1.0063,  0.5878, -0.6622,
          1.3654, -1.5717,  0.9928,  1.4412, -0.9999,  0.5548,  0.3536, -0.0313,
         -0.2737, -0.2150, -0.3590,  1.0516,  1.1942, -0.2832, -0.5300, -0.2899,
          0.0726,  0.6471,  1.1825, -0.5712,  0.5228,  2.5236, -0.4850, -0.4688,
          1.4198,  0.5535, -0.5854,  1.5765, -0.2060, -0.3574, -0.2082, -0.8684,
         -2.2752, -0.3218, -0.8277,  0.1225,  1.5652,  1.3932, -0.3438, -0.3420]],
       device='cuda:0') tensor(9.2297, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
450000 特征值优化 tensor(3.8059, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5764, -0.3386,  1.5774, -1.8130,  2.0363,  0.0299,  1.5324, -0.3166,
          1.7642, -0.9602,  1.9360,  0.7135, -0.0306, -0.1455,  1.3159, -0.5053,
         -0.0737, -0.0753,  0.5251,  0.0303,  0.0840,  0.2124,  0.0939,  0.7997,
         -0.1165, -0.3976, -0.5830,  0.3213,  1.1100, -0.3370,  0.8012,  0.0202,
          0.2714, -0.6486,  0.3219,  0.7230, -0.3248,  0.3108,  0.0886, -0.1032,
          0.2158,  0.0644, -0.5490,  0.2470,  0.3508,  0.2019, -0.0027,  0.5234,
         -0.6719, -0.1235,  0.5409, -0.2945, -0.2814,  1.4016,  0.2851, -0.9452,
          1.9161, -0.1843,  0.0910,  0.6398, -0.2157,  0.4367, -0.1037, -0.0416,
         -1.3383, -0.0341,  0.0666,  0.4293,  0.4944,  0.3797,  0.4261, -0.6766]],
       device='cuda:0') tensor(2.6310, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
451000 特征值优化 tensor(2.2301, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.6497e-01, -3.5322e-01,  1.7714e+00, -1.7187e+00,  2.4806e+00,
          1.6633e-01,  9.7141e-01, -6.5804e-01,  1.6723e+00, -1.0511e+00,
          1.4373e+00,  9.2949e-01,  5.1251e-04, -2.2400e-01,  6.3553e-01,
         -4.2481e-02, -6.8112e-02, -1.1178e-02,  8.8417e-02, -2.9141e-02,
          2.2541e-02,  2.0984e-01, -1.0739e-01,  1.6961e-01, -6.6247e-02,
         -8.8835e-02, -3.3353e-01, -7.6541e-03,  8.1550e-01, -3.3656e-01,
          5.8802e-01,  6.5260e-02,  6.1777e-02, -4.8231e-01,  3.0783e-01,
          5.0778e-01, -1.2721e-01,  2.1599e-01,  1.7520e-01, -1.0095e-01,
         -2.8491e-01,  4.2544e-02, -3.6541e-01,  1.2764e-01,  1.2723e-01,
          1.8350e-01,  4.1807e-02,  5.2895e-01, -1.1030e+00, -2.1731e-01,
          3.5187e-01,  5.2856e-02, -2.7619e-03,  9.7253e-01,  6.6455e-01,
         -1.1032e+00,  1.6214e+00, -2.8108e-01, -9.6028e-02,  5.2393e-01,
         -1.5213e-01,  2.7786e-01, -7.6578e-02, -1.4472e-01, -1.2326e+00,
         -7.6989e-02,  2.4579e-01,  3.4442e-01,  7.7932e-02,  3.1015e-01,
          4.0797e-01, -4.5415e-01]], device='cuda:0') tensor(1.3053, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
452000 特征值优化 tensor(2.1588, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.0939e-01, -2.1911e-01,  1.7901e+00, -1.6699e+00,  2.5281e+00,
          1.8943e-01,  8.0386e-01, -3.1741e-01,  1.6609e+00, -9.1001e-01,
          1.0830e+00,  1.0725e+00,  1.7265e-03, -3.4978e-01,  4.9001e-01,
         -8.2377e-03,  3.0887e-03,  1.3508e-02,  9.1801e-03, -2.9505e-02,
          2.4100e-02,  1.8071e-01,  1.8051e-02,  8.1637e-02, -1.9617e-01,
         -4.2856e-01, -2.6669e-01,  4.7872e-02,  7.2631e-01, -3.3346e-01,
          6.1449e-01,  5.1182e-02,  5.9387e-02, -2.7706e-01,  2.5653e-01,
          4.1587e-01, -1.9799e-02,  8.2038e-02,  1.9058e-01, -8.4299e-02,
         -1.8108e-01,  1.4957e-02, -2.7037e-01,  1.3130e-01,  1.2616e-01,
          1.0166e-01,  5.2740e-02,  5.0454e-01, -9.9806e-01, -3.0149e-01,
          3.1787e-02,  2.0398e-01,  7.0288e-02,  9.2416e-01,  4.6002e-01,
         -1.0547e+00,  1.4707e+00, -2.1416e-01, -3.6081e-01,  4.8625e-01,
         -1.5308e-01,  2.1336e-01, -7.4082e-02, -6.3062e-02, -1.2086e+00,
         -6.1889e-02,  2.0289e-01,  3.0222e-01, -2.5884e-02,  2.0857e-01,
          2.5544e-01, -3.5092e-01]], device='cuda:0') tensor(0.9944, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
453000 特征值优化 tensor(16.9050, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.7993,  2.0172,  0.6459, -1.1719,  0.6849,  1.1073, -0.0747,  0.7904,
          0.9625, -1.7121,  1.1286, -0.0252, -0.3174,  1.0689, -0.2313,  1.4790,
          0.2164, -0.1547, -0.0697, -0.5379, -0.6102, -0.3179,  0.8774,  0.1090,
         -0.3407, -0.1233,  0.6059, -0.9197,  0.6165,  0.9690, -0.0692, -0.1566,
         -0.0339,  2.5232,  1.2923,  0.9071,  2.6413,  0.8310, -0.3286, -0.7221,
          1.6546,  0.7552, -0.8009, -0.7052,  0.7753,  0.8829, -0.1798, -0.7165,
         -0.2888,  0.3017, -2.0143,  2.2453, -0.7387,  1.0921, -0.0689, -0.0842,
         -0.4535,  0.7895, -0.7676,  1.4537,  0.3030,  0.1560,  1.5960,  0.7701,
          1.4708, -2.4976, -0.4764,  0.3079,  1.0824, -0.3253,  0.9043,  1.7318]],
       device='cuda:0') tensor(8.5293, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
454000 特征值优化 tensor(3.8554, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5203e-01,  1.0565e+00,  1.5235e+00, -4.2087e-01,  7.8849e-01,
          1.9104e+00,  1.0257e+00,  2.2767e+00,  1.3635e+00, -9.6514e-01,
          1.8095e+00,  6.8801e-01, -1.8413e-01,  1.4328e-01,  7.4392e-02,
          4.0684e-01, -1.2929e-01, -1.3037e-02, -1.8395e-03, -3.6108e-02,
         -1.6189e-01, -2.8740e-02,  1.8246e-01, -1.7670e-01,  1.7537e-01,
         -4.1859e-02,  1.1801e-01, -2.4145e-01,  3.5441e-02,  1.0599e-01,
         -8.3375e-02, -2.5550e-02, -1.2120e-02,  1.4036e+00,  8.0755e-01,
          1.1347e-01,  1.6361e+00,  9.0534e-01, -1.8318e-01, -1.4658e-01,
          8.5967e-01,  3.1330e-01, -1.8372e-01,  9.6843e-02,  3.1557e-01,
          3.4110e-03,  7.0432e-02,  2.6851e-01, -1.0030e+00, -4.5255e-01,
         -1.3617e+00,  1.3209e+00, -6.0890e-01,  3.9382e-01, -1.7686e-03,
         -2.1254e-03,  5.2733e-01,  3.9158e-01, -9.3500e-01,  4.8250e-01,
          1.0541e+00,  7.4340e-01,  1.1587e+00,  3.7819e-01,  1.7438e+00,
         -1.7143e+00,  6.4050e-02, -1.6218e-02,  1.5162e+00,  1.3932e-01,
          1.2713e-01,  8.9933e-01]], device='cuda:0') tensor(2.5012, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
455000 特征值优化 tensor(2.1478, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.1306e-01,  4.2335e-01,  1.5824e+00, -1.3230e+00,  7.0603e-02,
          2.1062e+00,  1.6039e+00,  2.6005e+00,  1.0191e+00, -1.2329e+00,
          2.1872e+00,  6.8062e-01, -4.4484e-02,  5.4669e-04,  7.7587e-02,
          1.5052e-01, -1.5907e-01,  2.2397e-01,  1.9440e-01, -3.4120e-02,
         -2.5087e-02, -5.7930e-02,  4.6369e-02, -8.9896e-02,  3.3625e-01,
          2.0632e-01,  3.4923e-01, -4.0368e-01, -8.4667e-02,  8.3473e-02,
         -2.3067e-02,  6.5345e-03, -2.4063e-02,  9.4748e-01,  7.9526e-01,
          1.4854e-02,  1.1823e+00,  8.1616e-01, -3.1292e-01,  1.1653e-01,
          6.1114e-01, -9.2152e-02, -2.6971e-01,  9.3698e-02,  1.5556e-01,
         -2.2000e-01,  5.4933e-02,  6.0455e-01, -9.8338e-01, -5.5562e-01,
         -9.7501e-01,  1.0437e+00, -3.9322e-01,  2.0654e-01,  3.3031e-01,
          1.2697e-01,  6.6865e-01,  1.9108e-01, -1.4678e+00,  6.3489e-01,
          1.0625e+00,  6.2768e-01,  1.0397e+00,  2.8248e-01,  1.1660e+00,
         -7.8968e-01,  1.7128e-01, -9.9163e-02,  1.2832e+00,  1.0638e-02,
         -3.7844e-01,  3.7789e-01]], device='cuda:0') tensor(0.8828, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
456000 特征值优化 tensor(12.8714, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1496, -1.6167,  0.5228,  0.4874, -0.3469,  0.9276,  0.6183,  0.1000,
         -2.4699,  2.0970, -0.0709, -0.5893,  0.7296, -1.6531,  0.0522, -0.5212,
          1.9128,  0.5706, -0.9301,  1.5727,  0.9931, -0.3509, -0.1274,  0.1784,
         -0.5536,  0.5272,  0.2460, -1.4279,  0.3752,  0.3428,  0.4106, -0.4347,
          0.4175,  1.3302,  0.4893,  0.0543, -0.1231,  0.4921, -0.7085, -0.9692,
         -0.5123, -0.4200,  1.6950,  0.1673,  0.8937,  0.5218,  0.1056, -1.2112,
          0.6504,  0.4894, -1.3428, -0.8033,  0.7949,  0.2205, -0.3780, -0.1427,
          1.7919, -0.5337, -1.3813, -0.0548,  1.0141, -1.0769,  1.1270,  0.8306,
          0.0842, -0.1291,  0.4549, -0.9182, -1.4288,  0.6412, -0.2695,  1.2529]],
       device='cuda:0') tensor(6.2941, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
457000 特征值优化 tensor(2.6399, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.8171e-01, -1.0453e+00,  1.0388e+00,  1.1600e+00,  7.8801e-02,
          1.3295e+00,  1.4800e+00, -6.4816e-01, -1.4763e+00,  8.3051e-01,
          5.0990e-01,  3.2002e-01,  1.7799e-01, -6.0469e-01,  1.3560e-01,
          1.2914e-01,  8.8060e-01,  2.3541e-01, -1.5182e-01,  7.0462e-01,
          4.4062e-01, -2.9677e-02,  3.8580e-02,  6.4883e-03, -8.4946e-02,
          7.3223e-02, -3.4388e-01, -4.7959e-01, -1.5683e-02,  5.9956e-03,
         -1.5861e-02, -1.4774e-03, -5.1856e-03,  4.9602e-01,  2.3775e-01,
         -1.7480e-01,  2.2299e-02,  1.0581e-01, -1.2907e-01, -1.9267e-01,
         -6.2124e-02, -2.0696e-01,  9.7712e-01, -6.6432e-01,  1.4787e-01,
          8.0007e-01, -1.7482e-01, -8.6572e-01,  1.9918e-01,  2.0253e-01,
         -5.8514e-01, -8.3446e-03, -8.7273e-02,  4.0018e-02, -1.3908e-01,
         -2.5800e-02,  8.0592e-01,  2.9682e-02, -9.9044e-01, -4.0380e-01,
          1.2911e+00, -1.0947e+00,  4.3540e-01,  1.9463e-01,  6.5945e-01,
         -1.1808e-01,  7.6474e-02, -1.5759e-01, -7.0431e-01,  1.5708e-01,
          8.9560e-02,  2.9188e-01]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
458000 特征值优化 tensor(2.1145, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9350, -1.0328,  1.0413,  0.9077,  0.1024,  1.1201,  1.6266, -0.6278,
         -1.2317,  0.4796,  0.5017,  0.4232,  0.1235, -0.1587,  0.0546,  0.2270,
          0.5075,  0.2760, -0.0979,  0.5901,  0.1916, -0.0274,  0.0020,  0.0273,
         -0.0341,  0.1758, -0.2483, -0.3194,  0.0270, -0.0053, -0.0189, -0.0039,
         -0.0090,  0.3921,  0.0425, -0.0240, -0.0372,  0.0874, -0.0903, -0.0782,
         -0.0861, -0.0542,  0.2467, -0.8202,  0.0710,  0.2165, -0.0149, -0.7397,
          0.2140,  0.1482, -0.4838,  0.0277, -0.0550,  0.0526, -0.0424, -0.0555,
          0.4458,  0.3626, -0.8407, -0.4326,  1.2624, -1.0673,  0.4185,  0.1448,
          0.5520,  0.0239, -0.1327, -0.0551, -0.5490,  0.0890, -0.1537,  0.2248]],
       device='cuda:0') tensor(0.9808, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
459000 特征值优化 tensor(8.3139, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4999,  0.9193,  0.6941,  0.1497,  1.6371,  0.1905, -0.9936, -0.3180,
         -0.6851, -1.1081, -0.6124,  0.3701, -0.0290,  0.1072,  0.1902, -0.7599,
          0.2023,  0.0045, -0.0366, -0.0408, -0.0081,  1.5882, -0.8364,  0.3066,
          0.0074,  0.0447, -0.0208, -0.0617,  1.0837,  0.8686,  1.1742,  0.3082,
         -0.4793, -0.4603, -0.3606,  0.2784,  0.2689, -0.3000, -0.2272,  0.3487,
          0.6653, -0.6275, -0.8403,  0.2143, -0.4188, -0.6415,  0.1258,  0.3339,
         -0.5353, -0.5885, -0.1454,  1.8727,  2.2069,  0.1267, -0.1526,  0.4645,
          0.8037,  0.5647,  0.8747,  0.8781,  0.6948, -0.2056, -1.0069, -0.0967,
          0.6931,  0.0111,  0.8008, -0.8533, -0.0516,  1.0743,  0.5718,  0.6465]],
       device='cuda:0') tensor(4.9364, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
460000 特征值优化 tensor(2.2958, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.7461e-01,  7.3553e-01,  1.3642e+00,  8.2325e-01,  2.3262e+00,
          4.5663e-01, -5.5778e-01,  4.1641e-01, -2.7441e-01, -1.0140e+00,
         -1.3645e-01,  7.4578e-01, -3.0404e-02,  3.5891e-01,  2.6105e-01,
         -4.7844e-02,  7.4922e-02,  7.0831e-02,  6.1306e-03,  2.0785e-02,
         -9.2326e-03,  7.4700e-01, -1.7738e-01,  1.8997e-01,  1.5734e-02,
          3.3801e-02, -3.4426e-02, -3.1866e-02,  5.4061e-01,  6.6035e-01,
          6.6154e-01,  1.0644e-01, -1.9587e-02, -6.9057e-02,  4.0263e-02,
          2.0441e-02,  1.5198e-02, -7.2984e-02, -2.2857e-01,  1.1395e-01,
          1.6952e-01, -3.2130e-01, -6.9489e-01,  3.0108e-01,  8.3436e-02,
         -4.3727e-01,  5.3895e-02,  9.0002e-01, -1.8677e-01, -2.6912e-01,
          9.2825e-02,  1.0798e+00,  1.9536e+00, -2.3204e-01, -2.3289e-01,
          2.2959e-01, -1.2767e-01,  2.3364e-01,  4.4393e-01,  4.5196e-01,
          1.6337e-01,  1.3742e-01, -3.5475e-01, -8.7367e-02,  9.2711e-02,
          1.9460e-03,  4.7788e-01, -4.3847e-01,  7.0835e-02,  3.7448e-01,
          2.0306e-02,  2.7945e-01]], device='cuda:0') tensor(0.8943, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
461000 特征值优化 tensor(15.1529, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.1873e-01,  1.4836e-01,  8.6312e-01, -9.4136e-01, -6.9745e-02,
          5.2859e-01,  2.7235e-01,  2.9618e-01, -1.6207e-01,  7.9614e-01,
          7.1173e-01, -5.2980e-01, -6.7338e-01,  2.3366e-01,  8.4693e-01,
          1.1233e+00, -9.4398e-01,  1.5749e+00, -4.4205e-03,  1.0858e+00,
          1.5513e+00, -9.6072e-01, -5.3585e-01, -9.5544e-02, -1.4904e-03,
         -2.4994e-01, -1.0391e+00,  5.4949e-01,  1.5016e-01,  1.3472e+00,
          6.9996e-02,  1.9488e-01, -1.9065e+00, -3.8479e-03, -6.3194e-01,
         -8.7265e-01,  1.0042e+00,  1.4292e+00, -8.7523e-01,  2.8782e-01,
          5.3164e-02,  4.7332e-01, -1.4241e-01,  8.8864e-01, -1.0377e+00,
         -7.6121e-02, -7.4543e-01, -7.3693e-02,  4.3599e-02,  7.8948e-01,
         -9.9108e-01, -2.1665e+00,  1.2705e+00, -1.0819e+00, -6.3980e-01,
         -8.6355e-01,  2.3595e-01, -1.1304e-01, -1.4630e+00,  9.3762e-02,
         -7.8736e-01,  5.2259e-01,  1.1323e+00,  2.8408e-01,  1.1925e+00,
          1.0263e+00, -3.9972e-01,  4.4087e-01, -8.4684e-01,  4.9187e-01,
         -1.1686e+00,  2.1607e-01]], device='cuda:0') tensor(8.4931, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
462000 特征值优化 tensor(2.5655, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7435e+00, -6.4345e-01,  1.8449e+00, -1.7689e+00,  7.9470e-01,
         -1.7509e-01,  1.0739e+00,  9.2969e-01, -3.1616e-01,  3.0683e-01,
          1.6477e+00,  1.0839e-01, -2.2748e-01,  1.0651e-02, -9.0296e-02,
          1.7264e-01, -1.4096e-01,  5.2395e-01, -5.3158e-05,  2.2638e-01,
          7.9781e-01, -5.9523e-01,  1.7708e-02, -7.8195e-02,  7.1648e-02,
          4.3323e-02, -1.6786e-01,  4.0855e-02, -4.4169e-02,  7.7634e-01,
         -4.7594e-02,  2.2291e-01, -1.0506e+00,  2.8985e-02,  6.9769e-03,
         -1.3013e-02,  5.0921e-01,  5.8655e-01,  2.7963e-02,  3.2969e-02,
          3.7669e-01,  1.6956e-02,  4.9838e-01,  1.4893e+00, -4.3014e-01,
          2.2652e-02, -2.3827e-02,  2.3347e-01,  2.8718e-01,  5.8035e-01,
         -8.2961e-02, -1.1792e+00,  2.0986e+00, -1.4458e+00, -5.7490e-01,
         -5.6551e-01, -2.3334e-01,  2.0484e-01, -3.7951e-01, -1.2608e-01,
         -8.2090e-02,  3.7119e-01,  4.6110e-01,  2.1163e-01,  1.0257e-01,
          6.5245e-02, -1.0264e-01,  9.3906e-02,  1.0046e-01, -2.9096e-01,
         -3.8135e-01,  2.3492e-01]], device='cuda:0') tensor(2.0095, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
463000 特征值优化 tensor(2.1081, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8175e+00, -7.1340e-01,  1.8354e+00, -2.2913e+00,  1.0018e+00,
          2.2501e-01,  9.7022e-01,  1.1974e+00, -5.5156e-02,  6.9699e-02,
          1.7590e+00,  2.1173e-01, -1.6242e-01,  1.3120e-01, -1.3060e-01,
          9.1429e-02, -1.0895e-05,  2.9391e-01, -1.6611e-01,  2.5150e-01,
          7.4931e-01, -6.3053e-01, -9.1400e-02,  1.4891e-02,  4.1118e-02,
          1.0078e-02, -2.6873e-02,  8.7782e-02,  6.7425e-02,  7.7114e-01,
         -2.0389e-02,  3.3780e-01, -9.4655e-01,  2.4001e-02, -1.6864e-02,
          2.7596e-02,  3.4005e-01,  4.1126e-01,  5.2341e-03,  3.6708e-02,
          2.4126e-01, -1.9055e-03,  4.9204e-01,  1.4785e+00, -3.6183e-01,
          3.8290e-01, -3.7424e-02,  2.5016e-01,  5.8771e-01,  7.4765e-01,
         -8.3597e-02, -9.3156e-01,  2.1508e+00, -1.2989e+00, -1.1878e+00,
         -1.0067e+00, -2.2986e-01,  1.8909e-01,  1.1449e-02, -3.6713e-02,
         -3.0691e-01,  2.9861e-01,  1.2653e-01,  2.2243e-02, -5.6641e-02,
          1.2792e-01, -2.0301e-03,  4.8334e-02,  8.4993e-02, -4.2638e-01,
         -2.1054e-01,  1.2776e-01]], device='cuda:0') tensor(1.4623, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
464000 特征值优化 tensor(7.6911, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0402, -0.3034,  1.3119, -0.2445,  0.7356,  0.2499,  0.1356,  0.0831,
         -0.6393,  1.1973,  0.3619,  0.9524, -0.1626,  0.0129, -0.0260, -0.4492,
         -0.1243, -0.4462,  0.0548, -0.3465,  0.1746,  0.1503, -0.5483, -0.9346,
         -0.5722,  0.2344,  0.3247, -1.2161, -0.0460,  1.3503, -0.1443, -0.0475,
          0.0350, -0.0135,  0.0841,  0.0758,  0.1252,  0.5209,  0.1927, -1.2099,
          0.0929,  0.7017,  0.4711, -0.0850,  0.1037,  0.2432, -0.2130,  0.1934,
          1.4948, -2.1442, -0.2952,  0.8038, -0.5620,  0.2363,  0.0428,  0.7031,
          0.6547, -1.1568,  0.2175,  0.3460,  0.9238,  0.1192, -0.0158,  0.0120,
         -1.2540, -0.1503, -2.0015, -0.2833,  0.9901,  0.2051, -0.1186,  0.4704]],
       device='cuda:0') tensor(4.0396, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
465000 特征值优化 tensor(2.1655, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.9441e-01, -6.5484e-03,  1.9466e+00, -4.3256e-03,  9.3800e-02,
          6.5967e-01,  1.6621e-02,  1.7886e-01,  1.7868e-01,  5.3594e-01,
          4.9573e-02,  1.6867e+00, -1.9537e-02, -1.2113e-02,  2.1507e-02,
         -2.9156e-02,  1.0051e-02,  1.1436e-02,  3.4260e-02, -2.5343e-02,
          1.6648e-03,  1.0102e-01, -2.7341e-01, -3.1445e-01, -2.8045e-01,
         -2.5197e-03,  8.8147e-02, -5.5626e-01, -5.0913e-01,  7.5880e-01,
          2.8684e-02,  3.4713e-02,  4.8037e-02, -1.0026e-02,  7.4601e-02,
          2.7861e-01, -8.8867e-02,  1.9850e-01,  3.0668e-01, -5.1205e-01,
         -1.6932e-01,  4.6348e-01, -1.2301e-01,  9.4658e-02,  9.0134e-02,
          7.1651e-02, -3.6303e-02,  5.7406e-01,  1.5849e+00, -1.5433e+00,
         -4.3343e-01,  2.8794e-01, -2.6028e-01,  1.8889e-01, -3.5094e-02,
          4.7815e-02,  1.0731e+00, -7.5445e-01, -3.4417e-01,  5.3381e-01,
          1.0083e-01,  2.1418e-01, -3.0464e-01, -9.1487e-02, -4.9351e-01,
          2.2409e-01, -1.1019e+00, -1.8883e-01,  1.8658e-01,  4.4626e-01,
          2.9293e-01,  1.6747e-01]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
466000 特征值优化 tensor(13.6648, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.6079,  0.2588,  0.4138, -0.2055,  0.4131,  0.2765,  0.3972, -1.1737,
          0.5369,  1.3514, -0.1870, -0.3823,  0.1242,  0.0055,  0.5008, -1.0849,
         -0.0413,  0.1026,  0.2152,  0.0676,  2.0445,  0.1827, -0.1785,  0.0731,
          1.0476,  0.7387,  0.4994,  1.2783,  0.0533,  0.0023, -0.1962, -0.9031,
         -0.6954, -0.0080,  0.4548, -0.2205, -0.7558,  0.3142,  0.7401, -1.5271,
         -0.7848, -0.4574, -0.1633, -0.1654, -0.4422, -0.1117,  0.1283, -0.0758,
          0.1974,  1.1079, -0.1078, -1.2474,  0.0849, -1.5969, -0.3135,  0.6466,
          0.3037,  0.1359,  1.2221,  0.9319,  1.2226,  1.2670,  0.4080, -0.2838,
         -1.2162, -1.3796, -0.2150, -0.7452,  1.4983, -1.0657, -1.6784, -0.2927]],
       device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
467000 特征值优化 tensor(2.9059, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5565, -0.3139,  0.8827, -0.8125,  0.9612,  0.0862,  1.0125, -1.4914,
          1.4610,  0.4058,  0.3026,  0.6207, -0.0306,  0.0611,  0.2612, -0.2840,
          0.1204, -0.0331,  0.0820,  0.0378,  0.7006,  0.0718,  0.0399,  0.0299,
          0.3359,  0.2286, -0.1878,  0.4765, -0.0289, -0.0926, -0.0294, -0.4351,
         -0.2560,  0.0160,  0.0107,  0.0440, -0.5372,  0.3447,  0.3065, -0.5562,
         -0.2497,  0.2782, -0.2041,  0.3498,  0.3152, -0.1659,  0.0037, -0.0573,
          0.2775,  0.7190, -0.0754, -0.4806,  0.6591, -0.6401, -0.2990,  0.2633,
         -0.1539,  0.1355,  0.1371, -0.0067,  0.6517,  0.5370,  0.0450, -0.3292,
         -0.3204, -0.3699, -0.6524, -0.2266,  1.7815, -0.5975, -0.7569,  0.3676]],
       device='cuda:0') tensor(1.2322, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
468000 特征值优化 tensor(2.1102, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5159, -0.9470,  0.7001, -0.6084,  0.7709,  0.2992,  0.9844, -1.6180,
          1.5526,  0.2019,  0.5097,  0.8427, -0.1202, -0.0674,  0.1869, -0.1834,
         -0.0617, -0.0449,  0.0161,  0.0171,  0.3733,  0.0289,  0.0123,  0.0175,
          0.2390,  0.3327, -0.2334,  0.2715,  0.0392, -0.0482, -0.0159, -0.3466,
         -0.2641,  0.0236,  0.0378, -0.0146, -0.3858,  0.2470,  0.2550, -0.4091,
         -0.1839,  0.2669, -0.3589,  0.2015,  0.3078, -0.2269, -0.1536, -0.3387,
          0.2264,  0.2249,  0.2854, -0.1674,  0.5386, -0.4156, -0.3386,  0.6304,
         -0.1932,  0.1801,  0.0421, -0.1307,  0.3324,  0.4332, -0.2039, -0.0135,
         -0.2404, -0.1510, -0.5500, -0.1390,  1.6024, -0.5209, -0.5928,  0.3147]],
       device='cuda:0') tensor(1.3247, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
469000 特征值优化 tensor(2.0882, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5022, -0.8082,  0.6274, -0.4270,  0.7084,  0.4203,  0.9772, -1.5911,
          1.5248,  0.2500,  0.5898,  0.8484, -0.1196, -0.0270,  0.1624, -0.1643,
         -0.0909, -0.0325, -0.0293,  0.0182,  0.3777,  0.0243,  0.0244,  0.0084,
          0.1989,  0.3252, -0.1737,  0.1992,  0.0193, -0.0438, -0.0180, -0.2999,
         -0.2593,  0.0284,  0.0207, -0.0347, -0.3421,  0.2439,  0.2353, -0.4065,
         -0.2088,  0.2734, -0.3515, -0.0812,  0.5201, -0.2168, -0.1253, -0.2387,
          0.1718,  0.1695,  0.1859, -0.1143,  0.5266, -0.3642, -0.3653,  0.5842,
         -0.1722,  0.1707,  0.0970, -0.1681,  0.3002,  0.3807, -0.3167,  0.0656,
         -0.2575, -0.1017, -0.4426, -0.1984,  1.5340, -0.4695, -0.5762,  0.2888]],
       device='cuda:0') tensor(1.2016, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
470000 特征值优化 tensor(9.4318, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-8.1199e-01,  1.8492e+00,  1.0653e-01, -3.2379e-01, -1.4528e-01,
          5.5991e-01, -2.5720e-01, -3.8885e-01,  2.2203e+00,  2.5665e+00,
          7.1008e-01,  2.1250e+00,  2.0514e+00,  1.9905e-03,  8.0339e-03,
         -1.1590e-01, -4.3339e-02, -1.8329e-03,  9.5451e-03,  3.2377e-01,
          5.7456e-01,  5.7028e-01, -2.0931e-03, -1.3310e+00,  6.8212e-02,
          4.6763e-01, -2.8840e-01, -1.8424e-02,  2.7012e-01, -8.8100e-02,
          3.0750e-02,  1.7915e-02, -1.0334e-02,  8.7232e-01, -6.0473e-01,
          2.3153e-01, -7.9369e-02,  1.6997e-01, -1.7851e-01,  1.7741e-01,
         -5.4112e-01,  3.2116e-01,  5.1884e-01,  3.3823e-01, -1.1103e+00,
         -7.2328e-02,  7.1327e-01,  9.4489e-01, -1.6175e-01, -9.0211e-01,
          9.8042e-01, -6.1260e-01,  5.8523e-02,  8.9548e-02,  1.5107e-02,
         -8.3283e-01,  1.2843e+00,  7.4610e-01,  9.3796e-01,  1.0166e-01,
         -1.2118e-01,  1.3643e-01, -1.6726e-01, -1.4529e-02,  6.9314e-01,
          1.6666e+00, -8.0399e-01,  2.8731e-01,  2.5417e-01,  3.1787e-01,
         -7.2301e-01,  2.6379e-01]], device='cuda:0') tensor(4.7417, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
471000 特征值优化 tensor(2.7177, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5088,  2.6557,  0.4952, -0.1751, -0.1293,  1.1183, -0.0558, -0.1928,
          2.7412,  2.3454,  0.6115,  1.9149,  1.1938, -0.0089,  0.0125, -0.0190,
         -0.0041, -0.0333,  0.0414,  0.0387,  0.8149, -0.0185, -0.0118, -0.4266,
         -0.0174,  0.3237, -0.3390,  0.0841,  0.2660, -0.0340, -0.0273, -0.0486,
         -0.0332,  0.4310, -0.1747,  0.0853, -0.0491,  0.0998, -0.9063, -0.3207,
         -0.3828, -0.1235,  0.9666,  0.9389, -0.2483,  0.6276,  0.6337,  0.5609,
         -0.1460, -0.6789,  0.9897, -0.5191, -0.2388,  0.1416, -0.0204, -0.0808,
          0.7464,  0.2145,  0.7152,  0.3647, -0.1557,  0.0876,  0.0321, -0.0300,
          0.1517,  1.0832, -0.4204,  0.3640, -0.4145,  0.3807, -0.9395,  0.2977]],
       device='cuda:0') tensor(1.0244, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
472000 特征值优化 tensor(2.0852, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0993,  2.2357,  0.4285, -0.0646, -0.1441,  1.1464, -0.2702,  0.0491,
          2.7715,  2.5665,  0.1666,  1.6740,  0.9279, -0.0573,  0.0158, -0.0578,
          0.0105, -0.0103, -0.0294,  0.0951,  0.7354, -0.0557, -0.0209, -0.2365,
          0.0186,  0.4462, -0.3301,  0.0853,  0.1750, -0.0770, -0.0217, -0.0263,
         -0.0081,  0.3345, -0.1485,  0.0509, -0.0373,  0.0589, -0.8998, -0.4337,
         -0.1821, -0.1938,  0.6855,  1.0053, -0.2071,  0.9374,  0.4380,  0.5144,
         -0.3272, -0.5638,  0.9108, -0.6186, -0.2300,  0.1412,  0.0231, -0.1118,
          0.2600,  0.2570,  0.5010,  0.3800, -0.1210,  0.0386,  0.0823,  0.0504,
          0.0282,  1.0274, -0.3490,  0.4256, -0.4547,  0.3092, -0.5643,  0.3901]],
       device='cuda:0') tensor(0.6906, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
473000 特征值优化 tensor(10.5629, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7500,  0.1286, -1.2367, -0.1080,  1.0416,  2.3937,  0.5771,  0.6753,
          2.4431,  0.4591, -0.8889, -0.9220, -1.4130, -0.2106,  0.4184, -0.5038,
          0.9956,  0.1765,  0.0645, -0.8241,  0.2757, -0.0726,  0.0187,  1.1827,
         -0.6283,  0.3860, -0.4536, -0.5307, -0.0543,  0.6488, -0.9339, -0.1159,
          0.4560,  1.5977, -0.0528,  0.2839,  0.2423, -0.1916, -0.9534, -0.0870,
          0.2691,  0.0918, -0.3313,  0.0266, -0.4419, -0.1000, -0.5369,  0.7940,
         -0.9763,  0.2448,  0.2036, -0.5306,  0.6383,  1.2927,  0.0241, -0.0962,
          0.2265,  2.9887, -2.2533, -0.1119, -1.2623,  0.0182, -0.4124,  0.4600,
          0.7718,  0.5020,  0.3195, -0.2758, -0.5930,  0.4667,  1.4211, -0.4539]],
       device='cuda:0') tensor(6.0235, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
474000 特征值优化 tensor(2.8451, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4237e+00, -9.4046e-01, -5.6864e-01, -6.9415e-02,  1.3582e+00,
          3.4136e+00,  6.1051e-01,  3.4071e-01,  2.5925e+00,  5.4224e-01,
         -4.6146e-01, -4.0071e-01, -5.8908e-01,  9.5503e-02,  3.1010e-01,
          1.2732e-01,  2.7894e-01, -4.4722e-02, -7.1346e-03, -2.7175e-01,
          4.3175e-01,  1.5885e-01,  6.7210e-02,  2.7158e-01, -1.5241e-02,
         -3.9247e-02,  2.1237e-02,  5.6812e-03,  1.3411e-02,  1.8245e-01,
         -6.1880e-01, -1.4356e-02, -1.4744e-03,  1.4158e+00, -5.0212e-02,
         -9.5358e-03,  1.8226e-01, -7.0827e-02, -7.3254e-01, -1.4459e-01,
          6.9643e-02, -3.9274e-02,  7.0410e-02,  1.5922e-01,  1.4653e-01,
         -5.7296e-01, -3.2759e-01,  6.3170e-01, -4.0554e-01, -1.1232e-01,
          5.4609e-01, -3.0009e-01,  3.7776e-02,  9.9314e-01,  4.6453e-02,
          5.2789e-02,  1.2203e-01,  1.9515e+00, -1.6791e+00, -5.6082e-01,
         -8.0478e-01,  1.9721e-01,  1.0259e-01,  7.7921e-02,  4.7062e-01,
          4.9296e-01,  8.1509e-01, -2.6726e-01, -3.0911e-01,  9.2069e-02,
          9.8777e-01, -4.0412e-01]], device='cuda:0') tensor(1.1196, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
475000 特征值优化 tensor(2.1380, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4433e+00, -1.0840e+00, -4.5316e-01, -3.0197e-01,  1.2127e+00,
          3.7795e+00,  1.7991e-01,  3.8241e-01,  2.3730e+00,  5.5438e-01,
         -5.7282e-01, -5.9355e-02, -5.0938e-01,  2.4051e-02,  4.0168e-01,
          3.8473e-02,  2.1562e-01, -1.7973e-02,  4.6211e-02, -1.2913e-01,
          4.5300e-01,  1.0135e-01,  5.7938e-02,  9.8518e-02,  2.4965e-02,
         -8.4707e-02,  6.4145e-02,  3.9586e-02,  3.5119e-03,  1.2050e-01,
         -3.6133e-01,  8.6909e-03,  2.1418e-03,  1.2955e+00, -2.2474e-02,
         -1.9673e-02,  1.0178e-01, -1.0891e-01, -6.2204e-01, -1.4308e-01,
          1.2028e-01, -5.0696e-02, -9.4830e-02,  3.3916e-01,  3.1629e-01,
         -2.9026e-01, -2.8320e-01,  4.0318e-01, -2.4621e-01, -2.1396e-01,
          4.1229e-01, -2.7318e-01, -1.6666e-01,  6.6357e-01, -1.4158e-02,
          9.1926e-02,  3.0483e-01,  1.5455e+00, -1.6902e+00, -5.2634e-01,
         -5.3401e-01,  1.7385e-01,  1.2208e-01,  2.4924e-02,  4.9598e-01,
          3.6547e-01,  8.8588e-01, -3.0082e-01, -3.1322e-01,  2.9823e-02,
          6.1489e-01, -2.2735e-01]], device='cuda:0') tensor(0.7937, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
476000 特征值优化 tensor(12.7504, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.2891e-02, -1.7904e+00,  1.4862e+00,  6.3417e-01, -9.6739e-02,
          4.7638e-01, -1.1970e-01, -2.9430e-01,  8.0948e-01,  1.0905e-02,
         -1.1367e+00, -3.4758e-01, -3.2403e-01, -2.9952e-01,  3.7886e-01,
          1.6695e-02, -4.7041e-01,  3.0964e-01, -1.0964e-01,  5.8072e-01,
          1.7058e+00,  3.0929e-01,  6.9718e-01,  3.3275e-01, -1.6992e+00,
          1.5512e-02,  1.6830e-02, -1.9669e-01,  6.0007e-01,  3.9359e-01,
         -3.7887e-03,  9.1649e-01, -8.3727e-01, -3.2041e-01,  6.7651e-02,
          5.2155e-02,  2.6723e-01, -1.2869e-01,  6.0986e-01, -2.9861e-01,
          6.0845e-01,  4.9379e-01, -7.8946e-01, -5.6130e-01,  9.3982e-01,
         -3.0028e-01,  5.1578e-01, -1.1400e+00, -1.1588e+00,  4.7597e-04,
         -8.7745e-01, -5.8756e-01,  1.3134e+00, -8.6599e-01, -8.6687e-01,
         -1.0018e-01, -3.0094e-03, -8.1589e-01, -8.9683e-01,  1.3190e+00,
         -3.0289e-01, -3.1473e-01,  5.9906e-01, -7.5963e-01,  1.5120e+00,
          2.2861e-01,  4.1102e-01, -9.3215e-01,  4.0176e-01,  2.1487e+00,
          1.5657e+00, -8.1658e-01]], device='cuda:0') tensor(6.0231, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
477000 特征值优化 tensor(3.0203, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8937, -1.4578,  1.4679,  1.5482,  0.2487, -0.3865,  0.1760, -0.4198,
          0.9007, -0.3448, -0.1169,  0.0214, -0.1147,  0.0598,  0.0513, -0.0322,
         -0.0731,  0.0073, -0.0329,  0.1109,  0.8907,  0.0610, -0.0299, -0.0367,
         -0.6430,  0.5017,  0.0814,  0.1463,  0.0414,  0.0885, -0.0172,  0.4457,
         -0.1236, -0.1196, -0.0273,  0.0094, -0.0076, -0.0708,  0.0429, -0.0278,
          0.1724,  0.1087,  0.0448,  0.0961,  1.5674,  0.1128, -0.0103, -0.9890,
         -0.1322, -0.0111, -0.7736, -0.1878,  1.5562, -0.8962, -0.1112, -0.4100,
         -0.0316, -0.0192,  0.2314,  0.3302,  0.0572, -0.0612,  0.2086, -0.1682,
          0.2982, -0.2659,  1.3255, -0.6721, -0.0194,  1.0994,  1.6244, -0.6189]],
       device='cuda:0') tensor(2.0675, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
478000 特征值优化 tensor(2.1123, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1195e+00, -1.3226e+00,  1.5205e+00,  1.5867e+00, -6.9144e-02,
         -5.5894e-01,  6.8749e-02, -3.2668e-01,  6.7435e-01,  3.9242e-02,
          2.1803e-01,  3.7396e-02, -9.9724e-02, -3.6786e-03,  9.8422e-03,
         -4.0301e-03,  6.5382e-03, -2.9650e-03, -8.0910e-04, -4.1715e-04,
          7.9177e-01, -2.2926e-02, -3.6999e-02, -2.0637e-02, -3.9467e-01,
          4.2079e-01, -6.2306e-02, -6.2626e-02,  9.5971e-02,  1.2245e-03,
          1.1035e-01,  1.1705e-01,  3.9798e-02, -1.4034e-01,  1.6308e-03,
         -7.4384e-04, -2.7710e-02,  3.3199e-02,  1.5890e-02,  2.7281e-03,
         -1.4321e-01,  3.3755e-02, -1.2095e-02, -1.0361e-01,  1.4383e+00,
          2.3797e-01, -1.4408e-01, -9.1348e-01,  7.1410e-02,  1.0300e-01,
         -8.4200e-01,  2.5695e-02,  1.2383e+00, -8.6042e-01,  3.3329e-02,
         -4.2470e-01, -1.1115e-01, -4.1506e-02,  7.9235e-02, -2.3662e-02,
         -1.7952e-01,  9.8601e-02,  4.4634e-02, -4.0841e-02,  4.3743e-01,
         -1.5111e-01,  1.2692e+00, -6.1776e-01,  1.8228e-01,  6.3070e-01,
          1.5338e+00, -6.8068e-01]], device='cuda:0') tensor(0.8004, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
479000 特征值优化 tensor(8.2721, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4290, -0.1203,  0.0469, -0.3789,  0.1371, -1.0845,  0.3295, -0.3786,
          1.5695,  2.2909,  1.4674, -0.0313,  0.1237,  0.2364,  0.7862,  0.0371,
         -1.1090,  0.3037,  0.2399,  0.3646,  0.0844, -0.0379, -0.2340, -0.6398,
         -1.2006,  0.6168,  0.3188,  0.2785, -0.4666, -0.0526,  0.3281, -1.7545,
         -0.5627, -0.0504, -0.5180, -0.8462, -0.5921,  0.1356,  0.6373,  0.1105,
         -0.7771,  0.0562,  0.3751, -0.4290, -0.5589,  0.3970, -0.6577, -0.1535,
         -0.7937,  0.9341,  0.0681, -0.1718,  1.2374,  0.0827, -0.5834, -0.4030,
         -0.2802,  0.2721,  0.3691, -0.6879,  2.0056,  0.6627, -0.6954,  0.2684,
          0.7501, -0.2694, -1.2963,  0.7654,  0.1693,  1.2240,  1.6519, -1.1607]],
       device='cuda:0') tensor(4.3860, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
480000 特征值优化 tensor(2.2568, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1079e-01,  1.9741e-01,  9.2780e-02,  5.6713e-02,  8.8915e-01,
         -2.0129e-01,  1.1175e+00, -4.4119e-01,  1.5539e+00,  1.7422e+00,
          1.9531e+00, -1.2615e-01,  2.6979e-02, -3.5325e-03,  6.4874e-02,
          1.2799e-01, -2.6677e-01,  1.2406e-01,  2.0219e-01,  1.3506e-01,
          4.8195e-02,  4.8513e-03,  3.4764e-03, -1.0964e-03, -5.8437e-01,
          2.4548e-01, -7.6290e-02, -1.3291e-01, -7.3958e-02, -2.4639e-02,
          1.5793e-01, -9.3230e-01, -3.3026e-01, -2.0274e-02, -8.9712e-03,
         -4.7713e-02, -7.7820e-02,  1.7756e-03,  4.4467e-01,  2.0333e-01,
         -5.4629e-01,  6.6687e-02, -4.4851e-01, -1.5876e-01, -1.3627e-01,
         -3.8663e-01, -2.0438e-01, -3.3761e-01, -2.3788e-01,  6.2559e-01,
         -9.5274e-02, -1.1190e-02,  1.5684e+00, -6.9169e-01, -1.1218e+00,
          1.7041e-01, -4.6610e-02,  7.4104e-02,  2.3834e-02, -6.4322e-03,
          1.6963e+00, -1.2507e-01, -4.3534e-01,  2.9627e-01,  4.9025e-01,
          1.1490e-01, -1.5266e+00,  1.0879e+00, -1.6007e-01,  6.6413e-01,
          1.6124e+00, -8.8206e-01]], device='cuda:0') tensor(0.8973, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
481000 特征值优化 tensor(21.3057, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.4374e-01,  6.9247e-01,  7.2087e-01,  2.6723e-01, -7.7838e-01,
          1.1288e+00, -7.1257e-01,  8.5017e-01, -1.0702e+00, -4.0453e-01,
          8.8834e-01, -1.0838e+00, -3.3500e-01, -8.7126e-01, -7.5474e-01,
          6.6212e-01, -1.0528e+00, -2.9299e-01,  1.1120e+00, -1.9644e+00,
         -6.6551e-01,  6.6507e-01,  5.7413e-01,  1.6212e-01,  3.6661e-01,
         -7.6363e-01, -2.6645e-01, -2.2339e-01,  7.0503e-01,  1.7522e+00,
         -2.3457e-01,  9.8712e-01,  2.3034e+00,  9.7779e-01,  6.5538e-01,
         -4.0541e-01,  2.0496e+00, -3.4990e-01, -3.0146e-01, -1.8276e+00,
         -1.8020e-01, -6.9044e-01, -2.9327e-01,  1.4092e+00, -9.7293e-01,
          4.3046e-01, -8.1522e-02,  1.2926e+00, -5.7152e-01,  9.9650e-01,
         -1.2803e+00,  1.0610e+00, -2.3956e+00,  1.1278e-01, -5.9688e-02,
          2.2836e-01,  1.5870e+00, -2.7130e-01, -2.3276e-05, -1.6288e+00,
         -9.8137e-02, -1.5413e+00, -8.0411e-01, -1.2867e-01, -1.5510e+00,
          8.7566e-01,  6.6781e-01,  2.3126e+00,  3.6126e-01, -1.4253e+00,
          2.2100e+00,  5.0630e-02]], device='cuda:0') tensor(10.8192, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
482000 特征值优化 tensor(7.0086, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9922,  0.2976,  1.3450,  0.6877,  0.3494,  0.2565,  0.1563,  0.2572,
         -0.1457,  0.4701,  1.9104, -0.3642, -0.0501, -0.3232, -0.0684,  0.3211,
         -0.2652, -0.0244,  0.2882, -0.9395, -0.1211,  0.4308,  0.0421,  0.0252,
          0.0159,  0.0130, -0.0605, -0.0205,  0.1562,  1.2027, -0.1324,  0.3676,
          1.3075,  0.2330,  0.0172, -0.0029,  1.1375, -0.0984, -0.4867, -0.8997,
         -0.0566, -0.4011,  0.1363,  0.2270, -0.5753, -0.1280,  0.1057,  1.6331,
         -0.2071,  1.3398, -0.9039,  1.1087, -1.2282, -0.4703, -0.2774,  0.0243,
          0.2574,  0.3012, -0.1679, -0.5179,  0.8117, -0.6218, -1.3088,  0.5726,
         -0.7007,  0.1669,  0.3845,  1.2638,  1.4182, -1.7152,  1.0648, -0.1431]],
       device='cuda:0') tensor(4.3417, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
483000 特征值优化 tensor(2.1640, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1878e-01,  3.5819e-02,  2.0040e+00,  8.9885e-01,  1.0163e+00,
          1.4743e-01,  5.8424e-01, -5.0494e-01,  1.8094e-01,  1.0828e+00,
          2.2988e+00, -1.2553e-01,  6.9797e-04,  2.9945e-02,  6.3744e-02,
          5.8178e-03, -3.2254e-02,  1.9747e-02,  1.6556e-01, -8.2458e-02,
          2.2013e-02,  3.4527e-01, -1.4461e-02,  4.9268e-02,  9.8721e-03,
          8.7241e-02,  8.4353e-02,  4.2013e-02,  3.2384e-01,  7.1081e-01,
         -1.5676e-01,  4.4001e-01,  7.6018e-01,  2.2519e-02,  5.9962e-03,
          7.3092e-03,  6.0594e-01, -3.0151e-01, -1.7024e-01, -3.5467e-01,
          4.1798e-02, -3.7850e-01, -1.1338e-01,  7.3115e-02,  1.2436e-01,
         -4.8016e-02,  5.9306e-02,  1.2166e+00, -5.6187e-01,  1.1925e+00,
         -5.7752e-01,  8.1005e-01, -5.0888e-01, -2.6102e-01, -5.4187e-02,
          1.9022e-01, -2.2543e-01,  1.9224e-01,  1.9187e-01, -8.4675e-02,
          1.0204e+00, -2.4582e-01, -1.8196e+00,  7.2806e-01, -3.3652e-01,
          2.7200e-01,  2.7971e-01,  5.5155e-01,  1.9006e+00, -1.2029e+00,
          3.3451e-01,  3.0922e-01]], device='cuda:0') tensor(0.9303, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
484000 特征值优化 tensor(9.5226, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4743,  0.4226,  1.4560, -0.2306,  1.9475,  0.9108, -0.3673, -0.1160,
          1.2182, -1.8961, -0.0679, -1.5959, -0.7437, -0.2397,  0.0693, -0.1430,
          0.0259,  1.0996, -0.3151, -0.0934, -0.0959,  0.6257,  1.7811,  0.4465,
         -1.8206,  0.9558,  0.4069,  0.3940,  0.0414,  0.2110,  0.9466, -0.8214,
          0.2062, -0.0597,  0.4684,  0.4124,  0.2834,  0.8861, -0.7323, -0.7086,
         -0.2014,  0.5826,  1.1236,  0.1121,  0.8758,  0.3130, -0.7164, -0.3690,
         -0.3163,  0.4547,  0.0432, -0.3872,  0.3706,  0.4014, -0.7454, -0.0652,
          0.2107,  0.0226, -0.0961, -0.6618, -0.4221,  0.0970,  1.2887,  0.0355,
         -0.0408,  1.6690, -0.7060, -0.3157, -0.4596,  0.6416,  0.5463, -0.6201]],
       device='cuda:0') tensor(5.7256, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
485000 特征值优化 tensor(2.3949, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.8896e-01,  1.1589e-01,  1.6473e+00,  2.6025e-01,  1.5230e+00,
          1.5360e+00,  2.4789e-01,  4.7619e-01,  1.9902e+00, -9.5927e-01,
          5.1059e-01, -9.8241e-01, -2.6745e-01, -2.3082e-01,  3.2615e-02,
          6.8467e-03,  3.8452e-02,  1.6366e-01, -8.0883e-02, -5.1047e-02,
          9.8992e-02,  1.2756e-01,  7.9040e-01,  3.1297e-02, -8.3864e-01,
          2.3214e-01, -3.2667e-02,  2.2418e-01, -8.1172e-04,  1.0170e-01,
          3.6055e-01, -1.1860e-01,  1.1110e-01, -1.3547e-02,  6.3591e-02,
          2.2709e-01,  9.2926e-02,  2.2697e-01, -9.2276e-02, -2.0843e-01,
          9.1256e-02,  2.4160e-01,  4.1048e-01,  2.7207e-03,  4.0987e-01,
          2.6791e-01, -3.7920e-01, -1.1714e+00, -3.9969e-02,  1.7905e-01,
         -4.6670e-01, -5.5335e-02, -7.8612e-02,  4.3900e-01, -1.5729e-01,
         -1.7459e-01, -5.9354e-01, -9.1789e-02,  5.1167e-01, -6.6346e-01,
         -2.4174e-02,  1.0128e-01,  4.3895e-01,  2.5633e-02,  4.6286e-02,
          9.4355e-01, -2.2695e-01, -2.5987e-01, -2.4975e-02,  1.9527e-01,
          6.0596e-01, -3.5840e-01]], device='cuda:0') tensor(1.1313, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
486000 特征值优化 tensor(2.0819, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7108e-01, -9.0172e-02,  1.7964e+00,  3.5568e-01,  1.1542e+00,
          1.5451e+00,  2.3918e-01,  1.1287e-02,  2.0899e+00, -6.6913e-01,
          3.5706e-01, -8.2662e-01, -1.8921e-01, -6.6250e-02,  5.7608e-02,
         -2.3459e-02, -3.8681e-02,  2.3476e-02, -2.9898e-02, -1.5527e-02,
          1.7144e-01,  1.1023e-01,  6.4594e-01,  1.0061e-01, -6.3452e-01,
          1.5388e-01, -5.1796e-02,  1.7301e-01,  1.9223e-02,  8.3849e-02,
          2.0006e-01, -3.0150e-02,  1.7938e-02, -2.1465e-02,  2.2605e-02,
          2.1025e-01,  7.3150e-03,  5.9655e-02,  5.5048e-02, -1.9764e-01,
         -1.4586e-02,  2.1469e-01,  2.0305e-01,  2.0327e-01,  3.1115e-01,
         -7.9493e-02, -2.8603e-01, -1.1970e+00,  8.4148e-02,  1.2340e-01,
         -5.5549e-01, -4.9081e-02, -2.9085e-01,  3.9348e-01,  5.8726e-02,
         -1.9301e-03, -6.9048e-01,  5.5488e-02,  4.5513e-01, -6.0563e-01,
         -1.0908e-02,  1.5174e-02,  1.8562e-01, -4.8910e-02, -3.0758e-02,
          8.9078e-01, -2.9731e-01, -3.0676e-01, -1.9187e-02,  9.2581e-02,
          5.3923e-01, -3.7413e-01]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
487000 特征值优化 tensor(5.5011, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6787,  0.3137,  0.5195, -0.6191,  0.2716, -0.5547,  1.5550,  1.9193,
          0.7014, -0.8052,  0.5118,  0.8947,  0.2901, -0.8049, -0.5716,  0.3902,
         -0.0555,  0.0814,  0.9409,  0.0329, -0.1561, -0.2525, -0.0115, -0.0871,
          0.7103,  0.1990,  0.0829, -0.0409,  1.3663,  0.0586, -0.0548,  0.2983,
         -0.6423, -0.0211,  0.1493,  0.1983,  0.7370,  0.5225,  0.4008,  0.0147,
          0.1475, -0.3191, -0.4523, -0.2565,  0.4501, -0.0430, -0.0063,  0.2137,
         -0.3744,  0.5263,  0.6711,  0.0660,  0.9214, -0.6833, -0.2252, -0.0948,
          0.2839, -0.2542,  0.1709, -0.0994, -0.4166,  0.3570,  0.0376,  0.2125,
          0.5423,  0.6448, -0.4620, -0.0382, -1.5685,  1.0020,  0.7172,  0.0423]],
       device='cuda:0') tensor(3.5753, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
488000 特征值优化 tensor(2.0818, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5059,  0.3907,  0.9854, -0.5326, -0.1155, -0.4065,  1.8271,  1.5838,
          0.8093, -0.5563,  1.0068,  0.4458, -0.0118, -0.0364, -0.0338,  0.3890,
         -0.2335,  0.2917,  0.4853, -0.0076, -0.0387,  0.0168,  0.0462,  0.0124,
          0.1856,  0.2020,  0.1423, -0.0770,  0.8005,  0.0022, -0.0175,  0.1396,
         -0.0885, -0.0392,  0.1018,  0.0695,  0.5428,  0.4527, -0.0045,  0.1229,
          0.2144, -0.2155, -0.4969,  0.1169,  0.3105, -0.3141,  0.0425,  0.6820,
         -1.0414, -0.0417,  0.5395, -0.0200,  0.0374,  0.0038, -0.4010, -0.4969,
          0.2762, -0.0828,  0.2018, -0.1504, -0.1660,  0.3989, -0.3236,  0.2436,
          0.2324,  0.5084, -0.3872, -0.2742, -0.8874,  0.1805,  0.2453,  0.3058]],
       device='cuda:0') tensor(1.5578, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
489000 特征值优化 tensor(7.0002, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.4674e-02, -1.4435e+00, -5.0842e-01, -2.9231e-02,  2.9103e+00,
          1.5423e+00,  3.3222e+00,  6.1293e-01,  7.5114e-01, -1.0144e-01,
          1.6392e+00,  6.0730e-01, -3.1026e-01,  2.4427e-02, -1.4674e-01,
         -8.0333e-02,  1.1240e-01,  2.0303e-01, -8.8550e-02,  4.8723e-02,
          2.9261e-01,  1.2374e-02,  2.2553e+00,  2.2283e-01,  4.1373e-02,
         -4.6856e-01,  1.0169e+00,  1.0148e-01,  3.5870e-01,  6.3359e-03,
          1.1931e-01,  1.6274e+00, -7.9136e-02, -1.0219e-02,  1.6093e-02,
         -3.3165e-04,  5.7054e-01, -1.7280e-01,  2.2226e-01, -1.7175e-01,
         -9.9989e-02, -1.4016e-01,  4.0699e-01, -4.4304e-01,  8.2256e-01,
          2.2373e-01, -3.3714e-01,  1.4510e-01,  8.3570e-01, -1.7914e+00,
         -4.0896e-01,  9.8557e-02,  6.8767e-01, -1.2882e+00, -6.4908e-02,
         -7.4318e-02, -5.6945e-01,  2.0474e-01,  9.1884e-01, -1.3037e+00,
         -1.6371e-01, -2.5887e-02, -1.6053e+00,  1.8291e+00,  2.2351e-01,
          5.0960e-01, -2.6647e-01, -2.8162e-01, -1.1775e-01, -3.1708e-01,
         -5.3931e-02,  3.9812e-02]], device='cuda:0') tensor(4.5229, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
490000 特征值优化 tensor(2.5964, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.2806e-03, -9.3320e-01,  2.4572e-02, -1.8754e-01,  3.1723e+00,
          2.5906e+00,  3.7680e+00,  9.0378e-01,  3.0317e-01, -3.5740e-02,
          1.8643e+00,  4.8445e-01, -8.2906e-02, -3.3827e-02, -1.1645e-02,
         -8.0253e-02,  2.0264e-01,  4.3417e-01, -6.7511e-02,  3.9702e-02,
          6.4369e-02,  8.8421e-02,  1.2490e+00,  2.8843e-03,  5.4130e-03,
         -2.6559e-03,  1.7066e-01,  2.6474e-02,  2.6720e-01,  1.0497e-01,
          4.6455e-02,  1.1533e+00,  4.3814e-01,  4.0942e-02,  1.7498e-02,
          2.7395e-02,  2.1725e-01,  5.7597e-02, -2.6326e-02, -1.3769e-03,
          7.6605e-02,  2.9176e-02,  4.2949e-02,  2.0540e-01,  2.3322e-01,
          5.4735e-01, -1.6397e-01,  3.4197e-01,  7.7659e-01, -1.2810e+00,
         -4.6784e-01,  1.0693e-01,  1.2099e+00, -1.2323e+00, -1.0911e+00,
         -2.9773e-01, -1.2092e+00,  4.3359e-01,  4.4369e-01, -6.7215e-01,
          4.4175e-01, -5.4095e-01, -5.0542e-01,  1.2306e+00, -2.0969e-01,
          1.3491e-01,  6.9125e-02, -4.2617e-02,  2.1133e-01, -1.6657e-01,
         -6.5991e-02,  1.1659e-01]], device='cuda:0') tensor(1.3782, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
491000 特征值优化 tensor(2.1247, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.3197e-01, -5.4306e-01,  1.7973e-01, -2.2435e-01,  2.8487e+00,
          3.0275e+00,  3.7689e+00,  1.1123e+00,  3.2269e-01, -3.9209e-02,
          1.7678e+00,  3.4961e-01, -2.8359e-02, -1.0629e-01, -6.2787e-03,
         -6.7948e-02,  8.4369e-02,  1.5382e-01,  3.0052e-02,  6.0114e-02,
         -4.5391e-03,  8.9248e-02,  7.3878e-01,  5.2463e-02,  1.0896e-03,
         -3.6123e-03,  1.2738e-02,  2.6178e-02,  7.4299e-02,  1.1094e-01,
          3.9134e-02,  1.1779e+00,  5.7128e-01,  2.7569e-03,  2.4759e-02,
         -4.8437e-03,  1.4642e-01,  9.2200e-02, -3.3728e-02,  5.5240e-03,
          1.1633e-01,  2.6496e-02,  1.6823e-01,  9.0866e-02,  8.7433e-02,
          3.2014e-01, -1.0395e-02,  2.5372e-01,  5.9684e-01, -1.0098e+00,
         -6.7851e-01,  2.3789e-01,  1.2323e+00, -1.1041e+00, -1.1572e+00,
         -8.5947e-02, -1.5029e+00,  2.6969e-01,  1.4300e-02, -2.3098e-02,
          5.5709e-01, -4.0227e-01, -3.7349e-01,  1.0776e+00, -1.3256e-01,
          9.3470e-02,  8.0609e-02, -2.2721e-02,  4.6797e-02, -1.3704e-02,
         -3.0104e-02,  1.5403e-01]], device='cuda:0') tensor(1.0343, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
492000 特征值优化 tensor(8.9221, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3304, -0.2034,  0.0960, -1.1411,  1.0564,  1.6806, -0.0248, -0.1865,
          1.3932, -0.8713,  0.1201,  0.0454,  0.5008, -1.4144,  0.5271, -0.0124,
         -0.0464,  0.5294, -0.1365,  1.5937,  0.6687, -0.0566,  0.4959, -0.1095,
          0.2872,  0.3987,  0.6724, -0.2825,  1.4721, -0.1044, -0.1205, -0.1340,
         -0.0808, -0.6974, -0.3888, -0.8490,  0.1816,  0.2210,  0.4625, -0.7291,
          0.2668,  0.3947,  0.4052, -0.4353,  0.3735,  1.6228,  0.9109, -0.0266,
         -0.2926,  0.1241, -0.1011, -0.7436, -0.7826,  0.4132, -0.5557, -0.3179,
          1.1225,  0.8460, -0.1960,  1.1271, -0.7683,  0.1451,  0.1264, -0.8925,
         -0.0824, -0.6936,  0.5130, -0.0053,  0.0761, -0.4841,  2.5917,  0.0854]],
       device='cuda:0') tensor(5.0670, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
493000 特征值优化 tensor(2.2333, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9106, -0.4920,  0.8459, -0.9415,  0.4591,  2.0878, -0.2304, -0.5632,
          0.9902, -1.2691, -0.1712,  0.4325,  0.2263, -0.5022,  0.2591, -0.0320,
         -0.0842,  0.0638, -0.0097,  0.7455,  0.3848, -0.0639,  0.2131, -0.1127,
          0.0041, -0.1022,  0.1319, -0.1019,  0.7704, -0.0973, -0.0379, -0.0068,
          0.0083, -0.5154, -0.2083, -0.5809,  0.1389,  0.0982,  0.1939, -0.3352,
          0.0810,  0.5706,  0.8002, -0.7345,  0.0704,  1.1199,  0.3380,  0.6925,
         -0.8754, -0.3210,  0.4296, -0.1615, -0.4589,  0.2068, -0.0701, -0.0296,
          0.4070,  0.3204, -0.6596,  1.5478, -0.4031,  0.1127,  0.1362, -0.2185,
         -0.3771,  0.0663,  0.0041,  0.0877, -0.0890,  0.0190,  2.0366, -0.4997]],
       device='cuda:0') tensor(1.4149, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
494000 特征值优化 tensor(2.0872, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8650, -0.4852,  0.9300, -0.9745,  0.2110,  2.0386, -0.1923, -0.4068,
          0.9696, -1.2398, -0.0025,  0.5539,  0.1898, -0.1222,  0.0340,  0.0236,
         -0.1604,  0.1441,  0.0311,  0.6646,  0.3458, -0.0685,  0.1707, -0.1273,
         -0.0281, -0.0546,  0.1540, -0.1050,  0.6782, -0.1013, -0.0243, -0.0226,
          0.0373, -0.4757, -0.2411, -0.5578,  0.1856,  0.0994,  0.1289, -0.3019,
          0.0518,  0.5805,  0.7430, -0.8210,  0.2325,  1.1598,  0.2891,  0.6476,
         -1.0045, -0.1141,  0.3763, -0.1184, -0.2407,  0.1507, -0.0863, -0.0440,
          0.3754,  0.2855, -0.7230,  1.4331, -0.4380,  0.1321,  0.0137, -0.1201,
         -0.2757,  0.1080, -0.0648,  0.0909, -0.1007,  0.0216,  1.8095, -0.4873]],
       device='cuda:0') tensor(1.0792, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
495000 特征值优化 tensor(7.6050, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3186e+00,  1.0318e+00,  1.9640e+00, -1.2043e+00,  1.0246e+00,
         -4.3013e-01, -6.3938e-01, -9.8820e-01,  2.8468e+00,  1.1889e+00,
          5.6123e-01,  4.9121e-01,  3.9270e-01,  3.2911e-01,  5.9164e-01,
          8.5624e-01,  1.1511e-01, -2.3427e-01,  8.9163e-01, -1.7666e-01,
          3.7897e-01, -2.2417e+00, -4.0469e-02, -6.8024e-01, -3.1689e-02,
          2.1021e-02, -1.8704e-01,  2.1556e-03,  2.9419e-02,  1.1287e-01,
          2.2250e-02, -2.3171e-01, -2.2251e-01, -5.2634e-02, -6.2289e-03,
         -5.6429e-03,  9.2191e-01, -8.4329e-01, -7.8081e-01, -1.0413e+00,
          1.2627e-01, -4.6725e-01, -1.9523e-01, -6.0508e-01,  1.0235e-01,
         -9.9494e-02,  2.5815e-02,  1.0258e+00,  2.4895e+00, -1.7833e-02,
         -3.5253e-01, -4.4442e-01, -1.0281e+00,  6.5406e-01, -1.9004e-01,
         -1.4538e-01, -1.5484e-01,  3.9103e-01,  3.8308e-02, -2.5314e-02,
          1.8034e+00,  2.9953e-01, -8.7006e-01, -1.9101e-01,  1.6240e+00,
         -3.8714e-01, -9.6050e-01,  8.6753e-02,  2.1043e-01, -1.9455e-01,
         -5.1619e-02, -2.1616e-01]], device='cuda:0') tensor(4.5707, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
496000 特征值优化 tensor(2.4953, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.7093e-01,  8.1653e-01,  2.8705e+00, -1.3145e+00,  9.1179e-01,
         -1.4622e-01,  6.2164e-02, -1.0763e+00,  3.2331e+00,  1.2480e+00,
          1.2025e+00,  6.4672e-01,  1.0555e-01,  2.7616e-01,  1.7593e-01,
          1.7980e-01, -1.4472e-01,  1.4028e-01,  1.9166e-01, -1.1982e-02,
          1.2879e-01, -1.4359e+00,  4.5241e-02, -4.0604e-02,  1.1317e-02,
         -2.5940e-02,  9.5720e-03,  4.9115e-02,  5.7004e-04,  2.3653e-01,
          4.2069e-02, -3.8322e-02, -3.8480e-02, -3.0028e-03, -5.0058e-02,
          2.5980e-02,  4.9697e-01, -4.5822e-01, -6.2966e-01, -6.1189e-01,
          4.1476e-01, -2.7066e-01, -9.4940e-01, -1.4316e-01,  4.0043e-01,
         -6.4213e-01, -4.4567e-02,  1.2264e+00,  2.1901e+00,  5.1855e-02,
         -3.4875e-01, -1.7174e-01, -8.2746e-01,  2.9876e-01, -1.1058e-01,
         -2.5246e-02, -1.9519e-01,  1.4916e-01, -2.9240e-01,  2.4309e-01,
          1.1915e+00, -3.7716e-01, -6.3395e-01, -7.6021e-03,  1.8891e+00,
         -3.6783e-03, -5.2239e-01,  4.4861e-01,  8.3931e-02,  3.7289e-01,
         -4.3816e-02,  2.5136e-01]], device='cuda:0') tensor(0.9125, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
497000 特征值优化 tensor(2.1433, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.4152e-01,  2.1031e-01,  3.0522e+00, -1.7543e+00,  5.7704e-01,
          5.8538e-02,  1.5346e-01, -8.3291e-01,  3.3796e+00,  1.2039e+00,
          1.3918e+00,  5.9266e-01,  1.1738e-01,  1.4453e-01,  2.3533e-01,
          1.0231e-01, -1.4700e-01, -7.5223e-02,  3.5705e-02, -2.4961e-02,
          1.3705e-01, -1.2404e+00, -2.7778e-03, -8.8530e-03, -1.6653e-01,
         -1.2473e-01,  6.1759e-03, -1.2662e-02,  9.0862e-03,  3.5677e-01,
          3.8649e-02, -1.5919e-02, -3.2066e-02, -1.9272e-02, -2.6446e-02,
          1.7570e-02,  3.9732e-01, -3.6610e-01, -8.5483e-01, -5.0132e-01,
          3.7269e-01, -2.5227e-01, -6.5571e-01, -1.6504e-01,  3.9333e-01,
         -3.4988e-01, -5.3723e-02,  1.1123e+00,  1.9450e+00,  4.3770e-02,
         -5.9638e-01, -1.5252e-01, -5.2055e-01,  2.9274e-01,  1.1278e-01,
         -2.3813e-02, -9.8908e-02,  8.3062e-02, -8.7305e-02, -9.1418e-03,
          6.4294e-01, -2.4600e-01, -2.7676e-01, -6.0510e-02,  1.7563e+00,
         -3.7256e-02, -2.3285e-01,  3.8837e-01, -1.0386e-01,  4.1353e-01,
         -2.7365e-01,  3.0214e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
498000 特征值优化 tensor(8.8503, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.2766e-01,  3.7430e-01,  1.5302e-01, -1.0814e+00,  9.8599e-01,
          7.1973e-01, -1.0034e-01,  1.6370e+00, -1.5541e+00, -1.1885e+00,
          1.2345e+00,  8.6855e-01,  2.6269e-01, -1.0106e-01,  2.4114e-02,
         -7.6751e-01,  5.0855e-01, -2.5339e-01, -3.2411e-01, -4.0409e-01,
          2.1954e-01,  7.4138e-01,  1.1488e+00, -3.0018e-01,  8.4553e-01,
          1.8762e-02, -5.5503e-02, -5.6934e-01,  4.7679e-01, -2.7384e-01,
         -2.0007e-01, -9.2058e-01,  4.6152e-01, -6.2156e-02,  1.3587e-01,
         -1.4143e-01, -1.8305e-01, -5.7533e-02, -4.5429e-02, -1.4682e-03,
         -9.5123e-01, -8.8130e-02,  3.8378e-01,  8.8672e-01, -1.2253e+00,
         -8.2495e-01,  6.5866e-01, -2.6822e-01, -4.7063e-02, -1.0970e+00,
         -5.3906e-01,  1.4314e-02, -9.8103e-01, -8.3291e-01, -2.4904e-01,
         -1.4632e-01,  9.8187e-01,  2.7613e-01, -8.9103e-01, -2.2075e+00,
         -2.3329e+00, -1.8398e-01, -1.1932e-01, -3.4066e-01,  1.1461e-01,
          6.9079e-01, -8.8862e-01,  3.1187e-01,  1.4699e+00, -5.4051e-01,
         -1.0701e+00, -7.5846e-01]], device='cuda:0') tensor(5.4283, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
499000 特征值优化 tensor(2.4959, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3072,  0.5106,  0.2424, -0.8357,  1.5685,  1.1601,  0.8537,  0.7194,
         -0.8502, -0.3893,  1.8392,  0.9945,  0.0604,  0.0570, -0.0359, -0.1269,
          0.1186, -0.0913, -0.0371, -0.0486,  0.0811,  0.3629,  0.2594, -0.0910,
          0.1222,  0.0135,  0.3823, -0.2818,  0.0740, -0.2088, -0.0147, -0.1276,
          0.6076, -0.5121, -0.0407, -0.0277, -0.1255, -0.0172, -0.0151, -0.0580,
         -0.4469, -0.0460,  0.0736,  0.5922, -0.3720, -0.2871,  0.2416,  0.1040,
          0.3929, -0.4555, -0.3626, -0.0183, -0.3600, -0.2142, -0.1387,  0.0079,
          0.5127,  0.7523, -0.0890, -1.2271, -1.3460,  0.1363, -0.0620, -0.1441,
          0.1916,  0.1344, -0.0588, -0.0515,  1.3554, -0.2878, -0.6866, -0.0649]],
       device='cuda:0') tensor(1.7699, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
500000 特征值优化 tensor(2.1196, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0902,  0.1092,  0.2186, -0.9524,  1.4689,  0.9337,  1.0678,  0.6370,
         -0.8261, -0.2610,  1.9162,  0.8522,  0.0045, -0.0273, -0.0391, -0.0954,
          0.1217, -0.1028, -0.0188,  0.0064,  0.0221,  0.3380,  0.0624, -0.0396,
          0.1503,  0.1308,  0.2762, -0.3058,  0.0032, -0.1391, -0.0192, -0.0730,
          0.5980, -0.4230, -0.0308, -0.0117, -0.1143, -0.0787, -0.1052, -0.0437,
         -0.3897,  0.0169, -0.0548,  0.0836,  0.0712, -0.1670,  0.1149,  0.0588,
          0.4394, -0.3993, -0.4540, -0.0480, -0.3616, -0.1693,  0.0052, -0.4136,
          0.4666,  0.7546,  0.0997, -0.7836, -1.0545,  0.1615, -0.1613, -0.1003,
          0.1586,  0.0345,  0.0514, -0.0834,  1.2877, -0.3260, -0.5270,  0.1165]],
       device='cuda:0') tensor(1.4446, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
501000 特征值优化 tensor(13.1717, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4274, -0.0446, -1.7068,  1.3596,  1.9420,  0.3958,  1.2958,  0.7469,
         -0.4907,  1.5346,  0.1366,  3.0817, -2.3356,  0.1082, -0.2897,  1.2943,
         -0.6279,  0.8163,  0.1937, -0.0791,  0.6801,  1.2129, -0.0649,  0.0385,
         -0.0110,  0.1073, -0.3688, -0.1031,  0.2370,  1.1770,  0.7905, -0.2259,
          1.5727,  0.0468, -0.0065, -0.8906, -1.2953, -0.4869, -0.4578, -0.0247,
          0.9975, -0.3501,  2.1675,  1.1561,  1.3101, -0.7095, -0.3289,  0.5289,
          0.7614,  0.3353, -0.0747,  1.5736, -0.4789,  0.9820,  0.3535, -0.0426,
          0.3201, -0.2385,  0.4819,  0.1584, -0.5979,  0.0910, -0.4864,  0.6274,
         -0.4146, -0.3936, -1.4199,  0.1777,  0.1807, -0.3563, -0.4559, -1.3901]],
       device='cuda:0') tensor(7.2882, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
502000 特征值优化 tensor(4.1698, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.1168e-01, -6.3450e-01, -7.0414e-01,  1.2811e+00,  2.5929e+00,
          3.0160e-01,  1.6949e+00,  6.8705e-01, -3.7499e-03,  1.5502e+00,
          7.1848e-01,  2.8720e+00, -1.4178e+00,  1.0006e-01, -2.1046e-02,
          4.0543e-01, -1.2375e-01,  1.1837e-01,  5.0653e-02, -5.5210e-02,
          2.7968e-01,  6.1380e-01, -3.3514e-03, -2.9215e-02,  3.7525e-04,
         -6.1149e-03,  2.1289e-04, -1.1987e-02,  2.3570e-02,  6.2574e-01,
          5.4964e-01,  1.0318e-01,  8.3948e-01,  5.1112e-02, -5.0241e-02,
         -3.6655e-01, -3.5320e-01, -4.8211e-02, -2.7682e-02,  3.2184e-03,
          3.0351e-01, -1.6155e-02,  1.7048e+00,  2.6582e-01,  3.4627e-01,
         -7.3574e-01,  1.9319e-03,  7.9197e-01,  6.0891e-01,  1.9945e-01,
         -1.6813e-01,  5.6544e-01,  2.2124e-01,  2.0940e-01, -6.4958e-02,
          3.5201e-01,  4.6391e-02, -9.1085e-02,  2.3227e-01,  6.4159e-02,
         -5.3768e-01,  3.3617e-01, -5.7430e-01,  2.3516e-01, -2.5770e-01,
         -2.1127e-02, -1.1973e+00,  2.1696e-01,  7.8848e-01, -1.0728e+00,
         -7.7221e-01, -5.3022e-01]], device='cuda:0') tensor(2.6955, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
503000 特征值优化 tensor(2.2525, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0662e+00, -7.1509e-01, -2.4563e-01,  1.9146e-01,  2.5386e+00,
          4.6180e-02,  7.3671e-01,  5.1636e-01,  5.4019e-01,  1.3413e+00,
          6.6399e-01,  2.4488e+00, -8.1712e-01,  1.8897e-01,  1.0665e-01,
          7.6471e-02, -1.0335e-03,  8.7825e-03,  8.7862e-02, -1.2464e-02,
          3.3186e-01,  3.6664e-01,  1.6012e-02,  2.0528e-02,  2.2942e-04,
          2.1585e-02,  1.6824e-02, -6.1681e-05, -2.4732e-02,  3.8419e-01,
          3.9389e-01,  1.0251e-01,  7.4523e-01,  2.6007e-02, -6.5086e-03,
         -3.8403e-04, -2.0716e-02, -1.1871e-02, -1.5306e-02, -3.3567e-04,
          1.7335e-01, -2.3396e-02,  1.1610e+00,  1.6391e-01,  2.1453e-01,
         -1.0582e+00,  5.2294e-02,  2.2689e-01,  4.3187e-01,  1.5433e-01,
          9.2616e-02,  2.6143e-01,  1.8380e-01,  7.5811e-02, -3.0130e-01,
          7.9280e-01, -3.1448e-01,  2.3191e-01,  2.1220e-01,  6.8245e-02,
         -6.3274e-01,  2.5156e-01, -6.7386e-01,  1.3425e-01, -5.5782e-01,
          1.4048e-01, -8.4927e-01,  9.8334e-02,  8.1658e-01, -9.3473e-01,
         -1.3757e+00,  6.2214e-02]], device='cuda:0') tensor(0.8402, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
504000 特征值优化 tensor(2.1581, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1114e+00, -8.3405e-01, -1.1022e-01, -2.1384e-01,  2.4153e+00,
          3.2790e-01,  2.6367e-01,  1.5900e-01,  7.2472e-01,  1.2489e+00,
          5.6029e-01,  2.6233e+00, -6.9877e-01,  2.2556e-01,  2.3387e-01,
          5.5561e-02, -1.2775e-02,  3.2874e-02,  4.2413e-02, -5.8384e-02,
          4.2902e-01,  2.9352e-01,  1.5683e-02, -8.9998e-03,  8.1786e-02,
          5.5607e-02, -1.1039e-01,  9.9229e-02, -1.7135e-02,  3.1134e-01,
          2.1792e-01,  7.1140e-02,  6.9458e-01,  2.8058e-02, -1.8525e-03,
         -5.2167e-04, -2.4794e-02, -3.4648e-02, -1.8844e-02,  2.8280e-03,
          1.7436e-01, -2.2921e-02,  9.8896e-01,  8.8950e-02,  1.2889e-01,
         -1.1204e+00, -7.4203e-02,  6.0641e-02,  3.1999e-01,  1.6397e-01,
          1.0107e-01,  1.7815e-01,  7.9069e-02, -1.1699e-01, -1.0833e-01,
          6.1068e-01, -3.1789e-01,  2.3911e-01,  2.4017e-01,  1.0474e-01,
         -2.6972e-01,  1.7582e-01, -3.6216e-01,  1.3558e-01, -5.1658e-01,
          1.4853e-01, -7.9958e-01,  8.6806e-02,  8.3856e-01, -7.2376e-01,
         -1.2651e+00,  3.9084e-02]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
505000 特征值优化 tensor(8.9274, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2487, -0.5934,  1.0176, -0.2208,  0.4107,  1.5986,  0.9399,  0.4510,
         -0.4243,  0.2215,  0.8563,  0.5341,  0.8048,  0.4778, -0.1574, -0.2834,
         -0.1471, -1.0762, -0.8005, -0.0407, -0.5523, -1.2852, -0.1572, -0.2241,
         -0.6381, -0.1926, -0.8485, -0.3606,  0.2752,  0.3817, -0.0701, -0.4190,
         -0.5263,  0.9295,  0.6027, -0.7172, -0.1476, -0.6839, -1.1412, -0.4448,
         -0.4207, -0.6062,  0.4893, -1.2841,  1.2042, -0.8158, -0.0804, -0.2095,
          0.2801,  0.6547, -0.6046, -1.1647, -0.8268,  0.0402, -0.1359, -0.0063,
          1.5405,  0.5514,  1.3749,  1.0036,  0.4813, -0.9491,  0.2803,  0.7812,
          0.4381, -0.2516,  0.4069,  1.2341, -0.8761,  1.0826, -0.3063, -0.2578]],
       device='cuda:0') tensor(4.1187, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
506000 特征值优化 tensor(2.3230, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6445, -0.3765,  1.7125, -1.1199,  0.1559,  2.0395,  0.7259,  0.0110,
          0.1233,  0.9375,  1.3589,  1.0654,  0.3772, -0.0078, -0.0286,  0.1256,
         -0.1938, -0.2997, -0.1544,  0.0174, -0.3466, -0.6293, -0.0302, -0.0860,
         -0.0864,  0.0776, -0.0830,  0.0042, -0.0067,  0.4863, -0.0198, -0.1134,
         -0.0371,  0.5520,  0.1525, -0.3247,  0.0566, -0.2786, -0.5135, -0.2775,
         -0.0380, -0.3401, -0.1246, -0.6704,  1.2293, -0.0959, -0.1023, -0.0109,
          0.6035,  0.5751, -0.7128, -0.5685, -0.3935,  0.2131, -0.0495,  0.0626,
          1.1342,  0.0574,  0.9823,  0.6505,  0.6775, -0.5222,  0.0026,  0.3711,
          0.6879,  0.2662,  0.1602,  0.4989, -0.7055,  0.3379,  0.2301,  0.1261]],
       device='cuda:0') tensor(1.4536, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
507000 特征值优化 tensor(2.0840, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8002, -0.1664,  1.6941, -1.2594,  0.3909,  2.0201,  0.1453, -0.2234,
          0.1393,  1.0209,  1.3684,  1.1602,  0.2976, -0.0656, -0.0030,  0.0812,
         -0.2036, -0.3075, -0.1514,  0.0074, -0.2696, -0.5491,  0.1311, -0.1742,
         -0.0582, -0.0850, -0.0543, -0.0776, -0.0065,  0.4939, -0.0248, -0.0710,
         -0.0690,  0.4042,  0.2234, -0.2923,  0.1526, -0.1207, -0.4441, -0.2247,
          0.0868, -0.3053, -0.2879, -0.4809,  1.0000,  0.1003, -0.1009,  0.0876,
          0.6434,  0.6428, -0.4088, -0.5295, -0.2713,  0.1604, -0.0105,  0.0629,
          0.7382,  0.0560,  0.5503,  0.5219,  0.3315, -0.4092,  0.0985,  0.1657,
          0.5480,  0.2717,  0.1622,  0.3566, -0.7410,  0.1975,  0.2774,  0.0998]],
       device='cuda:0') tensor(1.0948, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
508000 特征值优化 tensor(5.9507, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8001,  1.2928,  1.8020,  1.1462,  0.1558,  0.0958,  2.7523, -1.1625,
          1.2309, -0.8599,  0.4999,  0.8382, -0.2273,  0.4430,  0.8957, -0.3666,
          0.1933,  0.2445,  0.6623, -1.1161, -0.2790,  0.6769,  0.1127, -0.4388,
         -0.0700, -0.4776,  0.0512, -0.0977, -1.2838,  1.2534,  0.4501,  1.1791,
          0.5737, -0.3550, -0.0204, -0.0062,  0.6924, -0.0146, -0.8030,  0.7466,
         -0.3568, -0.3883,  1.4368, -0.5075, -0.2792,  0.3930, -0.0073,  1.2747,
         -1.3021,  2.1099,  0.4084,  0.4328,  0.8275, -0.9976,  0.1839, -0.0166,
         -0.3121, -0.1590,  0.0118,  0.0190, -0.0337,  0.4988, -0.2551,  0.6197,
          0.2857,  1.4294, -0.6112, -0.3435,  0.3194, -0.6711, -0.0086,  0.5302]],
       device='cuda:0') tensor(3.6993, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
509000 特征值优化 tensor(2.2593, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3108,  0.9503,  2.2094,  1.3467,  0.0561, -0.1438,  2.7873, -0.6955,
          1.6017, -0.8685,  0.0099,  0.6606, -0.0031,  0.0920,  0.3691, -0.1612,
          0.3156,  0.1919,  0.0904, -0.6961,  0.0112,  0.6028,  0.0850, -0.0112,
          0.0245, -0.1098, -0.0308, -0.0294, -0.8259,  0.8372,  0.2132,  0.3667,
          0.2041, -0.0930, -0.0103, -0.0101,  0.5423, -0.0889, -0.5914,  0.3352,
         -0.1313, -0.1879,  0.8678, -0.7145, -0.4317,  0.3693, -0.2523,  1.5176,
         -1.8363,  1.7115,  0.7238,  0.1009,  0.0894, -0.4681,  0.0154,  0.0198,
         -0.1610,  0.0345,  0.1210, -0.0536, -0.1488,  0.5089, -0.0395,  0.0478,
          0.1611,  0.9009, -0.1231, -0.3458, -0.0125, -0.1597, -0.1719,  0.3323]],
       device='cuda:0') tensor(1.1380, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
510000 特征值优化 tensor(2.0780, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4589,  1.0020,  2.2566,  1.3586, -0.2312, -0.1121,  2.4831, -0.4042,
          1.5535, -0.6486, -0.0519,  0.7054, -0.0094,  0.1047,  0.2078, -0.1685,
          0.3637,  0.1520,  0.0825, -0.5021,  0.0084,  0.6006,  0.0745, -0.0049,
          0.0372, -0.1312, -0.0148, -0.0804, -0.7781,  0.7825,  0.2090,  0.1207,
          0.0978, -0.1155, -0.0051, -0.0461,  0.4952, -0.0783, -0.5800,  0.2874,
         -0.1074, -0.1236,  0.7828, -0.6887, -0.2987,  0.7368, -0.4380,  1.4883,
         -1.8859,  1.6737,  0.9680, -0.0252, -0.3102, -0.1353, -0.1707, -0.0995,
         -0.1632,  0.0092, -0.1040,  0.0949, -0.3174,  0.6604, -0.0141, -0.0425,
          0.2013,  0.8507, -0.0954, -0.2715,  0.0098, -0.0758, -0.1361,  0.2554]],
       device='cuda:0') tensor(1.1914, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
511000 特征值优化 tensor(8.4178, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2064,  0.0921, -0.0297,  0.7883,  1.8770, -0.7692,  0.9008, -0.5870,
          1.2029, -0.6664, -0.5248,  1.0604, -0.3799,  0.7648, -1.0336, -0.2745,
          0.2195, -0.1574,  0.4508, -0.0284,  0.3916,  0.5421, -0.0865, -0.1489,
          0.0266, -0.0401, -0.1225, -0.1006, -0.5918,  0.0977,  0.8528, -1.0104,
         -0.6160,  0.0196, -0.0170, -0.0797, -0.8982,  0.1673, -0.7342,  0.1690,
          1.5239, -0.1488,  0.9333,  0.1851,  0.0118, -0.5825, -0.3025, -0.6789,
          0.2696, -0.3149,  0.5077, -1.2059,  0.5636,  0.2280,  0.5869, -1.2530,
         -0.1448,  0.6763,  0.2882, -0.0101,  0.7023,  1.4893,  0.5236,  0.2011,
          0.2336,  0.0704,  0.9847, -1.1871,  0.0430,  0.7515,  1.0609, -0.7046]],
       device='cuda:0') tensor(4.3629, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
512000 特征值优化 tensor(2.1438, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1679, -0.3214,  0.2028,  0.2495,  2.3309,  0.0267,  1.5518, -0.5389,
          1.4399, -0.6590,  0.1719,  0.1509, -0.0703,  0.2727, -0.3825, -0.0031,
          0.0249, -0.0476,  0.0487,  0.0104,  0.0495,  0.0142, -0.0373, -0.0287,
          0.3408, -0.2803, -0.1210, -0.1146, -0.0127,  0.0371,  0.4094, -0.4001,
         -0.1323,  0.0294,  0.0332,  0.0355, -0.6096, -0.0821, -0.5856,  0.0769,
          0.8594, -0.0512, -0.0931,  0.1116,  0.1138,  0.0518, -0.0436, -0.5063,
          0.0667, -0.3270, -0.2289, -0.2937,  0.9664, -0.2636,  1.3655, -0.8107,
         -0.1467,  0.1681, -0.0079, -0.0401,  0.5592,  0.7784, -0.1038, -0.0566,
          0.5372,  0.0218,  1.1415, -0.7265,  0.4897,  0.5860,  0.4670, -0.2565]],
       device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
513000 特征值优化 tensor(13.1326, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0206,  0.6261,  0.1311,  1.8689,  0.1981, -0.2089, -0.8143,  0.8633,
          0.1792, -0.9720, -0.2806,  0.3457,  0.8449, -0.4971,  0.8287,  0.9027,
         -1.2251, -0.6646,  0.8334,  0.9922,  1.1496, -0.9522,  0.0293,  0.2539,
          0.1192, -0.1220,  0.5965,  1.0590,  0.2692,  0.3850,  0.6020,  0.7342,
          0.4681, -0.1530,  1.1418,  0.6151, -0.2795,  0.6299, -1.6510, -0.0075,
          1.5274,  0.6206,  1.3948,  0.4945, -1.2418,  2.1367,  0.4748, -1.2896,
          0.2384, -0.7555,  0.7928, -0.6597, -0.3864, -0.9814, -0.0841,  0.1251,
          0.0851, -0.1413, -0.2405, -1.5654, -0.8450,  0.9122,  0.2416,  0.5686,
         -0.3317, -0.4213,  0.1705,  0.0431,  0.6128, -0.1795, -0.4949, -0.5038]],
       device='cuda:0') tensor(6.3835, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
514000 特征值优化 tensor(2.2301, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4649e+00,  1.6057e+00,  8.2059e-01,  1.1254e+00,  4.5167e-02,
          2.7844e-01, -1.5826e-01,  5.8696e-01,  1.2068e+00, -8.4009e-01,
          3.7428e-01,  8.4744e-01,  4.7210e-01,  1.4420e-01,  1.5579e-01,
          2.9164e-01, -3.5930e-01,  8.0776e-02,  6.4147e-02,  2.0879e-01,
          4.8972e-01, -2.5520e-01, -8.2683e-02, -1.8414e-01, -8.0615e-02,
          5.8112e-02,  9.7353e-02,  1.7282e-01,  3.5605e-04, -1.4917e-01,
          2.8291e-02,  1.7764e-02,  2.1193e-01,  6.8690e-02,  4.5405e-01,
          3.0577e-01,  1.9195e-02,  1.8927e-01, -6.7701e-01,  1.3478e-01,
          9.1121e-01,  4.9733e-02,  1.5115e+00,  2.7751e-01, -5.5114e-01,
          1.5276e+00, -1.7901e-01, -4.8207e-01,  6.8364e-01, -1.2597e-02,
          3.6549e-04,  1.8133e-01, -1.9427e-02,  9.5134e-02, -2.1672e-02,
          6.6373e-02,  5.2828e-01, -5.0814e-01,  4.5153e-01, -8.8317e-01,
         -1.8059e-01,  2.0257e-01, -2.4459e-01,  2.4420e-01,  3.6439e-01,
          2.6224e-01, -4.4152e-01,  1.0138e-01,  1.0777e+00,  3.4487e-01,
         -4.3412e-02,  1.1926e-01]], device='cuda:0') tensor(1.6579, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
515000 特征值优化 tensor(2.0919, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6179,  1.6270,  0.7688,  0.9977,  0.2418,  0.2013,  0.0791,  0.4667,
          1.3281, -1.0212,  0.4711,  0.7895,  0.3376,  0.0830,  0.0685,  0.2034,
         -0.2058,  0.1427,  0.0650,  0.1907,  0.3558, -0.2396, -0.0929, -0.1931,
         -0.1408,  0.1197,  0.1058,  0.1018, -0.0331, -0.1158,  0.0281, -0.0264,
          0.1275,  0.2034,  0.4262,  0.2658,  0.0291,  0.2075, -0.5674,  0.1628,
          0.8451, -0.0217,  1.5060, -0.0141, -0.3366,  1.5046, -0.2057, -0.4430,
          0.4456,  0.1793, -0.1375,  0.2618, -0.2346,  0.1882,  0.0051,  0.0825,
          0.2475, -0.5875,  0.5716, -0.8372, -0.1813,  0.1199, -0.3194,  0.1812,
          0.3518,  0.1241, -0.3896, -0.0290,  0.9205,  0.3885,  0.0345,  0.1990]],
       device='cuda:0') tensor(0.8844, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
516000 特征值优化 tensor(7.0833, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.7091e-01,  1.4144e-03, -3.0292e-01,  8.3203e-02,  1.1678e+00,
          1.1951e+00, -1.0580e+00,  5.5628e-01,  1.4074e+00,  1.0349e+00,
          1.2207e+00,  7.4748e-01,  2.8374e-01,  3.5257e-01, -7.5345e-01,
         -2.7556e-01, -7.0949e-01, -1.7828e-02,  4.7842e-01,  9.8107e-01,
          2.9378e-02, -2.2534e-01, -1.3101e-01,  2.7998e-01, -1.8309e-01,
          1.4952e+00,  3.8332e-01,  4.3871e-03,  9.9314e-02, -2.7099e-01,
          2.2131e+00,  1.5623e-01, -6.3639e-02,  1.4770e+00,  5.1628e-02,
          4.9944e-03,  3.0089e-02,  3.9029e-02, -4.5240e-02, -1.0914e+00,
         -4.2905e-03, -1.0985e-01, -3.5495e-01, -4.0285e-01, -3.9419e-01,
         -3.9315e-01,  4.6012e-01,  4.1266e-02,  5.0489e-01, -4.0366e-01,
          1.0581e-01, -1.6892e-02,  2.2645e-01,  1.7257e+00,  1.2805e-01,
         -8.7559e-01,  1.7627e+00,  6.5059e-01, -2.6785e-01,  7.0248e-01,
          1.2036e-01, -8.3974e-02, -1.7341e-01, -1.3775e-01, -1.6603e-01,
          2.8888e-01,  3.5082e-01,  3.9934e-01,  1.8042e-01, -3.0254e-01,
          1.1873e-01,  3.2733e-01]], device='cuda:0') tensor(3.3733, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
517000 特征值优化 tensor(2.2722, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1889e+00, -4.5674e-01, -2.5431e-02,  1.5418e-01,  2.0726e+00,
          1.9910e+00, -4.2259e-01, -1.6636e-03,  2.0273e+00,  1.5407e+00,
          2.1520e-01,  9.3736e-01, -3.1025e-02,  1.7993e-01, -2.2639e-01,
         -9.4772e-02, -5.8017e-02, -3.5790e-02,  2.4431e-01,  4.9312e-01,
          6.2731e-03, -5.2417e-02, -1.0931e-01, -4.7330e-02, -8.5248e-02,
          6.0002e-01, -8.3799e-02, -1.6265e-02,  6.1302e-02, -3.6594e-02,
          1.4282e+00,  2.9125e-02, -1.1071e-02,  9.3534e-01,  2.3195e-01,
         -5.0790e-02, -3.9111e-02, -3.5446e-02, -1.4944e-01, -5.3189e-01,
          3.5474e-02, -4.0918e-01,  4.2869e-02, -2.7981e-01, -3.7074e-01,
         -2.5261e-01,  2.0857e-01, -1.7235e-01,  1.6523e-01,  7.6509e-02,
         -8.8063e-02,  6.0476e-02,  6.1813e-01,  1.0690e+00, -8.3472e-02,
         -4.5650e-01,  1.4387e+00,  6.3464e-01,  4.8147e-01,  1.1835e+00,
         -7.4911e-02,  4.9687e-02, -3.3639e-02, -1.5388e-03, -8.2626e-01,
          3.2249e-02,  1.3960e-01,  2.7183e-01, -3.7966e-01,  2.9017e-01,
         -2.1873e-01,  4.5320e-01]], device='cuda:0') tensor(0.7872, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
518000 特征值优化 tensor(12.7569, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1546, -1.1681, -0.0759,  0.7812, -1.6252,  0.9763,  0.7027,  0.4098,
         -0.9033,  1.1817, -0.5857, -0.1788, -0.0122,  0.9377,  0.1105,  0.5195,
          0.9078, -0.2135,  1.3657,  0.2946,  0.4363,  0.2999,  1.4854,  1.3174,
          0.5835, -1.7627, -0.3471,  0.8188, -0.1147,  0.9201, -0.6290, -0.8086,
          0.5784, -0.2666, -1.1634,  0.2927,  0.9628,  0.3651,  0.1395,  1.5370,
          0.0779,  1.2022,  0.2655, -0.3819, -0.8869,  2.0800, -0.7679,  0.9359,
          0.0817, -0.1907, -0.1562,  0.5979, -0.2776, -1.0181,  1.0175,  1.3041,
         -0.8541, -0.6895, -0.4515, -0.9018,  1.4925, -1.3946, -0.6039,  2.0375,
         -0.2864,  0.7455,  0.2316,  0.9479, -0.1816,  0.7015, -0.2836,  1.0134]],
       device='cuda:0') tensor(7.1204, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
519000 特征值优化 tensor(2.7270, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9460, -1.4131,  0.6526,  1.2444, -1.0906,  1.6891,  1.2782,  1.1923,
          0.0085,  1.4371,  0.0875,  0.6610, -0.0167,  0.1420, -0.2465,  0.7532,
          0.6506, -0.3769,  0.4389,  0.2359,  0.0419,  0.2337,  0.5660,  0.3986,
          0.1607, -0.6810,  0.1930,  0.0479,  0.0371,  0.2640, -0.1571, -0.0410,
         -0.0171, -0.0726, -0.4513,  0.1476,  0.6256,  0.2431,  0.4109,  0.6712,
          0.1890,  0.6417, -0.0495, -0.0833, -0.3324,  1.4520, -0.3712, -0.0211,
          0.4445,  0.1790, -0.2466,  0.3408,  0.1848, -0.1742,  0.8174,  0.3050,
         -0.2268, -0.3735, -0.3647, -0.4428,  2.1577, -0.8073, -1.2165,  1.2322,
          0.4687,  0.1150,  0.3101,  0.4131,  0.6101,  0.0481,  0.2553,  0.5534]],
       device='cuda:0') tensor(2.0534, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
520000 特征值优化 tensor(2.1060, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3757e+00, -1.4795e+00,  7.8527e-01,  8.5369e-01, -5.9861e-01,
          1.6039e+00,  1.4927e+00,  1.0896e+00,  2.3446e-01,  1.1030e+00,
          1.3510e-02,  7.5675e-01, -3.0870e-02, -2.4648e-02, -4.6986e-02,
          5.3127e-01,  6.1778e-01, -1.7217e-01,  1.7700e-01,  8.8247e-02,
          5.9978e-02,  1.5827e-01,  3.0390e-01,  3.3341e-01,  8.0171e-02,
         -2.8484e-01,  1.8196e-01,  5.0716e-02, -9.8239e-04,  1.7917e-01,
         -1.5353e-01, -3.5088e-02, -4.5207e-02, -1.0700e-01, -3.4596e-01,
          1.5642e-01,  5.4009e-01, -5.4442e-02,  3.6681e-01,  6.2296e-01,
          2.0913e-02,  6.0513e-01, -7.7107e-01,  1.7357e-01,  1.5548e-01,
          8.3465e-01, -7.0583e-02, -2.7838e-01,  3.0922e-01,  3.1095e-01,
         -2.1635e-01,  2.5638e-01, -2.1391e-02, -9.2572e-02,  5.5802e-01,
         -3.7043e-02, -3.9371e-01, -5.1262e-02, -5.0849e-01, -9.1726e-01,
          2.3121e+00, -7.5229e-01, -1.3653e+00,  9.3008e-01,  4.9618e-01,
          1.7597e-02,  4.4055e-01,  3.0836e-01,  1.7347e-01, -8.2120e-02,
          1.9354e-01,  5.5612e-01]], device='cuda:0') tensor(1.5456, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
521000 特征值优化 tensor(7.7664, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0359,  1.8307,  0.4351, -0.0793,  0.8003, -0.8016, -0.2135,  0.1315,
         -0.2740, -0.4437,  0.0356,  0.7888, -0.7270, -0.7910, -0.4416, -0.0412,
          0.0584,  0.0441, -0.0884,  0.3204,  0.3428,  0.4287, -0.0651,  0.0146,
         -0.5418, -0.1800, -0.7663,  0.3290, -0.0055,  1.5704, -0.0609,  0.0060,
         -0.1078,  0.4308, -0.4128,  0.2287, -0.1636,  0.0050, -0.6337,  0.1132,
          0.1366,  0.2538,  1.1338, -0.0324,  1.7116,  0.1949, -0.4193,  0.6363,
         -0.0055, -0.8949, -0.0515,  1.9253, -0.4952,  0.0718,  0.0077,  0.1610,
          0.5143, -0.7793, -0.2299, -0.7315, -0.2444,  0.2405, -0.0627,  0.0216,
         -0.4682, -0.7833,  0.4539, -0.1429, -0.0583,  0.1506,  0.1371,  0.2706]],
       device='cuda:0') tensor(3.6679, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
522000 特征值优化 tensor(2.1050, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4315e+00,  1.4839e+00,  1.1927e+00,  6.0939e-01,  1.7795e-01,
         -1.1330e+00, -2.5223e-01, -6.1036e-02, -1.6734e-01, -7.0034e-01,
         -2.3026e-01,  6.6610e-01, -5.6053e-01, -3.1098e-01, -2.7054e-01,
          9.7590e-03,  4.6424e-03,  9.0636e-03, -5.5473e-02,  1.4289e-01,
          1.2340e-01,  4.9947e-01, -1.7255e-02,  3.2707e-02, -1.5821e-01,
         -2.0076e-01, -3.0257e-01,  2.7457e-01,  1.1735e-03,  8.1657e-01,
          3.3872e-02, -3.1569e-02, -2.2503e-02,  2.0574e-01, -3.2725e-02,
          5.3966e-02, -2.4093e-02, -1.0253e-02, -1.2542e-01, -2.6977e-02,
         -1.6245e-02,  2.0049e-02,  8.0481e-01, -3.3028e-01,  1.4396e+00,
          3.4727e-01, -2.6250e-01,  1.1901e+00,  4.1440e-01, -4.6234e-01,
         -7.4418e-01,  1.0941e+00, -3.0006e-01,  1.8154e-01,  9.9424e-04,
          1.5121e-02, -3.0467e-01, -2.9463e-02, -2.1977e-01, -1.9127e-01,
         -2.4399e-01,  1.5058e-01, -5.3445e-02,  3.1035e-02, -2.2192e-01,
         -1.0913e-01,  2.1448e-01,  2.1120e-02, -1.2012e-01,  6.2818e-02,
         -6.1432e-01,  1.9845e-01]], device='cuda:0') tensor(0.7266, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
523000 特征值优化 tensor(6.8692, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6607,  1.4787,  0.7853,  0.1382,  2.6525,  0.3793,  0.7184, -0.2261,
          0.7207, -0.7081,  1.2445,  1.0973,  0.2644,  0.1847,  0.7324,  0.7830,
         -0.8102, -0.0561, -0.7190, -0.2413, -0.1734, -0.1633, -0.1199,  0.4420,
         -0.2269,  0.1283, -0.0079,  0.0751, -0.0124, -0.0386,  0.6747, -0.2578,
         -1.1451,  0.1274,  0.6916,  0.3716,  0.1224, -1.2561, -0.2995,  1.1377,
         -0.3397, -0.2469, -2.1560,  1.5299, -0.7040, -0.4233,  0.2780, -0.3710,
          0.1364,  0.2121, -0.0707,  0.0052,  1.6693, -0.3043,  1.0726, -0.0496,
         -0.9997, -0.0416, -0.2894,  0.1281, -0.1928,  0.5086, -0.5413,  0.2501,
          2.5756,  0.1508, -0.6978,  0.8086,  0.2505,  0.3837, -0.7442,  0.0846]],
       device='cuda:0') tensor(3.1336, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
524000 特征值优化 tensor(2.1958, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0161e+00,  1.8390e+00,  8.7576e-02,  9.1657e-02,  2.8327e+00,
          8.1367e-01,  1.2326e+00, -4.8842e-02,  1.2551e+00, -1.9551e-01,
          1.6724e+00,  1.5255e+00,  5.6420e-02,  1.6386e-01,  5.5504e-01,
          3.2629e-01, -4.3857e-01, -2.2368e-01, -2.0969e-01,  2.2971e-02,
         -8.1602e-02,  2.2830e-03,  1.0139e-01, -7.5128e-03, -2.3943e-02,
          4.1620e-02,  1.3108e-02,  9.7398e-03,  1.0914e-02,  2.2614e-02,
          6.4415e-01, -1.7093e-01, -7.1094e-01, -1.8631e-02,  3.8353e-01,
          1.1785e-01,  1.7578e-01, -7.3844e-01, -1.3805e-01,  6.3682e-01,
          3.6328e-02, -2.6330e-01, -1.5318e+00,  5.7901e-01, -2.0715e-01,
         -7.1607e-01,  2.3952e-02, -4.4846e-02,  7.3078e-02,  1.0226e-01,
         -7.0246e-02,  6.3624e-02,  2.0897e+00, -3.8984e-01,  7.8864e-01,
         -2.5077e-01, -4.4996e-01,  6.2970e-02,  1.6875e-02,  8.3189e-02,
          6.9745e-02,  3.7293e-01, -3.4409e-01,  6.1892e-02,  2.8189e+00,
         -3.4792e-01, -7.3074e-01,  2.9641e-01,  6.4359e-01,  2.1001e-01,
         -2.1678e-01,  5.0115e-01]], device='cuda:0') tensor(1.4742, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
525000 特征值优化 tensor(2.1016, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9395e+00,  2.2129e+00,  3.5429e-01,  1.0513e-01,  2.9146e+00,
          6.7052e-01,  1.2783e+00, -6.4393e-02,  1.3042e+00, -5.1891e-01,
          1.6792e+00,  1.5100e+00,  7.4517e-02,  2.7765e-01,  4.8905e-01,
          3.8035e-01, -4.3817e-01, -2.3024e-01, -1.7483e-01, -5.3003e-04,
         -9.9527e-02,  9.8365e-04,  3.0566e-02, -5.2818e-02, -8.0565e-02,
          5.9044e-02, -2.4425e-02, -2.7372e-02, -1.5858e-02,  2.5516e-02,
          5.3498e-01, -2.0294e-01, -6.5869e-01, -2.3326e-02,  2.9769e-01,
          1.2698e-01,  1.6465e-01, -6.8921e-01, -1.1189e-01,  5.7585e-01,
          2.1300e-02, -3.0803e-01, -1.3328e+00,  4.1613e-01, -2.2333e-01,
         -8.4206e-01,  5.6421e-02, -6.7672e-02,  9.1434e-02,  1.0544e-01,
         -1.0800e-01,  8.0103e-02,  1.9857e+00, -4.8979e-01,  6.4939e-01,
         -3.5022e-01, -2.8666e-01,  7.9909e-02,  7.7919e-03,  7.0680e-02,
         -6.5921e-02,  2.8319e-01, -2.4883e-01,  6.5086e-02,  2.8442e+00,
         -3.7986e-01, -5.8851e-01,  2.4971e-01,  6.6594e-01,  2.5034e-01,
         -2.0914e-01,  4.3301e-01]], device='cuda:0') tensor(1.1557, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
526000 特征值优化 tensor(4.2633, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6813e-01, -8.5399e-01,  6.5631e-02, -3.6188e-01,  2.2745e+00,
          4.1265e-01,  6.9008e-01,  7.1550e-01,  1.7137e+00, -1.1086e+00,
          1.9199e-01,  1.5242e+00, -2.3224e-01, -2.2890e-01,  1.7553e-02,
          5.4359e-02,  1.1424e-01, -1.0947e-01,  8.8234e-02, -2.1109e-01,
          2.1307e-01,  3.4611e-01,  2.4282e-02, -2.3474e-01, -1.0310e+00,
         -2.5201e-01, -1.3856e-01,  1.0912e-01, -3.2030e-02, -5.2095e-01,
          2.0907e+00, -3.4977e-01,  2.8697e-01,  5.2621e-01, -4.6071e-01,
         -6.7689e-02,  7.8529e-02, -4.9732e-02, -5.0307e-01,  1.7412e-01,
          5.4323e-04, -1.6307e-01,  6.7395e-01,  8.3144e-01, -1.0288e+00,
          7.1663e-02, -2.5365e-01, -5.2974e-01,  1.9135e-01, -2.4350e-01,
          2.8646e-01,  3.7556e-02,  3.6008e-01,  1.1807e+00, -1.7672e-02,
          5.6524e-01,  8.5316e-01,  4.0666e-01, -5.9780e-01,  3.5941e-01,
          1.3978e-01, -2.1842e-01,  4.0460e-01, -4.9314e-01,  8.7351e-01,
         -8.8122e-01,  3.1073e-02, -2.6937e-01,  1.2105e+00, -7.6849e-01,
         -6.6736e-01,  5.6606e-01]], device='cuda:0') tensor(1.8711, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
527000 特征值优化 tensor(2.1565, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3781, -0.4444,  0.1815, -0.4202,  2.8531,  0.4114,  0.5559,  0.4590,
          1.8647, -1.3828,  0.3438,  0.9982, -0.1314, -0.0647,  0.0283,  0.1092,
          0.0872, -0.0869,  0.0696,  0.0066,  0.1132,  0.0671, -0.0615,  0.0582,
         -0.5235, -0.3157, -0.1300,  0.1974, -0.0204, -0.1803,  1.5284, -0.1436,
          0.1759,  0.3443, -0.4017, -0.1271, -0.0200,  0.0062, -0.3903,  0.1989,
         -0.0154, -0.1016,  0.0525,  0.5454, -0.2890,  0.0685, -0.1450, -0.6772,
          0.3146, -0.1860,  0.4544, -0.0420,  0.6596,  1.1661,  0.5102,  0.8633,
          0.5858,  0.4360, -0.4722,  0.2409,  0.0177, -0.1162,  0.5386, -0.3904,
          0.9090, -0.7121,  0.0322, -0.0306,  0.8978, -0.5256, -0.4002,  0.3429]],
       device='cuda:0') tensor(0.9205, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
528000 特征值优化 tensor(10.9679, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.9913e-01, -7.1897e-02, -4.8803e-01, -6.6830e-01,  5.8473e-01,
          8.9085e-01,  8.8500e-01,  7.5211e-01,  6.1583e-01,  3.7147e-01,
          5.7299e-01, -2.6522e-02, -3.2248e-01, -1.3532e+00, -3.7889e-01,
         -2.7407e-01, -8.0959e-01,  1.5589e-01,  3.7843e-01,  8.6817e-01,
          4.7881e-01,  5.8489e-01, -1.5530e-01,  3.4806e-01, -9.3451e-01,
         -1.6414e-01,  2.6086e-02,  1.2073e-01,  2.1081e-04,  4.9708e-02,
         -6.5308e-01,  5.4484e-01,  5.3444e-01,  1.0859e+00, -7.7095e-01,
         -4.4354e-01, -8.5910e-02,  9.6726e-02, -2.4670e-01,  1.2362e+00,
         -1.4484e+00, -4.0970e-01,  9.6151e-01, -4.2503e-01,  1.6664e-01,
         -7.8904e-01,  2.1994e-01, -3.8396e-01,  4.8174e-01,  1.0140e+00,
          4.6256e-01,  1.2406e+00, -1.6759e-01,  5.1638e-02,  2.0574e-01,
         -7.5460e-01,  1.4897e+00,  2.0765e+00,  5.3378e-01, -1.0354e-01,
         -1.6121e-01, -2.9633e-01, -1.3531e+00, -2.0220e-01,  1.3407e+00,
         -4.2947e-01, -4.2672e-01,  2.5070e-01, -8.2938e-01, -3.5373e-01,
         -1.8718e+00,  1.1901e-01]], device='cuda:0') tensor(6.4775, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
529000 特征值优化 tensor(2.4363, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0565,  0.2591, -0.1466,  0.1003,  0.8494,  1.8141,  0.9703,  0.5512,
          1.2922,  0.1256,  1.4257,  0.6973,  0.0084, -0.4647, -0.1608, -0.0045,
         -0.1222,  0.0077,  0.0568,  0.3153,  0.0179,  0.1233,  0.0440,  0.0749,
         -0.2090,  0.0096,  0.0472, -0.2229, -0.0173,  0.0794, -0.2091,  0.0167,
         -0.0030,  0.8773, -0.1126, -0.0019, -0.0294,  0.1019, -0.0789,  0.4888,
         -0.6748,  0.0039,  0.5398, -0.4623, -0.0672, -0.4933,  0.2483, -0.1081,
          0.0662,  0.3804,  0.0299,  0.2588, -0.4696,  0.3791,  0.0833, -0.1413,
          0.4127,  1.1202,  1.1129,  0.2624, -0.3222, -0.1363, -0.8451,  0.1904,
          1.7881, -0.4375, -0.4199,  0.0225, -0.0524,  0.4031, -0.9831,  0.2073]],
       device='cuda:0') tensor(1.7306, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
530000 特征值优化 tensor(18.6344, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3795, -1.1788, -1.4147,  0.3595, -0.3232, -1.2842, -1.0295, -1.3793,
          0.1146, -0.5263,  1.8535,  0.1695, -0.5220, -0.6080, -0.2719, -0.0845,
         -0.3856,  0.7729,  2.0728, -0.7433, -0.7244,  0.3446,  1.2925,  2.3598,
          0.9283, -0.4203, -1.6913,  0.0177,  0.2751, -2.1802,  0.5543, -0.2375,
         -0.4169, -0.5421,  0.4242, -0.6085, -0.4914, -0.2742,  0.8965,  1.0905,
         -1.3699,  1.5719,  1.2382, -0.7311, -0.9876, -0.5518,  0.5042,  0.4096,
         -1.3698, -1.0437, -0.3271,  0.2962, -0.5859,  1.2380, -0.4741, -0.2248,
          0.7060,  1.3834, -1.6137,  0.9130,  0.2564, -0.5667, -1.4568,  0.3706,
          0.5248,  1.1851,  0.4542,  0.8463, -0.4529, -0.8016, -0.6063, -1.3413]],
       device='cuda:0') tensor(10.0739, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
531000 特征值优化 tensor(5.5111, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.6717e-01, -3.3164e-01, -4.0390e-01,  4.6196e-01,  3.1595e-01,
         -3.6056e-01, -5.8906e-01, -4.0427e-01,  5.9490e-01,  9.8254e-02,
          2.0267e+00,  6.3523e-01, -3.3914e-02,  1.7394e-03, -2.3624e-03,
         -4.8924e-02, -4.8413e-02, -1.1859e-01,  8.6010e-01, -2.7742e-01,
         -1.9413e-01,  2.7910e-02,  3.7131e-01,  1.3010e+00,  1.2067e-01,
          3.0105e-01, -7.5804e-01, -1.4322e-01,  2.0524e-01, -1.2031e+00,
          2.4300e-02, -5.1815e-05, -8.7399e-03, -6.6571e-02, -8.2845e-03,
         -5.2022e-03, -2.1437e-02,  3.8455e-02,  3.6646e-01,  3.2653e-01,
         -4.8654e-01,  5.6301e-01,  1.1123e+00, -2.5392e-01, -6.0599e-01,
         -8.7396e-01,  5.4094e-01,  1.2896e+00, -4.4916e-01, -1.2526e-01,
         -6.3534e-01,  3.7935e-01, -4.6107e-01,  3.8303e-01, -5.5040e-02,
         -2.3461e-02,  1.4596e-03,  5.2220e-01, -5.4447e-01,  2.2359e-02,
          2.3809e-01, -9.5133e-02, -5.0203e-01,  3.5415e-01,  4.0137e-01,
          5.7931e-01,  3.3593e-01,  2.8822e-01, -7.7098e-01, -1.0832e+00,
         -9.5188e-01, -3.0737e-01]], device='cuda:0') tensor(2.6809, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
532000 特征值优化 tensor(2.1851, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5159, -0.4654,  0.2012,  0.1126,  0.2240,  0.1510,  0.0294, -0.0474,
          0.3179,  0.5062,  2.3108,  0.0345,  0.0069, -0.0257,  0.0738, -0.0109,
          0.0214, -0.3419,  0.4134, -0.0545, -0.0285,  0.0886,  0.0191,  0.4101,
         -0.0213,  0.0741, -0.1888,  0.0206,  0.2104, -0.7143,  0.0262, -0.0355,
          0.0040, -0.0223,  0.0033,  0.0365, -0.0275,  0.0112,  0.0216,  0.0371,
         -0.1586,  0.2484,  0.9500, -0.2071, -0.5113, -1.1826,  0.4972,  1.4268,
         -0.1639,  0.1752, -0.8380,  0.3689, -0.2320,  0.1901, -0.0489,  0.0531,
         -0.3658,  0.1819, -0.0110,  0.3235, -0.0691,  0.0646, -0.1725,  0.1497,
         -0.2833,  0.1849, -0.1796,  0.0708, -0.6802, -0.4784, -0.7187,  0.0722]],
       device='cuda:0') tensor(1.4752, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
533000 特征值优化 tensor(19.3263, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.7341e-02,  1.4629e-01, -1.4979e+00,  4.6956e-01,  9.1572e-02,
          6.2326e-01,  6.4547e-01, -2.3027e+00, -3.3043e-01, -9.9788e-01,
         -9.1903e-02,  3.5288e-01,  8.0156e-01, -5.9388e-01,  7.4398e-02,
          1.2120e-01, -5.1428e-01,  4.7066e-01,  1.0315e+00, -1.3276e+00,
         -2.1843e+00,  2.1927e+00,  1.1281e+00,  4.5774e-01, -2.1821e-01,
         -1.1406e+00, -9.7610e-01,  7.7302e-01, -1.2382e+00, -8.1998e-01,
          3.1041e-01, -1.9182e+00, -9.0080e-01, -7.6748e-01, -3.0055e-01,
          2.2341e-02,  2.8748e-01,  8.9659e-01, -1.1035e+00, -1.0465e+00,
         -1.7830e-01,  4.2632e-01, -1.1375e-01,  2.7489e-01,  6.6193e-01,
         -5.5764e-01, -5.6813e-01,  6.3371e-01, -3.1813e-01,  6.7775e-01,
          1.5712e-01, -1.3553e+00,  2.6724e-01,  1.0955e+00, -9.3945e-01,
         -2.0218e-01, -4.3179e-01,  1.4759e+00,  9.7739e-01, -3.4610e-01,
         -1.4788e-01, -1.0538e+00, -7.4012e-02, -6.2964e-01,  5.1689e-01,
         -3.4927e-02, -1.7171e-01, -5.1744e-04,  1.9213e+00, -1.6902e-01,
          1.3725e+00,  5.8660e-01]], device='cuda:0') tensor(9.7753, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
534000 特征值优化 tensor(5.2625, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.9625e-01, -8.6731e-01, -5.0849e-01, -7.3445e-01,  9.7800e-01,
          1.3645e+00,  1.6755e+00, -2.2004e+00,  2.6641e-01, -3.1472e-01,
          7.1050e-01,  2.7261e-01,  1.1306e+00, -2.2775e-01,  2.0969e-01,
         -2.0306e-01,  1.1604e-01,  7.1920e-02,  1.3520e-01, -4.8995e-01,
         -1.4059e+00,  1.1988e+00,  1.8376e-01, -6.9197e-02, -1.8716e-02,
         -2.1567e-01, -1.4599e-01,  1.2429e-01, -3.8437e-01, -9.7670e-01,
          3.2818e-01, -9.8308e-01, -4.0581e-01, -2.2770e-01,  1.7106e-02,
         -4.1578e-02, -7.8704e-02,  2.4885e-01, -3.5366e-01, -2.9624e-01,
         -4.2330e-01, -1.4187e-01,  7.1426e-01,  1.7618e-01,  5.1648e-01,
         -9.8282e-01, -5.4109e-01,  1.2405e+00, -2.5835e-01,  6.1275e-01,
         -3.7416e-01, -3.9125e-01,  9.5083e-01,  1.0223e-01, -5.9009e-01,
          6.5473e-01, -7.4484e-01,  5.9289e-01,  3.1820e-01, -1.4699e-01,
          8.7700e-01, -1.1061e+00, -3.4203e-01,  2.7691e-01, -1.5432e-01,
          1.2937e-01,  3.2864e-01, -1.5168e-02,  8.7219e-01, -1.4089e-03,
          2.8693e-01,  1.1879e-01]], device='cuda:0') tensor(3.5255, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
535000 特征值优化 tensor(2.2370, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2734e+00, -1.9333e+00,  2.5805e-01, -8.4651e-01,  1.1970e+00,
          4.6386e-01,  1.9318e+00, -1.8774e+00, -2.6675e-01,  2.4725e-02,
          9.0474e-01, -2.2230e-01,  7.8637e-01, -8.8153e-02,  8.5508e-02,
         -1.5603e-01,  8.5255e-02,  1.1661e-01,  4.1893e-02, -3.6289e-01,
         -9.1482e-01,  6.0763e-01,  1.8586e-02, -1.4607e-02, -1.4571e-02,
          1.6434e-02,  1.3606e-02, -7.0203e-04, -2.7274e-01, -5.6746e-01,
          2.1549e-01, -7.8383e-01, -5.0830e-01, -6.4495e-02, -2.5921e-02,
         -1.7214e-02, -2.0248e-01,  1.4943e-01, -1.1839e-01, -5.7672e-02,
         -1.3428e-01, -5.8633e-02,  8.5545e-01,  2.7070e-01,  4.0942e-01,
         -8.6883e-01, -4.2917e-01,  1.0340e+00, -4.6727e-01,  7.1771e-01,
         -7.8772e-01, -6.9033e-02,  5.8412e-01, -2.0863e-01, -9.0108e-01,
          6.2514e-01, -6.6097e-01,  2.6546e-01,  2.4750e-01,  1.6264e-02,
          9.8752e-01, -6.8242e-01, -4.8114e-01,  4.1898e-01, -3.6497e-01,
          1.5252e-01,  3.5794e-03, -1.9869e-02,  3.3462e-01, -1.7222e-01,
         -2.1316e-02,  4.1551e-02]], device='cuda:0') tensor(1.7495, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
536000 特征值优化 tensor(2.0976, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3171e+00, -1.9535e+00,  4.7619e-01, -5.1867e-01,  1.0735e+00,
          7.6976e-02,  1.9872e+00, -1.6589e+00, -2.4024e-01, -9.8767e-02,
          9.9938e-01, -1.9400e-01,  7.3603e-01, -7.6624e-03, -1.2548e-03,
         -4.6615e-02,  6.2776e-02,  4.9982e-02,  1.1589e-01, -3.9000e-01,
         -8.7362e-01,  5.3293e-01,  3.0906e-04, -7.1439e-02, -1.0665e-02,
         -4.7394e-03, -4.7630e-02,  6.0790e-03, -1.8937e-01, -5.0091e-01,
          8.2978e-02, -7.5771e-01, -5.2811e-01, -5.9085e-02, -4.0738e-02,
          5.1535e-02, -2.1126e-01,  1.4395e-01, -1.2616e-01, -6.5546e-02,
         -1.2251e-01, -6.1844e-02,  7.4098e-01,  3.4461e-01,  3.6256e-01,
         -5.6699e-01, -5.4381e-01,  8.2336e-01, -8.7483e-01,  1.1515e+00,
         -8.9060e-01, -8.5529e-03,  3.9754e-01, -2.9360e-01, -7.8066e-01,
          5.0322e-01, -3.6383e-01,  2.3424e-01,  1.2959e-01,  1.2256e-02,
          9.8318e-01, -6.1388e-01, -5.4102e-01,  4.0096e-01, -2.7760e-01,
          7.5562e-02,  2.2816e-02, -3.7532e-02,  3.0789e-01, -2.0375e-01,
         -4.7923e-02,  4.7133e-02]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
537000 特征值优化 tensor(4.7267, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4119e+00, -3.7338e-01,  1.9994e+00, -1.6155e-01,  9.5719e-01,
          1.2246e-01,  3.6125e-01, -3.9751e-01,  8.2869e-01, -4.2117e-01,
          2.7427e-01, -5.1090e-01, -1.2923e+00, -1.4229e-01,  1.1963e-03,
          1.0212e-03,  1.0380e+00,  1.4789e-01, -6.5700e-01, -6.5976e-03,
          3.7778e-01, -1.5005e-01, -1.4721e-01, -8.3520e-02,  7.0398e-01,
          5.6735e-01,  1.7286e-01, -3.2461e-01, -8.1633e-01,  9.8448e-01,
          9.1851e-02,  3.1774e-02, -1.1150e-02, -1.4538e-03, -6.2031e-01,
         -3.5583e-02,  3.9228e-01,  1.2111e-01,  3.2833e-03, -6.5245e-02,
          1.2822e-01,  4.2852e-01,  4.9348e-01,  1.2110e+00,  7.6445e-01,
         -7.3369e-01,  1.0353e-01,  1.7733e+00, -4.2192e-01, -3.7691e-01,
         -8.3594e-01,  6.0839e-01, -6.1206e-01,  2.6883e-01,  2.2937e-01,
         -3.6861e-02,  5.7870e-01, -4.7362e-01,  4.5633e-04, -2.0441e-03,
          9.4255e-01, -4.9037e-01, -9.2414e-01,  5.1796e-01,  6.5868e-01,
         -7.6802e-01,  3.9743e-01,  6.3578e-02, -1.4190e+00, -2.5600e-01,
         -1.8243e-01, -1.0565e-01]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
538000 特征值优化 tensor(2.1988, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7806e+00, -3.5122e-01,  2.4156e+00, -3.5094e-01,  1.6222e-01,
         -1.2852e-01,  5.1862e-01, -2.3826e-02, -1.8607e-01,  3.0388e-01,
          5.9819e-01, -4.9198e-01, -9.0319e-01,  1.2978e-02, -4.3538e-02,
         -4.5830e-02,  3.4735e-01,  1.9007e-02, -2.6949e-01,  4.5394e-02,
          2.5050e-01, -2.0044e-01, -1.5788e-02, -1.2779e-03, -1.5255e-02,
          2.3536e-02,  6.8438e-03, -1.3130e-02, -7.9141e-01,  5.9913e-01,
          2.5699e-02, -2.2281e-03,  1.3893e-04, -1.8685e-02, -1.2923e-02,
          1.1541e-03,  2.0659e-01,  3.1478e-02,  1.0835e-01, -1.2505e-01,
          1.9267e-01,  1.1885e-01,  3.7666e-01,  9.0352e-01,  9.0828e-01,
         -1.6514e-01, -2.2131e-02,  1.2970e+00, -3.9015e-01, -3.4441e-01,
         -1.1111e+00,  5.0907e-01, -2.4332e-01,  1.9949e-01,  5.7330e-02,
          2.1487e-01,  1.6157e-01, -3.5037e-02, -1.2340e-02, -9.7906e-02,
          8.1617e-01, -2.0294e-01, -4.3985e-01,  1.4781e-01, -1.6738e-01,
          5.3816e-02,  6.5294e-02,  7.1169e-02, -1.0542e+00, -2.7452e-02,
         -3.7902e-01,  8.0942e-02]], device='cuda:0') tensor(0.9281, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
539000 特征值优化 tensor(2.1400, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7915e+00, -4.0277e-01,  2.2397e+00, -6.4114e-01,  3.5622e-01,
          1.1181e-01,  4.8953e-01,  6.9043e-02,  1.5062e-03,  3.3068e-01,
          5.4977e-01, -3.0086e-01, -8.3917e-01,  1.7959e-02,  5.8630e-02,
         -1.0802e-01,  2.8949e-01,  8.5454e-03, -2.7501e-01,  9.8838e-03,
          2.7192e-01, -2.5015e-01,  8.1385e-03, -3.5141e-03, -5.1068e-02,
         -4.9899e-03,  1.6581e-02, -3.1212e-02, -6.3426e-01,  4.9858e-01,
          2.7037e-02,  4.3563e-02, -1.5361e-02, -1.8340e-02, -1.2861e-02,
          1.6784e-03,  9.4070e-02,  3.8931e-02,  1.2167e-01, -1.2943e-01,
          2.0567e-01,  1.1465e-01,  3.0682e-01,  8.6161e-01,  8.6354e-01,
         -1.8903e-01, -4.9100e-02,  1.2030e+00, -4.2001e-01, -3.5973e-01,
         -1.2144e+00,  5.6802e-01, -2.2856e-01,  1.9734e-01,  9.1648e-02,
          1.7849e-01,  7.4341e-02, -1.3461e-03,  1.0439e-01, -4.8039e-02,
          3.0450e-01, -3.5944e-02, -2.7405e-01,  6.0317e-02, -2.0128e-01,
          5.8631e-02,  1.0013e-01,  6.4385e-02, -1.0795e+00,  2.5560e-02,
         -3.4528e-01,  6.5421e-02]], device='cuda:0') tensor(1.2685, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
540000 特征值优化 tensor(16.5193, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9526,  0.5324, -2.0550, -1.0306,  1.7400, -0.0262, -0.3631,  1.0858,
          1.1122, -0.0286,  0.3232,  0.8801, -0.1502, -0.7803, -0.2718, -1.3244,
         -1.1629,  0.9496, -0.3695,  0.9951,  0.7913,  0.1428, -1.5870, -0.8193,
          1.1157,  0.2087,  0.7659, -1.1834,  0.1789, -0.5195, -0.0351,  0.1630,
         -1.0759, -1.8075, -0.3404, -2.3511,  0.9248,  1.2265,  0.1915, -0.2519,
         -0.5226,  1.7765,  1.1397,  0.8108, -1.1686,  1.4913, -0.3860, -0.5121,
          0.5927, -0.0072,  0.4372, -0.9639,  0.1130, -0.8183,  0.6490,  1.0159,
          2.1930,  1.4090, -1.3312,  1.8958,  0.2771, -1.2172,  0.7089, -0.7376,
          1.1540,  0.9360,  0.0029, -1.3246, -0.4052,  0.9968,  0.0686, -0.7329]],
       device='cuda:0') tensor(8.3758, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
541000 特征值优化 tensor(4.2329, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4466,  0.1343, -1.0602, -0.4161,  1.4660,  0.9852,  0.4931,  0.8074,
          0.2540, -0.7820,  1.0047,  1.8439,  0.1393, -0.2468, -0.1161, -0.3295,
         -0.1678,  0.2041, -0.0764,  0.4531,  0.3915, -0.0626, -0.5619, -0.0431,
          0.2491, -0.0367,  0.0649, -0.3044, -0.0272, -0.0584, -0.0251,  0.5504,
         -0.4457, -0.8902,  0.1166, -1.3288,  0.4482,  0.3816,  0.2645, -0.4584,
          0.0873,  0.8770,  1.1048,  0.6745, -1.1130,  1.3001, -0.4435,  0.0542,
          0.1188,  0.0576,  0.3899, -0.2929,  0.1408, -0.5844,  0.3853,  0.5182,
          2.0762,  0.3740, -0.8474,  1.4081,  0.8292, -0.6016,  0.6295, -0.3271,
          0.3466,  0.4289, -0.1538, -0.6716,  0.2436,  0.1688,  1.0098, -0.4211]],
       device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
542000 特征值优化 tensor(2.1540, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2909,  0.6197, -0.4382, -0.2710,  1.3924,  1.3287,  0.4749,  0.8398,
         -0.3107, -0.7144,  0.7805,  2.1557,  0.1948, -0.1488, -0.1769, -0.1517,
         -0.0125,  0.0971, -0.0905,  0.4013,  0.2262, -0.0878, -0.0792, -0.0364,
          0.0495,  0.0103, -0.0727, -0.0873,  0.0035, -0.0664, -0.0719,  0.6001,
         -0.3956, -0.6221,  0.0357, -0.9266,  0.4481,  0.3351,  0.0429, -0.1916,
          0.2475,  0.6388,  0.9127,  0.3776, -0.8528,  1.2162, -0.4374, -0.0854,
          0.0168,  0.0273,  0.1186, -0.1271, -0.1498, -0.3920,  0.4698,  0.2034,
          1.7195,  0.0144, -0.4426,  1.8593,  0.7151, -0.2977,  0.6193, -0.1765,
         -0.0983,  0.2624,  0.2767, -0.2696,  0.3246,  0.0311,  1.2391, -0.7413]],
       device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
543000 特征值优化 tensor(10.5786, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2710,  0.2838,  0.4223,  0.4827,  0.2562,  0.7284,  0.4154, -0.4231,
         -0.1217, -1.5180,  1.6830,  1.9140, -0.4526,  0.2483,  0.3418, -0.2550,
          0.0380,  0.8175, -0.5986,  1.1412,  0.2209,  0.0541,  2.0608, -0.4730,
         -0.1124, -1.0747,  0.0680, -0.1726,  0.6583, -0.0734, -1.0850,  0.3821,
         -0.2238, -0.0246, -0.0363, -1.2375, -0.7274, -0.4000,  0.5860, -1.3470,
          0.8155, -0.0233, -1.0988, -0.2750,  1.4638,  0.1112,  0.3933,  1.2332,
         -1.2528,  0.1000,  0.5009, -0.8596, -0.2013,  0.7188, -0.4000, -0.2101,
          0.4906, -0.7031, -0.0527,  0.2830, -0.1283,  0.3486,  0.5691, -0.3717,
          0.2187, -0.1409,  1.5197, -1.1747,  0.0814, -0.7589,  1.0051,  1.5190]],
       device='cuda:0') tensor(6.0952, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
544000 特征值优化 tensor(2.5614, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.9725e-01,  8.5013e-02,  1.1466e+00,  2.3721e-01,  9.4909e-01,
          1.6973e+00,  2.2012e-01, -2.0362e-01,  4.5930e-01, -1.6508e+00,
          1.5547e+00,  2.6542e+00, -1.5767e-02, -1.0721e-01,  1.7232e-01,
         -1.7603e-02,  2.7500e-02,  3.5407e-01, -3.2309e-01,  1.6752e-01,
          3.7547e-02, -1.7816e-03,  1.0259e+00,  2.3978e-04,  7.3757e-02,
         -1.5871e-01, -1.2174e-01, -1.2637e-01,  3.0439e-01, -1.0350e-02,
         -5.1926e-01,  4.0469e-02, -1.7467e-01, -1.9089e-02,  1.6429e-01,
         -4.9321e-01, -1.7445e-02,  5.0775e-03,  2.6295e-01, -7.5519e-01,
          4.8052e-01,  4.1386e-01, -4.5515e-01, -2.3252e-01,  6.5615e-01,
         -8.0262e-03,  5.6955e-02,  6.0190e-01, -7.8563e-01, -1.0952e-01,
          8.4514e-01, -5.5010e-01,  3.5544e-01,  6.7475e-01, -4.7490e-02,
         -4.6060e-01, -2.0142e-01, -2.6280e-01, -1.4412e-01,  6.9797e-01,
         -1.4881e-01,  9.5222e-02,  2.9570e-01, -2.0261e-01,  2.6410e-01,
          1.1457e-01,  1.1280e+00, -7.1466e-01,  6.1369e-01, -2.5328e-01,
          1.0605e+00,  5.0810e-01]], device='cuda:0') tensor(1.3183, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
545000 特征值优化 tensor(15.9483, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.7791,  0.2552,  0.2669, -0.4016, -1.5212, -0.7335, -0.0866, -0.2077,
         -0.7187,  0.4498, -0.4263,  0.7035, -0.1847,  0.9076,  1.7161, -0.7656,
          0.8876, -1.1776, -0.1027, -0.4038,  0.7610,  1.2695,  0.1623, -0.2265,
         -1.6533,  0.5581, -1.1161, -0.5314, -0.6548,  0.5955, -0.6952, -0.0411,
          0.3193, -1.6217,  0.2853, -0.2418, -0.2762,  0.3968, -0.9577, -1.4339,
         -0.0992,  0.1602,  0.2102,  0.0616,  0.0639, -0.6419,  1.3602,  0.6499,
          0.9625, -1.0495, -0.4836,  0.2300,  1.2186, -0.7972, -0.8582,  1.4909,
         -0.7267,  0.7681, -1.9395,  0.2836,  0.4806, -0.3740, -0.7302, -3.2144,
          1.1472, -0.5734,  0.3428, -0.0130,  0.6041, -0.9245,  0.4989,  0.2871]],
       device='cuda:0') tensor(9.0727, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
546000 特征值优化 tensor(5.0706, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.6951e-02,  8.9073e-01,  8.4991e-01,  3.4973e-01, -7.9106e-01,
          1.9908e-01,  9.3335e-01,  3.7273e-01, -1.0539e-02,  6.4304e-01,
          6.2039e-01,  1.4756e+00,  1.0814e-01,  1.9287e-01,  6.8946e-01,
         -1.1597e-01,  2.6807e-01, -2.7930e-01, -8.1406e-02, -6.9639e-03,
          1.6076e-01,  4.9639e-01,  1.5124e-04, -9.9521e-03, -5.2498e-01,
          7.9349e-02, -1.4210e-01, -3.9112e-02, -4.9471e-02,  3.6669e-01,
         -2.3332e-02, -2.4248e-01,  2.3613e-01, -7.8948e-01, -7.8262e-04,
          3.7318e-04, -4.5704e-01,  4.8831e-01, -4.5395e-01, -7.7873e-01,
         -4.3075e-01, -3.0655e-01,  3.0987e-01, -6.7566e-02, -6.7319e-02,
         -7.7000e-01,  4.9521e-01, -1.0292e-01,  7.2755e-01, -3.0286e-01,
          1.8199e-01,  1.0796e-01,  5.0408e-01, -2.2052e-01,  7.6512e-02,
          2.5777e-01,  2.5748e-01,  1.0348e+00, -1.0178e+00,  1.6600e-01,
          1.5433e+00, -7.3898e-01,  2.8066e-01, -2.2061e+00,  9.1699e-01,
          6.8651e-02,  1.8818e-01,  7.8452e-02,  1.5492e+00, -7.7052e-01,
          3.9773e-01,  6.3536e-01]], device='cuda:0') tensor(3.2531, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
547000 特征值优化 tensor(2.2471, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6589e-01,  3.0870e-01,  4.0671e-01,  3.1787e-01, -1.0184e-01,
          3.4513e-01,  1.5115e+00, -4.0386e-02,  6.4578e-01,  9.7348e-01,
          1.2000e+00,  1.6609e+00,  4.3955e-03,  1.0425e-01,  1.5869e-01,
         -1.5061e-01,  2.1441e-01, -1.0808e-01,  4.1190e-02,  1.2667e-02,
          2.2333e-02,  2.3395e-01, -2.8383e-02,  3.4942e-02, -1.4307e-01,
          7.1571e-02, -1.5784e-01, -2.5055e-01, -2.9627e-02,  2.0873e-01,
         -2.1880e-02, -2.3680e-01,  2.5967e-01, -4.5830e-01,  2.7176e-02,
          3.1324e-03, -3.4355e-01,  4.1953e-01, -2.9819e-01, -4.3480e-01,
         -3.1657e-01, -5.4728e-01, -1.9724e-01,  8.5783e-02,  1.2792e-01,
         -2.2114e-01,  8.3270e-02, -5.6149e-01,  7.0000e-01, -1.5952e-01,
         -1.8536e-01,  5.4182e-04, -6.7305e-02,  6.6454e-02,  1.3639e-02,
         -3.0598e-02,  2.8801e-01,  6.5607e-01, -4.7877e-01, -3.4710e-01,
          1.5253e+00, -7.5649e-01,  9.3580e-01, -1.6024e+00,  7.4115e-01,
         -1.0822e-01,  4.2512e-01,  3.6793e-02,  1.5137e+00, -7.3826e-01,
         -2.0627e-01,  5.1287e-01]], device='cuda:0') tensor(1.6186, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
548000 特征值优化 tensor(2.1021, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3048,  0.1216,  0.4720,  0.0850,  0.1602,  0.0444,  1.5534, -0.2214,
          0.8505,  0.8775,  1.2106,  1.7261,  0.0053,  0.0716,  0.0447, -0.1717,
          0.2534, -0.1247, -0.0267,  0.0404,  0.0242,  0.1474, -0.0840,  0.0494,
         -0.1487,  0.1315, -0.1785, -0.3035,  0.0134,  0.1194, -0.0183, -0.1910,
          0.2275, -0.1670,  0.0536, -0.0409, -0.2636,  0.4489, -0.2087, -0.3598,
         -0.3977, -0.5010, -0.0608,  0.0550,  0.0882, -0.1463,  0.0919, -0.6023,
          0.4409, -0.1827, -0.3663, -0.0628, -0.0258,  0.0391,  0.0198, -0.0274,
          0.0055,  0.3597, -0.3250, -0.3004,  1.5005, -0.5640,  1.0101, -1.5182,
          0.6888, -0.1616,  0.3544, -0.0263,  1.3512, -0.6543, -0.3314,  0.4950]],
       device='cuda:0') tensor(1.0595, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
549000 特征值优化 tensor(8.9794, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3228, -0.9542,  0.4195, -0.4755, -1.1565,  0.3844, -0.8346, -0.5163,
          1.1022,  0.6882,  2.0067,  0.8678, -1.7228, -0.2620, -0.0283,  0.0773,
          0.1644, -0.5842,  0.3632, -0.3044, -0.1325,  0.2218, -0.1645, -0.1361,
          0.1000,  0.4028,  0.0027, -0.5403,  0.7167, -0.1255, -0.7010,  0.2542,
         -0.2111,  0.1438,  0.7294,  0.8156,  0.0083,  0.6191,  0.7933, -0.6348,
          0.5376,  0.2029,  0.8610,  1.1095,  0.8820,  0.6739, -0.4015,  1.0812,
         -0.7420, -1.3243, -1.2093,  1.3235, -0.4063, -0.2277, -0.4962, -0.9780,
         -0.8213, -0.1970,  0.2148, -0.8247,  1.8745, -1.0444,  1.6442, -0.2830,
          1.4226,  1.6105, -0.6912,  1.5162,  1.4146, -0.1523,  0.4250,  0.8281]],
       device='cuda:0') tensor(5.6370, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
550000 特征值优化 tensor(2.7264, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1578e+00, -9.8429e-01,  1.7683e-01, -2.9396e-01, -7.4439e-01,
          6.2652e-01, -3.1361e-01,  2.8772e-01,  1.7452e+00,  1.3985e+00,
          2.0939e+00,  1.2475e+00, -1.0121e+00, -2.6354e-02,  2.3093e-02,
         -2.9456e-02, -3.1517e-03, -8.7458e-02,  1.0393e-01, -5.0078e-05,
         -1.6646e-02,  1.1177e-01, -1.0060e-01,  1.1241e-01, -1.4926e-01,
         -6.8337e-02,  2.2183e-01, -2.0782e-01,  1.7244e-01, -8.9999e-02,
         -1.3158e-01,  1.8962e-02,  1.3235e-02, -4.4361e-03,  2.6425e-01,
          3.1676e-01,  9.7915e-02,  2.3373e-01,  5.7045e-01, -4.2861e-01,
          5.1404e-01, -2.9540e-01,  4.4878e-01,  1.0354e+00,  7.6575e-01,
          2.9634e-01, -1.0723e-01,  1.0051e+00, -6.7252e-01, -8.6527e-01,
         -1.2075e+00,  9.4529e-01, -1.8846e-01,  1.2443e-02,  4.2633e-02,
         -4.6480e-01, -4.8302e-01,  6.2991e-03, -1.9902e-02, -6.2756e-02,
          1.6752e+00, -7.7162e-01,  1.5116e+00, -4.7629e-01,  8.2845e-01,
          7.9489e-01, -5.6575e-01,  8.3586e-01,  4.6451e-01,  3.3659e-01,
          4.4215e-01,  1.4381e-01]], device='cuda:0') tensor(1.1825, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
551000 特征值优化 tensor(2.3774, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1619, -1.0972,  0.0511,  0.1847, -0.2622,  0.2472,  0.0199,  0.3974,
          1.6943,  1.4292,  1.8808,  1.1634, -0.8320,  0.0144, -0.0088,  0.0447,
          0.0666, -0.2443,  0.2377,  0.0550, -0.0245,  0.1251,  0.0549,  0.0501,
         -0.1494, -0.2329,  0.1450, -0.2135, -0.0071, -0.0924, -0.1170, -0.0100,
         -0.0343, -0.0124,  0.0921,  0.1277,  0.0561,  0.1638,  0.6247, -0.2766,
          0.3836, -0.1348,  0.0383,  0.9012,  0.8127,  0.3599, -0.1092,  0.7432,
         -0.4971, -0.5498, -0.9393,  0.7072, -0.2422,  0.0432, -0.1938, -0.5556,
         -0.3564,  0.1479,  0.0870, -0.0085,  1.2662, -0.5628,  1.0262, -0.3823,
          0.4163,  0.7113, -0.5381,  0.5936, -0.0207,  0.2969, -0.0528,  0.2015]],
       device='cuda:0') tensor(1.4025, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
552000 特征值优化 tensor(2.1191, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1098e+00, -1.0309e+00,  1.7651e-02,  3.7781e-01,  5.1049e-02,
          2.5594e-01,  3.0654e-01,  5.2393e-01,  1.6325e+00,  1.5163e+00,
          1.7114e+00,  9.7612e-01, -7.0945e-01,  2.8694e-02,  6.2581e-03,
          7.8026e-02,  1.4060e-01, -4.0966e-01,  2.2954e-01,  4.6517e-02,
         -2.6442e-02,  9.8048e-02,  1.5729e-02,  4.4544e-02, -1.5402e-01,
         -1.3882e-01, -2.4041e-02, -2.2930e-01,  4.1257e-03, -6.9160e-02,
         -5.7621e-02, -8.9653e-04, -1.9089e-02, -2.2112e-02,  1.2900e-01,
          4.4582e-02,  4.7107e-02,  1.2469e-01,  8.6750e-01,  6.9879e-02,
          2.4584e-01,  1.0747e-01, -5.8699e-02,  7.7710e-01,  7.8180e-01,
          4.6835e-01, -1.1284e-01,  3.3229e-01, -2.2439e-01, -2.3074e-01,
         -5.4298e-01,  4.1967e-01, -2.0639e-01,  8.2202e-02, -4.6986e-01,
         -7.9732e-01, -1.6773e-01,  9.8676e-02,  3.3140e-02, -4.6549e-02,
          1.0794e+00, -4.7684e-01,  8.8538e-01, -3.4656e-01,  1.5829e-01,
          6.6287e-01, -3.1714e-01,  3.3189e-01, -1.1106e-02,  2.3647e-01,
         -4.9800e-01,  2.0504e-01]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
553000 特征值优化 tensor(8.3795, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5491, -0.9273,  0.6606, -0.7559,  2.2385,  0.8474,  1.2996,  0.8550,
          0.4540, -1.1007, -0.1428,  0.4398, -0.4921, -0.2946,  0.2132, -0.0761,
          0.2533,  0.1003,  0.0122,  1.5497,  0.9289, -0.0673,  0.0218, -0.0781,
         -0.0341, -0.1510, -1.3263,  0.2609,  0.0051, -0.2804, -0.0523,  0.1572,
          0.5293, -1.1270, -0.0583, -0.3140, -0.5035, -1.3041,  0.9303, -0.4909,
         -0.7173,  0.3274,  1.8746, -0.8424, -1.0505, -0.2802,  0.7656, -0.5983,
          1.3327, -1.5710,  0.2755, -0.0633,  0.8097, -1.0484,  0.3343,  2.4444,
          1.3483, -0.1669, -0.0101,  0.0133,  0.2870,  0.6026,  0.0627,  0.3082,
         -0.4658,  0.7258, -0.4991,  0.0409, -0.0192,  0.0039, -0.1854,  1.0147]],
       device='cuda:0') tensor(5.2366, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
554000 特征值优化 tensor(2.6190, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.9735e-02, -9.7236e-01,  4.1374e-01, -5.5212e-01,  1.7991e+00,
          1.2980e+00,  1.6769e+00,  1.6406e+00,  8.2083e-01, -9.8912e-01,
          6.8967e-01,  1.5382e+00, -1.6155e-01, -1.4332e-01, -8.9369e-03,
          6.1952e-02, -5.5617e-02,  3.0930e-02,  9.5932e-03,  1.0397e+00,
          2.6792e-01, -2.3383e-02,  1.2269e-01, -1.1258e-01, -1.2357e-01,
         -2.6070e-01, -5.7200e-01,  2.2483e-01, -2.1391e-02,  1.9982e-03,
          2.0012e-01, -3.6361e-01,  4.2363e-01, -7.2682e-01, -1.6320e-01,
         -2.3210e-01, -5.0974e-01, -5.9866e-01,  2.0572e-01, -2.2805e-01,
         -2.2073e-01,  3.1747e-01,  2.1391e+00, -8.8317e-01, -1.1530e+00,
         -8.7529e-01,  3.5573e-01, -4.6651e-01,  8.4547e-01, -5.7923e-01,
          3.8202e-01, -6.8121e-02,  5.6456e-01, -3.2698e-01,  4.7900e-01,
          1.4439e+00,  1.5602e+00,  2.7143e-01,  1.7030e-01, -1.7841e-01,
         -1.5916e-01,  4.2355e-01,  4.7267e-01,  1.7128e-01, -1.6959e-01,
          3.4618e-01,  4.0249e-02, -2.3291e-01,  4.4754e-01,  3.5885e-03,
         -2.8030e-01,  4.7048e-01]], device='cuda:0') tensor(1.6001, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
555000 特征值优化 tensor(2.1611, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5892e-01, -8.3987e-01,  1.8462e-01, -3.6770e-02,  1.5418e+00,
          1.2961e+00,  1.5614e+00,  1.7141e+00,  7.3978e-01, -7.0471e-01,
          8.4947e-01,  1.4575e+00, -8.1093e-02, -7.7327e-03, -4.8207e-02,
          4.6792e-02, -5.3814e-02, -5.4071e-02, -8.1448e-02,  8.6766e-01,
          2.4669e-01, -2.1059e-02, -6.7292e-02,  9.4143e-03, -7.9622e-03,
         -4.1573e-02, -8.5640e-02,  1.8086e-02, -5.4912e-03, -1.4927e-03,
          2.6391e-01, -2.6915e-01,  3.5221e-01, -6.7776e-01, -2.5693e-01,
         -3.0303e-01, -5.2243e-01, -5.3556e-01,  1.2498e-01, -1.6411e-01,
         -1.2476e-01,  2.8097e-01,  1.9256e+00, -7.3847e-01, -1.3000e+00,
         -1.0866e+00,  4.2509e-01, -2.4586e-01,  3.4815e-01, -7.3392e-02,
          5.6394e-03,  1.1065e-02,  2.2143e-01,  1.0254e-01,  4.8312e-01,
          1.2087e+00,  1.3915e+00,  3.4670e-01,  3.8914e-01, -5.5307e-01,
         -4.1780e-02,  3.0250e-01,  6.0113e-01,  3.4126e-02, -8.6819e-02,
          2.0012e-01, -1.0855e-01, -6.2252e-02,  4.4168e-01, -1.3699e-01,
         -1.0415e-01,  3.4013e-01]], device='cuda:0') tensor(1.0654, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
556000 特征值优化 tensor(2.1142, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.7217e-01, -8.8735e-01,  1.7449e-01, -7.0308e-03,  1.2702e+00,
          1.3388e+00,  1.4552e+00,  1.7486e+00,  6.4402e-01, -6.4160e-01,
          8.9035e-01,  1.2868e+00, -3.9131e-02,  4.1836e-02,  1.3542e-02,
          3.4493e-02, -3.6556e-02,  1.6069e-02,  2.2368e-02,  7.6130e-01,
          2.1369e-01, -2.2752e-02,  1.2448e-02,  5.2998e-02, -1.2430e-02,
         -4.7519e-02, -2.8915e-02, -4.8490e-02,  1.9226e-02,  8.3812e-04,
          1.9908e-01, -2.3388e-01,  3.2335e-01, -6.5333e-01, -3.0159e-01,
         -3.0693e-01, -5.3716e-01, -5.2285e-01,  1.0389e-01, -1.3621e-01,
         -1.1074e-01,  2.5577e-01,  1.7708e+00, -5.8470e-01, -1.3791e+00,
         -1.2123e+00,  5.0206e-01, -1.9849e-01,  1.8917e-01,  5.0638e-02,
          1.5414e-02, -5.6316e-03,  1.2771e-01,  8.7304e-02,  4.6391e-01,
          1.1196e+00,  1.2181e+00,  3.7428e-01,  4.7692e-01, -5.4817e-01,
          5.8687e-02,  2.4245e-01,  6.0250e-01,  5.8148e-02,  4.3893e-02,
          1.4174e-01, -2.2667e-01,  2.3656e-02,  3.9382e-01, -7.3551e-02,
          3.5615e-02,  2.3174e-01]], device='cuda:0') tensor(1.3076, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
557000 特征值优化 tensor(5.7534, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9594,  0.6136,  0.5165,  1.4684,  0.5053,  0.8268, -0.1715, -1.0920,
          0.0121, -0.3388, -0.2609,  1.5115, -0.2509, -0.0425,  0.2518, -0.3884,
         -0.4907,  0.0511,  0.0374,  0.6394, -0.2378, -0.3200, -0.0057, -0.9593,
         -0.2724,  0.7629,  1.1166,  0.3004, -0.0495, -0.4505,  0.2908, -0.0152,
          0.0021, -0.9764,  0.0489,  0.1276,  0.5643,  0.1959,  0.6903,  1.1104,
          0.2698,  1.0360,  0.4635, -1.1569,  0.7267, -0.7260,  0.6613,  0.0795,
         -0.0386,  0.1919, -1.3716,  0.6725,  0.0548,  0.0612, -0.3740, -0.2455,
         -0.0878,  0.8201, -0.0803, -0.3476, -0.0856,  0.1094,  0.0941, -0.4203,
         -0.6481,  0.2695,  0.3522,  0.6593, -0.2698, -0.0397,  0.5024,  0.6219]],
       device='cuda:0') tensor(2.6701, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
558000 特征值优化 tensor(2.1605, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9698,  0.3771,  0.9078,  1.3977, -0.1883,  1.1867, -0.4684, -0.4478,
          0.5519,  0.2955, -0.5717,  1.9992, -0.1188,  0.0132,  0.0080,  0.0048,
         -0.0110, -0.0315,  0.0078,  0.4947, -0.1152, -0.1901, -0.0774, -0.2629,
         -0.3108,  0.1623,  0.5184,  0.2369, -0.2162, -0.1863,  0.0274,  0.0022,
         -0.0226, -0.7378,  0.0358,  0.1284,  0.1206,  0.0841,  0.3812,  0.5783,
          0.0921,  0.8224,  0.5632, -1.1782,  0.6530, -0.5165,  0.5055,  0.1047,
         -0.3718,  0.2301, -1.1276,  0.5005, -0.0984,  0.1632, -0.2021, -0.1855,
          0.1408,  0.5801, -0.1985, -0.5160, -0.2810,  0.0845, -0.1397, -0.0691,
         -0.2615,  0.4576,  0.6291,  0.3720, -0.2957,  0.0998,  0.5132,  0.3545]],
       device='cuda:0') tensor(1.6729, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
559000 特征值优化 tensor(20.9532, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2595,  1.7419,  1.1318,  0.4196, -0.2593,  0.6945, -0.2122, -0.6781,
          0.4496, -0.6316, -0.6834, -0.5617,  0.1322,  1.1052, -1.3120,  0.2153,
         -0.3739, -0.2340,  1.0569, -1.5800, -1.1493,  0.6107,  0.7895,  2.1694,
         -1.7628, -0.0680, -0.4969, -0.5307,  0.2140, -1.0179,  0.7063, -0.8854,
         -0.5542, -0.4853,  1.6122,  1.0341, -1.8920,  0.0341, -0.1120, -2.1461,
         -0.5260,  1.0925, -0.9014, -1.9581,  1.1168,  0.6499,  0.5000, -2.1595,
          0.3668,  0.0247,  1.9019,  0.7368, -0.6534,  0.2149,  0.5100, -0.4478,
         -1.1574,  0.6340,  0.2400,  0.5373,  1.6119, -0.6986, -2.2929,  0.3784,
         -0.2785, -1.3925,  0.7434, -0.0332,  1.0044, -1.0212, -0.0386, -0.2617]],
       device='cuda:0') tensor(10.9205, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
560000 特征值优化 tensor(4.1393, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2008,  1.0675,  1.5235, -0.6560,  0.1967,  1.5028,  0.6804, -0.2824,
          1.4439, -1.2348, -0.3266,  0.4593, -0.2819,  0.1919, -0.2271, -0.0054,
         -0.2500,  0.0619,  0.1310, -0.3876, -0.3478,  0.2269, -0.1480,  1.1212,
         -0.7104, -0.4314, -0.1680, -0.0167, -0.0287, -0.2007, -0.0437, -0.2214,
         -0.0835,  0.0356,  0.7321,  0.2853, -1.0651,  0.3244,  0.3427, -1.1467,
         -0.1780,  0.4510,  0.0454, -1.1606,  1.6560,  0.1042,  0.2036, -1.2779,
          0.1024, -0.1106,  1.0065,  0.1388, -0.1538,  0.1045,  0.2207, -0.2358,
         -0.3629, -0.2567,  0.0024, -0.0090,  2.3055, -0.1830, -1.7490,  0.4273,
          0.7106, -0.3867, -0.1086,  0.1792,  1.3934, -0.4263,  0.8653,  0.5711]],
       device='cuda:0') tensor(1.9296, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
561000 特征值优化 tensor(2.1766, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3708,  0.9348,  1.1796, -0.9053,  0.2742,  1.5710,  1.1205, -0.1794,
          1.7632, -1.4497,  0.0082,  0.7384, -0.2308, -0.0616, -0.0521, -0.0145,
         -0.0460, -0.0433,  0.0189, -0.2444, -0.3044,  0.1153, -0.2826,  0.4907,
         -0.1928, -0.1992, -0.1506,  0.0289,  0.0065, -0.0902,  0.0246, -0.0257,
          0.0214, -0.0114,  0.4667,  0.2079, -0.7959,  0.2358,  0.3956, -0.8126,
         -0.0972,  0.5674,  0.1484, -0.8507,  1.3199,  0.0897,  0.1540, -1.0491,
          0.2442,  0.0098,  0.8750,  0.0436, -0.1430,  0.1564,  0.0602, -0.0112,
         -0.5187, -0.1020, -0.0126,  0.0360,  2.1734, -0.2449, -1.6769,  0.4640,
          0.9407, -0.0986, -0.5102, -0.1737,  1.0899, -0.3484,  0.6864,  0.5918]],
       device='cuda:0') tensor(1.3718, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
562000 特征值优化 tensor(2.1148, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4007e+00,  8.7313e-01,  1.1145e+00, -7.2052e-01,  4.0534e-01,
          1.4677e+00,  1.1975e+00, -1.2007e-01,  1.7708e+00, -1.7026e+00,
         -5.3421e-02,  7.5328e-01, -2.2727e-01, -8.9241e-02, -1.2659e-01,
          1.7125e-03,  2.2078e-02, -5.7585e-03, -3.4223e-02, -1.5423e-01,
         -2.8134e-01,  1.2179e-01, -2.9452e-01,  3.6728e-01, -2.4778e-01,
         -2.2902e-01, -1.0298e-01,  9.6230e-02, -7.2875e-04, -9.4655e-02,
          2.6350e-02, -4.8537e-02,  6.8362e-03, -1.7973e-02,  4.0019e-01,
          1.6756e-01, -7.8397e-01,  1.2505e-01,  6.0970e-01, -7.4599e-01,
         -6.6966e-02,  6.2356e-01,  8.1852e-02, -6.3756e-01,  1.1364e+00,
          1.3999e-01,  1.2615e-01, -9.0570e-01,  1.8186e-01, -9.7173e-03,
          7.7593e-01,  6.4355e-02, -1.7055e-01,  1.7047e-01, -4.8798e-02,
          1.2483e-02, -5.9720e-01,  6.3894e-03, -4.0831e-02, -4.7843e-02,
          2.0192e+00, -2.1012e-01, -1.5370e+00,  4.0928e-01,  9.6113e-01,
         -1.1081e-01, -6.2524e-01, -2.7093e-01,  1.0181e+00, -3.5852e-01,
          6.9231e-01,  5.5493e-01]], device='cuda:0') tensor(1.2130, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
563000 特征值优化 tensor(8.8742, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1856,  1.4631, -0.0618, -1.1642,  0.6360,  0.1492,  0.9392,  0.5303,
          1.2539,  1.0192,  0.7767, -0.0180,  0.5394, -0.0890, -0.1432, -0.3660,
          0.8196,  0.1080, -0.0203, -0.4094,  0.5386, -0.8093, -0.3018, -0.0384,
         -0.0682, -0.3867,  0.0408, -0.2148,  0.3743,  0.0895,  0.0061,  0.2714,
         -1.6455, -0.0789,  0.1501, -0.4528, -0.6727,  0.2312,  0.2772,  0.5118,
          0.5344,  0.1442,  1.1924, -0.0725, -0.9403,  0.2984, -0.2440,  0.3340,
          1.3353,  0.5556,  0.1846,  0.0899,  0.0948,  0.4807,  0.1355, -0.2941,
          0.2417,  0.2470,  0.7099, -0.7707, -0.5676, -0.1597, -0.4010, -0.6315,
          0.0417, -0.5210,  0.4311, -0.2600,  1.7943,  1.0529,  1.2522, -1.8568]],
       device='cuda:0') tensor(5.3610, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
564000 特征值优化 tensor(2.2845, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5737,  0.6024,  0.4062, -1.0923,  1.3994, -0.0262,  0.8293,  0.2241,
          1.1954,  1.3426,  1.6006,  0.3282,  0.3713, -0.0579, -0.0647, -0.2373,
          0.2383, -0.0452, -0.0605, -0.0206,  0.3897, -0.2314, -0.0098,  0.0209,
         -0.2536, -0.2134,  0.2965, -0.2993,  0.0206,  0.1391,  0.0346,  0.1602,
         -0.7711, -0.0183,  0.0383, -0.1621, -0.0214,  0.0184,  0.0879,  0.1916,
          0.0565,  0.1492,  0.6447,  0.1256, -0.4321,  0.7645, -0.2463, -0.1916,
          0.5582,  0.3431,  0.2551, -0.1066,  0.2580, -0.3717, -0.0116, -0.8590,
         -0.2828,  0.1742,  0.1120, -0.5362, -0.5449,  0.1010,  0.1457, -0.1957,
          0.0992, -0.1868,  0.7442, -0.5644,  1.7203,  0.2054,  1.5838, -1.4370]],
       device='cuda:0') tensor(1.4956, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
565000 特征值优化 tensor(2.0990, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6313,  0.4757,  0.3840, -0.9139,  1.4489,  0.1721,  0.3883,  0.2689,
          1.0843,  1.5728,  1.6498,  0.3836,  0.3219, -0.0633, -0.1210, -0.1274,
          0.1664, -0.0581, -0.0748,  0.0365,  0.3399, -0.1489,  0.0331, -0.0096,
         -0.2405, -0.1814,  0.3823, -0.2324,  0.0096,  0.1177,  0.0419,  0.1106,
         -0.7011, -0.0242,  0.0910, -0.1350, -0.0075, -0.0258,  0.1192,  0.0738,
         -0.1937,  0.1756,  0.3969, -0.0032, -0.1521,  0.4650, -0.1360, -0.1931,
          0.3080,  0.3139,  0.3324, -0.1555,  0.2752, -0.3656, -0.0223, -1.0055,
         -0.2883,  0.1698,  0.0027, -0.5313, -0.2063,  0.0891,  0.2004, -0.1341,
          0.1285, -0.1069,  1.1068, -0.5762,  1.7705,  0.1194,  1.6178, -1.3310]],
       device='cuda:0') tensor(1.0074, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
566000 特征值优化 tensor(6.9824, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2244, -0.4270, -0.1922,  0.2177, -0.6682,  1.6076,  0.6044, -0.5833,
         -0.4970, -1.1779, -0.6232,  2.2448, -0.9874,  0.5812, -0.0504, -1.6640,
          0.5286,  0.3430, -0.2511, -0.0596,  0.7789,  0.3419,  0.7576, -0.4992,
         -0.2931, -0.5866, -0.4075, -0.0979, -0.0128,  0.1535, -0.1939, -0.1036,
         -0.3184,  0.0042,  1.2580, -0.2032, -0.9041,  1.0473,  0.1639, -0.2500,
         -0.2926, -0.0780,  0.5623,  0.0305,  0.4135, -0.4761, -0.2144, -0.3284,
          0.2443,  0.1422,  0.2256,  0.8157,  1.0881, -0.5347, -0.1241,  0.7167,
          0.2039, -1.0577,  1.1147,  0.8714, -0.8392,  0.7130, -0.2183, -0.1248,
          0.7285, -1.1290,  1.5211, -0.2867,  1.8438,  0.2838,  0.3541,  0.4100]],
       device='cuda:0') tensor(3.2092, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
567000 特征值优化 tensor(2.2316, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.7713e-01, -7.9946e-01,  1.6707e-01,  6.2002e-01, -1.9678e-01,
          1.9585e+00,  1.2546e+00, -9.0004e-01, -5.0980e-02, -3.5179e-01,
          8.0883e-02,  1.4400e+00, -4.1472e-01,  1.4391e-02,  2.5772e-02,
         -6.8493e-01, -4.8558e-02, -2.2751e-02, -2.7608e-02, -7.8206e-02,
          3.9094e-01,  1.3069e-01,  1.6344e-01,  3.2900e-02,  8.4360e-02,
         -1.3193e-01, -1.8969e-01, -1.7645e-01,  1.0279e-02,  7.3233e-02,
         -1.2934e-02, -6.4488e-02, -2.1967e-01,  3.9290e-02,  8.7529e-01,
         -3.8890e-01, -4.4171e-01,  4.3131e-01,  2.0455e-01, -2.3518e-02,
         -3.4080e-01,  8.2078e-04,  6.0948e-02,  3.2417e-01,  3.7805e-01,
         -3.4783e-01, -2.3397e-01, -2.2034e-01,  2.3874e-01,  1.8408e-01,
         -1.3500e-01,  2.2064e-01,  1.4843e-01, -5.2042e-02, -1.1903e-01,
          2.4070e-01,  4.2308e-01, -6.3309e-01,  1.2538e+00,  4.7178e-01,
         -3.9482e-01,  4.5127e-01, -2.8785e-01, -1.8479e-01,  9.7220e-01,
         -8.5249e-01,  1.2951e+00, -4.0123e-01,  9.7715e-01,  2.6351e-01,
         -3.9780e-01, -8.1070e-02]], device='cuda:0') tensor(1.6666, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
568000 特征值优化 tensor(2.0828, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.2655e-01, -9.0284e-01,  1.4149e-01,  3.0217e-01, -6.5431e-03,
          2.0698e+00,  1.3403e+00, -8.2919e-01,  4.4810e-02,  5.3690e-02,
          1.3155e-01,  1.0231e+00, -3.1961e-01, -1.8358e-02,  2.7628e-02,
         -3.7720e-01, -2.1788e-01,  1.5867e-02, -1.4140e-02, -1.0006e-01,
          3.0167e-01,  5.0024e-02,  9.1597e-02,  8.6488e-02,  5.4927e-02,
         -8.7940e-02, -9.7134e-02, -1.1977e-01,  2.0917e-02,  2.6142e-02,
         -1.8501e-02, -2.3401e-02, -1.2316e-01,  3.3998e-02,  7.6420e-01,
         -4.1699e-01, -4.1421e-01,  3.9721e-01,  2.2523e-01, -8.3389e-02,
         -3.0197e-01,  1.7040e-03, -1.2488e-01,  3.6225e-01,  3.6242e-01,
          6.9825e-02, -3.1700e-01, -2.3748e-01,  2.9287e-01,  5.1403e-02,
          2.8278e-03,  6.8099e-02,  7.8610e-02, -1.6335e-02, -8.5648e-02,
          1.2008e-01,  4.1472e-01, -6.0283e-01,  1.2060e+00,  2.6429e-01,
         -3.3841e-01,  3.9861e-01, -1.4561e-01, -2.4184e-01,  9.9920e-01,
         -6.9939e-01,  1.1711e+00, -4.0870e-01,  7.0900e-01,  4.1613e-01,
         -3.6037e-01, -9.4014e-02]], device='cuda:0') tensor(0.8614, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
569000 特征值优化 tensor(8.0511, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3438,  0.2541, -0.1753,  0.0582,  0.5319,  0.8884,  2.1653, -0.1537,
          1.0615, -0.6537,  2.1096,  1.0436,  0.0722, -0.0834, -0.0986, -0.2503,
         -0.1664,  0.0382, -0.0913, -0.0213,  0.0326,  0.2691,  0.3117,  0.3614,
          0.0153, -0.1286,  0.2580, -0.0787,  0.0069,  0.4138,  0.1738,  0.3680,
         -0.2132, -0.6118,  0.0918,  0.6085, -0.6572,  1.0214, -1.1432,  0.2768,
         -0.2662,  0.2696, -0.2605,  0.1773,  0.1526, -0.1686,  0.2177,  0.6475,
          0.1412,  0.1736,  0.2074,  0.2181, -0.3186,  2.2945, -0.9407, -0.5400,
         -0.6468, -0.8364,  0.2725, -0.2995,  1.5104, -0.1500,  0.1831, -1.3690,
          1.0768, -1.4053, -0.1677, -0.5891,  1.0002, -0.7978,  1.3990,  0.8075]],
       device='cuda:0') tensor(4.2321, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
570000 特征值优化 tensor(2.4908, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5599e-01,  1.4728e-01, -4.2625e-01, -4.4065e-01,  1.5140e+00,
          3.3285e-01,  2.4930e+00, -7.8190e-01,  1.6291e+00, -1.0092e+00,
          2.4454e+00,  3.7054e-01,  2.1779e-03, -2.6482e-02,  1.8940e-02,
         -1.3161e-02,  1.5577e-02, -2.5108e-02, -2.9706e-02,  5.5762e-03,
          2.4241e-02,  9.4430e-02,  1.1696e-03, -4.5483e-02, -2.0832e-02,
          2.0704e-02,  3.6921e-02, -1.1202e-02,  2.0050e-02,  1.1294e-01,
          1.2944e-01,  7.2548e-03, -1.2814e-02, -1.4607e-01,  3.5532e-01,
          1.2087e-01, -1.5703e-01,  6.6706e-01, -5.6305e-01,  2.4983e-01,
         -1.1690e-01,  1.6016e-02, -2.2584e-01,  1.4756e-01,  1.7456e-01,
         -2.0241e-02,  2.1671e-02, -1.4802e-01, -1.7375e-02,  1.7678e-02,
         -1.0405e-01, -6.1724e-02,  1.6702e-01,  1.3210e+00, -1.2443e+00,
         -1.1434e+00, -2.2841e-01, -1.9744e-01, -3.2430e-03, -1.1549e-02,
          1.0989e+00, -6.5954e-02,  1.0266e+00, -1.0118e+00,  1.6870e+00,
         -6.7855e-01, -5.0716e-01, -2.0224e-01,  1.0693e+00, -4.0858e-01,
          3.6650e-01,  7.3956e-01]], device='cuda:0') tensor(1.1904, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
571000 特征值优化 tensor(14.8109, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3596, -0.3943,  0.1591,  1.3913,  0.4461,  1.4465,  0.1479, -0.8818,
         -0.0851,  1.0894,  0.4916,  1.7356, -1.1354, -0.9502,  0.9159, -0.2030,
         -0.1718, -0.4063,  1.1299,  0.4219,  0.6099,  0.4486, -1.4204, -0.3124,
          0.8001, -0.3915, -0.8883,  0.7965, -0.8289,  1.1763,  0.5392, -0.1346,
         -0.2619,  0.6358, -0.2813,  0.7281,  0.6991, -0.6466, -1.2110,  1.2019,
         -1.2468,  0.2581, -0.3948, -0.4127, -0.4797, -0.5119,  0.5285, -0.6705,
          1.3398, -0.2781, -0.9034,  0.1582,  0.5751,  0.6565, -1.1968,  1.5782,
          0.3199,  1.8164, -0.4126,  0.4459,  0.3662,  0.8997,  0.8293, -0.9634,
         -0.9213, -1.3675, -0.5296, -0.2435, -0.0933,  0.8152,  0.1555,  0.9808]],
       device='cuda:0') tensor(8.1146, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
572000 特征值优化 tensor(2.4468, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.5801e-01, -1.0442e+00,  9.7586e-01,  1.5342e+00, -1.1062e-01,
          2.1933e+00,  8.0144e-01, -1.0867e+00,  9.0553e-01,  2.5973e-01,
          1.2778e+00,  2.0365e+00, -4.4333e-01, -9.3523e-02,  1.1532e-01,
         -1.6098e-01, -7.7596e-02, -9.3869e-02,  1.6625e-01, -8.7209e-02,
          4.1843e-01,  4.9441e-01, -4.4726e-01, -2.5412e-01,  1.5735e-01,
         -1.8017e-01, -1.3383e-01,  7.5678e-02, -1.4829e-01,  5.0898e-01,
          2.8888e-02, -5.0820e-02, -8.0704e-03,  8.4537e-01, -1.0715e-01,
          4.2316e-02,  3.2958e-01, -7.1878e-02, -2.7130e-01,  4.1757e-01,
         -6.0318e-01, -3.3309e-01,  1.2589e-01,  2.1214e-01,  1.7896e-01,
         -4.4568e-01, -3.0761e-02, -6.4385e-02,  8.8138e-01, -2.0555e-01,
         -3.9195e-01,  4.3547e-01, -2.7779e-01,  2.2191e-01, -3.5299e-01,
          5.8023e-01,  1.3828e-01,  1.0817e+00, -4.3824e-01,  4.7551e-01,
          1.7360e-01,  4.2498e-01,  1.4817e-01, -3.4294e-01, -1.6107e-03,
         -4.0209e-01, -8.1769e-01, -3.8559e-01,  4.3887e-01,  8.8214e-01,
         -5.7283e-01,  3.3981e-01]], device='cuda:0') tensor(0.9849, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
573000 特征值优化 tensor(2.1489, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9106, -0.8189,  1.1461,  1.1185,  0.2391,  2.0371,  0.7120, -0.9307,
          0.9208,  0.0606,  1.3258,  1.9525, -0.3403, -0.0214,  0.0685, -0.2318,
         -0.1830, -0.1369,  0.2383, -0.1160,  0.3218,  0.4551, -0.1775, -0.1366,
          0.0739, -0.1211, -0.2094, -0.2462, -0.0800,  0.4731,  0.0289, -0.0157,
          0.0314,  0.8312, -0.2298,  0.0411,  0.0487,  0.0576, -0.1929,  0.3179,
         -0.5122, -0.3244, -0.1180,  0.2910,  0.1915,  0.0285, -0.1811, -0.2328,
          0.6382,  0.1003, -0.2424,  0.3435, -0.2634,  0.2150, -0.4247,  0.6962,
          0.5476,  0.9610, -0.4404,  0.2840, -0.1900,  0.2657, -0.0132, -0.2579,
         -0.0134, -0.2859, -0.4565, -0.2008,  0.2918,  0.8744, -0.6306,  0.3744]],
       device='cuda:0') tensor(0.9378, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
574000 特征值优化 tensor(14.9701, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2961,  0.2370, -1.8411, -1.3684,  0.6847, -2.3425,  1.8099, -0.0911,
          2.1557, -0.6272, -1.5075,  0.3628,  0.2037,  0.5119,  0.6134,  1.2069,
          0.6537,  0.0312,  0.3781,  0.8673,  0.1845,  1.1691,  0.7987, -1.2529,
          0.8340,  0.0762, -0.6204,  0.8590,  0.7426,  0.0454, -0.2479, -0.3829,
          0.3577, -0.0361,  1.9142, -1.2088,  0.8807, -0.6322,  0.4812, -0.7908,
         -0.5131,  1.5397,  1.8628,  0.7426,  1.2056,  0.2158, -0.5401,  0.2195,
          0.8523, -0.3184,  1.4058,  0.2855, -0.2765,  0.4009,  0.5780,  0.6153,
         -1.7080, -0.4938, -0.0853,  0.7301, -0.5046,  1.8375, -0.7875,  0.2390,
          0.1759, -0.7292,  0.2021, -0.7755, -0.7575,  0.1356,  0.5513, -0.0219]],
       device='cuda:0') tensor(7.7696, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
575000 特征值优化 tensor(3.6078, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9024e-01, -4.6641e-02, -7.6242e-01, -8.4585e-02,  4.2344e-01,
         -1.1833e+00,  2.2071e+00,  9.1670e-02,  3.0494e+00,  6.2906e-02,
         -9.2424e-01,  1.2625e+00, -4.5902e-01,  1.0735e-02,  2.2975e-02,
          3.6122e-01,  1.1733e-01, -7.2171e-03,  1.0688e-01,  1.0240e-01,
          6.1853e-02,  4.5532e-01,  1.8258e-02, -2.4261e-01,  4.7205e-02,
         -2.2769e-02, -1.3333e-01,  5.1541e-02,  1.9442e-01,  6.0373e-02,
         -2.4021e-02, -5.4076e-03,  7.0218e-02,  8.5838e-02,  9.1932e-01,
         -4.2618e-01,  2.7408e-01, -1.3328e-01,  1.3432e-02, -1.5603e-01,
         -1.5554e-01,  7.2676e-01,  1.0900e+00,  5.8633e-02,  5.1198e-01,
          6.0166e-02, -2.9525e-01,  7.5276e-01,  3.7401e-01, -4.9948e-01,
          8.2529e-01,  1.0450e-01, -3.6479e-01,  1.8195e-01,  7.2012e-04,
          5.7099e-04, -5.2951e-01, -4.3119e-01,  4.3781e-02,  1.9782e-01,
         -1.1430e+00,  9.8468e-01, -3.1632e-01,  2.3633e-02,  1.0642e+00,
         -1.4597e+00,  1.2964e+00, -1.0608e+00, -2.4261e-01, -4.7338e-02,
          1.1020e+00,  1.8783e-01]], device='cuda:0') tensor(2.6227, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
576000 特征值优化 tensor(2.1390, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.8944e-01, -5.9472e-02, -6.3249e-01,  1.5119e-01, -7.8693e-02,
         -8.5025e-01,  2.0405e+00,  1.3706e-01,  3.1735e+00,  5.1500e-01,
         -5.2803e-01,  1.4981e+00, -3.2113e-01, -7.5440e-03,  2.4885e-02,
          2.5868e-01, -1.5945e-01,  4.6296e-02,  7.7053e-02, -8.5591e-03,
          1.7961e-01,  1.8151e-01, -4.3065e-02, -1.0665e-01, -9.6234e-02,
          2.4311e-01, -1.4482e-02, -3.4133e-02,  8.8109e-02, -6.3272e-02,
         -2.2858e-02, -1.3450e-02, -2.6120e-02,  8.8354e-02,  6.1536e-01,
         -3.5498e-01,  3.8699e-02, -2.4438e-02, -9.3360e-02,  6.4690e-02,
         -1.5321e-01,  3.7297e-01,  5.9526e-01,  3.9694e-03,  3.9617e-01,
          7.3682e-03, -3.6432e-01,  1.5261e-01,  1.0285e-01,  9.4655e-03,
          3.7307e-01,  8.5186e-02, -2.5142e-01,  1.4959e-01,  2.0423e-02,
         -4.1275e-02, -1.8815e-01, -3.3642e-01,  5.4734e-01,  6.7399e-01,
         -1.2010e+00,  2.0646e-01, -1.6420e-01,  2.4935e-03,  1.2587e+00,
         -1.3011e+00,  1.8223e+00, -9.4142e-01, -7.9352e-02, -8.4716e-02,
          8.4919e-01, -4.7745e-02]], device='cuda:0') tensor(1.6095, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
577000 特征值优化 tensor(10.2860, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5219, -0.9707, -0.1483, -1.4566, -0.2250, -0.9334, -0.1634,  1.6486,
          0.9932, -0.0712,  0.7572,  1.1852, -0.9068, -0.1490, -0.3248, -0.5871,
         -0.4477, -0.1033, -0.1030, -0.0063,  0.4470, -0.9349,  0.8341,  0.3493,
         -0.2481,  0.1589, -0.5376,  0.3271,  0.7430,  0.0663,  0.3621,  0.2547,
         -0.2880, -0.3843, -1.5448, -1.4426,  0.3439, -0.3168, -0.1373,  0.6799,
          0.2803,  0.0203,  0.2393,  2.9502, -0.0325,  0.6911, -0.8801,  0.9590,
         -0.4015, -0.3949,  0.2290, -0.4601,  1.6258, -0.1885, -1.3803,  0.2555,
         -0.9577,  0.2663,  0.1304, -0.3757, -0.0707, -0.1690, -0.2647, -0.0164,
          1.6217, -0.7840, -1.5643,  1.1128, -0.3037, -0.0724, -0.9205, -1.1156]],
       device='cuda:0') tensor(5.1582, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
578000 特征值优化 tensor(2.4255, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2088e+00, -1.6763e+00,  4.6507e-01, -1.4768e+00, -4.7896e-01,
          1.1175e-02, -8.5633e-02,  1.0086e+00,  1.7968e+00, -7.7510e-01,
          3.3982e-01,  1.9657e+00, -3.3068e-01, -2.5471e-02,  5.3389e-03,
         -2.0342e-01, -2.4560e-01,  2.3904e-01, -1.6099e-01, -6.4923e-03,
          5.1871e-01, -4.1177e-01,  1.0650e-01,  2.5097e-02,  4.1187e-02,
          1.9031e-01, -2.1155e-01,  2.3978e-01,  3.6869e-01,  2.7676e-01,
         -2.0494e-02,  7.4857e-02, -7.2673e-02, -3.4425e-02, -8.1126e-01,
         -6.5383e-01,  2.1553e-01, -1.1488e-02,  2.6871e-01,  7.7185e-02,
         -2.7435e-04,  4.7212e-02,  1.1331e-01,  2.1126e+00, -5.0973e-01,
          2.0450e-01, -4.2564e-01,  8.3370e-01, -1.5420e-01, -1.5139e-01,
          2.8290e-01, -5.3218e-01,  6.7194e-01, -2.7990e-01, -3.7268e-01,
         -9.2570e-02,  9.5521e-02, -2.1879e-01,  7.4663e-02, -1.2236e-01,
         -6.9617e-01,  8.7957e-05, -4.1235e-01,  7.5094e-02,  2.4760e+00,
         -1.2806e+00, -1.6866e+00,  1.4883e+00, -5.8404e-01,  1.6223e-01,
         -8.1618e-02, -9.8159e-01]], device='cuda:0') tensor(0.8517, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
579000 特征值优化 tensor(2.0858, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3458e+00, -1.9253e+00,  6.5876e-01, -1.2363e+00, -7.4325e-02,
          8.9831e-02, -3.3475e-02,  6.1625e-01,  1.8063e+00, -1.1846e+00,
          3.1516e-01,  1.9220e+00, -2.4943e-01,  2.5244e-02,  6.8767e-02,
         -1.5238e-01, -3.3477e-01,  2.4911e-01, -1.5720e-01, -3.0280e-03,
          4.3028e-01, -3.3481e-01,  1.4810e-02,  4.3947e-02,  1.1651e-01,
          1.7279e-01, -2.0587e-01,  2.3527e-01,  2.5519e-01,  1.8307e-01,
         -2.3593e-02, -3.7752e-02,  4.8347e-04, -2.1700e-02, -7.2229e-01,
         -5.8330e-01,  2.2496e-01,  1.4987e-02,  2.8825e-01, -1.2343e-02,
         -8.3439e-03, -5.4208e-02,  9.4486e-02,  1.7773e+00, -4.4723e-01,
          3.2531e-01, -3.1088e-01,  4.2418e-01, -2.4400e-02, -2.0491e-02,
         -2.3602e-01, -2.0444e-01,  8.2271e-02, -2.0003e-02, -8.0295e-02,
          7.6175e-02,  1.9516e-01, -1.2650e-01,  3.9546e-01, -7.8574e-02,
         -8.2994e-01,  7.0942e-02, -2.6461e-01,  4.6253e-02,  2.4772e+00,
         -1.4108e+00, -1.5377e+00,  1.4087e+00, -4.1783e-01,  1.6919e-01,
          6.9519e-02, -9.1760e-01]], device='cuda:0') tensor(0.7484, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
580000 特征值优化 tensor(7.9972, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8493, -0.7291,  1.1003, -1.4543,  1.4070,  0.2802, -0.0080,  0.5510,
          1.3537,  0.0092,  2.5636,  0.4929,  1.0541,  0.7464,  2.0041,  1.5685,
          0.6629, -0.0493,  0.4218,  0.5964, -0.3076,  0.2943,  0.3396, -0.0415,
          0.4772, -0.0251, -0.0048, -0.0162, -0.5657, -0.9493,  0.7609, -1.2500,
         -0.2538, -0.1002, -0.3288, -0.2970, -0.0364,  0.1429, -0.0671,  0.0897,
         -1.0623, -0.0371,  1.2191,  1.0263,  0.3241, -0.4469, -0.3170,  0.4895,
         -0.5803,  0.1435, -0.2204,  0.7097, -0.3869, -1.0582, -0.0396,  0.2186,
         -0.1442,  0.0585,  1.6911,  0.5085,  0.1900, -0.8848, -0.3800, -0.6393,
         -0.6778,  0.5570,  0.4281, -0.1241,  0.7175,  1.3250, -0.8562,  0.5977]],
       device='cuda:0') tensor(4.1981, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
581000 特征值优化 tensor(2.4729, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6645e+00, -1.3352e+00,  1.3410e+00, -1.2679e+00,  1.9199e+00,
          1.5600e-01,  5.1075e-01,  3.0687e-01,  4.0944e-01, -8.0355e-02,
          2.7245e+00,  2.1943e-01,  4.0217e-01,  9.7086e-02,  9.7913e-01,
          5.6150e-01,  3.9727e-01, -3.2377e-01,  5.8948e-02,  3.1284e-01,
         -3.7194e-01,  3.5629e-01, -1.5853e-02,  2.3808e-02,  1.2611e-02,
         -3.9240e-02, -2.0384e-02,  4.0344e-02, -2.2484e-01, -4.0311e-01,
          3.0313e-01, -7.6185e-01,  7.7838e-02, -1.8045e-02, -1.0334e-03,
          3.9103e-03, -1.4520e-01,  1.0043e-01,  2.3995e-02,  4.1319e-03,
         -8.2747e-01, -2.9343e-02,  6.5497e-01,  4.9617e-01, -7.3536e-02,
         -5.5819e-01, -1.9667e-01,  2.8274e-01, -1.1602e-01, -1.1010e-01,
         -3.6148e-01,  1.5176e-01, -3.8277e-02, -7.0329e-01,  1.7644e-01,
          1.0763e-01, -7.4276e-02,  7.2054e-02,  6.8634e-01, -1.5959e-02,
          6.3549e-01, -5.6381e-01, -3.6503e-01, -2.3533e-01, -2.3889e-01,
          1.9330e-01,  8.7917e-02, -3.4751e-02, -1.0524e-01,  1.0308e+00,
         -2.7042e-01,  1.6570e-01]], device='cuda:0') tensor(1.3898, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
582000 特征值优化 tensor(2.1144, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8235e+00, -1.4676e+00,  1.3106e+00, -9.6929e-01,  1.9714e+00,
         -3.2679e-02,  5.0320e-01,  2.9732e-01,  3.4113e-01, -4.4117e-02,
          2.6293e+00,  3.8083e-01,  3.5525e-01, -1.4221e-01,  6.0170e-01,
          1.2660e-01,  1.2958e-01, -3.1804e-01,  5.0050e-02,  2.3535e-01,
         -3.7112e-01,  2.6933e-01, -2.0593e-02, -1.8182e-02,  2.9792e-02,
          5.4340e-02,  1.8088e-02,  2.5149e-02, -9.4132e-02, -2.9190e-01,
          3.3407e-01, -6.5795e-01,  5.2727e-02, -1.0540e-01, -9.9651e-03,
         -2.3585e-03, -1.1034e-01,  5.1826e-02, -2.2021e-02,  8.4952e-04,
         -7.5932e-01, -2.0219e-02,  5.8345e-01,  4.2146e-01,  9.7931e-02,
         -6.0458e-01, -2.1367e-01,  1.1434e-02,  2.5386e-01,  2.5353e-01,
         -5.9913e-02, -2.0132e-01, -1.1124e-01, -6.2753e-01, -6.8713e-01,
          7.8707e-01, -2.5836e-01,  6.7807e-02,  3.1799e-01, -9.1857e-02,
          5.4818e-01, -4.1405e-01, -4.6510e-01, -2.1928e-01, -4.4549e-01,
          2.4980e-01,  4.2974e-02, -1.2008e-02, -2.6422e-03,  9.8891e-01,
         -1.1878e-01,  6.9586e-02]], device='cuda:0') tensor(1.1523, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
583000 特征值优化 tensor(12.7434, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6665,  2.3024,  0.7032,  0.1546, -1.1723,  1.2319, -1.1470,  0.6371,
          0.3850,  1.7121,  0.1606,  2.2135, -1.1854,  0.9229,  1.2111,  0.3737,
         -0.1797,  0.0434,  0.3047,  0.2688, -0.5285, -0.3671, -0.2614, -0.3909,
         -0.9432, -0.4835,  0.6908, -1.2518,  0.2948,  0.2228,  2.0062, -0.6642,
          0.8662, -1.0377, -0.1280,  1.2718,  1.2391, -0.5434, -0.1688,  0.7546,
          0.4136, -0.5936, -0.1718,  1.1761,  1.4476, -0.0932,  0.9399,  0.8748,
         -0.3704, -0.3093, -1.7280,  1.8130, -0.5587, -1.1466, -0.0157, -0.0171,
          1.3206,  0.5487, -0.1905, -1.7086,  0.1918, -0.2244, -0.8162,  0.8102,
          0.8144,  0.3632,  0.5666, -0.2956,  0.4984, -0.4631,  0.1756,  0.2713]],
       device='cuda:0') tensor(7.2016, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
584000 特征值优化 tensor(3.0521, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3072e+00,  2.2942e+00,  9.6087e-01, -3.1809e-01, -2.2155e-01,
          1.6756e+00, -1.1688e+00,  1.0136e+00,  6.9451e-01,  1.4940e+00,
         -2.8334e-01,  2.5606e+00, -7.5452e-01,  2.5628e-01,  2.9998e-01,
         -2.0145e-02,  2.3148e-02,  6.3895e-03,  8.0930e-04,  1.9382e-04,
         -7.3280e-01, -3.2348e-02, -8.8654e-02,  1.0162e-01, -1.3299e-01,
         -1.0524e-02,  1.2101e-01, -4.3149e-01,  1.4032e-01,  1.1211e-01,
          1.0052e+00, -4.8013e-02,  1.5414e-01, -6.0634e-01, -3.8628e-01,
          8.0492e-01,  3.6193e-01, -1.8037e-01,  1.1642e-01,  2.3766e-01,
          1.0499e-01,  6.1508e-02,  1.9701e-02,  8.4907e-01,  9.8250e-01,
          2.0971e-01,  7.8653e-01,  1.4412e+00, -9.8897e-01, -9.2610e-01,
         -1.7932e+00,  1.2223e+00,  3.4884e-01, -9.9946e-02, -2.0141e-02,
         -4.3917e-02,  1.5299e+00,  2.0223e-02, -6.2868e-01, -1.3191e+00,
         -3.1654e-01, -1.4578e-01, -2.1712e-01,  3.0391e-01,  1.4404e-01,
          8.2390e-02,  3.6647e-01, -1.1992e-01,  2.0698e-02, -1.0450e-01,
          3.2375e-01, -5.4657e-01]], device='cuda:0') tensor(1.4400, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
585000 特征值优化 tensor(14.9662, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1555, -1.6201,  0.9909, -0.7208, -0.4332,  0.9920, -1.7780, -1.7407,
         -1.9297, -0.5715, -0.0542, -1.6871, -0.7022, -0.6364,  0.7250, -0.4469,
         -0.1602, -1.8419,  1.6603,  0.3448, -1.5818, -0.5257, -1.1783, -0.4086,
         -0.4265,  1.2334,  0.7668,  0.1129, -0.3861, -0.5012, -0.1178,  0.3277,
         -0.9220, -0.6270,  0.2672,  0.6229, -0.3172,  1.6674, -0.0459, -0.7957,
          1.3013,  0.6296,  1.1140,  0.6881,  0.3751,  0.8372,  0.0938,  0.5094,
         -0.9816, -1.5803,  0.5961,  0.1921,  0.6220, -0.4488, -1.4984, -0.6125,
          1.2569, -1.0810, -0.4489,  0.5819,  0.5632,  0.6967, -0.5063,  0.2676,
          0.6749, -0.7159,  0.1888, -0.4086,  0.4279, -0.9859,  2.5516, -0.5702]],
       device='cuda:0') tensor(8.2061, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
586000 特征值优化 tensor(3.5555, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.3945e-01, -1.0238e+00,  4.0366e-01, -1.0002e+00, -2.0351e-01,
          1.3986e+00, -7.7994e-01, -8.1901e-01, -6.8406e-01, -1.5531e-01,
          8.5075e-01, -7.1781e-01, -1.9102e-01, -4.5525e-02,  4.9536e-02,
          9.5263e-02, -9.0524e-02, -7.8638e-01,  6.2613e-01,  2.2791e-02,
         -7.4766e-01, -8.2418e-02, -4.5922e-01,  2.7901e-01,  1.1019e-01,
          2.3152e-01,  7.3165e-02, -1.0793e-03, -1.4466e-01, -6.7036e-02,
          4.8419e-02, -2.7524e-02, -4.0791e-01, -2.7139e-01,  9.7759e-02,
          7.7728e-01, -1.4666e-02,  7.4822e-01,  9.1525e-02, -2.4546e-01,
          3.8656e-01,  3.4261e-01,  4.8252e-01,  8.2898e-01,  4.8631e-01,
          6.8186e-01,  8.4929e-03, -1.2458e-01, -3.6419e-02, -5.9718e-01,
          2.3132e-01,  1.0382e-02,  5.1804e-01, -2.1451e-01, -7.0289e-01,
         -2.3665e-01,  9.3952e-01, -4.5298e-01, -2.0455e-01,  7.8826e-01,
          1.0904e+00,  4.3656e-01,  2.2640e-01,  7.4212e-02,  2.4790e-02,
         -2.0380e-02, -1.8758e-01,  1.1053e-01,  1.1708e+00, -7.9524e-02,
          1.9419e+00, -1.0354e+00]], device='cuda:0') tensor(2.3234, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
587000 特征值优化 tensor(2.1089, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.9196e-01, -8.7703e-01, -1.3406e-01, -3.8234e-01,  1.1709e-01,
          1.8748e+00, -5.4616e-01, -5.9551e-01, -9.8328e-02,  3.0714e-02,
          1.2086e+00, -2.8615e-01, -9.2694e-02, -1.0401e-03,  3.4187e-02,
         -1.0514e-01, -6.0912e-02, -2.9228e-01,  2.0516e-01, -6.2230e-03,
         -4.9552e-01, -8.5075e-02, -1.6571e-01,  1.7939e-01,  5.5393e-03,
          2.1463e-02, -3.4882e-02, -1.8309e-01, -4.5236e-02, -6.3193e-02,
          3.0945e-02,  8.2369e-02, -1.7374e-01, -1.4435e-01,  6.1563e-02,
          6.8824e-01,  1.2237e-01,  4.7271e-01, -2.6563e-02, -2.7690e-02,
          2.1903e-01,  2.9785e-01, -1.8216e-02,  6.8587e-01,  3.8703e-01,
          3.4313e-01, -3.4398e-02, -1.5521e-01,  7.3820e-02, -7.5291e-02,
          1.9391e-01, -1.3173e-01, -2.0279e-01,  1.7742e-01, -1.2085e-01,
         -8.3532e-01,  1.6162e-01, -1.3120e-01, -1.9376e-01,  5.4930e-01,
          4.0428e-01,  3.3835e-01,  2.1801e-01, -3.5844e-02, -2.2141e-01,
          1.3194e-01, -2.2330e-01,  1.4854e-01,  9.9193e-01, -1.5657e-01,
          1.6447e+00, -9.8307e-01]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
588000 特征值优化 tensor(15.5453, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8783, -0.3149, -0.5037, -0.0855, -0.5996, -0.1717,  1.5161,  0.5346,
          2.6401,  0.9154,  1.8812, -0.6383,  0.3469,  1.6690, -0.8535,  1.2730,
         -0.3021,  0.2394, -0.5777, -1.5381, -0.4603,  1.2164,  0.1228,  0.1290,
         -0.5273, -1.4553,  0.6571, -0.2144,  0.2628, -1.7548, -0.4739, -1.2349,
          1.1823, -0.9114, -0.5739,  0.0390,  2.2634,  0.4716, -0.3531,  0.1792,
          0.3661,  0.0934,  1.6756,  2.1513, -0.7442,  0.8660, -1.2541, -0.2688,
         -1.2384,  1.1099, -2.1382,  0.6156,  1.5668,  0.6445, -0.8787, -0.5239,
          1.0536, -1.8699,  1.3838,  0.1193,  0.6770,  0.9591,  1.3517,  0.6099,
         -0.0425,  0.2168, -1.1658, -0.4462,  0.7528, -0.9285, -0.6112,  0.5382]],
       device='cuda:0') tensor(8.3446, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
589000 特征值优化 tensor(3.0671, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8820e+00, -7.2910e-01,  4.2429e-01, -7.6691e-01,  2.2742e-01,
          1.4565e-02,  2.3341e+00,  1.2971e+00,  1.4392e+00,  8.4505e-01,
          2.3107e+00, -6.1614e-02,  1.1416e-01,  6.2018e-01, -2.2791e-01,
          2.6294e-01,  4.9537e-02,  1.7402e-02, -2.3124e-01, -5.5069e-01,
         -5.2910e-01,  5.5865e-01,  3.2781e-02,  4.4509e-03, -1.2413e-02,
         -5.1951e-01,  1.6697e-01,  9.1439e-03, -7.3608e-04, -7.6133e-01,
         -2.4554e-01, -5.7413e-01,  6.5990e-01, -1.9319e-01, -1.4775e-01,
          5.1383e-02,  1.1624e+00,  5.1340e-01,  5.4185e-03,  9.2781e-03,
          2.1944e-01, -2.9146e-02,  1.2135e+00,  1.3952e+00, -1.4590e+00,
          7.1578e-01, -4.9686e-01,  3.5786e-01, -5.5576e-01,  1.5377e+00,
         -7.7490e-01, -2.5171e-01,  1.1012e+00, -1.0260e-01, -8.0066e-01,
         -7.3739e-01,  1.5480e+00, -1.0820e+00,  1.1443e-01, -1.1013e-01,
          7.6216e-01,  3.5320e-01,  1.4661e+00, -2.1782e-01, -9.8291e-01,
          2.3581e-01, -4.9160e-01,  6.6641e-02,  8.9114e-01, -6.4106e-01,
         -2.6848e-01,  8.5904e-02]], device='cuda:0') tensor(2.0533, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
590000 特征值优化 tensor(2.2329, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0041e+00, -6.4879e-01,  5.4614e-01, -6.7821e-01,  3.7910e-01,
         -4.9313e-01,  2.2834e+00,  1.7012e+00,  9.5169e-01,  2.8395e-01,
          1.9219e+00,  2.2571e-01,  4.9386e-02,  2.5591e-01, -2.6154e-01,
         -2.1191e-02,  7.2644e-02, -1.3317e-01, -1.0792e-01, -5.8031e-01,
         -3.3303e-01,  4.7290e-01,  3.1633e-02,  1.0940e-02, -1.7524e-01,
         -1.6487e-01,  3.1730e-02, -9.2133e-02,  6.4515e-04, -5.7953e-01,
         -6.3951e-02, -5.2058e-01,  5.0627e-01, -1.5424e-01, -6.2325e-02,
         -5.8295e-03,  8.2327e-01,  5.6526e-01, -2.7043e-02,  1.1790e-03,
          3.7083e-01, -2.1702e-02,  7.3200e-01,  1.2649e+00, -1.5602e+00,
          6.7272e-01, -3.2876e-01,  6.2590e-02, -3.9784e-01,  1.2744e+00,
         -2.8401e-01, -3.9649e-01,  4.6328e-01, -1.8931e-01, -3.8613e-01,
         -3.9257e-01,  1.0949e+00, -6.6216e-01,  1.2525e-02, -8.7918e-02,
          1.0046e+00,  2.9693e-01,  1.1854e+00, -2.9324e-01, -5.6866e-01,
          3.0175e-01, -1.4566e-01,  5.6841e-02,  1.0342e+00, -5.5804e-01,
         -2.5519e-01,  1.5935e-01]], device='cuda:0') tensor(1.2900, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
591000 特征值优化 tensor(2.1039, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9991e+00, -5.7824e-01,  5.2452e-01, -7.2131e-01,  4.2332e-01,
         -4.6257e-01,  2.2152e+00,  1.8765e+00,  7.3913e-01,  2.0847e-01,
          1.7809e+00,  1.7678e-01, -4.2235e-02,  1.9096e-01, -2.5516e-01,
         -7.8176e-02,  8.0815e-02, -8.3694e-02, -1.1998e-01, -6.3530e-01,
         -2.7405e-01,  4.2848e-01,  1.4999e-02,  1.5715e-02, -2.1735e-01,
         -1.7169e-01,  7.2849e-02, -1.2412e-01, -1.2113e-02, -5.3564e-01,
         -4.2294e-02, -4.9938e-01,  4.2021e-01, -1.5441e-01, -4.8451e-02,
         -2.9971e-02,  7.3469e-01,  5.7226e-01, -4.6425e-02,  1.3708e-03,
          4.1369e-01, -2.0154e-02,  5.7857e-01,  1.1987e+00, -1.5961e+00,
          5.4477e-01, -7.5240e-02, -1.6689e-02, -3.2927e-01,  1.1969e+00,
         -2.0135e-01, -3.8879e-01,  2.3678e-01, -1.3061e-01, -4.2936e-01,
         -2.7932e-01,  5.3619e-01, -3.8163e-01,  4.5678e-02, -8.5347e-02,
          1.1117e+00,  1.8208e-01,  1.2437e+00, -2.5366e-01, -4.6002e-01,
          3.3682e-01, -9.0999e-02,  5.0917e-02,  1.0923e+00, -3.8609e-01,
         -3.0057e-01,  1.7175e-01]], device='cuda:0') tensor(1.2962, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
592000 正交保障 tensor(3.1913, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0944e+00,  3.7913e-01,  6.4899e-01, -2.9120e-02,  1.2610e+00,
          3.2004e-01,  1.8517e+00,  2.9372e-01,  1.2359e+00,  7.0432e-01,
          1.9212e+00, -5.9392e-01, -1.0471e+00,  3.6165e-03, -1.2597e-01,
          2.7988e-01, -1.0353e-01,  2.0732e-01, -1.3631e-01,  1.5054e+00,
          9.2335e-01,  7.1858e-02,  3.8437e-02,  3.9802e-02, -5.3222e-03,
         -6.2870e-01,  1.9148e-01, -2.2688e-02,  4.8523e-02,  6.0457e-03,
          5.8772e-01,  3.6858e-01, -9.0980e-01, -2.2877e-02,  4.4015e-02,
         -4.1418e-01, -1.5136e+00, -7.1713e-01,  1.1678e-01,  5.0807e-02,
         -7.8802e-01,  1.6604e-01,  2.2826e+00, -2.1725e+00, -1.1578e+00,
         -1.2528e-01, -9.0770e-01, -1.0491e-01,  1.4750e+00, -1.5913e+00,
          6.8067e-04, -2.6488e-02,  5.8642e-01, -2.1047e-01, -4.5391e-02,
         -5.1504e-03,  5.0636e-01, -4.2772e-01,  8.1489e-01, -1.5989e-03,
          4.7635e-01,  3.3698e-01,  8.4004e-01, -1.2327e-01, -9.0257e-02,
          2.8417e-01, -5.7611e-01, -1.8499e-01,  1.1807e+00, -1.5081e+00,
          1.0021e+00, -7.8385e-01]], device='cuda:0') tensor(3.1913, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
593000 特征值优化 tensor(2.4447, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7502e+00, -2.8634e-01,  3.8712e-01, -4.6103e-02,  3.6508e-01,
          1.3180e-01,  2.0029e+00,  1.0868e+00,  1.0478e+00,  6.3317e-01,
          1.8398e+00, -4.0480e-01, -4.5828e-01,  1.2986e-01, -1.5608e-02,
          5.8114e-02, -7.7582e-02,  1.0641e-01,  5.6094e-02,  1.5946e+00,
          4.5957e-01,  2.8282e-02,  7.2118e-02,  3.3881e-02, -4.1796e-02,
         -2.3365e-01,  1.4313e-01, -1.1449e-01,  4.0442e-04, -3.2315e-04,
          3.7905e-01,  2.7217e-01, -5.7790e-01, -1.9565e-02,  5.3662e-02,
         -2.2767e-01, -9.5538e-01, -5.7314e-01, -1.8532e-02, -1.6009e-02,
         -3.5563e-01,  2.3238e-01,  2.4894e+00, -1.8287e+00, -7.0328e-01,
          1.9462e-01, -6.6761e-01, -2.1967e-01,  1.0966e+00, -7.3621e-01,
          1.1350e-02,  6.7087e-04,  1.9452e-02, -5.6872e-02, -2.5359e-01,
         -4.2150e-01,  1.3178e-01, -3.4270e-02,  4.8945e-03, -3.5637e-03,
          8.2445e-01,  7.4230e-01,  1.3632e+00, -8.4339e-02, -7.0551e-01,
          2.3352e-01, -3.3907e-01, -5.4554e-02,  1.6067e+00, -7.9978e-01,
          8.0986e-01, -6.3278e-01]], device='cuda:0') tensor(1.4139, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
594000 特征值优化 tensor(2.1708, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8148e+00, -1.3149e-02,  4.1567e-01, -2.8381e-02, -1.8697e-02,
          2.2086e-01,  1.9979e+00,  1.3410e+00,  1.2159e+00,  4.2468e-01,
          1.3388e+00, -2.7455e-01, -4.0926e-01,  6.1324e-02,  7.4749e-02,
         -4.5619e-02, -1.2021e-01,  1.0761e-01, -3.0515e-02,  1.5292e+00,
          4.2621e-01,  2.0292e-02,  5.3274e-02, -4.5885e-02, -1.3540e-01,
         -1.5677e-01,  1.5093e-01, -3.6872e-02, -1.6343e-03, -2.4288e-03,
          3.0484e-01,  1.8368e-01, -2.8320e-01, -1.9520e-02,  3.8612e-02,
         -7.0727e-02, -8.8261e-01, -5.5190e-01, -1.8943e-02, -2.9129e-02,
         -3.7570e-01,  1.5900e-01,  2.2818e+00, -1.7587e+00, -6.2046e-01,
          3.4897e-01, -7.4353e-01, -2.8344e-01,  5.9685e-01, -1.8294e-01,
          9.0904e-03, -2.1003e-03, -2.9556e-01, -6.0516e-03, -6.2845e-01,
         -7.7178e-01, -1.1195e-01,  8.1934e-02, -2.6689e-02,  7.9468e-02,
          8.3346e-01,  6.4955e-01,  1.3485e+00, -1.6670e-01, -7.0350e-01,
          2.1444e-01, -2.9865e-01,  1.3660e-02,  1.5757e+00, -6.0542e-01,
          7.2986e-01, -5.0429e-01]], device='cuda:0') tensor(1.1486, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
595000 特征值优化 tensor(2.0943, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9152e+00, -3.8434e-02,  4.6050e-01,  6.4403e-02,  4.1467e-02,
          3.2673e-01,  2.0487e+00,  1.3620e+00,  1.3300e+00,  3.9489e-01,
          1.2729e+00, -3.6022e-01, -3.2853e-01,  1.1588e-01,  4.2983e-02,
         -7.6263e-02, -1.7085e-01,  5.0134e-02, -2.7015e-03,  1.4112e+00,
          4.0609e-01,  5.3466e-03,  8.0883e-02, -5.5865e-03, -1.2023e-01,
         -9.7422e-02,  8.5602e-02,  2.0099e-02, -3.3161e-02,  2.2260e-02,
          3.0521e-01,  1.0700e-01, -1.0454e-01, -2.2513e-02,  5.0525e-02,
         -8.2507e-02, -8.7486e-01, -5.4800e-01,  4.9302e-03, -2.6749e-02,
         -3.7223e-01,  1.2999e-01,  2.0595e+00, -1.7047e+00, -5.7015e-01,
          7.1515e-01, -7.0869e-01, -2.2949e-01,  2.6627e-01,  6.9420e-02,
         -2.3080e-03,  2.6773e-02, -3.8237e-01,  4.6099e-02, -6.4797e-01,
         -7.4066e-01, -2.0279e-01,  1.3011e-01, -5.2336e-02,  8.0862e-02,
          8.9671e-01,  6.1546e-01,  1.3532e+00, -1.3700e-01, -6.2629e-01,
          1.6646e-01, -2.7362e-01, -3.5175e-03,  1.6304e+00, -5.1743e-01,
          5.3867e-01, -3.0247e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
596000 特征值优化 tensor(6.8638, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.8115, -0.4743,  1.4738, -0.6412,  1.3811,  3.1544, -0.0868, -0.6319,
          0.7350, -0.4416, -0.4556,  0.2169, -0.0495,  0.9229,  0.0904,  0.1915,
         -0.1594, -0.8864, -0.0042, -0.5149, -0.0334, -0.2313,  1.0617,  0.0679,
         -0.2381, -0.4257, -0.2823, -0.0215,  0.2623, -0.1688,  0.0706, -0.6374,
         -1.5263, -0.5451, -1.0468,  0.7882,  0.8768,  0.0615, -0.0501, -0.0140,
          0.3360, -0.0195,  0.8914, -0.5290, -0.2749, -0.5531,  0.2320, -0.7270,
          0.4909,  0.6991,  0.2507,  1.3459,  1.9276,  0.0299, -1.2310, -0.8717,
          1.8289, -0.5210,  0.2188,  0.5033, -0.1790, -0.1397, -0.3840,  0.5965,
          1.4706, -1.0445,  1.7797, -1.2828,  0.2814, -1.1370,  0.2559, -0.3456]],
       device='cuda:0') tensor(4.1348, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
597000 特征值优化 tensor(2.3115, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.3259e-01,  6.0662e-02,  1.8933e+00, -2.5130e-01,  1.8645e+00,
          2.8042e+00,  2.6132e-01, -4.5763e-01,  6.1811e-01,  1.5374e-01,
          9.9973e-02,  3.6209e-01, -2.0730e-02,  1.6811e-01, -1.1570e-02,
          2.6005e-02, -2.2868e-02, -1.0354e-01,  1.2329e-03, -3.5862e-02,
         -1.1588e-03, -4.2888e-01,  4.5446e-01, -1.4799e-01, -7.6090e-02,
         -1.3724e-01,  1.9674e-02, -1.5999e-02,  7.5780e-02, -3.0156e-01,
         -2.1335e-01, -4.5372e-01, -9.5759e-01, -1.0970e-01, -8.8352e-01,
          5.6549e-01,  4.8633e-01, -5.1854e-02, -3.8967e-02, -6.0369e-02,
          2.1417e-01, -3.9869e-02, -7.7237e-02,  1.0592e-01,  8.9931e-02,
         -7.1760e-02,  2.1012e-02, -1.5322e-01,  1.1980e-01,  2.0721e-01,
          3.2630e-01,  7.8601e-01,  2.0870e+00, -5.7142e-01, -9.3271e-01,
         -6.6084e-01,  1.2489e+00, -1.1728e-01,  1.3525e+00,  1.1725e+00,
         -2.3414e-02,  9.5951e-02, -4.7735e-01,  2.7333e-01,  1.2927e+00,
         -9.3717e-01,  1.2560e+00, -8.8439e-01,  6.1615e-01, -7.2813e-01,
          6.0069e-01, -4.1959e-01]], device='cuda:0') tensor(1.0599, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
598000 特征值优化 tensor(2.1619, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2138e-01, -2.2629e-02,  1.7895e+00, -1.8957e-01,  1.9948e+00,
          2.3758e+00,  2.2335e-01, -5.5175e-01,  9.2185e-01,  3.2978e-01,
          1.2952e-01,  6.1579e-01, -2.0182e-02,  4.9639e-02,  1.7802e-02,
         -2.1809e-03, -1.4313e-02,  1.8968e-02, -1.3462e-02, -9.0955e-03,
         -2.3842e-03, -4.2586e-01,  3.0674e-01, -1.6446e-01, -1.1474e-01,
         -2.3312e-01,  8.5538e-02, -1.4752e-02,  1.4155e-01, -2.8363e-01,
         -1.2593e-01, -4.6430e-01, -8.4519e-01,  8.6564e-02, -6.7067e-01,
          4.5998e-01,  4.0286e-01, -6.9518e-02, -5.1213e-02, -8.1354e-02,
          2.3165e-01, -5.8902e-02, -1.1525e-01,  9.5642e-02,  9.3896e-02,
         -5.4643e-02,  3.7261e-02, -2.2955e-01,  2.6713e-01,  2.6946e-01,
          5.4962e-01,  6.1948e-01,  1.9295e+00, -6.3792e-01, -8.9149e-01,
         -6.3019e-01,  5.3433e-01,  1.5485e-01,  1.1617e+00,  7.9638e-01,
         -1.1949e-01,  2.7927e-02, -4.0725e-01,  2.2482e-01,  9.1427e-01,
         -7.7674e-01,  9.8333e-01, -7.9466e-01,  4.5861e-01, -5.2127e-01,
          4.6185e-01, -3.7852e-01]], device='cuda:0') tensor(1.0825, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
599000 特征值优化 tensor(2.0994, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.6646e-01, -3.9401e-02,  1.6793e+00, -1.7349e-01,  2.0185e+00,
          1.9673e+00,  1.4136e-01, -5.1222e-01,  9.8219e-01,  4.0511e-01,
          1.5576e-01,  8.4714e-01, -2.1905e-02,  2.2110e-02,  9.6524e-02,
         -8.3857e-03,  2.0788e-03, -2.9997e-03, -5.2072e-03, -1.7326e-02,
         -1.8703e-03, -3.9648e-01,  2.8752e-01, -1.9414e-01, -1.6815e-01,
         -2.3647e-01,  1.7334e-01, -8.8846e-02,  5.9894e-02, -2.4624e-01,
         -1.0566e-01, -4.7350e-01, -7.3153e-01,  2.6239e-01, -4.5213e-01,
          3.2910e-01,  3.0540e-01, -3.1720e-02, -5.1297e-02, -9.0683e-02,
          2.3929e-01, -7.2587e-02, -9.5547e-02,  8.7649e-02,  9.5825e-02,
         -6.0003e-02,  4.3320e-02, -3.0246e-01,  3.2774e-01,  3.2733e-01,
          5.7840e-01,  5.1848e-01,  1.9491e+00, -6.8068e-01, -8.2485e-01,
         -5.9162e-01,  8.8140e-02,  2.6893e-01,  8.0068e-01,  4.1808e-01,
         -2.1025e-01, -5.2116e-02, -3.5221e-01,  2.1257e-01,  8.6601e-01,
         -6.5274e-01,  8.0108e-01, -6.9571e-01,  3.2687e-01, -4.0913e-01,
          3.7094e-01, -3.9220e-01]], device='cuda:0') tensor(1.1479, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
600000 特征值优化 tensor(2.8798, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0382e+00, -8.2177e-02, -8.2419e-02, -4.9490e-01,  1.1132e+00,
          1.0433e+00, -5.9655e-01,  3.7550e-01,  1.6474e+00, -6.7317e-01,
          1.4402e+00, -6.7219e-01, -2.6517e-01, -3.4921e-01, -6.8317e-01,
          4.7704e-03,  3.2718e-02, -5.4198e-02,  7.1384e-01,  3.0488e-01,
          2.4291e-01,  1.7528e-01, -5.2541e-02,  9.9647e-02, -4.9665e-01,
         -7.8581e-02, -2.4372e-02,  4.2600e-02, -1.2501e-01, -5.7420e-02,
          1.8470e-01,  5.1089e-03,  7.3051e-02,  3.8086e-01, -7.4707e-01,
         -6.8476e-02, -1.8317e-02, -2.1019e-02, -3.3569e-02,  1.2709e-01,
         -3.9048e-03, -3.3266e-01,  4.1791e-01,  2.7440e-01, -4.2332e-01,
         -4.9270e-01, -2.2018e-01,  1.0804e-01, -9.9305e-02,  3.1480e-01,
          1.4320e-01, -2.1543e-01, -5.9594e-01,  4.4499e-01,  1.3460e-03,
         -1.1107e+00,  2.0110e+00,  8.1716e-03,  3.7098e-01, -3.8258e-01,
         -5.3153e-02,  7.7558e-02, -2.6852e-01,  1.1096e-01, -8.5181e-01,
         -8.0981e-01, -3.3363e-02, -7.9627e-02, -1.1635e+00,  2.9267e-01,
         -5.4659e-01,  2.3864e-01]], device='cuda:0') tensor(2.1588, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
601000 特征值优化 tensor(16.9137, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5559, -0.6576,  0.0843,  0.4814,  1.0223,  0.0494,  0.5250,  0.6397,
         -1.0468,  1.4830, -0.3634, -0.0395,  0.2041,  0.3931,  1.1897,  0.2550,
          1.7070, -1.0162,  1.3927,  0.7414, -0.0951, -0.3475,  1.4047,  1.1266,
         -0.9179, -0.7421, -1.1738,  0.7076,  0.5193, -0.7804, -0.0311, -1.0310,
         -0.2440, -2.2495, -0.0492,  0.9916,  2.0253, -0.6682, -0.4336,  1.6021,
          0.9978, -0.7170,  0.2922,  0.5657, -1.6865, -0.2420,  0.1340, -1.5243,
          0.8311,  1.1645,  0.1333,  1.8362, -1.4086,  0.4279, -2.1002,  1.5751,
         -0.0940, -0.4338,  1.3575, -0.4576,  0.1878,  0.7213, -1.2023, -0.8483,
          0.8354, -1.7292, -0.1176, -0.7024,  1.4264, -2.0607,  2.5407, -0.0914]],
       device='cuda:0') tensor(8.0298, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
602000 特征值优化 tensor(4.3995, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9648e+00, -1.4995e+00,  1.0087e+00,  1.2396e+00,  1.1814e+00,
          1.0190e+00,  1.4270e+00, -2.2584e-01, -3.7704e-01,  7.8815e-01,
          2.7969e-01,  7.9139e-01,  1.9849e-01, -2.0807e-01,  3.0017e-01,
          2.7198e-01,  6.7116e-01, -4.7159e-01,  4.4986e-01,  8.9112e-02,
         -1.5601e-01, -2.3003e-01,  3.6862e-01,  3.1845e-01, -1.5866e-01,
          9.4670e-02, -1.7930e-01, -5.6958e-02, -9.0336e-05, -2.6264e-01,
          8.1031e-02, -1.7656e-01, -1.9852e-01, -1.3058e+00, -3.0714e-01,
          3.8417e-01,  1.2623e+00, -4.4870e-01, -2.0200e-01,  6.7504e-01,
          4.0787e-01, -2.1469e-01, -6.0401e-02,  6.2659e-01, -9.2067e-01,
         -1.7355e-01,  2.3719e-01, -4.4758e-01,  3.5112e-01,  6.4152e-01,
         -2.8385e-01,  7.8010e-01, -8.6262e-01,  4.5877e-01, -1.1523e+00,
          7.3056e-01,  7.7752e-01,  4.2286e-01,  5.0655e-01,  7.0286e-01,
          3.6666e-01,  8.3064e-01, -1.2585e+00, -2.2793e-01,  1.4519e+00,
         -7.5354e-01,  9.2480e-01, -5.4918e-01,  1.8954e+00, -1.4250e+00,
          1.8622e+00, -1.4297e-01]], device='cuda:0') tensor(2.6414, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
603000 特征值优化 tensor(2.1947, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3516e+00, -1.4045e+00,  1.1845e+00,  1.2452e+00,  1.9110e-01,
          1.4518e+00,  1.6485e+00, -5.4104e-01,  1.5753e-01,  1.0779e+00,
          2.2490e-01,  1.0795e+00,  1.2844e-01, -6.1962e-02,  7.8158e-02,
          2.7615e-01,  3.8552e-01, -2.3989e-01,  2.9833e-01, -4.3424e-03,
         -1.4928e-01, -2.7709e-01,  5.9283e-02,  6.3960e-02, -1.1324e-01,
          1.0995e-01, -2.3338e-01, -2.1261e-01, -8.1638e-03, -2.5913e-01,
          2.6723e-02, -4.8409e-03,  1.3676e-03, -9.4809e-01, -2.0209e-01,
          3.0823e-01,  9.5051e-01, -4.4866e-01,  1.5182e-02,  2.5503e-01,
          4.2414e-01,  2.2345e-01, -6.2334e-01,  7.2357e-01, -1.0728e-01,
          4.1368e-01, -1.6899e-01, -3.2871e-01,  4.3493e-01,  4.2814e-01,
         -2.5808e-01,  3.6253e-01, -3.6537e-01,  2.5874e-01, -7.5030e-01,
          3.7569e-01,  8.2205e-01,  6.0008e-01,  6.7407e-01,  8.4051e-01,
          2.4152e-01,  6.3412e-01, -1.5092e+00,  7.3629e-02,  1.1372e+00,
         -5.3916e-01,  1.1971e+00, -3.7690e-01,  1.8722e+00, -9.1802e-01,
          1.3616e+00, -4.5649e-01]], device='cuda:0') tensor(0.9424, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
604000 特征值优化 tensor(17.4973, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7900,  0.3885, -0.8430, -0.3208,  1.4586,  0.8180,  0.5903,  0.4119,
          0.1614,  0.2739,  0.1988, -0.9308, -0.0800,  0.2880,  0.5529, -0.0519,
          0.7203,  0.7080, -0.7548, -1.4249,  1.4446, -1.4294,  0.5222,  1.5714,
          0.6895,  0.2543, -0.8566,  0.3180,  1.4965,  0.8189,  0.6548, -0.5138,
          0.9839, -0.3392, -0.3013,  0.3927,  0.4788, -0.8693,  1.0054, -0.7336,
          0.1618,  1.3032, -0.6466,  1.0515,  0.1374, -0.7796,  1.0769,  0.5191,
         -0.3719,  1.6294, -0.7317, -1.0229, -0.8963,  0.0403,  2.1995,  0.4990,
          0.1116,  1.3850, -0.5780,  0.0528,  0.5065,  0.8518,  0.6248, -0.5612,
          0.8449, -0.7320,  1.1072, -0.6176, -1.6811, -0.3457, -1.3641, -0.7576]],
       device='cuda:0') tensor(9.6811, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
605000 特征值优化 tensor(2.6966, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6806,  1.2466,  0.1065, -1.0441,  1.5098,  1.2011,  1.1079, -0.0848,
         -0.2607, -0.4823,  0.9597, -0.0997,  0.2001,  0.0849,  0.4370,  0.0461,
          0.0614,  0.5768, -0.2027, -0.4583,  0.5593, -0.4862, -0.1560,  0.5443,
          0.0162, -0.0582, -0.1124, -0.0117,  0.6107,  0.4406, -0.0033, -0.2003,
          0.3224, -0.1014,  0.0049,  0.0198,  0.4222, -0.1775,  0.0507, -0.1283,
          0.1735,  0.3905,  0.2642,  0.5441, -0.1235, -0.0598,  0.4033,  1.3899,
         -1.0527,  0.7448, -0.1338, -0.3265, -0.3987, -0.1637,  0.9607, -0.2710,
         -0.7095,  0.4502, -0.0523,  0.0378,  0.0069,  0.4429,  0.3963, -0.2162,
          0.0018,  0.0830,  0.2864, -0.1521, -0.7875, -0.2599, -0.4723,  0.1112]],
       device='cuda:0') tensor(1.2185, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
606000 特征值优化 tensor(2.1483, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7529e+00,  1.3160e+00,  3.1077e-01, -8.6855e-01,  1.1809e+00,
          6.4277e-01,  5.5907e-01, -1.9162e-03,  2.3161e-01, -2.2469e-01,
          9.8361e-01, -1.8256e-01,  1.9046e-01, -1.5022e-01,  2.7431e-01,
         -1.0780e-01,  8.8743e-02,  3.8647e-01,  3.1394e-01, -3.4204e-01,
          4.7741e-01, -3.7055e-01, -1.2267e-01,  9.6718e-02, -5.1783e-02,
         -5.1021e-02, -3.7937e-02, -3.8097e-02,  3.5484e-01,  3.5609e-01,
         -1.8171e-02, -1.0896e-01,  1.7957e-01,  2.5475e-02,  8.6912e-03,
          7.4899e-03,  1.3867e-01, -9.3492e-02, -1.4999e-02,  1.5245e-02,
          1.7608e-02,  2.6233e-01,  2.9004e-01,  6.1092e-01, -2.6236e-01,
          1.8743e-02,  3.5343e-01,  1.1475e+00, -7.1675e-01,  6.3307e-01,
         -3.6207e-01, -1.2725e-01, -3.0721e-01, -5.6838e-02,  7.0956e-01,
         -1.6576e-01, -3.1744e-01,  1.9203e-01,  1.0673e-02, -4.8046e-04,
         -1.8974e-01,  1.9558e-01,  3.1580e-01, -9.8383e-02, -1.0008e-01,
          7.5862e-02,  1.4799e-01, -1.0777e-01, -5.3714e-01,  6.9535e-02,
         -4.6738e-01,  8.4937e-02]], device='cuda:0') tensor(1.2104, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
607000 特征值优化 tensor(14.4625, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3417, -1.3959,  1.8983, -0.4656, -0.3101, -0.6871,  0.3621, -0.5099,
         -0.4501,  0.1649,  1.9778, -1.5929, -0.7542, -0.4397, -0.5653, -0.5589,
          0.9254, -0.6220,  1.5904, -1.7155,  0.0704, -0.4589,  0.6353,  1.7992,
         -0.3472,  0.5147, -0.1496, -0.3966, -0.8818, -1.2576, -0.5083,  0.1860,
          1.4285,  0.4285, -0.7102,  0.0254,  0.4188,  0.2483, -1.4526, -0.0680,
         -0.5349,  1.3039,  0.7778,  0.9085, -2.2103,  0.1699,  0.1232,  1.8383,
          0.0030, -1.4931,  0.5698, -0.8106,  1.9891, -0.2926,  0.9729,  0.9014,
         -0.2228,  0.1051, -0.4970,  0.0647,  0.4556,  0.5647,  1.7617,  0.1897,
         -0.2613, -0.4673,  0.0072, -0.0126,  0.6468,  1.1951,  0.0946, -1.8988]],
       device='cuda:0') tensor(7.4813, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
608000 特征值优化 tensor(3.3422, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.8151e-01, -8.5603e-01,  2.5272e+00,  2.8173e-01,  1.7695e-01,
         -2.5099e-01,  6.3944e-01, -1.5272e-01,  2.1389e-01,  8.8344e-02,
          2.7143e+00, -1.3596e+00, -7.6457e-03,  6.6910e-02,  2.3681e-02,
         -1.2025e-01,  9.0088e-02, -1.9699e-01,  5.9201e-01, -8.5985e-01,
          5.0070e-03, -1.1030e-01,  1.3969e-01,  5.4582e-01, -5.4166e-02,
         -7.6955e-04, -2.7808e-02,  3.2752e-02, -8.7685e-01, -6.0049e-01,
         -3.5696e-02, -3.0601e-01,  7.7790e-01,  1.0942e-01, -7.2860e-02,
          3.2938e-02,  8.1494e-02,  1.3013e-01, -5.9453e-01, -1.1967e-02,
         -3.2046e-01,  3.2989e-01,  8.9533e-01,  4.5074e-01, -1.8515e+00,
          2.6368e-01,  8.8962e-02,  1.3946e+00,  5.4296e-01, -1.4302e+00,
          8.7917e-01, -6.0987e-01,  1.7304e+00, -9.2525e-01,  4.7899e-01,
          1.0984e+00,  3.2110e-02, -3.8081e-02,  1.0143e-03, -4.4430e-03,
         -7.9749e-02,  1.5311e-01,  1.0144e+00, -2.0710e-01,  3.3669e-01,
          3.3583e-01,  1.3187e-02, -2.7348e-02,  1.0357e+00,  4.6493e-01,
          5.8812e-01, -7.0636e-01]], device='cuda:0') tensor(2.0250, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
609000 特征值优化 tensor(2.1787, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.6435e-01, -5.1731e-01,  2.3619e+00,  7.0220e-01,  4.3442e-01,
          4.4990e-01,  1.1096e-01,  2.8859e-01,  1.2171e-02,  1.8252e-01,
          2.7985e+00, -1.2106e+00,  1.3741e-01,  1.0873e-01, -9.3692e-02,
          5.0892e-02, -2.4113e-02, -1.0241e-01,  2.8174e-01, -5.8483e-01,
         -8.5640e-02, -1.9957e-01,  5.6491e-02,  5.1293e-02,  6.7831e-02,
         -1.1209e-01, -6.5112e-02, -6.1569e-02, -7.4714e-01, -4.2647e-01,
         -4.1722e-03, -2.0247e-01,  7.0979e-01,  2.6008e-02,  1.8250e-03,
          1.5736e-03, -3.2362e-02, -6.4943e-02, -3.3846e-01, -3.8077e-02,
         -3.6699e-01,  1.6210e-01,  1.9757e-01,  4.9998e-01, -1.4083e+00,
          3.8415e-01,  2.2523e-01,  1.0436e+00,  4.8918e-01, -1.4141e+00,
          8.6525e-01, -5.1590e-01,  1.3397e+00, -7.2353e-01,  3.6227e-01,
          8.5280e-01, -2.2953e-01,  1.9188e-01, -5.0413e-02,  1.0571e-01,
          1.4922e-01,  8.7985e-02,  7.0407e-01, -4.2217e-02,  1.0956e-01,
          3.9856e-01, -2.1623e-01, -1.2000e-01,  8.9945e-01,  4.0643e-01,
          1.0974e-01, -2.4556e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
610000 特征值优化 tensor(2.1070, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.1928e-01, -2.7645e-01,  2.1650e+00,  1.0722e+00,  5.4585e-01,
          4.7328e-01,  1.7133e-01,  3.4121e-01, -7.8726e-02,  1.5948e-01,
          2.8390e+00, -1.1818e+00,  1.5467e-01,  1.8927e-02, -1.0329e-01,
          7.3112e-02, -9.3114e-03, -6.9346e-03,  2.3939e-01, -3.7793e-01,
         -5.9856e-02, -2.0472e-01, -6.5405e-02,  1.3000e-02,  3.2034e-02,
         -3.9139e-02, -5.3809e-02, -6.9039e-02, -6.4078e-01, -3.3946e-01,
         -5.8061e-03, -1.6747e-01,  6.6543e-01,  2.5880e-02,  6.0392e-03,
          1.5391e-02, -2.2358e-02, -3.7663e-02, -1.9753e-01, -1.8195e-03,
         -2.6756e-01,  1.3821e-01, -1.4184e-01,  4.7910e-01, -8.9448e-01,
          4.5599e-01,  1.6426e-01,  9.3832e-01,  2.3936e-01, -1.2543e+00,
          7.6147e-01, -5.3783e-01,  9.7851e-01, -5.6048e-01,  1.2983e-01,
          8.0370e-01, -2.0727e-01,  1.8494e-01,  1.0213e-01,  1.5826e-01,
          1.4698e-01,  1.1283e-01,  6.7575e-01, -7.3488e-03,  1.0774e-01,
          3.3270e-01, -1.7604e-01, -1.3527e-01,  8.2163e-01,  3.2150e-01,
          2.1187e-02, -2.1878e-01]], device='cuda:0') tensor(1.1718, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
611000 特征值优化 tensor(13.7145, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9450, -0.7834,  1.8555,  0.6806, -0.2136,  1.3550,  2.4065, -1.0106,
          0.8422,  0.5826,  0.3295,  0.0962, -1.4448, -0.2897,  1.0297, -0.2342,
         -0.7840,  0.3246, -0.4313,  2.0578,  1.2619,  1.6437,  1.3678,  1.2731,
          0.2095, -0.1642,  0.0505,  0.0926,  0.3140, -0.0775,  0.0050,  0.2374,
          1.2457, -0.9309,  0.3645,  1.1454, -0.9694,  0.7649,  0.7056,  1.7310,
         -0.3802, -0.1271,  1.6174, -0.5022, -1.2409, -0.9062,  1.0345,  1.1241,
          0.4244,  1.0988,  1.1250,  0.2984,  1.5353, -0.4255, -0.0688, -0.0844,
          0.6275,  0.8671,  0.7287,  0.0448,  0.7251,  0.9685, -0.6233, -0.2369,
          1.9815,  0.4031, -0.0228,  1.6178, -1.1865,  0.6816, -0.3199, -1.9719]],
       device='cuda:0') tensor(7.6814, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
612000 特征值优化 tensor(3.3087, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7308e+00, -1.5841e+00,  1.7168e+00,  1.3604e+00,  4.7487e-02,
          2.1052e+00,  2.1778e+00, -1.0829e+00,  1.9717e+00,  1.4192e+00,
          1.0293e+00,  9.8521e-01, -6.4765e-01, -3.4446e-02,  1.1571e-01,
          3.8266e-02, -1.5078e-01, -1.4589e-01,  2.3168e-04,  1.2375e+00,
          6.1194e-01,  6.1421e-01,  4.4019e-01,  3.5537e-01, -7.1142e-02,
          6.2695e-03, -5.3662e-02,  1.2844e-02, -2.1244e-03,  5.8464e-01,
          8.5715e-02,  2.2009e-01,  5.0982e-01, -6.2083e-01,  3.4711e-01,
          5.7987e-01, -5.7757e-01,  2.7575e-01,  1.0841e+00,  8.1414e-01,
         -1.0275e-01,  3.2020e-01,  1.8241e+00, -4.9866e-01, -1.3506e+00,
         -1.5298e+00,  4.7012e-01,  3.1989e-01,  6.2120e-01,  7.7188e-01,
          5.0316e-01,  4.9995e-01,  1.1270e+00, -8.5188e-01, -4.2604e-04,
         -1.0236e-03,  4.7908e-01,  3.7271e-01,  1.5361e+00,  1.0358e-01,
         -1.5041e-01,  7.0007e-01, -1.5664e-01, -1.0463e-01,  1.6827e+00,
          5.4903e-01, -6.8558e-01,  1.1417e+00, -3.5754e-01,  1.4378e-01,
          5.7400e-01, -8.4516e-01]], device='cuda:0') tensor(1.9715, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
613000 特征值优化 tensor(2.3323, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8359e+00, -1.7421e+00,  1.4608e+00,  9.9017e-01, -5.5682e-01,
          1.9492e+00,  1.5993e+00, -7.9378e-01,  2.2273e+00,  1.6967e+00,
          1.0619e+00,  8.8862e-01, -5.1159e-01, -1.1837e-02,  2.8140e-02,
         -5.8043e-02, -2.3422e-01, -2.6256e-01,  6.8375e-02,  8.5526e-01,
          4.9747e-01,  4.2822e-01,  2.1263e-01,  1.7520e-01,  3.6754e-02,
          3.0413e-03, -3.4945e-02, -1.9161e-02, -1.9303e-03,  4.0998e-01,
          2.1470e-01,  5.8222e-02,  2.5888e-01, -4.3071e-01,  1.8101e-01,
          3.3209e-01, -3.3324e-01,  1.8180e-01,  8.4585e-01,  5.9262e-01,
         -8.2199e-02,  3.6510e-01,  1.6214e+00, -7.2075e-02, -1.3582e+00,
         -1.7429e+00,  5.9898e-01,  1.2727e-01,  5.8357e-01,  5.7929e-01,
          2.4083e-01,  4.5456e-01,  7.2176e-01, -6.1294e-01,  1.0272e-01,
         -8.4519e-02, -1.9353e-03,  4.1389e-01,  1.3716e+00,  4.1665e-01,
         -3.1880e-01,  4.8665e-01,  1.0640e-01, -2.1127e-01,  7.1967e-01,
          8.5763e-01, -6.3936e-01,  8.8311e-01, -1.9890e-01,  2.3267e-01,
          4.9588e-01, -5.1831e-01]], device='cuda:0') tensor(1.1633, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
614000 特征值优化 tensor(2.1002, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8767, -1.7726,  1.2829,  0.6686, -0.5491,  1.8272,  1.2911, -0.7062,
          2.0481,  1.9180,  1.0362,  0.7501, -0.5007,  0.1046, -0.0273, -0.0518,
         -0.3461, -0.3261,  0.0832,  0.7925,  0.4836,  0.2695,  0.1708,  0.1147,
          0.0242, -0.1393,  0.0032,  0.1056,  0.0164,  0.2420,  0.2288,  0.0243,
          0.0695, -0.3864, -0.0366,  0.2000, -0.2225,  0.1130,  0.8818,  0.6102,
         -0.0615,  0.2395,  1.5644, -0.1216, -1.2681, -1.7492,  0.6270, -0.0545,
          0.4180,  0.4169,  0.0741,  0.2857,  0.0425, -0.2485, -0.0518, -0.0838,
         -0.0664,  0.4298,  1.0989,  0.7129, -0.3898,  0.4256,  0.1653, -0.1983,
          0.1405,  0.9327, -0.1899,  0.3385, -0.2436,  0.2364,  0.4142, -0.3394]],
       device='cuda:0') tensor(1.2771, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
615000 特征值优化 tensor(12.1729, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1260, -0.3981,  0.7793,  0.4382,  2.3094, -0.3139, -0.1340,  0.3136,
          0.7367, -0.5011,  0.4836,  1.1498, -0.9703, -0.1122, -0.1553, -1.3981,
          0.9711,  0.4092, -0.1468,  0.5799, -0.8295, -0.4143,  0.9221,  0.0934,
         -0.8774, -0.1998, -1.4736,  0.0676,  0.0299,  0.4540,  0.6441,  1.1668,
          0.6508,  0.8359, -0.8003, -0.5072,  1.6468, -0.0050,  0.1091,  0.0309,
         -1.8251, -0.0507,  0.3889, -0.5253, -0.6045, -0.7233,  0.1898,  0.6081,
          0.6224, -0.9575, -0.5196, -0.0757,  1.5163, -3.1390,  0.0061, -0.0045,
          0.5962,  0.4819,  0.2708,  0.3533, -0.8196,  0.7209, -0.7997, -0.4798,
         -0.7534,  0.6979, -0.7021,  0.2270, -1.6266, -0.0208, -0.4497, -1.1667]],
       device='cuda:0') tensor(6.2788, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
616000 特征值优化 tensor(2.6001, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.6772e-01,  5.3270e-01,  1.8785e-01, -2.0610e-01,  2.9417e+00,
         -3.9087e-01,  7.0730e-01,  1.4362e-01,  2.4802e-01, -4.9627e-01,
          1.4972e+00,  1.7090e+00, -2.9176e-01,  2.0221e-01,  1.5671e-01,
         -4.6657e-01,  2.3472e-01, -5.1060e-02, -9.6089e-02,  1.3396e-01,
         -2.6417e-01, -3.2519e-02,  1.6916e-01, -9.6064e-02, -1.4737e-01,
         -1.5730e-01, -5.4009e-01,  2.7413e-01,  1.9346e-02,  1.4248e-02,
          2.2153e-01,  4.9577e-01,  1.5843e-01,  1.4191e-01, -1.1788e-01,
         -9.5076e-02,  8.0029e-01,  1.5110e-02,  3.9827e-02, -2.8045e-02,
         -8.0789e-01, -2.4391e-03, -2.0393e-02,  8.0018e-02,  7.3979e-02,
          4.1917e-02,  2.9550e-02, -1.5079e-01,  7.4891e-01, -4.6468e-01,
         -2.2744e-02, -5.4431e-02,  2.2491e+00, -2.3824e+00,  5.8614e-01,
         -3.7579e-01,  1.5148e-01,  3.6634e-01, -3.2473e-02,  2.9850e-04,
          1.2110e-02,  4.5562e-01, -2.0399e-01, -4.5587e-03, -2.5633e-01,
          1.2973e-01, -3.1058e-01,  3.0380e-01, -5.7370e-01,  7.4189e-01,
          7.1271e-02, -5.4081e-01]], device='cuda:0') tensor(1.1003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
617000 特征值优化 tensor(21.4691, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3141, -0.4211,  2.1225, -1.0367,  0.5830, -1.2112,  1.2965,  0.2097,
          0.3956,  0.5646, -0.8523,  0.6481,  1.0583,  1.3591, -1.0063,  0.1551,
          1.3374,  0.6595,  0.1330, -1.0430,  0.3879,  1.0858,  1.6583, -0.0363,
          0.1376, -0.9631, -0.8763,  1.0765, -0.6424, -1.2785, -0.7292,  0.9741,
         -0.0936,  2.1059, -2.3188, -1.4840, -0.9972,  0.3384,  0.1368, -0.9005,
          1.6279, -0.5711,  0.9183, -0.6875, -0.8436, -0.4279,  1.2365, -1.5810,
         -0.7744,  0.4875, -2.2798, -0.2667,  1.4483, -0.1946, -0.8811, -0.0355,
         -0.1939,  0.7570, -0.4582,  1.0323,  2.3000, -0.2153,  0.4043, -1.2265,
          1.4571,  0.6701,  1.4111,  0.1878, -0.1864, -1.9163, -0.2114, -1.6014]],
       device='cuda:0') tensor(11.4781, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
618000 特征值优化 tensor(5.5040, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4675,  0.5431,  2.8654, -0.5659,  0.6890, -0.1791,  1.0616,  0.5396,
          1.4323, -0.4216, -0.0341,  1.1907,  0.2841,  0.4323,  0.0182, -0.1477,
          0.4972,  0.1401,  0.2707, -0.2206,  0.2006,  0.5090,  0.6390,  0.1609,
         -0.1682, -0.1979, -0.0783,  0.3474,  0.0296, -0.6542, -0.2780,  0.3516,
         -0.3938,  1.0075, -1.3024, -0.6058, -0.7896, -0.0444, -0.5115, -0.2059,
          0.6016, -0.2418,  0.8894, -0.1465, -0.1470, -0.5215,  0.5289, -0.8850,
         -0.0202,  1.1682, -1.4173, -0.3401,  0.3869,  0.0920, -0.2335, -0.0230,
          0.8665, -0.2324,  0.8537,  0.1860,  1.7431,  0.3320,  0.7434, -0.6907,
          2.0784, -0.2990,  0.3252,  0.8449,  0.6398, -1.1040,  0.1572, -0.5728]],
       device='cuda:0') tensor(3.4815, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
619000 特征值优化 tensor(2.1870, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.7083e-02,  1.7575e-01,  2.9744e+00, -4.7145e-01,  1.0893e-01,
          2.5423e-01,  1.1378e+00,  8.2168e-01,  1.8846e+00, -7.7284e-01,
          2.2636e-01,  8.0721e-01,  4.9182e-03,  3.0292e-02, -1.1295e-02,
         -1.2766e-01,  1.6736e-01, -5.9041e-02, -1.1996e-01, -2.0988e-03,
          2.1834e-02,  3.5628e-01,  1.7254e-01,  3.3719e-01, -2.1903e-01,
          9.7970e-02,  1.5321e-01,  3.1384e-01,  6.8627e-03, -5.1212e-01,
         -1.9466e-02,  2.4671e-01, -2.8064e-01,  4.2927e-01, -9.1967e-01,
         -4.3009e-01, -5.0753e-01,  4.1196e-02, -4.9276e-01, -1.7732e-02,
          2.6533e-01, -8.6182e-02, -7.8785e-02,  1.0433e-01,  1.0511e-01,
         -1.4847e-01,  8.3755e-02, -8.6236e-01,  2.7217e-02,  1.1543e+00,
         -8.0671e-01, -3.7917e-01, -7.5947e-02,  5.0141e-02,  1.9008e-02,
         -3.2287e-03,  1.0656e+00, -5.4523e-01,  1.6433e+00, -2.0855e-02,
          1.2284e+00,  2.0464e-01,  9.8163e-01, -6.2743e-01,  1.7648e+00,
         -6.3842e-01, -6.0280e-02,  5.5710e-01,  9.6458e-01, -8.0989e-01,
         -3.1991e-01, -1.1817e-01]], device='cuda:0') tensor(0.9843, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
620000 特征值优化 tensor(2.1345, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3021,  0.1456,  2.8404, -0.3919,  0.2197,  0.3035,  1.2452,  0.8927,
          1.9848, -0.9281,  0.2399,  0.5874,  0.0054, -0.0332, -0.0180, -0.1470,
          0.1921, -0.0961, -0.0747,  0.0206,  0.0212,  0.2415,  0.2570,  0.1671,
         -0.4945, -0.0529,  0.0646,  0.2873,  0.0450, -0.5144, -0.0187,  0.2562,
         -0.2734,  0.3938, -0.8337, -0.3898, -0.4563,  0.0618, -0.3899,  0.0721,
          0.2539, -0.0692, -0.1379,  0.1168,  0.1177, -0.1160,  0.0755, -0.7448,
          0.1170,  1.0927, -0.6005, -0.2770, -0.0946,  0.0648, -0.0311, -0.0537,
          0.8821, -0.5368,  1.4798,  0.0769,  1.1818,  0.1480,  0.8785, -0.6285,
          1.4625, -0.6675, -0.0680,  0.4448,  1.0245, -0.7906, -0.2581, -0.0556]],
       device='cuda:0') tensor(1.2614, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
621000 特征值优化 tensor(2.0823, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4012,  0.1019,  2.7921, -0.2393,  0.2162,  0.3240,  1.3342,  0.9217,
          2.0736, -1.0193,  0.2124,  0.4745,  0.0109, -0.0204, -0.0324, -0.2132,
          0.2457, -0.1696, -0.0765,  0.0519,  0.0158,  0.1213,  0.2871,  0.1719,
         -0.5774, -0.1599, -0.0479,  0.2503,  0.1808, -0.5687, -0.0204,  0.2081,
         -0.2436,  0.4005, -0.7505, -0.3581, -0.4275,  0.0940, -0.2578,  0.0677,
          0.2538, -0.0741, -0.2014,  0.1489,  0.1476, -0.1130,  0.0664, -0.4163,
          0.1149,  0.9598, -0.4086, -0.1929, -0.0675,  0.0565, -0.0291,  0.0157,
          0.6626, -0.4125,  1.3341, -0.0152,  1.1204,  0.2008,  0.8805, -0.6309,
          0.8606, -0.7231, -0.0152,  0.4011,  1.0524, -0.7790, -0.1194, -0.0948]],
       device='cuda:0') tensor(1.0642, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
622000 特征值优化 tensor(10.9231, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5808, -0.2129, -0.4666,  0.9745, -0.7717, -0.0149, -1.0257,  0.0619,
         -0.2796, -0.6948,  0.0931,  0.2072,  0.2053,  0.8018, -1.3998,  0.3412,
         -0.2208,  0.2004,  0.8302, -1.0844, -1.3303,  0.3816, -0.3027,  0.4314,
         -0.0364,  0.1296,  0.5302, -0.0358, -0.1157,  0.3947, -0.7998,  0.1282,
         -0.2236, -0.5320,  0.0732,  0.8357,  0.4841,  0.1639,  0.4113, -0.3877,
          0.0134, -0.1808, -0.6579,  1.1210,  0.0629,  0.1015, -0.1508,  1.3603,
          1.0638, -0.4718, -0.1746,  0.4094,  0.6118,  0.5428, -0.1137, -0.1854,
         -0.1062, -1.1633, -1.4367, -0.2993,  0.0184, -1.4954,  0.6777, -0.4492,
         -0.9655,  0.9456,  0.9990, -1.0582,  0.8993, -1.2464,  0.9322,  0.9383]],
       device='cuda:0') tensor(6.4116, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
623000 特征值优化 tensor(2.3314, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2563, -0.5009, -0.5580,  0.7377, -0.1264,  0.1956, -0.2945,  0.3010,
          0.2256, -0.8094,  0.2102,  0.7084,  0.2034,  0.1434, -0.4679,  0.0183,
          0.0225, -0.0512,  0.0840, -0.2504, -0.5297,  0.0687,  0.0702, -0.0028,
         -0.0254,  0.0198,  0.0408, -0.0363,  0.0031,  0.0421, -0.0218,  0.0485,
         -0.0795, -0.1489, -0.2010,  0.3057,  0.1658,  0.0945, -0.0439,  0.0856,
          0.0407, -0.2651,  0.0684,  0.4709, -0.1606,  0.0112, -0.1076,  0.2334,
          0.3246,  0.0251, -0.3811,  0.0904, -0.2341,  0.1191,  0.0540, -0.0137,
          0.1466, -0.4284, -0.6641, -0.1117,  0.6885, -0.7092,  0.8396, -0.7152,
         -0.2066,  0.2192,  0.5056, -0.3693,  0.9895, -0.6889,  0.2440,  0.2584]],
       device='cuda:0') tensor(0.8821, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
624000 特征值优化 tensor(2.0907, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2672, -0.6598, -0.4363,  0.6160,  0.0547,  0.2975,  0.0160,  0.1614,
          0.3285, -0.2098,  0.2506,  0.7879,  0.3346,  0.0658, -0.2852,  0.0057,
         -0.0422, -0.0295,  0.0942, -0.1804, -0.4771,  0.0171,  0.0812, -0.0447,
          0.0517,  0.0285, -0.0022, -0.0767,  0.0155,  0.0082, -0.0236,  0.0807,
         -0.1808, -0.0803, -0.1156,  0.2416,  0.0571,  0.0820,  0.0077,  0.0904,
          0.0618, -0.1874,  0.0596,  0.3878, -0.0112, -0.1092, -0.2894,  0.1087,
          0.1884,  0.1900, -0.3175, -0.0117, -0.2308,  0.1221, -0.0306, -0.0918,
          0.2082, -0.0942, -0.6885, -0.4357,  0.8508, -0.5616,  0.9946, -0.6774,
         -0.1983,  0.2132,  0.2817, -0.2098,  0.8975, -0.6275,  0.0244,  0.1405]],
       device='cuda:0') tensor(1.4654, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
625000 特征值优化 tensor(3.8052, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9952e+00, -2.9942e-01, -2.4529e-01, -9.2116e-01, -4.5298e-01,
         -1.8260e+00, -2.4916e-01,  6.9168e-01, -1.5137e+00, -1.8311e-01,
          8.0933e-01,  1.9731e+00, -3.2195e-01,  7.2829e-02, -1.4421e-01,
          1.7844e-03,  1.1941e+00, -7.1979e-01, -3.2044e-01,  3.1135e-01,
          7.3319e-01,  1.7176e-01,  5.4661e-01,  2.3690e-01,  3.2306e-01,
         -2.2159e-01,  3.6415e-01,  2.6945e-01,  1.7529e-02,  4.6296e-02,
         -2.3200e-02, -2.8765e-01,  6.2139e-01, -2.1842e-02,  2.1838e-01,
         -6.6697e-02,  3.7294e-01,  2.5388e-01, -4.0525e-01,  2.4857e-01,
         -6.5660e-02, -6.2965e-02,  1.7005e+00, -1.7713e+00,  1.1784e+00,
         -2.0390e+00,  7.9985e-01, -7.8850e-01, -8.0524e-01,  1.5989e+00,
          8.6661e-02, -2.2697e-01,  1.1554e+00, -6.3660e-01, -4.3111e-01,
         -3.9618e-01,  1.2341e+00, -3.2445e-01,  9.5370e-01, -3.2350e-01,
         -6.6484e-02, -4.5881e-02,  6.3020e-01, -3.8934e-01,  1.3750e+00,
         -1.7974e-01, -1.2566e-02, -2.3773e-01,  1.3446e+00, -5.1533e-01,
         -1.1496e+00,  4.0861e-01]], device='cuda:0') tensor(2.6739, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
626000 特征值优化 tensor(2.1425, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.2762, -0.5128,  0.1106, -0.3840, -0.1388, -1.2387,  0.0473,  1.0381,
         -1.1324, -0.1555,  1.0287,  1.9102, -0.4136, -0.0895, -0.0804,  0.0091,
          0.5409, -0.3798, -0.0320,  0.7196,  0.5521,  0.1105,  0.0671, -0.0087,
         -0.0061, -0.0382,  0.2230, -0.2181,  0.0224, -0.0050, -0.0201, -0.2718,
          0.3721, -0.0139,  0.0742, -0.0712,  0.2641,  0.1079, -0.1859,  0.0965,
          0.0887, -0.1482,  1.5888, -1.5299,  0.4525, -2.0585,  0.6370, -0.3582,
         -0.5333,  1.0258, -0.0368, -0.0516,  0.2460, -0.1063, -0.3585, -0.3818,
          0.4821,  0.0724, -0.0025,  0.0155, -0.1822, -0.2220,  0.6084, -0.4215,
          0.7832, -0.3070,  0.0920, -0.1010,  1.1165, -0.5989, -1.1479,  0.3201]],
       device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
627000 特征值优化 tensor(10.8422, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5376,  1.0757,  0.1820,  1.1506,  0.4421, -0.8775,  0.7726, -0.2396,
          0.7201, -0.8799,  1.3160, -0.7716, -0.2523,  0.0040, -0.2289,  0.5690,
         -0.1697,  2.2925,  0.1399,  0.0378,  0.0101,  0.2763, -0.3539,  0.0750,
         -0.3524,  0.1221, -0.4430, -0.2120,  0.3301,  1.6954,  0.0626,  0.5947,
          0.3830, -0.1947,  1.0891, -0.8191, -0.9099,  0.0622, -0.3948, -0.4901,
          0.3300, -0.4104,  0.2711,  0.5123, -0.9630, -0.7343,  0.8208, -0.7883,
          0.1809, -0.3425,  0.3087,  0.4405,  0.8297, -0.5310, -0.7017,  0.3445,
         -0.8216, -0.2198,  0.3364,  0.1812,  1.7795,  0.0559, -0.8909,  0.5107,
          0.7765, -1.7039,  0.9908, -1.4988, -1.4933, -0.9736,  0.3395, -1.1255]],
       device='cuda:0') tensor(5.6303, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
628000 特征值优化 tensor(2.5113, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.6675e-01,  1.3505e+00,  1.0356e+00,  1.7928e+00, -1.5792e-01,
         -1.4951e-01,  1.0159e+00, -1.8938e-01,  1.3034e+00, -1.5989e-01,
          2.1421e+00, -2.5145e-01, -8.8224e-02,  7.5902e-02,  1.5967e-02,
          1.3562e-02,  6.1597e-02,  1.2137e+00,  5.2823e-01,  1.0905e-01,
         -6.0297e-02,  6.9808e-01, -1.8071e-01, -4.7951e-02, -2.2085e-01,
         -2.9817e-02, -8.4933e-02, -1.8147e-01,  1.1795e-03,  8.4455e-01,
          2.8232e-02,  1.7652e-01,  1.6075e-01, -4.2398e-02,  5.0711e-01,
         -2.9469e-01, -5.3353e-01, -7.4683e-03, -1.0410e-01, -7.6118e-02,
          2.1459e-01, -1.8507e-02, -1.7338e-01,  6.6156e-01, -5.2607e-01,
         -8.4057e-01,  3.8638e-01,  3.8980e-02,  9.0940e-01,  4.2643e-01,
          2.2596e-01,  6.6905e-01,  1.6629e-01,  1.3852e-02, -4.2580e-01,
          3.5981e-01, -9.7198e-02,  9.2058e-03, -1.0867e-02,  2.8584e-02,
          1.2952e+00,  8.1681e-02, -8.7471e-01,  5.0442e-01,  1.3691e+00,
         -1.1647e+00,  1.5953e+00, -9.4137e-01, -1.1406e+00, -4.4372e-01,
          7.7361e-01, -3.7143e-01]], device='cuda:0') tensor(0.8786, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
629000 特征值优化 tensor(2.0868, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1157,  1.2918,  1.1471,  1.6440, -0.1035, -0.0228,  0.8706, -0.2896,
          1.4200,  0.1091,  2.3851, -0.2528, -0.0829, -0.0177, -0.0497, -0.0664,
          0.1039,  0.8315,  0.6583, -0.0078, -0.0585,  0.6779,  0.0165, -0.0505,
         -0.2282, -0.0393, -0.0465, -0.1700,  0.0251,  0.7883,  0.0048,  0.0545,
         -0.0156, -0.0246,  0.4204, -0.2488, -0.5174, -0.0254, -0.1404, -0.1278,
          0.2670, -0.0961, -0.6068,  0.2571,  0.2040, -0.6083,  0.2007,  0.0735,
          0.8433,  0.4322,  0.2513,  0.6199, -0.0583,  0.0775, -0.6433,  0.6414,
         -0.0653,  0.0246, -0.0082,  0.0382,  1.3354,  0.1797, -0.9355,  0.4306,
          1.6331, -0.9745,  1.4684, -0.8740, -1.1101, -0.3505,  0.7637, -0.4366]],
       device='cuda:0') tensor(1.5738, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
630000 特征值优化 tensor(10.8451, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.9728e-01,  6.4010e-01, -1.9382e-01, -2.3019e-01,  7.5671e-01,
          5.7852e-01,  1.3405e+00,  1.4918e-01,  2.0696e+00,  2.8037e-01,
         -1.9607e-02,  6.1270e-01, -1.2859e+00, -3.0962e-01, -2.5913e-01,
         -3.4739e-02,  3.2978e-01, -4.4563e-01,  4.9015e-02, -5.3363e-01,
         -7.6440e-01,  5.0918e-01,  1.0084e+00, -2.7721e-01,  2.6392e-01,
          4.2214e-01,  4.7254e-01, -7.5031e-01,  8.2195e-01,  1.8239e+00,
         -4.2075e-01, -1.4355e+00,  1.3393e-01, -4.5532e-01,  8.0502e-01,
          4.3085e-01,  2.8502e-01,  7.0735e-01,  9.5752e-01,  1.5908e-04,
          1.2574e+00, -2.7288e-01, -6.7499e-01,  8.9723e-01,  2.5078e-01,
          2.8502e-01,  1.2520e-01,  2.3608e+00, -5.5750e-01, -1.3342e+00,
          8.9064e-01,  1.0759e+00,  8.5773e-01,  3.3417e-01,  6.5279e-01,
          5.2255e-01, -5.5426e-01, -2.8076e-01,  8.9574e-03,  4.4341e-03,
          7.3453e-01, -1.0560e+00,  9.9770e-01, -3.5466e-01,  1.4577e+00,
          1.1483e+00, -6.3571e-01,  5.1615e-01,  3.5633e-01,  1.4512e-01,
          3.3673e-01, -3.0350e-01]], device='cuda:0') tensor(5.6500, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
631000 特征值优化 tensor(2.7319, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.0652e-01,  8.7380e-01,  8.1818e-01,  3.7112e-01,  1.2830e+00,
          8.0456e-01,  1.8456e+00,  5.9452e-01,  2.3958e+00,  1.6065e-01,
          1.7136e-01, -8.2943e-02, -4.3668e-01, -5.4053e-02, -9.6315e-03,
         -8.3808e-05,  1.3929e-02,  3.4448e-03, -4.2357e-02, -3.1508e-02,
         -4.0657e-01,  2.4724e-01,  1.6457e-01,  8.5873e-02, -1.0629e-02,
          3.1542e-02, -1.8093e-02, -1.1211e-02,  8.1441e-01,  9.7841e-01,
         -1.5618e-01, -9.1067e-01,  3.8974e-01, -1.2206e-02,  3.0642e-01,
          3.4396e-02,  1.3831e-01,  2.3276e-01,  1.0380e+00, -4.0383e-02,
          3.3436e-01, -2.5680e-02, -4.2315e-02,  5.6263e-01,  1.7995e-01,
          1.8769e-01,  2.1089e-01,  2.3933e+00,  1.1303e-01, -8.0298e-01,
          3.2474e-01,  1.1227e-01,  6.8838e-01, -2.3877e-01,  1.0977e+00,
          8.5309e-01, -3.2029e-01, -8.1878e-02, -2.1925e-02, -7.0958e-02,
          1.2047e+00, -1.1319e+00,  8.5593e-01, -5.8748e-01,  1.1257e+00,
          8.7658e-01, -2.7842e-01,  1.3428e-01, -9.7284e-02, -2.0998e-02,
         -2.2378e-01,  1.5222e-01]], device='cuda:0') tensor(1.1837, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
632000 特征值优化 tensor(2.1303, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7238,  0.5992,  1.1073,  0.5533,  1.2767,  0.2991,  1.9189,  0.6747,
          2.3667,  0.0803,  0.0271,  0.0954, -0.2960,  0.0684, -0.0444,  0.0406,
          0.0296, -0.0076,  0.0525, -0.0552, -0.2739,  0.3361,  0.0084, -0.0162,
          0.0462, -0.0840,  0.0204, -0.0074,  0.6771,  0.7518, -0.0178, -0.8426,
          0.3730, -0.0026,  0.0815, -0.0183,  0.0736,  0.1481,  0.8767, -0.0073,
          0.2561, -0.0219, -0.1407,  0.2637,  0.2401, -0.0321,  0.1657,  1.7466,
          0.2970, -0.9388,  0.9845, -0.0892,  0.6051, -0.3339,  1.1096,  0.9722,
         -0.2465,  0.1406,  0.0981,  0.0695,  1.2669, -1.0085,  0.7360, -0.5531,
          0.6051,  0.9310, -0.1241,  0.0401, -0.1414, -0.1040, -0.2888,  0.1822]],
       device='cuda:0') tensor(1.0212, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
633000 特征值优化 tensor(9.0783, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3008,  0.3321, -1.0638, -0.7284,  0.3679,  0.0732,  0.0227,  1.0838,
          0.3671,  0.2779,  1.3523,  0.7889,  0.2219,  0.0488,  0.0368, -0.0046,
          0.0882,  0.0841,  0.1842, -0.0099, -0.3831, -0.1405,  0.2529, -0.1593,
         -0.0804,  0.9804,  0.2725,  1.1186,  0.8466,  0.4199,  0.0642, -0.0650,
          0.0516, -0.0037,  0.6731,  0.7081,  0.7107,  0.8575, -0.2248,  0.1845,
          0.4191,  0.9537, -0.0618,  0.0672,  0.1813, -0.5115, -0.0289,  0.2327,
         -1.0483, -0.2492, -0.5297, -1.8403, -1.0458,  0.7614,  0.0284,  0.0052,
          0.0235, -0.4357,  0.8670, -0.7052,  1.0222,  0.0737,  0.5939, -0.2705,
         -0.4314,  0.6675, -0.4668,  0.5185, -0.7199, -2.5071,  0.3563,  0.6895]],
       device='cuda:0') tensor(5.8104, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
634000 特征值优化 tensor(2.5402, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0764,  0.1897, -0.2607, -0.2354,  0.3314,  0.1744,  0.7613,  0.6622,
          0.6993, -0.0401,  2.1673,  1.2654, -0.0474, -0.0355, -0.0227,  0.0319,
         -0.0606,  0.2182,  0.1476,  0.0072, -0.0274, -0.0833, -0.0539, -0.0954,
          0.0354,  0.2521,  0.1280,  0.2270,  0.3573,  0.1855,  0.0266, -0.0222,
         -0.0050, -0.0211,  0.2341,  0.2770,  0.2382,  0.1981, -0.0632, -0.0135,
          0.1143,  0.5727, -0.1141,  0.1215,  0.1363, -0.1424,  0.0760,  1.0203,
         -1.0104, -0.2692,  0.4092, -1.0651, -0.4151,  0.2570,  0.0615, -0.0750,
          0.2333, -0.1219,  0.6577, -0.6865,  0.5373, -0.0029,  0.8767, -0.5535,
         -0.1379,  0.1933, -0.5787,  0.0972,  0.1184, -1.6385,  0.6434,  0.6531]],
       device='cuda:0') tensor(1.6468, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
635000 特征值优化 tensor(16.1327, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.2637e+00, -1.0345e+00,  9.3208e-01,  2.9884e-01, -2.2358e-03,
         -9.8627e-01,  3.4360e-01, -1.0342e-01, -1.2465e+00,  1.0795e+00,
          5.1618e-01,  1.0549e+00, -3.2981e-01,  2.1076e+00,  1.1135e-01,
         -2.0203e+00, -2.0113e+00,  8.2244e-01,  9.4867e-01,  2.5648e-01,
          1.1986e+00, -5.0744e-01,  9.5009e-01,  1.0119e+00, -5.0075e-01,
         -4.0524e-01, -1.6388e+00, -1.4406e+00, -5.9295e-01, -2.4625e-01,
          2.9778e-01, -8.2004e-01,  5.5555e-01, -2.9817e-02,  8.4622e-02,
         -4.6055e-01,  9.1333e-01, -1.2636e-01, -1.9891e+00,  1.1495e+00,
         -2.2627e+00,  2.2321e-01, -1.1878e-01, -4.8028e-01, -1.2632e+00,
          4.4498e-01,  2.6453e-01, -1.1930e-01, -1.7996e+00,  7.9939e-01,
         -8.3257e-01, -1.3741e-01,  6.6464e-01, -9.4237e-02,  2.8644e-01,
          5.0291e-01,  1.4400e+00, -4.0279e-01,  1.3156e+00,  5.2812e-01,
         -2.1239e-01,  6.4494e-01,  1.0048e+00, -1.2414e+00,  2.6717e-01,
          4.5502e-01, -7.7363e-02, -8.1975e-01, -6.1887e-01,  3.5237e-01,
         -1.1308e+00, -8.1813e-01]], device='cuda:0') tensor(8.2815, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
636000 特征值优化 tensor(4.0209, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3365, -1.2182,  0.6608,  1.0156,  0.7358, -0.4803,  1.0865, -0.8255,
         -0.1255,  0.0293,  1.5396,  1.6809, -0.0336,  1.0660, -0.1775, -0.9708,
         -1.0003, -0.0741,  0.0769, -0.0842,  0.3803, -0.0450,  0.1110,  0.1542,
          0.0575, -0.0676, -0.6928, -0.6598, -0.0017,  0.0278,  0.0638, -0.3306,
          0.1519,  0.0620, -0.0519, -0.3859,  0.2152,  0.1835, -0.9525,  0.3481,
         -1.2754,  0.1975,  0.5046,  0.2754, -0.4708,  0.2355, -0.3297, -0.5305,
         -0.4970,  0.4503, -0.5165, -0.0389,  0.2061, -0.3231,  0.1300,  0.0828,
          0.8969, -0.3623,  0.6219,  0.1098,  0.2593,  0.0819,  0.2447, -0.4978,
          0.7690,  0.6575, -0.3964, -0.2837,  0.3305,  1.0805, -0.7978, -0.4266]],
       device='cuda:0') tensor(2.5864, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
637000 特征值优化 tensor(2.1297, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1191, -0.7860,  0.0947,  0.1618,  0.9920, -0.0721,  1.2210, -0.9497,
          0.2186, -0.2838,  1.8616,  1.5056,  0.0666,  0.3954, -0.0456, -0.3586,
         -0.3046, -0.1472,  0.0628,  0.1069,  0.1804,  0.0030, -0.0169, -0.0123,
          0.0045,  0.0232, -0.1825, -0.1432,  0.0229,  0.0238,  0.0306, -0.0637,
          0.0502, -0.0180, -0.0780, -0.1432,  0.1250,  0.1467, -0.6414,  0.2292,
         -1.0067,  0.1390,  0.2245,  0.0903, -0.3317,  0.7244, -0.5038, -0.2315,
          0.0605,  0.2655, -0.0814,  0.0529, -0.5546,  0.1457,  0.0599, -0.1014,
          0.0225,  0.0191,  0.4645,  0.1185, -0.1085,  0.3329, -0.0812, -0.4181,
          0.7093,  0.3888, -0.5192, -0.0394,  0.3654,  0.9278, -1.1922, -0.0910]],
       device='cuda:0') tensor(1.5537, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
638000 特征值优化 tensor(10.3249, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2658,  1.4065, -0.0450,  1.0477, -0.1518,  0.7595,  1.5730, -0.3769,
          0.0960,  0.3560, -0.9832, -0.0935,  0.5343,  0.0313, -0.7693, -2.0020,
          0.2665,  1.1174,  0.4307, -0.4782,  0.3608, -0.3204,  0.0731,  0.0295,
          0.3838, -0.0480,  0.1770,  0.1236,  0.1884, -1.9113,  0.0703,  0.0982,
          0.4064, -0.5691, -0.1582,  0.5807, -0.8738,  0.7138,  0.3852, -0.3141,
         -0.5570,  1.1066,  0.0655,  1.5123, -0.2855, -0.3753,  1.0063, -0.2765,
          0.9395,  1.0535, -0.0331, -0.4668,  1.2917, -0.0598,  0.1329, -0.0935,
          0.5168,  0.5120,  0.3036, -0.1596, -0.7071,  0.6354,  0.3675, -0.0470,
         -0.1752, -0.1074, -0.7871, -0.3392, -0.1994,  0.3941,  1.6294, -0.7225]],
       device='cuda:0') tensor(4.9036, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
639000 特征值优化 tensor(2.3267, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.9885e-01,  1.1562e+00,  8.3245e-01,  3.1084e-01, -4.9998e-01,
          9.0803e-01,  2.3287e+00, -8.0068e-01,  1.3128e-01, -4.3083e-01,
         -3.2555e-01,  5.4092e-01,  1.1806e-01,  1.6376e-02, -7.2007e-03,
         -9.3454e-01,  4.8952e-01,  2.1883e-01,  2.3400e-01, -1.2904e-02,
          1.2941e-01, -4.8617e-03,  7.8483e-03,  2.2481e-02,  7.4221e-03,
          4.4818e-02,  8.1089e-02, -8.2588e-02, -1.4224e-03, -1.0258e+00,
         -8.3475e-03,  9.1024e-02,  4.1517e-02, -3.1306e-01,  1.2415e-01,
          2.7848e-01, -8.0806e-02,  5.4142e-02,  8.0848e-02, -1.7151e-01,
         -6.4089e-02,  6.6308e-01, -2.8613e-01,  9.4632e-01, -5.4482e-01,
         -5.6209e-01,  2.8880e-01,  4.4663e-01,  7.8900e-01,  9.0426e-01,
          9.3618e-03,  7.4790e-02,  6.3737e-01, -2.9230e-01,  3.0833e-02,
         -5.9788e-02, -4.5743e-02,  3.0492e-01,  1.5856e-01, -5.7919e-01,
         -1.5671e+00,  2.2500e-01,  3.9137e-01, -1.3306e-02, -1.2152e-01,
          1.3532e-01, -4.9197e-01,  1.8253e-01, -3.5692e-01,  7.1187e-02,
          1.7576e+00, -5.7190e-01]], device='cuda:0') tensor(0.6639, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
640000 特征值优化 tensor(2.0993, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.2777e-01,  8.5161e-01,  9.2492e-01,  2.7737e-01, -1.7149e-01,
          7.1918e-01,  2.5190e+00, -7.2367e-01,  2.9213e-01, -4.0344e-01,
         -1.6779e-01,  8.8330e-01,  6.6805e-02, -2.7906e-02, -1.0005e-02,
         -6.7883e-01,  5.1179e-01,  1.3809e-01,  2.0277e-01, -3.7929e-02,
          7.8816e-02, -1.8313e-02,  6.5409e-02,  6.6790e-03,  9.3877e-03,
          4.9139e-03,  1.0738e-01, -1.0859e-01,  1.4378e-03, -9.3431e-01,
         -1.8389e-02,  6.1991e-02,  1.6835e-02, -1.8055e-01,  1.1653e-01,
          3.3136e-01, -6.9506e-02,  4.6690e-02,  5.6788e-02, -1.1234e-01,
         -8.1475e-02,  4.6513e-01, -4.6105e-01,  9.1253e-01, -4.6637e-01,
         -4.6137e-01,  1.8618e-01,  3.9702e-01,  4.3653e-01,  1.0937e+00,
          7.1382e-02,  5.8698e-02,  2.4988e-01, -9.9715e-02, -1.2126e-02,
          1.2338e-01, -8.2018e-02,  1.6771e-01,  1.1095e-01, -4.5025e-01,
         -1.5796e+00,  2.2124e-01,  3.6226e-01,  1.4334e-03, -1.1485e-01,
          1.3390e-01, -4.2350e-01,  1.5968e-01, -3.2436e-01,  6.5845e-02,
          1.6736e+00, -6.2081e-01]], device='cuda:0') tensor(1.5940, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
641000 特征值优化 tensor(7.8938, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4816, -0.0401,  0.7154, -1.2843,  0.4125,  1.3562,  0.9066, -0.8360,
          0.1818, -0.0919, -1.3913, -0.5196,  0.6092, -0.1951,  1.0347, -0.4588,
          0.3467,  1.0031,  0.3480,  0.3875, -0.6342, -0.1939,  1.6615, -0.3390,
          0.0336, -0.4431, -0.4714,  0.6297,  0.2137,  0.2052, -1.9952,  0.2979,
          0.6281,  0.3246, -0.0728,  0.1116, -1.0518, -0.4435,  0.0908,  0.0052,
          0.7189, -0.0146,  0.7675,  0.1880, -0.7292, -2.0235,  0.1231, -0.0462,
         -0.0079,  0.6898,  0.2444, -0.3717, -0.2735,  0.3980,  0.2391,  0.2396,
          0.9435, -0.2453, -0.8570,  0.0766,  0.9418,  0.0359, -0.6996,  0.0161,
         -1.4547,  0.7991, -0.3231,  0.2275,  0.2744,  0.3453, -0.1145,  0.0166]],
       device='cuda:0') tensor(4.6190, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
642000 特征值优化 tensor(2.3067, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4654, -0.6616,  1.1133, -1.2797,  1.3588,  1.8529,  1.2219, -0.7552,
         -0.1138, -0.0116, -0.9700, -0.2935,  0.5472, -0.0476,  0.1781, -0.4012,
          0.3447,  0.3312,  0.1238,  0.1754, -0.5206, -0.1400,  0.8410, -0.5580,
         -0.0223, -0.0027, -0.0389,  0.0320,  0.0425,  0.1193, -1.0692,  0.0414,
          0.0695,  0.2334,  0.0339,  0.0168, -0.2380, -0.0327, -0.0210,  0.0476,
          0.3593, -0.0245,  0.2955,  0.1174,  0.0949, -1.3986,  0.0765, -0.5924,
          0.2602,  0.2710,  0.5014, -0.1926,  0.4912,  0.9344,  0.3348, -0.1936,
          0.1244, -0.1029, -0.5085, -0.1048,  0.6545,  0.0131, -0.5644,  0.1416,
         -0.5438,  0.2235, -0.0498, -0.0316,  0.5194, -0.0985, -0.1707,  0.1338]],
       device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
643000 特征值优化 tensor(2.1018, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.2430, -0.9528,  1.1486, -1.0984,  1.4880,  1.6872,  0.8547, -0.4888,
         -0.1062, -0.0637, -0.9192,  0.0172,  0.4800, -0.1158,  0.0241, -0.3314,
          0.1609,  0.1415,  0.1047,  0.2365, -0.4792, -0.0264,  0.5722, -0.4877,
         -0.0121,  0.0089, -0.0348,  0.0492,  0.0136,  0.0087, -0.9552,  0.0301,
          0.0435,  0.2117,  0.0067,  0.0744,  0.0804, -0.0862, -0.0428, -0.0223,
          0.3383, -0.0386,  0.3144,  0.1375,  0.1344, -0.9662, -0.0468, -0.6745,
          0.2035,  0.2002,  0.5718, -0.1259,  0.4929,  0.8743,  0.6331, -0.2573,
         -0.2947,  0.2114, -0.6144, -0.1487,  0.0650,  0.1743, -0.6263,  0.0042,
         -0.4255,  0.1659, -0.0185,  0.0124,  0.4398, -0.0383, -0.1242,  0.1216]],
       device='cuda:0') tensor(0.8829, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
644000 特征值优化 tensor(8.9712, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0074, -1.6021, -0.7159, -1.7943, -0.8215,  0.3335,  0.9235,  0.2783,
          2.6249,  0.7816,  0.6164,  0.7197, -0.1612, -0.7183,  0.1629, -0.3924,
         -0.2810,  0.1100, -1.1431,  0.0104, -0.7574,  0.3654, -1.2979,  0.2674,
         -0.5394, -0.1992,  0.0674, -0.1938, -0.2794, -0.4606,  0.3983, -0.4424,
         -0.2726,  0.0221, -0.0556,  0.0045, -0.4516,  0.5327, -1.5132, -1.2306,
         -0.9270,  0.7060, -0.0723,  0.5889,  0.5988,  0.3320, -0.8124,  0.4745,
         -0.0184, -0.2582, -0.3671,  0.8640,  0.0793, -0.6480,  0.0359, -0.1511,
         -0.0705,  0.3907, -1.3916,  0.3347, -1.0017,  0.1245, -0.4515, -1.0117,
          0.8945,  1.2726, -0.7064, -0.9263,  0.9011, -0.3948, -0.1431,  0.7194]],
       device='cuda:0') tensor(4.3309, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
645000 特征值优化 tensor(2.2427, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4717, -1.0873, -0.1929, -0.9923, -1.0329,  0.5963,  0.9723, -0.1865,
          3.2753, -0.2329,  1.2361,  1.3811, -0.0309, -0.0232,  0.0203, -0.0608,
          0.0103,  0.2227, -0.3456,  0.0104, -0.1084,  0.1516, -0.4596,  0.2810,
         -0.0487, -0.0412,  0.0535,  0.0589,  0.0171, -0.1751,  0.1907, -0.1111,
          0.1487, -0.0209,  0.0101, -0.0236, -0.0529,  0.1566, -0.8756, -0.6126,
         -0.4132,  0.4263, -0.5330,  0.1015,  0.1279,  0.4913, -0.1940,  0.7219,
         -0.3940, -0.4278, -0.4524,  0.5606, -0.1585, -0.1125,  0.0792,  0.0064,
         -0.4876,  0.3420, -0.8868,  0.5396, -0.6503,  0.1924,  0.2675, -0.3630,
          0.8466,  0.9880, -0.1931, -0.2539,  1.0777, -0.1484,  0.0269,  0.6827]],
       device='cuda:0') tensor(0.8101, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
646000 特征值优化 tensor(2.1104, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.4226e-01, -7.8889e-01, -1.0246e-01, -6.3873e-01, -7.4767e-01,
          7.5963e-01,  5.7414e-01, -5.2965e-01,  3.3265e+00, -3.0768e-01,
          1.3400e+00,  1.3311e+00, -5.5978e-02,  9.8582e-02, -2.1856e-02,
          6.6241e-02,  1.7207e-01,  1.7008e-01, -2.3802e-01,  9.0466e-03,
         -8.6146e-02,  1.3835e-01, -3.4950e-01,  2.1109e-01, -7.5309e-02,
         -1.3533e-01,  1.2838e-01,  4.3318e-02,  8.8815e-02, -1.6007e-01,
          2.0464e-01, -5.7203e-02,  3.8252e-02, -1.7319e-03,  3.0624e-02,
          2.3707e-02, -5.1157e-02,  1.3338e-01, -7.9584e-01, -5.3751e-01,
         -3.2171e-01,  2.7680e-01, -3.5205e-01,  3.6111e-02,  7.1976e-02,
          3.5727e-01, -1.4763e-01,  6.8841e-01, -3.8656e-01, -3.8614e-01,
         -4.5714e-01,  5.2143e-01, -3.2188e-01, -4.0963e-02,  4.9686e-02,
          3.4160e-02, -4.8894e-01,  3.3749e-01, -8.8685e-01,  4.6460e-01,
         -2.9102e-01,  1.8923e-01,  3.3058e-01, -2.7674e-01,  8.0874e-01,
          1.0987e+00, -2.5167e-01, -2.2527e-01,  1.0331e+00, -1.9362e-01,
         -2.5363e-01,  5.6620e-01]], device='cuda:0') tensor(1.3788, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
647000 特征值优化 tensor(5.3592, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1020,  0.4590,  1.0194,  0.7281, -0.7939, -0.3821, -0.6915, -0.6842,
          0.1431, -0.0924,  0.7087,  1.3592, -0.1571,  0.0243, -0.0479,  0.0192,
         -0.0214, -0.0778, -0.0344, -0.0028, -0.0405,  0.1205, -1.6332,  0.1222,
          0.5851, -1.1971,  0.0081, -0.0458, -1.2695,  0.1151,  0.1598, -0.1203,
          0.0073,  0.0656,  0.0576,  0.0494, -0.0413,  0.0745,  0.0552,  0.0355,
         -0.6130, -1.0176,  0.2182, -1.0075,  0.4090,  0.5335, -0.5882,  0.2489,
         -0.0945, -0.3898, -0.2299,  0.0437,  1.0138, -0.7289, -0.6917, -0.7033,
          0.0155,  0.0650,  0.0096,  0.0075,  0.2654, -0.1030,  0.3509, -0.2400,
         -0.3688,  0.1369, -0.1563,  0.1334, -0.5989,  1.8136,  0.3953,  0.7006]],
       device='cuda:0') tensor(3.7365, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
648000 特征值优化 tensor(2.3202, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-7.3004e-03,  8.5750e-02,  1.4908e+00,  9.4225e-01, -8.1955e-01,
          2.7988e-01, -9.7142e-02, -4.5120e-01,  1.3994e-01, -1.4201e-02,
          1.4448e+00,  1.5376e+00, -3.1525e-02, -2.2001e-02, -1.2855e-02,
          6.2670e-03, -1.3297e-02, -1.3129e-01, -3.5974e-02, -4.7303e-03,
         -5.5975e-03,  1.6309e-01, -7.3097e-01, -2.9347e-01,  1.9152e-01,
         -3.9410e-01, -3.3082e-03, -1.2467e-01, -7.7899e-01,  1.6839e-01,
          2.2337e-01, -2.3252e-02,  1.9481e-02,  2.5293e-02, -2.1025e-02,
         -1.5082e-02, -2.7807e-02,  8.8569e-02,  2.5279e-02,  1.1093e-02,
         -4.3242e-01, -6.8320e-01,  2.4567e-01, -7.8685e-01,  4.7239e-01,
          4.9024e-01, -3.2191e-01,  2.6794e-01, -4.4857e-01, -7.9254e-01,
         -5.2465e-02, -2.9568e-01,  8.1869e-01, -5.8057e-01, -4.5552e-01,
         -7.8904e-01, -2.7007e-01,  1.7539e-01, -4.2030e-04,  8.5634e-03,
         -8.5782e-02,  9.9870e-02,  1.1301e-01, -6.7216e-02, -2.0445e-01,
          1.7627e-01, -1.0324e-02,  2.5692e-02,  2.2631e-01,  9.7603e-01,
         -2.4085e-01,  5.9840e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
649000 特征值优化 tensor(2.1106, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0515, -0.0463,  1.5495,  1.1065, -0.8073,  0.5165,  0.0320, -0.4679,
          0.0283, -0.0654,  1.4909,  1.4113, -0.0204, -0.0307,  0.0311,  0.0032,
          0.0069, -0.0924,  0.0442,  0.0222,  0.0033,  0.1437, -0.4409, -0.3075,
          0.2187, -0.1516, -0.0272, -0.3426, -0.6189,  0.1553,  0.2142, -0.0699,
         -0.0411,  0.0219, -0.0185, -0.0164, -0.0101,  0.0974,  0.0259,  0.0175,
         -0.4366, -0.5170,  0.0239, -0.5610,  0.5753,  0.2060, -0.1068,  0.0845,
         -0.4544, -0.6320,  0.0308, -0.4283,  0.5804, -0.4938, -0.2940, -0.8690,
         -0.3097,  0.1846, -0.0266,  0.0681, -0.1722,  0.1720,  0.2633, -0.0246,
         -0.0579,  0.1680, -0.0095,  0.0622,  0.2203,  0.8985, -0.4242,  0.4012]],
       device='cuda:0') tensor(0.9590, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
650000 特征值优化 tensor(9.6397, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0762e-01, -2.1234e-01,  9.6517e-01, -1.2193e+00, -8.1012e-01,
          1.8382e+00,  7.2633e-01, -2.1835e-02, -2.7025e-01,  1.1523e+00,
         -8.8531e-01,  1.9824e-01, -1.0065e-01, -1.0951e-01,  1.2210e-01,
         -3.3988e-01, -8.4695e-03, -2.5641e-01, -8.5157e-01, -7.2733e-01,
         -1.0252e+00, -4.1187e-01, -6.0041e-01,  1.0040e-01,  6.8559e-01,
          3.6115e-01,  9.1149e-02,  1.3022e-01,  2.3526e-02, -4.6883e-01,
         -2.1869e-01, -2.8874e-01, -8.9983e-01, -9.7362e-01, -2.2191e-01,
          2.0697e+00,  6.2233e-01,  5.5352e-02,  1.4834e-01,  1.3272e-03,
          1.7615e-01,  2.5877e-01,  7.0492e-01, -1.0545e-01,  5.6072e-01,
          5.3043e-01,  3.4316e-01, -3.6631e-01,  1.6414e-01,  2.2363e-01,
          5.3547e-01, -4.5693e-01, -8.8772e-01,  8.5935e-01, -3.2930e-01,
          2.8200e-01,  2.3206e-01, -7.1247e-01,  1.0079e+00,  1.1319e+00,
          1.0999e+00,  2.9696e-01, -6.1658e-01,  7.1698e-01,  1.2985e+00,
          1.0694e-02,  5.7587e-01, -5.3003e-01,  1.1419e+00, -1.5520e+00,
         -6.9987e-03,  3.9774e-01]], device='cuda:0') tensor(4.9341, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
651000 特征值优化 tensor(2.2023, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6520,  0.2486,  0.5484, -0.7777, -0.1093,  2.6480, -0.2403,  0.0771,
         -0.1602,  1.0049, -0.3542,  1.0966, -0.1002,  0.0263, -0.0723,  0.0281,
          0.0167,  0.0156, -0.1806, -0.3962, -0.6877, -0.0446, -0.0710,  0.0430,
         -0.0030,  0.0183,  0.0595, -0.0224, -0.0074,  0.0250, -0.0176, -0.0474,
         -0.0671, -0.3897, -0.5190,  1.1228,  0.0463, -0.0656,  0.0756,  0.0778,
          0.0505,  0.1371,  0.8818, -0.4766,  0.6791,  0.3929,  0.1357, -0.5067,
          0.1648,  0.1610,  0.4820, -0.1228, -0.5637,  0.2838, -0.6052,  0.5035,
          1.0082, -1.0341,  0.6067,  0.9979,  0.5270, -0.2122, -1.1171,  0.5771,
          0.5176, -0.0649,  0.4535, -0.3518,  1.5799, -0.8091,  0.9366, -0.4581]],
       device='cuda:0') tensor(1.6726, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
652000 特征值优化 tensor(8.1003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.6470,  0.5706, -0.3461,  1.4138,  1.4248, -0.0648,  0.2784, -0.5271,
          0.7405,  0.1500,  1.2300,  1.9295, -0.0104, -0.8139,  0.3470,  0.1812,
          0.0697,  0.2445,  0.0677, -0.0262, -0.2943,  0.3835, -0.6928, -0.2742,
         -0.0569, -0.9376,  0.0523, -0.0177, -0.0066,  0.7567, -0.8233,  0.2857,
         -0.1539,  0.0945, -0.0084,  1.2174,  0.2321, -0.5729, -2.3837, -0.3192,
         -0.5157, -0.1138,  1.6399, -0.3567, -0.6557,  0.3105, -0.6551,  0.4493,
         -0.3001,  0.3779, -0.0625,  0.1683,  0.5589,  0.2965,  0.0410,  1.1052,
          0.6227, -0.2533, -0.9334, -0.4491, -1.1675, -0.3143, -0.3701, -0.1620,
          1.3661,  0.5852,  0.5371,  0.5898,  0.0272,  0.7978, -0.5055, -0.7647]],
       device='cuda:0') tensor(4.9138, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
653000 特征值优化 tensor(2.5109, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.0036e+00,  5.5231e-01,  2.3858e-01,  8.1183e-01,  9.6945e-01,
          4.0396e-01, -5.4888e-01, -1.6215e-01,  1.8501e+00,  4.4302e-01,
          2.9233e-01,  2.3583e+00,  9.5202e-03, -3.2817e-02,  2.4700e-02,
          9.6312e-02,  8.7787e-02,  3.3982e-02,  4.3072e-02, -3.2839e-02,
         -1.7921e-02,  3.8930e-01, -1.1724e-01, -7.3158e-02,  2.8650e-02,
         -1.0637e-01,  2.4196e-02,  9.2476e-03, -1.3202e-02,  4.0436e-01,
         -3.4599e-01, -1.0250e-02, -1.8670e-04,  9.2911e-03,  1.5670e-02,
          7.9284e-01,  1.2162e-01, -2.7031e-02, -1.4411e+00, -1.8382e-01,
          7.3966e-02, -2.3729e-02,  8.8456e-01, -1.9122e-01, -2.1641e-01,
          3.5755e-01, -3.9112e-01,  1.2054e-01, -5.4594e-02,  5.0041e-01,
         -5.1193e-02,  2.2850e-01, -3.3688e-01,  5.3137e-01,  2.7285e-01,
          8.5103e-02,  1.1049e+00, -5.2622e-01, -7.5006e-01, -2.8338e-01,
         -7.4162e-01, -5.1565e-02,  1.3060e-01,  1.3692e-03,  1.7221e+00,
          7.6407e-01, -8.8602e-02,  1.6560e-01, -3.3195e-01,  2.3579e-01,
         -9.5746e-02, -5.3454e-01]], device='cuda:0') tensor(1.9248, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
654000 特征值优化 tensor(2.0961, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-6.3686e-01,  4.0644e-01,  3.2128e-01,  5.4440e-01,  5.2239e-01,
          4.9592e-01, -9.0364e-01,  1.0165e-02,  2.1257e+00,  4.4227e-01,
          5.8727e-02,  2.3699e+00,  2.3230e-03,  2.2528e-02, -5.7677e-02,
          7.0897e-02,  6.0292e-02, -4.1537e-03, -2.4330e-02,  2.2280e-03,
         -2.1845e-02,  3.1485e-01, -3.0444e-02, -3.0826e-02,  2.6916e-02,
         -1.5862e-02, -6.7552e-03,  2.6092e-02, -2.0783e-02,  3.3581e-01,
         -1.9123e-01, -7.6143e-03, -7.7300e-02,  1.2922e-02, -4.8358e-02,
          7.5360e-01,  1.1547e-01, -6.3314e-02, -1.2191e+00, -1.4442e-01,
          3.1704e-02, -3.2689e-02,  2.1541e-01,  7.7618e-02,  9.4709e-02,
         -1.0081e-01, -1.0942e-01, -2.0247e-01,  5.9655e-02,  4.5485e-01,
         -1.4775e-01,  1.9420e-01, -2.8571e-01,  3.3513e-01,  2.0116e-01,
         -5.3017e-03,  1.1505e+00, -4.9944e-01, -4.1434e-01, -6.5153e-01,
         -5.5667e-01, -4.3062e-02,  1.3720e-02,  3.1270e-02,  1.4978e+00,
          5.7531e-01, -1.0650e-01,  1.7488e-01, -2.0860e-01,  1.5001e-01,
         -1.3149e-01, -5.2713e-01]], device='cuda:0') tensor(0.7015, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
655000 特征值优化 tensor(4.5618, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.2792e-01,  3.8508e-01, -7.8223e-01,  1.4393e+00,  4.1509e-01,
          7.2703e-01,  1.7832e+00, -9.5365e-01, -1.2355e-01, -4.9452e-01,
         -1.6330e-01,  1.2646e-01, -4.7974e-01,  9.9708e-02, -2.4089e-02,
         -2.6644e-01, -4.4951e-01, -1.1477e+00,  1.7197e-01,  6.7802e-01,
         -4.5801e-01, -2.1770e-01, -1.1887e-02,  1.3329e-01, -3.0700e-01,
          6.3158e-02,  1.1864e-01,  2.2465e-01, -1.1702e-01, -1.7146e-01,
          2.5107e-01, -2.9261e-01,  3.1247e-01,  4.4307e-01,  5.6690e-04,
         -1.1560e-02, -8.5232e-01,  5.2788e-02,  1.6708e-01, -1.8389e-01,
          5.1762e-01,  7.2596e-02,  1.5167e+00, -7.8928e-01, -6.4626e-01,
         -1.0967e-01,  1.1735e-01,  8.8087e-01,  3.8665e-01, -2.5014e-01,
         -6.7772e-01,  2.0053e-01,  1.2083e+00, -2.5205e-01,  1.3320e-02,
         -5.0565e-01,  2.6868e-01,  8.1490e-01,  5.6785e-01,  1.2659e+00,
         -9.0018e-01, -1.2490e-01,  7.1512e-01, -2.9805e-01, -2.6534e-02,
         -1.1849e-01,  4.2609e-01,  1.1706e-01, -5.2018e-02,  1.0076e-01,
         -7.3380e-01,  5.3773e-02]], device='cuda:0') tensor(2.1805, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
656000 特征值优化 tensor(2.1157, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2385,  0.1237, -0.6455,  0.7518,  0.4625,  0.9451,  2.1337, -1.1119,
          0.0378, -0.0399,  0.1893,  0.1263, -0.0872,  0.0183, -0.0100,  0.0752,
         -0.2707, -0.4708, -0.1283,  0.4423, -0.0681, -0.0317,  0.0283,  0.0039,
         -0.0916, -0.0817, -0.1189, -0.0189,  0.0400, -0.0163,  0.1089, -0.3132,
          0.0503,  0.3892,  0.0345,  0.0075, -0.5081,  0.0438, -0.0207, -0.0098,
          0.2277,  0.0509,  0.7010, -0.9224, -0.1474,  0.3478, -0.3439,  0.2957,
          0.1121, -0.0026, -0.6132,  0.1533,  0.7780, -0.2562, -0.5096, -0.1267,
          0.0170,  0.6235,  0.0455,  0.7756, -0.5541,  0.2566,  0.5240, -0.1772,
         -0.1232,  0.0820,  0.0416, -0.0485, -0.7374,  0.0288, -0.4704,  0.2671]],
       device='cuda:0') tensor(1.4861, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
657000 特征值优化 tensor(11.0366, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5381, -0.8697,  1.7732, -0.3843, -0.6498, -0.1835,  0.5057,  2.5619,
         -0.0964, -0.1746,  0.7751, -0.1372, -0.1908,  0.3300, -0.5976, -1.1733,
          0.7533, -1.1570, -0.8279,  0.0200,  0.4271,  0.2187,  1.0403, -0.9929,
          1.8178,  0.3266,  0.4661,  1.5522,  1.0642, -1.3369,  0.3826, -1.0475,
          0.1454, -0.5680, -0.6254,  0.3075,  0.6838, -0.0940,  0.4136,  1.6973,
         -0.0248,  0.0782, -0.4420, -0.0649, -0.0863, -0.3876, -0.1012, -0.2831,
          0.7319,  0.1329,  0.7390, -1.2317,  0.6969,  1.0179,  0.3646,  0.2693,
          0.7155, -1.6351, -0.1910,  0.2594, -0.5343, -0.3951,  0.1472, -0.3460,
          2.5936,  0.3602,  0.2454,  0.0757, -1.0518, -0.0633,  1.5801,  0.9035]],
       device='cuda:0') tensor(6.2502, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
658000 特征值优化 tensor(2.5566, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0914, -0.1615,  2.4576, -1.1871, -0.2186, -0.1153,  1.1371,  2.0387,
          0.9080,  0.5338,  1.4997,  0.7201,  0.0030,  0.1133,  0.0193, -0.2616,
          0.6307, -0.4470, -0.1184, -0.0078, -0.0187,  0.3220,  0.1994, -0.1840,
          0.8016, -0.1447, -0.0446,  0.5825,  0.4019, -0.6954,  0.1780, -0.4623,
          0.2445, -0.1335, -0.4164,  0.1119,  0.2121, -0.0052,  0.3711,  0.7236,
         -0.0406,  0.3908, -0.2474,  0.2007,  0.1518,  0.0167, -0.0084,  0.2742,
          0.6231, -0.0623,  0.0230, -0.6361,  0.5365,  0.1631,  0.9052,  0.2219,
          0.0174, -0.3311, -0.0707, -0.0911, -0.1071, -0.7843, -0.1822, -0.4804,
          1.6750, -0.4132,  0.5344, -0.0095, -0.6215, -0.1397,  0.5428,  0.6035]],
       device='cuda:0') tensor(1.8948, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
659000 特征值优化 tensor(22.6069, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.7142, -2.0628,  0.8485, -0.6772,  0.7802, -0.6753, -0.3730, -1.0850,
         -0.8619, -0.3516,  0.0512,  0.6470, -0.4659,  2.0255, -0.7174, -0.3216,
          0.4883,  0.6655, -0.0379, -1.0283,  0.6124,  1.2971, -0.3540, -1.1889,
         -0.5475,  0.7502, -0.2281, -0.2033,  1.2082, -0.7592, -0.0086,  1.5123,
          0.7979, -0.2274, -0.2670, -0.0492,  0.2289, -2.1767, -1.2904, -1.3737,
          1.3190, -0.0462,  0.7652,  0.7066,  0.4954, -1.5233,  1.5583, -2.0014,
         -0.1669, -1.0352, -0.8162, -1.5524, -1.0166, -1.4370,  0.1931,  0.1592,
          0.9827, -2.0384, -0.3404, -0.4764, -0.6559, -1.6708, -0.3901,  0.2660,
          1.2587, -2.5529,  0.3794, -1.2272, -0.5092,  1.1434, -0.3702,  1.4874]],
       device='cuda:0') tensor(12.1195, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
660000 特征值优化 tensor(5.2227, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.8029, -1.0610,  1.6457, -0.5526,  1.7185,  0.2155,  0.6150, -1.4765,
         -0.0505,  0.0764,  1.0881,  1.5324, -0.1002,  0.8845, -0.2547,  0.0023,
          0.0404, -0.0937, -0.0400, -0.2510,  0.1173,  0.4656, -0.1128, -0.3068,
          0.0223,  0.0148,  0.0027,  0.0235,  0.1722, -0.1826, -0.0037,  0.7105,
          0.2676, -0.0219, -1.0701,  0.3276,  0.0677, -1.1151, -0.5411, -0.6021,
          0.6609,  0.1457,  1.2769, -0.1515, -0.3576, -0.9081,  0.6774, -1.1314,
          0.6387, -0.1956, -0.4544, -0.6249, -0.1154, -0.6181, -0.0460, -0.0571,
          1.5635, -1.1489, -0.5040, -0.3119,  0.4453, -0.4714, -0.4634, -0.2732,
          2.0695, -1.6677,  0.8100, -0.4934,  0.2500,  0.7103,  0.5230,  1.1988]],
       device='cuda:0') tensor(2.5171, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
661000 特征值优化 tensor(2.3042, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.2865e-01, -5.3100e-01,  1.1655e+00,  1.2678e-01,  1.5878e+00,
          2.7966e-01,  1.0751e+00, -1.5308e+00,  4.4072e-01,  4.7907e-01,
          1.4961e+00,  1.6024e+00, -1.6752e-03,  2.5388e-01,  4.4074e-02,
          5.6330e-02, -5.9192e-02, -1.1108e-01, -4.7895e-02, -8.3900e-02,
          2.6516e-02,  1.5184e-01,  3.3882e-02, -6.2487e-02,  1.9739e-01,
         -7.4623e-02, -2.0993e-01, -2.6151e-01, -1.1502e-02, -1.8480e-03,
         -2.6630e-02,  4.1334e-01,  2.8795e-01, -2.2809e-02, -7.0454e-01,
          3.0947e-01,  3.8349e-01, -6.4049e-01, -2.9476e-01, -1.6558e-01,
          5.3971e-01,  2.6763e-02,  1.0540e+00, -2.1885e-01, -4.0078e-01,
         -6.9349e-01,  5.3919e-01, -9.0030e-01,  5.8194e-01, -6.0287e-02,
         -4.3342e-01, -1.5026e-01, -4.1298e-01, -1.3451e-01,  2.9389e-01,
         -2.7117e-01,  7.2903e-01, -4.0018e-01, -7.2644e-01, -4.7695e-01,
          7.5599e-01, -1.2368e-01, -4.4309e-01, -1.7455e-01,  2.2919e+00,
         -1.1988e+00,  1.1697e+00, -3.6939e-01,  2.0652e-01,  2.5372e-01,
          1.4917e-01,  5.1138e-01]], device='cuda:0') tensor(1.1821, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
662000 特征值优化 tensor(2.1030, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.1882e-01, -3.7364e-01,  7.6002e-01,  1.7579e-01,  1.2585e+00,
          5.7210e-01,  1.1785e+00, -1.4758e+00,  5.9796e-01,  7.3277e-01,
          1.5302e+00,  1.4995e+00, -1.2543e-03,  7.5056e-02,  1.2480e-01,
          1.0030e-01, -6.1099e-02, -1.2328e-01, -5.8324e-02, -7.3231e-03,
          1.7603e-02,  9.9057e-02, -2.6653e-02, -4.0842e-02,  3.7420e-02,
         -8.7844e-02, -1.5578e-01, -2.5391e-01,  2.5385e-02,  7.6035e-02,
         -2.0246e-02,  3.7996e-01,  2.6322e-01, -2.0322e-02, -4.3930e-01,
          2.0755e-01,  3.8315e-01, -5.9240e-01, -2.8359e-01, -8.9852e-02,
          5.0611e-01, -6.1479e-02,  1.0667e+00, -1.9963e-01, -3.5337e-01,
         -6.3617e-01,  4.8060e-01, -6.8702e-01,  4.2462e-01, -1.3564e-01,
         -4.3498e-01, -6.0755e-02, -3.4301e-01, -4.2663e-02,  1.7099e-01,
         -1.6164e-01,  1.5689e-01, -1.1936e-01, -3.7472e-01, -3.4475e-01,
          7.5036e-01, -1.5842e-01, -4.9869e-01, -1.1739e-01,  2.2531e+00,
         -1.1476e+00,  1.1703e+00, -3.9059e-01,  2.6695e-01,  1.7608e-01,
          1.0921e-01,  1.9487e-01]], device='cuda:0') tensor(1.1054, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
663000 特征值优化 tensor(7.2074, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7994, -0.6616,  1.1632, -0.0211,  0.2080,  1.3586,  2.0372,  1.2098,
          1.2892, -1.0654,  1.1461,  0.2691, -0.2619, -0.1991, -0.1056, -0.1009,
         -0.3216,  0.2323,  0.0515, -0.1790,  0.1301,  0.5063,  0.4224,  0.7965,
         -0.4362, -1.4405,  0.5046,  0.5175,  0.2568, -0.5723,  0.0070,  0.1316,
         -0.4851, -0.2629, -1.9259, -0.3803, -1.5202, -1.3770, -0.1515,  0.2690,
          0.0813, -0.2340, -0.2649,  0.5528,  0.1529,  0.0668, -0.2158,  0.2666,
          0.5740, -0.6290, -0.6518, -0.1608,  0.4016,  0.0906,  0.0771, -0.4260,
          1.8901, -0.3084,  1.0459,  0.2848, -0.1004,  1.3625,  0.2287,  0.7079,
          0.7034, -0.7242,  0.8489,  0.5333, -1.1408,  1.6319, -0.4864, -0.4051]],
       device='cuda:0') tensor(4.1948, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
664000 特征值优化 tensor(2.1803, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.9212e-02, -1.1312e-01,  1.4028e+00, -4.2955e-01, -6.2731e-02,
          1.9918e+00,  2.6242e+00,  1.9477e+00,  1.9375e+00, -1.0808e+00,
          1.9017e+00,  1.3623e-01,  2.1625e-03,  4.4493e-02, -6.5775e-02,
         -1.5251e-02,  1.0174e-01,  1.0512e-02,  8.7784e-03, -9.8498e-03,
         -2.5275e-02,  2.8219e-01,  1.5811e-01,  1.8616e-01, -2.5109e-01,
         -5.6271e-01, -1.0547e-01,  1.0492e-01,  3.8378e-01, -2.9709e-01,
         -1.8517e-02, -1.9025e-02, -7.8073e-03,  9.6773e-02, -1.3600e+00,
         -1.9850e-01, -1.0668e+00, -9.4552e-01, -1.1094e-01,  3.7192e-02,
         -1.4582e-01, -3.4071e-02, -2.2731e-01,  1.6470e-01,  1.7509e-01,
         -4.4230e-03, -1.8410e-02,  2.2497e-01,  3.0029e-01, -3.9524e-01,
         -5.6640e-01, -1.4233e-02,  7.5970e-02, -6.8771e-03, -2.2218e-01,
         -5.8562e-01,  2.3340e+00, -7.5768e-01,  1.3120e+00, -2.7911e-02,
          2.6385e-01,  1.1241e+00,  4.1319e-01,  6.1782e-01,  1.0799e+00,
         -1.2065e+00,  3.8036e-01,  1.5210e-01, -4.3888e-01,  7.3896e-01,
         -1.9514e-01,  7.6303e-02]], device='cuda:0') tensor(1.5708, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
665000 特征值优化 tensor(15.0543, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2219e+00,  5.0079e-01, -2.6672e-01, -6.0243e-01, -5.7726e-02,
          5.1531e-01,  1.0632e-01,  1.3926e-02, -5.8586e-01,  5.4628e-01,
          1.4951e+00,  1.2751e+00,  5.8470e-01,  8.2108e-01, -2.5115e-01,
         -4.0683e-01,  1.7076e+00, -1.0316e+00,  2.7722e-02, -1.2903e-01,
          1.8383e+00,  1.3220e+00,  3.5362e-01, -5.5567e-01, -2.6578e-01,
          6.3658e-01, -4.7541e-01, -5.6061e-01, -1.0827e-02, -1.4948e+00,
          8.8706e-01,  2.3809e-01,  8.3335e-02, -2.0185e-01, -7.6964e-02,
         -4.6653e-01, -3.9649e-04, -7.1079e-02, -9.1604e-01,  6.6983e-02,
         -1.9149e-01,  1.5119e+00, -7.9535e-01, -7.3409e-01,  9.6499e-01,
         -1.8598e-01, -9.6957e-02, -3.2667e-01, -5.0684e-01, -2.2593e-01,
         -1.1721e+00, -1.8052e-01, -1.4580e+00,  1.8142e-01, -4.6467e-01,
         -6.9508e-01,  1.3421e-01,  1.4195e+00,  4.7766e-01, -8.1094e-01,
         -6.3076e-01, -3.0367e-01,  1.6216e-01,  8.5429e-01,  1.2150e+00,
         -1.0405e+00, -8.7123e-01, -1.7215e+00, -2.3092e-01, -6.7269e-01,
         -1.0396e+00,  2.0762e+00]], device='cuda:0') tensor(7.4334, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
666000 特征值优化 tensor(2.6159, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1197e+00,  5.8095e-01,  7.1407e-01, -1.3669e+00,  4.2186e-01,
          9.5133e-01,  7.8517e-01,  1.2926e-01,  2.1969e-01, -6.7917e-01,
          9.2389e-01,  2.2008e+00,  1.8665e-01,  4.5463e-02,  1.9349e-02,
         -3.1515e-01,  6.7555e-01, -1.5425e-01,  1.7738e-01,  3.5428e-03,
          9.4087e-01,  5.9576e-01, -1.1375e-02,  4.0112e-02, -3.4671e-02,
         -3.1297e-02,  1.0498e-01, -9.4145e-02, -2.4290e-03, -6.2603e-01,
          5.3144e-02,  2.0257e-03,  2.3055e-02, -6.6301e-01,  1.3873e-01,
         -4.3477e-02, -1.8045e-02, -2.4915e-03, -1.3699e-01, -3.0484e-01,
         -4.4177e-03,  6.9683e-01, -2.1538e-01, -2.3473e-01,  1.6401e+00,
         -2.0651e-01,  1.9530e-01,  4.0724e-01,  1.7391e-01,  4.4438e-01,
         -5.5330e-01, -1.1259e-01, -5.3879e-01,  2.9545e-01,  1.7782e-02,
         -5.9832e-03,  2.2843e-01,  9.1097e-01,  4.7360e-01, -4.1238e-01,
         -5.2554e-01, -3.7283e-03, -2.8862e-01,  1.6117e-01,  1.7506e+00,
         -6.8414e-01, -3.8709e-02, -7.7478e-01, -4.9249e-01, -4.2820e-02,
         -1.6025e-01,  1.0254e+00]], device='cuda:0') tensor(0.9723, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
667000 特征值优化 tensor(2.1328, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1924e+00,  7.0664e-01,  1.0202e+00, -1.0748e+00,  2.1218e-01,
          9.8671e-01,  7.8847e-01,  2.6290e-01,  1.4823e-01, -1.0599e+00,
          2.1858e-01,  2.1794e+00,  2.1895e-01,  1.3149e-02, -3.2844e-03,
         -3.8272e-01,  4.2799e-01, -1.2903e-01, -9.9020e-02,  3.3427e-02,
          8.0552e-01,  4.7792e-01, -3.7706e-02,  5.0347e-02, -5.9530e-02,
         -1.7179e-02, -2.6755e-02, -7.3141e-02, -4.4028e-02, -5.0023e-01,
          2.7587e-02, -1.2182e-02,  2.8659e-03, -5.1029e-01,  6.8782e-02,
          5.8276e-03, -1.4836e-02,  1.8719e-03,  6.8876e-02, -4.2588e-01,
         -1.6748e-02,  5.8240e-01, -3.7584e-01, -3.0512e-01,  1.6002e+00,
         -2.8556e-01,  2.0049e-01,  2.3992e-01,  7.9553e-02,  3.2857e-01,
         -4.3809e-01, -4.9713e-02, -2.2115e-01,  1.9425e-01,  3.6784e-02,
          6.1969e-04,  1.3124e-01,  7.1065e-01,  3.8342e-01, -4.2115e-01,
         -3.1229e-01,  7.5277e-03, -2.2168e-01,  5.5930e-02,  1.5989e+00,
         -4.1119e-01, -2.3743e-01, -6.2529e-01, -1.6216e-01,  6.5575e-02,
         -1.9427e-01,  8.9783e-01]], device='cuda:0') tensor(0.9405, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
668000 特征值优化 tensor(15.6256, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.6942e-01,  5.0929e-01, -8.2055e-01, -5.8871e-01,  1.1873e-01,
          1.4614e+00,  6.6248e-01,  2.0707e-01,  4.2228e-01,  5.9976e-01,
         -2.0562e+00,  2.2387e+00, -3.3333e-01, -1.8640e-01, -3.6690e-01,
          3.9142e-01, -4.6925e-01,  1.5987e+00,  8.7471e-01,  3.0858e-01,
         -1.2313e+00, -2.5319e-01,  4.4162e-01,  4.0631e-01, -4.1582e-01,
         -8.8956e-01,  6.6865e-01, -5.2488e-01,  1.1279e-03, -6.5282e-02,
         -8.4220e-01,  1.1568e+00,  6.6403e-01, -1.0284e+00, -4.4746e-01,
          2.1966e+00, -3.3522e-01,  5.1823e-01, -7.6971e-01,  2.1351e-01,
          6.1417e-01, -5.7308e-01, -2.8764e-01, -9.9054e-01, -4.2075e-01,
         -5.1166e-01, -2.3638e+00,  7.2527e-01,  6.9868e-01, -5.4181e-01,
          1.0459e+00, -2.4976e-01,  5.4312e-02, -1.3692e+00, -2.0066e-01,
          6.1607e-01,  6.8537e-01,  3.8487e-01,  3.2254e-01,  6.4013e-01,
          1.2254e+00,  3.2819e-01,  9.5633e-01,  3.9065e-01,  1.0082e+00,
         -2.2092e-01,  1.9122e+00, -1.2844e+00,  1.7731e-01, -2.0940e-01,
         -5.9682e-01,  4.1221e-02]], device='cuda:0') tensor(7.4701, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
669000 特征值优化 tensor(2.8804, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.4588e-01,  8.6952e-02, -2.2949e-01, -1.8256e-01,  9.3457e-01,
          2.2457e+00,  1.1742e+00, -4.7979e-02,  2.3074e-01,  4.0162e-01,
         -1.3129e+00,  3.1043e+00,  3.0594e-01, -3.0767e-04, -1.4933e-02,
         -8.1846e-02,  7.4782e-02,  5.2876e-01,  1.5508e-01,  4.0655e-02,
         -2.7824e-01, -7.7771e-03, -8.2588e-02,  1.0219e-01,  2.5513e-02,
         -7.7108e-02,  8.6934e-02, -2.7769e-02,  8.7815e-03, -1.3695e-02,
         -2.0017e-01,  7.4598e-01, -5.4322e-02, -3.1217e-01, -8.2157e-01,
          1.3430e+00, -2.0953e-03,  8.6744e-02, -4.8731e-02,  1.1274e-01,
          1.7468e-01, -4.1548e-02,  4.0985e-01, -6.4993e-01,  2.2049e-02,
          5.1972e-01, -1.3595e+00, -7.1518e-02,  1.3655e-01,  5.7556e-02,
          2.0048e-01, -1.2435e-01,  8.3892e-01, -1.1339e+00,  7.9018e-01,
          1.4697e-01,  1.5894e+00, -4.8427e-01,  9.5013e-01,  1.7232e+00,
          1.0988e+00, -1.2135e-01,  2.7274e-01, -8.1547e-02,  7.1380e-01,
         -3.0173e-01,  1.3409e+00, -9.1947e-01,  1.6626e-01, -1.5913e-01,
          4.1736e-01, -6.7149e-01]], device='cuda:0') tensor(1.1905, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
670000 特征值优化 tensor(2.1673, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.1654e-01,  4.1184e-02,  1.0599e-01, -3.5076e-02,  1.1764e+00,
          2.2849e+00,  1.1662e+00,  6.9981e-04,  4.9876e-01,  8.4988e-01,
         -8.8281e-01,  3.1489e+00,  2.3303e-01,  3.0624e-02,  1.5736e-02,
          5.2727e-02,  8.5378e-02,  2.3340e-01,  1.5982e-02,  2.8266e-01,
         -1.7565e-01, -2.0572e-02,  6.5989e-02, -1.0310e-01, -4.0134e-02,
         -1.3146e-02,  3.9575e-02, -8.7015e-02, -3.6908e-02,  1.2241e-03,
         -1.5641e-01,  6.9749e-01, -3.8965e-02, -1.2933e-01, -6.9438e-01,
          1.1917e+00,  6.3586e-03,  3.1094e-02, -4.8040e-04,  7.9248e-04,
          2.1174e-01, -4.1272e-02,  7.0287e-01, -9.4036e-01,  6.7367e-02,
          4.9111e-01, -1.0602e+00, -1.1265e-01,  8.5412e-02,  9.4230e-02,
          8.3188e-02, -3.5178e-02,  3.8120e-01, -7.3423e-01,  7.4665e-01,
          4.3992e-01,  1.8171e+00, -4.9818e-01,  7.7655e-01,  1.7432e+00,
          8.5564e-01, -2.7679e-01,  2.2273e-01, -6.7158e-02,  4.9777e-01,
         -2.9519e-01,  9.8503e-01, -7.5629e-01, -1.9206e-01, -6.0276e-02,
          6.5318e-01, -8.3558e-01]], device='cuda:0') tensor(1.3746, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
671000 特征值优化 tensor(19.3205, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6625, -1.4413,  1.3428,  0.5118,  0.8720,  0.4395, -1.6132, -1.1479,
         -0.1029,  0.0644, -0.5800, -0.7243, -0.7143,  0.2922,  0.1684, -0.4333,
         -1.7722, -0.5825,  1.2334,  0.2413,  0.1901, -0.5787,  1.3324, -0.1361,
          0.9613, -0.7703, -0.2620,  0.0235,  0.7351, -1.0531,  1.3263, -0.2733,
         -1.4327,  1.0420, -1.8472, -0.8526, -0.3678, -0.6361, -0.4275,  1.9321,
          1.6507,  1.7668, -0.1215,  1.8707, -0.7068, -0.5311, -0.8184,  0.4098,
         -0.0033, -0.1249,  0.0613, -0.4783,  1.3017, -0.0282, -0.0899,  0.9753,
         -0.9428,  1.2980,  0.3486,  0.1864, -0.0437, -0.2139,  0.2801,  0.1364,
          0.3080, -1.2585,  1.4485, -0.1877,  0.1766, -2.0561,  0.2470, -1.3090]],
       device='cuda:0') tensor(10.2601, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
672000 特征值优化 tensor(4.3942, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2522, -1.1098,  1.3832,  0.9856,  1.3783,  1.4008, -0.6533, -0.6718,
          0.8513, -0.4196,  0.3836,  0.3059, -0.2734, -0.2144,  0.0466, -0.1707,
         -0.5036, -0.5937,  0.3776, -0.0132,  0.2574, -0.3980,  0.3795,  0.0847,
          0.1553, -0.1050,  0.1059,  0.0025,  0.0527, -0.5078,  0.7179, -0.1436,
         -0.8196,  0.2161, -0.8271, -0.1718,  0.0176, -0.1522,  0.3631,  0.9614,
          0.5354,  0.9033, -0.3351,  1.4050, -0.4704,  0.2630, -0.3335, -0.3071,
          0.4744,  0.4344,  0.1325,  0.2021,  1.2948,  0.2975, -0.0525,  0.2299,
         -0.0095,  0.2496,  0.0809,  0.1367,  0.1282, -0.1671,  0.3737,  0.2800,
          1.2281, -0.4842,  0.7026,  0.2822,  0.4936, -1.6190,  1.2174, -0.4673]],
       device='cuda:0') tensor(2.6618, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
673000 特征值优化 tensor(2.1886, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4742, -0.3870,  1.0807,  0.9341,  0.9679,  1.5540,  0.0839, -0.0981,
          1.1383,  0.2040,  0.2681,  0.6294, -0.0402, -0.0256,  0.1045, -0.0129,
         -0.0670, -0.2267,  0.1632,  0.0238,  0.0181, -0.3106,  0.2190,  0.0964,
          0.0174, -0.0279,  0.1343,  0.0924,  0.0138, -0.2878,  0.5049, -0.1117,
         -0.4679,  0.1990, -0.5857, -0.1351, -0.0171, -0.0247,  0.3029,  0.6442,
          0.2239,  0.5283, -0.3985,  0.7047, -0.1447,  0.1557, -0.1154, -0.3945,
          0.3992,  0.3904, -0.1291,  0.2359,  0.8932,  0.3992,  0.1041,  0.0839,
          0.1569,  0.0090,  0.4763, -0.1748, -0.0674,  0.0671,  0.0891,  0.0278,
          1.3939, -0.3693,  0.6734,  0.2889,  0.2336, -0.6136,  1.3687, -0.2347]],
       device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
674000 特征值优化 tensor(18.2663, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3938,  0.2308,  0.6063,  0.5570, -0.8573,  0.0179,  0.9092, -0.0929,
         -1.2241,  1.2977,  1.7107,  0.7473, -0.2714, -0.6309,  0.1109, -0.3833,
         -0.4148,  0.3526, -1.5935, -0.0402,  0.0111, -0.3633, -1.1627, -0.2468,
         -1.7611,  2.3571, -2.0554,  0.9141, -2.1515, -1.7722,  1.1240, -0.6569,
         -0.0318, -0.0499, -0.4430,  0.2838,  0.0115, -0.5982,  0.7126, -1.4175,
          0.4826,  1.4750, -0.0397, -0.1945, -1.8804,  0.1400,  0.1904,  0.6493,
          0.2823,  0.0166,  0.0450, -0.8458, -0.9362,  0.2142,  0.3339, -1.8860,
          1.0062,  0.0585, -0.7329, -0.1845,  0.6618,  0.1784, -0.5883,  0.2909,
         -0.5733, -0.9122, -0.6422,  0.0917,  0.1194,  1.5101, -0.0195,  0.0101]],
       device='cuda:0') tensor(9.2488, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
675000 特征值优化 tensor(3.8660, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0187, -0.4935,  1.5644, -0.0075, -0.4318, -0.2245,  0.3937,  0.5803,
         -0.2476,  0.4317,  2.4114,  1.6500, -0.0674,  0.0196,  0.0615, -0.1586,
         -0.0178,  0.3409, -0.5601,  0.0434,  0.0441, -0.0317, -0.2898, -0.0367,
         -0.7144,  1.2250, -1.1216,  0.1057, -1.1914, -0.7594,  0.3200, -0.0522,
          0.0330, -0.0309, -0.0528, -0.1242, -0.1783, -0.2885,  0.2823, -0.5308,
         -0.0278,  0.8254,  0.0871,  0.2298, -1.0186,  0.0356,  0.3357,  1.6051,
         -0.1766, -0.5960,  0.1040, -0.2679, -0.5233,  0.0890, -0.0712, -0.8973,
          0.2002,  0.0167, -0.0545,  0.1000, -0.2141,  0.3142, -0.0603,  0.1311,
          0.2591, -0.0556, -0.9824, -0.1028, -0.3017,  0.7926,  0.4889,  0.5913]],
       device='cuda:0') tensor(2.9873, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
676000 特征值优化 tensor(2.1569, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0370,  0.1198,  1.8397,  0.1382, -0.5260,  0.0414,  0.1672,  0.5752,
          0.0404,  0.4283,  2.0246,  1.8736, -0.0857,  0.0358,  0.0177, -0.0675,
         -0.0611,  0.0788, -0.1839, -0.0661,  0.0633, -0.0194, -0.0419, -0.0581,
         -0.2031,  0.2592, -0.3295, -0.0519, -0.9933, -0.5150,  0.2369, -0.0039,
         -0.0092, -0.0205, -0.0418, -0.0596, -0.0712, -0.1184,  0.1573, -0.3648,
         -0.3277,  0.7670, -0.1447,  0.2123, -0.2304, -0.0486,  0.1297,  1.6434,
         -0.2456, -0.7437, -0.0566, -0.2804, -0.4877,  0.0990,  0.2065, -0.1473,
         -0.0482,  0.0548, -0.0416,  0.0457, -0.2574,  0.2092, -0.1334,  0.1883,
          0.2451, -0.0201, -0.8919,  0.0076, -0.5689,  0.6561,  0.2871,  0.5106]],
       device='cuda:0') tensor(1.4418, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
677000 特征值优化 tensor(19.7568, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5910, -0.6258, -0.8128, -0.4305,  0.9369, -0.1714,  0.2765,  1.0965,
          1.1088, -1.3964,  0.9029, -0.3979,  0.1296, -0.4381, -0.9906, -1.9772,
          0.4865,  0.0232,  1.5921,  0.1965, -0.1931,  0.4399,  0.0497,  0.1911,
          1.4858, -0.7418,  0.7733, -0.7663, -0.5597,  0.1690, -1.4640, -0.0748,
          0.4582, -1.4781, -1.5201,  1.6236, -0.0087,  0.5173,  0.7242,  0.6959,
          0.3273, -1.0674,  2.0746,  0.5764, -0.7278,  1.7931, -0.8098,  1.3060,
         -0.2485, -0.9772,  1.4246,  2.0887, -1.0383, -0.5055, -0.7632, -1.2377,
          0.2353,  0.6845, -0.9188,  0.3285, -0.0197, -0.2424, -1.8674, -1.9601,
          0.3778, -1.6326, -0.7507,  0.7382,  1.0832, -0.0081, -1.4572,  0.7333]],
       device='cuda:0') tensor(8.9649, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
678000 特征值优化 tensor(4.5833, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3461, -1.0740,  0.1340, -0.5099,  1.5696,  0.7813,  1.2273,  0.0135,
          1.6040, -0.3608,  1.6755,  0.5349,  0.1391, -0.0681, -0.0991, -0.9638,
         -0.1286, -0.0491,  0.5501, -0.0318, -0.0505,  0.3687,  0.2549, -0.2737,
          0.3487, -0.1126,  0.1566,  0.1146, -0.5148,  0.2704, -0.7435,  0.0258,
          0.0233, -0.4470, -0.7479,  0.5956,  0.0169,  0.2614,  0.0382, -0.0084,
         -0.0815, -0.0289,  1.2639,  0.1467, -0.9718,  1.3630, -0.8027,  1.3153,
         -0.5273, -0.6989,  0.4188,  1.1145, -0.2867,  0.3323, -0.0788, -0.3209,
          1.1061, -0.2279, -0.5593,  0.2116, -0.6797,  0.3693, -0.9362, -1.0040,
          0.8851, -0.8137,  0.2786, -0.3162,  0.0698,  0.5223, -0.4327,  0.0425]],
       device='cuda:0') tensor(2.7532, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
679000 特征值优化 tensor(2.2484, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2986, -0.2372,  0.3287, -0.1476,  1.3647,  1.0442,  1.5274, -0.5907,
          1.4443,  0.1704,  1.3459,  0.5790,  0.0122,  0.0401, -0.0115, -0.4495,
         -0.1084, -0.0080,  0.0364, -0.0408, -0.0171,  0.1758,  0.1663, -0.1719,
          0.2121,  0.0205,  0.0233, -0.0424, -0.3366,  0.0919, -0.5090, -0.0379,
         -0.0209, -0.0941, -0.6824,  0.3208, -0.0677,  0.4072,  0.0723, -0.0205,
         -0.3170, -0.0199,  0.4526,  0.0259, -0.3592,  0.5545, -0.2906,  0.4892,
         -0.3077, -0.3082,  0.0330,  0.6953, -0.2818,  0.4732, -0.0215, -0.2983,
          1.0393, -0.4802, -0.6963, -0.3006, -0.8346,  0.3998, -0.5715, -0.4617,
          0.6952, -0.5137,  0.4846, -0.3475, -0.3122,  0.5705, -0.0617,  0.0224]],
       device='cuda:0') tensor(1.2056, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
680000 特征值优化 tensor(20.9620, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.6612e-01, -2.6383e-02,  5.0102e-01,  1.6037e+00,  3.5842e-01,
          1.9262e-01, -2.3427e-01, -3.6229e-01, -1.3854e+00,  8.1537e-01,
          2.5874e+00, -5.7018e-01,  1.7326e-01,  8.2961e-02, -2.5386e-02,
          1.5726e-02, -8.7391e-01,  2.7621e-01,  1.8298e-01,  1.7314e+00,
         -5.3771e-02,  4.1008e-01,  1.0198e+00, -8.3631e-01, -2.3152e+00,
         -1.5862e+00,  2.0322e+00,  2.6945e-01,  1.9338e-01, -7.0490e-01,
          1.6790e+00,  4.6941e-01, -5.8319e-01,  2.1289e+00, -6.7808e-01,
          1.6561e+00,  3.7353e-01, -6.4159e-04,  7.2323e-01,  6.7063e-01,
         -2.6393e-01,  1.0388e-01, -3.9587e+00, -7.6883e-01,  8.1409e-01,
         -1.5889e+00, -3.6116e-01, -2.2266e-01,  3.0888e-01, -1.5295e-01,
          1.7153e-01,  2.2058e+00,  1.4235e+00,  1.5356e-01,  2.8678e-01,
          7.6309e-01,  1.0349e+00, -4.4690e-01, -2.7624e+00, -1.2950e-01,
         -4.1471e-01,  2.6689e-02, -1.4676e+00, -2.6554e+00, -1.0514e+00,
          1.1131e+00, -2.0834e-01, -3.0028e-01,  1.8850e+00, -5.0533e-01,
          1.1980e+00, -7.9459e-02]], device='cuda:0') tensor(10.5294, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
681000 特征值优化 tensor(7.9046, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.8849e-01,  7.7590e-01,  1.2609e+00,  9.0260e-01,  1.2401e+00,
          1.2060e+00,  7.6882e-01,  9.9111e-02, -3.5341e-01,  1.0010e+00,
          3.6404e+00,  4.4017e-02,  2.2546e-04,  6.5507e-03,  3.1424e-02,
         -6.2345e-02, -8.4599e-02, -6.0494e-02, -3.1995e-01,  7.2536e-01,
          2.9605e-02, -3.0892e-01,  2.4973e-01, -3.3248e-02, -1.1574e+00,
         -6.3309e-01,  9.8954e-01, -2.9809e-02,  1.4888e-02, -3.5286e-01,
          9.2073e-01,  2.6968e-01, -8.0336e-01,  1.1589e+00, -1.9504e-01,
          5.8597e-01, -2.0715e-01,  2.3970e-01,  6.6760e-02,  1.1290e-01,
         -5.1548e-01, -8.5881e-02, -2.9727e+00, -4.8452e-02,  9.7958e-01,
         -8.4267e-01, -3.5664e-02,  3.1201e-01,  2.7664e-01, -9.5888e-02,
         -4.6777e-01,  1.3037e+00,  1.3508e+00,  3.1165e-01, -3.0287e-01,
          8.9827e-01,  1.6747e+00,  5.1009e-02, -1.9347e+00,  2.6387e-01,
          2.9596e-01,  2.8385e-02, -3.0541e-01, -1.5871e+00, -7.0873e-01,
          5.4739e-01, -5.1383e-01,  1.1648e-01,  2.2442e+00, -9.0920e-01,
          8.7790e-01, -2.6068e-01]], device='cuda:0') tensor(4.7896, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
682000 特征值优化 tensor(2.7737, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6655e+00,  1.1954e+00,  1.5681e+00,  5.6777e-01,  1.5642e+00,
          1.3741e+00,  8.9408e-01,  3.4582e-01,  2.7380e-01,  5.5783e-01,
          4.0481e+00,  1.3585e-01,  3.4757e-02, -3.1181e-02,  1.9093e-02,
         -9.1180e-03, -1.9457e-04, -6.2342e-02, -6.3669e-03, -5.3375e-04,
          5.9269e-02, -3.4940e-01, -3.2014e-02,  4.1508e-02, -5.1233e-01,
         -2.5012e-01,  2.8767e-01, -2.5587e-01, -2.9183e-02, -3.5085e-01,
          4.0907e-01,  3.4647e-01, -8.5505e-01,  7.5843e-01, -1.3316e-02,
         -3.5047e-03, -1.9303e-01,  3.0131e-01,  7.9733e-03,  1.6730e-02,
         -9.3284e-01, -1.2719e-02, -1.9817e+00, -1.8015e-02,  4.6183e-01,
         -9.3327e-01, -1.7132e-01,  4.5438e-01,  5.2861e-01, -2.7452e-01,
         -4.1165e-01,  8.7712e-01,  7.9208e-01,  4.9119e-02,  3.1264e-02,
          1.4862e+00,  1.3532e+00, -1.5437e-01, -1.2587e+00, -6.6677e-02,
         -1.2305e-01,  5.2758e-02,  1.4907e-01, -1.0615e+00, -2.4356e-01,
          1.6254e-01, -2.5189e-01,  9.0076e-02,  1.7332e+00, -4.3982e-01,
         -2.1207e-01,  1.3976e-01]], device='cuda:0') tensor(1.8037, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
683000 特征值优化 tensor(2.1768, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9066e+00,  1.6612e+00,  1.2879e+00,  6.6097e-01,  1.2609e+00,
          9.9878e-01,  6.5087e-01,  8.3738e-01,  3.2470e-01,  1.1957e-01,
          4.0533e+00,  1.3452e-01,  4.9404e-02,  4.7209e-02,  5.7118e-02,
         -8.1534e-02,  8.2193e-02,  5.6764e-02,  1.0243e-01,  1.4164e-03,
          8.0423e-02, -3.1787e-01, -4.4743e-02,  2.8312e-01, -1.7594e-01,
          3.1277e-02,  2.9213e-02, -1.1522e-02,  1.2954e-01, -3.1213e-01,
          1.9164e-01,  2.4969e-01, -8.0620e-01,  6.3344e-01, -1.0969e-02,
          3.1072e-02, -7.6657e-02,  1.1659e-01,  2.5943e-02,  8.8428e-03,
         -1.0241e+00, -1.7875e-02, -1.5927e+00, -2.0595e-01,  3.9243e-01,
         -1.1573e+00, -1.6330e-01,  4.8161e-01,  7.6259e-01, -2.0653e-01,
         -1.4478e-01,  7.0204e-01,  5.3933e-01, -7.5894e-02,  1.7855e-01,
          1.0736e+00,  3.1906e-01,  1.2814e-01, -9.2875e-01,  5.4062e-02,
         -1.1296e-01, -3.1687e-02,  2.2128e-01, -7.8248e-01, -2.2520e-01,
          1.9680e-01, -6.5511e-02,  3.2965e-02,  2.0928e+00, -4.3908e-01,
         -3.2419e-02,  6.4390e-02]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
684000 特征值优化 tensor(16.2489, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.7444, -0.2226, -0.4716,  0.0244,  0.4306,  0.2432,  1.5854, -0.1170,
          0.2589,  1.2546,  1.1345,  0.5917, -0.1372, -3.8028,  0.1734, -1.1598,
         -0.2276, -0.8366,  0.9977,  1.1388,  0.2418,  0.3231, -0.7547, -1.7868,
          0.0699,  0.2310,  1.7962,  1.8823, -0.4722, -0.3731,  0.7153, -0.7429,
         -1.0583, -1.7126,  0.0184,  0.4526,  0.4807,  1.6819,  1.1488, -1.2513,
         -1.0824, -0.6801, -0.1199,  0.2635, -0.0990,  1.1885, -0.3687, -0.9265,
          1.0011,  0.1453,  0.5504, -0.1316,  0.0733, -0.1325, -0.8212, -0.4543,
          1.7810,  0.9938, -2.7319,  1.7822, -1.4353,  0.7344,  1.3285,  0.6809,
          0.3248,  1.7029,  0.2168,  0.7811,  0.1710,  0.9685, -0.3830, -0.2768]],
       device='cuda:0') tensor(9.1930, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
685000 特征值优化 tensor(4.4855, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1424, -0.8094,  0.0986,  0.1318,  1.3410,  1.1695,  2.5148, -0.5103,
          1.1615,  0.7251,  1.9847,  1.2223, -0.0047, -2.6426,  0.2990, -0.2335,
          0.0616, -0.0923,  0.1661,  0.3376, -0.0102, -0.0142, -0.6478, -0.9338,
         -0.5180,  0.4213,  0.9195,  1.1449, -0.0283, -0.0284,  0.0936, -0.0228,
         -0.4600, -0.7410,  0.2106, -0.1340,  0.5489,  0.8444,  0.5942, -0.6885,
         -0.3739, -0.4822,  0.1720, -0.1187, -0.2946,  0.4385, -0.0717, -0.3723,
          0.4929, -0.1140, -0.0732, -0.0541,  0.5632, -0.5497,  0.0846, -0.6249,
          2.0858, -0.0660, -1.7286,  0.8060, -0.6338,  0.8217,  0.5354, -0.0812,
          0.3577,  0.8400, -0.2763,  0.2144,  0.7070,  0.2969,  0.0313,  0.4078]],
       device='cuda:0') tensor(2.8896, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
686000 特征值优化 tensor(2.7620, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.7531e-01, -4.9315e-01,  4.7774e-01,  1.0164e-01,  1.9406e+00,
          1.1012e+00,  2.6621e+00, -3.3512e-01,  1.1699e+00,  3.7309e-01,
          2.1525e+00,  1.0445e+00, -1.4861e-02, -1.6285e+00,  3.0771e-01,
         -1.5919e-01, -1.5802e-01, -8.7152e-03,  9.0674e-02,  5.1687e-02,
          3.4701e-03, -7.3146e-05, -2.0141e-01, -3.0949e-01, -3.1326e-01,
          2.9563e-01,  4.8542e-01,  6.9721e-01, -1.1992e-03, -2.3594e-02,
          3.9291e-02,  1.3109e-01, -3.7024e-01, -1.8303e-01,  2.0155e-01,
         -1.5183e-01,  2.4003e-01,  6.1827e-01,  4.6654e-01, -5.1129e-01,
         -3.2386e-01, -2.3478e-01, -2.4228e-01,  4.4726e-02,  3.8524e-02,
          2.5547e-01, -1.7741e-02, -2.4694e-01,  2.5045e-01,  1.0308e-01,
         -1.1555e-01, -1.4787e-02, -2.5490e-01, -1.7520e-01,  2.1050e-01,
         -3.2678e-01,  1.6410e+00, -6.5085e-01, -1.2904e+00,  4.7434e-01,
         -4.5555e-01,  7.4259e-01,  3.1871e-01, -1.9313e-01,  1.4892e-01,
          6.4059e-01, -1.3821e-01, -2.3349e-02,  7.2211e-01,  1.1240e-01,
         -2.2657e-01,  3.4696e-01]], device='cuda:0') tensor(1.4046, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
687000 特征值优化 tensor(2.1532, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2230e+00, -7.6189e-01,  5.4456e-01,  1.1903e-01,  2.4042e+00,
          4.7456e-01,  2.6087e+00, -3.2398e-01,  1.0042e+00,  3.1971e-01,
          2.2189e+00,  1.0705e+00, -1.9363e-02, -9.7004e-01,  3.1450e-01,
         -1.5841e-01, -3.8997e-02,  1.9494e-02, -3.9931e-03,  3.7050e-02,
          1.5169e-03,  1.1263e-03,  2.9930e-02, -4.9242e-03, -1.9987e-01,
          5.7991e-02,  1.7148e-01,  1.6324e-01,  1.6529e-02, -2.5521e-02,
          3.1292e-02,  6.4289e-02, -1.8429e-01, -1.5887e-02,  2.9174e-02,
         -7.8992e-02,  1.1146e-01,  5.1367e-01,  4.5781e-01, -4.9050e-01,
         -3.0164e-01, -1.1915e-01, -4.0880e-01,  5.5137e-02,  5.6832e-02,
          3.7874e-01, -2.6495e-03, -1.8998e-01,  2.4449e-01,  9.0919e-02,
         -1.3311e-01, -1.1665e-02, -8.2166e-01,  5.8034e-02,  8.6235e-02,
         -2.2954e-01,  1.4941e+00, -7.2322e-01, -1.0820e+00,  3.1092e-01,
         -4.0184e-01,  7.2446e-01,  2.3601e-01, -2.0738e-01,  1.1350e-01,
          5.9974e-01, -2.0465e-01, -7.6962e-02,  6.5794e-01,  1.9600e-01,
         -2.4994e-01,  3.3787e-01]], device='cuda:0') tensor(0.9382, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
688000 特征值优化 tensor(12.0145, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3617, -1.4509,  0.8681,  2.0142,  0.7446, -0.6948,  0.5038,  0.5634,
          0.7636, -2.3473,  0.9619, -0.0767,  0.5966, -1.4996,  0.7146, -0.2618,
          0.4941,  0.7401,  0.5329,  0.2875, -1.0329, -0.3330, -0.3784,  0.4714,
          0.4039,  1.0685, -0.6420,  1.5127,  0.1890,  0.2596, -0.4993, -0.5338,
         -0.6860, -0.0334,  0.4555,  0.2877,  0.7031,  0.1899, -0.1914, -0.0328,
         -0.2011,  1.2910,  1.5525, -1.0380, -0.1885,  0.0223,  0.1783, -2.2104,
          0.4425, -0.9645, -1.2577,  1.2956,  1.6839,  0.0854, -1.2150, -0.0245,
          0.3559, -0.1034, -0.3484, -0.6068, -0.8271,  0.6152, -0.0519,  0.8908,
         -3.7637, -1.2510, -0.2690, -0.2250,  0.2373,  0.2539,  0.6281, -0.5568]],
       device='cuda:0') tensor(7.1783, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
689000 特征值优化 tensor(3.1629, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.9767e-01, -1.3034e+00,  1.6272e+00,  2.2620e+00,  1.1712e+00,
         -4.5733e-01,  6.3229e-01,  7.7110e-01,  1.7911e+00, -1.5942e+00,
          3.6847e-01,  6.8419e-01,  5.2842e-01, -5.5843e-01,  2.8723e-01,
         -1.7116e-02, -3.1339e-02,  4.4100e-02, -1.5835e-02,  1.3955e-01,
         -5.4403e-01, -2.4245e-01,  9.0469e-04,  1.7469e-03, -3.9337e-01,
          3.9490e-01,  3.6083e-01,  5.9055e-01,  1.9062e-03,  2.4018e-02,
         -3.7056e-01, -2.9740e-02, -1.7281e-01, -2.2323e-02,  3.6062e-02,
          1.3849e-01, -6.1224e-02, -5.6894e-02, -3.2722e-02,  5.5376e-02,
         -5.9111e-02,  5.3571e-01,  9.8523e-01, -3.4770e-01,  2.6384e-01,
         -9.2438e-01,  5.6811e-02, -1.3656e+00,  7.2769e-01, -3.2116e-01,
         -7.9212e-01,  4.3425e-01,  1.1243e+00, -1.0642e-01, -3.9143e-01,
         -3.7054e-01, -1.9610e-02,  5.7194e-02,  1.4601e-02, -1.2312e-01,
         -2.9392e-01,  3.6245e-01, -1.3284e-01,  2.3745e-01, -2.7195e+00,
         -2.6801e-01,  4.6501e-01,  1.1610e-01, -1.4597e-01,  2.7899e-01,
          1.2940e+00,  1.0820e-01]], device='cuda:0') tensor(1.1945, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
690000 特征值优化 tensor(2.1334, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0452e+00, -1.2657e+00,  1.7184e+00,  2.2159e+00,  1.0822e+00,
         -2.1265e-01,  1.5119e-01,  1.0293e-01,  2.2487e+00, -1.4563e+00,
         -4.2091e-02,  7.7303e-01,  5.2420e-01, -3.9008e-01,  3.4192e-01,
         -6.0473e-02,  1.6378e-02, -1.0447e-03, -3.2616e-02,  4.9899e-02,
         -5.4450e-01, -1.2068e-01,  6.3201e-02,  1.0544e-02, -4.6508e-01,
          4.9947e-01,  3.9490e-01,  3.7714e-01,  2.9347e-02,  2.1245e-02,
         -3.1559e-01, -3.2122e-02, -6.8175e-03, -2.1825e-02, -1.4420e-02,
          1.5554e-01,  2.4376e-02, -6.2051e-03,  9.4688e-02,  2.7139e-02,
         -3.6903e-02,  4.5909e-01,  9.1791e-01, -9.1469e-02,  4.7299e-02,
         -9.1128e-01,  7.5222e-02, -1.1808e+00,  3.2053e-01,  1.1783e-01,
         -9.2845e-01,  2.0582e-01,  2.4319e-01,  2.0301e-01, -6.2006e-02,
         -3.0764e-03, -1.0031e-03,  5.8894e-02, -7.1154e-03,  1.1406e-02,
         -3.0498e-01,  2.2132e-01, -7.0350e-02,  2.9777e-02, -2.2474e+00,
         -7.9169e-02,  6.1712e-01,  3.3348e-02, -2.9409e-01,  1.9197e-01,
          1.1944e+00,  1.6163e-01]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
691000 特征值优化 tensor(3.4211, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.4377e-01, -8.2990e-02,  1.7461e+00, -2.3150e-01,  1.4280e+00,
          1.5506e+00,  7.9059e-01,  3.1384e-01,  5.9849e-01,  2.6445e-01,
         -3.3526e-01, -8.9201e-01, -6.8102e-02,  7.5065e-02, -4.8451e-02,
          8.2244e-02,  9.7415e-02,  1.5433e-01, -1.3904e-01,  6.8623e-04,
          1.0577e-01,  1.5276e-01, -1.0486e-01, -1.5762e-01,  1.6157e-01,
         -1.4651e-01, -7.3338e-02, -5.5360e-02,  2.1660e-02, -4.6387e-01,
          2.5812e-03,  1.7363e-01,  5.2846e-01, -7.5509e-01,  2.1688e-02,
          7.2576e-03,  1.8850e-01,  9.3716e-02,  8.4658e-01,  3.9623e-02,
          2.6026e-01,  4.4523e-02, -8.3155e-01,  1.1345e-01,  7.6675e-02,
         -5.7303e-02,  5.1996e-01,  3.7100e-01, -5.5719e-01,  1.1338e+00,
          7.4626e-02, -1.1939e+00, -1.0640e+00, -1.8402e-02,  1.6825e-01,
         -5.6045e-01,  5.9986e-02,  8.8162e-01, -4.5363e-01,  2.8510e-01,
         -3.8880e-01,  4.6640e-01, -1.6608e-01,  6.2222e-01,  1.3049e+00,
          3.2273e-01, -2.3532e-01,  5.7425e-01,  1.4663e+00, -7.7004e-01,
          4.6900e-01,  4.5728e-03]], device='cuda:0') tensor(1.5612, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
692000 特征值优化 tensor(2.2041, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4798, -0.0300,  1.9002, -0.5001,  1.5532,  1.7549,  0.4677,  0.4794,
          0.4164,  0.3383, -0.1163, -0.2970, -0.0678,  0.2270, -0.2086,  0.0437,
          0.0750, -0.0289, -0.0441, -0.0080,  0.0768,  0.2014, -0.2155, -0.1350,
          0.1106, -0.1461, -0.0326,  0.0197,  0.4191, -0.3560, -0.0183,  0.0309,
          0.3872, -0.4349, -0.0247, -0.0055,  0.0720,  0.1278,  0.6835, -0.0423,
          0.3840,  0.0750, -0.4381,  0.1232,  0.0807,  0.0488,  0.1721,  0.5958,
         -0.7790,  0.8044,  0.0720, -0.9415, -0.8009,  0.0635, -0.2383, -0.8320,
         -0.3365,  0.6139, -0.3206, -0.0044, -0.2400,  0.2407, -0.3880,  0.3189,
          0.6990,  0.4343,  0.0087,  0.2781,  1.4559, -0.7608,  0.0053, -0.0263]],
       device='cuda:0') tensor(1.0776, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
693000 特征值优化 tensor(2.1039, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0422e-01,  2.3484e-01,  1.9168e+00, -6.5349e-01,  1.4683e+00,
          1.7449e+00,  3.4553e-01,  2.1059e-01,  1.1619e-01,  2.4902e-01,
         -1.0236e-01, -2.0420e-02, -6.1942e-02,  2.4198e-01,  2.0561e-02,
         -2.5188e-02, -2.4293e-02, -2.9007e-02, -3.4032e-02, -6.3973e-02,
          8.7016e-02,  1.4930e-01, -2.4502e-01,  1.1651e-02,  5.7265e-02,
         -1.7407e-01, -2.9946e-02, -7.0107e-03,  5.4376e-01, -3.0125e-01,
         -1.3883e-02,  3.5058e-02,  3.4161e-01, -3.8262e-01, -3.8870e-02,
         -3.7421e-02, -1.8161e-02, -4.3412e-03,  5.1556e-01, -5.6695e-02,
          2.9294e-01,  5.8632e-02, -1.3201e-01,  3.9884e-02,  5.2365e-03,
         -3.1495e-02,  1.3373e-01,  6.7337e-01, -8.2281e-01,  6.9419e-01,
         -1.9024e-03, -7.7225e-01, -7.2438e-01,  1.1330e-01, -8.6923e-02,
         -8.4745e-01, -2.8101e-01,  5.3489e-01, -1.1211e-01, -3.5166e-02,
         -1.4238e-01,  9.7224e-02, -4.1619e-01,  2.3923e-01,  2.3111e-01,
          4.7360e-01,  2.0722e-01,  1.4254e-01,  1.3928e+00, -8.2700e-01,
         -4.7790e-02,  7.6182e-03]], device='cuda:0') tensor(1.1880, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
694000 特征值优化 tensor(8.8280, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.6259e-01, -5.3457e-02, -1.0972e+00,  3.8244e-01,  4.8335e-01,
         -6.9545e-02,  8.6657e-02, -1.6102e+00,  2.6592e+00, -2.8396e-01,
         -3.3637e-01, -2.1559e-01, -2.5396e-01, -3.8112e-02,  3.4146e-02,
          1.0112e+00,  4.8797e-01,  3.0561e-01, -4.3432e-01, -8.5015e-02,
         -1.8356e-01, -5.6899e-01, -6.6376e-01,  1.0838e-01, -3.5981e-01,
         -1.5223e-01, -3.3040e-01,  2.4415e-01,  2.7150e-03,  3.1407e-01,
         -3.0290e-01,  8.0643e-01,  9.0230e-01,  4.7432e-01, -2.5678e-03,
          2.9784e-01, -1.2527e+00,  9.1084e-01, -1.1189e+00,  7.7407e-01,
          6.5601e-01, -1.1856e+00, -1.1600e+00, -1.0536e+00,  2.1151e+00,
         -2.5233e-01,  8.2860e-01, -4.4914e-02,  2.1639e-01, -7.9237e-01,
          2.6739e-01,  3.8579e-01, -3.2497e-02, -1.4482e-01, -1.4832e+00,
         -1.7167e-01,  1.9528e-01, -5.3817e-01, -1.0466e-01, -1.1312e-01,
          1.2563e-01,  3.6288e-01,  4.5297e-01,  4.1106e-01,  5.4046e-01,
         -8.8363e-01, -9.8837e-01, -9.6644e-01,  2.0637e+00, -6.3153e-01,
          9.5985e-01,  2.5355e-01]], device='cuda:0') tensor(5.2337, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
695000 特征值优化 tensor(2.2620, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3356,  0.5431, -0.2877,  0.3108,  0.8381,  0.0927,  0.7204, -1.8904,
          3.1842, -0.8766,  0.2477,  0.4920,  0.0260,  0.0859,  0.2875,  0.1953,
          0.0852,  0.1462, -0.1647,  0.0374,  0.0267, -0.0565, -0.0327,  0.0316,
         -0.1390, -0.0041, -0.0435,  0.1038, -0.0069,  0.0779, -0.0085,  0.2970,
          0.6677,  0.0208, -0.3016,  0.1362, -0.6543,  0.4271, -0.5540,  0.5487,
          0.2281, -0.4118, -0.5233, -0.4949,  1.3320,  0.0716,  0.2886, -0.1083,
          0.0556,  0.0528, -0.0849,  0.1200,  0.1176, -0.3092, -0.5890,  0.7840,
         -0.1217,  0.1220, -0.1503,  0.1117,  0.4153,  0.4273, -0.2978,  0.0685,
          1.0035, -0.3209, -0.7201, -0.5300,  1.6834, -0.6290,  0.8074,  0.2075]],
       device='cuda:0') tensor(0.8821, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
696000 特征值优化 tensor(2.1060, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1859,  0.8501,  0.0744,  0.2620,  0.8893,  0.3668,  0.7963, -1.9042,
          3.2268, -1.0164,  0.3711,  0.4525,  0.1261,  0.1603,  0.2258,  0.1339,
          0.0523,  0.0759, -0.0786,  0.0084,  0.1495, -0.0342,  0.0144,  0.0109,
         -0.1549,  0.1744,  0.0671, -0.0066,  0.0092,  0.0660, -0.0141,  0.2365,
          0.5532,  0.0278, -0.3686, -0.0614, -0.5559,  0.4150, -0.5202,  0.4731,
          0.1475, -0.3767, -0.4073, -0.4132,  1.2027, -0.0655,  0.2382, -0.0601,
          0.0335,  0.0359, -0.0896,  0.1096, -0.0640, -0.1430, -0.4113,  0.8920,
         -0.0957,  0.1189, -0.2121,  0.1082,  0.3665,  0.2939, -0.4726,  0.1497,
          1.0467, -0.2594, -0.6573, -0.3802,  1.4678, -0.5582,  0.4719,  0.4432]],
       device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
697000 特征值优化 tensor(6.5501, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0538, -0.9642,  0.6620, -1.8143, -0.0390,  0.3160, -0.6699,  0.7747,
          1.7162,  0.5365,  1.0588,  2.0847, -0.6178, -0.2182,  0.0327, -0.1925,
          0.0781, -0.4538, -1.8371, -0.6302,  0.7404,  0.4349,  0.1353, -0.1186,
         -0.7429, -0.2461, -0.8518,  1.8527,  0.0882, -0.5607,  0.0693,  0.4234,
         -0.8668, -0.8618,  0.4319,  0.5981, -0.8163, -0.0260,  0.1585, -0.2077,
          0.3898, -0.3766,  2.3055, -0.3975, -0.1998, -0.7254, -0.4586, -0.1158,
         -0.3876,  0.9811,  0.7024, -0.7044,  1.1387, -0.5772,  0.1028,  0.4192,
          1.4504,  0.7683,  0.9023, -0.5581,  0.4701, -0.7848,  0.0793, -0.5866,
         -0.5857, -0.0572, -1.8066,  0.5112,  1.2288, -1.4616, -0.4732, -1.4161]],
       device='cuda:0') tensor(4.2191, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
698000 特征值优化 tensor(2.4101, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6325, -1.0369,  0.8691, -0.9463, -0.0950,  0.6242, -0.0739,  0.9706,
          1.4885,  0.5180,  1.5757,  2.5722, -0.3525, -0.0167, -0.0542, -0.2423,
         -0.0810,  0.1576, -0.8465, -0.4351,  0.3435,  0.1248,  0.0638, -0.0374,
         -0.0938, -0.2174, -0.4583,  0.9321, -0.0126, -0.1425, -0.0237,  0.2359,
         -0.4874, -0.3467,  0.2436,  0.5529, -0.2269, -0.0158,  0.2311, -0.1660,
          0.2492, -0.0655,  1.3225, -0.2093, -0.0718, -0.9871,  0.0556, -0.7678,
         -0.0867,  0.3608,  0.7125, -0.0665,  0.2188, -0.0728,  0.1976,  0.3320,
          1.0036,  0.2787,  1.0830, -0.9132,  0.5254, -0.3571,  0.6773, -0.6523,
         -0.3277,  0.3368, -1.2357,  0.2864,  1.1131, -1.2960, -0.2847, -0.6808]],
       device='cuda:0') tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
699000 特征值优化 tensor(2.1423, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.2289e-01, -7.8502e-01,  5.8906e-01, -4.8394e-01,  9.7137e-02,
          5.0963e-01, -2.6244e-02,  7.1299e-01,  1.3146e+00,  5.2168e-01,
          1.7770e+00,  2.6090e+00, -3.0916e-01,  2.5589e-02, -1.3492e-02,
         -2.4958e-01, -1.2464e-01,  2.1819e-01, -5.2475e-01, -1.7107e-01,
          2.8917e-01,  1.0300e-01,  5.8275e-02,  4.5903e-03,  4.5248e-02,
         -7.9117e-02, -3.9501e-01,  6.5423e-01, -7.0224e-03, -1.2448e-01,
         -1.9548e-02,  1.5394e-01, -2.6835e-01, -3.2048e-01,  1.6463e-01,
          4.3165e-01, -1.2315e-01,  4.8454e-02,  1.5882e-01, -1.6263e-01,
          2.5068e-01, -5.9820e-02,  1.0869e+00, -6.9505e-02, -2.2165e-03,
         -1.2075e+00,  1.4222e-01, -6.7083e-01, -3.7356e-02,  2.2644e-01,
          5.6533e-01, -9.5967e-03, -9.3398e-02,  7.6859e-02,  8.4202e-03,
         -3.0027e-02,  8.3750e-01,  3.0931e-01,  9.7681e-01, -7.3419e-01,
          3.3920e-01, -4.3226e-01,  6.5648e-01, -7.1877e-01, -3.8032e-01,
          3.3957e-01, -9.4172e-01,  1.5247e-01,  1.2267e+00, -1.2390e+00,
         -5.6767e-01, -4.0598e-01]], device='cuda:0') tensor(1.3491, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
700000 特征值优化 tensor(10.5258, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.4318e-01, -3.0306e+00,  5.0157e-01, -9.4556e-01,  1.1492e+00,
          6.3712e-02,  1.3420e+00,  2.2725e+00, -1.1379e+00,  1.5009e-01,
          8.0835e-01,  1.3583e+00, -1.7814e+00,  3.3865e-01, -9.7537e-02,
          8.7426e-01,  1.1854e+00,  3.8580e-02,  7.1292e-01,  2.1054e-01,
          1.7418e+00, -4.2946e-01, -1.6685e-01, -1.1690e+00, -4.9389e-01,
          8.8738e-02,  1.1497e+00,  6.1773e-01,  3.9109e-01, -6.5424e-01,
          2.7726e-01,  7.8382e-01, -3.3911e-01,  1.0833e-02, -2.5423e-02,
         -2.4136e-02,  1.7513e-01,  2.5540e-01, -2.4971e-01, -1.6877e-01,
          7.5013e-01, -6.2763e-01, -3.4141e-01,  8.9333e-01, -3.4614e-01,
          5.3825e-01, -2.8745e-01, -6.9051e-01, -7.6407e-01,  2.5068e-01,
         -1.0965e+00, -7.1381e-02,  1.0451e+00,  4.2395e-02,  1.2955e+00,
          4.4351e-02,  2.6041e-01,  3.3748e-01,  8.7297e-03, -2.9571e-03,
          1.3410e+00, -8.2788e-01, -1.0414e+00,  3.9096e-01, -1.9487e-01,
          1.2342e-01, -9.4741e-02,  6.0415e-01,  3.9651e-01, -9.2473e-01,
          7.2293e-02,  6.1885e-01]], device='cuda:0') tensor(6.3690, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
701000 特征值优化 tensor(2.7460, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.8202e-01, -3.4691e+00,  8.2806e-01, -3.6630e-01, -2.6070e-02,
          1.6745e-01,  1.8243e+00,  1.9824e+00, -7.0041e-01,  3.4027e-01,
          1.0591e+00,  1.5319e+00, -7.9495e-01, -9.6502e-03,  2.4593e-02,
          3.2981e-01,  3.6668e-01, -2.8614e-01,  2.6248e-01,  2.2421e-03,
          9.4193e-01,  1.2027e-03,  1.3760e-01, -4.7083e-01, -4.1869e-02,
         -1.1765e-01,  4.1297e-01, -2.1086e-02,  1.5076e-01, -2.2139e-01,
          4.7863e-02,  3.2087e-01, -1.9725e-01,  1.8310e-02, -4.8337e-03,
          2.1125e-02,  1.6199e-01,  2.5881e-01, -1.2705e-01, -2.0932e-01,
          4.1274e-01, -4.9934e-01,  3.9192e-01,  1.2153e+00,  7.5117e-02,
          7.2023e-02, -7.0093e-01, -5.2362e-01, -1.3533e-01,  2.0354e-01,
         -3.1735e-01, -1.9792e-01,  1.3962e-01,  2.2039e-02,  4.7137e-01,
         -1.5428e-01, -2.8316e-01,  1.7707e-01,  2.2682e-02, -1.0022e-02,
          1.0979e+00, -8.3430e-01, -9.2095e-01,  2.2276e-01,  1.0212e-01,
          1.7852e-01,  8.7385e-02,  2.7862e-01,  6.5064e-01, -5.3219e-01,
         -1.6688e-01,  6.4401e-01]], device='cuda:0') tensor(2.1560, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
702000 特征值优化 tensor(2.1212, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.9430e-01, -3.1050e+00,  6.8273e-01, -1.1171e-01,  1.6779e-02,
          2.6842e-01,  1.5059e+00,  1.3987e+00, -5.7352e-01,  2.5231e-01,
          1.0286e+00,  1.3059e+00, -5.8351e-01,  1.4134e-03,  1.7949e-02,
          3.2561e-01,  3.1413e-01, -2.7962e-01,  2.4827e-01,  1.9646e-03,
          7.6772e-01,  1.4950e-03, -1.9358e-02, -2.4179e-01,  3.9739e-03,
         -1.4004e-01,  3.2485e-01,  1.7527e-02,  6.9985e-02, -1.5333e-01,
          2.6400e-02,  5.1500e-02, -1.6171e-02,  2.2338e-02, -3.5412e-02,
          1.1085e-02,  3.9843e-01,  3.8613e-01, -7.8534e-02, -1.4399e-01,
          3.7087e-01, -3.7977e-01,  1.1829e-01,  9.9261e-01,  1.1130e-01,
          1.3103e-01, -5.6244e-01, -4.3191e-01,  7.1048e-02,  9.5257e-02,
         -1.8363e-01, -1.9196e-01, -2.1231e-01,  1.9350e-01,  6.2212e-02,
         -1.8112e-03, -3.4064e-01,  2.0317e-01,  2.8953e-02, -7.2828e-02,
          1.1697e+00, -4.0062e-01, -1.0843e+00,  5.7411e-01,  1.5317e-01,
          1.7617e-01,  8.2645e-03,  2.2465e-01,  6.3779e-01, -4.2011e-01,
         -3.2870e-01,  5.7143e-01]], device='cuda:0') tensor(1.5658, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
703000 特征值优化 tensor(12.4702, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1235, -0.0356,  2.2685, -0.1765, -0.6755,  1.0285,  0.0706,  0.1252,
         -0.1935, -0.3382, -0.4923, -0.0662, -1.1698,  0.9404,  0.4501,  0.4099,
         -0.8769, -0.1877, -0.1776, -0.4406,  1.6384, -0.0705, -1.1160, -0.6716,
         -1.0038,  0.4629,  0.9289, -0.0215, -0.6468,  0.8346,  0.7509,  0.2151,
          0.2228, -0.7791,  0.0846,  0.4848,  0.5111,  0.1704, -0.1834, -0.1981,
         -2.0194,  0.9004,  0.7266,  1.4133, -2.4593, -0.9791, -0.6183,  0.2526,
          0.9825, -0.1391, -2.6575,  1.2325, -0.1138,  2.1294,  0.0255, -0.7141,
          0.2321, -0.2814, -0.5561,  0.6028, -0.6761,  0.3546,  1.0732, -0.6205,
         -0.7806,  0.8828, -0.0399, -0.3575, -0.6753,  0.2405,  1.5229,  0.4588]],
       device='cuda:0') tensor(6.7755, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
704000 特征值优化 tensor(3.2105, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9530e+00, -1.0226e+00,  2.5978e+00,  2.3177e-02,  3.2726e-01,
          3.6772e-01,  6.3794e-02, -2.8066e-01,  2.7096e-01, -2.4222e-02,
          7.1120e-01,  1.8114e-01, -5.9635e-01,  2.1225e-01,  2.3314e-01,
          7.6413e-02, -9.7609e-02,  4.8525e-03,  2.1144e-02, -5.7043e-01,
          8.4598e-01, -1.7797e-01, -3.0596e-01, -7.6265e-02, -2.7046e-01,
          6.0043e-02,  2.6201e-01, -4.3775e-02, -3.6535e-01,  5.6384e-01,
          4.8342e-01,  1.7758e-03,  1.9393e-03, -6.3667e-02,  2.0749e-03,
          9.5680e-02,  1.3007e-02, -2.4010e-02,  3.7628e-02, -1.9629e-01,
         -8.6028e-01,  5.2862e-01,  1.0673e+00,  1.5023e+00, -1.8570e+00,
         -9.8864e-01, -4.4421e-01,  5.5146e-01,  3.2469e-01, -4.2647e-01,
         -2.2456e+00,  6.2541e-01, -6.2669e-02,  1.0815e+00,  5.6034e-02,
         -3.1792e-02, -2.5140e-01,  4.4832e-02, -1.9282e-02, -3.5758e-03,
         -2.2007e-01,  9.2353e-02,  3.6426e-01, -1.2630e-01, -3.5553e-01,
          3.2559e-01, -2.5253e-01, -1.0276e-01,  2.9041e-01,  5.5376e-01,
          1.0407e+00,  4.4678e-01]], device='cuda:0') tensor(1.4538, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
705000 特征值优化 tensor(2.2431, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0030e+00, -1.3772e+00,  2.3843e+00, -1.5815e-01,  5.1166e-01,
          9.1020e-02,  9.3797e-02, -2.3768e-01,  1.5185e-01,  5.0720e-02,
          9.8946e-01,  1.5359e-01, -4.5093e-01,  1.6853e-01,  3.0057e-01,
         -3.2323e-02, -3.9480e-03, -3.9465e-04, -5.9617e-03, -5.4351e-01,
          7.0267e-01, -1.6353e-01, -8.3290e-02, -1.3675e-02, -1.3304e-01,
          2.1931e-02,  1.8371e-01, -3.9791e-02, -4.6885e-01,  4.3838e-01,
          2.6986e-01,  1.3245e-03,  1.1317e-02, -2.1371e-02, -5.6788e-02,
          5.8624e-02, -2.8646e-02,  5.4731e-02,  7.1062e-03, -8.8402e-02,
         -5.6415e-01,  2.9005e-01,  8.5931e-01,  1.1246e+00, -1.5310e+00,
         -1.0511e+00, -1.6365e-01,  3.2428e-01, -1.8903e-01, -3.8019e-01,
         -1.8677e+00,  2.4038e-01, -1.2655e-01,  6.0442e-01, -2.2074e-03,
         -5.8330e-03, -6.6054e-02,  6.0386e-02, -1.3425e-02,  1.1460e-02,
         -1.7264e-01,  1.2519e-01,  5.8552e-02, -9.7383e-02, -1.8833e-01,
          1.6840e-01, -1.2898e-01, -1.4830e-01,  3.7385e-02,  3.0932e-01,
          4.5526e-01,  4.1834e-01]], device='cuda:0') tensor(1.3655, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
706000 特征值优化 tensor(2.1062, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9522e+00, -1.5530e+00,  2.0993e+00, -1.8274e-01,  4.0550e-01,
          3.6907e-01,  3.9336e-01, -1.8462e-01,  2.0812e-01,  3.5321e-01,
          1.0988e+00,  1.6979e-01, -3.7212e-01,  6.6685e-02,  1.8158e-01,
          3.1120e-02,  1.3835e-02, -4.3382e-02,  9.6921e-04, -5.2398e-01,
          6.6003e-01, -9.4964e-02, -7.6319e-03, -1.9694e-02, -8.8650e-02,
          1.4716e-02,  1.5073e-01,  2.9429e-02, -5.9649e-01,  3.6498e-01,
          6.8798e-02,  1.3447e-02,  4.4231e-03, -1.7949e-02, -6.2540e-02,
          5.7508e-02, -3.1290e-02,  7.0818e-02, -5.5306e-03, -3.6292e-02,
         -4.4858e-01,  1.7400e-01,  8.7761e-01,  9.2840e-01, -1.4023e+00,
         -9.8718e-01, -3.0266e-02,  5.2022e-01, -3.5204e-01, -4.5884e-01,
         -1.5272e+00,  1.7713e-01, -1.9745e-01,  3.3145e-01,  1.5821e-02,
         -6.7811e-03, -1.1407e-02,  3.5398e-02, -2.1883e-02,  6.5519e-03,
         -4.7164e-02,  6.4813e-02,  1.5771e-02, -3.4194e-02, -1.6091e-01,
          1.6269e-01, -1.8840e-01, -8.0767e-02, -8.8329e-02,  2.3054e-01,
          4.0983e-01,  3.2691e-01]], device='cuda:0') tensor(1.0438, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
707000 特征值优化 tensor(5.3589, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2290, -1.0485,  0.8992, -0.4570,  2.2816,  1.7673,  0.1400,  0.0618,
          0.9803,  0.4411, -0.0822,  1.4975,  0.1983,  0.6012, -0.9238, -0.0985,
         -0.0921, -0.0646,  0.0589, -0.7075,  0.2152,  0.0081, -0.1841, -0.3801,
         -0.3522, -0.1268, -0.1606, -0.4698,  0.0199,  0.0446,  0.5088,  0.0413,
         -0.5373,  0.2006, -0.2814, -0.6667, -1.2151,  0.2179, -0.2852, -1.4947,
         -0.1280,  0.0131,  1.0806, -1.3559, -0.6759,  0.0976,  0.1426, -0.6661,
          0.2245,  0.3259,  0.1924, -0.2062,  0.6702,  0.1779,  0.7600, -0.5520,
         -0.3194,  0.4162, -1.6995,  0.6728, -0.5117,  0.4737,  0.1459, -0.1617,
          0.5451,  1.0419, -1.3141,  0.3570,  1.1832, -0.7530,  1.0545, -0.0917]],
       device='cuda:0') tensor(2.6429, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
708000 特征值优化 tensor(2.2462, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3227, -1.1909,  0.3473, -0.2509,  2.0255,  1.4597,  0.7195, -0.1000,
          1.5338,  0.6286, -0.3594,  2.0122,  0.1067,  0.3171, -0.4006, -0.0574,
          0.0038, -0.0831, -0.0992, -0.5700,  0.1174,  0.0026, -0.0176, -0.0694,
         -0.0676, -0.1068,  0.0088, -0.0542, -0.0181, -0.0244,  0.3739, -0.0610,
         -0.0502,  0.0426, -0.1892, -0.4069, -0.4962, -0.0276,  0.0843, -1.0053,
         -0.0787,  0.0708,  0.7772, -1.0017, -0.3405, -0.0024,  0.0632, -0.3054,
          0.1539,  0.1805,  0.0822, -0.0290, -0.4167,  0.5981, -0.0099, -0.0073,
         -0.6139,  0.0823, -1.0425,  0.7147, -0.1000,  0.5666, -0.0330, -0.1720,
          0.7012,  0.6756, -0.9979,  0.3602,  0.1555, -0.0496,  1.2602,  0.0489]],
       device='cuda:0') tensor(1.0723, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
709000 特征值优化 tensor(2.1412, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.8213e-01, -1.0585e+00,  5.5793e-01, -1.4937e-01,  1.6888e+00,
          1.3498e+00,  2.7812e-01, -1.0911e-01,  1.6099e+00,  6.3659e-01,
         -6.1856e-02,  2.0919e+00,  1.1708e-01,  2.8936e-01, -3.8852e-01,
          4.5350e-02, -5.2569e-02, -2.5630e-02,  6.4970e-02, -4.4525e-01,
          1.1016e-01,  1.6501e-05,  4.1221e-02, -1.3478e-01, -6.4517e-02,
         -2.4710e-02, -1.6531e-02, -2.9137e-02, -1.2937e-02, -2.6935e-02,
          2.0980e-01,  2.2605e-03, -2.9222e-02,  3.7380e-02, -2.1117e-01,
         -3.4812e-01, -1.0493e-01, -5.0431e-02,  1.3121e-01, -9.3817e-01,
         -8.5668e-02,  4.6843e-02,  5.9730e-01, -8.7234e-01, -1.6373e-01,
         -1.3765e-01,  6.2158e-02, -2.3205e-01,  1.7987e-01,  1.3795e-01,
         -7.0999e-02,  2.6865e-02, -4.2979e-01,  4.3804e-01, -1.1934e-02,
         -8.5369e-04, -4.8404e-01,  1.3225e-01, -8.9952e-01,  7.6515e-01,
         -3.2531e-01,  1.7554e-01, -3.7855e-02, -8.6485e-02,  6.2666e-01,
          6.2277e-01, -9.4117e-01,  3.2028e-01,  2.1723e-01, -1.0260e-01,
          1.2356e+00, -4.6675e-03]], device='cuda:0') tensor(1.0796, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
710000 特征值优化 tensor(5.9762, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0352e-01,  1.1180e+00,  1.2615e-01,  3.4576e-01,  1.6487e+00,
          1.5864e+00,  1.2250e+00, -6.2813e-01,  2.2547e+00, -2.6809e-01,
          1.0123e+00,  6.4079e-01,  2.4185e-01, -6.3245e-02, -1.1291e-01,
         -1.4871e-01, -1.6366e-01,  1.1068e-03,  1.6076e-03,  1.1055e-02,
          8.1217e-03, -1.1243e-01, -1.0211e+00, -1.6012e-01, -1.0338e-01,
          3.4081e-02,  1.5874e-01, -1.6635e-01, -1.2513e+00, -9.2865e-02,
          8.8091e-01,  9.4078e-02, -1.8516e-02, -7.7913e-01, -7.4460e-02,
          7.9039e-01, -5.3963e-01,  5.0848e-01, -5.6708e-01,  4.9088e-01,
         -5.3902e-01,  2.1362e-01, -2.2474e-01, -3.2494e-01,  5.7116e-01,
         -9.1543e-02,  5.4871e-01,  5.5335e-01, -3.1052e-01,  1.3929e-01,
         -1.1068e-02, -3.5293e-01,  1.3533e+00,  5.1755e-01, -2.0056e-01,
          4.8249e-01,  9.5962e-01,  2.6618e-01, -7.6763e-01, -2.6575e-01,
         -6.9874e-01,  6.4533e-01, -1.2710e-01, -1.5748e-01,  1.5000e+00,
          1.3254e+00,  7.3034e-01, -5.0094e-01, -1.5295e-01,  9.7444e-01,
         -1.2514e+00, -3.9263e-02]], device='cuda:0') tensor(2.9333, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
711000 特征值优化 tensor(2.3712, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.3475e-01,  4.3126e-01,  6.8658e-01, -1.8658e-01,  1.9046e+00,
          1.7283e+00,  1.1482e+00, -7.1972e-01,  2.5959e+00, -4.0039e-01,
          1.2288e+00,  7.9588e-01,  9.6822e-02, -3.5657e-02, -3.5641e-02,
          5.7071e-02, -3.9354e-03, -4.4080e-04,  6.2571e-03, -9.0582e-04,
         -1.1630e-01,  6.4523e-02, -3.5327e-01, -1.8141e-02,  1.4020e-01,
         -6.3171e-02, -2.1019e-02, -3.6901e-01, -6.9505e-01, -5.3725e-02,
          5.2777e-01,  4.0116e-02, -1.3754e-02, -4.6610e-01, -3.2702e-01,
          1.7488e-01, -3.0044e-01,  2.9795e-01, -2.6295e-01,  2.9620e-01,
         -2.5783e-01,  1.6731e-01, -2.1807e-01, -3.2659e-01,  3.7298e-01,
         -1.1016e-01,  1.7044e-01,  8.1692e-01, -7.3430e-01, -1.8235e-01,
         -7.5946e-03, -5.6291e-02,  8.8033e-01,  2.4242e-01, -2.0494e-01,
          2.8942e-01,  5.0581e-01,  7.7733e-02, -1.0681e+00,  1.1817e-01,
         -4.3326e-01,  3.5547e-01,  1.3812e-01, -2.2937e-01,  1.0044e+00,
          8.7461e-01,  2.7928e-01, -2.5409e-01, -3.5016e-01,  4.5950e-01,
         -8.6499e-01,  3.8351e-02]], device='cuda:0') tensor(1.3694, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
712000 特征值优化 tensor(2.1857, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0080,  0.4262,  0.8166, -0.0480,  1.8308,  1.4543,  0.7727, -0.4497,
          2.5925, -0.8271,  1.0587,  0.6995,  0.0935, -0.0483, -0.0250, -0.0131,
          0.0057,  0.0117,  0.0424,  0.0053, -0.1154,  0.0188, -0.2989,  0.0965,
          0.1163, -0.1457, -0.1277, -0.3943, -0.4964, -0.0293,  0.4221,  0.0229,
         -0.0330, -0.2609, -0.2642,  0.0613, -0.2446,  0.1325,  0.1177,  0.1587,
         -0.0752,  0.1545, -0.3077, -0.2326,  0.3660,  0.0559,  0.0897,  0.6376,
         -0.7020, -0.0280, -0.0430, -0.0106,  0.5819,  0.2611, -0.1298,  0.1319,
          0.1736,  0.1107, -0.7765,  0.1609, -0.2510,  0.1332,  0.1958, -0.1739,
          0.9578,  0.8133,  0.3433, -0.1615, -0.3432,  0.3462, -0.7791,  0.1012]],
       device='cuda:0') tensor(1.3906, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
713000 特征值优化 tensor(20.0639, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.6502, -0.3639,  0.9897, -0.2701,  0.2703, -0.6949,  0.3313,  1.1051,
          0.9176,  0.9917,  1.8988,  1.3242, -0.0370,  0.5975,  0.0517, -1.4796,
         -0.4949, -0.0807, -1.3790,  2.7261, -0.2822, -1.0212,  1.1024, -1.1991,
         -0.3247, -0.8352,  1.2825,  0.7612, -1.0454,  0.5313,  0.7783,  2.3375,
         -0.1672, -0.1829, -0.8168,  0.8456,  0.3721,  0.7415,  0.9404, -0.7021,
          1.0358, -0.2057,  0.3519,  1.4626,  0.2064,  0.5289, -0.0305, -1.5199,
          1.4515,  2.1723,  0.7426,  0.7352,  0.6657, -2.5846, -0.8602,  0.2049,
         -0.2456,  2.1650,  0.2005,  0.6420,  0.7300, -0.1868,  0.6661, -0.2070,
          0.5229,  0.6307,  0.1164,  1.8800,  2.2926,  0.0982,  1.3804, -0.9692]],
       device='cuda:0') tensor(10.1245, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
714000 特征值优化 tensor(6.1291, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.1151e-01, -8.8046e-02,  1.5132e+00, -3.4505e-01,  1.1592e+00,
          4.8946e-01,  1.2563e+00,  1.7211e+00,  1.4578e+00,  1.1462e+00,
          1.7828e+00,  1.8843e+00,  1.9028e-04,  1.6208e-02, -1.2185e-01,
         -5.2137e-01, -1.1737e-02,  3.7273e-02, -4.0408e-01,  1.6948e+00,
         -1.6060e-02, -3.4021e-01,  2.4647e-01, -1.6322e-01,  8.3540e-02,
          3.4064e-02,  4.9823e-01, -2.2774e-01, -3.9604e-01,  8.2136e-02,
          1.2058e-01,  1.3194e+00, -8.9455e-01,  4.6299e-01, -2.7425e-02,
          3.5628e-02,  2.1078e-01,  4.0566e-01,  3.3242e-01, -3.2106e-01,
          4.6097e-01, -4.4563e-01,  1.0227e+00,  3.8681e-01, -8.6211e-01,
          7.5292e-02,  1.5969e-02, -1.4872e+00,  6.2166e-01,  1.1924e+00,
          1.2637e-01,  1.1064e-01,  1.4740e+00, -1.8456e+00, -4.9248e-01,
         -4.4486e-01,  2.3879e-01,  1.1018e+00, -1.5851e-01,  8.3093e-01,
          1.4870e+00, -7.1958e-01,  1.0937e+00, -3.1092e-01,  6.9630e-01,
         -4.4058e-02, -7.5911e-01,  1.1423e+00,  1.3165e+00,  4.4497e-02,
          1.7484e+00, -6.1424e-01]], device='cuda:0') tensor(3.6491, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
715000 特征值优化 tensor(2.3629, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.0362e-01,  2.2966e-01,  8.8718e-01, -1.2410e-01,  1.5375e+00,
          8.1963e-01,  1.7185e+00,  1.4914e+00,  7.1638e-01,  1.0740e+00,
          2.0826e+00,  1.8537e+00,  1.7146e-02,  2.3922e-02, -9.2382e-02,
         -4.1732e-02, -1.4008e-02,  1.3162e-02, -3.6132e-02,  1.0701e+00,
          3.3831e-02, -4.6611e-02, -1.4378e-03, -1.4310e-03, -3.6352e-02,
         -2.5538e-02,  1.3070e-01, -1.2659e-01, -9.2584e-04, -1.1950e-02,
          9.0552e-02,  9.9268e-01, -8.7843e-01,  3.3538e-01,  8.2844e-03,
          8.0123e-03,  2.5240e-01,  3.1850e-01, -2.3196e-02, -1.4754e-01,
          3.4443e-01, -5.6111e-01,  1.5709e+00, -9.9181e-02, -1.4962e+00,
          1.5910e-01, -5.5686e-02, -5.3179e-01,  2.1092e-01,  3.2210e-01,
          5.2780e-02,  7.5452e-04,  9.0398e-01, -1.4998e+00, -9.9760e-01,
         -1.0121e+00,  4.6227e-02,  6.3603e-01, -6.8163e-02,  1.3072e+00,
          1.4112e+00, -4.5442e-01,  1.2222e+00, -3.6446e-01,  1.1954e-01,
         -4.1244e-02, -1.0678e+00,  8.6392e-01,  1.0430e+00, -1.8333e-01,
          1.6248e+00, -4.9129e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
716000 特征值优化 tensor(2.1546, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0665e+00,  2.8728e-01,  4.5229e-01, -3.2382e-02,  1.5128e+00,
          4.1483e-01,  1.7601e+00,  1.6175e+00,  5.4621e-01,  7.9379e-01,
          2.0630e+00,  1.9038e+00,  1.1540e-02,  1.0896e-02,  5.2325e-03,
         -5.9358e-03,  1.2372e-03, -3.3681e-03, -1.9749e-02,  9.5032e-01,
          1.8890e-02, -2.3191e-02, -3.2614e-03, -5.5077e-02, -3.1396e-02,
         -4.5380e-03,  2.2272e-02,  2.2405e-02, -1.0340e-02, -1.2523e-05,
          7.2074e-02,  9.7385e-01, -8.6692e-01,  2.3916e-01, -1.3515e-02,
          1.6736e-02,  1.3966e-01,  2.2045e-01, -1.0406e-02, -6.5281e-02,
          2.7618e-01, -6.3469e-01,  1.4551e+00, -2.1627e-02, -1.5870e+00,
          3.1048e-01, -1.9728e-01, -2.3628e-01,  1.3507e-01,  1.3506e-01,
          1.3385e-02,  1.9806e-03,  2.7419e-01, -1.1445e+00, -1.1424e+00,
         -1.2324e+00,  7.2158e-02,  5.4145e-01,  3.7026e-02,  1.1254e+00,
          1.1734e+00, -6.0173e-01,  1.0658e+00, -5.1184e-01,  4.1511e-02,
          4.4524e-02, -9.0245e-01,  6.4039e-01,  9.9759e-01, -3.0060e-01,
          1.5093e+00, -3.4245e-01]], device='cuda:0') tensor(1.0731, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
717000 特征值优化 tensor(2.1123, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2114e+00,  3.8930e-01,  3.9813e-01, -1.8892e-03,  1.3060e+00,
          2.5845e-02,  1.6832e+00,  1.4994e+00,  5.2750e-01,  6.6081e-01,
          1.8710e+00,  1.9062e+00,  1.9130e-02, -5.2560e-04, -1.4967e-02,
         -1.4692e-02,  1.0714e-02, -4.1589e-03, -2.1925e-02,  8.9046e-01,
          2.3532e-02, -2.2691e-02,  8.1711e-03,  4.1269e-02,  1.5771e-02,
         -2.3384e-02,  1.7497e-03, -1.5778e-03, -2.8153e-02, -8.4810e-05,
          6.4693e-02,  9.0816e-01, -7.9385e-01,  1.4565e-01,  1.7279e-02,
          4.4597e-02,  1.5529e-01,  2.0916e-01, -1.0028e-02, -3.2019e-02,
          2.2412e-01, -6.2209e-01,  1.3571e+00,  5.8516e-02, -1.5929e+00,
          4.9995e-01, -3.1928e-01, -1.7099e-01,  1.1324e-01,  1.0853e-01,
          3.7589e-03, -1.1664e-03,  6.4566e-02, -9.6452e-01, -1.0201e+00,
         -1.0964e+00,  1.1332e-01,  4.2847e-01,  2.7645e-02,  9.4539e-01,
          1.3210e+00, -6.1613e-01,  1.1565e+00, -5.4930e-01, -4.8348e-02,
          8.0322e-02, -7.5163e-01,  5.3952e-01,  1.0386e+00, -3.9032e-01,
          1.2485e+00, -2.2076e-01]], device='cuda:0') tensor(1.0594, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
718000 特征值优化 tensor(5.4515, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.3809,  1.4001,  1.5564, -1.2988,  1.2322, -0.1593,  1.3947,  0.5780,
          0.9827, -0.1831,  1.1061,  0.5505,  0.1761, -0.1695, -1.5008,  0.7557,
         -0.0331, -0.1507,  0.1684, -0.6561, -0.1830, -0.0095, -0.0451, -0.4271,
         -0.6562, -0.6906, -0.0491,  0.4230,  0.4818,  0.0891, -0.0720, -0.0239,
         -0.0041, -0.0732, -0.8340, -0.0576, -0.2281, -0.4495, -0.5760,  0.4746,
         -0.3492,  1.0874,  0.1381, -1.8410,  1.0794,  0.2630, -0.0540,  0.5167,
         -1.1820,  0.7075,  0.0340,  0.1102, -0.7529,  0.1620,  0.0632, -0.1417,
          0.1099, -0.1718, -0.0399, -0.0983, -0.1248,  0.2360,  0.1286,  0.2665,
          1.5300, -0.0725, -0.0707,  0.5322,  0.1774,  0.3537, -0.0158,  0.2283]],
       device='cuda:0') tensor(3.8066, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
719000 特征值优化 tensor(2.2726, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.8179,  0.9569,  1.3928, -1.3213,  1.8009,  0.0666,  0.6096,  0.3976,
          1.1607,  0.1728,  0.4525,  0.6834,  0.0228, -0.0481, -0.6072,  0.0481,
         -0.0412, -0.0180, -0.0077, -0.2275, -0.0137,  0.1091,  0.0595, -0.0372,
         -0.5275, -0.3996,  0.0934,  0.1210,  0.3404, -0.1284,  0.0134, -0.0129,
          0.0206, -0.0208, -0.3020, -0.0363, -0.0538, -0.0812, -0.3832,  0.3217,
         -0.1142,  0.7229,  0.4525, -1.0531,  0.6586, -0.1457,  0.1017,  0.3631,
         -0.7526,  0.2788, -0.1313,  0.1435, -1.0488,  0.2475, -0.0267, -0.0186,
          0.0084,  0.0169,  0.0357, -0.0539, -0.3432,  0.3223, -0.2113,  0.1902,
          1.3098, -0.2460,  0.0793,  0.4150, -0.1840,  0.2047, -0.0558,  0.5112]],
       device='cuda:0') tensor(1.0745, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
720000 特征值优化 tensor(2.1095, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.6869,  0.8793,  1.3168, -1.2073,  1.7715,  0.0974,  0.4274,  0.1020,
          1.1202,  0.5753,  0.4039,  0.5677,  0.0556, -0.0960, -0.3566, -0.0107,
          0.0035,  0.0120, -0.0082, -0.1713, -0.0515,  0.1464,  0.0279, -0.0327,
         -0.4219, -0.4165,  0.0487, -0.0601,  0.1508, -0.1677, -0.0107, -0.0227,
         -0.0492, -0.0207, -0.1804,  0.0130, -0.0112, -0.0566, -0.2589,  0.3567,
         -0.0673,  0.6561,  0.3333, -0.7545,  0.5178, -0.2338,  0.1218,  0.3159,
         -0.2676,  0.0219, -0.3189,  0.1542, -1.0320,  0.3057, -0.0107,  0.0221,
         -0.0977,  0.0786, -0.0114, -0.1643, -0.2988,  0.2602, -0.1339,  0.0972,
          1.0585, -0.0446,  0.5359,  0.2537, -0.1697,  0.1460, -0.1467,  0.4940]],
       device='cuda:0') tensor(1.0106, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
721000 特征值优化 tensor(8.5933, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1029, -0.4907,  0.6902,  1.2381, -0.5243,  0.1503, -0.6950,  1.4174,
          0.8160,  0.6783, -1.0830,  2.1956,  1.0356,  0.5274,  0.1878, -0.2679,
          0.2801, -0.3129, -1.0067,  0.0110, -0.4366,  0.3316, -0.0944, -0.0488,
         -0.1043,  0.2101, -0.3858, -0.1171, -0.0044,  0.4311,  0.2482, -0.0648,
         -0.2385, -0.0175, -0.0231, -0.4743, -0.6752, -0.7608, -1.5589,  0.3945,
          0.4794,  0.2968,  0.5134,  0.7140, -0.2382, -1.0739, -1.4395,  1.3650,
          0.4344, -0.1471, -0.5449,  1.4864,  0.7165,  0.1593,  0.1860, -0.7050,
         -0.2224, -0.6154, -0.2367,  0.0783, -0.1045,  0.5021, -1.2710,  0.6131,
          1.0413, -0.2015, -1.3893,  0.2032, -0.1999, -0.1793, -0.6992,  0.0292]],
       device='cuda:0') tensor(4.3052, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
722000 特征值优化 tensor(2.3386, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.4648e-01, -1.4226e+00,  7.9775e-01,  1.1024e+00, -5.4476e-02,
         -9.8075e-02, -1.1225e-01,  1.3224e+00,  1.6427e+00,  9.6694e-02,
         -5.6198e-01,  1.7535e+00,  5.2723e-01, -1.6867e-03,  1.7619e-02,
         -1.0610e-01,  1.5485e-01,  1.9809e-02, -3.1434e-01,  3.2315e-01,
         -4.5502e-01,  2.8338e-01, -1.3033e-02, -8.0725e-03, -8.3085e-02,
          4.5631e-02, -3.1075e-01, -3.2216e-01,  2.0217e-02,  2.9274e-01,
          2.4866e-02, -1.7731e-03,  5.0529e-06, -2.0068e-02, -5.5185e-03,
         -1.8733e-02, -2.3954e-02, -1.8010e-01, -9.0296e-01,  1.0977e-01,
          8.0936e-02,  8.3728e-03,  5.2078e-01,  4.6340e-01, -2.7448e-01,
         -3.3279e-01, -8.4389e-01,  8.9788e-01,  6.7656e-01, -5.8807e-01,
         -8.8334e-01,  9.0948e-01, -2.6922e-01,  2.2054e-01,  2.2330e-01,
         -2.8998e-01, -8.2516e-02,  3.7790e-02, -4.4384e-03, -1.6982e-02,
         -1.8622e-01,  1.3220e-01, -5.0035e-01,  2.9208e-01,  1.3067e+00,
          1.3017e-01, -7.6098e-01,  3.2396e-01, -3.1055e-01,  5.6696e-02,
         -9.3999e-01,  9.0793e-02]], device='cuda:0') tensor(0.8481, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
723000 特征值优化 tensor(2.1157, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.7412e-01, -1.5577e+00,  6.1007e-01,  5.9291e-01,  1.7531e-01,
          4.3243e-02,  1.5118e-01,  8.0546e-01,  1.6863e+00,  1.1738e-01,
         -2.5709e-01,  1.5103e+00,  4.9802e-01, -3.2966e-03,  1.8226e-02,
         -2.1372e-01,  6.0850e-02,  1.2924e-01, -2.8772e-01,  2.2337e-01,
         -4.3689e-01,  6.0641e-02,  2.6040e-02, -7.0358e-04, -9.2555e-02,
          1.0780e-02, -2.6285e-01, -2.8898e-01,  3.1269e-02,  7.6969e-02,
          2.4358e-02, -1.2562e-02,  1.5107e-02, -2.2626e-02, -4.9383e-03,
         -5.7626e-02, -1.4266e-02, -1.4673e-01, -8.5063e-01,  5.8743e-02,
          1.1186e-01,  1.3147e-02,  2.5226e-01,  5.2370e-01,  3.9195e-02,
         -3.0863e-01, -7.6742e-01,  6.3403e-01,  9.9820e-02, -5.1221e-01,
         -1.0981e+00,  6.4101e-01, -2.6645e-01,  2.2451e-01,  1.6354e-01,
         -2.8450e-01, -6.7767e-02,  5.8953e-02, -4.4561e-02,  2.0927e-02,
         -1.8171e-01,  7.8743e-02, -2.4817e-01,  2.1386e-01,  1.1855e+00,
          1.6906e-01, -5.4406e-01,  3.0312e-01, -5.2125e-01,  1.1702e-01,
         -7.4307e-01,  1.0668e-01]], device='cuda:0') tensor(0.9059, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
724000 特征值优化 tensor(17.5778, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0063e+00,  1.4616e+00,  1.6080e+00, -9.6251e-01, -1.7479e+00,
          6.5970e-02, -1.5699e+00, -1.6009e-01,  1.5025e+00,  1.2402e+00,
         -2.0079e+00,  1.2081e+00,  1.1510e+00,  2.6827e-01, -3.0868e-01,
         -2.9426e-02, -1.5931e-01, -8.4608e-01, -1.0877e+00,  8.2903e-03,
          1.8148e+00, -1.7204e+00, -8.3997e-01,  1.4211e-01, -1.7310e-03,
          9.9189e-01,  1.1273e-03,  2.8513e-01,  1.3119e+00,  1.7795e+00,
         -1.6438e+00, -6.6657e-01, -4.9250e-01, -2.3698e-01,  3.7617e-01,
         -4.5136e-03,  2.9750e-01,  3.3656e-01,  1.4995e-01,  1.0561e+00,
          4.6300e-01, -1.0439e+00,  2.2862e-01,  1.4243e-01,  2.6310e+00,
          4.9996e-01, -2.8762e-01,  6.5103e-01, -6.1433e-01, -1.0920e+00,
          1.5426e+00, -1.5850e-01, -1.4957e+00, -6.2414e-01, -4.4447e-01,
         -1.4749e-01,  1.2331e+00,  2.3348e-01,  5.5341e-01, -1.0578e-01,
         -3.6403e-02, -5.6379e-01, -6.7098e-01, -5.6682e-02,  2.7289e-01,
          3.9039e-01, -1.7560e+00,  6.6307e-01, -1.0820e+00, -4.6049e-01,
         -2.6115e-01, -1.3848e+00]], device='cuda:0') tensor(8.6293, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
725000 特征值优化 tensor(4.0668, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7566,  1.7050,  2.1949, -1.7119, -0.8178, -0.2933, -0.6317, -0.0892,
          2.2704,  0.2700, -1.1770,  2.0235,  0.6589, -0.0585, -0.0493,  0.0454,
         -0.0804, -0.0852, -0.1724,  0.0269,  1.1350, -0.9931, -0.0913, -0.0131,
          0.0167,  0.1105,  0.0991,  0.0510,  0.6306,  1.1136, -0.6032, -0.1122,
         -0.0524,  0.0405,  0.0850,  0.1275, -0.0154,  0.0464, -0.2152,  0.3087,
          0.1940, -0.1855,  0.7059, -0.0556,  1.9902,  0.2785,  0.3296,  1.1420,
          0.1910, -0.4566,  0.7926, -0.8359, -0.6255, -0.6153, -0.0383, -0.2737,
          0.2126, -0.0128,  0.2442, -0.1424,  0.1534, -0.0067, -0.0626, -0.0150,
          0.3813,  0.3373, -1.7872,  0.4425, -0.2873,  0.0051,  0.5416, -0.5264]],
       device='cuda:0') tensor(1.7872, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
726000 特征值优化 tensor(2.1672, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7620e+00,  1.9623e+00,  2.4993e+00, -2.1501e+00, -4.5417e-01,
          1.0614e-01, -1.0358e-01, -1.3424e-01,  2.2589e+00, -6.1113e-02,
         -8.6565e-01,  2.0015e+00,  7.3599e-01, -5.3061e-02, -4.0857e-04,
          3.7585e-02,  2.2380e-02, -6.2680e-02, -5.1108e-02, -6.2149e-02,
          9.7151e-01, -6.8423e-01, -8.4484e-02, -4.4850e-02, -2.8665e-01,
          1.5594e-01,  3.2948e-01, -2.7243e-01,  4.2804e-01,  7.3471e-01,
         -1.3406e-01, -3.9514e-02, -1.3989e-02,  2.6125e-02, -1.8399e-03,
          1.3858e-02, -8.0704e-03,  4.6176e-02, -3.8489e-01,  2.4476e-01,
          1.8569e-01, -1.0871e-01,  4.8035e-01, -1.7283e-01,  1.8783e+00,
          3.5782e-01,  4.0770e-01,  8.1348e-01,  7.5309e-01, -4.9753e-01,
          5.7750e-01, -8.4906e-01, -1.6390e-01, -1.7530e-02, -6.4320e-02,
         -2.8515e-01, -2.2022e-01,  1.9370e-01,  1.9109e-02, -3.9954e-03,
         -1.7505e-01,  1.0683e-01, -8.5451e-02, -2.6007e-02,  2.4628e-01,
          1.9358e-01, -1.5613e+00,  4.1412e-01, -3.4187e-01, -1.1303e-02,
          5.6130e-01, -5.2946e-01]], device='cuda:0') tensor(0.8601, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
727000 特征值优化 tensor(10.4239, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1069, -1.2196,  0.4775, -0.0068, -0.4631,  0.9502, -0.6185, -0.1567,
         -0.2093, -0.6556,  0.1540, -0.0195,  0.0990,  0.0061, -0.2181, -0.1472,
          0.0258,  1.0280, -1.4091, -0.0255, -1.2635,  1.1001, -0.0362,  0.3773,
          1.3701,  0.9042,  0.0901, -0.3257,  0.2898, -0.1632, -0.0521, -0.5405,
          0.1113,  0.1731, -0.7160,  0.2586,  0.5827,  1.0190, -0.1195,  0.2467,
         -0.5002, -1.5753,  1.2815,  0.5216,  1.0934,  0.3262, -0.0171, -0.3476,
          0.7031, -0.3919, -0.2733, -1.5491,  1.9609, -1.1295,  0.4163, -1.2847,
          0.8528, -1.4089,  0.0459, -1.6164,  0.2826, -1.0166,  0.5191, -0.7255,
         -1.3149, -0.2792, -0.8323,  0.5972, -0.4231,  0.2819,  0.5217,  1.0119]],
       device='cuda:0') tensor(0.2125, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
728000 特征值优化 tensor(2.4586, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8619, -1.3819,  1.0251, -0.6929, -0.0687,  0.2760, -0.2013, -0.2177,
          0.4929,  0.0255,  0.8391,  0.6643,  0.1509,  0.0444,  0.0677, -0.0559,
         -0.0847,  0.1749, -0.4679,  0.0145, -0.4129,  0.3235,  0.0750, -0.0107,
          0.5547,  0.1557,  0.0289, -0.1147, -0.0476, -0.0781, -0.0089, -0.2557,
          0.2918, -0.0089, -0.1867, -0.1523,  0.1333,  0.3663, -0.0164,  0.0111,
         -0.2269, -0.8613,  0.1667,  0.2483,  0.8420,  0.3480, -0.1673, -0.6146,
          0.6196,  0.0076, -0.1679, -0.3424,  0.8394, -0.4223,  0.0753, -0.3482,
          0.8549, -0.5160, -0.0353, -0.8039,  0.7156, -0.3990,  0.5249, -0.3693,
         -0.5944,  0.2015, -0.1268,  0.1201, -0.0485,  0.1236,  0.8319,  0.5722]],
       device='cuda:0') tensor(1.6406, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
729000 特征值优化 tensor(2.0854, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8849, -1.3077,  0.4709, -0.4724,  0.1596,  0.1523, -0.2353, -0.2307,
          0.6071,  0.0528,  0.8918,  0.7785,  0.2224, -0.0329,  0.0329, -0.0940,
         -0.0579,  0.2092, -0.4371,  0.0186, -0.2474,  0.1782, -0.0419,  0.0129,
          0.2568,  0.0602,  0.0101, -0.0766,  0.0087,  0.0778, -0.0166, -0.0609,
          0.1277, -0.0177, -0.0372, -0.1261,  0.1251,  0.2126, -0.0303,  0.0147,
         -0.0744, -0.7600, -0.0344,  0.3669,  0.3950,  0.2544, -0.2845, -0.6220,
          0.5179, -0.0707, -0.1429, -0.1127,  0.0033,  0.0190, -0.0653, -0.0172,
          0.2707, -0.1165,  0.1771, -0.3018,  0.5679, -0.3806,  0.4959, -0.3710,
         -0.4826,  0.1503, -0.0895,  0.1084, -0.1246, -0.1337,  0.7197,  0.4942]],
       device='cuda:0') tensor(1.0372, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
730000 特征值优化 tensor(7.9577, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.1491e-01,  1.1129e+00,  6.2390e-02, -4.9030e-01,  6.9927e-01,
          4.0038e-01, -6.3070e-02,  4.7837e-01, -2.3473e-01,  4.8039e-01,
          5.0357e-01,  1.3831e+00, -3.4964e-01,  4.7158e-01,  2.2068e-01,
          8.8961e-03, -2.1986e+00,  3.1772e-01, -1.5542e+00, -5.7364e-01,
         -2.1450e-01,  8.5380e-01, -1.6290e-01, -2.2871e-01, -1.8093e-01,
          3.2012e-01,  6.6406e-01,  1.5611e-01,  5.6183e-01,  1.5869e-01,
          1.6266e-01,  4.6682e-02, -2.4708e-02,  2.1157e-01,  4.1240e-01,
          1.0870e+00,  5.4625e-01, -9.8349e-01, -9.5791e-01, -3.4990e-01,
          5.7618e-03, -2.9229e-01,  2.4473e-01, -1.0470e-01,  4.4274e-01,
         -1.3566e+00,  9.0015e-01,  1.2358e+00, -1.1409e-01, -1.5670e-01,
         -5.4846e-01, -1.2278e-01, -4.0867e-01,  3.0588e-01,  8.0654e-01,
          2.8831e-01,  7.1422e-01, -1.0124e-01,  6.7257e-02,  3.3290e-01,
         -1.0936e-01,  2.7690e-01,  4.5759e-01, -4.8118e-01,  1.2833e+00,
         -8.4342e-01, -4.8878e-01,  9.9356e-01,  4.2961e-01,  5.5482e-01,
          9.3625e-04, -1.1139e-01]], device='cuda:0') tensor(4.7851, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
731000 特征值优化 tensor(2.5841, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4706e+00,  1.3677e+00,  2.3075e-01, -6.5308e-01,  2.0295e-01,
          7.9483e-01,  5.9381e-01,  1.0933e-01,  3.5623e-01, -2.0356e-01,
          9.5659e-01,  1.6688e+00, -2.2744e-02,  9.7852e-04, -1.8058e-02,
          2.8743e-01, -1.1780e+00, -1.0185e-01, -7.8579e-01, -8.1602e-02,
         -6.4757e-04,  2.2537e-01,  1.7613e-02,  5.2734e-03,  7.3949e-03,
          7.4513e-03,  3.5340e-02, -6.4167e-02,  1.8351e-02, -8.3285e-03,
         -2.3356e-02, -5.5726e-03,  8.3071e-03,  2.6056e-02,  4.9741e-01,
          5.9565e-01,  1.7954e-01, -5.6508e-01, -4.4360e-01, -1.2501e-01,
         -1.7826e-01, -6.2401e-02, -6.7556e-01,  3.6998e-02,  3.3064e-02,
         -7.8024e-01,  5.1190e-02,  2.8704e-01, -4.6061e-02, -7.7057e-02,
         -4.9115e-01,  4.5493e-02, -3.0221e-01,  1.6580e-01,  4.5598e-01,
         -1.5615e-01,  5.5789e-01, -3.1915e-01,  5.7893e-01, -4.9508e-01,
         -1.3013e-01,  1.9813e-01,  1.5700e-01, -8.0796e-02,  1.4092e+00,
         -4.4738e-01, -1.0842e+00,  8.4276e-01,  2.2103e-01,  6.6740e-01,
          3.1478e-01, -4.0574e-01]], device='cuda:0') tensor(1.3063, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
732000 特征值优化 tensor(2.0966, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8046e+00,  1.4316e+00,  7.6788e-03, -3.4450e-01,  1.8519e-01,
          7.2971e-01,  7.9865e-01,  5.2190e-02,  5.3568e-01, -9.0597e-01,
          1.0097e+00,  1.5268e+00, -2.3252e-02, -1.8322e-02,  6.5328e-02,
          3.7340e-01, -6.4392e-01, -1.7230e-01, -3.8974e-01, -7.0259e-02,
          2.3063e-04,  1.2297e-01,  8.6006e-03, -2.9694e-02, -6.5415e-02,
          2.2591e-04,  1.5623e-02,  6.0752e-02,  1.7476e-02,  9.0587e-02,
         -2.4062e-02, -6.4735e-03,  1.2587e-02,  1.9810e-02,  4.9095e-01,
          5.1935e-01,  1.3704e-01, -4.8057e-01, -3.4974e-01,  1.0594e-01,
         -2.7355e-01, -5.0275e-02, -8.8592e-01,  6.2504e-02,  7.3958e-02,
         -6.8247e-01, -1.6353e-02, -6.2175e-02,  1.6216e-02,  8.9955e-03,
         -1.8831e-01, -1.0370e-03, -2.8058e-01,  1.7234e-01,  4.3733e-01,
         -1.9532e-01,  4.7712e-01, -2.2448e-01,  5.2422e-01, -4.7069e-01,
         -4.0430e-01,  2.2274e-01,  1.9833e-01,  3.2283e-03,  1.2443e+00,
         -5.2881e-01, -1.0102e+00,  6.7726e-01,  2.1570e-01,  7.2213e-01,
          4.3210e-01, -5.1467e-01]], device='cuda:0') tensor(1.0682, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
733000 特征值优化 tensor(4.3980, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5065, -0.5085,  0.1397,  0.5390, -0.0731,  0.5667,  0.8582, -2.5221,
          1.3704, -1.5148,  1.0573,  0.4798, -0.0448,  0.0039,  1.0473,  0.4271,
          1.2896, -0.6059, -0.4954, -0.7075, -0.2742,  0.1263,  0.0238, -0.0372,
         -0.2612,  0.5363, -0.1790,  0.1663, -0.7137, -0.0735,  0.0418,  0.0527,
         -0.0072,  0.0519, -0.4102, -0.2318,  0.1289, -0.2869,  0.0102,  0.0333,
          0.4907,  0.0641,  1.8640, -1.3485,  0.2747,  0.3960, -0.6471,  1.4454,
         -1.1683, -0.5042, -0.8123,  0.3641,  0.6128, -0.1063,  0.8054, -0.9962,
         -0.1911,  0.3724, -0.0046,  0.0129, -0.3223,  0.6045,  0.6641, -0.8682,
         -0.1552, -0.0926,  0.1144,  0.3489,  1.2472,  0.7175, -0.5395, -0.6995]],
       device='cuda:0') tensor(2.3144, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
734000 特征值优化 tensor(2.1529, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.2533e-01, -2.5780e-01,  2.0157e-01,  1.8105e-01,  1.9036e-01,
          3.4839e-01,  1.5988e+00, -1.7198e+00,  9.1571e-01, -1.2763e+00,
          1.2010e+00,  4.3063e-01, -6.7841e-03,  2.6043e-02,  3.6431e-01,
          8.8771e-02,  4.8616e-01,  1.7364e-01, -1.0955e-02, -6.9221e-01,
         -1.5010e-01,  1.5605e-03,  6.9405e-03,  2.8135e-02, -1.3954e-01,
          1.4277e-01,  1.0598e-01,  9.2337e-02, -2.5796e-02,  1.9842e-02,
         -1.6049e-02,  8.7461e-03,  5.1652e-03,  2.5883e-02, -1.2438e-01,
         -6.0025e-02,  2.0420e-01, -3.9171e-01, -4.8990e-02,  1.4748e-01,
          6.1577e-01,  1.0098e-01,  1.0723e+00, -1.3802e+00,  6.5441e-02,
          6.7330e-01, -6.0813e-01,  1.1024e+00, -6.8509e-01, -2.9486e-01,
         -1.3360e+00,  6.8131e-01, -3.8225e-02,  2.8182e-02,  6.5272e-01,
         -8.9907e-01, -2.5400e-01,  1.9897e-01,  2.5411e-02,  5.0885e-02,
         -5.3021e-01,  5.1552e-01,  1.2717e-01, -4.8907e-01, -6.5630e-01,
         -5.8222e-02,  3.1380e-01,  1.4794e-01,  6.4902e-01,  7.4364e-01,
         -6.1844e-01, -2.6808e-01]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
735000 特征值优化 tensor(10.9622, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5680e+00, -9.1360e-02, -1.0132e+00, -1.1234e+00,  1.7604e-01,
          2.0801e+00,  1.4420e+00, -5.2219e-02, -6.9487e-01, -1.0893e+00,
          5.4587e-01,  7.7942e-01, -2.0064e-02,  2.9875e-01,  1.2752e-02,
          1.1021e+00,  6.2303e-02,  5.3116e-01, -9.5544e-02, -2.5828e-01,
          1.0657e+00,  5.3094e-01, -8.0337e-01, -2.1620e-01, -1.6586e+00,
         -1.9249e-01,  2.3726e-01, -9.2901e-01,  1.5996e-03, -2.4283e-02,
         -9.4519e-01,  6.9624e-01,  3.8337e-01, -4.8981e-01, -5.1302e-01,
         -5.9870e-01, -4.4996e-01, -8.6953e-02, -2.2257e-01,  3.6759e-02,
         -2.8109e-01,  3.8325e-01,  5.3387e-01,  4.7959e-01, -2.4187e-01,
         -6.4790e-01,  7.1669e-02,  1.0682e+00,  7.9897e-03,  9.5329e-02,
         -1.6276e-01, -9.0051e-01,  1.7076e+00, -1.3743e-01, -9.1785e-01,
          3.9784e-01, -6.6584e-01, -1.3211e+00,  3.0291e-02,  1.3404e-02,
          2.8706e-01,  1.3797e+00,  5.0881e-01,  2.5583e+00,  1.1987e-01,
          1.0934e+00,  3.5336e-01,  5.2039e-01,  1.0346e+00, -4.7135e-01,
          8.5205e-02, -5.3065e-01]], device='cuda:0') tensor(5.2609, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
736000 特征值优化 tensor(3.0222, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5516, -0.3118, -0.4065, -0.9319,  1.0353,  1.6636,  2.3127,  1.1684,
         -0.2201,  0.1134,  1.4872,  0.1522,  0.0561,  0.0994,  0.0945,  0.2972,
         -0.1523, -0.1092, -0.2053, -0.2239,  0.6671,  0.1868, -0.0779, -0.0271,
         -0.5908, -0.0457,  0.0262, -0.1282, -0.0024, -0.0167, -0.4130,  0.5008,
          0.6935, -0.1157, -0.0166, -0.0997, -0.3089, -0.1881,  0.0473,  0.0228,
         -0.2652,  0.0188,  0.3254,  0.7287, -0.0485, -0.3847,  0.0789, -0.0544,
          0.0719,  0.1142,  0.2522, -0.3521,  1.2125, -0.2069, -1.1483, -0.1015,
         -1.0961, -0.1354,  0.2651, -0.0222,  0.8190,  0.5169, -0.4355,  1.5993,
         -0.2840,  0.3809, -0.0167,  0.0129,  1.7231, -0.5209, -0.1326,  0.0121]],
       device='cuda:0') tensor(1.2460, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
737000 特征值优化 tensor(2.2416, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9432, -0.4030, -0.2569, -0.5295,  1.0730,  0.6213,  2.5021,  1.2535,
          0.0348,  0.2036,  1.7196, -0.0408,  0.1078,  0.0328,  0.1062,  0.1405,
         -0.0608, -0.2313,  0.0475, -0.0426,  0.4385,  0.1125, -0.0656, -0.0907,
         -0.1973,  0.0026,  0.0120, -0.0184, -0.0098,  0.0860, -0.1415,  0.4988,
          0.7191, -0.1168,  0.0412,  0.0386, -0.3172, -0.1779,  0.0223,  0.0124,
         -0.3281, -0.0193, -0.1470,  0.8081, -0.1978, -0.2755,  0.0516, -0.0704,
         -0.0371, -0.0148,  0.1908, -0.2308,  0.7542, -0.3579, -1.3007,  0.1280,
         -0.6765,  0.0388,  0.0486, -0.0109,  0.6042,  0.3508, -0.7339,  1.3760,
         -0.2259,  0.2460,  0.0039, -0.0308,  1.6993, -0.3936, -0.0443,  0.0783]],
       device='cuda:0') tensor(1.0108, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
738000 特征值优化 tensor(21.9620, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8787,  0.0300,  0.6553,  0.1516,  0.0711,  1.1499,  0.9700,  0.3429,
         -1.0640, -0.4384, -0.1620, -0.1705,  0.4926, -1.4115, -0.2238, -0.0702,
         -0.0538, -0.4941,  0.4685, -0.3872,  0.1426,  0.5242, -0.4013,  0.9244,
         -1.4792, -0.1868,  3.0935,  0.0962,  1.3678, -1.2505,  1.3628, -0.3096,
          0.2729, -0.8932,  0.8656, -0.2924, -0.3017,  1.6732,  3.4887, -0.8370,
          0.3453, -0.7547,  0.7599,  0.6442,  0.3340, -1.7161, -0.3427, -0.0352,
          1.1206,  0.9955, -0.6394, -0.3954,  0.6666,  0.1191, -1.5053,  0.3358,
          0.2595,  2.0670,  1.7849,  0.5710, -0.5303, -1.5554, -0.4126,  0.6001,
          1.0429, -0.2926,  1.0759,  0.8324,  0.2493, -0.3423, -0.1327,  2.0413]],
       device='cuda:0') tensor(10.3100, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
739000 特征值优化 tensor(6.4872, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1925,  0.7647,  1.5272, -0.6565,  0.9437,  2.1819,  1.4541, -0.5054,
         -0.0063, -0.1396,  0.4250,  0.8793,  0.0155, -0.2299,  0.0115,  0.1860,
         -0.2138,  0.0275,  0.0223, -0.0033,  0.0346,  0.3927, -0.0141,  0.3429,
         -0.5792,  0.1331,  2.0196,  0.0116,  0.6035, -0.4275,  0.5546, -0.4479,
         -0.0635, -0.8713,  0.0671,  0.0622,  0.1256,  0.8203,  2.4754, -0.0587,
         -0.0790, -0.3351, -0.0931,  0.1617,  0.1196, -0.7688,  0.1169,  0.4096,
          0.3023,  0.1756, -0.5357, -0.2135,  0.7373,  0.2517, -0.6897,  0.1695,
          0.2995,  1.0148,  1.0393,  0.3951, -0.0373, -0.8973, -1.2295, -0.2233,
          1.9643,  0.5582,  0.2501, -0.0059,  0.0378, -0.0875, -0.4231,  0.9516]],
       device='cuda:0') tensor(3.2412, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
740000 特征值优化 tensor(2.7978, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.6603e-01,  1.0330e-01,  1.7885e+00, -1.1994e+00,  1.0363e+00,
          2.3206e+00,  2.1305e+00, -5.6211e-01,  1.0527e+00, -1.4824e-01,
          1.4727e+00,  1.3583e+00, -2.1714e-02,  2.7801e-02,  1.2603e-03,
          5.3008e-02, -8.3348e-02,  2.2584e-03,  1.3785e-02,  6.5184e-03,
         -4.6423e-04,  1.7366e-01, -1.7622e-03,  1.6080e-01, -9.1652e-03,
          7.4255e-04,  1.1454e+00, -4.1795e-01,  3.1095e-01, -1.9259e-01,
          1.9860e-01, -3.9689e-01, -2.5990e-02, -5.9457e-01,  1.2180e-02,
          1.0344e-03, -1.3705e-01,  5.6616e-01,  1.5585e+00, -1.8616e-02,
         -5.1040e-01, -4.9066e-02, -1.9178e-01,  1.3443e-01,  1.1603e-01,
         -1.6012e-01,  6.1350e-02,  5.5863e-02,  5.6960e-02, -6.5961e-02,
         -1.4507e-01,  9.9390e-03,  1.0305e-01,  2.1452e-01, -8.9748e-01,
          2.8423e-01, -3.4256e-01,  7.0955e-01,  1.0923e+00,  6.4419e-02,
          2.8718e-01, -5.7483e-01, -1.0776e+00, -1.8028e-01,  2.2641e+00,
          5.1462e-01,  8.3827e-02, -5.6899e-02, -8.4217e-02,  3.9633e-01,
         -6.8660e-01,  4.3252e-01]], device='cuda:0') tensor(1.6626, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
741000 特征值优化 tensor(2.1371, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.3772e-02,  5.4320e-03,  1.8369e+00, -1.6351e+00,  7.6701e-01,
          2.0408e+00,  2.0417e+00, -6.5148e-01,  1.4912e+00, -1.2587e-01,
          8.0900e-01,  1.5069e+00, -2.1010e-02,  9.4254e-03,  2.9864e-02,
          1.6608e-02,  1.4117e-02,  1.8343e-02,  5.7296e-02, -6.5126e-03,
         -1.4639e-03,  1.2785e-01,  4.6466e-02,  1.3167e-01, -1.5141e-02,
         -2.8708e-02,  7.5682e-01, -5.4325e-01,  2.3498e-01, -1.4588e-01,
          1.3772e-01, -4.0322e-01, -6.8145e-02, -6.4153e-01,  1.9741e-01,
          4.5545e-03, -2.1408e-01,  5.6056e-01,  1.1878e+00, -1.0221e-02,
         -5.2115e-01,  4.2628e-03, -1.3194e-01,  1.3311e-01,  8.0488e-02,
         -4.7585e-02,  2.5212e-02, -1.1402e-01,  1.2935e-02, -1.0288e-01,
          8.1876e-02,  7.4843e-02,  4.4916e-02,  1.5509e-01, -9.7185e-01,
          4.0149e-01, -3.4362e-01,  6.6646e-01,  9.5460e-01,  1.3767e-01,
          2.9136e-01, -4.7335e-01, -1.0324e+00, -1.6382e-01,  1.9871e+00,
          1.6677e-01,  5.3551e-02, -5.5958e-02,  3.5168e-01,  4.1204e-01,
         -9.3755e-01,  3.0441e-01]], device='cuda:0') tensor(0.9679, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
742000 特征值优化 tensor(18.7519, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-6.0088e-01, -1.3103e-01,  3.7429e-01,  3.5182e-01,  7.2843e-01,
         -4.3746e-01,  1.0824e+00, -1.3000e-01, -1.6003e-01, -1.2727e+00,
         -2.6624e-01,  4.4982e-01,  4.5634e-01, -4.1165e-01,  1.6274e+00,
          5.5630e-01, -9.4494e-01,  5.3657e-02,  2.2707e-01, -8.8180e-04,
         -7.1206e-01, -1.0885e+00, -3.6562e-01, -3.9830e-01,  1.0556e+00,
         -4.5242e-01,  1.1443e+00, -4.4405e-02, -2.8635e-01, -1.0852e+00,
          2.3544e-01, -8.0476e-01, -1.0109e-01,  2.6518e-01, -1.6261e+00,
          5.4290e-01,  5.3174e-01, -3.0390e-01,  1.4722e+00,  3.3533e-01,
         -4.5315e-01,  2.1486e+00,  1.5959e-01,  3.7180e-02, -3.1868e-01,
          1.4926e+00,  7.1089e-01,  3.0005e-01, -5.4984e-01, -1.4167e+00,
          1.8011e+00, -1.8200e+00, -1.0909e+00,  2.6955e-02, -4.2661e-01,
          2.0278e-01,  3.3016e-01,  2.0060e+00,  6.8546e-01, -7.3144e-01,
         -4.9996e-01, -1.2219e+00, -1.2597e+00,  2.7976e-01,  2.2738e-01,
         -6.2206e-02, -1.0418e+00,  2.8320e-01,  4.2400e-01, -9.8777e-01,
          5.0529e-01, -6.6553e-01]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
743000 特征值优化 tensor(3.5261, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-5.0357e-01, -7.2010e-01,  1.1295e+00,  9.0174e-01,  9.3596e-01,
          6.0177e-01,  1.1859e+00,  3.8713e-01,  7.9037e-01, -7.6925e-01,
         -6.1619e-01,  1.4807e+00,  3.0531e-02, -1.7149e-01,  5.5886e-01,
         -1.6252e-01, -1.2552e-01,  2.5854e-02, -7.9808e-02, -2.7036e-02,
          1.4480e-02, -3.9970e-01, -9.3212e-03, -1.7906e-02,  2.0031e-01,
         -1.6855e-01,  1.9603e-01,  5.7473e-02, -7.1289e-03, -3.7015e-01,
         -1.6949e-02, -1.7064e-01, -4.6687e-03, -4.1697e-01, -6.1957e-01,
         -2.1484e-01, -1.8827e-02,  7.8193e-02,  5.2190e-01, -1.6819e-01,
         -7.4068e-02,  1.1692e+00,  1.1674e-01,  2.1161e-01,  7.5859e-02,
          4.2998e-01, -1.7746e-02,  1.0482e+00,  7.5906e-02, -7.7156e-01,
          2.3682e+00, -1.0357e+00, -6.7041e-01,  1.6060e-01, -1.0632e-03,
         -3.5302e-03,  2.7053e-01,  9.3460e-01,  4.8644e-01, -4.3283e-01,
         -7.5247e-02, -5.3046e-01, -3.7644e-01,  1.0769e-01,  1.0761e+00,
         -1.0514e-01, -8.3696e-01,  2.5654e-01,  2.3009e-01, -1.3582e-01,
          1.2124e+00,  2.5331e-01]], device='cuda:0') tensor(1.5594, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
744000 特征值优化 tensor(2.0954, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.5340e-01, -3.4838e-01,  1.1304e+00,  8.7426e-01,  3.5448e-01,
          9.0799e-01,  5.1051e-01,  2.7919e-01,  8.4404e-01, -8.4177e-01,
         -1.3368e-01,  1.9325e+00,  2.8917e-03,  3.3093e-02,  1.7623e-02,
          4.6337e-02,  3.9425e-02, -3.7482e-02, -2.9794e-02, -7.1217e-03,
          2.3477e-02, -3.6730e-01,  1.8699e-03, -3.8464e-02,  1.8004e-01,
         -3.4100e-01, -4.6883e-02, -1.2741e-01,  1.1504e-01, -3.4403e-01,
         -7.0035e-02, -6.0867e-02,  1.5274e-02, -4.2598e-01, -3.4094e-01,
         -2.3535e-01, -1.0112e-01,  6.8300e-02,  4.8268e-01, -2.2051e-01,
         -7.2986e-02,  9.5205e-01,  3.6782e-02,  1.4897e-01,  1.3707e-01,
          1.7456e-01,  5.0455e-02,  1.4229e+00, -6.6273e-02, -1.0031e+00,
          1.9353e+00, -7.7450e-01, -3.3988e-01,  2.2831e-01,  1.0930e-04,
          7.7080e-03,  4.9907e-01,  5.7787e-01,  9.8170e-02, -1.1033e+00,
         -2.8662e-01, -1.3034e-01, -6.5350e-02,  8.0670e-02,  1.0517e+00,
         -4.7172e-01, -1.2447e+00,  4.5268e-01, -4.7632e-02,  1.3006e-02,
          7.7258e-01,  1.5337e-01]], device='cuda:0') tensor(0.9501, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
745000 特征值优化 tensor(9.1530, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5273, -1.3306,  0.2161,  0.8033,  0.4045, -0.7886,  0.3313,  0.3755,
         -0.3869, -1.1332, -0.0051,  1.6241, -0.0953, -0.2899, -0.0165, -0.4617,
         -1.4834,  0.0564,  0.0099,  0.0063,  0.5660, -0.0087, -0.4077,  1.3385,
          0.1271,  0.6205,  0.2098,  0.0020,  1.0577,  0.9803,  0.1542, -0.0247,
          0.7177,  0.7410,  0.6546, -0.4152,  0.3612,  0.9524, -0.8103,  0.2254,
          0.7389, -0.2794, -0.1008,  0.5592, -0.2131,  0.0286,  0.3304,  0.0284,
          0.7887,  1.5276, -0.2624, -0.0395,  0.1913,  0.4717, -0.9419, -0.3018,
          1.8742, -1.2437, -1.2024, -1.0277, -0.1134, -0.6110,  0.3469,  0.4883,
          1.4223, -0.2309,  1.2890, -0.3452, -0.5149,  1.7870, -0.5158, -0.0387]],
       device='cuda:0') tensor(4.2670, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
746000 特征值优化 tensor(2.2920, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1919, -1.0438,  0.9566,  0.6472, -0.0277,  0.2407,  0.3896,  0.8924,
          0.3390, -0.7212,  0.7845,  1.2212, -0.1692,  0.0179, -0.0441, -0.3015,
         -0.4986,  0.2800, -0.0977, -0.0442,  0.1955,  0.0517, -0.0927,  0.4048,
         -0.0953,  0.1301,  0.1074,  0.1725,  0.3026,  0.4047, -0.0048, -0.0147,
          0.0090,  0.4283,  0.6039, -0.2443,  0.2986,  0.5661, -0.3432,  0.0517,
          0.6288, -0.0426, -0.5113,  0.3666,  0.3597,  0.2926, -0.1824,  0.4739,
         -0.0586,  0.7106, -0.2139,  0.0677, -0.1916,  0.1513, -0.0971, -0.0059,
          1.4912, -0.8065, -1.2428, -0.4542,  0.1010, -0.0053,  0.2846,  0.3175,
          0.7342, -0.3103,  0.7482, -0.4156,  0.0647,  0.6946, -0.7433,  0.0989]],
       device='cuda:0') tensor(0.9175, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
747000 特征值优化 tensor(2.0999, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0703, -0.7285,  1.0034,  0.6845,  0.1976,  0.5103,  0.3847,  0.9280,
          0.5157, -0.6062,  0.7765,  0.9456, -0.1717,  0.0051, -0.0359, -0.2107,
         -0.1620,  0.2165, -0.2267, -0.0727,  0.1991,  0.0444, -0.0979,  0.1577,
         -0.1557,  0.1296,  0.2360,  0.0239,  0.2475,  0.3080, -0.0147, -0.0652,
          0.0067,  0.3808,  0.4924, -0.1845,  0.2159,  0.5421, -0.1720,  0.0161,
          0.6470, -0.0386, -0.2881,  0.3493,  0.3512,  0.1452, -0.1937,  0.3057,
         -0.1028,  0.6648, -0.2362,  0.0675, -0.1623,  0.1284,  0.0249,  0.0933,
          1.1224, -0.7279, -0.8639, -0.5568,  0.2101,  0.0484,  0.1475,  0.3868,
          0.3732, -0.3399,  0.4858, -0.1969,  0.1269,  0.6401, -0.6432,  0.1912]],
       device='cuda:0') tensor(1.3166, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
748000 特征值优化 tensor(6.9934, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7706, -0.5759,  0.0137, -0.6549,  0.3905,  0.6083, -0.3282,  0.7548,
          1.4069,  1.6379,  0.3024,  1.3878,  0.0056, -0.0197,  0.0184, -0.3273,
         -0.2538,  0.4935, -0.5286, -0.0020,  0.0902,  0.1748,  0.5565, -0.4995,
         -0.3334,  0.0779,  0.0494, -0.6465, -1.6526, -0.0367, -0.0373,  0.4759,
          0.2862, -0.9849, -0.4967, -1.0709, -0.2272,  0.2138,  0.4066,  0.8738,
         -0.5387,  1.4078, -1.5345,  0.1939,  0.3676,  0.0439,  0.4031,  0.5039,
         -0.7567, -1.2836,  0.7900,  0.1880,  1.2042, -0.4021, -0.5437,  0.4846,
          0.5897,  0.0924,  0.3110, -0.1647,  0.3738, -0.4252, -1.7243,  0.1164,
         -0.8662,  0.5646, -0.3636,  1.0487, -0.9769,  0.0991,  0.5880,  0.7410]],
       device='cuda:0') tensor(4.2113, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
749000 特征值优化 tensor(2.2565, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2667e+00, -8.2941e-01,  7.2591e-01, -4.4101e-01, -3.0756e-02,
          9.9655e-01, -1.2954e-01,  1.1600e+00,  1.3809e+00,  1.9571e+00,
          8.0734e-01,  1.8257e+00,  1.5436e-02, -6.1043e-02,  5.8949e-03,
         -2.9561e-01, -1.4402e-01,  4.7961e-01, -3.3596e-01,  9.5006e-03,
          9.4074e-03,  9.7878e-02,  1.2322e-01, -1.0425e-01,  3.8978e-02,
         -4.5078e-03, -5.7790e-02, -8.3085e-02, -9.6793e-01, -1.1042e-01,
          3.1680e-02,  2.0406e-01,  1.0918e-01, -6.0830e-01,  1.0264e-03,
         -4.4226e-01, -8.2194e-02,  1.0135e-01,  3.9039e-01,  6.5743e-01,
         -2.3384e-01,  1.0449e+00, -8.1618e-01,  2.5236e-01,  2.5002e-01,
          4.1177e-01, -1.0241e-02,  1.0531e+00, -3.4584e-01, -1.4776e+00,
          6.3625e-01,  1.5551e-02,  4.0017e-01, -7.2143e-02, -3.2459e-01,
          4.4731e-01,  8.4869e-01, -2.5918e-02, -6.5335e-01, -1.3202e+00,
          6.3331e-01, -1.6761e-01, -1.1475e+00,  2.0232e-01, -4.1153e-01,
          5.5367e-01, -1.4232e-01,  5.4584e-01, -4.6428e-01,  9.8731e-02,
          9.5130e-01,  4.7324e-01]], device='cuda:0') tensor(1.0099, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
750000 特征值优化 tensor(2.1422, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0832, -0.7573,  0.8323, -0.4261,  0.1649,  1.0442, -0.3326,  0.9970,
          1.2720,  1.7706,  0.8214,  1.8766,  0.0209, -0.0211,  0.0373, -0.1824,
         -0.0772,  0.4180, -0.3305, -0.0149,  0.0030,  0.0762,  0.0956, -0.0835,
          0.0053,  0.0632, -0.0641, -0.1028, -0.8781, -0.0919,  0.0283,  0.1005,
          0.0268, -0.5556,  0.0715, -0.3474, -0.0411,  0.0698,  0.4433,  0.6845,
         -0.2784,  1.0008, -0.6022,  0.2004,  0.2050,  0.4347, -0.0510,  0.9621,
         -0.1594, -1.4984,  0.6440, -0.0293,  0.1240,  0.0390, -0.1429,  0.2092,
          0.5676,  0.0440, -0.8351, -1.0771,  0.5587, -0.1409, -0.9874,  0.2269,
         -0.3891,  0.4947,  0.0416,  0.4645, -0.3451,  0.1863,  0.9668,  0.6114]],
       device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
751000 特征值优化 tensor(7.0503, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.1671e-01,  1.6357e+00, -3.1164e-01, -7.4482e-01,  7.9115e-01,
          9.6652e-01,  6.6365e-01,  1.0219e+00,  3.1161e-01, -1.0329e+00,
          1.4094e+00,  5.3835e-01, -2.7364e-02,  4.7980e-02,  1.2715e-03,
         -6.2562e-01, -7.6448e-01, -2.6492e-02, -1.3980e+00, -7.4973e-02,
          5.3380e-01,  8.9929e-02,  7.7929e-02, -7.0508e-01,  2.0646e-01,
         -5.7933e-02, -1.2859e-01,  6.6034e-01, -2.1802e-01,  7.2636e-02,
          5.1041e-01,  5.8055e-01,  4.0257e-01, -2.6762e-01,  8.2345e-02,
          4.6833e-02, -1.5160e+00, -2.9569e-02,  1.0763e+00,  1.7496e-01,
         -8.7954e-01,  7.1835e-02,  7.0445e-01,  5.4749e-01, -1.6089e+00,
         -1.2993e+00,  1.7089e+00,  1.0092e-01, -8.9327e-01,  2.7638e-02,
          3.6755e-01, -2.9129e-01,  7.9993e-01,  7.5175e-01, -1.7596e+00,
          3.1890e-01,  6.3834e-01,  4.5629e-01, -2.5042e+00, -5.6673e-01,
          3.1273e-01, -4.5777e-01, -1.2638e+00,  6.9301e-01,  5.1171e-01,
          4.3200e-01,  1.0764e+00,  4.5351e-02,  1.2300e+00,  2.5781e-01,
          5.5057e-01,  1.4506e-01]], device='cuda:0') tensor(3.9710, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
752000 特征值优化 tensor(2.2800, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.0479e-01,  1.3395e+00,  5.7569e-02, -4.2889e-04,  1.2352e+00,
          8.9171e-01,  1.3687e+00,  5.5019e-02,  7.4496e-01, -3.3580e-01,
          1.9420e+00,  1.2989e-02,  1.5686e-01, -1.0353e-01,  1.8993e-02,
         -7.5868e-02, -1.5887e-01, -3.6089e-01, -6.6488e-01, -2.0673e-01,
          9.4199e-02, -2.1901e-02,  3.0298e-02, -7.1447e-02,  2.1286e-02,
         -2.4111e-02, -1.0067e-02,  1.4447e-02, -2.5504e-03,  1.8867e-04,
          3.0701e-01,  2.8534e-01,  2.9786e-01, -1.6006e-01, -1.2288e-02,
          1.4558e-03, -7.9057e-01,  1.1243e-01,  8.7852e-01,  1.4319e-02,
         -3.4575e-01, -1.6807e-02,  6.6769e-01,  1.5827e-02, -1.2480e+00,
         -1.5747e+00,  1.0969e+00, -2.1228e-01,  5.6371e-02,  2.2470e-01,
          1.0048e-03, -7.4572e-04,  5.7681e-03,  3.9276e-01, -9.8856e-01,
          8.2159e-01, -3.6133e-02,  3.1507e-01, -1.4693e+00, -2.8172e-01,
          9.3127e-01,  2.1805e-01, -1.3173e+00,  5.0763e-01,  7.9434e-01,
          4.7984e-01,  8.0995e-01, -2.6002e-01,  5.6449e-01, -7.9583e-02,
          1.9354e-01, -5.7470e-02]], device='cuda:0') tensor(1.4396, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
753000 特征值优化 tensor(2.1061, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.6426e-01,  1.5970e+00,  3.0897e-01, -3.1987e-02,  1.1698e+00,
          7.1402e-01,  1.4075e+00, -5.0757e-01,  8.5176e-01, -3.6564e-01,
          1.9261e+00,  8.3786e-02,  9.9072e-02, -4.7993e-02, -5.5842e-02,
         -1.3075e-01,  4.9880e-02, -2.4096e-01, -5.5608e-01, -2.4298e-01,
          3.4315e-02, -2.2439e-02, -9.5935e-03, -9.2877e-03,  2.3934e-02,
         -1.2274e-04,  2.0318e-02, -4.9357e-03, -4.5126e-02, -1.0958e-03,
          1.7766e-01,  2.9149e-01,  2.9098e-01, -3.4215e-02, -5.9688e-02,
         -1.9469e-02, -7.4156e-01,  3.0852e-01,  8.8416e-01,  2.6675e-02,
         -2.1108e-01, -1.4914e-02,  5.2997e-01, -1.6716e-01, -9.4594e-01,
         -1.5384e+00,  8.9241e-01, -2.1193e-01,  5.9492e-02,  2.1772e-01,
         -7.2667e-03,  7.5031e-03, -4.1152e-02,  2.2022e-01, -7.4292e-01,
          4.5922e-01, -5.6478e-02,  1.7430e-01, -1.0533e+00, -9.6672e-02,
          9.4392e-01,  2.2073e-01, -1.2766e+00,  3.1357e-01,  8.1006e-01,
          4.0538e-01,  8.2444e-01, -2.1640e-01,  3.2354e-01, -2.1606e-01,
          1.5909e-01,  1.1975e-03]], device='cuda:0') tensor(1.1602, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
754000 特征值优化 tensor(4.9194, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.8948e-01,  2.5035e-01,  6.4071e-01, -7.2104e-01,  9.7756e-01,
          1.8642e+00,  2.0103e+00,  2.1781e-01,  1.1206e+00,  2.7759e-01,
         -8.7482e-02, -7.4382e-01, -1.0517e-01,  1.2360e-01,  5.5115e-02,
          5.7157e-01, -2.3382e-01,  1.4515e-03, -5.3864e-02,  4.6504e-02,
         -1.5801e-01,  9.9751e-01,  4.6279e-01,  6.9053e-01, -3.9179e-02,
          1.8573e-02,  4.8685e-01,  7.9976e-02, -2.6775e-01, -2.2396e-01,
          8.1477e-02,  3.4690e-01,  6.0864e-02, -7.0874e-03,  1.8983e-01,
         -6.3165e-01, -2.0776e-01, -3.0359e-01, -4.6037e-01, -4.3061e-01,
         -6.8553e-01,  5.2800e-02, -1.1568e-02,  5.5468e-01,  1.0424e+00,
         -6.2305e-01,  5.9228e-01,  4.8769e-01,  1.1208e+00, -4.7863e-01,
         -4.9638e-01, -1.6937e-02, -2.5132e-01, -9.1025e-02, -7.6595e-02,
         -1.5881e+00,  1.2019e+00, -1.3221e+00,  3.4319e-01, -7.8427e-01,
          8.8788e-02, -4.6303e-01,  5.6796e-01,  8.0056e-02,  3.8346e-01,
          3.6890e-01,  7.9637e-03, -2.1984e-01, -7.4381e-02,  6.0346e-01,
          1.0812e+00, -1.0221e-01]], device='cuda:0') tensor(2.5641, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
755000 正交保障 tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7330e-01,  3.6977e-01,  8.8430e-01, -1.1780e+00, -4.6227e-03,
          1.9670e+00,  1.7104e+00,  5.3677e-01,  1.2200e-01,  7.8419e-02,
          2.3206e-01, -3.5716e-01, -1.4242e-01, -2.1878e-02, -2.3918e-03,
          2.3666e-01, -2.2889e-01, -7.6867e-02,  4.9670e-02, -1.1192e-03,
         -1.6865e-01,  6.4402e-01,  1.8218e-01,  2.9506e-01,  1.1929e-02,
         -5.7053e-02,  4.7722e-02,  3.3616e-02, -9.2396e-02, -3.6336e-01,
         -1.7841e-02,  2.0080e-01, -1.1486e-01, -1.6470e-02,  3.6066e-01,
         -4.9377e-01, -1.9416e-01, -2.3926e-01, -2.1737e-02, -3.6501e-02,
         -3.9922e-01, -1.3301e-01, -2.5516e-02,  1.9379e-01,  5.5629e-01,
         -1.4390e-03,  2.5038e-01,  3.0616e-01,  6.2468e-01, -4.0515e-01,
         -7.1403e-01, -3.2484e-02, -1.8716e-02,  8.2755e-03, -3.4105e-01,
         -7.9339e-01,  1.0958e+00, -1.0475e+00, -3.4165e-01, -3.8467e-01,
         -2.9090e-01, -1.1842e-01,  5.2470e-01,  7.4225e-03, -1.0124e-01,
          6.7548e-03,  8.2279e-02, -1.1200e-01,  3.6199e-01,  5.4572e-01,
          2.7848e-01, -2.2937e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
756000 特征值优化 tensor(22.3488, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2507, -0.6233, -0.6189,  1.7344,  0.9527, -0.6290,  0.0400, -1.7195,
         -1.0059, -0.4858, -1.4356,  1.9082,  1.9053, -1.2368, -0.4670,  0.7649,
         -0.0769,  0.1987, -1.4468,  0.5934,  0.4087,  0.3726,  1.2011,  0.2757,
         -0.2908,  0.3751,  0.6319,  0.4383,  2.0096,  1.5288,  0.8713, -0.6507,
          1.5963, -0.3043, -0.4102, -0.6406, -0.8390,  0.6276, -1.0838,  0.5104,
          0.1067, -1.2890, -0.2071,  0.1024, -2.4130, -0.9039, -0.8777, -0.3863,
         -0.5441, -1.4155,  0.5642,  2.6849,  1.1918, -0.6758,  0.0096, -0.8988,
         -1.5166, -0.3025, -0.7132, -0.4354,  0.0398,  0.5051, -0.6931, -0.3345,
          0.6150, -1.6107, -1.1643, -1.2605,  2.0337, -0.4679, -0.4110, -0.6181]],
       device='cuda:0') tensor(12.1631, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
757000 特征值优化 tensor(6.3166, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.0612e-01, -2.6960e-01,  3.6801e-01,  9.9820e-01,  1.3168e+00,
          3.4112e-01,  6.8232e-01, -1.0906e+00, -1.1701e+00, -4.0474e-01,
         -4.5522e-01,  2.3003e+00,  8.8720e-01, -4.1823e-01, -1.5549e-01,
          1.6135e-01,  2.8993e-02,  1.8279e-01, -4.0339e-01,  4.7848e-01,
         -3.5230e-01,  5.3333e-01,  3.6415e-01, -9.6046e-04, -1.2350e-03,
          5.4850e-03,  4.5177e-02,  4.5649e-02,  1.0275e+00,  7.5856e-01,
          4.6352e-01,  1.2040e-02,  6.3638e-01, -4.3765e-02,  5.8123e-04,
         -6.5294e-03, -3.4564e-01,  2.4829e-01, -4.1642e-01,  8.4632e-02,
         -2.1113e-01, -6.8773e-01,  6.6221e-01,  9.7367e-01, -1.4965e+00,
         -5.0058e-01, -3.8692e-01,  5.7195e-01, -1.8332e-01, -7.4162e-01,
         -3.2488e-01,  1.6411e+00,  1.2854e+00, -1.5065e-01,  2.2978e-01,
         -8.0620e-01, -6.5768e-01,  1.2840e-01,  2.2805e-02,  1.4910e-02,
         -3.9490e-01,  5.2851e-01, -8.5990e-02, -2.2574e-01,  2.7728e-01,
         -5.6939e-01, -5.7484e-01, -3.5859e-01,  1.8596e+00, -4.0503e-01,
          5.4310e-02,  2.9287e-01]], device='cuda:0') tensor(3.0950, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
758000 特征值优化 tensor(2.2385, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1031, -0.8800,  0.7994,  0.9512,  1.2559,  0.1695,  0.6171, -0.7450,
         -0.3846, -0.0762,  0.1098,  1.5809,  0.4994, -0.0239,  0.0337,  0.0716,
          0.0114,  0.0323, -0.0982,  0.1697, -0.4680,  0.3781,  0.1320,  0.0519,
         -0.0191,  0.0050,  0.1228,  0.0344,  0.5546,  0.2928,  0.2604,  0.2171,
          0.4133, -0.0309, -0.0054,  0.0233, -0.1346,  0.1572, -0.1493,  0.0211,
         -0.2220, -0.3749,  0.5797,  1.2344, -1.2078, -0.5119,  0.0359,  1.0277,
          0.0328, -0.7878, -0.4701,  1.0785,  0.4337,  0.0707,  0.2924, -0.4834,
         -0.3075,  0.1822,  0.0187,  0.0307, -0.2325,  0.2314, -0.1910, -0.0112,
         -0.0363, -0.0904, -0.0698,  0.0028,  0.9305, -0.0305, -0.4649,  0.6362]],
       device='cuda:0') tensor(1.0625, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
759000 特征值优化 tensor(2.1565, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2531, -0.8017,  0.7500,  0.9705,  1.0948,  0.2603,  0.6869, -0.5845,
         -0.1957, -0.0461,  0.3462,  1.2036,  0.4699,  0.0551, -0.0865,  0.0457,
          0.1235,  0.1267, -0.0892,  0.0944, -0.4395,  0.3546,  0.0422, -0.0097,
          0.0260,  0.0247,  0.2603,  0.0438,  0.5538,  0.2687,  0.1455,  0.2158,
          0.3237, -0.0226, -0.0334, -0.0080, -0.0933,  0.0989, -0.1485,  0.0215,
         -0.1742, -0.1650,  0.4315,  1.2134, -1.1171, -0.5143,  0.0696,  0.9779,
          0.2261, -0.8994, -0.3376,  0.9459,  0.3070, -0.0265,  0.1464, -0.3031,
         -0.1493,  0.1082,  0.0490,  0.0485, -0.2417,  0.1797, -0.1516,  0.0446,
         -0.0844, -0.0633, -0.0568,  0.0315,  0.6129,  0.0192, -0.5466,  0.4107]],
       device='cuda:0') tensor(1.1829, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
760000 特征值优化 tensor(7.1541, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0261e+00, -1.5584e-01,  1.7431e-01, -9.8952e-01,  4.8089e-01,
         -6.8626e-02,  7.1523e-01, -2.9138e-01,  5.3249e-01,  1.0675e+00,
          7.5112e-01,  1.7549e-01, -7.5445e-01,  3.6987e-01,  5.5423e-01,
         -7.2906e-02, -5.4690e-02, -1.0944e-01, -6.6680e-01, -8.5453e-01,
          5.3601e-01,  5.7763e-01, -1.4236e-03, -8.1135e-02, -4.6941e-01,
         -7.5533e-02,  1.4542e-01, -1.6851e-01, -3.8674e-02,  6.3840e-03,
          1.7180e-01, -1.1637e-02, -1.0409e-02, -1.7786e-01,  1.6744e-01,
         -2.6284e-01,  1.9157e-02,  6.2529e-01,  1.1843e-01, -1.7437e-01,
         -1.1446e+00, -9.2217e-02, -7.4061e-02, -3.7498e-01, -3.0829e-01,
         -1.6564e+00, -1.2494e+00, -7.1180e-01,  3.2171e-01, -5.5941e-01,
         -2.9851e-01,  6.1405e-01,  1.5878e-01, -5.1732e-01,  2.0236e-01,
         -5.7085e-02,  1.1457e-01, -8.0627e-02, -1.1794e-01, -1.8377e-01,
          3.2428e-01, -3.4499e-01, -6.4876e-01, -4.8071e-01, -4.8689e-02,
          3.3081e-01, -2.5677e-01, -8.6914e-02, -9.4640e-01, -4.5271e-02,
          8.2061e-01, -2.8941e-01]], device='cuda:0') tensor(4.2610, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
761000 特征值优化 tensor(2.0827, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4745,  0.1019,  0.5359, -0.4143, -0.1420, -0.1161,  0.6600, -0.6486,
          0.4418,  0.6295,  1.3419, -0.3971, -0.2892,  0.0347,  0.0215,  0.1278,
         -0.1895, -0.1421, -0.3080, -0.5702,  0.3555,  0.2487, -0.0027, -0.0305,
         -0.1867, -0.1728,  0.2798, -0.1117,  0.1038, -0.2215, -0.0182, -0.0797,
         -0.0084, -0.0245,  0.0333, -0.0392, -0.0940,  0.2908, -0.0994, -0.0678,
         -0.5602, -0.0420,  0.2920, -0.2187, -0.1432, -0.8859, -0.6294, -0.4301,
          0.6991, -0.3302,  0.1279,  0.0400,  0.0441,  0.0064,  0.0625, -0.0880,
         -0.2362,  0.1530,  0.0819,  0.0136,  0.2732,  0.0761, -0.2535, -0.0720,
         -0.2441,  0.3547, -0.2494,  0.0457, -0.3466,  0.4575,  0.1555,  0.0872]],
       device='cuda:0') tensor(0.7654, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
762000 特征值优化 tensor(6.8596, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.5626, -0.1279,  1.0673, -0.7918,  1.6811, -1.5932,  0.3590, -0.2978,
         -0.4840, -0.3054, -1.1412,  1.7137, -0.5125, -1.1836,  1.0302, -0.4587,
          0.6271,  1.1330,  0.8840, -0.4614, -0.6046, -0.1291, -0.1181,  0.7745,
         -0.4705,  0.3741, -0.8094, -0.1863,  0.6593,  0.1339,  1.4872,  0.0339,
          0.2040, -0.0660, -0.2092,  0.2119, -0.1267,  0.2753,  0.4997, -0.8490,
          0.2001,  0.4220,  1.9195, -0.2423, -0.4609, -0.1419,  0.6570,  1.6499,
         -1.5321, -0.0952,  1.4034, -1.0178,  1.9515,  1.0612,  0.9035,  0.3543,
          0.5987, -0.2775,  0.0811,  0.3074,  0.2395,  0.6320,  0.1998, -0.2382,
          1.9226, -0.9343, -0.7475, -0.5316, -0.7872, -0.1250, -0.1075,  0.3224]],
       device='cuda:0') tensor(4.0964, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
763000 特征值优化 tensor(2.4116, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-9.2975e-01, -5.4962e-02,  1.0170e+00, -4.7401e-02,  2.4933e+00,
         -6.3453e-01,  2.2992e-01, -4.0478e-01, -1.3779e-01, -9.2606e-01,
         -7.7816e-01,  1.9046e+00, -1.9456e-01, -2.6562e-01,  1.1856e-01,
         -2.7512e-02,  4.4288e-02,  1.9373e-01,  7.3437e-02, -2.5648e-01,
         -1.6848e-01,  6.7476e-03,  8.9349e-02,  1.6247e-01, -7.8631e-02,
          2.7091e-02, -2.1235e-02, -3.5106e-01,  6.4883e-01, -1.5013e-02,
          1.0249e+00,  1.1362e-03,  1.4407e-02, -2.8811e-02,  4.5163e-02,
         -5.5418e-02, -9.2490e-02,  4.2321e-02,  2.9978e-01, -4.6941e-01,
          1.9439e-01,  4.8670e-01,  8.2354e-01, -1.1335e-01, -1.1636e-01,
          2.1479e-02,  1.6124e-01,  1.4375e+00, -1.5241e+00, -3.5473e-01,
          1.7965e+00, -9.3159e-01,  7.0214e-01,  1.0795e+00,  4.8584e-01,
          4.4242e-01,  6.3487e-02,  7.0532e-02,  5.4432e-02,  5.7030e-02,
         -3.8024e-01,  3.3293e-01,  3.9198e-02, -1.0006e-01,  1.7114e+00,
         -9.1803e-01, -4.6424e-01, -1.5900e-01, -4.4101e-01,  6.7604e-02,
         -5.0941e-01,  6.2788e-01]], device='cuda:0') tensor(0.9185, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
764000 特征值优化 tensor(2.0992, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-6.9790e-01, -3.5294e-01,  1.1153e+00,  3.4497e-02,  2.4294e+00,
         -3.3905e-01,  8.7802e-02, -3.8086e-01, -2.6940e-01, -1.0781e+00,
         -8.2520e-01,  1.8328e+00, -1.3105e-01, -1.0248e-01, -3.8190e-02,
          4.0864e-02, -8.0590e-03,  2.5055e-02, -1.5463e-02, -1.5866e-02,
         -1.1090e-01,  4.4160e-03, -2.1984e-02,  3.3251e-02,  6.4893e-02,
         -4.5995e-02, -2.1360e-03, -3.1410e-01,  5.3561e-01, -1.6865e-02,
          9.8582e-01, -3.3235e-02, -4.0674e-03, -1.9555e-02,  2.8763e-02,
         -7.3959e-03, -6.4001e-02,  4.1262e-02,  2.9042e-01, -4.5729e-01,
          2.0166e-01,  4.8034e-01,  2.1641e-01,  9.6426e-03,  7.1242e-02,
          1.0940e-01,  4.7293e-02,  1.3550e+00, -1.4132e+00, -4.5719e-01,
          1.8548e+00, -9.8989e-01,  4.5639e-01,  1.1417e+00,  3.5215e-01,
          4.8475e-01, -1.4743e-02,  5.2516e-02, -8.0730e-03,  2.2938e-02,
         -3.5190e-01,  2.6182e-01,  3.6236e-02, -9.6173e-02,  1.5729e+00,
         -8.6474e-01, -4.4965e-01, -1.4949e-01, -4.3627e-01,  8.7888e-02,
         -4.1917e-01,  6.2603e-01]], device='cuda:0') tensor(1.6595, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
765000 特征值优化 tensor(5.2305, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2542, -0.1562,  1.0406, -1.9988, -0.3619,  1.1799,  0.1788,  1.2927,
          0.8612,  1.0438,  1.3208,  0.0385, -0.1458, -0.0080,  0.0200, -0.4177,
         -1.1355,  0.7340, -0.1824,  0.0037, -0.1179,  0.4025, -0.5416,  0.3047,
          0.0689, -0.2666, -0.1551,  0.2035,  0.5630, -0.9941,  0.0968, -0.1821,
          0.2326,  0.0164,  0.3976,  0.0990, -0.0127, -0.0304, -0.0841, -0.8258,
          0.4068, -0.1834, -0.0662,  0.8329, -0.8022,  0.1629,  0.0462,  0.3173,
          0.4208,  0.5757,  0.5926, -1.2791,  0.5330, -0.1375,  0.1218,  0.2891,
         -0.0220, -0.1885, -0.1625, -0.1238, -0.2249, -0.2037,  0.6486, -0.8020,
          1.1890, -0.3744, -0.2719,  0.6881, -0.6868, -0.6928,  1.1776,  0.4449]],
       device='cuda:0') tensor(3.6274, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
766000 特征值优化 tensor(2.1250, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1496, -0.2580,  1.4123, -2.2623, -0.2409,  0.6400,  0.7500,  1.6954,
          1.1915,  1.0681,  1.4882,  0.0625, -0.0169, -0.0836,  0.0360, -0.1768,
         -0.4556,  0.5239, -0.1898,  0.0087, -0.0056,  0.5214, -0.1660,  0.2195,
         -0.0199, -0.1650, -0.1118,  0.1107,  0.2527, -0.6737, -0.0164, -0.0683,
          0.0635,  0.0257,  0.2259, -0.0042, -0.1323, -0.0115, -0.1296, -0.5355,
          0.2502, -0.2253, -0.3897,  0.3353,  0.0846,  0.0547, -0.0193,  0.5812,
          0.3221,  0.5891,  0.1101, -0.8895,  0.0261,  0.0346,  0.1212,  0.5424,
         -0.4351,  0.1495, -0.1061, -0.0624,  0.0360, -0.4640,  0.3366, -0.5477,
          1.3426, -0.2381, -0.2365,  0.6051, -0.4962, -0.4626,  0.3171,  0.4075]],
       device='cuda:0') tensor(0.7407, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
767000 特征值优化 tensor(8.6785, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2574, -1.6831,  1.2076,  0.5801,  0.5733, -0.0174, -0.7886,  0.5423,
          1.8330,  0.8833, -0.3843, -0.0413, -0.3717,  1.0099,  0.3729,  0.3857,
         -0.2996,  0.1062,  0.1167,  0.0583,  0.8163,  0.3189,  0.5630, -0.1610,
          1.3084, -0.3112, -0.0305,  0.0690, -0.3199, -1.2093, -0.2683,  0.5753,
         -0.7454,  0.0363, -1.1562,  0.2631,  0.0231,  0.0225, -0.6305, -0.7771,
          0.5902, -0.1015,  1.6902, -0.1123,  0.4121,  1.4598, -0.8332,  0.1403,
          1.0076, -0.1514, -0.0571,  0.0273, -0.6052, -0.6505, -0.0061, -0.9703,
          0.6993,  0.8765,  0.1840,  0.1699, -0.0115,  1.3971,  0.2851, -0.0683,
          0.9461,  0.4150,  0.2940, -0.5713, -0.4516, -0.4235,  2.2765, -0.1799]],
       device='cuda:0') tensor(5.0921, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
768000 特征值优化 tensor(2.2987, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6522, -1.0301,  1.8290,  0.2776,  0.4312,  0.4884,  0.4229,  0.0687,
          2.2818,  1.5871, -0.4619,  0.1435, -0.1925,  0.2846, -0.2355, -0.0997,
         -0.1887,  0.0638, -0.0376, -0.1453,  0.1881,  0.1672, -0.0273, -0.0612,
          0.5296,  0.0086,  0.0479,  0.0545, -0.0564, -0.7269, -0.1081,  0.0575,
         -0.0436,  0.0394, -0.4959,  0.3398,  0.2431,  0.0712, -0.4393, -0.3690,
          0.1921, -0.2045,  0.5883, -0.4813,  0.3327,  1.0310, -0.6545, -0.0196,
          1.1596, -0.0105, -0.0721,  0.0372, -0.5783,  0.0362, -0.1570, -0.3243,
         -0.0742,  0.0810,  0.3773,  0.2436, -0.2209,  0.5786, -0.1367,  0.0695,
          1.1788, -0.1522,  0.8568, -0.5830, -0.2655, -0.1259,  1.2918, -0.4987]],
       device='cuda:0') tensor(1.0824, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
769000 特征值优化 tensor(2.1049, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.3316e-01, -5.1690e-01,  1.9586e+00,  1.9252e-01,  1.9756e-01,
          6.2656e-01,  1.5814e-01, -1.9751e-01,  2.2984e+00,  1.7526e+00,
         -6.5320e-01,  9.7885e-02, -9.9580e-02,  2.0838e-01, -2.3153e-01,
         -9.0252e-02, -8.7032e-02, -1.4673e-02, -7.1519e-02, -2.0459e-01,
          9.0622e-02,  1.5155e-01, -1.6556e-01, -4.6192e-02,  4.0661e-01,
          4.2120e-04,  1.0386e-01,  8.2129e-02, -7.6578e-02, -6.7023e-01,
         -1.1144e-01, -5.6793e-03, -2.3957e-02,  3.1186e-02, -4.6288e-01,
          3.2122e-01,  5.0391e-02,  5.8829e-02, -4.6242e-01, -3.1683e-01,
          1.8171e-01, -2.2886e-01,  2.6818e-01, -4.4766e-01,  3.3169e-01,
          6.3569e-01, -3.8053e-01, -8.4827e-02,  1.0488e+00, -1.9590e-02,
         -6.2280e-02,  7.7901e-02, -3.9287e-01,  3.6756e-02, -8.4518e-02,
         -2.6391e-01, -7.5194e-02,  3.7603e-02,  3.7454e-01,  2.5338e-01,
         -2.4950e-01,  2.2876e-01, -1.6373e-01,  6.5074e-03,  1.1999e+00,
         -1.8420e-01,  8.2376e-01, -5.6320e-01, -2.7863e-01, -4.8459e-02,
          1.2470e+00, -5.2381e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
770000 特征值优化 tensor(7.1094, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6414, -1.0369,  1.6374,  1.6477,  0.4606, -0.2424,  1.4036, -1.8425,
         -0.7345,  0.9666, -1.0027,  0.5081, -0.5870, -0.2171,  0.5217, -0.1154,
         -0.0673, -0.5783, -0.1440,  1.8281,  0.3294, -0.6941,  0.0925,  0.3241,
          0.9370, -0.2397,  0.0671, -0.0133, -1.4346, -0.7476, -0.4994, -0.7367,
         -0.1022, -0.7357,  0.2082, -0.1232,  0.2160, -0.1496,  0.3466,  0.0679,
          0.6800, -0.0714,  1.6130, -0.9180, -0.6666, -1.1468,  1.1041,  1.4541,
          1.1131, -0.2141,  0.3783,  0.4895,  0.9749,  0.1808, -0.6292,  0.6498,
         -0.1037, -0.0955,  0.0885,  0.2828,  0.6267, -0.5680, -0.5032, -0.2587,
         -0.1943, -0.3093, -1.2745,  0.1147,  0.6223,  0.4716, -0.1511,  0.0281]],
       device='cuda:0') tensor(4.5504, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
771000 特征值优化 tensor(2.3321, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.0610e+00, -1.4601e+00,  2.1291e+00,  1.9699e+00,  7.7806e-01,
         -3.9756e-01,  2.0106e+00, -1.3380e+00, -1.3571e-01,  6.5721e-01,
         -4.6726e-01,  5.6736e-01, -2.1995e-01, -1.5459e-02,  5.2924e-02,
         -5.3429e-02,  1.4299e-01, -1.2413e-01, -8.2266e-02,  1.1879e+00,
          2.5098e-01, -4.8799e-01, -5.3642e-02,  9.2598e-02,  3.8202e-01,
         -2.8981e-01,  2.0992e-01,  3.2992e-01, -8.1348e-01, -5.5156e-01,
         -1.7980e-01, -5.3842e-01, -1.5718e-01, -1.3274e-01, -1.1452e-02,
          4.0994e-02,  3.1450e-01, -1.5714e-01,  2.2664e-01,  3.2984e-02,
          1.2946e-01,  2.2604e-03,  1.8833e+00, -1.5390e+00, -8.7433e-01,
         -1.4005e+00,  9.3336e-01,  1.4921e+00,  5.8677e-01, -7.6004e-01,
          6.2549e-01,  2.2117e-01,  3.8082e-01, -4.5165e-02, -6.1696e-01,
          4.2321e-01, -1.7315e-01,  8.1474e-04,  2.4156e-01,  6.9548e-02,
          5.9752e-01, -5.0854e-01, -2.4160e-01,  5.0534e-02, -6.1171e-01,
         -2.4951e-02, -5.4797e-01,  1.4168e-01,  4.4626e-01,  1.8172e-01,
         -4.1770e-01,  1.4988e-01]], device='cuda:0') tensor(1.0269, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
772000 特征值优化 tensor(2.0924, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1409, -1.7116,  2.1888,  1.9501,  0.7242, -0.1722,  2.2259, -1.2108,
         -0.4151,  0.2015, -0.3883,  0.2604, -0.2151,  0.0686,  0.0348,  0.0743,
         -0.0122, -0.1363, -0.0615,  0.9325,  0.1999, -0.4199, -0.0247, -0.0035,
          0.2293, -0.1731,  0.1003,  0.2096, -0.6992, -0.4551, -0.1351, -0.4368,
         -0.1618, -0.1122,  0.0065,  0.0114,  0.2501, -0.2081,  0.2479,  0.0482,
          0.1325, -0.0150,  1.7740, -1.8748, -0.6185, -1.5204,  1.0601,  1.3975,
          0.6332, -0.7736,  0.9915,  0.0452,  0.1199,  0.0461, -0.6415,  0.5061,
         -0.2269,  0.0460,  0.2592,  0.0331,  0.5220, -0.3572, -0.2893,  0.1294,
         -0.4627,  0.0460, -0.2354,  0.0865,  0.4446,  0.2117, -0.1616,  0.0890]],
       device='cuda:0') tensor(1.3165, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
773000 特征值优化 tensor(9.5337, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3869e+00,  2.7186e-01,  7.8755e-01,  4.4553e-01,  2.7102e+00,
          1.8804e+00,  1.3549e+00, -9.7114e-01,  1.4095e+00,  1.9316e-01,
          2.0083e+00, -5.3873e-01, -1.9812e-01, -1.5620e+00, -7.3026e-02,
         -1.0208e-02, -1.0410e+00, -2.0597e+00,  2.3655e-01,  1.5700e+00,
          1.0484e-02, -3.5405e-01,  4.4922e-01,  2.1254e+00, -4.8472e-02,
         -1.6081e-01, -2.4107e-01,  7.5428e-01, -6.8262e-02, -6.8442e-01,
         -6.1267e-01,  6.2393e-01, -2.1774e-01,  9.1024e-01, -6.5784e-01,
         -2.9207e-04,  1.5509e-02, -7.0066e-02,  1.2904e+00,  1.9867e-01,
          5.3456e-02, -1.2456e-01,  7.2044e-01,  3.5994e-01,  1.1817e+00,
         -5.8000e-02,  1.0306e+00,  2.4285e-01,  1.8335e-01,  4.7505e-01,
          9.9486e-01, -4.3631e-01,  7.5740e-01,  1.9393e-01,  9.3933e-01,
         -9.2090e-01,  7.3935e-02,  8.1658e-01, -7.4409e-01,  1.9893e-02,
         -2.7221e-01, -1.3526e+00,  5.8196e-01, -3.5827e-01,  1.1887e+00,
          4.7051e-01, -6.6437e-01,  9.6452e-01, -6.4841e-01, -2.5709e-01,
         -1.4271e+00,  1.4077e+00]], device='cuda:0') tensor(5.6453, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
774000 特征值优化 tensor(2.5831, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1058e+00,  9.6329e-01,  1.1624e+00,  5.3677e-02,  1.8344e+00,
          2.2955e+00,  9.6037e-01, -1.4336e+00,  1.8120e+00,  7.4943e-01,
          2.3587e+00,  5.2851e-01, -9.6792e-02, -5.2380e-01,  5.2484e-02,
          1.2669e-01, -5.4411e-01, -1.0869e+00, -3.9249e-01,  7.5995e-01,
         -9.4535e-02, -2.2454e-01,  3.2895e-02,  1.0997e+00, -2.5344e-01,
         -6.6243e-02, -4.4329e-03, -2.0922e-03, -4.2607e-02, -2.7788e-01,
         -3.9688e-01,  1.2750e-01,  1.2049e-01,  4.2688e-01, -1.6394e-01,
         -1.0547e-02,  6.9670e-02, -4.1608e-03,  9.0252e-01,  3.2396e-01,
         -5.8644e-02,  9.2218e-02,  9.9231e-01, -4.1787e-01,  4.3717e-01,
          4.8594e-01,  4.9434e-01, -3.6139e-01,  2.5333e-01,  3.1385e-01,
          2.3628e-01,  7.7531e-03, -1.7720e-01,  4.7434e-01,  1.9393e-01,
         -1.7731e-01, -4.2736e-01,  6.2260e-01, -5.9686e-01, -4.2394e-01,
         -2.2461e-01, -4.8528e-01,  7.4226e-01,  2.8396e-01,  7.1442e-01,
          3.0585e-01, -1.9362e-01,  2.7780e-01, -1.3271e+00, -4.2472e-02,
         -4.9728e-01,  3.5099e-01]], device='cuda:0') tensor(1.4654, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
775000 特征值优化 tensor(2.1308, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1633,  0.9911,  1.0364,  0.1947,  0.8705,  2.4103,  0.7432, -1.0061,
          1.7836,  0.4918,  2.7400,  0.5551, -0.1440, -0.0582,  0.1018,  0.0299,
         -0.3726, -0.6837, -0.1185,  0.6338, -0.1315, -0.1661,  0.1914,  0.5100,
         -0.2087,  0.0615,  0.0124, -0.0983, -0.0265, -0.1930, -0.0963,  0.0361,
          0.0852,  0.2911, -0.1191,  0.0335,  0.0831, -0.0284,  0.7880,  0.3407,
         -0.0513,  0.1396,  1.0310, -0.4246,  0.5042,  0.8252,  0.2910, -0.2168,
          0.2087,  0.2088,  0.0092,  0.0352, -0.3258,  0.2613,  0.1025, -0.0942,
         -0.4661,  0.4066, -0.6646, -0.5630, -0.4905, -0.1551,  0.7175,  0.2040,
          0.5718,  0.4666, -0.0602,  0.1544, -1.3389, -0.1456, -0.3919,  0.2252]],
       device='cuda:0') tensor(1.4503, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
776000 特征值优化 tensor(7.6290, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4387, -1.3685, -1.1045,  0.2912,  0.2586,  1.5315, -0.5133, -0.7426,
          1.2788, -0.5667,  0.8661, -0.9807, -0.6691,  0.0421,  0.1572, -0.3051,
          0.0908, -0.1460,  0.9466, -0.3066, -0.2908,  0.0526,  0.3996, -0.1140,
          0.1206,  0.1382, -0.0179,  0.1640, -0.2809, -0.2156, -0.3841,  0.5951,
         -1.3103, -0.5339, -0.3678,  0.3132,  0.1484,  0.1172,  0.7792, -0.7424,
          0.4567,  0.2366,  0.6342,  0.4756, -0.3030,  2.0347, -0.8304, -0.5167,
          0.6569,  1.1647, -1.4559,  0.0650, -0.1050, -0.8869,  1.0538,  0.5461,
          0.3648,  0.6160, -0.5822,  0.7639, -0.1321,  1.1579,  0.9453,  0.3830,
          1.2465,  0.5328, -1.4117,  0.5583,  0.5457, -1.0901,  1.4312, -0.9795]],
       device='cuda:0') tensor(4.7372, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
777000 特征值优化 tensor(2.1925, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.3778e-01, -8.5147e-01, -5.0299e-01,  6.5870e-01,  6.7249e-01,
          1.2625e+00,  1.1800e-01, -2.6384e-01,  1.8058e+00, -5.5860e-01,
          1.4511e+00, -3.7713e-01, -1.4780e-01, -7.0547e-02, -9.1894e-02,
         -1.0221e-01, -1.7270e-01, -2.3462e-01,  2.9699e-01, -3.3705e-01,
         -1.1854e-01,  4.7984e-03, -1.3650e-02, -2.7551e-04,  1.1831e-02,
         -7.5900e-03,  1.0499e-01,  1.4558e-03,  1.7184e-02, -2.2527e-02,
         -1.5170e-01,  1.4051e-01, -8.4613e-01, -2.3720e-01, -1.0718e-01,
         -5.4750e-02,  3.1067e-01,  2.9063e-01,  5.6966e-01, -3.7535e-01,
          3.0675e-01,  2.8352e-01,  5.9159e-01, -2.9709e-01, -6.0686e-01,
          1.4521e+00, -5.5580e-01,  4.2595e-02, -7.8250e-03,  3.8437e-01,
         -5.7703e-01,  7.9476e-02,  2.6266e-01, -5.4987e-01,  6.2395e-01,
          8.9344e-01, -3.2743e-01,  5.0283e-01, -4.7626e-01,  4.1893e-01,
          7.4191e-02,  4.5775e-01,  6.2738e-01, -4.8027e-02,  7.5794e-01,
          9.8205e-02, -1.2459e+00,  4.5955e-01,  1.0892e+00, -1.0481e+00,
          1.5470e+00, -7.5941e-01]], device='cuda:0') tensor(0.9101, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
778000 特征值优化 tensor(2.1032, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.9613e-01, -6.3543e-01, -3.8050e-01,  5.2762e-01,  6.6062e-01,
          9.3413e-01,  7.1822e-02, -1.4603e-01,  1.7252e+00, -5.6375e-01,
          1.5083e+00, -9.8200e-02, -1.2552e-01, -2.0115e-03, -1.1966e-01,
         -7.0252e-02, -1.0835e-01, -1.5337e-01,  1.5855e-01, -3.7907e-01,
         -1.0240e-01,  9.7894e-04,  2.6845e-02, -3.5261e-02,  1.2111e-01,
          1.1759e-01,  7.1357e-02, -4.8243e-02,  3.8108e-02, -2.4727e-02,
         -1.4121e-01,  1.4142e-01, -7.8944e-01, -1.1984e-01, -1.1808e-01,
         -6.1095e-02,  2.6289e-01,  3.0352e-01,  5.0371e-01, -3.3550e-01,
          2.7218e-01,  2.4469e-01,  6.2950e-01, -2.9343e-01, -6.5451e-01,
          1.1768e+00, -4.9975e-01,  8.6503e-02,  8.3299e-02,  2.5335e-01,
         -4.4330e-01,  4.0517e-02,  3.1040e-01, -5.1659e-01,  4.4375e-01,
          1.0116e+00, -2.9983e-01,  3.6838e-01, -2.9752e-01,  2.2400e-01,
         -1.0257e-01,  2.7862e-01,  4.2827e-01, -5.6863e-02,  6.4176e-01,
          5.6385e-02, -1.1527e+00,  4.7531e-01,  1.1888e+00, -7.9789e-01,
          1.4733e+00, -7.2884e-01]], device='cuda:0') tensor(1.2943, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
779000 特征值优化 tensor(5.2849, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.9093e-01, -2.7606e-01,  2.3332e+00,  1.6351e-01,  1.2654e+00,
          5.8731e-01,  2.9703e-02,  9.9793e-01,  9.0783e-01,  1.9910e+00,
          1.0362e+00,  4.2000e-01,  2.1126e-01, -2.3622e-01,  5.3356e-01,
         -2.8863e-03, -8.8934e-03,  2.5103e-02, -2.4673e-02, -3.6837e-02,
         -2.9533e-01, -1.5593e+00, -7.1761e-01, -2.9992e-01, -5.8598e-02,
         -9.1522e-02,  1.4544e-01,  2.0357e-01, -3.4902e-02,  3.5313e-01,
         -4.7811e-01,  6.3009e-02, -2.4757e-01, -1.1729e-01, -2.5721e-01,
         -1.3632e-01,  4.0898e-01,  6.0382e-01,  9.8152e-01,  6.1141e-01,
          2.0494e-01, -2.7095e-02, -4.2278e-01, -9.4011e-02,  2.1583e-01,
          2.7234e-01, -1.2390e-01, -9.4459e-01,  8.0718e-01,  3.1925e-01,
         -8.7915e-01, -3.0408e-01,  5.9987e-01,  6.7159e-01,  3.4320e-01,
          5.6849e-01,  8.2310e-02, -1.8808e-01, -1.6169e-01, -1.4838e-01,
          3.1624e-01, -1.4246e-03,  3.7635e-01,  9.7707e-02,  1.7218e+00,
          6.0034e-01, -1.6847e-01,  6.2505e-01,  9.2886e-01, -5.6305e-01,
          7.3902e-01, -3.5350e-01]], device='cuda:0') tensor(3.1168, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
780000 特征值优化 tensor(2.1824, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3697,  0.2969,  2.9593, -0.3190,  0.8122,  0.2018,  0.3798,  0.9574,
          1.2381,  1.5288,  1.0721,  0.5807,  0.1073,  0.0077,  0.0579,  0.0790,
          0.1028, -0.0518,  0.1199, -0.0087, -0.1304, -0.9693, -0.3425, -0.2499,
          0.1083,  0.1903, -0.0650,  0.1041, -0.0037,  0.1898, -0.2920,  0.1710,
         -0.4318, -0.0186, -0.0170, -0.0295,  0.3382,  0.4366,  0.7294,  0.3968,
          0.5228,  0.2138, -0.4039, -0.1453,  0.3944,  0.0674,  0.0547, -0.4337,
          1.0796,  0.7329, -0.2448, -0.1208,  0.3679,  0.3413,  0.6592,  0.8155,
         -0.3474,  0.1056,  0.1765, -0.0607,  0.1484,  0.1166,  0.4907, -0.0269,
          1.2707,  0.4674, -0.0872,  0.4495,  0.9362, -0.0956,  0.6384, -0.0796]],
       device='cuda:0') tensor(0.7714, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
781000 特征值优化 tensor(2.0922, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.8443e-01,  3.1023e-01,  2.9817e+00, -4.2928e-01,  6.7290e-01,
          2.4275e-01,  5.5952e-01,  9.0445e-01,  1.2432e+00,  1.2671e+00,
          1.2963e+00,  6.8193e-01,  1.1034e-01, -9.4400e-03,  8.9425e-02,
          6.6697e-02,  6.1419e-02, -1.1911e-01,  1.4685e-01, -2.9275e-02,
         -1.3448e-01, -9.2101e-01, -3.0816e-01, -2.6787e-01,  1.6324e-01,
          2.0203e-01, -1.2229e-01,  1.2171e-01,  4.1279e-02,  2.0482e-01,
         -2.1389e-01,  2.1356e-01, -4.2530e-01, -2.0496e-02,  1.1444e-04,
         -7.9747e-03,  2.9326e-01,  4.0599e-01,  6.5134e-01,  3.5604e-01,
          5.0776e-01,  1.7924e-01, -3.7655e-01, -1.9204e-01,  4.3180e-01,
          6.5620e-02,  5.7594e-02, -4.7177e-01,  9.5030e-01,  7.0611e-01,
         -2.4803e-01, -1.5126e-01,  3.8002e-01,  2.5072e-01,  6.2269e-01,
          7.7403e-01, -3.8445e-01,  1.5128e-01, -1.4179e-01,  3.7535e-02,
          1.5071e-01,  1.2831e-01,  4.8995e-01, -4.5845e-02,  7.9054e-01,
          6.8735e-01,  9.1803e-02,  3.3849e-01,  8.1425e-01, -1.3823e-01,
          2.5358e-01,  6.6489e-02]], device='cuda:0') tensor(1.5823, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
782000 特征值优化 tensor(7.7742, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2315,  0.2685,  1.1881,  1.5259,  0.3462, -0.5521,  1.0694, -0.1959,
          0.6296,  0.1627, -0.8230,  0.5578,  0.0950,  0.2035,  0.0260,  0.0063,
          0.0171,  0.0972,  0.9023,  0.4345,  0.0246, -1.5364, -0.1890, -0.5904,
          0.2154,  0.3095,  0.1215, -0.1220, -0.7490, -0.5214, -0.0691,  0.2097,
         -1.0003, -0.4585, -0.2536,  0.7588,  1.3354, -0.2569, -0.9142,  0.6589,
          0.2770, -0.7076, -0.2575, -0.6262,  1.0964, -0.0386,  0.0789,  1.6756,
         -0.2147, -1.0218,  0.0799,  0.1057,  0.8008, -0.7916,  0.0174, -0.0704,
          1.4509, -1.7102,  0.1533,  0.0707,  1.6013,  0.2770,  0.4015, -0.7351,
          0.8542,  0.6912, -0.6408,  0.1474,  0.6779, -0.9059, -0.9880, -0.2657]],
       device='cuda:0') tensor(4.4385, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
783000 特征值优化 tensor(2.4488, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0340e-01,  1.1116e-02,  1.9671e+00,  2.2490e+00,  2.3829e-01,
          2.3961e-03,  1.2511e+00,  8.1044e-01,  8.3127e-01, -3.9238e-02,
         -5.2474e-01,  1.1063e+00,  1.9634e-02, -2.5412e-02, -2.3353e-02,
          1.4350e-01,  1.7070e-02,  1.5513e-02,  2.4314e-01,  3.6792e-02,
         -2.6580e-04, -8.7131e-01, -2.8245e-02, -2.7286e-02,  7.0266e-02,
          7.1912e-02,  1.1030e-02,  5.6627e-02, -5.4696e-01, -5.7658e-01,
         -1.6168e-02,  5.2079e-01, -5.6363e-01, -5.2266e-03,  5.7398e-02,
          3.7031e-01,  9.6786e-01,  7.6987e-02, -3.5668e-01,  1.6752e-01,
          1.8766e-01, -6.0696e-02, -3.3619e-01, -1.0115e-01,  5.7693e-01,
         -2.2732e-02,  8.9670e-03,  1.7164e+00,  2.1029e-01, -6.2624e-01,
          1.1896e+00, -5.4636e-03,  6.1486e-01, -3.9596e-01,  3.7051e-01,
          1.7279e-01,  1.6647e+00, -8.5245e-01,  5.7994e-01, -2.7110e-01,
          1.0734e+00,  2.8688e-01,  9.7410e-01, -5.2620e-01,  1.3462e-01,
          4.9708e-01, -2.9874e-01, -8.6789e-02,  8.0392e-01, -6.8281e-01,
         -4.7251e-01,  1.2362e-01]], device='cuda:0') tensor(1.6445, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
784000 特征值优化 tensor(2.1142, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7968e-01,  8.5879e-03,  2.1351e+00,  2.4399e+00,  1.9206e-01,
         -1.2369e-02,  1.1540e+00,  1.3509e+00,  1.6998e-01, -2.3099e-01,
         -3.6596e-01,  1.0585e+00,  2.0512e-02,  3.8372e-02, -1.0956e-02,
          1.7617e-01,  1.7144e-01,  9.9809e-02,  6.8061e-02,  1.1956e-02,
         -2.1884e-03, -7.8165e-01,  5.2359e-02, -1.9548e-02,  1.0645e-01,
          6.2616e-02,  2.7363e-03,  4.4812e-03, -4.3878e-01, -6.3750e-01,
         -1.9398e-02,  4.4245e-01, -3.8068e-01, -1.2384e-02,  1.6477e-01,
          3.2019e-01,  8.1937e-01,  2.5052e-01, -1.2220e-02,  5.5958e-02,
          2.6657e-01, -6.4310e-02, -2.4436e-01,  1.4121e-01,  2.5962e-01,
         -2.1158e-02,  1.3147e-02,  1.5231e+00,  1.2757e-01, -6.8882e-01,
          1.4267e+00, -7.1433e-02,  2.4669e-01, -1.7370e-01,  9.8815e-01,
          2.6933e-01,  1.3029e+00, -6.3647e-01,  1.9475e-01, -2.2074e-01,
          1.3338e+00,  1.2490e-01,  1.0173e+00, -4.2851e-01, -2.2328e-01,
          2.4110e-01,  1.9066e-02, -3.0341e-03,  7.5889e-01, -5.5598e-01,
         -4.5730e-01,  9.8096e-02]], device='cuda:0') tensor(0.8933, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
785000 特征值优化 tensor(10.2979, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.4841e-01, -2.1506e-01,  2.9013e-01,  7.3779e-01,  2.6920e-01,
         -7.1022e-01, -4.0355e-01,  1.2020e+00,  3.8764e-01, -3.4128e-01,
          1.9719e+00,  5.3233e-01,  8.8423e-01,  2.0262e-01, -8.5525e-02,
         -1.1056e+00, -2.4369e-01,  1.1350e-02, -9.2394e-01,  7.7305e-02,
         -1.1638e+00,  2.6971e-01, -4.2811e-01,  1.5853e-01,  5.0631e-01,
          1.0405e-01,  1.0631e+00, -1.4025e-01, -9.5809e-01, -6.0193e-01,
         -1.3402e-01, -3.3299e-01,  4.9579e-02, -1.1021e+00,  5.9639e-01,
          7.6852e-01,  9.7850e-01,  1.5047e+00,  1.2977e+00, -5.3990e-02,
          1.7727e+00, -6.4974e-01,  1.0054e+00,  1.2484e-01, -3.8237e-01,
          4.2448e-01,  3.3653e-01,  1.2154e-01, -9.5986e-01, -2.4511e-02,
         -6.7502e-01,  3.7213e-01, -4.2289e-01, -2.8136e-01, -4.7411e-02,
          8.1279e-03,  1.9116e+00,  3.5281e-01,  9.1777e-02, -2.4686e-04,
          1.6810e+00, -7.8218e-01,  1.8669e-01,  4.1448e-01,  8.9718e-01,
          1.9702e-03,  4.4081e-01, -4.5283e-02,  1.0889e+00,  8.9180e-01,
          1.2885e+00, -6.5334e-01]], device='cuda:0') tensor(5.8823, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
786000 特征值优化 tensor(2.2883, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0558e+00, -6.5083e-01,  4.8718e-01,  4.0864e-01, -5.8710e-02,
         -1.9873e-01,  5.1095e-01,  1.7210e+00,  7.2724e-01, -6.2029e-01,
          2.7735e+00,  8.5210e-01,  3.6966e-01,  7.5445e-04,  1.9825e-02,
         -2.5289e-01, -4.2573e-02,  1.8469e-03, -2.3452e-01,  3.5881e-02,
         -5.4845e-01, -6.2488e-02, -1.9756e-01, -1.1829e-01, -1.5343e-01,
          1.1554e-01,  3.2093e-01,  1.7874e-01, -3.1682e-01, -8.5524e-02,
         -1.7919e-02, -4.9441e-02,  5.5912e-02, -2.2834e-01,  1.8279e-01,
          5.0086e-01,  5.3550e-01,  7.7776e-01,  2.0797e-01, -8.3801e-03,
          1.0795e+00, -2.1246e-01, -6.8850e-02,  6.9511e-01,  1.6239e-01,
          6.4656e-03, -1.8386e-01, -6.0583e-02, -2.2826e-01, -1.5857e-01,
         -4.4146e-01, -5.3607e-02, -3.5170e-01,  1.8418e-01, -5.8318e-01,
         -7.5050e-01,  9.7884e-01, -2.3873e-02, -2.8144e-01,  5.3661e-01,
          1.4569e+00, -1.0382e-01,  8.6551e-01,  2.7784e-01,  2.5115e-02,
          2.4887e-01, -1.0975e-01,  9.3966e-02,  1.2700e-01,  9.3744e-01,
          6.0846e-01, -6.3462e-01]], device='cuda:0') tensor(1.5777, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
787000 特征值优化 tensor(18.0359, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4256e-01, -1.3170e+00, -6.5791e-01,  6.7976e-01,  1.2785e+00,
         -4.3408e-01,  1.1034e-02,  5.9289e-01, -4.2281e-01,  9.4390e-01,
          5.2591e-01,  1.1911e+00,  6.6470e-01,  5.0491e-01,  6.8222e-01,
         -1.1569e+00, -3.5333e-01, -4.3099e-01, -1.3758e-01,  1.1373e+00,
         -7.0178e-01,  8.3965e-01, -1.4707e-01, -1.0818e+00,  1.3161e+00,
          1.3889e+00,  1.1062e+00, -5.9742e-01,  2.6348e-01,  8.1388e-01,
         -5.3676e-01, -8.1591e-01,  1.2360e+00,  1.7343e-01, -1.9756e+00,
          1.1828e+00,  1.4189e-01, -2.9776e-02, -8.7826e-01,  1.5782e-01,
         -8.8617e-04,  6.3564e-01,  2.3285e+00,  9.6363e-01,  1.0357e+00,
         -1.2340e-01,  1.3310e-01,  6.6482e-01, -9.1398e-01,  8.5801e-01,
          8.1184e-01, -5.0446e-01,  4.4869e-01, -6.1840e-01, -2.0562e+00,
         -4.3781e-01, -1.4714e+00,  1.6374e+00,  5.5325e-02,  1.6427e+00,
         -1.0318e+00, -2.2130e+00, -3.3920e-01,  1.0073e-01,  1.8016e-02,
          1.7600e+00,  4.8056e-01, -1.3336e+00, -1.3653e+00, -9.1182e-01,
         -1.2212e+00, -1.5552e+00]], device='cuda:0') tensor(5.8806, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
788000 特征值优化 tensor(4.9140, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8341, -1.7290,  0.0360,  0.0083,  0.7202,  0.6422,  0.9809,  1.2831,
          0.5773,  0.1410,  0.8622,  1.7784,  0.2633, -0.2217, -0.1429, -0.4972,
         -0.4062,  0.2670, -0.3322,  0.4295, -0.5269,  0.0651,  0.0366, -0.1384,
          0.3935,  0.4308,  0.2506,  0.0549, -0.0428,  0.0761, -0.2370, -0.6134,
          0.4615,  0.1941, -0.9629,  0.5098,  0.0782, -0.0452, -0.3940,  0.0229,
         -0.0217,  0.1183,  1.3167,  0.0830,  0.1869,  0.0556, -0.0974,  0.0976,
         -0.2437,  0.4871,  0.0203,  0.0366,  0.8547, -0.2084, -1.0346, -0.2945,
         -0.5185,  0.6367,  0.2103,  0.6170, -0.0701, -1.2654, -0.0689, -0.3883,
          0.6312,  0.7074,  0.9189, -0.6790, -0.5768,  0.0044, -0.6575, -1.0651]],
       device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
789000 特征值优化 tensor(2.1118, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.9892e-01, -1.6314e+00,  1.4908e-01,  8.7182e-02,  2.2959e-01,
          1.0432e+00,  1.2099e+00,  1.3217e+00,  9.9178e-01,  6.8923e-01,
          9.6173e-01,  1.6640e+00,  3.0590e-01,  1.7098e-02, -5.9778e-02,
         -3.4661e-01, -3.5534e-01,  1.1996e-01, -3.1416e-01,  2.6442e-01,
         -3.2655e-01,  2.6079e-03, -1.1452e-02, -1.8150e-02,  9.2951e-02,
          4.5017e-02,  7.3383e-02,  6.5031e-02, -3.6374e-02,  2.2464e-02,
         -1.7004e-02, -5.7611e-01,  2.5992e-01,  1.9453e-01, -4.1718e-01,
          4.8262e-01,  8.5732e-02, -3.4879e-02, -4.6050e-01, -7.8794e-02,
         -4.6887e-02,  7.2853e-02,  8.7166e-01, -6.8657e-02,  9.8126e-02,
         -5.5418e-01,  4.8248e-02, -1.2336e-01,  1.3106e-01,  9.8781e-02,
         -5.0517e-02,  5.3098e-02,  6.1169e-01, -3.2906e-01, -7.8832e-01,
         -1.1636e-01,  1.2552e-01,  1.3215e-01,  7.7064e-01,  8.1787e-01,
          1.3777e-01, -1.0478e+00,  1.2071e-04, -4.2601e-01,  1.2797e+00,
          2.1015e-01,  9.9212e-01, -6.1135e-01, -4.5601e-01,  3.5595e-02,
         -5.6916e-01, -8.1918e-01]], device='cuda:0') tensor(1.4236, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
790000 特征值优化 tensor(10.1232, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4531,  0.8348, -1.1193, -0.1957,  0.1120,  0.4435,  1.1114,  0.1643,
          1.6516,  1.4749,  0.6783, -0.2397, -0.2884, -0.1507, -0.4680,  0.1894,
          0.1739,  0.3207,  1.2345, -0.4303, -0.5515,  1.0522,  0.2028,  1.0392,
         -0.1352,  0.4437, -1.2640, -0.9579, -0.1691, -0.3107, -0.1836, -0.0343,
         -0.0626, -1.2760, -0.0049,  0.0048,  0.9231,  1.4454, -1.5712,  0.4447,
          0.3361, -0.1891,  1.4048, -1.0831,  0.3414,  1.1318,  0.1345,  1.1615,
          0.3204, -0.9836, -0.3708,  0.7576,  0.4974,  0.4773,  1.0800,  1.7346,
         -1.6492,  0.0832, -0.3215, -0.8714,  1.2195,  0.6774,  0.3586, -0.4245,
          0.0710,  0.0399, -0.5264,  0.1398,  1.1470,  0.1883, -0.6338,  0.0063]],
       device='cuda:0') tensor(5.4888, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
791000 特征值优化 tensor(2.6178, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0005e+00,  1.0342e+00, -3.4163e-01, -3.5471e-01,  3.9867e-02,
          1.0461e+00,  1.5836e+00,  8.9469e-01,  2.2673e+00,  8.3567e-01,
          1.1921e+00,  4.9698e-01, -2.7304e-01,  1.0528e-02,  1.9623e-03,
          2.6751e-01, -1.8294e-01,  2.1387e-01,  3.1285e-01, -1.0679e-01,
         -2.6054e-01,  3.8075e-01, -5.1406e-02,  2.3690e-01, -2.5946e-02,
          1.4167e-01, -3.0221e-01, -1.6666e-01, -1.8679e-01, -2.1404e-01,
          3.7489e-02, -1.3669e-04,  5.7782e-03, -3.0209e-01, -5.2030e-03,
         -2.4532e-03,  5.6574e-01,  8.2692e-01, -8.9105e-01, -1.4274e-02,
          4.6135e-01, -4.8036e-02,  7.1302e-01, -4.9034e-01,  3.0764e-01,
          7.9036e-01, -1.5690e-01,  1.0939e+00,  4.2283e-01, -7.5928e-01,
         -7.3359e-01,  5.4234e-01, -1.6994e-01,  1.9641e-01,  5.8671e-01,
          1.0467e+00, -9.3683e-01,  7.9744e-02, -7.9984e-02, -5.4075e-02,
          3.3921e-01,  4.2103e-01,  7.0414e-01, -7.5390e-05, -1.8469e-01,
          6.1067e-01, -3.6226e-01,  1.5043e-01,  1.0365e+00,  5.2234e-01,
         -5.1317e-01,  1.5541e-01]], device='cuda:0') tensor(1.6563, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
792000 特征值优化 tensor(2.1302, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0796e+00,  9.0082e-01, -1.8346e-01, -3.8951e-01,  3.2537e-01,
          9.5556e-01,  1.5211e+00,  1.1893e+00,  2.0525e+00,  7.5417e-01,
          1.0969e+00,  3.2968e-01, -2.3735e-01,  1.8145e-02, -1.8635e-02,
          2.4513e-01, -1.9760e-01,  1.2509e-01,  1.4770e-01, -1.1061e-01,
         -2.1736e-01,  2.4127e-01, -1.3826e-01,  2.5259e-01, -6.7182e-02,
          1.4465e-01, -4.5532e-02,  8.8938e-04, -2.4057e-01, -2.1502e-01,
          3.0425e-02,  9.2676e-02, -9.3233e-02, -1.2925e-01,  9.8323e-03,
          2.8865e-02,  6.7383e-01,  6.7990e-01, -7.0183e-01, -1.1443e-01,
          6.0782e-01, -5.2954e-02,  6.6243e-01, -2.1396e-01,  1.3266e-02,
          7.2836e-01, -1.5999e-01,  8.9284e-01,  1.2981e-01, -6.7998e-01,
         -6.8309e-01,  4.7945e-01, -1.6087e-01,  1.5628e-01,  6.3150e-01,
          8.5267e-01, -7.9174e-01,  7.4828e-03, -5.9476e-02, -8.8969e-02,
         -2.4628e-01,  5.7777e-01,  4.6986e-01,  3.5267e-01, -4.4101e-01,
          6.2577e-01, -2.3638e-01,  2.2138e-01,  7.1872e-01,  5.0183e-01,
         -2.4521e-01,  1.6485e-01]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
793000 特征值优化 tensor(9.1677, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8155,  0.1195,  0.5140, -1.5155,  1.0280,  1.6588, -0.3872,  0.8109,
         -0.5986, -0.3012,  1.3102, -1.3713, -0.0975, -0.1488,  0.1888,  1.2228,
          0.0062,  0.0274,  0.4294,  0.0322, -0.1691, -1.0123,  0.2568, -1.4540,
          0.2054, -0.0270,  0.0837,  0.6147,  0.1403,  0.7396,  0.2738, -0.3020,
         -0.1308, -0.1685, -0.1981,  0.0360,  0.0758, -1.7169,  0.9059,  1.6338,
          1.6399, -0.0046, -0.5496,  0.0238,  0.0651, -0.2409,  0.0937,  1.0261,
          0.3727, -0.6764, -0.6313,  0.1752,  0.1116,  0.5949, -0.3310,  0.7630,
          0.0094, -0.9391,  0.0565,  0.0340,  1.3081,  0.7089, -0.7245,  0.0351,
         -0.5442, -0.0154,  0.5310,  0.1396,  0.2664,  0.9670,  0.9250,  0.8190]],
       device='cuda:0') tensor(4.2034, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
794000 特征值优化 tensor(2.4454, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2304,  0.2320,  1.2273, -1.7725,  0.4673,  1.8640,  0.3953, -0.3659,
          0.3301,  0.5992,  2.1263, -0.4150,  0.0049, -0.1788,  0.0216,  0.2527,
          0.0131, -0.1174, -0.0228, -0.0241, -0.0271, -0.5857,  0.4219, -0.5429,
         -0.0284, -0.0391, -0.0226,  0.0479, -0.0587,  0.5404,  0.0685, -0.0773,
         -0.0420, -0.0198, -0.1041,  0.2057,  0.2803, -0.9368,  0.4001,  0.7395,
          0.6188,  0.2919, -0.4688,  0.1660,  0.1740, -0.1505, -0.0377,  0.8898,
          0.5245, -0.5639, -0.8663,  0.0237, -0.5939,  0.3016, -0.5617,  0.6676,
         -1.1009,  0.0130,  0.0029, -0.0025,  1.2516,  0.2822, -0.7187,  0.0078,
          0.1121,  0.4640,  0.5069,  0.1078,  0.3817,  0.8425,  1.2301,  0.1452]],
       device='cuda:0') tensor(0.8396, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
795000 特征值优化 tensor(22.1168, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.8098, -2.3227,  0.8759,  0.4253,  1.8425,  0.9695, -0.7558,  2.1260,
         -0.1288,  0.8108,  0.1793, -0.6532, -1.0533, -1.2411,  2.0566,  0.2889,
         -1.0853, -1.0191, -1.2790, -0.2730, -1.1113, -1.8248, -0.3836, -0.9434,
          0.8247,  1.3498, -0.5298,  0.1349, -0.2951,  1.4543, -0.0061,  0.3383,
          1.9227,  0.4486, -2.1450, -0.1533,  1.9238, -0.3395, -0.7296, -1.9175,
         -0.5903, -0.5021,  0.9373, -0.7473, -0.6605,  0.7044,  0.7320,  1.4445,
          0.5226,  1.7327,  0.4664,  0.8516, -0.1056, -1.9287,  0.8951,  1.8291,
         -0.2380,  0.4535, -1.0022,  0.4684, -0.3406, -0.6298,  1.3083,  0.5746,
          1.0181, -1.2196, -0.0637,  0.5434, -0.2166, -1.1146,  1.0402,  0.5508]],
       device='cuda:0') tensor(11.5968, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
796000 特征值优化 tensor(4.6878, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1850, -1.3786,  1.5095, -0.5306,  2.6658,  1.6854,  0.2224,  1.3886,
          0.8720,  1.2080,  0.8726,  0.2543, -0.2256, -0.5007,  0.9084, -0.1105,
         -0.1209, -0.0908, -0.1585,  0.0068, -0.2083, -0.8775,  0.1587, -0.1578,
         -0.0813,  0.3936, -0.0142, -0.2552,  0.0096,  0.6730, -0.0182, -0.4529,
          0.9229,  0.1735, -1.3123,  0.0677,  0.9907,  0.2606, -0.2578, -0.7217,
         -0.0428, -0.2700,  0.7370, -0.2834, -0.2573,  0.4969,  0.4748,  0.3216,
          0.1120,  1.1567, -0.4421, -0.0876,  0.5598, -1.1793,  0.6442,  0.8707,
          0.5630, -0.3571, -0.8907, -0.2044,  0.5091,  0.2210,  0.6296, -0.1078,
          1.9704, -1.6395,  0.0945,  0.1875,  0.5817, -0.3415,  0.2886,  0.3655]],
       device='cuda:0') tensor(0.2118, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
797000 特征值优化 tensor(2.1720, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.2394e-02, -1.0316e+00,  1.2980e+00, -8.8719e-01,  2.8909e+00,
          1.5717e+00,  8.5196e-01,  1.1345e+00,  1.2786e+00,  1.1931e+00,
          1.0799e+00,  2.9753e-01, -1.9891e-02, -2.7398e-01,  3.7633e-01,
         -1.3987e-03,  1.6406e-01, -1.5489e-01,  5.8880e-02,  2.3858e-02,
         -2.0468e-03, -6.0381e-01,  6.8769e-02, -2.0646e-02, -1.0265e-02,
         -1.5562e-02, -9.3358e-03,  3.1881e-02,  1.9181e-03,  6.0461e-01,
         -4.6588e-03, -6.1378e-01,  6.3612e-01,  2.6274e-01, -1.0718e+00,
          3.0350e-01,  6.1977e-01,  3.1802e-01, -1.4375e-01, -3.0047e-01,
          1.7877e-01, -8.7845e-04, -1.2229e-02,  2.8295e-02,  3.2730e-02,
          4.9865e-01,  1.2952e-02,  1.6841e-01,  3.6033e-01,  8.7833e-01,
         -5.7206e-01, -3.2662e-01,  4.0239e-01, -8.8080e-01,  1.2992e+00,
          7.5823e-01,  9.2861e-01, -2.7872e-01, -1.2944e+00, -3.4665e-01,
          3.2243e-01,  4.9936e-02,  6.6079e-01, -9.3853e-02,  2.1187e+00,
         -1.5311e+00,  4.3596e-01, -1.8862e-01,  4.8024e-01, -6.4541e-02,
         -2.5147e-01,  1.3010e-01]], device='cuda:0') tensor(1.4178, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
798000 特征值优化 tensor(21.1869, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1187, -0.2023, -0.0777, -0.3141, -0.7027,  1.1804,  0.3569,  0.8141,
          1.1169,  0.4716, -1.0917,  2.2348, -0.2375, -2.7642, -1.7174,  0.0440,
         -0.2777, -1.2189,  0.7681,  0.3198, -1.6612, -1.6400,  0.5284,  0.4070,
          0.9665, -0.7616, -0.1040, -0.0507, -0.0325, -0.5235, -0.3795, -0.4117,
         -1.0366, -2.2260, -0.1347, -0.5835, -1.9442, -0.3737, -1.8271, -0.9780,
          0.3249,  1.7385, -0.2705, -1.4544, -0.6335, -1.8598,  0.2761,  0.2861,
          0.1978, -2.1403, -0.4229, -0.1314, -0.1780,  1.2922,  0.2846,  0.1887,
         -0.8981, -0.0307, -0.3562,  0.1122,  0.1485,  0.0832, -1.7028,  1.8993,
         -0.8942,  0.1387, -0.2633,  0.5021, -1.2943, -0.3016,  2.0669, -0.9267]],
       device='cuda:0') tensor(11.3529, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
799000 特征值优化 tensor(5.7339, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1214e+00,  4.1905e-01, -3.7450e-01, -2.0836e-02,  2.6156e-01,
          2.0544e+00,  1.2923e+00,  1.4338e+00,  1.9921e+00,  3.5378e-01,
         -1.3312e-01,  2.7122e+00,  5.8164e-01, -1.6640e+00, -7.1757e-01,
         -3.3241e-02, -2.4571e-03, -2.6755e-01,  1.8242e-02,  2.4657e-01,
         -6.5644e-01, -5.9508e-01,  6.8263e-02,  4.4272e-02,  7.3010e-02,
          1.4629e-02, -4.5384e-02, -2.9255e-02,  4.9470e-04, -6.9084e-02,
          2.4743e-01, -3.7232e-01, -3.0435e-01, -1.3809e+00, -4.3780e-02,
         -3.1449e-01, -1.1215e+00, -2.3101e-01, -6.8486e-01, -3.6957e-01,
         -9.8379e-02,  1.2775e+00,  3.7435e-01, -5.3453e-01,  2.6320e-01,
         -1.7388e+00,  1.1458e-01,  3.5787e-01,  8.5427e-01, -1.1659e+00,
         -1.3084e-01, -6.7797e-02, -1.5428e-01,  4.0450e-01,  2.1749e-04,
         -5.1138e-03, -1.0295e-01,  7.6233e-01, -5.9889e-01, -9.1696e-01,
          9.8697e-01,  6.0957e-01, -8.3694e-01,  8.7213e-01, -1.5395e-01,
          8.1746e-01, -4.1996e-01,  2.6702e-01, -3.1571e-01,  1.3167e-01,
          2.4842e+00, -4.3785e-01]], device='cuda:0') tensor(3.5012, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
800000 特征值优化 tensor(2.2904, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5376e+00,  3.8988e-01, -2.5626e-01, -1.8395e-01,  8.8458e-01,
          2.5131e+00,  1.7486e+00,  1.1982e+00,  1.0477e+00, -1.0362e-01,
          1.8215e-01,  2.8912e+00,  5.0129e-01, -7.9585e-01, -2.6304e-01,
          1.9116e-01, -2.3823e-02,  2.0621e-02,  7.8809e-02,  3.5141e-01,
         -4.6439e-01, -7.6032e-02,  4.7053e-03, -3.6742e-02,  1.1809e-02,
         -1.3691e-02, -9.1248e-03,  1.8553e-02,  2.6058e-03, -5.7469e-02,
          2.6720e-02, -6.7460e-02, -1.6925e-02, -1.0238e+00,  1.5670e-02,
         -4.5895e-01, -8.1778e-01, -2.3734e-01, -2.1959e-01, -1.3723e-01,
         -8.9452e-02,  1.1407e+00, -3.6374e-01, -2.3694e-01,  5.0848e-01,
         -1.0171e+00, -6.5738e-02, -1.8033e-01,  4.9781e-01, -3.8479e-01,
          3.1040e-02, -8.4042e-02, -5.5224e-01,  1.7867e-01,  5.1161e-02,
          3.4887e-02,  9.0183e-02,  8.5171e-01,  3.4111e-03, -1.3297e+00,
          1.1369e+00,  6.1186e-01, -5.7065e-01,  4.8355e-01, -2.4066e-01,
          4.2835e-01, -1.8368e-01,  7.6100e-02, -1.2399e-01,  1.7519e-01,
          2.1695e+00, -3.6336e-01]], device='cuda:0') tensor(1.0231, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
801000 特征值优化 tensor(2.0833, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5154e+00,  4.2246e-01, -1.0126e-01, -2.1940e-01,  9.9516e-01,
          2.5793e+00,  1.8543e+00,  9.0778e-01,  2.8485e-01, -4.5287e-01,
          3.1144e-01,  2.8944e+00,  4.5060e-01, -6.3902e-01, -2.0918e-01,
          3.3853e-01,  4.8237e-02,  1.9756e-03,  1.3217e-01,  1.6217e-01,
         -4.2220e-01, -7.2599e-02, -7.8598e-02, -4.0281e-02, -3.7617e-02,
         -3.6490e-02,  1.3968e-02, -3.5639e-02,  3.3408e-03, -5.0162e-02,
          1.1655e-02, -9.3809e-02, -1.2931e-02, -9.8317e-01, -6.4878e-02,
         -4.4021e-01, -7.7603e-01, -1.9515e-01, -8.2156e-03, -1.0908e-01,
         -6.5259e-02,  1.1165e+00, -7.9759e-01, -3.1560e-01,  9.6071e-01,
         -5.0363e-01, -2.4900e-01, -2.4447e-01,  3.2600e-01, -1.3208e-01,
          7.8935e-02, -9.4513e-02, -5.2422e-01,  2.3096e-01, -3.2439e-02,
         -3.5451e-02,  1.4623e-01,  8.0386e-01,  1.4642e-02, -1.1534e+00,
          1.1144e+00,  5.4968e-01, -4.7600e-01,  3.9841e-01, -1.8240e-01,
          1.1728e-01, -5.1140e-02, -4.8220e-02, -1.2716e-01,  1.3380e-01,
          2.1161e+00, -3.5128e-01]], device='cuda:0') tensor(1.3091, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
802000 特征值优化 tensor(6.1247, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2599, -1.0234,  0.7360, -0.4116,  1.5242,  1.7712,  1.6607,  0.2227,
          1.5357,  2.6147,  1.3686, -0.0634, -0.2659,  0.8733,  0.1123,  0.0585,
          0.5547, -0.1080,  0.0733,  0.0442,  0.2075, -0.1252,  0.0457,  0.0101,
          0.0217, -0.0143,  0.0126,  0.0420,  0.0196, -0.0539, -0.6649,  0.4395,
         -0.4889,  0.1722, -2.0291,  0.2232,  0.8235, -0.7345,  0.0753,  0.9650,
         -0.0235,  0.8961,  0.8287, -0.7888,  0.1084, -1.0770,  0.4102, -0.9683,
          0.9696, -0.1211,  0.1158, -0.0634,  1.5736, -0.2602, -0.2634,  0.5921,
          1.0123, -0.2610, -1.0759, -0.5932, -0.6190,  0.1564, -0.1036, -1.3270,
          1.8026, -1.4475, -0.0173,  0.3531, -0.0397, -0.0381,  1.3070,  0.4033]],
       device='cuda:0') tensor(3.0043, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
803000 特征值优化 tensor(2.2865, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5002, -0.5946,  0.1096, -0.1454,  1.6650,  2.3170,  2.0458, -0.3643,
          2.0913,  1.8705,  1.1517,  0.4545, -0.1843,  0.0765, -0.0798, -0.0126,
         -0.0320,  0.1851, -0.2056, -0.0068,  0.1630, -0.0027,  0.0086,  0.0094,
          0.0910,  0.0117, -0.0042, -0.0757,  0.0045, -0.0234, -0.4989,  0.4663,
         -0.2604, -0.1640, -1.4690,  0.3968,  0.6478, -0.4064,  0.3840,  0.5695,
          0.1325,  0.5349,  0.7648, -0.5489,  0.1377, -0.9574,  0.3389, -0.3542,
          0.3272,  0.1150,  0.0269, -0.0241,  1.3092, -0.1778, -1.1393,  0.8512,
          1.4310, -0.8071, -1.5913, -0.8496, -0.3199,  0.0966, -0.0788, -0.7040,
          2.2255, -1.5579,  0.5823,  0.0352, -0.2651,  0.1535,  0.7053,  0.4909]],
       device='cuda:0') tensor(1.5734, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
804000 特征值优化 tensor(2.1620, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.1603e-01, -4.7172e-01,  1.9790e-01, -1.0615e-01,  1.7238e+00,
          2.3558e+00,  2.0566e+00, -3.8132e-01,  2.1766e+00,  1.8494e+00,
          6.4481e-01,  4.5872e-01, -1.4636e-01,  5.8024e-02, -4.9485e-02,
         -3.8651e-02, -5.6881e-02,  1.6841e-01, -2.0769e-01,  5.6710e-03,
          1.2458e-01, -1.8845e-03,  2.0717e-02,  1.8805e-02,  3.5644e-02,
         -2.9337e-02, -4.5952e-03,  1.9431e-02,  2.0354e-02, -2.4033e-02,
         -4.4978e-01,  5.0340e-01, -1.1048e-01, -1.5109e-01, -1.3949e+00,
          5.0776e-01,  5.2132e-01, -3.6560e-01,  4.3093e-01,  5.0257e-01,
          6.2969e-02,  3.9420e-01,  5.9499e-01, -3.5469e-01,  5.5125e-02,
         -7.9290e-01,  2.8713e-01, -2.5498e-01,  2.1403e-01,  1.4920e-01,
         -2.6119e-02, -7.5391e-03,  1.1026e+00, -1.2147e-01, -1.0762e+00,
          8.4332e-01,  1.4054e+00, -7.9415e-01, -1.9095e+00, -1.3813e+00,
         -2.9786e-01, -7.5331e-02,  6.9207e-02, -4.5194e-01,  2.2309e+00,
         -1.4868e+00,  7.7920e-01, -1.5452e-01, -3.2634e-01,  1.4517e-01,
          5.8012e-01,  3.5932e-01]], device='cuda:0') tensor(1.3698, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
805000 特征值优化 tensor(13.6404, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.9300,  0.7461, -1.6432,  0.9893,  0.2027,  0.8374,  1.3708,  0.7622,
         -1.1643,  0.8284,  1.5259, -0.4690,  0.1512,  0.2981, -0.1940,  0.0730,
         -0.3901, -0.2158, -0.4611, -0.2241, -1.2682, -0.2083,  0.5694,  0.3118,
          0.0960,  0.2364, -0.4579,  0.0105,  0.0416, -0.9805, -1.0847,  0.7726,
          0.7095,  0.3518, -2.0095,  0.1067, -1.7164,  0.1642,  0.1310, -0.4737,
          0.9861,  0.2397,  1.9781, -0.2811, -0.2023,  0.6867, -0.4583, -1.2385,
         -0.9602,  1.3811,  0.0633, -0.2421,  1.1075,  0.8008, -0.1439,  0.1598,
         -1.3926,  0.3747, -0.0542, -1.2664,  0.4896, -0.1935, -0.6831,  0.4315,
          0.7509, -0.4181, -0.6110, -0.4648, -1.5604,  1.0136, -2.3097,  0.5938]],
       device='cuda:0') tensor(6.8326, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
806000 特征值优化 tensor(3.3660, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.0821e-01,  4.5772e-01, -7.5669e-01, -6.4658e-02,  3.6487e-01,
          1.8447e+00,  2.0019e+00,  4.7833e-01, -2.5963e-01,  5.0114e-01,
          2.2060e+00,  6.2038e-01,  1.5921e-01, -9.2016e-02, -8.5906e-03,
         -2.4911e-03,  6.7281e-02, -1.1032e-02, -6.8860e-02, -6.1811e-01,
         -5.4374e-01,  1.3972e-01,  1.5761e-01, -1.7405e-01,  1.6817e-01,
          9.8021e-02, -4.0917e-03, -1.7588e-02, -5.1810e-02, -3.0425e-01,
         -4.4153e-01,  3.0040e-01,  5.9060e-02,  3.7329e-02, -1.0483e+00,
         -3.2772e-02, -8.9052e-01, -6.6544e-02, -5.2878e-03, -1.5338e-03,
          4.5085e-01,  1.0341e-02,  1.6747e+00, -4.4484e-01, -3.5964e-01,
          3.9169e-02, -1.0423e-01, -4.4319e-01, -3.8548e-01,  8.1357e-01,
          1.3349e-01, -1.0703e-01,  5.9303e-01,  2.7421e-01, -1.2065e-01,
         -2.4140e-01, -3.4713e-01, -4.0885e-01,  2.3655e-03, -1.1829e-01,
          8.6186e-01,  2.7079e-01, -3.4347e-01,  1.4596e-01,  1.6592e+00,
         -1.0736e+00, -2.2320e-01, -3.2282e-02, -8.8826e-01,  7.4304e-01,
         -1.1592e+00,  1.7446e-01]], device='cuda:0') tensor(1.2639, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
807000 特征值优化 tensor(2.1285, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2894e-02,  3.4258e-01, -5.8692e-01,  7.7518e-02, -1.5328e-01,
          2.0962e+00,  1.7954e+00,  3.7182e-01,  1.2465e-01,  1.4553e-01,
          2.1107e+00,  7.7120e-01,  1.3290e-01,  3.5974e-02, -2.5353e-03,
         -6.4533e-03, -1.4219e-02, -1.5496e-01, -2.3463e-01, -3.1273e-01,
         -2.8190e-01,  5.5307e-02,  1.5727e-01, -1.4622e-01, -6.8398e-03,
          1.2868e-01,  4.0473e-02,  4.0424e-02,  1.7693e-02, -1.8455e-01,
         -2.0994e-02,  8.7767e-02,  5.5084e-02,  3.2509e-02, -8.2370e-01,
          3.7043e-02, -7.5764e-01, -3.8682e-01, -4.6373e-02, -5.3802e-03,
          3.0071e-01, -1.9094e-02,  9.0778e-01, -4.3347e-01,  3.0619e-01,
         -7.2320e-01,  1.3120e-01, -3.4471e-01, -2.1610e-01,  3.2212e-01,
          1.4191e-01, -3.4792e-02,  1.8264e-02,  2.3414e-02, -4.2653e-02,
          4.9040e-03, -1.0714e-01, -3.8020e-01,  7.3487e-01, -1.1527e-02,
          6.3520e-01,  5.9446e-01, -4.7246e-01,  1.3476e-01,  1.9325e+00,
         -9.2981e-01, -8.4954e-02,  1.5172e-03, -5.6314e-01,  5.9746e-01,
         -7.9460e-01,  2.1488e-01]], device='cuda:0') tensor(0.7888, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
808000 特征值优化 tensor(2.0784, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.4469e-02,  2.2454e-01, -4.6185e-01,  4.1915e-02,  2.6628e-02,
          2.1661e+00,  1.7308e+00,  1.7114e-01,  3.4506e-01, -1.8743e-03,
          1.9509e+00,  5.6033e-01,  1.2401e-01, -1.9080e-02,  2.5036e-02,
          2.5309e-02, -5.7886e-02, -2.0499e-01, -2.1421e-01, -2.7151e-01,
         -1.8866e-01,  5.9808e-02,  1.6090e-01, -2.1061e-01,  3.1318e-02,
          9.3071e-02,  2.2533e-02,  3.4717e-02, -6.0141e-03, -1.9263e-01,
         -2.1350e-02,  3.1162e-02,  7.8449e-02,  3.1177e-02, -7.7245e-01,
          1.8525e-02, -6.5372e-01, -2.2743e-01, -3.4019e-02, -8.4942e-03,
          1.8915e-01, -8.5231e-03,  7.7475e-01, -2.9476e-01,  2.2943e-01,
         -7.4670e-01,  8.2861e-02, -2.8863e-01, -2.4712e-01,  2.7249e-01,
          2.1433e-01, -5.8029e-02, -4.2513e-02,  5.1176e-02, -2.1467e-02,
          2.7481e-02, -9.0450e-02, -3.5790e-01,  8.1809e-01, -1.6724e-01,
          4.5610e-01,  7.1250e-01, -3.9186e-01,  1.1606e-01,  1.9274e+00,
         -9.0576e-01, -1.3004e-02, -3.9345e-02, -5.7224e-01,  3.0846e-01,
         -6.6691e-01,  2.5611e-01]], device='cuda:0') tensor(1.3777, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
809000 特征值优化 tensor(4.0686, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5544,  0.1598,  1.4348,  0.9509,  1.4269,  1.9379,  0.0389,  0.7959,
          1.3217, -0.1744,  1.1839,  0.0117,  0.5601, -0.2929, -0.1462,  0.1483,
         -0.6682,  0.2758,  0.0532, -0.2051,  0.2961, -0.1500,  0.0984,  0.0696,
         -0.0201,  0.0437, -0.1510, -0.1022,  0.1273, -0.0289, -0.1959, -0.4454,
          0.2803,  1.1738, -0.0984,  0.3478, -0.0906, -0.5985,  0.4162,  0.0650,
         -0.4096, -0.0778, -0.0489,  1.2653,  0.0305,  0.3475,  0.0330, -0.8213,
          0.3094,  0.0172, -0.3684, -0.0348,  0.6095, -1.1641, -0.2059,  0.6779,
          0.1769,  1.2967,  0.4539,  1.0817, -0.9199,  0.3510,  0.3243,  0.2549,
         -1.5867,  0.1129,  0.0683, -0.1295, -0.9563,  0.6545,  0.4714, -0.3089]],
       device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
810000 特征值优化 tensor(2.1653, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0433e+00,  6.2930e-01,  1.0209e+00,  9.1547e-01,  1.4827e+00,
          2.3393e+00,  2.3852e-01,  1.0358e+00,  1.2503e+00, -1.3684e-01,
          1.2825e+00, -2.8304e-02,  3.6516e-01, -3.1954e-01, -1.7379e-01,
          5.3324e-02, -2.3239e-01, -3.5771e-03,  1.2782e-03, -8.0398e-02,
          3.3890e-01, -4.5807e-02,  2.6179e-01,  2.7633e-01,  2.3929e-02,
         -6.1607e-02,  2.0077e-02,  1.2791e-02,  4.4704e-02, -2.7290e-02,
         -1.6165e-01, -1.9514e-01,  1.0945e-01,  8.6799e-01, -4.4332e-02,
          8.7972e-02, -5.1270e-02, -3.6464e-01,  2.0899e-01,  8.6322e-02,
         -3.5303e-01,  2.2675e-02,  2.6553e-01,  4.8875e-01,  4.2153e-01,
          4.4296e-01,  2.9253e-01, -5.3760e-01,  1.5285e-01,  1.3148e-01,
         -5.2555e-01,  8.9811e-02,  8.3288e-01, -9.8639e-01, -1.6833e-02,
          4.9796e-01,  4.8374e-01,  1.0386e+00,  6.3593e-01,  4.6458e-01,
         -4.6130e-01,  1.9841e-01,  8.7537e-02,  2.5660e-01, -1.1493e+00,
          7.3636e-02, -1.1673e-01, -9.1155e-02, -5.0845e-01,  4.5730e-01,
          1.0725e-01, -5.6787e-02]], device='cuda:0') tensor(1.1097, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
811000 特征值优化 tensor(9.6162, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1979,  0.2672,  0.2066, -0.2862,  2.1483, -0.2780, -0.9832,  0.4954,
         -0.5077,  1.4250, -0.0592,  1.2391, -0.2444,  0.0199,  0.0250,  0.2177,
         -0.1234,  0.6204,  0.3501,  0.0529,  0.1330,  0.6732,  0.5144, -0.1251,
          0.4138, -0.2554,  2.2754, -0.3620, -1.1814,  0.1358, -0.8131, -0.2992,
         -0.3404,  0.0656, -0.1635, -0.0785, -0.1065, -0.1545,  0.2648, -0.0251,
         -0.1080, -2.1314, -0.7613,  0.6555, -0.3071,  0.5122,  0.6279,  1.3427,
          0.2009,  0.2233, -1.0876,  1.7759,  0.1625,  1.1641,  0.4601,  0.2180,
         -0.0353,  0.0640, -0.0032, -0.0348,  0.0404, -0.0664, -0.1797,  0.1626,
          0.5769, -1.0876, -0.5895, -0.6257,  0.6828, -0.6873,  0.4108,  1.5114]],
       device='cuda:0') tensor(4.4481, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
812000 特征值优化 tensor(2.8652, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1041,  0.2836,  0.8786,  0.2240,  2.4514, -0.2037, -0.2372,  0.0178,
         -0.3642,  0.3160, -0.3703,  2.1109, -0.0458,  0.2054,  0.0836, -0.0080,
         -0.0189,  0.0377,  0.0156,  0.0092,  0.0619,  0.5138,  0.0092, -0.0141,
          0.1767, -0.3028,  1.2305, -0.2682, -0.5984,  0.2002, -0.5338, -0.0255,
         -0.0079, -0.0231, -0.0420,  0.0233, -0.0267,  0.0061,  0.1988,  0.0605,
         -0.0090, -1.3129, -0.4179,  0.4708, -0.0968, -0.0720,  0.1067,  1.5915,
         -0.4417, -0.4159, -0.7682,  1.1594, -0.3042,  0.8171,  0.0731,  0.5191,
         -0.1587,  0.1087,  0.0219,  0.1020, -0.1044,  0.1111, -0.0374,  0.0241,
          0.5392, -0.6438, -0.0605, -0.1565,  0.3667, -0.1490,  0.7482,  1.0932]],
       device='cuda:0') tensor(2.1084, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
813000 特征值优化 tensor(2.1617, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.1892e-02,  3.4447e-01,  1.1038e+00,  1.9288e-01,  2.3870e+00,
          2.0188e-02, -4.6661e-02, -6.7565e-03, -6.8655e-01,  4.1767e-01,
         -7.4919e-02,  2.3786e+00, -3.7378e-02,  3.1985e-01,  1.8283e-01,
          2.8305e-02,  7.9080e-04,  7.7745e-03, -9.6912e-03,  3.6717e-03,
          6.4210e-02,  3.7870e-01, -5.0208e-02, -1.6651e-04,  1.8743e-01,
         -2.1042e-01,  5.3912e-01, -7.1650e-02, -4.6981e-01,  1.4363e-02,
         -4.1244e-01, -4.1360e-02, -2.4537e-02, -2.8363e-02, -3.1899e-02,
          2.3706e-02, -2.0706e-02,  6.5437e-04,  2.1008e-01,  3.8129e-02,
         -1.9185e-02, -1.1045e+00, -4.0228e-01,  4.5526e-01, -1.0161e-01,
         -6.9065e-02,  8.3404e-02,  1.2551e+00, -5.4495e-01, -5.1710e-01,
         -1.2927e+00,  1.0658e+00, -6.5686e-01,  7.3427e-01, -6.5896e-02,
          9.7613e-02, -2.5857e-01,  1.6220e-01, -1.8594e-01, -2.0765e-01,
         -1.2107e-01,  9.5754e-02, -1.2538e-04, -8.0393e-04,  1.0083e-01,
         -2.9602e-01,  3.2377e-02, -1.6208e-01,  1.0711e-01, -1.4784e-02,
          5.6643e-01,  8.1087e-01]], device='cuda:0') tensor(0.8945, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
814000 特征值优化 tensor(15.9315, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.8521e-02,  3.9634e-01,  6.5668e-01, -1.6557e-03,  5.5066e-02,
          8.1100e-01, -8.5035e-01, -3.7054e-01,  3.7888e-02,  1.5630e-01,
          1.0896e+00, -9.0854e-01, -1.7050e-01, -1.9472e-01,  4.6497e-02,
         -1.2114e+00, -9.5258e-02, -1.2421e+00,  9.8414e-01,  5.9408e-02,
         -1.4232e+00, -3.6484e-01, -2.6562e-01,  1.0268e-01, -1.5521e+00,
         -6.2852e-02,  1.7524e-01, -3.1137e-01,  2.0263e-01,  4.4767e-02,
         -1.1605e+00, -2.4794e-02, -1.3660e-02, -7.2557e-01,  1.6515e+00,
         -5.1277e-01, -1.0150e-01, -3.0328e+00, -1.6475e-01,  1.1993e-02,
          9.5499e-01,  3.2766e-01,  1.1346e+00, -1.5904e+00, -1.5710e-01,
          2.6456e-01,  1.9180e+00, -5.0563e-01, -7.2254e-01,  6.3579e-01,
          1.2676e+00,  1.9808e-01,  5.3481e-02,  4.9777e-01, -2.9278e-01,
          2.5481e-01, -1.7044e+00, -1.9538e+00,  4.0158e-01, -1.8520e+00,
          4.0531e-01,  1.8313e-01, -1.0391e+00, -3.9386e-01, -6.3913e-01,
         -7.7234e-01,  7.6348e-01, -5.0133e-01,  2.5093e+00,  9.5677e-02,
          5.6479e-01, -5.8753e-01]], device='cuda:0') tensor(0.2124, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
815000 特征值优化 tensor(5.4603, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.8987e-01,  1.1025e+00,  3.6422e-01, -4.0530e-01,  1.4841e-01,
          1.8045e+00,  2.4079e-01, -1.1106e+00,  9.0782e-01,  1.0934e-01,
          2.2022e+00, -2.9819e-01, -1.1497e-01, -4.0403e-03,  2.4117e-03,
         -2.5823e-01,  3.9274e-02, -2.5848e-01,  1.4867e-01,  4.3349e-01,
         -5.8726e-01, -2.7934e-02, -1.6439e-01,  4.3856e-01, -5.6031e-01,
         -1.6006e-01,  2.5593e-02, -2.2917e-02, -9.2717e-04, -5.4606e-03,
         -2.6637e-01,  8.2731e-03, -1.5057e-02, -5.1677e-01,  9.4442e-01,
         -4.2049e-01,  1.3890e-01, -2.0698e+00, -2.5479e-02,  3.3736e-02,
          2.7601e-01,  2.3907e-02,  1.1036e+00, -1.1918e+00,  1.0048e-01,
         -6.5580e-01,  1.0214e+00, -3.8149e-01, -1.3687e-01,  5.7125e-01,
          6.7070e-01, -1.7500e-01, -1.7968e-01,  3.6054e-01,  5.0166e-03,
         -9.3957e-04, -6.9526e-01, -1.4614e+00, -1.5461e-01, -9.1935e-01,
          1.1895e+00,  8.1116e-01, -4.2048e-01, -1.1360e-01,  1.7408e-01,
         -5.2085e-01,  6.4802e-01, -4.0219e-01,  3.0673e+00,  4.3000e-01,
          6.9599e-01, -2.1334e-01]], device='cuda:0') tensor(2.4449, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
816000 特征值优化 tensor(2.4120, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.2895e-01,  1.2623e+00,  1.5236e-01, -3.0061e-01, -9.9990e-02,
          2.2905e+00,  1.0229e+00, -9.3564e-01,  1.0835e+00,  4.4293e-01,
          2.9594e+00,  1.8360e-01, -1.2208e-01,  1.6951e-02,  8.8259e-03,
          3.6762e-03,  5.0785e-03, -1.3780e-02, -4.4135e-03,  2.1210e-01,
         -3.6640e-01,  6.0844e-03, -2.1622e-01,  2.6204e-01, -1.8435e-01,
         -1.4583e-01,  8.1375e-02, -7.8178e-02,  1.8998e-03, -2.3025e-02,
         -2.6173e-02, -1.0003e-02,  9.1665e-03, -1.4349e-01,  7.3966e-01,
         -4.4909e-01,  3.1199e-01, -1.4018e+00, -2.6353e-02,  1.7361e-03,
          3.6744e-01,  1.7603e-02,  6.6519e-01, -7.3667e-01,  3.9258e-01,
         -9.6265e-01,  8.0203e-01, -3.5062e-01,  1.5187e-01,  2.3637e-01,
          2.7685e-01, -1.1587e-01, -2.8590e-01,  1.7150e-01,  3.5346e-02,
          2.1705e-02, -2.2612e-01, -7.1679e-01, -5.5772e-01, -9.1938e-01,
          1.0135e+00,  7.6922e-01, -3.1271e-01, -1.0821e-01,  3.2574e-01,
         -4.1493e-01,  7.5530e-01, -4.4277e-01,  2.9820e+00,  3.0363e-01,
          3.2399e-01, -8.8214e-02]], device='cuda:0') tensor(0.9414, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
817000 特征值优化 tensor(2.1813, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3405,  0.8783,  0.2122, -0.1825,  0.0164,  2.3707,  1.1372, -1.0111,
          1.0962,  0.5917,  3.1528,  0.5238, -0.0305,  0.0065, -0.0214,  0.0631,
         -0.1125, -0.1881, -0.0818,  0.2232, -0.2497,  0.0057, -0.2011,  0.1578,
         -0.1295, -0.1442,  0.1001, -0.0303, -0.0071, -0.0207, -0.0232,  0.0377,
          0.0215, -0.0747,  0.6921, -0.4029,  0.3603, -1.2387, -0.0174,  0.0264,
          0.3107,  0.0579,  0.5889, -0.5171,  0.0566, -0.9133,  0.6372, -0.3038,
          0.1468,  0.2227,  0.1957, -0.0985, -0.1254,  0.0922, -0.0136, -0.0225,
         -0.1520, -0.5999, -0.6737, -1.0360,  0.5766,  0.7201, -0.5289, -0.0298,
          0.3850, -0.3531,  0.6868, -0.3669,  2.7449,  0.1941,  0.1764, -0.0042]],
       device='cuda:0') tensor(0.9417, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
818000 特征值优化 tensor(2.0974, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8695e-01,  4.6253e-01,  3.4665e-01, -1.5036e-01,  1.8216e-01,
          2.4272e+00,  1.1115e+00, -1.1776e+00,  1.0822e+00,  6.0829e-01,
          3.2589e+00,  7.7652e-01,  4.0768e-02,  2.0717e-02, -8.1337e-04,
          9.7906e-02, -5.1782e-02, -1.7198e-01, -1.1794e-01,  8.8176e-02,
         -1.6056e-01,  2.7868e-03, -1.0125e-01,  9.4738e-02, -9.8672e-02,
         -1.0499e-01,  8.7576e-02, -8.0910e-02, -3.0634e-02, -2.4002e-02,
         -1.7116e-02,  1.3405e-01,  3.6198e-01, -2.4769e-02,  6.4592e-01,
         -4.1822e-01,  5.2940e-01, -1.1397e+00,  1.7625e-02,  6.4200e-02,
          1.7309e-01,  6.6560e-02,  5.7323e-01, -4.0140e-01, -1.5744e-01,
         -9.0402e-01,  5.5933e-01, -1.8921e-01,  1.1655e-01,  1.5809e-01,
          1.3477e-01, -8.0136e-02,  6.0207e-02, -4.2098e-03, -6.5373e-03,
          8.0801e-03, -8.7317e-02, -5.1258e-01, -8.3701e-01, -1.0384e+00,
          2.8060e-01,  6.8582e-01, -4.4145e-01, -1.5231e-01,  4.7799e-01,
         -2.2724e-01,  5.6682e-01, -2.2219e-01,  2.5677e+00,  2.6969e-01,
          1.8966e-01,  3.2569e-02]], device='cuda:0') tensor(1.2565, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
819000 特征值优化 tensor(14.1394, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5004,  0.3394,  1.0577, -0.0618,  0.1726,  0.7430, -0.9559,  0.4868,
          2.7528, -0.2211, -0.4753,  1.1323,  0.6361,  0.0361, -0.0370,  0.4641,
          0.0100,  1.1154,  0.4412, -2.0368,  0.5909, -1.0609,  0.3957,  0.2690,
         -0.1242,  0.7893, -0.9149,  0.0721,  1.1219, -0.6917,  0.0990,  0.0704,
         -0.2019, -0.6628, -0.2853,  1.0178,  1.4605,  0.7468,  0.6792,  2.4744,
         -0.0070, -1.3634,  0.4001, -1.0873, -0.6351,  0.8027,  0.6955, -0.4650,
         -0.3554, -0.8163,  0.7028, -0.5766,  0.1175, -0.2065, -0.2201, -0.0561,
          0.8757, -0.3670, -0.7451, -0.8995, -0.6164, -0.1749,  0.3087, -0.3007,
          0.2787,  0.0491, -0.4850, -0.3622, -0.6918, -0.5406,  2.5085, -0.6390]],
       device='cuda:0') tensor(6.6918, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
820000 特征值优化 tensor(2.8364, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2914, -0.1159,  1.5663,  0.7709, -0.3397, -0.0210, -0.1309,  0.4275,
          3.6443, -0.9333,  0.1087,  2.2091,  0.0335,  0.0572, -0.0065,  0.1722,
         -0.1314,  0.2420,  0.0355, -1.2172,  0.0532, -0.4957,  0.0880, -0.0193,
          0.0549,  0.2114, -0.0676, -0.0043,  0.3070, -0.4684, -0.0127,  0.0284,
         -0.0426,  0.0302,  0.0124,  0.3101,  0.7034,  0.2421,  0.1277,  1.4924,
          0.0649, -0.6636,  1.1944, -0.9294, -0.9322,  0.1851,  0.0424,  0.1412,
          0.1973, -0.0326,  0.8424, -0.0222, -0.0294,  0.0537, -0.0269, -0.0145,
          0.0432,  0.0907, -0.8504, -0.7242,  0.1242,  0.4068,  0.1956,  0.1030,
          0.4475,  1.1216, -0.2266, -0.3501, -0.0898,  0.0954,  3.0708, -0.0072]],
       device='cuda:0') tensor(2.0152, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
821000 特征值优化 tensor(2.2286, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3834e+00,  1.4350e-01,  9.9294e-01,  1.0243e+00, -8.7780e-02,
          3.6265e-02, -1.0442e-01,  2.7959e-01,  3.7690e+00, -1.0106e+00,
         -1.3419e-02,  2.4719e+00, -2.9195e-02,  1.3582e-01,  2.6249e-03,
          1.3874e-01,  4.1013e-02,  1.0674e-02, -2.0500e-02, -1.0492e+00,
         -1.5869e-02, -4.0981e-01, -2.3558e-02,  1.9298e-02,  9.1892e-02,
         -1.4968e-02,  1.3204e-02, -4.0483e-02,  1.1774e-01, -3.9106e-01,
         -2.2560e-02, -2.2774e-02, -2.6953e-02,  2.8797e-02,  6.7166e-03,
          4.5146e-02,  5.8066e-01,  1.6800e-01, -8.0084e-02,  1.3256e+00,
          3.2625e-02, -5.2824e-01,  1.1358e+00, -6.3901e-01, -8.5184e-01,
          4.8630e-01, -9.3713e-02, -8.7894e-02,  3.0542e-01,  3.0682e-01,
          4.0429e-02,  2.3575e-01, -9.1822e-02,  7.0306e-02, -9.2943e-02,
         -8.4377e-03, -2.1248e-01,  1.9369e-01, -1.9246e-01, -1.0867e+00,
          6.7109e-02,  4.7054e-01,  1.0940e-01,  1.4213e-01, -2.2239e-01,
          1.1596e+00, -8.2011e-02, -4.4916e-01, -1.6834e-01,  1.9405e-01,
          2.9135e+00, -1.2001e-01]], device='cuda:0') tensor(1.5683, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
822000 特征值优化 tensor(2.1256, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4702e+00,  2.8992e-01,  6.9974e-01,  7.4155e-01, -7.2409e-03,
          1.4903e-01, -1.2637e-01,  2.2570e-01,  3.6500e+00, -1.0752e+00,
          5.5572e-02,  2.5259e+00, -4.2571e-02,  6.9220e-02, -1.9421e-02,
          1.4999e-01,  1.1359e-01,  9.1974e-03, -7.6879e-02, -9.5254e-01,
         -2.8445e-02, -2.6251e-01, -3.7836e-02,  6.4906e-03,  1.7773e-01,
         -2.3702e-01,  1.1583e-01,  2.2507e-02,  5.5185e-02, -2.4227e-01,
         -2.2058e-02,  5.8693e-02, -4.3053e-02,  2.7787e-02,  1.5773e-03,
          2.4784e-02,  5.1078e-01,  1.0825e-01, -1.8772e-01,  1.2758e+00,
          1.6543e-02, -4.6447e-01,  1.0668e+00, -1.1774e-01, -1.2340e+00,
          7.4532e-01, -2.2818e-01, -2.9551e-01,  2.7116e-01,  3.2273e-01,
         -2.0026e-01,  2.1404e-01,  6.0111e-02, -6.3226e-03,  4.3311e-02,
         -4.8563e-02, -2.6327e-01,  2.1510e-01, -3.4288e-01, -9.4346e-01,
          4.0232e-03,  4.1301e-01,  1.8349e-01,  1.0833e-01, -5.0323e-01,
          1.0760e+00, -3.1345e-02, -4.8779e-01, -2.2768e-01,  2.0167e-01,
          2.8806e+00, -8.6320e-02]], device='cuda:0') tensor(0.8725, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
823000 特征值优化 tensor(11.4551, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2937,  1.0374,  0.4086,  0.0422,  1.4028, -1.0430, -1.0357, -1.5985,
         -0.9532,  0.5793,  1.0019,  0.6111, -1.7456, -0.7620,  0.2720,  0.1934,
          0.5358,  0.0496, -0.0047, -0.3154,  0.4307, -0.4134,  1.1052, -1.2683,
         -0.6364, -0.8983, -1.1406, -0.1690,  0.0440, -0.0698, -1.2034,  0.7865,
         -0.3732,  0.3513, -0.8820, -0.8055,  0.3605, -0.1383,  0.7170,  0.4476,
          0.2319, -0.9294,  0.8468, -0.4225,  0.3647, -2.4066,  0.7937, -1.1875,
         -0.6767,  1.3998,  0.7333, -0.2402, -0.1122, -1.7642,  0.1929,  0.1912,
          0.4441, -0.5713,  0.8672,  0.2124,  1.2236,  0.4509,  1.7791, -1.0409,
          0.1393,  0.1775,  0.5708,  0.9485, -0.5222,  0.6937,  0.2201,  0.4283]],
       device='cuda:0') tensor(6.5417, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
824000 特征值优化 tensor(2.7348, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.1803e-01,  4.0188e-01,  9.5761e-01, -4.8231e-01,  1.4768e+00,
         -3.9297e-01, -2.2899e-01, -6.6324e-01, -5.1958e-01,  3.5875e-02,
          8.2514e-01,  1.0665e+00, -7.8711e-01, -1.0758e-01, -6.2226e-02,
          2.9360e-02, -2.1019e-02,  2.9789e-02,  3.8636e-02,  1.7125e-02,
          2.1983e-01,  5.3570e-02,  3.2040e-01, -4.1676e-01, -3.6876e-02,
         -2.4094e-01, -2.3929e-01,  3.0299e-02,  1.1107e-02, -1.2090e-03,
         -2.0633e-01,  3.0129e-01, -2.8589e-01,  1.8920e-01, -4.3542e-01,
         -3.4222e-01,  5.7054e-02, -1.0819e-01,  2.5445e-01, -5.5917e-02,
          1.8662e-01, -4.7602e-01,  1.4036e+00, -2.3932e-01,  5.0240e-01,
         -1.6367e+00,  5.5501e-01, -6.5481e-01, -4.8065e-01,  9.4867e-01,
          3.1756e-01, -3.8717e-02, -6.4636e-02, -7.2393e-01, -3.8544e-03,
         -8.5453e-02,  8.7190e-01, -7.8206e-01,  4.9677e-01,  4.3980e-01,
          3.7720e-01, -8.1436e-02,  5.6168e-01, -3.6563e-01,  4.0349e-01,
         -1.4272e-01,  4.2618e-02,  3.8129e-01, -1.5603e-01,  3.5104e-01,
          4.3578e-01,  3.7333e-01]], device='cuda:0') tensor(1.2390, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
825000 特征值优化 tensor(2.1285, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0480,  0.1557,  0.7813, -0.5308,  0.8343, -0.1670,  0.0501, -0.0960,
         -0.5652, -0.0722,  0.2918,  1.0375, -0.5653, -0.2795, -0.2409,  0.0099,
          0.0398,  0.0109, -0.0365,  0.0415,  0.2833,  0.0823,  0.0898, -0.1423,
          0.0687,  0.0301, -0.2026,  0.1709, -0.0167, -0.0522, -0.1481,  0.0596,
         -0.0876,  0.2516, -0.3064, -0.3048,  0.0064, -0.0182,  0.1695, -0.0825,
         -0.0034, -0.3761,  1.2773, -0.4075,  0.3377, -1.6830,  0.5151, -0.4523,
         -0.1257,  0.6923,  0.2399, -0.0982, -0.5281, -0.1581,  0.0213, -0.0270,
          0.7866, -0.6496,  0.6464,  0.5916, -0.0092,  0.0217,  0.1249, -0.1002,
          0.0410, -0.1475,  0.1064,  0.2243, -0.1838,  0.1605,  0.2319,  0.5170]],
       device='cuda:0') tensor(0.9760, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
826000 特征值优化 tensor(13.5223, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.3400e-01,  5.3201e-03,  1.0566e+00,  2.9161e-01,  1.8692e-01,
          1.5021e+00, -2.9790e-01,  2.0477e-01, -2.1570e-01,  5.9981e-02,
          3.4444e-01,  1.0663e+00, -5.1020e-01,  4.1529e-03,  1.1842e+00,
          6.5641e-03, -1.9187e-03, -6.7304e-02, -2.3974e-01, -5.5342e-01,
          1.4217e+00, -2.9153e-01,  3.8543e-01, -4.3121e-01, -6.3205e-01,
          1.1997e-01, -6.7306e-01,  1.6234e-01,  6.1588e-01, -9.6266e-01,
          1.8946e-01,  2.0537e-01,  7.2819e-01, -3.3357e-01,  3.8693e-01,
         -6.6979e-01,  6.6495e-01,  9.0921e-01, -8.5926e-01,  1.3145e+00,
         -3.8961e-02,  1.5246e+00,  7.7287e-01, -3.8692e-01,  1.3316e-01,
         -4.8062e-01, -1.7785e+00,  4.3152e-01,  6.6439e-01,  1.9352e+00,
         -3.2370e-01, -6.4381e-01, -7.9097e-01,  5.8116e-01, -3.6214e-01,
          2.4710e-01, -3.5470e-01,  2.4969e-01, -1.3826e-01,  4.2819e-02,
          8.5654e-01, -3.0043e-01,  6.4483e-01,  1.0040e+00,  1.3966e+00,
          9.2611e-01, -2.3666e-01,  7.9220e-01, -3.1382e-01,  2.0239e-01,
         -1.5836e+00, -1.8636e+00]], device='cuda:0') tensor(6.5666, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
827000 特征值优化 tensor(2.9796, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1393e+00, -5.7270e-01,  1.7530e+00, -3.7922e-01,  3.7428e-01,
          5.3276e-01,  4.6192e-01,  9.4455e-01,  4.8383e-01,  5.6662e-01,
          1.0347e+00,  1.9458e+00, -1.9830e-01,  5.1385e-02,  2.4165e-01,
         -2.0305e-01,  1.0308e-01, -2.5989e-01, -2.1479e-01, -4.6698e-02,
          6.3615e-01,  1.0079e-01,  4.2923e-02,  4.7304e-02, -2.3829e-02,
          4.2176e-02, -2.8067e-01, -4.0188e-01,  1.8174e-02, -4.5718e-01,
          7.9456e-03, -4.6324e-03,  2.9841e-02,  4.6184e-02, -7.2767e-02,
         -2.5334e-01,  1.6099e-01,  3.0679e-01, -1.9116e-01,  4.4972e-01,
          1.1682e-01,  5.2583e-01, -1.6225e-02,  7.2070e-03,  1.8673e-01,
         -5.9967e-01, -8.3662e-01, -3.1858e-01,  4.1707e-02,  1.3200e+00,
         -1.0912e-01, -1.0043e-01, -4.4561e-01,  2.4664e-01,  1.8922e-05,
         -3.1913e-02, -3.2626e-01,  2.2366e-01,  4.8988e-03, -6.9614e-02,
          6.7505e-01, -1.1456e-01, -8.5768e-02,  4.1074e-01,  8.8246e-01,
          5.0449e-01, -4.2951e-01,  3.4418e-01, -3.9625e-01,  2.4363e-01,
         -6.7443e-01, -8.8809e-01]], device='cuda:0') tensor(1.9426, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
828000 特征值优化 tensor(2.1213, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0537e+00, -6.7509e-01,  1.7650e+00, -4.1538e-01,  2.8846e-01,
          4.3338e-01,  4.4670e-01,  9.6923e-01,  4.7400e-01,  8.1205e-01,
          9.2884e-01,  2.1599e+00, -2.4578e-01, -2.1720e-03,  5.4653e-02,
         -1.9186e-01,  8.1830e-02, -1.4329e-01, -1.4821e-01, -5.7138e-02,
          4.6282e-01,  1.1906e-01, -6.3080e-02,  3.1793e-02, -2.2083e-01,
          7.8622e-02, -4.1017e-01, -4.9435e-01,  1.1669e-02, -3.2549e-01,
         -1.8055e-02, -1.4017e-03, -3.2378e-03,  3.0340e-02,  3.4679e-02,
         -1.8488e-01,  3.8300e-02,  2.1997e-01, -1.6431e-01,  2.7889e-01,
          9.5968e-02,  2.4261e-01, -1.9877e-01,  3.7484e-01,  4.1056e-01,
         -5.8943e-01, -4.6186e-01, -4.0000e-01, -1.9666e-01,  1.2482e+00,
         -1.6492e-01, -8.5328e-02, -1.1761e-01,  7.9634e-02, -1.1564e-01,
          4.4414e-02, -1.3957e-01,  1.5314e-01,  1.4723e-02, -6.3746e-02,
          1.9043e-01, -1.6567e-02, -1.5741e-01,  2.8744e-01,  4.4969e-01,
          5.1669e-01, -3.8139e-01,  2.7837e-01, -2.9848e-01,  2.6667e-01,
         -4.4569e-01, -5.9873e-01]], device='cuda:0') tensor(1.2081, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
829000 特征值优化 tensor(4.3903, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7963e-01,  1.9651e+00,  8.1592e-01,  9.7397e-01,  7.4415e-01,
          1.1440e+00, -1.1528e+00,  1.3268e+00, -5.3584e-02, -1.5270e+00,
          1.8912e+00,  7.0524e-01,  5.8017e-01, -1.7243e-01,  2.3116e-02,
          1.3283e-01, -1.1530e-01, -5.7622e-02,  1.3384e-01, -2.8378e-01,
          6.0231e-01, -3.0420e-01, -9.0102e-02,  2.5248e-03, -9.9931e-02,
         -2.1045e-01, -5.2395e-01,  1.0852e-01,  4.3228e-03, -1.1981e+00,
         -4.0095e-01,  1.9713e-01, -9.4401e-01,  1.9113e-03, -7.0506e-01,
          8.7630e-02, -2.7409e-02,  2.6239e-03,  1.1798e-01,  9.1204e-02,
          5.1603e-02, -3.2859e-01,  2.1013e+00, -7.1944e-01,  5.5999e-01,
          9.8884e-01,  1.9133e-01,  5.2695e-01,  4.1351e-02,  1.0073e+00,
          4.1604e-01,  1.8457e-01,  2.3983e+00,  8.8757e-02,  4.0525e-01,
          1.1136e+00,  5.6326e-02, -5.4585e-01,  4.3506e-03, -3.3676e-02,
          4.6049e-01, -1.7148e-01, -6.3955e-02, -2.0894e-01,  7.0302e-01,
         -1.2504e+00,  6.6272e-01, -5.3506e-01,  1.4848e+00, -1.2282e+00,
         -6.9078e-01,  1.5419e-01]], device='cuda:0') tensor(2.7634, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
830000 特征值优化 tensor(2.2335, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.8048e-01,  1.4713e+00,  1.3140e+00,  1.1044e+00,  1.0186e+00,
         -2.6842e-02, -2.5720e-01,  8.5848e-01, -3.1965e-01, -7.9551e-01,
          2.2534e+00,  5.3592e-01,  4.8836e-01,  1.8638e-03,  1.0188e-03,
          1.0899e-03, -2.5649e-03,  2.4678e-02,  1.2140e-03, -2.5685e-01,
          5.0603e-01, -2.2336e-01, -8.0411e-02,  1.1403e-02, -1.0047e-01,
         -9.8398e-02, -1.5037e-01,  1.0369e-01,  4.7636e-03, -8.1705e-01,
         -5.9038e-02,  2.6027e-01, -9.7022e-01, -5.3706e-03, -5.0775e-02,
         -2.8215e-02, -6.8134e-03,  2.2250e-02, -7.6868e-02, -1.3331e-02,
          3.0128e-02, -4.0750e-02,  1.7485e+00, -5.9414e-01,  3.2335e-01,
          1.4997e+00, -1.1104e-01,  2.5751e-02,  7.2391e-02,  1.0348e+00,
          1.2896e-01,  2.2763e-01,  1.9287e+00, -1.9112e-01,  7.3650e-01,
          1.5849e+00, -3.2789e-01,  1.6304e-01,  6.7755e-02, -7.9488e-03,
         -6.9638e-02,  8.1033e-02,  2.6487e-02, -1.8683e-01, -7.0261e-02,
         -3.3562e-01,  3.7103e-01, -4.7146e-02,  4.1272e-01, -7.7168e-01,
         -7.0709e-01,  2.0543e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
831000 特征值优化 tensor(19.1996, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1700,  0.8085, -0.8457, -0.9641, -0.6904, -0.4293, -0.4389,  0.5150,
         -1.0829,  1.3317, -2.6152, -0.8886, -0.3478,  1.0008, -0.5649,  0.0718,
          1.3136, -0.2698,  0.0662,  0.0083,  0.1023,  0.6472, -0.7151,  0.3608,
         -0.4380,  0.7387,  1.3317,  0.5042,  0.4549,  1.1303, -1.1119, -0.0451,
          0.7995, -0.8404, -0.8032,  0.5254,  1.1873, -0.2573, -0.3095, -0.2481,
          0.9840,  0.4415, -1.2797, -0.7384, -0.4216, -0.4036, -0.7525, -0.2344,
         -1.5047, -1.4770,  0.7490,  0.2114, -1.0083, -0.3783,  1.0829,  1.8944,
          0.5493, -0.9623,  0.6944,  0.2122, -0.9450, -1.7507, -0.0575,  1.1994,
          0.7749,  0.2743, -0.1642,  3.0345, -0.3715,  0.0196, -0.5095,  0.8915]],
       device='cuda:0') tensor(10.9740, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
832000 特征值优化 tensor(4.2201, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.7392e-01,  6.6017e-02, -6.6775e-03, -1.4391e-01,  9.5006e-02,
         -3.1909e-01,  4.5924e-01,  4.4938e-02, -4.8543e-02,  1.9559e+00,
         -1.5170e+00,  1.4518e-01, -9.9165e-03,  1.8888e-01,  4.4321e-02,
         -1.9623e-01,  2.4459e-01,  1.4304e-03,  7.3603e-03,  3.6212e-03,
         -1.3354e-02,  1.3943e-02,  4.7650e-02,  1.2234e-02,  2.6253e-02,
         -1.5554e-01,  4.3279e-01, -4.1442e-02,  2.7184e-01,  8.4489e-02,
         -5.0606e-01,  1.3145e-01,  8.7421e-02, -1.3847e-01, -2.2703e-01,
         -1.7203e-01,  3.8576e-01,  8.7168e-02,  9.4407e-02, -3.9874e-03,
          2.0642e-01,  5.3810e-02, -5.8525e-01,  8.7926e-02,  3.4863e-01,
         -1.3998e-02, -8.0142e-02,  7.8381e-01, -4.0360e-01, -3.8047e-01,
          5.6720e-01, -1.7443e-01, -2.4208e-01,  9.7304e-02,  1.5354e-01,
          8.1824e-01,  4.3583e-01, -7.1663e-02,  4.1863e-01,  3.3529e-02,
         -5.6071e-02, -8.9400e-01, -5.4626e-01,  5.2235e-01,  1.7916e+00,
         -5.6609e-01, -1.2012e+00,  2.0285e+00,  4.9107e-01,  5.0414e-01,
          5.2899e-01, -1.1581e-01]], device='cuda:0') tensor(2.7275, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
833000 特征值优化 tensor(2.1952, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.3028e-01, -5.8885e-02,  3.9573e-02,  6.5329e-02,  2.7246e-01,
         -8.8468e-02,  5.6492e-01,  5.2408e-03,  3.9386e-01,  1.6308e+00,
         -1.0936e+00,  5.3448e-01, -4.3916e-03,  1.3438e-01,  1.0202e-01,
         -1.9058e-01, -1.3342e-01,  4.0339e-02, -7.5505e-02, -1.8888e-02,
         -1.6615e-02,  6.3237e-03,  1.0044e-03,  1.1572e-02,  1.7963e-03,
         -1.3717e-01,  2.7177e-01, -1.4741e-02,  2.7026e-02,  2.5795e-02,
         -2.6746e-01,  1.1656e-01,  4.9043e-02, -2.4053e-02, -9.0410e-02,
         -8.3752e-02,  2.0613e-01,  9.3694e-02, -1.3791e-01, -5.1536e-02,
          4.7119e-02,  1.5026e-01, -4.3800e-01,  1.3391e-01,  3.0832e-01,
          4.0663e-02, -6.6753e-02,  6.8169e-01, -2.9879e-01, -2.7918e-01,
          7.7063e-01, -3.5778e-01, -2.1464e-01,  2.0449e-01,  1.9932e-01,
          3.6660e-01, -4.3172e-02,  5.2598e-02,  8.2507e-04,  7.3350e-03,
          2.8489e-02, -5.8741e-01, -5.8452e-01,  2.0162e-01,  2.4165e+00,
         -5.8997e-01, -1.5849e+00,  1.5336e+00,  3.0616e-01,  1.8528e-01,
          9.9016e-01, -4.4459e-01]], device='cuda:0') tensor(0.9297, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
834000 特征值优化 tensor(13.1313, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4578, -0.4135,  0.2594,  0.0182,  1.9515, -0.1483, -1.4956,  0.2908,
          0.3722, -1.2283,  0.4360,  0.9322,  0.7410, -0.7913,  0.0076,  0.7433,
          0.0211, -0.7549,  0.1922, -0.5625, -0.9294, -0.4423, -0.6168,  0.4483,
         -2.0966,  1.0499, -0.6045, -0.3109,  0.4197, -1.1680, -1.1555,  0.8343,
          0.1986, -0.0921,  0.4348,  0.0543,  0.5654, -0.9124,  0.2947,  1.3990,
          0.3190,  0.3950, -0.1811,  0.5940,  1.7229, -0.9023, -0.2795,  0.6997,
          0.7216,  0.8053, -1.1675, -0.1362,  0.4804, -1.1067,  0.7473,  1.6311,
         -1.4261, -0.3038, -0.9589,  0.9218,  0.1315,  0.5739,  0.2541,  0.1275,
         -0.2926, -0.5555,  1.5575,  0.6477, -0.4715,  0.8247,  0.0214,  1.5641]],
       device='cuda:0') tensor(6.6360, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
835000 特征值优化 tensor(2.4910, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5719e+00, -1.3323e+00,  1.0286e+00,  7.1590e-01,  2.4449e+00,
          3.0776e-01, -4.8222e-01,  3.7109e-01,  1.2332e+00, -1.7024e-01,
          2.1392e-02,  1.6443e+00,  4.7197e-01, -4.9436e-01,  1.1785e-01,
          1.6533e-02, -9.6152e-03, -2.5396e-02, -4.7132e-02, -1.0488e-01,
         -4.9282e-01, -2.4027e-02, -1.0757e-02, -4.5612e-02, -1.0063e+00,
          2.9125e-01, -6.8090e-02,  2.7374e-01, -5.5736e-02, -3.5971e-01,
         -6.5519e-01,  9.8159e-02, -5.4789e-02,  6.0507e-04, -2.1114e-02,
          6.3323e-03,  1.3849e-01, -1.4393e-01,  3.0931e-01,  6.3947e-01,
          1.1049e-01,  4.2872e-01, -3.0464e-01,  2.3147e-01,  8.3863e-01,
         -2.7555e-01, -4.9346e-01, -9.8825e-03,  5.2430e-01,  5.2765e-01,
         -3.9751e-01,  2.1827e-02,  1.0230e+00, -3.7246e-01,  1.2630e-02,
          6.2909e-01, -5.2548e-01,  2.9008e-01, -1.3498e-01,  9.9596e-02,
          1.7792e-02, -9.0502e-02,  7.9070e-02,  5.5022e-02,  1.3162e-01,
         -2.3054e-01,  9.7462e-01,  1.3140e-01, -5.1687e-01,  1.9360e-01,
          1.2138e-01,  7.8039e-01]], device='cuda:0') tensor(1.2791, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
836000 特征值优化 tensor(17.4486, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-9.9949e-01,  6.1698e-01, -1.8397e+00, -7.2352e-01,  5.6397e-01,
         -1.5915e+00,  1.8710e+00, -2.1050e-01, -8.9950e-01, -4.2270e-01,
          1.3706e+00,  9.0218e-01, -6.9649e-01,  2.8986e-01,  1.4332e+00,
          1.5465e-02,  8.7908e-04, -1.9804e-01,  4.2449e-01,  3.9508e-01,
         -1.0234e+00, -3.0136e-01, -1.2844e-01,  1.0912e+00,  2.3021e-01,
          1.5249e-01,  1.0474e+00, -5.9824e-01, -1.6394e+00, -1.7746e-01,
          6.3344e-01, -1.2078e-01, -1.1816e+00, -1.4014e-01,  3.1638e-01,
         -7.9586e-01, -1.9726e+00, -1.8176e+00, -4.3822e-01,  7.6924e-02,
          1.2144e+00,  8.6187e-01, -1.7280e+00,  5.7254e-01,  3.5455e-01,
          1.7072e+00, -2.3887e-01, -1.0161e+00, -2.1807e-01, -1.2407e+00,
          4.5809e-01,  8.2702e-01,  6.0550e-01,  9.2048e-02, -4.7692e-01,
          2.4033e-01,  6.9828e-01,  7.8642e-01, -1.4949e+00,  8.6782e-01,
          8.4605e-01, -1.1880e+00, -7.3569e-01,  7.9036e-01,  2.9657e-01,
         -1.6445e+00,  2.0004e-01,  5.0739e-01,  1.6882e-01,  1.1680e-01,
         -2.2266e-01, -4.3743e-01]], device='cuda:0') tensor(10.5739, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
837000 特征值优化 tensor(3.4403, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0234, -0.3954, -0.8341, -0.1365,  0.8010, -0.6487,  2.8190,  0.9553,
         -0.0701, -0.9360,  2.1572,  1.3910, -0.1649,  0.0578,  0.3974, -0.0536,
         -0.1637,  0.0202,  0.1444,  0.0237, -0.1358,  0.1020,  0.0294,  0.1363,
          0.0835,  0.1368,  0.2170, -0.1555, -0.6223, -0.1071,  0.1559, -0.6729,
         -0.4066,  0.0294, -0.1619, -0.1313, -0.9871, -0.9668, -0.0054, -0.0631,
          0.4697,  0.3312, -0.7369,  0.4213,  0.3403,  0.6989, -0.2223, -0.0303,
          0.0731, -0.5876,  0.2185,  0.1533,  0.5628, -0.3007, -0.6381, -0.3707,
          0.3171,  0.0555, -0.3365,  0.3213,  1.7530, -0.2519, -0.5860,  1.0441,
          1.1937, -0.8259, -0.5326,  0.4001,  0.8289,  0.7690,  0.1649,  0.0964]],
       device='cuda:0') tensor(2.6291, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
838000 特征值优化 tensor(2.1159, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2185, -0.2287, -0.6216,  0.5713,  0.5378, -0.3205,  2.9380,  1.0356,
          0.2261, -0.6829,  2.2036,  1.1415, -0.0353, -0.1291,  0.1745, -0.0672,
         -0.0437,  0.1963, -0.0782,  0.0343,  0.0140,  0.0300, -0.0240,  0.0138,
          0.0682,  0.0807,  0.1464, -0.1781, -0.2478, -0.0468,  0.0314, -0.4637,
         -0.3139,  0.0286, -0.0532, -0.0367, -0.8588, -0.8904,  0.0889, -0.1508,
          0.3901,  0.2212, -0.3507,  0.2493,  0.0936,  0.2050, -0.0757,  0.0121,
          0.0604, -0.4346,  0.0420,  0.1815, -0.0589,  0.0052, -0.3532, -0.1785,
          0.1237,  0.1342, -0.0905,  0.0635,  1.8295, -0.1621, -1.0058,  0.9971,
          1.3677, -0.5829, -0.8229,  0.2709,  0.8309,  0.7082,  0.1979,  0.1856]],
       device='cuda:0') tensor(1.5231, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
839000 特征值优化 tensor(7.8759, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6785, -0.1756,  1.7907, -1.5673, -0.3045,  0.3772,  0.1908, -0.2335,
          3.1241,  1.4675,  0.9810,  1.3671,  0.0506, -0.0734,  0.0852,  0.5691,
          0.5309, -0.9497,  0.9770, -0.0068, -0.7343,  0.0419, -1.4597,  0.7486,
         -0.1026, -1.7269,  0.4163,  0.5305, -0.7566, -0.1732,  0.0411, -0.3515,
          0.0843, -0.3214,  0.4150, -0.0061,  0.1178, -0.5181,  0.0256, -0.2323,
         -0.5059,  0.6391,  0.2351,  1.3007, -0.4029,  0.1697, -0.0629, -0.0914,
         -1.0918, -0.7742, -0.7340,  1.4233,  0.4129, -0.0860, -0.0549,  0.3254,
         -1.0404, -1.2609, -0.6660,  0.3078, -0.7014,  0.6522, -1.1961, -0.4374,
          1.1216,  0.8239, -1.0535, -1.3291,  1.4766,  0.2676, -0.6428,  0.0204]],
       device='cuda:0') tensor(4.8365, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
840000 特征值优化 tensor(2.2612, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8137e-01, -5.9499e-02,  2.2495e+00, -1.7300e+00,  1.0002e-01,
          1.0743e+00,  5.6261e-01,  7.1536e-02,  3.6530e+00,  1.1576e+00,
          1.3971e+00,  1.6398e+00, -7.5720e-03, -1.2640e-02,  1.0415e-02,
         -2.8790e-02,  3.6632e-02, -1.3031e-01,  1.1163e-01,  6.5962e-04,
         -4.0236e-02,  1.2763e-01, -5.1940e-01,  5.7798e-01, -7.3655e-02,
         -8.5699e-01,  2.3792e-01,  2.6698e-01, -2.0601e-01, -1.0100e-01,
         -2.0608e-02, -3.6890e-02, -3.0590e-02, -1.2385e-01,  4.3987e-01,
         -3.2393e-01,  1.0380e-01, -2.2265e-01,  1.6171e-01,  9.3326e-02,
         -6.0508e-01,  1.6758e-01, -4.0191e-01,  5.3455e-01,  1.5714e-03,
          8.4278e-02, -4.5385e-02,  3.1166e-01, -9.0276e-01, -8.2215e-01,
         -5.5601e-01,  1.0174e+00, -1.1549e-02,  4.6114e-02, -2.8706e-02,
         -2.9380e-03, -3.3843e-01, -3.9432e-01, -6.8592e-01,  3.7430e-01,
         -1.3694e-01,  2.7060e-01, -6.3393e-01,  1.0268e-01,  5.6069e-01,
          3.4149e-01, -3.6077e-01, -7.5529e-01,  1.3974e+00,  3.3641e-01,
         -9.6646e-01, -1.8004e-01]], device='cuda:0') tensor(1.4550, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
841000 特征值优化 tensor(2.0918, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.9737e-01, -1.2354e-01,  2.3519e+00, -1.6318e+00,  2.6015e-01,
          1.1184e+00,  4.0475e-01,  3.6756e-01,  3.7541e+00,  1.2109e+00,
          9.6934e-01,  1.4533e+00,  1.5056e-03,  1.9451e-02, -8.0007e-03,
          4.2996e-03, -1.7794e-02,  7.1044e-03,  2.8519e-02,  3.8294e-02,
         -2.4071e-02,  1.1826e-01, -3.2886e-01,  5.2877e-01,  1.3697e-03,
         -6.3058e-01,  2.5024e-01,  2.5994e-01, -7.2468e-02, -9.6662e-02,
         -2.4457e-02, -5.7576e-02, -2.7079e-02, -1.4661e-01,  4.6468e-01,
         -2.3475e-01, -8.9929e-03, -1.5080e-01,  3.1197e-01, -3.2361e-02,
         -5.7175e-01,  2.1944e-01, -2.9031e-01,  3.2369e-01,  8.3791e-02,
          7.0688e-03, -2.0928e-02,  3.2025e-01, -8.5828e-01, -7.9040e-01,
         -5.9885e-01,  9.9727e-01, -3.4098e-02,  5.4868e-02,  1.3068e-02,
         -1.6165e-02, -2.9031e-01, -3.0015e-01, -6.7820e-01,  3.0627e-01,
         -3.4525e-02,  8.3537e-02, -4.9750e-01,  2.1137e-01,  6.7595e-01,
          2.8247e-01, -2.9628e-01, -5.3590e-01,  1.1362e+00,  3.5504e-01,
         -1.1004e+00, -1.1426e-01]], device='cuda:0') tensor(1.1770, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
842000 特征值优化 tensor(3.4394, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2270,  0.0459,  0.2292, -0.1152,  1.8954,  1.5411,  0.3720,  0.6448,
          0.0888,  0.3366,  1.8834, -0.9571,  0.0213, -1.4245,  0.0100,  0.6456,
         -0.0661, -0.2119, -0.6501, -0.0248,  0.0289, -0.3382,  0.0126,  0.0062,
          0.0020,  0.0037, -0.0196, -0.0251, -0.0039,  0.0768,  0.5478,  0.0961,
         -0.2419, -1.4048,  0.0791, -0.0587,  0.1937,  0.0537,  0.1294, -0.1403,
          0.1267,  0.1014, -0.2789, -0.1769,  0.2037, -0.0225,  0.0785,  0.1742,
         -0.3014,  0.4417,  0.6077, -0.2120, -0.8251,  0.6810,  0.7505,  0.5841,
          1.1752,  0.9739,  0.2419, -0.1715, -0.8560, -0.1522,  0.4048, -0.7178,
          0.0824,  0.2304, -0.2361, -0.3791,  0.4134, -0.6711,  0.9135, -0.0619]],
       device='cuda:0') tensor(2.6322, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
843000 特征值优化 tensor(2.0892, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.4961e-01, -1.2144e-01,  1.9335e-02, -8.3253e-03,  2.2700e+00,
          1.9077e+00,  4.0180e-01,  6.6202e-01,  1.1630e-01,  1.4402e-01,
          1.9022e+00, -6.6327e-01, -8.4478e-03, -7.7772e-01,  1.4294e-01,
         -2.1104e-02,  9.1990e-02,  2.6875e-02, -3.0743e-01,  3.9583e-02,
          1.6161e-02, -2.2028e-02, -2.1095e-02,  7.7106e-03, -9.1836e-04,
          3.2091e-03, -1.0326e-03,  6.6372e-02, -3.5124e-02,  4.2459e-03,
          2.8563e-01,  9.2581e-02, -1.5061e-01, -1.1436e+00,  3.7173e-02,
         -1.0736e-01,  1.7991e-01,  2.7541e-02,  7.4411e-02, -7.2542e-02,
          9.9096e-02,  4.2052e-02, -4.6043e-01,  1.8074e-01,  1.5723e-01,
          6.8649e-02,  6.4438e-02, -8.3700e-02,  2.0429e-02,  1.0752e-01,
          1.7533e-01, -9.3836e-02, -1.1523e+00,  3.2029e-01,  6.5434e-01,
          4.8748e-01,  9.2789e-01,  7.7955e-01,  1.3337e-01, -2.7300e-01,
         -6.7392e-01, -9.6408e-02,  3.0141e-01, -5.5277e-01, -4.2224e-02,
          1.9236e-01, -9.4507e-02, -1.6798e-01,  6.1821e-01, -6.1999e-01,
          5.1845e-01,  8.7965e-02]], device='cuda:0') tensor(0.8747, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
844000 特征值优化 tensor(10.8055, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0649, -0.3473, -1.6672, -0.0372, -1.0271,  0.7136,  0.9051, -1.0266,
          0.9885,  0.8745, -2.1283,  0.1689,  0.1303,  0.0862, -0.1755,  0.7304,
         -0.0567, -0.1121, -1.2757,  0.3597, -1.2603,  0.6918,  1.2564,  1.6563,
         -0.0930,  0.8809,  0.1474,  0.6650,  0.4595, -0.4874,  0.0140,  1.1577,
          0.0635, -0.1302, -0.0242, -0.0429,  0.8321, -0.8435, -0.0189, -0.1722,
          0.1882, -1.0740,  0.4368,  0.2794,  0.3803,  0.5623, -0.2700, -1.1891,
          1.5418, -0.1736,  0.0111, -0.5646,  1.3362,  0.1008, -0.7255,  0.1365,
          0.4033, -0.6383, -0.0541,  1.2726,  0.4756,  1.6507, -0.2480, -0.8826,
         -1.0081,  0.1599,  0.1508,  0.2998,  0.4905, -0.2906,  1.9777,  1.5619]],
       device='cuda:0') tensor(6.6263, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
845000 特征值优化 tensor(2.5012, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7363, -0.0580, -0.7480,  0.4164, -0.2333,  1.5176,  1.7775, -1.0372,
          0.9465,  0.8232, -1.1769,  1.1224,  0.0909, -0.0420, -0.0377,  0.2176,
          0.0525,  0.0678, -0.1617,  0.1259, -0.6865,  0.1026,  0.2606,  0.6471,
         -0.0970,  0.0630,  0.0292,  0.0818, -0.0018, -0.1202,  0.0275,  0.4131,
         -0.0565,  0.0258,  0.0464, -0.0900,  0.7991, -0.3648, -0.0938, -0.2245,
         -0.0049, -0.8079,  0.4186,  0.0447,  0.3801,  0.3849, -0.2692, -0.3704,
          0.6569, -0.3842, -0.0258,  0.0793,  1.0862, -0.4927, -0.6494,  0.1220,
         -0.7200, -0.0095,  0.0812,  0.3497,  0.7873,  0.7091, -0.1184, -0.4838,
         -0.8322,  0.2389,  0.0364,  0.2269,  0.4438,  0.0053,  1.0224,  0.6805]],
       device='cuda:0') tensor(0.8427, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
846000 特征值优化 tensor(2.1209, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7611, -0.1916, -0.5672,  0.4570, -0.0525,  1.6179,  1.8850, -0.5386,
          0.4644,  0.9639, -0.7177,  1.1261,  0.1359, -0.0581, -0.0338,  0.3670,
         -0.0644,  0.0752, -0.0277,  0.1373, -0.5451,  0.0921,  0.0472,  0.3897,
         -0.0534,  0.0047,  0.0087,  0.0165, -0.0092, -0.0898,  0.0293,  0.3366,
          0.0464,  0.0259, -0.0782, -0.0115,  0.6366, -0.2817, -0.1657, -0.3104,
         -0.0417, -0.6963,  0.1007, -0.1850,  0.5473,  0.3261, -0.2546, -0.3107,
          0.4215, -0.2410,  0.0716,  0.0784,  0.8620, -0.3592, -0.4743,  0.0605,
         -0.9371,  0.1309,  0.0405,  0.0848,  0.4827,  0.6047, -0.2671, -0.3390,
         -0.2830,  0.2801, -0.0255,  0.3870,  0.1114,  0.0692,  0.7286,  0.6629]],
       device='cuda:0') tensor(0.6991, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
847000 特征值优化 tensor(4.6132, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3083e-01, -5.1522e-01,  2.1028e-01, -5.5944e-02, -8.0973e-01,
          1.4620e+00,  7.7324e-02,  2.6726e-01, -3.4641e-01, -9.6278e-01,
         -1.9717e-01,  2.9660e-01,  8.2884e-02, -5.3839e-02, -1.6469e-02,
          1.6906e-01,  8.0437e-01,  7.4153e-02,  1.1069e-01,  5.3770e-01,
          1.7220e-05, -2.3229e-01,  3.3080e-02, -4.7093e-01,  7.5363e-02,
          7.9886e-02,  1.6648e-02, -1.9885e-01,  2.4660e-01,  3.8776e-01,
         -2.4191e-01, -1.6786e-02,  4.6855e-02,  1.0776e+00,  5.0501e-01,
         -1.6938e-01, -2.9457e-01, -2.6521e-01, -8.4471e-02,  2.2955e-01,
          4.4250e-01, -5.9891e-02,  7.4563e-01, -1.3049e-01, -7.5117e-01,
         -1.6744e-01,  2.1508e-01,  9.2368e-01, -2.8791e-01, -3.0534e-01,
          3.2972e-01, -4.5665e-01,  2.7054e-01, -1.5759e-01, -3.0907e-02,
          6.1508e-03, -4.1925e-01, -3.1781e-01, -6.9035e-01,  9.6976e-02,
          7.9934e-01,  9.4143e-01, -1.4753e-01,  5.2475e-02,  1.6292e+00,
         -2.4723e-01,  2.1984e-01, -7.5487e-01, -9.9942e-01, -9.0282e-02,
          5.0175e-01,  8.7970e-01]], device='cuda:0') tensor(2.4111, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
848000 特征值优化 tensor(2.1136, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3838, -0.3583,  0.4086, -0.2379, -0.3815,  1.8521,  0.3298,  0.0719,
          0.2045, -0.4232, -0.4223,  0.4844, -0.0179,  0.0227,  0.0160,  0.2075,
          0.2881,  0.0968, -0.0363,  0.1767, -0.0047, -0.1890,  0.2033, -0.2621,
          0.0365, -0.0547, -0.0338, -0.0301, -0.0069,  0.2203, -0.1189, -0.0100,
          0.0136,  0.6992,  0.4423, -0.0258,  0.3228, -0.1456, -0.1791,  0.1624,
          0.1387, -0.1701,  0.0407, -0.0738, -0.1385, -0.0980,  0.1613, -0.1000,
          0.1853,  0.1146,  0.0451, -0.0467, -0.1433, -0.0033,  0.0756, -0.2198,
         -0.0620,  0.1359, -1.2463,  0.5172,  0.2907,  0.6218,  0.0294,  0.0881,
          1.1754, -0.1493, -0.1773, -0.3614, -0.4442,  0.0677, -0.0224,  0.4992]],
       device='cuda:0') tensor(1.4569, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
849000 特征值优化 tensor(9.7641, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3052, -0.3057,  0.2801, -0.0807, -0.3911, -0.9247,  0.3308, -0.4848,
          0.5351,  0.4166,  1.5362, -1.3491,  0.7596,  0.3130, -0.8705,  0.2208,
          0.1703, -0.0451,  0.6730, -1.5421, -0.3121,  0.3863, -0.0237,  1.1429,
          0.0038, -0.0263,  0.3071,  0.1148,  0.2892,  0.1917, -0.1883,  0.4657,
          0.3023, -0.5479, -0.0471, -0.0206,  0.1000, -0.8133, -0.0729, -0.5361,
          1.1877, -0.6656,  0.0802, -0.7517, -0.9744,  1.2814, -0.1915,  1.7089,
         -1.2839,  0.2203, -1.2339,  0.1983, -0.9759,  0.9465,  0.0087,  0.5174,
          1.0725,  0.0115,  0.6005,  0.5479,  1.8095, -0.8769,  1.0149, -0.0987,
          0.7460,  0.0916,  0.2435,  0.2292, -1.1523,  0.8755, -0.5331,  0.0986]],
       device='cuda:0') tensor(5.6484, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
850000 特征值优化 tensor(2.2198, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4328, -0.4486,  0.3409, -0.3582,  0.1370, -0.6539,  0.2531, -1.3841,
          0.1010,  0.1327,  1.7620, -0.7612,  0.1245,  0.1215, -0.1581,  0.0033,
         -0.0734, -0.2009,  0.0923, -0.8037, -0.0733,  0.0965, -0.1162,  0.2817,
         -0.0552, -0.0215,  0.0204, -0.0696, -0.0756, -0.0821,  0.0276, -0.0288,
          0.0106, -0.0211,  0.0187, -0.0156,  0.3008, -0.3534, -0.1786, -0.1303,
          0.3387, -0.2554,  0.7208, -0.5326, -0.8326,  0.8643, -0.0706,  1.2285,
         -0.8942, -0.0369, -1.3162,  0.5693, -0.4979,  0.3010, -0.7368,  0.6046,
          0.2072,  0.0492, -0.0066, -0.0018,  1.2554, -0.6418, -0.0455, -0.1110,
         -0.1652,  0.3498,  0.2056,  0.1845, -0.5485,  0.4652,  0.0338,  0.2229]],
       device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
851000 特征值优化 tensor(17.4197, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0500,  0.5169,  1.1776,  0.4396, -0.5074, -1.9956, -0.2204,  0.1798,
         -0.3481, -0.1339, -1.5760, -0.1709, -1.5752, -1.2321,  0.1973, -0.0388,
          1.9347, -0.0210, -0.1005, -1.4227, -0.4360, -0.5712, -0.7134, -0.1954,
         -0.2452,  1.4359, -1.4950,  1.0257, -2.8168,  0.1587, -1.4804, -0.1375,
          0.8354,  1.0398, -0.9072,  0.7375, -0.2428, -0.9126,  0.3783,  0.3020,
          0.6167,  0.6664,  0.7818,  0.9258,  1.5879,  0.4433,  0.1816,  0.2647,
          1.2873, -0.9526,  0.5034, -0.0777,  1.6373, -0.4638, -1.5141, -0.2860,
         -1.0743, -0.2544,  0.2446,  0.1502, -0.4656,  0.3715, -0.2076, -1.2432,
         -0.0311, -0.4013,  1.0195,  0.5225,  1.1025,  0.0721, -0.2318, -1.8558]],
       device='cuda:0') tensor(8.7003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
852000 特征值优化 tensor(3.9474, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0963e+00,  1.7714e+00,  2.2031e+00,  2.9905e-02,  4.2579e-01,
         -1.1288e+00,  6.0083e-01, -6.6435e-01, -4.2312e-02,  2.7956e-02,
         -7.0680e-01,  5.2396e-01, -5.7853e-01, -3.0143e-01, -9.0503e-02,
         -2.8822e-01,  8.4699e-01,  1.2627e-01,  2.0469e-02, -3.7070e-01,
         -5.1241e-01, -6.1154e-02, -1.5321e-01,  5.0524e-02,  3.2179e-02,
          3.4378e-01, -6.0348e-01,  8.8303e-02, -1.8207e+00, -1.6215e-01,
         -7.1909e-01, -1.7393e-01,  4.4636e-01,  2.5809e-01, -1.2393e-01,
          1.5782e-01,  1.3345e-01, -2.0509e-01,  3.4830e-02,  3.1063e-02,
          2.9665e-02,  2.2791e-01, -2.5668e-01,  5.8904e-01,  1.1223e+00,
         -8.1269e-02,  6.1911e-01,  1.2673e+00,  3.2189e-01, -1.9410e+00,
          2.0846e-01,  8.7187e-02,  1.7349e+00, -1.6046e-01, -8.8214e-01,
          2.9091e-01, -2.8721e-01, -1.2888e-01,  3.4877e-03,  2.0536e-04,
         -2.9045e-01,  2.1251e-01,  3.1461e-01, -3.9529e-01,  1.6214e-01,
          8.0743e-02,  2.6086e-01, -1.5230e-01,  8.0098e-01, -2.6292e-01,
          4.4192e-01, -9.9140e-01]], device='cuda:0') tensor(1.8441, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
853000 特征值优化 tensor(2.1597, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4788e+00,  1.5204e+00,  2.4625e+00, -3.3971e-02,  6.1119e-01,
         -8.8447e-01,  6.3701e-01, -4.5382e-01,  1.1217e-01, -1.2256e-01,
         -4.1210e-01,  3.6204e-01, -3.8232e-01, -3.0140e-02, -5.4260e-02,
         -2.6584e-01,  3.2825e-01,  6.3378e-02,  4.7120e-02, -3.7194e-02,
         -3.6233e-01, -6.2607e-03,  7.1974e-03,  2.5807e-02,  6.3198e-02,
         -4.0791e-03, -1.9119e-01,  1.6831e-01, -1.4711e+00, -4.5078e-02,
         -5.6222e-01,  3.1989e-02,  2.7530e-01,  2.0264e-01, -2.1558e-03,
          7.0490e-02,  7.8260e-02, -1.2059e-01,  3.2987e-02,  3.2879e-02,
         -8.0585e-02,  1.9545e-01, -2.8879e-01,  5.1305e-01,  5.4368e-01,
         -1.7668e-01,  4.3490e-01,  1.5082e+00,  1.0600e-01, -2.3437e+00,
          4.1956e-01, -5.2777e-02,  1.5042e+00,  6.0760e-02, -9.1720e-01,
          4.5610e-01, -3.2202e-01, -3.6023e-02, -9.3305e-02, -4.3888e-02,
         -3.5091e-01,  2.7106e-01,  7.1122e-02, -1.5796e-01, -1.8073e-01,
          1.7039e-01,  1.1404e-01, -1.2609e-01,  2.4882e-01, -1.4514e-01,
          3.1968e-01, -6.5478e-01]], device='cuda:0') tensor(0.9032, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
854000 特征值优化 tensor(15.1437, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0470e+00,  6.6212e-01, -1.6515e+00, -7.6017e-01, -4.5664e-01,
          1.2854e+00, -1.4179e+00, -1.1955e+00,  6.3935e-01,  2.0101e-01,
         -9.1359e-01,  8.6854e-02,  8.2078e-01, -1.0193e+00,  5.5621e-01,
         -5.6339e-01, -7.3181e-01,  1.0591e-01, -3.0965e-01, -4.1098e-01,
          6.8432e-01,  3.8185e-01, -1.2491e+00, -8.9992e-01, -5.0645e-01,
          4.1472e-01, -1.0635e+00,  9.4328e-01, -8.6498e-01,  8.8771e-01,
          3.4732e-01, -3.4172e-01, -6.4712e-02, -1.6601e+00,  1.5735e+00,
          9.4666e-01, -1.6409e-02, -3.4803e-01,  1.1030e+00, -6.3000e-01,
         -2.1612e-01, -1.3481e+00,  2.7681e+00,  5.5545e-01, -6.2218e-01,
          1.1005e+00,  5.6664e-01, -4.9003e-01,  1.6739e-01, -2.1415e+00,
         -1.0415e+00, -4.0557e-01, -9.5510e-01, -8.9229e-01, -7.3335e-02,
          1.2027e+00,  7.3787e-01,  3.5164e-01,  6.0767e-02, -1.5205e+00,
          2.3131e+00, -3.8258e-01, -3.6342e-01,  1.3906e+00,  1.5077e-01,
         -2.4362e-01,  2.7263e-01,  9.9547e-01,  1.1886e+00, -1.4012e+00,
          1.6992e-03,  3.9685e-01]], device='cuda:0') tensor(8.7593, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
855000 特征值优化 tensor(2.7066, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2226,  1.3638, -0.8811, -0.1315,  0.3309,  2.0445, -0.7035, -0.7741,
          1.3167, -0.2747, -0.2252,  0.7872,  0.4903, -0.0518, -0.0193,  0.0153,
         -0.0174,  0.0104,  0.0247, -0.0048,  0.4650,  0.0817, -0.2488, -0.0803,
         -0.0613,  0.1452, -0.0950,  0.0743, -0.0211,  0.1279, -0.0456, -0.3507,
         -0.3697, -0.8510,  0.9161,  0.3949,  0.0480, -0.0364,  0.3354, -0.0726,
         -0.0282, -0.5363,  1.7132,  0.3208, -0.8016,  1.7111, -0.3369,  0.0749,
          0.9136, -1.1069, -0.2603, -0.0096, -0.1949, -0.0928, -0.1821,  0.2159,
          1.3844, -0.0778,  0.3225, -0.8775,  1.6973, -0.5521, -1.2247,  0.7795,
          0.6768, -0.8560, -0.5472,  0.4505,  1.4939, -0.6770,  0.2111,  0.2693]],
       device='cuda:0') tensor(1.8445, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
856000 特征值优化 tensor(2.1753, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3540e+00,  1.2157e+00, -4.3732e-01, -3.3776e-01,  3.5732e-01,
          2.1513e+00, -5.9702e-01, -7.3446e-01,  1.3848e+00, -7.5115e-01,
          6.9779e-02,  5.5141e-01,  4.5120e-01, -4.2616e-02, -5.3419e-02,
          6.8786e-03,  8.6660e-02,  2.5663e-02,  6.8302e-02, -6.0473e-04,
          4.2421e-01,  9.5499e-02, -5.8948e-02, -3.3999e-02, -5.4650e-02,
          1.1144e-01,  2.3865e-02,  3.4466e-02, -7.1561e-04,  1.1478e-01,
         -2.2152e-02, -2.6277e-01, -2.9903e-01, -7.3029e-01,  8.7735e-01,
          4.2201e-01,  8.6265e-02, -5.0157e-02,  2.5109e-01, -1.2046e-01,
         -2.1529e-02, -1.6680e-01,  1.5510e+00,  1.2073e-01, -4.4976e-01,
          1.7201e+00, -3.2904e-01, -1.8139e-01,  5.9247e-01, -5.9934e-01,
         -1.2228e-01, -5.7509e-02, -2.2440e-01,  2.5159e-02, -3.8229e-02,
          9.4616e-02,  1.3216e+00, -2.0527e-01,  8.8699e-01, -7.1515e-01,
          1.5588e+00, -4.4028e-01, -1.1668e+00,  7.2330e-01,  6.0762e-01,
         -7.7985e-01, -4.9425e-01,  5.2080e-01,  1.2376e+00, -5.7488e-01,
         -1.9103e-01,  1.1990e-02]], device='cuda:0') tensor(1.5229, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
857000 特征值优化 tensor(11.3530, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1268, -0.4072,  0.9995,  1.3565, -0.4757,  0.8214,  0.4579,  1.3124,
          1.1210, -0.6669,  0.3795, -0.4294, -0.2182, -0.0225, -0.9173,  0.4931,
         -0.2684,  0.3059,  0.6421,  0.8223,  0.7869,  0.0659,  0.6417,  1.6707,
          1.3882,  0.2707,  1.1552,  1.5794, -0.9842, -0.0667, -0.5761, -0.5699,
          0.1495,  0.0834,  0.4610,  1.1162,  1.7175,  1.0259, -0.1726, -0.4174,
          0.1008,  0.3009, -0.4532, -0.3279,  0.9641, -0.6476, -0.4085,  0.1705,
         -0.3657, -0.7575, -0.3053, -0.1810, -1.7529,  0.4414,  0.0157,  0.0078,
          1.3996, -0.9591,  0.4086, -0.4938,  0.1311,  0.5103, -1.1125, -0.3834,
          0.1934, -1.1825, -0.8040,  0.1496,  0.9009, -1.4142,  0.8461,  0.2180]],
       device='cuda:0') tensor(6.3109, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
858000 特征值优化 tensor(2.3953, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 4.1269e-01, -7.1197e-01,  1.7162e+00,  1.8046e+00,  2.7098e-01,
          1.4154e+00,  1.2757e+00,  1.6493e+00,  1.5277e+00, -2.7347e-01,
          9.7862e-01,  3.6195e-01, -9.7030e-02, -3.9234e-02, -9.0509e-04,
          2.5650e-01, -1.2813e-01, -1.2268e-02,  1.8083e-01,  1.2510e-01,
          2.6858e-01, -2.1390e-02,  2.9836e-01,  6.2614e-01,  4.3334e-01,
         -3.4044e-01,  3.9044e-01,  5.9990e-01, -8.1553e-02,  2.0307e-04,
         -1.1519e-01, -1.5556e-02,  9.8461e-03,  7.6157e-02,  7.9796e-01,
          5.7196e-01,  1.0334e+00,  4.1343e-01, -4.0389e-02,  3.0133e-02,
          1.4552e-01,  1.1368e-04, -2.5032e-01,  2.0958e-01,  4.0045e-01,
         -1.1639e-01, -1.9922e-01, -9.4676e-01,  9.3401e-02,  5.9528e-02,
         -9.0560e-01,  2.9154e-03, -8.5431e-01,  2.2518e-01, -4.5203e-01,
         -3.3424e-01,  1.4709e+00, -6.6574e-01,  8.6529e-01, -6.4609e-01,
          4.9719e-01,  7.7888e-01, -4.9348e-01,  3.6499e-01,  4.2478e-01,
         -6.2632e-01, -8.4382e-01,  6.2639e-01,  1.5147e+00, -7.6863e-01,
          5.3377e-01, -2.8309e-01]], device='cuda:0') tensor(1.0602, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
859000 特征值优化 tensor(2.0996, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.6392e-01, -4.3458e-01,  1.9595e+00,  1.7774e+00,  1.2893e-01,
          1.5940e+00,  1.3137e+00,  1.6087e+00,  1.5317e+00, -4.5082e-01,
          9.0335e-01,  5.4100e-01, -9.4023e-02,  6.8806e-03,  4.2518e-02,
          2.5686e-01,  1.4065e-01, -2.9480e-02,  1.6177e-01,  5.3024e-02,
          1.8393e-01, -2.4194e-02,  2.3613e-01,  3.3306e-01,  2.8557e-01,
         -1.9474e-01,  2.5749e-01,  2.5762e-01, -9.0334e-02,  5.0257e-04,
         -9.7603e-02, -5.3949e-02, -9.5366e-03,  1.7700e-01,  7.4916e-01,
          4.5666e-01,  9.8287e-01,  4.2801e-01, -6.2306e-02,  8.3555e-02,
          1.6479e-01, -5.9546e-02, -2.4115e-01,  2.6124e-01,  3.3862e-01,
         -5.5589e-02, -1.3368e-01, -9.9597e-01,  1.0573e-01,  6.5798e-02,
         -9.0098e-01,  7.1786e-03, -4.6105e-01,  1.4984e-01, -4.4783e-01,
         -5.6578e-01,  1.3135e+00, -4.0928e-01,  7.7812e-01, -4.6804e-01,
          3.8897e-01,  7.8680e-01, -4.7437e-01,  3.8070e-01,  3.2467e-01,
         -5.8209e-01, -5.2205e-01,  5.8390e-01,  1.5729e+00, -7.0399e-01,
          2.6021e-01, -2.7756e-01]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
860000 特征值优化 tensor(5.8485, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6207, -1.2571,  0.7853, -1.3569,  0.7584,  2.1612, -0.2225,  1.6899,
          2.7294, -1.4000,  0.8586, -0.0475,  0.1886, -0.0983,  0.0297,  0.0991,
          0.0938, -0.1758,  0.1539, -0.0798, -0.2720,  0.9647, -0.0084,  0.1156,
         -0.1154,  0.0377,  0.0489,  0.1333, -0.0027, -0.6128, -0.0815,  0.0282,
         -0.0050,  0.5220, -1.0946, -0.6528, -1.5996, -0.3702, -0.6051,  0.3932,
         -0.1316, -0.5971,  0.5100,  0.7242, -0.4750,  0.6035, -0.5874, -0.4234,
          1.0049,  0.5375, -0.5404, -0.6162, -0.5509,  0.0313,  0.1980,  0.0672,
          1.0328,  0.0767,  1.0205, -0.1882,  0.4685, -0.2116, -0.9180, -0.6421,
          0.9034, -0.8363,  0.0594,  1.0718,  0.0909, -0.7344, -0.3511, -1.2302]],
       device='cuda:0') tensor(3.0500, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
861000 特征值优化 tensor(2.1473, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6175, -0.7995,  0.9154, -1.5026,  0.2711,  2.2308,  0.6140,  1.0868,
          2.8071, -1.6147,  1.3351,  0.6794,  0.0713,  0.0391,  0.0555,  0.1924,
          0.0814, -0.3933,  0.3251,  0.0171, -0.0898,  0.7916, -0.0618,  0.0652,
         -0.1253, -0.1394, -0.0824,  0.1202, -0.0233, -0.5517, -0.0231,  0.0041,
          0.0091,  0.4933, -0.9650, -0.5340, -0.7856, -0.0532, -0.2368,  0.1340,
         -0.0216, -0.1053, -0.1998,  0.3468,  0.2722,  0.2485, -0.2912, -0.1391,
          0.8824,  0.3588, -0.4126, -0.5241, -0.4056,  0.1353, -0.0056, -0.0421,
          1.0956, -0.0934,  1.2754, -0.5829,  0.9321,  0.3434, -0.3651, -0.0279,
          0.5757, -0.9254, -0.3616,  0.5954, -0.7009,  0.0178,  0.0404, -0.2299]],
       device='cuda:0') tensor(0.8026, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
862000 特征值优化 tensor(2.0959, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.6336e-01, -5.8966e-01,  9.4735e-01, -1.5349e+00,  9.8490e-02,
          2.2046e+00,  6.9464e-01,  9.3322e-01,  2.8377e+00, -1.4366e+00,
          1.4049e+00,  8.0705e-01, -2.1597e-02, -2.6579e-02, -1.9453e-05,
          9.6752e-02,  1.0386e-01, -3.4472e-01,  2.9850e-01,  1.2540e-02,
         -1.4578e-03,  7.6850e-01, -3.2380e-02, -4.6317e-02, -2.5298e-01,
         -3.0779e-01, -1.0243e-01,  9.8256e-02, -6.4121e-03, -5.1848e-01,
         -2.4024e-02,  9.6975e-02, -4.3175e-02,  3.8442e-01, -9.4018e-01,
         -4.9093e-01, -7.2344e-01, -5.4219e-02, -2.4832e-01,  1.2868e-01,
         -2.0408e-02, -9.7751e-02, -2.4448e-01,  2.4166e-01,  2.3922e-01,
          2.3236e-01, -2.0380e-01, -8.6683e-02,  1.0123e+00,  1.5744e-01,
         -3.6766e-01, -5.0803e-01, -2.0699e-01,  1.2567e-01,  3.0027e-02,
         -2.1537e-02,  9.6204e-01, -2.0744e-01,  1.1351e+00, -5.0656e-01,
          7.8004e-01,  3.3369e-01, -3.1093e-01, -5.5056e-03,  5.5277e-01,
         -8.5942e-01, -4.0651e-01,  5.6834e-01, -6.5526e-01,  2.4495e-02,
         -1.7123e-02, -1.8036e-01]], device='cuda:0') tensor(1.3733, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
863000 特征值优化 tensor(13.1405, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.1854,  1.6830,  0.8268,  0.7423,  0.6603, -0.2851,  1.4128,  0.9894,
         -1.9384,  0.5727, -0.0893,  1.0703,  0.4013,  0.0544,  0.3547,  0.3806,
         -0.0474,  0.3560,  2.3345,  0.0122,  0.2904,  0.6995,  1.0630,  0.8709,
         -0.0473,  0.0716, -0.7435,  0.6357, -1.2349,  1.0648,  0.4346, -0.1941,
         -0.7087,  0.7065, -0.2114,  0.9665, -0.8538,  0.8042, -0.3753, -0.0424,
         -0.7526, -2.4857,  0.8525,  0.6431, -0.6876, -0.8122,  0.5412,  0.5350,
         -2.2574, -1.5689, -0.0473, -0.1039, -0.1218,  0.0983,  0.1264, -0.1171,
         -0.0235, -0.5163,  0.5957,  1.0066, -1.0569,  1.0516,  0.1985,  0.0491,
          0.9335, -0.8692,  0.1183, -0.1437,  1.3163, -1.2878,  0.2346, -0.0040]],
       device='cuda:0') tensor(7.6310, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
864000 特征值优化 tensor(3.0858, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3550,  1.0433,  1.5582,  1.7404,  0.1481,  0.0363,  0.6431,  0.9700,
         -0.5483,  0.4279,  1.0782,  2.0002, -0.0045,  0.0099,  0.0053,  0.2725,
         -0.1314,  0.3219,  1.2769,  0.0325,  0.0187,  0.2307,  0.2328,  0.3617,
         -0.0664,  0.0617, -0.4333, -0.0846, -1.0676,  0.2528,  0.0531,  0.0457,
         -0.1587,  0.2941, -0.2689,  0.4038,  0.0352, -0.0128, -0.0333, -0.1377,
         -0.2550, -1.5332, -0.0101,  0.2110,  0.1313, -0.5421,  0.1567,  1.2674,
         -1.4762, -0.7712,  0.6087, -0.6980, -0.1533,  0.1707, -0.0830, -0.2546,
          0.4919, -0.5776,  0.6783,  0.6426, -0.6708,  0.3355, -0.3036, -0.0878,
          0.3759, -0.1675,  0.4027, -0.0900,  1.1235, -1.3776,  1.0630,  0.9477]],
       device='cuda:0') tensor(1.1580, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
865000 特征值优化 tensor(2.1213, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-4.4756e-02,  6.0083e-01,  1.6482e+00,  1.5739e+00,  7.0761e-02,
          1.4562e-02,  4.2324e-01,  1.2958e+00, -5.8525e-02,  6.3738e-01,
          1.6623e+00,  2.3725e+00, -1.1783e-03,  3.7571e-02, -2.5784e-02,
          2.5746e-01, -1.8951e-01,  2.9139e-01,  6.2812e-01, -2.4351e-02,
          1.4704e-02,  1.7808e-01,  1.2469e-01,  2.3231e-01, -2.8084e-02,
         -5.5405e-02, -1.4319e-01, -4.4229e-02, -7.4120e-01,  1.9651e-01,
          2.7260e-02,  5.7643e-03, -1.0555e-02,  3.1657e-01, -2.7796e-01,
          3.2110e-01, -4.9646e-02, -4.2512e-03, -3.4898e-02, -1.1344e-01,
         -1.9061e-01, -1.2491e+00, -1.5563e-01,  1.9991e-01,  1.9650e-01,
         -3.1124e-01,  1.0426e-01,  1.2543e+00, -1.4046e+00, -7.0499e-01,
          1.2838e+00, -1.0349e+00, -2.0662e-01,  1.7946e-01, -1.7087e-01,
         -3.3185e-01,  2.0796e-01, -3.2152e-01,  6.3678e-01,  8.3454e-01,
         -5.2432e-01,  1.6646e-01, -3.5026e-01, -1.2467e-02,  1.1942e-02,
          2.2771e-02,  5.2067e-01, -1.2611e-01,  1.2692e+00, -1.1669e+00,
          1.1001e+00,  7.9757e-01]], device='cuda:0') tensor(1.5856, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
866000 特征值优化 tensor(12.1468, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4828,  0.4520, -0.2081,  0.7151,  1.1315, -0.4580,  1.5030,  0.2542,
          0.3573,  1.1975, -0.8397,  0.2593,  0.7720, -0.2143, -0.5838, -0.3572,
          0.6137, -0.7473, -1.0238, -0.0111,  0.2601, -0.3826,  0.8249, -1.0467,
          0.0451,  0.1016, -0.1035,  0.0889,  0.0432,  1.1510, -0.4981,  0.1863,
         -0.7396,  0.3533,  2.5167, -0.4865, -0.1073, -0.7132,  0.8037,  0.4519,
          0.2857,  0.3611,  0.2959,  0.3051, -0.0358,  0.3855,  0.4918, -0.2422,
          1.6500,  0.5033,  1.2810, -1.3925,  0.1494, -0.4706,  1.6434,  0.2471,
          2.1949,  0.1805, -0.6291, -0.4421, -0.0091,  1.3359,  0.0087, -0.1496,
          1.3797, -0.5073,  1.1241, -0.3220,  0.2153,  0.4315,  0.2924,  0.1832]],
       device='cuda:0') tensor(7.1318, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
867000 特征值优化 tensor(2.7734, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0606,  0.3417,  0.7087,  0.1283,  0.7185,  0.5143,  1.7147,  0.5694,
          1.2888,  0.9376, -0.2299,  0.3251,  0.2437, -0.2499, -0.2100, -0.1304,
          0.0888, -0.0874, -0.1052, -0.0240,  0.2575,  0.0594,  0.0210, -0.1937,
         -0.0211,  0.0541,  0.0367, -0.0028, -0.0081,  0.6267, -0.1297,  0.1601,
         -0.2840, -0.2404,  1.6015, -0.5308, -0.4769, -0.1423,  0.0426,  0.0582,
         -0.0825,  0.0227, -0.2803,  0.1910,  0.1760, -0.2556,  0.1260,  0.8163,
          0.6525, -0.4764,  0.9664, -0.7236, -0.0876, -0.4456,  0.5829,  0.1000,
          2.5563, -0.7217, -1.5259, -0.5598, -0.2315,  0.6270,  0.1797,  0.0631,
          2.1252, -1.3727,  0.5590, -0.4426,  0.2194, -0.0317,  0.0080, -0.0352]],
       device='cuda:0') tensor(1.1689, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
868000 特征值优化 tensor(2.1583, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1919, -0.2217,  0.7744,  0.1704,  0.0102,  0.8808,  1.6769,  0.5199,
          1.6939,  1.0054,  0.0307,  0.4271,  0.1171, -0.0750, -0.0133, -0.1286,
          0.1000, -0.0268, -0.0592,  0.0101,  0.1352,  0.0988, -0.0519, -0.0429,
         -0.1428,  0.0113,  0.0528,  0.0534, -0.1807,  0.5466, -0.1117,  0.2002,
         -0.1750,  0.0123,  1.3407, -0.4172, -0.3745, -0.1158, -0.0096,  0.0203,
         -0.0900,  0.0254, -0.3146,  0.0632,  0.0743, -0.2352,  0.0022,  0.9797,
          0.5773, -0.5636,  0.7125, -0.6098, -0.0549, -0.1437,  0.4392,  0.0676,
          1.8870, -0.9136, -1.3295, -0.4429, -0.2473,  0.4412,  0.2528, -0.0749,
          2.1430, -1.4598,  0.4422, -0.4488,  0.1035, -0.0328, -0.0167,  0.0235]],
       device='cuda:0') tensor(1.4408, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
869000 特征值优化 tensor(16.6659, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9111,  1.0345, -1.1415, -0.6850, -0.3871, -0.6778,  1.7415, -1.9495,
          0.4802, -0.2837,  1.8629,  0.6848, -0.0967, -0.7200,  0.4113,  0.0063,
         -0.8648,  0.2536, -0.1170, -0.4690, -0.1443, -0.3539, -0.1668, -0.7545,
         -0.4586, -0.6827,  0.1735, -0.2256, -0.2162,  1.4297,  1.0706, -0.7184,
          0.4497,  0.8674,  0.2527,  0.2545,  0.6104,  0.6582, -0.5732, -3.0131,
         -0.6053, -1.6344, -1.9145,  0.5532,  0.9505,  0.7788,  0.0167, -1.1350,
          0.7997, -0.3997,  1.9832,  1.2019, -1.1674,  1.1173,  1.5974, -0.5993,
         -0.8176, -0.2286, -0.3817,  0.6836, -0.0087, -2.5988,  0.6374, -0.0306,
          0.2316,  1.6083,  0.0889,  1.2224, -0.0605,  1.0935,  1.5323, -0.5533]],
       device='cuda:0') tensor(0.2155, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
870000 特征值优化 tensor(5.2426, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2444, -0.0836, -0.1276, -0.4346,  0.3030, -0.0559,  2.4522, -1.9067,
          1.5264,  0.7482,  2.1685,  1.8009,  0.0119, -0.0692, -0.0026,  0.2307,
         -0.5238, -0.3225, -0.0329, -0.0138,  0.0528, -0.1882,  0.1034, -0.1120,
         -0.1516, -0.0980, -0.1286,  0.0361,  0.0094,  0.6572,  0.1268, -0.1976,
         -0.0082,  0.1210,  0.0049,  0.0182,  0.2646,  0.2163, -0.5957, -1.9801,
         -0.6254, -0.8093, -1.0359,  0.3172,  0.3130,  0.1244,  0.1537, -0.2835,
          0.2343, -0.2290,  1.1072,  0.5721, -0.4762,  0.4164,  0.7936, -0.1943,
         -0.2138,  0.2767,  0.0283,  0.1512,  0.7585, -1.6998,  0.5188, -0.2241,
          0.9300,  0.9235, -0.2358,  0.5811, -0.1228,  0.7251,  2.2798,  0.1948]],
       device='cuda:0') tensor(2.4336, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
871000 特征值优化 tensor(2.2432, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.5756e-01, -2.3213e-01,  1.6952e-01, -6.3848e-01,  1.4469e-01,
         -8.1691e-02,  2.5444e+00, -2.4516e+00,  2.2452e+00,  1.0553e+00,
          1.7853e+00,  2.5939e+00,  4.7477e-04,  8.7948e-03, -1.9165e-02,
          1.4508e-01, -4.6566e-01, -3.5185e-01, -2.0036e-02, -3.8851e-02,
          2.0680e-02, -2.7670e-02,  5.5560e-03,  5.6642e-04, -1.2597e-01,
         -8.5489e-02, -1.3051e-01,  1.0564e-01, -1.2000e-02,  2.2552e-01,
          4.1531e-02, -1.2682e-01, -1.3579e-02, -2.1851e-02,  9.6505e-03,
         -1.9324e-02,  1.5181e-01,  2.1060e-01, -3.0290e-01, -1.2641e+00,
         -3.0478e-01, -3.5486e-01, -6.1097e-01,  3.2819e-01,  1.3021e-01,
          1.2097e-01,  5.1510e-02, -6.9432e-02,  2.4957e-01,  1.9444e-01,
          4.7489e-01,  1.6418e-01, -4.1657e-01,  2.9391e-01,  9.7893e-01,
         -3.1946e-01, -2.0006e-01,  1.2910e-01, -2.5252e-02, -1.3893e-02,
          9.1426e-01, -1.3948e+00,  4.2675e-01, -8.4920e-02,  8.4085e-01,
          5.9474e-01, -5.1364e-03,  5.7728e-01, -6.0347e-01,  5.1712e-01,
          2.2646e+00,  1.3612e-01]], device='cuda:0') tensor(1.5747, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
872000 特征值优化 tensor(2.0962, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1693,  0.0049,  0.0987, -0.7433,  0.2710,  0.0495,  2.6450, -2.7322,
          2.3308,  0.9917,  1.6881,  2.6906, -0.0084,  0.0261, -0.0428,  0.0112,
         -0.3729, -0.2435,  0.0506, -0.0281,  0.0138, -0.0941, -0.0219,  0.0331,
         -0.2396, -0.0945, -0.0747,  0.2298, -0.0374,  0.1329,  0.0313, -0.2184,
         -0.0168, -0.0241, -0.0478,  0.0091,  0.0813,  0.2144, -0.3521, -1.1749,
         -0.0946, -0.3838, -0.3209,  0.2771,  0.1046,  0.0633, -0.0038, -0.0985,
          0.1446,  0.1379,  0.3891,  0.0432, -0.2788,  0.2118,  0.9318, -0.0340,
         -0.0599,  0.0568,  0.0079,  0.0209,  1.0203, -1.0552,  0.1588, -0.0068,
          0.6871,  0.5522,  0.0329,  0.6170, -0.8134,  0.2944,  2.1738,  0.0694]],
       device='cuda:0') tensor(0.9030, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
873000 特征值优化 tensor(11.4654, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.0753,  0.8002,  1.4835, -0.9122,  2.1671,  0.5777, -0.5538,  0.1073,
          0.9957,  0.3729, -1.1038, -1.2110,  1.1869,  0.0838,  0.3046, -0.3389,
          0.2593, -0.3010,  1.5228, -0.3000, -1.7003,  0.9389, -0.0442,  0.0185,
         -0.0537, -0.2696, -0.0824, -0.0760, -0.0146, -1.1146,  0.3283, -1.8404,
          0.2439, -0.0177, -0.0249,  0.2220, -0.1446, -0.1633, -0.5521, -0.0313,
          0.0046,  0.0234,  1.0300,  0.8449, -1.9647,  0.6337, -0.1530, -0.3232,
         -0.2647,  0.7015,  0.0815, -0.2666,  1.2999,  1.1972, -0.9503, -0.0958,
         -0.6129,  0.1478,  0.0085, -0.0310,  2.2720, -1.5769,  0.4008, -0.3461,
          1.2637, -0.1086, -0.2870,  0.1887,  0.1304,  0.1105, -0.3256,  0.1383]],
       device='cuda:0') tensor(5.3979, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
874000 特征值优化 tensor(2.7606, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.2406e-03, -1.7441e-01,  1.3522e+00, -1.5746e+00,  2.8028e+00,
         -1.5964e-01,  9.3405e-02,  2.9761e-02,  4.0801e-01,  1.7647e-01,
         -3.5108e-01, -5.1549e-01,  3.0000e-01, -6.4194e-02, -2.1128e-02,
         -4.5474e-02,  6.7647e-03, -9.2093e-03,  4.6594e-01, -3.6146e-01,
         -7.7980e-01,  5.8900e-01, -5.6564e-03, -1.2826e-02, -7.1535e-02,
         -5.2087e-02,  8.7011e-03, -5.6631e-03,  8.9625e-02, -6.1936e-01,
          3.6894e-01, -1.1949e+00,  1.4435e-01, -2.6346e-02,  8.9131e-03,
          2.6545e-02, -1.4986e-01, -3.2086e-02, -2.4474e-01, -4.5878e-02,
          2.6305e-02, -3.0923e-02,  1.4724e+00,  1.3079e+00, -1.4277e+00,
          1.0239e-01, -4.6729e-01, -2.1770e-01,  1.7753e-01,  8.0982e-01,
          2.7793e-03, -3.9083e-01,  1.8768e+00,  4.9598e-01, -1.7301e+00,
         -2.2991e-01, -3.4693e-01,  1.8076e-01,  4.2858e-03, -9.5111e-03,
          2.8207e+00, -1.8711e+00,  4.1211e-01, -2.4046e-01,  3.1237e-01,
          1.0847e-01, -1.1254e-01,  1.0263e-01, -1.0055e-02,  1.2727e-01,
         -7.8762e-02,  1.1002e-01]], device='cuda:0') tensor(2.0584, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
875000 特征值优化 tensor(2.1959, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4240e-01, -2.4072e-01,  1.3644e+00, -1.5497e+00,  2.9526e+00,
         -2.5005e-01,  3.0801e-01,  2.4435e-02, -7.0288e-02,  1.4041e-02,
         -6.6467e-02, -2.9921e-01,  2.4540e-01,  4.3226e-02,  2.5723e-02,
         -2.0336e-02, -7.7198e-02, -9.1511e-03,  1.2221e-01, -3.6849e-01,
         -6.0743e-01,  4.3790e-01, -8.9879e-03,  3.1043e-02, -1.7862e-01,
         -1.5245e-01,  2.6881e-02, -4.5606e-02,  3.0253e-03, -4.5875e-01,
         -8.0288e-02, -1.0945e+00,  9.5020e-02, -2.3420e-02,  4.4345e-02,
         -1.1129e-02, -1.4500e-01, -3.0734e-02, -2.3085e-02, -1.9210e-02,
          2.0756e-02, -1.9452e-02,  1.2583e+00,  1.1977e+00, -1.5463e+00,
          1.5698e-02, -3.6964e-01, -5.2828e-01,  2.4534e-01,  7.4552e-01,
          2.6106e-01, -3.4466e-01,  1.3896e+00,  3.1905e-01, -1.4995e+00,
         -1.5395e-01, -2.3963e-01,  1.5538e-01, -2.4907e-03, -4.3233e-03,
          2.7088e+00, -1.7438e+00,  3.5112e-01, -2.3644e-01, -1.7061e-01,
          9.6836e-02, -7.8544e-02,  6.2107e-02, -9.8526e-02,  1.2359e-01,
         -2.2370e-01,  1.4464e-01]], device='cuda:0') tensor(1.6595, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
876000 特征值优化 tensor(2.1226, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2914, -0.2421,  1.2950, -1.4412,  2.9946, -0.1121,  0.4796,  0.0342,
          0.0941,  0.0720,  0.0529, -0.2100,  0.2447, -0.0741, -0.0105, -0.0827,
          0.0492, -0.0765,  0.0750, -0.3654, -0.5713,  0.3326,  0.0227, -0.0113,
         -0.2138, -0.2040,  0.0382, -0.0360, -0.0472, -0.3537, -0.2957, -1.0580,
          0.0768, -0.0239,  0.0744, -0.0121, -0.1374, -0.0208, -0.0381, -0.0345,
          0.0292, -0.0149,  1.1235,  1.2133, -1.5352, -0.2253, -0.2450, -0.6669,
          0.1334,  0.6747,  0.4424, -0.2565,  1.1074,  0.2941, -1.4365, -0.1037,
         -0.2101,  0.1336, -0.0392, -0.0031,  2.6164, -1.6945,  0.3384, -0.2124,
         -0.2228,  0.1369, -0.0442,  0.0560, -0.0812,  0.1249, -0.2213,  0.1398]],
       device='cuda:0') tensor(1.5659, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
877000 特征值优化 tensor(13.9987, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2090,  0.4398, -0.9564, -0.3642,  0.2789, -0.1529, -0.1978,  0.0797,
          0.7575,  1.6151,  2.4392,  1.4729, -0.0659,  0.2598,  0.3379, -0.1823,
          0.6792, -0.5991, -0.2600, -0.0118, -0.1546,  1.2501, -0.7645,  1.3199,
          1.1228, -0.2208,  1.0837, -0.6721,  0.0078,  0.8257,  2.0399,  1.0730,
          0.7259, -0.4168,  0.0909,  0.2461,  0.3435,  0.3121, -0.1169, -0.1839,
          0.4509, -0.2710, -0.0401, -0.8864,  1.1084, -0.3687,  0.0822, -0.0967,
         -1.3220,  0.0438, -0.6478, -1.5039,  0.7317,  1.2369,  1.5057, -0.1109,
         -1.9312,  0.6107,  0.9259,  1.8046,  0.8233, -0.8372,  0.3057,  1.0405,
          1.5796,  0.6135,  1.2237,  0.7113,  0.7868, -0.0919, -0.1478, -0.8583]],
       device='cuda:0') tensor(7.2507, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
878000 特征值优化 tensor(2.5380, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.6260e-01,  2.7088e-02,  1.5787e-02, -8.0994e-03,  1.1070e+00,
          7.0222e-01,  2.5464e-01, -4.5656e-01,  1.2056e+00,  1.4510e+00,
          1.5787e+00,  1.9478e+00, -2.4646e-02,  1.4276e-03, -3.1910e-02,
          7.7717e-04,  1.3443e-02,  6.0989e-03, -2.6432e-03, -3.1146e-03,
          2.7724e-03,  4.1015e-01,  1.1643e-01,  4.7920e-01,  2.6225e-01,
         -1.2403e-01,  2.6486e-01,  7.7912e-02, -1.4731e-01, -5.5257e-02,
          1.2853e+00,  5.0017e-01,  2.7694e-01, -1.4201e-03,  1.0632e-02,
         -3.0978e-02, -7.3740e-02,  1.0154e-01, -4.1326e-01, -3.1221e-01,
         -3.5893e-01, -4.3056e-01, -2.5695e-01, -1.6647e-02,  3.3665e-01,
         -6.1200e-02,  3.3496e-02,  7.2881e-01, -4.3726e-01,  2.6333e-01,
          1.1089e-01, -7.2953e-01,  1.2733e+00,  5.8613e-01,  6.9307e-01,
         -4.2778e-01, -7.6514e-01,  3.5189e-01,  5.8310e-01,  8.6707e-01,
          1.0670e+00, -7.3488e-01, -3.6216e-01,  4.3775e-01,  5.8670e-01,
          1.1041e-01,  7.6914e-01,  1.5046e-04, -1.1959e-01,  1.8247e-01,
          3.2578e-01, -2.5213e-01]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
879000 特征值优化 tensor(2.1661, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.7867e-02, -2.6775e-02,  1.4135e-01, -1.6140e-01,  1.3310e+00,
          7.8627e-01,  2.1787e-01, -5.9321e-01,  1.2243e+00,  1.4599e+00,
          1.1864e+00,  1.8488e+00, -2.2786e-02, -5.1221e-03,  5.8690e-03,
         -2.7564e-02,  3.4168e-03, -1.2753e-02,  3.7248e-02, -2.4470e-03,
          1.1464e-03,  2.9575e-01,  9.2806e-02,  3.1824e-01,  5.2762e-02,
         -1.7507e-01,  2.4640e-01,  1.4278e-01, -3.0466e-01, -3.6168e-02,
          1.0336e+00,  4.8244e-01,  2.7222e-01, -2.8852e-02,  3.3648e-02,
         -8.0088e-02, -1.7668e-01,  1.9066e-01, -2.9461e-01, -3.2907e-01,
         -2.7023e-01, -5.4065e-01, -2.1226e-01,  5.6072e-02,  2.2457e-01,
          1.3463e-02,  2.0117e-03,  6.0136e-01, -4.8906e-01,  2.6135e-01,
          1.6176e-01, -5.7927e-01,  9.4007e-01,  4.2597e-01,  7.5194e-01,
         -5.7290e-01, -5.1297e-01,  3.2094e-01,  3.9270e-01,  7.0909e-01,
          7.7020e-01, -4.4599e-01, -3.5394e-01,  2.1837e-01,  4.0906e-01,
          7.3591e-02,  5.9598e-01, -4.0896e-02,  3.4719e-02,  7.0580e-02,
          3.3120e-01, -9.3770e-02]], device='cuda:0') tensor(1.3627, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
880000 特征值优化 tensor(6.4086, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-2.6412e-01, -8.9142e-01, -6.9698e-01, -4.7616e-01,  1.4166e+00,
          6.3522e-02, -9.7685e-01, -1.3969e-01, -5.6932e-01,  6.8403e-01,
          1.6386e+00,  1.0874e+00,  3.2536e-01, -1.4671e-03, -1.6907e-02,
         -3.8481e-01, -1.7578e-01, -1.2348e-01,  4.4392e-02, -1.0770e-02,
         -9.8855e-01, -9.3733e-01,  3.5416e-01,  7.5957e-01,  5.4706e-03,
         -9.7453e-03,  1.5195e-01, -2.6881e-01, -4.7603e-01,  5.0770e-01,
          2.6514e-01, -3.1496e-02,  5.1881e-01, -5.4926e-01, -4.3663e-01,
         -2.0964e-01, -2.0897e-01,  1.9761e-02, -9.4576e-02, -5.3419e-02,
          5.2461e-01, -2.8318e-02, -4.0544e-01,  9.0181e-02,  7.5205e-01,
         -3.2421e-01, -7.1815e-01,  5.8658e-01,  1.2442e+00, -1.3634e+00,
         -2.0261e-01, -3.2244e-01, -5.7080e-02, -1.2387e+00, -5.4485e-03,
         -7.1207e-01, -3.5360e-01, -3.9784e-02, -2.4530e-02, -6.8825e-02,
          9.3801e-02,  1.4557e-01,  2.5334e-01, -4.4340e-02,  7.9842e-01,
         -5.4191e-01, -2.4995e-02,  9.8311e-02,  6.7577e-01,  1.3572e-01,
          5.4194e-01,  1.1624e+00]], device='cuda:0') tensor(3.5061, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
881000 特征值优化 tensor(2.2593, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2068, -0.8462, -0.0260, -0.5804,  1.6114,  0.3565, -0.3153, -0.0550,
         -0.2676,  0.5248,  0.5583,  1.2714,  0.4128, -0.0355,  0.0223, -0.0671,
         -0.0245, -0.0234,  0.0045, -0.0423, -0.5604, -0.3820, -0.0617,  0.0722,
         -0.0336, -0.0108, -0.0249, -0.0671, -0.1807,  0.3664,  0.2433, -0.0664,
          0.4108, -0.1367, -0.1674,  0.0077, -0.0207,  0.0156, -0.0550, -0.1473,
          0.1312, -0.3218, -0.0900,  0.1336,  0.7063, -0.1485, -0.4202,  0.7429,
          0.9586, -0.7405, -0.3330, -0.2170,  0.2029, -0.8694, -0.0266, -0.2327,
         -0.2098,  0.2160, -0.0209,  0.0697, -0.0515,  0.0612,  0.0945, -0.0135,
          0.5710, -0.1653, -0.0417,  0.1093, -0.0869,  0.1668, -0.4188,  0.6275]],
       device='cuda:0') tensor(0.7736, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
882000 特征值优化 tensor(2.1137, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2454, -0.7334,  0.1640, -0.3169,  1.5948,  0.0746, -0.0811, -0.0240,
         -0.0602,  0.4542,  0.1134,  1.2458,  0.3837, -0.0135,  0.0217, -0.0580,
         -0.0172,  0.0185, -0.0154, -0.0044, -0.5122, -0.3252, -0.0401,  0.0170,
         -0.0517,  0.0174, -0.1392, -0.1709, -0.1948,  0.3076,  0.2419, -0.1259,
          0.3416, -0.0538, -0.0218,  0.0293, -0.0206,  0.0017, -0.0324, -0.0641,
          0.0294, -0.2241, -0.1129, -0.1629,  0.9285, -0.1391, -0.3441,  0.6435,
          0.7945, -0.6079, -0.4194, -0.1775,  0.2268, -0.8389,  0.0423, -0.0514,
         -0.3370,  0.2088,  0.0524,  0.0947, -0.0831,  0.0546,  0.0442, -0.0212,
         -0.0251,  0.0728, -0.0556,  0.0800, -0.1495,  0.1393, -0.4527,  0.5313]],
       device='cuda:0') tensor(0.7659, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
883000 特征值优化 tensor(10.5996, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.9115e-01,  5.0746e-01, -9.5654e-01,  2.6471e-01,  7.1970e-01,
          3.1216e-01,  3.6994e-01, -2.1630e-03,  3.9555e-01,  3.1353e-01,
          2.1520e-01,  2.6219e+00,  1.2621e+00,  6.1582e-02,  6.4222e-03,
         -3.7311e-02,  6.6165e-01, -3.1214e-01, -1.6161e-01,  7.2976e-03,
          9.4951e-01, -7.9464e-02, -4.7124e-03, -2.5703e-02, -4.4328e-01,
         -3.2410e-02,  3.9964e-02, -4.8417e-02,  2.5633e-02, -2.5947e-04,
          3.5621e-02,  7.0393e-01,  3.3605e-01,  1.4002e-01,  3.8604e-01,
          1.2694e-01, -1.0787e+00,  1.4150e-01,  7.3912e-01, -2.5735e+00,
          7.5356e-01,  7.2313e-01, -6.4217e-02,  5.9093e-01, -5.0777e-02,
          3.7402e-01, -5.8218e-02,  1.2225e+00, -1.1927e+00,  4.1599e-01,
          7.2903e-01, -5.5990e-01,  3.2778e-02,  5.8655e-01,  2.4279e-01,
         -4.3829e-01,  9.5922e-01, -5.6528e-01, -1.4985e-01,  1.3767e+00,
          1.8862e+00, -1.1716e+00, -1.0493e+00,  9.2912e-01,  1.3147e+00,
         -7.5620e-02, -3.4082e-01,  6.5744e-01,  1.4465e+00,  3.3216e-01,
         -1.3629e+00,  5.9717e-01]], device='cuda:0') tensor(5.8699, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
884000 特征值优化 tensor(3.2303, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2457e+00,  1.1581e+00, -4.8998e-01, -7.7812e-02,  7.9494e-01,
         -2.7955e-01,  5.9960e-01, -3.9242e-01,  1.4578e+00, -1.5179e-01,
          5.0179e-01,  3.5801e+00,  8.9313e-01, -4.5436e-02,  3.1039e-02,
         -1.5145e-01,  2.2664e-01, -1.3510e-01, -1.5358e-01, -3.6108e-02,
          8.5098e-01, -2.7255e-02, -8.2623e-03,  3.7036e-03, -1.7359e-04,
          9.6725e-03,  3.4896e-02, -1.1070e-02, -2.3052e-03,  1.7278e-03,
         -2.1285e-01,  4.5315e-01,  2.8984e-01, -2.0876e-02, -9.0892e-03,
          3.9359e-02, -2.6630e-01, -1.0146e-01,  3.3289e-01, -1.6627e+00,
          4.0850e-01,  3.4139e-01,  1.0905e-02,  4.5252e-01,  4.2515e-01,
          3.6408e-01,  2.1169e-01, -1.9963e-02, -1.3062e-02,  1.5747e-01,
          1.4752e-01, -5.2217e-02, -3.2383e-01,  2.9701e-01,  3.8521e-01,
         -3.6917e-01, -1.5366e-02, -9.9378e-04, -4.0680e-01,  6.0769e-01,
          1.6195e+00, -1.2125e+00, -1.6324e+00,  7.4832e-01,  1.9091e+00,
          4.6386e-01, -9.2130e-02,  1.6046e-02,  1.1536e+00,  8.1270e-02,
         -4.4335e-01,  1.3035e+00]], device='cuda:0') tensor(2.4101, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
885000 特征值优化 tensor(2.1425, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6778e+00,  1.5698e+00, -1.8085e-01,  2.6860e-02,  6.8846e-01,
         -1.2897e-01,  5.8054e-01, -6.4917e-01,  1.8885e+00, -6.4057e-01,
          3.8311e-01,  3.9674e+00,  6.4457e-01, -5.3624e-02, -5.8001e-02,
         -1.3834e-01,  2.1816e-01, -1.2054e-01, -2.1646e-01, -1.6164e-01,
          6.1815e-01, -2.2933e-02,  2.4586e-02,  1.6034e-02, -5.9793e-03,
         -3.8787e-02, -8.4847e-02,  1.3137e-02,  2.3266e-02,  4.0323e-04,
         -1.2962e-01,  4.1376e-01,  2.9898e-01, -1.9346e-02,  4.2188e-02,
          3.0841e-02, -1.8513e-01, -1.3544e-01,  2.4381e-01, -1.3350e+00,
          3.8526e-01,  2.0981e-01, -8.6013e-02,  4.8557e-01,  4.8594e-01,
          1.2238e-01,  3.2818e-01, -1.3219e-01,  1.1919e-01,  7.4330e-02,
          8.6303e-02, -4.8956e-02, -3.2618e-01,  1.9423e-01,  4.6864e-01,
         -3.2766e-01, -1.8521e-01,  1.0061e-01, -8.6126e-01,  6.0715e-01,
          1.7947e+00, -1.1390e+00, -1.5792e+00,  6.8165e-01,  1.8542e+00,
          3.9017e-01, -3.2550e-01,  4.9136e-03,  1.3171e+00,  2.6909e-02,
         -3.1627e-01,  1.2379e+00]], device='cuda:0') tensor(0.7378, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
886000 特征值优化 tensor(15.4262, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0667,  0.0785, -0.9942, -1.9047, -0.4984,  1.2994, -0.4432, -0.1159,
          1.2235,  1.4648,  1.0779,  0.1352, -0.0298, -0.0717,  0.5161, -2.6730,
          0.3709, -0.1375,  0.8580, -0.4124, -0.9068,  1.0888,  0.0189,  0.2050,
         -0.2223,  0.1919, -0.6601, -0.4200, -0.6507, -0.4559,  1.4174, -1.0533,
          0.3696,  0.1439, -1.2390,  0.6413, -1.9271, -0.1889, -1.0597,  0.3908,
         -0.7916, -1.5303,  0.3554, -0.8542, -0.1092, -1.3118, -0.8698, -0.0032,
          1.3090,  0.4239, -0.3852,  0.9454,  0.2511,  1.1904,  0.8981, -0.8656,
         -0.6689, -0.4994, -0.2111, -1.2150,  0.6262,  0.7769,  0.3045,  0.6392,
          1.3916, -0.1162,  0.5335,  0.0811, -0.5917, -0.4618, -1.0342,  0.9082]],
       device='cuda:0') tensor(8.8048, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
887000 特征值优化 tensor(3.4824, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7811, -0.1241, -0.3302, -0.8372,  0.1267,  1.7354,  0.5485,  0.5083,
          1.7567,  0.6321,  0.8069,  0.9201,  0.2317, -0.0964,  0.0140, -1.5742,
          0.0138, -0.0064,  0.0449, -0.3398, -0.2437,  0.3897, -0.1369, -0.0150,
          0.0181,  0.0763,  0.0040, -0.0323, -0.0094, -0.3034,  0.0820, -0.2058,
         -0.0157, -0.0045, -0.7514,  0.1642, -0.9966, -0.2431, -0.4915, -0.1849,
         -0.1038, -0.6497,  0.4200, -0.4060,  0.1650, -0.5589, -0.0759,  0.2166,
          0.7067, -0.1156, -0.0320,  0.0912, -0.2056,  0.3377,  0.0179,  0.0124,
         -0.2247, -0.4226, -0.4418, -0.3200,  1.1659,  0.4502,  0.1695,  0.2368,
          1.4512, -0.2574,  0.3486, -0.0714, -0.3298,  0.0449, -0.2134,  0.4778]],
       device='cuda:0') tensor(1.4679, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
888000 特征值优化 tensor(2.1516, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.6323e-01, -2.2788e-01, -3.4298e-01, -4.4847e-01,  3.8547e-01,
          1.7005e+00,  1.0153e+00,  6.9549e-01,  1.6770e+00,  8.2413e-01,
          3.3127e-01,  9.7193e-01,  2.2862e-01,  1.4438e-02,  7.9118e-02,
         -7.1003e-01, -3.9525e-02,  4.7106e-03, -1.6294e-01, -1.7810e-01,
         -2.4650e-01,  2.0229e-01,  4.8105e-02,  1.2656e-01, -6.5170e-02,
          7.1331e-02, -9.8071e-02, -8.2233e-02, -5.1114e-04, -1.7724e-01,
          2.7588e-02, -1.0202e-01,  1.5475e-02, -1.1978e-02, -6.5375e-01,
          2.0492e-01, -6.2927e-01, -1.5397e-01, -4.0138e-01, -3.3110e-01,
         -6.2336e-02, -3.9913e-01,  1.0725e-01, -2.8619e-01, -6.3205e-02,
         -3.7028e-01,  1.9049e-01, -1.1613e-01,  6.0996e-01, -1.2192e-01,
          3.3119e-01,  2.7073e-02, -2.1291e-01,  1.8190e-01,  3.8170e-02,
          3.4377e-02, -2.1704e-01, -2.4406e-01, -6.4261e-01, -3.1420e-01,
          9.4304e-01,  1.5999e-02, -1.8738e-01,  1.8227e-01,  1.4672e+00,
         -4.5746e-01,  5.6606e-01, -6.5105e-02, -8.0441e-02,  1.1163e-01,
         -1.9036e-01,  3.0392e-01]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
889000 特征值优化 tensor(14.6497, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.6779,  0.8664,  0.5723, -0.2106,  0.3838, -2.6929, -0.4044,  0.2080,
          1.2329, -0.8026,  1.0359, -0.6303, -0.2139, -0.1267, -0.1259,  0.1401,
         -1.7256, -0.9375,  0.0911,  0.3470, -0.1409, -0.1830, -0.8628, -0.4397,
         -0.4152,  0.5268, -0.2917, -0.3201,  0.2709, -1.0821,  1.0722,  1.5010,
          1.0043,  1.3274,  1.6870,  0.6747, -0.7864, -1.1729,  1.9156,  0.3340,
          0.1535,  0.1260, -1.4144, -1.1588,  0.1375, -0.7295,  0.1664,  0.0572,
         -0.5872,  0.8098,  0.1656,  0.4259,  2.0814, -0.7870, -0.4087, -0.5748,
         -0.0820, -0.1704,  0.0809, -0.8353,  1.6772,  1.0860, -0.5357,  0.2094,
         -1.1068,  0.6326, -0.4841,  1.0283,  0.0836, -0.3133,  2.4066, -0.3416]],
       device='cuda:0') tensor(7.2616, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
890000 正交保障 tensor(2.1222, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2442,  0.8265,  1.0580,  0.7929,  1.1361, -1.6639,  0.4823, -0.3458,
          2.2112, -0.8053,  0.8226, -0.2145, -0.0600,  0.0282, -0.0633,  0.2304,
         -0.7068, -0.1807, -0.0539,  0.0160, -0.0380, -0.4255, -0.1933, -0.1877,
          0.1525, -0.1610, -0.1233, -0.1417, -0.0074, -0.5006,  0.3260,  0.6243,
          0.3105,  0.4276,  0.7240,  0.4311, -0.1028, -0.3448,  0.8763, -0.1588,
         -0.0133, -0.0065, -0.6091, -0.2730,  0.4454, -0.5038, -0.0190,  0.3414,
         -0.1123,  1.0505,  0.4245,  0.3939,  1.8441, -0.6536, -1.0283, -0.0157,
          0.9433, -0.7247,  0.0038, -0.2796,  0.7953,  0.2228, -0.3859,  0.1561,
         -0.1162, -0.2497, -0.9788,  0.5508, -0.2835,  0.2344,  1.6711, -0.8214]],
       device='cuda:0') tensor(2.1222, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
891000 特征值优化 tensor(2.1953, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.7693e-01,  4.8211e-01,  9.7931e-01,  9.0574e-01,  1.1416e+00,
         -1.2056e+00,  6.2333e-01, -8.1290e-01,  2.3922e+00, -1.3574e+00,
          3.0007e-01,  1.7981e-01, -7.7214e-02, -1.8239e-01, -1.6088e-01,
          2.0107e-01, -3.0296e-01, -1.4661e-01, -9.9132e-02, -7.1007e-04,
         -5.6701e-02, -4.1563e-01, -1.3590e-01, -5.1746e-02,  2.0013e-02,
         -1.1509e-01, -2.1733e-02, -1.8372e-02, -2.6369e-02, -4.4324e-01,
          2.5385e-01,  4.9714e-01,  2.2223e-01,  1.1954e-01,  5.3365e-01,
          3.9752e-01,  8.9692e-02, -6.2609e-02,  5.4556e-01, -2.0709e-02,
          7.4084e-03,  3.7744e-02, -6.1576e-01, -6.4102e-02,  3.0964e-01,
         -3.4506e-01, -4.4420e-02,  2.0556e-01,  2.1850e-01,  8.7681e-01,
          2.2294e-01,  4.5712e-01,  1.2945e+00, -4.1592e-01, -6.2703e-01,
          1.7044e-01,  9.4848e-01, -7.4877e-01,  8.9733e-02, -2.1388e-01,
          4.7447e-01,  1.1701e-01, -4.5072e-02, -3.7107e-02,  4.3777e-02,
         -2.4689e-01, -1.1055e+00,  5.5916e-01, -2.7230e-01,  2.2097e-01,
          1.2079e+00, -6.6790e-01]], device='cuda:0') tensor(1.5505, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
892000 特征值优化 tensor(16.0127, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.3095, -0.1085,  1.7310, -0.1463,  0.3497, -0.8889,  0.2106,  1.6946,
         -1.7264,  0.7803,  0.0356, -0.7269, -0.6947, -0.9044, -0.9392,  0.9248,
         -0.3129,  0.0472, -0.9138,  0.5098, -1.1016,  0.3316, -0.8139,  0.1956,
         -1.4714,  0.5821, -0.6069,  0.5678,  1.3161,  0.9142, -0.8586,  0.4505,
          0.6127,  0.1066, -0.1286,  0.1040, -1.6008,  1.4408, -1.2519, -0.8450,
         -1.0016,  0.1994,  1.3302, -1.5797,  1.7182, -0.8278,  0.1710, -0.6450,
         -0.1232, -0.9158,  2.3568, -0.7997, -0.8206,  0.5148,  1.4537,  0.1923,
         -0.6556, -1.2358, -1.0730,  0.1792,  0.1068,  0.8240, -0.9292,  0.3427,
          1.3049,  0.1245,  0.1950,  0.9403, -0.0028, -2.3908,  0.4598, -0.5293]],
       device='cuda:0') tensor(7.8893, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
893000 特征值优化 tensor(3.1485, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.4106, -0.1317,  2.3042, -1.0566,  0.1485, -0.2857,  1.2763,  0.8406,
         -0.9478,  1.0718,  1.1443, -0.4871,  0.0353, -0.0418, -0.0477,  0.1910,
         -0.0262,  0.0792, -0.1486,  0.0147, -0.0505,  0.2920, -0.1597, -0.0586,
         -0.3017, -0.1363,  0.1038, -0.2320,  0.6906,  0.3091, -0.0976,  0.0215,
          0.0375,  0.0497, -0.0057, -0.0269, -0.7760,  0.4468, -0.6692, -0.3221,
         -0.2425,  0.0771,  0.6423, -1.3593,  0.9801, -0.5613,  0.2464,  0.0160,
         -0.2421, -0.6432,  1.5707, -0.2728, -0.5063,  0.2732,  0.6570, -0.1893,
          0.0374, -0.2270, -0.1712, -0.0610,  0.5850,  0.7835, -1.4092,  0.0503,
          1.1261,  0.2729, -0.0857,  0.2912,  1.0813, -1.2457, -0.0205,  0.0344]],
       device='cuda:0') tensor(2.1512, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
894000 特征值优化 tensor(2.1463, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0506,  0.0328,  2.2721, -1.0668, -0.0651, -0.0746,  1.3869,  0.6159,
         -0.7006,  0.5844,  1.2940, -0.4320,  0.0316, -0.0365, -0.0102,  0.1164,
          0.0563,  0.0203,  0.0177, -0.0084, -0.0051,  0.2693,  0.0783, -0.0484,
         -0.0841, -0.0661,  0.1770, -0.3112,  0.5599,  0.2873, -0.0229,  0.0272,
         -0.0275, -0.0173,  0.0140, -0.0114, -0.6109,  0.3157, -0.3249, -0.1146,
         -0.1566,  0.1888,  0.0903, -0.7137,  0.8162, -0.2703,  0.1377,  0.0428,
         -0.1191, -0.5318,  1.5476, -0.2512, -0.2093,  0.1395,  0.0678,  0.2065,
         -0.0581,  0.0615, -0.0136,  0.0674,  0.2786,  0.6390, -1.4801,  0.3163,
          0.4199,  0.2031, -0.1005,  0.1412,  1.2688, -0.9567, -0.5545,  0.0924]],
       device='cuda:0') tensor(1.5266, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
895000 特征值优化 tensor(17.8711, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6618,  1.3292, -0.7549,  0.6265,  1.0646, -0.2997,  1.1627, -0.5846,
          1.3794, -0.2062, -1.8799, -1.1652, -0.1570, -1.7620, -1.1347, -0.2663,
         -0.2937,  0.4954, -0.4717,  0.7263, -0.7487,  0.2404, -0.4499,  0.5721,
          0.6155, -1.1201, -1.2217,  0.1419,  0.4171,  0.1777,  0.3195, -0.3772,
         -1.6953, -0.5919, -0.7313, -0.0627,  1.1534, -1.4597,  1.0697, -0.0163,
         -0.0963,  0.6234,  2.5113,  1.5939, -0.2110,  1.5722,  0.0066,  0.8731,
          1.5339, -1.2146, -0.8186, -0.3380,  1.6331,  2.0313, -0.0594, -1.9209,
          0.1433, -0.4540, -0.9008, -0.1902, -0.3921, -1.2884,  0.6433,  0.1574,
         -0.5536,  1.1256,  1.3818, -1.5168, -1.5637,  0.8902,  0.4299,  0.9686]],
       device='cuda:0') tensor(9.3457, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
896000 特征值优化 tensor(4.1652, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6369e+00,  1.9369e+00, -2.1632e-01,  4.2729e-01,  2.0349e+00,
         -3.2397e-01,  2.0388e+00, -1.4506e+00,  1.8132e+00, -1.0342e+00,
         -8.4875e-01, -2.2591e-01, -5.9244e-01, -7.5612e-01, -2.6340e-01,
          8.9481e-02,  1.0261e-01, -3.8948e-02, -7.6365e-02,  2.6788e-01,
         -6.1173e-01, -7.0741e-02, -3.9051e-02, -9.1049e-03,  1.0470e-01,
         -4.6332e-01, -3.0989e-01, -2.8764e-02,  2.3536e-02, -1.8852e-03,
         -6.5220e-01, -4.7274e-01, -6.8810e-01, -6.7880e-02, -2.0857e-01,
          7.3198e-02,  4.2882e-01, -4.8601e-01,  3.2556e-01, -2.6787e-01,
          2.6401e-01,  2.3888e-01,  1.6427e+00,  8.9983e-01, -8.9148e-01,
          1.4582e+00, -1.0775e-01,  5.0827e-02,  6.4140e-01, -4.8250e-01,
         -2.1212e-01,  1.0354e-01,  7.0035e-01,  1.0468e+00,  1.0179e+00,
         -8.9093e-01,  6.8138e-02, -3.8914e-02, -6.7983e-02, -3.0881e-02,
          4.8626e-01, -3.9280e-01, -2.3893e-01,  4.4149e-02, -1.0677e+00,
          6.4391e-01,  9.9338e-01, -7.3357e-01, -5.4561e-01,  1.7799e-01,
         -1.8199e-01,  2.3805e-01]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
897000 特征值优化 tensor(20.2213, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5129,  0.3931,  0.4261, -0.1588, -0.8254,  0.4491,  1.1460, -0.6128,
          0.5614,  0.6186, -1.8558,  0.2608,  0.4578,  0.7058, -0.5274,  0.1115,
         -2.1553,  1.0198, -1.0680, -1.4479,  2.0554,  0.1177, -0.1916, -0.9872,
         -0.1461,  0.1056, -0.0186,  1.5495, -2.2056, -0.6288, -0.4863, -0.3676,
         -1.2216, -0.3456, -0.5102, -0.4152, -0.2374, -0.3723, -0.4933,  1.4278,
         -0.1243,  0.1895, -1.5311, -1.2154, -0.1563, -0.0113,  1.3677, -0.1168,
          0.0751, -0.5961,  0.0154, -0.6402,  0.7422, -1.7213, -0.9322,  0.1801,
         -0.1879,  0.3488,  1.7822,  1.9960,  0.4023, -0.5264,  0.5785, -1.1998,
          1.1900, -0.5720, -0.2543,  0.5139, -1.9795, -1.4245, -0.8335,  0.7511]],
       device='cuda:0') tensor(10.2995, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
898000 特征值优化 tensor(4.8106, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5076e+00,  1.1128e+00,  1.3241e+00,  7.8995e-01, -4.5908e-01,
          9.1824e-01,  1.4251e+00,  2.5859e-01,  3.9356e-01,  4.4514e-01,
         -8.3196e-01,  1.2355e+00,  4.7157e-01,  1.2503e-01, -2.9114e-02,
          1.3383e-01, -1.0587e+00,  1.2526e-01, -4.7679e-02, -3.4821e-01,
          1.0697e+00, -1.4357e-03, -1.3101e-01, -1.3930e-01,  5.6944e-02,
          3.6668e-02,  1.9263e-01,  5.8602e-01, -1.3069e+00,  5.1913e-03,
         -2.2339e-02,  2.0966e-01, -4.1144e-01,  4.7362e-02, -4.0098e-04,
         -1.3291e-02,  1.4878e-02,  2.7157e-02, -3.9949e-02,  6.2868e-01,
         -2.2218e-01,  1.0617e-01, -5.3783e-01, -2.4180e-01,  7.9783e-01,
          4.2116e-01,  6.2992e-01,  8.8744e-01, -6.2312e-01, -1.3106e+00,
         -2.3465e-01, -1.2834e-01,  1.2801e+00, -8.2071e-01,  6.1168e-04,
         -6.0923e-02, -1.2730e-01,  2.8479e-01,  6.9193e-01,  8.6983e-01,
         -4.1796e-01,  1.5026e-02,  4.6195e-02, -4.5177e-01,  7.3452e-01,
          3.0958e-01, -1.9076e-01,  9.3381e-02, -8.8853e-01, -7.5175e-01,
          2.5635e-05,  9.4765e-01]], device='cuda:0') tensor(2.2214, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
899000 特征值优化 tensor(2.1759, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.8342e+00,  1.9212e+00,  1.5587e+00,  1.2432e+00, -1.8912e-01,
          1.1657e-01,  1.0703e+00,  1.6086e-01,  4.9736e-02, -1.6204e-01,
         -5.2610e-01,  1.3557e+00,  5.9367e-01, -7.3102e-03,  5.3760e-03,
          1.4035e-01, -5.2762e-01,  2.4294e-01,  9.5908e-02, -1.3664e-01,
          7.4433e-01, -3.2408e-02, -2.8515e-02,  3.7609e-02, -4.2049e-02,
          3.1800e-02,  9.6481e-02,  2.3829e-01, -1.0551e+00,  1.8668e-02,
         -1.7319e-02,  1.3869e-01, -5.4275e-02,  2.2404e-02, -2.4303e-02,
         -6.9817e-03,  2.0706e-02,  2.2624e-02, -7.7451e-02,  3.6029e-01,
          1.0139e-01, -3.2174e-01, -2.5643e-01,  3.4560e-02,  9.5629e-01,
         -2.0790e-02,  6.0606e-01,  1.0404e+00, -2.5521e-01, -1.5189e+00,
         -3.4113e-01, -1.7370e-01,  6.0443e-01, -2.7253e-01, -1.5839e-03,
          5.4259e-04, -1.5486e-01,  1.4503e-01, -4.0652e-02,  9.9016e-02,
         -8.4119e-01,  6.1971e-02, -4.5138e-01, -1.1949e-01,  1.2408e-01,
          3.6897e-01, -2.0872e-01, -1.0812e-01, -5.5340e-01, -2.2032e-03,
          1.7158e-01,  8.6746e-01]], device='cuda:0') tensor(0.8492, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
900000 特征值优化 tensor(10.5282, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9398,  0.2950, -0.4002, -2.2852,  0.7595,  0.1965, -0.5373, -0.2033,
          0.9587,  0.9376,  0.3384,  0.8629,  0.2375, -0.0476, -0.0496,  0.9437,
         -0.6579,  0.2552,  0.4606,  0.3501,  0.3991, -0.2561,  0.0649, -0.3574,
          1.1558,  0.3367, -0.3532,  0.5830, -1.2350,  0.1208,  0.6833,  0.7930,
         -1.6004,  0.5245, -0.0124, -0.0116, -0.2845,  0.7215,  0.9238,  0.3094,
          0.6604,  0.1990,  1.5005, -0.6486, -0.2932, -0.1062,  1.9554,  0.6583,
         -0.0386, -0.6711,  0.4652, -0.5426,  0.1966, -0.3627, -0.4548, -0.7026,
         -0.3413,  0.1033, -0.3060, -0.4749,  0.9027,  0.5393,  1.1094, -2.1030,
         -0.2455,  0.5243, -0.3326, -0.7026,  0.3063, -0.1696, -1.3475,  0.3878]],
       device='cuda:0') tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
901000 特征值优化 tensor(2.4771, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4107e+00,  6.0338e-01,  6.2906e-02, -1.7129e+00,  1.3010e+00,
          9.6838e-02,  2.9026e-01, -4.5414e-01,  1.2134e+00,  4.2426e-01,
          9.9834e-01,  6.6137e-01, -1.0707e-01, -4.0210e-02,  7.1700e-02,
          1.9643e-01, -2.6641e-02, -2.9875e-02,  4.2039e-02,  7.2265e-01,
          3.0286e-02, -2.7915e-01,  4.7006e-02, -1.2698e-03,  3.5128e-01,
          2.7521e-01, -1.5205e-01,  2.9752e-01, -3.0714e-01,  1.6110e-01,
          1.6787e-01,  7.3436e-01, -8.7862e-01, -2.6820e-02, -2.1168e-02,
          1.2151e-02, -2.4062e-01,  2.2346e-01,  2.1181e-01,  8.9979e-02,
          1.0291e-01,  1.1893e-01,  9.3385e-01, -1.3783e+00,  3.7040e-01,
         -8.4135e-01,  1.1184e+00,  5.2316e-01,  3.6637e-01, -1.8101e-01,
          5.2405e-01, -3.5357e-01,  8.2796e-01, -3.8725e-01, -1.1327e+00,
         -7.5713e-01, -1.3287e-01,  8.4103e-02, -1.1986e-01, -2.3000e-01,
          1.8311e+00, -2.8001e-01,  1.6326e+00, -1.3037e+00, -7.1937e-01,
          1.8680e-01, -5.1887e-01, -1.3473e-01,  1.0250e+00, -9.4544e-01,
         -9.2117e-01,  1.1313e-01]], device='cuda:0') tensor(1.2446, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
902000 特征值优化 tensor(2.1368, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1049,  0.1278,  0.2515, -1.3825,  1.2915,  0.4075,  0.3855,  0.2145,
          1.1008,  0.4371,  1.0553,  0.6164, -0.0045,  0.0126,  0.0028,  0.0483,
          0.0254, -0.0606,  0.0142,  0.7191,  0.1345, -0.2193, -0.0115, -0.0442,
          0.2676,  0.1547, -0.0416,  0.2673, -0.0961,  0.1006,  0.1692,  0.6403,
         -0.7355, -0.0225,  0.0432,  0.0202, -0.0685,  0.1055,  0.1103,  0.1344,
          0.1812,  0.1240,  0.9021, -1.5439,  0.2863, -0.7356,  0.8778,  0.1346,
          0.1978,  0.2015,  0.4612, -0.2800,  0.7207, -0.2266, -1.4666, -0.8064,
         -0.0426,  0.0485, -0.0620, -0.0759,  1.7046, -0.4896,  1.6594, -1.1378,
         -0.7228,  0.1060, -0.5049, -0.0411,  1.1093, -1.0858, -0.7011,  0.0746]],
       device='cuda:0') tensor(1.0701, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
903000 特征值优化 tensor(14.2098, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.2554, -1.1841,  0.8101, -0.8764,  1.1998, -0.2126, -1.5646, -0.1045,
          1.1230, -0.3642,  0.1738,  0.1764, -0.8070, -1.2981, -0.4422, -1.6451,
          2.5041,  0.3484, -0.2621,  0.0166,  0.5206, -0.1483, -1.5134, -0.9928,
          0.7203,  1.0074,  0.3642,  0.8440, -2.1125, -0.0209,  0.0099, -1.2177,
         -0.0773,  0.3852,  1.7544,  0.2510,  0.8640,  0.6622, -0.2242, -0.0863,
          1.2139, -0.1923,  1.0251,  0.7240,  0.3805, -0.2429, -1.0625,  0.2287,
         -0.1606,  0.5046, -0.3707, -0.2717,  0.9659, -0.6191,  0.2568, -0.3161,
          1.4961, -1.6581, -1.1023,  0.4007,  0.6544, -0.8981, -0.4522,  2.0763,
         -0.1785, -0.8380, -0.3094, -0.1783, -0.3689,  2.2502,  0.9655,  0.2467]],
       device='cuda:0') tensor(8.2037, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
904000 特征值优化 tensor(4.2773, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3977, -0.0397,  1.5095, -0.4496,  0.1530,  0.4200, -0.6866,  0.9441,
          1.7808, -0.2829,  1.1905, -0.1092, -0.0877, -0.3695, -0.0776, -0.6637,
          1.4384, -0.1944, -0.0716, -0.0241, -0.0505,  0.1062, -1.0626, -1.0368,
          0.0767,  0.1879,  0.1945,  0.2511, -1.3837, -0.0780, -0.0280, -0.4011,
         -0.1421,  0.1420,  1.2412,  0.2268,  0.3085,  0.2016, -0.0995, -0.0290,
          0.4552,  0.0191, -0.0972,  0.0145, -0.0264,  0.0393, -0.1478,  1.0206,
         -0.7997, -0.0128, -0.2080, -0.2281,  0.0733, -0.0627, -0.0973, -0.0703,
          2.2370, -1.7164, -1.3543,  0.7989,  1.3283, -0.7362, -0.9750,  1.0451,
          0.5096, -0.8802, -0.2907,  0.1610, -0.2603,  1.0858,  0.1161,  0.0155]],
       device='cuda:0') tensor(2.8281, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
905000 特征值优化 tensor(2.2535, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.9291e-02, -5.9420e-02,  1.7655e+00, -7.1540e-02,  3.8591e-02,
          4.7249e-01, -2.2929e-01,  1.3313e+00,  1.8854e+00, -4.6317e-01,
          1.3227e+00,  1.8084e-01, -6.7164e-02, -8.2414e-03,  1.7197e-03,
         -1.2018e-01,  5.5041e-01, -2.4566e-01, -6.0731e-02,  2.8578e-02,
         -4.3420e-02, -3.5984e-02, -1.2005e-01, -1.5055e-01, -4.8849e-02,
         -1.7937e-02, -7.7922e-02, -4.4151e-02, -1.0104e+00,  8.1098e-02,
         -2.3383e-02, -2.3280e-02,  9.8743e-03,  2.1627e-01,  1.2052e+00,
          2.4749e-01,  3.0148e-01,  4.9254e-02,  2.7670e-02, -2.2800e-02,
          4.8015e-02, -2.1308e-02, -3.0354e-01,  2.3269e-01, -2.0466e-02,
         -1.1559e-02, -7.1760e-02,  1.1811e+00, -1.1753e+00, -1.5458e-02,
         -8.0419e-01,  8.7467e-02, -5.5630e-02,  5.0760e-02, -2.3721e-02,
          5.9586e-02,  2.1085e+00, -1.5864e+00, -1.3665e+00,  8.1371e-01,
          1.4006e+00, -6.0813e-01, -3.8902e-01,  6.8304e-01,  5.1269e-01,
         -6.8686e-01, -2.1901e-01,  1.3048e-01,  1.7804e-01,  7.0628e-01,
         -1.4678e-01,  9.6878e-02]], device='cuda:0') tensor(1.0695, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
906000 特征值优化 tensor(2.0983, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-6.5350e-02, -1.8030e-01,  1.8265e+00,  9.2478e-05,  6.5907e-02,
          7.5094e-01, -8.8735e-02,  1.3561e+00,  2.0444e+00, -5.0673e-01,
          1.2454e+00,  1.4803e-01, -7.2381e-02,  1.5991e-02,  2.2997e-02,
         -6.3497e-02,  2.8670e-01, -1.6833e-01,  8.1080e-03, -6.2541e-03,
         -4.4567e-02, -6.3914e-02,  5.0760e-03,  5.6300e-02, -2.7492e-02,
         -2.7522e-02,  1.2892e-02,  4.4423e-02, -8.4396e-01,  1.0249e-01,
         -1.9765e-02, -7.3509e-03,  3.9447e-02,  2.1264e-01,  1.1476e+00,
          2.0152e-01,  3.2635e-01, -6.7946e-02,  3.0265e-02, -4.4189e-02,
         -1.8993e-01, -1.9389e-02, -2.7168e-01,  2.5066e-01, -1.8003e-02,
          5.1493e-02, -8.1711e-02,  1.0985e+00, -1.3483e+00,  2.5295e-01,
         -1.1979e+00,  2.6861e-01, -9.5481e-02,  7.1875e-02,  1.3087e-02,
         -5.3100e-02,  1.7610e+00, -1.4830e+00, -1.3421e+00,  7.4654e-01,
          1.4908e+00, -3.6126e-01, -4.6284e-02,  6.1237e-01,  3.7376e-01,
         -5.9687e-01, -1.2387e-01,  1.2337e-01,  1.2593e-02,  6.8221e-01,
         -1.2810e-01,  6.6754e-02]], device='cuda:0') tensor(1.3652, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
907000 特征值优化 tensor(6.2491, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.2029e+00,  5.3403e-01,  1.8012e+00,  9.4274e-01, -1.4268e+00,
          4.3710e-01,  3.0997e+00, -5.1477e-01,  1.7654e+00,  8.8767e-01,
          2.3953e-01,  7.7042e-01,  1.1456e+00,  1.5764e-01, -1.4214e-02,
         -1.1759e-01, -2.0899e-01, -6.2465e-02, -8.4330e-02,  6.5774e-03,
         -6.0660e-02, -2.2251e+00,  1.1477e-01, -6.2282e-03,  1.6401e-01,
          6.7343e-02, -1.6775e-02,  9.4304e-02, -5.4154e-04, -2.4024e-01,
          5.2014e-02,  3.5509e-02,  5.5804e-02,  2.7305e-02,  7.8679e-01,
         -1.2438e-01, -5.0792e-01,  2.6844e-01,  4.2935e-01, -3.4888e-01,
          1.5167e-01,  1.5322e-01,  1.9274e+00, -1.2410e+00,  1.4716e+00,
         -5.2490e-01,  3.9641e-01,  8.4267e-02,  9.1064e-01,  1.0731e+00,
          6.7852e-03,  2.3926e-01,  5.9354e-01,  4.5206e-01, -7.6835e-01,
         -6.0595e-02,  5.2292e-01, -4.7085e-01,  2.4791e-01, -3.3975e-01,
         -1.4233e+00,  1.9264e-01, -4.7010e-02, -3.4288e-01,  6.7864e-01,
         -2.6063e-01, -1.5275e+00, -4.4857e-01, -1.2204e+00,  2.9760e-02,
         -1.8505e-01,  1.6216e-01]], device='cuda:0') tensor(3.9783, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
908000 特征值优化 tensor(2.6213, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6744e+00,  5.3185e-01,  2.7989e+00,  9.5269e-01, -1.0143e+00,
         -1.3167e-01,  2.9885e+00, -4.4832e-01,  1.8808e+00,  8.9620e-01,
          3.1824e-01,  5.8117e-01,  7.0356e-01,  1.1654e-01, -7.9731e-02,
          9.9911e-02, -5.5295e-01, -9.1021e-03, -2.2559e-01, -6.6654e-03,
         -8.4313e-02, -1.3199e+00, -1.0306e-02,  8.5328e-03,  2.6667e-01,
          1.8993e-01, -7.3808e-02,  5.6187e-02, -9.4430e-04, -2.3836e-01,
          2.2240e-02,  8.5722e-03, -1.3833e-02, -1.2077e-02,  3.8515e-01,
          2.1411e-02, -2.0028e-01,  1.0781e-01,  3.2348e-01, -1.7550e-01,
          1.0867e-01,  8.5066e-02,  1.1426e+00, -1.3403e+00,  1.3014e+00,
         -4.2744e-01,  3.4184e-01,  4.3250e-01,  9.9429e-01,  9.7339e-01,
          7.7981e-04,  2.3776e-01,  2.8335e-01,  2.1118e-01, -1.5844e-01,
         -2.8735e-01,  1.8657e-01, -8.4007e-02,  3.5386e-02, -1.3221e-02,
         -1.4396e+00,  4.5136e-01,  6.2148e-02, -1.0891e-01,  5.4110e-01,
         -7.7343e-02, -1.1324e+00, -5.1993e-02, -8.7650e-01,  1.2594e-01,
         -4.0906e-01,  2.8831e-01]], device='cuda:0') tensor(1.1435, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
909000 特征值优化 tensor(2.1361, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6938,  0.4900,  3.0455,  1.0502, -0.6404,  0.1695,  2.7914, -0.5319,
          1.5164,  0.9772, -0.0511,  0.2971,  0.5771,  0.1607, -0.0429,  0.0663,
         -0.7143, -0.1552, -0.0180, -0.0288, -0.1081, -1.0540, -0.0285,  0.0513,
          0.4897,  0.1846, -0.1021,  0.2441, -0.0267, -0.2675,  0.0256,  0.0076,
         -0.0205, -0.0214,  0.0860,  0.0210, -0.0597,  0.0253,  0.3106, -0.1000,
          0.1339,  0.0140,  0.5715, -1.2194,  1.4119, -0.5330,  0.3720, -0.0110,
          0.8298,  0.8102,  0.0319,  0.2553,  0.2816,  0.1863, -0.0315, -0.1749,
         -0.0621,  0.0540,  0.0162, -0.0164, -1.5142,  0.3394,  0.2071, -0.0738,
         -0.0519,  0.3629, -0.7932, -0.0995, -0.6397,  0.1165, -0.1975,  0.1747]],
       device='cuda:0') tensor(1.3043, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
910000 特征值优化 tensor(12.5081, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.9838e-01,  1.6342e+00, -7.3651e-01,  1.0038e+00,  1.0332e+00,
          5.2402e-01, -9.6317e-01,  1.4735e-01, -7.3129e-01, -8.9925e-01,
         -6.7818e-01,  2.1138e+00,  2.0784e-02, -5.6802e-02,  1.0144e+00,
         -1.9583e+00, -1.9348e-01,  1.6799e-01,  1.6135e+00,  2.4722e-01,
          6.3307e-01, -3.0043e-01, -3.2033e-01, -1.7172e-01,  4.3091e-01,
         -2.7636e-01, -9.2851e-01,  3.0593e-01, -2.4547e-01,  6.4411e-01,
          3.2968e-01,  3.1769e-01, -1.5254e-01,  5.5862e-01, -1.7208e-01,
         -1.2161e-01, -3.0989e-01,  6.1595e-01,  7.2396e-01,  1.0405e+00,
         -2.9141e-01, -1.1596e+00,  9.9093e-01,  2.0748e+00, -2.2586e-01,
         -1.7704e+00,  8.4403e-01,  1.4711e+00, -9.1549e-02,  3.1078e-01,
          1.1598e+00, -1.1137e+00, -1.0706e+00, -7.8724e-01, -2.1459e-02,
         -5.1323e-01, -4.7713e-01,  1.0561e+00, -7.4767e-01, -5.9017e-01,
         -1.0095e+00, -1.2344e-01,  1.3425e+00,  1.6005e-03,  6.8434e-01,
         -1.9898e+00,  1.0610e+00,  9.5536e-01, -7.1544e-01, -3.3869e-01,
          6.0039e-01, -1.0080e+00]], device='cuda:0') tensor(7.5493, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
911000 特征值优化 tensor(2.6385, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.0793e-01,  1.9539e+00, -2.2486e-01,  5.7400e-01,  6.4722e-01,
          1.8731e-01, -4.1601e-02, -6.2432e-01, -5.0609e-02, -1.4720e+00,
          1.9750e-01,  2.8750e+00,  1.1133e-01,  7.7416e-02,  1.7481e-01,
         -9.0471e-01,  3.5588e-01,  2.6495e-01,  6.2562e-01, -9.3051e-05,
          1.3072e-01, -1.2514e-02,  6.6579e-03,  4.4041e-02,  4.5175e-02,
         -3.2022e-01, -4.3102e-01, -3.7085e-03, -4.7777e-04,  1.3607e-01,
          1.4374e-01,  3.1790e-05,  2.1011e-03,  3.3179e-02, -3.0887e-02,
         -2.2636e-02, -1.3507e-01,  3.7305e-02,  1.0660e-01,  2.7004e-01,
         -1.2537e-02, -4.9602e-01, -8.3179e-02,  1.4408e+00, -7.2320e-01,
         -8.0531e-01,  3.5205e-01,  1.2495e+00, -5.9872e-01, -4.3762e-02,
          9.8109e-01, -6.5024e-01, -1.1175e+00,  1.4237e-01,  2.3312e-01,
         -1.1551e-01, -3.1920e-01,  2.2653e-01, -4.3186e-03, -1.6011e-03,
         -3.9667e-01,  1.4015e-02,  4.8347e-01, -8.6050e-02,  1.3922e+00,
         -1.2334e+00,  5.3309e-01, -1.2237e-02, -3.0586e-01,  6.3576e-02,
          1.3977e+00, -4.0273e-01]], device='cuda:0') tensor(1.8538, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
912000 特征值优化 tensor(2.1710, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6201,  1.6491, -0.1674,  0.5770,  0.5567,  0.2412,  0.2964, -0.5025,
         -0.1858, -1.4490,  0.4791,  2.9481, -0.0338,  0.0030,  0.0476, -0.4050,
          0.2095,  0.2141,  0.2549,  0.0207, -0.0117,  0.0223, -0.0880,  0.0450,
         -0.0212, -0.3370, -0.2943, -0.0639,  0.1453,  0.0465,  0.1704,  0.0055,
         -0.0224,  0.0265, -0.0566, -0.0648, -0.1183,  0.0270,  0.0244,  0.2192,
         -0.0173, -0.4470, -0.0307,  1.3088, -0.5339, -0.5748,  0.3469,  1.1042,
         -0.4717, -0.2882,  0.9450, -0.5372, -0.9914,  0.0898,  0.2549, -0.0547,
         -0.2359,  0.2005, -0.1914, -0.0312, -0.4945,  0.0816,  0.3593, -0.0559,
          1.2092, -1.1422,  0.4329, -0.1272, -0.3638,  0.0909,  1.3928, -0.3649]],
       device='cuda:0') tensor(1.4421, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
913000 特征值优化 tensor(2.1245, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.4737e-01,  1.4983e+00, -5.6005e-02,  5.0266e-01,  2.5449e-01,
          4.4769e-01,  3.5222e-01, -2.9395e-01, -3.5490e-01, -1.5235e+00,
          4.8513e-01,  3.0020e+00, -5.8141e-02, -8.5398e-02,  8.8418e-02,
         -2.7727e-01,  1.6974e-01,  1.8066e-01,  1.5452e-01,  3.9004e-02,
         -3.4471e-02,  2.4121e-03, -1.4266e-01,  5.4555e-02, -7.4624e-02,
         -2.1075e-01, -1.9878e-01, -4.2389e-02,  7.0128e-02,  2.9001e-02,
          1.7623e-01,  6.9661e-03,  1.9655e-02,  2.6843e-02, -8.0140e-02,
         -1.0870e-01, -1.1351e-01,  2.8652e-02,  2.5800e-02,  1.5969e-01,
         -1.6906e-02, -4.2645e-01, -6.3876e-03,  1.1710e+00, -4.5020e-01,
         -5.2944e-01,  3.0520e-01,  1.0505e+00, -3.8260e-01, -3.6240e-01,
          8.7747e-01, -5.2398e-01, -7.5114e-01,  9.1639e-02,  2.9571e-01,
         -4.9147e-02, -2.1465e-01,  1.8387e-01, -1.1997e-01,  7.4543e-02,
         -4.3445e-01,  1.0198e-01,  2.7447e-01, -6.1234e-02,  9.9805e-01,
         -9.7010e-01,  2.5847e-01, -1.4894e-01, -3.1434e-01,  1.0440e-01,
          1.3829e+00, -3.4918e-01]], device='cuda:0') tensor(1.2582, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
914000 特征值优化 tensor(3.9675, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.7688e-01,  1.5968e-01,  1.1484e+00,  1.5960e+00,  5.3626e-01,
          3.4916e-01,  1.8587e-01,  8.1392e-01,  1.4978e+00, -1.7539e+00,
          5.5543e-02,  2.4300e+00,  3.2511e-01, -6.1016e-01,  1.2474e-01,
          1.9300e-01,  5.0055e-01, -5.0177e-01,  2.0204e-01,  4.5850e-01,
          1.3034e-01, -4.7495e-02, -3.6374e-02, -2.1756e-02, -2.7674e-01,
          9.6341e-01, -1.1299e-01, -1.0997e+00, -1.0425e+00, -6.3629e-02,
         -2.8477e-01,  1.1227e-02,  6.6307e-03,  1.1138e-02,  2.1443e-03,
         -5.1105e-03, -1.6449e-01, -2.3427e-01,  2.2479e-01, -5.3860e-01,
         -3.1836e-01,  1.4201e+00,  5.8473e-01, -5.2466e-01, -3.9440e-01,
         -4.3185e-01,  9.0389e-01,  1.5125e-01, -9.0985e-01, -6.6124e-01,
         -1.1544e-01, -5.0576e-01,  7.3445e-01,  5.7034e-01, -1.9261e+00,
         -2.9954e-01, -2.5176e-01,  1.9264e-01,  3.1404e-03, -7.9297e-01,
         -6.8750e-02,  3.0008e-01, -2.2701e-02,  1.8884e-01, -4.9143e-01,
          2.8506e-01,  7.3389e-01, -1.2059e+00,  1.4535e-01,  7.2997e-02,
          8.9217e-01,  7.9352e-01]], device='cuda:0') tensor(2.7257, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
915000 特征值优化 tensor(2.2218, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.6116e-01,  2.2728e-01,  1.5292e+00,  1.2273e+00,  5.2583e-01,
          2.3633e-01,  4.4478e-01,  1.7390e-01,  1.7093e+00, -1.8946e+00,
         -1.9948e-02,  2.8025e+00,  1.6363e-01,  1.8084e-02,  1.0007e-01,
          3.2435e-03,  6.5718e-02, -6.0566e-02,  3.3446e-02,  3.4726e-01,
         -4.6534e-02, -1.0512e-01,  2.7630e-02,  8.8749e-03, -1.6176e-01,
          4.2635e-01,  3.4098e-02, -4.3060e-01, -7.1077e-01, -8.4269e-02,
         -2.6643e-01, -1.3408e-02,  2.4888e-02, -2.2755e-02,  3.4508e-02,
          6.4271e-03,  1.8649e-03,  2.2319e-02,  2.6782e-01, -5.8442e-01,
         -1.2517e-01,  1.2800e+00,  2.1796e-01, -3.0567e-01, -3.0244e-01,
         -3.1429e-01,  4.9429e-01,  4.7313e-01, -8.1501e-01, -4.6048e-01,
         -1.2251e-01, -3.5529e-01,  5.0204e-01,  5.8854e-01, -1.0905e+00,
         -1.2194e-02, -2.3261e-01,  1.5113e-01,  7.7540e-02, -1.7389e-01,
         -1.2806e-01,  1.7850e-01, -2.9063e-02,  6.3424e-02, -4.1117e-01,
          4.4407e-01,  4.1066e-01, -8.3013e-01, -1.1860e-01, -4.0333e-02,
          8.8026e-01,  5.7637e-01]], device='cuda:0') tensor(1.1859, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
916000 特征值优化 tensor(11.3680, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4211, -0.3234,  0.3443, -1.6796, -0.3550,  0.4154, -0.3014,  0.2904,
          1.0788, -0.3385,  0.0112,  0.1458, -0.0874,  0.6006,  0.0390,  0.0334,
          1.0771, -0.9617, -0.4683, -0.8114, -0.4481,  0.4437, -0.2226,  0.4770,
          0.1532,  0.4460, -0.2723,  0.3000, -0.2407, -1.0057, -1.1652, -0.9244,
         -0.6491, -0.7930, -0.1609,  0.8846,  0.1899, -0.5991,  0.4356,  0.0450,
          0.2863, -0.2925,  0.2688,  0.3012,  1.1260,  0.4091, -0.7877,  0.5477,
          1.2607, -0.8649,  0.4570,  0.2968,  1.3839,  0.4179, -0.6508,  0.6789,
          0.9810,  1.2814, -2.9540,  1.2197,  0.5658, -0.6172, -1.0528,  0.9161,
          0.5273,  1.2123, -2.0735, -0.6798, -0.2351, -0.0943, -0.3282,  1.5099]],
       device='cuda:0') tensor(6.1133, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
917000 特征值优化 tensor(2.3391, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7716e-01, -5.4047e-01,  1.2048e+00, -1.5825e+00,  3.2515e-01,
          1.1660e+00,  2.0834e-01,  3.8119e-01,  1.8186e+00, -1.1323e+00,
          2.8465e-01,  1.0157e+00,  5.3916e-02,  1.0101e-01, -6.6989e-02,
          2.3993e-01,  3.3106e-01, -1.8291e-01,  1.2698e-01, -5.5736e-03,
         -7.5141e-02,  5.0067e-01,  4.4635e-02, -1.2679e-02,  1.1876e-01,
          1.0192e-01, -5.0704e-02,  1.5132e-03, -9.5371e-02, -5.2161e-01,
         -4.0891e-01, -5.0173e-01, -2.6710e-01, -6.7769e-01,  2.8506e-01,
          1.9514e-01,  4.2373e-02, -7.4558e-02,  6.1495e-01, -4.4424e-01,
          1.6838e-02,  3.3155e-01, -4.1518e-01,  1.9360e-01,  3.7706e-01,
          2.6189e-01, -1.6763e-01,  4.3208e-02,  1.2460e+00, -7.3054e-01,
         -8.2669e-02, -1.6964e-01,  6.1694e-01, -1.5074e-01, -4.1435e-01,
          2.8195e-01,  9.5297e-01,  5.2862e-01, -1.9161e+00,  9.0256e-01,
          6.0833e-01, -8.9993e-01, -9.3137e-01,  5.8806e-01,  9.7243e-01,
          3.2365e-01, -1.1875e+00, -1.1147e-01, -4.0476e-02, -1.5199e-01,
          3.8031e-01,  5.4287e-01]], device='cuda:0') tensor(0.8897, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
918000 特征值优化 tensor(14.0186, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4171,  0.9287,  1.4558, -0.7098,  1.1001,  1.5907,  0.6160, -1.5414,
         -0.6535,  0.0172,  2.0771,  0.5396, -0.1445,  0.3789, -0.9343, -0.8654,
          0.1266,  0.4137,  0.3768,  0.0616,  1.9049, -0.4161,  0.4698,  0.0269,
          0.1812,  0.5076, -1.9886, -0.5922,  0.5136,  0.4458, -2.3203,  1.0060,
         -0.0130,  0.9897,  0.6059,  0.2101, -0.0947,  1.5017, -0.9141,  0.3507,
          1.0234,  0.0975,  0.4510,  0.7641,  0.1552,  0.6286, -0.6212, -0.0299,
          0.5079,  1.2649,  0.4771, -0.4016, -0.2566,  0.6992, -0.9765,  0.5288,
          1.5260,  1.1470, -0.0906, -0.3930,  0.9355,  0.2368,  0.3038,  0.7726,
          0.3625,  0.0156, -0.5637, -0.2326, -1.2022,  0.0198, -1.3603,  1.2599]],
       device='cuda:0') tensor(6.8575, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
919000 特征值优化 tensor(2.8965, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3652,  0.5032,  1.2887, -0.9150,  2.0737,  1.3842,  1.2949, -0.5480,
         -0.4223,  0.2821,  2.6584,  1.4785,  0.2232, -0.0733, -0.1200, -0.1925,
         -0.0308, -0.1943,  0.1392, -0.1359,  0.8677, -0.2500,  0.0430, -0.0331,
          0.0423,  0.0869, -0.9657,  0.1881,  0.0341,  0.2175, -1.3700,  0.2707,
          0.0586,  0.4645,  0.1388,  0.0085,  0.6293,  0.6893, -0.0547,  0.0041,
          0.6471,  0.0186,  0.4575,  0.6564, -0.0772,  0.5640, -0.1308, -0.5145,
          0.1645,  0.6117,  0.0969, -0.3241,  0.5860,  1.1402, -0.5181, -0.2327,
          0.3904,  0.3506,  0.0884, -0.3294,  1.2318, -0.2983,  0.9923,  0.4986,
          0.3616, -0.1616, -0.2260,  0.0368, -0.7792,  0.6074, -1.2286,  0.3337]],
       device='cuda:0') tensor(1.3163, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
920000 特征值优化 tensor(2.1372, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4411e+00,  1.0345e+00,  1.0170e+00, -7.9927e-01,  2.2985e+00,
          5.0581e-01,  1.1920e+00, -2.1565e-01,  2.1981e-01,  1.9513e-01,
          2.6309e+00,  1.7923e+00,  4.2328e-01, -1.3815e-01, -8.5398e-02,
         -2.1783e-01,  1.6656e-01, -7.8063e-02,  2.6446e-01,  3.6163e-02,
          4.6868e-01, -1.4347e-01,  2.1300e-02,  1.9417e-03,  6.8318e-02,
          4.8620e-02, -4.9523e-01,  4.2812e-01,  2.7033e-03,  1.2461e-01,
         -1.1663e+00,  1.1528e-01,  7.6754e-03,  4.4810e-02,  6.0525e-02,
          1.3205e-02,  5.0427e-01,  5.8652e-01, -1.6601e-02,  1.7088e-04,
          6.3864e-01,  2.5762e-02,  1.9709e-01,  2.6899e-01,  1.5909e-01,
          5.5117e-01, -1.0573e-03, -4.7142e-01,  2.3534e-01,  4.0011e-01,
          2.6159e-01, -1.7788e-01,  6.6197e-01,  9.4540e-01, -7.3525e-01,
         -5.7189e-01, -8.6248e-02,  1.3895e-01,  1.5845e-02, -6.7750e-01,
          1.0215e+00, -4.5702e-02,  1.0005e+00,  2.7172e-01,  8.3021e-03,
          1.8970e-02, -1.2143e-01,  3.9277e-02, -8.9285e-01,  5.8695e-01,
         -9.8391e-01,  2.4251e-01]], device='cuda:0') tensor(1.1244, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
921000 特征值优化 tensor(13.3753, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.0649,  1.6620,  1.5621, -0.9492,  0.8524, -1.8035,  0.5359, -2.2417,
         -0.3593, -1.2997,  1.4125,  0.1452, -0.9681, -0.1933, -0.0201,  0.6891,
          1.2138,  1.6659, -1.8803,  0.9608, -0.6892, -0.5662, -1.0853,  0.6092,
         -0.0178, -0.2950, -0.6684,  1.2983, -0.0057,  0.5290,  0.1342, -0.3431,
         -0.0669,  0.3277, -1.0601,  0.0759,  0.1191,  0.1185, -0.0231, -0.9212,
         -0.2831, -0.2163, -0.2983, -0.1693,  1.1326,  0.1672,  0.1355, -0.6606,
          1.1184,  0.3739, -0.5677,  1.9368, -0.9405,  0.1936,  0.0301, -0.0409,
          1.0900, -0.9867,  0.4357,  0.3840,  2.2783, -0.7990, -1.3527,  0.1966,
          0.1154,  1.7538,  0.3987,  0.8794, -0.8747,  2.0414,  2.4361, -1.2440]],
       device='cuda:0') tensor(7.4852, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
922000 特征值优化 tensor(2.9000, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7255,  0.7704,  2.2915, -0.6850,  0.8240, -1.1131,  1.0068, -2.0685,
          0.5098, -0.6467,  2.3976,  0.2939, -0.2851, -0.0700, -0.0788,  0.1570,
          0.4045,  0.6648, -0.8370,  0.1203, -0.2625,  0.0854, -0.1259,  0.0514,
         -0.2920, -0.3730, -0.3997,  0.4480,  0.0058,  0.2385,  0.0209, -0.1671,
         -0.0112,  0.1843, -0.2119, -0.4826,  0.0128, -0.0424,  0.4029, -0.2577,
          0.0289,  0.2241, -0.2152, -0.1948,  0.8192, -0.0905,  0.2698,  0.1849,
         -0.0263, -0.8582, -0.9465,  1.1997, -0.6565,  0.1985,  0.0954,  0.0866,
          0.8330, -0.5999,  0.0959,  0.0914,  2.6258, -0.9667, -0.5385, -0.2353,
          0.1675,  0.7891, -0.4140,  0.1392, -0.1072,  0.9997,  1.1118, -0.7086]],
       device='cuda:0') tensor(1.3810, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
923000 正交保障 tensor(1.2673, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.4936e-01,  3.1667e-01,  2.0891e+00, -1.1966e+00,  5.5321e-01,
         -7.0599e-01,  1.5692e+00, -2.0824e+00,  6.3463e-01, -5.4044e-01,
          2.5817e+00,  8.6080e-02, -2.1466e-01,  3.9107e-02, -1.4864e-01,
          2.7534e-01,  2.3099e-01,  3.0930e-01, -4.3095e-01,  4.7371e-02,
         -1.9263e-01, -1.4521e-02,  3.1542e-02, -4.6954e-02, -3.0022e-01,
         -4.0332e-01, -3.5075e-01,  3.8129e-01,  1.4770e-02,  1.3848e-01,
          2.5067e-02, -6.5237e-02,  1.0064e-03,  2.1125e-01, -1.4587e-01,
         -1.7302e-01,  2.6160e-03, -2.0808e-02,  4.1216e-01, -2.4959e-01,
          6.2812e-03,  2.0179e-01, -3.7573e-01, -1.5049e-02,  6.0006e-01,
          5.7828e-03,  1.2828e-01,  3.8664e-01, -2.1875e-01, -1.0349e+00,
         -8.5233e-01,  1.0299e+00, -3.0711e-01,  1.9580e-01,  1.0454e-01,
          5.4637e-02, -4.9908e-02, -1.9382e-01, -2.2337e-01,  5.1864e-02,
          1.9992e+00, -6.6867e-01, -6.2677e-01, -7.6460e-02,  4.0873e-01,
          5.5105e-01, -2.9443e-01, -3.8423e-02, -1.8001e-01,  7.7796e-01,
          4.8380e-01, -2.4762e-01]], device='cuda:0') tensor(1.2673, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
924000 特征值优化 tensor(2.0812, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.9130e-01,  1.8896e-01,  2.0460e+00, -1.3096e+00,  5.6772e-01,
         -5.0253e-01,  1.8928e+00, -1.9913e+00,  5.5532e-01, -5.5733e-01,
          2.6231e+00,  3.5484e-01, -1.9746e-01, -3.7888e-02,  1.1853e-03,
          2.5470e-01,  1.7974e-01,  2.0594e-01, -3.5961e-01,  5.8352e-02,
         -1.7245e-01, -5.2624e-02,  2.3132e-02, -6.0372e-02, -3.2935e-01,
         -3.8858e-01, -3.0227e-01,  2.5209e-01, -6.9716e-02,  1.0112e-01,
          2.6647e-02, -6.8848e-03,  1.8168e-03,  2.0229e-01, -5.9724e-02,
         -6.4134e-02, -6.1255e-02,  9.0006e-02,  4.8212e-01, -2.4222e-01,
         -1.7526e-01,  1.1290e-01, -2.6860e-01,  1.5237e-01,  2.3968e-01,
          1.8212e-02,  6.1515e-02,  5.7078e-01, -4.2389e-01, -1.0788e+00,
         -7.8254e-01,  9.3661e-01, -2.3032e-01,  1.9227e-01,  6.1990e-02,
         -7.3295e-02, -2.9669e-01, -4.9962e-02, -4.5053e-01,  1.9961e-01,
          1.6771e+00, -4.8910e-01, -7.0439e-01, -6.8735e-02,  3.2976e-01,
          5.3967e-01, -1.3694e-01,  3.7921e-03, -1.2470e-01,  6.8673e-01,
          3.1504e-01, -1.2589e-01]], device='cuda:0') tensor(1.0864, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
925000 特征值优化 tensor(4.6066, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.0989, -0.8751,  1.3232, -0.3870,  0.7244,  1.8312, -1.0276, -0.2929,
          0.6505, -1.6872,  1.3846, -0.4894,  0.0824, -0.4769,  0.4772,  0.0528,
          0.0045, -0.2855,  0.3305, -0.5623, -0.1013,  0.6758, -1.1710, -0.1483,
          0.5471, -0.0342, -0.1745, -0.5357, -0.0708, -0.6044, -0.3438,  0.3750,
          0.0064, -0.1091, -0.8583, -0.0589, -0.7000,  0.1027, -0.3557,  0.5028,
         -0.0748, -0.2201,  1.4325, -1.2131, -0.2968,  0.6818, -0.3976, -0.3354,
         -0.2960,  0.0731,  0.0631, -1.1762,  0.0501,  0.9057,  0.1569, -0.5545,
         -0.8279, -0.0168, -1.0456,  0.2709,  0.5717,  0.3442, -0.0040, -0.1105,
          1.7758, -0.0513,  0.3930, -0.2875, -1.4031,  0.4928,  0.4962,  0.2837]],
       device='cuda:0') tensor(3.2211, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
926000 特征值优化 tensor(2.2444, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2007, -0.1205,  1.6040, -0.8871,  0.6818,  2.2211, -0.7195, -0.1480,
          1.0846, -1.1600,  1.2793, -0.1315,  0.0057, -0.0310, -0.0607,  0.0613,
         -0.0308, -0.1384,  0.1600, -0.0466, -0.0210,  0.5288, -0.7010, -0.1316,
          0.1089, -0.1789, -0.0200, -0.2111, -0.2549, -0.4610, -0.0286,  0.0285,
          0.0248, -0.0182, -0.5090, -0.0465, -0.3700,  0.0809, -0.2794,  0.1820,
         -0.0432, -0.1023,  0.5532, -0.4530,  0.0096,  0.6872, -0.3694, -0.2063,
         -0.0488, -0.0479,  0.1457, -0.7730, -0.5526,  0.3856,  0.1783, -0.2002,
         -0.7667, -0.1182, -0.4200,  0.0733,  0.5342,  0.2137,  0.1065, -0.0602,
          1.7162, -0.3758,  0.2220, -0.1044, -0.8883,  0.2027,  0.1055,  0.2511]],
       device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
927000 特征值优化 tensor(15.7746, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1939, -1.9910, -0.0778,  0.7883, -0.8165,  1.8064,  0.7051,  0.8596,
         -0.6036, -1.4726, -1.4601, -0.0602, -0.1178,  1.2950, -0.4864,  0.4972,
          0.2953,  1.1819,  1.2276,  1.3460, -0.7304, -0.9683,  1.2036, -1.0433,
         -0.6674, -0.5204,  0.0544, -1.1858,  1.3404, -0.1600,  0.1096,  0.5226,
         -0.2538,  0.2809, -0.0683, -0.0401,  0.1543, -0.1218, -0.3600, -0.3854,
         -2.2756, -0.6723, -1.2304, -1.2126,  0.2895,  0.3989,  0.6087, -1.6213,
         -0.0339, -0.8149,  0.0531,  1.0421,  0.2252, -2.4291, -0.3428, -0.0688,
         -0.3759,  1.1736, -1.1769,  0.4262,  0.1275, -2.1398, -0.0547, -0.4768,
          1.6314,  0.1266, -0.5411,  0.0276,  0.7574,  0.1540, -0.8268, -0.0405]],
       device='cuda:0') tensor(8.8155, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
928000 特征值优化 tensor(4.0905, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5975, -1.2486,  0.7690,  0.2260,  0.2257,  2.0500,  1.6492,  0.2639,
         -0.7059, -0.7585, -0.3730,  0.3878,  0.1533,  0.3415, -0.0688,  0.1277,
         -0.0642,  0.1956,  0.2422,  0.3642, -0.1714, -0.2193,  0.3220, -0.2566,
         -0.1688, -0.2250,  0.2336, -0.3766,  0.4654,  0.1366,  0.2172,  1.0706,
         -0.0879,  0.4869,  0.0058,  0.0050, -0.0060, -0.0436, -0.0344,  0.0179,
         -1.3217, -0.1154, -0.4877, -0.5983,  0.3426,  0.6356,  0.0416, -0.6775,
         -0.0920, -0.6187,  0.0354,  0.3180,  1.2727, -1.4244, -0.6447, -0.1209,
         -0.3493,  0.7956, -0.3726,  0.2067,  1.0783, -1.2009,  0.2473, -0.1198,
          0.5458,  0.2088,  0.1465,  0.0438,  1.2433,  0.5094, -0.1636,  0.3473]],
       device='cuda:0') tensor(2.6037, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
929000 特征值优化 tensor(2.1506, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.4066e-01, -6.6497e-01,  7.4550e-01, -4.8748e-01,  2.0388e-01,
          1.6896e+00,  1.8487e+00,  2.6602e-01, -5.6385e-01, -4.0597e-01,
          2.7980e-01,  1.4747e-02,  1.1080e-01,  1.9976e-02,  3.3524e-02,
         -3.7714e-02,  2.3420e-02,  1.8734e-03, -1.5021e-03,  9.6800e-02,
         -1.3000e-01, -7.2483e-02,  2.6282e-01, -2.5586e-01,  9.2589e-02,
         -4.7755e-02,  2.0342e-02, -1.1056e-02,  1.5004e-01,  4.9252e-02,
          1.3417e-01,  1.0759e+00, -1.1165e-01,  2.8726e-01, -2.1545e-02,
         -1.5775e-02, -7.1756e-03, -2.4108e-02,  3.2316e-02, -1.5520e-02,
         -7.1883e-01,  1.9087e-02, -6.3118e-01, -4.3152e-01,  4.6746e-01,
          7.1267e-01, -2.5601e-02, -3.8920e-01, -4.3889e-02, -4.3780e-02,
          2.5793e-01,  9.9142e-02,  1.5572e+00, -1.0897e+00, -1.0575e+00,
         -2.3709e-01, -4.7888e-01,  6.4469e-01,  2.4154e-02, -4.7923e-02,
          1.1970e+00, -9.9777e-01,  2.5469e-01, -1.6175e-01,  2.8077e-01,
          1.3981e-01,  2.1178e-01,  3.5245e-02,  6.8865e-01,  4.5018e-01,
         -3.2115e-02,  1.7658e-01]], device='cuda:0') tensor(1.0128, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
930000 特征值优化 tensor(2.0801, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.0446e-01, -4.7912e-01,  7.3890e-01, -5.7426e-01,  5.5100e-02,
          1.4895e+00,  1.9548e+00,  4.1302e-01, -2.4949e-01, -3.5765e-01,
          3.5843e-01,  1.4038e-01,  1.1821e-01,  1.4616e-02,  6.1115e-02,
         -6.2197e-02,  3.5195e-02, -1.5358e-02,  2.4057e-02,  2.8479e-02,
         -1.3461e-01, -2.8527e-02,  2.9329e-01, -3.2165e-01,  6.6919e-02,
          3.4609e-02,  7.3550e-02,  1.9801e-04,  9.5026e-02,  5.2386e-03,
          8.3832e-02,  9.7070e-01, -1.1435e-01,  1.5898e-01,  9.9480e-03,
          1.1281e-02, -3.1646e-02, -4.2115e-02,  2.4321e-02,  2.2114e-03,
         -6.4111e-01,  2.7288e-02, -6.2457e-01, -3.3567e-01,  3.7266e-01,
          6.7743e-01, -4.7445e-02, -3.5052e-01,  2.5539e-02,  4.6777e-02,
          2.8292e-01,  1.5072e-02,  1.5990e+00, -9.4665e-01, -1.0340e+00,
         -6.7164e-02, -4.4069e-01,  5.7524e-01, -1.0675e-01, -4.2531e-02,
          1.0526e+00, -9.9225e-01,  2.1542e-03, -1.8704e-01,  9.9051e-02,
          1.7952e-01,  1.4767e-01,  1.7762e-02,  4.7623e-01,  4.7277e-01,
         -1.1760e-01,  1.8320e-01]], device='cuda:0') tensor(0.9977, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
931000 特征值优化 tensor(5.9287, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2358, -0.6375,  0.8304, -0.3067,  0.5202, -0.9761, -0.2902,  0.5326,
          1.1044, -0.7874,  0.8366,  0.9407,  0.2218, -0.7055,  0.0562,  0.1734,
          0.0619, -0.2217,  0.1379, -0.5595,  0.1246,  0.4907,  0.0809,  0.1288,
          0.1435, -0.2763, -0.1543, -0.1097, -0.3655, -0.2910, -1.4126, -0.0726,
          0.2914, -0.0191, -0.1629, -0.0219,  1.2650,  0.1734, -0.5696,  0.1082,
          0.0587,  0.9030, -0.8915,  1.5662, -0.9861,  0.1311, -0.1126,  0.3705,
         -0.1348,  0.6488, -0.7387, -0.1153,  2.3403, -0.3106,  0.2788,  0.1640,
         -0.2790,  0.1896, -0.3630, -0.4665,  0.6586,  0.9048,  0.0626,  0.1595,
         -0.4517,  0.7654,  1.5841, -0.4390,  0.0785, -0.4835,  2.0587,  0.2284]],
       device='cuda:0') tensor(2.8524, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
932000 特征值优化 tensor(2.3001, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4113, -0.4817,  0.8683, -0.6014,  1.3325, -0.5326,  0.2456,  0.5926,
          1.2641, -0.4752,  0.3790,  1.3115, -0.0212, -0.0354, -0.0041,  0.0913,
          0.0432, -0.0758,  0.0840, -0.0789,  0.0214,  0.2501, -0.0370, -0.0270,
          0.2563,  0.0922,  0.0323,  0.0103, -0.0520, -0.2239, -0.8233, -0.4360,
          0.1253, -0.1446,  0.0327,  0.0293,  0.7131,  0.1649, -0.2881, -0.0764,
          0.0245,  0.5586, -0.4748,  0.9670, -0.6275,  0.2556, -0.0401,  0.1563,
          0.2609,  0.2414, -0.4017, -0.0758,  2.1810, -0.3764,  0.2846,  0.1500,
         -0.1742, -0.0088,  0.0667, -0.0297,  0.3813,  0.3451,  0.0244,  0.0849,
         -0.2826,  0.3773,  1.1569, -0.2969, -0.1186,  0.0596,  1.8248, -0.0123]],
       device='cuda:0') tensor(0.9753, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
933000 特征值优化 tensor(2.1240, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9470e-01, -4.5527e-01,  8.1801e-01, -5.4877e-01,  1.5501e+00,
         -3.9165e-01,  3.1261e-01,  5.0084e-01,  1.1826e+00, -2.3136e-01,
          2.7080e-01,  1.2350e+00,  1.3353e-02,  8.2566e-02, -1.3733e-01,
          1.6080e-01,  1.9234e-01, -8.1544e-02,  1.0688e-01, -4.6674e-02,
          3.7650e-02,  1.4945e-01,  2.0204e-02,  1.9153e-03,  3.4255e-01,
          2.9941e-01, -5.0194e-02,  3.4318e-02, -5.9879e-02, -1.2323e-01,
         -6.8508e-01, -5.2950e-01,  1.4913e-01, -1.3553e-01,  5.0303e-04,
          2.2132e-02,  5.7343e-01,  1.2254e-01, -2.6345e-01, -1.7455e-02,
          9.2020e-03,  5.1303e-01, -5.0015e-01,  6.4912e-01, -3.0906e-01,
          1.3264e-01, -8.4797e-03, -1.3804e-01,  2.4663e-01,  2.4606e-01,
         -5.5171e-02, -7.4485e-02,  1.9313e+00, -5.4619e-01,  5.2532e-01,
          1.8106e-01, -1.2379e-01, -2.7966e-02,  8.1104e-03,  1.6972e-02,
          2.0652e-01,  1.6200e-01, -2.8689e-02,  4.2273e-02, -2.1114e-01,
          3.5654e-01,  1.0047e+00, -1.9621e-01, -6.9824e-02,  5.6743e-02,
          1.7128e+00,  8.5615e-03]], device='cuda:0') tensor(1.3857, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
934000 特征值优化 tensor(2.0733, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1733, -0.5008,  0.8180, -0.3723,  1.6161, -0.2732,  0.3279,  0.4858,
          1.3078, -0.2534,  0.3540,  1.2087,  0.0792,  0.0811, -0.1449,  0.1220,
          0.2182, -0.0791,  0.0680, -0.0169,  0.1098,  0.0769,  0.0215,  0.0380,
          0.2380,  0.1822,  0.0256, -0.0503, -0.0743, -0.0508, -0.6347, -0.5392,
          0.1783, -0.1419,  0.0266,  0.0786,  0.4931,  0.0490, -0.3116,  0.0530,
         -0.0155,  0.5140, -0.4864,  0.4473, -0.2005,  0.0042, -0.0547, -0.1629,
          0.1642,  0.1536,  0.0095, -0.0033,  1.8392, -0.5624,  0.5838,  0.1312,
         -0.0526, -0.0746, -0.0903,  0.0629,  0.2488,  0.0851, -0.0921, -0.0060,
         -0.1018,  0.4428,  0.8740, -0.1468, -0.0637,  0.0385,  1.6665,  0.0142]],
       device='cuda:0') tensor(1.0764, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
935000 特征值优化 tensor(7.5699, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.2309e+00,  2.1849e+00,  2.2316e-01, -5.4308e-01, -9.7285e-02,
          4.3084e-02,  1.5357e+00, -8.4575e-01, -4.0762e-01,  8.6396e-01,
          5.3044e-01,  5.7829e-01, -1.4121e-01, -4.9983e-04,  1.4342e-02,
          5.9681e-02, -3.6480e-02, -5.3105e-02, -9.4963e-02, -3.9007e-01,
         -1.1770e-01,  1.6380e-02, -8.0652e-02, -2.0962e-01, -8.5947e-01,
          3.3119e-01, -1.8830e-01, -1.8773e-01, -3.0686e-01, -6.9892e-01,
         -6.8300e-03,  1.6997e+00,  4.9711e-01, -3.5515e-02, -1.6171e-01,
         -1.5503e-01, -5.1378e-01, -1.3493e+00,  2.4454e-01, -1.4661e-01,
         -1.5796e-01, -2.1664e-01,  1.3700e+00,  5.0484e-01,  9.9356e-02,
          1.0928e+00,  4.1146e-01,  1.6246e+00, -2.3504e-01, -1.7570e+00,
          7.5759e-01, -1.9637e+00,  1.6825e+00, -1.3016e+00, -1.1356e+00,
          5.4491e-03, -1.2189e+00,  8.9119e-01, -7.5621e-01,  5.1913e-02,
          2.7715e-01, -2.2841e-01, -7.2675e-01,  4.6339e-01, -7.0440e-01,
         -5.0303e-01, -1.5794e-01,  1.3669e-01, -3.9842e-02,  1.8475e-01,
         -2.0179e-01,  2.9816e-01]], device='cuda:0') tensor(3.9707, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
936000 特征值优化 tensor(2.3755, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4262,  2.4737,  0.7527,  0.1002,  0.4296,  0.2498,  2.1420, -0.5293,
         -0.6546,  0.2583,  1.0084,  0.0184, -0.1316, -0.0807, -0.1829, -0.0233,
         -0.0183, -0.2091, -0.2336, -0.0945, -0.1126,  0.1282, -0.0272,  0.0393,
         -0.2874,  0.1130, -0.0839,  0.0300, -0.5204, -0.2640, -0.0042,  1.0918,
          0.2911,  0.0220, -0.0348, -0.0067,  0.0913, -0.6990,  0.1951, -0.0332,
          0.3219, -0.0215,  1.0452,  0.3118, -0.0586,  1.0417,  0.0937,  1.8490,
         -0.0565, -1.5311,  1.3840, -1.3439,  2.1865, -1.2906, -1.1440,  0.4248,
         -0.4374,  0.2876, -0.2638, -0.0037,  0.8938, -0.2206, -0.4075,  0.0407,
         -0.3739, -0.0543, -0.1148,  0.0749, -0.0165,  0.4151, -0.2192,  0.1260]],
       device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
937000 特征值优化 tensor(2.1777, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5717,  2.3548,  0.6928,  0.3661,  0.4536,  0.3185,  2.2125, -0.8083,
         -0.5916,  0.0723,  0.8671,  0.1278, -0.1243, -0.0449, -0.1222, -0.0778,
          0.1901, -0.2908, -0.2763, -0.1391, -0.1065,  0.0049, -0.0813,  0.0988,
         -0.1653,  0.0279,  0.0042,  0.0600, -0.4891, -0.1510, -0.0160,  1.0186,
          0.3479,  0.0250, -0.0323, -0.0210,  0.2350, -0.5352,  0.2048, -0.0213,
          0.3373, -0.0234,  0.9678,  0.1747, -0.0325,  1.0362,  0.0247,  1.8388,
         -0.0450, -1.6190,  1.3726, -1.2757,  1.9071, -1.0353, -1.5432,  0.6568,
         -0.2335,  0.2060, -0.2698, -0.0083,  0.8831, -0.4748, -0.4757,  0.0215,
         -0.4684,  0.0116,  0.0321,  0.0091, -0.2319,  0.2921, -0.2028,  0.1339]],
       device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
938000 特征值优化 tensor(2.1128, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.6436e+00,  2.3305e+00,  5.9423e-01,  7.8077e-01,  4.8927e-01,
          3.8225e-01,  2.2517e+00, -1.0110e+00, -4.4444e-01, -3.1111e-02,
          7.5609e-01,  2.7907e-01, -1.1791e-01, -6.8716e-02, -5.0123e-02,
         -6.1180e-02,  8.4946e-02, -2.0107e-01, -2.5329e-01, -1.8277e-01,
         -1.0091e-01, -3.0265e-02,  1.4160e-02, -6.1788e-03, -2.2418e-01,
         -8.9312e-03,  1.8315e-02,  4.3813e-02, -4.3231e-01, -1.2427e-01,
         -1.8350e-02,  9.7166e-01,  3.8236e-01,  2.3540e-02, -1.2900e-02,
          1.0058e-03,  2.5437e-01, -3.9816e-01,  1.9314e-01, -2.5548e-02,
          2.0295e-01, -2.5105e-02,  9.4579e-01,  1.0945e-01, -3.4712e-02,
          1.0025e+00, -1.0745e-02,  1.8859e+00, -2.9282e-01, -1.6214e+00,
          1.3441e+00, -1.1858e+00,  1.6359e+00, -8.4761e-01, -1.5133e+00,
          8.2723e-01, -1.7224e-01,  1.9251e-01, -2.1101e-01,  3.1605e-02,
          8.7094e-01, -7.9800e-01, -2.8015e-01,  8.9796e-02, -4.6867e-01,
          3.3015e-02,  5.5539e-02,  1.9963e-02, -1.8227e-01,  1.0604e-01,
         -2.3161e-01,  1.5076e-01]], device='cuda:0') tensor(1.1398, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
939000 特征值优化 tensor(7.4920, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.5114, -0.7735,  1.3068, -0.0806, -1.1698,  0.6676,  0.2587, -0.0167,
          1.2503, -1.8824,  0.4579,  0.3601, -0.2716, -0.0568, -0.1954, -0.0096,
          0.0038, -0.0057,  0.0151, -0.3698,  0.2540, -0.2083,  0.5113,  0.4273,
          0.2739, -0.0386, -0.1667,  0.8616,  0.1311, -0.4561,  0.5084, -0.4266,
         -0.1496,  0.0067, -0.4350, -0.8040,  0.2122,  0.4017, -1.2426,  1.5686,
          0.7528, -0.9492,  1.2114,  0.8122, -0.7911, -0.1267, -0.4226, -1.6021,
         -1.0422,  0.8521,  0.5530,  0.1017,  0.3601,  1.2293, -0.7726, -0.2607,
          0.5537, -0.6630, -1.1040,  0.6880,  1.1115, -0.4781, -0.0103,  1.0012,
          0.4039,  0.4588, -1.1797, -0.4049,  0.6449,  0.6925,  2.0395, -0.2873]],
       device='cuda:0') tensor(4.4639, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
940000 特征值优化 tensor(2.2882, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-1.8736e-01, -1.8692e-01,  1.2778e+00, -4.1344e-01, -5.4775e-01,
          4.2883e-01,  3.1850e-01,  7.7528e-01,  2.0503e+00, -2.5005e+00,
          6.5237e-01,  1.1754e+00, -4.8417e-02,  4.1973e-02,  1.9228e-02,
          3.9729e-02,  4.1584e-02,  8.1530e-03, -1.4865e-03, -4.4114e-02,
          3.1073e-02,  3.9210e-02,  1.2807e-01,  2.4940e-01, -8.7043e-02,
         -2.3694e-02, -4.4104e-02,  2.0654e-01,  2.0333e-02, -1.3885e-01,
          2.1426e-01, -7.0675e-02,  1.4311e-02, -2.5238e-02, -2.7492e-01,
         -4.5779e-01,  2.1200e-01,  3.1354e-01, -7.6044e-01,  8.7181e-01,
          4.0586e-01, -4.8751e-01,  2.4022e-01,  3.5988e-01, -2.8452e-01,
          8.0886e-02, -1.5296e-01, -1.3593e+00, -3.1198e-01,  4.7046e-01,
          3.5507e-01,  7.5647e-02,  2.0928e-01,  4.8274e-01, -2.5319e-02,
         -1.8310e-01, -9.5181e-02, -1.1928e-01, -7.2786e-01,  6.9315e-01,
          1.1785e+00, -2.8928e-01, -2.2648e-01,  5.6464e-01,  5.0804e-01,
          4.8471e-01, -1.1676e+00, -1.0626e-01,  3.3933e-01,  5.0648e-01,
          1.9642e+00, -5.0857e-01]], device='cuda:0') tensor(0.8718, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
941000 特征值优化 tensor(2.1020, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3195e-02, -1.6495e-01,  1.0071e+00, -6.6678e-01, -5.8223e-01,
          4.9721e-01,  4.3173e-01,  6.2564e-01,  2.1611e+00, -2.5239e+00,
          6.7067e-01,  1.3484e+00, -1.3322e-02, -8.3733e-02, -1.6414e-02,
         -1.7583e-02,  1.8675e-02, -4.7155e-02,  3.2868e-04, -3.5929e-03,
         -6.7958e-03,  4.5639e-02,  4.3283e-03,  2.3151e-01, -3.5613e-01,
         -2.3916e-01, -3.8043e-02,  2.1564e-01,  2.6856e-02, -1.4917e-01,
          5.9276e-02, -3.8876e-02, -3.4212e-02, -1.8011e-02, -2.6369e-01,
         -4.1092e-01,  2.4408e-01,  3.1250e-01, -7.5811e-01,  7.8043e-01,
          3.5888e-01, -3.7761e-01, -5.6656e-02,  1.0131e-01,  1.0193e-01,
          7.1883e-03, -4.4905e-02, -1.1736e+00, -2.3083e-01,  3.2722e-01,
          5.2351e-01,  3.6293e-02,  1.5089e-01,  3.5296e-01,  2.0795e-01,
          1.6433e-02, -1.4810e-01, -6.2645e-02, -3.6183e-01,  4.2100e-01,
          1.0496e+00, -1.1530e-01,  3.2120e-02,  4.6607e-01,  3.9454e-01,
          3.7598e-01, -1.2019e+00, -9.4752e-03,  2.3321e-01,  4.6058e-01,
          1.8797e+00, -5.5567e-01]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
942000 特征值优化 tensor(6.0762, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-3.3101e-01, -1.0348e+00,  8.6883e-01,  1.4817e-01,  1.7406e+00,
          1.7788e-03,  1.8685e+00, -5.1321e-01, -2.5732e-01,  3.5768e-01,
          4.8267e-02,  6.0309e-01, -5.2034e-01,  1.0013e+00, -3.7587e-01,
          2.0558e-01, -1.0953e-03, -8.0540e-03, -3.2645e-02, -3.7997e-01,
          1.3279e+00, -2.3038e-03,  2.6022e-01, -6.4221e-02,  1.1217e-01,
         -1.0922e-01, -9.5019e-02, -3.0778e-02, -1.2711e-02, -1.0019e-02,
         -8.6928e-02, -1.0170e+00, -2.0110e-01, -1.1980e-01, -2.5467e-01,
         -5.5369e-01,  4.5257e-01, -4.0504e-01, -3.3638e-01,  2.4682e-01,
          4.8567e-01, -3.7370e-01,  5.9574e-02,  1.5174e-01,  1.4915e+00,
         -1.2767e-01, -2.4885e-01, -4.0289e-01, -3.3368e-01,  3.5206e-01,
         -4.4762e-01,  3.2092e-01,  3.7338e-02, -2.9361e-02, -1.4491e-01,
         -2.6578e-01,  1.0695e+00, -5.2409e-01,  8.9194e-02, -2.0727e-01,
         -2.6756e-01,  2.9571e-02, -1.3860e-01,  1.3861e-01,  2.6320e-02,
         -2.0770e-01, -1.7750e-01,  5.0682e-01,  2.0651e-01,  8.1908e-02,
         -2.7347e-01, -9.1929e-01]], device='cuda:0') tensor(4.0512, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
943000 特征值优化 tensor(2.1051, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.9713e-01, -1.2227e+00,  1.5903e-01,  2.4600e-01,  2.0498e+00,
         -9.0236e-02,  2.1183e+00, -5.3645e-01, -2.7395e-01,  4.8967e-02,
         -1.6469e-01,  7.8147e-01, -2.5573e-01,  3.2037e-01, -2.6273e-03,
          2.1651e-01,  8.5798e-02,  4.8943e-02, -4.5521e-02,  5.5284e-03,
          7.8847e-01, -6.8362e-03,  1.9421e-03,  2.0186e-02, -2.6122e-03,
         -3.9417e-02, -2.0007e-01, -2.0320e-01, -1.2467e-03,  1.2541e-02,
         -8.6876e-02, -6.8629e-01, -2.5038e-01, -2.3294e-02, -6.6711e-02,
         -2.0339e-01,  2.2326e-01, -1.4509e-01, -6.2188e-02,  5.2385e-02,
          1.0121e-01, -1.1069e-01,  4.1316e-01, -6.1955e-02,  1.2930e+00,
         -1.0637e-01, -2.8630e-01, -1.5673e-01,  1.3575e-01,  9.7354e-02,
         -2.5492e-01,  1.4040e-01,  3.3288e-01, -3.3925e-01, -7.1531e-01,
          4.2809e-01,  9.9088e-02, -1.8582e-02,  6.9472e-02, -2.8954e-02,
          9.2174e-02, -3.1535e-01, -1.4968e-01,  1.9432e-01, -3.1422e-02,
         -2.7558e-02, -2.3984e-01,  2.6316e-01, -2.6812e-01,  6.3580e-02,
         -5.2574e-02, -3.2842e-01]], device='cuda:0') tensor(0.7861, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
944000 特征值优化 tensor(8.5575, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9523, -0.3451, -0.1265,  0.1983,  0.5470,  0.4800,  1.7683, -0.5603,
         -0.4523,  0.0771,  0.2329,  0.2676, -0.5091,  0.1768, -0.4280, -0.2365,
         -0.0754, -1.8373, -0.5083,  0.2693,  0.9702,  0.3585, -1.1678,  0.4265,
         -0.0073, -0.2804,  0.4536, -0.0236, -0.7732, -0.3336, -0.7281, -0.1305,
          0.0150,  0.0478,  0.6527, -0.2552,  0.3812, -0.3492, -0.5185,  0.9266,
          0.3616, -1.0915,  1.0440, -0.1652, -0.6586,  0.6560, -0.7613,  0.3080,
          0.8189, -0.0185, -0.8715,  0.0047,  0.6196,  0.0616,  1.3631, -0.5186,
         -1.4264,  1.0339, -0.0997,  0.1523, -1.3560,  0.0589, -0.0188, -0.1093,
          1.4955, -0.3460, -1.8444,  0.4602,  0.9003,  0.4346,  0.5097, -0.3953]],
       device='cuda:0') tensor(4.0944, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
945000 特征值优化 tensor(2.1889, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6811e+00,  2.9471e-01,  1.3855e-03,  5.1037e-02,  6.7395e-01,
          1.1212e+00,  1.8175e+00, -1.0262e+00,  1.2410e-01, -4.9147e-01,
          9.2497e-01,  8.1237e-01, -5.3787e-02,  1.0929e-01, -1.1477e-01,
         -3.7627e-01, -1.4327e-01, -8.3929e-01, -1.5202e-01,  1.8610e-01,
          3.9367e-01, -2.2950e-02, -3.9789e-01, -4.1150e-02,  2.3552e-02,
         -4.0577e-02, -6.0735e-02, -4.3439e-02, -1.0163e-02, -4.1011e-03,
         -4.2092e-01, -5.2094e-02, -1.1908e-01,  7.9882e-02,  1.7342e-01,
          1.3767e-01,  4.0032e-01, -1.6652e-01, -3.1144e-01,  4.1008e-01,
          1.1939e-01, -5.9285e-01, -1.3967e-01,  1.2402e-01, -3.9012e-01,
          2.6705e-01, -5.7670e-01, -2.3141e-01,  2.4267e-01,  4.7492e-02,
         -8.1365e-02,  3.4429e-02,  4.8248e-01,  4.4553e-01,  8.2774e-01,
         -5.4939e-01, -7.0061e-01,  3.1892e-01,  2.9194e-02, -3.7499e-02,
         -1.1010e+00,  3.2237e-01,  1.9750e-01,  2.5568e-02,  1.8557e+00,
         -5.0824e-01, -1.5079e+00,  3.0542e-01, -2.4309e-02,  2.0705e-02,
          9.2239e-01,  1.0223e-01]], device='cuda:0') tensor(1.5488, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
946000 特征值优化 tensor(10.9485, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5182, -0.0778,  1.4555,  0.2152,  0.3986,  0.5248,  1.9308,  0.5715,
          0.1138,  0.7877,  0.1491, -2.6296,  0.5800,  0.7623, -0.4114,  0.6216,
         -0.0914, -0.0867,  0.5219, -0.6517,  0.8000, -1.0082, -0.1789, -0.4281,
          0.4145,  0.6798, -1.3995, -0.3462,  0.6432,  0.5271, -0.0187,  0.9535,
          0.0442,  0.5493,  0.2160, -0.5276,  0.4580,  0.9019, -0.8736,  0.0577,
          0.5285, -0.2092,  0.1028,  0.5122,  0.1809, -0.9193,  0.3236, -0.1288,
          0.9555, -1.4049, -2.1620,  0.9298,  0.0251, -0.3066, -0.0044, -0.0232,
          1.0038,  0.0450,  0.2107,  0.1324,  0.0922,  0.4403,  0.4450,  0.2297,
          1.2147,  0.5511,  0.6852,  0.0122,  2.8184,  2.2906,  0.6532, -1.5403]],
       device='cuda:0') tensor(6.7191, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
947000 特征值优化 tensor(3.0516, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 7.2189e-01,  5.2038e-01,  1.9864e+00,  1.1730e-01,  3.4039e-01,
          2.9903e-01,  1.9769e+00,  9.2487e-01,  4.6366e-01,  1.6856e-01,
          1.1423e+00, -1.5671e+00,  3.2983e-01, -3.3051e-02, -5.1514e-04,
          1.7176e-01, -9.1782e-02,  2.6092e-02,  3.0462e-02, -3.2342e-02,
          3.1177e-01, -3.8117e-01, -4.9596e-02, -2.8575e-02, -4.7021e-02,
          2.6047e-01, -3.5695e-01, -1.2352e-01,  2.5107e-01,  3.7580e-01,
         -1.7507e-02,  1.9995e-01, -4.7038e-02,  1.7971e-02,  2.4179e-02,
         -6.9730e-02,  1.2974e-01,  5.9596e-01, -1.7868e-01, -8.0248e-02,
          4.8351e-01,  1.4504e-02, -2.6644e-01,  3.8003e-01,  1.5554e-01,
         -2.9809e-01,  1.8708e-01,  3.5664e-01,  7.4513e-01, -1.0029e+00,
         -1.6266e+00,  3.5003e-01, -3.7079e-02, -1.3347e-03, -2.1919e-02,
          1.3296e-01, -1.6959e-01,  1.6125e-01,  2.9814e-03, -6.0935e-02,
         -2.1970e-01,  2.6984e-01,  2.4647e-01,  1.8852e-01,  5.1554e-02,
          2.1970e-01,  4.9063e-01, -8.5543e-03,  1.7627e+00,  1.2856e+00,
          1.0152e+00, -6.0261e-01]], device='cuda:0') tensor(1.5235, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
948000 特征值优化 tensor(2.1069, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6527,  0.4686,  1.9786,  0.0461, -0.0178,  0.2048,  1.7387,  0.9530,
          0.2222,  0.0873,  1.7167, -1.2549,  0.3172, -0.0480, -0.0172,  0.2263,
         -0.1513, -0.0732, -0.0665, -0.0063,  0.2920, -0.3558, -0.0491, -0.0335,
         -0.1312,  0.3074, -0.0868, -0.0167,  0.3132,  0.3753, -0.0194,  0.0560,
         -0.0247,  0.0248, -0.0394,  0.0178,  0.0773,  0.5533, -0.0869,  0.0644,
          0.5248, -0.1075, -0.3715,  0.4265,  0.1393, -0.2494,  0.1434,  0.3690,
          0.7924, -1.0632, -1.5773,  0.3297, -0.0871,  0.0714,  0.0628,  0.0684,
         -0.1964,  0.1740, -0.0499,  0.0217, -0.3875,  0.5535,  0.2735,  0.1348,
         -0.3731,  0.1782,  0.0484,  0.0665,  1.0851,  0.6993,  0.6559, -0.2080]],
       device='cuda:0') tensor(0.9293, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
949000 特征值优化 tensor(6.5273, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0076e+00, -8.0852e-01,  1.1323e+00,  1.8777e+00, -7.2314e-01,
          1.4909e+00,  2.1845e+00, -1.1490e+00,  6.8123e-02,  7.4679e-01,
          1.1670e+00,  1.6029e+00, -8.8330e-01,  1.8322e-01,  1.0456e-01,
          4.8319e-01,  1.0188e-01, -7.8520e-02,  2.0427e-02, -9.3418e-03,
          3.8687e-01,  3.1666e-02,  7.0678e-01,  9.8531e-02, -5.7282e-01,
          3.3807e-01, -6.6935e-01, -3.1259e-01, -3.8204e-02,  3.7186e-02,
          1.5896e-01,  8.8995e-01, -7.8198e-02,  1.3299e-03,  4.8241e-03,
         -9.0044e-01, -6.1949e-02,  5.6368e-01, -1.2896e-02,  1.4833e-01,
         -8.1396e-01,  2.5905e+00,  5.9490e-01,  1.2755e+00, -1.8513e-01,
         -2.3240e-01, -1.7684e-01, -5.4172e-01, -2.4333e-01,  4.5498e-02,
         -9.8957e-01,  1.0469e-01,  9.6204e-01, -1.6197e-01,  3.9667e-01,
         -1.5451e-01,  1.1333e-01, -8.3395e-01,  3.3874e-02, -2.4403e-03,
          1.0622e+00, -8.8285e-02, -4.1094e-01, -2.8115e-01, -9.5834e-01,
          3.2010e-01, -3.4968e-02,  7.4489e-02, -9.3941e-01,  9.5528e-01,
          6.8350e-01,  8.4359e-01]], device='cuda:0') tensor(4.2586, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
950000 特征值优化 tensor(2.2572, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1367, -1.3054,  1.4155,  1.5829,  0.0756,  1.6477,  2.3988, -1.6243,
          0.1743,  0.8210,  1.3905,  2.5514, -0.5698, -0.0132, -0.0451,  0.1732,
          0.1224,  0.0355, -0.0881, -0.0043,  0.5478,  0.0040,  0.4974,  0.4948,
         -0.1733,  0.1082, -0.1593, -0.1573,  0.0188,  0.0226,  0.0300,  0.5331,
          0.1598,  0.1645, -0.0398, -0.4430, -0.3846,  0.4634, -0.0067,  0.1858,
         -0.5185,  1.6527,  0.0310,  0.9718,  0.2169, -0.2429, -0.4579, -0.8692,
          0.1099,  0.1254, -0.8366,  0.0698,  0.5999, -0.2425,  0.6062, -0.3062,
          0.2216, -0.9078, -0.1643,  1.0530,  1.0145, -0.3593, -0.1987, -0.1260,
         -0.4597,  0.2985,  0.0389,  0.2280, -0.4574,  0.5111,  1.2025,  1.0097]],
       device='cuda:0') tensor(1.6826, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
951000 特征值优化 tensor(16.1100, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9648, -1.3036, -0.9071,  0.4403,  0.2479,  0.5358, -0.5546, -1.1982,
          0.0589,  1.5698, -0.4781,  1.2548,  0.6610, -0.6758,  1.1240, -0.8849,
          1.1671, -0.0804, -0.2619,  0.9964, -0.6300, -0.6697, -0.2490,  0.6434,
          0.9059, -1.3720, -0.3194,  0.0537, -0.3138, -0.9590, -0.9041,  2.1798,
          1.1157, -0.1598,  0.7024,  1.1098, -0.4013,  1.0186,  0.1496, -0.1507,
          0.4544, -0.2837, -0.8070, -0.0740, -0.0418, -0.5909, -0.6388, -0.9259,
         -1.7480,  1.3537,  0.5992,  0.4807, -0.3738,  1.8578,  1.1064,  0.4415,
          0.4579,  0.3069,  0.4316,  0.5308, -0.9873, -0.7222,  0.0458,  0.4926,
          0.7598,  1.3223,  0.0268,  1.2670,  0.6473,  0.1967,  0.5085,  0.6145]],
       device='cuda:0') tensor(8.3266, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
952000 正交保障 tensor(2.4966, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3318, -0.5466, -0.0319,  0.6076,  1.2622,  0.2593,  0.5131, -1.0615,
          0.6043,  1.8447,  0.2285,  1.8767,  0.1742, -0.0339,  0.2090, -0.0942,
          0.3139,  0.0104,  0.0302,  0.4577, -0.1982, -0.1149, -0.3502, -0.0733,
          0.0845, -0.5976,  0.1787, -0.0113, -0.0082, -0.3605, -0.3365,  1.1471,
          0.4861, -0.0250,  0.0327,  0.3475,  0.1054,  0.1426, -0.1603, -0.1466,
          0.0291, -0.1817, -0.4471,  0.2389,  0.2401,  0.0459, -0.2865, -0.1086,
         -0.9584,  1.0688,  0.0668,  0.2476,  0.4438,  0.7813,  1.4228, -0.4353,
          0.0743, -0.0991,  0.2710,  0.4260,  0.1123, -0.9620, -0.6394,  0.6245,
          0.2285,  0.5633, -0.1804,  0.6224,  0.4949, -0.3275,  1.0684,  0.0611]],
       device='cuda:0') tensor(2.4966, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
953000 特征值优化 tensor(2.1423, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.7020e-01, -7.1671e-01,  4.0935e-02,  4.2066e-01,  1.6058e+00,
          2.5618e-01,  8.5652e-01, -8.5482e-01,  8.7900e-01,  1.3556e+00,
          5.4318e-01,  2.2020e+00,  5.2454e-02,  6.5075e-02,  5.2199e-02,
          1.4164e-01,  1.6198e-01,  1.9363e-02, -3.8294e-02,  1.7132e-01,
         -7.5837e-02, -6.3497e-03, -2.0010e-02, -1.3371e-02,  1.6741e-01,
         -2.4644e-01,  3.3864e-01,  2.2512e-01,  2.0609e-03, -1.4443e-01,
         -3.6474e-02,  7.1207e-01,  3.8461e-01, -2.3300e-02, -3.0628e-02,
          7.3779e-02,  7.9875e-02,  2.4596e-02, -4.4857e-02, -5.6935e-02,
          4.2663e-02, -1.1544e-01, -3.0558e-01,  1.3375e-01,  1.3184e-01,
          2.5591e-01, -9.1063e-02, -9.9097e-02, -5.7970e-01,  5.3482e-01,
         -7.1563e-02,  8.1263e-02,  1.1553e+00,  3.4070e-01,  1.2613e+00,
         -4.0711e-01, -2.6927e-01,  1.5408e-01,  2.1824e-02,  4.1879e-02,
          5.0033e-01, -1.1395e+00, -8.1558e-01,  5.3371e-01, -1.8358e-01,
          4.4968e-01, -2.2241e-02,  3.4804e-01,  1.3510e-01, -6.0138e-02,
          7.5700e-01,  4.0698e-02]], device='cuda:0') tensor(1.1416, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
954000 特征值优化 tensor(9.4686, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3774e-02, -1.1174e+00,  2.5139e-01, -1.2262e+00,  1.9798e+00,
         -5.0992e-01, -6.8777e-01, -7.8126e-01, -5.5954e-01,  3.1381e-01,
         -1.0110e+00, -1.5745e+00,  4.2772e-01, -2.2017e-02, -7.9043e-03,
          9.2842e-01,  4.6633e-01, -3.6084e-01, -4.3029e-01, -2.2934e-01,
         -6.1889e-01,  3.2367e-01, -1.0858e-02, -3.5882e-01,  7.3988e-02,
          1.9934e-01,  9.3193e-02,  7.9127e-01, -1.9835e-02, -3.6746e-01,
         -6.1824e-01, -4.2244e-01,  2.9369e-01,  6.0006e-01,  2.9378e-02,
          4.8108e-01, -1.0139e+00,  9.9443e-01, -9.2784e-01, -8.1067e-01,
         -5.7128e-01, -7.7232e-01,  7.7947e-01,  7.5285e-01, -7.5335e-02,
          1.3256e+00, -1.5940e+00,  5.1266e-01,  4.4402e-01, -1.4682e-01,
          9.7673e-02, -9.6950e-01,  4.6616e-01, -2.4943e-01, -3.5755e-01,
          4.7026e-01, -2.4932e-01, -8.2264e-02,  2.1439e-01,  8.3972e-01,
         -3.6432e-01, -7.5720e-01, -3.2419e-01, -4.7812e-01, -6.7013e-01,
          1.8085e-03,  6.9566e-01,  1.4304e-01,  1.1306e+00,  6.7584e-02,
         -1.0498e+00,  1.2945e+00]], device='cuda:0') tensor(5.7154, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
955000 特征值优化 tensor(2.3260, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7618, -1.1718,  0.6504, -1.0656,  1.9612, -0.4849, -0.0023, -1.1291,
         -0.3032, -0.1335, -0.2276, -0.7700,  0.3329,  0.0690, -0.0753,  0.3022,
          0.2041,  0.1257, -0.1551,  0.0125, -0.3498,  0.2422,  0.0939, -0.1630,
          0.0958,  0.1154, -0.1390,  0.1558,  0.0140, -0.2642, -0.4488, -0.2960,
          0.2256,  0.1453, -0.0055,  0.0064, -0.3175,  0.3733, -0.0811,  0.0068,
         -0.1091,  0.0100,  0.9459,  0.3890, -0.4073,  1.1406, -1.0056, -0.0192,
          0.4154,  0.2313,  0.2559, -0.4152,  0.3545,  0.1062, -0.1677,  0.2455,
         -0.1709,  0.0277, -0.1549,  0.4488,  0.2113, -0.0041,  0.2028, -0.4248,
         -0.3158,  0.0956,  0.1799,  0.0094,  0.2556, -0.0091, -0.1591,  0.3625]],
       device='cuda:0') tensor(0.7814, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
956000 特征值优化 tensor(2.1003, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.8808, -0.9278,  0.5850, -0.6110,  1.6945, -0.5240,  0.0687, -0.9981,
         -0.3791, -0.2837, -0.0596, -0.7447,  0.2906,  0.2127, -0.1031,  0.2683,
          0.2722,  0.1249, -0.2045,  0.0081, -0.3036,  0.0248,  0.1649, -0.1748,
         -0.0256, -0.0346, -0.0313,  0.0946, -0.0498, -0.0499, -0.4221, -0.1430,
          0.0799,  0.2313, -0.0128,  0.0101, -0.3156,  0.2903, -0.0869,  0.0391,
         -0.0187, -0.0077,  1.0789,  0.2878, -0.5365,  1.0256, -0.9034, -0.3101,
          0.1153,  0.1322,  0.3759, -0.1361,  0.0093,  0.3798,  0.0432,  0.0151,
         -0.4695,  0.0755, -0.2096,  0.2769,  0.1395, -0.0266,  0.2374, -0.3775,
         -0.1454,  0.0715,  0.2057,  0.0767,  0.0113,  0.0073,  0.0431,  0.2762]],
       device='cuda:0') tensor(0.8315, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
957000 特征值优化 tensor(5.0793, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7819e+00,  1.6476e+00, -3.7845e-01, -1.2559e+00,  4.3416e-01,
          1.1857e+00,  2.5059e+00, -1.2330e+00,  3.2282e-02,  5.2776e-01,
          5.3600e-01,  1.5514e+00, -8.2823e-01, -2.2179e+00,  2.2846e-01,
         -5.8147e-01, -1.1599e-01, -4.1532e-01,  3.0737e-01, -8.3333e-01,
         -8.0811e-01,  1.2104e-01, -1.7863e-03, -1.8372e-02,  2.7145e-01,
         -7.0988e-02,  3.1113e-01, -8.8807e-01,  3.1974e-03,  3.2971e-02,
         -7.6134e-02,  1.0395e-01,  3.0243e-02,  5.7397e-02, -1.6215e-01,
         -1.3928e+00, -7.7662e-01,  1.4943e-01,  9.5546e-01, -1.2619e-01,
         -9.7353e-02,  8.6497e-02,  1.8889e+00, -1.7540e-02, -5.5938e-01,
          1.1652e+00,  3.1962e-01, -4.4534e-03, -3.4982e-01,  5.2704e-01,
          3.8309e-01, -4.2175e-01, -7.4518e-01,  1.7251e-01, -9.6869e-03,
         -7.7851e-04, -4.9362e-02, -3.2875e-01, -1.0926e-01,  3.0155e-01,
         -4.9542e-01,  3.3037e-01,  7.9099e-02,  5.7835e-02, -4.6114e-01,
          1.0111e+00, -7.8642e-01,  1.4676e-01, -5.4670e-01,  6.9523e-02,
          1.7406e+00, -1.0577e+00]], device='cuda:0') tensor(3.3765, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
958000 特征值优化 tensor(2.4425, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1914e+00,  1.9441e+00, -7.3349e-03, -4.6773e-01,  9.1295e-01,
          1.5085e+00,  2.5491e+00, -9.3029e-01,  4.7676e-01,  5.1905e-01,
          5.7826e-01,  1.7965e+00, -4.8752e-01, -1.2124e+00, -3.9573e-01,
         -2.9828e-01,  1.1720e-01,  5.9330e-04,  1.4855e-01, -3.3413e-01,
         -4.6669e-01,  9.3793e-02, -3.7529e-03, -8.3982e-02,  2.2269e-02,
         -1.0173e-01, -3.5683e-02, -1.3240e-01, -1.1593e-03,  6.9402e-02,
         -2.2440e-03,  9.4583e-02,  3.2225e-02,  3.1453e-02, -5.9306e-02,
         -1.0559e+00, -6.7149e-01,  2.2259e-01,  7.0187e-01, -1.2099e-01,
         -9.8123e-02, -2.0686e-02,  1.3399e+00,  1.1732e-01, -7.1899e-01,
          1.2140e+00, -2.6109e-01, -3.3592e-01, -2.1149e-01,  4.6674e-01,
         -1.1207e-02, -1.1122e-01, -5.1109e-01,  1.6526e-01,  8.0096e-02,
         -2.5471e-02,  4.7089e-01, -4.3455e-01, -8.3607e-02,  9.4957e-01,
         -4.1605e-01,  4.6689e-01,  1.7083e-01, -1.4085e-01,  4.3706e-02,
          5.6049e-01, -4.2663e-01,  8.9312e-02, -2.9753e-01,  1.9386e-01,
          2.2200e+00, -1.1945e+00]], device='cuda:0') tensor(1.2793, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
959000 特征值优化 tensor(2.1197, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3609e+00,  2.1022e+00, -4.5432e-02, -4.5817e-01,  1.2635e+00,
          1.5365e+00,  2.3166e+00, -8.0897e-01,  4.8521e-01,  5.1126e-01,
          4.6760e-01,  1.8522e+00, -3.5983e-01, -6.8522e-01, -5.3868e-01,
         -6.4640e-02,  2.6323e-02,  1.6683e-02,  2.9126e-02, -7.1878e-02,
         -3.3391e-01,  9.0549e-02, -2.0537e-02, -1.3397e-02,  1.2206e-02,
         -3.3374e-02, -7.2060e-03, -3.5477e-02,  3.6945e-03,  8.9658e-02,
         -1.7185e-02, -4.4490e-04, -2.0743e-02,  3.8908e-02, -5.8802e-02,
         -9.9003e-01, -7.3539e-01,  2.5571e-01,  6.5015e-01, -1.8641e-01,
         -1.1783e-01, -5.8933e-02,  1.2711e+00,  6.5900e-02, -4.0087e-01,
          1.3549e+00, -2.2597e-01, -3.4991e-01, -1.7458e-01,  3.9585e-01,
         -9.8792e-02, -6.0622e-02, -4.1126e-01, -2.3397e-02, -2.0017e-02,
          1.9817e-02,  5.0070e-01, -4.4115e-01, -3.5264e-02,  1.0286e+00,
         -3.1353e-01,  6.2354e-01,  8.1342e-02, -2.3031e-01,  1.2924e-01,
          5.5653e-01, -3.9750e-01,  1.0120e-01, -2.2936e-01,  2.5350e-01,
          2.3451e+00, -1.1108e+00]], device='cuda:0') tensor(1.1697, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
960000 特征值优化 tensor(19.4499, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.1455,  0.5627,  1.1863, -0.2944, -2.2482,  1.7178,  0.2202, -0.2881,
         -1.3483, -0.0117,  2.1822, -0.8978,  0.9522,  0.0304,  1.4752,  1.7975,
          0.1786,  0.6761,  0.3673, -0.1755, -1.1800,  0.2676, -1.4360,  0.1736,
          0.5142,  0.2560,  1.3124, -1.1172, -1.1691, -0.0863, -1.4342,  0.2033,
          0.1001, -0.7072,  0.2680, -0.0630,  0.5607, -0.3903,  1.5086,  1.8206,
          2.7273,  0.3331, -1.7568,  1.4298, -0.8373, -0.4828,  0.6082,  1.9228,
          1.5334,  0.6959,  1.3261,  1.6855, -0.0937, -0.4322, -1.0833, -0.0476,
          0.6853, -1.0927, -1.2278, -0.6827, -0.9972, -0.6753, -0.6672,  0.9568,
          0.0525,  0.1212,  0.8381,  0.9113,  0.2364,  2.5758,  0.2323, -2.0084]],
       device='cuda:0') tensor(10.5681, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
961000 特征值优化 tensor(4.6019, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 6.1690e-01, -1.4714e-02,  1.8808e+00,  5.0480e-01, -1.0118e+00,
          1.7271e+00,  5.5173e-01,  1.6360e-01, -2.1503e-01,  3.9530e-01,
          3.4280e+00,  8.5303e-02,  2.8058e-01, -1.0877e-01,  3.7577e-01,
          7.9616e-01,  3.5662e-01,  2.9195e-02, -7.3604e-02,  1.0055e-02,
         -3.9037e-01, -2.7469e-01, -5.4829e-01,  2.4670e-01, -5.3639e-02,
          7.4630e-02,  3.8126e-01, -1.8752e-01, -4.9817e-01, -3.3698e-01,
         -3.4957e-01,  3.3196e-02,  2.9307e-02, -3.7641e-01, -9.4132e-02,
          6.3493e-01,  5.5803e-02,  4.8193e-03,  6.8157e-01,  7.7633e-01,
          1.7566e+00,  5.0448e-01, -9.3908e-01,  3.7876e-01, -5.2606e-01,
          1.2386e-01,  3.7466e-01,  9.8801e-01,  7.7821e-01, -9.0007e-02,
          5.5259e-01,  9.2836e-01,  4.2512e-01,  3.3123e-02, -3.0616e-01,
          2.8057e-01,  7.4262e-01, -2.7706e-01, -5.7157e-01, -5.4003e-01,
         -3.4594e-01,  1.2303e-03, -3.3376e-01,  1.8507e-01,  3.8388e-01,
          2.8386e-01,  3.0253e-01,  2.8631e-01,  1.0824e+00,  1.7742e+00,
          1.1792e+00, -1.0036e+00]], device='cuda:0') tensor(2.2557, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
962000 特征值优化 tensor(2.1588, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 5.4457e-01, -4.8094e-01,  1.7840e+00,  8.4918e-01, -4.2321e-01,
          1.4968e+00,  3.5133e-01,  2.0730e-01,  1.9411e-01,  7.9734e-01,
          3.8606e+00,  3.7160e-01,  1.1422e-01, -7.2363e-02,  9.0610e-02,
          2.7997e-01,  2.2921e-01, -4.6618e-02, -3.0342e-02, -4.0584e-02,
         -1.3867e-01, -4.7411e-01, -1.7162e-01,  1.8312e-01, -2.0173e-01,
         -8.7641e-02,  5.9738e-02, -1.0363e-01, -3.4803e-01, -4.6855e-01,
         -1.3581e-01, -4.5868e-03,  1.8124e-03, -2.2165e-01, -1.2978e-01,
          4.8789e-01, -4.7885e-02,  2.8609e-02,  1.6479e-01,  3.8942e-01,
          1.3562e+00,  3.1672e-01, -7.5444e-01,  3.7376e-01, -1.6021e-01,
          4.7528e-01,  5.6018e-02,  6.3700e-01,  8.0483e-01, -2.4657e-01,
          3.6491e-01,  6.4422e-01, -1.4581e-01, -4.8173e-03, -1.6130e-02,
          3.9599e-02,  6.4690e-02,  2.3147e-02, -2.3642e-01, -5.7909e-01,
         -3.0190e-01,  1.6233e-01, -2.2594e-01,  1.2191e-01, -8.7973e-02,
          1.0710e-01,  2.8752e-01,  1.7623e-02,  8.6751e-01,  1.3326e+00,
          1.4119e+00, -6.8660e-01]], device='cuda:0') tensor(1.3869, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
963000 特征值优化 tensor(7.0214, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.6073e+00, -9.7428e-01,  1.3506e+00, -2.0349e-01, -1.8319e-01,
          1.6306e+00,  1.5061e+00,  2.9712e-02,  2.2018e-01,  4.0826e-01,
          2.6735e+00, -7.9090e-01, -2.0730e-02, -6.4588e-01,  4.9140e-01,
         -1.7178e-01,  8.0613e-02, -1.6125e+00, -1.1463e+00, -1.7274e-03,
         -8.3360e-04,  8.2434e-01,  1.0812e+00, -6.8235e-02, -1.9915e-01,
          5.7116e-02,  5.1934e-03,  5.3387e-01,  3.6376e-02,  6.2545e-01,
          1.2644e-01,  4.2225e-01,  4.9939e-01, -6.5024e-01, -1.3003e+00,
          2.6889e-01,  8.3061e-01, -2.2096e-01,  3.1229e-01,  1.4215e-01,
         -9.9349e-02, -1.0018e-01, -6.6692e-01, -2.3750e+00,  1.5251e+00,
          7.7615e-01, -4.9958e-03,  1.4575e-02,  1.2647e-01,  3.2724e-01,
          1.4314e+00, -9.7198e-01,  1.6136e+00, -9.2246e-01,  1.2074e+00,
         -1.2145e+00, -8.5531e-01,  1.2940e-01, -1.6014e-02,  8.0240e-03,
          1.4119e+00,  9.6992e-01, -1.0138e+00,  1.5826e-01,  1.3871e+00,
         -2.6777e+00,  5.7084e-01, -6.3436e-01, -8.5284e-01, -5.6248e-02,
          8.6338e-01, -5.3003e-01]], device='cuda:0') tensor(3.4573, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
964000 特征值优化 tensor(2.8293, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7997, -0.6956,  1.2787,  0.1500,  0.2044,  1.8739,  1.7040, -0.5662,
          0.6163, -0.0820,  3.2863, -0.2060, -0.0146, -0.0404,  0.0702,  0.2031,
         -0.0436, -0.8203, -0.3735,  0.0123, -0.0381,  0.4336,  0.2576,  0.1334,
         -0.1368,  0.1570, -0.0094,  0.0694,  0.0516,  0.3579, -0.0256,  0.2455,
          0.2974, -0.3570, -0.6947,  0.0804,  0.5507, -0.2079,  0.0808, -0.0054,
          0.0396, -0.0373, -0.5621, -1.6573,  1.8927,  0.4330, -0.0177,  0.4180,
         -0.0215,  0.0669,  1.1083, -0.4048,  0.4106, -0.1321,  1.0957, -0.6966,
         -0.2605,  0.2637,  0.0115,  0.0452,  0.7766,  0.5194, -0.8039,  0.1322,
          1.9798, -1.8052,  0.3931, -0.3336, -0.8708, -0.0924,  0.2094,  0.0656]],
       device='cuda:0') tensor(1.7048, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
965000 特征值优化 tensor(2.3313, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.7104, -0.2580,  0.7827, -0.0341,  0.4839,  1.6351,  1.5993, -0.8224,
          0.2627, -0.1987,  3.4321,  0.1828, -0.0193, -0.0055, -0.0243,  0.4319,
         -0.0331, -0.6122, -0.1629, -0.0132, -0.1111,  0.2866,  0.1345,  0.0271,
         -0.0905,  0.2272,  0.0239, -0.0574,  0.1344,  0.2666, -0.0230,  0.0928,
          0.1403, -0.3377, -0.5227,  0.0701,  0.4589, -0.2927,  0.0457,  0.0144,
          0.1404, -0.0240, -0.4049, -1.1450,  1.6979,  0.3225,  0.0053,  0.1397,
          0.0099,  0.0106,  0.5638, -0.2476,  0.0094,  0.0437,  0.5464, -0.2334,
         -0.1642,  0.2609,  0.2672,  0.0415,  0.7523,  0.5251, -0.7835,  0.0580,
          1.7776, -1.5125,  0.1962, -0.0979, -0.7192, -0.0549, -0.0520,  0.1514]],
       device='cuda:0') tensor(1.5556, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
966000 特征值优化 tensor(2.1196, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.5993,  0.0974,  0.3602, -0.5041,  0.6176,  1.4914,  1.4666, -0.9654,
          0.2815, -0.0652,  3.4055,  0.3475, -0.0403,  0.0606, -0.0285,  0.3751,
         -0.0732, -0.5408, -0.1260, -0.0110, -0.1524,  0.1443,  0.1362, -0.0345,
         -0.1119,  0.1479,  0.0453, -0.0739,  0.1531,  0.1333, -0.0208,  0.0411,
          0.0886, -0.3143, -0.4390,  0.0448,  0.4200, -0.3112,  0.0111,  0.0207,
          0.1733, -0.0249, -0.2648, -0.7551,  1.3988,  0.1635,  0.0268, -0.1576,
          0.0063,  0.0070,  0.0374, -0.1288, -0.0894,  0.0728, -0.0422, -0.0194,
         -0.1624,  0.2047,  0.3904,  0.0388,  0.7199,  0.5372, -0.6443, -0.0348,
          1.7404, -1.3761,  0.1698, -0.0676, -0.6673,  0.0271, -0.0641,  0.1281]],
       device='cuda:0') tensor(1.5200, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
967000 特征值优化 tensor(11.2201, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2714,  0.0250,  0.8507, -1.1617, -0.4611,  1.6231, -0.1369,  0.3011,
          0.8336,  0.6556,  2.3388,  0.7768, -0.9108, -0.1589,  1.3686, -0.0937,
         -0.5670, -0.2874,  0.7503,  0.0650, -0.2910, -0.2565,  0.5587,  1.2348,
          0.5717, -1.0155, -1.9770,  0.9498, -0.2428, -1.3797,  0.0861, -0.0219,
          0.4478,  1.5265,  0.7888,  0.3870, -0.0652, -0.5256,  0.2046,  0.3889,
          0.5401, -0.2932, -0.7832, -0.8005, -1.0550, -1.1978,  2.0008, -1.7562,
          0.3128,  0.7406, -0.0184,  0.1142,  0.5783,  0.4357,  0.0882, -1.8056,
          1.2561, -0.1804,  0.0752, -0.2941, -0.1287,  0.5941, -0.2707, -0.1454,
          0.1424, -1.2780, -0.7885,  0.9624,  1.9426,  0.2832, -0.0915, -0.4369]],
       device='cuda:0') tensor(6.6395, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
968000 特征值优化 tensor(2.7654, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0887e+00,  3.8786e-01,  1.7202e+00, -5.5809e-01, -1.4596e-01,
          1.8654e+00,  5.6769e-03, -5.2473e-01,  8.6451e-01, -3.5895e-01,
          2.2082e+00,  1.2741e+00, -2.4382e-01, -1.1523e-02,  3.3264e-01,
          2.6790e-02,  9.7159e-03, -1.0850e-02,  2.9783e-01,  2.4291e-02,
         -1.3249e-01,  6.9578e-02, -5.1044e-02,  3.3170e-01,  2.4719e-01,
         -2.4358e-01, -9.1668e-01,  3.1659e-01, -4.7131e-02, -6.6744e-01,
         -3.4010e-02,  1.5195e-02,  2.1947e-01,  9.7861e-01,  6.2845e-01,
          3.2494e-01,  4.1773e-02, -2.3160e-01,  4.4754e-02, -2.2127e-04,
          5.6485e-01,  5.4873e-02,  5.1856e-02, -1.1300e-01, -2.8066e-01,
         -8.1555e-01,  9.4012e-01, -9.0224e-01,  4.4372e-01,  7.9272e-01,
          3.5711e-01, -3.0659e-02,  7.4971e-02, -8.4240e-05,  8.1580e-02,
         -1.1545e+00,  1.0043e+00,  1.8658e-01,  4.5178e-01, -2.2716e-01,
         -1.3220e-01,  2.1317e-01, -4.0846e-01, -1.0496e-01,  5.0331e-01,
         -5.9384e-01, -3.5059e-01,  4.2116e-01,  2.0039e+00,  1.3524e-01,
         -5.9549e-01,  6.9093e-02]], device='cuda:0') tensor(1.8319, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
969000 特征值优化 tensor(2.1817, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.0721,  0.6065,  1.7793, -0.6150,  0.3321,  1.6339,  0.4137, -0.3032,
          0.5150, -0.4686,  2.0214,  1.5656, -0.2366, -0.0338,  0.0441, -0.0325,
         -0.0228,  0.0147,  0.0388,  0.1190, -0.1006,  0.0737, -0.0533,  0.2502,
         -0.0187, -0.2317, -0.6132,  0.2935, -0.0512, -0.4795, -0.0186,  0.0047,
         -0.0044,  0.6673,  0.3715,  0.1716, -0.0119, -0.1142, -0.0068, -0.0107,
          0.7293,  0.0273,  0.1850,  0.0398, -0.1863, -0.5875,  0.6269, -0.8508,
          0.2975,  0.4640,  0.4703, -0.0593, -0.0645,  0.0727, -0.0084, -1.0049,
          1.1165,  0.5098,  0.2749, -0.0201, -0.0996,  0.1212, -0.4493,  0.0611,
          0.3359, -0.2064,  0.0548,  0.0847,  1.4056,  0.3791, -0.6398,  0.1587]],
       device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
970000 特征值优化 tensor(2.0871, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.4038e-01,  8.5223e-01,  1.7881e+00, -4.9833e-01,  5.5800e-01,
          1.4495e+00,  6.4004e-01, -1.2000e-01,  6.6918e-01, -3.1980e-01,
          1.9729e+00,  1.6941e+00, -2.2344e-01,  4.0673e-02,  9.5860e-03,
         -3.3601e-02, -1.8230e-02,  7.0854e-02,  9.6993e-02,  9.6734e-02,
         -9.2289e-02,  2.2184e-04, -5.7987e-02,  3.2609e-01, -8.1242e-03,
         -1.3284e-01, -5.5930e-01,  2.7192e-01, -2.9378e-03, -3.7511e-01,
         -1.4720e-02,  4.4968e-03,  9.5879e-03,  5.4659e-01,  7.6416e-02,
         -2.7177e-02, -1.6440e-02, -9.8351e-02, -2.1275e-02, -6.1809e-03,
          6.4192e-01,  1.9441e-02,  1.3972e-01,  9.9540e-02, -9.9773e-02,
         -5.1456e-01,  5.0546e-01, -8.5437e-01,  1.5588e-01,  3.2197e-01,
          5.3871e-01,  4.0853e-02, -9.5718e-02,  7.8544e-02, -1.2002e-01,
         -9.0866e-01,  6.1332e-01,  6.5277e-01, -7.6034e-03, -2.5872e-03,
         -2.3419e-01,  1.8049e-01, -3.1574e-01, -1.6934e-02, -8.0883e-02,
          4.5447e-02,  1.7056e-01, -2.7053e-02,  7.1020e-01,  6.1907e-01,
         -6.5350e-01,  1.9782e-01]], device='cuda:0') tensor(0.8450, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
971000 特征值优化 tensor(3.7358, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.1597, -0.3871,  1.7748, -0.6541,  0.2028,  1.0657, -0.0781, -0.2872,
          1.3972,  0.0835,  0.2754,  0.9952, -0.4513, -1.2452, -0.1147,  0.1390,
          0.9442,  0.6804,  0.1673,  0.1002,  0.4943, -0.2295, -0.1617, -0.0252,
          0.0134, -0.1275, -0.3751, -0.5187,  0.3946,  0.5604,  0.1694,  0.3023,
         -0.9346,  0.0400,  0.0892, -0.4561,  0.0318,  0.0494, -0.1921, -0.1826,
          0.0281,  0.3912, -0.5644,  0.4430,  0.8270,  0.1228, -0.4181,  1.0638,
         -0.4415,  0.5773, -1.0203,  0.2894,  0.8356, -0.9588, -0.1394, -0.0804,
         -0.0680, -0.0072,  1.3377, -0.2945, -0.2009, -0.2309,  0.7531, -0.6855,
         -0.2250,  0.5324, -0.2776, -0.3906,  0.4282, -0.7809,  1.1484, -0.0338]],
       device='cuda:0') tensor(1.9945, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
972000 特征值优化 tensor(2.2125, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.3976e+00, -5.5940e-01,  1.6398e+00, -9.6190e-01,  5.4703e-01,
          6.7279e-01,  1.7045e-01, -4.3526e-01,  1.0353e+00, -4.5175e-01,
          4.8416e-01,  6.8698e-01, -3.2500e-01, -5.3538e-01,  1.8368e-01,
          1.6229e-02,  3.0435e-01,  1.6162e-01,  2.2446e-01,  5.4385e-02,
          3.4783e-01, -3.3469e-01,  2.3193e-02, -7.2079e-02, -7.6977e-02,
         -1.1702e-01, -4.8744e-02,  1.1230e-01,  1.4947e-01,  3.6007e-01,
          8.9505e-02,  2.4097e-01, -6.5105e-01,  2.7538e-02, -2.4313e-03,
         -5.1189e-02,  8.7249e-04,  5.1923e-02,  1.5934e-01, -2.3263e-01,
          5.8543e-02,  2.8147e-01, -6.2770e-01,  3.9771e-01,  5.1568e-01,
         -9.2135e-02, -3.0551e-01,  8.0011e-01, -2.5400e-01,  3.6567e-01,
         -9.5887e-01,  9.9483e-02,  6.3986e-01, -5.3716e-01, -8.0037e-02,
          2.2802e-02, -6.9341e-02,  1.0869e-01,  7.3027e-01, -7.0577e-01,
         -7.8237e-02, -7.6508e-02,  4.4533e-01, -4.8723e-01, -1.3924e-01,
          3.3567e-01, -2.0879e-01, -2.5665e-01,  4.0186e-01, -6.8868e-01,
          5.6015e-01,  3.0209e-01]], device='cuda:0') tensor(0.9612, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
973000 特征值优化 tensor(16.1903, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.9811, -0.3121, -0.4769, -0.1111, -0.0492,  0.5843,  1.2645, -1.2043,
         -0.3816,  0.0729, -0.7088, -0.9866,  0.2259,  0.3550,  0.5281,  0.0739,
          0.9668,  0.6780, -0.3477,  0.1970,  0.6852, -0.3721,  1.0649,  0.5248,
          1.2971, -1.6967,  0.3382, -0.8907,  0.7588, -0.6282,  0.9603, -0.7167,
         -1.4498,  1.6049, -0.2947, -0.8100,  0.6478,  0.7797, -0.4656, -0.9301,
         -0.9485, -0.4545, -2.0399, -0.3900, -0.9504, -0.2497, -1.2050,  0.1760,
         -0.9792,  0.0698,  0.6310, -0.7522, -0.2722,  0.1699, -0.4542,  1.5563,
          0.2417, -1.4008,  1.0251, -0.8213, -0.5916,  1.2329,  0.3013, -0.2567,
          0.9173, -1.1541, -0.6343, -0.4118, -0.1100,  0.9218,  0.2678,  0.0287]],
       device='cuda:0') tensor(7.8803, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
974000 特征值优化 tensor(2.6124, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.4004,  0.1014,  0.3750,  0.4635,  0.7154,  1.3375,  1.7591, -1.4882,
          0.5642,  0.5039,  0.1056, -0.3134,  0.0612,  0.0658,  0.2826, -0.2390,
          0.5881,  0.5647,  0.1888,  0.0731,  0.0283, -0.1375,  0.0628, -0.0092,
          0.3489, -0.6256,  0.0610,  0.0078,  0.0558, -0.1122,  0.2024, -0.2256,
         -0.5687,  0.6399, -0.7424, -0.0426, -0.0895,  0.2354, -0.2426, -0.2075,
         -0.2446, -0.1353, -1.3622,  0.3321, -0.2078, -0.1012, -0.3690,  0.0540,
         -0.1010,  0.3245,  0.1884,  0.0087,  0.5159, -0.1557, -0.7062,  0.8968,
          1.1209, -0.3185,  0.7681,  0.1749, -0.0865,  0.5746, -0.1654, -0.0566,
          1.1504, -0.6939, -0.1170,  0.1082,  0.7556,  0.0446,  0.1107,  0.1699]],
       device='cuda:0') tensor(1.0527, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
975000 特征值优化 tensor(2.1097, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3310e+00,  1.7001e-01,  2.9004e-01,  1.7168e-02,  8.0426e-01,
          1.2186e+00,  1.8070e+00, -1.3582e+00,  7.9690e-01,  5.1463e-01,
          1.8213e-01, -5.4603e-02,  6.5125e-02,  1.4773e-01,  3.6328e-01,
         -1.1518e-02,  3.1410e-01,  3.1016e-01,  1.0049e-01, -1.8303e-02,
          6.3271e-02, -2.2867e-02, -6.2337e-02, -4.0409e-02,  1.3575e-01,
         -2.6097e-01,  6.9153e-02,  6.5564e-02,  7.7281e-02,  3.9238e-04,
          1.2423e-01, -1.5795e-01, -3.9134e-01,  5.1402e-01, -6.7852e-01,
         -4.2744e-03, -1.3944e-01,  1.8853e-01, -2.8397e-01, -1.1003e-01,
         -2.0882e-01, -6.1260e-02, -1.1183e+00,  3.6242e-01, -1.6765e-01,
         -3.9577e-01, -2.2188e-01, -9.9476e-02,  9.9941e-02,  5.0087e-02,
          2.2410e-02, -1.7027e-02,  5.7377e-01, -1.2260e-01, -7.4439e-01,
          7.4942e-01,  1.0729e+00, -3.0494e-01,  4.1729e-01,  3.1365e-02,
         -1.9225e-01,  4.5658e-01, -5.2208e-02, -1.4572e-01,  1.0070e+00,
         -5.6596e-01, -1.9301e-01, -1.0457e-03,  9.1868e-01,  5.9550e-02,
          1.2264e-01,  5.3129e-02]], device='cuda:0') tensor(1.1129, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
976000 特征值优化 tensor(11.4500, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.6274, -1.3122, -0.0135, -0.4291, -0.7405, -0.5697,  1.1592,  0.7873,
         -1.1191, -0.5581, -0.0057, -0.8539,  0.3114, -0.5264, -0.3990, -0.0715,
         -0.0458,  0.5233, -0.0051,  0.4671, -0.5267, -0.4031,  0.6627, -0.3929,
          0.1449, -0.1619, -0.5025, -0.0410, -0.0283,  0.2573,  0.0435,  0.1333,
         -0.0154,  0.5790,  1.9147,  0.8120,  0.5044,  0.4469,  0.2482, -0.7937,
          0.7269, -1.7465, -0.3696, -0.1836,  0.8436,  0.0779, -0.1338,  0.0762,
         -1.0968, -0.4078,  0.1003,  0.8324,  1.1538, -0.1068,  0.8544,  2.1808,
          0.0936, -0.5605,  0.9415,  0.4499,  0.1541,  0.4684,  0.1869,  0.2835,
          0.0364, -1.1584, -0.0195,  0.8486, -0.0340, -1.0968,  0.7395,  0.9414]],
       device='cuda:0') tensor(5.3618, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
977000 特征值优化 tensor(2.4387, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.7407, -1.1401,  0.0541, -0.3087, -0.1108,  0.2927,  0.8130,  1.0295,
         -0.2089,  0.3567,  0.7747,  0.1056,  0.2153,  0.0262,  0.0072, -0.1798,
         -0.1609,  0.4113, -0.3210,  0.0122, -0.2428, -0.0698,  0.0957, -0.0595,
          0.1066,  0.1305, -0.1088,  0.1043, -0.0034,  0.0653, -0.0498, -0.0060,
          0.0035,  0.0537,  0.9196,  0.3177,  0.2331,  0.2415,  0.1583, -0.1918,
          0.3970, -0.8005, -0.3747,  0.1829,  0.6711,  0.1676, -0.2970, -0.0827,
         -0.2242, -0.1223, -0.0972,  0.3220,  0.2030,  0.1766,  0.5004,  1.2334,
          0.9610, -0.5782,  0.5190, -0.2147, -0.2632,  0.4098,  0.2402,  0.0281,
          0.9219, -0.9047, -0.5785,  0.5212,  0.7381, -0.7161,  0.9682,  0.4310]],
       device='cuda:0') tensor(1.9364, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
978000 特征值优化 tensor(2.1073, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.1984e-01, -8.5440e-01, -1.8102e-02,  7.4322e-03,  2.4570e-02,
          4.0738e-01,  8.7302e-01,  1.0931e+00, -8.5097e-02,  4.7252e-02,
          8.9641e-01,  2.5052e-01,  1.3065e-01,  2.8858e-02,  1.0185e-02,
         -3.0137e-01, -2.1410e-01,  3.0315e-01, -4.0107e-01, -1.4874e-03,
         -1.5432e-01, -2.3267e-02,  2.6789e-02, -1.5461e-02,  4.8255e-02,
          1.1556e-02, -4.6981e-02,  6.6858e-02,  7.3277e-02,  6.5661e-04,
          2.7273e-02,  3.3565e-02, -7.5775e-02,  3.4517e-02,  8.1683e-01,
          2.5943e-01,  9.7074e-02,  1.9798e-01,  1.7547e-01, -1.6179e-01,
          3.7960e-01, -6.6643e-01, -4.1878e-01,  3.7291e-01,  3.7625e-01,
          1.6455e-01, -2.2080e-01, -8.5811e-02,  6.5541e-02,  5.4333e-02,
         -4.8521e-02,  2.5816e-02, -1.4638e-01,  1.8482e-01,  3.7521e-01,
          1.0011e+00,  9.8707e-01, -4.9232e-01,  6.0303e-01, -3.0673e-01,
         -2.8013e-01,  1.5577e-01,  9.8953e-03, -6.9727e-02,  9.3629e-01,
         -8.1993e-01, -3.9169e-01,  4.3906e-01,  9.2877e-01, -6.8242e-01,
          7.5696e-01,  3.2819e-01]], device='cuda:0') tensor(0.8252, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
979000 特征值优化 tensor(6.4215, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.4991, -0.9457,  0.9756,  1.3527, -1.1879, -0.2866, -0.3859, -1.4125,
         -0.4572,  0.0442,  0.3049,  0.2042, -0.2980,  0.6387, -0.2720,  0.0230,
         -0.4577, -0.3482, -0.1746,  0.0867,  1.2381,  0.0090,  0.6864,  0.7244,
          0.1363, -0.0402, -0.4339, -0.3735,  0.2519,  0.2856,  0.1424,  0.1578,
         -0.0265,  0.9806, -0.2940, -0.2736, -0.2510,  0.0796, -0.1043,  0.1369,
         -0.1818, -0.1926,  1.0370,  0.0193,  1.3621, -2.0597, -0.1943, -0.2158,
          0.5998,  0.3711,  1.3592,  1.0074, -0.8559,  0.2822, -0.9732, -0.4125,
          1.0650, -0.0060, -0.3900, -1.1374,  0.6947,  0.1325, -0.2452, -0.2214,
         -0.4225, -0.6284,  0.5361, -0.0163,  0.0588,  0.0786,  0.6989, -1.6375]],
       device='cuda:0') tensor(2.9525, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
980000 特征值优化 tensor(2.3200, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.7545e+00, -1.0791e+00,  1.3781e+00,  1.1095e+00, -3.8298e-01,
          1.9495e-01,  1.6351e-01, -6.7174e-01, -1.1492e-01, -4.0888e-01,
          4.4276e-01,  5.1401e-01, -4.0808e-01,  1.0805e-01,  4.8598e-02,
          1.8639e-01, -2.4046e-01, -3.0145e-01, -2.1967e-01,  2.7620e-01,
          1.0298e+00,  9.6519e-02,  1.3317e-01,  1.9764e-01,  1.2560e-01,
         -4.3402e-02, -1.8151e-01, -1.1075e-01,  3.8021e-03,  2.1208e-01,
         -1.9926e-02,  2.2596e-03, -1.1902e-02,  4.1333e-01, -1.2985e-01,
         -6.1781e-01, -1.4847e-02,  4.9961e-02, -1.3681e-02,  2.2706e-02,
         -1.3725e-01, -1.1864e-01,  9.1087e-01, -2.8480e-01,  1.1903e+00,
         -1.7122e+00, -4.1420e-02, -7.7940e-02,  7.1765e-01,  5.1309e-01,
          6.8348e-01,  5.1319e-01, -2.4414e-01,  1.8727e-01, -3.3396e-01,
         -1.3944e-01,  6.5445e-01, -2.6846e-01, -1.1904e-01, -5.6599e-01,
         -1.8941e-01,  1.8588e-01,  2.0841e-01, -1.5016e-01, -1.5517e-02,
         -9.1676e-03,  1.5560e-01,  3.6657e-02, -4.4709e-01,  3.7918e-01,
          1.0734e+00, -1.0124e+00]], device='cuda:0') tensor(0.8835, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
981000 特征值优化 tensor(2.1101, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.5749e+00, -1.2122e+00,  1.2900e+00,  1.1940e+00, -1.4264e-02,
          2.2611e-01,  2.3139e-01, -3.8464e-01,  4.2005e-02, -2.9447e-01,
          3.3734e-01,  4.9279e-01, -5.1049e-01, -1.6124e-02, -1.7865e-02,
          2.5251e-01, -3.4043e-01, -2.8631e-01, -2.1317e-01,  2.9098e-01,
          8.3766e-01,  1.1936e-01,  8.7548e-02,  1.6871e-01,  1.3360e-01,
         -3.3385e-02, -1.9691e-01, -1.5775e-01, -2.7225e-02,  2.3611e-01,
         -2.3398e-02, -1.7020e-02, -3.2401e-04,  3.3767e-01, -5.7564e-02,
         -5.5336e-01,  3.2000e-02, -1.0853e-02, -2.6959e-02, -2.4591e-02,
         -4.0157e-02, -1.4122e-01,  6.2047e-01, -6.4803e-01,  1.2582e+00,
         -1.7570e+00, -2.4316e-01,  4.4695e-02,  6.5554e-01,  5.1254e-01,
          5.2542e-01,  5.1705e-01, -2.3699e-01,  1.5497e-01, -1.6458e-02,
          4.9444e-02,  3.6092e-01, -2.2982e-01,  8.1278e-02, -4.0987e-01,
         -1.9507e-01,  7.7995e-02,  1.8588e-01, -8.6643e-02,  2.1985e-02,
         -2.9308e-04,  3.4415e-02, -1.0606e-02, -3.5507e-01,  2.5732e-01,
          1.0355e+00, -9.0152e-01]], device='cuda:0') tensor(0.8787, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
982000 特征值优化 tensor(10.9720, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.3706e-01, -1.7066e-01,  1.1587e+00, -3.0610e-01,  1.7396e+00,
          9.7287e-01,  5.4343e-01,  2.8106e-01,  5.0321e-01, -4.9334e-01,
          5.1645e-01,  1.0169e+00, -5.8072e-01,  3.8001e-01, -4.7210e-01,
         -2.3795e-01,  9.5176e-02, -2.8933e-01, -1.3660e-01,  9.6583e-01,
          2.0809e-01,  2.6455e-01, -5.3551e-01,  2.0098e-01,  7.8123e-03,
         -5.0106e-03, -3.6306e-01, -4.3132e-01,  2.7278e-01,  5.1725e-01,
          7.4649e-02, -2.4490e-01,  1.8114e+00,  1.1337e-01, -1.0144e+00,
          2.2778e-01,  1.9500e-01,  1.6021e+00,  1.9922e+00, -2.8685e-01,
         -7.8193e-01, -8.1532e-01,  2.8345e-01, -6.4163e-01, -1.1938e+00,
          1.9889e+00,  4.0247e-02, -3.7028e-01,  7.2005e-01, -4.3205e-01,
          1.4098e+00, -1.6019e-02,  3.0480e-01, -5.5067e-01,  5.0097e-02,
         -1.1370e-03,  1.3229e+00, -1.3809e+00,  5.7020e-01,  1.3153e-01,
          2.8476e-01,  1.4643e+00,  3.9250e-02, -6.4054e-01,  8.7620e-01,
          1.0551e+00,  1.9660e-01, -7.7942e-01, -5.9869e-01, -4.2514e-02,
         -1.2066e+00,  1.5331e+00]], device='cuda:0') tensor(6.4403, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
983000 特征值优化 tensor(2.8167, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.1522e+00, -8.0418e-01,  1.0140e+00, -4.7418e-01,  2.3651e+00,
         -1.1307e-01,  1.2996e+00, -2.5937e-01,  1.3753e+00, -8.5327e-01,
          1.3412e+00,  1.3159e+00, -1.7064e-01,  1.1996e-01, -2.8271e-01,
         -4.4428e-02,  7.9739e-03, -1.1130e-01,  1.4215e-01,  6.1665e-01,
         -2.6950e-02,  6.9958e-02, -1.7249e-02,  3.3464e-02, -1.2003e-01,
         -1.5007e-01, -1.5961e-01,  8.5141e-02, -1.5819e-03,  1.0488e-01,
         -2.6689e-02, -2.4621e-01,  9.4744e-01,  2.1724e-02, -3.0176e-01,
          1.3700e-02, -7.7596e-03,  8.0588e-01,  1.2729e+00, -1.4884e-01,
         -1.4850e-01, -2.1972e-01,  4.5346e-01, -3.6121e-01, -7.5445e-01,
          1.2146e+00, -1.4192e-01, -5.7877e-01,  6.7399e-01, -2.0081e-01,
          5.8926e-01,  8.4154e-03,  9.6694e-01, -1.2131e+00, -7.9605e-01,
          3.3989e-01,  8.7372e-01, -3.3713e-01,  9.9127e-01, -1.1661e-01,
          6.4366e-01,  8.0174e-01, -3.5979e-02, -3.4327e-01,  9.9357e-01,
          7.1389e-01,  2.9296e-01, -2.7777e-01,  2.7956e-01, -7.8273e-02,
         -6.6411e-01,  5.9292e-01]], device='cuda:0') tensor(1.4116, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
984000 特征值优化 tensor(2.1200, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 9.5856e-01, -8.1925e-01,  6.0301e-01, -3.7049e-01,  2.5447e+00,
          2.2004e-01,  1.2220e+00, -4.2059e-01,  1.5331e+00, -1.2474e+00,
          1.3743e+00,  8.8554e-01, -6.2371e-02,  2.5774e-01, -4.2962e-01,
         -1.8497e-01, -2.4449e-01, -3.4763e-02,  9.6439e-02,  1.4239e-01,
          4.4810e-02,  1.0733e-03,  2.9421e-02, -2.4895e-02, -2.3217e-01,
         -2.8210e-01, -1.1516e-01,  1.9055e-01,  2.4027e-03,  2.4121e-02,
         -1.8166e-02, -2.3084e-01,  7.8756e-01,  2.7678e-02, -1.3020e-01,
         -2.1434e-03, -9.8144e-02,  7.0169e-01,  1.1015e+00, -3.6562e-01,
         -9.5839e-02,  7.2757e-02, -4.3326e-01, -1.7054e-02, -7.7397e-02,
          5.1970e-01,  2.3503e-02, -3.7847e-01,  2.9846e-01, -5.9180e-03,
          2.9222e-01, -1.0548e-02,  1.1783e+00, -1.1564e+00, -7.1081e-01,
          2.4297e-01,  2.8547e-02,  7.6428e-02,  9.0574e-01, -4.8523e-01,
          3.9584e-01,  7.7669e-01,  4.4180e-02, -2.4102e-01,  7.9684e-01,
          6.5929e-01,  1.5659e-01, -3.2160e-01,  4.6270e-01, -3.3724e-02,
         -5.1209e-01,  3.6912e-01]], device='cuda:0') tensor(1.3041, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
985000 特征值优化 tensor(12.5470, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.1254e+00,  9.8486e-01, -8.6037e-01, -4.4288e-01,  1.4727e-01,
         -2.1253e+00, -4.6820e-01, -1.5822e-01,  1.2913e+00, -1.8274e+00,
          1.5685e-01, -4.3117e-01, -7.3248e-01,  4.5788e-02, -3.2628e-01,
          6.3421e-02,  1.4251e+00,  3.1137e-01, -3.6927e-02, -1.4887e-01,
         -7.1986e-01,  1.3952e+00, -1.7890e-01, -3.1098e-01, -6.5759e-01,
         -5.2100e-02,  2.8433e-01, -2.2477e-01,  1.4385e+00,  1.2067e-01,
         -1.2007e+00, -1.4170e-03,  9.2333e-03, -5.0575e-02, -5.6457e-01,
         -5.8117e-02,  4.1398e-02,  1.0042e+00, -2.0958e-02,  1.1123e+00,
         -5.4421e-01,  3.1518e-02, -2.3511e-01,  3.6161e-01,  5.0770e-01,
          6.3161e-01,  7.1782e-01,  3.9368e-01, -9.7019e-01,  7.3091e-02,
          2.7178e-02, -4.4987e-01, -3.7795e-01, -1.9142e-01,  1.2587e+00,
          4.7336e-01,  4.0063e-01,  7.7246e-01,  1.2327e+00,  4.3394e-01,
          1.3901e+00,  5.6468e-01, -3.5130e-01,  7.7600e-02,  5.9523e-01,
         -1.0255e+00, -7.5228e-01, -6.6953e-01, -1.4165e+00, -3.3123e-02,
          4.3724e-03, -2.0014e-02]], device='cuda:0') tensor(6.6217, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
986000 特征值优化 tensor(2.6969, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 3.0092,  0.7857,  0.0126, -0.6794, -0.1726, -0.7985,  0.2346, -0.0531,
          1.7883, -1.8169,  0.7889,  0.5807, -0.5561, -0.0031, -0.0266,  0.2321,
          0.6213,  0.1341, -0.0667,  0.0600, -0.5271,  0.5467, -0.0103, -0.0258,
         -0.1504,  0.0144,  0.0115,  0.0812,  0.5515, -0.1203, -0.2659,  0.0057,
          0.0059, -0.0282, -0.0190,  0.0169,  0.1603,  0.3203, -0.3451,  0.5619,
         -0.1714, -0.2561, -0.7963,  0.6691,  0.6720,  0.5676,  0.5500,  1.1197,
         -0.5647,  0.4282, -0.4209, -0.2668, -0.3365,  0.0806,  0.0432,  0.1063,
          0.0137,  0.1107,  0.4429,  0.0571,  0.5330,  0.3088,  0.2793,  0.0310,
          0.9721, -0.3611, -0.4431, -0.3668, -0.6808,  0.3522,  0.1584,  0.3548]],
       device='cuda:0') tensor(1.8817, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
987000 特征值优化 tensor(2.1128, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8672e+00,  4.6309e-01,  1.4000e-01, -9.3062e-01, -4.1703e-01,
         -1.8177e-01,  2.3132e-01,  2.0927e-01,  1.4089e+00, -1.7141e+00,
          6.9246e-01,  6.3979e-01, -4.2872e-01, -1.3923e-03, -9.2809e-02,
         -1.8694e-01,  3.3755e-01,  2.5652e-01, -3.8549e-01,  1.5860e-02,
         -4.1470e-01,  4.2589e-01,  1.3753e-02,  2.3855e-03,  9.1752e-02,
          1.8029e-01,  1.0412e-01, -7.8881e-02,  4.3369e-01, -1.8105e-01,
         -1.3130e-01,  5.1593e-02, -3.0779e-02, -1.9571e-02,  1.0307e-03,
          5.3952e-03,  1.1489e-01,  1.1858e-01, -4.6608e-01,  5.2850e-01,
          3.8639e-02, -1.6229e-01, -9.0258e-01,  5.7138e-01,  5.6351e-01,
          4.2861e-01,  4.8488e-01,  1.0519e+00, -6.2411e-01,  4.0491e-01,
         -9.5868e-01, -6.9652e-02, -1.6437e-01, -2.4171e-02, -9.0928e-04,
          1.2011e-03, -1.1618e-01,  1.0089e-01,  6.2436e-01,  6.8263e-02,
          6.3078e-02,  1.9448e-01,  1.6108e-01,  6.7686e-02,  1.0729e+00,
         -9.2706e-02, -4.4554e-01, -2.1399e-01, -5.0890e-01,  3.2027e-01,
         -2.0782e-01,  3.1601e-01]], device='cuda:0') tensor(0.8004, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
988000 特征值优化 tensor(4.9283, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.3686,  0.3748, -0.2998,  0.0944,  1.7838,  0.4593,  1.1030, -0.7821,
          1.1914,  0.1135,  0.8880, -0.2499, -0.2758, -0.0061, -0.0215,  0.3617,
         -0.2362, -0.1874, -0.0668,  0.0428, -0.1217,  0.2440,  0.0304, -0.2895,
         -0.2763,  0.0209, -0.4770,  0.0357, -1.0261,  0.2208,  0.6040,  1.1461,
          0.0779, -0.4025, -0.7014,  0.0819, -0.0755,  0.3035,  0.1383, -0.0272,
         -0.4373,  0.0713,  0.4403,  0.1811,  0.6840,  1.0155,  0.0820,  0.8824,
         -0.7782,  0.4962,  0.2267,  0.1981,  0.6531,  0.6858, -1.1172, -0.5262,
          0.4293, -0.0214, -0.0287,  0.0114,  0.9432, -0.3120,  0.0227, -0.2668,
         -0.3908, -0.7353,  0.1761, -0.1364,  0.3326,  0.2310,  0.0960,  0.4525]],
       device='cuda:0') tensor(3.0248, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
989000 特征值优化 tensor(2.1881, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2706, -0.2380,  0.2337,  0.1883,  2.1768,  0.5255,  1.4693, -0.7164,
          1.4010,  0.2539,  0.2837,  0.1163, -0.0742,  0.0250,  0.0200,  0.0832,
         -0.0241,  0.0148, -0.0286, -0.0426, -0.0102,  0.1215, -0.0140, -0.0440,
         -0.0958,  0.0673, -0.0315, -0.0080, -0.5193,  0.1368,  0.6430,  0.7495,
          0.0907, -0.3814, -0.5425,  0.0808, -0.2786,  0.1248,  0.1056,  0.0246,
         -0.0668,  0.0136,  0.0721,  0.0406,  0.3190,  0.3580,  0.0816,  0.3064,
         -0.8520,  0.1071, -0.1659, -0.1400,  1.0143,  0.3002, -1.7864,  0.2903,
          0.4936, -0.1769,  0.1584,  0.0826,  1.2549, -0.5069,  0.0235, -0.0506,
         -0.1684, -0.4685,  0.0768, -0.0547, -0.1419,  0.1326, -0.1861,  0.1650]],
       device='cuda:0') tensor(0.9321, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
990000 特征值优化 tensor(12.4511, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3088e+00, -2.1398e+00,  1.7828e+00, -1.4718e+00,  7.4637e-02,
          1.1519e-01, -1.8206e+00, -6.4509e-01,  1.1751e+00, -3.6181e-01,
          1.3750e+00,  1.2420e+00,  4.2605e-01, -3.3526e-02, -6.7526e-01,
         -9.3500e-01,  4.0357e-02, -2.0034e-02, -1.5651e-01, -8.0545e-04,
          4.2788e-01,  7.2220e-01,  6.7908e-01, -1.1066e+00,  1.5323e+00,
          5.5055e-01,  7.8962e-02,  1.4914e+00, -5.7978e-01,  1.0670e-01,
         -5.8489e-01,  1.5168e-01, -2.4216e-01,  9.8042e-02,  5.6297e-02,
         -9.6557e-01,  2.3956e-01,  9.0927e-02,  9.5253e-01, -7.9481e-01,
          2.3340e+00, -9.9560e-01,  9.1874e-01, -3.2910e-01, -5.5626e-01,
         -5.1416e-01, -1.1048e+00, -3.5578e-01, -5.1750e-01, -1.0780e+00,
          9.4987e-01,  1.0827e-01, -8.3116e-01,  1.4045e-01, -4.2971e-01,
         -2.0076e+00,  8.8443e-02,  4.7027e-01, -1.2505e+00, -1.2392e+00,
          8.4963e-01, -6.4616e-01, -3.6979e-02,  4.6075e-01,  7.7634e-01,
          3.9605e-01, -2.2269e-01, -2.2746e-01,  7.2000e-01,  3.8189e-01,
          3.5638e-01, -2.4581e+00]], device='cuda:0') tensor(6.8677, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
991000 特征值优化 tensor(2.4368, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 8.5150e-01, -1.1047e+00,  2.2218e+00, -1.6370e+00,  1.5244e-01,
          1.7669e-01, -7.4650e-01, -1.0540e-01,  1.5634e+00,  4.8395e-01,
          2.3292e+00,  2.0706e+00, -2.2851e-01,  1.0661e-01, -4.9327e-03,
         -1.1368e-03, -3.7671e-03,  1.1600e-02, -6.7929e-02,  2.8159e-02,
          2.0821e-01,  2.0874e-01,  1.8264e-01, -2.3591e-01,  6.0877e-01,
          4.5307e-01,  6.6315e-02,  6.2954e-01, -6.4811e-01,  1.9099e-01,
         -6.9758e-02, -1.2926e-02, -4.2258e-03, -2.1873e-02,  1.2402e-01,
         -3.2630e-01, -1.4734e-01, -1.5510e-02,  3.8176e-01, -9.6914e-02,
          1.5409e+00, -1.7755e-01, -1.1350e-01,  3.9825e-01,  3.1744e-01,
          1.6696e-01, -3.1960e-01, -3.0926e-01, -1.4071e-01, -6.7605e-01,
          9.5437e-01,  2.7745e-03, -3.1753e-01,  2.2930e-01, -8.3582e-02,
         -1.1681e+00, -2.3824e-01,  7.7649e-02, -5.5053e-01, -4.2710e-01,
          8.8447e-02, -1.0357e-01,  2.4167e-02, -4.0047e-02,  2.8959e-01,
          8.4550e-01,  5.9025e-01, -3.4132e-01,  1.1802e+00,  9.4353e-01,
          1.1756e+00, -1.5009e+00]], device='cuda:0') tensor(1.7349, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
992000 特征值优化 tensor(19.3854, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.1596,  0.9230, -0.0530,  0.4292, -2.3506,  0.5057,  0.6816,  0.2031,
          0.9655, -0.4017, -1.1758,  0.0809,  0.8343,  1.5405, -0.2093,  0.7776,
          1.1067, -1.2413,  0.8156,  0.7049, -0.5901,  0.3615, -0.4743,  0.4572,
          0.5468, -0.3856, -0.6340,  0.1014,  0.7143, -1.3594, -0.3404,  1.0296,
         -0.1929,  1.2938, -1.1376,  0.4741,  1.2883,  1.1278,  0.8075,  0.0818,
          0.5833,  2.4879,  2.3031,  0.6138, -0.2732, -0.5791,  0.3950,  1.1678,
         -1.6943, -1.1585, -1.2738, -0.3785,  0.2015,  0.6202, -1.1309, -1.5403,
          0.1081,  1.2960, -0.5622, -0.4398,  0.3893, -0.9996,  0.3496, -1.1188,
         -0.1503,  1.2919,  0.8794,  0.3165,  0.0956,  0.6434, -2.0188,  1.3937]],
       device='cuda:0') tensor(10.3685, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
993000 特征值优化 tensor(4.1325, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.5444,  0.1653,  0.7369,  1.2279, -1.2464,  1.1228,  0.9203,  0.1763,
          1.4209,  0.2635, -0.3487,  1.2619,  0.0846,  0.4506,  0.0160,  0.0626,
          0.4483, -0.3458,  0.0719,  0.1887, -0.1779, -0.4240,  0.0188,  0.0640,
          0.0970,  0.0580, -0.2542,  0.0553,  0.7338, -0.5397, -0.1406,  0.1357,
         -0.0266,  0.5464, -0.2567, -0.0207,  0.4032,  0.2762,  0.1382,  0.3717,
         -0.0125,  1.3260,  1.3691, -0.0218, -0.9226, -1.4064,  0.6623,  1.8075,
         -0.8394, -0.2668, -0.4022,  0.4435,  0.1607, -0.1775, -0.0635, -0.3696,
          0.1211,  0.6660, -0.1450, -0.1200,  0.2852, -0.8333,  0.3077, -0.5787,
         -0.7579,  0.5314,  0.5442,  0.3661,  0.0766, -0.0887, -0.8275,  0.9789]],
       device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
994000 特征值优化 tensor(2.1554, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 2.8817e-01, -1.6698e-02,  9.9556e-01,  1.2484e+00, -4.5308e-01,
          6.1310e-01,  4.6451e-01, -2.0875e-01,  4.3504e-01,  3.8173e-01,
         -1.5789e-01,  1.6738e+00, -1.8003e-03,  8.3064e-02, -1.7194e-02,
          1.1861e-02,  2.7951e-01, -8.7895e-02,  5.5672e-02,  5.8844e-02,
         -3.6005e-02, -4.2737e-01,  2.0593e-01,  1.4147e-01, -1.0364e-03,
         -1.1407e-02, -2.4921e-01,  5.3287e-02,  5.8491e-01, -4.1008e-01,
         -1.5135e-01,  5.8261e-02,  9.1362e-03,  3.8710e-02, -9.6127e-04,
         -5.4294e-03,  1.4614e-01,  1.0400e-01,  9.8904e-02,  3.1361e-01,
          8.8343e-02,  8.9043e-01,  1.2278e+00, -3.2423e-01, -7.9345e-01,
         -1.4652e+00,  7.1142e-01,  1.3131e+00, -7.0969e-01,  9.1228e-02,
         -4.3403e-01,  4.4405e-01,  2.1434e-02, -1.1084e-01, -1.6592e-01,
         -2.5739e-01, -3.9178e-01,  2.2811e-01,  1.7402e-02, -1.1041e-01,
         -3.7326e-01, -1.7316e-02, -1.5570e-01, -1.1953e-01, -1.8779e-01,
          3.7343e-01,  4.1187e-01,  3.0423e-01, -3.9251e-01,  8.9190e-02,
         -3.1578e-01,  7.1162e-01]], device='cuda:0') tensor(1.0156, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
995000 特征值优化 tensor(15.0804, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[-0.2169,  1.3191, -1.0420,  0.2288,  2.2692,  0.6397, -0.3841, -1.3662,
          0.6706, -0.6866, -0.4503,  0.5343,  0.7564,  1.4796,  0.2599, -0.8187,
          1.2920,  0.0237,  1.6854, -0.8025, -0.0342, -0.8924,  0.6189, -1.1901,
         -0.7626, -0.3911,  0.7208,  0.3818,  1.1359, -0.0489,  0.4616,  0.4984,
          0.6875,  0.2517, -0.3560,  0.1089,  0.5587, -0.9744,  0.0449,  0.1203,
         -0.2906, -3.1165, -1.0260, -0.0843, -0.8949, -0.5124,  0.6890,  0.9706,
         -0.0443, -0.6841, -0.5441,  0.7344, -0.8794,  0.7619,  1.8277, -1.4096,
          0.2368, -0.5765, -0.3072, -0.0153,  0.6903,  0.0738, -0.7781,  1.7393,
          0.3679, -0.4175, -1.1941,  1.1449,  0.7744, -0.9003,  0.8242, -0.5946]],
       device='cuda:0') tensor(8.1886, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
996000 特征值优化 tensor(3.9203, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.3914,  1.3596, -0.3024,  0.8425,  2.1352,  0.0523,  0.2729, -0.9757,
          0.1522,  0.1809,  0.2803,  1.5945,  0.1487,  0.4205,  0.2410, -0.2528,
          0.3538,  0.3032,  0.5709, -0.0731, -0.0563, -0.3601, -0.0272, -0.1829,
         -0.0282,  0.0118, -0.0037, -0.0061,  0.6546,  0.2514,  0.4192,  0.1651,
          0.2151, -0.0165, -0.0270,  0.0180,  0.2509, -0.2258,  0.0226,  0.0951,
          0.1616, -2.0991, -0.5399,  0.4641, -0.2700, -0.4607,  0.2400,  0.8369,
         -0.4583, -1.1924, -0.1790,  0.5583, -0.5665,  0.6701,  1.2308, -0.7255,
         -0.0945,  0.0864,  0.0173,  0.0095,  1.3189, -0.6300, -1.1795,  0.8514,
          0.4216, -0.1383, -1.0176,  0.4664,  1.2273, -0.6838,  1.7784,  0.3362]],
       device='cuda:0') tensor(2.5093, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
997000 特征值优化 tensor(2.1564, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.2931,  1.1532,  0.0717,  0.1299,  1.4010, -0.1940,  0.3231, -0.8971,
          0.0222,  0.1711,  0.3968,  2.4435,  0.0870,  0.2144,  0.2391, -0.2944,
          0.1408,  0.1708,  0.3302, -0.0407, -0.0802, -0.1016, -0.0448,  0.0041,
          0.0234, -0.0815,  0.0578, -0.0177,  0.5331,  0.0651,  0.3011,  0.2401,
          0.1850, -0.0224, -0.0394,  0.0717,  0.1746, -0.1962,  0.0299, -0.0355,
          0.1812, -1.4008, -0.6684,  0.4146, -0.1444, -0.3294,  0.1344,  0.7541,
         -0.1329, -0.9642, -0.5316,  0.3992, -0.4873,  0.5271,  1.0898, -0.8903,
         -0.1247,  0.0979, -0.0259,  0.0205,  1.3057, -0.7721, -1.1424,  0.8023,
          0.0484,  0.0624, -0.6170,  0.3799,  1.2434, -0.7062,  1.9808,  0.5315]],
       device='cuda:0') tensor(1.5888, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
已收敛，重新迭代
998000 特征值优化 tensor(14.5406, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 0.4176,  1.8080, -1.0060, -1.2019,  0.5251,  0.4814,  2.2447,  1.0154,
          1.5761,  0.7566,  1.0533,  0.7540,  0.6754, -0.5860, -0.2636,  0.8241,
         -1.3117,  0.7684,  0.1351,  2.0163,  0.0944,  0.0219, -0.4530, -0.1387,
         -0.1372,  0.8908, -2.0389, -1.9583, -1.4891,  0.5910,  0.1560, -0.4960,
         -0.2979, -0.2268, -0.8257, -0.0908,  0.9757,  0.6927, -0.5118,  0.5674,
          0.5584,  0.3275, -1.2006,  0.5592, -0.6564, -1.5167, -1.0554,  1.7867,
         -1.3534,  0.3910, -0.2234, -0.0115, -0.7581, -0.0343, -0.1117,  0.7630,
          0.8054,  0.9729, -0.1169,  0.5051,  0.4530, -1.2830,  1.6092,  0.4370,
         -0.9977,  2.5010, -0.0647, -0.2426, -0.4042,  1.4112,  1.7695, -0.3067]],
       device='cuda:0') tensor(7.0594, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
999000 特征值优化 tensor(4.0155, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>) tensor([[ 1.3247,  1.9701, -0.2210, -0.3683,  0.3301,  0.5901,  2.4775,  0.8257,
          2.6731,  0.2984,  1.8394,  0.0083,  0.0243, -0.0452, -0.0411,  0.6480,
         -0.8187,  0.2115,  0.0787,  1.0872,  0.0705, -0.0469,  0.0098, -0.0201,
         -0.1820,  0.1807, -0.9653, -0.8905, -0.9490,  0.0634,  0.0076, -0.0261,
          0.0049, -0.0109,  0.0155,  0.0388,  0.4458,  0.4070, -0.5102,  0.1694,
          0.4839,  0.1565, -0.3046, -0.3303, -1.1121, -0.9268, -0.3155,  2.0029,
         -1.8235, -0.0800,  0.0053, -0.0349, -0.4190,  0.1568, -0.2662,  0.3688,
         -0.0187,  0.3002, -0.1266,  0.3224,  0.7428, -0.7402,  1.0466,  0.0172,
         -1.2462,  1.3500, -0.2447, -0.0260, -0.1476,  0.5759,  0.7015,  0.2198]],
       device='cuda:0') tensor(2.3892, device='cuda:0', dtype=torch.float64, grad_fn=<DivBackward0>)
完成共1000000轮迭代 推荐参数如下：
收敛loss为： ('收敛', tensor(2.0627))
tensor([[ 3.5041e-01, -1.3163e+00,  1.8262e-01,  1.6284e-01,  2.0582e+00,
         -1.3294e-02,  2.1143e+00, -5.4449e-01, -1.4062e-01,  1.4369e-01,
         -1.1449e-01,  7.0534e-01, -2.8380e-01,  2.5341e-01, -2.7433e-02,
          1.9137e-01,  6.2503e-02,  6.8471e-02, -2.7986e-02,  7.1577e-03,
          7.3502e-01,  2.3852e-03, -6.6688e-03, -3.5578e-02,  2.8002e-02,
          8.6258e-02, -1.4954e-01, -2.6290e-01,  3.0862e-04,  2.3737e-02,
         -6.7084e-02, -6.8217e-01, -2.4915e-01, -2.0747e-02, -5.7870e-02,
         -2.1161e-01,  1.9033e-01, -1.0523e-01, -5.1089e-02,  5.4559e-02,
          1.0152e-01, -1.5364e-01,  3.9179e-01, -1.4909e-01,  1.3018e+00,
         -2.4421e-01, -2.9422e-01, -1.0876e-01,  1.2237e-01,  5.1080e-02,
         -1.9192e-01,  1.0808e-01,  3.4612e-01, -3.5490e-01, -7.0686e-01,
          3.9488e-01,  1.6768e-02,  1.4850e-02, -2.7017e-02, -2.6410e-02,
          1.2923e-01, -3.2200e-01, -5.6365e-02,  2.1777e-01,  1.1928e-02,
         -1.9985e-02, -2.2026e-01,  2.0847e-01, -3.7525e-01,  4.0351e-02,
         -1.6780e-01, -2.1836e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0635))
tensor([[ 1.1952e+00,  9.1249e-01,  1.0317e+00, -2.7915e-01, -1.1020e-01,
          1.8619e+00,  2.1187e-02, -3.1482e-01,  3.5561e-01, -3.8351e-01,
         -1.2937e-01,  2.0554e+00,  4.7655e-02,  6.0362e-02,  8.8871e-03,
         -1.0916e-01,  1.1122e-01, -2.0526e-01, -2.6672e-01, -1.4379e-01,
          6.7728e-02, -3.3192e-01,  9.8016e-02,  1.4062e-01,  8.0813e-02,
          5.4295e-02, -4.8184e-02, -4.6979e-02, -5.2933e-01,  1.6815e-01,
          2.7050e-02, -1.1621e-02,  1.4679e-02, -1.6590e-02, -1.2811e-01,
         -7.5801e-01,  6.1654e-02,  1.2552e-01, -1.1163e-04, -6.1470e-02,
          1.7072e-01,  1.9950e-02, -6.3344e-01, -2.0182e-01, -2.0147e-01,
         -6.6092e-01, -2.0607e-01,  7.9558e-01, -5.7665e-01,  3.4566e-01,
         -4.4240e-01, -4.2202e-01,  6.5046e-02,  1.9506e-01,  1.8577e-01,
          2.7963e-01, -3.0172e-01, -2.3490e-01, -3.0121e-03, -5.5208e-01,
         -2.0968e-01,  7.6589e-02, -1.7978e-01,  8.0418e-03, -1.1304e-01,
          1.2833e-01, -5.8900e-01,  1.6426e-01, -3.1527e-01,  4.8783e-02,
          2.4801e+00, -9.1518e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0636))
tensor([[ 3.1298e-01, -2.2604e-01,  4.9982e-01, -2.4420e-01, -2.7576e-01,
          1.8547e+00,  3.2772e-01,  1.9633e-02,  3.1503e-01, -3.3553e-01,
         -3.3689e-01,  4.6919e-01, -2.3270e-02, -6.3988e-03,  9.5478e-04,
          1.7764e-01,  2.5192e-01,  9.9836e-02, -5.8454e-02,  7.3704e-02,
         -7.1170e-04, -1.7070e-01,  2.3766e-01, -3.2674e-01,  1.0503e-02,
         -1.3128e-01, -5.1962e-02, -3.1203e-02,  1.0612e-02,  2.0402e-01,
         -1.0959e-01,  3.0409e-02,  1.2415e-02,  6.8267e-01,  3.9427e-01,
          2.1723e-02,  3.6035e-01, -1.5307e-01, -2.2077e-01,  1.8054e-01,
          1.4709e-01, -1.6951e-01, -1.7726e-01,  8.0490e-02,  3.6983e-02,
          3.8816e-02,  3.5957e-02, -1.0339e-01,  1.2036e-01,  1.5674e-01,
          1.0272e-01, -6.5954e-02, -1.4302e-01,  6.2497e-03,  1.1909e-01,
         -2.4177e-01, -7.3349e-02,  1.3740e-01, -1.1545e+00,  6.5873e-01,
          2.6266e-01,  5.9218e-01,  5.2411e-02,  6.6407e-02,  1.0274e+00,
         -5.4270e-02, -2.6151e-01, -2.7648e-01, -4.6099e-01,  7.2081e-02,
         -8.5886e-02,  4.4930e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0652))
tensor([[ 1.6220e+00, -1.1850e+00, -4.8186e-01, -5.5336e-01,  7.4372e-02,
          1.5377e+00,  1.7405e+00, -4.6284e-01,  8.4259e-01, -1.5920e+00,
          1.2043e+00, -4.5160e-01,  3.8022e-03, -2.0227e-02, -5.4523e-02,
          5.6959e-01,  8.1486e-02, -2.0130e-01, -2.4161e-02,  3.3699e-01,
          2.1565e-02, -1.6704e-02,  8.0218e-02,  8.1333e-02, -6.5965e-02,
          7.3500e-03,  3.5519e-02, -4.3531e-03, -5.3184e-03,  1.3034e-03,
         -2.3314e-02,  2.4178e-02,  4.3769e-03, -1.8577e-01,  6.0591e-01,
          1.0555e-01,  8.1180e-04, -7.7145e-02,  2.7995e-01, -1.4294e-01,
         -3.7037e-01,  2.1568e-01, -1.0524e-01, -5.7703e-01,  5.5973e-02,
          2.8353e-01,  2.1583e-01,  1.4369e-03,  2.8249e-01,  6.7927e-02,
          3.9139e-01, -4.3513e-02,  9.3709e-02, -2.2564e-02, -3.1711e-02,
          2.5287e-02,  9.6986e-01, -2.7796e-01,  5.6900e-01, -6.7828e-01,
         -9.6768e-01,  1.5828e-01,  2.7074e-01, -6.3633e-02,  6.2075e-01,
         -7.3955e-02,  5.7814e-02, -2.5303e-01, -2.8705e-01,  3.9533e-01,
         -2.9632e-01,  7.4672e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0700))
tensor([[ 1.4841,  0.0497,  0.5456, -0.3462, -0.0831, -0.0520,  0.5587, -0.7108,
          0.3698,  0.6056,  1.3586, -0.4335, -0.2824,  0.0323,  0.0286,  0.1880,
         -0.1530, -0.1128, -0.3651, -0.5581,  0.3382,  0.2445, -0.0230, -0.0621,
         -0.1497, -0.2122,  0.1975, -0.2176,  0.0916, -0.2165, -0.0215, -0.0724,
          0.0032, -0.0248,  0.0398, -0.0580, -0.0818,  0.2833, -0.0767, -0.0861,
         -0.5505, -0.0476,  0.2939, -0.2125, -0.1266, -0.8753, -0.6154, -0.4355,
          0.7205, -0.3377,  0.1701,  0.0069,  0.0145,  0.0223,  0.0075,  0.0140,
         -0.1912,  0.1249, -0.0923, -0.0756,  0.2604,  0.0532, -0.1365, -0.0606,
         -0.2673,  0.3379, -0.2575,  0.0379, -0.3322,  0.4537,  0.1673,  0.1273]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0708))
tensor([[ 0.8880, -1.1769,  0.3827, -0.4053,  0.1979,  0.1745, -0.2016, -0.2508,
          0.6014,  0.0748,  0.8892,  0.7924,  0.2079, -0.0248,  0.0584, -0.0406,
         -0.0536,  0.2443, -0.4296, -0.0082, -0.2348,  0.1600, -0.0472, -0.0337,
          0.2266,  0.0481, -0.0125,  0.0836, -0.0228,  0.0947, -0.0206, -0.0196,
          0.0854, -0.0176, -0.0348, -0.1234,  0.1224,  0.2030, -0.0420,  0.0351,
         -0.0630, -0.7480, -0.0320,  0.3678,  0.3604,  0.2428, -0.2656, -0.5475,
          0.4948, -0.1453, -0.1332, -0.0978, -0.0738,  0.0562, -0.0215,  0.0227,
          0.1693, -0.0647, -0.0779, -0.0870,  0.5835, -0.3807,  0.4997, -0.3738,
         -0.4836,  0.1405, -0.0153,  0.1204, -0.1581, -0.1584,  0.6811,  0.5031]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0709))
tensor([[ 0.0311,  0.2297, -0.4503,  0.0443,  0.0397,  2.1715,  1.7390,  0.1373,
          0.3702, -0.0093,  1.9475,  0.5439,  0.1218, -0.0150,  0.0023,  0.0524,
         -0.0785, -0.1913, -0.2774, -0.2617, -0.1821,  0.0589,  0.1225, -0.1325,
          0.0362,  0.1372,  0.0804,  0.0038,  0.0122, -0.1941, -0.0205,  0.0195,
          0.0737,  0.0311, -0.7685,  0.0311, -0.6430, -0.2097, -0.0106, -0.0173,
          0.1657, -0.0091,  0.7468, -0.2639,  0.2178, -0.7282,  0.0749, -0.2915,
         -0.2506,  0.2761,  0.2134, -0.0611, -0.0546,  0.0564, -0.0415,  0.0483,
         -0.0916, -0.3554,  0.8426, -0.1918,  0.3911,  0.7278, -0.3620,  0.1164,
          1.9265, -0.8906, -0.0217, -0.0458, -0.5689,  0.2595, -0.6363,  0.2572]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0709))
tensor([[ 1.8239e-01, -1.3289e-02,  1.7880e+00,  2.1844e-01, -2.3730e-01,
          2.2231e-01,  6.4310e-01, -1.4292e+00, -2.3136e-02, -3.3985e-01,
          2.0764e+00,  7.0335e-01, -1.9077e-02, -2.6525e-02, -5.5233e-03,
          8.8605e-03,  1.9601e-02,  4.3305e-02, -1.0213e-01,  1.4055e-02,
          1.1650e-03,  9.5616e-02,  1.4791e-01,  3.1903e-02,  1.1628e-01,
          2.0572e-02, -3.4061e-01, -2.9896e-01, -3.0231e-01,  6.2331e-01,
         -1.2785e-01,  7.5859e-02,  8.8732e-02, -2.3063e-02, -3.7188e-02,
          5.1528e-02, -7.3512e-01,  3.0357e-01,  2.2595e-01,  1.4879e-01,
          8.1210e-02,  5.9687e-02,  3.8090e-03,  6.7781e-02, -3.6851e-02,
          1.1239e-01, -5.5557e-02,  8.4352e-01, -5.4815e-01,  6.5493e-01,
          5.6936e-01, -6.0589e-01, -1.7212e-01,  3.5315e-03, -2.6410e-02,
         -7.9020e-02, -3.4066e-01,  1.9168e-01, -2.9969e-01, -1.8376e-01,
          1.1071e+00,  2.3640e-01, -6.0476e-01,  7.3375e-02, -4.0306e-01,
          1.2160e-01, -2.5096e-02, -7.2155e-02,  1.7219e-01,  2.9940e-01,
         -4.4290e-01,  2.7360e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0716))
tensor([[ 2.2416e+00, -1.0772e+00,  1.1362e+00, -1.0838e+00,  1.5044e+00,
          1.6837e+00,  7.2665e-01, -4.4444e-01, -6.4802e-02, -1.2307e-02,
         -9.2381e-01,  6.6179e-02,  3.9648e-01, -1.0161e-01,  2.7543e-02,
         -2.8942e-01,  1.8714e-02,  1.0803e-01,  1.4041e-01,  3.0461e-01,
         -4.2876e-01, -1.4104e-02,  5.5229e-01, -5.0151e-01,  1.2271e-04,
         -9.6454e-03, -3.2537e-02,  6.0691e-02, -1.1928e-02, -4.7825e-03,
         -9.4249e-01,  1.3879e-02,  4.0030e-02,  2.1464e-01,  3.5316e-02,
          6.5563e-02,  1.8564e-01, -1.1448e-01, -3.8336e-02,  4.1286e-03,
          3.4139e-01, -2.3907e-02,  3.5262e-01,  1.4160e-01,  1.1741e-01,
         -8.7715e-01, -8.1357e-02, -6.4292e-01,  1.5646e-01,  1.8377e-01,
          5.6423e-01, -9.9447e-02,  4.9625e-01,  8.7404e-01,  5.1785e-01,
         -2.4560e-01, -3.0162e-01,  2.4951e-01, -6.3702e-01, -1.4405e-01,
         -8.7352e-02,  2.4065e-01, -5.6013e-01, -5.8996e-02, -3.8760e-01,
          1.8484e-01, -3.4295e-02, -1.4888e-02,  4.1767e-01, -2.8143e-02,
         -1.1918e-01,  8.5702e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0716))
tensor([[ 0.6751, -0.1435,  0.0799,  0.0071,  2.2915,  1.9156,  0.3565,  0.7418,
          0.1026,  0.1373,  1.8858, -0.5988, -0.0240, -0.7290,  0.1338, -0.1180,
          0.0072, -0.0616, -0.3743,  0.0359, -0.0141, -0.0268,  0.0297, -0.0218,
          0.0555, -0.0032,  0.0247, -0.1184, -0.0303,  0.0065,  0.2777,  0.0827,
         -0.1582, -1.1334,  0.0243, -0.0995,  0.1653,  0.0114,  0.0428, -0.0634,
          0.0859,  0.0470, -0.4309,  0.2010,  0.2202,  0.0579,  0.1123, -0.1109,
          0.0609,  0.0991,  0.1602, -0.0938, -1.2032,  0.2850,  0.6390,  0.3655,
          0.8528,  0.8013,  0.0908, -0.2664, -0.6636, -0.1794,  0.2651, -0.5291,
         -0.0545,  0.1744, -0.0786, -0.1351,  0.6553, -0.6297,  0.4943,  0.0607]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0718))
tensor([[ 1.5111,  0.9925,  2.2613,  1.3796, -0.3022, -0.0956,  2.4328, -0.3937,
          1.5108, -0.6087, -0.0320,  0.7220,  0.0047,  0.0794,  0.1708, -0.2321,
          0.3418,  0.1183,  0.0223, -0.4328,  0.0279,  0.6073,  0.0778, -0.0344,
          0.1375, -0.1288, -0.1062, -0.0272, -0.7704,  0.7714,  0.2189,  0.0920,
          0.0925, -0.1288, -0.0027, -0.0333,  0.4454, -0.0815, -0.5715,  0.2647,
         -0.1081, -0.1060,  0.7707, -0.6828, -0.2589,  0.8144, -0.4658,  1.4867,
         -1.8945,  1.6674,  0.9882, -0.0259, -0.3029, -0.0852,  0.0758, -0.1378,
         -0.1243, -0.0206,  0.1722, -0.1298, -0.3243,  0.5923, -0.0528, -0.0271,
          0.2189,  0.8483, -0.1050, -0.2272,  0.0344, -0.0842, -0.1645,  0.2413]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0728))
tensor([[-4.7913e-01,  2.0410e-01,  1.4575e+00,  1.1762e+00,  2.5358e-01,
          1.6748e+00,  2.8676e+00, -1.2447e-02, -5.7319e-02,  2.4936e-01,
          1.5986e-01, -1.1777e-01,  4.7994e-02,  4.4078e-02,  5.8582e-04,
          2.4451e-02, -1.0962e-01,  2.4294e-02, -3.1940e-02,  1.8184e-02,
         -1.5574e-01, -2.9208e-01, -4.4963e-01, -3.1032e-01,  1.3136e-01,
         -1.3863e-01,  3.1009e-02, -3.4964e-02,  4.0047e-02, -3.2221e-01,
          1.0545e-01, -6.5890e-01, -1.5389e-01, -2.1766e-01, -2.7372e-02,
          1.0543e-02,  5.8567e-01,  2.1376e-01,  1.9964e-02, -1.3598e-02,
          5.6206e-02, -1.7805e-02, -3.2935e-01, -2.6109e-01,  3.1413e-01,
          1.0282e-01,  3.7725e-02, -4.2262e-02,  6.3437e-01,  7.3756e-02,
         -1.3283e-01,  3.3007e-01,  1.1497e+00,  9.4697e-02,  4.8296e-01,
         -3.3019e-01, -1.1703e+00,  1.7624e-01,  5.5790e-02, -9.3725e-02,
          8.1530e-01, -6.4823e-01,  2.4069e-01,  1.0181e-02, -3.5436e-02,
          1.9237e-01, -5.7577e-02, -1.9067e-02,  4.6245e-01, -2.0973e-01,
         -6.8379e-02,  9.6760e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0730))
tensor([[ 4.0372e-01,  1.6365e-01,  2.7727e+00, -2.1821e-01,  2.4676e-01,
          3.4054e-01,  1.4076e+00,  9.0707e-01,  2.1007e+00, -1.0383e+00,
          1.9324e-01,  4.5805e-01,  5.9908e-03, -1.5433e-02, -9.0446e-02,
         -1.2480e-01,  2.7920e-01, -9.0305e-02, -1.6131e-01, -3.1908e-02,
          2.0511e-02,  8.8910e-02,  2.5766e-01,  1.6581e-01, -5.0492e-01,
         -1.6832e-01,  6.8298e-02,  3.4433e-01,  1.9175e-01, -5.7995e-01,
         -2.0352e-02,  2.2141e-01, -2.5509e-01,  3.9612e-01, -7.3065e-01,
         -3.3294e-01, -4.1258e-01,  1.0033e-01, -1.8509e-01,  7.9951e-02,
          2.6195e-01, -8.1562e-02, -2.0840e-01,  1.3507e-01,  1.5058e-01,
         -1.7890e-01,  1.0332e-01, -3.5825e-01,  1.2882e-01,  9.3863e-01,
         -3.3872e-01, -1.7675e-01, -5.5867e-02,  5.4114e-02,  5.7573e-02,
          2.8643e-02,  5.8204e-01, -3.7394e-01,  1.2828e+00,  3.7472e-02,
          1.1045e+00,  2.3403e-01,  8.8811e-01, -6.0396e-01,  6.7798e-01,
         -7.4650e-01, -1.7669e-03,  3.7956e-01,  1.0413e+00, -7.8213e-01,
         -8.3891e-02, -1.1837e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0730))
tensor([[ 0.3612,  0.1334,  0.4771,  0.0268,  0.1913, -0.0896,  1.5796, -0.1932,
          0.8823,  0.8460,  1.2255,  1.7579,  0.0047,  0.0460,  0.0189, -0.1544,
          0.3128, -0.1668, -0.0293,  0.0543,  0.0212,  0.1458,  0.0174,  0.0548,
         -0.2226,  0.2143, -0.1717, -0.3108,  0.0089,  0.1201, -0.0186, -0.1703,
          0.1990, -0.0487,  0.0666, -0.0244, -0.2171,  0.4553, -0.2006, -0.3492,
         -0.4146, -0.4920, -0.0568,  0.0480,  0.0865, -0.1456,  0.0945, -0.5804,
          0.4433, -0.1847, -0.3440, -0.0620, -0.0335,  0.0433, -0.0055, -0.0048,
         -0.1087,  0.2195, -0.2242, -0.2316,  1.5774, -0.5328,  1.0414, -1.4835,
          0.6831, -0.1734,  0.3466, -0.0369,  1.3455, -0.6503, -0.3669,  0.4698]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0740))
tensor([[ 0.7923,  1.1965,  0.5312, -1.4669,  0.5008, -0.0679,  0.0058,  0.3625,
          0.4803,  0.2518,  1.3769, -0.2362,  0.1669, -0.0560, -0.0421, -0.0215,
         -0.0060,  0.1101,  0.0183,  0.0292,  0.2608,  0.1220, -0.0309,  0.1095,
          0.4377,  0.4522,  0.0675, -0.2025, -0.0173, -0.0612, -0.1177,  0.1975,
         -0.5240, -0.0221,  0.1460,  0.1107, -0.0134,  0.0336, -0.0231,  0.0205,
          0.0608,  0.0262,  0.0392,  0.4755,  0.3945, -0.0243,  0.5229, -0.7294,
          0.4801, -0.2002,  1.0990,  0.1023,  0.4893, -0.1747,  0.1128,  0.5093,
         -0.0862,  0.0646,  0.0269, -0.0631,  0.1748, -0.0711,  0.5381, -0.3137,
         -0.2955, -0.2512, -0.0405,  0.2683,  0.4259, -0.4240, -0.2029,  0.0133]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0740))
tensor([[ 9.4496e-01, -8.8688e-01,  1.0774e-01,  2.6323e-01,  4.9676e-02,
          2.0870e+00,  1.3438e+00, -8.2761e-01,  5.0454e-02,  1.2664e-01,
          1.4251e-01,  9.4759e-01, -3.0515e-01, -5.2441e-02,  7.3660e-02,
         -3.5402e-01, -2.3683e-01,  2.0135e-02, -1.1435e-02, -1.0668e-01,
          2.8777e-01,  4.2717e-02,  9.1914e-02,  9.4955e-02,  4.8451e-02,
         -8.8278e-02, -6.6783e-02, -9.5555e-02,  3.1747e-02,  5.3936e-03,
         -2.0569e-02, -1.6898e-03, -7.7666e-02,  3.5110e-02,  7.4547e-01,
         -4.2451e-01, -4.1571e-01,  3.9107e-01,  2.2556e-01, -9.4209e-02,
         -2.8527e-01,  3.6362e-04, -1.2437e-01,  3.5083e-01,  3.5451e-01,
          8.8616e-02, -3.1726e-01, -2.5187e-01,  2.9402e-01,  2.4854e-02,
          3.0790e-02,  4.7165e-02,  6.4745e-02, -1.0120e-02, -5.9423e-02,
          5.8289e-02,  4.1208e-01, -5.9687e-01,  1.2024e+00,  2.5545e-01,
         -3.3896e-01,  3.9341e-01, -1.3902e-01, -2.3510e-01,  1.0056e+00,
         -6.7976e-01,  1.1357e+00, -3.9925e-01,  6.8859e-01,  4.3456e-01,
         -3.2424e-01, -8.4152e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0742))
tensor([[ 5.2597e-02,  3.7733e-01,  1.1430e+00,  1.5647e-01,  2.3821e+00,
          5.7831e-02, -3.8527e-02, -1.0697e-02, -8.2715e-01,  5.2518e-01,
         -8.3730e-03,  2.4319e+00, -5.0656e-02,  3.3315e-01,  1.7626e-01,
          2.2803e-02,  1.1926e-03, -5.2338e-03,  4.0993e-04, -2.8481e-04,
          7.7947e-02,  3.1716e-01, -7.9243e-02,  1.5046e-02,  1.2113e-01,
         -2.7472e-01,  3.6033e-01, -5.6615e-02, -4.0869e-01, -2.1406e-03,
         -3.7718e-01, -5.8846e-02, -2.3397e-02, -2.5371e-02, -1.1176e-01,
          8.1307e-02, -2.2169e-02, -7.2776e-04,  2.4769e-01,  1.7534e-02,
         -1.7604e-02, -1.0613e+00, -2.9188e-01,  2.0988e-01,  1.3564e-02,
         -7.4294e-02,  9.7386e-02,  1.2005e+00, -5.7034e-01, -5.4569e-01,
         -1.4137e+00,  1.0389e+00, -7.2859e-01,  6.6600e-01, -8.1058e-02,
          7.3921e-02, -2.3426e-01,  1.3934e-01, -4.0494e-01, -3.7625e-01,
         -1.1061e-01,  9.5219e-02, -1.2672e-02,  2.4308e-03, -8.6210e-02,
         -5.0718e-02, -1.2081e-02, -1.8789e-01,  8.6077e-02, -2.1021e-02,
          5.6116e-01,  7.7705e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0746))
tensor([[ 0.7326, -0.3657,  0.0314,  0.0907, -0.2993,  0.5255,  1.3729,  0.5784,
          0.4817, -0.6656,  0.2432,  1.3973, -0.3771, -0.1432,  0.1974,  0.3975,
          0.3094, -0.0984,  0.1926, -0.3704, -0.1728,  0.0567, -0.0045,  0.0105,
         -0.0524, -0.0111,  0.0121,  0.1039,  0.0768, -0.0778,  0.2263,  0.0207,
         -0.0491, -0.0127, -0.2485, -0.2469,  0.1897, -0.0354, -0.0079, -0.0233,
         -0.0208,  0.0229,  0.4986, -0.0606, -0.1365,  0.5121,  0.2940,  0.1451,
          0.1491,  0.1289, -0.1657, -0.1024, -0.4744,  0.0779, -0.2056, -0.2242,
          0.1970,  0.0135,  0.1896, -0.2355, -1.4485,  0.0320, -0.2536,  0.0581,
          0.1535, -0.1203, -0.0640,  0.1592, -0.2957,  0.1471, -0.3293, -0.0536]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0750))
tensor([[ 3.1539e-01,  5.3753e-01,  1.7918e+00, -6.8576e-01,  1.2444e+00,
          2.8558e-01,  1.2162e+00, -2.7640e-01,  3.8848e-01, -5.0704e-01,
          2.1007e-01,  2.0321e+00, -7.8131e-02, -1.9605e-01, -4.2637e-01,
         -3.0672e-02, -1.8923e-02,  2.9908e-02,  4.7454e-02,  3.9347e-02,
          6.9592e-02, -5.2715e-01,  3.2683e-02, -7.9750e-02, -1.0699e-01,
          1.8084e-01,  2.9478e-01,  2.1565e-01,  5.3709e-03,  6.5504e-01,
          2.2011e-01, -2.0095e-01,  5.9015e-02, -1.8768e-02,  3.9189e-02,
          2.4429e-01,  1.0357e+00,  6.0670e-02, -5.7290e-02,  9.9121e-02,
         -1.6139e-03, -2.4162e-01, -2.2396e-01, -8.4729e-02,  2.6563e-01,
         -2.6936e-01,  2.1105e-01,  3.7175e-02,  9.1319e-01,  4.8325e-01,
         -3.7424e-01, -4.0652e-01, -1.0548e+00, -1.1876e-01,  8.1211e-01,
          8.7461e-02, -9.3672e-02,  6.1792e-02, -3.3037e-02,  1.3918e-01,
          2.2578e+00, -8.5403e-02,  1.1922e+00, -6.6407e-01, -2.1843e-01,
          1.6715e-01,  2.3955e-01, -2.0789e-01,  3.7245e-01, -1.8892e-01,
          1.5075e+00, -5.1982e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0751))
tensor([[ 1.8313e+00, -1.4470e+00,  1.2584e+00, -9.0184e-01,  1.9784e+00,
          2.1081e-02,  4.8640e-01,  2.5837e-01,  3.7925e-01, -1.6104e-02,
          2.5891e+00,  3.1888e-01,  3.7939e-01, -2.0269e-01,  5.1738e-01,
          9.8128e-02,  7.9217e-02, -3.0117e-01,  1.8607e-01,  2.2756e-01,
         -4.0018e-01,  1.8722e-01, -5.3461e-02,  4.7837e-02,  1.2546e-01,
          8.5023e-02, -7.4265e-02,  5.5886e-02, -7.4216e-02, -2.0687e-01,
          3.5709e-01, -6.1704e-01,  2.7578e-02, -1.0932e-01, -1.3440e-02,
         -3.0484e-03, -8.6997e-02,  1.5017e-02,  1.6492e-02, -8.0343e-03,
         -7.4161e-01, -2.1261e-02,  5.4326e-01,  3.7411e-01,  1.6755e-01,
         -5.7658e-01, -2.2896e-01, -1.0779e-01,  2.7290e-01,  2.8318e-01,
          9.3460e-02, -2.4608e-01, -1.4172e-01, -5.5759e-01, -7.4390e-01,
          9.1058e-01, -1.9576e-01,  3.8697e-02,  2.3381e-01, -7.6792e-02,
          5.4118e-01, -3.6269e-01, -5.3805e-01, -2.1965e-01, -4.3367e-01,
          1.7050e-01,  4.0827e-02, -2.5756e-03, -1.7930e-03,  9.5394e-01,
         -8.3019e-02,  7.4417e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0753))
tensor([[ 1.1583,  2.1623,  0.4072, -0.0560, -0.1164,  1.1536, -0.2406,  0.0383,
          2.7736,  2.5973,  0.0777,  1.6357,  0.9095, -0.0379, -0.1163, -0.0191,
          0.0035, -0.0213, -0.0196,  0.0673,  0.7210, -0.0545, -0.0391, -0.2219,
         -0.0269,  0.4399, -0.3145,  0.0380,  0.2024, -0.0778, -0.0211, -0.0052,
          0.0303,  0.3101, -0.1301,  0.0550, -0.0450,  0.0792, -0.8787, -0.4489,
         -0.1598, -0.2191,  0.6517,  1.0298, -0.2366,  0.9679,  0.4174,  0.5426,
         -0.3616, -0.5240,  0.8802, -0.6040, -0.2362,  0.1464,  0.0961, -0.1272,
          0.1861,  0.2526,  0.5717,  0.2905, -0.0696,  0.0377,  0.0123,  0.0356,
         -0.0237,  1.0251, -0.3437,  0.4553, -0.4246,  0.2376, -0.4493,  0.3988]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0756))
tensor([[ 1.7116e-01, -5.0072e-01,  8.1802e-01, -3.6936e-01,  1.6168e+00,
         -2.7288e-01,  3.2885e-01,  4.8943e-01,  1.3137e+00, -2.5812e-01,
          3.5407e-01,  1.2091e+00,  7.9425e-02,  7.7825e-02, -1.4268e-01,
          1.1840e-01,  2.2573e-01, -7.9076e-02,  6.5477e-02, -1.6659e-02,
          1.0992e-01,  7.4489e-02,  2.1012e-02,  3.8245e-02,  2.3718e-01,
          1.7829e-01,  2.6272e-02, -5.0465e-02, -7.2770e-02, -4.8634e-02,
         -6.3423e-01, -5.3962e-01,  1.8003e-01, -1.4208e-01,  2.6596e-02,
          8.0649e-02,  4.9136e-01,  4.7774e-02, -3.1418e-01,  5.7389e-02,
         -1.5784e-02,  5.1496e-01, -4.8488e-01,  4.4593e-01, -2.0010e-01,
          2.5614e-03, -5.4873e-02, -1.6346e-01,  1.6202e-01,  1.4792e-01,
          1.2719e-02, -9.3252e-04,  1.8376e+00, -5.6219e-01,  5.8390e-01,
          1.3199e-01, -5.3113e-02, -7.4994e-02, -1.0048e-01,  7.5235e-02,
          2.5149e-01,  8.4615e-02, -9.1256e-02, -5.3387e-03, -9.7963e-02,
          4.4593e-01,  8.6845e-01, -1.5064e-01, -6.3711e-02,  3.9182e-02,
          1.6659e+00,  1.2881e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0758))
tensor([[ 0.9088,  1.3823,  0.3754, -0.1264, -0.1325, -0.4069,  0.0176, -0.2492,
          2.1473,  0.5433,  0.1647,  0.0923, -0.3840, -0.0154, -0.0416,  0.0775,
         -0.0351, -0.2490, -0.2505, -0.2692, -0.2505,  0.1044, -0.1203, -0.1620,
         -0.2428, -0.2800,  0.0338, -0.0793,  0.0615,  0.0533, -0.2044,  0.0460,
          0.0084,  0.2093, -0.0618,  0.0156, -0.0143, -0.0308, -0.1300, -0.0297,
          0.0701, -0.0282,  0.3108,  0.2643, -0.3712,  0.0554,  0.1760, -0.2269,
         -0.0735, -0.0529,  0.0786, -0.2705,  0.2090,  0.5211, -0.0412,  0.0568,
         -0.3973,  0.1045,  0.7106, -0.1156, -0.1277,  0.1065,  0.1116, -0.0595,
          0.2856, -0.3744, -0.9141,  0.3935, -0.1104,  0.2298,  0.0207, -0.0142]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0760))
tensor([[ 1.8178e+00,  1.4728e+00,  1.4875e-02, -3.9693e-01,  2.3710e-01,
          7.0794e-01,  8.1126e-01,  5.3699e-02,  5.4323e-01, -1.0304e+00,
          9.9536e-01,  1.5203e+00, -2.3263e-02, -3.1447e-02,  4.0431e-02,
          4.2006e-01, -5.9433e-01, -2.0282e-01, -3.6907e-01, -7.9870e-02,
          1.5749e-04,  1.3558e-01,  9.5620e-03, -1.3095e-01, -1.4814e-02,
          4.0995e-02,  7.3072e-02,  8.7340e-03, -3.3455e-02,  1.0120e-01,
         -2.4979e-02, -1.4185e-02,  1.8617e-02,  3.5310e-02,  4.8502e-01,
          5.1041e-01,  1.3187e-01, -4.7261e-01, -3.3557e-01,  1.2868e-01,
         -3.1087e-01, -7.1399e-02, -8.5827e-01,  6.0376e-02,  6.3064e-02,
         -7.1522e-01, -9.1785e-03, -9.5623e-02,  2.4046e-02,  1.1563e-02,
         -2.1510e-01,  3.3782e-03, -2.7470e-01,  1.6694e-01,  4.2692e-01,
         -1.5936e-01,  4.7853e-01, -2.0884e-01,  4.2701e-01, -4.8378e-01,
         -4.7816e-01,  1.7297e-01,  2.1661e-01,  3.7491e-02,  1.2447e+00,
         -5.3196e-01, -9.5779e-01,  6.5897e-01,  2.1248e-01,  7.2276e-01,
          4.8567e-01, -5.0494e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0760))
tensor([[ 0.5380,  1.5123,  1.6321,  0.7882,  0.3933,  0.4287,  1.2868,  1.4026,
          0.0428, -0.0739,  1.5907,  0.0447,  0.4633, -0.0723,  0.0109,  0.1163,
         -0.0637,  0.0962,  0.0873, -0.0228,  0.4379, -0.4059, -0.2357,  0.3341,
          0.0126,  0.0566,  0.0263, -0.0865, -0.0425, -0.7600, -0.0146,  0.2846,
         -0.4239, -0.3231,  0.0500, -0.0034, -0.1578, -0.1520, -0.0130, -0.0080,
         -0.1977, -0.0032,  0.1020,  0.3562,  0.4522, -0.3506,  0.2503, -0.1512,
          1.2788, -0.0626,  0.8082,  0.4407,  0.2390, -0.2066,  0.3328,  0.3579,
         -0.1527,  0.1067,  0.0440,  0.0134, -0.3012,  0.1870,  0.1932, -0.0467,
         -0.0106,  0.0419,  0.1745, -0.1000,  0.3485, -0.0476, -0.0627,  0.0640]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0761))
tensor([[-8.5580e-01,  2.4796e-02,  5.1680e-02,  1.7046e-01, -3.9337e-01,
          1.3677e+00,  1.4953e+00,  5.0994e-02,  2.4082e-01, -1.0247e+00,
          1.1973e+00,  1.3169e+00,  9.5817e-02, -5.1831e-02,  6.8904e-02,
          6.5740e-02,  5.6182e-02,  8.7834e-02, -9.9229e-02, -7.7121e-02,
          1.1698e-01,  1.1444e-03,  2.5178e-01,  9.8493e-02,  3.4763e-03,
         -6.9591e-02, -1.0553e-01,  6.0915e-02, -5.5355e-03,  2.5256e-02,
          8.6427e-02, -1.5647e-01, -1.0451e-01, -1.2091e-01,  2.6052e-01,
          6.4479e-01,  3.8916e-01, -1.9996e-02, -5.0691e-02,  6.6549e-03,
         -9.6275e-01, -2.3440e-01, -9.3877e-02, -2.6253e-01,  3.9502e-01,
         -2.4277e-01, -7.8477e-02, -2.4959e-01,  1.5850e-01,  1.5898e-01,
         -4.8524e-02,  3.2172e-02, -9.0692e-03, -1.2298e-01,  4.3145e-02,
         -1.8509e-02,  2.6925e-01, -1.0609e-02, -6.9001e-01,  8.7188e-01,
         -3.9215e-02,  4.4137e-01, -2.3559e-01,  1.2420e-01,  1.3263e+00,
         -6.0740e-01, -1.2388e+00,  5.6637e-01,  6.0949e-01,  7.4846e-01,
          1.0839e+00, -8.3550e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0764))
tensor([[ 1.8006e+00, -4.4357e-01,  1.9730e+00, -9.9820e-01,  5.1745e-01,
          2.5148e-01,  4.3636e-01,  1.5307e-01,  9.3564e-02,  3.2806e-01,
          5.5312e-01, -2.0376e-01, -7.8745e-01,  9.4947e-02,  6.4939e-02,
         -1.1464e-01,  2.6438e-01, -3.8712e-03, -2.8662e-01,  4.3107e-03,
          2.9702e-01, -3.1821e-01,  2.0723e-02, -4.0400e-02, -6.4569e-02,
         -2.6655e-03,  2.5801e-02, -1.3872e-02, -4.9840e-01,  4.2027e-01,
          2.6295e-02, -3.2317e-02, -1.9955e-02, -1.7622e-02, -3.1439e-02,
          1.8519e-03,  2.1223e-02,  7.2072e-02,  1.2346e-01, -1.3625e-01,
          2.2614e-01,  1.2095e-01,  2.7975e-01,  8.2128e-01,  8.1778e-01,
         -2.3775e-01, -8.0891e-02,  1.1575e+00, -4.5183e-01, -3.6376e-01,
         -1.2502e+00,  5.4142e-01, -1.8366e-01,  1.6374e-01,  1.0560e-01,
          2.1169e-01,  9.8856e-02, -2.0732e-02,  1.2595e-01, -1.6613e-04,
          4.6851e-02,  4.8957e-04, -1.6903e-01,  1.2101e-02, -1.9590e-01,
          6.3996e-02,  1.1383e-01,  5.4105e-02, -1.0456e+00,  6.7468e-02,
         -3.4346e-01,  5.4713e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0766))
tensor([[ 1.1838,  1.5982, -0.5240,  0.5053,  1.9589,  0.5493,  0.4762, -0.2964,
          0.8990,  0.2954,  0.2010,  1.6866,  0.4712,  0.3109,  0.5055,  0.2613,
         -0.2385, -0.1053, -0.1305, -0.0131,  0.5954, -0.0102, -0.0818,  0.0936,
         -0.0647, -0.0518, -0.0414,  0.0121,  0.0647, -0.0124, -0.0785, -0.2189,
         -0.0836,  0.0126, -0.4287,  0.4937,  0.0606, -0.0719, -0.1390,  0.2870,
          0.0460, -0.3576, -0.3409, -0.1689,  1.0728, -0.1358,  0.4184,  0.2140,
          0.0979,  0.0631, -0.2159, -0.0498, -0.9920,  0.1448,  0.0263, -0.0365,
          0.4900, -0.2117, -0.5880, -0.6890,  0.0398, -0.0397, -0.0054, -0.0651,
          0.4735, -0.2272,  0.6157, -0.5807, -0.0564,  0.1509,  0.6216, -0.1101]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0768))
tensor([[-4.1767e-01, -2.7160e-01,  2.4309e+00,  1.5434e-01,  2.0210e+00,
          1.8331e-01,  2.7292e-01,  5.7201e-01,  1.4196e-01,  3.3120e-01,
          1.7335e-01,  1.0519e-01,  1.0761e-01, -6.1442e-02, -1.1892e-01,
          2.8293e-02, -7.7557e-03, -3.5203e-02,  1.5111e-02,  1.1491e-02,
          1.2824e-01,  4.0399e-01,  1.5938e-01, -3.3132e-01, -4.2334e-02,
         -2.3502e-01,  2.3172e-01, -1.8571e-02,  5.5725e-03,  5.6533e-01,
          9.2891e-01,  4.7384e-02, -8.5669e-02, -1.4109e-01,  4.2835e-02,
         -3.5358e-02, -3.8233e-01, -3.0354e-01, -1.6606e-02, -2.0778e-02,
         -3.4596e-01, -3.9950e-02, -2.0872e-01,  3.8196e-02,  4.7632e-02,
         -1.8303e-01,  5.9224e-03, -8.8244e-02,  4.6690e-01,  1.3629e+00,
          5.3326e-01,  1.9948e-01,  2.1325e-02,  5.4135e-01, -3.4768e-01,
          6.1925e-01, -5.3544e-01, -3.0507e-02,  6.7150e-04, -6.1193e-02,
          1.4419e-01,  5.7231e-01,  2.1248e-01,  2.6370e-01, -6.0248e-02,
          3.6813e-02, -2.0237e-01,  9.4888e-02, -6.8919e-02,  2.2025e-01,
         -7.5981e-02,  4.8596e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0773))
tensor([[ 0.3419,  0.0316,  1.9135,  1.2956,  0.2859,  1.8394, -0.9562, -0.2411,
          1.6246,  0.8561,  1.3087,  0.9042, -0.1028,  0.0349,  0.0262, -0.0777,
          0.0778,  0.1709,  0.1015,  0.0652, -0.0795, -0.5036,  0.2361, -0.3409,
         -0.4383,  0.1311, -0.0736, -0.1960, -0.1557, -0.3489, -0.0173,  0.0030,
          0.0036,  0.7521, -0.1469,  0.1927,  0.1149, -0.0907,  0.1831,  0.1370,
          0.1136,  0.0634, -0.1301,  0.0809,  0.0570, -0.0796,  0.0096,  1.1474,
         -0.9904,  0.6790, -1.1291,  1.3150, -0.0577,  0.0596, -0.0361,  0.0177,
          0.2558,  0.1701,  0.0216,  0.7604,  0.1943,  0.1255,  0.4460,  0.1077,
         -0.3733,  0.3117, -0.0712,  0.0899, -0.9281,  0.0241, -0.3467,  0.2233]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0774))
tensor([[ 1.1171e-01, -4.8170e-01,  4.8527e-01, -5.0039e-01,  9.7868e-01,
          3.8579e-01,  1.5355e+00, -9.3050e-01,  2.7959e+00, -9.4589e-01,
          4.5545e-01,  6.4696e-01,  1.1837e-01,  2.1478e-01,  5.2650e-02,
          1.0309e-02,  1.4287e-01, -2.7196e-03,  2.0099e-02, -1.1718e-02,
          9.1548e-02,  1.6913e-02,  4.4894e-02,  3.0222e-03, -4.0552e-01,
         -2.0738e-01, -9.9537e-02,  1.3305e-01,  5.6493e-02, -1.2975e-01,
         -1.2199e-01, -2.2012e-01, -4.3072e-03, -2.0462e-02,  2.8314e-01,
          1.1914e-01, -2.1374e-01,  3.0403e-01, -7.0568e-02, -1.1132e-01,
         -2.8096e-01,  2.7305e-02, -3.3918e-01,  2.8344e-01, -9.4859e-02,
         -1.3004e-01, -8.3557e-02,  1.7952e-02, -6.6958e-01,  7.1494e-01,
         -3.0633e-03, -1.0902e-01, -5.1586e-01, -4.1185e-02,  5.6788e-02,
          5.8099e-02,  2.9841e-02,  2.3117e-03, -1.0852e-01, -7.0810e-02,
          6.9741e-01, -9.5649e-02,  1.6142e-02, -2.2268e-01,  9.4146e-01,
          5.5908e-01, -4.0364e-01,  1.1474e-01,  3.3067e-01,  5.4620e-01,
         -6.0970e-02,  8.7264e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0777))
tensor([[ 6.6790e-01,  1.7137e-01,  2.0615e+00, -1.2876e+00,  6.0223e-01,
         -4.8377e-01,  1.9121e+00, -1.9723e+00,  5.4826e-01, -5.4636e-01,
          2.6228e+00,  3.5333e-01, -1.9442e-01, -7.2340e-02,  4.7685e-02,
          2.6476e-01,  1.8119e-01,  2.1381e-01, -3.6781e-01,  5.8089e-02,
         -1.6953e-01, -5.7570e-02,  4.4955e-02, -6.4330e-02, -3.3182e-01,
         -3.9838e-01, -3.0851e-01,  2.4204e-01, -9.8817e-02,  9.4985e-02,
          2.6788e-02, -1.4487e-02, -2.3329e-03,  2.0340e-01, -5.7239e-02,
         -5.2913e-02, -6.2662e-02,  1.0543e-01,  4.9176e-01, -2.3699e-01,
         -2.0741e-01,  1.0681e-01, -2.5556e-01,  1.3488e-01,  2.3073e-01,
          1.7213e-02,  5.0349e-02,  5.8417e-01, -4.5124e-01, -1.0754e+00,
         -7.8472e-01,  9.2853e-01, -2.3821e-01,  1.9277e-01,  4.4919e-02,
         -4.9720e-02, -3.1459e-01, -4.1125e-02, -4.5798e-01,  2.4835e-01,
          1.6591e+00, -4.8846e-01, -7.0352e-01, -6.6460e-02,  3.4747e-01,
          5.4392e-01, -1.1503e-01,  2.4791e-03, -1.2096e-01,  6.8428e-01,
          3.1375e-01, -1.3569e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0779))
tensor([[ 1.3087e+00, -1.7421e+00,  4.0343e-01, -5.1897e-01, -1.1588e-01,
          1.0807e+00,  2.2136e+00, -1.0662e+00, -8.2771e-02, -1.0758e+00,
          2.1350e+00,  1.6140e+00, -1.0245e-01, -2.5231e-02, -1.1237e-02,
         -4.3815e-01, -4.1729e-01, -5.5649e-01,  6.5472e-01, -8.6388e-03,
         -2.8233e-02, -2.0189e-02,  1.6864e-01, -1.6303e-01, -1.4561e-01,
         -1.3333e-01, -3.4317e-01,  2.1977e-01, -3.8996e-02,  2.9781e-03,
         -2.4701e-02,  4.4532e-02, -1.0544e-02,  2.7595e-01, -5.6032e-02,
         -1.2361e-01, -2.8345e-01, -3.4556e-01, -2.4754e-02, -1.1906e-01,
          2.0683e-01,  9.6587e-01, -1.0935e+00, -1.1551e-01,  2.1079e-01,
          8.4700e-01, -3.8352e-02, -2.8655e-01,  5.5323e-02,  2.9507e-02,
          2.8818e-01, -1.5151e-02, -2.2407e-01,  1.4385e-01, -1.3285e-01,
         -1.7406e-01,  1.7553e-01,  2.1945e-01, -4.1001e-01, -9.4645e-01,
          2.8575e-01,  1.1120e+00,  1.2038e-03, -2.4376e-01,  8.4721e-02,
          5.5202e-02,  4.4575e-01, -1.7087e-01, -4.7811e-01,  7.7888e-01,
          1.2967e-01,  7.6822e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0785))
tensor([[ 1.4327e+00,  1.9335e+00,  9.8564e-01,  9.9519e-01, -2.4935e-01,
          1.2404e+00, -1.4346e-03,  2.9026e-02,  1.6304e+00, -1.0314e-01,
          6.8657e-02,  5.1566e-01,  2.6149e-02,  6.6466e-02, -8.1382e-02,
         -5.0884e-02, -1.6350e-01,  7.4677e-02,  1.1392e-01,  1.0600e+00,
          2.6759e-02,  2.9596e-01, -8.9047e-02, -9.1426e-02,  4.7782e-01,
         -3.9888e-01,  1.0081e-01,  1.6710e-01, -1.3793e-03,  3.1534e-01,
         -1.9792e-02, -3.9067e-02,  2.9905e-02,  2.9900e-01, -3.1180e-01,
         -3.2190e-01, -2.7020e-02,  6.2570e-03, -3.7005e-01,  1.1898e-01,
         -7.5090e-03, -8.1850e-02,  7.8478e-01, -1.5823e+00, -2.4905e-01,
         -1.5143e+00, -2.4309e-01, -5.5490e-01, -3.4678e-01,  8.4498e-01,
         -4.7318e-01,  1.9136e-01,  2.1022e-01, -2.8997e-02, -9.5557e-02,
          4.8191e-02,  6.5308e-01,  3.2009e-03, -5.9572e-01,  1.9984e-01,
         -2.4546e-01,  1.3930e-01,  6.0146e-02, -3.0023e-02, -2.5002e-01,
          2.6087e-01, -3.0321e-01,  3.1462e-01, -2.0315e-01,  1.4030e-01,
         -1.6491e-01, -8.0458e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0786))
tensor([[ 1.8594,  1.1869,  1.2205, -0.9869,  0.2569,  0.1516,  0.3367, -1.4986,
          0.1995,  0.0959,  1.6603,  1.1915,  0.5364, -0.0186, -0.0442, -0.1826,
         -0.3315, -0.4851,  0.1093, -0.0303,  0.6094, -0.2655, -0.0508,  0.0635,
         -0.0072, -0.0191,  0.2544, -0.3386, -0.0441,  0.2437, -0.0251, -0.0334,
         -0.0025, -0.1127,  0.0272,  0.0526,  0.0979,  0.0496, -0.0218,  0.0071,
          0.0447,  0.0281,  0.5631,  0.2639, -0.0340,  0.7661, -0.0546,  0.0622,
          0.6365,  0.4847, -0.1954, -0.4603, -0.2309,  0.1431, -0.4883,  0.2114,
         -0.4513,  0.1217, -0.0724, -0.0155,  0.5736, -0.9771, -1.5737,  1.3203,
          0.0377,  0.0141, -0.1741,  0.0820,  2.2744, -1.3561, -0.5477,  0.1725]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0791))
tensor([[-0.2053, -0.0334, -0.5144,  0.2689,  2.4740,  0.0356,  0.1817, -0.8508,
          0.9648, -0.3526,  0.4725, -1.2975, -0.0144, -0.0380,  0.2717,  0.0499,
         -0.0315,  0.0130, -0.0635, -0.0283, -0.0029,  0.0407, -0.0196,  0.0861,
          0.1576,  0.1055, -0.0068,  0.0273, -0.0168, -0.0659, -0.2102,  0.0500,
          0.3922,  0.1370, -0.0589, -0.1335, -0.3843,  0.2599, -0.1357,  0.1779,
         -0.1323,  0.0135, -0.0083,  0.0189,  0.0492,  0.1069, -0.0658, -0.4484,
         -0.1644,  0.2533,  0.1977,  0.1139, -0.1508,  0.0064,  0.1285, -0.4938,
         -0.0154,  0.2866,  0.7280,  0.0042,  0.2975,  0.6040, -0.1423, -0.1312,
         -0.2607,  0.3782, -0.4178,  0.1090,  0.6206, -0.1398,  0.8496, -0.6737]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0793))
tensor([[ 1.5646e-02, -9.1278e-03,  7.8423e-01, -7.9276e-01,  7.5591e-01,
          4.6606e-01, -1.7797e-01, -1.1350e+00,  1.7510e+00, -1.7879e+00,
          1.2841e+00,  8.3919e-01, -2.3688e-02, -2.9246e-02, -8.4915e-04,
         -4.4267e-02, -1.1401e-01, -4.6477e-02, -3.4558e-02, -5.3813e-02,
          3.2173e-03,  7.7232e-02, -2.1955e-01,  2.9821e-01, -1.1745e-01,
         -2.2085e-01,  5.1048e-02, -1.3633e-01,  2.8285e-02, -9.6729e-02,
          5.4133e-01,  8.0654e-01,  7.3628e-01, -9.7829e-03, -2.1473e-01,
          5.7439e-03, -1.2897e-01,  5.9662e-02, -4.0877e-01,  7.5175e-01,
          7.9297e-03, -6.2340e-01, -1.2001e-01,  1.1891e-01,  4.7140e-02,
          1.6750e-01, -8.8672e-02, -3.3386e-01,  3.0813e-01,  3.3512e-01,
          2.4625e-01, -2.5831e-01,  1.5682e+00, -7.1299e-01,  7.1274e-01,
         -1.4405e+00, -3.0953e-01,  8.9672e-02,  1.5262e-02, -2.9463e-05,
          6.6118e-01, -4.9778e-01, -3.2688e-01,  5.7934e-01,  1.3858e+00,
         -5.4938e-01,  2.8898e-01, -8.2372e-01,  1.6771e-01, -3.3838e-01,
          5.5430e-01,  6.0105e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0793))
tensor([[ 1.3869e-01,  2.3113e-01,  1.3440e-01,  8.2396e-02,  1.0265e+00,
          1.7139e+00,  2.8164e-01,  5.5427e-01,  1.1832e+00,  5.7161e-01,
          1.1045e+00, -4.7800e-01, -1.4427e-02,  7.4454e-02,  5.9344e-01,
         -1.5106e-02,  4.2506e-02,  6.0316e-02,  8.1750e-02, -1.9140e-02,
          1.5847e-02,  3.1833e-02,  1.7283e-02,  3.7033e-02, -2.4462e-02,
          7.3228e-03, -2.9331e-03, -6.1382e-02, -4.0031e-02,  1.8944e-03,
         -2.0736e-02,  7.4580e-02, -5.4048e-04, -4.1757e-01,  7.7178e-01,
         -3.9870e-01, -6.8516e-02, -2.0800e-01,  9.9550e-02,  4.4148e-02,
         -5.9222e-01,  2.0705e-01, -2.2618e-01,  1.1882e-01,  1.4260e-01,
         -8.9381e-02,  4.2670e-02, -6.3292e-02, -5.9897e-01,  8.2826e-01,
          1.6484e-01, -1.0661e-01, -5.1093e-01,  2.7573e-02, -2.5508e-02,
         -3.1480e-02,  2.9480e-01, -2.2704e-01,  1.0020e+00,  1.3282e-01,
          1.8497e-01,  1.0220e-01,  2.8777e-01,  2.2053e-01,  1.1006e+00,
         -6.7691e-01,  7.9320e-01, -5.3903e-01,  2.7752e-01,  8.0650e-01,
          1.0315e-02, -2.9174e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0794))
tensor([[ 5.0583e-01,  3.5899e-01,  9.8497e-01, -5.5087e-01, -8.0216e-02,
         -3.9107e-01,  1.8351e+00,  1.5815e+00,  8.0107e-01, -5.4526e-01,
          1.0130e+00,  4.7797e-01, -1.1706e-02, -3.4817e-02, -1.5792e-02,
          3.7201e-01, -2.4179e-01,  3.1311e-01,  4.7080e-01, -8.9549e-03,
         -4.0022e-02,  1.4319e-02,  6.6995e-02,  1.0464e-02,  1.6228e-01,
          1.8990e-01,  1.4021e-01, -7.5906e-02,  7.9634e-01, -9.7096e-04,
         -1.7506e-02,  1.3938e-01, -8.4370e-02, -3.9427e-02,  9.7256e-02,
          6.2515e-02,  5.3613e-01,  4.5189e-01, -1.6388e-02,  1.2780e-01,
          2.1754e-01, -2.1539e-01, -4.7812e-01,  1.3867e-01,  2.8370e-01,
         -3.1564e-01,  5.3693e-02,  6.7708e-01, -1.0491e+00, -3.9917e-02,
          5.4000e-01, -2.5442e-02,  4.3243e-03,  1.7423e-02, -3.8858e-01,
         -4.9671e-01,  2.8061e-01, -8.2350e-02,  1.6662e-01, -1.2174e-01,
         -1.6629e-01,  3.9177e-01, -3.4177e-01,  2.5391e-01,  2.4902e-01,
          5.1468e-01, -3.8545e-01, -2.7983e-01, -8.6189e-01,  1.7573e-01,
          2.1092e-01,  3.1838e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0795))
tensor([[ 0.9307, -0.4464, -0.5000, -0.2504,  0.5048,  1.6303,  1.1160,  0.7641,
          1.6580,  0.8266,  0.3566,  0.9743,  0.2347, -0.1271,  0.1450, -0.4659,
         -0.1869,  0.0774, -0.0999, -0.1419, -0.2534,  0.1262, -0.1362, -0.0276,
          0.0384, -0.0956,  0.0520,  0.0516, -0.0401, -0.0994,  0.0289, -0.0836,
         -0.0127, -0.0169, -0.6400,  0.2158, -0.5495, -0.1812, -0.4176, -0.3320,
         -0.0817, -0.3461,  0.1633, -0.2133, -0.1020, -0.3157,  0.2028, -0.0607,
          0.5028, -0.1683,  0.3675,  0.0751, -0.2030,  0.1755,  0.0684, -0.0733,
         -0.2023, -0.2200, -0.5593, -0.2988,  0.8116, -0.0498, -0.3352,  0.2117,
          1.4781, -0.4926,  0.5412, -0.0849,  0.0260,  0.0840, -0.1277,  0.2546]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0796))
tensor([[ 0.9915, -0.8787,  1.2982, -1.1105,  0.1318,  1.0024, -0.6691, -0.6670,
          1.0746, -0.2810,  1.2141, -0.2338, -0.0029,  0.1273, -0.1632, -0.0563,
          0.0026,  0.1553, -0.1656,  0.0421, -0.0148,  0.0396, -0.4615,  0.5636,
         -0.0227, -0.0203, -0.0476,  0.0901, -0.1471, -0.0612, -0.0729, -0.0458,
          0.0502,  0.2553, -0.0568, -0.1329, -0.0646, -0.2127, -0.3196,  0.1844,
          0.4931, -0.1254, -0.4410,  0.0667,  0.0974,  0.5406, -0.1062,  0.5606,
         -0.4677, -0.3852, -0.7046,  0.5237, -0.2520,  0.0627,  0.0409,  0.2546,
         -1.1570,  0.0646, -0.5339,  0.4689,  0.3385,  0.1287,  0.0646, -0.2683,
          0.1783,  0.4127, -1.0625,  0.1199, -0.4562,  0.5165,  1.8302, -0.4745]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0806))
tensor([[ 2.6889e-01, -6.6519e-03,  3.4034e-01, -7.3104e-01,  3.1524e-01,
          2.4741e-01,  5.4904e-01, -1.1021e+00,  2.3543e+00,  6.2379e-01,
          1.6802e+00,  3.0184e-01,  1.1408e-01, -2.4629e-02, -6.3220e-02,
          1.5122e-01, -1.2020e-01, -1.6076e-01, -4.3922e-01, -3.6934e-02,
          1.3919e-01,  2.3665e-02, -6.5187e-03, -7.8863e-04,  2.4977e-01,
          1.9694e-01, -1.0556e-01,  5.8119e-02, -9.1270e-02, -5.9743e-02,
         -1.4991e-02, -3.0933e-02, -5.6207e-01, -1.8466e-02,  8.2091e-02,
         -3.2603e-02,  7.2425e-03, -7.0420e-03, -9.6026e-01, -2.4438e-01,
          9.9609e-03, -8.7794e-02, -5.0424e-01, -1.9845e-01,  4.1373e-01,
         -2.3723e-01, -5.4799e-02,  4.1251e-01,  4.5937e-01, -3.7525e-01,
         -1.3965e-01,  3.1228e-01,  8.3586e-01, -4.1952e-01,  6.9922e-02,
         -1.8892e-01, -1.4957e-01,  9.6571e-02, -8.0589e-02, -1.1167e-01,
         -3.3481e-01,  1.3898e-01,  4.2080e-01, -2.1409e-01,  3.7099e-01,
          7.7531e-01,  3.7961e-01, -9.2447e-02, -2.4203e-01, -6.8270e-01,
          4.7502e-01, -2.0677e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0807))
tensor([[ 1.3641e-01,  4.7036e-01,  8.6053e-01,  1.6235e-02,  2.1867e+00,
          3.3465e-01,  8.7111e-01,  9.6646e-01,  4.0026e-01, -1.8213e+00,
          2.6589e+00,  3.3591e+00, -4.9538e-02, -1.8595e-02, -6.3521e-02,
         -1.2043e-01,  2.7843e-02, -1.1584e-01, -1.3086e-01,  3.6805e-02,
          7.3212e-02,  1.1970e-01, -8.9524e-03,  3.3111e-02,  3.4631e-01,
          9.8814e-02,  1.9819e-01, -5.1569e-01, -2.5826e-02,  6.8590e-02,
         -4.5851e-01,  4.8909e-01, -8.9464e-01, -2.0495e-02,  9.1375e-02,
          9.1352e-02, -1.6445e-02, -7.7244e-04,  6.9046e-02,  3.5377e-01,
         -1.9427e-02, -7.0954e-01, -1.0037e-01,  8.3006e-02,  7.8294e-02,
         -1.3946e-01,  1.0451e-01, -3.7197e-01,  3.8552e-01,  1.8830e-01,
         -4.8548e-02,  7.8852e-02,  1.7843e+00,  1.7058e-01,  9.0931e-01,
          1.2736e+00, -1.8938e-01,  1.1754e-01, -1.4583e-01, -3.6407e-01,
          8.4504e-01, -5.4641e-01,  9.6874e-01, -7.2424e-01, -3.3228e-01,
         -9.1177e-02, -1.1490e-01,  1.1160e-02,  1.0809e+00, -1.1055e+00,
         -3.9191e-01,  4.0898e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0809))
tensor([[ 1.3676, -1.9539,  0.7043, -1.1841,  0.0071,  0.0794, -0.0366,  0.5922,
          1.8024, -1.2790,  0.3765,  1.8974, -0.2495, -0.1009, -0.0142, -0.2003,
         -0.3737,  0.1696, -0.1913,  0.0056,  0.4084, -0.3213,  0.0214,  0.0342,
          0.0817,  0.1947, -0.1632,  0.2572,  0.2355,  0.1689, -0.0212,  0.0277,
          0.0199, -0.0215, -0.7134, -0.5720,  0.2317,  0.0181,  0.2929, -0.0269,
         -0.0111, -0.0748,  0.0843,  1.7055, -0.4215,  0.3341, -0.3120,  0.3995,
         -0.0292, -0.0261, -0.2527, -0.1852,  0.0887, -0.0310, -0.0418, -0.0780,
          0.2065, -0.1084,  0.2416, -0.2171, -0.8139,  0.0773, -0.2349,  0.0237,
          2.4661, -1.4362, -1.4970,  1.3838, -0.4007,  0.1579,  0.1056, -0.9034]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0812))
tensor([[ 0.2671,  0.0202,  0.3366,  0.6064, -0.5981, -0.0094,  0.0885, -0.4085,
          0.1537,  0.2802,  0.8062,  0.1601,  0.0851, -0.1070, -0.0138,  0.0082,
         -0.1178, -0.1971, -0.0052,  0.3104, -0.0530, -0.1788, -0.0052, -0.0377,
          0.0265,  0.0140, -0.1956, -0.3448,  0.0181, -0.0607,  0.0134, -0.0122,
          0.0228, -0.0263, -0.0202,  0.0031, -0.0605,  0.0934,  0.2165,  0.1581,
         -0.2120,  0.2983,  1.0506, -0.8152, -0.3480, -1.1271,  0.6645,  0.4534,
         -0.4483,  0.1201,  0.7363, -0.2109,  0.1072,  0.2506, -0.0520, -0.0792,
         -0.2946,  0.1788, -0.1063,  0.2148,  0.0467,  0.0545,  0.1332, -0.1496,
         -0.0542,  0.3990,  0.4565,  0.3059, -0.0085,  0.1978, -0.6554,  0.1877]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0816))
tensor([[ 2.0699e+00, -9.3642e-01,  6.6144e-01, -3.9519e-01, -5.6792e-03,
          1.9349e-01,  2.8630e+00, -2.9875e-01, -3.9446e-01, -1.5610e-01,
          2.6364e-02, -9.0550e-01, -4.9899e-01, -2.0352e-03,  2.2374e-02,
          2.3760e-01, -5.6689e-01, -1.0369e-01, -5.4247e-02,  4.1580e-01,
          5.3335e-01,  1.3877e-01, -2.4574e-02,  5.3202e-02,  2.1276e-01,
          4.1279e-02,  3.0237e-01, -8.5163e-02,  1.7557e-01,  3.4973e-01,
         -2.4565e-02, -4.4413e-02,  2.0389e-02,  2.5676e-02, -2.8184e-02,
          2.2806e-02, -2.3622e-01,  4.3184e-02,  2.4153e-01, -1.9213e-01,
         -4.0301e-02,  7.3716e-02,  9.0049e-01, -7.1231e-01,  4.0739e-01,
         -1.1403e+00,  9.9563e-02,  2.4030e-01,  8.7370e-01, -4.1711e-01,
          2.3695e-01,  9.6850e-02, -1.1819e-01,  8.6864e-02, -2.4819e-02,
          3.4592e-03, -2.6207e-01,  2.0942e-01, -1.8881e-01,  2.8387e-01,
         -1.2651e+00,  4.8273e-01,  1.6185e-01, -1.3235e-01,  2.6845e-01,
          3.7446e-01,  2.8185e-01, -1.5514e-01, -2.6181e-01,  1.5952e-01,
         -2.2996e-01, -1.7102e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0816))
tensor([[ 2.4682e+00,  1.4607e+00,  1.2237e+00,  6.4447e-01,  2.3759e-01,
         -9.2601e-01, -1.0384e-01, -4.2775e-03, -1.5463e-01, -6.9303e-01,
         -1.7013e-01,  7.0238e-01, -5.4469e-01, -3.0531e-01, -2.3034e-01,
          3.9807e-02, -2.4655e-02, -1.0776e-01, -4.6581e-02,  1.2070e-01,
          1.0348e-01,  4.6938e-01, -1.9679e-03,  4.2183e-02, -1.6198e-01,
         -2.0988e-01, -2.9485e-01,  2.5387e-01,  2.5180e-04,  7.8223e-01,
          2.8901e-02,  1.4752e-02, -3.6372e-02,  1.9570e-01, -5.1757e-02,
         -1.5378e-02, -2.4892e-02, -2.1621e-03, -1.2934e-01, -3.1947e-02,
         -2.1304e-02,  2.0222e-02,  7.4809e-01, -3.4020e-01,  1.3980e+00,
          3.6843e-01, -2.6653e-01,  1.1915e+00,  4.0178e-01, -4.7488e-01,
         -8.1277e-01,  1.0654e+00, -2.7531e-01,  1.6207e-01, -1.4048e-02,
         -8.9498e-03, -4.7951e-01,  6.2718e-02, -2.0402e-01, -1.4391e-01,
         -2.5234e-01,  1.3502e-01, -2.9819e-02,  1.8060e-02, -1.7429e-01,
         -1.2054e-01,  2.1654e-01,  7.2978e-04, -6.2707e-02,  6.6567e-02,
         -5.3072e-01,  1.6637e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0820))
tensor([[ 0.8063, -0.1567,  1.6871, -1.2685,  0.4178,  2.0085,  0.1152, -0.1824,
          0.1456,  1.0187,  1.3635,  1.1756,  0.2975, -0.0882, -0.0058,  0.0807,
         -0.2299, -0.3072, -0.1492,  0.0059, -0.2663, -0.5483,  0.1359, -0.1783,
         -0.0483, -0.0994, -0.0444, -0.0670, -0.0044,  0.4891, -0.0251, -0.0650,
         -0.0623,  0.3964,  0.2252, -0.2918,  0.1505, -0.1201, -0.4383, -0.2196,
          0.0798, -0.3008, -0.2866, -0.4770,  0.9913,  0.1043, -0.0966,  0.0852,
          0.6402,  0.6397, -0.3865, -0.5366, -0.2813,  0.1628, -0.0227,  0.0690,
          0.7114,  0.0631,  0.5376,  0.5175,  0.3235, -0.3885,  0.1246,  0.1452,
          0.5445,  0.2732,  0.1630,  0.3458, -0.7699,  0.1879,  0.2740,  0.0898]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0822))
tensor([[ 2.1587, -1.7170,  2.2141,  1.8951,  0.6352, -0.1811,  2.2670, -1.1469,
         -0.4769,  0.1429, -0.3641,  0.2681, -0.2148,  0.0560,  0.0478,  0.0477,
         -0.1114, -0.1612, -0.0467,  0.8961,  0.1955, -0.4262, -0.0418, -0.0161,
          0.2128, -0.0728,  0.1469,  0.1541, -0.6763, -0.4603, -0.1331, -0.3980,
         -0.1596, -0.1123,  0.0091, -0.0070,  0.2559, -0.2374,  0.2264,  0.0525,
          0.1849,  0.0044,  1.7415, -1.9131, -0.5628, -1.5516,  1.0877,  1.3530,
          0.6406, -0.7872,  1.0163,  0.0213,  0.0722,  0.0881, -0.6388,  0.5833,
         -0.1906,  0.0298,  0.2695,  0.0375,  0.4441, -0.3946, -0.3329,  0.1375,
         -0.4673,  0.0224, -0.1743,  0.0723,  0.4448,  0.2408, -0.1248,  0.1040]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0825))
tensor([[ 3.7554e-01, -9.1451e-03,  1.0430e+00,  1.1972e+00, -2.7932e-01,
          4.7789e-01,  4.1640e-01, -3.1098e-01,  1.2350e-01,  4.4911e-01,
         -2.5237e-01,  1.6757e+00,  7.7968e-03,  3.9701e-02, -2.1782e-03,
         -1.2066e-02,  2.4444e-01, -5.8881e-02,  5.0258e-03,  5.5173e-02,
         -2.5126e-02, -4.0837e-01,  1.3390e-01,  1.3926e-01,  9.3116e-02,
          4.9220e-02, -2.0777e-01,  1.4510e-03,  5.1293e-01, -3.8846e-01,
         -1.4506e-01,  5.6415e-02,  1.9110e-02,  2.6269e-02, -9.5786e-03,
          5.6324e-03,  1.3108e-01,  1.2484e-01,  1.1401e-01,  3.2264e-01,
          9.8113e-02,  8.7246e-01,  1.2247e+00, -4.9227e-01, -6.3320e-01,
         -1.4769e+00,  7.1637e-01,  1.0749e+00, -7.1670e-01,  2.6647e-01,
         -5.1165e-01,  4.5864e-01,  1.9146e-02, -1.1411e-01, -1.4155e-01,
         -2.4349e-01, -2.4178e-01,  1.8129e-01, -9.7976e-04, -6.4941e-02,
         -4.6394e-01,  8.7285e-02, -1.9849e-01, -2.5462e-02,  6.8861e-02,
          3.1509e-01,  3.3241e-01,  3.0990e-01, -3.2560e-01,  7.2488e-02,
         -2.6947e-01,  6.9584e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0827))
tensor([[ 6.9897e-01, -4.7041e-01,  7.3891e-01, -5.7209e-01,  4.9354e-02,
          1.4945e+00,  1.9585e+00,  4.1726e-01, -2.5041e-01, -3.5980e-01,
          3.6139e-01,  1.4291e-01,  1.1823e-01,  1.4457e-02,  7.0316e-02,
         -6.5779e-02,  3.0714e-02, -1.2666e-02,  2.7341e-02,  2.9384e-02,
         -1.3467e-01, -2.8198e-02,  2.9676e-01, -3.2361e-01,  6.7684e-02,
          3.4341e-02,  7.4943e-02, -2.3844e-03,  9.4718e-02,  5.1243e-03,
          8.4071e-02,  9.6709e-01, -1.1443e-01,  1.5524e-01,  8.1391e-03,
          1.2087e-02, -3.2215e-02, -4.1675e-02,  2.4108e-02,  1.3454e-03,
         -6.3823e-01,  2.7748e-02, -6.2193e-01, -3.3631e-01,  3.7306e-01,
          6.7304e-01, -4.7403e-02, -3.5097e-01,  2.6024e-02,  4.7371e-02,
          2.7982e-01,  1.6295e-02,  1.5960e+00, -9.4605e-01, -1.0320e+00,
         -6.7794e-02, -4.3232e-01,  5.7337e-01, -1.2487e-01, -4.2829e-02,
          1.0483e+00, -9.9206e-01, -1.1275e-02, -1.8553e-01,  9.6009e-02,
          1.8139e-01,  1.4670e-01,  1.6324e-02,  4.7098e-01,  4.6990e-01,
         -1.1961e-01,  1.8347e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0827))
tensor([[ 4.4606e-01, -1.0447e-01,  3.1733e-01,  1.0390e-01,  4.5331e-02,
          1.9307e-01,  4.3718e-01,  4.9328e-02,  4.2533e-01,  1.4861e+00,
         -1.0401e+00,  5.5601e-01,  6.3115e-04,  5.4516e-02,  5.5575e-02,
         -1.4313e-01, -1.1206e-01,  9.7002e-02, -5.8698e-05, -4.0826e-02,
         -2.1448e-02,  6.2715e-03,  3.8178e-02,  2.2166e-03,  6.0103e-02,
         -1.4513e-01,  2.6868e-01,  1.2087e-01,  5.1390e-02,  2.6647e-02,
         -1.3749e-01, -1.1388e-02, -3.7689e-02, -2.3093e-02, -1.9925e-02,
         -7.6797e-02,  1.5612e-01,  1.3336e-01, -3.3677e-01, -2.1732e-01,
          8.1960e-02, -1.1082e-02, -3.6173e-01,  1.0369e-01,  3.1452e-01,
          6.5235e-03, -2.9288e-02,  6.7661e-01, -2.9766e-01, -2.8861e-01,
          7.5683e-01, -3.5956e-01, -3.5754e-01,  1.3037e-01,  1.3844e-01,
          2.3996e-01, -1.1286e-01,  8.1925e-02,  3.7391e-02,  7.2246e-02,
         -1.2950e-01, -2.9406e-01, -4.0196e-01,  1.4886e-02,  2.4831e+00,
         -6.3563e-01, -1.6313e+00,  1.4708e+00,  1.5846e-01,  2.1354e-01,
          1.0217e+00, -5.1738e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0831))
tensor([[ 0.4867,  0.5114,  2.5915, -1.4148,  0.5402,  0.2996,  1.1023,  0.9691,
          0.6860, -0.1150,  1.8842, -0.2727,  0.0239, -0.1567, -0.0945, -0.3795,
          0.1824, -0.1079, -0.3597, -0.4165,  0.1780, -0.5969, -0.0368, -0.0368,
         -0.0350, -0.0946, -0.0513, -0.0824,  0.2954,  0.9795, -0.0204,  0.1749,
         -0.3258, -0.0194,  0.0053,  0.0486,  0.0395, -0.0166,  0.0339, -0.0356,
         -0.1894,  0.2598,  0.0033, -0.3355, -0.4174, -0.3504, -0.0345,  0.9408,
          1.4839, -0.1467, -0.3687, -0.3481, -0.1215,  0.0367,  0.1202,  0.1380,
         -0.1079,  0.0882, -0.0704,  0.3233,  0.4529, -0.1694,  0.8120, -0.4024,
         -0.2768,  0.2335, -0.0204, -0.0149,  0.7971, -0.3021, -0.4463,  0.0684]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0832))
tensor([[ 1.7750,  1.4178,  0.3990, -0.7340,  1.1126,  0.5037,  0.1535,  0.1713,
          0.2999, -0.1527,  0.8971, -0.2725,  0.1934, -0.1231,  0.2286, -0.0927,
          0.0168,  0.2995,  0.3804, -0.3324,  0.4435, -0.3610,  0.0447,  0.0243,
          0.0273, -0.0092, -0.0887, -0.0343,  0.2613,  0.3420, -0.0103, -0.1133,
          0.1849,  0.0264, -0.0394, -0.0400,  0.0990, -0.1006, -0.0194,  0.0331,
          0.0107,  0.2299,  0.2438,  0.5160, -0.2585,  0.0458,  0.3175,  1.0088,
         -0.3727,  0.4200, -0.4907, -0.1077, -0.2075, -0.0771,  0.5634, -0.0749,
         -0.2172,  0.1811,  0.0618, -0.0563, -0.2532,  0.1151,  0.2808, -0.0561,
         -0.1148,  0.0703,  0.1203, -0.0843, -0.4703,  0.0613, -0.4719,  0.0967]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0833))
tensor([[ 1.1711e+00,  6.1272e-01,  1.2104e+00,  4.4753e-01,  1.3964e-01,
         -1.4926e-01,  1.9415e-01,  6.2847e-02,  1.9058e+00, -3.0393e-01,
          1.2714e-03,  1.1926e+00,  4.0914e-01, -2.5815e-01, -8.9081e-02,
         -3.2545e-03,  3.2303e-02, -1.0938e-02,  2.9184e-02, -1.2104e-02,
          7.3704e-01,  4.5362e-02, -5.7633e-02,  7.2307e-02,  2.6580e-01,
         -7.3572e-02,  3.2340e-01,  2.4116e-02,  6.9360e-01,  5.6375e-02,
         -1.6583e-02, -6.4853e-02, -1.6335e-02, -7.4631e-02, -9.7103e-02,
          8.8628e-02, -7.7006e-03, -3.1317e-03,  6.0189e-01, -4.5975e-02,
         -3.2972e-02, -2.5352e-01,  2.1415e-02,  1.4134e+00, -2.9947e-01,
          1.6507e-01,  3.9762e-01,  1.2593e+00, -1.3882e+00, -1.0845e-01,
          1.0798e+00, -5.6817e-01, -4.5738e-01,  2.4220e-01, -1.0957e-01,
         -5.6507e-02,  4.5356e-02, -4.2597e-02,  2.2627e-02,  1.2663e-01,
         -2.2060e-01,  1.4816e-01, -5.5453e-02,  1.1757e-02,  3.9452e-01,
          7.4302e-01,  5.4708e-01,  5.8450e-02,  1.5752e-01, -6.2612e-02,
         -2.2054e-01,  5.4122e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0836))
tensor([[ 0.2724, -0.0914,  1.7993,  0.3606,  1.1341,  1.5471,  0.2370, -0.0021,
          2.0917, -0.6565,  0.3552, -0.8215, -0.1883, -0.0703,  0.0581, -0.0366,
         -0.0287,  0.0253, -0.0391, -0.0153,  0.1705,  0.1099,  0.6451,  0.1012,
         -0.6326,  0.1498, -0.0483,  0.1715,  0.0193,  0.0836,  0.1940, -0.0292,
          0.0173, -0.0215,  0.0232,  0.2097,  0.0087,  0.0536,  0.0477, -0.1974,
         -0.0190,  0.2158,  0.2004,  0.2027,  0.3139, -0.0714, -0.2879, -1.1935,
          0.0883,  0.1191, -0.5577, -0.0485, -0.2904,  0.3872,  0.0536, -0.0030,
         -0.6843,  0.0536,  0.4548, -0.6065, -0.0054,  0.0154,  0.1762, -0.0529,
         -0.0336,  0.8891, -0.3026, -0.3023, -0.0203,  0.0874,  0.5387, -0.3725]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0837))
tensor([[ 1.5740e-01,  4.2812e-01,  1.0231e+00, -1.6137e-01,  1.6514e+00,
          1.2493e+00,  3.5608e-01, -2.2097e-01,  2.6207e+00, -1.0916e+00,
          7.8137e-01,  6.8932e-01,  8.8881e-02, -9.2126e-02, -3.2158e-03,
         -6.4021e-02,  5.3715e-02,  7.2464e-03,  9.5304e-02,  5.2517e-02,
         -1.1311e-01,  5.8175e-03, -2.0148e-01,  1.3752e-01,  1.4423e-01,
         -1.4646e-01, -1.3451e-01, -3.1158e-01, -4.1969e-01, -2.6731e-02,
          3.3805e-01, -2.1953e-03, -3.0604e-02, -1.5063e-01, -2.7757e-01,
          2.4277e-02, -1.2540e-01, -3.3528e-02, -1.6337e-02,  7.7835e-02,
          1.8282e-02,  1.1209e-01, -3.5536e-01, -1.4711e-01,  3.2983e-01,
          1.6275e-01,  3.7723e-02,  5.2791e-01, -6.5352e-01,  6.7080e-02,
         -2.8568e-02, -9.5600e-03,  3.1666e-01,  3.0469e-01,  1.9812e-01,
          3.3497e-04,  1.5997e-01,  4.0117e-02, -6.0330e-01,  5.8947e-02,
         -1.5491e-01, -4.1805e-02,  8.0688e-02, -6.2286e-02,  9.1984e-01,
          7.4870e-01,  3.3032e-01, -1.3983e-01, -2.1436e-01,  1.7705e-01,
         -6.7785e-01,  1.2975e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0839))
tensor([[-2.2165e-02,  4.5290e-01,  1.6727e+00,  1.6039e+00,  1.5804e-01,
         -4.2328e-03,  4.6750e-01,  1.2511e+00,  3.6478e-02,  6.3880e-01,
          1.7436e+00,  2.4174e+00,  2.2149e-03,  5.0072e-02, -6.8510e-02,
          2.3108e-01, -1.7400e-01,  3.0809e-01,  5.2403e-01, -3.0527e-02,
          1.4296e-02,  1.5327e-01,  1.8574e-01,  2.6207e-01, -3.5019e-02,
         -3.0684e-02, -1.6922e-01, -1.3685e-01, -5.9639e-01,  1.7656e-01,
          2.6855e-02, -4.1224e-03, -5.8076e-03,  3.2815e-01, -2.8262e-01,
          3.0232e-01, -5.4331e-02, -1.3607e-02, -4.0103e-02, -1.2664e-01,
         -2.2911e-01, -1.2148e+00, -1.0745e-01,  1.4848e-01,  1.4086e-01,
         -2.7693e-01,  7.4815e-02,  1.2581e+00, -1.3638e+00, -7.1616e-01,
          1.3722e+00, -1.0917e+00, -1.8214e-01,  1.6567e-01, -1.8577e-01,
         -3.5563e-01, -1.2688e-02, -1.6793e-01,  5.4751e-01,  8.1491e-01,
         -5.6432e-01,  2.0187e-01, -3.4966e-01,  2.2017e-02,  2.7601e-02,
          1.1618e-02,  4.5224e-01, -5.8255e-02,  1.3113e+00, -1.1166e+00,
          1.1198e+00,  7.8063e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0839))
tensor([[ 5.8058e-02, -4.6208e-02,  8.3694e-01,  1.0784e+00,  9.7236e-01,
          1.9122e-01,  9.4727e-01, -5.9422e-01,  1.0785e+00,  1.1675e+00,
         -2.3956e-01,  1.0283e+00, -2.3261e-02,  7.9978e-02,  2.4617e-02,
         -1.7042e-02,  1.3244e-02,  9.7306e-03,  3.6962e-02,  4.3733e-02,
          3.0184e-04, -3.3382e-02,  1.0290e-01,  5.8949e-02,  2.9846e-01,
         -1.8869e-01,  9.1174e-02,  3.4209e-01,  1.3681e-02, -2.8089e-01,
         -1.0143e-02,  9.8757e-01,  2.1299e-01, -3.9074e-02,  3.4076e-02,
          1.3494e-02,  5.7990e-02, -8.1335e-02,  2.0129e-01,  3.4060e-01,
         -1.1549e-01,  5.1598e-01, -4.5079e-02,  8.4020e-02,  3.5264e-02,
          1.1109e-01, -4.2887e-02, -5.5542e-01,  3.4096e-01,  3.4117e-01,
          4.1350e-02,  2.7146e-01,  2.2009e+00, -1.7111e+00,  8.0150e-01,
         -1.0184e+00, -3.0666e-01,  1.9035e-01, -4.7698e-01, -6.9162e-01,
          8.8297e-01, -3.6653e-01, -1.0897e+00,  4.2139e-01, -1.3910e-01,
          2.8776e-01,  2.3976e-02,  3.8417e-01,  1.8197e+00, -9.7337e-01,
          4.3769e-01,  6.5509e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0841))
tensor([[ 4.3666e-01,  1.0105e-02,  5.8928e-01, -6.7409e-01,  7.5814e-01,
          1.9210e-01,  1.7069e+00, -1.6659e+00,  2.1968e-01,  1.3586e-01,
          4.4075e-01,  4.5965e-01,  5.5216e-03, -1.3130e-01,  1.5915e-01,
          9.1976e-02,  1.7398e-01,  1.5577e-01,  1.0236e-01, -4.7579e-02,
          2.9106e-02,  9.0343e-03, -6.7336e-02,  7.0143e-02, -3.0532e-03,
          1.9189e-02, -2.7921e-01,  2.3537e-01,  5.3760e-01,  6.0816e-02,
         -3.6545e-01,  5.4296e-01,  5.9996e-01, -1.6425e-02,  2.1702e-02,
         -3.1925e-02,  2.8510e-01,  2.1624e-02, -1.5953e-02,  3.1384e-02,
         -9.2271e-02, -2.4545e-02, -3.8116e-01,  7.8125e-03,  4.1967e-01,
          1.7218e-03,  4.3558e-02,  8.8444e-01, -2.2068e-02, -8.5110e-01,
          1.0793e+00, -3.5891e-01,  4.5574e-01, -8.3905e-02, -1.0190e+00,
          7.9890e-01,  1.0929e-01, -3.1142e-02,  5.9423e-02, -1.5582e-02,
          3.6894e-01, -8.4547e-01, -1.5761e+00,  1.0916e+00, -1.6220e-01,
          1.1071e-01, -3.6994e-02,  6.1914e-02,  2.7202e+00, -1.0291e+00,
         -2.5726e-01,  1.1260e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0841))
tensor([[ 0.1454, -0.7298,  0.7280,  0.6600, -0.3689,  1.0973,  1.1510, -0.7200,
          0.8594,  1.0009,  0.5197,  0.9627,  0.3745,  0.1924,  0.1178,  0.1567,
          0.2175,  0.1093, -0.2088, -0.0079, -0.1283, -0.0214, -0.0171,  0.0155,
          0.1797, -0.1242, -0.0336,  0.0232,  0.0595, -0.0037, -0.2161, -0.0856,
         -0.2744, -0.7403,  0.3482, -0.3448,  0.1971, -0.1657,  0.1578,  0.2794,
          0.0981,  0.1649, -0.4983,  0.5937, -0.1356,  0.0411, -0.1445, -0.3560,
          0.0211,  0.0441, -0.3664,  0.0211,  0.6449,  0.2280, -0.1970,  0.2485,
          0.7312,  0.3806, -0.6081, -0.7192, -0.2843,  0.3451, -0.0992, -0.0723,
          1.1052, -0.3580,  1.1283, -0.2842,  0.2959, -0.0398,  0.6448, -0.1658]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0841))
tensor([[ 8.0690e-01, -6.1639e-01,  2.0164e+00, -2.6434e-01,  1.9910e-01,
          2.2076e-01,  8.0999e-01,  5.0970e-01,  3.3981e+00,  6.3903e-02,
          2.1053e-01, -5.9557e-01,  1.2611e-01,  8.3855e-03, -1.2456e-02,
         -1.5122e-01,  6.4571e-03,  3.4030e-02, -7.5511e-03,  7.5237e-02,
         -1.4632e-01, -2.6636e-02, -8.8995e-02, -2.6103e-02,  2.2682e-01,
          4.2849e-01, -2.6526e-02, -7.1096e-02,  9.5852e-01,  6.2547e-02,
         -2.3329e-02, -2.5804e-02, -1.7001e-02, -1.7962e-02, -1.3129e-01,
         -1.8625e-01, -7.2180e-01, -1.2963e-01, -4.9044e-01, -3.4887e-01,
          1.2433e-03,  4.4960e-01, -6.9792e-02,  2.0272e-01,  2.0013e-01,
          7.4874e-02, -1.7259e-01,  9.9319e-01,  1.9538e-01, -1.6910e+00,
         -3.7267e-01,  8.6788e-02, -1.5556e-01,  1.1318e-01,  2.5733e-02,
          1.0098e-01, -2.2613e-01,  1.3175e-01,  6.3088e-01, -4.3521e-01,
          5.2479e-01,  5.6674e-01, -1.4793e-01, -3.9448e-02, -3.5109e-01,
          3.5194e-01, -4.4954e-01,  2.5333e-01, -2.9998e-01,  2.4709e-01,
          6.0445e-01,  1.4807e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0842))
tensor([[ 1.3543e-01, -9.0628e-02,  2.5117e+00, -1.3612e+00, -3.6302e-01,
         -3.4516e-01,  1.2910e+00,  2.0106e+00,  1.1129e+00,  9.0176e-01,
          1.6580e+00,  7.9530e-01,  2.6912e-04, -5.3621e-03,  6.0479e-03,
          9.9480e-02,  2.5583e-01, -2.0541e-01,  6.4422e-02,  2.9461e-02,
         -2.5463e-02,  3.2391e-01,  4.9860e-02, -1.4147e-02,  4.0531e-01,
         -2.1130e-01, -3.9327e-02,  3.8893e-01,  4.3420e-01, -6.0474e-01,
          3.3779e-02, -3.8378e-01,  1.9861e-01, -1.4692e-01, -9.2594e-02,
          8.2432e-02,  2.1837e-01, -7.4152e-02,  4.4912e-01,  5.6299e-01,
         -7.8269e-02,  3.9097e-01, -2.0400e-01,  1.7289e-01,  1.3299e-01,
         -4.4769e-02, -5.6892e-03,  1.9436e-01,  7.8784e-01, -3.3572e-01,
         -1.8817e-01, -5.1877e-01,  3.9200e-01,  2.7387e-02,  8.0020e-01,
          1.8897e-01, -1.1494e-01, -9.0634e-02, -6.8515e-02,  1.0405e-01,
         -1.4962e-01, -5.4477e-01, -5.2580e-02, -2.9652e-01,  1.3984e+00,
         -5.1186e-01,  5.4805e-01, -3.0557e-02, -5.6161e-01,  1.1953e-02,
          3.9666e-01,  6.4603e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0842))
tensor([[ 8.5434e-01, -8.5788e-01,  7.9433e-01, -2.5548e-01,  8.2824e-01,
          1.7737e-03,  2.0538e+00, -1.3370e+00,  2.4146e-02,  3.4910e-01,
          1.4340e+00,  2.3828e-01, -6.4621e-02, -6.8206e-02,  1.0753e-01,
          1.7950e-01,  4.9933e-02, -1.2344e-01, -1.6298e-01, -2.7355e-01,
          3.0317e-01, -2.1169e-01,  8.7714e-02, -9.1686e-02, -3.3398e-02,
          7.3916e-03,  6.9388e-02, -1.7136e-01, -3.0252e-01,  2.4076e-01,
          2.4979e-02,  7.0054e-01,  7.2802e-01, -1.1150e-01, -2.0463e-02,
         -2.2016e-02,  1.1612e-01, -1.3883e-01,  3.7794e-02, -9.8233e-02,
          1.1198e-01,  2.2404e-01,  6.9291e-01,  6.4936e-01, -3.7864e-01,
          3.5980e-01, -5.9600e-02,  3.7285e-01,  1.0254e-01, -2.5047e-01,
         -4.2340e-01,  1.6983e-01,  9.5046e-01, -5.0867e-01, -1.1953e+00,
          1.0538e+00, -2.2218e-01,  4.8010e-02,  2.2987e-01, -2.1939e-01,
          2.1589e-01, -6.4329e-01, -6.2119e-01,  8.2828e-01, -2.6858e-01,
          1.1040e-01,  1.4237e-01,  3.3606e-02,  7.3189e-01, -8.2831e-01,
         -4.6134e-01,  1.8422e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0846))
tensor([[ 3.8834e-01,  9.1942e-02,  1.7413e+00, -1.7184e-01,  1.4588e+00,
          2.8875e-01,  3.0390e-01,  5.2013e-01,  1.4914e+00, -1.5305e-01,
          1.2535e+00, -9.5860e-02, -2.1261e-02, -3.8562e-02, -1.0921e-02,
         -5.0269e-02,  3.6938e-02,  1.5981e-03, -4.5964e-02, -2.6236e-02,
          2.3054e-03, -1.9534e-01, -5.9148e-04,  3.0630e-02, -3.2395e-01,
         -3.9890e-01,  3.5091e-02,  9.1012e-02, -1.4299e-01, -5.1105e-01,
          1.7462e-01,  2.3998e-01, -1.1534e+00, -2.2376e-02, -2.8847e-02,
         -3.2157e-02,  3.8451e-02,  1.8259e-01, -3.6128e-01, -1.1481e-01,
          1.1432e-01,  1.2748e-01, -3.1762e-01,  5.3753e-02,  2.8744e-01,
         -5.8650e-02,  1.2480e-02,  2.3912e-01,  1.0182e+00,  1.1415e-01,
          4.5635e-01,  1.6251e-01,  1.5101e+00, -6.4468e-01,  7.3279e-01,
          1.3705e+00, -6.1534e-02,  6.4107e-02,  8.7280e-03, -3.0117e-02,
         -4.2680e-01,  1.0965e-01,  5.2304e-02, -2.2989e-01,  8.4057e-01,
         -4.9179e-01, -1.2089e+00,  6.4862e-01,  1.3905e+00, -1.3849e+00,
          1.2385e+00, -6.6613e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0846))
tensor([[ 1.0224e+00, -8.2309e-01, -1.6177e-01, -2.2933e-01,  2.2075e-01,
          1.9082e+00, -5.5621e-01, -5.7279e-01, -5.0466e-03, -1.4788e-01,
          1.2653e+00, -1.3347e-01, -9.6145e-02,  2.9499e-03, -8.2738e-03,
         -1.6237e-01, -1.0659e-01, -2.4949e-01,  1.7293e-01, -4.4664e-03,
         -4.6836e-01, -7.6747e-02, -1.3168e-01,  1.0060e-01,  2.0008e-02,
          3.8419e-03, -5.7433e-02, -1.6950e-01, -6.6572e-02, -5.5242e-02,
          3.2216e-02,  7.1873e-02, -1.6863e-01, -1.2284e-01,  7.5804e-02,
          6.4084e-01,  1.6497e-01,  4.2236e-01, -2.6860e-02,  4.4794e-03,
          2.2121e-01,  2.7282e-01, -9.1595e-04,  6.6692e-01,  3.6718e-01,
          3.4104e-01, -1.4973e-02, -5.8988e-02, -8.8147e-03,  4.4821e-06,
          6.9703e-02, -9.3840e-02, -1.7422e-01,  1.5911e-01, -2.1226e-01,
         -7.9106e-01, -5.2043e-03, -5.3537e-02, -3.4806e-02,  6.6253e-01,
          2.5264e-01,  2.8933e-01,  1.8127e-01,  3.2296e-02, -2.4545e-01,
          1.5773e-01, -3.0573e-01,  1.3679e-01,  9.5015e-01, -1.5219e-01,
          1.5644e+00, -1.0113e+00]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0847))
tensor([[ 1.6625e-01, -2.8560e-03,  8.7382e-02, -7.8155e-01,  2.6246e-01,
          7.8569e-02,  2.6617e+00, -2.7660e+00,  2.3380e+00,  9.9476e-01,
          1.6302e+00,  2.6997e+00, -1.2492e-02,  4.5064e-02, -3.9744e-02,
         -6.4544e-03, -2.9556e-01, -2.3083e-01,  6.7355e-03, -3.7138e-03,
          1.0629e-02, -1.0095e-01, -2.5830e-02,  1.0961e-03, -2.4802e-01,
         -9.0979e-02, -7.5087e-02,  2.0527e-01, -3.8997e-02,  1.2742e-01,
          3.0943e-02, -2.2844e-01, -2.4352e-02, -2.3041e-02, -3.4195e-02,
          3.7778e-02,  3.7208e-02,  2.3413e-01, -3.5023e-01, -1.1673e+00,
         -7.5808e-02, -3.9187e-01, -3.0110e-01,  2.6592e-01,  8.4733e-02,
          9.3662e-02, -2.5434e-02, -9.2081e-02,  1.2420e-01,  1.4370e-01,
          4.0090e-01,  3.0144e-02, -1.9067e-01,  1.6499e-01,  9.3124e-01,
          9.1829e-03, -6.3308e-02,  5.6147e-02,  9.0095e-05,  6.8567e-03,
          1.0227e+00, -1.0023e+00,  1.0113e-01,  3.9513e-02,  6.7279e-01,
          5.6353e-01,  4.8112e-02,  6.0518e-01, -8.6847e-01,  2.5642e-01,
          2.1653e+00,  6.1172e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0848))
tensor([[ 2.0691e-01, -7.4214e-01,  1.2189e+00, -8.8827e-01,  2.9847e+00,
          1.2947e+00,  8.8505e-01,  1.0985e+00,  1.3899e+00,  9.4127e-01,
          1.1096e+00,  1.0692e-01, -2.1010e-02, -2.4308e-01,  2.4134e-01,
          8.4461e-02,  2.4400e-01, -1.6250e-01,  8.5128e-02,  2.4527e-02,
         -7.5791e-04, -5.8026e-01, -2.2130e-02, -1.4324e-01,  1.6391e-02,
          3.4494e-02,  1.7130e-02,  2.0451e-02,  1.8726e-02,  6.0486e-01,
          3.4246e-03, -6.0762e-01,  5.6502e-01,  2.2142e-01, -1.0275e+00,
          2.7318e-01,  5.8429e-01,  3.4293e-01, -3.1433e-02, -2.4184e-01,
          2.0392e-01,  2.6520e-02, -7.2094e-02,  3.6444e-02,  2.6966e-02,
          4.8665e-01, -5.8070e-02,  2.1305e-01,  5.7318e-01,  5.8026e-01,
         -4.5855e-01, -3.8614e-01,  2.6458e-01, -7.9929e-01,  1.2828e+00,
          6.5320e-01,  8.4442e-01, -2.4409e-01, -1.3529e+00, -5.8030e-02,
          2.9624e-01,  3.3873e-02,  6.8754e-01, -1.2997e-01,  1.9603e+00,
         -1.6278e+00,  5.4633e-01, -3.5066e-01,  3.6395e-01,  1.7294e-02,
         -3.1572e-01,  9.0144e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0848))
tensor([[ 2.4092, -1.2311,  2.5565,  0.8383,  0.3334, -0.7310, -0.1906,  0.3722,
         -0.0678, -0.0071, -0.6864,  0.2492,  0.0322, -0.0252,  0.0931,  0.0197,
          0.0033, -0.0076,  0.0146,  0.9532,  0.0463, -1.0881,  0.0289,  0.0059,
         -0.0694,  0.0498,  0.1193,  0.1387, -0.0039, -0.0417,  0.0577,  0.0202,
         -0.0536,  0.2043, -0.0118, -0.0111, -0.0189, -0.0152,  0.0603, -0.1023,
          0.0175,  0.1028,  0.6936, -1.6201,  0.2456,  1.1852, -0.0381,  0.9750,
          0.3213,  0.7317,  0.4736, -0.3977,  0.0792,  0.0481,  0.0882, -0.0086,
         -0.2531, -0.0893, -0.2710,  0.0281, -0.1141,  0.1568, -0.2598, -0.0142,
         -0.4506,  0.1484,  0.2171,  0.0132,  0.3306,  0.1391, -0.4774,  0.1284]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0848))
tensor([[ 0.6656, -0.5608,  0.9587, -1.5116,  0.1435,  2.1943,  0.7140,  0.9085,
          2.8619, -1.3985,  1.4183,  0.7937, -0.0274, -0.0076,  0.0127,  0.0778,
          0.1287, -0.2600,  0.3892, -0.0079,  0.0122,  0.7630, -0.0486, -0.0853,
         -0.2794, -0.3047, -0.0975,  0.0546,  0.0058, -0.5101, -0.0253,  0.1133,
         -0.0862,  0.3574, -0.9286, -0.4972, -0.7093, -0.0551, -0.2493,  0.1261,
         -0.0263, -0.0974, -0.2358,  0.2301,  0.2305,  0.2043, -0.1887, -0.0987,
          1.0434,  0.1292, -0.3578, -0.5104, -0.1380,  0.0912,  0.0311,  0.0307,
          0.9159, -0.2307,  1.1260, -0.4292,  0.7044,  0.3511, -0.2878, -0.0038,
          0.5715, -0.8309, -0.4097,  0.5699, -0.6226,  0.0173, -0.0428, -0.1850]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0851))
tensor([[ 2.9066, -1.7766,  1.2278,  0.5782, -0.5335,  1.7764,  1.2823, -0.7174,
          2.0044,  1.9743,  1.0246,  0.7496, -0.4978,  0.1199, -0.0267, -0.0815,
         -0.2797, -0.3459,  0.1026,  0.7739,  0.4806,  0.2180,  0.1986,  0.1304,
          0.1163, -0.0642,  0.1458, -0.0462, -0.0099,  0.1924,  0.2307,  0.0317,
          0.0495, -0.3605, -0.0828,  0.1792, -0.1829,  0.1062,  0.9306,  0.6009,
         -0.0753,  0.1917,  1.5429, -0.1583, -1.2213, -1.7520,  0.6343, -0.0887,
          0.3518,  0.3631,  0.0251,  0.2284, -0.1073, -0.1695, -0.0782, -0.0963,
         -0.1574,  0.4417,  1.1647,  0.5484, -0.4196,  0.3762,  0.1790, -0.2046,
          0.1669,  0.8694, -0.1294,  0.2803, -0.2140,  0.2522,  0.4182, -0.2724]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0852))
tensor([[ 1.2516,  0.5803,  1.0434,  0.9533,  0.7185,  0.1026,  1.2683, -0.8386,
          0.0279, -0.4286, -0.2666,  0.0088, -0.4127, -0.1348, -0.1055,  0.4533,
          0.1620,  0.0302, -0.0879, -0.0141, -0.2618,  0.0298, -0.0117, -0.0065,
          0.4382, -0.3272, -0.0495, -0.0430, -0.0824,  0.0473,  0.4409, -0.1113,
          0.0998, -0.0243, -0.0399,  0.0127, -0.1661,  0.0925,  0.1905,  0.0497,
          0.1177, -0.0022, -0.1764,  0.1046,  0.5840,  0.2744,  0.5038,  0.6617,
         -0.4859, -0.4209,  0.7227, -0.5089,  0.2454,  0.6828,  0.5030,  0.2893,
         -0.2017,  0.1295, -0.2961, -0.1847,  1.1548, -0.9362,  1.6081, -1.0873,
         -0.5515,  0.1546, -0.0213, -0.0595,  0.8357, -0.4967, -0.2846,  0.1420]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0852))
tensor([[ 0.9309,  0.8696,  1.7861, -0.5086,  0.5728,  1.4560,  0.6349, -0.0711,
          0.6807, -0.3229,  1.9912,  1.6873, -0.2234,  0.0535,  0.0035, -0.0669,
          0.0126,  0.1181,  0.1436,  0.1114, -0.0914, -0.0051, -0.1088,  0.3358,
          0.0071, -0.1086, -0.5586,  0.2719, -0.0076, -0.3736, -0.0144, -0.0086,
          0.0264,  0.5485,  0.0772, -0.0322, -0.0161, -0.0962, -0.0215, -0.0037,
          0.6307,  0.0230,  0.1315,  0.1022, -0.0879, -0.5015,  0.4923, -0.8504,
          0.1553,  0.3105,  0.5616,  0.0389, -0.1109,  0.0846, -0.1525, -0.8893,
          0.6221,  0.6507, -0.0213,  0.0115, -0.2378,  0.1853, -0.3566, -0.0055,
         -0.0893,  0.0485,  0.1881, -0.0406,  0.6603,  0.6241, -0.6330,  0.1851]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0852))
tensor([[-5.7045e-01,  3.9434e-01,  3.3279e-01,  4.9819e-01,  4.9126e-01,
          5.0970e-01, -1.0528e+00,  2.3384e-02,  2.1386e+00,  4.2845e-01,
          8.8182e-02,  2.3746e+00,  2.8770e-03, -1.8088e-02, -5.6755e-02,
          8.9761e-02,  7.1241e-02,  4.1175e-02, -6.6125e-02, -1.7928e-02,
         -2.1488e-02,  3.0686e-01, -4.5124e-02, -3.0070e-02,  9.2525e-03,
         -1.2727e-02,  7.4050e-02,  1.6628e-03,  4.8254e-04,  3.2855e-01,
         -1.7628e-01,  7.5449e-03, -8.4580e-02,  1.0965e-02, -6.5262e-02,
          7.4592e-01,  1.2942e-01, -4.7734e-02, -1.2082e+00, -1.5763e-01,
          2.1262e-02, -3.5700e-02,  2.0119e-01,  5.6038e-02,  1.1132e-01,
         -9.7562e-02, -1.0783e-01, -2.3952e-01,  6.5371e-02,  4.6480e-01,
         -1.4052e-01,  1.8523e-01, -2.4956e-01,  3.0000e-01,  2.1403e-01,
         -1.7760e-02,  1.1524e+00, -5.0122e-01, -3.2490e-01, -6.6263e-01,
         -5.1116e-01, -3.1145e-02,  4.2448e-02, -2.5455e-02,  1.4923e+00,
          5.7012e-01, -1.2911e-01,  1.7151e-01, -2.0229e-01,  1.6584e-01,
         -1.4037e-01, -5.1998e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0854))
tensor([[ 2.5142,  0.4302, -0.1041, -0.2199,  0.9964,  2.5814,  1.8531,  0.9084,
          0.2821, -0.4712,  0.3106,  2.8895,  0.4487, -0.6353, -0.2082,  0.3413,
          0.0429, -0.0034,  0.1311,  0.1622, -0.4202, -0.0727, -0.0802, -0.0406,
         -0.0416, -0.0410,  0.0105, -0.0369,  0.0050, -0.0504,  0.0107, -0.0971,
         -0.0136, -0.9813, -0.0663, -0.4434, -0.7767, -0.1961, -0.0082, -0.1085,
         -0.0659,  1.1164, -0.8014, -0.3444,  0.9844, -0.4995, -0.2491, -0.2453,
          0.3261, -0.1308,  0.0779, -0.0940, -0.5276,  0.2321, -0.0315, -0.0360,
          0.1499,  0.8016,  0.0150, -1.1534,  1.1129,  0.5515, -0.4710,  0.3984,
         -0.1807,  0.1156, -0.0391, -0.0466, -0.1275,  0.1348,  2.1138, -0.3508]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0856))
tensor([[-2.4412e-01,  2.7011e-01,  2.9839e+00, -4.5933e-01,  5.8131e-01,
          2.8774e-01,  6.0591e-01,  9.3866e-01,  1.2403e+00,  1.1127e+00,
          1.2650e+00,  7.0396e-01,  1.0883e-01, -8.6376e-04,  4.8154e-02,
          1.2577e-01,  5.3473e-02, -7.1407e-02,  1.9850e-01, -4.3145e-02,
         -1.3303e-01, -9.0375e-01, -2.9858e-01, -2.8984e-01,  2.0612e-01,
          2.6758e-01, -1.2168e-01,  1.1682e-01,  2.4035e-02,  2.3714e-01,
         -2.0947e-01,  2.0227e-01, -4.0047e-01, -2.3417e-02, -9.5031e-03,
          1.9725e-02,  2.8248e-01,  3.9513e-01,  6.4160e-01,  3.5013e-01,
          5.0918e-01,  1.5982e-01, -3.6618e-01, -2.1469e-01,  4.3527e-01,
          8.6897e-02,  5.3175e-02, -4.8007e-01,  8.9805e-01,  7.1834e-01,
         -2.5657e-01, -1.7552e-01,  3.8346e-01,  2.6810e-01,  5.9369e-01,
          7.6785e-01, -4.0428e-01,  1.5857e-01,  8.8474e-02, -5.5649e-02,
          1.0921e-01,  8.3625e-02,  4.7084e-01, -7.3033e-02,  6.7826e-01,
          6.9716e-01,  4.7478e-02,  3.7276e-01,  8.3775e-01, -1.1327e-01,
          1.4749e-01,  1.2639e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0856))
tensor([[-3.0372e-02,  2.0353e-01,  1.9067e+00,  1.4085e-01, -5.1393e-01,
          1.1279e-01,  2.5372e-01,  4.9822e-01, -2.7695e-02,  4.1193e-01,
          1.8409e+00,  1.9050e+00, -8.7703e-02, -1.3558e-02,  4.5186e-02,
         -3.3602e-02,  4.6086e-03,  5.3568e-02, -2.4085e-01, -4.9158e-02,
          6.3801e-02, -5.8558e-02,  4.0125e-02,  1.5392e-01, -1.4141e-01,
          1.5099e-02, -1.5059e-01,  3.9684e-02, -9.4532e-01, -4.8691e-01,
          2.5395e-01,  1.5751e-02, -2.4229e-02, -1.9038e-02, -5.8076e-02,
         -7.9712e-02, -5.4539e-02, -9.1729e-02,  1.0528e-01, -3.0699e-01,
         -2.6728e-01,  7.7710e-01, -1.2398e-01,  5.2044e-02, -4.6555e-02,
         -7.7839e-02,  1.1893e-01,  1.6100e+00, -2.8579e-01, -7.7849e-01,
         -2.2432e-02, -2.1789e-01, -4.6503e-01,  7.4992e-02,  2.9304e-01,
         -6.6924e-04, -4.2255e-02,  5.4828e-02,  1.3898e-02, -3.0083e-02,
         -2.6035e-01,  1.7708e-01, -1.2776e-01,  1.2059e-01,  2.7123e-01,
         -2.4565e-03, -7.7268e-01,  1.1067e-02, -5.8690e-01,  6.0125e-01,
          2.0133e-01,  5.1846e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0856))
tensor([[ 5.0725e-01, -4.9680e-01,  2.8360e-01, -2.1560e-01,  1.5456e-01,
          2.9169e-01, -1.0222e-03,  8.0360e-02,  2.7165e-01,  5.0006e-01,
          1.9958e+00, -6.6462e-02, -1.0999e-02, -4.4127e-02,  8.1151e-02,
          5.0971e-02,  5.1625e-02, -3.3422e-01,  3.8079e-01, -1.1694e-02,
         -1.2098e-02,  1.4050e-01, -7.9545e-02,  2.0325e-01, -2.1292e-02,
          1.8644e-01, -7.2019e-02,  2.0349e-02,  1.7053e-02, -6.6528e-01,
          2.7659e-02, -1.2894e-02,  1.0483e-02, -6.1341e-03, -2.4827e-02,
          2.1334e-02, -3.4280e-02,  3.0383e-02,  3.1012e-02,  5.6875e-02,
         -1.1211e-01,  2.8351e-01,  9.4823e-01, -2.3741e-01, -4.8630e-01,
         -1.1799e+00,  5.0243e-01,  1.3324e+00, -1.6928e-01,  1.7268e-01,
         -1.0316e+00,  3.9665e-01, -2.2938e-01,  2.0428e-01, -5.7931e-03,
          1.9694e-02, -3.6328e-01,  2.0359e-01, -2.4348e-02,  3.3454e-01,
         -5.9154e-02,  5.0528e-02, -7.2419e-02,  8.8775e-02, -2.8911e-01,
          2.1384e-01, -8.4087e-02,  7.5205e-02, -1.0035e+00, -1.8421e-01,
         -6.4689e-01,  1.1052e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0858))
tensor([[ 0.2468, -0.7041,  0.1873, -0.2860,  1.5909,  0.0364, -0.0356, -0.0292,
         -0.0285,  0.4280,  0.1139,  1.2573,  0.3864,  0.0331,  0.0098, -0.0395,
          0.0055, -0.0212,  0.0079,  0.0314, -0.5093, -0.3195, -0.0256,  0.0342,
         -0.0802,  0.0086, -0.0565, -0.1899, -0.1931,  0.3020,  0.2399, -0.1439,
          0.3384, -0.0383, -0.0244,  0.0260, -0.0206, -0.0039, -0.0458, -0.0528,
          0.0294, -0.1908, -0.0898, -0.1942,  0.9600, -0.1228, -0.3557,  0.6223,
          0.7765, -0.5851, -0.4312, -0.1721,  0.2266, -0.8317, -0.0652, -0.0428,
         -0.3236,  0.1896, -0.0169, -0.0556, -0.1075,  0.0633,  0.0384, -0.0261,
         -0.0284,  0.0566, -0.0426,  0.0921, -0.1390,  0.1393, -0.4957,  0.5025]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0859))
tensor([[-2.7018e-01,  1.8275e-01,  1.8304e+00, -1.2150e-01,  8.8645e-01,
          1.6422e-01,  2.5281e+00,  9.0033e-01, -5.7319e-01,  2.1624e-01,
          7.8369e-01,  8.9492e-02,  1.3924e-01, -1.6637e-02,  1.1201e-01,
          2.8520e-01, -3.7012e-02, -4.9962e-02,  2.4504e-01, -4.6675e-03,
         -2.4230e-01, -1.5407e-01,  1.0555e-01,  4.9237e-02, -1.8147e-01,
         -2.0674e-02,  3.9806e-03,  6.7471e-02, -1.1828e+00,  1.8877e-03,
         -1.5317e-02, -6.1695e-01,  3.1156e-02, -1.6598e-02,  1.8263e-02,
         -4.5139e-02, -1.2929e-01, -1.0044e-02,  1.7420e-01, -1.1643e-01,
         -2.8100e-02,  5.2083e-02, -1.0704e-02,  3.0053e-02,  3.9178e-01,
         -1.9687e-01, -1.8376e-01,  1.7594e+00, -1.3359e+00, -7.0471e-01,
         -1.5795e+00,  2.6892e-01,  2.0438e-01, -2.8441e-01,  5.3825e-01,
          9.4671e-02, -5.7346e-02,  5.5873e-02, -2.9569e-01,  7.8221e-02,
          1.3354e+00, -8.0170e-01, -2.5361e-01, -1.4268e-01, -3.8397e-01,
          6.4399e-02,  1.2085e-01,  1.5952e-02, -5.1926e-01,  1.1251e-01,
         -2.0520e-01,  1.2287e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0859))
tensor([[ 1.0760, -0.7221,  1.7758,  0.3210,  0.2748,  0.1882,  0.0933, -0.0776,
          3.1041, -0.4955,  0.2528, -1.0169, -0.0378,  0.1262, -0.1458, -0.0363,
         -0.0239, -0.0384,  0.0328, -0.2548,  0.0648, -0.2567,  0.0250, -0.0906,
         -0.3230, -0.0664, -0.0203,  0.2047, -0.7165, -0.5758, -0.0236,  0.0261,
         -0.0166, -0.0224, -0.2137,  0.0145, -0.0237,  0.0089, -0.0097, -0.0405,
         -0.0242,  0.1398,  1.2280, -0.5430, -0.5089, -1.3638,  0.6749,  0.8566,
          0.4360, -1.1283, -0.1803,  0.6986, -0.2678,  0.1359, -0.0929,  0.0623,
         -0.0787,  0.0655,  0.0471,  0.3956, -0.2109,  0.1626,  0.1266, -0.0571,
         -0.6926, -0.8339,  0.9936, -0.0079, -0.1685,  0.0896,  0.1499,  0.1361]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0860))
tensor([[ 2.8539, -0.2533,  1.1484,  0.7648,  2.0858,  0.1691,  0.7711, -0.2998,
         -0.2468, -0.4723,  0.4314,  0.8811,  0.1702, -0.3536, -0.6639, -0.2678,
         -0.2071, -0.0772, -0.0305,  0.0702, -0.5821,  0.1425, -0.0046, -0.0082,
          0.1482, -0.1641, -0.2109, -0.2017, -0.0557,  0.1602,  0.5376,  0.2524,
         -0.0939, -0.0821,  0.0206, -0.0258, -0.3453,  0.0796,  0.1535, -0.1130,
         -0.0365, -0.0751, -0.2134,  0.0798,  1.4780, -0.2808, -0.0756,  1.0080,
         -0.3419, -0.3409,  1.0618, -0.3923,  0.6117, -0.5005,  0.3898, -0.0074,
         -0.2100,  0.0756,  0.2713, -0.0651,  0.2892,  0.5414,  0.1259, -0.1028,
         -0.4890, -0.0627,  0.3676, -0.0435, -0.1982,  0.1259, -0.4457, -0.0447]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0861))
tensor([[ 9.3163e-01, -6.2923e-01, -2.4455e-02,  2.6905e-01,  1.6123e+00,
          3.1116e-01,  8.6735e-01, -9.1868e-01,  8.8156e-01,  1.3587e+00,
          5.9412e-01,  2.2586e+00,  1.0776e-03, -2.1997e-02,  6.9302e-02,
          2.0231e-01,  1.4301e-01, -2.4156e-02, -3.6834e-02,  8.4742e-02,
         -2.2831e-02,  4.4065e-02, -3.9588e-02, -1.7169e-02,  1.1772e-01,
         -1.7884e-01,  2.7724e-01,  1.5087e-01, -1.5957e-02, -1.1483e-01,
         -7.0479e-02,  6.8712e-01,  3.7022e-01, -2.4257e-02, -3.7446e-02,
          8.6123e-02,  6.2019e-02,  4.2130e-02, -5.3408e-02, -4.9411e-02,
          4.5921e-02, -9.4600e-02, -3.4518e-01,  9.6811e-02,  9.0884e-02,
          2.9079e-01, -4.3710e-02, -1.2873e-01, -5.4685e-01,  4.6986e-01,
          8.5279e-03,  2.2977e-02,  1.2130e+00,  3.1726e-01,  1.1453e+00,
         -4.1246e-01, -2.4602e-01,  1.4805e-01,  4.4741e-04, -1.2787e-01,
          5.0954e-01, -1.0826e+00, -8.0981e-01,  4.6135e-01, -1.0955e-01,
          4.6604e-01, -2.3166e-02,  3.1641e-01,  9.3053e-02, -3.7391e-02,
          6.6843e-01, -1.7619e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0861))
tensor([[ 1.1746e+00,  8.7387e-01,  1.0608e-01,  2.7738e-01,  8.8495e-01,
          3.8596e-01,  8.1648e-01, -1.8656e+00,  3.2304e+00, -1.0479e+00,
          4.0999e-01,  4.3417e-01,  1.4606e-01,  1.5803e-01,  1.7840e-01,
          1.2308e-01,  3.2494e-02,  1.4314e-01, -1.4901e-01,  1.8350e-03,
          1.7071e-01, -3.8283e-02, -3.4155e-02,  1.3725e-02, -1.1516e-01,
          1.5601e-01,  7.4862e-02, -7.6383e-02, -2.7431e-03,  6.9288e-02,
         -1.6021e-02,  2.3512e-01,  5.3369e-01,  3.0218e-02, -3.4647e-01,
         -8.0900e-02, -5.3353e-01,  4.2014e-01, -5.1715e-01,  4.6012e-01,
          1.4401e-01, -3.7267e-01, -3.8679e-01, -4.1489e-01,  1.1659e+00,
         -1.0714e-01,  2.3668e-01, -5.3046e-02,  2.1716e-02,  2.7638e-02,
         -1.1841e-01,  1.3235e-01, -9.0128e-02, -1.1926e-01, -3.9028e-01,
          9.1369e-01, -9.6573e-02,  1.2021e-01, -2.7102e-01,  1.1792e-01,
          3.7400e-01,  2.8952e-01, -4.9422e-01,  1.6407e-01,  1.0594e+00,
         -2.4479e-01, -6.2967e-01, -3.6630e-01,  1.4351e+00, -5.3678e-01,
          4.9288e-01,  4.2811e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0863))
tensor([[ 2.4420e+00,  1.1747e+00,  3.6608e-01,  2.0867e-01, -2.5142e-01,
          3.1694e-01,  3.4711e+00,  9.5773e-01,  5.6608e-01,  1.0719e+00,
          3.9477e-01,  8.6921e-01,  1.7568e-01,  4.8894e-02, -4.2254e-02,
         -4.0936e-02, -3.9571e-01,  6.3661e-02, -1.8380e-01,  4.5761e-01,
          6.7346e-01,  2.6899e-03,  5.1562e-03,  2.4013e-02, -2.6063e-01,
          2.2449e-01, -1.1396e-01, -1.8062e-01,  2.8661e-02,  2.3911e-02,
         -1.5850e-01,  7.2161e-02, -2.8379e-02, -4.3599e-03, -1.8325e-02,
          1.3473e-02, -4.8395e-01,  2.1338e-01,  2.3958e-01, -1.9394e-02,
         -9.0025e-03, -2.0189e-02,  7.5951e-01,  9.3845e-01, -1.2243e-01,
          8.7388e-02,  3.7918e-02, -3.1749e-01,  2.7995e-01,  1.0963e-01,
         -2.5304e-02,  1.5931e-02, -1.5212e-02, -1.3018e-01,  4.7689e-03,
          7.4402e-02, -1.7856e-01,  1.2985e-01,  2.9477e-01, -9.6288e-02,
          1.6544e+00, -7.2428e-01,  2.9615e-01, -1.1806e+00, -9.9362e-01,
          8.2388e-02, -4.1244e-01,  4.8402e-02,  3.9326e-01, -5.4088e-01,
         -5.6935e-01,  1.6588e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0865))
tensor([[ 1.1186e+00,  1.2681e+00,  1.1515e+00,  1.6227e+00, -1.2238e-01,
         -8.8903e-04,  8.2707e-01, -3.4089e-01,  1.4354e+00,  1.3591e-01,
          2.4037e+00, -2.0788e-01, -7.5868e-02, -1.9908e-03, -1.3103e-02,
         -8.2785e-02,  8.9680e-02,  8.0115e-01,  6.5380e-01,  1.1443e-01,
         -5.2453e-02,  6.7306e-01, -4.6162e-02,  2.7735e-02, -1.1913e-01,
         -3.6047e-02, -9.9671e-02, -1.4537e-01,  1.8457e-02,  7.8572e-01,
         -5.4713e-03,  3.3930e-02, -2.3398e-02, -2.1955e-02,  4.1665e-01,
         -2.6142e-01, -5.1346e-01, -2.8118e-02, -1.4621e-01, -1.1788e-01,
          2.8035e-01, -9.4845e-02, -6.2999e-01,  2.5336e-01,  2.2172e-01,
         -6.2928e-01,  2.0466e-01,  7.3399e-02,  8.3655e-01,  4.3467e-01,
          2.4147e-01,  6.1758e-01, -5.1455e-02,  6.5404e-02, -6.1108e-01,
          6.4342e-01, -7.3443e-02,  2.8900e-02,  2.4862e-02, -3.8110e-02,
          1.3676e+00,  2.0680e-01, -9.3525e-01,  4.0074e-01,  1.6654e+00,
         -9.7421e-01,  1.4208e+00, -8.6849e-01, -1.0845e+00, -3.0832e-01,
          7.6209e-01, -4.6403e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0867))
tensor([[-4.3286e-01, -1.8541e-01, -1.6817e-01, -4.6494e-01,  2.5682e+00,
          1.0136e+00,  1.6637e-01,  4.0397e-01,  2.9285e+00, -7.0997e-02,
          1.3026e+00, -1.5741e-01, -7.1891e-02,  1.0817e-02,  3.8224e-02,
         -4.1805e-02,  2.8370e-02, -3.8024e-02,  5.7354e-02, -4.6044e-03,
         -5.6091e-02,  3.5685e-01,  1.8849e-01, -2.0873e-03, -1.1715e-01,
         -1.8942e-03,  3.2573e-03, -5.2402e-03,  1.8010e-03, -4.7873e-01,
          3.5422e-01,  2.4948e-01, -8.1321e-01, -2.6968e-03, -4.7881e-01,
         -2.9969e-01,  1.7922e-02, -1.4572e-02, -7.0073e-01, -3.7039e-01,
         -1.3033e-02,  6.0424e-02,  3.8386e-02, -6.5182e-02, -4.1933e-02,
          6.4971e-02, -1.0164e-01,  8.1346e-02, -3.7097e-01,  1.0180e+00,
         -2.2611e-01, -3.1263e-01,  2.3597e+00, -5.6467e-01,  2.4950e-01,
          7.3922e-01, -3.7548e-01, -7.7589e-02,  6.6988e-01, -9.3933e-02,
         -2.1999e-01,  1.5471e-01,  2.3236e-02, -1.3901e-01,  1.0999e+00,
          2.7348e-01, -2.7817e-01,  7.8509e-01, -1.4980e-01, -2.9218e-01,
          3.7266e-02, -1.8375e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0868))
tensor([[ 8.1806e-01,  5.9616e-01,  4.4354e-01,  6.6192e-01,  2.1595e+00,
          1.5033e+00, -2.2608e-01,  3.8200e-01,  2.0665e-01, -6.9007e-01,
          9.9434e-03,  9.3828e-01,  2.6372e-02, -7.4368e-02, -1.3449e-01,
          1.1083e-01, -9.9148e-02,  2.2146e-01,  2.3583e-01, -2.7578e-02,
          3.1784e-04,  5.1061e-01,  1.9296e-01,  1.4477e-01, -3.9340e-02,
          7.5826e-02,  1.5436e-01,  6.2642e-02,  4.0287e-02,  4.7111e-01,
         -8.4321e-01, -1.8248e-02, -5.0887e-02, -1.7420e-02,  1.3049e-01,
          5.0643e-01, -2.1696e-02, -7.5134e-03,  2.1710e-02, -9.7568e-02,
         -5.3751e-02, -1.2151e-01, -5.6478e-01,  3.3645e-01,  8.5977e-02,
         -3.0117e-01,  1.3731e-03, -2.3007e-02, -2.3558e-01,  1.1654e+00,
          3.2030e-01,  3.2502e-01, -5.7864e-02,  6.1469e-01,  1.3510e-01,
          3.6376e-02, -3.4637e-01, -1.8520e-01,  4.3639e-02, -2.7008e-01,
          1.7534e-01,  3.7317e-04, -1.8639e-01,  6.7207e-03, -6.2154e-02,
          9.4448e-02, -2.7412e-01,  8.8623e-02,  2.4056e-02,  8.9142e-02,
          5.3018e-01, -5.7231e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0868))
tensor([[ 3.3764e-01,  2.1593e-01,  1.8174e+00, -6.0234e-01,  8.5480e-02,
          8.4370e-01,  1.0150e+00, -1.2124e-01,  5.9297e-01, -1.0571e+00,
         -3.6999e-02,  1.8246e+00, -1.8919e-03,  3.6346e-02, -9.4596e-04,
          2.2508e-01, -2.7654e-01, -3.7957e-02, -3.1801e-02, -5.7111e-03,
          1.7602e-02, -8.1216e-01,  3.7762e-01,  1.2810e-01,  7.1156e-02,
         -7.6976e-02, -1.7032e-01, -1.4992e-01,  2.6959e-01,  3.9278e-01,
         -2.3794e-02, -1.2346e-01,  9.8056e-03,  3.2822e-02, -1.2137e-01,
         -2.7692e-01,  5.3884e-01,  5.4262e-02,  2.4390e-01, -5.1422e-01,
         -9.5166e-03,  1.0382e+00, -2.5467e-01,  1.6173e-01,  1.4789e-01,
         -9.9164e-02,  5.3539e-02,  6.5743e-01,  7.7013e-01,  2.6380e-02,
         -8.1326e-01, -1.2032e-01, -2.6222e-01,  1.5696e-01, -1.1820e-01,
         -4.4196e-02, -2.0322e-01,  2.5884e-02,  3.1837e-01, -1.0163e+00,
          2.9856e-01, -7.8141e-02, -1.0213e-01, -3.5346e-02,  1.9901e-01,
          2.8420e-01, -6.3658e-01, -2.4788e-01, -5.5913e-02,  5.2838e-02,
          4.8076e-01,  6.1540e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0869))
tensor([[-2.1832e-01, -3.2761e-01,  1.1047e+00,  9.1849e-01,  3.4456e-01,
          9.0850e-01,  4.6237e-01,  2.6125e-01,  8.4367e-01, -8.8704e-01,
         -6.4521e-02,  1.9689e+00,  6.0339e-03,  2.1461e-03, -3.5718e-02,
          3.3743e-02,  7.0990e-02,  5.8521e-02,  7.8997e-02,  1.7084e-02,
          1.9215e-02, -3.6456e-01, -3.8008e-02, -3.2722e-02,  1.7153e-01,
         -3.4469e-01, -1.1001e-01, -5.8587e-02,  1.2173e-01, -3.4016e-01,
         -4.9061e-02, -7.2025e-02,  5.2588e-02, -4.3229e-01, -3.2841e-01,
         -2.2933e-01, -8.3402e-02,  6.0700e-02,  4.7368e-01, -1.9389e-01,
         -8.8235e-02,  9.2675e-01,  3.7053e-02,  1.4040e-01,  1.6064e-01,
          1.7029e-01,  4.6530e-02,  1.4528e+00, -6.6824e-02, -1.0012e+00,
          1.8951e+00, -7.7374e-01, -2.6549e-01,  1.5695e-01,  9.2739e-03,
          1.8408e-03,  5.5079e-01,  5.7715e-01,  8.1090e-02, -1.0943e+00,
         -2.4056e-01, -1.0278e-01, -6.1539e-02,  1.1481e-01,  1.0399e+00,
         -4.7405e-01, -1.3002e+00,  4.3956e-01, -7.0155e-02,  4.0362e-03,
          7.3724e-01,  1.4864e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0869))
tensor([[ 0.2805,  0.1231, -0.6435,  0.7069,  0.3955,  0.8719,  2.1659, -1.0992,
          0.1661, -0.0972,  0.2273,  0.1250, -0.0851,  0.0225, -0.0060,  0.1678,
         -0.2672, -0.4130, -0.1135,  0.3945, -0.0684, -0.0297, -0.0326, -0.0206,
         -0.0820, -0.0289, -0.0399,  0.0604, -0.0143, -0.0114,  0.1301, -0.2844,
          0.0219,  0.3731,  0.0364,  0.0287, -0.4881,  0.0559, -0.0113, -0.0207,
          0.2167,  0.0161,  0.6495, -0.8578, -0.1614,  0.4197, -0.3647,  0.2244,
          0.0842,  0.0872, -0.5291,  0.1072,  0.6973, -0.2251, -0.5674, -0.1740,
          0.0265,  0.6052,  0.0197,  0.7868, -0.5300,  0.2754,  0.4554, -0.1450,
         -0.1877,  0.1199, -0.0170, -0.0271, -0.7590,  0.0545, -0.4136,  0.2552]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0869))
tensor([[ 1.8583e+00, -4.7750e-01,  9.3435e-01, -9.6122e-01,  2.2364e-01,
          2.0407e+00, -2.1517e-01, -4.0359e-01,  9.7666e-01, -1.2378e+00,
          1.9053e-02,  5.5451e-01,  1.8585e-01, -1.0859e-01,  1.3636e-02,
          2.5000e-02, -1.5269e-01,  1.6242e-01,  2.8074e-02,  6.6765e-01,
          3.4008e-01, -6.9013e-02,  1.5911e-01, -1.3315e-01, -3.8958e-02,
         -5.5278e-02,  1.6229e-01, -1.1021e-01,  6.7397e-01, -1.0308e-01,
         -2.4293e-02, -1.4524e-02,  3.9026e-02, -4.7087e-01, -2.3802e-01,
         -5.5664e-01,  1.9047e-01,  1.0134e-01,  1.3160e-01, -3.0310e-01,
          4.8703e-02,  5.7681e-01,  7.3899e-01, -8.2700e-01,  2.4096e-01,
          1.1591e+00,  2.8691e-01,  6.3745e-01, -1.0128e+00, -9.1625e-02,
          3.6258e-01, -1.1161e-01, -2.4072e-01,  1.4942e-01, -9.7635e-02,
         -4.9053e-02,  3.6720e-01,  2.8099e-01, -7.1457e-01,  1.4336e+00,
         -4.3566e-01,  1.3390e-01,  1.3502e-03, -1.0788e-01, -2.7101e-01,
          1.0337e-01, -5.9803e-02,  9.1051e-02, -1.0163e-01,  2.0924e-02,
          1.7965e+00, -4.7951e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0869))
tensor([[ 0.8700, -1.6291,  0.4121,  0.2849,  0.3054,  0.1114,  0.2197,  0.6719,
          1.6568,  0.0809, -0.2470,  1.5747,  0.4957, -0.0892, -0.0855, -0.2115,
          0.0726,  0.1255, -0.3073,  0.1994, -0.4378,  0.0223, -0.0277, -0.0328,
         -0.0373,  0.0517, -0.2419, -0.1982,  0.0524,  0.0405,  0.0254, -0.0112,
          0.0341, -0.0242, -0.0245, -0.0869, -0.0097, -0.1360, -0.8568,  0.0069,
          0.1275,  0.0248,  0.2386,  0.4832,  0.1508, -0.3289, -0.7333,  0.7025,
         -0.2103, -0.3838, -1.0057,  0.5407, -0.2503,  0.2108,  0.1492, -0.2362,
         -0.0786,  0.0736,  0.0653, -0.0549, -0.1401,  0.0557, -0.1633,  0.1822,
          1.1695,  0.2070, -0.5718,  0.3965, -0.5579,  0.1332, -0.5992,  0.0426]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0874))
tensor([[ 2.3953,  2.1754, -0.1157, -0.5131,  1.3213,  1.5383,  2.2416, -0.7700,
          0.4817,  0.4658,  0.4611,  1.8894, -0.3296, -0.5481, -0.5302, -0.0249,
          0.0544,  0.0233,  0.0133, -0.0100, -0.2992,  0.1035,  0.0549, -0.0881,
          0.0361, -0.0392,  0.0260, -0.0376,  0.0383,  0.1018, -0.0198,  0.0429,
         -0.0238,  0.0382, -0.0585, -0.9600, -0.7519,  0.2370,  0.6024, -0.1906,
         -0.1091, -0.0247,  1.2821,  0.0072, -0.2724,  1.3803, -0.1982, -0.3404,
         -0.1644,  0.3559, -0.1028, -0.0696, -0.4527, -0.0187,  0.0644,  0.0381,
          0.4396, -0.4311, -0.1419,  1.0461, -0.2371,  0.6012,  0.0270, -0.2443,
          0.1537,  0.5809, -0.4332,  0.1006, -0.2217,  0.2561,  2.3651, -1.0834]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0874))
tensor([[ 2.9475e+00, -1.2672e-01,  4.9030e-01,  7.6870e-02, -5.2350e-02,
          4.1521e-01,  2.0581e+00,  1.3520e+00,  1.3217e+00,  3.7163e-01,
          1.2317e+00, -3.7506e-01, -2.9544e-01,  1.3788e-01, -5.3724e-02,
          8.7057e-02, -1.5549e-01,  3.6347e-02,  7.6583e-02,  1.3783e+00,
          3.8491e-01,  3.5676e-03,  3.7337e-02, -1.3984e-02, -1.0745e-01,
         -1.4189e-01, -5.3874e-02, -1.0742e-01,  1.4273e-03,  2.2552e-02,
          2.8047e-01,  1.0666e-01, -9.2110e-02, -2.2248e-02,  5.0143e-02,
         -9.8240e-02, -8.6551e-01, -5.4701e-01,  5.3381e-03, -3.6366e-03,
         -3.7444e-01,  1.0196e-01,  1.9508e+00, -1.6944e+00, -5.6057e-01,
          8.9007e-01, -7.0773e-01, -2.3241e-01,  2.2697e-01,  1.0761e-01,
         -9.9699e-03,  3.0575e-02, -3.6470e-01,  1.6817e-02, -6.5729e-01,
         -7.4564e-01, -2.0309e-01,  1.1641e-01, -3.2621e-02, -1.1611e-01,
          9.5287e-01,  6.2836e-01,  1.3457e+00, -1.1549e-01, -6.3755e-01,
          1.7878e-01, -2.9801e-01, -3.1267e-02,  1.6485e+00, -5.0852e-01,
          5.0819e-01, -2.2314e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0875))
tensor([[ 4.1901e+00,  1.1607e+00,  7.4598e-01, -1.6462e-01,  1.8407e+00,
          7.4798e-01,  8.1756e-01,  3.8080e-01,  4.1352e-01,  6.3575e-01,
         -5.0716e-01,  4.3889e-01, -1.6496e-01, -6.0122e-01, -1.1105e-01,
          3.1897e-01, -2.3810e-01,  1.9209e-02,  7.2529e-03, -5.8696e-01,
         -7.1185e-01, -5.9155e-02, -3.0958e-03, -5.6309e-02,  3.4706e-02,
          1.3975e-01, -5.4315e-02,  2.4096e-03,  6.3858e-02,  3.7380e-02,
          6.0583e-01, -3.4102e-01, -1.3057e-01,  3.2119e-02,  1.2042e-01,
         -2.2009e-02,  2.0594e-01, -1.2938e-01, -1.2888e-01,  1.6661e-02,
         -1.0427e-03, -6.1518e-04,  1.4127e-01, -8.0792e-01,  1.1701e+00,
         -1.5382e-01, -1.8374e-01, -1.9700e-01,  2.0528e-01,  1.2200e-01,
          2.1888e-02, -4.2525e-02,  2.5383e-01, -6.9587e-02, -3.1999e-01,
          5.0243e-01, -6.6796e-02,  1.0846e-01,  3.8107e-03, -5.2512e-02,
          2.3712e-02,  1.6432e-02, -5.6068e-02,  1.1350e-01,  9.8638e-02,
          1.1438e-01, -2.4621e-01, -1.5711e-01, -7.7233e-03, -1.9090e-01,
         -1.1837e-01,  2.1392e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0877))
tensor([[ 0.8237, -0.7375,  0.5296,  0.0651, -0.0461,  0.1858, -0.4308, -0.0345,
         -0.1162,  0.0170, -0.9175,  1.1808, -0.2719, -0.0135,  0.0305, -0.0338,
         -0.0553, -0.0324, -0.0562,  0.0027,  0.3161,  0.3498,  0.1220, -0.3362,
         -0.0645, -0.0020,  0.0229,  0.0537,  0.0133,  0.0441, -0.0231, -0.0446,
          0.0195, -0.0224,  0.0494, -0.2393, -0.1159, -0.0297, -0.0302,  0.0069,
         -0.0192,  0.2673,  0.0560, -0.2812,  0.7062,  0.3447, -0.3602, -0.2652,
         -0.2361,  1.1454,  0.5333,  0.2317, -0.1133,  0.0792, -0.0085,  0.0213,
         -0.1255,  0.0287, -0.0889,  0.0067,  0.0730, -0.1332, -0.0877,  0.0166,
         -0.2291,  0.1548,  0.1360, -0.1022,  0.2611,  0.1393,  0.8250, -0.1525]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0878))
tensor([[ 1.9646e-01,  3.6998e-01,  3.7238e-01, -1.5953e-01,  2.0186e-01,
          2.4302e+00,  1.0916e+00, -1.2845e+00,  1.0504e+00,  6.2478e-01,
          3.2923e+00,  8.5798e-01,  3.6392e-02,  4.5324e-02,  2.1657e-03,
          1.0903e-01, -1.4778e-01, -1.2488e-01, -1.0508e-01,  9.9243e-02,
         -1.4743e-01,  2.9921e-03, -9.5261e-02,  2.2705e-01, -3.7060e-02,
         -9.3719e-02,  9.8811e-02, -5.2883e-02,  3.4481e-02, -2.3914e-02,
         -1.6927e-02,  1.2932e-01,  3.4386e-01, -1.7256e-02,  6.4215e-01,
         -4.1221e-01,  5.5101e-01, -1.1065e+00,  2.3604e-02,  7.5266e-02,
          1.6278e-01,  8.4342e-02,  5.7624e-01, -4.0093e-01, -1.7335e-01,
         -9.1314e-01,  5.4097e-01, -1.8525e-01,  1.1633e-01,  1.5284e-01,
          1.4510e-01, -8.5300e-02,  9.8669e-02, -2.3221e-02,  6.6085e-02,
         -1.7058e-02, -7.3014e-02, -4.9500e-01, -8.9125e-01, -1.0390e+00,
          2.0606e-01,  6.5823e-01, -4.1967e-01, -1.7836e-01,  4.9679e-01,
         -2.3076e-01,  5.5390e-01, -2.1576e-01,  2.4911e+00,  3.1751e-01,
          1.6968e-01,  5.0052e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0879))
tensor([[ 2.1554,  1.0035,  1.0583,  0.2458,  0.6525,  2.4241,  0.7817, -0.8508,
          1.7034,  0.4793,  2.6343,  0.4742, -0.1779, -0.0281,  0.0793, -0.0376,
         -0.3749, -0.6655, -0.0926,  0.5915, -0.1606, -0.1575,  0.2865,  0.4130,
         -0.0406,  0.1299, -0.0774, -0.0718, -0.0337, -0.1836, -0.0321, -0.0078,
          0.0772,  0.2236, -0.1112,  0.0302,  0.0815, -0.0414,  0.7746,  0.3326,
         -0.0641,  0.1600,  1.0249, -0.4186,  0.5469,  0.9618,  0.2209, -0.2181,
          0.1963,  0.1966, -0.0444,  0.0343, -0.2422,  0.1519,  0.1153, -0.1101,
         -0.5456,  0.3386, -0.6181, -0.6139, -0.5278, -0.0213,  0.7632,  0.0897,
          0.6627,  0.5258, -0.0518,  0.1313, -1.3033, -0.1761, -0.4114,  0.1966]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0879))
tensor([[ 0.8021,  0.0312,  2.2928, -1.0119,  0.6006,  0.6071,  1.2024, -0.1492,
          1.2838, -0.5249,  0.1004,  0.5643, -0.1121, -0.1478, -0.0246, -0.2650,
         -0.2823,  0.1170, -0.0810,  0.0387, -0.4036, -0.1000, -0.0100,  0.0385,
          0.1881,  0.3221,  0.1259, -0.0742, -0.5025,  0.2043, -0.0201, -0.3496,
          0.2568, -0.0251,  0.0049, -0.0304, -0.0150,  0.0368,  0.2635, -0.0306,
          0.0569,  0.0322, -0.0535,  0.9576, -0.2983,  0.6233,  0.1922,  0.1811,
          0.4582, -0.6453,  0.2504, -0.0350,  0.3150, -0.1424,  0.0766, -0.0398,
         -0.2631,  0.1633, -0.0164, -0.0135, -0.2939, -0.2986,  0.1896, -0.4137,
          0.0247,  0.5660,  0.3003, -0.0115,  0.4825, -0.4860, -0.0553,  0.1638]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0879))
tensor([[ 1.1827e+00,  2.9774e-01,  3.3248e-01, -1.6949e-03,  8.3702e-01,
          1.2125e+00,  1.8106e+00, -1.3335e+00,  8.3434e-01,  5.3786e-01,
          2.1471e-01, -2.5037e-02,  6.7855e-02,  1.3994e-01,  3.4873e-01,
         -3.5518e-02,  3.2144e-01,  2.9781e-01,  2.1037e-01,  3.0308e-02,
          6.7248e-02, -2.2878e-02, -7.5434e-02,  3.0287e-03,  1.0503e-01,
         -1.6205e-01, -4.7164e-02, -8.0550e-04,  7.7404e-02,  4.5099e-04,
          1.0779e-01, -1.3803e-01, -3.3074e-01,  4.7040e-01, -6.9465e-01,
          2.9379e-02, -1.4369e-01,  2.0372e-01, -2.8450e-01, -1.0613e-01,
         -2.3068e-01, -5.7588e-02, -1.0331e+00,  3.5787e-01, -1.3539e-01,
         -4.9474e-01, -1.9720e-01, -8.2569e-02,  6.3360e-02,  6.7494e-02,
          3.4207e-02, -1.7447e-02,  5.7389e-01, -1.5208e-01, -7.0742e-01,
          7.0380e-01,  1.0572e+00, -3.5623e-01,  3.2948e-01,  5.5831e-02,
         -2.0895e-01,  4.4583e-01, -5.6107e-02, -1.3687e-01,  9.8371e-01,
         -5.4775e-01, -2.0187e-01, -1.0491e-02,  9.0966e-01,  6.6670e-02,
          1.0463e-01,  6.4138e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0881))
tensor([[ 0.7055,  0.6121,  1.6811, -1.1496,  0.0528,  0.5639,  0.1742,  0.4274,
          2.1296, -2.3856, -0.4381,  0.6438, -0.0032,  0.0157,  0.0483,  0.2319,
         -0.2413,  0.0067,  0.0044,  0.0295,  0.0184, -0.6302,  0.1497, -0.0587,
          0.1780, -0.1577, -0.0966, -0.0524,  0.1695,  0.6817, -0.0222,  0.0458,
          0.0120,  0.0481, -0.4396,  0.2287,  0.1085, -0.1226, -0.9109,  0.5680,
          0.1210, -0.1902, -0.4513,  0.1314,  0.1763, -0.3330,  0.0601,  0.4095,
          0.2825,  0.8112, -0.3582, -0.5371, -0.2183,  0.1409,  0.2440, -0.2310,
          2.1421, -1.0510,  1.0306, -0.8357, -0.5904,  0.2343,  0.1417,  0.0134,
          0.7733,  0.7576,  0.0453, -0.8688,  0.0712, -0.1528, -0.0951,  0.2487]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0883))
tensor([[ 1.8228,  1.6088,  0.2628, -0.1483,  0.2109,  2.3136,  0.2688, -0.5105,
          0.7348,  0.0175,  0.2392,  1.9308, -0.1937,  0.0823,  0.1562, -0.4521,
          0.5072,  0.2091,  0.1135,  0.0371, -0.1801,  0.0066,  0.0322,  0.0378,
         -0.1297, -0.0462,  0.0360, -0.0540, -0.0554, -0.0200, -0.0226, -0.0116,
         -0.0294,  1.3477, -0.0432,  0.2478,  0.2070,  0.0943, -0.4662, -0.4763,
         -0.0308,  0.2445, -0.8118,  0.2427,  0.1661, -0.6687,  0.1013,  0.0423,
          0.0170,  0.0274,  0.2242, -0.1351, -0.1770,  0.1053,  0.2068,  0.1256,
          1.0410,  0.8256,  0.6795,  0.3371, -0.8118,  0.1441, -0.0352, -0.0807,
          0.7095,  0.4136,  0.8168, -0.5011, -0.3622,  0.2173,  1.3485, -0.1898]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0886))
tensor([[ 1.0536,  0.0913,  0.7585, -0.4319,  0.7427, -0.0695,  0.0728, -0.0652,
         -0.5507, -0.0880,  0.1795,  1.0411, -0.5326, -0.2663, -0.2567, -0.0304,
         -0.0916, -0.0777,  0.0246,  0.0483,  0.3157,  0.0904,  0.0213, -0.0925,
          0.1325, -0.0312, -0.2117,  0.2528, -0.0290, -0.0614, -0.1270,  0.0688,
         -0.0743,  0.3168, -0.2441, -0.2492, -0.0357,  0.0122,  0.1805, -0.0703,
         -0.0020, -0.3588,  1.2566, -0.4394,  0.2998, -1.7158,  0.4678, -0.4207,
          0.1193,  0.4852,  0.1708, -0.1026, -0.5228, -0.0745, -0.0022,  0.0030,
          0.8369, -0.5559,  0.7706,  0.6125, -0.0168,  0.0225,  0.0873, -0.0504,
         -0.0197, -0.0831,  0.2629,  0.1495, -0.1478,  0.1041,  0.1917,  0.4651]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0886))
tensor([[ 7.6361e-01, -3.7707e-01,  4.5239e-01, -1.4629e-01,  8.5487e-01,
          1.5919e+00, -4.3599e-02,  5.1785e-01,  2.0121e+00, -7.5579e-01,
         -2.0020e-01,  5.8585e-01,  1.2742e-01,  2.2894e-02, -1.2565e-01,
         -3.9207e-02, -5.1076e-02,  1.5188e-02,  9.1086e-02, -6.2000e-02,
         -1.5056e-01, -2.4466e-02,  5.4653e-02, -2.1881e-01,  1.1358e-01,
          1.7186e-01,  4.4733e-02, -6.5857e-02,  4.1897e-02,  4.9999e-03,
          2.8455e-01, -3.0197e-01,  3.1015e-01, -8.2434e-03, -1.2037e+00,
         -2.7632e-01, -2.7094e-01,  7.5075e-04,  8.6784e-02, -4.7421e-02,
          3.4217e-02, -1.9554e-02,  8.3970e-01, -2.2706e-01, -1.8368e-01,
         -1.0711e+00,  3.4174e-01, -2.0186e-01,  1.0770e-01,  1.1142e-01,
          1.5316e-01, -4.8497e-02, -9.2276e-02, -4.4226e-01,  5.7983e-01,
          4.6384e-01,  1.3480e+00, -9.5122e-01, -1.3087e+00,  6.3972e-01,
          5.2616e-01, -1.4586e-01, -7.3891e-02, -1.4430e-01,  1.4985e+00,
         -1.2109e+00, -2.6585e-01,  2.3034e-01,  3.5774e-01,  8.4817e-02,
         -2.3487e-01,  1.3031e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0888))
tensor([[-0.0972, -0.2499,  1.6658,  0.5290,  0.1311,  1.0645,  0.3959,  0.1424,
          1.5235, -1.1727, -0.4363,  1.1163, -0.0843, -0.0067, -0.0077, -0.0219,
          0.0190,  0.0430,  0.0241, -0.0619, -0.0623,  0.3459,  0.2904,  0.1647,
          0.1998,  0.1139,  0.2336, -0.2285, -0.1624,  0.3690, -0.0233, -0.0412,
          0.0316, -0.4370, -0.4676, -0.4696, -0.1180,  0.0266,  0.9228, -0.3212,
         -0.0132,  0.1454, -0.1122,  0.0722, -0.0347,  0.0535, -0.0893, -0.5922,
          0.8803, -0.4328,  0.1345,  0.0874, -0.1272,  0.0885,  0.0312,  0.0261,
          2.0123, -0.8914,  0.0544,  0.4366, -0.2034,  0.3175, -0.0725, -0.1510,
          0.6247,  0.6241, -0.2034,  0.0583,  0.1582,  0.2026,  0.1115, -0.0510]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0889))
tensor([[ 0.1968, -0.1873, -0.6130,  0.5683,  0.5714, -0.2640,  2.9445,  0.9906,
          0.3108, -0.6537,  2.1940,  1.1826, -0.0359, -0.1541,  0.1180, -0.1022,
         -0.0036,  0.2338, -0.1044, -0.0032,  0.0151,  0.0326, -0.0948, -0.0076,
          0.1056,  0.0984,  0.1063, -0.1460, -0.1907, -0.0506,  0.0336, -0.4321,
         -0.2659,  0.0264, -0.0356, -0.0084, -0.8515, -0.8922,  0.0630, -0.1258,
          0.3791,  0.1695, -0.2963,  0.2120,  0.0993,  0.1993, -0.0866, -0.0742,
          0.1069, -0.3772,  0.0659,  0.1647, -0.1267,  0.0366, -0.2999, -0.1318,
          0.0603,  0.1648, -0.0233,  0.0108,  1.8240, -0.1599, -1.0587,  1.0367,
          1.3522, -0.5741, -0.8443,  0.2901,  0.8387,  0.6842,  0.1696,  0.1725]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0890))
tensor([[ 1.8386e-01,  9.3686e-04,  2.1544e+00,  2.4143e+00,  1.7276e-01,
          8.9708e-02,  1.0652e+00,  1.5271e+00,  1.6264e-01, -2.8396e-01,
         -3.3031e-01,  1.0205e+00,  2.2887e-02,  3.2879e-02,  5.1712e-02,
          1.0120e-01,  2.9876e-01,  1.3456e-01,  6.8468e-02,  7.0100e-03,
          1.0189e-04, -7.7978e-01,  3.1119e-02,  6.2346e-03,  1.4230e-01,
         -1.2752e-01,  2.5578e-02,  1.0488e-01, -4.7170e-01, -6.3385e-01,
         -1.7063e-02,  3.7859e-01, -3.5903e-01, -7.8553e-03,  1.2238e-01,
          3.1884e-01,  8.1337e-01,  2.7200e-01,  6.6352e-03,  2.7283e-02,
          2.8226e-01, -3.3136e-02, -1.7994e-01,  1.4506e-01,  1.8122e-01,
         -4.5348e-02,  2.2645e-02,  1.5060e+00,  1.0989e-01, -6.8546e-01,
          1.4125e+00, -5.9544e-02,  1.2575e-01, -9.5151e-02,  8.8216e-01,
          2.1606e-01,  1.2477e+00, -5.9690e-01,  1.4069e-01, -1.6461e-01,
          1.4348e+00,  8.1909e-02,  9.9410e-01, -4.1280e-01, -1.8758e-01,
          1.9160e-01,  9.1841e-02,  2.5781e-02,  7.1723e-01, -4.8744e-01,
         -5.2437e-01,  6.4331e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0890))
tensor([[ 1.3680e-01,  2.2494e-01,  6.6558e-01,  1.2339e+00, -4.7193e-02,
          1.3998e+00,  2.3618e-01, -2.4822e-01,  5.7250e-01,  1.2451e+00,
          7.7262e-02,  9.4518e-01,  2.7940e-03, -1.1715e-03, -4.3478e-04,
          1.3995e-01, -1.0982e-01,  9.5722e-02,  9.1782e-02,  2.8166e-03,
          2.2728e-02,  3.3140e-01, -7.0831e-02,  7.8100e-02,  1.2939e-01,
          4.2654e-03,  1.7225e-02,  7.4715e-02, -7.3767e-03,  4.8729e-01,
         -1.7647e-02, -1.7384e-02, -2.0787e-02,  2.7374e-01, -1.0625e+00,
          5.2671e-01, -1.3108e-01,  3.1369e-01, -2.5483e-01, -7.4304e-02,
         -1.0941e-01, -1.5316e-01, -1.2782e-01,  8.2157e-02,  1.0378e-01,
         -2.0401e-01,  1.0043e-01,  1.5244e+00, -7.9917e-01,  3.7475e-01,
         -1.0400e+00,  1.1964e+00, -1.5190e-01,  1.1637e-01, -5.9881e-02,
         -3.6202e-02,  6.2629e-01, -8.4371e-01, -1.3579e+00, -1.1526e+00,
         -3.1891e-01,  3.3576e-01, -5.1442e-01, -3.0978e-01,  2.5918e+00,
         -1.3329e+00,  1.1565e+00, -4.1284e-01, -2.2955e-01,  2.9147e-01,
          1.1616e-01,  1.0871e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0890))
tensor([[ 1.0573e+00, -2.9862e+00,  5.6401e-01,  9.4248e-03,  1.9116e-01,
          4.1422e-01,  1.4638e+00,  1.2166e+00, -4.6219e-01,  1.8328e-01,
          1.0435e+00,  1.1433e+00, -5.4438e-01, -3.3071e-02,  6.9587e-02,
          3.4852e-01,  2.5171e-01, -2.5487e-01,  2.2995e-01,  1.7172e-03,
          7.2473e-01, -3.6900e-02, -5.5447e-02, -2.4233e-01,  4.4289e-02,
         -1.2481e-01,  2.8795e-01,  6.3097e-02,  6.3953e-02, -1.0051e-01,
          2.7168e-02,  7.3583e-02, -6.0064e-02,  2.4491e-02, -4.5920e-02,
         -7.9388e-03,  4.0614e-01,  3.7700e-01, -7.0215e-02, -1.1776e-01,
          3.5260e-01, -3.0680e-01,  2.2992e-02,  9.1707e-01,  2.0230e-01,
          1.2330e-01, -5.1753e-01, -3.8104e-01,  4.0306e-02,  5.3800e-02,
         -1.1287e-01, -1.5092e-01, -2.1381e-01,  1.8576e-01,  2.6763e-02,
          4.0709e-03, -3.3996e-01,  1.9890e-01,  3.1808e-02, -7.5988e-02,
          1.1287e+00, -3.2308e-01, -1.1493e+00,  6.4628e-01,  1.5954e-01,
          1.6372e-01,  1.0260e-02,  1.8776e-01,  6.3210e-01, -3.9510e-01,
         -3.6032e-01,  5.0295e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0891))
tensor([[ 7.7500e-01, -1.4765e-01,  1.8602e+00, -1.7308e+00,  2.5600e+00,
          2.0969e-01,  4.9849e-01, -4.6195e-02,  1.6545e+00, -9.7395e-01,
          6.1542e-01,  1.1552e+00,  1.9619e-04, -3.1013e-01,  4.4565e-01,
          1.0674e-02, -1.2066e-02,  5.3511e-03,  1.7454e-02,  1.9388e-03,
          2.5741e-02,  1.4191e-01,  6.2249e-02, -9.8276e-03, -2.5310e-01,
         -3.5569e-01, -1.3137e-01,  9.8890e-02,  6.7004e-01, -2.9467e-01,
          3.2143e-01,  7.6815e-02,  6.5585e-02, -2.4678e-01,  2.6324e-01,
          3.4171e-01,  4.0487e-03, -3.3262e-02,  2.0040e-01, -8.9898e-02,
         -1.3759e-03,  2.0458e-02, -2.3352e-01,  1.2517e-01,  1.1414e-01,
          3.7760e-02,  7.1370e-02,  5.3498e-01, -8.9261e-01, -3.3565e-01,
         -1.3102e-01,  2.4695e-01,  1.6073e-01,  9.1253e-01,  3.9394e-02,
         -6.2321e-01,  1.3798e+00, -1.4662e-01, -6.8563e-01,  5.3179e-01,
         -1.3194e-01,  1.4339e-01, -1.2207e-01,  2.9081e-02, -1.1500e+00,
         -5.7189e-02,  2.1371e-01,  2.4426e-01, -1.9839e-01,  1.4187e-01,
          1.2592e-01, -2.4413e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0892))
tensor([[ 7.4532e-01,  8.2774e-01,  9.3435e-01,  2.4316e-01, -1.2747e-01,
          7.1465e-01,  2.5408e+00, -7.0336e-01,  3.1286e-01, -3.9124e-01,
         -1.6318e-01,  1.0077e+00,  8.2215e-02, -3.0944e-02,  6.7916e-03,
         -6.3315e-01,  5.4427e-01,  1.5355e-01,  1.9229e-01, -2.9001e-02,
          9.3109e-02, -1.7965e-02,  1.4615e-01,  2.7506e-02,  1.4935e-02,
          7.9966e-03,  1.4773e-01, -8.8710e-02, -1.3006e-03, -9.2582e-01,
         -1.7893e-02,  4.0506e-02,  1.3572e-02, -1.7846e-01,  1.2085e-01,
          3.1190e-01, -6.1461e-02,  2.7116e-02,  6.0760e-02, -1.0826e-01,
         -7.2338e-02,  3.7047e-01, -4.5912e-01,  9.5957e-01, -4.6246e-01,
         -4.0504e-01,  1.9519e-01,  3.7747e-01,  4.2968e-01,  1.0764e+00,
          9.0468e-02,  6.3735e-02,  1.4797e-01, -5.5391e-02,  6.3398e-02,
          8.2557e-02, -3.2422e-02,  1.4468e-01,  9.8839e-02, -5.5820e-01,
         -1.5744e+00,  2.3462e-01,  3.4419e-01, -2.4818e-02, -1.5117e-01,
          1.4898e-01, -4.1294e-01,  1.5874e-01, -3.0137e-01,  7.9457e-02,
          1.6783e+00, -5.8964e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0893))
tensor([[ 1.8076e-01, -2.9210e-03,  1.4224e+00, -1.0518e+00,  8.6073e-01,
          3.5561e-01, -2.1105e-01,  7.3023e-02,  4.3483e-01, -1.2015e+00,
          5.2462e-01,  1.6442e+00, -2.1580e-02,  1.7336e-02, -7.8992e-03,
          1.3503e-02, -1.4007e-02, -1.0395e-02,  1.2287e-02, -2.9612e-02,
          3.8828e-03,  8.8679e-02,  1.5756e-01, -2.2461e-01, -9.7345e-02,
         -4.5181e-06, -1.5257e-01, -1.3996e-01, -5.8164e-01,  1.3682e-01,
         -1.8528e-02, -1.2579e-01,  5.2682e-01,  2.3267e-02,  1.8100e-01,
          1.4433e-01, -1.0502e-01, -1.0675e-01, -3.8363e-01,  7.0491e-01,
         -1.3389e-01, -4.4286e-01, -1.4992e-01,  9.1518e-02,  1.0798e-01,
          4.9940e-02, -2.5340e-02,  1.0788e+00, -1.2786e+00, -3.2438e-01,
          2.0597e+00, -9.9842e-01,  1.4761e-01, -2.3130e-01,  4.6594e-02,
         -1.0872e+00,  1.3336e-01, -7.9359e-03,  1.3477e-01, -4.3299e-01,
         -5.6380e-02, -1.0469e-02,  2.9611e-01, -2.8858e-01,  4.6872e-01,
          1.3654e-01, -1.0153e+00, -1.8179e-01,  1.3831e+00, -2.3436e-01,
          5.6289e-01,  4.7378e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0896))
tensor([[ 0.2000,  0.0085,  0.9147, -0.6912,  0.0582, -0.0183,  1.6649,  1.2942,
          0.5996,  1.0506,  1.0607,  0.1239, -0.1025, -0.0464, -0.0664, -0.3059,
          0.2210, -0.1034,  0.1192, -0.0482, -0.1309,  0.1864,  0.0146,  0.0378,
          0.4836,  0.1678, -0.2260,  0.2150, -0.0378, -0.1598, -0.2995, -0.0517,
         -0.2370, -0.0196, -0.0756, -0.0162,  0.1017,  0.1652, -0.5145, -0.1152,
          0.3728, -0.0899, -0.2187,  0.1283,  0.1317, -0.0030, -0.0561, -0.9005,
         -0.2741,  0.7323,  0.4731,  0.0585,  0.3453,  0.4398, -0.0545, -0.3240,
          0.0843, -0.0165,  0.0645, -0.0599, -0.7237,  0.1978, -0.5388,  0.1882,
          0.4056,  0.2877, -0.2237,  0.2197,  0.6115, -0.6484, -0.1893,  0.1852]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0898))
tensor([[-6.0519e-02,  3.0097e-02, -3.0303e-01, -5.2730e-01,  1.1577e-01,
          3.7078e-02,  1.2407e+00, -6.3628e-01,  1.3746e+00,  1.6280e+00,
          1.9340e+00,  7.1229e-01, -1.3839e-01,  1.8218e-02,  1.1811e-02,
          3.0143e-01, -4.7577e-02,  8.6954e-02, -2.2162e-02,  5.5746e-02,
         -2.7857e-03,  8.5402e-02, -1.0538e-02, -3.3394e-03, -4.8816e-02,
         -1.8775e-02,  1.6009e-02, -1.5504e-01,  2.0939e-02,  1.1291e-01,
         -1.4048e-02,  2.7574e-01,  5.5776e-01, -2.0820e-02, -5.3509e-02,
          6.3923e-02,  3.0694e-01, -3.4691e-01,  3.3178e-01,  3.3531e-01,
         -3.0881e-01,  3.9016e-01,  2.6677e+00, -1.5802e-01, -2.0801e+00,
          2.3857e+00, -1.6391e+00, -4.1374e-01, -1.4085e-01,  3.4321e-01,
         -8.0247e-02, -5.1874e-02,  1.6610e-01, -9.6447e-02, -2.0284e-01,
          4.9520e-01, -5.5797e-02,  4.7260e-02, -3.9983e-02, -9.4715e-03,
         -1.9379e-01, -6.1216e-02, -1.2713e+00,  8.9123e-01, -1.4204e-01,
          4.6654e-01, -7.4130e-02,  2.8918e-01,  3.1158e+00, -1.7205e+00,
          3.8321e-01,  5.0727e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0898))
tensor([[-0.2166,  0.3973,  0.6069,  0.2874,  0.1703,  1.2768,  0.4803, -1.1757,
          2.7393,  0.0947,  2.5604,  1.7879,  0.1002, -0.0059, -0.0235, -0.0988,
          0.0041, -0.0447,  0.2388, -0.0385, -0.1100,  0.0748,  0.0905, -0.0216,
          0.1055, -0.1292, -0.3374, -0.2412, -0.0101,  0.0485, -0.0176,  0.1244,
          0.3545, -0.9557,  0.0511, -0.0867, -0.0374,  0.0061,  1.2936,  0.3763,
         -0.2582, -0.3753, -0.2926, -0.0051,  0.0852,  0.1652,  0.0573, -0.2488,
          0.2256,  0.2223, -0.1017,  0.0734,  0.2209, -0.1082,  0.1200, -0.8281,
          0.9305,  0.5857, -1.1341, -0.0537, -0.1836,  0.1380, -0.1019, -0.0629,
          2.8749, -0.0159, -0.3361, -0.0079, -0.0649,  0.2201, -0.3488,  0.5647]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0900))
tensor([[ 0.1124, -0.0597,  1.4961, -1.0240,  0.7170,  0.2466,  0.6366,  0.5521,
          0.1497,  0.1470,  0.4210,  0.6978, -0.1954,  0.0294,  0.1575, -0.1855,
          0.0091, -0.0489, -0.0284, -0.3665, -0.1728,  0.5090, -0.0098, -0.0054,
         -0.1096, -0.0172,  0.0179, -0.2565,  0.0297, -0.4821, -0.2299, -0.6395,
          0.2900, -0.0119, -0.0305, -0.0337,  0.2571,  0.0118, -0.0789, -0.0642,
         -0.0223, -0.0993,  1.3234, -0.5393, -0.5030,  1.3832, -0.5807, -0.3685,
         -0.1847,  1.1812,  0.0919, -0.3016,  1.6854, -0.1195,  1.2108,  0.2439,
         -0.1360,  0.1004, -0.0289, -0.0218,  0.4708, -0.6640,  0.5129, -0.4045,
         -0.0261, -0.0619, -0.1492, -0.0402, -0.0413, -0.0280, -0.4584,  0.0966]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0901))
tensor([[ 1.0686e+00,  1.2207e+00,  1.4359e+00,  1.0871e+00,  9.9506e-01,
         -9.3877e-02, -4.6496e-03,  7.1366e-01, -2.5246e-01, -5.4113e-01,
          2.2488e+00,  4.0725e-01,  4.6688e-01,  4.1032e-02,  3.6582e-02,
          3.3874e-04,  5.8468e-02, -5.5770e-02,  7.2081e-02, -9.2545e-02,
          4.8612e-01, -2.2077e-01, -3.2815e-02,  1.8482e-02, -9.3536e-02,
         -1.5256e-01, -2.2130e-01,  3.0805e-01, -1.6268e-03, -7.4427e-01,
         -1.0044e-01,  1.9518e-01, -9.5915e-01, -2.4778e-02, -5.1428e-02,
         -4.4765e-02,  8.9525e-04,  4.3844e-02, -1.2797e-01, -4.5480e-02,
          6.8024e-02, -3.5280e-02,  1.6355e+00, -2.4659e-01, -2.5355e-02,
          1.7061e+00, -1.9259e-01, -1.7724e-01,  1.1529e-01,  9.3096e-01,
          1.5311e-01,  2.1246e-01,  1.9018e+00, -2.1107e-01,  7.3647e-01,
          1.4662e+00, -2.7908e-01,  1.4827e-01,  5.4751e-02, -1.5530e-02,
         -1.6188e-01,  7.6265e-02,  5.6749e-02, -2.0059e-01, -1.0981e-01,
         -1.1822e-01,  1.3947e-01, -2.5754e-02,  1.8727e-01, -7.1078e-01,
         -6.0116e-01,  1.8206e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0910))
tensor([[ 9.9459e-01, -7.8008e-01,  5.4856e-01, -2.1823e-01,  2.5746e+00,
          3.1638e-01,  1.2083e+00, -4.5410e-01,  1.5681e+00, -1.3429e+00,
          1.3664e+00,  8.4277e-01, -4.7518e-02,  2.8421e-01, -4.1106e-01,
         -1.7612e-01, -2.4693e-01, -3.7028e-02,  1.0652e-01,  9.5397e-02,
          2.4154e-02,  1.9814e-03,  3.2543e-02,  1.2384e-02, -2.2186e-01,
         -2.7298e-01, -1.7477e-01,  1.4693e-01, -1.6991e-02,  2.6196e-02,
         -2.3047e-02, -2.1962e-01,  7.7497e-01,  3.1121e-02, -1.4200e-01,
          2.7046e-03, -8.0518e-02,  7.0558e-01,  1.0620e+00, -4.0665e-01,
         -9.1708e-02,  9.9356e-02, -4.8327e-01,  3.5354e-02,  8.1641e-03,
          4.1988e-01,  3.4517e-02, -3.0706e-01,  1.6484e-01,  1.0832e-01,
          2.0771e-01, -4.4871e-03,  1.1808e+00, -1.1610e+00, -6.0433e-01,
          2.5852e-01, -4.2515e-03,  8.2269e-02,  8.6264e-01, -5.2913e-01,
          3.5626e-01,  7.5883e-01,  7.2240e-02, -2.2595e-01,  7.9497e-01,
          6.4311e-01,  2.2319e-01, -3.0135e-01,  4.7218e-01, -5.3189e-02,
         -4.8169e-01,  3.7166e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0912))
tensor([[-3.4172e-02, -9.1177e-02,  2.1594e+00, -1.3452e-01,  9.4727e-02,
          8.0714e-02,  1.6939e+00,  2.3529e+00,  1.0418e+00, -1.1565e+00,
          2.0162e+00,  1.7064e+00, -7.3698e-02,  1.7061e-02, -1.2637e-02,
         -1.9120e-01,  2.8135e-01, -2.0486e-01, -1.2015e-01,  3.5217e-02,
         -4.9726e-02, -8.6666e-02,  1.3246e-02, -4.2828e-03, -1.9642e-01,
         -3.9971e-02, -2.1555e-01,  3.8539e-01, -1.5475e-01, -1.0703e+00,
         -1.2671e-02,  4.9610e-01, -3.5155e-01, -1.6491e-02, -1.1302e-01,
         -1.6235e-01, -5.3672e-02, -7.4644e-02,  2.1138e-01, -2.4246e-01,
         -3.2865e-02,  2.3725e-01, -1.6044e-01,  9.0788e-02,  1.3456e-03,
          2.7292e-02, -7.8548e-02,  2.6737e-01,  3.4937e-01,  1.2232e+00,
          4.7517e-01,  9.8853e-02,  1.0601e+00, -5.0933e-01,  4.9427e-01,
          3.1855e-01, -6.0495e-02,  5.0186e-02, -5.0534e-01,  6.0031e-01,
         -1.4078e-01,  1.8627e-02, -6.7384e-01, -1.3442e-01, -6.2243e-01,
          2.3835e-01,  1.5515e-01,  1.4341e-01, -7.7809e-01,  8.8772e-02,
          2.5443e-01, -5.3298e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0913))
tensor([[ 0.5030, -0.8042,  0.6263, -0.4260,  0.7084,  0.4197,  0.9761, -1.5902,
          1.5246,  0.2496,  0.5907,  0.8484, -0.1199, -0.0294,  0.1682, -0.1649,
         -0.0979, -0.0322, -0.0328,  0.0235,  0.3782,  0.0252,  0.0246,  0.0075,
          0.1969,  0.3239, -0.1716,  0.1976,  0.0194, -0.0439, -0.0180, -0.2996,
         -0.2565,  0.0281,  0.0226, -0.0365, -0.3427,  0.2448,  0.2346, -0.4063,
         -0.2098,  0.2736, -0.3530, -0.0800,  0.5195, -0.2240, -0.1214, -0.2370,
          0.1722,  0.1703,  0.1844, -0.1149,  0.5249, -0.3635, -0.3647,  0.5833,
         -0.1705,  0.1696,  0.0984, -0.1686,  0.3029,  0.3805, -0.3180,  0.0665,
         -0.2575, -0.1006, -0.4418, -0.1988,  1.5321, -0.4697, -0.5763,  0.2883]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0915))
tensor([[ 3.2807, -1.3643,  0.3658,  0.3942,  0.3046,  0.3153,  0.5649, -0.4294,
          1.5382,  1.0790, -0.2720,  0.0887, -0.2340, -0.0383,  0.0781, -0.1039,
         -0.5146,  0.0324,  0.1441,  0.0665, -0.0793, -0.0466,  0.0235, -0.0202,
          0.5153, -0.1979,  0.0110,  0.1213, -0.0314,  0.0738, -0.0223,  0.1487,
         -0.1319, -0.0251, -0.0509,  0.0583,  0.2009,  0.0240,  0.3795,  0.0121,
          0.0956, -0.0138,  0.5485, -0.1590, -1.3154, -0.9262,  1.3396, -0.3300,
          0.0052,  0.2726, -0.0958,  0.0963, -0.0610,  0.0592,  0.1804, -0.6076,
         -0.1773,  0.1205, -0.0438, -0.0413, -0.4498, -0.2515,  1.0884, -0.5015,
         -0.0136,  0.0751, -0.3779, -0.1806,  2.0682, -0.5454,  0.1384,  0.0104]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0915))
tensor([[ 1.6266,  1.6316,  0.7632,  0.9968,  0.2597,  0.2006,  0.0930,  0.4958,
          1.3352, -1.0325,  0.4781,  0.7838,  0.3249,  0.0948,  0.0820,  0.1867,
         -0.1970,  0.1482,  0.0637,  0.1933,  0.3429, -0.2399, -0.0614, -0.2050,
         -0.1300,  0.1360,  0.1119,  0.1058, -0.0280, -0.1154,  0.0268, -0.0286,
          0.1297,  0.2034,  0.4205,  0.2733,  0.0333,  0.2127, -0.5590,  0.1607,
          0.8385, -0.0287,  1.5089, -0.0254, -0.3227,  1.5053, -0.2042, -0.4322,
          0.4306,  0.1886, -0.1423,  0.2650, -0.2546,  0.1988,  0.0225,  0.1175,
          0.2359, -0.5794,  0.5754, -0.8339, -0.1712,  0.1057, -0.3249,  0.1675,
          0.3603,  0.1242, -0.3883, -0.0351,  0.9091,  0.3938,  0.0337,  0.1996]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0916))
tensor([[ 1.8753, -0.3761,  0.3189, -1.4664,  1.3052,  0.4553,  0.3825,  0.4085,
          1.1830,  0.4465,  1.0945,  0.5708, -0.0091, -0.0606,  0.0093,  0.0897,
          0.0607, -0.0406,  0.0135,  0.7002,  0.1402, -0.2435,  0.0235,  0.0234,
          0.2345,  0.1177, -0.0508,  0.1915, -0.0225,  0.1118,  0.1725,  0.6415,
         -0.6921, -0.0212, -0.0224,  0.0712,  0.0484,  0.1273,  0.0775,  0.1233,
          0.1393,  0.1448,  0.8587, -1.4454,  0.0320, -0.6175,  0.7608,  0.1493,
          0.2015,  0.2114,  0.5086, -0.3322,  0.6617, -0.1675, -1.3435, -0.8497,
         -0.1057,  0.0758, -0.0481, -0.1271,  1.5291, -0.5680,  1.6048, -1.1026,
         -0.7033,  0.1416, -0.4696, -0.0327,  1.2055, -1.0653, -0.7161,  0.0677]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0917))
tensor([[ 2.1135e-01, -1.0643e-01,  1.3764e+00, -6.6481e-01,  7.1311e-02,
          2.0807e+00,  2.6147e+00,  2.1070e+00,  2.0827e+00, -9.4105e-01,
          1.9256e+00,  2.0596e-01,  9.6989e-06,  3.1510e-03, -2.4063e-02,
         -2.9627e-02,  4.7076e-02,  7.1891e-02, -9.2814e-04, -3.3630e-03,
         -2.5779e-02,  2.1360e-01,  3.7479e-02,  1.1389e-01, -1.9197e-01,
         -3.2440e-01, -7.3039e-02,  1.1168e-01,  3.8265e-01, -2.3655e-01,
         -1.7450e-02,  3.7137e-02, -1.9658e-02,  2.3794e-01, -1.2831e+00,
         -2.1696e-01, -1.0657e+00, -9.0253e-01, -1.1832e-01,  4.1959e-02,
         -1.7939e-01, -3.5974e-02, -2.5127e-01,  1.0553e-01,  2.5038e-01,
         -1.8957e-02, -1.0753e-02,  3.5839e-01,  1.9306e-01, -2.0938e-01,
         -6.0495e-01,  5.8332e-03,  1.1615e-01, -3.3489e-02, -2.7384e-01,
         -6.3661e-01,  2.3003e+00, -7.6183e-01,  1.2240e+00, -3.1608e-02,
          2.5056e-01,  1.1057e+00,  4.2147e-01,  6.6794e-01,  9.0543e-01,
         -1.2165e+00,  2.6497e-01,  2.0131e-01, -3.8519e-01,  6.8632e-01,
         -1.9285e-01,  7.2649e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0917))
tensor([[-0.6675,  0.8454,  1.2809, -1.1000,  1.7171,  0.1479,  0.4958,  0.0750,
          1.1137,  0.6124,  0.4507,  0.5631,  0.0539, -0.1079, -0.3071,  0.0090,
         -0.0580,  0.0048, -0.1418, -0.1576, -0.0727,  0.1496, -0.0432,  0.0578,
         -0.4518, -0.3700,  0.0510, -0.0982,  0.0941, -0.1677, -0.0098,  0.0499,
         -0.0760, -0.0225, -0.1613,  0.0303, -0.0023, -0.0449, -0.2342,  0.3713,
         -0.0600,  0.6415,  0.2635, -0.6702,  0.4961, -0.2668,  0.1262,  0.2764,
         -0.1326, -0.0153, -0.3232,  0.1182, -0.9079,  0.2904, -0.0059, -0.0276,
         -0.1033,  0.0813, -0.0200, -0.2294, -0.2723,  0.2351, -0.0860,  0.0680,
          0.9860,  0.0040,  0.5695,  0.2290, -0.2086,  0.1410, -0.0917,  0.4822]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0918))
tensor([[ 2.8793,  0.7097, -0.2079, -0.3089,  1.0116,  0.2438,  0.3950, -0.7288,
          1.2456,  1.3482,  0.8674,  1.1030,  0.4773, -0.2270,  0.0913,  0.1512,
          0.0674,  0.0707, -0.2574,  0.7740,  0.9670,  0.1276,  0.0379, -0.0717,
         -0.1438, -0.1369,  0.1656, -0.1403,  0.0576, -0.2782, -0.0035,  0.2882,
          0.5063,  0.0265,  0.0197, -0.0541, -0.0132,  0.0053, -0.6096, -0.4155,
         -0.2849, -0.3258,  1.5675, -1.2596,  1.2803,  1.3660, -0.3068, -0.2464,
          0.3659, -0.2688,  0.2357, -0.1579,  0.0983, -0.2665,  0.2479, -0.5397,
         -0.2147,  0.1825,  0.0420,  0.0316,  0.1284,  0.0167, -0.5498,  0.1767,
          0.3250,  0.7827,  0.0457,  0.4868,  0.4164, -0.2136, -0.1950,  0.4195]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0918))
tensor([[ 0.2771, -0.1975,  1.2402,  1.8314,  0.6711,  0.5271,  0.0905, -0.8715,
          0.1355, -0.3432,  1.5008,  1.8660, -0.0020, -0.1431,  0.1567, -0.0299,
          0.0197, -0.0130,  0.0546, -0.0300, -0.0275, -0.5456,  0.0449,  0.2097,
         -0.0404, -0.0029, -0.0280,  0.2870,  0.0378, -0.7909, -0.0024, -0.0387,
          0.0449, -0.1252, -0.0488, -0.7117,  0.0902, -0.3185,  0.0097, -0.0520,
          0.9275,  0.0166, -0.3200,  0.1797,  0.2002,  0.0741, -0.0343,  0.9309,
         -0.2593,  0.6742, -0.5781,  1.1072, -0.4501,  0.1461,  0.0929, -0.1390,
          1.7678, -1.2037, -0.6458,  1.2357, -0.2274,  0.1920,  0.3965, -0.2618,
         -0.0925,  0.1228, -0.0941, -0.0709,  0.4944,  0.5715,  0.0342,  0.1060]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0919))
tensor([[ 0.6315,  0.4749,  0.3924, -0.9041,  1.4534,  0.1812,  0.3709,  0.2728,
          1.0839,  1.6018,  1.6518,  0.3906,  0.3115, -0.0978, -0.1105, -0.1131,
          0.1589, -0.0535, -0.1169,  0.0513,  0.3291, -0.1435,  0.0305, -0.0119,
         -0.2649, -0.1486,  0.3336, -0.2165, -0.0044,  0.1192,  0.0418,  0.1052,
         -0.6969, -0.0242,  0.0837, -0.1279, -0.0114, -0.0264,  0.1241,  0.0612,
         -0.2053,  0.1612,  0.3859, -0.0385, -0.1293,  0.4424, -0.1377, -0.1680,
          0.3085,  0.2738,  0.3525, -0.1730,  0.2635, -0.3521, -0.0100, -1.0766,
         -0.2901,  0.1719,  0.0327, -0.4735, -0.1509,  0.0630,  0.1999, -0.1356,
          0.1268, -0.1127,  1.1257, -0.5731,  1.7618,  0.1148,  1.6286, -1.3160]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0920))
tensor([[ 1.7163e-01, -2.4238e-01,  1.4543e+00, -2.1528e+00, -1.1249e-01,
          6.0977e-01,  7.8536e-01,  1.6432e+00,  1.2159e+00,  1.1030e+00,
          1.4947e+00,  3.6621e-02, -3.7250e-03,  1.8561e-02, -3.5354e-02,
         -1.7868e-01, -3.9814e-01,  5.2192e-01, -2.2405e-01,  3.8502e-02,
         -2.1596e-02,  5.1550e-01, -1.1225e-01,  2.3083e-01, -1.0448e-01,
         -1.2541e-01, -1.3428e-01,  1.2688e-01,  2.5310e-01, -6.6911e-01,
         -2.1815e-02, -1.7809e-02,  7.6204e-02,  4.2095e-03,  2.4009e-01,
          5.1500e-05, -1.5414e-01, -2.0702e-02, -1.4718e-01, -4.9894e-01,
          2.5911e-01, -2.2631e-01, -3.4125e-01,  2.6326e-01,  1.2686e-01,
          7.3521e-02, -3.5382e-02,  5.4315e-01,  2.4234e-01,  7.0298e-01,
         -3.3503e-02, -8.3266e-01, -9.4514e-03,  4.5434e-02,  1.4246e-01,
          5.6766e-01, -3.9055e-01,  8.7350e-02, -1.1383e-01, -8.0707e-03,
          5.4254e-02, -5.0199e-01,  3.1410e-01, -5.5367e-01,  1.3512e+00,
         -2.3708e-01, -1.9639e-01,  5.9742e-01, -4.9381e-01, -4.4845e-01,
          2.4821e-01,  3.8762e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0921))
tensor([[ 1.7089e+00,  4.8958e-01,  3.0724e+00,  1.0711e+00, -5.1141e-01,
          1.9876e-01,  2.7980e+00, -6.3144e-01,  1.4412e+00,  1.0437e+00,
         -1.2605e-01,  1.6601e-01,  5.3535e-01,  1.5136e-01, -3.8715e-02,
         -9.4095e-02, -7.5268e-01, -1.0361e-01,  5.6695e-02, -1.5698e-01,
         -1.0175e-01, -9.9880e-01, -7.0432e-04, -8.2255e-02,  5.5597e-01,
         -1.2668e-01, -2.3236e-02,  2.4549e-01, -5.2647e-02, -2.7754e-01,
          2.5655e-02,  1.7292e-02,  2.3497e-02, -1.9568e-02,  9.4122e-02,
         -3.2847e-02, -1.7521e-02, -6.3071e-03,  2.7737e-01, -6.2135e-02,
          1.4627e-01, -1.7503e-02,  5.2466e-01, -1.2466e+00,  1.3513e+00,
         -5.7139e-01,  3.9056e-01, -1.7694e-01,  8.1926e-01,  8.3225e-01,
          4.0445e-03,  2.7376e-01,  2.4042e-01,  1.9500e-01,  1.1695e-02,
         -2.3220e-01, -8.0734e-03,  3.1314e-02, -2.6867e-02,  2.3519e-02,
         -1.4523e+00,  2.2170e-01,  2.2283e-01,  2.1717e-03, -1.1726e-01,
          3.4907e-01, -5.9489e-01, -9.4027e-02, -5.5650e-01,  6.0760e-02,
         -1.3148e-01,  1.4373e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0921))
tensor([[ 2.6519e-01, -6.5974e-01, -4.3564e-01,  6.2264e-01,  6.5000e-02,
          3.0311e-01,  2.7272e-02,  1.6215e-01,  3.3820e-01, -1.9269e-01,
          2.6406e-01,  7.9863e-01,  3.3352e-01,  6.4147e-02, -2.7565e-01,
         -4.1678e-04, -4.2865e-02, -3.6368e-02,  9.8185e-02, -1.7791e-01,
         -4.7769e-01,  1.6507e-02,  8.5625e-02, -5.2867e-02,  5.9575e-02,
          3.1760e-02,  5.8778e-04, -8.5840e-02,  2.1207e-02,  9.1276e-03,
         -2.3291e-02,  8.5281e-02, -1.8593e-01, -8.6257e-02, -1.1144e-01,
          2.3981e-01,  5.5687e-02,  8.1269e-02,  1.3813e-02,  8.7403e-02,
          6.0830e-02, -1.8981e-01,  5.6264e-02,  3.8585e-01, -6.8439e-03,
         -1.0014e-01, -2.9458e-01,  1.1186e-01,  1.9108e-01,  1.9000e-01,
         -3.1018e-01, -1.8189e-02, -2.3697e-01,  1.2383e-01, -4.1104e-02,
         -1.0602e-01,  2.0257e-01, -8.7689e-02, -6.9048e-01, -4.2978e-01,
          8.5390e-01, -5.5881e-01,  9.9959e-01, -6.7261e-01, -2.1146e-01,
          2.1493e-01,  2.7680e-01, -2.0410e-01,  9.0682e-01, -6.2011e-01,
          2.6503e-02,  1.4307e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0922))
tensor([[ 0.3266,  0.5859,  0.4329, -0.6162,  0.1977,  2.0796, -0.1202, -0.1979,
          1.3737, -1.7656,  0.3116,  1.9292,  0.1453,  0.0251,  0.0662, -0.0642,
          0.0091, -0.0438, -0.1362, -0.1805, -0.1591, -0.0610,  0.0047, -0.0998,
         -0.0954, -0.1828, -0.1475,  0.2128, -0.0382, -0.1032, -0.0179,  0.0487,
          0.0034,  0.9069,  0.6113, -0.4167, -0.1182, -0.0570, -0.6350,  0.3736,
          0.0056, -0.4347,  0.0908,  0.5094, -0.9026, -0.4651,  0.2350, -0.1918,
          0.3465,  0.3225,  0.2957,  0.1156,  0.1103, -0.0296,  0.0079,  0.0713,
          0.9145, -0.0049, -0.6747,  0.4618, -0.0839, -0.0577,  0.0249, -0.0649,
          1.1175,  0.0858,  0.5704, -0.8622, -0.1925,  0.1758, -0.1621,  0.2853]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0922))
tensor([[ 0.9132,  1.6733,  0.4004, -0.1261,  0.2767,  1.8949, -0.0845,  0.1060,
          3.2579,  1.8022,  0.1226,  1.0746,  0.0266, -0.1189, -0.0542,  0.3440,
         -0.1805, -0.2586, -0.3882,  0.0103,  0.1208,  0.0456, -0.0038, -0.0661,
         -0.0379, -0.0381,  0.0288,  0.0507, -0.0069, -0.0185,  0.0266, -0.0406,
         -0.0210,  0.0585,  0.2809, -1.0140,  0.0749, -0.0875, -1.1806, -0.4620,
          0.0567, -0.2923, -0.9856, -0.1019,  0.3407, -1.2110, -0.1706, -0.2266,
          0.2098,  0.2093,  0.0377, -0.0259, -0.2384,  0.2094,  0.1269, -0.1192,
          2.4461, -1.4093, -0.7881, -1.1518,  0.2730, -0.2388, -0.1758,  0.2070,
          0.4112,  1.0737,  0.5364,  0.3949,  0.2026, -0.2018,  1.0995, -0.3636]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0923))
tensor([[ 0.7255, -0.4406,  0.7255, -0.3117,  1.1492,  2.4898,  0.3791, -0.4534,
          0.7240, -0.0394,  1.7648,  0.2178,  0.2393,  0.1983, -0.0946,  0.1292,
          0.1722,  0.3042, -0.1965, -0.0038, -0.2569, -0.0728,  0.0247, -0.1059,
          0.1600,  0.1282,  0.0852,  0.0149, -0.1170,  0.4119, -0.0101,  0.1712,
          0.3606, -1.1483,  0.0316,  0.0349, -0.0040, -0.0984,  0.0250, -0.0108,
          0.3681, -0.0165, -0.3317,  0.1776,  0.3209,  0.2210, -0.1738,  0.3752,
          0.5836, -0.0303,  0.1775,  0.1673, -0.4908,  0.0653, -0.0961,  0.8771,
          0.3305,  1.0458, -0.0183, -0.0049,  0.0259, -0.0335, -0.3324,  0.3433,
         -0.2883,  0.1440,  0.0568, -0.0593,  0.1184, -0.4290,  0.1182, -0.0150]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0925))
tensor([[ 1.3878e+00, -6.2558e-01,  1.1720e+00, -7.7746e-01,  1.4553e-01,
          2.7110e-01,  4.0768e-01, -8.3914e-02,  3.6439e-01, -1.9057e-01,
          4.6999e-01,  7.3150e-01, -2.5321e-01, -6.1639e-02,  3.1456e-02,
          4.0506e-03,  1.6433e-04,  5.6651e-02, -8.0396e-02, -4.1770e-01,
          2.9234e-01,  5.1423e-01,  1.3118e-01, -1.5656e-01,  1.2834e-01,
         -2.1570e-02,  7.0334e-03, -2.1370e-01, -1.8416e-01, -5.3123e-01,
         -5.7054e-01, -6.4407e-02, -2.2019e-03,  2.0621e-01,  5.0245e-02,
          2.2237e-02, -7.1139e-03, -2.4654e-02, -2.8334e-02, -6.7759e-03,
          9.9453e-03,  2.9713e-02,  4.1786e-01, -5.5543e-01,  2.6241e-01,
         -2.4390e-01,  7.9783e-02,  8.6367e-01, -5.2732e-01,  6.6533e-01,
          6.4712e-01, -8.1597e-01,  7.1669e-01,  2.7734e-01,  5.9836e-02,
          8.3424e-04, -8.1916e-01,  1.1471e-02, -6.6502e-02,  2.6305e-01,
         -1.9123e-01,  1.4213e-01, -1.2414e-03, -2.8447e-02, -6.3131e-02,
          3.1729e-02,  1.4249e-01, -4.1794e-02, -1.5595e-01,  1.3790e-01,
         -3.0958e-01,  2.1665e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0925))
tensor([[ 2.0393,  1.8336,  0.0118,  0.1166,  2.3324, -0.0179,  2.1511, -1.4115,
          2.3419, -1.0465, -0.5041,  0.1598, -0.5269, -0.3482, -0.1072,  0.4487,
         -0.3103, -0.1217, -0.1301,  0.4092, -0.5792, -0.0309, -0.0174,  0.0176,
          0.2642, -0.2403, -0.1062, -0.1433, -0.0091, -0.0035, -0.8145, -0.4584,
         -0.2848, -0.0239, -0.0148,  0.0477,  0.3103, -0.2736,  0.2755, -0.1572,
          0.2437,  0.1099,  1.5108,  0.7129, -0.9245,  1.5280, -0.2058, -0.2145,
          0.1649,  0.0623, -0.1226,  0.0537,  0.9758,  0.7189,  1.1610, -0.8757,
         -0.2425,  0.1368, -0.0699, -0.1071,  0.6434, -0.2283, -0.3335,  0.0987,
         -0.7407,  0.3818,  0.5436, -0.2763, -0.2058, -0.1250, -0.2430,  0.1080]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0926))
tensor([[ 1.0770e+00, -1.5656e+00,  2.2519e-01,  1.0942e-01,  2.5622e-01,
          9.8824e-01,  1.2258e+00,  1.2955e+00,  9.9974e-01,  8.0877e-01,
          1.0587e+00,  1.6128e+00,  2.8779e-01, -3.1336e-02, -7.8484e-02,
         -3.6627e-01, -2.9336e-01,  2.1723e-01, -1.3660e-01,  2.5918e-01,
         -3.1104e-01,  3.5313e-03, -2.5102e-02,  8.2805e-04,  4.6173e-02,
         -7.1335e-03,  5.1630e-02, -6.1469e-03, -1.5890e-02,  2.2567e-02,
         -1.6363e-02, -6.0353e-01,  2.3769e-01,  1.6554e-01, -4.0690e-01,
          5.1538e-01,  8.2004e-02, -3.6781e-02, -4.3914e-01, -1.1506e-01,
         -4.7024e-02,  6.0849e-02,  8.3165e-01, -7.6011e-02,  7.8936e-02,
         -5.5440e-01,  6.1664e-02, -1.0845e-01,  9.9063e-02,  1.2257e-01,
         -5.7248e-02,  5.5782e-02,  5.5543e-01, -2.8839e-01, -7.6504e-01,
         -8.7326e-02,  1.0903e-01,  1.1780e-01,  7.4434e-01,  7.9909e-01,
          1.4563e-01, -1.0331e+00,  3.8464e-02, -4.1884e-01,  1.2967e+00,
          1.9580e-01,  8.7840e-01, -4.7647e-01, -4.5220e-01,  4.0942e-02,
         -5.0944e-01, -7.9847e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0928))
tensor([[ 4.3771e-01, -8.5006e-01, -1.8210e-01,  1.3192e+00,  1.5031e-02,
          2.4037e-01,  3.0450e+00,  4.8451e-01,  2.5212e+00, -1.7687e+00,
         -7.9868e-03,  1.2718e+00,  1.1304e-01,  2.0951e-03,  6.2526e-02,
          4.0852e-01,  4.4738e-01, -1.6329e-01, -1.0284e-01, -2.7559e-02,
          1.3558e-01, -3.7916e-01,  5.7197e-02, -1.2905e-01,  2.3245e-01,
         -4.0892e-01, -1.2866e-01, -2.4343e-01,  6.4725e-02, -2.7081e-01,
         -1.6632e-02,  4.8469e-02,  4.0033e-02,  2.6973e-02, -1.7301e-01,
         -1.6652e-01, -1.3462e-01,  1.8974e-01, -2.9910e-01,  1.7819e-01,
          2.9287e-01, -1.3913e-01, -7.1566e-01,  4.0684e-01, -1.9419e-01,
          1.6749e-01, -4.0605e-02,  4.0917e-01,  2.1733e-01,  2.1721e-01,
         -2.9064e-01,  3.4373e-01, -6.7505e-02,  5.2513e-02,  5.1966e-02,
         -4.1238e-02, -1.6873e-01,  1.5657e-01, -3.6663e-03,  1.9118e-02,
          4.4228e-02,  6.5191e-01, -1.0342e+00,  6.0381e-01,  1.2910e+00,
         -5.2001e-01, -1.7386e+00,  8.2916e-01,  1.0566e+00, -6.0965e-01,
          1.5198e+00, -7.2805e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0928))
tensor([[ 4.0699e-01, -1.2374e-01,  2.3537e+00, -1.6211e+00,  2.7294e-01,
          1.1187e+00,  3.9107e-01,  3.7324e-01,  3.7586e+00,  1.2124e+00,
          9.4098e-01,  1.4480e+00,  1.4034e-03,  1.5162e-02, -5.3232e-03,
          3.2802e-03, -1.6816e-02,  9.1007e-03,  3.6016e-02,  3.7773e-02,
         -2.4252e-02,  1.1815e-01, -3.3502e-01,  5.4093e-01,  1.9212e-03,
         -6.2619e-01,  2.7644e-01,  2.3755e-01, -6.7213e-02, -9.7902e-02,
         -2.4726e-02, -5.7114e-02, -2.2785e-02, -1.4607e-01,  4.5872e-01,
         -2.3227e-01, -1.8695e-02, -1.6338e-01,  3.3200e-01, -3.7688e-02,
         -5.4774e-01,  2.2035e-01, -2.9079e-01,  3.1713e-01,  8.9439e-02,
          3.7766e-03, -1.9391e-02,  3.2018e-01, -8.5588e-01, -7.8492e-01,
         -6.0403e-01,  9.9691e-01, -4.0863e-02,  5.8326e-02,  1.6554e-02,
         -4.6339e-02, -2.8754e-01, -2.9734e-01, -6.7028e-01,  3.0439e-01,
         -2.6438e-02,  6.9238e-02, -4.8452e-01,  2.1244e-01,  6.8672e-01,
          2.7823e-01, -2.9599e-01, -5.2417e-01,  1.1121e+00,  3.6209e-01,
         -1.1154e+00, -1.0645e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0932))
tensor([[ 0.7515, -0.2838,  1.7697, -1.9224,  0.9836,  0.5846,  0.2356,  1.1917,
          0.7357,  0.3167,  1.5688,  1.3527, -0.0207,  0.1120, -0.0643, -0.1721,
         -0.1755,  0.2353, -0.2266,  0.0432,  0.0031,  0.2525, -0.2786,  0.2483,
          0.1856, -0.0158, -0.1218,  0.3391, -0.6421, -0.4811,  0.0652, -0.3162,
          0.3182, -0.0240, -0.0113, -0.0442, -0.1763, -0.2207, -0.0084, -0.1171,
          0.0469, -0.2399, -0.1310, -0.0089,  0.0454,  0.1742, -0.0221,  0.7198,
         -0.6204,  0.1725,  1.0330, -0.2157, -0.1225,  0.1307, -0.3495, -1.0682,
         -0.2823,  0.1431,  0.0544, -0.0058,  1.4064, -0.8701,  2.0129, -0.8234,
         -0.0857,  0.1745, -0.0571,  0.0823,  1.8353, -0.7421, -0.3972,  0.4583]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0932))
tensor([[ 4.5782e-01, -1.0572e+00, -1.5048e-02,  2.0090e-02,  2.5412e-01,
          2.2912e-01,  3.4078e+00,  4.7778e-01,  2.7288e-01, -6.8877e-02,
         -2.8676e-02, -4.2650e-01, -7.8813e-02,  5.8064e-02, -1.5917e-02,
          7.7033e-01,  6.2917e-01, -9.7638e-03,  8.3996e-03,  2.0496e-01,
         -4.5600e-02,  1.1763e-01, -1.3933e-01,  4.8965e-02, -1.9233e-01,
         -2.1965e-01,  1.9611e-02, -6.2823e-02,  1.9321e-01, -1.3561e-01,
          2.7334e-02, -5.8621e-02, -3.6181e-02,  2.7260e-02, -4.4159e-02,
          1.0308e-03,  2.9014e-01, -7.1737e-02, -1.7152e-01, -4.4262e-02,
          5.5248e-05, -5.0923e-02,  8.3889e-01, -9.2327e-01,  1.4418e-01,
         -2.6114e-01,  5.4954e-01, -2.0938e-01, -5.1823e-01,  4.4103e-01,
          1.4622e-01,  9.2250e-02, -2.3450e-01,  1.8784e-01, -3.7140e-02,
          1.2687e-02, -2.3545e-01,  1.9676e-01,  2.7726e-03,  2.7862e-03,
          2.0814e-02, -9.9125e-01, -6.4775e-01,  3.6630e-01, -4.1085e-01,
          2.0342e-01, -7.4960e-02, -3.3998e-02, -2.3395e-01,  1.1300e-01,
          1.3150e-01,  2.0011e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0933))
tensor([[-0.1934, -0.1856,  0.4426, -0.4315,  0.0875,  0.6875,  1.4384,  0.1659,
          1.0504, -0.6278, -1.4720,  2.4974, -0.0724, -0.0318,  0.0197,  0.2330,
          0.0035,  0.0838, -0.0653,  0.0160, -0.0485, -0.0353, -0.1234,  0.0259,
          0.0473,  0.0264,  0.6686, -0.3813, -0.0110,  0.0193, -0.0160,  0.3098,
          0.1730, -0.0136,  0.4377,  0.1923, -0.0978, -0.3351,  0.1089,  0.0365,
          0.1055,  0.3181, -0.1664, -0.0801,  0.1948,  0.0442, -0.0772, -0.3647,
          0.2610,  0.2629,  0.1857, -0.1382, -0.0405,  0.0090, -0.7946,  0.2614,
          0.6107, -0.4725,  0.5642, -0.5317,  0.4057, -0.2543, -0.1917,  0.2035,
          0.4770,  0.0797, -0.7240,  0.6767,  0.5310,  0.0200,  0.8540, -1.2149]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0937))
tensor([[ 2.9289e-01, -1.4192e-01, -5.6570e-01,  1.0316e-01, -1.3268e-02,
         -8.0692e-01,  2.0057e+00,  1.0620e-01,  3.1935e+00,  8.0752e-01,
         -3.5336e-01,  1.4433e+00, -2.6767e-01, -4.0329e-03,  2.3080e-02,
          2.5644e-01, -2.0409e-01,  3.5556e-02,  1.1776e-01,  1.3920e-04,
          2.1205e-01,  1.3965e-01, -2.7584e-02, -1.1613e-01, -1.3860e-02,
          2.9430e-01,  4.5050e-02,  3.6706e-02,  8.5413e-02, -1.0469e-01,
         -2.0209e-02,  2.5556e-02, -6.4982e-03,  1.1410e-01,  5.7722e-01,
         -3.3294e-01,  1.5705e-02, -4.5617e-02, -7.1097e-02,  1.3001e-01,
         -1.2428e-01,  3.0782e-01,  4.8406e-01,  1.2958e-02,  3.9835e-01,
         -7.8263e-02, -3.5932e-01,  3.8068e-02,  3.8936e-02,  3.0296e-02,
          3.7442e-01,  4.8541e-03, -2.9154e-01,  1.7148e-01, -8.1298e-03,
         -2.9680e-02, -1.4747e-01, -2.9433e-01,  7.0612e-01,  6.8641e-01,
         -1.1049e+00,  1.6228e-01, -1.6077e-01, -2.6891e-02,  1.3189e+00,
         -1.1216e+00,  1.8242e+00, -8.3619e-01, -1.0538e-01, -3.7216e-02,
          8.8308e-01, -1.4534e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0939))
tensor([[ 2.5577e-01, -5.5668e-01,  1.3312e+00, -9.0868e-01,  2.5093e-01,
          2.7527e-01,  2.2945e+00, -4.5194e-01,  6.3730e-01,  8.9229e-01,
          2.0402e-01,  3.0882e-01, -1.3683e-02, -3.8786e-03, -7.4968e-02,
          2.7307e-01,  2.2724e-01,  5.0276e-02, -2.2943e-02,  2.8617e-03,
         -1.1922e-01, -6.1438e-03, -3.7900e-01,  3.1524e-01,  8.6525e-02,
          3.1646e-02,  5.2504e-02,  5.4625e-02, -5.4100e-03,  1.9542e-02,
         -1.7714e-02,  3.3325e-01,  1.4008e-01,  4.3696e-01,  2.4854e-01,
         -1.4222e-01,  2.9024e-01, -5.2619e-01, -4.7446e-01, -3.3495e-01,
          2.3958e-01, -3.8681e-01, -2.8689e-01,  1.6945e-01,  1.5669e-01,
          5.8066e-02, -1.3208e-01, -8.8143e-01,  2.3858e-01,  2.3318e-01,
          4.4046e-01,  7.1729e-02,  5.5486e-05, -1.6303e-02,  5.6314e-02,
          2.4638e-02,  1.2134e+00, -6.3031e-01, -2.9341e-01,  9.2990e-01,
          1.2477e+00,  6.0613e-01, -4.6948e-02,  4.7227e-02,  4.2206e-01,
          4.6463e-02,  2.9391e-01,  3.4077e-01, -7.2871e-02,  8.1157e-02,
          5.8184e-01,  4.3542e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0939))
tensor([[ 1.9788e+00,  1.7316e+00,  1.0720e+00,  8.6521e-01,  1.0281e+00,
          9.3032e-01,  5.1781e-01,  8.5638e-01,  3.8629e-01,  3.4581e-02,
          4.0441e+00,  1.6990e-01,  4.7749e-02,  1.0877e-01,  7.0906e-02,
         -2.6937e-01,  2.2189e-01,  1.9336e-01,  2.0607e-01, -4.9994e-03,
          7.2134e-02, -3.5401e-01,  6.2993e-02,  2.9759e-01, -3.2265e-02,
          2.4947e-02,  1.8682e-02, -1.1199e-03,  5.9856e-02, -3.3975e-01,
          1.0941e-01,  2.4161e-01, -7.6944e-01,  5.6915e-01, -1.2192e-03,
          4.8025e-02, -5.7400e-02,  1.9390e-02,  2.9034e-02,  4.7642e-03,
         -9.6582e-01, -1.9103e-02, -1.5025e+00, -2.2950e-01,  3.0124e-01,
         -1.2205e+00, -1.3191e-01,  3.6768e-01,  8.0847e-01,  2.0420e-03,
          1.7840e-02,  5.6294e-01,  4.5653e-01, -9.9980e-02,  1.4072e-01,
          1.0013e+00, -8.7917e-02,  1.7984e-01, -8.0793e-01, -1.9558e-01,
         -1.0627e-01, -3.8681e-02,  3.0904e-01, -6.6249e-01, -2.4194e-01,
          2.0695e-01, -5.7997e-03,  1.0544e-02,  2.1592e+00, -5.2332e-01,
         -3.4120e-02,  5.5096e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0940))
tensor([[ 3.2365e-01, -1.4031e-01,  6.6012e-01,  1.5849e+00, -3.2404e-01,
          3.4266e-01,  1.8092e-01, -4.0179e-01,  9.4309e-01, -6.9878e-01,
          1.5983e+00,  1.7465e+00,  6.4538e-04,  9.9784e-02, -8.9917e-02,
         -4.2850e-02, -3.6745e-02, -2.7081e-01,  2.3760e-01, -8.6999e-03,
         -2.5072e-02, -1.9438e-01, -1.2226e-01,  2.2382e-01,  2.3244e-01,
         -3.0465e-01, -6.0156e-02,  1.4313e-02, -1.7992e-01, -1.7780e-01,
          3.5159e-01, -4.0113e-02,  4.7586e-01,  2.4664e-01,  4.1428e-02,
          3.3627e-01, -3.5486e-02, -2.5789e-03, -2.2563e-01,  3.3711e-01,
         -2.3749e-01, -4.2500e-01, -1.4527e-01,  1.5147e-01,  7.5872e-02,
          1.2049e-01, -7.5583e-02,  1.1186e+00, -6.6200e-01,  6.7889e-02,
          5.0753e-01, -3.1033e-01,  5.0772e-01,  3.6888e-02,  3.1821e-01,
          6.2003e-01, -5.2222e-01, -9.3425e-02,  6.8434e-02,  6.5578e-01,
         -2.3337e-01,  1.3587e-01,  4.1796e-01, -2.3698e-01, -5.0479e-01,
          3.5084e-01, -1.1695e-01, -1.3266e-01,  8.3563e-01, -8.2387e-01,
          8.0023e-01,  1.4146e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0941))
tensor([[ 1.9340, -1.5934,  2.0534, -0.1762,  0.3777,  0.4052,  0.4259, -0.1587,
          0.2433,  0.3393,  1.1009,  0.1551, -0.3639,  0.0433,  0.1543, -0.0531,
         -0.0208, -0.0498, -0.0049, -0.5276,  0.6480, -0.0767, -0.0215,  0.0409,
         -0.0991,  0.0319,  0.1961, -0.0861, -0.5727,  0.3388,  0.0605, -0.0468,
          0.0249, -0.0179, -0.0567,  0.0610, -0.0345,  0.0797, -0.0138, -0.0378,
         -0.4419,  0.1818,  0.8818,  0.9137, -1.3890, -1.0025,  0.0058,  0.4943,
         -0.3590, -0.4624, -1.5065,  0.2136, -0.1304,  0.2855,  0.0362, -0.0455,
         -0.0200,  0.0320, -0.0713, -0.0239, -0.0437,  0.0514,  0.0271, -0.0307,
         -0.1248,  0.1463, -0.2039, -0.0660, -0.0830,  0.2290,  0.4232,  0.3160]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0942))
tensor([[ 0.7173, -0.6314,  0.3115,  0.1083,  1.1248,  1.2322,  0.6049,  1.3772,
          0.0885, -0.4140,  2.1120, -0.3107,  0.2878, -0.2908,  0.2939, -0.0853,
         -0.1006,  0.1137, -0.1237,  0.0206, -0.3059, -0.0045, -0.1941, -0.1496,
         -0.0154,  0.0075, -0.0196, -0.0284,  0.0526,  0.0180,  0.1996,  0.1557,
         -0.6057, -0.0261, -0.0308, -0.0482,  0.0237,  0.2652, -0.0655,  0.2708,
          0.3708,  0.0145,  0.7344,  0.1364,  0.1322,  0.3260, -0.6306, -0.1515,
          0.1289,  0.1269, -0.0967,  0.0852, -0.6231, -0.3561, -0.6009, -0.6820,
         -0.7234,  0.1211, -0.0448, -0.0972, -0.1466,  0.1696,  0.4535,  0.0769,
         -0.1916,  0.1175, -0.0226, -0.0909,  1.5978, -0.3496, -0.1974, -0.0029]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0943))
tensor([[ 1.1528e+00, -1.3294e+00,  1.5728e+00,  1.5720e+00, -1.3839e-01,
         -4.6373e-01,  9.0230e-02, -3.1615e-01,  6.1793e-01,  1.2195e-01,
          2.2644e-01,  1.5573e-01, -8.7906e-02, -5.9839e-02,  6.4818e-02,
          3.2758e-03, -3.0822e-03,  2.9322e-03, -1.8675e-03, -3.2102e-05,
          7.6925e-01, -2.2105e-02,  1.6466e-02,  7.3210e-04, -3.1591e-01,
          4.0971e-01, -3.8844e-02, -3.0193e-02,  9.0835e-02, -1.5996e-03,
          1.3532e-01,  9.8299e-02,  5.5349e-02, -1.4271e-01, -3.4271e-02,
          4.1697e-03, -2.1159e-02, -1.2754e-02, -1.8187e-02, -2.5063e-02,
         -1.5668e-01,  2.0895e-02, -3.7926e-02, -1.4195e-01,  1.4385e+00,
          2.4104e-01, -1.4392e-01, -8.7650e-01,  7.4619e-02,  7.5124e-02,
         -8.1860e-01,  1.9888e-02,  1.1848e+00, -8.4308e-01,  7.1530e-02,
         -2.8729e-01, -1.9616e-01,  8.4710e-03,  1.0875e-01, -6.6540e-03,
         -1.6116e-01,  6.2558e-02,  3.5429e-02, -3.9473e-02,  4.8207e-01,
         -1.4783e-01,  1.2157e+00, -6.1122e-01,  1.8662e-01,  5.9672e-01,
          1.5326e+00, -6.8648e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0944))
tensor([[ 1.8384e+00, -7.6129e-01,  1.1633e+00, -1.3593e+00,  3.0035e-02,
          3.0438e-01,  2.2952e+00,  7.0712e-01,  8.9612e-01, -1.2033e+00,
          3.9024e-01,  1.2114e+00,  2.7750e-02, -7.8619e-02,  3.3689e-01,
         -3.2934e-01, -9.7194e-01,  1.8337e-01,  7.0568e-03,  2.4591e-01,
         -2.0350e-01, -3.8181e-01, -2.5686e-02, -1.3614e-02, -1.4252e-01,
         -7.4689e-02, -1.3904e-01,  2.3019e-01, -1.0712e-01,  4.0852e-01,
         -1.1658e-01,  2.1221e-03, -1.0196e-02,  9.7148e-03, -7.2693e-03,
          1.1997e-02, -4.3242e-02, -1.4771e-03,  1.8504e-01, -4.1973e-01,
         -2.7653e-02,  1.0096e+00, -8.4020e-02, -1.9536e-01, -4.2546e-01,
         -3.7963e-01,  6.5520e-01,  1.1422e+00,  2.2990e-01, -5.3551e-01,
         -8.8950e-01,  2.4728e-01, -4.1013e-01,  8.1584e-02, -6.0483e-02,
         -9.7501e-02, -2.7574e-01,  1.9907e-01, -5.9513e-02,  6.0904e-01,
         -9.5954e-01,  1.8838e-01, -3.3121e-01,  1.0348e-01, -1.0339e-01,
          3.0442e-01, -3.6051e-01, -3.0463e-01, -2.6511e-01,  1.4256e-01,
          3.1355e-01,  7.6931e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0945))
tensor([[ 1.9723e-01, -6.4501e-01,  1.7838e+00, -5.9065e-01,  2.0471e-01,
         -3.7337e-02, -7.6031e-02,  1.2440e-01, -1.0625e+00,  7.7409e-01,
          1.7045e+00,  7.7923e-01, -2.5595e-01,  1.7614e-01, -9.7197e-02,
          2.0526e-02,  1.1040e-02, -1.5561e-01,  1.9830e-01,  1.7890e-02,
          1.1515e-01,  1.2608e-01, -1.0005e-02, -5.7562e-02, -5.0644e-02,
          1.3113e-01, -2.6503e-01,  1.7747e-01, -5.3912e-01,  1.6031e-01,
         -8.6239e-02,  5.7132e-02,  4.8152e-01, -2.4419e-02, -3.7462e-02,
          2.2113e-02, -1.6801e-02,  3.3351e-02,  2.1826e-01,  4.5081e-02,
          8.2929e-01,  4.1253e-01, -2.9999e-01,  9.3348e-02,  2.3593e-01,
          1.1131e-01, -1.7411e-01,  4.3857e-01, -8.0455e-01,  1.2468e-01,
          1.3777e+00, -2.5065e-01,  3.5112e-01, -8.7611e-02,  8.8703e-02,
         -3.8213e-01, -3.0880e-01,  1.8207e-01, -2.8214e-01,  6.8141e-02,
          1.7213e-03,  3.5392e-02, -3.1046e-01,  2.0378e-01,  1.0737e-01,
          2.9049e-01,  2.9877e-01,  1.8094e-01,  7.7586e-01,  4.1546e-02,
          2.9323e-01,  1.0771e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0946))
tensor([[ 0.3978,  0.3455,  1.0668,  0.8221,  1.0942, -1.1019,  0.6414, -0.7444,
          2.4105, -1.6659,  0.2297,  0.3172, -0.0656, -0.1246, -0.1309,  0.1248,
         -0.2306, -0.1564, -0.1599,  0.0241, -0.0411, -0.3868, -0.0216, -0.1174,
         -0.1771, -0.0919, -0.0507,  0.0904, -0.0055, -0.4151,  0.2098,  0.4079,
          0.2219,  0.0463,  0.4949,  0.3415, -0.0885,  0.0271,  0.4650, -0.0256,
         -0.0312,  0.1017, -0.5396, -0.0477,  0.3046, -0.2641, -0.0381,  0.1835,
          0.3461,  0.7771,  0.2947,  0.4299,  0.8937, -0.2640, -0.3857,  0.3035,
          0.8439, -0.7538,  0.7904, -0.2394,  0.2970,  0.0587,  0.0743,  0.0607,
          0.0749, -0.2478, -0.9911,  0.4735, -0.2439,  0.1227,  0.9961, -0.6059]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0950))
tensor([[ 7.1831e-01,  5.3611e-01,  1.1245e+00,  5.8472e-01,  1.2954e+00,
          2.5454e-01,  1.9249e+00,  6.5475e-01,  2.3579e+00,  6.5332e-02,
          5.6992e-02,  1.3018e-01, -2.7890e-01, -8.1713e-03,  4.6629e-02,
          4.1615e-02,  2.3153e-02,  2.0280e-02,  4.8182e-02, -5.1379e-02,
         -2.5799e-01,  3.4446e-01,  1.7569e-02,  1.4664e-03, -7.0644e-03,
          6.1889e-02, -5.8085e-02,  4.2718e-03,  6.4328e-01,  7.3918e-01,
         -2.6888e-02, -8.3015e-01,  3.7770e-01, -1.0888e-02,  5.9695e-02,
         -1.9507e-02,  8.9674e-02,  1.5501e-01,  8.3833e-01, -6.8396e-03,
          2.3663e-01, -1.7302e-02, -1.7299e-01,  2.5706e-01,  2.4733e-01,
         -6.3901e-02,  1.6621e-01,  1.6838e+00,  3.1753e-01, -9.5901e-01,
          1.0511e+00, -1.3443e-01,  5.9639e-01, -3.3975e-01,  1.1185e+00,
          9.3215e-01, -1.9021e-01,  1.0823e-01, -1.9521e-01,  4.8781e-02,
          1.2551e+00, -9.9356e-01,  7.0197e-01, -5.5900e-01,  5.9661e-01,
          9.1925e-01, -8.2477e-02,  7.8548e-03, -1.7569e-01, -1.2079e-01,
         -3.0344e-01,  1.8484e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0951))
tensor([[ 0.8011, -0.7871,  0.0258,  0.0092,  0.0755,  0.4343,  0.8833,  1.0369,
         -0.0698, -0.0289,  0.9133,  0.2830,  0.0992,  0.0364, -0.0135, -0.3585,
         -0.2836,  0.2954, -0.4001, -0.0021, -0.1245, -0.0246,  0.0556, -0.0684,
         -0.0067,  0.1201, -0.0102,  0.0953,  0.0818,  0.0029,  0.0308,  0.0763,
         -0.0610,  0.0353,  0.8096,  0.2511,  0.0853,  0.1857,  0.1755, -0.1628,
          0.3538, -0.6435, -0.4269,  0.3215,  0.3487,  0.1980, -0.1952, -0.0986,
          0.0579,  0.0788, -0.0618,  0.0326, -0.1285,  0.1688,  0.3935,  0.9917,
          0.9670, -0.4772,  0.6196, -0.2846, -0.3175,  0.1603, -0.0273, -0.0787,
          0.9015, -0.8039, -0.2706,  0.3687,  0.9235, -0.7187,  0.7012,  0.3247]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0952))
tensor([[ 2.0678, -1.7994,  0.9690,  0.7691,  2.4303,  0.3002, -0.2217,  0.3426,
          1.4345, -0.1452,  0.0774,  1.6599,  0.3838, -0.4450,  0.4210,  0.0114,
          0.0216, -0.0155,  0.0117, -0.0847, -0.4042, -0.1425,  0.0095,  0.0211,
         -0.6119,  0.1795, -0.0059,  0.1207, -0.0728, -0.1688, -0.6255,  0.0530,
         -0.0383, -0.0232, -0.0866,  0.0286,  0.1222, -0.1286,  0.2837,  0.5360,
          0.1139,  0.4466, -0.1589,  0.4540,  0.4634,  0.1290, -0.4174, -0.2508,
          0.3382,  0.3385, -0.2167,  0.1698,  0.9877, -0.3489, -0.3619,  0.5209,
         -0.3131,  0.1829, -0.1823, -0.0166, -0.1704, -0.0143,  0.1732,  0.0032,
          0.0629, -0.3360,  0.9613,  0.1207, -0.3319,  0.1403,  0.0809,  0.7343]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0955))
tensor([[ 0.4565, -0.1654,  2.5739, -2.2121, -0.5693, -0.3395,  0.4272,  0.3573,
          0.0851, -0.0459, -1.3401,  0.3496, -0.0802, -0.0307, -0.0547, -0.1387,
         -0.1533, -0.0468, -0.0458, -0.0301,  0.0531,  0.1816, -0.1255,  0.0495,
          0.0716, -0.0653,  0.2485, -0.1390, -1.0025, -0.0287,  0.0424, -0.1078,
          0.1582, -0.1425,  0.0036,  0.0460, -0.1492,  0.0907, -0.0074, -0.0254,
          0.2055,  0.0141,  0.5673, -0.4605, -0.4595, -0.8693,  0.6029,  1.2190,
         -1.1488, -1.1583, -1.3025,  0.8089,  0.2357,  0.2107, -0.8498, -0.8569,
         -0.0715, -0.0596,  0.0364,  0.0070,  1.8117, -0.5220,  1.4119, -0.9197,
         -0.0490,  0.0508,  0.0131, -0.0333,  1.5262, -0.7582, -0.1800,  0.1649]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0956))
tensor([[ 0.1652,  0.0297,  0.8573,  1.0651,  0.1955,  1.4722,  1.2436, -0.4148,
          0.5874,  0.2957,  0.3788,  1.0176, -0.1005,  0.0072, -0.0119, -0.1587,
         -0.0411, -0.0179,  0.0161,  0.0039,  0.0752, -0.0218, -0.4485, -0.1831,
          0.1917, -0.2705,  0.2726,  0.2689, -0.0296,  0.0457, -0.0183, -0.0806,
         -0.0100,  0.0428, -0.1614, -0.0984,  0.2803, -0.2118,  0.0035,  0.0018,
          0.0652,  0.1059,  0.1278,  1.0311, -0.3895, -0.3827, -0.1586, -0.3285,
          0.1430,  0.1038, -0.6344,  0.0457, -0.0996,  0.0696,  0.4463, -0.1321,
         -0.5342, -0.7018,  0.0263, -0.0093, -0.9288, -0.0046, -0.4346,  0.1176,
         -0.2879,  0.2560, -0.1760,  0.1188,  0.3703, -0.1046, -0.3174,  0.2776]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0956))
tensor([[ 1.3683,  0.8573,  1.0662, -0.6416,  0.5028,  1.4358,  1.1515, -0.0636,
          1.7709, -1.7360, -0.0505,  0.7679, -0.2320, -0.1149, -0.1644,  0.0116,
          0.0302, -0.0566, -0.0566, -0.1057, -0.2787,  0.1212, -0.2698,  0.3530,
         -0.2496, -0.2182, -0.0767,  0.1865,  0.0123, -0.0944,  0.0275, -0.0470,
          0.0033, -0.0178,  0.3905,  0.1647, -0.8025,  0.1068,  0.6518, -0.7319,
         -0.0590,  0.6154,  0.0040, -0.5356,  1.1304,  0.1401,  0.1350, -0.9175,
          0.2425, -0.0236,  0.7339,  0.0639, -0.2057,  0.1625, -0.0340,  0.0561,
         -0.6023,  0.0157,  0.0519,  0.0093,  1.9778, -0.1369, -1.5021,  0.4020,
          0.9709, -0.1046, -0.6294, -0.2684,  0.9892, -0.3714,  0.7070,  0.5547]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0956))
tensor([[ 0.2853,  0.2983,  1.9125, -0.6831,  1.4577,  1.7456,  0.3561,  0.1689,
          0.0836,  0.2034, -0.1008, -0.0148, -0.0620,  0.2400,  0.1512, -0.0380,
         -0.0468, -0.0370, -0.1213, -0.0652,  0.0878,  0.1386, -0.2715,  0.0078,
          0.0560, -0.1941, -0.0160,  0.0030,  0.5645, -0.2903, -0.0090,  0.0382,
          0.3353, -0.3712, -0.0401, -0.0463, -0.0221, -0.0064,  0.4742, -0.0575,
          0.2851,  0.0595, -0.1077,  0.0244,  0.0222, -0.0631,  0.1355,  0.6985,
         -0.8273,  0.6715, -0.0198, -0.7459, -0.7102,  0.1204, -0.0594, -0.8491,
         -0.2806,  0.5159, -0.0993, -0.0318, -0.1254,  0.0872, -0.4181,  0.2327,
          0.2185,  0.4426,  0.2368,  0.1305,  1.3778, -0.8288, -0.0573,  0.0170]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0957))
tensor([[ 4.2454e-01,  4.3216e-01,  9.8046e-02, -1.2027e-01,  2.9537e+00,
         -9.4311e-01,  7.6825e-01,  2.8127e-01,  1.9901e-01, -5.2060e-01,
          1.6840e+00,  1.7334e+00, -7.2922e-02,  2.3271e-01,  2.4699e-01,
         -2.9638e-01,  1.7443e-01, -2.0348e-01, -2.5593e-01,  6.3567e-02,
         -5.2442e-02,  1.5448e-03,  7.2601e-02, -2.7608e-03, -7.5973e-02,
         -6.7310e-02, -2.7314e-01,  1.8185e-01,  3.8134e-02, -2.4339e-02,
          1.8332e-01,  4.6041e-01,  1.2927e-01,  1.8180e-02, -1.7218e-02,
          5.9925e-02,  7.2525e-01,  5.7669e-02,  1.0340e-02, -2.6683e-02,
         -6.6688e-01,  5.4866e-03, -3.2273e-01, -3.0676e-02,  3.4870e-02,
         -2.7331e-01, -3.9994e-02, -3.4887e-01,  4.5308e-01, -3.9573e-03,
          5.8725e-02, -5.3345e-02,  2.2913e+00, -2.2750e+00,  1.2050e+00,
         -1.3022e-01,  3.4070e-01,  2.0965e-01, -3.9262e-03,  4.1727e-02,
          6.3696e-02,  5.1499e-01, -2.9420e-01, -4.9842e-03, -5.2501e-02,
          5.7613e-02, -1.8985e-01,  1.7110e-01, -3.5817e-01,  6.4121e-01,
          8.2855e-02, -4.3233e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0958))
tensor([[ 7.8826e-01,  6.2628e-01, -4.9991e-03,  6.1524e-01, -1.5528e-02,
          8.4140e-01, -2.8945e-01, -5.4835e-01,  3.1704e+00, -1.8187e+00,
         -6.5397e-01,  1.1562e+00, -2.2895e-01, -4.3163e-02,  2.0213e-02,
         -2.7625e-02,  4.7750e-02, -1.2326e-02,  1.2210e-01, -3.2443e-01,
         -2.6905e-01, -2.2227e-02,  1.1106e-01,  7.2233e-02, -3.0734e-01,
          7.0814e-01,  3.2101e-01,  1.5532e-01,  8.0032e-02, -8.2538e-03,
         -2.4187e-02, -4.1938e-02, -1.1753e-02, -1.2241e-01, -3.2193e-01,
         -2.8882e-01, -2.6331e-02,  1.3037e-02, -2.6298e-02, -2.4494e-02,
          1.5606e-01,  1.5599e-02,  7.3308e-01,  7.9218e-01, -3.8808e-01,
          2.0205e-01,  4.0728e-01,  7.4947e-01,  5.1252e-01, -1.2555e+00,
          6.1418e-01, -5.0278e-01, -2.8492e-01,  1.7213e-01, -1.3316e-01,
         -2.3116e-01,  1.1212e-01,  1.5907e-01, -2.5670e-01,  3.1526e-01,
         -9.5655e-02, -2.8319e-03,  1.8856e-02, -1.7377e-01, -1.1440e+00,
         -2.0325e-01,  1.9141e-01,  4.1700e-01, -4.6212e-01,  4.9893e-02,
         -1.0792e-01, -2.9462e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0960))
tensor([[ 1.1017, -1.1364,  1.4293,  1.4648,  0.2687,  1.5308,  2.4497, -1.7861,
          0.1626,  0.9279,  1.4336,  2.7292, -0.5792, -0.0225, -0.0134,  0.1028,
          0.0262,  0.0416, -0.1373, -0.0076,  0.5555,  0.0033,  0.5080,  0.5463,
         -0.1530,  0.1559, -0.1678, -0.1224,  0.0202,  0.0263,  0.0347,  0.4485,
          0.2206,  0.1383, -0.0089, -0.4733, -0.4185,  0.4323,  0.0079,  0.1750,
         -0.4366,  1.4839,  0.0983,  0.6184,  0.6222, -0.3077, -0.4825, -0.7949,
          0.1096,  0.1274, -0.7856,  0.0821,  0.3618, -0.1382,  0.6082, -0.3731,
          0.0755, -0.7159, -0.1878,  1.1457,  1.0434, -0.2356, -0.2210, -0.0405,
         -0.3527,  0.2381,  0.0983,  0.1582, -0.3974,  0.3238,  1.1292,  0.8950]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0960))
tensor([[-0.0305,  1.2743,  0.2335,  0.1884,  2.0451,  2.3135,  0.8089, -0.2304,
          0.9040,  0.8358,  0.1026,  0.9626,  0.3120, -0.1448, -0.1316,  0.0182,
         -0.2530, -0.1140,  0.0409,  0.1775,  0.2444,  0.1570, -0.0085, -0.0867,
          0.1949,  0.2006, -0.1559,  0.1431, -0.0713, -0.1283, -0.4948, -0.0698,
         -0.0208,  0.9258, -0.2060,  0.2671, -0.0900,  0.0561, -0.1929, -0.1882,
         -0.1070, -0.2324,  1.0907, -1.0889,  0.5787, -0.8334,  1.0426, -0.5024,
          0.4719, -0.1422,  0.2735,  0.0070, -0.1347,  0.5737,  0.0411,  0.0971,
          1.3343,  0.6828,  0.5205,  0.5929, -0.6281,  0.1328,  0.1174,  0.1349,
         -0.2297,  0.2868,  0.0514,  0.1408, -0.1320, -0.0867,  0.1205,  0.1817]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0962))
tensor([[ 4.2206e-01,  7.1456e-02,  1.2175e+00,  3.3728e-01,  9.6194e-01,
          1.9041e+00,  2.9961e-01, -1.1412e-01,  3.1463e-01, -1.5434e+00,
          1.3317e+00,  2.7557e+00, -2.4440e-02, -1.7227e-02,  2.2921e-02,
          1.0421e-02, -5.0314e-02,  9.5446e-02, -2.6631e-02,  6.1818e-02,
          3.4664e-02,  6.7926e-02,  7.1695e-01,  1.1946e-01,  1.2931e-01,
         -1.0478e-01, -1.9509e-02, -3.2324e-01,  2.4275e-01,  5.2525e-02,
         -4.9823e-01,  2.4077e-02, -1.3399e-01, -1.8240e-02,  1.8389e-02,
         -2.2631e-01, -2.5635e-02, -2.1767e-02,  1.7571e-01, -6.7197e-01,
          2.0035e-01,  6.5550e-01, -3.4178e-01, -3.7828e-04,  3.5146e-01,
          5.3098e-02,  2.0435e-02,  5.7221e-01, -6.1212e-01, -2.6050e-01,
          8.2194e-01, -5.8938e-01,  4.0434e-01,  6.3850e-01, -5.5350e-02,
         -3.7959e-01, -7.4384e-01,  1.2295e-02, -1.7129e-01,  1.0081e+00,
         -1.6106e-01,  1.4350e-01,  7.5077e-02, -1.1660e-01, -6.6157e-02,
          1.7686e-01,  7.2666e-01, -5.2605e-01,  1.6115e-01,  1.1243e-01,
          1.2216e+00,  3.2658e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0963))
tensor([[ 1.2489e+00,  9.2987e-01,  1.7428e+00,  5.6200e-01,  3.4628e-01,
          5.0864e-01,  6.1142e-01,  1.1852e+00,  1.1657e+00,  9.2504e-01,
          2.7157e+00,  1.3991e+00, -3.3492e-01, -2.5193e-02, -3.0216e-02,
         -1.8067e-01,  1.8484e-01, -4.2350e-01, -4.8021e-01, -4.2901e-02,
         -3.1098e-01, -2.1640e-01,  4.3450e-02, -8.2547e-04, -1.8342e-01,
         -9.4348e-02,  1.9945e-01,  1.3779e-01, -5.3177e-01, -2.4235e-01,
         -2.2634e-02,  2.6283e-02,  7.1508e-02,  3.0988e-02,  4.0421e-02,
         -1.2370e-01,  1.1912e-01,  3.4584e-01,  2.9090e-02,  3.6066e-01,
          4.4453e-01,  8.7121e-01, -2.7678e-01,  2.5555e-01,  4.2884e-01,
         -1.4121e-01,  2.4181e-01,  6.0766e-01, -7.3281e-01,  7.7540e-01,
          4.3399e-02,  4.3923e-01, -6.4966e-02,  5.5331e-02,  6.1481e-02,
          2.6154e-02, -1.7309e-01,  1.6651e-01,  6.0512e-01,  9.6861e-01,
         -4.1301e-01,  2.1811e-01, -4.8155e-01,  2.6381e-01,  9.0772e-01,
         -4.0713e-01,  1.1787e+00, -5.6204e-01, -8.7267e-01,  1.1142e-01,
          1.2719e+00,  2.3614e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0963))
tensor([[ 2.1877e+00,  7.3986e-01,  1.0938e+00, -9.8320e-01,  3.0694e-01,
          1.0201e+00,  7.1129e-01,  2.1272e-01,  7.6886e-02, -1.2225e+00,
          2.9142e-01,  2.1253e+00,  2.3626e-01,  3.9040e-02, -4.8679e-03,
         -3.6457e-01,  3.9845e-01, -1.0491e-01, -1.2545e-01, -2.3358e-02,
          7.6171e-01,  4.4013e-01, -7.4132e-02,  1.0091e-01, -5.2415e-02,
          3.5231e-02,  5.3658e-02,  1.7488e-02,  1.3426e-02, -4.6337e-01,
          2.6120e-02,  7.3575e-02,  2.6903e-02, -4.4684e-01,  6.2737e-02,
         -4.9562e-03, -2.2272e-02,  5.5775e-03,  1.7953e-01, -4.9417e-01,
         -1.3696e-02,  5.7101e-01, -4.3132e-01, -2.7813e-01,  1.5247e+00,
         -2.8567e-01,  2.0963e-01,  1.5145e-01,  7.1491e-02,  3.1611e-01,
         -4.1215e-01, -2.2187e-02, -2.1882e-01,  1.9999e-01,  1.1445e-03,
          2.2969e-02,  5.4178e-02,  6.4020e-01,  3.8284e-01, -3.2002e-01,
         -3.0738e-01,  3.9917e-02, -2.0031e-01,  5.8777e-02,  1.4857e+00,
         -2.7983e-01, -3.4136e-01, -5.5898e-01, -8.6808e-02,  4.2669e-02,
         -1.7041e-01,  8.6331e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0964))
tensor([[ 0.2639,  0.0240,  2.2741, -0.9631,  0.0376,  0.0619,  1.3437,  0.5714,
         -0.7957,  0.4208,  1.2852, -0.6250,  0.0268, -0.0257,  0.0175,  0.0806,
         -0.0716,  0.0461,  0.0949, -0.0354, -0.0039,  0.2498,  0.1036, -0.0528,
         -0.1119, -0.0790,  0.1200, -0.2156,  0.4977,  0.2641, -0.0203,  0.0155,
          0.0331, -0.0222,  0.0438, -0.0492, -0.5482,  0.3446, -0.1564,  0.0268,
         -0.1942,  0.1749, -0.0389, -0.5996,  0.8079, -0.1678,  0.0855,  0.0461,
         -0.1502, -0.4235,  1.5345, -0.2608, -0.1285,  0.0968, -0.0145, -0.0375,
         -0.1493,  0.1053, -0.0567,  0.1945,  0.2748,  0.5349, -1.5773,  0.3245,
          0.3319,  0.1231,  0.0139,  0.0692,  1.3030, -0.8384, -0.5326,  0.0191]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0965))
tensor([[ 0.1678, -0.1831,  0.2615,  0.2140,  2.3472,  0.1767,  1.5685, -0.5769,
          1.5052, -0.5750,  0.2311,  0.0099, -0.0385,  0.2228, -0.2499,  0.0175,
          0.0866, -0.0316,  0.0330,  0.0330,  0.0184, -0.0188,  0.0694,  0.0401,
          0.3684, -0.2389, -0.0994, -0.1800, -0.0170,  0.0063,  0.3853, -0.3745,
         -0.1349,  0.0284, -0.0582, -0.0072, -0.5637, -0.0767, -0.5494, -0.0093,
          0.8096, -0.0402, -0.1530,  0.0956,  0.1121,  0.0587, -0.0173, -0.4851,
          0.1612, -0.2124, -0.2160, -0.1845,  0.9293, -0.2418,  1.4755, -0.6977,
         -0.1406,  0.1580, -0.0810, -0.0122,  0.5237,  0.7496, -0.1272, -0.0857,
          0.6040, -0.0070,  1.0880, -0.6384,  0.4268,  0.5644,  0.3494, -0.1857]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0966))
tensor([[ 0.2886,  0.9359,  0.2151,  0.1504,  0.8887, -0.0192,  0.3850, -0.7278,
          0.1557,  0.2099,  0.4526,  2.5553,  0.0796,  0.1596,  0.1517, -0.2318,
          0.0797,  0.0913,  0.2852, -0.0357, -0.0794, -0.0984, -0.0040, -0.0378,
         -0.0040, -0.1267,  0.1524,  0.0218,  0.5242,  0.0607,  0.1350,  0.1886,
          0.2400, -0.0227, -0.0404,  0.0798,  0.1640, -0.1799,  0.0257, -0.0633,
          0.1643, -1.3204, -0.5938,  0.3767, -0.0647, -0.2180,  0.1282,  0.6554,
         -0.1208, -0.8376, -0.4586,  0.3510, -0.4960,  0.3723,  0.9941, -0.9143,
         -0.1655,  0.1195,  0.1125,  0.1306,  1.3522, -0.7686, -1.1535,  0.7726,
          0.1174,  0.0308, -0.5782,  0.4263,  1.2534, -0.7003,  1.8946,  0.4828]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0966))
tensor([[ 1.8291, -2.1430,  0.9675,  0.5840,  2.3027,  0.1996,  2.5880, -0.4104,
         -0.0109,  0.7750, -0.3472,  0.4595,  0.8175, -0.0112,  0.0352, -0.1415,
         -0.1390, -0.1570,  0.1842, -0.0283, -0.9560, -0.1477, -0.0470, -0.0377,
         -0.0391,  0.1238, -0.2340, -0.2864,  0.0201, -0.1733, -0.0154,  0.9152,
          0.0402, -0.0197,  0.0391,  0.0427,  0.2519, -0.2205, -0.0206, -0.0076,
          0.1343,  0.0547,  1.5360,  0.4515, -0.3137, -1.6978, -0.0811, -0.3378,
          0.3658,  0.3435, -0.1071,  0.1578,  1.4337, -1.2444, -1.5707,  0.5830,
          0.0033,  0.0205,  0.1744,  0.0456,  0.7720,  0.0924,  0.2382, -0.2391,
         -0.1930,  0.1762, -0.4683,  0.0245, -0.3324, -0.2276, -0.2549,  0.3091]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0966))
tensor([[ 2.3158,  0.7015,  1.1912, -0.8593,  0.3013,  0.5744,  1.8468, -1.1683,
          1.0090,  0.0093,  1.1132,  0.2730,  0.4710,  0.0352, -0.0162, -0.4138,
         -0.2865, -0.2457,  0.1079,  0.5949,  0.4935,  0.1596,  0.0733, -0.0369,
         -0.3762, -0.2951,  0.0308, -0.0069, -0.4706, -0.6438, -0.0229, -0.0034,
          0.0380,  0.0276,  0.0108, -0.0155,  0.5093, -0.5443, -0.1102, -0.0309,
          0.3400, -0.0229,  1.5863,  0.3729, -0.8292,  1.9771, -0.1356,  0.9732,
          0.5332, -0.7593,  0.0446,  0.0301, -0.2619,  0.1717,  0.5183, -0.2855,
         -0.2222,  0.1797,  0.0148,  0.0286, -0.7031,  0.4709, -0.2065, -0.2499,
         -0.5333,  0.3122,  0.0892,  0.0072,  0.5148, -0.0493,  0.0050,  0.0470]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0969))
tensor([[ 1.8270e+00,  1.7004e+00,  3.6381e-01,  9.1700e-02,  8.4960e-03,
          7.8952e-01,  1.6841e+00,  1.2607e+00,  1.4385e+00,  1.0415e+00,
          1.3873e+00,  1.2458e+00,  4.8802e-01,  1.2250e-01,  1.1771e-01,
          1.3779e-01,  3.9577e-02,  3.2849e-01,  2.9070e-01,  2.5066e-01,
          6.4357e-01,  4.0175e-03, -9.1007e-03,  1.4596e-02,  2.2514e-02,
         -1.6001e-02, -2.2353e-02,  1.2094e-02,  1.4349e-03,  2.4006e-02,
          6.2155e-02,  1.3129e-01,  1.4045e-02, -1.4404e-01,  1.1554e-01,
         -2.5119e-03,  3.9663e-01,  4.7930e-01,  4.3364e-01,  4.5161e-01,
          3.4096e-01,  4.1969e-01, -1.3391e-01,  2.7007e-01,  2.6998e-01,
         -4.5868e-02,  4.4001e-01, -7.2285e-02,  8.8190e-02,  8.8265e-02,
         -5.0966e-02,  5.0519e-02, -1.7914e-01,  1.7966e-02,  5.3050e-01,
          8.2525e-01, -1.2103e-01,  2.0684e-01,  1.2817e-01,  2.2143e-02,
          1.0971e-01,  4.9750e-01,  2.7525e-01,  5.8299e-01,  2.0250e-01,
          5.3546e-01,  3.6425e-01,  4.5641e-01, -6.0821e-03,  6.3612e-01,
          1.7010e-01,  6.1109e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0970))
tensor([[ 1.4224e+00, -1.5050e+00,  7.8895e-01,  8.2709e-01, -5.3261e-01,
          1.5680e+00,  1.5195e+00,  1.0757e+00,  2.6984e-01,  1.0383e+00,
          2.4397e-02,  7.6037e-01, -4.4978e-02, -3.6375e-02, -4.1753e-02,
          5.1842e-01,  6.1981e-01, -1.6375e-01,  1.5555e-01,  8.8592e-02,
          7.1503e-02,  1.4700e-01,  3.0549e-01,  3.1957e-01,  8.3915e-02,
         -2.6089e-01,  1.6600e-01,  6.0808e-02, -6.1343e-03,  1.6881e-01,
         -1.5021e-01, -2.1145e-02, -4.3736e-02, -1.0750e-01, -3.2315e-01,
          1.5090e-01,  5.0867e-01, -8.7063e-02,  3.4823e-01,  6.1329e-01,
          1.4743e-02,  6.2542e-01, -7.7257e-01,  1.7716e-01,  2.1034e-01,
          7.8712e-01, -6.2971e-02, -2.6503e-01,  2.8780e-01,  2.8973e-01,
         -2.1440e-01,  2.4496e-01, -3.1206e-02, -8.5617e-02,  5.0379e-01,
         -4.6339e-02, -4.2448e-01, -5.9290e-03, -4.5799e-01, -9.0742e-01,
          2.3156e+00, -7.6112e-01, -1.3694e+00,  9.1371e-01,  5.1493e-01,
         -1.7115e-03,  4.5223e-01,  2.9121e-01,  1.5872e-01, -9.1374e-02,
          1.7503e-01,  5.8113e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0971))
tensor([[ 0.1315, -0.0708,  0.9251,  0.5631,  0.6540, -0.2160,  0.2781,  0.1650,
          0.1344, -1.1794,  0.0925,  1.8334,  0.0021, -0.0505,  0.0190, -0.0312,
         -0.0057,  0.0296, -0.0060, -0.0344, -0.0258,  0.0740, -0.1760, -0.3499,
          0.0961,  0.1309,  0.1170, -0.1363, -0.7622,  0.0137, -0.0226,  0.3686,
         -0.2712, -0.0193, -0.0213,  0.1514, -0.1229, -0.0973, -0.1061,  0.2686,
         -0.1215,  0.1745, -0.1459,  0.1099,  0.1427,  0.0265, -0.0437,  0.3738,
         -1.5922,  0.2648, -0.8852, -0.1260, -0.2948,  0.0217, -0.1018, -0.0211,
          0.1821, -0.0044, -0.0987,  0.1409,  1.6024, -0.7983,  1.4240, -0.7498,
          0.2819,  0.3472, -0.0027, -0.6178,  0.8510, -0.4284,  0.1916,  0.4705]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0971))
tensor([[ 1.4347,  0.1195,  2.6103,  0.5909,  0.1477,  0.1404,  1.5501, -1.0118,
          0.3159,  1.0338,  1.0556,  1.1937, -0.1504, -0.0431, -0.0077, -0.2267,
         -0.4392, -0.3697,  0.1449,  0.4906, -0.6454,  0.5704, -0.0092,  0.0205,
          0.3446,  0.3516, -0.3307,  0.2739,  0.0265,  0.5948, -0.0179, -0.0382,
         -0.0130, -0.0178, -0.0969,  0.2058, -0.2881,  0.1534, -0.0649,  0.1322,
         -0.0828,  0.1168,  0.8065, -1.4304,  1.2004,  1.2068, -0.1968, -0.7544,
          0.5399,  0.5398,  0.3808,  0.3972,  0.0550,  0.0028,  0.0715,  0.0085,
          0.2240, -0.0809, -0.1502, -0.2755, -0.5046,  0.4886,  0.2802, -0.2513,
          0.1729,  0.0368,  0.3823,  0.2313, -0.4317,  0.3343,  0.4861,  0.6115]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0972))
tensor([[ 1.3725,  1.1486, -0.3416, -0.3265,  0.3589,  2.1913, -0.5823, -0.6997,
          1.4406, -0.9262,  0.2060,  0.4586,  0.4514, -0.0095, -0.0458, -0.0044,
          0.0393,  0.0168,  0.1012,  0.0301,  0.4226,  0.0954, -0.0670, -0.0947,
         -0.0163,  0.1048,  0.0348,  0.0172, -0.0144,  0.1136, -0.0259, -0.2548,
         -0.2715, -0.7106,  0.8528,  0.4478,  0.0482, -0.0456,  0.2447, -0.0564,
          0.0074, -0.0864,  1.5415, -0.0420, -0.2527,  1.7686, -0.3425, -0.2757,
          0.4423, -0.3759, -0.1692, -0.0420, -0.2109,  0.0439,  0.0583,  0.0166,
          1.2836, -0.2390,  0.8391, -0.5234,  1.6392, -0.3896, -1.1422,  0.6423,
          0.5416, -0.7734, -0.4215,  0.5488,  1.2033, -0.5875, -0.2528, -0.1123]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0972))
tensor([[ 0.5181,  1.2125,  0.1087, -0.0565,  1.4189,  0.3638,  1.8420, -0.0439,
          0.1436,  0.6306,  2.1965,  1.4467, -0.1773,  0.0544,  0.0385,  0.0517,
         -0.1888,  0.2477,  0.1662, -0.0035, -0.3937, -0.0744, -0.0682, -0.0832,
          0.1666, -0.1713,  0.1362,  0.1936,  0.0496, -0.0520,  0.1687,  0.4325,
          0.5808,  0.0272,  0.0095, -0.0511,  0.0033,  0.6169, -0.1269,  0.0706,
          0.2359,  0.2006, -0.4222,  0.4919,  0.1016,  0.0272,  0.2776,  0.0077,
          0.1778,  0.1222,  0.1404,  0.0530,  0.3348, -0.1261, -0.6199,  0.6225,
         -0.1402,  0.1510,  0.0117, -0.0450,  0.9246,  0.5984, -1.0855,  0.4595,
         -0.3096, -0.0131, -0.2702,  0.1172,  0.2707, -0.2663,  0.0441,  0.0772]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0973))
tensor([[ 0.1259,  0.1221,  0.2510, -0.9435,  1.4826,  0.7849,  1.0791,  0.6244,
         -0.7914, -0.2433,  1.9138,  0.6737,  0.0045, -0.0572, -0.0594, -0.0976,
          0.1493, -0.1254, -0.0303,  0.0107,  0.0219,  0.3254,  0.0597, -0.0250,
          0.1578,  0.1219,  0.2426, -0.2372,  0.0345, -0.1244, -0.0206, -0.0802,
          0.6015, -0.3935, -0.0287, -0.0084, -0.1134, -0.0851, -0.0963, -0.0484,
         -0.3997,  0.0204, -0.0474,  0.1378,  0.0126, -0.1778,  0.1182,  0.0408,
          0.4428, -0.4060, -0.4657, -0.0317, -0.3296, -0.1774, -0.1432, -0.2508,
          0.4555,  0.7214,  0.1167, -0.7551, -1.0198,  0.1528, -0.2229, -0.0896,
          0.2275,  0.0222,  0.0546, -0.1011,  1.2635, -0.3488, -0.4670,  0.1510]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0975))
tensor([[ 7.7166e-01, -3.7630e-01, -5.3180e-01,  4.6109e-01, -5.4641e-03,
          1.6016e+00,  1.8738e+00, -4.6928e-01,  4.8201e-01,  9.5971e-01,
         -6.6691e-01,  1.0748e+00,  1.5796e-01, -1.1040e-01,  1.0615e-01,
          3.4441e-01, -2.1020e-01, -5.6878e-03, -5.0170e-02,  1.7772e-01,
         -5.1009e-01,  9.5903e-02,  2.6802e-02,  3.4463e-01,  1.2856e-01,
          2.5326e-02, -7.3872e-02, -5.5562e-03, -6.1184e-04, -9.0692e-02,
          3.2045e-02,  3.2702e-01,  1.6678e-02,  2.5670e-02, -7.3338e-02,
          9.2343e-03,  5.9488e-01, -2.6271e-01, -1.7581e-01, -3.1445e-01,
         -4.2634e-02, -6.7231e-01,  6.6590e-02, -2.2665e-01,  4.5569e-01,
          3.2078e-01, -2.7540e-01, -3.1444e-01,  4.1755e-01, -2.3328e-01,
          7.8891e-02,  7.7818e-02,  7.2251e-01, -2.9311e-01, -3.9579e-01,
          1.7508e-01, -9.7158e-01,  1.6472e-01,  1.4817e-02,  1.0432e-01,
          4.1718e-01,  6.0497e-01, -2.7666e-01, -3.1197e-01, -1.9479e-01,
          2.5720e-01, -3.1645e-02,  4.0516e-01,  8.6950e-02,  9.2551e-02,
          6.0643e-01,  6.9953e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0976))
tensor([[ 2.5643e-01,  2.1095e-01,  1.6328e+00, -1.3672e+00,  8.8661e-02,
          2.0760e+00,  1.6633e+00,  2.5415e+00,  8.7215e-01, -1.1790e+00,
          2.2941e+00,  6.4585e-01, -3.7589e-02,  1.8648e-02,  3.0635e-02,
          1.5927e-01, -1.5088e-01,  1.1313e-01,  1.6296e-01, -2.9392e-02,
         -1.7610e-02, -6.4725e-02, -7.6955e-03,  1.3997e-03,  3.5819e-01,
          2.6035e-01,  3.3329e-01, -3.6977e-01, -1.2854e-01,  8.8716e-02,
         -2.3394e-02, -9.3679e-02, -1.9021e-02,  8.7570e-01,  7.2835e-01,
          3.6093e-02,  1.1453e+00,  8.3007e-01, -2.5876e-01,  4.6269e-02,
          6.0662e-01, -1.2846e-01, -2.2654e-01,  1.4298e-01,  1.1895e-01,
         -2.0056e-01,  8.5061e-02,  6.8588e-01, -9.6801e-01, -6.2348e-01,
         -8.7540e-01,  9.7692e-01, -2.4962e-01,  1.5435e-01,  3.0622e-01,
          1.4598e-01,  6.5876e-01,  5.9508e-02, -1.1949e+00,  8.4664e-01,
          1.0793e+00,  6.4072e-01,  9.8282e-01,  1.9190e-01,  9.0975e-01,
         -5.1922e-01,  1.3662e-01, -2.0073e-01,  1.1878e+00, -3.1609e-02,
         -4.3274e-01,  3.2784e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0977))
tensor([[ 0.9001, -0.2279,  2.0917,  1.1585,  0.5821,  0.5237,  0.1808,  0.3031,
         -0.1221,  0.1491,  2.8639, -1.1697,  0.1498,  0.0643, -0.0958,  0.0491,
         -0.0160, -0.0227,  0.2356, -0.3351, -0.0654, -0.2266,  0.0652,  0.0576,
         -0.0128, -0.0415, -0.0642, -0.0037, -0.6276, -0.3156, -0.0096, -0.1583,
          0.6396,  0.0266, -0.0218,  0.0218, -0.0198, -0.0293, -0.1627,  0.0084,
         -0.2720,  0.1283, -0.2015,  0.4515, -0.7812,  0.4399,  0.1570,  0.9186,
          0.1658, -1.2258,  0.7596, -0.5243,  0.8500, -0.4913,  0.2776,  0.6272,
         -0.2105,  0.1848, -0.0341,  0.1354,  0.1338,  0.0984,  0.6703, -0.0499,
          0.0985,  0.3131, -0.1843, -0.1293,  0.8355,  0.2838,  0.0121, -0.2199]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0977))
tensor([[ 0.4383, -0.2033,  0.4744,  0.4478,  0.2233,  1.2708,  0.5679, -0.1777,
          1.2242,  1.2810,  0.0422,  0.2372, -0.3604, -0.0408, -0.1297, -0.0047,
         -0.0128,  0.0741, -0.0270, -0.0485,  0.3901,  0.0273, -0.2911, -0.2657,
         -0.0349,  0.0102, -0.0079, -0.0346,  0.0194,  0.0456,  0.2479, -0.0701,
          0.0187, -0.0177,  0.0549, -0.3838, -0.2567,  0.1674,  0.2935,  0.4318,
         -0.1408,  0.3446,  1.0163, -0.2802,  0.1646, -1.1025,  0.1852, -0.1508,
         -0.5526,  0.8751, -0.2927,  0.1996, -0.7890,  0.0458,  0.1746,  0.0723,
         -0.5407, -0.0099,  0.0624,  0.0427, -0.0333,  0.3848, -0.1728, -0.2133,
         -0.3348,  0.4645, -0.0396,  0.3189, -0.0716,  0.3299,  1.0163, -0.5437]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0978))
tensor([[ 0.9731, -0.2478,  0.1628,  0.1971,  0.1717,  0.3580,  1.6310, -1.6678,
          0.7928, -1.2451,  1.3301,  0.3519,  0.0088,  0.0842,  0.3118,  0.0488,
          0.3826,  0.1989, -0.0302, -0.6539, -0.1315,  0.0029,  0.0845, -0.0103,
         -0.1377,  0.1034,  0.1272,  0.1859, -0.0160,  0.0202, -0.0215,  0.0571,
         -0.0226,  0.0257, -0.0696, -0.0127,  0.2280, -0.4069,  0.0023,  0.1641,
          0.5967,  0.0360,  0.9615, -1.2809, -0.0026,  0.6479, -0.6394,  1.1044,
         -0.5922, -0.3801, -1.3391,  0.6804, -0.0742,  0.0565,  0.6562, -0.8207,
         -0.2633,  0.2029,  0.0925,  0.1301, -0.4554,  0.5361, -0.0290, -0.4666,
         -0.7247, -0.0054,  0.3551,  0.0649,  0.5807,  0.7187, -0.6776, -0.1395]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0978))
tensor([[ 0.9298, -1.3919,  2.0897,  1.7010, -0.8238, -0.3795,  0.9359, -1.3479,
          1.2016, -1.2819,  0.3609,  1.6154,  0.3161, -0.0919,  0.0733, -0.1996,
         -0.1319, -0.1930,  0.2293, -0.0424, -0.1682, -0.2824, -0.1650, -0.1723,
         -0.2200, -0.0228, -0.1769,  0.0332, -0.5884, -0.3443,  0.0258, -0.0139,
          0.1399, -0.1412, -0.0255, -0.0632, -0.3196,  0.4345, -0.0245, -0.0154,
         -0.1593,  0.0096, -0.3980,  1.0945, -0.3763, -0.0247, -0.3055,  1.5264,
         -1.4041,  0.3191,  1.3546, -0.5842,  0.2348,  0.2481, -0.0496, -0.5058,
          0.0285, -0.1212,  0.0475, -0.0412, -0.1459,  0.2397, -0.5236,  0.0189,
         -0.6007,  0.0847,  0.6653, -0.0841,  1.7817, -0.9584, -0.8525,  0.1837]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0984))
tensor([[ 4.1301e-01,  1.3871e-01,  2.2572e+00,  2.5342e+00,  2.7182e+00,
          8.5253e-01,  5.2779e-02,  8.8715e-01,  2.2087e-01, -7.1267e-02,
          1.1322e+00,  1.8089e+00,  3.1747e-03, -3.4261e-02, -8.1737e-02,
          1.1174e-01, -7.4153e-02, -1.0752e-01,  2.5279e-01, -2.9211e-02,
          2.7600e-02, -5.8139e-01, -5.5543e-02,  1.7994e-03,  2.2629e-02,
         -3.9038e-02, -5.3582e-01, -1.7977e-01,  1.4256e-01, -8.4871e-01,
          6.0124e-01,  1.0832e-01, -3.9052e-01, -4.2036e-01, -4.8505e-02,
         -4.4342e-01, -4.4049e-02, -1.3642e-01, -7.9567e-03, -5.1779e-02,
         -4.0185e-01,  1.8538e-01, -2.0219e-01,  1.4258e-01,  1.2839e-01,
         -4.5083e-02,  3.5462e-02,  1.6865e-02, -4.2780e-02,  1.0216e+00,
          3.5143e-01,  4.8313e-01,  2.7055e-01,  4.9768e-01,  1.5091e-01,
         -1.3262e+00,  6.1050e-01,  4.7127e-01,  1.2091e-01, -4.7104e-01,
         -1.2873e-01,  9.9998e-02, -3.9907e-01, -1.3239e-01,  4.4086e-04,
          4.3772e-03, -3.1721e-01,  2.9274e-01,  5.3279e-01,  7.4282e-02,
          3.2326e-01, -9.5111e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0985))
tensor([[ 1.7275e-01, -8.6516e-01,  6.1147e-02,  1.1937e-01,  9.3330e-01,
         -7.7927e-02,  1.2135e+00, -9.9770e-01,  2.5395e-01, -3.4238e-01,
          1.8571e+00,  1.3991e+00,  6.8040e-02,  3.5473e-01, -9.3327e-02,
         -2.5437e-01, -2.6072e-01, -1.0179e-01,  1.8198e-01,  1.5478e-01,
          1.7840e-01,  1.4182e-03, -2.0585e-03, -1.1115e-02, -7.8372e-03,
         -6.5003e-02, -1.8921e-01, -1.4602e-01,  1.7132e-02,  2.5104e-02,
          3.1297e-02, -6.4230e-02,  5.6031e-02, -1.6485e-02, -7.5999e-02,
         -1.1171e-01,  1.2536e-01,  1.6686e-01, -5.9752e-01,  2.3927e-01,
         -9.9940e-01,  1.2634e-01,  2.4066e-01,  8.0046e-03, -3.0586e-01,
          7.3436e-01, -4.8658e-01, -2.2927e-01,  8.9853e-02,  2.4387e-01,
         -3.0801e-02,  3.6340e-02, -5.1755e-01,  1.3463e-01,  4.6064e-02,
         -5.3835e-02,  2.2844e-02,  1.5647e-02,  4.0861e-01,  1.6819e-01,
         -9.9539e-02,  3.5779e-01, -6.8525e-02, -4.2480e-01,  7.0526e-01,
          3.7200e-01, -5.0873e-01, -2.6326e-02,  3.5612e-01,  9.2985e-01,
         -1.2422e+00, -3.6378e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0985))
tensor([[ 1.0730, -0.6989,  1.0051,  0.7076,  0.2256,  0.5257,  0.3964,  0.9198,
          0.5168, -0.6235,  0.7831,  0.8996, -0.1655,  0.0063, -0.0319, -0.2137,
         -0.1551,  0.2027, -0.2323, -0.0735,  0.1927,  0.0472, -0.0884,  0.1398,
         -0.1637,  0.1247,  0.2385,  0.0045,  0.2424,  0.3043, -0.0160, -0.0640,
          0.0073,  0.3769,  0.4738, -0.1704,  0.2123,  0.5396, -0.1635,  0.0101,
          0.6421, -0.0317, -0.2827,  0.3411,  0.3434,  0.1401, -0.1857,  0.3100,
         -0.0986,  0.6568, -0.2263,  0.0622, -0.1653,  0.1294,  0.0363,  0.1091,
          1.0936, -0.7208, -0.8073, -0.5835,  0.2055,  0.0476,  0.1399,  0.3901,
          0.3464, -0.3423,  0.4655, -0.1627,  0.1295,  0.6324, -0.6304,  0.1949]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0986))
tensor([[-1.2895e-02, -2.3000e-01,  1.5049e+00, -7.9755e-01,  1.8468e-01,
          8.7604e-01,  6.9794e-01,  6.3687e-01,  1.6549e+00,  1.5274e+00,
          3.8412e-01,  9.4073e-01,  1.1242e-01, -2.7819e-02, -3.3616e-02,
         -1.3713e-01,  1.5880e-01, -8.1015e-02, -3.5004e-02,  1.8274e-03,
          1.4632e-01,  6.0310e-01, -4.1094e-02,  6.0584e-03,  1.6554e-03,
          1.2893e-01, -7.9747e-02, -1.2871e-01, -4.6626e-01, -6.2298e-01,
         -1.8486e-02,  1.3180e-01, -6.3699e-02,  1.5939e-01, -3.9628e-01,
          3.6846e-01, -2.3319e-01, -1.4812e-03, -2.7417e-01, -4.2731e-01,
         -3.5059e-02, -7.8516e-01, -4.1453e-01,  1.2229e-01,  1.2161e-01,
         -1.5871e-01, -4.5055e-02,  1.4872e+00, -5.3603e-01,  7.5114e-02,
         -1.6090e+00,  1.7894e-01, -4.3071e-02,  3.6668e-02,  6.2962e-01,
         -4.6086e-02,  2.4541e-01,  4.7439e-02, -5.0082e-01, -5.2966e-01,
          6.9574e-01, -2.7328e-01,  6.9980e-02,  7.7456e-02,  6.9041e-01,
         -2.3514e-01,  9.1807e-01, -1.4234e-01, -2.1666e-01,  1.6348e-01,
          1.1449e+00,  2.8965e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0986))
tensor([[ 0.5084, -0.2227,  0.4446, -0.4835,  0.1236, -0.4140,  0.3224, -1.1987,
         -0.1353, -0.0999,  1.7087, -0.7722,  0.1149,  0.0304, -0.1374,  0.0268,
         -0.0381, -0.1818,  0.0710, -0.7502, -0.0809,  0.0574, -0.0900,  0.0733,
         -0.0367, -0.0687,  0.0058,  0.0223, -0.0901, -0.0721,  0.0290, -0.0611,
         -0.0732, -0.0224,  0.0571, -0.0525,  0.3654, -0.4089, -0.0903, -0.0559,
          0.3651, -0.2115,  0.7173, -0.3595, -0.9420,  0.9222, -0.1420,  1.2390,
         -0.7644, -0.2669, -1.3026,  0.5679, -0.2979,  0.2264, -0.6448,  0.4770,
          0.1099,  0.0675,  0.0017,  0.0143,  0.8913, -0.4287, -0.0531, -0.1067,
         -0.1286,  0.2278,  0.1885,  0.1439, -0.5879,  0.4450,  0.0737,  0.2133]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0990))
tensor([[ 5.6323e-01,  4.5902e-01,  1.0413e+00,  9.8761e-01,  2.2975e+00,
          6.0184e-01,  1.6643e-01,  1.0611e-01,  1.7576e+00, -1.9246e+00,
         -3.7514e-01,  1.9165e+00,  3.7116e-03,  2.0316e-01,  2.0455e-01,
         -1.8914e-01,  1.0177e-01, -1.4521e-02, -2.1416e-02, -8.1017e-03,
          2.4242e-02, -3.9925e-01,  2.1594e-02, -1.2177e-02, -5.3619e-02,
         -4.2990e-02, -2.6744e-02, -2.8906e-02,  3.4112e-04, -3.7981e-01,
          9.3928e-01,  3.5988e-01, -9.9383e-02,  4.8480e-02, -3.0404e-01,
         -3.5348e-01,  2.0188e-01, -1.4377e-02, -8.6717e-01,  5.2377e-01,
         -1.9722e-01, -2.3711e-01, -3.7086e-01,  1.8587e-01,  1.0617e-01,
         -2.0807e-01,  4.4151e-02, -4.1161e-02,  2.7457e-01,  3.2243e-01,
         -4.4161e-02,  2.6912e-01,  9.5550e-01,  2.6390e-02,  6.4557e-01,
         -5.8623e-01,  1.8738e-01, -8.8936e-02, -3.8473e-01,  2.7586e-01,
         -3.9833e-01, -2.3727e-01,  4.9635e-02, -1.7645e-02,  4.3070e-01,
          5.9671e-01, -4.3092e-01, -1.2638e-01,  2.5051e-01,  4.1311e-01,
          4.4411e-01,  1.4192e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0992))
tensor([[ 2.1145e+00, -2.7055e+00,  1.6383e+00, -1.5344e+00,  1.3411e-01,
          2.8960e+00, -4.3849e-01, -8.5215e-01,  1.5705e+00,  1.9960e+00,
          1.4461e+00,  2.2943e+00, -6.5164e-01,  2.0884e-02, -1.0039e-02,
          1.4320e-01,  5.5992e-06,  3.9512e-01, -5.1434e-01,  6.2814e-02,
          9.0454e-01, -1.4852e-01,  5.9960e-02, -2.2008e-01, -4.0452e-01,
         -3.7665e-01,  4.8206e-01, -4.9879e-01,  4.1935e-02,  1.3085e-01,
         -2.5505e-02,  3.9630e-02, -7.0702e-02, -9.7337e-02,  9.1129e-01,
         -8.6118e-01,  3.4945e-02, -6.0145e-02, -8.7185e-02,  7.4635e-02,
          7.4296e-02,  9.6183e-02,  1.1835e-01, -4.1533e-02,  1.2281e+00,
         -5.3508e-01, -5.3192e-01, -3.2157e-01, -3.1210e-01,  1.3491e+00,
          1.9355e-01, -4.2705e-01, -2.3224e-01,  1.4054e-01,  3.7173e-02,
          3.0542e-02,  1.1539e-01, -3.7551e-01, -8.2192e-01, -7.3224e-01,
          3.8356e-01,  2.1599e-01,  4.4348e-01, -1.9899e-01,  7.3387e-01,
         -1.1257e+00,  8.1821e-01, -1.0402e+00, -6.9062e-01,  1.1476e-01,
          7.1775e-01, -9.2478e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0992))
tensor([[ 1.5233,  0.2341,  0.3124, -0.3978,  0.6096,  1.4267,  1.3575, -1.0515,
          0.2422,  0.0579,  3.3433,  0.3687, -0.0598, -0.0244,  0.0133,  0.3436,
         -0.1171, -0.5237, -0.1318,  0.0179, -0.1476,  0.1370,  0.0690, -0.0148,
         -0.0578,  0.1549, -0.0359,  0.0071,  0.1426,  0.1385, -0.0223,  0.0791,
          0.1126, -0.2852, -0.4590,  0.0115,  0.4415, -0.3367,  0.0083, -0.0060,
          0.1889, -0.0301, -0.2391, -0.6252,  1.2619,  0.1127,  0.0575, -0.1595,
          0.0200, -0.0164, -0.0780, -0.0749, -0.0436,  0.0479,  0.0220, -0.0140,
         -0.1558,  0.1760,  0.3500, -0.0837,  0.6734,  0.5306, -0.5749, -0.0537,
          1.7097, -1.3402,  0.2216, -0.0435, -0.6674,  0.0881, -0.0642,  0.1278]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0993))
tensor([[ 1.1625, -0.9433,  0.1926, -0.6696,  2.1668,  0.1361,  1.9046, -0.2439,
          1.2612,  1.2930,  0.1018,  0.5776, -0.0124,  0.2572, -0.0874,  0.1253,
          0.1404,  0.1479, -0.1309, -0.4106,  0.0189,  0.0695, -0.0692,  0.0468,
          0.2180,  0.3425, -0.1579,  0.1667,  0.0079,  0.1619, -0.0163, -0.7605,
          0.1040, -0.0219,  0.0649, -0.0292, -0.3870,  0.1466,  0.5621,  0.6586,
         -0.0441,  0.4526,  0.4186, -0.2936, -0.5424,  1.4053, -0.4596, -0.6108,
          0.3972, -0.2006,  0.1489,  0.0027,  1.9710, -1.4840, -1.0378,  0.1162,
         -0.1136,  0.0802,  0.0434,  0.0159,  0.6208,  0.1860, -0.0168, -0.2860,
         -0.0095,  0.3864,  0.0284,  0.6014, -0.0749,  0.3389,  0.2459,  0.4880]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0994))
tensor([[ 4.6707e-02,  4.1561e-02,  1.2572e+00, -2.2791e-02,  6.7546e-02,
          2.7978e-01, -5.9238e-01,  2.8547e-01,  2.5547e+00, -1.5507e+00,
         -6.0226e-02,  9.9865e-01,  2.9380e-02,  8.1275e-02, -1.1339e-01,
         -1.4413e-01,  6.4358e-02, -2.3051e-04,  8.1033e-02, -4.8922e-01,
         -4.3759e-02, -2.1398e-01,  6.4186e-02, -8.9739e-02, -4.4067e-01,
          1.6001e-02,  3.7500e-01,  2.6648e-01,  1.2174e-02, -2.4028e-01,
         -1.2486e-02,  1.5604e-01,  2.7919e-02,  2.9051e-02, -4.0623e-02,
         -3.1924e-02,  1.2171e-02, -1.4521e-02,  5.8227e-01, -6.1912e-01,
         -1.4331e-02,  6.3926e-01,  2.0571e-01, -4.4952e-01, -4.4887e-01,
          8.1332e-02,  3.0774e-01, -5.9864e-01,  4.6767e-01,  1.8471e-01,
          1.2581e-01,  1.3148e-01,  9.5442e-01, -4.6589e-01,  2.7894e-01,
         -2.1402e-02, -2.1115e-01,  1.8284e-01, -3.9969e-01,  7.0259e-01,
          4.5502e-01,  1.3999e-01, -1.7319e-01, -6.2011e-02,  2.6353e-02,
          6.5007e-01, -5.9073e-01, -2.7589e-01, -2.9337e-02,  1.0227e-01,
          2.6605e-01,  3.2646e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0995))
tensor([[ 1.3299e+00, -1.9442e+00,  4.8634e-01, -5.0287e-01,  1.0652e+00,
          9.7546e-02,  1.9945e+00, -1.6390e+00, -2.1805e-01, -8.7243e-02,
          1.0251e+00, -1.6956e-01,  7.2931e-01,  9.5793e-04, -3.9923e-03,
         -8.3785e-02,  6.8429e-02,  5.3858e-02,  6.4107e-02, -3.9262e-01,
         -8.7126e-01,  5.2981e-01,  1.2688e-02, -5.4121e-02, -9.8448e-03,
         -4.3596e-03, -4.9986e-02,  1.4409e-02, -1.7934e-01, -4.9806e-01,
          7.3278e-02, -7.5389e-01, -5.1751e-01, -5.5341e-02, -2.1842e-02,
          4.4545e-02, -2.1784e-01,  1.4311e-01, -1.2752e-01, -6.8373e-02,
         -1.1864e-01, -6.6369e-02,  7.3505e-01,  3.3595e-01,  3.5672e-01,
         -5.3988e-01, -5.5311e-01,  8.1534e-01, -8.8878e-01,  1.1607e+00,
         -8.8971e-01, -3.0349e-03,  3.8902e-01, -3.0196e-01, -7.4194e-01,
          4.9724e-01, -3.4476e-01,  2.1974e-01,  1.2245e-01,  8.3458e-03,
          9.8694e-01, -5.9352e-01, -5.5723e-01,  4.0676e-01, -2.5995e-01,
          8.8268e-02,  2.1345e-02, -5.0194e-02,  3.0058e-01, -2.0920e-01,
         -5.5534e-02,  3.7894e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.0996))
tensor([[ 9.4646e-02, -1.5481e-02,  1.5319e+00,  1.1399e+00, -7.9114e-01,
          5.1942e-01,  4.2175e-02, -4.9984e-01,  1.9248e-04, -8.6423e-02,
          1.4928e+00,  1.3953e+00, -1.9680e-02, -3.9184e-02,  2.9839e-02,
          2.0421e-03, -1.6120e-02, -9.8226e-02,  4.5780e-02,  3.2520e-02,
          2.9288e-03,  1.3293e-01, -4.1048e-01, -2.4468e-01,  2.3807e-01,
         -1.3019e-01,  1.3059e-02, -3.6167e-01, -5.9282e-01,  1.6341e-01,
          2.1649e-01, -7.0845e-02, -3.5086e-02,  2.1005e-02, -1.0282e-03,
         -4.0237e-02, -6.6604e-03,  1.0168e-01,  2.7569e-02, -1.7753e-02,
         -4.5481e-01, -4.8697e-01, -3.2079e-02, -5.1227e-01,  5.7981e-01,
          1.6905e-01, -8.6543e-02,  3.0588e-02, -4.5807e-01, -5.8924e-01,
          8.8106e-03, -4.1921e-01,  4.8868e-01, -4.4597e-01, -2.7034e-01,
         -8.4555e-01, -3.1224e-01,  1.8817e-01, -1.4582e-02,  5.8405e-02,
         -1.5118e-01,  1.6798e-01,  2.9360e-01, -2.1014e-02, -3.1645e-02,
          1.6390e-01,  6.5950e-03,  7.0794e-02,  2.1412e-01,  8.9040e-01,
         -4.4454e-01,  3.7853e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1000))
tensor([[ 0.9989,  0.2620, -0.2981,  0.0406,  0.4816,  0.2480,  1.8423, -1.3596,
          0.3831, -0.3806,  0.1397,  1.6162, -0.2141, -0.0784,  0.1702,  0.1596,
         -0.3622, -0.1414, -0.1170,  0.1391,  0.1979, -0.0571, -0.0403, -0.0205,
          0.0204,  0.0454, -0.1265, -0.1936,  0.0439,  0.0946,  0.4622,  0.2848,
         -0.2218, -0.0252,  0.0326, -0.0092, -0.2926,  0.2919, -0.0117, -0.0575,
          0.0347,  0.2518, -0.2112,  0.0604,  0.0547, -0.3480, -0.0133,  0.8813,
         -0.1806, -0.3476, -0.7148,  0.6540,  0.5062,  0.1678, -1.1076, -0.2337,
         -0.2489,  0.1514, -0.0355,  0.0049,  0.0535,  0.3109,  0.4798, -0.5554,
         -0.1140,  0.0750,  0.0980, -0.0823, -0.1058,  0.0357, -0.4619,  0.4667]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1001))
tensor([[ 1.8354e+00, -7.0527e-01,  1.8249e+00, -2.3147e+00,  1.0149e+00,
          2.4427e-01,  9.6337e-01,  1.2069e+00, -1.5527e-02,  1.1621e-01,
          1.7627e+00,  1.9721e-01, -1.5581e-01,  1.0217e-01, -1.0499e-01,
          9.3992e-02,  3.1295e-02,  2.8020e-01, -9.7225e-02,  2.5176e-01,
          7.4460e-01, -6.3548e-01, -6.8704e-02,  5.8023e-02,  6.2476e-02,
          3.7319e-02,  2.7500e-02,  6.8927e-02, -3.9006e-02,  7.6105e-01,
         -2.3056e-02,  3.4663e-01, -9.4235e-01,  2.5202e-02, -1.7700e-02,
          4.0565e-03,  3.2492e-01,  3.9488e-01, -9.2684e-03,  2.5231e-02,
          2.3444e-01,  1.4135e-02,  4.8124e-01,  1.4613e+00, -3.5269e-01,
          4.0101e-01, -3.7416e-02,  2.0516e-01,  6.8776e-01,  7.2937e-01,
         -7.2456e-02, -9.1120e-01,  2.1455e+00, -1.2891e+00, -1.1876e+00,
         -1.0060e+00, -2.1146e-01,  1.8016e-01, -1.5544e-03,  2.6023e-02,
         -3.2270e-01,  2.8883e-01,  9.5370e-02,  2.9009e-03, -8.9333e-02,
          8.1031e-02, -6.6535e-03,  2.8864e-02,  7.4885e-02, -4.3590e-01,
         -1.8885e-01,  1.8061e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1002))
tensor([[ 9.5356e-02,  9.9577e-02, -4.3163e-01, -4.2947e-01,  1.7837e+00,
         -1.9316e-01,  2.4496e+00, -7.8031e-01,  1.6114e+00, -1.1732e+00,
          2.4085e+00,  9.8140e-02,  1.4196e-03, -2.2295e-02,  1.0516e-02,
         -3.0367e-02,  3.0656e-02, -2.2025e-02,  1.4258e-01,  2.4325e-03,
          2.5028e-02,  9.0727e-02, -2.4870e-02, -3.7549e-03, -1.0680e-01,
          8.1334e-02,  9.1385e-03,  7.9159e-02,  1.0212e-02,  1.0940e-01,
          6.2666e-01, -5.8446e-03, -7.7187e-03, -1.2419e-01,  3.4928e-01,
          2.0704e-01, -2.5188e-01,  6.4991e-01, -5.5862e-01,  1.9821e-01,
         -3.5943e-02, -5.3702e-02, -2.4975e-01,  2.0773e-01,  1.5212e-01,
          3.0055e-02,  9.9757e-03, -2.3223e-01,  5.8341e-03,  5.8961e-02,
         -1.7403e-01, -2.0441e-02,  3.0383e-01,  1.0141e+00, -1.5080e+00,
         -7.5185e-01,  6.5159e-02, -1.8096e-01, -8.4922e-03, -7.6238e-04,
          9.6580e-01, -6.2158e-02,  1.1470e+00, -1.0464e+00,  1.7147e+00,
         -6.3688e-01, -5.4437e-01, -8.2352e-02,  1.0499e+00, -3.4454e-01,
          3.9346e-01,  3.9912e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1002))
tensor([[ 5.8393e-01, -4.0016e-01,  1.9638e+00,  1.7795e+00,  1.1798e-01,
          1.5974e+00,  1.3117e+00,  1.6094e+00,  1.5234e+00, -4.5489e-01,
          8.8700e-01,  5.4734e-01, -9.8339e-02,  5.8962e-03,  4.8392e-02,
          2.6711e-01,  1.6461e-01, -4.2161e-02,  1.5628e-01,  5.2753e-02,
          1.7456e-01, -2.4133e-02,  2.3714e-01,  3.2292e-01,  2.8305e-01,
         -1.9301e-01,  2.5763e-01,  2.4699e-01, -8.7999e-02, -2.2788e-05,
         -9.8622e-02, -5.4656e-02,  1.0585e-03,  1.7865e-01,  7.4617e-01,
          4.5410e-01,  9.7969e-01,  4.3173e-01, -6.4329e-02,  8.3726e-02,
          1.6997e-01, -5.7424e-02, -2.4057e-01,  2.6484e-01,  3.3769e-01,
         -5.4040e-02, -1.2244e-01, -9.9725e-01,  1.0658e-01,  6.3732e-02,
         -9.0166e-01,  7.4733e-03, -4.4731e-01,  1.4306e-01, -4.4503e-01,
         -5.7781e-01,  1.3094e+00, -4.0604e-01,  7.7532e-01, -4.6581e-01,
          3.8398e-01,  7.9303e-01, -4.7484e-01,  3.7745e-01,  3.1682e-01,
         -5.7990e-01, -5.1173e-01,  5.7830e-01,  1.5750e+00, -7.0097e-01,
          2.5232e-01, -2.7198e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1003))
tensor([[ 1.5311e+00, -8.5713e-01,  1.5713e+00,  1.4598e+00,  1.3332e+00,
          9.7076e-01, -2.1251e-01,  1.8501e-01,  1.0359e+00,  1.7516e+00,
          1.0989e-02,  1.8230e+00,  7.6103e-01, -3.0956e-01, -2.6439e-02,
          4.0245e-04,  8.0392e-02, -1.4211e-02, -1.1408e-02,  2.0387e-01,
         -2.8645e-01, -2.2464e-02,  8.7936e-03, -1.1185e-01, -4.6050e-01,
          4.5684e-01, -5.3062e-01, -6.5695e-01,  7.6501e-02, -8.1660e-04,
         -2.0737e-01, -1.8654e-02, -5.4346e-02, -1.5289e-01,  4.4875e-01,
         -2.7694e-01, -9.6660e-02,  4.8320e-02,  1.5882e-02,  1.1890e-01,
         -5.4033e-02,  2.5252e-01,  7.4641e-01, -5.2784e-01,  1.3146e+00,
         -1.1000e+00, -6.9330e-02, -8.0858e-01,  4.9904e-02,  7.3311e-02,
         -6.9686e-01, -1.8696e-02, -4.5331e-01,  5.1148e-01, -2.9630e-01,
          1.2870e-01, -3.5950e-01, -3.0653e-01,  2.0331e-01,  2.0522e-01,
         -3.4192e-01,  1.2692e-01, -1.2863e-01,  1.1751e-01,  1.2561e+00,
         -5.3026e-01,  5.5411e-01, -1.7744e-01, -1.7284e-01,  6.7532e-02,
          2.3935e-01,  4.7909e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1004))
tensor([[ 1.4397e+00,  1.0635e+00,  9.7282e-01, -7.2483e-01,  2.3216e+00,
          4.9681e-01,  1.0879e+00, -1.4110e-01,  2.2539e-01,  1.5504e-01,
          2.6402e+00,  1.8688e+00,  3.4052e-01, -1.5230e-01, -7.3844e-02,
         -3.7509e-01,  3.3954e-01,  2.3507e-01,  3.8532e-01,  1.0733e-02,
          3.7131e-01, -1.2985e-01,  1.0391e-01, -1.3727e-01,  1.5076e-02,
          4.3859e-02, -4.4594e-01,  3.9780e-01,  2.7192e-03,  1.0666e-01,
         -1.1485e+00,  9.8223e-02,  5.7151e-03,  3.1055e-02,  4.6140e-02,
          2.1981e-02,  4.7357e-01,  5.7279e-01, -2.4276e-02,  2.5573e-03,
          6.4873e-01,  6.2888e-02,  6.3961e-02,  2.4488e-01,  2.7531e-01,
          4.0422e-01,  7.1408e-02, -4.4729e-01,  2.2191e-01,  3.8822e-01,
          2.3791e-01, -1.6589e-01,  6.6876e-01,  9.3790e-01, -7.0249e-01,
         -5.8520e-01, -6.6920e-02,  1.0275e-01,  5.7454e-02, -7.3836e-01,
          9.4570e-01, -1.4246e-02,  9.2387e-01,  2.7196e-01,  1.2333e-02,
          1.5133e-02, -1.6262e-01,  4.2489e-02, -8.6597e-01,  5.9119e-01,
         -8.3870e-01,  2.2169e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1005))
tensor([[ 2.3632e-01, -1.7610e-02,  3.4807e-01, -3.0726e-01,  1.7457e+00,
          1.8762e+00,  5.0145e-01,  7.9314e-01,  1.1618e+00, -4.9547e-01,
          8.8319e-01,  2.5605e-01,  4.5634e-03, -2.9815e-01, -1.1548e-01,
         -2.9854e-02,  8.7903e-02, -1.5594e-01,  9.1448e-02,  6.5218e-02,
         -2.7594e-02, -2.1114e-01, -7.4615e-03,  8.9996e-04,  3.3720e-01,
          2.9260e-01,  1.6352e-01, -1.9734e-01,  3.7636e-02,  1.9136e-01,
          1.1641e-01,  6.1243e-01, -5.3719e-01,  8.7912e-01,  4.0688e-02,
         -4.3843e-02, -4.6308e-02, -1.4583e-01,  6.6231e-02, -3.5605e-02,
         -7.4107e-01,  4.4509e-04, -3.3156e-01,  2.8762e-01,  1.0395e-01,
          9.5574e-03, -4.4327e-02, -3.2734e-02,  2.4179e-01,  2.9474e-01,
         -4.3629e-02, -2.0196e-01,  1.3763e+00, -8.4797e-01, -5.9843e-01,
         -9.9326e-01, -3.0429e-01,  6.2739e-01,  2.3840e-01, -7.0715e-01,
          3.9927e-01, -2.0784e-01,  6.2648e-01, -2.7789e-01, -3.4790e-01,
          8.9493e-02,  3.2962e-01, -1.2600e-01,  1.0415e+00,  2.7670e-01,
         -1.7293e-01,  9.6236e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1005))
tensor([[ 0.6338, -0.4827,  1.9700,  0.1832,  0.1708,  0.6479,  0.0751, -0.1958,
          2.3024,  1.7616, -0.6244,  0.0965, -0.0945,  0.1951, -0.2056, -0.0746,
         -0.0751, -0.0112, -0.0608, -0.2148,  0.0835,  0.1486, -0.1690, -0.0420,
          0.3904,  0.0112,  0.1177,  0.0943, -0.0772, -0.6652, -0.1133, -0.0179,
         -0.0161,  0.0312, -0.4573,  0.3252,  0.0471,  0.0710, -0.4696, -0.3076,
          0.1820, -0.2277,  0.2346, -0.4163,  0.3196,  0.5769, -0.3430, -0.0866,
          1.0397, -0.0147, -0.0571,  0.0742, -0.3572,  0.0264, -0.0925, -0.2726,
         -0.0692,  0.0343,  0.4025,  0.2573, -0.2196,  0.2191, -0.1772,  0.0159,
          1.2076, -0.1839,  0.8189, -0.5617, -0.2926, -0.0379,  1.2457, -0.5376]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1005))
tensor([[ 1.8540e-01,  4.2917e-01,  3.0531e+00, -1.0941e+00,  2.9112e-01,
          6.5094e-01,  5.4710e-01, -8.3710e-02,  2.7637e+00, -3.7689e-01,
          1.8348e-01,  7.6396e-01, -5.9924e-02, -4.6017e-02, -4.4056e-02,
          1.0361e-01, -1.2567e-01,  7.6326e-02,  6.9570e-02,  1.1343e-02,
          8.9116e-02, -1.1620e+00,  8.8361e-02,  6.7570e-02,  1.4843e-01,
          3.6476e-02, -8.7172e-02,  2.3625e-01, -1.0461e-01,  1.6776e-01,
         -2.4009e-02, -2.3059e-04,  1.4973e-02,  2.5825e-01, -3.4794e-01,
         -2.4478e-01,  3.1461e-01,  1.6325e-01, -5.6867e-01,  4.5892e-02,
          6.9836e-02,  6.6971e-02, -1.4676e-01,  7.8618e-02,  2.8350e-02,
         -1.3945e-01,  1.4423e-01,  1.3265e+00,  1.4867e+00,  2.1708e-02,
          9.2150e-01, -7.3117e-01, -2.4655e-01,  1.6224e-01,  3.3117e-01,
          1.5457e-01, -3.3731e-01, -2.4317e-01,  3.0635e-01, -2.7621e-01,
         -4.3125e-01,  1.8048e-01, -2.8518e-01,  6.3365e-02,  5.3999e-01,
          2.5740e-01, -7.6778e-01,  3.1496e-01, -3.2703e-02, -2.8317e-02,
          1.2076e-01,  5.0564e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1006))
tensor([[ 0.0630,  0.3604,  2.2404, -1.7347,  0.6117,  2.7690,  0.6412, -0.0060,
          1.1313, -0.5475,  0.5875,  1.3603, -0.1550,  0.0722,  0.0170, -0.1087,
          0.0602, -0.0358, -0.0393, -0.0119, -0.4319, -0.3353,  0.0576,  0.0343,
          0.2396,  0.4786,  0.0405,  0.0520,  0.2918,  0.3206, -0.0299, -0.0364,
          0.0042,  0.7459,  0.3827,  0.2702,  0.0298, -0.0197,  0.3571, -0.3606,
         -0.0384,  0.3370,  0.0284, -0.0318,  0.5272,  0.4625,  0.2039,  0.6725,
         -0.4972,  0.2954, -0.4916,  0.0254, -0.3158,  0.1696,  0.0209,  0.1132,
          0.4916,  0.7254,  0.3428, -0.3972, -0.1013,  0.1349, -0.0179, -0.0253,
          0.5362, -0.3060, -0.6691,  0.2163, -0.2984,  0.1392,  0.2226,  0.0992]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1006))
tensor([[ 3.1261e+00, -3.0108e+00,  9.5266e-01,  5.7084e-01,  6.0195e-02,
          1.3672e-01,  2.0853e+00,  1.7273e-01,  2.9437e-01, -6.8576e-02,
          8.4227e-01,  1.2625e-01,  2.1015e-02, -2.0576e-03,  1.9018e-02,
         -7.9594e-01, -7.7232e-01, -1.6230e-01,  2.0033e-01, -2.8614e-01,
         -3.8997e-02,  5.1675e-01, -1.6792e-01, -2.1990e-01,  5.4129e-02,
         -1.4308e-02, -1.7068e-02, -2.2305e-02, -2.3176e-02, -3.5574e-01,
         -2.1276e-02, -3.9089e-02,  1.2460e-02, -2.9141e-01, -5.4841e-02,
          4.9150e-02, -1.1366e-01, -1.8607e-01,  1.0967e-02, -2.2478e-02,
         -5.4314e-01, -6.0498e-03,  7.6402e-01, -3.4984e-01, -6.4475e-01,
         -8.2251e-01,  5.4856e-01, -4.8957e-01, -9.1872e-02,  7.8265e-01,
         -9.8875e-01, -2.5370e-01, -4.0619e-02,  5.8344e-02,  1.4967e-01,
          3.3565e-01,  1.4229e-01, -4.6183e-02,  4.0594e-02,  5.4290e-02,
         -6.7146e-01,  3.2356e-01,  3.8497e-01,  4.6464e-01, -2.4342e-01,
          1.6686e-01,  8.8431e-03, -3.6056e-02,  1.8868e-01,  5.0778e-01,
         -2.0396e-01,  1.6135e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1006))
tensor([[ 0.2234, -0.1130,  2.7596, -0.8360,  0.4708,  0.3168,  1.1055,  0.4470,
          0.1310, -0.1128, -0.5373,  0.0066,  0.0034,  0.0125, -0.0533,  0.1281,
         -0.0146, -0.0461,  0.1375,  0.0553, -0.0212, -0.4704,  0.2110,  0.2286,
         -0.0324, -0.1377, -0.1551,  0.4890, -0.1697,  0.6241, -0.1063, -0.3873,
          0.2416,  0.0263,  0.0183, -0.0181,  0.5232,  0.0381, -0.0236, -0.0086,
         -0.0556,  0.2060, -0.2042,  0.1499,  0.1414,  0.2068, -0.1315,  1.7781,
          0.8947, -1.2987, -2.0133,  0.9636,  0.0696,  0.0608, -0.4398, -0.2558,
         -0.1687,  0.1571, -0.0782, -0.2775,  2.0194, -0.6282,  1.2074, -1.0914,
         -0.2516,  0.1456,  0.1672, -0.0524,  1.1375, -0.8515, -0.8553,  0.0375]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1008))
tensor([[ 0.2756, -0.0486,  1.6712, -0.1785,  2.0215,  1.9413,  0.1375, -0.5018,
          0.9651,  0.3947,  0.1623,  0.8664, -0.0218,  0.0201,  0.1251,  0.0044,
         -0.0040, -0.0130, -0.0175, -0.0246, -0.0022, -0.3927,  0.2807, -0.1911,
         -0.1856, -0.2295,  0.1708, -0.0935,  0.0570, -0.2448, -0.0865, -0.4717,
         -0.7264,  0.2569, -0.4457,  0.3267,  0.3006, -0.0259, -0.0503, -0.0911,
          0.2317, -0.0733, -0.0962,  0.0898,  0.0971, -0.0562,  0.0434, -0.2974,
          0.3271,  0.3269,  0.5736,  0.5145,  1.9489, -0.6821, -0.8239, -0.5931,
          0.0823,  0.2639,  0.7788,  0.4117, -0.2127, -0.0529, -0.3491,  0.2129,
          0.8725, -0.6472,  0.7951, -0.6894,  0.3164, -0.4060,  0.3638, -0.3933]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1008))
tensor([[ 1.8502,  1.9904,  1.5864,  1.2678, -0.0890,  0.2039,  1.0736,  0.0519,
         -0.0289, -0.5174, -0.4543,  1.3006,  0.5865, -0.0265, -0.0160,  0.0265,
         -0.4811,  0.2439,  0.0629, -0.1282,  0.7291, -0.0274,  0.0957,  0.0083,
         -0.0250,  0.0083,  0.0970,  0.2409, -0.9993,  0.0102, -0.0187,  0.0618,
         -0.0148,  0.0251, -0.0289, -0.0384,  0.0385,  0.0373, -0.1094,  0.2912,
          0.1090, -0.5520, -0.2306,  0.0453,  0.9522, -0.0866,  0.6227,  0.9882,
         -0.0442, -1.6681, -0.3287, -0.1783,  0.2284, -0.0855,  0.0894,  0.0279,
         -0.1694,  0.1555, -0.0354,  0.0851, -0.8069,  0.0628, -0.4161, -0.1130,
          0.0955,  0.3139, -0.1306, -0.2441, -0.5731,  0.0302,  0.1658,  0.8007]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1009))
tensor([[ 8.7471e-02,  9.0810e-01, -3.9956e-01,  2.4659e-01,  1.3065e+00,
          5.9688e-01, -1.5209e-01,  1.6640e-02,  3.2446e+00, -2.1371e+00,
         -1.9305e-02,  1.2594e+00, -8.5530e-02,  2.0474e-01,  4.6910e-01,
         -4.4680e-02,  1.0137e-03,  9.2936e-02, -2.2400e-02,  5.6101e-02,
         -1.5929e-01, -6.8158e-02, -5.7182e-02, -1.8528e-01, -2.6353e-01,
         -1.4423e-02,  1.1357e-02,  1.0097e-01, -9.8825e-03,  5.5883e-02,
          3.0589e-01,  2.0693e-01,  2.7439e-01,  2.5756e-01,  5.4902e-01,
          2.4337e-02, -3.1288e-02,  4.3255e-03, -1.0119e+00,  7.3882e-01,
          4.0519e-02, -5.6117e-01,  1.0272e-01,  7.2988e-01, -2.9186e-01,
         -6.2071e-01,  2.1610e-01, -1.3619e-01,  3.7935e-03,  1.0552e-01,
         -6.5267e-02,  9.4449e-02, -6.8969e-01, -2.0855e-01,  1.0482e-01,
         -7.9124e-01, -4.8840e-01, -2.2845e-01, -4.7690e-01,  2.0883e-01,
          8.3871e-02, -4.1223e-02, -4.8286e-01,  2.5913e-01,  1.6487e+00,
          2.7068e-01, -6.3997e-01, -5.8535e-01,  5.5710e-01, -1.9188e-01,
          7.6214e-02,  6.9293e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1012))
tensor([[ 1.1493, -0.5987,  0.4012,  0.1442,  0.1316, -0.2393,  0.6001,  1.6620,
          0.6637, -0.7673,  2.9037,  0.7948,  0.3584,  0.0179,  0.0356, -0.1863,
         -0.0386, -0.0239, -0.2851,  0.0244, -0.4841, -0.0613, -0.0337, -0.0930,
         -0.1705,  0.1168,  0.2113,  0.2620, -0.0610, -0.0895, -0.0221, -0.0114,
          0.0682, -0.1156,  0.1784,  0.4217,  0.5508,  0.7557,  0.0461, -0.0684,
          0.9772, -0.1256, -0.2182,  0.6466,  0.1568,  0.1472, -0.2342, -0.3019,
          0.0253,  0.0269, -0.1400, -0.1411, -0.3245,  0.1895, -0.4814, -0.7459,
          0.7321, -0.0269, -0.2103,  0.3852,  1.3227,  0.0637,  0.8644,  0.2281,
         -0.0817,  0.0895, -0.1459,  0.0536,  0.0494,  0.7289,  0.5291, -0.4866]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1012))
tensor([[-6.6004e-02, -1.8095e-01,  1.8253e+00,  4.5193e-03,  6.5705e-02,
          7.4643e-01, -8.5840e-02,  1.3541e+00,  2.0454e+00, -5.0920e-01,
          1.2462e+00,  1.4602e-01, -7.2569e-02,  1.4653e-02,  2.3041e-02,
         -6.3446e-02,  2.8462e-01, -1.6765e-01,  7.8610e-03, -6.1370e-03,
         -4.4914e-02, -6.4399e-02,  6.3113e-04,  6.7310e-02, -2.6957e-02,
         -2.8540e-02,  1.2441e-02,  4.4227e-02, -8.4250e-01,  1.0226e-01,
         -1.9970e-02, -7.3407e-03,  4.0448e-02,  2.1285e-01,  1.1469e+00,
          2.0069e-01,  3.2707e-01, -6.9860e-02,  3.0926e-02, -4.4890e-02,
         -1.9311e-01, -2.0128e-02, -2.7088e-01,  2.5114e-01, -1.8509e-02,
          5.1537e-02, -8.1665e-02,  1.0994e+00, -1.3501e+00,  2.5397e-01,
         -1.1997e+00,  2.6903e-01, -9.6157e-02,  7.2667e-02,  7.1727e-03,
         -5.8217e-02,  1.7562e+00, -1.4793e+00, -1.3377e+00,  7.5035e-01,
          1.4934e+00, -3.5913e-01, -4.3396e-02,  6.1111e-01,  3.7703e-01,
         -5.9637e-01, -1.2540e-01,  1.2379e-01,  8.1902e-03,  6.8094e-01,
         -1.2998e-01,  6.7204e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1012))
tensor([[ 2.0212e-01, -1.9921e-01,  2.4137e-01,  1.0690e+00,  2.7878e-01,
          5.7311e-01,  1.0960e-01,  4.5699e-01,  1.3022e+00, -1.7254e+00,
          2.4969e+00,  8.3459e-01, -8.9185e-03,  1.1945e-02, -7.2056e-02,
         -5.5416e-02, -2.8585e-02,  2.2185e-01, -2.4976e-01, -1.9474e-02,
         -1.3859e-02, -1.7257e-01,  4.1843e-02,  3.9240e-02,  1.0106e-03,
          1.2796e-01,  2.5451e-02,  4.2341e-02, -1.0055e-01, -3.7205e-01,
          3.2145e-02,  5.3972e-03,  1.9023e-01,  5.5435e-02,  1.0578e+00,
          6.5436e-01, -3.7426e-02, -3.2045e-02,  8.4156e-02, -2.1514e-02,
         -1.3457e-01, -3.5045e-02, -1.7648e-01,  1.0307e-01,  1.2029e-01,
          1.5156e-01, -7.0932e-02,  1.3104e+00, -9.1677e-01,  5.0861e-01,
          1.6664e+00, -1.8743e-01, -5.3445e-02,  8.1285e-02,  4.3536e-02,
          1.6296e-01,  1.2503e+00, -6.1388e-01,  2.5606e-01,  4.2158e-01,
         -3.1715e-01,  1.8195e-01, -3.1599e-01,  4.9088e-02,  1.2587e+00,
         -1.5258e+00, -1.1353e+00,  6.5578e-01, -7.5146e-01, -5.3909e-01,
          6.7332e-01,  1.5118e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1014))
tensor([[ 2.5524e-01,  1.6714e-01,  4.1757e-01,  1.2884e-01,  7.7547e-01,
          3.6517e-01,  1.2726e-01,  5.4819e-01,  1.1490e+00, -1.3769e+00,
          1.1409e-01,  3.0909e+00, -7.9118e-02,  4.7718e-02, -1.8634e-01,
          6.3399e-03, -8.0465e-03,  6.0004e-02,  2.7460e-02, -3.7822e-02,
          1.0483e-01,  1.7953e-02, -9.9948e-03,  4.3866e-04,  2.9450e-01,
         -3.6167e-01, -6.0054e-01, -2.0176e-01, -7.7601e-02,  3.5528e-02,
         -1.1540e-01, -9.6602e-02,  4.9343e-01,  3.0673e-02, -9.6081e-02,
          5.9956e-02,  4.4884e-02, -7.3299e-02,  5.1372e-01, -2.5172e-01,
          2.7767e-01,  5.4471e-02, -1.3538e-01,  1.2659e-01,  6.9535e-02,
         -4.3727e-02,  7.4066e-02,  8.2371e-01, -7.0318e-01, -8.4430e-01,
          9.2560e-01, -8.5395e-01,  4.6936e-01, -1.5645e-01, -3.1871e-02,
          5.9865e-01, -2.3196e-01,  2.0295e-01,  6.9085e-01, -6.0132e-01,
         -4.0720e-01,  1.4692e-01,  3.0418e-01, -5.1286e-02,  3.6128e-01,
          6.9403e-01,  2.3493e-01, -3.3686e-01,  9.7895e-01, -5.0515e-01,
         -1.3273e+00,  3.5364e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1015))
tensor([[ 2.5552e+00, -1.2136e+00,  1.2464e+00,  1.2325e+00,  6.5145e-02,
          2.1048e-01,  2.7573e-01, -3.4443e-01,  8.0792e-02, -3.1317e-01,
          3.6064e-01,  4.6258e-01, -5.1738e-01,  7.2889e-02,  4.3232e-02,
          2.0771e-01, -2.8345e-01, -2.9587e-01, -2.1869e-01,  2.7381e-01,
          8.2002e-01,  1.3802e-01,  8.5354e-02,  1.6291e-01,  7.3990e-02,
         -8.1685e-02, -2.0118e-01, -2.0736e-01, -4.7962e-02,  2.4851e-01,
         -2.5523e-02, -1.3752e-02, -4.6868e-03,  3.2916e-01, -3.1267e-02,
         -4.8675e-01, -2.1994e-02,  7.2400e-05, -3.3426e-02, -4.3064e-02,
          9.6741e-03, -1.3503e-01,  6.0380e-01, -6.7294e-01,  1.2762e+00,
         -1.7554e+00, -2.5418e-01,  1.0142e-01,  6.3371e-01,  5.2131e-01,
          4.6576e-01,  5.1792e-01, -2.2038e-01,  1.4463e-01, -9.7388e-03,
          4.1294e-02,  2.0792e-01, -1.6121e-01,  8.9976e-02, -4.4346e-01,
         -1.6500e-01,  1.0985e-01,  1.7349e-01, -1.1310e-01,  2.3768e-02,
         -1.2646e-02,  4.0570e-02, -6.1594e-03, -3.2686e-01,  2.1514e-01,
          1.0148e+00, -8.5445e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1015))
tensor([[-0.3900, -0.4287,  0.3406,  0.2631,  2.1839,  0.5434,  1.4557, -0.4620,
          1.4686,  0.2729,  0.2425,  0.0901, -0.0241,  0.1180,  0.0488,  0.1083,
          0.0248,  0.0033, -0.0177, -0.0686,  0.0263,  0.1185, -0.0141, -0.0315,
         -0.0532,  0.0895, -0.0267, -0.0034, -0.4020,  0.1348,  0.5745,  0.7266,
          0.1098, -0.3427, -0.5181,  0.1233, -0.2737,  0.0792,  0.0634,  0.0160,
         -0.0298, -0.0268,  0.1062,  0.1240,  0.1550,  0.2727,  0.0725,  0.0771,
         -0.7616,  0.2417, -0.4503, -0.0094,  0.8949,  0.2208, -1.7209,  0.2916,
          0.5276, -0.2222,  0.3261,  0.1277,  1.1036, -0.4174, -0.0485,  0.0260,
         -0.0607, -0.2460, -0.0325, -0.0252, -0.0722,  0.0651, -0.1615,  0.0991]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1017))
tensor([[ 1.0173,  0.7536,  0.6349, -1.1718,  0.2295,  0.1367, -0.6787,  0.3653,
          1.3678,  1.5279, -0.0166,  0.9098, -0.0063,  0.0172,  0.0690, -0.1126,
          0.0441, -0.0503, -0.0884, -0.3510,  0.0344,  0.0718,  0.0706, -0.0331,
         -0.1811, -0.3140,  0.2341, -0.1304,  0.0338, -0.0513,  0.0342, -0.0452,
          0.0403, -0.0222,  0.1628, -0.2063,  0.1327,  0.0650, -0.0271, -0.0462,
         -0.0315, -0.3000,  0.6747, -0.6210, -0.3445,  0.8464, -0.5927, -0.8069,
         -0.1510,  0.3950,  0.9576,  0.1042,  0.7243, -0.2793,  0.1004,  0.0819,
         -0.0922,  0.0693, -0.0381, -0.1045, -0.4117, -0.0310, -0.0450,  0.0931,
         -0.0743, -0.2224,  0.4934, -0.4779, -0.0812,  0.0743,  2.1959, -0.5355]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1018))
tensor([[-0.6901, -0.3534,  1.1142,  0.0346,  2.4262, -0.3316,  0.0882, -0.3814,
         -0.2755, -1.0813, -0.8272,  1.8298, -0.1298, -0.1008, -0.0413,  0.0472,
         -0.0133,  0.0258, -0.0168, -0.0167, -0.1101,  0.0027, -0.0244,  0.0308,
          0.0690, -0.0424,  0.0035, -0.3104,  0.5383, -0.0180,  0.9846, -0.0331,
         -0.0039, -0.0197,  0.0307, -0.0061, -0.0643,  0.0410,  0.2894, -0.4585,
          0.2022,  0.4804,  0.2108,  0.0047,  0.0745,  0.1081,  0.0462,  1.3540,
         -1.4129, -0.4621,  1.8514, -0.9912,  0.4534,  1.1421,  0.3502,  0.4845,
         -0.0150,  0.0509, -0.0100,  0.0232, -0.3484,  0.2583,  0.0372, -0.0964,
          1.5674, -0.8617, -0.4471, -0.1503, -0.4370,  0.0894, -0.4144,  0.6234]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1019))
tensor([[ 2.0190,  1.7153, -0.7088,  0.2044,  0.2481,  0.1524,  1.1262, -1.3969,
          1.4008, -1.5205,  3.0039,  0.9188,  0.3328,  0.2921,  0.3263,  0.0493,
          0.0751, -0.3454, -0.7569, -0.0468,  0.3971,  0.1279, -0.0464,  0.0912,
          0.0298, -0.0939, -0.0300, -0.1178, -0.0262,  0.1268, -0.0170,  0.0051,
          0.0080, -0.0213,  0.0093,  0.1273,  0.4440, -0.5224, -0.2376,  0.1507,
          0.3015, -0.3354,  0.3725, -0.2831, -0.1501,  0.6912, -0.4406, -0.0651,
         -0.1624,  0.4000, -0.4453, -0.0285, -0.1178,  0.0443,  0.0481, -0.0759,
         -0.1721,  0.1083, -0.0237, -0.0775,  0.0967,  0.6787, -0.1713, -0.6291,
         -0.5297,  0.4558,  0.4562, -0.4473, -0.7764,  0.3379,  1.2082, -0.5590]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1021))
tensor([[-7.4546e-02, -1.3632e-03,  1.9739e+00, -2.9357e-02,  1.6306e-01,
          6.8086e-01, -1.5407e-02,  1.5297e-01,  2.2027e-01,  4.8288e-01,
         -4.7476e-02,  1.7366e+00, -2.0167e-02, -1.2556e-03, -1.1462e-02,
          1.1049e-02, -5.9736e-02,  2.7704e-02, -5.2281e-02, -7.2527e-03,
          3.4279e-03,  8.3372e-02, -2.9235e-01, -2.2721e-01, -2.7256e-01,
         -1.3065e-01,  1.5039e-01, -4.9008e-01, -4.7629e-01,  7.1424e-01,
          2.5140e-02,  3.8788e-02,  8.0983e-03, -1.6930e-02, -4.4018e-03,
          3.1085e-01, -9.8866e-02,  1.5294e-01,  3.4783e-01, -4.7334e-01,
         -1.7418e-01,  4.0059e-01, -1.3575e-01,  6.0188e-02,  1.4126e-01,
          1.0747e-01, -5.4230e-02,  4.8065e-01,  1.5390e+00, -1.4710e+00,
         -3.1514e-01,  2.5164e-01, -1.8699e-01,  1.6574e-01, -6.2319e-03,
          5.3158e-03,  1.1158e+00, -7.2665e-01, -3.9634e-01,  5.2366e-01,
          8.3413e-02,  1.7938e-01, -2.6478e-01, -1.2862e-01, -4.6642e-01,
          2.3002e-01, -1.0368e+00, -2.1181e-01,  1.0930e-01,  4.2563e-01,
          3.3557e-01,  1.0674e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1023))
tensor([[ 2.3083e+00, -5.6535e-01,  1.6496e-01, -2.7369e-01, -1.0580e-01,
         -1.1620e+00,  8.5115e-02,  1.0301e+00, -1.0795e+00, -8.2202e-02,
          1.0737e+00,  1.9043e+00, -4.3480e-01, -7.6798e-02, -2.3577e-02,
         -1.2179e-03,  4.6174e-01, -3.4031e-01, -4.8586e-02,  7.6859e-01,
          5.3449e-01,  8.9126e-02,  5.6914e-02, -9.2474e-02,  4.3088e-02,
          3.4321e-03,  2.6164e-01, -1.5033e-01,  1.0390e-02, -7.2441e-03,
         -1.8874e-02, -2.2068e-01,  3.0788e-01, -4.0897e-03,  5.5710e-02,
         -7.7497e-02,  2.6195e-01,  8.3797e-02, -1.6043e-01,  7.3069e-02,
          5.8742e-02, -1.3735e-01,  1.5791e+00, -1.4828e+00,  3.3845e-01,
         -2.0225e+00,  5.7857e-01, -3.3576e-01, -4.2900e-01,  9.1444e-01,
         -8.2441e-02, -1.4755e-02,  1.1923e-01, -4.2105e-02, -2.8679e-01,
         -2.9535e-01,  4.7635e-01,  9.2572e-02,  3.1172e-02,  5.2862e-03,
         -2.0631e-01, -2.3054e-01,  6.1582e-01, -4.2262e-01,  5.2381e-01,
         -2.3049e-01,  8.6708e-02, -6.4144e-02,  1.1010e+00, -5.9244e-01,
         -1.1145e+00,  2.8757e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1025))
tensor([[ 1.4854e+00,  1.3213e+00,  2.4523e+00, -1.6886e-01,  6.8001e-01,
         -7.2463e-01,  5.3420e-01, -2.6200e-01,  2.6102e-01, -3.0845e-01,
         -3.0271e-01,  1.7984e-01, -3.4159e-01, -4.8176e-02,  3.3456e-02,
         -1.8403e-01,  2.0907e-01,  2.4523e-02,  3.6218e-02, -3.8283e-02,
         -3.2029e-01,  1.5650e-03, -7.5674e-02, -9.5144e-03, -8.0049e-03,
         -2.6428e-02, -1.8944e-02,  3.3125e-01, -1.4157e+00, -3.5510e-02,
         -5.0608e-01,  2.1264e-02,  2.4764e-01,  2.0654e-01, -1.9725e-02,
          3.7736e-02,  5.1593e-02, -1.0213e-01,  7.7863e-03,  7.2740e-04,
         -9.5956e-02,  1.8003e-01, -2.9652e-01,  4.8069e-01,  4.9552e-01,
         -1.5980e-01,  3.8994e-01,  1.4848e+00,  2.1677e-01, -2.4070e+00,
          6.0579e-01, -1.4753e-01,  1.3381e+00,  1.3417e-01, -8.9635e-01,
          3.6212e-01, -3.6557e-01, -1.7603e-02, -1.0344e-01, -4.5059e-02,
         -2.6305e-01,  2.3146e-01, -5.5688e-04, -1.3306e-01, -2.0325e-01,
          1.5165e-01,  1.6243e-01, -1.0717e-01,  2.4290e-01, -1.5857e-01,
          2.8802e-01, -4.3970e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1025))
tensor([[ 1.5112e+00,  8.0643e-01,  1.4625e-01,  4.6384e-01,  2.9991e+00,
          4.5411e-01,  1.2693e+00, -8.0563e-01,  1.5278e+00,  5.5544e-01,
          1.1536e+00,  1.8758e-01,  1.8980e-01,  7.6296e-02, -1.7508e-01,
         -4.8380e-01,  1.3465e-01, -1.1219e-01, -2.7197e-02, -3.8755e-02,
          1.6379e-01,  1.8060e-01,  2.9741e-02, -9.9042e-03,  2.9840e-01,
          7.9176e-02, -4.4915e-02,  1.0496e-01, -4.0706e-02, -2.0259e-01,
         -6.5784e-01,  2.5560e-01,  3.6236e-01, -2.2431e-02, -9.2841e-03,
         -3.1247e-02,  5.0390e-01, -5.2066e-01, -3.0726e-02,  4.8750e-02,
          4.9171e-01, -1.1894e-01,  8.1150e-01, -5.4403e-01,  9.9150e-02,
          9.3834e-01, -3.5387e-01, -2.0211e-02, -4.5754e-01,  9.8237e-01,
         -3.2036e-01, -9.6174e-02,  3.3343e-01,  4.8525e-01, -5.1254e-01,
          8.7818e-01, -2.4643e-01,  1.5228e-01,  3.4207e-03, -4.4548e-03,
         -3.3123e-01,  1.5637e-01, -8.8383e-01, -7.6438e-02, -5.8591e-01,
          2.6169e-02, -3.1817e-01,  1.4676e-01,  1.1625e+00,  1.9459e-01,
         -1.2928e-03, -8.2727e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1026))
tensor([[ 1.5131e+00, -1.9368e+00,  4.4502e-01,  3.6409e-01,  1.0301e+00,
          2.5396e-01,  1.5890e+00, -7.3065e-01,  2.1873e+00,  1.5549e+00,
          8.4101e-01,  3.4372e-01,  5.0008e-01, -1.6924e-01, -8.9881e-02,
         -4.6165e-01, -2.2205e-01,  6.9679e-02, -3.8947e-02, -6.0631e-02,
         -2.5140e-01, -2.2963e-01,  5.9752e-03,  5.8150e-03, -3.8868e-02,
          2.2516e-02, -2.2814e-02,  1.4311e-02,  1.8362e-02, -2.0930e-01,
         -5.4282e-02,  3.5333e-01,  9.1611e-01,  2.5500e-02, -2.2822e-02,
          6.8417e-04, -2.8183e-02, -3.0221e-02,  8.3186e-01,  5.5489e-01,
         -1.1643e-01,  1.6097e-01, -5.1045e-01,  9.0437e-01,  1.4385e-01,
         -1.1860e-01, -4.0605e-01,  2.8725e-03,  3.6116e-01,  3.3318e-01,
          5.8724e-02,  3.0270e-01,  2.7647e+00, -1.4925e+00,  4.9422e-01,
         -7.5726e-01, -2.6205e-01,  2.0943e-01,  5.2814e-01,  1.7037e-01,
         -5.3991e-01, -1.0129e-01, -6.8347e-02,  1.6974e-01,  1.8559e+00,
          1.9430e-01, -3.9375e-01,  8.4245e-01,  2.2650e-01, -4.8749e-01,
         -6.7575e-02,  2.5186e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1028))
tensor([[ 0.9183, -1.0869,  1.0577,  0.9025,  0.1507,  1.0854,  1.5967, -0.6362,
         -1.1816,  0.4332,  0.4956,  0.4394,  0.1249, -0.1144,  0.0402,  0.1905,
          0.5039,  0.1351, -0.0818,  0.5609,  0.1685, -0.0250,  0.0062,  0.0314,
         -0.1431, -0.0035, -0.2724, -0.2594,  0.0250, -0.0069, -0.0198,  0.0412,
         -0.0207,  0.4017, -0.0041, -0.0215, -0.0358,  0.0909, -0.0736, -0.0687,
         -0.0917, -0.0426,  0.2051, -0.8352,  0.0609,  0.1113,  0.0606, -0.7179,
          0.2264,  0.1132, -0.4556,  0.0051, -0.0880,  0.0677, -0.0605, -0.0680,
          0.4879,  0.3723, -0.7985, -0.5027,  1.2873, -1.0338,  0.4089,  0.1373,
          0.5166,  0.0424, -0.1584, -0.0327, -0.5329,  0.0657, -0.1863,  0.2275]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1028))
tensor([[ 2.2965, -0.5874,  1.4468, -0.8039,  0.6359,  0.6219,  0.0872, -0.4487,
          1.0443, -0.4206,  0.4859,  0.5360, -0.3118, -0.3595,  0.0080,  0.1003,
          0.1309,  0.0402,  0.4157,  0.0634,  0.3340, -0.3440, -0.0750,  0.0179,
         -0.1382, -0.1887, -0.1150,  0.0811,  0.1978,  0.3674,  0.0737,  0.2007,
         -0.5374,  0.0267, -0.0067, -0.0206,  0.0455,  0.0660,  0.1795, -0.2395,
          0.0226,  0.2651, -0.5991,  0.4404,  0.4753, -0.1090, -0.2886,  0.8218,
         -0.0974,  0.3136, -0.9379,  0.0287,  0.3530, -0.3860,  0.0781, -0.0594,
         -0.1237,  0.1384,  0.6356, -0.7792, -0.2245, -0.0044,  0.2897, -0.3921,
         -0.0823,  0.3426, -0.2164, -0.2825,  0.2040, -0.5934,  0.6295,  0.2709]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1028))
tensor([[-1.3583e+00, -6.9111e-02,  1.4495e-01,  5.9935e-01, -7.7496e-01,
          7.0329e-01,  9.3687e-01,  7.0300e-01, -1.6234e-01,  5.5053e-01,
          4.4173e-01,  2.2748e+00, -2.1955e-02, -8.8738e-02,  4.0191e-04,
         -5.9961e-03,  5.8958e-02,  1.2844e-01,  2.3854e-03,  5.1620e-02,
         -4.0645e-04, -2.0445e-02,  5.2735e-02,  3.0455e-02, -1.0322e-01,
          2.1965e-02,  2.4225e-01,  1.8045e-01, -2.8707e-02,  4.7139e-02,
          1.6459e-01,  2.2105e-01, -1.7174e-01,  1.0983e-01,  3.4121e-01,
         -5.1904e-01,  8.0373e-02,  1.4342e-02, -3.9977e-02,  1.3315e-01,
          1.7431e-02, -7.5697e-02,  4.3446e-01,  9.1976e-02,  8.9370e-02,
          7.4192e-02, -2.0753e-02, -2.6861e-01,  6.2787e-02,  4.8263e-02,
         -3.5102e-01,  1.3064e-01, -4.1610e-01, -8.0172e-03, -4.0866e-01,
          6.8024e-02,  2.1408e-01,  1.5292e-01,  8.3432e-01,  9.2127e-01,
          1.4922e+00, -6.7360e-01,  1.0779e+00, -5.5132e-01,  1.4344e-01,
         -5.0179e-01,  8.5126e-01, -9.5324e-01,  5.3190e-01, -2.0373e-01,
          7.8208e-01, -9.2464e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1030))
tensor([[ 0.8785, -0.9270,  0.5852, -0.6103,  1.6901, -0.5182,  0.0698, -0.9960,
         -0.3821, -0.2800, -0.0564, -0.7429,  0.2899,  0.2172, -0.1012,  0.2653,
          0.2755,  0.1256, -0.2042,  0.0064, -0.3029,  0.0232,  0.1654, -0.1774,
         -0.0261, -0.0375, -0.0235,  0.0921, -0.0496, -0.0478, -0.4227, -0.1419,
          0.0805,  0.2297, -0.0113,  0.0095, -0.3160,  0.2886, -0.0874,  0.0386,
         -0.0190, -0.0083,  1.0781,  0.2832, -0.5336,  1.0266, -0.9026, -0.3095,
          0.1091,  0.1260,  0.3747, -0.1291,  0.0051,  0.3841,  0.0445,  0.0116,
         -0.4731,  0.0792, -0.2157,  0.2738,  0.1403, -0.0272,  0.2392, -0.3787,
         -0.1391,  0.0689,  0.2003,  0.0804,  0.0133,  0.0069,  0.0460,  0.2749]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1033))
tensor([[ 2.6481e+00,  2.3274e+00,  5.6841e-01,  8.7837e-01,  4.9461e-01,
          4.3544e-01,  2.2529e+00, -1.0355e+00, -4.1606e-01,  1.5595e-02,
          7.3957e-01,  2.9333e-01, -1.1808e-01, -4.8544e-02, -3.1280e-02,
         -1.0418e-01,  3.0167e-02, -2.1440e-01, -2.0818e-01, -1.9682e-01,
         -9.9437e-02, -3.5253e-02,  1.0706e-01, -3.3982e-02, -2.1536e-01,
         -2.0031e-02,  5.1569e-02, -3.0919e-02, -4.2809e-01, -1.1606e-01,
         -1.7030e-02,  9.7421e-01,  3.8720e-01,  2.4625e-02, -2.6639e-02,
         -1.0482e-03,  2.3926e-01, -3.8157e-01,  1.8876e-01, -2.9507e-02,
          1.9047e-01, -2.4104e-02,  9.4669e-01,  1.0532e-01, -3.2111e-02,
          1.0013e+00, -1.0203e-02,  1.8857e+00, -3.7208e-01, -1.5817e+00,
          1.3317e+00, -1.1824e+00,  1.5780e+00, -8.2081e-01, -1.4842e+00,
          8.3589e-01, -1.7187e-01,  1.8217e-01, -2.1398e-01,  4.3945e-02,
          8.6311e-01, -8.2417e-01, -2.5382e-01,  1.1026e-01, -4.7932e-01,
          4.4660e-02,  3.5520e-03,  4.8887e-02, -1.8524e-01,  7.4716e-02,
         -2.2516e-01,  1.4633e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1033))
tensor([[ 1.9358e+00,  2.2224e+00,  3.6915e-01,  1.0368e-01,  2.9174e+00,
          6.6087e-01,  1.2775e+00, -6.0477e-02,  1.3043e+00, -5.3986e-01,
          1.6798e+00,  1.5078e+00,  7.6712e-02,  2.7705e-01,  4.8090e-01,
          3.8817e-01, -4.3919e-01, -2.2692e-01, -1.7626e-01,  5.7433e-03,
         -1.0182e-01,  4.3217e-04,  3.6852e-02, -6.1427e-02, -8.4177e-02,
          6.5969e-02, -1.9048e-02, -2.9356e-02, -1.3867e-02,  2.5354e-02,
          5.3059e-01, -2.0524e-01, -6.5768e-01, -2.3073e-02,  2.9421e-01,
          1.2517e-01,  1.6660e-01, -6.8778e-01, -1.1004e-01,  5.7320e-01,
          1.9757e-02, -3.0964e-01, -1.3286e+00,  4.0814e-01, -2.2465e-01,
         -8.3992e-01,  5.8618e-02, -7.1622e-02,  9.2537e-02,  1.0731e-01,
         -1.0699e-01,  7.9354e-02,  1.9768e+00, -4.9692e-01,  6.4286e-01,
         -3.5219e-01, -2.7817e-01,  8.0071e-02,  1.1488e-02,  7.0383e-02,
         -7.3120e-02,  2.8832e-01, -2.4233e-01,  5.9614e-02,  2.8445e+00,
         -3.8292e-01, -5.8223e-01,  2.5093e-01,  6.6367e-01,  2.4668e-01,
         -2.0927e-01,  4.3212e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1034))
tensor([[-0.0215,  0.1235,  0.8349,  1.2669,  0.0953, -0.8908, -0.0051,  0.1397,
          0.3619,  0.5263,  1.7511,  0.1517, -0.0876,  0.0421, -0.1037,  0.0219,
          0.0568, -0.3697,  0.1059,  0.2672,  0.0656,  0.5160, -0.1244,  0.0526,
         -0.1146, -0.0060,  0.0886, -0.1047,  0.0452,  0.2642, -0.1394, -0.0223,
         -0.0078,  0.0839, -0.0393,  0.0351, -0.0210,  0.0272, -0.0693,  0.0365,
          0.0045, -0.0890,  0.6037, -0.3483, -0.4400, -0.6824,  0.4533,  0.8558,
          0.1208, -0.6251,  1.3340, -0.2935, -0.2281,  0.3731,  0.0177,  0.0286,
          0.8490,  0.0397,  0.5709,  0.2921, -0.0928,  0.0640, -0.0031, -0.0282,
         -0.5452,  0.2573, -0.1664,  0.1686, -0.9497,  0.1708, -0.0923,  0.0707]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1035))
tensor([[ 0.2796,  1.0684,  1.6612, -1.1984,  2.0846,  0.1166,  0.5917,  0.4518,
          0.1473,  0.4957,  0.4908,  0.0956, -0.3564,  0.0546,  0.3336,  0.0531,
         -0.0243,  0.0558,  0.0406, -0.0218, -0.5596,  0.3271, -0.0333,  0.0952,
         -0.1880,  0.0229,  0.1086, -0.1356,  0.7747, -0.2945,  0.2979,  0.4226,
         -0.4421, -0.0181,  0.0082, -0.0097, -0.1102, -0.0887, -0.0457,  0.0877,
         -0.1050, -0.0734,  1.2279,  0.1856, -0.6688,  1.5779, -0.2170,  1.8714,
          0.1958, -0.9052, -1.5927,  0.2349,  0.2377, -0.0991, -0.8824, -1.1014,
         -0.3879,  0.2261, -0.0369, -0.0245,  0.4777, -0.1687,  0.5168, -0.2047,
         -0.1282,  0.0327, -0.1746,  0.1262,  0.3348, -0.0749, -0.2819,  0.0665]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1036))
tensor([[ 1.5164,  0.2692,  0.5726,  0.4765,  0.0502,  0.2818, -0.1457,  0.1693,
          3.5673, -1.1218, -0.0135,  2.5424, -0.0490,  0.0395, -0.0169,  0.1832,
          0.0519, -0.0253, -0.0591, -0.9081, -0.0437, -0.1739, -0.0260, -0.0097,
          0.2661, -0.3235,  0.1113,  0.0978,  0.0659, -0.1538, -0.0198,  0.0654,
         -0.0157,  0.0274,  0.0340, -0.0183,  0.4635,  0.0611, -0.2381,  1.2405,
          0.0143, -0.4341,  1.0605,  0.0544, -1.3653,  0.7868, -0.2552, -0.2936,
          0.1905,  0.2718, -0.1744,  0.1501,  0.0951, -0.0223,  0.0355, -0.0517,
         -0.2677,  0.2077, -0.3557, -0.9217, -0.0303,  0.3553,  0.2236,  0.1157,
         -0.6560,  1.0460, -0.0194, -0.4982, -0.1816,  0.1896,  2.8605, -0.0560]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1037))
tensor([[-3.1938e-01, -3.7100e-01,  7.3536e-01,  1.4513e-01,  1.2394e+00,
          5.9061e-01,  1.1857e+00, -1.4656e+00,  6.0912e-01,  7.3247e-01,
          1.5363e+00,  1.5018e+00, -6.2090e-04,  7.9022e-02,  1.2865e-01,
          9.7000e-02, -6.3903e-02, -1.2565e-01, -5.2207e-02, -8.1160e-03,
          1.6930e-02,  1.0078e-01, -2.2002e-02, -4.1049e-02,  1.5854e-02,
         -1.2233e-01, -1.3957e-01, -2.5501e-01,  4.2096e-02,  7.7249e-02,
         -1.9923e-02,  3.7188e-01,  2.5221e-01, -2.1348e-02, -4.3523e-01,
          2.0454e-01,  3.8581e-01, -5.9076e-01, -2.8349e-01, -9.0821e-02,
          5.0130e-01, -6.4380e-02,  1.0647e+00, -1.9743e-01, -3.5009e-01,
         -6.2975e-01,  4.7878e-01, -6.7148e-01,  4.1826e-01, -1.3294e-01,
         -4.3100e-01, -5.7629e-02, -3.5892e-01, -2.7467e-02,  1.6018e-01,
         -1.5587e-01,  1.4618e-01, -1.1327e-01, -3.7137e-01, -3.4148e-01,
          7.4913e-01, -1.6107e-01, -4.9788e-01, -1.1493e-01,  2.2505e+00,
         -1.1470e+00,  1.1688e+00, -3.8990e-01,  2.6912e-01,  1.7847e-01,
          1.1223e-01,  1.9338e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1038))
tensor([[ 5.1498e-01, -1.0760e+00,  5.8587e-01, -1.4907e-01,  1.5339e+00,
          1.3410e+00,  2.4435e-01, -1.2319e-01,  1.6185e+00,  6.2772e-01,
         -1.0201e-01,  2.1022e+00,  1.2195e-01,  2.4188e-01, -3.9813e-01,
         -9.5061e-02,  1.7403e-02, -6.0643e-03, -8.4214e-02, -4.2091e-01,
          1.0526e-01,  7.4906e-06,  3.7099e-02, -1.3694e-01, -8.5725e-02,
         -1.7845e-01, -9.8803e-02, -1.0952e-02, -8.7424e-03, -2.7164e-02,
          1.9428e-01, -6.9089e-03, -6.1156e-02,  3.2485e-02, -1.7282e-01,
         -3.6343e-01, -8.2004e-02, -6.0095e-02,  1.2913e-01, -9.2985e-01,
         -8.7069e-02,  5.9043e-02,  5.5412e-01, -8.3002e-01, -1.2657e-01,
         -1.9233e-01,  7.1423e-02, -2.3736e-01,  1.3265e-01,  1.7500e-01,
         -3.7414e-02,  8.4395e-03, -3.5741e-01,  3.7418e-01,  1.6388e-02,
         -2.8338e-02, -4.9324e-01,  1.3034e-01, -8.8922e-01,  8.1118e-01,
         -2.4877e-01,  1.2466e-01, -1.8918e-02, -7.3385e-02,  6.2908e-01,
          6.0809e-01, -9.4110e-01,  3.1636e-01,  2.2815e-01, -1.0304e-01,
          1.2238e+00, -4.0620e-03]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1039))
tensor([[ 2.3728e-02, -1.6140e-01,  9.9171e-01, -6.8493e-01, -5.8514e-01,
          4.9867e-01,  4.3946e-01,  6.2225e-01,  2.1649e+00, -2.5225e+00,
          6.7419e-01,  1.3549e+00, -1.3272e-02, -8.0085e-02, -2.5515e-02,
         -1.7110e-02,  1.6822e-02, -4.6007e-02,  1.2570e-03, -4.9137e-03,
         -7.7817e-03,  4.5518e-02, -6.5044e-04,  2.2805e-01, -3.5168e-01,
         -2.4365e-01, -4.8106e-02,  2.1290e-01,  2.7540e-02, -1.4957e-01,
          6.0710e-02, -3.8335e-02, -3.4633e-02, -1.8128e-02, -2.6490e-01,
         -4.1146e-01,  2.4427e-01,  3.1140e-01, -7.5804e-01,  7.7795e-01,
          3.5620e-01, -3.7377e-01, -6.0598e-02,  9.8722e-02,  1.0612e-01,
          3.0021e-03, -4.1788e-02, -1.1604e+00, -2.3120e-01,  3.2598e-01,
          5.3577e-01,  3.4045e-02,  1.6055e-01,  3.4828e-01,  2.1004e-01,
          1.6897e-02, -1.4395e-01, -6.2857e-02, -3.4056e-01,  4.1224e-01,
          1.0370e+00, -1.0824e-01,  4.0754e-02,  4.6032e-01,  3.9124e-01,
          3.7438e-01, -1.2039e+00, -5.4132e-03,  2.3137e-01,  4.5812e-01,
          1.8762e+00, -5.5657e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1039))
tensor([[ 5.9223e-01, -6.1728e-01, -3.6983e-01,  5.2161e-01,  6.5464e-01,
          9.0687e-01,  6.5869e-02, -1.4201e-01,  1.7081e+00, -5.6720e-01,
          1.5055e+00, -7.4512e-02, -1.2674e-01,  9.2718e-03, -1.1770e-01,
         -6.8702e-02, -1.0399e-01, -1.4746e-01,  1.5242e-01, -3.7881e-01,
         -1.0356e-01,  1.0350e-03,  3.2478e-02, -3.9513e-02,  1.2738e-01,
          1.2856e-01,  7.8163e-02, -4.8733e-02,  3.7984e-02, -2.4644e-02,
         -1.4115e-01,  1.4093e-01, -7.8718e-01, -1.1180e-01, -1.2021e-01,
         -6.3827e-02,  2.6553e-01,  3.0474e-01,  4.9985e-01, -3.3502e-01,
          2.6659e-01,  2.4216e-01,  6.3378e-01, -2.8674e-01, -6.5568e-01,
          1.1610e+00, -4.9362e-01,  8.4270e-02,  9.1073e-02,  2.4437e-01,
         -4.3644e-01,  3.8348e-02,  3.1460e-01, -5.1567e-01,  4.4139e-01,
          1.0121e+00, -2.9202e-01,  3.5645e-01, -2.8703e-01,  2.1860e-01,
         -1.0862e-01,  2.6361e-01,  4.1755e-01, -5.6986e-02,  6.4375e-01,
          4.9056e-02, -1.1527e+00,  4.7572e-01,  1.2038e+00, -7.8184e-01,
          1.4715e+00, -7.2251e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1039))
tensor([[ 1.0134e+00, -6.9750e-01,  1.1804e+00,  9.9531e-01,  4.1958e-01,
          1.9357e+00,  7.0732e-01, -9.7128e-01,  8.2786e-01, -8.0478e-02,
          1.3252e+00,  1.8926e+00, -2.7396e-01, -1.2080e-02,  7.7494e-02,
         -2.5881e-01, -2.1552e-01, -1.3185e-01,  2.5061e-01, -9.2306e-02,
          2.5897e-01,  4.3035e-01, -1.3310e-01, -1.1165e-01, -9.9322e-02,
          7.9204e-02, -3.5110e-01, -3.4976e-01, -3.5020e-02,  4.4796e-01,
          2.6773e-02,  2.0981e-02,  3.3145e-04,  7.6612e-01, -1.9977e-01,
          3.9060e-02,  1.5333e-02,  6.3587e-02, -1.7542e-01,  2.7562e-01,
         -4.4890e-01, -3.3866e-01, -2.5394e-01,  2.4704e-01,  2.0192e-01,
          1.2892e-01, -1.6062e-01, -2.6737e-01,  4.5639e-01,  2.4361e-01,
         -2.6701e-01,  3.2167e-01, -1.7804e-01,  1.7451e-01, -5.0386e-01,
          7.0466e-01,  5.7656e-01,  8.9461e-01, -2.8352e-01,  2.5046e-01,
         -2.3609e-01,  2.4827e-01,  1.6653e-02, -2.1966e-01, -1.6149e-02,
         -1.8991e-01, -3.4536e-01, -1.0426e-01,  2.6130e-01,  8.4340e-01,
         -5.7519e-01,  3.6250e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1040))
tensor([[ 2.8200,  0.4199,  0.1576, -0.9084, -0.4169, -0.1350,  0.2246,  0.2606,
          1.3944, -1.7290,  0.6527,  0.6285, -0.4086,  0.0539, -0.0972, -0.1713,
          0.3361,  0.2098, -0.3765,  0.0230, -0.4008,  0.4157,  0.0360, -0.0123,
          0.1084,  0.2001,  0.0973, -0.0825,  0.4225, -0.1704, -0.1334,  0.0557,
         -0.0369, -0.0214, -0.0273, -0.0109,  0.0981,  0.1124, -0.4612,  0.5233,
          0.0397, -0.1462, -0.9020,  0.5810,  0.5358,  0.4154,  0.4606,  1.0429,
         -0.6284,  0.3872, -0.9867, -0.0452, -0.1426, -0.0321,  0.0620,  0.0428,
         -0.1265,  0.1032,  0.6231,  0.0520,  0.0881,  0.1523,  0.1305,  0.0638,
          1.0600, -0.1006, -0.4461, -0.2133, -0.4870,  0.3336, -0.2009,  0.3006]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1040))
tensor([[ 1.7421e+00,  1.5215e+00, -2.9983e-02, -9.5204e-03,  6.0435e-01,
          1.8401e-02,  6.1614e-01, -7.4672e-01,  1.9416e+00, -7.7941e-01,
          3.5579e-01,  4.0248e+00,  5.9174e-01, -4.0305e-02, -7.5087e-02,
         -9.1432e-02,  1.9838e-01, -1.9537e-01, -2.0801e-01, -1.5086e-01,
          5.6390e-01, -2.0244e-02, -3.6128e-03,  2.0660e-02, -4.0134e-02,
         -7.2752e-02,  3.2595e-02, -2.3763e-02,  2.2090e-02,  2.9818e-03,
         -6.1874e-02,  3.8223e-01,  2.9795e-01, -1.8927e-02,  4.1038e-02,
          6.2819e-02, -2.3726e-01, -1.0209e-01,  3.2505e-01, -1.2888e+00,
          3.2922e-01,  2.4395e-01, -1.9656e-01,  4.6671e-01,  4.6432e-01,
         -1.5828e-01,  3.7789e-01, -1.5595e-01,  9.7519e-02,  1.2516e-01,
          9.1510e-02, -4.7465e-02, -3.4644e-01,  1.3465e-01,  1.6694e-01,
         -1.1829e-01, -1.4418e-01,  8.9326e-02, -8.9159e-01,  6.2159e-01,
          1.9296e+00, -1.0784e+00, -1.5667e+00,  6.5416e-01,  1.8174e+00,
          3.6342e-01, -4.9972e-01,  2.4814e-03,  1.3754e+00, -2.6414e-02,
         -2.9976e-01,  1.1565e+00]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1040))
tensor([[ 4.4743e-01,  1.5728e-01, -2.9767e-01, -3.5089e-01,  2.0266e+00,
          1.6796e+00,  2.6696e+00, -9.8316e-01,  2.2936e+00, -4.3649e-01,
         -2.9677e-01,  2.0382e+00,  5.9605e-02,  3.4369e-01,  1.9222e-01,
         -1.5151e-01,  3.1585e-01,  1.7058e-01, -6.3225e-02,  7.7901e-02,
          3.1657e-02, -2.1366e-02,  5.4166e-02,  5.9774e-02,  1.2871e-01,
         -6.3788e-02,  1.8981e-02,  1.1949e-01,  9.5210e-03,  2.6626e-03,
          6.5006e-02,  6.9174e-01, -8.5313e-02, -5.6142e-02,  6.5859e-01,
          8.0459e-02,  1.9000e-01, -3.5503e-01, -8.8916e-02,  1.6906e-01,
          9.6570e-02, -6.7876e-01, -1.1095e-01,  1.2709e-01,  1.7534e-01,
          6.9909e-02, -1.1023e-02,  4.8743e-02,  7.0040e-02,  1.2327e-01,
          2.3630e-01, -3.0323e-02, -1.2375e+00, -5.6909e-01, -6.6340e-01,
          2.4070e-01,  2.1654e+00, -6.6927e-01, -7.1622e-01,  1.9844e-01,
          1.2235e+00, -4.0988e-01,  1.0005e+00, -4.0489e-02, -8.7135e-01,
         -1.7397e-01, -1.2747e-02,  4.4878e-02, -4.9827e-02,  1.3769e-01,
         -2.6481e-01,  6.4436e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1040))
tensor([[ 3.4866e-01, -3.6780e-01,  1.3097e+00, -1.2863e+00,  4.0203e-01,
          1.2447e+00,  3.5731e-01,  2.7314e-01,  1.9384e+00, -1.1942e+00,
         -7.5621e-02,  1.0884e+00,  2.9168e-03,  1.0486e-01, -9.9798e-02,
          2.4227e-01,  2.5704e-01, -1.7798e-02,  3.9456e-02,  5.0489e-04,
         -2.3688e-02,  4.9782e-01,  1.5502e-01, -1.5927e-01,  6.5804e-02,
          8.9870e-02,  6.5527e-02, -1.1073e-02, -1.4976e-01, -5.1800e-01,
         -3.2396e-01, -4.6070e-01, -1.5581e-01, -5.8321e-01,  2.5662e-01,
          1.8642e-01,  3.7113e-02, -1.0412e-02,  6.6513e-01, -4.8984e-01,
         -1.2995e-02,  3.9812e-01, -3.4128e-01,  1.7162e-01,  1.9980e-01,
          1.2970e-01, -4.9689e-02, -1.8238e-01,  1.2563e+00, -4.9682e-01,
         -4.0147e-02, -2.4995e-01,  2.9848e-01, -1.3701e-01, -3.0055e-01,
          1.9232e-01,  6.1230e-01,  5.4063e-01, -1.5625e+00,  8.1789e-01,
          6.4913e-01, -8.4785e-01, -6.2221e-01,  4.1490e-01,  1.3070e+00,
          2.5093e-01, -1.1119e+00, -9.6784e-02,  1.7859e-01, -7.8803e-02,
          3.2840e-01,  4.2747e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1042))
tensor([[ 0.0559, -0.0782,  3.0901, -1.9113,  0.4997,  0.1304,  0.1755, -0.6939,
          3.4284,  1.2292,  1.3758,  0.6038,  0.1157,  0.0819,  0.1257,  0.1072,
         -0.1204, -0.1147, -0.0042, -0.0299,  0.1400, -1.1893, -0.0236, -0.0048,
         -0.2688, -0.1885,  0.0073, -0.0618, -0.0224,  0.4410,  0.0268,  0.0321,
         -0.0107, -0.0188, -0.0660,  0.0238,  0.3599, -0.3452, -0.8767, -0.4879,
          0.3587, -0.2614, -0.4680, -0.1838,  0.3993, -0.2132, -0.0518,  1.1223,
          1.8702,  0.0789, -0.6198, -0.1848, -0.3261,  0.2058,  0.1464, -0.0410,
         -0.1400,  0.0925,  0.0134, -0.0250,  0.5082, -0.2093, -0.1587, -0.0835,
          1.7017, -0.0582, -0.1702,  0.3804, -0.2091,  0.4062, -0.2224,  0.2762]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1043))
tensor([[ 1.3174e+00, -8.9736e-01,  4.0763e-01,  1.6108e-01,  2.5323e+00,
          5.3999e-01,  2.5063e+00, -4.1139e-01,  9.2196e-01,  2.9180e-01,
          2.1710e+00,  1.0648e+00, -2.0697e-02, -7.6336e-01,  5.2271e-01,
         -1.2258e-01, -8.3834e-02,  7.3012e-02, -7.8411e-03,  2.6115e-02,
          7.6773e-04,  1.4331e-03,  2.2181e-02,  9.8636e-03, -8.9080e-02,
          1.5226e-02,  6.2198e-02,  1.0745e-01,  2.9236e-02, -2.5182e-02,
          4.7579e-02,  6.8088e-02, -1.5134e-01, -1.7343e-02, -7.1567e-02,
         -8.9245e-02,  6.2809e-02,  5.0611e-01,  4.4577e-01, -4.9879e-01,
         -3.2039e-01, -1.0509e-01, -4.5354e-01,  6.6347e-02,  6.5644e-02,
          4.5181e-01, -6.0482e-03, -1.3216e-01,  2.6664e-01,  9.5192e-02,
         -1.6400e-01, -8.0609e-03, -9.0921e-01,  1.0921e-01,  1.9876e-02,
         -1.7247e-01,  1.3428e+00, -6.5416e-01, -1.0884e+00,  2.9634e-01,
         -4.3775e-01,  6.8283e-01,  2.0628e-01, -1.5085e-01,  1.8931e-01,
          6.0825e-01, -2.3108e-01, -5.7192e-02,  4.9629e-01,  2.3565e-01,
         -2.3685e-01,  3.0147e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1044))
tensor([[ 2.9005e-01,  5.6625e-03,  1.9094e+00, -1.6065e+00,  6.3283e-01,
          1.8898e+00,  2.0517e+00, -7.3110e-01,  1.5376e+00, -2.1537e-01,
          5.9192e-01,  1.4798e+00, -2.1508e-02, -1.5355e-02, -2.7729e-02,
          5.8834e-02,  4.7394e-02,  5.9022e-02,  5.1193e-02, -1.4394e-02,
         -1.8778e-03,  1.1674e-01, -4.3736e-02,  9.4331e-02, -1.6560e-02,
         -7.1648e-02,  6.0258e-01, -5.6006e-01,  2.1998e-01, -1.3734e-01,
          6.9811e-02, -3.6969e-01, -6.6002e-02, -6.1428e-01,  2.4190e-01,
          1.8691e-02, -2.3191e-01,  5.4356e-01,  1.1393e+00,  3.5769e-02,
         -4.3880e-01,  1.2199e-02, -1.5952e-01,  1.2926e-01,  9.0696e-02,
         -3.8059e-02,  2.0244e-02, -1.8053e-01,  4.2029e-02, -6.1935e-02,
          1.8262e-01,  3.8107e-02,  7.1346e-02,  7.5515e-02, -8.9103e-01,
          2.9546e-01, -2.4227e-01,  5.1744e-01,  6.8895e-01,  8.3076e-02,
          3.5244e-01, -4.0545e-01, -1.0162e+00, -1.4414e-01,  1.8819e+00,
          1.7861e-01,  1.5153e-02, -3.3021e-02,  4.7383e-01,  3.4871e-01,
         -8.7765e-01,  3.0447e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1047))
tensor([[ 7.5943e-01,  1.6151e+00,  3.3444e-01, -2.9242e-02,  1.1455e+00,
          7.0982e-01,  1.4078e+00, -5.5912e-01,  8.5807e-01, -3.7347e-01,
          1.9221e+00,  8.5496e-02,  9.3546e-02, -3.7212e-02, -5.2339e-02,
         -1.2818e-01,  5.3637e-02, -2.2532e-01, -5.4121e-01, -2.4133e-01,
          2.8448e-02, -2.2341e-02, -9.2297e-03, -6.3400e-03,  2.6784e-02,
         -5.0773e-02,  2.5688e-02, -1.7493e-02, -6.0949e-02, -1.2566e-03,
          1.6349e-01,  2.9385e-01,  2.8846e-01, -2.5758e-02, -5.0294e-02,
         -5.5654e-02, -7.4016e-01,  3.0887e-01,  8.8230e-01,  2.4321e-02,
         -2.0774e-01, -1.5484e-02,  5.2803e-01, -1.8301e-01, -9.3426e-01,
         -1.5410e+00,  8.7761e-01, -2.1076e-01,  6.0990e-02,  2.1370e-01,
         -2.4698e-02,  1.5151e-02, -4.1106e-02,  2.0378e-01, -7.2587e-01,
          4.4251e-01, -7.7714e-02,  1.7506e-01, -1.0311e+00, -8.7557e-02,
          9.4112e-01,  2.2032e-01, -1.2411e+00,  3.0154e-01,  8.0750e-01,
          4.0336e-01,  8.1918e-01, -2.1389e-01,  3.1362e-01, -2.0713e-01,
          1.5921e-01,  5.8323e-03]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1048))
tensor([[-1.8357e-01, -5.1965e-01,  9.9118e-01,  1.5065e+00, -2.1701e-01,
         -3.0899e-01,  2.1803e+00, -6.4625e-02, -2.1026e-01, -1.0268e-01,
          3.5357e-02,  4.7316e-01,  8.8240e-02,  1.0605e-02, -1.3031e-01,
          2.3127e-01,  1.2157e-01, -1.3338e-02, -2.1582e-03, -2.1101e-01,
          1.0464e-01, -6.5599e-02,  6.2607e-02,  2.0410e-01,  7.2630e-02,
         -1.8081e-01, -1.4591e-01, -1.7196e-01, -3.9172e-01,  9.4983e-02,
         -1.0716e-01, -5.5887e-01,  1.0762e-01,  2.4578e-01,  9.9088e-03,
          3.1493e-02, -4.8520e-01, -1.3593e-02, -1.0585e-01,  2.8586e-02,
         -2.0820e-02,  1.4723e-02,  9.6380e-01, -5.8910e-01, -5.9158e-01,
          1.2132e+00, -6.9350e-01,  3.8553e-01,  7.6869e-01, -1.1526e+00,
         -1.2514e+00,  1.5751e-01,  8.6339e-01, -5.0741e-01,  4.9541e-01,
          2.0564e-01, -5.6780e-01,  1.2273e-01, -2.8237e-01,  3.4337e-02,
          1.0015e+00,  2.4428e-01,  5.9216e-01, -1.7993e-01, -1.9429e-01,
          1.5231e-02,  1.3323e-01, -7.0494e-02, -6.5747e-02,  9.8042e-02,
         -2.5028e-01,  1.9753e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1050))
tensor([[ 0.3880,  0.2184,  0.8524, -1.3080, -0.0023,  2.0196,  1.6047,  0.7172,
          0.0591,  0.0101,  0.1852, -0.1722, -0.0920,  0.0412, -0.0021,  0.2553,
         -0.2815, -0.0298,  0.0918,  0.0166, -0.1194,  0.6102,  0.1548,  0.2804,
          0.0415, -0.0382,  0.0580,  0.0030, -0.0783, -0.3640, -0.0176,  0.1932,
         -0.1302, -0.0214,  0.2829, -0.4821, -0.1799, -0.2387, -0.0224, -0.0264,
         -0.4080, -0.1184, -0.1371,  0.2644,  0.4090, -0.0185,  0.1946,  0.1902,
          0.5571, -0.3656, -0.6690, -0.0551,  0.0203,  0.0104, -0.3276, -0.5895,
          1.0746, -1.0137, -0.2233, -0.2623, -0.1899, -0.0633,  0.3979,  0.0338,
         -0.0226, -0.0042,  0.0899, -0.1071,  0.4228,  0.5060,  0.1416, -0.1662]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1053))
tensor([[ 1.1154e+00, -9.5583e-02, -3.8483e-02, -1.3898e-01,  1.2346e+00,
          9.6870e-01, -1.0064e-01,  6.5717e-02,  1.7162e+00, -6.0452e-01,
          1.5578e+00, -4.8465e-01, -1.6662e-01, -4.4434e-01, -3.8105e-01,
          1.2522e-02,  3.3798e-02, -3.1899e-01,  4.0978e-01,  1.5523e-01,
          1.4815e-01,  2.4029e-02,  1.0884e-02,  5.0350e-02, -8.8464e-02,
          6.2797e-02, -4.5438e-02, -2.2420e-02, -3.6990e-02,  5.0597e-04,
          2.2808e-01, -8.5977e-03,  4.4031e-02,  5.5039e-01, -7.0886e-01,
         -4.8251e-02, -2.6583e-02, -9.9951e-03,  8.2536e-03,  1.2004e-01,
          1.2849e-02, -1.1929e-01, -5.0814e-02,  2.2276e-01, -1.3664e-01,
         -3.7789e-01, -8.8988e-02, -4.0698e-02,  1.1420e-01,  1.4987e-01,
          1.5280e-01, -4.2668e-02, -4.8014e-01,  4.6748e-01, -1.7010e-02,
         -7.6489e-01,  1.9417e+00, -6.6001e-02,  2.6439e-01, -3.4582e-01,
         -1.4198e-01,  9.6263e-02, -1.6225e-01,  4.4314e-02, -7.7395e-01,
         -6.3516e-01,  3.2832e-03, -6.4308e-02, -1.0303e+00,  1.0692e-01,
         -3.5120e-01,  8.7115e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1058))
tensor([[ 3.8370e-01,  4.6176e-04,  2.3363e+00, -5.3516e-01,  1.5921e+00,
          2.1289e-01,  1.4941e+00, -7.6978e-01, -3.5614e-01, -3.9936e-01,
          3.0547e+00,  5.3954e-01,  2.5993e-02, -1.9308e-02,  1.5444e-02,
         -8.2408e-02,  2.2782e-02, -5.3418e-02, -4.7281e-02,  1.6620e-02,
         -5.4022e-05, -5.7836e-01, -1.4334e-01,  1.0422e-01, -3.3406e-01,
          1.4889e-01,  1.2161e-01,  3.5183e-01, -5.9264e-01,  3.3337e-01,
          2.8736e-01,  5.1389e-01,  4.4342e-01, -2.5522e-02, -1.9434e-02,
          4.2381e-02,  8.8729e-02,  9.7625e-01,  2.1132e-01,  1.1216e-02,
         -2.6793e-01, -2.0018e-02, -1.4460e-01,  1.4476e-01,  1.4462e-01,
         -4.1992e-04, -3.3977e-04,  1.7133e+00, -1.5230e+00,  4.6221e-01,
          1.3698e+00, -1.4907e+00,  2.2679e-01,  1.5778e-01, -9.4793e-01,
          6.7146e-01, -2.1079e-01,  1.2957e-01,  2.2808e-01,  6.9745e-03,
          1.9530e+00,  7.6717e-02, -1.1645e+00,  4.3110e-01, -6.4787e-01,
          3.8436e-02,  9.5415e-02,  1.3969e-02,  3.7811e-01,  2.8389e-01,
         -1.9036e-01,  4.4913e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1060))
tensor([[ 9.7581e-01,  4.4389e-01, -3.2269e-01, -2.0551e-01,  7.9641e-01,
          1.1474e+00,  3.7414e-01,  7.5140e-01,  1.4993e+00,  1.3664e+00,
          1.9491e-01,  2.1694e+00, -2.2555e-02, -2.9978e-02, -5.0885e-02,
          1.0187e-01, -1.3950e-01,  2.5133e-01,  1.1189e-01, -1.8638e-01,
          2.1653e-03,  1.1404e-01, -8.8829e-02, -9.6213e-03,  1.4175e-01,
         -2.0320e-01,  2.0767e-01,  1.6908e-01,  3.8968e-02,  7.0066e-02,
         -1.1883e-01,  1.1148e-01, -3.7061e-01,  1.0609e-01, -7.0022e-01,
          7.8883e-01,  1.0936e-01, -7.8182e-02, -1.7033e-01, -8.6061e-02,
         -1.0814e-02, -5.9204e-02, -7.7635e-03, -1.1226e-01, -1.1241e-01,
          1.0762e-01, -1.7131e-01,  9.1734e-02, -1.8859e-03,  2.2910e-01,
         -8.2661e-02, -2.5926e-01,  4.3725e-01, -9.9433e-02,  5.3147e-01,
         -8.2029e-03,  1.4049e+00, -6.2156e-01, -6.0936e-01, -7.7664e-01,
         -4.2431e-01,  1.7968e-01,  1.2590e-01,  1.2572e-02,  2.3096e-01,
         -5.6652e-01,  3.4372e-01, -5.2247e-01,  1.4805e-01, -5.5303e-01,
          3.9251e-01, -3.7598e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1061))
tensor([[ 5.1061e-02, -8.8505e-02,  1.5140e+00, -1.5485e+00,  1.5632e-01,
          1.7884e+00,  5.3218e-01, -6.3256e-01,  4.9346e-01,  6.6746e-01,
          2.2820e+00, -2.3546e-01,  2.3869e-03, -2.7425e-02, -2.9687e-03,
          5.1958e-02, -1.5339e-02, -8.6205e-02,  8.8062e-03,  1.0472e-02,
         -2.5619e-02, -5.2128e-01,  3.0285e-01, -4.8844e-01, -5.7779e-02,
         -7.9444e-02, -1.7085e-02,  1.3228e-05, -9.8338e-02,  4.9788e-01,
          2.5897e-02, -9.7595e-02, -5.5429e-02, -2.1172e-02, -7.1837e-02,
          2.9105e-01,  3.4046e-01, -7.5100e-01,  4.4658e-01,  5.7137e-01,
          5.8027e-01,  3.8572e-01, -2.1844e-01,  1.5897e-01,  1.6329e-01,
         -5.2309e-02,  2.1109e-03,  8.3081e-01,  3.2599e-01, -4.3293e-01,
         -8.4124e-01,  9.0720e-02, -3.1520e-01,  2.3372e-01, -7.2306e-01,
          6.6391e-01, -9.4318e-01,  4.4803e-02,  2.3961e-02, -3.6439e-02,
          1.1267e+00,  2.9563e-01, -8.1522e-01,  5.4734e-02,  2.5920e-02,
          4.3224e-01,  4.2829e-01,  3.2902e-01,  1.8510e-01,  5.3359e-01,
          9.7764e-01, -1.0186e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1062))
tensor([[ 1.9987e+00, -5.7625e-01,  5.2381e-01, -7.2263e-01,  4.2657e-01,
         -4.5905e-01,  2.2102e+00,  1.8851e+00,  7.4226e-01,  2.0999e-01,
          1.7725e+00,  1.7726e-01, -4.3731e-02,  1.8955e-01, -2.5323e-01,
         -8.1044e-02,  8.0339e-02, -7.6352e-02, -1.1769e-01, -6.3583e-01,
         -2.7460e-01,  4.2718e-01,  7.9291e-03,  1.9824e-02, -2.2666e-01,
         -1.6857e-01,  6.9208e-02, -1.2917e-01, -1.5443e-02, -5.3432e-01,
         -4.1584e-02, -4.9846e-01,  4.1610e-01, -1.5512e-01, -5.0435e-02,
         -2.6351e-02,  7.3332e-01,  5.7498e-01, -4.6772e-02,  1.1340e-03,
          4.1795e-01, -1.9912e-02,  5.7835e-01,  1.1974e+00, -1.5937e+00,
          5.5156e-01, -7.6351e-02, -1.7596e-02, -3.2389e-01,  1.1945e+00,
         -2.0310e-01, -3.8846e-01,  2.2519e-01, -1.2798e-01, -4.2467e-01,
         -2.7552e-01,  5.1276e-01, -3.7073e-01,  4.0864e-02, -8.2785e-02,
          1.1169e+00,  1.7542e-01,  1.2419e+00, -2.5165e-01, -4.6118e-01,
          3.3603e-01, -9.1961e-02,  5.1892e-02,  1.0938e+00, -3.7958e-01,
         -2.9725e-01,  1.6882e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1063))
tensor([[ 1.2935e-01, -1.1628e-01,  8.0053e-01,  8.6001e-01, -8.9235e-02,
          3.4559e-01,  3.0263e+00,  1.9890e+00,  1.6872e+00,  4.0216e-01,
          8.4693e-01, -3.4295e-01,  3.0636e-02,  5.7606e-03, -1.8263e-02,
         -2.1718e-01, -1.9434e-01,  7.4757e-02, -7.1264e-02,  3.9222e-03,
          3.0849e-03, -1.9734e-02, -4.7626e-02, -5.1684e-02,  3.1910e-01,
         -1.8016e-01, -1.2789e-01, -1.7179e-01, -9.7357e-04,  4.8658e-03,
         -1.7952e-02,  2.4973e-01, -1.1127e-01, -4.1587e-01, -8.5465e-02,
          1.1325e-01, -1.7648e-01, -6.8338e-01,  8.3081e-01,  1.5754e-01,
         -4.5935e-01,  3.1070e-02,  4.3727e-01,  2.2583e-02, -3.1841e-01,
          7.2345e-01, -3.3893e-01, -6.7751e-01,  9.3686e-02,  2.6219e-01,
         -4.0194e-01,  1.1853e-02,  9.8746e-02, -2.9029e-02,  2.0733e-01,
          5.9853e-02,  5.8386e-01,  4.2734e-01, -8.3294e-01, -6.3446e-02,
          1.2057e+00,  9.7489e-03,  7.8204e-01,  3.9928e-02,  1.6014e-02,
          7.2876e-01,  7.1075e-01,  2.2103e-01,  3.1934e-01,  8.7110e-02,
         -1.1101e-01,  4.1249e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1069))
tensor([[ 5.3449e-01,  1.1990e+00,  2.3176e-01, -4.7652e-02,  5.7817e-01,
          2.4105e+00,  4.4583e-01,  1.0435e+00,  1.4080e+00, -1.0828e-01,
          1.3240e+00,  1.2810e+00,  1.3797e-01,  1.6044e-01,  1.6429e-01,
         -9.0504e-02,  3.2877e-02, -2.0230e-02, -1.6893e-01, -1.5410e-01,
         -7.9935e-02, -2.5558e-02,  2.6328e-02,  7.4922e-02, -2.4280e-03,
          5.4239e-02, -2.9157e-02,  1.1951e-03, -5.2975e-03, -2.0402e-03,
          2.4932e-02,  7.0919e-02, -5.7946e-02, -2.6418e-01, -6.7358e-01,
          7.2336e-01,  4.6200e-01,  4.0435e-01, -6.2944e-01,  3.4064e-01,
          5.8949e-01, -2.4809e-01, -4.2779e-01,  4.0610e-01, -3.8101e-01,
         -3.5001e-01,  1.8406e-01, -2.3661e-01,  1.3699e-01,  1.6083e-01,
         -3.8866e-02,  3.5364e-02, -2.0448e-01,  1.4462e-01,  4.8048e-02,
          4.5269e-02,  1.4281e+00, -7.5085e-01,  5.7585e-01,  7.1849e-01,
          8.3947e-01, -3.4320e-01,  7.4718e-01, -5.6454e-02,  9.5048e-01,
          8.3230e-04,  4.6258e-01, -7.1993e-01,  6.7051e-01,  5.8890e-01,
          3.5488e-01, -1.6777e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1070))
tensor([[-1.5205e-01, -5.5718e-01,  1.6033e-01, -2.3392e-01,  2.7771e+00,
          3.1176e+00,  3.7682e+00,  1.2236e+00,  3.3103e-01, -2.7663e-02,
          1.7371e+00,  2.9475e-01, -2.6792e-02, -1.6122e-01, -1.9141e-03,
         -5.9143e-03, -1.0939e-02,  1.7570e-01,  1.4473e-01,  6.0367e-02,
         -2.9851e-03,  8.7112e-02,  6.6991e-01,  1.8201e-01, -1.2580e-03,
         -7.9702e-03,  7.1371e-03,  5.7044e-03,  6.0602e-02,  1.0833e-01,
          6.6253e-02,  1.1687e+00,  5.9774e-01,  6.9686e-03,  3.1098e-02,
         -2.5062e-02,  1.4018e-01,  8.4154e-02, -2.5924e-02,  7.7488e-03,
          9.4030e-02,  2.4796e-02,  1.8035e-01,  8.9951e-02,  8.0608e-02,
          3.1868e-01, -9.4752e-03,  2.4795e-01,  5.3570e-01, -9.5420e-01,
         -6.8146e-01,  2.3314e-01,  1.2814e+00, -1.0577e+00, -1.1427e+00,
          4.7381e-02, -1.4948e+00,  2.3489e-01, -2.0821e-02,  3.0141e-02,
          5.7866e-01, -4.0155e-01, -3.7005e-01,  1.0599e+00, -1.1894e-01,
          9.1972e-02,  8.3593e-02, -2.3065e-02,  2.8264e-02,  4.1826e-02,
         -2.2717e-02,  1.6537e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1075))
tensor([[ 5.9041e-01, -1.9719e-03,  1.3190e+00,  2.9142e-01,  9.6533e-01,
          1.2672e-01,  1.3001e+00,  1.0692e+00,  1.2057e+00,  1.3477e-01,
          1.2961e+00,  4.7008e-01,  2.6532e-02, -3.2852e-02,  1.9660e-02,
          2.8211e-02, -3.8150e-02,  3.2493e-02,  8.7943e-02,  8.1768e-03,
          3.9680e-04,  2.9676e-02,  3.9726e-02,  1.8057e-02,  2.8668e-01,
         -3.2779e-01,  3.4690e-02,  4.4125e-01, -3.9405e-01,  5.8988e-02,
         -1.3464e-01, -5.3189e-01,  6.4171e-01, -1.9978e-02, -6.4048e-02,
          2.7682e-02, -1.6020e-03,  7.9009e-02, -2.0584e-01, -2.5910e-02,
          2.6878e-01, -2.2073e-02, -2.8974e-01,  3.2811e-01,  1.3388e-01,
          1.0942e-01, -5.5339e-02,  1.1724e+00, -1.4283e+00, -3.6157e-02,
          8.4847e-01, -1.3225e+00,  3.9390e-01, -5.4417e-01, -4.7107e-01,
         -8.7138e-01,  1.4471e-01,  3.8864e-02,  6.4788e-02, -5.8025e-02,
          3.2397e-01, -3.1066e-01,  4.9605e-01, -5.4852e-01, -7.0218e-02,
          2.3908e-01,  2.7624e-01, -1.2127e-01, -2.6491e-02, -5.6458e-01,
          5.8535e-02, -1.1314e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1078))
tensor([[ 1.0783e+00,  1.0219e+00,  1.2126e+00, -9.7282e-01,  2.0610e+00,
          1.2524e+00,  1.4523e+00,  1.2618e+00, -3.6790e-01,  1.0664e-01,
          8.9595e-02,  7.1655e-01, -3.9541e-01,  1.6604e-01,  8.8571e-02,
         -3.0625e-02, -1.1058e-01,  5.7390e-02,  9.1163e-03, -3.3971e-02,
         -3.7437e-01,  6.5205e-01,  3.4084e-02,  4.1759e-03, -3.2674e-02,
         -2.2888e-02,  2.3086e-01, -8.9908e-02,  2.9772e-03, -6.2466e-01,
         -1.6772e-02,  1.1512e+00, -4.9576e-01,  2.7709e-01,  7.5495e-02,
         -4.6528e-01,  3.1713e-01,  1.1100e-01, -1.4625e-01,  1.2480e-03,
          2.1508e-03, -5.3432e-02, -2.1829e-01,  4.3857e-01,  3.4416e-01,
         -1.1317e-01,  3.1615e-01,  2.1182e-02,  6.2709e-01,  6.2609e-01,
         -1.9562e-01, -4.6201e-01,  8.5121e-01, -9.1810e-01, -9.9863e-01,
         -2.1675e-01,  1.6900e+00, -5.4496e-01, -1.7869e-03,  1.2578e+00,
          1.4443e+00, -8.6866e-01,  2.6350e-01, -4.2710e-01,  2.1692e-02,
         -1.4373e-01,  1.1835e-01, -9.2030e-02,  7.5198e-02, -2.5430e-02,
         -7.5128e-02, -3.9079e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1081))
tensor([[ 0.8822,  0.2990,  1.0172,  1.2498,  0.0486,  1.2037, -0.3748, -0.3430,
          0.5905,  0.3238, -0.5506,  2.0226, -0.0909,  0.0519,  0.0358,  0.0544,
         -0.0257, -0.0255, -0.0280,  0.4836, -0.0814, -0.1077, -0.1451, -0.0937,
         -0.2926,  0.1614,  0.4054,  0.1572, -0.2778, -0.0920,  0.0254, -0.0149,
          0.0174, -0.7226,  0.0260,  0.1033,  0.1551,  0.1018,  0.3387,  0.5537,
          0.0633,  0.8395,  0.5270, -1.0047,  0.5025, -0.2863,  0.3338, -0.0126,
         -0.4269,  0.2381, -1.0115,  0.3876, -0.1621,  0.1655, -0.2481, -0.2083,
          0.1838,  0.5739, -0.2108, -0.5077, -0.3298,  0.1095, -0.1507, -0.0511,
         -0.1834,  0.4469,  0.5893,  0.3716, -0.2991,  0.1022,  0.4511,  0.3534]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1081))
tensor([[ 1.2305e+00,  4.1900e-01,  4.0617e-01, -5.2971e-03,  1.2524e+00,
         -4.1923e-02,  1.6463e+00,  1.4702e+00,  5.3665e-01,  6.7770e-01,
          1.8484e+00,  1.8985e+00,  1.8250e-02, -3.5002e-03, -8.8760e-02,
         -1.2026e-02, -2.8853e-03, -5.2134e-02,  1.2636e-02,  8.8511e-01,
          3.2972e-02, -2.3273e-02,  1.6018e-02,  5.4994e-02, -9.8530e-03,
         -2.0905e-02,  1.5378e-02, -3.2785e-02, -2.7325e-02,  1.3428e-04,
          6.4920e-02,  9.2103e-01, -7.4721e-01,  1.3071e-01,  1.8654e-02,
          4.7759e-02,  1.7225e-01,  2.1521e-01, -1.1617e-02, -3.0227e-02,
          2.1466e-01, -6.1621e-01,  1.3481e+00,  5.6003e-02, -1.5875e+00,
          5.1818e-01, -3.2892e-01, -1.7492e-01,  1.1247e-01,  1.1204e-01,
          2.8982e-03, -4.4446e-06,  1.8589e-02, -9.2568e-01, -1.0068e+00,
         -1.0961e+00,  1.2660e-01,  4.0987e-01,  1.3930e-02,  9.1978e-01,
          1.3464e+00, -5.8360e-01,  1.1715e+00, -5.3666e-01, -5.7615e-02,
          8.0144e-02, -7.4246e-01,  5.3644e-01,  1.0612e+00, -4.1573e-01,
          1.2172e+00, -2.0458e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1086))
tensor([[-2.6597e-01,  4.3661e-02, -7.7880e-02, -1.5062e-01,  1.7739e+00,
          1.3331e+00, -6.4849e-01, -7.2609e-01,  2.2916e+00, -2.9840e+00,
          2.4666e+00,  1.8570e+00, -2.3599e-02, -7.4409e-02,  7.0047e-02,
          9.2989e-04,  9.3154e-02,  1.0821e-01, -2.7711e-02,  1.5989e-04,
         -7.1695e-06,  2.6982e-03, -1.7151e-02, -3.4000e-02, -2.9478e-01,
         -1.9305e-01, -1.6147e-01,  3.0871e-01, -2.6615e-02, -2.3688e-02,
         -8.4282e-01, -7.3425e-02,  1.8899e-02,  6.7919e-01, -1.1372e-01,
         -2.3570e-01,  2.0966e-01,  1.0558e-01, -4.8542e-01,  4.3689e-01,
         -9.2714e-01, -1.0593e-01, -2.0501e-01,  1.3961e-01,  1.3923e-01,
         -2.3902e-02,  6.4571e-04, -1.0633e-01,  9.0158e-02,  9.3685e-02,
          5.6599e-02, -4.3068e-02,  2.3214e+00, -5.4712e-01,  7.6846e-01,
         -1.1495e-01,  4.2112e-01,  8.3125e-01, -7.9367e-01,  1.1918e+00,
         -4.4670e-01,  7.2606e-02, -3.1129e-02, -1.3092e-01,  2.8898e-01,
          6.8914e-01, -3.0817e-01, -7.6522e-03,  2.0894e-02,  6.6410e-01,
          6.5337e-01, -6.5513e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1088))
tensor([[ 4.1994e-01, -3.0128e-01,  1.7774e-01, -3.6099e-01,  2.8910e+00,
          2.7761e-01,  5.0423e-01,  3.2115e-01,  1.8716e+00, -1.2804e+00,
          3.7489e-01,  1.0911e+00, -9.3856e-02, -2.0718e-02,  5.3853e-02,
          3.4987e-02,  7.6844e-02, -6.1874e-02,  3.3844e-02, -1.7444e-02,
          7.5225e-02,  6.2458e-02, -9.3875e-02,  7.4879e-02, -4.6284e-01,
         -2.9487e-01, -1.5224e-01,  1.7317e-01, -5.0778e-02, -1.9540e-01,
          1.4913e+00, -1.3797e-01,  2.3958e-01,  2.5645e-01, -3.9280e-01,
         -1.0820e-01, -4.2122e-02, -1.3564e-03, -3.8993e-01,  1.7415e-01,
         -1.1026e-02, -9.2212e-02, -1.5873e-02,  2.0084e-01,  2.9987e-02,
          7.3693e-02, -1.1212e-01, -5.9122e-01,  2.8374e-01, -2.2926e-01,
          3.9335e-01, -3.5056e-02,  6.5213e-01,  1.1228e+00,  6.3793e-01,
          6.0650e-01,  5.0222e-01,  2.9635e-01, -4.8294e-01,  1.5108e-01,
          1.3850e-03, -1.9280e-02,  5.7104e-01, -3.5600e-01,  8.8179e-01,
         -6.6151e-01,  5.3267e-02, -1.8640e-02,  8.9311e-01, -4.8809e-01,
         -3.8498e-01,  3.2258e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1088))
tensor([[ 1.6836e+00, -1.1501e+00,  8.0788e-01, -4.0834e-01,  6.3567e-01,
          3.2605e-01,  2.3392e+00,  2.2434e+00,  4.0903e-01,  4.3858e-01,
          2.8409e+00,  2.0287e-02,  5.7405e-01, -6.4118e-02,  5.2270e-02,
          2.0236e-01,  9.0309e-02, -6.1020e-02,  1.4205e-01, -3.5364e-02,
          2.6582e-01, -1.2779e-01, -4.5334e-02,  2.2217e-02, -3.2101e-02,
          1.1727e-02, -1.3150e-03, -4.2159e-02,  2.5716e-02,  1.0811e-01,
         -1.4335e-01, -5.6478e-01,  6.4104e-01, -2.3369e-02,  4.1046e-02,
          3.8549e-03, -8.4391e-02, -1.3421e-01, -4.0473e-01,  5.9777e-02,
         -2.4447e-01, -1.0560e-01, -7.9313e-01, -2.7942e-02,  7.8995e-01,
          1.1876e+00,  2.2583e-01,  5.5717e-02,  6.2946e-02,  1.2672e-01,
         -1.4091e-01, -3.9816e-02,  3.3550e-01, -4.9505e-01, -7.2441e-01,
         -9.7467e-01, -2.3021e-01,  1.4832e-01, -5.7680e-02, -4.1947e-02,
          1.2627e+00, -2.6382e-01,  1.4450e+00, -3.6336e-01,  4.4723e-01,
          5.3783e-01, -1.9540e-01,  2.1907e-01,  1.2042e+00, -1.7399e-01,
         -9.7861e-02, -1.4300e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1088))
tensor([[ 3.8031e-01, -8.8585e-01,  1.7372e-01, -3.2498e-03,  1.2772e+00,
          1.3333e+00,  1.4585e+00,  1.7770e+00,  6.3336e-01, -6.2072e-01,
          9.0059e-01,  1.2400e+00, -4.7500e-02,  1.0392e-01,  1.0253e-01,
          6.1795e-02, -2.1768e-02,  1.9783e-02,  7.4690e-02,  7.5726e-01,
          2.0713e-01, -2.3480e-02,  1.1872e-02,  5.1664e-02, -1.9923e-02,
         -4.9218e-02, -2.8229e-02, -4.4405e-02,  1.7844e-02,  7.3886e-04,
          1.9338e-01, -2.1196e-01,  3.3183e-01, -6.5129e-01, -2.9775e-01,
         -3.0615e-01, -5.4326e-01, -5.1581e-01,  1.0358e-01, -1.3223e-01,
         -1.0196e-01,  2.4413e-01,  1.7585e+00, -5.6883e-01, -1.3589e+00,
         -1.2107e+00,  5.1632e-01, -2.1551e-01,  2.0765e-01,  5.0558e-02,
         -7.7534e-03,  6.7536e-03,  1.0911e-01,  8.2470e-02,  4.6223e-01,
          1.1131e+00,  1.1910e+00,  3.8286e-01,  4.7399e-01, -5.4570e-01,
          5.4652e-02,  2.3532e-01,  5.8214e-01,  6.9159e-02,  3.7091e-02,
          1.4668e-01, -2.2951e-01,  2.8143e-02,  3.8391e-01, -6.9255e-02,
          5.6038e-02,  2.0637e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1089))
tensor([[ 0.1018,  0.0547, -0.1688, -0.1051,  0.2496,  0.1165,  0.6718,  1.4015,
          0.6751, -0.2392,  2.3780,  1.2814, -0.0278, -0.0461, -0.0260,  0.0934,
         -0.1410,  0.3377,  0.2463,  0.0682, -0.0091, -0.0277, -0.1285,  0.0091,
         -0.0178,  0.1746,  0.0882,  0.1744,  0.2972,  0.0984,  0.0264,  0.0382,
         -0.1315, -0.0202,  0.1709,  0.2051,  0.1322,  0.0328, -0.0557, -0.0747,
          0.0899,  0.5076, -0.1590,  0.1153,  0.1119, -0.1220,  0.0612,  1.0602,
         -0.9678, -0.1651,  0.6107, -0.8931, -0.1613,  0.1654,  0.0419, -0.1437,
          0.1185, -0.0481,  0.5249, -0.9966,  0.4430, -0.1356,  1.2170, -0.6291,
         -0.1553,  0.1567, -0.5576, -0.0462,  0.3455, -1.3532,  0.6497,  0.6658]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1093))
tensor([[ 0.0309,  0.5469,  0.2411,  0.0924,  0.8185,  1.9109,  0.3487,  0.5561,
          1.2296,  0.0914,  1.5234,  0.6496,  0.0923, -0.2507, -0.1612,  0.0349,
         -0.0830,  0.1639,  0.1466,  0.1815, -0.0649,  0.0042,  0.0279,  0.0045,
         -0.0473, -0.0034, -0.0384, -0.0861, -0.0062,  0.0222, -0.1210, -0.0473,
         -0.0045,  0.7734, -0.0636,  0.0044, -0.0394, -0.0830, -0.0532,  0.4154,
         -0.6122,  0.0288,  0.2936, -0.3659, -0.0561, -0.4163,  0.2977, -0.1210,
          0.1341,  0.1028, -0.1191,  0.0902, -0.4353,  0.3034, -0.0269, -0.0274,
          0.4020,  0.9870,  1.1737,  0.3106, -0.2893,  0.1633, -0.2894,  0.2153,
          1.7488, -0.4367, -0.3212, -0.0041, -0.1023,  0.3792, -0.8858,  0.1286]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1098))
tensor([[ 0.6562,  0.4655,  1.9787,  0.0452, -0.0156,  0.2129,  1.7437,  0.9544,
          0.2273,  0.0939,  1.7174, -1.2450,  0.3167, -0.0489, -0.0173,  0.2277,
         -0.1547, -0.0858, -0.0719, -0.0071,  0.2908, -0.3547, -0.0490, -0.0321,
         -0.1321,  0.3055, -0.0817, -0.0104,  0.3145,  0.3741, -0.0191,  0.0551,
         -0.0241,  0.0256, -0.0383,  0.0159,  0.0732,  0.5520, -0.0869,  0.0646,
          0.5256, -0.1044, -0.3734,  0.4291,  0.1376, -0.2481,  0.1409,  0.3702,
          0.7929, -1.0647, -1.5736,  0.3293, -0.0862,  0.0715,  0.0639,  0.0698,
         -0.1982,  0.1757, -0.0562,  0.0243, -0.3857,  0.5532,  0.2717,  0.1310,
         -0.3729,  0.1771,  0.0450,  0.0634,  1.0801,  0.6977,  0.6532, -0.1968]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1106))
tensor([[ 1.6883,  2.1775,  2.4780, -2.1987, -0.3604,  0.1950,  0.0188, -0.1764,
          2.2689, -0.1325, -0.7631,  1.9859,  0.8148, -0.0488, -0.0396,  0.0373,
          0.0417, -0.0795, -0.0234, -0.1215,  0.8931, -0.6623, -0.1036, -0.1004,
         -0.2052,  0.0299,  0.4774, -0.2445,  0.4028,  0.7076, -0.1125, -0.0315,
          0.0182,  0.0259,  0.0806,  0.0722, -0.0096,  0.0287, -0.4136,  0.2290,
          0.1916, -0.0712,  0.4367, -0.3086,  1.7961,  0.4144,  0.4875,  0.6347,
          0.9635, -0.5639,  0.4898, -0.7425, -0.1704,  0.0146, -0.0670, -0.2414,
         -0.2316,  0.1949, -0.0048,  0.0291, -0.1663,  0.0922, -0.0203, -0.0593,
          0.2533,  0.2083, -1.4655,  0.4272, -0.3591, -0.0120,  0.5777, -0.5311]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1109))
tensor([[ 2.0685e-01, -1.6118e-01,  1.6109e+00,  2.4750e-01,  2.7181e-02,
          1.7604e-01,  3.0024e-01,  1.2113e-01,  9.2221e-01, -4.1073e-01,
          2.0302e+00,  2.3970e-01, -2.1978e-02,  1.9540e-02, -3.6398e-02,
          1.3887e-01,  7.4598e-02, -2.1716e-01,  2.6588e-01, -5.0522e-02,
         -1.0974e-03, -7.5211e-01,  1.3882e-02,  1.1281e-01,  2.6692e-01,
         -1.0366e-01, -1.2795e-01, -6.6526e-02, -1.8557e-01, -9.5669e-03,
         -2.2763e-02, -5.5770e-02,  1.4147e-03,  2.7112e-02, -5.2919e-03,
         -1.4760e-03,  1.2102e-01, -7.6484e-01,  3.6716e-01, -2.7050e-01,
          2.8363e-01,  2.6278e-01, -2.2368e-01,  9.8339e-02,  8.1327e-02,
          7.9291e-02, -1.3804e-03,  1.3034e+00,  6.2523e-01, -3.2223e-01,
         -9.8466e-01,  1.7050e-01, -3.2961e-01,  1.8687e-01,  1.6680e-01,
         -8.7116e-01, -2.7948e-01,  2.1678e-01,  8.4774e-02, -1.3353e-02,
         -1.0058e-01,  2.7843e-01,  1.4218e-01, -3.4855e-01, -3.3406e-01,
          3.8563e-01,  2.6437e-01, -1.4278e-01,  1.9824e+00,  1.5063e-01,
         -3.1595e-01,  1.6694e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1112))
tensor([[ 0.8763,  0.7313,  0.1348, -0.2509,  1.1958,  0.0675,  0.5585, -0.7668,
          0.0770,  1.3407,  0.8027,  0.6101, -0.1525,  0.1843,  0.2267,  0.1995,
         -0.1206, -0.1178, -0.2289,  0.0213, -0.1789,  0.1197,  0.0938, -0.0086,
          0.0606, -0.0120, -0.1434, -0.0116,  0.5132,  0.0837,  0.0835,  0.2944,
          0.4675, -0.0216,  0.0032,  0.0391, -0.0193, -0.0222,  0.2074,  0.4820,
         -0.0616,  0.5116, -0.3632,  0.3725,  0.3767, -0.2157,  0.1863,  0.5134,
         -0.2288, -0.6176, -0.5690,  0.0783,  0.2080,  0.0714,  0.9426, -0.7686,
         -0.0623,  0.0603,  0.0468,  0.0612,  0.0673, -0.1166, -0.3419,  0.3165,
          0.6806, -0.3126,  0.3810,  0.0515,  0.5022, -0.5192,  0.6197,  0.4366]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1121))
tensor([[ 1.7121e-01,  7.6333e-02,  2.0472e+00,  9.0685e-01,  1.0335e+00,
          1.9938e-01,  6.6005e-01, -7.0930e-01,  1.1566e-01,  1.1123e+00,
          2.2832e+00, -1.1825e-01,  3.6913e-04,  7.7194e-03,  5.4064e-02,
          3.6726e-02,  7.0633e-03,  1.0209e-02,  9.7631e-02, -5.4907e-02,
          2.3850e-02,  3.4731e-01,  9.3256e-03,  5.6056e-02,  2.6939e-02,
          6.1259e-02,  2.5855e-02,  5.9310e-02,  4.4123e-01,  6.5593e-01,
         -1.5518e-01,  4.9857e-01,  7.2475e-01,  2.5287e-02,  6.7557e-03,
          2.6397e-02,  5.4362e-01, -3.3141e-01, -1.5870e-01, -3.7308e-01,
          1.5007e-01, -3.7671e-01, -1.1141e-01,  9.1963e-02,  1.0957e-01,
         -4.9379e-02,  5.3783e-02,  1.1705e+00, -6.5081e-01,  1.1380e+00,
         -5.1845e-01,  7.6980e-01, -4.7456e-01, -2.7003e-01, -1.5887e-01,
          3.3538e-01, -2.4609e-01,  2.0622e-01,  2.5825e-01, -8.7242e-02,
          9.4738e-01, -3.0274e-01, -1.8647e+00,  7.0358e-01, -2.6533e-01,
          3.3785e-01,  2.9952e-01,  4.9200e-01,  1.9324e+00, -1.0711e+00,
          3.4038e-01,  3.1568e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1125))
tensor([[ 2.8074,  1.9953,  0.1001,  0.0098,  0.2057,  0.3431,  1.3476,  0.8027,
          0.2496,  0.6706,  0.0360,  0.7600,  0.9634, -0.3216, -0.1007, -0.3355,
          0.0697,  0.0779, -0.1548,  0.2406,  0.9343, -0.0217,  0.0083,  0.0057,
          0.0209,  0.0113,  0.0031,  0.0127, -0.0049, -0.0029, -0.0215, -0.3401,
          0.3286,  0.0334,  0.4707, -0.1649, -0.1700, -0.0201,  0.2663, -0.1097,
         -0.1615, -0.1450,  0.2334,  1.3514,  0.1696,  0.4911,  0.6764, -0.1251,
          0.1119,  0.0898, -0.0739,  0.0389,  1.7907, -0.8807, -0.2661, -0.1382,
          0.2591, -0.0650,  1.0052,  0.2507, -0.8799,  0.0382, -0.1806, -0.0935,
          1.6579, -0.6072,  0.9592,  0.1155, -0.0042, -0.2163,  0.0355,  0.4727]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1126))
tensor([[ 3.1207e-01, -2.4616e-01,  1.2880e+00, -1.3447e+00,  3.0506e+00,
         -3.5509e-02,  6.2941e-01, -6.2971e-02,  1.9685e-01,  9.1073e-02,
          8.6671e-02, -1.7723e-01,  2.5404e-01,  8.0921e-02,  1.9974e-02,
          6.4822e-02, -8.1394e-02,  1.7762e-03,  6.5375e-02, -3.1037e-01,
         -5.7555e-01,  2.7758e-01,  3.8520e-02, -6.7930e-03, -2.3256e-01,
         -2.4965e-01,  8.7967e-02, -9.5196e-02,  1.8525e-02, -2.9954e-01,
         -3.6101e-01, -1.0163e+00,  6.7106e-02, -2.2669e-02,  7.0004e-02,
          2.7730e-04, -9.7887e-02, -4.7815e-02, -4.5916e-02,  6.3833e-03,
          1.2035e-02, -6.9429e-03,  1.0796e+00,  1.1819e+00, -1.4353e+00,
         -4.0660e-01, -1.6391e-01, -7.4437e-01,  9.2351e-02,  6.0863e-01,
          4.9026e-01, -1.9511e-01,  9.1997e-01,  2.6979e-01, -1.2720e+00,
         -1.4553e-01, -2.3249e-01,  1.4240e-01, -4.6595e-02,  2.9025e-02,
          2.6011e+00, -1.6231e+00,  2.8497e-01, -2.3876e-01, -2.4493e-01,
          1.5441e-01, -1.2658e-01,  4.1777e-02, -1.1260e-01,  1.0883e-01,
         -2.2324e-01,  1.3638e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1127))
tensor([[ 1.5624e+00, -3.8455e-01,  1.8377e+00,  9.5425e-01,  4.8685e-01,
          1.1604e-01,  1.3935e-01,  7.9002e-01,  6.6608e-01,  1.0018e+00,
          6.1802e-01,  6.2969e-01, -1.9961e-01, -1.3896e-03, -6.1920e-02,
          5.3064e-02, -1.1883e-01, -4.5528e-02,  9.4942e-02,  8.8661e-01,
          1.8382e-01, -4.7150e-01,  4.8333e-02, -2.2886e-02,  8.9477e-02,
          2.6325e-01, -4.0359e-01,  1.2525e-01,  1.8348e-02, -5.1558e-01,
          3.1100e-02, -3.0823e-02, -5.4619e-03, -2.1392e-02,  6.5293e-02,
          7.2506e-02,  3.2579e-01,  1.8538e-02, -2.8062e-01, -2.1621e-01,
          1.0831e-01,  1.7755e-01,  1.3561e+00, -9.7919e-02, -1.5292e+00,
         -1.2180e+00,  5.4540e-01, -1.0669e-01,  1.1421e+00,  3.4159e-01,
          4.4622e-01,  4.3810e-01, -2.2217e-01,  1.9283e-01, -2.5181e-01,
          1.8578e-01,  4.3929e-02,  6.5537e-02,  6.9715e-02,  1.9481e-03,
          8.4604e-02, -6.6784e-02,  2.1969e-01,  9.2282e-02,  1.5337e+00,
         -8.6246e-01, -1.8052e+00,  9.4219e-01, -4.4355e-01,  2.7962e-01,
          6.8485e-01, -4.4884e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1129))
tensor([[ 4.4064e-01, -7.8182e-01, -1.0203e-01, -6.3402e-01, -7.4292e-01,
          7.6516e-01,  5.7395e-01, -5.3381e-01,  3.3274e+00, -3.0999e-01,
          1.3394e+00,  1.3297e+00, -5.5557e-02,  9.9003e-02, -2.1760e-02,
          6.3787e-02,  1.7147e-01,  1.6798e-01, -2.3442e-01,  8.1003e-03,
         -8.5766e-02,  1.3821e-01, -3.4800e-01,  2.0841e-01, -7.6794e-02,
         -1.3638e-01,  1.3391e-01,  4.6788e-02,  8.8243e-02, -1.6013e-01,
          2.0477e-01, -5.6054e-02,  3.6914e-02, -2.5679e-03,  2.9475e-02,
          2.3599e-02, -5.2347e-02,  1.3304e-01, -7.9426e-01, -5.3582e-01,
         -3.2182e-01,  2.7484e-01, -3.4982e-01,  3.6434e-02,  7.2045e-02,
          3.5370e-01, -1.4682e-01,  6.8684e-01, -3.8448e-01, -3.8405e-01,
         -4.5664e-01,  5.2044e-01, -3.2621e-01, -3.8424e-02,  4.3982e-02,
          2.6039e-02, -4.8890e-01,  3.3830e-01, -8.9085e-01,  4.6275e-01,
         -2.8321e-01,  1.8522e-01,  3.2911e-01, -2.7730e-01,  8.0995e-01,
          1.0999e+00, -2.5209e-01, -2.2444e-01,  1.0325e+00, -1.9396e-01,
         -2.5649e-01,  5.6402e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1131))
tensor([[ 1.3617, -0.9357,  0.2965, -0.0021,  1.0838,  0.1095,  0.2978, -0.9714,
          0.5328, -1.3288, -0.2854,  0.9335, -0.0840, -0.3150, -0.1715,  0.3318,
          0.1477,  0.2194, -0.2466,  0.4229,  0.0533, -0.0197,  0.0371,  0.0297,
          0.0902, -0.0213, -0.1182, -0.1772, -0.0173, -0.0462,  0.0523, -0.5022,
          0.1226, -0.0241, -0.0331,  0.0335, -0.0346, -0.0816,  0.2234, -0.3210,
         -0.0732,  0.9074,  1.0259, -0.9127, -0.9160, -1.3097,  1.0253, -0.2509,
          0.1761,  0.2210, -0.1027,  0.0503,  1.4242, -0.8014,  1.1255, -0.5270,
         -0.1838,  0.1200,  0.1000, -0.0923,  0.4723, -0.1489,  0.5187, -0.2600,
          1.3739, -0.5167, -0.7953, -0.0833, -0.0795,  0.0883,  0.3538,  0.6483]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1135))
tensor([[ 5.9484e-01, -4.4599e-01,  1.7209e+00,  8.9673e-01, -3.1631e-01,
          1.4185e+00,  3.5967e-01,  1.8648e-01,  2.3111e-01,  7.5998e-01,
          3.8777e+00,  3.6323e-01,  1.1591e-01, -7.8528e-02,  6.2495e-02,
          2.5164e-01,  1.9923e-01, -8.3915e-02,  2.4825e-02, -3.6442e-02,
         -1.4207e-01, -4.6458e-01, -1.3075e-01,  2.1642e-01, -6.0379e-02,
         -2.3517e-02,  2.1806e-02, -1.9167e-01, -3.1529e-01, -4.5851e-01,
         -1.2913e-01, -4.6096e-02, -6.6286e-03, -1.9477e-01, -1.1755e-01,
          4.9629e-01, -3.2883e-02,  1.9718e-02,  1.3866e-01,  3.7310e-01,
          1.3311e+00,  3.2747e-01, -7.4184e-01,  3.6584e-01, -1.5415e-01,
          4.8366e-01,  4.8025e-02,  6.4804e-01,  8.3634e-01, -2.1456e-01,
          3.4704e-01,  6.0496e-01, -1.6094e-01,  3.5680e-03,  8.7352e-02,
         -1.3550e-01,  4.4672e-02,  2.0187e-02, -3.3707e-01, -4.4456e-01,
         -2.9022e-01,  1.4998e-01, -2.0870e-01,  1.4164e-01, -5.2892e-02,
          7.0626e-02,  2.7353e-01,  1.2560e-02,  8.5778e-01,  1.3226e+00,
          1.4067e+00, -6.9115e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1141))
tensor([[ 4.9983e-01,  3.3913e-01,  8.8760e-01,  6.4544e-01,  2.8272e-01,
          3.6973e-01,  2.5702e-01, -2.9704e-01,  1.7088e-01,  9.1415e-02,
          2.3307e+00,  2.2110e-01,  2.3543e-01, -1.6155e-01, -1.5775e-01,
          1.1585e-01, -6.4196e-02, -2.1755e-01, -2.6105e-01, -1.7876e-01,
          2.5239e-01,  6.3497e-02, -1.3403e-01, -1.9230e-02, -1.0719e-02,
         -5.9564e-02,  3.1304e-03,  1.5905e-03,  4.0366e-01, -2.2196e-01,
         -9.9738e-02, -1.2328e-01,  1.3419e-01,  2.5036e-02, -5.3109e-02,
          2.3500e-02, -2.5250e-01, -2.7056e-01, -2.0447e-02,  1.2678e-02,
          8.7238e-01, -2.1997e-02,  7.8515e-02, -7.0142e-01,  6.9886e-01,
          4.1691e-02, -3.9558e-03,  5.2447e-01,  1.4779e-01, -6.0771e-01,
         -2.3573e-01, -5.2111e-01, -2.5272e-01,  2.8324e-01,  1.6025e-01,
          3.9568e-01, -2.2234e-01,  1.8467e-01,  1.5408e-03, -3.3657e-03,
          5.8901e-01, -2.7494e-01,  1.1974e+00, -6.2817e-01, -7.7304e-02,
          6.7076e-02,  9.7398e-03,  2.0038e-03,  7.2360e-01,  1.5920e-01,
         -1.8254e-01,  1.1084e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1142))
tensor([[ 3.0341e-01, -1.9114e-01,  1.5082e+00,  8.4471e-01,  2.8677e-01,
          6.9339e-01,  1.9909e+00,  9.7508e-02,  9.6587e-01,  9.4393e-01,
          4.0079e-01,  6.7861e-01,  9.8747e-02, -4.6490e-02,  5.3132e-04,
         -4.7651e-02, -1.0291e-01, -1.2032e-01,  1.0689e-01,  2.9416e-02,
         -1.1489e-01,  8.9490e-01,  2.9897e-02,  5.8076e-02, -1.7115e-02,
          2.6404e-01, -2.1046e-01, -5.9743e-02, -8.4316e-02,  4.7685e-01,
          2.6826e-02, -2.2578e-02,  2.6668e-02,  8.9793e-02,  3.9361e-01,
         -1.8297e-01, -6.5732e-01, -1.2778e-01, -4.0875e-01, -1.6506e-01,
         -1.5627e-01, -1.2984e-01, -5.4825e-01, -1.8711e-01,  2.5452e-01,
          5.5281e-01, -1.5816e-02,  5.6803e-01,  1.0259e+00,  5.3254e-01,
          2.3046e-01,  1.7198e-01, -1.5003e-01,  1.5851e-01, -1.3070e-02,
          9.6795e-03,  1.6660e-01,  1.7012e-03, -4.8135e-01, -2.7500e-01,
         -3.8208e-01,  6.5933e-01,  1.0006e-01, -4.2864e-02,  1.3016e+00,
         -6.1830e-01,  3.8376e-01, -9.2222e-02, -2.1649e-01,  1.9959e-01,
         -1.2842e-01,  1.6264e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1147))
tensor([[ 0.5162,  0.2395,  1.5825,  1.1826,  0.4018,  0.3488,  0.4403,  0.0912,
          1.7010, -1.9148, -0.0182,  2.8111,  0.0971, -0.0092,  0.0651, -0.0087,
          0.0962, -0.0029,  0.0416,  0.2804, -0.0704, -0.1248, -0.0110, -0.0136,
         -0.1563,  0.3344,  0.1091, -0.3064, -0.6468, -0.1024, -0.1826, -0.0206,
          0.0267, -0.0256, -0.0252, -0.0316,  0.0510, -0.0173,  0.3330, -0.6569,
         -0.1595,  1.2530,  0.0130, -0.1618, -0.1670, -0.2257,  0.2944,  0.4782,
         -0.8426, -0.3230,  0.0281, -0.3678,  0.3943,  0.5065, -0.8627, -0.0803,
         -0.2394,  0.1519, -0.0224, -0.0801, -0.1031,  0.1365, -0.0765, -0.0060,
         -0.3662,  0.4943,  0.2717, -0.7143, -0.1028, -0.0502,  0.7352,  0.7070]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1150))
tensor([[ 0.7927, -0.7056,  2.0487, -1.6985,  0.1772,  0.2413, -0.4581, -0.0409,
          1.5227,  0.7027,  2.5436,  2.1735, -0.1373, -0.0178,  0.0443,  0.0154,
          0.0406,  0.0149, -0.0567,  0.0377,  0.1183,  0.1878,  0.0630, -0.0281,
          0.5178,  0.4795,  0.1037,  0.5826, -0.4600,  0.1991, -0.0287, -0.0043,
          0.0286, -0.0216,  0.1177, -0.1694, -0.1590, -0.0345,  0.1951,  0.0166,
          1.4340, -0.1808, -0.2449,  0.3020,  0.3326,  0.2018, -0.2594, -0.5333,
         -0.1148, -0.3816,  0.9823, -0.1106, -0.2780,  0.1724, -0.0169, -1.0346,
         -0.1933,  0.0977, -0.0532, -0.1241,  0.0481, -0.1239,  0.1929, -0.1044,
          0.1978,  0.5808,  1.0426, -0.2930,  1.1241,  0.8526,  1.3034, -1.2810]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1151))
tensor([[ 1.4479, -1.1151, -0.3419, -0.2821,  1.1127,  3.7967,  0.1437,  0.3607,
          2.2751,  0.4564, -0.5512, -0.0172, -0.4842, -0.0162,  0.3793,  0.0400,
          0.1673,  0.0197, -0.0255, -0.0658,  0.4623,  0.1018,  0.0794,  0.0808,
         -0.0405,  0.0876,  0.0201,  0.0380,  0.0223,  0.1157, -0.3224,  0.0124,
         -0.0161,  1.2959,  0.0203,  0.0071,  0.0994, -0.1105, -0.5906, -0.1316,
          0.1249, -0.0585, -0.1730,  0.4039,  0.3991, -0.1390, -0.2990,  0.3776,
         -0.2141, -0.2245,  0.3901, -0.2658, -0.1636,  0.6272, -0.0518, -0.1170,
          0.4000,  1.5135, -1.6700, -0.5332, -0.4462,  0.1641,  0.1192,  0.0358,
          0.4463,  0.3503,  0.8816, -0.3348, -0.3362,  0.0399,  0.5797, -0.2512]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1153))
tensor([[ 0.3243,  1.3636,  1.1305,  0.2451,  1.6431,  0.3585,  0.8306, -0.8610,
          0.5012,  0.0148,  2.0428, -0.0240,  0.1607,  0.3802,  0.3308, -0.0445,
         -0.0719,  0.0759, -0.0329,  0.0443,  0.3200,  0.0587, -0.0300,  0.0364,
         -0.0814, -0.0104, -0.0723,  0.0193,  0.5508,  0.1258, -0.0296,  0.3452,
          0.4121, -0.0229, -0.0167, -0.0124,  0.0835, -0.2135, -0.0198, -0.0076,
          0.4100, -0.0079, -0.2588,  0.3047, -0.0064, -0.7301,  0.1400,  0.8529,
         -1.0034, -0.2583, -0.9473,  0.8422, -0.5612, -0.0024, -0.1063,  0.1961,
         -0.3131,  0.1818, -0.3063,  0.2920,  0.8640, -0.3098, -1.4174,  0.4995,
         -0.3323,  0.2579,  0.0676, -0.1224,  1.7217, -0.4199,  0.2369,  0.0609]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1161))
tensor([[ 1.6554e+00,  5.0919e-01,  4.0745e-02,  2.8618e-02,  5.6106e-01,
          1.1181e+00,  1.7638e+00, -1.1259e+00,  1.8460e-01, -4.3851e-01,
          1.0985e+00,  8.3405e-01, -2.7802e-02, -1.8148e-02, -1.9420e-01,
         -2.4309e-01, -3.8090e-01, -6.7661e-01, -8.9768e-02,  2.3438e-01,
          3.8209e-01, -2.2775e-02, -1.7097e-01, -3.4232e-02,  4.8972e-02,
         -2.9565e-02,  6.1472e-04, -7.5735e-03, -1.7220e-02, -1.4310e-03,
         -4.0017e-01, -5.3398e-02, -9.9174e-02,  6.4787e-02,  1.6210e-01,
          1.5720e-01,  4.1478e-01, -2.0778e-01, -2.9870e-01,  3.9499e-01,
          1.4020e-01, -5.6967e-01, -1.3700e-01,  6.8706e-02, -3.8931e-01,
          1.7657e-01, -4.9149e-01, -2.1846e-01,  2.1793e-01,  5.5324e-02,
         -6.6484e-02,  2.8674e-02,  4.7590e-01,  4.7357e-01,  8.1036e-01,
         -5.9930e-01, -6.7991e-01,  2.7829e-01,  8.7143e-02, -8.1077e-02,
         -1.0495e+00,  2.9490e-01,  2.8238e-01,  8.6797e-02,  1.8174e+00,
         -5.6161e-01, -1.5145e+00,  3.3961e-01, -5.1571e-02, -7.5244e-02,
          9.0854e-01,  1.2622e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1163))
tensor([[ 0.5241, -0.1327,  0.2129,  0.0384,  1.2720,  1.0479,  1.5223, -0.6979,
          1.5598,  0.3337,  1.0286,  0.6079,  0.0059, -0.0148, -0.0016, -0.3176,
         -0.1412,  0.0052,  0.0274, -0.0331, -0.0238,  0.1684,  0.1000, -0.1856,
          0.2086,  0.0107,  0.0119, -0.0090, -0.2071,  0.0700, -0.4072,  0.0085,
          0.0073,  0.0027, -0.6245,  0.2783, -0.0682,  0.3835,  0.0320,  0.0174,
         -0.2696, -0.0215, -0.0098,  0.0509,  0.0619,  0.1103, -0.0744,  0.3161,
         -0.2285, -0.1306,  0.0234,  0.6137, -0.3304,  0.4180, -0.1537, -0.2102,
          0.9665, -0.4620, -0.6554, -0.2350, -0.7221,  0.3640, -0.5423, -0.4238,
          0.6036, -0.4708,  0.4449, -0.2797, -0.1879,  0.5246, -0.0344,  0.0124]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1167))
tensor([[ 1.2689,  0.7327, -0.2390, -0.2537,  1.5177,  1.3247,  0.4601,  0.7815,
         -0.3987, -0.5450,  0.7764,  2.1833,  0.1848, -0.1969, -0.2347, -0.1811,
          0.0214,  0.0765, -0.1182,  0.3474,  0.1687, -0.0878, -0.0471, -0.0523,
          0.0276, -0.0231, -0.0529, -0.0648,  0.0267, -0.0650, -0.0794,  0.5472,
         -0.3420, -0.5875,  0.0041, -0.8909,  0.4638,  0.2713,  0.0069, -0.1453,
          0.1796,  0.6277,  0.9662,  0.1224, -0.7258,  1.1680, -0.4231, -0.1178,
         -0.0365,  0.0851,  0.0759, -0.1060, -0.2423, -0.3609,  0.3785,  0.1739,
          1.6853,  0.0333, -0.4408,  1.7732,  0.5401, -0.2679,  0.6441, -0.1719,
         -0.1363,  0.2372,  0.2920, -0.1390,  0.3072,  0.0378,  1.2158, -0.7332]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1168))
tensor([[-0.0923, -0.2441,  1.3081,  2.1371,  0.3021,  2.6031,  0.6429, -0.3069,
          0.9909, -1.0681, -0.5801,  1.2474, -0.0884,  0.0377,  0.0683,  0.0389,
          0.0369,  0.0557,  0.0171, -0.0253, -0.0547,  0.5250,  0.3396,  0.3058,
         -0.2457,  0.2184,  0.1535,  0.2208, -0.3329,  0.3194, -0.0177,  0.2354,
         -0.0039, -0.0274,  0.6549,  0.5619,  0.0504,  0.0086,  0.4366, -0.4981,
          0.0295,  0.3167, -0.1560,  0.1229, -0.0325,  0.1316, -0.1403,  0.2661,
          0.2725,  0.1659, -0.1785,  0.6453,  0.8338, -0.4471,  0.2218,  0.1122,
         -0.5125, -0.3555, -1.1693,  0.6452, -0.0239,  0.0820,  0.1706,  0.0540,
          0.9683, -0.2992, -1.0981,  0.3466,  0.2177,  0.2396,  0.5753, -0.0683]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1168))
tensor([[ 1.0923e+00,  4.8230e-01,  2.6337e+00,  3.3540e+00, -4.1771e-02,
         -1.4814e+00,  2.0284e-01, -3.3759e-01,  7.6893e-01,  5.1414e-01,
          4.7360e-01,  3.3402e-04, -1.7679e-02, -3.7381e-02, -5.6897e-02,
          1.1703e-01, -1.7167e-01, -1.7867e-01, -4.9412e-02, -9.7955e-01,
         -9.0997e-02,  7.8140e-01, -1.0497e-01,  5.2976e-02,  3.5222e-01,
         -3.4147e-01,  1.4558e-01,  1.8294e-01, -1.0815e-01,  5.3596e-01,
         -1.9893e-02, -1.0320e-02, -1.7639e-02, -1.1666e-01,  1.6947e-02,
         -7.8861e-03, -2.1189e-02, -3.5682e-02, -1.6083e-01, -8.1006e-02,
         -3.0071e-02, -5.2860e-02,  1.2142e+00, -1.7975e+00,  1.1671e-01,
         -7.0795e-01,  6.8174e-02, -1.2163e-01,  1.7595e-01,  5.5310e-01,
          2.7223e-01,  3.0930e-01, -7.0360e-02,  5.6262e-02, -6.1656e-03,
         -2.9110e-03,  1.7276e-01,  1.3164e-01,  3.1270e-01,  6.2391e-02,
         -3.0202e-01,  1.2392e-01,  1.3409e-01, -2.3088e-02,  3.9101e-01,
          1.1021e-01, -2.6007e-01,  1.6675e-01, -4.4032e-01,  2.6980e-01,
          3.3045e-02,  5.3559e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1170))
tensor([[ 2.0967e+00, -1.0214e+00,  5.6275e-02,  3.4027e-01,  6.4345e-02,
          2.5992e-01,  3.1957e-01,  5.3865e-01,  1.6271e+00,  1.5263e+00,
          1.6718e+00,  9.7758e-01, -7.0508e-01,  2.5318e-02,  6.1696e-03,
          8.9189e-02,  1.3814e-01, -4.1394e-01,  2.2665e-01,  4.6795e-02,
         -3.1061e-02,  8.3706e-02,  1.4354e-02,  4.3330e-02, -1.4715e-01,
         -1.2380e-01, -3.3041e-02, -2.3223e-01,  3.9738e-03, -5.5793e-02,
         -5.3266e-02,  5.3165e-04, -2.2596e-02, -2.2521e-02,  1.2848e-01,
          3.4980e-02,  4.7646e-02,  1.2453e-01,  8.5266e-01,  7.4436e-02,
          2.4127e-01,  1.1183e-01, -6.2766e-02,  7.7287e-01,  7.7634e-01,
          4.7133e-01, -1.0723e-01,  2.7559e-01, -1.6926e-01, -1.9763e-01,
         -4.8977e-01,  3.7512e-01, -2.1398e-01,  8.9272e-02, -4.7167e-01,
         -8.0074e-01, -1.6396e-01,  9.5111e-02,  1.5501e-02, -3.9677e-02,
          1.0714e+00, -4.7551e-01,  8.7934e-01, -3.4811e-01,  1.3633e-01,
          6.6313e-01, -2.9189e-01,  3.1823e-01,  6.2770e-03,  2.2758e-01,
         -4.9544e-01,  2.0218e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1172))
tensor([[ 1.2693e+00,  1.0923e-01,  9.2858e-01, -7.7618e-01,  2.5588e-02,
          8.5836e-01, -1.1168e+00, -1.7741e-01,  1.3813e+00, -1.6948e+00,
          1.7587e-01,  2.1679e+00, -2.7837e-01, -5.4193e-03, -1.5978e-02,
          1.8618e-01,  2.3267e-01,  5.4834e-02, -9.5947e-02, -9.1212e-02,
         -3.9658e-01,  3.5389e-01,  5.2133e-03, -3.0785e-02,  2.4975e-02,
          3.1799e-02,  1.1160e-01, -5.0230e-02, -2.0421e-03, -4.0817e-01,
         -2.2965e-02, -3.2682e-02, -3.4558e-02,  2.9658e-02, -6.9757e-01,
         -9.0987e-01,  3.2081e-02, -3.9525e-02,  2.4778e-02, -3.8007e-02,
          1.9187e-02,  1.3968e-02, -5.6804e-01,  5.4258e-01,  1.4121e-01,
          8.7460e-01,  4.9674e-01,  6.6685e-02,  1.3957e+00, -2.3095e-01,
         -3.8199e-01, -3.6732e-01, -2.5327e-02,  3.8153e-02,  1.0880e-01,
          3.8700e-02,  1.1523e+00, -5.8385e-01, -5.0770e-01,  8.9409e-01,
          1.1468e+00, -8.9866e-01,  9.4023e-02, -7.9763e-02,  2.5462e-01,
         -3.5721e-01, -8.6197e-01,  7.9243e-01, -1.8827e-01,  1.6752e-01,
          9.3847e-01, -9.1733e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1181))
tensor([[ 2.4481e+00,  3.8929e-01,  6.4391e-01,  9.8127e-01, -4.2052e-01,
         -8.5076e-02,  3.1036e-01, -2.1990e-01,  7.6045e-01, -2.0078e+00,
         -4.8139e-02,  2.0310e+00, -3.3514e-01,  1.2110e-01, -1.3574e-02,
          1.1019e-01,  3.8312e-01,  1.5382e-01, -2.7657e-02,  5.7951e-01,
         -3.1830e-01,  5.5518e-01,  3.7598e-03, -6.7976e-03,  6.2408e-03,
          3.8915e-02,  1.3583e-01, -8.4667e-02,  6.9482e-01,  3.6545e-01,
         -1.2197e-01, -1.8358e-03,  4.2093e-02, -2.5805e-02,  1.8467e-02,
          5.7182e-02,  5.8307e-03, -1.2464e-02,  3.9257e-01, -6.7821e-01,
         -1.4800e-02,  6.8708e-01,  2.9102e-01,  5.4529e-01, -6.1454e-01,
          1.0800e+00,  1.0018e-01,  1.3681e+00, -8.7976e-01,  8.3583e-02,
          1.2509e+00,  3.3038e-03, -3.1599e-01,  6.5835e-02,  1.9360e-01,
         -2.0161e-01, -1.5786e-01,  1.0497e-01, -2.6169e-02,  1.3137e-02,
         -4.1765e-01,  2.4375e-01,  2.2880e-01, -1.1097e-01,  2.0762e-01,
          5.3748e-01, -1.7591e-01, -7.6480e-01, -1.7595e-01,  1.0909e-01,
          8.4763e-01,  4.6392e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1182))
tensor([[ 0.9364,  1.6288,  1.8156, -1.8690,  1.6485,  0.2787, -1.2795, -0.0857,
          0.4193, -0.9048,  1.1213,  1.6131,  0.5258,  0.2879,  0.1119, -0.0204,
          0.0953,  0.1400,  0.1351,  0.0083,  0.2803, -0.5910,  0.1199, -0.1176,
          0.1201,  0.0939,  0.2428, -0.2456,  0.0109,  0.5695,  0.1842, -0.0050,
          0.6184, -0.0177, -0.2019, -0.4412, -0.0378,  0.0469, -0.0537,  0.0521,
         -0.1103, -0.0956, -0.2792,  0.1168,  1.0274,  0.1371,  0.5127, -0.2898,
          0.5919,  0.5945,  0.1398, -0.4851,  0.2932,  0.2029,  0.1909,  0.7985,
          0.2668, -0.1994,  0.1208, -0.4754,  0.4360,  0.0832,  0.0343,  0.1260,
         -0.2515,  0.1094, -0.1784,  0.1537,  0.8777, -0.9871,  1.1935, -0.6504]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1182))
tensor([[-2.3764e-01, -2.4541e-01,  7.7105e-01,  2.0276e-01, -3.3414e-01,
          1.0509e+00,  1.6308e+00,  4.7358e-01,  1.8619e+00,  1.0833e+00,
          1.2104e-01,  3.7532e-01,  1.1495e-01, -1.5288e-03, -1.5954e-02,
         -1.7786e-01,  1.4389e-01, -9.4451e-02, -5.1945e-02,  1.2238e-02,
          1.3367e-01,  8.3221e-02, -6.5848e-02, -9.6912e-02, -6.2460e-02,
          1.8438e-01, -5.2228e-02, -1.2374e-01, -2.8789e-01,  5.3624e-01,
         -1.1634e-01,  1.5894e-01, -1.3504e-01,  6.3918e-03,  1.2632e+00,
         -3.6870e-01, -3.5561e-01, -9.3533e-02, -7.1724e-03,  8.5629e-03,
         -5.8163e-02,  2.4001e-02, -3.0628e-01,  1.8396e-02,  1.1908e-01,
         -2.2584e-01,  4.2289e-03,  9.4646e-01,  5.9910e-01, -5.4447e-01,
          5.9196e-01, -5.4515e-01, -4.9271e-02, -4.8943e-02,  3.7648e-01,
          6.2163e-02,  1.5888e+00, -8.8090e-01, -1.2100e+00, -2.9596e-01,
         -2.7837e-01,  4.1268e-01,  2.7736e-01, -9.9595e-02,  2.0068e+00,
         -1.4400e+00,  4.4517e-01, -4.6593e-01,  1.0198e-01, -3.1812e-02,
         -7.4319e-02,  6.7612e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1183))
tensor([[ 0.4232,  1.0964,  0.1797,  1.1594,  0.3915,  0.2376,  2.2822, -1.0589,
          0.1646,  0.3010,  2.4859,  0.6683,  0.0265, -0.1101, -0.0696,  0.5574,
         -0.4232, -0.1276, -0.0344,  0.0112,  0.0468, -0.2304, -0.0459, -0.0815,
          0.1963, -0.0308,  0.1840,  0.1737, -0.0184, -0.2371, -0.0406, -0.3324,
          0.5960,  0.0236, -0.0228,  0.0499,  0.4846, -0.5736, -0.0139,  0.0174,
          0.7170,  0.0153,  0.8607,  0.2045, -1.9258,  0.5777, -0.9184, -0.1342,
          0.5008,  0.2822, -0.3428,  0.0914,  0.3683, -0.2153,  0.3466,  0.4267,
         -0.1724,  0.1521,  0.0644,  0.0039, -0.0341,  0.3841,  0.7752, -1.0042,
         -0.0292,  0.0173, -0.2284,  0.0755,  1.0136, -0.4324, -0.4350,  0.1619]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1192))
tensor([[ 1.4377, -1.2048,  1.1149,  0.9254,  0.3911,  1.5362,  1.6559, -0.5259,
          0.3253,  0.9303,  0.0359,  1.1431,  0.1127, -0.0705,  0.0984,  0.2218,
          0.3637, -0.1640,  0.2048,  0.0049, -0.1358, -0.1960,  0.0513,  0.0556,
         -0.0994,  0.0927, -0.1954, -0.2231, -0.0194, -0.1792,  0.0290, -0.0283,
         -0.0802, -0.8740, -0.2067,  0.2591,  0.9046, -0.4478, -0.0104,  0.2150,
          0.4546,  0.1837, -0.5476,  0.2820,  0.2895,  0.3735, -0.1727, -0.3336,
          0.3641,  0.3432, -0.2492,  0.2811, -0.3680,  0.2652, -0.6235,  0.3022,
          0.7405,  0.6254,  0.8040,  1.0936,  0.2005,  0.5793, -1.3992,  0.0136,
          1.0798, -0.5328,  1.0902, -0.3605,  1.6778, -0.6958,  1.2741, -0.4597]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1195))
tensor([[ 1.0395, -0.6956,  0.8555, -0.4545,  0.2463,  1.0624, -0.3743,  0.8807,
          1.2625,  1.6869,  0.8261,  1.9028,  0.0247,  0.0300, -0.0690, -0.0782,
         -0.1939,  0.3462, -0.3826,  0.0062,  0.0019,  0.0642,  0.0881, -0.1008,
          0.0228, -0.0810, -0.0186, -0.1117, -0.8629, -0.0797,  0.0284,  0.0620,
          0.0494, -0.5343,  0.0713, -0.3146, -0.0375,  0.0602,  0.4603,  0.6925,
         -0.3009,  0.9915, -0.5640,  0.2004,  0.1793,  0.3919, -0.0329,  0.9013,
         -0.1136, -1.4389,  0.6629, -0.0561,  0.0594,  0.0603, -0.0835,  0.1233,
          0.4345,  0.0813, -0.7633, -0.9890,  0.5144, -0.1241, -0.8820,  0.2421,
         -0.3895,  0.5073,  0.1185,  0.4566, -0.2962,  0.1985,  0.9487,  0.6270]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1198))
tensor([[ 7.6451e-01, -3.8197e-01, -9.9186e-02, -3.7474e-01,  1.0425e+00,
         -1.1290e-01,  2.5332e+00,  1.1383e+00, -1.3450e-01,  2.3978e-01,
          1.7965e+00, -2.2729e-02,  7.6528e-02,  2.7078e-01,  7.4272e-03,
          1.8423e-01,  5.5468e-02, -2.4959e-01, -1.5418e-02, -3.2893e-02,
          3.2764e-01,  7.5564e-02, -3.7844e-02,  2.0979e-02, -3.1120e-03,
          4.8357e-02, -6.7381e-03, -2.2242e-03, -4.7759e-02,  4.8961e-02,
         -5.3586e-02,  4.5669e-01,  6.5989e-01, -1.1296e-01, -2.8072e-03,
          1.7809e-02, -3.7021e-01, -2.0035e-01,  2.1953e-02,  1.9465e-02,
         -3.3878e-01, -1.9961e-02, -2.6186e-01,  8.9860e-01, -3.3466e-01,
         -1.9041e-01,  2.4568e-02, -5.9161e-02,  9.8263e-03,  8.7644e-03,
          1.8484e-01, -1.9715e-01,  4.6252e-01, -3.7882e-01, -9.6076e-01,
          1.8077e-01, -2.5762e-01,  3.5924e-02, -3.4544e-02, -1.1281e-02,
          5.5104e-01,  3.3173e-01, -7.1767e-01,  1.3478e+00, -1.0090e-01,
          2.3423e-01, -1.5084e-02, -3.8911e-02,  1.5814e+00, -3.7933e-01,
         -1.4605e-01,  1.3924e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1211))
tensor([[ 8.9755e-02,  2.9134e-02,  1.6196e-01, -7.9413e-02,  9.7512e-01,
         -7.8505e-02,  1.1804e+00, -5.3746e-01,  1.5805e+00,  1.6226e+00,
          1.8911e+00, -1.4895e-01,  4.9551e-02, -4.8627e-02, -2.6857e-02,
          9.7358e-04, -1.1966e-01,  1.5224e-01,  1.4243e-01,  2.5074e-02,
          7.1277e-02,  1.9614e-03,  3.0497e-03, -3.7490e-03, -4.2281e-01,
          1.8754e-01, -1.0653e-03, -8.0086e-02, -4.1567e-02, -2.4910e-02,
          3.4646e-02, -8.5731e-01, -3.3947e-01, -1.8066e-02, -2.6626e-02,
         -5.2800e-03, -6.3011e-02, -1.6973e-01,  4.2594e-01,  2.0500e-01,
         -5.0436e-01,  9.3734e-02, -5.4677e-01, -2.6860e-02, -2.7763e-03,
         -5.2804e-01, -4.7991e-02, -2.9804e-01,  2.7343e-02,  3.7044e-01,
         -9.6461e-03, -2.3468e-02,  1.2662e+00, -7.5217e-01, -9.5394e-01,
          2.8640e-01, -1.1445e-02,  5.7257e-02, -5.6580e-02, -1.7126e-02,
          1.3751e+00, -1.7661e-01, -2.0117e-01,  3.7655e-01,  5.7371e-01,
          5.8689e-02, -1.4521e+00,  1.0614e+00, -1.0518e-01,  6.5755e-01,
          1.5802e+00, -8.8312e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1214))
tensor([[ 1.3261e-01,  5.6397e-03,  2.1486e-01, -1.3142e-01,  9.4186e-01,
          1.2176e-01, -3.8607e-03,  1.4104e+00, -1.0365e-01, -1.9950e-01,
          2.1553e+00,  1.5645e+00, -2.3345e-02, -6.0781e-02,  2.8255e-02,
         -1.4332e-02, -1.4071e-02,  3.8372e-02,  1.4913e-04, -2.3306e-02,
         -1.1978e-03, -1.3904e-02, -6.2715e-02,  8.7660e-02,  3.0286e-01,
          6.2412e-02, -6.6188e-02,  6.1784e-02,  4.2832e-02, -2.5853e-01,
          2.5235e-01, -4.1142e-01,  7.4295e-01, -1.7639e-02,  2.4217e-01,
          4.6926e-01, -1.0643e-02, -1.2761e-01,  1.1253e-01, -5.1485e-03,
         -4.6795e-01, -1.2328e-01, -1.5219e-01,  7.4450e-02,  1.2288e-01,
         -7.3186e-02,  3.8036e-02,  1.1602e+00,  9.6046e-01, -1.6237e+00,
          1.1579e+00, -8.4559e-01,  1.4931e+00, -1.2764e+00, -4.8090e-01,
         -9.1333e-01,  5.0232e-01, -2.3683e-01,  2.0696e-01,  4.1408e-01,
          4.2886e-01,  3.5418e-02,  2.6394e-01, -1.4632e-01, -5.6361e-01,
         -1.6530e-01, -1.4985e-01,  4.5309e-01,  7.1897e-01,  3.9210e-01,
         -1.3658e-02, -3.3231e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1224))
tensor([[ 0.3408, -0.2878,  2.0644,  0.1337,  0.3333,  0.1324,  0.5048,  0.0213,
          0.8559, -0.5285,  0.0664,  0.0633, -0.1391, -0.0203,  0.0415,  0.0404,
         -0.1609,  0.0358,  0.0562,  0.1090, -0.0139,  1.0618, -0.0583,  0.0349,
          0.0738,  0.3411,  0.1641, -0.1995, -0.0175,  0.2347,  0.0261, -0.0096,
          0.0464, -0.0204,  0.0589, -0.0109, -0.1153, -0.0743, -0.1299, -0.0680,
         -0.0723,  0.2951, -0.2503,  0.1422, -0.0097,  0.0846, -0.2141, -0.1115,
          0.8750,  0.8473,  0.4703,  0.2105, -0.2292,  0.1945, -0.2643, -0.1044,
         -0.2479,  0.1537,  0.0326,  0.1566, -0.5795,  0.1666, -0.1001, -0.0258,
         -0.2006,  0.2460,  0.0104, -0.0671, -0.0147, -0.0211,  0.8697,  0.2482]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1226))
tensor([[ 5.0830e-01, -1.9982e-01,  5.3139e-01, -1.0231e-01,  5.1619e-01,
          2.0341e+00, -8.8850e-02,  2.4989e-02,  5.8547e-01, -2.5533e-01,
          2.3501e-01,  2.5149e+00,  2.1045e-02,  8.6207e-02, -2.3713e-02,
          2.4845e-02,  1.1146e-01, -1.8766e-02,  1.0141e-02, -4.4329e-02,
         -3.5593e-02,  2.7469e-02,  1.2589e-01, -2.5938e-01, -2.8742e-02,
         -1.9567e-02, -2.1221e-02,  3.3338e-02, -5.8504e-02,  2.3481e-03,
         -4.3398e-01,  7.3179e-03, -4.4826e-02, -6.3132e-01, -3.5935e-02,
          2.7398e-01,  1.0017e-01,  1.5857e-03,  5.8288e-02,  6.2302e-01,
         -1.8969e-02,  6.9266e-01, -3.7478e-01,  7.7548e-01, -3.0899e-01,
          5.6211e-02, -4.8077e-02, -7.4521e-02,  7.8433e-02,  1.1314e-01,
          1.0275e-01, -3.1455e-02,  4.0566e-01,  5.9766e-01, -8.4955e-02,
         -2.1125e-02,  2.0931e-01,  2.1371e-01, -1.8926e-01, -1.0938e+00,
          4.9964e-01, -3.7058e-01, -3.3922e-02,  3.9806e-03, -2.2509e-01,
          3.9280e-01,  3.6912e-01,  7.2359e-02, -1.0512e-01,  9.0501e-02,
          4.2987e-01,  8.2272e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1234))
tensor([[ 1.8914e+00,  1.2557e+00,  1.6531e+00,  4.5577e-01,  1.3490e+00,
          2.5738e+00,  8.2232e-01,  4.3806e-02,  8.3512e-01, -1.8635e-02,
          6.5050e-01,  5.4349e-01, -5.5379e-01,  2.9552e-01, -1.8106e-01,
          3.4595e-02, -1.2982e-01,  2.5075e-02,  3.1079e-02,  1.0178e-03,
         -4.2881e-01, -5.3557e-02, -4.3716e-01, -2.9544e-01,  1.6718e-02,
         -3.7411e-02, -2.1658e-02,  6.3027e-02, -4.1906e-02, -1.0360e-01,
          4.6460e-01,  6.6517e-02, -4.9727e-02,  1.1924e+00, -6.5447e-03,
         -1.2111e-02,  3.0337e-02,  1.3454e-02, -5.0253e-02, -7.9567e-03,
         -2.1074e-02, -2.0325e-02,  8.4766e-01,  9.8095e-01, -6.6714e-01,
         -5.2117e-01,  1.0302e+00, -7.2002e-01,  7.8251e-02,  8.4409e-02,
         -1.9556e-01, -2.3290e-01,  1.8822e+00, -1.0103e+00, -6.9004e-03,
          1.4539e-02,  2.1138e-01,  1.0045e+00,  7.3211e-01,  5.1301e-01,
         -2.0483e-01,  1.7396e-01,  8.4678e-03,  1.1146e-02, -2.7078e-01,
          1.7769e-01, -9.4047e-02,  6.9607e-02, -1.9480e-01,  1.4687e-01,
         -7.3066e-02,  9.1630e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1241))
tensor([[ 1.0511e+00, -6.7633e-01,  1.7644e+00, -4.1444e-01,  2.9296e-01,
          4.3535e-01,  4.4684e-01,  9.6642e-01,  4.7325e-01,  8.1423e-01,
          9.2660e-01,  2.1600e+00, -2.4466e-01, -3.3814e-03,  5.4563e-02,
         -1.9010e-01,  8.0749e-02, -1.4041e-01, -1.4942e-01, -5.6851e-02,
          4.6143e-01,  1.1917e-01, -6.1670e-02,  3.1525e-02, -2.2073e-01,
          7.8283e-02, -4.1471e-01, -4.9674e-01,  1.2064e-02, -3.2396e-01,
         -1.8175e-02, -8.6713e-04, -4.1417e-03,  3.0316e-02,  3.5284e-02,
         -1.8384e-01,  3.7066e-02,  2.1910e-01, -1.6452e-01,  2.7840e-01,
          9.5363e-02,  2.4219e-01, -1.9768e-01,  3.7459e-01,  4.0854e-01,
         -5.8679e-01, -4.6046e-01, -4.0093e-01, -1.9980e-01,  1.2478e+00,
         -1.6552e-01, -8.5330e-02, -1.1574e-01,  7.8506e-02, -1.1794e-01,
          4.4863e-02, -1.3871e-01,  1.5316e-01,  1.3048e-02, -6.6006e-02,
          1.8754e-01, -1.6300e-02, -1.5832e-01,  2.8636e-01,  4.4814e-01,
          5.1507e-01, -3.8283e-01,  2.7749e-01, -2.9811e-01,  2.6608e-01,
         -4.4541e-01, -5.9819e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1242))
tensor([[ 0.4478, -0.1560,  0.9852,  0.6244,  0.7229,  1.5980,  0.2655, -0.0515,
          1.1815,  0.2564, -0.2428,  0.6373, -0.0084, -0.1127,  0.0866, -0.0318,
         -0.0083, -0.0645,  0.0998,  0.0088, -0.0154, -0.2320,  0.1004,  0.1463,
         -0.0106, -0.0109,  0.1630,  0.1973,  0.0504, -0.2198,  0.4245, -0.0069,
         -0.3040,  0.1657, -0.5384, -0.1215, -0.0165, -0.0238,  0.2741,  0.6218,
          0.2221,  0.5178, -0.3693,  0.5628, -0.0700,  0.0756, -0.0678, -0.2947,
          0.2816,  0.2821, -0.1654,  0.1840,  0.7278,  0.4517, -0.0647, -0.0328,
          0.1834, -0.0365,  0.4715, -0.1844, -0.0967,  0.0749,  0.0224,  0.0502,
          1.4063, -0.3735,  0.5736,  0.2966, -0.0352, -0.3139,  1.3157, -0.2052]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1243))
tensor([[ 8.4753e-01, -7.5059e-01,  5.2842e-01, -3.7082e-01,  1.4947e-01,
          4.6890e-01,  1.5380e-03,  6.5418e-01,  1.2878e+00,  5.0397e-01,
          1.7937e+00,  2.6181e+00, -2.9191e-01,  8.1880e-02, -2.2951e-02,
         -2.1463e-01, -1.3994e-01,  3.0759e-01, -4.6823e-01, -1.5991e-01,
          2.6915e-01,  1.0289e-01,  5.4602e-02,  1.4945e-02,  7.8592e-02,
         -6.1432e-02, -3.5910e-01,  6.1515e-01,  1.0416e-02, -1.2401e-01,
         -1.9185e-02,  1.4969e-01, -2.4961e-01, -3.1287e-01,  1.3634e-01,
          4.0022e-01, -1.2103e-01,  4.8077e-02,  1.4222e-01, -1.6245e-01,
          2.5503e-01, -5.6080e-02,  1.0575e+00, -5.1278e-02, -1.0378e-02,
         -1.2048e+00,  1.4506e-01, -6.3522e-01, -3.0768e-02,  2.1078e-01,
          5.2447e-01, -7.9926e-03, -1.3396e-01,  9.1141e-02, -1.4067e-02,
         -9.1239e-02,  8.1794e-01,  3.2644e-01,  9.4283e-01, -7.2616e-01,
          3.2933e-01, -4.3526e-01,  6.5212e-01, -7.1599e-01, -3.9844e-01,
          3.3730e-01, -8.5348e-01,  1.1045e-01,  1.2448e+00, -1.2250e+00,
         -6.5802e-01, -3.4957e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1254))
tensor([[ 0.4765, -0.5130,  1.4503,  0.3376,  1.5953,  0.5178,  0.5994, -0.7617,
          0.3967, -0.1037,  0.6737,  0.3623,  0.3481,  0.3220, -0.2460, -0.0560,
         -0.0096, -0.0594,  0.0665, -0.1700, -0.4710, -0.2018,  0.1002,  0.0724,
         -0.0404,  0.2001,  0.1848,  0.0538,  0.2046,  0.1450, -0.0431, -0.1205,
         -0.1010,  0.0275,  0.0089, -0.0149,  0.4717, -0.1513, -0.0364,  0.0076,
          0.0956, -0.0194,  1.0201, -0.1506, -0.1152, -1.1899,  0.1366,  0.4839,
          0.4234, -0.6318,  0.3440, -0.7437, -0.8697,  0.1867,  0.5025, -0.7778,
         -0.2203,  0.1878, -0.0124,  0.0067, -0.1336,  0.1088, -0.2758, -0.0521,
         -0.2766,  0.1800,  0.1442, -0.0598,  0.5419, -0.1230, -0.1405,  0.0822]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1262))
tensor([[ 6.4675e-01,  1.4850e+00, -4.1820e-02,  5.0013e-01,  2.3561e-01,
          4.5859e-01,  3.4933e-01, -2.9023e-01, -3.6480e-01, -1.5298e+00,
          4.9164e-01,  3.0064e+00, -5.9850e-02, -8.9150e-02,  9.0305e-02,
         -2.7345e-01,  1.7077e-01,  1.7433e-01,  1.4359e-01,  4.2871e-02,
         -3.5500e-02,  2.5907e-03, -1.4802e-01,  5.6182e-02, -7.5309e-02,
         -2.0931e-01, -1.9665e-01, -4.9242e-02,  7.1903e-02,  2.9386e-02,
          1.7727e-01,  8.5411e-03,  2.7499e-02,  2.7015e-02, -7.5615e-02,
         -1.0069e-01, -1.1448e-01,  2.9304e-02,  2.6120e-02,  1.5602e-01,
         -1.6528e-02, -4.2513e-01, -6.5994e-03,  1.1649e+00, -4.4854e-01,
         -5.2659e-01,  3.0126e-01,  1.0447e+00, -3.7663e-01, -3.6280e-01,
          8.7531e-01, -5.2256e-01, -7.3699e-01,  9.0171e-02,  2.9208e-01,
         -5.1130e-02, -2.2375e-01,  1.8864e-01, -1.4021e-01,  1.0023e-01,
         -4.2694e-01,  1.0360e-01,  2.6887e-01, -6.0789e-02,  9.8621e-01,
         -9.5847e-01,  2.4415e-01, -1.4925e-01, -3.1059e-01,  1.0275e-01,
          1.3808e+00, -3.4914e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1266))
tensor([[ 7.4908e-01,  1.9266e-01,  2.7965e-01, -7.1999e-03,  1.1994e+00,
          2.2816e+00,  1.0939e+00,  4.4458e-02,  6.7085e-01,  9.5150e-01,
         -7.0498e-01,  3.1324e+00,  1.9748e-01,  7.6590e-02,  3.0447e-02,
          8.9512e-02,  4.0404e-02,  2.1928e-01, -2.1640e-02,  3.5291e-01,
         -1.2721e-01, -2.1326e-02,  8.5946e-02, -4.1561e-03,  1.2640e-02,
         -4.1978e-03,  1.7501e-01,  3.9974e-02, -3.5567e-02,  1.6510e-03,
         -1.5528e-01,  6.5330e-01, -5.7322e-02, -1.1605e-01, -6.3090e-01,
          1.1789e+00, -5.3196e-03,  4.5960e-02, -1.5107e-02, -4.5485e-03,
          2.2587e-01, -2.6095e-04,  7.1976e-01, -9.2982e-01, -2.5422e-02,
          4.1496e-01, -9.7510e-01, -1.2885e-01,  9.1950e-02,  8.9503e-02,
          6.1119e-02, -3.2156e-02,  2.1753e-01, -6.0405e-01,  6.3385e-01,
          4.2125e-01,  1.7970e+00, -5.2708e-01,  8.6206e-01,  1.6143e+00,
          8.6459e-01, -3.3922e-01,  1.9148e-01, -6.4748e-02,  5.2253e-01,
         -3.4125e-01,  8.3328e-01, -6.7515e-01, -2.3023e-01, -4.5769e-02,
          6.6417e-01, -8.6489e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1267))
tensor([[ 1.3971e+00, -6.6501e-01,  2.8014e-01,  3.5403e-02,  3.4082e-01,
          4.3213e-01,  3.1327e+00,  1.1461e+00,  1.2621e+00,  1.0865e-01,
          1.4043e+00,  9.3996e-01,  1.5481e-01, -4.7161e-02,  4.1018e-02,
         -3.7373e-02, -4.8583e-01,  4.2001e-01, -4.1169e-01,  7.0771e-01,
         -8.5750e-02, -2.1760e-02,  3.3532e-02,  1.3972e-03, -7.5738e-02,
         -1.2396e-02, -1.2322e-02, -5.9741e-02, -2.7274e-02, -2.4341e-04,
         -1.6432e-02, -1.7198e-01, -6.8601e-03,  2.7217e-02,  1.0573e-01,
         -1.1262e-01, -6.1298e-01, -2.2455e-01, -7.0967e-01, -2.9788e-02,
         -8.9922e-02,  6.7138e-01,  2.6168e-01, -1.0315e+00, -4.0286e-02,
          6.5183e-01,  1.5331e-01, -1.2853e-01,  8.3099e-02,  1.1310e-01,
         -7.3644e-02,  2.7598e-02, -2.9774e-01,  1.5603e-01,  9.9407e-01,
         -2.2604e-01, -9.2574e-02,  1.3613e-01, -6.8925e-02,  2.0328e-02,
          2.3217e+00,  2.2418e-01, -2.8805e-01,  1.5357e-01,  4.1811e-01,
          5.0335e-01,  9.8919e-01, -7.8036e-02, -9.0224e-01,  2.9867e-01,
          1.6250e+00, -3.0642e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1286))
tensor([[ 0.3028, -0.1097,  1.6102, -0.9025,  0.4715,  2.1966, -0.6744, -0.3362,
          1.1630, -0.9200,  0.9980, -0.0030,  0.0057,  0.0362,  0.0262, -0.0773,
          0.1106, -0.0988,  0.0899,  0.0084, -0.0234,  0.4996, -0.6838, -0.0063,
          0.0501, -0.1876,  0.0109, -0.2244, -0.2847, -0.4800,  0.0244,  0.0305,
         -0.0109, -0.0174, -0.4269, -0.0437, -0.2599,  0.1379, -0.3088,  0.1404,
         -0.0976, -0.0539,  0.4119, -0.4057,  0.0969,  0.5692, -0.3114, -0.2058,
         -0.0037,  0.0060,  0.0425, -0.6486, -0.4682,  0.3071,  0.1229, -0.2718,
         -0.8403, -0.0554, -0.2612,  0.0676,  0.4889,  0.1810,  0.1627, -0.0995,
          1.7245, -0.3369,  0.2718, -0.1000, -0.6827,  0.2411, -0.0194,  0.2088]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1293))
tensor([[ 4.5817e-01, -4.3935e-01,  2.7322e-01, -8.7537e-02,  1.7522e+00,
          2.3539e+00,  2.0202e+00, -4.4538e-01,  2.2162e+00,  1.8968e+00,
          4.6816e-01,  3.7627e-01, -1.2086e-01,  6.8268e-02, -1.7961e-02,
         -6.7503e-02, -6.4124e-02,  1.2282e-01, -9.3943e-02,  5.0850e-02,
          9.9657e-02, -1.5208e-03,  9.6875e-03,  1.5610e-02,  5.4412e-02,
         -1.6019e-01, -1.4899e-02, -4.8452e-02,  2.3585e-02, -2.4054e-02,
         -4.3859e-01,  4.6934e-01, -8.2944e-02, -1.5704e-01, -1.3764e+00,
          5.5347e-01,  4.5602e-01, -3.3458e-01,  4.2402e-01,  4.4237e-01,
          3.9709e-02,  3.5413e-01,  4.5342e-01, -2.4074e-01,  5.5110e-02,
         -5.9988e-01,  2.2980e-01, -2.5931e-01,  1.9493e-01,  1.6884e-01,
         -2.4801e-02, -1.3607e-02,  9.9378e-01, -7.0705e-02, -9.8620e-01,
          8.1451e-01,  1.3533e+00, -7.3702e-01, -1.9139e+00, -1.3455e+00,
         -3.4945e-01, -1.2253e-01,  1.7920e-01, -3.7991e-01,  2.2257e+00,
         -1.4191e+00,  7.4514e-01, -3.3449e-01, -3.2750e-01,  1.2584e-01,
          5.6642e-01,  2.4885e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1299))
tensor([[ 1.0705, -1.2645,  1.7273,  2.2070,  1.0738, -0.1861,  0.1677,  0.0910,
          2.2659, -1.4728, -0.0099,  0.7814,  0.5173, -0.3881,  0.3334, -0.0598,
          0.0094, -0.0144, -0.0275,  0.0546, -0.5378, -0.1201,  0.0647,  0.0103,
         -0.4595,  0.4878,  0.3765,  0.3632,  0.0297,  0.0218, -0.2955, -0.0544,
         -0.0062, -0.0216, -0.0131,  0.1404,  0.0271, -0.0118,  0.1011,  0.0376,
         -0.0393,  0.4524,  0.9073, -0.0896,  0.0349, -0.9050,  0.0821, -1.1749,
          0.3196,  0.1174, -0.9243,  0.2051,  0.1427,  0.2400, -0.0417,  0.0409,
         -0.0064,  0.0601, -0.0116,  0.0375, -0.3069,  0.2234, -0.0879,  0.0303,
         -2.2289, -0.0754,  0.5993,  0.0709, -0.2974,  0.1903,  1.1697,  0.1634]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1300))
tensor([[ 1.0855e+00,  9.0058e-01, -1.7904e-01, -3.6525e-01,  3.2928e-01,
          9.5657e-01,  1.5353e+00,  1.1902e+00,  2.0331e+00,  7.5222e-01,
          1.0939e+00,  3.0722e-01, -2.3388e-01,  1.9427e-02, -2.0795e-02,
          2.5243e-01, -2.0412e-01,  1.2611e-01,  1.4975e-01, -1.1228e-01,
         -2.1411e-01,  2.3840e-01, -1.4014e-01,  2.4665e-01, -7.0311e-02,
          1.5112e-01, -3.7360e-02,  1.1756e-02, -2.4112e-01, -2.1225e-01,
          3.0887e-02,  9.0586e-02, -9.4473e-02, -1.2390e-01,  9.3283e-03,
          2.7977e-02,  6.7023e-01,  6.7882e-01, -6.9053e-01, -1.1469e-01,
          6.0627e-01, -5.2292e-02,  6.5399e-01, -2.0916e-01,  1.9543e-03,
          7.2271e-01, -1.6522e-01,  8.7993e-01,  1.0842e-01, -6.5828e-01,
         -6.7606e-01,  4.7570e-01, -1.4957e-01,  1.4987e-01,  6.1906e-01,
          8.5456e-01, -7.8114e-01,  1.3847e-02, -6.8457e-02, -9.2175e-02,
         -2.6401e-01,  5.8885e-01,  4.5794e-01,  3.5244e-01, -4.4413e-01,
          6.0543e-01, -2.4127e-01,  2.1796e-01,  7.1260e-01,  4.9579e-01,
         -2.3489e-01,  1.6767e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1303))
tensor([[ 3.8008e-01,  6.2371e-02,  2.8493e-01,  6.6827e-02,  6.6276e-01,
          1.0042e+00,  5.1199e-01,  9.7718e-01,  1.4475e+00,  5.1520e-01,
          1.9240e+00,  4.0336e-01,  3.2189e-03,  6.1375e-02, -3.6911e-02,
          2.6456e-01, -1.8658e-02,  6.8661e-02,  3.7393e-01, -4.0513e-02,
          2.6624e-02, -4.5709e-03,  7.0917e-04,  7.0959e-03, -7.4681e-02,
          2.0540e-01, -1.0952e-01, -4.0534e-02, -1.6933e-02,  1.4664e-02,
          2.5367e-01, -1.8703e-01,  1.1802e-01, -3.5197e-01,  1.2799e-01,
         -8.0088e-02,  1.3398e-01, -1.8513e-02,  1.1249e-01,  4.3345e-02,
         -5.8038e-01, -4.3758e-02, -2.1817e-01,  1.4003e-01,  1.6094e-01,
          3.7723e-02,  1.0658e-02, -8.9573e-03, -5.7586e-01,  6.6519e-01,
         -1.1424e-01,  6.5237e-02, -8.8452e-01,  1.6208e-02,  2.9323e-01,
         -2.2244e-02,  1.0847e+00, -3.1379e-01,  4.9434e-01,  4.3510e-01,
          7.4794e-01, -5.7302e-01,  4.8751e-01, -6.2815e-01, -7.5386e-02,
          5.3737e-01,  3.0675e-01,  3.3154e-01,  1.5772e-01,  1.3779e-01,
          1.3891e-01,  4.2999e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1332))
tensor([[ 1.4264e+00,  1.2754e+00,  3.7666e-01, -2.9899e-02,  2.0913e+00,
          1.2138e+00,  1.4598e+00,  2.1084e+00,  2.4630e+00, -1.9016e+00,
          2.4860e+00,  2.0237e-01, -6.1262e-01, -1.0598e-01, -1.4712e-01,
          2.6157e-02,  2.1493e-02,  1.4181e-01,  1.5448e-01,  9.7376e-02,
         -5.9092e-01,  2.6642e-02,  4.6562e-02, -3.8200e-02,  2.2940e-02,
         -1.6261e-01,  1.1859e-02,  1.2704e-02, -2.0830e-02,  2.6820e-05,
          2.3804e-01, -1.1002e+00,  8.5187e-01, -2.5560e-01,  6.5732e-01,
          3.5490e-01,  4.7153e-02, -3.4387e-01,  1.4620e-01, -1.2206e-01,
         -5.5915e-01,  7.0871e-02,  1.3921e+00, -8.5368e-01,  7.9125e-01,
          1.7167e+00, -2.2637e-01, -1.8976e-01,  1.7312e-01,  1.6697e-01,
          5.7141e-03,  4.2441e-03,  1.5445e+00, -8.1705e-01, -1.5924e+00,
         -1.1615e+00,  1.1809e-01,  1.7366e-01, -8.3653e-01,  4.5723e-01,
          6.6873e-01, -8.8383e-01,  8.5600e-01, -4.8947e-01,  1.6986e+00,
         -1.5136e+00, -9.9374e-01,  1.0671e+00,  1.8935e-01, -1.5126e-02,
          1.1321e+00, -6.0807e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1343))
tensor([[ 1.1406e+00, -3.9345e-01,  7.8081e-02,  6.6182e-02,  2.1574e+00,
          1.9704e+00, -2.6760e-01, -2.5213e-02,  2.0911e+00,  1.6262e+00,
          2.1032e-01,  8.9920e-01, -4.2724e-02,  1.9134e-01, -2.4365e-01,
         -1.3048e-01, -7.2635e-02, -1.6578e-02,  1.7244e-01,  3.8974e-01,
          2.2931e-02, -2.9655e-02, -1.2249e-01, -6.9827e-02, -1.2207e-01,
          5.0054e-01, -1.9650e-01, -5.4190e-02,  7.0500e-02, -7.4996e-03,
          1.3407e+00,  4.8714e-02, -3.5360e-02,  8.5634e-01,  2.6537e-01,
         -1.0488e-01, -7.7954e-02, -4.5260e-03, -1.1079e-01, -4.7373e-01,
          2.7601e-02, -3.7491e-01,  7.6992e-02, -5.7707e-02, -4.6158e-01,
         -3.2785e-01,  2.1661e-01, -1.4464e-01,  9.8108e-02,  8.8801e-02,
         -1.0520e-01,  4.9103e-02,  5.7911e-01,  1.0238e+00, -2.2834e-01,
         -4.2518e-01,  1.2469e+00,  6.4318e-01,  4.0999e-01,  1.0250e+00,
         -5.6153e-02, -3.5461e-03, -7.8273e-03,  1.5242e-03, -8.2039e-01,
          1.1027e-01,  1.3240e-01,  1.6945e-01, -2.7454e-01,  2.1126e-01,
         -2.6245e-01,  3.5119e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1363))
tensor([[ 2.2624e+00,  2.2606e+00,  7.4321e-01, -4.8381e-01,  8.7444e-02,
          1.8511e+00, -4.8984e-01,  5.5611e-01,  6.1109e-01,  1.5313e+00,
         -6.2068e-02,  2.5089e+00, -7.3291e-01,  2.1447e-01,  2.2189e-01,
          4.0132e-02,  1.1049e-01, -1.7232e-02,  1.8509e-03, -2.0377e-02,
         -7.1162e-01, -6.6474e-02, -1.0885e-01,  1.0271e-01, -9.5225e-02,
          4.3342e-02,  7.5878e-02, -3.1977e-01,  2.7515e-01,  8.6856e-02,
          6.6510e-01, -1.6596e-02,  9.9842e-02, -3.9006e-01, -3.9164e-01,
          7.9334e-01,  1.6203e-01, -7.5416e-02,  2.5557e-02,  1.8943e-01,
          6.4567e-02,  1.2887e-01, -6.8135e-03,  8.9800e-01,  9.0596e-01,
          1.8742e-01,  7.6365e-01,  1.5525e+00, -1.0538e+00, -9.8777e-01,
         -1.7329e+00,  1.1794e+00,  5.4768e-01,  2.1906e-01,  3.1135e-01,
         -9.7333e-02,  1.1428e+00, -2.7047e-01, -5.2938e-01, -1.2911e+00,
         -4.8117e-01,  9.2524e-02, -7.1404e-02,  1.3154e-01, -5.0791e-03,
         -5.1386e-03,  2.3004e-01, -1.3798e-01, -4.5447e-02,  2.4689e-02,
          1.9413e-01, -4.6930e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1387))
tensor([[ 5.6576e-01,  4.1051e-01,  1.3767e+00,  9.9432e-01,  2.4382e+00,
          4.4428e-01, -4.6166e-01,  4.8270e-01,  1.5764e-01, -7.6328e-01,
         -1.7826e-01,  8.0796e-01, -2.4778e-02,  2.4707e-01,  3.0614e-01,
         -3.2289e-02,  1.2028e-01,  9.8196e-02,  6.9651e-02,  8.6696e-03,
         -6.8757e-04,  6.8670e-01, -1.3404e-01,  1.6028e-01,  5.1683e-02,
          7.1857e-03, -3.7645e-02, -1.0422e-01,  5.1168e-01,  6.4182e-01,
          5.5890e-01, -1.8577e-02, -5.3256e-02,  1.4081e-02,  6.0849e-02,
          5.6492e-02,  1.1015e-03, -3.0989e-02, -2.1512e-01,  9.0750e-02,
          3.7443e-03, -2.2749e-01, -4.8787e-01,  2.8927e-01,  7.3710e-02,
         -2.5818e-01,  4.4754e-02,  7.5617e-01,  5.4055e-02, -2.6862e-01,
          1.4270e-01,  9.2421e-01,  1.8558e+00, -3.3716e-01,  4.5933e-02,
          9.7735e-02, -2.3933e-01,  1.9461e-01,  2.6752e-01,  5.6232e-01,
          2.0423e-01,  1.1838e-01, -2.4875e-01, -6.3599e-02, -8.0926e-02,
          4.2847e-02,  2.1759e-01, -2.6755e-01,  2.5709e-02,  1.5001e-01,
         -1.6856e-01,  2.8732e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1401))
tensor([[ 1.0302e+00, -7.2642e-01,  1.5115e+00,  4.0316e-01, -1.7720e-02,
          1.0060e+00,  3.5330e-01, -4.9098e-03,  2.4901e+00, -1.6571e-01,
          8.9070e-01,  4.6319e-01, -3.8876e-04, -8.6802e-03, -1.0483e-02,
          3.7146e-02,  1.0708e-01,  3.5102e-01, -4.2724e-01,  5.9388e-02,
          2.5359e-02, -2.8158e-01, -1.1107e-02, -1.3309e-02,  2.1494e-01,
          3.3699e-01, -1.8912e-01,  6.0714e-02,  4.1405e-01, -4.6258e-01,
         -1.9669e-02, -3.0324e-02,  2.9806e-02,  4.7181e-01, -2.2967e-02,
          2.0754e-02,  3.2751e-02,  1.8167e-02, -1.6189e-01,  7.2271e-01,
         -1.3845e-01,  1.6957e-01, -5.4501e-01,  1.4316e-01,  8.1982e-02,
          3.6536e-01,  4.4954e-02,  1.1812e+00, -2.3714e-01, -1.1163e+00,
         -1.1103e+00,  1.1121e+00,  2.2640e-01, -7.3339e-02,  1.0849e-01,
          4.7288e-02,  2.7861e-01,  6.5745e-01,  1.1467e+00, -1.8494e-01,
         -4.2800e-01,  2.5045e-01,  2.2105e-03,  3.5176e-02, -9.6667e-02,
          7.8945e-01, -3.4765e-01, -1.1598e-01, -8.1929e-01,  1.3993e-01,
          4.0354e-01,  5.8179e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1420))
tensor([[ 2.7458e+00, -1.1808e+00,  1.9379e-01, -6.7894e-02,  1.5373e-01,
          4.1124e-01,  1.3714e-01, -1.6943e-02,  8.0370e-01, -1.0864e+00,
          5.7889e-01,  1.6081e+00, -5.4549e-01,  3.4289e-03,  4.7617e-03,
          2.7400e-02, -1.8516e-02, -2.9180e-01, -3.2871e-01,  8.0619e-02,
          8.0702e-01, -2.5121e-01,  3.4546e-03, -4.2994e-02, -2.5754e-01,
         -1.0844e-01, -4.7295e-02,  4.6495e-01, -4.9035e-02, -3.4155e-02,
         -2.2813e-02,  1.1191e-03, -1.0183e-03,  2.6310e-02,  1.3351e-01,
          9.4283e-02, -2.0525e-02,  1.7208e-02,  1.9624e-01, -1.3165e-01,
          4.1342e-02,  4.4480e-02,  1.1501e-01,  4.7625e-01,  4.8132e-01,
         -1.5993e+00, -4.2235e-01,  4.9987e-01, -7.5643e-01,  5.8993e-01,
         -4.9559e-01,  5.1958e-01, -2.2179e-01,  1.5218e-01, -3.4237e-02,
          2.1502e-02, -6.1580e-02,  1.0367e-01,  4.1062e-02, -4.8394e-02,
         -6.1833e-02,  5.7288e-02, -3.9639e-03,  5.0479e-02,  2.8048e-01,
         -5.5299e-01,  1.4475e-01,  3.2951e-01, -2.9524e-01,  2.1616e-01,
         -7.1548e-01, -4.3307e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1422))
tensor([[ 1.1036e+00, -8.8635e-01, -9.0729e-02, -2.7291e-01,  2.3850e+00,
          3.6392e-01,  2.0025e-01, -6.4456e-03,  7.5546e-01,  1.2213e+00,
          5.3474e-01,  2.6469e+00, -6.8160e-01,  2.3920e-01,  2.6618e-01,
          4.0753e-02,  4.7626e-04, -1.1723e-02,  8.0894e-02, -7.1568e-02,
          4.5593e-01,  2.7900e-01,  5.6264e-02, -7.5654e-02,  1.3385e-01,
          9.2052e-02, -2.2902e-01,  2.2278e-01, -2.9227e-02,  2.9301e-01,
          1.7518e-01,  6.4396e-02,  6.7963e-01,  2.8529e-02, -4.2872e-03,
          7.1865e-03, -2.9155e-02, -1.5799e-02, -2.0059e-02, -1.2481e-03,
          1.7556e-01, -2.3758e-02,  9.8067e-01,  8.2458e-02,  1.1909e-01,
         -1.1247e+00, -9.8404e-02,  2.2682e-02,  3.2261e-01,  1.3767e-01,
          8.9595e-02,  1.5891e-01,  3.0945e-02, -1.6774e-01, -4.3397e-02,
          5.8768e-01, -3.0033e-01,  2.2360e-01,  2.5925e-01,  8.1091e-02,
         -2.2565e-01,  1.5472e-01, -3.1620e-01,  1.4194e-01, -5.3022e-01,
          1.5299e-01, -7.8470e-01,  9.2517e-02,  8.4162e-01, -6.8640e-01,
         -1.2536e+00,  3.2929e-02]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1431))
tensor([[ 1.2806e+00, -7.7645e-01,  7.3145e-01,  9.7475e-01,  1.0716e+00,
          3.1468e-01,  6.9891e-01, -5.8651e-01, -2.0645e-01, -1.0499e-01,
          3.6557e-01,  1.1681e+00,  4.6634e-01,  4.6696e-02, -1.4174e-01,
         -1.0263e-02,  8.3262e-02,  3.8604e-02, -1.2991e-01,  1.1287e-01,
         -4.3686e-01,  3.5098e-01,  6.7078e-02,  4.4497e-05, -1.3122e-02,
         -4.9668e-02,  2.7726e-01,  1.1444e-01,  5.5793e-01,  2.6340e-01,
          1.2731e-01,  2.1692e-01,  3.3040e-01, -2.3068e-02, -3.1969e-02,
         -8.0357e-03, -9.5359e-02,  9.9481e-02, -1.3705e-01,  1.6923e-02,
         -1.6284e-01, -1.4872e-01,  4.1124e-01,  1.2072e+00, -1.1082e+00,
         -4.9846e-01,  6.6076e-02,  9.5766e-01,  2.1340e-01, -8.6662e-01,
         -2.8306e-01,  9.0950e-01,  2.9086e-01, -4.1165e-02,  2.0464e-01,
         -2.5202e-01, -1.4658e-01,  9.8336e-02,  5.7042e-02,  4.1333e-02,
         -2.3288e-01,  1.7978e-01, -1.3289e-01,  3.5643e-02, -7.6844e-02,
         -3.7982e-02, -7.2894e-02,  7.7920e-02,  5.5948e-01,  2.3177e-02,
         -5.2362e-01,  3.7519e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1437))
tensor([[ 0.9874,  0.5157,  1.0219,  0.8043,  1.4056,  2.3659,  0.2281,  1.0065,
          1.1814, -0.1250,  1.2637,  0.0726,  0.3345, -0.3173, -0.2598,  0.0092,
         -0.1948, -0.0595, -0.0747, -0.0770,  0.3079, -0.0498,  0.2635,  0.3106,
          0.0310, -0.0870,  0.0359,  0.0116,  0.0477, -0.0310, -0.1614, -0.1947,
          0.0796,  0.8481, -0.0441,  0.0993, -0.0459, -0.3593,  0.2084,  0.0871,
         -0.3436,  0.0262,  0.2734,  0.3608,  0.4916,  0.4370,  0.2649, -0.4946,
          0.1707,  0.1300, -0.4630,  0.0945,  0.8703, -0.9635, -0.0311,  0.5101,
          0.5192,  0.9957,  0.6190,  0.3767, -0.4172,  0.1753,  0.0986,  0.2514,
         -1.0672,  0.0734, -0.1422, -0.0791, -0.4399,  0.4518,  0.0368, -0.0323]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1461))
tensor([[ 1.7813,  0.6976,  0.9494, -0.5360, -0.5726,  0.2997, -0.2375,  0.3626,
          1.3202,  0.5220, -0.5818,  2.0199,  0.0204, -0.1222, -0.0201,  0.0434,
         -0.0195, -0.0456,  0.0827,  1.2341, -0.0348, -0.0092, -0.0035,  0.0026,
         -0.1444, -0.1440,  0.0483, -0.0480,  0.4428, -0.0452,  0.0263, -0.0188,
         -0.0414,  0.0269, -0.0459,  0.0162, -0.0129,  0.0386,  0.7178,  0.1683,
         -0.0403, -0.5948,  0.9767, -1.1570, -1.3168,  0.8343, -0.2416,  0.3275,
         -0.9424,  0.4081,  0.3221, -0.0400,  0.2997,  0.1505, -0.0482, -0.0488,
         -0.2037,  0.1829,  0.8358,  0.6259,  0.0587,  0.0725, -0.3130, -0.0214,
          1.0989, -0.2434,  0.8496, -0.2851,  0.1038,  0.1964,  0.1071,  0.4768]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1488))
tensor([[ 6.8396e-01,  2.6058e-01,  5.3639e-01, -5.9168e-01, -1.1902e-02,
          2.6709e+00, -1.3900e-01,  1.6161e-01,  1.2579e-04,  9.4371e-01,
         -2.5102e-01,  1.1215e+00, -1.0468e-01,  1.1751e-02, -6.9030e-02,
          5.1111e-02,  2.4237e-04,  8.2484e-02, -1.0787e-01, -3.6723e-01,
         -6.6190e-01, -4.2024e-02, -7.5565e-02,  2.5358e-02, -2.5559e-02,
          4.9025e-02,  7.3776e-02,  8.1359e-02, -8.7660e-03,  2.2418e-02,
         -1.7552e-02, -6.5100e-02, -2.8264e-02, -3.6934e-01, -5.1484e-01,
          1.0842e+00,  5.5804e-02, -7.5856e-02,  8.0151e-02,  7.3998e-02,
          6.3701e-02,  1.1419e-01,  8.2542e-01, -4.1400e-01,  6.7434e-01,
          5.3647e-01,  1.1008e-01, -4.3250e-01,  1.9461e-01,  1.2482e-01,
          3.9883e-01, -1.2073e-01, -4.9374e-01,  2.6037e-01, -6.0746e-01,
          5.5664e-01,  1.0425e+00, -1.0351e+00,  6.7023e-01,  9.5663e-01,
          5.2719e-01, -2.1699e-01, -1.0936e+00,  5.7558e-01,  4.7827e-01,
         -3.6868e-02,  4.6359e-01, -3.5016e-01,  1.5433e+00, -8.2157e-01,
          9.8150e-01, -4.9614e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1493))
tensor([[ 2.9980e+00,  5.6034e-01,  1.5729e+00,  1.8813e+00,  7.4925e-01,
          8.2196e-02,  4.7181e-01, -2.0481e-01,  3.2385e-01, -9.3679e-04,
          2.1558e+00,  7.8845e-02,  6.7785e-01, -4.3429e-01,  4.5066e-02,
          2.9750e-01,  2.0614e-01, -1.6098e-01,  9.8240e-02, -8.7782e-02,
          4.1740e-01, -4.7699e-01, -5.1910e-02, -5.7165e-02,  6.2056e-02,
         -2.7465e-02, -2.4367e-02, -2.2746e-02, -1.8380e-03, -3.4889e-01,
         -1.2174e-01,  1.8524e-01,  4.6352e-01, -2.0644e-02, -3.2309e-02,
         -7.6878e-03, -5.6990e-02, -9.2355e-02,  3.3445e-02, -1.0066e-02,
          1.2321e+00, -2.2776e-02, -8.6747e-01,  3.5733e-01,  1.0319e+00,
          1.1445e+00,  5.7736e-01, -1.9911e-01,  4.6700e-01,  4.6651e-01,
         -2.9168e-01,  6.0051e-01, -3.9370e-01, -1.4638e-01, -3.4396e-01,
          8.4550e-01, -2.0446e-02,  4.6885e-02,  9.5430e-03,  5.0001e-03,
         -1.1244e-01,  1.0135e-01, -7.2417e-01,  2.4057e-01,  1.3422e+00,
         -6.0574e-01, -1.6677e+00,  8.3470e-01,  2.3826e+00, -3.1569e-02,
          1.7028e+00, -8.1003e-01]], device='cuda:0')
收敛loss为： ('收敛', tensor(2.1588))
tensor([[ 1.0037e-01, -2.7586e-02,  1.3769e-01, -1.4937e-01,  1.3367e+00,
          7.9455e-01,  2.6065e-01, -5.6834e-01,  1.2233e+00,  1.4435e+00,
          1.1370e+00,  1.8310e+00, -2.2717e-02, -9.8555e-02, -8.8627e-02,
         -5.9124e-03,  8.6619e-03, -2.2820e-02,  4.3752e-03,  1.8268e-03,
          1.2947e-03,  2.8475e-01,  8.2844e-02,  3.0318e-01,  5.3321e-02,
         -1.8759e-01,  2.5466e-01,  1.1635e-01, -3.0054e-01, -2.8312e-02,
          1.0205e+00,  4.7884e-01,  2.6817e-01, -2.6911e-02,  4.9486e-02,
         -8.8291e-02, -1.8138e-01,  1.9138e-01, -2.8602e-01, -3.2563e-01,
         -2.6141e-01, -5.4809e-01, -2.1283e-01,  5.6422e-02,  2.2404e-01,
          1.7047e-02, -8.3400e-06,  5.7977e-01, -4.8086e-01,  2.6160e-01,
          1.5772e-01, -5.5846e-01,  9.0241e-01,  4.1727e-01,  7.8257e-01,
         -5.1634e-01, -4.9765e-01,  3.1461e-01,  3.5948e-01,  6.9817e-01,
          7.3274e-01, -4.1730e-01, -3.5754e-01,  2.1301e-01,  3.7318e-01,
          8.1466e-02,  5.9024e-01, -3.7461e-02,  5.8850e-02,  5.8468e-02,
          3.1620e-01, -5.9227e-02]], device='cuda:0')
6821.802102327347
         4286441706 function calls (4281733053 primitive calls) in 6853.142 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   2837/1    0.064    0.000 6853.147 6853.147 {built-in method builtins.exec}
        1    0.001    0.001 6853.147 6853.147 test.py:1(<module>)
        1  107.304  107.304 6821.801 6821.801 para4band.py:337(train_Magnetic)
  2000000   98.652    0.000 2694.666    0.001 para4band.py:168(loss)
  1000000    3.628    0.000 1956.574    0.002 _tensor.py:428(backward)
  1000000    4.485    0.000 1952.677    0.002 __init__.py:106(backward)
  1000000 1928.370    0.002 1928.370    0.002 {method 'run_backward' of 'torch._C._EngineBase' objects}
  1000000   10.559    0.000 1896.228    0.002 optimizer.py:265(wrapper)
  1000000    7.054    0.000 1858.419    0.002 optimizer.py:29(_use_grad)
  1000000    5.712    0.000 1847.786    0.002 adam.py:108(step)
  1000000   60.523    0.000 1639.808    0.002 adam.py:231(adam)
4000000/2000000   12.253    0.000 1582.140    0.001 module.py:1494(_call_impl)
  2000000   13.802    0.000 1572.797    0.001 para4band.py:111(forward)
  1000000   13.942    0.000 1527.178    0.002 adam.py:396(_multi_tensor_adam)
  2000331    3.525    0.000 1011.238    0.001 para4tb.py:113(create_model_function)
  2000331  334.580    0.000 1007.712    0.001 para4tb.py:87(__create_TB_function)
  2000331   25.052    0.000  531.510    0.000 para4tb.py:92(<listcomp>)
146121180   43.910    0.000  506.825    0.000 container.py:629(<genexpr>)
  2000000  160.195    0.000  467.843    0.000 para4band.py:155(loss3)
144119520  103.026    0.000  462.915    0.000 container.py:603(__getitem__)
  2002246  427.005    0.000  427.005    0.000 {built-in method torch._foreach_add_}
  2007671   43.576    0.000  327.793    0.000 para4tb.py:101(matrix_function)
  8007671  306.221    0.000  306.221    0.000 {built-in method torch.matmul}
  2000000   57.121    0.000  288.754    0.000 para4band.py:145(loss2)
  1001123  243.342    0.000  243.342    0.000 {built-in method torch._foreach_addcmul_}
  2000000   55.516    0.000  242.605    0.000 para4band.py:136(loss1)
144143280   97.458    0.000  195.456    0.000 container.py:586(_get_abs_string_index)
  2000000   11.410    0.000  194.811    0.000 para4band.py:76(forward)
  4015342   23.393    0.000  193.983    0.000 functional.py:192(einsum)
  1000000  141.551    0.000  187.336    0.000 adam.py:66(_init_group)
  1000000    2.514    0.000  176.434    0.000 _contextlib.py:112(decorate_context)
  1000000  137.430    0.000  166.924    0.000 _foreach_utils.py:20(_group_tensors_by_device_and_dtype)
  4015342  163.738    0.000  163.738    0.000 {built-in method torch.einsum}
151237105  108.964    0.000  150.503    0.000 {built-in method builtins.getattr}
144002246   89.222    0.000  147.876    0.000 optimizer.py:39(_get_value)
  4000001  145.207    0.000  145.207    0.000 {built-in method torch.sort}
 12665977  126.294    0.000  126.294    0.000 {built-in method torch.mean}
  6000000  111.248    0.000  111.248    0.000 {built-in method torch.abs}
  1001123   26.809    0.000  104.503    0.000 adam.py:489(<listcomp>)
  6000000  103.863    0.000  103.863    0.000 {built-in method torch.topk}
  1000000   73.153    0.000  103.385    0.000 optimizer.py:435(zero_grad)
459901327/459898226   71.863    0.000  101.873    0.000 {built-in method builtins.len}
      295    0.011    0.000  100.340    0.340 __init__.py:1(<module>)
  1001123   24.210    0.000   94.392    0.000 adam.py:490(<listcomp>)
  1001123   94.207    0.000   94.207    0.000 {built-in method torch._foreach_add}
  1001123   92.122    0.000   92.122    0.000 {built-in method torch._foreach_sqrt}
  1001123   13.547    0.000   74.482    0.000 adam.py:494(<listcomp>)
  2001660   74.070    0.000   74.070    0.000 {built-in method torch.stack}
  6008003   69.946    0.000   69.960    0.000 {method 'type' of 'torch._C._TensorBase' objects}
 72001123   42.036    0.000   60.935    0.000 optimizer.py:52(_dispatch_sqrt)
156152940   51.868    0.000   51.883    0.000 module.py:1601(__getattr__)
288004492   51.226    0.000   51.226    0.000 {built-in method torch.is_complex}
145095249   50.343    0.000   50.343    0.000 {method 'item' of 'torch._C._TensorBase' objects}
  3038261   12.958    0.000   50.089    0.000 {built-in method builtins.all}
722114280   41.613    0.000   41.613    0.000 {method 'append' of 'list' objects}
  1001123   37.227    0.000   37.227    0.000 {built-in method torch._foreach_div_}
304389769/302345656   32.636    0.000   36.714    0.000 {built-in method builtins.isinstance}
  2000000   35.451    0.000   35.451    0.000 {method 'repeat' of 'torch._C._TensorBase' objects}
  2000333   35.303    0.000   35.303    0.000 {built-in method torch.zeros}
  2000001   35.118    0.000   35.118    0.000 {built-in method torch.diag_embed}
  1001123   33.594    0.000   33.594    0.000 {built-in method torch._foreach_addcdiv_}
  2002246   33.439    0.000   33.439    0.000 {built-in method torch._foreach_mul_}
290312309   30.010    0.000   30.010    0.000 container.py:625(__len__)
   2671/5    0.013    0.000   28.515    5.703 <frozen importlib._bootstrap>:1167(_find_and_load)
   2637/5    0.010    0.000   28.515    5.703 <frozen importlib._bootstrap>:1122(_find_and_load_unlocked)
  2361/12    0.008    0.000   28.508    2.376 <frozen importlib._bootstrap>:666(_load_unlocked)
   2163/5    0.005    0.000   28.508    5.702 <frozen importlib._bootstrap_external>:934(exec_module)
  5725/13    0.003    0.000   28.399    2.185 <frozen importlib._bootstrap>:233(_call_with_frames_removed)
  1000000    1.927    0.000   27.534    0.000 optimizer.py:64(_default_to_fused_or_foreach)
  2000000    3.913    0.000   26.833    0.000 profiler.py:491(__enter__)
  1074/92    0.002    0.000   25.441    0.277 {built-in method builtins.__import__}
  1001123   12.113    0.000   25.132    0.000 adam.py:433(<listcomp>)
  1001123   11.147    0.000   23.802    0.000 adam.py:435(<listcomp>)
  1001123   10.922    0.000   23.796    0.000 adam.py:436(<listcomp>)
  1001123   10.928    0.000   23.618    0.000 adam.py:434(<listcomp>)
  2000000    1.532    0.000   22.920    0.000 _ops.py:497(__call__)
  2000000    9.076    0.000   21.528    0.000 profiler.py:495(__exit__)
  2000000   21.388    0.000   21.388    0.000 {built-in method torch._ops.profiler._record_function_enter_new}
  4000000   20.129    0.000   20.129    0.000 {method 'view' of 'torch._C._TensorBase' objects}
 2430/662    0.005    0.000   20.071    0.030 <frozen importlib._bootstrap>:1209(_handle_fromlist)
     2163    0.014    0.000   20.058    0.009 <frozen importlib._bootstrap_external>:1007(get_code)
     2163    0.006    0.000   19.703    0.009 <frozen importlib._bootstrap_external>:1127(get_data)
 72121573   12.980    0.000   19.361    0.000 _tensor.py:942(__hash__)
  4000000   19.254    0.000   19.254    0.000 {built-in method torch.diagonal}
 73001123   18.579    0.000   18.579    0.000 optimizer.py:72(<genexpr>)
 73001123   14.616    0.000   18.539    0.000 adam.py:268(<genexpr>)
   690129   18.332    0.000   18.332    0.000 {built-in method torch.tensor}
  1000000    3.968    0.000   18.091    0.000 __init__.py:50(_make_grads)
  2071545    9.882    0.000   17.492    0.000 module.py:1617(__setattr__)
  4000001   17.193    0.000   17.193    0.000 {method 'transpose' of 'torch._C._TensorBase' objects}
2239/2169   16.999    0.008   17.138    0.008 {method 'read' of '_io.BufferedReader' objects}
223035576   15.822    0.000   15.822    0.000 _jit_internal.py:1102(is_scripting)
  2007671   15.593    0.000   15.593    0.000 {built-in method torch.exp}
  2000329   14.675    0.000   14.675    0.000 {built-in method torch.randn}
  1000000    1.936    0.000   14.619    0.000 optimizer.py:228(_cuda_graph_capture_health_check)
  1000000   13.305    0.000   13.305    0.000 {built-in method torch.ones_like}
  2000000    1.542    0.000   11.784    0.000 _ops.py:286(__call__)
  1000005    1.464    0.000   10.333    0.000 __init__.py:94(is_available)
  2000000   10.242    0.000   10.242    0.000 {built-in method torch._ops.profiler.}
   665977    5.172    0.000   10.134    0.000 functional.py:1387(norm)
144149633   10.002    0.000   10.002    0.000 {built-in method _operator.index}
  2000000    9.724    0.000    9.724    0.000 {built-in method torch.flatten}
145003369    9.353    0.000    9.353    0.000 _utils.py:786(is_compiling)
  2000000    7.787    0.000    7.787    0.000 {built-in method torch.conj}
  1000005    1.011    0.000    7.581    0.000 __init__.py:91(_nvml_based_avail)
  2000000    7.494    0.000    7.494    0.000 {method 'conj' of 'torch._C._TensorBase' objects}
     7671    0.068    0.000    7.201    0.001 para4band.py:101(init_trans_matrix)
        1    0.001    0.001    6.906    6.906 _meta_registrations.py:1(<module>)
  2000000    4.364    0.000    6.759    0.000 profiler.py:482(__init__)
        2    0.001    0.000    6.693    3.346 decompositions.py:1(<module>)
  1000027    0.704    0.000    6.570    0.000 <frozen os>:772(getenv)
  2001660    3.924    0.000    6.510    0.000 container.py:628(__iter__)
        1    0.000    0.000    6.473    6.473 fake_tensor.py:1(<module>)
        1    0.000    0.000    6.450    6.450 _guards.py:1(<module>)
 72144727    6.383    0.000    6.383    0.000 {built-in method builtins.id}
        1    0.000    0.000    6.049    6.049 band_data_in.py:1(<module>)
  1001248    1.518    0.000    5.867    0.000 <frozen _collections_abc>:771(get)
 72001130    5.688    0.000    5.688    0.000 {built-in method math.sqrt}
  4007315    5.548    0.000    5.548    0.000 {built-in method torch._C._get_tracing_state}
  4062148    3.810    0.000    5.381    0.000 grad_mode.py:149(__init__)
  1001123    5.134    0.000    5.134    0.000 adam.py:492(<listcomp>)
   665977    4.638    0.000    4.638    0.000 {built-in method torch._C._linalg.linalg_vector_norm}
  2043771    3.655    0.000    4.568    0.000 parameter.py:8(__instancecheck__)
        1    0.000    0.000    4.434    4.434 outputs.py:1(<module>)
  1000357    2.910    0.000    4.350    0.000 <frozen os>:673(__getitem__)
     7671    4.321    0.001    4.321    0.001 {built-in method torch._C._linalg.linalg_eigh}
2498/2416    0.019    0.000    4.219    0.002 <frozen importlib._bootstrap>:1056(_find_spec)
2361/2230    0.004    0.000    4.126    0.002 <frozen importlib._bootstrap>:566(module_from_spec)
  160/140    0.000    0.000    4.074    0.029 <frozen importlib._bootstrap_external>:1231(create_module)
  160/140    2.505    0.016    4.073    0.029 {built-in method _imp.create_dynamic}
        1    0.000    0.000    3.729    3.729 dos.py:1(<module>)
        3    0.000    0.000    3.594    1.198 _support_alternative_backends.py:1(<module>)
        1    0.000    0.000    3.489    3.489 _signal_api.py:1(<module>)
     2491    0.002    0.000    3.414    0.001 <frozen importlib._bootstrap_external>:1496(find_spec)
2504/2491    0.007    0.000    3.412    0.001 <frozen importlib._bootstrap_external>:1464(_get_spec)
     3709    0.029    0.000    3.390    0.001 <frozen importlib._bootstrap_external>:1604(find_spec)
    10622    0.004    0.000    3.320    0.000 <frozen importlib._bootstrap_external>:140(_path_stat)
    10795    3.319    0.000    3.319    0.000 {built-in method posix.stat}
     4458    0.003    0.000    3.283    0.001 <frozen importlib._bootstrap_external>:150(_path_is_mode_type)
     4007    0.002    0.000    3.283    0.001 <frozen importlib._bootstrap_external>:159(_path_isfile)
  4015354    2.083    0.000    3.114    0.000 _VF.py:26(__getattr__)
  1000000    2.433    0.000    3.058    0.000 _foreach_utils.py:24(<listcomp>)
        1    0.000    0.000    2.946    2.946 band.py:1(<module>)
        1    0.000    0.000    2.860    2.860 para4band.py:123(__init__)
        1    0.000    0.000    2.860    2.860 para4band.py:83(__init__)
        1    0.000    0.000    2.859    2.859 para4tb.py:13(__init__)
     1994    0.018    0.000    2.788    0.001 {built-in method builtins.print}
      330    0.002    0.000    2.784    0.008 module.py:1039(to)
      330    0.062    0.000    2.781    0.008 module.py:795(_apply)
     3657    0.010    0.000    2.770    0.001 _tensor.py:420(__repr__)
     3657    0.036    0.000    2.759    0.001 _tensor_str.py:633(_str)
        5    0.000    0.000    2.728    0.546 functional.py:1(<module>)
     2163    2.715    0.001    2.715    0.001 {built-in method io.open_code}
     3657    0.103    0.000    2.660    0.001 _tensor_str.py:366(_str_intern)
  1000000    0.882    0.000    2.657    0.000 _contextlib.py:141(clone)
    34738    1.957    0.000    2.610    0.000 {method 'to' of 'torch._C._TensorBase' objects}
    23760    0.013    0.000    2.603    0.000 module.py:1139(convert)
  1031074    1.137    0.000    2.576    0.000 grad_mode.py:53(__enter__)
     3657    0.031    0.000    2.499    0.001 _tensor_str.py:287(_tensor_str)
2003902/2003650    2.137    0.000    2.185    0.000 typing.py:357(inner)
     3657    0.452    0.000    2.169    0.001 _tensor_str.py:100(__init__)
  1000000    0.451    0.000    2.147    0.000 graphs.py:19(is_current_stream_capturing)
  1431389    1.224    0.000    2.121    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    1.960    1.960 tight_binding_hamiltonian.py:1(<module>)
  1031074    0.845    0.000    1.856    0.000 grad_mode.py:57(__exit__)
        1    0.000    0.000    1.841    1.841 Orbit_spd_manager.py:1(<module>)
        1    0.000    0.000    1.817    1.817 Orbit_spd_with_spin.py:1(<module>)
  1001123    1.188    0.000    1.809    0.000 _foreach_utils.py:27(<lambda>)
  1031084    1.700    0.000    1.803    0.000 grad_mode.py:48(__init__)
        1    0.000    0.000    1.796    1.796 Orbit_spd_without_spin.py:1(<module>)
        1    0.000    0.000    1.794    1.794 Orbit_spd.py:1(<module>)
        1    0.000    0.000    1.727    1.727 _spline_filters.py:1(<module>)
        1    0.000    0.000    1.715    1.715 _signaltools.py:1(<module>)
  1000000    1.697    0.000    1.697    0.000 {built-in method torch._C._cuda_isCurrentStreamCapturing}
        1    0.000    0.000    1.667    1.667 _ltisys.py:1(<module>)
        1    0.000    0.000    1.637    1.637 pyplot.py:1(<module>)
  160/128    0.000    0.000    1.608    0.013 <frozen importlib._bootstrap_external>:1239(exec_module)
  160/128    0.013    0.000    1.608    0.013 {built-in method _imp.exec_dynamic}
        1    0.000    0.000    1.597    1.597 inputs.py:1(<module>)
        1    0.000    0.000    1.535    1.535 _interpolate.py:1(<module>)
        1    0.000    0.000    1.519    1.519 _fitpack_py.py:1(<module>)
    46/41    0.000    0.000    1.500    0.037 __init__.py:108(import_module)
    47/41    0.000    0.000    1.500    0.037 <frozen importlib._bootstrap>:1194(_gcd_import)
        1    0.000    0.000    1.477    1.477 _peak_finding.py:1(<module>)
        1    0.000    0.000    1.476    1.476 _bsplines.py:1(<module>)
  1000365    0.895    0.000    1.439    0.000 <frozen os>:755(encode)
  6093222    1.406    0.000    1.406    0.000 {built-in method torch.is_grad_enabled}
        1    0.000    0.000    1.400    1.400 polyfuncs.py:1(<module>)
        1    0.000    0.000    1.398    1.398 specialpolys.py:1(<module>)
        1    0.000    0.000    1.228    1.228 rings.py:1(<module>)
  7238638    1.212    0.000    1.212    0.000 {method 'get' of 'dict' objects}
2075225/2074884    0.619    0.000    1.192    0.000 {built-in method builtins.hasattr}
  4015342    1.087    0.000    1.087    0.000 {built-in method torch._C._has_torch_function}
      329    0.005    0.000    1.081    0.003 para4tb.py:118(init_para)
        1    0.000    0.000    1.070    1.070 eager_transforms.py:1(<module>)
        1    0.000    0.000    1.019    1.019 partfrac.py:1(<module>)
        1    0.000    0.000    1.019    1.019 decorator.py:65(xthreaded)
        1    0.000    0.000    1.019    1.019 decorator.py:16(threaded_factory)
5017/4863    0.072    0.000    0.923    0.000 {built-in method builtins.__build_class__}
       10    0.000    0.000    0.917    0.092 linear.py:1(<module>)
2500/2416    0.002    0.000    0.908    0.000 __init__.py:101(find_spec)
      2/1    0.000    0.000    0.905    0.905 __init__.py:111(spec_for_distutils)
    98016    0.104    0.000    0.898    0.000 _tensor.py:868(__format__)
  1000006    0.600    0.000    0.874    0.000 __init__.py:87(_is_compiled)
        1    0.000    0.000    0.857    0.857 _stats_py.py:1(<module>)
        2    0.000    0.000    0.849    0.424 python.py:1(<module>)
        1    0.000    0.000    0.835    0.835 proxy_tensor.py:1(<module>)
  4062148    0.812    0.000    0.812    0.000 {built-in method torch._C._set_grad_enabled}
       19    0.001    0.000    0.811    0.043 utils.py:1(<module>)
        1    0.000    0.000    0.762    0.762 _jit_internal.py:1(<module>)
        1    0.000    0.000    0.731    0.731 colorbar.py:1(<module>)
        1    0.000    0.000    0.712    0.712 _kdtree.py:1(<module>)
        1    0.000    0.000    0.687    0.687 distributions.py:1(<module>)
  1001123    0.561    0.000    0.685    0.000 optimizer.py:46(_stack_if_compiling)
        1    0.000    0.000    0.679    0.679 ctx_fp.py:1(<module>)
        1    0.000    0.000    0.665    0.665 figure.py:1(<module>)
        1    0.000    0.000    0.653    0.653 pycode.py:1(<module>)
     13/1    0.000    0.000    0.653    0.653 __init__.py:219(_lazy_init)
        1    0.000    0.000    0.650    0.650 codeprinter.py:1(<module>)
        6    0.000    0.000    0.644    0.107 __init__.py:274(load)
        3    0.000    0.000    0.638    0.213 __config__.py:1(<module>)
        5    0.000    0.000    0.628    0.126 serialization.py:28(loadfn)
        1    0.000    0.000    0.617    0.617 polytools.py:1(<module>)
        1    0.000    0.000    0.617    0.617 ctx_base.py:1(<module>)
        1    0.000    0.000    0.608    0.608 mock.py:1(<module>)
  4039435    0.604    0.000    0.604    0.000 {method 'values' of 'collections.OrderedDict' objects}
        1    0.596    0.596    0.596    0.596 {built-in method torch._C._cuda_init}
  1001123    0.560    0.000    0.560    0.000 _foreach_utils.py:27(<listcomp>)
        1    0.000    0.000    0.559    0.559 _optimize.py:1(<module>)
        2    0.000    0.000    0.554    0.277 constructor.py:1(<module>)
        1    0.000    0.000    0.545    0.545 inputs.py:1947(PotcarSingle)
2010053/2010048    0.539    0.000    0.539    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.529    0.529 _subplots.py:1(<module>)
  1000000    0.527    0.000    0.527    0.000 {built-in method torch._C._are_functorch_transforms_active}
        1    0.000    0.000    0.518    0.518 hub.py:1(<module>)
        1    0.000    0.000    0.494    0.494 _axes.py:1(<module>)
        1    0.000    0.000    0.488    0.488 immutable.py:1(<module>)
        2    0.000    0.000    0.486    0.243 dist.py:1(<module>)
  1000000    0.481    0.000    0.481    0.000 __init__.py:98(_tensor_or_tensors_to_tuple)
  1767650    0.480    0.000    0.480    0.000 {built-in method torch._C._has_torch_function_unary}
        1    0.000    0.000    0.472    0.472 contour.py:1(<module>)
        7    0.003    0.000    0.468    0.067 __init__.py:299(loads)
       12    0.001    0.000    0.463    0.039 core.py:1(<module>)
        5    0.000    0.000    0.463    0.093 json.py:885(decode)
  2000000    0.453    0.000    0.453    0.000 {method '__exit__' of 'torch._C.DisableTorchFunctionSubclass' objects}
        1    0.000    0.000    0.444    0.444 distributed_c10d.py:1(<module>)
        4    0.000    0.000    0.443    0.111 _base.py:1(<module>)
  1000500    0.442    0.000    0.442    0.000 {method 'encode' of 'str' objects}
       31    0.000    0.000    0.442    0.014 __init__.py:129(__getattr__)
        2    0.000    0.000    0.422    0.211 quantize.py:1(<module>)
        2    0.000    0.000    0.420    0.210 dense.py:1(<module>)
  2043771    0.415    0.000    0.415    0.000 {function _ParameterMeta.__instancecheck__ at 0x14f118ff7920}
  1000005    0.415    0.000    0.415    0.000 {built-in method torch._C._cuda_getDeviceCount}
  1014628    0.399    0.000    0.399    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.391    0.391 para4tb.py:32(load_and_check_matrix)
     1000    0.028    0.000    0.382    0.000 para4band.py:443(<listcomp>)
 571498/5    0.173    0.000    0.379    0.076 json.py:728(process_decoded)
26830/756    0.062    0.000    0.378    0.000 json.py:876(<dictcomp>)
        1    0.000    0.000    0.377    0.377 expr.py:1(<module>)
        1    0.000    0.000    0.372    0.372 override.py:1(<module>)
        1    0.000    0.000    0.372    0.372 __init__.py:80(do_override)
        1    0.000    0.000    0.372    0.372 __init__.py:63(ensure_local_distutils)
        1    0.000    0.000    0.367    0.367 _distn_infrastructure.py:1(<module>)
        1    0.000    0.000    0.365    0.365 _sputils.py:1(<module>)
        5    0.000    0.000    0.365    0.073 errors.py:1(<module>)
        1    0.000    0.000    0.362    0.362 base_events.py:1(<module>)
23121/12951    0.075    0.000    0.347    0.000 json.py:881(<listcomp>)
        1    0.000    0.000    0.343    0.343 matrixbase.py:1(<module>)
        1    0.000    0.000    0.340    0.340 sympify.py:1(<module>)
      330    0.002    0.000    0.334    0.001 container.py:580(__init__)
        1    0.000    0.000    0.329    0.329 _diagnostic.py:1(<module>)
      330    0.001    0.000    0.327    0.001 container.py:631(__iadd__)
      330    0.008    0.000    0.326    0.001 container.py:650(extend)
        1    0.000    0.000    0.323    0.323 wannier90.py:1(<module>)
        1    0.000    0.000    0.321    0.321 _geometric_slerp.py:1(<module>)
    23760    0.023    0.000    0.316    0.000 container.py:639(append)
        1    0.000    0.000    0.315    0.315 symbolic_opset11.py:1(<module>)
        2    0.000    0.000    0.314    0.157 _util.py:1(<module>)
        2    0.000    0.000    0.308    0.154 structure.py:1(<module>)
        1    0.000    0.000    0.308    0.308 _array_api.py:1(<module>)
        2    0.000    0.000    0.301    0.151 distance.py:1(<module>)
     2163    0.006    0.000    0.296    0.000 <frozen importlib._bootstrap_external>:727(_compile_bytecode)
4986/3657    0.014    0.000    0.294    0.000 _tensor_str.py:250(_tensor_str_with_formatter)
        1    0.004    0.004    0.286    0.286 {built-in method torch._C._initExtension}
     2163    0.286    0.000    0.286    0.000 {built-in method marshal.loads}
      331    0.001    0.000    0.285    0.001 para4tb.py:126(set_zero_and_init_matrix_fuction)
     7671    0.041    0.000    0.282    0.000 para4band.py:73(__init__)
        1    0.000    0.000    0.279    0.279 slice.py:1(<module>)
        1    0.000    0.000    0.277    0.277 matexpr.py:1(<module>)
    48180    0.276    0.000    0.276    0.000 {built-in method torch.zeros_like}
        1    0.000    0.000    0.274    0.274 _infra.py:1(<module>)
        1    0.000    0.000    0.272    0.272 request.py:1(<module>)
        2    0.000    0.000    0.271    0.136 text.py:1(<module>)
        1    0.000    0.000    0.267    0.267 formatter.py:1(<module>)
        3    0.000    0.000    0.266    0.089 numbers.py:1(<module>)
  2000000    0.261    0.000    0.261    0.000 __init__.py:89(annotate)
        1    0.000    0.000    0.259    0.259 index_tricks.py:1(<module>)
     1329    0.009    0.000    0.256    0.000 _tensor_str.py:276(<listcomp>)
        1    0.000    0.000    0.251    0.251 _minimize.py:1(<module>)
        1    0.000    0.000    0.245    0.245 client.py:1(<module>)
     1329    0.012    0.000    0.243    0.000 _tensor_str.py:208(_vector_str)
        1    0.000    0.000    0.243    0.243 products.py:1(<module>)
        1    0.000    0.000    0.239    0.239 summations.py:1(<module>)
        1    0.000    0.000    0.239    0.239 json.py:1(<module>)
        1    0.000    0.000    0.236    0.236 textpath.py:1(<module>)
        1    0.000    0.000    0.231    0.231 matmul.py:1(<module>)
        2    0.000    0.000    0.228    0.114 parser.py:1(<module>)
        2    0.000    0.000    0.227    0.113 function.py:1(<module>)
        2    0.000    0.000    0.226    0.113 fake_quantize.py:1(<module>)
    23760    0.023    0.000    0.214    0.000 container.py:614(__setitem__)
        1    0.000    0.000    0.209    0.209 defmatrix.py:1(<module>)
        1    0.000    0.000    0.208    0.208 mul.py:1(<module>)
        1    0.000    0.000    0.207    0.207 mathtext.py:1(<module>)
        2    0.000    0.000    0.207    0.103 observer.py:1(<module>)
        1    0.000    0.000    0.205    0.205 rcsetup.py:1(<module>)
 1159/799    0.001    0.000    0.202    0.000 {built-in method builtins.sum}
      300    0.003    0.000    0.201    0.001 matrix_element.py:127(__add__)
       10    0.061    0.006    0.201    0.020 {method 'read' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    0.200    0.200 cyaml.py:1(<module>)
      245    0.000    0.000    0.197    0.001 _docscrape.py:579(__init__)
        1    0.000    0.000    0.195    0.195 cmd.py:1(<module>)
     1329    0.020    0.000    0.191    0.000 _tensor_str.py:238(<listcomp>)
     6024    0.009    0.000    0.191    0.000 numeric.py:2170(allclose)
        1    0.016    0.016    0.189    0.189 {built-in method _pickle.load}
  1001328    0.188    0.000    0.188    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.187    0.187 const_fold.py:1(<module>)
        1    0.000    0.000    0.181    0.181 _continuous_distns.py:1(<module>)
        1    0.000    0.000    0.177    0.177 _linprog.py:1(<module>)
      251    0.001    0.000    0.177    0.001 _docscrape.py:140(__init__)
        1    0.000    0.000    0.174    0.174 _script.py:1(<module>)
 2056/183    0.001    0.000    0.174    0.001 cache.py:69(wrapper)
    28/25    0.000    0.000    0.173    0.007 operations.py:62(__new__)
    95688    0.027    0.000    0.171    0.000 _tensor_str.py:219(_val_formatter)
        5    0.000    0.000    0.170    0.034 add.py:197(flatten)
        1    0.000    0.000    0.169    0.169 algebraicfield.py:1(<module>)
     3657    0.168    0.000    0.168    0.000 {built-in method torch.masked_select}
    31431    0.064    0.000    0.164    0.000 module.py:539(register_parameter)
        1    0.000    0.000    0.162    0.162 plot.py:1(<module>)
     6024    0.023    0.000    0.161    0.000 numeric.py:2249(isclose)
        3    0.000    0.000    0.160    0.053 linalg.py:1(<module>)
    51345    0.027    0.000    0.157    0.000 {built-in method builtins.setattr}
        1    0.000    0.000    0.157    0.157 Image.py:1(<module>)
        3    0.000    0.000    0.155    0.052 serialization.py:1(<module>)
        1    0.000    0.000    0.155    0.155 _root.py:1(<module>)
        1    0.000    0.000    0.155    0.155 feedparser.py:1(<module>)
        1    0.000    0.000    0.154    0.154 _svds.py:1(<module>)
      300    0.000    0.000    0.153    0.001 matrix_element.py:14(__init__)
      300    0.005    0.000    0.152    0.001 matrix_element.py:21(check_input)
        1    0.000    0.000    0.152    0.152 _tensor.py:1(<module>)
    98016    0.071    0.000    0.152    0.000 _tensor_str.py:176(format)
        1    0.000    0.000    0.150    0.150 _policybase.py:1(<module>)
        1    0.000    0.000    0.150    0.150 tensor.py:1(<module>)
        1    0.000    0.000    0.149    0.149 datapipe.py:1(<module>)
        1    0.000    0.000    0.149    0.149 _svdp.py:1(<module>)
        4    0.000    0.000    0.148    0.037 random.py:1(<module>)
     3657    0.148    0.000    0.148    0.000 {built-in method torch.isfinite}
     7315    0.013    0.000    0.147    0.000 _tensor.py:920(__iter__)
        1    0.000    0.000    0.142    0.142 _minpack_py.py:1(<module>)
        1    0.000    0.000    0.141    0.141 band.py:29(get_data)
        1    0.000    0.000    0.141    0.141 band_data_in.py:13(__init__)
        1    0.000    0.000    0.140    0.140 band_data_in.py:29(__module_choose)
        1    0.001    0.001    0.140    0.140 band_data_in.py:36(__get_dat_content)
        2    0.000    0.000    0.140    0.070 _compression.py:113(readall)
        1    0.000    0.000    0.138    0.138 bz2.py:157(read)
        4    0.000    0.000    0.138    0.035 basic.py:1(<module>)
      110    0.000    0.000    0.138    0.001 linecache.py:36(getlines)
       51    0.000    0.000    0.138    0.003 linecache.py:80(updatecache)
        1    0.000    0.000    0.137    0.137 fontconfig_pattern.py:1(<module>)
        1    0.013    0.013    0.137    0.137 band_data_in.py:71(get_band)
      251    0.004    0.000    0.137    0.001 _docscrape.py:388(_parse)
        3    0.000    0.000    0.137    0.046 solvers.py:1(<module>)
        9    0.000    0.000    0.136    0.015 _compression.py:72(read)
       39    0.136    0.003    0.136    0.003 {method 'decompress' of '_bz2.BZ2Decompressor' objects}
       14    0.000    0.000    0.135    0.010 tokenize.py:392(open)
      329    0.095    0.000    0.135    0.000 para4tb.py:121(<listcomp>)
        1    0.000    0.000    0.135    0.135 _utils_internal.py:1(<module>)
        1    0.000    0.000    0.134    0.134 _multicomp.py:1(<module>)
        7    0.000    0.000    0.134    0.019 common.py:1(<module>)
  1000000    0.134    0.000    0.134    0.000 optimizer.py:249(_optimizer_step_code)
        2    0.000    0.000    0.134    0.067 utilities.py:1(<module>)
       30    0.000    0.000    0.132    0.004 tokenize.py:299(detect_encoding)
       36    0.000    0.000    0.132    0.004 tokenize.py:323(read_or_stop)
       20    0.132    0.007    0.132    0.007 {method 'readline' of '_io.BufferedReader' objects}
   103359    0.131    0.000    0.131    0.000 {method 'detach' of 'torch._C._TensorBase' objects}
        2    0.000    0.000    0.129    0.064 inverse.py:1(<module>)
        1    0.000    0.000    0.128    0.128 numerictypes.py:1(<module>)
        1    0.000    0.000    0.128    0.128 matpow.py:1(<module>)
        2    0.000    0.000    0.127    0.063 _parser.py:1(<module>)
      329    0.009    0.000    0.126    0.000 para4band.py:416(<listcomp>)
        1    0.000    0.000    0.125    0.125 power.py:1(<module>)
        1    0.000    0.000    0.124    0.124 multiarray.py:1(<module>)
     7315    0.124    0.000    0.124    0.000 {method 'unbind' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.124    0.124 autograd_function.py:1(<module>)
        1    0.000    0.000    0.124    0.124 polyclasses.py:1(<module>)
        1    0.000    0.000    0.122    0.122 maggroups.py:1(<module>)
        1    0.000    0.000    0.116    0.116 _windows.py:1(<module>)
        1    0.000    0.000    0.116    0.116 tempfile.py:1(<module>)
        1    0.000    0.000    0.116    0.116 _misc.py:1(<module>)
        1    0.000    0.000    0.116    0.116 sparse_adam.py:1(<module>)
        1    0.000    0.000    0.114    0.114 _functional.py:1(<module>)
        1    0.000    0.000    0.113    0.113 memory.py:1(<module>)
        1    0.000    0.000    0.111    0.111 _qmc.py:1(<module>)
        6    0.000    0.000    0.110    0.018 rnn.py:1(<module>)
        1    0.000    0.000    0.110    0.110 cli.py:1(<module>)
        1    0.000    0.000    0.109    0.109 _memory_viz.py:1(<module>)
        1    0.000    0.000    0.109    0.109 shutil.py:1(<module>)
        1    0.000    0.000    0.109    0.109 _entry_points.py:1(<module>)
        1    0.000    0.000    0.108    0.108 _recursive.py:1(<module>)
        1    0.000    0.000    0.108    0.108 category.py:1(<module>)
        2    0.000    0.000    0.108    0.054 overrides.py:1(<module>)
        1    0.000    0.000    0.107    0.107 point.py:1(<module>)
        4    0.000    0.000    0.107    0.027 eigen.py:1(<module>)
        1    0.000    0.000    0.107    0.107 image.py:1(<module>)
        1    0.000    0.000    0.105    0.105 composition.py:1(<module>)
        2    0.000    0.000    0.103    0.052 _ops.py:1(<module>)
        2    0.000    0.000    0.103    0.052 bsplines.py:1(<module>)
        1    0.000    0.000    0.102    0.102 base_backend.py:1(<module>)
        2    0.000    0.000    0.102    0.051 callable.py:1(<module>)
        1    0.000    0.000    0.101    0.101 graph_module.py:1(<module>)
        2    0.000    0.000    0.100    0.050 series.py:1(<module>)
    31022    0.100    0.000    0.100    0.000 {method 'split' of 'str' objects}
      330    0.002    0.000    0.099    0.000 adam.py:14(__init__)
        3    0.000    0.000    0.099    0.033 _basic.py:1(<module>)
        2    0.000    0.000    0.099    0.049 domainmatrix.py:1(<module>)
     6024    0.033    0.000    0.098    0.000 numeric.py:2330(within_tol)
        1    0.000    0.000    0.098    0.098 find_first_use_of_broken_modules.py:1(<module>)
        1    0.000    0.000    0.098    0.098 ivp.py:1(<module>)
     8002    0.078    0.000    0.097    0.000 module.py:437(__init__)
      330    0.006    0.000    0.097    0.000 optimizer.py:169(__init__)
        1    0.000    0.000    0.097    0.097 computed_entries.py:1(<module>)
        1    0.000    0.000    0.094    0.094 _morestats.py:1(<module>)
        1    0.000    0.000    0.093    0.093 numeric.py:1(<module>)
        1    0.000    0.000    0.093    0.093 _kde.py:1(<module>)
        1    0.000    0.000    0.092    0.092 periodic_table.py:1(<module>)
        1    0.000    0.000    0.092    0.092 pretty.py:1(<module>)
        1    0.000    0.000    0.091    0.091 PngImagePlugin.py:1(<module>)
        4    0.000    0.000    0.091    0.023 graph.py:1(<module>)
     6407    0.005    0.000    0.091    0.000 __init__.py:272(_compile)
        1    0.000    0.000    0.090    0.090 blocking_input.py:1(<module>)
        1    0.000    0.000    0.090    0.090 blas.py:1(<module>)
        1    0.000    0.000    0.089    0.089 bandstructure.py:1(<module>)
        1    0.000    0.000    0.087    0.087 simplify.py:1(<module>)
       84    0.000    0.000    0.087    0.001 linecache.py:26(getline)
     2500    0.002    0.000    0.086    0.000 inspect.py:3270(signature)
       10    0.085    0.009    0.085    0.009 {orjson.loads}
3228/2522    0.014    0.000    0.085    0.000 inspect.py:2422(_signature_from_callable)
     2500    0.002    0.000    0.084    0.000 inspect.py:3016(from_callable)
        1    0.000    0.000    0.083    0.083 evalf.py:1(<module>)
       97    0.001    0.000    0.083    0.001 _array_api.py:806(decorator)
        1    0.000    0.000    0.083    0.083 _linprog_highs.py:1(<module>)
        1    0.000    0.000    0.083    0.083 ode.py:1(<module>)
        2    0.000    0.000    0.082    0.041 context.py:1(<module>)
        1    0.000    0.000    0.082    0.082 gmpy.py:1(<module>)
      295    0.001    0.000    0.082    0.000 _compiler.py:738(compile)
        1    0.000    0.000    0.082    0.082 _mio.py:1(<module>)
        6    0.000    0.000    0.082    0.014 linear_relu.py:1(<module>)
        1    0.000    0.000    0.082    0.082 _modified.py:1(<module>)
        1    0.000    0.000    0.080    0.080 package_exporter.py:1(<module>)
        1    0.000    0.000    0.078    0.078 Periodicity_System.py:1(<module>)
        1    0.000    0.000    0.078    0.078 header.py:1(<module>)
        1    0.000    0.000    0.077    0.077 analyzer.py:1(<module>)
        2    0.000    0.000    0.076    0.038 __init__.py:12(__getattr__)
        3    0.000    0.000    0.076    0.025 __init__.py:342(__init__)
        1    0.000    0.000    0.076    0.076 _pickle.py:1(<module>)
        3    0.076    0.025    0.076    0.025 {built-in method _ctypes.dlopen}
        1    0.000    0.000    0.076    0.076 minimize_trustregion_constr.py:1(<module>)
        1    0.000    0.000    0.075    0.075 __init__.py:159(_load_global_deps)
        1    0.000    0.000    0.075    0.075 integrals.py:1(<module>)
        2    0.000    0.000    0.074    0.037 quantization_mappings.py:1(<module>)
       16    0.000    0.000    0.074    0.005 traceback.py:220(extract_stack)
       16    0.000    0.000    0.074    0.005 traceback.py:375(extract)
       16    0.000    0.000    0.074    0.005 traceback.py:397(_extract_from_extended_frame_gen)
        1    0.000    0.000    0.074    0.074 kl.py:1(<module>)
      181    0.000    0.000    0.073    0.000 traceback.py:316(line)
      110    0.002    0.000    0.073    0.001 _distn_infrastructure.py:1863(__init__)
    31431    0.021    0.000    0.073    0.000 parameter.py:30(__new__)
        1    0.000    0.000    0.072    0.072 collections.py:1(<module>)
        1    0.000    0.000    0.072    0.072 _type_aliases.py:1(<module>)
      531    0.000    0.000    0.071    0.000 __init__.py:225(compile)
        1    0.000    0.000    0.071    0.071 artist.py:1(<module>)
        1    0.000    0.000    0.070    0.070 _highs_wrapper.py:1(<module>)
        1    0.000    0.000    0.070    0.070 nvfuser_prims.py:1(<module>)
        3    0.000    0.000    0.069    0.023 profiler.py:1(<module>)
        2    0.000    0.000    0.069    0.035 events.py:1(<module>)
        1    0.000    0.000    0.069    0.069 archive_util.py:1(<module>)
        1    0.000    0.000    0.069    0.069 _ndimage_api.py:1(<module>)
        1    0.000    0.000    0.069    0.069 symbolic_caffe2.py:1(<module>)
        1    0.000    0.000    0.069    0.069 secrets.py:1(<module>)
       26    0.000    0.000    0.068    0.003 _jit_internal.py:847(_check_overload_body)
       26    0.000    0.000    0.068    0.003 _sources.py:119(parse_def)
        1    0.000    0.000    0.068    0.068 _csr.py:1(<module>)
        1    0.000    0.000    0.067    0.067 backend_bases.py:1(<module>)
       20    0.000    0.000    0.065    0.003 _jit_internal.py:875(_overload)
      130    0.000    0.000    0.065    0.001 dataclasses.py:1210(wrap)
       26    0.000    0.000    0.065    0.003 _sources.py:11(get_source_lines_and_file)
      130    0.005    0.000    0.065    0.001 dataclasses.py:885(_process_class)
        1    0.000    0.000    0.065    0.065 npyio.py:1(<module>)
     3025    0.040    0.000    0.065    0.000 inspect.py:867(cleandoc)
       26    0.000    0.000    0.065    0.002 inspect.py:1243(getsourcelines)
        1    0.000    0.000    0.063    0.063 _multivariate.py:1(<module>)
       11    0.000    0.000    0.063    0.006 artist.py:1613(kwdoc)
        1    0.000    0.000    0.062    0.062 pyfunctorch.py:1(<module>)
        1    0.000    0.000    0.062    0.062 hierarchy.py:1(<module>)
     1400    0.004    0.000    0.061    0.000 _docscrape.py:201(_read_to_next_section)
        1    0.000    0.000    0.061    0.061 domain.py:1(<module>)
        1    0.000    0.000    0.060    0.060 polyhedron.py:1(<module>)
     1444    0.002    0.000    0.060    0.000 _docscrape.py:212(_read_sections)
       63    0.001    0.000    0.059    0.001 _axis_nan_policy.py:418(axis_nan_policy_decorator)
     2667    0.003    0.000    0.059    0.000 <frozen importlib._bootstrap>:169(__enter__)
        1    0.000    0.000    0.059    0.059 __init__.py:155(_check_versions)
        1    0.000    0.000    0.058    0.058 scimath.py:1(<module>)
        2    0.000    0.000    0.058    0.029 distributed.py:1(<module>)
        2    0.000    0.000    0.057    0.029 shape_base.py:1(<module>)
        2    0.000    0.000    0.057    0.028 subprocess.py:1(<module>)
        1    0.000    0.000    0.057    0.057 __init__.py:128(_check_capability)
     2632    0.002    0.000    0.056    0.000 inspect.py:848(getdoc)
        1    0.000    0.000    0.055    0.055 _differentiable_functions.py:1(<module>)
        1    0.000    0.000    0.055    0.055 iterables.py:1(<module>)
      130    0.000    0.000    0.055    0.000 dataclasses.py:1193(dataclass)
        1    0.000    0.000    0.054    0.054 sslproto.py:1(<module>)
     2005    0.016    0.000    0.054    0.000 inspect.py:2327(_signature_from_function)
    18072    0.011    0.000    0.054    0.000 fromnumeric.py:2421(all)
    24420    0.007    0.000    0.054    0.000 module.py:2059(parameters)
        1    0.000    0.000    0.054    0.054 axes3d.py:1(<module>)
      295    0.001    0.000    0.054    0.000 _parser.py:970(parse)
       68    0.000    0.000    0.053    0.001 _util.py:1195(decorator)
        1    0.000    0.000    0.053    0.053 py3k.py:1(<module>)
        1    0.000    0.000    0.053    0.053 _rotation_groups.py:1(<module>)
       26    0.000    0.000    0.053    0.002 inspect.py:1055(findsource)
        2    0.000    0.000    0.052    0.026 _matfuncs.py:1(<module>)
    31431    0.052    0.000    0.052    0.000 {built-in method _make_subclass}
        1    0.000    0.000    0.052    0.052 net_min_base.py:1(<module>)
        1    0.000    0.000    0.052    0.052 lambdify.py:1(<module>)
       28    0.022    0.001    0.052    0.002 __init__.py:785(_rc_params_in_file)
  877/295    0.003    0.000    0.051    0.000 _parser.py:447(_parse_sub)
      462    0.001    0.000    0.051    0.000 basic.py:212(__init_subclass__)
        1    0.000    0.000    0.050    0.050 spglib.py:1(<module>)
        1    0.000    0.000    0.050    0.050 tz.py:1(<module>)
        1    0.000    0.000    0.050    0.050 node.py:1(<module>)
 1297/316    0.018    0.000    0.050    0.000 _parser.py:507(_parse)
    98016    0.050    0.000    0.050    0.000 {method '__format__' of 'float' objects}
      463    0.023    0.000    0.050    0.000 assumptions.py:614(_prepare_class_assumptions)
        1    0.000    0.000    0.050    0.050 adadelta.py:1(<module>)
        2    0.000    0.000    0.050    0.025 markers.py:1(<module>)
        1    0.000    0.000    0.050    0.050 gumbel.py:1(<module>)
13669/12452    0.012    0.000    0.049    0.000 {built-in method __new__ of type object at 0x864300}
       10    0.000    0.000    0.049    0.005 version.py:1(<module>)
        2    0.000    0.000    0.049    0.025 path.py:1(<module>)
        1    0.000    0.000    0.049    0.049 split_utils.py:1(<module>)
        1    0.000    0.000    0.049    0.049 _mstats_basic.py:1(<module>)
     2361    0.009    0.000    0.049    0.000 <frozen importlib._bootstrap>:493(_init_module_attrs)
        1    0.000    0.000    0.049    0.049 _conversion.py:1(<module>)
        1    0.000    0.000    0.049    0.049 blockmatrix.py:1(<module>)
        2    0.000    0.000    0.048    0.024 base.py:1(<module>)
        3    0.000    0.000    0.048    0.016 reductions.py:1(<module>)
        1    0.000    0.000    0.048    0.048 _delegation.py:1(<module>)
        1    0.000    0.000    0.048    0.048 std.py:1(<module>)
     4862    0.046    0.000    0.047    0.000 <frozen importlib._bootstrap>:100(acquire)
    24420    0.006    0.000    0.047    0.000 module.py:2084(named_parameters)
       11    0.001    0.000    0.047    0.004 artist.py:1386(pprint_setters)
        1    0.000    0.000    0.046    0.046 _root_scalar.py:1(<module>)
        1    0.000    0.000    0.046    0.046 tags.py:1(<module>)
        6    0.000    0.000    0.045    0.008 conv.py:1(<module>)
        1    0.000    0.000    0.045    0.045 staggered.py:1(<module>)
        1    0.000    0.000    0.045    0.045 singularity_functions.py:1(<module>)
        1    0.000    0.000    0.045    0.045 gradcheck.py:1(<module>)
        1    0.000    0.000    0.045    0.045 __init__.py:645(device_count)
        1    0.000    0.000    0.045    0.045 __init__.py:616(_device_count_nvml)
        1    0.045    0.045    0.045    0.045 __init__.py:539(_raw_device_count_nvml)
        1    0.000    0.000    0.045    0.045 ddm.py:1(<module>)
        1    0.000    0.000    0.044    0.044 finitefield.py:1(<module>)
    19888    0.008    0.000    0.044    0.000 {built-in method builtins.next}
        1    0.000    0.000    0.044    0.044 symbolic_helper.py:1(<module>)
        1    0.000    0.000    0.044    0.044 entity.py:1(<module>)
        4    0.000    0.000    0.044    0.011 transforms.py:1(<module>)
        1    0.000    0.000    0.044    0.044 bz2.py:1(<module>)
      521    0.005    0.000    0.044    0.000 _docscrape.py:224(_parse_param_list)
        1    0.000    0.000    0.044    0.044 mg_operation.py:1(<module>)
        1    0.000    0.000    0.044    0.044 _linprog_ip.py:1(<module>)
      449    0.001    0.000    0.044    0.000 __init__.py:80(decomposition_decorator)
       87    0.000    0.000    0.044    0.001 dispatcher.py:178(add)
        2    0.000    0.000    0.044    0.022 exponential.py:1(<module>)
    18109    0.017    0.000    0.044    0.000 fromnumeric.py:71(_wrapreduction)
       87    0.000    0.000    0.043    0.000 dispatcher.py:222(reorder)
        1    0.000    0.000    0.043    0.043 locks.py:1(<module>)
      463    0.009    0.000    0.043    0.000 doccer.py:29(docformat)
        1    0.000    0.000    0.043    0.043 forward_ad.py:1(<module>)
        1    0.000    0.000    0.043    0.043 delta_functions.py:1(<module>)
       13    0.000    0.000    0.043    0.003 library.py:32(__init__)
     2700    0.007    0.000    0.042    0.000 textwrap.py:419(dedent)
        1    0.000    0.000    0.042    0.042 _zeros_py.py:1(<module>)
        1    0.000    0.000    0.042    0.042 replicate.py:1(<module>)
       91    0.002    0.000    0.042    0.000 enum.py:466(__new__)
        1    0.000    0.000    0.042    0.042 groups.py:1(<module>)
      376    0.000    0.000    0.042    0.000 __init__.py:686(__getitem__)
      3/2    0.000    0.000    0.042    0.021 pyplot.py:216(switch_backend)
        1    0.000    0.000    0.041    0.041 core.py:164(load_base_library)
        1    0.000    0.000    0.041    0.041 core.py:196(read_style_directory)
    24420    0.019    0.000    0.041    0.000 module.py:2045(_named_members)
        1    0.000    0.000    0.040    0.040 complexes.py:1(<module>)
       26    0.000    0.000    0.040    0.002 __init__.py:859(rc_params_from_file)
        1    0.000    0.000    0.040    0.040 _numdiff.py:1(<module>)
      131    0.001    0.000    0.039    0.000 _distn_infrastructure.py:830(_construct_doc)
        2    0.000    0.000    0.038    0.019 pyplot.py:276(backend_mod)
        1    0.000    0.000    0.038    0.038 _discrete_distns.py:1(<module>)
      550    0.001    0.000    0.037    0.000 _pytree.py:194(tree_map)
        1    0.000    0.000    0.037    0.037 _helper.py:1(<module>)
      421    0.002    0.000    0.037    0.000 dataclasses.py:413(_create_fn)
     3657    0.037    0.000    0.037    0.000 {method 'min' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.037    0.037 font_manager.py:1(<module>)
        1    0.000    0.000    0.037    0.037 dataloader.py:1(<module>)
     4326    0.013    0.000    0.036    0.000 <frozen importlib._bootstrap_external>:437(cache_from_source)
     5425    0.015    0.000    0.036    0.000 _docscrape.py:67(read_to_condition)
        2    0.000    0.000    0.036    0.018 scanner.py:1(<module>)
     3969    0.007    0.000    0.036    0.000 _docscrape.py:77(read_to_next_empty_line)
        1    0.000    0.000    0.036    0.036 iterative.py:1(<module>)
        3    0.000    0.000    0.036    0.012 __init__.py:984(version)
      330    0.021    0.000    0.036    0.000 optimizer.py:489(add_param_group)
        1    0.000    0.000    0.036    0.036 ellipse.py:1(<module>)
     1002    0.007    0.000    0.035    0.000 enum.py:233(__set_name__)
        1    0.000    0.000    0.035    0.035 _distribution_infrastructure.py:1(<module>)
        1    0.000    0.000    0.035    0.035 generate.py:1(<module>)
    10971    0.009    0.000    0.035    0.000 _tensor_str.py:94(tensor_totype)
        1    0.000    0.000    0.035    0.035 dir_util.py:1(<module>)
     3657    0.035    0.000    0.035    0.000 {method 'max' of 'torch._C._TensorBase' objects}
     9713    0.005    0.000    0.035    0.000 contextlib.py:132(__enter__)
    21317    0.013    0.000    0.034    0.000 <frozen importlib._bootstrap_external>:126(_path_join)
        1    0.000    0.000    0.034    0.034 partitions_.py:1(<module>)
        1    0.000    0.000    0.034    0.034 error_functions.py:1(<module>)
    23760    0.018    0.000    0.034    0.000 module.py:799(compute_should_use_set_data)
        2    0.000    0.000    0.034    0.017 abc.py:1(<module>)
        1    0.000    0.000    0.034    0.034 assumptions.py:1(<module>)
        1    0.000    0.000    0.033    0.033 tokens.py:1(<module>)
        1    0.000    0.000    0.033    0.033 pythonmpq.py:1(<module>)
       68    0.033    0.000    0.033    0.000 {built-in method io.open}
        3    0.000    0.000    0.033    0.011 __init__.py:625(version)
        3    0.000    0.000    0.033    0.011 __init__.py:598(metadata)
        1    0.000    0.000    0.033    0.033 _filters.py:1(<module>)
        1    0.000    0.000    0.033    0.033 _rgi.py:1(<module>)
       23    0.032    0.001    0.032    0.001 {method 'readlines' of '_io._IOBase' objects}
        1    0.000    0.000    0.032    0.032 fromnumeric.py:1(<module>)
        1    0.000    0.000    0.032    0.032 data_parallel.py:1(<module>)
        1    0.000    0.000    0.032    0.032 message.py:1(<module>)
      550    0.000    0.000    0.032    0.000 _pytree.py:196(<listcomp>)
        2    0.000    0.000    0.032    0.016 batchnorm.py:1(<module>)
        1    0.000    0.000    0.032    0.032 symbol.py:1(<module>)
        1    0.000    0.000    0.032    0.032 smtlib.py:1(<module>)
        1    0.000    0.000    0.032    0.032 lsq_linear.py:1(<module>)
     3657    0.032    0.000    0.032    0.000 {built-in method torch.ceil}
      592    0.003    0.000    0.031    0.000 __init__.py:31(_add_op_to_registry)
        1    0.000    0.000    0.031    0.031 ssl.py:1(<module>)
        5    0.000    0.000    0.031    0.006 pathlib.py:1053(read_text)
        1    0.000    0.000    0.031    0.031 _mio5.py:1(<module>)
        1    0.000    0.000    0.031    0.031 single.py:1(<module>)
        1    0.000    0.000    0.031    0.031 _ode.py:1(<module>)
        1    0.000    0.000    0.031    0.031 libmpc.py:1(<module>)
        1    0.000    0.000    0.031    0.031 lzma.py:1(<module>)
      454    0.000    0.000    0.031    0.000 __init__.py:127(register)
        1    0.000    0.000    0.031    0.031 dbapi2.py:1(<module>)
        4    0.000    0.000    0.030    0.008 __init__.py:926(read_text)
        1    0.000    0.000    0.030    0.030 result.py:1(<module>)
     4220    0.014    0.000    0.030    0.000 _docscrape.py:168(_is_at_section)
        1    0.000    0.000    0.030    0.030 basis.py:1(<module>)
        1    0.000    0.000    0.030    0.030 gtk.py:1(<module>)
        2    0.000    0.000    0.030    0.015 __init__.py:181(_lazy_call)
        2    0.000    0.000    0.030    0.015 traceback.py:213(format_stack)
        1    0.000    0.000    0.030    0.030 scatter_gather.py:1(<module>)
        1    0.000    0.000    0.030    0.030 lines.py:1(<module>)
        1    0.000    0.000    0.030    0.030 package_importer.py:1(<module>)
        1    0.000    0.000    0.030    0.030 dataframes.py:1(<module>)
        1    0.000    0.000    0.029    0.029 more.py:1(<module>)
      398    0.003    0.000    0.029    0.000 _util.py:504(getfullargspec_no_self)
   105350    0.026    0.000    0.029    0.000 {built-in method builtins.max}
        1    0.000    0.000    0.029    0.029 _funcs.py:1(<module>)
    12084    0.014    0.000    0.029    0.000 _ufunc_config.py:33(seterr)
        1    0.000    0.000    0.029    0.029 _slsqp_py.py:1(<module>)
     1465    0.005    0.000    0.029    0.000 _ops.py:447(__getattr__)
        1    0.000    0.000    0.028    0.028 decimal.py:1(<module>)
        1    0.000    0.000    0.028    0.028 ctx_mp.py:1(<module>)
     4486    0.003    0.000    0.028    0.000 <frozen importlib._bootstrap>:392(cached)
        1    0.000    0.000    0.028    0.028 bernoulli.py:1(<module>)
        1    0.000    0.000    0.028    0.028 _tokenizer.py:1(<module>)
        1    0.001    0.001    0.028    0.028 groups.py:293(SpaceGroup)
        1    0.000    0.000    0.028    0.028 discovery.py:1(<module>)
        1    0.000    0.000    0.027    0.027 _tool.py:1(<module>)
        1    0.000    0.000    0.027    0.027 structures.py:1(<module>)
        1    0.000    0.000    0.027    0.027 bdf.py:1(<module>)
        1    0.000    0.000    0.027    0.027 dates.py:1(<module>)
      295    0.001    0.000    0.027    0.000 _compiler.py:571(_code)
     3657    0.027    0.000    0.027    0.000 {method 'ne' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.026    0.026 _linprog_util.py:1(<module>)
        1    0.000    0.000    0.026    0.026 ImagePalette.py:1(<module>)
        1    0.003    0.003    0.026    0.026 _meta_registrations.py:2649(activate_meta)
     1329    0.026    0.000    0.026    0.000 {method 'tolist' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.026    0.026 dense_ndim_array.py:1(<module>)
        1    0.000    0.000    0.026    0.026 polyoptions.py:1(<module>)
       26    0.000    0.000    0.026    0.001 _util.py:277(decorator)
        1    0.000    0.000    0.026    0.026 charset.py:1(<module>)
        1    0.000    0.000    0.026    0.026 comments.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _builtins.py:1(<module>)
     2323    0.003    0.000    0.026    0.000 <frozen importlib._bootstrap_external>:567(_get_cached)
        1    0.000    0.000    0.025    0.025 _qmvnt.py:1(<module>)
     2328    0.003    0.000    0.025    0.000 _tensor_str.py:195(_scalar_str)
        1    0.000    0.000    0.025    0.025 grad.py:1(<module>)
        1    0.000    0.000    0.025    0.025 mutable_ndim_array.py:1(<module>)
        1    0.000    0.000    0.025    0.025 sg_operation.py:1(<module>)
     3657    0.025    0.000    0.025    0.000 {method 'abs' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.025    0.025 beta.py:1(<module>)
        1    0.000    0.000    0.025    0.025 libhyper.py:1(<module>)
        1    0.000    0.000    0.025    0.025 _at.py:1(<module>)
     1111    0.004    0.000    0.025    0.000 typing.py:1336(__init__)
        5    0.000    0.000    0.024    0.005 polyhedron.py:34(__new__)
        1    0.000    0.000    0.024    0.024 limits.py:1(<module>)
       12    0.002    0.000    0.024    0.002 artist.py:1337(get_setters)
        2    0.000    0.000    0.024    0.012 grouping.py:1(<module>)
        1    0.000    0.000    0.024    0.024 worker.py:1(<module>)
        1    0.000    0.000    0.024    0.024 module.py:1(<module>)
        1    0.000    0.000    0.024    0.024 formal.py:1(<module>)
      120    0.001    0.000    0.024    0.000 periodic_table.py:77(__init__)
        2    0.000    0.000    0.024    0.012 traverse.py:1(<module>)
        5    0.000    0.000    0.024    0.005 _common.py:1(<module>)
        1    0.000    0.000    0.024    0.024 _new_distributions.py:1(<module>)
        1    0.000    0.000    0.024    0.024 logging.py:1(<module>)
        1    0.000    0.000    0.024    0.024 type_check.py:1(<module>)
71783/71780    0.021    0.000    0.024    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.024    0.024 minpoly.py:1(<module>)
        1    0.000    0.000    0.024    0.024 encoders.py:1(<module>)
       43    0.000    0.000    0.024    0.001 dispatcher.py:147(_)
        1    0.000    0.000    0.024    0.024 stringpict.py:1(<module>)
        1    0.000    0.000    0.024    0.024 cm.py:1(<module>)
        1    0.000    0.000    0.024    0.024 _remove_redundancy.py:1(<module>)
        3    0.000    0.000    0.024    0.008 _distribution_infrastructure.py:1317(_combine_docs)
        1    0.000    0.000    0.023    0.023 half_normal.py:1(<module>)
        1    0.000    0.000    0.023    0.023 grad_mode.py:1(<module>)
     3657    0.023    0.000    0.023    0.000 {method 'reshape' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.023    0.023 lattice.py:1(<module>)
      425    0.001    0.000    0.023    0.000 artist.py:1290(get_valid_values)
        1    0.000    0.000    0.023    0.023 setupcfg.py:1(<module>)
        1    0.000    0.000    0.023    0.023 uarray.py:1(<module>)
      426    0.001    0.000    0.023    0.000 units.py:153(__init__)
        9    0.000    0.000    0.023    0.003 exceptions.py:1(<module>)
     6709    0.013    0.000    0.023    0.000 inspect.py:2676(__init__)
        1    0.000    0.000    0.023    0.023 exp_family.py:1(<module>)
        1    0.000    0.000    0.023    0.023 ElementTree.py:1(<module>)
        1    0.000    0.000    0.022    0.022 interpolative.py:1(<module>)
        1    0.000    0.000    0.022    0.022 colors.py:1(<module>)
     2137    0.002    0.000    0.022    0.000 _docscrape.py:573(dedent_lines)
        1    0.000    0.000    0.022    0.022 _code_flow.py:1(<module>)
        1    0.000    0.000    0.022    0.022 api.py:1(<module>)
        2    0.000    0.000    0.022    0.011 kind.py:1(<module>)
        1    0.000    0.000    0.022    0.022 pyprojecttoml.py:1(<module>)
        1    0.000    0.000    0.022    0.022 _external_properties.py:1(<module>)
       87    0.000    0.000    0.022    0.000 conflict.py:24(ambiguities)
        1    0.000    0.000    0.022    0.022 frontend.py:1(<module>)
        1    0.000    0.000    0.022    0.022 _spectral_py.py:1(<module>)
     1747    0.001    0.000    0.022    0.000 artist.py:1356(is_alias)
  583/432    0.000    0.000    0.022    0.000 typing.py:477(__getitem__)
       87    0.005    0.000    0.022    0.000 conflict.py:27(<setcomp>)
        1    0.000    0.000    0.022    0.022 comm.py:1(<module>)
        1    0.000    0.000    0.022    0.022 contingency.py:1(<module>)
        1    0.000    0.000    0.022    0.022 factor_.py:1(<module>)
      251    0.001    0.000    0.022    0.000 _docscrape.py:366(_parse_summary)
 9538/251    0.010    0.000    0.021    0.000 copy.py:128(deepcopy)
        2    0.000    0.000    0.021    0.011 bessel.py:1(<module>)
        1    0.000    0.000    0.021    0.021 _thread_flow.py:1(<module>)
        2    0.000    0.000    0.021    0.011 function_base.py:1(<module>)
       35    0.000    0.000    0.021    0.001 core.py:59(_)
     9713    0.007    0.000    0.021    0.000 contextlib.py:284(helper)
      426    0.011    0.000    0.021    0.000 units.py:163(check_mappings)
 2251/295    0.009    0.000    0.021    0.000 _compiler.py:37(_compile)
        1    0.000    0.000    0.021    0.021 art3d.py:1(<module>)
     1411    0.004    0.000    0.021    0.000 library.py:71(impl)
        1    0.000    0.000    0.021    0.021 pickle.py:1(<module>)
        1    0.000    0.000    0.021    0.021 onnx_proto_utils.py:1(<module>)
       87    0.001    0.000    0.021    0.000 conflict.py:56(ordering)
     9713    0.009    0.000    0.021    0.000 contextlib.py:141(__exit__)
        1    0.000    0.000    0.021    0.021 line.py:1(<module>)
      778    0.003    0.000    0.021    0.000 _ops.py:553(__getattr__)
  502/251    0.003    0.000    0.021    0.000 copy.py:227(_deepcopy_dict)
        1    0.000    0.000    0.021    0.021 monkey.py:1(<module>)
        1    0.000    0.000    0.021    0.021 _plotutils.py:1(<module>)
        1    0.000    0.000    0.020    0.020 _lowrank.py:1(<module>)
        1    0.000    0.000    0.020    0.020 backend_agg.py:1(<module>)
        1    0.000    0.000    0.020    0.020 subsets.py:1(<module>)
        1    0.000    0.000    0.020    0.020 lambdarepr.py:1(<module>)
        1    0.000    0.000    0.020    0.020 vq.py:1(<module>)
      481    0.013    0.000    0.020    0.000 doccer.py:225(indentcount_lines)
        1    0.000    0.000    0.020    0.020 _artifact_change.py:1(<module>)
        1    0.000    0.000    0.020    0.020 _apply_pyprojecttoml.py:1(<module>)
        1    0.000    0.000    0.020    0.020 graph_settings.py:1(<module>)
        1    0.000    0.000    0.020    0.020 lowrank_multivariate_normal.py:1(<module>)
     8332    0.020    0.000    0.020    0.000 {built-in method torch._C._log_api_usage_once}
      131    0.001    0.000    0.020    0.000 _distn_infrastructure.py:749(_construct_argparser)
        1    0.000    0.000    0.020    0.020 _normalization.py:1(<module>)
        1    0.000    0.000    0.020    0.020 facts.py:1(<module>)
        1    0.000    0.000    0.020    0.020 graphs.py:1(<module>)
        1    0.000    0.000    0.020    0.020 _directory_reader.py:1(<module>)
        1    0.000    0.000    0.020    0.020 trigonometric.py:1(<module>)
      431    0.002    0.000    0.020    0.000 typing.py:652(Union)
     3657    0.013    0.000    0.020    0.000 _tensor_str.py:331(_add_suffixes)
    39432    0.020    0.000    0.020    0.000 module.py:1618(remove_from)
        1    0.000    0.000    0.019    0.019 densebasic.py:1(<module>)
        1    0.000    0.000    0.019    0.019 _expm_multiply.py:1(<module>)
        1    0.000    0.000    0.019    0.019 constraint_registry.py:1(<module>)
        1    0.000    0.000    0.019    0.019 _fitpack_impl.py:1(<module>)
        1    0.000    0.000    0.019    0.019 axis.py:1(<module>)
      130    0.001    0.000    0.019    0.000 dataclasses.py:530(_init_fn)
   110317    0.019    0.000    0.019    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.019    0.019 _thread_flow_location.py:1(<module>)
        1    0.000    0.000    0.019    0.019 chi2.py:1(<module>)
    18116    0.019    0.000    0.019    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.019    0.019 libmpf.py:1(<module>)
        1    0.000    0.000    0.019    0.019 fancy_getopt.py:1(<module>)
     6042    0.004    0.000    0.019    0.000 _ufunc_config.py:430(__enter__)
        1    0.000    0.000    0.019    0.019 font_manager.py:1004(json_load)
        1    0.000    0.000    0.019    0.019 queue.py:1(<module>)
        1    0.000    0.000    0.018    0.018 compat.py:1(<module>)
        1    0.000    0.000    0.018    0.018 mstats.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _testutils.py:1(<module>)
        1    0.000    0.000    0.018    0.018 combsimp.py:1(<module>)
        1    0.000    0.000    0.018    0.018 loss.py:1(<module>)
        1    0.000    0.000    0.018    0.018 base64.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _run.py:1(<module>)
        2    0.000    0.000    0.018    0.009 laplace.py:1(<module>)
     6042    0.004    0.000    0.018    0.000 _ufunc_config.py:435(__exit__)
       12    0.000    0.000    0.017    0.001 artist.py:1242(__init__)
       12    0.001    0.000    0.017    0.001 artist.py:1262(get_aliases)
        1    0.000    0.000    0.017    0.017 transformed_distribution.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _docscrape.py:1(<module>)
    21317    0.013    0.000    0.017    0.000 <frozen importlib._bootstrap_external>:128(<listcomp>)
        2    0.000    0.000    0.017    0.009 fuse_modules.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _support_alternative_backends.py:294(<dictcomp>)
       23    0.000    0.000    0.017    0.001 _support_alternative_backends.py:46(wrapper)
        1    0.000    0.000    0.017    0.017 least_squares.py:1(<module>)
        1    0.000    0.000    0.017    0.017 galoisgroups.py:1(<module>)
        1    0.000    0.000    0.017    0.017 intersection.py:1(<module>)
        2    0.000    0.000    0.017    0.008 linsolve.py:1(<module>)
       87    0.002    0.000    0.017    0.000 conflict.py:62(<listcomp>)
        6    0.000    0.000    0.017    0.003 _docscrape.py:626(__init__)
        5    0.000    0.000    0.016    0.003 polyhedron.py:388(<listcomp>)
      121    0.001    0.000    0.016    0.000 __init__.py:259(_make_prim)
       50    0.000    0.000    0.016    0.000 iterables.py:2618(minlex)
        1    0.000    0.000    0.016    0.016 dispatcher.py:1(<module>)
        2    0.000    0.000    0.016    0.008 operations.py:1(<module>)
        1    0.000    0.000    0.016    0.016 difflib.py:1(<module>)
      778    0.016    0.000    0.016    0.000 {built-in method torch._C._jit_get_operation}
     4862    0.010    0.000    0.016    0.000 <frozen importlib._bootstrap>:179(_get_module_lock)
      232    0.001    0.000    0.016    0.000 function.py:164(__init__)
        2    0.000    0.000    0.016    0.008 sysconfig.py:710(get_config_var)
      4/3    0.000    0.000    0.016    0.005 sysconfig.py:629(get_config_vars)
     6176    0.002    0.000    0.015    0.000 conflict.py:19(ambiguous)
        1    0.000    0.000    0.015    0.015 hb.py:1(<module>)
        1    0.000    0.000    0.015    0.015 conflict.py:1(<module>)
        2    0.000    0.000    0.015    0.008 _backend.py:1(<module>)
     6043    0.015    0.000    0.015    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.015    0.015 _trustregion_krylov.py:1(<module>)
     3197    0.009    0.000    0.015    0.000 functools.py:35(update_wrapper)
       56    0.000    0.000    0.015    0.000 __init__.py:770(_open_file_or_url)
     3146    0.010    0.000    0.015    0.000 inspect.py:2962(__init__)
      245    0.001    0.000    0.015    0.000 _docscrape.py:599(__str__)
     2700    0.014    0.000    0.014    0.000 {method 'findall' of 're.Pattern' objects}
      524    0.000    0.000    0.014    0.000 __init__.py:173(search)
    13223    0.003    0.000    0.014    0.000 conflict.py:43(edge)
        1    0.000    0.000    0.014    0.014 equality_constrained_sqp.py:1(<module>)
        1    0.000    0.000    0.014    0.014 para4tb.py:73(__get_TB_fix_data)
     9713    0.012    0.000    0.014    0.000 contextlib.py:104(__init__)
     2163    0.002    0.000    0.014    0.000 <frozen importlib._bootstrap_external>:1146(path_stats)
        1    0.000    0.000    0.014    0.014 twodim_base.py:1(<module>)
       21    0.000    0.000    0.014    0.001 _distn_infrastructure.py:3319(__init__)
        1    0.000    0.000    0.014    0.014 _decomp.py:1(<module>)
        1    0.000    0.000    0.014    0.014 jit_utils.py:1(<module>)
        1    0.000    0.000    0.014    0.014 uuid.py:1(<module>)
        1    0.000    0.000    0.014    0.014 sysconfig.py:527(_init_posix)
        2    0.000    0.000    0.014    0.007 _aliases.py:1(<module>)
        1    0.000    0.000    0.014    0.014 warnings.py:96(_showwarnmsg)
        1    0.000    0.000    0.014    0.014 warnings.py:20(_showwarnmsg_impl)
        1    0.000    0.000    0.014    0.014 warnings.py:117(_formatwarnmsg)
        1    0.000    0.000    0.014    0.014 warnings.py:35(_formatwarnmsg_impl)
     2324    0.003    0.000    0.014    0.000 <frozen importlib._bootstrap_external>:1599(_get_spec)
    89514    0.013    0.000    0.013    0.000 {method 'startswith' of 'str' objects}
      248    0.002    0.000    0.013    0.000 _docscrape.py:548(__str__)
      131    0.000    0.000    0.013    0.000 _distn_infrastructure.py:735(_attach_argparser_methods)
      367    0.001    0.000    0.013    0.000 permutations.py:1628(__call__)
    23760    0.013    0.000    0.013    0.000 {built-in method torch._has_compatible_shallow_copy_type}
        1    0.000    0.000    0.013    0.013 lapack.py:1(<module>)
     1241    0.001    0.000    0.013    0.000 __init__.py:655(__setitem__)
    35356    0.007    0.000    0.013    0.000 {method 'add' of 'set' objects}
      110    0.001    0.000    0.013    0.000 _distn_infrastructure.py:1923(_attach_methods)
        1    0.000    0.000    0.013    0.013 _decomp_lu.py:1(<module>)
      232    0.001    0.000    0.013    0.000 function.py:124(arity)
     3879    0.003    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:1421(_path_importer_cache)
      142    0.005    0.000    0.013    0.000 __init__.py:348(namedtuple)
     4326    0.006    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:132(_path_split)
     7314    0.010    0.000    0.013    0.000 _python_dispatch.py:86(_disable_current_modes)
        1    0.000    0.000    0.013    0.013 _replacement.py:1(<module>)
     1465    0.011    0.000    0.013    0.000 _ops.py:239(__init__)
     6176    0.006    0.000    0.012    0.000 conflict.py:12(consistent)
        1    0.000    0.000    0.012    0.012 unix_events.py:1(<module>)
     4492    0.012    0.000    0.012    0.000 {built-in method torch.view_as_real}
        1    0.000    0.000    0.012    0.012 hmac.py:1(<module>)
     2195    0.002    0.000    0.012    0.000 <frozen importlib._bootstrap>:216(_lock_unlock_module)
    71963    0.010    0.000    0.012    0.000 {built-in method builtins.min}
        2    0.000    0.000    0.012    0.006 _helpers.py:1(<module>)
        1    0.000    0.000    0.012    0.012 _lil.py:1(<module>)
        1    0.000    0.000    0.012    0.012 _lbfgsb_py.py:1(<module>)
     1456    0.001    0.000    0.012    0.000 _docscrape.py:85(read_to_next_unindented_line)
     1411    0.012    0.000    0.012    0.000 {built-in method torch._C.impl}
      213    0.000    0.000    0.012    0.000 units.py:299(__init__)
      213    0.000    0.000    0.012    0.000 units.py:318(__new__)
        1    0.000    0.000    0.012    0.012 interval_arithmetic.py:1(<module>)
    15946    0.008    0.000    0.012    0.000 conflict.py:7(supercedes)
       26    0.001    0.000    0.011    0.000 inspect.py:1232(getblock)
        4    0.000    0.000    0.011    0.003 _utils.py:1(<module>)
     2245    0.005    0.000    0.011    0.000 typing.py:168(_type_check)
        1    0.000    0.000    0.011    0.011 homomorphisms.py:1(<module>)
        1    0.000    0.000    0.011    0.011 polyroots.py:1(<module>)
       12    0.000    0.000    0.011    0.001 __init__.py:385(get_device_properties)
        8    0.000    0.000    0.011    0.001 __init__.py:368(get_device_capability)
        1    0.000    0.000    0.011    0.011 trigsimp.py:1(<module>)
       12    0.011    0.001    0.011    0.001 {built-in method torch.cuda._get_device_properties}
        1    0.000    0.000    0.011    0.011 actions.py:1(<module>)
        1    0.000    0.000    0.011    0.011 arpack.py:1(<module>)
     2221    0.011    0.000    0.011    0.000 {method '__exit__' of '_io._IOBase' objects}
        1    0.000    0.000    0.011    0.011 _linesearch.py:1(<module>)
        1    0.000    0.000    0.011    0.011 field.py:1(<module>)
        1    0.000    0.000    0.011    0.011 _compressed.py:1(<module>)
      131    0.000    0.000    0.011    0.000 _distn_infrastructure.py:683(__init__)
        1    0.000    0.000    0.011    0.011 _axes.py:71(Axes)
        1    0.000    0.000    0.011    0.011 _odepack_py.py:1(<module>)
     1503    0.003    0.000    0.011    0.000 tokenize.py:433(_tokenize)
    19254    0.006    0.000    0.011    0.000 _parser.py:252(get)
        1    0.000    0.000    0.011    0.011 lie_group.py:1(<module>)
    12084    0.010    0.000    0.011    0.000 _ufunc_config.py:132(geterr)
       55    0.000    0.000    0.011    0.000 __init__.py:388(inner)
        1    0.000    0.000    0.011    0.011 _tool_component.py:1(<module>)
        1    0.000    0.000    0.011    0.011 _reqs.py:1(<module>)
    34455    0.008    0.000    0.011    0.000 _docscrape.py:64(eof)
      100    0.002    0.000    0.010    0.000 iterables.py:1165(least_rotation)
        1    0.000    0.000    0.010    0.010 engine.py:1(<module>)
      129    0.000    0.000    0.010    0.000 dataclasses.py:589(_repr_fn)
      222    0.002    0.000    0.010    0.000 wrappers.py:191(_out_wrapper)
        2    0.000    0.000    0.010    0.005 fourier.py:1(<module>)
     8262    0.005    0.000    0.010    0.000 typing.py:1280(__setattr__)
        1    0.000    0.000    0.010    0.010 trf.py:1(<module>)
     3310    0.002    0.000    0.010    0.000 __init__.py:178(sub)
      292    0.001    0.000    0.010    0.000 <frozen importlib._bootstrap_external>:1408(_path_hooks)
        6    0.000    0.000    0.010    0.002 _typing.py:1(<module>)
        1    0.000    0.000    0.010    0.010 _cubature.py:1(<module>)
        1    0.000    0.000    0.010    0.010 nvfuser_prims.py:806(register_nvprims)
      191    0.007    0.000    0.010    0.000 {built-in method builtins.eval}
        1    0.000    0.000    0.010    0.010 _upfirdn.py:1(<module>)
      292    0.001    0.000    0.010    0.000 <frozen importlib._bootstrap_external>:1655(_fill_cache)
     3657    0.005    0.000    0.010    0.000 forward_ad.py:114(unpack_dual)
      403    0.001    0.000    0.010    0.000 <frozen abc>:105(__new__)
     2324    0.006    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:778(spec_from_file_location)
      128    0.000    0.000    0.009    0.000 dataclasses.py:625(_cmp_fn)
        1    0.000    0.000    0.009    0.009 struct.py:1(<module>)
     7323    0.007    0.000    0.009    0.000 enum.py:669(__call__)
        1    0.000    0.000    0.009    0.009 gridspec.py:1(<module>)
     8189    0.006    0.000    0.009    0.000 _docscrape.py:57(seek_next_non_empty_line)
       11    0.000    0.000    0.009    0.001 __init__.py:10(partialclass)
      300    0.009    0.000    0.009    0.000 {built-in method posix.listdir}
       36    0.000    0.000    0.009    0.000 __init__.py:893(inner)
        1    0.000    0.000    0.009    0.009 _result.py:1(<module>)
      465    0.001    0.000    0.009    0.000 permutations.py:902(__new__)
        1    0.000    0.000    0.009    0.009 _artifact.py:1(<module>)
     4862    0.007    0.000    0.009    0.000 <frozen importlib._bootstrap>:125(release)
2662/2617    0.002    0.000    0.009    0.000 {built-in method builtins.any}
      393    0.001    0.000    0.009    0.000 typing.py:1539(copy_with)
     1465    0.008    0.000    0.008    0.000 {built-in method torch._C._get_operation_overload}
      257    0.001    0.000    0.008    0.000 typing.py:1530(__getitem__)
      325    0.000    0.000    0.008    0.000 function_base.py:497(add_newdoc)
        1    0.008    0.008    0.008    0.008 para4tb.py:55(__get_values_and_index)
        2    0.000    0.000    0.008    0.004 _add_newdocs.py:1(<module>)
        1    0.000    0.000    0.008    0.008 gmpyfinitefield.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _max_len_seq.py:1(<module>)
      965    0.002    0.000    0.008    0.000 typing_extensions.py:3177(_collect_parameters)
        1    0.000    0.000    0.008    0.008 lgmres.py:1(<module>)
     2038    0.008    0.000    0.008    0.000 {built-in method torch._C._dispatch_has_kernel_for_dispatch_key}
    95906    0.008    0.000    0.008    0.000 {method 'lstrip' of 'str' objects}
    12610    0.008    0.000    0.008    0.000 {method 'expandtabs' of 'str' objects}
        2    0.000    0.000    0.008    0.004 polynomial.py:1(<module>)
       70    0.001    0.000    0.008    0.000 __init__.py:1364(_preprocess_data)
      151    0.000    0.000    0.008    0.000 typing.py:692(Optional)
        1    0.000    0.000    0.008    0.008 _beartype.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _resampling.py:1(<module>)
     2163    0.004    0.000    0.008    0.000 <frozen importlib._bootstrap_external>:642(_classify_pyc)
        1    0.000    0.000    0.008    0.008 _measurements.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _entropy.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _ccallback.py:1(<module>)
     2667    0.002    0.000    0.007    0.000 <frozen importlib._bootstrap>:173(__exit__)
        2    0.000    0.000    0.007    0.004 spawn.py:1(<module>)
     1318    0.003    0.000    0.007    0.000 enum.py:352(__setitem__)
        1    0.000    0.000    0.007    0.007 composer.py:1(<module>)
      189    0.000    0.000    0.007    0.000 library.py:50(define)
   112/79    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1311(__iter__)
        1    0.000    0.000    0.007    0.007 _tnc.py:1(<module>)
        1    0.000    0.000    0.007    0.007 _memory_profiler.py:1(<module>)
   164/92    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1297(_recalculate)
        1    0.000    0.000    0.007    0.007 specifiers.py:1(<module>)
       93    0.000    0.000    0.007    0.000 pydoc.py:186(getdoc)
       41    0.001    0.000    0.007    0.000 typing.py:2817(__new__)
        1    0.000    0.000    0.007    0.007 patches.py:1(<module>)
      189    0.007    0.000    0.007    0.000 {built-in method torch._C.define}
        1    0.000    0.000    0.007    0.007 band_data_out.py:1(<module>)
        1    0.000    0.000    0.007    0.007 _ni_docstrings.py:1(<module>)
        1    0.000    0.000    0.007    0.007 common.py:8(pyparsing_common)
     9689    0.007    0.000    0.007    0.000 {method 'splitlines' of 'str' objects}
       97    0.001    0.000    0.007    0.000 __init__.py:427(_make_inplace)
    10171    0.005    0.000    0.007    0.000 _docscrape.py:91(peek)
1062/1021    0.003    0.000    0.007    0.000 sorting.py:10(default_sort_key)
     2232    0.004    0.000    0.007    0.000 _docscrape.py:475(_str_param_list)
        1    0.000    0.000    0.007    0.007 union.py:1(<module>)
      748    0.003    0.000    0.007    0.000 dataclasses.py:724(_get_field)
     1115    0.001    0.000    0.007    0.000 typing.py:1241(__init__)
        2    0.000    0.000    0.007    0.003 main.py:1(<module>)
        1    0.000    0.000    0.007    0.007 _filter_design.py:1(<module>)
     2603    0.004    0.000    0.007    0.000 inspect.py:735(unwrap)
        1    0.000    0.000    0.007    0.007 _spherical_voronoi.py:1(<module>)
     1329    0.007    0.000    0.007    0.000 {built-in method torch.transpose}
       93    0.000    0.000    0.007    0.000 pydoc.py:170(_getdoc)
        1    0.000    0.000    0.007    0.007 specifiers.py:99(Specifier)
        1    0.000    0.000    0.007    0.007 rk.py:1(<module>)
    21761    0.005    0.000    0.007    0.000 _docscrape.py:80(is_empty)
    12048    0.004    0.000    0.007    0.000 _ufunc_config.py:452(_no_nep50_warning)
        1    0.000    0.000    0.006    0.006 residue_ntheory.py:1(<module>)
  515/173    0.001    0.000    0.006    0.000 sorting.py:202(ordered)
        1    0.000    0.000    0.006    0.006 galoistools.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _shgo.py:1(<module>)
        1    0.000    0.000    0.006    0.006 ExifTags.py:1(<module>)
      665    0.005    0.000    0.006    0.000 _compiler.py:241(_optimize_charset)
        3    0.000    0.000    0.006    0.002 _distribution_infrastructure.py:1368(_generate_example)
        2    0.000    0.000    0.006    0.003 decoder.py:1(<module>)
        2    0.000    0.000    0.006    0.003 fft.py:1(<module>)
        1    0.000    0.000    0.006    0.006 pathlib.py:1(<module>)
       47    0.000    0.000    0.006    0.000 __init__.py:424(_make_elementwise_unary_prim)
        5    0.000    0.000    0.006    0.001 pathlib.py:1036(open)
        1    0.000    0.000    0.006    0.006 _isotonic.py:1(<module>)
2164/2161    0.002    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:599(_check_name_wrapper)
    14840    0.004    0.000    0.006    0.000 _parser.py:162(__getitem__)
      459    0.001    0.000    0.006    0.000 permutations.py:354(list)
    18109    0.006    0.000    0.006    0.000 fromnumeric.py:72(<dictcomp>)
        1    0.000    0.000    0.006    0.006 tokenize.py:99(_compile)
        1    0.000    0.000    0.006    0.006 _rbfinterp.py:1(<module>)
     3928    0.001    0.000    0.006    0.000 <frozen abc>:117(__instancecheck__)
       44    0.000    0.000    0.006    0.000 typing.py:2797(_make_nmtuple)
        5    0.000    0.000    0.006    0.001 sets.py:1982(__new__)
     9305    0.004    0.000    0.006    0.000 typing.py:1229(_is_dunder)
       21    0.000    0.000    0.006    0.000 _distn_infrastructure.py:3380(_construct_docstrings)
     6489    0.004    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:84(_unpack_uint32)
     1329    0.003    0.000    0.006    0.000 _tensor_str.py:243(<listcomp>)
     5726    0.004    0.000    0.006    0.000 _docscrape.py:86(is_unindented)
    22106    0.006    0.000    0.006    0.000 _parser.py:231(__next)
    28116    0.005    0.000    0.006    0.000 units.py:166(<genexpr>)
        2    0.000    0.000    0.006    0.003 modules.py:1(<module>)
    23760    0.006    0.000    0.006    0.000 {method 'is_floating_point' of 'torch._C._TensorBase' objects}
     2163    0.003    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:675(_validate_timestamp_pyc)
    12544    0.006    0.000    0.006    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.006    0.006 _codata.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _location.py:1(<module>)
      317    0.001    0.000    0.006    0.000 overrides.py:142(decorator)
    66802    0.006    0.000    0.006    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.006    0.006 legend.py:1(<module>)
        1    0.000    0.000    0.005    0.005 _reporting_descriptor.py:1(<module>)
    30632    0.005    0.000    0.005    0.000 assumptions.py:489(as_property)
      706    0.002    0.000    0.005    0.000 inspect.py:2042(_signature_bound_method)
    21721    0.005    0.000    0.005    0.000 <frozen importlib._bootstrap>:244(_verbose_message)
        1    0.000    0.000    0.005    0.005 _hypotests.py:1(<module>)
    30618    0.005    0.000    0.005    0.000 _docscrape.py:43(__getitem__)
        1    0.000    0.000    0.005    0.005 comparison.py:1(<module>)
 2638/706    0.004    0.000    0.005    0.000 _parser.py:172(getwidth)
    68260    0.005    0.000    0.005    0.000 {method 'items' of 'dict' objects}
      295    0.001    0.000    0.005    0.000 _compiler.py:509(_compile_info)
      136    0.000    0.000    0.005    0.000 typing.py:1614(__getitem__)
        1    0.000    0.000    0.005    0.005 _configuration_override.py:1(<module>)
      472    0.001    0.000    0.005    0.000 assumptions.py:469(__init__)
      292    0.001    0.000    0.005    0.000 <frozen importlib._bootstrap_external>:1696(path_hook_for_FileFinder)
    53199    0.005    0.000    0.005    0.000 {method 'rstrip' of 'str' objects}
      459    0.001    0.000    0.005    0.000 permutations.py:385(<listcomp>)
        1    0.000    0.000    0.005    0.005 gamma_functions.py:1(<module>)
      901    0.001    0.000    0.005    0.000 inspect.py:3032(replace)
3977/3797    0.003    0.000    0.005    0.000 sympify.py:124(sympify)
     2492    0.002    0.000    0.005    0.000 <frozen importlib._bootstrap>:922(find_spec)
     7790    0.003    0.000    0.005    0.000 <frozen importlib._bootstrap>:405(parent)
      700    0.001    0.000    0.005    0.000 colors.py:161(to_rgba)
       11    0.000    0.000    0.005    0.000 core.py:1152(parse_string)
     1477    0.001    0.000    0.005    0.000 typing.py:684(<genexpr>)
      134    0.000    0.000    0.005    0.000 wrappers.py:105(__call__)
        1    0.000    0.000    0.005    0.005 cm.py:53(_gen_cmap_registry)
       68    0.000    0.000    0.005    0.000 _internal.py:31(inner)
     3928    0.002    0.000    0.005    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.005    0.005 _symbolic_trace.py:1(<module>)
     2005    0.003    0.000    0.005    0.000 inspect.py:167(get_annotations)
        1    0.000    0.000    0.005    0.005 wavfile.py:1(<module>)
     1644    0.002    0.000    0.005    0.000 dataclasses.py:665(_is_type)
        1    0.000    0.000    0.005    0.005 expand.py:1(<module>)
    13536    0.003    0.000    0.005    0.000 conflict.py:15(<genexpr>)
        1    0.000    0.000    0.004    0.004 splitter_base.py:1(<module>)
        1    0.000    0.000    0.004    0.004 storage.py:1(<module>)
        1    0.000    0.000    0.004    0.004 reduction.py:1(<module>)
        1    0.000    0.000    0.004    0.004 headerregistry.py:1(<module>)
       81    0.000    0.000    0.004    0.000 docstring.py:77(dedent_interpd)
    93/40    0.000    0.000    0.004    0.000 typing.py:1363(__getitem__)
       17    0.000    0.000    0.004    0.000 rcsetup.py:928(validate_cycler)
       97    0.000    0.000    0.004    0.000 _array_api.py:733(_make_capabilities_note)
  580/530    0.001    0.000    0.004    0.000 containers.py:54(__new__)
     6077    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
       14    0.000    0.000    0.004    0.000 inspect.py:592(getmembers)
      131    0.002    0.000    0.004    0.000 facts.py:599(deduce_all_facts)
    19564    0.004    0.000    0.004    0.000 {method 'rpartition' of 'str' objects}
        2    0.000    0.000    0.004    0.002 _globals.py:1(<module>)
       14    0.001    0.000    0.004    0.000 inspect.py:550(_getmembers)
      428    0.000    0.000    0.004    0.000 rcsetup.py:360(validate_color)
        1    0.000    0.000    0.004    0.004 bonds.py:1(<module>)
     2597    0.002    0.000    0.004    0.000 <frozen importlib._bootstrap>:71(__init__)
     3657    0.004    0.000    0.004    0.000 {built-in method torch._C._functorch.is_functorch_wrapped_tensor}
41415/39575    0.004    0.000    0.004    0.000 {built-in method builtins.hash}
        1    0.000    0.000    0.004    0.004 _invocation.py:1(<module>)
        1    0.000    0.000    0.004    0.004 bonds.py:21(_load_bond_length_data)
       29    0.000    0.000    0.004    0.000 __init__.py:439(_make_elementwise_binary_prim)
      459    0.001    0.000    0.004    0.000 permutations.py:433(__init__)
       13    0.000    0.000    0.004    0.000 enum.py:874(_convert_)
     1467    0.004    0.000    0.004    0.000 {built-in method numpy.array}
      905    0.001    0.000    0.004    0.000 {built-in method builtins.sorted}
       20    0.002    0.000    0.004    0.000 enum.py:1625(convert_class)
     2597    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:198(cb)
     1298    0.004    0.000    0.004    0.000 {built-in method torch._C._dispatch_has_kernel}
        1    0.000    0.000    0.004    0.004 mathtext.py:2275(Parser)
     9982    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1032(__exit__)
        1    0.000    0.000    0.004    0.004 _decomp_svd.py:1(<module>)
      160    0.001    0.000    0.004    0.000 _docscrape.py:290(_parse_see_also)
     1602    0.001    0.000    0.004    0.000 __init__.py:163(match)
       64    0.000    0.000    0.004    0.000 core.py:1449(__add__)
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<lambda>)
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<listcomp>)
        1    0.000    0.000    0.004    0.004 helpers.py:1(<module>)
        1    0.000    0.000    0.004    0.004 _differentialevolution.py:1(<module>)
        1    0.000    0.000    0.004    0.004 platform.py:1(<module>)
        1    0.000    0.000    0.004    0.004 _solvers.py:1(<module>)
       36    0.000    0.000    0.004    0.000 __init__.py:1329(_add_data_doc)
     8132    0.004    0.000    0.004    0.000 {method 'replace' of 'str' objects}
 2209/389    0.000    0.000    0.004    0.000 <frozen abc>:121(__subclasscheck__)
        8    0.000    0.000    0.004    0.000 core.py:5842(__init__)
  628/550    0.001    0.000    0.004    0.000 _pytree.py:143(tree_flatten)
        1    0.000    0.000    0.004    0.004 _common.py:17(files)
       65    0.000    0.000    0.004    0.000 core.py:4081(__init__)
     28/7    0.000    0.000    0.004    0.001 core.py:4715(leave_whitespace)
 2209/389    0.003    0.000    0.004    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.004    0.004 _common.py:59(from_package)
        1    0.000    0.000    0.004    0.004 _adapters.py:28(get_resource_reader)
        1    0.000    0.000    0.004    0.004 _adapters.py:151(_native)
        1    0.000    0.000    0.004    0.004 relational.py:1(<module>)
     8242    0.004    0.000    0.004    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.004    0.004 _adapters.py:146(_reader)
    58/39    0.000    0.000    0.004    0.000 functools.py:981(__get__)
        1    0.000    0.000    0.004    0.004 <frozen importlib._bootstrap_external>:1136(get_resource_reader)
        1    0.000    0.000    0.004    0.004 graph_drawer.py:1(<module>)
     8652    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap_external>:134(<genexpr>)
       32    0.001    0.000    0.004    0.000 colors.py:776(from_list)
       45    0.000    0.000    0.004    0.000 core.py:3146(mayReturnEmpty)
        2    0.000    0.000    0.004    0.002 readers.py:1(<module>)
     8288    0.003    0.000    0.004    0.000 inspect.py:3011(<genexpr>)
     9982    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1028(__enter__)
     1048    0.003    0.000    0.004    0.000 _ops.py:314(inner)
        1    0.001    0.001    0.004    0.004 symbolic_opset9.py:1(<module>)
       18    0.000    0.000    0.004    0.000 rcsetup.py:437(validate_font_properties)
      426    0.000    0.000    0.004    0.000 colors.py:129(is_color_like)
        9    0.000    0.000    0.004    0.000 fontconfig_pattern.py:119(parse)
       16    0.000    0.000    0.004    0.000 util.py:412(_inner)
     2568    0.001    0.000    0.004    0.000 typing.py:159(_type_convert)
     4952    0.001    0.000    0.004    0.000 permutations.py:320(__missing__)
   260/11    0.001    0.000    0.004    0.000 core.py:813(_parseNoCache)
     2015    0.001    0.000    0.004    0.000 containers.py:60(__getitem__)
    38/19    0.000    0.000    0.004    0.000 core.py:3119(re)
      138    0.000    0.000    0.004    0.000 rcsetup.py:87(f)
        1    0.000    0.000    0.004    0.004 binary.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _array_like.py:1(<module>)
    63/11    0.000    0.000    0.003    0.000 core.py:4172(parseImpl)
    23760    0.003    0.000    0.003    0.000 __future__.py:20(get_overwrite_module_params_on_conversion)
        1    0.000    0.000    0.003    0.003 _info.py:1(<module>)
      278    0.001    0.000    0.003    0.000 overrides.py:83(verify_matching_signatures)
        9    0.000    0.000    0.003    0.000 util.py:1(<module>)
     3657    0.003    0.000    0.003    0.000 {built-in method torch._C._get_default_device}
      292    0.001    0.000    0.003    0.000 <frozen zipimport>:64(__init__)
       42    0.000    0.000    0.003    0.000 doccer.py:283(decorate)
      213    0.003    0.000    0.003    0.000 {built-in method builtins.compile}
        1    0.000    0.000    0.003    0.003 ops.py:205(add_arithmetic_ops)
        4    0.002    0.001    0.003    0.001 _codata.py:1993(parse_constants_2002to2014)
      436    0.000    0.000    0.003    0.000 core.py:526(copy)
      401    0.000    0.000    0.003    0.000 _parser.py:94(closegroup)
      786    0.001    0.000    0.003    0.000 _builtins.py:161(_register_builtin)
       87    0.000    0.000    0.003    0.000 typing.py:483(__getitem__)
        1    0.000    0.000    0.003    0.003 _methods.py:1(<module>)
       18    0.000    0.000    0.003    0.000 ops.py:348(_wrap)
      370    0.001    0.000    0.003    0.000 colors.py:197(_to_rgba_no_colorcycle)
     6266    0.002    0.000    0.003    0.000 misc.py:500(as_int)
      140    0.001    0.000    0.003    0.000 deprecation.py:168(deprecate)
        1    0.000    0.000    0.003    0.003 radsimp.py:1(<module>)
      129    0.000    0.000    0.003    0.000 typing.py:1585(__getitem__)
        2    0.000    0.000    0.003    0.002 _adapters.py:1(<module>)
       22    0.000    0.000    0.003    0.000 inspect.py:1344(getfullargspec)
2640/1320    0.003    0.000    0.003    0.000 module.py:2224(named_modules)
        1    0.000    0.000    0.003    0.003 vmap.py:1(<module>)
    12085    0.003    0.000    0.003    0.000 {built-in method numpy.seterrobj}
        2    0.000    0.000    0.003    0.002 decorator.py:1(<module>)
     3514    0.003    0.000    0.003    0.000 copy.py:201(_deepcopy_list)
        6    0.000    0.000    0.003    0.001 _docscrape.py:680(methods)
     1513    0.001    0.000    0.003    0.000 sympify.py:514(_sympify)
        3    0.000    0.000    0.003    0.001 __init__.py:958(distribution)
        1    0.000    0.000    0.003    0.003 routeddecoder.py:1(<module>)
        3    0.000    0.000    0.003    0.001 __init__.py:545(from_name)
        2    0.000    0.000    0.003    0.002 fnmatch.py:1(<module>)
       71    0.000    0.000    0.003    0.000 typing.py:701(Literal)
       15    0.000    0.000    0.003    0.000 _bunch.py:32(_make_tuple_bunch)
        2    0.000    0.000    0.003    0.002 deprecation.py:208(_inner_deprecate_positional_args)
        1    0.000    0.000    0.003    0.003 ask.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _construct.py:1(<module>)
        1    0.000    0.000    0.003    0.003 rootoftools.py:1(<module>)
        1    0.000    0.000    0.003    0.003 relativedelta.py:1(<module>)
2950/2720    0.001    0.000    0.003    0.000 containers.py:56(<genexpr>)
     1329    0.003    0.000    0.003    0.000 _tensor_str.py:240(<listcomp>)
        1    0.000    0.000    0.003    0.003 _pep440.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _package_pickler.py:1(<module>)
    10762    0.002    0.000    0.003    0.000 mathtext.py:2847(<genexpr>)
        1    0.000    0.000    0.003    0.003 perm_groups.py:1(<module>)
      436    0.001    0.000    0.003    0.000 copy.py:66(copy)
        1    0.000    0.000    0.003    0.003 _parseaddr.py:1(<module>)
      100    0.000    0.000    0.003    0.000 iterables.py:1127(rotate_left)
     59/7    0.000    0.000    0.003    0.000 core.py:3923(leave_whitespace)
        1    0.000    0.000    0.003    0.003 hyper.py:1(<module>)
        1    0.000    0.000    0.003    0.003 groundtypes.py:1(<module>)
    20723    0.003    0.000    0.003    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.003    0.003 hyperbolic.py:1(<module>)
       21    0.000    0.000    0.003    0.000 __init__.py:910(<genexpr>)
      544    0.000    0.000    0.003    0.000 registration.py:296(wrapper)
      239    0.000    0.000    0.003    0.000 rcsetup.py:353(validate_color_for_prop_cycle)
       12    0.000    0.000    0.003    0.000 dataclasses.py:600(_frozen_get_del_attr)
       64    0.000    0.000    0.003    0.000 rcsetup.py:106(<listcomp>)
        1    0.000    0.000    0.003    0.003 polynomialring.py:1(<module>)
   127/59    0.000    0.000    0.003    0.000 core.py:4015(copy)
       18    0.000    0.000    0.003    0.000 __init__.py:808(search)
        1    0.000    0.000    0.003    0.003 stateless.py:1(<module>)
        6    0.000    0.000    0.003    0.000 _jit_internal.py:928(_overload_method)
        1    0.000    0.000    0.003    0.003 boolalg.py:1(<module>)
        1    0.000    0.000    0.003    0.003 configparser.py:1(<module>)
       87    0.001    0.000    0.003    0.000 utils.py:25(_toposort)
        2    0.000    0.000    0.003    0.001 _pytree.py:1(<module>)
        1    0.000    0.000    0.003    0.003 integerring.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _compat.py:1(<module>)
      292    0.001    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:1559(__init__)
        1    0.000    0.000    0.003    0.003 table.py:1(<module>)
     4016    0.002    0.000    0.003    0.000 copy.py:243(_keep_alive)
       74    0.000    0.000    0.003    0.000 typing.py:1599(__getitem_inner__)
       69    0.003    0.000    0.003    0.000 {built-in method builtins.dir}
       64    0.000    0.000    0.003    0.000 util.py:401(replaced_by_pep8)
        1    0.000    0.000    0.003    0.003 _fit.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _decomp_schur.py:1(<module>)
    93/40    0.000    0.000    0.003    0.000 typing.py:1395(_determine_new_args)
     2163    0.003    0.000    0.003    0.000 {built-in method _imp._fix_co_filename}
        1    0.000    0.000    0.003    0.003 pythonfinitefield.py:1(<module>)
        1    0.000    0.000    0.003    0.003 socket.py:1(<module>)
       16    0.000    0.000    0.003    0.000 inspect.py:2311(_signature_from_builtin)
        1    0.000    0.000    0.003    0.003 scalarstring.py:1(<module>)
        1    0.000    0.000    0.003    0.003 Bravais_Lattice.py:1(<module>)
     3657    0.003    0.000    0.003    0.000 {built-in method torch._is_functional_tensor}
      786    0.000    0.000    0.003    0.000 _builtins.py:128(_get_builtin_table)
        1    0.000    0.000    0.003    0.003 _stats_mstats_common.py:1(<module>)
      140    0.000    0.000    0.003    0.000 core.py:4109(<genexpr>)
  108/107    0.000    0.000    0.003    0.000 __init__.py:235(wrapper)
       21    0.000    0.000    0.003    0.000 _distn_infrastructure.py:3358(_attach_methods)
        1    0.000    0.000    0.003    0.003 _artifact_location.py:1(<module>)
        1    0.000    0.000    0.003    0.003 structure.py:5581(<dictcomp>)
        1    0.000    0.000    0.003    0.003 _logsumexp.py:1(<module>)
       16    0.000    0.000    0.002    0.000 structure.py:5069(__init__)
      101    0.000    0.000    0.002    0.000 _meta_registrations.py:33(wrapper)
    18215    0.002    0.000    0.002    0.000 {built-in method numpy.asanyarray}
       16    0.000    0.000    0.002    0.000 structure.py:3449(__init__)
        1    0.000    0.000    0.002    0.002 message.py:135(Message)
       24    0.001    0.000    0.002    0.000 util.py:210(_collapse_string_to_ranges)
        1    0.000    0.000    0.002    0.002 trajectory.py:1(<module>)
       16    0.000    0.000    0.002    0.000 inspect.py:2177(_signature_fromstr)
        1    0.000    0.000    0.002    0.002 pretty_symbology.py:1(<module>)
       54    0.000    0.000    0.002    0.000 deprecation.py:333(_delete_parameter)
      431    0.001    0.000    0.002    0.000 typing.py:320(_remove_dups_flatten)
        1    0.000    0.000    0.002    0.002 version.py:161(Version)
        1    0.000    0.000    0.002    0.002 _pep440.py:285(Version)
        1    0.000    0.000    0.002    0.002 _decomp_qr.py:1(<module>)
    24170    0.002    0.000    0.002    0.000 {built-in method numpy.geterrobj}
        8    0.000    0.000    0.002    0.000 __init__.py:817(lookup)
        1    0.000    0.000    0.002    0.002 _basinhopping.py:1(<module>)
       16    0.000    0.000    0.002    0.000 _functools.py:75(wrapper)
        8    0.000    0.000    0.002    0.000 __init__.py:823(__init__)
    18072    0.002    0.000    0.002    0.000 fromnumeric.py:2416(_all_dispatcher)
        2    0.000    0.000    0.002    0.001 polynomials.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _dtype_like.py:1(<module>)
        7    0.000    0.000    0.002    0.000 core.py:2833(__init__)
      367    0.001    0.000    0.002    0.000 permutations.py:1323(__mul__)
      291    0.000    0.000    0.002    0.000 <frozen codecs>:319(decode)
       16    0.000    0.000    0.002    0.000 rcsetup.py:843(cycler)
      451    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:164(_path_isdir)
        5    0.000    0.000    0.002    0.000 io.py:28(zopen)
        1    0.000    0.000    0.002    0.002 expr_with_intlimits.py:1(<module>)
    17066    0.002    0.000    0.002    0.000 {built-in method builtins.issubclass}
       93    0.000    0.000    0.002    0.000 _compatibility.py:10(mark_back_compat)
        6    0.000    0.000    0.002    0.000 _docscrape.py:694(properties)
        1    0.000    0.000    0.002    0.002 typing_extensions.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _decomp_qz.py:1(<module>)
       78    0.000    0.000    0.002    0.000 typing.py:1772(__class_getitem__)
       15    0.000    0.000    0.002    0.000 core.py:1601(__or__)
        1    0.000    0.000    0.002    0.002 assume.py:1(<module>)
      512    0.000    0.000    0.002    0.000 numbers.py:1984(__lt__)
        1    0.000    0.000    0.002    0.002 _attachment.py:1(<module>)
        1    0.000    0.000    0.002    0.002 clip_grad.py:1(<module>)
    10192    0.002    0.000    0.002    0.000 {method 'endswith' of 'str' objects}
   127/59    0.000    0.000    0.002    0.000 core.py:4018(<listcomp>)
      165    0.000    0.000    0.002    0.000 typing.py:832(__init__)
        1    0.000    0.000    0.002    0.002 _decomp_cholesky.py:1(<module>)
    17441    0.002    0.000    0.002    0.000 {built-in method _imp.acquire_lock}
       15    0.000    0.000    0.002    0.000 core.py:4399(__init__)
        3    0.000    0.000    0.002    0.001 ctx_mp.py:63(__init__)
      605    0.001    0.000    0.002    0.000 _inspect.py:96(getargspec)
       21    0.000    0.000    0.002    0.000 decompositions.py:3288(register_inplace)
        1    0.000    0.000    0.002    0.002 _manylinux.py:1(<module>)
        1    0.000    0.000    0.002    0.002 parameters.py:1(<module>)
     1465    0.002    0.000    0.002    0.000 {built-in method torch._C._get_schema}
        1    0.000    0.000    0.002    0.002 afm.py:1(<module>)
     5359    0.002    0.000    0.002    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.002    0.002 parametrizations.py:1(<module>)
        1    0.000    0.000    0.002    0.002 permutations.py:1(<module>)
      291    0.002    0.000    0.002    0.000 {built-in method _codecs.utf_8_decode}
        2    0.000    0.000    0.002    0.001 polyutils.py:1(<module>)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:2043(_draw)
       93    0.000    0.000    0.002    0.000 sites.py:38(__init__)
     1193    0.002    0.000    0.002    0.000 _docscrape.py:188(_strip)
    17441    0.002    0.000    0.002    0.000 {built-in method _imp.release_lock}
        3    0.000    0.000    0.002    0.001 patches.py:1867(pprint_styles)
       20    0.000    0.000    0.002    0.000 mul.py:205(flatten)
        1    0.000    0.000    0.002    0.002 c10d_error_logger.py:1(<module>)
      965    0.002    0.000    0.002    0.000 typing_extensions.py:3092(_has_generic_or_protocol_as_origin)
        1    0.000    0.000    0.002    0.002 _docscrape.py:112(NumpyDocString)
       59    0.000    0.000    0.002    0.000 core.py:3931(<listcomp>)
        2    0.001    0.001    0.002    0.001 _codata.py:2019(parse_constants_2018toXXXX)
        3    0.000    0.000    0.002    0.001 __init__.py:32(message_from_string)
     6251    0.001    0.000    0.002    0.000 _parser.py:247(match)
       22    0.000    0.000    0.002    0.000 core.py:620(set_parse_action)
        1    0.000    0.000    0.002    0.002 common_types.py:1(<module>)
     5212    0.002    0.000    0.002    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.002    0.001 decoder.py:332(decode)
      125    0.000    0.000    0.002    0.000 cache.py:66(func_wrapper)
        2    0.001    0.000    0.002    0.001 decoder.py:343(raw_decode)
        3    0.000    0.000    0.002    0.001 parser.py:59(parsestr)
     7314    0.002    0.000    0.002    0.000 {built-in method torch.get_default_dtype}
        3    0.000    0.000    0.002    0.001 parser.py:41(parse)
        2    0.002    0.001    0.002    0.001 {method 'join' of 'bytes' objects}
       28    0.000    0.000    0.002    0.000 _basic.py:16(_dispatch)
       71    0.000    0.000    0.002    0.000 enum.py:451(__prepare__)
        1    0.000    0.000    0.002    0.002 interpreter.py:1(<module>)
      607    0.000    0.000    0.002    0.000 typing.py:1535(<genexpr>)
      590    0.001    0.000    0.002    0.000 enum.py:1483(__and__)
        1    0.000    0.000    0.002    0.002 _mannwhitneyu.py:1(<module>)
       28    0.000    0.000    0.002    0.000 _backend.py:174(generate_multimethod)
       22    0.000    0.000    0.002    0.000 core.py:701(<listcomp>)
        1    0.000    0.000    0.002    0.002 pyplot.py:2138(_setup_pyplot_info_docstrings)
     7319    0.002    0.000    0.002    0.000 enum.py:1074(__new__)
        1    0.000    0.000    0.002    0.002 unary.py:1(<module>)
        7    0.001    0.000    0.002    0.000 _builtins.py:134(register_all)
        1    0.000    0.000    0.002    0.002 visualization.py:1(<module>)
       26    0.000    0.000    0.002    0.000 core.py:257(_trim_arity)
        1    0.000    0.000    0.002    0.002 integers.py:1(<module>)
        5    0.000    0.000    0.002    0.000 ctx_base.py:42(__init__)
     2616    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:180(_path_isabs)
        1    0.000    0.000    0.002    0.002 _static.py:1(<module>)
        1    0.000    0.000    0.002    0.002 symbolic_shapes.py:1(<module>)
        1    0.000    0.000    0.002    0.002 distribution.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _arffread.py:1(<module>)
     2602    0.001    0.000    0.002    0.000 numbers.py:1965(__eq__)
        1    0.000    0.000    0.002    0.002 ctx_mp_python.py:1(<module>)
        1    0.000    0.000    0.002    0.002 animation.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _notification.py:1(<module>)
        3    0.000    0.000    0.002    0.001 patches.py:1871(<listcomp>)
      100    0.000    0.000    0.002    0.000 matrix_element.py:167(__radd__)
      544    0.001    0.000    0.002    0.000 registration.py:213(register)
        1    0.002    0.002    0.002    0.002 {built-in method torch._C._c10d_init}
     1800    0.001    0.000    0.002    0.000 _docscrape.py:457(_str_indent)
      200    0.000    0.000    0.002    0.000 containers.py:75(__add__)
        4    0.000    0.000    0.002    0.000 feedparser.py:173(feed)
       20    0.000    0.000    0.002    0.000 core.py:5363(parseImpl)
     2776    0.001    0.000    0.002    0.000 inspect.py:755(_is_wrapper)
       35    0.000    0.000    0.002    0.000 _typing.py:346(__new__)
        1    0.000    0.000    0.002    0.002 ring_series.py:1(<module>)
       74    0.000    0.000    0.002    0.000 typing.py:1580(copy_with)
        1    0.000    0.000    0.002    0.002 _header_value_parser.py:1(<module>)
       64    0.000    0.000    0.002    0.000 wrappers.py:285(backwards_not_supported)
       28    0.000    0.000    0.002    0.000 _backend.py:312(get_defaults)
        5    0.001    0.000    0.002    0.000 functions.py:18(__init__)
        1    0.000    0.000    0.002    0.002 pc_groups.py:1(<module>)
       44    0.000    0.000    0.002    0.000 typing.py:2799(<dictcomp>)
        1    0.000    0.000    0.002    0.002 _dual_annealing.py:1(<module>)
     1043    0.001    0.000    0.002    0.000 typing.py:1270(__getattr__)
     2492    0.002    0.000    0.002    0.000 {built-in method _imp.find_frozen}
     4901    0.001    0.000    0.002    0.000 inspect.py:378(isfunction)
        2    0.000    0.000    0.002    0.001 sets.py:1(<module>)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:868(draw)
        1    0.000    0.000    0.002    0.002 _graph.py:1(<module>)
        2    0.000    0.000    0.002    0.001 factorials.py:1(<module>)
      243    0.001    0.000    0.002    0.000 functools.py:518(decorating_function)
     1126    0.000    0.000    0.002    0.000 colors.py:124(_is_nth_color)
        1    0.000    0.000    0.002    0.002 diophantine.py:1(<module>)
        7    0.000    0.000    0.002    0.000 feedparser.py:178(_call_parse)
        1    0.000    0.000    0.002    0.002 _comparison.py:1(<module>)
     4289    0.001    0.000    0.002    0.000 _parser.py:170(append)
     5579    0.001    0.000    0.002    0.000 _ops.py:289(__hash__)
       30    0.000    0.000    0.002    0.000 __init__.py:652(__init__)
        2    0.000    0.000    0.002    0.001 sysconfig.py:185(_safe_realpath)
        6    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:605(draw)
       22    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:1083(filtered)
        2    0.000    0.000    0.002    0.001 <frozen posixpath>:411(realpath)
        7    0.000    0.000    0.002    0.000 feedparser.py:218(_parsegen)
      3/2    0.000    0.000    0.002    0.001 <frozen posixpath>:420(_joinrealpath)
      459    0.001    0.000    0.002    0.000 iterables.py:1923(has_dups)
        1    0.000    0.000    0.002    0.002 csv.py:1(<module>)
     2194    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:48(_new_module)
        1    0.000    0.000    0.002    0.002 nonhomogeneous.py:1(<module>)
        7    0.000    0.000    0.002    0.000 ctx_mp_python.py:279(binary_op)
        1    0.000    0.000    0.002    0.002 _stack.py:1(<module>)
       30    0.000    0.000    0.002    0.000 <frozen _collections_abc>:941(update)
     4881    0.001    0.000    0.002    0.000 _parser.py:158(__len__)
      592    0.001    0.000    0.002    0.000 _pytree.py:136(__init__)
        2    0.000    0.000    0.002    0.001 error.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _artifact_content.py:1(<module>)
     1456    0.001    0.000    0.002    0.000 _docscrape.py:49(read)
     2671    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:357(__init__)
        1    0.000    0.000    0.002    0.002 _char_codes.py:1(<module>)
       72    0.000    0.000    0.002    0.000 inspect.py:3224(__str__)
        1    0.000    0.000    0.002    0.002 _reporting_descriptor_reference.py:1(<module>)
        1    0.000    0.000    0.002    0.002 trf_linear.py:1(<module>)
        1    0.000    0.000    0.002    0.002 backend_tools.py:1(<module>)
     3657    0.002    0.000    0.002    0.000 {method '_is_zerotensor' of 'torch._C._TensorBase' objects}
      403    0.002    0.000    0.002    0.000 {built-in method _abc._abc_init}
       19    0.002    0.000    0.002    0.000 {built-in method posix.lstat}
        1    0.000    0.000    0.002    0.002 hyperexpand.py:1(<module>)
     2869    0.002    0.000    0.002    0.000 functools.py:65(wraps)
     9727    0.002    0.000    0.002    0.000 {method '__exit__' of '_thread.lock' objects}
      976    0.001    0.000    0.002    0.000 _compiler.py:396(_simple)
        3    0.000    0.000    0.002    0.001 _constants.py:1(<module>)
        2    0.000    0.000    0.002    0.001 __init__.py:456(_get_config_or_cache_dir)
      961    0.002    0.000    0.002    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.002    0.002 _trustregion_dogleg.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _mio4.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _tanhsinh.py:1(<module>)
      532    0.001    0.000    0.002    0.000 function_base.py:2285(__init__)
        2    0.000    0.000    0.002    0.001 fractions.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _address.py:1(<module>)
       83    0.000    0.000    0.001    0.000 core.py:3887(__init__)
     7314    0.001    0.000    0.001    0.000 {method 'has_names' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 accumulationbounds.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ExifTags.py:21(Base)
        1    0.000    0.000    0.001    0.001 monkey.py:72(patch_all)
       13    0.000    0.000    0.001    0.000 enum.py:891(<listcomp>)
       35    0.000    0.000    0.001    0.000 core.py:76(ismethod)
      317    0.000    0.000    0.001    0.000 font_manager.py:962(_json_decode)
        1    0.000    0.000    0.001    0.001 monkey.py:93(_patch_distribution_metadata)
        1    0.000    0.000    0.001    0.001 _nonlin.py:1(<module>)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap>:977(exec_module)
        1    0.000    0.000    0.001    0.001 meta_utils.py:1(<module>)
     1482    0.001    0.000    0.001    0.000 enum.py:809(__setattr__)
        1    0.000    0.000    0.001    0.001 parsing.py:1(<module>)
        2    0.000    0.000    0.001    0.001 pathlib.py:1111(mkdir)
        1    0.000    0.000    0.001    0.001 <frozen ntpath>:1(<module>)
        1    0.000    0.000    0.001    0.001 gzip.py:296(read)
        1    0.000    0.000    0.001    0.001 wavfile.py:72(WAVE_FORMAT)
        1    0.000    0.000    0.001    0.001 rl.py:1(<module>)
       97    0.001    0.000    0.001    0.000 {method 'sort' of 'list' objects}
     3657    0.001    0.000    0.001    0.000 {built-in method torch._C._len_torch_dispatch_stack}
        1    0.000    0.000    0.001    0.001 fancysets.py:1(<module>)
        1    0.000    0.000    0.001    0.001 core.py:6281(<listcomp>)
        2    0.001    0.001    0.001    0.001 {built-in method posix.mkdir}
        1    0.000    0.000    0.001    0.001 singleton.py:1(<module>)
        1    0.000    0.000    0.001    0.001 core.py:389(ParserElement)
        1    0.000    0.000    0.001    0.001 zeta_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _ufunc_config.py:1(<module>)
  274/176    0.000    0.000    0.001    0.000 core.py:1947(name)
        1    0.000    0.000    0.001    0.001 module.py:366(Module)
     2209    0.001    0.000    0.001    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.001    0.001 polyoptions.py:397(Domain)
     6493    0.001    0.000    0.001    0.000 {built-in method from_bytes}
        1    0.000    0.000    0.001    0.001 _expm_frechet.py:1(<module>)
        1    0.000    0.000    0.001    0.001 proxy.py:1(<module>)
        7    0.000    0.000    0.001    0.000 gzip.py:474(read)
      541    0.001    0.000    0.001    0.000 dataclasses.py:828(_set_new_attribute)
     6024    0.001    0.000    0.001    0.000 {method 'set' of '_contextvars.ContextVar' objects}
     9746    0.001    0.000    0.001    0.000 {built-in method _thread.get_ident}
  206/114    0.000    0.000    0.001    0.000 core.py:1910(default_name)
     22/3    0.000    0.000    0.001    0.000 core.py:4122(streamline)
        1    0.000    0.000    0.001    0.001 _miobase.py:1(<module>)
      248    0.001    0.000    0.001    0.000 _docscrape.py:499(_str_see_also)
        2    0.000    0.000    0.001    0.001 core.py:6134(srange)
        1    0.000    0.000    0.001    0.001 _direct_py.py:1(<module>)
       12    0.001    0.000    0.001    0.000 artist.py:1273(<listcomp>)
        1    0.000    0.000    0.001    0.001 timeutils.py:1(<module>)
      927    0.001    0.000    0.001    0.000 permutations.py:1028(_af_new)
      365    0.000    0.000    0.001    0.000 typing.py:1623(<genexpr>)
        1    0.000    0.000    0.001    0.001 mod.py:1(<module>)
       57    0.000    0.000    0.001    0.000 <frozen genericpath>:16(exists)
      628    0.000    0.000    0.001    0.000 _pytree.py:105(_is_leaf)
        1    0.000    0.000    0.001    0.001 ImageMode.py:1(<module>)
     1366    0.000    0.000    0.001    0.000 {built-in method builtins.delattr}
     1627    0.001    0.000    0.001    0.000 enum.py:78(_is_private)
      502    0.001    0.000    0.001    0.000 typing.py:306(_deduplicate)
     6034    0.001    0.000    0.001    0.000 _ufunc_config.py:426(__init__)
        1    0.000    0.000    0.001    0.001 __init__.py:42(_load_pmg_settings)
        1    0.000    0.000    0.001    0.001 configparser.py:569(RawConfigParser)
       29    0.000    0.000    0.001    0.000 typing.py:1628(copy_with)
        1    0.000    0.000    0.001    0.001 rnn.py:340(RNN)
     3657    0.001    0.000    0.001    0.000 {method 'is_neg' of 'torch._C._TensorBase' objects}
      330    0.001    0.000    0.001    0.000 module.py:2167(children)
       14    0.000    0.000    0.001    0.000 core.py:115(doc_note)
        7    0.000    0.000    0.001    0.000 _nonlin.py:1584(_nonlin_wrapper)
       20    0.000    0.000    0.001    0.000 core.py:5119(parseImpl)
       42    0.000    0.000    0.001    0.000 _typing.py:257(__new__)
        1    0.000    0.000    0.001    0.001 connection.py:1(<module>)
      104    0.000    0.000    0.001    0.000 typing.py:1006(__init__)
     3872    0.001    0.000    0.001    0.000 typing.py:1348(__eq__)
    28/22    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1136(wrapped)
      277    0.001    0.000    0.001    0.000 results.py:153(__new__)
        1    0.000    0.000    0.001    0.001 getlimits.py:162(_register_known_types)
        1    0.000    0.000    0.001    0.001 realfield.py:1(<module>)
     4191    0.001    0.000    0.001    0.000 numbers.py:2011(__hash__)
      330    0.001    0.000    0.001    0.000 {built-in method torch._C._nn._parse_to}
      436    0.001    0.000    0.001    0.000 copy.py:259(_reconstruct)
     30/4    0.000    0.000    0.001    0.000 core.py:3963(streamline)
        1    0.000    0.000    0.001    0.001 sequences.py:1(<module>)
     1662    0.001    0.000    0.001    0.000 basic.py:288(__new__)
       43    0.000    0.000    0.001    0.000 ast.py:33(parse)
    11121    0.001    0.000    0.001    0.000 inspect.py:2729(name)
        5    0.000    0.000    0.001    0.000 perm_groups.py:124(__new__)
     2994    0.001    0.000    0.001    0.000 _parser.py:284(tell)
       53    0.000    0.000    0.001    0.000 core.py:3161(parseImpl)
      628    0.000    0.000    0.001    0.000 <string>:2(__init__)
        1    0.000    0.000    0.001    0.001 realfield.py:87(__init__)
       75    0.000    0.000    0.001    0.000 pathlib.py:868(__new__)
        1    0.000    0.000    0.001    0.001 _torch_docs.py:1(<module>)
       82    0.000    0.000    0.001    0.000 pathlib.py:504(_from_parts)
     6024    0.001    0.000    0.001    0.000 {method 'reset' of '_contextvars.ContextVar' objects}
     8747    0.001    0.000    0.001    0.000 {method 'isidentifier' of 'str' objects}
        1    0.000    0.000    0.001    0.001 _sketches.py:1(<module>)
        1    0.000    0.000    0.001    0.001 helpers.py:634(make_html_tags)
     6941    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
        6    0.000    0.000    0.001    0.000 pathlib.py:1245(is_dir)
       44    0.000    0.000    0.001    0.000 core.py:4404(<genexpr>)
        1    0.000    0.000    0.001    0.001 helpers.py:576(_makeTags)
       96    0.000    0.000    0.001    0.000 pathlib.py:484(_parse_args)
        1    0.000    0.000    0.001    0.001 _correlation.py:1(<module>)
      822    0.000    0.000    0.001    0.000 typing_extensions.py:3114(_is_unpacked_typevartuple)
        1    0.000    0.000    0.001    0.001 sites.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _sensitivity_analysis.py:1(<module>)
     8013    0.001    0.000    0.001    0.000 _docscrape.py:153(__getitem__)
      755    0.001    0.000    0.001    0.000 dataclasses.py:451(_field_init)
        6    0.000    0.000    0.001    0.000 pathlib.py:1008(stat)
       55    0.000    0.000    0.001    0.000 __init__.py:2081(getLogger)
     72/4    0.000    0.000    0.001    0.000 core.py:980(_parseCache)
      199    0.000    0.000    0.001    0.000 typing.py:245(_collect_parameters)
1647/1434    0.001    0.000    0.001    0.000 typing.py:1354(__hash__)
     7528    0.001    0.000    0.001    0.000 {built-in method posix.fspath}
        1    0.001    0.001    0.001    0.001 para4tb.py:45(__get_exp)
       31    0.000    0.000    0.001    0.000 _base.py:56(__set_name__)
       64    0.000    0.000    0.001    0.000 typing.py:1470(copy_with)
        6    0.000    0.000    0.001    0.000 warnings.py:130(filterwarnings)
        1    0.000    0.000    0.001    0.001 _complex.py:1(<module>)
      215    0.000    0.000    0.001    0.000 symbolic_helper.py:263(decorator)
        1    0.000    0.000    0.001    0.001 depends.py:1(<module>)
      105    0.000    0.000    0.001    0.000 typing.py:1822(__init_subclass__)
      748    0.001    0.000    0.001    0.000 dataclasses.py:347(field)
      992    0.001    0.000    0.001    0.000 _docscrape.py:491(_str_section)
      129    0.000    0.000    0.001    0.000 dataclasses.py:394(_recursive_repr)
        1    0.000    0.000    0.001    0.001 extras.py:1(<module>)
  755/724    0.001    0.000    0.001    0.000 typing.py:1636(__hash__)
     1329    0.001    0.000    0.001    0.000 {method 'size' of 'torch._C._TensorBase' objects}
     1456    0.001    0.000    0.001    0.000 _docscrape.py:16(strip_blank_lines)
        1    0.000    0.000    0.001    0.001 unary.py:167(<dictcomp>)
      141    0.000    0.000    0.001    0.000 sorting.py:179(_nodes)
      330    0.001    0.000    0.001    0.000 optimizer.py:291(_patch_step_function)
        1    0.000    0.000    0.001    0.001 dviread.py:1(<module>)
    11885    0.001    0.000    0.001    0.000 inspect.py:2741(kind)
        1    0.000    0.000    0.001    0.001 subgraph_rewriter.py:1(<module>)
        1    0.000    0.000    0.001    0.001 fontconfig_pattern.py:62(__init__)
        1    0.000    0.000    0.001    0.001 _survival.py:1(<module>)
        6    0.000    0.000    0.001    0.000 getlimits.py:34(__init__)
        9    0.000    0.000    0.001    0.000 assume.py:175(__new__)
      586    0.001    0.000    0.001    0.000 _inspect.py:65(getargs)
        1    0.000    0.000    0.001    0.001 runner.py:1(<module>)
     1800    0.001    0.000    0.001    0.000 _docscrape.py:458(<listcomp>)
      146    0.000    0.000    0.001    0.000 enum.py:923(_get_mixins_)
    11079    0.001    0.000    0.001    0.000 {built-in method builtins.callable}
      138    0.000    0.000    0.001    0.000 _meta_registrations.py:34(register)
        1    0.000    0.000    0.001    0.001 _decomp_ldl.py:1(<module>)
        1    0.000    0.000    0.001    0.001 torch_version.py:1(<module>)
        1    0.000    0.000    0.001    0.001 graph.py:675(Graph)
     5469    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
        1    0.000    0.000    0.001    0.001 _rules.py:1(<module>)
       16    0.000    0.000    0.001    0.000 inspect.py:2105(_signature_strip_non_python_syntax)
       52    0.000    0.000    0.001    0.000 inspect.py:936(getsourcefile)
  518/510    0.000    0.000    0.001    0.000 {built-in method builtins.repr}
       21    0.000    0.000    0.001    0.000 arrayprint.py:506(wrapper)
     2546    0.001    0.000    0.001    0.000 _docscrape.py:403(<genexpr>)
        1    0.000    0.000    0.001    0.001 rnn.py:551(LSTM)
        1    0.000    0.000    0.001    0.001 __init__.py:454(StrFormatStyle)
        1    0.000    0.000    0.001    0.001 grad_scaler.py:1(<module>)
     7354    0.001    0.000    0.001    0.000 {method '__contains__' of 'frozenset' objects}
        1    0.000    0.000    0.001    0.001 tools_common.py:1(<module>)
       69    0.000    0.000    0.001    0.000 _compatibility.py:24(mark_not_back_compat)
     20/6    0.000    0.000    0.001    0.000 core.py:4741(streamline)
       17    0.000    0.000    0.001    0.000 deprecation.py:416(_make_keyword_only)
       54    0.000    0.000    0.001    0.000 __init__.py:1327(getLogger)
        2    0.000    0.000    0.001    0.000 combining.py:1(<module>)
     3486    0.001    0.000    0.001    0.000 facts.py:633(<genexpr>)
      665    0.001    0.000    0.001    0.000 _compiler.py:214(_compile_charset)
      426    0.000    0.000    0.001    0.000 __init__.py:218(finditer)
        1    0.000    0.000    0.001    0.001 miscellaneous.py:1(<module>)
      459    0.000    0.000    0.001    0.000 permutations.py:455(<listcomp>)
        2    0.000    0.000    0.001    0.000 container.py:1(<module>)
        1    0.000    0.000    0.001    0.001 operator_schemas.py:1(<module>)
      425    0.000    0.000    0.001    0.000 artist.py:1363(aliased_name)
      205    0.000    0.000    0.001    0.000 inspect.py:2763(__str__)
        1    0.000    0.000    0.001    0.001 _variation.py:1(<module>)
       90    0.000    0.000    0.001    0.000 basic.py:447(sort_key)
        1    0.000    0.000    0.001    0.001 elliptic_integrals.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:1129(manager_path)
        3    0.000    0.000    0.001    0.000 string.py:1(<module>)
     3657    0.001    0.000    0.001    0.000 _python_dispatch.py:89(<listcomp>)
       37    0.001    0.000    0.001    0.000 function_base.py:24(linspace)
     2686    0.001    0.000    0.001    0.000 util.py:202(__call__)
        1    0.000    0.000    0.001    0.001 __init__.py:505(get_cachedir)
        1    0.000    0.000    0.001    0.001 mathieu_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 binary.py:171(<dictcomp>)
        1    0.000    0.000    0.001    0.001 _gauss_kronrod.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:569(matplotlib_fname)
        2    0.000    0.000    0.001    0.000 _internal.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _external_property_file_references.py:1(<module>)
     10/3    0.000    0.000    0.001    0.000 unicode.py:14(__get__)
     1375    0.001    0.000    0.001    0.000 enum.py:37(_is_descriptor)
        1    0.000    0.000    0.001    0.001 _pocketfft.py:1(<module>)
        1    0.000    0.000    0.001    0.001 datetime.py:1(<module>)
       59    0.000    0.000    0.001    0.000 __init__.py:791(joinpath)
       80    0.000    0.000    0.001    0.000 _array_api.py:757(xp_capabilities)
        1    0.000    0.000    0.001    0.001 indexed.py:1(<module>)
      115    0.000    0.000    0.001    0.000 inspect.py:786(_finddoc)
     1747    0.001    0.000    0.001    0.000 enum.py:47(_is_dunder)
     6024    0.001    0.000    0.001    0.000 numeric.py:2166(_allclose_dispatcher)
  628/550    0.001    0.000    0.001    0.000 _pytree.py:165(tree_unflatten)
     1329    0.001    0.000    0.001    0.000 {built-in method math.floor}
      106    0.000    0.000    0.001    0.000 contextlib.py:257(contextmanager)
        1    0.000    0.000    0.001    0.001 defchararray.py:1(<module>)
      182    0.000    0.000    0.001    0.000 numbers.py:1975(__gt__)
      772    0.001    0.000    0.001    0.000 _docscrape.py:28(__init__)
       27    0.000    0.000    0.001    0.000 pathlib.py:940(glob)
      542    0.001    0.000    0.001    0.000 _parser.py:367(_escape)
      628    0.001    0.000    0.001    0.000 _pytree.py:120(__post_init__)
       15    0.000    0.000    0.001    0.000 typing.py:2893(__new__)
        2    0.000    0.000    0.001    0.000 __init__.py:474(_get_data_path)
       98    0.001    0.000    0.001    0.000 pathlib.py:56(parse_parts)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2297(entropy)
        1    0.000    0.000    0.001    0.001 _nnls.py:1(<module>)
        1    0.000    0.000    0.001    0.001 special.py:1(<module>)
     2237    0.001    0.000    0.001    0.000 inspect.py:292(isclass)
       14    0.000    0.000    0.001    0.000 periodic_table.py:1608(get_el_sp)
        1    0.000    0.000    0.001    0.001 _interpolation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 scale.py:1(<module>)
     1286    0.001    0.000    0.001    0.000 enum.py:728(__delattr__)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2317(_entropy_quadrature)
      395    0.000    0.000    0.001    0.000 containers.py:110(__hash__)
        6    0.000    0.000    0.001    0.000 _docscrape.py:698(<listcomp>)
      401    0.001    0.000    0.001    0.000 _parser.py:82(opengroup)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2076(_quadrature)
       50    0.000    0.000    0.001    0.000 basic.py:737(as_dummy)
        4    0.000    0.000    0.001    0.000 __init__.py:590(gen_candidates)
      886    0.001    0.000    0.001    0.000 typing.py:2374(get_origin)
       12    0.000    0.000    0.001    0.000 __init__.py:1852(_define_aliases)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._autograd_init}
        1    0.000    0.000    0.001    0.001 matcher_utils.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _region.py:1(<module>)
      664    0.000    0.000    0.001    0.000 _pytree.py:99(_get_node_type)
        1    0.000    0.000    0.001    0.001 unary.py:170(<dictcomp>)
        3    0.000    0.000    0.001    0.000 ctx_mp.py:96(init_builtins)
        8    0.000    0.000    0.001    0.000 core.py:2951(_generateDefaultName)
      468    0.000    0.000    0.001    0.000 _parser.py:444(_uniq)
     5813    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.001    0.001 server_process_global_profiler.py:1(<module>)
    24/12    0.000    0.000    0.001    0.000 core.py:4425(parseImpl)
        1    0.001    0.001    0.001    0.001 events.py:644(BaseDefaultEventLoopPolicy)
        1    0.000    0.000    0.001    0.001 _text.py:1(<module>)
        1    0.000    0.000    0.001    0.001 coord.py:1(<module>)
       11    0.000    0.000    0.001    0.000 core.py:2952(charsAsStr)
        1    0.000    0.000    0.001    0.001 __init__.py:486(get_configdir)
        2    0.000    0.000    0.001    0.000 _procrustes.py:1(<module>)
        1    0.000    0.000    0.001    0.001 signal.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:516(get_data_path)
        8    0.000    0.000    0.001    0.000 __init__.py:794(children)
        1    0.000    0.000    0.001    0.001 reader.py:1(<module>)
      347    0.000    0.000    0.001    0.000 pretty_symbology.py:10(U)
        1    0.000    0.000    0.001    0.001 _type_utils.py:1(<module>)
        1    0.000    0.000    0.001    0.001 string.py:69(__init_subclass__)
      485    0.001    0.000    0.001    0.000 _array_api.py:676(__str__)
        1    0.000    0.000    0.001    0.001 _short_time_fft.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:537(_get_data_path)
     3208    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
     1721    0.001    0.000    0.001    0.000 typing.py:1631(__eq__)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1(<module>)
        2    0.000    0.000    0.001    0.000 combinatorics.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pydoc.py:1(<module>)
     2667    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:165(__init__)
      398    0.001    0.000    0.001    0.000 _util.py:526(<listcomp>)
        1    0.000    0.000    0.001    0.001 gzip.py:25(open)
        1    0.000    0.000    0.001    0.001 _tanhsinh.py:958(nsum)
       18    0.000    0.000    0.001    0.000 core.py:5230(parseImpl)
      235    0.001    0.000    0.001    0.000 core.py:456(__init__)
      110    0.000    0.000    0.001    0.000 _compiler.py:384(_mk_bitmap)
        1    0.000    0.000    0.001    0.001 _tensor_docs.py:1(<module>)
        3    0.000    0.000    0.001    0.000 feedparser.py:471(_parse_headers)
     2412    0.001    0.000    0.001    0.000 _parser.py:109(__init__)
      349    0.000    0.000    0.001    0.000 _docscrape.py:303(parse_item_name)
     1820    0.001    0.000    0.001    0.000 _docscrape.py:156(__setitem__)
        1    0.000    0.000    0.001    0.001 equality.py:1(<module>)
      327    0.001    0.000    0.001    0.000 <frozen posixpath>:60(isabs)
        1    0.000    0.000    0.001    0.001 gzip.py:134(__init__)
     1627    0.001    0.000    0.001    0.000 enum.py:58(_is_sunder)
        1    0.000    0.000    0.001    0.001 std.py:245(tqdm)
       84    0.000    0.000    0.001    0.000 __init__.py:1641(get_aten_op)
        1    0.000    0.000    0.001    0.001 _decomp_polar.py:1(<module>)
      347    0.001    0.000    0.001    0.000 {built-in method unicodedata.lookup}
        4    0.000    0.000    0.001    0.000 enum.py:822(_create_)
        1    0.000    0.000    0.001    0.001 helpers.py:678(<dictcomp>)
        1    0.000    0.000    0.001    0.001 complexfield.py:1(<module>)
       80    0.001    0.000    0.001    0.000 function.py:289(__init__)
        1    0.000    0.000    0.001    0.001 rnn.py:830(GRU)
      750    0.000    0.000    0.001    0.000 numbers.py:1972(__ne__)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1372(<listcomp>)
     6024    0.001    0.000    0.001    0.000 numeric.py:2245(_isclose_dispatcher)
     1008    0.000    0.000    0.001    0.000 colors.py:266(<genexpr>)
      264    0.000    0.000    0.001    0.000 <frozen _collections_abc>:859(__iter__)
       93    0.000    0.000    0.001    0.000 composition.py:141(__init__)
       15    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:3136(moment)
        1    0.000    0.000    0.001    0.001 annotations.py:1(<module>)
       63    0.000    0.000    0.001    0.000 colors.py:829(reversed)
        5    0.000    0.000    0.001    0.000 polyhedron.py:390(<listcomp>)
        1    0.000    0.000    0.001    0.001 parse.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pkgutil.py:506(extend_path)
        1    0.000    0.000    0.001    0.001 tools_common.py:78(FxNetAccFusionsFinder)
        1    0.000    0.000    0.001    0.001 ElementPath.py:1(<module>)
       28    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:305(get_numerical_endpoints)
        1    0.000    0.000    0.001    0.001 unicode.py:80(alphanums)
        1    0.000    0.000    0.001    0.001 pickletools.py:1(<module>)
       38    0.000    0.000    0.001    0.000 getlimits.py:111(_float_to_str)
     2496    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:748(find_spec)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1597(__init__)
        1    0.000    0.000    0.001    0.001 beta_functions.py:1(<module>)
       80    0.001    0.000    0.001    0.000 _array_api.py:682(_make_sphinx_capabilities)
       58    0.000    0.000    0.001    0.000 wrappers.py:328(elementwise_unary_scalar_wrapper)
       10    0.000    0.000    0.001    0.000 extras.py:233(__init__)
      428    0.001    0.000    0.001    0.000 libmpf.py:291(from_man_exp)
        6    0.000    0.000    0.001    0.000 _docscrape.py:684(<listcomp>)
       20    0.000    0.000    0.001    0.000 typing.py:1357(__or__)
        3    0.000    0.000    0.001    0.000 activation.py:1(<module>)
     20/6    0.000    0.000    0.001    0.000 core.py:4698(parseImpl)
       34    0.000    0.000    0.001    0.000 symbol.py:494(__new__)
       10    0.000    0.000    0.001    0.000 extras.py:237(getdoc)
       71    0.000    0.000    0.001    0.000 enum.py:987(_find_new_)
      300    0.000    0.000    0.001    0.000 matrix_element.py:41(<listcomp>)
       65    0.000    0.000    0.001    0.000 assumptions.py:497(getit)
        1    0.000    0.000    0.001    0.001 _web_request.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _web_response.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:1(<module>)
        1    0.001    0.001    0.001    0.001 comments.py:1007(CommentedKeyMap)
      330    0.001    0.000    0.001    0.000 module.py:2176(named_children)
        6    0.001    0.000    0.001    0.000 {method 'decompress' of 'zlib.Decompress' objects}
      300    0.001    0.000    0.001    0.000 matrix_element.py:90(__extract_var)
        1    0.000    0.000    0.001    0.001 complexfield.py:48(__init__)
       42    0.000    0.000    0.001    0.000 {numpy.random._generator.default_rng}
      297    0.000    0.000    0.001    0.000 _parser.py:222(__init__)
      269    0.000    0.000    0.001    0.000 __init__.py:304(<genexpr>)
        2    0.000    0.000    0.001    0.000 unicode.py:55(_chars_for_ranges)
        1    0.000    0.000    0.001    0.001 ctx_iv.py:1(<module>)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._rpc_init}
        1    0.000    0.000    0.001    0.001 tarfile.py:1(<module>)
      431    0.000    0.000    0.001    0.000 _util.py:541(<genexpr>)
        1    0.000    0.000    0.001    0.001 unicode.py:70(alphas)
     6092    0.001    0.000    0.001    0.000 multiarray.py:669(result_type)
  335/280    0.000    0.000    0.001    0.000 _compiler.py:434(_get_literal_prefix)
      106    0.000    0.000    0.001    0.000 typing.py:932(__init__)
        1    0.000    0.000    0.001    0.001 texmanager.py:1(<module>)
     2164    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1097(__init__)
        1    0.000    0.000    0.001    0.001 pooling.py:1(<module>)
        1    0.000    0.000    0.001    0.001 tensor_functions.py:1(<module>)
       83    0.000    0.000    0.001    0.000 deprecation.py:222(finalize)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:27(_parse_docstrings)
        1    0.000    0.000    0.001    0.001 _linalg.py:1(<module>)
        1    0.000    0.000    0.001    0.001 latex.py:1(<module>)
        1    0.000    0.000    0.001    0.001 libintmath.py:1(<module>)
     1246    0.000    0.000    0.001    0.000 _docscrape.py:454(_str_header)
        1    0.000    0.000    0.001    0.001 _realtransforms.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _suppression.py:1(<module>)
      186    0.000    0.000    0.001    0.000 typing.py:1673(__hash__)
        1    0.000    0.000    0.001    0.001 reinplace.py:1(<module>)
      266    0.000    0.000    0.001    0.000 dataclasses.py:380(_tuple_str)
       90    0.000    0.000    0.001    0.000 basic.py:475(<listcomp>)
     2800    0.001    0.000    0.001    0.000 facts.py:582(_tell)
        1    0.000    0.000    0.001    0.001 TiffTags.py:1(<module>)
      544    0.000    0.000    0.001    0.000 registration.py:159(add)
      990    0.000    0.000    0.001    0.000 module.py:2113(<lambda>)
        1    0.000    0.000    0.001    0.001 symbolic_opset10.py:1(<module>)
        2    0.000    0.000    0.001    0.000 gzip.py:467(_read_gzip_header)
       61    0.000    0.000    0.001    0.000 core.py:4672(__init__)
        1    0.000    0.000    0.001    0.001 _exception.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:149(EntryPoint)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1616(_update_parameters)
        1    0.000    0.000    0.001    0.001 periodic_table.py:865(Element)
        2    0.000    0.000    0.001    0.000 gzip.py:418(_read_gzip_header)
        1    0.000    0.000    0.001    0.001 ctx_iv.py:306(__init__)
       29    0.000    0.000    0.001    0.000 _array_api.py:553(xp_promote)
     3959    0.001    0.000    0.001    0.000 typing.py:1341(<genexpr>)
        1    0.000    0.000    0.001    0.001 para4tb.py:24(<listcomp>)
       26    0.000    0.000    0.001    0.000 _hook_iterator.py:102(hook_iterator)
       31    0.000    0.000    0.001    0.000 gzip.py:86(read)
        1    0.000    0.000    0.001    0.001 _graph_traversal.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _fftlog.py:1(<module>)
        1    0.000    0.000    0.001    0.001 sampler.py:1(<module>)
        3    0.000    0.000    0.001    0.000 arrayprint.py:1487(_array_repr_implementation)
        1    0.000    0.000    0.001    0.001 dataset.py:1(<module>)
        1    0.000    0.000    0.001    0.001 figure.py:220(Figure)
      130    0.000    0.000    0.001    0.000 dataclasses.py:371(_fields_in_init_order)
       42    0.000    0.000    0.001    0.000 symbol.py:359(__xnew__)
        1    0.000    0.000    0.001    0.001 _result_provenance.py:1(<module>)
        2    0.000    0.000    0.001    0.000 loader.py:1(<module>)
       45    0.000    0.000    0.001    0.000 basic.py:1386(has)
        1    0.000    0.000    0.001    0.001 ticker.py:1(<module>)
        1    0.000    0.000    0.001    0.001 texmanager.py:47(TexManager)
        5    0.000    0.000    0.001    0.000 decorator.py:177(create)
     3970    0.001    0.000    0.001    0.000 {method 'values' of 'mappingproxy' objects}
        1    0.000    0.000    0.001    0.001 _elffile.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _translation_metadata.py:1(<module>)
        3    0.000    0.000    0.001    0.000 arrayprint.py:561(array2string)
        1    0.000    0.000    0.001    0.001 _rectangle.py:1(<module>)
     6709    0.001    0.000    0.001    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.001    0.001 _node.py:1(<module>)
        1    0.000    0.000    0.001    0.001 registration.py:1(<module>)
      237    0.000    0.000    0.001    0.000 libmpf.py:330(from_int)
        1    0.000    0.000    0.001    0.001 _special_matrices.py:1(<module>)
      185    0.000    0.000    0.001    0.000 inspect.py:1449(formatannotation)
        1    0.000    0.000    0.001    0.001 _logical_location.py:1(<module>)
       72    0.000    0.000    0.001    0.000 pydoc.py:104(_finddoc)
     5303    0.001    0.000    0.001    0.000 inspect.py:3024(parameters)
        1    0.000    0.000    0.001    0.001 __init__.py:1151(<listcomp>)
        1    0.001    0.001    0.001    0.001 relativedelta.py:18(relativedelta)
      664    0.000    0.000    0.001    0.000 _pytree.py:89(_is_namedtuple_instance)
        1    0.000    0.000    0.001    0.001 _version_control_details.py:1(<module>)
       82    0.000    0.000    0.001    0.000 __init__.py:1873(make_alias)
     4835    0.001    0.000    0.001    0.000 _ops.py:398(name)
        1    0.000    0.000    0.001    0.001 polar.py:1(<module>)
      245    0.000    0.000    0.001    0.000 _docscrape.py:591(get_func)
     4878    0.001    0.000    0.001    0.000 basic.py:906(args)
       19    0.000    0.000    0.001    0.000 functools.py:852(register)
      540    0.000    0.000    0.001    0.000 _tensor_docs.py:8(add_docstr_all)
      130    0.000    0.000    0.001    0.000 dataclasses.py:574(<listcomp>)
        1    0.000    0.000    0.001    0.001 _stack_frame.py:1(<module>)
       63    0.000    0.000    0.001    0.000 colors.py:848(<dictcomp>)
        4    0.000    0.000    0.001    0.000 __init__.py:2295(_make_reduction_prim)
      639    0.000    0.000    0.001    0.000 ctx_mp_python.py:1014(_wrap_specfun)
        1    0.000    0.000    0.001    0.001 six.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ordinals.py:1(<module>)
       45    0.000    0.000    0.001    0.000 basic.py:1507(_has)
        1    0.000    0.000    0.001    0.001 _page_trend_test.py:1(<module>)
      129    0.000    0.000    0.001    0.000 ctx_mp_python.py:979(_wrap_libmp_function)
        1    0.000    0.000    0.001    0.001 operator_support.py:1(<module>)
      790    0.000    0.000    0.001    0.000 containers.py:66(__len__)
        1    0.000    0.000    0.001    0.001 _short_time_fft.py:229(ShortTimeFFT)
       12    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:943(filtered)
       58    0.000    0.000    0.001    0.000 <frozen abc>:110(register)
       87    0.000    0.000    0.001    0.000 utils.py:83(groupby)
       10    0.000    0.000    0.001    0.000 dataclasses.py:846(_hash_add)
        1    0.000    0.000    0.001    0.001 __init__.py:421(PercentStyle)
        1    0.001    0.001    0.001    0.001 platform.py:781(uname_result)
      420    0.000    0.000    0.001    0.000 _ops.py:505(overloads)
        1    0.000    0.000    0.001    0.001 internal.py:1(<module>)
       18    0.000    0.000    0.001    0.000 arrayprint.py:1595(_array_str_implementation)
        1    0.000    0.000    0.001    0.001 _message.py:1(<module>)
      146    0.000    0.000    0.001    0.000 deprecation.py:24(_generate_deprecation_warning)
        1    0.000    0.000    0.001    0.001 diagonal.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:345(<listcomp>)
     1164    0.001    0.000    0.001    0.000 {built-in method torch._C._add_docstr}
      544    0.000    0.000    0.000    0.000 registration.py:135(__init__)
        7    0.000    0.000    0.000    0.000 periodic_table.py:1223(from_str)
        1    0.000    0.000    0.000    0.000 widgets.py:1(<module>)
     5522    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
     1318    0.000    0.000    0.000    0.000 enum.py:69(_is_internal_class)
        1    0.000    0.000    0.000    0.000 ase.py:1(<module>)
      217    0.000    0.000    0.000    0.000 enum.py:913(_check_for_existing_members_)
      271    0.000    0.000    0.000    0.000 _parser.py:307(_class_escape)
       58    0.000    0.000    0.000    0.000 {built-in method _abc._abc_register}
        3    0.000    0.000    0.000    0.000 arrayprint.py:523(_array2string)
     1406    0.000    0.000    0.000    0.000 _parser.py:79(groups)
        1    0.000    0.000    0.000    0.000 modules.py:606(SubModule)
      330    0.000    0.000    0.000    0.000 basic.py:468(inner_key)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:291(_get_axis_params)
     2213    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
      163    0.000    0.000    0.000    0.000 iterables.py:585(sift)
   190/92    0.000    0.000    0.000    0.000 core.py:1956(__str__)
        1    0.000    0.000    0.000    0.000 polygon.py:1(<module>)
        2    0.000    0.000    0.000    0.000 qconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pyplot.py:1872(get_plot_commands)
        1    0.000    0.000    0.000    0.000 node.py:105(Node)
       14    0.000    0.000    0.000    0.000 __init__.py:2089(_warn_external)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1(<module>)
      163    0.000    0.000    0.000    0.000 fromnumeric.py:53(_wrapfunc)
      248    0.000    0.000    0.000    0.000 _docscrape.py:531(_str_index)
      423    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
      146    0.000    0.000    0.000    0.000 enum.py:959(_find_data_type_)
      540    0.000    0.000    0.000    0.000 dataclasses.py:821(_set_qualname)
     3709    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:71(_relax_case)
        1    0.000    0.000    0.000    0.000 binary.py:174(<dictcomp>)
       10    0.000    0.000    0.000    0.000 dataclasses.py:639(_hash_fn)
        1    0.000    0.000    0.000    0.000 _linprog_rs.py:1(<module>)
       16    0.000    0.000    0.000    0.000 arraypad.py:533(pad)
       87    0.000    0.000    0.000    0.000 conflict.py:67(<dictcomp>)
        1    0.000    0.000    0.000    0.000 libintmath.py:127(<listcomp>)
        1    0.000    0.000    0.000    0.000 join.py:1(<module>)
        1    0.000    0.000    0.000    0.000 return_types.py:1(<module>)
      330    0.000    0.000    0.000    0.000 para4band.py:131(mask)
       40    0.000    0.000    0.000    0.000 mul.py:483(_gather)
        1    0.000    0.000    0.000    0.000 _physical_location.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:1(<module>)
     10/4    0.000    0.000    0.000    0.000 core.py:4409(streamline)
      325    0.000    0.000    0.000    0.000 function_base.py:483(_add_docstring)
        1    0.000    0.000    0.000    0.000 _location_relationship.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:1(<module>)
     1191    0.000    0.000    0.000    0.000 libintmath.py:91(python_bitcount)
       15    0.000    0.000    0.000    0.000 typing.py:2916(<dictcomp>)
      748    0.000    0.000    0.000    0.000 dataclasses.py:267(__init__)
      129    0.000    0.000    0.000    0.000 fromnumeric.py:1025(argsort)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:1(<module>)
        1    0.000    0.000    0.000    0.000 timeouts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:1(<module>)
       28    0.000    0.000    0.000    0.000 _decorator.py:23(__call__)
        1    0.000    0.000    0.000    0.000 _validation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cm_listed.py:1(<module>)
     2971    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
     2336    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1565(<genexpr>)
       87    0.000    0.000    0.000    0.000 utils.py:61(reverse_dict)
       24    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:386(draw)
        1    0.000    0.000    0.000    0.000 _trace.py:1(<module>)
      115    0.000    0.000    0.000    0.000 containers.py:100(__eq__)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:1(<module>)
      117    0.000    0.000    0.000    0.000 typing.py:1020(__typing_subst__)
     1293    0.000    0.000    0.000    0.000 inspect.py:1182(tokeneater)
        5    0.000    0.000    0.000    0.000 ctx_iv.py:244(_binary_op)
        1    0.000    0.000    0.000    0.000 _edge.py:1(<module>)
        1    0.000    0.000    0.000    0.000 encoder.py:1(<module>)
       18    0.000    0.000    0.000    0.000 arrayprint.py:1588(_guarded_repr_or_str)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3211(_moment_central_dispatch)
      174    0.000    0.000    0.000    0.000 <frozen posixpath>:71(join)
        1    0.000    0.000    0.000    0.000 projections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_agg.py:389(FigureCanvasAgg)
       25    0.000    0.000    0.000    0.000 decorator.py:317(deprecated_decorator)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:621(get_path)
        6    0.000    0.000    0.000    0.000 deprecation.py:56(warn_deprecated)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:313(select_from)
     1272    0.000    0.000    0.000    0.000 typing.py:882(__eq__)
        2    0.000    0.000    0.000    0.000 sysconfig.py:609(get_paths)
        1    0.000    0.000    0.000    0.000 gammasimp.py:1(<module>)
      436    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       10    0.000    0.000    0.000    0.000 contextlib.py:78(inner)
        6    0.000    0.000    0.000    0.000 _version.py:55(__init__)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:1(<module>)
     1036    0.000    0.000    0.000    0.000 _parser.py:166(__setitem__)
        1    0.000    0.000    0.000    0.000 version.py:112(StrictVersion)
        1    0.000    0.000    0.000    0.000 _scalars.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1779(_validate)
        2    0.000    0.000    0.000    0.000 sysconfig.py:261(_expand_vars)
        1    0.000    0.000    0.000    0.000 due.py:1(<module>)
        1    0.000    0.000    0.000    0.000 interpreter.py:16(Interpreter)
      459    0.000    0.000    0.000    0.000 iterables.py:1943(<genexpr>)
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:34(envwrap)
      148    0.000    0.000    0.000    0.000 enum.py:753(__getattr__)
      471    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        6    0.000    0.000    0.000    0.000 printer.py:424(decorator)
        1    0.000    0.000    0.000    0.000 ImageFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1(<module>)
  460/100    0.000    0.000    0.000    0.000 sorting.py:168(_node_count)
        5    0.000    0.000    0.000    0.000 perm_groups.py:144(<listcomp>)
      135    0.000    0.000    0.000    0.000 pyplot.py:1884(<genexpr>)
        1    0.000    0.000    0.000    0.000 utils.py:73(<dictcomp>)
        1    0.000    0.000    0.000    0.000 request.py:939(AbstractBasicAuthHandler)
        2    0.000    0.000    0.000    0.000 _functions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _fix.py:1(<module>)
        6    0.000    0.000    0.000    0.000 printer.py:392(__init__)
       86    0.000    0.000    0.000    0.000 _parser.py:265(getuntil)
        1    0.000    0.000    0.000    0.000 collate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ops.py:89(get_ops_with_reflection)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:833(validation)
      110    0.000    0.000    0.000    0.000 _compiler.py:386(<listcomp>)
       49    0.000    0.000    0.000    0.000 core.py:131(get_object_signature)
        1    0.000    0.000    0.000    0.000 options.py:1(<module>)
      398    0.000    0.000    0.000    0.000 _util.py:531(<listcomp>)
        1    0.000    0.000    0.000    0.000 dataloader.py:129(DataLoader)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3276(_moment_standardized)
       57    0.000    0.000    0.000    0.000 <frozen posixpath>:228(expanduser)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:358(decorator)
       25    0.000    0.000    0.000    0.000 typing.py:2013(__init_subclass__)
       54    0.000    0.000    0.000    0.000 decorators.py:46(deco)
     1694    0.000    0.000    0.000    0.000 unicode.py:63(<genexpr>)
        2    0.000    0.000    0.000    0.000 __init__.py:2078(_make_copy_from_view)
     4061    0.000    0.000    0.000    0.000 inspect.py:2733(default)
        1    0.000    0.000    0.000    0.000 backend.py:1(<module>)
      266    0.000    0.000    0.000    0.000 inspect.py:973(getmodule)
        1    0.000    0.000    0.000    0.000 hashlib.py:1(<module>)
     2603    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        1    0.000    0.000    0.000    0.000 _property_bag.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:18(__init__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3282(_moment_standardized_dispatch)
        1    0.000    0.000    0.000    0.000 entities.py:1(<module>)
       68    0.000    0.000    0.000    0.000 _internal.py:14(get_xp)
        1    0.000    0.000    0.000    0.000 artist.py:1236(ArtistInspector)
        1    0.000    0.000    0.000    0.000 backend_registry.py:1(<module>)
      109    0.000    0.000    0.000    0.000 inspect.py:2068(_signature_is_builtin)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:1(<module>)
     2169    0.000    0.000    0.000    0.000 typing.py:1662(<genexpr>)
      188    0.000    0.000    0.000    0.000 colors.py:850(<listcomp>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:295(<dictcomp>)
      140    0.000    0.000    0.000    0.000 basic.py:497(__eq__)
     3221    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
  157/148    0.000    0.000    0.000    0.000 fake_tensor.py:92(contains_tensor_types)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:647(_is_classvar)
       91    0.000    0.000    0.000    0.000 core.py:2408(__init__)
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4172(get_distribution_names)
       52    0.000    0.000    0.000    0.000 core.py:894(__init__)
        1    0.000    0.000    0.000    0.000 reductions.py:148(<dictcomp>)
       26    0.000    0.000    0.000    0.000 core.py:6855(__init__)
       87    0.000    0.000    0.000    0.000 _docscrape.py:658(splitlines_x)
        6    0.000    0.000    0.000    0.000 rcsetup.py:340(validate_color_or_inherit)
      776    0.000    0.000    0.000    0.000 enum.py:188(__get__)
        1    0.000    0.000    0.000    0.000 io.py:1(<module>)
        1    0.000    0.000    0.000    0.000 piecewise.py:1(<module>)
        9    0.000    0.000    0.000    0.000 _multivariate.py:5755(_docfill)
        1    0.000    0.000    0.000    0.000 mlab.py:1(<module>)
      231    0.000    0.000    0.000    0.000 _compiler.py:465(_get_charset_prefix)
      778    0.000    0.000    0.000    0.000 _ops.py:419(__init__)
        1    0.000    0.000    0.000    0.000 hadamard.py:1(<module>)
       13    0.000    0.000    0.000    0.000 deprecation.py:277(_rename_parameter)
        1    0.000    0.000    0.000    0.000 matadd.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _deprecation.py:20(decorator)
     1329    0.000    0.000    0.000    0.000 _tensor_str.py:173(width)
        1    0.000    0.000    0.000    0.000 main.py:57(__init__)
       54    0.000    0.000    0.000    0.000 decorators.py:52(__sympifyit)
        1    0.000    0.000    0.000    0.000 permutation.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3308(_moment_standardized_normalize)
        1    0.000    0.000    0.000    0.000 shape_prop.py:1(<module>)
       26    0.000    0.000    0.000    0.000 core.py:6860(getdoc)
     1760    0.000    0.000    0.000    0.000 dataclasses.py:427(<genexpr>)
        1    0.000    0.000    0.000    0.000 dlpack.py:1(<module>)
      398    0.000    0.000    0.000    0.000 _util.py:536(<listcomp>)
      154    0.000    0.000    0.000    0.000 <frozen _collections_abc>:428(__new__)
       14    0.000    0.000    0.000    0.000 hashlib.py:126(__get_openssl_constructor)
      398    0.000    0.000    0.000    0.000 _util.py:553(<dictcomp>)
       50    0.000    0.000    0.000    0.000 numbers.py:1622(__eq__)
       10    0.000    0.000    0.000    0.000 symbol.py:654(symbols)
        1    0.000    0.000    0.000    0.000 _spdx.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:10(parse_kwargs)
        2    0.000    0.000    0.000    0.000 determinant.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _sources.py:102(make_source_context)
       82    0.000    0.000    0.000    0.000 linecache.py:52(checkcache)
       62    0.000    0.000    0.000    0.000 decorator.py:233(memoize_property)
        1    0.000    0.000    0.000    0.000 symbolic_opset8.py:1(<module>)
        4    0.000    0.000    0.000    0.000 assumptions.py:509(_ask)
       50    0.000    0.000    0.000    0.000 containers.py:177(<lambda>)
        1    0.000    0.000    0.000    0.000 colorbar.py:321(ColorbarBase)
        1    0.000    0.000    0.000    0.000 datapipes.py:1(<module>)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:724(validate)
        1    0.000    0.000    0.000    0.000 selectors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1506(UnivariateDistribution)
      398    0.000    0.000    0.000    0.000 _util.py:546(<listcomp>)
     1371    0.000    0.000    0.000    0.000 {method 'capitalize' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _sources.py:1(<module>)
        5    0.000    0.000    0.000    0.000 decorator.py:144(make)
        3    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(_held_figure)
        3    0.000    0.000    0.000    0.000 typing.py:2852(NamedTuple)
      191    0.000    0.000    0.000    0.000 typing.py:1608(<genexpr>)
      398    0.000    0.000    0.000    0.000 _util.py:550(<dictcomp>)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1122(get_filename)
       19    0.000    0.000    0.000    0.000 path.py:98(__init__)
        1    0.000    0.000    0.000    0.000 pickle.py:197(<listcomp>)
        3    0.000    0.000    0.000    0.000 decorator.py:200(decorate)
        6    0.000    0.000    0.000    0.000 typing.py:1360(__ror__)
      833    0.000    0.000    0.000    0.000 {method 'update' of 'set' objects}
        1    0.000    0.000    0.000    0.000 main.py:761(official_plug_ins)
      456    0.000    0.000    0.000    0.000 feedparser.py:128(__next__)
     3317    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 polyerrors.py:1(<module>)
     2361    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:413(has_location)
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1293(_get_parent_path)
      482    0.000    0.000    0.000    0.000 dataclasses.py:306(__set_name__)
        1    0.000    0.000    0.000    0.000 _special_locations.py:1(<module>)
      171    0.000    0.000    0.000    0.000 typing.py:1287(__instancecheck__)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:204(Tracer)
       35    0.000    0.000    0.000    0.000 transforms.py:1251(__init_subclass__)
        1    0.000    0.000    0.000    0.000 {built-in method torch.max}
        1    0.000    0.000    0.000    0.000 ask.py:21(AssumptionKeys)
       40    0.000    0.000    0.000    0.000 core.py:2462(__init__)
        1    0.000    0.000    0.000    0.000 constraints.py:1(<module>)
       22    0.000    0.000    0.000    0.000 core.py:4215(_generateDefaultName)
        4    0.000    0.000    0.000    0.000 core.py:1518(__mul__)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:664(register_var_mean)
        1    0.000    0.000    0.000    0.000 _base.py:422(_AxesBase)
        1    0.000    0.000    0.000    0.000 containers.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:452(_get_format_function)
      240    0.000    0.000    0.000    0.000 functools.py:479(lru_cache)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:1125(_qualified_name)
       21    0.000    0.000    0.000    0.000 symbol.py:325(__new__)
       52    0.000    0.000    0.000    0.000 package_importer.py:687(_patched_getfile)
        1    0.000    0.000    0.000    0.000 glob.py:13(glob)
        1    0.000    0.000    0.000    0.000 sharding.py:1(<module>)
        3    0.000    0.000    0.000    0.000 decorators.py:123(sympify_method_args)
        1    0.000    0.000    0.000    0.000 __init__.py:258(WordSet)
      216    0.000    0.000    0.000    0.000 _policybase.py:293(header_source_parse)
      129    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
      100    0.000    0.000    0.000    0.000 iterables.py:1970(uniq)
       24    0.000    0.000    0.000    0.000 core.py:5818(__init__)
        1    0.000    0.000    0.000    0.000 band_data_in.py:60(generate_k_path)
        1    0.000    0.000    0.000    0.000 threading.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 argparse.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _script.py:892(_get_methods)
      115    0.000    0.000    0.000    0.000 inspect.py:776(_findclass)
        1    0.000    0.000    0.000    0.000 importtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 heapq.py:1(<module>)
       62    0.000    0.000    0.000    0.000 __init__.py:873(normalize)
        1    0.000    0.000    0.000    0.000 conventions.py:1(<module>)
      735    0.000    0.000    0.000    0.000 dataclasses.py:511(_init_param)
       34    0.000    0.000    0.000    0.000 core.py:3064(__init__)
      536    0.000    0.000    0.000    0.000 function_base.py:348(iterable)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:1(<module>)
        1    0.000    0.000    0.000    0.000 types.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glob.py:1(<module>)
       30    0.000    0.000    0.000    0.000 _array_api.py:503(xp_result_type)
       54    0.000    0.000    0.000    0.000 __init__.py:1378(_fixupParents)
      590    0.000    0.000    0.000    0.000 _compiler.py:568(isstring)
      3/1    0.000    0.000    0.000    0.000 glob.py:60(_iglob)
        1    0.000    0.000    0.000    0.000 symbolic_opset12.py:1(<module>)
      295    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        1    0.000    0.000    0.000    0.000 _meta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler_util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nanfunctions.py:1(<module>)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
        1    0.000    0.000    0.000    0.000 axis.py:628(Axis)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:352(contains)
      436    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
        7    0.000    0.000    0.000    0.000 power.py:136(__new__)
        1    0.000    0.000    0.000    0.000 pkgutil.py:1(<module>)
        2    0.000    0.000    0.000    0.000 doccer.py:263(filldoc)
        1    0.000    0.000    0.000    0.000 _tensor.py:81(Tensor)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3017(sample)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:655(_is_initvar)
        1    0.000    0.000    0.000    0.000 markers.py:145(MarkerStyle)
        1    0.000    0.000    0.000    0.000 geo.py:1(<module>)
       73    0.000    0.000    0.000    0.000 {built-in method torch.ones}
       43    0.000    0.000    0.000    0.000 decompositions.py:43(type_casts)
        1    0.000    0.000    0.000    0.000 gmpy.py:110(_get_flint)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:1(<module>)
        1    0.000    0.000    0.000    0.000 split_module.py:1(<module>)
        2    0.000    0.000    0.000    0.000 doccer.py:292(unindent_dict)
        1    0.000    0.000    0.000    0.000 partitions.py:1(<module>)
      295    0.000    0.000    0.000    0.000 _distn_infrastructure.py:839(<genexpr>)
      757    0.000    0.000    0.000    0.000 __init__.py:907(<lambda>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:72(ElementBase)
       26    0.000    0.000    0.000    0.000 _sources.py:37(normalize_source_lines)
        2    0.000    0.000    0.000    0.000 hashlib.py:82(__get_builtin_constructor)
        3    0.000    0.000    0.000    0.000 arrayprint.py:411(<lambda>)
     1330    0.000    0.000    0.000    0.000 {built-in method sys.intern}
        1    0.000    0.000    0.000    0.000 _color_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _foreach_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1(<module>)
       73    0.000    0.000    0.000    0.000 rcsetup.py:90(<listcomp>)
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _contextlib.py:123(__call__)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:85(NamedMemberAccessor)
        1    0.000    0.000    0.000    0.000 _mgc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 binrel.py:1(<module>)
       18    0.000    0.000    0.000    0.000 message.py:489(get)
       26    0.000    0.000    0.000    0.000 _sources.py:87(__init__)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1536(from_str)
       71    0.000    0.000    0.000    0.000 typing.py:335(_flatten_literal_params)
        1    0.000    0.000    0.000    0.000 para4band.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:907(__init__)
        7    0.000    0.000    0.000    0.000 pathlib.py:909(home)
        1    0.000    0.000    0.000    0.000 add.py:1(<module>)
  420/397    0.000    0.000    0.000    0.000 basic.py:315(__hash__)
      958    0.000    0.000    0.000    0.000 utils.py:56(<genexpr>)
       77    0.000    0.000    0.000    0.000 <frozen posixpath>:150(dirname)
       41    0.000    0.000    0.000    0.000 decorators.py:110(priority_decorator)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:1(<module>)
      187    0.000    0.000    0.000    0.000 typing.py:908(_is_unpacked_typevartuple)
       17    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
        1    0.000    0.000    0.000    0.000 callable.py:171(CollatorIterDataPipe)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:49(__init__)
       24    0.000    0.000    0.000    0.000 doccer.py:311(unindent_string)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:633(__new__)
      190    0.000    0.000    0.000    0.000 pyplot.py:82(_copy_docstring_and_deprecators)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:931(create_module)
        1    0.000    0.000    0.000    0.000 proxy.py:83(TracerBase)
      453    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}
        1    0.000    0.000    0.000    0.000 compatibility.py:1(<module>)
        1    0.000    0.000    0.000    0.000 collections.py:22(Collection)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:100(<lambda>)
        3    0.000    0.000    0.000    0.000 streams.py:1(<module>)
        4    0.000    0.000    0.000    0.000 assumptions.py:481(copy)
        1    0.000    0.000    0.000    0.000 matrixbase.py:99(MatrixBase)
        5    0.000    0.000    0.000    0.000 perm_groups.py:146(<listcomp>)
        3    0.000    0.000    0.000    0.000 functions.py:1(<module>)
      367    0.000    0.000    0.000    0.000 permutations.py:1385(<listcomp>)
        1    0.000    0.000    0.000    0.000 passthrough.py:1(<module>)
        2    0.000    0.000    0.000    0.000 quant_type.py:1(<module>)
      790    0.000    0.000    0.000    0.000 containers.py:63(<genexpr>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2391(skewness)
     12/2    0.000    0.000    0.000    0.000 core.py:1578(makeOptionalList)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _conversions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pickletools.py:2224(assure_pickle_consistency)
        1    0.000    0.000    0.000    0.000 functional_call.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:198(split)
        1    0.000    0.000    0.000    0.000 adjoint.py:1(<module>)
      605    0.000    0.000    0.000    0.000 _inspect.py:13(ismethod)
       87    0.000    0.000    0.000    0.000 docstring.py:38(__call__)
        1    0.000    0.000    0.000    0.000 unicode.py:1(<module>)
       79    0.000    0.000    0.000    0.000 core.py:4216(<genexpr>)
       71    0.000    0.000    0.000    0.000 inspect.py:2745(replace)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1057(__hash__)
      171    0.000    0.000    0.000    0.000 typing.py:1546(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:934(fillFormat)
        2    0.000    0.000    0.000    0.000 sysconfig.py:253(_extend_dict)
        1    0.000    0.000    0.000    0.000 nccl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dviread.py:185(Dvi)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:257(LOBPCGAutogradFunction)
        1    0.000    0.000    0.000    0.000 zipfile.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3247(_moment_central_transform)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:771(register_view)
        1    0.000    0.000    0.000    0.000 sysconfig.py:1(<module>)
       17    0.000    0.000    0.000    0.000 getlimits.py:484(__new__)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:108(<dictcomp>)
        2    0.000    0.000    0.000    0.000 traceback.py:29(format_list)
      686    0.000    0.000    0.000    0.000 inspect.py:2457(<lambda>)
        2    0.000    0.000    0.000    0.000 normalization.py:1(<module>)
      172    0.000    0.000    0.000    0.000 decorator.py:184(public)
        1    0.000    0.000    0.000    0.000 padding.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _musllinux.py:1(<module>)
        2    0.000    0.000    0.000    0.000 units.py:1(<module>)
        1    0.000    0.000    0.000    0.000 str.py:1(<module>)
        1    0.000    0.000    0.000    0.000 contextvars.py:1(<module>)
       27    0.000    0.000    0.000    0.000 singleton.py:190(__init__)
      606    0.000    0.000    0.000    0.000 <frozen posixpath>:41(_get_sep)
        2    0.000    0.000    0.000    0.000 decorator.py:215(decorator)
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:292(_apply)
       73    0.000    0.000    0.000    0.000 _internal.py:872(_ufunc_doc_signature_formatter)
        8    0.000    0.000    0.000    0.000 typing.py:2248(get_type_hints)
        1    0.000    0.000    0.000    0.000 runners.py:1(<module>)
      156    0.000    0.000    0.000    0.000 inspect.py:330(isdatadescriptor)
        1    0.000    0.000    0.000    0.000 bisect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:385(register_full)
       52    0.000    0.000    0.000    0.000 inspect.py:896(getfile)
     1239    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
    429/1    0.000    0.000    0.000    0.000 __config__.py:14(_cleanup)
        2    0.000    0.000    0.000    0.000 conv_fused.py:1(<module>)
       42    0.000    0.000    0.000    0.000 core.py:277(wrapper)
      295    0.000    0.000    0.000    0.000 _parser.py:954(fix_flags)
        1    0.000    0.000    0.000    0.000 kronecker.py:1(<module>)
       32    0.000    0.000    0.000    0.000 rcsetup.py:925(<genexpr>)
     49/1    0.000    0.000    0.000    0.000 __config__.py:20(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:1(<module>)
        2    0.000    0.000    0.000    0.000 operations.py:623(register_handlerclass)
        1    0.000    0.000    0.000    0.000 transformer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:310(Pair)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1276(__init__)
        1    0.000    0.000    0.000    0.000 _decorator.py:1(<module>)
       24    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:71(add_newdoc_for_scalar_type)
      325    0.000    0.000    0.000    0.000 function_base.py:465(_needs_add_docstring)
       55    0.000    0.000    0.000    0.000 __init__.py:1447(__init__)
      259    0.000    0.000    0.000    0.000 dataclasses.py:389(<listcomp>)
      268    0.000    0.000    0.000    0.000 libmpf.py:322(<genexpr>)
        2    0.000    0.000    0.000    0.000 traceback.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quaternion.py:1(<module>)
        4    0.000    0.000    0.000    0.000 sparse.py:1(<module>)
     2914    0.000    0.000    0.000    0.000 basic.py:208(__sympy__)
       23    0.000    0.000    0.000    0.000 overrides.py:177(decorator)
       26    0.000    0.000    0.000    0.000 {slot wrapper '__init__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 glob.py:105(_glob1)
        3    0.000    0.000    0.000    0.000 pyplot.py:794(close)
        1    0.000    0.000    0.000    0.000 case.py:1(<module>)
       12    0.000    0.000    0.000    0.000 message.py:591(get_content_type)
       95    0.000    0.000    0.000    0.000 permutations.py:2051(is_identity)
        1    0.000    0.000    0.000    0.000 polytools.py:106(Poly)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:917(<dictcomp>)
        4    0.000    0.000    0.000    0.000 constants.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _interface.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sysconfig.py:443(get_makefile_filename)
       10    0.000    0.000    0.000    0.000 {function SeedSequence.generate_state at 0x14f11994aa20}
      232    0.000    0.000    0.000    0.000 function.py:147(<listcomp>)
        1    0.000    0.000    0.000    0.000 axis.py:34(Tick)
        1    0.000    0.000    0.000    0.000 graph_module.py:283(GraphModule)
       27    0.000    0.000    0.000    0.000 pathlib.py:353(_select_from)
      135    0.000    0.000    0.000    0.000 core.py:2016(__eq__)
      130    0.000    0.000    0.000    0.000 dataclasses.py:550(<dictcomp>)
        1    0.000    0.000    0.000    0.000 artist.py:60(Artist)
        1    0.000    0.000    0.000    0.000 TiffTags.py:439(_populate)
        1    0.000    0.000    0.000    0.000 pydoc.py:465(Doc)
        1    0.000    0.000    0.000    0.000 isoparser.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _mangling.py:44(is_mangled)
      251    0.000    0.000    0.000    0.000 _docscrape.py:393(<setcomp>)
        1    0.000    0.000    0.000    0.000 _binned_statistic.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _pylab_helpers.py:79(destroy_all)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1504(<dictcomp>)
      243    0.000    0.000    0.000    0.000 iterables.py:3083(is_sequence)
        1    0.000    0.000    0.000    0.000 streamreader.py:1(<module>)
      267    0.000    0.000    0.000    0.000 function.py:152(<lambda>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:465(_str_summary)
        1    0.000    0.000    0.000    0.000 fileopener.py:1(<module>)
        2    0.000    0.000    0.000    0.000 traceback.py:513(format)
       16    0.000    0.000    0.000    0.000 __init__.py:482(cycler)
        7    0.000    0.000    0.000    0.000 ops.py:136(<listcomp>)
        1    0.000    0.000    0.000    0.000 plane.py:1(<module>)
      453    0.000    0.000    0.000    0.000 wrappers.py:210(<genexpr>)
       10    0.000    0.000    0.000    0.000 _contextlib.py:69(context_decorator)
        1    0.000    0.000    0.000    0.000 parametrize.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _crosstab.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _itertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:30(ErrorMeta)
      737    0.000    0.000    0.000    0.000 dataclasses.py:439(_field_assign)
        2    0.000    0.000    0.000    0.000 kind.py:287(_)
        1    0.000    0.000    0.000    0.000 container.py:42(Sequential)
       12    0.000    0.000    0.000    0.000 core.py:6035(__init__)
        1    0.000    0.000    0.000    0.000 para4band.py:122(Para4Band_train)
        2    0.000    0.000    0.000    0.000 _shape.py:1(<module>)
     1623    0.000    0.000    0.000    0.000 permutations.py:456(<genexpr>)
      970    0.000    0.000    0.000    0.000 _array_api.py:665(_render)
        1    0.000    0.000    0.000    0.000 polyoptions.py:300(Wrt)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:391(__init__)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:1(<module>)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:25(__init__)
      449    0.000    0.000    0.000    0.000 __init__.py:57(register_decomposition)
       16    0.000    0.000    0.000    0.000 structure.py:3569(nelectrons)
        1    0.000    0.000    0.000    0.000 _meta.py:7(PackageMetadata)
      231    0.000    0.000    0.000    0.000 inspect.py:1950(_signature_get_user_defined_method)
       43    0.000    0.000    0.000    0.000 pathlib.py:546(__fspath__)
       24    0.000    0.000    0.000    0.000 dviread.py:167(decorate)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1485(__str__)
        1    0.000    0.000    0.000    0.000 path.py:23(Path)
        1    0.000    0.000    0.000    0.000 rrule.py:1(<module>)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:1(<module>)
      519    0.000    0.000    0.000    0.000 inspect.py:300(ismethod)
        1    0.000    0.000    0.000    0.000 ExifTags.py:305(GPS)
        1    0.000    0.000    0.000    0.000 tensor_can.py:1(<module>)
       30    0.000    0.000    0.000    0.000 _inspect.py:140(formatargspec)
       26    0.000    0.000    0.000    0.000 core.py:921(__init__)
        1    0.000    0.000    0.000    0.000 transpose.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2694(__init__)
      456    0.000    0.000    0.000    0.000 feedparser.py:78(readline)
        1    0.000    0.000    0.000    0.000 expr.py:46(Expr)
        1    0.000    0.000    0.000    0.000 flatten.py:1(<module>)
     1048    0.000    0.000    0.000    0.000 _ops.py:313(py_impl)
     1019    0.000    0.000    0.000    0.000 permutations.py:1065(array_form)
        5    0.000    0.000    0.000    0.000 symbol.py:339(_canonical_assumptions)
       23    0.000    0.000    0.000    0.000 core.py:5355(__init__)
        1    0.000    0.000    0.000    0.000 _encoded_words.py:1(<module>)
        1    0.000    0.000    0.000    0.000 options.py:43(TensorPipeRpcBackendOptions)
        1    0.000    0.000    0.000    0.000 scale.py:670(_get_scale_docs)
        1    0.000    0.000    0.000    0.000 __init__.py:746(copy)
        2    0.000    0.000    0.000    0.000 _multivariate.py:2009(__init__)
       37    0.000    0.000    0.000    0.000 decorators.py:214(make_wrapped)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2394(kurtosis)
       13    0.000    0.000    0.000    0.000 enum.py:1473(__or__)
        3    0.000    0.000    0.000    0.000 {built-in method gc.collect}
        1    0.000    0.000    0.000    0.000 ndim_array.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:747(<dictcomp>)
        1    0.000    0.000    0.000    0.000 instancenorm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tasks.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _version.py:114(_compare)
        1    0.000    0.000    0.000    0.000 animation.py:408(FileMovieWriter)
      108    0.000    0.000    0.000    0.000 typing.py:2532(overload)
       19    0.000    0.000    0.000    0.000 _continuous_distns.py:59(_call_super_mom)
        1    0.000    0.000    0.000    0.000 isoparser.py:42(isoparser)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:296(__init__)
       24    0.000    0.000    0.000    0.000 dtypes.py:66(_add_dtype_helper)
      548    0.000    0.000    0.000    0.000 <frozen os>:759(decode)
      472    0.000    0.000    0.000    0.000 facts.py:579(__init__)
        1    0.000    0.000    0.000    0.000 timeouts.py:26(Timeout)
     1023    0.000    0.000    0.000    0.000 _docscrape.py:46(reset)
       56    0.000    0.000    0.000    0.000 pathlib.py:536(__str__)
    347/1    0.000    0.000    0.000    0.000 __config__.py:19(_cleanup)
        2    0.000    0.000    0.000    0.000 _version.py:151(__ge__)
        1    0.000    0.000    0.000    0.000 net_min_base.py:89(_MinimizerBase)
       95    0.000    0.000    0.000    0.000 permutations.py:2055(is_Identity)
        1    0.000    0.000    0.000    0.000 filelister.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graycode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _decomp_cossin.py:1(<module>)
        1    0.000    0.000    0.000    0.000 process.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:29(_initialize)
        1    0.000    0.000    0.000    0.000 meijerint.py:1(<module>)
        2    0.000    0.000    0.000    0.000 fused.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _type_utils.py:58(JitScalarType)
      420    0.000    0.000    0.000    0.000 _ops.py:506(<listcomp>)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1536(find_distributions)
     39/1    0.000    0.000    0.000    0.000 __config__.py:25(<dictcomp>)
        1    0.000    0.000    0.000    0.000 selecting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _interpolate.py:282(__init__)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:661(_is_kw_only)
     1260    0.000    0.000    0.000    0.000 colors.py:276(<genexpr>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3336(_moment_transform_center)
        1    0.000    0.000    0.000    0.000 param_fetch.py:1(<module>)
       27    0.000    0.000    0.000    0.000 artist.py:20(allow_rasterization)
       82    0.000    0.000    0.000    0.000 return_types.py:9(pytree_register_structseq)
      605    0.000    0.000    0.000    0.000 _inspect.py:26(isfunction)
        1    0.000    0.000    0.000    0.000 quiver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gmpy.py:135(_get_gmpy2)
        2    0.000    0.000    0.000    0.000 fuser_method_mappings.py:1(<module>)
     1326    0.000    0.000    0.000    0.000 _builtins.py:124(_is_special_functional_bound_op)
       27    0.000    0.000    0.000    0.000 <frozen genericpath>:27(isfile)
      222    0.000    0.000    0.000    0.000 wrappers.py:187(out_wrapper)
        1    0.000    0.000    0.000    0.000 _decorator.py:63(non_deterministic)
        1    0.000    0.000    0.000    0.000 join.py:112(Join)
        1    0.000    0.000    0.000    0.000 importer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 widgets.py:1087(SubplotTool)
       27    0.000    0.000    0.000    0.000 pretty_symbology.py:121(<genexpr>)
      309    0.000    0.000    0.000    0.000 types.py:164(__init__)
        1    0.000    0.000    0.000    0.000 order.py:1(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:546(_cycler)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:922(ShapeEnv)
      273    0.000    0.000    0.000    0.000 typing_extensions.py:3054(_check_generic)
      544    0.000    0.000    0.000    0.000 registration.py:267(onnx_symbolic)
        1    0.000    0.000    0.000    0.000 smtlib.py:25(SMTLibPrinter)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1(<module>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:470(_str_extended_summary)
        3    0.000    0.000    0.000    0.000 _adapters.py:35(__init__)
       18    0.000    0.000    0.000    0.000 __init__.py:811(mtime)
        1    0.000    0.000    0.000    0.000 para4band.py:451(<listcomp>)
       20    0.000    0.000    0.000    0.000 numbers.py:3148(__eq__)
       55    0.000    0.000    0.000    0.000 symbol.py:294(_sanitize)
      248    0.000    0.000    0.000    0.000 _docscrape.py:460(_str_signature)
        1    0.000    0.000    0.000    0.000 pathlib.py:281(_make_selector)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:605(register_rand_like)
      185    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2385(variance)
        1    0.000    0.000    0.000    0.000 graph.py:19(Node)
        1    0.000    0.000    0.000    0.000 arraysetops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 radau.py:1(<module>)
        1    0.000    0.000    0.000    0.000 companion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 calendar.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importtools.py:48(import_module)
      363    0.000    0.000    0.000    0.000 socket.py:78(<lambda>)
       72    0.000    0.000    0.000    0.000 pydoc.py:94(_findclass)
     2730    0.000    0.000    0.000    0.000 inspect.py:589(<lambda>)
        1    0.000    0.000    0.000    0.000 _covariance.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:76(wrap)
        3    0.000    0.000    0.000    0.000 _adapters.py:42(_repair_headers)
       36    0.000    0.000    0.000    0.000 inspect.py:402(isgeneratorfunction)
     1191    0.000    0.000    0.000    0.000 {built-in method _bisect.bisect_right}
        1    0.000    0.000    0.000    0.000 package_exporter.py:186(PackageExporter)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:118(<lambda>)
      544    0.000    0.000    0.000    0.000 registration.py:76(set_base)
        9    0.000    0.000    0.000    0.000 message.py:615(get_content_maintype)
        1    0.000    0.000    0.000    0.000 mathtext.py:1925(<dictcomp>)
        2    0.000    0.000    0.000    0.000 helper.py:1(<module>)
        5    0.000    0.000    0.000    0.000 core.py:1485(__radd__)
        1    0.000    0.000    0.000    0.000 _quadrature.py:1(<module>)
      213    0.000    0.000    0.000    0.000 ctx_fp.py:51(_wrap_specfun)
       32    0.000    0.000    0.000    0.000 basic.py:2117(_exec_constructor_postprocessors)
        1    0.000    0.000    0.000    0.000 upsampling.py:1(<module>)
        7    0.000    0.000    0.000    0.000 pathlib.py:1377(expanduser)
        1    0.000    0.000    0.000    0.000 matexpr.py:37(MatrixExpr)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 container.py:684(ParameterDict)
        1    0.000    0.000    0.000    0.000 pathlib.py:349(__init__)
        1    0.000    0.000    0.000    0.000 adam.py:1(<module>)
       42    0.000    0.000    0.000    0.000 traceback.py:458(format_frame_summary)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:67(_apply)
      295    0.000    0.000    0.000    0.000 _parser.py:73(__init__)
        1    0.000    0.000    0.000    0.000 _guards.py:83(Guard)
        1    0.000    0.000    0.000    0.000 mathml.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _polybase.py:1(<module>)
     2343    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       89    0.000    0.000    0.000    0.000 _parser.py:894(_parse_flags)
      586    0.000    0.000    0.000    0.000 _inspect.py:41(iscode)
        1    0.000    0.000    0.000    0.000 axis3d.py:1(<module>)
      366    0.000    0.000    0.000    0.000 socket.py:93(<lambda>)
        5    0.000    0.000    0.000    0.000 decorator.py:75(__init__)
        8    0.000    0.000    0.000    0.000 symbol.py:393(__xnew_cached_)
      628    0.000    0.000    0.000    0.000 _pytree.py:121(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:342(<listcomp>)
       68    0.000    0.000    0.000    0.000 _util.py:1165(_apply_over_batch)
      364    0.000    0.000    0.000    0.000 socket.py:83(<lambda>)
       32    0.000    0.000    0.000    0.000 arraypad.py:458(_as_pairs)
      113    0.000    0.000    0.000    0.000 typing.py:1926(_caller)
        1    0.000    0.000    0.000    0.000 _vmap_internals.py:1(<module>)
      750    0.000    0.000    0.000    0.000 rcsetup.py:234(validator)
        3    0.000    0.000    0.000    0.000 __init__.py:893(find_distributions)
       21    0.000    0.000    0.000    0.000 deprecation.py:178(finalize)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:360(_get_scalar_type_map)
        1    0.000    0.000    0.000    0.000 representer.py:1(<module>)
      265    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
      226    0.000    0.000    0.000    0.000 rcsetup.py:150(validate_bool)
       54    0.000    0.000    0.000    0.000 typing.py:1620(<genexpr>)
      365    0.000    0.000    0.000    0.000 socket.py:88(<lambda>)
      635    0.000    0.000    0.000    0.000 typing.py:729(<genexpr>)
       23    0.000    0.000    0.000    0.000 distributed_c10d.py:1432(exception_handler)
       19    0.000    0.000    0.000    0.000 deprecation.py:372(<listcomp>)
        1    0.000    0.000    0.000    0.000 pathlib.py:260(compile_pattern)
        1    0.000    0.000    0.000    0.000 conditionset.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cubic.py:1(<module>)
        2    0.000    0.000    0.000    0.000 getlimits.py:540(_init)
        1    0.000    0.000    0.000    0.000 monomials.py:1(<module>)
      304    0.000    0.000    0.000    0.000 _docscrape.py:374(<listcomp>)
        1    0.000    0.000    0.000    0.000 exprtools.py:1(<module>)
       30    0.000    0.000    0.000    0.000 utils.py:104(__init__)
       28    0.000    0.000    0.000    0.000 <frozen _collections_abc>:778(__contains__)
       58    0.000    0.000    0.000    0.000 _utils.py:779(classproperty)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:371(<dictcomp>)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:1(<module>)
        6    0.000    0.000    0.000    0.000 deprecation.py:272(__set_name__)
       28    0.000    0.000    0.000    0.000 inspect.py:2248(p)
       39    0.000    0.000    0.000    0.000 inspect.py:391(_has_code_flag)
        3    0.000    0.000    0.000    0.000 autocast_mode.py:1(<module>)
      264    0.000    0.000    0.000    0.000 <frozen os>:696(__iter__)
        1    0.000    0.000    0.000    0.000 _creation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:566(__new__)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 container.py:408(ModuleDict)
       14    0.000    0.000    0.000    0.000 pathlib.py:530(_make_child)
        1    0.000    0.000    0.000    0.000 shlex.py:1(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:226(_from_iter)
       40    0.000    0.000    0.000    0.000 rcsetup.py:51(__init__)
      129    0.000    0.000    0.000    0.000 dataclasses.py:593(<listcomp>)
       17    0.000    0.000    0.000    0.000 __init__.py:416(by_key)
        1    0.000    0.000    0.000    0.000 selector_events.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_managers.py:1(<module>)
      117    0.000    0.000    0.000    0.000 __init__.py:321(filter)
        1    0.000    0.000    0.000    0.000 wishart.py:1(<module>)
       93    0.000    0.000    0.000    0.000 typing.py:277(_unpack_args)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1385(AnnotationBbox)
        9    0.000    0.000    0.000    0.000 functools.py:800(singledispatch)
      237    0.000    0.000    0.000    0.000 pydoc.py:155(_getowndoc)
      126    0.000    0.000    0.000    0.000 colors.py:704(__init__)
      426    0.000    0.000    0.000    0.000 {method 'finditer' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 results.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:120(<dictcomp>)
     1534    0.000    0.000    0.000    0.000 {method 'isupper' of 'str' objects}
       17    0.000    0.000    0.000    0.000 stride_tricks.py:480(broadcast_arrays)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2177(sum)
        7    0.000    0.000    0.000    0.000 ops.py:140(<listcomp>)
        1    0.000    0.000    0.000    0.000 series_class.py:1(<module>)
       23    0.000    0.000    0.000    0.000 symbolic_shapes.py:699(_make_node_magic)
        1    0.000    0.000    0.000    0.000 flatten.py:54(Unflatten)
      367    0.000    0.000    0.000    0.000 permutations.py:381(<listcomp>)
        1    0.000    0.000    0.000    0.000 _trace.py:566(ignore_lib_warnings)
      865    0.000    0.000    0.000    0.000 dataclasses.py:375(<genexpr>)
        1    0.000    0.000    0.000    0.000 _vertex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 configparser.py:376(BasicInterpolation)
        8    0.000    0.000    0.000    0.000 deprecation.py:231(wrapper)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1018(<listcomp>)
       13    0.000    0.000    0.000    0.000 core.py:8389(__init__)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:1(<module>)
        9    0.000    0.000    0.000    0.000 deprecation.py:435(<listcomp>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:569(_new)
        3    0.000    0.000    0.000    0.000 __init__.py:906(_search_paths)
       93    0.000    0.000    0.000    0.000 inspect.py:2080(_signature_is_functionlike)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:75(TensorKey)
        1    0.000    0.000    0.000    0.000 testing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1863(Glue)
       52    0.000    0.000    0.000    0.000 singleton.py:131(__getattr__)
       40    0.000    0.000    0.000    0.000 getlimits.py:91(_float_to_float)
       16    0.000    0.000    0.000    0.000 tokenize.py:408(tokenize)
        1    0.000    0.000    0.000    0.000 trace.py:1(<module>)
       20    0.000    0.000    0.000    0.000 colors.py:929(reversed)
      109    0.000    0.000    0.000    0.000 inspect.py:310(ismethoddescriptor)
        1    0.000    0.000    0.000    0.000 _color_data.py:995(<dictcomp>)
        1    0.000    0.000    0.000    0.000 prufer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adaptive.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:2306(_make_var_reduction_prim)
        7    0.000    0.000    0.000    0.000 __init__.py:72(CFUNCTYPE)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2894(icdf)
        1    0.000    0.000    0.000    0.000 powerset.py:1(<module>)
        1    0.000    0.000    0.000    0.000 common.py:432(<listcomp>)
      255    0.000    0.000    0.000    0.000 traversal.py:12(iterargs)
        1    0.000    0.000    0.000    0.000 backend_agg.py:71(RendererAgg)
        1    0.000    0.000    0.000    0.000 legend_handler.py:1(<module>)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:117(<lambda>)
      163    0.000    0.000    0.000    0.000 function.py:149(<listcomp>)
        1    0.000    0.000    0.000    0.000 solveset.py:1(<module>)
      582    0.000    0.000    0.000    0.000 __init__.py:422(<genexpr>)
      108    0.000    0.000    0.000    0.000 iterables.py:3025(iterable)
       19    0.000    0.000    0.000    0.000 pythonmpq.py:57(__new__)
        1    0.000    0.000    0.000    0.000 core.py:6550(__new__)
      494    0.000    0.000    0.000    0.000 _compiler.py:31(_combine_flags)
        1    0.000    0.000    0.000    0.000 container.py:250(ModuleList)
      306    0.000    0.000    0.000    0.000 rcsetup.py:1043(_convert_validator_spec)
        1    0.000    0.000    0.000    0.000 _parser.py:58(_timelex)
       68    0.000    0.000    0.000    0.000 pickletools.py:1124(__init__)
       46    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:276(__init__)
        3    0.000    0.000    0.000    0.000 embedding_ops.py:1(<module>)
      162    0.000    0.000    0.000    0.000 core.py:2446(__new__)
        1    0.000    0.000    0.000    0.000 immutable_collections.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:780(_formatArray)
        1    0.000    0.000    0.000    0.000 curve.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gruntz.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:306(profile)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:1(<module>)
      386    0.000    0.000    0.000    0.000 inspect.py:283(ismodule)
        1    0.000    0.000    0.000    0.000 parabola.py:1(<module>)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:340(_axis_nan_policy_factory)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:15(_init_logger)
       40    0.000    0.000    0.000    0.000 colors.py:889(__init__)
        1    0.000    0.000    0.000    0.000 _collections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:526(register_native_batch_norm)
        1    0.000    0.000    0.000    0.000 configparser.py:522(LegacyInterpolation)
        1    0.000    0.000    0.000    0.000 combinatorics.py:17(SamplerIterDataPipe)
        1    0.000    0.000    0.000    0.000 fnmatch.py:48(filter)
    52/46    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1320(__len__)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:324(_init_builtins)
        1    0.000    0.000    0.000    0.000 resolver.py:1(<module>)
       17    0.000    0.000    0.000    0.000 ctx_iv.py:407(_mpq)
        1    0.000    0.000    0.000    0.000 patches.py:2812(ArrowStyle)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:634(MemoryProfile)
        1    0.000    0.000    0.000    0.000 _basic.py:33(<dictcomp>)
      871    0.000    0.000    0.000    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 axes3d.py:44(Axes3D)
     1080    0.000    0.000    0.000    0.000 inspect.py:729(getmro)
        1    0.000    0.000    0.000    0.000 bezier.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:393(DataFlowNode)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1254(_direct)
       20    0.000    0.000    0.000    0.000 numbers.py:3314(__eq__)
        1    0.000    0.000    0.000    0.000 contains.py:1(<module>)
       71    0.000    0.000    0.000    0.000 enum.py:345(__init__)
      544    0.000    0.000    0.000    0.000 registration.py:71(__init__)
       13    0.000    0.000    0.000    0.000 core.py:8394(getdoc)
        3    0.000    0.000    0.000    0.000 __init__.py:866(__init__)
       18    0.000    0.000    0.000    0.000 _static.py:27(_prevent_modification)
        1    0.000    0.000    0.000    0.000 mathtext.py:219(MathtextBackendPs)
        1    0.000    0.000    0.000    0.000 mul.py:91(Mul)
     1269    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 helpers.py:1084(<listcomp>)
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1283(_find_parent_path_names)
        1    0.000    0.000    0.000    0.000 jit_utils.py:22(GraphContext)
      871    0.000    0.000    0.000    0.000 conflict.py:67(<listcomp>)
      786    0.000    0.000    0.000    0.000 utils.py:45(<genexpr>)
        1    0.000    0.000    0.000    0.000 dotproduct.py:1(<module>)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:45(GradScaler)
        1    0.000    0.000    0.000    0.000 backend_registry.py:56(register_backend)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:149(Backend)
     15/3    0.000    0.000    0.000    0.000 arrayprint.py:789(recurser)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _recursive.py:354(ConcreteTypeStore)
        1    0.000    0.000    0.000    0.000 rcsetup.py:96(<listcomp>)
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fnmatch.py:38(_compile_pattern)
        1    0.000    0.000    0.000    0.000 unicode.py:123(pyparsing_unicode)
        3    0.000    0.000    0.000    0.000 __init__.py:801(zip_children)
        1    0.000    0.000    0.000    0.000 testing.py:17(pyparsing_test)
       18    0.000    0.000    0.000    0.000 core.py:997(__init__)
       42    0.000    0.000    0.000    0.000 results.py:573(copy)
        1    0.000    0.000    0.000    0.000 polar.py:776(PolarAxes)
        1    0.000    0.000    0.000    0.000 _qmc.py:802(QMCEngine)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:108(_moment_central_formula)
       12    0.000    0.000    0.000    0.000 doccer.py:161(_doc)
      130    0.000    0.000    0.000    0.000 <frozen abc>:146(update_abstractmethods)
        2    0.000    0.000    0.000    0.000 _delegators.py:1(<module>)
        2    0.000    0.000    0.000    0.000 windows.py:1(<module>)
     1297    0.000    0.000    0.000    0.000 permutations.py:1613(__iter__)
        1    0.000    0.000    0.000    0.000 groups.py:316(<dictcomp>)
     1282    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
       21    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1118(_dispatch)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:94(_add_aliases)
       13    0.000    0.000    0.000    0.000 {built-in method torch._C._dispatch_library}
        1    0.000    0.000    0.000    0.000 von_mises.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1249(wrapped)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:617(Shadow)
       15    0.000    0.000    0.000    0.000 _bunch.py:5(_validate_names)
       40    0.000    0.000    0.000    0.000 rcsetup.py:63(<dictcomp>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1044(<listcomp>)
      307    0.000    0.000    0.000    0.000 __init__.py:722(__iter__)
        1    0.000    0.000    0.000    0.000 _iotools.py:1(<module>)
      151    0.000    0.000    0.000    0.000 libintmath.py:353(ifac)
        1    0.000    0.000    0.000    0.000 ExifTags.py:361(LightSource)
        7    0.000    0.000    0.000    0.000 numeric.py:1393(moveaxis)
        5    0.000    0.000    0.000    0.000 core.py:6040(__add__)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:86(DomainMatrix)
        4    0.000    0.000    0.000    0.000 feedparser.py:101(push)
        1    0.000    0.000    0.000    0.000 kl.py:818(_add_kl_info)
     1185    0.000    0.000    0.000    0.000 enum.py:1125(__init__)
        5    0.000    0.000    0.000    0.000 core.py:589(_setResultsName)
        1    0.000    0.000    0.000    0.000 repr.py:1(<module>)
        2    0.000    0.000    0.000    0.000 bn_relu.py:1(<module>)
       12    0.000    0.000    0.000    0.000 datetime.py:592(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._dist_autograd_init}
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:593(CategoryElement)
        9    0.000    0.000    0.000    0.000 textwrap.py:470(indent)
        1    0.000    0.000    0.000    0.000 storage.py:18(_StorageBase)
        2    0.000    0.000    0.000    0.000 mixins.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _exceptions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathematica.py:1(<module>)
      432    0.000    0.000    0.000    0.000 colors.py:224(<genexpr>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:394(__init__)
        1    0.000    0.000    0.000    0.000 hooks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:329(tribonacci)
       32    0.000    0.000    0.000    0.000 basic.py:2128(<setcomp>)
       44    0.000    0.000    0.000    0.000 core.py:4124(<genexpr>)
        1    0.000    0.000    0.000    0.000 parameter.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:187(_init_dependencies_order)
        1    0.000    0.000    0.000    0.000 sequences.py:26(SeqBase)
        1    0.000    0.000    0.000    0.000 analyzer.py:1018(PointGroupAnalyzer)
       26    0.000    0.000    0.000    0.000 _basic.py:33(<listcomp>)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:585(__init__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2318(integrand)
       64    0.000    0.000    0.000    0.000 wrappers.py:294(BackwardsNotSupported)
       54    0.000    0.000    0.000    0.000 typing.py:1496(__mro_entries__)
        1    0.000    0.000    0.000    0.000 lattice.py:38(Lattice)
        1    0.000    0.000    0.000    0.000 spines.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:899(_nsum_iv)
      138    0.000    0.000    0.000    0.000 {built-in method builtins.round}
        1    0.000    0.000    0.000    0.000 periodic_table.py:1660(ElementType)
      566    0.000    0.000    0.000    0.000 _compiler.py:426(_get_iscased)
        1    0.000    0.000    0.000    0.000 fu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _bsr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:437(_get_xdg_config_dir)
      416    0.000    0.000    0.000    0.000 typing.py:1667(__eq__)
       15    0.000    0.000    0.000    0.000 decorator.py:170(depends_on_deco)
      865    0.000    0.000    0.000    0.000 dataclasses.py:1102(<genexpr>)
       27    0.000    0.000    0.000    0.000 singleton.py:125(register)
        1    0.000    0.000    0.000    0.000 dirichlet.py:1(<module>)
        3    0.000    0.000    0.000    0.000 feedparser.py:184(close)
       36    0.000    0.000    0.000    0.000 tokenize.py:329(find_cookie)
        1    0.000    0.000    0.000    0.000 configparser.py:448(ExtendedInterpolation)
      158    0.000    0.000    0.000    0.000 typing.py:1800(<genexpr>)
        1    0.000    0.000    0.000    0.000 legend.py:269(Legend)
        3    0.000    0.000    0.000    0.000 zipfile.py:2370(__init__)
        1    0.000    0.000    0.000    0.000 tricontour.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _coo.py:1(<module>)
      513    0.000    0.000    0.000    0.000 {method 'items' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:47(_KinetoProfile)
      166    0.000    0.000    0.000    0.000 pathlib.py:239(splitroot)
        2    0.000    0.000    0.000    0.000 dropout.py:1(<module>)
        4    0.000    0.000    0.000    0.000 enum.py:1357(_missing_)
        1    0.000    0.000    0.000    0.000 _rules.py:382(_POERules)
     1790    0.000    0.000    0.000    0.000 __init__.py:785(<lambda>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:191(SchemaMatcher)
        1    0.000    0.000    0.000    0.000 _data.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _codata.py:2045(replace_exact)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3206(_moment_central)
     1616    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:181(SymNode)
       10    0.000    0.000    0.000    0.000 version.py:52(__init__)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:138(_family)
      330    0.000    0.000    0.000    0.000 {method 'isdisjoint' of 'set' objects}
     1002    0.000    0.000    0.000    0.000 enum.py:230(__init__)
        1    0.000    0.000    0.000    0.000 gzip.py:1(<module>)
       43    0.000    0.000    0.000    0.000 symbolic_shapes.py:817(_make_user_magic)
        1    0.000    0.000    0.000    0.000 backend_bases.py:121(RendererBase)
        1    0.000    0.000    0.000    0.000 unicode.py:85(identchars)
       34    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 typing.py:1556(__or__)
        1    0.000    0.000    0.000    0.000 adam.py:13(Adam)
        1    0.000    0.000    0.000    0.000 core.py:52(Orbital)
      200    0.000    0.000    0.000    0.000 matrix_element.py:157(<listcomp>)
        1    0.000    0.000    0.000    0.000 weak.py:1(<module>)
      684    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 combinatorics.py:14(ShufflerIterDataPipe)
       23    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:593(__init__)
        1    0.000    0.000    0.000    0.000 _netcdf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ddm.py:102(DDM)
      117    0.000    0.000    0.000    0.000 _parser.py:1090(expand_template)
       62    0.000    0.000    0.000    0.000 rational.py:31(__new__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2382(mean)
        2    0.000    0.000    0.000    0.000 _basic.py:3190(factorial2)
        1    0.000    0.000    0.000    0.000 operations.py:415(inversion)
        5    0.000    0.000    0.000    0.000 backend_bases.py:1580(_check_savefig_extra_args)
        1    0.000    0.000    0.000    0.000 _dok.py:1(<module>)
        1    0.000    0.000    0.000    0.000 configparser.py:1325(ConverterMapping)
        1    0.000    0.000    0.000    0.000 _fir_filter_design.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1339(_generate_domain_support)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2979(prod)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2785(NavigationToolbar2)
        1    0.000    0.000    0.000    0.000 sampler.py:210(BatchSampler)
        1    0.000    0.000    0.000    0.000 records.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glob_group.py:1(<module>)
        1    0.000    0.000    0.000    0.000 serializer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:15(ExpressionDomain)
       11    0.000    0.000    0.000    0.000 fractions.py:62(__new__)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:1(<module>)
      147    0.000    0.000    0.000    0.000 TiffTags.py:35(__new__)
        1    0.000    0.000    0.000    0.000 fake_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _adapters.py:8(Message)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:7(_ExtractModuleReferences)
        1    0.000    0.000    0.000    0.000 monomials.py:387(MonomialOps)
        1    0.000    0.000    0.000    0.000 tritools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bz2.py:271(open)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:1(<module>)
        2    0.000    0.000    0.000    0.000 conv_relu.py:1(<module>)
    27/23    0.000    0.000    0.000    0.000 basic.py:366(compare)
      694    0.000    0.000    0.000    0.000 boolalg.py:480(<lambda>)
        1    0.000    0.000    0.000    0.000 quoprimime.py:1(<module>)
       16    0.000    0.000    0.000    0.000 _internal.py:32(wrapped_f)
        1    0.000    0.000    0.000    0.000 repmatrix.py:1(<module>)
        1    0.000    0.000    0.000    0.000 package_importer.py:48(PackageImporter)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1652(_avg_pool)
        1    0.000    0.000    0.000    0.000 transformer.py:17(Transformer)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2007(_validate_order_kind)
        3    0.000    0.000    0.000    0.000 zipfile.py:2251(make)
       34    0.000    0.000    0.000    0.000 operations.py:118(_from_args)
        1    0.000    0.000    0.000    0.000 unicode.py:99(identbodychars)
        1    0.000    0.000    0.000    0.000 pyplot.py:2172(<listcomp>)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:58(bitname)
      261    0.000    0.000    0.000    0.000 dispatcher.py:204(<genexpr>)
        1    0.000    0.000    0.000    0.000 _csc.py:1(<module>)
      216    0.000    0.000    0.000    0.000 typing.py:1389(<genexpr>)
       55    0.000    0.000    0.000    0.000 <frozen codecs>:309(__init__)
       92    0.000    0.000    0.000    0.000 _collections.py:20(__missing__)
        3    0.000    0.000    0.000    0.000 design_patterns.py:43(cached_class)
      544    0.000    0.000    0.000    0.000 registration.py:81(in_base)
       18    0.000    0.000    0.000    0.000 __init__.py:844(search)
        1    0.000    0.000    0.000    0.000 _legacy.py:1(<module>)
       29    0.000    0.000    0.000    0.000 _array_api.py:576(<listcomp>)
        5    0.000    0.000    0.000    0.000 random.py:119(__init__)
        1    0.000    0.000    0.000    0.000 core.py:5241(__init__)
       21    0.000    0.000    0.000    0.000 domain.py:379(__call__)
        1    0.000    0.000    0.000    0.000 repmatrix.py:209(_flat_list_to_DomainMatrix)
        1    0.000    0.000    0.000    0.000 _endian.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sdm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wishart.py:30(Wishart)
       41    0.000    0.000    0.000    0.000 deprecation.py:365(<genexpr>)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2249(_support)
       21    0.000    0.000    0.000    0.000 __init__.py:315(_subx)
      166    0.000    0.000    0.000    0.000 colors.py:521(__init__)
        1    0.000    0.000    0.000    0.000 fields.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _base.py:85(_spbase)
       34    0.000    0.000    0.000    0.000 libmpf.py:491(from_rational)
        1    0.000    0.000    0.000    0.000 transports.py:1(<module>)
       92    0.000    0.000    0.000    0.000 permutations.py:463(size)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4994(__init__)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:101(<lambda>)
      711    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
        1    0.000    0.000    0.000    0.000 bdist.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1909(BoxStyle)
        1    0.000    0.000    0.000    0.000 routeddecoder.py:17(RoutedDecoderIterDataPipe)
        1    0.000    0.000    0.000    0.000 _interface.py:55(LinearOperator)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4440(TruncatedDistribution)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1128(__init__)
       18    0.000    0.000    0.000    0.000 _compiler.py:389(_bytes_to_codes)
        1    0.000    0.000    0.000    0.000 scale.py:204(LogTransform)
        1    0.000    0.000    0.000    0.000 polyclasses.py:138(DMP)
        1    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<dictcomp>)
      350    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.add_docstring}
        1    0.000    0.000    0.000    0.000 conv.py:1195(LazyConv1d)
       43    0.000    0.000    0.000    0.000 core.py:3157(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:582(_ReducedHCT_Element)
        6    0.000    0.000    0.000    0.000 numeric.py:2507(extend_all)
        1    0.000    0.000    0.000    0.000 _polyint.py:1(<module>)
       83    0.000    0.000    0.000    0.000 linecache.py:147(lazycache)
       37    0.000    0.000    0.000    0.000 mul.py:494(<listcomp>)
       58    0.000    0.000    0.000    0.000 core.py:1922(set_name)
        1    0.000    0.000    0.000    0.000 exponential.py:1108(LambertW)
       10    0.000    0.000    0.000    0.000 _text.py:79(__hash__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1656(DraggableBase)
        1    0.000    0.000    0.000    0.000 _dataclass_impls.py:1(<module>)
        1    0.000    0.000    0.000    0.000 histograms.py:1(<module>)
      135    0.000    0.000    0.000    0.000 containers.py:72(__iter__)
        6    0.000    0.000    0.000    0.000 ctx_iv.py:413(convert)
       87    0.000    0.000    0.000    0.000 utils.py:44(<dictcomp>)
        1    0.000    0.000    0.000    0.000 hermite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 interpolate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:166(ComplexRootOf)
       26    0.000    0.000    0.000    0.000 {built-in method torch._C.call_stack}
       16    0.000    0.000    0.000    0.000 arraypad.py:86(_pad_simple)
        1    0.000    0.000    0.000    0.000 animation.py:96(MovieWriterRegistry)
        1    0.000    0.000    0.000    0.000 chebyshev.py:1(<module>)
      114    0.000    0.000    0.000    0.000 textwrap.py:482(prefixed_lines)
        1    0.000    0.000    0.000    0.000 repmatrix.py:183(_dod_to_DomainMatrix)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 upsampling.py:11(Upsample)
        1    0.000    0.000    0.000    0.000 basic.py:156(Basic)
        1    0.000    0.000    0.000    0.000 sampler.py:18(Sampler)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:87(_apply)
        1    0.000    0.000    0.000    0.000 maple.py:1(<module>)
        1    0.000    0.000    0.000    0.000 splitter_base.py:256(_SplitterBase)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:757(__init_subclass__)
        1    0.000    0.000    0.000    0.000 __init__.py:351(_sanity_check)
        8    0.000    0.000    0.000    0.000 kind.py:43(__new__)
        1    0.000    0.000    0.000    0.000 symbolic_opset14.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _pep440.py:292(__init__)
        1    0.000    0.000    0.000    0.000 optimizer.py:1(<module>)
       20    0.000    0.000    0.000    0.000 mul.py:34(_mulsort)
       90    0.000    0.000    0.000    0.000 _pytree.py:47(_register_pytree_node)
        1    0.000    0.000    0.000    0.000 _adapters.py:42(CompatibilityFiles)
        2    0.000    0.000    0.000    0.000 _basic.py:3035(_factorialx_wrapper)
        1    0.000    0.000    0.000    0.000 _dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dumper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr.py:266(__pow__)
       23    0.000    0.000    0.000    0.000 functools.py:841(_is_union_type)
        1    0.000    0.000    0.000    0.000 queues.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_managers.py:39(ToolManager)
        1    0.000    0.000    0.000    0.000 lazy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1211(Rational)
        9    0.000    0.000    0.000    0.000 pathlib.py:765(__truediv__)
      480    0.000    0.000    0.000    0.000 artist.py:1371(<genexpr>)
        6    0.000    0.000    0.000    0.000 core.py:1737(__call__)
        1    0.000    0.000    0.000    0.000 colors.py:97(<dictcomp>)
       99    0.000    0.000    0.000    0.000 traceback.py:389(extended_frame_gen)
       26    0.000    0.000    0.000    0.000 pathlib.py:657(stem)
        1    0.000    0.000    0.000    0.000 zetazeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1(<module>)
       66    0.000    0.000    0.000    0.000 __init__.py:228(_acquireLock)
        1    0.000    0.000    0.000    0.000 optimization.py:1(<module>)
        2    0.000    0.000    0.000    0.000 extension.py:1(<module>)
        1    0.000    0.000    0.000    0.000 structure.py:1006(IStructure)
       12    0.000    0.000    0.000    0.000 weakref.py:104(__init__)
        1    0.000    0.000    0.000    0.000 _freeze.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:3564(FancyBboxPatch)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3267(__init__)
      143    0.000    0.000    0.000    0.000 core.py:794(preParse)
        1    0.000    0.000    0.000    0.000 spines.py:11(Spine)
        1    0.000    0.000    0.000    0.000 free_groups.py:1(<module>)
       16    0.000    0.000    0.000    0.000 sysconfig.py:244(_subst_vars)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6108(__init__)
        1    0.000    0.000    0.000    0.000 _qmc.py:2312(MultivariateNormalQMC)
        1    0.000    0.000    0.000    0.000 emitter.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:261(MathtextBackendPdf)
        1    0.000    0.000    0.000    0.000 orderings.py:1(<module>)
       49    0.000    0.000    0.000    0.000 _compiler.py:405(_generate_overlap_table)
        1    0.000    0.000    0.000    0.000 symbolic_opset7.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:107(FullHessianUpdateStrategy)
      107    0.000    0.000    0.000    0.000 rcsetup.py:65(__call__)
        1    0.000    0.000    0.000    0.000 linear.py:9(Linear)
       48    0.000    0.000    0.000    0.000 string.py:139(formula_double_format)
      254    0.000    0.000    0.000    0.000 core.py:3902(<genexpr>)
        1    0.000    0.000    0.000    0.000 testing.py:22(reset_pyparsing_context)
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:37(SecondaryAxis)
       21    0.000    0.000    0.000    0.000 domain.py:371(new)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:29(_nonzero_schemas)
        4    0.000    0.000    0.000    0.000 _new_distributions.py:412(_icdf_formula)
        1    0.000    0.000    0.000    0.000 decorators.py:236(_func)
        1    0.000    0.000    0.000    0.000 systems.py:1(<module>)
        1    0.000    0.000    0.000    0.000 proxy.py:476(ParameterProxy)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:90(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:666(<listcomp>)
      160    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1220(__init__)
       51    0.000    0.000    0.000    0.000 nvfuser_prims.py:144(_assert_nvfuser_op_exists)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2223(support)
        1    0.000    0.000    0.000    0.000 doccer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distr_params.py:1(<module>)
       71    0.000    0.000    0.000    0.000 enum.py:945(_find_data_repr_)
        1    0.000    0.000    0.000    0.000 exceptions.py:30(ParseBaseException)
        1    0.000    0.000    0.000    0.000 getlimits.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tukeylambda_stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 streamplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distribution.py:10(Distribution)
      212    0.000    0.000    0.000    0.000 transforms.py:1256(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:141(MaskedTensor)
        8    0.000    0.000    0.000    0.000 core.py:5098(__init__)
      128    0.000    0.000    0.000    0.000 dataclasses.py:1053(<listcomp>)
        4    0.000    0.000    0.000    0.000 random.py:128(seed)
        5    0.000    0.000    0.000    0.000 pathlib.py:757(joinpath)
        2    0.000    0.000    0.000    0.000 typing.py:2962(TypedDict)
        1    0.000    0.000    0.000    0.000 rational.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1379(<listcomp>)
       38    0.000    0.000    0.000    0.000 assumptions.py:494(make_property)
        8    0.000    0.000    0.000    0.000 typing.py:2345(<dictcomp>)
        1    0.000    0.000    0.000    0.000 importer.py:28(Importer)
      149    0.000    0.000    0.000    0.000 _util.py:373(check_random_state)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:649(__init__)
      309    0.000    0.000    0.000    0.000 enum.py:220(__set_name__)
        1    0.000    0.000    0.000    0.000 uuid.py:85(UUID)
    18/17    0.000    0.000    0.000    0.000 typing.py:1474(__repr__)
       23    0.000    0.000    0.000    0.000 pythonmpq.py:103(_new)
      213    0.000    0.000    0.000    0.000 ctx_iv.py:369(_wrap_specfun)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:1(<module>)
      216    0.000    0.000    0.000    0.000 message.py:506(set_raw)
        1    0.000    0.000    0.000    0.000 libelefun.py:1(<module>)
      841    0.000    0.000    0.000    0.000 inspect.py:2737(annotation)
      200    0.000    0.000    0.000    0.000 _ops.py:437(__hash__)
        1    0.000    0.000    0.000    0.000 patches.py:1185(Arrow)
        1    0.000    0.000    0.000    0.000 __init__.py:979(ComplexFloatStorage)
        1    0.000    0.000    0.000    0.000 _compat_pickle.py:1(<module>)
        1    0.000    0.000    0.000    0.000 legendre.py:1(<module>)
       47    0.000    0.000    0.000    0.000 numbers.py:1927(__mul__)
        2    0.000    0.000    0.000    0.000 deprecation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:3882(ParseExpression)
       16    0.000    0.000    0.000    0.000 {method 'uniform' of 'numpy.random._generator.Generator' objects}
      224    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
      317    0.000    0.000    0.000    0.000 overrides.py:105(array_function_dispatch)
        1    0.000    0.000    0.000    0.000 glob.py:175(_listdir)
        1    0.000    0.000    0.000    0.000 fancysets.py:1386(CartesianComplexRegion)
        8    0.000    0.000    0.000    0.000 deprecation.py:493(_suppress_matplotlib_deprecation_warning)
       23    0.000    0.000    0.000    0.000 rcsetup.py:347(validate_color_or_auto)
       19    0.000    0.000    0.000    0.000 __init__.py:1281(_to_unmasked_float_array)
        1    0.000    0.000    0.000    0.000 interpreter.py:370(Transformer)
        1    0.000    0.000    0.000    0.000 serialization.py:281(_open_zipfile_reader)
        1    0.000    0.000    0.000    0.000 _sysconfigdata__linux_x86_64-linux-gnu.py:1(<module>)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:913(_set_invalid_nan)
        1    0.000    0.000    0.000    0.000 basic.py:2233(Atom)
        3    0.000    0.000    0.000    0.000 _adapters.py:49(<listcomp>)
        4    0.000    0.000    0.000    0.000 functools.py:861(<lambda>)
        1    0.000    0.000    0.000    0.000 logic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv.py:272(Conv1d)
      748    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 container.py:552(ParameterList)
        2    0.000    0.000    0.000    0.000 _distributor_init.py:1(<module>)
        3    0.000    0.000    0.000    0.000 blas.py:395(getter)
        1    0.000    0.000    0.000    0.000 _guards.py:26(GuardSource)
        1    0.000    0.000    0.000    0.000 _trigonometric_special.py:1(<module>)
       29    0.000    0.000    0.000    0.000 _array_api.py:571(<listcomp>)
       40    0.000    0.000    0.000    0.000 getlimits.py:24(_fr1)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:1(<module>)
        1    0.000    0.000    0.000    0.000 laguerre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4391(__init__)
        1    0.000    0.000    0.000    0.000 _fuser.py:1(<module>)
       72    0.000    0.000    0.000    0.000 util.py:113(set_)
        1    0.000    0.000    0.000    0.000 hooks.py:9(RemovableHandle)
        5    0.000    0.000    0.000    0.000 matrices.py:749(__init__)
        3    0.000    0.000    0.000    0.000 zipfile.py:1242(__init__)
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.isSubtypeOf}
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polysys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 streams.py:395(StreamReader)
        2    0.000    0.000    0.000    0.000 core.py:6169(<listcomp>)
        1    0.000    0.000    0.000    0.000 rnn.py:18(LSTMCell)
      130    0.000    0.000    0.000    0.000 dataclasses.py:325(__init__)
       10    0.000    0.000    0.000    0.000 deprecation.py:83(wrap)
       37    0.000    0.000    0.000    0.000 libmpf.py:950(mpf_div)
      257    0.000    0.000    0.000    0.000 typing.py:1661(_value_and_type_iter)
        1    0.000    0.000    0.000    0.000 _fft.py:1(<module>)
      127    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 numbers.py:1811(__new__)
       72    0.000    0.000    0.000    0.000 util.py:110(get)
        1    0.000    0.000    0.000    0.000 decorators.py:111(binary_op_wrapper)
        2    0.000    0.000    0.000    0.000 core.py:555(set_results_name)
        1    0.000    0.000    0.000    0.000 _guards.py:318(TracingContext)
        6    0.000    0.000    0.000    0.000 abc.py:32(_register)
        1    0.000    0.000    0.000    0.000 assumptions_generated.py:1(<module>)
        1    0.000    0.000    0.000    0.000 swa_utils.py:1(<module>)
        4    0.000    0.000    0.000    0.000 ctx_iv.py:43(__new__)
        3    0.000    0.000    0.000    0.000 message.py:243(get_payload)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:37(Category)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:1(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:150(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:305(_compile_repl)
        4    0.000    0.000    0.000    0.000 typing.py:349(_tp_cache)
      567    0.000    0.000    0.000    0.000 permutations.py:1184(size)
        4    0.000    0.000    0.000    0.000 _script.py:265(__init__)
      576    0.000    0.000    0.000    0.000 {method '__init_subclass__' of 'object' objects}
       15    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)
      129    0.000    0.000    0.000    0.000 dataclasses.py:1047(<listcomp>)
  277/275    0.000    0.000    0.000    0.000 results.py:176(__init__)
        2    0.000    0.000    0.000    0.000 expressiondomain.py:26(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:414(StreamContext)
       62    0.000    0.000    0.000    0.000 rational.py:7(create_reduced)
        2    0.000    0.000    0.000    0.000 version.py:47(parse)
       26    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<listcomp>)
        1    0.000    0.000    0.000    0.000 _state.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:1(<module>)
      108    0.000    0.000    0.000    0.000 typing.py:1015(<genexpr>)
        1    0.000    0.000    0.000    0.000 conv_add.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr.py:261(_pow)
        1    0.000    0.000    0.000    0.000 docstring.py:1(<module>)
       93    0.000    0.000    0.000    0.000 _script.py:897(<lambda>)
        1    0.000    0.000    0.000    0.000 transforms.py:270(ComposeTransform)
       37    0.000    0.000    0.000    0.000 rcsetup.py:558(_validate_linestyle)
        1    0.000    0.000    0.000    0.000 abc.py:56(Traversable)
        9    0.000    0.000    0.000    0.000 numeric.py:136(ones)
        1    0.000    0.000    0.000    0.000 cse_main.py:1(<module>)
       58    0.000    0.000    0.000    0.000 results.py:454(__iadd__)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:169(FakeTensorConverter)
      377    0.000    0.000    0.000    0.000 enum.py:779(<genexpr>)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:328(GaussianIntegerRing)
        1    0.000    0.000    0.000    0.000 sgd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2835(deprecated)
      777    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_iscased}
        1    0.000    0.000    0.000    0.000 pooling.py:257(MaxUnpool1d)
        1    0.000    0.000    0.000    0.000 patches.py:3828(FancyArrowPatch)
        2    0.000    0.000    0.000    0.000 twodim_base.py:158(eye)
        1    0.000    0.000    0.000    0.000 core.py:4667(ParseElementEnhance)
        1    0.000    0.000    0.000    0.000 core.py:5544(Forward)
       40    0.000    0.000    0.000    0.000 _parser.py:256(getwhile)
        1    0.000    0.000    0.000    0.000 accumulationbounds.py:14(AccumulationBounds)
        1    0.000    0.000    0.000    0.000 trigonometry.py:1(<module>)
        1    0.000    0.000    0.000    0.000 printer.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3646(_logpxf_dispatch)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:9(PythonRationalField)
      682    0.000    0.000    0.000    0.000 {function RcParams.__getitem__ at 0x14f0ea604c20}
        1    0.000    0.000    0.000    0.000 scalarint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 libintmath.py:126(<listcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:182(ConvTranspose1d)
        6    0.000    0.000    0.000    0.000 constraints.py:192(__init__)
        3    0.000    0.000    0.000    0.000 patches.py:1885(<listcomp>)
       11    0.000    0.000    0.000    0.000 __init__.py:119(inplace_wrapper)
        1    0.000    0.000    0.000    0.000 ask_generated.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bz2.py:37(__init__)
       19    0.000    0.000    0.000    0.000 __init__.py:2271(_check_shape)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cnf.py:1(<module>)
      4/3    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 _contextlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dlpack.py:10(DLDeviceType)
       12    0.000    0.000    0.000    0.000 polytools.py:69(_polifyit)
        2    0.000    0.000    0.000    0.000 sysconfig.py:109(_getuserbase)
        1    0.000    0.000    0.000    0.000 _at.py:27(_AtOp)
        3    0.000    0.000    0.000    0.000 blas.py:422(get_blas_funcs)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:517(GaussianRationalField)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:1(<module>)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1539(_max_pool)
        1    0.000    0.000    0.000    0.000 polyconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 add.py:93(Add)
        1    0.000    0.000    0.000    0.000 core.py:125(Diagnostics)
      130    0.000    0.000    0.000    0.000 dataclasses.py:376(<genexpr>)
        1    0.000    0.000    0.000    0.000 activation.py:889(MultiheadAttention)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2894(__call__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:508(contains)
        7    0.000    0.000    0.000    0.000 dev.py:112(decorator)
        1    0.000    0.000    0.000    0.000 _cubic.py:378(Akima1DInterpolator)
        1    0.000    0.000    0.000    0.000 ellipse.py:41(Ellipse)
        1    0.000    0.000    0.000    0.000 composition.py:38(Composition)
        8    0.000    0.000    0.000    0.000 core.py:4464(_generateDefaultName)
        4    0.000    0.000    0.000    0.000 typing.py:353(decorator)
        1    0.000    0.000    0.000    0.000 functional_modules.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mixins.py:59(NDArrayOperatorsMixin)
      729    0.000    0.000    0.000    0.000 conflict.py:63(<lambda>)
        1    0.000    0.000    0.000    0.000 futures.py:1(<module>)
       10    0.000    0.000    0.000    0.000 para4tb.py:74(<listcomp>)
        7    0.000    0.000    0.000    0.000 enum.py:1532(unique)
        1    0.000    0.000    0.000    0.000 _compression.py:1(<module>)
       45    0.000    0.000    0.000    0.000 pathlib.py:523(_format_parsed_parts)
        1    0.000    0.000    0.000    0.000 numbers.py:281(Number)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:1(<module>)
       11    0.000    0.000    0.000    0.000 _tensor.py:31(_handle_torch_function_and_wrap_type_error_to_not_implemented)
        1    0.000    0.000    0.000    0.000 core.py:2697(MaskedArray)
        1    0.000    0.000    0.000    0.000 json.py:111(MSONable)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1644(FigureCanvasBase)
        1    0.000    0.000    0.000    0.000 module.py:53(_WrappedHook)
       26    0.000    0.000    0.000    0.000 pathlib.py:877(_make_child_relpath)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:1(<module>)
        1    0.000    0.000    0.000    0.000 operator_support.py:37(OperatorSupport)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:367(broadcast_to)
        1    0.000    0.000    0.000    0.000 rnn.py:32(RNNBase)
        9    0.000    0.000    0.000    0.000 warnings.py:165(simplefilter)
        1    0.000    0.000    0.000    0.000 ntheory.py:1(<module>)
       28    0.000    0.000    0.000    0.000 ops.py:324(__getitem__)
        1    0.000    0.000    0.000    0.000 ordinals.py:56(Ordinal)
       37    0.000    0.000    0.000    0.000 numeric.py:1855(isscalar)
        1    0.000    0.000    0.000    0.000 categorical.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lbfgs.py:1(<module>)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:129(_max_pool)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:213(BboxBase)
        1    0.000    0.000    0.000    0.000 __init__.py:892(MetadataPathFinder)
        1    0.000    0.000    0.000    0.000 grouping.py:144(GrouperIterDataPipe)
       14    0.000    0.000    0.000    0.000 _infra.py:65(from_sarif)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:255(WriteSubprocessPipeProto)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:199(ExprWithLimits)
        1    0.000    0.000    0.000    0.000 weight_norm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 inputs.py:1182(KpointsSupportedModes)
        2    0.000    0.000    0.000    0.000 _pep440.py:117(parse)
        1    0.000    0.000    0.000    0.000 polytools.py:4542(PurePoly)
        1    0.000    0.000    0.000    0.000 nodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:2808(__new__)
        1    0.000    0.000    0.000    0.000 _tzpath.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adamw.py:1(<module>)
       80    0.000    0.000    0.000    0.000 _sources.py:51(remove_prefix)
        1    0.000    0.000    0.000    0.000 symbol.py:456(Dummy)
      152    0.000    0.000    0.000    0.000 typing.py:456(__repr__)
       76    0.000    0.000    0.000    0.000 signal.py:9(<lambda>)
        1    0.000    0.000    0.000    0.000 ticker.py:1689(Locator)
      250    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000    0.000    0.000 patches.py:4184(ConnectionPatch)
        1    0.000    0.000    0.000    0.000 _multicomp.py:25(DunnettResult)
        1    0.000    0.000    0.000    0.000 selectors.py:341(_PollLikeSelector)
      212    0.000    0.000    0.000    0.000 transforms.py:1262(<genexpr>)
        5    0.000    0.000    0.000    0.000 __init__.py:653(get_arch_list)
        4    0.000    0.000    0.000    0.000 polynomial.py:1227(__init__)
        1    0.000    0.000    0.000    0.000 lines.py:200(Line2D)
       62    0.000    0.000    0.000    0.000 __init__.py:26(__new__)
      174    0.000    0.000    0.000    0.000 _docscrape.py:713(_should_skip_member)
       14    0.000    0.000    0.000    0.000 numeric.py:1330(normalize_axis_tuple)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:1(<module>)
        1    0.000    0.000    0.000    0.000 binomial.py:1(<module>)
    32/24    0.000    0.000    0.000    0.000 typing.py:2348(_strip_annotations)
      208    0.000    0.000    0.000    0.000 inspect.py:946(<genexpr>)
        2    0.000    0.000    0.000    0.000 glob.py:141(_iterdir)
        1    0.000    0.000    0.000    0.000 conv.py:103(Conv1d)
        4    0.000    0.000    0.000    0.000 {function Random.seed at 0x14f1d3e198a0}
        1    0.000    0.000    0.000    0.000 scale.py:263(LogScale)
        4    0.000    0.000    0.000    0.000 _miobase.py:134(convert_dtypes)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2457(pdf)
        1    0.000    0.000    0.000    0.000 fake_utils.py:48(CrossRefFakeMode)
       24    0.000    0.000    0.000    0.000 constructor.py:337(add_default_constructor)
       15    0.000    0.000    0.000    0.000 <frozen _collections_abc>:933(clear)
        1    0.000    0.000    0.000    0.000 polar.py:225(ThetaLocator)
        2    0.000    0.000    0.000    0.000 version.py:188(__init__)
       30    0.000    0.000    0.000    0.000 warnings.py:466(__enter__)
        1    0.000    0.000    0.000    0.000 <frozen os>:44(_get_exports_list)
       28    0.000    0.000    0.000    0.000 locale.py:678(getpreferredencoding)
        1    0.000    0.000    0.000    0.000 cm.py:211(ScalarMappable)
        1    0.000    0.000    0.000    0.000 _cm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 powsimp.py:1(<module>)
       10    0.000    0.000    0.000    0.000 util.py:421(_inner)
        1    0.000    0.000    0.000    0.000 symbolic_opset15.py:1(<module>)
        6    0.000    0.000    0.000    0.000 core.py:5220(__init__)
        1    0.000    0.000    0.000    0.000 octave.py:1(<module>)
       20    0.000    0.000    0.000    0.000 core.py:1030(reset_cache)
        2    0.000    0.000    0.000    0.000 warnings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:569(__init__)
        5    0.000    0.000    0.000    0.000 iterables.py:1948(has_variety)
        3    0.000    0.000    0.000    0.000 six.py:887(wrapper)
        9    0.000    0.000    0.000    0.000 _util.py:981(decorator)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:410(ints)
       59    0.000    0.000    0.000    0.000 _array_api.py:170(_asarray)
    36/32    0.000    0.000    0.000    0.000 typing.py:224(_type_repr)
        1    0.000    0.000    0.000    0.000 threading.py:1402(__init__)
        1    0.000    0.000    0.000    0.000 _comparison.py:484(NumberPair)
        1    0.000    0.000    0.000    0.000 suite.py:328(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 facts.py:380(FactRules)
        1    0.000    0.000    0.000    0.000 pprint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:419(bernoulli)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:748(FakeTensor)
        1    0.000    0.000    0.000    0.000 filelist.py:1(<module>)
        2    0.000    0.000    0.000    0.000 multinomial.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _constraints.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combining.py:56(ZipperMapDataPipe)
      140    0.000    0.000    0.000    0.000 deprecation.py:112(deprecated)
       85    0.000    0.000    0.000    0.000 _parser.py:295(checkgroupname)
    35/24    0.000    0.000    0.000    0.000 typing.py:371(_eval_type)
       24    0.000    0.000    0.000    0.000 {built-in method _warnings.warn}
        2    0.000    0.000    0.000    0.000 init.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wrappers.py:1(<module>)
       66    0.000    0.000    0.000    0.000 __init__.py:237(_releaseLock)
        1    0.000    0.000    0.000    0.000 mathtext.py:1078(StandardPsFonts)
        1    0.000    0.000    0.000    0.000 _infra.py:13(Level)
        1    0.000    0.000    0.000    0.000 filelister.py:13(FileListerIterDataPipe)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor.py:17(ReportingDescriptor)
        1    0.000    0.000    0.000    0.000 asgd.py:1(<module>)
      502    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
        1    0.000    0.000    0.000    0.000 band_data_in.py:40(get_Kpoint)
        1    0.000    0.000    0.000    0.000 pooling.py:418(MaxUnpool3d)
       23    0.000    0.000    0.000    0.000 stride_tricks.py:416(_broadcast_shape)
        1    0.000    0.000    0.000    0.000 _subplots.py:11(SubplotBase)
        1    0.000    0.000    0.000    0.000 logging_handlers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fold.py:1(<module>)
       65    0.000    0.000    0.000    0.000 core.py:4087(<listcomp>)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3269(round)
       55    0.000    0.000    0.000    0.000 numbers.py:3145(__hash__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4472(halfcauchy_gen)
        3    0.000    0.000    0.000    0.000 __init__.py:882(__init__)
       68    0.000    0.000    0.000    0.000 _internal.py:38(<listcomp>)
        1    0.000    0.000    0.000    0.000 single.py:1107(Liouville)
        1    0.000    0.000    0.000    0.000 _compatibility.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:13(DenseNDimArray)
        1    0.000    0.000    0.000    0.000 graycode.py:6(GrayCode)
        1    0.000    0.000    0.000    0.000 pooling.py:735(FractionalMaxPool2d)
        1    0.000    0.000    0.000    0.000 coreerrors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quiver.py:195(QuiverKey)
       10    0.000    0.000    0.000    0.000 version.py:314(parse)
        1    0.000    0.000    0.000    0.000 datapipe.py:42(IterDataPipe)
        2    0.000    0.000    0.000    0.000 core.py:2978(__array_finalize__)
        6    0.000    0.000    0.000    0.000 gzip.py:525(_add_read_data)
        1    0.000    0.000    0.000    0.000 dataset.py:202(ConcatDataset)
        1    0.000    0.000    0.000    0.000 polar.py:407(RadialLocator)
      156    0.000    0.000    0.000    0.000 inspect.py:943(<genexpr>)
       27    0.000    0.000    0.000    0.000 functools.py:845(_is_valid_dispatch_type)
        1    0.000    0.000    0.000    0.000 assumptions.py:220(_load_pre_generated_assumption_rules)
        1    0.000    0.000    0.000    0.000 rationalfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:294(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:857(Path)
        1    0.000    0.000    0.000    0.000 _ksstats.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:397(_logpmf_formula)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:24(<dictcomp>)
        1    0.000    0.000    0.000    0.000 win.py:1(<module>)
        4    0.000    0.000    0.000    0.000 enum.py:1420(<listcomp>)
       40    0.000    0.000    0.000    0.000 numbers.py:780(__new__)
        4    0.000    0.000    0.000    0.000 typing_extensions.py:491(__init__)
      101    0.000    0.000    0.000    0.000 core.py:6161(_expanded)
        3    0.000    0.000    0.000    0.000 blas.py:337(_get_funcs)
        1    0.000    0.000    0.000    0.000 puiseux.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:835(__iter__)
        1    0.000    0.000    0.000    0.000 einsumfunc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 extrapolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 geometric.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pooling.py:331(MaxUnpool2d)
      397    0.000    0.000    0.000    0.000 enum.py:1226(value)
        1    0.000    0.000    0.000    0.000 von_mises.py:70(VonMises)
        3    0.000    0.000    0.000    0.000 {method 'integers' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 parametrize.py:69(ParametrizationList)
      130    0.000    0.000    0.000    0.000 core.py:1785(set_whitespace_chars)
        2    0.000    0.000    0.000    0.000 log.py:1(<module>)
      673    0.000    0.000    0.000    0.000 _beartype.py:34(_no_op_decorator)
        5    0.000    0.000    0.000    0.000 functools.py:188(total_ordering)
       26    0.000    0.000    0.000    0.000 _sources.py:72(<listcomp>)
      120    0.000    0.000    0.000    0.000 periodic_table.py:170(__getattr__)
        1    0.000    0.000    0.000    0.000 split_utils.py:31(Component)
        1    0.000    0.000    0.000    0.000 uniform.py:1(<module>)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:567(_get_protocol_attrs)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:1(<module>)
       55    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        1    0.000    0.000    0.000    0.000 _datasource.py:1(<module>)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:340(_broadcast_to)
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:14(Normal)
       13    0.000    0.000    0.000    0.000 sympy_parser.py:1239(<genexpr>)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:35(IdentityFunction)
        1    0.000    0.000    0.000    0.000 _pytree.py:114(TreeSpec)
        3    0.000    0.000    0.000    0.000 core.py:1627(__xor__)
       15    0.000    0.000    0.000    0.000 copyreg.py:113(_slotnames)
        1    0.000    0.000    0.000    0.000 pooling.py:805(FractionalMaxPool3d)
        1    0.000    0.000    0.000    0.000 patches.py:2376(ConnectionStyle)
        1    0.000    0.000    0.000    0.000 package_exporter.py:74(PackagingErrorReason)
        1    0.000    0.000    0.000    0.000 response.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colorbar.py:1186(Colorbar)
        1    0.000    0.000    0.000    0.000 Image.py:138(Transpose)
        1    0.000    0.000    0.000    0.000 facts.py:474(_from_python)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:1(<module>)
        4    0.000    0.000    0.000    0.000 doccer.py:202(_doc)
        1    0.000    0.000    0.000    0.000 extensions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:1(<module>)
       40    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       26    0.000    0.000    0.000    0.000 _sources.py:75(<listcomp>)
        8    0.000    0.000    0.000    0.000 {built-in method zlib.crc32}
        1    0.000    0.000    0.000    0.000 pydoc.py:1803(Helper)
        2    0.000    0.000    0.000    0.000 hypergeometric.py:1(<module>)
      507    0.000    0.000    0.000    0.000 boolalg.py:440(__bool__)
        1    0.000    0.000    0.000    0.000 iterables.py:781(topological_sort)
        1    0.000    0.000    0.000    0.000 package_exporter.py:53(_ModuleProviderAction)
        5    0.000    0.000    0.000    0.000 symbolic_shapes.py:858(_lru_cache)
       12    0.000    0.000    0.000    0.000 matexpr.py:23(deco)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:18(autocast)
        1    0.000    0.000    0.000    0.000 selecting.py:19(FilterIterDataPipe)
       11    0.000    0.000    0.000    0.000 __init__.py:1467(debug)
        1    0.000    0.000    0.000    0.000 transforms.py:543(PowerTransform)
        3    0.000    0.000    0.000    0.000 monkey.py:44(get_unpatched)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:1(<module>)
        2    0.000    0.000    0.000    0.000 linear_fused.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glsl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cache.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _factories.py:1(<module>)
        3    0.000    0.000    0.000    0.000 symbolic_opset10.py:240(_avg_pool)
        1    0.000    0.000    0.000    0.000 julia.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _parser.py:997(parse_template)
        1    0.000    0.000    0.000    0.000 proxy.py:321(Proxy)
        7    0.000    0.000    0.000    0.000 dev.py:80(deprecated_function_decorator)
        1    0.000    0.000    0.000    0.000 _fftlog_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 umath.py:1(<module>)
       51    0.000    0.000    0.000    0.000 rcsetup.py:407(validate_fontsize)
        1    0.000    0.000    0.000    0.000 numbers.py:594(Float)
        1    0.000    0.000    0.000    0.000 para4tb.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:100(dtype_from_ctypes_type)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 modularinteger.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv.py:156(Conv2d)
        1    0.000    0.000    0.000    0.000 symbolic_opset16.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tokens.py:334(CommentToken)
      643    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_tolower}
       88    0.000    0.000    0.000    0.000 six.py:146(__init__)
        5    0.000    0.000    0.000    0.000 _basic.py:3009(_is_subdtype)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2388(standard_deviation)
        1    0.000    0.000    0.000    0.000 quadrature.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1502(<listcomp>)
       19    0.000    0.000    0.000    0.000 path.py:193(_update_values)
        1    0.000    0.000    0.000    0.000 graph.py:131(saved_tensors_hooks)
        1    0.000    0.000    0.000    0.000 conv.py:180(Conv1d)
        5    0.000    0.000    0.000    0.000 add.py:40(_addsort)
      252    0.000    0.000    0.000    0.000 rcsetup.py:58(func)
        1    0.000    0.000    0.000    0.000 rmsprop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nadam.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:4474(_register_classes)
        1    0.000    0.000    0.000    0.000 _bvp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv.py:47(_ConvNd)
        1    0.000    0.000    0.000    0.000 spglib.py:84(DictInterface)
        1    0.000    0.000    0.000    0.000 radam.py:1(<module>)
        8    0.000    0.000    0.000    0.000 _ops.py:603(__getattr__)
        1    0.000    0.000    0.000    0.000 _rules.py:22(_NodeMissingOnnxShapeInference)
        1    0.000    0.000    0.000    0.000 _mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adagrad.py:1(<module>)
       28    0.000    0.000    0.000    0.000 <frozen posixpath>:388(normpath)
        1    0.000    0.000    0.000    0.000 trace_dependencies.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:1(<module>)
       46    0.000    0.000    0.000    0.000 getlimits.py:101(_float_conv)
        1    0.000    0.000    0.000    0.000 combining.py:313(DemultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 conv.py:465(Conv3d)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:138(__new__)
       13    0.000    0.000    0.000    0.000 enum.py:1347(_iter_member_by_def_)
        1    0.000    0.000    0.000    0.000 _qmc.py:1960(PoissonDisk)
        2    0.000    0.000    0.000    0.000 cache.py:168(lazy_function)
      130    0.000    0.000    0.000    0.000 unicode.py:105(<genexpr>)
        2    0.000    0.000    0.000    0.000 lsoda.py:1(<module>)
       30    0.000    0.000    0.000    0.000 _array_api.py:523(<listcomp>)
       16    0.000    0.000    0.000    0.000 arraypad.py:129(_set_pad_area)
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 symbol.py:212(Symbol)
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.get}
        1    0.000    0.000    0.000    0.000 polynomial.py:1472(Polynomial)
        1    0.000    0.000    0.000    0.000 _ndbspline.py:1(<module>)
       15    0.000    0.000    0.000    0.000 arrayprint.py:989(<genexpr>)
        1    0.000    0.000    0.000    0.000 registration.py:64(OverrideDict)
        1    0.000    0.000    0.000    0.000 _fortran.py:1(<module>)
      144    0.000    0.000    0.000    0.000 core.py:2025(__hash__)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datetime.py:1311(time)
       30    0.000    0.000    0.000    0.000 core.py:4465(<genexpr>)
        1    0.000    0.000    0.000    0.000 scale.py:560(LogitScale)
        1    0.000    0.000    0.000    0.000 simplex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1609(Sobol)
        1    0.000    0.000    0.000    0.000 conv.py:316(Conv2d)
        1    0.000    0.000    0.000    0.000 tensor.py:968(TensorIndexType)
        1    0.000    0.000    0.000    0.000 gamma.py:1(<module>)
        6    0.000    0.000    0.000    0.000 {method 'multinomial' of 'numpy.random._generator.Generator' objects}
    18/17    0.000    0.000    0.000    0.000 typing.py:1480(<listcomp>)
      110    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:1(<module>)
       50    0.000    0.000    0.000    0.000 sets.py:125(_infimum_key)
        1    0.000    0.000    0.000    0.000 adamax.py:1(<module>)
      231    0.000    0.000    0.000    0.000 periodic_table.py:237(__hash__)
       95    0.000    0.000    0.000    0.000 permutations.py:1060(_hashable_content)
       42    0.000    0.000    0.000    0.000 ctx_mp_python.py:336(__new__)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:1(<module>)
      362    0.000    0.000    0.000    0.000 inspect.py:3028(return_annotation)
       43    0.000    0.000    0.000    0.000 pathlib.py:515(_from_parsed_parts)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:204(_LogUniform)
        1    0.000    0.000    0.000    0.000 __init__.py:1122(ELEMENTWISE_TYPE_PROMOTION_KIND)
        1    0.000    0.000    0.000    0.000 _idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph.py:267(_PyTreeInfo)
        2    0.000    0.000    0.000    0.000 sysconfig.py:118(joinuser)
        7    0.000    0.000    0.000    0.000 decoder.py:284(__init__)
        1    0.000    0.000    0.000    0.000 lll.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _util.py:188(_transition_to_rng)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:1(<module>)
        1    0.000    0.000    0.000    0.000 storage.py:318(TypedStorage)
        6    0.000    0.000    0.000    0.000 core.py:1146(__init__)
        1    0.000    0.000    0.000    0.000 requirements.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:47(Action)
        1    0.000    0.000    0.000    0.000 backend_tools.py:31(Cursors)
        3    0.000    0.000    0.000    0.000 patches.py:1878(<listcomp>)
       13    0.000    0.000    0.000    0.000 core.py:8406(_replace_return_type)
        1    0.000    0.000    0.000    0.000 recipes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 readers.py:16(__init__)
        1    0.000    0.000    0.000    0.000 registration.py:123(_SymbolicFunctionGroup)
        1    0.000    0.000    0.000    0.000 compositedomain.py:1(<module>)
        4    0.000    0.000    0.000    0.000 typing.py:1520(__init__)
        3    0.000    0.000    0.000    0.000 core.py:4241(__init__)
        1    0.000    0.000    0.000    0.000 graph.py:275(CodeGen)
        1    0.000    0.000    0.000    0.000 para4band.py:449(<listcomp>)
        7    0.000    0.000    0.000    0.000 <frozen posixpath>:396(abspath)
      215    0.000    0.000    0.000    0.000 symbolic_helper.py:234(parse_args)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2494(pmf)
        1    0.000    0.000    0.000    0.000 power.py:22(Pow)
        5    0.000    0.000    0.000    0.000 version.py:70(__lt__)
        1    0.000    0.000    0.000    0.000 arraypad.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cauchy.py:1(<module>)
        2    0.000    0.000    0.000    0.000 traversal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:1(<module>)
        6    0.000    0.000    0.000    0.000 libmpf.py:410(from_float)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _polyint.py:108(_reshape_yi)
        1    0.000    0.000    0.000    0.000 _path.py:1(<module>)
        1    0.000    0.000    0.000    0.000 protocols.py:1(<module>)
       24    0.000    0.000    0.000    0.000 proxy.py:514(_scope)
        7    0.000    0.000    0.000    0.000 memoization.py:27(decorator)
        3    0.000    0.000    0.000    0.000 functools.py:651(cache)
        8    0.000    0.000    0.000    0.000 _aliases.py:89(asarray)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:65(_DTypeDictBase)
      109    0.000    0.000    0.000    0.000 inspect.py:505(isbuiltin)
        1    0.000    0.000    0.000    0.000 sslproto.py:19(SSLProtocolState)
        1    0.000    0.000    0.000    0.000 conv.py:214(Conv3d)
        1    0.000    0.000    0.000    0.000 libmpi.py:1(<module>)
        9    0.000    0.000    0.000    0.000 api.py:74(_require_initialized)
        1    0.000    0.000    0.000    0.000 _sf_error.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:341(<dictcomp>)
        1    0.000    0.000    0.000    0.000 constants.py:31(_SendfileMode)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:43(RuntimeTypeCheckState)
       10    0.000    0.000    0.000    0.000 basic.py:135(_get_postprocessors)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:17(_get_or_create_logger)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:50(SubgraphMatcher)
        1    0.000    0.000    0.000    0.000 _globals.py:65(_CopyMode)
        1    0.000    0.000    0.000    0.000 independent.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:447(_get_xdg_cache_dir)
        1    0.000    0.000    0.000    0.000 patches.py:1551(Arc)
       99    0.000    0.000    0.000    0.000 traceback.py:325(walk_stack)
       87    0.000    0.000    0.000    0.000 kl.py:41(register_kl)
        1    0.000    0.000    0.000    0.000 scale.py:515(LogitTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:154(_check_cubins)
        1    0.000    0.000    0.000    0.000 dist.py:77(Distribution)
        1    0.000    0.000    0.000    0.000 studentT.py:1(<module>)
        1    0.000    0.000    0.000    0.000 recurr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 structure.py:213(SiteCollection)
      426    0.000    0.000    0.000    0.000 typing.py:2216(cast)
       12    0.000    0.000    0.000    0.000 __init__.py:1893(get_aliased_and_aliases)
        1    0.000    0.000    0.000    0.000 observer.py:154(UniformQuantizationObserverBase)
       85    0.000    0.000    0.000    0.000 typing.py:891(__hash__)
        1    0.000    0.000    0.000    0.000 parametrizations.py:33(_OrthMaps)
        1    0.000    0.000    0.000    0.000 docstring.py:6(Substitution)
        1    0.000    0.000    0.000    0.000 matplotlib.py:1(<module>)
       14    0.000    0.000    0.000    0.000 numerictypes.py:357(issubdtype)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:422(spec_from_loader)
        1    0.000    0.000    0.000    0.000 numbers.py:2986(Infinity)
        1    0.000    0.000    0.000    0.000 plane.py:27(<listcomp>)
        1    0.000    0.000    0.000    0.000 numbers.py:3176(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 normal.py:1(<module>)
      391    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 _bws_test.py:1(<module>)
       11    0.000    0.000    0.000    0.000 __init__.py:12(NewCls)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
        1    0.000    0.000    0.000    0.000 collections.py:1306(LineCollection)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:863(__str__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2029(InverseTrigonometricFunction)
        1    0.000    0.000    0.000    0.000 para4band.py:14(Stiefel_Frame)
      191    0.000    0.000    0.000    0.000 <frozen abc>:7(abstractmethod)
        1    0.000    0.000    0.000    0.000 _kdtree.py:206(KDTree)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:44(_bits_of)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 report.py:1(<module>)
        2    0.000    0.000    0.000    0.000 rationaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyconfig.py:52(configure)
      169    0.000    0.000    0.000    0.000 contextlib.py:431(__exit__)
        1    0.000    0.000    0.000    0.000 primes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matrices.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:352(IFD)
        1    0.000    0.000    0.000    0.000 ideals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rendezvous.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _core_metadata.py:1(<module>)
       42    0.000    0.000    0.000    0.000 docstring.py:43(update)
        1    0.000    0.000    0.000    0.000 geo.py:252(AitoffAxes)
        7    0.000    0.000    0.000    0.000 symbolic_opset11.py:345(_interpolate)
        1    0.000    0.000    0.000    0.000 operations.py:29(AssocOp)
        3    0.000    0.000    0.000    0.000 numbers.py:1306(__new__)
        1    0.000    0.000    0.000    0.000 qs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 latex.py:142(LatexPrinter)
        1    0.000    0.000    0.000    0.000 pareto.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quoprimime.py:55(<listcomp>)
        1    0.000    0.000    0.000    0.000 _web_response.py:15(WebResponse)
       62    0.000    0.000    0.000    0.000 __init__.py:202(_checkLevel)
       30    0.000    0.000    0.000    0.000 _array_api.py:531(<listcomp>)
        1    0.000    0.000    0.000    0.000 meta_utils.py:70(MetaConverter)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:772(create_module)
        3    0.000    0.000    0.000    0.000 monkey.py:54(get_unpatched_class)
        1    0.000    0.000    0.000    0.000 rings.py:196(PolyRing)
        1    0.000    0.000    0.000    0.000 weak.py:79(WeakIdKeyDictionary)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:4(_InsertPoint)
        1    0.000    0.000    0.000    0.000 rprop.py:1(<module>)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2692(max)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3145(_moment_raw)
        1    0.000    0.000    0.000    0.000 Image.py:158(Resampling)
        1    0.000    0.000    0.000    0.000 sparse_adam.py:7(SparseAdam)
        1    0.000    0.000    0.000    0.000 _web_request.py:15(WebRequest)
        6    0.000    0.000    0.000    0.000 {method 'permuted' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 _policybase.py:99(_extend_docstrings)
        2    0.000    0.000    0.000    0.000 stubs.py:1(<module>)
        8    0.000    0.000    0.000    0.000 core.py:1031(deprecation_wrapper)
        1    0.000    0.000    0.000    0.000 evalf.py:1395(_create_evalf_table)
        1    0.000    0.000    0.000    0.000 rcode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 math2.py:1(<module>)
       93    0.000    0.000    0.000    0.000 sites.py:138(species)
        1    0.000    0.000    0.000    0.000 timeouts.py:18(_State)
        1    0.000    0.000    0.000    0.000 pretty.py:30(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 weibull.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rings.py:586(PolyElement)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4590(ShiftedScaledDistribution)
       62    0.000    0.000    0.000    0.000 unary.py:149(_torch_unary)
        1    0.000    0.000    0.000    0.000 _result.py:28(Result)
        1    0.000    0.000    0.000    0.000 _comparison.py:607(TensorLikePair)
        1    0.000    0.000    0.000    0.000 importtools.py:14(__sympy_debug)
        7    0.000    0.000    0.000    0.000 _parser.py:309(_convert)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:298(OpTree)
        1    0.000    0.000    0.000    0.000 ImageColor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ufunclike.py:1(<module>)
        1    0.000    0.000    0.000    0.000 design_patterns.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _spherical_bessel.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:888(HistogramObserver)
        3    0.000    0.000    0.000    0.000 core.py:1667(__invert__)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.000    0.000    0.000    0.000 padding.py:82(ConstantPad2d)
        1    0.000    0.000    0.000    0.000 __init__.py:172(SDPBackend)
        2    0.000    0.000    0.000    0.000 polyclasses.py:146(__new__)
        2    0.000    0.000    0.000    0.000 immutable_collections.py:18(_create_immutable_container)
       30    0.000    0.000    0.000    0.000 warnings.py:487(__exit__)
        1    0.000    0.000    0.000    0.000 settings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:516(ProxySymDispatchMode)
        1    0.000    0.000    0.000    0.000 internal.py:23(RPCExecMode)
        1    0.000    0.000    0.000    0.000 mock.py:44(<setcomp>)
        1    0.000    0.000    0.000    0.000 scale.py:431(SymmetricalLogScale)
       10    0.000    0.000    0.000    0.000 getlimits.py:685(__init__)
       20    0.000    0.000    0.000    0.000 <frozen io>:60(__getattr__)
       58    0.000    0.000    0.000    0.000 unary.py:158(_torch_inplace_unary)
        1    0.000    0.000    0.000    0.000 quant_type.py:9(QuantType)
       29    0.000    0.000    0.000    0.000 constraint_registry.py:106(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:354(<listcomp>)
        5    0.000    0.000    0.000    0.000 version.py:334(_cmp)
        1    0.000    0.000    0.000    0.000 const_fold.py:11(FoldedGraphModule)
        3    0.000    0.000    0.000    0.000 __init__.py:576(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:1460(setLevel)
        4    0.000    0.000    0.000    0.000 platform.py:1107(python_implementation)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3841(Format)
        1    0.000    0.000    0.000    0.000 facts.py:411(__init__)
       16    0.000    0.000    0.000    0.000 __init__.py:62(_process_keys)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:387(_WorldMeta)
        1    0.000    0.000    0.000    0.000 _spectral.py:1(<module>)
        1    0.000    0.000    0.000    0.000 jiterator.py:1(<module>)
        1    0.000    0.000    0.000    0.000 factortools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:344(Interop)
        1    0.000    0.000    0.000    0.000 bz2.py:97(close)
       12    0.000    0.000    0.000    0.000 misc.py:304(func_name)
        1    0.000    0.000    0.000    0.000 profiler.py:820(KinetoStepTracker)
        7    0.000    0.000    0.000    0.000 core.py:3633(__init__)
        1    0.000    0.000    0.000    0.000 _run.py:30(Run)
        1    0.000    0.000    0.000    0.000 _comparison.py:430(BooleanPair)
        4    0.000    0.000    0.000    0.000 ssl.py:461(__new__)
        1    0.000    0.000    0.000    0.000 sdm.py:25(SDM)
        1    0.000    0.000    0.000    0.000 gridspec.py:602(SubplotSpec)
        1    0.000    0.000    0.000    0.000 _tool_component.py:19(ToolComponent)
        1    0.000    0.000    0.000    0.000 Image.py:527(Image)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:133(<genexpr>)
        1    0.000    0.000    0.000    0.000 registration.py:202(SymbolicRegistry)
       87    0.000    0.000    0.000    0.000 kl.py:72(decorator)
       38    0.000    0.000    0.000    0.000 observer.py:77(_with_args)
       42    0.000    0.000    0.000    0.000 typing.py:1803(<genexpr>)
        1    0.000    0.000    0.000    0.000 fractionfield.py:1(<module>)
      120    0.000    0.000    0.000    0.000 _multiufuncs.py:43(<genexpr>)
        1    0.000    0.000    0.000    0.000 polygon.py:25(<listcomp>)
       93    0.000    0.000    0.000    0.000 exceptions.py:49(__init__)
        1    0.000    0.000    0.000    0.000 table.py:30(Cell)
        1    0.000    0.000    0.000    0.000 docinfo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _classes.py:1(<module>)
       57    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:42(__sympy_debug)
       83    0.000    0.000    0.000    0.000 traceback.py:264(__init__)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:225(BackendConfig)
        1    0.000    0.000    0.000    0.000 dates.py:589(DateFormatter)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:23(Spin)
        1    0.000    0.000    0.000    0.000 sets.py:47(Set)
        1    0.000    0.000    0.000    0.000 poisson.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _polybase.py:18(ABCPolyBase)
        1    0.000    0.000    0.000    0.000 symbolic_opset17.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _signal_api.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 taskgroups.py:1(<module>)
        7    0.000    0.000    0.000    0.000 symbolic_helper.py:1064(_interpolate_helper)
        1    0.000    0.000    0.000    0.000 order.py:11(Order)
        1    0.000    0.000    0.000    0.000 symbolic_opset18.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:3127(view)
       91    0.000    0.000    0.000    0.000 dataclasses.py:604(<genexpr>)
        1    0.000    0.000    0.000    0.000 bdist.py:48(bdist)
        1    0.000    0.000    0.000    0.000 compatibility.py:240(IPolys)
        2    0.000    0.000    0.000    0.000 _compression.py:39(__init__)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:433(broadcast_shapes)
        1    0.000    0.000    0.000    0.000 variable.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linalg.py:97(_determine_error_states)
        3    0.000    0.000    0.000    0.000 misc.py:1(<module>)
       47    0.000    0.000    0.000    0.000 enum.py:1128(_generate_next_value_)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _common.py:47(get_package)
      141    0.000    0.000    0.000    0.000 __init__.py:259(__iter__)
        1    0.000    0.000    0.000    0.000 defaults.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mio5.py:149(MatFile5Reader)
        3    0.000    0.000    0.000    0.000 core.py:5079(__init__)
        1    0.000    0.000    0.000    0.000 _monitor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:12(FPContext)
       14    0.000    0.000    0.000    0.000 <frozen posixpath>:140(basename)
        1    0.000    0.000    0.000    0.000 profiler.py:230(ProfilerAction)
        1    0.000    0.000    0.000    0.000 _czt.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1366(MouseButton)
       38    0.000    0.000    0.000    0.000 constructor.py:321(add_constructor)
       14    0.000    0.000    0.000    0.000 rcsetup.py:623(validate_capstyle)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:604(CategoryDict)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:865(<listcomp>)
        3    0.000    0.000    0.000    0.000 TiffTags.py:450(<dictcomp>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:888(Symbol)
        3    0.000    0.000    0.000    0.000 __init__.py:36(__deprecate_private_class)
       13    0.000    0.000    0.000    0.000 weakref.py:367(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:393(norm_gen)
        1    0.000    0.000    0.000    0.000 scale.py:541(LogisticTransform)
        1    0.000    0.000    0.000    0.000 combining.py:362(_DemultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 jscode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 text.py:104(Text)
      127    0.000    0.000    0.000    0.000 ssl.py:125(<lambda>)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fancysets.py:1440(PolarComplexRegion)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:464(__str__)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 reductions.py:379(init_reductions)
        3    0.000    0.000    0.000    0.000 symbolic_opset11.py:577(_avg_pool)
        1    0.000    0.000    0.000    0.000 trifinder.py:1(<module>)
      162    0.000    0.000    0.000    0.000 _compatibility.py:7(compatibility)
        1    0.000    0.000    0.000    0.000 _stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:1(<module>)
      104    0.000    0.000    0.000    0.000 inspect.py:456(istraceback)
        1    0.000    0.000    0.000    0.000 widgets.py:672(TextBox)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2772(_Mode)
        3    0.000    0.000    0.000    0.000 core.py:2488(__init__)
       92    0.000    0.000    0.000    0.000 {built-in method math.log}
        1    0.000    0.000    0.000    0.000 _elffile.py:33(EMachine)
        2    0.000    0.000    0.000    0.000 getlimits.py:307(_get_machar)
      377    0.000    0.000    0.000    0.000 enum.py:1221(name)
        6    0.000    0.000    0.000    0.000 <frozen posixpath>:117(splitext)
        1    0.000    0.000    0.000    0.000 _string_helpers.py:1(<module>)
      127    0.000    0.000    0.000    0.000 ssl.py:135(<lambda>)
       11    0.000    0.000    0.000    0.000 __init__.py:1734(isEnabledFor)
        6    0.000    0.000    0.000    0.000 bessel.py:893(assume_integer_order)
        1    0.000    0.000    0.000    0.000 optimizer.py:262(profile_hook_step)
        1    0.000    0.000    0.000    0.000 _invocation.py:17(Invocation)
        6    0.000    0.000    0.000    0.000 gaussiandomains.py:23(__new__)
       61    0.000    0.000    0.000    0.000 _inspect.py:144(<lambda>)
        1    0.000    0.000    0.000    0.000 inference.py:1(<module>)
       12    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        1    0.000    0.000    0.000    0.000 __init__.py:231(<listcomp>)
        1    0.000    0.000    0.000    0.000 lbfgs.py:184(LBFGS)
       13    0.000    0.000    0.000    0.000 mixins.py:44(_numeric_methods)
        3    0.000    0.000    0.000    0.000 rcsetup.py:701(_validate_hinting)
       28    0.000    0.000    0.000    0.000 typing_extensions.py:495(__setattr__)
        1    0.000    0.000    0.000    0.000 Image.py:149(Transform)
        1    0.000    0.000    0.000    0.000 _lazy.py:1(<module>)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1730(_adaptive_pool)
        1    0.000    0.000    0.000    0.000 base_events.py:387(BaseEventLoop)
        4    0.000    0.000    0.000    0.000 ctx_base.py:52(_init_aliases)
       90    0.000    0.000    0.000    0.000 basic.py:938(_sorted_args)
        7    0.000    0.000    0.000    0.000 _legacy.py:15(deprecated)
        3    0.000    0.000    0.000    0.000 numbers.py:1374(_new)
        1    0.000    0.000    0.000    0.000 _translation_metadata.py:15(TranslationMetadata)
        1    0.000    0.000    0.000    0.000 plotgrid.py:1(<module>)
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3153(_moment_raw_dispatch)
        1    0.000    0.000    0.000    0.000 profiler.py:446(record_function)
        1    0.000    0.000    0.000    0.000 entity.py:67(<listcomp>)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:465(boolean_dispatch)
      116    0.000    0.000    0.000    0.000 typing.py:1812(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:2510(Keyword)
        1    0.000    0.000    0.000    0.000 core.py:39(OrbitalType)
        8    0.000    0.000    0.000    0.000 resolver.py:131(add_implicit_resolver_base)
       14    0.000    0.000    0.000    0.000 __init__.py:144(_check_size)
        1    0.000    0.000    0.000    0.000 combining.py:562(ZipperIterDataPipe)
       48    0.000    0.000    0.000    0.000 lapack.py:908(backtickrepl)
       38    0.000    0.000    0.000    0.000 getlimits.py:16(_fr0)
        1    0.000    0.000    0.000    0.000 dop853_coefficients.py:1(<module>)
       55    0.000    0.000    0.000    0.000 numbers.py:546(__hash__)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:4792(_one_hidden_rnn)
       58    0.000    0.000    0.000    0.000 constraint_registry.py:87(register)
        1    0.000    0.000    0.000    0.000 groups.py:317(<dictcomp>)
        1    0.000    0.000    0.000    0.000 pg_operation.py:1(<module>)
       15    0.000    0.000    0.000    0.000 arrayprint.py:984(<genexpr>)
        1    0.000    0.000    0.000    0.000 rrule.py:1307(rruleset)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 log_normal.py:1(<module>)
    54/46    0.000    0.000    0.000    0.000 fake_tensor.py:94(<genexpr>)
        2    0.000    0.000    0.000    0.000 dispatcher.py:46(ambiguity_register_error_ignore_dup)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:262(_interpolate)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:8(_SnapshotState)
        9    0.000    0.000    0.000    0.000 typing.py:1639(__repr__)
        1    0.000    0.000    0.000    0.000 geo.py:416(LambertAxes)
      100    0.000    0.000    0.000    0.000 perm_groups.py:136(<genexpr>)
       36    0.000    0.000    0.000    0.000 constraints.py:170(__init__)
       47    0.000    0.000    0.000    0.000 core.py:2501(parseImpl)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2322(any)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:211(_set_array_types)
        1    0.000    0.000    0.000    0.000 locks.py:439(_BarrierState)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:2038(IdentityTransform)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._init_names}
      127    0.000    0.000    0.000    0.000 ssl.py:150(<lambda>)
      127    0.000    0.000    0.000    0.000 ssl.py:130(<lambda>)
        1    0.000    0.000    0.000    0.000 bivariate.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {built-in method posix.scandir}
        5    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1074(_set_invalid_nan_property)
      127    0.000    0.000    0.000    0.000 ssl.py:140(<lambda>)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fetch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pycode.py:79(AbstractPythonCodePrinter)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 contour.py:670(ContourSet)
       71    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
       13    0.000    0.000    0.000    0.000 fromnumeric.py:200(reshape)
        1    0.000    0.000    0.000    0.000 geo.py:346(MollweideAxes)
        2    0.000    0.000    0.000    0.000 __init__.py:386(__getattr__)
       23    0.000    0.000    0.000    0.000 pkgutil.py:407(get_importer)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:659(<listcomp>)
        6    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
      127    0.000    0.000    0.000    0.000 ssl.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 _ellip_harm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 spectrum.py:1(<module>)
        1    0.000    0.000    0.000    0.000 padding.py:133(ConstantPad3d)
       12    0.000    0.000    0.000    0.000 weakref.py:289(update)
      124    0.000    0.000    0.000    0.000 functions.py:85(defun)
      112    0.000    0.000    0.000    0.000 patches.py:1885(<genexpr>)
      105    0.000    0.000    0.000    0.000 textwrap.py:479(predicate)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:3376(_unsupported_dropout)
       52    0.000    0.000    0.000    0.000 _add_newdocs.py:6754(refer_to_array_attribute)
       47    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1103(_sanity_check)
        1    0.000    0.000    0.000    0.000 __init__.py:456(<listcomp>)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.create_builtin}
        1    0.000    0.000    0.000    0.000 geo.py:301(HammerAxes)
        1    0.000    0.000    0.000    0.000 _utils.py:46(EventKey)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2327(median)
        1    0.000    0.000    0.000    0.000 distributed.py:148(_BufferCommHookLocation)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:1(<module>)
       26    0.000    0.000    0.000    0.000 basic.py:88(_cmp_name)
        5    0.000    0.000    0.000    0.000 misc.py:181(debug_decorator)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11012(vonmises_gen)
        1    0.000    0.000    0.000    0.000 quiver.py:442(Quiver)
        3    0.000    0.000    0.000    0.000 feedparser.py:139(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:319(ELEMENTWISE_PRIM_TYPE_PROMOTION_KIND)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:1(<module>)
       23    0.000    0.000    0.000    0.000 qconfig.py:98(__new__)
        1    0.000    0.000    0.000    0.000 factorials.py:285(subfactorial)
      124    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        1    0.000    0.000    0.000    0.000 patches.py:1242(FancyArrow)
        5    0.000    0.000    0.000    0.000 transforms.py:242(make_wrapper)
        1    0.000    0.000    0.000    0.000 _guards.py:253(GuardsCheckpointState)
        4    0.000    0.000    0.000    0.000 platform.py:915(system)
        3    0.000    0.000    0.000    0.000 core.py:3727(__init__)
       36    0.000    0.000    0.000    0.000 deprecation.py:192(_deprecated_property)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:1(<module>)
        2    0.000    0.000    0.000    0.000 calculus.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:144(is_cpython)
        1    0.000    0.000    0.000    0.000 getlimits.py:612(tiny)
        1    0.000    0.000    0.000    0.000 operations.py:575(AssocOpDispatcher)
        1    0.000    0.000    0.000    0.000 sharding.py:16(SHARDING_PRIORITIES)
       89    0.000    0.000    0.000    0.000 operations.py:73(<genexpr>)
        7    0.000    0.000    0.000    0.000 rcsetup.py:292(validate_backend)
        1    0.000    0.000    0.000    0.000 subscheck.py:1(<module>)
       13    0.000    0.000    0.000    0.000 {method 'random' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 sslproto.py:27(AppProtocolState)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:35(OptState)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:47(__new__)
        1    0.000    0.000    0.000    0.000 matpow.py:12(MatPow)
        1    0.000    0.000    0.000    0.000 util.py:49(get_platform)
        1    0.000    0.000    0.000    0.000 _morphology.py:1(<module>)
        1    0.000    0.000    0.000    0.000 domainscalar.py:1(<module>)
       28    0.000    0.000    0.000    0.000 {built-in method _locale.getencoding}
        1    0.000    0.000    0.000    0.000 immutable.py:30(ImmutableRepMatrix)
        1    0.000    0.000    0.000    0.000 _mio4.py:316(MatFile4Reader)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:16(_FuncInfo)
       12    0.000    0.000    0.000    0.000 arrayprint.py:753(_extendLine_pretty)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._multiprocessing_init}
        1    0.000    0.000    0.000    0.000 _backend.py:51(set_global_backend)
        1    0.000    0.000    0.000    0.000 core.py:4777(IndentedBlock)
        1    0.000    0.000    0.000    0.000 inequalities.py:1(<module>)
      104    0.000    0.000    0.000    0.000 inspect.py:466(isframe)
        1    0.000    0.000    0.000    0.000 runners.py:15(_State)
        1    0.000    0.000    0.000    0.000 Image.py:177(Dither)
        1    0.000    0.000    0.000    0.000 core.py:6568(__array_finalize__)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:21(ReplacedPatterns)
        1    0.000    0.000    0.000    0.000 transforms.py:1746(Affine2DBase)
        2    0.000    0.000    0.000    0.000 signals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 library.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ellipse.py:38(<listcomp>)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:506(convert_to)
        1    0.000    0.000    0.000    0.000 _mio5.py:817(MatFile5Writer)
       93    0.000    0.000    0.000    0.000 composition.py:207(items)
        1    0.000    0.000    0.000    0.000 _polyint.py:53(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1131(REDUCTION_OUTPUT_TYPE_KIND)
        1    0.000    0.000    0.000    0.000 Image.py:190(Quantize)
        1    0.000    0.000    0.000    0.000 kind.py:190(KindDispatcher)
        1    0.000    0.000    0.000    0.000 index_methods.py:1(<module>)
        1    0.000    0.000    0.000    0.000 libmpf.py:136(<listcomp>)
        2    0.000    0.000    0.000    0.000 __init__.py:1415(_clear_cache)
       49    0.000    0.000    0.000    0.000 results.py:215(__getitem__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1744(_broadcast)
        1    0.000    0.000    0.000    0.000 helpers.py:692(OpAssoc)
        1    0.000    0.000    0.000    0.000 _VF.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _location.py:19(Location)
       12    0.000    0.000    0.000    0.000 arrayprint.py:1018(__call__)
        1    0.000    0.000    0.000    0.000 combining.py:23(ConcaterIterDataPipe)
        4    0.000    0.000    0.000    0.000 {built-in method _ssl.txt2obj}
        2    0.000    0.000    0.000    0.000 densebasic.py:343(dmp_validate)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:132(<dictcomp>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:601(__str__)
       15    0.000    0.000    0.000    0.000 rcsetup.py:84(_listify_validator)
      100    0.000    0.000    0.000    0.000 perm_groups.py:134(<genexpr>)
        1    0.000    0.000    0.000    0.000 outputs.py:205(Vasprun)
       49    0.000    0.000    0.000    0.000 core.py:2472(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:57(pretty_try_use_unicode)
        1    0.000    0.000    0.000    0.000 remote_device.py:1(<module>)
      134    0.000    0.000    0.000    0.000 wrappers.py:96(__init__)
        1    0.000    0.000    0.000    0.000 callable.py:21(MapperIterDataPipe)
        3    0.000    0.000    0.000    0.000 sdm.py:78(__init__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5382(MonotonicTransformedDistribution)
       95    0.000    0.000    0.000    0.000 iterables.py:2000(check)
        1    0.000    0.000    0.000    0.000 decompositions.py:34(Reduction)
        1    0.000    0.000    0.000    0.000 ecm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:5454(__init__)
        1    0.000    0.000    0.000    0.000 case.py:344(TestCase)
        1    0.000    0.000    0.000    0.000 _mode_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:707(beta_gen)
        1    0.000    0.000    0.000    0.000 enumerative.py:1(<module>)
        1    0.000    0.000    0.000    0.000 common.py:286(StreamWrapper)
      110    0.000    0.000    0.000    0.000 _internal.py:883(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:231(reload_library)
        1    0.000    0.000    0.000    0.000 reinplace.py:16(_ViewType)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:512(__div__)
        1    0.000    0.000    0.000    0.000 core.py:3839(Tag)
        2    0.000    0.000    0.000    0.000 getlimits.py:86(_str_smallest_subnormal)
       41    0.000    0.000    0.000    0.000 numbers.py:442(sort_key)
        2    0.000    0.000    0.000    0.000 fnmatch.py:74(translate)
       36    0.000    0.000    0.000    0.000 deprecation.py:211(finalize)
       41    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:83(<genexpr>)
        1    0.000    0.000    0.000    0.000 rnn.py:382(LSTM)
      161    0.000    0.000    0.000    0.000 core.py:1774(leave_whitespace)
        1    0.000    0.000    0.000    0.000 datetime.py:2293(timezone)
        1    0.000    0.000    0.000    0.000 parametrizations.py:39(_Orthogonal)
       36    0.000    0.000    0.000    0.000 binary.py:153(_torch_binary)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1735(DUP_Flint)
        1    0.000    0.000    0.000    0.000 util.py:35(get_host_platform)
        2    0.000    0.000    0.000    0.000 __future__.py:1(<module>)
        1    0.000    0.000    0.000    0.000 line.py:47(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:264(_reset_cache)
        1    0.000    0.000    0.000    0.000 getlimits.py:589(smallest_normal)
        1    0.000    0.000    0.000    0.000 _binomtest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 intfunc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cm_listed.py:2061(<dictcomp>)
        1    0.000    0.000    0.000    0.000 tableform.py:1(<module>)
       44    0.000    0.000    0.000    0.000 typing.py:2798(<listcomp>)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:107(Disposal)
        1    0.000    0.000    0.000    0.000 function.py:296(_SingleLevelFunction)
      116    0.000    0.000    0.000    0.000 typing.py:1814(<genexpr>)
        1    0.000    0.000    0.000    0.000 patches.py:698(Rectangle)
        3    0.000    0.000    0.000    0.000 <frozen os>:681(__setitem__)
        1    0.000    0.000    0.000    0.000 _trustregion.py:1(<module>)
      196    0.000    0.000    0.000    0.000 core.py:485(mayReturnEmpty)
        2    0.000    0.000    0.000    0.000 contextlib.py:77(__call__)
       25    0.000    0.000    0.000    0.000 polyoptions.py:64(__init__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2584(atan)
        1    0.000    0.000    0.000    0.000 subfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glob.py:111(_glob0)
       24    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.dragon4_positional}
        1    0.000    0.000    0.000    0.000 logistic_normal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arrayop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:487(DataFlowGraph)
        1    0.000    0.000    0.000    0.000 _linalg_utils.py:1(<module>)
        2    0.000    0.000    0.000    0.000 conflict.py:34(super_signature)
        1    0.000    0.000    0.000    0.000 combining.py:10(ConcaterMapDataPipe)
       42    0.000    0.000    0.000    0.000 _typing.py:275(__init__)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:776(runtime_checkable)
        4    0.000    0.000    0.000    0.000 getlimits.py:62(smallest_subnormal)
        1    0.000    0.000    0.000    0.000 _miobase.py:351(MatFileReader)
       10    0.000    0.000    0.000    0.000 __init__.py:216(_logged_cached)
        1    0.000    0.000    0.000    0.000 quasirandom.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6024(laplace_gen)
      256    0.000    0.000    0.000    0.000 libintmath.py:62(python_trailing)
        1    0.000    0.000    0.000    0.000 combinatorics.py:54(ShufflerIterDataPipe)
        3    0.000    0.000    0.000    0.000 core.py:5901(__init__)
        1    0.000    0.000    0.000    0.000 ssl.py:477(Purpose)
        1    0.000    0.000    0.000    0.000 distributed.py:13(DistributedSampler)
        1    0.000    0.000    0.000    0.000 patches.py:883(RegularPolygon)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:175(<lambda>)
       16    0.000    0.000    0.000    0.000 fake_quantize.py:106(with_args)
        1    0.000    0.000    0.000    0.000 tensor.py:2417(TensAdd)
        1    0.000    0.000    0.000    0.000 exponential.py:219(exp)
        1    0.000    0.000    0.000    0.000 distributed.py:256(DistributedDataParallel)
        1    0.000    0.000    0.000    0.000 __init__.py:58(Sectioned)
        1    0.000    0.000    0.000    0.000 _external_properties.py:25(ExternalProperties)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1019(<listcomp>)
      186    0.000    0.000    0.000    0.000 __init__.py:108(<lambda>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:270(Uniform)
        1    0.000    0.000    0.000    0.000 autograd_function.py:511(WrappedCtx)
        1    0.000    0.000    0.000    0.000 _digraph.py:1(<module>)
        2    0.000    0.000    0.000    0.000 complexfield.py:81(dtype)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2345(mode)
        1    0.000    0.000    0.000    0.000 _version.py:20(get_versions)
        1    0.000    0.000    0.000    0.000 appellseqs.py:1(<module>)
      449    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 laplace.py:2203(InverseLaplaceTransform)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:538(<listcomp>)
        1    0.000    0.000    0.000    0.000 orthopolys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _check.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1770(Integer)
        1    0.000    0.000    0.000    0.000 grouping.py:10(BatcherMapDataPipe)
      169    0.000    0.000    0.000    0.000 contextlib.py:425(__init__)
        1    0.000    0.000    0.000    0.000 _sparse.py:1(<module>)
        1    0.000    0.000    0.000    0.000 zeta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3548(export)
        1    0.000    0.000    0.000    0.000 grouping.py:29(BatcherIterDataPipe)
       28    0.000    0.000    0.000    0.000 core.py:17(__setattr__)
        1    0.000    0.000    0.000    0.000 _parser.py:1371(_tzparser)
        1    0.000    0.000    0.000    0.000 gui.py:1(<module>)
        5    0.000    0.000    0.000    0.000 inverselaplace.py:668(__init__)
        2    0.000    0.000    0.000    0.000 core.py:6744(__init__)
        1    0.000    0.000    0.000    0.000 trirefine.py:1(<module>)
        1    0.000    0.000    0.000    0.000 binomial.py:13(Binomial)
        1    0.000    0.000    0.000    0.000 identification.py:1(<module>)
       15    0.000    0.000    0.000    0.000 weakref.py:495(popitem)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:9(NegativeBinomial)
        3    0.000    0.000    0.000    0.000 rcsetup.py:487(validate_whiskers)
        1    0.000    0.000    0.000    0.000 datapipe.py:358(_IterDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 preview.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _asarray.py:1(<module>)
       27    0.000    0.000    0.000    0.000 pathlib.py:622(name)
        1    0.000    0.000    0.000    0.000 euclidtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ring.py:1(<module>)
       55    0.000    0.000    0.000    0.000 logic.py:92(fuzzy_bool)
        1    0.000    0.000    0.000    0.000 transforms.py:821(InverseMellinTransform)
        1    0.000    0.000    0.000    0.000 _machar.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:3696(__init__)
        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
      147    0.000    0.000    0.000    0.000 <frozen _collections_abc>:477(_is_param_expr)
        1    0.000    0.000    0.000    0.000 numerictypes.py:589(_register_types)
       82    0.000    0.000    0.000    0.000 core.py:1962(streamline)
       97    0.000    0.000    0.000    0.000 docstring.py:65(do_copy)
        2    0.000    0.000    0.000    0.000 _codata.py:1533(exact2018)
        9    0.000    0.000    0.000    0.000 mul.py:844(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 tz.py:1470(__get_gettz)
        1    0.000    0.000    0.000    0.000 gzip.py:456(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:3343(NaN)
        1    0.000    0.000    0.000    0.000 _backend.py:330(set_global_backend)
        1    0.000    0.000    0.000    0.000 _cm.py:158(<dictcomp>)
        3    0.000    0.000    0.000    0.000 core.py:1757(suppress)
        1    0.000    0.000    0.000    0.000 sysconfig.py:219(is_python_build)
        1    0.000    0.000    0.000    0.000 sampler.py:160(WeightedRandomSampler)
        1    0.000    0.000    0.000    0.000 __config__.py:9(DisplayModes)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _index.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:370(Binomial)
       12    0.000    0.000    0.000    0.000 core.py:6117(<lambda>)
        1    0.000    0.000    0.000    0.000 _polyint.py:116(_set_yi)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2630(FigureManagerBase)
        1    0.000    0.000    0.000    0.000 riccati.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:1006(SSLSocket)
        1    0.000    0.000    0.000    0.000 base_futures.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing.py:611(ClassVar)
        6    0.000    0.000    0.000    0.000 rcsetup.py:617(validate_joinstyle)
        4    0.000    0.000    0.000    0.000 vmap.py:30(doesnt_support_saved_tensors_hooks)
        5    0.000    0.000    0.000    0.000 symbolic_opset9.py:2119(wrap_logical_op_with_negation)
       32    0.000    0.000    0.000    0.000 decorators.py:202(wrapper)
        9    0.000    0.000    0.000    0.000 deprecation.py:433(<listcomp>)
      102    0.000    0.000    0.000    0.000 patches.py:1878(<genexpr>)
        9    0.000    0.000    0.000    0.000 pythonmpq.py:93(_new_check)
        1    0.000    0.000    0.000    0.000 dist.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2037(expon_gen)
        1    0.000    0.000    0.000    0.000 _structures.py:1(<module>)
       66    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 numeric.py:2123(identity)
        1    0.000    0.000    0.000    0.000 core.py:1103(enable_packrat)
        1    0.000    0.000    0.000    0.000 __init__.py:1145(RETURN_TYPE)
        1    0.000    0.000    0.000    0.000 __init__.py:491(_parse_visible_devices)
        1    0.000    0.000    0.000    0.000 _mstats_extras.py:1(<module>)
      235    0.000    0.000    0.000    0.000 basic.py:324(_hashable_content)
        1    0.000    0.000    0.000    0.000 core.py:3494(__init__)
        1    0.000    0.000    0.000    0.000 refine.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataset.py:63(IterableDataset)
        5    0.000    0.000    0.000    0.000 decorator.py:127(update)
        1    0.000    0.000    0.000    0.000 json.py:46(_load_redirect)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elffile.py:23(EIClass)
        7    0.000    0.000    0.000    0.000 core.py:4767(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 lowrank_multivariate_normal.py:48(LowRankMultivariateNormal)
        6    0.000    0.000    0.000    0.000 numbers.py:3598(__hash__)
        3    0.000    0.000    0.000    0.000 _common.py:132(_validate_fromutc_inputs)
        1    0.000    0.000    0.000    0.000 codeprinter.py:53(CodePrinter)
       30    0.000    0.000    0.000    0.000 warnings.py:440(__init__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3643(_pxf_dispatch)
        1    0.000    0.000    0.000    0.000 __config__.py:14(DisplayModes)
        1    0.000    0.000    0.000    0.000 core.py:3589(__init__)
        1    0.000    0.000    0.000    0.000 densetools.py:1(<module>)
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:473(_get_endpoint_str)
       58    0.000    0.000    0.000    0.000 __init__.py:795(__init__)
      216    0.000    0.000    0.000    0.000 _adapters.py:43(redent)
        1    0.000    0.000    0.000    0.000 animation.py:789(HTMLWriter)
        1    0.000    0.000    0.000    0.000 base_tasks.py:1(<module>)
        3    0.000    0.000    0.000    0.000 numeric.py:67(zeros_like)
        1    0.000    0.000    0.000    0.000 patches.py:19(Patch)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_property_file_references.py:15(ExternalPropertyFileReferences)
        1    0.000    0.000    0.000    0.000 datapipe.py:377(DataChunk)
        1    0.000    0.000    0.000    0.000 categorical.py:9(Categorical)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:80(MultivariateNormal)
       25    0.000    0.000    0.000    0.000 rcsetup.py:773(_validate_greaterequal0_lessequal1)
        1    0.000    0.000    0.000    0.000 rszeta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dates.py:1124(RRuleLocator)
        4    0.000    0.000    0.000    0.000 fontconfig_pattern.py:158(_property)
      166    0.000    0.000    0.000    0.000 enum.py:897(<lambda>)
        2    0.000    0.000    0.000    0.000 rcsetup.py:130(_validate_date)
       93    0.000    0.000    0.000    0.000 _inspect.py:131(strseq)
        1    0.000    0.000    0.000    0.000 __init__.py:1243(__init__)
       57    0.000    0.000    0.000    0.000 core.py:4169(<genexpr>)
        2    0.000    0.000    0.000    0.000 {built-in method _ctypes.POINTER}
        1    0.000    0.000    0.000    0.000 patches.py:1375(Ellipse)
        1    0.000    0.000    0.000    0.000 activation.py:15(MultiheadAttention)
       14    0.000    0.000    0.000    0.000 constraints.py:175(__call__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9038(rayleigh_gen)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4810(OrderStatisticDistribution)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:227(_SpecialForm)
        1    0.000    0.000    0.000    0.000 {built-in method uarray._uarray.set_global_backend}
        1    0.000    0.000    0.000    0.000 format.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _hook_iterator.py:110(IteratorDecorator)
        3    0.000    0.000    0.000    0.000 monkey.py:26(_get_mro)
        1    0.000    0.000    0.000    0.000 result.py:24(TestResult)
        1    0.000    0.000    0.000    0.000 approximants.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:14(decorator)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6801(lognorm_gen)
        6    0.000    0.000    0.000    0.000 basic.py:147(_get_postprocessors_for_type)
       78    0.000    0.000    0.000    0.000 inspect.py:480(iscode)
      101    0.000    0.000    0.000    0.000 _meta_registrations.py:32(register_meta)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _at.py:52(Undef)
        1    0.000    0.000    0.000    0.000 glob.py:191(_lexists)
       46    0.000    0.000    0.000    0.000 six.py:110(__init__)
       12    0.000    0.000    0.000    0.000 _basic.py:3032(<genexpr>)
       23    0.000    0.000    0.000    0.000 functools.py:966(__init__)
       97    0.000    0.000    0.000    0.000 core.py:6163(<genexpr>)
        1    0.000    0.000    0.000    0.000 _tzpath.py:5(reset_tzpath)
        2    0.000    0.000    0.000    0.000 realfield.py:121(dtype)
       24    0.000    0.000    0.000    0.000 pickletools.py:193(__init__)
        5    0.000    0.000    0.000    0.000 _version.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trsock.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:327(<listcomp>)
        6    0.000    0.000    0.000    0.000 _methods.py:55(_any)
        1    0.000    0.000    0.000    0.000 __init__.py:1076(__init__)
        1    0.000    0.000    0.000    0.000 _exception.py:16(Exception)
       21    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3308(__new__)
        1    0.000    0.000    0.000    0.000 dev.py:1(<module>)
      4/2    0.000    0.000    0.000    0.000 _aliases.py:594(isdtype)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:70(_icdf_formula)
        1    0.000    0.000    0.000    0.000 _iotools.py:450(StringConverter)
        3    0.000    0.000    0.000    0.000 __init__.py:503(PYFUNCTYPE)
       59    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 tools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:1(<module>)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:328(impl_decorator)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3605(_pmf_formula)
       17    0.000    0.000    0.000    0.000 _multivariate.py:216(__init__)
        5    0.000    0.000    0.000    0.000 quadrature.py:461(__init__)
        1    0.000    0.000    0.000    0.000 ctx_base.py:24(StandardBaseContext)
       18    0.000    0.000    0.000    0.000 {method 'tolist' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       44    0.000    0.000    0.000    0.000 unicode.py:17(<genexpr>)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:440(__repr__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8375(pearson3_gen)
        1    0.000    0.000    0.000    0.000 _script.py:1506(_ScriptProfileTable)
        4    0.000    0.000    0.000    0.000 __init__.py:353(get_device_name)
        1    0.000    0.000    0.000    0.000 _qap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 error_functions.py:49(erf)
        1    0.000    0.000    0.000    0.000 pde.py:1(<module>)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:281(Application)
       55    0.000    0.000    0.000    0.000 __init__.py:382(_make_elementwise_unary_reference)
        1    0.000    0.000    0.000    0.000 polyutils.py:188(<listcomp>)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:150(_families)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_reference.py:15(ReportingDescriptorReference)
        1    0.000    0.000    0.000    0.000 _rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:177(update_user_library)
        1    0.000    0.000    0.000    0.000 deltafunctions.py:1(<module>)
       26    0.000    0.000    0.000    0.000 {method 'fullmatch' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:221(<listcomp>)
        1    0.000    0.000    0.000    0.000 unicode.py:75(nums)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:71(_DTypeDict)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8574(powerlaw_gen)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:153(__new__)
        4    0.000    0.000    0.000    0.000 rrule.py:80(_invalidates_cache)
      195    0.000    0.000    0.000    0.000 permutations.py:2083(<genexpr>)
        1    0.000    0.000    0.000    0.000 interval_membership.py:1(<module>)
      161    0.000    0.000    0.000    0.000 util.py:242(escape_re_range_char)
        1    0.000    0.000    0.000    0.000 getopt.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _matrix.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _ops.py:130(inner)
        1    0.000    0.000    0.000    0.000 _common.py:42(resolve)
       90    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        3    0.000    0.000    0.000    0.000 coroutines.py:21(iscoroutinefunction)
        3    0.000    0.000    0.000    0.000 __init__.py:435(validate)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:1(<module>)
        4    0.000    0.000    0.000    0.000 platform.py:1003(_sys_version)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3968(genhyperbolic_gen)
        1    0.000    0.000    0.000    0.000 _fourier.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:253(escape)
        1    0.000    0.000    0.000    0.000 perm_groups.py:26(PermutationGroup)
        1    0.000    0.000    0.000    0.000 _complex.py:13(Complex)
        1    0.000    0.000    0.000    0.000 _subplots.py:199(subplot_class_factory)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:368(__new__)
        1    0.000    0.000    0.000    0.000 error_functions.py:2383(fresnels)
       18    0.000    0.000    0.000    0.000 conflict.py:30(<genexpr>)
       25    0.000    0.000    0.000    0.000 {built-in method _struct.calcsize}
        2    0.000    0.000    0.000    0.000 quantize_jit.py:1(<module>)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3600(_overrides)
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:524(ToolViewsPositions)
        4    0.000    0.000    0.000    0.000 isoparser.py:22(_takes_ascii)
        1    0.000    0.000    0.000    0.000 <frozen posixpath>:174(lexists)
        1    0.000    0.000    0.000    0.000 _typing.py:248(_DataPipeMeta)
        1    0.000    0.000    0.000    0.000 simpledomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 timestamp.py:1(<module>)
       17    0.000    0.000    0.000    0.000 <frozen _collections_abc>:78(_check_methods)
        1    0.000    0.000    0.000    0.000 sampler.py:64(SequentialSampler)
        6    0.000    0.000    0.000    0.000 _jit_internal.py:895(get_class_name_lineno)
       19    0.000    0.000    0.000    0.000 {method 'round' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 _basic_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:1(<module>)
       81    0.000    0.000    0.000    0.000 __init__.py:25(decorator)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:171(<lambda>)
        2    0.000    0.000    0.000    0.000 blas.py:388(_memoize_get_funcs)
       13    0.000    0.000    0.000    0.000 enum.py:901(<dictcomp>)
       89    0.000    0.000    0.000    0.000 functions.py:81(defun_wrapped)
        4    0.000    0.000    0.000    0.000 symbolic_opset9.py:787(overload_by_arg_count)
        1    0.000    0.000    0.000    0.000 lobpcg.py:1(<module>)
       81    0.000    0.000    0.000    0.000 __init__.py:14(set_module)
        1    0.000    0.000    0.000    0.000 series_class.py:11(SeriesBase)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:311(SizeMap)
        1    0.000    0.000    0.000    0.000 egyptian_fraction.py:1(<module>)
        1    0.000    0.000    0.000    0.000 results.py:39(ParseResults)
        1    0.000    0.000    0.000    0.000 timeit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 singularities.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fractions.py:38(Fraction)
       24    0.000    0.000    0.000    0.000 datapipe.py:133(register_datapipe_as_function)
        1    0.000    0.000    0.000    0.000 _thread_flow_location.py:19(ThreadFlowLocation)
        1    0.000    0.000    0.000    0.000 _ndimage_api.py:16(<listcomp>)
        1    0.000    0.000    0.000    0.000 py39.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:609(bell)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:313(quantized_args)
        1    0.000    0.000    0.000    0.000 gzip.py:327(close)
       42    0.000    0.000    0.000    0.000 typing.py:266(_check_generic)
        1    0.000    0.000    0.000    0.000 realtransforms.py:1(<module>)
        8    0.000    0.000    0.000    0.000 sympify.py:78(_is_numpy_instance)
        1    0.000    0.000    0.000    0.000 differentiation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bessel.py:1374(airyai)
        8    0.000    0.000    0.000    0.000 _nonlin.py:119(_set_doc)
      257    0.000    0.000    0.000    0.000 hmac.py:19(<genexpr>)
       36    0.000    0.000    0.000    0.000 _string_helpers.py:16(english_lower)
       53    0.000    0.000    0.000    0.000 six.py:182(_add_module)
       24    0.000    0.000    0.000    0.000 calculus.py:4(defun)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:780(exec_module)
        1    0.000    0.000    0.000    0.000 __init__.py:850(TarInfo)
       45    0.000    0.000    0.000    0.000 {built-in method torch._C.containedTypes}
        2    0.000    0.000    0.000    0.000 __init__.py:912(createLock)
        1    0.000    0.000    0.000    0.000 _async.py:1(<module>)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:804(_reduce_with_dtype)
       97    0.000    0.000    0.000    0.000 docstring.py:63(copy)
        1    0.000    0.000    0.000    0.000 geometric.py:11(Geometric)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2797(acot)
       24    0.000    0.000    0.000    0.000 numerictypes.py:514(_scalar_type_key)
       13    0.000    0.000    0.000    0.000 enum.py:1337(_iter_member_by_value_)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:165(_icdf_formula)
       15    0.000    0.000    0.000    0.000 proxy.py:524(_define_reflectable)
       18    0.000    0.000    0.000    0.000 _ops.py:31(_apply_docstring_templates)
        7    0.000    0.000    0.000    0.000 _aliases.py:447(reshape)
        5    0.000    0.000    0.000    0.000 functools.py:191(<setcomp>)
        3    0.000    0.000    0.000    0.000 typing.py:856(_evaluate)
        1    0.000    0.000    0.000    0.000 exponential.py:607(log)
       26    0.000    0.000    0.000    0.000 core.py:4417(<genexpr>)
        1    0.000    0.000    0.000    0.000 pickle.py:1137(_Unpickler)
        1    0.000    0.000    0.000    0.000 _artifact.py:17(Artifact)
        2    0.000    0.000    0.000    0.000 __init__.py:393(__getitem__)
        1    0.000    0.000    0.000    0.000 matmul.py:24(MatMul)
        1    0.000    0.000    0.000    0.000 sysconfig.py:719(get_platform)
        1    0.000    0.000    0.000    0.000 geo.py:14(GeoAxes)
        1    0.000    0.000    0.000    0.000 _censored_data.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {built-in method _csv.register_dialect}
        3    0.000    0.000    0.000    0.000 _new_distributions.py:394(_pmf_formula)
        1    0.000    0.000    0.000    0.000 _elffile.py:28(EIData)
        1    0.000    0.000    0.000    0.000 pin_memory.py:1(<module>)
       90    0.000    0.000    0.000    0.000 basic.py:442(class_key)
        1    0.000    0.000    0.000    0.000 <string>:2(__div__)
        1    0.000    0.000    0.000    0.000 core.py:170(iter_user_libraries)
        1    0.000    0.000    0.000    0.000 cmd.py:34(Command)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9339(irwinhall_gen)
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
      208    0.000    0.000    0.000    0.000 multiarray.py:503(can_cast)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:128(Blend)
        1    0.000    0.000    0.000    0.000 dogbox.py:1(<module>)
       28    0.000    0.000    0.000    0.000 power.py:803(as_base_exp)
       16    0.000    0.000    0.000    0.000 pretty_symbology.py:169(<lambda>)
       55    0.000    0.000    0.000    0.000 <frozen codecs>:260(__init__)
        4    0.000    0.000    0.000    0.000 platform.py:826(uname)
        4    0.000    0.000    0.000    0.000 random.py:797(getrandbits)
       11    0.000    0.000    0.000    0.000 init.py:531(_make_deprecate)
        2    0.000    0.000    0.000    0.000 tree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:153(sinh)
        1    0.000    0.000    0.000    0.000 arrayterator.py:1(<module>)
        3    0.000    0.000    0.000    0.000 feedparser.py:197(_new_message)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9661(skewnorm_gen)
        1    0.000    0.000    0.000    0.000 bessel.py:1546(airybi)
        1    0.000    0.000    0.000    0.000 dates.py:1475(YearLocator)
       30    0.000    0.000    0.000    0.000 binary.py:162(_torch_inplace_binary)
        2    0.000    0.000    0.000    0.000 core.py:3529(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4238(<dictcomp>)
        1    0.000    0.000    0.000    0.000 formatting.py:1(<module>)
       82    0.000    0.000    0.000    0.000 typing.py:2823(<genexpr>)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2149(_overrides)
        1    0.000    0.000    0.000    0.000 tag.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decorators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _milp.py:1(<module>)
      174    0.000    0.000    0.000    0.000 _docscrape.py:724(_is_show_member)
        1    0.000    0.000    0.000    0.000 trigonometric.py:553(cos)
        1    0.000    0.000    0.000    0.000 tensor.py:3394(TensMul)
        2    0.000    0.000    0.000    0.000 datetime.py:765(__neg__)
        1    0.000    0.000    0.000    0.000 numerictypes.py:441(_construct_lookups)
      230    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 elliptic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:568(parser)
        1    0.000    0.000    0.000    0.000 libintmath.py:89(<listcomp>)
       96    0.000    0.000    0.000    0.000 {built-in method math.isclose}
        1    0.000    0.000    0.000    0.000 domainelement.py:1(<module>)
       56    0.000    0.000    0.000    0.000 patches.py:1901(_register_style)
        1    0.000    0.000    0.000    0.000 threading.py:849(__init__)
       32    0.000    0.000    0.000    0.000 __init__.py:150(<genexpr>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:915(tan)
        2    0.000    0.000    0.000    0.000 multidimensional.py:93(__call__)
        3    0.000    0.000    0.000    0.000 expr.py:220(__neg__)
        8    0.000    0.000    0.000    0.000 ctx_iv.py:30(convert_mpf_)
      122    0.000    0.000    0.000    0.000 core.py:2459(__getnewargs__)
        1    0.000    0.000    0.000    0.000 epathtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:367(<listcomp>)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:12(ContinuousBernoulli)
        1    0.000    0.000    0.000    0.000 rationalfield.py:14(RationalField)
        1    0.000    0.000    0.000    0.000 Image.py:185(Palette)
       38    0.000    0.000    0.000    0.000 __init__.py:23(<genexpr>)
        1    0.000    0.000    0.000    0.000 Lattice.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _region.py:16(Region)
      187    0.000    0.000    0.000    0.000 boolalg.py:365(__bool__)
        2    0.000    0.000    0.000    0.000 traceback.py:439(from_list)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3028(_sample_dispatch)
        1    0.000    0.000    0.000    0.000 tarfile.py:715(TarInfo)
      130    0.000    0.000    0.000    0.000 __init__.py:247(<genexpr>)
        1    0.000    0.000    0.000    0.000 limitseq.py:1(<module>)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:472(<listcomp>)
        1    0.000    0.000    0.000    0.000 bernoulli.py:12(Bernoulli)
        1    0.000    0.000    0.000    0.000 matrix_element.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:1(<module>)
       12    0.000    0.000    0.000    0.000 rcsetup.py:200(validate_axisbelow)
       40    0.000    0.000    0.000    0.000 libmpf.py:208(_normalize1)
        4    0.000    0.000    0.000    0.000 __init__.py:511(cast)
        1    0.000    0.000    0.000    0.000 triangulation.py:1(<module>)
       28    0.000    0.000    0.000    0.000 numerictypes.py:283(issubclass_)
       39    0.000    0.000    0.000    0.000 functools.py:421(_unwrap_partial)
       35    0.000    0.000    0.000    0.000 core.py:13(dispatch)
        3    0.000    0.000    0.000    0.000 datetime.py:1673(__new__)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:18(numeric_type_aliases)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _globals.py:24(__init__)
        1    0.000    0.000    0.000    0.000 expintegrals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _infra.py:270(__post_init__)
        1    0.000    0.000    0.000    0.000 permutations.py:473(Permutation)
        4    0.000    0.000    0.000    0.000 enum.py:1727(<listcomp>)
        1    0.000    0.000    0.000    0.000 inputs.py:1212(Kpoints)
        1    0.000    0.000    0.000    0.000 signal_handling.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <frozen os>:48(<listcomp>)
        2    0.000    0.000    0.000    0.000 numbers.py:408(__float__)
        1    0.000    0.000    0.000    0.000 _await.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _waveforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 frontend.py:682(ExprBuilder)
        1    0.000    0.000    0.000    0.000 PaletteFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1236(DMP_Python)
        1    0.000    0.000    0.000    0.000 domain.py:18(Domain)
        4    0.000    0.000    0.000    0.000 shape_base.py:23(atleast_1d)
        1    0.000    0.000    0.000    0.000 sorting.py:1(<module>)
        5    0.000    0.000    0.000    0.000 perm_groups.py:149(__init__)
        3    0.000    0.000    0.000    0.000 arrayprint.py:64(_make_options_dict)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2110(asin)
        1    0.000    0.000    0.000    0.000 dfm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:934(_scandir)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:55(_pdf_formula)
        1    0.000    0.000    0.000    0.000 series.py:126(BaseSeries)
        1    0.000    0.000    0.000    0.000 para4band.py:453(<listcomp>)
      257    0.000    0.000    0.000    0.000 hmac.py:20(<genexpr>)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2836(min)
        1    0.000    0.000    0.000    0.000 powerset.py:10(PowerSet)
        1    0.000    0.000    0.000    0.000 trigonometric.py:243(sin)
        1    0.000    0.000    0.000    0.000 mock.py:402(NonCallableMock)
        1    0.000    0.000    0.000    0.000 pyplot.py:1891(colormaps)
        1    0.000    0.000    0.000    0.000 function.py:382(Function)
        1    0.000    0.000    0.000    0.000 property.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:365(cosh)
       18    0.000    0.000    0.000    0.000 pickletools.py:961(__init__)
        3    0.000    0.000    0.000    0.000 _stats.py:14(count)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:628(<dictcomp>)
        4    0.000    0.000    0.000    0.000 _pep440.py:437(_cmpkey)
       41    0.000    0.000    0.000    0.000 typing.py:2885(_namedtuple_mro_entries)
        4    0.000    0.000    0.000    0.000 uuid.py:139(__init__)
        9    0.000    0.000    0.000    0.000 overrides.py:23(set_array_function_like_doc)
        1    0.000    0.000    0.000    0.000 pycode.py:753(MpmathPrinter)
        3    0.000    0.000    0.000    0.000 message.py:409(__getitem__)
        1    0.000    0.000    0.000    0.000 odes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:4055(And)
       62    0.000    0.000    0.000    0.000 _bunch.py:128(<genexpr>)
       28    0.000    0.000    0.000    0.000 inspect.py:2211(parse_name)
        1    0.000    0.000    0.000    0.000 mathml.py:547(MathMLPresentationPrinter)
       85    0.000    0.000    0.000    0.000 __init__.py:185(keys)
        2    0.000    0.000    0.000    0.000 __init__.py:394(pass_none)
        1    0.000    0.000    0.000    0.000 _norm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parallel_apply.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parametrizations.py:288(_SpectralNorm)
       15    0.000    0.000    0.000    0.000 decorator.py:132(doctest_depends_on)
        1    0.000    0.000    0.000    0.000 _qmc.py:1117(Halton)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:611(tanh)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1255(cot)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:276(__init__)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 plot_implicit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dist.py:244(Distribution)
       16    0.000    0.000    0.000    0.000 doccer.py:126(_doc)
      169    0.000    0.000    0.000    0.000 contextlib.py:428(__enter__)
       28    0.000    0.000    0.000    0.000 {built-in method posix._path_normpath}
        1    0.000    0.000    0.000    0.000 str.py:20(StrPrinter)
        1    0.000    0.000    0.000    0.000 anchor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ast.py:82(_convert)
        1    0.000    0.000    0.000    0.000 discovery.py:210(FlatLayoutPackageFinder)
        1    0.000    0.000    0.000    0.000 lib_interval.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:112(_WindowsFlavour)
        1    0.000    0.000    0.000    0.000 core.py:336(AffineScalarFunc)
        1    0.000    0.000    0.000    0.000 scalarbool.py:1(<module>)
        1    0.000    0.000    0.000    0.000 continued_fraction.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1884(asech)
        1    0.000    0.000    0.000    0.000 Image.py:3874(_apply_env_variables)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2343(acos)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9162(reciprocal_gen)
        1    0.000    0.000    0.000    0.000 tensor.py:2845(Tensor)
        1    0.000    0.000    0.000    0.000 dates.py:1230(AutoDateLocator)
        1    0.000    0.000    0.000    0.000 image.py:215(_ImageBase)
        1    0.000    0.000    0.000    0.000 pyplot.py:111(install_repl_displayhook)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1384(acosh)
        1    0.000    0.000    0.000    0.000 engine.py:177(DiagnosticContext)
        1    0.000    0.000    0.000    0.000 ratsimp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:1045(Derivative)
       30    0.000    0.000    0.000    0.000 _type_aliases.py:203(_add_array_type)
        1    0.000    0.000    0.000    0.000 _polyint.py:136(_set_dtype)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1017(<listcomp>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3246(acsc)
        6    0.000    0.000    0.000    0.000 numeric.py:274(full)
        1    0.000    0.000    0.000    0.000 text.py:1521(Annotation)
       21    0.000    0.000    0.000    0.000 fancy_getopt.py:443(translate_longopt)
        1    0.000    0.000    0.000    0.000 inputs.py:2869(Potcar)
        1    0.000    0.000    0.000    0.000 timeutils.py:37(__do_timings)
        3    0.000    0.000    0.000    0.000 result.py:12(failfast)
       18    0.000    0.000    0.000    0.000 transforms.py:52(_make_str_method)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3040(_sample_inverse_transform)
        1    0.000    0.000    0.000    0.000 uniform.py:11(Uniform)
        1    0.000    0.000    0.000    0.000 reader.py:59(Reader)
        1    0.000    0.000    0.000    0.000 boolalg.py:972(Xor)
        1    0.000    0.000    0.000    0.000 euler.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:22(<listcomp>)
       22    0.000    0.000    0.000    0.000 typing.py:913(_is_typevar_like)
        1    0.000    0.000    0.000    0.000 error_functions.py:288(erfc)
        1    0.000    0.000    0.000    0.000 axis3d.py:35(Axis)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3176(ndim)
        1    0.000    0.000    0.000    0.000 _array_api_compat_vendor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _polyint.py:533(BarycentricInterpolator)
        1    0.000    0.000    0.000    0.000 unicode.py:236(Japanese)
        2    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
       23    0.000    0.000    0.000    0.000 <frozen os>:817(fsdecode)
        1    0.000    0.000    0.000    0.000 random.py:358(randint)
       12    0.000    0.000    0.000    0.000 functools.py:355(__init__)
      115    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 trigonometric.py:1800(csc)
        2    0.000    0.000    0.000    0.000 conflict.py:39(<listcomp>)
        1    0.000    0.000    0.000    0.000 _realtransforms_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 para4band.py:452(<listcomp>)
        1    0.000    0.000    0.000    0.000 error_functions.py:482(erfi)
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:301(wrapper)
        1    0.000    0.000    0.000    0.000 _qmc.py:1286(LatinHypercube)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4259(gumbel_r_gen)
        6    0.000    0.000    0.000    0.000 operations.py:135(_new_rawargs)
        3    0.000    0.000    0.000    0.000 __init__.py:863(_addHandlerRef)
        1    0.000    0.000    0.000    0.000 sym_operation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:95(take)
        1    0.000    0.000    0.000    0.000 primetest.py:1(<module>)
       30    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 pprint.py:106(PrettyPrinter)
       20    0.000    0.000    0.000    0.000 __init__.py:2254(_check_in_list)
        1    0.000    0.000    0.000    0.000 _address.py:12(Address)
        1    0.000    0.000    0.000    0.000 linalg.py:39(EigResult)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {built-in method posix.putenv}
        1    0.000    0.000    0.000    0.000 _constrained_layout.py:1(<module>)
        1    0.000    0.000    0.000    0.000 subprocess.py:693(_use_posix_spawn)
       21    0.000    0.000    0.000    0.000 _codata.py:2127(value)
       78    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
        1    0.000    0.000    0.000    0.000 calendar.py:52(_localized_month)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:1(<module>)
       87    0.000    0.000    0.000    0.000 kl.py:822(<lambda>)
        1    0.000    0.000    0.000    0.000 _serialization.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1159(_cdf2_input_validation)
        3    0.000    0.000    0.000    0.000 inspect.py:409(iscoroutinefunction)
        1    0.000    0.000    0.000    0.000 table.py:232(Table)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:71(_from_ctypes_scalar)
        1    0.000    0.000    0.000    0.000 bvls.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:23(<listcomp>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1689(<lambda>)
       26    0.000    0.000    0.000    0.000 inspect.py:1172(__init__)
        9    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3622(_overrides)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1206(asinh)
        1    0.000    0.000    0.000    0.000 normalforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:720(add_condition)
      138    0.000    0.000    0.000    0.000 core.py:809(postParse)
       28    0.000    0.000    0.000    0.000 typing_extensions.py:486(_is_dunder)
        1    0.000    0.000    0.000    0.000 printing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:824(coth)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:125(StandardNormal)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:490(_SpecialGenericAlias)
       56    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
        1    0.000    0.000    0.000    0.000 eigen_symmetric.py:1(<module>)
       14    0.000    0.000    0.000    0.000 numeric.py:1380(<listcomp>)
        1    0.000    0.000    0.000    0.000 sqfreetools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:39(_get_running_interactive_framework)
        1    0.000    0.000    0.000    0.000 numbers.py:189(fibonacci)
        1    0.000    0.000    0.000    0.000 scanner.py:71(Scanner)
        1    0.000    0.000    0.000    0.000 transforms.py:995(CatTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:22(<listcomp>)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 approximation.py:1(<module>)
        9    0.000    0.000    0.000    0.000 _ops.py:545(__init__)
        1    0.000    0.000    0.000    0.000 error_functions.py:2544(fresnelc)
        2    0.000    0.000    0.000    0.000 sparsetools.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:3767(__init__)
        1    0.000    0.000    0.000    0.000 Orbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2697(weibull_min_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:727(DistributionFinder)
        1    0.000    0.000    0.000    0.000 pathlib.py:455(PurePath)
        1    0.000    0.000    0.000    0.000 dos.py:644(CompleteDos)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1141(sech)
       36    0.000    0.000    0.000    0.000 __init__.py:884(_make_elementwise_binary_reference)
        1    0.000    0.000    0.000    0.000 mathtext.py:966(StixFonts)
        1    0.000    0.000    0.000    0.000 generate.py:45(__init__)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1070(csch)
        1    0.000    0.000    0.000    0.000 __init__.py:118(<listcomp>)
        1    0.000    0.000    0.000    0.000 patches.py:1001(Polygon)
        1    0.000    0.000    0.000    0.000 symbol.py:524(Wild)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1572(atanh)
        1    0.000    0.000    0.000    0.000 patches.py:1095(Wedge)
      144    0.000    0.000    0.000    0.000 periodic_table.py:1519(oxi_state)
        2    0.000    0.000    0.000    0.000 types.py:247(coroutine)
        1    0.000    0.000    0.000    0.000 groebnertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:63(__init__)
        1    0.000    0.000    0.000    0.000 _onenormest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3015(asec)
        1    0.000    0.000    0.000    0.000 bessel.py:1028(yn)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:150(_pdf_formula)
        1    0.000    0.000    0.000    0.000 Files_out.py:1(<module>)
        1    0.000    0.000    0.000    0.000 densearith.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dirichlet.py:16(_Dirichlet)
        2    0.000    0.000    0.000    0.000 datetime.py:923(__new__)
       58    0.000    0.000    0.000    0.000 results.py:269(__bool__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:513(__str__)
        1    0.000    0.000    0.000    0.000 __init__.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 patches.py:1347(CirclePolygon)
       32    0.000    0.000    0.000    0.000 _type_aliases.py:46(<genexpr>)
       14    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)
        1    0.000    0.000    0.000    0.000 __init__.py:136(script_if_tracing)
        1    0.000    0.000    0.000    0.000 events.py:203(AbstractEventLoop)
        2    0.000    0.000    0.000    0.000 core.py:2952(_update_from)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:2080(acsch)
        1    0.000    0.000    0.000    0.000 itt.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:3302(MathTextParser)
        1    0.000    0.000    0.000    0.000 reductions.py:151(<dictcomp>)
        3    0.000    0.000    0.000    0.000 six.py:96(__get__)
        1    0.000    0.000    0.000    0.000 _stack.py:16(Stack)
       22    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000    0.000    0.000 _mangling.py:1(<module>)
        1    0.000    0.000    0.000    0.000 multidimensional.py:1(<module>)
       15    0.000    0.000    0.000    0.000 __init__.py:593(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4094(<lambda>)
        5    0.000    0.000    0.000    0.000 datetime.py:515(_check_date_fields)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1692(sec)
       18    0.000    0.000    0.000    0.000 {method 'cast' of 'memoryview' objects}
        2    0.000    0.000    0.000    0.000 __init__.py:16(_deprecation_notice)
        1    0.000    0.000    0.000    0.000 _notification.py:18(Notification)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3545(gamma_gen)
       16    0.000    0.000    0.000    0.000 inspect.py:2124(<listcomp>)
        1    0.000    0.000    0.000    0.000 request.py:317(Request)
        1    0.000    0.000    0.000    0.000 mock.py:1256(_patch)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:124(<listcomp>)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:434(mpc_convert_lhs)
        1    0.000    0.000    0.000    0.000 format_helpers.py:1(<module>)
        6    0.000    0.000    0.000    0.000 <frozen genericpath>:121(_splitext)
        1    0.000    0.000    0.000    0.000 _replicated_tensor_ddp_utils.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _mio5_params.py:184(_convert_codecs)
       14    0.000    0.000    0.000    0.000 dispatcher.py:113(__init__)
       44    0.000    0.000    0.000    0.000 core.py:699(<genexpr>)
       18    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:19(type_aliases_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6694(loglaplace_gen)
        1    0.000    0.000    0.000    0.000 _parser.py:1373(_result)
       25    0.000    0.000    0.000    0.000 enum.py:787(__members__)
        9    0.000    0.000    0.000    0.000 <frozen _collections_abc>:516(__subclasshook__)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:89(<listcomp>)
        1    0.000    0.000    0.000    0.000 nvtx.py:1(<module>)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.exec_builtin}
        1    0.000    0.000    0.000    0.000 _lti_conversion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1737(acoth)
        1    0.000    0.000    0.000    0.000 inputs.py:82(Poscar)
        1    0.000    0.000    0.000    0.000 _interpolate.py:434(fill_value)
       15    0.000    0.000    0.000    0.000 _util.py:356(<listcomp>)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:612(_set_prec)
        1    0.000    0.000    0.000    0.000 pydoc.py:565(HTMLDoc)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1381(<listcomp>)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2845(ANP)
        1    0.000    0.000    0.000    0.000 datetime.py:1665(datetime)
       16    0.000    0.000    0.000    0.000 structure.py:230(__iter__)
       20    0.000    0.000    0.000    0.000 mixins.py:16(_binary_method)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6455(logistic_gen)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:123(_add_integer_aliases)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:860(is_pass)
        1    0.000    0.000    0.000    0.000 boolalg.py:1286(Equivalent)
        1    0.000    0.000    0.000    0.000 common.py:449(PMGDir)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:417(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:21(__deprecated_private_func)
        1    0.000    0.000    0.000    0.000 minres.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1713(_identify_parameterization)
        6    0.000    0.000    0.000    0.000 _weakrefset.py:37(__init__)
       41    0.000    0.000    0.000    0.000 representer.py:131(add_representer)
        1    0.000    0.000    0.000    0.000 _compressed.py:25(_cs_matrix)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:11(LogitRelaxedBernoulli)
       10    0.000    0.000    0.000    0.000 inspect.py:1754(currentframe)
       22    0.000    0.000    0.000    0.000 __init__.py:1273(append)
        1    0.000    0.000    0.000    0.000 __init__.py:775(FastPath)
       75    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        1    0.000    0.000    0.000    0.000 _type_aliases.py:74(_add_types)
       89    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 _mio5.py:516(VarWriter5)
       16    0.000    0.000    0.000    0.000 arraypad.py:58(_view_roi)
        1    0.000    0.000    0.000    0.000 reductions.py:154(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10433(truncpareto_gen)
        2    0.000    0.000    0.000    0.000 ordinals.py:81(__new__)
        1    0.000    0.000    0.000    0.000 pathlib.py:667(with_name)
        4    0.000    0.000    0.000    0.000 core.py:5381(_generateDefaultName)
       12    0.000    0.000    0.000    0.000 typing.py:2356(<genexpr>)
        1    0.000    0.000    0.000    0.000 defmatrix.py:73(matrix)
        3    0.000    0.000    0.000    0.000 _codata.py:478(exact2006)
      8/2    0.000    0.000    0.000    0.000 densebasic.py:315(_rec_validate)
        3    0.000    0.000    0.000    0.000 __init__.py:290(__getattr__)
       54    0.000    0.000    0.000    0.000 decorators.py:23(_sympifyit)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:951(FakeTensorMode)
        1    0.000    0.000    0.000    0.000 __init__.py:119(Cycler)
        1    0.000    0.000    0.000    0.000 _coo.py:26(_coo_base)
        3    0.000    0.000    0.000    0.000 _array_api.py:485(xp_ravel)
       12    0.000    0.000    0.000    0.000 arrayprint.py:739(_extendLine)
        1    0.000    0.000    0.000    0.000 __init__.py:1635(TarFile)
        1    0.000    0.000    0.000    0.000 _crash_handler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:1(<module>)
       39    0.000    0.000    0.000    0.000 _jit_internal.py:530(export)
        1    0.000    0.000    0.000    0.000 rules.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _infra.py:36(Tag)
        1    0.000    0.000    0.000    0.000 Files_in.py:1(<module>)
       61    0.000    0.000    0.000    0.000 stride_tricks.py:542(<genexpr>)
        2    0.000    0.000    0.000    0.000 <frozen os>:687(__delitem__)
        1    0.000    0.000    0.000    0.000 quaternion.py:58(Quaternion)
       32    0.000    0.000    0.000    0.000 arraypad.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3758(erlang_gen)
       29    0.000    0.000    0.000    0.000 __init__.py:1830(_str_equal)
        1    0.000    0.000    0.000    0.000 textpath.py:18(TextToPath)
        1    0.000    0.000    0.000    0.000 _state.py:18(__init__)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:475(ProxyTorchDispatchMode)
        1    0.000    0.000    0.000    0.000 sslproto.py:262(SSLProtocol)
        1    0.000    0.000    0.000    0.000 boolalg.py:68(Boolean)
        1    0.000    0.000    0.000    0.000 lsqr.py:1(<module>)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2108(decorator)
        1    0.000    0.000    0.000    0.000 sdm.py:910(convert_to)
       23    0.000    0.000    0.000    0.000 __init__.py:1267(__init__)
        1    0.000    0.000    0.000    0.000 typing.py:1563(__repr__)
        6    0.000    0.000    0.000    0.000 deprecation.py:269(__init__)
        1    0.000    0.000    0.000    0.000 _util.py:671(_workers_wrapper)
        1    0.000    0.000    0.000    0.000 convert_parameters.py:1(<module>)
        1    0.000    0.000    0.000    0.000 more.py:2049(numeric_range)
        1    0.000    0.000    0.000    0.000 patches.py:1510(Circle)
        1    0.000    0.000    0.000    0.000 ssl.py:484(SSLContext)
        1    0.000    0.000    0.000    0.000 _graph_traversal.py:16(GraphTraversal)
        1    0.000    0.000    0.000    0.000 _dtype.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4565(halflogistic_gen)
        2    0.000    0.000    0.000    0.000 typing.py:1211(__init__)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:12(SpectralNorm)
        1    0.000    0.000    0.000    0.000 __init__.py:277(DeprecatedList)
        1    0.000    0.000    0.000    0.000 dot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _gcrotmk.py:1(<module>)
        6    0.000    0.000    0.000    0.000 rcsetup.py:228(_make_type_validator)
        1    0.000    0.000    0.000    0.000 singularityfunctions.py:1(<module>)
       16    0.000    0.000    0.000    0.000 inspect.py:2230(RewriteSymbolics)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:302(_World)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:232(<lambda>)
        3    0.000    0.000    0.000    0.000 intfunc.py:162(igcd)
        6    0.000    0.000    0.000    0.000 rcsetup.py:264(validate_fonttype)
        1    0.000    0.000    0.000    0.000 patches.py:973(PathPatch)
       28    0.000    0.000    0.000    0.000 operations.py:101(<listcomp>)
      115    0.000    0.000    0.000    0.000 dataclasses.py:843(_hash_set_none)
        1    0.000    0.000    0.000    0.000 function.py:818(DefinedFunction)
        1    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 {built-in method posix.uname}
       27    0.000    0.000    0.000    0.000 _testutils.py:86(__init__)
       12    0.000    0.000    0.000    0.000 domain.py:403(convert)
      129    0.000    0.000    0.000    0.000 fromnumeric.py:1021(_argsort_dispatcher)
       18    0.000    0.000    0.000    0.000 traceback.py:310(_original_line)
        3    0.000    0.000    0.000    0.000 _adapters.py:30(__new__)
        1    0.000    0.000    0.000    0.000 matadd.py:19(MatAdd)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:355(_Gamma)
        1    0.000    0.000    0.000    0.000 _quantile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Physics_System.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _version_control_details.py:15(VersionControlDetails)
        2    0.000    0.000    0.000    0.000 {built-in method zlib.decompressobj}
        1    0.000    0.000    0.000    0.000 batch_norm_replacement.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:71(_export_c_types)
        1    0.000    0.000    0.000    0.000 point.py:42(Point)
        1    0.000    0.000    0.000    0.000 main.py:56(YAML)
        1    0.000    0.000    0.000    0.000 convolutions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 engine.py:28(Diagnostic)
        1    0.000    0.000    0.000    0.000 core.py:103(__diag__)
        1    0.000    0.000    0.000    0.000 linalg.py:55(SVDResult)
        1    0.000    0.000    0.000    0.000 _savitzky_golay.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8154(pareto_gen)
        1    0.000    0.000    0.000    0.000 sites.py:28(Site)
       41    0.000    0.000    0.000    0.000 decorators.py:83(call_highest_priority)
        1    0.000    0.000    0.000    0.000 _factories.py:26(__init__)
        1    0.000    0.000    0.000    0.000 _logical_location.py:12(LogicalLocation)
        1    0.000    0.000    0.000    0.000 matrixbase.py:3796(_handle_creation_inputs)
        1    0.000    0.000    0.000    0.000 _mmio.py:248(MMFile)
        1    0.000    0.000    0.000    0.000 decompogen.py:1(<module>)
        1    0.000    0.000    0.000    0.000 filelist.py:21(FileList)
        1    0.000    0.000    0.000    0.000 transforms.py:685(Bbox)
        1    0.000    0.000    0.000    0.000 _common.py:149(_tzinfo)
       26    0.000    0.000    0.000    0.000 inspect.py:752(_is_wrapper)
       43    0.000    0.000    0.000    0.000 dispatcher.py:120(register)
        2    0.000    0.000    0.000    0.000 cache.py:123(_getenv)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1015(<listcomp>)
        1    0.000    0.000    0.000    0.000 observer.py:611(PerChannelMinMaxObserver)
        2    0.000    0.000    0.000    0.000 matexpr.py:81(__new__)
        7    0.000    0.000    0.000    0.000 dev.py:20(deprecated)
       22    0.000    0.000    0.000    0.000 util.py:197(__init__)
        1    0.000    0.000    0.000    0.000 chebyshev.py:1995(Chebyshev)
        1    0.000    0.000    0.000    0.000 _trace.py:1215(_script_if_tracing)
        1    0.000    0.000    0.000    0.000 tensor.py:1984(TensExpr)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4391(gumbel_l_gen)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1596(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:209(_InverseTransform)
        1    0.000    0.000    0.000    0.000 pythonrational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 frontend.py:531(StmtBuilder)
        1    0.000    0.000    0.000    0.000 numpy.py:37(NumPyPrinter)
        3    0.000    0.000    0.000    0.000 core.py:708(add_parse_action)
       30    0.000    0.000    0.000    0.000 _array_api.py:525(<listcomp>)
        1    0.000    0.000    0.000    0.000 Manager.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _rgi.py:56(RegularGridInterpolator)
        1    0.000    0.000    0.000    0.000 linalg.py:47(QRResult)
        3    0.000    0.000    0.000    0.000 _aliases.py:612(<genexpr>)
        1    0.000    0.000    0.000    0.000 computed_entries.py:696(GibbsComputedStructureEntry)
        1    0.000    0.000    0.000    0.000 _result_provenance.py:15(ResultProvenance)
       24    0.000    0.000    0.000    0.000 ctx_iv.py:397(make_mpf)
        1    0.000    0.000    0.000    0.000 rnn.py:518(GRU)
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:5(_ProbabilityDistribution)
        1    0.000    0.000    0.000    0.000 qp_subproblem.py:1(<module>)
       16    0.000    0.000    0.000    0.000 _collections.py:23(freeze)
        1    0.000    0.000    0.000    0.000 coreerrors.py:14(LazyExceptionMessage)
        1    0.000    0.000    0.000    0.000 __init__.py:638(levy_stable_gen)
        1    0.000    0.000    0.000    0.000 _laplacian.py:1(<module>)
        4    0.000    0.000    0.000    0.000 <frozen os>:1080(__subclasshook__)
        1    0.000    0.000    0.000    0.000 core.py:87(Magmom)
        1    0.000    0.000    0.000    0.000 tarfile.py:1445(TarFile)
        1    0.000    0.000    0.000    0.000 emitter.py:103(Emitter)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:744(FakeTensorConfig)
        2    0.000    0.000    0.000    0.000 version.py:523(_cmpkey)
      134    0.000    0.000    0.000    0.000 six.py:93(__init__)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:397(PythonKeyTracer)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1431(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:1008(_set_tstate_lock)
        1    0.000    0.000    0.000    0.000 representer.py:238(SafeRepresenter)
        1    0.000    0.000    0.000    0.000 _node.py:17(Node)
        1    0.000    0.000    0.000    0.000 client.py:789(HTTPConnection)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:235(<lambda>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:677(rv_generic)
        1    0.000    0.000    0.000    0.000 modular.py:1(<module>)
        5    0.000    0.000    0.000    0.000 assume.py:305(__new__)
        7    0.000    0.000    0.000    0.000 feedparser.py:122(pushlines)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4694(halfnorm_gen)
        1    0.000    0.000    0.000    0.000 calendar.py:54(<listcomp>)
        1    0.000    0.000    0.000    0.000 _dok.py:17(_dok_base)
        1    0.000    0.000    0.000    0.000 linear.py:9(LinearPackedParams)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:2955(motzkin)
        1    0.000    0.000    0.000    0.000 font_manager.py:1022(FontManager)
       25    0.000    0.000    0.000    0.000 decorator.py:251(deprecated)
        1    0.000    0.000    0.000    0.000 threading.py:583(set)
        1    0.000    0.000    0.000    0.000 dbapi2.py:54(register_adapters_and_converters)
        1    0.000    0.000    0.000    0.000 bessel.py:1094(SphericalHankelBase)
        1    0.000    0.000    0.000    0.000 outputs.py:5920(Vaspout)
       79    0.000    0.000    0.000    0.000 reduction.py:43(register)
        1    0.000    0.000    0.000    0.000 outputs.py:1962(Outcar)
        1    0.000    0.000    0.000    0.000 {built-in method posix.readlink}
        1    0.000    0.000    0.000    0.000 std.py:76(TqdmDefaultWriteLock)
        1    0.000    0.000    0.000    0.000 puiseux.py:231(PuiseuxPoly)
        1    0.000    0.000    0.000    0.000 context.py:79(_compose)
        1    0.000    0.000    0.000    0.000 gosper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tz.py:41(tzutc)
       57    0.000    0.000    0.000    0.000 __init__.py:2291(<genexpr>)
        1    0.000    0.000    0.000    0.000 ops.py:726(add_comparative_ops)
        2    0.000    0.000    0.000    0.000 _compression.py:59(close)
       16    0.000    0.000    0.000    0.000 {method 'popitem' of 'dict' objects}
       76    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
        1    0.000    0.000    0.000    0.000 pareto.py:9(Pareto)
        2    0.000    0.000    0.000    0.000 libmpi.py:454(mpi_from_str)
        1    0.000    0.000    0.000    0.000 process.py:71(BaseProcess)
        4    0.000    0.000    0.000    0.000 function_base.py:1804(trim_zeros)
        1    0.000    0.000    0.000    0.000 _rectangle.py:12(Rectangle)
        1    0.000    0.000    0.000    0.000 rk.py:293(RK45)
       50    0.000    0.000    0.000    0.000 typing.py:2018(<genexpr>)
        1    0.000    0.000    0.000    0.000 context.py:30(BaseContext)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:27(merge_dicts)
       20    0.000    0.000    0.000    0.000 rcsetup.py:600(_deprecate_case_insensitive_join_cap)
        1    0.000    0.000    0.000    0.000 core.py:321(condition_as_parse_action)
        1    0.000    0.000    0.000    0.000 _ops.py:597(__init__)
        6    0.000    0.000    0.000    0.000 _policybase.py:94(_append_doc)
       30    0.000    0.000    0.000    0.000 core.py:4416(<genexpr>)
       23    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        1    0.000    0.000    0.000    0.000 resolver.py:106(BaseResolver)
       93    0.000    0.000    0.000    0.000 composition.py:542(num_atoms)
        1    0.000    0.000    0.000    0.000 single.py:42(SingleODEProblem)
        3    0.000    0.000    0.000    0.000 arrayprint.py:403(_get_formatdict)
        1    0.000    0.000    0.000    0.000 residues.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:807(__init__)
        3    0.000    0.000    0.000    0.000 numbers.py:1397(from_coprime_ints)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.generic' objects}
        8    0.000    0.000    0.000    0.000 util.py:119(clear)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:26(_apply)
        2    0.000    0.000    0.000    0.000 datetime.py:1336(__new__)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:31(InternalMatch)
        1    0.000    0.000    0.000    0.000 argparse.py:157(HelpFormatter)
        2    0.000    0.000    0.000    0.000 _utils_internal.py:23(get_file_path)
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:9(MixtureSameFamily)
        1    0.000    0.000    0.000    0.000 linalg.py:43(EighResult)
        1    0.000    0.000    0.000    0.000 mock.py:1960(<setcomp>)
        1    0.000    0.000    0.000    0.000 animation.py:172(AbstractMovieWriter)
        1    0.000    0.000    0.000    0.000 _suppression.py:12(Suppression)
        1    0.000    0.000    0.000    0.000 rnn.py:62(RNNBase)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:91(Tokenizer)
        2    0.000    0.000    0.000    0.000 __init__.py:256(_register_at_fork_reinit_lock)
       32    0.000    0.000    0.000    0.000 typing.py:2906(<genexpr>)
        1    0.000    0.000    0.000    0.000 _methods.py:47(_sum)
        1    0.000    0.000    0.000    0.000 __init__.py:129(Command)
       66    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        8    0.000    0.000    0.000    0.000 rrule.py:77(<genexpr>)
        1    0.000    0.000    0.000    0.000 _cobyla_py.py:1(<module>)
       11    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2035(_preserve_type)
        1    0.000    0.000    0.000    0.000 subprocess.py:747(Popen)
        1    0.000    0.000    0.000    0.000 __init__.py:142(CudnnModule)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2898(_icdf_dispatch)
        5    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
        1    0.000    0.000    0.000    0.000 sslproto.py:78(_SSLProtocolTransport)
        1    0.000    0.000    0.000    0.000 threads.py:1(<module>)
       40    0.000    0.000    0.000    0.000 enum.py:92(_is_single_bit)
        1    0.000    0.000    0.000    0.000 precedence.py:1(<module>)
       13    0.000    0.000    0.000    0.000 {method 'index' of 'tuple' objects}
        4    0.000    0.000    0.000    0.000 libmpf.py:631(mpf_le)
        1    0.000    0.000    0.000    0.000 art3d.py:74(Text3D)
        1    0.000    0.000    0.000    0.000 octave.py:65(OctaveCodePrinter)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:185(IterativeSubproblem)
        1    0.000    0.000    0.000    0.000 futures.py:30(Future)
       15    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.generic' objects}
        3    0.000    0.000    0.000    0.000 libmpf.py:59(prec_to_dps)
        1    0.000    0.000    0.000    0.000 _cubature.py:29(CubatureRegion)
        1    0.000    0.000    0.000    0.000 _lil.py:20(_lil_base)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:117(_sample_formula)
        1    0.000    0.000    0.000    0.000 compat.py:62(with_metaclass)
        1    0.000    0.000    0.000    0.000 rref.py:1(<module>)
       74    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       71    0.000    0.000    0.000    0.000 <frozen _collections_abc>:409(__subclasshook__)
       26    0.000    0.000    0.000    0.000 tokenize.py:616(generate_tokens)
        1    0.000    0.000    0.000    0.000 structure.py:3439(IMolecule)
        1    0.000    0.000    0.000    0.000 animation.py:256(MovieWriter)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2067(_num_parameters)
        8    0.000    0.000    0.000    0.000 __init__.py:56(__init_subclass__)
        1    0.000    0.000    0.000    0.000 lsmr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polynomial.py:1077(poly1d)
        1    0.000    0.000    0.000    0.000 _thread_flow.py:16(ThreadFlow)
        1    0.000    0.000    0.000    0.000 independent.py:9(Independent)
        1    0.000    0.000    0.000    0.000 datetime.py:893(date)
        1    0.000    0.000    0.000    0.000 __init__.py:121(<listcomp>)
       11    0.000    0.000    0.000    0.000 threading.py:90(RLock)
        1    0.000    0.000    0.000    0.000 __init__.py:112(<listcomp>)
        1    0.000    0.000    0.000    0.000 groups.py:66(SymmetryGroup)
       59    0.000    0.000    0.000    0.000 {function FreezableDefaultDict.__missing__ at 0x14f0f079dc60}
        2    0.000    0.000    0.000    0.000 weakref.py:164(__setitem__)
        1    0.000    0.000    0.000    0.000 modularinteger.py:15(ModularInteger)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:119(__repr__)
        1    0.000    0.000    0.000    0.000 common.py:465(<dictcomp>)
       15    0.000    0.000    0.000    0.000 _helpers.py:660(_check_device)
       16    0.000    0.000    0.000    0.000 doccer.py:82(inherit_docstring_from)
        1    0.000    0.000    0.000    0.000 defchararray.py:1922(chararray)
        1    0.000    0.000    0.000    0.000 sets.py:1819(EmptySet)
        1    0.000    0.000    0.000    0.000 rk.py:183(RK23)
        1    0.000    0.000    0.000    0.000 _state.py:23(parse_env)
        1    0.000    0.000    0.000    0.000 finite_diff.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _message.py:12(Message)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:16(SarifLog)
        1    0.000    0.000    0.000    0.000 multinomial.py:11(Multinomial)
        1    0.000    0.000    0.000    0.000 sites.py:289(PeriodicSite)
        8    0.000    0.000    0.000    0.000 copyreg.py:12(pickle)
        1    0.000    0.000    0.000    0.000 legendre.py:1619(Legendre)
        1    0.000    0.000    0.000    0.000 _pade.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:45(enabled)
        7    0.000    0.000    0.000    0.000 {method 'read' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 ImageChops.py:1(<module>)
        2    0.000    0.000    0.000    0.000 charset.py:211(__init__)
        1    0.000    0.000    0.000    0.000 client.py:239(HTTPResponse)
        1    0.000    0.000    0.000    0.000 glsl.py:30(GLSLPrinter)
        3    0.000    0.000    0.000    0.000 feedparser.py:70(close)
        1    0.000    0.000    0.000    0.000 laguerre.py:1606(Laguerre)
        1    0.000    0.000    0.000    0.000 trajectory.py:42(Trajectory)
        1    0.000    0.000    0.000    0.000 _spfun_stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:993(Species)
        1    0.000    0.000    0.000    0.000 subprocess.py:126(CalledProcessError)
        1    0.000    0.000    0.000    0.000 linalg.py:51(SlogdetResult)
        1    0.000    0.000    0.000    0.000 parameter.py:81(UninitializedTensorMixin)
        1    0.000    0.000    0.000    0.000 tz.py:132(tzoffset)
        3    0.000    0.000    0.000    0.000 blas.py:270(find_best_blas_type)
        2    0.000    0.000    0.000    0.000 arrayprint.py:503(decorating_function)
        3    0.000    0.000    0.000    0.000 __init__.py:4998(_make_r_binary_op)
       57    0.000    0.000    0.000    0.000 <frozen _collections_abc>:315(__subclasshook__)
        1    0.000    0.000    0.000    0.000 argparse.py:1142(_SubParsersAction)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:12(RunAutomationDetails)
        1    0.000    0.000    0.000    0.000 function_docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _bsplines.py:69(BSpline)
        3    0.000    0.000    0.000    0.000 six.py:194(find_spec)
       36    0.000    0.000    0.000    0.000 symbol.py:410(_hashable_content)
        1    0.000    0.000    0.000    0.000 _stack_frame.py:12(StackFrame)
        1    0.000    0.000    0.000    0.000 _physical_location.py:17(PhysicalLocation)
       32    0.000    0.000    0.000    0.000 arraypad.py:33(_slice_at_axis)
        1    0.000    0.000    0.000    0.000 theta.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _importlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 debug.py:1(<module>)
        7    0.000    0.000    0.000    0.000 legend_handler.py:136(__init__)
        1    0.000    0.000    0.000    0.000 _script.py:562(RecursiveScriptModule)
        1    0.000    0.000    0.000    0.000 collections.py:1233(RegularPolyCollection)
        1    0.000    0.000    0.000    0.000 testing.py:126(TestParseResultsAsserts)
       93    0.000    0.000    0.000    0.000 {method 'ljust' of 'str' objects}
       56    0.000    0.000    0.000    0.000 __init__.py:1894(<genexpr>)
        2    0.000    0.000    0.000    0.000 selectors.py:583(_can_use)
       14    0.000    0.000    0.000    0.000 util.py:30(__init__)
        9    0.000    0.000    0.000    0.000 __init__.py:163(__new__)
        1    0.000    0.000    0.000    0.000 hb.py:354(HBMatrixType)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._distributed_c10d.set_debug_level_from_env}
        1    0.000    0.000    0.000    0.000 generators.py:1(<module>)
        4    0.000    0.000    0.000    0.000 gaussiandomains.py:56(__neg__)
        1    0.000    0.000    0.000    0.000 setupcfg.py:228(ConfigHandler)
        1    0.000    0.000    0.000    0.000 cse_opts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 case.py:44(_Outcome)
        1    0.000    0.000    0.000    0.000 session.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _helpers.py:310(is_numpy_namespace)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:145(__float__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5028(Mixture)
        1    0.000    0.000    0.000    0.000 selector_events.py:43(BaseSelectorEventLoop)
        1    0.000    0.000    0.000    0.000 __init__.py:939(ByteStorage)
        1    0.000    0.000    0.000    0.000 mathtext.py:642(BakomaFonts)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10826(uniform_gen)
        4    0.000    0.000    0.000    0.000 legend_handler.py:181(__init__)
        1    0.000    0.000    0.000    0.000 _edge.py:12(Edge)
       85    0.000    0.000    0.000    0.000 _compat_pickle.py:167(<genexpr>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:23(RepMatrix)
        1    0.000    0.000    0.000    0.000 ast.py:74(_convert_signed_num)
       36    0.000    0.000    0.000    0.000 _pytree.py:59(_list_unflatten)
       16    0.000    0.000    0.000    0.000 ctx_mp_python.py:597(make_mpf)
        1    0.000    0.000    0.000    0.000 transformed_distribution.py:11(TransformedDistribution)
       41    0.000    0.000    0.000    0.000 typing.py:2835(<listcomp>)
        3    0.000    0.000    0.000    0.000 feedparser.py:53(__init__)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1657(rv_continuous)
        1    0.000    0.000    0.000    0.000 dviread.py:789(PsfontsMap)
        1    0.000    0.000    0.000    0.000 numbers.py:32(Complex)
        7    0.000    0.000    0.000    0.000 core.py:2544(_arraymethod)
        1    0.000    0.000    0.000    0.000 inputs.py:791(Incar)
        1    0.000    0.000    0.000    0.000 _location_relationship.py:12(LocationRelationship)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:425(_reduce_with_dtype)
        1    0.000    0.000    0.000    0.000 dev.py:159(__call__)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:12(ReportingConfiguration)
        1    0.000    0.000    0.000    0.000 gzip.py:529(_read_eof)
        1    0.000    0.000    0.000    0.000 operations.py:29(SymmOp)
        1    0.000    0.000    0.000    0.000 structure.py:4137(Structure)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1013(<listcomp>)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:16(ReportingDescriptorRelationship)
        1    0.000    0.000    0.000    0.000 parser.py:102(Parser)
        1    0.000    0.000    0.000    0.000 settings.py:27(JonesFaithfulTransformation)
        1    0.000    0.000    0.000    0.000 unicode.py:31(unicode_set)
        1    0.000    0.000    0.000    0.000 _decomposition_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1650(HermiteE)
        1    0.000    0.000    0.000    0.000 dir_util.py:30(wrap)
        1    0.000    0.000    0.000    0.000 _script.py:486(ScriptModule)
        1    0.000    0.000    0.000    0.000 _stats_py.py:9096(QuantileTestResult)
        1    0.000    0.000    0.000    0.000 special.py:181(__new__)
        1    0.000    0.000    0.000    0.000 finitefield.py:108(FiniteField)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5334(random_table_gen)
       40    0.000    0.000    0.000    0.000 typing_extensions.py:723(__hash__)
       15    0.000    0.000    0.000    0.000 weakref.py:427(__setitem__)
        1    0.000    0.000    0.000    0.000 conditionset.py:19(ConditionSet)
        1    0.000    0.000    0.000    0.000 conv.py:36(_ConvNd)
        1    0.000    0.000    0.000    0.000 free_groups.py:350(FreeGroupElement)
        2    0.000    0.000    0.000    0.000 __init__.py:12(<listcomp>)
        1    0.000    0.000    0.000    0.000 facts.py:95(deduce_alpha_implications)
        1    0.000    0.000    0.000    0.000 core.py:4918(__init__)
        1    0.000    0.000    0.000    0.000 _survival.py:17(EmpiricalDistributionFunction)
        1    0.000    0.000    0.000    0.000 _csr.py:18(_csr_base)
        1    0.000    0.000    0.000    0.000 operations.py:516(MagSymmOp)
        1    0.000    0.000    0.000    0.000 piecewise.py:65(Piecewise)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:12(EdgeTraversal)
        1    0.000    0.000    0.000    0.000 hermite.py:1658(Hermite)
        1    0.000    0.000    0.000    0.000 computed_entries.py:287(ComputedEntry)
        1    0.000    0.000    0.000    0.000 _graph.py:17(Graph)
        1    0.000    0.000    0.000    0.000 sets.py:1035(Interval)
        1    0.000    0.000    0.000    0.000 _dtype_ctypes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:15(ExternalPropertyFileReference)
        1    0.000    0.000    0.000    0.000 _attachment.py:18(Attachment)
        8    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 random.py:284(randrange)
        1    0.000    0.000    0.000    0.000 core.py:2420(__init__)
       13    0.000    0.000    0.000    0.000 _conversions.py:38(_make_conversion_method)
        1    0.000    0.000    0.000    0.000 algebraicfield.py:15(AlgebraicField)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:104(_format_size)
        1    0.000    0.000    0.000    0.000 core.py:5959(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_md5}
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2331(_median_dispatch)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3635(_pdf_formula)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:39(_mpf)
        1    0.000    0.000    0.000    0.000 tempfile.py:665(SpooledTemporaryFile)
        1    0.000    0.000    0.000    0.000 transforms.py:687(AffineTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:192(<dictcomp>)
       10    0.000    0.000    0.000    0.000 gaussiandomains.py:27(new)
       59    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
        1    0.000    0.000    0.000    0.000 polytools.py:7556(GroebnerBasis)
        1    0.000    0.000    0.000    0.000 _bracket.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:517(once_differentiable)
        1    0.000    0.000    0.000    0.000 _reduction.py:1(<module>)
        1    0.000    0.000    0.000    0.000 formal.py:968(FormalPowerSeries)
        1    0.000    0.000    0.000    0.000 _linprog_simplex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 io_utils.py:1(<module>)
        2    0.000    0.000    0.000    0.000 pathlib.py:777(parent)
        1    0.000    0.000    0.000    0.000 queue.py:28(Queue)
       24    0.000    0.000    0.000    0.000 dviread.py:168(<listcomp>)
        1    0.000    0.000    0.000    0.000 pickle.py:407(_Pickler)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:122(<listcomp>)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2448(DMF)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:12(ToolComponentReference)
       33    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 sparse.py:13(Embedding)
        1    0.000    0.000    0.000    0.000 conv.py:675(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 _finite_differences.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _artifact_location.py:12(ArtifactLocation)
        3    0.000    0.000    0.000    0.000 _policybase.py:311(header_fetch_parse)
       36    0.000    0.000    0.000    0.000 __init__.py:888(__bool__)
        1    0.000    0.000    0.000    0.000 transformer.py:370(TransformerEncoderLayer)
        6    0.000    0.000    0.000    0.000 glob.py:222(has_magic)
        8    0.000    0.000    0.000    0.000 mock.py:322(_delegating_property)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:99(__init__)
        1    0.000    0.000    0.000    0.000 libmpc.py:205(mpc_div_mpf)
        1    0.000    0.000    0.000    0.000 __init__.py:869(ByteStorage)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:12(ExpressionRawDomain)
        1    0.000    0.000    0.000    0.000 client.py:108(<dictcomp>)
        1    0.000    0.000    0.000    0.000 sparse.py:226(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 repr.py:18(ReprPrinter)
        1    0.000    0.000    0.000    0.000 tensor.py:812(__init__)
       32    0.000    0.000    0.000    0.000 arraypad.py:120(<genexpr>)
       38    0.000    0.000    0.000    0.000 ops.py:33(set_doc_string)
        1    0.000    0.000    0.000    0.000 julia.py:48(JuliaCodePrinter)
       14    0.000    0.000    0.000    0.000 libelefun.py:85(constant_memo)
        6    0.000    0.000    0.000    0.000 parse.py:786(__getattr__)
        1    0.000    0.000    0.000    0.000 sparse.py:9(Embedding)
        1    0.000    0.000    0.000    0.000 ndim_array.py:86(NDimArray)
        5    0.000    0.000    0.000    0.000 __init__.py:750(__init__)
       58    0.000    0.000    0.000    0.000 _utils.py:770(__init__)
        1    0.000    0.000    0.000    0.000 stringpict.py:22(stringPict)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1832(tol)
        1    0.000    0.000    0.000    0.000 polynomialring.py:10(PolynomialRing)
        1    0.000    0.000    0.000    0.000 _qmc.py:2486(MultinomialQMC)
        1    0.000    0.000    0.000    0.000 decorator.py:85(conserve_mpmath_dps)
        1    0.000    0.000    0.000    0.000 dispatcher.py:89(Dispatcher)
       18    0.000    0.000    0.000    0.000 _data.py:142(_create_method)
        1    0.000    0.000    0.000    0.000 tight_layout.py:1(<module>)
        4    0.000    0.000    0.000    0.000 kind.py:75(__new__)
       15    0.000    0.000    0.000    0.000 ssl.py:1000(_sslcopydoc)
        1    0.000    0.000    0.000    0.000 transformer.py:593(TransformerDecoderLayer)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:58(MPContext)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:282(define_parameters)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:172(_ConfigExpander)
        1    0.000    0.000    0.000    0.000 pycode.py:664(CmathPrinter)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:170(<lambda>)
       19    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
       11    0.000    0.000    0.000    0.000 eigen.py:41(defun)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:379(MinMaxBase)
        7    0.000    0.000    0.000    0.000 getlimits.py:709(max)
        3    0.000    0.000    0.000    0.000 core.py:5093(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 re.py:1(<module>)
       13    0.000    0.000    0.000    0.000 enum.py:116(_iter_bits_lsb)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:695(LOBPCG)
       14    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 typing.py:1569(<listcomp>)
       12    0.000    0.000    0.000    0.000 typing.py:389(<genexpr>)
        8    0.000    0.000    0.000    0.000 fontconfig_pattern.py:144(_name)
        1    0.000    0.000    0.000    0.000 tensor.py:416(_TensorDataLazyEvaluator)
        1    0.000    0.000    0.000    0.000 {method 'normal' of 'numpy.random._generator.Generator' objects}
        5    0.000    0.000    0.000    0.000 __init__.py:10(set_module)
        1    0.000    0.000    0.000    0.000 num.py:1(<module>)
        1    0.000    0.000    0.000    0.000 complexfield.py:16(ComplexField)
       38    0.000    0.000    0.000    0.000 ops.py:25(set_doc)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:70(Embedding)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:151(_set_up_aliases)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:28(<dictcomp>)
       13    0.000    0.000    0.000    0.000 enum.py:775(__iter__)
        1    0.000    0.000    0.000    0.000 tripcolor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:238(<listcomp>)
        1    0.000    0.000    0.000    0.000 _version.py:136(__lt__)
        1    0.000    0.000    0.000    0.000 datapipe.py:212(MapDataPipe)
        1    0.000    0.000    0.000    0.000 __init__.py:527(Distribution)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:172(<lambda>)
        1    0.000    0.000    0.000    0.000 constructor.py:62(BaseConstructor)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:623(convert)
        3    0.000    0.000    0.000    0.000 zipfile.py:1868(__del__)
        1    0.000    0.000    0.000    0.000 fusion.py:1(<module>)
       10    0.000    0.000    0.000    0.000 version.py:319(<listcomp>)
       17    0.000    0.000    0.000    0.000 __init__.py:438(<dictcomp>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3121(_one)
       59    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1846(cache_policy)
        1    0.000    0.000    0.000    0.000 subspaces.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1221(StateSpace)
        9    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:388(_attrgetter)
        1    0.000    0.000    0.000    0.000 art3d.py:128(Line3D)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:60(FakeQuantizeBase)
        1    0.000    0.000    0.000    0.000 qmc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _artifact_content.py:15(ArtifactContent)
        1    0.000    0.000    0.000    0.000 base64mime.py:1(<module>)
       10    0.000    0.000    0.000    0.000 symbol.py:798(<listcomp>)
        1    0.000    0.000    0.000    0.000 patches.py:2415(_Base)
       36    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}
        1    0.000    0.000    0.000    0.000 _conversion.py:17(Conversion)
        1    0.000    0.000    0.000    0.000 _ltisys.py:490(TransferFunction)
       10    0.000    0.000    0.000    0.000 axis.py:1935(_make_getset_interval)
        1    0.000    0.000    0.000    0.000 collections.py:1824(TriMesh)
        1    0.000    0.000    0.000    0.000 matrices.py:9(_matrix)
        1    0.000    0.000    0.000    0.000 digits.py:1(<module>)
        1    0.000    0.000    0.000    0.000 queues.py:21(Queue)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:10(ArrayComprehension)
        1    0.000    0.000    0.000    0.000 _internal.py:240(_missing_ctypes)
        1    0.000    0.000    0.000    0.000 transforms.py:391(IndependentTransform)
       33    0.000    0.000    0.000    0.000 _collections.py:24(<lambda>)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:82(mpf_convert_arg)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:327(register_op_impl)
        1    0.000    0.000    0.000    0.000 _tzpath.py:31(_parse_python_tzpath)
        1    0.000    0.000    0.000    0.000 _fix.py:16(Fix)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:12(MultiformatMessageString)
       74    0.000    0.000    0.000    0.000 util.py:245(no_escape_re_range_char)
        4    0.000    0.000    0.000    0.000 results.py:224(__setitem__)
        1    0.000    0.000    0.000    0.000 _data.py:20(_data_matrix)
       10    0.000    0.000    0.000    0.000 dataclasses.py:847(<listcomp>)
        1    0.000    0.000    0.000    0.000 _matrix.py:1(spmatrix)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1692(reset_cache)
        1    0.000    0.000    0.000    0.000 loss.py:1498(TripletMarginWithDistanceLoss)
       10    0.000    0.000    0.000    0.000 _text.py:90(lower)
        1    0.000    0.000    0.000    0.000 ast.py:70(_convert_num)
       28    0.000    0.000    0.000    0.000 _decorator.py:14(__init__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:254(_requires_builtin_wrapper)
        1    0.000    0.000    0.000    0.000 _text.py:7(FoldedCase)
        7    0.000    0.000    0.000    0.000 graph.py:57(_register_custom_builtin)
        1    0.000    0.000    0.000    0.000 exponential.py:10(Exponential)
        1    0.000    0.000    0.000    0.000 linear.py:99(Linear)
        1    0.000    0.000    0.000    0.000 threading.py:555(__init__)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:444(<listcomp>)
        1    0.000    0.000    0.000    0.000 ssl.py:845(SSLObject)
        1    0.000    0.000    0.000    0.000 std.py:131(Bar)
        1    0.000    0.000    0.000    0.000 units.py:141(<dictcomp>)
       36    0.000    0.000    0.000    0.000 discovery.py:252(<genexpr>)
       58    0.000    0.000    0.000    0.000 units.py:138(<genexpr>)
        1    0.000    0.000    0.000    0.000 shape_prop.py:11(TensorMetadata)
        1    0.000    0.000    0.000    0.000 bessel.py:1207(hn2)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:506(rv_frozen)
        1    0.000    0.000    0.000    0.000 _polyutils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _aliases.py:122(ones)
        1    0.000    0.000    0.000    0.000 modules.py:1280(ModuleElement)
       20    0.000    0.000    0.000    0.000 enum.py:1609(_simple_enum)
       32    0.000    0.000    0.000    0.000 decorators.py:196(sympify_return)
       37    0.000    0.000    0.000    0.000 numbers.py:1761(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 axis.py:1965(XAxis)
        1    0.000    0.000    0.000    0.000 constructor.py:932(RoundTripConstructor)
        2    0.000    0.000    0.000    0.000 {built-in method posix.access}
        1    0.000    0.000    0.000    0.000 image.py:1010(NonUniformImage)
        1    0.000    0.000    0.000    0.000 _stdlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 reductions.py:52(__init__)
        1    0.000    0.000    0.000    0.000 dos.py:171(Dos)
       13    0.000    0.000    0.000    0.000 basic.py:539(__ne__)
        6    0.000    0.000    0.000    0.000 {built-in method math.frexp}
        1    0.000    0.000    0.000    0.000 deutils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _builtins.py:114(_gen_torch_functional_registered_ops)
        1    0.000    0.000    0.000    0.000 mathematica.py:122(MCodePrinter)
        1    0.000    0.000    0.000    0.000 optimizer.py:154(Optimizer)
        1    0.000    0.000    0.000    0.000 base_backend.py:49(Plot)
       55    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1867(validation_policy)
       11    0.000    0.000    0.000    0.000 windows.py:53(decorator)
        1    0.000    0.000    0.000    0.000 file_util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _deprecate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datetime.py:573(timedelta)
        1    0.000    0.000    0.000    0.000 tensor.py:98(_IndexStructure)
        1    0.000    0.000    0.000    0.000 memory_format.py:1(<module>)
        1    0.000    0.000    0.000    0.000 context.py:297(passes)
        1    0.000    0.000    0.000    0.000 normal.py:12(Normal)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:176(<lambda>)
       10    0.000    0.000    0.000    0.000 quadrature.py:21(__init__)
        1    0.000    0.000    0.000    0.000 conv.py:806(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 gamma.py:14(Gamma)
        1    0.000    0.000    0.000    0.000 zipfile.py:1216(ZipFile)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1279(BPoly)
        6    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 operations.py:613(__init__)
       38    0.000    0.000    0.000    0.000 observer.py:53(__init__)
        1    0.000    0.000    0.000    0.000 entity.py:71(GeometryEntity)
        1    0.000    0.000    0.000    0.000 polygon.py:2053(Triangle)
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:507(DifferentialEvolutionSolver)
        1    0.000    0.000    0.000    0.000 font_manager.py:618(FontProperties)
        1    0.000    0.000    0.000    0.000 analyzer.py:84(SpacegroupAnalyzer)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1011(<listcomp>)
        1    0.000    0.000    0.000    0.000 distance.py:1984(<dictcomp>)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:16(GaussianElement)
        1    0.000    0.000    0.000    0.000 numbers.py:294(Integral)
        1    0.000    0.000    0.000    0.000 comments.py:706(CommentedMap)
        1    0.000    0.000    0.000    0.000 polygon.py:28(Polygon)
        1    0.000    0.000    0.000    0.000 kind.py:64(__new__)
       12    0.000    0.000    0.000    0.000 patches.py:1883(<genexpr>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:307(_pdf_formula)
        1    0.000    0.000    0.000    0.000 __init__.py:1803(LoggerAdapter)
        1    0.000    0.000    0.000    0.000 exprtools.py:809(Term)
        1    0.000    0.000    0.000    0.000 _cobyqa_py.py:1(<module>)
       32    0.000    0.000    0.000    0.000 decorators.py:210(__init__)
        1    0.000    0.000    0.000    0.000 _base.py:352(ProductNestedFixed)
        1    0.000    0.000    0.000    0.000 rnn.py:178(LSTMCell)
        1    0.000    0.000    0.000    0.000 _ops.py:589(__init__)
        1    0.000    0.000    0.000    0.000 _array_api.py:659(_XPSphinxCapability)
        1    0.000    0.000    0.000    0.000 remote_device.py:6(_remote_device)
        1    0.000    0.000    0.000    0.000 __init__.py:37(FoldedCase)
        1    0.000    0.000    0.000    0.000 error_functions.py:2710(_erfs)
       12    0.000    0.000    0.000    0.000 doccer.py:139(extend_notes_in_docstring)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:5(CanonicalConstraint)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:46(PythonMPQ)
        1    0.000    0.000    0.000    0.000 backend_registry.py:43(backend_registered)
        1    0.000    0.000    0.000    0.000 random.py:103(Random)
        9    0.000    0.000    0.000    0.000 core.py:3771(parseImpl)
        1    0.000    0.000    0.000    0.000 threading.py:389(notify_all)
        3    0.000    0.000    0.000    0.000 __init__.py:370(_FuncPtr)
        5    0.000    0.000    0.000    0.000 <frozen _collections_abc>:489(_type_repr)
        1    0.000    0.000    0.000    0.000 tasks.py:78(Task)
        1    0.000    0.000    0.000    0.000 distance.py:1796(MetricInfo)
        1    0.000    0.000    0.000    0.000 _lebedev.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fontconfig_pattern.py:27(FontconfigPatternParser)
        1    0.000    0.000    0.000    0.000 threading.py:838(Thread)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:816(matches)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:304(MPIntervalContext)
        1    0.000    0.000    0.000    0.000 lazy.py:10(_LazyProtocol)
        1    0.000    0.000    0.000    0.000 _interpolate.py:173(interp1d)
       31    0.000    0.000    0.000    0.000 _base.py:51(__init__)
        1    0.000    0.000    0.000    0.000 dist.py:1109(DistributionMetadata)
        1    0.000    0.000    0.000    0.000 dataclasses.py:1224(fields)
        1    0.000    0.000    0.000    0.000 _testutils.py:138(_TestPythranFunc)
        1    0.000    0.000    0.000    0.000 rcode.py:78(RCodePrinter)
        6    0.000    0.000    0.000    0.000 basic.py:149(<genexpr>)
       29    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 ImagePalette.py:31(ImagePalette)
        1    0.000    0.000    0.000    0.000 coroutines.py:1(<module>)
        1    0.000    0.000    0.000    0.000 subsets.py:6(Subset)
        1    0.000    0.000    0.000    0.000 __init__.py:98(<listcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:39(Conv1d)
        1    0.000    0.000    0.000    0.000 _digraph.py:5(DiGraph)
       44    0.000    0.000    0.000    0.000 core.py:4405(<genexpr>)
       12    0.000    0.000    0.000    0.000 _utils.py:7(_get_device_index)
        1    0.000    0.000    0.000    0.000 pycode.py:87(<listcomp>)
        1    0.000    0.000    0.000    0.000 pooling.py:16(_MaxPoolNd)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:348(_sample_formula)
        1    0.000    0.000    0.000    0.000 difflib.py:44(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 _tool.py:12(Tool)
        1    0.000    0.000    0.000    0.000 utils.py:17(LinearBlockSparsePattern)
        1    0.000    0.000    0.000    0.000 _extract.py:1(<module>)
       31    0.000    0.000    0.000    0.000 laplace.py:48(DEBUG_WRAP)
        1    0.000    0.000    0.000    0.000 tz.py:1545(__init__)
        1    0.000    0.000    0.000    0.000 conv.py:16(_ConvNd)
        1    0.000    0.000    0.000    0.000 message.py:972(MIMEPart)
        1    0.000    0.000    0.000    0.000 _netcdf.py:811(netcdf_variable)
       45    0.000    0.000    0.000    0.000 ctx_iv.py:394(<lambda>)
        1    0.000    0.000    0.000    0.000 mock.py:2158(AsyncMockMixin)
        1    0.000    0.000    0.000    0.000 band.py:16(Band)
        1    0.000    0.000    0.000    0.000 pydoc.py:1159(TextDoc)
        1    0.000    0.000    0.000    0.000 wannier90.py:24(Unk)
        1    0.000    0.000    0.000    0.000 _bsr.py:24(_bsr_base)
       37    0.000    0.000    0.000    0.000 function_base.py:19(_linspace_dispatcher)
        7    0.000    0.000    0.000    0.000 fractions.py:277(_operator_fallbacks)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:14(GMPYIntegerRing)
        1    0.000    0.000    0.000    0.000 conv.py:961(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 legend_handler.py:545(__init__)
        1    0.000    0.000    0.000    0.000 _infra.py:272(<setcomp>)
        1    0.000    0.000    0.000    0.000 comments.py:88(Comment)
        2    0.000    0.000    0.000    0.000 {method 'replace' of 'code' objects}
        1    0.000    0.000    0.000    0.000 core.py:1329(make_mask_descr)
        6    0.000    0.000    0.000    0.000 monkey.py:60(<genexpr>)
        1    0.000    0.000    0.000    0.000 line.py:50(LinearEntity)
        1    0.000    0.000    0.000    0.000 socket.py:214(socket)
        3    0.000    0.000    0.000    0.000 legend_handler.py:341(__init__)
        3    0.000    0.000    0.000    0.000 core.py:714(<listcomp>)
        1    0.000    0.000    0.000    0.000 is_from_package.py:1(<module>)
       14    0.000    0.000    0.000    0.000 pathlib.py:94(join_parsed_parts)
        1    0.000    0.000    0.000    0.000 <frozen genericpath>:39(isdir)
        1    0.000    0.000    0.000    0.000 formatting.py:112(<dictcomp>)
        1    0.000    0.000    0.000    0.000 art3d.py:246(Line3DCollection)
        1    0.000    0.000    0.000    0.000 tfqmr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:18(Option)
       32    0.000    0.000    0.000    0.000 expr.py:185(_hashable_content)
        1    0.000    0.000    0.000    0.000 tensor.py:1695(TensorHead)
        1    0.000    0.000    0.000    0.000 modules.py:204(Module)
        1    0.000    0.000    0.000    0.000 observer.py:1365(RecordingObserver)
        1    0.000    0.000    0.000    0.000 core.py:3750(__init__)
        1    0.000    0.000    0.000    0.000 relational.py:65(Relational)
        1    0.000    0.000    0.000    0.000 qfunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 products.py:17(Product)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:10(Gcf)
        1    0.000    0.000    0.000    0.000 binrel.py:15(BinaryRelation)
        2    0.000    0.000    0.000    0.000 reprlib.py:12(decorating_function)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:418(_mode_formula)
        7    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
        3    0.000    0.000    0.000    0.000 message.py:150(__init__)
        1    0.000    0.000    0.000    0.000 fglmtools.py:1(<module>)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1037(_resolve_name)
        1    0.000    0.000    0.000    0.000 core.py:3039(Regex)
       52    0.000    0.000    0.000    0.000 pathlib.py:327(_select_from)
       77    0.000    0.000    0.000    0.000 signal.py:16(<lambda>)
        1    0.000    0.000    0.000    0.000 linear.py:17(LinearPackedParams)
       23    0.000    0.000    0.000    0.000 functools.py:972(__set_name__)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3172(_ndim_dispatcher)
        1    0.000    0.000    0.000    0.000 _replacement.py:16(Replacement)
        5    0.000    0.000    0.000    0.000 core.py:6175(token_map)
       12    0.000    0.000    0.000    0.000 rcsetup.py:424(validate_fontweight)
        1    0.000    0.000    0.000    0.000 units.py:277(FloatWithUnit)
       18    0.000    0.000    0.000    0.000 ops.py:312(__init__)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:195(EmbeddingBag)
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:289(_apply_params)
        1    0.000    0.000    0.000    0.000 _chandrupatla.py:1(<module>)
       13    0.000    0.000    0.000    0.000 mixins.py:36(_inplace_binary_method)
       43    0.000    0.000    0.000    0.000 _compat_pickle.py:165(<genexpr>)
        5    0.000    0.000    0.000    0.000 {built-in method posix.register_at_fork}
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 results.py:462(<listcomp>)
        1    0.000    0.000    0.000    0.000 bandstructure.py:38(Kpoint)
        5    0.000    0.000    0.000    0.000 ctx_base.py:458(memoize)
        1    0.000    0.000    0.000    0.000 integerring.py:20(IntegerRing)
        1    0.000    0.000    0.000    0.000 matexpr.py:739(_LeftRightArgs)
       14    0.000    0.000    0.000    0.000 mixins.py:26(_reflected_binary_method)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
        1    0.000    0.000    0.000    0.000 maple.py:84(MapleCodePrinter)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:25(__init__)
       36    0.000    0.000    0.000    0.000 _pytree.py:56(_list_flatten)
        1    0.000    0.000    0.000    0.000 profiler.py:59(profile)
        1    0.000    0.000    0.000    0.000 collections.py:1684(EllipseCollection)
        7    0.000    0.000    0.000    0.000 {method 'deleter' of 'property' objects}
        4    0.000    0.000    0.000    0.000 mixins.py:51(_unary_method)
        1    0.000    0.000    0.000    0.000 parse.py:143(_NetlocResultMixinBase)
       29    0.000    0.000    0.000    0.000 core.py:4695(recurse)
        1    0.000    0.000    0.000    0.000 numbers.py:147(Real)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:70(_apply)
        1    0.000    0.000    0.000    0.000 _property_bag.py:10(PropertyBag)
        1    0.000    0.000    0.000    0.000 Image.py:3915(Exif)
       70    0.000    0.000    0.000    0.000 _jit_internal.py:1091(__getitem__)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:225(from_rep)
       24    0.000    0.000    0.000    0.000 sympify.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 named_groups.py:1(<module>)
        1    0.000    0.000    0.000    0.000 error.py:35(HTTPError)
        1    0.000    0.000    0.000    0.000 axis.py:2253(YAxis)
        6    0.000    0.000    0.000    0.000 six.py:131(__init__)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:18(ModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 pycode.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 index_tricks.py:310(AxisConcatenator)
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:298(_export)
        1    0.000    0.000    0.000    0.000 rnn.py:111(RNNCell)
        1    0.000    0.000    0.000    0.000 _bunch.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.OrderedDict' objects}
       78    0.000    0.000    0.000    0.000 signal.py:21(<lambda>)
        1    0.000    0.000    0.000    0.000 _configuration_override.py:16(ConfigurationOverride)
        1    0.000    0.000    0.000    0.000 _code_flow.py:16(CodeFlow)
        1    0.000    0.000    0.000    0.000 factor_.py:665(FactorCache)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1759(<listcomp>)
        1    0.000    0.000    0.000    0.000 bz2.py:131(seekable)
        6    0.000    0.000    0.000    0.000 libmpf.py:653(mpf_pos)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:386(_set_prec)
        1    0.000    0.000    0.000    0.000 tensor.py:815(_comm_init)
        1    0.000    0.000    0.000    0.000 special.py:75(__new__)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:24(BlockMatrix)
        1    0.000    0.000    0.000    0.000 printer.py:235(Printer)
        2    0.000    0.000    0.000    0.000 _adapters.py:165(wrap_spec)
        1    0.000    0.000    0.000    0.000 std.py:67(TRLock)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:359(_mpc)
        2    0.000    0.000    0.000    0.000 _parser.py:1006(addgroup)
        1    0.000    0.000    0.000    0.000 core.py:80(__compat__)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        1    0.000    0.000    0.000    0.000 contour.py:48(ContourLabeler)
        1    0.000    0.000    0.000    0.000 tricontour.py:8(TriContourSet)
        1    0.000    0.000    0.000    0.000 bessel.py:1151(hn1)
        1    0.000    0.000    0.000    0.000 abc.py:14(ResourceReader)
        1    0.000    0.000    0.000    0.000 _shgo.py:488(SHGO)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2461(_pdf_dispatch)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1052(TimerBase)
        1    0.000    0.000    0.000    0.000 cnf.py:270(CNF)
        1    0.000    0.000    0.000    0.000 linear.py:67(Linear)
        1    0.000    0.000    0.000    0.000 domainscalar.py:17(DomainScalar)
        4    0.000    0.000    0.000    0.000 serialization.py:90(register_package)
        1    0.000    0.000    0.000    0.000 numpy.py:9(<listcomp>)
        1    0.000    0.000    0.000    0.000 fourier.py:127(FourierSeries)
        7    0.000    0.000    0.000    0.000 rrule.py:70(__init__)
        1    0.000    0.000    0.000    0.000 _artifact_change.py:16(ArtifactChange)
        1    0.000    0.000    0.000    0.000 summations.py:42(Sum)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2349(_mode_dispatch)
        1    0.000    0.000    0.000    0.000 _resampling.py:2175(PermutationMethod)
        1    0.000    0.000    0.000    0.000 sysconfig.py:456(_get_sysconfigdata_name)
        1    0.000    0.000    0.000    0.000 hyper.py:90(hyper)
        1    0.000    0.000    0.000    0.000 _dia.py:20(_dia_base)
       13    0.000    0.000    0.000    0.000 _internal.py:920(npy_ctypes_check)
       11    0.000    0.000    0.000    0.000 legend_handler.py:59(__init__)
        1    0.000    0.000    0.000    0.000 _factories.py:56(__init__)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:23(PandasWrapper)
        5    0.000    0.000    0.000    0.000 decorator.py:152(<listcomp>)
        1    0.000    0.000    0.000    0.000 _csc.py:17(_csc_base)
        1    0.000    0.000    0.000    0.000 backend_bases.py:733(GraphicsContextBase)
        1    0.000    0.000    0.000    0.000 comments.py:273(CommentedBase)
        1    0.000    0.000    0.000    0.000 collections.py:1888(QuadMesh)
        1    0.000    0.000    0.000    0.000 collections.py:887(_CollectionWithSizes)
        2    0.000    0.000    0.000    0.000 gzip.py:463(_init_read)
        1    0.000    0.000    0.000    0.000 tempfile.py:840(TemporaryDirectory)
        1    0.000    0.000    0.000    0.000 linear_relu.py:116(LinearTanh)
        1    0.000    0.000    0.000    0.000 {built-in method time.localtime}
        1    0.000    0.000    0.000    0.000 specifiers.py:44(BaseSpecifier)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:12(GMPYRationalField)
        1    0.000    0.000    0.000    0.000 _covariance.py:11(Covariance)
        3    0.000    0.000    0.000    0.000 arrayprint.py:1415(dtype_is_implied)
        1    0.000    0.000    0.000    0.000 __init__.py:221(<dictcomp>)
        1    0.000    0.000    0.000    0.000 inputs.py:3075(VaspInput)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3125(_constants)
        1    0.000    0.000    0.000    0.000 _netcdf.py:98(netcdf_file)
        1    0.000    0.000    0.000    0.000 _builtins.py:120(<setcomp>)
        4    0.000    0.000    0.000    0.000 __init__.py:798(__init__)
        1    0.000    0.000    0.000    0.000 _inspect.py:1(<module>)
        5    0.000    0.000    0.000    0.000 _new_distributions.py:339(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 hyper.py:391(meijerg)
        1    0.000    0.000    0.000    0.000 dirichlet.py:30(Dirichlet)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:262(__subclasshook__)
        1    0.000    0.000    0.000    0.000 linear.py:12(Linear)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1531(symbol)
        1    0.000    0.000    0.000    0.000 numpy.py:480(<dictcomp>)
        1    0.000    0.000    0.000    0.000 tight_binding_hamiltonian.py:18(TBHamiltonian)
        5    0.000    0.000    0.000    0.000 __init__.py:20(is_available)
        1    0.000    0.000    0.000    0.000 gzip.py:455(_GzipReader)
        1    0.000    0.000    0.000    0.000 utilities.py:8(__init__)
        1    0.000    0.000    0.000    0.000 _special_locations.py:15(SpecialLocations)
        1    0.000    0.000    0.000    0.000 error_functions.py:1502(li)
        1    0.000    0.000    0.000    0.000 csv.py:80(DictReader)
        1    0.000    0.000    0.000    0.000 plane.py:30(Plane)
        4    0.000    0.000    0.000    0.000 core.py:5236(_generateDefaultName)
        8    0.000    0.000    0.000    0.000 relativedelta.py:13(<genexpr>)
        1    0.000    0.000    0.000    0.000 pydoc.py:525(__init__)
        5    0.000    0.000    0.000    0.000 datetime.py:528(_check_time_fields)
       20    0.000    0.000    0.000    0.000 _parser.py:160(__delitem__)
        1    0.000    0.000    0.000    0.000 upsampling.py:168(UpsamplingNearest2d)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:22(PolyQuintic)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1413(DummySpecies)
        1    0.000    0.000    0.000    0.000 sparse.py:49(EmbeddingBag)
        2    0.000    0.000    0.000    0.000 densebasic.py:333(_rec_strip)
        2    0.000    0.000    0.000    0.000 core.py:3613(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11322(wrapcauchy_gen)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:337(_ExpmPadeHelper)
        1    0.000    0.000    0.000    0.000 context.py:99(compose_two)
        1    0.000    0.000    0.000    0.000 rk.py:407(DOP853)
        1    0.000    0.000    0.000    0.000 mstats_extras.py:1(<module>)
        1    0.000    0.000    0.000    0.000 iterators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2342(_median_icdf)
        1    0.000    0.000    0.000    0.000 core.py:1315(_replace_dtype_fields)
        2    0.000    0.000    0.000    0.000 reprlib.py:38(__init__)
        8    0.000    0.000    0.000    0.000 {method 'removeprefix' of 'str' objects}
       25    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 prufer.py:11(Prufer)
        1    0.000    0.000    0.000    0.000 connection.py:114(_ConnectionBase)
        1    0.000    0.000    0.000    0.000 conv.py:617(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 _binary.py:1(<module>)
        1    0.000    0.000    0.000    0.000 util.py:103(__init__)
        2    0.000    0.000    0.000    0.000 _aliases.py:116(astype)
        1    0.000    0.000    0.000    0.000 modules.py:840(Submodule)
        1    0.000    0.000    0.000    0.000 textplot.py:1(<module>)
       10    0.000    0.000    0.000    0.000 rcsetup.py:765(_validate_greaterequal0_lessthan1)
        1    0.000    0.000    0.000    0.000 context.py:270(raises)
        1    0.000    0.000    0.000    0.000 main.py:56(TestProgram)
       10    0.000    0.000    0.000    0.000 bz2.py:121(closed)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:41(<setcomp>)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:994(wrap)
        1    0.000    0.000    0.000    0.000 free_groups.py:114(FreeGroup)
        1    0.000    0.000    0.000    0.000 ast.py:65(_raise_malformed_node)
        1    0.000    0.000    0.000    0.000 _text_layout.py:1(<module>)
       11    0.000    0.000    0.000    0.000 results.py:272(__iter__)
        1    0.000    0.000    0.000    0.000 _kde.py:36(gaussian_kde)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:85(add)
        2    0.000    0.000    0.000    0.000 __init__.py:1646(addHandler)
        1    0.000    0.000    0.000    0.000 _policybase.py:112(Policy)
        6    0.000    0.000    0.000    0.000 _version.py:62(<listcomp>)
        1    0.000    0.000    0.000    0.000 pooling.py:564(AvgPool2d)
        1    0.000    0.000    0.000    0.000 process.py:399(__init__)
        1    0.000    0.000    0.000    0.000 distance.py:1990(<dictcomp>)
        8    0.000    0.000    0.000    0.000 __init__.py:463(_asdict)
        1    0.000    0.000    0.000    0.000 __init__.py:1327(_TorchCompileInductorWrapper)
        1    0.000    0.000    0.000    0.000 adaptive.py:19(AdaptiveLogSoftmaxWithLoss)
        1    0.000    0.000    0.000    0.000 colors.py:81(__init__)
        5    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 representer.py:52(BaseRepresenter)
        2    0.000    0.000    0.000    0.000 typing.py:3089(__init__)
        1    0.000    0.000    0.000    0.000 fancysets.py:73(Naturals)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3161(rv_discrete)
        1    0.000    0.000    0.000    0.000 fractionfield.py:9(FractionField)
        1    0.000    0.000    0.000    0.000 sparse.py:21(SparseRepMatrix)
        1    0.000    0.000    0.000    0.000 base_events.py:274(Server)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:46(LayoutBox)
        5    0.000    0.000    0.000    0.000 _basic.py:3031(<listcomp>)
        3    0.000    0.000    0.000    0.000 legend_handler.py:212(__init__)
        1    0.000    0.000    0.000    0.000 _ops.py:238(OpOverload)
        1    0.000    0.000    0.000    0.000 function.py:2101(Subs)
        3    0.000    0.000    0.000    0.000 _header_value_parser.py:876(__new__)
        1    0.000    0.000    0.000    0.000 realfield.py:54(RealField)
        1    0.000    0.000    0.000    0.000 numbers.py:2231(AlgebraicNumber)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_adapter}
        1    0.000    0.000    0.000    0.000 rnn.py:334(LSTM)
        1    0.000    0.000    0.000    0.000 tensor.py:1392(TensorSymmetry)
       15    0.000    0.000    0.000    0.000 libelefun.py:106(def_mpf_constant)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:790(items)
       23    0.000    0.000    0.000    0.000 overrides.py:173(array_function_from_dispatcher)
        1    0.000    0.000    0.000    0.000 tokens.py:13(Token)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:11(GenzMalikCubature)
        1    0.000    0.000    0.000    0.000 error_functions.py:1828(Si)
        2    0.000    0.000    0.000    0.000 {built-in method posix.unsetenv}
        1    0.000    0.000    0.000    0.000 _fitpack2.py:73(UnivariateSpline)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1572(ReciprocalTrigonometricFunction)
       10    0.000    0.000    0.000    0.000 _policybase.py:104(<genexpr>)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:382(PngStream)
        1    0.000    0.000    0.000    0.000 numpy.py:34(<dictcomp>)
       15    0.000    0.000    0.000    0.000 math2.py:27(_mathfun_real)
        1    0.000    0.000    0.000    0.000 serializer.py:33(Serializer)
        1    0.000    0.000    0.000    0.000 quiver.py:904(Barbs)
        5    0.000    0.000    0.000    0.000 datapipe.py:265(register_datapipe_as_function)
        1    0.000    0.000    0.000    0.000 data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 widgets.py:1893(RectangleSelector)
        1    0.000    0.000    0.000    0.000 jscode.py:46(JavascriptCodePrinter)
        1    0.000    0.000    0.000    0.000 _helpers.py:487(_AutoJITWrapper)
        2    0.000    0.000    0.000    0.000 kind.py:266(register)
        1    0.000    0.000    0.000    0.000 _resampling.py:2261(BootstrapMethod)
        1    0.000    0.000    0.000    0.000 gammazeta.py:394(bernoulli_size)
        2    0.000    0.000    0.000    0.000 util.py:289(<listcomp>)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1407(<listcomp>)
        2    0.000    0.000    0.000    0.000 _helpers.py:305(_compat_module_name)
        1    0.000    0.000    0.000    0.000 _namedtensor_internals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unary.py:75(<listcomp>)
        1    0.000    0.000    0.000    0.000 numpy.py:348(SciPyPrinter)
        1    0.000    0.000    0.000    0.000 ordinals.py:273(__new__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1879(validation_policy)
        1    0.000    0.000    0.000    0.000 sets.py:1947(FiniteSet)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.set_typeDict}
        1    0.000    0.000    0.000    0.000 compositedomain.py:9(CompositeDomain)
        1    0.000    0.000    0.000    0.000 bessel.py:438(besseli)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:190(_Domain)
       24    0.000    0.000    0.000    0.000 dviread.py:135(_dispatch)
        1    0.000    0.000    0.000    0.000 quopri.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 _infra.py:266(RuleCollection)
        1    0.000    0.000    0.000    0.000 overrides.py:1786(TorchFunctionMode)
        1    0.000    0.000    0.000    0.000 laplace.py:9(Laplace)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7648(nakagami_gen)
        1    0.000    0.000    0.000    0.000 activation.py:175(Hardtanh)
        1    0.000    0.000    0.000    0.000 indexed.py:362(IndexedBase)
        1    0.000    0.000    0.000    0.000 exponential.py:35(ExpBase)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:117(<listcomp>)
        3    0.000    0.000    0.000    0.000 bz2.py:135(readable)
        1    0.000    0.000    0.000    0.000 transforms.py:41(Transform)
        1    0.000    0.000    0.000    0.000 functions.py:3(SpecialFunctions)
       11    0.000    0.000    0.000    0.000 optimizer.py:28(_use_grad_for_differentiable)
        1    0.000    0.000    0.000    0.000 extract.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4981(invgauss_gen)
        5    0.000    0.000    0.000    0.000 typing.py:2191(runtime_checkable)
       23    0.000    0.000    0.000    0.000 _support_alternative_backends.py:35(name)
        1    0.000    0.000    0.000    0.000 quasirandom.py:5(SobolEngine)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:8(OneHotCategorical)
        1    0.000    0.000    0.000    0.000 constructor.py:348(SafeConstructor)
       22    0.000    0.000    0.000    0.000 reductions.py:123(_torch_grad_reduce)
        1    0.000    0.000    0.000    0.000 wavelets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:996(ReciprocalHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 unix_events.py:57(_UnixSelectorEventLoop)
        1    0.000    0.000    0.000    0.000 patches.py:1824(_simpleprint_styles)
        1    0.000    0.000    0.000    0.000 __init__.py:37(cuFFTPlanCache)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1881(ComplexInterval)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:75(NumExprPrinter)
        1    0.000    0.000    0.000    0.000 request.py:1694(URLopener)
        1    0.000    0.000    0.000    0.000 linear_relu.py:12(LinearReLU)
        1    0.000    0.000    0.000    0.000 _ltisys.py:299(dlti)
        1    0.000    0.000    0.000    0.000 boolalg.py:741(Or)
        1    0.000    0.000    0.000    0.000 series.py:989(Line2DBaseSeries)
        2    0.000    0.000    0.000    0.000 sysconfig.py:311(get_default_scheme)
        1    0.000    0.000    0.000    0.000 rootoftools.py:1101(RootSum)
       18    0.000    0.000    0.000    0.000 __init__.py:788(__init__)
        1    0.000    0.000    0.000    0.000 ElementTree.py:125(Element)
        1    0.000    0.000    0.000    0.000 _base.py:325(Future)
        1    0.000    0.000    0.000    0.000 assume.py:358(UndefinedPredicate)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10191(truncnorm_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:72(__init__)
        1    0.000    0.000    0.000    0.000 series.py:2180(ImplicitSeries)
        1    0.000    0.000    0.000    0.000 report.py:3(ReportBase)
        1    0.000    0.000    0.000    0.000 transforms.py:2266(CompositeGenericTransform)
        1    0.000    0.000    0.000    0.000 outputs.py:4448(Oszicar)
        1    0.000    0.000    0.000    0.000 fields.py:292(FracElement)
       12    0.000    0.000    0.000    0.000 domain.py:470(of_type)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:583(PythonMPContext)
        1    0.000    0.000    0.000    0.000 heuristicgcd.py:1(<module>)
        6    0.000    0.000    0.000    0.000 ops.py:752(force_aff_func_args)
        1    0.000    0.000    0.000    0.000 _infra.py:55(Rule)
        1    0.000    0.000    0.000    0.000 integrals.py:35(Integral)
        1    0.000    0.000    0.000    0.000 annotations.py:41(EvalEnv)
        1    0.000    0.000    0.000    0.000 interval_arithmetic.py:42(interval)
       17    0.000    0.000    0.000    0.000 __init__.py:190(change_key)
        3    0.000    0.000    0.000    0.000 __init__.py:42(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:909(LongStorage)
       13    0.000    0.000    0.000    0.000 utils.py:34(exposed_in)
       24    0.000    0.000    0.000    0.000 expr.py:2053(as_base_exp)
        1    0.000    0.000    0.000    0.000 offsetbox.py:179(OffsetBox)
        8    0.000    0.000    0.000    0.000 core.py:5113(stopOn)
        1    0.000    0.000    0.000    0.000 _imp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:503(<dictcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:588(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 computed_entries.py:47(EnergyAdjustment)
        1    0.000    0.000    0.000    0.000 _ndbspline.py:26(NdBSpline)
        1    0.000    0.000    0.000    0.000 logic.py:221(Logic)
        1    0.000    0.000    0.000    0.000 loader.py:66(TestLoader)
       16    0.000    0.000    0.000    0.000 _pep440.py:301(<genexpr>)
        1    0.000    0.000    0.000    0.000 conv.py:232(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 rnn.py:1159(LSTMCell)
        1    0.000    0.000    0.000    0.000 __init__.py:1039(ComplexDoubleStorage)
        1    0.000    0.000    0.000    0.000 {built-in method math.exp}
        1    0.000    0.000    0.000    0.000 profiler_util.py:352(FormattedTimesMixin)
        6    0.000    0.000    0.000    0.000 _exceptions.py:17(_display_as_base)
        3    0.000    0.000    0.000    0.000 _policybase.py:281(_sanitize_header)
       41    0.000    0.000    0.000    0.000 numbers.py:438(class_key)
        1    0.000    0.000    0.000    0.000 ticker.py:468(ScalarFormatter)
        1    0.000    0.000    0.000    0.000 _trace.py:1202(TopLevelTracedModule)
        1    0.000    0.000    0.000    0.000 transforms.py:1613(TransformWrapper)
        1    0.000    0.000    0.000    0.000 transforms.py:1098(StackTransform)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:712(__eq__)
       21    0.000    0.000    0.000    0.000 _script.py:940(_make_fail)
        1    0.000    0.000    0.000    0.000 bz2.py:26(BZ2File)
        1    0.000    0.000    0.000    0.000 __init__.py:855(_CudaLegacyStorage)
        1    0.000    0.000    0.000    0.000 transforms.py:1080(LockableBbox)
        1    0.000    0.000    0.000    0.000 types.py:39(Storage)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1897(wishart_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:1067(StreamHandler)
        1    0.000    0.000    0.000    0.000 outputs.py:5666(Waveder)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1612(<dictcomp>)
        1    0.000    0.000    0.000    0.000 ideals.py:7(Ideal)
        1    0.000    0.000    0.000    0.000 core.py:6540(MaskedConstant)
        1    0.000    0.000    0.000    0.000 mathml.py:84(MathMLContentPrinter)
        6    0.000    0.000    0.000    0.000 utils.py:51(_has_surrogates)
        1    0.000    0.000    0.000    0.000 conv_add.py:52(ConvAddReLU2d)
        1    0.000    0.000    0.000    0.000 six.py:236(create_module)
        1    0.000    0.000    0.000    0.000 pycode.py:707(<listcomp>)
        1    0.000    0.000    0.000    0.000 proxy.py:455(Attribute)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:145(__neg__)
        1    0.000    0.000    0.000    0.000 tz.py:386(tzfile)
        1    0.000    0.000    0.000    0.000 group_constructs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _infra.py:309(DiagnosticOptions)
        1    0.000    0.000    0.000    0.000 _log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 complexes.py:446(Abs)
        1    0.000    0.000    0.000    0.000 coord.py:362(Simplex)
        1    0.000    0.000    0.000    0.000 {built-in method math.log2}
        1    0.000    0.000    0.000    0.000 byteordercodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 miobase.py:1(<module>)
       10    0.000    0.000    0.000    0.000 case.py:1366(_deprecate)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1105(EvaluateFalseTransformer)
       15    0.000    0.000    0.000    0.000 arrayprint.py:993(<genexpr>)
        3    0.000    0.000    0.000    0.000 __init__.py:7(is_available)
        2    0.000    0.000    0.000    0.000 _functools.py:6(method_cache)
        1    0.000    0.000    0.000    0.000 binary.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 comments.py:467(CommentedSeq)
        1    0.000    0.000    0.000    0.000 _ltisys.py:46(LinearTimeInvariant)
       17    0.000    0.000    0.000    0.000 ctx_fp.py:28(<lambda>)
        1    0.000    0.000    0.000    0.000 _ccallback.py:26(LowLevelCallable)
        2    0.000    0.000    0.000    0.000 _aliases.py:51(empty_like)
        2    0.000    0.000    0.000    0.000 numerictypes.py:229(obj2sctype)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:151(<listcomp>)
        1    0.000    0.000    0.000    0.000 _censored_data.py:60(CensoredData)
        6    0.000    0.000    0.000    0.000 _parser.py:286(seek)
        2    0.000    0.000    0.000    0.000 __init__.py:2356(_backend_module_name)
        1    0.000    0.000    0.000    0.000 adadelta.py:12(Adadelta)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:10(BaseSubprocessTransport)
        1    0.000    0.000    0.000    0.000 nadam.py:10(NAdam)
        1    0.000    0.000    0.000    0.000 complexes.py:265(sign)
        5    0.000    0.000    0.000    0.000 rszeta.py:54(__init__)
        1    0.000    0.000    0.000    0.000 bonds.py:58(CovalentBond)
       26    0.000    0.000    0.000    0.000 core.py:4415(<genexpr>)
        3    0.000    0.000    0.000    0.000 rcsetup.py:459(_validate_mathtext_fallback)
        1    0.000    0.000    0.000    0.000 zipfile.py:344(ZipInfo)
        1    0.000    0.000    0.000    0.000 axis3d.py:470(XAxis)
        1    0.000    0.000    0.000    0.000 numbers.py:59(carmichael)
        1    0.000    0.000    0.000    0.000 polygon.py:1420(RegularPolygon)
        1    0.000    0.000    0.000    0.000 animation.py:895(Animation)
        1    0.000    0.000    0.000    0.000 repmatrix.py:555(MutableRepMatrix)
        1    0.000    0.000    0.000    0.000 observer.py:124(ObserverBase)
        3    0.000    0.000    0.000    0.000 six.py:85(_import_module)
        1    0.000    0.000    0.000    0.000 __init__.py:70(__init__)
        1    0.000    0.000    0.000    0.000 proj3d.py:1(<module>)
        1    0.000    0.000    0.000    0.000 factorials.py:36(factorial)
        1    0.000    0.000    0.000    0.000 _ltisys.py:879(ZerosPolesGain)
        1    0.000    0.000    0.000    0.000 observer.py:383(MinMaxObserver)
        1    0.000    0.000    0.000    0.000 polar.py:17(PolarTransform)
        1    0.000    0.000    0.000    0.000 fancysets.py:291(ImageSet)
        1    0.000    0.000    0.000    0.000 __init__.py:637(RcParams)
        1    0.000    0.000    0.000    0.000 tags.py:42(Tag)
        4    0.000    0.000    0.000    0.000 assumptions.py:484(generator)
        2    0.000    0.000    0.000    0.000 decorator.py:319(wrapper)
        1    0.000    0.000    0.000    0.000 factor_.py:700(__init__)
        1    0.000    0.000    0.000    0.000 rnn.py:261(LSTM)
       25    0.000    0.000    0.000    0.000 symbolic_helper.py:664(_block_list_in_opset)
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:841(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:40(ToolBase)
        1    0.000    0.000    0.000    0.000 transforms.py:1012(TransformedBbox)
        4    0.000    0.000    0.000    0.000 libmpf.py:1313(from_str)
       20    0.000    0.000    0.000    0.000 core.py:3915(recurse)
        1    0.000    0.000    0.000    0.000 functional_modules.py:9(FloatFunctional)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:282(nbinom_gen)
        1    0.000    0.000    0.000    0.000 _script.py:179(OrderedDictWrapper)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12328(rel_breitwigner_gen)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:38(ivmpf)
       31    0.000    0.000    0.000    0.000 singleton.py:192(<lambda>)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:18(profile)
        1    0.000    0.000    0.000    0.000 structure.py:83(Neighbor)
        1    0.000    0.000    0.000    0.000 discovery.py:132(PackageFinder)
        1    0.000    0.000    0.000    0.000 sets.py:1496(Intersection)
        1    0.000    0.000    0.000    0.000 fields.py:103(FracField)
        1    0.000    0.000    0.000    0.000 common.py:32(VolumetricData)
        2    0.000    0.000    0.000    0.000 six.py:119(_resolve)
        1    0.000    0.000    0.000    0.000 weight_norm.py:11(WeightNorm)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:100(split)
        5    0.000    0.000    0.000    0.000 _compression.py:12(_check_not_closed)
        1    0.000    0.000    0.000    0.000 sdm.py:186(new)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6257(vonmises_fisher_gen)
        1    0.000    0.000    0.000    0.000 constructor.py:664(Constructor)
        1    0.000    0.000    0.000    0.000 {built-in method posix.confstr}
        1    0.000    0.000    0.000    0.000 __init__.py:165(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:531(Formatter)
        1    0.000    0.000    0.000    0.000 __init__.py:434(Stripper)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:588(transpose)
        1    0.000    0.000    0.000    0.000 bdist.py:37(ListCompat)
        1    0.000    0.000    0.000    0.000 special_matrices.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _lambertw.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decorator.py:65(FunctionMaker)
        1    0.000    0.000    0.000    0.000 _data.py:168(_minmax_mixin)
        1    0.000    0.000    0.000    0.000 random.py:235(_randbelow_with_getrandbits)
        1    0.000    0.000    0.000    0.000 join.py:43(Joinable)
        1    0.000    0.000    0.000    0.000 exprtools.py:288(Factors)
        1    0.000    0.000    0.000    0.000 __init__.py:71(MkldnnModule)
       35    0.000    0.000    0.000    0.000 core.py:1967(recurse)
        1    0.000    0.000    0.000    0.000 dataframes.py:60(Capture)
        1    0.000    0.000    0.000    0.000 numbers.py:3602(Exp1)
        1    0.000    0.000    0.000    0.000 conv_fused.py:25(_ConvBnNd)
        1    0.000    0.000    0.000    0.000 threading.py:822(_maintain_shutdown_locks)
        1    0.000    0.000    0.000    0.000 numbers.py:4083(ImaginaryUnit)
        1    0.000    0.000    0.000    0.000 operator_support.py:27(OperatorSupportBase)
        9    0.000    0.000    0.000    0.000 timeutils.py:54(decorator)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:747(_copy_to_script_wrapper)
        1    0.000    0.000    0.000    0.000 rnn.py:163(_LSTMLayer)
        3    0.000    0.000    0.000    0.000 mock.py:298(__getattr__)
       11    0.000    0.000    0.000    0.000 ctx_iv.py:293(__new__)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:119(ScalarFunction)
        1    0.000    0.000    0.000    0.000 _aliases.py:536(floor)
        1    0.000    0.000    0.000    0.000 error_functions.py:1092(Ei)
        1    0.000    0.000    0.000    0.000 pathlib.py:971(absolute)
        1    0.000    0.000    0.000    0.000 argparse.py:1708(ArgumentParser)
        1    0.000    0.000    0.000    0.000 lzma.py:38(LZMAFile)
        1    0.000    0.000    0.000    0.000 internal.py:41(__init__)
       11    0.000    0.000    0.000    0.000 _color_data.py:31(<genexpr>)
        1    0.000    0.000    0.000    0.000 _globals.py:17(_InternalGlobals)
        2    0.000    0.000    0.000    0.000 polyclasses.py:155(new)
        2    0.000    0.000    0.000    0.000 {method 'difference_update' of 'set' objects}
        1    0.000    0.000    0.000    0.000 adamw.py:12(AdamW)
        1    0.000    0.000    0.000    0.000 diophantine.py:1213(<setcomp>)
       12    0.000    0.000    0.000    0.000 {method 'islower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 taskgroups.py:12(TaskGroup)
        1    0.000    0.000    0.000    0.000 selectors.py:80(BaseSelector)
        1    0.000    0.000    0.000    0.000 version.py:280(LooseVersion)
        1    0.000    0.000    0.000    0.000 __init__.py:33(Entry)
        1    0.000    0.000    0.000    0.000 _nonlin.py:615(LowRankMatrix)
       24    0.000    0.000    0.000    0.000 traceback.py:307(__len__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1364(<listcomp>)
        1    0.000    0.000    0.000    0.000 idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sgd.py:10(SGD)
        1    0.000    0.000    0.000    0.000 _interpolate.py:816(PPoly)
        4    0.000    0.000    0.000    0.000 {method '__exit__' of 'numpy.nditer' objects}
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:808(<dictcomp>)
        1    0.000    0.000    0.000    0.000 spawn.py:39(ProcessExitedException)
        1    0.000    0.000    0.000    0.000 containers.py:219(Dict)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:19(ArgsKwargsPair)
        1    0.000    0.000    0.000    0.000 rrule.py:1418(_rrulestr)
        1    0.000    0.000    0.000    0.000 core.py:51(InputFile)
        1    0.000    0.000    0.000    0.000 dfm.py:18(DFM_dummy)
        1    0.000    0.000    0.000    0.000 trsock.py:4(TransportSocket)
        1    0.000    0.000    0.000    0.000 backend_tools.py:394(ToolQuit)
        1    0.000    0.000    0.000    0.000 __init__.py:273(<dictcomp>)
        1    0.000    0.000    0.000    0.000 case.py:243(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 __init__.py:282(Throttler)
        1    0.000    0.000    0.000    0.000 glob_group.py:7(GlobGroup)
       15    0.000    0.000    0.000    0.000 serialization.py:59(<genexpr>)
        1    0.000    0.000    0.000    0.000 radam.py:13(RAdam)
        1    0.000    0.000    0.000    0.000 biasedurn.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1836(NdPPoly)
        1    0.000    0.000    0.000    0.000 internal.py:30(_InternalRPCPickler)
        1    0.000    0.000    0.000    0.000 structure.py:5062(Molecule)
        1    0.000    0.000    0.000    0.000 dop.py:1(<module>)
       21    0.000    0.000    0.000    0.000 _codata.py:2121(_check_obsolete)
        6    0.000    0.000    0.000    0.000 __init__.py:784(__new__)
        1    0.000    0.000    0.000    0.000 _wavelets.py:1(<module>)
       21    0.000    0.000    0.000    0.000 multiarray.py:153(concatenate)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11258(wald_gen)
        8    0.000    0.000    0.000    0.000 version.py:207(<genexpr>)
        2    0.000    0.000    0.000    0.000 constraints.py:126(__call__)
       29    0.000    0.000    0.000    0.000 {method 'groupdict' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:1792(__init__)
        2    0.000    0.000    0.000    0.000 matfuncs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gzip.py:121(GzipFile)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:576(unused)
        1    0.000    0.000    0.000    0.000 cauchy.py:12(Cauchy)
        1    0.000    0.000    0.000    0.000 single.py:341(NthAlgebraic)
        1    0.000    0.000    0.000    0.000 __init__.py:83(OptEinsumModule)
        1    0.000    0.000    0.000    0.000 maggroups.py:33(MagneticSpaceGroup)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1257(burr12_gen)
       22    0.000    0.000    0.000    0.000 symbol.py:799(<genexpr>)
        1    0.000    0.000    0.000    0.000 conv.py:277(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 __init__.py:873(Handler)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3460(_Backend)
        1    0.000    0.000    0.000    0.000 add_newdocs.py:1(<module>)
        5    0.000    0.000    0.000    0.000 cache.py:155(cached_property)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1761(<genexpr>)
        1    0.000    0.000    0.000    0.000 _covariance.py:463(CovViaPrecision)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11558(crystalball_gen)
        1    0.000    0.000    0.000    0.000 threading.py:236(__init__)
       13    0.000    0.000    0.000    0.000 _deprecation.py:8(deprecated)
        1    0.000    0.000    0.000    0.000 poisson.py:10(Poisson)
        1    0.000    0.000    0.000    0.000 core.py:726(Variable)
        1    0.000    0.000    0.000    0.000 _aliases.py:24(arange)
        1    0.000    0.000    0.000    0.000 collections.py:1464(EventCollection)
        1    0.000    0.000    0.000    0.000 context.py:206(ExceptionTrap)
        1    0.000    0.000    0.000    0.000 _kdtree.py:287(node)
        1    0.000    0.000    0.000    0.000 pathlib.py:128(<setcomp>)
        1    0.000    0.000    0.000    0.000 _ni_support.py:1(<module>)
        1    0.000    0.000    0.000    0.000 studentT.py:11(StudentT)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3621(DiscreteDistribution)
        6    0.000    0.000    0.000    0.000 signal.py:49(decorator)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:123(<listcomp>)
        1    0.000    0.000    0.000    0.000 outputs.py:4596(Xdatcar)
       20    0.000    0.000    0.000    0.000 inverselaplace.py:17(__init__)
        1    0.000    0.000    0.000    0.000 linear_relu.py:9(LinearReLU)
        1    0.000    0.000    0.000    0.000 bandstructure.py:157(BandStructure)
        1    0.000    0.000    0.000    0.000 asgd.py:18(ASGD)
        1    0.000    0.000    0.000    0.000 locks.py:446(Barrier)
        1    0.000    0.000    0.000    0.000 series.py:1978(ParametricSurfaceSeries)
        1    0.000    0.000    0.000    0.000 __init__.py:889(FloatStorage)
        1    0.000    0.000    0.000    0.000 glob.py:31(iglob)
        1    0.000    0.000    0.000    0.000 hierarchy.py:1074(ClusterNode)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1599(<listcomp>)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:441(_setdef)
        1    0.000    0.000    0.000    0.000 __init__.py:236(SymInt)
        1    0.000    0.000    0.000    0.000 units.py:494(ArrayWithUnit)
       10    0.000    0.000    0.000    0.000 decorator.py:195(<genexpr>)
        1    0.000    0.000    0.000    0.000 sets.py:1319(Union)
        1    0.000    0.000    0.000    0.000 linear_fused.py:13(LinearBn1d)
        1    0.000    0.000    0.000    0.000 zipfile.py:2290(Path)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2498(_pmf_dispatch)
        1    0.000    0.000    0.000    0.000 matexpr.py:666(MatrixSymbol)
        3    0.000    0.000    0.000    0.000 __init__.py:1720(getEffectiveLevel)
        1    0.000    0.000    0.000    0.000 curve.py:22(Curve)
        1    0.000    0.000    0.000    0.000 beta.py:11(Beta)
        1    0.000    0.000    0.000    0.000 widgets.py:1417(_SelectorWidget)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1007(AnchoredOffsetbox)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:21(Expression)
        1    0.000    0.000    0.000    0.000 Image.py:3765(register_extensions)
        1    0.000    0.000    0.000    0.000 generate.py:26(Sieve)
        1    0.000    0.000    0.000    0.000 boolalg.py:483(BooleanFunction)
        1    0.000    0.000    0.000    0.000 linear.py:11(Linear)
        1    0.000    0.000    0.000    0.000 core.py:191(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:1203(Transform)
        1    0.000    0.000    0.000    0.000 function_base.py:2314(<listcomp>)
        1    0.000    0.000    0.000    0.000 creation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:30(binom_gen)
        4    0.000    0.000    0.000    0.000 libmpf.py:454(to_float)
        4    0.000    0.000    0.000    0.000 libmpf.py:574(mpf_cmp)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:15(Ynm)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:11(EmbeddingPackedParams)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5135(geninvgauss_gen)
        1    0.000    0.000    0.000    0.000 tz.py:201(tzlocal)
        1    0.000    0.000    0.000    0.000 pooling.py:643(AvgPool3d)
        1    0.000    0.000    0.000    0.000 rational.py:24(mpq)
        1    0.000    0.000    0.000    0.000 outputs.py:4975(Wavecar)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:602(make_mpc)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5836(johnsonsu_gen)
        1    0.000    0.000    0.000    0.000 matplotlib.py:43(MatplotlibBackend)
        1    0.000    0.000    0.000    0.000 delta_functions.py:393(Heaviside)
       14    0.000    0.000    0.000    0.000 mock.py:1936(<genexpr>)
        1    0.000    0.000    0.000    0.000 numbers.py:1204(catalan)
        1    0.000    0.000    0.000    0.000 __init__.py:969(HalfStorage)
        2    0.000    0.000    0.000    0.000 densebasic.py:255(dup_strip)
        1    0.000    0.000    0.000    0.000 conv.py:483(Conv3d)
        1    0.000    0.000    0.000    0.000 _index.py:25(IndexMixin)
        1    0.000    0.000    0.000    0.000 util.py:15(__config_flags)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:398(uppergamma)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10074(truncexpon_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:1432(Logger)
        1    0.000    0.000    0.000    0.000 sequences.py:726(RecursiveSeq)
        1    0.000    0.000    0.000    0.000 functional_modules.py:129(QFunctional)
        1    0.000    0.000    0.000    0.000 sampler.py:82(RandomSampler)
       39    0.000    0.000    0.000    0.000 {built-in method _ctypes.sizeof}
        1    0.000    0.000    0.000    0.000 subprocess.py:469(CompletedProcess)
        3    0.000    0.000    0.000    0.000 __init__.py:590(_discover_resolvers)
        1    0.000    0.000    0.000    0.000 abc.py:177(InspectLoader)
       51    0.000    0.000    0.000    0.000 iterables.py:861(key)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:12(add_docstr_all)
        1    0.000    0.000    0.000    0.000 modules.py:44(Module)
        9    0.000    0.000    0.000    0.000 _util.py:949(_rename_parameter)
        1    0.000    0.000    0.000    0.000 dense.py:28(DenseMatrix)
       10    0.000    0.000    0.000    0.000 _pytesttester.py:76(__init__)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:163(__neg__)
        9    0.000    0.000    0.000    0.000 core.py:4246(<genexpr>)
        1    0.000    0.000    0.000    0.000 Periodicity_System.py:12(PeriodicityPhysicsSystem)
        1    0.000    0.000    0.000    0.000 reduction.py:33(ForkingPickler)
        1    0.000    0.000    0.000    0.000 _interpolate.py:151(_check_broadcast_up_to)
        1    0.000    0.000    0.000    0.000 assume.py:224(Predicate)
        1    0.000    0.000    0.000    0.000 streams.py:140(Event)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:36(IntFormat)
        1    0.000    0.000    0.000    0.000 _iotools.py:229(NameValidator)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:290(FusedMovingAvgObsFakeQuantize)
        1    0.000    0.000    0.000    0.000 warnings.py:403(__init__)
        1    0.000    0.000    0.000    0.000 header.py:413(_ValueFormatter)
        1    0.000    0.000    0.000    0.000 integers.py:496(frac)
        1    0.000    0.000    0.000    0.000 zipfile.py:802(ZipExtFile)
        1    0.000    0.000    0.000    0.000 lambdify.py:1123(_EvaluatorPrinter)
        5    0.000    0.000    0.000    0.000 sets.py:2010(__iter__)
        1    0.000    0.000    0.000    0.000 facts.py:75(transitive_closure)
        1    0.000    0.000    0.000    0.000 typing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 log_normal.py:8(LogNormal)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:9(Directory)
       22    0.000    0.000    0.000    0.000 core.py:3595(<genexpr>)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:90(KroneckerDelta)
        1    0.000    0.000    0.000    0.000 _ode.py:110(ode)
        1    0.000    0.000    0.000    0.000 spline.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1824(dpareto_lognorm_gen)
        1    0.000    0.000    0.000    0.000 unix_events.py:457(_UnixReadPipeTransport)
        1    0.000    0.000    0.000    0.000 conv.py:10(_ConvNd)
       18    0.000    0.000    0.000    0.000 multiarray.py:1080(copyto)
        1    0.000    0.000    0.000    0.000 figure.py:47(_AxesStack)
        2    0.000    0.000    0.000    0.000 {built-in method _struct.unpack}
        1    0.000    0.000    0.000    0.000 gridspec.py:26(GridSpecBase)
        1    0.000    0.000    0.000    0.000 numpy.py:345(<dictcomp>)
        6    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 transforms.py:1702(__init__)
        1    0.000    0.000    0.000    0.000 depends.py:20(Require)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1432(cauchy_gen)
        1    0.000    0.000    0.000    0.000 typing.py:1258(__mro_entries__)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:151(ivmpc)
        1    0.000    0.000    0.000    0.000 __init__.py:439(LibraryLoader)
        1    0.000    0.000    0.000    0.000 markers.py:274(Marker)
        1    0.000    0.000    0.000    0.000 special.py:213(OneMatrix)
        1    0.000    0.000    0.000    0.000 request.py:2139(FancyURLopener)
        1    0.000    0.000    0.000    0.000 memoization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 composer.py:31(Composer)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:54(_get_platform_and_machine)
        1    0.000    0.000    0.000    0.000 adamax.py:12(Adamax)
        1    0.000    0.000    0.000    0.000 rnn.py:135(_LSTMSingleLayer)
        1    0.000    0.000    0.000    0.000 inference.py:252(KB)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:84(_apply_params)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:393(WORLD)
        1    0.000    0.000    0.000    0.000 profiler_util.py:385(FunctionEvent)
        1    0.000    0.000    0.000    0.000 numbers.py:2771(Zero)
        1    0.000    0.000    0.000    0.000 calendar.py:71(_localized_day)
        1    0.000    0.000    0.000    0.000 netcdf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 legend_handler.py:436(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2578(invwishart_gen)
       27    0.000    0.000    0.000    0.000 singleton.py:152(__repr__)
        1    0.000    0.000    0.000    0.000 operator_support.py:177(OpSupports)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:11(ExpRelaxedCategorical)
        1    0.000    0.000    0.000    0.000 point.py:1073(Point3D)
        1    0.000    0.000    0.000    0.000 numbers.py:3465(ComplexInfinity)
        1    0.000    0.000    0.000    0.000 scalarint.py:12(ScalarInt)
        1    0.000    0.000    0.000    0.000 __init__.py:949(DoubleStorage)
        1    0.000    0.000    0.000    0.000 series.py:1861(SurfaceOver2DRangeSeries)
        1    0.000    0.000    0.000    0.000 transforms.py:1827(Affine2D)
        1    0.000    0.000    0.000    0.000 upsampling.py:213(UpsamplingBilinear2d)
        1    0.000    0.000    0.000    0.000 delta_functions.py:17(DiracDelta)
        1    0.000    0.000    0.000    0.000 rk.py:74(RungeKutta)
        1    0.000    0.000    0.000    0.000 traceback.py:636(TracebackException)
        4    0.000    0.000    0.000    0.000 core.py:3536(parseImpl)
        1    0.000    0.000    0.000    0.000 six.py:498(Module_six_moves_urllib)
        1    0.000    0.000    0.000    0.000 gumbel.py:12(Gumbel)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:157(QConfigMapping)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:362(__subclasshook__)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._using_numpy2_behavior}
        1    0.000    0.000    0.000    0.000 tag.py:20(Tag)
        1    0.000    0.000    0.000    0.000 indexed.py:124(Indexed)
        1    0.000    0.000    0.000    0.000 primes.py:41(PrimeIdeal)
        1    0.000    0.000    0.000    0.000 representer.py:492(RoundTripRepresenter)
        1    0.000    0.000    0.000    0.000 vode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _common.py:127(_TZifHeader)
        1    0.000    0.000    0.000    0.000 adagrad.py:12(Adagrad)
        1    0.000    0.000    0.000    0.000 rnn.py:1000(LSTMCell)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:433(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 tight_bbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 minpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Orbit_spd_without_spin.py:15(orbit_spd_without_spin)
        1    0.000    0.000    0.000    0.000 stringpict.py:354(prettyForm)
       24    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 error_functions.py:1964(Ci)
        1    0.000    0.000    0.000    0.000 extensions.py:219(MonogenicFiniteExtension)
        1    0.000    0.000    0.000    0.000 extras.py:1607(MAxisConcatenator)
        2    0.000    0.000    0.000    0.000 gzip.py:402(_read_exact)
        1    0.000    0.000    0.000    0.000 selector_events.py:888(_SelectorSocketTransport)
        1    0.000    0.000    0.000    0.000 __init__.py:283(SymFloat)
       10    0.000    0.000    0.000    0.000 __init__.py:318(_wrap_deprecated_method)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._tracer_warn_use_python}
        2    0.000    0.000    0.000    0.000 results.py:441(__getattr__)
        1    0.000    0.000    0.000    0.000 _infra.py:129(Location)
        1    0.000    0.000    0.000    0.000 _aliases.py:665(finfo)
        1    0.000    0.000    0.000    0.000 readers.py:53(MultiplexedPath)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8315(lomax_gen)
        1    0.000    0.000    0.000    0.000 batchnorm.py:552(SyncBatchNorm)
        3    0.000    0.000    0.000    0.000 arrayprint.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 activation.py:14(ReLU6)
        1    0.000    0.000    0.000    0.000 containers.py:23(Tuple)
        1    0.000    0.000    0.000    0.000 abc.py:131(TraversableResources)
        1    0.000    0.000    0.000    0.000 __init__.py:979(LongStorage)
        1    0.000    0.000    0.000    0.000 linear.py:48(Linear)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:246(GaussianDomain)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2301(_entropy_dispatch)
        1    0.000    0.000    0.000    0.000 __init__.py:879(DoubleStorage)
        1    0.000    0.000    0.000    0.000 afm.py:358(AFM)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:118(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:385(check_sparse_tensor_invariants)
        1    0.000    0.000    0.000    0.000 function.py:1941(Lambda)
        1    0.000    0.000    0.000    0.000 _kdtree.py:98(Rectangle)
        1    0.000    0.000    0.000    0.000 _infra.py:180(Stack)
        1    0.000    0.000    0.000    0.000 padding.py:15(_ConstantPadNd)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8080(nct_gen)
       16    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
        1    0.000    0.000    0.000    0.000 __init__.py:959(FloatStorage)
        1    0.000    0.000    0.000    0.000 _common.py:267(tzrangebase)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:47(Resolvent)
        1    0.000    0.000    0.000    0.000 __init__.py:6(HTTPStatus)
        1    0.000    0.000    0.000    0.000 dos.py:395(FermiDos)
        1    0.000    0.000    0.000    0.000 _docscrape.py:25(Reader)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:1122(TOMS748Solver)
       16    0.000    0.000    0.000    0.000 __init__.py:176(is_initialized)
        1    0.000    0.000    0.000    0.000 kind.py:257(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 singleton.py:24(SingletonRegistry)
        1    0.000    0.000    0.000    0.000 transforms.py:955(LowerCholeskyTransform)
        1    0.000    0.000    0.000    0.000 join.py:88(_JoinConfig)
        1    0.000    0.000    0.000    0.000 groups.py:139(PointGroup)
        1    0.000    0.000    0.000    0.000 __init__.py:545(Stack)
        3    0.000    0.000    0.000    0.000 __init__.py:753(path)
        3    0.000    0.000    0.000    0.000 rcsetup.py:990(validate_hist_bins)
        1    0.000    0.000    0.000    0.000 core.py:6345(mvoid)
        1    0.000    0.000    0.000    0.000 core.py:109(InputSet)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1728(RealInterval)
        1    0.000    0.000    0.000    0.000 _util.py:13(DeferredError)
        1    0.000    0.000    0.000    0.000 numbers.py:762(harmonic)
        1    0.000    0.000    0.000    0.000 feedparser.py:136(FeedParser)
        1    0.000    0.000    0.000    0.000 __init__.py:899(HalfStorage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11392(gennorm_gen)
        3    0.000    0.000    0.000    0.000 __init__.py:880(legacy_normalize)
        1    0.000    0.000    0.000    0.000 __init__.py:143(__init__)
        1    0.000    0.000    0.000    0.000 fitpack.py:1(<module>)
       15    0.000    0.000    0.000    0.000 arrayprint.py:994(<genexpr>)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1347(ReduceOrder)
       11    0.000    0.000    0.000    0.000 reductions.py:110(_torch_reduce)
        1    0.000    0.000    0.000    0.000 expr.py:3989(AtomicExpr)
        1    0.000    0.000    0.000    0.000 modules.py:698(PowerBasis)
        1    0.000    0.000    0.000    0.000 selector_events.py:744(_SelectorTransport)
        1    0.000    0.000    0.000    0.000 log.py:41(Log)
       30    0.000    0.000    0.000    0.000 polyoptions.py:196(<genexpr>)
        1    0.000    0.000    0.000    0.000 _vertex.py:9(VertexBase)
        1    0.000    0.000    0.000    0.000 _guards.py:238(Checkpointable)
        3    0.000    0.000    0.000    0.000 message.py:330(set_payload)
        1    0.000    0.000    0.000    0.000 activation.py:1249(PReLU)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:607(default)
        1    0.000    0.000    0.000    0.000 structure.py:25(SymmetrizedStructure)
        1    0.000    0.000    0.000    0.000 extensions.py:11(ExtensionElement)
        1    0.000    0.000    0.000    0.000 __init__.py:1099(QUInt2x4Storage)
        1    0.000    0.000    0.000    0.000 mathtext.py:378(Fonts)
        1    0.000    0.000    0.000    0.000 core.py:3237(QuotedString)
       20    0.000    0.000    0.000    0.000 mul.py:571(<listcomp>)
        1    0.000    0.000    0.000    0.000 ticker.py:1909(LinearLocator)
        1    0.000    0.000    0.000    0.000 rnn.py:230(GRUCell)
        1    0.000    0.000    0.000    0.000 __config__.py:95(<listcomp>)
       18    0.000    0.000    0.000    0.000 typing_extensions.py:762(<genexpr>)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:11(FisherSnedecor)
        2    0.000    0.000    0.000    0.000 _adapters.py:12(__init__)
        1    0.000    0.000    0.000    0.000 _byteordercodes.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:299(get_preferred_scheme)
        1    0.000    0.000    0.000    0.000 rmsprop.py:11(RMSprop)
        1    0.000    0.000    0.000    0.000 core.py:8376(_convert2ma)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1363(exec_module)
        1    0.000    0.000    0.000    0.000 _base.py:174(_process_plot_var_args)
        1    0.000    0.000    0.000    0.000 transforms.py:80(TransformNode)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:61(_ResourceSharer)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8859(powerlognorm_gen)
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:24(MultiUFunc)
        1    0.000    0.000    0.000    0.000 lazy.py:53(LazyModuleMixin)
        1    0.000    0.000    0.000    0.000 arrayterator.py:16(Arrayterator)
        1    0.000    0.000    0.000    0.000 mio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis.py:29(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:918(PathDistribution)
        1    0.000    0.000    0.000    0.000 pooling.py:874(_LPPoolNd)
        1    0.000    0.000    0.000    0.000 triangulation.py:4(Triangulation)
        1    0.000    0.000    0.000    0.000 exceptions.py:11(SymPyDeprecationWarning)
        1    0.000    0.000    0.000    0.000 outputs.py:177(KpointOptProps)
        1    0.000    0.000    0.000    0.000 _multivariate.py:295(multivariate_normal_gen)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:114(FakeQuantize)
        1    0.000    0.000    0.000    0.000 functional_modules.py:82(FXFloatFunctional)
       14    0.000    0.000    0.000    0.000 _common.py:9(__init__)
        1    0.000    0.000    0.000    0.000 autograd_function.py:30(__init__)
        1    0.000    0.000    0.000    0.000 interval_membership.py:4(intervalMembership)
        1    0.000    0.000    0.000    0.000 bessel.py:607(besselk)
        1    0.000    0.000    0.000    0.000 relational.py:549(Equality)
        1    0.000    0.000    0.000    0.000 image.py:1134(PcolorImage)
        1    0.000    0.000    0.000    0.000 filters.py:1(<module>)
        1    0.000    0.000    0.000    0.000 main.py:1489(YAMLObject)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:287(CubicTriInterpolator)
        1    0.000    0.000    0.000    0.000 sets.py:10(MatrixSet)
        1    0.000    0.000    0.000    0.000 conv.py:382(Conv2d)
        1    0.000    0.000    0.000    0.000 graphs.py:40(CUDAGraph)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:7(PackageUnpickler)
        1    0.000    0.000    0.000    0.000 graph.py:113(_Namespace)
        1    0.000    0.000    0.000    0.000 bessel.py:36(BesselBase)
        1    0.000    0.000    0.000    0.000 singularity_functions.py:14(SingularityFunction)
        1    0.000    0.000    0.000    0.000 _functions.py:10(Broadcast)
        1    0.000    0.000    0.000    0.000 __init__.py:347(EntryPoints)
        1    0.000    0.000    0.000    0.000 conv.py:82(Conv2d)
        1    0.000    0.000    0.000    0.000 error_functions.py:674(erf2)
        1    0.000    0.000    0.000    0.000 ticker.py:1413(EngFormatter)
        1    0.000    0.000    0.000    0.000 _interpolate.py:592(_PPolyBase)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:9(__PrinterOptions)
        1    0.000    0.000    0.000    0.000 swa_utils.py:200(SWALR)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1027(matrix_normal_gen)
        1    0.000    0.000    0.000    0.000 series.py:1496(ParametricLineBaseSeries)
        1    0.000    0.000    0.000    0.000 splitter_base.py:193(SplitResult)
       12    0.000    0.000    0.000    0.000 matexpr.py:21(_sympifyit)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:129(bernoulli_gen)
        3    0.000    0.000    0.000    0.000 glob.py:213(_join)
        1    0.000    0.000    0.000    0.000 __init__.py:929(ShortStorage)
        1    0.000    0.000    0.000    0.000 __init__.py:331(_Stream)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:674(Formula)
        4    0.000    0.000    0.000    0.000 pythonmpq.py:194(__neg__)
        1    0.000    0.000    0.000    0.000 warnings.py:25(SetuptoolsWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:79(method_cache)
        1    0.000    0.000    0.000    0.000 single.py:211(SingleODESolver)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:236(<lambda>)
        1    0.000    0.000    0.000    0.000 graph_module.py:230(_WrappedCall)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:161(SobolResult)
        3    0.000    0.000    0.000    0.000 rcsetup.py:740(validate_bbox)
        1    0.000    0.000    0.000    0.000 socket.py:662(SocketIO)
        1    0.000    0.000    0.000    0.000 blocking_input.py:101(BlockingMouseInput)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1767(yulesimon_gen)
        1    0.000    0.000    0.000    0.000 _atfork.py:18(register_after_fork)
        1    0.000    0.000    0.000    0.000 colors.py:371(ColorConverter)
        1    0.000    0.000    0.000    0.000 functions.py:11(TensorProduct)
        1    0.000    0.000    0.000    0.000 hyper.py:796(HyperRep)
        1    0.000    0.000    0.000    0.000 ticker.py:1218(LogitFormatter)
        1    0.000    0.000    0.000    0.000 core.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 integers.py:21(RoundFunction)
        1    0.000    0.000    0.000    0.000 __init__.py:104(CallbackRegistry)
        7    0.000    0.000    0.000    0.000 __init__.py:101(CFunctionType)
        1    0.000    0.000    0.000    0.000 pycode.py:552(PythonCodePrinter)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:476(Hyper_Function)
        1    0.000    0.000    0.000    0.000 matrix_element.py:5(Matrix_Ele)
        1    0.000    0.000    0.000    0.000 unix_events.py:593(_UnixWritePipeTransport)
        1    0.000    0.000    0.000    0.000 axis3d.py:477(YAxis)
        1    0.000    0.000    0.000    0.000 hyper.py:1087(HyperRep_cosasin)
        1    0.000    0.000    0.000    0.000 graph_module.py:27(_EvalCacheLoader)
        1    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
        5    0.000    0.000    0.000    0.000 core.py:3142(re_match)
        1    0.000    0.000    0.000    0.000 fancysets.py:519(Range)
        3    0.000    0.000    0.000    0.000 constraints.py:109(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:999(ShortStorage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4780(hypsecant_gen)
        1    0.000    0.000    0.000    0.000 fancysets.py:166(Integers)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:961(poisson_gen)
        1    0.000    0.000    0.000    0.000 _ode.py:1121(dopri5)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4158(Sentinel)
        1    0.000    0.000    0.000    0.000 mio4.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mock.py:2422(_Call)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1060(digamma)
        1    0.000    0.000    0.000    0.000 setupcfg.py:603(ConfigOptionsHandler)
        1    0.000    0.000    0.000    0.000 _internal.py:217(_getintp_ctype)
        1    0.000    0.000    0.000    0.000 combining.py:117(_ForkerIterDataPipe)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3046(genlogistic_gen)
        1    0.000    0.000    0.000    0.000 _ode.py:843(vode)
        1    0.000    0.000    0.000    0.000 profiler_util.py:16(EventList)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:324(_icdf_formula)
        1    0.000    0.000    0.000    0.000 msgpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 discovery.py:298(ConfigDiscovery)
        1    0.000    0.000    0.000    0.000 utils.py:183(DisableOnWriteError)
        1    0.000    0.000    0.000    0.000 function_base.py:2117(vectorize)
        1    0.000    0.000    0.000    0.000 _datasource.py:196(DataSource)
        1    0.000    0.000    0.000    0.000 streams.py:301(StreamWriter)
        1    0.000    0.000    0.000    0.000 __init__.py:969(ComplexDoubleStorage)
        1    0.000    0.000    0.000    0.000 cobyla.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pg_operation.py:10(PointGroupOp)
        1    0.000    0.000    0.000    0.000 polynomials.py:290(gegenbauer)
        1    0.000    0.000    0.000    0.000 numbers.py:1350(genocchi)
        1    0.000    0.000    0.000    0.000 conv.py:856(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 comments.py:1089(CommentedSet)
        1    0.000    0.000    0.000    0.000 rprop.py:11(Rprop)
        1    0.000    0.000    0.000    0.000 normalization.py:87(LayerNorm)
        1    0.000    0.000    0.000    0.000 mio_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 specifiers.py:690(SpecifierSet)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:64(_apply_params)
        1    0.000    0.000    0.000    0.000 arffread.py:1(<module>)
        1    0.000    0.000    0.000    0.000 text.py:1326(_AnnotationBase)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:913(ReduceLROnPlateau)
        2    0.000    0.000    0.000    0.000 facts.py:305(rules_beta)
        1    0.000    0.000    0.000    0.000 __init__.py:1009(CharStorage)
        1    0.000    0.000    0.000    0.000 mathtext.py:1557(List)
        1    0.000    0.000    0.000    0.000 ideals.py:282(ModuleImplementedIdeal)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:560(BlockDiagMatrix)
        1    0.000    0.000    0.000    0.000 axis.py:553(Ticker)
        1    0.000    0.000    0.000    0.000 colors.py:1238(SymLogNorm)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:553(_Parameter)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:19(LKJCholesky)
       16    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:79(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:13(register)
        1    0.000    0.000    0.000    0.000 discovery.py:84(_Finder)
        1    0.000    0.000    0.000    0.000 ops.py:153(<listcomp>)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:30(_isnull)
        1    0.000    0.000    0.000    0.000 pycode.py:765(<dictcomp>)
        1    0.000    0.000    0.000    0.000 function.py:674(NestedIOFunction)
        1    0.000    0.000    0.000    0.000 container.py:5(Container)
        1    0.000    0.000    0.000    0.000 events.py:24(Handle)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2877(__init__)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:295(<listcomp>)
        1    0.000    0.000    0.000    0.000 sputils.py:1(<module>)
        4    0.000    0.000    0.000    0.000 generate.py:67(<genexpr>)
        1    0.000    0.000    0.000    0.000 utils.py:163(SimpleTextIOWrapper)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1744(dgamma_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:35(_SupportedQEnginesProp)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11948(rv_histogram)
        1    0.000    0.000    0.000    0.000 batchnorm.py:17(_NormBase)
        1    0.000    0.000    0.000    0.000 configparser.py:297(ParsingError)
        1    0.000    0.000    0.000    0.000 dataloader.py:684(_MultiProcessingDataLoaderIter)
        1    0.000    0.000    0.000    0.000 conv.py:1141(_LazyConvXdMixin)
        1    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:503(_MissingDynamic)
        1    0.000    0.000    0.000    0.000 mvn.py:1(<module>)
        1    0.000    0.000    0.000    0.000 slice.py:31(MatrixSlice)
        1    0.000    0.000    0.000    0.000 _fortran.py:33(FortranFile)
        1    0.000    0.000    0.000    0.000 qhull.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scanner.py:2211(RoundTripScannerSC)
        1    0.000    0.000    0.000    0.000 _docscrape.py:623(ClassDoc)
        4    0.000    0.000    0.000    0.000 __init__.py:169(<listcomp>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:428(FloorDiv)
        1    0.000    0.000    0.000    0.000 __init__.py:17(Future)
        1    0.000    0.000    0.000    0.000 isolve.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:84(__init__)
        1    0.000    0.000    0.000    0.000 ckdtree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 npyio.py:106(NpzFile)
        1    0.000    0.000    0.000    0.000 ticker.py:232(Formatter)
        1    0.000    0.000    0.000    0.000 adjoint.py:6(Adjoint)
        1    0.000    0.000    0.000    0.000 __init__.py:949(BoolStorage)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:237(<lambda>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:76(Options)
        1    0.000    0.000    0.000    0.000 unix_events.py:1337(ThreadedChildWatcher)
        1    0.000    0.000    0.000    0.000 immutable.py:82(ImmutableDenseMatrix)
        2    0.000    0.000    0.000    0.000 scale.py:634(get_scale_names)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:639(ignore)
        1    0.000    0.000    0.000    0.000 _utils.py:93(BasicEvaluation)
        1    0.000    0.000    0.000    0.000 polyhedron.py:11(Polyhedron)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1595(chi2_gen)
        1    0.000    0.000    0.000    0.000 ase.py:86(AseAtomsAdaptor)
        1    0.000    0.000    0.000    0.000 decomp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:959(BFloat16Storage)
       11    0.000    0.000    0.000    0.000 api.py:488(method_factory)
        1    0.000    0.000    0.000    0.000 partitions.py:308(IntegerPartition)
        1    0.000    0.000    0.000    0.000 ticker.py:2084(MaxNLocator)
        1    0.000    0.000    0.000    0.000 contour.py:1388(QuadContourSet)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3579(TypeAliasType)
        1    0.000    0.000    0.000    0.000 trace.py:11(Trace)
        1    0.000    0.000    0.000    0.000 partitions.py:15(Partition)
        1    0.000    0.000    0.000    0.000 connection.py:431(Listener)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3162(multinomial_gen)
        1    0.000    0.000    0.000    0.000 outputs.py:4024(Procar)
        1    0.000    0.000    0.000    0.000 proxy.py:53(ScopeContextManager)
        2    0.000    0.000    0.000    0.000 deprecation.py:184(_deprecate_positional_args)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:115(TokenList)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:233(<lambda>)
        1    0.000    0.000    0.000    0.000 tensor.py:4928(_WildTensExpr)
        1    0.000    0.000    0.000    0.000 textpath.py:336(TextPath)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:476(_broadcast_arrays_dispatcher)
        1    0.000    0.000    0.000    0.000 base_events.py:206(_SendfileFallbackProtocol)
        1    0.000    0.000    0.000    0.000 polyoptions.py:349(Order)
        1    0.000    0.000    0.000    0.000 configparser.py:1210(ConfigParser)
        1    0.000    0.000    0.000    0.000 __init__.py:222(__exit__)
        1    0.000    0.000    0.000    0.000 kind.py:97(__new__)
        1    0.000    0.000    0.000    0.000 threading.py:224(Condition)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:44(__new__)
        1    0.000    0.000    0.000    0.000 hadamard.py:313(HadamardPower)
        1    0.000    0.000    0.000    0.000 transforms.py:521(ExpTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:1049(ComplexFloatStorage)
        1    0.000    0.000    0.000    0.000 dos.py:37(DOS)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1547(dirichlet_gen)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:215(_ProxyTensor)
        1    0.000    0.000    0.000    0.000 traceback.py:372(StackSummary)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3321(genextreme_gen)
        1    0.000    0.000    0.000    0.000 rnn.py:1061(RNNCell)
       13    0.000    0.000    0.000    0.000 utils.py:35(wrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:1402(_fixupChildren)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:657(Parameter)
        1    0.000    0.000    0.000    0.000 art3d.py:557(Poly3DCollection)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7768(ncx2_gen)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1767(C14NWriterTarget)
        1    0.000    0.000    0.000    0.000 _compression.py:9(BaseStream)
        1    0.000    0.000    0.000    0.000 core.py:3553(White)
       14    0.000    0.000    0.000    0.000 {method 'seek' of '_io.StringIO' objects}
        2    0.000    0.000    0.000    0.000 integerring.py:54(__eq__)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:900(_Patcher)
        1    0.000    0.000    0.000    0.000 frontend.py:519(WithItemBuilder)
        1    0.000    0.000    0.000    0.000 pkgutil.py:269(ImpLoader)
        1    0.000    0.000    0.000    0.000 singleton.py:114(__init__)
        8    0.000    0.000    0.000    0.000 mathtext.py:1903(__init__)
        1    0.000    0.000    0.000    0.000 conv.py:118(Conv3d)
        1    0.000    0.000    0.000    0.000 __init__.py:60(Quantize)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5342(Coset)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:12(HalfCauchy)
        1    0.000    0.000    0.000    0.000 _typing.py:36(JustInt)
        1    0.000    0.000    0.000    0.000 _check.py:8(AttributeTypeIsSupportedChecker)
        1    0.000    0.000    0.000    0.000 __init__.py:939(CharStorage)
        1    0.000    0.000    0.000    0.000 queue.py:258(_PySimpleQueue)
        1    0.000    0.000    0.000    0.000 _parser.py:241(parserinfo)
        1    0.000    0.000    0.000    0.000 beta_functions.py:20(beta)
        1    0.000    0.000    0.000    0.000 units.py:110(ConversionInterface)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:23(BarrierSubproblem)
        1    0.000    0.000    0.000    0.000 _at.py:61(at)
        1    0.000    0.000    0.000    0.000 __init__.py:919(IntStorage)
        1    0.000    0.000    0.000    0.000 pycode.py:416(ArrayPrinter)
        1    0.000    0.000    0.000    0.000 solvers.py:23(RawMatrix)
        1    0.000    0.000    0.000    0.000 inverse.py:8(Inverse)
        1    0.000    0.000    0.000    0.000 tensor.py:4488(TensorElement)
       10    0.000    0.000    0.000    0.000 __future__.py:83(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:6(is_available)
        3    0.000    0.000    0.000    0.000 units.py:808(wrap)
        1    0.000    0.000    0.000    0.000 rnn.py:749(RNNCellBase)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:299(_process_parameters)
        1    0.000    0.000    0.000    0.000 hmac.py:27(HMAC)
       20    0.000    0.000    0.000    0.000 numbers.py:2835(__bool__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1857(cache_policy)
        1    0.000    0.000    0.000    0.000 combining.py:93(_ContainerTemplate)
        1    0.000    0.000    0.000    0.000 para4tb.py:12(ParaTB)
        2    0.000    0.000    0.000    0.000 math2.py:53(_mathfun_n)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:103(elliptic_f)
        1    0.000    0.000    0.000    0.000 sets.py:1893(UniversalSet)
        1    0.000    0.000    0.000    0.000 __init__.py:989(IntStorage)
        1    0.000    0.000    0.000    0.000 _cubic.py:160(PchipInterpolator)
        1    0.000    0.000    0.000    0.000 periodic_table.py:637(is_valid_symbol)
        1    0.000    0.000    0.000    0.000 orderings.py:63(ProductOrder)
        1    0.000    0.000    0.000    0.000 conv_relu.py:19(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 dates.py:1052(DateLocator)
        1    0.000    0.000    0.000    0.000 __init__.py:606(_FileInFile)
        1    0.000    0.000    0.000    0.000 bessel.py:106(besselj)
        1    0.000    0.000    0.000    0.000 loss.py:622(BCEWithLogitsLoss)
        1    0.000    0.000    0.000    0.000 error_functions.py:2104(Shi)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:10(LaplacianNd)
        1    0.000    0.000    0.000    0.000 argparse.py:1328(_ActionsContainer)
        1    0.000    0.000    0.000    0.000 __init__.py:1019(BoolStorage)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3629(__init__)
        1    0.000    0.000    0.000    0.000 rnn.py:1018(RNNCellBase)
        1    0.000    0.000    0.000    0.000 fileopener.py:13(FileOpenerIterDataPipe)
        1    0.000    0.000    0.000    0.000 transforms.py:2503(BboxTransformTo)
        1    0.000    0.000    0.000    0.000 sets.py:854(ProductSet)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:897(_resolve_filename)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2861(truncweibull_min_gen)
        1    0.000    0.000    0.000    0.000 tarfile.py:328(_Stream)
        1    0.000    0.000    0.000    0.000 numbers.py:2839(One)
        1    0.000    0.000    0.000    0.000 transforms.py:459(ReshapeTransform)
        1    0.000    0.000    0.000    0.000 numbers.py:3888(TribonacciConstant)
        1    0.000    0.000    0.000    0.000 colors.py:509(Colormap)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3772(__init__)
        1    0.000    0.000    0.000    0.000 backend_tools.py:992(ToolHelpBase)
        1    0.000    0.000    0.000    0.000 spglib.py:108(SpglibDataset)
        8    0.000    0.000    0.000    0.000 unicode.py:9(__init__)
        1    0.000    0.000    0.000    0.000 integers.py:297(ceiling)
        1    0.000    0.000    0.000    0.000 splitter_base.py:81(FxNetAccNodesFinder)
        1    0.000    0.000    0.000    0.000 conv.py:672(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 mathtext.py:1444(Char)
        3    0.000    0.000    0.000    0.000 message.py:211(is_multipart)
        2    0.000    0.000    0.000    0.000 Files_in.py:4(__init__)
        1    0.000    0.000    0.000    0.000 discovery.py:185(ModuleFinder)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:579(DecompositionInterpreter)
        7    0.000    0.000    0.000    0.000 __init__.py:27(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1224(levy_stable_frozen)
        1    0.000    0.000    0.000    0.000 transforms.py:634(TanhTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:1059(QUInt8Storage)
        3    0.000    0.000    0.000    0.000 index_tricks.py:320(__init__)
       20    0.000    0.000    0.000    0.000 mul.py:672(<listcomp>)
        1    0.000    0.000    0.000    0.000 function.py:16(FunctionCtx)
        1    0.000    0.000    0.000    0.000 outputs.py:5824(WSWQ)
        1    0.000    0.000    0.000    0.000 linear.py:134(Bilinear)
        1    0.000    0.000    0.000    0.000 __init__.py:1069(QInt8Storage)
        1    0.000    0.000    0.000    0.000 _typing.py:210(_DataPipeType)
        1    0.000    0.000    0.000    0.000 json.py:713(MontyDecoder)
        1    0.000    0.000    0.000    0.000 complexes.py:20(re)
        7    0.000    0.000    0.000    0.000 memoization.py:4(recurrence_memo)
        1    0.000    0.000    0.000    0.000 connection.py:347(Connection)
        1    0.000    0.000    0.000    0.000 __init__.py:1029(BFloat16Storage)
        1    0.000    0.000    0.000    0.000 __init__.py:1303(Manager)
        1    0.000    0.000    0.000    0.000 transforms.py:280(__init__)
        1    0.000    0.000    0.000    0.000 _atfork.py:1(<module>)
        1    0.000    0.000    0.000    0.000 worker.py:64(WorkerInfo)
        1    0.000    0.000    0.000    0.000 odepack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv_fused.py:695(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 getlimits.py:378(finfo)
        1    0.000    0.000    0.000    0.000 _ltisys.py:132(lti)
        5    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        1    0.000    0.000    0.000    0.000 ndim_array.py:15(ArrayKind)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:565(anglit_gen)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:6(DisjointSet)
        1    0.000    0.000    0.000    0.000 difflib.py:1666(HtmlDiff)
        1    0.000    0.000    0.000    0.000 decoder.py:269(Decoder)
        1    0.000    0.000    0.000    0.000 filter_design.py:1(<module>)
        1    0.000    0.000    0.000    0.000 structure.py:142(PeriodicNeighbor)
        1    0.000    0.000    0.000    0.000 conv_relu.py:119(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 _pep440.py:140(__lt__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1235(_kwargs2args)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:132(ImmutableDenseNDimArray)
       10    0.000    0.000    0.000    0.000 wrappers.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:1030(ToolCopyToClipboardBase)
        4    0.000    0.000    0.000    0.000 doccer.py:180(replace_notes_in_docstring)
        1    0.000    0.000    0.000    0.000 sampler.py:139(SubsetRandomSampler)
        1    0.000    0.000    0.000    0.000 conv_add.py:9(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 _trustregion.py:30(BaseQuadraticSubproblem)
        1    0.000    0.000    0.000    0.000 fft.py:250(_ShapeAndDims)
        1    0.000    0.000    0.000    0.000 integers.py:97(floor)
        1    0.000    0.000    0.000    0.000 headerregistry.py:260(UnstructuredHeader)
        1    0.000    0.000    0.000    0.000 modules.py:1647(PowerBasisElement)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2479(_logpmf_dispatch)
        2    0.000    0.000    0.000    0.000 core.py:6643(__setattr__)
        1    0.000    0.000    0.000    0.000 parabola.py:20(Parabola)
        1    0.000    0.000    0.000    0.000 half_normal.py:12(HalfNormal)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2460(foldcauchy_gen)
        1    0.000    0.000    0.000    0.000 util.py:182(Finalize)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:13(PythonIntegerRing)
       16    0.000    0.000    0.000    0.000 dataclasses.py:1239(<genexpr>)
        9    0.000    0.000    0.000    0.000 enum.py:1354(<lambda>)
        6    0.000    0.000    0.000    0.000 rcsetup.py:177(_validate_tex_preamble)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:10(GaussLegendreQuadrature)
       12    0.000    0.000    0.000    0.000 comments.py:55(__call__)
        1    0.000    0.000    0.000    0.000 kronecker.py:86(KroneckerProduct)
        1    0.000    0.000    0.000    0.000 error_functions.py:2210(Chi)
        1    0.000    0.000    0.000    0.000 runner.py:30(TextTestResult)
        2    0.000    0.000    0.000    0.000 _pep440.py:158(_compare)
        1    0.000    0.000    0.000    0.000 point.py:860(Point2D)
        1    0.000    0.000    0.000    0.000 tritools.py:11(TriAnalyzer)
        1    0.000    0.000    0.000    0.000 core.py:5392(SkipTo)
        1    0.000    0.000    0.000    0.000 codata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7199(kappa4_gen)
        1    0.000    0.000    0.000    0.000 wrappers.py:78(elementwise_type_promotion_wrapper)
       12    0.000    0.000    0.000    0.000 symbol.py:784(literal)
        1    0.000    0.000    0.000    0.000 dataset.py:280(Subset)
        1    0.000    0.000    0.000    0.000 _script.py:1478(_ScriptProfileColumn)
        1    0.000    0.000    0.000    0.000 core.py:2430(Literal)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3265(_round_dispatcher)
        1    0.000    0.000    0.000    0.000 polyoptions.py:648(Formal)
        1    0.000    0.000    0.000    0.000 gridspec.py:362(GridSpec)
        1    0.000    0.000    0.000    0.000 six.py:205(load_module)
        1    0.000    0.000    0.000    0.000 interface.py:1(<module>)
        1    0.000    0.000    0.000    0.000 immutable.py:140(ImmutableSparseMatrix)
        1    0.000    0.000    0.000    0.000 colors.py:1681(LightSource)
        1    0.000    0.000    0.000    0.000 __init__.py:1308(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:3545(NumberSymbol)
        1    0.000    0.000    0.000    0.000 rnn.py:30(PackedSequence)
        1    0.000    0.000    0.000    0.000 _structures.py:6(InfinityType)
        1    0.000    0.000    0.000    0.000 engine.py:342(DiagnosticEngine)
        1    0.000    0.000    0.000    0.000 kdtree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _nbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _functions.py:6(SyncBatchNorm)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10754(tukeylambda_gen)
       11    0.000    0.000    0.000    0.000 windows.py:41(_add_docstr)
       18    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISLNK}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7002(gibrat_gen)
        1    0.000    0.000    0.000    0.000 rotation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 formal.py:1492(FiniteFormalPowerSeries)
        7    0.000    0.000    0.000    0.000 getlimits.py:157(_register_type)
        1    0.000    0.000    0.000    0.000 tz.py:1475(GettzFunc)
        1    0.000    0.000    0.000    0.000 _exceptions.py:116(_ArrayMemoryError)
        1    0.000    0.000    0.000    0.000 _version.py:14(NumpyVersion)
        1    0.000    0.000    0.000    0.000 Orbit_spd_with_spin.py:19(orbit_spd_with_spin)
        1    0.000    0.000    0.000    0.000 decoder.py:254(JSONDecoder)
        1    0.000    0.000    0.000    0.000 core.py:5202(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 bn_relu.py:12(BNReLU2d)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:37(FancyGetopt)
        1    0.000    0.000    0.000    0.000 mathtext.py:535(TruetypeFonts)
        1    0.000    0.000    0.000    0.000 stackplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:20(Kumaraswamy)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:181(_ndptr)
        1    0.000    0.000    0.000    0.000 Orbit.py:2(orbit)
        1    0.000    0.000    0.000    0.000 _script.py:413(RecursiveScriptClass)
        1    0.000    0.000    0.000    0.000 _sources.py:111(ParsedDef)
        1    0.000    0.000    0.000    0.000 _mannwhitneyu.py:21(_MWU)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:516(VectorFunction)
        2    0.000    0.000    0.000    0.000 cache.py:190(LazyFunction)
        2    0.000    0.000    0.000    0.000 traceback.py:297(__getitem__)
        1    0.000    0.000    0.000    0.000 more.py:2733(seekable)
        1    0.000    0.000    0.000    0.000 storage.py:981(_LegacyStorage)
        1    0.000    0.000    0.000    0.000 _type_utils.py:270(<dictcomp>)
        1    0.000    0.000    0.000    0.000 dsolve.py:1(<module>)
        6    0.000    0.000    0.000    0.000 sdm.py:85(<genexpr>)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:25(lerchphi)
        1    0.000    0.000    0.000    0.000 _datasource.py:536(Repository)
        1    0.000    0.000    0.000    0.000 __init__.py:1089(QUInt4x2Storage)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:582(hypergeom_gen)
        1    0.000    0.000    0.000    0.000 boolalg.py:230(BooleanAtom)
        1    0.000    0.000    0.000    0.000 context.py:220(Process)
        1    0.000    0.000    0.000    0.000 __init__.py:219(__enter__)
        1    0.000    0.000    0.000    0.000 scale.py:686(<listcomp>)
        3    0.000    0.000    0.000    0.000 feedparser.py:210(_pop_message)
        1    0.000    0.000    0.000    0.000 pydoc.py:1129(__init__)
        1    0.000    0.000    0.000    0.000 special.py:10(ZeroMatrix)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:88(RelaxedOneHotCategorical)
        3    0.000    0.000    0.000    0.000 typing.py:900(__repr__)
        1    0.000    0.000    0.000    0.000 libmpi.py:96(mpi_neg)
        1    0.000    0.000    0.000    0.000 six.py:219(is_package)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:512(AddressList)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 transforms.py:60(IntegralTransform)
        1    0.000    0.000    0.000    0.000 six.py:164(_resolve)
        1    0.000    0.000    0.000    0.000 hyper.py:866(HyperRep_power1)
        1    0.000    0.000    0.000    0.000 backend_tools.py:800(ToolZoom)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:34(gamma)
        1    0.000    0.000    0.000    0.000 enumerative.py:368(MultisetPartitionTraverser)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6001(dirichlet_multinomial_gen)
       16    0.000    0.000    0.000    0.000 results.py:29(__getitem__)
        1    0.000    0.000    0.000    0.000 transformer.py:166(TransformerEncoder)
        1    0.000    0.000    0.000    0.000 boolalg.py:572(And)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5835(__init__)
        1    0.000    0.000    0.000    0.000 mio5_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 facts.py:135(apply_beta_to_alpha_route)
        1    0.000    0.000    0.000    0.000 _svdp.py:50(_AProd)
        1    0.000    0.000    0.000    0.000 __init__.py:1079(QInt32Storage)
        1    0.000    0.000    0.000    0.000 assume.py:80(AppliedPredicate)
        1    0.000    0.000    0.000    0.000 mstats_basic.py:1(<module>)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:67(_apply_params)
        1    0.000    0.000    0.000    0.000 lbfgsb.py:1(<module>)
       16    0.000    0.000    0.000    0.000 structure.py:3559(charge)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3789(Doc)
        1    0.000    0.000    0.000    0.000 operations.py:38(__init__)
        1    0.000    0.000    0.000    0.000 mod.py:12(Mod)
        1    0.000    0.000    0.000    0.000 blocking_input.py:32(BlockingInput)
        1    0.000    0.000    0.000    0.000 decomp_qr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decomp_cholesky.py:1(<module>)
       16    0.000    0.000    0.000    0.000 arraypad.py:525(_pad_dispatcher)
        1    0.000    0.000    0.000    0.000 contextlib.py:344(__exit__)
        1    0.000    0.000    0.000    0.000 __init__.py:2401(_CustomTextWrap)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:740(nhypergeom_gen)
        1    0.000    0.000    0.000    0.000 calendar.py:150(Calendar)
        1    0.000    0.000    0.000    0.000 normalization.py:5(LayerNorm)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:83(VmapInterpreter)
        1    0.000    0.000    0.000    0.000 cpp_backtrace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datetime.py:1280(IsoCalendarDate)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:753(PngImageFile)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:13(elliptic_k)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 _backend.py:7(_ScipyBackend)
        1    0.000    0.000    0.000    0.000 line.py:1343(Ray)
        1    0.000    0.000    0.000    0.000 collections.py:1301(AsteriskPolygonCollection)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:379(DataFlowEdge)
        1    0.000    0.000    0.000    0.000 unix_events.py:823(AbstractChildWatcher)
        1    0.000    0.000    0.000    0.000 gammasimp.py:463(_rf)
        2    0.000    0.000    0.000    0.000 polyclasses.py:1241(_new)
        1    0.000    0.000    0.000    0.000 interpolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fft.py:409(_CanonicalizeC2rReturn)
        1    0.000    0.000    0.000    0.000 patches.py:1833(_Style)
        1    0.000    0.000    0.000    0.000 computed_entries.py:549(ComputedStructureEntry)
        1    0.000    0.000    0.000    0.000 sequences.py:962(SeqExprOp)
        1    0.000    0.000    0.000    0.000 index_tricks.py:530(__init__)
        1    0.000    0.000    0.000    0.000 rnn.py:282(RNNBase)
        9    0.000    0.000    0.000    0.000 typing.py:3026(<lambda>)
        1    0.000    0.000    0.000    0.000 core.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 streams.py:12(Stream)
        4    0.000    0.000    0.000    0.000 typing.py:442(__init__)
        1    0.000    0.000    0.000    0.000 minpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 factorials.py:828(binomial)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1506(XMLParser)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:191(<listcomp>)
        1    0.000    0.000    0.000    0.000 weibull.py:11(Weibull)
        1    0.000    0.000    0.000    0.000 nodes.py:11(Node)
        1    0.000    0.000    0.000    0.000 difflib.py:724(Differ)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6574(loggamma_gen)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:13(autocast)
       12    0.000    0.000    0.000    0.000 patches.py:1879(<genexpr>)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:498(geom_gen)
        1    0.000    0.000    0.000    0.000 activation.py:161(Softmax)
        1    0.000    0.000    0.000    0.000 profiler.py:553(ExecutionGraphObserver)
        1    0.000    0.000    0.000    0.000 animation.py:657(AVConvBase)
        1    0.000    0.000    0.000    0.000 para4band.py:53(Stiefel_Frame_Function)
        4    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:403(_some_attrgetter)
        1    0.000    0.000    0.000    0.000 _multivariate.py:211(multi_rv_generic)
        1    0.000    0.000    0.000    0.000 optimize.py:1(<module>)
        1    0.000    0.000    0.000    0.000 compat.py:187(MutableSliceableSequence)
        1    0.000    0.000    0.000    0.000 pycode.py:89(<dictcomp>)
        1    0.000    0.000    0.000    0.000 complexes.py:142(im)
        1    0.000    0.000    0.000    0.000 fancysets.py:1110(ComplexRegion)
        1    0.000    0.000    0.000    0.000 mathtext.py:2632(State)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:564(polygamma)
        2    0.000    0.000    0.000    0.000 {method 'tobytes' of 'numpy.generic' objects}
        6    0.000    0.000    0.000    0.000 docstring.py:33(__init__)
        1    0.000    0.000    0.000    0.000 _internal.py:249(_ctypes)
        8    0.000    0.000    0.000    0.000 animation.py:116(wrapper)
        1    0.000    0.000    0.000    0.000 utils.py:8(IterableWrapperIterDataPipe)
        1    0.000    0.000    0.000    0.000 worker.py:124(_ResumeIteration)
        2    0.000    0.000    0.000    0.000 reprlib.py:9(recursive_repr)
        1    0.000    0.000    0.000    0.000 plotgrid.py:16(PlotGrid)
        1    0.000    0.000    0.000    0.000 dos.py:1413(LobsterCompleteDos)
        1    0.000    0.000    0.000    0.000 property.py:3(Property)
        1    0.000    0.000    0.000    0.000 transforms.py:976(PositiveDefiniteTransform)
        1    0.000    0.000    0.000    0.000 series.py:1289(LineOver1DRangeSeries)
        1    0.000    0.000    0.000    0.000 formal.py:958(Coeff)
        1    0.000    0.000    0.000    0.000 distance.py:8(PairwiseDistance)
        1    0.000    0.000    0.000    0.000 core.py:237(LinearCombination)
        1    0.000    0.000    0.000    0.000 _covariance.py:562(CovViaEigendecomposition)
        1    0.000    0.000    0.000    0.000 io.py:344(FileLock)
        1    0.000    0.000    0.000    0.000 rnn.py:7(LSTM)
        1    0.000    0.000    0.000    0.000 __init__.py:43(QuantizedEngine)
        1    0.000    0.000    0.000    0.000 mathtext.py:291(MathtextBackendSvg)
        1    0.000    0.000    0.000    0.000 linear.py:15(Linear)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:14(Match)
        1    0.000    0.000    0.000    0.000 _ode.py:600(complex_ode)
        1    0.000    0.000    0.000    0.000 comments.py:654(CommentedMapKeysView)
        2    0.000    0.000    0.000    0.000 domain.py:846(__eq__)
        1    0.000    0.000    0.000    0.000 normalization.py:14(LocalResponseNorm)
       32    0.000    0.000    0.000    0.000 {method 'is_dir' of 'posix.DirEntry' objects}
        1    0.000    0.000    0.000    0.000 activation.py:1361(Softmin)
        1    0.000    0.000    0.000    0.000 fold.py:10(Fold)
        9    0.000    0.000    0.000    0.000 multiarray.py:346(where)
        1    0.000    0.000    0.000    0.000 function.py:155(FunctionClass)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2974(_prod_dispatcher)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:174(<lambda>)
        1    0.000    0.000    0.000    0.000 kind.py:156(__new__)
        1    0.000    0.000    0.000    0.000 subprocess.py:17(SubprocessStreamProtocol)
        1    0.000    0.000    0.000    0.000 contains.py:10(Contains)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1395(_TensorExtractor)
        1    0.000    0.000    0.000    0.000 decomp_lu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 diophantine.py:40(DiophantineSolutionSet)
        1    0.000    0.000    0.000    0.000 matexpr.py:597(MatrixElement)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1074(bradford_gen)
        1    0.000    0.000    0.000    0.000 constraints.py:328(_GreaterThanEq)
        1    0.000    0.000    0.000    0.000 activation.py:18(Threshold)
        1    0.000    0.000    0.000    0.000 platform.py:739(_Processor)
        1    0.000    0.000    0.000    0.000 __init__.py:503(PackagePath)
        1    0.000    0.000    0.000    0.000 mock.py:1761(_patch_dict)
        1    0.000    0.000    0.000    0.000 distributed.py:164(_DDPSink)
        1    0.000    0.000    0.000    0.000 numbers.py:3757(Pi)
        1    0.000    0.000    0.000    0.000 activation.py:617(GLU)
        1    0.000    0.000    0.000    0.000 core.py:2372(_MaskedPrintOption)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:18(_NestedSequence)
        1    0.000    0.000    0.000    0.000 spectrum.py:38(Spectrum)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5454(norminvgauss_gen)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 __init__.py:1148(<listcomp>)
        2    0.000    0.000    0.000    0.000 Image.py:3754(register_extension)
        1    0.000    0.000    0.000    0.000 modules.py:1339(QuotientModule)
        2    0.000    0.000    0.000    0.000 weakref.py:347(__new__)
        1    0.000    0.000    0.000    0.000 sf_error.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ndgriddata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutation.py:9(PermutationMatrix)
        1    0.000    0.000    0.000    0.000 axis3d.py:484(ZAxis)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:386(<dictcomp>)
        1    0.000    0.000    0.000    0.000 calculus.py:5(MatrixCalculusMethods)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7864(ncf_gen)
        1    0.000    0.000    0.000    0.000 _structures.py:35(NegativeInfinityType)
        1    0.000    0.000    0.000    0.000 configparser.py:1255(SectionProxy)
        1    0.000    0.000    0.000    0.000 error_functions.py:1275(expint)
        1    0.000    0.000    0.000    0.000 function.py:410(Function)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:51(FuncTorchInterpreter)
        1    0.000    0.000    0.000    0.000 outputs.py:4849(Dynmat)
        1    0.000    0.000    0.000    0.000 colors.py:695(LinearSegmentedColormap)
        1    0.000    0.000    0.000    0.000 rrule.py:1112(_iterinfo)
        1    0.000    0.000    0.000    0.000 decomp_svd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _windows.py:2509(<listcomp>)
        1    0.000    0.000    0.000    0.000 linalg.py:108(LinearAlgebraMethods)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:302(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _base.py:569(Executor)
        1    0.000    0.000    0.000    0.000 activation.py:241(PReLU)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3254(genexpon_gen)
        5    0.000    0.000    0.000    0.000 typing.py:2588(final)
        1    0.000    0.000    0.000    0.000 more.py:2880(run_length)
        1    0.000    0.000    0.000    0.000 mio5.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:185(_TLSAlertType)
        1    0.000    0.000    0.000    0.000 _encoded_words.py:73(_QByteMap)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4776(multivariate_t_frozen)
        1    0.000    0.000    0.000    0.000 stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7963(t_gen)
        1    0.000    0.000    0.000    0.000 backend_registration.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ltisys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:1273(FixedQParamsObserver)
        1    0.000    0.000    0.000    0.000 _deprecation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 morphology.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bessel.py:282(bessely)
        1    0.000    0.000    0.000    0.000 tz.py:1167(_tzicalvtz)
        5    0.000    0.000    0.000    0.000 constructor.py:331(add_multi_constructor)
        1    0.000    0.000    0.000    0.000 batchnorm.py:9(_BatchNorm)
        1    0.000    0.000    0.000    0.000 string.py:57(Template)
        1    0.000    0.000    0.000    0.000 signaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:8(ReferenceQuantizedModule)
        1    0.000    0.000    0.000    0.000 core.py:5478(_update_ignorer)
        1    0.000    0.000    0.000    0.000 events.py:610(AbstractEventLoopPolicy)
        1    0.000    0.000    0.000    0.000 scalarstring.py:23(ScalarString)
        1    0.000    0.000    0.000    0.000 core.py:116(<listcomp>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3599(ContinuousDistribution)
        1    0.000    0.000    0.000    0.000 repmatrix.py:585(_fromrep)
        1    0.000    0.000    0.000    0.000 outputs.py:1766(BSVasprun)
        1    0.000    0.000    0.000    0.000 lil.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dir_util.py:15(SkipRepeatAbsolutePaths)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:8(Embedding)
        1    0.000    0.000    0.000    0.000 _matrix_io.py:1(<module>)
        1    0.000    0.000    0.000    0.000 extras.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 dataloader.py:71(_DatasetKind)
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:23(GimpPaletteFile)
        9    0.000    0.000    0.000    0.000 core.py:1550(<genexpr>)
        1    0.000    0.000    0.000    0.000 kde.py:1(<module>)
        1    0.000    0.000    0.000    0.000 band_data_in.py:12(BandDataIn)
        1    0.000    0.000    0.000    0.000 unix_events.py:1033(SafeChildWatcher)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:160(MutableDenseNDimArray)
        1    0.000    0.000    0.000    0.000 fancysets.py:24(Rationals)
        1    0.000    0.000    0.000    0.000 hyper.py:1002(HyperRep_sqrts1)
        1    0.000    0.000    0.000    0.000 headerregistry.py:276(DateHeader)
        1    0.000    0.000    0.000    0.000 morestats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 base.py:28(OdeSolver)
        1    0.000    0.000    0.000    0.000 threading.py:544(Event)
        1    0.000    0.000    0.000    0.000 {built-in method posix.sysconf}
        1    0.000    0.000    0.000    0.000 spglib.py:254(SpglibMagneticDataset)
        1    0.000    0.000    0.000    0.000 __init__.py:7(ProjectionRegistry)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'select.epoll' objects}
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:27(ExecutionStats)
        4    0.000    0.000    0.000    0.000 sympify.py:28(__init__)
        1    0.000    0.000    0.000    0.000 _atfork.py:15(_register)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3112(_moment_methods)
        1    0.000    0.000    0.000    0.000 argparse.py:691(ArgumentDefaultsHelpFormatter)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1632(TypeVar)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11743(argus_gen)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:395(zeta)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:223(polylog)
        1    0.000    0.000    0.000    0.000 dbapi2.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 _typing.py:72(HasShape)
        1    0.000    0.000    0.000    0.000 special.py:104(Identity)
        1    0.000    0.000    0.000    0.000 slsqp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 waveforms.py:1(<module>)
       16    0.000    0.000    0.000    0.000 structure.py:244(sites)
        2    0.000    0.000    0.000    0.000 __init__.py:132(DistutilsLoader)
        1    0.000    0.000    0.000    0.000 moduleTNC.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:913(Reader)
        1    0.000    0.000    0.000    0.000 _arffread.py:339(RelationalAttribute)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4006(rv_sample)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:99(_Formatter)
        1    0.000    0.000    0.000    0.000 headerregistry.py:156(BaseHeader)
        1    0.000    0.000    0.000    0.000 quadpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv.py:765(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 _cubature.py:48(CubatureResult)
        1    0.000    0.000    0.000    0.000 image.py:1288(FigureImage)
        1    0.000    0.000    0.000    0.000 specfun.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Image.py:3689(register_open)
        1    0.000    0.000    0.000    0.000 offsetbox.py:651(DrawingArea)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:886(SupportsAbs)
        1    0.000    0.000    0.000    0.000 __init__.py:99(version_info)
        1    0.000    0.000    0.000    0.000 _arffread.py:65(Attribute)
        6    0.000    0.000    0.000    0.000 printer.py:422(print_function)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3936(__init__)
        1    0.000    0.000    0.000    0.000 harwell_boeing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 indexed.py:580(Idx)
        1    0.000    0.000    0.000    0.000 requirements.py:21(Requirement)
        1    0.000    0.000    0.000    0.000 hyper.py:918(HyperRep_log1)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:6(autocast)
        1    0.000    0.000    0.000    0.000 ticker.py:1564(PercentFormatter)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:202(_concrete_ndptr)
        2    0.000    0.000    0.000    0.000 multidimensional.py:81(__init__)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1030(planck_gen)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5508(FoldedDistribution)
        1    0.000    0.000    0.000    0.000 logistic_normal.py:8(LogisticNormal)
        1    0.000    0.000    0.000    0.000 _globals.py:52(__new__)
        1    0.000    0.000    0.000    0.000 conv_fused.py:407(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 ticker.py:2903(AutoMinorLocator)
        2    0.000    0.000    0.000    0.000 constraints.py:315(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:295(TextCalendar)
        1    0.000    0.000    0.000    0.000 utils.py:11(WeightedQuantizedModule)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:253(iTXt)
        4    0.000    0.000    0.000    0.000 results.py:266(__len__)
        1    0.000    0.000    0.000    0.000 mock.py:293(_Sentinel)
        1    0.000    0.000    0.000    0.000 numbers.py:1037(euler)
       15    0.000    0.000    0.000    0.000 dataclasses.py:179(__repr__)
        1    0.000    0.000    0.000    0.000 sets.py:1726(Complement)
        1    0.000    0.000    0.000    0.000 linear_relu.py:50(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 ssl.py:456(_ASN1Object)
        1    0.000    0.000    0.000    0.000 bandstructure.py:707(BandStructureSymmLine)
        1    0.000    0.000    0.000    0.000 ase.py:55(MSONAtoms)
        1    0.000    0.000    0.000    0.000 docinfo.py:112(DocInfo)
        1    0.000    0.000    0.000    0.000 pc_groups.py:42(Collector)
        1    0.000    0.000    0.000    0.000 single.py:1560(HomogeneousCoeffSubsIndepDivDep)
        1    0.000    0.000    0.000    0.000 hyper.py:890(HyperRep_power2)
        3    0.000    0.000    0.000    0.000 datetime.py:2313(_create)
        1    0.000    0.000    0.000    0.000 _machar.py:17(MachAr)
        3    0.000    0.000    0.000    0.000 rcsetup.py:754(validate_sketch)
        1    0.000    0.000    0.000    0.000 kind.py:165(_BooleanKind)
        1    0.000    0.000    0.000    0.000 _tqdm_pandas.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colors.py:861(ListedColormap)
        1    0.000    0.000    0.000    0.000 lti_conversion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:222(lowergamma)
        1    0.000    0.000    0.000    0.000 _aliases.py:147(zeros)
        1    0.000    0.000    0.000    0.000 loss.py:1614(CTCLoss)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1132(burr_gen)
        1    0.000    0.000    0.000    0.000 feedparser.py:45(BufferedSubFile)
        1    0.000    0.000    0.000    0.000 loss.py:1414(TripletMarginLoss)
        1    0.000    0.000    0.000    0.000 outputs.py:3969(Elfcar)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2062(_num_parameterizations)
        1    0.000    0.000    0.000    0.000 hyper.py:978(HyperRep_asin2)
        2    0.000    0.000    0.000    0.000 legend_handler.py:264(__init__)
        4    0.000    0.000    0.000    0.000 timeutils.py:53(timethis)
        1    0.000    0.000    0.000    0.000 threading.py:637(Barrier)
        1    0.000    0.000    0.000    0.000 nonlin.py:1(<module>)
        1    0.000    0.000    0.000    0.000 extrapolation.py:266(levin_class)
        1    0.000    0.000    0.000    0.000 optimization.py:7(OptimizationMethods)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:381(__subclasshook__)
        1    0.000    0.000    0.000    0.000 locks.py:158(Event)
        1    0.000    0.000    0.000    0.000 _rules.py:42(_MissingCustomSymbolicFunction)
        1    0.000    0.000    0.000    0.000 backend_tools.py:926(ToolPan)
        1    0.000    0.000    0.000    0.000 mathtext.py:82(MathtextBackend)
        1    0.000    0.000    0.000    0.000 loss.py:28(_WeightedLoss)
        1    0.000    0.000    0.000    0.000 category.py:26(StrCategoryConverter)
        1    0.000    0.000    0.000    0.000 mathtext.py:2107(Ship)
        1    0.000    0.000    0.000    0.000 hyper.py:1109(HyperRep_sinasin)
        1    0.000    0.000    0.000    0.000 mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 padding.py:475(ZeroPad2d)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4200(gompertz_gen)
        1    0.000    0.000    0.000    0.000 request.py:426(OpenerDirector)
        1    0.000    0.000    0.000    0.000 function.py:882(UndefinedFunction)
        1    0.000    0.000    0.000    0.000 traceback.py:247(FrameSummary)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:865(loggamma)
        1    0.000    0.000    0.000    0.000 _utils.py:25(EventMetrics)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5932(landau_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7473(kappa3_gen)
        1    0.000    0.000    0.000    0.000 case.py:1388(FunctionTestCase)
        1    0.000    0.000    0.000    0.000 transpose.py:5(Transpose)
        1    0.000    0.000    0.000    0.000 _lbfgsb_py.py:513(LbfgsInvHessProduct)
       12    0.000    0.000    0.000    0.000 _pep440.py:392(_parse_letter_version)
        1    0.000    0.000    0.000    0.000 relational.py:1185(StrictLessThan)
        1    0.000    0.000    0.000    0.000 core.py:2766(Word)
        1    0.000    0.000    0.000    0.000 activation.py:140(Sigmoid)
        1    0.000    0.000    0.000    0.000 loss.py:850(SmoothL1Loss)
       25    0.000    0.000    0.000    0.000 polyoptions.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 pydoc.py:1855(<listcomp>)
        1    0.000    0.000    0.000    0.000 ImageFile.py:113(ImageFile)
        1    0.000    0.000    0.000    0.000 _gauss_kronrod.py:9(GaussKronrodQuadrature)
        6    0.000    0.000    0.000    0.000 deprecation.py:81(_deprecated)
        1    0.000    0.000    0.000    0.000 function.py:252(_HookMixin)
       14    0.000    0.000    0.000    0.000 mock.py:1937(<genexpr>)
        1    0.000    0.000    0.000    0.000 tensor.py:792(_TensorManager)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9998(triang_gen)
        1    0.000    0.000    0.000    0.000 bandstructure.py:909(LobsterBandStructureSymmLine)
        1    0.000    0.000    0.000    0.000 polar.py:111(PolarAffine)
        1    0.000    0.000    0.000    0.000 permutations.py:244(Cycle)
        1    0.000    0.000    0.000    0.000 animation.py:696(ImageMagickBase)
        1    0.000    0.000    0.000    0.000 main.py:1477(YAMLObjectMetaclass)
        3    0.000    0.000    0.000    0.000 __init__.py:428(__init__)
        1    0.000    0.000    0.000    0.000 triplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 headerregistry.py:12(Address)
        1    0.000    0.000    0.000    0.000 modules.py:1847(ModuleEndomorphism)
        1    0.000    0.000    0.000    0.000 rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:160(ToolToggleBase)
        1    0.000    0.000    0.000    0.000 fir_filter_design.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7553(moyal_gen)
        1    0.000    0.000    0.000    0.000 py38.py:1(<module>)
        4    0.000    0.000    0.000    0.000 polynomial.py:1218(_coeffs)
        1    0.000    0.000    0.000    0.000 zeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:9(FunctionMatrix)
        1    0.000    0.000    0.000    0.000 polyint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polynomials.py:773(legendre)
        1    0.000    0.000    0.000    0.000 mathml.py:21(MathMLPrinterBase)
        1    0.000    0.000    0.000    0.000 serialization.py:294(_open_zipfile_writer_buffer)
        1    0.000    0.000    0.000    0.000 calendar.py:74(<listcomp>)
        1    0.000    0.000    0.000    0.000 decomp_schur.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dviread.py:516(DviFont)
        1    0.000    0.000    0.000    0.000 measurements.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _rbf.py:55(Rbf)
        1    0.000    0.000    0.000    0.000 outputs.py:3920(Chgcar)
        1    0.000    0.000    0.000    0.000 interpnd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1905(sinc)
        1    0.000    0.000    0.000    0.000 _ops.py:418(OpOverloadPacket)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4308(multivariate_t_gen)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:196(AAA)
        1    0.000    0.000    0.000    0.000 rnn.py:948(RNNCell)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_224}
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:14(TorchDispatchMode)
        1    0.000    0.000    0.000    0.000 graph.py:607(_PyTreeCodeGen)
        1    0.000    0.000    0.000    0.000 _fit.py:41(FitResult)
        8    0.000    0.000    0.000    0.000 animation.py:106(register)
        1    0.000    0.000    0.000    0.000 linesearch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3134(genpareto_gen)
       10    0.000    0.000    0.000    0.000 ctx_iv.py:355(_wrap_mpi_function)
        1    0.000    0.000    0.000    0.000 _rules.py:231(_FxIrAddNode)
        1    0.000    0.000    0.000    0.000 single.py:1297(SeparableReduced)
        1    0.000    0.000    0.000    0.000 core.py:6004(Suppress)
        1    0.000    0.000    0.000    0.000 events.py:189(ScalarEvent)
        1    0.000    0.000    0.000    0.000 charset.py:167(Charset)
        1    0.000    0.000    0.000    0.000 _ode.py:781(IntegratorBase)
       12    0.000    0.000    0.000    0.000 message.py:633(get_default_type)
        1    0.000    0.000    0.000    0.000 diagonal.py:9(DiagonalMatrix)
        1    0.000    0.000    0.000    0.000 core.py:4491(Each)
        2    0.000    0.000    0.000    0.000 main.py:1482(__init__)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:188(elliptic_e)
        1    0.000    0.000    0.000    0.000 transformer.py:317(TransformerDecoder)
        1    0.000    0.000    0.000    0.000 diophantine.py:146(DiophantineEquationType)
        1    0.000    0.000    0.000    0.000 tempfile.py:459(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 csc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unix_events.py:1212(MultiLoopChildWatcher)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:412(AngleAddr)
        1    0.000    0.000    0.000    0.000 dropout.py:5(Dropout)
        1    0.000    0.000    0.000    0.000 events.py:161(AbstractServer)
        1    0.000    0.000    0.000    0.000 constraints.py:96(_Dependent)
        1    0.000    0.000    0.000    0.000 autograd_function.py:536(CtxWithSavedTensors)
        1    0.000    0.000    0.000    0.000 hyper.py:959(HyperRep_asin1)
        1    0.000    0.000    0.000    0.000 polar.py:666(RadialAxis)
        1    0.000    0.000    0.000    0.000 outputs.py:3699(VolumetricData)
        1    0.000    0.000    0.000    0.000 batchnorm.py:48(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 distance.py:1983(<dictcomp>)
        1    0.000    0.000    0.000    0.000 ElementTree.py:525(ElementTree)
        1    0.000    0.000    0.000    0.000 polynomials.py:443(chebyshevt)
        1    0.000    0.000    0.000    0.000 piecewise.py:19(ExprCondPair)
        3    0.000    0.000    0.000    0.000 rcsetup.py:541(validate_ps_distiller)
        3    0.000    0.000    0.000    0.000 rcsetup.py:520(_update_savefig_format)
        1    0.000    0.000    0.000    0.000 complexes.py:820(conjugate)
        1    0.000    0.000    0.000    0.000 cnf.py:15(Literal)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:261(FixedQParamsFakeQuantize)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6247(levy_gen)
        1    0.000    0.000    0.000    0.000 transforms.py:900(StickBreakingTransform)
        1    0.000    0.000    0.000    0.000 bsr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mio5_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 composition.py:1400(ChemicalPotential)
        1    0.000    0.000    0.000    0.000 para4tb.py:132(ParaTB_train)
        7    0.000    0.000    0.000    0.000 numeric.py:1455(<listcomp>)
        1    0.000    0.000    0.000    0.000 Orbit_spd.py:16(orbit_spd)
        1    0.000    0.000    0.000    0.000 fitpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _pep440.py:165(LegacyVersion)
        1    0.000    0.000    0.000    0.000 text.py:1243(OffsetFrom)
        1    0.000    0.000    0.000    0.000 flatten.py:9(Flatten)
        1    0.000    0.000    0.000    0.000 tnc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _covariance.py:538(CovViaCholesky)
        1    0.000    0.000    0.000    0.000 trigonometric.py:45(TrigonometricFunction)
        1    0.000    0.000    0.000    0.000 _multivariate.py:877(multivariate_normal_frozen)
        1    0.000    0.000    0.000    0.000 coo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dok.py:1(<module>)
        7    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISDIR}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:508(alpha_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1347(fisk_gen)
        1    0.000    0.000    0.000    0.000 {built-in method _ctypes.byref}
        1    0.000    0.000    0.000    0.000 _arffread.py:95(NominalAttribute)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7066(maxwell_gen)
        1    0.000    0.000    0.000    0.000 shlex.py:19(shlex)
        1    0.000    0.000    0.000    0.000 conv.py:19(Conv1d)
        1    0.000    0.000    0.000    0.000 numpy.py:506(JaxPrinter)
        1    0.000    0.000    0.000    0.000 spectral.py:1(<module>)
        1    0.000    0.000    0.000    0.000 index_tricks.py:255(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6351(levy_l_gen)
        2    0.000    0.000    0.000    0.000 {method 'cache_clear' of 'functools._lru_cache_wrapper' objects}
        1    0.000    0.000    0.000    0.000 ticker.py:333(FixedFormatter)
        3    0.000    0.000    0.000    0.000 __init__.py:421(<genexpr>)
        1    0.000    0.000    0.000    0.000 gzip.py:75(_PaddedFile)
        1    0.000    0.000    0.000    0.000 _parser.py:394(_ymd)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:960(betaprime_gen)
        1    0.000    0.000    0.000    0.000 header.py:541(_Accumulator)
        1    0.000    0.000    0.000    0.000 bezier.py:182(BezierSegment)
        1    0.000    0.000    0.000    0.000 observer.py:1311(PlaceholderObserver)
        1    0.000    0.000    0.000    0.000 dates.py:1872(DateConverter)
        1    0.000    0.000    0.000    0.000 transforms.py:2380(CompositeAffine2D)
        1    0.000    0.000    0.000    0.000 mathtext.py:755(UnicodeFonts)
        1    0.000    0.000    0.000    0.000 dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr.py:4134(ExprBuilder)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:786(keys)
        1    0.000    0.000    0.000    0.000 _ode.py:1250(lsoda)
        1    0.000    0.000    0.000    0.000 dist.py:75(__getattr__)
        1    0.000    0.000    0.000    0.000 activation.py:52(Hardswish)
        1    0.000    0.000    0.000    0.000 docinfo.py:25(Version)
        1    0.000    0.000    0.000    0.000 comments.py:692(CommentedMapValuesView)
        1    0.000    0.000    0.000    0.000 conv.py:1470(LazyConvTranspose2d)
        3    0.000    0.000    0.000    0.000 __init__.py:43(private_class)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5777(johnsonsb_gen)
        1    0.000    0.000    0.000    0.000 hadamard.py:41(HadamardProduct)
        1    0.000    0.000    0.000    0.000 mock.py:2441(__new__)
        1    0.000    0.000    0.000    0.000 threading.py:359(notify)
        1    0.000    0.000    0.000    0.000 _mio4.py:601(MatFile4Writer)
        1    0.000    0.000    0.000    0.000 tensor.py:5253(get_postprocessor)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:232(LinearTriInterpolator)
        1    0.000    0.000    0.000    0.000 __init__.py:463(SelectableGroups)
        1    0.000    0.000    0.000    0.000 units.py:148(Unit)
        1    0.000    0.000    0.000    0.000 error_functions.py:1669(Li)
        1    0.000    0.000    0.000    0.000 padding.py:341(ReplicationPad1d)
        1    0.000    0.000    0.000    0.000 __init__.py:858(Prepared)
        1    0.000    0.000    0.000    0.000 construct.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _type_utils.py:338(<dictcomp>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3448(atan2)
        1    0.000    0.000    0.000    0.000 linear.py:208(LazyLinear)
       13    0.000    0.000    0.000    0.000 fromnumeric.py:195(_reshape_dispatcher)
        1    0.000    0.000    0.000    0.000 spfun_stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 modules.py:260(FreeModuleElement)
        1    0.000    0.000    0.000    0.000 __init__.py:408(Deprecated)
        1    0.000    0.000    0.000    0.000 header.py:179(Header)
        1    0.000    0.000    0.000    0.000 core.py:376(dtype)
        1    0.000    0.000    0.000    0.000 loss.py:104(NLLLoss)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5674(jf_skew_t_gen)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3858(random_correlation_gen)
        3    0.000    0.000    0.000    0.000 _add_docstring.py:11(add_newdoc)
        1    0.000    0.000    0.000    0.000 core.py:1283(_replace_dtype_fields_recursive)
        1    0.000    0.000    0.000    0.000 _optimize.py:61(MemoizeJac)
        1    0.000    0.000    0.000    0.000 representer.py:383(Representer)
        1    0.000    0.000    0.000    0.000 tensor.py:1270(TensorIndex)
       12    0.000    0.000    0.000    0.000 distance.py:1814(<lambda>)
        1    0.000    0.000    0.000    0.000 pooling.py:1006(AdaptiveMaxPool1d)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1171(randint_gen)
        1    0.000    0.000    0.000    0.000 observer.py:52(_PartialWrapper)
        1    0.000    0.000    0.000    0.000 ellipse.py:1477(Circle)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:11(SparseNDimArray)
        1    0.000    0.000    0.000    0.000 transforms.py:2106(BlendedGenericTransform)
        1    0.000    0.000    0.000    0.000 transports.py:197(SubprocessTransport)
        1    0.000    0.000    0.000    0.000 binrel.py:135(AppliedBinaryRelation)
        1    0.000    0.000    0.000    0.000 six.py:108(MovedModule)
        1    0.000    0.000    0.000    0.000 single.py:646(AlmostLinear)
        1    0.000    0.000    0.000    0.000 numbers.py:2890(NegativeOne)
        5    0.000    0.000    0.000    0.000 due.py:28(dcite)
        1    0.000    0.000    0.000    0.000 backend_tools.py:444(ToolGrid)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:103(ksone_gen)
        1    0.000    0.000    0.000    0.000 mock.py:2891(PropertyMock)
        1    0.000    0.000    0.000    0.000 __init__.py:106(__version__)
        2    0.000    0.000    0.000    0.000 _parser.py:96(checkgroup)
        2    0.000    0.000    0.000    0.000 pyplot.py:211(_get_required_interactive_framework)
        1    0.000    0.000    0.000    0.000 setupcfg.py:520(ConfigMetadataHandler)
        1    0.000    0.000    0.000    0.000 mg_operation.py:10(MagneticGroupOp)
        1    0.000    0.000    0.000    0.000 modules.py:286(FreeModule)
        1    0.000    0.000    0.000    0.000 _VF.py:22(__init__)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4367(_shift_scale_inverse_function)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:54(_Storage)
        1    0.000    0.000    0.000    0.000 conv_relu.py:69(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 core.py:117(<listcomp>)
        1    0.000    0.000    0.000    0.000 scanner.py:1979(CommentBase)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:8(PixelShuffle)
        1    0.000    0.000    0.000    0.000 complexes.py:696(arg)
        1    0.000    0.000    0.000    0.000 colors.py:956(Normalize)
        3    0.000    0.000    0.000    0.000 parser.py:17(__init__)
        1    0.000    0.000    0.000    0.000 outputs.py:194(BandgapProps)
        3    0.000    0.000    0.000    0.000 {built-in method time.time}
        9    0.000    0.000    0.000    0.000 core.py:4247(<genexpr>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4881(multivariate_hypergeom_gen)
        1    0.000    0.000    0.000    0.000 csr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1384(TreeBuilder)
        1    0.000    0.000    0.000    0.000 numbers.py:267(Rational)
        1    0.000    0.000    0.000    0.000 parse.py:353(_fix_result_transcoding)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:238(_Interval)
        1    0.000    0.000    0.000    0.000 evalf.py:1560(EvalfMixin)
        1    0.000    0.000    0.000    0.000 threading.py:1005(_set_native_id)
        1    0.000    0.000    0.000    0.000 special.py:68(GenericZeroMatrix)
        1    0.000    0.000    0.000    0.000 padding.py:31(ConstantPad1d)
        1    0.000    0.000    0.000    0.000 widgets.py:2647(Lasso)
        6    0.000    0.000    0.000    0.000 core.py:3614(<genexpr>)
        1    0.000    0.000    0.000    0.000 events.py:98(TimerHandle)
        1    0.000    0.000    0.000    0.000 utils.py:104(_Deprecate)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:518(Sakurai)
        1    0.000    0.000    0.000    0.000 ElementTree.py:477(QName)
        6    0.000    0.000    0.000    0.000 conflict.py:37(<genexpr>)
        1    0.000    0.000    0.000    0.000 zipfile.py:2222(CompleteDirs)
        3    0.000    0.000    0.000    0.000 tag.py:25(__init__)
        1    0.000    0.000    0.000    0.000 _factories.py:9(__init__)
        1    0.000    0.000    0.000    0.000 compressed.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutation.py:168(MatrixPermute)
        1    0.000    0.000    0.000    0.000 _parser.py:219(_resultbase)
        2    0.000    0.000    0.000    0.000 __init__.py:87(__setattr__)
        1    0.000    0.000    0.000    0.000 bn_relu.py:48(BNReLU3d)
        1    0.000    0.000    0.000    0.000 random.py:215(__init_subclass__)
        1    0.000    0.000    0.000    0.000 tensor.py:1597(TensorType)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1384(<listcomp>)
        1    0.000    0.000    0.000    0.000 mock.py:1084(CallableMixin)
        1    0.000    0.000    0.000    0.000 _classes.py:18(_Classes)
        1    0.000    0.000    0.000    0.000 _typing.py:7(RingElement)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1154(trigamma)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1104(boltzmann_gen)
        1    0.000    0.000    0.000    0.000 streams.py:181(StreamReaderProtocol)
        1    0.000    0.000    0.000    0.000 datapipes.py:42(ConcatDataFramesPipe)
        2    0.000    0.000    0.000    0.000 {method 'title' of 'str' objects}
        1    0.000    0.000    0.000    0.000 hierarchy.py:1105(__init__)
        1    0.000    0.000    0.000    0.000 sg_operation.py:11(SpaceGroupOp)
        1    0.000    0.000    0.000    0.000 bessel.py:940(jn)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:42(LeviCivita)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8974(rdist_gen)
        1    0.000    0.000    0.000    0.000 client.py:1398(HTTPSConnection)
        2    0.000    0.000    0.000    0.000 weakref.py:352(__init__)
       12    0.000    0.000    0.000    0.000 core.py:970(clear)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:53(_ScalarHessWrapper)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4888(invgamma_gen)
        1    0.000    0.000    0.000    0.000 bessel.py:1723(airyaiprime)
        1    0.000    0.000    0.000    0.000 polynomials.py:889(assoc_legendre)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:13(ScalarFloat)
        1    0.000    0.000    0.000    0.000 tarfile.py:600(_FileInFile)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:683(Max)
        1    0.000    0.000    0.000    0.000 polynomials.py:1210(laguerre)
        1    0.000    0.000    0.000    0.000 polynomials.py:1006(hermite)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1567(poisson_binom_gen)
        1    0.000    0.000    0.000    0.000 pathlib.py:129(<setcomp>)
        1    0.000    0.000    0.000    0.000 hyper.py:1031(HyperRep_sqrts2)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:584(dirichlet_eta)
        1    0.000    0.000    0.000    0.000 numbers.py:1490(andre)
        1    0.000    0.000    0.000    0.000 _kdtree.py:327(innernode)
        1    0.000    0.000    0.000    0.000 relational.py:752(Unequality)
        1    0.000    0.000    0.000    0.000 _mio4.py:107(VarReader4)
        1    0.000    0.000    0.000    0.000 operations.py:487(LatticeOp)
        1    0.000    0.000    0.000    0.000 units.py:682(_my_partial)
        1    0.000    0.000    0.000    0.000 fourier.py:475(FiniteFourierSeries)
        1    0.000    0.000    0.000    0.000 polynomials.py:45(jacobi)
        1    0.000    0.000    0.000    0.000 conv.py:155(Conv3d)
        1    0.000    0.000    0.000    0.000 headerregistry.py:327(AddressHeader)
        1    0.000    0.000    0.000    0.000 getlimits.py:32(MachArLike)
        1    0.000    0.000    0.000    0.000 hb.py:44(HBInfo)
        1    0.000    0.000    0.000    0.000 orderings.py:10(MonomialOrder)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5401(__init__)
        1    0.000    0.000    0.000    0.000 colors.py:102(<dictcomp>)
        4    0.000    0.000    0.000    0.000 ops.py:52(nan_if_exception)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2172(_sum_dispatcher)
      2/1    0.000    0.000    0.000    0.000 {method 'seekable' of '_io.BufferedReader' objects}
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:234(<lambda>)
        1    0.000    0.000    0.000    0.000 _resampling.py:740(MonteCarloTestResult)
        1    0.000    0.000    0.000    0.000 _util.py:597(MapWrapper)
        1    0.000    0.000    0.000    0.000 monomials.py:512(Monomial)
        1    0.000    0.000    0.000    0.000 factorials.py:664(FallingFactorial)
        1    0.000    0.000    0.000    0.000 polyoptions.py:327(Sort)
        1    0.000    0.000    0.000    0.000 _compression.py:33(DecompressReader)
        1    0.000    0.000    0.000    0.000 special.py:174(GenericIdentity)
        1    0.000    0.000    0.000    0.000 _ops.py:44(PyOperatorABC)
        1    0.000    0.000    0.000    0.000 more.py:3665(callback_iter)
        1    0.000    0.000    0.000    0.000 ssl.py:159(TLSVersion)
        1    0.000    0.000    0.000    0.000 _pep440.py:149(__ge__)
        1    0.000    0.000    0.000    0.000 sets.py:2192(SymmetricDifference)
        1    0.000    0.000    0.000    0.000 activation.py:109(LeakyReLU)
        1    0.000    0.000    0.000    0.000 polar.py:144(InvertedPolarTransform)
        1    0.000    0.000    0.000    0.000 streamplot.py:365(StreamMask)
        1    0.000    0.000    0.000    0.000 linear_relu.py:6(LinearReLU)
        1    0.000    0.000    0.000    0.000 __init__.py:732(Context)
        1    0.000    0.000    0.000    0.000 computed_entries.py:168(CompositionEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 error_functions.py:1765(TrigonometricIntegral)
        1    0.000    0.000    0.000    0.000 request.py:1080(AbstractDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 grad_mode.py:258(_force_original_view_tracking)
        1    0.000    0.000    0.000    0.000 sets.py:2261(DisjointUnion)
        1    0.000    0.000    0.000    0.000 Image.py:468(ImagePointTransform)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9528(semicircular_gen)
        1    0.000    0.000    0.000    0.000 polynomials.py:1108(hermite_prob)
        1    0.000    0.000    0.000    0.000 activation.py:199(MultiheadAttention)
        1    0.000    0.000    0.000    0.000 image.py:841(AxesImage)
        1    0.000    0.000    0.000    0.000 Image.py:3712(register_mime)
        1    0.000    0.000    0.000    0.000 dataframes.py:371(CaptureDataFrameWithDataPipeOps)
        1    0.000    0.000    0.000    0.000 filelist.py:335(_UniqueDirs)
        1    0.000    0.000    0.000    0.000 epathtools.py:6(EPath)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:159(ChunkStream)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:211(AddrlistClass)
        1    0.000    0.000    0.000    0.000 more.py:270(peekable)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1367(StructuredVoidFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:758(is_url)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:864(Rem)
        1    0.000    0.000    0.000    0.000 scale.py:26(ScaleBase)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:282(<listcomp>)
        1    0.000    0.000    0.000    0.000 callable.py:18(MapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:482(InvalidMailbox)
        1    0.000    0.000    0.000    0.000 context.py:276(ForkProcess)
        1    0.000    0.000    0.000    0.000 activation.py:1408(Softmax)
        1    0.000    0.000    0.000    0.000 threading.py:1421(_DummyThread)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:81(ExportDiagnosticEngine)
        1    0.000    0.000    0.000    0.000 constraints.py:550(_Stack)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1686(cosine_gen)
        1    0.000    0.000    0.000    0.000 loss.py:1336(MultiMarginLoss)
        1    0.000    0.000    0.000    0.000 reduction.py:251(AbstractReducer)
        4    0.000    0.000    0.000    0.000 dataclasses.py:566(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1490(KeyEvent)
        1    0.000    0.000    0.000    0.000 rnn.py:1043(GRUCell)
        1    0.000    0.000    0.000    0.000 widgets.py:63(Widget)
        1    0.000    0.000    0.000    0.000 _constraints.py:127(LinearConstraint)
        1    0.000    0.000    0.000    0.000 polyoptions.py:602(Symmetric)
        1    0.000    0.000    0.000    0.000 mock.py:2069(MagicMixin)
        1    0.000    0.000    0.000    0.000 blas.py:249(<dictcomp>)
        1    0.000    0.000    0.000    0.000 polynomials.py:561(chebyshevu)
        1    0.000    0.000    0.000    0.000 headerregistry.py:402(MIMEVersionHeader)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12129(studentized_range_gen)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1390(zipfian_gen)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:965(__new__)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:688(MikotaM)
        1    0.000    0.000    0.000    0.000 instancenorm.py:9(_InstanceNorm)
        1    0.000    0.000    0.000    0.000 backend_tools.py:459(ToolMinorGrid)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_TextToBytesWrapper)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11491(halfgennorm_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2511(f_gen)
        1    0.000    0.000    0.000    0.000 dropout.py:8(_DropoutNd)
        1    0.000    0.000    0.000    0.000 _optimize.py:2439(Brent)
        1    0.000    0.000    0.000    0.000 line.py:2362(Segment2D)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:196(kstwo_gen)
        1    0.000    0.000    0.000    0.000 diophantine.py:1029(GeneralPythagorean)
        1    0.000    0.000    0.000    0.000 band_data_out.py:9(BandDataOut)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3282(ToolContainerBase)
        1    0.000    0.000    0.000    0.000 _polyint.py:19(_Interpolator1D)
        1    0.000    0.000    0.000    0.000 chi2.py:6(Chi2)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5604(invweibull_gen)
        1    0.000    0.000    0.000    0.000 importer.py:170(_SysImporter)
        1    0.000    0.000    0.000    0.000 backend_tools.py:319(ToolCursorPosition)
        1    0.000    0.000    0.000    0.000 sequences.py:415(SeqExpr)
        1    0.000    0.000    0.000    0.000 core.py:877(_DomainGreaterEqual)
        1    0.000    0.000    0.000    0.000 units.py:153(DecimalConverter)
        1    0.000    0.000    0.000    0.000 zipfile.py:782(_Tellable)
        1    0.000    0.000    0.000    0.000 ImageFile.py:488(Parser)
        1    0.000    0.000    0.000    0.000 band.py:17(__init__)
        1    0.000    0.000    0.000    0.000 _arraytools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _functools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:103(ExponentialCapsFloat)
        1    0.000    0.000    0.000    0.000 csv.py:23(Dialect)
        1    0.000    0.000    0.000    0.000 complexes.py:1105(periodic_argument)
        1    0.000    0.000    0.000    0.000 Image.py:521(SupportsGetData)
        1    0.000    0.000    0.000    0.000 _dok.py:589(dok_matrix)
        1    0.000    0.000    0.000    0.000 _policybase.py:271(Compat32)
        1    0.000    0.000    0.000    0.000 dataloader.py:661(_SingleProcessDataLoaderIter)
        1    0.000    0.000    0.000    0.000 ring.py:9(Ring)
        1    0.000    0.000    0.000    0.000 _input_validation.py:1(<module>)
        6    0.000    0.000    0.000    0.000 sdm.py:83(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._jit_init}
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 patches.py:2349(Roundtooth)
        1    0.000    0.000    0.000    0.000 function.py:263(BackwardCFunction)
        1    0.000    0.000    0.000    0.000 _spherical_voronoi.py:36(SphericalVoronoi)
        1    0.000    0.000    0.000    0.000 outputs.py:3894(Locpot)
        1    0.000    0.000    0.000    0.000 runners.py:21(Runner)
        1    0.000    0.000    0.000    0.000 utils.py:97(lazy_property)
        1    0.000    0.000    0.000    0.000 collections.py:1769(PatchCollection)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1962(dweibull_gen)
        1    0.000    0.000    0.000    0.000 polynomials.py:28(OrthogonalPolynomial)
        1    0.000    0.000    0.000    0.000 conv_fused.py:458(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 dataset.py:181(TensorDataset)
        1    0.000    0.000    0.000    0.000 _arffread.py:256(DateAttribute)
        1    0.000    0.000    0.000    0.000 batchnorm.py:78(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7134(mielke_gen)
        1    0.000    0.000    0.000    0.000 patches.py:2923(_Curve)
        1    0.000    0.000    0.000    0.000 Image.py:3018(ImagePointHandler)
        1    0.000    0.000    0.000    0.000 polar.py:464(_ThetaShift)
        1    0.000    0.000    0.000    0.000 ImageFile.py:458(StubImageFile)
        1    0.000    0.000    0.000    0.000 bessel.py:1880(airybiprime)
        1    0.000    0.000    0.000    0.000 functions.py:89(defun_static)
        1    0.000    0.000    0.000    0.000 __init__.py:61(get_calls)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9889(trapezoid_gen)
        1    0.000    0.000    0.000    0.000 animation.py:1452(ArtistAnimation)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4346(_shift_scale_distribution_function)
        1    0.000    0.000    0.000    0.000 outputs.py:5528(Eigenval)
        1    0.000    0.000    0.000    0.000 widgets.py:91(AxesWidget)
        1    0.000    0.000    0.000    0.000 headerregistry.py:468(ContentTypeHeader)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:810(__len__)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:94(RelaxedBernoulli)
        1    0.000    0.000    0.000    0.000 padding.py:173(_ReflectionPadNd)
        1    0.000    0.000    0.000    0.000 _infra.py:203(ThreadFlowLocation)
        7    0.000    0.000    0.000    0.000 {method 'truncate' of '_io.StringIO' objects}
        3    0.000    0.000    0.000    0.000 <frozen _collections_abc>:812(__init__)
        4    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.000    0.000    0.000    0.000 lambdarepr.py:20(LambdaPrinter)
        4    0.000    0.000    0.000    0.000 _array_api.py:131(array_namespace)
        1    0.000    0.000    0.000    0.000 numbers.py:1604(partition)
        1    0.000    0.000    0.000    0.000 _multivariate.py:123(_PSD)
        1    0.000    0.000    0.000    0.000 _mio4.py:461(VarWriter4)
        1    0.000    0.000    0.000    0.000 backend_tools.py:404(ToolQuitAll)
        1    0.000    0.000    0.000    0.000 limits.py:132(Limit)
        1    0.000    0.000    0.000    0.000 factorials.py:383(factorial2)
        1    0.000    0.000    0.000    0.000 computed_entries.py:112(ConstantEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1511(chi_gen)
        1    0.000    0.000    0.000    0.000 error_functions.py:2327(FresnelIntegral)
        1    0.000    0.000    0.000    0.000 backend_tools.py:694(ToolHome)
        1    0.000    0.000    0.000    0.000 ticker.py:2735(LogitLocator)
        1    0.000    0.000    0.000    0.000 spglib.py:365(SpaceGroupType)
        3    0.000    0.000    0.000    0.000 datetime.py:46(_days_before_year)
        1    0.000    0.000    0.000    0.000 field.py:8(Field)
        1    0.000    0.000    0.000    0.000 _trace.py:565(TracerWarning)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9471(recipinvgauss_gen)
        1    0.000    0.000    0.000    0.000 normalization.py:198(GroupNorm)
        1    0.000    0.000    0.000    0.000 compat.py:38(ordereddict)
        1    0.000    0.000    0.000    0.000 hyper.py:1062(HyperRep_log2)
        1    0.000    0.000    0.000    0.000 quadrature.py:5(QuadratureRule)
        6    0.000    0.000    0.000    0.000 profiler_util.py:348(_attr_formatter)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9591(skewcauchy_gen)
        1    0.000    0.000    0.000    0.000 decoder.py:236(MatHandler)
        1    0.000    0.000    0.000    0.000 _root_scalar.py:20(MemoizeDer)
        1    0.000    0.000    0.000    0.000 sequences.py:1020(SeqAdd)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:8(ChannelShuffle)
        1    0.000    0.000    0.000    0.000 hb.py:414(HBFile)
        1    0.000    0.000    0.000    0.000 _cubature.py:535(_VariableTransform)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5258(SymmetricPermutationGroup)
        1    0.000    0.000    0.000    0.000 parser.py:818(RoundTripParserSC)
        1    0.000    0.000    0.000    0.000 _type_utils.py:293(<dictcomp>)
        1    0.000    0.000    0.000    0.000 loss.py:1032(CrossEntropyLoss)
        1    0.000    0.000    0.000    0.000 string.py:188(Formatter)
        1    0.000    0.000    0.000    0.000 observer.py:1419(ReuseInputObserver)
        3    0.000    0.000    0.000    0.000 zipfile.py:1872(close)
        1    0.000    0.000    0.000    0.000 mathtext.py:137(MathtextBackendAgg)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2443(__init__)
        1    0.000    0.000    0.000    0.000 subprocess.py:115(Process)
       11    0.000    0.000    0.000    0.000 {built-in method io.text_encoding}
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:408(Pow)
        1    0.000    0.000    0.000    0.000 backend_tools.py:414(_ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3816(gengamma_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2380(fatiguelife_gen)
        1    0.000    0.000    0.000    0.000 polyoptions.py:512(Split)
        1    0.000    0.000    0.000    0.000 determinant.py:9(Determinant)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:721(MimeParameters)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:67(SourceLoader)
        1    0.000    0.000    0.000    0.000 observer.py:520(MovingAverageMinMaxObserver)
        1    0.000    0.000    0.000    0.000 collections.py:1190(BrokenBarHCollection)
        1    0.000    0.000    0.000    0.000 single.py:2012(SecondHypergeometric)
        1    0.000    0.000    0.000    0.000 trirefine.py:47(UniformTriRefiner)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:72(_override_resolve_out_shapes)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6099(laplace_asymmetric_gen)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:52(normcase)
        1    0.000    0.000    0.000    0.000 pyplot.py:92(<dictcomp>)
        1    0.000    0.000    0.000    0.000 dataloader.py:567(_BaseDataLoaderIter)
        1    0.000    0.000    0.000    0.000 dviread.py:955(Encoding)
        1    0.000    0.000    0.000    0.000 loader.py:71(RoundTripLoader)
        1    0.000    0.000    0.000    0.000 modules.py:160(ModuleElement)
        1    0.000    0.000    0.000    0.000 complexes.py:954(adjoint)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:40(ExportDiagnostic)
        3    0.000    0.000    0.000    0.000 wrappers.py:204(<listcomp>)
        1    0.000    0.000    0.000    0.000 normalization.py:63(CrossMapLRN2d)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9274(rice_gen)
        1    0.000    0.000    0.000    0.000 net_min_base.py:58(_MinimizerSettingBase)
        1    0.000    0.000    0.000    0.000 _policybase.py:18(_PolicyBase)
        1    0.000    0.000    0.000    0.000 markers.py:52(Environment)
        1    0.000    0.000    0.000    0.000 mathtext.py:1899(GlueSpec)
        1    0.000    0.000    0.000    0.000 _resampling.py:257(BootstrapResult)
        1    0.000    0.000    0.000    0.000 graph.py:214(PythonCode)
        1    0.000    0.000    0.000    0.000 boolalg.py:856(Not)
        1    0.000    0.000    0.000    0.000 loss.py:228(PoissonNLLLoss)
        2    0.000    0.000    0.000    0.000 cache.py:183(LazyFunctionMeta)
        1    0.000    0.000    0.000    0.000 backend_tools.py:248(SetCursorBase)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:765(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 blocking_input.py:330(BlockingKeyMouseInput)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1197(<listcomp>)
        1    0.000    0.000    0.000    0.000 headerregistry.py:504(ContentTransferEncodingHeader)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:870(Terminal)
        1    0.000    0.000    0.000    0.000 line.py:1578(Segment)
        1    0.000    0.000    0.000    0.000 transforms.py:2624(AffineDeltaTransform)
        1    0.000    0.000    0.000    0.000 activation.py:1492(LogSoftmax)
        1    0.000    0.000    0.000    0.000 factorials.py:503(RisingFactorial)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1783(DraggableOffsetBox)
        1    0.000    0.000    0.000    0.000 dataframes.py:417(DataFrameTracer)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6468(__init__)
        1    0.000    0.000    0.000    0.000 colorsys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _util.py:1062(_RichResult)
        1    0.000    0.000    0.000    0.000 extension.py:38(Extension)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:509(LinearLR)
        1    0.000    0.000    0.000    0.000 complexes.py:1020(polar_lift)
        1    0.000    0.000    0.000    0.000 cm.py:75(_DeprecatedCmapDictWrapper)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:171(MatrixPowerOperator)
        1    0.000    0.000    0.000    0.000 puiseux.py:59(PuiseuxRing)
        3    0.000    0.000    0.000    0.000 zipfile.py:689(_check_compression)
        1    0.000    0.000    0.000    0.000 _cubature.py:589(_InfiniteLimitsTransform)
        1    0.000    0.000    0.000    0.000 error_functions.py:912(erfcinv)
        3    0.000    0.000    0.000    0.000 <frozen _collections_abc>:98(__subclasshook__)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:310(elliptic_pi)
        1    0.000    0.000    0.000    0.000 numbers.py:1662(divisor_sigma)
        1    0.000    0.000    0.000    0.000 observer.py:1393(NoopObserver)
        1    0.000    0.000    0.000    0.000 subprocess.py:163(TimeoutExpired)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:197(betabinom_gen)
        1    0.000    0.000    0.000    0.000 _morestats.py:2625(_ABW)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:751(Protocol)
        1    0.000    0.000    0.000    0.000 __init__.py:531(__init__)
        1    0.000    0.000    0.000    0.000 hyper.py:937(HyperRep_atanh)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:96(ExpFormat)
        1    0.000    0.000    0.000    0.000 unix_events.py:1107(FastChildWatcher)
        1    0.000    0.000    0.000    0.000 animation.py:534(PillowWriter)
        1    0.000    0.000    0.000    0.000 request.py:908(HTTPPasswordMgrWithPriorAuth)
        1    0.000    0.000    0.000    0.000 _compression.py:16(_check_can_read)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1483(dlaplace_gen)
        1    0.000    0.000    0.000    0.000 _expm_multiply.py:396(LazyOperatorNormInfo)
        1    0.000    0.000    0.000    0.000 pathlib.py:231(_PosixFlavour)
        1    0.000    0.000    0.000    0.000 polar.py:720(_WedgeBbox)
        1    0.000    0.000    0.000    0.000 numbers.py:4020(Catalan)
        1    0.000    0.000    0.000    0.000 threading.py:103(_RLock)
        1    0.000    0.000    0.000    0.000 _vertex.py:247(VertexCacheField)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:895(_PatchedFnSetAttr)
        1    0.000    0.000    0.000    0.000 polyoptions.py:271(Gens)
        1    0.000    0.000    0.000    0.000 relational.py:1150(LessThan)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:842(SupportsInt)
        1    0.000    0.000    0.000    0.000 numbers.py:2144(totient)
        1    0.000    0.000    0.000    0.000 __init__.py:23(get_projection_names)
        1    0.000    0.000    0.000    0.000 ImageFile.py:449(StubHandler)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4186(__init__)
        1    0.000    0.000    0.000    0.000 loader.py:77(__init__)
        1    0.000    0.000    0.000    0.000 _interface.py:593(_CustomLinearOperator)
        1    0.000    0.000    0.000    0.000 observer.py:804(MovingAveragePerChannelMinMaxObserver)
        1    0.000    0.000    0.000    0.000 _ops.py:116(__init__)
        1    0.000    0.000    0.000    0.000 collections.py:934(PathCollection)
        1    0.000    0.000    0.000    0.000 six.py:169(_SixMetaPathImporter)
        1    0.000    0.000    0.000    0.000 pydoc.py:523(HTMLRepr)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6964(normal_inverse_gamma_gen)
        1    0.000    0.000    0.000    0.000 _resampling.py:2105(MonteCarloMethod)
        1    0.000    0.000    0.000    0.000 transforms.py:2460(BboxTransform)
        1    0.000    0.000    0.000    0.000 records.py:223(record)
        6    0.000    0.000    0.000    0.000 _type_aliases.py:92(<genexpr>)
        1    0.000    0.000    0.000    0.000 mathtext.py:3324(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:1047(_AppendConstAction)
        1    0.000    0.000    0.000    0.000 pooling.py:497(AvgPool1d)
        1    0.000    0.000    0.000    0.000 core.py:190(<listcomp>)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:928(_BivariateSplineBase)
        1    0.000    0.000    0.000    0.000 _info.py:33(__array_namespace_info__)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1162(MeijerUnShiftA)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:24(mathieus)
        1    0.000    0.000    0.000    0.000 _pep440.py:45(Infinity)
        1    0.000    0.000    0.000    0.000 sequences.py:378(EmptySequence)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:964(create_module)
        1    0.000    0.000    0.000    0.000 core.py:4862(AtLineStart)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:20(VisitingDistribution)
        1    0.000    0.000    0.000    0.000 _vertex.py:75(VertexScalarField)
        1    0.000    0.000    0.000    0.000 _rules.py:62(_MissingStandardSymbolicFunction)
        1    0.000    0.000    0.000    0.000 backend_tools.py:504(ToolYScale)
        1    0.000    0.000    0.000    0.000 polynomials.py:1320(assoc_laguerre)
        1    0.000    0.000    0.000    0.000 _ops.py:115(PyOperator)
        1    0.000    0.000    0.000    0.000 selectors.py:290(SelectSelector)
        1    0.000    0.000    0.000    0.000 calendar.py:412(HTMLCalendar)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8917(powernorm_gen)
        1    0.000    0.000    0.000    0.000 instancenorm.py:385(LazyInstanceNorm3d)
        1    0.000    0.000    0.000    0.000 numbers.py:3825(GoldenRatio)
        3    0.000    0.000    0.000    0.000 utils.py:16(<genexpr>)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:923(ValueTerminal)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:330(_constant)
        1    0.000    0.000    0.000    0.000 mathtext.py:1374(Node)
        1    0.000    0.000    0.000    0.000 gruntz.py:155(SubsSet)
        1    0.000    0.000    0.000    0.000 conv_fused.py:539(ConvBnReLU2d)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:25(_maybe_view_as_subclass)
        1    0.000    0.000    0.000    0.000 boolalg.py:1370(ITE)
        1    0.000    0.000    0.000    0.000 axis.py:409(XTick)
        1    0.000    0.000    0.000    0.000 wavfile.py:31(SeekEmulatingReader)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4297(PearsonRResult)
        1    0.000    0.000    0.000    0.000 numbers.py:1729(udivisor_sigma)
        1    0.000    0.000    0.000    0.000 polyoptions.py:543(Extension)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:608(G_Function)
        1    0.000    0.000    0.000    0.000 _factories.py:13(__call__)
        1    0.000    0.000    0.000    0.000 rnn.py:40(RNNCellBase)
        1    0.000    0.000    0.000    0.000 offsetbox.py:770(TextArea)
        1    0.000    0.000    0.000    0.000 widgets.py:1836(ToolHandles)
        1    0.000    0.000    0.000    0.000 scanner.py:2044(ScannedComments)
        1    0.000    0.000    0.000    0.000 timeit.py:84(Timer)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:75(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 expand.py:379(EnsurePackagesDiscovered)
       10    0.000    0.000    0.000    0.000 contextlib.py:65(_recreate_cm)
        1    0.000    0.000    0.000    0.000 graph_drawer.py:322(FxGraphDrawer)
        5    0.000    0.000    0.000    0.000 datetime.py:51(_days_in_month)
        1    0.000    0.000    0.000    0.000 colors.py:80(_ColorMapping)
        1    0.000    0.000    0.000    0.000 modules.py:1106(SubModulePolyRing)
        1    0.000    0.000    0.000    0.000 ordinals.py:5(OmegaPower)
        1    0.000    0.000    0.000    0.000 facts.py:257(Prover)
        1    0.000    0.000    0.000    0.000 kind.py:181(__new__)
        1    0.000    0.000    0.000    0.000 activation.py:80(ELU)
        1    0.000    0.000    0.000    0.000 memmap.py:22(memmap)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1849(_nchypergeom_gen)
        1    0.000    0.000    0.000    0.000 calendar.py:156(__init__)
        1    0.000    0.000    0.000    0.000 beta_functions.py:173(betainc)
        4    0.000    0.000    0.000    0.000 numbers.py:2871(__neg__)
        1    0.000    0.000    0.000    0.000 _linprog_doc.py:1(<module>)
        4    0.000    0.000    0.000    0.000 core.py:3417(dtype)
        1    0.000    0.000    0.000    0.000 __init__.py:226(insert_shim)
        1    0.000    0.000    0.000    0.000 arpack.py:990(IterOpInv)
        1    0.000    0.000    0.000    0.000 patches.py:2850(_Base)
        1    0.000    0.000    0.000    0.000 relational.py:909(GreaterThan)
        1    0.000    0.000    0.000    0.000 bessel.py:2044(marcumq)
        1    0.000    0.000    0.000    0.000 function.py:826(AppliedUndef)
        2    0.000    0.000    0.000    0.000 constraints.py:332(__init__)
        1    0.000    0.000    0.000    0.000 loss.py:539(BCELoss)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:19(RelativeRiskResult)
        1    0.000    0.000    0.000    0.000 dates.py:1697(MicrosecondLocator)
        1    0.000    0.000    0.000    0.000 error_functions.py:819(erfinv)
        1    0.000    0.000    0.000    0.000 image.py:1351(BboxImage)
        1    0.000    0.000    0.000    0.000 __init__.py:936(setLevel)
        1    0.000    0.000    0.000    0.000 index_tricks.py:717(IndexExpression)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:775(_Parameterization)
        1    0.000    0.000    0.000    0.000 normalization.py:46(GroupNorm)
        1    0.000    0.000    0.000    0.000 normalization.py:81(InstanceNorm1d)
        5    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getArchFlags}
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4387(TransformedDistribution)
        1    0.000    0.000    0.000    0.000 _base.py:154(FixedRule)
        1    0.000    0.000    0.000    0.000 numbers.py:2091(primeomega)
        1    0.000    0.000    0.000    0.000 companion.py:8(CompanionMatrix)
        1    0.000    0.000    0.000    0.000 assumptions.py:464(StdFactKB)
        1    0.000    0.000    0.000    0.000 gzip.py:80(__init__)
        1    0.000    0.000    0.000    0.000 equality.py:25(EqualityPredicate)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:12(WilcoxonDistribution)
        1    0.000    0.000    0.000    0.000 numbers.py:1801(legendre_symbol)
        1    0.000    0.000    0.000    0.000 abc.py:43(Finder)
        1    0.000    0.000    0.000    0.000 relational.py:827(_Inequality)
        1    0.000    0.000    0.000    0.000 _cubic.py:569(CubicSpline)
        1    0.000    0.000    0.000    0.000 colorbar.py:229(_ColorbarAutoLocator)
        1    0.000    0.000    0.000    0.000 _ode.py:1209(dop853)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:444(MatrixHomomorphism)
        1    0.000    0.000    0.000    0.000 rrule.py:94(rrulebase)
        3    0.000    0.000    0.000    0.000 units.py:791(unitized)
        6    0.000    0.000    0.000    0.000 fuser_method_mappings.py:153(_sequential_wrapper2)
        1    0.000    0.000    0.000    0.000 sequences.py:466(SeqPer)
        1    0.000    0.000    0.000    0.000 dropout.py:62(Dropout1d)
        1    0.000    0.000    0.000    0.000 _elffile.py:41(ELFFile)
        1    0.000    0.000    0.000    0.000 numbers.py:1849(jacobi_symbol)
        1    0.000    0.000    0.000    0.000 tempfile.py:132(_RandomNameSequence)
        1    0.000    0.000    0.000    0.000 distributed.py:194(_DDPJoinHook)
        1    0.000    0.000    0.000    0.000 backend_registry.py:74(<dictcomp>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:420(TrueDiv)
        1    0.000    0.000    0.000    0.000 logic.py:320(AndOr_Base)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:76(_interpolate)
        1    0.000    0.000    0.000    0.000 ssl.py:227(_TLSMessageType)
        1    0.000    0.000    0.000    0.000 _guards.py:354(Source)
        1    0.000    0.000    0.000    0.000 __init__.py:199(strict_fusion)
        1    0.000    0.000    0.000    0.000 padding.py:184(ReflectionPad1d)
        1    0.000    0.000    0.000    0.000 activation.py:110(RReLU)
        1    0.000    0.000    0.000    0.000 fancysets.py:239(Reals)
        1    0.000    0.000    0.000    0.000 encoder.py:74(JSONEncoder)
        1    0.000    0.000    0.000    0.000 resolver.py:303(VersionedResolver)
        1    0.000    0.000    0.000    0.000 pycode.py:837(SymPyPrinter)
        1    0.000    0.000    0.000    0.000 polyoptions.py:621(Auto)
        5    0.000    0.000    0.000    0.000 six.py:186(_get_module)
        1    0.000    0.000    0.000    0.000 _multivariate.py:245(multi_rv_frozen)
        1    0.000    0.000    0.000    0.000 pooling.py:249(_MaxUnpoolNd)
        1    0.000    0.000    0.000    0.000 distance.py:56(CosineSimilarity)
        1    0.000    0.000    0.000    0.000 transforms.py:783(CorrCholeskyTransform)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1105(_ListDataStream)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:402(MultiStepLR)
        1    0.000    0.000    0.000    0.000 combining.py:238(_ChildDataPipe)
        1    0.000    0.000    0.000    0.000 normalization.py:121(InstanceNorm2d)
        1    0.000    0.000    0.000    0.000 dataframes.py:282(CaptureSetItem)
        1    0.000    0.000    0.000    0.000 __init__.py:123(DeprecatedTuple)
        1    0.000    0.000    0.000    0.000 colorbar.py:262(_ColorbarAutoMinorLocator)
        5    0.000    0.000    0.000    0.000 transforms.py:224(_noconds_)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1255(multigamma)
        1    0.000    0.000    0.000    0.000 transforms.py:2088(_BlendedMixin)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:801(Min)
        1    0.000    0.000    0.000    0.000 _cm.py:66(cubehelix)
        1    0.000    0.000    0.000    0.000 __init__.py:321(CDLL)
        1    0.000    0.000    0.000    0.000 comments.py:591(CommentedKeySeq)
        1    0.000    0.000    0.000    0.000 weak.py:37(WeakIdRef)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:631(_IgnoreContextManager)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:343(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 _trustregion_dogleg.py:38(DoglegSubproblem)
        1    0.000    0.000    0.000    0.000 headerregistry.py:525(MessageIDHeader)
        1    0.000    0.000    0.000    0.000 radau.py:179(Radau)
        1    0.000    0.000    0.000    0.000 function.py:966(WildFunction)
        1    0.000    0.000    0.000    0.000 backend_tools.py:703(ToolBack)
        3    0.000    0.000    0.000    0.000 core.py:1362(getmask)
        1    0.000    0.000    0.000    0.000 __init__.py:44(__init__)
        1    0.000    0.000    0.000    0.000 cnf.py:394(EncodedCNF)
        1    0.000    0.000    0.000    0.000 qconfig.py:106(QConfigDynamic)
        1    0.000    0.000    0.000    0.000 selectors.py:433(PollSelector)
        1    0.000    0.000    0.000    0.000 _mangling.py:9(PackageMangler)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3915(genhalflogistic_gen)
        1    0.000    0.000    0.000    0.000 _adapters.py:48(SpecPath)
        1    0.000    0.000    0.000    0.000 numbers.py:277(lucas)
        1    0.000    0.000    0.000    0.000 animation.py:561(FFMpegBase)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:402(betanbinom_gen)
        1    0.000    0.000    0.000    0.000 modules.py:1005(SubQuotientModule)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:26(LRScheduler)
        1    0.000    0.000    0.000    0.000 fold.py:156(Unfold)
        1    0.000    0.000    0.000    0.000 events.py:17(Event)
        1    0.000    0.000    0.000    0.000 relational.py:1167(StrictGreaterThan)
        1    0.000    0.000    0.000    0.000 __init__.py:329(SymBool)
        1    0.000    0.000    0.000    0.000 transforms.py:107(__init__)
        1    0.000    0.000    0.000    0.000 tools.py:38(typed)
        1    0.000    0.000    0.000    0.000 transforms.py:2562(BboxTransformFrom)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:757(MikotaK)
        1    0.000    0.000    0.000    0.000 __init__.py:7(Warning)
        1    0.000    0.000    0.000    0.000 loss.py:301(GaussianNLLLoss)
        2    0.000    0.000    0.000    0.000 glob.py:108(<genexpr>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:930(Writer)
        1    0.000    0.000    0.000    0.000 index_tricks.py:562(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2972(weibull_max_gen)
        1    0.000    0.000    0.000    0.000 conv.py:220(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:36(_BarycentricRational)
        1    0.000    0.000    0.000    0.000 tableform.py:9(TableForm)
        1    0.000    0.000    0.000    0.000 complexes.py:897(transpose)
        1    0.000    0.000    0.000    0.000 stubs.py:38(QuantWrapper)
        1    0.000    0.000    0.000    0.000 _resampling.py:981(PowerResult)
        1    0.000    0.000    0.000    0.000 bdf.py:72(BDF)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1272(XMLPullParser)
        1    0.000    0.000    0.000    0.000 anchor.py:10(Anchor)
        1    0.000    0.000    0.000    0.000 cse_main.py:345(Unevaluated)
        1    0.000    0.000    0.000    0.000 sequences.py:1126(SeqMul)
        1    0.000    0.000    0.000    0.000 setupcfg.py:759(_AmbiguousMarker)
        1    0.000    0.000    0.000    0.000 _functions.py:37(ReduceAddCoalesced)
        1    0.000    0.000    0.000    0.000 core.py:2362(_PendingSkip)
        6    0.000    0.000    0.000    0.000 core.py:5906(postParse)
        1    0.000    0.000    0.000    0.000 activation.py:68(ReLU)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:30(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:293(kstwobign_gen)
        1    0.000    0.000    0.000    0.000 containers.py:339(OrderedSet)
        1    0.000    0.000    0.000    0.000 transforms.py:1169(CumulativeDistributionTransform)
        1    0.000    0.000    0.000    0.000 data_parallel.py:42(DataParallel)
        1    0.000    0.000    0.000    0.000 periodic_table.py:852(_ElementMeta)
        1    0.000    0.000    0.000    0.000 batchnorm.py:186(_LazyNormBase)
        1    0.000    0.000    0.000    0.000 util.py:6(assoc)
        1    0.000    0.000    0.000    0.000 json.py:552(MontyEncoder)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3117(_zero)
        1    0.000    0.000    0.000    0.000 _nonlin.py:454(InverseJacobian)
        1    0.000    0.000    0.000    0.000 line.py:1987(Line2D)
        1    0.000    0.000    0.000    0.000 _functions.py:180(CrossMapLRN2d)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:148(mathieusprime)
        3    0.000    0.000    0.000    0.000 arrayprint.py:898(_none_or_positive_arg)
        1    0.000    0.000    0.000    0.000 padding.py:225(ReflectionPad2d)
        1    0.000    0.000    0.000    0.000 pickle.py:200(_Framer)
        1    0.000    0.000    0.000    0.000 headerregistry.py:490(ContentDispositionHeader)
        7    0.000    0.000    0.000    0.000 typing.py:406(__init_subclass__)
        3    0.000    0.000    0.000    0.000 _version.py:78(_compare_version)
        1    0.000    0.000    0.000    0.000 _stats_py.py:5955(TtestResult)
        3    0.000    0.000    0.000    0.000 utils.py:17(<genexpr>)
        1    0.000    0.000    0.000    0.000 sym_operation.py:4(SymOp)
        1    0.000    0.000    0.000    0.000 polyoptions.py:258(Expand)
        1    0.000    0.000    0.000    0.000 linear.py:21(Identity)
        1    0.000    0.000    0.000    0.000 backend_tools.py:474(ToolFullScreen)
        1    0.000    0.000    0.000    0.000 formal.py:1690(FormalPowerSeriesInverse)
        1    0.000    0.000    0.000    0.000 rnn.py:1248(GRUCell)
        1    0.000    0.000    0.000    0.000 Files_out.py:2(FilesOut)
        1    0.000    0.000    0.000    0.000 torch_version.py:41(TorchVersion)
        1    0.000    0.000    0.000    0.000 selector_events.py:1126(_SelectorDatagramTransport)
        1    0.000    0.000    0.000    0.000 results.py:22(_ParseResultsWithOffset)
        1    0.000    0.000    0.000    0.000 streamplot.py:249(DomainMap)
        1    0.000    0.000    0.000    0.000 __init__.py:764(Grouper)
        1    0.000    0.000    0.000    0.000 figure.py:159(SubplotParams)
        1    0.000    0.000    0.000    0.000 _resampling.py:1314(PermutationTestResult)
        1    0.000    0.000    0.000    0.000 numbers.py:1920(kronecker_symbol)
        1    0.000    0.000    0.000    0.000 sharding.py:25(ShardingFilterIterDataPipe)
        1    0.000    0.000    0.000    0.000 boolalg.py:1108(Nand)
        1    0.000    0.000    0.000    0.000 boolalg.py:281(BooleanTrue)
        1    0.000    0.000    0.000    0.000 torch_version.py:6(_LazyImport)
        1    0.000    0.000    0.000    0.000 utilities.py:166(AlgIntPowers)
        1    0.000    0.000    0.000    0.000 _docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 request.py:834(HTTPPasswordMgr)
        1    0.000    0.000    0.000    0.000 batchnorm.py:519(LazyBatchNorm3d)
        1    0.000    0.000    0.000    0.000 dos.py:622(DosFingerprint)
        6    0.000    0.000    0.000    0.000 iterables.py:858(<genexpr>)
        1    0.000    0.000    0.000    0.000 matrices.py:747(MatrixMethods)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2324(exponpow_gen)
        1    0.000    0.000    0.000    0.000 _comparison.py:74(<dictcomp>)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1001(_DOF_estimator)
        1    0.000    0.000    0.000    0.000 _typing.py:44(JustFloat)
        1    0.000    0.000    0.000    0.000 numbers.py:3961(EulerGamma)
        1    0.000    0.000    0.000    0.000 version.py:45(Version)
        4    0.000    0.000    0.000    0.000 utils.py:8(_ntuple)
        1    0.000    0.000    0.000    0.000 spawn.py:12(ProcessException)
        1    0.000    0.000    0.000    0.000 records.py:308(recarray)
        1    0.000    0.000    0.000    0.000 colors.py:1174(LogNorm)
        1    0.000    0.000    0.000    0.000 bz2.py:140(writable)
        1    0.000    0.000    0.000    0.000 _trace.py:1111(TracedModule)
        1    0.000    0.000    0.000    0.000 _script.py:215(OrderedModuleDict)
        1    0.000    0.000    0.000    0.000 _rules.py:92(_OperatorSupportedInNewerOpsetVersion)
        1    0.000    0.000    0.000    0.000 _VF.py:19(VFModule)
        1    0.000    0.000    0.000    0.000 __init__.py:1198(is_interactive)
        1    0.000    0.000    0.000    0.000 autograd_function.py:547(CtxCustomSave)
        1    0.000    0.000    0.000    0.000 diagonal.py:86(DiagonalOf)
        1    0.000    0.000    0.000    0.000 padding.py:277(ReflectionPad3d)
        4    0.000    0.000    0.000    0.000 math2.py:42(_mathfun)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:413(_EnsurePackagesDiscovered)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_converter}
        1    0.000    0.000    0.000    0.000 request.py:1588(CacheFTPHandler)
        1    0.000    0.000    0.000    0.000 due.py:22(InactiveDueCreditCollector)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1087(CyclicLR)
        1    0.000    0.000    0.000    0.000 lsoda.py:7(LSODA)
        1    0.000    0.000    0.000    0.000 numbers.py:2194(reduced_totient)
        1    0.000    0.000    0.000    0.000 polyoptions.py:576(Modulus)
        4    0.000    0.000    0.000    0.000 __init__.py:799(<dictcomp>)
        1    0.000    0.000    0.000    0.000 equality.py:257(LessThanPredicate)
        1    0.000    0.000    0.000    0.000 exp_family.py:6(ExponentialFamily)
        1    0.000    0.000    0.000    0.000 graph.py:247(_node_list)
        1    0.000    0.000    0.000    0.000 dataset.py:252(ChainDataset)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1243(LinearMixing)
        1    0.000    0.000    0.000    0.000 matrixbase.py:5400(DeferredVector)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1997(_interpolate)
        1    0.000    0.000    0.000    0.000 conv_fused.py:590(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 index_tricks.py:618(ndindex)
        1    0.000    0.000    0.000    0.000 backend_tools.py:514(ToolXScale)
        1    0.000    0.000    0.000    0.000 __init__.py:154(HTTPMethod)
        2    0.000    0.000    0.000    0.000 decorator.py:120(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2447(_UnpackAlias)
        1    0.000    0.000    0.000    0.000 unix_events.py:902(PidfdChildWatcher)
        1    0.000    0.000    0.000    0.000 request.py:2399(ftpwrapper)
        1    0.000    0.000    0.000    0.000 category.py:133(StrCategoryFormatter)
        1    0.000    0.000    0.000    0.000 comments.py:230(LineCol)
        1    0.000    0.000    0.000    0.000 _kdtree.py:318(leafnode)
        1    0.000    0.000    0.000    0.000 random.py:784(SystemRandom)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:611(arcsine_gen)
        1    0.000    0.000    0.000    0.000 factor_.py:740(maxsize)
        1    0.000    0.000    0.000    0.000 mathtext.py:1618(Hlist)
        1    0.000    0.000    0.000    0.000 analyzer.py:1691(SpacegroupOperations)
        1    0.000    0.000    0.000    0.000 version.py:69(_BaseVersion)
        1    0.000    0.000    0.000    0.000 parser.py:79(BytesParser)
        1    0.000    0.000    0.000    0.000 conv_fused.py:763(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1304(OffsetImage)
        1    0.000    0.000    0.000    0.000 transforms.py:2598(ScaledTranslation)
        1    0.000    0.000    0.000    0.000 __init__.py:742(SpecialFileError)
        1    0.000    0.000    0.000    0.000 equality.py:113(StrictGreaterThanPredicate)
        1    0.000    0.000    0.000    0.000 version.py:38(_Version)
        1    0.000    0.000    0.000    0.000 __init__.py:840(_CudaBase)
        1    0.000    0.000    0.000    0.000 mathtext.py:1404(Box)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:61(_override_key)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3061(invwishart_frozen)
        1    0.000    0.000    0.000    0.000 _base.py:1554(sparray)
        1    0.000    0.000    0.000    0.000 response.py:68(addinfourl)
        1    0.000    0.000    0.000    0.000 conv.py:1264(LazyConv2d)
        1    0.000    0.000    0.000    0.000 __init__.py:230(_remove_shim)
        1    0.000    0.000    0.000    0.000 beta_functions.py:282(betainc_regularized)
        1    0.000    0.000    0.000    0.000 constraints.py:186(_IndependentConstraint)
        1    0.000    0.000    0.000    0.000 Bravais_Lattice.py:10(bravaislattice)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1140(_fdat)
        1    0.000    0.000    0.000    0.000 dates.py:947(rrulewrapper)
        1    0.000    0.000    0.000    0.000 error_functions.py:2759(_eis)
        1    0.000    0.000    0.000    0.000 _contextlib.py:120(_DecoratorContextManager)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:897(SupportsRound)
        1    0.000    0.000    0.000    0.000 __init__.py:488(StringTemplateStyle)
        6    0.000    0.000    0.000    0.000 core.py:846(__init__)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:13(ExprWithIntLimits)
        1    0.000    0.000    0.000    0.000 normalization.py:161(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 threading.py:264(__enter__)
        9    0.000    0.000    0.000    0.000 _globals.py:58(__repr__)
        1    0.000    0.000    0.000    0.000 complexes.py:1233(principal_branch)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1175(DiagBroyden)
        1    0.000    0.000    0.000    0.000 _common.py:6(weekday)
        1    0.000    0.000    0.000    0.000 shape_prop.py:68(ShapeProp)
        1    0.000    0.000    0.000    0.000 request.py:645(HTTPRedirectHandler)
        1    0.000    0.000    0.000    0.000 TiffTags.py:32(TagInfo)
        1    0.000    0.000    0.000    0.000 parameters.py:60(__init__)
        1    0.000    0.000    0.000    0.000 transports.py:9(BaseTransport)
        1    0.000    0.000    0.000    0.000 boolalg.py:1202(Implies)
        1    0.000    0.000    0.000    0.000 _infra.py:230(Graph)
        1    0.000    0.000    0.000    0.000 __future__.py:81(_Feature)
        1    0.000    0.000    0.000    0.000 queues.py:218(PriorityQueue)
        1    0.000    0.000    0.000    0.000 polyoptions.py:684(Gen)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
        9    0.000    0.000    0.000    0.000 typing.py:495(__repr__)
        1    0.000    0.000    0.000    0.000 rnn.py:492(GRU)
        1    0.000    0.000    0.000    0.000 _infra.py:167(StackFrame)
        1    0.000    0.000    0.000    0.000 backend_tools.py:728(SaveFigureBase)
        1    0.000    0.000    0.000    0.000 computed_entries.py:226(TemperatureEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 _rules.py:126(_FxTracerSuccess)
        1    0.000    0.000    0.000    0.000 suite.py:92(TestSuite)
        1    0.000    0.000    0.000    0.000 _hypotests.py:705(SomersDResult)
        1    0.000    0.000    0.000    0.000 art3d.py:375(Patch3DCollection)
        3    0.000    0.000    0.000    0.000 rcsetup.py:217(validate_dpi)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:18(Storage)
        1    0.000    0.000    0.000    0.000 offsetbox.py:918(AuxTransformBox)
        1    0.000    0.000    0.000    0.000 _resampling.py:2082(ResamplingMethod)
        1    0.000    0.000    0.000    0.000 tz.py:874(tzrange)
        1    0.000    0.000    0.000    0.000 cnf.py:77(OR)
        5    0.000    0.000    0.000    0.000 version.py:537(<lambda>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:505(IsNonOverlappingAndDenseIndicator)
        1    0.000    0.000    0.000    0.000 ImageFile.py:812(PyDecoder)
        1    0.000    0.000    0.000    0.000 widgets.py:2443(PolygonSelector)
        1    0.000    0.000    0.000    0.000 numbers.py:2039(primenu)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:11(HessianUpdateStrategy)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:902(logser_gen)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:851(SupportsFloat)
        1    0.000    0.000    0.000    0.000 colorbar.py:289(_ColorbarLogLocator)
        3    0.000    0.000    0.000    0.000 __init__.py:919(__init__)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:517(AddrSpec)
        1    0.000    0.000    0.000    0.000 series.py:1608(Parametric2DLineSeries)
        1    0.000    0.000    0.000    0.000 numbers.py:2252(primepi)
        1    0.000    0.000    0.000    0.000 _rbfinterp.py:134(RBFInterpolator)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:13(ReentrancyLock)
        1    0.000    0.000    0.000    0.000 core.py:6735(_extrema_operation)
        1    0.000    0.000    0.000    0.000 hb.py:375(<dictcomp>)
        1    0.000    0.000    0.000    0.000 csv.py:165(Sniffer)
        1    0.000    0.000    0.000    0.000 polyoptions.py:711(Symbols)
        1    0.000    0.000    0.000    0.000 ImageMode.py:24(ModeDescriptor)
        1    0.000    0.000    0.000    0.000 headerregistry.py:104(Group)
        1    0.000    0.000    0.000    0.000 comments.py:671(CommentedMapItemsView)
        1    0.000    0.000    0.000    0.000 Files_in.py:3(FilesIn)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:285(BFGS)
        1    0.000    0.000    0.000    0.000 para4tb.py:133(__init__)
        1    0.000    0.000    0.000    0.000 hub.py:20(_Faketqdm)
        1    0.000    0.000    0.000    0.000 series.py:1755(Parametric3DLineSeries)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2632(foldnorm_gen)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:385(NameAddr)
        1    0.000    0.000    0.000    0.000 distance.py:1744(CDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 axis.py:482(YTick)
        1    0.000    0.000    0.000    0.000 ImageFile.py:101(_Tile)
        1    0.000    0.000    0.000    0.000 single.py:1203(Separable)
        1    0.000    0.000    0.000    0.000 numbers.py:1959(mobius)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:174(OddsRatioResult)
        1    0.000    0.000    0.000    0.000 _ode.py:1049(zvode)
        1    0.000    0.000    0.000    0.000 equality.py:69(UnequalityPredicate)
        1    0.000    0.000    0.000    0.000 _script.py:1534(_ScriptProfile)
        1    0.000    0.000    0.000    0.000 error_functions.py:995(erf2inv)
        1    0.000    0.000    0.000    0.000 python.py:10(PythonPrinter)
        1    0.000    0.000    0.000    0.000 locks.py:24(Lock)
        3    0.000    0.000    0.000    0.000 __init__.py:1319(disable)
        1    0.000    0.000    0.000    0.000 distance.py:1771(PDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 ticker.py:923(LogFormatter)
        1    0.000    0.000    0.000    0.000 line.py:2160(Ray2D)
        1    0.000    0.000    0.000    0.000 boolalg.py:397(BooleanFalse)
        1    0.000    0.000    0.000    0.000 typing.py:951(__repr__)
        1    0.000    0.000    0.000    0.000 more.py:941(bucket)
        1    0.000    0.000    0.000    0.000 fused.py:113(BNReLU3d)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2512(wishart_frozen)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:9(use_reflection)
        1    0.000    0.000    0.000    0.000 _docscrape.py:578(FunctionDoc)
        2    0.000    0.000    0.000    0.000 constraints.py:366(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:504(CFunctionType)
        1    0.000    0.000    0.000    0.000 _creation.py:17(<dictcomp>)
        1    0.000    0.000    0.000    0.000 hyper.py:1129(appellf1)
        1    0.000    0.000    0.000    0.000 __init__.py:2317(JupyterHTMLStr)
        1    0.000    0.000    0.000    0.000 cse_main.py:218(FuncArgTracker)
        4    0.000    0.000    0.000    0.000 expr.py:3570(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 enumerative.py:92(PartComponent)
        1    0.000    0.000    0.000    0.000 ticker.py:183(_DummyAxis)
        1    0.000    0.000    0.000    0.000 formal.py:1543(FormalPowerSeriesProduct)
        1    0.000    0.000    0.000    0.000 tempfile.py:416(_TemporaryFileCloser)
        1    0.000    0.000    0.000    0.000 boolalg.py:1487(Exclusive)
        1    0.000    0.000    0.000    0.000 _guards.py:284(GuardsContext)
        1    0.000    0.000    0.000    0.000 selectors.py:442(EpollSelector)
        1    0.000    0.000    0.000    0.000 dataloader.py:83(_InfiniteConstantSampler)
        1    0.000    0.000    0.000    0.000 __config__.py:98(<listcomp>)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:463(_VectorHessWrapper)
        1    0.000    0.000    0.000    0.000 response.py:14(addbase)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:86(mathieuc)
        1    0.000    0.000    0.000    0.000 scalarbool.py:21(ScalarBoolean)
        2    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        1    0.000    0.000    0.000    0.000 request.py:1256(AbstractHTTPHandler)
        1    0.000    0.000    0.000    0.000 _trace.py:75(ONNXTracedModule)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:210(mathieucprime)
        1    0.000    0.000    0.000    0.000 activation.py:478(ELU)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:667(riemann_xi)
        1    0.000    0.000    0.000    0.000 conv.py:90(Conv2d)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:13(_MultiDeviceReplicator)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1044(_TypedDictMeta)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2249(exponweib_gen)
        1    0.000    0.000    0.000    0.000 streams.py:117(FlowControlMixin)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:60(PixelUnshuffle)
        1    0.000    0.000    0.000    0.000 relational.py:873(_Greater)
        1    0.000    0.000    0.000    0.000 _rules.py:300(_FxNodeToOnnx)
        1    0.000    0.000    0.000    0.000 package_importer.py:662(_PackageNode)
        1    0.000    0.000    0.000    0.000 pathlib.py:304(__init__)
        1    0.000    0.000    0.000    0.000 _guards.py:78(ShapeGuard)
        1    0.000    0.000    0.000    0.000 padding.py:434(ReplicationPad3d)
        1    0.000    0.000    0.000    0.000 legend_handler.py:652(__init__)
        1    0.000    0.000    0.000    0.000 transports.py:251(_FlowControlMixin)
        1    0.000    0.000    0.000    0.000 context.py:230(DefaultContext)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1832(dirichlet_frozen)
        1    0.000    0.000    0.000    0.000 exponential.py:139(exp_polar)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:113(Unpickler)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1189(BivariateSpline)
        1    0.000    0.000    0.000    0.000 _collections.py:27(Pair)
        1    0.000    0.000    0.000    0.000 batchnorm.py:121(_BatchNorm)
        6    0.000    0.000    0.000    0.000 _common.py:13(tzname_in_python2)
        1    0.000    0.000    0.000    0.000 core.py:4223(Or)
        1    0.000    0.000    0.000    0.000 _binomtest.py:10(BinomTestResult)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1701(skellam_gen)
        5    0.000    0.000    0.000    0.000 due.py:43(_donothing_func)
        1    0.000    0.000    0.000    0.000 ecm.py:17(Point)
        1    0.000    0.000    0.000    0.000 scanner.py:1730(RoundTripScanner)
        1    0.000    0.000    0.000    0.000 printer.py:388(_PrintFunction)
        8    0.000    0.000    0.000    0.000 six.py:80(_add_doc)
        1    0.000    0.000    0.000    0.000 _base.py:245(NestedFixedRule)
        1    0.000    0.000    0.000    0.000 legend_handler.py:43(HandlerBase)
        4    0.000    0.000    0.000    0.000 numbers.py:1444(_eval_is_zero)
        2    0.000    0.000    0.000    0.000 annotations.py:30(__init__)
        1    0.000    0.000    0.000    0.000 package_exporter.py:103(_PatternInfo)
        1    0.000    0.000    0.000    0.000 selectors.py:206(_BaseSelectorImpl)
        1    0.000    0.000    0.000    0.000 version.py:78(__lt__)
        1    0.000    0.000    0.000    0.000 loss.py:1179(MultiLabelSoftMarginLoss)
        1    0.000    0.000    0.000    0.000 least_squares.py:255(_WrapArgsKwargs)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:8(Printable)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11053(_SimpleBeta)
        1    0.000    0.000    0.000    0.000 unix_events.py:1426(_UnixDefaultEventLoopPolicy)
        1    0.000    0.000    0.000    0.000 importer.py:183(OrderedImporter)
        1    0.000    0.000    0.000    0.000 diagonal.py:157(DiagMatrix)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:1398(FakeCopyMode)
        1    0.000    0.000    0.000    0.000 more.py:2688(SequenceView)
        1    0.000    0.000    0.000    0.000 mutable_ndim_array.py:4(MutableNDimArray)
        3    0.000    0.000    0.000    0.000 facts.py:290(split_alpha_beta)
        3    0.000    0.000    0.000    0.000 core.py:806(__init__)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:81(_SupportsDType)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:80(_override_finalize_out)
        1    0.000    0.000    0.000    0.000 activation.py:524(CELU)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:9(detect_anomaly)
        1    0.000    0.000    0.000    0.000 records.py:87(format_parser)
        1    0.000    0.000    0.000    0.000 transforms.py:1696(AffineBase)
        1    0.000    0.000    0.000    0.000 spglib.py:402(MagneticSpaceGroupType)
        1    0.000    0.000    0.000    0.000 inputs.py:1927(OrbitalDescription)
        1    0.000    0.000    0.000    0.000 transforms.py:1428(HankelTypeTransform)
        1    0.000    0.000    0.000    0.000 utils.py:138(ObjectWrapper)
        2    0.000    0.000    0.000    0.000 representer.py:137(add_multi_representer)
        1    0.000    0.000    0.000    0.000 colorbar.py:1636(ColorbarPatch)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1702(TukeyHSDResult)
        1    0.000    0.000    0.000    0.000 zipfile.py:1131(_ZipWriteFile)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2149(exponnorm_gen)
        1    0.000    0.000    0.000    0.000 transports.py:72(WriteTransport)
        1    0.000    0.000    0.000    0.000 core.py:2589(MaskedIterator)
        1    0.000    0.000    0.000    0.000 storage.py:230(UntypedStorage)
        3    0.000    0.000    0.000    0.000 core.py:104(do_one)
        1    0.000    0.000    0.000    0.000 tensor.py:4849(WildTensorIndex)
        1    0.000    0.000    0.000    0.000 _arffread.py:170(NumericAttribute)
        1    0.000    0.000    0.000    0.000 _rules.py:182(_FxFrontendAotautograd)
        1    0.000    0.000    0.000    0.000 _guards.py:216(DuplicateInputs)
        1    0.000    0.000    0.000    0.000 sequences.py:611(SeqFormula)
        1    0.000    0.000    0.000    0.000 core.py:195(<listcomp>)
        1    0.000    0.000    0.000    0.000 _iotools.py:133(LineSplitter)
        1    0.000    0.000    0.000    0.000 runner.py:161(TextTestRunner)
        1    0.000    0.000    0.000    0.000 pyplot.py:514(_xkcd)
        1    0.000    0.000    0.000    0.000 padding.py:330(_ReplicationPadNd)
        1    0.000    0.000    0.000    0.000 collections.py:1102(PolyCollection)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:417(_PageL)
        1    0.000    0.000    0.000    0.000 loss.py:219(NLLLoss2d)
        1    0.000    0.000    0.000    0.000 grouping.py:19(__getattr__)
        1    0.000    0.000    0.000    0.000 tz.py:1253(tzical)
        1    0.000    0.000    0.000    0.000 loss.py:35(L1Loss)
        1    0.000    0.000    0.000    0.000 package_importer.py:697(_PackageResourceReader)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:15(TriInterpolator)
        1    0.000    0.000    0.000    0.000 single.py:443(FirstExact)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:43(size_bytes)
        1    0.000    0.000    0.000    0.000 __init__.py:110(DeQuantize)
        1    0.000    0.000    0.000    0.000 distributed.py:153(_BufferCommHook)
        1    0.000    0.000    0.000    0.000 _survival.py:219(ECDFResult)
        1    0.000    0.000    0.000    0.000 _idl.py:629(AttrDict)
        1    0.000    0.000    0.000    0.000 getlimits.py:630(iinfo)
        1    0.000    0.000    0.000    0.000 rrule.py:305(rrule)
        1    0.000    0.000    0.000    0.000 numerictypes.py:425(_typedict)
        1    0.000    0.000    0.000    0.000 mathtext.py:1262(FontConstantsBase)
        1    0.000    0.000    0.000    0.000 headerregistry.py:562(HeaderRegistry)
        1    0.000    0.000    0.000    0.000 _nonlin.py:843(BroydenFirst)
        1    0.000    0.000    0.000    0.000 core.py:5097(_MultipleMatch)
        1    0.000    0.000    0.000    0.000 _infra.py:40(PatchedPropertyBag)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1295(zipf_gen)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11039(_SimpleChi2)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:17(DCSRCH)
        1    0.000    0.000    0.000    0.000 polynomials.py:728(chebyshevu_root)
        1    0.000    0.000    0.000    0.000 encoder.py:105(__init__)
        1    0.000    0.000    0.000    0.000 mlab.py:962(GaussianKDE)
        1    0.000    0.000    0.000    0.000 colors.py:1099(TwoSlopeNorm)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11024(_SimpleNormal)
        1    0.000    0.000    0.000    0.000 _pep440.py:77(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:538(AddWithLimits)
        1    0.000    0.000    0.000    0.000 line.py:2670(Ray3D)
        1    0.000    0.000    0.000    0.000 _datasource.py:99(__init__)
        1    0.000    0.000    0.000    0.000 assume.py:14(AssumptionsContext)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:17(DirectoryReader)
        1    0.000    0.000    0.000    0.000 utils.py:117(Comparable)
        1    0.000    0.000    0.000    0.000 __init__.py:290(_DeviceGuard)
        1    0.000    0.000    0.000    0.000 _utils.py:39(Interval)
        8    0.000    0.000    0.000    0.000 _pep440.py:70(__neg__)
        1    0.000    0.000    0.000    0.000 pooling.py:990(_AdaptiveMaxPoolNd)
        2    0.000    0.000    0.000    0.000 constraint_registry.py:83(__init__)
        1    0.000    0.000    0.000    0.000 line.py:2429(LinearEntity3D)
        1    0.000    0.000    0.000    0.000 graph_module.py:28(__init__)
        5    0.000    0.000    0.000    0.000 platform.py:775(_unknown_as_blank)
        1    0.000    0.000    0.000    0.000 _comparison.py:414(NonePair)
        1    0.000    0.000    0.000    0.000 core.py:977(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:12(PageTrendTestResult)
        1    0.000    0.000    0.000    0.000 locks.py:331(Semaphore)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:344(ArrayComprehensionMap)
        1    0.000    0.000    0.000    0.000 _rules.py:323(_FxFrontendDynamoMakeFx)
        1    0.000    0.000    0.000    0.000 numbers.py:2954(Half)
        1    0.000    0.000    0.000    0.000 ticker.py:2372(LogLocator)
        1    0.000    0.000    0.000    0.000 equality.py:209(StrictLessThanPredicate)
        1    0.000    0.000    0.000    0.000 _parser.py:15(Node)
        1    0.000    0.000    0.000    0.000 __init__.py:275(cudaStatus)
        1    0.000    0.000    0.000    0.000 mathtext.py:1527(Accent)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:129(EnergyState)
        1    0.000    0.000    0.000    0.000 _backend.py:36(_backend_from_arg)
        6    0.000    0.000    0.000    0.000 expr.py:1021(_eval_power)
        1    0.000    0.000    0.000    0.000 _classes.py:21(__init__)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1232(_Sparse_Matrix_coo)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:782(_make_node_sizes_strides)
        1    0.000    0.000    0.000    0.000 equality.py:161(GreaterThanPredicate)
        1    0.000    0.000    0.000    0.000 _ops.py:524(_OpNamespace)
        4    0.000    0.000    0.000    0.000 core.py:6544(__has_singleton)
        1    0.000    0.000    0.000    0.000 lines.py:1399(_AxLine)
        1    0.000    0.000    0.000    0.000 _decorator.py:11(functional_datapipe)
        1    0.000    0.000    0.000    0.000 datetime.py:1219(tzinfo)
        3    0.000    0.000    0.000    0.000 rcsetup.py:391(validate_aspect)
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 core.py:5313(Opt)
        1    0.000    0.000    0.000    0.000 locks.py:219(Condition)
        1    0.000    0.000    0.000    0.000 mathtext.py:1731(Vlist)
        1    0.000    0.000    0.000    0.000 ssl.py:154(<dictcomp>)
        1    0.000    0.000    0.000    0.000 tz.py:328(_ttinfo)
        1    0.000    0.000    0.000    0.000 backend_tools.py:712(ToolForward)
        1    0.000    0.000    0.000    0.000 grad_mode.py:108(set_grad_enabled)
        1    0.000    0.000    0.000    0.000 activation.py:298(Hardsigmoid)
        1    0.000    0.000    0.000    0.000 parameter.py:13(Parameter)
        1    0.000    0.000    0.000    0.000 common.py:137(OdeSolution)
        1    0.000    0.000    0.000    0.000 fnmatch.py:12(WildCard)
        2    0.000    0.000    0.000    0.000 pathlib.py:53(__init__)
        1    0.000    0.000    0.000    0.000 _meta.py:32(SimplePath)
        1    0.000    0.000    0.000    0.000 client.py:1481(IncompleteRead)
        1    0.000    0.000    0.000    0.000 series.py:1229(List2DSeries)
        1    0.000    0.000    0.000    0.000 _base.py:33(_axis_method_wrapper)
        1    0.000    0.000    0.000    0.000 ticker.py:211(TickHelper)
        1    0.000    0.000    0.000    0.000 transforms.py:587(SigmoidTransform)
        1    0.000    0.000    0.000    0.000 autograd_function.py:251(VmapInfo)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:878(SupportsIndex)
        1    0.000    0.000    0.000    0.000 tensor.py:4578(WildTensorHead)
        6    0.000    0.000    0.000    0.000 version.py:471(_parse_letter_version)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:12(LRUDict)
        1    0.000    0.000    0.000    0.000 para4band.py:82(Para4Band)
        3    0.000    0.000    0.000    0.000 rendezvous.py:22(register_rendezvous_handler)
        1    0.000    0.000    0.000    0.000 graphs.py:118(graph)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4063(AlexanderGovernResult)
        1    0.000    0.000    0.000    0.000 report.py:44(IPReport)
        1    0.000    0.000    0.000    0.000 widgets.py:25(LockDraw)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:455(Mailbox)
        1    0.000    0.000    0.000    0.000 activation.py:807(Softplus)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5769(uniform_direction_gen)
        1    0.000    0.000    0.000    0.000 core.py:255(InputGenerator)
        1    0.000    0.000    0.000    0.000 tarfile.py:304(_LowLevelFile)
        1    0.000    0.000    0.000    0.000 determinant.py:72(Permanent)
        1    0.000    0.000    0.000    0.000 library.py:18(Library)
        1    0.000    0.000    0.000    0.000 grad_mode.py:9(no_grad)
        1    0.000    0.000    0.000    0.000 mock.py:281(_SentinelObject)
        1    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1615(_ShapeInfo)
        1    0.000    0.000    0.000    0.000 protocols.py:9(BaseProtocol)
        1    0.000    0.000    0.000    0.000 graph.py:42(_CustomBuiltin)
        1    0.000    0.000    0.000    0.000 streamplot.py:313(Grid)
        3    0.000    0.000    0.000    0.000 libmpf.py:663(mpf_neg)
        5    0.000    0.000    0.000    0.000 datetime.py:545(_check_tzinfo_arg)
        1    0.000    0.000    0.000    0.000 _adapters.py:83(ChildPath)
        1    0.000    0.000    0.000    0.000 __init__.py:41(_LazySeedTracker)
        4    0.000    0.000    0.000    0.000 _ops.py:129(py_impl)
        1    0.000    0.000    0.000    0.000 configparser.py:360(Interpolation)
        1    0.000    0.000    0.000    0.000 constraints.py:68(Constraint)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:860(SupportsComplex)
        1    0.000    0.000    0.000    0.000 _interface.py:846(IdentityOperator)
        1    0.000    0.000    0.000    0.000 loader.py:23(_FailedTest)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:41(BasinHoppingRunner)
        1    0.000    0.000    0.000    0.000 abc.py:112(PathEntryFinder)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:267(Znm)
        1    0.000    0.000    0.000    0.000 _decorator.py:47(guaranteed_datapipes_determinism)
        1    0.000    0.000    0.000    0.000 polar.py:362(ThetaAxis)
        1    0.000    0.000    0.000    0.000 art3d.py:293(Patch3D)
        1    0.000    0.000    0.000    0.000 base.py:233(DenseOutput)
        1    0.000    0.000    0.000    0.000 reductions.py:49(SharedCache)
        1    0.000    0.000    0.000    0.000 tools_common.py:90(FusionGroup)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1352(KrylovJacobian)
        1    0.000    0.000    0.000    0.000 dates.py:648(ConciseDateFormatter)
        1    0.000    0.000    0.000    0.000 _rules.py:152(_FxTracerFailure)
        1    0.000    0.000    0.000    0.000 __init__.py:303(device)
        1    0.000    0.000    0.000    0.000 conv.py:1402(LazyConvTranspose1d)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:514(FunctionModifiers)
        1    0.000    0.000    0.000    0.000 _codata.py:142(exact2002)
        1    0.000    0.000    0.000    0.000 rules.py:5(Transform)
        1    0.000    0.000    0.000    0.000 polyoptions.py:384(Composite)
        1    0.000    0.000    0.000    0.000 symbol.py:26(Str)
        1    0.000    0.000    0.000    0.000 _beartype.py:38(_create_beartype_decorator)
        1    0.000    0.000    0.000    0.000 activation.py:733(LeakyReLU)
        1    0.000    0.000    0.000    0.000 polar.py:269(ThetaTick)
        1    0.000    0.000    0.000    0.000 widgets.py:238(Slider)
        1    0.000    0.000    0.000    0.000 Image.py:3029(ImageTransformHandler)
        1    0.000    0.000    0.000    0.000 reductions.py:22(StorageWeakRef)
        1    0.000    0.000    0.000    0.000 padding.py:382(ReplicationPad2d)
        3    0.000    0.000    0.000    0.000 {method 'toordinal' of 'datetime.date' objects}
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1285(<listcomp>)
        1    0.000    0.000    0.000    0.000 pc_groups.py:7(PolycyclicGroup)
        1    0.000    0.000    0.000    0.000 more.py:2438(islice_extended)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:626(_ProtocolMeta)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:207(ProductOperator)
        1    0.000    0.000    0.000    0.000 kind.py:7(MatrixKind)
        1    0.000    0.000    0.000    0.000 npyio.py:42(BagObj)
        1    0.000    0.000    0.000    0.000 dispatcher.py:366(MethodDispatcher)
        1    0.000    0.000    0.000    0.000 _pytree.py:135(LeafSpec)
        1    0.000    0.000    0.000    0.000 version.py:454(_TrimmedRelease)
        1    0.000    0.000    0.000    0.000 join.py:11(JoinHook)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:985(__new__)
        1    0.000    0.000    0.000    0.000 _globals.py:32(_NoValueType)
        1    0.000    0.000    0.000    0.000 __init__.py:2111(_OrderedSet)
        1    0.000    0.000    0.000    0.000 server_process_global_profiler.py:16(_server_process_global_profile)
        1    0.000    0.000    0.000    0.000 rnn.py:46(PackedParameter)
        1    0.000    0.000    0.000    0.000 Image.py:3727(register_save)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2317(_any_dispatcher)
        1    0.000    0.000    0.000    0.000 collections.py:1664(CircleCollection)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:292(ivmpf_constant)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2687(_max_dispatcher)
        1    0.000    0.000    0.000    0.000 polynomials.py:687(chebyshevt_root)
        1    0.000    0.000    0.000    0.000 headerregistry.py:439(ParameterizedMIMEHeader)
        2    0.000    0.000    0.000    0.000 compat.py:113(__init__)
        1    0.000    0.000    0.000    0.000 timeutils.py:40(<listcomp>)
        1    0.000    0.000    0.000    0.000 relational.py:891(_Less)
        1    0.000    0.000    0.000    0.000 conv_fused.py:363(ConvBn1d)
        1    0.000    0.000    0.000    0.000 reductions.py:62(_after_fork)
        1    0.000    0.000    0.000    0.000 loss.py:726(HingeEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 __init__.py:307(_LowLevelFile)
        1    0.000    0.000    0.000    0.000 _internal.py:616(_Stream)
        1    0.000    0.000    0.000    0.000 single.py:294(SinglePatternODESolver)
        1    0.000    0.000    0.000    0.000 pycode.py:673(<dictcomp>)
        1    0.000    0.000    0.000    0.000 sets.py:2759(SetKind)
        3    0.000    0.000    0.000    0.000 orderings.py:156(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:89(__init__)
        1    0.000    0.000    0.000    0.000 hooks.py:92(BackwardHook)
        1    0.000    0.000    0.000    0.000 gui.py:24(tqdm_gui)
        1    0.000    0.000    0.000    0.000 linear.py:127(NonDynamicallyQuantizableLinear)
        1    0.000    0.000    0.000    0.000 cnf.py:109(AND)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:280(PngInfo)
        4    0.000    0.000    0.000    0.000 results.py:26(__init__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:577(PaddedBox)
        1    0.000    0.000    0.000    0.000 pooling.py:38(MaxPool1d)
        1    0.000    0.000    0.000    0.000 _interface.py:719(_ProductLinearOperator)
        1    0.000    0.000    0.000    0.000 line.py:2504(Line3D)
        1    0.000    0.000    0.000    0.000 utils.py:8(SequenceWrapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 error.py:24(StreamMark)
        1    0.000    0.000    0.000    0.000 parameters.py:7(_global_parameters)
        1    0.000    0.000    0.000    0.000 _decorator.py:148(runtime_validation_disabled)
        1    0.000    0.000    0.000    0.000 activation.py:361(SiLU)
        1    0.000    0.000    0.000    0.000 transforms.py:1137(SineCosineTypeTransform)
        1    0.000    0.000    0.000    0.000 fancysets.py:1493(Complexes)
        1    0.000    0.000    0.000    0.000 _functions.py:273(BackwardHookFunction)
        1    0.000    0.000    0.000    0.000 scale.py:91(LinearScale)
        1    0.000    0.000    0.000    0.000 process.py:364(_ParentProcess)
        1    0.000    0.000    0.000    0.000 category.py:163(UnitData)
        1    0.000    0.000    0.000    0.000 _vertex.py:179(VertexCacheBase)
        1    0.000    0.000    0.000    0.000 extras.py:213(_fromnxfunction)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:599(FloaterHormannInterpolator)
        1    0.000    0.000    0.000    0.000 context.py:283(SpawnProcess)
        1    0.000    0.000    0.000    0.000 boolalg.py:1137(Nor)
        1    0.000    0.000    0.000    0.000 _polyint.py:245(KroghInterpolator)
        1    0.000    0.000    0.000    0.000 line.py:1109(Line)
        1    0.000    0.000    0.000    0.000 constraints.py:515(_Cat)
        1    0.000    0.000    0.000    0.000 _functions.py:52(Gather)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:876(_PatchedFn)
        1    0.000    0.000    0.000    0.000 constraints.py:146(_DependentProperty)
        1    0.000    0.000    0.000    0.000 _rules.py:208(_FxPassConvertNegToSigmoid)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:706(stieltjes)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4829(gausshyper_gen)
        1    0.000    0.000    0.000    0.000 boolalg.py:1171(Xnor)
        1    0.000    0.000    0.000    0.000 _aliases.py:182(UniqueAllResult)
        1    0.000    0.000    0.000    0.000 mathtext.py:1994(Kern)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:251(RotationSpline)
        1    0.000    0.000    0.000    0.000 sparse.py:462(MutableSparseMatrix)
        1    0.000    0.000    0.000    0.000 calendar.py:573(LocaleTextCalendar)
        1    0.000    0.000    0.000    0.000 line.py:1872(LinearEntity2D)
        1    0.000    0.000    0.000    0.000 formal.py:1613(FormalPowerSeriesCompose)
        1    0.000    0.000    0.000    0.000 grad_mode.py:293(_unsafe_preserve_version_counter)
        1    0.000    0.000    0.000    0.000 abc.py:161(ResourceLoader)
        1    0.000    0.000    0.000    0.000 assume.py:174(PredicateMeta)
        1    0.000    0.000    0.000    0.000 transforms.py:865(SoftmaxTransform)
        1    0.000    0.000    0.000    0.000 request.py:1374(HTTPHandler)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:147(JvpInterpreter)
        1    0.000    0.000    0.000    0.000 numpy.py:481(<dictcomp>)
        1    0.000    0.000    0.000    0.000 traversal.py:68(preorder_traversal)
        1    0.000    0.000    0.000    0.000 _internal.py:205(dummy_ctype)
        1    0.000    0.000    0.000    0.000 {built-in method _thread.get_native_id}
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:224(QuotedString)
        1    0.000    0.000    0.000    0.000 laplace.py:1267(LaplaceTransform)
        1    0.000    0.000    0.000    0.000 _typing.py:52(JustComplex)
        1    0.000    0.000    0.000    0.000 conv.py:1538(LazyConvTranspose3d)
        1    0.000    0.000    0.000    0.000 scale.py:334(FuncScaleLog)
        1    0.000    0.000    0.000    0.000 _rules.py:346(_ArgFormatTooVerbose)
        1    0.000    0.000    0.000    0.000 _rules.py:254(_AtenlibSymbolicFunction)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:118(GradInterpreter)
        1    0.000    0.000    0.000    0.000 _arffread.py:655(MetaData)
        7    0.000    0.000    0.000    0.000 _pep440.py:446(<lambda>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:900(ShapeGuardPrinter)
        1    0.000    0.000    0.000    0.000 parameters.py:70(evaluate)
        1    0.000    0.000    0.000    0.000 legend.py:50(DraggableLegend)
        1    0.000    0.000    0.000    0.000 activation.py:650(GELU)
        1    0.000    0.000    0.000    0.000 blocking_input.py:271(BlockingContourLabeler)
        4    0.000    0.000    0.000    0.000 _pytree.py:8(register_pytree_flatten_spec)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:263(Comment)
        1    0.000    0.000    0.000    0.000 datapipe.py:326(_DataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 _czt.py:115(CZT)
        1    0.000    0.000    0.000    0.000 _parser.py:50(ParsedRequirement)
        5    0.000    0.000    0.000    0.000 _inspect.py:143(<lambda>)
        1    0.000    0.000    0.000    0.000 _util.py:1064(__getattr__)
        1    0.000    0.000    0.000    0.000 _nonlin.py:382(Jacobian)
        1    0.000    0.000    0.000    0.000 __init__.py:280(LogRecord)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1385(matrix_normal_frozen)
        1    0.000    0.000    0.000    0.000 abc.py:230(ExecutionLoader)
        1    0.000    0.000    0.000    0.000 core.py:957(NullCache)
        1    0.000    0.000    0.000    0.000 _constraints.py:227(Bounds)
        1    0.000    0.000    0.000    0.000 _interpolate.py:167(_do_extrapolate)
        1    0.000    0.000    0.000    0.000 threading.py:279(_is_owned)
        2    0.000    0.000    0.000    0.000 _adapters.py:16(__getattr__)
        1    0.000    0.000    0.000    0.000 _survival.py:469(LogRankResult)
        1    0.000    0.000    0.000    0.000 reinplace.py:53(_FunctionalizationMetadataProp)
        7    0.000    0.000    0.000    0.000 numeric.py:1389(_moveaxis_dispatcher)
        6    0.000    0.000    0.000    0.000 feedparser.py:125(__iter__)
        1    0.000    0.000    0.000    0.000 _package_pickler.py:21(PackagePickler)
        1    0.000    0.000    0.000    0.000 _functions.py:85(Scatter)
        1    0.000    0.000    0.000    0.000 conv.py:1333(LazyConv3d)
        4    0.000    0.000    0.000    0.000 function.py:613(_iter_filter)
        1    0.000    0.000    0.000    0.000 ImageFile.py:734(PyCodec)
        1    0.000    0.000    0.000    0.000 numpy.py:483(CuPyPrinter)
        1    0.000    0.000    0.000    0.000 _backend.py:412(Dispatchable)
        1    0.000    0.000    0.000    0.000 comments.py:643(CommentedMapView)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:1301(PrecisionManager)
        1    0.000    0.000    0.000    0.000 _base.py:74(_AsCompletedWaiter)
        1    0.000    0.000    0.000    0.000 codeprinter.py:18(requires)
        1    0.000    0.000    0.000    0.000 threading.py:1317(_make_invoke_excepthook)
        1    0.000    0.000    0.000    0.000 mathtext.py:888(DejaVuFonts)
        1    0.000    0.000    0.000    0.000 main.py:882(YAMLContextManager)
        1    0.000    0.000    0.000    0.000 rootoftools.py:38(_pure_key_dict)
        1    0.000    0.000    0.000    0.000 ticker.py:1816(IndexLocator)
        1    0.000    0.000    0.000    0.000 getopt.py:43(GetoptError)
        1    0.000    0.000    0.000    0.000 expand.py:53(StaticModule)
        1    0.000    0.000    0.000    0.000 core.py:5823(Combine)
        3    0.000    0.000    0.000    0.000 six.py:885(add_metaclass)
        1    0.000    0.000    0.000    0.000 split_module.py:11(Partition)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1251(__init__)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:155(BootstrapSobolResult)
        1    0.000    0.000    0.000    0.000 autograd_function.py:29(CustomFunctionPyOperator)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:885(MeijerFormula)
        1    0.000    0.000    0.000    0.000 _vertex.py:205(VertexCube)
        1    0.000    0.000    0.000    0.000 TiffTags.py:24(_TagInfo)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:94(_Bunch)
        1    0.000    0.000    0.000    0.000 modules.py:504(FreeModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:667(LaplaceTransformInversionMethods)
        1    0.000    0.000    0.000    0.000 stubs.py:4(QuantStub)
        1    0.000    0.000    0.000    0.000 pprint.py:80(_safe_key)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:91(set_detect_anomaly)
        1    0.000    0.000    0.000    0.000 ImageFile.py:866(PyEncoder)
        1    0.000    0.000    0.000    0.000 single.py:1436(HomogeneousCoeffSubsDepDivIndep)
        1    0.000    0.000    0.000    0.000 __init__.py:1239(<dictcomp>)
        1    0.000    0.000    0.000    0.000 report.py:28(BasicReport)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:869(SupportsBytes)
        1    0.000    0.000    0.000    0.000 patches.py:2001(Square)
        1    0.000    0.000    0.000    0.000 font_manager.py:338(FontEntry)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:485(_IntegerInterval)
        2    0.000    0.000    0.000    0.000 sysconfig.py:279(_get_preferred_schemes)
        1    0.000    0.000    0.000    0.000 pickle.py:263(_Unframer)
        1    0.000    0.000    0.000    0.000 dviread.py:607(Vf)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3562(special_ortho_group_gen)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:11(Token)
        1    0.000    0.000    0.000    0.000 polyoptions.py:611(Strict)
        1    0.000    0.000    0.000    0.000 graph.py:236(_InsertPoint)
        1    0.000    0.000    0.000    0.000 _pytree.py:41(NodeDef)
        1    0.000    0.000    0.000    0.000 conv_fused.py:495(ConvBn2d)
        1    0.000    0.000    0.000    0.000 engine.py:379(__init__)
        1    0.000    0.000    0.000    0.000 configparser.py:168(Error)
        1    0.000    0.000    0.000    0.000 numpy.py:35(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _arffread.py:232(StringAttribute)
        1    0.000    0.000    0.000    0.000 ops.py:156(<listcomp>)
        1    0.000    0.000    0.000    0.000 _datasource.py:74(_FileOpeners)
        1    0.000    0.000    0.000    0.000 _adapters.py:114(OrphanPath)
        1    0.000    0.000    0.000    0.000 _rules.py:277(_AtenlibFxToOnnx)
        1    0.000    0.000    0.000    0.000 pkgutil.py:194(ImpImporter)
        1    0.000    0.000    0.000    0.000 python.py:67(Lit)
        1    0.000    0.000    0.000    0.000 combining.py:496(MultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:91(AppliedFunction)
        1    0.000    0.000    0.000    0.000 analyzer.py:1751(PointGroupOperations)
        2    0.000    0.000    0.000    0.000 __init__.py:983(setFormatter)
        1    0.000    0.000    0.000    0.000 pooling.py:1121(_AdaptiveAvgPoolNd)
        1    0.000    0.000    0.000    0.000 loss.py:1226(CosineEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 pathlib.py:422(_PathParents)
        1    0.000    0.000    0.000    0.000 loss.py:17(_Loss)
        2    0.000    0.000    0.000    0.000 {built-in method maketrans}
        1    0.000    0.000    0.000    0.000 timestamp.py:16(TimeStamp)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:18(ParserSyntaxError)
        1    0.000    0.000    0.000    0.000 emitter.py:57(Indents)
        1    0.000    0.000    0.000    0.000 loss.py:380(KLDivLoss)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__getattr__)
        1    0.000    0.000    0.000    0.000 _upfirdn.py:73(_UpFIRDn)
        1    0.000    0.000    0.000    0.000 grouping.py:89(UnBatcherIterDataPipe)
        2    0.000    0.000    0.000    0.000 __init__.py:24(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:58(cuFFTPlanCacheManager)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:5(ReorderError)
        1    0.000    0.000    0.000    0.000 request.py:1474(FileHandler)
        1    0.000    0.000    0.000    0.000 swa_utils.py:13(AveragedModel)
        1    0.000    0.000    0.000    0.000 profiler.py:552(emit_itt)
        1    0.000    0.000    0.000    0.000 index_tricks.py:109(nd_grid)
        1    0.000    0.000    0.000    0.000 inputs.py:1919(Orbital)
        2    0.000    0.000    0.000    0.000 glob.py:229(_ishidden)
        1    0.000    0.000    0.000    0.000 grad_mode.py:164(inference_mode)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:556(DisplayName)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:122(__bool__)
        1    0.000    0.000    0.000    0.000 core.py:194(<listcomp>)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:367(errstate)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2500(TypeVarTuple)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1740(ParamSpec)
        1    0.000    0.000    0.000    0.000 geo.py:17(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 _minimize.py:1050(_Patch_Callback_Equal_Variables)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:230(__init__)
        1    0.000    0.000    0.000    0.000 single.py:1748(LinearCoefficients)
        1    0.000    0.000    0.000    0.000 core.py:4381(MatchFirst)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5689(random_table_frozen)
        1    0.000    0.000    0.000    0.000 single.py:572(FirstLinear)
        1    0.000    0.000    0.000    0.000 _monitor.py:15(TMonitor)
        1    0.000    0.000    0.000    0.000 readers.py:15(FileReader)
        1    0.000    0.000    0.000    0.000 activation.py:568(SELU)
        1    0.000    0.000    0.000    0.000 string.py:54(Stringify)
        5    0.000    0.000    0.000    0.000 multiarray.py:85(empty_like)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3505(multinomial_frozen)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:228(IntervalPrinter)
        1    0.000    0.000    0.000    0.000 scale.py:126(FuncTransform)
        1    0.000    0.000    0.000    0.000 expand.py:422(LazyMappingProxy)
        1    0.000    0.000    0.000    0.000 __init__.py:10(NBitBase)
        1    0.000    0.000    0.000    0.000 context.py:203(reducer)
        1    0.000    0.000    0.000    0.000 facts.py:301(rules_alpha)
        1    0.000    0.000    0.000    0.000 worker.py:51(ManagerWatchdog)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_256}
        1    0.000    0.000    0.000    0.000 dev.py:147(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:2654(TransformedPath)
        1    0.000    0.000    0.000    0.000 parser.py:16(Parser)
        1    0.000    0.000    0.000    0.000 __init__.py:1323(disable)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5288(multivariate_hypergeom_frozen)
        1    0.000    0.000    0.000    0.000 _recursive.py:358(__init__)
        1    0.000    0.000    0.000    0.000 widgets.py:1621(SpanSelector)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3563(Show)
        1    0.000    0.000    0.000    0.000 rcsetup.py:50(ValidateInStrings)
        1    0.000    0.000    0.000    0.000 transports.py:46(ReadTransport)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:138(MutableSparseNDimArray)
        2    0.000    0.000    0.000    0.000 __init__.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 util.py:19(LazyEval)
        1    0.000    0.000    0.000    0.000 _ops.py:594(_Ops)
        1    0.000    0.000    0.000    0.000 index_tricks.py:303(__init__)
        1    0.000    0.000    0.000    0.000 index_tricks.py:211(MGridClass)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6223(dirichlet_multinomial_frozen)
        1    0.000    0.000    0.000    0.000 orderings.py:137(InverseOrder)
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:39(LagrangianHessian)
        1    0.000    0.000    0.000    0.000 unix_events.py:980(BaseChildWatcher)
        1    0.000    0.000    0.000    0.000 numpy.py:504(<dictcomp>)
        1    0.000    0.000    0.000    0.000 arrayprint.py:905(FloatingFormat)
        1    0.000    0.000    0.000    0.000 readers.py:31(ZipReader)
        1    0.000    0.000    0.000    0.000 tasks.py:689(_GatheringFuture)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:186(LambdaLR)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:760(LinearVectorFunction)
        1    0.000    0.000    0.000    0.000 dbapi2.py:49(<listcomp>)
        1    0.000    0.000    0.000    0.000 threading.py:410(Semaphore)
        1    0.000    0.000    0.000    0.000 art3d.py:441(Path3DCollection)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:2011(nchypergeom_wallenius_gen)
        1    0.000    0.000    0.000    0.000 compat.py:112(Nprint)
        1    0.000    0.000    0.000    0.000 core.py:943(_CacheType)
        1    0.000    0.000    0.000    0.000 pythonfinitefield.py:9(PythonFiniteField)
        1    0.000    0.000    0.000    0.000 polyoptions.py:527(Gaussian)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:24(Iterator)
        1    0.000    0.000    0.000    0.000 _spdx.py:6(SPDXLicense)
        1    0.000    0.000    0.000    0.000 queue.py:223(PriorityQueue)
        1    0.000    0.000    0.000    0.000 activation.py:849(Softshrink)
        1    0.000    0.000    0.000    0.000 parameter.py:165(UninitializedParameter)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:67(GradientFile)
        7    0.000    0.000    0.000    0.000 due.py:31(non_decorating_decorator)
        1    0.000    0.000    0.000    0.000 _collections.py:5(FreezableDefaultDict)
        1    0.000    0.000    0.000    0.000 pathlib.py:792(is_absolute)
        1    0.000    0.000    0.000    0.000 facts.py:286(__init__)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:234(MatlabObject)
        1    0.000    0.000    0.000    0.000 proxy.py:22(Scope)
        4    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        1    0.000    0.000    0.000    0.000 widgets.py:133(Button)
        1    0.000    0.000    0.000    0.000 lines.py:1440(VertexSelector)
        1    0.000    0.000    0.000    0.000 arpack.py:274(ArpackError)
        1    0.000    0.000    0.000    0.000 _constraints.py:21(NonlinearConstraint)
        1    0.000    0.000    0.000    0.000 __init__.py:323(device_of)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:634(DomainLiteral)
        1    0.000    0.000    0.000    0.000 comments.py:1136(TaggedScalar)
        1    0.000    0.000    0.000    0.000 transforms.py:331(MellinTransform)
        2    0.000    0.000    0.000    0.000 constraints.py:290(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:8(__init__)
        1    0.000    0.000    0.000    0.000 comments.py:204(Format)
        1    0.000    0.000    0.000    0.000 __init__.py:46(PackageNotFoundError)
        1    0.000    0.000    0.000    0.000 error.py:52(StringMark)
        1    0.000    0.000    0.000    0.000 visualization.py:9(VisualizationMethods)
        1    0.000    0.000    0.000    0.000 dtypes.py:1(<module>)
        4    0.000    0.000    0.000    0.000 bessel.py:385(c_memo)
        1    0.000    0.000    0.000    0.000 text.py:6(TextBackend)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:113(OneHotCategoricalStraightThrough)
        1    0.000    0.000    0.000    0.000 selectors.py:60(_SelectorMapping)
        1    0.000    0.000    0.000    0.000 storage.py:972(_LegacyStorageMeta)
        1    0.000    0.000    0.000    0.000 _convertions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_256}
        1    0.000    0.000    0.000    0.000 _pep440.py:135(_BaseVersion)
        1    0.000    0.000    0.000    0.000 _interpolate.py:125(interp2d)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:61(ThroughputBenchmark)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:658(InterpolatedUnivariateSpline)
        1    0.000    0.000    0.000    0.000 package_exporter.py:128(PackagingError)
        1    0.000    0.000    0.000    0.000 gmpyfinitefield.py:9(GMPYFiniteField)
        1    0.000    0.000    0.000    0.000 constraints.py:384(__init__)
        1    0.000    0.000    0.000    0.000 grad_mode.py:226(set_multithreading_enabled)
        1    0.000    0.000    0.000    0.000 __init__.py:86(_StrongRef)
        1    0.000    0.000    0.000    0.000 _linalg.py:33(EighResult)
        1    0.000    0.000    0.000    0.000 _nonlin.py:318(TerminationCondition)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:64(DynamicOutputShapeException)
        1    0.000    0.000    0.000    0.000 kl.py:80(_Match)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:443(_RealInterval)
        1    0.000    0.000    0.000    0.000 fancysets.py:139(Naturals0)
        1    0.000    0.000    0.000    0.000 polyoptions.py:50(BooleanOption)
        1    0.000    0.000    0.000    0.000 dir_util.py:23(__init__)
        1    0.000    0.000    0.000    0.000 _interface.py:639(_AdjointLinearOperator)
        1    0.000    0.000    0.000    0.000 _typing.py:118(DTypesSigned)
        1    0.000    0.000    0.000    0.000 jiterator.py:42(_JittedFunction)
        1    0.000    0.000    0.000    0.000 activation.py:691(Hardshrink)
        1    0.000    0.000    0.000    0.000 actions.py:19(OnlyOnce)
        1    0.000    0.000    0.000    0.000 series.py:1800(SurfaceBaseSeries)
        1    0.000    0.000    0.000    0.000 modules.py:1746(ModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 widgets.py:1303(MultiCursor)
        2    0.000    0.000    0.000    0.000 rl.py:10(rm_id)
        1    0.000    0.000    0.000    0.000 transforms.py:611(SoftplusTransform)
        1    0.000    0.000    0.000    0.000 mathtext.py:932(DejaVuSerifFonts)
        1    0.000    0.000    0.000    0.000 __init__.py:2213(NullHandler)
        1    0.000    0.000    0.000    0.000 polar.py:202(_AxisWrapper)
        1    0.000    0.000    0.000    0.000 single.py:976(RationalRiccati)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CudaError)
        1    0.000    0.000    0.000    0.000 docinfo.py:95(Tag)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:425(SR1)
        1    0.000    0.000    0.000    0.000 csv.py:130(DictWriter)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:4(InverseLaplaceTransform)
        6    0.000    0.000    0.000    0.000 signal.py:48(_wraps)
        1    0.000    0.000    0.000    0.000 gridspec.py:545(GridSpecFromSubplotSpec)
        1    0.000    0.000    0.000    0.000 core.py:2679(CloseMatch)
        1    0.000    0.000    0.000    0.000 ops.py:294(IndexableIter)
        1    0.000    0.000    0.000    0.000 case.py:1446(_SubTest)
        1    0.000    0.000    0.000    0.000 sdm.py:1447(unop_dict)
        1    0.000    0.000    0.000    0.000 conv.py:154(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:30(_get_logging_handler)
        1    0.000    0.000    0.000    0.000 rrule.py:1315(_genitem)
        1    0.000    0.000    0.000    0.000 argparse.py:109(_AttributeHolder)
        1    0.000    0.000    0.000    0.000 discovery.py:68(_Filter)
        1    0.000    0.000    0.000    0.000 rrule.py:66(weekday)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:196(AdaptiveStepsize)
        1    0.000    0.000    0.000    0.000 unicode.py:8(_lazyclassproperty)
        1    0.000    0.000    0.000    0.000 zipfile.py:1995(PyZipFile)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3705(ortho_group_gen)
        1    0.000    0.000    0.000    0.000 collections.py:1296(StarPolygonCollection)
        1    0.000    0.000    0.000    0.000 __init__.py:1237(_StderrHandler)
        1    0.000    0.000    0.000    0.000 transforms.py:986(FourierTransform)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:363(_broadcast_to_dispatcher)
        1    0.000    0.000    0.000    0.000 legend_handler.py:338(HandlerRegularPolyCollection)
        4    0.000    0.000    0.000    0.000 _inspect.py:142(<lambda>)
        1    0.000    0.000    0.000    0.000 bessel.py:901(SphericalBesselBase)
        1    0.000    0.000    0.000    0.000 bessel.py:800(hankel1)
        1    0.000    0.000    0.000    0.000 tensor.py:4666(WildTensor)
        1    0.000    0.000    0.000    0.000 geo.py:229(_GeoTransform)
        1    0.000    0.000    0.000    0.000 _spdx.py:10(SPDXException)
        1    0.000    0.000    0.000    0.000 core.py:3473(CharsNotIn)
        1    0.000    0.000    0.000    0.000 _base.py:6(Rule)
        2    0.000    0.000    0.000    0.000 {function DecompressReader.close at 0x14f1d3de93a0}
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:493(Domain)
        1    0.000    0.000    0.000    0.000 core.py:5(Registry)
        1    0.000    0.000    0.000    0.000 _state.py:12(EnabledProxy)
        1    0.000    0.000    0.000    0.000 transforms.py:1165(SineTransform)
        1    0.000    0.000    0.000    0.000 widgets.py:1209(Cursor)
        1    0.000    0.000    0.000    0.000 _constraints.py:309(PreparedConstraint)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:115(orthopoly1d)
        1    0.000    0.000    0.000    0.000 parse.py:795(_Quoter)
        1    0.000    0.000    0.000    0.000 case.py:282(_AssertWarnsContext)
        1    0.000    0.000    0.000    0.000 constraint_registry.py:79(ConstraintRegistry)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1274(_TypedDictSpecialForm)
        1    0.000    0.000    0.000    0.000 overrides.py:1872(enable_reentrant_dispatch)
        1    0.000    0.000    0.000    0.000 backend_tools.py:736(ZoomPanBase)
        1    0.000    0.000    0.000    0.000 mathtext.py:321(MathtextBackendPath)
        1    0.000    0.000    0.000    0.000 hyper.py:29(TupleArg)
        1    0.000    0.000    0.000    0.000 widgets.py:517(CheckButtons)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4127(unitary_group_gen)
        1    0.000    0.000    0.000    0.000 six.py:129(_LazyModule)
        1    0.000    0.000    0.000    0.000 single.py:1046(SecondNonlinearAutonomousConserved)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._set_promotion_state}
        1    0.000    0.000    0.000    0.000 _nonlin.py:1289(ExcitingMixing)
        1    0.000    0.000    0.000    0.000 mul.py:25(NC_Marker)
        1    0.000    0.000    0.000    0.000 conv.py:342(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 fetch.py:18(_IterableDatasetFetcher)
        1    0.000    0.000    0.000    0.000 _musllinux.py:18(_MuslVersion)
        1    0.000    0.000    0.000    0.000 conv.py:281(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1213(_RangeFunc)
        1    0.000    0.000    0.000    0.000 transforms.py:964(FourierTypeTransform)
        1    0.000    0.000    0.000    0.000 bessel.py:2149(_besseli)
        1    0.000    0.000    0.000    0.000 _hypotests.py:917(BarnardExactResult)
        1    0.000    0.000    0.000    0.000 locks.py:421(BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 request.py:605(BaseHandler)
        1    0.000    0.000    0.000    0.000 base.py:274(ConstantDenseOutput)
        1    0.000    0.000    0.000    0.000 variable.py:13(Variable)
        1    0.000    0.000    0.000    0.000 argparse.py:1638(_ArgumentGroup)
        1    0.000    0.000    0.000    0.000 bessel.py:2180(_besselk)
        1    0.000    0.000    0.000    0.000 quadrature.py:459(QuadratureMethods)
        1    0.000    0.000    0.000    0.000 exceptions.py:29(IncompleteReadError)
        1    0.000    0.000    0.000    0.000 pydoc.py:1127(TextRepr)
        1    0.000    0.000    0.000    0.000 argparse.py:878(BooleanOptionalAction)
        1    0.000    0.000    0.000    0.000 splitter_base.py:186(Subgraph)
        1    0.000    0.000    0.000    0.000 trifinder.py:24(TrapezoidMapTriFinder)
        1    0.000    0.000    0.000    0.000 activation.py:244(ReLU6)
        1    0.000    0.000    0.000    0.000 memory.py:673(_CUDAAllocator)
        1    0.000    0.000    0.000    0.000 dev.py:125(requires)
        1    0.000    0.000    0.000    0.000 gzip.py:99(prepend)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1304(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 _base.py:59(_Waiter)
        1    0.000    0.000    0.000    0.000 discovery.py:179(PEP420PackageFinder)
        1    0.000    0.000    0.000    0.000 animation.py:1384(TimedAnimation)
        1    0.000    0.000    0.000    0.000 _numdiff.py:863(_Fun_Wrapper)
        1    0.000    0.000    0.000    0.000 events.py:76(CollectionStartEvent)
        1    0.000    0.000    0.000    0.000 serialization.py:250(_open_file)
        1    0.000    0.000    0.000    0.000 hb.py:376(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _hypotests.py:356(CramerVonMisesResult)
        1    0.000    0.000    0.000    0.000 polyutils.py:444(PicklableWithSlots)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3305(_moment_standardized_formula)
        1    0.000    0.000    0.000    0.000 polyutils.py:187(<listcomp>)
        1    0.000    0.000    0.000    0.000 art3d.py:324(PathPatch3D)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1188(BoschlooExactResult)
        1    0.000    0.000    0.000    0.000 _base.py:111(_AllCompletedWaiter)
        2    0.000    0.000    0.000    0.000 core.py:47(condition)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:268(_reduce_op)
        1    0.000    0.000    0.000    0.000 core.py:3782(WordStart)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:416(F)
        1    0.000    0.000    0.000    0.000 category.py:113(StrCategoryLocator)
        2    0.000    0.000    0.000    0.000 rootoftools.py:83(__init__)
        2    0.000    0.000    0.000    0.000 gzip.py:323(closed)
        1    0.000    0.000    0.000    0.000 recipes.py:336(UnequalIterablesError)
        1    0.000    0.000    0.000    0.000 spawn.py:25(ProcessRaisedException)
        1    0.000    0.000    0.000    0.000 _vertex.py:222(VertexCacheIndex)
        1    0.000    0.000    0.000    0.000 _classes.py:6(_ClassNamespace)
        1    0.000    0.000    0.000    0.000 widgets.py:948(RadioButtons)
        1    0.000    0.000    0.000    0.000 conv_fused.py:627(ConvBn3d)
        1    0.000    0.000    0.000    0.000 six.py:178(__init__)
        1    0.000    0.000    0.000    0.000 runner.py:14(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 _exceptions.py:38(_UFuncNoLoopError)
        1    0.000    0.000    0.000    0.000 bdf.py:456(BdfDenseOutput)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._reload_guard}
        1    0.000    0.000    0.000    0.000 colors.py:1367(PowerNorm)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:289(AddressList)
        1    0.000    0.000    0.000    0.000 diophantine.py:224(Univariate)
        1    0.000    0.000    0.000    0.000 __init__.py:711(BufferingFormatter)
        1    0.000    0.000    0.000    0.000 rootoftools.py:152(RootOf)
        1    0.000    0.000    0.000    0.000 _static.py:9(Static)
        1    0.000    0.000    0.000    0.000 orderings.py:35(LexOrder)
        1    0.000    0.000    0.000    0.000 container.py:31(Container)
        1    0.000    0.000    0.000    0.000 colors.py:1418(BoundaryNorm)
        1    0.000    0.000    0.000    0.000 _interface.py:832(_AdjointMatrixOperator)
        1    0.000    0.000    0.000    0.000 polyutils.py:516(IntegerPowerable)
        1    0.000    0.000    0.000    0.000 PaletteFile.py:22(PaletteFile)
        1    0.000    0.000    0.000    0.000 utils.py:102(FormatReplace)
        1    0.000    0.000    0.000    0.000 linear.py:5(Linear)
        1    0.000    0.000    0.000    0.000 request.py:624(HTTPErrorProcessor)
        1    0.000    0.000    0.000    0.000 _aliases.py:189(UniqueCountsResult)
        1    0.000    0.000    0.000    0.000 bessel.py:1347(AiryBase)
        1    0.000    0.000    0.000    0.000 polar.py:515(RadialTick)
        1    0.000    0.000    0.000    0.000 _factories.py:8(_TzSingleton)
        1    0.000    0.000    0.000    0.000 std.py:40(TqdmWarning)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:345(<genexpr>)
        1    0.000    0.000    0.000    0.000 _manylinux.py:80(_GLibCVersion)
        1    0.000    0.000    0.000    0.000 _ltisys.py:737(TransferFunctionContinuous)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4330(_shift_scale_distribution_function_2arg)
        1    0.000    0.000    0.000    0.000 csv.py:54(excel)
        1    0.000    0.000    0.000    0.000 inference.py:273(PropKB)
        1    0.000    0.000    0.000    0.000 __init__.py:156(py_object)
        1    0.000    0.000    0.000    0.000 _interface.py:781(_PowerLinearOperator)
        1    0.000    0.000    0.000    0.000 _optimize.py:3934(_Brute_Wrapper)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:171(GaussianInteger)
        1    0.000    0.000    0.000    0.000 series.py:2122(GenericDataSeries)
        1    0.000    0.000    0.000    0.000 loss.py:1279(MarginRankingLoss)
        1    0.000    0.000    0.000    0.000 __init__.py:790(Filterer)
        1    0.000    0.000    0.000    0.000 _multivariate.py:7252(normal_inverse_gamma_frozen)
        1    0.000    0.000    0.000    0.000 context.py:233(__init__)
        1    0.000    0.000    0.000    0.000 exceptions.py:26(DuplicateEditVariable)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:182(WhiteSpaceTokenList)
        1    0.000    0.000    0.000    0.000 deprecation.py:101(_DeprecationHelperStr)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1336(CosineAnnealingWarmRestarts)
        1    0.000    0.000    0.000    0.000 forward_ad.py:190(_set_fwd_grad_enabled)
        1    0.000    0.000    0.000    0.000 _compression.py:63(seekable)
        2    0.000    0.000    0.000    0.000 _onenormest.py:121(_blocked_elementwise)
        1    0.000    0.000    0.000    0.000 arrayop.py:458(Flatten)
        1    0.000    0.000    0.000    0.000 offsetbox.py:417(VPacker)
        1    0.000    0.000    0.000    0.000 core.py:2627(CaselessLiteral)
        1    0.000    0.000    0.000    0.000 _linalg.py:45(SVDResult)
        1    0.000    0.000    0.000    0.000 mock.py:2473(__init__)
        1    0.000    0.000    0.000    0.000 decoder.py:20(JSONDecodeError)
        1    0.000    0.000    0.000    0.000 tarfile.py:570(_StreamProxy)
        1    0.000    0.000    0.000    0.000 diophantine.py:676(InhomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 polyoptions.py:728(Method)
        1    0.000    0.000    0.000    0.000 profiler_util.py:534(FunctionEventAvg)
        1    0.000    0.000    0.000    0.000 backend_tools.py:366(RubberbandBase)
        1    0.000    0.000    0.000    0.000 Lattice.py:7(lattice)
        1    0.000    0.000    0.000    0.000 stubs.py:21(DeQuantStub)
        1    0.000    0.000    0.000    0.000 request.py:1398(HTTPCookieProcessor)
        1    0.000    0.000    0.000    0.000 module.py:27(_IncompatibleKeys)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:49(IncrementRecursionCount)
        1    0.000    0.000    0.000    0.000 zipfile.py:618(LZMACompressor)
        1    0.000    0.000    0.000    0.000 transforms.py:1224(InverseSineTransform)
        1    0.000    0.000    0.000    0.000 _recursive.py:123(SourceContext)
        1    0.000    0.000    0.000    0.000 backend_tools.py:487(AxisScaleBase)
        1    0.000    0.000    0.000    0.000 polyerrors.py:13(ExactQuotientFailed)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11078(_SimpleStudentT)
        1    0.000    0.000    0.000    0.000 abc.py:276(SourceLoader)
        1    0.000    0.000    0.000    0.000 _parser.py:1589(ParserError)
        1    0.000    0.000    0.000    0.000 pooling.py:97(MaxPool2d)
        1    0.000    0.000    0.000    0.000 _cubic.py:72(CubicHermiteSpline)
        1    0.000    0.000    0.000    0.000 kind.py:84(_UndefinedKind)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_128}
        1    0.000    0.000    0.000    0.000 permutations.py:3067(AppliedPermutation)
        1    0.000    0.000    0.000    0.000 animation.py:1521(FuncAnimation)
        1    0.000    0.000    0.000    0.000 __init__.py:9(verbose)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:1330(P2POp)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:820(IdentityVectorFunction)
        1    0.000    0.000    0.000    0.000 __init__.py:1152(FileHandler)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1454(LSQBivariateSpline)
        1    0.000    0.000    0.000    0.000 transforms.py:1284(CosineTransform)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:308(Address)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:224(FortranFormatParser)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_384}
        1    0.000    0.000    0.000    0.000 pathlib.py:49(_Flavour)
        1    0.000    0.000    0.000    0.000 _shgo.py:1538(LMapCache)
        1    0.000    0.000    0.000    0.000 doccer.py:23(Decorator)
        1    0.000    0.000    0.000    0.000 _adapters.py:7(SpecLoaderAdapter)
        1    0.000    0.000    0.000    0.000 comments.py:50(IDX)
        1    0.000    0.000    0.000    0.000 _endian.py:23(_swapped_meta)
        1    0.000    0.000    0.000    0.000 dotproduct.py:6(DotProduct)
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getCompiledVersion}
        1    0.000    0.000    0.000    0.000 Orbit_spd_manager.py:11(orbit_spd_manager)
        1    0.000    0.000    0.000    0.000 single.py:2787(SecondLinearAiry)
        1    0.000    0.000    0.000    0.000 __init__.py:115(<dictcomp>)
        1    0.000    0.000    0.000    0.000 scale.py:162(FuncScale)
        2    0.000    0.000    0.000    0.000 core.py:3433(shape)
        1    0.000    0.000    0.000    0.000 __init__.py:7(is_built)
        1    0.000    0.000    0.000    0.000 core.py:2483(Empty)
        1    0.000    0.000    0.000    0.000 structures.py:7(DataChunkDF)
        1    0.000    0.000    0.000    0.000 bessel.py:846(hankel2)
        1    0.000    0.000    0.000    0.000 containers.py:379(TupleKind)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:48(ProxyableClassMeta)
        1    0.000    0.000    0.000    0.000 activation.py:402(Mish)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1459(OneCycleLR)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:384(LocalSearchWrapper)
        1    0.000    0.000    0.000    0.000 _array_api.py:585(<setcomp>)
        1    0.000    0.000    0.000    0.000 optimization.py:15(Newton)
        1    0.000    0.000    0.000    0.000 py3k.py:92(contextlib_nullcontext)
        1    0.000    0.000    0.000    0.000 transforms.py:40(IntegralTransformError)
        1    0.000    0.000    0.000    0.000 response.py:37(addclosehook)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:112(Bytes)
        1    0.000    0.000    0.000    0.000 kind.py:106(_NumberKind)
        1    0.000    0.000    0.000    0.000 dataset.py:36(Dataset)
        1    0.000    0.000    0.000    0.000 _sources.py:86(SourceContext)
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:1851(_ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 qs.py:9(SievePolynomial)
        1    0.000    0.000    0.000    0.000 ssl.py:170(_TLSContentType)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:364(Group)
        1    0.000    0.000    0.000    0.000 qconfig.py:79(QConfig)
        1    0.000    0.000    0.000    0.000 __init__.py:28(_QEngineProp)
        1    0.000    0.000    0.000    0.000 scale.py:246(InvertedLogTransform)
        1    0.000    0.000    0.000    0.000 _morestats.py:1203(_BigFloat)
        1    0.000    0.000    0.000    0.000 _util.py:571(_ScalarFunctionWrapper)
        1    0.000    0.000    0.000    0.000 _testutils.py:56(PytestTester)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:598(LocalPart)
        1    0.000    0.000    0.000    0.000 test.py:52(<listcomp>)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:59(UnsupportedFakeTensorException)
        1    0.000    0.000    0.000    0.000 parse.py:182(_NetlocResultMixinStr)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:376(_RewindState)
        1    0.000    0.000    0.000    0.000 single.py:2192(NthLinearConstantCoeffVariationOfParameters)
        1    0.000    0.000    0.000    0.000 parser.py:126(BytesHeaderParser)
        1    0.000    0.000    0.000    0.000 band_data_in.py:25(check)
        1    0.000    0.000    0.000    0.000 feedparser.py:532(BytesFeedParser)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1090(BroadcastingListCls)
        1    0.000    0.000    0.000    0.000 core.py:2403(Token)
        1    0.000    0.000    0.000    0.000 report.py:36(SQPReport)
        1    0.000    0.000    0.000    0.000 _util.py:559(_FunctionWrapper)
        1    0.000    0.000    0.000    0.000 cache.py:5(_cache)
        1    0.000    0.000    0.000    0.000 index_tricks.py:569(ndenumerate)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1328(_DerivedBivariateSpline)
        1    0.000    0.000    0.000    0.000 core.py:903(_MaskedUnaryOperation)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:16(_ScalarGradWrapper)
        1    0.000    0.000    0.000    0.000 _linalg.py:37(QRResult)
        2    0.000    0.000    0.000    0.000 calendar.py:76(__init__)
        1    0.000    0.000    0.000    0.000 arpack.py:315(_ArpackParams)
        1    0.000    0.000    0.000    0.000 codeprinter.py:31(AssignmentError)
        1    0.000    0.000    0.000    0.000 pooling.py:893(LPPool1d)
        1    0.000    0.000    0.000    0.000 legend_handler.py:132(HandlerNpoints)
        1    0.000    0.000    0.000    0.000 __init__.py:522(maxdict)
        1    0.000    0.000    0.000    0.000 tokens.py:312(TagToken)
        1    0.000    0.000    0.000    0.000 _base.py:96(_FirstCompletedWaiter)
        1    0.000    0.000    0.000    0.000 __init__.py:21(cuFFTPlanCacheAttrContextProp)
        1    0.000    0.000    0.000    0.000 widgets.py:2368(LassoSelector)
        1    0.000    0.000    0.000    0.000 arpack.py:606(_UnsymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 zipfile.py:742(_SharedFile)
        1    0.000    0.000    0.000    0.000 single.py:912(RiccatiSpecial)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:424(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 series.py:28(IntervalMathPrinter)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:797(is_package)
        1    0.000    0.000    0.000    0.000 _basic.py:2819(_range_prod)
        1    0.000    0.000    0.000    0.000 exceptions.py:98(AxisError)
        1    0.000    0.000    0.000    0.000 mock.py:2140(MagicProxy)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:620(<lambda>)
        1    0.000    0.000    0.000    0.000 errors.py:45(UnsupportedOperatorError)
        1    0.000    0.000    0.000    0.000 arpack.py:389(_SymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 dates.py:846(AutoDateFormatter)
        1    0.000    0.000    0.000    0.000 expr.py:4076(UnevaluatedExpr)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_512}
        1    0.000    0.000    0.000    0.000 parameter.py:6(_ParameterMeta)
        4    0.000    0.000    0.000    0.000 shape_base.py:19(_atleast_1d_dispatcher)
        1    0.000    0.000    0.000    0.000 loss.py:931(HuberLoss)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:33(mpnumeric)
        1    0.000    0.000    0.000    0.000 combining.py:62(ForkerIterDataPipe)
        1    0.000    0.000    0.000    0.000 _policybase.py:41(__init__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1374(MouseEvent)
        1    0.000    0.000    0.000    0.000 more.py:3250(time_limited)
        1    0.000    0.000    0.000    0.000 transforms.py:1343(InverseCosineTransform)
        1    0.000    0.000    0.000    0.000 Image.py:3228(SupportsArrayInterface)
        1    0.000    0.000    0.000    0.000 pooling.py:171(MaxPool3d)
        1    0.000    0.000    0.000    0.000 series.py:2104(ContourSeries)
        1    0.000    0.000    0.000    0.000 parse.py:315(DefragResult)
        1    0.000    0.000    0.000    0.000 scale.py:372(SymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 util.py:127(LRUMemo)
        1    0.000    0.000    0.000    0.000 core.py:2654(CaselessKeyword)
        5    0.000    0.000    0.000    0.000 libmpf.py:49(<lambda>)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:176(FunctionalizeInterpreter)
        1    0.000    0.000    0.000    0.000 threading.py:1001(_set_ident)
        1    0.000    0.000    0.000    0.000 _minimize.py:1066(_Remove_From_Func)
        1    0.000    0.000    0.000    0.000 utilities.py:7(DotProdSimpState)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:46(PytestTester)
        1    0.000    0.000    0.000    0.000 core.py:5880(Group)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1019(Anderson)
        1    0.000    0.000    0.000    0.000 parser.py:71(HeaderParser)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:212(StrategyChain)
        1    0.000    0.000    0.000    0.000 locks.py:13(_ContextManagerMixin)
        1    0.000    0.000    0.000    0.000 __init__.py:13(verbose)
        1    0.000    0.000    0.000    0.000 unicode.py:135(BasicMultilingualPlane)
        1    0.000    0.000    0.000    0.000 proxy.py:304(GraphAppendingTracer)
        1    0.000    0.000    0.000    0.000 _interface.py:660(_TransposedLinearOperator)
        1    0.000    0.000    0.000    0.000 transforms.py:670(AbsTransform)
        1    0.000    0.000    0.000    0.000 {built-in method posix.cpu_count}
        1    0.000    0.000    0.000    0.000 typing_extensions.py:960(NoDefaultType)
        1    0.000    0.000    0.000    0.000 util.py:185(_GroupConsecutive)
        3    0.000    0.000    0.000    0.000 core.py:16(exhaust)
        1    0.000    0.000    0.000    0.000 grad_mode.py:61(enable_grad)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__init__)
        2    0.000    0.000    0.000    0.000 {method 'removesuffix' of 'str' objects}
        1    0.000    0.000    0.000    0.000 para4band.py:72(Eigen_Trans)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:69(DataDependentOutputException)
        1    0.000    0.000    0.000    0.000 dates.py:621(IndexDateFormatter)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:69(_override_ufunc_default_kwargs)
        1    0.000    0.000    0.000    0.000 ndim_array.py:591(ImmutableNDimArray)
        2    0.000    0.000    0.000    0.000 libmpf.py:692(mpf_sign)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:35(RootResults)
        1    0.000    0.000    0.000    0.000 boolalg.py:368(__hash__)
        1    0.000    0.000    0.000    0.000 _typing.py:340(_IterDataPipeMeta)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6860(vonmises_fisher_frozen)
        1    0.000    0.000    0.000    0.000 argparse.py:1097(_HelpAction)
        1    0.000    0.000    0.000    0.000 activation.py:438(Hardswish)
        1    0.000    0.000    0.000    0.000 pickletools.py:174(ArgumentDescriptor)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.get_frozen_object}
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:26(HessianLinearOperator)
        1    0.000    0.000    0.000    0.000 request.py:1383(HTTPSHandler)
        1    0.000    0.000    0.000    0.000 mock.py:2388(_ANY)
        1    0.000    0.000    0.000    0.000 std.py:214(EMA)
        1    0.000    0.000    0.000    0.000 patches.py:2252(Sawtooth)
        1    0.000    0.000    0.000    0.000 single.py:1685(HomogeneousCoeffBest)
        1    0.000    0.000    0.000    0.000 _miobase.py:337(MatVarReader)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:3(Hamiltonian)
        1    0.000    0.000    0.000    0.000 argparse.py:1680(_MutuallyExclusiveGroup)
        1    0.000    0.000    0.000    0.000 widgets.py:2298(EllipseSelector)
        1    0.000    0.000    0.000    0.000 six.py:91(_LazyDescr)
        1    0.000    0.000    0.000    0.000 __init__.py:576(_StreamProxy)
        1    0.000    0.000    0.000    0.000 profiler.py:745(EnforceUnique)
        1    0.000    0.000    0.000    0.000 core.py:6844(_frommethod)
        1    0.000    0.000    0.000    0.000 Manager.py:1(manager)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1242(_T)
        1    0.000    0.000    0.000    0.000 __init__.py:26(ContextProp)
        1    0.000    0.000    0.000    0.000 core.py:5206(ZeroOrMore)
        1    0.000    0.000    0.000    0.000 _vertex.py:165(VertexVectorField)
        1    0.000    0.000    0.000    0.000 diophantine.py:1134(GeneralSumOfEvenPowers)
        1    0.000    0.000    0.000    0.000 unicode.py:239(Kanji)
        1    0.000    0.000    0.000    0.000 _covariance.py:503(CovViaDiagonal)
        1    0.000    0.000    0.000    0.000 polyoptions.py:701(Series)
        1    0.000    0.000    0.000    0.000 package_importer.py:668(_ModuleNode)
        1    0.000    0.000    0.000    0.000 dataframes.py:324(CaptureSub)
        1    0.000    0.000    0.000    0.000 queue.py:242(LifoQueue)
        1    0.000    0.000    0.000    0.000 polyoptions.py:664(Include)
        1    0.000    0.000    0.000    0.000 _interface.py:692(_SumLinearOperator)
        1    0.000    0.000    0.000    0.000 kind.py:36(KindMeta)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:9(_HasStorage)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1153(_Frame)
        1    0.000    0.000    0.000    0.000 design_patterns.py:115(NullFile)
        1    0.000    0.000    0.000    0.000 csv.py:69(unix_dialect)
        1    0.000    0.000    0.000    0.000 polyoptions.py:638(Frac)
        1    0.000    0.000    0.000    0.000 ordinals.py:261(OrdinalOmega)
        1    0.000    0.000    0.000    0.000 _guards.py:74(GuardBuilderBase)
        1    0.000    0.000    0.000    0.000 offsetbox.py:368(PackerBase)
        1    0.000    0.000    0.000    0.000 __init__.py:822(Lookup)
        1    0.000    0.000    0.000    0.000 simpledomain.py:7(SimpleDomain)
        1    0.000    0.000    0.000    0.000 loss.py:786(MultiLabelMarginLoss)
        1    0.000    0.000    0.000    0.000 modules.py:1889(EndomorphismRing)
        1    0.000    0.000    0.000    0.000 instancenorm.py:153(LazyInstanceNorm1d)
        5    0.000    0.000    0.000    0.000 polyhedron.py:473(faces)
        1    0.000    0.000    0.000    0.000 core.py:3639(GoToColumn)
        1    0.000    0.000    0.000    0.000 mathtext.py:212(MathtextBackendBitmap)
        1    0.000    0.000    0.000    0.000 blas.py:250(<dictcomp>)
        1    0.000    0.000    0.000    0.000 errors.py:93(NonPrintableDefect)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:410(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 memory.py:683(CUDAPluggableAllocator)
        1    0.000    0.000    0.000    0.000 _parser.py:1378(_attr)
        1    0.000    0.000    0.000    0.000 graph.py:203(save_on_cpu)
        1    0.000    0.000    0.000    0.000 modules.py:1286(SubModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 utils.py:77(_ntuple_from_first)
        1    0.000    0.000    0.000    0.000 message.py:1195(EmailMessage)
        1    0.000    0.000    0.000    0.000 connection.py:578(SocketListener)
        1    0.000    0.000    0.000    0.000 _version.py:70(<listcomp>)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:9(ExportTypes)
        1    0.000    0.000    0.000    0.000 protocols.py:109(BufferedProtocol)
        1    0.000    0.000    0.000    0.000 _mgc.py:17(_ParallelP)
        1    0.000    0.000    0.000    0.000 argparse.py:783(Action)
        1    0.000    0.000    0.000    0.000 abc.py:75(MetaPathFinder)
        1    0.000    0.000    0.000    0.000 entity.py:540(GeometrySet)
        1    0.000    0.000    0.000    0.000 serialization.py:286(_open_zipfile_writer_file)
        1    0.000    0.000    0.000    0.000 facts.py:214(rules_2prereq)
        1    0.000    0.000    0.000    0.000 frontend.py:101(FrontendError)
        1    0.000    0.000    0.000    0.000 extension.py:23(Extension)
        1    0.000    0.000    0.000    0.000 py39.py:28(UnequalIterablesError)
        1    0.000    0.000    0.000    0.000 common.py:11(HolderModule)
        1    0.000    0.000    0.000    0.000 legend_handler.py:541(HandlerStem)
        1    0.000    0.000    0.000    0.000 _typing.py:126(DTypesUnsigned)
        1    0.000    0.000    0.000    0.000 function.py:281(FunctionMeta)
        1    0.000    0.000    0.000    0.000 core.py:5054(NotAny)
        1    0.000    0.000    0.000    0.000 context.py:330(on_interrupt)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:69(SymDispatchMode)
        1    0.000    0.000    0.000    0.000 fused.py:13(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 series.py:1742(Line3DBaseSeries)
        1    0.000    0.000    0.000    0.000 facts.py:571(FactKB)
        1    0.000    0.000    0.000    0.000 dataframes.py:241(CaptureVariable)
        1    0.000    0.000    0.000    0.000 dates.py:1928(ConciseDateConverter)
        1    0.000    0.000    0.000    0.000 lsoda.py:211(LsodaDenseOutput)
        1    0.000    0.000    0.000    0.000 pooling.py:935(LPPool2d)
        1    0.000    0.000    0.000    0.000 __init__.py:1786(RootLogger)
        1    0.000    0.000    0.000    0.000 jiterator.py:10(_CodeParser)
        1    0.000    0.000    0.000    0.000 scale.py:404(InvertedSymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:717(_RealParameter)
        1    0.000    0.000    0.000    0.000 mathtext.py:1984(VCentered)
        1    0.000    0.000    0.000    0.000 quadrature.py:260(TanhSinh)
        1    0.000    0.000    0.000    0.000 fused.py:149(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 tz.py:1036(tzstr)
        1    0.000    0.000    0.000    0.000 pooling.py:488(_AvgPoolNd)
        1    0.000    0.000    0.000    0.000 _animation_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:1985(MultipleLocator)
        1    0.000    0.000    0.000    0.000 core.py:5240(DelimitedList)
        1    0.000    0.000    0.000    0.000 transforms.py:1047(InverseFourierTransform)
        1    0.000    0.000    0.000    0.000 constraints.py:345(_LessThan)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:809(FormulaCollection)
        1    0.000    0.000    0.000    0.000 util.py:368(ForkAwareThreadLock)
        1    0.000    0.000    0.000    0.000 ticker.py:2964(OldAutoLocator)
        1    0.000    0.000    0.000    0.000 pyplot.py:121(_NotIPython)
        1    0.000    0.000    0.000    0.000 ElementPath.py:350(_SelectorContext)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:310(__init__)
        1    0.000    0.000    0.000    0.000 variable.py:8(VariableMeta)
        1    0.000    0.000    0.000    0.000 serialization.py:239(_opener)
        1    0.000    0.000    0.000    0.000 numbers.py:2751(RationalConstant)
        1    0.000    0.000    0.000    0.000 ticker.py:2041(_Edge_integer)
        1    0.000    0.000    0.000    0.000 zipfile.py:2271(FastLookup)
        1    0.000    0.000    0.000    0.000 loss.py:474(MSELoss)
        1    0.000    0.000    0.000    0.000 _czt.py:275(ZoomFFT)
        1    0.000    0.000    0.000    0.000 errors.py:33(MessageDefect)
        1    0.000    0.000    0.000    0.000 six.py:144(MovedAttribute)
        1    0.000    0.000    0.000    0.000 single.py:2842(LieGroup)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:211(GaussianRational)
        1    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:12(ConstantInputWarning)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:153(JitTypeTraceStoreLogger)
        1    0.000    0.000    0.000    0.000 ticker.py:1845(FixedLocator)
        1    0.000    0.000    0.000    0.000 computed_entries.py:155(ManualEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 connection.py:764(ConnectionWrapper)
        4    0.000    0.000    0.000    0.000 function_base.py:1800(_trim_zeros)
        1    0.000    0.000    0.000    0.000 dropout.py:25(Dropout)
        1    0.000    0.000    0.000    0.000 index_tricks.py:435(RClass)
        1    0.000    0.000    0.000    0.000 Image.py:3740(register_save_all)
        1    0.000    0.000    0.000    0.000 nodes.py:79(ScalarNode)
        1    0.000    0.000    0.000    0.000 core.py:451(DebugActions)
        1    0.000    0.000    0.000    0.000 rk.py:552(RkDenseOutput)
        1    0.000    0.000    0.000    0.000 polyoptions.py:674(All)
        2    0.000    0.000    0.000    0.000 _compression.py:36(readable)
        1    0.000    0.000    0.000    0.000 _linalg.py:41(SlogdetResult)
        1    0.000    0.000    0.000    0.000 backend_tools.py:429(_ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 backend_agg.py:612(_BackendAgg)
        1    0.000    0.000    0.000    0.000 font_manager.py:939(_JSONEncoder)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:608(SequentialLR)
        1    0.000    0.000    0.000    0.000 _array_like.py:39(_SupportsArray)
        3    0.000    0.000    0.000    0.000 _parser.py:99(checklookbehindgroup)
        1    0.000    0.000    0.000    0.000 patches.py:2025(Circle)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:4(DegenerateDataWarning)
        1    0.000    0.000    0.000    0.000 queues.py:234(LifoQueue)
        1    0.000    0.000    0.000    0.000 protocols.py:66(Protocol)
        1    0.000    0.000    0.000    0.000 single.py:1930(NthOrderReducible)
        1    0.000    0.000    0.000    0.000 __init__.py:160(_special_method_cache)
        2    0.000    0.000    0.000    0.000 axis.py:604(__init__)
        1    0.000    0.000    0.000    0.000 _misc.py:9(LinAlgWarning)
        1    0.000    0.000    0.000    0.000 diophantine.py:454(BinaryQuadratic)
        1    0.000    0.000    0.000    0.000 forward_ad.py:145(dual_level)
        1    0.000    0.000    0.000    0.000 function.py:576(InplaceFunction)
        1    0.000    0.000    0.000    0.000 core.py:4841(AtStringStart)
        1    0.000    0.000    0.000    0.000 __init__.py:41(PropModule)
        1    0.000    0.000    0.000    0.000 _polyint.py:145(_Interpolator1DWithDerivatives)
        1    0.000    0.000    0.000    0.000 _typing.py:113(DTypesBool)
        1    0.000    0.000    0.000    0.000 pydoc.py:389(ErrorDuringImport)
        1    0.000    0.000    0.000    0.000 source.py:1(<module>)
        1    0.000    0.000    0.000    0.000 multidimensional.py:56(vectorize)
        1    0.000    0.000    0.000    0.000 request.py:791(ProxyHandler)
        1    0.000    0.000    0.000    0.000 client.py:176(HTTPMessage)
        1    0.000    0.000    0.000    0.000 _morestats.py:4287(DirectionalStats)
        1    0.000    0.000    0.000    0.000 dense.py:115(MutableDenseMatrix)
        2    0.000    0.000    0.000    0.000 core.py:883(__init__)
        1    0.000    0.000    0.000    0.000 sympify.py:27(SympifyError)
        1    0.000    0.000    0.000    0.000 parameter.py:196(UninitializedBuffer)
        1    0.000    0.000    0.000    0.000 pickletools.py:948(StackObject)
        1    0.000    0.000    0.000    0.000 _aliases.py:194(UniqueInverseResult)
        4    0.000    0.000    0.000    0.000 _pep440.py:426(_parse_local_version)
        1    0.000    0.000    0.000    0.000 graph.py:422(_swap_with_cloned)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:251(BareQuotedString)
        1    0.000    0.000    0.000    0.000 __init__.py:235(Splitter)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:29(SemiInfiniteFunc)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:537(FreeModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:336(_median_formula)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:20(NearestNDInterpolator)
        2    0.000    0.000    0.000    0.000 _compression.py:160(tell)
        1    0.000    0.000    0.000    0.000 _typing.py:47(SupportsRead)
        1    0.000    0.000    0.000    0.000 single.py:732(Bernoulli)
        3    0.000    0.000    0.000    0.000 numeric.py:63(_zeros_like_dispatcher)
        1    0.000    0.000    0.000    0.000 _static.py:108(Dict)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1226(_OptFunc)
        3    0.000    0.000    0.000    0.000 core.py:867(__init__)
        1    0.000    0.000    0.000    0.000 _exceptions.py:56(_UFuncBinaryResolutionError)
        1    0.000    0.000    0.000    0.000 ticker.py:367(FuncFormatter)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1677(poisson_binomial_frozen)
        1    0.000    0.000    0.000    0.000 spawn.py:79(ProcessContext)
        1    0.000    0.000    0.000    0.000 contour.py:35(ClabelText)
        1    0.000    0.000    0.000    0.000 rl.py:43(glom)
        1    0.000    0.000    0.000    0.000 __init__.py:29(context)
        1    0.000    0.000    0.000    0.000 traceback.py:90(_Sentinel)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_tolower}
        1    0.000    0.000    0.000    0.000 radau.py:549(RadauDenseOutput)
        3    0.000    0.000    0.000    0.000 mock.py:283(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:163(_Sentinel)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3437(StatusbarBase)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:42(CGSteihaugSubproblem)
        1    0.000    0.000    0.000    0.000 scanner.py:2023(EOLComment)
        1    0.000    0.000    0.000    0.000 mock.py:341(_CallList)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:836(MikotaPair)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2106(wrap_logical_op_with_cast_to)
        1    0.000    0.000    0.000    0.000 threading.py:1370(Timer)
        1    0.000    0.000    0.000    0.000 core.py:2415(NoMatch)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:450(OptionDummy)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:418(_VectorJacWrapper)
        1    0.000    0.000    0.000    0.000 dispatcher.py:33(RaiseNotImplementedError)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:113(__init__)
        1    0.000    0.000    0.000    0.000 rcsetup.py:442(_validate_mathtext_fallback_to_cm)
        1    0.000    0.000    0.000    0.000 _interface.py:747(_ScaledLinearOperator)
        1    0.000    0.000    0.000    0.000 _vertex.py:430(ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 argparse.py:1116(_VersionAction)
        1    0.000    0.000    0.000    0.000 polyoptions.py:366(Field)
        1    0.000    0.000    0.000    0.000 legend_handler.py:176(HandlerNpointsYoffsets)
        1    0.000    0.000    0.000    0.000 loss.py:991(SoftMarginLoss)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1798(_process_parameters)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:159(SpectralNormLoadStateDictPreHook)
        1    0.000    0.000    0.000    0.000 str.py:998(StrReprPrinter)
        1    0.000    0.000    0.000    0.000 batchnorm.py:306(LazyBatchNorm1d)
        1    0.000    0.000    0.000    0.000 threading.py:267(__exit__)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1129(_idat)
        1    0.000    0.000    0.000    0.000 patches.py:1945(_Base)
        1    0.000    0.000    0.000    0.000 core.py:241(_ParseActionIndexError)
        1    0.000    0.000    0.000    0.000 _covariance.py:618(CovViaPSD)
        1    0.000    0.000    0.000    0.000 error.py:120(MarkedYAMLError)
        1    0.000    0.000    0.000    0.000 constraints.py:245(_IntegerInterval)
        2    0.000    0.000    0.000    0.000 arrayprint.py:493(_recursive_guard)
        1    0.000    0.000    0.000    0.000 events.py:128(DocumentStartEvent)
        1    0.000    0.000    0.000    0.000 request.py:1226(HTTPDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 loader.py:23(BaseLoader)
        1    0.000    0.000    0.000    0.000 extrapolation.py:728(cohen_alt_class)
        1    0.000    0.000    0.000    0.000 instancenorm.py:269(LazyInstanceNorm2d)
        1    0.000    0.000    0.000    0.000 geo.py:419(LambertTransform)
        1    0.000    0.000    0.000    0.000 utils.py:34(MatchAllNode)
        1    0.000    0.000    0.000    0.000 _optimize.py:1152(_LineSearchError)
        1    0.000    0.000    0.000    0.000 context.py:295(ForkServerProcess)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:45(DupFd)
        1    0.000    0.000    0.000    0.000 streamreader.py:8(StreamReaderIterDataPipe)
        1    0.000    0.000    0.000    0.000 tensor.py:816(<listcomp>)
        1    0.000    0.000    0.000    0.000 parse.py:212(_NetlocResultMixinBytes)
        2    0.000    0.000    0.000    0.000 __init__.py:133(create_module)
        1    0.000    0.000    0.000    0.000 patches.py:2047(LArrow)
        1    0.000    0.000    0.000    0.000 _interface.py:816(MatrixLinearOperator)
        1    0.000    0.000    0.000    0.000 ticker.py:2577(SymmetricalLogLocator)
        1    0.000    0.000    0.000    0.000 cm.py:78(__init__)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:591(rv_discrete_frozen)
        1    0.000    0.000    0.000    0.000 scalarstring.py:75(SingleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 backend_managers.py:27(ToolManagerMessageEvent)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:9(MathieuBase)
        1    0.000    0.000    0.000    0.000 logic.py:399(Not)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:404(GroupMember)
        1    0.000    0.000    0.000    0.000 arpack.py:932(LuInv)
        1    0.000    0.000    0.000    0.000 _optimize.py:112(OptimizeResult)
        1    0.000    0.000    0.000    0.000 events.py:170(AliasEvent)
        1    0.000    0.000    0.000    0.000 single.py:2098(NthLinearConstantCoeffHomogeneous)
        1    0.000    0.000    0.000    0.000 fetch.py:7(_BaseDatasetFetcher)
        1    0.000    0.000    0.000    0.000 argparse.py:1253(FileType)
        2    0.000    0.000    0.000    0.000 index_tricks.py:144(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1309(STIXFontConstants)
        1    0.000    0.000    0.000    0.000 Image.py:3238(SupportsArrowArrayInterface)
        1    0.000    0.000    0.000    0.000 core.py:4895(FollowedBy)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:301(Metropolis)
        1    0.000    0.000    0.000    0.000 decorators.py:207(_SympifyWrapper)
        1    0.000    0.000    0.000    0.000 datapipes.py:18(DataFramesAsTuplesPipe)
        1    0.000    0.000    0.000    0.000 calendar.py:26(IllegalMonthError)
        1    0.000    0.000    0.000    0.000 single.py:839(Factorable)
        1    0.000    0.000    0.000    0.000 calculus.py:1(CalculusMethods)
        1    0.000    0.000    0.000    0.000 tarfile.py:704(ExFileObject)
        1    0.000    0.000    0.000    0.000 core.py:3745(StringStart)
        1    0.000    0.000    0.000    0.000 deprecation.py:254(_deprecate_privatize_attribute)
        1    0.000    0.000    0.000    0.000 _mio4.py:89(VarHeader4)
        1    0.000    0.000    0.000    0.000 arpack.py:957(IterInv)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:15(DummyArray)
        1    0.000    0.000    0.000    0.000 mathtext.py:349(MathtextBackendCairo)
        1    0.000    0.000    0.000    0.000 core.py:3810(WordEnd)
        1    0.000    0.000    0.000    0.000 frontend.py:118(UnsupportedNodeError)
        1    0.000    0.000    0.000    0.000 groundtypes.py:21(_GMPYInteger)
        2    0.000    0.000    0.000    0.000 _state.py:39(__bool__)
        1    0.000    0.000    0.000    0.000 readers.py:107(NamespaceReader)
        2    0.000    0.000    0.000    0.000 six.py:199(__get_module)
        1    0.000    0.000    0.000    0.000 __init__.py:413(SeparatedValues)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:173(_enable_get_lr_call)
        1    0.000    0.000    0.000    0.000 patches.py:3340(Simple)
        1    0.000    0.000    0.000    0.000 utils.py:226(CallbackIOWrapper)
        2    0.000    0.000    0.000    0.000 torch_version.py:19(__init__)
        1    0.000    0.000    0.000    0.000 legend_handler.py:260(HandlerPatch)
        1    0.000    0.000    0.000    0.000 inputs.py:1943(PmgVaspPspDirError)
        1    0.000    0.000    0.000    0.000 core.py:3017(Char)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:99(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 response.py:57(addinfo)
        1    0.000    0.000    0.000    0.000 threading.py:498(BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1278(LocationEvent)
        1    0.000    0.000    0.000    0.000 ase.py:31(Atoms)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1670(SphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 events.py:659(_Local)
        1    0.000    0.000    0.000    0.000 optimizer.py:20(_RequiredParameter)
        1    0.000    0.000    0.000    0.000 single.py:2387(NthLinearEulerEqHomogeneous)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:44(_FakeGlobalNamespace)
        1    0.000    0.000    0.000    0.000 pickle.py:97(_Stop)
        1    0.000    0.000    0.000    0.000 __init__.py:234(silent_list)
        1    0.000    0.000    0.000    0.000 animation.py:99(__init__)
        1    0.000    0.000    0.000    0.000 unicode.py:200(Cyrillic)
        1    0.000    0.000    0.000    0.000 comments.py:1085(CommentedOrderedMap)
        1    0.000    0.000    0.000    0.000 core.py:797(_DomainCheckInterval)
        4    0.000    0.000    0.000    0.000 core.py:6052(postParse)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1355(SmoothBivariateSpline)
        1    0.000    0.000    0.000    0.000 _nonlin.py:589(GenericBroyden)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1928(nchypergeom_fisher_gen)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:272(MultiplicativeLR)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000    0.000    0.000 diophantine.py:695(HomogeneousTernaryQuadraticNormal)
        1    0.000    0.000    0.000    0.000 polyoptions.py:375(Greedy)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:600(rv_continuous_frozen)
        1    0.000    0.000    0.000    0.000 transforms.py:2199(BlendedAffine2D)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:446(ObsRoute)
        1    0.000    0.000    0.000    0.000 error.py:19(URLError)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:840(ChainedScheduler)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:16(PlaceHolder)
        1    0.000    0.000    0.000    0.000 mathtext.py:949(DejaVuSansFonts)
        1    0.000    0.000    0.000    0.000 __init__.py:2349(__init__)
        1    0.000    0.000    0.000    0.000 worker.py:119(_IterableDatasetStopIteration)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:39(FixedTalbot)
        1    0.000    0.000    0.000    0.000 constraints.py:311(_GreaterThan)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(UnsatisfiableConstraint)
        1    0.000    0.000    0.000    0.000 parser.py:804(RoundTripParser)
        1    0.000    0.000    0.000    0.000 protocols.py:177(SubprocessProtocol)
        1    0.000    0.000    0.000    0.000 numbers.py:3142(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 parse.py:127(_ResultMixinStr)
        1    0.000    0.000    0.000    0.000 _factories.py:19(_TzFactory)
        1    0.000    0.000    0.000    0.000 calendar.py:594(LocaleHTMLCalendar)
        1    0.000    0.000    0.000    0.000 core.py:4073(_ErrorStop)
        1    0.000    0.000    0.000    0.000 core.py:4783(_Indent)
        1    0.000    0.000    0.000    0.000 tokens.py:200(DirectiveToken)
        1    0.000    0.000    0.000    0.000 numbers.py:12(Number)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1088(_DOF_estimator_geom)
        1    0.000    0.000    0.000    0.000 tz.py:373(_tzfile)
        1    0.000    0.000    0.000    0.000 core.py:184(_should_enable_warnings)
        1    0.000    0.000    0.000    0.000 core.py:84(MaskedArrayFutureWarning)
        1    0.000    0.000    0.000    0.000 scalarstring.py:54(LiteralScalarString)
        1    0.000    0.000    0.000    0.000 cyaml.py:115(CSafeDumper)
        1    0.000    0.000    0.000    0.000 modules.py:454(FreeModulePolyRing)
        1    0.000    0.000    0.000    0.000 traceback.py:613(_ExceptionPrintContext)
        1    0.000    0.000    0.000    0.000 overrides.py:1865(BaseTorchFunctionMode)
        1    0.000    0.000    0.000    0.000 mock.py:2778(_SpecState)
        1    0.000    0.000    0.000    0.000 unicode.py:160(Greek)
        1    0.000    0.000    0.000    0.000 profiler.py:619(emit_nvtx)
        1    0.000    0.000    0.000    0.000 dist.py:1119(DistDeprecationWarning)
        1    0.000    0.000    0.000    0.000 uuid.py:78(SafeUUID)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:353(StepLR)
        2    0.000    0.000    0.000    0.000 _adapters.py:25(__init__)
        1    0.000    0.000    0.000    0.000 _trace.py:290(TracingCheckError)
        1    0.000    0.000    0.000    0.000 tarfile.py:294(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 more.py:4171(countable)
        1    0.000    0.000    0.000    0.000 dumper.py:21(BaseDumper)
        1    0.000    0.000    0.000    0.000 events.py:709(_RunningLoop)
        1    0.000    0.000    0.000    0.000 units.py:74(AxisInfo)
        1    0.000    0.000    0.000    0.000 backend_managers.py:11(ToolEvent)
        1    0.000    0.000    0.000    0.000 mathtext.py:1974(HCentered)
        1    0.000    0.000    0.000    0.000 __init__.py:2332(_classproperty)
        1    0.000    0.000    0.000    0.000 pooling.py:1132(AdaptiveAvgPool1d)
        1    0.000    0.000    0.000    0.000 patches.py:3420(Fancy)
        1    0.000    0.000    0.000    0.000 mathtext.py:1298(ComputerModernFontConstants)
        1    0.000    0.000    0.000    0.000 unicode.py:213(Chinese)
        1    0.000    0.000    0.000    0.000 mock.py:1053(_AnyComparer)
        1    0.000    0.000    0.000    0.000 pathlib.py:43(_is_wildcard_pattern)
        1    0.000    0.000    0.000    0.000 argparse.py:1308(Namespace)
        1    0.000    0.000    0.000    0.000 usertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:577(ExponentialLR)
        1    0.000    0.000    0.000    0.000 index_tricks.py:262(OGridClass)
        1    0.000    0.000    0.000    0.000 core.py:4931(PrecededBy)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10816(FitUniformFixedScaleDataError)
        1    0.000    0.000    0.000    0.000 case.py:201(_AssertRaisesBaseContext)
        1    0.000    0.000    0.000    0.000 numbers.py:2764(IntegerConstant)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:333(MailboxList)
        1    0.000    0.000    0.000    0.000 decorator.py:101(no_attrs_in_subclass)
        1    0.000    0.000    0.000    0.000 decoder.py:114(ImageHandler)
        1    0.000    0.000    0.000    0.000 pooling.py:1036(AdaptiveMaxPool2d)
        1    0.000    0.000    0.000    0.000 _utils.py:610(ExceptionWrapper)
        1    0.000    0.000    0.000    0.000 {built-in method _elementtree._set_factories}
        1    0.000    0.000    0.000    0.000 polyerrors.py:6(BasePolynomialError)
        1    0.000    0.000    0.000    0.000 domainelement.py:6(DomainElement)
        1    0.000    0.000    0.000    0.000 arpack.py:288(ArpackNoConvergence)
        1    0.000    0.000    0.000    0.000 _base.py:141(_AcquireFutures)
        1    0.000    0.000    0.000    0.000 orderings.py:242(_ItemGetter)
        1    0.000    0.000    0.000    0.000 core.py:5813(TokenConverter)
        1    0.000    0.000    0.000    0.000 unicode.py:322(Hebrew)
        1    0.000    0.000    0.000    0.000 transports.py:172(DatagramTransport)
        1    0.000    0.000    0.000    0.000 splitter_base.py:37(_SplitterSettingBase)
        1    0.000    0.000    0.000    0.000 conv.py:1128(_ConvTransposeMixin)
        1    0.000    0.000    0.000    0.000 core.py:1125(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 animation.py:637(FFMpegFileWriter)
        1    0.000    0.000    0.000    0.000 factorials.py:17(CombinatorialFunction)
        1    0.000    0.000    0.000    0.000 core.py:3673(LineStart)
        1    0.000    0.000    0.000    0.000 diophantine.py:256(Linear)
        1    0.000    0.000    0.000    0.000 ticker.py:296(IndexFormatter)
        1    0.000    0.000    0.000    0.000 unicode.py:141(Latin1)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:57(DoubleInfiniteFunc)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:408(_VectorFunWrapper)
        1    0.000    0.000    0.000    0.000 mock.py:295(__init__)
        1    0.000    0.000    0.000    0.000 mock.py:2100(NonCallableMagicMock)
        1    0.000    0.000    0.000    0.000 serialization.py:1096(StorageType)
        1    0.000    0.000    0.000    0.000 _typing.py:63(NestedSequence)
        1    0.000    0.000    0.000    0.000 calendar.py:548(different_locale)
        1    0.000    0.000    0.000    0.000 registration.py:210(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1623(_TypeVarLikeMeta)
        1    0.000    0.000    0.000    0.000 extras.py:263(_fromnxfunction_single)
        1    0.000    0.000    0.000    0.000 error.py:176(MarkedYAMLWarning)
        3    0.000    0.000    0.000    0.000 {built-in method sys.audit}
        1    0.000    0.000    0.000    0.000 patches.py:3242(BracketAB)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:659(FitDataError)
        1    0.000    0.000    0.000    0.000 mock.py:2933(_AsyncIterator)
        1    0.000    0.000    0.000    0.000 tokens.py:294(AliasToken)
        1    0.000    0.000    0.000    0.000 patches.py:3165(_Bracket)
        1    0.000    0.000    0.000    0.000 exceptions.py:19(DuplicateConstraint)
        1    0.000    0.000    0.000    0.000 api.py:466(RRef)
        1    0.000    0.000    0.000    0.000 geo.py:255(AitoffTransform)
        1    0.000    0.000    0.000    0.000 _nonlin.py:955(BroydenSecond)
        1    0.000    0.000    0.000    0.000 comments.py:52(__init__)
        1    0.000    0.000    0.000    0.000 single.py:2294(NthLinearConstantCoeffUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 logic.py:365(And)
        1    0.000    0.000    0.000    0.000 mock.py:2118(MagicMock)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:949(Operator)
        1    0.000    0.000    0.000    0.000 __init__.py:94(cuBLASModule)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1554(RectBivariateSpline)
        1    0.000    0.000    0.000    0.000 cyaml.py:22(CBaseLoader)
        1    0.000    0.000    0.000    0.000 meijerint.py:313(_CoeffExpValueError)
        1    0.000    0.000    0.000    0.000 pathlib.py:331(_PreciseSelector)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:347(GroupList)
        1    0.000    0.000    0.000    0.000 _miobase.py:20(MatReadError)
        1    0.000    0.000    0.000    0.000 Physics_System.py:5(Phy_Sys)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2442(_UnpackSpecialForm)
        1    0.000    0.000    0.000    0.000 streamplot.py:233(StreamplotSet)
        1    0.000    0.000    0.000    0.000 error.py:48(FileMark)
        1    0.000    0.000    0.000    0.000 numbers.py:2315(_MultisetHistogram)
        1    0.000    0.000    0.000    0.000 activation.py:274(Sigmoid)
        1    0.000    0.000    0.000    0.000 tokens.py:220(StreamStartToken)
        1    0.000    0.000    0.000    0.000 {built-in method _functools.cmp_to_key}
        1    0.000    0.000    0.000    0.000 axis.py:596(_LazyTickList)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:169(Token)
        1    0.000    0.000    0.000    0.000 pickletools.py:2550(_Example)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:980(NoExtraItemsType)
        1    0.000    0.000    0.000    0.000 trifinder.py:7(TriFinder)
        2    0.000    0.000    0.000    0.000 results.py:460(<lambda>)
        1    0.000    0.000    0.000    0.000 error.py:278(MarkedYAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 constraints.py:284(_IntegerGreaterThan)
        1    0.000    0.000    0.000    0.000 numpy.py:346(<dictcomp>)
        1    0.000    0.000    0.000    0.000 trirefine.py:12(TriRefiner)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1245(ComplexFloatingFormat)
        1    0.000    0.000    0.000    0.000 pathlib.py:300(_Selector)
        1    0.000    0.000    0.000    0.000 ticker.py:1154(LogFormatterMathtext)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:21(NearConstantInputWarning)
        1    0.000    0.000    0.000    0.000 reader.py:35(ReaderError)
        1    0.000    0.000    0.000    0.000 error.py:274(YAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:104(ImmutableSparseNDimArray)
        1    0.000    0.000    0.000    0.000 magic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 frontend.py:315(Builder)
        1    0.000    0.000    0.000    0.000 _array_like.py:44(_SupportsArrayFunc)
        1    0.000    0.000    0.000    0.000 mock.py:388(_MockIter)
        1    0.000    0.000    0.000    0.000 errors.py:8(MessageError)
        1    0.000    0.000    0.000    0.000 request.py:1050(HTTPBasicAuthHandler)
        2    0.000    0.000    0.000    0.000 __init__.py:440(__init__)
        1    0.000    0.000    0.000    0.000 ImageFile.py:723(PyCodecState)
        1    0.000    0.000    0.000    0.000 core.py:3722(LineEnd)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:913(WhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 rk.py:577(Dop853DenseOutput)
        1    0.000    0.000    0.000    0.000 pydoc.py:1979(__init__)
        1    0.000    0.000    0.000    0.000 single.py:2667(SecondLinearBessel)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:717(PolynomialLR)
        1    0.000    0.000    0.000    0.000 _factories.py:25(_TzOffsetFactory)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1078(_DOF_estimator_user)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:107(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:250(ExecutableNotFoundError)
        1    0.000    0.000    0.000    0.000 constraints.py:409(_Multinomial)
        1    0.000    0.000    0.000    0.000 __init__.py:2229(createLock)
        1    0.000    0.000    0.000    0.000 streams.py:117(ExternalStream)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2831(_min_dispatcher)
        1    0.000    0.000    0.000    0.000 patches.py:2139(Round)
        1    0.000    0.000    0.000    0.000 typing.py:1543(__repr__)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:313(PlotWriter)
        1    0.000    0.000    0.000    0.000 solveset.py:68(NonlinearError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:30(PolynomialDivisionFailed)
        1    0.000    0.000    0.000    0.000 request.py:1531(FTPHandler)
        1    0.000    0.000    0.000    0.000 core.py:861(_DomainGreater)
        2    0.000    0.000    0.000    0.000 {method '__exit__' of 'posix.ScandirIterator' objects}
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:690(Attribute)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:574(SubModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 request.py:1416(UnknownHandler)
        1    0.000    0.000    0.000    0.000 activation.py:1315(Softsign)
        1    0.000    0.000    0.000    0.000 dates.py:1558(MonthLocator)
        1    0.000    0.000    0.000    0.000 mathtext.py:1810(Rule)
        1    0.000    0.000    0.000    0.000 exceptions.py:300(RecursiveGrammarException)
        1    0.000    0.000    0.000    0.000 warnings.py:99(SetuptoolsDeprecationWarning)
        1    0.000    0.000    0.000    0.000 configparser.py:1242(SafeConfigParser)
        1    0.000    0.000    0.000    0.000 __init__.py:714(ExFileObject)
        1    0.000    0.000    0.000    0.000 _typing.py:139(DTypesReal)
        1    0.000    0.000    0.000    0.000 pickletools.py:1093(OpcodeInfo)
        1    0.000    0.000    0.000    0.000 annotations.py:29(Module)
        1    0.000    0.000    0.000    0.000 _infra.py:302(Invocation)
        1    0.000    0.000    0.000    0.000 results.py:103(List)
        1    0.000    0.000    0.000    0.000 markers.py:33(InvalidMarker)
        2    0.000    0.000    0.000    0.000 index_tricks.py:761(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5899(uniform_direction_frozen)
        1    0.000    0.000    0.000    0.000 fused.py:159(ConvAddReLU2d)
        1    0.000    0.000    0.000    0.000 legend_handler.py:306(HandlerLineCollection)
        1    0.000    0.000    0.000    0.000 argparse.py:917(_StoreAction)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:191(PHBase)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:157(JitTypeTraceStore)
        1    0.000    0.000    0.000    0.000 util.py:81(_UnboundedCache)
        1    0.000    0.000    0.000    0.000 __init__.py:730(AbsolutePathError)
        1    0.000    0.000    0.000    0.000 cyaml.py:38(CSafeLoader)
        1    0.000    0.000    0.000    0.000 __init__.py:753(Filter)
        1    0.000    0.000    0.000    0.000 copyreg.py:22(constructor)
        1    0.000    0.000    0.000    0.000 unicode.py:314(Arabic)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:217(EncodedWord)
        1    0.000    0.000    0.000    0.000 _odepack_py.py:16(ODEintWarning)
        1    0.000    0.000    0.000    0.000 protocols.py:162(DatagramProtocol)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:106(HyperbolicFunction)
        1    0.000    0.000    0.000    0.000 datapipes.py:111(ExampleAggregateAsDataFrames)
        1    0.000    0.000    0.000    0.000 api.py:87(AllGatherStates)
        1    0.000    0.000    0.000    0.000 _comparison.py:389(ObjectPair)
        1    0.000    0.000    0.000    0.000 scalarstring.py:66(FoldedScalarString)
        1    0.000    0.000    0.000    0.000 hyper.py:71(TupleParametersBase)
        1    0.000    0.000    0.000    0.000 errors.py:21(OnnxExporterWarning)
        1    0.000    0.000    0.000    0.000 serialization.py:258(_open_buffer_reader)
        1    0.000    0.000    0.000    0.000 _idl.py:145(Pointer)
        1    0.000    0.000    0.000    0.000 error.py:109(CommentMark)
        1    0.000    0.000    0.000    0.000 core.py:840(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 headerregistry.py:387(SingleAddressHeader)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3675(special_ortho_group_frozen)
        1    0.000    0.000    0.000    0.000 mixins.py:9(_LoopBoundMixin)
        1    0.000    0.000    0.000    0.000 argparse.py:204(_Section)
        1    0.000    0.000    0.000    0.000 diophantine.py:782(HomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 constraints.py:265(_IntegerLessThan)
        1    0.000    0.000    0.000    0.000 unicode.py:246(Hiragana)
        1    0.000    0.000    0.000    0.000 configparser.py:284(InterpolationDepthError)
        1    0.000    0.000    0.000    0.000 __init__.py:10(warn_distutils_present)
        1    0.000    0.000    0.000    0.000 patches.py:3060(CurveA)
        1    0.000    0.000    0.000    0.000 errors.py:81(HeaderDefect)
        1    0.000    0.000    0.000    0.000 configparser.py:181(NoSectionError)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:451(ConstantLR)
        1    0.000    0.000    0.000    0.000 _exceptions.py:32(UFuncTypeError)
        1    0.000    0.000    0.000    0.000 patches.py:2632(Arc)
        1    0.000    0.000    0.000    0.000 optimization.py:159(Halley)
        1    0.000    0.000    0.000    0.000 errors.py:39(CheckerError)
        1    0.000    0.000    0.000    0.000 patches.py:2496(Arc3)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:68(__init__)
        1    0.000    0.000    0.000    0.000 arpack.py:908(SpLuInv)
        1    0.000    0.000    0.000    0.000 dataframes.py:360(CaptureInitial)
        1    0.000    0.000    0.000    0.000 core.py:5917(Dict)
        1    0.000    0.000    0.000    0.000 animation.py:753(ImageMagickFileWriter)
        1    0.000    0.000    0.000    0.000 _adapters.py:20(TraversableResourcesLoader)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:767(CosineAnnealingLR)
        1    0.000    0.000    0.000    0.000 patches.py:3053(Curve)
        1    0.000    0.000    0.000    0.000 errors.py:37(RemovedConfigError)
        1    0.000    0.000    0.000    0.000 pydoc.py:2209(ModuleScanner)
        1    0.000    0.000    0.000    0.000 mock.py:394(Base)
        1    0.000    0.000    0.000    0.000 exponential.py:212(ExpMeta)
        1    0.000    0.000    0.000    0.000 configparser.py:276(InterpolationSyntaxError)
        1    0.000    0.000    0.000    0.000 lambdify.py:1336(_TensorflowEvaluatorPrinter)
        1    0.000    0.000    0.000    0.000 constraints.py:232(_OneHot)
        1    0.000    0.000    0.000    0.000 extras.py:1637(mr_class)
        1    0.000    0.000    0.000    0.000 legend_handler.py:433(HandlerErrorbar)
        1    0.000    0.000    0.000    0.000 ticker.py:325(NullFormatter)
        1    0.000    0.000    0.000    0.000 _optimize.py:544(_MaxFuncCallError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1009(ShiftA)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:7(CharacteristicZero)
        1    0.000    0.000    0.000    0.000 rszeta.py:53(RSCache)
        1    0.000    0.000    0.000    0.000 colors.py:1525(NoNorm)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1235(_NQuad)
        1    0.000    0.000    0.000    0.000 offsetbox.py:495(HPacker)
        1    0.000    0.000    0.000    0.000 queues.py:11(QueueEmpty)
        1    0.000    0.000    0.000    0.000 context.py:242(__init__)
        1    0.000    0.000    0.000    0.000 linsolve.py:28(MatrixRankWarning)
        1    0.000    0.000    0.000    0.000 emitter.py:32(ScalarAnalysis)
        1    0.000    0.000    0.000    0.000 _vertex.py:446(FieldWrapper)
        1    0.000    0.000    0.000    0.000 _ltisys.py:2295(Bunch)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:926(MeijerFormulaCollection)
        1    0.000    0.000    0.000    0.000 orderings.py:45(GradedLexOrder)
        1    0.000    0.000    0.000    0.000 design_patterns.py:128(NullStream)
        1    0.000    0.000    0.000    0.000 case.py:192(_BaseTestCaseContext)
        1    0.000    0.000    0.000    0.000 _script.py:264(ScriptMeta)
        1    0.000    0.000    0.000    0.000 patches.py:3508(Wedge)
        1    0.000    0.000    0.000    0.000 pooling.py:1160(AdaptiveAvgPool2d)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_iscased}
        1    0.000    0.000    0.000    0.000 ElementTree.py:106(ParseError)
        1    0.000    0.000    0.000    0.000 decorator.py:254(ContextManager)
        1    0.000    0.000    0.000    0.000 datapipe.py:207(DFIterDataPipe)
        1    0.000    0.000    0.000    0.000 tarfile.py:267(TarError)
        2    0.000    0.000    0.000    0.000 _multiufuncs.py:66(_override_ufunc_default_args)
        1    0.000    0.000    0.000    0.000 _exceptions.py:80(_UFuncInputCastingError)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'generator' objects}
        1    0.000    0.000    0.000    0.000 backend_tools.py:682(ViewsPositionsBase)
        1    0.000    0.000    0.000    0.000 core.py:3632(PositionToken)
        1    0.000    0.000    0.000    0.000 argparse.py:992(_StoreFalseAction)
        1    0.000    0.000    0.000    0.000 dispatcher.py:10(MDNotImplementedError)
        1    0.000    0.000    0.000    0.000 events.py:66(NodeEvent)
        1    0.000    0.000    0.000    0.000 patches.py:2099(DArrow)
        1    0.000    0.000    0.000    0.000 queue.py:23(Full)
        1    0.000    0.000    0.000    0.000 diophantine.py:958(GeneralSumOfSquares)
        1    0.000    0.000    0.000    0.000 constraints.py:362(_Interval)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1625(StateSpaceContinuous)
        1    0.000    0.000    0.000    0.000 request.py:898(HTTPPasswordMgrWithDefaultRealm)
        1    0.000    0.000    0.000    0.000 batchnorm.py:413(LazyBatchNorm2d)
        1    0.000    0.000    0.000    0.000 transforms.py:2542(BboxTransformToMaxOnly)
        1    0.000    0.000    0.000    0.000 constraints.py:493(_PositiveSemidefinite)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3256(_NamedTupleMeta)
        1    0.000    0.000    0.000    0.000 legend_handler.py:208(HandlerLine2D)
        1    0.000    0.000    0.000    0.000 single.py:2572(NthLinearEulerEqNonhomogeneousUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 modules.py:1096(ModuleOrder)
        1    0.000    0.000    0.000    0.000 __init__.py:399(PyDLL)
        1    0.000    0.000    0.000    0.000 core.py:4789(_IndentGreater)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:933(EWWhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:114(<listcomp>)
        2    0.000    0.000    0.000    0.000 matexpr.py:486(get_postprocessor)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1809(DraggableAnnotation)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1081(ZerosPolesGainContinuous)
        1    0.000    0.000    0.000    0.000 polyerrors.py:136(ComputationFailed)
        2    0.000    0.000    0.000    0.000 calendar.py:57(__init__)
        1    0.000    0.000    0.000    0.000 container.py:46(BarContainer)
        1    0.000    0.000    0.000    0.000 deprecation.py:7(MatplotlibDeprecationWarning)
        1    0.000    0.000    0.000    0.000 cyaml.py:158(CDumper)
        1    0.000    0.000    0.000    0.000 decorator.py:46(get_init)
        1    0.000    0.000    0.000    0.000 _typing.py:145(DTypesComplex)
        1    0.000    0.000    0.000    0.000 profiler_util.py:373(Interval)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:780(LSQUnivariateSpline)
        1    0.000    0.000    0.000    0.000 _docscrape.py:101(ParseError)
        1    0.000    0.000    0.000    0.000 single.py:2483(NthLinearEulerEqNonhomogeneousVariationOfParameters)
        1    0.000    0.000    0.000    0.000 dataframes.py:43(DataFrameTracedOps)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1278(_TimelikeFormat)
        2    0.000    0.000    0.000    0.000 ordinals.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 libmpf.py:132(h_mask_big)
        1    0.000    0.000    0.000    0.000 patches.py:2080(RArrow)
        1    0.000    0.000    0.000    0.000 scalarstring.py:93(PlainScalarString)
        1    0.000    0.000    0.000    0.000 pathlib.py:347(_WildcardSelector)
        1    0.000    0.000    0.000    0.000 _static.py:65(Tuple)
        1    0.000    0.000    0.000    0.000 structure.py:5574(StructureError)
        1    0.000    0.000    0.000    0.000 _endian.py:48(BigEndianStructure)
        3    0.000    0.000    0.000    0.000 core.py:2493(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 spglib.py:75(SpglibError)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:672(FitSolverError)
        1    0.000    0.000    0.000    0.000 modules.py:1328(QuotientModuleElement)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1247(MeijerUnShiftC)
        1    0.000    0.000    0.000    0.000 sharding.py:21(_ShardingIterDataPipe)
        1    0.000    0.000    0.000    0.000 errors.py:73(SymbolicValueError)
        1    0.000    0.000    0.000    0.000 geo.py:304(HammerTransform)
        1    0.000    0.000    0.000    0.000 qs.py:36(FactorBaseElem)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:220(Stehfest)
        1    0.000    0.000    0.000    0.000 datapipes.py:30(PerRowDataFramesPipe)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2223(_TypeFormForm)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1341(SubArrayFormat)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:821(ContentType)
        1    0.000    0.000    0.000    0.000 _helpers.py:685(_dask_device)
        1    0.000    0.000    0.000    0.000 scalarstring.py:84(DoubleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 dataframes.py:178(CaptureA)
        1    0.000    0.000    0.000    0.000 core.py:3762(StringEnd)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1129(MeijerShiftB)
        1    0.000    0.000    0.000    0.000 boolalg.py:443(__hash__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1430(Vbox)
        1    0.000    0.000    0.000    0.000 pydoc.py:1545(_PlainTextDoc)
        1    0.000    0.000    0.000    0.000 numbers.py:3308(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 reduction.py:211(_C)
        1    0.000    0.000    0.000    0.000 graph.py:458(_CloneArgBeforeMutateMode)
        1    0.000    0.000    0.000    0.000 _ops.py:588(_PyOpNamespace)
        1    0.000    0.000    0.000    0.000 argparse.py:720(MetavarTypeHelpFormatter)
        1    0.000    0.000    0.000    0.000 constraints.py:481(_Symmetric)
        1    0.000    0.000    0.000    0.000 contextlib.py:340(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:2079(AutoWidthChar)
        1    0.000    0.000    0.000    0.000 instancenorm.py:77(InstanceNorm1d)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:97(BaseTorchDispatchMode)
        1    0.000    0.000    0.000    0.000 pathlib.py:378(_RecursiveWildcardSelector)
        1    0.000    0.000    0.000    0.000 constraints.py:380(_HalfOpenInterval)
        1    0.000    0.000    0.000    0.000 polyutils.py:47(RankWarning)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1222(IntegerFormat)
        1    0.000    0.000    0.000    0.000 configparser.py:190(DuplicateSectionError)
        1    0.000    0.000    0.000    0.000 inputs.py:3071(UnknownPotcarWarning)
        1    0.000    0.000    0.000    0.000 _pep440.py:141(<lambda>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:155(PolificationFailed)
        1    0.000    0.000    0.000    0.000 core.py:2378(__init__)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:182(Tokenizer)
        1    0.000    0.000    0.000    0.000 patches.py:2200(Round4)
        1    0.000    0.000    0.000    0.000 unix_events.py:798(_UnixSubprocessTransport)
        1    0.000    0.000    0.000    0.000 libhyper.py:43(NoConvergence)
        1    0.000    0.000    0.000    0.000 client.py:1470(UnknownProtocol)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:949(SingletonMeta)
        1    0.000    0.000    0.000    0.000 geo.py:280(InvertedAitoffTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:10(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:2040(AutoHeightChar)
        1    0.000    0.000    0.000    0.000 dataframes.py:187(CaptureLikeMock)
        1    0.000    0.000    0.000    0.000 mathtext.py:1318(STIXSansFontConstants)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(BadRequiredStrength)
        1    0.000    0.000    0.000    0.000 parsing.py:52(NotParenUncert)
        1    0.000    0.000    0.000    0.000 events.py:151(DocumentEndEvent)
        1    0.000    0.000    0.000    0.000 fused.py:31(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 importer.py:16(ObjNotFoundError)
        1    0.000    0.000    0.000    0.000 _filter_design.py:38(BadCoefficients)
        1    0.000    0.000    0.000    0.000 case.py:33(_ShouldStop)
        1    0.000    0.000    0.000    0.000 request.py:641(HTTPDefaultErrorHandler)
        1    0.000    0.000    0.000    0.000 core.py:893(_MaskedUFunc)
        1    0.000    0.000    0.000    0.000 misc.py:13(Undecidable)
        1    0.000    0.000    0.000    0.000 cache.py:45(__cacheit)
        1    0.000    0.000    0.000    0.000 _static.py:145(SpecifierSet)
        1    0.000    0.000    0.000    0.000 argparse.py:1009(_AppendAction)
        1    0.000    0.000    0.000    0.000 hb.py:377(<dictcomp>)
        1    0.000    0.000    0.000    0.000 instancenorm.py:192(InstanceNorm2d)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:364(split_symbols_custom)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1260(AnchoredText)
        1    0.000    0.000    0.000    0.000 core.py:720(NegativeStdDev)
        1    0.000    0.000    0.000    0.000 assumptions.py:680(ManagedProperties)
        1    0.000    0.000    0.000    0.000 __init__.py:50(InvalidLicenseExpression)
        1    0.000    0.000    0.000    0.000 tokens.py:303(AnchorToken)
        1    0.000    0.000    0.000    0.000 _array_api.py:582(<listcomp>)
        1    0.000    0.000    0.000    0.000 optimization.py:58(Secant)
        1    0.000    0.000    0.000    0.000 dataframes.py:205(CaptureCall)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:13(IntegrationWarning)
        1    0.000    0.000    0.000    0.000 outputs.py:4533(VaspParseError)
        1    0.000    0.000    0.000    0.000 events.py:108(StreamStartEvent)
        1    0.000    0.000    0.000    0.000 suite.py:375(_DebugResult)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:18(SymbolicContext)
        1    0.000    0.000    0.000    0.000 __init__.py:414(_make_alias)
        1    0.000    0.000    0.000    0.000 function.py:867(UndefSageHelper)
        1    0.000    0.000    0.000    0.000 _array_like.py:160(_UnknownType)
        1    0.000    0.000    0.000    0.000 geo.py:349(MollweideTransform)
        1    0.000    0.000    0.000    0.000 _shgo.py:1529(LMap)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:158(__init__)
        1    0.000    0.000    0.000    0.000 polysys.py:35(SolveFailed)
        1    0.000    0.000    0.000    0.000 errors.py:1(Error)
        1    0.000    0.000    0.000    0.000 vq.py:84(ClusterError)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:86(ParenthesisGroup)
        1    0.000    0.000    0.000    0.000 _typing.py:215(__init__)
        1    0.000    0.000    0.000    0.000 _utils.py:769(_ClassPropertyDescriptor)
        1    0.000    0.000    0.000    0.000 polar.py:185(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(LimitOverrunError)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:25(GuardOnDataDependentSymNode)
        1    0.000    0.000    0.000    0.000 sympify.py:49(CantSympify)
        1    0.000    0.000    0.000    0.000 __init__.py:1261(PlaceHolder)
        1    0.000    0.000    0.000    0.000 spawn.py:163(SpawnContext)
        1    0.000    0.000    0.000    0.000 errors.py:23(UnknownFileType)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:333(_mode_formula)
        1    0.000    0.000    0.000    0.000 request.py:1244(ProxyDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 pooling.py:1199(AdaptiveAvgPool3d)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:458(_ExperimentalConfiguration)
        1    0.000    0.000    0.000    0.000 function.py:107(ArgumentIndexError)
        1    0.000    0.000    0.000    0.000 unicode.py:307(Thai)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 fused.py:67(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 geo.py:458(InvertedLambertTransform)
        1    0.000    0.000    0.000    0.000 units.py:189(Registry)
        1    0.000    0.000    0.000    0.000 ticker.py:1889(NullLocator)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:807(ParameterizedHeaderValue)
        1    0.000    0.000    0.000    0.000 _parser.py:29(Variable)
        1    0.000    0.000    0.000    0.000 error.py:248(MantissaNoDotYAML1_1Warning)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1228(DrawEvent)
        1    0.000    0.000    0.000    0.000 dviread.py:734(Tfm)
        1    0.000    0.000    0.000    0.000 configparser.py:340(MissingSectionHeaderError)
        1    0.000    0.000    0.000    0.000 _ode.py:767(IntegratorConcurrencyError)
        1    0.000    0.000    0.000    0.000 mock.py:40(InvalidSpecError)
        1    0.000    0.000    0.000    0.000 libmpf.py:43(ComplexResult)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:885(_PatchedFnSetItem)
        1    0.000    0.000    0.000    0.000 fused.py:94(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 _base.py:19(SparseWarning)
        1    0.000    0.000    0.000    0.000 diophantine.py:1107(CubicThue)
        1    0.000    0.000    0.000    0.000 codeprinter.py:37(PrintMethodNotImplementedError)
        1    0.000    0.000    0.000    0.000 pooling.py:1078(AdaptiveMaxPool3d)
        1    0.000    0.000    0.000    0.000 batchnorm.py:233(BatchNorm1d)
        1    0.000    0.000    0.000    0.000 _arffread.py:54(ArffError)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1173(_DOF_estimator_min_E)
        1    0.000    0.000    0.000    0.000 profiler_util.py:613(StringTable)
        1    0.000    0.000    0.000    0.000 constraints.py:222(_Boolean)
        1    0.000    0.000    0.000    0.000 solvers.py:18(PolyNonlinearError)
        2    0.000    0.000    0.000    0.000 ordinals.py:83(<listcomp>)
        1    0.000    0.000    0.000    0.000 client.py:1507(BadStatusLine)
        1    0.000    0.000    0.000    0.000 graph.py:494(_AllowMutationOnSavedContext)
        1    0.000    0.000    0.000    0.000 pathlib.py:834(PurePosixPath)
        1    0.000    0.000    0.000    0.000 argparse.py:669(RawDescriptionHelpFormatter)
        1    0.000    0.000    0.000    0.000 _exceptions.py:71(_UFuncCastingError)
        1    0.000    0.000    0.000    0.000 container.py:103(StemContainer)
        1    0.000    0.000    0.000    0.000 dumper.py:171(RoundTripDumper)
        1    0.000    0.000    0.000    0.000 datapipe.py:372(_MapDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 types.py:26(SymInt)
        1    0.000    0.000    0.000    0.000 argparse.py:975(_StoreTrueAction)
        1    0.000    0.000    0.000    0.000 _linesearch.py:23(LineSearchWarning)
        1    0.000    0.000    0.000    0.000 patches.py:3147(CurveFilledAB)
        2    0.000    0.000    0.000    0.000 rcsetup.py:400(validate_fontsize_None)
        1    0.000    0.000    0.000    0.000 mock.py:2112(AsyncMagicMixin)
        1    0.000    0.000    0.000    0.000 ordinals.py:253(OrdinalZero)
        1    0.000    0.000    0.000    0.000 context.py:302(ForkContext)
        2    0.000    0.000    0.000    0.000 version.py:511(_parse_local_version)
        1    0.000    0.000    0.000    0.000 calendar.py:162(setfirstweekday)
        1    0.000    0.000    0.000    0.000 bezier.py:25(NonIntersectingPathException)
        1    0.000    0.000    0.000    0.000 _nonlin.py:32(NoConvergence)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1200(MeijerUnShiftB)
        1    0.000    0.000    0.000    0.000 engine.py:20(DiagnosticError)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:115(GimpGradientFile)
        1    0.000    0.000    0.000    0.000 context.py:310(ForkServerContext)
        1    0.000    0.000    0.000    0.000 core.py:5174(OneOrMore)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1039(_ignorecase)
        1    0.000    0.000    0.000    0.000 analyzer.py:66(SymmetryUndeterminedError)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:262(RandomDisplacement)
        1    0.000    0.000    0.000    0.000 cyaml.py:70(CBaseDumper)
        1    0.000    0.000    0.000    0.000 calendar.py:33(IllegalWeekdayError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1118(MeijerShiftA)
        1    0.000    0.000    0.000    0.000 inputs.py:787(BadPoscarWarning)
        1    0.000    0.000    0.000    0.000 utils.py:117(_lazy_property_and_property)
        1    0.000    0.000    0.000    0.000 ticker.py:2883(AutoLocator)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:37(SmallSampleWarning)
        1    0.000    0.000    0.000    0.000 nodes.py:130(MappingNode)
        1    0.000    0.000    0.000    0.000 scalarint.py:82(BinaryInt)
        1    0.000    0.000    0.000    0.000 argparse.py:754(ArgumentError)
        1    0.000    0.000    0.000    0.000 exceptions.py:265(ParseException)
        1    0.000    0.000    0.000    0.000 _coo.py:1463(coo_matrix)
        1    0.000    0.000    0.000    0.000 core.py:5305(_NullToken)
        1    0.000    0.000    0.000    0.000 deprecation.py:325(_deprecated_parameter_class)
        1    0.000    0.000    0.000    0.000 configparser.py:264(InterpolationMissingOptionError)
        1    0.000    0.000    0.000    0.000 error.py:73(ContentTooShortError)
        1    0.000    0.000    0.000    0.000 rl.py:83(sort)
        1    0.000    0.000    0.000    0.000 singleton.py:158(Singleton)
        1    0.000    0.000    0.000    0.000 _guards.py:205(GuardEnvExpr)
        1    0.000    0.000    0.000    0.000 __init__.py:82(is_available)
        1    0.000    0.000    0.000    0.000 mathtext.py:1829(Hrule)
        1    0.000    0.000    0.000    0.000 errors.py:47(CloseBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1449(PickEvent)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:256(MatlabFunction)
        1    0.000    0.000    0.000    0.000 dataframes.py:268(CaptureGetItem)
        1    0.000    0.000    0.000    0.000 animation.py:613(FFMpegWriter)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:537(Bunch)
        1    0.000    0.000    0.000    0.000 events.py:237(SequenceStartEvent)
        1    0.000    0.000    0.000    0.000 __init__.py:270(TarError)
        1    0.000    0.000    0.000    0.000 zipfile.py:43(BadZipFile)
        1    0.000    0.000    0.000    0.000 process.py:349(AuthenticationString)
        1    0.000    0.000    0.000    0.000 _utils.py:603(KeyErrorMessage)
        1    0.000    0.000    0.000    0.000 mathtext.py:1932(Fil)
        1    0.000    0.000    0.000    0.000 _common.py:163(ZoneInfoNotFoundError)
        1    0.000    0.000    0.000    0.000 line.py:2834(Segment3D)
        1    0.000    0.000    0.000    0.000 single.py:37(ODEMatchError)
        1    0.000    0.000    0.000    0.000 modules.py:1867(InnerEndomorphism)
        1    0.000    0.000    0.000    0.000 util.py:385(ForkAwareLocal)
        1    0.000    0.000    0.000    0.000 package_importer.py:658(_PathNode)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:313(default_pg)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:273(_ExtensionsSpecialForm)
        1    0.000    0.000    0.000    0.000 _exceptions.py:98(_UFuncOutputCastingError)
        1    0.000    0.000    0.000    0.000 ticker.py:1202(LogFormatterSciNotation)
        1    0.000    0.000    0.000    0.000 core.py:2500(_SingleCharLiteral)
        1    0.000    0.000    0.000    0.000 _bvp.py:515(BVPResult)
        1    0.000    0.000    0.000    0.000 argparse.py:1144(_ChoicesPseudoAction)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1035(UnShiftA)
        1    0.000    0.000    0.000    0.000 profiler_util.py:622(MemRecordsAcc)
        1    0.000    0.000    0.000    0.000 ticker.py:434(OldScalarFormatter)
        1    0.000    0.000    0.000    0.000 core.py:5012(Located)
        1    0.000    0.000    0.000    0.000 core.py:822(_DomainTan)
        1    0.000    0.000    0.000    0.000 isoparser.py:43(__init__)
        1    0.000    0.000    0.000    0.000 six.py:245(_MovedItems)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3571(ShowBase)
        1    0.000    0.000    0.000    0.000 errors.py:33(InvalidConfigError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:57(OperationNotSupported)
        1    0.000    0.000    0.000    0.000 core.py:148(MAError)
        1    0.000    0.000    0.000    0.000 _tzpath.py:170(InvalidTZPathWarning)
        1    0.000    0.000    0.000    0.000 _sf_error.py:5(SpecialFunctionWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:3(GeometryError)
        1    0.000    0.000    0.000    0.000 exceptions.py:13(DMError)
        1    0.000    0.000    0.000    0.000 _factories.py:55(_TzStrFactory)
        1    0.000    0.000    0.000    0.000 optimization.py:213(Muller)
        1    0.000    0.000    0.000    0.000 instancenorm.py:308(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 batchnorm.py:341(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 gradcheck.py:18(GradcheckError)
        1    0.000    0.000    0.000    0.000 exceptions.py:189(DTypePromotionError)
        1    0.000    0.000    0.000    0.000 dates.py:1583(WeekdayLocator)
        1    0.000    0.000    0.000    0.000 unicode.py:258(Katakana)
        1    0.000    0.000    0.000    0.000 __init__.py:519(FileHash)
        1    0.000    0.000    0.000    0.000 tokens.py:210(DocumentStartToken)
        1    0.000    0.000    0.000    0.000 _typing.py:22(GenericMeta)
        1    0.000    0.000    0.000    0.000 serialization.py:52(SourceChangeWarning)
        1    0.000    0.000    0.000    0.000 patches.py:3077(CurveB)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:650(MIMEVersion)
        1    0.000    0.000    0.000    0.000 io.py:25(EncodingWarning)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1823(tol)
        1    0.000    0.000    0.000    0.000 _script.py:352(ConstMap)
        1    0.000    0.000    0.000    0.000 socket.py:211(_GiveupOnSendfile)
        1    0.000    0.000    0.000    0.000 <decorator-gen-2>:1(<module>)
        1    0.000    0.000    0.000    0.000 _pep440.py:129(InvalidVersion)
        1    0.000    0.000    0.000    0.000 facts.py:565(InconsistentAssumptions)
        1    0.000    0.000    0.000    0.000 optimization.py:517(ANewton)
        1    0.000    0.000    0.000    0.000 fused.py:140(LinearTanh)
        1    0.000    0.000    0.000    0.000 activation.py:337(Tanh)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(ComplexWarning)
        1    0.000    0.000    0.000    0.000 scanner.py:2030(FullLineComment)
        1    0.000    0.000    0.000    0.000 datapipes.py:59(ShuffleDataFramesPipe)
        1    0.000    0.000    0.000    0.000 package_exporter.py:120(EmptyMatchError)
        1    0.000    0.000    0.000    0.000 {built-in method _abc.get_cache_token}
        1    0.000    0.000    0.000    0.000 _multivariate.py:4083(random_correlation_frozen)
        1    0.000    0.000    0.000    0.000 systems.py:32(ODEOrderError)
        1    0.000    0.000    0.000    0.000 logic.py:391(Or)
        1    0.000    0.000    0.000    0.000 conflict.py:3(AmbiguityWarning)
        1    0.000    0.000    0.000    0.000 fused.py:22(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 diophantine.py:918(InhomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 polyoptions.py:44(Flag)
        1    0.000    0.000    0.000    0.000 polynomial.py:29(RankWarning)
        1    0.000    0.000    0.000    0.000 tz.py:1156(_tzicalvtzcomp)
        1    0.000    0.000    0.000    0.000 mathtext.py:2025(SubSuperCluster)
        1    0.000    0.000    0.000    0.000 unicode.py:154(LatinB)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:268(MatlabOpaque)
        1    0.000    0.000    0.000    0.000 loader.py:39(SafeLoader)
        1    0.000    0.000    0.000    0.000 queues.py:16(QueueFull)
        1    0.000    0.000    0.000    0.000 optimization.py:104(MNewton)
        1    0.000    0.000    0.000    0.000 constraints.py:398(_Simplex)
        1    0.000    0.000    0.000    0.000 diophantine.py:938(HomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 errors.py:27(CallHintViolationWarning)
        1    0.000    0.000    0.000    0.000 _elffile.py:19(ELFInvalid)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1837(SmoothSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 argparse.py:774(ArgumentTypeError)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:41(pretty_use_unicode)
        1    0.000    0.000    0.000    0.000 request.py:1641(DataHandler)
        1    0.000    0.000    0.000    0.000 enum.py:769(__getitem__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1950(NegFil)
        1    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(<module>)
        1    0.000    0.000    0.000    0.000 fused.py:10(_FusedModule)
        1    0.000    0.000    0.000    0.000 request.py:1061(ProxyBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 exceptions.py:33(UnknownConstraint)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:706(Value)
        1    0.000    0.000    0.000    0.000 scalarint.py:118(DecimalInt)
        1    0.000    0.000    0.000    0.000 <decorator-gen-0>:1(<module>)
        1    0.000    0.000    0.000    0.000 fused.py:76(ConvBnReLU2d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1615(_DefaultMixin)
        1    0.000    0.000    0.000    0.000 __init__.py:240(c_char_p)
        1    0.000    0.000    0.000    0.000 __init__.py:78(UnidentifiedImageError)
        1    0.000    0.000    0.000    0.000 unicode.py:336(Devanagari)
        1    0.000    0.000    0.000    0.000 io.py:340(FileLockException)
        1    0.000    0.000    0.000    0.000 transforms.py:453(MellinTransformStripError)
        1    0.000    0.000    0.000    0.000 orderings.py:54(ReversedGradedLexOrder)
        1    0.000    0.000    0.000    0.000 _base.py:45(Error)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1140(MeijerShiftC)
        1    0.000    0.000    0.000    0.000 ticker.py:395(FormatStrFormatter)
        1    0.000    0.000    0.000    0.000 exceptions.py:40(UnknownEditVariable)
        1    0.000    0.000    0.000    0.000 hierarchy.py:157(ClusterWarning)
        1    0.000    0.000    0.000    0.000 fetch.py:45(_MapDatasetFetcher)
        1    0.000    0.000    0.000    0.000 activation.py:784(LogSigmoid)
        1    0.000    0.000    0.000    0.000 __init__.py:14(_Await)
        1    0.000    0.000    0.000    0.000 scanner.py:57(SimpleKey)
        1    0.000    0.000    0.000    0.000 _comparison.py:306(UnsupportedInputs)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:360(_unspecified)
        1    0.000    0.000    0.000    0.000 backend_managers.py:20(ToolTriggerEvent)
        1    0.000    0.000    0.000    0.000 unicode.py:148(LatinA)
        1    0.000    0.000    0.000    0.000 <decorator-gen-4>:1(<module>)
        1    0.000    0.000    0.000    0.000 _csr.py:314(csr_array)
        1    0.000    0.000    0.000    0.000 net_min_base.py:31(FxNetMinimizerBadModuleError)
        2    0.000    0.000    0.000    0.000 groundtypes.py:22(__init__)
        1    0.000    0.000    0.000    0.000 dataframes.py:39(CaptureControl)
        1    0.000    0.000    0.000    0.000 dataframes.py:231(CaptureVariableAssign)
        1    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 configparser.py:216(DuplicateOptionError)
        1    0.000    0.000    0.000    0.000 _dok.py:536(dok_array)
        1    0.000    0.000    0.000    0.000 core.py:115(switch)
        1    0.000    0.000    0.000    0.000 dropout.py:195(AlphaDropout)
        1    0.000    0.000    0.000    0.000 serialization.py:264(_open_buffer_writer)
        1    0.000    0.000    0.000    0.000 legend_handler.py:637(HandlerTuple)
        1    0.000    0.000    0.000    0.000 _parser.py:1608(UnknownTimezoneWarning)
        1    0.000    0.000    0.000    0.000 activation.py:1465(Softmax2d)
        1    0.000    0.000    0.000    0.000 _parser.py:661(_result)
        1    0.000    0.000    0.000    0.000 unicode.py:282(Hangul)
        1    0.000    0.000    0.000    0.000 __init__.py:281(sic)
        1    0.000    0.000    0.000    0.000 scanner.py:2037(BlankLineComment)
        1    0.000    0.000    0.000    0.000 fused.py:40(LinearReLU)
        1    0.000    0.000    0.000    0.000 results.py:19(<genexpr>)
        1    0.000    0.000    0.000    0.000 wavfile.py:27(WavFileWarning)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:216(SqrtdenestStopIteration)
        1    0.000    0.000    0.000    0.000 dates.py:1637(HourLocator)
        1    0.000    0.000    0.000    0.000 dates.py:1657(MinuteLocator)
        1    0.000    0.000    0.000    0.000 warnings.py:89(InformationOnly)
        1    0.000    0.000    0.000    0.000 utils.py:18(InvalidName)
        1    0.000    0.000    0.000    0.000 exceptions.py:18(DMBadInputError)
        1    0.000    0.000    0.000    0.000 exceptions.py:48(DMShapeError)
        1    0.000    0.000    0.000    0.000 _script.py:323(_CachedForward)
        1    0.000    0.000    0.000    0.000 __init__.py:13(_PyFutureMeta)
        1    0.000    0.000    0.000    0.000 __init__.py:201(DeferredCudaCallError)
        1    0.000    0.000    0.000    0.000 threading.py:1400(_MainThread)
        1    0.000    0.000    0.000    0.000 geo.py:390(InvertedMollweideTransform)
        1    0.000    0.000    0.000    0.000 ticker.py:414(StrMethodFormatter)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:845(MsgID)
        1    0.000    0.000    0.000    0.000 ctx_base.py:21(Context)
        1    0.000    0.000    0.000    0.000 pickle.py:73(PickleError)
        1    0.000    0.000    0.000    0.000 animation.py:735(ImageMagickWriter)
        1    0.000    0.000    0.000    0.000 _script.py:328(ScriptWarning)
        1    0.000    0.000    0.000    0.000 composition.py:1396(CompositionError)
        1    0.000    0.000    0.000    0.000 _spectral.py:11(_NoConvergence)
        1    0.000    0.000    0.000    0.000 nodes.py:107(CollectionNode)
        1    0.000    0.000    0.000    0.000 _sf_error.py:13(SpecialFunctionError)
        1    0.000    0.000    0.000    0.000 argparse.py:1074(_CountAction)
        1    0.000    0.000    0.000    0.000 geo.py:322(InvertedHammerTransform)
        1    0.000    0.000    0.000    0.000 _ltisys.py:814(TransferFunctionDiscrete)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:98(ExponentialFloat)
        1    0.000    0.000    0.000    0.000 inputs.py:1178(BadIncarWarning)
        1    0.000    0.000    0.000    0.000 argparse.py:952(_StoreConstAction)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1298(MeijerUnShiftD)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1200(InverseHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 activation.py:1338(Tanhshrink)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1207(Event)
        1    0.000    0.000    0.000    0.000 __init__.py:735(OutsideDestinationError)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:2163(RectSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 _codata.py:2116(ConstantWarning)
        1    0.000    0.000    0.000    0.000 outputs.py:5916(UnconvergedVASPWarning)
        1    0.000    0.000    0.000    0.000 optimization.py:458(Ridder)
        1    0.000    0.000    0.000    0.000 datapipes.py:83(FilterDataFramesPipe)
        1    0.000    0.000    0.000    0.000 dropout.py:104(Dropout2d)
        1    0.000    0.000    0.000    0.000 _internal.py:244(c_void_p)
        1    0.000    0.000    0.000    0.000 _parser.py:34(Value)
        1    0.000    0.000    0.000    0.000 fused.py:104(BNReLU2d)
        1    0.000    0.000    0.000    0.000 dataframes.py:311(CaptureMul)
        1    0.000    0.000    0.000    0.000 linalg.py:67(LinAlgError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1076(UnShiftB)
        1    0.000    0.000    0.000    0.000 ivp.py:24(OdeResult)
        1    0.000    0.000    0.000    0.000 main.py:773(<listcomp>)
        1    0.000    0.000    0.000    0.000 _testutils.py:51(FPUModeChangeWarning)
        1    0.000    0.000    0.000    0.000 polyoptions.py:61(OptionType)
        1    0.000    0.000    0.000    0.000 __init__.py:14(is_available)
        1    0.000    0.000    0.000    0.000 fused.py:49(ConvBn1d)
        1    0.000    0.000    0.000    0.000 specifiers.py:32(InvalidSpecifier)
        1    0.000    0.000    0.000    0.000 util.py:108(_platform_supports_abstract_sockets)
        1    0.000    0.000    0.000    0.000 ticker.py:1138(LogFormatterExponent)
        1    0.000    0.000    0.000    0.000 dropout.py:237(FeatureAlphaDropout)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:205(SpectralNormStateDictHook)
        1    0.000    0.000    0.000    0.000 _iotools.py:421(ConverterError)
        1    0.000    0.000    0.000    0.000 patches.py:2726(Bar)
        1    0.000    0.000    0.000    0.000 events.py:123(StreamEndEvent)
        1    0.000    0.000    0.000    0.000 __init__.py:11(_PyAwaitMeta)
        1    0.000    0.000    0.000    0.000 __init__.py:256(c_wchar_p)
        1    0.000    0.000    0.000    0.000 dates.py:1677(SecondLocator)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2625(NonGuiException)
        1    0.000    0.000    0.000    0.000 fused.py:58(ConvBn2d)
        1    0.000    0.000    0.000    0.000 process.py:397(_MainProcess)
        1    0.000    0.000    0.000    0.000 legend_handler.py:689(HandlerPolyCollection)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:285(MinimizerWrapper)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:225(mat_struct)
        1    0.000    0.000    0.000    0.000 representer.py:48(RepresenterError)
        1    0.000    0.000    0.000    0.000 exceptions.py:10(CancelledError)
        1    0.000    0.000    0.000    0.000 simplex.py:77(UnboundedLPError)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:39(GaloisGroupException)
        1    0.000    0.000    0.000    0.000 dropout.py:153(Dropout3d)
        1    0.000    0.000    0.000    0.000 threading.py:1199(daemon)
        1    0.000    0.000    0.000    0.000 operations.py:483(ShortCircuit)
        1    0.000    0.000    0.000    0.000 legend_handler.py:412(HandlerPathCollection)
        1    0.000    0.000    0.000    0.000 figure.py:154(AxesStack)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:281(ReadSubprocessPipeProto)
        1    0.000    0.000    0.000    0.000 units.py:144(UnitError)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:161(JitTypeTraceConfig)
        1    0.000    0.000    0.000    0.000 zipfile.py:47(LargeZipFile)
        1    0.000    0.000    0.000    0.000 errors.py:81(DistutilsPlatformError)
        1    0.000    0.000    0.000    0.000 <decorator-gen-3>:1(<module>)
        1    0.000    0.000    0.000    0.000 _csc.py:179(csc_array)
        1    0.000    0.000    0.000    0.000 coreerrors.py:6(BaseCoreError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1255(ResizeEvent)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:9(ReentrancyError)
        1    0.000    0.000    0.000    0.000 _sparse.py:6(SparseABC)
        1    0.000    0.000    0.000    0.000 _docscrape.py:615(ObjDoc)
        1    0.000    0.000    0.000    0.000 units.py:54(ConversionError)
        1    0.000    0.000    0.000    0.000 Image.py:70(DecompressionBombWarning)
        1    0.000    0.000    0.000    0.000 mathtext.py:1944(Filll)
        1    0.000    0.000    0.000    0.000 net_min_base.py:40(FxNetMinimizerRunFuncError)
        1    0.000    0.000    0.000    0.000 csv.py:64(excel_tab)
        1    0.000    0.000    0.000    0.000 extras.py:319(_fromnxfunction_allargs)
        1    0.000    0.000    0.000    0.000 container.py:71(ErrorbarContainer)
        1    0.000    0.000    0.000    0.000 parse.py:323(SplitResult)
        1    0.000    0.000    0.000    0.000 patches.py:2570(Angle)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3828(ortho_group_frozen)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4243(unitary_group_frozen)
        1    0.000    0.000    0.000    0.000 transforms.py:1516(InverseHankelTransform)
        1    0.000    0.000    0.000    0.000 functions.py:138(NoShapeError)
        1    0.000    0.000    0.000    0.000 optimization.py:602(MDNewton)
        1    0.000    0.000    0.000    0.000 dataframes.py:298(CaptureAdd)
        1    0.000    0.000    0.000    0.000 scalarint.py:109(HexCapsInt)
        1    0.000    0.000    0.000    0.000 mathtext.py:1956(NegFill)
        1    0.000    0.000    0.000    0.000 util.py:167(UnboundedMemo)
        1    0.000    0.000    0.000    0.000 __init__.py:752(LinkOutsideDestinationError)
        1    0.000    0.000    0.000    0.000 dumper.py:71(SafeDumper)
        1    0.000    0.000    0.000    0.000 case.py:334(_OrderedChainMap)
        1    0.000    0.000    0.000    0.000 configparser.py:243(NoOptionError)
        1    0.000    0.000    0.000    0.000 events.py:253(MappingStartEvent)
        1    0.000    0.000    0.000    0.000 serializer.py:29(SerializerError)
        1    0.000    0.000    0.000    0.000 fused.py:123(LinearBn1d)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1235(BoolFormat)
        1    0.000    0.000    0.000    0.000 exceptions.py:20(_ExceptionWordUnicodeSet)
        2    0.000    0.000    0.000    0.000 ops.py:173(no_complex_result)
        1    0.000    0.000    0.000    0.000 transforms.py:1454(HankelTransform)
        1    0.000    0.000    0.000    0.000 fused.py:85(ConvBn3d)
        1    0.000    0.000    0.000    0.000 client.py:1519(RemoteDisconnected)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(ModuleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:165(c_short)
        1    0.000    0.000    0.000    0.000 patches.py:3314(BarAB)
        1    0.000    0.000    0.000    0.000 version.py:59(InvalidVersion)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1022(ShiftB)
        1    0.000    0.000    0.000    0.000 _optimize.py:157(OptimizeWarning)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:33(FitError)
        1    0.000    0.000    0.000    0.000 argparse.py:1242(_ExtendAction)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:700(Section)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:366(ObjectiveFunWrapper)
        1    0.000    0.000    0.000    0.000 tokens.py:321(ScalarToken)
        1    0.000    0.000    0.000    0.000 index_methods.py:22(IndexConformanceException)
        1    0.000    0.000    0.000    0.000 optimization.py:357(Illinois)
        1    0.000    0.000    0.000    0.000 config.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:3094(CurveAB)
        1    0.000    0.000    0.000    0.000 mathtext.py:1070(StixSansFonts)
        1    0.000    0.000    0.000    0.000 patches.py:2532(Angle3)
        1    0.000    0.000    0.000    0.000 emitter.py:1777(RoundTripEmitter)
        1    0.000    0.000    0.000    0.000 __init__.py:25(clear_distutils)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:212(Token)
        1    0.000    0.000    0.000    0.000 facts.py:252(TautologyDetected)
        1    0.000    0.000    0.000    0.000 gzip.py:117(BadGzipFile)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:169(_LRScheduler)
        1    0.000    0.000    0.000    0.000 patches.py:3274(BracketA)
        1    0.000    0.000    0.000    0.000 requirements.py:15(InvalidRequirement)
        1    0.000    0.000    0.000    0.000 evalf.py:65(PrecisionExhausted)
        1    0.000    0.000    0.000    0.000 pathlib.py:844(PureWindowsPath)
        2    0.000    0.000    0.000    0.000 groundtypes.py:26(__init__)
        1    0.000    0.000    0.000    0.000 configparser.py:254(InterpolationError)
        1    0.000    0.000    0.000    0.000 _coo.py:1352(coo_array)
        1    0.000    0.000    0.000    0.000 _typing.py:68(SupportsArrayNamespace)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:354(deHoog)
        1    0.000    0.000    0.000    0.000 fused.py:131(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 errors.py:89(DistutilsExecError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1002(MultOperator)
        1    0.000    0.000    0.000    0.000 more.py:3661(AbortThread)
        1    0.000    0.000    0.000    0.000 parse.py:135(_ResultMixinBytes)
        1    0.000    0.000    0.000    0.000 index_tricks.py:537(CClass)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1979(LSQSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 repmatrix.py:186(<genexpr>)
        1    0.000    0.000    0.000    0.000 exceptions.py:24(NonPositiveDefiniteMatrixError)
        1    0.000    0.000    0.000    0.000 _arffread.py:58(ParseArffError)
        1    0.000    0.000    0.000    0.000 extras.py:281(_fromnxfunction_seq)
        1    0.000    0.000    0.000    0.000 dates.py:1611(DayLocator)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1336(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 pathlib.py:325(_TerminatingSelector)
        1    0.000    0.000    0.000    0.000 patches.py:3129(CurveFilledB)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:828(ContentDisposition)
        1    0.000    0.000    0.000    0.000 scalarint.py:100(HexInt)
        1    0.000    0.000    0.000    0.000 constructor.py:47(ConstructorError)
        1    0.000    0.000    0.000    0.000 cyaml.py:54(CLoader)
        1    0.000    0.000    0.000    0.000 zipfile.py:641(LZMADecompressor)
        1    0.000    0.000    0.000    0.000 eigen.py:38(Eigen)
        1    0.000    0.000    0.000    0.000 dataframes.py:337(CaptureGetAttr)
        1    0.000    0.000    0.000    0.000 __init__.py:310(first_invoke)
        1    0.000    0.000    0.000    0.000 _fortran.py:13(FortranEOFError)
        1    0.000    0.000    0.000    0.000 dumper.py:121(Dumper)
        1    0.000    0.000    0.000    0.000 mathtext.py:1840(Vrule)
        1    0.000    0.000    0.000    0.000 _dia.py:528(dia_array)
        1    0.000    0.000    0.000    0.000 test.py:53(<listcomp>)
        1    0.000    0.000    0.000    0.000 solveset.py:794(_SolveTrig1Error)
        1    0.000    0.000    0.000    0.000 constraints.py:427(_LowerTriangular)
        1    0.000    0.000    0.000    0.000 {method 'isdecimal' of 'str' objects}
        1    0.000    0.000    0.000    0.000 pathlib.py:1398(WindowsPath)
        1    0.000    0.000    0.000    0.000 transforms.py:2725(TransformedPatchPath)
        1    0.000    0.000    0.000    0.000 setupcfg.py:779(_DeprecatedConfig)
        1    0.000    0.000    0.000    0.000 galoisgroups.py:35(MaxTriesException)
        1    0.000    0.000    0.000    0.000 pathlib.py:1391(PosixPath)
        1    0.000    0.000    0.000    0.000 shutil.py:64(SameFileError)
        1    0.000    0.000    0.000    0.000 patches.py:3111(CurveFilledA)
        1    0.000    0.000    0.000    0.000 exceptions.py:4(ClosureFailure)
        1    0.000    0.000    0.000    0.000 _fortran.py:24(FortranFormattingError)
        1    0.000    0.000    0.000    0.000 backend_tools.py:721(ConfigureSubplotsBase)
        1    0.000    0.000    0.000    0.000 mathtext.py:1437(Hbox)
        1    0.000    0.000    0.000    0.000 mathtext.py:1938(Fill)
        1    0.000    0.000    0.000    0.000 random.py:811(seed)
        1    0.000    0.000    0.000    0.000 _bsr.py:660(bsr_array)
        1    0.000    0.000    0.000    0.000 constraints.py:303(_Real)
        1    0.000    0.000    0.000    0.000 function.py:583(_nested_map)
        1    0.000    0.000    0.000    0.000 shutil.py:61(Error)
        1    0.000    0.000    0.000    0.000 boolalg.py:371(__eq__)
        1    0.000    0.000    0.000    0.000 context.py:14(ProcessError)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1699(StateSpaceDiscrete)
        1    0.000    0.000    0.000    0.000 loader.py:55(Loader)
        1    0.000    0.000    0.000    0.000 _typing.py:134(DTypesIntegral)
        1    0.000    0.000    0.000    0.000 indexed.py:120(IndexException)
        1    0.000    0.000    0.000    0.000 coreerrors.py:10(NonCommutativeExpression)
        1    0.000    0.000    0.000    0.000 kind.py:48(Kind)
        1    0.000    0.000    0.000    0.000 optimization.py:290(Bisection)
        1    0.000    0.000    0.000    0.000 graph.py:419(_Handle)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:747(AbsoluteLinkError)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1586(Specie)
        1    0.000    0.000    0.000    0.000 _lil.py:505(lil_array)
        1    0.000    0.000    0.000    0.000 _pep440.py:150(<lambda>)
        1    0.000    0.000    0.000    0.000 factorials.py:281(MultiFactorial)
        1    0.000    0.000    0.000    0.000 alphabets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:830(__init__)
        1    0.000    0.000    0.000    0.000 _base.py:49(CancelledError)
        1    0.000    0.000    0.000    0.000 argparse.py:680(RawTextHelpFormatter)
        1    0.000    0.000    0.000    0.000 errors.py:55(DistutilsFileError)
        1    0.000    0.000    0.000    0.000 groundtypes.py:25(_GMPYRational)
        1    0.000    0.000    0.000    0.000 release.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _monitor.py:9(TqdmSynchronisationWarning)
        1    0.000    0.000    0.000    0.000 tarfile.py:276(CompressionError)
        1    0.000    0.000    0.000    0.000 bdist.py:21(deprecated)
        1    0.000    0.000    0.000    0.000 tokens.py:231(StreamEndToken)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1151(MeijerShiftD)
        1    0.000    0.000    0.000    0.000 exceptions.py:6(MatrixError)
        1    0.000    0.000    0.000    0.000 threading.py:832(<listcomp>)
        1    0.000    0.000    0.000    0.000 patches.py:2428(SimpleEvent)
        1    0.000    0.000    0.000    0.000 error.py:116(YAMLError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:193(UnstructuredTokenList)
        1    0.000    0.000    0.000    0.000 errors.py:9(CompileError)
        1    0.000    0.000    0.000    0.000 constraints.py:504(_PositiveDefinite)
        1    0.000    0.000    0.000    0.000 parse.py:347(ParseResultBytes)
        1    0.000    0.000    0.000    0.000 patches.py:3294(BracketB)
        1    0.000    0.000    0.000    0.000 mathtext.py:1968(SsGlue)
        1    0.000    0.000    0.000    0.000 quadrature.py:389(GaussLegendre)
        1    0.000    0.000    0.000    0.000 parse.py:342(SplitResultBytes)
        1    0.000    0.000    0.000    0.000 legend_handler.py:423(HandlerCircleCollection)
        1    0.000    0.000    0.000    0.000 identification.py:13(IdentificationMethods)
        1    0.000    0.000    0.000    0.000 context.py:306(SpawnContext)
        1    0.000    0.000    0.000    0.000 {method 'clear' of 'list' objects}
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:23(_apply_params)
        1    0.000    0.000    0.000    0.000 batchnorm.py:446(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 mathtext.py:1962(NegFilll)
        1    0.000    0.000    0.000    0.000 _lil.py:570(lil_matrix)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._set_madvise_hugepage}
        1    0.000    0.000    0.000    0.000 colors.py:1169(DivergingNorm)
        1    0.000    0.000    0.000    0.000 _parser.py:39(Op)
        1    0.000    0.000    0.000    0.000 resolver.py:102(ResolverError)
        1    0.000    0.000    0.000    0.000 pickle.py:77(PicklingError)
        1    0.000    0.000    0.000    0.000 __init__.py:260(IgnoredKeywordWarning)
        1    0.000    0.000    0.000    0.000 _miobase.py:31(MatWriteWarning)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:28(BadFortranFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:73(_96Bit)
        1    0.000    0.000    0.000    0.000 six.py:340(Module_six_moves_urllib_parse)
        1    0.000    0.000    0.000    0.000 iterables.py:3015(NotIterable)
        1    0.000    0.000    0.000    0.000 parser.py:98(ParserError)
        1    0.000    0.000    0.000    0.000 polyoptions.py:658(Polys)
        1    0.000    0.000    0.000    0.000 extras.py:294(_fromnxfunction_args)
        1    0.000    0.000    0.000    0.000 __init__.py:11(DeprecatedTzFormatWarning)
        1    0.000    0.000    0.000    0.000 _csr.py:437(csr_matrix)
        1    0.000    0.000    0.000    0.000 errors.py:12(MessageParseError)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:465(_ToolsTypoInMetadata)
        1    0.000    0.000    0.000    0.000 errors.py:5(PreprocessError)
        1    0.000    0.000    0.000    0.000 net_min_base.py:49(FxNetMinimizerResultMismatchError)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3403(Buffer)
        2    0.000    0.000    0.000    0.000 __init__.py:137(exec_module)
        1    0.000    0.000    0.000    0.000 util.py:102(_FifoCache)
        1    0.000    0.000    0.000    0.000 emitter.py:28(EmitterError)
        1    0.000    0.000    0.000    0.000 client.py:1514(LineTooLong)
        1    0.000    0.000    0.000    0.000 resolver.py:135(<dictcomp>)
        1    0.000    0.000    0.000    0.000 forward_ad.py:108(UnpackedDualTensor)
        1    0.000    0.000    0.000    0.000 mock.py:1188(Mock)
        1    0.000    0.000    0.000    0.000 connection.py:786(XmlListener)
        1    0.000    0.000    0.000    0.000 tarfile.py:270(ExtractError)
        1    0.000    0.000    0.000    0.000 events.py:248(SequenceEndEvent)
        1    0.000    0.000    0.000    0.000 scalarint.py:89(OctalInt)
        1    0.000    0.000    0.000    0.000 _adapters.py:143(__init__)
        1    0.000    0.000    0.000    0.000 events.py:264(MappingEndEvent)
        1    0.000    0.000    0.000    0.000 _dia.py:604(dia_matrix)
        1    0.000    0.000    0.000    0.000 exceptions.py:10(ShapeError)
        1    0.000    0.000    0.000    0.000 proxy.py:317(TraceError)
        1    0.000    0.000    0.000    0.000 context.py:319(suppress)
        1    0.000    0.000    0.000    0.000 _base.py:24(SparseFormatWarning)
        1    0.000    0.000    0.000    0.000 _base.py:28(SparseEfficiencyWarning)
        1    0.000    0.000    0.000    0.000 _iotools.py:437(ConversionWarning)
        1    0.000    0.000    0.000    0.000 error.py:232(UnsafeLoaderWarning)
        1    0.000    0.000    0.000    0.000 six.py:459(Module_six_moves_urllib_response)
        1    0.000    0.000    0.000    0.000 animation.py:685(AVConvFileWriter)
        1    0.000    0.000    0.000    0.000 errors.py:41(RemovedCommandError)
        1    0.000    0.000    0.000    0.000 core.py:270(ParseError)
        1    0.000    0.000    0.000    0.000 composer.py:27(ComposerError)
        1    0.000    0.000    0.000    0.000 transports.py:148(Transport)
        1    0.000    0.000    0.000    0.000 __init__.py:194(c_float)
        1    0.000    0.000    0.000    0.000 headerregistry.py:271(UniqueUnstructuredHeader)
        1    0.000    0.000    0.000    0.000 exceptions.py:39(StructureError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:122(UnsolvableFactorError)
        1    0.000    0.000    0.000    0.000 _typing.py:26(Integer)
        1    0.000    0.000    0.000    0.000 errors.py:64(InvalidMultipartContentTransferEncodingDefect)
        1    0.000    0.000    0.000    0.000 errors.py:33(OnnxExporterError)
        1    0.000    0.000    0.000    0.000 parse.py:328(ParseResult)
        1    0.000    0.000    0.000    0.000 _subplots.py:218(<genexpr>)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:542(Cohen)
        1    0.000    0.000    0.000    0.000 dataframes.py:169(CaptureF)
        1    0.000    0.000    0.000    0.000 constraints.py:438(_LowerCholesky)
        1    0.000    0.000    0.000    0.000 tarfile.py:297(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 discovery.py:263(FlatLayoutModuleFinder)
        1    0.000    0.000    0.000    0.000 constraints.py:466(_Square)
        1    0.000    0.000    0.000    0.000 ops.py:861(NotUpcast)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:890(_PatchedFnDel)
        1    0.000    0.000    0.000    0.000 tarfile.py:273(ReadError)
        1    0.000    0.000    0.000    0.000 tarfile.py:282(HeaderError)
        1    0.000    0.000    0.000    0.000 constraints.py:452(_CorrCholesky)
        1    0.000    0.000    0.000    0.000 font_manager.py:957(JSONEncoder)
        1    0.000    0.000    0.000    0.000 errors.py:42(DistutilsGetoptError)
        1    0.000    0.000    0.000    0.000 comments.py:200(NotNone)
        1    0.000    0.000    0.000    0.000 nodes.py:125(SequenceNode)
        1    0.000    0.000    0.000    0.000 frontend.py:114(NotSupportedError)
        1    0.000    0.000    0.000    0.000 _optimize.py:3113(BracketError)
        1    0.000    0.000    0.000    0.000 tarfile.py:279(StreamError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:685(InvalidParameter)
        1    0.000    0.000    0.000    0.000 events.py:101(CollectionEndEvent)
        1    0.000    0.000    0.000    0.000 boolalg.py:446(__eq__)
        1    0.000    0.000    0.000    0.000 core.py:156(MaskError)
        1    0.000    0.000    0.000    0.000 _bsr.py:771(bsr_matrix)
        1    0.000    0.000    0.000    0.000 _ccallback.py:9(CData)
        1    0.000    0.000    0.000    0.000 facts.py:451(<setcomp>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1370(MathTextWarning)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1592(DummySpecie)
        1    0.000    0.000    0.000    0.000 simplex.py:96(InfeasibleLPError)
        1    0.000    0.000    0.000    0.000 tarfile.py:291(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 tarfile.py:285(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 _mio5.py:445(EmptyStructMarker)
        1    0.000    0.000    0.000    0.000 json.py:906(MSONError)
        1    0.000    0.000    0.000    0.000 mock.py:2345(AsyncMock)
        1    0.000    0.000    0.000    0.000 errors.py:24(MultipartConversionError)
        1    0.000    0.000    0.000    0.000 readers.py:27(files)
        1    0.000    0.000    0.000    0.000 errors.py:20(DistutilsError)
        1    0.000    0.000    0.000    0.000 scanner.py:53(ScannerError)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:401(group)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:107(background_context)
        1    0.000    0.000    0.000    0.000 __init__.py:169(c_ushort)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:834(ContentTransferEncoding)
        1    0.000    0.000    0.000    0.000 tokens.py:266(FlowMappingEndToken)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:507(DotAtomText)
        1    0.000    0.000    0.000    0.000 _typing.py:151(DTypesNumeric)
        1    0.000    0.000    0.000    0.000 _endian.py:55(BigEndianUnion)
        1    0.000    0.000    0.000    0.000 tarfile.py:288(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:18(LinkError)
        1    0.000    0.000    0.000    0.000 hb.py:30(MalformedHeader)
        1    0.000    0.000    0.000    0.000 client.py:1501(CannotSendHeader)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:91(_take_dispatcher)
        1    0.000    0.000    0.000    0.000 Image.py:74(DecompressionBombError)
        1    0.000    0.000    0.000    0.000 _static.py:61(Str)
        1    0.000    0.000    0.000    0.000 errors.py:13(LibError)
        1    0.000    0.000    0.000    0.000 error.py:168(YAMLStreamError)
        1    0.000    0.000    0.000    0.000 extension.py:176(Library)
        1    0.000    0.000    0.000    0.000 tokens.py:246(BlockEndToken)
        1    0.000    0.000    0.000    0.000 _csc.py:274(csc_matrix)
        1    0.000    0.000    0.000    0.000 markers.py:39(UndefinedComparison)
        1    0.000    0.000    0.000    0.000 tokens.py:256(FlowMappingStartToken)
        1    0.000    0.000    0.000    0.000 {built-in method _thread._set_sentinel}
        1    0.000    0.000    0.000    0.000 function.py:103(PoleError)
        1    0.000    0.000    0.000    0.000 _dist_ver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 std.py:32(TqdmTypeError)
        1    0.000    0.000    0.000    0.000 exceptions.py:17(InvalidStateError)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(NonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1274(CloseEvent)
        1    0.000    0.000    0.000    0.000 tokens.py:279(ValueToken)
        1    0.000    0.000    0.000    0.000 __init__.py:67(_256Bit)
        1    0.000    0.000    0.000    0.000 pickle.py:84(UnpicklingError)
        1    0.000    0.000    0.000    0.000 parse.py:334(DefragResultBytes)
        1    0.000    0.000    0.000    0.000 __init__.py:173(c_long)
        1    0.000    0.000    0.000    0.000 tokens.py:251(FlowSequenceStartToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:132(GeneratorsNeeded)
        1    0.000    0.000    0.000    0.000 threading.py:798(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 tokens.py:236(BlockSequenceStartToken)
        1    0.000    0.000    0.000    0.000 tokens.py:289(FlowEntryToken)
        1    0.000    0.000    0.000    0.000 exceptions.py:53(DMNonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 std.py:52(TqdmExperimentalWarning)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:840(HeaderLabel)
        1    0.000    0.000    0.000    0.000 polyerrors.py:67(HeuristicGCDFailed)
        1    0.000    0.000    0.000    0.000 _miobase.py:24(MatWriteError)
        1    0.000    0.000    0.000    0.000 tokens.py:241(BlockMappingStartToken)
        1    0.000    0.000    0.000    0.000 tokens.py:215(DocumentEndToken)
        1    0.000    0.000    0.000    0.000 _base.py:55(InvalidStateError)
        1    0.000    0.000    0.000    0.000 exceptions.py:23(DMDomainError)
        1    0.000    0.000    0.000    0.000 errors.py:28(CharsetError)
        1    0.000    0.000    0.000    0.000 frontend.py:131(FrontendTypeError)
        1    0.000    0.000    0.000    0.000 animation.py:674(AVConvWriter)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1151(ZerosPolesGainDiscrete)
        1    0.000    0.000    0.000    0.000 utils.py:79(<dictcomp>)
        1    0.000    0.000    0.000    0.000 context.py:17(BufferTooShort)
        1    0.000    0.000    0.000    0.000 errors.py:33(DistutilsClassError)
        1    0.000    0.000    0.000    0.000 utils.py:24(InvalidWheelFilename)
        1    0.000    0.000    0.000    0.000 utils.py:30(InvalidSdistFilename)
        1    0.000    0.000    0.000    0.000 tokens.py:271(KeyToken)
        1    0.000    0.000    0.000    0.000 package_importer.py:675(_ExternNode)
        1    0.000    0.000    0.000    0.000 headerregistry.py:322(UniqueDateHeader)
        1    0.000    0.000    0.000    0.000 resolver.py:294(Resolver)
        1    0.000    0.000    0.000    0.000 tokens.py:261(FlowSequenceEndToken)
        1    0.000    0.000    0.000    0.000 unicode.py:304(CJK)
        1    0.000    0.000    0.000    0.000 polyerrors.py:78(IsomorphismFailed)
        1    0.000    0.000    0.000    0.000 errors.py:16(HeaderParseError)
        1    0.000    0.000    0.000    0.000 odes.py:4(ODEMethods)
        1    0.000    0.000    0.000    0.000 client.py:1459(HTTPException)
        1    0.000    0.000    0.000    0.000 subprocess.py:123(SubprocessError)
        1    0.000    0.000    0.000    0.000 tokens.py:284(BlockEntryToken)
        1    0.000    0.000    0.000    0.000 importer.py:22(ObjMismatchError)
        1    0.000    0.000    0.000    0.000 case.py:38(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 exceptions.py:33(DMFormatError)
        1    0.000    0.000    0.000    0.000 six.py:402(Module_six_moves_urllib_request)
        1    0.000    0.000    0.000    0.000 _static.py:69(List)
        1    0.000    0.000    0.000    0.000 streamplot.py:416(InvalidIndexError)
        1    0.000    0.000    0.000    0.000 markers.py:45(UndefinedEnvironmentName)
        1    0.000    0.000    0.000    0.000 exceptions.py:61(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 exceptions.py:43(DMRankError)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2055(_EllipsisDummy)
        1    0.000    0.000    0.000    0.000 __init__.py:190(c_uint)
        1    0.000    0.000    0.000    0.000 _typing.py:156(DTypesAll)
        1    0.000    0.000    0.000    0.000 exceptions.py:28(DMNotAField)
        1    0.000    0.000    0.000    0.000 shutil.py:77(RegistryError)
        1    0.000    0.000    0.000    0.000 exceptions.py:19(NonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 _endian.py:34(_swapped_struct_meta)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:503(DotAtom)
        1    0.000    0.000    0.000    0.000 error.py:228(ReusedAnchorWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:70(_128Bit)
        1    0.000    0.000    0.000    0.000 six.py:382(Module_six_moves_urllib_error)
        1    0.000    0.000    0.000    0.000 _typing.py:30(Boolean)
        1    0.000    0.000    0.000    0.000 errors.py:61(MultipartInvariantViolationDefect)
        1    0.000    0.000    0.000    0.000 errors.py:63(DistutilsOptionError)
        1    0.000    0.000    0.000    0.000 _idl.py:153(ObjectPointer)
        1    0.000    0.000    0.000    0.000 headerregistry.py:397(UniqueSingleAddressHeader)
        1    0.000    0.000    0.000    0.000 exceptions.py:85(TooHardError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:200(Word)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:550(ObsLocalPart)
        1    0.000    0.000    0.000    0.000 exceptions.py:284(ParseFatalException)
        1    0.000    0.000    0.000    0.000 _base.py:651(BrokenExecutor)
        1    0.000    0.000    0.000    0.000 repmatrix.py:201(<genexpr>)
        1    0.000    0.000    0.000    0.000 exceptions.py:38(DMNonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:71(ModularGCDFailed)
        1    0.000    0.000    0.000    0.000 __init__.py:177(c_ulong)
        1    0.000    0.000    0.000    0.000 systems.py:37(ODENonlinearError)
        1    0.000    0.000    0.000    0.000 function.py:113(BadSignatureError)
        1    0.000    0.000    0.000    0.000 function.py:118(BadArgumentsError)
        1    0.000    0.000    0.000    0.000 errors.py:107(NonASCIILocalPartDefect)
        1    0.000    0.000    0.000    0.000 shutil.py:67(SpecialFileError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:204(CFWSList)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:512(NoFoldLiteral)
        1    0.000    0.000    0.000    0.000 std.py:62(TqdmMonitorWarning)
        1    0.000    0.000    0.000    0.000 errors.py:51(PackageDiscoveryError)
        1    0.000    0.000    0.000    0.000 exceptions.py:74(VisibleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:208(Atom)
        1    0.000    0.000    0.000    0.000 error.py:172(YAMLWarning)
        1    0.000    0.000    0.000    0.000 client.py:1495(ImproperConnectionState)
        1    0.000    0.000    0.000    0.000 errors.py:41(NoBoundaryInMultipartDefect)
        1    0.000    0.000    0.000    0.000 errors.py:87(InvalidHeaderDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:273(ExtractError)
        1    0.000    0.000    0.000    0.000 __init__.py:300(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:26(DistutilsModuleError)
        1    0.000    0.000    0.000    0.000 __init__.py:727(FilterError)
        1    0.000    0.000    0.000    0.000 exceptions.py:21(SendfileNotAvailableError)
        1    0.000    0.000    0.000    0.000 errors.py:67(UndecodableBytesDefect)
        1    0.000    0.000    0.000    0.000 errors.py:56(MissingHeaderBodySeparatorDefect)
        1    0.000    0.000    0.000    0.000 errors.py:96(DistutilsInternalError)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(MissingUnityError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:147(UnivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:177(OptionError)
        1    0.000    0.000    0.000    0.000 errors.py:112(InvalidDateDefect)
        1    0.000    0.000    0.000    0.000 std.py:57(TqdmDeprecationWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:276(ReadError)
        1    0.000    0.000    0.000    0.000 errors.py:90(HeaderMissingRequiredValue)
        1    0.000    0.000    0.000    0.000 errors.py:50(FirstHeaderLineIsContinuationDefect)
        1    0.000    0.000    0.000    0.000 _endian.py:35(_swapped_union_meta)
        1    0.000    0.000    0.000    0.000 facts.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:223(c_ubyte)
        1    0.000    0.000    0.000    0.000 client.py:1464(NotConnected)
        1    0.000    0.000    0.000    0.000 <string>:1(__create_fn__)
        1    0.000    0.000    0.000    0.000 splitter_base.py:182(FxNetSplitterInternalError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:181(FlagError)
        1    0.000    0.000    0.000    0.000 shutil.py:71(ExecError)
        1    0.000    0.000    0.000    0.000 shutil.py:74(ReadError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:862(Header)
        1    0.000    0.000    0.000    0.000 errors.py:44(StartBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 six.py:480(Module_six_moves_urllib_robotparser)
        1    0.000    0.000    0.000    0.000 mathtext.py:1325(DejaVuSerifFontConstants)
        1    0.000    0.000    0.000    0.000 __init__.py:282(StreamError)
        1    0.000    0.000    0.000    0.000 __init__.py:198(c_double)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:943(_InvalidEwError)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CompressionError)
        1    0.000    0.000    0.000    0.000 __init__.py:76(_80Bit)
        1    0.000    0.000    0.000    0.000 errors.py:48(DistutilsArgError)
        1    0.000    0.000    0.000    0.000 errors.py:74(DistutilsSetupError)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:43(ResolventException)
        1    0.000    0.000    0.000    0.000 __init__.py:230(c_byte)
        1    0.000    0.000    0.000    0.000 headerregistry.py:382(UniqueAddressHeader)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:197(Phrase)
        1    0.000    0.000    0.000    0.000 repmatrix.py:202(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:246(c_void_p)
        1    0.000    0.000    0.000    0.000 polyerrors.py:82(ExtraneousFactors)
        1    0.000    0.000    0.000    0.000 _miobase.py:28(MatReadWarning)
        1    0.000    0.000    0.000    0.000 errors.py:76(InvalidBase64LengthDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:297(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 context.py:20(TimeoutError)
        1    0.000    0.000    0.000    0.000 __init__.py:288(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 __init__.py:88(_8Bit)
        1    0.000    0.000    0.000    0.000 polyerrors.py:90(RefinementFailed)
        1    0.000    0.000    0.000    0.000 errors.py:20(BoundaryError)
        1    0.000    0.000    0.000    0.000 constructor.py:51(DuplicateKeyFutureWarning)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 backend_tools.py:439(ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 abc.py:267(FileLoader)
        1    0.000    0.000    0.000    0.000 std.py:36(TqdmKeyError)
        1    0.000    0.000    0.000    0.000 __init__.py:82(_32Bit)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:858(InvalidMessageID)
        1    0.000    0.000    0.000    0.000 hb.py:34(LineOverflow)
        1    0.000    0.000    0.000    0.000 context.py:23(AuthenticationError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:854(MessageID)
        1    0.000    0.000    0.000    0.000 __init__.py:235(c_char)
        1    0.000    0.000    0.000    0.000 backend_tools.py:424(ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 errors.py:107(DistutilsByteCompileError)
        1    0.000    0.000    0.000    0.000 __init__.py:186(c_int)
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 exceptions.py:291(ParseSyntaxException)
        1    0.000    0.000    0.000    0.000 __init__.py:294(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:151(MultivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 errors.py:53(MisplacedEnvelopeHeaderDefect)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(DMValueError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:118(UnificationFailed)
        1    0.000    0.000    0.000    0.000 __init__.py:251(c_bool)
        1    0.000    0.000    0.000    0.000 errors.py:70(InvalidBase64PaddingDefect)
        1    0.000    0.000    0.000    0.000 shutil.py:81(_GiveupOnFastCopy)
        1    0.000    0.000    0.000    0.000 __init__.py:291(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 client.py:1504(ResponseNotReady)
        1    0.000    0.000    0.000    0.000 errors.py:103(DistutilsTemplateError)
        1    0.000    0.000    0.000    0.000 errors.py:104(ObsoleteHeaderDefect)
        1    0.000    0.000    0.000    0.000 bdist.py:22(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_64Bit)
        1    0.000    0.000    0.000    0.000 streamplot.py:420(TerminateTrajectory)
        1    0.000    0.000    0.000    0.000 __init__.py:285(HeaderError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:86(EvaluationFailed)
        1    0.000    0.000    0.000    0.000 polyerrors.py:74(HomomorphismFailed)
        1    0.000    0.000    0.000    0.000 client.py:1467(InvalidURL)
        1    0.000    0.000    0.000    0.000 __init__.py:85(_16Bit)
        1    0.000    0.000    0.000    0.000 __init__.py:261(c_wchar)
        1    0.000    0.000    0.000    0.000 polyerrors.py:98(NotInvertible)
        1    0.000    0.000    0.000    0.000 polyerrors.py:102(NotReversible)
        1    0.000    0.000    0.000    0.000 polyerrors.py:110(DomainError)
        1    0.000    0.000    0.000    0.000 errors.py:73(InvalidBase64CharactersDefect)
        1    0.000    0.000    0.000    0.000 polyerrors.py:94(CoercionFailed)
        1    0.000    0.000    0.000    0.000 _iotools.py:429(ConverterLockError)
        1    0.000    0.000    0.000    0.000 constructor.py:58(DuplicateKeyError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:114(PolynomialError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:128(GeneratorsError)
        1    0.000    0.000    0.000    0.000 streamplot.py:495(OutOfBounds)
        1    0.000    0.000    0.000    0.000 integerring.py:51(__init__)
        1    0.000    0.000    0.000    0.000 client.py:1475(UnknownTransferEncoding)
        1    0.000    0.000    0.000    0.000 dataframes.py:367(CaptureDataFrame)
        1    0.000    0.000    0.000    0.000 six.py:239(exec_module)
        1    0.000    0.000    0.000    0.000 mathtext.py:1329(DejaVuSansFontConstants)
        1    0.000    0.000    0.000    0.000 polyerrors.py:106(NotAlgebraic)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:28(__init__)
        1    0.000    0.000    0.000    0.000 _utils_internal.py:37(prepare_multiprocessing_environment)
        1    0.000    0.000    0.000    0.000 contextlib.py:342(__enter__)
        1    0.000    0.000    0.000    0.000 enum.py:1163(_missing_)
        1    0.000    0.000    0.000    0.000 {method 'isascii' of 'str' objects}
        1    0.000    0.000    0.000    0.000 expressiondomain.py:163(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:202(c_longdouble)
        1    0.000    0.000    0.000    0.000 client.py:1478(UnimplementedFileMode)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:96(_mode_formula)
        1    0.000    0.000    0.000    0.000 client.py:1498(CannotSendRequest)
        1    0.000    0.000    0.000    0.000 _functools.py:83(<lambda>)
        1    0.000    0.000    0.000    0.000 rationalfield.py:45(__init__)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:647(__init__)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:442(__init__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:584(_transpose_dispatcher)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:93(_median_formula)


