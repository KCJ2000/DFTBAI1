band_index: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
model_index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
mask: []
neighbour_list [6, 6]
0 特征值优化 tensor(81.2717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 1.0010, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 1.0010, 0.9990,
         1.0010, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 1.0010, 0.9990, 1.0010, 0.9990, 0.9990, 0.9990, 0.9990, 1.0010,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990,
         0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990]],
       device='cuda:0') 0
1000 特征值优化 tensor(5.1928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2663,  0.2601,  0.4068,  0.0058,  0.5453,  0.3051,  0.9908,  0.3002,
          0.3250,  0.1584,  0.1223,  0.1156,  0.1727,  0.1262,  0.0898, -0.3295,
         -0.0734,  0.1438,  0.1339,  0.1129,  0.1399,  0.1600,  0.1253,  0.1129,
          0.1114,  0.3959, -0.0644,  0.9068,  0.3408,  0.0885,  0.2767,  0.1068,
          0.2782,  0.2484, -0.0430,  0.0342,  0.1912,  0.1975,  0.2405,  0.4409,
          0.2692,  0.0106,  0.1518,  0.1790,  0.0114,  0.1778,  0.1820,  0.1740,
          0.1542, -0.0069,  0.0052, -0.0081,  0.0833, -0.0099,  0.1187,  0.3249,
          0.1391,  0.3426,  0.0151,  0.0265,  0.2102, -0.0110, -0.0410,  0.1693,
          0.1865,  0.1702,  0.1808,  0.2555,  0.2406,  0.0796,  0.0721,  0.1150,
          0.0569,  0.4092, -0.0585,  0.5789,  0.1758,  0.4885,  0.2931,  0.1521,
          0.5097,  0.0769,  0.3283,  0.3016,  0.0288,  0.2928,  0.3412,  0.1377,
          0.1673,  0.0858,  0.0600, -0.0320, -0.0937,  0.3110,  0.0643, -0.1052,
          0.3455,  0.0329,  0.0579,  0.1529,  0.1202,  0.2119,  0.2309,  0.4866,
          0.2166,  0.5240,  0.1959,  0.1180,  0.1166,  0.1192,  0.1511,  0.1506,
          0.2030,  0.1720,  0.2359,  0.1610,  0.1818,  0.1881,  0.1738,  0.2316,
          0.1662,  0.4620,  0.4031,  0.1197,  0.1391,  0.1094,  0.1498,  0.1147,
          0.1278,  0.1280,  0.1201,  0.1128,  0.1376,  0.1245,  0.1174,  0.2972,
          0.0934,  0.1229,  0.0226,  0.2914,  0.2292,  0.1163,  0.0645,  0.0922,
          0.2065,  0.2046,  0.1506,  0.1441,  0.2389,  0.2228,  0.2663,  0.0965,
          0.1099,  0.1558,  0.1174,  0.0972,  0.2527,  0.1265,  0.3437,  0.0887,
          0.0551]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
2000 特征值优化 tensor(0.8312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1059e-01,  6.0602e-01,  7.4027e-01, -8.2204e-01,  1.0574e+00,
          1.0157e+00,  2.0047e+00,  1.2539e+00,  1.1735e+00,  2.6033e-01,
          2.1919e-01, -1.9323e-01, -3.4367e-01, -2.3194e-01, -4.8696e-01,
         -1.1588e+00, -1.9509e-01,  1.8551e-01,  3.5819e-02, -1.0936e-02,
         -2.9600e-02,  3.6912e-01,  2.2040e-01,  6.4903e-02,  1.0185e-01,
          6.8792e-01,  4.2200e-01,  9.6617e-01,  8.1496e-01,  9.8249e-02,
          3.2554e-01, -1.2057e-01,  1.7605e-01, -1.0923e-01,  6.3361e-02,
          5.5617e-02,  5.2971e-01, -1.6165e-02,  3.0230e-02,  1.3812e-01,
          2.2332e-02,  1.3494e-01,  2.2269e-02,  3.6918e-01, -2.6618e-01,
          1.5413e-01,  1.6694e-01,  2.1436e-01, -7.5317e-02, -5.0553e-02,
         -1.5189e-01, -1.1785e-01,  2.7000e-02, -1.0268e-01,  2.2941e-01,
         -5.1334e-02,  4.4545e-02,  3.8931e-01,  4.1468e-02,  8.3366e-02,
         -2.1867e-01, -3.1114e-01, -3.0718e-01,  8.1324e-03, -1.3827e-02,
          1.1955e-01,  6.9982e-02,  2.2260e-01, -1.5548e-01,  3.4952e-02,
         -1.4782e-01,  1.1083e-01, -5.4424e-02,  3.3243e-01, -2.0010e-01,
          5.1522e-01,  2.5983e-01,  3.0844e-01,  3.7464e-01, -1.0809e-01,
          4.6065e-01, -2.2644e-01,  2.6198e-01,  3.7705e-01, -2.6017e-01,
          3.0620e-01,  1.0304e-01,  1.0948e-01,  2.7014e-01, -1.7362e-01,
          9.7396e-02, -6.9530e-01, -4.3244e-01,  7.4549e-02,  7.7574e-02,
         -5.0808e-01,  6.1462e-01,  9.1830e-02, -3.9309e-01, -1.0168e-01,
          1.3750e-01,  3.4891e-01,  2.7157e-01,  6.1539e-01,  1.8940e-02,
          4.2016e-01, -8.2493e-02,  1.5472e-01, -5.8970e-02,  6.4718e-02,
          1.6961e-01, -7.3561e-02,  2.1458e-01,  6.1896e-02,  9.6858e-02,
         -1.2331e-01,  5.8999e-02,  4.8687e-02,  1.6145e-01,  2.1316e-01,
         -9.7237e-03,  1.6243e-01,  3.6596e-01,  6.1386e-02,  5.0123e-02,
          8.2251e-02,  1.4310e-01, -8.7329e-03,  1.0427e-01, -1.2114e-03,
          1.2215e-02,  7.3775e-02,  1.6925e-01,  2.0555e-02,  7.3974e-02,
          9.7255e-02,  7.8788e-02, -2.9341e-01, -3.3831e-02,  1.6144e-01,
         -1.7477e-02, -3.9989e-02, -1.4179e-02, -5.6299e-02, -5.0014e-02,
          2.9979e-01, -4.9184e-02, -1.0793e-02,  3.3280e-02,  1.2299e-01,
          3.0969e-01, -3.4289e-02,  1.3732e-01,  1.3089e-01,  1.0050e-02,
          4.0545e-03,  2.8501e-01,  7.7820e-02,  1.8419e-01,  1.3525e-01,
         -3.9364e-02]], device='cuda:0') tensor(0.2137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
3000 特征值优化 tensor(0.5018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2342,  0.4247,  0.6230, -1.0067,  1.1439,  1.2248,  2.3255,  1.5933,
          1.3580,  0.1927,  0.2059, -0.3401, -0.4380, -0.2702, -0.6189, -1.3386,
         -0.2284,  0.2065,  0.0972, -0.0097, -0.0589,  0.4384,  0.2780,  0.1233,
          0.0993,  0.8573,  0.5171,  1.0381,  0.9995,  0.0951,  0.2049, -0.0205,
          0.1850, -0.0217,  0.1338,  0.1083,  0.5255, -0.1757, -0.0211,  0.0034,
          0.0700,  0.1276, -0.0414,  0.3665, -0.2882,  0.1290,  0.1075,  0.2284,
         -0.2156, -0.1619, -0.1431, -0.1401, -0.0203, -0.1090,  0.3197, -0.1060,
         -0.0389,  0.3915,  0.0796,  0.0629, -0.2228, -0.3929, -0.2947, -0.0304,
         -0.0339,  0.1467, -0.0805,  0.2683, -0.1802,  0.0454, -0.1923,  0.1441,
         -0.0793,  0.2787, -0.1485,  0.4066,  0.2517,  0.2111,  0.3152, -0.0666,
          0.3532, -0.2682,  0.2067,  0.2865, -0.1999,  0.3299, -0.0025,  0.0957,
          0.3834, -0.0591,  0.0179, -0.6804, -0.2423,  0.0846,  0.1595, -0.4321,
          0.6556,  0.1579, -0.4400, -0.1416,  0.2986,  0.3186,  0.1833,  0.5890,
         -0.0646,  0.1883, -0.0742,  0.1060, -0.0521,  0.0337,  0.1588, -0.0752,
          0.1530,  0.0502,  0.1269, -0.1197,  0.1159,  0.0437,  0.1356,  0.1716,
         -0.0440,  0.1018,  0.2682,  0.0405,  0.0441,  0.1509,  0.0907, -0.0965,
          0.0260, -0.0842,  0.0382,  0.0754,  0.1620, -0.0565,  0.1282,  0.0268,
          0.0889, -0.2288, -0.0446,  0.1815, -0.1607, -0.0234,  0.0219, -0.0191,
         -0.1234,  0.2185, -0.1533, -0.1232,  0.0259,  0.1012,  0.1660,  0.0425,
          0.1888,  0.1237,  0.0327, -0.0258,  0.1241,  0.0435,  0.1155,  0.0689,
          0.0271]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
4000 特征值优化 tensor(0.4766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2306e-01,  3.9499e-01,  5.3307e-01, -9.9905e-01,  1.1883e+00,
          1.3001e+00,  2.4729e+00,  1.7650e+00,  1.3967e+00,  1.9771e-01,
          2.1748e-01, -3.4235e-01, -4.5151e-01, -2.5132e-01, -6.7493e-01,
         -1.3936e+00, -2.6255e-01,  1.9978e-01,  1.3937e-01,  4.1806e-02,
         -1.1203e-01,  4.4344e-01,  2.9936e-01,  1.6429e-01,  8.4278e-02,
          8.4178e-01,  5.2909e-01,  1.0031e+00,  9.8935e-01,  9.9504e-02,
          1.9682e-01,  4.2896e-02,  1.6715e-01, -4.4159e-03,  1.7352e-01,
          1.1090e-01,  5.2524e-01, -2.2465e-01, -1.2836e-02, -4.2335e-02,
          8.0102e-02,  1.2647e-01, -4.7501e-02,  3.1579e-01, -2.7275e-01,
          1.0751e-01,  7.8162e-02,  1.9210e-01, -3.0102e-01, -2.6438e-01,
         -1.4248e-01, -1.7052e-01, -5.0010e-02, -1.1186e-01,  3.5545e-01,
         -7.9166e-02, -5.5668e-02,  4.3342e-01,  1.3947e-01,  4.6833e-02,
         -2.2076e-01, -4.3844e-01, -2.8235e-01, -5.9117e-03, -6.9195e-02,
          1.3377e-01, -1.2030e-01,  2.8505e-01, -1.9305e-01,  5.5897e-02,
         -1.7564e-01,  1.4857e-01, -9.9298e-02,  2.5849e-01, -1.3610e-01,
          3.6385e-01,  2.2645e-01,  1.6016e-01,  3.2240e-01, -5.7129e-02,
          3.3807e-01, -2.4816e-01,  2.3870e-01,  2.5127e-01, -1.9493e-01,
          3.0205e-01, -3.9180e-02,  6.9265e-02,  3.5547e-01,  5.2040e-02,
          2.8777e-02, -6.7931e-01, -2.1399e-01,  5.7478e-02,  1.5021e-01,
         -4.0173e-01,  6.4247e-01,  1.8129e-01, -4.5213e-01, -1.4058e-01,
          2.6159e-01,  2.7246e-01,  2.0456e-01,  5.2752e-01, -8.9183e-02,
          1.2969e-01, -6.9688e-02,  1.0117e-01, -6.7056e-03,  1.9335e-02,
          1.3464e-01, -8.2022e-02,  1.3352e-01,  6.0852e-02,  9.8441e-02,
         -1.0952e-01,  1.2712e-01,  3.3521e-02,  1.2022e-01,  1.7418e-01,
         -6.0292e-02,  8.2919e-02,  2.2933e-01,  5.2215e-02,  1.8802e-02,
          1.4977e-01,  7.7404e-02, -1.2664e-01,  6.0056e-03, -1.1249e-01,
          7.8459e-02,  8.9276e-02,  1.5125e-01, -6.9116e-02,  1.1869e-01,
          3.9725e-02,  1.2856e-01, -2.0774e-01,  2.1674e-03,  1.6713e-01,
         -1.5064e-01, -3.2614e-02, -1.4202e-02,  3.4032e-02, -1.3869e-01,
          1.9763e-01, -1.8013e-01, -9.6818e-02,  2.0243e-02,  4.5604e-02,
          1.5645e-01,  3.2431e-02,  1.6752e-01,  1.5196e-01,  9.4265e-03,
         -3.3449e-02,  8.2151e-02,  6.4024e-02,  1.4036e-01,  3.1949e-02,
          5.6843e-02]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
5000 特征值优化 tensor(0.4676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2321,  0.3702,  0.4605, -0.9942,  1.2557,  1.3545,  2.5207,  1.8277,
          1.4312,  0.2222,  0.2302, -0.3728, -0.4745, -0.2574, -0.6734, -1.4113,
         -0.2832,  0.1917,  0.1549,  0.0973, -0.1545,  0.4472,  0.3141,  0.2022,
          0.0777,  0.8402,  0.5409,  0.9732,  0.9728,  0.1122,  0.1777,  0.0965,
          0.1447,  0.0051,  0.2002,  0.1142,  0.5311, -0.2230, -0.0104, -0.0703,
          0.0746,  0.1246, -0.0560,  0.2969, -0.2812,  0.1183,  0.0729,  0.1911,
         -0.3279, -0.3257, -0.1209, -0.1774, -0.1045, -0.1086,  0.3680, -0.0489,
         -0.0659,  0.4374,  0.1764,  0.0233, -0.2527, -0.4576, -0.2774, -0.0135,
         -0.0821,  0.1541, -0.1313,  0.2822, -0.1642,  0.0534, -0.1663,  0.1451,
         -0.1208,  0.2594, -0.1303,  0.3466,  0.2538,  0.1326,  0.2699, -0.0718,
          0.3342, -0.2175,  0.2714,  0.2415, -0.1602,  0.2936, -0.0515,  0.0840,
          0.3021,  0.1054,  0.0528, -0.6571, -0.2215,  0.0683,  0.1403, -0.3784,
          0.6190,  0.2249, -0.4724, -0.1425,  0.2581,  0.2331,  0.1784,  0.4809,
         -0.0941,  0.1060, -0.0252,  0.0866,  0.0217,  0.0030,  0.1157, -0.0646,
          0.1359,  0.0685,  0.0535, -0.1022,  0.1002,  0.0085,  0.1115,  0.1749,
         -0.0681,  0.0756,  0.2420,  0.0587, -0.0071,  0.1548,  0.0844, -0.1422,
         -0.0057, -0.1290,  0.0993,  0.1071,  0.1500, -0.0634,  0.1128,  0.0540,
          0.1192, -0.2113,  0.0260,  0.1673, -0.1298, -0.0189, -0.0406,  0.0363,
         -0.1736,  0.1773, -0.1974, -0.0725,  0.0190,  0.0141,  0.1592,  0.0130,
          0.1579,  0.1611, -0.0061, -0.0331,  0.0865,  0.0899,  0.1580,  0.0368,
          0.0841]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
6000 特征值优化 tensor(0.4662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8104e-01,  3.6457e-01,  3.5711e-01, -9.9286e-01,  1.3536e+00,
          1.4058e+00,  2.5475e+00,  1.8896e+00,  1.4600e+00,  2.2703e-01,
          2.4138e-01, -4.1549e-01, -4.8087e-01, -2.7791e-01, -7.2839e-01,
         -1.4446e+00, -2.5942e-01,  1.8932e-01,  1.7163e-01,  1.4424e-01,
         -1.8972e-01,  4.5943e-01,  3.2904e-01,  2.3779e-01,  5.2694e-02,
          8.2948e-01,  5.7717e-01,  9.8161e-01,  9.4541e-01,  1.3682e-01,
          1.7849e-01,  1.2627e-01,  1.4510e-01,  1.0672e-03,  2.2908e-01,
          1.0229e-01,  4.9826e-01, -1.9019e-01, -1.4967e-02, -6.1858e-02,
          7.1989e-02,  1.2328e-01, -5.6120e-02,  2.7218e-01, -2.9751e-01,
          1.0774e-01,  6.3812e-02,  1.9483e-01, -3.4375e-01, -3.5484e-01,
         -9.5682e-02, -1.8384e-01, -1.7671e-01, -8.5844e-02,  3.7971e-01,
          5.3032e-04, -6.0390e-02,  4.8027e-01,  1.8479e-01,  5.3182e-03,
         -2.6699e-01, -4.7506e-01, -2.8857e-01, -1.5039e-02, -8.5452e-02,
          1.5118e-01, -1.3275e-01,  2.8985e-01, -1.7679e-01,  4.7753e-02,
         -1.5564e-01,  1.5432e-01, -1.1863e-01,  2.7377e-01, -1.1992e-01,
          3.1854e-01,  2.4155e-01,  1.3416e-01,  2.9108e-01, -7.6951e-02,
          3.1595e-01, -1.8545e-01,  2.6210e-01,  2.2460e-01, -1.5682e-01,
          2.6333e-01, -4.1681e-02,  8.8045e-02,  3.0917e-01,  1.4459e-01,
          6.6904e-02, -6.4162e-01, -2.0146e-01,  7.2287e-02,  1.3414e-01,
         -3.5380e-01,  5.8613e-01,  2.3375e-01, -5.0265e-01, -1.4436e-01,
          2.7591e-01,  1.9420e-01,  1.9809e-01,  4.3772e-01, -1.0824e-01,
          1.3414e-01, -1.9866e-02,  8.9954e-02,  1.3023e-02, -6.3161e-03,
          9.9204e-02, -6.6458e-02,  1.0300e-01,  6.4466e-02,  3.6841e-02,
         -7.4960e-02,  1.1935e-01,  1.5154e-02,  9.4826e-02,  1.4078e-01,
         -5.6580e-02,  6.0914e-02,  2.3884e-01,  6.3503e-02, -1.3758e-02,
          1.5333e-01,  8.4462e-02, -1.5298e-01, -1.2156e-02, -1.3609e-01,
          1.2113e-01,  1.0406e-01,  1.4179e-01, -5.6077e-02,  9.8898e-02,
          4.0611e-02,  1.5219e-01, -1.8096e-01,  1.4071e-02,  1.5298e-01,
         -1.0790e-01, -2.7624e-02, -4.7108e-02,  6.0893e-02, -1.6915e-01,
          1.9750e-01, -1.9284e-01, -3.3277e-02, -7.4718e-03, -2.1652e-02,
          1.6860e-01,  1.9803e-02,  1.4617e-01,  1.4165e-01, -9.3909e-04,
         -3.6358e-02,  8.5238e-02,  1.1209e-01,  1.5261e-01,  5.6036e-02,
          8.8770e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
7000 特征值优化 tensor(0.4626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.0556e-02,  3.5373e-01,  2.5834e-01, -9.9192e-01,  1.4352e+00,
          1.4300e+00,  2.5666e+00,  1.9248e+00,  1.4657e+00,  2.3024e-01,
          2.5081e-01, -4.3715e-01, -5.4001e-01, -3.0955e-01, -7.4937e-01,
         -1.4384e+00, -2.3530e-01,  1.8672e-01,  1.9932e-01,  1.5795e-01,
         -2.1666e-01,  4.7857e-01,  3.2345e-01,  2.2932e-01,  5.4362e-02,
          8.2176e-01,  5.8998e-01,  9.5423e-01,  9.1641e-01,  1.4145e-01,
          1.8260e-01,  1.3557e-01,  1.5206e-01,  1.3975e-02,  2.3692e-01,
          1.0108e-01,  4.6408e-01, -1.8154e-01, -2.9660e-02, -5.3754e-02,
          8.5547e-02,  1.2345e-01, -5.6414e-02,  2.4788e-01, -3.0678e-01,
          6.6165e-02,  8.3765e-02,  1.8221e-01, -3.6593e-01, -3.5631e-01,
         -7.3468e-02, -1.7105e-01, -2.2018e-01, -7.8701e-02,  3.6595e-01,
          6.3472e-02, -6.3997e-02,  5.1819e-01,  1.7310e-01, -2.0228e-02,
         -2.9729e-01, -4.9030e-01, -3.0809e-01,  1.0632e-02, -7.4583e-02,
          1.6175e-01, -1.4097e-01,  2.9952e-01, -1.8596e-01,  6.3465e-02,
         -1.4551e-01,  1.6842e-01, -1.1180e-01,  2.3641e-01, -1.4018e-01,
          3.0760e-01,  2.4603e-01,  1.6260e-01,  3.0741e-01, -8.7963e-02,
          3.1569e-01, -1.6701e-01,  2.4949e-01,  2.5144e-01, -1.7140e-01,
          2.1067e-01, -2.9072e-02,  1.1180e-01,  2.9833e-01,  1.6249e-01,
          5.3997e-02, -6.2687e-01, -1.8932e-01,  6.2336e-02,  1.3605e-01,
         -3.2823e-01,  5.5007e-01,  2.2253e-01, -4.8903e-01, -1.6933e-01,
          2.1296e-01,  1.3297e-01,  2.7692e-01,  4.3157e-01, -1.0186e-01,
          1.3721e-01, -2.3673e-03,  1.2069e-01, -3.6647e-02, -3.3003e-03,
          9.3989e-02, -6.2952e-02,  9.1516e-02,  5.8778e-02,  3.1730e-02,
         -4.7722e-02,  1.3386e-01,  3.6347e-02,  9.6938e-02,  1.5597e-01,
         -7.0658e-02,  4.2359e-02,  2.2698e-01,  7.9251e-02, -1.2801e-02,
          1.3831e-01,  8.9051e-02, -1.6510e-01, -3.0892e-02, -1.4128e-01,
          1.3503e-01,  1.1711e-01,  1.3095e-01, -6.0047e-02,  7.8253e-02,
          2.1198e-02,  1.6646e-01, -2.0039e-01,  1.3509e-02,  1.4480e-01,
         -7.8526e-02, -6.2093e-02, -2.4662e-02,  3.7529e-02, -1.6319e-01,
          2.0697e-01, -1.9838e-01, -3.7186e-02,  2.1577e-03, -1.1203e-02,
          1.7208e-01,  2.7523e-02,  1.5578e-01,  1.4354e-01,  1.3705e-02,
         -1.5682e-02,  7.8192e-02,  1.1057e-01,  1.5969e-01,  4.8760e-02,
          8.6137e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
8000 特征值优化 tensor(0.4642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.2466e-02,  3.2403e-01,  1.9603e-01, -9.9404e-01,  1.5452e+00,
          1.4593e+00,  2.5547e+00,  1.9373e+00,  1.4865e+00,  2.1979e-01,
          2.2278e-01, -4.3738e-01, -5.7346e-01, -3.1668e-01, -7.7897e-01,
         -1.4582e+00, -2.2599e-01,  1.5496e-01,  2.2475e-01,  1.9152e-01,
         -2.3501e-01,  4.9920e-01,  3.0834e-01,  2.5913e-01,  5.5596e-02,
          8.2317e-01,  5.8810e-01,  9.4617e-01,  8.7317e-01,  1.5486e-01,
          1.7009e-01,  1.5268e-01,  1.5195e-01,  4.8175e-03,  2.3361e-01,
          9.7404e-02,  4.6113e-01, -1.4746e-01, -1.3624e-02, -5.5392e-02,
          6.7508e-02,  1.2332e-01, -5.6827e-02,  2.3078e-01, -3.0891e-01,
          7.5748e-02,  7.8870e-02,  1.9621e-01, -3.9051e-01, -3.6108e-01,
         -5.7264e-02, -1.7454e-01, -2.5275e-01, -8.2332e-02,  3.6204e-01,
          9.9008e-02, -5.5593e-02,  5.4303e-01,  1.7571e-01, -2.9468e-02,
         -3.4071e-01, -4.9450e-01, -3.0401e-01, -1.7475e-02, -7.7763e-02,
          1.5386e-01, -1.2800e-01,  3.0727e-01, -1.7257e-01,  5.1095e-02,
         -1.6348e-01,  1.7748e-01, -1.0333e-01,  2.5358e-01, -1.2550e-01,
          2.9443e-01,  2.4530e-01,  1.2499e-01,  2.7619e-01, -9.6847e-02,
          3.1037e-01, -1.4995e-01,  2.4173e-01,  2.1524e-01, -1.4891e-01,
          2.2890e-01, -2.1674e-03,  1.0462e-01,  2.9769e-01,  1.4874e-01,
          6.6721e-02, -5.8333e-01, -2.1459e-01,  9.8750e-02,  1.3545e-01,
         -3.1280e-01,  5.2403e-01,  2.6722e-01, -5.1820e-01, -1.7234e-01,
          2.1152e-01,  9.5878e-02,  3.1007e-01,  4.0058e-01, -9.7154e-02,
          1.7206e-01, -8.5153e-04,  1.3929e-01, -9.5171e-02, -4.9998e-03,
          8.3038e-02, -6.0555e-02,  1.0330e-01,  7.3774e-02,  5.3531e-03,
         -4.7280e-02,  1.2863e-01,  4.1917e-02,  8.7647e-02,  1.3217e-01,
         -6.3625e-02,  4.0297e-02,  2.3107e-01,  9.1931e-02, -4.9205e-03,
          1.4765e-01,  8.1996e-02, -1.6909e-01, -3.5084e-02, -1.3600e-01,
          1.4256e-01,  1.1980e-01,  1.3485e-01, -5.1342e-02,  6.1644e-02,
          4.8856e-02,  1.8760e-01, -2.1491e-01,  3.5914e-03,  1.2934e-01,
         -9.5921e-02, -4.1110e-02, -2.9751e-02,  4.6934e-02, -1.7486e-01,
          2.2191e-01, -2.0080e-01, -1.8752e-02, -6.7962e-03, -2.6700e-02,
          1.8581e-01,  2.0133e-02,  1.5116e-01,  1.3780e-01,  1.1434e-02,
         -3.1815e-02,  8.1101e-02,  1.4179e-01,  1.4091e-01,  4.7319e-02,
          1.0717e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
9000 特征值优化 tensor(0.4616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.1153e-02,  2.8477e-01,  1.4595e-01, -9.9135e-01,  1.6567e+00,
          1.4968e+00,  2.5432e+00,  1.9306e+00,  1.5054e+00,  2.3334e-01,
          1.8729e-01, -4.3861e-01, -6.1471e-01, -2.9844e-01, -7.8038e-01,
         -1.4619e+00, -2.3061e-01,  1.2402e-01,  2.2664e-01,  1.9842e-01,
         -2.4205e-01,  5.0578e-01,  2.8474e-01,  2.6546e-01,  5.5577e-02,
          8.0925e-01,  5.8732e-01,  9.4253e-01,  8.4009e-01,  1.4824e-01,
          1.6620e-01,  1.5337e-01,  1.6921e-01, -1.5608e-03,  2.3079e-01,
          9.6782e-02,  4.4257e-01, -1.3560e-01, -3.6386e-04, -6.0120e-02,
          6.0960e-02,  1.2332e-01, -5.6551e-02,  2.1736e-01, -3.0796e-01,
          7.5016e-02,  7.5806e-02,  1.8991e-01, -4.0020e-01, -3.6123e-01,
         -5.1930e-02, -1.7057e-01, -2.5085e-01, -8.9079e-02,  3.5336e-01,
          1.4159e-01, -5.6958e-02,  5.5636e-01,  1.8677e-01, -3.2948e-02,
         -3.6984e-01, -5.0490e-01, -3.0199e-01, -2.4643e-02, -7.3879e-02,
          1.5830e-01, -1.1441e-01,  3.0709e-01, -1.6603e-01,  5.3639e-02,
         -1.7371e-01,  1.8735e-01, -1.0036e-01,  2.4982e-01, -1.2827e-01,
          2.9033e-01,  2.5011e-01,  1.0902e-01,  2.7077e-01, -9.9353e-02,
          3.0694e-01, -1.4660e-01,  2.3731e-01,  2.0725e-01, -1.4584e-01,
          2.2877e-01,  1.3640e-02,  1.0077e-01,  2.8399e-01,  1.6280e-01,
          5.9931e-02, -5.6837e-01, -2.1353e-01,  1.1459e-01,  1.3564e-01,
         -3.0058e-01,  5.1161e-01,  2.8678e-01, -5.4588e-01, -1.9749e-01,
          1.9983e-01,  7.6475e-02,  3.4960e-01,  3.8071e-01, -8.4383e-02,
          1.9072e-01, -2.9803e-03,  1.5033e-01, -1.2372e-01, -8.4325e-03,
          8.8798e-02, -6.6604e-02,  1.0470e-01,  8.7627e-02, -7.2963e-03,
         -3.9210e-02,  1.3806e-01,  6.2978e-02,  8.4802e-02,  1.3106e-01,
         -6.5434e-02,  3.4646e-02,  2.3764e-01,  1.0127e-01, -1.3860e-03,
          1.4880e-01,  6.6781e-02, -1.7744e-01, -4.1051e-02, -1.3296e-01,
          1.5266e-01,  1.1780e-01,  1.3659e-01, -5.2396e-02,  4.9579e-02,
          4.7925e-02,  1.8368e-01, -2.1807e-01, -1.9291e-03,  1.3350e-01,
         -9.1408e-02, -4.7351e-02, -4.9600e-02,  4.9160e-02, -1.8373e-01,
          2.2475e-01, -2.0971e-01, -2.2289e-02, -2.4008e-02, -4.9783e-02,
          1.7811e-01,  1.3597e-02,  1.5385e-01,  1.4686e-01,  1.6602e-02,
         -3.1445e-02,  8.1630e-02,  1.5760e-01,  1.3294e-01,  4.6986e-02,
          1.2049e-01]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
10000 特征值优化 tensor(0.4616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.2782e-02,  2.4379e-01,  1.0139e-01, -9.9249e-01,  1.7498e+00,
          1.5376e+00,  2.5374e+00,  1.9483e+00,  1.5251e+00,  2.4704e-01,
          1.6464e-01, -4.5386e-01, -6.3490e-01, -2.7270e-01, -7.7156e-01,
         -1.4575e+00, -2.3777e-01,  9.6510e-02,  2.3611e-01,  1.9565e-01,
         -2.5861e-01,  5.0746e-01,  2.7165e-01,  2.7061e-01,  4.9192e-02,
          7.9085e-01,  5.8088e-01,  9.3736e-01,  8.2033e-01,  1.3113e-01,
          1.6240e-01,  1.5117e-01,  1.7752e-01,  1.3045e-02,  2.2066e-01,
          1.0048e-01,  4.2751e-01, -1.2108e-01,  6.2254e-03, -6.1610e-02,
          6.1332e-02,  1.2349e-01, -5.6234e-02,  2.0255e-01, -2.9186e-01,
          7.7078e-02,  7.0635e-02,  1.8782e-01, -4.1097e-01, -3.7639e-01,
         -5.5081e-02, -1.8206e-01, -2.3837e-01, -9.4162e-02,  3.4870e-01,
          1.9061e-01, -6.7487e-02,  5.6150e-01,  2.1054e-01, -3.4696e-02,
         -4.0154e-01, -5.1042e-01, -2.9632e-01, -2.8499e-02, -6.9731e-02,
          1.5876e-01, -1.0517e-01,  3.2109e-01, -1.7585e-01,  5.3426e-02,
         -1.8067e-01,  1.9470e-01, -9.9159e-02,  2.4502e-01, -1.3713e-01,
          2.8832e-01,  2.4822e-01,  1.0144e-01,  2.7887e-01, -1.0433e-01,
          3.0685e-01, -1.4227e-01,  2.3205e-01,  2.0267e-01, -1.3856e-01,
          2.1988e-01,  1.8201e-02,  9.4606e-02,  2.5785e-01,  1.8128e-01,
          5.6862e-02, -5.5909e-01, -2.1851e-01,  1.1928e-01,  1.3655e-01,
         -2.8908e-01,  4.9908e-01,  3.1466e-01, -5.4806e-01, -2.1106e-01,
          1.8520e-01,  6.7290e-02,  3.7153e-01,  3.6342e-01, -8.4248e-02,
          2.1237e-01, -1.0263e-02,  1.4981e-01, -1.3879e-01, -1.2513e-02,
          8.5755e-02, -6.3367e-02,  1.0239e-01,  9.8458e-02, -1.5676e-02,
         -2.6182e-02,  1.3743e-01,  7.9211e-02,  8.9468e-02,  1.2388e-01,
         -6.3444e-02,  2.3939e-02,  2.3704e-01,  1.0912e-01, -1.0100e-03,
          1.4878e-01,  6.9317e-02, -1.8085e-01, -5.0949e-02, -1.2250e-01,
          1.5858e-01,  1.2349e-01,  1.3579e-01, -5.7365e-02,  4.2581e-02,
          3.8761e-02,  1.9050e-01, -2.0830e-01, -7.3209e-04,  1.3016e-01,
         -7.3809e-02, -5.4203e-02, -6.5172e-02,  4.3495e-02, -1.8236e-01,
          2.2695e-01, -2.1179e-01, -2.3485e-02, -3.7977e-02, -6.0935e-02,
          1.6800e-01,  1.1658e-02,  1.5541e-01,  1.4672e-01,  1.3766e-02,
         -2.5598e-02,  6.9363e-02,  1.5914e-01,  1.3201e-01,  4.8041e-02,
          1.3090e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
11000 特征值优化 tensor(0.4601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1173,  0.2105,  0.0665, -0.9915,  1.8525,  1.5657,  2.5414,  1.9720,
          1.5374,  0.2483,  0.1315, -0.4467, -0.6415, -0.2513, -0.7793, -1.4631,
         -0.2471,  0.0701,  0.2326,  0.1912, -0.2711,  0.5098,  0.2568,  0.2598,
          0.0397,  0.7738,  0.5724,  0.9284,  0.7859,  0.1217,  0.1509,  0.1522,
          0.1783,  0.0035,  0.2138,  0.1041,  0.3993, -0.1097,  0.0164, -0.0617,
          0.0544,  0.1233, -0.0571,  0.1973, -0.2859,  0.0732,  0.0626,  0.1852,
         -0.4215, -0.3856, -0.0634, -0.1899, -0.2262, -0.1011,  0.3534,  0.2347,
         -0.0724,  0.5607,  0.2275, -0.0308, -0.4173, -0.5237, -0.2923, -0.0300,
         -0.0762,  0.1655, -0.0927,  0.3254, -0.1762,  0.0562, -0.1872,  0.2002,
         -0.1004,  0.2499, -0.1478,  0.2873,  0.2334,  0.0872,  0.2855, -0.1112,
          0.3060, -0.1394,  0.2262,  0.1878, -0.1456,  0.2239,  0.0375,  0.0910,
          0.2428,  0.1912,  0.0537, -0.5529, -0.2125,  0.1262,  0.1381, -0.2805,
          0.4896,  0.3381, -0.5437, -0.2162,  0.1821,  0.0616,  0.3952,  0.3468,
         -0.0838,  0.2215, -0.0095,  0.1528, -0.1563, -0.0114,  0.0814, -0.0681,
          0.1004,  0.1068, -0.0130, -0.0109,  0.1392,  0.0891,  0.0734,  0.1230,
         -0.0564,  0.0149,  0.2384,  0.1186, -0.0054,  0.1451,  0.0691, -0.1891,
         -0.0590, -0.1176,  0.1610,  0.1276,  0.1353, -0.0602,  0.0337,  0.0419,
          0.2066, -0.2090, -0.0062,  0.1368, -0.0706, -0.0690, -0.0614,  0.0388,
         -0.1993,  0.2237, -0.2126, -0.0303, -0.0416, -0.0671,  0.1647,  0.0091,
          0.1603,  0.1493,  0.0195, -0.0292,  0.0667,  0.1624,  0.1277,  0.0440,
          0.1394]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
12000 特征值优化 tensor(0.4694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7128e-01,  1.7557e-01,  1.3640e-02, -9.9570e-01,  1.9454e+00,
          1.5965e+00,  2.5406e+00,  1.9807e+00,  1.5545e+00,  2.5491e-01,
          7.4478e-02, -4.2650e-01, -6.7407e-01, -2.4272e-01, -7.6084e-01,
         -1.4490e+00, -2.5742e-01,  6.0885e-02,  2.4839e-01,  1.8216e-01,
         -2.7364e-01,  5.1236e-01,  2.5008e-01,  2.5340e-01,  6.5245e-02,
          7.7533e-01,  5.7091e-01,  9.1903e-01,  7.4941e-01,  1.0291e-01,
          1.3005e-01,  1.6340e-01,  1.6907e-01, -7.8655e-03,  2.1821e-01,
          1.0966e-01,  3.8986e-01, -1.1562e-01,  1.4683e-02, -7.0271e-02,
          6.4343e-02,  1.2400e-01, -5.2596e-02,  1.8954e-01, -2.7039e-01,
          5.4270e-02,  6.0961e-02,  1.5451e-01, -4.2845e-01, -3.8982e-01,
         -7.0464e-02, -2.1001e-01, -2.0805e-01, -1.0774e-01,  3.5967e-01,
          2.7584e-01, -6.1748e-02,  5.5694e-01,  2.3759e-01, -3.2472e-02,
         -4.4973e-01, -5.2848e-01, -2.7682e-01, -2.4140e-02, -6.5802e-02,
          1.6469e-01, -8.9210e-02,  3.1930e-01, -1.7805e-01,  6.3563e-02,
         -1.9618e-01,  2.0066e-01, -9.2757e-02,  2.4338e-01, -1.6516e-01,
          2.7613e-01,  2.2988e-01,  4.9540e-02,  3.0098e-01, -1.1371e-01,
          3.0963e-01, -1.3439e-01,  2.1944e-01,  2.0668e-01, -1.4985e-01,
          2.0840e-01,  3.2110e-02,  1.2312e-01,  2.2555e-01,  2.1901e-01,
          6.9585e-02, -5.3877e-01, -2.1799e-01,  1.1275e-01,  1.3285e-01,
         -2.7165e-01,  4.6629e-01,  3.5059e-01, -5.2748e-01, -2.3250e-01,
          1.6036e-01,  3.9992e-02,  4.0953e-01,  3.3436e-01, -6.7372e-02,
          2.3100e-01, -1.2425e-02,  1.5294e-01, -1.7723e-01, -7.5446e-03,
          9.6996e-02, -7.0683e-02,  8.7575e-02,  1.2526e-01, -1.2920e-02,
          9.2772e-03,  1.3670e-01,  9.4071e-02,  8.1466e-02,  1.3944e-01,
         -5.0771e-02,  1.4208e-02,  2.5034e-01,  1.1939e-01, -1.2839e-02,
          1.4273e-01,  7.3051e-02, -1.9012e-01, -7.6580e-02, -1.1761e-01,
          1.6954e-01,  1.2962e-01,  1.2865e-01, -8.3999e-02,  3.2029e-02,
          3.8854e-02,  2.1566e-01, -2.0366e-01,  1.5392e-02,  1.3964e-01,
         -5.3955e-02, -8.1618e-02, -5.8653e-02,  3.7303e-02, -2.0219e-01,
          2.1783e-01, -2.0848e-01, -2.9377e-02, -4.9858e-02, -5.9788e-02,
          1.6830e-01, -1.7719e-03,  1.6330e-01,  1.4925e-01,  3.2528e-02,
         -2.0179e-02,  5.9040e-02,  1.4422e-01,  1.2108e-01,  4.8279e-02,
          1.5055e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
13000 特征值优化 tensor(0.4615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2282e-01,  1.5236e-01, -1.7998e-02, -9.8979e-01,  2.0686e+00,
          1.6377e+00,  2.5397e+00,  1.9947e+00,  1.5852e+00,  2.4956e-01,
          4.2890e-02, -4.2230e-01, -6.4857e-01, -2.1531e-01, -7.5388e-01,
         -1.4353e+00, -2.6242e-01,  4.6427e-02,  2.5016e-01,  1.8259e-01,
         -2.7740e-01,  4.9779e-01,  2.5447e-01,  2.4770e-01,  5.6040e-02,
          7.6506e-01,  5.7180e-01,  9.2255e-01,  7.3357e-01,  9.5972e-02,
          1.1997e-01,  1.7174e-01,  1.5591e-01,  8.9666e-03,  2.1602e-01,
          1.1573e-01,  3.8409e-01, -1.0419e-01,  7.9751e-03, -7.5409e-02,
          5.5561e-02,  1.2290e-01, -5.7073e-02,  1.7044e-01, -2.5736e-01,
          6.6241e-02,  4.1467e-02,  1.5940e-01, -4.3350e-01, -3.9314e-01,
         -6.7321e-02, -2.1945e-01, -1.9117e-01, -1.1186e-01,  3.6326e-01,
          3.1314e-01, -7.9263e-02,  5.5825e-01,  2.3472e-01, -3.9359e-02,
         -4.6683e-01, -5.4111e-01, -2.7501e-01, -2.5490e-02, -8.0409e-02,
          1.6998e-01, -8.3571e-02,  3.3025e-01, -1.7488e-01,  6.1684e-02,
         -2.0251e-01,  2.0030e-01, -9.7843e-02,  2.4133e-01, -1.7932e-01,
          2.7786e-01,  2.1466e-01,  8.9808e-03,  2.9306e-01, -1.1018e-01,
          3.0306e-01, -1.3069e-01,  2.1246e-01,  1.8816e-01, -1.3768e-01,
          2.0411e-01,  2.8281e-02,  9.9058e-02,  1.9983e-01,  2.3297e-01,
          7.0375e-02, -5.3030e-01, -2.1991e-01,  1.0669e-01,  1.4054e-01,
         -2.5916e-01,  4.7424e-01,  3.9211e-01, -5.1882e-01, -2.3351e-01,
          1.4075e-01,  4.3461e-02,  4.1345e-01,  3.1648e-01, -7.5437e-02,
          2.3918e-01, -2.1761e-04,  1.2661e-01, -1.8666e-01, -3.7382e-03,
          9.8630e-02, -6.5682e-02,  1.0314e-01,  1.1878e-01, -8.0549e-03,
          3.5539e-03,  1.3759e-01,  1.0955e-01,  7.6574e-02,  1.5537e-01,
         -5.3592e-02,  7.1359e-03,  2.6194e-01,  1.2448e-01, -1.8337e-02,
          1.4890e-01,  6.6810e-02, -1.9604e-01, -8.4962e-02, -1.1669e-01,
          1.8095e-01,  1.3117e-01,  1.2455e-01, -7.5063e-02,  1.2523e-02,
          3.2690e-02,  2.2900e-01, -1.8384e-01,  2.4301e-02,  1.4469e-01,
         -3.9547e-02, -9.1468e-02, -8.4524e-02,  4.3831e-02, -1.9422e-01,
          2.1890e-01, -2.1626e-01, -3.4485e-02, -6.7548e-02, -7.0324e-02,
          1.5428e-01,  6.1910e-03,  1.6289e-01,  1.5065e-01,  1.5628e-02,
         -1.4261e-02,  5.2574e-02,  1.4601e-01,  1.2315e-01,  4.0556e-02,
          1.6794e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
14000 特征值优化 tensor(0.4580, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2027e-01,  1.3474e-01, -4.2861e-02, -9.9236e-01,  2.1387e+00,
          1.6445e+00,  2.5322e+00,  2.0109e+00,  1.6010e+00,  2.4660e-01,
          3.0848e-02, -4.0839e-01, -6.7391e-01, -2.2583e-01, -7.2915e-01,
         -1.4429e+00, -2.8827e-01,  3.5410e-02,  2.5520e-01,  1.8040e-01,
         -3.1229e-01,  4.8638e-01,  2.4868e-01,  2.3874e-01,  4.7388e-02,
          7.4769e-01,  5.6110e-01,  9.1378e-01,  7.1705e-01,  9.1365e-02,
          1.0350e-01,  1.7968e-01,  1.7319e-01,  1.3694e-02,  2.1853e-01,
          1.1333e-01,  3.8076e-01, -1.1372e-01,  1.1570e-02, -9.3368e-02,
          5.6122e-02,  1.2290e-01, -5.6615e-02,  1.6431e-01, -2.5669e-01,
          7.4057e-02,  3.2436e-02,  1.6717e-01, -4.3541e-01, -3.8448e-01,
         -6.2392e-02, -2.2797e-01, -1.7289e-01, -1.1806e-01,  3.7764e-01,
          3.3182e-01, -8.1733e-02,  5.5841e-01,  2.2344e-01, -4.3154e-02,
         -4.8113e-01, -5.4657e-01, -2.6905e-01, -1.4839e-02, -7.4150e-02,
          1.8730e-01, -8.9430e-02,  3.2937e-01, -1.8341e-01,  6.7944e-02,
         -2.1584e-01,  2.0149e-01, -1.0010e-01,  2.5369e-01, -1.8670e-01,
          2.7276e-01,  2.0421e-01, -1.5498e-02,  3.0380e-01, -1.0658e-01,
          3.0381e-01, -1.2262e-01,  2.0773e-01,  1.9393e-01, -1.3167e-01,
          1.7878e-01,  3.0220e-02,  1.0678e-01,  1.5037e-01,  2.2279e-01,
          6.9283e-02, -5.0224e-01, -2.0497e-01,  1.2748e-01,  1.4001e-01,
         -2.5263e-01,  4.7301e-01,  4.0489e-01, -5.2320e-01, -2.1615e-01,
          1.4229e-01,  4.6210e-02,  4.2050e-01,  3.0516e-01, -8.4925e-02,
          2.5806e-01,  4.2752e-03,  1.2282e-01, -2.1417e-01, -5.3307e-03,
          8.8514e-02, -6.1968e-02,  9.1675e-02,  1.1804e-01, -1.5230e-02,
          1.3746e-03,  1.4426e-01,  1.1067e-01,  6.8755e-02,  1.6187e-01,
         -6.6517e-02,  5.2720e-03,  2.6393e-01,  1.2818e-01, -2.1726e-02,
          1.5480e-01,  6.5300e-02, -2.0363e-01, -9.3560e-02, -1.0909e-01,
          1.8528e-01,  1.1511e-01,  1.3172e-01, -7.9534e-02, -1.1953e-03,
          2.1286e-02,  2.1685e-01, -1.8582e-01,  2.9612e-02,  1.5866e-01,
         -3.3784e-02, -9.4532e-02, -1.2266e-01,  2.9812e-02, -1.7652e-01,
          2.0804e-01, -2.1171e-01, -3.9593e-02, -6.6635e-02, -7.2161e-02,
          1.5696e-01,  1.2111e-02,  1.7049e-01,  1.6045e-01,  5.6594e-03,
         -1.6872e-02,  5.4610e-02,  1.2908e-01,  1.2450e-01,  3.6815e-02,
          1.7049e-01]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
15000 特征值优化 tensor(0.4741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3418e-01,  1.1476e-01, -7.4890e-02, -9.9093e-01,  2.2525e+00,
          1.6521e+00,  2.5439e+00,  2.0430e+00,  1.6199e+00,  2.1852e-01,
         -1.7562e-02, -3.9120e-01, -6.9257e-01, -2.1862e-01, -6.9147e-01,
         -1.4355e+00, -3.0427e-01,  2.1178e-02,  2.3732e-01,  1.8174e-01,
         -3.3075e-01,  4.9675e-01,  2.4487e-01,  2.2360e-01,  4.9859e-02,
          7.5475e-01,  5.6445e-01,  8.9750e-01,  6.9461e-01,  8.1695e-02,
          9.6436e-02,  1.8739e-01,  1.5267e-01,  1.3749e-02,  2.2050e-01,
          1.1625e-01,  3.7926e-01, -1.1053e-01,  1.0191e-02, -1.0096e-01,
          6.1495e-02,  1.2213e-01, -5.4861e-02,  1.5640e-01, -2.4797e-01,
          5.9218e-02,  2.9600e-02,  1.6600e-01, -4.4094e-01, -3.7156e-01,
         -6.9715e-02, -2.4680e-01, -1.5118e-01, -1.2377e-01,  3.6844e-01,
          3.5794e-01, -6.2932e-02,  5.6011e-01,  2.0777e-01, -3.8288e-02,
         -5.0617e-01, -5.4530e-01, -2.5757e-01, -3.3647e-03, -8.6276e-02,
          1.9853e-01, -7.8659e-02,  3.3252e-01, -1.8568e-01,  7.1298e-02,
         -2.1823e-01,  1.9036e-01, -1.0614e-01,  2.5234e-01, -1.9421e-01,
          2.6710e-01,  1.8953e-01, -1.7519e-02,  3.0780e-01, -1.1683e-01,
          2.9790e-01, -1.1175e-01,  1.9285e-01,  1.8114e-01, -1.3347e-01,
          1.6869e-01,  2.5371e-02,  9.6344e-02,  1.5074e-01,  2.5311e-01,
          5.7981e-02, -4.9630e-01, -2.0347e-01,  1.1416e-01,  1.3826e-01,
         -2.4698e-01,  4.7019e-01,  4.0997e-01, -5.0232e-01, -2.1927e-01,
          1.3798e-01,  5.4204e-02,  4.3309e-01,  2.9050e-01, -8.7168e-02,
          2.6549e-01,  7.7534e-03,  1.1973e-01, -2.2221e-01,  4.2408e-03,
          7.7501e-02, -7.7916e-02,  1.0341e-01,  1.1352e-01, -1.1066e-02,
          1.6934e-02,  1.5057e-01,  1.0857e-01,  6.9050e-02,  1.7382e-01,
         -4.3392e-02, -3.4713e-03,  2.5962e-01,  1.3674e-01, -3.4211e-03,
          1.4608e-01,  6.8871e-02, -2.0051e-01, -9.1177e-02, -1.1389e-01,
          1.9532e-01,  1.2935e-01,  1.2904e-01, -8.0061e-02,  5.5694e-03,
          2.9826e-02,  2.3761e-01, -1.8197e-01,  3.1001e-02,  1.7343e-01,
         -6.6130e-02, -1.0125e-01, -9.8326e-02,  3.4857e-02, -1.6815e-01,
          2.1367e-01, -2.0356e-01, -3.9386e-02, -6.6536e-02, -6.9706e-02,
          1.6083e-01,  9.3816e-03,  1.7482e-01,  1.5844e-01, -8.4250e-03,
         -2.8176e-04,  4.5531e-02,  1.0619e-01,  1.2392e-01,  4.7153e-02,
          1.6883e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
16000 特征值优化 tensor(0.4582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8675e-01,  1.0863e-01, -1.1367e-01, -9.9240e-01,  2.3429e+00,
          1.6662e+00,  2.5455e+00,  2.0604e+00,  1.6442e+00,  2.2269e-01,
         -1.9837e-02, -3.7265e-01, -6.9936e-01, -2.2073e-01, -6.9289e-01,
         -1.4275e+00, -3.2142e-01,  4.1890e-03,  2.3182e-01,  1.8790e-01,
         -3.6138e-01,  4.9927e-01,  2.4614e-01,  2.1983e-01,  5.0147e-02,
          7.5938e-01,  5.5488e-01,  8.7238e-01,  6.8385e-01,  6.4902e-02,
          8.2245e-02,  1.8289e-01,  1.2979e-01, -1.9235e-03,  2.1577e-01,
          1.0984e-01,  3.6570e-01, -1.0439e-01,  1.6983e-02, -8.9779e-02,
          5.2769e-02,  1.2284e-01, -5.5821e-02,  1.4893e-01, -2.3113e-01,
          6.8757e-02,  2.0972e-02,  1.7010e-01, -4.5167e-01, -3.5191e-01,
         -6.2674e-02, -2.5948e-01, -1.3661e-01, -1.2578e-01,  3.6901e-01,
          3.8614e-01, -7.7111e-02,  5.5202e-01,  1.9086e-01, -3.6633e-02,
         -5.1382e-01, -5.5220e-01, -2.5541e-01, -1.0875e-02, -1.0156e-01,
          2.0538e-01, -6.6858e-02,  3.4206e-01, -1.8206e-01,  6.7129e-02,
         -2.2472e-01,  1.8488e-01, -1.0721e-01,  2.6406e-01, -2.0597e-01,
          2.6155e-01,  1.7295e-01, -3.6021e-02,  3.1888e-01, -1.1588e-01,
          3.0073e-01, -1.1183e-01,  1.9867e-01,  1.6315e-01, -1.2802e-01,
          1.7363e-01,  2.3974e-02,  8.6130e-02,  1.3209e-01,  2.6364e-01,
          6.4389e-02, -4.8491e-01, -2.0608e-01,  1.1129e-01,  1.3584e-01,
         -2.3596e-01,  4.7373e-01,  4.3350e-01, -4.6570e-01, -2.5281e-01,
          1.1791e-01,  6.3023e-02,  4.3017e-01,  2.8287e-01, -9.1711e-02,
          2.6610e-01,  1.0180e-02,  9.0249e-02, -2.2551e-01,  1.0032e-02,
          7.4883e-02, -7.9038e-02,  1.0914e-01,  1.1450e-01, -9.6610e-03,
          1.1499e-02,  1.5463e-01,  1.0811e-01,  5.5054e-02,  1.6994e-01,
         -3.6634e-02, -1.1100e-02,  2.5996e-01,  1.4103e-01, -5.0936e-04,
          1.5599e-01,  6.3057e-02, -2.0087e-01, -9.4257e-02, -1.1279e-01,
          2.0275e-01,  1.2922e-01,  1.2707e-01, -8.4282e-02,  8.7688e-03,
          4.6121e-02,  2.5049e-01, -1.7771e-01,  1.6803e-02,  1.5836e-01,
         -6.6843e-02, -9.2733e-02, -1.1950e-01,  4.2099e-02, -1.6330e-01,
          2.1360e-01, -2.0557e-01, -2.7207e-02, -7.0559e-02, -7.0822e-02,
          1.5760e-01,  9.6686e-04,  1.6094e-01,  1.6378e-01, -1.1251e-02,
         -7.7003e-03,  5.8174e-02,  1.1691e-01,  1.2005e-01,  5.3390e-02,
          1.8195e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
17000 特征值优化 tensor(0.4680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.1184e-01,  9.1121e-02, -1.5773e-01, -9.9505e-01,  2.4147e+00,
          1.6795e+00,  2.5412e+00,  2.0597e+00,  1.6513e+00,  2.2795e-01,
         -4.0935e-02, -3.6750e-01, -7.0889e-01, -2.0797e-01, -6.6014e-01,
         -1.4212e+00, -3.2314e-01, -4.6646e-03,  2.4915e-01,  1.8274e-01,
         -3.8129e-01,  5.0694e-01,  2.4921e-01,  2.3303e-01,  6.3917e-02,
          7.4243e-01,  5.3482e-01,  8.7566e-01,  6.7877e-01,  4.5883e-02,
          8.0841e-02,  1.7512e-01,  1.5475e-01, -3.9527e-03,  2.0592e-01,
          1.0585e-01,  3.4151e-01, -1.1203e-01,  2.3211e-02, -8.9910e-02,
          6.3258e-02,  1.2289e-01, -5.2185e-02,  1.4007e-01, -2.1341e-01,
          6.3057e-02,  2.2539e-02,  1.7688e-01, -4.5649e-01, -3.2109e-01,
         -6.7363e-02, -2.6946e-01, -1.3382e-01, -1.3686e-01,  3.7680e-01,
          4.0462e-01, -7.4845e-02,  5.4966e-01,  1.6599e-01, -2.9286e-02,
         -5.1465e-01, -5.5587e-01, -2.5495e-01, -1.8155e-03, -8.3284e-02,
          2.0657e-01, -6.3573e-02,  3.3719e-01, -1.8481e-01,  7.3600e-02,
         -2.3319e-01,  1.6891e-01, -1.0598e-01,  2.6036e-01, -2.1402e-01,
          2.6198e-01,  1.6749e-01, -7.3569e-02,  3.1320e-01, -1.2471e-01,
          3.0962e-01, -1.0653e-01,  1.8839e-01,  1.7250e-01, -1.4243e-01,
          1.5925e-01,  2.0297e-02,  1.1010e-01,  1.4114e-01,  2.7627e-01,
          6.3195e-02, -4.7532e-01, -2.0325e-01,  1.1971e-01,  1.3181e-01,
         -2.2778e-01,  4.4272e-01,  4.1423e-01, -4.6757e-01, -2.7829e-01,
          1.0991e-01,  6.4807e-02,  4.3044e-01,  2.8835e-01, -8.6661e-02,
          2.6435e-01, -6.3416e-03,  8.9775e-02, -2.2094e-01,  1.1859e-02,
          6.3835e-02, -7.8484e-02,  9.4028e-02,  1.2034e-01, -2.4123e-03,
          2.0249e-02,  1.5543e-01,  1.0925e-01,  5.6402e-02,  1.7729e-01,
         -3.3650e-02, -1.4523e-02,  2.6814e-01,  1.4682e-01, -4.0017e-04,
          1.4755e-01,  6.9344e-02, -1.9599e-01, -9.9289e-02, -1.0341e-01,
          2.0317e-01,  1.3050e-01,  1.2853e-01, -9.3858e-02,  8.0226e-03,
          3.3876e-02,  2.4947e-01, -1.7060e-01,  1.8140e-02,  1.5786e-01,
         -6.6553e-02, -1.0217e-01, -1.2752e-01,  2.7926e-02, -1.6222e-01,
          2.1419e-01, -1.9856e-01, -2.6135e-02, -5.5518e-02, -5.8082e-02,
          1.6459e-01, -3.9607e-03,  1.7152e-01,  1.5273e-01, -4.6981e-03,
         -6.1158e-03,  5.6639e-02,  9.9506e-02,  1.1107e-01,  5.5443e-02,
          1.7177e-01]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
18000 特征值优化 tensor(0.4576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3438e-01,  8.7946e-02, -1.7662e-01, -9.9325e-01,  2.4842e+00,
          1.7025e+00,  2.5399e+00,  2.0661e+00,  1.6678e+00,  2.3265e-01,
         -3.8593e-02, -3.7584e-01, -7.2142e-01, -1.9885e-01, -6.4863e-01,
         -1.4204e+00, -3.2104e-01, -1.7688e-02,  2.4960e-01,  1.8344e-01,
         -3.8621e-01,  5.1290e-01,  2.5567e-01,  2.3525e-01,  6.7853e-02,
          7.3041e-01,  5.2929e-01,  8.6840e-01,  6.7801e-01,  4.1291e-02,
          7.1018e-02,  1.7572e-01,  1.3670e-01, -1.7190e-03,  2.0390e-01,
          1.0330e-01,  3.2740e-01, -1.0669e-01,  2.0929e-02, -9.7203e-02,
          5.9004e-02,  1.2324e-01, -5.6124e-02,  1.3933e-01, -2.0734e-01,
          6.2420e-02,  1.4635e-02,  1.8188e-01, -4.5416e-01, -3.0151e-01,
         -7.6540e-02, -2.8201e-01, -1.1967e-01, -1.4621e-01,  3.7998e-01,
          4.2056e-01, -8.1327e-02,  5.4432e-01,  1.5338e-01, -2.0559e-02,
         -5.1282e-01, -5.5638e-01, -2.5449e-01,  1.1601e-02, -9.0231e-02,
          2.0746e-01, -6.7657e-02,  3.4238e-01, -1.8400e-01,  7.4605e-02,
         -2.3949e-01,  1.5643e-01, -1.1063e-01,  2.5890e-01, -2.1666e-01,
          2.6983e-01,  1.6206e-01, -9.5906e-02,  3.2525e-01, -1.2473e-01,
          3.0773e-01, -1.0315e-01,  1.8081e-01,  1.8169e-01, -1.4562e-01,
          1.5724e-01,  2.1209e-02,  1.0623e-01,  1.3929e-01,  2.7051e-01,
          5.5227e-02, -4.5953e-01, -1.9366e-01,  1.2019e-01,  1.3156e-01,
         -2.1989e-01,  4.3689e-01,  4.0319e-01, -4.4874e-01, -2.6938e-01,
          1.0107e-01,  6.0511e-02,  4.3706e-01,  2.7925e-01, -8.3741e-02,
          2.7190e-01,  4.2849e-04,  7.9584e-02, -2.3356e-01,  1.5972e-02,
          5.4516e-02, -7.2498e-02,  8.6276e-02,  1.1372e-01,  7.4552e-04,
          2.8332e-02,  1.8061e-01,  1.2190e-01,  5.1506e-02,  1.7903e-01,
         -3.7884e-02, -1.9643e-02,  2.6678e-01,  1.5382e-01,  1.1838e-02,
          1.4655e-01,  6.9038e-02, -1.9719e-01, -1.0015e-01, -1.0490e-01,
          2.1424e-01,  1.3089e-01,  1.3241e-01, -9.3081e-02,  1.6636e-03,
          2.6313e-02,  2.3917e-01, -1.7118e-01,  2.7144e-02,  1.6888e-01,
         -6.3690e-02, -9.6767e-02, -1.3219e-01,  1.7789e-02, -1.6405e-01,
          2.1677e-01, -1.9787e-01, -1.7025e-02, -4.8657e-02, -5.4554e-02,
          1.6137e-01, -2.9981e-03,  1.7428e-01,  1.4911e-01, -8.9221e-03,
         -8.5461e-03,  5.1466e-02,  9.3826e-02,  1.1435e-01,  5.3162e-02,
          1.7070e-01]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
19000 特征值优化 tensor(0.4601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.6880e-01,  7.6996e-02, -1.8915e-01, -9.9375e-01,  2.5298e+00,
          1.7160e+00,  2.5465e+00,  2.0761e+00,  1.6763e+00,  2.3725e-01,
         -4.0443e-02, -3.7201e-01, -7.2417e-01, -2.1163e-01, -6.4183e-01,
         -1.4168e+00, -3.3102e-01, -2.4464e-02,  2.5637e-01,  1.8941e-01,
         -3.9717e-01,  5.2187e-01,  2.6587e-01,  2.3184e-01,  7.4888e-02,
          7.2626e-01,  5.2587e-01,  8.6463e-01,  6.7532e-01,  4.0160e-02,
          7.0641e-02,  1.7655e-01,  1.2917e-01,  5.5217e-03,  2.0271e-01,
          1.0496e-01,  3.2399e-01, -1.1057e-01,  2.0508e-02, -9.6949e-02,
          5.6655e-02,  1.2379e-01, -5.6649e-02,  1.2723e-01, -2.1074e-01,
          6.5142e-02,  1.3059e-02,  1.8726e-01, -4.5676e-01, -2.8198e-01,
         -8.3575e-02, -2.8933e-01, -1.1493e-01, -1.4913e-01,  3.7409e-01,
          4.2644e-01, -8.7658e-02,  5.5030e-01,  1.4012e-01, -1.3133e-02,
         -5.1900e-01, -5.5599e-01, -2.4932e-01,  5.7147e-03, -1.0279e-01,
          2.1522e-01, -5.9430e-02,  3.3953e-01, -1.8129e-01,  6.7251e-02,
         -2.4183e-01,  1.5351e-01, -1.1244e-01,  2.5790e-01, -2.2072e-01,
          2.5669e-01,  1.5954e-01, -1.0075e-01,  3.2624e-01, -1.2787e-01,
          3.0367e-01, -9.7290e-02,  1.7902e-01,  1.7470e-01, -1.4138e-01,
          1.4966e-01,  1.2949e-02,  1.0866e-01,  1.2395e-01,  2.7590e-01,
          5.2850e-02, -4.4623e-01, -1.9540e-01,  1.2306e-01,  1.3408e-01,
         -2.1651e-01,  4.3714e-01,  4.0500e-01, -4.5069e-01, -2.6532e-01,
          8.5942e-02,  6.0044e-02,  4.2887e-01,  2.7083e-01, -8.3317e-02,
          2.7566e-01, -4.1109e-03,  7.8323e-02, -2.2898e-01,  1.4602e-02,
          5.7486e-02, -6.9205e-02,  9.0731e-02,  1.1589e-01, -2.9246e-04,
          2.0270e-02,  1.7506e-01,  1.1737e-01,  5.4522e-02,  1.7579e-01,
         -4.4486e-02, -2.2207e-02,  2.6647e-01,  1.5579e-01,  1.7796e-02,
          1.4729e-01,  6.7499e-02, -1.9357e-01, -1.0352e-01, -1.0462e-01,
          2.1612e-01,  1.2980e-01,  1.3017e-01, -9.3733e-02,  4.7796e-04,
          3.0182e-02,  2.3704e-01, -1.8007e-01,  3.0051e-02,  1.5497e-01,
         -5.9906e-02, -9.8204e-02, -1.3383e-01,  6.3871e-03, -1.5190e-01,
          2.2196e-01, -1.9631e-01, -1.0377e-02, -5.2018e-02, -5.7151e-02,
          1.6306e-01, -4.8057e-03,  1.7140e-01,  1.5480e-01, -1.3962e-02,
         -3.4409e-03,  4.9823e-02,  8.3914e-02,  1.0709e-01,  5.6478e-02,
          1.6997e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
20000 特征值优化 tensor(0.4574, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.7298e-01,  6.4577e-02, -2.0680e-01, -9.9217e-01,  2.5574e+00,
          1.7271e+00,  2.5410e+00,  2.0662e+00,  1.6784e+00,  2.3066e-01,
         -3.7585e-02, -3.5767e-01, -6.9663e-01, -2.0735e-01, -6.5842e-01,
         -1.4213e+00, -3.4095e-01, -3.0879e-02,  2.5464e-01,  1.9888e-01,
         -4.0293e-01,  5.3292e-01,  2.7861e-01,  2.3619e-01,  6.4532e-02,
          7.4424e-01,  5.3106e-01,  8.4886e-01,  6.5916e-01,  4.9840e-02,
          6.2662e-02,  1.8352e-01,  1.1817e-01,  6.8727e-03,  1.9673e-01,
          1.0618e-01,  3.2525e-01, -1.0340e-01,  2.2001e-02, -9.1417e-02,
          4.0657e-02,  1.2320e-01, -5.6570e-02,  1.2287e-01, -2.1316e-01,
          5.5912e-02,  7.4006e-03,  1.8069e-01, -4.6430e-01, -2.6875e-01,
         -8.7874e-02, -2.8925e-01, -1.1292e-01, -1.5046e-01,  3.6899e-01,
          4.3051e-01, -9.0706e-02,  5.5815e-01,  1.2571e-01, -9.9602e-03,
         -5.1715e-01, -5.5706e-01, -2.4320e-01, -6.9772e-03, -1.1189e-01,
          2.1751e-01, -5.2493e-02,  3.4416e-01, -1.7100e-01,  5.6716e-02,
         -2.5121e-01,  1.5629e-01, -1.1445e-01,  2.6909e-01, -2.2141e-01,
          2.5251e-01,  1.4169e-01, -8.8579e-02,  3.2290e-01, -1.2520e-01,
          2.9802e-01, -1.0178e-01,  1.8442e-01,  1.5882e-01, -1.2670e-01,
          1.6148e-01,  2.1261e-02,  9.7306e-02,  1.2689e-01,  2.7258e-01,
          6.4005e-02, -4.3036e-01, -2.0866e-01,  1.2429e-01,  1.3740e-01,
         -2.1209e-01,  4.3684e-01,  4.3675e-01, -4.4050e-01, -2.6558e-01,
          9.8050e-02,  5.9768e-02,  4.1110e-01,  2.6649e-01, -8.7537e-02,
          2.8168e-01, -3.3625e-04,  7.1904e-02, -2.3574e-01,  1.5739e-02,
          6.1271e-02, -7.9244e-02,  8.5516e-02,  1.0708e-01, -5.8712e-03,
          2.0658e-02,  1.8060e-01,  1.1067e-01,  4.6175e-02,  1.5808e-01,
         -3.6816e-02, -2.0681e-02,  2.7287e-01,  1.5876e-01,  1.2564e-02,
          1.5361e-01,  6.0869e-02, -1.9515e-01, -9.8589e-02, -1.0283e-01,
          2.1763e-01,  1.2797e-01,  1.3155e-01, -8.9594e-02, -9.6496e-03,
          5.6984e-02,  2.5074e-01, -1.7989e-01,  7.5211e-03,  1.4968e-01,
         -8.1915e-02, -9.2779e-02, -1.3593e-01,  2.5630e-02, -1.5885e-01,
          2.1804e-01, -2.1022e-01, -1.4322e-02, -6.3663e-02, -6.9883e-02,
          1.5363e-01, -8.9241e-03,  1.6538e-01,  1.6006e-01, -1.1898e-02,
          3.3525e-03,  6.7304e-02,  8.8624e-02,  1.0800e-01,  5.8217e-02,
          1.8538e-01]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
21000 特征值优化 tensor(0.4575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.0588e-01,  5.4383e-02, -2.1657e-01, -9.9223e-01,  2.6037e+00,
          1.7317e+00,  2.5450e+00,  2.0657e+00,  1.6842e+00,  2.3707e-01,
         -3.4237e-02, -3.4562e-01, -7.0291e-01, -2.2345e-01, -6.4447e-01,
         -1.4294e+00, -3.3060e-01, -3.7909e-02,  2.5999e-01,  2.0488e-01,
         -4.1551e-01,  5.3668e-01,  2.7747e-01,  2.4718e-01,  7.8667e-02,
          7.5111e-01,  5.2284e-01,  8.4633e-01,  6.6446e-01,  4.3658e-02,
          6.9142e-02,  1.8179e-01,  1.0948e-01, -2.0277e-03,  1.9578e-01,
          1.0534e-01,  3.2507e-01, -1.0667e-01,  2.6644e-02, -9.6811e-02,
          3.8972e-02,  1.2348e-01, -5.6302e-02,  1.2459e-01, -2.1070e-01,
          5.3558e-02,  1.0469e-02,  1.8102e-01, -4.6767e-01, -2.6442e-01,
         -8.9376e-02, -2.9515e-01, -1.0496e-01, -1.5513e-01,  3.6754e-01,
          4.3335e-01, -8.7083e-02,  5.6079e-01,  1.2066e-01, -6.0259e-03,
         -5.2334e-01, -5.5657e-01, -2.4526e-01, -1.1001e-02, -1.1408e-01,
          2.1882e-01, -5.1964e-02,  3.4044e-01, -1.6968e-01,  5.7891e-02,
         -2.5282e-01,  1.5507e-01, -1.1106e-01,  2.6719e-01, -2.2171e-01,
          2.5196e-01,  1.4121e-01, -1.0394e-01,  3.2033e-01, -1.2102e-01,
          2.9787e-01, -9.7838e-02,  1.7993e-01,  1.5485e-01, -1.2190e-01,
          1.6085e-01,  1.2110e-02,  9.8754e-02,  1.1852e-01,  2.8339e-01,
          6.5417e-02, -4.2787e-01, -2.0000e-01,  1.2849e-01,  1.3606e-01,
         -2.0987e-01,  4.3704e-01,  4.2180e-01, -4.3978e-01, -2.4807e-01,
          1.0043e-01,  5.7379e-02,  4.1273e-01,  2.6394e-01, -8.2116e-02,
          2.8124e-01,  1.0300e-02,  7.2669e-02, -2.3684e-01,  1.3993e-02,
          5.8539e-02, -7.8622e-02,  9.1117e-02,  1.1377e-01, -1.3552e-03,
          2.0747e-02,  1.7582e-01,  1.0736e-01,  4.4173e-02,  1.6071e-01,
         -3.8684e-02, -2.0865e-02,  2.6630e-01,  1.5657e-01,  1.6871e-02,
          1.5130e-01,  6.1319e-02, -1.9642e-01, -1.0559e-01, -9.9682e-02,
          2.1484e-01,  1.2378e-01,  1.2765e-01, -9.5279e-02, -1.2324e-02,
          5.4765e-02,  2.4200e-01, -1.8953e-01,  1.1445e-02,  1.4581e-01,
         -6.3461e-02, -9.0005e-02, -1.3940e-01,  1.9353e-02, -1.5980e-01,
          2.2094e-01, -2.0482e-01, -1.2064e-02, -5.3804e-02, -6.1710e-02,
          1.6215e-01, -1.3144e-02,  1.5635e-01,  1.5375e-01, -1.9549e-02,
          2.1133e-03,  7.1713e-02,  8.7962e-02,  1.0917e-01,  5.8035e-02,
          1.8663e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
22000 特征值优化 tensor(0.4551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.9930e-01,  5.1879e-02, -2.3365e-01, -9.9190e-01,  2.6075e+00,
          1.7399e+00,  2.5502e+00,  2.0788e+00,  1.7068e+00,  2.3615e-01,
         -2.4453e-02, -3.7182e-01, -7.1994e-01, -1.9294e-01, -6.1509e-01,
         -1.4275e+00, -3.1527e-01, -4.7330e-02,  2.7364e-01,  1.9815e-01,
         -4.1667e-01,  5.3244e-01,  2.7376e-01,  2.5268e-01,  9.0002e-02,
          7.2834e-01,  5.2144e-01,  8.5366e-01,  6.5222e-01,  3.4775e-02,
          6.9520e-02,  1.6734e-01,  1.0898e-01,  1.1179e-03,  2.0054e-01,
          1.0180e-01,  3.0843e-01, -1.0526e-01,  2.3338e-02, -1.0456e-01,
          5.4661e-02,  1.2279e-01, -5.6456e-02,  1.2279e-01, -2.0155e-01,
          6.0148e-02,  1.4563e-02,  1.8560e-01, -4.7644e-01, -2.6248e-01,
         -8.6846e-02, -3.0570e-01, -9.6983e-02, -1.6402e-01,  3.7228e-01,
          4.4878e-01, -7.8523e-02,  5.5508e-01,  1.1525e-01, -5.6246e-03,
         -5.1218e-01, -5.5978e-01, -2.5284e-01,  2.5494e-03, -1.0228e-01,
          2.2059e-01, -5.7318e-02,  3.3918e-01, -1.7374e-01,  7.0205e-02,
         -2.5223e-01,  1.4274e-01, -1.1497e-01,  2.5877e-01, -2.2319e-01,
          2.6453e-01,  1.5298e-01, -1.1308e-01,  3.2564e-01, -1.2875e-01,
          3.0342e-01, -9.5461e-02,  1.6281e-01,  1.7836e-01, -1.4256e-01,
          1.4182e-01,  2.2072e-02,  1.1403e-01,  1.2319e-01,  2.9205e-01,
          5.0014e-02, -4.3429e-01, -1.7516e-01,  1.2274e-01,  1.3320e-01,
         -2.0558e-01,  4.1750e-01,  3.9539e-01, -4.4949e-01, -2.7686e-01,
          9.4326e-02,  6.2859e-02,  4.2135e-01,  2.5469e-01, -7.5488e-02,
          2.7842e-01,  1.0159e-02,  7.3624e-02, -2.3630e-01,  2.3212e-02,
          4.0566e-02, -5.3836e-02,  8.7722e-02,  1.1594e-01,  8.9360e-03,
          2.1341e-02,  1.8215e-01,  1.2372e-01,  3.6883e-02,  1.8523e-01,
         -4.9323e-02, -2.3988e-02,  2.5786e-01,  1.6127e-01,  2.3396e-02,
          1.3913e-01,  5.9388e-02, -2.0051e-01, -1.0686e-01, -9.2161e-02,
          2.1885e-01,  1.2268e-01,  1.3047e-01, -9.5168e-02, -9.6947e-03,
          2.0686e-02,  2.4163e-01, -1.6337e-01,  1.5050e-02,  1.7665e-01,
         -7.4771e-02, -1.1546e-01, -1.2770e-01,  2.7331e-02, -1.5521e-01,
          2.1730e-01, -1.9399e-01, -1.1211e-02, -4.0914e-02, -4.6404e-02,
          1.6689e-01, -1.2054e-02,  1.7358e-01,  1.4739e-01, -1.2892e-02,
         -4.8176e-03,  6.2808e-02,  7.5632e-02,  1.1264e-01,  5.0387e-02,
          1.7692e-01]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
23000 特征值优化 tensor(0.4703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5447e-01,  4.5995e-02, -2.4306e-01, -9.9573e-01,  2.6143e+00,
          1.7453e+00,  2.5603e+00,  2.0846e+00,  1.7003e+00,  2.4134e-01,
         -2.1045e-02, -3.5231e-01, -6.9766e-01, -2.2244e-01, -6.2724e-01,
         -1.4229e+00, -3.3346e-01, -5.2169e-02,  2.5961e-01,  2.0742e-01,
         -4.1392e-01,  5.4759e-01,  2.8033e-01,  2.4398e-01,  1.0273e-01,
          7.2739e-01,  5.1636e-01,  8.3586e-01,  6.5204e-01,  4.9212e-02,
          7.3747e-02,  1.8925e-01,  9.8713e-02, -6.6654e-03,  1.9627e-01,
          1.0675e-01,  3.2210e-01, -1.0550e-01,  1.5303e-02, -9.4911e-02,
          3.6051e-02,  1.2322e-01, -5.4348e-02,  1.1093e-01, -2.1339e-01,
          5.3043e-02,  1.2643e-02,  1.7771e-01, -4.7447e-01, -2.5601e-01,
         -9.3667e-02, -3.0014e-01, -9.5707e-02, -1.6110e-01,  3.5998e-01,
          4.5283e-01, -7.6589e-02,  5.6305e-01,  1.0871e-01, -1.8734e-03,
         -5.2873e-01, -5.5226e-01, -2.5065e-01, -3.9277e-03, -1.1464e-01,
          2.1704e-01, -5.1238e-02,  3.3710e-01, -1.6390e-01,  5.7509e-02,
         -2.5797e-01,  1.4902e-01, -1.1306e-01,  2.5753e-01, -2.2314e-01,
          2.4972e-01,  1.3406e-01, -1.1259e-01,  3.2917e-01, -1.2245e-01,
          2.9357e-01, -9.2741e-02,  1.6780e-01,  1.5874e-01, -1.3651e-01,
          1.4610e-01,  9.6823e-03,  1.0472e-01,  1.1229e-01,  2.8457e-01,
          5.8988e-02, -4.1999e-01, -1.9718e-01,  1.1685e-01,  1.4149e-01,
         -2.0074e-01,  4.2479e-01,  4.3133e-01, -4.5492e-01, -2.4224e-01,
          8.2142e-02,  7.0365e-02,  4.0971e-01,  2.4897e-01, -8.8278e-02,
          2.8373e-01,  2.2458e-02,  6.6981e-02, -2.4694e-01,  1.1271e-02,
          4.9088e-02, -7.6433e-02,  8.9559e-02,  1.0725e-01, -1.9937e-04,
          1.1683e-02,  1.8177e-01,  1.1538e-01,  5.4997e-02,  1.5982e-01,
         -4.2551e-02, -2.3687e-02,  2.6034e-01,  1.5789e-01,  2.6336e-02,
          1.4595e-01,  5.5549e-02, -1.9419e-01, -1.0721e-01, -9.7504e-02,
          2.1831e-01,  1.2306e-01,  1.2650e-01, -9.7339e-02, -1.4918e-02,
          4.7082e-02,  2.2867e-01, -1.8374e-01,  2.0335e-02,  1.5068e-01,
         -6.4558e-02, -9.6473e-02, -1.5151e-01,  8.7045e-03, -1.4520e-01,
          2.3261e-01, -2.0334e-01, -7.3961e-03, -5.9893e-02, -6.3507e-02,
          1.6064e-01, -7.2063e-03,  1.5271e-01,  1.5402e-01, -2.6069e-02,
          2.6903e-03,  6.6272e-02,  7.2375e-02,  1.1549e-01,  5.3960e-02,
          1.8697e-01]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
24000 特征值优化 tensor(0.4790, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6648e-01,  3.5118e-02, -2.4115e-01, -9.9141e-01,  2.6314e+00,
          1.7439e+00,  2.5705e+00,  2.0990e+00,  1.7163e+00,  2.3890e-01,
         -1.1639e-02, -3.4806e-01, -6.8738e-01, -2.2265e-01, -6.3052e-01,
         -1.4248e+00, -3.5168e-01, -5.3338e-02,  2.6224e-01,  2.0703e-01,
         -4.2632e-01,  5.6670e-01,  2.7567e-01,  2.4511e-01,  1.0881e-01,
          7.2600e-01,  5.1289e-01,  8.2723e-01,  6.4284e-01,  5.8660e-02,
          7.4021e-02,  1.7933e-01,  8.8517e-02, -9.0389e-03,  1.9812e-01,
          1.0354e-01,  3.1519e-01, -1.0242e-01,  1.9452e-02, -9.0013e-02,
          3.2770e-02,  1.2291e-01, -5.5123e-02,  1.1600e-01, -2.2303e-01,
          4.4239e-02,  3.1259e-03,  1.8082e-01, -4.7142e-01, -2.5105e-01,
         -9.3775e-02, -3.0146e-01, -8.4371e-02, -1.5925e-01,  3.5155e-01,
          4.6020e-01, -7.5676e-02,  5.6645e-01,  1.0430e-01,  5.2936e-06,
         -5.3224e-01, -5.5201e-01, -2.5270e-01, -1.4297e-02, -1.2287e-01,
          2.1593e-01, -4.1024e-02,  3.4197e-01, -1.6616e-01,  5.7225e-02,
         -2.6368e-01,  1.4786e-01, -1.1397e-01,  2.6492e-01, -2.2869e-01,
          2.4013e-01,  1.2707e-01, -1.1815e-01,  3.2304e-01, -1.2020e-01,
          2.9485e-01, -9.4548e-02,  1.6367e-01,  1.5058e-01, -1.3743e-01,
          1.5144e-01, -2.2942e-03,  1.1410e-01,  1.1502e-01,  2.9828e-01,
          6.1662e-02, -4.1130e-01, -1.9660e-01,  1.1554e-01,  1.3720e-01,
         -2.0263e-01,  4.2072e-01,  4.3743e-01, -4.2732e-01, -2.6164e-01,
          6.9206e-02,  8.0062e-02,  3.9078e-01,  2.4469e-01, -9.0758e-02,
          2.8768e-01,  3.2323e-02,  5.2103e-02, -2.3508e-01,  1.2039e-02,
          5.1154e-02, -7.6520e-02,  8.5637e-02,  1.1507e-01, -2.2491e-03,
          1.3712e-02,  1.9046e-01,  1.1990e-01,  5.7890e-02,  1.5049e-01,
         -3.5868e-02, -2.7861e-02,  2.6009e-01,  1.5914e-01,  3.4374e-02,
          1.4976e-01,  5.2552e-02, -1.9393e-01, -1.1121e-01, -9.4843e-02,
          2.1393e-01,  1.2386e-01,  1.2142e-01, -1.0165e-01, -1.1558e-02,
          4.8676e-02,  2.3361e-01, -1.7455e-01,  5.9032e-03,  1.4473e-01,
         -6.9388e-02, -9.0714e-02, -1.4922e-01,  9.2033e-03, -1.5417e-01,
          2.2844e-01, -2.0017e-01, -1.1674e-02, -6.2095e-02, -6.1114e-02,
          1.6569e-01, -7.4747e-03,  1.5842e-01,  1.6236e-01, -2.8633e-02,
          6.7542e-03,  7.0063e-02,  7.0391e-02,  1.1350e-01,  5.4013e-02,
          1.9480e-01]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
25000 特征值优化 tensor(0.4559, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.7397e-01,  2.4981e-02, -2.4244e-01, -9.8826e-01,  2.6520e+00,
          1.7364e+00,  2.5837e+00,  2.1135e+00,  1.7362e+00,  2.3012e-01,
          2.7555e-03, -3.6344e-01, -6.7491e-01, -2.0250e-01, -6.3615e-01,
         -1.4371e+00, -3.6476e-01, -5.8848e-02,  2.6232e-01,  2.0154e-01,
         -4.3712e-01,  5.7910e-01,  2.7472e-01,  2.5469e-01,  1.0594e-01,
          7.1857e-01,  5.1136e-01,  8.1745e-01,  6.3075e-01,  6.5242e-02,
          7.6507e-02,  1.7842e-01,  8.2024e-02, -1.3513e-02,  2.0192e-01,
          1.0446e-01,  3.1044e-01, -1.0072e-01,  1.5063e-02, -8.7286e-02,
          3.1742e-02,  1.2288e-01, -5.7121e-02,  1.1814e-01, -2.3134e-01,
          3.5334e-02, -8.4585e-03,  1.7850e-01, -4.7777e-01, -2.5050e-01,
         -9.5384e-02, -3.0419e-01, -6.7006e-02, -1.6120e-01,  3.4119e-01,
          4.5617e-01, -7.0951e-02,  5.7205e-01,  1.0471e-01,  6.1436e-04,
         -5.2240e-01, -5.5065e-01, -2.5760e-01, -1.9238e-02, -1.3727e-01,
          2.1296e-01, -3.0590e-02,  3.4026e-01, -1.6347e-01,  5.7624e-02,
         -2.6916e-01,  1.4810e-01, -1.1678e-01,  2.6981e-01, -2.2964e-01,
          2.3972e-01,  1.1780e-01, -1.0982e-01,  3.3164e-01, -1.2228e-01,
          2.9020e-01, -9.0630e-02,  1.5775e-01,  1.4831e-01, -1.4497e-01,
          1.4672e-01, -6.6670e-03,  1.0987e-01,  1.2534e-01,  2.9249e-01,
          6.1862e-02, -3.9885e-01, -1.9158e-01,  1.0967e-01,  1.3498e-01,
         -2.0302e-01,  4.2865e-01,  4.5125e-01, -4.1012e-01, -2.6585e-01,
          6.0314e-02,  9.5135e-02,  3.8653e-01,  2.3869e-01, -9.5693e-02,
          2.8468e-01,  3.9676e-02,  2.8809e-02, -2.3945e-01,  1.4116e-02,
          5.3926e-02, -7.7845e-02,  8.5182e-02,  1.1456e-01, -3.0228e-03,
          9.4900e-03,  1.8831e-01,  1.3006e-01,  5.5304e-02,  1.4997e-01,
         -2.6927e-02, -3.0420e-02,  2.6276e-01,  1.5691e-01,  4.0623e-02,
          1.5128e-01,  5.2293e-02, -1.9402e-01, -1.1234e-01, -8.4722e-02,
          2.1099e-01,  1.2046e-01,  1.2182e-01, -1.0470e-01, -1.3149e-02,
          5.0328e-02,  2.3959e-01, -1.6437e-01, -4.3286e-03,  1.5079e-01,
         -8.0310e-02, -9.0288e-02, -1.5229e-01,  8.9579e-03, -1.5861e-01,
          2.3008e-01, -2.0048e-01, -8.2005e-03, -6.1385e-02, -6.5693e-02,
          1.6229e-01, -3.6482e-03,  1.6093e-01,  1.6428e-01, -2.0939e-02,
          9.5581e-03,  7.0485e-02,  7.2218e-02,  1.0254e-01,  5.6962e-02,
          2.0038e-01]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
26000 特征值优化 tensor(0.4682, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8855e-01,  4.6222e-03, -2.3777e-01, -9.9362e-01,  2.6691e+00,
          1.7269e+00,  2.6054e+00,  2.1239e+00,  1.7475e+00,  2.2891e-01,
          1.2973e-02, -3.8938e-01, -6.8559e-01, -1.9334e-01, -6.2247e-01,
         -1.4261e+00, -3.7115e-01, -6.2725e-02,  2.6150e-01,  1.9746e-01,
         -4.5065e-01,  5.9219e-01,  2.6262e-01,  2.5929e-01,  1.2196e-01,
          7.1357e-01,  4.9962e-01,  8.1029e-01,  6.3568e-01,  5.8738e-02,
          8.4439e-02,  1.6863e-01,  9.0663e-02, -6.8546e-03,  2.0838e-01,
          1.0032e-01,  3.0289e-01, -1.0876e-01,  8.4335e-03, -8.5584e-02,
          3.4188e-02,  1.2348e-01, -5.3582e-02,  1.1195e-01, -2.2363e-01,
          3.4223e-02, -1.1293e-02,  1.9363e-01, -4.7939e-01, -2.5970e-01,
         -9.2193e-02, -3.1014e-01, -5.1069e-02, -1.6808e-01,  3.4010e-01,
          4.5749e-01, -6.8832e-02,  5.6512e-01,  1.0081e-01,  2.9953e-03,
         -5.2306e-01, -5.4547e-01, -2.5438e-01, -1.3711e-02, -1.3652e-01,
          2.2165e-01, -2.3806e-02,  3.4452e-01, -1.7344e-01,  5.9601e-02,
         -2.6447e-01,  1.4130e-01, -1.1908e-01,  2.6262e-01, -2.2723e-01,
          2.3760e-01,  1.2139e-01, -1.2322e-01,  3.2819e-01, -1.2176e-01,
          2.9090e-01, -8.8435e-02,  1.4767e-01,  1.5189e-01, -1.6029e-01,
          1.3795e-01, -1.6556e-02,  1.1346e-01,  1.2412e-01,  2.8144e-01,
          6.0268e-02, -4.0827e-01, -1.8096e-01,  1.0303e-01,  1.3907e-01,
         -2.0452e-01,  4.1842e-01,  4.4236e-01, -4.0825e-01, -2.7466e-01,
          3.4532e-02,  1.1116e-01,  3.7740e-01,  2.3353e-01, -9.5610e-02,
          2.8436e-01,  4.7757e-02,  2.5379e-02, -2.2126e-01,  1.3808e-02,
          4.1066e-02, -6.6001e-02,  8.9206e-02,  1.1829e-01, -1.9747e-03,
          7.8642e-03,  1.8001e-01,  1.1974e-01,  5.8543e-02,  1.4526e-01,
         -2.6668e-02, -3.5188e-02,  2.5149e-01,  1.5375e-01,  4.9715e-02,
          1.4618e-01,  5.5662e-02, -1.9041e-01, -1.1537e-01, -7.9129e-02,
          1.9977e-01,  1.2294e-01,  1.2138e-01, -1.1623e-01, -2.4822e-03,
          3.5802e-02,  2.3019e-01, -1.5864e-01, -4.0937e-04,  1.4097e-01,
         -6.8400e-02, -9.4692e-02, -1.4873e-01, -1.4727e-03, -1.5043e-01,
          2.3189e-01, -1.9816e-01, -4.6331e-03, -5.4865e-02, -6.3768e-02,
          1.6474e-01, -1.9554e-03,  1.5720e-01,  1.5545e-01, -3.5099e-02,
          6.1511e-03,  5.7733e-02,  5.9742e-02,  1.1101e-01,  5.0762e-02,
          1.9643e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
27000 特征值优化 tensor(0.4558, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5991, -0.0029, -0.2309, -0.9872,  2.7175,  1.7284,  2.6345,  2.1318,
          1.7547,  0.2375,  0.0278, -0.4021, -0.6630, -0.1802, -0.6401, -1.4281,
         -0.3716, -0.0681,  0.2618,  0.2025, -0.4579,  0.6083,  0.2647,  0.2548,
          0.1226,  0.7145,  0.4785,  0.7912,  0.6356,  0.0641,  0.0880,  0.1588,
          0.0936, -0.0138,  0.2128,  0.0954,  0.3021, -0.1072,  0.0078, -0.0815,
          0.0326,  0.1226, -0.0572,  0.1211, -0.2298,  0.0245, -0.0183,  0.1956,
         -0.4851, -0.2626, -0.0954, -0.3142, -0.0313, -0.1731,  0.3300,  0.4659,
         -0.0668,  0.5716,  0.1101,  0.0065, -0.5365, -0.5532, -0.2586, -0.0235,
         -0.1519,  0.2103, -0.0066,  0.3548, -0.1850,  0.0584, -0.2723,  0.1429,
         -0.1122,  0.2736, -0.2223,  0.2327,  0.1148, -0.1296,  0.3266, -0.1196,
          0.2875, -0.0890,  0.1493,  0.1451, -0.1558,  0.1414, -0.0338,  0.1195,
          0.1316,  0.2677,  0.0612, -0.3985, -0.1831,  0.1009,  0.1355, -0.2057,
          0.4161,  0.4461, -0.3933, -0.2887,  0.0145,  0.1264,  0.3590,  0.2160,
         -0.0961,  0.2939,  0.0609, -0.0061, -0.1913,  0.0165,  0.0423, -0.0574,
          0.0725,  0.1132, -0.0099,  0.0053,  0.1788,  0.1142,  0.0607,  0.1400,
         -0.0189, -0.0382,  0.2489,  0.1564,  0.0562,  0.1454,  0.0492, -0.1912,
         -0.1154, -0.0680,  0.1961,  0.1211,  0.1156, -0.1295, -0.0062,  0.0404,
          0.2402, -0.1519, -0.0105,  0.1376, -0.0680, -0.0811, -0.1497,  0.0087,
         -0.1623,  0.2229, -0.1866,  0.0038, -0.0644, -0.0782,  0.1631,  0.0055,
          0.1585,  0.1594, -0.0365,  0.0149,  0.0530,  0.0667,  0.0934,  0.0504,
          0.2057]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
28000 特征值优化 tensor(0.4535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.8416e-01, -2.0991e-02, -2.3565e-01, -9.9083e-01,  2.7412e+00,
          1.7182e+00,  2.6845e+00,  2.1557e+00,  1.7466e+00,  2.5701e-01,
          3.2589e-02, -4.4055e-01, -6.6245e-01, -1.7526e-01, -6.5469e-01,
         -1.4223e+00, -3.2982e-01, -8.0685e-02,  2.7145e-01,  1.8995e-01,
         -4.7983e-01,  6.1073e-01,  2.5763e-01,  2.6417e-01,  1.4203e-01,
          6.9806e-01,  4.5439e-01,  7.8286e-01,  6.2653e-01,  5.4025e-02,
          9.2238e-02,  1.3322e-01,  1.0080e-01, -3.8655e-02,  2.2406e-01,
          8.9458e-02,  2.7904e-01, -1.1660e-01,  9.2179e-03, -9.2673e-02,
          4.9539e-02,  1.2259e-01, -5.6485e-02,  1.2246e-01, -2.1375e-01,
          1.3346e-02, -1.7259e-02,  2.0064e-01, -4.9309e-01, -2.6735e-01,
         -9.1988e-02, -3.1936e-01, -7.0048e-03, -1.8862e-01,  3.2942e-01,
          4.7168e-01, -5.9379e-02,  5.6834e-01,  1.0000e-01,  9.8590e-03,
         -5.2558e-01, -5.5145e-01, -2.8176e-01, -1.6505e-02, -1.4401e-01,
          2.3050e-01, -8.8616e-03,  3.5458e-01, -1.9192e-01,  6.0667e-02,
         -2.7080e-01,  1.4193e-01, -1.1970e-01,  2.6691e-01, -2.1718e-01,
          2.4380e-01,  1.3714e-01, -1.5253e-01,  3.1878e-01, -1.1895e-01,
          2.8619e-01, -8.1304e-02,  1.2748e-01,  1.5937e-01, -1.8310e-01,
          1.2538e-01, -2.5012e-02,  1.3295e-01,  1.4491e-01,  2.5718e-01,
          4.7416e-02, -4.0201e-01, -1.4207e-01,  1.0375e-01,  1.3449e-01,
         -2.0561e-01,  3.8255e-01,  4.2793e-01, -4.0347e-01, -3.2968e-01,
         -2.6132e-02,  1.6167e-01,  3.3292e-01,  2.0130e-01, -9.3969e-02,
          2.9125e-01,  8.2122e-02, -1.3616e-02, -1.5841e-01,  1.3980e-02,
          3.0549e-02, -3.4119e-02,  8.9362e-02,  1.2373e-01,  4.3283e-03,
          1.1231e-03,  1.7095e-01,  1.2288e-01,  5.3836e-02,  1.5326e-01,
         -3.0178e-02, -4.5685e-02,  2.2682e-01,  1.5279e-01,  5.8337e-02,
          1.3485e-01,  4.5870e-02, -1.9821e-01, -1.2850e-01, -6.1396e-02,
          1.8635e-01,  1.1686e-01,  1.0825e-01, -1.3547e-01, -5.9008e-03,
         -7.4248e-03,  2.0384e-01, -1.4082e-01,  7.4404e-03,  1.6032e-01,
         -2.7571e-02, -8.9415e-02, -1.6664e-01,  1.9936e-03, -1.7840e-01,
          2.2976e-01, -1.7691e-01, -3.1033e-03, -6.4285e-02, -6.4522e-02,
          1.5619e-01,  1.4076e-02,  1.6780e-01,  1.5051e-01, -4.0350e-02,
          1.3535e-02,  2.7604e-02,  5.6349e-02,  9.7126e-02,  3.9830e-02,
          2.0564e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
29000 特征值优化 tensor(0.4639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4304e-01, -4.8770e-02, -2.2996e-01, -9.9456e-01,  2.7995e+00,
          1.7181e+00,  2.7254e+00,  2.1611e+00,  1.7538e+00,  2.6672e-01,
          4.8101e-02, -4.7814e-01, -6.1992e-01, -1.6644e-01, -6.4988e-01,
         -1.4299e+00, -3.2837e-01, -8.9154e-02,  2.5761e-01,  1.8852e-01,
         -4.8660e-01,  6.1968e-01,  2.6636e-01,  2.5754e-01,  1.4280e-01,
          6.6556e-01,  4.5211e-01,  7.4739e-01,  6.0408e-01,  6.1542e-02,
          1.0320e-01,  1.3582e-01,  1.0578e-01, -7.7361e-03,  2.1969e-01,
          8.5837e-02,  2.7928e-01, -1.1272e-01, -4.3973e-03, -7.4295e-02,
          4.4351e-02,  1.2132e-01, -5.3961e-02,  1.2003e-01, -2.2875e-01,
         -3.8205e-04, -3.1694e-02,  2.0307e-01, -4.9395e-01, -2.6771e-01,
         -9.8525e-02, -3.2861e-01,  4.4975e-03, -1.8977e-01,  3.0979e-01,
          4.7538e-01, -5.3346e-02,  5.7954e-01,  1.0115e-01,  2.0197e-02,
         -5.4485e-01, -5.3500e-01, -2.8749e-01, -1.3872e-02, -1.6864e-01,
          1.9936e-01, -2.3516e-03,  3.5745e-01, -1.8879e-01,  5.2336e-02,
         -2.7166e-01,  1.3941e-01, -1.0551e-01,  2.7642e-01, -2.1449e-01,
          2.2527e-01,  1.2226e-01, -1.2075e-01,  3.4046e-01, -1.2164e-01,
          2.8215e-01, -9.4520e-02,  1.3499e-01,  1.4034e-01, -1.6823e-01,
          1.2685e-01, -3.4737e-02,  1.0783e-01,  1.6692e-01,  2.3630e-01,
          5.8779e-02, -4.0232e-01, -1.7862e-01,  9.0577e-02,  1.3754e-01,
         -2.0605e-01,  3.9779e-01,  4.4191e-01, -3.9894e-01, -2.9815e-01,
         -5.1556e-02,  1.8228e-01,  3.2841e-01,  1.9298e-01, -8.8322e-02,
          2.7888e-01,  1.0177e-01, -5.0573e-02, -1.3232e-01, -1.5946e-03,
          4.0587e-02, -5.5271e-02,  8.7071e-02,  1.2459e-01, -1.4712e-02,
         -1.2670e-03,  1.6400e-01,  1.1013e-01,  5.5749e-02,  1.3795e-01,
         -2.1273e-02, -4.7250e-02,  2.3066e-01,  1.5670e-01,  6.2919e-02,
          1.4124e-01,  4.2224e-02, -1.9812e-01, -1.2371e-01, -6.5051e-02,
          1.7496e-01,  1.2706e-01,  1.0656e-01, -1.4050e-01, -5.1443e-03,
          3.3614e-03,  2.2091e-01, -1.3596e-01, -7.0794e-04,  1.3385e-01,
         -2.9713e-02, -8.3534e-02, -1.5467e-01,  1.0062e-02, -1.6834e-01,
          2.2854e-01, -1.8330e-01, -4.6774e-03, -7.4858e-02, -7.2804e-02,
          1.5270e-01,  2.3306e-02,  1.6298e-01,  1.6751e-01, -4.7841e-02,
          2.2410e-02,  3.1208e-02,  5.3142e-02,  8.6285e-02,  2.9963e-02,
          2.1199e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
30000 特征值优化 tensor(0.4604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.8011e-01, -8.8439e-02, -2.2032e-01, -9.9207e-01,  2.8458e+00,
          1.7171e+00,  2.7601e+00,  2.1491e+00,  1.7462e+00,  2.8653e-01,
          6.3883e-02, -5.1898e-01, -5.8434e-01, -1.6755e-01, -6.2764e-01,
         -1.4309e+00, -3.0590e-01, -9.6870e-02,  2.5344e-01,  1.6605e-01,
         -5.0682e-01,  6.0778e-01,  2.6790e-01,  2.7630e-01,  1.4075e-01,
          6.4812e-01,  4.1773e-01,  7.1908e-01,  6.0645e-01,  6.6777e-02,
          1.1504e-01,  1.3685e-01,  1.1106e-01, -2.8720e-02,  2.2480e-01,
          9.0736e-02,  2.6739e-01, -1.1731e-01, -3.5066e-03, -8.0798e-02,
          5.4286e-02,  1.2388e-01, -5.3176e-02,  1.1666e-01, -2.3207e-01,
         -8.8553e-03, -3.8486e-02,  1.9928e-01, -4.9049e-01, -2.6683e-01,
         -1.1153e-01, -3.3665e-01,  2.5723e-02, -1.9781e-01,  2.9211e-01,
          4.7031e-01, -2.7933e-02,  5.9432e-01,  1.0263e-01,  3.0514e-02,
         -5.4801e-01, -5.2995e-01, -3.0552e-01, -1.7543e-02, -1.7923e-01,
          2.0141e-01,  9.0379e-04,  3.5993e-01, -1.9732e-01,  5.6409e-02,
         -2.6626e-01,  1.3955e-01, -8.9021e-02,  2.9289e-01, -2.0595e-01,
          2.2522e-01,  1.2184e-01, -1.2659e-01,  3.4372e-01, -1.2383e-01,
          2.8228e-01, -1.0035e-01,  1.4018e-01,  1.3488e-01, -1.8425e-01,
          1.5084e-01, -5.1716e-02,  1.2303e-01,  1.8213e-01,  2.4319e-01,
          5.7864e-02, -4.0619e-01, -1.7869e-01,  8.2543e-02,  1.2955e-01,
         -2.1402e-01,  3.6682e-01,  4.4041e-01, -4.1604e-01, -3.0138e-01,
         -8.4374e-02,  2.0089e-01,  3.2536e-01,  1.9452e-01, -9.7439e-02,
          2.7019e-01,  1.3244e-01, -6.7963e-02, -1.0929e-01, -5.9212e-03,
          4.7909e-02, -4.9025e-02,  8.6429e-02,  1.2238e-01, -7.6984e-03,
          6.4329e-03,  1.5110e-01,  9.1673e-02,  6.0244e-02,  1.4322e-01,
         -2.2092e-02, -4.3647e-02,  2.2458e-01,  1.5570e-01,  6.6366e-02,
          1.4743e-01,  4.1797e-02, -1.9440e-01, -1.2230e-01, -6.0715e-02,
          1.6878e-01,  1.2597e-01,  1.0713e-01, -1.4651e-01, -1.0868e-02,
          4.3491e-03,  2.1128e-01, -1.1331e-01,  1.9405e-02,  1.1998e-01,
         -2.5218e-02, -7.5811e-02, -1.6497e-01,  1.4733e-02, -1.6537e-01,
          2.2834e-01, -1.8540e-01, -1.4708e-02, -9.2014e-02, -7.4966e-02,
          1.6011e-01,  1.5584e-02,  1.6013e-01,  1.6879e-01, -5.1625e-02,
          2.3940e-02,  2.8624e-02,  6.9015e-02,  6.9147e-02,  4.4670e-02,
          2.1090e-01]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
31000 特征值优化 tensor(0.4538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.2684e-01, -1.0562e-01, -2.2159e-01, -9.8835e-01,  2.8500e+00,
          1.7076e+00,  2.7690e+00,  2.1427e+00,  1.7433e+00,  3.0199e-01,
          7.6132e-02, -5.7377e-01, -5.7835e-01, -1.4543e-01, -6.2991e-01,
         -1.4225e+00, -2.9170e-01, -1.0118e-01,  2.4197e-01,  1.4692e-01,
         -5.1714e-01,  6.0485e-01,  2.6355e-01,  2.7307e-01,  1.6443e-01,
          6.2678e-01,  3.9852e-01,  7.1072e-01,  5.9768e-01,  6.7679e-02,
          1.0778e-01,  1.2530e-01,  9.5226e-02, -3.6404e-02,  2.3627e-01,
          9.3862e-02,  2.4581e-01, -1.3314e-01, -6.3000e-03, -8.3298e-02,
          4.4559e-02,  1.2237e-01, -5.7183e-02,  1.2423e-01, -2.2811e-01,
         -1.1431e-02, -3.5265e-02,  1.9934e-01, -4.8460e-01, -2.6213e-01,
         -1.2105e-01, -3.5277e-01,  6.6991e-02, -2.0538e-01,  2.7932e-01,
          4.6945e-01, -1.5630e-02,  5.8832e-01,  8.4188e-02,  3.5443e-02,
         -5.3838e-01, -5.2835e-01, -3.2190e-01, -2.4321e-03, -1.9578e-01,
          2.1259e-01, -1.0589e-02,  3.6323e-01, -2.1243e-01,  6.4212e-02,
         -2.6924e-01,  1.4041e-01, -8.7326e-02,  2.9299e-01, -2.1640e-01,
          2.3913e-01,  1.1176e-01, -1.0944e-01,  3.7123e-01, -1.3249e-01,
          2.9111e-01, -1.0913e-01,  1.3845e-01,  1.5860e-01, -1.9889e-01,
          1.2044e-01, -2.5565e-02,  1.1766e-01,  2.2391e-01,  2.2361e-01,
          6.0793e-02, -4.0375e-01, -1.7547e-01,  7.3564e-02,  1.3515e-01,
         -2.0886e-01,  3.4901e-01,  4.0644e-01, -4.0543e-01, -2.9492e-01,
         -1.1464e-01,  2.2108e-01,  3.4191e-01,  1.9169e-01, -1.0175e-01,
          2.6162e-01,  1.6152e-01, -8.0805e-02, -1.1229e-01, -9.5660e-03,
          3.9806e-02, -3.9911e-02,  9.4812e-02,  1.1539e-01, -1.3170e-02,
         -7.9598e-03,  1.4972e-01,  1.0771e-01,  5.3679e-02,  1.5059e-01,
         -2.1834e-02, -5.4242e-02,  2.1454e-01,  1.4455e-01,  7.2714e-02,
          1.4654e-01,  4.0181e-02, -2.0264e-01, -1.3307e-01, -5.5826e-02,
          1.5887e-01,  1.2382e-01,  1.0072e-01, -1.4599e-01, -9.8088e-03,
         -1.1735e-02,  1.9016e-01, -1.1566e-01,  2.2322e-02,  1.4784e-01,
         -3.3041e-02, -7.9080e-02, -1.7806e-01,  7.6637e-03, -1.5865e-01,
          2.2954e-01, -1.8468e-01, -1.6756e-02, -8.8513e-02, -7.6367e-02,
          1.6387e-01,  2.3660e-02,  1.6722e-01,  1.5566e-01, -4.4250e-02,
          1.8889e-02,  1.3438e-02,  7.2849e-02,  7.1772e-02,  3.3474e-02,
          2.0055e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
32000 特征值优化 tensor(0.4548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4114, -0.1143, -0.2073, -0.9879,  2.8860,  1.7005,  2.7879,  2.1486,
          1.7368,  0.2829,  0.0917, -0.5748, -0.5624, -0.1518, -0.6251, -1.4194,
         -0.2867, -0.1050,  0.2308,  0.1421, -0.5216,  0.6162,  0.2725,  0.2884,
          0.1723,  0.6184,  0.3963,  0.6967,  0.5979,  0.0766,  0.1153,  0.1149,
          0.0973, -0.0478,  0.2450,  0.0979,  0.2427, -0.1406, -0.0122, -0.0756,
          0.0359,  0.1220, -0.0563,  0.1277, -0.2371, -0.0220, -0.0352,  0.2088,
         -0.4805, -0.2632, -0.1376, -0.3702,  0.0789, -0.2111,  0.2653,  0.4582,
         -0.0161,  0.5862,  0.0745,  0.0507, -0.5324, -0.5285, -0.3319, -0.0067,
         -0.2088,  0.2052, -0.0124,  0.3666, -0.2144,  0.0627, -0.2611,  0.1329,
         -0.0745,  0.2997, -0.2128,  0.2323,  0.1085, -0.1171,  0.3751, -0.1336,
          0.2918, -0.1220,  0.1419,  0.1362, -0.2019,  0.1288, -0.0426,  0.1241,
          0.2225,  0.2408,  0.0620, -0.4124, -0.1938,  0.0699,  0.1361, -0.2122,
          0.3357,  0.3964, -0.3832, -0.2913, -0.1262,  0.2280,  0.3412,  0.1824,
         -0.1076,  0.2476,  0.1637, -0.0917, -0.0953, -0.0072,  0.0369, -0.0438,
          0.0892,  0.1219, -0.0117, -0.0101,  0.1488,  0.1037,  0.0466,  0.1365,
         -0.0112, -0.0536,  0.2127,  0.1391,  0.0765,  0.1526,  0.0376, -0.2055,
         -0.1326, -0.0501,  0.1505,  0.1271,  0.1014, -0.1522, -0.0082, -0.0061,
          0.1829, -0.1183,  0.0309,  0.1390, -0.0295, -0.0788, -0.1807, -0.0079,
         -0.1572,  0.2191, -0.1879, -0.0199, -0.0934, -0.0800,  0.1692,  0.0221,
          0.1661,  0.1579, -0.0497,  0.0214,  0.0187,  0.0832,  0.0713,  0.0306,
          0.2021]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
33000 特征值优化 tensor(0.4552, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.1161e-01, -1.3421e-01, -1.9857e-01, -9.8744e-01,  2.9420e+00,
          1.7002e+00,  2.7879e+00,  2.1495e+00,  1.7372e+00,  2.5693e-01,
          1.1387e-01, -5.8610e-01, -5.5602e-01, -1.5640e-01, -6.1036e-01,
         -1.4266e+00, -2.6678e-01, -1.0820e-01,  2.2481e-01,  1.5563e-01,
         -5.4435e-01,  6.2847e-01,  2.7550e-01,  2.8075e-01,  1.7672e-01,
          6.1278e-01,  4.0231e-01,  6.9724e-01,  5.9191e-01,  8.2906e-02,
          1.2585e-01,  1.2137e-01,  9.1944e-02, -3.4476e-02,  2.4549e-01,
          9.6261e-02,  2.3489e-01, -1.4498e-01, -2.0898e-02, -5.9532e-02,
          4.0066e-02,  1.2227e-01, -5.7481e-02,  1.2615e-01, -2.5267e-01,
         -3.3768e-02, -3.6504e-02,  2.0781e-01, -4.7722e-01, -2.6155e-01,
         -1.5578e-01, -3.6950e-01,  8.4673e-02, -2.0834e-01,  2.5512e-01,
          4.5331e-01, -2.4822e-02,  5.7865e-01,  7.8068e-02,  6.6526e-02,
         -5.2742e-01, -5.1947e-01, -3.4811e-01, -1.9261e-02, -2.1643e-01,
          1.9065e-01, -2.6751e-02,  3.7646e-01, -2.1782e-01,  5.4164e-02,
         -2.5298e-01,  1.2433e-01, -6.4222e-02,  3.0926e-01, -2.1073e-01,
          2.2871e-01,  1.1299e-01, -1.3582e-01,  3.7839e-01, -1.3206e-01,
          2.8214e-01, -1.1672e-01,  1.4148e-01,  1.4805e-01, -1.9605e-01,
          1.4141e-01, -6.4771e-02,  1.4253e-01,  2.2109e-01,  2.2323e-01,
          8.4691e-02, -4.1592e-01, -2.0569e-01,  5.6047e-02,  1.3614e-01,
         -2.1389e-01,  3.2417e-01,  4.1861e-01, -3.8814e-01, -2.8181e-01,
         -1.4052e-01,  2.2289e-01,  3.3309e-01,  1.9276e-01, -1.1588e-01,
          2.4856e-01,  1.6288e-01, -1.1712e-01, -8.4466e-02, -6.6872e-03,
          4.2180e-02, -3.6698e-02,  8.3401e-02,  1.1232e-01, -1.4097e-02,
         -2.7783e-02,  1.3675e-01,  9.6701e-02,  3.4192e-02,  1.1969e-01,
         -1.0157e-02, -5.2219e-02,  2.1072e-01,  1.3908e-01,  8.3001e-02,
          1.6182e-01,  3.5062e-02, -2.0541e-01, -1.3020e-01, -4.5677e-02,
          1.4810e-01,  1.3058e-01,  9.5751e-02, -1.5118e-01, -5.6591e-03,
         -2.5731e-03,  1.7532e-01, -1.1948e-01,  2.7560e-02,  1.1902e-01,
         -1.1970e-02, -6.4932e-02, -1.8169e-01, -2.5409e-02, -1.6859e-01,
          2.2176e-01, -1.8807e-01, -2.0569e-02, -1.1627e-01, -1.0776e-01,
          1.6751e-01,  3.5520e-02,  1.5211e-01,  1.6896e-01, -5.7003e-02,
          4.0529e-02,  1.0983e-02,  8.1471e-02,  6.6269e-02,  3.3787e-02,
          2.0385e-01]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
34000 特征值优化 tensor(0.4613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3795, -0.1430, -0.2016, -0.9949,  2.9510,  1.6948,  2.8077,  2.1490,
          1.7219,  0.2561,  0.1251, -0.6164, -0.5599, -0.1407, -0.5955, -1.4271,
         -0.2737, -0.1052,  0.2165,  0.1585, -0.5429,  0.6391,  0.2779,  0.2697,
          0.1679,  0.6158,  0.3855,  0.6756,  0.5999,  0.0791,  0.1265,  0.1144,
          0.0851, -0.0551,  0.2426,  0.0995,  0.2144, -0.1558, -0.0092, -0.0715,
          0.0406,  0.1224, -0.0511,  0.1315, -0.2446, -0.0266, -0.0173,  0.2091,
         -0.4849, -0.2504, -0.1638, -0.3865,  0.0923, -0.2130,  0.2544,  0.4593,
         -0.0107,  0.5630,  0.0677,  0.0761, -0.5200, -0.5208, -0.3413, -0.0063,
         -0.2230,  0.1835, -0.0282,  0.3777, -0.2282,  0.0532, -0.2553,  0.1210,
         -0.0603,  0.3137, -0.2099,  0.2296,  0.1212, -0.1180,  0.3892, -0.1312,
          0.2802, -0.1244,  0.1386,  0.1457, -0.2049,  0.1456, -0.0604,  0.1650,
          0.2361,  0.2274,  0.0759, -0.4042, -0.2053,  0.0653,  0.1293, -0.2180,
          0.2979,  0.3851, -0.3915, -0.2836, -0.1645,  0.2345,  0.3192,  0.1868,
         -0.1182,  0.2533,  0.1551, -0.1084, -0.0670, -0.0050,  0.0332, -0.0408,
          0.0854,  0.1125, -0.0176, -0.0236,  0.1397,  0.0906,  0.0466,  0.1286,
         -0.0132, -0.0532,  0.1976,  0.1333,  0.0824,  0.1606,  0.0316, -0.2080,
         -0.1343, -0.0449,  0.1480,  0.1346,  0.1031, -0.1586, -0.0055, -0.0084,
          0.1685, -0.1109,  0.0189,  0.1271, -0.0264, -0.0652, -0.1833, -0.0247,
         -0.1510,  0.2181, -0.1820, -0.0203, -0.1122, -0.1069,  0.1622,  0.0346,
          0.1597,  0.1651, -0.0596,  0.0318, -0.0050,  0.0794,  0.0550,  0.0322,
          0.1955]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
35000 特征值优化 tensor(0.4538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8334e-01, -1.4624e-01, -1.9662e-01, -9.8802e-01,  2.9752e+00,
          1.6941e+00,  2.8273e+00,  2.1632e+00,  1.7197e+00,  2.6731e-01,
          1.2303e-01, -6.2782e-01, -5.5416e-01, -1.3587e-01, -6.1886e-01,
         -1.4310e+00, -2.8022e-01, -1.0620e-01,  2.0502e-01,  1.5964e-01,
         -5.3185e-01,  6.3939e-01,  2.7614e-01,  2.7085e-01,  1.7441e-01,
          5.9302e-01,  3.8191e-01,  6.6959e-01,  5.8708e-01,  7.8580e-02,
          1.2104e-01,  1.1122e-01,  8.7701e-02, -6.6044e-02,  2.4786e-01,
          1.0013e-01,  2.0318e-01, -1.5105e-01, -1.0137e-02, -6.6914e-02,
          2.3611e-02,  1.2219e-01, -5.6977e-02,  1.2619e-01, -2.3711e-01,
         -3.0393e-02, -1.7751e-02,  2.0603e-01, -4.8067e-01, -2.4975e-01,
         -1.7499e-01, -3.9613e-01,  8.9572e-02, -2.2016e-01,  2.5856e-01,
          4.5182e-01, -5.8111e-03,  5.6198e-01,  5.7852e-02,  8.1445e-02,
         -5.1262e-01, -5.2506e-01, -3.5400e-01, -1.0992e-02, -2.3078e-01,
          1.9462e-01, -2.5842e-02,  3.7393e-01, -2.3613e-01,  5.9090e-02,
         -2.5397e-01,  1.2013e-01, -5.8096e-02,  3.0802e-01, -2.0539e-01,
          2.2720e-01,  1.1631e-01, -1.0992e-01,  3.8891e-01, -1.3573e-01,
          2.9007e-01, -1.2978e-01,  1.3996e-01,  1.4290e-01, -2.0931e-01,
          1.4410e-01, -4.7329e-02,  1.5414e-01,  2.3139e-01,  2.2995e-01,
          7.5648e-02, -3.9857e-01, -2.1143e-01,  6.4296e-02,  1.3439e-01,
         -2.1506e-01,  2.8845e-01,  3.7105e-01, -3.6480e-01, -2.7638e-01,
         -1.7033e-01,  2.3634e-01,  3.3225e-01,  1.6971e-01, -1.2073e-01,
          2.3880e-01,  1.5487e-01, -1.0816e-01, -7.8593e-02, -6.5201e-04,
          2.3536e-02, -3.7264e-02,  8.2599e-02,  1.1418e-01, -1.1303e-02,
         -2.3802e-02,  1.4494e-01,  1.0411e-01,  3.8930e-02,  1.2247e-01,
         -6.9999e-03, -6.4814e-02,  1.7967e-01,  1.2933e-01,  8.8178e-02,
          1.6053e-01,  3.3730e-02, -2.1075e-01, -1.3276e-01, -4.3481e-02,
          1.4345e-01,  1.3545e-01,  1.0509e-01, -1.6008e-01, -2.6331e-03,
         -1.3626e-02,  1.6001e-01, -1.1614e-01,  2.2141e-02,  1.3632e-01,
         -3.2384e-02, -7.4961e-02, -1.9316e-01, -2.0096e-02, -1.5603e-01,
          2.1680e-01, -1.8587e-01, -2.0890e-02, -1.1692e-01, -1.0145e-01,
          1.6961e-01,  2.9673e-02,  1.6378e-01,  1.6441e-01, -6.0271e-02,
          2.7828e-02,  6.6465e-03,  8.8402e-02,  6.0553e-02,  3.0256e-02,
          2.0206e-01]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
36000 特征值优化 tensor(0.4527, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9762e-01, -1.5563e-01, -2.0237e-01, -9.8669e-01,  3.0160e+00,
          1.7011e+00,  2.8347e+00,  2.1747e+00,  1.7237e+00,  2.6137e-01,
          1.3222e-01, -6.1900e-01, -5.6418e-01, -1.3757e-01, -5.9930e-01,
         -1.4338e+00, -2.8400e-01, -1.0843e-01,  1.9744e-01,  1.7044e-01,
         -5.3335e-01,  6.4001e-01,  2.6916e-01,  2.7744e-01,  1.8394e-01,
          5.6056e-01,  3.8170e-01,  6.6712e-01,  5.8361e-01,  8.9976e-02,
          1.2492e-01,  1.1631e-01,  8.6859e-02, -3.8963e-02,  2.4435e-01,
          9.2540e-02,  2.1035e-01, -1.5200e-01, -2.5585e-02, -4.7919e-02,
          4.0521e-02,  1.2237e-01, -5.7623e-02,  1.2298e-01, -2.5838e-01,
         -3.9552e-02, -9.3676e-03,  2.1125e-01, -4.7469e-01, -2.4751e-01,
         -1.8278e-01, -3.9225e-01,  7.5715e-02, -2.1940e-01,  2.5918e-01,
          4.4483e-01, -1.9018e-02,  5.5903e-01,  6.3029e-02,  9.9480e-02,
         -5.1311e-01, -5.2179e-01, -3.5833e-01, -2.9220e-02, -2.2897e-01,
          1.8605e-01, -4.5767e-02,  3.8736e-01, -2.3753e-01,  5.1676e-02,
         -2.5000e-01,  1.1051e-01, -4.6965e-02,  2.9975e-01, -2.1070e-01,
          2.3246e-01,  1.0911e-01, -1.2601e-01,  3.9192e-01, -1.2324e-01,
          2.8954e-01, -1.2872e-01,  1.4154e-01,  1.5234e-01, -1.9118e-01,
          1.4406e-01, -7.1474e-02,  1.6114e-01,  2.3678e-01,  2.4277e-01,
          9.5868e-02, -3.9986e-01, -2.2035e-01,  5.2299e-02,  1.3513e-01,
         -2.1321e-01,  2.9359e-01,  3.9499e-01, -3.6850e-01, -2.5751e-01,
         -1.8198e-01,  2.2252e-01,  3.4146e-01,  1.7395e-01, -1.2850e-01,
          2.3476e-01,  1.4590e-01, -1.2532e-01, -8.9154e-02, -1.3726e-03,
          3.1919e-02, -3.8461e-02,  7.3839e-02,  1.0730e-01, -2.4217e-02,
         -3.3258e-02,  1.4558e-01,  9.5272e-02,  3.4198e-02,  1.0364e-01,
         -4.9742e-03, -6.1964e-02,  1.7684e-01,  1.2315e-01,  8.9876e-02,
          1.6732e-01,  3.6095e-02, -2.1697e-01, -1.3724e-01, -3.2216e-02,
          1.4155e-01,  1.3635e-01,  9.4865e-02, -1.5228e-01,  1.7840e-03,
         -1.9039e-02,  1.5226e-01, -1.0057e-01,  2.7791e-02,  1.1772e-01,
         -1.0443e-02, -6.9322e-02, -2.0190e-01, -3.7850e-02, -1.6863e-01,
          2.2880e-01, -1.9020e-01, -1.8207e-02, -1.2376e-01, -1.1098e-01,
          1.7042e-01,  3.3336e-02,  1.5625e-01,  1.7437e-01, -7.3282e-02,
          2.9375e-02,  8.4577e-03,  9.3251e-02,  5.8587e-02,  4.2573e-02,
          2.0689e-01]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
37000 特征值优化 tensor(0.4534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8354e-01, -1.7411e-01, -1.9606e-01, -9.9167e-01,  3.0239e+00,
          1.7107e+00,  2.8480e+00,  2.1695e+00,  1.7147e+00,  2.6840e-01,
          1.3245e-01, -6.1735e-01, -5.6278e-01, -1.3207e-01, -6.1246e-01,
         -1.4144e+00, -2.6373e-01, -1.1850e-01,  1.9784e-01,  1.5241e-01,
         -5.2174e-01,  6.3616e-01,  2.8020e-01,  2.6689e-01,  1.8154e-01,
          5.8066e-01,  3.7257e-01,  6.7082e-01,  5.8950e-01,  9.0857e-02,
          1.2752e-01,  1.0455e-01,  6.8926e-02, -5.7909e-02,  2.4987e-01,
          9.8551e-02,  1.8781e-01, -1.5470e-01, -1.4311e-02, -6.7883e-02,
          2.2010e-02,  1.2235e-01, -5.6653e-02,  1.2384e-01, -2.5107e-01,
         -3.5731e-02, -9.3569e-04,  2.0131e-01, -4.8435e-01, -2.5266e-01,
         -1.8582e-01, -3.9865e-01,  8.1931e-02, -2.2254e-01,  2.6196e-01,
          4.5434e-01,  6.9576e-03,  5.5091e-01,  6.0609e-02,  9.7625e-02,
         -5.0661e-01, -5.2305e-01, -3.5197e-01, -1.7999e-02, -2.3226e-01,
          1.8524e-01, -4.0774e-02,  3.7562e-01, -2.3050e-01,  5.4320e-02,
         -2.5552e-01,  1.1963e-01, -6.2243e-02,  3.1365e-01, -2.0490e-01,
          2.3388e-01,  1.1954e-01, -1.1431e-01,  4.0286e-01, -1.3211e-01,
          2.9199e-01, -1.3298e-01,  1.3931e-01,  1.4058e-01, -2.0290e-01,
          1.4948e-01, -4.2891e-02,  1.7082e-01,  2.3341e-01,  2.2563e-01,
          7.8516e-02, -3.9100e-01, -2.0755e-01,  6.6706e-02,  1.3348e-01,
         -2.1554e-01,  2.6403e-01,  3.5797e-01, -3.5669e-01, -2.7103e-01,
         -1.8614e-01,  2.3132e-01,  3.3690e-01,  1.6620e-01, -1.3130e-01,
          2.2655e-01,  1.4811e-01, -1.0352e-01, -8.0828e-02, -1.6076e-03,
          2.9129e-02, -3.3386e-02,  8.9440e-02,  1.2248e-01, -2.2878e-02,
         -2.3987e-02,  1.4103e-01,  1.0791e-01,  4.4420e-02,  1.1709e-01,
         -1.1054e-02, -6.6653e-02,  1.7852e-01,  1.2159e-01,  9.2471e-02,
          1.5829e-01,  2.8695e-02, -2.1386e-01, -1.4059e-01, -3.3450e-02,
          1.4000e-01,  1.3453e-01,  9.9515e-02, -1.5789e-01, -6.4352e-03,
         -2.4651e-02,  1.5505e-01, -1.0642e-01,  2.4391e-02,  1.3729e-01,
         -2.6389e-02, -7.8049e-02, -1.9694e-01, -2.4977e-02, -1.5134e-01,
          2.1189e-01, -1.8222e-01, -2.6725e-02, -1.0860e-01, -1.0317e-01,
          1.7165e-01,  2.7524e-02,  1.5726e-01,  1.6772e-01, -5.9527e-02,
          2.9799e-02,  6.1448e-03,  9.7607e-02,  6.0180e-02,  2.9617e-02,
          1.9616e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
38000 特征值优化 tensor(0.4530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3706, -0.1861, -0.2036, -0.9909,  3.0640,  1.7142,  2.8478,  2.1692,
          1.7121,  0.2761,  0.1323, -0.6129, -0.5630, -0.1157, -0.6124, -1.4130,
         -0.2655, -0.1209,  0.1956,  0.1478, -0.5208,  0.6401,  0.2868,  0.2598,
          0.1794,  0.5759,  0.3720,  0.6732,  0.5928,  0.0926,  0.1263,  0.0996,
          0.0655, -0.0619,  0.2463,  0.0967,  0.1729, -0.1599, -0.0049, -0.0698,
          0.0290,  0.1225, -0.0565,  0.1224, -0.2541, -0.0360,  0.0054,  0.1996,
         -0.4817, -0.2509, -0.1895, -0.4049,  0.0801, -0.2165,  0.2634,  0.4607,
          0.0129,  0.5479,  0.0600,  0.1042, -0.5009, -0.5272, -0.3543, -0.0185,
         -0.2388,  0.1819, -0.0451,  0.3765, -0.2300,  0.0539, -0.2575,  0.1240,
         -0.0580,  0.3167, -0.2031,  0.2338,  0.1242, -0.1010,  0.4083, -0.1323,
          0.2899, -0.1299,  0.1354,  0.1384, -0.2053,  0.1426, -0.0434,  0.1715,
          0.2368,  0.2221,  0.0772, -0.3856, -0.2059,  0.0730,  0.1340, -0.2139,
          0.2585,  0.3470, -0.3606, -0.2797, -0.1840,  0.2261,  0.3305,  0.1683,
         -0.1427,  0.2301,  0.1394, -0.1011, -0.0775, -0.0045,  0.0268, -0.0343,
          0.0818,  0.1239, -0.0240, -0.0288,  0.1480,  0.1118,  0.0432,  0.1179,
         -0.0117, -0.0696,  0.1773,  0.1225,  0.0926,  0.1609,  0.0277, -0.2130,
         -0.1430, -0.0319,  0.1396,  0.1318,  0.0999, -0.1587, -0.0074, -0.0180,
          0.1576, -0.1077,  0.0303,  0.1477, -0.0215, -0.0861, -0.1867, -0.0227,
         -0.1473,  0.2169, -0.1768, -0.0241, -0.1158, -0.1057,  0.1737,  0.0320,
          0.1620,  0.1626, -0.0546,  0.0270,  0.0041,  0.0994,  0.0570,  0.0306,
          0.1961]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
39000 特征值优化 tensor(0.4522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.4978e-01, -2.0041e-01, -2.1181e-01, -9.8674e-01,  3.0798e+00,
          1.7221e+00,  2.8523e+00,  2.1737e+00,  1.7141e+00,  2.7107e-01,
          1.3651e-01, -6.0618e-01, -5.6152e-01, -1.1983e-01, -6.1140e-01,
         -1.4125e+00, -2.6658e-01, -1.2280e-01,  1.9194e-01,  1.4076e-01,
         -5.2241e-01,  6.3755e-01,  2.8792e-01,  2.5805e-01,  1.8115e-01,
          5.7271e-01,  3.6138e-01,  6.6227e-01,  5.9470e-01,  9.5286e-02,
          1.2477e-01,  9.6531e-02,  6.3400e-02, -6.2319e-02,  2.4470e-01,
          9.5642e-02,  1.6659e-01, -1.5800e-01, -6.6538e-03, -7.0382e-02,
          2.3897e-02,  1.2247e-01, -5.5794e-02,  1.2172e-01, -2.5543e-01,
         -3.9224e-02,  8.3109e-03,  1.9744e-01, -4.8269e-01, -2.4768e-01,
         -1.9539e-01, -4.0332e-01,  8.0816e-02, -2.1712e-01,  2.6668e-01,
          4.5754e-01,  1.1332e-02,  5.3913e-01,  6.1148e-02,  1.0900e-01,
         -4.9838e-01, -5.2375e-01, -3.5682e-01, -1.8417e-02, -2.4100e-01,
          1.8062e-01, -5.0616e-02,  3.7714e-01, -2.3270e-01,  5.4576e-02,
         -2.6117e-01,  1.2365e-01, -6.4105e-02,  3.2228e-01, -2.0014e-01,
          2.3482e-01,  1.2347e-01, -1.0028e-01,  4.1716e-01, -1.3127e-01,
          2.9357e-01, -1.3309e-01,  1.3878e-01,  1.5218e-01, -2.1407e-01,
          1.4617e-01, -3.9584e-02,  1.6916e-01,  2.4830e-01,  2.2677e-01,
          7.5298e-02, -3.8670e-01, -2.0127e-01,  6.5516e-02,  1.3503e-01,
         -2.1275e-01,  2.4774e-01,  3.5703e-01, -3.6945e-01, -2.8644e-01,
         -1.9671e-01,  2.2372e-01,  3.3217e-01,  1.7125e-01, -1.4388e-01,
          2.2395e-01,  1.4490e-01, -9.3038e-02, -6.7304e-02, -3.4911e-03,
          2.5164e-02, -3.1365e-02,  8.8933e-02,  1.2300e-01, -2.5304e-02,
         -3.1713e-02,  1.4536e-01,  1.1197e-01,  4.2323e-02,  1.1665e-01,
         -1.2200e-02, -7.0194e-02,  1.7444e-01,  1.1883e-01,  9.5790e-02,
          1.5383e-01,  2.7315e-02, -2.1292e-01, -1.3979e-01, -3.1865e-02,
          1.3843e-01,  1.3107e-01,  9.9288e-02, -1.5818e-01, -7.3873e-03,
         -2.3071e-02,  1.5747e-01, -1.0594e-01,  2.8087e-02,  1.4770e-01,
         -2.0792e-02, -8.3619e-02, -1.9244e-01, -1.2342e-02, -1.4519e-01,
          2.1091e-01, -1.7627e-01, -2.7251e-02, -1.1503e-01, -1.0588e-01,
          1.7071e-01,  2.9115e-02,  1.5906e-01,  1.6850e-01, -6.1140e-02,
          2.5596e-02,  7.3305e-04,  9.7707e-02,  5.5802e-02,  2.9783e-02,
          1.9585e-01]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
40000 特征值优化 tensor(0.4537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6473e-01, -2.1597e-01, -2.1128e-01, -9.8968e-01,  3.1394e+00,
          1.7281e+00,  2.8513e+00,  2.1824e+00,  1.7133e+00,  2.7201e-01,
          1.2933e-01, -5.9220e-01, -5.3128e-01, -1.1351e-01, -6.0700e-01,
         -1.4203e+00, -2.7336e-01, -1.2182e-01,  1.9153e-01,  1.5547e-01,
         -5.1743e-01,  6.4024e-01,  2.8728e-01,  2.6355e-01,  1.7727e-01,
          5.5921e-01,  3.7801e-01,  6.6053e-01,  5.8231e-01,  9.6942e-02,
          1.3085e-01,  1.0323e-01,  8.5201e-02, -3.9737e-02,  2.4441e-01,
          9.2303e-02,  1.8401e-01, -1.5188e-01, -2.4160e-02, -4.9251e-02,
          2.8010e-02,  1.2260e-01, -5.7320e-02,  1.1967e-01, -2.6314e-01,
         -4.7812e-02,  5.1617e-03,  2.0301e-01, -4.7400e-01, -2.4935e-01,
         -2.0136e-01, -3.9844e-01,  7.3694e-02, -2.1834e-01,  2.5994e-01,
          4.5106e-01, -5.9752e-03,  5.4967e-01,  6.2020e-02,  1.1732e-01,
         -5.1452e-01, -5.2303e-01, -3.6025e-01, -3.6780e-02, -2.4221e-01,
          1.7400e-01, -6.0217e-02,  3.9160e-01, -2.3201e-01,  4.6421e-02,
         -2.5232e-01,  1.1389e-01, -5.6591e-02,  3.1280e-01, -2.0516e-01,
          2.3464e-01,  1.0777e-01, -1.2941e-01,  4.0462e-01, -1.2221e-01,
          2.8965e-01, -1.3531e-01,  1.4202e-01,  1.5170e-01, -1.8687e-01,
          1.4308e-01, -6.4133e-02,  1.7040e-01,  2.2578e-01,  2.5850e-01,
          9.3667e-02, -3.8483e-01, -2.1948e-01,  5.6696e-02,  1.3420e-01,
         -2.1103e-01,  2.6203e-01,  3.6759e-01, -3.7237e-01, -2.4567e-01,
         -2.0066e-01,  2.0998e-01,  3.3165e-01,  1.7240e-01, -1.4568e-01,
          2.2147e-01,  1.4792e-01, -1.1386e-01, -6.9846e-02, -2.5760e-04,
          2.5249e-02, -3.8219e-02,  6.9910e-02,  1.1909e-01, -2.1281e-02,
         -2.8501e-02,  1.5474e-01,  1.0224e-01,  2.9363e-02,  8.4975e-02,
          1.9502e-04, -6.6331e-02,  1.7239e-01,  1.1494e-01,  9.4475e-02,
          1.6352e-01,  2.7626e-02, -2.1449e-01, -1.4388e-01, -2.5350e-02,
          1.3400e-01,  1.4136e-01,  9.3390e-02, -1.4901e-01, -8.6288e-03,
         -7.8733e-03,  1.5895e-01, -1.0677e-01,  2.7323e-02,  1.1090e-01,
         -1.2002e-02, -6.6574e-02, -1.8947e-01, -3.4917e-02, -1.5984e-01,
          2.1678e-01, -1.9069e-01, -1.8351e-02, -1.2448e-01, -1.2319e-01,
          1.6891e-01,  3.1319e-02,  1.4784e-01,  1.7584e-01, -6.8804e-02,
          3.5585e-02,  4.1841e-03,  1.0087e-01,  5.6700e-02,  4.4051e-02,
          2.0443e-01]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
41000 特征值优化 tensor(0.4528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6935e-01, -2.2624e-01, -2.2403e-01, -9.8705e-01,  3.1734e+00,
          1.7315e+00,  2.8589e+00,  2.1872e+00,  1.7106e+00,  2.7005e-01,
          1.2885e-01, -6.0753e-01, -5.2735e-01, -1.0336e-01, -6.0774e-01,
         -1.4136e+00, -2.7117e-01, -1.2136e-01,  1.9537e-01,  1.5589e-01,
         -5.0530e-01,  6.4627e-01,  2.9011e-01,  2.5433e-01,  1.8434e-01,
          5.5021e-01,  3.7260e-01,  6.6077e-01,  5.8076e-01,  9.0060e-02,
          1.3734e-01,  1.1088e-01,  9.5061e-02, -3.6692e-02,  2.4704e-01,
          9.3349e-02,  1.8217e-01, -1.5374e-01, -2.7026e-02, -5.1792e-02,
          2.4990e-02,  1.2270e-01, -5.7778e-02,  1.2040e-01, -2.5764e-01,
         -4.6992e-02,  1.3298e-02,  1.9955e-01, -4.6905e-01, -2.4939e-01,
         -2.0307e-01, -4.0276e-01,  7.0152e-02, -2.2309e-01,  2.6294e-01,
          4.5094e-01, -4.6729e-03,  5.4619e-01,  6.0223e-02,  1.1829e-01,
         -5.1793e-01, -5.2308e-01, -3.5880e-01, -4.2148e-02, -2.4031e-01,
          1.7415e-01, -5.9771e-02,  3.9727e-01, -2.2882e-01,  4.6318e-02,
         -2.5196e-01,  1.1358e-01, -5.8238e-02,  3.0794e-01, -2.0902e-01,
          2.3392e-01,  1.0182e-01, -1.2752e-01,  4.1110e-01, -1.2184e-01,
          2.9197e-01, -1.3532e-01,  1.4028e-01,  1.5035e-01, -1.8058e-01,
          1.4911e-01, -6.4117e-02,  1.5722e-01,  2.2558e-01,  2.6074e-01,
          9.7093e-02, -3.8772e-01, -2.1600e-01,  5.4409e-02,  1.3468e-01,
         -2.0763e-01,  2.6568e-01,  3.8122e-01, -3.5911e-01, -2.4281e-01,
         -1.9821e-01,  2.0585e-01,  3.4261e-01,  1.6734e-01, -1.4801e-01,
          2.1333e-01,  1.5103e-01, -1.1239e-01, -7.0765e-02, -1.7237e-03,
          2.8935e-02, -3.5843e-02,  6.7038e-02,  1.2069e-01, -2.0876e-02,
         -3.2546e-02,  1.6416e-01,  1.0227e-01,  2.7590e-02,  7.2661e-02,
          1.7212e-03, -7.0811e-02,  1.6874e-01,  1.0932e-01,  9.3704e-02,
          1.6262e-01,  2.3347e-02, -2.1516e-01, -1.5081e-01, -2.7558e-02,
          1.3234e-01,  1.4418e-01,  8.9797e-02, -1.4712e-01, -1.3219e-02,
         -1.0634e-02,  1.5421e-01, -1.0071e-01,  3.5642e-02,  1.0744e-01,
         -1.1006e-02, -6.8418e-02, -1.8596e-01, -3.3086e-02, -1.6262e-01,
          2.1395e-01, -1.9451e-01, -1.3466e-02, -1.3034e-01, -1.2453e-01,
          1.6669e-01,  3.0468e-02,  1.4485e-01,  1.7344e-01, -6.4998e-02,
          3.7866e-02,  6.1716e-04,  1.0540e-01,  5.6363e-02,  4.4487e-02,
          2.0544e-01]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
42000 特征值优化 tensor(0.4537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3140e-01, -2.3373e-01, -2.2288e-01, -9.8582e-01,  3.2006e+00,
          1.7338e+00,  2.8620e+00,  2.1913e+00,  1.7145e+00,  2.8142e-01,
          1.3333e-01, -6.2419e-01, -5.3667e-01, -9.6191e-02, -6.1652e-01,
         -1.4031e+00, -2.6802e-01, -1.1767e-01,  1.9839e-01,  1.6096e-01,
         -5.1141e-01,  6.3651e-01,  2.9102e-01,  2.4447e-01,  1.7955e-01,
          5.5866e-01,  3.6977e-01,  6.5680e-01,  5.8386e-01,  8.8057e-02,
          1.3134e-01,  1.0423e-01,  8.7241e-02, -3.7095e-02,  2.4566e-01,
          9.3207e-02,  1.7419e-01, -1.4979e-01, -2.4610e-02, -4.7206e-02,
          2.4030e-02,  1.2257e-01, -5.7137e-02,  1.1952e-01, -2.5641e-01,
         -5.0658e-02,  1.1055e-02,  1.9261e-01, -4.7232e-01, -2.4963e-01,
         -2.0245e-01, -4.0341e-01,  7.1872e-02, -2.1988e-01,  2.6965e-01,
          4.5320e-01,  4.6861e-03,  5.3968e-01,  6.1921e-02,  1.1950e-01,
         -5.1605e-01, -5.2526e-01, -3.5569e-01, -3.7350e-02, -2.3935e-01,
          1.7083e-01, -6.0894e-02,  4.0006e-01, -2.3520e-01,  4.7549e-02,
         -2.5198e-01,  1.1181e-01, -5.8639e-02,  3.0868e-01, -2.1038e-01,
          2.4026e-01,  1.0461e-01, -1.2745e-01,  4.0906e-01, -1.2232e-01,
          2.9033e-01, -1.3431e-01,  1.4298e-01,  1.4734e-01, -1.7844e-01,
          1.4867e-01, -6.3419e-02,  1.5342e-01,  2.2144e-01,  2.5896e-01,
          9.3242e-02, -3.8202e-01, -2.1674e-01,  5.7286e-02,  1.3352e-01,
         -2.0770e-01,  2.5641e-01,  3.7358e-01, -3.5536e-01, -2.4505e-01,
         -2.0977e-01,  2.1085e-01,  3.3931e-01,  1.6841e-01, -1.4827e-01,
          2.1699e-01,  1.4373e-01, -1.1572e-01, -6.7546e-02, -9.0155e-03,
          3.3641e-02, -3.5694e-02,  7.0219e-02,  1.1372e-01, -2.0701e-02,
         -3.3370e-02,  1.4900e-01,  1.0357e-01,  3.1577e-02,  7.9988e-02,
          5.4712e-04, -7.3288e-02,  1.6809e-01,  1.1032e-01,  9.1328e-02,
          1.6139e-01,  2.5222e-02, -2.1803e-01, -1.5042e-01, -2.5582e-02,
          1.3518e-01,  1.4187e-01,  8.8916e-02, -1.4996e-01, -1.4145e-02,
         -1.5021e-02,  1.6218e-01, -9.2998e-02,  3.0747e-02,  1.1133e-01,
         -1.2944e-02, -7.2120e-02, -1.8686e-01, -3.4889e-02, -1.6263e-01,
          2.1199e-01, -1.8867e-01, -1.5832e-02, -1.2843e-01, -1.2434e-01,
          1.6551e-01,  3.1095e-02,  1.4274e-01,  1.7304e-01, -6.8993e-02,
          3.5390e-02,  4.7052e-04,  1.0715e-01,  5.6930e-02,  4.2401e-02,
          2.0072e-01]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
43000 特征值优化 tensor(0.4541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3223, -0.2425, -0.2334, -0.9882,  3.2375,  1.7361,  2.8644,  2.1922,
          1.7105,  0.2841,  0.1330, -0.6149, -0.5226, -0.1000, -0.6218, -1.4030,
         -0.2800, -0.1129,  0.2018,  0.1592, -0.5067,  0.6348,  0.2932,  0.2416,
          0.1790,  0.5571,  0.3739,  0.6563,  0.5849,  0.0886,  0.1244,  0.1079,
          0.0934, -0.0361,  0.2417,  0.0909,  0.1694, -0.1466, -0.0303, -0.0399,
          0.0248,  0.1225, -0.0543,  0.1171, -0.2603, -0.0572,  0.0151,  0.1924,
         -0.4728, -0.2466, -0.2021, -0.4082,  0.0733, -0.2186,  0.2715,  0.4564,
          0.0088,  0.5392,  0.0622,  0.1234, -0.5191, -0.5224, -0.3597, -0.0404,
         -0.2401,  0.1715, -0.0678,  0.4011, -0.2419,  0.0513, -0.2547,  0.1151,
         -0.0613,  0.3041, -0.2130,  0.2407,  0.1016, -0.1247,  0.4070, -0.1197,
          0.2806, -0.1323,  0.1396,  0.1540, -0.1798,  0.1443, -0.0635,  0.1557,
          0.2140,  0.2599,  0.0954, -0.3689, -0.2146,  0.0576,  0.1355, -0.2085,
          0.2534,  0.3733, -0.3430, -0.2539, -0.1980,  0.2102,  0.3316,  0.1620,
         -0.1478,  0.2168,  0.1472, -0.1185, -0.0606, -0.0073,  0.0333, -0.0415,
          0.0738,  0.1158, -0.0246, -0.0282,  0.1445,  0.1006,  0.0279,  0.0751,
         -0.0093, -0.0755,  0.1652,  0.1063,  0.0884,  0.1649,  0.0304, -0.2236,
         -0.1511, -0.0218,  0.1351,  0.1427,  0.0906, -0.1537, -0.0178, -0.0106,
          0.1614, -0.0982,  0.0322,  0.1098, -0.0093, -0.0710, -0.1947, -0.0337,
         -0.1616,  0.2163, -0.1859, -0.0155, -0.1196, -0.1317,  0.1569,  0.0298,
          0.1495,  0.1721, -0.0653,  0.0383,  0.0097,  0.1048,  0.0538,  0.0476,
          0.2062]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
44000 特征值优化 tensor(0.4544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3141, -0.2518, -0.2365, -0.9885,  3.2729,  1.7418,  2.8610,  2.1893,
          1.7094,  0.2899,  0.1314, -0.6095, -0.5169, -0.0959, -0.6143, -1.3957,
         -0.2737, -0.1114,  0.2049,  0.1514, -0.5081,  0.6288,  0.2926,  0.2295,
          0.1672,  0.5624,  0.3577,  0.6487,  0.5801,  0.0892,  0.1237,  0.1057,
          0.0876, -0.0368,  0.2411,  0.0926,  0.1633, -0.1523, -0.0265, -0.0392,
          0.0230,  0.1224, -0.0566,  0.1156, -0.2586, -0.0560,  0.0167,  0.1908,
         -0.4774, -0.2502, -0.2045, -0.4148,  0.0783, -0.2180,  0.2740,  0.4551,
          0.0098,  0.5363,  0.0642,  0.1253, -0.5173, -0.5261, -0.3566, -0.0401,
         -0.2420,  0.1697, -0.0716,  0.4019, -0.2361,  0.0503, -0.2531,  0.1186,
         -0.0628,  0.3054, -0.2142,  0.2416,  0.1026, -0.1362,  0.4109, -0.1242,
          0.2834, -0.1329,  0.1418,  0.1485, -0.1903,  0.1494, -0.0713,  0.1561,
          0.2091,  0.2725,  0.0925, -0.3651, -0.2143,  0.0623,  0.1359, -0.2055,
          0.2489,  0.3817, -0.3419, -0.2581, -0.1991,  0.2062,  0.3205,  0.1646,
         -0.1555,  0.2160,  0.1437, -0.1129, -0.0475, -0.0087,  0.0288, -0.0422,
          0.0739,  0.1139, -0.0241, -0.0242,  0.1407,  0.0970,  0.0270,  0.0764,
         -0.0068, -0.0763,  0.1641,  0.1051,  0.0914,  0.1646,  0.0307, -0.2274,
         -0.1519, -0.0216,  0.1342,  0.1462,  0.0945, -0.1541, -0.0180, -0.0072,
          0.1603, -0.0967,  0.0395,  0.1053, -0.0066, -0.0717, -0.1929, -0.0316,
         -0.1587,  0.2102, -0.1845, -0.0146, -0.1167, -0.1313,  0.1579,  0.0275,
          0.1478,  0.1691, -0.0588,  0.0425,  0.0140,  0.1002,  0.0518,  0.0494,
          0.2029]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
45000 特征值优化 tensor(0.4550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0796e-01, -2.7172e-01, -2.3249e-01, -9.9057e-01,  3.2935e+00,
          1.7446e+00,  2.8765e+00,  2.1866e+00,  1.7091e+00,  2.9997e-01,
          1.2218e-01, -6.2248e-01, -5.2899e-01, -8.8965e-02, -6.1170e-01,
         -1.3777e+00, -2.9848e-01, -1.0717e-01,  2.1159e-01,  1.4118e-01,
         -5.0295e-01,  6.2426e-01,  2.9705e-01,  2.1884e-01,  1.7076e-01,
          5.6428e-01,  3.4369e-01,  6.4429e-01,  5.8404e-01,  8.9643e-02,
          1.1590e-01,  9.9370e-02,  7.4130e-02, -5.1960e-02,  2.4487e-01,
          8.9094e-02,  1.5012e-01, -1.5511e-01, -1.2769e-02, -5.4149e-02,
          1.3862e-02,  1.2148e-01, -5.3758e-02,  1.1938e-01, -2.5966e-01,
         -5.7503e-02,  2.7857e-02,  1.8910e-01, -4.7692e-01, -2.5416e-01,
         -2.0540e-01, -4.2768e-01,  8.2533e-02, -2.1936e-01,  2.7951e-01,
          4.5749e-01,  3.0652e-02,  5.3727e-01,  6.1873e-02,  1.2886e-01,
         -5.0987e-01, -5.2800e-01, -3.5710e-01, -3.4548e-02, -2.4827e-01,
          1.8216e-01, -7.0557e-02,  3.8775e-01, -2.3311e-01,  5.5424e-02,
         -2.5036e-01,  1.2383e-01, -6.2330e-02,  3.0286e-01, -2.0912e-01,
          2.4307e-01,  1.1539e-01, -1.2622e-01,  4.0802e-01, -1.3649e-01,
          2.9090e-01, -1.3254e-01,  1.4024e-01,  1.4034e-01, -2.0688e-01,
          1.3096e-01, -4.9413e-02,  1.5588e-01,  2.1035e-01,  2.4855e-01,
          7.5135e-02, -3.5530e-01, -2.1061e-01,  7.4496e-02,  1.3655e-01,
         -2.0768e-01,  2.3975e-01,  3.7983e-01, -3.3418e-01, -2.5847e-01,
         -2.1322e-01,  2.1302e-01,  3.0736e-01,  1.5786e-01, -1.6020e-01,
          2.0518e-01,  1.3975e-01, -9.6233e-02, -4.1283e-02, -8.3028e-03,
          3.2843e-02, -3.1579e-02,  8.5122e-02,  1.2457e-01, -2.6112e-02,
         -2.0591e-02,  1.2514e-01,  1.0607e-01,  3.0412e-02,  9.5224e-02,
         -1.8392e-02, -8.2296e-02,  1.6886e-01,  1.0254e-01,  8.8156e-02,
          1.6171e-01,  2.4512e-02, -2.2780e-01, -1.5130e-01, -2.0082e-02,
          1.3659e-01,  1.4576e-01,  9.5919e-02, -1.6124e-01, -1.4099e-02,
         -2.2314e-02,  1.5062e-01, -1.0365e-01,  5.5344e-02,  1.3160e-01,
         -5.8421e-04, -8.7690e-02, -1.9192e-01, -4.4843e-02, -1.4398e-01,
          2.0496e-01, -1.7830e-01, -1.2664e-02, -1.0548e-01, -1.2314e-01,
          1.6361e-01,  2.6343e-02,  1.6230e-01,  1.5650e-01, -4.9334e-02,
          3.7423e-02,  1.0134e-02,  9.8678e-02,  5.7936e-02,  4.0654e-02,
          1.9999e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
46000 特征值优化 tensor(0.4538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9432e-01, -2.7593e-01, -2.5586e-01, -9.8589e-01,  3.3269e+00,
          1.7531e+00,  2.8743e+00,  2.1919e+00,  1.7061e+00,  2.9865e-01,
          1.1892e-01, -6.0305e-01, -5.0352e-01, -9.2954e-02, -6.0195e-01,
         -1.3904e+00, -2.9857e-01, -1.0683e-01,  2.0724e-01,  1.4706e-01,
         -5.0153e-01,  6.2515e-01,  2.9178e-01,  2.1197e-01,  1.6413e-01,
          5.4421e-01,  3.4186e-01,  6.3490e-01,  5.7409e-01,  9.0144e-02,
          1.1748e-01,  1.1805e-01,  8.7113e-02, -4.1969e-02,  2.3767e-01,
          9.4615e-02,  1.4782e-01, -1.4889e-01, -2.1970e-02, -3.9555e-02,
          1.0007e-02,  1.2139e-01, -5.4624e-02,  1.1173e-01, -2.6162e-01,
         -6.6100e-02,  2.6504e-02,  1.9475e-01, -4.6887e-01, -2.4675e-01,
         -2.1371e-01, -4.2072e-01,  8.9623e-02, -2.2502e-01,  2.7102e-01,
          4.6014e-01,  1.2208e-02,  5.3469e-01,  6.3260e-02,  1.3383e-01,
         -5.1600e-01, -5.1966e-01, -3.6305e-01, -4.6034e-02, -2.4633e-01,
          1.7234e-01, -8.0289e-02,  4.0350e-01, -2.3863e-01,  4.8124e-02,
         -2.5328e-01,  1.1880e-01, -5.9229e-02,  3.0008e-01, -2.1799e-01,
          2.4642e-01,  9.7425e-02, -1.3015e-01,  4.1135e-01, -1.3041e-01,
          2.8689e-01, -1.4495e-01,  1.4361e-01,  1.4471e-01, -1.9109e-01,
          1.4756e-01, -6.7829e-02,  1.4921e-01,  2.0417e-01,  2.7023e-01,
          8.9218e-02, -3.5594e-01, -2.1787e-01,  6.9875e-02,  1.3729e-01,
         -2.0164e-01,  2.4176e-01,  3.8110e-01, -3.4468e-01, -2.6090e-01,
         -2.1693e-01,  2.0433e-01,  3.1037e-01,  1.5909e-01, -1.6204e-01,
          2.1818e-01,  1.4491e-01, -1.0678e-01, -3.6335e-02, -9.8576e-03,
          3.1036e-02, -3.8708e-02,  6.8204e-02,  1.1861e-01, -3.1489e-02,
         -1.2257e-02,  1.3957e-01,  9.4148e-02,  2.6192e-02,  7.0166e-02,
         -3.4767e-03, -7.9501e-02,  1.6835e-01,  9.8356e-02,  9.1944e-02,
          1.6298e-01,  3.0981e-02, -2.2603e-01, -1.5509e-01, -1.8257e-02,
          1.3324e-01,  1.5033e-01,  9.7537e-02, -1.5720e-01, -1.9700e-02,
          1.6587e-03,  1.4122e-01, -1.0746e-01,  5.4270e-02,  1.0244e-01,
         -1.2950e-03, -7.2656e-02, -2.0691e-01, -4.5328e-02, -1.5929e-01,
          2.0147e-01, -1.9120e-01, -4.0313e-03, -1.1200e-01, -1.4563e-01,
          1.6454e-01,  2.6725e-02,  1.5838e-01,  1.6279e-01, -6.8002e-02,
          4.9613e-02,  1.0475e-02,  9.9475e-02,  5.4440e-02,  5.2052e-02,
          2.0738e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
47000 特征值优化 tensor(0.4533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2713, -0.3000, -0.2514, -0.9872,  3.3333,  1.7648,  2.8791,  2.1902,
          1.7166,  0.2991,  0.1305, -0.6610, -0.5383, -0.0764, -0.5808, -1.3593,
         -0.3214, -0.1083,  0.2118,  0.1303, -0.5159,  0.6215,  0.2922,  0.2039,
          0.1525,  0.5439,  0.3103,  0.6251,  0.5719,  0.0846,  0.1181,  0.0976,
          0.0715, -0.0468,  0.2326,  0.0890,  0.1392, -0.1476, -0.0185, -0.0466,
          0.0240,  0.1213, -0.0524,  0.1118, -0.2504, -0.0488,  0.0360,  0.1947,
         -0.4654, -0.2430, -0.2130, -0.4341,  0.1025, -0.2143,  0.2846,  0.4623,
          0.0329,  0.5234,  0.0637,  0.1407, -0.5103, -0.5264, -0.3652, -0.0353,
         -0.2402,  0.1866, -0.0755,  0.3917, -0.2367,  0.0508, -0.2575,  0.1198,
         -0.0703,  0.3095, -0.2128,  0.2514,  0.1087, -0.1317,  0.4261, -0.1324,
          0.2903, -0.1423,  0.1483,  0.1558, -0.2232,  0.1311, -0.0367,  0.1590,
          0.2323,  0.2586,  0.0773, -0.3454, -0.2016,  0.0668,  0.1369, -0.2047,
          0.2261,  0.4261, -0.3369, -0.2575, -0.2283,  0.2064,  0.2934,  0.1561,
         -0.1696,  0.2131,  0.1418, -0.0971, -0.0260, -0.0108,  0.0373, -0.0216,
          0.0979,  0.1179, -0.0352, -0.0257,  0.1247,  0.1105,  0.0379,  0.0891,
         -0.0211, -0.0863,  0.1754,  0.0979,  0.0906,  0.1581,  0.0314, -0.2245,
         -0.1435, -0.0186,  0.1368,  0.1466,  0.0901, -0.1579, -0.0159, -0.0195,
          0.1443, -0.1037,  0.0510,  0.1505, -0.0098, -0.0913, -0.2183, -0.0493,
         -0.1382,  0.2051, -0.1671, -0.0129, -0.0939, -0.1256,  0.1588,  0.0273,
          0.1615,  0.1629, -0.0585,  0.0278,  0.0113,  0.1018,  0.0633,  0.0433,
          0.2078]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
48000 特征值优化 tensor(0.4546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6124e-01, -3.2921e-01, -2.7244e-01, -9.8625e-01,  3.3905e+00,
          1.7817e+00,  2.8705e+00,  2.1983e+00,  1.7255e+00,  2.8458e-01,
          1.4029e-01, -6.8870e-01, -5.3016e-01, -8.6756e-02, -6.0122e-01,
         -1.3548e+00, -3.0570e-01, -1.2453e-01,  2.0272e-01,  1.3685e-01,
         -4.9869e-01,  6.1800e-01,  2.8909e-01,  2.1062e-01,  1.5816e-01,
          4.9920e-01,  3.1860e-01,  6.0569e-01,  5.4097e-01,  6.3534e-02,
          1.2140e-01,  9.0206e-02,  6.0912e-02, -7.9941e-02,  2.3636e-01,
          8.7337e-02,  1.2461e-01, -1.4961e-01, -9.9505e-03, -3.5555e-02,
          1.4718e-02,  1.2156e-01, -5.6808e-02,  1.1216e-01, -2.4280e-01,
         -4.5899e-02,  8.2423e-03,  1.8907e-01, -4.6460e-01, -2.3620e-01,
         -2.1171e-01, -4.3775e-01,  1.0944e-01, -2.1236e-01,  2.7424e-01,
          4.7379e-01,  1.4729e-02,  5.3016e-01,  5.0969e-02,  1.4272e-01,
         -5.0477e-01, -5.2220e-01, -3.6976e-01, -3.9622e-02, -2.4249e-01,
          1.8679e-01, -6.1907e-02,  4.0033e-01, -2.4534e-01,  5.3735e-02,
         -2.5522e-01,  1.1726e-01, -6.6023e-02,  3.0787e-01, -2.0852e-01,
          2.5651e-01,  9.9046e-02, -1.5276e-01,  4.1676e-01, -1.2755e-01,
          3.0610e-01, -1.4635e-01,  1.5816e-01,  1.4755e-01, -2.0990e-01,
          1.3626e-01, -3.9242e-02,  1.5936e-01,  2.0580e-01,  2.3944e-01,
          8.5235e-02, -3.5218e-01, -2.0763e-01,  6.6784e-02,  1.3361e-01,
         -1.9468e-01,  2.1381e-01,  4.3090e-01, -3.3303e-01, -2.4848e-01,
         -2.4843e-01,  2.1268e-01,  2.8759e-01,  1.4526e-01, -1.6712e-01,
          2.4011e-01,  1.3603e-01, -1.1051e-01, -2.8168e-02, -1.2843e-02,
          4.3646e-02, -1.6241e-02,  9.6017e-02,  1.1492e-01, -3.2977e-02,
         -2.3465e-02,  1.2146e-01,  1.0748e-01,  4.1126e-02,  8.4215e-02,
         -7.1910e-03, -8.8722e-02,  1.6967e-01,  9.9968e-02,  8.4962e-02,
          1.5607e-01,  2.5791e-02, -2.1688e-01, -1.3101e-01, -2.0236e-02,
          1.3789e-01,  1.5060e-01,  9.0541e-02, -1.5801e-01, -1.7306e-02,
         -1.4320e-03,  1.5862e-01, -1.1778e-01,  4.6259e-02,  1.2528e-01,
         -1.9182e-02, -7.7032e-02, -2.0128e-01, -6.2925e-02, -1.4662e-01,
          2.1229e-01, -1.8139e-01, -1.5855e-02, -9.0283e-02, -1.0697e-01,
          1.5974e-01,  2.5803e-02,  1.5990e-01,  1.7281e-01, -7.6607e-02,
          3.3153e-02,  1.8829e-02,  1.0596e-01,  7.1181e-02,  5.0888e-02,
          2.0298e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
49000 特征值优化 tensor(0.4523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.1719e-01, -3.4110e-01, -3.0252e-01, -9.8542e-01,  3.4330e+00,
          1.7981e+00,  2.8610e+00,  2.2215e+00,  1.7363e+00,  2.6865e-01,
          1.2513e-01, -6.7569e-01, -5.2453e-01, -1.1136e-01, -6.1389e-01,
         -1.3635e+00, -2.8299e-01, -1.3030e-01,  1.9326e-01,  1.5512e-01,
         -4.9702e-01,  6.2103e-01,  2.9085e-01,  2.4067e-01,  1.7901e-01,
          4.8225e-01,  3.3849e-01,  5.9993e-01,  5.2487e-01,  7.2766e-02,
          1.3448e-01,  8.7101e-02,  5.8825e-02, -6.9602e-02,  2.2546e-01,
          8.5972e-02,  1.3306e-01, -1.4846e-01, -2.2249e-02, -3.0120e-02,
          1.5871e-02,  1.2264e-01, -5.6732e-02,  9.7987e-02, -2.5229e-01,
         -4.6874e-02,  1.1933e-02,  2.0372e-01, -4.6662e-01, -2.2482e-01,
         -2.1862e-01, -4.3740e-01,  1.1822e-01, -2.0787e-01,  2.6239e-01,
          4.7526e-01, -1.4865e-02,  5.2963e-01,  4.7788e-02,  1.5419e-01,
         -5.0751e-01, -5.1248e-01, -3.7628e-01, -4.7065e-02, -2.3765e-01,
          1.7657e-01, -5.3670e-02,  4.1094e-01, -2.4547e-01,  5.3579e-02,
         -2.5628e-01,  1.1451e-01, -6.3294e-02,  3.0115e-01, -2.0680e-01,
          2.5049e-01,  8.7018e-02, -1.1936e-01,  4.2322e-01, -1.2611e-01,
          3.0116e-01, -1.4924e-01,  1.5959e-01,  1.5525e-01, -2.0132e-01,
          1.4155e-01, -6.5107e-02,  1.6646e-01,  2.0887e-01,  2.4815e-01,
          9.5862e-02, -3.5323e-01, -2.0249e-01,  5.1897e-02,  1.3581e-01,
         -1.8813e-01,  2.0826e-01,  4.1677e-01, -3.5609e-01, -2.6477e-01,
         -2.4013e-01,  2.0204e-01,  2.8148e-01,  1.3877e-01, -1.5656e-01,
          2.5528e-01,  1.2430e-01, -1.1432e-01, -1.8731e-02, -7.4930e-03,
          4.2901e-02, -2.8610e-02,  7.8886e-02,  1.0730e-01, -3.1740e-02,
          6.3852e-04,  1.3837e-01,  9.8323e-02,  2.7538e-02,  7.5647e-02,
          8.9894e-03, -7.9290e-02,  1.7744e-01,  1.0380e-01,  9.1701e-02,
          1.5935e-01,  3.0334e-02, -2.1492e-01, -1.2982e-01, -1.6522e-02,
          1.3734e-01,  1.5496e-01,  9.3485e-02, -1.6340e-01, -1.8250e-02,
         -1.4300e-02,  1.3227e-01, -1.0348e-01,  6.0947e-02,  1.2712e-01,
          9.5499e-03, -8.1941e-02, -2.1577e-01, -3.6346e-02, -1.6635e-01,
          2.1518e-01, -1.8381e-01, -2.1442e-02, -9.2206e-02, -1.0824e-01,
          1.5301e-01,  2.0274e-02,  1.7037e-01,  1.7302e-01, -8.3200e-02,
          2.9512e-02,  1.6307e-02,  1.0113e-01,  5.9505e-02,  5.1861e-02,
          2.1638e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
50000 特征值优化 tensor(0.4695, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3299, -0.3654, -0.2961, -0.9879,  3.4706,  1.8070,  2.8862,  2.2269,
          1.7398,  0.2481,  0.1194, -0.6875, -0.5246, -0.1095, -0.5832, -1.3485,
         -0.2840, -0.1309,  0.1967,  0.1498, -0.5077,  0.6231,  0.2944,  0.2505,
          0.1956,  0.5006,  0.3137,  0.5935,  0.5332,  0.0561,  0.1234,  0.0802,
          0.0592, -0.0927,  0.2311,  0.0846,  0.1124, -0.1634, -0.0125, -0.0436,
          0.0101,  0.1207, -0.0523,  0.0962, -0.2336, -0.0483,  0.0285,  0.1958,
         -0.4756, -0.2261, -0.2214, -0.4363,  0.1273, -0.2120,  0.2606,  0.4862,
          0.0054,  0.5167,  0.0456,  0.1567, -0.5003, -0.5143, -0.3781, -0.0266,
         -0.2459,  0.1834, -0.0488,  0.3958, -0.2370,  0.0498, -0.2517,  0.1131,
         -0.0616,  0.3165, -0.2045,  0.2497,  0.1044, -0.1272,  0.4254, -0.1322,
          0.2950, -0.1424,  0.1544,  0.1407, -0.2145,  0.1423, -0.0551,  0.1717,
          0.2365,  0.2132,  0.0783, -0.3380, -0.1926,  0.0577,  0.1365, -0.1925,
          0.2020,  0.4556, -0.3542, -0.2354, -0.2329,  0.2022,  0.2642,  0.1415,
         -0.1637,  0.2584,  0.1058, -0.0967, -0.0068, -0.0041,  0.0510, -0.0370,
          0.1005,  0.1062, -0.0394, -0.0116,  0.1213,  0.0977,  0.0340,  0.0869,
          0.0049, -0.0815,  0.1833,  0.1138,  0.0949,  0.1502,  0.0275, -0.2197,
         -0.1260, -0.0098,  0.1404,  0.1477,  0.0882, -0.1670, -0.0181,  0.0136,
          0.1438, -0.1331,  0.0451,  0.1468, -0.0094, -0.0957, -0.2102, -0.0366,
         -0.1419,  0.2067, -0.1662, -0.0172, -0.0899, -0.1109,  0.1597,  0.0244,
          0.1677,  0.1732, -0.0842,  0.0349,  0.0151,  0.0907,  0.0666,  0.0387,
          0.2089]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
51000 特征值优化 tensor(24.6689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0388, -1.3435, -0.9388,  0.2698,  0.0516,  0.0447,  1.1162, -1.0876,
          1.2433, -1.4826, -1.0867, -0.0964,  0.1654,  1.4256, -1.3433, -0.6665,
         -0.2619,  1.0519, -1.1054,  0.2496, -0.0771,  0.4784,  1.1496, -1.5906,
         -0.7521, -0.8421, -0.2780, -0.4605,  1.7197,  0.1809,  0.2221, -0.0430,
         -0.3891,  0.6486,  1.5980, -0.7941,  0.8858, -0.1076, -0.2068,  0.8380,
         -0.1334, -0.0648, -0.3901,  1.4148,  0.3680, -1.3218, -0.4054,  1.1930,
         -0.5914, -0.5583,  0.7319, -0.3673, -1.3637,  0.2297,  0.4715, -0.2212,
         -0.8361, -0.0410,  0.9004,  0.2612, -0.5255,  0.2352,  1.0420,  0.3310,
          0.4112, -1.1829, -0.0283, -0.0474,  0.2268,  1.0733,  0.4303,  0.4370,
          0.3267,  0.1359, -0.1077, -0.1556, -0.5476,  0.7675, -0.4267,  0.6034,
          0.4670, -0.5461, -0.5521, -1.2109, -0.2352, -0.0435,  1.7082,  0.4043,
         -0.6500,  0.2708,  0.7110, -0.8814,  0.9930,  0.0105, -0.0567,  0.4188,
          0.1969, -0.3997,  0.5128,  0.0561,  0.8871, -0.0412,  1.2531,  0.6287,
          0.4344, -0.9508,  0.7264, -0.8437,  0.3486,  0.2213,  0.3313, -0.1943,
         -0.2907, -0.1256,  0.0152, -0.5826,  0.3883, -0.1971, -0.8428, -0.6913,
         -0.6142,  0.0183,  0.0408, -0.7668, -0.9211, -0.1450, -0.7381, -0.1205,
         -0.8491,  0.2227,  0.9184, -0.0942, -0.0550, -1.3634, -1.4077,  0.7396,
         -0.2569,  0.1729,  1.1942,  0.5810, -0.4555,  0.2536, -0.4653, -0.9975,
         -0.2912,  0.2727, -0.4660, -0.5666, -1.7107,  0.3956,  0.6136, -0.6602,
          0.7727, -0.0849,  0.7753, -0.4524,  0.1240, -0.3974, -0.5941,  0.7314,
         -0.4235]], device='cuda:0') tensor(0.2252, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
52000 特征值优化 tensor(2.7498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0963e+00, -3.2865e-01, -2.1904e-01, -6.8276e-01,  1.2865e+00,
          7.3070e-01,  3.6207e-01, -5.2768e-02,  1.8924e+00, -7.2674e-01,
         -7.5022e-01,  2.1433e-01,  5.3908e-03,  4.5042e-01, -6.1040e-01,
         -2.6953e-01, -1.3447e-01,  4.7052e-01, -5.0484e-01, -4.6641e-02,
          2.1245e-01,  6.2648e-01,  4.4737e-01, -8.5286e-01, -5.0662e-01,
         -1.4815e-01,  5.5321e-02, -3.7839e-02,  3.2860e-01,  6.3982e-02,
         -1.3504e-01, -1.7615e-01,  1.0023e-01,  2.7889e-01,  6.2157e-01,
         -3.7772e-01, -1.1902e-01,  4.3882e-02, -2.8642e-01,  6.1331e-02,
         -2.8145e-01,  1.3430e-01,  9.8744e-02,  5.7630e-01, -2.4600e-01,
         -4.8190e-01, -2.8132e-02,  3.2595e-01, -2.8558e-02, -2.9836e-01,
          3.6533e-01, -4.2613e-01, -5.2050e-01, -8.2914e-02, -5.7616e-02,
         -6.8913e-02, -6.2824e-02, -1.7821e-01,  6.2778e-02, -1.4465e-01,
          6.2916e-03,  4.3327e-02,  6.1410e-01, -1.4052e-01,  2.7698e-01,
         -4.0960e-01,  1.1754e-01,  3.7131e-01,  2.5673e-01,  4.3610e-01,
          1.3039e-01, -1.3466e-02,  4.1168e-02,  1.8468e-01, -2.2804e-02,
         -2.7812e-02, -2.7358e-01,  1.2377e-01, -2.6163e-01,  2.1117e-01,
         -5.3080e-02,  2.0265e-02,  2.3103e-02, -3.6372e-01, -1.7659e-02,
         -3.7348e-02,  6.2697e-01, -5.3000e-02, -2.7283e-01,  3.4004e-04,
          4.5112e-01, -1.6193e-01,  2.4185e-01,  1.3512e-01, -1.1460e-02,
         -3.1575e-01,  6.0207e-01,  1.0507e-01, -1.2095e-01,  3.4193e-02,
          2.2997e-01,  2.6862e-01,  5.0030e-01,  2.8438e-01,  1.1969e-01,
         -7.4672e-01,  3.8994e-01, -4.5118e-01, -1.7601e-01,  6.8620e-02,
          5.4705e-02,  7.1567e-02, -1.8388e-01, -3.0353e-02,  8.7491e-03,
         -4.3115e-02, -1.0796e-01,  3.7071e-02, -2.1194e-01, -1.7885e-01,
         -1.3224e-01,  5.2126e-02,  1.2355e-01, -2.1255e-01, -2.8715e-01,
         -1.7018e-01, -2.2857e-01,  1.6060e-03, -2.2343e-01, -2.0405e-02,
          2.3971e-01,  2.4338e-01, -2.8323e-02, -6.1445e-01, -4.0892e-01,
          1.6938e-01,  1.5753e-01, -1.8597e-01,  7.1648e-02,  1.1453e-01,
          1.3171e-01,  2.1174e-01,  1.3309e-01, -3.0995e-01, -1.5036e-01,
         -3.2813e-02, -2.9141e-01, -3.7316e-02, -7.7621e-01, -1.9803e-01,
         -1.4982e-01, -2.6154e-01,  4.1203e-01,  5.1305e-02,  1.1649e-01,
          1.8781e-01,  2.1111e-01, -1.1637e-02, -2.2643e-02,  1.2977e-01,
         -3.1086e-01]], device='cuda:0') tensor(0.2114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
53000 特征值优化 tensor(1.0830, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5773,  0.2836,  0.0676, -0.9054,  1.5604,  1.3226,  0.0712,  0.1532,
          1.5559, -0.5400, -0.6328, -0.0052,  0.0571,  0.6149, -0.6258, -0.6326,
         -0.1687,  0.6062, -0.4634, -0.0660,  0.0238,  0.3928,  0.0469, -0.7918,
         -0.8419, -0.4364,  0.1720, -0.2686,  0.2109,  0.3100, -0.0564, -0.3176,
          0.1009,  0.0079,  0.4541, -0.3217, -0.1882,  0.1815, -0.0029,  0.0961,
         -0.4021,  0.1478, -0.0485,  0.4463, -0.4501, -0.4307, -0.0057,  0.0990,
          0.2915, -0.2082,  0.4522, -0.5060, -0.6652, -0.0783, -0.0798, -0.1837,
         -0.0618, -0.2738, -0.2152, -0.1393,  0.2465, -0.0101,  0.4264,  0.0042,
          0.2715, -0.1864,  0.0352,  0.3023,  0.3076,  0.3651,  0.1349,  0.0122,
          0.0150,  0.2936,  0.0793,  0.1088, -0.3447,  0.1477, -0.2820,  0.3726,
         -0.0731, -0.1066,  0.1425, -0.4034,  0.2362, -0.0627,  0.4452, -0.1500,
         -0.1772, -0.0200,  0.3945, -0.0719,  0.2477,  0.1203,  0.1975, -0.3651,
          0.6705,  0.3611, -0.0236,  0.0662, -0.1749,  0.2352,  0.2075,  0.3457,
          0.0327, -0.8724,  0.6222, -0.2649, -0.4172,  0.0496,  0.0398,  0.1942,
         -0.0617, -0.0944,  0.0834, -0.0628, -0.1532, -0.0131, -0.0645, -0.0824,
         -0.0309,  0.0644,  0.1176, -0.0400, -0.2010, -0.1564, -0.0773, -0.0813,
         -0.0181, -0.0280,  0.3198,  0.2237, -0.0570, -0.3537, -0.1747,  0.0908,
          0.3477, -0.1708,  0.1001,  0.3339,  0.1465,  0.1248,  0.0605, -0.0784,
         -0.1433, -0.0169, -0.1090, -0.0366, -0.3615, -0.0666, -0.2011, -0.2647,
          0.4388,  0.0961,  0.0693,  0.2686,  0.1527,  0.1076, -0.0452, -0.2217,
         -0.2768]], device='cuda:0') tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
54000 特征值优化 tensor(0.9522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1516,  0.3957,  0.1210, -1.0012,  1.5206,  1.6120,  0.0035,  0.1637,
          1.1816, -0.4823, -0.5873, -0.0601,  0.1681,  0.6533, -0.4696, -0.6919,
         -0.2207,  0.6223, -0.4678,  0.0570, -0.0694,  0.3042,  0.0932, -0.7913,
         -0.7357, -0.4636,  0.2160, -0.2449,  0.2091,  0.3051, -0.1087, -0.3033,
          0.1008, -0.0497,  0.4951, -0.3478, -0.1958,  0.2034,  0.0777,  0.0937,
         -0.4118,  0.1453, -0.0613,  0.4603, -0.4208, -0.4929,  0.0418,  0.0260,
          0.3657, -0.2665,  0.4533, -0.5649, -0.6517, -0.0712, -0.1173, -0.1870,
         -0.1645, -0.3070, -0.2015, -0.1143,  0.3024,  0.0054,  0.3996,  0.1216,
          0.2695, -0.0457,  0.0148,  0.2653,  0.3186,  0.3387,  0.1285,  0.0173,
          0.0025,  0.2980,  0.1294,  0.1899, -0.3693,  0.1645, -0.1707,  0.3913,
         -0.0603, -0.1401,  0.1233, -0.3940,  0.2157, -0.0974,  0.4331, -0.0898,
         -0.0652, -0.0414,  0.4190, -0.0734,  0.1489,  0.1160,  0.1605, -0.3490,
          0.6501,  0.4426, -0.0656,  0.1137, -0.1976,  0.2693,  0.1039,  0.4251,
          0.0034, -0.7922,  0.6774, -0.3001, -0.4241,  0.0194, -0.0044,  0.1780,
         -0.0828, -0.0648,  0.1211, -0.0364, -0.1057,  0.0268, -0.0102, -0.0626,
         -0.0467,  0.0514,  0.1308,  0.0546, -0.1856, -0.1903, -0.0028, -0.0695,
          0.0368,  0.0470,  0.2515,  0.1709, -0.0423, -0.2779, -0.1236,  0.0452,
          0.2835, -0.1636,  0.1384,  0.3353,  0.1789,  0.0967,  0.1142, -0.0620,
         -0.1389, -0.0048, -0.0763, -0.0403, -0.2769,  0.0127, -0.1917, -0.2279,
          0.4486,  0.0856,  0.1064,  0.2483,  0.1237,  0.1215, -0.0210, -0.2931,
         -0.3093]], device='cuda:0') tensor(0.2185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
55000 特征值优化 tensor(0.9218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.2473e-02,  4.6309e-01,  2.2264e-01, -1.0112e+00,  1.3433e+00,
          1.8746e+00, -8.0301e-02,  1.3311e-01,  8.5987e-01, -4.2069e-01,
         -5.6089e-01, -1.2025e-01,  2.2784e-01,  5.8342e-01, -3.9372e-01,
         -6.5293e-01, -2.2665e-01,  6.0542e-01, -4.7930e-01,  6.8714e-02,
         -1.5267e-02,  2.8845e-01,  1.3709e-01, -7.9333e-01, -7.2152e-01,
         -4.6788e-01,  1.8999e-01, -2.8273e-01,  2.5880e-01,  2.7406e-01,
         -9.1923e-02, -3.2997e-01,  1.2927e-01, -1.0126e-04,  5.0599e-01,
         -3.4328e-01, -1.6490e-01,  1.5748e-01,  1.2653e-01,  1.2863e-01,
         -4.0534e-01,  1.4415e-01, -6.4026e-02,  4.8306e-01, -4.0172e-01,
         -5.1757e-01,  2.3735e-02,  3.8074e-02,  3.3331e-01, -2.9451e-01,
          4.4347e-01, -5.9292e-01, -6.3714e-01, -4.9906e-02, -1.1890e-01,
         -2.0559e-01, -2.1892e-01, -3.1987e-01, -1.8318e-01, -1.0581e-01,
          3.2695e-01,  9.5162e-02,  3.8490e-01,  1.4082e-01,  2.6408e-01,
         -1.0231e-02, -6.3205e-03,  2.8286e-01,  3.1463e-01,  3.4389e-01,
          1.4867e-01,  1.0997e-02, -6.2267e-03,  3.1376e-01,  1.4588e-01,
          2.0472e-01, -3.8604e-01,  1.9219e-01, -9.5652e-02,  4.3293e-01,
         -6.4320e-02, -1.4229e-01,  1.4572e-01, -4.0286e-01,  1.7711e-01,
         -1.5855e-01,  4.2527e-01, -3.9416e-02, -1.0036e-01, -2.8285e-02,
          4.3271e-01, -1.1208e-01,  1.5846e-01,  1.1139e-01,  1.5749e-01,
         -3.6913e-01,  6.4819e-01,  4.9120e-01, -1.3490e-01,  1.3586e-01,
         -1.9539e-01,  3.0961e-01,  2.6061e-02,  4.4251e-01,  6.2088e-03,
         -7.5324e-01,  6.6925e-01, -3.3764e-01, -3.5790e-01, -2.2991e-02,
         -3.3587e-02,  1.3883e-01, -6.3434e-02, -5.9195e-02,  1.0715e-01,
         -7.7082e-03, -9.1682e-02,  3.7453e-02,  3.4892e-03, -7.1049e-02,
         -3.2791e-02,  4.4299e-02,  1.5124e-01,  5.4387e-02, -1.6729e-01,
         -1.6830e-01,  2.1941e-02, -5.6265e-02,  6.7688e-02,  5.9009e-02,
          1.8784e-01,  1.4872e-01, -3.5046e-02, -2.6247e-01, -1.1010e-01,
          4.7565e-02,  2.6902e-01, -1.5961e-01,  1.4001e-01,  2.8631e-01,
          1.7362e-01,  8.9660e-02,  1.2543e-01, -5.3938e-02, -1.0250e-01,
          6.0833e-03, -9.4470e-02, -4.3380e-02, -2.6376e-01,  1.4067e-02,
         -2.3880e-01, -2.0516e-01,  4.4711e-01,  1.1595e-01,  1.1542e-01,
          2.2618e-01,  1.1497e-01,  1.2252e-01, -2.6344e-02, -2.9088e-01,
         -2.6179e-01]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
56000 特征值优化 tensor(0.8938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0846e-02,  4.7307e-01,  3.3624e-01, -1.0133e+00,  1.1853e+00,
          2.0255e+00, -1.6150e-01, -1.1179e-01,  6.3742e-01, -3.6807e-01,
         -5.7941e-01, -1.6093e-01,  2.7347e-01,  5.1024e-01, -3.9036e-01,
         -6.3670e-01, -2.2433e-01,  5.8679e-01, -4.7204e-01,  6.2682e-02,
          4.0658e-02,  3.3590e-01,  1.8179e-01, -7.4451e-01, -7.3446e-01,
         -4.9241e-01,  1.3873e-01, -3.0439e-01,  3.0530e-01,  2.4766e-01,
         -6.3186e-02, -3.7078e-01,  1.5459e-01,  1.8915e-02,  4.9052e-01,
         -3.3019e-01, -1.4207e-01,  1.2829e-01,  1.2848e-01,  1.7074e-01,
         -4.0085e-01,  1.4292e-01, -6.6576e-02,  4.9710e-01, -3.8976e-01,
         -5.1967e-01,  3.0922e-02,  7.0441e-02,  3.0007e-01, -3.2077e-01,
          4.6184e-01, -5.9459e-01, -5.8314e-01, -2.6045e-02, -1.1681e-01,
         -2.5028e-01, -2.1750e-01, -3.3660e-01, -1.3056e-01, -1.3603e-01,
          3.6164e-01,  1.5119e-01,  3.6383e-01,  1.3817e-01,  2.8513e-01,
          2.3616e-02, -1.4391e-02,  3.1152e-01,  2.9953e-01,  3.5730e-01,
          1.6199e-01,  2.9874e-02, -1.8008e-02,  3.3597e-01,  1.4057e-01,
          1.8505e-01, -3.8953e-01,  1.9956e-01, -7.0807e-02,  4.6744e-01,
         -7.8158e-02, -1.2738e-01,  1.6258e-01, -4.0945e-01,  1.5714e-01,
         -2.2069e-01,  3.6925e-01, -1.1642e-02, -7.9993e-02, -4.1310e-02,
          4.4805e-01, -1.4943e-01,  1.0880e-01,  1.5671e-01,  1.6426e-01,
         -3.9923e-01,  6.5591e-01,  5.0447e-01, -9.9414e-02,  1.0229e-01,
         -2.1547e-01,  3.5266e-01, -1.2817e-02,  4.8255e-01,  3.7972e-02,
         -6.7887e-01,  6.0252e-01, -3.8411e-01, -3.0496e-01, -4.7778e-02,
         -4.6670e-02,  1.1486e-01, -5.8360e-02, -4.8306e-02,  9.1887e-02,
         -6.5408e-03, -8.4316e-02,  3.0989e-02, -9.2738e-06, -1.0686e-01,
          1.3387e-03,  4.4207e-02,  1.5125e-01,  5.1919e-02, -1.6123e-01,
         -1.4999e-01,  6.4532e-02, -4.9518e-02,  1.0700e-01,  3.0889e-02,
          1.5212e-01,  1.3638e-01, -3.6349e-02, -2.5444e-01, -1.0549e-01,
          8.7713e-02,  2.7955e-01, -1.7293e-01,  1.3854e-01,  2.4456e-01,
          1.3784e-01,  9.1552e-02,  1.0519e-01, -4.5020e-02, -1.0339e-01,
          9.4201e-03, -1.0844e-01, -5.7044e-02, -2.3363e-01,  1.2462e-02,
         -2.7112e-01, -1.6569e-01,  4.4175e-01,  1.4004e-01,  1.5418e-01,
          2.0499e-01,  1.2688e-01,  8.3886e-02, -8.1953e-02, -2.7776e-01,
         -1.9654e-01]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
57000 特征值优化 tensor(0.9070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1587,  0.4702,  0.4294, -1.0156,  1.0676,  2.0876, -0.1564, -0.3782,
          0.4716, -0.2491, -0.6209, -0.1445,  0.2776,  0.4731, -0.3813, -0.6084,
         -0.2053,  0.5869, -0.4312,  0.0422,  0.0537,  0.3650,  0.2234, -0.6846,
         -0.7504, -0.5304,  0.0931, -0.3341,  0.3355,  0.2206, -0.0399, -0.3823,
          0.1406,  0.0110,  0.4929, -0.3376, -0.1322,  0.1076,  0.1183,  0.2101,
         -0.4447,  0.1441, -0.0764,  0.5095, -0.3643, -0.5239,  0.0425,  0.1120,
          0.2969, -0.3496,  0.4950, -0.5935, -0.5218, -0.0042, -0.1528, -0.2964,
         -0.2043, -0.3481, -0.0840, -0.1643,  0.3862,  0.2169,  0.3394,  0.1801,
          0.2740,  0.0817, -0.0411,  0.3322,  0.2477,  0.3512,  0.1517,  0.0720,
         -0.0453,  0.3560,  0.1115,  0.1483, -0.3811,  0.2337, -0.0982,  0.4806,
         -0.0994, -0.1110,  0.1460, -0.4283,  0.1305, -0.2289,  0.2850, -0.0032,
         -0.0649, -0.0292,  0.4691, -0.1634,  0.0774,  0.1928,  0.1775, -0.4169,
          0.6547,  0.5491, -0.0857,  0.0244, -0.2296,  0.3637, -0.0444,  0.4937,
          0.1243, -0.5632,  0.5646, -0.3996, -0.2574, -0.0701, -0.0522,  0.0615,
         -0.0430, -0.0129,  0.0711,  0.0048, -0.0677,  0.0633,  0.0109, -0.1182,
          0.0033,  0.0806,  0.1713,  0.0506, -0.1534, -0.1424,  0.0746, -0.0378,
          0.1447,  0.0129,  0.1365,  0.1184, -0.0310, -0.2516, -0.0890,  0.1059,
          0.2510, -0.1504,  0.1261,  0.2553,  0.1024,  0.0803,  0.0857, -0.0280,
         -0.1085,  0.0054, -0.1043, -0.0757, -0.2017,  0.0074, -0.3367, -0.1322,
          0.4173,  0.1791,  0.2119,  0.1837,  0.1140,  0.0451, -0.1258, -0.2679,
         -0.1246]], device='cuda:0') tensor(0.2345, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
58000 特征值优化 tensor(0.8895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6116e-01,  4.5785e-01,  5.7192e-01, -1.0122e+00,  9.8927e-01,
          2.0558e+00, -1.0853e-01, -6.3929e-01,  3.8959e-01, -1.5261e-01,
         -6.3596e-01, -1.4415e-01,  2.9715e-01,  4.9150e-01, -3.5171e-01,
         -6.0123e-01, -2.1164e-01,  5.6970e-01, -3.7256e-01,  8.4829e-04,
          2.2381e-03,  3.8260e-01,  2.6879e-01, -6.4367e-01, -7.6722e-01,
         -5.7202e-01,  7.1799e-02, -3.5197e-01,  3.6093e-01,  1.8644e-01,
         -6.8931e-03, -4.0539e-01,  1.3384e-01, -1.9049e-04,  4.5961e-01,
         -3.4071e-01, -1.1998e-01,  6.7313e-02,  1.1697e-01,  2.3002e-01,
         -4.8792e-01,  1.4324e-01, -7.9613e-02,  5.4867e-01, -3.3627e-01,
         -5.3426e-01,  6.3596e-02,  1.6487e-01,  2.8110e-01, -3.4051e-01,
          5.2775e-01, -5.7768e-01, -4.7485e-01,  2.9913e-03, -1.7263e-01,
         -3.3563e-01, -1.9791e-01, -3.5573e-01, -6.5176e-02, -1.8518e-01,
          3.8759e-01,  2.9378e-01,  3.0022e-01,  2.3324e-01,  2.6283e-01,
          1.1732e-01, -3.2391e-02,  3.2493e-01,  1.7790e-01,  3.5148e-01,
          1.5968e-01,  1.1330e-01, -6.6127e-02,  3.6926e-01,  9.0042e-02,
          1.2997e-01, -3.6288e-01,  2.3459e-01, -1.1483e-01,  4.7978e-01,
         -9.2285e-02, -1.1517e-01,  1.2516e-01, -4.2159e-01,  1.1713e-01,
         -1.9117e-01,  2.2649e-01, -5.6340e-03, -3.6394e-02, -1.9032e-03,
          4.5916e-01, -1.6060e-01,  5.0738e-02,  2.1953e-01,  1.9498e-01,
         -4.5794e-01,  6.6772e-01,  6.0587e-01, -9.6845e-02, -3.1079e-02,
         -2.2520e-01,  3.7419e-01, -7.5942e-02,  5.1036e-01,  1.6013e-01,
         -4.3484e-01,  5.2136e-01, -3.8310e-01, -2.1670e-01, -9.0272e-02,
         -4.9524e-02,  2.6557e-02, -3.5010e-02,  2.0183e-02,  6.1035e-02,
          2.9726e-03, -6.2598e-02,  7.8288e-02, -1.1454e-02, -1.4435e-01,
          1.9555e-03,  1.1178e-01,  1.8709e-01,  4.4760e-02, -1.7208e-01,
         -1.2907e-01,  7.0716e-02, -3.2786e-02,  1.8636e-01,  4.7148e-04,
          1.3015e-01,  1.1075e-01, -3.8950e-02, -2.4179e-01, -6.3317e-02,
          1.0993e-01,  2.4013e-01, -1.3717e-01,  1.2533e-01,  2.6123e-01,
          7.5218e-02,  6.0702e-02,  7.8618e-02, -4.3847e-03, -9.1458e-02,
          9.1741e-03, -1.0254e-01, -8.6484e-02, -1.7052e-01,  1.1017e-04,
         -3.8223e-01, -9.9107e-02,  4.0582e-01,  1.7262e-01,  2.3956e-01,
          1.6552e-01,  9.6659e-02,  1.9283e-02, -1.4297e-01, -2.7075e-01,
         -9.4732e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
59000 特征值优化 tensor(0.8620, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5471e-01,  4.9658e-01,  7.0002e-01, -1.0091e+00,  9.4526e-01,
          1.9438e+00, -8.8514e-03, -8.0524e-01,  4.1818e-01, -6.1274e-02,
         -6.2305e-01, -1.1111e-01,  3.0996e-01,  5.0075e-01, -3.6018e-01,
         -6.2008e-01, -2.1313e-01,  5.5868e-01, -3.2686e-01, -1.9383e-02,
         -8.4549e-02,  3.8285e-01,  3.3006e-01, -6.4729e-01, -8.1164e-01,
         -6.2480e-01,  7.2783e-02, -3.4746e-01,  4.2521e-01,  1.7261e-01,
          5.0223e-02, -3.9944e-01,  1.0274e-01,  1.4644e-02,  4.3147e-01,
         -3.3078e-01, -9.1459e-02,  5.4322e-02,  8.9715e-02,  2.3796e-01,
         -5.1559e-01,  1.4194e-01, -8.0901e-02,  5.6812e-01, -3.3068e-01,
         -5.3252e-01,  3.0545e-02,  2.0181e-01,  2.4482e-01, -3.0887e-01,
          5.4974e-01, -6.0580e-01, -4.5309e-01,  1.1838e-02, -2.0049e-01,
         -3.7885e-01, -1.8003e-01, -3.9739e-01, -7.3554e-02, -2.0770e-01,
          4.0294e-01,  3.3284e-01,  2.6830e-01,  2.7728e-01,  2.3751e-01,
          1.7001e-01, -2.1724e-02,  3.2142e-01,  1.3942e-01,  3.4349e-01,
          1.5837e-01,  1.3688e-01, -6.7867e-02,  3.8836e-01,  9.5491e-02,
          1.2379e-01, -3.4327e-01,  2.0487e-01, -1.2297e-01,  4.6755e-01,
         -8.9656e-02, -1.0632e-01,  9.8035e-02, -3.8667e-01,  1.1564e-01,
         -1.7725e-01,  1.7397e-01, -2.1489e-02,  1.3497e-02, -1.6360e-02,
          4.5825e-01, -1.5293e-01,  5.5507e-03,  2.0979e-01,  1.9301e-01,
         -4.8943e-01,  7.0171e-01,  6.4142e-01, -1.4144e-01, -7.7787e-02,
         -2.4689e-01,  3.7188e-01, -1.6566e-01,  5.0654e-01,  1.9429e-01,
         -3.3682e-01,  4.3412e-01, -3.4577e-01, -1.5942e-01, -9.2186e-02,
         -4.8806e-02, -8.1430e-04, -4.3271e-02,  3.2986e-02,  3.7106e-02,
         -1.3256e-02, -6.9865e-02,  6.4634e-02, -5.9698e-02, -1.3255e-01,
          2.7604e-02,  1.1894e-01,  1.9950e-01,  4.4698e-02, -1.7504e-01,
         -1.1938e-01,  6.2478e-02, -2.6429e-02,  2.1189e-01, -6.0683e-03,
          1.2242e-01,  9.8021e-02, -4.8340e-02, -2.3977e-01, -6.3087e-02,
          1.1895e-01,  2.4767e-01, -1.1438e-01,  1.5377e-01,  2.8036e-01,
          6.7583e-02,  4.6220e-02,  5.6485e-02, -1.4042e-02, -5.7273e-02,
          1.7335e-02, -9.2350e-02, -9.1673e-02, -1.7684e-01, -2.6627e-03,
         -3.7916e-01, -8.5024e-02,  3.9290e-01,  1.4021e-01,  2.4619e-01,
          1.5286e-01,  7.9341e-02, -3.1974e-03, -1.4762e-01, -3.0157e-01,
         -9.4890e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
60000 特征值优化 tensor(0.8603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0914e-01,  5.3118e-01,  7.5527e-01, -1.0093e+00,  8.6979e-01,
          1.8375e+00,  9.9662e-02, -9.8968e-01,  4.5075e-01, -6.7969e-02,
         -5.9081e-01, -5.6612e-02,  3.5259e-01,  5.6091e-01, -3.4418e-01,
         -6.3070e-01, -2.2494e-01,  5.7077e-01, -2.5984e-01, -2.9348e-02,
         -2.1087e-01,  3.7120e-01,  3.9023e-01, -6.8343e-01, -8.6061e-01,
         -6.5895e-01,  1.3442e-01, -3.9176e-01,  4.3916e-01,  1.8117e-01,
          5.0389e-02, -3.8027e-01,  1.0863e-01,  2.6574e-02,  3.9475e-01,
         -3.0358e-01, -9.8215e-02,  6.6809e-02,  9.3333e-02,  2.2889e-01,
         -5.5972e-01,  1.4238e-01, -8.1354e-02,  5.8746e-01, -3.3468e-01,
         -5.2011e-01,  4.6891e-02,  2.1081e-01,  2.6389e-01, -2.7285e-01,
          5.4575e-01, -6.3909e-01, -4.0408e-01,  2.8987e-03, -2.1194e-01,
         -4.2367e-01, -1.4126e-01, -4.0638e-01, -7.8368e-02, -2.3479e-01,
          4.2536e-01,  3.2718e-01,  2.7399e-01,  2.9068e-01,  2.1735e-01,
          1.6760e-01, -1.0760e-02,  2.8348e-01,  1.3134e-01,  3.3053e-01,
          1.5252e-01,  1.5010e-01, -6.2674e-02,  4.0013e-01,  8.7925e-02,
          1.1810e-01, -2.9815e-01,  2.1251e-01, -1.4975e-01,  4.4381e-01,
         -7.7149e-02, -1.1352e-01,  8.1254e-02, -3.6108e-01,  1.0290e-01,
         -1.3150e-01,  1.7270e-01, -1.8021e-02,  3.4483e-02, -3.4240e-02,
          4.3697e-01, -1.2780e-01, -1.3380e-02,  2.2063e-01,  1.9216e-01,
         -5.0173e-01,  7.2023e-01,  6.8671e-01, -1.8714e-01, -1.3724e-01,
         -2.2513e-01,  3.6916e-01, -2.6245e-01,  4.9776e-01,  2.3231e-01,
         -2.6428e-01,  3.9296e-01, -3.0759e-01, -1.0874e-01, -8.5671e-02,
         -5.4646e-02, -1.8570e-02, -5.7734e-03,  4.8709e-02,  2.6399e-02,
          1.1599e-03, -6.1566e-02,  6.7535e-02, -6.9649e-02, -1.3807e-01,
          3.6684e-02,  1.6738e-01,  1.9167e-01,  3.6894e-02, -1.7007e-01,
         -1.1283e-01,  7.0707e-02, -5.5650e-03,  2.0532e-01,  9.9663e-03,
          9.5505e-02,  9.3718e-02, -6.2141e-02, -2.4658e-01, -4.0924e-02,
          9.9497e-02,  2.2067e-01, -1.1317e-01,  1.3791e-01,  2.9404e-01,
          3.3292e-02,  6.4698e-02,  8.7188e-02, -1.2871e-02, -8.5520e-02,
          1.3554e-03, -1.0823e-01, -1.1051e-01, -1.7480e-01,  8.1191e-03,
         -3.6526e-01, -9.5668e-02,  3.6591e-01,  1.2876e-01,  2.9323e-01,
          1.5867e-01,  5.6922e-02, -1.7874e-02, -1.5423e-01, -2.8287e-01,
         -5.5491e-02]], device='cuda:0') tensor(0.2164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
61000 特征值优化 tensor(0.8543, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0583,  0.5276,  0.7939, -1.0070,  0.7830,  1.7975,  0.2383, -1.1214,
          0.5038, -0.0664, -0.6751,  0.0055,  0.4467,  0.5871, -0.3562, -0.6651,
         -0.2468,  0.6062, -0.2262, -0.0288, -0.3267,  0.3376,  0.4317, -0.7491,
         -0.8906, -0.7367,  0.1812, -0.3924,  0.4733,  0.2064,  0.0776, -0.3724,
          0.1802,  0.0905,  0.3560, -0.2715, -0.0612,  0.1220,  0.0845,  0.1874,
         -0.5734,  0.1406, -0.0871,  0.5866, -0.3624, -0.4749,  0.0489,  0.2250,
          0.2568, -0.2265,  0.5364, -0.6750, -0.3816,  0.0265, -0.2134, -0.4255,
         -0.0917, -0.4545, -0.0756, -0.2620,  0.4487,  0.3163,  0.2814,  0.2952,
          0.1788,  0.1585, -0.0100,  0.2650,  0.1411,  0.3146,  0.1587,  0.1628,
         -0.0429,  0.3815,  0.0835,  0.1202, -0.2793,  0.1529, -0.1527,  0.4149,
         -0.0741, -0.1261,  0.0574, -0.3074,  0.1170, -0.1059,  0.1403, -0.0060,
         -0.0231, -0.0368,  0.4011, -0.1040, -0.0415,  0.1736,  0.2017, -0.5119,
          0.7239,  0.7824, -0.1088, -0.1796, -0.2231,  0.3575, -0.3556,  0.4819,
          0.2563, -0.2615,  0.3564, -0.2379, -0.0412, -0.0840, -0.0353, -0.0124,
          0.0240,  0.0621,  0.0143, -0.0201, -0.0922,  0.0676, -0.0979, -0.0963,
          0.0527,  0.1680,  0.1808,  0.0364, -0.1777, -0.1010,  0.0737,  0.0089,
          0.1831,  0.0216,  0.0768,  0.0944, -0.0586, -0.2791, -0.0160,  0.0764,
          0.1540, -0.1146,  0.1273,  0.2767,  0.0140,  0.0416,  0.1196,  0.0071,
         -0.0965,  0.0141, -0.1074, -0.1210, -0.1697,  0.0107, -0.3415, -0.0974,
          0.3615,  0.0876,  0.2916,  0.1906,  0.0371, -0.0536, -0.1810, -0.2691,
         -0.0645]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
62000 特征值优化 tensor(0.8292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9746e-01,  5.2268e-01,  7.8053e-01, -1.0005e+00,  5.6500e-01,
          1.8178e+00,  3.1962e-01, -1.1773e+00,  5.2886e-01, -1.7721e-02,
         -6.5094e-01,  6.2402e-02,  4.8444e-01,  6.1521e-01, -3.0735e-01,
         -6.8719e-01, -3.1502e-01,  6.3688e-01, -1.9458e-01, -7.0937e-02,
         -4.8279e-01,  3.5599e-01,  4.5661e-01, -8.1437e-01, -9.0276e-01,
         -7.8757e-01,  2.5240e-01, -4.0181e-01,  5.0049e-01,  2.4430e-01,
          5.6831e-02, -3.7789e-01,  2.0797e-01,  1.4801e-01,  2.7106e-01,
         -2.2469e-01, -1.8641e-02,  1.5915e-01,  7.9185e-02,  1.6447e-01,
         -5.7466e-01,  1.4080e-01, -8.3953e-02,  5.9222e-01, -4.0021e-01,
         -4.2793e-01,  7.0117e-02,  2.4551e-01,  2.4957e-01, -1.9536e-01,
          5.2579e-01, -6.6751e-01, -3.4248e-01,  3.9199e-02, -2.3403e-01,
         -4.5086e-01, -8.4456e-02, -4.6468e-01, -3.5027e-02, -2.8971e-01,
          4.6154e-01,  3.4234e-01,  2.4136e-01,  2.8758e-01,  1.4182e-01,
          1.8172e-01, -3.4155e-02,  2.4971e-01,  1.2066e-01,  3.0699e-01,
          1.7031e-01,  1.6378e-01, -4.3428e-02,  3.5034e-01,  1.2675e-01,
          1.5169e-01, -2.4886e-01,  1.1924e-01, -1.1352e-01,  3.8359e-01,
         -4.8742e-02, -1.2194e-01,  5.9561e-02, -2.7373e-01,  6.5226e-02,
         -1.2001e-01,  1.2110e-01, -2.6733e-02, -8.0340e-02,  8.9981e-02,
          3.4911e-01, -7.0630e-02, -6.2469e-03,  1.3545e-01,  1.9378e-01,
         -5.0442e-01,  7.6821e-01,  8.5166e-01, -8.4854e-02, -2.1141e-01,
         -2.0112e-01,  3.8715e-01, -4.2986e-01,  4.4743e-01,  2.7294e-01,
         -2.9414e-01,  3.4162e-01, -2.2131e-01, -1.3879e-02, -1.0631e-01,
         -1.9388e-02, -1.4309e-02,  7.7219e-02,  5.5446e-02,  1.1426e-02,
         -2.7218e-02, -1.2157e-01,  7.8815e-02, -1.1692e-01, -4.2487e-02,
          3.8116e-02,  1.9564e-01,  1.6204e-01,  3.1553e-02, -1.9314e-01,
         -1.0583e-01,  9.2518e-02,  1.4844e-02,  1.4461e-01,  3.0177e-02,
          2.3665e-02,  1.0913e-01, -7.3325e-02, -2.5928e-01,  2.6779e-02,
          6.9223e-02,  1.3608e-01, -1.0523e-01,  6.2132e-02,  2.6382e-01,
          4.1662e-02,  4.2461e-03,  1.8143e-01,  3.7167e-02, -8.1780e-02,
          2.4436e-02, -1.0551e-01, -1.7619e-01, -1.4388e-01,  6.3279e-02,
         -3.2198e-01, -1.0284e-01,  3.5426e-01,  5.8857e-02,  3.0593e-01,
          1.8545e-01,  1.7998e-03, -7.0845e-02, -1.8574e-01, -2.6295e-01,
         -2.3337e-02]], device='cuda:0') tensor(0.2297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
63000 特征值优化 tensor(0.9083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1161e-01,  4.7891e-01,  7.7622e-01, -1.0067e+00,  5.0478e-01,
          1.8261e+00,  3.3861e-01, -1.1665e+00,  5.5426e-01,  1.5403e-02,
         -5.8637e-01,  7.0670e-02,  4.9274e-01,  6.4913e-01, -2.7870e-01,
         -6.7695e-01, -3.6182e-01,  6.5718e-01, -1.9310e-01, -1.1872e-01,
         -5.3155e-01,  3.8720e-01,  4.6506e-01, -8.4643e-01, -9.2340e-01,
         -7.8605e-01,  2.9336e-01, -4.4428e-01,  5.2855e-01,  2.7188e-01,
          5.2111e-02, -3.6616e-01,  2.0894e-01,  1.8897e-01,  2.1946e-01,
         -1.9363e-01, -1.2762e-02,  1.6730e-01,  4.6378e-02,  1.6945e-01,
         -5.7742e-01,  1.4230e-01, -8.6560e-02,  6.0371e-01, -4.2481e-01,
         -4.1124e-01,  8.5507e-02,  2.6415e-01,  2.2546e-01, -1.7584e-01,
          5.0788e-01, -6.6045e-01, -3.3920e-01,  3.5398e-02, -2.6215e-01,
         -4.7658e-01, -4.7975e-02, -4.4339e-01, -7.7784e-03, -3.0471e-01,
          4.7234e-01,  3.8027e-01,  2.0772e-01,  2.9023e-01,  1.1636e-01,
          2.1660e-01, -6.0460e-02,  2.3463e-01,  1.4487e-01,  3.0144e-01,
          1.8091e-01,  1.4528e-01, -4.5793e-02,  3.4714e-01,  1.5591e-01,
          1.6468e-01, -2.3389e-01,  7.8930e-02, -9.0658e-02,  3.6719e-01,
         -3.3421e-02, -1.1123e-01,  4.6826e-02, -2.5702e-01,  1.9967e-02,
         -1.1288e-01,  1.2411e-01, -4.8609e-02, -5.1336e-02,  8.1694e-02,
          3.1615e-01, -4.3675e-02, -3.0202e-03,  9.0884e-02,  1.8952e-01,
         -5.0267e-01,  7.7949e-01,  8.9807e-01, -6.9963e-02, -2.1895e-01,
         -2.2215e-01,  4.1315e-01, -5.1362e-01,  4.1820e-01,  2.9905e-01,
         -2.4785e-01,  3.2713e-01, -2.1936e-01,  4.0547e-02, -1.0613e-01,
         -1.3775e-02, -3.2204e-02,  8.8923e-02,  6.4679e-02,  1.4017e-02,
         -2.5674e-02, -9.9774e-02,  5.9243e-02, -1.3083e-01, -1.3496e-02,
          3.8078e-02,  1.9663e-01,  1.6315e-01,  2.5484e-02, -1.9102e-01,
         -9.5871e-02,  9.2794e-02,  2.6785e-02,  1.4077e-01,  3.1538e-02,
          1.6340e-03,  1.1264e-01, -8.2975e-02, -2.1254e-01,  4.3802e-02,
          7.7041e-02,  1.2102e-01, -9.5364e-02,  4.8119e-02,  2.7117e-01,
          4.0794e-02,  4.7742e-03,  1.7965e-01,  4.0685e-02, -7.0363e-02,
          2.4075e-02, -1.2988e-01, -1.8742e-01, -1.5284e-01,  7.4156e-02,
         -2.8840e-01, -9.1740e-02,  3.4799e-01,  4.7018e-02,  3.0887e-01,
          1.6304e-01, -2.9251e-02, -7.5415e-02, -1.6107e-01, -2.6330e-01,
          1.2723e-02]], device='cuda:0') tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
64000 特征值优化 tensor(0.8543, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3875,  0.4346,  0.7754, -1.0078,  0.4894,  1.8178,  0.3435, -1.1764,
          0.5749,  0.0441, -0.5591,  0.0590,  0.4785,  0.6909, -0.2688, -0.6690,
         -0.3901,  0.6731, -0.1770, -0.1466, -0.5769,  0.4280,  0.4639, -0.8453,
         -0.9402, -0.7774,  0.3285, -0.4868,  0.5787,  0.2655,  0.0582, -0.3552,
          0.2089,  0.1996,  0.1730, -0.1644, -0.0120,  0.1698,  0.0238,  0.1864,
         -0.5714,  0.1433, -0.0799,  0.5942, -0.4193, -0.4091,  0.1077,  0.2926,
          0.2123, -0.1790,  0.4927, -0.6621, -0.3290,  0.0416, -0.2911, -0.5091,
         -0.0247, -0.4105,  0.0366, -0.3198,  0.4716,  0.3999,  0.1768,  0.2882,
          0.0860,  0.2346, -0.0672,  0.2222,  0.1535,  0.3046,  0.1921,  0.1277,
         -0.0434,  0.3485,  0.1629,  0.1451, -0.1964,  0.0440, -0.0775,  0.3499,
         -0.0205, -0.0917,  0.0415, -0.2673, -0.0111, -0.0929,  0.1183, -0.0595,
         -0.0385,  0.0981,  0.2960, -0.0248,  0.0090,  0.0631,  0.1830, -0.5017,
          0.7923,  0.9586, -0.0504, -0.2045, -0.2159,  0.4259, -0.5778,  0.3911,
          0.3056, -0.2045,  0.3165, -0.2110,  0.1020, -0.1142, -0.0105, -0.0306,
          0.0985,  0.0724,  0.0129, -0.0277, -0.0913,  0.0584, -0.1215, -0.0151,
          0.0416,  0.2067,  0.1547,  0.0220, -0.1797, -0.0818,  0.0933,  0.0262,
          0.1215,  0.0277, -0.0139,  0.0978, -0.0883, -0.1882,  0.0552,  0.0671,
          0.1092, -0.0826,  0.0218,  0.2635,  0.0133, -0.0030,  0.2007,  0.0345,
         -0.0633,  0.0135, -0.1394, -0.1948, -0.1390,  0.0770, -0.2629, -0.0802,
          0.3289,  0.0452,  0.3286,  0.1633, -0.0376, -0.0681, -0.1512, -0.2503,
          0.0369]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
65000 特征值优化 tensor(0.8201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.3954e-01,  4.0643e-01,  7.5434e-01, -9.9996e-01,  5.1884e-01,
          1.8233e+00,  3.4455e-01, -1.2005e+00,  6.0307e-01,  7.2694e-02,
         -5.6021e-01,  7.9218e-02,  4.6689e-01,  6.9926e-01, -2.6391e-01,
         -6.5548e-01, -3.9498e-01,  6.7051e-01, -1.4986e-01, -1.4864e-01,
         -6.1268e-01,  4.6528e-01,  4.4734e-01, -8.4215e-01, -9.8083e-01,
         -7.6943e-01,  3.6640e-01, -5.0846e-01,  6.2807e-01,  2.5539e-01,
          7.4085e-02, -3.6367e-01,  1.9865e-01,  2.1383e-01,  1.3804e-01,
         -1.4507e-01, -1.1653e-02,  1.8324e-01,  4.3971e-03,  1.8839e-01,
         -5.6646e-01,  1.4303e-01, -8.6638e-02,  5.9725e-01, -4.0328e-01,
         -3.9547e-01,  1.2232e-01,  3.1626e-01,  2.0000e-01, -1.8746e-01,
          4.8997e-01, -6.6822e-01, -3.1692e-01,  4.0633e-02, -2.9393e-01,
         -5.2364e-01, -1.4058e-02, -3.9384e-01,  8.0376e-02, -3.3720e-01,
          4.8267e-01,  4.1082e-01,  1.5505e-01,  2.7770e-01,  6.4049e-02,
          2.5656e-01, -8.1659e-02,  2.1904e-01,  1.7250e-01,  3.0541e-01,
          1.8252e-01,  1.2971e-01, -4.8481e-02,  3.5180e-01,  1.7237e-01,
          1.3798e-01, -1.8510e-01,  2.4056e-02, -6.7195e-02,  3.3793e-01,
         -1.0735e-02, -8.7889e-02,  2.6806e-02, -2.6946e-01, -4.3888e-02,
         -9.0091e-02,  1.0097e-01, -1.0332e-01, -1.7503e-02,  9.8077e-02,
          2.6870e-01, -5.0155e-03,  2.6202e-02,  4.1828e-02,  1.8227e-01,
         -4.8799e-01,  8.0335e-01,  9.7057e-01, -2.3862e-02, -1.9817e-01,
         -2.3585e-01,  4.3345e-01, -6.6276e-01,  3.6231e-01,  3.1791e-01,
         -1.5100e-01,  2.9715e-01, -1.9337e-01,  1.5776e-01, -1.2702e-01,
         -1.0179e-02, -3.6539e-02,  9.5057e-02,  8.3054e-02,  3.2369e-02,
         -1.7923e-02, -8.4507e-02,  5.7785e-02, -1.4093e-01, -1.1265e-02,
          4.8649e-02,  2.0642e-01,  1.3285e-01,  1.7227e-02, -1.7507e-01,
         -7.1837e-02,  9.0765e-02,  2.9565e-02,  1.0633e-01,  1.6254e-02,
         -3.0550e-02,  9.5778e-02, -9.3158e-02, -1.5606e-01,  5.3169e-02,
          7.1418e-02,  1.1791e-01, -7.5448e-02,  1.1498e-02,  2.7498e-01,
          1.3169e-03,  4.9156e-03,  1.9265e-01,  3.3865e-02, -5.9089e-02,
          1.2349e-02, -1.5791e-01, -1.9031e-01, -1.1629e-01,  7.3113e-02,
         -2.4142e-01, -6.4088e-02,  3.2309e-01,  2.0637e-02,  3.2792e-01,
          1.6604e-01, -3.3115e-02, -7.3966e-02, -1.4471e-01, -2.5980e-01,
          5.3727e-02]], device='cuda:0') tensor(0.2242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
66000 特征值优化 tensor(0.8754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7398e-01,  3.6618e-01,  7.5514e-01, -1.0055e+00,  5.6673e-01,
          1.8053e+00,  3.5293e-01, -1.1984e+00,  6.2143e-01,  1.0040e-01,
         -5.5083e-01,  8.6389e-02,  4.2954e-01,  7.3038e-01, -2.4018e-01,
         -6.1928e-01, -3.7653e-01,  6.7001e-01, -9.5750e-02, -1.6581e-01,
         -6.4597e-01,  4.8645e-01,  4.1374e-01, -8.2120e-01, -9.9417e-01,
         -7.5589e-01,  3.8931e-01, -5.4507e-01,  6.4294e-01,  2.4680e-01,
          8.9414e-02, -3.5516e-01,  1.8997e-01,  1.9438e-01,  1.1938e-01,
         -1.2409e-01, -2.4562e-02,  1.9213e-01, -8.3937e-03,  2.1038e-01,
         -5.7187e-01,  1.4302e-01, -8.9653e-02,  6.0962e-01, -3.9561e-01,
         -3.9763e-01,  1.2229e-01,  3.4016e-01,  1.8811e-01, -2.0095e-01,
          4.8681e-01, -6.6291e-01, -2.9702e-01,  4.5965e-02, -3.0011e-01,
         -5.4657e-01,  3.2368e-03, -3.8146e-01,  1.1404e-01, -3.5305e-01,
          4.9709e-01,  4.0287e-01,  1.3240e-01,  2.6909e-01,  4.5800e-02,
          2.5167e-01, -8.9775e-02,  2.1740e-01,  1.8383e-01,  3.0722e-01,
          1.8328e-01,  1.2822e-01, -6.7152e-02,  3.4332e-01,  1.7141e-01,
          1.2884e-01, -1.7204e-01, -2.9524e-04, -9.4027e-02,  3.0650e-01,
         -8.6507e-04, -8.0729e-02,  1.3012e-02, -2.5914e-01, -5.7122e-02,
         -7.3472e-02,  1.2016e-01, -1.2571e-01, -1.5849e-03,  9.0170e-02,
          2.5857e-01,  2.4622e-02,  2.0145e-02,  5.6971e-02,  1.6837e-01,
         -4.8114e-01,  8.1371e-01,  1.0034e+00, -1.4372e-02, -1.8561e-01,
         -2.0325e-01,  4.3908e-01, -7.3560e-01,  3.4313e-01,  3.2476e-01,
         -1.0867e-01,  2.5803e-01, -1.7911e-01,  2.1369e-01, -1.3645e-01,
         -1.1758e-02, -2.6531e-02,  1.0215e-01,  1.0162e-01,  2.4833e-02,
         -1.5566e-02, -7.9663e-02,  4.8071e-02, -1.2464e-01, -3.8146e-02,
          5.7992e-02,  2.2040e-01,  1.3688e-01,  9.8170e-03, -1.6366e-01,
         -6.0426e-02,  7.4884e-02,  1.9869e-02,  8.6386e-02,  1.1915e-02,
         -5.4255e-02,  7.3720e-02, -1.0614e-01, -1.1650e-01,  5.3216e-02,
          6.1664e-02,  1.0310e-01, -7.4855e-02,  8.5066e-03,  2.5619e-01,
         -2.2452e-02,  3.5008e-02,  1.9953e-01,  3.6512e-02, -7.0345e-02,
          3.9476e-04, -1.7949e-01, -1.9913e-01, -8.6210e-02,  8.1338e-02,
         -2.0826e-01, -5.4788e-02,  3.2821e-01,  1.5916e-02,  3.5705e-01,
          1.7215e-01, -2.2609e-02, -5.5832e-02, -1.0850e-01, -2.4016e-01,
          8.8972e-02]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
67000 特征值优化 tensor(0.8214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.3227e-01,  3.6122e-01,  7.4295e-01, -1.0026e+00,  5.9920e-01,
          1.7859e+00,  3.8678e-01, -1.2313e+00,  6.3880e-01,  8.6120e-02,
         -5.5331e-01,  1.0828e-01,  4.0620e-01,  7.4519e-01, -2.2402e-01,
         -6.3382e-01, -3.9220e-01,  6.4930e-01, -6.2787e-02, -1.5748e-01,
         -7.0253e-01,  5.0102e-01,  3.8834e-01, -8.2849e-01, -1.0022e+00,
         -7.5989e-01,  4.0168e-01, -5.6711e-01,  6.6035e-01,  2.5881e-01,
          1.0053e-01, -3.6775e-01,  1.6724e-01,  1.8962e-01,  1.1419e-01,
         -9.6850e-02, -6.7819e-03,  2.1495e-01, -6.3383e-03,  1.9277e-01,
         -5.4426e-01,  1.4200e-01, -8.6602e-02,  6.1311e-01, -4.0272e-01,
         -3.8243e-01,  1.2223e-01,  3.5061e-01,  1.9056e-01, -2.1769e-01,
          4.8417e-01, -6.5638e-01, -2.8636e-01,  4.1362e-02, -2.9760e-01,
         -5.8271e-01,  3.3828e-02, -3.7777e-01,  1.3412e-01, -3.8071e-01,
          4.9916e-01,  4.0029e-01,  1.1716e-01,  2.7140e-01,  2.8776e-02,
          2.6209e-01, -9.8589e-02,  2.1899e-01,  1.8571e-01,  2.9957e-01,
          1.7969e-01,  1.3281e-01, -8.2617e-02,  3.3766e-01,  1.6976e-01,
          1.2767e-01, -1.7920e-01,  4.0983e-03, -6.7843e-02,  2.8968e-01,
         -8.4778e-03, -9.1702e-02,  2.2676e-04, -2.7069e-01, -6.9721e-02,
         -6.4668e-02,  1.2142e-01, -1.4038e-01,  6.2964e-03,  8.4633e-02,
          2.4437e-01,  2.4528e-02,  3.2374e-02,  4.0060e-02,  1.7138e-01,
         -4.8178e-01,  8.2207e-01,  9.7272e-01, -3.0332e-02, -2.0474e-01,
         -1.6568e-01,  4.3406e-01, -7.8595e-01,  3.4369e-01,  3.2411e-01,
         -6.5793e-02,  2.2440e-01, -1.7186e-01,  2.6001e-01, -1.3966e-01,
         -9.5576e-03, -1.9945e-02,  1.0138e-01,  9.1371e-02,  2.3708e-02,
         -1.9478e-02, -8.1036e-02,  5.3111e-02, -1.2553e-01, -3.7466e-02,
          6.2101e-02,  2.0968e-01,  1.4087e-01,  2.7985e-03, -1.5417e-01,
         -5.8470e-02,  6.6754e-02,  3.2820e-02,  8.0180e-02,  1.0928e-02,
         -5.8566e-02,  6.6569e-02, -1.0891e-01, -1.2378e-01,  4.7268e-02,
          7.1698e-02,  1.0273e-01, -7.3818e-02,  1.1427e-02,  2.7557e-01,
         -1.4997e-02,  2.6445e-02,  1.7209e-01,  4.7343e-02, -6.4565e-02,
         -2.2233e-02, -1.9094e-01, -2.0203e-01, -8.3715e-02,  7.4981e-02,
         -1.9231e-01, -4.9064e-02,  3.3453e-01,  4.6921e-03,  3.6035e-01,
          1.7124e-01, -2.6063e-02, -6.9713e-02, -1.0038e-01, -2.2973e-01,
          1.0316e-01]], device='cuda:0') tensor(0.2096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
68000 特征值优化 tensor(0.8240, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5872,  0.3398,  0.7387, -1.0042,  0.6412,  1.7793,  0.4137, -1.2933,
          0.6390,  0.0449, -0.5331,  0.1340,  0.3950,  0.7553, -0.1811, -0.6022,
         -0.3949,  0.6216, -0.0490, -0.1607, -0.7396,  0.4840,  0.3566, -0.8408,
         -0.9904, -0.7699,  0.3980, -0.5917,  0.6761,  0.2536,  0.1023, -0.3675,
          0.1729,  0.2117,  0.1109, -0.0916, -0.0163,  0.2323, -0.0018,  0.1867,
         -0.5236,  0.1416, -0.0862,  0.6138, -0.4029, -0.3942,  0.1267,  0.3494,
          0.1845, -0.2257,  0.4913, -0.6438, -0.2733,  0.0448, -0.3088, -0.6282,
          0.0594, -0.3744,  0.1479, -0.3900,  0.5278,  0.3987,  0.0973,  0.2676,
          0.0100,  0.2768, -0.1274,  0.2116,  0.1833,  0.2946,  0.1816,  0.1248,
         -0.0831,  0.3183,  0.1626,  0.1159, -0.1999, -0.0069, -0.1033,  0.2713,
         -0.0087, -0.0940, -0.0066, -0.2605, -0.0411, -0.0657,  0.1199, -0.1467,
          0.0104,  0.0642,  0.2368,  0.0420,  0.0508,  0.0308,  0.1693, -0.4797,
          0.8170,  0.9722, -0.0322, -0.2229, -0.1531,  0.4535, -0.8108,  0.3447,
          0.2986, -0.0435,  0.2176, -0.1820,  0.2928, -0.1442, -0.0086, -0.0223,
          0.0943,  0.0909,  0.0072, -0.0206, -0.0759,  0.0490, -0.1043, -0.0288,
          0.0597,  0.1883,  0.1683,  0.0052, -0.1466, -0.0513,  0.0525,  0.0390,
          0.0720,  0.0252, -0.0452,  0.0609, -0.1059, -0.1107,  0.0577,  0.0887,
          0.0908, -0.0662,  0.0239,  0.2807, -0.0064,  0.0381,  0.1745,  0.0214,
         -0.0698, -0.0346, -0.1747, -0.2056, -0.0710,  0.0705, -0.1660, -0.0351,
          0.3508, -0.0102,  0.3523,  0.1699, -0.0238, -0.0600, -0.1038, -0.2203,
          0.1015]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
69000 特征值优化 tensor(0.8137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.9136e-01,  3.3772e-01,  7.3396e-01, -1.0014e+00,  6.8750e-01,
          1.7438e+00,  4.0886e-01, -1.3307e+00,  6.5790e-01,  1.4993e-02,
         -5.5058e-01,  1.5143e-01,  3.9885e-01,  7.6709e-01, -1.6078e-01,
         -5.6770e-01, -3.9410e-01,  6.2181e-01, -6.2479e-02, -1.6239e-01,
         -7.6241e-01,  4.5183e-01,  2.9985e-01, -8.4979e-01, -9.9848e-01,
         -7.5588e-01,  4.1597e-01, -5.8721e-01,  7.0507e-01,  2.6850e-01,
          7.7056e-02, -3.6927e-01,  1.6360e-01,  2.4348e-01,  9.8851e-02,
         -7.8682e-02, -3.5458e-02,  2.4895e-01,  1.4711e-02,  1.8945e-01,
         -5.0585e-01,  1.4138e-01, -8.2634e-02,  5.9925e-01, -4.1733e-01,
         -4.1256e-01,  1.0678e-01,  3.3491e-01,  1.8273e-01, -2.3709e-01,
          4.8642e-01, -6.2701e-01, -2.4070e-01,  3.8183e-02, -3.0322e-01,
         -6.5570e-01,  6.8470e-02, -3.5126e-01,  1.7026e-01, -3.9061e-01,
          5.6776e-01,  3.7666e-01,  8.2970e-02,  2.5329e-01, -1.9284e-03,
          2.9786e-01, -1.3893e-01,  2.0020e-01,  2.0931e-01,  2.9901e-01,
          1.7733e-01,  1.2985e-01, -1.0283e-01,  3.0968e-01,  1.6665e-01,
          1.1256e-01, -2.2090e-01,  7.2245e-03, -1.4432e-01,  2.5334e-01,
         -6.2548e-03, -1.0044e-01, -1.3703e-02, -2.4684e-01, -3.1147e-02,
         -8.1446e-02,  9.6129e-02, -1.5621e-01, -2.1570e-02,  3.9367e-02,
          2.1760e-01,  8.5015e-02,  6.9599e-02,  4.9526e-02,  1.8636e-01,
         -4.9054e-01,  8.2198e-01,  9.7428e-01, -7.0190e-02, -2.3161e-01,
         -1.0402e-01,  4.5107e-01, -8.4840e-01,  3.5751e-01,  2.9892e-01,
         -1.8001e-02,  2.0643e-01, -1.6338e-01,  3.0142e-01, -1.3858e-01,
          1.4616e-03, -1.0484e-02,  7.4738e-02,  7.4511e-02, -3.6231e-03,
         -2.2353e-02, -7.0141e-02,  5.3115e-02, -1.1575e-01, -3.2061e-02,
          6.9191e-02,  1.9088e-01,  1.7386e-01,  8.5748e-03, -1.4103e-01,
         -4.9230e-02,  5.0724e-02,  3.0854e-02,  8.0517e-02,  3.7817e-02,
         -5.2628e-02,  5.8674e-02, -1.1664e-01, -9.5355e-02,  6.0009e-02,
          1.0945e-01,  7.6391e-02, -7.7795e-02,  3.7751e-02,  2.7393e-01,
         -1.1221e-02,  5.1229e-02,  1.9655e-01,  1.9343e-02, -9.8832e-02,
         -5.5059e-02, -1.5989e-01, -2.1610e-01, -7.2089e-02,  5.7524e-02,
         -1.3055e-01, -2.5911e-02,  3.5280e-01, -4.6371e-02,  3.2303e-01,
          1.8600e-01, -1.2074e-02, -5.4026e-02, -1.2702e-01, -2.3888e-01,
          8.1028e-02]], device='cuda:0') tensor(0.2274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
70000 特征值优化 tensor(0.8177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.0939e-01,  3.2719e-01,  7.6025e-01, -1.0020e+00,  7.5173e-01,
          1.7112e+00,  4.1570e-01, -1.3599e+00,  6.8610e-01, -4.4243e-02,
         -5.6750e-01,  1.5609e-01,  4.1542e-01,  7.8390e-01, -1.1539e-01,
         -5.4677e-01, -3.9705e-01,  6.2971e-01, -7.9992e-02, -1.2882e-01,
         -7.7502e-01,  4.2043e-01,  2.7798e-01, -8.7120e-01, -9.9444e-01,
         -7.4829e-01,  4.0556e-01, -5.9860e-01,  6.7957e-01,  2.8221e-01,
          6.8783e-02, -3.3544e-01,  1.6334e-01,  2.2987e-01,  9.5919e-02,
         -7.0395e-02, -2.4364e-02,  2.9668e-01,  6.4342e-04,  1.8361e-01,
         -5.0246e-01,  1.4276e-01, -8.0821e-02,  6.1726e-01, -4.3520e-01,
         -4.1235e-01,  1.3533e-01,  3.2739e-01,  2.0387e-01, -2.4239e-01,
          4.8212e-01, -6.1844e-01, -2.0985e-01,  4.3060e-02, -2.8658e-01,
         -6.8671e-01,  7.8856e-02, -3.5069e-01,  1.7893e-01, -4.0719e-01,
          5.8593e-01,  3.5908e-01,  9.6779e-02,  2.5283e-01, -7.5883e-03,
          2.9033e-01, -1.6796e-01,  2.0668e-01,  2.0830e-01,  2.8615e-01,
          1.7653e-01,  1.3599e-01, -9.6252e-02,  3.0494e-01,  1.6931e-01,
          1.2010e-01, -2.3793e-01, -1.5600e-02, -1.2826e-01,  2.2743e-01,
         -1.9658e-02, -1.1749e-01, -2.9045e-02, -2.6201e-01, -1.5419e-02,
         -6.2491e-02,  1.2086e-01, -1.6111e-01,  7.1586e-03,  4.9693e-02,
          1.9646e-01,  9.1281e-02,  7.5872e-02,  4.7821e-02,  1.7883e-01,
         -4.9517e-01,  8.1315e-01,  9.7113e-01, -6.6320e-02, -2.6798e-01,
         -8.6741e-02,  4.6483e-01, -8.5829e-01,  3.6262e-01,  2.8604e-01,
         -1.5289e-02,  1.9770e-01, -1.5757e-01,  3.0026e-01, -1.4425e-01,
          1.2921e-02, -1.9896e-02,  8.5535e-02,  6.5596e-02, -3.0313e-02,
         -1.2200e-03, -7.9531e-02,  3.2817e-02, -9.9090e-02, -2.5746e-02,
          7.0724e-02,  1.5506e-01,  1.8977e-01, -4.2338e-03, -1.2059e-01,
         -4.8873e-02,  3.7476e-02,  4.5651e-02,  7.8987e-02,  5.9183e-02,
         -5.6930e-02,  5.1917e-02, -1.1505e-01, -9.3980e-02,  6.6756e-02,
          1.2151e-01,  7.9319e-02, -7.3649e-02,  4.4571e-02,  2.7845e-01,
          5.8637e-03,  5.1012e-02,  1.6776e-01,  1.2989e-03, -9.3936e-02,
         -5.5230e-02, -1.5927e-01, -2.1922e-01, -5.6787e-02,  4.3855e-02,
         -1.2297e-01, -1.0437e-02,  3.6174e-01, -4.0020e-02,  3.4201e-01,
          1.8846e-01, -1.0851e-02, -6.4042e-02, -1.1977e-01, -2.3153e-01,
          1.0377e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
71000 特征值优化 tensor(0.8213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.4055e-01,  3.0240e-01,  7.6941e-01, -1.0016e+00,  7.8447e-01,
          1.6716e+00,  4.2692e-01, -1.3801e+00,  7.1101e-01, -8.3794e-02,
         -5.7020e-01,  1.4881e-01,  4.1508e-01,  8.0689e-01, -9.7685e-02,
         -5.1690e-01, -3.9370e-01,  6.4003e-01, -9.1245e-02, -1.2761e-01,
         -7.9848e-01,  3.9959e-01,  2.7577e-01, -8.7345e-01, -9.7318e-01,
         -7.3551e-01,  4.0190e-01, -6.1088e-01,  6.8152e-01,  2.9813e-01,
          5.4843e-02, -3.2406e-01,  1.6427e-01,  2.3939e-01,  9.4638e-02,
         -5.4393e-02, -3.1166e-02,  3.1365e-01,  6.5504e-04,  1.7984e-01,
         -4.9339e-01,  1.4158e-01, -8.1795e-02,  6.1325e-01, -4.5336e-01,
         -4.1107e-01,  1.3787e-01,  3.1182e-01,  2.0749e-01, -2.4475e-01,
          4.7740e-01, -6.1464e-01, -2.0459e-01,  3.2670e-02, -2.8668e-01,
         -7.0233e-01,  9.3733e-02, -3.4631e-01,  1.8318e-01, -4.1386e-01,
          5.9318e-01,  3.4168e-01,  1.0100e-01,  2.5085e-01,  3.8037e-03,
          2.9340e-01, -1.7443e-01,  2.0852e-01,  2.1614e-01,  2.8372e-01,
          1.7680e-01,  1.3605e-01, -1.0146e-01,  2.9687e-01,  1.5391e-01,
          1.1452e-01, -2.3858e-01, -8.8216e-03, -1.3298e-01,  2.2177e-01,
         -2.4711e-02, -1.2240e-01, -2.9572e-02, -2.6006e-01,  2.0398e-03,
         -5.0759e-02,  1.1640e-01, -1.6876e-01,  4.2422e-03,  3.5354e-02,
          1.9025e-01,  1.0599e-01,  8.1640e-02,  3.8334e-02,  1.8241e-01,
         -4.9854e-01,  8.0949e-01,  9.6000e-01, -8.4106e-02, -2.8795e-01,
         -5.6986e-02,  4.6037e-01, -8.5580e-01,  3.7595e-01,  2.7904e-01,
         -2.2005e-02,  1.8945e-01, -1.3971e-01,  2.9926e-01, -1.4270e-01,
          2.1648e-02, -8.6558e-03,  8.7674e-02,  5.4791e-02, -3.3763e-02,
         -2.2125e-03, -8.2671e-02,  3.0252e-02, -9.0234e-02, -1.6236e-02,
          7.1391e-02,  1.4662e-01,  1.9941e-01, -8.0765e-03, -1.1538e-01,
         -4.7328e-02,  2.8454e-02,  4.4265e-02,  6.7812e-02,  7.0743e-02,
         -5.7779e-02,  5.0861e-02, -1.1564e-01, -9.7422e-02,  7.5469e-02,
          1.1117e-01,  6.1973e-02, -8.0652e-02,  6.7855e-02,  2.6610e-01,
          1.0139e-02,  5.5261e-02,  1.6570e-01,  3.3508e-03, -1.0350e-01,
         -7.2586e-02, -1.5927e-01, -2.2144e-01, -5.3704e-02,  5.2044e-02,
         -1.1855e-01, -1.3756e-02,  3.6308e-01, -3.3773e-02,  3.3967e-01,
          1.9059e-01, -1.7469e-02, -5.7031e-02, -1.1813e-01, -2.3262e-01,
          9.3935e-02]], device='cuda:0') tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
72000 特征值优化 tensor(0.8891, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.8303e-01,  2.7224e-01,  7.7953e-01, -1.0022e+00,  7.6768e-01,
          1.6464e+00,  4.1925e-01, -1.3937e+00,  7.6662e-01, -1.3161e-01,
         -5.5559e-01,  1.4456e-01,  4.1822e-01,  8.1545e-01, -7.9228e-02,
         -5.2539e-01, -4.0131e-01,  6.4003e-01, -1.1587e-01, -1.1297e-01,
         -8.0686e-01,  3.7175e-01,  2.6818e-01, -8.9084e-01, -9.6797e-01,
         -7.1334e-01,  4.0816e-01, -5.9553e-01,  6.7036e-01,  3.2042e-01,
          3.6781e-02, -3.1995e-01,  1.5494e-01,  2.4543e-01,  9.9818e-02,
         -4.5472e-02, -4.0301e-02,  3.2381e-01, -1.3792e-02,  1.7740e-01,
         -4.9169e-01,  1.4238e-01, -8.2790e-02,  6.1892e-01, -4.7229e-01,
         -4.0966e-01,  1.3496e-01,  2.8511e-01,  2.0530e-01, -2.4523e-01,
          4.7099e-01, -6.1277e-01, -1.8036e-01,  2.7170e-02, -2.8756e-01,
         -7.1200e-01,  9.5324e-02, -3.2647e-01,  1.7561e-01, -4.1565e-01,
          6.1534e-01,  3.2891e-01,  1.2079e-01,  2.5755e-01, -7.8886e-06,
          2.9741e-01, -1.8557e-01,  2.0208e-01,  2.2398e-01,  2.7713e-01,
          1.7466e-01,  1.3748e-01, -9.7896e-02,  3.0318e-01,  1.6268e-01,
          1.2773e-01, -2.4634e-01,  4.3239e-03, -1.3535e-01,  2.0663e-01,
         -2.2981e-02, -1.2054e-01, -2.8751e-02, -2.8050e-01,  1.5362e-02,
         -5.6064e-02,  1.3098e-01, -1.6122e-01,  6.7868e-03,  5.2976e-02,
          1.8547e-01,  1.0402e-01,  8.1626e-02,  5.7270e-02,  1.8580e-01,
         -4.9978e-01,  7.8991e-01,  9.4520e-01, -1.0019e-01, -3.2744e-01,
         -4.3544e-02,  4.5866e-01, -8.6971e-01,  3.9043e-01,  2.7624e-01,
         -1.0210e-02,  1.9099e-01, -1.3092e-01,  3.0537e-01, -1.4139e-01,
          3.4077e-02, -9.8705e-03,  9.0145e-02,  4.3818e-02, -4.1956e-02,
          5.6257e-03, -8.8647e-02,  2.1124e-02, -8.5116e-02,  2.0356e-03,
          7.6051e-02,  1.2289e-01,  2.0444e-01, -4.8659e-03, -1.0983e-01,
         -4.2551e-02,  2.8045e-02,  4.6329e-02,  5.9442e-02,  7.6198e-02,
         -6.5045e-02,  5.0022e-02, -1.1960e-01, -8.7089e-02,  7.3642e-02,
          1.3139e-01,  6.8302e-02, -1.0235e-01,  6.8707e-02,  2.8289e-01,
          2.0797e-02,  4.6665e-02,  1.5154e-01,  2.6321e-03, -9.7324e-02,
         -8.4015e-02, -1.5513e-01, -2.3237e-01, -5.3451e-02,  3.9659e-02,
         -9.8968e-02, -9.6868e-03,  3.5418e-01, -4.3698e-02,  3.4599e-01,
          2.0000e-01, -2.3490e-02, -5.5603e-02, -1.1980e-01, -2.4772e-01,
          9.5527e-02]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
73000 特征值优化 tensor(0.8443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.8719e-01,  2.3434e-01,  7.4757e-01, -1.0047e+00,  7.9304e-01,
          1.6122e+00,  4.1065e-01, -1.3527e+00,  7.8250e-01, -1.5638e-01,
         -5.4654e-01,  1.3432e-01,  4.0951e-01,  8.4882e-01, -8.8099e-02,
         -4.9062e-01, -3.8696e-01,  6.5315e-01, -1.3570e-01, -1.1466e-01,
         -8.1540e-01,  3.5804e-01,  2.7207e-01, -8.9017e-01, -9.6524e-01,
         -7.1345e-01,  4.1207e-01, -5.9816e-01,  6.9294e-01,  3.4013e-01,
          1.7538e-02, -3.1672e-01,  1.4672e-01,  2.6773e-01,  9.4538e-02,
         -2.6307e-02, -5.1721e-02,  3.3814e-01, -9.7834e-03,  1.9554e-01,
         -4.7004e-01,  1.4259e-01, -8.2984e-02,  5.9600e-01, -4.9859e-01,
         -3.9737e-01,  1.3407e-01,  2.6578e-01,  1.9344e-01, -2.3154e-01,
          4.6647e-01, -6.1777e-01, -1.7496e-01,  2.2152e-02, -3.0244e-01,
         -7.3225e-01,  1.1703e-01, -3.3251e-01,  1.6960e-01, -4.2185e-01,
          6.1265e-01,  3.2079e-01,  1.4234e-01,  2.6989e-01, -8.9430e-03,
          2.9281e-01, -1.7937e-01,  1.9832e-01,  2.0978e-01,  2.8256e-01,
          1.6853e-01,  1.3417e-01, -9.7952e-02,  2.9239e-01,  1.8256e-01,
          1.3296e-01, -2.3586e-01,  3.2723e-03, -1.6025e-01,  2.0081e-01,
         -2.2738e-02, -1.1277e-01, -2.3918e-02, -2.4982e-01,  3.1722e-02,
         -5.5830e-02,  1.0795e-01, -1.6534e-01, -2.4500e-02,  5.1182e-02,
          1.7719e-01,  1.2502e-01,  8.2087e-02,  4.1484e-02,  1.9124e-01,
         -4.9756e-01,  7.7067e-01,  9.3086e-01, -1.0800e-01, -3.3427e-01,
         -5.8291e-04,  4.4988e-01, -8.7722e-01,  4.0153e-01,  2.6901e-01,
         -3.6024e-03,  1.8430e-01, -1.1796e-01,  3.4176e-01, -1.3458e-01,
          4.4597e-02,  3.1712e-03,  8.2827e-02,  3.2239e-02, -4.0512e-02,
         -1.0779e-02, -8.4573e-02,  1.5395e-02, -8.6915e-02,  9.2474e-03,
          7.8851e-02,  1.4622e-01,  2.0698e-01,  6.6507e-03, -1.0445e-01,
         -4.2723e-02,  2.5996e-02,  2.5146e-02,  5.8571e-02,  7.9429e-02,
         -7.2938e-02,  5.1663e-02, -1.1167e-01, -8.6301e-02,  8.1275e-02,
          1.0818e-01,  4.8537e-02, -1.0260e-01,  1.0609e-01,  2.3790e-01,
          2.6283e-02,  9.2640e-02,  1.3589e-01,  3.1143e-02, -1.3029e-01,
         -9.3190e-02, -1.5280e-01, -2.2803e-01, -6.4258e-02,  5.4609e-02,
         -8.2169e-02, -1.5407e-02,  3.4891e-01, -4.7000e-02,  3.2505e-01,
          2.0769e-01, -2.8219e-02, -4.3739e-02, -1.2710e-01, -2.5371e-01,
          7.0748e-02]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
74000 特征值优化 tensor(0.8127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.9465e-01,  1.8175e-01,  7.5703e-01, -1.0037e+00,  7.9686e-01,
          1.6356e+00,  4.2828e-01, -1.3368e+00,  8.3492e-01, -1.7188e-01,
         -5.3274e-01,  1.4907e-01,  4.1635e-01,  8.5798e-01, -7.7420e-02,
         -5.0783e-01, -3.9760e-01,  6.5240e-01, -1.4604e-01, -1.0008e-01,
         -8.1902e-01,  3.6095e-01,  2.7764e-01, -9.0710e-01, -9.5557e-01,
         -6.9614e-01,  4.1670e-01, -5.9908e-01,  6.7407e-01,  3.5990e-01,
          8.6971e-03, -3.0691e-01,  1.5464e-01,  2.7170e-01,  9.3960e-02,
         -1.7799e-02, -5.9096e-02,  3.4488e-01, -3.3615e-02,  1.9868e-01,
         -4.6979e-01,  1.4123e-01, -8.2000e-02,  6.0911e-01, -5.2240e-01,
         -4.0835e-01,  1.3512e-01,  2.5417e-01,  1.9232e-01, -2.3193e-01,
          4.6465e-01, -6.3415e-01, -1.6555e-01,  1.9942e-02, -3.0980e-01,
         -7.3408e-01,  1.3307e-01, -3.2968e-01,  1.7077e-01, -4.3372e-01,
          6.3397e-01,  3.1939e-01,  1.5389e-01,  2.5909e-01,  4.5054e-03,
          3.0130e-01, -1.9639e-01,  2.0907e-01,  2.1221e-01,  2.6823e-01,
          1.6482e-01,  1.2852e-01, -8.7766e-02,  3.0286e-01,  1.7020e-01,
          1.2084e-01, -2.4978e-01, -1.7478e-02, -1.4325e-01,  2.0139e-01,
         -2.0276e-02, -1.0710e-01, -2.9375e-02, -2.6220e-01,  2.9257e-02,
         -4.1219e-02,  1.2856e-01, -1.5452e-01, -2.8889e-02,  5.1150e-02,
          1.7481e-01,  1.0859e-01,  6.9908e-02,  3.3941e-02,  1.8187e-01,
         -4.9416e-01,  7.6654e-01,  9.3563e-01, -1.2215e-01, -3.2746e-01,
         -1.2031e-02,  4.5316e-01, -8.6898e-01,  4.1300e-01,  2.6954e-01,
          2.4173e-03,  1.8569e-01, -1.2386e-01,  3.3434e-01, -1.2587e-01,
          6.6649e-02,  1.6550e-03,  8.1024e-02,  2.0761e-02, -2.7274e-02,
         -4.8996e-03, -9.2738e-02,  1.2622e-02, -7.4078e-02,  3.0680e-02,
          1.0232e-01,  1.1444e-01,  2.1918e-01,  7.7414e-03, -8.9625e-02,
         -4.1402e-02,  3.5019e-02,  2.8609e-02,  5.3124e-02,  9.2031e-02,
         -7.1797e-02,  5.3995e-02, -1.1460e-01, -9.1965e-02,  7.1757e-02,
          1.2185e-01,  6.7897e-02, -9.8825e-02,  9.8940e-02,  2.6598e-01,
          2.0290e-02,  6.6850e-02,  1.2271e-01,  1.1266e-03, -1.2968e-01,
         -9.1776e-02, -1.4859e-01, -2.3211e-01, -7.1107e-02,  5.1364e-02,
         -7.0023e-02, -1.7513e-03,  3.3924e-01, -5.1617e-02,  3.3893e-01,
          2.1703e-01, -2.7060e-02, -4.3659e-02, -1.2510e-01, -2.4764e-01,
          8.5312e-02]], device='cuda:0') tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
75000 特征值优化 tensor(0.8341, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8042,  0.1445,  0.7433, -1.0024,  0.8223,  1.6320,  0.4425, -1.3298,
          0.8579, -0.1763, -0.5234,  0.1470,  0.4014,  0.8685, -0.0844, -0.5215,
         -0.4013,  0.6484, -0.1541, -0.0915, -0.8302,  0.3581,  0.2784, -0.9046,
         -0.9511, -0.6964,  0.4210, -0.5937,  0.6823,  0.3660,  0.0052, -0.2999,
          0.1493,  0.2768,  0.1056, -0.0091, -0.0680,  0.3425, -0.0345,  0.1933,
         -0.4644,  0.1430, -0.0837,  0.5960, -0.5227, -0.3997,  0.1341,  0.2444,
          0.1876, -0.2251,  0.4613, -0.6328, -0.1559,  0.0203, -0.3170, -0.7317,
          0.1265, -0.3303,  0.1534, -0.4412,  0.6249,  0.3148,  0.1762,  0.2669,
         -0.0025,  0.3011, -0.1921,  0.2041,  0.2002,  0.2657,  0.1633,  0.1239,
         -0.0861,  0.3057,  0.1781,  0.1330, -0.2517, -0.0095, -0.1492,  0.1945,
         -0.0206, -0.1018, -0.0227, -0.2578,  0.0411, -0.0413,  0.1223, -0.1601,
         -0.0137,  0.0465,  0.1671,  0.1067,  0.0697,  0.0321,  0.1907, -0.4903,
          0.7592,  0.9225, -0.1177, -0.3290, -0.0188,  0.4474, -0.8569,  0.4241,
          0.2689,  0.0134,  0.1827, -0.1106,  0.3485, -0.1238,  0.0685,  0.0066,
          0.0856,  0.0248, -0.0399, -0.0157, -0.0891,  0.0127, -0.0721,  0.0281,
          0.0973,  0.1180,  0.2133,  0.0151, -0.0901, -0.0389,  0.0361,  0.0287,
          0.0436,  0.0939, -0.0786,  0.0546, -0.1086, -0.0902,  0.0757,  0.1080,
          0.0657, -0.0981,  0.0915,  0.2571,  0.0365,  0.0827,  0.1175,  0.0068,
         -0.1352, -0.1033, -0.1596, -0.2295, -0.0663,  0.0451, -0.0740, -0.0054,
          0.3378, -0.0588,  0.3289,  0.2161, -0.0409, -0.0398, -0.1254, -0.2525,
          0.0748]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
76000 特征值优化 tensor(0.8238, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1242e-01,  1.0160e-01,  7.3583e-01, -1.0037e+00,  8.2770e-01,
          1.6305e+00,  4.6565e-01, -1.3438e+00,  8.8542e-01, -1.8151e-01,
         -5.3019e-01,  1.4822e-01,  3.9902e-01,  8.7801e-01, -7.6465e-02,
         -5.0440e-01, -3.8523e-01,  6.5302e-01, -1.4637e-01, -8.6523e-02,
         -8.3254e-01,  3.6890e-01,  2.7409e-01, -9.0081e-01, -9.3497e-01,
         -6.9383e-01,  4.0818e-01, -5.8851e-01,  6.8609e-01,  3.6622e-01,
          9.2990e-03, -3.0507e-01,  1.4852e-01,  2.7309e-01,  1.0708e-01,
         -7.7817e-03, -5.9714e-02,  3.3647e-01, -2.4418e-02,  1.9938e-01,
         -4.5432e-01,  1.4087e-01, -8.4424e-02,  6.0061e-01, -5.2068e-01,
         -3.9144e-01,  1.2543e-01,  2.3702e-01,  1.8595e-01, -2.1925e-01,
          4.6519e-01, -6.4230e-01, -1.5680e-01,  1.7835e-02, -3.1964e-01,
         -7.3907e-01,  1.3495e-01, -3.4029e-01,  1.4718e-01, -4.4051e-01,
          6.1374e-01,  3.1323e-01,  1.7594e-01,  2.7271e-01, -7.9665e-03,
          2.9085e-01, -1.9955e-01,  1.9486e-01,  1.8946e-01,  2.6409e-01,
          1.6071e-01,  1.2083e-01, -8.6471e-02,  3.0078e-01,  1.7706e-01,
          1.4435e-01, -2.5581e-01, -1.4964e-02, -1.6235e-01,  1.9308e-01,
         -2.6851e-02, -9.5229e-02, -1.8078e-02, -2.5778e-01,  5.3526e-02,
         -4.2686e-02,  1.3328e-01, -1.5623e-01, -2.3163e-02,  4.0089e-02,
          1.5915e-01,  1.0964e-01,  7.5506e-02,  2.3029e-02,  1.8817e-01,
         -4.9194e-01,  7.5587e-01,  9.2987e-01, -1.0614e-01, -3.1679e-01,
         -1.2869e-04,  4.3867e-01, -8.5574e-01,  4.2514e-01,  2.7402e-01,
          1.2039e-02,  1.8342e-01, -1.0476e-01,  3.6090e-01, -1.2299e-01,
          5.9250e-02,  1.0982e-02,  8.1663e-02,  2.8230e-02, -4.6563e-02,
         -1.6155e-02, -8.9250e-02,  8.6231e-04, -7.1180e-02,  2.5092e-02,
          8.8438e-02,  1.2438e-01,  2.1973e-01,  1.8611e-02, -8.1683e-02,
         -3.9914e-02,  3.3604e-02,  2.3266e-02,  4.5070e-02,  9.4906e-02,
         -7.9423e-02,  5.2869e-02, -1.0602e-01, -9.1176e-02,  7.6923e-02,
          1.1175e-01,  6.2573e-02, -9.7487e-02,  9.2974e-02,  2.5329e-01,
          2.7844e-02,  9.1362e-02,  1.1103e-01,  1.6651e-02, -1.4439e-01,
         -1.1236e-01, -1.5574e-01, -2.2839e-01, -6.8329e-02,  5.4439e-02,
         -6.9565e-02, -9.9704e-03,  3.3564e-01, -6.0825e-02,  3.4061e-01,
          2.1511e-01, -4.1387e-02, -3.4798e-02, -1.1820e-01, -2.5302e-01,
          8.1994e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
77000 特征值优化 tensor(0.8568, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.4843e-01,  9.9139e-02,  7.3693e-01, -1.0069e+00,  8.2773e-01,
          1.6326e+00,  4.6100e-01, -1.3407e+00,  8.9668e-01, -1.6754e-01,
         -5.1374e-01,  1.7400e-01,  3.9999e-01,  9.0089e-01, -8.8560e-02,
         -5.2274e-01, -3.9721e-01,  6.5054e-01, -1.4266e-01, -7.7816e-02,
         -8.2947e-01,  3.7098e-01,  2.7227e-01, -8.9986e-01, -9.2678e-01,
         -6.9172e-01,  4.2072e-01, -5.7473e-01,  6.8501e-01,  3.7474e-01,
          1.6992e-02, -3.1342e-01,  1.4578e-01,  2.8766e-01,  1.0269e-01,
         -9.9162e-03, -6.3838e-02,  3.5257e-01, -2.6157e-02,  1.9109e-01,
         -4.4392e-01,  1.4358e-01, -8.3117e-02,  6.0072e-01, -5.3327e-01,
         -3.8739e-01,  1.3218e-01,  2.4060e-01,  1.8310e-01, -2.1326e-01,
          4.6555e-01, -6.4578e-01, -1.4893e-01,  2.7463e-02, -3.2490e-01,
         -7.2567e-01,  1.2778e-01, -3.2885e-01,  1.3958e-01, -4.4374e-01,
          6.1814e-01,  3.1498e-01,  1.7865e-01,  2.5669e-01, -1.2367e-02,
          2.9416e-01, -1.9278e-01,  1.9428e-01,  2.0409e-01,  2.5653e-01,
          1.5956e-01,  1.2393e-01, -8.1836e-02,  3.0038e-01,  1.7450e-01,
          1.3324e-01, -2.6513e-01, -1.1636e-02, -1.4746e-01,  1.9124e-01,
         -2.4573e-02, -9.9942e-02, -2.0342e-02, -2.6323e-01,  5.5112e-02,
         -5.3120e-02,  1.2767e-01, -1.7380e-01, -5.3900e-03,  5.1868e-02,
          1.5310e-01,  9.0272e-02,  6.7027e-02,  3.4094e-02,  1.8499e-01,
         -4.9246e-01,  7.5909e-01,  9.3305e-01, -9.9550e-02, -3.1990e-01,
         -2.5424e-02,  4.4981e-01, -8.5182e-01,  4.2785e-01,  2.6664e-01,
          1.3857e-02,  1.8685e-01, -9.8363e-02,  3.5653e-01, -1.2106e-01,
          7.0079e-02,  3.1252e-03,  8.0966e-02,  1.4631e-02, -3.9036e-02,
         -1.3418e-02, -8.0825e-02,  1.0585e-02, -8.1921e-02,  3.5426e-02,
          9.6087e-02,  1.1668e-01,  2.1206e-01,  1.7762e-02, -9.0578e-02,
         -4.0556e-02,  3.1879e-02,  2.2103e-02,  4.5967e-02,  9.2447e-02,
         -7.6665e-02,  5.2439e-02, -1.0569e-01, -9.1042e-02,  8.0526e-02,
          1.1537e-01,  7.1033e-02, -1.0307e-01,  9.1590e-02,  2.5041e-01,
          1.5430e-02,  8.9390e-02,  1.1396e-01,  1.8472e-02, -1.3730e-01,
         -1.1812e-01, -1.5471e-01, -2.2886e-01, -6.6552e-02,  4.2806e-02,
         -6.8506e-02, -4.0544e-05,  3.3899e-01, -7.1269e-02,  3.2982e-01,
          2.1589e-01, -4.5011e-02, -3.7028e-02, -1.2748e-01, -2.5574e-01,
          7.1087e-02]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
78000 特征值优化 tensor(0.8282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.2395e-01,  7.9817e-02,  7.2878e-01, -1.0051e+00,  8.6863e-01,
          1.6367e+00,  4.6667e-01, -1.3448e+00,  9.0168e-01, -1.7241e-01,
         -5.1269e-01,  1.5622e-01,  3.9260e-01,  9.0049e-01, -7.3069e-02,
         -5.2212e-01, -3.9251e-01,  6.4954e-01, -1.4898e-01, -7.3400e-02,
         -8.2661e-01,  3.7914e-01,  2.7080e-01, -9.0075e-01, -9.1750e-01,
         -6.7576e-01,  4.1498e-01, -5.8312e-01,  6.8866e-01,  3.7148e-01,
          9.5864e-03, -3.1012e-01,  1.5466e-01,  2.8301e-01,  1.0942e-01,
         -8.3325e-03, -6.8008e-02,  3.4874e-01, -2.0395e-02,  1.9894e-01,
         -4.4567e-01,  1.4291e-01, -7.9687e-02,  5.9777e-01, -5.3391e-01,
         -3.9097e-01,  1.2563e-01,  2.3698e-01,  1.8296e-01, -2.1272e-01,
          4.6886e-01, -6.4477e-01, -1.3928e-01,  2.4911e-02, -3.2991e-01,
         -7.3016e-01,  1.3134e-01, -3.3573e-01,  1.3041e-01, -4.4518e-01,
          6.1794e-01,  3.0304e-01,  1.7320e-01,  2.5900e-01, -8.7417e-03,
          2.9498e-01, -1.9292e-01,  1.9654e-01,  1.9324e-01,  2.5499e-01,
          1.6324e-01,  1.1666e-01, -7.5197e-02,  3.0272e-01,  1.7011e-01,
          1.3989e-01, -2.6264e-01, -1.8821e-02, -1.5391e-01,  1.9249e-01,
         -2.0148e-02, -9.8627e-02, -1.9216e-02, -2.5349e-01,  6.2863e-02,
         -4.2946e-02,  1.3510e-01, -1.6268e-01, -9.0057e-03,  4.3702e-02,
          1.5256e-01,  1.0643e-01,  6.9038e-02,  2.4303e-02,  1.8415e-01,
         -4.8700e-01,  7.6175e-01,  9.2586e-01, -9.9679e-02, -3.1407e-01,
         -2.2768e-02,  4.5490e-01, -8.4691e-01,  4.2843e-01,  2.6936e-01,
          7.1339e-03,  1.8518e-01, -1.0533e-01,  3.4948e-01, -1.2014e-01,
          6.7486e-02,  8.5745e-03,  8.5849e-02,  1.1914e-02, -4.0405e-02,
         -2.3186e-02, -8.3557e-02,  6.2767e-03, -6.8059e-02,  3.2477e-02,
          9.1882e-02,  1.2098e-01,  2.2506e-01,  1.9578e-02, -8.6582e-02,
         -3.9166e-02,  2.7786e-02,  2.0214e-02,  4.3207e-02,  9.7057e-02,
         -7.8852e-02,  4.9496e-02, -1.0195e-01, -8.6892e-02,  8.5921e-02,
          1.1644e-01,  6.6919e-02, -1.0602e-01,  8.7774e-02,  2.5617e-01,
          1.8577e-02,  9.6616e-02,  1.0855e-01,  1.6308e-02, -1.4318e-01,
         -1.2604e-01, -1.4847e-01, -2.3419e-01, -6.3357e-02,  4.8048e-02,
         -6.4007e-02, -5.9447e-04,  3.4552e-01, -6.2842e-02,  3.3669e-01,
          2.1239e-01, -4.5451e-02, -3.8311e-02, -1.3188e-01, -2.4739e-01,
          7.8407e-02]], device='cuda:0') tensor(0.2070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
79000 特征值优化 tensor(0.8201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8245,  0.1031,  0.6948, -1.0018,  0.9204,  1.6266,  0.5265, -1.3660,
          0.9327, -0.1677, -0.5331,  0.2021,  0.4119,  0.8980, -0.0569, -0.5060,
         -0.3773,  0.6508, -0.1434, -0.0471, -0.8554,  0.3864,  0.2665, -0.8952,
         -0.9266, -0.7046,  0.4293, -0.6075,  0.7011,  0.3787,  0.0072, -0.3095,
          0.1792,  0.2917,  0.1125, -0.0132, -0.0663,  0.3531, -0.0237,  0.1993,
         -0.4349,  0.1422, -0.0850,  0.5846, -0.5447, -0.3966,  0.1217,  0.2482,
          0.1511, -0.2054,  0.4852, -0.6598, -0.1292,  0.0027, -0.3242, -0.7157,
          0.1309, -0.3378,  0.1232, -0.4533,  0.6016,  0.2838,  0.1905,  0.2497,
         -0.0048,  0.2849, -0.2037,  0.2048,  0.1970,  0.2512,  0.1656,  0.1136,
         -0.0782,  0.3012,  0.1587,  0.1284, -0.2743, -0.0569, -0.1937,  0.1684,
         -0.0252, -0.1121, -0.0210, -0.2380,  0.0752, -0.0532,  0.1567, -0.1830,
         -0.0069,  0.0318,  0.1396,  0.1098,  0.0660,  0.0433,  0.1877, -0.4816,
          0.7703,  0.9481, -0.0735, -0.3196,  0.0554,  0.4504, -0.8110,  0.4033,
          0.2654,  0.0117,  0.1756, -0.1060,  0.3155, -0.1089,  0.0691,  0.0280,
          0.0588,  0.0241, -0.0549, -0.0255, -0.1092,  0.0063, -0.0690,  0.0324,
          0.0767,  0.1400,  0.1988,  0.0247, -0.0791, -0.0442,  0.0318,  0.0094,
          0.0323,  0.0792, -0.0882,  0.0432, -0.0956, -0.0958,  0.1032,  0.1032,
          0.0729, -0.0957,  0.0692,  0.2804,  0.0417,  0.0679,  0.0889, -0.0086,
         -0.1824, -0.1342, -0.1420, -0.2157, -0.0585,  0.0281, -0.0620,  0.0245,
          0.3420, -0.0535,  0.3226,  0.2352, -0.0590, -0.0281, -0.1316, -0.2209,
          0.0856]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
80000 特征值优化 tensor(0.8133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7895,  0.0854,  0.6554, -1.0061,  0.9975,  1.6432,  0.5739, -1.3936,
          0.9718, -0.1378, -0.5162,  0.2358,  0.4305,  0.9131, -0.0522, -0.4936,
         -0.3493,  0.6419, -0.1371, -0.0077, -0.8611,  0.3695,  0.2707, -0.8957,
         -0.8961, -0.7154,  0.4468, -0.6053,  0.6938,  0.3999,  0.0036, -0.3091,
          0.1999,  0.2997,  0.1267, -0.0093, -0.0640,  0.3431, -0.0252,  0.2047,
         -0.4183,  0.1416, -0.0841,  0.5773, -0.5653, -0.4013,  0.1146,  0.2219,
          0.1297, -0.2109,  0.4924, -0.6911, -0.1163, -0.0085, -0.3130, -0.7159,
          0.1218, -0.3479,  0.1135, -0.4702,  0.6054,  0.2555,  0.2016,  0.2375,
          0.0049,  0.2763, -0.2073,  0.2151,  0.1735,  0.2548,  0.1651,  0.1050,
         -0.0812,  0.2984,  0.1494,  0.1320, -0.2800, -0.0551, -0.2076,  0.1505,
         -0.0397, -0.1189, -0.0141, -0.2240,  0.0790, -0.0707,  0.1762, -0.2060,
          0.0081,  0.0109,  0.1203,  0.1348,  0.0747,  0.0537,  0.1868, -0.4698,
          0.7829,  0.9512, -0.0643, -0.2920,  0.0625,  0.4554, -0.8010,  0.3891,
          0.2556,  0.0037,  0.1719, -0.1095,  0.2924, -0.0910,  0.0700,  0.0445,
          0.0479,  0.0168, -0.0524, -0.0289, -0.1235, -0.0086, -0.0801,  0.0266,
          0.0691,  0.1465,  0.1919,  0.0362, -0.0830, -0.0518,  0.0455,  0.0034,
          0.0415,  0.0708, -0.0916,  0.0403, -0.0929, -0.0949,  0.1207,  0.0972,
          0.0640, -0.0976,  0.0609,  0.2985,  0.0557,  0.0690,  0.0856, -0.0206,
         -0.1816, -0.1485, -0.1370, -0.2113, -0.0521,  0.0237, -0.0524,  0.0344,
          0.3335, -0.0574,  0.3232,  0.2518, -0.0570, -0.0199, -0.1288, -0.2179,
          0.0946]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
81000 特征值优化 tensor(0.8115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8196,  0.0583,  0.6203, -1.0051,  1.0111,  1.6757,  0.6102, -1.4083,
          0.9923, -0.1134, -0.5092,  0.2357,  0.4141,  0.9304, -0.0690, -0.5129,
         -0.3268,  0.6088, -0.1159,  0.0212, -0.9029,  0.3623,  0.2919, -0.8797,
         -0.8833, -0.7163,  0.4550, -0.5927,  0.7097,  0.4147,  0.0179, -0.3088,
          0.2099,  0.3119,  0.1270, -0.0090, -0.0664,  0.3423, -0.0273,  0.2090,
         -0.4103,  0.1410, -0.0854,  0.5616, -0.5705, -0.4043,  0.1085,  0.2131,
          0.1264, -0.2029,  0.5023, -0.6984, -0.0990, -0.0134, -0.3318, -0.7160,
          0.1123, -0.3690,  0.1058, -0.4772,  0.6039,  0.2341,  0.2074,  0.2305,
          0.0060,  0.2808, -0.1941,  0.2192,  0.1617,  0.2501,  0.1498,  0.1106,
         -0.0767,  0.2964,  0.1525,  0.1304, -0.2853, -0.0627, -0.2210,  0.1410,
         -0.0426, -0.1191, -0.0028, -0.2189,  0.0952, -0.0764,  0.1639, -0.2328,
          0.0321, -0.0094,  0.1061,  0.1347,  0.0646,  0.0478,  0.1953, -0.4633,
          0.8014,  0.9496, -0.0697, -0.2736,  0.0533,  0.4451, -0.7759,  0.3790,
          0.2460,  0.0029,  0.1568, -0.0903,  0.2738, -0.0867,  0.0675,  0.0515,
          0.0465,  0.0079, -0.0505, -0.0333, -0.1121, -0.0036, -0.0954,  0.0372,
          0.0621,  0.1575,  0.1840,  0.0323, -0.0828, -0.0540,  0.0375,  0.0074,
          0.0384,  0.0637, -0.0865,  0.0319, -0.0810, -0.0939,  0.1254,  0.0707,
          0.0740, -0.0768,  0.0405,  0.2820,  0.0538,  0.0829,  0.0815, -0.0224,
         -0.1835, -0.1708, -0.1428, -0.1949, -0.0570,  0.0117, -0.0468,  0.0362,
          0.3464, -0.0722,  0.3068,  0.2645, -0.0638, -0.0172, -0.1297, -0.2163,
          0.0828]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
82000 特征值优化 tensor(0.8221, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8378,  0.0196,  0.6366, -1.0065,  1.0358,  1.7127,  0.6770, -1.4347,
          0.9600, -0.1139, -0.5248,  0.2421,  0.3920,  0.9431, -0.0606, -0.5682,
         -0.3414,  0.5858, -0.1026,  0.0652, -0.9269,  0.3456,  0.2953, -0.8655,
         -0.8968, -0.7180,  0.4546, -0.5857,  0.7117,  0.4128,  0.0169, -0.2995,
          0.2288,  0.3041,  0.1168,  0.0018, -0.0547,  0.3390, -0.0379,  0.2003,
         -0.3989,  0.1423, -0.0865,  0.5608, -0.5731, -0.4047,  0.1079,  0.2161,
          0.1401, -0.1662,  0.4812, -0.7114, -0.0488, -0.0175, -0.3448, -0.7212,
          0.1091, -0.3702,  0.0822, -0.4713,  0.5935,  0.2006,  0.2159,  0.2269,
         -0.0046,  0.2683, -0.1957,  0.2074,  0.1704,  0.2462,  0.1233,  0.1133,
         -0.0873,  0.2942,  0.1306,  0.1171, -0.2990, -0.1021, -0.2006,  0.1351,
         -0.0490, -0.1211,  0.0058, -0.2225,  0.0909, -0.0753,  0.1652, -0.2495,
          0.0429, -0.0195,  0.0950,  0.1177,  0.0573,  0.0273,  0.1945, -0.4651,
          0.8078,  0.9436, -0.0784, -0.2825,  0.0539,  0.4471, -0.7465,  0.3801,
          0.2454,  0.0144,  0.1677, -0.0694,  0.2761, -0.0892,  0.0601,  0.0505,
          0.0389, -0.0047, -0.0441, -0.0317, -0.1163, -0.0030, -0.0886,  0.0456,
          0.0766,  0.1511,  0.1838,  0.0229, -0.0835, -0.0579,  0.0370,  0.0130,
          0.0472,  0.0635, -0.0799,  0.0298, -0.0832, -0.0957,  0.1209,  0.0757,
          0.0863, -0.0928,  0.0242,  0.3049,  0.0498,  0.0538,  0.0513, -0.0443,
         -0.1577, -0.1854, -0.1385, -0.1758, -0.0492, -0.0203, -0.0440,  0.0477,
          0.3509, -0.0832,  0.2994,  0.2905, -0.0475, -0.0281, -0.1245, -0.2049,
          0.0932]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
83000 特征值优化 tensor(0.8255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1128e-01, -2.8595e-02,  6.2668e-01, -1.0086e+00,  1.0812e+00,
          1.7508e+00,  7.1973e-01, -1.4318e+00,  9.5940e-01, -9.9780e-02,
         -5.3912e-01,  2.6146e-01,  3.4749e-01,  9.3781e-01, -5.9795e-02,
         -5.8770e-01, -3.3915e-01,  5.8206e-01, -9.5364e-02,  8.9057e-02,
         -9.4434e-01,  3.3552e-01,  2.9904e-01, -8.6062e-01, -9.0174e-01,
         -7.2267e-01,  4.6840e-01, -5.7434e-01,  7.0912e-01,  4.1437e-01,
          2.0479e-02, -2.9211e-01,  2.3640e-01,  2.9412e-01,  1.1347e-01,
          1.4878e-02, -5.2913e-02,  3.3051e-01, -4.2759e-02,  1.9252e-01,
         -3.9056e-01,  1.4284e-01, -8.5264e-02,  5.6343e-01, -5.7477e-01,
         -3.9916e-01,  1.0188e-01,  2.1262e-01,  1.5260e-01, -1.4254e-01,
          4.6803e-01, -7.1033e-01, -1.6270e-02, -2.9646e-02, -3.5615e-01,
         -7.2845e-01,  9.9760e-02, -3.7644e-01,  6.5302e-02, -4.6934e-01,
          5.9107e-01,  1.7568e-01,  2.0769e-01,  2.1916e-01, -3.3929e-04,
          2.6123e-01, -1.9515e-01,  2.0282e-01,  1.5616e-01,  2.3751e-01,
          1.1873e-01,  1.0974e-01, -8.4813e-02,  2.9164e-01,  1.2847e-01,
          1.1745e-01, -3.0104e-01, -1.2310e-01, -1.9873e-01,  1.3696e-01,
         -4.8893e-02, -1.2073e-01,  1.5364e-02, -2.1155e-01,  8.9285e-02,
         -7.6362e-02,  1.6815e-01, -2.6015e-01,  5.1816e-02, -3.0597e-02,
          8.5581e-02,  1.1264e-01,  6.2281e-02,  1.4310e-02,  1.8906e-01,
         -4.6023e-01,  8.1436e-01,  9.5068e-01, -7.4433e-02, -2.5319e-01,
          4.9247e-02,  4.4832e-01, -7.3844e-01,  3.8646e-01,  2.4929e-01,
          4.6938e-03,  1.8679e-01, -6.5275e-02,  2.7737e-01, -8.7353e-02,
          5.0400e-02,  6.1034e-02,  3.3136e-02, -4.6837e-03, -4.2116e-02,
         -3.0232e-02, -1.1478e-01, -1.0680e-02, -8.7181e-02,  3.9332e-02,
          8.5808e-02,  1.5765e-01,  1.8550e-01,  2.5364e-02, -8.5989e-02,
         -6.2226e-02,  3.6593e-02,  1.6225e-02,  4.7230e-02,  5.7029e-02,
         -8.3014e-02,  2.7767e-02, -8.3433e-02, -9.1391e-02,  1.1900e-01,
          7.3969e-02,  7.9910e-02, -8.5889e-02,  4.2723e-02,  3.1381e-01,
          5.8498e-02,  4.9887e-02,  2.3474e-02, -4.2607e-02, -1.4435e-01,
         -1.8926e-01, -1.4480e-01, -1.7125e-01, -4.6689e-02, -1.5828e-02,
         -3.9910e-02,  4.6177e-02,  3.4640e-01, -9.5974e-02,  3.0333e-01,
          2.9741e-01, -4.8587e-02, -2.3298e-02, -1.1198e-01, -2.0570e-01,
          9.8509e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
84000 特征值优化 tensor(0.8398, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.3226e-01, -5.7773e-02,  6.2038e-01, -1.0066e+00,  1.1184e+00,
          1.7818e+00,  7.5266e-01, -1.4409e+00,  9.6172e-01, -6.4006e-02,
         -5.3920e-01,  2.9782e-01,  3.5339e-01,  9.3967e-01, -7.1132e-02,
         -5.7518e-01, -3.2926e-01,  5.8542e-01, -8.8455e-02,  8.6234e-02,
         -9.4474e-01,  3.4286e-01,  3.0467e-01, -8.4846e-01, -8.9771e-01,
         -7.1648e-01,  4.6940e-01, -5.7040e-01,  7.2243e-01,  4.1529e-01,
          3.7573e-02, -3.0297e-01,  2.3837e-01,  2.9849e-01,  1.0557e-01,
          7.6655e-03, -6.1380e-02,  3.2255e-01, -4.7989e-02,  1.9307e-01,
         -3.7599e-01,  1.4349e-01, -8.3821e-02,  5.6486e-01, -5.7029e-01,
         -3.9300e-01,  8.6890e-02,  2.0709e-01,  1.4621e-01, -1.3011e-01,
          4.7751e-01, -7.0864e-01, -9.8102e-03, -4.7436e-02, -3.5963e-01,
         -7.3093e-01,  1.0251e-01, -3.8082e-01,  5.5793e-02, -4.7398e-01,
          5.8696e-01,  1.5559e-01,  2.0709e-01,  2.1654e-01, -2.0998e-03,
          2.6284e-01, -1.9711e-01,  2.0027e-01,  1.3990e-01,  2.2975e-01,
          1.1522e-01,  1.0216e-01, -7.6197e-02,  2.8338e-01,  1.3380e-01,
          1.3028e-01, -2.9100e-01, -1.5346e-01, -2.1271e-01,  1.3624e-01,
         -4.9445e-02, -1.2276e-01,  1.4524e-02, -1.9466e-01,  7.5413e-02,
         -8.0070e-02,  1.6781e-01, -2.5838e-01,  6.9108e-02, -3.2096e-02,
          8.5358e-02,  1.0748e-01,  5.7546e-02,  2.1628e-02,  1.9165e-01,
         -4.6368e-01,  8.1342e-01,  9.7389e-01, -4.2797e-02, -2.2683e-01,
          5.6925e-02,  4.4205e-01, -7.4311e-01,  3.8429e-01,  2.5475e-01,
          5.1147e-03,  2.0212e-01, -5.9383e-02,  2.8185e-01, -9.0382e-02,
          4.0823e-02,  6.6187e-02,  2.6178e-02,  1.4572e-03, -4.2020e-02,
         -3.3143e-02, -9.5657e-02, -1.0815e-02, -9.5069e-02,  3.4047e-02,
          9.3438e-02,  1.6575e-01,  1.8434e-01,  3.4959e-02, -9.3086e-02,
         -6.6473e-02,  3.2956e-02,  1.1707e-02,  4.6621e-02,  5.0502e-02,
         -8.4396e-02,  2.0435e-02, -8.0146e-02, -8.7088e-02,  1.1433e-01,
          7.0524e-02,  8.2839e-02, -8.9644e-02,  4.6807e-02,  2.9438e-01,
          4.2253e-02,  6.5638e-02,  3.4879e-02, -3.6873e-02, -1.5990e-01,
         -1.9690e-01, -1.4018e-01, -1.7327e-01, -5.8265e-02, -1.0561e-02,
         -3.0410e-02,  4.8998e-02,  3.5601e-01, -1.0511e-01,  2.9885e-01,
          3.0260e-01, -5.4739e-02, -1.4919e-02, -1.2278e-01, -1.9618e-01,
          9.2355e-02]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
85000 特征值优化 tensor(0.8130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0374e-01, -9.4063e-02,  6.1691e-01, -1.0035e+00,  1.1668e+00,
          1.7993e+00,  7.9234e-01, -1.4517e+00,  9.5834e-01, -5.9052e-02,
         -5.3432e-01,  2.8833e-01,  3.2144e-01,  9.3451e-01, -7.6272e-02,
         -5.8837e-01, -3.3950e-01,  5.6433e-01, -9.5704e-02,  1.1946e-01,
         -9.4771e-01,  3.3329e-01,  3.0335e-01, -8.4366e-01, -8.8934e-01,
         -7.3115e-01,  4.8444e-01, -5.6982e-01,  7.1939e-01,  4.2099e-01,
          3.2835e-02, -3.0251e-01,  2.3382e-01,  2.9077e-01,  9.4366e-02,
          1.1642e-02, -5.4568e-02,  3.1060e-01, -4.4061e-02,  1.8038e-01,
         -3.7667e-01,  1.4065e-01, -8.4674e-02,  5.6667e-01, -5.8019e-01,
         -4.0020e-01,  8.4226e-02,  2.1278e-01,  1.4951e-01, -1.1290e-01,
          4.7320e-01, -7.0722e-01,  2.2869e-02, -4.9968e-02, -3.6662e-01,
         -7.3547e-01,  9.0339e-02, -3.9614e-01,  6.2180e-02, -4.7558e-01,
          5.9205e-01,  1.4379e-01,  1.9293e-01,  2.0386e-01,  5.2037e-04,
          2.6295e-01, -2.0457e-01,  1.8521e-01,  1.4187e-01,  2.2571e-01,
          1.1284e-01,  1.0317e-01, -7.4189e-02,  2.8196e-01,  1.3380e-01,
          1.2156e-01, -3.1212e-01, -1.5254e-01, -1.9947e-01,  1.3025e-01,
         -5.9885e-02, -1.2583e-01,  2.2100e-02, -1.9952e-01,  6.0475e-02,
         -8.9605e-02,  1.8060e-01, -2.7236e-01,  7.6158e-02, -2.6302e-02,
          5.9444e-02,  1.2764e-01,  5.0722e-02,  2.5364e-03,  1.9354e-01,
         -4.6273e-01,  8.2612e-01,  9.7233e-01, -6.3402e-02, -2.2166e-01,
          5.7663e-02,  4.6075e-01, -7.4184e-01,  3.8505e-01,  2.6409e-01,
          7.9006e-03,  1.9806e-01, -6.3115e-02,  2.7944e-01, -8.4111e-02,
          4.1189e-02,  7.8030e-02,  2.9925e-02, -4.5699e-03, -2.8895e-02,
         -3.1580e-02, -9.8258e-02, -1.2769e-02, -9.8414e-02,  3.9344e-02,
          9.3253e-02,  1.6321e-01,  1.7812e-01,  4.2874e-02, -9.5307e-02,
         -7.2593e-02,  2.8601e-02,  1.2496e-02,  5.3381e-02,  5.1099e-02,
         -9.0365e-02,  2.1653e-02, -7.5092e-02, -8.4687e-02,  1.1877e-01,
          6.6268e-02,  9.0400e-02, -9.0529e-02,  4.1605e-02,  2.9745e-01,
          5.7834e-02,  6.1082e-02,  6.3801e-03, -4.7563e-02, -1.2696e-01,
         -1.9833e-01, -1.5086e-01, -1.6623e-01, -5.1081e-02, -5.6084e-03,
         -3.1824e-02,  5.1904e-02,  3.4022e-01, -1.1302e-01,  2.9810e-01,
          3.0487e-01, -5.3538e-02, -1.4889e-02, -1.1493e-01, -2.0174e-01,
          9.6494e-02]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
86000 特征值优化 tensor(0.8177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0282e-01, -1.2865e-01,  6.2087e-01, -1.0074e+00,  1.1912e+00,
          1.8225e+00,  8.3512e-01, -1.4582e+00,  9.5279e-01, -5.0951e-02,
         -5.3613e-01,  2.9939e-01,  3.1229e-01,  9.3986e-01, -6.8225e-02,
         -5.9316e-01, -3.5246e-01,  5.4154e-01, -9.5559e-02,  1.4218e-01,
         -9.5122e-01,  3.2621e-01,  3.1380e-01, -8.3127e-01, -8.8033e-01,
         -7.3886e-01,  4.9821e-01, -5.7701e-01,  7.1999e-01,  4.1957e-01,
          5.2591e-02, -3.0111e-01,  2.4635e-01,  2.7461e-01,  7.9575e-02,
          1.9400e-02, -5.2867e-02,  3.0826e-01, -4.6640e-02,  1.7549e-01,
         -3.7541e-01,  1.4236e-01, -8.3619e-02,  5.6540e-01, -5.7449e-01,
         -4.0260e-01,  6.5226e-02,  1.9964e-01,  1.5583e-01, -8.7138e-02,
          4.6657e-01, -7.0607e-01,  4.4263e-02, -6.8881e-02, -3.9012e-01,
         -7.3536e-01,  8.8262e-02, -3.8781e-01,  3.8000e-02, -4.7232e-01,
          5.8470e-01,  1.3812e-01,  1.8143e-01,  1.9794e-01, -2.4477e-03,
          2.6278e-01, -1.9484e-01,  1.8119e-01,  1.3615e-01,  2.1732e-01,
          1.1236e-01,  1.0091e-01, -6.7920e-02,  2.8282e-01,  1.2472e-01,
          1.1859e-01, -3.1385e-01, -1.7375e-01, -1.8845e-01,  1.2674e-01,
         -4.4388e-02, -1.2559e-01,  2.4555e-02, -1.8098e-01,  6.8264e-02,
         -8.3666e-02,  1.9405e-01, -2.8226e-01,  9.6239e-02, -1.8226e-02,
          4.1711e-02,  1.4206e-01,  6.2205e-02,  3.1631e-03,  1.9095e-01,
         -4.6409e-01,  8.3263e-01,  9.8364e-01, -5.5927e-02, -1.8365e-01,
          1.9365e-02,  4.8308e-01, -7.5790e-01,  3.7336e-01,  2.5547e-01,
          1.8125e-03,  2.1350e-01, -5.9561e-02,  2.8305e-01, -7.8975e-02,
          3.3968e-02,  8.4346e-02,  3.6923e-02,  6.5238e-03, -4.5091e-02,
         -3.1662e-02, -8.7438e-02, -9.3480e-03, -7.8914e-02,  3.7381e-02,
          9.9495e-02,  1.6920e-01,  1.8829e-01,  5.4778e-02, -9.2487e-02,
         -8.3205e-02,  2.0107e-02,  5.8338e-03,  4.0703e-02,  3.3100e-02,
         -8.2184e-02,  1.8668e-02, -6.1936e-02, -7.4836e-02,  1.2224e-01,
          5.6830e-02,  8.0080e-02, -9.2688e-02,  6.0177e-02,  2.9759e-01,
          4.4710e-02,  6.8735e-02, -6.9741e-03, -4.7252e-02, -1.1942e-01,
         -2.0192e-01, -1.3010e-01, -1.6538e-01, -4.2004e-02, -4.9174e-04,
         -1.8972e-02,  5.4014e-02,  3.4804e-01, -1.0299e-01,  3.0517e-01,
          3.1411e-01, -5.8940e-02, -1.2321e-02, -1.0989e-01, -1.8365e-01,
          1.1084e-01]], device='cuda:0') tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
87000 特征值优化 tensor(0.8401, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.7995e-01, -1.7269e-01,  6.2690e-01, -1.0037e+00,  1.2328e+00,
          1.8567e+00,  8.9811e-01, -1.4654e+00,  9.4073e-01, -2.2879e-02,
         -5.2254e-01,  3.1638e-01,  2.7333e-01,  9.1716e-01, -7.2427e-02,
         -5.9025e-01, -3.5777e-01,  5.1978e-01, -1.1877e-01,  1.5608e-01,
         -9.5275e-01,  3.2312e-01,  3.2094e-01, -8.2149e-01, -8.8527e-01,
         -7.4722e-01,  5.0487e-01, -5.6463e-01,  7.5163e-01,  4.2308e-01,
          5.9884e-02, -2.9943e-01,  2.4973e-01,  2.7283e-01,  6.4292e-02,
          2.3092e-02, -6.6384e-02,  2.8222e-01, -5.1264e-02,  1.7774e-01,
         -3.7362e-01,  1.4285e-01, -8.3413e-02,  5.7183e-01, -5.7610e-01,
         -4.1171e-01,  4.7652e-02,  1.9584e-01,  1.5485e-01, -5.6208e-02,
          4.5439e-01, -6.8548e-01,  6.3211e-02, -7.6193e-02, -4.0192e-01,
         -7.3119e-01,  9.2137e-02, -3.8470e-01,  3.1228e-02, -4.6644e-01,
          5.7670e-01,  1.4499e-01,  1.6693e-01,  1.7831e-01,  1.0754e-02,
          2.6725e-01, -2.0435e-01,  1.7970e-01,  1.2458e-01,  2.1026e-01,
          1.1507e-01,  1.0907e-01, -6.1768e-02,  2.7940e-01,  1.3424e-01,
          1.1791e-01, -3.0269e-01, -1.7779e-01, -2.0468e-01,  1.2508e-01,
         -5.5934e-02, -1.2734e-01,  3.0386e-02, -1.5763e-01,  4.9792e-02,
         -9.1266e-02,  2.0308e-01, -2.8947e-01,  1.2084e-01, -1.0435e-02,
          3.3919e-02,  1.5597e-01,  4.2653e-02,  1.4550e-03,  1.8759e-01,
         -4.6216e-01,  8.2654e-01,  9.9716e-01, -2.0402e-02, -1.5480e-01,
          3.0426e-02,  5.0031e-01, -7.8362e-01,  3.5894e-01,  2.6456e-01,
          4.2478e-03,  2.3521e-01, -6.1841e-02,  2.9331e-01, -8.4368e-02,
          3.1193e-02,  9.6959e-02,  4.0992e-02,  1.2456e-02, -3.8596e-02,
         -2.2192e-02, -7.7083e-02, -6.9147e-03, -8.0529e-02,  3.6968e-02,
          1.0696e-01,  1.8411e-01,  1.8261e-01,  7.1859e-02, -8.9754e-02,
         -8.5019e-02,  1.1280e-02, -4.7846e-03,  3.4769e-02,  9.7249e-03,
         -8.3174e-02,  1.6106e-02, -6.5594e-02, -6.1927e-02,  1.1873e-01,
          3.9195e-02,  7.4259e-02, -1.0293e-01,  9.2074e-02,  2.6935e-01,
          5.2872e-02,  1.0273e-01, -1.0737e-02, -3.5490e-02, -1.1011e-01,
         -1.9952e-01, -1.4486e-01, -1.6049e-01, -3.7102e-02,  9.8002e-03,
         -2.3262e-02,  5.3457e-02,  3.4258e-01, -1.0981e-01,  2.9013e-01,
          3.1996e-01, -6.5769e-02, -6.6192e-03, -9.2489e-02, -1.8430e-01,
          1.0702e-01]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
88000 特征值优化 tensor(0.8089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.3751e-01, -1.6950e-01,  6.2221e-01, -1.0027e+00,  1.2760e+00,
          1.8885e+00,  9.6174e-01, -1.5025e+00,  9.2842e-01, -8.8270e-03,
         -5.0908e-01,  3.1824e-01,  2.4669e-01,  9.0723e-01, -8.8067e-02,
         -6.1819e-01, -3.8223e-01,  4.9517e-01, -1.3704e-01,  1.9439e-01,
         -9.3715e-01,  3.1619e-01,  3.2751e-01, -7.9644e-01, -8.8025e-01,
         -7.5580e-01,  5.2616e-01, -5.5182e-01,  7.8233e-01,  4.1699e-01,
          7.5809e-02, -3.0806e-01,  2.3761e-01,  2.6451e-01,  4.2626e-02,
          2.5554e-02, -5.3565e-02,  2.8090e-01, -5.5590e-02,  1.4886e-01,
         -3.7352e-01,  1.4127e-01, -8.3129e-02,  5.7011e-01, -5.7336e-01,
         -4.0617e-01,  3.1114e-02,  1.9315e-01,  1.6175e-01, -2.5298e-02,
          4.5169e-01, -6.7724e-01,  8.9133e-02, -8.3748e-02, -4.0861e-01,
         -7.2840e-01,  7.4305e-02, -3.8225e-01,  2.5951e-02, -4.6674e-01,
          5.7620e-01,  1.2854e-01,  1.3156e-01,  1.7186e-01,  1.8096e-02,
          2.7419e-01, -1.9560e-01,  1.5339e-01,  1.3445e-01,  2.1098e-01,
          1.1328e-01,  1.1683e-01, -7.3391e-02,  2.7736e-01,  1.3688e-01,
          9.9328e-02, -3.1776e-01, -2.2280e-01, -1.7940e-01,  1.2201e-01,
         -6.0009e-02, -1.3473e-01,  2.3967e-02, -1.7002e-01,  2.3380e-02,
         -9.9209e-02,  2.0255e-01, -2.9527e-01,  1.2497e-01,  1.8352e-02,
          1.0357e-02,  1.7737e-01,  5.3831e-02, -1.6178e-02,  1.9109e-01,
         -4.6514e-01,  8.4561e-01,  1.0013e+00, -4.1960e-02, -1.2848e-01,
         -4.6814e-03,  5.1519e-01, -7.9323e-01,  3.6596e-01,  2.7267e-01,
         -8.9922e-03,  2.6418e-01, -7.1298e-02,  2.9156e-01, -7.9864e-02,
          2.3773e-02,  1.0577e-01,  3.5704e-02,  1.4388e-02, -3.3960e-02,
         -2.4595e-02, -6.5215e-02,  1.7405e-03, -8.7324e-02,  4.0014e-02,
          1.1809e-01,  1.7282e-01,  1.8505e-01,  8.2072e-02, -9.1776e-02,
         -1.0117e-01,  2.4674e-03, -1.2433e-02,  2.9872e-02, -1.1776e-02,
         -8.2056e-02,  1.9878e-02, -6.9234e-02, -6.2314e-02,  1.1098e-01,
          4.4270e-02,  8.1513e-02, -1.0672e-01,  9.2929e-02,  2.7683e-01,
          4.1907e-02,  8.3139e-02, -3.9062e-02, -5.6984e-02, -7.2535e-02,
         -2.0866e-01, -1.4613e-01, -1.5231e-01, -3.4341e-02,  1.5536e-02,
         -1.3226e-02,  4.9904e-02,  3.1807e-01, -1.2231e-01,  2.7726e-01,
          3.2473e-01, -7.6683e-02, -8.6397e-03, -9.8567e-02, -1.9152e-01,
          9.8282e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
89000 特征值优化 tensor(0.8099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6923, -0.1908,  0.6241, -1.0030,  1.2962,  1.9163,  1.0066, -1.5077,
          0.9153,  0.0150, -0.5245,  0.3393,  0.2115,  0.9029, -0.0947, -0.6281,
         -0.3764,  0.4815, -0.1408,  0.2095, -0.9352,  0.3131,  0.3213, -0.7859,
         -0.8763, -0.7510,  0.5146, -0.5510,  0.7927,  0.3963,  0.0843, -0.2981,
          0.2459,  0.2616,  0.0392,  0.0244, -0.0564,  0.2672, -0.0573,  0.1415,
         -0.3812,  0.1419, -0.0797,  0.5654, -0.5488, -0.4091,  0.0199,  0.1921,
          0.1720, -0.0183,  0.4515, -0.6606,  0.0925, -0.0901, -0.4234, -0.7202,
          0.0760, -0.3746,  0.0177, -0.4669,  0.5612,  0.1462,  0.1179,  0.1705,
          0.0143,  0.2834, -0.1799,  0.1495,  0.1355,  0.2038,  0.1204,  0.1210,
         -0.0674,  0.2786,  0.1300,  0.0986, -0.3129, -0.2316, -0.1931,  0.1222,
         -0.0452, -0.1241,  0.0321, -0.1499,  0.0346, -0.0908,  0.2031, -0.3126,
          0.1458,  0.0051,  0.0099,  0.1824,  0.0687, -0.0110,  0.1913, -0.4676,
          0.8560,  0.9989, -0.0098, -0.0872, -0.0192,  0.5150, -0.7922,  0.3598,
          0.2567, -0.0245,  0.2749, -0.0662,  0.2967, -0.0835,  0.0115,  0.1026,
          0.0442,  0.0287, -0.0323, -0.0293, -0.0676,  0.0123, -0.0901,  0.0264,
          0.1276,  0.1849,  0.1916,  0.0872, -0.0848, -0.1070, -0.0024, -0.0208,
          0.0205, -0.0220, -0.0848,  0.0187, -0.0640, -0.0534,  0.1116,  0.0440,
          0.0767, -0.1088,  0.1288,  0.2749,  0.0364,  0.0931, -0.0455, -0.0501,
         -0.0705, -0.2184, -0.1347, -0.1483, -0.0288,  0.0228, -0.0058,  0.0490,
          0.3347, -0.1228,  0.2745,  0.3249, -0.0838, -0.0058, -0.0923, -0.1792,
          0.1040]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
90000 特征值优化 tensor(0.8056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.0506e-01, -1.9762e-01,  6.3474e-01, -1.0048e+00,  1.3479e+00,
          1.9317e+00,  1.0595e+00, -1.5223e+00,  9.1930e-01,  3.9337e-02,
         -5.2800e-01,  3.6441e-01,  2.0063e-01,  8.8479e-01, -9.1268e-02,
         -6.4329e-01, -3.8505e-01,  4.7316e-01, -1.4235e-01,  2.2742e-01,
         -9.1214e-01,  3.2959e-01,  3.2839e-01, -7.6408e-01, -8.5405e-01,
         -7.5540e-01,  4.6900e-01, -5.4357e-01,  7.8019e-01,  3.7582e-01,
          1.0142e-01, -3.0054e-01,  2.4387e-01,  2.3963e-01,  3.8355e-02,
          1.0761e-02, -4.9852e-02,  2.3268e-01, -4.5634e-02,  1.3783e-01,
         -3.8289e-01,  1.4195e-01, -8.2979e-02,  5.8050e-01, -5.2994e-01,
         -3.9400e-01,  2.0611e-02,  2.0522e-01,  1.7874e-01, -2.5551e-02,
          4.5567e-01, -6.5598e-01,  9.2198e-02, -8.4750e-02, -4.1737e-01,
         -7.2642e-01,  7.3295e-02, -3.9712e-01,  2.1682e-02, -4.5870e-01,
          5.7016e-01,  1.4840e-01,  9.8950e-02,  1.7334e-01,  2.0514e-02,
          2.7412e-01, -1.7944e-01,  1.3725e-01,  1.3141e-01,  2.0878e-01,
          1.1323e-01,  1.1404e-01, -6.8111e-02,  2.6996e-01,  1.2264e-01,
          9.0911e-02, -3.3164e-01, -2.3695e-01, -1.8249e-01,  1.2561e-01,
         -4.1944e-02, -1.2281e-01,  4.0283e-02, -1.5388e-01,  4.9432e-02,
         -9.1716e-02,  2.2749e-01, -3.1015e-01,  1.4938e-01,  2.8107e-02,
          1.4078e-03,  1.7585e-01,  8.6696e-02, -1.6704e-02,  1.8750e-01,
         -4.6595e-01,  8.6724e-01,  9.7618e-01, -7.5836e-03, -7.0901e-02,
         -2.6030e-02,  5.1498e-01, -7.9881e-01,  3.7528e-01,  2.6232e-01,
         -1.3866e-02,  2.6973e-01, -6.1193e-02,  2.8478e-01, -7.9543e-02,
          2.6820e-03,  1.1088e-01,  4.8309e-02,  1.8500e-02, -1.7199e-02,
         -2.9691e-02, -7.7278e-02,  3.1991e-03, -8.1622e-02,  1.7414e-02,
          1.3395e-01,  1.7932e-01,  1.8255e-01,  9.0414e-02, -9.1557e-02,
         -1.1287e-01, -2.1164e-03, -1.1493e-02,  2.5739e-02, -2.3795e-02,
         -8.2616e-02,  2.0369e-02, -6.1372e-02, -4.3087e-02,  1.1464e-01,
          5.7343e-02,  8.3687e-02, -1.1574e-01,  1.3869e-01,  2.8439e-01,
          4.8723e-02,  9.2278e-02, -7.5815e-02, -5.3034e-02, -4.1986e-02,
         -2.1956e-01, -1.3553e-01, -1.3908e-01, -2.5304e-02,  3.0792e-02,
         -5.5714e-03,  5.0359e-02,  3.3015e-01, -1.3351e-01,  2.9875e-01,
          3.3224e-01, -6.8370e-02,  4.8340e-03, -7.7531e-02, -1.7722e-01,
          1.3586e-01]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
91000 特征值优化 tensor(0.7983, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.5487e-01, -2.1160e-01,  6.4123e-01, -1.0041e+00,  1.3768e+00,
          1.9493e+00,  1.1150e+00, -1.5503e+00,  9.1262e-01,  6.4402e-02,
         -5.2701e-01,  3.7752e-01,  1.8025e-01,  8.8480e-01, -9.3867e-02,
         -6.7710e-01, -4.0096e-01,  4.6344e-01, -1.3549e-01,  2.4378e-01,
         -9.0059e-01,  3.2646e-01,  3.2958e-01, -7.5008e-01, -8.5980e-01,
         -7.5666e-01,  4.6350e-01, -5.5714e-01,  7.8762e-01,  3.5138e-01,
          1.1153e-01, -2.9101e-01,  2.4971e-01,  2.2624e-01,  3.5908e-02,
          2.0438e-03, -5.4232e-02,  2.2377e-01, -4.6529e-02,  1.3396e-01,
         -3.8292e-01,  1.4110e-01, -8.1834e-02,  5.7575e-01, -5.0915e-01,
         -3.9813e-01,  2.2706e-05,  2.1414e-01,  1.7972e-01, -1.6745e-02,
          4.5855e-01, -6.3764e-01,  7.4798e-02, -9.1653e-02, -4.2056e-01,
         -7.0914e-01,  9.1961e-02, -3.9139e-01,  1.7305e-02, -4.5023e-01,
          5.6894e-01,  1.3988e-01,  9.3343e-02,  1.8123e-01,  2.1175e-02,
          2.7436e-01, -1.7203e-01,  1.2666e-01,  1.3635e-01,  2.0660e-01,
          1.1448e-01,  1.0799e-01, -6.5519e-02,  2.7442e-01,  1.0760e-01,
          8.0719e-02, -3.3455e-01, -2.6945e-01, -1.7348e-01,  1.2566e-01,
         -3.3525e-02, -1.1587e-01,  4.1181e-02, -1.4234e-01,  5.4529e-02,
         -7.5251e-02,  2.2556e-01, -3.2251e-01,  1.5940e-01, -7.1869e-03,
          1.5878e-03,  1.7553e-01,  8.0231e-02, -1.4170e-02,  1.8395e-01,
         -4.6764e-01,  8.8012e-01,  9.8192e-01, -8.9245e-03, -4.5546e-02,
         -3.0731e-02,  5.2473e-01, -7.9410e-01,  3.7918e-01,  2.5649e-01,
         -1.5709e-02,  2.7402e-01, -6.5892e-02,  2.7828e-01, -7.9757e-02,
         -3.4169e-03,  1.0355e-01,  4.3839e-02,  2.9787e-02, -1.1600e-02,
         -3.9115e-02, -9.0233e-02,  1.2807e-02, -8.5223e-02,  8.9130e-03,
          1.3834e-01,  1.6680e-01,  1.9033e-01,  9.8351e-02, -9.3290e-02,
         -1.2065e-01, -6.2815e-03, -2.2937e-02,  2.0670e-02, -2.4152e-02,
         -6.8703e-02,  1.4446e-02, -5.8115e-02, -3.6852e-02,  1.1784e-01,
          4.6494e-02,  6.9946e-02, -9.7227e-02,  1.5699e-01,  2.8458e-01,
          3.0283e-02,  9.0013e-02, -8.8067e-02, -6.4020e-02, -1.8193e-02,
         -2.1885e-01, -1.3609e-01, -1.2878e-01, -1.9340e-02,  3.9473e-02,
         -3.5761e-03,  4.6624e-02,  3.2850e-01, -1.2830e-01,  2.9878e-01,
          3.3832e-01, -6.6890e-02,  1.8789e-02, -5.8288e-02, -1.6891e-01,
          1.4078e-01]], device='cuda:0') tensor(0.2151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
92000 特征值优化 tensor(0.8473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8913e-01, -2.1871e-01,  6.3995e-01, -1.0084e+00,  1.4297e+00,
          1.9817e+00,  1.1536e+00, -1.5752e+00,  9.0815e-01,  8.7928e-02,
         -5.1151e-01,  3.9414e-01,  1.9421e-01,  8.5429e-01, -1.1944e-01,
         -6.5626e-01, -3.9455e-01,  4.5814e-01, -1.3411e-01,  2.2823e-01,
         -8.6712e-01,  3.3304e-01,  3.2720e-01, -7.4029e-01, -8.5649e-01,
         -7.8739e-01,  4.7984e-01, -5.4245e-01,  8.1552e-01,  3.4508e-01,
          1.0734e-01, -2.8100e-01,  2.4170e-01,  2.4382e-01,  4.4017e-02,
         -1.8909e-03, -4.5668e-02,  2.0826e-01, -6.3229e-02,  1.5183e-01,
         -3.6715e-01,  1.4168e-01, -8.4651e-02,  5.7563e-01, -4.9694e-01,
         -3.8967e-01, -8.0375e-03,  2.0720e-01,  1.7446e-01, -1.6145e-02,
          4.4773e-01, -6.0609e-01,  5.6046e-02, -9.7553e-02, -4.3102e-01,
         -7.1006e-01,  5.9338e-02, -3.8072e-01,  2.7784e-03, -4.3960e-01,
          5.6458e-01,  1.4028e-01,  9.3469e-02,  1.7607e-01,  8.2173e-03,
          2.8219e-01, -1.7081e-01,  1.2896e-01,  1.1772e-01,  2.0181e-01,
          1.2593e-01,  1.0887e-01, -6.2444e-02,  2.7389e-01,  1.2706e-01,
          7.2444e-02, -3.2345e-01, -2.7401e-01, -2.0413e-01,  1.3308e-01,
         -1.6236e-02, -1.0667e-01,  3.9585e-02, -1.2477e-01,  1.6841e-02,
         -8.5843e-02,  2.1754e-01, -3.2514e-01,  1.7894e-01,  4.8225e-03,
          5.1087e-03,  1.5494e-01,  6.2447e-02, -6.4386e-04,  1.8869e-01,
         -4.6714e-01,  8.7758e-01,  9.8068e-01,  2.1949e-02, -1.7939e-02,
         -8.4634e-03,  5.1714e-01, -8.0278e-01,  3.8190e-01,  2.5707e-01,
         -1.7619e-02,  2.8058e-01, -6.0207e-02,  2.9342e-01, -7.3881e-02,
         -1.2056e-02,  9.7962e-02,  2.4959e-02,  2.6407e-02, -1.9655e-02,
         -3.9957e-02, -6.8759e-02,  1.1239e-02, -1.0369e-01, -8.0479e-03,
          1.5262e-01,  1.9719e-01,  1.8808e-01,  1.0845e-01, -9.0039e-02,
         -1.1445e-01, -1.7148e-02, -2.4286e-02,  1.7253e-02, -1.0510e-02,
         -6.9727e-02,  8.4828e-03, -6.3199e-02, -3.4121e-02,  1.1187e-01,
          4.5127e-02,  9.4366e-02, -9.4114e-02,  1.6223e-01,  2.5454e-01,
          1.7367e-02,  1.2090e-01, -6.5975e-02, -6.1602e-02, -2.6559e-02,
         -2.2321e-01, -1.3237e-01, -1.2845e-01, -2.4714e-02,  2.5037e-02,
         -9.6822e-03,  4.7658e-02,  3.2446e-01, -1.4057e-01,  2.8182e-01,
          3.3407e-01, -7.1963e-02,  1.5203e-03, -7.3960e-02, -1.8090e-01,
          1.2374e-01]], device='cuda:0') tensor(0.2147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
93000 特征值优化 tensor(0.8054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5175e-01, -2.4222e-01,  6.3190e-01, -1.0050e+00,  1.4190e+00,
          1.9918e+00,  1.2309e+00, -1.6096e+00,  9.2574e-01,  8.5259e-02,
         -5.1434e-01,  4.0290e-01,  1.8206e-01,  8.6790e-01, -1.0289e-01,
         -6.8247e-01, -4.3839e-01,  4.4517e-01, -1.3530e-01,  2.3966e-01,
         -8.5988e-01,  3.3064e-01,  3.3316e-01, -7.3619e-01, -8.4374e-01,
         -7.9432e-01,  4.5159e-01, -5.6082e-01,  8.2138e-01,  3.2144e-01,
          1.0777e-01, -2.7214e-01,  2.4839e-01,  2.1558e-01,  3.4615e-02,
         -1.5012e-02, -4.6531e-02,  2.0250e-01, -4.5624e-02,  1.3285e-01,
         -3.6186e-01,  1.4164e-01, -8.4571e-02,  5.7126e-01, -4.8709e-01,
         -3.9480e-01, -1.9462e-02,  2.1540e-01,  1.8737e-01, -8.3145e-03,
          4.5457e-01, -5.9641e-01,  5.0006e-02, -1.0530e-01, -4.3256e-01,
         -7.0473e-01,  7.6042e-02, -3.8907e-01,  1.6379e-02, -4.2608e-01,
          5.6994e-01,  1.5730e-01,  8.4808e-02,  1.9057e-01,  1.6703e-02,
          2.7652e-01, -1.6886e-01,  1.1658e-01,  1.2145e-01,  1.9603e-01,
          1.2327e-01,  9.9912e-02, -6.1272e-02,  2.6815e-01,  1.1349e-01,
          6.3131e-02, -3.3953e-01, -2.8184e-01, -1.8828e-01,  1.2469e-01,
         -2.4719e-02, -1.1372e-01,  3.7051e-02, -1.2350e-01,  4.7673e-02,
         -7.0976e-02,  2.2916e-01, -3.1899e-01,  1.5626e-01, -1.2538e-03,
          3.2530e-03,  1.4568e-01,  7.8750e-02, -1.0659e-02,  1.9269e-01,
         -4.6602e-01,  8.9206e-01,  9.4117e-01,  7.2793e-03, -1.9767e-02,
         -4.9424e-03,  5.1674e-01, -7.9219e-01,  3.9182e-01,  2.5598e-01,
         -3.1817e-02,  2.6212e-01, -6.6778e-02,  2.9948e-01, -7.5098e-02,
         -1.1189e-02,  1.0053e-01,  2.6297e-02,  3.5428e-02, -7.3858e-03,
         -3.6708e-02, -7.9436e-02,  1.9891e-02, -8.7052e-02, -1.4400e-05,
          1.5470e-01,  1.8028e-01,  1.9046e-01,  1.0705e-01, -8.6103e-02,
         -1.2115e-01, -2.5738e-02, -2.3306e-02,  9.3485e-03, -9.9585e-03,
         -6.7967e-02,  6.6191e-03, -5.8610e-02, -2.5969e-02,  1.1466e-01,
          4.1049e-02,  7.8768e-02, -8.8774e-02,  1.7159e-01,  2.6651e-01,
          3.7775e-02,  1.0403e-01, -9.7864e-02, -6.6954e-02,  1.8261e-02,
         -2.2034e-01, -1.1713e-01, -1.2019e-01, -1.2042e-02,  3.5679e-02,
         -1.9340e-02,  4.9729e-02,  3.2485e-01, -1.2274e-01,  2.9820e-01,
          3.4070e-01, -7.1724e-02,  1.3415e-02, -6.2090e-02, -1.6778e-01,
          1.3664e-01]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
94000 特征值优化 tensor(0.8229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4070, -0.2697,  0.6239, -1.0087,  1.4559,  2.0350,  1.2705, -1.6538,
          0.9274,  0.0969, -0.4962,  0.4040,  0.1778,  0.8403, -0.1105, -0.6797,
         -0.4378,  0.4375, -0.1530,  0.2538, -0.8314,  0.3119,  0.3133, -0.7148,
         -0.8270, -0.8068,  0.4712, -0.5475,  0.8449,  0.3215,  0.1093, -0.2613,
          0.2478,  0.2253,  0.0385, -0.0081, -0.0500,  0.2033, -0.0587,  0.1395,
         -0.3443,  0.1423, -0.0831,  0.5700, -0.4792, -0.3842, -0.0253,  0.2085,
          0.1818, -0.0144,  0.4374, -0.5643,  0.0301, -0.1110, -0.4357, -0.7105,
          0.0594, -0.3721,  0.0103, -0.4210,  0.5687,  0.1421,  0.0759,  0.1850,
          0.0106,  0.2807, -0.1706,  0.1191,  0.1051,  0.1934,  0.1305,  0.0910,
         -0.0601,  0.2729,  0.1350,  0.0758, -0.3231, -0.2984, -0.2057,  0.1191,
         -0.0143, -0.1101,  0.0384, -0.1103,  0.0240, -0.0804,  0.2225, -0.3145,
          0.1552,  0.0024,  0.0064,  0.1269,  0.0879, -0.0060,  0.1872, -0.4623,
          0.8897,  0.9439,  0.0045, -0.0029,  0.0194,  0.5019, -0.7832,  0.4013,
          0.2439, -0.0150,  0.2624, -0.0502,  0.2993, -0.0852, -0.0146,  0.0952,
          0.0108,  0.0297, -0.0240, -0.0401, -0.0723,  0.0137, -0.0960, -0.0087,
          0.1684,  0.1968,  0.1935,  0.1038, -0.0861, -0.1255, -0.0257, -0.0182,
          0.0061,  0.0074, -0.0695, -0.0090, -0.0593, -0.0110,  0.1177,  0.0455,
          0.0880, -0.0855,  0.1901,  0.2547,  0.0385,  0.1078, -0.0896, -0.0588,
          0.0055, -0.2335, -0.1039, -0.1122, -0.0026,  0.0316, -0.0095,  0.0529,
          0.3138, -0.1420,  0.2833,  0.3458, -0.0651,  0.0056, -0.0702, -0.1702,
          0.1299]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
95000 特征值优化 tensor(0.8026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.7618e-01, -2.6445e-01,  6.3071e-01, -1.0052e+00,  1.4434e+00,
          2.0386e+00,  1.3606e+00, -1.6788e+00,  9.3910e-01,  9.4717e-02,
         -5.0548e-01,  4.1427e-01,  1.9273e-01,  8.5684e-01, -1.0025e-01,
         -6.9712e-01, -4.7415e-01,  4.3009e-01, -1.4542e-01,  2.7331e-01,
         -8.2091e-01,  3.3813e-01,  3.0716e-01, -7.2548e-01, -8.1454e-01,
         -8.2576e-01,  4.5320e-01, -5.3608e-01,  8.3064e-01,  2.9998e-01,
          1.0621e-01, -2.5918e-01,  2.4338e-01,  2.0871e-01,  4.2108e-02,
         -2.5467e-02, -3.8355e-02,  1.8556e-01, -4.2052e-02,  1.2729e-01,
         -3.4615e-01,  1.4098e-01, -8.2842e-02,  5.7599e-01, -4.6264e-01,
         -3.7186e-01, -2.4999e-02,  2.1547e-01,  1.9991e-01, -2.8341e-02,
          4.4323e-01, -5.6267e-01,  2.7114e-02, -1.1540e-01, -4.3060e-01,
         -7.1783e-01,  7.1966e-02, -3.8798e-01,  2.3973e-02, -4.0575e-01,
          5.7525e-01,  1.7009e-01,  7.4879e-02,  1.8995e-01,  9.6951e-03,
          2.7243e-01, -1.7766e-01,  1.1030e-01,  1.1100e-01,  1.8341e-01,
          1.2810e-01,  7.6508e-02, -5.5112e-02,  2.6933e-01,  1.2246e-01,
          8.0412e-02, -3.2850e-01, -2.9557e-01, -1.9447e-01,  1.1477e-01,
         -2.4562e-02, -1.1309e-01,  3.4143e-02, -1.0863e-01,  5.1085e-02,
         -8.8519e-02,  2.3095e-01, -3.1567e-01,  1.5764e-01,  7.7737e-03,
          6.6809e-03,  1.1617e-01,  9.8122e-02, -1.0123e-02,  1.8740e-01,
         -4.6550e-01,  9.0009e-01,  9.1546e-01,  6.1264e-03, -1.1337e-03,
          2.3504e-02,  4.9344e-01, -7.6885e-01,  4.0859e-01,  2.4373e-01,
         -3.3550e-02,  2.5185e-01, -5.5016e-02,  2.9335e-01, -8.5983e-02,
         -1.4478e-02,  9.8811e-02,  6.4044e-03,  2.9546e-02,  3.4978e-03,
         -3.3680e-02, -6.4431e-02,  1.0046e-02, -7.5867e-02, -2.1873e-03,
          1.6822e-01,  1.8278e-01,  1.9727e-01,  9.9804e-02, -8.5069e-02,
         -1.2294e-01, -3.1368e-02, -1.1944e-02,  1.1774e-03,  1.1838e-02,
         -7.3223e-02, -9.8138e-03, -6.3043e-02, -2.8047e-03,  1.1457e-01,
          5.1920e-02,  9.2101e-02, -7.5856e-02,  2.0033e-01,  2.7245e-01,
          5.7714e-02,  9.4016e-02, -1.1029e-01, -6.0302e-02,  3.1308e-02,
         -2.3202e-01, -1.0850e-01, -1.0691e-01,  1.2044e-03,  3.6406e-02,
         -6.3833e-03,  6.0394e-02,  3.1353e-01, -1.4558e-01,  2.9731e-01,
          3.4617e-01, -5.6912e-02,  1.1244e-02, -6.2315e-02, -1.7442e-01,
          1.3987e-01]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
96000 特征值优化 tensor(0.8103, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4421e-01, -2.9117e-01,  6.2732e-01, -1.0038e+00,  1.4672e+00,
          2.0522e+00,  1.3979e+00, -1.6941e+00,  9.5116e-01,  9.9610e-02,
         -4.9541e-01,  4.2536e-01,  1.8346e-01,  8.6396e-01, -9.2419e-02,
         -6.9113e-01, -4.8687e-01,  4.3546e-01, -1.4442e-01,  2.6378e-01,
         -8.1432e-01,  3.3316e-01,  3.0115e-01, -7.2344e-01, -8.0904e-01,
         -8.3514e-01,  4.4905e-01, -5.5361e-01,  8.4080e-01,  2.9387e-01,
          1.0492e-01, -2.4119e-01,  2.6002e-01,  2.0919e-01,  4.2622e-02,
         -2.9322e-02, -4.1589e-02,  1.9641e-01, -4.7365e-02,  1.3372e-01,
         -3.3656e-01,  1.4130e-01, -8.3987e-02,  5.6915e-01, -4.5704e-01,
         -3.7762e-01, -2.9927e-02,  2.1920e-01,  2.0649e-01, -2.1846e-02,
          4.3585e-01, -5.4955e-01,  6.7069e-03, -1.2343e-01, -4.3805e-01,
         -7.0671e-01,  7.4761e-02, -3.7611e-01,  1.7517e-02, -3.9472e-01,
          5.7680e-01,  1.5955e-01,  7.1955e-02,  1.8816e-01,  5.2232e-03,
          2.6705e-01, -1.7856e-01,  1.0213e-01,  1.0872e-01,  1.8034e-01,
          1.3293e-01,  6.3234e-02, -4.5437e-02,  2.6742e-01,  1.2637e-01,
          7.1785e-02, -3.3009e-01, -3.0134e-01, -2.0176e-01,  1.1112e-01,
         -2.1132e-02, -1.0808e-01,  3.0652e-02, -1.0273e-01,  3.8900e-02,
         -6.9262e-02,  2.3212e-01, -3.2115e-01,  1.5816e-01, -6.5853e-03,
          9.0704e-03,  1.0032e-01,  8.8508e-02,  4.9740e-04,  1.8897e-01,
         -4.6574e-01,  8.9931e-01,  9.1070e-01,  6.8021e-03,  1.3831e-03,
          3.5300e-02,  4.9668e-01, -7.5628e-01,  4.1179e-01,  2.4068e-01,
         -3.5885e-02,  2.4263e-01, -5.1302e-02,  2.9649e-01, -9.1072e-02,
         -1.5978e-02,  9.2707e-02,  6.6719e-03,  3.1925e-02, -1.2298e-02,
         -4.0131e-02, -6.0812e-02,  1.6467e-02, -7.5033e-02, -7.1343e-04,
          1.7231e-01,  1.9124e-01,  1.9819e-01,  1.0468e-01, -7.4395e-02,
         -1.1878e-01, -3.3129e-02, -1.5276e-02, -3.4320e-03,  1.9193e-02,
         -6.1608e-02, -1.8578e-02, -5.6717e-02, -6.6381e-04,  1.1382e-01,
          4.0668e-02,  7.9060e-02, -8.0022e-02,  1.9256e-01,  2.5252e-01,
          4.0781e-02,  1.0719e-01, -9.5316e-02, -5.6329e-02,  2.9536e-02,
         -2.3309e-01, -9.5156e-02, -1.0281e-01,  5.3150e-04,  3.6759e-02,
         -4.9656e-03,  6.2863e-02,  3.1644e-01, -1.3306e-01,  2.8873e-01,
          3.5352e-01, -6.5129e-02,  1.4500e-02, -5.9760e-02, -1.6083e-01,
          1.3064e-01]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
97000 特征值优化 tensor(0.8116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9634e-01, -3.0668e-01,  6.1868e-01, -1.0046e+00,  1.4616e+00,
          2.0749e+00,  1.4187e+00, -1.7122e+00,  9.7473e-01,  9.6417e-02,
         -4.8880e-01,  4.1729e-01,  1.7117e-01,  8.4827e-01, -9.5923e-02,
         -6.9462e-01, -4.9235e-01,  4.2578e-01, -1.3681e-01,  2.6063e-01,
         -7.9766e-01,  3.3278e-01,  2.9983e-01, -7.1675e-01, -7.8700e-01,
         -8.3706e-01,  4.5787e-01, -5.5119e-01,  8.4924e-01,  2.8981e-01,
          1.0070e-01, -2.3905e-01,  2.5035e-01,  2.0548e-01,  4.4803e-02,
         -3.5832e-02, -3.9962e-02,  1.9027e-01, -4.2082e-02,  1.2668e-01,
         -3.3140e-01,  1.4252e-01, -8.1165e-02,  5.6835e-01, -4.5193e-01,
         -3.8052e-01, -4.0314e-02,  2.1737e-01,  2.0318e-01, -2.2008e-02,
          4.3136e-01, -5.3937e-01, -1.1510e-03, -1.2117e-01, -4.4440e-01,
         -7.0650e-01,  7.2639e-02, -3.7301e-01,  1.6866e-02, -3.8399e-01,
          5.8431e-01,  1.6465e-01,  8.0746e-02,  1.8706e-01,  4.3743e-03,
          2.6863e-01, -1.7791e-01,  9.7575e-02,  1.0560e-01,  1.7389e-01,
          1.3545e-01,  5.9371e-02, -4.4507e-02,  2.6945e-01,  1.4138e-01,
          7.0271e-02, -3.2688e-01, -3.0180e-01, -2.0883e-01,  1.1081e-01,
         -1.7922e-02, -1.0963e-01,  3.4065e-02, -1.0197e-01,  2.4104e-02,
         -8.2891e-02,  2.3215e-01, -3.1136e-01,  1.5869e-01, -1.1841e-02,
          1.1668e-02,  8.3416e-02,  9.2201e-02,  7.9606e-03,  1.8598e-01,
         -4.6027e-01,  8.9769e-01,  9.0456e-01,  1.9061e-03, -3.1417e-03,
          3.8579e-02,  4.8782e-01, -7.5137e-01,  4.1992e-01,  2.3071e-01,
         -3.6274e-02,  2.2885e-01, -4.4934e-02,  2.9256e-01, -9.1562e-02,
         -2.0261e-02,  9.3335e-02,  6.5174e-03,  3.2601e-02, -1.0343e-02,
         -3.5368e-02, -6.0849e-02,  1.5031e-02, -7.5720e-02, -3.1380e-03,
          1.7353e-01,  1.9287e-01,  2.0507e-01,  1.0203e-01, -7.7914e-02,
         -1.2241e-01, -3.4900e-02, -1.5828e-02, -4.3955e-03,  2.2432e-02,
         -6.1507e-02, -2.1036e-02, -5.7412e-02,  3.0115e-03,  1.1666e-01,
          4.0342e-02,  8.3244e-02, -8.8545e-02,  1.9529e-01,  2.5116e-01,
          4.7698e-02,  1.0289e-01, -9.0560e-02, -5.6038e-02,  3.3511e-02,
         -2.3931e-01, -9.0290e-02, -1.0361e-01,  1.5680e-02,  4.4784e-02,
          4.1669e-03,  6.7104e-02,  3.1114e-01, -1.3656e-01,  2.8989e-01,
          3.5761e-01, -5.9327e-02,  1.9535e-02, -5.3743e-02, -1.6727e-01,
          1.3271e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
98000 特征值优化 tensor(0.8018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9086e-01, -3.3340e-01,  6.1293e-01, -1.0016e+00,  1.4673e+00,
          2.0717e+00,  1.4436e+00, -1.7606e+00,  9.8860e-01,  9.4474e-02,
         -4.9342e-01,  3.9093e-01,  1.7998e-01,  8.4706e-01, -1.0655e-01,
         -7.0146e-01, -5.0255e-01,  4.2334e-01, -1.2247e-01,  2.6060e-01,
         -7.9208e-01,  3.3313e-01,  3.0127e-01, -7.1340e-01, -7.8716e-01,
         -8.4251e-01,  4.7523e-01, -5.4180e-01,  8.7497e-01,  2.8538e-01,
          1.0217e-01, -2.3895e-01,  2.4892e-01,  2.1638e-01,  4.5589e-02,
         -5.1884e-02, -4.2930e-02,  1.9772e-01, -3.5421e-02,  1.1181e-01,
         -3.1890e-01,  1.4113e-01, -8.0677e-02,  5.6976e-01, -4.4396e-01,
         -3.8820e-01, -3.2410e-02,  2.0439e-01,  2.1233e-01, -3.3191e-02,
          4.3613e-01, -5.3691e-01, -9.1468e-03, -1.2278e-01, -4.5254e-01,
         -7.1463e-01,  6.5399e-02, -3.6473e-01,  2.7221e-02, -3.8046e-01,
          5.8327e-01,  1.5882e-01,  8.0942e-02,  1.8226e-01, -1.1740e-03,
          2.5990e-01, -1.7346e-01,  9.2160e-02,  1.1509e-01,  1.7145e-01,
          1.3703e-01,  4.8261e-02, -3.6933e-02,  2.6724e-01,  1.4577e-01,
          7.8817e-02, -3.3044e-01, -3.1433e-01, -2.0534e-01,  1.0883e-01,
         -2.8156e-02, -1.0988e-01,  2.9529e-02, -1.1045e-01,  7.8493e-03,
         -9.1970e-02,  2.1196e-01, -3.1449e-01,  1.3952e-01,  1.7975e-04,
          1.8932e-02,  7.3005e-02,  9.7256e-02, -4.3090e-03,  1.8814e-01,
         -4.6343e-01,  9.0388e-01,  8.9689e-01, -8.7622e-03, -8.6567e-03,
          5.2252e-02,  4.8623e-01, -7.4106e-01,  4.2512e-01,  2.4491e-01,
         -3.2393e-02,  2.2535e-01, -5.2918e-02,  3.0821e-01, -8.1268e-02,
         -2.1583e-02,  1.0205e-01, -9.0139e-03,  3.1440e-02,  8.7622e-03,
         -2.6616e-02, -4.0025e-02,  9.3691e-03, -8.6762e-02, -2.5409e-03,
          1.8130e-01,  1.8619e-01,  2.0379e-01,  1.0823e-01, -7.5956e-02,
         -1.1330e-01, -2.8871e-02, -1.1903e-02, -4.2441e-03,  2.1006e-02,
         -6.6969e-02, -2.0982e-02, -5.8899e-02,  1.0304e-02,  1.1186e-01,
          3.1898e-02,  8.8553e-02, -7.0131e-02,  2.1139e-01,  2.4550e-01,
          4.9673e-02,  1.0714e-01, -1.0281e-01, -5.9687e-02,  4.2230e-02,
         -2.3951e-01, -1.0896e-01, -9.4104e-02,  1.3237e-02,  4.6690e-02,
         -1.5710e-03,  6.2075e-02,  2.8765e-01, -1.5244e-01,  2.7242e-01,
          3.5944e-01, -6.2319e-02,  2.0855e-02, -6.5576e-02, -1.8184e-01,
          1.1456e-01]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
99000 特征值优化 tensor(0.8169, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4387e-01, -3.3121e-01,  6.0344e-01, -1.0101e+00,  1.4925e+00,
          2.0733e+00,  1.4753e+00, -1.7559e+00,  1.0092e+00,  1.0652e-01,
         -4.8746e-01,  4.0323e-01,  1.7060e-01,  8.5016e-01, -9.0822e-02,
         -6.8986e-01, -5.0498e-01,  4.2073e-01, -1.2846e-01,  2.5513e-01,
         -7.6617e-01,  3.3463e-01,  2.8412e-01, -6.9884e-01, -7.5543e-01,
         -8.3979e-01,  4.5922e-01, -5.3496e-01,  8.6983e-01,  2.7358e-01,
          9.1077e-02, -2.2104e-01,  2.6681e-01,  1.9657e-01,  4.9857e-02,
         -5.4928e-02, -4.6532e-02,  1.7937e-01, -2.8943e-02,  1.1708e-01,
         -3.2033e-01,  1.4263e-01, -8.0540e-02,  5.6098e-01, -4.3076e-01,
         -3.9733e-01, -4.7372e-02,  1.9965e-01,  2.1628e-01, -3.2193e-02,
          4.3032e-01, -5.2268e-01, -2.0736e-02, -1.2469e-01, -4.5333e-01,
         -7.1318e-01,  6.7326e-02, -3.5553e-01,  2.0901e-02, -3.6607e-01,
          5.9292e-01,  1.5835e-01,  9.6951e-02,  1.7444e-01,  3.3839e-04,
          2.5143e-01, -1.7491e-01,  9.0497e-02,  1.0772e-01,  1.5804e-01,
          1.3829e-01,  4.3908e-02, -3.4067e-02,  2.7537e-01,  1.4918e-01,
          6.9362e-02, -3.2302e-01, -3.1231e-01, -2.1162e-01,  1.0720e-01,
         -1.7412e-02, -1.0343e-01,  2.7248e-02, -1.0585e-01,  9.5286e-03,
         -8.7446e-02,  2.2663e-01, -3.2058e-01,  1.5807e-01, -1.3511e-02,
          2.1322e-02,  5.9655e-02,  9.2794e-02,  1.1686e-02,  1.8503e-01,
         -4.5668e-01,  8.9772e-01,  8.9975e-01,  2.4687e-02,  1.7574e-02,
          5.8901e-02,  4.8405e-01, -7.3531e-01,  4.3493e-01,  2.3992e-01,
         -3.2114e-02,  2.2899e-01, -5.1836e-02,  3.0939e-01, -8.0076e-02,
         -2.7122e-02,  1.0364e-01, -2.1335e-04,  3.6845e-02,  7.0529e-03,
         -2.2449e-02, -4.5115e-02,  6.6949e-03, -7.8440e-02, -8.4294e-03,
          1.8090e-01,  1.9959e-01,  2.0631e-01,  1.0949e-01, -7.0286e-02,
         -1.1654e-01, -4.1170e-02, -2.2117e-02, -1.0339e-02,  3.0619e-02,
         -6.5115e-02, -2.0899e-02, -6.6904e-02,  9.8403e-03,  1.1588e-01,
          4.5943e-02,  8.1608e-02, -9.0757e-02,  2.1845e-01,  2.5167e-01,
          5.7532e-02,  9.9360e-02, -9.5578e-02, -5.0084e-02,  4.5383e-02,
         -2.4985e-01, -1.0359e-01, -9.3282e-02,  2.3069e-02,  4.8898e-02,
          1.3204e-02,  6.4652e-02,  2.8768e-01, -1.4180e-01,  2.8183e-01,
          3.6057e-01, -6.1106e-02,  3.3549e-02, -3.9235e-02, -1.7750e-01,
          1.2295e-01]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
100000 特征值优化 tensor(0.8097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1602e-01, -3.3775e-01,  6.0207e-01, -1.0029e+00,  1.4925e+00,
          2.0803e+00,  1.5065e+00, -1.7743e+00,  1.0233e+00,  1.2026e-01,
         -4.7349e-01,  4.0591e-01,  1.7052e-01,  8.6005e-01, -9.5145e-02,
         -7.2241e-01, -5.0625e-01,  4.0472e-01, -1.2211e-01,  2.5751e-01,
         -7.6202e-01,  3.4246e-01,  2.7949e-01, -7.0708e-01, -7.5121e-01,
         -8.3293e-01,  4.5205e-01, -5.5094e-01,  8.7331e-01,  2.6565e-01,
          9.4463e-02, -2.0549e-01,  2.8711e-01,  1.8677e-01,  4.6166e-02,
         -6.8912e-02, -4.1882e-02,  1.7761e-01, -2.4433e-02,  1.1065e-01,
         -3.2471e-01,  1.4095e-01, -8.2922e-02,  5.6599e-01, -4.1926e-01,
         -4.0357e-01, -5.7262e-02,  2.0151e-01,  2.2755e-01, -3.5412e-02,
          4.3713e-01, -5.2062e-01, -1.9669e-02, -1.1891e-01, -4.6556e-01,
         -7.1325e-01,  7.3908e-02, -3.5572e-01,  2.7166e-02, -3.6013e-01,
          6.0251e-01,  1.6040e-01,  1.0222e-01,  1.7724e-01,  4.6425e-04,
          2.5374e-01, -1.6901e-01,  8.8006e-02,  1.1076e-01,  1.4355e-01,
          1.3469e-01,  2.9599e-02, -2.4690e-02,  2.6807e-01,  1.4927e-01,
          8.6664e-02, -3.1437e-01, -3.1834e-01, -2.1061e-01,  1.0263e-01,
         -1.0633e-02, -1.0048e-01,  3.0700e-02, -1.1151e-01,  6.6543e-03,
         -8.3420e-02,  2.3464e-01, -3.1392e-01,  1.5380e-01, -2.6890e-02,
          2.3007e-02,  4.8720e-02,  1.1176e-01,  9.2962e-03,  1.8967e-01,
         -4.5926e-01,  9.1035e-01,  8.9574e-01,  2.7288e-02,  1.4032e-02,
          6.1161e-02,  4.8505e-01, -7.2571e-01,  4.4430e-01,  2.2889e-01,
         -3.8237e-02,  2.1856e-01, -5.3398e-02,  3.0527e-01, -7.7616e-02,
         -3.1475e-02,  9.9461e-02,  1.0619e-02,  3.6205e-02,  3.8932e-03,
         -2.5845e-02, -2.8701e-02,  1.1688e-02, -6.2541e-02, -8.1130e-03,
          1.7211e-01,  1.9317e-01,  2.1016e-01,  1.0314e-01, -7.2445e-02,
         -1.1897e-01, -4.4213e-02, -2.7576e-02, -1.6205e-02,  3.5351e-02,
         -6.5080e-02, -1.8131e-02, -6.3982e-02,  9.8511e-03,  1.1125e-01,
          3.1900e-02,  9.3471e-02, -8.3636e-02,  2.2207e-01,  2.4903e-01,
          5.9787e-02,  9.8110e-02, -8.5412e-02, -4.9850e-02,  5.5222e-02,
         -2.5390e-01, -7.3893e-02, -8.6878e-02,  2.6500e-02,  5.7308e-02,
          2.0759e-02,  6.3919e-02,  2.9622e-01, -1.2849e-01,  2.9224e-01,
          3.5989e-01, -6.0495e-02,  3.7060e-02, -4.9634e-02, -1.6974e-01,
          1.3106e-01]], device='cuda:0') tensor(0.2219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
101000 特征值优化 tensor(0.8014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9632e-01, -3.4286e-01,  5.9821e-01, -1.0028e+00,  1.4884e+00,
          2.0897e+00,  1.5436e+00, -1.7821e+00,  1.0383e+00,  1.3054e-01,
         -4.6448e-01,  4.0948e-01,  1.6562e-01,  8.6563e-01, -1.0297e-01,
         -7.1989e-01, -5.0099e-01,  4.0076e-01, -1.2245e-01,  2.6996e-01,
         -7.5248e-01,  3.4330e-01,  2.7316e-01, -7.0302e-01, -7.3087e-01,
         -8.2349e-01,  4.4348e-01, -5.4739e-01,  8.7453e-01,  2.4624e-01,
          8.7939e-02, -1.9638e-01,  2.8879e-01,  1.8528e-01,  5.3705e-02,
         -8.1096e-02, -4.4100e-02,  1.6944e-01, -2.2870e-02,  1.1188e-01,
         -3.2419e-01,  1.4097e-01, -8.4126e-02,  5.6252e-01, -4.0811e-01,
         -4.1731e-01, -6.7182e-02,  1.9270e-01,  2.2938e-01, -5.6744e-02,
          4.3851e-01, -5.2209e-01, -2.6806e-02, -1.1894e-01, -4.7266e-01,
         -7.1538e-01,  6.7721e-02, -3.4640e-01,  3.7448e-02, -3.4692e-01,
          6.1107e-01,  1.5437e-01,  1.1619e-01,  1.7311e-01,  1.2455e-03,
          2.4260e-01, -1.6343e-01,  8.4366e-02,  1.0775e-01,  1.3666e-01,
          1.3259e-01,  1.3099e-02, -1.0175e-02,  2.6615e-01,  1.6308e-01,
          8.8241e-02, -3.0970e-01, -3.3043e-01, -2.2103e-01,  9.8702e-02,
         -1.2328e-02, -1.0049e-01,  3.0271e-02, -1.1406e-01, -6.0543e-03,
         -9.5268e-02,  2.4035e-01, -3.1360e-01,  1.4526e-01, -2.4125e-02,
          2.9300e-02,  3.3062e-02,  1.0405e-01,  1.2116e-02,  1.8759e-01,
         -4.5660e-01,  9.1137e-01,  9.0591e-01,  4.2705e-02,  3.3011e-02,
          7.2558e-02,  4.7983e-01, -7.2358e-01,  4.5068e-01,  2.2378e-01,
         -4.7416e-02,  2.2083e-01, -6.0159e-02,  3.0649e-01, -7.7781e-02,
         -3.7511e-02,  1.0159e-01,  1.5168e-02,  2.3523e-02,  1.5029e-02,
         -2.6053e-02, -3.2138e-02, -1.5684e-04, -6.1322e-02, -1.3770e-02,
          1.7751e-01,  2.0196e-01,  2.1120e-01,  1.0390e-01, -7.2160e-02,
         -1.1818e-01, -4.2419e-02, -2.8986e-02, -1.7832e-02,  3.8908e-02,
         -6.4299e-02, -2.5482e-02, -5.8677e-02,  9.9285e-03,  1.0131e-01,
          3.2911e-02,  9.2823e-02, -1.0939e-01,  2.1419e-01,  2.5637e-01,
          7.1617e-02,  9.5724e-02, -8.0474e-02, -5.5137e-02,  5.3264e-02,
         -2.5438e-01, -6.8226e-02, -8.1851e-02,  2.1688e-02,  5.6223e-02,
          2.7834e-02,  7.3150e-02,  2.8886e-01, -1.2960e-01,  2.9784e-01,
          3.6346e-01, -5.7892e-02,  4.7606e-02, -3.7421e-02, -1.7350e-01,
          1.3372e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
102000 特征值优化 tensor(23.8046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1901,  2.0237, -0.4008, -0.9612,  0.1540,  0.3752, -0.4155, -0.9319,
         -0.3800,  1.3779, -0.4153,  0.4276,  0.6737,  0.0997, -0.4030, -0.1755,
         -1.4276, -0.8060,  1.0761,  0.4433,  0.7740, -0.1142, -0.2628, -0.3800,
          0.1266, -0.4438, -0.2708,  0.4542, -1.1762,  0.6113,  0.4630,  0.2988,
          0.1109,  0.4047, -0.2174,  0.4797, -0.1929, -0.2963, -0.3759, -0.5696,
         -0.1602,  0.2475, -0.2389,  1.0666, -1.2203, -0.2037,  0.1732, -0.1718,
          0.4409,  0.9203, -0.9110,  0.0268,  0.2648,  1.4316, -0.1742, -0.8334,
         -0.5501,  0.2306,  0.2515, -0.1391, -0.4999,  0.0384, -0.0977, -0.7153,
          0.5055,  0.1949, -0.5306, -1.0679, -0.8120, -0.2730,  0.1091,  0.2528,
          0.1779, -0.8956,  0.4963, -0.2945,  1.1559, -0.0809,  0.4813,  0.0993,
         -1.1487, -0.2885, -1.4295, -0.4169, -0.2354, -0.1973, -0.4718,  0.0247,
          0.0806, -0.0301,  0.1065, -0.0195,  0.6876,  0.5325,  0.0041,  2.4419,
          0.5396,  0.0168, -0.0975,  0.5854, -0.9191,  0.6623, -0.6997, -0.0235,
         -0.0895, -0.4106, -0.6447,  0.7580, -0.0883,  0.1881, -0.1177,  0.1138,
          0.8831, -0.0362,  1.4864,  0.1966, -0.7247, -0.2079, -0.5395,  0.0533,
          1.8270, -0.1968,  0.1309, -0.1473, -0.4649,  0.3254, -0.5409,  0.2440,
         -1.5146, -0.3859,  0.8386, -0.0663, -0.0745, -1.0381, -0.9247,  0.1793,
         -0.2588, -0.4854, -0.2827,  0.4350,  0.2186, -0.4213, -0.9713, -0.1868,
          0.4965, -0.9783,  0.2483,  0.1263, -0.0701, -0.2603, -0.7479, -0.3263,
          0.1296, -0.0461,  0.7892, -1.1133, -0.4914, -0.3582, -0.2125, -0.0082,
          0.0726]], device='cuda:0') tensor(0.2963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
103000 特征值优化 tensor(5.1241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.8180e-01,  1.9579e+00, -1.3072e+00, -1.1396e+00,  9.8777e-01,
          1.2211e+00,  5.9902e-01, -4.1196e-01,  1.2258e-01,  9.1299e-01,
         -1.6769e-01,  2.2307e-03, -2.8774e-02, -1.6380e-02,  6.0863e-02,
          3.5511e-01, -4.8944e-01, -3.2479e-01,  1.2525e+00, -7.2373e-02,
          3.4946e-01,  2.0996e-01,  2.9205e-02,  2.7659e-01,  4.9139e-01,
         -4.3706e-01, -1.5612e-01,  1.1677e-01, -2.7762e-01,  1.9076e-01,
          4.1767e-02,  6.0894e-02,  1.9540e-01, -7.8661e-02,  3.4723e-01,
          1.2516e-01,  3.8607e-01,  9.1249e-03,  2.3658e-01, -5.6751e-01,
         -1.8845e-01, -3.0798e-01,  3.0840e-01,  2.4660e-01, -6.1391e-01,
         -1.1255e-01,  9.2897e-02, -1.0452e-01,  7.6831e-02,  5.3420e-01,
         -2.6534e-01, -1.5024e-01,  7.5940e-02,  6.8142e-01, -1.5559e-01,
         -1.3161e-01, -1.2923e-01, -1.3719e-02,  5.2368e-01,  9.4392e-02,
          2.0962e-01, -1.5739e-01,  5.6569e-02, -1.3437e-02,  9.8177e-02,
         -6.4675e-02, -8.2393e-02, -4.0844e-01, -2.5440e-01, -4.0169e-02,
          3.9169e-02,  1.9942e-02, -4.0865e-02, -2.5904e-01,  1.4160e-01,
         -1.0215e-01,  4.4372e-01, -2.8397e-01, -6.6854e-02, -1.6633e-01,
         -4.0525e-01, -4.8168e-03, -4.6969e-01, -2.2751e-02, -1.2795e-02,
         -8.4527e-02,  8.1165e-02, -4.0940e-01,  1.5518e-02,  2.9433e-01,
         -1.6278e-01, -7.3432e-01,  3.0438e-01,  3.4501e-01,  2.9584e-01,
          1.1941e+00,  7.2039e-01,  2.0279e-01, -1.0694e-01,  4.8509e-01,
         -4.1928e-01,  2.1628e-01, -5.8151e-01, -2.1995e-01,  1.4213e-01,
          3.4964e-01, -1.2133e-01,  3.2128e-03, -4.0232e-01, -1.5468e-01,
          4.1076e-02, -1.2543e-01,  2.1350e-01, -2.2789e-02,  6.4278e-01,
         -1.3588e-01, -3.0103e-01, -3.8130e-02,  4.2781e-02,  4.3842e-02,
          8.5851e-01, -1.1921e-01, -4.3114e-02,  8.0674e-02, -1.8530e-01,
         -1.2621e-03, -1.2013e-01, -1.3249e-01, -8.9247e-01, -1.4305e-01,
          2.1949e-01, -1.1321e-01, -2.2118e-01, -4.6755e-01, -3.0385e-01,
          1.7620e-01, -2.0567e-01, -1.7932e-01,  3.2536e-02,  1.5004e-01,
          3.4801e-01,  1.0341e-02, -4.7628e-01, -2.1006e-01,  2.0610e-02,
         -3.6652e-01, -1.3784e-02, -4.7511e-01,  1.3047e-01,  2.0242e-01,
         -2.2489e-01,  9.7042e-02, -8.3899e-02, -9.0153e-02,  1.3065e-01,
         -5.1640e-01, -1.0026e-02,  1.7401e-01, -7.9337e-03,  7.4529e-02,
          5.7016e-02]], device='cuda:0') tensor(0.2556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
104000 特征值优化 tensor(3.3447, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2902e+00,  1.7211e+00, -1.3558e+00, -1.1653e+00,  1.5334e+00,
          1.6473e+00,  5.2682e-01, -2.8805e-01,  4.6404e-01,  8.0488e-01,
         -1.3322e-01,  9.6259e-02, -9.9381e-02, -3.1078e-01,  4.6590e-01,
          4.4792e-01, -8.9247e-02, -2.5917e-01,  1.1417e+00, -4.5895e-01,
          2.8714e-01,  8.1888e-02,  1.8443e-01,  2.4387e-01,  6.5335e-01,
         -3.8078e-01, -1.3919e-01,  1.8849e-01,  3.3092e-03,  1.6092e-01,
          1.0393e-01, -1.0299e-02,  3.4314e-01, -2.1997e-01,  5.2136e-01,
         -2.0412e-01,  4.1099e-01, -3.8794e-02,  2.5278e-01, -6.1391e-01,
         -2.0572e-01, -5.1074e-01,  4.6338e-01,  1.1813e-01, -4.0471e-01,
         -1.8388e-01, -7.5618e-04, -2.0051e-01,  1.5388e-01,  7.6496e-01,
         -3.7906e-01,  8.5100e-02, -8.5487e-02,  5.0622e-01, -2.6067e-01,
         -1.9654e-01, -3.7237e-01,  7.6794e-02,  5.4589e-01,  4.4506e-02,
          2.7591e-01, -2.7683e-01, -2.2371e-01, -1.8305e-01,  1.4881e-01,
         -2.8374e-01, -4.8174e-02, -3.6721e-01, -1.4905e-01, -2.5261e-02,
         -1.5366e-02,  7.3372e-02, -2.3898e-02, -9.3402e-02,  8.3349e-02,
         -1.4000e-01,  3.8865e-01, -3.0247e-01,  6.7671e-02, -1.0792e-01,
         -3.2585e-01,  2.6041e-02, -2.7056e-01, -3.5638e-02, -1.0951e-01,
         -1.5762e-01, -1.0123e-03, -3.2434e-01, -2.8305e-01, -6.8534e-02,
         -1.9416e-01, -2.5114e-02,  2.6670e-01,  8.4411e-02,  6.5979e-01,
          5.5340e-01,  4.8129e-01, -8.1691e-03, -4.7286e-01,  3.7138e-01,
         -5.9171e-01,  1.6709e-01, -4.0514e-01, -1.6140e-01,  2.3925e-01,
          2.7526e-01, -1.2030e-01, -1.0595e-01, -5.1544e-01, -1.7208e-01,
          2.2780e-01, -1.1111e-01, -7.1362e-02, -4.2841e-02,  4.3354e-01,
         -1.2594e-01, -2.8600e-01, -8.5254e-02, -8.9597e-03,  3.0927e-02,
          5.2278e-01, -1.7039e-01, -1.3808e-01,  5.3213e-02, -1.8412e-01,
          1.0692e-01,  6.7501e-03, -2.7367e-01, -6.3945e-01, -2.6820e-01,
          2.6206e-01, -3.8065e-02, -1.5304e-01, -3.1430e-01, -1.8183e-01,
          1.2614e-01, -1.7880e-01, -1.9070e-01,  5.8357e-02, -6.2877e-02,
          1.0349e-01,  2.4783e-01, -2.2660e-01, -9.0749e-02,  8.5560e-02,
         -2.1318e-01,  6.3774e-02, -4.4252e-01,  7.0210e-02,  3.8277e-01,
         -2.4482e-01,  1.9417e-02, -2.7914e-02, -6.5598e-02,  2.3681e-01,
         -2.1012e-01,  4.9027e-02, -3.8618e-02, -6.7919e-02,  8.3776e-02,
         -5.0380e-02]], device='cuda:0') tensor(0.2430, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
105000 特征值优化 tensor(2.3770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8689,  1.3891, -0.8611, -0.9892,  1.9121,  1.8053,  0.8787, -0.1125,
          0.2355,  0.5620, -0.1519,  0.5321, -0.0285, -0.3635,  0.6270,  0.7715,
          0.0892, -0.3146,  1.1578, -0.6922,  0.0840, -0.0163,  0.3179,  0.2049,
          0.8641, -0.2248, -0.2986,  0.1145,  0.0492,  0.0916,  0.0166, -0.1439,
          0.4090, -0.2354,  0.5077, -0.2746,  0.5139,  0.0689,  0.2507, -0.6248,
         -0.2670, -0.5246,  0.5789,  0.0148, -0.3288, -0.2377, -0.0905, -0.1517,
          0.1408,  0.8388, -0.2985, -0.0456, -0.2366,  0.5379, -0.2843, -0.2848,
         -0.4496, -0.1052,  0.5806, -0.0213, -0.1983, -0.2590, -0.4670, -0.2929,
          0.0961, -0.4064,  0.0460, -0.3782, -0.1284, -0.0318, -0.0698,  0.0929,
          0.0100,  0.0355,  0.0606,  0.0479,  0.3633, -0.1638,  0.0948, -0.0762,
         -0.2889,  0.0323, -0.2126,  0.0043, -0.1150, -0.2163, -0.1291, -0.0411,
         -0.3608, -0.3000, -0.1901,  0.1532,  0.0685,  0.0303,  0.7537,  0.2994,
          0.2264, -0.2780, -0.5873,  0.0621, -0.7389,  0.0372, -0.6675, -0.2824,
          0.0716, -0.0271, -0.2459,  0.0479, -0.2658, -0.1460,  0.2747, -0.0850,
         -0.0238,  0.0241,  0.2737, -0.0111, -0.2411, -0.1486, -0.0165, -0.0041,
          0.3274, -0.0359, -0.1257,  0.0892, -0.1380,  0.2094,  0.0073, -0.2387,
         -0.4535, -0.2303,  0.2575,  0.0519, -0.1472, -0.1913, -0.1279,  0.1837,
          0.0965, -0.1093, -0.0177,  0.1398, -0.0556,  0.0259,  0.0651,  0.0580,
         -0.0180, -0.2227,  0.1796, -0.3290,  0.1127,  0.3573, -0.1035,  0.0149,
         -0.0559,  0.0324,  0.2528,  0.1264,  0.1276, -0.2309, -0.1026,  0.0585,
          0.0038]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
106000 特征值优化 tensor(2.2973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7557e+00,  1.0256e+00, -4.7856e-01, -1.0348e+00,  2.2991e+00,
          1.9817e+00,  1.0046e+00, -1.5644e-01,  7.4384e-02,  4.2991e-01,
         -1.4392e-01,  5.8505e-01,  8.2733e-02, -1.2028e-01,  5.5582e-01,
          8.2677e-01, -1.2901e-01, -3.1223e-01,  1.1891e+00, -6.2439e-01,
          1.1737e-02, -8.3647e-02,  3.3677e-01,  2.3483e-01,  9.0633e-01,
         -1.5356e-01, -2.8712e-01,  2.2246e-01,  8.4216e-02,  1.6137e-01,
         -9.5186e-02, -2.0786e-01,  4.2608e-01, -2.8663e-01,  5.0978e-01,
         -2.8105e-01,  4.8607e-01,  6.4702e-02,  1.9999e-01, -6.2563e-01,
         -3.2847e-01, -5.2687e-01,  6.0279e-01,  7.0210e-02, -3.9347e-01,
         -2.5793e-01, -1.6295e-02, -1.6666e-01,  1.6848e-01,  8.4466e-01,
         -2.7314e-01,  1.4656e-02, -3.3679e-01,  5.2381e-01, -2.4190e-01,
         -2.3532e-01, -4.4289e-01, -8.0699e-02,  5.6086e-01, -3.3084e-02,
         -2.6494e-01, -1.9922e-01, -5.4472e-01, -2.6342e-01,  1.2591e-01,
         -4.0590e-01,  1.0998e-01, -3.2807e-01, -1.2471e-01, -1.6544e-02,
         -3.5109e-02,  1.4643e-01,  1.4906e-02,  1.4580e-02,  4.6837e-02,
          6.1246e-02,  3.2276e-01, -1.4798e-01,  6.6049e-02, -8.7708e-02,
         -2.9714e-01,  2.8849e-02, -1.9998e-01,  2.3674e-02, -3.9464e-02,
         -1.4747e-01, -1.2255e-01,  3.9282e-02, -2.5260e-01, -3.5265e-01,
         -1.9360e-01,  1.8052e-01, -5.3999e-02,  1.2838e-01,  7.6776e-01,
          1.7643e-01,  9.8946e-02, -3.2494e-01, -7.2592e-01, -5.8912e-02,
         -8.0687e-01,  5.5500e-02, -8.1560e-01, -2.3046e-01, -6.3329e-02,
         -2.5817e-01, -3.4661e-01,  1.2677e-01, -1.5046e-01, -1.1234e-01,
          2.1698e-01, -7.3054e-02, -4.8850e-02,  1.2477e-02,  2.5886e-01,
          3.2461e-02, -1.7484e-01, -1.0965e-01,  5.4616e-03, -2.4069e-03,
          1.8884e-01, -3.6825e-02, -1.6767e-01,  3.8513e-02, -1.7824e-01,
          2.5962e-01,  4.4232e-02, -2.0620e-01, -4.1095e-01, -1.8501e-01,
          2.1024e-01,  5.0844e-02, -1.7418e-01, -1.4214e-01, -1.1245e-01,
          1.8795e-01,  1.3116e-01, -1.9103e-01, -1.9864e-02,  1.2079e-01,
         -6.6892e-02,  7.0603e-02,  9.7469e-02,  5.1330e-02, -2.0587e-02,
         -2.6353e-01,  2.0932e-01, -3.0089e-01,  1.8956e-01,  3.3852e-01,
         -1.2335e-01,  6.2150e-04, -6.6229e-02,  7.6306e-02,  2.5083e-01,
          1.7189e-01,  1.8866e-01, -2.5457e-01, -1.2323e-01,  9.5505e-02,
         -8.0192e-03]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
107000 特征值优化 tensor(2.2381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3484e+00,  7.6792e-01, -3.2356e-01, -1.0764e+00,  2.6403e+00,
          2.2188e+00,  1.0647e+00, -1.8003e-01, -9.0326e-03,  4.0703e-01,
         -1.4538e-01,  5.5332e-01,  1.7371e-01,  1.2577e-01,  4.4846e-01,
          8.9611e-01, -2.9953e-01, -2.3466e-01,  1.2088e+00, -6.3880e-01,
         -6.5762e-02, -1.3412e-01,  2.8520e-01,  2.1285e-01,  9.3531e-01,
         -2.0217e-01, -3.0199e-01,  2.3927e-01,  1.0609e-01,  1.9766e-01,
         -1.0136e-01, -1.9833e-01,  4.5827e-01, -2.8575e-01,  5.0658e-01,
         -2.7266e-01,  4.4752e-01,  2.6565e-02,  1.7305e-01, -6.2825e-01,
         -3.3742e-01, -5.2024e-01,  5.9171e-01,  1.1022e-01, -4.1827e-01,
         -2.2449e-01,  1.0748e-02, -1.8017e-01,  2.3624e-01,  8.3844e-01,
         -2.8101e-01,  2.9645e-02, -3.8900e-01,  4.8265e-01, -2.4030e-01,
         -1.7713e-01, -3.9992e-01, -1.3350e-01,  5.9531e-01, -3.7181e-02,
         -2.9576e-01, -1.5942e-01, -5.6256e-01, -2.2484e-01,  1.0923e-01,
         -3.6785e-01,  1.5175e-01, -2.8698e-01, -1.4938e-01, -4.1616e-03,
         -6.3158e-03,  1.8550e-01,  3.0391e-02,  2.6346e-03,  3.5567e-02,
          8.4544e-02,  2.7171e-01, -1.6190e-01,  6.3284e-02, -8.0735e-02,
         -3.4628e-01, -7.7913e-04, -1.6740e-01,  2.7147e-02, -5.6843e-02,
         -1.1682e-01, -1.1696e-01,  8.9944e-02, -3.0376e-01, -3.8697e-01,
         -1.9969e-01,  1.6224e-01, -8.3225e-02,  2.0493e-01,  7.8803e-01,
          1.2235e-01,  6.3007e-02, -3.1193e-01, -7.2092e-01, -6.5903e-02,
         -7.7889e-01,  1.0926e-01, -9.7887e-01, -1.6831e-01, -9.6003e-02,
         -4.0133e-01, -4.8722e-01,  1.6373e-01, -6.5053e-02, -8.0861e-02,
          1.9914e-01,  1.2205e-02, -2.2886e-02, -2.8742e-03,  2.7307e-01,
          6.6476e-02, -9.5607e-02, -8.6823e-02, -1.3506e-02, -9.2125e-03,
          8.2225e-02, -5.2771e-02, -1.4741e-01, -5.5156e-02, -2.0181e-01,
          2.9798e-01,  9.7877e-02, -1.1991e-01, -3.7908e-01, -1.5820e-01,
          1.4838e-01,  8.7542e-02, -1.6699e-01, -1.2774e-01, -1.3912e-01,
          2.2728e-01,  9.0268e-02, -1.9792e-01, -1.5745e-02,  6.0940e-02,
         -5.6269e-02,  8.9745e-02,  1.0426e-01,  7.1880e-02, -2.8145e-02,
         -2.1338e-01,  1.8382e-01, -2.7116e-01,  1.8740e-01,  3.6887e-01,
         -1.0217e-01,  2.9530e-03, -4.3225e-02,  1.2934e-01,  2.9032e-01,
          1.7884e-01,  2.3037e-01, -1.9170e-01, -1.6946e-01,  1.4333e-01,
         -2.1946e-02]], device='cuda:0') tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
108000 特征值优化 tensor(2.2205, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.8355e-01,  6.4688e-01, -3.5060e-01, -1.0768e+00,  2.9813e+00,
          2.3893e+00,  1.1859e+00, -1.6066e-01, -3.9355e-02,  4.5525e-01,
         -2.1088e-01,  3.9486e-01,  2.2417e-01,  2.6083e-01,  3.5090e-01,
          9.5871e-01, -4.0675e-01, -1.7364e-01,  1.2018e+00, -6.7602e-01,
         -1.0788e-01, -1.5625e-01,  2.3641e-01,  1.9557e-01,  9.6696e-01,
         -2.1942e-01, -3.4420e-01,  2.1526e-01,  1.2649e-01,  2.1151e-01,
         -1.3678e-01, -1.4683e-01,  4.5074e-01, -2.2628e-01,  4.8847e-01,
         -3.0136e-01,  4.1618e-01,  4.7757e-02,  8.3111e-02, -6.1448e-01,
         -3.6476e-01, -5.1908e-01,  5.9574e-01,  1.2910e-01, -4.2988e-01,
         -1.2985e-01, -1.1120e-03, -1.5952e-01,  2.9833e-01,  8.2674e-01,
         -2.7911e-01,  9.9638e-03, -3.9501e-01,  4.6612e-01, -2.5869e-01,
         -1.5974e-01, -2.9601e-01, -1.5175e-01,  6.2918e-01, -3.1300e-02,
         -3.0898e-01, -1.4361e-01, -5.6862e-01, -2.3117e-01,  1.0495e-01,
         -2.9194e-01,  1.7354e-01, -2.4113e-01, -1.5047e-01,  5.2877e-03,
         -4.7513e-04,  2.1416e-01,  6.5843e-02,  2.0296e-02,  3.7544e-03,
          9.0447e-02,  2.3026e-01, -1.3363e-01,  1.1847e-01, -8.2249e-02,
         -3.7344e-01, -4.3812e-02, -1.0869e-01,  2.1195e-02, -3.3917e-02,
         -1.1367e-01, -1.0221e-01,  1.0122e-01, -2.7273e-01, -4.0870e-01,
         -2.3235e-01,  2.4482e-01, -1.5118e-01,  2.3769e-01,  8.1854e-01,
          1.1225e-01,  5.2018e-02, -3.6375e-01, -7.3949e-01,  8.9186e-03,
         -7.6392e-01,  1.3355e-01, -1.1253e+00, -1.6019e-01, -8.6552e-02,
         -5.1699e-01, -5.7114e-01,  1.7500e-01, -2.3242e-02, -8.7467e-02,
          1.9472e-01,  7.8262e-02, -1.2435e-02,  8.1094e-03,  2.7046e-01,
          6.6040e-02, -6.5377e-02, -1.2076e-01, -5.7304e-02, -4.4594e-02,
          4.5535e-02, -6.3669e-02, -1.2770e-01, -1.0255e-01, -1.9261e-01,
          3.1980e-01,  1.1790e-01, -2.9440e-02, -3.5163e-01, -1.4684e-01,
          1.1070e-01,  1.2671e-01, -1.5217e-01, -1.0187e-01, -1.7727e-01,
          2.5987e-01,  4.3622e-03, -2.2028e-01,  7.3592e-03,  5.5330e-02,
         -5.4473e-02,  1.0235e-01,  7.5022e-02,  6.9634e-02, -4.5231e-02,
         -1.6605e-01,  1.4110e-01, -2.3938e-01,  1.3036e-01,  4.0619e-01,
         -5.2722e-02,  4.5965e-02, -4.3497e-02,  1.7435e-01,  3.0736e-01,
          1.6239e-01,  2.4974e-01, -1.3763e-01, -1.9035e-01,  1.5626e-01,
         -3.0257e-02]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
109000 特征值优化 tensor(2.2620, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.1845e-01,  6.2353e-01, -4.4737e-01, -1.1051e+00,  3.3392e+00,
          2.5470e+00,  1.2764e+00, -1.4843e-01, -8.6444e-02,  4.4827e-01,
         -2.3965e-01,  2.7188e-01,  2.6370e-01,  3.4586e-01,  2.8920e-01,
          9.8716e-01, -4.6421e-01, -1.3925e-01,  1.1740e+00, -7.2263e-01,
         -1.1707e-01, -1.5162e-01,  2.2506e-01,  1.7617e-01,  9.9271e-01,
         -2.7555e-01, -3.2589e-01,  1.6665e-01,  1.2948e-01,  2.1907e-01,
         -1.4713e-01, -8.5301e-02,  4.0451e-01, -1.3485e-01,  5.0127e-01,
         -2.9814e-01,  3.8674e-01,  5.8858e-02,  7.4147e-02, -6.1700e-01,
         -3.7675e-01, -5.2517e-01,  6.0118e-01,  1.3306e-01, -4.2926e-01,
         -8.8271e-02,  1.8477e-03, -1.3803e-01,  3.3423e-01,  8.1595e-01,
         -2.8661e-01, -2.3085e-03, -3.7352e-01,  4.6505e-01, -2.6115e-01,
         -1.3772e-01, -2.0049e-01, -1.0613e-01,  6.2458e-01, -7.2681e-03,
         -3.1196e-01, -1.3300e-01, -5.7322e-01, -2.4220e-01,  1.0676e-01,
         -2.4273e-01,  1.4525e-01, -2.0782e-01, -1.5129e-01,  1.1646e-02,
          3.1226e-02,  2.1294e-01,  7.5423e-02,  4.2598e-02,  3.0456e-03,
          6.8547e-02,  1.9723e-01, -1.0327e-01,  1.3602e-01, -7.5429e-02,
         -3.8924e-01, -6.1839e-02, -7.7469e-02,  4.7562e-02, -2.8176e-02,
         -1.1083e-01, -1.1043e-01,  1.2284e-01, -2.6508e-01, -3.9880e-01,
         -2.4967e-01,  3.2174e-01, -1.2534e-01,  2.5488e-01,  7.9803e-01,
          1.5214e-01,  3.3694e-02, -3.6312e-01, -7.1973e-01,  1.6925e-02,
         -7.9524e-01,  1.1980e-01, -1.1946e+00, -1.3768e-01, -6.1609e-02,
         -6.0415e-01, -6.0823e-01,  1.7243e-01, -1.5346e-02, -8.3764e-02,
          1.9503e-01,  1.4872e-01,  4.9724e-05,  9.7405e-03,  2.5497e-01,
          4.2430e-02, -3.4017e-02, -1.3491e-01, -5.4904e-02, -7.3680e-02,
          2.2875e-02, -6.4100e-02, -1.1012e-01, -1.3718e-01, -1.6742e-01,
          3.4239e-01,  1.4413e-01,  1.1497e-02, -3.4307e-01, -1.3028e-01,
          9.6320e-02,  1.2374e-01, -1.4938e-01, -9.7233e-02, -1.9239e-01,
          2.5416e-01, -4.9374e-02, -2.2062e-01,  9.9899e-03,  8.8227e-02,
         -5.2250e-02,  1.3250e-01,  5.8190e-02,  5.1502e-02, -6.6648e-02,
         -1.1710e-01,  1.2119e-01, -2.3742e-01,  9.4735e-02,  4.2927e-01,
         -2.3457e-02,  7.1016e-02, -3.9492e-02,  1.8259e-01,  2.9994e-01,
          1.5370e-01,  2.6704e-01, -1.3619e-01, -2.0077e-01,  1.1713e-01,
         -5.0672e-02]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
110000 特征值优化 tensor(2.2436, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8783e-01,  5.7984e-01, -5.3990e-01, -1.1056e+00,  3.6297e+00,
          2.7097e+00,  1.3620e+00, -1.9461e-01, -1.3026e-01,  4.0925e-01,
         -2.6258e-01,  1.7624e-01,  2.4325e-01,  3.8662e-01,  2.2826e-01,
          1.0018e+00, -5.0527e-01, -1.3112e-01,  1.1459e+00, -7.4387e-01,
         -1.5174e-01, -1.2689e-01,  2.3560e-01,  1.7009e-01,  1.0144e+00,
         -3.5167e-01, -2.5575e-01,  1.2754e-01,  1.0873e-01,  2.1945e-01,
         -1.5542e-01, -6.5179e-02,  3.2538e-01, -7.1317e-02,  5.4313e-01,
         -3.0673e-01,  3.5143e-01,  6.7370e-02,  5.5193e-02, -6.2902e-01,
         -3.7488e-01, -5.2778e-01,  5.9416e-01,  1.1798e-01, -4.2359e-01,
         -7.8409e-02,  2.1893e-02, -9.4074e-02,  3.5810e-01,  8.0256e-01,
         -3.0078e-01,  2.3878e-02, -3.5861e-01,  4.6404e-01, -2.4117e-01,
         -8.2291e-02, -1.6231e-01, -6.3720e-02,  5.9890e-01,  8.4160e-03,
         -3.3296e-01, -1.1099e-01, -5.7012e-01, -2.6216e-01,  1.1121e-01,
         -2.1965e-01,  1.1227e-01, -1.7596e-01, -1.4319e-01,  2.8216e-02,
          6.1298e-02,  2.1454e-01,  6.9637e-02,  2.9209e-03,  1.9950e-02,
          6.9508e-02,  1.6853e-01, -6.9678e-02,  1.6866e-01, -6.5106e-02,
         -3.9712e-01, -3.4328e-02, -6.9317e-02,  9.8926e-02, -3.0368e-02,
         -9.8979e-02, -1.1378e-01,  1.4790e-01, -2.3106e-01, -3.8015e-01,
         -2.4218e-01,  3.6317e-01, -1.5874e-01,  2.8454e-01,  8.0478e-01,
          1.8568e-01,  4.8048e-03, -3.6634e-01, -7.1260e-01,  3.4133e-02,
         -7.7226e-01,  8.3499e-02, -1.2106e+00, -1.1960e-01, -2.9332e-02,
         -6.4993e-01, -6.4452e-01,  1.7062e-01, -3.6810e-02, -7.0118e-02,
          1.9140e-01,  1.8840e-01,  2.5586e-02,  5.9449e-03,  2.2539e-01,
          2.0849e-02, -1.6811e-02, -1.4775e-01, -5.5589e-02, -7.8616e-02,
          1.5290e-02, -6.6845e-02, -1.0012e-01, -1.9209e-01, -1.5926e-01,
          3.5708e-01,  1.7267e-01,  2.5522e-02, -3.5473e-01, -9.3558e-02,
          7.8664e-02,  1.2443e-01, -1.4958e-01, -1.1019e-01, -1.8785e-01,
          1.9304e-01, -6.7120e-02, -1.8225e-01, -6.2235e-03,  8.8334e-02,
         -3.8678e-02,  1.3682e-01,  5.6701e-02,  4.4862e-02, -7.9738e-02,
         -7.0873e-02,  9.4857e-02, -2.6115e-01,  7.3398e-02,  4.3109e-01,
         -5.0776e-03,  9.3971e-02, -2.5597e-02,  1.9114e-01,  2.7055e-01,
          1.4603e-01,  2.6535e-01, -1.1784e-01, -1.8880e-01,  9.2929e-02,
         -6.1645e-02]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
111000 特征值优化 tensor(2.1874, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.8991e-01,  5.7575e-01, -6.2436e-01, -1.1129e+00,  3.8855e+00,
          2.8093e+00,  1.3971e+00, -2.2994e-01, -1.6929e-01,  3.2160e-01,
         -2.5789e-01,  1.0450e-01,  1.4145e-01,  3.9894e-01,  2.4756e-01,
          9.9220e-01, -5.5515e-01, -1.0171e-01,  1.1258e+00, -7.3974e-01,
         -1.8308e-01, -1.0660e-01,  2.3948e-01,  1.5693e-01,  1.0388e+00,
         -4.1439e-01, -1.9943e-01,  8.8983e-02,  1.1950e-01,  2.0905e-01,
         -1.5522e-01, -2.8900e-02,  2.5243e-01, -2.2798e-02,  5.6756e-01,
         -2.8597e-01,  3.2038e-01,  5.7075e-02,  5.8676e-02, -6.1114e-01,
         -3.7689e-01, -5.2570e-01,  5.8461e-01,  9.6250e-02, -4.2475e-01,
         -7.1352e-02,  4.5972e-02, -7.2116e-02,  3.8113e-01,  7.8102e-01,
         -3.0894e-01,  1.1185e-02, -3.4092e-01,  4.6589e-01, -2.4089e-01,
         -3.4965e-02, -1.3528e-01, -5.3340e-02,  6.0216e-01, -2.5385e-03,
         -3.5916e-01, -6.9894e-02, -5.9190e-01, -2.6519e-01,  1.0507e-01,
         -2.1101e-01,  8.7542e-02, -1.5826e-01, -1.4309e-01,  2.9556e-02,
          8.1549e-02,  2.0803e-01,  8.1751e-02,  1.4451e-02,  2.7202e-02,
          7.1976e-02,  1.6105e-01, -4.9157e-02,  1.7479e-01, -4.8372e-02,
         -3.9314e-01, -3.4371e-02, -6.7155e-02,  1.2743e-01, -5.5328e-02,
         -1.0051e-01, -1.1981e-01,  1.4711e-01, -1.9776e-01, -3.6792e-01,
         -2.2457e-01,  4.0421e-01, -1.9778e-01,  3.0093e-01,  8.1605e-01,
          2.0454e-01, -2.1578e-02, -4.1043e-01, -6.9887e-01,  4.5163e-02,
         -7.7128e-01,  4.7654e-02, -1.2055e+00, -1.2038e-01,  1.0941e-02,
         -6.8401e-01, -6.7292e-01,  1.9457e-01, -5.9061e-02, -4.1289e-02,
          1.8605e-01,  2.0436e-01,  3.2021e-02,  4.8719e-03,  1.9347e-01,
          3.4267e-02, -1.2946e-03, -1.4983e-01, -3.1629e-02, -7.7357e-02,
          7.3786e-03, -7.1778e-02, -8.5045e-02, -2.3259e-01, -1.5064e-01,
          3.5976e-01,  2.0542e-01,  5.3202e-02, -3.6578e-01, -6.4308e-02,
          7.2423e-02,  1.2156e-01, -1.3208e-01, -1.0815e-01, -1.9000e-01,
          1.6989e-01, -6.9711e-02, -1.2982e-01, -2.4842e-02,  9.2398e-02,
         -1.4774e-02,  1.4202e-01,  4.8765e-02,  6.8602e-02, -7.4326e-02,
         -3.7874e-02,  5.7183e-02, -2.6177e-01,  5.7797e-02,  4.1551e-01,
          1.5805e-03,  1.0097e-01, -2.8154e-02,  1.8521e-01,  2.4575e-01,
          1.4007e-01,  2.6950e-01, -1.0839e-01, -2.0459e-01,  8.6296e-02,
         -6.4323e-02]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
112000 特征值优化 tensor(2.2289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6885e-01,  5.8722e-01, -7.0077e-01, -1.1179e+00,  4.0093e+00,
          2.8354e+00,  1.3725e+00, -2.4110e-01, -1.7311e-01,  2.6611e-01,
         -2.7444e-01,  8.7364e-02,  8.3557e-02,  3.9201e-01,  2.5184e-01,
          9.7210e-01, -5.8080e-01, -6.4406e-02,  1.1182e+00, -7.5751e-01,
         -1.8851e-01, -9.3893e-02,  2.3657e-01,  1.6662e-01,  1.0434e+00,
         -4.6779e-01, -1.4197e-01,  4.6742e-02,  1.3876e-01,  2.0075e-01,
         -1.8115e-01,  1.6812e-03,  2.2207e-01, -1.7534e-02,  5.8994e-01,
         -2.7875e-01,  2.9838e-01,  3.4341e-02,  8.6682e-02, -5.9656e-01,
         -3.6235e-01, -5.2494e-01,  5.9242e-01,  8.0272e-02, -4.0089e-01,
         -9.1981e-02,  6.7805e-02, -6.5283e-02,  3.7351e-01,  7.5449e-01,
         -2.9813e-01, -2.0941e-02, -3.2515e-01,  4.7826e-01, -2.4337e-01,
         -1.0128e-02, -1.4762e-01, -5.7892e-02,  5.9432e-01, -1.7230e-02,
         -3.3403e-01, -3.0866e-02, -5.9710e-01, -2.6818e-01,  9.8732e-02,
         -2.0195e-01,  6.2172e-02, -1.5522e-01, -1.4591e-01,  1.2523e-02,
          9.0448e-02,  2.1730e-01,  1.1054e-01, -1.5295e-02,  3.7486e-02,
          7.9820e-02,  1.4882e-01, -5.3708e-02,  1.7158e-01, -5.3827e-02,
         -3.9919e-01, -4.6750e-02, -4.9262e-02,  1.5672e-01, -8.8697e-02,
         -1.0289e-01, -8.1634e-02,  1.3828e-01, -1.8104e-01, -3.6242e-01,
         -2.0904e-01,  4.2976e-01, -2.4051e-01,  3.2997e-01,  8.1786e-01,
          2.1502e-01, -3.2071e-02, -4.1485e-01, -6.8898e-01,  4.5720e-02,
         -7.8103e-01,  1.0407e-02, -1.1994e+00, -1.1005e-01,  4.6450e-02,
         -7.1390e-01, -6.6495e-01,  1.9387e-01, -7.9397e-02, -2.3139e-02,
          1.8464e-01,  2.0918e-01,  3.7185e-02,  1.4313e-03,  1.6257e-01,
          2.2394e-02, -3.7250e-03, -1.5110e-01, -1.7140e-02, -5.6198e-02,
          1.2001e-02, -7.8075e-02, -9.6299e-02, -2.4086e-01, -1.2847e-01,
          3.4806e-01,  2.1804e-01,  9.0686e-02, -3.5757e-01, -4.8453e-02,
          5.1111e-02,  1.3285e-01, -1.1729e-01, -1.0218e-01, -2.1780e-01,
          1.6507e-01, -9.2384e-02, -1.1687e-01, -6.3995e-02,  9.1098e-02,
          1.1460e-02,  1.1469e-01,  5.6281e-02,  6.9051e-02, -7.2148e-02,
         -6.6063e-02,  1.7773e-02, -2.5033e-01,  3.1012e-02,  4.2785e-01,
          1.7340e-02,  1.0250e-01, -3.7714e-02,  1.7851e-01,  2.5373e-01,
          1.2707e-01,  2.7444e-01, -1.0681e-01, -2.0799e-01,  6.5546e-02,
         -4.3247e-02]], device='cuda:0') tensor(0.2919, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
113000 特征值优化 tensor(2.2197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3634e-01,  6.9908e-01, -7.1882e-01, -1.0969e+00,  4.1347e+00,
          2.8347e+00,  1.3254e+00, -3.0915e-01, -2.1103e-01,  1.8122e-01,
         -2.5369e-01,  5.4903e-02,  3.4017e-02,  4.1413e-01,  2.7865e-01,
          9.1544e-01, -5.7568e-01, -5.8006e-02,  1.0912e+00, -7.2855e-01,
         -1.4486e-01, -4.8513e-02,  2.3534e-01,  1.2316e-01,  1.0678e+00,
         -5.0972e-01, -1.1169e-01,  1.5774e-02,  1.1381e-01,  1.6477e-01,
         -1.7771e-01,  1.9719e-02,  2.1913e-01,  1.5772e-02,  6.4816e-01,
         -2.8102e-01,  2.8474e-01,  3.2850e-02,  1.4435e-01, -6.0045e-01,
         -3.8202e-01, -5.2503e-01,  5.8285e-01,  9.0267e-02, -3.9177e-01,
         -9.2914e-02,  8.6104e-02, -7.9232e-02,  3.7879e-01,  7.3416e-01,
         -2.8702e-01, -3.7675e-02, -3.0997e-01,  4.6863e-01, -2.3462e-01,
         -6.0094e-04, -1.0391e-01, -9.6012e-02,  5.8649e-01, -2.9024e-02,
         -3.3145e-01,  1.3286e-02, -6.0320e-01, -2.8252e-01,  1.2498e-01,
         -2.0094e-01,  2.1500e-02, -1.3351e-01, -1.6976e-01,  3.5544e-02,
          9.7691e-02,  2.1968e-01,  1.0037e-01, -4.8896e-02,  3.3086e-02,
          8.2048e-02,  1.4674e-01, -5.4011e-02,  1.7668e-01, -3.2162e-02,
         -3.8665e-01, -2.0030e-02, -6.5467e-02,  1.0483e-01, -1.0132e-01,
         -1.0802e-01, -8.8617e-02,  1.7422e-01, -1.7778e-01, -3.4443e-01,
         -1.8383e-01,  4.6049e-01, -3.0268e-01,  3.3483e-01,  7.8234e-01,
          2.4553e-01, -3.7279e-02, -4.6252e-01, -6.9575e-01,  8.5525e-02,
         -8.0032e-01, -3.7158e-02, -1.1479e+00, -1.4576e-01,  5.2413e-02,
         -6.9678e-01, -6.8190e-01,  1.9253e-01, -1.6685e-01, -1.1362e-02,
          1.6717e-01,  2.5278e-01,  1.5155e-02, -1.0448e-02,  1.1431e-01,
          5.8727e-02,  7.1736e-03, -1.6282e-01, -3.2627e-03, -5.7236e-02,
          8.0217e-03, -9.2168e-02, -1.0980e-01, -2.8697e-01, -1.3158e-01,
          3.4004e-01,  2.2920e-01,  1.2644e-01, -3.4253e-01, -1.8914e-02,
          5.8163e-02,  1.4453e-01, -1.1818e-01, -1.3304e-01, -1.9349e-01,
          1.2091e-01, -1.0790e-01, -1.2392e-01, -8.2731e-02,  1.1733e-01,
         -3.7581e-02,  8.5263e-02,  4.8716e-02,  7.3699e-02, -8.9475e-02,
         -3.3338e-02, -1.4367e-02, -2.7276e-01,  7.1296e-02,  4.3638e-01,
         -2.0230e-02,  9.1780e-02, -5.1452e-02,  1.7184e-01,  2.4204e-01,
          1.5227e-01,  2.7711e-01, -1.1753e-01, -1.9907e-01,  6.9374e-02,
         -3.4855e-02]], device='cuda:0') tensor(0.2314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
114000 特征值优化 tensor(2.1602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4937e-03,  8.1123e-01, -7.7338e-01, -1.1073e+00,  4.1537e+00,
          2.8400e+00,  1.3239e+00, -3.5055e-01, -2.2988e-01,  1.0569e-01,
         -2.3184e-01,  8.2163e-02,  3.1562e-02,  4.3302e-01,  2.6649e-01,
          9.1694e-01, -5.7653e-01, -4.0327e-02,  1.0781e+00, -7.4686e-01,
         -1.1379e-01, -2.7928e-02,  2.2688e-01,  1.2587e-01,  1.0401e+00,
         -5.2672e-01, -1.1182e-01, -2.4700e-02,  1.0307e-01,  1.4083e-01,
         -1.6480e-01,  3.7281e-02,  2.2074e-01,  1.8120e-02,  6.8274e-01,
         -2.9493e-01,  2.7305e-01,  2.9266e-03,  1.7692e-01, -5.7029e-01,
         -3.7976e-01, -5.2590e-01,  5.8022e-01,  7.6804e-02, -3.5671e-01,
         -1.0591e-01,  9.3839e-02, -8.8896e-02,  3.8586e-01,  7.0904e-01,
         -2.6935e-01, -6.3021e-02, -3.2284e-01,  4.6246e-01, -2.1956e-01,
          6.1009e-03, -8.5143e-02, -7.7733e-02,  5.5630e-01, -2.9524e-02,
         -3.1052e-01,  3.3360e-02, -6.1089e-01, -2.7230e-01,  1.1499e-01,
         -2.0536e-01,  1.0128e-02, -1.3834e-01, -1.5887e-01,  2.8068e-02,
          1.1019e-01,  2.1577e-01,  9.9016e-02, -5.9978e-02,  3.2551e-02,
          7.0480e-02,  1.5600e-01, -5.3577e-02,  1.7510e-01, -3.3167e-02,
         -3.8661e-01, -2.9964e-02, -6.0259e-02,  1.0296e-01, -1.1002e-01,
         -1.1531e-01, -6.5553e-02,  1.8307e-01, -1.8083e-01, -3.5023e-01,
         -1.5185e-01,  4.5807e-01, -3.1081e-01,  3.5003e-01,  7.8360e-01,
          2.6080e-01, -2.7205e-02, -4.4683e-01, -7.2491e-01,  6.1237e-02,
         -8.0278e-01, -5.8269e-02, -1.1225e+00, -1.5218e-01,  4.8460e-02,
         -7.1791e-01, -6.9762e-01,  1.8078e-01, -1.9719e-01, -1.0238e-02,
          1.5023e-01,  2.5143e-01, -2.9487e-03, -2.4209e-02,  9.3480e-02,
          7.2979e-02,  1.8796e-02, -1.5532e-01, -3.2743e-03, -4.2090e-02,
         -5.0032e-03, -8.9290e-02, -1.1132e-01, -2.9699e-01, -1.4190e-01,
          3.3766e-01,  2.4429e-01,  1.4247e-01, -3.4385e-01, -8.8140e-03,
          6.9526e-02,  1.5228e-01, -1.1974e-01, -1.3303e-01, -1.9359e-01,
          1.1942e-01, -1.1852e-01, -1.3760e-01, -1.0113e-01,  1.1779e-01,
         -4.5707e-02,  6.6959e-02,  5.2563e-02,  8.1680e-02, -7.3656e-02,
         -4.2829e-02, -3.4009e-02, -2.6928e-01,  5.6142e-02,  4.3274e-01,
         -1.0052e-02,  8.2148e-02, -6.0292e-02,  1.5468e-01,  2.4838e-01,
          1.4799e-01,  2.8623e-01, -1.1446e-01, -2.0174e-01,  3.9172e-02,
         -1.3937e-02]], device='cuda:0') tensor(0.2507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
115000 特征值优化 tensor(2.3003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.6411e-02,  8.9464e-01, -7.9903e-01, -1.1122e+00,  4.1231e+00,
          2.8361e+00,  1.3081e+00, -3.6854e-01, -2.5251e-01,  6.6927e-02,
         -1.9312e-01,  1.0439e-01,  1.9386e-02,  4.3961e-01,  2.4853e-01,
          9.3313e-01, -5.9524e-01, -3.8014e-02,  1.0685e+00, -7.3356e-01,
         -1.0333e-01, -6.7717e-04,  2.2603e-01,  1.0391e-01,  1.0141e+00,
         -5.4866e-01, -8.7741e-02, -5.3086e-02,  9.7471e-02,  1.1130e-01,
         -1.3948e-01,  5.3809e-02,  2.2026e-01,  6.9115e-03,  7.0614e-01,
         -2.8789e-01,  2.9393e-01, -1.0804e-02,  2.1815e-01, -5.6635e-01,
         -3.7503e-01, -5.2164e-01,  5.7900e-01,  7.1016e-02, -3.3709e-01,
         -1.1484e-01,  1.1713e-01, -1.0562e-01,  4.0079e-01,  6.9946e-01,
         -2.6816e-01, -8.0053e-02, -3.2295e-01,  4.7112e-01, -2.1460e-01,
          9.6929e-03, -6.8491e-02, -6.5962e-02,  5.5105e-01, -4.0005e-02,
         -3.0025e-01,  5.5494e-02, -6.2189e-01, -2.7017e-01,  1.0416e-01,
         -2.0959e-01,  1.3086e-02, -1.3884e-01, -1.6903e-01,  3.7099e-02,
          1.1647e-01,  2.0204e-01,  9.2329e-02, -6.6012e-02,  3.9614e-02,
          6.0881e-02,  1.6229e-01, -7.5242e-02,  1.5692e-01, -2.4720e-02,
         -3.6916e-01, -3.7304e-02, -6.2811e-02,  9.6717e-02, -9.4332e-02,
         -1.0525e-01, -7.2537e-02,  1.8556e-01, -1.8521e-01, -3.6143e-01,
         -1.4263e-01,  4.4675e-01, -3.1728e-01,  3.4724e-01,  7.7551e-01,
          2.6551e-01,  1.0364e-03, -4.4236e-01, -7.5249e-01,  5.4257e-02,
         -8.0572e-01, -7.3346e-02, -1.0897e+00, -1.6619e-01,  6.1705e-02,
         -7.4154e-01, -7.0724e-01,  1.6949e-01, -2.1487e-01, -7.0603e-03,
          1.3465e-01,  2.5725e-01, -1.4301e-02, -2.6759e-02,  8.7274e-02,
          9.8685e-02,  1.9059e-02, -1.5243e-01,  4.5285e-04, -3.7903e-02,
          6.9488e-04, -9.6024e-02, -1.0988e-01, -3.1930e-01, -1.4024e-01,
          3.3826e-01,  2.4993e-01,  1.4686e-01, -3.4326e-01,  1.0548e-02,
          8.3253e-02,  1.5222e-01, -1.2247e-01, -1.3248e-01, -1.9239e-01,
          1.0959e-01, -1.1468e-01, -1.3633e-01, -1.1064e-01,  1.1597e-01,
         -6.2583e-02,  5.0834e-02,  4.6007e-02,  7.2283e-02, -7.7374e-02,
         -4.7387e-02, -4.6636e-02, -2.8049e-01,  5.8683e-02,  4.3309e-01,
         -7.1809e-03,  6.4954e-02, -6.2920e-02,  1.4285e-01,  2.4547e-01,
          1.6148e-01,  2.6815e-01, -1.2315e-01, -1.9433e-01,  3.0878e-02,
         -6.0374e-03]], device='cuda:0') tensor(0.2485, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
116000 特征值优化 tensor(2.1720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3092e-01,  9.9029e-01, -8.0755e-01, -1.1066e+00,  4.0922e+00,
          2.8054e+00,  1.3314e+00, -3.7801e-01, -2.6326e-01,  7.4507e-02,
         -1.4380e-01,  9.8086e-02,  1.8870e-03,  4.6273e-01,  1.7883e-01,
          9.5733e-01, -5.9684e-01, -1.6364e-02,  1.0874e+00, -7.4679e-01,
         -1.2232e-01,  7.4503e-03,  1.8834e-01,  8.1407e-02,  1.0222e+00,
         -5.9192e-01, -7.3210e-02, -5.7674e-02,  9.1956e-02,  7.3907e-02,
         -1.4329e-01,  6.0335e-02,  1.8851e-01,  1.2584e-03,  7.2141e-01,
         -2.8029e-01,  3.2631e-01, -2.7004e-02,  2.5958e-01, -5.5654e-01,
         -3.5731e-01, -5.2465e-01,  5.8138e-01,  6.5422e-02, -2.9590e-01,
         -1.4029e-01,  1.1669e-01, -1.1610e-01,  3.8193e-01,  6.7879e-01,
         -2.4721e-01, -1.0944e-01, -2.9796e-01,  4.7673e-01, -2.3045e-01,
          1.6717e-02, -6.0508e-02, -6.4113e-02,  5.4631e-01, -6.3472e-02,
         -3.0345e-01,  7.6499e-02, -6.2538e-01, -2.6004e-01,  1.0557e-01,
         -1.8908e-01, -1.2137e-02, -1.5081e-01, -1.5503e-01,  1.8174e-02,
          9.9480e-02,  2.0971e-01,  1.0504e-01, -5.0694e-02,  6.0713e-02,
          8.8605e-02,  1.9616e-01, -6.1763e-02,  1.2544e-01, -2.4357e-02,
         -3.4059e-01, -1.3555e-02, -7.5760e-02,  9.7043e-02, -6.5313e-02,
         -7.5435e-02, -1.0501e-01,  1.7716e-01, -1.4818e-01, -3.8000e-01,
         -1.2357e-01,  4.1914e-01, -3.5191e-01,  3.3593e-01,  7.8203e-01,
          2.6890e-01,  2.9165e-02, -4.3481e-01, -7.7001e-01,  7.6747e-02,
         -7.9857e-01, -1.0934e-01, -1.0869e+00, -1.8267e-01,  8.3876e-02,
         -7.4761e-01, -7.0513e-01,  1.7947e-01, -2.1685e-01, -7.0468e-03,
          1.2142e-01,  2.5086e-01, -1.2375e-02, -4.0600e-02,  7.6233e-02,
          9.1403e-02, -1.0862e-02, -1.6519e-01,  4.5375e-02, -2.2361e-02,
         -2.1767e-02, -1.0977e-01, -1.1004e-01, -3.1760e-01, -1.0774e-01,
          3.1929e-01,  2.3242e-01,  1.6700e-01, -3.2023e-01,  1.8908e-02,
          6.1904e-02,  1.5599e-01, -9.0893e-02, -1.4170e-01, -2.0968e-01,
          1.1175e-01, -1.0687e-01, -1.1802e-01, -1.0924e-01,  1.3920e-01,
         -8.4764e-02,  7.2101e-02,  7.1615e-02,  6.7217e-02, -7.7979e-02,
         -6.2436e-02, -3.9855e-02, -2.5481e-01,  3.7921e-02,  4.0808e-01,
          6.7134e-03,  3.0561e-02, -5.5260e-02,  1.4938e-01,  2.3373e-01,
          1.6256e-01,  2.6110e-01, -1.2544e-01, -1.9249e-01,  4.1242e-02,
         -2.9629e-02]], device='cuda:0') tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
117000 特征值优化 tensor(2.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7201e-01,  1.0899e+00, -8.1681e-01, -1.1102e+00,  4.0652e+00,
          2.7753e+00,  1.3495e+00, -4.1111e-01, -2.9923e-01,  4.2627e-02,
         -1.0434e-01,  1.2423e-01,  2.1776e-02,  4.4466e-01,  1.3324e-01,
          9.8758e-01, -6.1682e-01, -1.6693e-02,  1.0689e+00, -7.2375e-01,
         -1.0831e-01,  2.4316e-02,  1.9496e-01,  3.8055e-02,  1.0015e+00,
         -6.2078e-01, -4.9952e-02, -5.9557e-02,  9.7665e-02,  2.5437e-02,
         -1.1670e-01,  6.6085e-02,  1.7673e-01,  1.2283e-02,  7.5403e-01,
         -2.7585e-01,  3.4636e-01, -3.6300e-02,  3.2647e-01, -5.5116e-01,
         -3.6578e-01, -5.2512e-01,  5.7876e-01,  6.6427e-02, -2.5309e-01,
         -1.4881e-01,  1.4410e-01, -1.2434e-01,  3.7031e-01,  6.7018e-01,
         -2.4517e-01, -1.3749e-01, -2.9825e-01,  4.7392e-01, -2.1755e-01,
         -8.9874e-03, -3.0717e-02, -4.5355e-02,  5.4711e-01, -7.2235e-02,
         -2.9047e-01,  8.3386e-02, -6.1816e-01, -2.5947e-01,  9.8959e-02,
         -1.9481e-01,  4.4542e-04, -1.5664e-01, -1.6034e-01,  2.3255e-02,
          1.2269e-01,  1.9909e-01,  8.3105e-02, -4.5220e-02,  6.3919e-02,
          8.4395e-02,  1.9594e-01, -7.6625e-02,  9.7860e-02, -1.5469e-02,
         -3.1842e-01, -4.6429e-03, -7.9209e-02,  1.1017e-01, -5.7867e-02,
         -6.4501e-02, -1.0018e-01,  1.6348e-01, -1.3665e-01, -3.7044e-01,
         -1.0950e-01,  3.8105e-01, -3.4689e-01,  3.4544e-01,  7.8453e-01,
          2.7373e-01,  5.7351e-02, -4.1949e-01, -7.9977e-01,  7.8839e-02,
         -7.9752e-01, -1.2047e-01, -1.0615e+00, -1.9311e-01,  8.7516e-02,
         -7.7927e-01, -7.1551e-01,  1.6262e-01, -2.2395e-01, -1.0777e-02,
          1.0523e-01,  2.4071e-01, -2.5195e-02, -5.4807e-02,  6.9883e-02,
          1.0933e-01, -7.6156e-03, -1.4670e-01,  4.4090e-02, -1.0420e-02,
         -3.2072e-02, -1.1441e-01, -1.0469e-01, -3.4079e-01, -1.0485e-01,
          3.2134e-01,  2.4905e-01,  1.7308e-01, -3.3401e-01,  3.7069e-02,
          7.7138e-02,  1.5982e-01, -9.8495e-02, -1.4377e-01, -1.8475e-01,
          1.2108e-01, -1.1111e-01, -1.2157e-01, -1.3848e-01,  1.1333e-01,
         -1.2222e-01,  6.8394e-02,  8.6757e-02,  6.3167e-02, -5.5173e-02,
         -6.4067e-02, -5.9931e-02, -2.6292e-01,  4.5289e-02,  4.1192e-01,
          4.1482e-03,  1.0508e-02, -5.4100e-02,  1.3698e-01,  2.3557e-01,
          1.6771e-01,  2.5112e-01, -1.3620e-01, -1.9414e-01,  2.0318e-02,
         -1.6951e-02]], device='cuda:0') tensor(0.2167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
118000 特征值优化 tensor(2.1261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1754e-01,  1.2214e+00, -8.8648e-01, -1.1296e+00,  4.0198e+00,
          2.6859e+00,  1.3026e+00, -3.8835e-01, -3.0214e-01, -7.3138e-03,
         -4.9220e-02,  7.7984e-02,  4.8844e-02,  4.4574e-01,  8.3217e-02,
          9.1668e-01, -6.0860e-01,  1.4200e-02,  1.0748e+00, -7.6706e-01,
         -9.4841e-02,  3.1318e-02,  1.8012e-01,  2.1853e-02,  9.9184e-01,
         -6.1542e-01, -6.2772e-02, -9.3246e-02,  7.5187e-02,  2.9564e-02,
         -9.3832e-02,  1.1371e-01,  1.6895e-01,  1.3357e-02,  8.1658e-01,
         -3.5096e-01,  3.5791e-01, -4.2467e-02,  3.8357e-01, -4.6939e-01,
         -3.2217e-01, -5.3813e-01,  6.0992e-01,  6.5374e-02, -2.3574e-01,
         -1.2078e-01,  1.5663e-01, -9.4465e-02,  4.5093e-01,  6.3983e-01,
         -2.2863e-01, -1.5351e-01, -3.1651e-01,  4.6818e-01, -2.0119e-01,
          9.2671e-03, -3.6474e-02,  1.5917e-02,  5.4626e-01, -7.4203e-02,
         -3.1168e-01,  8.8574e-02, -6.1067e-01, -2.4879e-01,  9.2949e-02,
         -2.4011e-01, -5.0524e-02, -1.7547e-01, -1.0397e-01, -1.3484e-02,
          1.4111e-01,  1.9326e-01,  9.1102e-02, -5.4081e-02,  5.1821e-02,
          8.1382e-02,  2.2119e-01, -6.7206e-02,  8.5814e-02, -2.1603e-02,
         -2.6484e-01,  2.1026e-02, -3.8265e-02,  8.5995e-02, -1.1397e-02,
         -4.5319e-02, -9.5874e-02,  1.5936e-01, -9.7841e-02, -4.1951e-01,
         -7.2487e-02,  3.3280e-01, -4.0617e-01,  3.2846e-01,  7.2612e-01,
          3.1580e-01,  8.8949e-02, -4.1603e-01, -7.5782e-01,  7.6358e-02,
         -8.2341e-01, -1.6338e-01, -1.0803e+00, -1.8752e-01,  7.7458e-02,
         -8.2280e-01, -6.8592e-01,  2.0210e-01, -2.3804e-01,  1.3617e-03,
          9.7193e-02,  2.5003e-01, -2.1109e-02, -6.4285e-02,  5.6984e-02,
          1.3747e-01, -5.2302e-03, -1.1962e-01,  5.0155e-02,  3.6308e-02,
         -1.0145e-01, -1.2386e-01, -1.2144e-01, -3.2437e-01, -1.1174e-01,
          3.2093e-01,  2.5563e-01,  1.6612e-01, -3.1400e-01,  3.4079e-02,
          6.3679e-02,  1.6234e-01, -1.0211e-01, -1.4421e-01, -1.6690e-01,
          1.0655e-01, -1.3141e-01, -1.0621e-01, -1.0745e-01,  1.0978e-01,
         -9.8361e-02,  2.6851e-02,  1.0378e-01,  5.2715e-02, -3.9413e-02,
         -6.5741e-02, -1.0754e-01, -2.7581e-01,  7.2315e-02,  3.7167e-01,
          4.7841e-02,  2.9336e-03, -8.1232e-02,  1.3277e-01,  2.3586e-01,
          1.7181e-01,  2.9692e-01, -1.4691e-01, -1.1902e-01, -1.5358e-02,
         -8.2970e-03]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
119000 特征值优化 tensor(2.2293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7596e-01,  1.3330e+00, -9.2240e-01, -1.1560e+00,  3.9370e+00,
          2.6200e+00,  1.2472e+00, -5.0796e-01, -2.4175e-01, -1.0492e-01,
          2.9503e-02,  1.2221e-01,  6.5699e-02,  4.2872e-01,  3.6500e-02,
          8.7673e-01, -6.6469e-01,  2.5804e-02,  1.0681e+00, -8.3520e-01,
         -6.7922e-02,  7.6706e-02,  1.6546e-01, -7.8283e-02,  1.0051e+00,
         -6.2322e-01, -5.2994e-02, -1.4706e-01,  1.2692e-01,  2.9453e-03,
         -5.2640e-02,  1.0041e-01,  1.9338e-01,  3.2736e-02,  8.6801e-01,
         -3.3893e-01,  3.6717e-01, -2.8603e-02,  4.3329e-01, -4.4166e-01,
         -3.0136e-01, -5.2723e-01,  5.9860e-01,  5.3670e-02, -2.0014e-01,
         -1.2041e-01,  1.9830e-01, -6.4163e-02,  4.5549e-01,  5.8679e-01,
         -1.8798e-01, -1.7521e-01, -3.3853e-01,  4.7577e-01, -1.6773e-01,
          4.2835e-02, -4.3192e-02,  3.9888e-02,  5.4267e-01, -1.1849e-01,
         -2.9316e-01,  1.0047e-01, -6.0788e-01, -2.4212e-01,  6.4136e-02,
         -2.7059e-01, -5.3049e-02, -2.0465e-01, -8.7807e-02, -2.1057e-02,
          1.7057e-01,  1.2657e-01,  8.1314e-02, -6.4882e-02,  6.3888e-02,
          8.9293e-02,  2.0881e-01, -6.5295e-02,  6.2069e-02, -2.0218e-02,
         -2.1963e-01,  3.5989e-02, -1.6583e-02,  9.1397e-02, -2.4636e-02,
         -5.5661e-02, -8.7743e-02,  1.6448e-01, -5.6989e-02, -4.1275e-01,
         -3.6191e-02,  2.4764e-01, -3.7861e-01,  3.4357e-01,  7.2011e-01,
          3.1801e-01,  1.0874e-01, -4.6157e-01, -7.8426e-01,  5.1059e-02,
         -8.0045e-01, -1.9778e-01, -1.0013e+00, -1.9646e-01,  9.8624e-02,
         -8.9039e-01, -6.7069e-01,  1.9248e-01, -2.6280e-01, -1.4266e-02,
          7.7737e-02,  2.4290e-01, -3.1523e-02, -7.0598e-02,  6.8682e-02,
          1.4235e-01, -1.8403e-02, -8.5884e-02,  4.3476e-02,  8.2084e-02,
         -8.9428e-02, -1.3332e-01, -1.1006e-01, -3.7860e-01, -1.2739e-01,
          3.3877e-01,  2.5325e-01,  1.3909e-01, -3.0125e-01,  7.9890e-02,
          7.9387e-02,  1.3611e-01, -1.0673e-01, -1.2084e-01, -1.2570e-01,
          1.1268e-01, -1.3372e-01, -9.8882e-02, -8.2229e-02,  9.0660e-02,
         -1.3912e-01,  2.8241e-02,  9.1588e-02,  6.6576e-02, -1.0542e-02,
         -8.1893e-02, -1.2771e-01, -3.1254e-01,  8.2634e-02,  3.5079e-01,
         -3.9993e-03, -3.3442e-02, -7.6188e-02,  1.3723e-01,  2.1731e-01,
          1.6551e-01,  2.7660e-01, -1.7954e-01, -1.2319e-01, -4.9628e-02,
          1.4545e-02]], device='cuda:0') tensor(0.2522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
120000 特征值优化 tensor(2.1234, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5747e-01,  1.4314e+00, -9.3465e-01, -1.1520e+00,  3.8672e+00,
          2.5403e+00,  1.2328e+00, -6.2243e-01, -2.2104e-01, -1.8781e-01,
          8.0105e-02,  1.7510e-01,  3.8789e-02,  3.6852e-01,  3.2055e-02,
          8.3241e-01, -6.8240e-01,  4.6111e-02,  1.0513e+00, -9.1927e-01,
         -4.9647e-02,  8.9161e-02,  1.3635e-01, -1.6098e-01,  1.0378e+00,
         -6.2802e-01, -5.2307e-02, -1.1700e-01,  1.4530e-01, -3.2606e-03,
         -3.5233e-02,  1.2416e-01,  1.8724e-01,  1.5168e-02,  8.8377e-01,
         -3.4317e-01,  3.9659e-01, -2.1526e-02,  4.6305e-01, -4.0954e-01,
         -2.8432e-01, -5.2784e-01,  5.8505e-01,  5.6392e-02, -1.8460e-01,
         -1.1772e-01,  1.9005e-01, -5.5476e-02,  4.4356e-01,  5.6598e-01,
         -1.4267e-01, -1.9314e-01, -3.4627e-01,  4.5926e-01, -1.5759e-01,
          5.1576e-02, -5.2281e-02,  7.8146e-02,  5.2684e-01, -1.5681e-01,
         -3.2593e-01,  9.3408e-02, -5.8746e-01, -2.3649e-01,  6.2745e-02,
         -2.9327e-01, -7.5080e-02, -2.2643e-01, -6.5445e-02, -5.5000e-02,
          1.8668e-01,  1.0342e-01,  1.0240e-01, -5.9509e-02,  7.3055e-02,
          1.0745e-01,  2.2484e-01, -8.5484e-02,  4.3821e-02, -1.9613e-02,
         -1.8448e-01,  5.5164e-02, -1.1238e-02,  9.0427e-02, -3.4993e-02,
         -6.4762e-02, -1.1354e-01,  1.4796e-01, -3.8486e-03, -3.9144e-01,
         -2.7282e-02,  2.3813e-01, -3.8944e-01,  3.4333e-01,  7.1267e-01,
          3.3489e-01,  1.2770e-01, -4.8958e-01, -7.4924e-01,  5.0571e-02,
         -8.0354e-01, -2.0683e-01, -1.0098e+00, -2.0393e-01,  9.9241e-02,
         -8.9386e-01, -6.3788e-01,  1.8956e-01, -2.6878e-01, -3.8858e-02,
          7.3771e-02,  2.7510e-01, -3.3640e-02, -5.3423e-02,  6.9643e-02,
          1.4237e-01, -2.1154e-02, -8.8165e-02,  6.7661e-02,  1.1071e-01,
         -7.4293e-02, -1.3275e-01, -1.0073e-01, -3.6751e-01, -1.1721e-01,
          3.2943e-01,  2.4837e-01,  1.5112e-01, -3.0347e-01,  9.6804e-02,
          4.8211e-02,  1.3350e-01, -9.5616e-02, -1.1705e-01, -1.2801e-01,
          1.1187e-01, -1.4993e-01, -8.0414e-02, -6.5700e-02,  8.3991e-02,
         -1.1361e-01,  4.9604e-02,  1.0969e-01,  7.0224e-02,  4.1757e-03,
         -9.5586e-02, -1.3648e-01, -3.2399e-01,  7.4312e-02,  3.5647e-01,
          1.0164e-04, -4.2688e-02, -6.8663e-02,  1.4439e-01,  1.8760e-01,
          1.5414e-01,  2.5118e-01, -1.8154e-01, -9.9292e-02, -5.1157e-02,
          2.3681e-02]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
121000 特征值优化 tensor(2.0959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2576e-01,  1.4782e+00, -9.1562e-01, -1.1605e+00,  3.8213e+00,
          2.4814e+00,  1.2233e+00, -6.9424e-01, -1.9522e-01, -2.3458e-01,
          1.0133e-01,  1.9815e-01,  4.7597e-02,  3.6108e-01,  2.4343e-02,
          8.1892e-01, -6.9352e-01,  4.9829e-02,  1.0381e+00, -9.7698e-01,
         -3.5650e-02,  1.0680e-01,  1.0936e-01, -2.1585e-01,  1.0492e+00,
         -6.4211e-01, -2.4318e-02, -1.1065e-01,  1.6272e-01,  2.4664e-03,
         -1.0879e-02,  1.3756e-01,  1.8563e-01,  2.8461e-02,  8.8814e-01,
         -3.2381e-01,  4.1210e-01, -1.7333e-03,  4.9469e-01, -3.9944e-01,
         -2.7158e-01, -5.2833e-01,  5.8912e-01,  5.2105e-02, -1.9655e-01,
         -1.3216e-01,  1.9146e-01, -3.9696e-02,  4.2463e-01,  5.5968e-01,
         -1.1142e-01, -1.9734e-01, -3.6965e-01,  4.5196e-01, -1.2657e-01,
          4.1813e-02, -4.1027e-02,  6.5826e-02,  5.3423e-01, -2.0539e-01,
         -3.1226e-01,  9.3675e-02, -5.7867e-01, -2.3150e-01,  6.4330e-02,
         -2.9643e-01, -7.9024e-02, -2.3216e-01, -7.1871e-02, -8.9924e-02,
          1.9135e-01,  9.7188e-02,  1.2057e-01, -4.4812e-02,  8.2194e-02,
          1.1575e-01,  2.1418e-01, -8.5120e-02,  4.1300e-02, -2.0925e-02,
         -1.4243e-01,  4.9274e-02, -1.2301e-02,  8.5205e-02, -3.2073e-02,
         -6.8705e-02, -1.3746e-01,  1.4745e-01,  6.0496e-03, -3.7911e-01,
         -3.5091e-02,  2.3578e-01, -4.0321e-01,  3.3721e-01,  7.2227e-01,
          3.2559e-01,  1.2597e-01, -4.9029e-01, -7.6476e-01,  3.6010e-02,
         -8.0632e-01, -2.1655e-01, -1.0216e+00, -2.0302e-01,  1.0432e-01,
         -9.2228e-01, -6.3433e-01,  1.9630e-01, -2.5859e-01, -3.7242e-02,
          7.1237e-02,  2.8779e-01, -2.2643e-02, -5.2494e-02,  6.5465e-02,
          1.2966e-01, -2.8011e-02, -8.5775e-02,  8.5143e-02,  1.2287e-01,
         -6.1124e-02, -1.3036e-01, -9.5208e-02, -3.5175e-01, -1.1428e-01,
          3.0830e-01,  2.3697e-01,  1.7156e-01, -2.8491e-01,  9.3622e-02,
          2.3908e-02,  1.3604e-01, -7.8984e-02, -1.2229e-01, -1.4124e-01,
          1.1755e-01, -1.6437e-01, -5.4549e-02, -6.2759e-02,  8.5471e-02,
         -1.2250e-01,  5.3183e-02,  1.2326e-01,  6.2413e-02,  2.2329e-02,
         -9.8124e-02, -1.3632e-01, -3.2454e-01,  5.7917e-02,  3.5315e-01,
         -8.7809e-03, -5.0265e-02, -5.7757e-02,  1.3526e-01,  1.5898e-01,
          1.3659e-01,  2.6428e-01, -1.7661e-01, -1.0842e-01, -7.0363e-02,
          2.4644e-02]], device='cuda:0') tensor(0.2185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
122000 特征值优化 tensor(2.1830, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1083e-01,  1.5052e+00, -9.1841e-01, -1.1703e+00,  3.7516e+00,
          2.4661e+00,  1.2271e+00, -7.6905e-01, -1.9653e-01, -2.8508e-01,
          1.0590e-01,  2.0883e-01,  3.4327e-02,  3.5751e-01,  5.9742e-02,
          7.8957e-01, -7.3774e-01,  3.6421e-02,  1.0139e+00, -9.9711e-01,
         -5.6527e-03,  1.1729e-01,  9.4665e-02, -2.6940e-01,  1.0501e+00,
         -6.4487e-01, -2.0567e-03, -1.1378e-01,  1.9014e-01,  1.8413e-02,
          1.1724e-02,  1.2184e-01,  1.7977e-01,  1.7612e-02,  9.0056e-01,
         -3.0643e-01,  4.0854e-01, -6.5959e-03,  5.0664e-01, -3.8056e-01,
         -2.5213e-01, -5.2879e-01,  5.8895e-01,  6.8577e-02, -2.1682e-01,
         -1.0226e-01,  2.0196e-01, -4.8722e-02,  4.2398e-01,  5.5995e-01,
         -1.0647e-01, -1.9084e-01, -3.8721e-01,  4.1918e-01, -1.0045e-01,
          1.5363e-02, -3.4871e-02,  8.4200e-02,  5.2685e-01, -2.2089e-01,
         -2.8085e-01,  9.6810e-02, -5.7084e-01, -2.2265e-01,  6.9403e-02,
         -2.9565e-01, -7.7080e-02, -2.4056e-01, -4.1246e-02, -1.0334e-01,
          2.1612e-01,  7.3155e-02,  1.2088e-01, -6.2275e-02,  9.8714e-02,
          1.0875e-01,  2.0047e-01, -8.4686e-02,  4.3469e-03, -2.4587e-02,
         -1.2144e-01,  6.0317e-02, -6.0790e-04,  8.7789e-02, -4.7271e-02,
         -6.3302e-02, -1.4871e-01,  1.7982e-01, -2.2787e-03, -3.1732e-01,
         -2.3635e-02,  2.2449e-01, -4.1228e-01,  3.5222e-01,  7.2620e-01,
          3.3020e-01,  1.1583e-01, -5.4044e-01, -7.5873e-01,  3.6186e-02,
         -8.0927e-01, -2.0832e-01, -1.0207e+00, -1.8981e-01,  1.1119e-01,
         -9.4554e-01, -6.3040e-01,  1.7475e-01, -2.7617e-01, -3.9967e-02,
          7.4067e-02,  2.8193e-01, -2.8991e-02, -4.7408e-02,  6.6000e-02,
          1.3837e-01, -3.3233e-02, -7.6117e-02,  8.6239e-02,  1.4928e-01,
         -5.0022e-02, -1.3074e-01, -8.4062e-02, -3.4999e-01, -1.2689e-01,
          3.1314e-01,  2.4607e-01,  1.7510e-01, -2.9093e-01,  1.0299e-01,
          2.9253e-02,  1.4925e-01, -8.5785e-02, -1.2442e-01, -1.2758e-01,
          9.2842e-02, -1.6344e-01, -7.2284e-02, -5.3737e-02,  7.1871e-02,
         -1.2318e-01,  3.6766e-02,  1.1298e-01,  6.0891e-02,  2.9559e-02,
         -1.0478e-01, -1.6167e-01, -3.4395e-01,  3.9185e-02,  3.3850e-01,
         -2.8247e-02, -5.2782e-02, -6.4250e-02,  1.3874e-01,  1.4343e-01,
          1.1745e-01,  2.6630e-01, -1.4797e-01, -1.1837e-01, -7.1088e-02,
          4.1432e-02]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
123000 特征值优化 tensor(2.0910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2195e-01,  1.5291e+00, -8.6318e-01, -1.1686e+00,  3.6387e+00,
          2.4542e+00,  1.2226e+00, -8.0783e-01, -1.8859e-01, -3.1030e-01,
          1.2412e-01,  1.7634e-01,  3.2564e-03,  3.4586e-01,  6.6664e-02,
          7.7967e-01, -7.6961e-01,  2.2419e-04,  9.7382e-01, -1.0009e+00,
          4.3839e-02,  1.4927e-01,  9.0708e-02, -3.2695e-01,  1.0380e+00,
         -6.5145e-01,  8.7106e-03, -1.1597e-01,  2.1376e-01,  3.3364e-02,
          2.3131e-03,  1.3754e-01,  1.4078e-01,  3.4617e-03,  8.7836e-01,
         -2.9257e-01,  4.1594e-01, -8.5827e-03,  5.3440e-01, -3.6055e-01,
         -2.5274e-01, -5.3601e-01,  5.8849e-01,  9.6196e-02, -2.2693e-01,
         -1.0952e-01,  2.1027e-01, -5.8086e-02,  4.2302e-01,  5.8577e-01,
         -1.0584e-01, -2.0114e-01, -3.8358e-01,  3.9578e-01, -9.0757e-02,
         -2.2761e-02, -1.6548e-02,  8.8259e-02,  5.1615e-01, -2.3837e-01,
         -2.4616e-01,  1.0340e-01, -5.8664e-01, -2.1855e-01,  8.4661e-02,
         -2.9325e-01, -7.9852e-02, -2.4362e-01, -1.9127e-02, -8.3686e-02,
          2.3856e-01,  3.8092e-02,  1.0783e-01, -5.9459e-02,  9.3319e-02,
          1.0888e-01,  1.9948e-01, -8.3226e-02, -1.1307e-02, -1.5994e-02,
         -1.1687e-01,  5.8015e-02,  2.5824e-02,  7.2603e-02, -6.9424e-02,
         -5.2753e-02, -1.2474e-01,  2.0957e-01,  1.4252e-02, -3.0568e-01,
         -2.6259e-02,  2.1937e-01, -3.9319e-01,  3.8670e-01,  7.0802e-01,
          3.3541e-01,  9.8115e-02, -5.8173e-01, -7.3387e-01,  2.3650e-02,
         -7.7982e-01, -1.7614e-01, -1.0150e+00, -1.8226e-01,  1.1917e-01,
         -9.8400e-01, -6.1779e-01,  1.6297e-01, -2.8821e-01, -3.9268e-02,
          7.2960e-02,  2.6498e-01, -3.7440e-02, -4.3137e-02,  4.9966e-02,
          1.2964e-01, -2.9866e-02, -8.4535e-02,  9.0604e-02,  1.6290e-01,
         -3.1914e-02, -1.3543e-01, -7.3808e-02, -3.6930e-01, -1.4805e-01,
          3.2912e-01,  2.5738e-01,  1.5536e-01, -2.8224e-01,  1.2593e-01,
          4.3557e-02,  1.2928e-01, -1.0073e-01, -1.1327e-01, -1.1483e-01,
          8.7488e-02, -1.7993e-01, -7.1045e-02, -4.9267e-02,  6.0169e-02,
         -1.1341e-01,  3.5115e-02,  1.4106e-01,  5.4040e-02,  4.2203e-02,
         -1.0434e-01, -2.0358e-01, -3.5248e-01,  4.5490e-02,  3.3501e-01,
         -7.1420e-02, -4.4448e-02, -8.7133e-02,  1.2057e-01,  1.4978e-01,
          1.2131e-01,  2.3908e-01, -1.4633e-01, -1.1334e-01, -5.7124e-02,
          6.3244e-02]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
124000 特征值优化 tensor(2.2744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5646e-01,  1.5332e+00, -8.3128e-01, -1.1553e+00,  3.5469e+00,
          2.4421e+00,  1.2167e+00, -8.4583e-01, -1.5137e-01, -3.2536e-01,
          1.5805e-01,  1.5873e-01, -4.5083e-02,  3.4106e-01,  9.9331e-02,
          7.7715e-01, -7.9683e-01, -2.3662e-02,  9.4658e-01, -1.0307e+00,
          7.8799e-02,  1.8406e-01,  8.7295e-02, -3.7418e-01,  1.0261e+00,
         -6.7879e-01,  2.2141e-02, -1.1294e-01,  2.1132e-01,  5.6670e-02,
          1.6208e-02,  1.7318e-01,  1.2873e-01, -1.4348e-02,  8.9971e-01,
         -2.8921e-01,  4.3560e-01, -1.2471e-02,  5.5892e-01, -3.5271e-01,
         -2.3099e-01, -5.2613e-01,  5.8391e-01,  1.0117e-01, -2.4096e-01,
         -7.8937e-02,  2.2226e-01, -7.3346e-02,  4.1388e-01,  6.2367e-01,
         -1.0833e-01, -2.2487e-01, -3.9206e-01,  3.8378e-01, -6.7710e-02,
         -4.8689e-02, -7.3142e-04,  7.6656e-02,  5.0841e-01, -2.6530e-01,
         -2.3951e-01,  1.0733e-01, -5.8330e-01, -2.1970e-01,  7.7767e-02,
         -2.8301e-01, -7.3656e-02, -2.4423e-01, -1.0423e-02, -9.4344e-02,
          2.6381e-01,  3.4731e-02,  9.9704e-02, -5.7660e-02,  1.0222e-01,
          1.1659e-01,  2.0463e-01, -8.6061e-02, -3.1046e-02, -1.5036e-02,
         -9.0664e-02,  7.2817e-02,  3.7939e-02,  4.0356e-02, -6.9833e-02,
         -3.7511e-02, -1.3266e-01,  2.3519e-01,  2.8830e-02, -3.2214e-01,
          4.3644e-03,  1.7833e-01, -3.9918e-01,  4.0502e-01,  7.0808e-01,
          3.1306e-01,  7.0732e-02, -5.8620e-01, -6.9038e-01,  2.4229e-02,
         -7.9844e-01, -1.4448e-01, -1.0326e+00, -1.9427e-01,  1.2734e-01,
         -9.8957e-01, -5.9182e-01,  1.6050e-01, -3.0566e-01, -4.5600e-02,
          7.4848e-02,  2.7584e-01, -1.6368e-02, -2.7511e-02,  5.7016e-02,
          1.1137e-01, -3.5665e-02, -1.0004e-01,  9.0443e-02,  1.6080e-01,
         -4.5792e-02, -1.4428e-01, -6.3223e-02, -3.3459e-01, -1.5775e-01,
          3.2725e-01,  2.7766e-01,  1.4285e-01, -2.8688e-01,  8.8758e-02,
          6.0800e-02,  1.4351e-01, -1.0384e-01, -1.2376e-01, -1.0753e-01,
          7.2611e-02, -1.7875e-01, -4.4409e-02, -5.2385e-02,  6.2873e-02,
         -1.0077e-01,  5.5603e-02,  1.4120e-01,  5.7355e-02,  1.5467e-02,
         -1.1305e-01, -2.1451e-01, -3.6653e-01,  4.2870e-02,  3.1354e-01,
         -1.0132e-01, -5.1818e-02, -9.1052e-02,  1.1697e-01,  1.4409e-01,
          1.0531e-01,  2.1874e-01, -1.3793e-01, -1.0249e-01, -5.0871e-02,
          7.2389e-02]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
125000 特征值优化 tensor(2.1079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7199e-01,  1.4978e+00, -7.8337e-01, -1.1670e+00,  3.4970e+00,
          2.4180e+00,  1.2288e+00, -8.8031e-01, -1.5181e-01, -3.3677e-01,
          1.4274e-01,  1.4845e-01, -4.7515e-02,  3.3701e-01,  1.0280e-01,
          7.2688e-01, -7.7601e-01, -2.6962e-02,  9.4433e-01, -1.0538e+00,
          6.9519e-02,  2.2929e-01,  3.1847e-02, -4.1764e-01,  1.0613e+00,
         -6.9706e-01,  6.7167e-02, -9.2901e-02,  2.0620e-01,  5.5469e-02,
          1.1185e-02,  1.9965e-01,  1.4421e-01, -1.6241e-02,  8.7649e-01,
         -2.8012e-01,  4.1493e-01, -2.0643e-02,  5.6529e-01, -3.5615e-01,
         -2.0392e-01, -5.3460e-01,  5.9584e-01,  9.7277e-02, -2.4307e-01,
         -8.4780e-02,  2.1026e-01, -9.0950e-02,  4.2528e-01,  6.2373e-01,
         -9.3858e-02, -2.1605e-01, -3.7822e-01,  3.7619e-01, -6.9160e-02,
         -5.3621e-02, -1.8304e-02,  1.0699e-01,  5.0280e-01, -2.7296e-01,
         -2.0152e-01,  1.0928e-01, -5.7313e-01, -2.3116e-01,  9.1411e-02,
         -2.6468e-01, -5.3854e-02, -2.5388e-01, -1.7554e-02, -1.1053e-01,
          2.5127e-01, -2.0444e-03,  1.2173e-01, -4.1844e-02,  1.0613e-01,
          9.9259e-02,  2.1687e-01, -9.4442e-02, -3.1013e-02, -1.6747e-02,
         -6.0858e-02,  8.7537e-02,  3.6099e-02,  6.3123e-02, -6.9855e-02,
         -7.8440e-02, -1.4487e-01,  2.7695e-01,  6.4439e-03, -3.5387e-01,
          6.1560e-03,  1.3323e-01, -3.8288e-01,  4.0712e-01,  7.2905e-01,
          2.9610e-01,  4.9543e-02, -5.8307e-01, -6.4730e-01,  8.6635e-03,
         -8.0423e-01, -1.5761e-01, -1.0231e+00, -1.9148e-01,  1.5881e-01,
         -9.9069e-01, -5.9955e-01,  1.6317e-01, -3.0807e-01, -5.2549e-02,
          8.7531e-02,  2.7216e-01, -1.5912e-02, -1.8427e-02,  5.5400e-02,
          7.6397e-02, -4.4241e-02, -1.1511e-01,  9.2694e-02,  1.9066e-01,
         -3.1596e-02, -1.6709e-01, -7.5661e-02, -3.1474e-01, -1.3862e-01,
          3.2228e-01,  2.5485e-01,  1.4147e-01, -2.6547e-01,  1.0118e-01,
          5.1103e-02,  1.1261e-01, -8.8618e-02, -9.9647e-02, -1.1780e-01,
          7.7825e-02, -2.0996e-01, -3.3415e-02, -3.9004e-02,  9.0776e-02,
         -1.2043e-01,  2.9360e-02,  1.5409e-01,  5.2688e-02,  3.0972e-02,
         -1.0517e-01, -2.1751e-01, -3.7574e-01,  7.7626e-03,  3.1632e-01,
         -8.7563e-02, -5.8879e-02, -7.3141e-02,  1.1495e-01,  1.2560e-01,
          7.4748e-02,  2.3501e-01, -1.1751e-01, -9.2101e-02, -5.5757e-02,
          6.0534e-02]], device='cuda:0') tensor(0.2313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
126000 特征值优化 tensor(2.1421, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5754e-01,  1.4669e+00, -7.5913e-01, -1.1705e+00,  3.4724e+00,
          2.3930e+00,  1.2530e+00, -8.8613e-01, -1.3651e-01, -3.4020e-01,
          1.2661e-01,  1.4509e-01, -3.4983e-02,  3.4311e-01,  1.2142e-01,
          7.1507e-01, -7.7912e-01, -1.6788e-02,  9.3505e-01, -1.0869e+00,
          7.6484e-02,  2.3506e-01,  1.6629e-03, -3.9562e-01,  1.0769e+00,
         -7.0796e-01,  6.4714e-02, -9.2664e-02,  2.2833e-01,  5.2579e-02,
          9.0047e-03,  2.0552e-01,  1.3672e-01, -2.4035e-02,  8.7286e-01,
         -2.8404e-01,  4.1409e-01, -1.9137e-02,  5.6787e-01, -3.4017e-01,
         -1.9881e-01, -5.3049e-01,  5.8739e-01,  9.3135e-02, -2.3649e-01,
         -5.8243e-02,  2.1143e-01, -9.5776e-02,  4.1625e-01,  6.2962e-01,
         -8.1471e-02, -1.9929e-01, -3.9826e-01,  3.7199e-01, -4.9215e-02,
         -3.3247e-02, -3.3863e-02,  1.0284e-01,  5.1201e-01, -2.8301e-01,
         -2.1109e-01,  1.1164e-01, -5.7330e-01, -2.3140e-01,  9.8361e-02,
         -2.4335e-01, -3.5301e-02, -2.4799e-01, -2.5362e-02, -1.3252e-01,
          2.5602e-01, -1.5559e-03,  1.2689e-01, -5.1683e-02,  1.1509e-01,
          8.1662e-02,  2.1229e-01, -9.1826e-02, -3.2719e-02, -1.7406e-02,
         -4.9539e-02,  1.0156e-01,  5.0066e-02,  4.8420e-02, -5.8853e-02,
         -7.3089e-02, -1.6293e-01,  2.7591e-01,  1.0843e-03, -3.7399e-01,
          6.3973e-03,  1.3236e-01, -3.8514e-01,  4.2698e-01,  7.4912e-01,
          2.8419e-01,  4.3714e-02, -5.9046e-01, -6.4317e-01, -2.8552e-04,
         -8.0394e-01, -1.5569e-01, -1.0099e+00, -1.7754e-01,  1.4960e-01,
         -1.0026e+00, -6.1694e-01,  1.7463e-01, -3.1778e-01, -5.0121e-02,
          9.0900e-02,  2.7284e-01, -7.1015e-03, -1.3906e-02,  5.7485e-02,
          7.1358e-02, -6.2662e-02, -1.2119e-01,  9.5904e-02,  1.8384e-01,
         -3.6273e-02, -1.7615e-01, -7.9002e-02, -2.9097e-01, -1.4343e-01,
          3.0956e-01,  2.5714e-01,  1.5437e-01, -2.6572e-01,  7.2403e-02,
          5.3515e-02,  1.1837e-01, -8.7331e-02, -9.9746e-02, -1.1356e-01,
          6.4529e-02, -1.9698e-01, -3.9347e-02, -3.0980e-02,  1.0168e-01,
         -1.2714e-01,  1.3490e-02,  1.4844e-01,  6.0049e-02,  3.2611e-02,
         -1.0610e-01, -2.2055e-01, -3.8230e-01,  5.0569e-03,  3.1261e-01,
         -9.7668e-02, -6.3873e-02, -7.1133e-02,  1.1795e-01,  1.1846e-01,
          7.5488e-02,  2.2307e-01, -1.1890e-01, -8.5059e-02, -5.1131e-02,
          6.5602e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
127000 特征值优化 tensor(2.1061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8800e-01,  1.4432e+00, -7.1759e-01, -1.1723e+00,  3.4555e+00,
          2.4082e+00,  1.2864e+00, -9.0106e-01, -1.6627e-01, -3.4684e-01,
          1.0206e-01,  1.3478e-01, -3.0476e-03,  3.9965e-01,  1.1546e-01,
          6.4496e-01, -7.7239e-01, -5.3020e-02,  9.1862e-01, -1.0618e+00,
          9.4336e-02,  2.7346e-01,  4.1381e-05, -4.5107e-01,  1.0732e+00,
         -7.0801e-01,  6.9979e-02, -8.0931e-02,  2.0107e-01,  6.1310e-02,
          5.0307e-03,  2.2990e-01,  1.4348e-01,  5.3247e-03,  8.6091e-01,
         -2.7612e-01,  3.9653e-01, -3.5755e-02,  5.8511e-01, -3.1924e-01,
         -1.9745e-01, -5.3503e-01,  5.9797e-01,  8.5340e-02, -2.4750e-01,
         -6.4927e-02,  2.0450e-01, -1.1224e-01,  4.4775e-01,  6.2604e-01,
         -7.3297e-02, -1.8991e-01, -3.8631e-01,  3.7624e-01, -5.4678e-02,
         -2.4252e-02, -3.3641e-02,  1.1457e-01,  5.1206e-01, -2.9313e-01,
         -1.9461e-01,  1.1773e-01, -5.7712e-01, -2.2263e-01,  1.2562e-01,
         -2.2763e-01, -2.6519e-02, -2.5189e-01, -3.7076e-02, -1.0983e-01,
          2.6281e-01, -1.8605e-02,  1.1430e-01, -1.0563e-02,  1.0925e-01,
          1.0316e-01,  2.1876e-01, -6.8378e-02, -1.4538e-02, -1.6696e-02,
         -4.0330e-02,  9.4054e-02,  5.7981e-02,  9.1031e-02, -2.8520e-02,
         -6.3771e-02, -1.3089e-01,  3.1010e-01, -1.6220e-02, -3.7111e-01,
          7.0058e-03,  1.3901e-01, -3.5230e-01,  4.3864e-01,  7.2030e-01,
          2.8682e-01,  3.6631e-02, -6.1145e-01, -5.9023e-01, -5.3224e-03,
         -8.2152e-01, -1.6975e-01, -1.0061e+00, -1.6779e-01,  1.5497e-01,
         -1.0342e+00, -5.8351e-01,  1.8419e-01, -3.2124e-01, -4.0387e-02,
          8.9523e-02,  2.7071e-01, -1.4786e-02, -1.4920e-02,  4.5765e-02,
          4.8870e-02, -5.2122e-02, -1.3075e-01,  9.1752e-02,  1.7808e-01,
         -7.6161e-03, -1.8722e-01, -8.1392e-02, -2.9930e-01, -1.3771e-01,
          3.2183e-01,  2.5151e-01,  1.5049e-01, -2.5588e-01,  8.7870e-02,
          5.2972e-02,  1.0376e-01, -9.9889e-02, -8.7688e-02, -1.0532e-01,
          9.4849e-02, -2.2504e-01, -7.8455e-02, -2.7138e-02,  6.9299e-02,
         -1.2851e-01,  2.0290e-02,  1.7498e-01,  3.6298e-02,  2.8391e-02,
         -1.0001e-01, -2.4241e-01, -3.7617e-01, -1.5101e-02,  3.0193e-01,
         -1.0527e-01, -6.4197e-02, -6.0607e-02,  9.3053e-02,  1.2554e-01,
          7.5236e-02,  2.1850e-01, -1.0915e-01, -8.6478e-02, -4.1728e-02,
          7.4447e-02]], device='cuda:0') tensor(0.2487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
128000 特征值优化 tensor(2.1104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2409,  1.3958, -0.7297, -1.1757,  3.4506,  2.4091,  1.3090, -0.9236,
         -0.1220, -0.3731,  0.0755,  0.1220,  0.0264,  0.4410,  0.1205,  0.6223,
         -0.7673, -0.0467,  0.9078, -1.0931,  0.1047,  0.2781, -0.0036, -0.4398,
          1.0666, -0.7051,  0.0837, -0.0540,  0.1986,  0.0886,  0.0191,  0.2540,
          0.1334,  0.0122,  0.8412, -0.2722,  0.3912, -0.0259,  0.5854, -0.3046,
         -0.1952, -0.5304,  0.5892,  0.0841, -0.2725, -0.0542,  0.2156, -0.1151,
          0.4357,  0.6189, -0.0585, -0.1643, -0.3991,  0.3698, -0.0387, -0.0159,
         -0.0383,  0.1094,  0.5252, -0.3029, -0.2018,  0.1268, -0.5731, -0.2170,
          0.1360, -0.2080, -0.0261, -0.2557, -0.0220, -0.1253,  0.2714, -0.0127,
          0.1088, -0.0186,  0.1004,  0.1079,  0.2081, -0.0649, -0.0187, -0.0118,
         -0.0361,  0.1072,  0.0643,  0.0900, -0.0131, -0.0489, -0.1306,  0.3042,
         -0.0367, -0.3729, -0.0080,  0.1541, -0.3315,  0.4439,  0.7376,  0.2762,
          0.0348, -0.6143, -0.5877, -0.0059, -0.8133, -0.1800, -1.0011, -0.1458,
          0.1351, -1.0506, -0.5856,  0.1999, -0.3407, -0.0286,  0.0945,  0.2841,
         -0.0111, -0.0169,  0.0448,  0.0329, -0.0477, -0.1413,  0.1079,  0.1790,
         -0.0087, -0.1867, -0.0869, -0.2778, -0.1414,  0.3083,  0.2525,  0.1667,
         -0.2602,  0.0643,  0.0597,  0.1162, -0.1000, -0.0960, -0.1004,  0.0857,
         -0.2219, -0.0589, -0.0247,  0.0839, -0.1309,  0.0183,  0.1676,  0.0473,
          0.0329, -0.1025, -0.2463, -0.3852, -0.0108,  0.3087, -0.1054, -0.0599,
         -0.0610,  0.0855,  0.1205,  0.0741,  0.2069, -0.1186, -0.0829, -0.0377,
          0.0749]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
129000 特征值优化 tensor(2.0869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1095e-01,  1.3696e+00, -7.0908e-01, -1.1752e+00,  3.4479e+00,
          2.4235e+00,  1.3231e+00, -9.2890e-01, -1.1449e-01, -4.0126e-01,
          5.7335e-02,  1.3949e-01,  6.5909e-02,  4.8684e-01,  1.1353e-01,
          5.6712e-01, -7.2728e-01, -5.4073e-02,  8.7871e-01, -1.0747e+00,
          1.2128e-01,  2.9469e-01, -6.3148e-03, -4.3865e-01,  1.0614e+00,
         -7.0246e-01,  8.4722e-02, -5.3582e-02,  2.1304e-01,  1.0170e-01,
          1.3905e-02,  2.6488e-01,  1.1652e-01,  5.5608e-03,  8.3959e-01,
         -2.8493e-01,  3.8127e-01, -4.0730e-02,  5.9815e-01, -2.8906e-01,
         -2.0095e-01, -5.2985e-01,  5.8092e-01,  8.5303e-02, -2.8771e-01,
         -3.6875e-02,  1.9969e-01, -1.2838e-01,  4.3524e-01,  6.1700e-01,
         -5.8210e-02, -1.4548e-01, -4.0552e-01,  3.6321e-01, -4.0396e-02,
         -2.2356e-02, -6.2611e-02,  1.2385e-01,  5.5241e-01, -3.1385e-01,
         -1.6976e-01,  1.1909e-01, -5.7536e-01, -2.0982e-01,  1.2256e-01,
         -1.9048e-01, -3.2740e-02, -2.6857e-01, -4.8362e-02, -1.2489e-01,
          2.8558e-01, -1.1952e-02,  1.0661e-01, -1.3895e-02,  1.1018e-01,
          9.3245e-02,  2.0203e-01, -5.6704e-02, -2.8348e-02, -1.3628e-02,
         -3.9938e-02,  1.0210e-01,  6.8951e-02,  1.1242e-01, -8.7216e-03,
         -3.2045e-02, -1.3738e-01,  3.1391e-01, -5.3296e-02, -3.3815e-01,
         -2.3830e-03,  1.6725e-01, -3.2574e-01,  4.4113e-01,  7.2659e-01,
          2.8375e-01,  2.5044e-02, -6.2645e-01, -5.7570e-01, -2.5857e-02,
         -8.0999e-01, -1.7291e-01, -9.7935e-01, -1.2392e-01,  1.3554e-01,
         -1.0645e+00, -6.0100e-01,  2.1281e-01, -3.5148e-01, -1.9281e-02,
          1.0825e-01,  2.7636e-01, -1.1365e-02, -3.5308e-02,  4.3761e-02,
          2.3894e-03, -4.2162e-02, -1.3997e-01,  1.0213e-01,  1.9658e-01,
         -7.4511e-04, -1.8788e-01, -1.0314e-01, -2.7954e-01, -1.5355e-01,
          3.0952e-01,  2.6657e-01,  1.7057e-01, -2.6981e-01,  6.1333e-02,
          5.0214e-02,  1.1694e-01, -1.0293e-01, -8.9969e-02, -9.3028e-02,
          9.3559e-02, -2.4899e-01, -6.7256e-02,  1.9138e-02,  9.3456e-02,
         -1.3334e-01, -2.6634e-02,  1.7298e-01,  4.5690e-02,  3.7343e-02,
         -1.0216e-01, -2.5896e-01, -3.9358e-01, -1.9729e-02,  3.0828e-01,
         -1.0543e-01, -5.6506e-02, -7.3472e-02,  8.6752e-02,  1.2519e-01,
          7.0386e-02,  2.3735e-01, -1.1371e-01, -1.0048e-01, -3.2958e-02,
          7.5309e-02]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
130000 特征值优化 tensor(2.0821, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1131e-01,  1.3373e+00, -7.0275e-01, -1.1915e+00,  3.4344e+00,
          2.4209e+00,  1.3242e+00, -9.2319e-01, -7.3725e-02, -4.2274e-01,
          4.0829e-02,  1.4537e-01,  7.5065e-02,  4.9032e-01,  1.3782e-01,
          5.4571e-01, -7.1151e-01, -8.0028e-02,  8.5643e-01, -1.0698e+00,
          1.2758e-01,  3.1656e-01,  8.5775e-03, -4.4155e-01,  1.0367e+00,
         -7.0586e-01,  1.2022e-01, -2.7696e-02,  2.0255e-01,  1.2215e-01,
          1.3972e-02,  2.8411e-01,  8.2358e-02,  2.3424e-02,  8.3128e-01,
         -2.7159e-01,  3.7463e-01, -2.2503e-02,  5.9909e-01, -2.9569e-01,
         -1.7577e-01, -5.2715e-01,  5.8937e-01,  6.9055e-02, -3.1450e-01,
         -2.7169e-02,  2.1789e-01, -1.4147e-01,  4.2481e-01,  6.0931e-01,
         -5.2080e-02, -1.3175e-01, -4.0632e-01,  3.7517e-01, -3.7886e-02,
          1.5069e-02, -8.2516e-02,  1.1262e-01,  5.6120e-01, -3.2445e-01,
         -1.9274e-01,  1.2860e-01, -5.6662e-01, -1.9934e-01,  1.3637e-01,
         -1.6730e-01, -3.2329e-02, -2.8153e-01, -5.2389e-02, -1.1120e-01,
          2.8844e-01, -1.9451e-02,  9.5012e-02,  2.8514e-03,  1.0639e-01,
          8.5630e-02,  2.1514e-01, -5.6841e-02, -2.6899e-02, -2.0810e-02,
         -1.4560e-02,  1.1440e-01,  6.3947e-02,  1.0444e-01,  1.0205e-02,
         -2.9290e-02, -1.3579e-01,  3.3285e-01, -9.5145e-02, -3.4109e-01,
         -1.5527e-02,  1.7581e-01, -3.0880e-01,  4.4668e-01,  7.3683e-01,
          2.6447e-01,  1.8155e-02, -6.3872e-01, -5.8175e-01, -1.3202e-02,
         -8.1244e-01, -1.7790e-01, -9.8375e-01, -1.0870e-01,  1.4242e-01,
         -1.0938e+00, -5.9578e-01,  2.2855e-01, -3.6162e-01, -1.4087e-02,
          1.1862e-01,  2.8430e-01, -4.3016e-03, -3.7108e-02,  3.4309e-02,
         -1.9149e-02, -4.4869e-02, -1.5050e-01,  1.2863e-01,  1.8621e-01,
          6.0793e-03, -1.7842e-01, -1.1935e-01, -2.8388e-01, -1.4413e-01,
          3.1858e-01,  2.6910e-01,  1.7395e-01, -2.7465e-01,  6.0253e-02,
          5.9392e-02,  1.0344e-01, -1.1041e-01, -8.6316e-02, -7.8871e-02,
          9.7162e-02, -2.2703e-01, -4.3399e-02, -7.1858e-03,  1.0763e-01,
         -1.3683e-01, -3.0227e-02,  1.7168e-01,  4.2067e-02,  3.3819e-02,
         -1.0473e-01, -2.5210e-01, -3.9157e-01, -1.7524e-02,  3.0289e-01,
         -1.3053e-01, -6.6671e-02, -5.6082e-02,  8.0205e-02,  1.1980e-01,
          6.5706e-02,  2.1986e-01, -1.1002e-01, -8.1069e-02, -3.6040e-02,
          5.9500e-02]], device='cuda:0') tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
131000 特征值优化 tensor(2.1559, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0633e-01,  1.2906e+00, -7.0049e-01, -1.1690e+00,  3.4228e+00,
          2.4327e+00,  1.3334e+00, -9.3379e-01, -2.9773e-02, -4.1691e-01,
          1.9897e-02,  1.6339e-01,  7.0872e-02,  5.0332e-01,  1.4715e-01,
          5.3402e-01, -7.2133e-01, -8.3054e-02,  8.5761e-01, -1.0703e+00,
          1.2386e-01,  3.3763e-01,  9.8696e-03, -4.4922e-01,  1.0400e+00,
         -6.9029e-01,  1.2721e-01, -1.6351e-02,  1.9059e-01,  1.4284e-01,
          1.6826e-02,  2.9348e-01,  5.8278e-02,  2.2086e-02,  8.1132e-01,
         -2.3930e-01,  3.6899e-01, -2.1144e-02,  5.9556e-01, -2.9025e-01,
         -1.7233e-01, -5.2438e-01,  5.9399e-01,  5.5469e-02, -3.2952e-01,
         -3.7574e-02,  1.9873e-01, -1.1702e-01,  4.3044e-01,  6.0247e-01,
         -5.0210e-02, -1.2603e-01, -4.1417e-01,  3.7095e-01, -2.2879e-02,
          2.5228e-02, -6.8037e-02,  1.3228e-01,  5.8359e-01, -3.5117e-01,
         -1.9052e-01,  1.1966e-01, -5.5497e-01, -1.8978e-01,  1.3479e-01,
         -1.5005e-01, -1.2893e-02, -2.8574e-01, -7.4290e-02, -1.1483e-01,
          2.8414e-01, -2.5602e-02,  9.9887e-02, -1.9903e-03,  9.5553e-02,
          7.9320e-02,  2.1351e-01, -6.0947e-02, -1.4002e-02, -1.8657e-02,
         -8.5754e-03,  1.0674e-01,  6.1761e-02,  1.1748e-01,  1.0666e-02,
         -2.0038e-02, -1.1072e-01,  3.2826e-01, -1.2598e-01, -3.2590e-01,
         -4.0663e-02,  1.6480e-01, -2.8883e-01,  4.3177e-01,  7.1839e-01,
          2.6492e-01,  2.1398e-02, -6.3226e-01, -5.9718e-01, -2.3391e-03,
         -8.0673e-01, -1.9744e-01, -9.7994e-01, -9.7676e-02,  1.3334e-01,
         -1.1210e+00, -6.1105e-01,  2.5389e-01, -3.5668e-01, -1.0109e-02,
          1.2966e-01,  2.9516e-01,  6.5303e-04, -3.6125e-02,  3.1807e-02,
         -3.1414e-02, -5.8485e-02, -1.5366e-01,  1.1576e-01,  1.7969e-01,
          2.2660e-02, -1.7088e-01, -1.1069e-01, -2.7955e-01, -1.2880e-01,
          3.1435e-01,  2.5696e-01,  1.8940e-01, -2.6782e-01,  6.8655e-02,
          4.6149e-02,  9.5777e-02, -1.0417e-01, -8.8496e-02, -7.5934e-02,
          9.9987e-02, -2.4621e-01, -4.6242e-02, -8.4208e-03,  1.0538e-01,
         -1.3414e-01, -3.4929e-02,  1.6395e-01,  3.9349e-02,  3.7252e-02,
         -9.8626e-02, -2.5329e-01, -3.9073e-01, -1.6823e-02,  3.0737e-01,
         -1.2434e-01, -7.0949e-02, -5.4268e-02,  8.0141e-02,  1.2779e-01,
          7.0979e-02,  2.2260e-01, -1.1326e-01, -8.6753e-02, -4.8487e-02,
          6.5820e-02]], device='cuda:0') tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
132000 特征值优化 tensor(2.1127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3480e-01,  1.3088e+00, -6.9803e-01, -1.1748e+00,  3.3902e+00,
          2.4227e+00,  1.3387e+00, -9.2774e-01, -3.1457e-02, -4.4297e-01,
          7.7873e-03,  1.7061e-01,  8.1273e-02,  5.2995e-01,  1.5910e-01,
          4.6721e-01, -6.5672e-01, -7.9256e-02,  8.3337e-01, -1.0880e+00,
          1.4348e-01,  3.4304e-01,  1.8433e-02, -4.3583e-01,  1.0476e+00,
         -7.0254e-01,  1.3451e-01, -1.2888e-02,  2.0422e-01,  1.4157e-01,
          3.1994e-02,  2.9658e-01,  3.7072e-02,  6.1906e-03,  8.0900e-01,
         -2.4364e-01,  3.5541e-01, -3.2353e-02,  6.0621e-01, -2.7273e-01,
         -1.7270e-01, -5.3019e-01,  5.9271e-01,  3.6771e-02, -3.3411e-01,
         -2.4815e-02,  1.9677e-01, -1.2423e-01,  4.2549e-01,  5.8211e-01,
         -4.3175e-02, -9.5392e-02, -3.9676e-01,  3.5323e-01, -3.4455e-02,
          3.8738e-02, -1.2131e-01,  1.4003e-01,  5.8778e-01, -3.5158e-01,
         -1.7186e-01,  1.2990e-01, -5.4644e-01, -1.9812e-01,  1.4204e-01,
         -1.5134e-01, -3.1245e-02, -2.9312e-01, -1.1398e-01, -1.1862e-01,
          2.8797e-01, -2.5600e-02,  1.0714e-01,  2.7145e-03,  1.0363e-01,
          7.8057e-02,  2.0514e-01, -6.6015e-02, -4.7075e-02, -2.5120e-02,
         -1.0106e-02,  1.2056e-01,  7.3120e-02,  1.0316e-01,  2.1212e-02,
         -2.6437e-02, -1.2475e-01,  3.6786e-01, -1.4175e-01, -3.0756e-01,
         -3.3945e-02,  1.5458e-01, -2.7379e-01,  4.5252e-01,  7.1207e-01,
          2.7635e-01, -7.4451e-06, -6.7102e-01, -6.0086e-01,  4.9361e-02,
         -8.2226e-01, -2.0372e-01, -9.6589e-01, -6.3161e-02,  1.4929e-01,
         -1.1135e+00, -6.1300e-01,  2.4745e-01, -3.7528e-01, -5.4488e-03,
          1.4389e-01,  3.0643e-01, -1.1583e-02, -5.6751e-02,  1.3813e-02,
         -5.1731e-02, -5.8139e-02, -1.3678e-01,  1.1589e-01,  1.7230e-01,
          1.9501e-02, -1.7984e-01, -1.3420e-01, -2.7078e-01, -1.2962e-01,
          3.1317e-01,  2.6462e-01,  1.9737e-01, -2.7204e-01,  7.1254e-02,
          2.9817e-02,  9.5358e-02, -9.7080e-02, -8.9448e-02, -7.6568e-02,
          8.6120e-02, -2.6430e-01, -2.8598e-02,  2.5600e-02,  1.2901e-01,
         -1.3316e-01, -4.6730e-02,  1.6601e-01,  4.5763e-02,  2.0006e-02,
         -9.2732e-02, -2.6395e-01, -3.9641e-01, -4.4415e-02,  3.0205e-01,
         -1.3252e-01, -7.1912e-02, -6.3774e-02,  8.2561e-02,  1.2222e-01,
          6.2527e-02,  2.2400e-01, -1.0004e-01, -7.6781e-02, -3.3945e-02,
          5.7522e-02]], device='cuda:0') tensor(0.2152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
133000 特征值优化 tensor(2.0716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2263,  1.2981, -0.6665, -1.1706,  3.3590,  2.4002,  1.3178, -0.9293,
         -0.0062, -0.4397, -0.0156,  0.1764,  0.0834,  0.5306,  0.1555,  0.4614,
         -0.6651, -0.0822,  0.8264, -1.0924,  0.1523,  0.3511,  0.0403, -0.4299,
          1.0287, -0.6948,  0.1261, -0.0117,  0.2041,  0.1495,  0.0241,  0.3007,
          0.0321,  0.0170,  0.8276, -0.2586,  0.3561, -0.0266,  0.6182, -0.2623,
         -0.1712, -0.5222,  0.5889,  0.0600, -0.3438, -0.0217,  0.1901, -0.1307,
          0.4243,  0.5773, -0.0508, -0.0962, -0.4024,  0.3572, -0.0237,  0.0334,
         -0.1164,  0.1306,  0.6010, -0.3492, -0.1838,  0.1398, -0.5559, -0.1939,
          0.1476, -0.1532, -0.0137, -0.2906, -0.1114, -0.1134,  0.2990, -0.0250,
          0.0901, -0.0082,  0.1118,  0.0733,  0.2064, -0.0594, -0.0298, -0.0220,
         -0.0099,  0.1156,  0.0843,  0.1086,  0.0082, -0.0359, -0.1086,  0.3831,
         -0.1393, -0.3177, -0.0085,  0.1595, -0.2587,  0.4565,  0.7253,  0.2615,
         -0.0057, -0.6794, -0.5910,  0.0735, -0.8221, -0.2121, -0.9544, -0.0656,
          0.1502, -1.1182, -0.6224,  0.2566, -0.3619,  0.0066,  0.1461,  0.3011,
         -0.0048, -0.0629,  0.0053, -0.0429, -0.0748, -0.1317,  0.1267,  0.1687,
          0.0260, -0.1802, -0.1340, -0.2656, -0.1493,  0.3181,  0.2770,  0.1851,
         -0.2756,  0.0689,  0.0406,  0.0920, -0.1067, -0.0848, -0.0531,  0.0799,
         -0.2465, -0.0332,  0.0334,  0.1241, -0.1393, -0.0512,  0.1728,  0.0567,
          0.0337, -0.0860, -0.2755, -0.3986, -0.0322,  0.3029, -0.1522, -0.0813,
         -0.0706,  0.0775,  0.1335,  0.0701,  0.2157, -0.1172, -0.0709, -0.0452,
          0.0791]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
134000 特征值优化 tensor(2.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1341e-01,  1.2962e+00, -6.4553e-01, -1.1799e+00,  3.3465e+00,
          2.3828e+00,  1.3022e+00, -9.2118e-01,  2.4688e-03, -4.4031e-01,
         -2.3914e-02,  1.8484e-01,  9.2329e-02,  5.2575e-01,  1.3985e-01,
          4.5899e-01, -6.6970e-01, -9.4053e-02,  8.1974e-01, -1.0932e+00,
          1.6634e-01,  3.6713e-01,  5.5939e-02, -4.2871e-01,  1.0167e+00,
         -7.0763e-01,  1.2482e-01, -1.9690e-02,  2.1180e-01,  1.3732e-01,
          2.2431e-02,  3.1159e-01,  3.7623e-02,  2.3797e-02,  8.3034e-01,
         -2.4772e-01,  3.4406e-01, -3.4203e-02,  6.0897e-01, -2.5171e-01,
         -1.6416e-01, -5.2371e-01,  5.9303e-01,  5.0530e-02, -3.3588e-01,
         -3.4224e-02,  1.9870e-01, -1.4484e-01,  4.2481e-01,  5.7007e-01,
         -5.5983e-02, -1.0191e-01, -4.0367e-01,  3.4704e-01, -2.9084e-02,
          2.1886e-02, -1.1966e-01,  1.2878e-01,  6.0254e-01, -3.4789e-01,
         -1.5930e-01,  1.4713e-01, -5.6327e-01, -1.9209e-01,  1.5307e-01,
         -1.5176e-01, -1.6261e-02, -2.9680e-01, -1.1570e-01, -1.0734e-01,
          3.0232e-01, -2.6884e-02,  8.2304e-02, -3.9231e-03,  1.0275e-01,
          6.1500e-02,  2.1319e-01, -6.0162e-02, -5.2834e-02, -2.8866e-02,
         -7.2227e-03,  1.1320e-01,  8.4833e-02,  1.0119e-01,  8.2266e-03,
         -1.4802e-02, -1.2266e-01,  4.1300e-01, -1.2796e-01, -3.1604e-01,
         -4.5079e-05,  1.4641e-01, -2.4594e-01,  4.6872e-01,  7.2314e-01,
          2.5185e-01, -2.8792e-02, -6.9817e-01, -5.9259e-01,  9.7500e-02,
         -8.1673e-01, -2.2556e-01, -9.4693e-01, -5.6002e-02,  1.5599e-01,
         -1.1173e+00, -6.3163e-01,  2.4877e-01, -3.5704e-01,  1.6043e-02,
          1.4081e-01,  3.0579e-01, -1.9167e-02, -5.8331e-02,  1.1436e-02,
         -3.5297e-02, -6.2947e-02, -1.2514e-01,  1.1510e-01,  1.6110e-01,
          4.1586e-02, -1.7862e-01, -1.3080e-01, -2.6414e-01, -1.5921e-01,
          3.2386e-01,  2.7748e-01,  1.8471e-01, -2.7533e-01,  7.1281e-02,
          4.8768e-02,  9.2355e-02, -1.0982e-01, -8.5324e-02, -4.3993e-02,
          8.2586e-02, -2.5835e-01, -3.3605e-02,  2.8767e-02,  1.2706e-01,
         -1.3009e-01, -5.0692e-02,  1.8844e-01,  5.4457e-02,  1.8702e-02,
         -9.0108e-02, -2.8197e-01, -3.8998e-01, -3.4698e-02,  2.9120e-01,
         -1.6059e-01, -8.0183e-02, -7.6333e-02,  6.7591e-02,  1.2995e-01,
          8.2965e-02,  2.1231e-01, -1.2542e-01, -6.1935e-02, -4.4582e-02,
          7.4174e-02]], device='cuda:0') tensor(0.2190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
135000 特征值优化 tensor(2.1020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2262,  1.2800, -0.6524, -1.1673,  3.3680,  2.3698,  1.3114, -0.9493,
          0.0210, -0.4386, -0.0218,  0.1915,  0.0824,  0.5255,  0.1612,  0.4749,
         -0.6687, -0.0824,  0.8375, -1.0984,  0.1461,  0.3774,  0.0483, -0.4325,
          1.0280, -0.6995,  0.1444, -0.0078,  0.2017,  0.1388,  0.0366,  0.3041,
          0.0496,  0.0060,  0.8225, -0.2381,  0.3391, -0.0263,  0.6033, -0.2668,
         -0.1557, -0.5296,  0.5971,  0.0392, -0.3382, -0.0371,  0.1935, -0.1344,
          0.4272,  0.5519, -0.0414, -0.0923, -0.4191,  0.3285, -0.0129,  0.0350,
         -0.1301,  0.1178,  0.6142, -0.3636, -0.1638,  0.1388, -0.5591, -0.1923,
          0.1519, -0.1462, -0.0058, -0.2993, -0.1318, -0.1247,  0.2875, -0.0206,
          0.0996,  0.0091,  0.0987,  0.0668,  0.2099, -0.0728, -0.0459, -0.0216,
          0.0090,  0.1148,  0.0713,  0.0979,  0.0175, -0.0149, -0.1311,  0.4131,
         -0.1300, -0.3136, -0.0055,  0.1423, -0.2675,  0.4626,  0.7333,  0.2548,
         -0.0299, -0.6897, -0.5952,  0.1161, -0.8110, -0.2327, -0.9655, -0.0583,
          0.1484, -1.1101, -0.6520,  0.2599, -0.3396,  0.0114,  0.1476,  0.3128,
         -0.0163, -0.0507,  0.0154, -0.0440, -0.0838, -0.1281,  0.1106,  0.1527,
          0.0346, -0.1808, -0.1326, -0.2501, -0.1472,  0.3076,  0.2643,  0.2049,
         -0.2626,  0.0738,  0.0334,  0.0926, -0.0955, -0.0918, -0.0636,  0.0969,
         -0.2651, -0.0135,  0.0269,  0.1304, -0.1279, -0.0491,  0.1728,  0.0505,
          0.0206, -0.0873, -0.2627, -0.3951, -0.0367,  0.2955, -0.1536, -0.0781,
         -0.0633,  0.0823,  0.1247,  0.0735,  0.2234, -0.1178, -0.0717, -0.0423,
          0.0593]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
136000 特征值优化 tensor(2.0890, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3061e-01,  1.2806e+00, -6.5988e-01, -1.1634e+00,  3.3646e+00,
          2.3837e+00,  1.3046e+00, -9.5874e-01,  1.4609e-02, -4.3647e-01,
         -2.2275e-02,  1.9399e-01,  8.9657e-02,  5.2338e-01,  1.5967e-01,
          4.7379e-01, -6.7826e-01, -7.4779e-02,  8.1903e-01, -1.0970e+00,
          1.5914e-01,  3.8218e-01,  6.1420e-02, -4.3517e-01,  1.0161e+00,
         -6.9292e-01,  1.4356e-01, -9.9345e-03,  2.1433e-01,  1.3577e-01,
          2.7562e-02,  3.0741e-01,  4.9056e-02,  2.0543e-02,  8.2870e-01,
         -2.3799e-01,  3.3999e-01, -3.8836e-02,  6.0408e-01, -2.5292e-01,
         -1.5061e-01, -5.2342e-01,  5.9106e-01,  3.6179e-02, -3.3496e-01,
         -4.6612e-02,  1.7945e-01, -1.4565e-01,  4.2417e-01,  5.6110e-01,
         -5.9769e-02, -9.1842e-02, -4.1693e-01,  3.2402e-01, -1.0886e-02,
          3.4682e-02, -1.3124e-01,  1.3131e-01,  6.1287e-01, -3.5811e-01,
         -1.5073e-01,  1.4948e-01, -5.5572e-01, -1.9232e-01,  1.6225e-01,
         -1.5113e-01, -1.1249e-02, -2.9821e-01, -1.3291e-01, -1.2680e-01,
          3.0055e-01, -1.4970e-02,  9.0900e-02, -1.0824e-02,  1.1361e-01,
          6.1933e-02,  2.0134e-01, -7.2052e-02, -5.1502e-02, -2.9060e-02,
          2.8571e-03,  1.1552e-01,  7.9957e-02,  1.0279e-01,  2.0292e-02,
         -1.9835e-02, -1.2278e-01,  4.2482e-01, -1.1361e-01, -3.1824e-01,
          6.1043e-03,  1.4471e-01, -2.7079e-01,  4.5176e-01,  7.2201e-01,
          2.5400e-01, -3.9618e-02, -6.9480e-01, -5.9026e-01,  1.1444e-01,
         -8.0223e-01, -2.1972e-01, -9.6147e-01, -5.8553e-02,  1.4856e-01,
         -1.1107e+00, -6.5325e-01,  2.4435e-01, -3.3687e-01,  1.0778e-02,
          1.4634e-01,  3.1353e-01, -1.8181e-02, -5.5142e-02,  1.3025e-02,
         -3.0835e-02, -8.4091e-02, -1.1937e-01,  1.1143e-01,  1.4850e-01,
          5.4496e-02, -1.8283e-01, -1.2365e-01, -2.4688e-01, -1.5578e-01,
          3.0434e-01,  2.8093e-01,  2.0892e-01, -2.7622e-01,  7.1537e-02,
          3.9026e-02,  1.0328e-01, -1.0432e-01, -1.0145e-01, -5.9218e-02,
          8.7982e-02, -2.5412e-01, -3.1413e-02,  3.4919e-02,  1.3529e-01,
         -1.4269e-01, -5.0280e-02,  1.7940e-01,  5.0467e-02,  2.0889e-02,
         -9.0471e-02, -2.7182e-01, -4.0036e-01, -4.4430e-02,  2.9510e-01,
         -1.3863e-01, -8.4994e-02, -6.3993e-02,  7.8672e-02,  1.3929e-01,
          6.3812e-02,  2.3506e-01, -1.0471e-01, -8.3316e-02, -4.3798e-02,
          6.3736e-02]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
137000 特征值优化 tensor(2.0977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2503e-01,  1.2767e+00, -6.4356e-01, -1.1669e+00,  3.3856e+00,
          2.3663e+00,  1.3059e+00, -9.6114e-01,  2.3026e-02, -4.3581e-01,
         -3.3976e-02,  1.8842e-01,  8.8814e-02,  5.1644e-01,  1.6640e-01,
          4.8260e-01, -6.8350e-01, -7.7371e-02,  8.2734e-01, -1.0928e+00,
          1.5119e-01,  3.8056e-01,  6.8858e-02, -4.3215e-01,  1.0200e+00,
         -6.9868e-01,  1.3156e-01, -3.0198e-03,  2.1830e-01,  1.4120e-01,
          3.6212e-02,  3.0506e-01,  3.7220e-02,  1.9669e-02,  8.1810e-01,
         -2.3244e-01,  3.3150e-01, -4.0696e-02,  6.0527e-01, -2.5057e-01,
         -1.5015e-01, -5.2650e-01,  5.9123e-01,  4.7871e-02, -3.3911e-01,
         -2.8673e-02,  2.0304e-01, -1.5441e-01,  4.2385e-01,  5.4830e-01,
         -4.4789e-02, -8.5712e-02, -4.1530e-01,  3.2224e-01, -1.1162e-02,
          3.8186e-02, -1.2733e-01,  1.2040e-01,  6.0799e-01, -3.5838e-01,
         -1.6126e-01,  1.4211e-01, -5.5830e-01, -1.9058e-01,  1.5809e-01,
         -1.4269e-01, -1.1492e-02, -2.9725e-01, -1.3150e-01, -1.2417e-01,
          2.9342e-01, -1.4414e-02,  9.5113e-02,  2.4290e-03,  1.0882e-01,
          5.3540e-02,  2.0155e-01, -6.4831e-02, -4.0624e-02, -1.8207e-02,
         -5.5372e-03,  1.1791e-01,  8.3101e-02,  9.6690e-02,  1.1862e-02,
         -1.4591e-02, -1.1447e-01,  4.1897e-01, -1.1756e-01, -3.1228e-01,
         -5.0830e-03,  1.4420e-01, -2.6825e-01,  4.5814e-01,  7.3064e-01,
          2.5135e-01, -3.6171e-02, -6.9949e-01, -5.8698e-01,  1.3530e-01,
         -8.0223e-01, -2.3409e-01, -9.7815e-01, -4.9482e-02,  1.5733e-01,
         -1.1111e+00, -6.5797e-01,  2.4752e-01, -3.2929e-01,  1.6614e-02,
          1.4628e-01,  3.0763e-01, -2.3077e-02, -5.6767e-02,  1.5467e-02,
         -2.9099e-02, -7.4752e-02, -1.2639e-01,  1.1413e-01,  1.4789e-01,
          4.9511e-02, -1.7877e-01, -1.3157e-01, -2.4556e-01, -1.4832e-01,
          3.0277e-01,  2.7090e-01,  2.0767e-01, -2.6565e-01,  6.5789e-02,
          3.6415e-02,  1.0126e-01, -9.7646e-02, -1.0363e-01, -6.0249e-02,
          8.5679e-02, -2.5880e-01, -2.7542e-02,  2.6306e-02,  1.2981e-01,
         -1.2911e-01, -6.1962e-02,  1.7153e-01,  5.5061e-02,  2.5429e-02,
         -8.9035e-02, -2.8115e-01, -3.9170e-01, -3.4134e-02,  2.9345e-01,
         -1.4824e-01, -7.1496e-02, -6.6134e-02,  7.8279e-02,  1.4188e-01,
          6.7208e-02,  2.2104e-01, -1.1575e-01, -7.3443e-02, -4.6067e-02,
          6.2515e-02]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
138000 特征值优化 tensor(2.1044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2764e-01,  1.2750e+00, -6.4958e-01, -1.1748e+00,  3.3663e+00,
          2.3731e+00,  1.2900e+00, -9.5823e-01,  3.2514e-02, -4.3296e-01,
         -2.8803e-02,  1.9228e-01,  8.0159e-02,  5.2536e-01,  1.6701e-01,
          4.6115e-01, -6.6510e-01, -8.1200e-02,  8.1944e-01, -1.0829e+00,
          1.5705e-01,  3.8962e-01,  7.9609e-02, -4.3700e-01,  1.0210e+00,
         -7.0486e-01,  1.3650e-01, -9.8470e-03,  2.2131e-01,  1.3675e-01,
          3.8027e-02,  3.0974e-01,  4.1657e-02,  1.8639e-02,  8.1917e-01,
         -2.3032e-01,  3.4133e-01, -4.7277e-02,  6.1086e-01, -2.3883e-01,
         -1.5763e-01, -5.2508e-01,  5.9161e-01,  4.6354e-02, -3.3926e-01,
         -4.0600e-02,  2.0202e-01, -1.5276e-01,  4.1898e-01,  5.4903e-01,
         -4.7575e-02, -9.1990e-02, -4.1182e-01,  3.2883e-01, -6.8019e-03,
          2.5875e-02, -1.2064e-01,  1.2579e-01,  6.3541e-01, -3.7147e-01,
         -1.3434e-01,  1.4647e-01, -5.5460e-01, -1.9572e-01,  1.5466e-01,
         -1.4597e-01, -1.4987e-02, -2.9943e-01, -1.3637e-01, -1.1783e-01,
          2.9630e-01, -2.2122e-02,  9.2945e-02, -2.4850e-03,  1.1713e-01,
          5.1260e-02,  2.0234e-01, -7.4650e-02, -4.1177e-02, -2.5898e-02,
         -4.3893e-03,  1.1953e-01,  8.6188e-02,  9.9077e-02,  1.2775e-02,
         -9.3222e-03, -1.2620e-01,  4.2261e-01, -1.4128e-01, -3.1342e-01,
         -2.3228e-03,  1.4329e-01, -2.6516e-01,  4.6218e-01,  7.0837e-01,
          2.6225e-01, -3.6724e-02, -6.9512e-01, -5.9238e-01,  1.3132e-01,
         -8.0807e-01, -2.3290e-01, -9.7376e-01, -5.6342e-02,  1.6160e-01,
         -1.1064e+00, -6.5980e-01,  2.6312e-01, -3.2080e-01,  1.2752e-02,
          1.4599e-01,  3.1649e-01, -1.7312e-02, -5.7476e-02,  1.4696e-02,
         -3.7981e-02, -8.4947e-02, -1.2336e-01,  1.1397e-01,  1.5701e-01,
          5.3156e-02, -1.7746e-01, -1.3276e-01, -2.5071e-01, -1.4404e-01,
          3.0432e-01,  2.7702e-01,  2.0740e-01, -2.7095e-01,  7.3865e-02,
          3.3317e-02,  9.2549e-02, -1.0067e-01, -9.8283e-02, -6.0441e-02,
          9.7206e-02, -2.6887e-01, -3.6247e-02,  3.6507e-02,  1.2690e-01,
         -1.3629e-01, -5.6153e-02,  1.8432e-01,  5.2540e-02,  2.4580e-02,
         -8.9877e-02, -2.8212e-01, -3.9339e-01, -4.3949e-02,  2.9792e-01,
         -1.3495e-01, -6.9335e-02, -6.9637e-02,  7.5535e-02,  1.4871e-01,
          6.4451e-02,  2.3445e-01, -1.1261e-01, -8.9267e-02, -4.2055e-02,
          6.6392e-02]], device='cuda:0') tensor(0.2145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
139000 特征值优化 tensor(2.0970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1335e-01,  1.2759e+00, -6.5549e-01, -1.1712e+00,  3.3412e+00,
          2.3750e+00,  1.3019e+00, -9.7785e-01,  3.3649e-02, -4.3590e-01,
         -2.6122e-02,  2.0673e-01,  9.0016e-02,  5.0700e-01,  1.6766e-01,
          4.6675e-01, -6.7416e-01, -6.8552e-02,  8.2243e-01, -1.0873e+00,
          1.6297e-01,  3.8895e-01,  7.0614e-02, -4.4731e-01,  1.0248e+00,
         -6.9652e-01,  1.3190e-01,  9.0727e-03,  2.2420e-01,  1.3797e-01,
          2.4532e-02,  3.0032e-01,  4.1934e-02,  5.7860e-03,  8.2280e-01,
         -2.2575e-01,  3.3957e-01, -4.4217e-02,  6.1778e-01, -2.3577e-01,
         -1.5987e-01, -5.2730e-01,  5.9106e-01,  4.4040e-02, -3.3886e-01,
         -3.8084e-02,  1.9409e-01, -1.5858e-01,  4.1693e-01,  5.4055e-01,
         -4.3351e-02, -8.0235e-02, -4.1294e-01,  3.2043e-01, -7.1168e-03,
          3.8889e-02, -1.3123e-01,  1.2899e-01,  6.1504e-01, -3.7318e-01,
         -1.5991e-01,  1.3942e-01, -5.5013e-01, -1.9259e-01,  1.5773e-01,
         -1.4268e-01, -1.8750e-02, -2.9737e-01, -1.4072e-01, -1.2665e-01,
          2.9408e-01, -2.1180e-02,  9.8928e-02,  3.9041e-03,  1.1978e-01,
          5.9191e-02,  2.0153e-01, -6.9420e-02, -4.6152e-02, -1.9788e-02,
         -1.9777e-03,  1.2194e-01,  8.7092e-02,  9.5006e-02,  1.0897e-02,
         -1.9850e-02, -1.1487e-01,  4.2300e-01, -1.1759e-01, -3.0499e-01,
         -2.7939e-03,  1.4351e-01, -2.5449e-01,  4.6122e-01,  7.2219e-01,
          2.5857e-01, -2.6974e-02, -7.0889e-01, -6.1375e-01,  1.4689e-01,
         -7.9914e-01, -2.3708e-01, -9.8401e-01, -3.8450e-02,  1.6233e-01,
         -1.1081e+00, -6.5952e-01,  2.5180e-01, -3.1329e-01,  1.2597e-02,
          1.4620e-01,  3.0481e-01, -2.1403e-02, -5.9912e-02,  9.5052e-03,
         -3.7649e-02, -8.0580e-02, -1.2355e-01,  1.1070e-01,  1.5330e-01,
          6.3107e-02, -1.7522e-01, -1.2897e-01, -2.4512e-01, -1.4132e-01,
          2.9722e-01,  2.6866e-01,  2.1590e-01, -2.6862e-01,  7.3190e-02,
          2.8302e-02,  9.6709e-02, -8.7937e-02, -1.0517e-01, -6.6778e-02,
          9.3586e-02, -2.6592e-01, -3.0152e-02,  3.8120e-02,  1.2922e-01,
         -1.2318e-01, -6.2116e-02,  1.7343e-01,  5.6890e-02,  3.2864e-02,
         -8.9987e-02, -2.8334e-01, -3.8702e-01, -4.7589e-02,  2.9983e-01,
         -1.3659e-01, -6.7179e-02, -5.7422e-02,  8.2812e-02,  1.4931e-01,
          5.0558e-02,  2.2726e-01, -1.0346e-01, -8.8273e-02, -3.6286e-02,
          6.1027e-02]], device='cuda:0') tensor(0.2293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
140000 特征值优化 tensor(2.1028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2109,  1.2618, -0.6638, -1.1754,  3.3535,  2.3642,  1.3108, -0.9657,
          0.0325, -0.4353, -0.0329,  0.2019,  0.0886,  0.5211,  0.1601,  0.4728,
         -0.6587, -0.0784,  0.8273, -1.0910,  0.1650,  0.3965,  0.0739, -0.4439,
          1.0147, -0.6994,  0.1405,  0.0136,  0.2086,  0.1430,  0.0292,  0.3086,
          0.0415,  0.0196,  0.8224, -0.2228,  0.3379, -0.0358,  0.6206, -0.2513,
         -0.1617, -0.5282,  0.5991,  0.0579, -0.3423, -0.0370,  0.1988, -0.1562,
          0.4133,  0.5286, -0.0374, -0.0789, -0.4056,  0.3177, -0.0103,  0.0220,
         -0.1286,  0.1326,  0.6203, -0.3710, -0.1507,  0.1479, -0.5508, -0.2012,
          0.1638, -0.1360, -0.0111, -0.3003, -0.1305, -0.1260,  0.2909, -0.0206,
          0.0964,  0.0060,  0.1091,  0.0536,  0.1992, -0.0736, -0.0449, -0.0242,
          0.0095,  0.1221,  0.0831,  0.0887,  0.0202, -0.0137, -0.1137,  0.4175,
         -0.1319, -0.3162, -0.0043,  0.1317, -0.2493,  0.4643,  0.7417,  0.2442,
         -0.0321, -0.6991, -0.6199,  0.1337, -0.7849, -0.2434, -0.9950, -0.0501,
          0.1633, -1.0996, -0.6605,  0.2522, -0.3176,  0.0119,  0.1502,  0.3095,
         -0.0213, -0.0582,  0.0112, -0.0374, -0.0850, -0.1264,  0.1126,  0.1515,
          0.0483, -0.1794, -0.1325, -0.2466, -0.1453,  0.3046,  0.2658,  0.2152,
         -0.2598,  0.0767,  0.0365,  0.0972, -0.0944, -0.1043, -0.0636,  0.0924,
         -0.2725, -0.0303,  0.0345,  0.1286, -0.1359, -0.0522,  0.1602,  0.0503,
          0.0267, -0.0844, -0.2646, -0.3821, -0.0479,  0.2836, -0.1448, -0.0794,
         -0.0603,  0.0706,  0.1331,  0.0668,  0.2292, -0.1183, -0.0808, -0.0404,
          0.0697]], device='cuda:0') tensor(0.2513, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
141000 特征值优化 tensor(2.0717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0875e-01,  1.2723e+00, -6.4743e-01, -1.1716e+00,  3.3625e+00,
          2.3632e+00,  1.3001e+00, -9.6198e-01,  2.5497e-02, -4.3583e-01,
         -3.4315e-02,  2.1498e-01,  9.5243e-02,  5.1488e-01,  1.5691e-01,
          4.8741e-01, -6.7469e-01, -9.3927e-02,  8.0811e-01, -1.0824e+00,
          1.8268e-01,  4.1067e-01,  8.4393e-02, -4.6067e-01,  1.0040e+00,
         -7.0306e-01,  1.2667e-01, -5.3200e-03,  2.2337e-01,  1.3984e-01,
          2.9729e-02,  3.0962e-01,  4.7049e-02,  2.5513e-02,  8.3284e-01,
         -2.3391e-01,  3.2985e-01, -4.8088e-02,  6.2225e-01, -2.3665e-01,
         -1.5852e-01, -5.2535e-01,  5.8967e-01,  3.6618e-02, -3.3994e-01,
         -4.3271e-02,  2.0237e-01, -1.5707e-01,  4.1450e-01,  5.3688e-01,
         -5.2854e-02, -8.7994e-02, -4.0515e-01,  3.2278e-01, -1.1604e-02,
          3.0574e-02, -1.2407e-01,  1.3680e-01,  6.3037e-01, -3.6433e-01,
         -1.5074e-01,  1.4899e-01, -5.6165e-01, -2.0222e-01,  1.5628e-01,
         -1.4290e-01, -8.9573e-03, -2.9550e-01, -1.3671e-01, -1.1197e-01,
          3.0154e-01, -2.1590e-02,  8.3478e-02,  3.6558e-03,  1.1294e-01,
          4.3049e-02,  2.0483e-01, -7.0593e-02, -4.3154e-02, -2.5824e-02,
         -3.7687e-04,  1.0993e-01,  9.2492e-02,  1.0267e-01,  8.4835e-03,
         -2.7252e-02, -1.1579e-01,  4.1923e-01, -1.4126e-01, -3.2040e-01,
          9.8083e-03,  1.3731e-01, -2.4341e-01,  4.6480e-01,  7.4344e-01,
          2.4432e-01, -3.6355e-02, -6.9689e-01, -6.1889e-01,  1.4436e-01,
         -7.7035e-01, -2.3265e-01, -9.8250e-01, -5.9987e-02,  1.6793e-01,
         -1.1010e+00, -6.5960e-01,  2.5419e-01, -3.0151e-01,  2.0708e-02,
          1.4327e-01,  3.0190e-01, -2.0536e-02, -5.6841e-02,  1.0911e-02,
         -2.9502e-02, -8.0823e-02, -1.2814e-01,  1.0286e-01,  1.5818e-01,
          5.4117e-02, -1.7464e-01, -1.3042e-01, -2.5057e-01, -1.5896e-01,
          3.1717e-01,  2.7817e-01,  2.0133e-01, -2.6542e-01,  7.8972e-02,
          4.7270e-02,  9.5011e-02, -1.1217e-01, -9.9561e-02, -4.3585e-02,
          8.9012e-02, -2.5910e-01, -2.6821e-02,  3.6800e-02,  1.3038e-01,
         -1.1923e-01, -7.7479e-02,  1.7035e-01,  4.4927e-02,  2.9843e-02,
         -7.6844e-02, -2.7362e-01, -3.8141e-01, -3.3511e-02,  2.8501e-01,
         -1.5738e-01, -8.2853e-02, -7.3828e-02,  6.0558e-02,  1.4456e-01,
          7.7810e-02,  2.2700e-01, -1.2809e-01, -7.4935e-02, -4.7080e-02,
          8.0580e-02]], device='cuda:0') tensor(0.2154, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
142000 特征值优化 tensor(2.0909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7141e-01,  1.2643e+00, -6.3666e-01, -1.1785e+00,  3.3457e+00,
          2.3488e+00,  1.2952e+00, -9.7830e-01,  2.0302e-02, -4.4841e-01,
         -1.6877e-02,  2.0170e-01,  8.3708e-02,  5.1375e-01,  1.7051e-01,
          4.9989e-01, -6.5811e-01, -8.8632e-02,  8.1490e-01, -1.0760e+00,
          1.7019e-01,  4.2113e-01,  8.2952e-02, -4.6228e-01,  1.0097e+00,
         -7.0674e-01,  1.3494e-01, -4.2926e-03,  2.2065e-01,  1.3264e-01,
          3.0840e-02,  3.1047e-01,  4.7372e-02,  1.7056e-02,  8.2940e-01,
         -2.2224e-01,  3.3151e-01, -3.9703e-02,  6.3058e-01, -2.5075e-01,
         -1.6461e-01, -5.2809e-01,  5.9718e-01,  4.6300e-02, -3.3457e-01,
         -3.6183e-02,  2.0328e-01, -1.6059e-01,  4.1368e-01,  5.2716e-01,
         -4.4818e-02, -7.8934e-02, -3.9866e-01,  3.1788e-01, -2.7723e-03,
          8.8111e-03, -1.1565e-01,  1.4099e-01,  6.3079e-01, -3.8153e-01,
         -1.4435e-01,  1.4739e-01, -5.5333e-01, -2.0643e-01,  1.5172e-01,
         -1.4273e-01, -1.3491e-02, -2.9786e-01, -1.3787e-01, -1.1110e-01,
          2.9936e-01, -2.1422e-02,  8.8803e-02,  1.1844e-02,  1.1613e-01,
          4.8300e-02,  2.0773e-01, -8.0519e-02, -4.4528e-02, -1.9810e-02,
          1.4932e-02,  1.2051e-01,  8.0744e-02,  1.0385e-01,  1.5463e-02,
         -1.1393e-02, -1.2861e-01,  4.2061e-01, -1.1317e-01, -3.1336e-01,
          1.2323e-02,  1.3014e-01, -2.6378e-01,  4.6658e-01,  7.4655e-01,
          2.3866e-01, -4.2106e-02, -7.1137e-01, -6.2801e-01,  1.5139e-01,
         -7.6819e-01, -2.4021e-01, -9.8983e-01, -5.3676e-02,  1.7978e-01,
         -1.0977e+00, -6.6807e-01,  2.5441e-01, -2.7789e-01,  8.7583e-03,
          1.4912e-01,  3.0829e-01, -3.1256e-02, -6.0568e-02,  1.4382e-02,
         -3.4780e-02, -8.6899e-02, -1.1951e-01,  1.1084e-01,  1.5254e-01,
          4.9767e-02, -1.7667e-01, -1.3793e-01, -2.4652e-01, -1.5223e-01,
          3.1274e-01,  2.7649e-01,  2.1365e-01, -2.5957e-01,  7.7636e-02,
          4.5540e-02,  9.1290e-02, -1.0366e-01, -9.3800e-02, -6.1934e-02,
          9.8444e-02, -2.7163e-01, -2.8301e-02,  3.4837e-02,  1.4054e-01,
         -1.3285e-01, -7.1878e-02,  1.6803e-01,  4.8228e-02,  2.8098e-02,
         -7.6032e-02, -2.6389e-01, -3.7850e-01, -4.6284e-02,  2.8974e-01,
         -1.5621e-01, -7.3932e-02, -5.9574e-02,  7.3910e-02,  1.3705e-01,
          7.4852e-02,  2.3016e-01, -1.2226e-01, -8.0742e-02, -3.3887e-02,
          6.1875e-02]], device='cuda:0') tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
143000 特征值优化 tensor(2.1014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6111e-01,  1.2710e+00, -6.4274e-01, -1.1662e+00,  3.3466e+00,
          2.3335e+00,  1.3028e+00, -9.7864e-01,  2.3267e-02, -4.3861e-01,
         -2.7163e-02,  1.9370e-01,  7.9010e-02,  5.1634e-01,  1.7362e-01,
          5.1482e-01, -6.4189e-01, -8.5434e-02,  8.2397e-01, -1.0831e+00,
          1.6872e-01,  4.2200e-01,  8.3163e-02, -4.5724e-01,  1.0044e+00,
         -7.0611e-01,  1.3645e-01,  6.1074e-04,  2.2058e-01,  1.3504e-01,
          3.8691e-02,  3.1152e-01,  4.0573e-02,  1.4235e-02,  8.2890e-01,
         -2.2321e-01,  3.3506e-01, -4.8655e-02,  6.1766e-01, -2.4585e-01,
         -1.5622e-01, -5.2891e-01,  5.9533e-01,  4.0916e-02, -3.3780e-01,
         -2.8741e-02,  1.9972e-01, -1.6758e-01,  4.1247e-01,  5.1416e-01,
         -3.4459e-02, -7.2808e-02, -4.0754e-01,  3.0560e-01,  6.5388e-04,
          1.3992e-02, -1.2819e-01,  1.3112e-01,  6.3144e-01, -3.7924e-01,
         -1.4538e-01,  1.4302e-01, -5.5480e-01, -2.0442e-01,  1.5437e-01,
         -1.3191e-01, -1.0704e-02, -2.9596e-01, -1.3613e-01, -1.2198e-01,
          2.9318e-01, -1.0871e-02,  9.3559e-02,  1.8590e-02,  1.1329e-01,
          5.1605e-02,  2.0282e-01, -7.9744e-02, -4.6901e-02, -2.0208e-02,
          1.6124e-02,  1.1800e-01,  8.4150e-02,  8.5016e-02,  1.8378e-02,
         -1.3411e-02, -1.2838e-01,  4.1982e-01, -1.2092e-01, -3.1273e-01,
          1.4547e-03,  1.2887e-01, -2.5113e-01,  4.6229e-01,  7.4041e-01,
          2.4781e-01, -3.8014e-02, -6.9887e-01, -6.2889e-01,  1.6663e-01,
         -7.7796e-01, -2.3984e-01, -1.0119e+00, -5.2715e-02,  1.7250e-01,
         -1.0839e+00, -6.7018e-01,  2.4976e-01, -2.7575e-01,  1.4456e-02,
          1.4891e-01,  3.1077e-01, -2.2502e-02, -5.9825e-02,  1.7907e-02,
         -3.6833e-02, -9.8849e-02, -1.2725e-01,  1.0912e-01,  1.4932e-01,
          4.0221e-02, -1.7136e-01, -1.4109e-01, -2.3026e-01, -1.5172e-01,
          3.0655e-01,  2.7060e-01,  2.2170e-01, -2.5042e-01,  6.6861e-02,
          4.7053e-02,  1.0472e-01, -9.8481e-02, -1.0721e-01, -6.6688e-02,
          8.5966e-02, -2.7104e-01, -2.7110e-02,  3.7548e-02,  1.3847e-01,
         -1.2056e-01, -6.1776e-02,  1.4967e-01,  5.2663e-02,  1.8693e-02,
         -7.7032e-02, -2.6452e-01, -3.7638e-01, -4.7176e-02,  2.7560e-01,
         -1.5844e-01, -8.1444e-02, -6.5312e-02,  6.7102e-02,  1.3540e-01,
          6.8560e-02,  2.3391e-01, -1.1683e-01, -8.1227e-02, -4.2297e-02,
          6.2372e-02]], device='cuda:0') tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
144000 特征值优化 tensor(2.1049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4885e-01,  1.2757e+00, -6.4607e-01, -1.1598e+00,  3.3368e+00,
          2.3302e+00,  1.3052e+00, -9.8525e-01,  6.0218e-03, -4.3274e-01,
         -3.0245e-02,  2.0241e-01,  7.6014e-02,  5.1171e-01,  1.8346e-01,
          5.1925e-01, -6.6438e-01, -9.7850e-02,  8.1869e-01, -1.0676e+00,
          1.7070e-01,  4.3814e-01,  8.4446e-02, -4.8076e-01,  9.9922e-01,
         -7.0788e-01,  1.2499e-01, -1.0109e-02,  2.3685e-01,  1.2916e-01,
          2.7852e-02,  3.1197e-01,  4.7357e-02,  1.5143e-02,  8.3144e-01,
         -2.1714e-01,  3.3095e-01, -5.7769e-02,  6.2393e-01, -2.3699e-01,
         -1.5634e-01, -5.2658e-01,  5.9857e-01,  3.1732e-02, -3.3434e-01,
         -3.4756e-02,  2.0092e-01, -1.7020e-01,  4.1471e-01,  5.1439e-01,
         -4.0876e-02, -7.6866e-02, -4.0447e-01,  2.9939e-01,  2.3244e-03,
          2.7536e-03, -1.2050e-01,  1.4951e-01,  6.4372e-01, -3.8301e-01,
         -1.3939e-01,  1.4112e-01, -5.5788e-01, -2.0473e-01,  1.6234e-01,
         -1.3617e-01, -1.0801e-02, -2.9640e-01, -1.3762e-01, -1.1036e-01,
          2.9596e-01, -1.7355e-02,  9.2488e-02,  1.5404e-02,  1.1260e-01,
          4.0335e-02,  2.0651e-01, -7.3556e-02, -3.9386e-02, -2.2584e-02,
          7.2277e-03,  1.1696e-01,  9.2294e-02,  1.0241e-01,  1.0009e-03,
         -1.0364e-02, -1.2641e-01,  4.2228e-01, -1.2458e-01, -3.1072e-01,
          9.0743e-03,  1.2056e-01, -2.5870e-01,  4.6245e-01,  7.4877e-01,
          2.4033e-01, -3.8090e-02, -7.0096e-01, -6.2356e-01,  1.6263e-01,
         -7.7395e-01, -2.3892e-01, -1.0188e+00, -5.5461e-02,  1.8305e-01,
         -1.0745e+00, -6.6446e-01,  2.5113e-01, -2.5785e-01,  1.4277e-02,
          1.4694e-01,  3.1067e-01, -2.2784e-02, -5.9023e-02,  1.8053e-02,
         -4.1438e-02, -1.0125e-01, -1.2553e-01,  1.1105e-01,  1.5370e-01,
          6.1509e-02, -1.7388e-01, -1.3962e-01, -2.3943e-01, -1.5294e-01,
          3.1356e-01,  2.7335e-01,  2.1631e-01, -2.4944e-01,  8.1892e-02,
          4.6099e-02,  9.6718e-02, -9.8857e-02, -1.0304e-01, -6.3016e-02,
          1.0217e-01, -2.7481e-01, -3.6684e-02,  3.3780e-02,  1.4481e-01,
         -1.3435e-01, -7.6777e-02,  1.6652e-01,  4.9672e-02,  3.0074e-02,
         -7.9359e-02, -2.7298e-01, -3.7515e-01, -5.5653e-02,  2.7596e-01,
         -1.4761e-01, -7.8599e-02, -6.8421e-02,  6.8241e-02,  1.4771e-01,
          6.2288e-02,  2.4474e-01, -1.1104e-01, -8.8758e-02, -3.9516e-02,
          6.9669e-02]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
145000 特征值优化 tensor(2.1254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3032e-01,  1.2807e+00, -6.5141e-01, -1.1776e+00,  3.3264e+00,
          2.3331e+00,  1.3073e+00, -9.9155e-01,  1.4533e-02, -4.4086e-01,
         -2.1824e-02,  2.0200e-01,  6.9234e-02,  5.0883e-01,  1.6601e-01,
          5.1816e-01, -6.3943e-01, -1.0010e-01,  8.1124e-01, -1.0740e+00,
          1.7914e-01,  4.3901e-01,  9.5350e-02, -4.8172e-01,  9.9553e-01,
         -7.0803e-01,  1.2478e-01,  1.1070e-02,  2.3930e-01,  1.3778e-01,
          2.9265e-02,  3.0829e-01,  3.7288e-02,  1.6392e-02,  8.3281e-01,
         -2.1889e-01,  3.3134e-01, -6.5753e-02,  6.2598e-01, -2.3226e-01,
         -1.6241e-01, -5.2634e-01,  5.9791e-01,  5.6559e-02, -3.3459e-01,
         -2.0658e-02,  2.1283e-01, -1.7555e-01,  4.0785e-01,  5.1252e-01,
         -4.0445e-02, -6.6300e-02, -3.9406e-01,  2.9245e-01, -7.8106e-04,
          4.1222e-03, -1.1578e-01,  1.4512e-01,  6.4075e-01, -3.8006e-01,
         -1.3551e-01,  1.4471e-01, -5.5761e-01, -2.0611e-01,  1.6012e-01,
         -1.3534e-01, -2.1069e-02, -2.9888e-01, -1.3959e-01, -1.1334e-01,
          3.0025e-01, -1.7870e-02,  8.6610e-02,  9.1104e-03,  1.1460e-01,
          3.5315e-02,  2.0022e-01, -7.4951e-02, -4.2390e-02, -2.3968e-02,
          6.4101e-03,  1.1840e-01,  9.3581e-02,  8.5093e-02,  1.1939e-02,
         -1.8688e-02, -1.2277e-01,  4.0171e-01, -1.2904e-01, -3.0968e-01,
          9.0850e-03,  1.2780e-01, -2.5048e-01,  4.7082e-01,  7.4315e-01,
          2.3915e-01, -2.9365e-02, -7.1760e-01, -6.3929e-01,  1.7504e-01,
         -7.5667e-01, -2.3952e-01, -1.0241e+00, -5.0132e-02,  1.8244e-01,
         -1.0754e+00, -6.6292e-01,  2.4417e-01, -2.5264e-01,  8.9169e-03,
          1.4897e-01,  3.0687e-01, -2.7858e-02, -6.3852e-02,  1.3199e-02,
         -3.5916e-02, -9.3174e-02, -1.2200e-01,  1.0700e-01,  1.5374e-01,
          4.7018e-02, -1.7140e-01, -1.3983e-01, -2.3446e-01, -1.5793e-01,
          3.0988e-01,  2.7765e-01,  2.1765e-01, -2.4983e-01,  7.4431e-02,
          5.4199e-02,  1.0355e-01, -1.0436e-01, -1.0696e-01, -6.3294e-02,
          8.7820e-02, -2.7899e-01, -3.8885e-02,  4.3009e-02,  1.3614e-01,
         -1.3016e-01, -6.9265e-02,  1.5693e-01,  5.7492e-02,  2.8288e-02,
         -7.1729e-02, -2.7080e-01, -3.7475e-01, -4.8835e-02,  2.8579e-01,
         -1.5142e-01, -8.3960e-02, -7.1174e-02,  5.3235e-02,  1.4216e-01,
          6.6568e-02,  2.4767e-01, -1.2035e-01, -9.5451e-02, -3.6633e-02,
          7.7188e-02]], device='cuda:0') tensor(0.2198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
146000 特征值优化 tensor(2.1179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3189e-01,  1.2800e+00, -6.5965e-01, -1.1899e+00,  3.3202e+00,
          2.3386e+00,  1.3064e+00, -1.0014e+00,  1.8889e-02, -4.4449e-01,
         -1.7011e-02,  2.0923e-01,  6.9509e-02,  5.0203e-01,  1.8237e-01,
          5.1814e-01, -6.5887e-01, -9.2637e-02,  8.0831e-01, -1.0662e+00,
          1.7652e-01,  4.3858e-01,  9.6819e-02, -4.8069e-01,  1.0045e+00,
         -7.0588e-01,  1.3787e-01,  1.3598e-02,  2.4199e-01,  1.3448e-01,
          3.1199e-02,  3.0758e-01,  3.1139e-02,  2.7062e-03,  8.2786e-01,
         -2.1188e-01,  3.3465e-01, -6.7802e-02,  6.3579e-01, -2.2651e-01,
         -1.6714e-01, -5.2371e-01,  5.9471e-01,  5.1991e-02, -3.3305e-01,
         -2.6375e-02,  2.1377e-01, -1.7636e-01,  3.9990e-01,  5.1398e-01,
         -3.9052e-02, -6.5579e-02, -3.9796e-01,  2.8932e-01,  4.2455e-03,
         -1.4809e-03, -1.1731e-01,  1.5981e-01,  6.3354e-01, -3.8914e-01,
         -1.3493e-01,  1.4375e-01, -5.5524e-01, -2.0394e-01,  1.6560e-01,
         -1.3432e-01, -1.6139e-02, -2.9488e-01, -1.5269e-01, -1.1970e-01,
          3.0245e-01, -1.1484e-02,  9.1664e-02,  1.1529e-02,  1.1759e-01,
          3.0685e-02,  2.0487e-01, -6.9694e-02, -4.2874e-02, -1.9581e-02,
          1.3591e-02,  1.2509e-01,  9.5126e-02,  7.7422e-02,  1.0426e-02,
         -4.9762e-04, -1.2115e-01,  4.1024e-01, -1.2589e-01, -3.0444e-01,
          8.0552e-03,  1.2567e-01, -2.5973e-01,  4.7347e-01,  7.4102e-01,
          2.4177e-01, -3.5644e-02, -7.2210e-01, -6.3623e-01,  1.7805e-01,
         -7.4220e-01, -2.3577e-01, -1.0392e+00, -5.0178e-02,  1.9047e-01,
         -1.0710e+00, -6.7371e-01,  2.3909e-01, -2.4578e-01,  1.0895e-02,
          1.4772e-01,  3.0993e-01, -3.2987e-02, -6.1064e-02,  1.7789e-02,
         -3.4807e-02, -9.3948e-02, -1.1987e-01,  1.0861e-01,  1.4499e-01,
          5.5900e-02, -1.7733e-01, -1.3824e-01, -2.3044e-01, -1.5051e-01,
          3.0517e-01,  2.8111e-01,  2.2444e-01, -2.5240e-01,  7.2182e-02,
          5.0533e-02,  1.0176e-01, -1.0315e-01, -1.1249e-01, -6.9843e-02,
          9.1682e-02, -2.7653e-01, -3.3528e-02,  4.0697e-02,  1.3628e-01,
         -1.2854e-01, -7.4537e-02,  1.5321e-01,  5.4117e-02,  2.8837e-02,
         -7.7431e-02, -2.6596e-01, -3.7764e-01, -7.1349e-02,  2.8544e-01,
         -1.3466e-01, -7.6636e-02, -5.9535e-02,  7.0291e-02,  1.5314e-01,
          5.1107e-02,  2.5847e-01, -1.0058e-01, -1.0379e-01, -2.2881e-02,
          7.3876e-02]], device='cuda:0') tensor(0.2339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
147000 特征值优化 tensor(2.0807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2996e-01,  1.2932e+00, -6.5113e-01, -1.1660e+00,  3.3131e+00,
          2.3322e+00,  1.2962e+00, -9.9030e-01,  2.5230e-02, -4.3162e-01,
         -2.5011e-02,  1.9753e-01,  6.6580e-02,  5.1229e-01,  1.8606e-01,
          5.2230e-01, -6.5540e-01, -1.0221e-01,  8.0090e-01, -1.0673e+00,
          1.9002e-01,  4.3439e-01,  1.0512e-01, -4.6974e-01,  9.9065e-01,
         -7.0587e-01,  1.2374e-01,  9.0923e-03,  2.5275e-01,  1.3798e-01,
          4.3768e-02,  3.0601e-01,  4.7565e-02,  1.5676e-02,  8.4327e-01,
         -2.3436e-01,  3.3180e-01, -7.0816e-02,  6.2609e-01, -2.2580e-01,
         -1.6144e-01, -5.2287e-01,  5.9284e-01,  3.9171e-02, -3.4308e-01,
         -1.8417e-02,  2.1426e-01, -1.8671e-01,  3.9585e-01,  5.1305e-01,
         -3.8986e-02, -7.3208e-02, -4.0011e-01,  3.0184e-01,  7.7996e-03,
          4.0224e-03, -1.1973e-01,  1.4985e-01,  6.5749e-01, -3.8939e-01,
         -1.2786e-01,  1.4382e-01, -5.5801e-01, -2.0467e-01,  1.5987e-01,
         -1.2609e-01, -1.3092e-02, -2.9420e-01, -1.3981e-01, -1.1573e-01,
          3.0943e-01, -6.9780e-03,  8.4847e-02,  7.2623e-03,  1.2084e-01,
          3.3734e-02,  2.0493e-01, -7.0238e-02, -4.3347e-02, -1.9449e-02,
          2.4417e-03,  1.1577e-01,  1.0120e-01,  8.0214e-02,  9.6513e-03,
         -9.3219e-03, -1.2849e-01,  4.0576e-01, -1.4497e-01, -3.0818e-01,
          2.1164e-02,  1.4047e-01, -2.4342e-01,  4.6453e-01,  7.3577e-01,
          2.4799e-01, -2.6078e-02, -7.1890e-01, -6.2824e-01,  1.8181e-01,
         -7.4923e-01, -2.2630e-01, -1.0442e+00, -5.8904e-02,  1.8830e-01,
         -1.0719e+00, -6.7751e-01,  2.4538e-01, -2.2663e-01,  1.4817e-02,
          1.4469e-01,  3.0632e-01, -2.0554e-02, -6.1992e-02,  2.0332e-02,
         -3.9290e-02, -1.0268e-01, -1.3090e-01,  1.1226e-01,  1.5877e-01,
          5.7671e-02, -1.6647e-01, -1.3619e-01, -2.2503e-01, -1.6638e-01,
          3.0728e-01,  2.8944e-01,  2.1194e-01, -2.5690e-01,  6.0271e-02,
          5.9793e-02,  1.0528e-01, -1.0585e-01, -1.1438e-01, -6.3877e-02,
          7.8064e-02, -2.6988e-01, -4.2508e-02,  5.5066e-02,  1.3792e-01,
         -1.1904e-01, -8.0778e-02,  1.5482e-01,  6.1484e-02,  2.9882e-02,
         -7.2163e-02, -2.7969e-01, -3.7871e-01, -4.8991e-02,  2.8657e-01,
         -1.5163e-01, -7.9400e-02, -7.4583e-02,  5.4890e-02,  1.5145e-01,
          6.5322e-02,  2.4962e-01, -1.1826e-01, -9.8325e-02, -4.0082e-02,
          7.9198e-02]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
148000 特征值优化 tensor(2.0799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1098e-01,  1.2963e+00, -6.4717e-01, -1.1821e+00,  3.3017e+00,
          2.3271e+00,  1.3072e+00, -1.0080e+00,  2.2201e-02, -4.3466e-01,
         -2.4862e-02,  2.0696e-01,  6.3377e-02,  5.1868e-01,  1.8139e-01,
          5.2075e-01, -6.5389e-01, -8.4859e-02,  8.0098e-01, -1.0744e+00,
          1.8575e-01,  4.2981e-01,  9.3130e-02, -4.7293e-01,  1.0002e+00,
         -7.0410e-01,  1.1897e-01, -3.7302e-03,  2.4479e-01,  1.3582e-01,
          3.8639e-02,  3.0726e-01,  3.9341e-02, -1.3056e-02,  8.3486e-01,
         -2.2330e-01,  3.3440e-01, -7.6528e-02,  6.2746e-01, -2.1831e-01,
         -1.5901e-01, -5.2397e-01,  5.9104e-01,  4.1993e-02, -3.3391e-01,
         -3.0017e-02,  2.1975e-01, -1.6923e-01,  3.9879e-01,  5.0196e-01,
         -3.7107e-02, -6.4352e-02, -4.1392e-01,  2.8623e-01,  1.3382e-02,
         -6.4416e-03, -1.1814e-01,  1.6678e-01,  6.6232e-01, -3.9691e-01,
         -1.3645e-01,  1.3948e-01, -5.6217e-01, -2.0650e-01,  1.5965e-01,
         -1.3569e-01, -8.3206e-03, -2.9203e-01, -1.4940e-01, -1.2765e-01,
          3.0567e-01, -8.4844e-05,  9.3756e-02,  7.9313e-03,  1.1641e-01,
          3.1132e-02,  2.0717e-01, -7.4192e-02, -4.7864e-02, -1.3884e-02,
         -1.7281e-04,  1.1922e-01,  9.5608e-02,  7.4119e-02,  5.8980e-03,
          4.6213e-03, -1.2534e-01,  4.0511e-01, -1.3796e-01, -3.1380e-01,
          1.3253e-02,  1.3573e-01, -2.5978e-01,  4.6633e-01,  7.4962e-01,
          2.3940e-01, -3.2022e-02, -7.1361e-01, -6.3690e-01,  1.7862e-01,
         -7.3646e-01, -2.3144e-01, -1.0532e+00, -5.6824e-02,  1.7899e-01,
         -1.0565e+00, -6.7850e-01,  2.4979e-01, -2.1898e-01,  1.7134e-02,
          1.4549e-01,  2.9896e-01, -1.8642e-02, -5.5522e-02,  1.9507e-02,
         -4.0306e-02, -1.0878e-01, -1.2808e-01,  1.0510e-01,  1.5547e-01,
          6.6949e-02, -1.6759e-01, -1.3120e-01, -2.1639e-01, -1.6282e-01,
          2.9746e-01,  2.8487e-01,  2.2563e-01, -2.5211e-01,  6.0171e-02,
          4.8673e-02,  1.1470e-01, -9.7359e-02, -1.2054e-01, -6.7281e-02,
          9.6761e-02, -2.7656e-01, -3.7870e-02,  4.9487e-02,  1.4044e-01,
         -1.2423e-01, -8.6794e-02,  1.5523e-01,  5.8357e-02,  3.0121e-02,
         -6.7925e-02, -2.8150e-01, -3.7498e-01, -6.1037e-02,  2.8325e-01,
         -1.3911e-01, -7.4961e-02, -7.6949e-02,  6.5367e-02,  1.5338e-01,
          5.5473e-02,  2.6614e-01, -1.1006e-01, -1.1417e-01, -2.3768e-02,
          7.7068e-02]], device='cuda:0') tensor(0.2155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
149000 特征值优化 tensor(2.1143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4303e-01,  1.2889e+00, -6.5778e-01, -1.1712e+00,  3.2985e+00,
          2.3245e+00,  1.2883e+00, -1.0015e+00,  3.8997e-02, -4.3113e-01,
         -2.7058e-02,  2.0611e-01,  5.4719e-02,  5.1794e-01,  2.0256e-01,
          5.0834e-01, -6.3890e-01, -9.9909e-02,  8.1059e-01, -1.0515e+00,
          1.7817e-01,  4.5047e-01,  1.0138e-01, -4.9747e-01,  9.9271e-01,
         -7.0536e-01,  1.2574e-01, -4.9116e-04,  2.5407e-01,  1.4053e-01,
          5.0692e-02,  3.1499e-01,  3.4122e-02,  4.8946e-03,  8.2600e-01,
         -2.1191e-01,  3.4672e-01, -7.2194e-02,  6.2506e-01, -2.2460e-01,
         -1.6284e-01, -5.2403e-01,  5.9608e-01,  3.9037e-02, -3.4508e-01,
         -2.7302e-02,  2.2531e-01, -1.7472e-01,  4.0595e-01,  4.9505e-01,
         -2.7621e-02, -7.1172e-02, -3.9747e-01,  2.9588e-01,  9.0764e-03,
         -4.1780e-03, -1.1710e-01,  1.5937e-01,  6.6989e-01, -3.9990e-01,
         -1.3307e-01,  1.3889e-01, -5.5328e-01, -2.0759e-01,  1.5842e-01,
         -1.2662e-01, -8.6764e-03, -2.9020e-01, -1.5292e-01, -1.1803e-01,
          2.9819e-01, -1.2174e-02,  9.1265e-02,  2.8672e-02,  1.1409e-01,
          3.9801e-02,  2.0809e-01, -7.3969e-02, -4.8971e-02, -1.9496e-02,
         -1.7610e-04,  1.1073e-01,  9.8193e-02,  9.0232e-02,  1.2989e-03,
         -7.8780e-03, -1.3381e-01,  4.0977e-01, -1.5169e-01, -3.1598e-01,
          6.7087e-03,  1.2199e-01, -2.6130e-01,  4.5638e-01,  7.3538e-01,
          2.4661e-01, -2.7879e-02, -7.1263e-01, -6.5134e-01,  1.8239e-01,
         -7.4321e-01, -2.2938e-01, -1.0689e+00, -5.6532e-02,  1.8928e-01,
         -1.0545e+00, -6.8456e-01,  2.4458e-01, -2.0451e-01,  1.6169e-02,
          1.4609e-01,  3.0631e-01, -1.1676e-02, -5.8017e-02,  2.7693e-02,
         -4.4435e-02, -1.1079e-01, -1.2486e-01,  1.0912e-01,  1.5223e-01,
          6.6546e-02, -1.6860e-01, -1.4509e-01, -2.3025e-01, -1.5717e-01,
          3.0003e-01,  2.8049e-01,  2.2345e-01, -2.4810e-01,  6.8869e-02,
          5.3631e-02,  1.0566e-01, -1.0413e-01, -1.1392e-01, -7.1706e-02,
          1.0366e-01, -2.9460e-01, -2.6354e-02,  4.6712e-02,  1.4012e-01,
         -1.1629e-01, -7.1183e-02,  1.6734e-01,  5.0064e-02,  2.1892e-02,
         -7.1644e-02, -2.8068e-01, -3.6628e-01, -4.8977e-02,  2.7780e-01,
         -1.4457e-01, -7.5786e-02, -6.9330e-02,  5.4056e-02,  1.6293e-01,
          6.3852e-02,  2.5721e-01, -1.1810e-01, -1.0682e-01, -4.5481e-02,
          6.8374e-02]], device='cuda:0') tensor(0.2173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
150000 特征值优化 tensor(2.0821, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2821e-01,  1.2879e+00, -6.5561e-01, -1.1777e+00,  3.2980e+00,
          2.3196e+00,  1.2978e+00, -1.0157e+00,  3.4221e-02, -4.2831e-01,
         -2.1760e-02,  2.1831e-01,  6.1056e-02,  5.1390e-01,  1.8735e-01,
          5.3338e-01, -6.4474e-01, -9.9886e-02,  7.9991e-01, -1.0580e+00,
          1.8047e-01,  4.5144e-01,  1.0112e-01, -5.0937e-01,  9.9103e-01,
         -6.9912e-01,  1.3556e-01,  4.4863e-03,  2.4156e-01,  1.3751e-01,
          3.7280e-02,  3.0979e-01,  4.4719e-02,  1.4122e-02,  8.2797e-01,
         -2.0782e-01,  3.4075e-01, -6.6973e-02,  6.2706e-01, -2.3808e-01,
         -1.6253e-01, -5.2906e-01,  6.0043e-01,  4.2033e-02, -3.3850e-01,
         -1.7287e-02,  2.2103e-01, -1.8588e-01,  3.9365e-01,  4.9091e-01,
         -2.7491e-02, -5.8201e-02, -4.0431e-01,  2.8361e-01,  1.2957e-02,
         -4.3960e-03, -1.1772e-01,  1.5950e-01,  6.5512e-01, -4.0272e-01,
         -1.3190e-01,  1.4370e-01, -5.5875e-01, -2.0208e-01,  1.6349e-01,
         -1.2311e-01, -6.0969e-03, -2.9497e-01, -1.5101e-01, -1.3206e-01,
          2.9838e-01,  1.9856e-04,  9.5137e-02,  2.6767e-02,  1.1797e-01,
          3.3520e-02,  1.9979e-01, -7.4148e-02, -4.6365e-02, -1.5406e-02,
          1.4967e-02,  1.0997e-01,  8.8360e-02,  8.1008e-02,  1.1687e-02,
         -1.0560e-02, -1.2721e-01,  4.0826e-01, -1.3563e-01, -3.1975e-01,
          2.4883e-03,  1.2474e-01, -2.6602e-01,  4.5860e-01,  7.4540e-01,
          2.4174e-01, -2.6645e-02, -7.3065e-01, -6.6107e-01,  1.7472e-01,
         -7.1882e-01, -2.2945e-01, -1.0920e+00, -5.0089e-02,  1.8762e-01,
         -1.0482e+00, -6.9091e-01,  2.3536e-01, -1.9273e-01,  1.0862e-02,
          1.4784e-01,  3.0404e-01, -2.4257e-02, -5.4987e-02,  2.0157e-02,
         -3.8686e-02, -1.0355e-01, -1.2908e-01,  1.0715e-01,  1.4473e-01,
          6.3942e-02, -1.6664e-01, -1.3904e-01, -2.1763e-01, -1.5744e-01,
          2.9485e-01,  2.7994e-01,  2.3826e-01, -2.4296e-01,  6.3883e-02,
          5.5101e-02,  1.2179e-01, -9.9121e-02, -1.2701e-01, -8.2031e-02,
          9.5541e-02, -2.7267e-01, -2.1306e-02,  3.5976e-02,  1.4557e-01,
         -1.2231e-01, -8.5437e-02,  1.4617e-01,  4.8105e-02,  3.4686e-02,
         -6.9387e-02, -2.6075e-01, -3.6248e-01, -4.7313e-02,  2.7242e-01,
         -1.5048e-01, -7.3943e-02, -5.6890e-02,  5.2722e-02,  1.4374e-01,
          5.7950e-02,  2.5679e-01, -1.1137e-01, -1.0251e-01, -3.9455e-02,
          6.9084e-02]], device='cuda:0') tensor(0.2418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
151000 特征值优化 tensor(2.0796, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4491e-01,  1.2892e+00, -6.5486e-01, -1.1698e+00,  3.3030e+00,
          2.3195e+00,  1.3016e+00, -1.0092e+00,  3.5791e-02, -4.2564e-01,
         -2.7037e-02,  2.1077e-01,  6.0097e-02,  5.0231e-01,  1.9853e-01,
          5.3822e-01, -6.4670e-01, -1.0852e-01,  7.9677e-01, -1.0537e+00,
          1.8564e-01,  4.5882e-01,  1.1644e-01, -5.1628e-01,  9.8736e-01,
         -6.9107e-01,  1.2260e-01,  1.4032e-02,  2.6020e-01,  1.4131e-01,
          3.7327e-02,  3.0622e-01,  4.4088e-02,  2.4542e-02,  8.4051e-01,
         -2.2605e-01,  3.3947e-01, -8.1691e-02,  6.2531e-01, -2.2345e-01,
         -1.7057e-01, -5.2401e-01,  5.9260e-01,  4.8132e-02, -3.4430e-01,
         -8.8528e-03,  2.1531e-01, -1.8885e-01,  3.8935e-01,  4.9156e-01,
         -3.0996e-02, -5.9061e-02, -3.9259e-01,  2.8695e-01,  3.7693e-03,
         -5.7081e-03, -1.0553e-01,  1.6045e-01,  6.7029e-01, -3.9807e-01,
         -1.3285e-01,  1.4068e-01, -5.5755e-01, -2.0091e-01,  1.6471e-01,
         -1.2029e-01, -9.7558e-03, -2.9145e-01, -1.4053e-01, -1.2176e-01,
          3.0644e-01, -8.9784e-03,  8.5566e-02,  1.0267e-02,  1.2450e-01,
          2.6931e-02,  2.0345e-01, -6.7541e-02, -3.7423e-02, -1.2210e-02,
         -1.4800e-03,  1.0570e-01,  1.0348e-01,  8.4171e-02,  8.9680e-03,
         -1.4116e-02, -1.2092e-01,  4.0136e-01, -1.5049e-01, -3.0840e-01,
          1.8164e-02,  1.3775e-01, -2.6989e-01,  4.5093e-01,  7.3474e-01,
          2.4987e-01, -2.0740e-02, -7.2277e-01, -6.4654e-01,  1.9558e-01,
         -7.2608e-01, -2.2193e-01, -1.1029e+00, -5.7901e-02,  1.9837e-01,
         -1.0477e+00, -6.8281e-01,  2.4182e-01, -1.7915e-01,  1.5030e-02,
          1.4440e-01,  2.9832e-01, -1.6681e-02, -6.4741e-02,  2.0822e-02,
         -4.3140e-02, -1.1106e-01, -1.3747e-01,  1.1466e-01,  1.5892e-01,
          5.8664e-02, -1.6573e-01, -1.3975e-01, -2.2035e-01, -1.6997e-01,
          2.9919e-01,  2.8958e-01,  2.1971e-01, -2.4780e-01,  6.8093e-02,
          6.5990e-02,  1.1041e-01, -1.1164e-01, -1.1852e-01, -7.3240e-02,
          8.2479e-02, -2.7318e-01, -4.7132e-02,  5.8028e-02,  1.3714e-01,
         -1.1612e-01, -8.6090e-02,  1.5351e-01,  6.0505e-02,  3.6622e-02,
         -6.5155e-02, -2.7385e-01, -3.7362e-01, -4.5480e-02,  2.8181e-01,
         -1.4560e-01, -7.9970e-02, -7.0849e-02,  4.4155e-02,  1.5953e-01,
          5.9303e-02,  2.6135e-01, -1.2124e-01, -1.1187e-01, -4.7872e-02,
          8.0353e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
152000 特征值优化 tensor(2.0737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4845e-01,  1.2952e+00, -6.3522e-01, -1.1788e+00,  3.2990e+00,
          2.3144e+00,  1.2906e+00, -1.0226e+00,  5.2622e-02, -4.2812e-01,
         -2.7957e-02,  2.1037e-01,  6.3049e-02,  5.1372e-01,  1.9697e-01,
          5.3418e-01, -6.5301e-01, -9.5114e-02,  8.0126e-01, -1.0501e+00,
          1.7786e-01,  4.4407e-01,  1.0346e-01, -5.0524e-01,  9.9427e-01,
         -6.9586e-01,  1.2541e-01,  7.0745e-03,  2.6129e-01,  1.3667e-01,
          5.4568e-02,  3.1307e-01,  3.1459e-02,  4.2844e-03,  8.3527e-01,
         -2.1940e-01,  3.3683e-01, -8.4628e-02,  6.2519e-01, -2.2120e-01,
         -1.6343e-01, -5.2649e-01,  5.9416e-01,  3.8169e-02, -3.4041e-01,
         -2.0546e-02,  2.3267e-01, -1.8233e-01,  3.9644e-01,  4.8115e-01,
         -2.2685e-02, -5.2099e-02, -4.1069e-01,  2.8182e-01,  1.6222e-02,
         -1.5678e-02, -1.1540e-01,  1.6255e-01,  6.6656e-01, -4.0828e-01,
         -1.1789e-01,  1.4393e-01, -5.6416e-01, -2.0295e-01,  1.6223e-01,
         -1.2304e-01, -6.3988e-03, -2.9404e-01, -1.4511e-01, -1.3843e-01,
          2.9839e-01,  7.8385e-03,  1.0065e-01,  2.6780e-02,  1.1266e-01,
          1.4972e-02,  2.1125e-01, -6.7176e-02, -5.7933e-02, -8.1921e-03,
         -1.0984e-03,  1.1463e-01,  9.8136e-02,  7.5834e-02,  2.7261e-03,
          1.5175e-02, -1.2933e-01,  4.2357e-01, -1.2357e-01, -3.1937e-01,
          1.3723e-02,  1.3252e-01, -2.7125e-01,  4.5561e-01,  7.4851e-01,
          2.4064e-01, -3.3054e-02, -7.3465e-01, -6.5249e-01,  2.0399e-01,
         -7.1503e-01, -2.2512e-01, -1.1131e+00, -5.0211e-02,  1.8907e-01,
         -1.0349e+00, -6.9279e-01,  2.3128e-01, -1.6292e-01,  2.0465e-02,
          1.4730e-01,  3.0784e-01, -1.7611e-02, -5.3142e-02,  3.3352e-02,
         -4.1309e-02, -1.1160e-01, -1.3343e-01,  1.0314e-01,  1.3771e-01,
          6.4558e-02, -1.6686e-01, -1.3323e-01, -2.0833e-01, -1.5797e-01,
          2.8375e-01,  2.7979e-01,  2.3188e-01, -2.4070e-01,  5.2726e-02,
          5.4627e-02,  1.2338e-01, -9.5163e-02, -1.3023e-01, -9.0988e-02,
          1.0532e-01, -2.8152e-01, -3.5218e-02,  3.2837e-02,  1.4455e-01,
         -1.0777e-01, -9.7181e-02,  1.6074e-01,  5.7709e-02,  2.9286e-02,
         -6.4209e-02, -2.7785e-01, -3.6554e-01, -5.2189e-02,  2.7189e-01,
         -1.4287e-01, -6.5145e-02, -6.6996e-02,  5.7324e-02,  1.6312e-01,
          4.7753e-02,  2.6794e-01, -1.0745e-01, -1.0613e-01, -3.2585e-02,
          6.9907e-02]], device='cuda:0') tensor(0.2304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
153000 特征值优化 tensor(35.6194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.0082e-01, -8.7299e-01,  4.3223e-01,  2.3944e-01,  7.7711e-01,
          3.9518e-01, -6.8089e-01,  2.0118e+00,  9.0310e-02,  1.5158e+00,
          1.2840e+00,  6.1074e-01,  2.8112e+00, -4.4545e-01, -6.4708e-01,
          4.0204e-02,  6.1463e-02,  8.2765e-02,  8.5220e-01, -1.4869e+00,
          7.8283e-01, -1.2775e-01,  5.1602e-01,  2.2497e+00,  3.9520e-01,
          6.0255e-01, -1.6709e+00,  1.9814e-02,  6.5003e-01, -3.1424e-01,
         -5.9223e-01,  9.7439e-02,  2.0285e-01, -1.3588e+00,  6.8679e-01,
         -2.9998e-02, -2.7364e-01,  3.6843e-01, -2.4469e-01,  5.1792e-01,
          2.0690e-01,  2.6725e-01, -7.6706e-01,  1.8699e+00,  1.3657e+00,
          1.2699e+00,  7.2631e-01,  5.8764e-01, -8.5248e-01,  8.9184e-01,
         -5.2923e-02,  4.7247e-01,  3.1269e-02,  1.0615e+00,  3.5868e-01,
          4.6110e-01,  4.2114e-01,  1.0129e+00, -2.4617e-01,  1.5857e+00,
         -4.5272e-01, -1.7985e-01,  2.4146e-02, -4.4213e-01, -2.0410e-01,
          9.4116e-01, -4.9046e-02, -4.3030e-01, -1.0979e+00,  2.3008e+00,
         -1.1405e-02,  2.3814e-01,  1.4441e-01, -5.9105e-01, -2.7964e-01,
         -3.6235e-01,  1.0616e-01, -7.9860e-01, -1.5808e+00, -1.3890e-01,
          1.3254e+00, -3.6478e-01, -2.8457e-01,  6.5850e-01, -9.0821e-02,
          1.7712e+00, -6.8709e-01, -7.6450e-01, -1.2220e+00, -2.3926e+00,
          2.3101e-01,  1.5995e-01, -3.0882e-01,  4.3923e-01,  9.1091e-01,
         -6.3248e-01, -7.5170e-02, -2.1360e+00,  3.8360e-01, -3.2895e-01,
         -3.4365e-01,  4.1116e-01, -1.0294e+00,  1.7343e-01,  2.2190e-01,
          5.7692e-01,  1.5348e-02, -8.1539e-02,  5.9654e-01, -5.0853e-01,
          2.4534e-01, -1.1024e+00, -7.4913e-01, -3.1925e-01,  1.7044e-01,
         -9.5265e-02,  8.0379e-04,  4.0581e-01, -4.6001e-04,  2.8982e-01,
         -8.6138e-01, -3.6521e-01, -7.2464e-02, -1.2137e+00, -1.3006e+00,
          2.6208e-01,  1.4870e+00,  1.1384e+00, -4.4285e-02, -2.0589e-01,
         -1.0124e+00, -1.5194e+00,  7.7367e-01, -1.5669e+00, -3.9186e-01,
         -2.6398e-01, -2.8302e-01,  1.3904e+00, -4.5661e-02, -6.6893e-01,
          9.2399e-01,  9.2350e-01, -9.4719e-01,  1.2933e-02,  7.0742e-02,
         -8.9784e-01,  5.4709e-01,  3.4715e-01,  2.0355e-01, -8.9560e-01,
         -4.5442e-01, -8.1391e-01, -1.0239e+00, -8.7672e-01,  5.2086e-01,
         -5.9608e-01, -2.5642e-01,  1.1043e+00, -4.5834e-01, -4.5179e-03,
         -6.5888e-01]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
154000 特征值优化 tensor(7.4284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6317e+00, -1.3524e-01,  3.6315e-02, -7.2899e-01,  8.4883e-01,
          1.0998e+00, -5.7264e-01,  1.3848e+00,  6.4472e-01,  8.5777e-01,
          5.4949e-01,  1.8275e-01,  1.9200e+00, -5.4824e-01, -1.6090e-01,
          3.5670e-01,  5.6591e-01, -2.8293e-01,  5.6887e-01, -1.0668e+00,
         -7.7940e-02,  5.3307e-01,  7.5266e-01,  2.1270e+00, -1.7023e-01,
         -1.2551e-01, -7.7018e-01, -5.0101e-02, -5.9495e-02, -1.4748e-01,
         -4.4089e-02,  2.6067e-01, -1.8675e-01, -5.5056e-01,  2.7525e-02,
          5.3914e-02,  1.3349e-01,  1.4935e-01,  9.6387e-02,  1.8189e-01,
          3.9251e-01,  3.2793e-02, -5.0002e-02,  9.8265e-01,  5.0867e-01,
          4.7665e-01,  1.3386e-01,  6.8802e-02, -2.6503e-01, -6.0338e-03,
         -1.7968e-01,  1.1263e-01,  4.8831e-02,  2.8453e-01,  1.0970e-01,
         -9.7455e-03,  6.5737e-02,  2.1773e-01, -3.1475e-01,  5.2304e-01,
         -2.1695e-01, -1.6058e-01, -1.3168e-01,  2.1037e-02, -1.5152e-01,
          1.5772e-01,  1.9803e-02,  7.2080e-02, -4.5497e-01,  1.2556e+00,
         -2.8916e-02,  3.8287e-03,  1.3411e-02, -1.1523e-01, -2.5550e-02,
          1.1120e-01,  1.3447e-01, -1.1760e-01, -8.0966e-01, -2.1740e-01,
          4.3673e-01, -5.5220e-02, -1.5841e-01,  2.4548e-01, -1.7007e-01,
          7.9114e-01, -3.8384e-02, -2.1861e-01, -3.8936e-01, -1.4675e+00,
          5.4441e-01,  5.8037e-01, -2.4066e-01, -4.0326e-01,  3.0582e-01,
         -5.3756e-01, -1.5631e-01, -9.6490e-01, -4.2812e-02, -3.9615e-01,
         -2.3728e-02,  6.7186e-01, -4.5455e-01, -3.6814e-02, -1.0470e-01,
          8.4243e-02, -7.9034e-02, -2.9523e-02,  5.9997e-01, -1.5785e-01,
         -8.0775e-02, -2.6542e-01, -2.8282e-01, -1.2494e-01, -1.0855e-01,
          1.3822e-01,  6.2166e-02,  1.9112e-01,  3.1644e-01, -7.4406e-02,
         -2.4616e-01, -3.4814e-02, -2.1737e-01, -1.0567e-01, -5.2751e-01,
          2.3500e-01,  5.2304e-01,  3.1357e-01,  5.0944e-02,  2.3714e-01,
         -3.5640e-01, -6.7580e-01,  1.5244e-01, -7.3416e-01, -3.3290e-02,
         -3.9860e-01, -1.0644e-01,  7.0123e-01,  1.1688e-01, -1.5390e-01,
          1.1602e-01,  1.0687e-01, -3.6696e-02,  1.6395e-02, -1.9950e-03,
         -1.5266e-01,  3.3973e-01,  4.8856e-02,  2.8196e-01, -2.6644e-01,
         -6.0936e-02, -1.3675e-01, -1.9488e-01, -2.1138e-01,  1.3400e-01,
         -5.3257e-03, -6.6342e-02,  3.2042e-01, -4.6111e-03,  2.9234e-02,
         -2.1227e-01]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
155000 特征值优化 tensor(1.0987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2522,  0.5254, -0.1399, -0.9044,  2.2043,  1.4344, -0.3788,  1.5200,
          0.6769,  1.0986,  0.3711, -0.2550,  1.3223, -0.0931, -0.1746,  0.2253,
          0.5057,  0.1659, -0.1136, -0.5099, -0.0625,  0.5823,  0.6016,  1.1275,
         -0.2529, -0.3842, -0.3622,  0.2142,  0.3110, -0.0561,  0.1042,  0.0448,
         -0.3116, -0.2629, -0.0170,  0.1583, -0.3040, -0.1686, -0.0089,  0.0537,
          0.6688,  0.0494, -0.0305,  0.5293, -0.1626,  0.3065, -0.0965,  0.1415,
         -0.0588, -0.0708, -0.2515,  0.2644,  0.0026,  0.1016,  0.1537,  0.2239,
          0.1770,  0.2788, -0.0389,  0.2871, -0.3642, -0.2222, -0.3314,  0.1792,
         -0.2129,  0.1111,  0.0898,  0.0639, -0.4412,  0.7429, -0.0201,  0.0286,
          0.1306,  0.2130, -0.2618,  0.2643,  0.1880, -0.0701, -0.4194, -0.2561,
          0.0034,  0.1172, -0.1572,  0.1724, -0.0677,  0.5254, -0.0040, -0.2758,
         -0.1506, -0.7238,  0.3314,  0.4530, -0.1263, -0.3297, -0.0461, -0.3578,
          0.6151, -0.2739,  0.0942, -0.4857, -0.5557,  0.4098, -0.4151,  0.1302,
         -0.0538, -0.2347, -0.1809, -0.3635,  0.0206, -0.1307,  0.0701,  0.1364,
         -0.0421,  0.0800, -0.0312, -0.0243, -0.0430,  0.1429,  0.1129,  0.1075,
         -0.0970, -0.0059, -0.2299, -0.0252, -0.3582,  0.1052,  0.1466, -0.0895,
          0.3464,  0.1367, -0.0711, -0.2026,  0.0474, -0.3169, -0.1149, -0.0302,
          0.1655, -0.0209, -0.0121, -0.2044,  0.0394, -0.0391,  0.0494, -0.0688,
          0.0481,  0.0470, -0.0520,  0.0930,  0.1584, -0.2376,  0.2977, -0.2076,
          0.0196,  0.1323,  0.1905, -0.0859, -0.0507, -0.1347, -0.0294, -0.1046,
         -0.0870]], device='cuda:0') tensor(0.2308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
156000 特征值优化 tensor(0.9317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3249,  0.5462, -0.3733, -1.0098,  2.2394,  1.3731, -0.5400,  1.6796,
          0.8705,  1.1093,  0.3610, -0.1945,  1.2884,  0.0089, -0.3629, -0.1714,
          0.5782,  0.2547, -0.1745, -0.5752,  0.0297,  0.5768,  0.4776,  1.1363,
         -0.1577, -0.4302, -0.3329,  0.1150,  0.2279, -0.0794,  0.1495,  0.0308,
         -0.2263, -0.2223, -0.0530,  0.1663, -0.2795, -0.2034,  0.0489,  0.0164,
          0.6396,  0.0622, -0.0199,  0.4466, -0.1535,  0.2997, -0.0432,  0.1180,
         -0.1808, -0.0074, -0.3163,  0.3043, -0.0170,  0.1243,  0.2369,  0.2299,
          0.1882,  0.2640, -0.0568,  0.3317, -0.2882, -0.2475, -0.3474,  0.2263,
         -0.1835,  0.1404,  0.0859,  0.0522, -0.4051,  0.6991,  0.0411, -0.0178,
          0.1252,  0.1810, -0.3017,  0.2791,  0.2031, -0.2177, -0.3647, -0.2101,
         -0.0622,  0.0735, -0.0795,  0.2027, -0.1504,  0.5270,  0.0600, -0.2662,
         -0.0218, -0.5831,  0.4229,  0.2523, -0.2420, -0.2566, -0.0888, -0.2974,
          0.5938, -0.2515,  0.1209, -0.2576, -0.3234,  0.2823, -0.3129,  0.2146,
         -0.1102, -0.3259, -0.1181, -0.3357,  0.0825, -0.1173,  0.0579,  0.1167,
         -0.1446,  0.1433, -0.0623, -0.0473, -0.0755,  0.1527,  0.0897,  0.0415,
         -0.1903,  0.0434, -0.2546, -0.0321, -0.3221,  0.1019,  0.0888, -0.1846,
          0.3523,  0.1017, -0.0557, -0.1113,  0.0270, -0.2732, -0.0301,  0.0987,
          0.1724, -0.1066, -0.0843, -0.2295,  0.0416, -0.0403,  0.1064, -0.0255,
          0.0227,  0.1085, -0.1661,  0.1266,  0.2161, -0.1649,  0.2533, -0.2728,
          0.0517,  0.1918,  0.2323, -0.0784,  0.0156, -0.1209,  0.0291, -0.1069,
         -0.0575]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
157000 特征值优化 tensor(0.8989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2932e+00,  5.4063e-01, -4.7738e-01, -1.0111e+00,  2.1211e+00,
          1.3519e+00, -7.3474e-01,  1.8493e+00,  9.9634e-01,  1.1254e+00,
          3.5239e-01, -1.0653e-01,  1.2175e+00,  6.0609e-02, -5.0737e-01,
         -4.0553e-01,  6.4008e-01,  3.0409e-01, -2.3182e-01, -6.0969e-01,
          6.6243e-02,  5.9990e-01,  4.5525e-01,  1.1670e+00, -1.9147e-01,
         -4.0295e-01, -2.8154e-01,  9.1791e-02,  1.6025e-01, -9.6209e-02,
          2.3589e-01,  5.9916e-02, -1.4042e-01, -1.8482e-01, -7.8657e-02,
          1.4521e-01, -2.8465e-01, -2.0844e-01,  3.2848e-02,  6.0065e-03,
          5.9935e-01,  5.6268e-02, -1.9529e-02,  3.8922e-01, -1.3788e-01,
          2.9775e-01, -5.0364e-02,  1.3088e-01, -2.0803e-01, -1.5945e-02,
         -3.3522e-01,  3.2852e-01, -1.2184e-01,  1.1996e-01,  2.6321e-01,
          2.2211e-01,  1.2673e-01,  2.7214e-01, -2.0915e-02,  3.6321e-01,
         -2.5170e-01, -2.6290e-01, -3.2372e-01,  2.6113e-01, -1.6488e-01,
          1.6570e-01,  1.1351e-01,  5.1677e-03, -3.7042e-01,  6.6831e-01,
          9.3094e-02, -2.7378e-02,  9.7500e-02,  1.7862e-01, -2.4884e-01,
          2.6309e-01,  2.1717e-01, -1.8577e-01, -2.9615e-01, -1.8851e-01,
         -8.1720e-02,  6.3805e-02, -3.8543e-02,  1.8739e-01, -1.2655e-01,
          4.6610e-01,  1.0748e-01, -2.6690e-01,  6.6222e-02, -5.5155e-01,
          4.4590e-01,  2.2139e-01, -1.8151e-01, -3.0788e-01, -8.9065e-02,
         -2.6887e-01,  6.1984e-01, -2.1951e-01,  1.3142e-01, -3.0465e-01,
         -3.0482e-01,  1.6667e-01, -2.4964e-01,  2.9015e-01, -2.1965e-01,
         -3.4821e-01, -9.5543e-02, -2.8225e-01,  8.2276e-02, -1.3393e-01,
          6.0433e-02,  1.0249e-01, -1.9339e-01,  1.9076e-01, -3.9410e-02,
         -5.2362e-02, -1.1888e-01,  1.5752e-01,  8.9304e-02, -6.6296e-03,
         -1.8516e-01,  7.8274e-02, -2.7091e-01, -4.3294e-02, -2.8820e-01,
          1.0089e-01,  6.6660e-02, -2.1189e-01,  3.4629e-01,  9.2611e-02,
         -2.4363e-02, -5.7927e-02,  2.5080e-02, -2.5323e-01, -1.2556e-04,
          1.7983e-01,  1.6477e-01, -7.5984e-02, -8.7253e-02, -2.1062e-01,
          5.5320e-03, -7.6516e-02,  3.0040e-02, -1.7998e-02,  2.2585e-02,
          1.5077e-01, -1.8491e-01,  1.5414e-01,  1.9125e-01, -1.4369e-01,
          2.4609e-01, -2.7489e-01,  8.9968e-02,  1.7211e-01,  2.9616e-01,
         -6.1835e-02,  3.0243e-02, -1.2103e-01,  5.8147e-02, -1.2559e-01,
         -4.4214e-02]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
158000 特征值优化 tensor(0.9172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1909e+00,  5.2975e-01, -5.6242e-01, -1.0096e+00,  2.0659e+00,
          1.3491e+00, -8.5490e-01,  1.9772e+00,  1.1671e+00,  1.1072e+00,
          3.9618e-01, -7.1953e-02,  1.1856e+00,  8.3536e-02, -4.8241e-01,
         -5.0819e-01,  7.2331e-01,  2.9365e-01, -2.9414e-01, -6.2138e-01,
          3.9912e-02,  6.1744e-01,  4.5534e-01,  1.2069e+00, -2.6265e-01,
         -3.3863e-01, -2.3013e-01,  5.1063e-02,  9.2098e-02, -7.3787e-02,
          2.5556e-01,  1.1711e-01, -4.3373e-02, -1.5118e-01, -8.2659e-02,
          1.0539e-01, -2.7679e-01, -2.1877e-01, -6.6928e-03,  2.9515e-02,
          5.4602e-01,  5.9091e-02, -2.0976e-02,  3.6449e-01, -1.6719e-01,
          2.8864e-01, -5.4445e-02,  1.3996e-01, -2.2761e-01, -3.4919e-02,
         -3.0843e-01,  3.5026e-01, -1.5583e-01,  1.2185e-01,  3.0171e-01,
          2.3743e-01,  1.1212e-01,  2.2534e-01,  1.7752e-02,  3.7335e-01,
         -2.0888e-01, -2.9206e-01, -2.6994e-01,  2.4864e-01, -1.6524e-01,
          2.1539e-01,  1.1439e-01,  5.3642e-03, -3.5045e-01,  6.3735e-01,
          1.3730e-01, -4.7006e-02,  7.1215e-02,  1.7309e-01, -2.1282e-01,
          2.5531e-01,  2.4584e-01, -1.8218e-01, -2.5253e-01, -1.7452e-01,
         -9.9742e-02,  9.7782e-02, -1.1293e-02,  1.6910e-01, -1.3365e-01,
          4.4010e-01,  1.3047e-01, -2.1616e-01,  1.0213e-01, -4.9655e-01,
          4.4658e-01,  1.9888e-01, -1.2269e-01, -2.7517e-01, -8.8462e-02,
         -2.5140e-01,  5.8819e-01, -2.1795e-01,  9.2538e-02, -3.0948e-01,
         -2.2436e-01,  8.9828e-02, -2.4482e-01,  3.4353e-01, -2.6152e-01,
         -3.2601e-01, -1.2189e-01, -2.3147e-01,  7.2544e-02, -1.0356e-01,
          4.6696e-02,  7.0390e-02, -1.9447e-01,  1.7831e-01, -5.6767e-02,
         -1.4800e-02, -1.5120e-01,  1.7467e-01,  7.7277e-02, -3.4813e-02,
         -2.0698e-01,  8.3561e-02, -2.6212e-01, -4.2960e-02, -2.6525e-01,
          9.6144e-02,  3.7429e-02, -2.1890e-01,  3.4535e-01,  7.9884e-02,
          1.7510e-03, -2.4666e-02,  1.5478e-02, -2.4086e-01,  1.5199e-02,
          2.1987e-01,  1.9094e-01, -6.8457e-02, -1.0347e-01, -1.9792e-01,
         -5.9195e-03, -1.0649e-01,  5.8422e-02, -5.8216e-02,  2.5150e-02,
          1.7049e-01, -2.0786e-01,  1.3487e-01,  1.7383e-01, -1.4273e-01,
          2.4288e-01, -2.8164e-01,  1.1661e-01,  1.6151e-01,  3.2570e-01,
         -5.0366e-02,  3.4761e-02, -1.0635e-01,  9.4181e-02, -1.0278e-01,
         -2.1077e-02]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
159000 特征值优化 tensor(0.9178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1036,  0.5256, -0.6155, -1.0064,  1.9454,  1.3420, -1.0124,  2.1016,
          1.2979,  1.1022,  0.4397, -0.0709,  1.1960,  0.0670, -0.4528, -0.5292,
          0.7525,  0.2941, -0.2826, -0.6575, -0.0233,  0.5946,  0.4434,  1.2365,
         -0.3152, -0.2746, -0.1859,  0.0030,  0.0806, -0.0629,  0.2796,  0.1067,
          0.0247, -0.1356, -0.1022,  0.0633, -0.2724, -0.2259, -0.0420,  0.0513,
          0.5156,  0.0610, -0.0211,  0.3361, -0.1732,  0.2438, -0.0469,  0.1564,
         -0.2363, -0.0430, -0.2743,  0.3826, -0.1830,  0.1296,  0.3382,  0.2555,
          0.0876,  0.1987,  0.0281,  0.3864, -0.1794, -0.3240, -0.2238,  0.2401,
         -0.1575,  0.2494,  0.1043,  0.0109, -0.3380,  0.6235,  0.1499, -0.0322,
          0.0650,  0.1991, -0.2036,  0.2544,  0.2411, -0.1767, -0.2601, -0.1611,
         -0.1198,  0.0956,  0.0206,  0.1325, -0.1277,  0.4213,  0.1175, -0.1970,
          0.1290, -0.4772,  0.4363,  0.1922, -0.1034, -0.2788, -0.0914, -0.2358,
          0.5918, -0.2205,  0.1383, -0.3093, -0.1881,  0.0391, -0.2776,  0.3417,
         -0.2967, -0.3488, -0.1765, -0.1791,  0.0729, -0.0946,  0.0300,  0.0530,
         -0.2037,  0.1487, -0.0508,  0.0121, -0.1560,  0.1756,  0.0783, -0.0588,
         -0.2119,  0.0759, -0.2733, -0.0472, -0.2709,  0.1073,  0.0109, -0.2192,
          0.3506,  0.0720,  0.0182, -0.0319,  0.0031, -0.2236,  0.0209,  0.2131,
          0.2081, -0.0701, -0.0953, -0.1631, -0.0028, -0.1258,  0.0591, -0.0633,
          0.0344,  0.1792, -0.2177,  0.1302,  0.1351, -0.1663,  0.2248, -0.2784,
          0.1224,  0.1500,  0.3275, -0.0782,  0.0305, -0.1103,  0.1250, -0.0975,
         -0.0121]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
160000 特征值优化 tensor(0.8593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0245e+00,  5.0718e-01, -6.7377e-01, -1.0108e+00,  1.8921e+00,
          1.3772e+00, -1.1314e+00,  2.2057e+00,  1.3817e+00,  1.0890e+00,
          4.5561e-01, -4.8075e-02,  1.2005e+00,  9.2826e-02, -4.3424e-01,
         -5.7300e-01,  7.7298e-01,  3.0227e-01, -2.7919e-01, -6.9527e-01,
         -4.4515e-02,  5.8133e-01,  4.1598e-01,  1.2368e+00, -3.5831e-01,
         -2.1977e-01, -1.5648e-01, -1.8523e-02,  9.2729e-02, -7.8028e-02,
          2.7878e-01,  1.2612e-01,  8.6753e-02, -1.3556e-01, -1.3394e-01,
          2.7431e-02, -2.6542e-01, -2.1662e-01, -7.4352e-02,  6.6613e-02,
          4.7153e-01,  6.2989e-02, -2.1295e-02,  3.1505e-01, -1.5464e-01,
          2.3394e-01, -3.3714e-02,  1.5190e-01, -2.2399e-01, -1.0799e-02,
         -2.4993e-01,  4.2670e-01, -1.8649e-01,  1.3414e-01,  3.5723e-01,
          2.5243e-01,  6.1230e-02,  2.0275e-01,  3.9763e-02,  3.9080e-01,
         -1.5494e-01, -3.5358e-01, -1.8838e-01,  2.0158e-01, -1.5570e-01,
          2.9630e-01,  1.3081e-01, -2.8053e-03, -3.3254e-01,  6.0087e-01,
          1.7043e-01, -2.8372e-02,  6.1960e-02,  2.0794e-01, -1.7873e-01,
          2.5723e-01,  2.5902e-01, -1.7505e-01, -2.6515e-01, -1.4251e-01,
         -1.2364e-01,  9.3407e-02,  4.1280e-02,  1.0159e-01, -1.1480e-01,
          4.1283e-01,  1.1530e-01, -1.8911e-01,  1.3737e-01, -4.5571e-01,
          4.2923e-01,  1.8487e-01, -5.6742e-02, -2.6857e-01, -9.0096e-02,
         -2.2240e-01,  6.0536e-01, -1.9877e-01,  1.6850e-01, -3.0529e-01,
         -1.5425e-01,  5.4671e-03, -2.7500e-01,  3.3013e-01, -3.0800e-01,
         -3.6526e-01, -2.0890e-01, -1.3410e-01,  6.5060e-02, -7.7316e-02,
          1.7041e-03,  6.4169e-02, -2.0410e-01,  1.2296e-01, -4.0643e-02,
          1.4074e-02, -1.5168e-01,  1.7666e-01,  8.1743e-02, -6.0237e-02,
         -2.3211e-01,  6.6947e-02, -2.7619e-01, -4.8071e-02, -2.7898e-01,
          1.2412e-01,  3.7206e-03, -2.2001e-01,  3.4220e-01,  8.6752e-02,
          2.5486e-02, -3.1617e-02,  2.7184e-03, -2.1997e-01,  1.4795e-02,
          2.0383e-01,  2.2231e-01, -6.6939e-02, -6.1714e-02, -1.1944e-01,
          9.5655e-03, -1.3664e-01,  3.7383e-02, -7.4644e-02,  1.8002e-02,
          1.8538e-01, -2.2089e-01,  1.3756e-01,  1.0985e-01, -1.7200e-01,
          2.2495e-01, -2.8382e-01,  1.2076e-01,  1.3990e-01,  3.2018e-01,
         -9.5172e-02,  1.5451e-02, -1.0577e-01,  1.4294e-01, -8.3794e-02,
         -1.3737e-03]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
161000 特征值优化 tensor(0.8547, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9692e+00,  4.9286e-01, -7.1717e-01, -1.0098e+00,  1.8360e+00,
          1.4273e+00, -1.2026e+00,  2.2744e+00,  1.4274e+00,  1.0763e+00,
          4.7850e-01, -1.9588e-02,  1.1969e+00,  1.0707e-01, -3.9443e-01,
         -5.9456e-01,  7.9693e-01,  3.0641e-01, -2.7574e-01, -7.0680e-01,
         -6.1230e-02,  5.7543e-01,  4.0232e-01,  1.2361e+00, -3.9661e-01,
         -2.1152e-01, -1.3097e-01, -2.4643e-02,  8.2301e-02, -8.2204e-02,
          2.7009e-01,  1.2766e-01,  1.2249e-01, -1.2467e-01, -1.5700e-01,
         -5.7936e-04, -2.5877e-01, -2.1029e-01, -9.5455e-02,  7.3631e-02,
          4.3775e-01,  6.0809e-02, -2.2009e-02,  3.0699e-01, -1.4467e-01,
          2.2996e-01, -1.2158e-02,  1.6553e-01, -2.1883e-01,  2.0507e-02,
         -2.2605e-01,  4.7087e-01, -1.7705e-01,  1.3430e-01,  3.7981e-01,
          2.5666e-01,  4.3371e-02,  2.1537e-01,  3.0308e-02,  3.9948e-01,
         -1.3314e-01, -3.6929e-01, -1.6781e-01,  1.7244e-01, -1.4485e-01,
          3.2031e-01,  1.4755e-01, -1.0100e-02, -3.2456e-01,  5.7792e-01,
          1.7742e-01, -3.3038e-02,  5.9741e-02,  2.1153e-01, -1.6448e-01,
          2.5627e-01,  2.6327e-01, -1.5083e-01, -2.6372e-01, -1.3149e-01,
         -1.2198e-01,  9.4049e-02,  5.6427e-02,  9.0581e-02, -9.7853e-02,
          4.0372e-01,  1.0660e-01, -1.8032e-01,  1.4786e-01, -4.3495e-01,
          4.1924e-01,  1.8170e-01, -3.2136e-02, -2.6854e-01, -9.3393e-02,
         -2.1322e-01,  5.9974e-01, -1.9382e-01,  1.9330e-01, -3.0426e-01,
         -1.3707e-01, -2.5761e-02, -2.7027e-01,  3.0866e-01, -3.1872e-01,
         -3.9469e-01, -2.1777e-01, -1.0768e-01,  4.7891e-02, -6.2492e-02,
         -3.2432e-02,  8.0889e-02, -1.9708e-01,  1.0392e-01, -3.6010e-02,
          2.7704e-02, -1.3921e-01,  1.8602e-01,  1.0680e-01, -5.9616e-02,
         -2.4736e-01,  6.2630e-02, -2.8400e-01, -4.2332e-02, -2.8384e-01,
          1.4327e-01,  3.7726e-04, -2.2426e-01,  3.2506e-01,  8.9598e-02,
          3.4893e-02, -2.0289e-02, -1.0708e-02, -2.1763e-01,  8.3946e-03,
          1.9757e-01,  2.3369e-01, -7.5737e-02, -5.0343e-02, -9.7976e-02,
          3.4994e-02, -1.3558e-01,  1.4162e-02, -8.3941e-02,  1.4382e-02,
          1.9554e-01, -2.1039e-01,  1.3708e-01,  1.0002e-01, -1.7994e-01,
          2.1249e-01, -2.7265e-01,  1.1727e-01,  1.3885e-01,  3.1888e-01,
         -9.9909e-02,  3.5453e-03, -9.9045e-02,  1.4647e-01, -8.4024e-02,
         -4.3893e-03]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
162000 特征值优化 tensor(0.8542, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9782e+00,  4.4756e-01, -7.6541e-01, -1.0096e+00,  1.8226e+00,
          1.4701e+00, -1.2325e+00,  2.3053e+00,  1.4836e+00,  1.0554e+00,
          4.8870e-01, -2.0887e-03,  1.2106e+00,  1.1815e-01, -3.5660e-01,
         -5.7442e-01,  7.9812e-01,  3.1000e-01, -2.6667e-01, -7.1734e-01,
         -6.6982e-02,  5.4884e-01,  3.9357e-01,  1.2505e+00, -4.2926e-01,
         -1.8738e-01, -1.3143e-01, -1.3604e-02,  6.3720e-02, -8.6443e-02,
          2.5936e-01,  1.3407e-01,  1.4573e-01, -1.2285e-01, -1.8522e-01,
         -6.6465e-03, -2.5685e-01, -2.0615e-01, -1.0227e-01,  7.4217e-02,
          4.1089e-01,  6.0364e-02, -2.1797e-02,  2.8558e-01, -1.4497e-01,
          2.2181e-01,  6.6268e-06,  1.5177e-01, -2.2113e-01,  5.1293e-02,
         -2.1280e-01,  5.1070e-01, -1.5609e-01,  1.3178e-01,  3.9141e-01,
          2.7532e-01,  2.6669e-02,  2.4206e-01,  2.1692e-02,  4.0328e-01,
         -1.5180e-01, -3.7991e-01, -1.2665e-01,  1.5770e-01, -1.2876e-01,
          3.4343e-01,  1.6651e-01, -2.1177e-02, -3.1487e-01,  5.5113e-01,
          1.7275e-01, -2.7885e-02,  5.1678e-02,  2.0664e-01, -1.7277e-01,
          2.5891e-01,  2.6863e-01, -1.4065e-01, -2.9017e-01, -1.2451e-01,
         -1.2523e-01,  8.2981e-02,  6.9570e-02,  6.2429e-02, -8.9238e-02,
          3.9178e-01,  9.1932e-02, -1.8861e-01,  1.4802e-01, -4.2257e-01,
          4.1267e-01,  1.6233e-01, -1.1335e-02, -2.7683e-01, -9.5807e-02,
         -1.9927e-01,  6.1613e-01, -1.7287e-01,  1.9149e-01, -2.8293e-01,
         -9.0958e-02, -7.1421e-02, -2.5756e-01,  2.9331e-01, -3.1547e-01,
         -3.8659e-01, -1.8775e-01, -7.7041e-02,  5.5948e-02, -4.9606e-02,
         -6.5329e-02,  8.8438e-02, -2.0100e-01,  9.3931e-02, -3.1421e-02,
          4.8711e-02, -1.3153e-01,  1.8823e-01,  1.2285e-01, -6.2432e-02,
         -2.5906e-01,  7.3668e-02, -2.8818e-01, -4.2034e-02, -2.9135e-01,
          1.4830e-01,  1.4204e-02, -2.3036e-01,  3.1167e-01,  7.8389e-02,
          4.4476e-02, -2.4471e-03, -3.1714e-02, -2.2243e-01,  1.3053e-02,
          1.7355e-01,  2.3024e-01, -7.4335e-02, -5.2430e-02, -6.4646e-02,
          6.8117e-02, -1.4734e-01,  1.0990e-02, -8.7374e-02,  1.3017e-02,
          1.8406e-01, -2.0258e-01,  1.3374e-01,  1.0993e-01, -1.8153e-01,
          1.9944e-01, -2.6855e-01,  1.1370e-01,  1.3119e-01,  3.3080e-01,
         -1.1236e-01, -8.4282e-04, -8.3358e-02,  1.3995e-01, -9.0312e-02,
         -9.0733e-03]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
163000 特征值优化 tensor(0.8488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0166e+00,  3.8567e-01, -8.1400e-01, -1.0151e+00,  1.8418e+00,
          1.4967e+00, -1.2390e+00,  2.3226e+00,  1.5278e+00,  1.0235e+00,
          5.1941e-01,  3.2096e-02,  1.1926e+00,  1.2429e-01, -3.0927e-01,
         -5.3876e-01,  7.9549e-01,  3.0575e-01, -2.6189e-01, -7.2132e-01,
         -6.4897e-02,  5.2457e-01,  3.8283e-01,  1.2710e+00, -4.4560e-01,
         -1.7268e-01, -1.2832e-01,  3.5600e-04,  3.8450e-02, -9.9074e-02,
          2.6431e-01,  1.3978e-01,  1.5247e-01, -1.1356e-01, -2.0013e-01,
         -2.8889e-02, -2.6834e-01, -2.3367e-01, -1.0988e-01,  6.8922e-02,
          3.9509e-01,  6.0698e-02, -2.2643e-02,  2.7588e-01, -1.4143e-01,
          1.8543e-01,  1.6855e-02,  1.5572e-01, -2.2510e-01,  7.1641e-02,
         -1.9741e-01,  5.3434e-01, -1.4416e-01,  1.3043e-01,  4.1209e-01,
          2.9791e-01,  4.7420e-03,  2.5036e-01,  1.6084e-02,  3.9566e-01,
         -1.6085e-01, -3.8937e-01, -9.5402e-02,  1.4888e-01, -1.1987e-01,
          3.7126e-01,  1.8105e-01, -2.8719e-02, -3.0624e-01,  5.3378e-01,
          1.7436e-01, -2.8341e-02,  4.9825e-02,  2.0301e-01, -1.6384e-01,
          2.6989e-01,  2.6591e-01, -1.2748e-01, -3.1050e-01, -1.2096e-01,
         -1.3001e-01,  7.4096e-02,  6.8205e-02,  3.8111e-02, -9.1914e-02,
          3.8723e-01,  8.3683e-02, -1.6904e-01,  1.5127e-01, -4.0048e-01,
          4.1818e-01,  1.5163e-01,  3.1286e-02, -2.9531e-01, -9.3263e-02,
         -1.8738e-01,  5.9287e-01, -2.0860e-01,  1.8387e-01, -2.5311e-01,
         -8.5384e-02, -8.4982e-02, -2.4542e-01,  2.9793e-01, -3.1135e-01,
         -3.8213e-01, -1.5615e-01, -6.2666e-02,  5.7558e-02, -3.5226e-02,
         -8.7276e-02,  9.8344e-02, -2.0523e-01,  6.4526e-02, -3.6632e-02,
          4.7663e-02, -1.0851e-01,  1.8785e-01,  1.2154e-01, -6.3904e-02,
         -2.4797e-01,  7.1426e-02, -3.0236e-01, -4.0890e-02, -2.8631e-01,
          1.5064e-01,  1.1797e-02, -2.3020e-01,  2.9549e-01,  6.9925e-02,
          3.7168e-02, -2.7975e-03, -3.4594e-02, -2.2024e-01,  1.6690e-02,
          1.6429e-01,  2.3381e-01, -5.1648e-02, -5.3609e-02, -6.7543e-02,
          9.2003e-02, -1.2359e-01, -7.4905e-03, -1.0459e-01,  1.8315e-02,
          1.7357e-01, -2.0900e-01,  1.3509e-01,  1.0721e-01, -1.8023e-01,
          1.8044e-01, -2.6833e-01,  1.0276e-01,  1.1561e-01,  3.5366e-01,
         -1.0126e-01, -4.4689e-03, -9.3868e-02,  1.4062e-01, -1.0194e-01,
         -1.2914e-03]], device='cuda:0') tensor(0.2184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
164000 特征值优化 tensor(0.8495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0648,  0.3882, -0.8655, -1.0165,  1.8531,  1.5007, -1.2386,  2.3330,
          1.5548,  0.9864,  0.5447,  0.0734,  1.2079,  0.1113, -0.2479, -0.5135,
          0.8139,  0.3090, -0.2531, -0.7357, -0.0785,  0.5065,  0.3916,  1.2714,
         -0.4826, -0.1653, -0.1308,  0.0079,  0.0058, -0.0946,  0.2551,  0.1378,
          0.1629, -0.1004, -0.2113, -0.0360, -0.2731, -0.2441, -0.1054,  0.0739,
          0.3815,  0.0587, -0.0187,  0.2668, -0.1431,  0.1633,  0.0256,  0.1734,
         -0.2385,  0.0923, -0.1831,  0.5374, -0.1353,  0.1369,  0.4338,  0.3047,
          0.0180,  0.2563,  0.0149,  0.3872, -0.1732, -0.3894, -0.0666,  0.1286,
         -0.1121,  0.3885,  0.1923, -0.0280, -0.3003,  0.5101,  0.1834, -0.0267,
          0.0362,  0.2086, -0.1702,  0.2630,  0.2682, -0.1101, -0.3275, -0.1123,
         -0.1258,  0.0675,  0.0695,  0.0341, -0.0719,  0.3745,  0.0808, -0.1797,
          0.1638, -0.3870,  0.4197,  0.1736,  0.0593, -0.3226, -0.0960, -0.1748,
          0.5932, -0.2366,  0.1656, -0.2170, -0.0699, -0.0996, -0.2091,  0.2807,
         -0.3096, -0.3725, -0.1365, -0.0669,  0.0428, -0.0237, -0.1043,  0.1071,
         -0.2022,  0.0648, -0.0421,  0.0430, -0.0909,  0.1879,  0.1373, -0.0759,
         -0.2509,  0.0789, -0.3050, -0.0412, -0.2905,  0.1494,  0.0079, -0.2373,
          0.2881,  0.0699,  0.0326,  0.0059, -0.0336, -0.2074,  0.0189,  0.1570,
          0.2349, -0.0499, -0.0503, -0.0556,  0.1071, -0.1296, -0.0172, -0.1046,
          0.0284,  0.1721, -0.1933,  0.1300,  0.1046, -0.1738,  0.1766, -0.2552,
          0.1078,  0.1056,  0.3726, -0.1043, -0.0108, -0.0825,  0.1294, -0.1031,
         -0.0028]], device='cuda:0') tensor(0.2229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
165000 特征值优化 tensor(0.8562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1139e+00,  3.8291e-01, -8.7804e-01, -1.0141e+00,  1.8631e+00,
          1.4886e+00, -1.2617e+00,  2.3340e+00,  1.5454e+00,  9.6267e-01,
          5.4778e-01,  9.5042e-02,  1.1962e+00,  6.5573e-02, -1.9776e-01,
         -4.8312e-01,  8.2283e-01,  3.1391e-01, -2.5846e-01, -7.3791e-01,
         -1.1040e-01,  4.9042e-01,  3.6583e-01,  1.2774e+00, -4.8408e-01,
         -1.6851e-01, -1.3032e-01,  1.1541e-02, -9.3072e-03, -1.0510e-01,
          2.4709e-01,  1.2620e-01,  1.8592e-01, -8.5359e-02, -2.3123e-01,
         -4.6110e-02, -2.7504e-01, -2.6267e-01, -1.1700e-01,  7.6057e-02,
          3.7793e-01,  6.1723e-02, -1.9293e-02,  2.6614e-01, -1.2210e-01,
          1.5293e-01,  3.2240e-02,  1.7240e-01, -2.3246e-01,  1.1773e-01,
         -1.6366e-01,  5.2369e-01, -1.3811e-01,  1.4968e-01,  4.4960e-01,
          3.0342e-01,  4.9668e-03,  2.4012e-01, -2.5649e-03,  3.8035e-01,
         -1.7970e-01, -4.0619e-01, -5.7995e-02,  1.1538e-01, -8.9935e-02,
          3.9776e-01,  1.9254e-01, -1.5987e-02, -2.9087e-01,  5.0709e-01,
          1.8288e-01, -2.8411e-02,  5.7798e-02,  2.1454e-01, -1.6296e-01,
          2.5664e-01,  2.7880e-01, -9.4130e-02, -3.4274e-01, -1.1489e-01,
         -1.2605e-01,  6.3267e-02,  7.1405e-02,  2.8911e-02, -6.8697e-02,
          3.6633e-01,  9.1214e-02, -1.7973e-01,  1.7524e-01, -3.3238e-01,
          4.1219e-01,  1.7953e-01,  7.3219e-02, -3.3944e-01, -9.3481e-02,
         -1.7158e-01,  5.7561e-01, -2.2400e-01,  1.7530e-01, -1.7643e-01,
         -5.7148e-02, -1.0498e-01, -1.9569e-01,  2.9382e-01, -3.2157e-01,
         -3.6997e-01, -1.3720e-01, -4.8783e-02,  2.8236e-02, -1.7619e-02,
         -1.0487e-01,  1.1869e-01, -1.9356e-01,  6.7586e-02, -5.3609e-02,
          6.6096e-02, -8.3560e-02,  1.7228e-01,  1.4708e-01, -7.1386e-02,
         -2.6146e-01,  8.1497e-02, -3.1105e-01, -4.9238e-02, -2.9397e-01,
          1.5764e-01,  1.5572e-02, -2.3762e-01,  2.8350e-01,  6.6980e-02,
          9.5412e-03,  1.1441e-02, -3.4662e-02, -2.0451e-01,  5.1991e-03,
          1.6020e-01,  2.3546e-01, -4.5883e-02, -5.7031e-02, -6.3537e-02,
          1.2066e-01, -1.4591e-01, -2.1889e-02, -1.0333e-01,  2.8887e-02,
          1.7589e-01, -1.9987e-01,  1.3526e-01,  1.0609e-01, -1.8332e-01,
          1.7666e-01, -2.4003e-01,  9.1133e-02,  1.1289e-01,  3.7490e-01,
         -1.0496e-01, -2.2296e-03, -9.0237e-02,  1.2182e-01, -1.0632e-01,
         -8.4604e-04]], device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
166000 特征值优化 tensor(0.8397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1738,  0.3832, -0.8867, -1.0086,  1.8483,  1.4925, -1.2471,  2.3177,
          1.5377,  0.9264,  0.5631,  0.0885,  1.2013,  0.0467, -0.2015, -0.4851,
          0.8357,  0.3226, -0.2625, -0.7671, -0.1075,  0.4871,  0.3669,  1.3032,
         -0.4991, -0.1551, -0.1264,  0.0151, -0.0242, -0.1216,  0.2610,  0.1338,
          0.1892, -0.0991, -0.2537, -0.0363, -0.2758, -0.2696, -0.1054,  0.0574,
          0.3780,  0.0602, -0.0220,  0.2648, -0.1122,  0.1413,  0.0417,  0.1704,
         -0.2410,  0.1600, -0.1658,  0.5301, -0.1212,  0.1344,  0.4504,  0.3029,
         -0.0094,  0.2406, -0.0262,  0.3780, -0.1730, -0.4223, -0.0328,  0.1096,
         -0.0872,  0.4052,  0.1861, -0.0312, -0.2876,  0.4913,  0.1818, -0.0292,
          0.0524,  0.2274, -0.1718,  0.2649,  0.2702, -0.0807, -0.3530, -0.1099,
         -0.1259,  0.0590,  0.0820, -0.0024, -0.0817,  0.3764,  0.0859, -0.1809,
          0.1850, -0.3382,  0.4002,  0.1894,  0.0925, -0.3377, -0.0997, -0.1660,
          0.5734, -0.2270,  0.1921, -0.1600, -0.0625, -0.1139, -0.1897,  0.3219,
         -0.3210, -0.3555, -0.1261, -0.0556,  0.0186, -0.0058, -0.1123,  0.1282,
         -0.2199,  0.0370, -0.0575,  0.0572, -0.0747,  0.1774,  0.1340, -0.0826,
         -0.2535,  0.0732, -0.3202, -0.0472, -0.2915,  0.1510,  0.0250, -0.2308,
          0.2729,  0.0716,  0.0154,  0.0166, -0.0508, -0.2001,  0.0085,  0.1475,
          0.2179, -0.0280, -0.0404, -0.0734,  0.1353, -0.1320, -0.0427, -0.0995,
          0.0294,  0.1541, -0.2061,  0.1371,  0.1028, -0.1770,  0.1617, -0.2520,
          0.0788,  0.1156,  0.3870, -0.0992, -0.0072, -0.0918,  0.1222, -0.0969,
          0.0042]], device='cuda:0') tensor(0.2202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
167000 特征值优化 tensor(0.8775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2357e+00,  4.1623e-01, -9.0835e-01, -1.0071e+00,  1.8346e+00,
          1.4788e+00, -1.2349e+00,  2.3194e+00,  1.5272e+00,  9.2018e-01,
          5.5944e-01,  9.9749e-02,  1.2107e+00,  2.2835e-02, -1.7460e-01,
         -4.8844e-01,  8.3689e-01,  3.2296e-01, -2.7892e-01, -7.5432e-01,
         -1.1906e-01,  4.8010e-01,  3.5297e-01,  1.3165e+00, -4.8275e-01,
         -1.5750e-01, -1.3868e-01,  2.1507e-02, -2.1970e-02, -1.2191e-01,
          2.4152e-01,  1.4351e-01,  1.9748e-01, -8.5239e-02, -2.8270e-01,
         -2.9397e-02, -2.6341e-01, -2.7851e-01, -1.0901e-01,  7.3610e-02,
          3.7622e-01,  5.9611e-02, -1.8739e-02,  2.5609e-01, -1.0421e-01,
          1.4390e-01,  3.5448e-02,  1.6426e-01, -2.4587e-01,  1.7854e-01,
         -1.5292e-01,  5.1852e-01, -1.2215e-01,  1.4049e-01,  4.5267e-01,
          2.8115e-01,  1.1088e-02,  2.2201e-01, -2.8837e-02,  3.7385e-01,
         -1.7260e-01, -4.3206e-01, -2.3897e-02,  9.3053e-02, -7.6858e-02,
          4.2402e-01,  1.7952e-01, -1.8429e-02, -2.8473e-01,  4.9741e-01,
          1.8456e-01, -2.7219e-02,  5.2638e-02,  2.2364e-01, -1.8017e-01,
          2.5660e-01,  2.7069e-01, -7.2631e-02, -3.4848e-01, -1.0968e-01,
         -1.1896e-01,  6.1999e-02,  7.8671e-02,  3.5214e-03, -7.0610e-02,
          3.7026e-01,  7.9693e-02, -1.9754e-01,  1.7903e-01, -3.3687e-01,
          3.8923e-01,  2.0145e-01,  9.0868e-02, -3.3563e-01, -9.7508e-02,
         -1.6278e-01,  5.7367e-01, -2.2582e-01,  2.2201e-01, -1.3949e-01,
         -5.8726e-02, -1.0968e-01, -1.8565e-01,  3.2446e-01, -3.3329e-01,
         -3.5639e-01, -1.3167e-01, -4.5597e-02,  4.7756e-03, -6.5145e-03,
         -1.2154e-01,  1.3150e-01, -2.1385e-01,  3.5668e-02, -5.6939e-02,
          6.4469e-02, -7.2257e-02,  1.6923e-01,  1.3661e-01, -9.1507e-02,
         -2.5213e-01,  7.1060e-02, -3.2148e-01, -6.5150e-02, -2.8244e-01,
          1.5673e-01,  2.8019e-02, -2.4464e-01,  2.7177e-01,  7.7566e-02,
          1.1738e-02,  2.1849e-02, -4.5820e-02, -1.9175e-01, -8.0264e-04,
          1.4324e-01,  2.1337e-01, -3.4438e-02, -3.6157e-02, -7.8210e-02,
          1.3253e-01, -1.4750e-01, -3.8638e-02, -9.8066e-02,  2.8003e-02,
          1.5393e-01, -1.9599e-01,  1.3603e-01,  9.6728e-02, -1.8059e-01,
          1.5424e-01, -2.4305e-01,  7.9782e-02,  1.1622e-01,  3.7633e-01,
         -1.0059e-01, -9.7698e-03, -8.2152e-02,  1.1867e-01, -9.8718e-02,
          5.2573e-05]], device='cuda:0') tensor(0.2196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
168000 特征值优化 tensor(0.8367, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2994e+00,  4.5952e-01, -9.1698e-01, -1.0067e+00,  1.8708e+00,
          1.4392e+00, -1.2277e+00,  2.3192e+00,  1.5026e+00,  9.0629e-01,
          5.4073e-01,  1.1237e-01,  1.2068e+00,  6.8359e-03, -1.3947e-01,
         -4.6008e-01,  8.1998e-01,  3.3020e-01, -2.7047e-01, -7.5634e-01,
         -1.4035e-01,  4.7422e-01,  3.3573e-01,  1.3604e+00, -4.7448e-01,
         -1.7721e-01, -1.1526e-01, -4.8849e-03, -1.5812e-02, -1.2173e-01,
          2.0859e-01,  1.2727e-01,  2.1667e-01, -5.7612e-02, -3.1987e-01,
         -5.3563e-02, -2.6168e-01, -2.8958e-01, -1.1055e-01,  8.4805e-02,
          3.5164e-01,  6.0622e-02, -2.2612e-02,  2.5411e-01, -1.0537e-01,
          1.3164e-01,  3.9190e-02,  1.4946e-01, -2.6077e-01,  2.3157e-01,
         -1.3732e-01,  5.3266e-01, -1.1520e-01,  1.4506e-01,  4.4811e-01,
          2.7401e-01,  1.8424e-02,  2.0547e-01, -3.6289e-02,  3.6313e-01,
         -1.6551e-01, -4.2365e-01, -1.4011e-03,  8.5697e-02, -5.2929e-02,
          4.4199e-01,  1.8808e-01, -2.3620e-02, -2.8090e-01,  4.7920e-01,
          1.8032e-01, -2.1556e-02,  6.3988e-02,  2.2443e-01, -2.0578e-01,
          2.5849e-01,  2.6827e-01, -7.8904e-02, -3.4586e-01, -1.0364e-01,
         -1.1567e-01,  6.7808e-02,  9.2707e-02,  3.6947e-03, -6.0898e-02,
          3.7402e-01,  9.8172e-02, -2.1116e-01,  1.6714e-01, -3.4692e-01,
          3.7241e-01,  2.6158e-01,  7.0119e-02, -3.2345e-01, -9.5329e-02,
         -1.6133e-01,  5.7925e-01, -1.8257e-01,  2.6060e-01, -1.4346e-01,
         -4.1735e-02, -1.0917e-01, -1.8427e-01,  3.3039e-01, -3.5891e-01,
         -3.4065e-01, -1.2876e-01, -2.2937e-02, -5.0300e-02, -9.3973e-03,
         -1.3160e-01,  1.1790e-01, -1.9973e-01,  4.5707e-02, -7.0173e-02,
          9.3572e-02, -7.3993e-02,  1.6585e-01,  1.5551e-01, -7.2275e-02,
         -2.7441e-01,  8.3041e-02, -3.2331e-01, -8.8856e-02, -2.7786e-01,
          1.4654e-01,  4.4713e-02, -2.5151e-01,  2.8153e-01,  9.2272e-02,
          3.0154e-03,  2.2780e-02, -3.8048e-02, -1.7325e-01, -1.5431e-03,
          1.5389e-01,  2.3162e-01, -5.5394e-02, -5.6783e-02, -6.5792e-02,
          1.4196e-01, -1.4869e-01, -1.8381e-02, -1.1041e-01,  2.7119e-02,
          1.6350e-01, -1.9205e-01,  1.6879e-01,  8.3996e-02, -1.9852e-01,
          1.4332e-01, -2.2396e-01,  6.0429e-02,  1.3273e-01,  3.7838e-01,
         -1.0209e-01, -2.1106e-02, -4.9775e-02,  1.2909e-01, -9.8730e-02,
          5.2824e-03]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
169000 特征值优化 tensor(0.8925, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3629,  0.4641, -0.9576, -1.0110,  1.8896,  1.4572, -1.2017,  2.2781,
          1.5164,  0.8786,  0.5347,  0.1214,  1.2491,  0.0417, -0.1377, -0.4705,
          0.8267,  0.2858, -0.2988, -0.8195, -0.1425,  0.4761,  0.3386,  1.4207,
         -0.5188, -0.1501, -0.0889, -0.0096,  0.0193, -0.1295,  0.1997,  0.1266,
          0.2025, -0.0583, -0.3805, -0.0811, -0.2673, -0.2730, -0.0929,  0.0722,
          0.3200,  0.0591, -0.0213,  0.2403, -0.0991,  0.1209,  0.0664,  0.1571,
         -0.2687,  0.2860, -0.0962,  0.5620, -0.0959,  0.1676,  0.4270,  0.2915,
          0.0103,  0.2298, -0.0303,  0.3510, -0.1852, -0.4318,  0.0178,  0.0807,
         -0.0497,  0.4514,  0.2005, -0.0028, -0.2808,  0.4369,  0.1742, -0.0118,
          0.0592,  0.2382, -0.2036,  0.2413,  0.2652, -0.0927, -0.3510, -0.1072,
         -0.1108,  0.0635,  0.0985, -0.0137, -0.0551,  0.3564,  0.1017, -0.2458,
          0.1358, -0.3937,  0.3437,  0.3125,  0.0995, -0.2978, -0.0939, -0.1518,
          0.5926, -0.1962,  0.3013, -0.1676, -0.0479, -0.1035, -0.1761,  0.3590,
         -0.3596, -0.3401, -0.1422, -0.0198, -0.1006, -0.0076, -0.1341,  0.1279,
         -0.2123,  0.0395, -0.0519,  0.0949, -0.0711,  0.1698,  0.1447, -0.0491,
         -0.2723,  0.0641, -0.3193, -0.1139, -0.2712,  0.1334,  0.0307, -0.2574,
          0.2766,  0.0974,  0.0350,  0.0335, -0.0239, -0.1799,  0.0099,  0.1268,
          0.2164, -0.0450, -0.0285, -0.0834,  0.1660, -0.1251, -0.0177, -0.0967,
          0.0227,  0.1482, -0.1784,  0.1732,  0.0597, -0.2043,  0.1293, -0.2419,
          0.0519,  0.1255,  0.3698, -0.1080, -0.0243, -0.0708,  0.1429, -0.1086,
         -0.0121]], device='cuda:0') tensor(0.2361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
170000 正交保障 tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3764,  0.4886, -0.9602, -1.0086,  1.8058,  1.4293, -1.1759,  2.2467,
          1.5284,  0.9088,  0.5142,  0.1105,  1.2222,  0.0765, -0.1260, -0.4852,
          0.8414,  0.2609, -0.3111, -0.8480, -0.1828,  0.4669,  0.3037,  1.4361,
         -0.5347, -0.1687, -0.0531, -0.0414,  0.0154, -0.1277,  0.1835,  0.1149,
          0.2114, -0.0300, -0.4204, -0.1113, -0.2630, -0.2824, -0.1233,  0.0968,
          0.3260,  0.0599, -0.0218,  0.2510, -0.1030,  0.1313,  0.0520,  0.1635,
         -0.2582,  0.3232, -0.0755,  0.5676, -0.0871,  0.1659,  0.4331,  0.2733,
          0.0031,  0.2271, -0.0236,  0.3566, -0.1668, -0.4255, -0.0140,  0.0348,
         -0.0527,  0.4465,  0.1782,  0.0076, -0.2854,  0.4267,  0.1836, -0.0297,
          0.0586,  0.2353, -0.2014,  0.2537,  0.2710, -0.0584, -0.3329, -0.1059,
         -0.1190,  0.0615,  0.1033, -0.0058, -0.0501,  0.3431,  0.1195, -0.2272,
          0.1473, -0.3887,  0.3157,  0.3511,  0.1218, -0.2905, -0.0934, -0.1519,
          0.5800, -0.2284,  0.3355, -0.1542, -0.0378, -0.0750, -0.1663,  0.3911,
         -0.3718, -0.3321, -0.1627, -0.0260, -0.1477, -0.0086, -0.1224,  0.1293,
         -0.2068,  0.0338, -0.0887,  0.1169, -0.0665,  0.1829,  0.1481, -0.0250,
         -0.2879,  0.0628, -0.3128, -0.1216, -0.2763,  0.1379,  0.0340, -0.2533,
          0.2619,  0.1046,  0.0303,  0.0317, -0.0036, -0.1712, -0.0036,  0.1431,
          0.2427, -0.0747, -0.0210, -0.0461,  0.1758, -0.1579,  0.0135, -0.0564,
          0.0383,  0.1483, -0.1761,  0.1751,  0.0538, -0.1841,  0.1342, -0.2455,
          0.0359,  0.1281,  0.3639, -0.0886, -0.0115, -0.0725,  0.1468, -0.0939,
         -0.0292]], device='cuda:0') tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
171000 特征值优化 tensor(0.8410, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4299e+00,  5.2733e-01, -9.9567e-01, -1.0128e+00,  1.7627e+00,
          1.4330e+00, -1.1656e+00,  2.2284e+00,  1.5311e+00,  8.9436e-01,
          5.1247e-01,  1.1037e-01,  1.2473e+00,  9.5831e-02, -1.5665e-01,
         -5.0477e-01,  8.2840e-01,  2.2816e-01, -3.4655e-01, -8.7886e-01,
         -1.9108e-01,  4.5694e-01,  2.6184e-01,  1.4653e+00, -5.4139e-01,
         -1.6722e-01, -5.0558e-02, -4.0737e-02,  4.8780e-02, -1.3031e-01,
          1.9002e-01,  1.1827e-01,  1.9326e-01, -1.9523e-02, -4.5647e-01,
         -1.2208e-01, -2.5635e-01, -2.6320e-01, -1.1345e-01,  8.7869e-02,
          2.9961e-01,  5.9089e-02, -2.0532e-02,  2.2232e-01, -9.9999e-02,
          1.1926e-01,  7.6623e-02,  1.9697e-01, -2.5715e-01,  3.4374e-01,
         -7.2673e-02,  5.9299e-01, -7.4029e-02,  1.7011e-01,  4.0946e-01,
          2.8320e-01, -2.4245e-02,  2.5320e-01, -1.5224e-04,  3.6491e-01,
         -1.7016e-01, -4.2721e-01, -1.4373e-03,  4.2097e-02, -5.2640e-02,
          4.5584e-01,  1.8009e-01,  2.4412e-02, -2.8070e-01,  4.1348e-01,
          1.8100e-01, -2.5341e-02,  4.8598e-02,  2.4451e-01, -1.9503e-01,
          2.5068e-01,  2.6424e-01, -7.8230e-02, -3.2774e-01, -1.0291e-01,
         -1.2584e-01,  5.7938e-02,  1.0769e-01, -1.9295e-02, -3.2802e-02,
          3.3910e-01,  1.1446e-01, -2.3317e-01,  1.2190e-01, -4.2246e-01,
          3.0573e-01,  3.8348e-01,  7.7861e-02, -2.7906e-01, -9.0846e-02,
         -1.4348e-01,  5.9002e-01, -1.9152e-01,  3.6598e-01, -1.5607e-01,
         -4.7705e-02, -8.0694e-02, -1.8908e-01,  3.9970e-01, -3.5600e-01,
         -3.2543e-01, -1.6600e-01, -1.0981e-02, -1.6379e-01, -4.6319e-03,
         -1.2437e-01,  1.3930e-01, -2.1019e-01,  5.0779e-02, -6.3373e-02,
          1.0672e-01, -6.5429e-02,  1.8179e-01,  1.4309e-01, -1.0523e-02,
         -2.7967e-01,  5.0585e-02, -3.1665e-01, -1.2090e-01, -2.8939e-01,
          1.2953e-01,  4.0172e-02, -2.6487e-01,  2.5895e-01,  9.3103e-02,
          3.7042e-02,  2.4463e-02,  2.1860e-02, -1.7715e-01, -1.0480e-02,
          1.3519e-01,  2.2364e-01, -7.4841e-02, -1.7012e-02, -5.7931e-02,
          1.7226e-01, -1.3591e-01,  2.5084e-02, -6.8568e-02,  2.5012e-02,
          1.2657e-01, -1.5864e-01,  1.8129e-01,  5.0112e-02, -1.8185e-01,
          1.2080e-01, -2.5017e-01,  4.6176e-02,  1.1834e-01,  3.4983e-01,
         -1.0578e-01, -5.2634e-03, -9.6889e-02,  1.4141e-01, -1.0185e-01,
         -5.8323e-02]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
172000 特征值优化 tensor(0.8363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4134e+00,  5.3182e-01, -1.0196e+00, -1.0143e+00,  1.6846e+00,
          1.4485e+00, -1.1333e+00,  2.2131e+00,  1.5504e+00,  9.0353e-01,
          4.9570e-01,  1.1494e-01,  1.2547e+00,  1.2392e-01, -1.6839e-01,
         -5.0848e-01,  8.1575e-01,  2.2150e-01, -3.8398e-01, -8.8125e-01,
         -2.1092e-01,  4.6030e-01,  2.4665e-01,  1.4687e+00, -5.7025e-01,
         -1.6764e-01, -1.8665e-02, -4.9198e-02,  4.2758e-02, -1.2073e-01,
          1.8257e-01,  1.0454e-01,  1.7628e-01,  9.7426e-03, -4.8221e-01,
         -1.2772e-01, -2.5188e-01, -2.6766e-01, -1.1175e-01,  8.2083e-02,
          2.7096e-01,  5.8837e-02, -2.0200e-02,  2.2530e-01, -1.1294e-01,
          1.1748e-01,  6.8524e-02,  2.2366e-01, -2.6467e-01,  3.8501e-01,
         -8.6214e-02,  5.9690e-01, -6.0732e-02,  1.6625e-01,  3.9640e-01,
          2.8614e-01, -3.6329e-02,  2.6971e-01, -3.6840e-03,  3.8099e-01,
         -1.5759e-01, -4.2364e-01,  6.6505e-03,  2.3175e-02, -5.4429e-02,
          4.4346e-01,  1.9043e-01,  4.8791e-02, -2.7920e-01,  4.0991e-01,
          1.8914e-01, -2.6741e-02,  3.3898e-02,  2.3702e-01, -1.7743e-01,
          2.5447e-01,  2.5758e-01, -6.8114e-02, -3.3325e-01, -9.9971e-02,
         -1.3248e-01,  4.1690e-02,  1.1685e-01, -2.0008e-02, -3.6268e-02,
          3.2473e-01,  1.1727e-01, -2.0981e-01,  1.0209e-01, -4.4799e-01,
          2.9653e-01,  4.2560e-01,  8.7767e-02, -2.5689e-01, -9.8823e-02,
         -1.3554e-01,  5.7359e-01, -1.9372e-01,  3.6578e-01, -1.9481e-01,
         -5.0908e-02, -8.0365e-02, -1.8565e-01,  4.1749e-01, -3.4869e-01,
         -3.2225e-01, -1.6474e-01, -1.0953e-02, -2.0554e-01, -2.0309e-03,
         -1.2567e-01,  1.2591e-01, -1.9433e-01,  6.0328e-02, -7.1860e-02,
          1.0487e-01, -7.5853e-02,  1.8963e-01,  1.4816e-01,  1.0659e-02,
         -2.7507e-01,  5.6184e-02, -3.1310e-01, -1.2930e-01, -2.8769e-01,
          1.2889e-01,  4.1888e-02, -2.5826e-01,  2.6394e-01,  8.4723e-02,
          3.4604e-02,  2.4212e-02,  5.2015e-02, -1.7459e-01, -2.2158e-02,
          1.3800e-01,  2.2425e-01, -6.5043e-02, -2.5658e-02, -6.7544e-02,
          1.6910e-01, -1.2054e-01,  4.1545e-02, -6.7601e-02,  2.9651e-02,
          1.1533e-01, -1.5862e-01,  2.0050e-01,  5.2006e-02, -1.5151e-01,
          1.1227e-01, -2.5156e-01,  2.7863e-02,  1.1243e-01,  3.5304e-01,
         -1.1332e-01,  6.2628e-03, -1.3580e-01,  1.3625e-01, -8.8066e-02,
         -8.6823e-02]], device='cuda:0') tensor(0.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
173000 正交保障 tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3851,  0.5487, -1.0523, -1.0066,  1.6272,  1.4672, -1.1110,  2.2152,
          1.5676,  0.9123,  0.4795,  0.1482,  1.2555,  0.1373, -0.1691, -0.5195,
          0.7994,  0.2194, -0.4017, -0.9144, -0.2454,  0.4550,  0.2290,  1.4620,
         -0.6018, -0.1968, -0.0085, -0.0622,  0.0294, -0.0990,  0.1953,  0.0930,
          0.1758,  0.0506, -0.5127, -0.1347, -0.2518, -0.2716, -0.1297,  0.0725,
          0.2640,  0.0595, -0.0230,  0.2193, -0.1291,  0.1205,  0.0713,  0.2370,
         -0.2723,  0.4042, -0.0993,  0.5780, -0.0300,  0.1591,  0.3792,  0.2823,
         -0.0274,  0.2767, -0.0028,  0.4012, -0.1396, -0.4176,  0.0232,  0.0342,
         -0.0685,  0.4298,  0.1829,  0.0535, -0.2796,  0.3987,  0.1864, -0.0092,
          0.0368,  0.2307, -0.1742,  0.2466,  0.2664, -0.0639, -0.3083, -0.1026,
         -0.1427,  0.0177,  0.1071, -0.0083, -0.0293,  0.3165,  0.1303, -0.1966,
          0.1022, -0.4568,  0.2793,  0.4423,  0.0711, -0.2189, -0.0938, -0.1293,
          0.5819, -0.1511,  0.3540, -0.1795, -0.0421, -0.0591, -0.1657,  0.4123,
         -0.3576, -0.3267, -0.1716, -0.0326, -0.2438,  0.0051, -0.1298,  0.1284,
         -0.1772,  0.0828, -0.0859,  0.0961, -0.0885,  0.1845,  0.1826,  0.0129,
         -0.2873,  0.0648, -0.3049, -0.1279, -0.2881,  0.1247,  0.0438, -0.2611,
          0.2565,  0.0717,  0.0458,  0.0312,  0.0531, -0.1859, -0.0203,  0.1495,
          0.2366, -0.0782, -0.0295, -0.0502,  0.1848, -0.1333,  0.0436, -0.0514,
          0.0277,  0.1306, -0.1500,  0.2131,  0.0478, -0.1442,  0.1123, -0.2351,
          0.0227,  0.1125,  0.3623, -0.1045,  0.0172, -0.1462,  0.1410, -0.0802,
         -0.0839]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
174000 特征值优化 tensor(0.8245, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3828e+00,  5.5912e-01, -1.0742e+00, -1.0069e+00,  1.5452e+00,
          1.4927e+00, -1.1177e+00,  2.2132e+00,  1.5809e+00,  8.9307e-01,
          4.6944e-01,  1.6607e-01,  1.2478e+00,  1.3908e-01, -1.6872e-01,
         -5.3629e-01,  7.8944e-01,  2.1433e-01, -4.0929e-01, -9.3488e-01,
         -2.5369e-01,  4.6900e-01,  1.9807e-01,  1.4317e+00, -6.1229e-01,
         -2.2659e-01,  6.4194e-03, -5.8480e-02,  2.9256e-02, -1.1220e-01,
          1.9156e-01,  1.0678e-01,  1.6949e-01,  8.0780e-02, -5.2970e-01,
         -1.3174e-01, -2.4837e-01, -2.5347e-01, -1.3868e-01,  5.7270e-02,
          2.6010e-01,  5.9622e-02, -2.1720e-02,  2.1313e-01, -1.2199e-01,
          1.1614e-01,  7.3370e-02,  2.4404e-01, -2.7452e-01,  4.1539e-01,
         -1.0281e-01,  5.6614e-01, -2.8004e-02,  1.6214e-01,  3.7389e-01,
          2.9703e-01, -4.7503e-02,  2.9121e-01,  3.8652e-03,  4.0638e-01,
         -1.3007e-01, -4.2004e-01,  4.4719e-02,  2.3183e-02, -5.0697e-02,
          4.2958e-01,  1.9239e-01,  5.9345e-02, -2.8439e-01,  4.0417e-01,
          1.9983e-01, -2.9054e-03,  4.8910e-02,  2.3983e-01, -1.7058e-01,
          2.4587e-01,  2.6389e-01, -6.4345e-02, -3.1033e-01, -1.0409e-01,
         -1.4513e-01,  8.8493e-03,  1.0652e-01, -8.5841e-04, -2.4388e-02,
          3.0461e-01,  1.3230e-01, -1.9147e-01,  9.9302e-02, -4.5858e-01,
          2.8338e-01,  4.4641e-01,  8.5724e-02, -2.4105e-01, -9.6326e-02,
         -1.2274e-01,  5.8377e-01, -1.3209e-01,  3.4165e-01, -1.8117e-01,
         -2.1984e-02, -5.2083e-02, -1.6225e-01,  4.1489e-01, -3.5057e-01,
         -3.0917e-01, -1.6225e-01, -4.6351e-02, -2.6752e-01,  1.4321e-02,
         -1.3480e-01,  1.0967e-01, -1.9035e-01,  9.1660e-02, -8.6421e-02,
          1.0717e-01, -7.1972e-02,  1.8156e-01,  1.9266e-01,  1.4708e-02,
         -2.8164e-01,  6.9369e-02, -3.0417e-01, -1.1346e-01, -2.9755e-01,
          1.2649e-01,  5.6126e-02, -2.5890e-01,  2.5379e-01,  6.9978e-02,
          4.4038e-02,  3.2120e-02,  6.3161e-02, -1.8319e-01, -2.1130e-02,
          1.5863e-01,  2.3933e-01, -9.2839e-02, -2.6909e-02, -3.8332e-02,
          1.9812e-01, -1.3525e-01,  2.3822e-02, -5.6769e-02,  2.1256e-02,
          1.3296e-01, -1.5510e-01,  2.1614e-01,  4.7641e-02, -1.2571e-01,
          1.0338e-01, -2.2255e-01,  2.3811e-02,  1.0684e-01,  3.6057e-01,
         -1.1364e-01,  1.1574e-02, -1.5904e-01,  1.1609e-01, -7.4713e-02,
         -9.3016e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
175000 特征值优化 tensor(0.8751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3589,  0.5852, -1.0912, -1.0105,  1.4521,  1.5161, -1.1168,  2.2168,
          1.5738,  0.8714,  0.4792,  0.1727,  1.2751,  0.1577, -0.2029, -0.5449,
          0.7877,  0.1990, -0.4132, -0.9304, -0.2418,  0.4700,  0.1810,  1.4012,
         -0.6060, -0.2070, -0.0076, -0.0357,  0.0118, -0.1262,  0.1723,  0.1193,
          0.1458,  0.0841, -0.5411, -0.1461, -0.2372, -0.2672, -0.1356,  0.0559,
          0.2692,  0.0534, -0.0153,  0.2076, -0.1197,  0.1316,  0.0743,  0.2680,
         -0.2569,  0.4219, -0.0970,  0.5536, -0.0257,  0.1454,  0.3706,  0.2905,
         -0.0736,  0.3328,  0.0071,  0.4309, -0.1111, -0.4260,  0.0286, -0.0026,
         -0.0555,  0.4226,  0.1875,  0.0359, -0.2877,  0.4050,  0.2175, -0.0134,
          0.0513,  0.2502, -0.1701,  0.2413,  0.2425, -0.0961, -0.3121, -0.0990,
         -0.1462,  0.0109,  0.0940, -0.0225, -0.0179,  0.2991,  0.1256, -0.1763,
          0.1121, -0.4561,  0.2850,  0.4399,  0.0779, -0.2251, -0.0951, -0.1128,
          0.5937, -0.1158,  0.3762, -0.1628, -0.0327, -0.0436, -0.1600,  0.4191,
         -0.3239, -0.3074, -0.1333, -0.0557, -0.2854,  0.0180, -0.1149,  0.1184,
         -0.1907,  0.0730, -0.0901,  0.1083, -0.0685,  0.1933,  0.1752,  0.0259,
         -0.2611,  0.0626, -0.3101, -0.1054, -0.2965,  0.1218,  0.0406, -0.2679,
          0.2411,  0.0749,  0.0485,  0.0286,  0.0818, -0.1795, -0.0333,  0.1426,
          0.2256, -0.0753,  0.0045, -0.0519,  0.2091, -0.1200,  0.0080, -0.0844,
          0.0061,  0.1174, -0.1500,  0.2142,  0.0585, -0.1244,  0.0914, -0.2425,
          0.0154,  0.1029,  0.3658, -0.1139,  0.0230, -0.1815,  0.1132, -0.0656,
         -0.0983]], device='cuda:0') tensor(0.2156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
176000 特征值优化 tensor(0.8277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3185e+00,  5.8607e-01, -1.0791e+00, -1.0066e+00,  1.4127e+00,
          1.5389e+00, -1.1229e+00,  2.2253e+00,  1.5887e+00,  8.5125e-01,
          4.6870e-01,  1.8715e-01,  1.2620e+00,  1.6263e-01, -1.7594e-01,
         -5.7008e-01,  7.9200e-01,  2.0159e-01, -4.2013e-01, -9.3032e-01,
         -2.6724e-01,  4.7899e-01,  1.6356e-01,  1.3752e+00, -6.1863e-01,
         -2.2510e-01,  1.1700e-02, -1.7113e-02,  1.0604e-03, -1.2648e-01,
          1.7103e-01,  1.1015e-01,  1.5009e-01,  1.0733e-01, -5.5472e-01,
         -1.4855e-01, -2.2780e-01, -2.7219e-01, -1.4575e-01,  5.1401e-02,
          2.7854e-01,  5.3921e-02, -1.2755e-02,  2.1544e-01, -1.1590e-01,
          1.3162e-01,  8.2706e-02,  2.7775e-01, -2.7220e-01,  4.3488e-01,
         -1.1369e-01,  5.4124e-01, -9.0639e-03,  1.3833e-01,  3.6382e-01,
          2.9028e-01, -7.5595e-02,  3.3939e-01,  1.2429e-02,  4.4130e-01,
         -1.0544e-01, -4.2791e-01,  5.2178e-02,  4.4101e-03, -5.2238e-02,
          4.2392e-01,  1.7848e-01,  4.6078e-02, -2.8474e-01,  3.9599e-01,
          2.1430e-01, -7.2921e-03,  6.2326e-02,  2.4147e-01, -1.6806e-01,
          2.4244e-01,  2.6092e-01, -8.3118e-02, -2.9551e-01, -9.9506e-02,
         -1.3997e-01,  3.8313e-03,  8.6792e-02, -5.5259e-03, -2.4400e-02,
          2.9969e-01,  1.3681e-01, -1.6098e-01,  1.1014e-01, -4.3301e-01,
          2.8240e-01,  4.3706e-01,  6.6781e-02, -2.1567e-01, -1.0246e-01,
         -1.1519e-01,  5.7789e-01, -8.3677e-02,  3.6463e-01, -1.3226e-01,
         -3.5636e-02, -3.3250e-02, -1.4864e-01,  3.9928e-01, -3.3102e-01,
         -3.1310e-01, -1.3312e-01, -7.2294e-02, -2.9132e-01,  2.2811e-02,
         -1.2305e-01,  1.0954e-01, -1.7363e-01,  8.3716e-02, -1.0617e-01,
          1.2277e-01, -4.3560e-02,  1.9269e-01,  1.8654e-01,  2.4225e-02,
         -2.7389e-01,  6.4653e-02, -3.0468e-01, -9.9422e-02, -2.8767e-01,
          1.2580e-01,  4.6764e-02, -2.6802e-01,  2.3991e-01,  7.7134e-02,
          6.3636e-02,  3.8871e-02,  7.4438e-02, -1.8371e-01, -3.3047e-02,
          1.6880e-01,  2.4259e-01, -1.0734e-01, -1.2493e-02, -2.8078e-02,
          2.4663e-01, -1.2914e-01,  1.2081e-02, -6.9894e-02,  1.0341e-02,
          1.2738e-01, -1.4888e-01,  2.2714e-01,  5.3893e-02, -1.2409e-01,
          1.0340e-01, -2.3687e-01,  5.5672e-03,  1.0298e-01,  3.8091e-01,
         -1.2307e-01,  1.9264e-02, -1.6873e-01,  1.1295e-01, -4.3657e-02,
         -9.0760e-02]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
177000 特征值优化 tensor(0.8200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2800e+00,  5.9188e-01, -1.0943e+00, -1.0074e+00,  1.3880e+00,
          1.5592e+00, -1.1198e+00,  2.2229e+00,  1.6103e+00,  8.4837e-01,
          4.6374e-01,  1.8418e-01,  1.2686e+00,  1.8977e-01, -1.8749e-01,
         -5.7938e-01,  7.9592e-01,  1.9076e-01, -4.1446e-01, -9.3239e-01,
         -2.6938e-01,  4.9310e-01,  1.3479e-01,  1.3621e+00, -6.0364e-01,
         -1.9630e-01,  1.2078e-02, -1.6482e-03, -5.5804e-03, -1.2908e-01,
          1.7179e-01,  1.1713e-01,  1.3363e-01,  1.1520e-01, -5.5316e-01,
         -1.6239e-01, -2.2123e-01, -2.6421e-01, -1.4874e-01,  4.0685e-02,
          2.7689e-01,  5.1698e-02, -1.3087e-02,  2.0007e-01, -1.2029e-01,
          1.2266e-01,  6.6364e-02,  2.8060e-01, -2.7719e-01,  4.5488e-01,
         -1.1197e-01,  5.1103e-01, -1.1948e-02,  1.2294e-01,  3.6094e-01,
          3.1010e-01, -1.0564e-01,  3.6249e-01, -7.7653e-03,  4.5850e-01,
         -1.0311e-01, -4.2256e-01,  3.7746e-02, -2.8222e-02, -4.1269e-02,
          4.2762e-01,  1.7923e-01,  2.5522e-02, -2.9041e-01,  4.0071e-01,
          2.2399e-01, -1.7079e-02,  5.5238e-02,  2.5189e-01, -1.8850e-01,
          2.3355e-01,  2.4722e-01, -1.0463e-01, -3.1430e-01, -9.9330e-02,
         -1.4797e-01,  3.8530e-03,  9.5966e-02, -2.5343e-02, -2.8662e-02,
          2.9494e-01,  1.2818e-01, -1.6870e-01,  1.1084e-01, -4.2726e-01,
          2.7736e-01,  4.4236e-01,  8.2608e-02, -2.1296e-01, -9.4205e-02,
         -1.0989e-01,  5.9991e-01, -1.0093e-01,  4.0297e-01, -1.5526e-01,
          1.8045e-02, -4.3055e-02, -1.5086e-01,  4.0201e-01, -3.1684e-01,
         -2.7238e-01, -1.1772e-01, -6.3871e-02, -3.1326e-01,  2.2098e-02,
         -1.1369e-01,  9.9174e-02, -2.0075e-01,  5.7716e-02, -1.0401e-01,
          1.3160e-01, -3.5497e-02,  1.9747e-01,  1.7759e-01,  4.1531e-02,
         -2.7665e-01,  6.5025e-02, -3.0625e-01, -1.0552e-01, -3.0156e-01,
          1.1224e-01,  4.3344e-02, -2.5681e-01,  2.3379e-01,  7.9355e-02,
          5.7413e-02,  3.1684e-02,  9.3678e-02, -1.6809e-01, -3.7316e-02,
          1.5166e-01,  2.1497e-01, -7.8458e-02,  1.6524e-02, -3.5786e-02,
          2.3194e-01, -1.2067e-01,  5.7196e-03, -9.1145e-02, -9.5749e-03,
          1.1440e-01, -1.4664e-01,  2.2381e-01,  5.6108e-02, -1.1686e-01,
          9.3095e-02, -2.5940e-01, -1.5735e-03,  8.4656e-02,  3.7162e-01,
         -1.1783e-01,  2.6347e-02, -1.7507e-01,  9.1192e-02, -3.1561e-02,
         -9.6365e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
178000 特征值优化 tensor(0.8597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2696e+00,  5.6245e-01, -1.0879e+00, -1.0098e+00,  1.3798e+00,
          1.5646e+00, -1.0699e+00,  2.2135e+00,  1.6117e+00,  8.0350e-01,
          4.9345e-01,  2.1796e-01,  1.2783e+00,  1.8917e-01, -1.9464e-01,
         -5.6512e-01,  7.9677e-01,  1.9303e-01, -4.1369e-01, -9.5191e-01,
         -2.5719e-01,  4.6538e-01,  1.2541e-01,  1.4077e+00, -6.0750e-01,
         -1.9992e-01, -1.9771e-02,  2.1195e-02,  4.3845e-02, -1.2476e-01,
          1.6613e-01,  9.1833e-02,  1.5093e-01,  1.5781e-01, -5.8335e-01,
         -1.3834e-01, -2.1063e-01, -2.8257e-01, -1.5695e-01,  7.1118e-02,
          2.3392e-01,  5.2546e-02, -1.5227e-02,  1.9386e-01, -1.2413e-01,
          1.3239e-01,  8.5605e-02,  2.7729e-01, -3.2062e-01,  4.6739e-01,
         -1.3369e-01,  4.8716e-01, -1.3245e-02,  1.0364e-01,  3.5534e-01,
          3.3058e-01, -1.1359e-01,  3.9209e-01, -1.2181e-04,  4.5699e-01,
         -1.3729e-01, -4.2602e-01,  1.1405e-01, -3.0899e-02, -3.8787e-02,
          4.2006e-01,  1.8144e-01,  2.2650e-02, -3.0294e-01,  3.8825e-01,
          2.2934e-01, -1.7536e-02,  6.4353e-02,  2.4614e-01, -1.7151e-01,
          2.2336e-01,  2.6265e-01, -1.0470e-01, -3.1756e-01, -8.4991e-02,
         -1.6013e-01,  1.3683e-02,  1.1909e-01, -9.1761e-03, -2.2766e-02,
          2.7606e-01,  9.3358e-02, -1.4356e-01,  6.6800e-02, -4.0232e-01,
          2.7348e-01,  4.2449e-01,  6.7274e-02, -1.1451e-01, -8.7566e-02,
         -1.1393e-01,  5.8087e-01, -7.3775e-02,  3.9748e-01, -1.4556e-01,
          9.8037e-02, -5.8779e-02, -1.3580e-01,  3.9314e-01, -3.1101e-01,
         -2.8599e-01, -1.1793e-01, -2.7450e-02, -3.0581e-01,  3.2638e-02,
         -1.2524e-01,  1.0425e-01, -1.9912e-01,  6.0869e-02, -9.5496e-02,
          1.2637e-01, -9.0906e-03,  1.9942e-01,  2.0944e-01,  3.1157e-02,
         -2.8068e-01,  4.1618e-02, -2.8936e-01, -1.1697e-01, -3.0736e-01,
          1.1593e-01,  3.8540e-02, -2.5020e-01,  2.2738e-01,  7.7340e-02,
          4.8462e-02,  3.1687e-02,  1.0271e-01, -1.5828e-01, -2.9757e-02,
          1.5740e-01,  1.9813e-01, -1.0267e-01,  4.2213e-02, -4.1368e-02,
          2.0584e-01, -1.3244e-01,  8.3540e-02, -7.2791e-02, -4.6647e-02,
          1.0902e-01, -1.4247e-01,  2.1512e-01,  5.2355e-02, -1.0903e-01,
          9.5156e-02, -2.5866e-01, -5.8200e-03,  8.8790e-02,  3.4690e-01,
         -1.3075e-01,  1.9560e-02, -1.8363e-01,  8.7451e-02, -1.7713e-02,
         -1.1347e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
179000 特征值优化 tensor(0.8381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2339e+00,  5.3001e-01, -1.0659e+00, -1.0117e+00,  1.3369e+00,
          1.5616e+00, -1.0328e+00,  2.2038e+00,  1.6376e+00,  7.7529e-01,
          5.0682e-01,  2.4753e-01,  1.2737e+00,  2.0707e-01, -1.8681e-01,
         -4.9788e-01,  7.9349e-01,  1.8787e-01, -3.8197e-01, -9.4584e-01,
         -2.5814e-01,  4.2695e-01,  1.3170e-01,  1.4370e+00, -6.3030e-01,
         -1.7473e-01, -4.2472e-02,  3.6223e-02,  5.9770e-02, -1.2437e-01,
          1.5549e-01,  6.2953e-02,  1.8697e-01,  2.2340e-01, -6.1858e-01,
         -1.3794e-01, -2.1730e-01, -3.0002e-01, -1.7184e-01,  8.9610e-02,
          2.0537e-01,  5.3875e-02, -1.3412e-02,  2.0273e-01, -1.1924e-01,
          1.2932e-01,  5.4102e-02,  2.3893e-01, -3.8797e-01,  4.8475e-01,
         -1.4382e-01,  4.4530e-01, -3.7233e-02,  8.7480e-02,  3.7382e-01,
          3.5191e-01, -1.2234e-01,  4.0848e-01,  1.2431e-02,  4.6916e-01,
         -1.4943e-01, -4.2853e-01,  1.7502e-01, -5.6023e-03, -1.9443e-02,
          4.1041e-01,  1.8233e-01,  3.8538e-03, -3.2377e-01,  3.7115e-01,
          2.3735e-01, -2.2284e-02,  9.9786e-02,  2.5324e-01, -1.5577e-01,
          2.2395e-01,  2.9102e-01, -1.0056e-01, -3.1087e-01, -8.2044e-02,
         -1.7704e-01,  3.4548e-02,  1.4388e-01,  1.1876e-02, -3.5427e-02,
          2.7874e-01,  7.3705e-02, -9.6867e-02,  6.4196e-02, -3.7897e-01,
          2.9130e-01,  3.9982e-01,  4.8947e-02, -4.8344e-02, -9.0180e-02,
         -1.1971e-01,  5.6327e-01, -6.0071e-02,  4.1141e-01, -1.3877e-01,
          1.6715e-01, -1.0667e-01, -1.1707e-01,  3.9848e-01, -2.9977e-01,
         -2.6107e-01, -9.5740e-02, -4.2194e-03, -2.9869e-01,  4.0699e-02,
         -1.3923e-01,  7.3869e-02, -2.0458e-01,  5.9699e-02, -1.1605e-01,
          1.1792e-01,  7.8286e-04,  1.8142e-01,  2.4337e-01,  6.1993e-02,
         -2.8228e-01,  2.0462e-02, -2.7171e-01, -1.1577e-01, -3.1455e-01,
          1.1953e-01,  4.7900e-02, -2.4659e-01,  2.2182e-01,  7.7092e-02,
          3.7169e-02,  1.7716e-02,  8.9865e-02, -1.4741e-01, -1.2104e-02,
          1.5981e-01,  1.8601e-01, -1.0714e-01,  5.4336e-02, -6.0279e-02,
          2.0528e-01, -1.4176e-01,  7.9455e-02, -5.2576e-02, -4.5576e-02,
          9.6676e-02, -1.3938e-01,  2.0796e-01,  5.0857e-02, -1.0384e-01,
          8.3957e-02, -2.5573e-01, -1.0197e-02,  6.6229e-02,  3.1921e-01,
         -1.1132e-01,  4.8856e-02, -1.8940e-01,  1.0320e-01, -2.1319e-02,
         -1.3548e-01]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
180000 特征值优化 tensor(0.8289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1958e+00,  5.0588e-01, -1.0284e+00, -1.0147e+00,  1.3140e+00,
          1.5481e+00, -1.0317e+00,  2.1430e+00,  1.6729e+00,  7.3140e-01,
          5.2107e-01,  2.7005e-01,  1.2862e+00,  2.3007e-01, -1.7154e-01,
         -4.3698e-01,  8.1009e-01,  1.6565e-01, -3.7899e-01, -9.3300e-01,
         -2.7811e-01,  4.1193e-01,  1.4629e-01,  1.4555e+00, -6.3288e-01,
         -1.6222e-01, -8.0106e-02,  1.9059e-02,  1.0852e-01, -1.2572e-01,
          1.5766e-01,  4.7948e-02,  2.3341e-01,  2.4261e-01, -6.1735e-01,
         -1.4518e-01, -2.2293e-01, -3.1858e-01, -1.7753e-01,  8.6181e-02,
          1.9732e-01,  4.9691e-02, -1.2225e-02,  2.1734e-01, -1.2239e-01,
          9.9038e-02,  5.0359e-02,  2.1551e-01, -4.5487e-01,  4.7147e-01,
         -1.3973e-01,  4.0457e-01, -6.0077e-02,  1.0168e-01,  3.7992e-01,
          3.8170e-01, -1.2830e-01,  4.3940e-01,  2.4785e-02,  4.7660e-01,
         -1.7479e-01, -4.1773e-01,  1.8404e-01,  9.1304e-03, -1.4200e-02,
          3.8597e-01,  1.7305e-01, -1.8434e-03, -3.2627e-01,  3.6710e-01,
          2.4658e-01, -1.1270e-02,  1.1072e-01,  2.5296e-01, -1.3771e-01,
          2.3193e-01,  3.0464e-01, -9.8378e-02, -3.0743e-01, -8.2505e-02,
         -1.8393e-01,  4.6201e-02,  1.5241e-01,  3.5446e-02, -2.2954e-02,
          2.8675e-01,  6.6608e-02, -6.7134e-02,  5.8334e-02, -3.9131e-01,
          3.0262e-01,  3.8214e-01,  5.9636e-02, -4.2911e-02, -9.6180e-02,
         -1.2702e-01,  5.4140e-01, -4.9609e-02,  4.0082e-01, -1.8482e-01,
          1.6009e-01, -1.2272e-01, -1.1712e-01,  3.8356e-01, -2.7482e-01,
         -2.1653e-01, -5.6638e-02,  6.2693e-03, -2.9458e-01,  5.0852e-02,
         -1.4645e-01,  7.9954e-02, -1.9666e-01,  5.7243e-02, -1.3236e-01,
          1.0594e-01, -2.5672e-03,  1.7857e-01,  2.5740e-01,  7.7729e-02,
         -2.7209e-01, -1.9779e-03, -2.7095e-01, -1.0655e-01, -3.0870e-01,
          1.1224e-01,  4.9279e-02, -2.4769e-01,  2.1895e-01,  6.2209e-02,
          4.4559e-02,  1.0635e-02,  8.8589e-02, -1.5402e-01, -5.1222e-03,
          1.6165e-01,  1.6227e-01, -1.2286e-01,  9.0666e-02, -6.1729e-02,
          2.1458e-01, -1.2311e-01,  7.8831e-02, -4.0107e-02, -3.0558e-02,
          8.5993e-02, -1.2474e-01,  2.1042e-01,  5.7580e-02, -9.4966e-02,
          8.0563e-02, -2.5163e-01,  3.4450e-03,  7.1724e-02,  2.9879e-01,
         -1.0205e-01,  6.2696e-02, -1.8830e-01,  1.2260e-01, -2.9210e-02,
         -1.5215e-01]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
181000 特征值优化 tensor(0.8290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1506e+00,  4.7926e-01, -1.0034e+00, -1.0117e+00,  1.3185e+00,
          1.5558e+00, -1.0337e+00,  2.0982e+00,  1.6899e+00,  7.1163e-01,
          5.0465e-01,  2.6964e-01,  1.2985e+00,  2.3231e-01, -1.7177e-01,
         -4.0138e-01,  8.0980e-01,  1.6375e-01, -3.7022e-01, -9.2627e-01,
         -2.6399e-01,  3.9650e-01,  1.6970e-01,  1.4821e+00, -6.2668e-01,
         -1.6068e-01, -9.0172e-02,  2.0873e-02,  1.0743e-01, -1.2062e-01,
          1.3133e-01,  3.3096e-02,  2.5653e-01,  2.2322e-01, -6.0837e-01,
         -1.5638e-01, -2.2586e-01, -3.0972e-01, -1.7442e-01,  8.3757e-02,
          1.9902e-01,  5.1886e-02, -9.4201e-03,  2.2415e-01, -1.2900e-01,
          7.6305e-02,  4.6565e-02,  1.8815e-01, -4.8267e-01,  4.4762e-01,
         -1.3862e-01,  4.1207e-01, -7.0152e-02,  1.0466e-01,  3.8643e-01,
          3.8820e-01, -1.3669e-01,  4.4460e-01,  4.0762e-02,  4.8063e-01,
         -1.7179e-01, -4.0921e-01,  1.8860e-01,  8.0869e-03, -1.1963e-02,
          3.9036e-01,  1.7096e-01, -1.1126e-02, -3.3262e-01,  3.6566e-01,
          2.5054e-01, -1.1224e-02,  1.0941e-01,  2.5206e-01, -1.3312e-01,
          2.3530e-01,  3.1210e-01, -7.9085e-02, -2.9707e-01, -7.7962e-02,
         -1.8007e-01,  5.3321e-02,  1.6479e-01,  4.0148e-02, -2.9190e-02,
          2.9785e-01,  5.7275e-02, -4.9312e-02,  7.8988e-02, -3.8319e-01,
          2.9566e-01,  3.8842e-01,  6.5581e-02, -3.2023e-02, -1.0174e-01,
         -1.3264e-01,  5.4687e-01, -5.7594e-02,  4.2757e-01, -1.9539e-01,
          1.7756e-01, -1.1803e-01, -1.3071e-01,  3.6241e-01, -2.7995e-01,
         -1.7972e-01, -4.2889e-02,  3.9983e-03, -2.8945e-01,  6.0674e-02,
         -1.4458e-01,  7.2923e-02, -1.9254e-01,  5.9840e-02, -1.4385e-01,
          1.0228e-01, -1.0408e-02,  1.6089e-01,  2.5887e-01,  8.0135e-02,
         -2.6607e-01, -8.8078e-03, -2.6265e-01, -1.0754e-01, -3.0410e-01,
          1.0922e-01,  4.1954e-02, -2.4863e-01,  2.1995e-01,  6.2957e-02,
          4.3337e-02, -9.5502e-04,  8.1695e-02, -1.5974e-01, -3.4400e-03,
          1.6072e-01,  1.5102e-01, -1.2679e-01,  9.5795e-02, -6.2053e-02,
          2.0973e-01, -1.2620e-01,  6.6026e-02, -2.5947e-02, -2.0041e-02,
          7.6317e-02, -1.3468e-01,  2.1276e-01,  5.7882e-02, -9.5801e-02,
          8.3625e-02, -2.5416e-01,  8.8885e-03,  7.1169e-02,  2.8845e-01,
         -8.5204e-02,  7.1034e-02, -1.8052e-01,  1.2712e-01, -3.1931e-02,
         -1.6294e-01]], device='cuda:0') tensor(0.2172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
182000 特征值优化 tensor(0.8219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1567e+00,  4.5993e-01, -1.0172e+00, -1.0122e+00,  1.3700e+00,
          1.5585e+00, -1.0286e+00,  2.0936e+00,  1.6943e+00,  7.1579e-01,
          4.9608e-01,  2.8657e-01,  1.3046e+00,  2.4791e-01, -1.7070e-01,
         -3.7253e-01,  8.2466e-01,  1.4275e-01, -3.6757e-01, -9.3684e-01,
         -2.4305e-01,  3.9233e-01,  1.7657e-01,  1.5193e+00, -6.1637e-01,
         -1.6253e-01, -9.7796e-02,  2.3998e-02,  1.0793e-01, -1.0844e-01,
          1.2956e-01,  1.2016e-02,  2.5576e-01,  2.3980e-01, -5.9870e-01,
         -1.6063e-01, -2.2730e-01, -2.9630e-01, -1.6783e-01,  8.5033e-02,
          2.0848e-01,  4.9344e-02, -9.3352e-03,  2.2283e-01, -1.3907e-01,
          7.1100e-02,  3.9707e-02,  1.7130e-01, -4.9507e-01,  4.3581e-01,
         -1.2884e-01,  4.0992e-01, -6.7981e-02,  1.0906e-01,  3.8218e-01,
          4.0135e-01, -1.2555e-01,  4.3792e-01,  4.1647e-02,  4.7977e-01,
         -1.8943e-01, -4.0280e-01,  1.7125e-01,  1.3166e-02, -1.7035e-02,
          3.9936e-01,  1.6205e-01, -5.3227e-03, -3.4047e-01,  3.6505e-01,
          2.5310e-01, -1.4587e-02,  9.9612e-02,  2.4969e-01, -1.4214e-01,
          2.4219e-01,  3.0929e-01, -7.4503e-02, -2.9756e-01, -8.2304e-02,
         -1.7387e-01,  4.9929e-02,  1.7932e-01,  4.7512e-02, -3.9516e-02,
          2.9892e-01,  3.6476e-02, -7.2969e-02,  8.5198e-02, -3.9337e-01,
          2.9228e-01,  3.7973e-01,  7.8658e-02, -2.8450e-02, -9.7520e-02,
         -1.2695e-01,  5.4630e-01, -6.5274e-02,  4.3920e-01, -1.6524e-01,
          1.7348e-01, -1.2387e-01, -1.3897e-01,  3.4361e-01, -2.8289e-01,
         -1.7227e-01, -4.8111e-02,  1.7253e-02, -2.7443e-01,  6.4252e-02,
         -1.4610e-01,  7.6492e-02, -1.9174e-01,  7.7732e-02, -1.4399e-01,
          1.0460e-01, -1.7618e-03,  1.4999e-01,  2.7234e-01,  9.7283e-02,
         -2.7264e-01, -1.0345e-02, -2.5783e-01, -9.6265e-02, -3.0442e-01,
          1.0930e-01,  4.2295e-02, -2.4865e-01,  2.0659e-01,  6.8225e-02,
          4.3243e-02, -3.9138e-03,  8.5059e-02, -1.6615e-01, -2.2075e-03,
          1.5924e-01,  1.4987e-01, -1.3835e-01,  9.9388e-02, -6.2597e-02,
          2.1285e-01, -1.3737e-01,  7.5349e-02, -2.0789e-02, -1.5173e-02,
          8.3482e-02, -1.3683e-01,  2.1089e-01,  6.4906e-02, -9.0617e-02,
          8.9362e-02, -2.4075e-01, -3.5163e-03,  6.6808e-02,  2.8656e-01,
         -7.3613e-02,  7.3679e-02, -1.6734e-01,  1.2548e-01, -4.3490e-02,
         -1.6157e-01]], device='cuda:0') tensor(0.2216, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
183000 特征值优化 tensor(0.8135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1297,  0.4345, -1.0066, -1.0073,  1.4521,  1.5632, -1.0234,  2.0733,
          1.7041,  0.6979,  0.4743,  0.2789,  1.2861,  0.2617, -0.1759, -0.3232,
          0.8339,  0.1349, -0.3599, -0.9792, -0.2151,  0.3710,  0.1835,  1.5612,
         -0.6014, -0.1387, -0.0844,  0.0235,  0.0985, -0.0970,  0.1025, -0.0239,
          0.2641,  0.2281, -0.5825, -0.1718, -0.2389, -0.2867, -0.1485,  0.0925,
          0.2128,  0.0517, -0.0091,  0.2284, -0.1443,  0.0473,  0.0519,  0.1441,
         -0.5265,  0.4257, -0.1420,  0.4206, -0.0614,  0.1253,  0.3914,  0.3975,
         -0.1362,  0.4385,  0.0370,  0.4961, -0.1886, -0.3898,  0.1749,  0.0263,
         -0.0181,  0.3928,  0.1660,  0.0042, -0.3385,  0.3549,  0.2452, -0.0182,
          0.1032,  0.2483, -0.1365,  0.2635,  0.3057, -0.0636, -0.2816, -0.0804,
         -0.1751,  0.0533,  0.1713,  0.0524, -0.0612,  0.3136,  0.0242, -0.0868,
          0.1236, -0.3901,  0.3004,  0.3953,  0.0718, -0.0214, -0.1047, -0.1324,
          0.5494, -0.0439,  0.4649, -0.1730,  0.1785, -0.1351, -0.1463,  0.3299,
         -0.2916, -0.1468, -0.0465,  0.0133, -0.2688,  0.0587, -0.1666,  0.0856,
         -0.1967,  0.0767, -0.1641,  0.0988,  0.0121,  0.1399,  0.2829,  0.1214,
         -0.2465, -0.0114, -0.2594, -0.0947, -0.2947,  0.1001,  0.0517, -0.2419,
          0.1924,  0.0679,  0.0322, -0.0169,  0.0680, -0.1750, -0.0093,  0.1698,
          0.1273, -0.1448,  0.1006, -0.0622,  0.2285, -0.1169,  0.0773, -0.0270,
         -0.0285,  0.0768, -0.1464,  0.1980,  0.0702, -0.0756,  0.0775, -0.2452,
         -0.0054,  0.0782,  0.2844, -0.0581,  0.0810, -0.1570,  0.1280, -0.0470,
         -0.1696]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
184000 特征值优化 tensor(0.8194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1263,  0.4406, -1.0450, -1.0118,  1.4947,  1.5669, -0.9997,  2.0310,
          1.7196,  0.6847,  0.4882,  0.2469,  1.2907,  0.2842, -0.1980, -0.3007,
          0.8516,  0.1229, -0.3759, -0.9950, -0.1517,  0.3392,  0.1944,  1.5911,
         -0.5809, -0.1070, -0.0983,  0.0208,  0.1048, -0.0785,  0.0744, -0.0438,
          0.2706,  0.2166, -0.5366, -0.1544, -0.2367, -0.2660, -0.1442,  0.1212,
          0.2176,  0.0466, -0.0063,  0.2177, -0.1617, -0.0061,  0.0673,  0.1340,
         -0.5365,  0.4010, -0.1460,  0.4538, -0.0772,  0.1414,  0.3973,  0.3843,
         -0.1468,  0.4465,  0.0211,  0.4867, -0.1823, -0.3914,  0.1556,  0.0112,
         -0.0121,  0.3975,  0.1497, -0.0033, -0.3341,  0.3410,  0.2527, -0.0410,
          0.0943,  0.2572, -0.1189,  0.2856,  0.2968, -0.0639, -0.2745, -0.0848,
         -0.1906,  0.0664,  0.1770,  0.0496, -0.0616,  0.3057,  0.0183, -0.0932,
          0.0861, -0.4258,  0.2875,  0.4080,  0.0802,  0.0257, -0.1003, -0.1161,
          0.5502, -0.0449,  0.5061, -0.1419,  0.1702, -0.1663, -0.1677,  0.3448,
         -0.2755, -0.1158, -0.0401,  0.0518, -0.2607,  0.0714, -0.1596,  0.0890,
         -0.2059,  0.0546, -0.1599,  0.0879,  0.0072,  0.1557,  0.2642,  0.1275,
         -0.2319, -0.0401, -0.2678, -0.0914, -0.2839,  0.0975,  0.0461, -0.2364,
          0.1713,  0.0947,  0.0261, -0.0286,  0.0528, -0.1814, -0.0264,  0.1607,
          0.1122, -0.1385,  0.1197, -0.0884,  0.2157, -0.1268,  0.0730, -0.0286,
         -0.0374,  0.0669, -0.1294,  0.1994,  0.0723, -0.0724,  0.0812, -0.2553,
          0.0196,  0.0847,  0.2711, -0.0595,  0.0845, -0.1544,  0.1246, -0.0578,
         -0.1875]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
185000 特征值优化 tensor(0.8120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1510e+00,  4.6366e-01, -1.0534e+00, -1.0072e+00,  1.4969e+00,
          1.5519e+00, -1.0182e+00,  2.0198e+00,  1.7192e+00,  6.7844e-01,
          4.8181e-01,  2.3214e-01,  1.2851e+00,  2.9022e-01, -2.1240e-01,
         -2.8093e-01,  8.6950e-01,  1.1356e-01, -3.8939e-01, -1.0096e+00,
         -1.4021e-01,  3.1729e-01,  2.1308e-01,  1.6032e+00, -5.7774e-01,
         -1.0009e-01, -8.7750e-02,  1.5801e-02,  1.1796e-01, -6.7042e-02,
          5.0749e-02, -5.0586e-02,  2.6917e-01,  2.2726e-01, -5.2614e-01,
         -1.4935e-01, -2.3678e-01, -2.7051e-01, -1.4500e-01,  1.2315e-01,
          2.2231e-01,  4.7915e-02, -8.3650e-03,  2.2327e-01, -1.7736e-01,
         -1.7468e-02,  7.7454e-02,  1.1799e-01, -5.4418e-01,  3.8861e-01,
         -1.5368e-01,  4.4937e-01, -7.8814e-02,  1.4950e-01,  3.9827e-01,
          3.7879e-01, -1.4255e-01,  4.4074e-01,  2.1628e-02,  4.9298e-01,
         -1.7550e-01, -3.8135e-01,  1.4291e-01, -1.8554e-03, -7.4083e-03,
          4.0362e-01,  1.3330e-01,  9.8053e-03, -3.2966e-01,  3.3902e-01,
          2.5164e-01, -4.0345e-02,  8.6466e-02,  2.6097e-01, -1.1281e-01,
          2.8959e-01,  2.9570e-01, -5.4882e-02, -2.6196e-01, -8.5029e-02,
         -1.8843e-01,  5.9971e-02,  1.8131e-01,  5.3268e-02, -6.1562e-02,
          3.0519e-01,  2.4300e-02, -1.0508e-01,  6.1114e-02, -4.5737e-01,
          2.7985e-01,  4.2742e-01,  8.1129e-02,  2.9328e-02, -9.9181e-02,
         -1.1598e-01,  5.5868e-01, -4.6639e-02,  5.0692e-01, -1.4351e-01,
          1.6162e-01, -1.7186e-01, -1.7809e-01,  3.3785e-01, -2.8423e-01,
         -9.9078e-02, -5.3323e-02,  6.3100e-02, -2.6435e-01,  7.4245e-02,
         -1.5571e-01,  9.2404e-02, -2.0076e-01,  5.0736e-02, -1.6234e-01,
          7.7625e-02, -9.5856e-03,  1.6623e-01,  2.6461e-01,  1.2677e-01,
         -2.3176e-01, -4.5752e-02, -2.6848e-01, -9.3040e-02, -2.7325e-01,
          1.0024e-01,  4.2365e-02, -2.3676e-01,  1.7004e-01,  1.0807e-01,
          9.2021e-03, -2.5584e-02,  4.4201e-02, -1.8405e-01, -2.1462e-02,
          1.5122e-01,  9.1882e-02, -1.3826e-01,  1.3023e-01, -1.0474e-01,
          2.0143e-01, -1.3349e-01,  8.9710e-02, -3.1294e-02, -2.6814e-02,
          6.9125e-02, -1.3274e-01,  1.8793e-01,  7.1507e-02, -7.6905e-02,
          8.7810e-02, -2.5746e-01,  1.9931e-02,  8.3580e-02,  2.6616e-01,
         -6.6352e-02,  7.3678e-02, -1.5539e-01,  1.2579e-01, -5.8405e-02,
         -1.8676e-01]], device='cuda:0') tensor(0.2076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
186000 特征值优化 tensor(0.8142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1657e+00,  4.8965e-01, -1.0688e+00, -1.0107e+00,  1.5027e+00,
          1.5438e+00, -1.0227e+00,  2.0371e+00,  1.7161e+00,  6.8017e-01,
          4.7045e-01,  2.4689e-01,  1.2966e+00,  2.9000e-01, -2.1467e-01,
         -2.6604e-01,  8.8239e-01,  1.1639e-01, -4.0017e-01, -1.0191e+00,
         -1.4345e-01,  2.9063e-01,  2.3806e-01,  1.6034e+00, -5.9201e-01,
         -1.1490e-01, -6.9135e-02,  2.5228e-02,  1.0322e-01, -4.3585e-02,
          2.5197e-02, -7.2236e-02,  2.4627e-01,  2.2511e-01, -5.2364e-01,
         -1.4189e-01, -2.2030e-01, -2.6032e-01, -1.2156e-01,  1.1165e-01,
          2.1745e-01,  4.9933e-02, -8.9816e-03,  2.1091e-01, -2.0588e-01,
         -2.6043e-02,  6.8170e-02,  1.0048e-01, -5.4835e-01,  3.8651e-01,
         -1.5891e-01,  4.4885e-01, -6.0864e-02,  1.5260e-01,  3.9865e-01,
          3.9233e-01, -1.3309e-01,  4.2047e-01,  3.3297e-02,  4.8380e-01,
         -1.8800e-01, -3.8296e-01,  1.6434e-01,  8.8757e-03, -2.0912e-02,
          3.8611e-01,  1.3434e-01,  3.2307e-02, -3.2558e-01,  3.3212e-01,
          2.3501e-01, -2.2193e-02,  9.7530e-02,  2.6439e-01, -1.0256e-01,
          2.7912e-01,  2.8934e-01, -5.1958e-02, -2.8014e-01, -8.9784e-02,
         -1.8997e-01,  6.0668e-02,  1.7056e-01,  7.0532e-02, -7.4800e-02,
          2.9931e-01,  7.3414e-03, -1.1249e-01,  7.3618e-02, -4.6412e-01,
          2.7847e-01,  4.3025e-01,  6.8262e-02, -1.0098e-03, -1.0454e-01,
         -1.1516e-01,  5.7512e-01, -2.1058e-02,  5.2738e-01, -1.5051e-01,
          1.6242e-01, -1.8706e-01, -1.8637e-01,  3.1334e-01, -3.0221e-01,
         -9.8595e-02, -7.0993e-02,  6.8176e-02, -2.6786e-01,  7.1818e-02,
         -1.7562e-01,  7.7401e-02, -1.9547e-01,  6.9380e-02, -1.5792e-01,
          8.9809e-02, -2.2887e-02,  1.4953e-01,  2.7750e-01,  1.4529e-01,
         -2.1095e-01, -4.3171e-02, -2.5589e-01, -9.2505e-02, -2.6618e-01,
          1.1170e-01,  5.2891e-02, -2.3704e-01,  1.7468e-01,  1.1181e-01,
         -8.1289e-03, -1.3629e-02,  3.9031e-02, -1.9982e-01, -2.2024e-02,
          1.4018e-01,  9.6159e-02, -1.2157e-01,  1.0392e-01, -9.9145e-02,
          2.1427e-01, -1.6400e-01,  7.5791e-02, -3.1406e-02, -4.9130e-02,
          7.8827e-02, -1.5518e-01,  1.9824e-01,  6.6419e-02, -7.3603e-02,
          8.8314e-02, -2.3259e-01,  2.2837e-03,  7.4571e-02,  2.7814e-01,
         -4.7952e-02,  7.3581e-02, -1.7530e-01,  1.3860e-01, -7.1581e-02,
         -1.7218e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
187000 特征值优化 tensor(0.8249, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2153,  0.5043, -1.0860, -1.0142,  1.5023,  1.5296, -1.0392,  2.0339,
          1.7124,  0.6758,  0.4660,  0.2223,  1.3105,  0.2954, -0.2316, -0.2370,
          0.9087,  0.1184, -0.4237, -1.0311, -0.1365,  0.2852,  0.2788,  1.6100,
         -0.5895, -0.1198, -0.0661,  0.0380,  0.1041, -0.0328, -0.0091, -0.0698,
          0.2268,  0.2278, -0.5138, -0.1400, -0.2315, -0.2713, -0.1207,  0.1099,
          0.2267,  0.0467, -0.0076,  0.2049, -0.2085, -0.0427,  0.0875,  0.0705,
         -0.5450,  0.3656, -0.1555,  0.4537, -0.0660,  0.1457,  0.3975,  0.3801,
         -0.1413,  0.4263,  0.0344,  0.4797, -0.1814, -0.3802,  0.1534, -0.0115,
         -0.0098,  0.3870,  0.1274,  0.0386, -0.3160,  0.3374,  0.2431, -0.0370,
          0.0955,  0.2594, -0.1060,  0.3013,  0.2867, -0.0324, -0.2670, -0.0868,
         -0.1782,  0.0547,  0.1703,  0.0568, -0.0602,  0.2957,  0.0069, -0.1182,
          0.0401, -0.4741,  0.2866,  0.4436,  0.0730, -0.0070, -0.1032, -0.1082,
          0.5659, -0.0296,  0.5403, -0.1320,  0.1747, -0.1851, -0.1941,  0.3097,
         -0.2926, -0.0791, -0.0569,  0.0679, -0.2551,  0.0765, -0.1650,  0.0822,
         -0.1994,  0.0571, -0.1626,  0.0862, -0.0170,  0.1668,  0.2648,  0.1389,
         -0.2096, -0.0592, -0.2674, -0.0937, -0.2703,  0.1072,  0.0482, -0.2339,
          0.1657,  0.1286, -0.0131, -0.0284,  0.0447, -0.1784, -0.0169,  0.1419,
          0.0815, -0.1140,  0.1043, -0.1113,  0.2046, -0.1598,  0.0803, -0.0263,
         -0.0465,  0.0743, -0.1448,  0.1849,  0.0727, -0.0754,  0.0793, -0.2389,
          0.0223,  0.0791,  0.2749, -0.0586,  0.0692, -0.1636,  0.1279, -0.0692,
         -0.1665]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
188000 特征值优化 tensor(0.8196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2499,  0.5306, -1.1106, -1.0139,  1.4785,  1.5102, -1.0385,  2.0376,
          1.7063,  0.6662,  0.4632,  0.2183,  1.3257,  0.3214, -0.2337, -0.2087,
          0.9187,  0.1146, -0.4365, -1.0297, -0.1314,  0.2627,  0.3153,  1.6123,
         -0.5944, -0.1228, -0.0682,  0.0409,  0.1071, -0.0259, -0.0338, -0.0836,
          0.2192,  0.2167, -0.4944, -0.1431, -0.2301, -0.2876, -0.1178,  0.1125,
          0.2238,  0.0471, -0.0083,  0.2011, -0.2228, -0.0582,  0.0899,  0.0501,
         -0.5415,  0.3461, -0.1401,  0.4533, -0.0607,  0.1456,  0.3987,  0.3914,
         -0.1364,  0.4250,  0.0347,  0.4784, -0.1883, -0.3733,  0.1500, -0.0173,
         -0.0087,  0.3878,  0.1318,  0.0539, -0.3098,  0.3442,  0.2444, -0.0330,
          0.1011,  0.2642, -0.0908,  0.3014,  0.2832, -0.0239, -0.2693, -0.0889,
         -0.1729,  0.0467,  0.1696,  0.0588, -0.0570,  0.2934,  0.0028, -0.1349,
          0.0320, -0.5000,  0.2830,  0.4537,  0.0803, -0.0134, -0.1009, -0.1005,
          0.5702, -0.0165,  0.5543, -0.1230,  0.1812, -0.1809, -0.1933,  0.2891,
         -0.2911, -0.0795, -0.0559,  0.0649, -0.2608,  0.0807, -0.1575,  0.0826,
         -0.1957,  0.0530, -0.1553,  0.0885, -0.0208,  0.1771,  0.2631,  0.1402,
         -0.2138, -0.0680, -0.2724, -0.0934, -0.2634,  0.1104,  0.0438, -0.2363,
          0.1655,  0.1373, -0.0241, -0.0279,  0.0517, -0.1772, -0.0129,  0.1343,
          0.0695, -0.1201,  0.1085, -0.1115,  0.2002, -0.1644,  0.0866, -0.0199,
         -0.0473,  0.0794, -0.1441,  0.1844,  0.0744, -0.0668,  0.0768, -0.2321,
          0.0276,  0.0882,  0.2707, -0.0621,  0.0645, -0.1659,  0.1286, -0.0770,
         -0.1639]], device='cuda:0') tensor(0.2188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
189000 特征值优化 tensor(0.8135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2945,  0.5779, -1.1181, -1.0099,  1.4512,  1.4931, -1.0745,  2.0471,
          1.7073,  0.6552,  0.4570,  0.2194,  1.3089,  0.3153, -0.2210, -0.2058,
          0.9346,  0.1327, -0.4379, -1.0404, -0.1360,  0.2299,  0.3416,  1.6128,
         -0.6126, -0.0886, -0.0500,  0.0405,  0.0852, -0.0120, -0.0560, -0.0877,
          0.2212,  0.2016, -0.4752, -0.1444, -0.2287, -0.2869, -0.0974,  0.0912,
          0.2123,  0.0489, -0.0061,  0.2031, -0.2381, -0.0821,  0.0886,  0.0413,
         -0.5314,  0.3258, -0.1344,  0.4502, -0.0474,  0.1534,  0.4062,  0.4029,
         -0.1592,  0.4058,  0.0386,  0.4660, -0.2072, -0.3772,  0.1646, -0.0136,
         -0.0176,  0.3812,  0.1377,  0.0700, -0.2945,  0.3363,  0.2323, -0.0148,
          0.1108,  0.2641, -0.0878,  0.3085,  0.2740, -0.0291, -0.2793, -0.0820,
         -0.1779,  0.0504,  0.1660,  0.0443, -0.0760,  0.3037,  0.0054, -0.1273,
          0.0281, -0.4985,  0.2878,  0.4403,  0.0830, -0.0244, -0.1085, -0.1002,
          0.5796, -0.0033,  0.5642, -0.1208,  0.1740, -0.1917, -0.1858,  0.2801,
         -0.3120, -0.0698, -0.0605,  0.0423, -0.2540,  0.0810, -0.1633,  0.0719,
         -0.1898,  0.0643, -0.1776,  0.0767, -0.0302,  0.1688,  0.2646,  0.1490,
         -0.2159, -0.0670, -0.2776, -0.1009, -0.2660,  0.1140,  0.0476, -0.2279,
          0.1685,  0.1352, -0.0334, -0.0179,  0.0451, -0.1819, -0.0155,  0.1330,
          0.0463, -0.1094,  0.0902, -0.1199,  0.1990, -0.1543,  0.0813, -0.0372,
         -0.0574,  0.0629, -0.1603,  0.1874,  0.0642, -0.0766,  0.0826, -0.2325,
          0.0150,  0.0901,  0.2752, -0.0536,  0.0658, -0.1766,  0.1381, -0.0724,
         -0.1631]], device='cuda:0') tensor(0.2163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
190000 特征值优化 tensor(0.8070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3828,  0.5840, -1.1412, -1.0083,  1.3983,  1.4675, -1.0577,  2.0496,
          1.7134,  0.6400,  0.4490,  0.2048,  1.3121,  0.3308, -0.2012, -0.1810,
          0.9415,  0.1460, -0.4569, -1.0605, -0.1299,  0.2054,  0.4014,  1.6337,
         -0.6334, -0.1064, -0.0325,  0.0316,  0.0832, -0.0132, -0.0715, -0.0840,
          0.2412,  0.2071, -0.4653, -0.1497, -0.2341, -0.2983, -0.0953,  0.1102,
          0.1868,  0.0521, -0.0083,  0.2019, -0.2337, -0.1001,  0.0936,  0.0181,
         -0.5275,  0.2721, -0.1156,  0.4580, -0.0324,  0.1477,  0.4123,  0.3845,
         -0.1253,  0.4140,  0.0790,  0.4466, -0.1871, -0.3647,  0.1747, -0.0161,
          0.0062,  0.4000,  0.1398,  0.0846, -0.2832,  0.3403,  0.2454, -0.0203,
          0.1121,  0.2609, -0.0791,  0.3160,  0.2659, -0.0333, -0.2795, -0.0891,
         -0.1708,  0.0583,  0.1538,  0.0565, -0.0652,  0.3036, -0.0157, -0.1520,
          0.0247, -0.4859,  0.3032,  0.4332,  0.0818, -0.0027, -0.1090, -0.0964,
          0.5713,  0.0307,  0.5730, -0.0868,  0.1932, -0.1644, -0.1874,  0.2573,
         -0.3179, -0.0721, -0.0566,  0.0138, -0.2298,  0.0864, -0.1673,  0.0941,
         -0.1956,  0.0561, -0.1642,  0.0702, -0.0432,  0.1918,  0.2675,  0.1435,
         -0.2157, -0.0678, -0.2908, -0.1011, -0.2699,  0.1019,  0.0460, -0.2110,
          0.1727,  0.1272, -0.0265, -0.0294,  0.0578, -0.1721, -0.0210,  0.1204,
          0.0600, -0.0918,  0.0920, -0.1052,  0.1893, -0.1647,  0.0778, -0.0314,
         -0.0725,  0.0797, -0.1435,  0.1685,  0.0719, -0.0555,  0.0691, -0.2278,
          0.0375,  0.1032,  0.2476, -0.0692,  0.0524, -0.1598,  0.1379, -0.0545,
         -0.1648]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
191000 特征值优化 tensor(0.8146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4165e+00,  5.9605e-01, -1.1584e+00, -1.0129e+00,  1.3728e+00,
          1.4659e+00, -1.0708e+00,  2.0504e+00,  1.7049e+00,  6.4332e-01,
          4.4931e-01,  2.2552e-01,  1.3204e+00,  3.4370e-01, -2.3031e-01,
         -1.5183e-01,  9.4530e-01,  1.9493e-01, -4.6495e-01, -1.0994e+00,
         -1.2812e-01,  1.8612e-01,  4.4466e-01,  1.6609e+00, -6.7128e-01,
         -5.2008e-02,  2.2546e-02,  2.8182e-02,  4.0752e-02,  1.0462e-03,
         -8.2789e-02, -8.5150e-02,  1.9881e-01,  1.6618e-01, -4.5628e-01,
         -1.4347e-01, -2.2305e-01, -2.8979e-01, -6.9383e-02,  9.3414e-02,
          1.5142e-01,  4.6850e-02, -8.4879e-03,  1.8636e-01, -2.4036e-01,
         -1.1015e-01,  9.3135e-02, -2.7104e-02, -5.1855e-01,  2.4233e-01,
         -1.0240e-01,  4.4400e-01, -4.9677e-02,  1.4460e-01,  4.2829e-01,
          4.2072e-01, -1.3647e-01,  3.8577e-01,  1.1107e-01,  4.3231e-01,
         -2.2248e-01, -3.7423e-01,  1.8027e-01, -5.4800e-02, -1.1053e-02,
          4.0114e-01,  1.6132e-01,  6.4606e-02, -2.6944e-01,  3.2975e-01,
          2.4894e-01, -8.0100e-03,  1.1687e-01,  2.6531e-01, -6.7205e-02,
          3.0649e-01,  2.7260e-01, -6.1359e-03, -2.7984e-01, -7.1153e-02,
         -1.6761e-01,  5.7075e-02,  1.4415e-01,  4.5805e-02, -6.4360e-02,
          2.7466e-01, -4.1437e-02, -1.2209e-01,  3.4028e-02, -4.6031e-01,
          3.1088e-01,  4.1381e-01,  9.9237e-02,  6.7740e-03, -9.9778e-02,
         -9.1681e-02,  5.5209e-01,  2.7147e-02,  5.6334e-01, -1.9289e-02,
          1.6828e-01, -1.5636e-01, -2.1760e-01,  2.6941e-01, -3.3249e-01,
         -7.1987e-02, -9.2549e-02, -1.3664e-02, -1.8962e-01,  8.7938e-02,
         -1.6607e-01,  1.0595e-01, -1.8610e-01,  4.3290e-02, -1.6048e-01,
          6.8187e-02, -5.1063e-02,  1.6520e-01,  2.5285e-01,  1.6046e-01,
         -2.0452e-01, -8.1292e-02, -3.0434e-01, -9.4063e-02, -2.8014e-01,
          1.0097e-01,  4.0219e-02, -2.1346e-01,  1.7210e-01,  1.2273e-01,
         -2.2508e-02, -2.7905e-02,  7.0680e-02, -1.6197e-01, -2.4453e-02,
          1.1255e-01,  4.1321e-02, -7.1241e-02,  8.7416e-02, -8.8748e-02,
          1.6334e-01, -1.6917e-01,  6.5706e-02, -2.2188e-02, -7.6919e-02,
          6.7663e-02, -1.5177e-01,  1.4753e-01,  6.9435e-02, -5.7774e-02,
          6.0133e-02, -2.3959e-01,  4.7158e-02,  9.3477e-02,  2.4321e-01,
         -5.6741e-02,  4.6095e-02, -1.7305e-01,  1.3426e-01, -4.7298e-02,
         -1.5530e-01]], device='cuda:0') tensor(0.2244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
192000 特征值优化 tensor(0.8915, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4600e+00,  6.1987e-01, -1.1662e+00, -1.0075e+00,  1.3569e+00,
          1.4537e+00, -1.0614e+00,  2.0416e+00,  1.7229e+00,  6.1840e-01,
          4.4848e-01,  2.4535e-01,  1.3116e+00,  3.6615e-01, -2.1713e-01,
         -1.1732e-01,  9.8595e-01,  2.2082e-01, -4.8270e-01, -1.1261e+00,
         -1.4667e-01,  1.6599e-01,  4.8677e-01,  1.6850e+00, -6.8225e-01,
         -4.8874e-02,  7.6250e-02,  7.6594e-03,  2.8549e-02, -4.0238e-03,
         -1.0176e-01, -7.2080e-02,  1.9278e-01,  1.5706e-01, -4.3651e-01,
         -1.2761e-01, -2.4568e-01, -2.9839e-01, -6.9250e-02,  9.7812e-02,
          1.3750e-01,  4.9920e-02, -9.1995e-03,  2.0401e-01, -2.4640e-01,
         -1.1784e-01,  9.8144e-02, -6.4088e-02, -5.0529e-01,  1.9791e-01,
         -1.0418e-01,  4.3503e-01, -5.2269e-02,  1.4788e-01,  4.3051e-01,
          4.2217e-01, -1.3159e-01,  3.7335e-01,  1.2156e-01,  4.1688e-01,
         -2.2345e-01, -3.6853e-01,  1.7241e-01, -7.4283e-02, -6.4711e-03,
          3.8642e-01,  1.7326e-01,  6.1931e-02, -2.6530e-01,  3.3153e-01,
          2.4711e-01,  2.5222e-03,  1.1227e-01,  2.4454e-01, -4.3867e-02,
          3.2488e-01,  2.8207e-01,  1.2244e-02, -2.6344e-01, -6.7344e-02,
         -1.5032e-01,  4.2817e-02,  1.3484e-01,  2.8070e-02, -6.0990e-02,
          2.8180e-01, -6.3317e-02, -1.2725e-01, -6.0972e-04, -4.5862e-01,
          3.0940e-01,  4.2572e-01,  1.4159e-01,  1.9130e-02, -1.0131e-01,
         -8.7689e-02,  5.4726e-01,  2.1480e-02,  5.8717e-01,  7.0198e-02,
          1.3689e-01, -1.3449e-01, -2.2268e-01,  2.4818e-01, -3.5775e-01,
         -9.2087e-02, -1.0988e-01, -4.0472e-02, -1.9402e-01,  9.2545e-02,
         -1.5879e-01,  1.1566e-01, -1.7174e-01,  4.5733e-02, -1.7415e-01,
          7.0839e-02, -3.3219e-02,  1.5930e-01,  2.6983e-01,  1.5399e-01,
         -2.1319e-01, -7.0338e-02, -2.9761e-01, -1.0082e-01, -2.8333e-01,
          9.8917e-02,  3.6713e-02, -1.9561e-01,  1.8071e-01,  1.1737e-01,
         -2.4867e-02, -1.8855e-02,  8.6389e-02, -1.4738e-01, -2.0488e-02,
          1.1036e-01,  1.2528e-02, -7.9047e-02,  9.1012e-02, -8.6704e-02,
          1.3852e-01, -1.4278e-01,  8.7202e-02, -2.7920e-03, -5.5356e-02,
          7.4678e-02, -1.5239e-01,  1.2529e-01,  7.6549e-02, -4.1553e-02,
          5.0373e-02, -2.3034e-01,  5.0768e-02,  1.0484e-01,  2.1941e-01,
         -7.8278e-02,  3.4279e-02, -1.6932e-01,  1.2454e-01, -3.2087e-02,
         -1.4634e-01]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
193000 特征值优化 tensor(0.8375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4696e+00,  6.3952e-01, -1.1833e+00, -1.0135e+00,  1.3489e+00,
          1.4489e+00, -1.0719e+00,  2.0193e+00,  1.7194e+00,  5.8405e-01,
          4.0654e-01,  2.4529e-01,  1.3262e+00,  3.7988e-01, -2.2406e-01,
         -1.1184e-01,  9.7646e-01,  2.3467e-01, -5.0752e-01, -1.1346e+00,
         -1.7257e-01,  1.5319e-01,  5.2378e-01,  1.6743e+00, -7.1878e-01,
         -5.8823e-02,  9.6788e-02, -1.0783e-02,  1.5778e-02,  2.0594e-02,
         -1.2748e-01, -6.1468e-02,  1.8808e-01,  1.4732e-01, -4.2577e-01,
         -1.1596e-01, -2.3765e-01, -2.9071e-01, -4.9960e-02,  9.0564e-02,
          1.1148e-01,  5.1938e-02, -8.7766e-03,  1.8801e-01, -2.6611e-01,
         -1.4091e-01,  8.8387e-02, -8.2157e-02, -4.9898e-01,  1.8026e-01,
         -1.0746e-01,  4.3736e-01, -4.0510e-02,  1.5646e-01,  4.3505e-01,
          4.2855e-01, -1.1970e-01,  3.7394e-01,  1.3782e-01,  4.0009e-01,
         -2.2494e-01, -3.6830e-01,  1.8426e-01, -8.3373e-02, -1.3912e-02,
          3.7972e-01,  1.7657e-01,  4.9837e-02, -2.5912e-01,  3.3143e-01,
          2.4615e-01,  2.3297e-04,  1.2496e-01,  2.5423e-01, -3.1024e-02,
          3.0830e-01,  2.7109e-01,  1.0000e-02, -2.7476e-01, -5.7523e-02,
         -1.4371e-01,  4.8835e-02,  1.2487e-01,  3.1127e-02, -5.0928e-02,
          2.7257e-01, -9.4915e-02, -1.3039e-01, -2.8860e-02, -4.3133e-01,
          3.1918e-01,  4.2666e-01,  1.4679e-01, -5.2346e-04, -1.0088e-01,
         -8.3640e-02,  5.4267e-01,  3.5039e-02,  5.9528e-01,  8.5613e-02,
          1.4574e-01, -1.2331e-01, -2.2146e-01,  2.2469e-01, -3.4195e-01,
         -9.5690e-02, -1.0734e-01, -5.7246e-02, -1.9970e-01,  1.0091e-01,
         -1.5029e-01,  1.0897e-01, -1.6265e-01,  4.7041e-02, -1.6306e-01,
          6.9978e-02, -3.8303e-02,  1.6024e-01,  2.6679e-01,  1.7265e-01,
         -1.9900e-01, -7.7702e-02, -3.0757e-01, -1.0347e-01, -2.8471e-01,
          9.8163e-02,  4.4077e-02, -1.8987e-01,  1.7849e-01,  1.1727e-01,
         -3.1000e-02, -2.1462e-02,  1.0099e-01, -1.4961e-01, -2.8858e-02,
          1.1108e-01,  1.7822e-02, -4.7864e-02,  6.4873e-02, -9.8842e-02,
          1.4113e-01, -1.6241e-01,  6.5320e-02, -6.9646e-03, -7.0022e-02,
          7.7122e-02, -1.5160e-01,  1.1253e-01,  7.1217e-02, -3.2756e-02,
          3.9813e-02, -2.2392e-01,  6.3423e-02,  1.0652e-01,  2.2902e-01,
         -7.3371e-02,  2.9407e-02, -1.7430e-01,  1.2810e-01, -3.8457e-02,
         -1.4714e-01]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
194000 特征值优化 tensor(0.8256, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4760e+00,  6.4964e-01, -1.1766e+00, -1.0147e+00,  1.3523e+00,
          1.4295e+00, -1.0639e+00,  2.0129e+00,  1.7134e+00,  5.7733e-01,
          3.7866e-01,  2.4022e-01,  1.3360e+00,  3.8287e-01, -2.2733e-01,
         -1.0968e-01,  9.8288e-01,  2.5359e-01, -5.1584e-01, -1.1406e+00,
         -1.7555e-01,  1.4336e-01,  5.4034e-01,  1.6954e+00, -7.3077e-01,
         -5.6936e-02,  1.0530e-01, -3.0171e-02,  2.3099e-02,  2.8819e-02,
         -1.3724e-01, -5.4405e-02,  1.8939e-01,  1.3509e-01, -4.1197e-01,
         -1.1612e-01, -2.3692e-01, -2.8440e-01, -5.1980e-02,  8.9917e-02,
          1.0933e-01,  4.8140e-02, -6.2645e-03,  1.9040e-01, -2.7010e-01,
         -1.6935e-01,  1.0281e-01, -8.7572e-02, -4.8724e-01,  1.6911e-01,
         -1.0098e-01,  4.2904e-01, -4.2666e-02,  1.5640e-01,  4.3368e-01,
          4.3601e-01, -1.1330e-01,  3.7626e-01,  1.2639e-01,  3.8950e-01,
         -2.4105e-01, -3.7044e-01,  1.7848e-01, -8.9066e-02, -1.4957e-02,
          3.7392e-01,  1.7156e-01,  6.0155e-02, -2.4995e-01,  3.3594e-01,
          2.4117e-01,  1.2193e-02,  1.2922e-01,  2.5075e-01, -3.6261e-02,
          3.1312e-01,  2.6030e-01,  2.1320e-02, -2.6868e-01, -5.9866e-02,
         -1.4721e-01,  4.6940e-02,  1.1741e-01,  2.8974e-02, -4.4671e-02,
          2.7320e-01, -9.3736e-02, -1.3318e-01, -3.2016e-02, -4.3307e-01,
          3.2121e-01,  4.1570e-01,  1.7072e-01,  8.0864e-03, -9.8849e-02,
         -8.3629e-02,  5.4919e-01,  1.7224e-02,  5.9681e-01,  1.2040e-01,
          1.4745e-01, -1.1594e-01, -2.1325e-01,  2.1916e-01, -3.3869e-01,
         -9.8513e-02, -1.0826e-01, -6.5400e-02, -1.9536e-01,  1.0020e-01,
         -1.3839e-01,  1.1605e-01, -1.6250e-01,  4.3117e-02, -1.6703e-01,
          7.2764e-02, -4.3218e-02,  1.6080e-01,  2.6269e-01,  1.6619e-01,
         -1.9596e-01, -8.2469e-02, -3.1262e-01, -1.0774e-01, -2.8393e-01,
          9.2516e-02,  4.4624e-02, -1.8249e-01,  1.7688e-01,  1.1277e-01,
         -3.1973e-02, -2.6033e-02,  1.0187e-01, -1.4544e-01, -3.0228e-02,
          1.1457e-01,  1.0919e-03, -4.2718e-02,  6.7592e-02, -1.0618e-01,
          1.2614e-01, -1.4039e-01,  6.7663e-02, -8.5542e-03, -5.8800e-02,
          8.4695e-02, -1.5068e-01,  1.0685e-01,  7.5359e-02, -4.5321e-02,
          5.5442e-02, -2.2092e-01,  7.5866e-02,  1.1246e-01,  2.2167e-01,
         -8.2343e-02,  2.9211e-02, -1.7592e-01,  1.1427e-01, -4.1161e-02,
         -1.4950e-01]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
195000 特征值优化 tensor(0.7985, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4817e+00,  6.6400e-01, -1.1664e+00, -1.0070e+00,  1.3310e+00,
          1.4283e+00, -1.0615e+00,  2.0090e+00,  1.7037e+00,  5.6997e-01,
          3.8694e-01,  2.5489e-01,  1.3295e+00,  3.8180e-01, -2.0761e-01,
         -8.5063e-02,  1.0029e+00,  2.5403e-01, -5.2584e-01, -1.1373e+00,
         -1.8913e-01,  1.5335e-01,  5.5383e-01,  1.7050e+00, -7.3002e-01,
         -5.8177e-02,  1.1478e-01, -2.5971e-02,  1.4677e-02,  3.5707e-02,
         -1.5041e-01, -5.4343e-02,  1.7882e-01,  1.5688e-01, -4.0098e-01,
         -1.0996e-01, -2.3392e-01, -2.9319e-01, -5.7157e-02,  1.0223e-01,
          1.3244e-01,  4.9725e-02, -6.5996e-03,  2.0015e-01, -2.7957e-01,
         -1.7804e-01,  9.5984e-02, -1.0149e-01, -4.8599e-01,  1.5517e-01,
         -1.0307e-01,  4.3757e-01, -5.3760e-02,  1.5054e-01,  4.2124e-01,
          4.3073e-01, -1.0386e-01,  3.7174e-01,  1.3286e-01,  3.9189e-01,
         -2.4432e-01, -3.6044e-01,  1.8419e-01, -6.5307e-02, -1.6536e-02,
          3.8452e-01,  1.7110e-01,  6.5526e-02, -2.5172e-01,  3.3161e-01,
          2.4297e-01,  1.1376e-02,  1.2638e-01,  2.3722e-01, -2.5684e-02,
          3.3125e-01,  2.6750e-01,  4.1901e-02, -2.6006e-01, -6.2424e-02,
         -1.4318e-01,  4.2025e-02,  1.1395e-01,  3.4772e-02, -5.0791e-02,
          2.7975e-01, -9.6527e-02, -1.3761e-01, -1.5722e-02, -4.3090e-01,
          3.2357e-01,  4.2422e-01,  1.7209e-01,  8.0762e-03, -1.0792e-01,
         -8.7920e-02,  5.5467e-01,  4.2034e-02,  6.0760e-01,  1.1980e-01,
          1.3661e-01, -1.1315e-01, -2.1383e-01,  2.1510e-01, -3.5654e-01,
         -1.1132e-01, -1.2666e-01, -7.5038e-02, -2.0196e-01,  9.8439e-02,
         -1.3623e-01,  1.1005e-01, -1.6150e-01,  5.9068e-02, -1.7672e-01,
          8.5445e-02, -3.6873e-02,  1.6303e-01,  2.7441e-01,  1.5830e-01,
         -1.9757e-01, -7.6075e-02, -3.0579e-01, -1.1307e-01, -2.7673e-01,
          9.8323e-02,  4.7186e-02, -1.8174e-01,  1.7987e-01,  1.2855e-01,
         -2.7795e-02, -2.6283e-02,  9.5349e-02, -1.3664e-01, -2.4302e-02,
          1.1447e-01,  1.1094e-03, -5.1815e-02,  6.6404e-02, -1.0360e-01,
          1.2847e-01, -1.3224e-01,  8.3712e-02,  1.0388e-02, -4.6488e-02,
          8.0866e-02, -1.5598e-01,  1.1654e-01,  8.2989e-02, -3.6049e-02,
          4.6960e-02, -2.2124e-01,  5.4634e-02,  1.2081e-01,  2.2114e-01,
         -9.5927e-02,  2.6713e-02, -1.6452e-01,  1.1523e-01, -2.6676e-02,
         -1.4976e-01]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
196000 特征值优化 tensor(0.7979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4822e+00,  6.6554e-01, -1.1599e+00, -1.0100e+00,  1.3225e+00,
          1.4329e+00, -1.0709e+00,  1.9973e+00,  1.6964e+00,  5.6588e-01,
          3.8304e-01,  2.5669e-01,  1.3301e+00,  3.8437e-01, -2.1002e-01,
         -8.1933e-02,  9.8992e-01,  2.6291e-01, -5.2919e-01, -1.1292e+00,
         -2.0517e-01,  1.5389e-01,  5.5956e-01,  1.6902e+00, -7.3008e-01,
         -6.7316e-02,  1.2096e-01, -1.6908e-02,  9.7519e-03,  5.4432e-02,
         -1.5778e-01, -4.9759e-02,  1.8178e-01,  1.5964e-01, -4.0632e-01,
         -1.0109e-01, -2.3309e-01, -2.8277e-01, -4.9385e-02,  1.0331e-01,
          1.3806e-01,  5.0657e-02, -4.3256e-03,  1.9654e-01, -2.9621e-01,
         -1.6902e-01,  9.3357e-02, -1.0119e-01, -4.8027e-01,  1.6031e-01,
         -9.9070e-02,  4.4296e-01, -5.4445e-02,  1.4609e-01,  4.1466e-01,
          4.3443e-01, -1.1171e-01,  3.6663e-01,  1.3005e-01,  3.8185e-01,
         -2.4968e-01, -3.6207e-01,  1.8548e-01, -5.6681e-02, -9.2226e-03,
          3.9421e-01,  1.6935e-01,  7.8072e-02, -2.5170e-01,  3.3651e-01,
          2.3641e-01,  2.1690e-02,  1.3649e-01,  2.3168e-01, -3.4500e-02,
          3.3660e-01,  2.6190e-01,  3.5001e-02, -2.5875e-01, -6.0083e-02,
         -1.4673e-01,  4.4335e-02,  1.0915e-01,  3.8244e-02, -4.9194e-02,
          2.7890e-01, -9.6145e-02, -1.3567e-01, -2.5898e-02, -4.2346e-01,
          3.3014e-01,  4.4807e-01,  1.6647e-01, -7.0563e-03, -1.1379e-01,
         -9.0544e-02,  5.5006e-01,  4.9345e-02,  5.7269e-01,  1.1091e-01,
          1.6385e-01, -1.1053e-01, -2.0007e-01,  2.0603e-01, -3.5315e-01,
         -1.1694e-01, -1.1847e-01, -8.1303e-02, -2.3360e-01,  9.5067e-02,
         -1.3774e-01,  1.1737e-01, -1.7084e-01,  5.7635e-02, -1.8501e-01,
          8.4068e-02, -3.1613e-02,  1.5584e-01,  2.7625e-01,  1.6562e-01,
         -1.8524e-01, -7.4578e-02, -3.0753e-01, -1.2356e-01, -2.8170e-01,
          9.8708e-02,  5.4070e-02, -1.7477e-01,  1.7688e-01,  1.3316e-01,
         -2.4358e-02, -2.7285e-02,  9.9680e-02, -1.3492e-01, -2.9850e-02,
          1.2323e-01, -2.5202e-04, -5.6823e-02,  5.2677e-02, -1.0738e-01,
          1.3203e-01, -1.3666e-01,  8.9477e-02,  1.6750e-03, -5.9757e-02,
          7.3287e-02, -1.6282e-01,  1.2826e-01,  7.3751e-02, -3.7457e-02,
          4.5187e-02, -2.2984e-01,  4.8207e-02,  1.2168e-01,  2.2776e-01,
         -9.5337e-02,  1.9349e-02, -1.6184e-01,  1.2277e-01, -2.8259e-02,
         -1.5141e-01]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
197000 特征值优化 tensor(0.8118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5355,  0.6848, -1.1712, -1.0094,  1.3440,  1.4127, -1.0691,  1.9819,
          1.6862,  0.5474,  0.3644,  0.2402,  1.3572,  0.4028, -0.2284, -0.1112,
          0.9915,  0.2612, -0.5427, -1.1388, -0.1997,  0.1549,  0.5599,  1.6858,
         -0.7398, -0.0578,  0.0996, -0.0125,  0.0231,  0.0504, -0.1507, -0.0503,
          0.1876,  0.1422, -0.4065, -0.1085, -0.2292, -0.2694, -0.0304,  0.0976,
          0.1073,  0.0459, -0.0059,  0.1868, -0.2831, -0.1830,  0.0901, -0.0842,
         -0.4859,  0.1646, -0.0968,  0.4330, -0.0591,  0.1557,  0.4237,  0.4403,
         -0.1075,  0.3916,  0.1217,  0.3833, -0.2601, -0.3622,  0.1833, -0.0874,
         -0.0132,  0.3856,  0.1691,  0.0682, -0.2413,  0.3308,  0.2309,  0.0192,
          0.1373,  0.2434, -0.0246,  0.3138,  0.2393,  0.0321, -0.2873, -0.0624,
         -0.1462,  0.0479,  0.1032,  0.0275, -0.0395,  0.2737, -0.0954, -0.1423,
         -0.0378, -0.4331,  0.3217,  0.4097,  0.1525, -0.0114, -0.1004, -0.0845,
          0.5549,  0.0261,  0.6097,  0.1118,  0.1551, -0.1118, -0.2042,  0.2052,
         -0.3357, -0.1199, -0.1130, -0.0759, -0.2101,  0.1036, -0.1540,  0.1394,
         -0.1699,  0.0451, -0.1619,  0.0681, -0.0591,  0.1718,  0.2576,  0.1894,
         -0.1823, -0.0898, -0.3169, -0.1044, -0.2871,  0.0889,  0.0453, -0.1743,
          0.1831,  0.1167, -0.0223, -0.0260,  0.1114, -0.1524, -0.0351,  0.1164,
          0.0072, -0.0223,  0.0526, -0.1188,  0.1357, -0.1535,  0.0623, -0.0179,
         -0.0682,  0.0906, -0.1551,  0.1090,  0.0749, -0.0456,  0.0640, -0.2210,
          0.0691,  0.1128,  0.2349, -0.0887,  0.0272, -0.1707,  0.1229, -0.0364,
         -0.1469]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
198000 特征值优化 tensor(0.8043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5164e+00,  6.9322e-01, -1.1752e+00, -1.0061e+00,  1.3342e+00,
          1.4141e+00, -1.0401e+00,  1.9918e+00,  1.6743e+00,  5.4381e-01,
          3.6735e-01,  2.6075e-01,  1.3402e+00,  3.9658e-01, -2.1153e-01,
         -9.1456e-02,  1.0111e+00,  2.6021e-01, -5.4468e-01, -1.1329e+00,
         -1.8628e-01,  1.5504e-01,  5.7317e-01,  1.6956e+00, -7.1827e-01,
         -5.8911e-02,  1.0135e-01, -1.2397e-02,  3.0185e-02,  4.1680e-02,
         -1.6351e-01, -6.2941e-02,  1.7762e-01,  1.4212e-01, -3.8853e-01,
         -1.1082e-01, -2.3411e-01, -2.9708e-01, -4.2383e-02,  1.0772e-01,
          1.2681e-01,  5.2470e-02, -9.7182e-03,  1.9486e-01, -2.9072e-01,
         -1.8477e-01,  9.9794e-02, -9.4795e-02, -4.7269e-01,  1.5168e-01,
         -9.1678e-02,  4.2480e-01, -6.6209e-02,  1.4282e-01,  4.0751e-01,
          4.4432e-01, -1.1225e-01,  3.8189e-01,  1.2076e-01,  3.8440e-01,
         -2.5574e-01, -3.6698e-01,  1.6376e-01, -8.9022e-02, -9.3466e-03,
          3.8752e-01,  1.7620e-01,  6.1877e-02, -2.5416e-01,  3.3937e-01,
          2.3471e-01,  1.6943e-02,  1.3403e-01,  2.3212e-01, -2.5098e-02,
          3.3172e-01,  2.5523e-01,  4.4681e-02, -2.6694e-01, -6.3261e-02,
         -1.4023e-01,  3.6614e-02,  1.1443e-01,  3.1190e-02, -5.0888e-02,
          2.8200e-01, -9.5821e-02, -1.2749e-01, -2.6328e-02, -4.4312e-01,
          3.3407e-01,  4.2594e-01,  1.7254e-01,  2.3085e-03, -1.0187e-01,
         -8.5592e-02,  5.4055e-01,  2.4085e-02,  6.1083e-01,  1.1654e-01,
          1.3708e-01, -1.2004e-01, -2.0872e-01,  2.0591e-01, -3.5251e-01,
         -1.1994e-01, -1.2223e-01, -6.9331e-02, -2.0880e-01,  1.1055e-01,
         -1.3529e-01,  1.0925e-01, -1.5607e-01,  5.0358e-02, -1.6979e-01,
          7.4584e-02, -5.4160e-02,  1.5960e-01,  2.7314e-01,  1.7116e-01,
         -2.0180e-01, -8.2275e-02, -3.0124e-01, -1.0779e-01, -2.8332e-01,
          9.0603e-02,  4.3147e-02, -1.8445e-01,  1.7875e-01,  1.3480e-01,
         -2.3697e-02, -2.4015e-02,  1.0861e-01, -1.4792e-01, -2.4652e-02,
          1.1338e-01,  5.2030e-03, -4.8349e-02,  5.9539e-02, -1.2113e-01,
          1.3704e-01, -1.3998e-01,  8.2620e-02,  4.7259e-03, -3.8918e-02,
          9.2005e-02, -1.5868e-01,  1.1938e-01,  8.4013e-02, -3.5083e-02,
          5.8508e-02, -2.1652e-01,  6.1477e-02,  1.1784e-01,  2.1927e-01,
         -9.4861e-02,  1.8720e-02, -1.6236e-01,  1.1548e-01, -3.7853e-02,
         -1.5918e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
199000 特征值优化 tensor(0.8010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4985,  0.7078, -1.1914, -1.0099,  1.3407,  1.4241, -1.0299,  1.9820,
          1.6762,  0.5527,  0.3680,  0.2690,  1.3363,  0.3979, -0.2040, -0.0905,
          1.0034,  0.2654, -0.5381, -1.1287, -0.1868,  0.1540,  0.5797,  1.6999,
         -0.7200, -0.0682,  0.0952, -0.0061,  0.0324,  0.0402, -0.1583, -0.0698,
          0.1968,  0.1702, -0.3820, -0.1046, -0.2331, -0.2916, -0.0394,  0.1094,
          0.1331,  0.0509, -0.0085,  0.1929, -0.2927, -0.1725,  0.1069, -0.1094,
         -0.4703,  0.1539, -0.1023,  0.4199, -0.0689,  0.1442,  0.4087,  0.4435,
         -0.1069,  0.3802,  0.1119,  0.3899, -0.2473, -0.3686,  0.1496, -0.0883,
         -0.0085,  0.3868,  0.1834,  0.0430, -0.2488,  0.3364,  0.2349,  0.0187,
          0.1342,  0.2324, -0.0291,  0.3364,  0.2512,  0.0466, -0.2588, -0.0636,
         -0.1411,  0.0417,  0.1135,  0.0445, -0.0488,  0.2822, -0.0932, -0.1245,
         -0.0334, -0.4431,  0.3250,  0.4313,  0.1747,  0.0031, -0.1040, -0.0827,
          0.5430,  0.0079,  0.6167,  0.1357,  0.1158, -0.1255, -0.1908,  0.2002,
         -0.3538, -0.1230, -0.1217, -0.0738, -0.2209,  0.1071, -0.1365,  0.1109,
         -0.1548,  0.0560, -0.1687,  0.0714, -0.0536,  0.1610,  0.2747,  0.1856,
         -0.1971, -0.0894, -0.3103, -0.1104, -0.2825,  0.0863,  0.0405, -0.1803,
          0.1747,  0.1344, -0.0243, -0.0219,  0.1097, -0.1481, -0.0287,  0.1257,
          0.0089, -0.0415,  0.0646, -0.1205,  0.1393, -0.1452,  0.0894,  0.0035,
         -0.0406,  0.0933, -0.1556,  0.1214,  0.0802, -0.0227,  0.0644, -0.2136,
          0.0608,  0.1224,  0.2233, -0.0943,  0.0313, -0.1655,  0.1106, -0.0363,
         -0.1582]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
200000 特征值优化 tensor(0.8143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4814e+00,  6.9780e-01, -1.1806e+00, -1.0127e+00,  1.3217e+00,
          1.4223e+00, -1.0548e+00,  1.9663e+00,  1.6673e+00,  5.4915e-01,
          3.5288e-01,  2.4537e-01,  1.3449e+00,  4.0580e-01, -2.1996e-01,
         -1.0080e-01,  1.0075e+00,  2.6252e-01, -5.5480e-01, -1.1308e+00,
         -1.9120e-01,  1.5486e-01,  5.7636e-01,  1.6910e+00, -7.4624e-01,
         -5.6675e-02,  6.9622e-02,  6.3326e-03,  3.3983e-02,  4.5229e-02,
         -1.6166e-01, -6.1485e-02,  1.9309e-01,  1.4111e-01, -3.8592e-01,
         -9.0536e-02, -2.4039e-01, -2.8547e-01, -3.6483e-02,  9.7644e-02,
          1.1137e-01,  4.6104e-02, -5.5030e-03,  1.8260e-01, -3.0289e-01,
         -1.8342e-01,  9.4381e-02, -1.0286e-01, -4.8892e-01,  1.5268e-01,
         -9.9389e-02,  4.2216e-01, -4.9785e-02,  1.5719e-01,  4.0760e-01,
          4.5101e-01, -1.2622e-01,  3.9424e-01,  1.1971e-01,  3.7869e-01,
         -2.5122e-01, -3.7263e-01,  1.5290e-01, -9.0537e-02, -1.4284e-02,
          3.8555e-01,  1.7962e-01,  6.4842e-02, -2.4681e-01,  3.3925e-01,
          2.3871e-01,  2.3908e-02,  1.3655e-01,  2.3229e-01, -2.1153e-02,
          3.2744e-01,  2.4717e-01,  4.4619e-02, -2.6447e-01, -5.6110e-02,
         -1.3982e-01,  3.9039e-02,  9.9876e-02,  3.4919e-02, -2.5535e-02,
          2.7491e-01, -8.8115e-02, -1.2126e-01, -4.4967e-02, -4.5008e-01,
          3.3312e-01,  4.3397e-01,  1.5756e-01,  1.9696e-03, -9.8245e-02,
         -8.2568e-02,  5.3904e-01,  1.9546e-02,  6.0966e-01,  1.1847e-01,
          1.2920e-01, -1.2061e-01, -2.1137e-01,  2.0855e-01, -3.2888e-01,
         -1.0314e-01, -1.1128e-01, -6.7851e-02, -2.2660e-01,  1.0505e-01,
         -1.3600e-01,  1.3243e-01, -1.5464e-01,  3.1169e-02, -1.5858e-01,
          6.8200e-02, -5.5312e-02,  1.7184e-01,  2.5914e-01,  1.7874e-01,
         -1.9883e-01, -8.2622e-02, -3.0715e-01, -1.0340e-01, -2.8668e-01,
          8.9775e-02,  4.4257e-02, -1.8299e-01,  1.8198e-01,  1.2797e-01,
         -2.4699e-02, -2.3468e-02,  1.0831e-01, -1.5141e-01, -3.8212e-02,
          1.1091e-01,  1.5879e-03, -3.5974e-02,  4.8021e-02, -1.1541e-01,
          1.2916e-01, -1.4288e-01,  8.1792e-02,  6.5247e-03, -4.8483e-02,
          8.9038e-02, -1.3888e-01,  1.1083e-01,  8.2829e-02, -2.5213e-02,
          4.7871e-02, -2.3013e-01,  7.5601e-02,  1.1976e-01,  2.2283e-01,
         -9.2262e-02,  2.0340e-02, -1.7494e-01,  1.1436e-01, -4.3963e-02,
         -1.6244e-01]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
201000 特征值优化 tensor(0.8078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4749e+00,  7.2348e-01, -1.1697e+00, -1.0104e+00,  1.3340e+00,
          1.4110e+00, -1.0552e+00,  1.9866e+00,  1.6638e+00,  5.3730e-01,
          3.3544e-01,  2.5920e-01,  1.3477e+00,  3.9443e-01, -2.1805e-01,
         -1.0212e-01,  1.0017e+00,  2.7334e-01, -5.4955e-01, -1.1408e+00,
         -2.0477e-01,  1.5418e-01,  5.7277e-01,  1.6831e+00, -7.5583e-01,
         -6.2032e-02,  8.7968e-02,  9.5920e-04,  2.1494e-02,  5.1576e-02,
         -1.5960e-01, -6.0416e-02,  1.8307e-01,  1.5616e-01, -3.8795e-01,
         -1.0226e-01, -2.2874e-01, -2.7357e-01, -2.6946e-02,  8.6132e-02,
          1.1954e-01,  5.0979e-02, -1.0463e-02,  1.8975e-01, -2.9731e-01,
         -1.9220e-01,  8.4638e-02, -1.0614e-01, -4.9557e-01,  1.5263e-01,
         -1.0219e-01,  4.2321e-01, -4.1152e-02,  1.6238e-01,  4.1583e-01,
          4.4988e-01, -1.0607e-01,  3.8458e-01,  1.2583e-01,  3.8284e-01,
         -2.5664e-01, -3.6665e-01,  1.7029e-01, -7.6816e-02, -1.6180e-02,
          3.8615e-01,  1.7727e-01,  4.7782e-02, -2.5194e-01,  3.3669e-01,
          2.3253e-01,  2.3421e-02,  1.4089e-01,  2.3951e-01, -1.5658e-02,
          3.1886e-01,  2.5230e-01,  4.7420e-02, -2.8082e-01, -6.2657e-02,
         -1.4242e-01,  4.5677e-02,  9.9287e-02,  4.0850e-02, -4.0731e-02,
          2.8008e-01, -9.6887e-02, -1.2211e-01, -5.9513e-02, -4.3582e-01,
          3.3118e-01,  4.2540e-01,  1.5692e-01, -2.0422e-03, -9.6582e-02,
         -8.7229e-02,  5.4301e-01,  3.7462e-02,  6.0379e-01,  1.2437e-01,
          1.2970e-01, -1.1384e-01, -2.0264e-01,  2.0291e-01, -3.3522e-01,
         -1.1007e-01, -1.2920e-01, -7.9791e-02, -2.2296e-01,  1.0818e-01,
         -1.4355e-01,  1.2032e-01, -1.5884e-01,  4.8344e-02, -1.6338e-01,
          8.1192e-02, -5.5261e-02,  1.5662e-01,  2.7110e-01,  1.8266e-01,
         -1.8754e-01, -8.8835e-02, -3.0466e-01, -1.0363e-01, -2.7512e-01,
          8.7612e-02,  6.2786e-02, -1.7426e-01,  1.8410e-01,  1.2749e-01,
         -2.2256e-02, -2.1601e-02,  1.1284e-01, -1.6249e-01, -3.5537e-02,
          1.1367e-01,  1.7421e-02, -2.9038e-02,  3.8401e-02, -1.1256e-01,
          1.3180e-01, -1.4367e-01,  8.0647e-02,  2.8710e-03, -5.7181e-02,
          9.1958e-02, -1.6164e-01,  1.1130e-01,  7.7768e-02, -3.0421e-02,
          5.9276e-02, -2.1159e-01,  6.5894e-02,  1.2438e-01,  2.2992e-01,
         -9.0208e-02,  2.3908e-02, -1.7866e-01,  1.1356e-01, -3.6295e-02,
         -1.5246e-01]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
202000 特征值优化 tensor(0.8123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4709e+00,  7.0696e-01, -1.1700e+00, -1.0135e+00,  1.3335e+00,
          1.4106e+00, -1.0671e+00,  1.9805e+00,  1.6713e+00,  5.5014e-01,
          3.3142e-01,  2.3706e-01,  1.3520e+00,  3.9493e-01, -2.2450e-01,
         -9.3445e-02,  1.0153e+00,  2.6581e-01, -5.5726e-01, -1.1439e+00,
         -2.1375e-01,  1.4598e-01,  5.6712e-01,  1.6831e+00, -7.6830e-01,
         -5.4674e-02,  7.1648e-02,  8.2192e-03,  2.4565e-02,  4.3850e-02,
         -1.6945e-01, -3.9294e-02,  1.9294e-01,  1.4362e-01, -4.0486e-01,
         -9.5653e-02, -2.3219e-01, -2.7920e-01, -4.2649e-02,  8.1049e-02,
          1.2636e-01,  4.5915e-02, -6.6157e-03,  1.8236e-01, -2.9916e-01,
         -1.9027e-01,  8.9416e-02, -1.1100e-01, -4.9608e-01,  1.6711e-01,
         -9.8341e-02,  4.1640e-01, -4.9838e-02,  1.5186e-01,  4.1414e-01,
          4.5153e-01, -1.1897e-01,  3.9422e-01,  1.2612e-01,  3.7943e-01,
         -2.5833e-01, -3.6617e-01,  1.6953e-01, -8.3014e-02, -1.8123e-02,
          3.7584e-01,  1.8025e-01,  6.0570e-02, -2.4740e-01,  3.4451e-01,
          2.3312e-01,  3.2893e-02,  1.3193e-01,  2.2857e-01, -1.8074e-02,
          3.2193e-01,  2.4719e-01,  3.1774e-02, -2.7120e-01, -6.6434e-02,
         -1.3829e-01,  4.1156e-02,  8.5691e-02,  3.0385e-02, -2.4447e-02,
          2.8279e-01, -1.0307e-01, -1.2547e-01, -7.1614e-02, -4.3284e-01,
          3.1984e-01,  4.4057e-01,  1.6767e-01,  2.8973e-03, -9.7714e-02,
         -8.4889e-02,  5.3721e-01,  2.8986e-02,  6.0303e-01,  1.4187e-01,
          1.2053e-01, -1.1230e-01, -2.0224e-01,  2.1770e-01, -3.0743e-01,
         -1.1734e-01, -1.2753e-01, -6.7479e-02, -2.3841e-01,  1.0510e-01,
         -1.3636e-01,  1.3204e-01, -1.6521e-01,  3.3349e-02, -1.6192e-01,
          8.6141e-02, -4.4499e-02,  1.7145e-01,  2.5649e-01,  1.7914e-01,
         -1.9053e-01, -8.2455e-02, -3.0420e-01, -1.2046e-01, -2.8043e-01,
          8.7815e-02,  5.4306e-02, -1.7468e-01,  1.8085e-01,  1.2815e-01,
         -1.8811e-02, -2.9456e-02,  1.0836e-01, -1.4923e-01, -3.9660e-02,
          1.1392e-01, -1.9464e-03, -2.9950e-02,  3.6847e-02, -1.2104e-01,
          1.3203e-01, -1.3696e-01,  7.4825e-02,  2.1765e-03, -4.9899e-02,
          8.4731e-02, -1.4053e-01,  1.1127e-01,  7.5802e-02, -3.0797e-02,
          4.7798e-02, -2.1943e-01,  7.6449e-02,  1.2818e-01,  2.2864e-01,
         -1.0303e-01,  1.4309e-02, -1.6927e-01,  1.0298e-01, -3.6229e-02,
         -1.4983e-01]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
203000 特征值优化 tensor(0.7961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4825e+00,  7.1654e-01, -1.1599e+00, -1.0089e+00,  1.2972e+00,
          1.4212e+00, -1.0423e+00,  1.9975e+00,  1.6799e+00,  5.4656e-01,
          3.4385e-01,  2.6373e-01,  1.3373e+00,  3.8864e-01, -2.1392e-01,
         -9.8769e-02,  9.9318e-01,  2.6157e-01, -5.6045e-01, -1.1520e+00,
         -2.1181e-01,  1.5492e-01,  5.6181e-01,  1.6883e+00, -7.5679e-01,
         -4.8747e-02,  1.0682e-01,  1.3360e-03,  3.1395e-02,  5.3315e-02,
         -1.6044e-01, -4.3375e-02,  1.8352e-01,  1.5540e-01, -4.0297e-01,
         -9.3220e-02, -2.4230e-01, -2.8875e-01, -4.7793e-02,  8.3894e-02,
          1.4049e-01,  4.7094e-02, -7.7716e-03,  2.1071e-01, -3.0066e-01,
         -1.8237e-01,  8.6651e-02, -9.9549e-02, -4.8379e-01,  1.6782e-01,
         -1.0374e-01,  4.1260e-01, -6.5184e-02,  1.3940e-01,  4.1816e-01,
          4.5081e-01, -1.0906e-01,  3.6800e-01,  1.1095e-01,  3.8503e-01,
         -2.5654e-01, -3.6762e-01,  1.6040e-01, -1.1041e-01, -2.9753e-02,
          3.5752e-01,  1.6428e-01,  5.3993e-02, -2.4397e-01,  3.4407e-01,
          2.3965e-01,  2.2330e-02,  1.2131e-01,  2.4673e-01, -1.6686e-02,
          3.3588e-01,  2.4652e-01,  2.1507e-02, -2.6308e-01, -6.8407e-02,
         -1.4445e-01,  3.8084e-02,  9.8432e-02,  1.3627e-02, -4.4365e-02,
          2.8379e-01, -9.1297e-02, -1.2202e-01, -7.6539e-02, -4.3445e-01,
          3.1159e-01,  4.5491e-01,  1.9030e-01,  1.0081e-02, -9.7431e-02,
         -8.6427e-02,  5.4388e-01,  2.2515e-02,  6.0492e-01,  1.2513e-01,
          1.0553e-01, -1.0227e-01, -2.0257e-01,  2.2017e-01, -3.2777e-01,
         -1.2083e-01, -1.6401e-01, -7.2884e-02, -2.6458e-01,  1.0823e-01,
         -1.2686e-01,  1.2126e-01, -1.4592e-01,  5.9667e-02, -1.8686e-01,
          8.5988e-02, -4.4345e-02,  1.5243e-01,  2.6619e-01,  1.7367e-01,
         -2.0101e-01, -8.6380e-02, -3.1610e-01, -1.1964e-01, -2.7412e-01,
          8.8735e-02,  4.4306e-02, -1.6918e-01,  1.7890e-01,  1.4134e-01,
         -1.5956e-02, -2.9966e-02,  1.1340e-01, -1.3627e-01, -3.2106e-02,
          1.1862e-01, -2.1276e-02, -2.2308e-02,  6.3144e-02, -1.2261e-01,
          1.4365e-01, -1.3206e-01,  6.0679e-02, -1.1735e-02, -3.4885e-02,
          8.2731e-02, -1.6549e-01,  1.1584e-01,  8.2231e-02, -1.9802e-02,
          4.5419e-02, -2.1339e-01,  5.0266e-02,  1.3264e-01,  2.3061e-01,
         -9.1493e-02,  2.2022e-02, -1.8515e-01,  1.0062e-01, -2.4640e-02,
         -1.5763e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
204000 特征值优化 tensor(27.3054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.7532e-01,  1.6185e+00,  4.6535e-01, -1.0733e+00, -3.0623e-02,
          9.3862e-01,  3.0263e-01,  1.0501e+00,  6.5300e-01, -3.2195e-01,
          1.4348e-01, -1.8377e+00, -8.3452e-01, -7.7058e-01, -7.3553e-01,
         -7.1718e-01,  1.0178e-01,  1.0585e+00,  2.6972e-01, -1.0515e-01,
         -3.2233e-01,  5.6700e-01,  1.4077e+00, -1.8220e+00,  1.3037e+00,
         -9.5707e-02,  2.5274e-01,  4.4055e-01,  7.7471e-01,  3.9707e-01,
          8.0260e-01, -1.5798e+00,  2.8612e-01, -5.7978e-01,  1.4853e+00,
         -8.0665e-01, -1.9065e-01,  4.6424e-01,  4.3184e-01,  4.9785e-01,
          3.3865e-01,  2.3117e-01,  5.4697e-01, -8.7105e-01,  2.5177e-01,
          4.7144e-01, -4.2812e-02,  1.7866e-01,  4.6433e-01, -4.6306e-01,
         -9.4930e-01, -5.8659e-02, -4.1966e-01, -9.4840e-01,  3.2235e-01,
         -5.6551e-03,  6.0892e-01,  3.6868e-01,  7.1845e-02,  1.8967e-01,
          1.9361e-01, -1.2522e+00, -9.0550e-01,  1.9511e-01, -1.2124e+00,
          8.1385e-01,  1.3174e+00,  1.4289e-01, -1.3600e+00,  5.8155e-01,
          3.4032e-01,  3.7037e-01,  6.9504e-01,  3.3884e-01,  2.2760e-01,
          5.2567e-01,  7.7553e-01,  2.1442e+00, -4.6398e-01,  8.1535e-01,
          2.3382e-01, -8.6643e-01, -4.3015e-02, -2.1813e-01, -1.2927e-01,
         -2.9532e-02,  7.2919e-01, -8.9229e-01, -2.5334e-01, -3.6722e-01,
          1.3282e-01, -2.6467e-01, -4.5428e-01, -8.2773e-03, -1.9564e+00,
          3.0695e-01, -1.1563e+00, -3.1694e-01,  4.8571e-02, -1.8665e-01,
         -1.2971e+00, -8.8320e-01,  6.2420e-01, -1.5108e-01,  3.9810e-01,
          4.9256e-01, -6.3359e-01,  8.2029e-02,  6.5758e-01,  9.5101e-01,
         -4.9162e-01,  2.2236e-01, -3.0279e-01,  4.1589e-01, -2.5763e-01,
          1.0913e+00, -2.6776e-01, -5.7883e-01,  2.5425e-01, -5.3030e-01,
          5.8633e-01, -2.0267e-01,  9.2451e-02, -3.8074e-02,  9.8361e-02,
          2.2664e-01, -1.5433e+00, -8.1513e-01, -5.3870e-02, -4.4335e-01,
          2.2214e-01,  1.0378e-04, -7.2756e-01, -8.7460e-01, -8.5216e-01,
          7.0047e-01,  1.1040e+00, -1.4375e+00, -5.7397e-01,  4.8329e-01,
          1.0862e+00,  2.6643e-02,  1.1938e+00,  1.2545e+00, -5.8702e-01,
         -2.2668e-01, -2.5646e-01,  7.0980e-02, -1.3131e+00, -8.2796e-01,
         -6.6907e-01,  3.3806e-01,  1.1020e+00, -2.4857e-01,  6.3528e-01,
         -1.3039e+00,  4.6385e-01, -2.9955e-01, -9.7115e-02,  5.9427e-01,
         -1.0895e+00]], device='cuda:0') tensor(0.2198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
205000 特征值优化 tensor(3.2751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5937e-01,  1.6857e+00,  5.6936e-01, -1.3444e+00,  8.9314e-01,
          1.3436e+00,  3.9761e-01,  4.5803e-01, -6.6049e-02, -5.1943e-01,
          3.4444e-01, -7.2626e-01, -3.0415e-01, -6.3235e-01, -2.7918e-01,
         -9.0853e-03, -8.5308e-03,  1.0092e+00,  5.7976e-02, -2.3532e-01,
          1.5152e-01,  4.2672e-01,  7.4801e-01, -1.0415e+00,  4.8891e-01,
         -7.2580e-02, -1.0158e-01,  4.0356e-01, -4.0402e-03,  2.0389e-02,
          1.2253e-01, -6.7678e-01,  5.2205e-01, -2.5398e-01,  6.5864e-01,
         -1.4089e-01,  4.3358e-01,  1.7180e-01, -1.3543e-01,  3.2119e-01,
         -1.0959e-01,  6.8676e-02,  1.2613e-01,  7.6061e-02, -3.2763e-01,
         -1.6150e-01,  2.4297e-01,  1.5791e-01,  3.3850e-02, -3.3349e-01,
         -1.7660e-01, -1.1479e-01, -2.3473e-01, -3.6243e-01,  2.1808e-01,
         -1.3074e-01,  1.4352e-01,  3.2489e-01,  8.8320e-02,  9.2227e-02,
         -6.1137e-02, -4.9753e-01, -2.9490e-01,  1.8916e-01, -4.1060e-01,
          1.5153e-01,  3.5314e-01, -7.4271e-03, -4.8617e-01,  1.5247e-01,
          1.1612e-01, -7.6709e-02,  1.6403e-01,  2.3021e-01,  3.8985e-02,
         -1.9422e-01,  1.5684e-01,  9.4188e-01,  3.8734e-02,  2.3802e-01,
         -1.3728e-01, -6.4629e-02,  1.5148e-01, -1.3006e-01, -3.7933e-01,
          9.5431e-02,  2.2027e-01,  6.9683e-03, -2.0644e-01,  2.5977e-01,
          3.9707e-01, -2.5084e-01, -1.5408e-01, -9.6665e-02, -7.7366e-01,
         -1.9240e-01, -2.2790e-01, -1.7043e-01,  3.4658e-01, -1.5026e-01,
         -4.4587e-01,  5.7484e-02,  8.0519e-01, -5.0332e-02, -9.5043e-02,
          1.7638e-01,  1.8533e-01,  8.3515e-03, -5.6838e-02,  3.5410e-01,
         -1.1966e-01,  1.6065e-01,  9.0836e-02, -2.8790e-02, -2.3920e-02,
          4.3631e-01, -9.9597e-02, -1.0314e-01,  1.7637e-01, -3.0096e-02,
          2.0835e-01, -9.9108e-02, -1.4181e-01,  7.0927e-02,  1.2316e-01,
         -4.1629e-02, -7.1977e-01, -3.4959e-01, -5.6038e-02, -6.7006e-02,
         -4.3172e-02,  1.4127e-01, -1.3564e-01, -2.9559e-01, -8.6175e-02,
          1.6311e-01,  2.8274e-01, -5.6712e-01, -1.3637e-01,  2.2713e-01,
          2.4655e-01, -1.4192e-01,  3.1489e-01,  2.4857e-01, -1.3376e-03,
         -5.3619e-02, -6.5813e-02,  2.1760e-02, -4.6104e-01, -1.5378e-01,
         -3.0996e-02, -2.5642e-01,  2.8932e-01,  1.5564e-02, -6.3860e-02,
         -2.1051e-01,  9.9358e-02,  2.9619e-02,  2.7729e-02, -5.2789e-02,
         -2.2451e-01]], device='cuda:0') tensor(0.2219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
206000 特征值优化 tensor(0.8281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6412,  1.8807, -0.3385, -1.1520,  1.3410,  1.8298,  0.7140,  1.4087,
         -0.0804, -0.3289,  0.2081, -0.6595, -0.3394, -0.6030, -0.3624,  0.5968,
          0.3085,  1.1755, -0.0037,  0.0832, -0.0717,  0.3285,  0.7557, -0.9122,
          0.3203,  0.1064, -0.5281,  0.4072,  0.0070,  0.1266, -0.1291, -0.4365,
          0.6296,  0.0218,  0.4657, -0.0214,  0.5429,  0.2485, -0.3016,  0.3820,
          0.0253,  0.0528,  0.0334,  0.1881, -0.2333, -0.1292,  0.0305,  0.1907,
          0.0315, -0.4343,  0.0986, -0.2815, -0.5263, -0.3259,  0.2957, -0.4008,
          0.0457,  0.2734,  0.0225, -0.0776,  0.0030, -0.5399, -0.2468,  0.2954,
         -0.1481,  0.0610,  0.2738, -0.2632, -0.4968,  0.1620,  0.1485, -0.1935,
          0.1742,  0.2225,  0.1085, -0.1377,  0.0364,  0.5288,  0.0359,  0.2614,
         -0.1836,  0.1075,  0.0305,  0.1255, -0.2491, -0.0233,  0.1469,  0.3525,
         -0.0973,  0.0622,  0.3288, -0.5229, -0.3733, -0.1746, -0.2078, -0.2498,
          0.1401, -0.0115,  0.0295, -0.2105, -0.1230,  0.0593,  0.6647, -0.2875,
         -0.1689,  0.1052, -0.0272,  0.0641, -0.3602,  0.2747, -0.0191,  0.1501,
          0.1240,  0.0214,  0.1391,  0.1808, -0.1251,  0.0350,  0.0436, -0.0184,
          0.1408,  0.0782, -0.0404,  0.1134,  0.0346, -0.1081, -0.4704, -0.4346,
          0.0829,  0.1105, -0.1065,  0.0494, -0.1104, -0.2498, -0.1241,  0.0691,
         -0.0155, -0.0622, -0.0277,  0.2170,  0.0345,  0.0853,  0.0800,  0.0160,
          0.0502, -0.1762, -0.0957, -0.0202, -0.2756, -0.0057, -0.0884, -0.2173,
          0.2314, -0.0604, -0.1311,  0.0401,  0.0973,  0.1473, -0.0849,  0.0023,
         -0.1503]], device='cuda:0') tensor(0.2207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
207000 特征值优化 tensor(0.7324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.9446e-01,  1.7060e+00, -6.4896e-01, -1.0880e+00,  1.5198e+00,
          1.9421e+00,  1.0153e+00,  1.7236e+00,  2.6239e-01, -3.1513e-01,
          1.8345e-01, -7.0497e-01, -3.9419e-01, -7.5777e-01, -3.6418e-01,
          7.9939e-01,  3.1219e-01,  1.1465e+00, -1.7840e-02,  3.9370e-02,
         -1.3574e-01,  2.9553e-01,  7.0702e-01, -9.0452e-01,  3.5326e-01,
          3.2503e-02, -5.1327e-01,  4.0091e-01, -4.7575e-02,  1.5090e-01,
         -1.5072e-01, -3.6282e-01,  5.5547e-01,  6.6794e-02,  4.5072e-01,
         -5.6514e-03,  5.4385e-01,  2.8602e-01, -3.2592e-01,  3.2268e-01,
          2.0153e-02,  6.0702e-02,  2.9613e-02,  1.2225e-01, -2.6131e-01,
         -7.6244e-02,  1.4233e-02,  2.8279e-01, -4.9533e-02, -5.3814e-01,
          1.3326e-01, -3.4185e-01, -5.5354e-01, -3.2726e-01,  2.5228e-01,
         -4.6221e-01,  3.5951e-02,  3.3541e-01,  1.3163e-01, -1.4112e-01,
          9.4443e-02, -5.5590e-01, -2.2041e-01,  2.9309e-01, -5.6517e-02,
         -4.5223e-03,  2.2265e-01, -2.3008e-01, -5.2519e-01,  1.5219e-01,
          1.9317e-01, -2.3870e-01,  1.6013e-01,  2.1898e-01,  1.6451e-01,
         -1.8232e-01,  7.3885e-03,  4.3068e-01,  4.7838e-02,  2.7137e-01,
         -1.5883e-01,  1.2511e-01,  3.6955e-02,  6.2723e-02, -1.9033e-01,
         -6.5791e-02,  5.6802e-02,  3.6013e-01, -4.9239e-02,  7.9914e-02,
          3.0269e-01, -5.4884e-01, -1.9730e-01, -8.9593e-02, -1.9236e-01,
         -1.8100e-01,  1.2543e-01, -7.3436e-02,  9.9026e-02, -1.3806e-01,
         -2.8521e-02, -1.3367e-01,  6.1862e-01, -3.1636e-01, -2.0030e-01,
          1.0931e-01, -1.1811e-02,  1.8184e-01, -2.2824e-01,  2.7058e-01,
         -6.9477e-03,  1.2487e-01,  1.0094e-01,  4.3138e-02,  1.2944e-01,
          1.5851e-01, -1.4914e-01,  3.8223e-02, -7.9498e-03,  2.1446e-03,
          1.2398e-01,  3.8400e-02,  2.5894e-03,  8.5526e-02,  7.3012e-02,
         -9.8045e-02, -3.7869e-01, -3.7156e-01,  1.1504e-01,  1.5149e-01,
         -4.3876e-02,  3.2502e-02, -1.3743e-01, -2.5938e-01, -6.5679e-02,
          2.7299e-02, -1.2819e-03, -1.0869e-02, -6.9230e-02,  2.3278e-01,
          3.0097e-02,  1.0963e-01, -1.6645e-02, -4.9875e-02, -9.8214e-04,
         -2.1412e-01, -1.1764e-01, -4.4097e-02, -2.1245e-01, -7.5136e-03,
         -6.0131e-02, -1.9405e-01,  2.5372e-01, -6.6942e-02, -1.6534e-01,
          4.0076e-02,  1.3645e-01,  1.9435e-01, -1.1337e-01,  5.4715e-02,
         -1.3411e-01]], device='cuda:0') tensor(0.2129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
208000 特征值优化 tensor(0.7055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.8657e-01,  1.5108e+00, -8.2045e-01, -1.0654e+00,  1.6976e+00,
          2.0350e+00,  1.1878e+00,  1.9003e+00,  4.8889e-01, -3.1394e-01,
          9.7229e-02, -7.7038e-01, -3.5905e-01, -8.3457e-01, -4.0850e-01,
          9.3782e-01,  2.6642e-01,  1.0916e+00,  3.1532e-03,  5.3472e-02,
         -1.3585e-01,  3.4792e-01,  7.4026e-01, -9.0184e-01,  3.5299e-01,
          4.6494e-03, -4.5414e-01,  3.2780e-01, -9.6497e-02,  1.4877e-01,
         -1.3754e-01, -3.3278e-01,  5.5084e-01,  8.6830e-02,  4.7006e-01,
          3.0069e-02,  5.4366e-01,  2.9732e-01, -2.7857e-01,  2.6641e-01,
         -1.9766e-02,  6.0801e-02,  2.3292e-02,  9.5700e-02, -2.6119e-01,
         -4.1921e-02, -1.2795e-02,  2.5186e-01, -7.6741e-02, -5.9843e-01,
          1.5999e-01, -3.4908e-01, -5.2038e-01, -3.6497e-01,  2.4810e-01,
         -5.2284e-01,  2.9837e-02,  3.3753e-01,  1.7436e-01, -1.9443e-01,
          1.7358e-01, -5.8038e-01, -1.9783e-01,  2.8304e-01, -1.1265e-02,
         -7.3664e-02,  1.8742e-01, -2.1326e-01, -5.2786e-01,  1.5224e-01,
          2.0085e-01, -2.3189e-01,  1.5065e-01,  2.1498e-01,  1.3787e-01,
         -2.0878e-01, -2.8278e-03,  4.0543e-01,  9.5933e-02,  2.5568e-01,
         -1.2335e-01,  1.1707e-01,  1.7947e-02,  6.2515e-03, -2.1918e-01,
         -5.1464e-02,  8.1793e-02,  3.6440e-01, -1.4612e-01,  1.5200e-01,
          3.0660e-01, -6.1054e-01, -9.4255e-02, -9.0325e-02, -2.1761e-01,
         -1.3207e-01,  9.0669e-02, -1.0982e-01,  1.4184e-01, -7.8039e-03,
         -4.3744e-02, -2.5341e-01,  6.0147e-01, -2.7478e-01, -1.9863e-01,
          8.6668e-02,  7.1448e-02,  2.3824e-01, -1.2189e-01,  2.6110e-01,
          9.5989e-03,  9.5797e-02,  5.1899e-02,  5.3715e-02,  1.3197e-01,
          1.4772e-01, -1.6119e-01,  4.5519e-02, -4.3705e-02,  4.0515e-03,
          1.3446e-01,  1.9208e-03,  1.3024e-02,  7.6086e-02,  8.0747e-02,
         -7.5877e-02, -3.5074e-01, -3.5680e-01,  8.2619e-02,  1.5087e-01,
         -2.6778e-02,  5.5341e-02, -1.3641e-01, -2.5688e-01, -5.2494e-02,
         -1.4282e-02,  2.1307e-03,  7.2913e-02, -8.0235e-02,  1.8265e-01,
          1.9078e-02,  1.0029e-01, -8.6899e-02, -6.6846e-02, -1.7493e-02,
         -2.1905e-01, -1.3557e-01,  5.1448e-03, -1.7652e-01, -9.3339e-04,
         -1.0059e-01, -1.9167e-01,  2.0349e-01, -5.7576e-02, -1.5944e-01,
          8.7200e-03,  1.4361e-01,  2.2849e-01, -8.0301e-02,  3.6078e-02,
         -1.3423e-01]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
209000 特征值优化 tensor(0.6828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.9536e-01,  1.3222e+00, -9.4837e-01, -1.0522e+00,  1.8852e+00,
          2.1159e+00,  1.3469e+00,  2.0497e+00,  6.6990e-01, -3.0220e-01,
         -2.9154e-02, -8.1969e-01, -3.8586e-01, -8.4581e-01, -4.3296e-01,
          1.0196e+00,  2.5322e-01,  1.0368e+00, -1.6953e-02,  6.4639e-02,
         -6.7607e-02,  3.3846e-01,  7.7213e-01, -8.0483e-01,  3.5879e-01,
         -3.9227e-02, -4.2975e-01,  3.2974e-01, -7.1512e-02,  1.3944e-01,
         -1.7197e-01, -3.0104e-01,  5.0972e-01,  5.4323e-02,  4.8173e-01,
          8.9054e-02,  5.2978e-01,  2.7965e-01, -2.0903e-01,  2.4302e-01,
         -3.0275e-02,  6.0507e-02,  1.9084e-02,  5.6969e-02, -2.5325e-01,
          9.4400e-03, -1.6035e-02,  2.5181e-01, -1.5196e-01, -6.4930e-01,
          1.6828e-01, -3.0106e-01, -4.8917e-01, -3.8138e-01,  2.5918e-01,
         -5.6341e-01,  5.4720e-02,  3.3642e-01,  2.2911e-01, -2.6550e-01,
          2.6838e-01, -6.1046e-01, -1.7415e-01,  2.4721e-01,  5.5011e-02,
         -1.1442e-01,  1.5854e-01, -2.0674e-01, -4.9571e-01,  1.5989e-01,
          2.0693e-01, -2.0776e-01,  1.6206e-01,  2.0351e-01,  1.6559e-01,
         -2.5753e-01, -1.1036e-02,  3.5648e-01,  3.3524e-02,  2.3640e-01,
         -1.2737e-01,  1.5512e-01,  1.6455e-03, -4.7717e-02, -1.9788e-01,
         -5.7213e-02,  1.0463e-02,  3.7025e-01, -1.6638e-01,  2.3062e-01,
          2.9954e-01, -6.8573e-01, -4.2411e-02, -1.0713e-01, -2.3948e-01,
         -1.0064e-01,  6.6562e-02, -7.2480e-02,  1.8417e-01,  2.3039e-02,
          1.4535e-01, -3.0641e-01,  6.0658e-01, -2.6107e-01, -1.8528e-01,
          1.2979e-01,  6.0076e-02,  2.8934e-01, -3.4060e-02,  2.3970e-01,
          3.3067e-02,  8.3912e-02,  3.8869e-02,  7.2388e-02,  8.4350e-02,
          1.1620e-01, -2.0342e-01,  5.9949e-02, -1.0861e-02, -7.1032e-03,
          1.5043e-01, -7.5543e-03,  1.5710e-02,  7.7107e-02,  8.4294e-02,
         -6.2880e-02, -3.2588e-01, -3.5714e-01,  6.1919e-02,  1.3845e-01,
         -1.0188e-02,  3.7873e-02, -1.1626e-01, -2.1430e-01, -3.9813e-02,
         -5.3100e-02,  7.0211e-02,  9.6327e-02, -5.4892e-02,  1.5976e-01,
          8.1354e-03,  6.0120e-02, -1.1173e-01, -6.9625e-02, -1.1215e-01,
         -1.8124e-01, -1.2494e-01,  4.8446e-02, -1.6384e-01,  2.2837e-02,
         -1.1702e-01, -1.8438e-01,  2.0601e-01, -7.3679e-02, -2.0677e-01,
          3.7174e-03,  1.0244e-01,  2.2919e-01, -7.1888e-02,  5.5126e-02,
         -1.1839e-01]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
210000 特征值优化 tensor(0.6632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3770,  1.0255, -0.9839, -1.0558,  2.0365,  2.3053,  1.5010,  2.1578,
          0.8024, -0.3123, -0.1203, -0.8005, -0.3923, -0.9306, -0.4933,  1.0716,
          0.2488,  0.9636, -0.0323,  0.0844, -0.0550,  0.2860,  0.7716, -0.6861,
          0.3006, -0.1028, -0.3829,  0.2747, -0.0576,  0.1333, -0.2136, -0.2493,
          0.4714,  0.0044,  0.4722,  0.1770,  0.5169,  0.2490, -0.0929,  0.1843,
         -0.0554,  0.0626,  0.0133,  0.0333, -0.2309,  0.0342,  0.0178,  0.2952,
         -0.2153, -0.6621,  0.1470, -0.2290, -0.4891, -0.4191,  0.2490, -0.5763,
          0.0393,  0.3883,  0.2560, -0.3415,  0.3062, -0.6157, -0.1668,  0.1764,
          0.1104, -0.1563,  0.1649, -0.2587, -0.4398,  0.2109,  0.1930, -0.1557,
          0.1928,  0.1630,  0.1895, -0.2815, -0.0163,  0.2880,  0.0461,  0.2554,
         -0.1431,  0.1750,  0.0352, -0.0982, -0.1996, -0.0393, -0.0086,  0.3416,
         -0.2557,  0.3253,  0.3067, -0.8153,  0.0764, -0.1078, -0.2372, -0.0887,
          0.0676, -0.0151,  0.1184, -0.0616,  0.1996, -0.3696,  0.7176, -0.2414,
         -0.1300,  0.2617,  0.0129,  0.3294,  0.0099,  0.2101,  0.0579,  0.0873,
         -0.0085,  0.0737,  0.0392,  0.0992, -0.1742,  0.0307, -0.0272, -0.0332,
          0.1830, -0.0102,  0.0203,  0.0919,  0.1044, -0.0889, -0.2366, -0.3449,
          0.0068,  0.1207, -0.0169, -0.0036, -0.0571, -0.1546, -0.0671, -0.1057,
          0.0714,  0.0824, -0.0060,  0.0448,  0.0206,  0.1156, -0.1444, -0.0848,
         -0.1501, -0.1459, -0.1571,  0.0919, -0.1776,  0.0358, -0.0935, -0.1412,
          0.1932, -0.0938, -0.2441,  0.0170,  0.0793,  0.2220, -0.0595,  0.0621,
         -0.0559]], device='cuda:0') tensor(0.2120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
211000 特征值优化 tensor(0.6400, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2291,  0.8440, -0.9291, -1.0539,  2.1759,  2.4649,  1.6689,  2.2272,
          0.8619, -0.2577, -0.1697, -0.7976, -0.3781, -0.9982, -0.5374,  1.1267,
          0.2456,  0.8925, -0.0601,  0.2047, -0.0472,  0.2049,  0.7284, -0.5385,
          0.3166, -0.1769, -0.3505,  0.2598, -0.0465,  0.1312, -0.2015, -0.2001,
          0.3989, -0.0385,  0.4635,  0.2580,  0.5462,  0.2528, -0.0483,  0.1352,
         -0.0540,  0.0627,  0.0156,  0.0351, -0.2336,  0.0590,  0.0613,  0.3143,
         -0.2800, -0.6337,  0.1191, -0.1886, -0.4830, -0.4653,  0.2741, -0.5976,
          0.0572,  0.4215,  0.2259, -0.3948,  0.3190, -0.6255, -0.1437,  0.1593,
          0.1302, -0.2012,  0.1377, -0.2500, -0.4126,  0.1893,  0.1873, -0.1185,
          0.1790,  0.1534,  0.1971, -0.2850, -0.0123,  0.2578,  0.0350,  0.2686,
         -0.1205,  0.1940,  0.0655, -0.1374, -0.1851, -0.0098, -0.0706,  0.3296,
         -0.3784,  0.3980,  0.2633, -0.8666,  0.1176, -0.0877, -0.2530, -0.1054,
          0.0872, -0.0106,  0.1084, -0.0881,  0.2470, -0.3507,  0.7506, -0.2307,
         -0.1031,  0.3425, -0.0092,  0.3758,  0.0165,  0.1887,  0.0619,  0.0873,
         -0.0255,  0.0982,  0.0236,  0.0738, -0.0813,  0.0216, -0.0513, -0.0383,
          0.1911, -0.0387,  0.0343,  0.0784,  0.0985, -0.1015, -0.2049, -0.3021,
         -0.0417,  0.0702,  0.0187,  0.0359, -0.0249, -0.1304, -0.0755, -0.1123,
          0.1023,  0.0552,  0.0183, -0.0025, -0.0032,  0.1329, -0.1476, -0.0839,
         -0.1892, -0.1029, -0.1659,  0.1069, -0.1455,  0.0493, -0.0956, -0.0895,
          0.1767, -0.0873, -0.2418,  0.0465,  0.0588,  0.2136, -0.0505,  0.0896,
         -0.0316]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
212000 特征值优化 tensor(0.6360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.9312e-02,  7.7753e-01, -9.2484e-01, -1.0567e+00,  2.2587e+00,
          2.5248e+00,  1.8041e+00,  2.2944e+00,  8.6078e-01, -1.9202e-01,
         -1.9284e-01, -7.8311e-01, -3.7671e-01, -9.9625e-01, -5.5042e-01,
          1.1959e+00,  2.6757e-01,  8.1981e-01, -8.0565e-02,  2.8257e-01,
         -5.9223e-02,  1.4533e-01,  6.9664e-01, -4.2801e-01,  3.2065e-01,
         -2.2333e-01, -3.5533e-01,  2.5547e-01, -6.5937e-02,  1.3488e-01,
         -1.9881e-01, -1.8989e-01,  3.2989e-01, -8.8666e-02,  4.7681e-01,
          2.9103e-01,  5.4455e-01,  2.6049e-01, -9.5850e-03,  1.0849e-01,
         -6.3614e-02,  6.1043e-02,  1.5028e-02,  3.4909e-02, -2.4068e-01,
          4.4659e-02,  8.0282e-02,  3.3796e-01, -3.2989e-01, -6.0424e-01,
          1.0482e-01, -1.3619e-01, -4.6853e-01, -4.6955e-01,  2.6472e-01,
         -5.9193e-01,  7.6100e-02,  4.1804e-01,  1.8594e-01, -4.1096e-01,
          3.4241e-01, -6.2981e-01, -1.1638e-01,  1.3409e-01,  1.6511e-01,
         -2.2389e-01,  1.3908e-01, -2.2255e-01, -3.8342e-01,  1.9519e-01,
          1.7903e-01, -1.0624e-01,  1.6887e-01,  1.7857e-01,  1.9814e-01,
         -2.8537e-01, -1.2109e-02,  2.5715e-01,  5.0857e-02,  2.7588e-01,
         -1.2200e-01,  1.9953e-01,  8.3016e-02, -1.7408e-01, -1.6173e-01,
          5.9673e-03, -9.6924e-02,  3.2355e-01, -3.9383e-01,  4.2311e-01,
          2.4915e-01, -8.7190e-01,  1.4346e-01, -4.3243e-02, -2.5533e-01,
         -1.0796e-01,  1.0499e-01,  3.6078e-03,  1.1669e-01, -8.0848e-02,
          2.2838e-01, -3.2431e-01,  7.5823e-01, -2.1123e-01, -8.2653e-02,
          3.5983e-01, -3.8257e-02,  3.5900e-01,  2.0482e-02,  1.7232e-01,
          5.0150e-02,  1.1950e-01, -2.0759e-02,  9.3735e-02,  1.4050e-02,
          5.2705e-02, -2.6335e-02,  1.6617e-02, -5.7917e-02, -4.5406e-02,
          1.7832e-01, -5.4880e-02,  2.6224e-02,  7.1414e-02,  1.0467e-01,
         -1.0790e-01, -1.9139e-01, -2.9783e-01, -4.2833e-02,  3.8435e-02,
          3.5433e-02,  3.4965e-02, -1.4566e-02, -1.2984e-01, -5.5300e-02,
         -1.0614e-01,  1.1998e-01,  3.0986e-02,  1.8116e-02, -4.5176e-03,
         -2.3260e-03,  1.1662e-01, -1.5212e-01, -9.6078e-02, -1.7498e-01,
         -6.7356e-02, -1.7423e-01,  1.1358e-01, -1.4098e-01,  5.2531e-02,
         -7.7671e-02, -7.9450e-02,  1.6899e-01, -6.3897e-02, -2.3733e-01,
          4.9114e-02,  4.0817e-02,  2.0987e-01, -7.1832e-02,  6.8619e-02,
         -4.2520e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
213000 特征值优化 tensor(0.6242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.7508e-02,  7.7969e-01, -9.0867e-01, -1.0584e+00,  2.3315e+00,
          2.5204e+00,  1.8768e+00,  2.3288e+00,  8.7039e-01, -1.4983e-01,
         -2.6214e-01, -7.5666e-01, -3.8064e-01, -9.6666e-01, -5.0616e-01,
          1.2507e+00,  3.3793e-01,  7.9847e-01, -1.0344e-01,  3.5067e-01,
         -4.7558e-02,  8.7575e-02,  6.4737e-01, -3.3578e-01,  3.5908e-01,
         -2.0576e-01, -3.0445e-01,  1.7811e-01, -7.1520e-02,  1.4178e-01,
         -1.8837e-01, -1.8241e-01,  2.9474e-01, -9.0217e-02,  4.7350e-01,
          3.2103e-01,  5.1549e-01,  3.2632e-01, -3.5719e-02,  7.8431e-02,
         -3.9617e-02,  5.8066e-02,  1.9573e-02,  1.0405e-02, -2.4292e-01,
          8.9082e-03,  9.9827e-02,  3.7566e-01, -3.3318e-01, -6.0367e-01,
          9.0639e-02, -1.2872e-01, -4.8189e-01, -4.9168e-01,  2.5342e-01,
         -5.9007e-01,  1.0540e-01,  4.3286e-01,  1.7633e-01, -4.2559e-01,
          3.5875e-01, -6.3763e-01, -7.4233e-02,  1.1593e-01,  1.7688e-01,
         -2.3882e-01,  9.0545e-02, -2.0849e-01, -3.5154e-01,  2.0401e-01,
          1.5307e-01, -1.0390e-01,  1.3929e-01,  1.5533e-01,  1.8682e-01,
         -2.9921e-01, -1.5940e-02,  2.3948e-01,  6.7134e-02,  2.8374e-01,
         -1.1795e-01,  1.8380e-01,  9.2774e-02, -2.1625e-01, -1.7148e-01,
          1.2955e-02, -1.1621e-01,  3.1709e-01, -3.9107e-01,  4.1056e-01,
          2.3384e-01, -8.3756e-01,  1.5712e-01, -5.8764e-02, -2.5518e-01,
         -1.1182e-01,  1.1670e-01,  1.3018e-03,  1.3026e-01, -1.2124e-01,
          1.8763e-01, -2.9594e-01,  7.9901e-01, -2.2656e-01, -5.2856e-02,
          3.7986e-01, -6.8449e-02,  3.4055e-01, -4.5542e-02,  1.5755e-01,
          6.0289e-02,  1.4095e-01,  2.1751e-02,  1.0468e-01, -1.5467e-03,
          6.8195e-02, -2.7237e-02,  8.0848e-03, -3.1453e-02, -6.9549e-02,
          1.7790e-01, -5.4615e-02,  1.2094e-02,  6.5728e-02,  8.7065e-02,
         -1.4109e-01, -1.6830e-01, -2.8689e-01, -6.5974e-02,  2.4724e-02,
          4.2740e-02,  2.7676e-02, -6.0269e-03, -1.3427e-01, -5.7874e-02,
         -1.0580e-01,  1.1224e-01, -1.0884e-02,  4.4726e-02, -3.0111e-02,
         -1.9178e-02,  1.2699e-01, -1.1253e-01, -1.1608e-01, -1.4618e-01,
         -6.8529e-02, -1.9395e-01,  1.0362e-01, -1.0030e-01,  5.5036e-02,
         -1.1554e-01, -5.7345e-02,  1.6836e-01, -4.5095e-02, -2.2329e-01,
          7.3261e-02,  2.3341e-02,  1.6680e-01, -6.7361e-02,  7.1801e-02,
         -3.5652e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
214000 特征值优化 tensor(0.6239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1755e-01,  7.2345e-01, -8.8209e-01, -1.0514e+00,  2.4062e+00,
          2.5014e+00,  1.9759e+00,  2.3080e+00,  8.7104e-01, -1.1848e-01,
         -3.1082e-01, -7.9944e-01, -3.2719e-01, -8.4341e-01, -5.2285e-01,
          1.2619e+00,  3.8787e-01,  7.9936e-01, -9.2391e-02,  3.7629e-01,
         -2.1583e-02,  2.8468e-02,  6.0485e-01, -2.4000e-01,  4.1377e-01,
         -2.2802e-01, -3.0835e-01,  1.6683e-01, -4.6708e-02,  1.5138e-01,
         -1.6375e-01, -1.9910e-01,  2.5378e-01, -1.0799e-01,  4.9328e-01,
          3.3756e-01,  5.0588e-01,  3.2566e-01, -4.3079e-02,  6.3029e-02,
         -3.3304e-02,  4.9224e-02,  2.3548e-02,  1.5117e-03, -2.5413e-01,
         -1.1636e-03,  1.2720e-01,  3.9740e-01, -3.5084e-01, -5.7621e-01,
          9.9583e-02, -1.4681e-01, -4.8357e-01, -4.9712e-01,  2.3742e-01,
         -5.5486e-01,  9.9142e-02,  4.1009e-01,  1.3861e-01, -4.3925e-01,
          3.3409e-01, -6.3527e-01, -3.9831e-02,  1.2267e-01,  1.4302e-01,
         -2.6896e-01,  5.6571e-02, -1.9544e-01, -3.3361e-01,  2.2356e-01,
          1.3109e-01, -1.1683e-01,  1.4990e-01,  1.3635e-01,  2.1518e-01,
         -2.8048e-01, -2.4337e-02,  2.4728e-01,  7.3685e-02,  3.0566e-01,
         -1.1790e-01,  1.8625e-01,  8.1215e-02, -2.3507e-01, -1.6963e-01,
          4.2381e-02, -1.3533e-01,  3.3542e-01, -4.2505e-01,  4.2597e-01,
          2.3540e-01, -8.2129e-01,  1.6714e-01, -4.4085e-02, -2.5305e-01,
         -1.1530e-01,  9.8730e-02, -1.6399e-02,  1.0307e-01, -2.1738e-01,
          1.5469e-01, -2.9053e-01,  7.8743e-01, -2.1356e-01, -2.9040e-02,
          3.8129e-01, -1.1157e-01,  3.3644e-01, -3.7525e-02,  1.5430e-01,
          6.1369e-02,  1.6061e-01,  2.4130e-02,  9.3617e-02, -3.1757e-02,
          4.9675e-02,  5.4878e-03, -1.3791e-02, -2.5138e-02, -4.0463e-02,
          1.8615e-01, -6.3137e-02,  1.8252e-02,  6.4292e-02,  7.1664e-02,
         -1.4090e-01, -1.5194e-01, -2.9728e-01, -7.1808e-02,  2.5819e-02,
          3.2848e-02,  4.9386e-02, -4.9583e-03, -1.1995e-01, -6.3822e-02,
         -1.0292e-01,  1.1555e-01, -5.6510e-02,  6.8377e-02, -3.9947e-02,
          2.0362e-02,  1.7275e-01, -1.4340e-01, -1.0389e-01, -1.5934e-01,
         -6.9937e-02, -1.9607e-01,  9.4982e-02, -9.8187e-02,  1.1422e-01,
         -8.6072e-02, -9.0245e-03,  1.8665e-01, -3.4355e-02, -2.3123e-01,
          7.0081e-02,  8.8898e-03,  1.6319e-01, -6.2945e-02,  5.3281e-02,
         -5.7125e-02]], device='cuda:0') tensor(0.2285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
215000 特征值优化 tensor(0.6199, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5848e-01,  6.8163e-01, -8.7614e-01, -1.0520e+00,  2.4665e+00,
          2.5037e+00,  2.0709e+00,  2.2862e+00,  8.8656e-01, -7.7828e-02,
         -3.4741e-01, -8.2793e-01, -2.7577e-01, -7.5659e-01, -5.1768e-01,
          1.2773e+00,  4.4960e-01,  7.7901e-01, -9.5300e-02,  4.1215e-01,
          4.0513e-02, -1.0905e-02,  6.0044e-01, -1.9838e-01,  4.5218e-01,
         -2.7067e-01, -2.6831e-01,  1.3934e-01, -3.2845e-02,  1.4389e-01,
         -1.4471e-01, -2.1928e-01,  2.7612e-01, -1.2225e-01,  4.9878e-01,
          3.4294e-01,  4.9019e-01,  3.2072e-01, -7.0971e-02,  5.4499e-02,
         -9.3485e-04,  4.7473e-02,  2.3554e-02,  4.7269e-03, -2.4861e-01,
         -9.8357e-03,  1.3673e-01,  4.3421e-01, -3.5467e-01, -5.4846e-01,
          8.7261e-02, -1.5822e-01, -4.9640e-01, -5.0432e-01,  2.1834e-01,
         -5.4349e-01,  9.2320e-02,  4.0239e-01,  1.0283e-01, -4.3703e-01,
          3.4536e-01, -6.3256e-01, -5.9290e-04,  9.9849e-02,  1.1736e-01,
         -2.7088e-01,  2.5679e-02, -1.9279e-01, -3.0512e-01,  2.3867e-01,
          1.3019e-01, -1.1364e-01,  1.5306e-01,  1.2883e-01,  2.2847e-01,
         -2.6337e-01, -3.9566e-02,  2.0981e-01,  1.2794e-01,  2.9566e-01,
         -1.1397e-01,  1.6706e-01,  8.1262e-02, -2.4329e-01, -1.6982e-01,
          6.2110e-02, -1.4755e-01,  3.5186e-01, -4.3866e-01,  4.2245e-01,
          2.3804e-01, -8.1760e-01,  1.6626e-01, -1.7567e-02, -2.5625e-01,
         -1.1378e-01,  8.5128e-02, -2.4948e-02,  7.8084e-02, -2.8373e-01,
          1.2454e-01, -2.6354e-01,  7.6329e-01, -1.9610e-01, -1.7440e-02,
          3.6832e-01, -1.3202e-01,  3.0738e-01, -1.5480e-02,  1.4577e-01,
          4.8550e-02,  1.5301e-01,  1.7274e-02,  8.6568e-02, -3.5497e-02,
          2.9220e-02,  7.6359e-03, -2.4527e-02, -1.0360e-03, -9.7731e-03,
          1.8146e-01, -7.6465e-02,  3.1687e-02,  8.3819e-02,  6.0835e-02,
         -1.4176e-01, -1.3553e-01, -3.0722e-01, -7.0742e-02,  2.1490e-02,
          2.3214e-02,  4.5024e-02, -1.0968e-02, -1.2698e-01, -6.9423e-02,
         -1.0849e-01,  1.0830e-01, -8.1497e-02,  9.2093e-02, -6.2064e-02,
          3.6395e-02,  2.2173e-01, -1.4980e-01, -9.2779e-02, -1.5707e-01,
         -8.7520e-02, -2.0634e-01,  1.0459e-01, -8.7548e-02,  1.3948e-01,
         -1.0481e-01,  3.0492e-02,  1.9639e-01, -3.3611e-02, -2.2270e-01,
          8.1110e-02,  2.2863e-02,  1.5745e-01, -7.3454e-02,  4.6213e-02,
         -5.4639e-02]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
216000 特征值优化 tensor(0.6114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.9073e-01,  6.7086e-01, -9.0505e-01, -1.0498e+00,  2.5387e+00,
          2.4920e+00,  2.1283e+00,  2.2736e+00,  9.1351e-01, -3.0053e-02,
         -3.9390e-01, -8.1527e-01, -2.2109e-01, -6.7853e-01, -5.1887e-01,
          1.2733e+00,  4.7798e-01,  7.9217e-01, -1.0121e-01,  4.4818e-01,
          4.7429e-02, -4.7764e-02,  6.0487e-01, -1.8107e-01,  4.6927e-01,
         -2.7399e-01, -2.3440e-01,  1.3819e-01, -2.9019e-02,  1.3840e-01,
         -1.2941e-01, -2.5834e-01,  3.2043e-01, -9.3814e-02,  4.8180e-01,
          3.3619e-01,  4.7859e-01,  2.9774e-01, -1.1642e-01,  7.2306e-02,
          2.8879e-02,  5.2250e-02,  2.0469e-02, -4.4482e-03, -2.4598e-01,
         -1.9445e-02,  1.3939e-01,  4.3559e-01, -3.6144e-01, -5.3062e-01,
          7.6733e-02, -1.6084e-01, -5.0681e-01, -5.0486e-01,  2.1665e-01,
         -5.2543e-01,  8.7831e-02,  3.9527e-01,  1.0260e-01, -4.1590e-01,
          3.4612e-01, -6.2634e-01,  4.1424e-02,  7.7008e-02,  1.0399e-01,
         -2.7789e-01,  2.2176e-02, -2.0537e-01, -2.9264e-01,  2.2465e-01,
          1.3822e-01, -1.1844e-01,  1.4721e-01,  1.1291e-01,  2.7132e-01,
         -2.3970e-01, -3.7488e-02,  1.6872e-01,  1.3957e-01,  3.1436e-01,
         -9.9101e-02,  1.4616e-01,  9.7619e-02, -2.5744e-01, -1.8444e-01,
          7.7107e-02, -1.5679e-01,  3.5358e-01, -3.9570e-01,  4.0724e-01,
          2.3421e-01, -7.9855e-01,  1.2737e-01,  1.6592e-02, -2.5304e-01,
         -1.1087e-01,  8.0565e-02, -3.9790e-03,  1.1042e-01, -2.9762e-01,
          8.8397e-02, -2.4523e-01,  7.7014e-01, -1.8534e-01, -2.2632e-03,
          3.6312e-01, -1.6872e-01,  2.8924e-01, -1.0071e-02,  1.3081e-01,
          4.1358e-02,  1.4428e-01, -1.2465e-02,  7.2597e-02, -2.4364e-02,
          3.0132e-02, -1.5223e-02, -4.0411e-02,  8.2698e-03,  8.4458e-03,
          1.8972e-01, -7.8779e-02,  3.4003e-02,  8.7577e-02,  5.9748e-02,
         -1.4712e-01, -1.3222e-01, -3.0716e-01, -5.5260e-02,  3.4305e-02,
          1.9991e-02,  3.3835e-02, -8.3958e-03, -1.2658e-01, -5.7573e-02,
         -1.1612e-01,  1.1093e-01, -9.2859e-02,  1.0010e-01, -5.9490e-02,
          4.4896e-02,  2.3910e-01, -1.4063e-01, -9.9306e-02, -1.6512e-01,
         -1.0321e-01, -2.2856e-01,  1.3691e-01, -4.0471e-02,  9.4764e-02,
         -1.4085e-01,  4.1027e-02,  1.9370e-01, -5.6949e-02, -2.1831e-01,
          9.3922e-02,  4.0004e-02,  1.4693e-01, -7.8828e-02,  6.7844e-02,
         -4.6115e-02]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
217000 特征值优化 tensor(0.6117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3593e-01,  6.4583e-01, -9.1094e-01, -1.0460e+00,  2.5904e+00,
          2.4932e+00,  2.1599e+00,  2.2796e+00,  9.4168e-01,  2.6728e-03,
         -4.1437e-01, -8.0947e-01, -1.9158e-01, -6.3046e-01, -5.1887e-01,
          1.2798e+00,  4.7319e-01,  7.9814e-01, -1.0285e-01,  4.6041e-01,
          5.3045e-02, -6.1815e-02,  6.0045e-01, -1.6116e-01,  4.6830e-01,
         -2.6543e-01, -2.4226e-01,  1.6639e-01, -3.8210e-02,  1.3791e-01,
         -1.4523e-01, -2.7993e-01,  3.2917e-01, -8.2644e-02,  4.6461e-01,
          3.3476e-01,  4.7180e-01,  2.8528e-01, -1.2564e-01,  6.5278e-02,
          3.0992e-02,  5.2956e-02,  2.3181e-02,  8.1191e-04, -2.4546e-01,
         -2.5152e-02,  1.4037e-01,  4.3866e-01, -3.6100e-01, -5.2694e-01,
          6.9361e-02, -1.5710e-01, -4.9799e-01, -5.0439e-01,  2.0711e-01,
         -5.1954e-01,  8.8493e-02,  3.8627e-01,  1.0927e-01, -4.1069e-01,
          3.3699e-01, -6.1467e-01,  5.6224e-02,  7.3202e-02,  1.0372e-01,
         -2.6711e-01,  2.6594e-02, -1.9859e-01, -2.8805e-01,  2.1718e-01,
          1.5337e-01, -1.2727e-01,  1.4790e-01,  1.0795e-01,  2.8042e-01,
         -2.3335e-01, -3.8219e-02,  1.7617e-01,  1.4857e-01,  3.2072e-01,
         -9.0075e-02,  1.3773e-01,  9.7487e-02, -2.7138e-01, -1.8253e-01,
          7.4304e-02, -1.5874e-01,  3.5935e-01, -3.7061e-01,  3.9607e-01,
          2.2577e-01, -7.7968e-01,  1.2165e-01,  3.2210e-02, -2.4821e-01,
         -1.1119e-01,  7.4878e-02, -1.1311e-02,  8.7331e-02, -3.0264e-01,
          7.1703e-02, -2.3155e-01,  7.6174e-01, -1.8054e-01, -9.9905e-04,
          3.4946e-01, -1.7571e-01,  2.7619e-01, -2.3844e-02,  1.2862e-01,
          2.5225e-02,  1.3316e-01, -1.7343e-02,  7.0635e-02, -2.6352e-02,
          2.2796e-02, -2.6545e-02, -3.6434e-02,  1.0452e-02,  1.4883e-02,
          1.9011e-01, -7.8449e-02,  2.5334e-02,  9.4981e-02,  4.8000e-02,
         -1.5318e-01, -1.2955e-01, -3.0340e-01, -5.0184e-02,  4.6317e-02,
          1.7192e-02,  2.8779e-02, -4.8399e-03, -1.2393e-01, -5.2335e-02,
         -1.3076e-01,  1.2905e-01, -8.8515e-02,  8.4037e-02, -5.6511e-02,
          3.5931e-02,  2.4020e-01, -1.4748e-01, -1.0470e-01, -1.6647e-01,
         -1.1511e-01, -2.3852e-01,  1.4848e-01, -4.6989e-02,  9.7694e-02,
         -1.2812e-01,  4.7261e-02,  1.8487e-01, -6.6405e-02, -2.1861e-01,
          8.9994e-02,  3.9823e-02,  1.4943e-01, -6.7330e-02,  7.7010e-02,
         -4.7935e-02]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
218000 特征值优化 tensor(0.6068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7576e-01,  6.4256e-01, -8.9019e-01, -1.0586e+00,  2.6377e+00,
          2.4853e+00,  2.2011e+00,  2.2979e+00,  9.4862e-01,  2.9738e-02,
         -4.0978e-01, -7.9385e-01, -1.7734e-01, -5.8469e-01, -5.2159e-01,
          1.2968e+00,  4.9413e-01,  7.8966e-01, -1.0354e-01,  4.5430e-01,
          7.9454e-02, -5.1269e-02,  5.9683e-01, -1.5203e-01,  4.9661e-01,
         -2.7859e-01, -2.4234e-01,  1.8624e-01, -3.8457e-02,  1.3820e-01,
         -1.5520e-01, -2.9376e-01,  3.4657e-01, -8.7099e-02,  4.6946e-01,
          3.3554e-01,  4.7579e-01,  2.7422e-01, -1.1000e-01,  6.7485e-02,
          4.2012e-03,  4.9197e-02,  2.4949e-02,  2.8179e-04, -2.4319e-01,
         -2.3343e-02,  1.4024e-01,  4.4431e-01, -3.5012e-01, -5.4273e-01,
          6.8408e-02, -1.5760e-01, -4.8373e-01, -5.0009e-01,  2.0874e-01,
         -5.2880e-01,  8.1409e-02,  3.7905e-01,  1.2678e-01, -4.1244e-01,
          3.3336e-01, -6.0963e-01,  7.3665e-02,  8.7395e-02,  1.0610e-01,
         -2.6401e-01,  2.6769e-02, -1.9118e-01, -2.9044e-01,  2.1612e-01,
          1.4065e-01, -1.3750e-01,  1.5027e-01,  1.0198e-01,  2.6610e-01,
         -2.5060e-01, -3.8392e-02,  1.7544e-01,  1.7710e-01,  3.1427e-01,
         -9.2452e-02,  1.4070e-01,  9.8153e-02, -2.8529e-01, -1.7837e-01,
          6.9767e-02, -1.4820e-01,  3.5536e-01, -3.4911e-01,  3.9241e-01,
          2.2238e-01, -7.7470e-01,  1.3109e-01,  1.0891e-02, -2.5453e-01,
         -1.1402e-01,  7.3675e-02, -1.1021e-02,  8.3321e-02, -3.1543e-01,
          4.5291e-02, -2.2637e-01,  7.6815e-01, -1.8071e-01,  2.0992e-02,
          3.2343e-01, -1.8434e-01,  2.7495e-01, -3.4825e-02,  1.2246e-01,
          1.2726e-02,  1.5151e-01, -2.1941e-02,  5.2595e-02, -4.2509e-02,
          1.5015e-02, -4.3786e-02, -2.4541e-02,  9.9691e-03,  9.0287e-03,
          2.0769e-01, -6.8316e-02,  1.7870e-02,  1.0758e-01,  3.7236e-02,
         -1.6146e-01, -1.1361e-01, -3.0382e-01, -4.4627e-02,  5.7874e-02,
          1.2845e-02,  2.8989e-02, -9.1802e-03, -1.1168e-01, -5.2050e-02,
         -1.3263e-01,  1.0392e-01, -7.3438e-02,  7.3921e-02, -5.4587e-02,
          3.3873e-02,  2.1822e-01, -1.5872e-01, -1.0427e-01, -1.4251e-01,
         -1.1862e-01, -2.3380e-01,  1.8379e-01, -6.3777e-02,  8.6466e-02,
         -1.2748e-01,  7.0335e-02,  1.8619e-01, -6.1422e-02, -2.1341e-01,
          7.1761e-02,  4.7055e-02,  1.4792e-01, -6.7697e-02,  6.8358e-02,
         -4.5277e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
219000 特征值优化 tensor(0.6016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9917e-01,  6.3204e-01, -8.8200e-01, -1.0587e+00,  2.6942e+00,
          2.4746e+00,  2.2204e+00,  2.3023e+00,  9.5955e-01,  4.2159e-02,
         -4.0086e-01, -7.8239e-01, -1.5368e-01, -5.6731e-01, -5.2713e-01,
          1.2843e+00,  5.0024e-01,  7.8187e-01, -1.0815e-01,  4.6277e-01,
          9.2990e-02, -5.5024e-02,  5.8710e-01, -1.3112e-01,  4.9876e-01,
         -2.8319e-01, -2.6651e-01,  2.1212e-01, -3.3604e-02,  1.4180e-01,
         -1.6501e-01, -3.0073e-01,  3.4488e-01, -6.5761e-02,  4.6873e-01,
          3.4139e-01,  4.8198e-01,  2.7009e-01, -1.1497e-01,  7.2245e-02,
          1.3948e-02,  4.9378e-02,  2.3964e-02,  2.4505e-03, -2.4611e-01,
         -1.7487e-02,  1.3603e-01,  4.4701e-01, -3.5405e-01, -5.5009e-01,
          6.3518e-02, -1.5795e-01, -4.7559e-01, -4.9565e-01,  1.9775e-01,
         -5.2851e-01,  8.3179e-02,  3.7383e-01,  1.3723e-01, -4.1454e-01,
          3.2202e-01, -6.0448e-01,  8.4336e-02,  8.0958e-02,  1.0657e-01,
         -2.6916e-01,  2.7635e-02, -1.8788e-01, -2.9212e-01,  2.1738e-01,
          1.4317e-01, -1.3224e-01,  1.5736e-01,  1.0021e-01,  2.7059e-01,
         -2.6164e-01, -3.5615e-02,  1.8807e-01,  1.5968e-01,  3.1879e-01,
         -8.5837e-02,  1.4345e-01,  9.7874e-02, -2.8516e-01, -1.7860e-01,
          6.2433e-02, -1.4329e-01,  3.4986e-01, -3.4793e-01,  3.8368e-01,
          2.2077e-01, -7.4358e-01,  1.3267e-01,  1.8598e-02, -2.5487e-01,
         -1.1512e-01,  7.1727e-02, -1.6491e-02,  7.3676e-02, -3.1833e-01,
          2.5498e-02, -2.2434e-01,  7.6048e-01, -1.7218e-01,  3.2485e-02,
          3.1069e-01, -1.7737e-01,  2.7537e-01, -4.7175e-02,  1.1914e-01,
          4.9209e-03,  1.4974e-01, -2.4793e-02,  4.3674e-02, -4.6919e-02,
          1.6670e-02, -6.3167e-02, -2.8756e-02,  1.6807e-02,  9.5172e-03,
          1.9847e-01, -6.3979e-02,  9.3433e-03,  1.1228e-01,  3.2895e-02,
         -1.6117e-01, -1.0718e-01, -3.0780e-01, -4.8630e-02,  5.0352e-02,
          1.0130e-02,  2.0164e-02, -2.1142e-04, -9.9570e-02, -4.7854e-02,
         -1.4668e-01,  1.1160e-01, -6.6881e-02,  4.7352e-02, -5.3896e-02,
          4.4232e-02,  2.1772e-01, -1.8226e-01, -8.5600e-02, -1.4694e-01,
         -1.1430e-01, -2.3145e-01,  1.7378e-01, -5.2279e-02,  9.9132e-02,
         -1.2650e-01,  6.9919e-02,  1.8992e-01, -6.7964e-02, -2.2096e-01,
          7.6431e-02,  4.6253e-02,  1.3609e-01, -6.6924e-02,  6.7884e-02,
         -5.8441e-02]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
220000 特征值优化 tensor(0.6057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2251e-01,  6.4317e-01, -9.0658e-01, -1.0559e+00,  2.7496e+00,
          2.4749e+00,  2.2401e+00,  2.3201e+00,  9.4757e-01,  4.6902e-02,
         -3.8232e-01, -7.3390e-01, -1.2341e-01, -5.8539e-01, -5.5446e-01,
          1.2779e+00,  4.9279e-01,  7.6733e-01, -1.0453e-01,  4.8260e-01,
          1.0657e-01, -4.6098e-02,  5.6913e-01, -1.4539e-01,  5.1912e-01,
         -2.6345e-01, -2.7132e-01,  2.2783e-01, -6.2127e-02,  1.3977e-01,
         -1.6915e-01, -3.1047e-01,  3.5875e-01, -3.9476e-02,  4.6326e-01,
          3.4333e-01,  4.7058e-01,  2.8958e-01, -1.2654e-01,  6.8945e-02,
          6.1104e-03,  5.0731e-02,  2.2027e-02, -3.8027e-03, -2.4787e-01,
         -9.1486e-03,  1.2696e-01,  4.3793e-01, -3.5003e-01, -5.5543e-01,
          6.4210e-02, -1.7348e-01, -4.7804e-01, -4.9822e-01,  1.9279e-01,
         -5.2287e-01,  9.4620e-02,  3.7685e-01,  1.3676e-01, -4.0952e-01,
          3.4549e-01, -5.9612e-01,  8.2476e-02,  6.2078e-02,  9.1376e-02,
         -2.5359e-01,  1.1192e-02, -1.9239e-01, -2.7273e-01,  2.0512e-01,
          1.5414e-01, -1.3279e-01,  1.5166e-01,  9.3847e-02,  3.0108e-01,
         -2.3677e-01, -3.0269e-02,  1.5195e-01,  1.4990e-01,  3.2309e-01,
         -8.2578e-02,  1.3962e-01,  8.7195e-02, -2.7029e-01, -1.7879e-01,
          9.0537e-02, -1.6482e-01,  3.4113e-01, -3.3108e-01,  3.9765e-01,
          2.0942e-01, -7.4131e-01,  1.0762e-01,  3.0013e-02, -2.5512e-01,
         -1.1017e-01,  8.2357e-02, -2.6691e-02,  5.8468e-02, -3.0200e-01,
          4.8757e-02, -2.3974e-01,  7.9442e-01, -1.6545e-01,  3.3328e-02,
          3.0925e-01, -2.0668e-01,  3.0366e-01, -8.0449e-02,  1.1741e-01,
         -4.9518e-03,  1.3454e-01, -4.6826e-02,  4.9720e-02, -4.2647e-02,
          1.4978e-02, -6.1896e-02, -3.2624e-02,  2.3552e-02,  1.3412e-02,
          1.7541e-01, -7.9038e-02,  1.0912e-02,  1.2039e-01,  4.0490e-02,
         -1.5343e-01, -9.6602e-02, -2.9407e-01, -4.5294e-02,  4.4699e-02,
          9.6412e-03,  3.7711e-02, -2.3279e-03, -1.1533e-01, -4.1684e-02,
         -1.3206e-01,  1.3062e-01, -9.3294e-02,  5.8959e-02, -3.5785e-02,
          2.9436e-02,  2.4653e-01, -1.7297e-01, -1.1209e-01, -1.6986e-01,
         -1.1312e-01, -2.3778e-01,  1.6319e-01, -4.9808e-02,  9.0264e-02,
         -1.3891e-01,  5.7941e-02,  1.8602e-01, -8.0507e-02, -2.1257e-01,
          9.2488e-02,  5.2122e-02,  1.3177e-01, -7.7967e-02,  7.4876e-02,
         -5.3450e-02]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
221000 特征值优化 tensor(0.6061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7238e-01,  6.3005e-01, -8.9715e-01, -1.0576e+00,  2.7989e+00,
          2.4691e+00,  2.2628e+00,  2.3315e+00,  9.6261e-01,  5.9702e-02,
         -3.7019e-01, -7.3896e-01, -1.1612e-01, -5.5581e-01, -5.5188e-01,
          1.2977e+00,  5.0082e-01,  7.5809e-01, -1.1203e-01,  4.9001e-01,
          1.1045e-01, -4.1896e-02,  5.7008e-01, -1.3148e-01,  5.3542e-01,
         -2.6809e-01, -2.6867e-01,  2.3214e-01, -5.6910e-02,  1.3947e-01,
         -1.9707e-01, -3.0794e-01,  3.5946e-01, -5.3460e-02,  4.7784e-01,
          3.4698e-01,  4.7001e-01,  2.7895e-01, -9.6644e-02,  6.7250e-02,
         -9.8787e-03,  4.9235e-02,  2.5767e-02, -3.7329e-03, -2.4445e-01,
         -1.5050e-02,  1.1596e-01,  4.3109e-01, -3.3703e-01, -5.6007e-01,
          6.0146e-02, -1.7343e-01, -4.4956e-01, -5.0107e-01,  1.9093e-01,
         -5.4200e-01,  8.8513e-02,  3.6542e-01,  1.3723e-01, -4.1438e-01,
          3.4423e-01, -6.0062e-01,  8.9705e-02,  7.5265e-02,  1.1250e-01,
         -2.5802e-01,  6.4073e-03, -1.8499e-01, -2.8792e-01,  2.0617e-01,
          1.4608e-01, -1.3166e-01,  1.5494e-01,  9.6296e-02,  2.7697e-01,
         -2.6419e-01, -2.7442e-02,  1.6601e-01,  1.6906e-01,  3.1592e-01,
         -8.7972e-02,  1.4145e-01,  9.3117e-02, -2.8389e-01, -1.7423e-01,
          7.5071e-02, -1.4285e-01,  3.4254e-01, -3.4473e-01,  3.8449e-01,
          2.1286e-01, -7.2320e-01,  1.2678e-01,  1.6465e-02, -2.5340e-01,
         -1.1439e-01,  7.6759e-02, -2.9383e-02,  5.0299e-02, -3.0289e-01,
          2.7956e-02, -2.4980e-01,  7.8466e-01, -1.6176e-01,  6.0039e-02,
          2.8677e-01, -1.9230e-01,  3.0793e-01, -9.1897e-02,  1.1007e-01,
         -6.8559e-03,  1.5627e-01, -2.9995e-02,  4.0142e-02, -4.1549e-02,
          3.0252e-03, -6.2477e-02, -2.6279e-02,  1.9655e-02,  3.2016e-03,
          1.8316e-01, -6.0149e-02,  5.0396e-03,  1.2027e-01,  3.3235e-02,
         -1.6187e-01, -1.0379e-01, -3.0168e-01, -5.2178e-02,  4.8271e-02,
          9.4871e-03,  3.5118e-02, -1.1535e-03, -1.0084e-01, -4.8873e-02,
         -1.4328e-01,  1.0114e-01, -7.6453e-02,  4.2968e-02, -4.8429e-02,
          3.3770e-02,  2.1851e-01, -1.8873e-01, -8.8326e-02, -1.5520e-01,
         -1.1686e-01, -2.3752e-01,  1.8250e-01, -6.0755e-02,  1.0078e-01,
         -1.2561e-01,  7.6346e-02,  1.7558e-01, -7.0504e-02, -2.1098e-01,
          7.0459e-02,  5.4222e-02,  1.3621e-01, -7.2984e-02,  6.2203e-02,
         -5.5395e-02]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
222000 特征值优化 tensor(0.6032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.2736e-01,  6.2153e-01, -8.7461e-01, -1.0566e+00,  2.8400e+00,
          2.4649e+00,  2.2709e+00,  2.3328e+00,  9.7053e-01,  6.8253e-02,
         -3.4740e-01, -7.4005e-01, -1.0611e-01, -5.3223e-01, -5.5588e-01,
          1.2928e+00,  4.9572e-01,  7.4493e-01, -1.2337e-01,  4.9063e-01,
          1.0534e-01, -2.0938e-02,  5.7376e-01, -1.2551e-01,  5.3682e-01,
         -2.7227e-01, -2.7158e-01,  2.3556e-01, -4.0578e-02,  1.3538e-01,
         -2.1409e-01, -3.0004e-01,  3.7266e-01, -4.6645e-02,  4.8547e-01,
          3.5599e-01,  4.7414e-01,  2.7830e-01, -8.8950e-02,  7.1165e-02,
         -1.1406e-03,  5.0627e-02,  2.3520e-02,  5.7577e-03, -2.4273e-01,
         -1.3254e-02,  9.6763e-02,  4.2867e-01, -3.2429e-01, -5.6446e-01,
          5.2559e-02, -1.7775e-01, -4.2945e-01, -4.9521e-01,  1.8420e-01,
         -5.4591e-01,  8.1293e-02,  3.6519e-01,  1.3789e-01, -4.1735e-01,
          3.4247e-01, -6.0261e-01,  9.4240e-02,  7.0554e-02,  1.2118e-01,
         -2.6338e-01,  7.3599e-03, -1.7846e-01, -2.9493e-01,  2.0563e-01,
          1.5340e-01, -1.2078e-01,  1.5778e-01,  9.6983e-02,  2.7972e-01,
         -2.7414e-01, -2.8953e-02,  1.6738e-01,  1.7287e-01,  3.1290e-01,
         -9.2464e-02,  1.4011e-01,  1.0059e-01, -2.8648e-01, -1.8234e-01,
          7.4886e-02, -1.4051e-01,  3.4081e-01, -3.4586e-01,  3.7595e-01,
          2.1950e-01, -7.2885e-01,  1.2337e-01,  1.6114e-02, -2.5602e-01,
         -1.1890e-01,  7.9914e-02, -2.8145e-02,  5.1969e-02, -2.9200e-01,
          3.0063e-02, -2.6531e-01,  7.8205e-01, -1.4925e-01,  7.2318e-02,
          2.7925e-01, -1.9268e-01,  3.1891e-01, -8.3918e-02,  1.0352e-01,
         -1.1587e-02,  1.5646e-01, -2.3991e-02,  3.9984e-02, -4.3864e-02,
          5.8228e-03, -6.6599e-02, -2.0383e-02,  1.8038e-02, -4.9345e-03,
          1.8430e-01, -5.7386e-02, -4.5763e-03,  1.2390e-01,  3.5922e-02,
         -1.6202e-01, -1.0320e-01, -3.0246e-01, -4.9393e-02,  4.4127e-02,
          1.3973e-02,  3.1753e-02, -1.3912e-03, -8.7938e-02, -4.9254e-02,
         -1.5080e-01,  1.0296e-01, -7.6275e-02,  3.4523e-02, -5.1814e-02,
          2.3952e-02,  2.1834e-01, -1.9624e-01, -9.2508e-02, -1.5935e-01,
         -1.2483e-01, -2.3570e-01,  1.8943e-01, -6.2108e-02,  9.8086e-02,
         -1.2560e-01,  7.9770e-02,  1.7330e-01, -7.4311e-02, -2.2003e-01,
          6.0002e-02,  5.6395e-02,  1.4456e-01, -6.1942e-02,  6.8712e-02,
         -5.7019e-02]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
223000 特征值优化 tensor(0.6079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.6708e-01,  6.3181e-01, -8.9806e-01, -1.0556e+00,  2.8619e+00,
          2.4714e+00,  2.2829e+00,  2.3549e+00,  9.6045e-01,  7.8070e-02,
         -3.2662e-01, -7.1691e-01, -8.8688e-02, -5.3552e-01, -5.6256e-01,
          1.2904e+00,  4.7963e-01,  7.3051e-01, -1.1590e-01,  5.1143e-01,
          1.1220e-01, -1.5294e-02,  5.6196e-01, -1.3363e-01,  5.3765e-01,
         -2.3460e-01, -2.8452e-01,  2.4122e-01, -6.1577e-02,  1.3318e-01,
         -2.3515e-01, -3.0354e-01,  3.7354e-01, -2.9067e-02,  4.9104e-01,
          3.5640e-01,  4.5519e-01,  2.9355e-01, -1.0711e-01,  7.0457e-02,
          8.3244e-03,  5.1436e-02,  2.2651e-02, -5.6546e-03, -2.3977e-01,
         -1.4302e-02,  8.4097e-02,  4.3584e-01, -3.2710e-01, -5.7065e-01,
          4.0808e-02, -1.7944e-01, -4.1992e-01, -5.0049e-01,  1.7351e-01,
         -5.3215e-01,  8.1384e-02,  3.7452e-01,  1.2710e-01, -4.0522e-01,
          3.6123e-01, -6.0558e-01,  9.1717e-02,  6.3420e-02,  1.0630e-01,
         -2.5118e-01,  1.0391e-02, -1.8785e-01, -2.7529e-01,  1.9444e-01,
          1.6774e-01, -1.0824e-01,  1.5463e-01,  8.4979e-02,  2.9575e-01,
         -2.6065e-01, -1.2681e-02,  1.5644e-01,  1.6110e-01,  3.2235e-01,
         -8.5985e-02,  1.3675e-01,  1.0097e-01, -2.6508e-01, -1.7739e-01,
          6.6664e-02, -1.6790e-01,  3.3550e-01, -3.5199e-01,  3.8841e-01,
          2.0554e-01, -7.2674e-01,  1.0756e-01,  1.4870e-02, -2.5106e-01,
         -1.1386e-01,  9.0331e-02, -1.5607e-02,  5.0428e-02, -2.7708e-01,
          4.6908e-02, -2.6579e-01,  7.8104e-01, -1.5428e-01,  6.1414e-02,
          2.8989e-01, -2.0870e-01,  3.3305e-01, -8.6263e-02,  9.7346e-02,
         -1.4987e-02,  1.3421e-01, -1.0758e-02,  4.7079e-02, -5.5037e-02,
          1.2589e-02, -6.9143e-02, -3.0086e-02,  2.9108e-02, -2.0131e-02,
          1.6748e-01, -6.1988e-02, -1.6376e-03,  1.2322e-01,  3.8789e-02,
         -1.5487e-01, -1.1659e-01, -2.9881e-01, -4.9761e-02,  4.7647e-02,
          2.0278e-02,  4.0535e-02, -9.6768e-04, -9.8057e-02, -4.7136e-02,
         -1.4372e-01,  1.2313e-01, -9.3835e-02,  5.1082e-02, -3.6856e-02,
          3.7839e-03,  2.3195e-01, -1.7222e-01, -1.1592e-01, -1.7208e-01,
         -1.2773e-01, -2.3449e-01,  1.7240e-01, -5.5577e-02,  9.6487e-02,
         -1.3176e-01,  5.8626e-02,  1.7168e-01, -8.8096e-02, -2.0002e-01,
          7.0785e-02,  5.8477e-02,  1.5574e-01, -7.1690e-02,  6.7717e-02,
         -5.5826e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
224000 特征值优化 tensor(0.6021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.1054e-01,  6.6255e-01, -9.1740e-01, -1.0569e+00,  2.8732e+00,
          2.4626e+00,  2.3009e+00,  2.3734e+00,  9.6931e-01,  9.1417e-02,
         -3.1623e-01, -7.1310e-01, -6.4711e-02, -5.3789e-01, -5.5656e-01,
          1.2742e+00,  4.8313e-01,  7.2964e-01, -1.1787e-01,  5.1205e-01,
          1.3189e-01, -2.9783e-02,  5.3897e-01, -1.2290e-01,  5.6994e-01,
         -2.3773e-01, -2.8935e-01,  2.6074e-01, -8.0784e-02,  1.3382e-01,
         -2.4100e-01, -3.1655e-01,  3.6411e-01, -2.2298e-02,  4.9262e-01,
          3.4834e-01,  4.7663e-01,  2.9994e-01, -1.2509e-01,  7.3763e-02,
         -3.2656e-03,  5.2417e-02,  2.0945e-02, -3.6756e-03, -2.4084e-01,
         -1.8170e-02,  7.4984e-02,  4.4171e-01, -3.1782e-01, -5.7675e-01,
          4.4832e-02, -1.7929e-01, -4.1909e-01, -4.9877e-01,  1.7882e-01,
         -5.2262e-01,  8.9382e-02,  3.6292e-01,  1.2947e-01, -4.0261e-01,
          3.5056e-01, -6.0393e-01,  9.8652e-02,  5.9955e-02,  1.0393e-01,
         -2.4021e-01,  3.2093e-03, -1.8666e-01, -2.6838e-01,  1.8755e-01,
          1.6323e-01, -1.1451e-01,  1.5547e-01,  8.0878e-02,  3.0029e-01,
         -2.3677e-01, -5.5751e-03,  1.6820e-01,  1.5508e-01,  3.2432e-01,
         -7.7890e-02,  1.3484e-01,  9.3447e-02, -2.7606e-01, -1.6879e-01,
          9.2836e-02, -1.7478e-01,  3.2792e-01, -3.6489e-01,  3.6762e-01,
          1.9194e-01, -7.2933e-01,  9.1766e-02,  1.5808e-02, -2.5822e-01,
         -1.0809e-01,  1.0496e-01, -1.0981e-02,  1.1239e-02, -2.9205e-01,
          4.8316e-02, -2.4979e-01,  8.0405e-01, -1.5711e-01,  6.6508e-02,
          2.9669e-01, -2.2455e-01,  3.2944e-01, -1.0995e-01,  8.8705e-02,
         -1.5074e-02,  1.1692e-01, -3.5150e-03,  4.6081e-02, -4.8080e-02,
          2.0209e-02, -7.7356e-02, -3.2537e-02,  2.2811e-02, -2.8361e-02,
          1.6474e-01, -7.1237e-02, -3.1904e-03,  1.1900e-01,  3.2113e-02,
         -1.5154e-01, -1.0543e-01, -2.9269e-01, -5.0041e-02,  4.0099e-02,
          1.0700e-02,  4.0798e-02,  3.5657e-03, -9.7250e-02, -4.0689e-02,
         -1.5452e-01,  1.4954e-01, -8.5441e-02,  5.4593e-02, -1.8326e-02,
         -1.4015e-03,  2.3671e-01, -1.7579e-01, -1.2659e-01, -1.8449e-01,
         -1.1677e-01, -2.4201e-01,  1.7108e-01, -4.6329e-02,  9.0401e-02,
         -1.4768e-01,  6.3558e-02,  1.7842e-01, -9.8170e-02, -1.9574e-01,
          9.3349e-02,  5.0235e-02,  1.2868e-01, -7.3046e-02,  7.2268e-02,
         -6.7478e-02]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
225000 特征值优化 tensor(0.6462, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.5725e-01,  6.5849e-01, -8.9195e-01, -1.0575e+00,  2.8697e+00,
          2.4650e+00,  2.3007e+00,  2.3640e+00,  9.9533e-01,  9.6193e-02,
         -2.9699e-01, -7.5282e-01, -7.0042e-02, -4.9313e-01, -5.3332e-01,
          1.2945e+00,  4.6960e-01,  7.1218e-01, -1.2147e-01,  5.0000e-01,
          1.2898e-01, -1.9002e-02,  5.4654e-01, -1.1416e-01,  5.7311e-01,
         -2.4700e-01, -2.8878e-01,  2.6063e-01, -4.9383e-02,  1.3087e-01,
         -2.5480e-01, -3.0623e-01,  3.7808e-01, -4.6054e-02,  5.0715e-01,
          3.5518e-01,  4.9513e-01,  2.8061e-01, -8.3772e-02,  7.6209e-02,
         -9.6041e-03,  5.2067e-02,  2.2457e-02,  3.6704e-03, -2.3861e-01,
         -2.1956e-02,  5.4229e-02,  4.3623e-01, -2.9903e-01, -5.8497e-01,
          4.3670e-02, -1.7650e-01, -4.0447e-01, -4.8594e-01,  1.9098e-01,
         -5.3636e-01,  8.6393e-02,  3.4843e-01,  1.3363e-01, -4.1102e-01,
          3.3595e-01, -6.0680e-01,  9.9663e-02,  5.6743e-02,  1.0816e-01,
         -2.3861e-01, -6.0196e-03, -1.7564e-01, -2.8530e-01,  1.9754e-01,
          1.5613e-01, -1.1132e-01,  1.6404e-01,  1.0435e-01,  2.7796e-01,
         -2.7599e-01, -1.6222e-02,  1.7004e-01,  1.9115e-01,  3.1514e-01,
         -8.5389e-02,  1.3070e-01,  1.0812e-01, -3.0437e-01, -1.7529e-01,
          7.8043e-02, -1.4948e-01,  3.1526e-01, -3.6735e-01,  3.5488e-01,
          2.0138e-01, -7.3205e-01,  9.8896e-02, -1.0891e-02, -2.5816e-01,
         -1.1371e-01,  1.2664e-01, -2.9064e-02,  5.4308e-03, -2.6479e-01,
          5.4620e-02, -2.5532e-01,  7.8014e-01, -1.4961e-01,  8.5477e-02,
          3.0098e-01, -2.2591e-01,  3.2403e-01, -9.4610e-02,  8.1902e-02,
         -1.7826e-02,  1.4609e-01, -1.8488e-02,  4.5263e-02, -5.2954e-02,
          6.2484e-03, -6.0458e-02, -2.2051e-02,  3.1590e-02, -3.9617e-02,
          1.6232e-01, -5.7812e-02, -1.6465e-02,  1.2338e-01,  2.9116e-02,
         -1.5404e-01, -9.5605e-02, -2.9781e-01, -4.5948e-02,  3.9944e-02,
          1.5992e-02,  4.2203e-02,  1.2635e-03, -8.3515e-02, -4.9983e-02,
         -1.4920e-01,  1.1508e-01, -7.2413e-02,  4.5235e-02, -3.8795e-02,
          9.6465e-03,  2.0212e-01, -1.9625e-01, -1.2636e-01, -1.6570e-01,
         -1.3932e-01, -2.3614e-01,  1.9651e-01, -5.7014e-02,  8.9237e-02,
         -1.3974e-01,  9.5579e-02,  1.6241e-01, -8.8717e-02, -2.1877e-01,
          5.8349e-02,  6.2453e-02,  1.4752e-01, -6.3110e-02,  7.8475e-02,
         -6.1002e-02]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
226000 特征值优化 tensor(0.6039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5883,  0.6774, -0.9058, -1.0565,  2.8568,  2.4730,  2.3213,  2.3946,
          0.9669,  0.0994, -0.2772, -0.7366, -0.0447, -0.5053, -0.5248,  1.2863,
          0.4565,  0.6980, -0.1106,  0.5091,  0.1447, -0.0093,  0.5346, -0.1301,
          0.5830, -0.2198, -0.2660,  0.2741, -0.0688,  0.1309, -0.2659, -0.3119,
          0.3668, -0.0160,  0.5230,  0.3590,  0.4837,  0.2900, -0.1161,  0.0689,
          0.0050,  0.0521,  0.0247,  0.0052, -0.2385, -0.0253,  0.0502,  0.4365,
         -0.2958, -0.5921,  0.0432, -0.1744, -0.4000, -0.4850,  0.1812, -0.5118,
          0.0692,  0.3574,  0.1202, -0.4083,  0.3304, -0.6087,  0.0949,  0.0576,
          0.0939, -0.2338, -0.0053, -0.1814, -0.2703,  0.1884,  0.1643, -0.1057,
          0.1629,  0.0924,  0.2944, -0.2366, -0.0071,  0.2037,  0.1611,  0.3223,
         -0.0720,  0.1276,  0.1039, -0.2911, -0.1746,  0.0894, -0.1864,  0.3057,
         -0.3804,  0.3524,  0.1941, -0.7422,  0.0958,  0.0140, -0.2582, -0.1144,
          0.1436, -0.0124, -0.0319, -0.2655,  0.0739, -0.2636,  0.7802, -0.1510,
          0.0779,  0.3032, -0.2381,  0.3425, -0.0833,  0.0772, -0.0141,  0.1202,
          0.0038,  0.0340, -0.0568,  0.0249, -0.0678, -0.0312,  0.0426, -0.0485,
          0.1554, -0.0694, -0.0115,  0.1295,  0.0334, -0.1493, -0.1030, -0.2953,
         -0.0493,  0.0352,  0.0175,  0.0461,  0.0034, -0.0958, -0.0422, -0.1682,
          0.1398, -0.0858,  0.0464, -0.0308,  0.0040,  0.2406, -0.1908, -0.1393,
         -0.1940, -0.1393, -0.2478,  0.1823, -0.0430,  0.0930, -0.1498,  0.0778,
          0.1582, -0.1051, -0.2087,  0.0804,  0.0525,  0.1398, -0.0674,  0.0869,
         -0.0614]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
227000 特征值优化 tensor(0.6041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.3395e-01,  7.0288e-01, -9.1789e-01, -1.0555e+00,  2.8926e+00,
          2.4739e+00,  2.3390e+00,  2.4168e+00,  9.7400e-01,  9.5299e-02,
         -2.5762e-01, -7.6437e-01, -5.4043e-02, -4.8665e-01, -4.8177e-01,
          1.2845e+00,  4.4124e-01,  6.7580e-01, -1.1550e-01,  5.2939e-01,
          1.6422e-01, -1.7187e-02,  5.3632e-01, -9.5564e-02,  5.9265e-01,
         -1.9601e-01, -2.9054e-01,  2.7453e-01, -5.2248e-02,  1.3161e-01,
         -2.6610e-01, -2.9699e-01,  3.6148e-01, -1.4002e-02,  5.3654e-01,
          3.6224e-01,  4.8679e-01,  2.8226e-01, -9.1877e-02,  7.1642e-02,
          6.2790e-03,  5.2006e-02,  2.4462e-02,  6.1886e-03, -2.3780e-01,
         -2.5224e-02,  4.5828e-02,  4.3935e-01, -2.9385e-01, -6.1436e-01,
          4.4107e-02, -1.8437e-01, -3.8857e-01, -4.8120e-01,  1.8767e-01,
         -5.0693e-01,  8.3739e-02,  3.5224e-01,  1.2614e-01, -4.1773e-01,
          3.1856e-01, -6.1296e-01,  9.4417e-02,  6.9824e-02,  1.0177e-01,
         -2.2932e-01, -1.6765e-02, -1.7488e-01, -2.8056e-01,  1.8947e-01,
          1.5083e-01, -1.0632e-01,  1.6235e-01,  1.0295e-01,  2.8366e-01,
         -2.7415e-01, -7.2124e-03,  1.9598e-01,  1.7858e-01,  3.1253e-01,
         -8.4988e-02,  1.2554e-01,  1.0595e-01, -2.8716e-01, -1.8405e-01,
          7.1259e-02, -1.7347e-01,  2.9017e-01, -3.8994e-01,  3.3284e-01,
          1.8707e-01, -7.3972e-01,  1.0248e-01, -1.3285e-02, -2.5718e-01,
         -1.0992e-01,  1.5440e-01, -4.3674e-02, -4.9482e-02, -2.6831e-01,
          9.2536e-02, -2.5778e-01,  7.7642e-01, -1.5407e-01,  7.2317e-02,
          3.1722e-01, -2.4666e-01,  3.4031e-01, -8.9509e-02,  7.3690e-02,
         -1.1070e-02,  1.3731e-01, -1.4266e-03,  2.8411e-02, -6.2871e-02,
          2.1041e-02, -6.8289e-02, -2.2948e-02,  4.5287e-02, -5.8620e-02,
          1.5196e-01, -5.8961e-02, -2.1326e-02,  1.2731e-01,  4.1467e-02,
         -1.5017e-01, -1.0186e-01, -2.9658e-01, -5.3854e-02,  3.3889e-02,
          2.0420e-02,  4.5474e-02,  1.1315e-03, -8.1549e-02, -5.2563e-02,
         -1.3150e-01,  1.2099e-01, -1.0350e-01,  6.9179e-02, -5.7765e-02,
          2.2231e-03,  2.3290e-01, -1.8048e-01, -1.5961e-01, -1.7477e-01,
         -1.4531e-01, -2.2967e-01,  1.8861e-01, -5.2052e-02,  1.1007e-01,
         -1.4053e-01,  8.7794e-02,  1.5071e-01, -1.0519e-01, -2.1032e-01,
          6.4903e-02,  5.3036e-02,  1.5298e-01, -6.2533e-02,  8.5003e-02,
         -6.2062e-02]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
228000 特征值优化 tensor(0.5984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.8721e-01,  6.9931e-01, -9.0346e-01, -1.0564e+00,  2.9111e+00,
          2.4663e+00,  2.3327e+00,  2.4069e+00,  9.9503e-01,  8.9968e-02,
         -2.2997e-01, -7.8440e-01, -2.3098e-02, -4.6454e-01, -4.6936e-01,
          1.2835e+00,  4.3476e-01,  6.7587e-01, -1.1018e-01,  5.1185e-01,
          1.7025e-01, -1.9609e-02,  5.5556e-01, -9.8622e-02,  5.8067e-01,
         -1.9487e-01, -3.1217e-01,  2.9134e-01, -3.9490e-02,  1.3708e-01,
         -2.5686e-01, -2.9876e-01,  3.4050e-01, -1.8359e-02,  5.4191e-01,
          3.7183e-01,  5.0831e-01,  2.7850e-01, -8.1180e-02,  7.8553e-02,
         -7.1759e-03,  5.3034e-02,  2.4088e-02,  1.4166e-02, -2.4240e-01,
         -1.8696e-02,  3.3043e-02,  4.4746e-01, -2.7027e-01, -6.1414e-01,
          4.1887e-02, -1.6952e-01, -3.7868e-01, -4.6779e-01,  1.9585e-01,
         -5.1300e-01,  8.6427e-02,  3.2014e-01,  1.2345e-01, -4.2676e-01,
          2.9723e-01, -6.1421e-01,  8.9321e-02,  6.8774e-02,  9.3874e-02,
         -2.2983e-01, -9.6409e-03, -1.6061e-01, -2.9380e-01,  1.9264e-01,
          1.5207e-01, -9.9994e-02,  1.6205e-01,  9.4735e-02,  2.9185e-01,
         -2.6890e-01, -1.2994e-02,  1.8809e-01,  1.8828e-01,  3.0541e-01,
         -8.3676e-02,  1.3110e-01,  1.0365e-01, -3.2819e-01, -1.9301e-01,
          6.8271e-02, -1.4629e-01,  2.8080e-01, -4.2901e-01,  3.2483e-01,
          1.8230e-01, -7.2996e-01,  9.9626e-02, -3.2614e-02, -2.5839e-01,
         -1.1027e-01,  1.6889e-01, -6.9972e-02, -5.2034e-02, -2.6223e-01,
          9.0220e-02, -2.5199e-01,  7.6822e-01, -1.5533e-01,  8.9753e-02,
          3.3148e-01, -2.4360e-01,  3.4050e-01, -1.0174e-01,  7.2420e-02,
         -7.6837e-03,  1.4413e-01, -5.5200e-03,  2.4001e-02, -7.2550e-02,
          1.6560e-02, -6.2292e-02, -1.3309e-02,  4.9286e-02, -5.3682e-02,
          1.6257e-01, -5.4645e-02, -2.9334e-02,  1.3106e-01,  3.4636e-02,
         -1.4737e-01, -9.5803e-02, -3.0277e-01, -5.3581e-02,  2.4181e-02,
          1.7474e-02,  4.8324e-02,  1.0904e-03, -7.2426e-02, -5.3797e-02,
         -1.6501e-01,  1.2031e-01, -8.5344e-02,  6.9785e-02, -4.2786e-02,
          3.7960e-03,  2.0697e-01, -2.0435e-01, -1.5449e-01, -1.5660e-01,
         -1.6016e-01, -2.3745e-01,  2.0388e-01, -5.4673e-02,  1.1097e-01,
         -1.3956e-01,  1.0847e-01,  1.5717e-01, -1.0254e-01, -2.1582e-01,
          6.2287e-02,  6.7221e-02,  1.5373e-01, -6.3928e-02,  8.3160e-02,
         -7.9595e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
229000 特征值优化 tensor(0.6020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.0723e-01,  6.7404e-01, -9.1605e-01, -1.0557e+00,  2.9373e+00,
          2.4753e+00,  2.3468e+00,  2.4391e+00,  9.7642e-01,  9.1918e-02,
         -2.1128e-01, -7.6991e-01,  4.9376e-03, -4.9483e-01, -4.7685e-01,
          1.2836e+00,  4.3390e-01,  6.6622e-01, -8.5613e-02,  5.2393e-01,
          1.7000e-01, -2.1268e-02,  5.3627e-01, -1.1026e-01,  5.7851e-01,
         -1.7314e-01, -3.1811e-01,  2.9898e-01, -5.9167e-02,  1.3691e-01,
         -2.6555e-01, -3.0973e-01,  3.4228e-01, -6.1542e-03,  5.3926e-01,
          3.6798e-01,  4.9618e-01,  2.9706e-01, -1.1421e-01,  7.3834e-02,
          7.4702e-03,  5.0904e-02,  2.4086e-02,  1.2092e-03, -2.4431e-01,
         -2.5076e-02,  2.6706e-02,  4.3736e-01, -2.8419e-01, -6.1331e-01,
          4.7319e-02, -1.5653e-01, -3.7520e-01, -4.6418e-01,  1.9108e-01,
         -4.8470e-01,  7.8357e-02,  3.2717e-01,  1.2508e-01, -4.2070e-01,
          2.9675e-01, -6.1343e-01,  8.4953e-02,  5.7450e-02,  8.0939e-02,
         -2.2518e-01, -2.4655e-02, -1.7130e-01, -2.7358e-01,  1.9262e-01,
          1.6390e-01, -1.0004e-01,  1.6619e-01,  8.7434e-02,  3.0530e-01,
         -2.4236e-01, -4.3743e-03,  1.9646e-01,  1.4637e-01,  3.1456e-01,
         -7.4348e-02,  1.4283e-01,  9.4864e-02, -3.0094e-01, -1.9009e-01,
          8.1465e-02, -1.8433e-01,  2.7564e-01, -4.2253e-01,  3.1476e-01,
          1.7965e-01, -7.3026e-01,  7.7242e-02, -3.7372e-03, -2.5521e-01,
         -1.1006e-01,  1.7883e-01, -3.4572e-02, -8.5063e-02, -2.3686e-01,
          1.0632e-01, -2.5599e-01,  7.7712e-01, -1.5349e-01,  8.5101e-02,
          3.1205e-01, -2.5432e-01,  3.5690e-01, -1.1221e-01,  6.9438e-02,
         -6.0720e-03,  1.1710e-01,  1.4378e-02,  2.4856e-02, -4.8293e-02,
          3.7237e-02, -6.4324e-02, -3.1050e-02,  5.3710e-02, -5.5186e-02,
          1.4463e-01, -7.3536e-02, -2.0015e-02,  1.2655e-01,  4.2579e-02,
         -1.5940e-01, -9.1116e-02, -2.8720e-01, -5.7690e-02,  1.8824e-02,
          2.4793e-02,  5.0170e-02, -1.8118e-03, -9.1602e-02, -4.7154e-02,
         -1.5715e-01,  1.5786e-01, -9.7920e-02,  7.1334e-02, -4.8065e-02,
         -7.4151e-03,  2.4759e-01, -1.9477e-01, -1.6338e-01, -1.8475e-01,
         -1.3303e-01, -2.3928e-01,  1.8024e-01, -4.1672e-02,  1.2037e-01,
         -1.4021e-01,  8.9103e-02,  1.5459e-01, -1.1281e-01, -2.1475e-01,
          9.3980e-02,  6.6915e-02,  1.4741e-01, -7.7538e-02,  8.8657e-02,
         -7.8715e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
230000 特征值优化 tensor(0.5979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.5857e-01,  6.6213e-01, -9.1848e-01, -1.0556e+00,  2.9455e+00,
          2.4820e+00,  2.3665e+00,  2.4612e+00,  1.0219e+00,  9.1315e-02,
         -1.9412e-01, -8.0114e-01,  2.8133e-02, -4.5999e-01, -4.5743e-01,
          1.2945e+00,  4.4474e-01,  6.7292e-01, -9.2491e-02,  5.1316e-01,
          1.7096e-01, -3.5231e-02,  5.3444e-01, -7.1303e-02,  5.7242e-01,
         -1.6567e-01, -3.4506e-01,  3.1572e-01, -4.9994e-02,  1.3671e-01,
         -2.5718e-01, -2.9447e-01,  3.2255e-01, -8.5009e-03,  5.4056e-01,
          3.6216e-01,  5.0977e-01,  2.8131e-01, -9.0159e-02,  7.5797e-02,
         -1.8877e-02,  5.3715e-02,  2.3605e-02,  1.3664e-02, -2.3998e-01,
         -3.3765e-02,  1.8462e-02,  4.4186e-01, -2.6697e-01, -6.2121e-01,
          4.9800e-02, -1.5418e-01, -3.6290e-01, -4.5624e-01,  2.0667e-01,
         -5.0075e-01,  8.8669e-02,  2.9592e-01,  1.3423e-01, -4.2741e-01,
          2.8225e-01, -6.1436e-01,  8.6337e-02,  5.0995e-02,  8.4243e-02,
         -2.2972e-01, -1.5671e-02, -1.5361e-01, -2.9166e-01,  1.9405e-01,
          1.4930e-01, -9.2955e-02,  1.7132e-01,  9.5714e-02,  2.8731e-01,
         -2.6694e-01, -8.4612e-03,  2.3668e-01,  1.6149e-01,  3.0838e-01,
         -8.1497e-02,  1.4037e-01,  9.8775e-02, -3.2611e-01, -1.8860e-01,
          6.9296e-02, -1.4774e-01,  2.6399e-01, -4.6435e-01,  2.7128e-01,
          1.7899e-01, -7.0999e-01,  8.2979e-02, -1.9975e-02, -2.6766e-01,
         -1.0311e-01,  1.8729e-01, -3.0877e-02, -9.8227e-02, -2.4806e-01,
          7.1301e-02, -2.5922e-01,  7.7539e-01, -1.5516e-01,  9.8619e-02,
          3.0999e-01, -2.5333e-01,  3.5127e-01, -1.2962e-01,  6.8454e-02,
         -9.1564e-03,  1.3980e-01,  3.4709e-04,  1.5287e-02, -5.4650e-02,
          1.3798e-02, -5.2482e-02, -2.2702e-02,  5.3308e-02, -5.5147e-02,
          1.5304e-01, -6.0351e-02, -1.8989e-02,  1.2208e-01,  3.3531e-02,
         -1.5977e-01, -9.5108e-02, -2.9650e-01, -6.5781e-02,  2.2073e-02,
          2.3212e-02,  4.2337e-02,  3.1096e-03, -7.0049e-02, -5.2665e-02,
         -1.8010e-01,  1.4365e-01, -6.9626e-02,  6.3676e-02, -5.0044e-02,
          4.9208e-03,  2.0362e-01, -2.1862e-01, -1.2735e-01, -1.5649e-01,
         -1.4016e-01, -2.3566e-01,  1.9792e-01, -3.9407e-02,  1.2440e-01,
         -1.3875e-01,  1.0339e-01,  1.6073e-01, -1.0668e-01, -2.1063e-01,
          6.8649e-02,  6.1541e-02,  1.4619e-01, -6.9153e-02,  8.5102e-02,
         -9.5478e-02]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
231000 特征值优化 tensor(0.5979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.8390e-01,  6.7636e-01, -9.4291e-01, -1.0557e+00,  2.9764e+00,
          2.4845e+00,  2.3856e+00,  2.4954e+00,  1.0319e+00,  9.6121e-02,
         -1.5878e-01, -8.0371e-01,  4.8822e-02, -4.4674e-01, -4.1746e-01,
          1.2954e+00,  4.2001e-01,  6.6021e-01, -7.4556e-02,  5.2262e-01,
          1.5053e-01, -3.4005e-02,  5.2125e-01, -5.7117e-02,  5.7900e-01,
         -1.4997e-01, -3.5575e-01,  3.1852e-01, -4.9882e-02,  1.3451e-01,
         -2.7214e-01, -2.9996e-01,  3.1140e-01, -3.8120e-03,  5.4216e-01,
          3.5610e-01,  5.2217e-01,  2.7553e-01, -9.1885e-02,  6.6612e-02,
         -1.0344e-02,  5.2851e-02,  2.4714e-02,  1.9120e-03, -2.3970e-01,
         -2.6078e-02,  5.0813e-04,  4.4273e-01, -2.6673e-01, -6.2278e-01,
          4.9702e-02, -1.3390e-01, -3.5305e-01, -4.4622e-01,  2.1093e-01,
         -4.9445e-01,  8.1035e-02,  2.7638e-01,  1.3364e-01, -4.2004e-01,
          2.7982e-01, -6.1232e-01,  7.3770e-02,  5.2055e-02,  8.4533e-02,
         -2.2142e-01, -2.9602e-02, -1.5244e-01, -2.8725e-01,  1.8748e-01,
          1.5779e-01, -9.7163e-02,  1.7289e-01,  1.0370e-01,  2.8388e-01,
         -2.6990e-01, -5.5011e-03,  2.4303e-01,  1.5355e-01,  3.1288e-01,
         -7.7548e-02,  1.3446e-01,  1.0016e-01, -3.3038e-01, -1.9496e-01,
          7.5625e-02, -1.5390e-01,  2.4688e-01, -4.6116e-01,  2.5655e-01,
          1.6184e-01, -6.8848e-01,  7.3916e-02, -1.9379e-02, -2.6356e-01,
         -1.0223e-01,  2.0856e-01, -2.7374e-02, -1.5874e-01, -2.4629e-01,
          7.7438e-02, -2.5003e-01,  7.7212e-01, -1.5776e-01,  1.0242e-01,
          3.2449e-01, -2.6075e-01,  3.5214e-01, -1.4583e-01,  6.4323e-02,
         -1.0049e-02,  1.2821e-01,  7.5989e-03,  1.4439e-02, -4.4807e-02,
          2.4194e-02, -4.9561e-02, -2.5793e-02,  4.8731e-02, -6.3276e-02,
          1.4314e-01, -6.3597e-02, -2.6725e-02,  1.2077e-01,  3.9846e-02,
         -1.6273e-01, -8.5635e-02, -2.8967e-01, -6.9890e-02,  1.6214e-02,
          1.9881e-02,  4.2266e-02,  5.6704e-03, -7.6490e-02, -5.0104e-02,
         -1.6445e-01,  1.5125e-01, -8.4884e-02,  5.7664e-02, -7.3454e-02,
          1.2509e-02,  2.1767e-01, -2.2311e-01, -1.2960e-01, -1.5608e-01,
         -1.4388e-01, -2.3215e-01,  1.9760e-01, -3.3825e-02,  1.2583e-01,
         -1.5015e-01,  1.0803e-01,  1.5210e-01, -1.0377e-01, -2.1816e-01,
          8.9161e-02,  5.9519e-02,  1.3007e-01, -7.1342e-02,  8.4717e-02,
         -9.7782e-02]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
232000 特征值优化 tensor(0.5971, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.4915e-01,  6.6887e-01, -9.5252e-01, -1.0552e+00,  2.9812e+00,
          2.4915e+00,  2.3987e+00,  2.5179e+00,  1.0343e+00,  1.0303e-01,
         -1.4571e-01, -8.0396e-01,  6.9203e-02, -4.5756e-01, -3.9679e-01,
          1.2977e+00,  3.9132e-01,  6.5383e-01, -6.0487e-02,  5.1336e-01,
          1.6392e-01, -3.0436e-02,  5.1184e-01, -6.2675e-02,  5.8710e-01,
         -1.4307e-01, -3.7575e-01,  3.1969e-01, -5.0291e-02,  1.3828e-01,
         -2.6694e-01, -2.9384e-01,  3.1042e-01, -3.8040e-03,  5.4707e-01,
          3.5605e-01,  5.2483e-01,  2.7950e-01, -8.8941e-02,  6.3192e-02,
         -1.3553e-02,  5.4313e-02,  2.4941e-02,  1.3203e-03, -2.4295e-01,
         -2.6306e-02, -1.3496e-02,  4.4619e-01, -2.5715e-01, -6.2269e-01,
          5.1077e-02, -1.3405e-01, -3.4304e-01, -4.3801e-01,  2.1135e-01,
         -4.8558e-01,  7.5244e-02,  2.6413e-01,  1.2911e-01, -4.2081e-01,
          2.7534e-01, -6.0839e-01,  5.3946e-02,  5.3103e-02,  6.7316e-02,
         -2.1327e-01, -3.1472e-02, -1.4579e-01, -2.8919e-01,  1.8264e-01,
          1.6046e-01, -9.7058e-02,  1.7081e-01,  1.0174e-01,  2.9028e-01,
         -2.8007e-01,  1.5445e-03,  2.3731e-01,  1.5667e-01,  3.1031e-01,
         -8.0561e-02,  1.3160e-01,  1.0199e-01, -3.4032e-01, -1.9910e-01,
          6.8640e-02, -1.5781e-01,  2.4027e-01, -4.7545e-01,  2.3571e-01,
          1.5906e-01, -6.9661e-01,  7.1131e-02, -4.0141e-02, -2.6481e-01,
         -1.0123e-01,  2.2534e-01, -4.2484e-02, -1.6182e-01, -2.3676e-01,
          7.2888e-02, -2.5502e-01,  7.7826e-01, -1.4871e-01,  1.0584e-01,
          3.1553e-01, -2.6640e-01,  3.6316e-01, -1.4798e-01,  6.2431e-02,
         -1.4282e-02,  1.3069e-01,  1.6586e-02,  1.2398e-02, -4.9606e-02,
          2.9746e-02, -5.1672e-02, -1.8473e-02,  5.9044e-02, -7.7458e-02,
          1.3863e-01, -5.9960e-02, -3.2964e-02,  1.2337e-01,  4.0950e-02,
         -1.6161e-01, -7.9894e-02, -2.8307e-01, -6.5868e-02,  1.2040e-02,
          2.2091e-02,  4.0898e-02,  2.9909e-03, -7.3495e-02, -5.0383e-02,
         -1.6169e-01,  1.5272e-01, -8.8217e-02,  7.1313e-02, -7.0953e-02,
          9.1195e-03,  2.0445e-01, -2.1859e-01, -1.4758e-01, -1.4333e-01,
         -1.3975e-01, -2.4088e-01,  2.0776e-01, -3.3305e-02,  1.2561e-01,
         -1.5512e-01,  1.1050e-01,  1.4443e-01, -9.9869e-02, -2.1600e-01,
          8.0161e-02,  6.3657e-02,  1.4242e-01, -6.5362e-02,  8.2676e-02,
         -1.0061e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
233000 特征值优化 tensor(0.5977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.0626e-01,  6.7925e-01, -9.4305e-01, -1.0574e+00,  2.9832e+00,
          2.5073e+00,  2.4264e+00,  2.5384e+00,  1.0308e+00,  1.0686e-01,
         -1.2284e-01, -7.9810e-01,  6.4431e-02, -4.6020e-01, -3.7260e-01,
          1.3007e+00,  3.8670e-01,  6.3922e-01, -6.3793e-02,  5.3696e-01,
          1.7523e-01, -1.1165e-02,  5.3120e-01, -7.5740e-02,  5.9184e-01,
         -1.4865e-01, -3.9231e-01,  3.2944e-01, -3.9345e-02,  1.4601e-01,
         -2.6529e-01, -2.9466e-01,  3.2558e-01, -1.1080e-02,  5.6557e-01,
          3.6958e-01,  5.2874e-01,  2.7621e-01, -8.4736e-02,  5.7763e-02,
         -8.1352e-03,  5.4058e-02,  2.3523e-02,  3.5686e-03, -2.5364e-01,
         -2.2327e-02, -1.9559e-02,  4.3764e-01, -2.5412e-01, -6.2090e-01,
          4.5505e-02, -1.4079e-01, -3.3431e-01, -4.4177e-01,  2.0856e-01,
         -4.6910e-01,  5.8583e-02,  2.5053e-01,  1.1316e-01, -4.2444e-01,
          2.6566e-01, -6.0558e-01,  4.6837e-02,  5.4920e-02,  5.8537e-02,
         -2.0414e-01, -3.5442e-02, -1.3854e-01, -2.9208e-01,  1.8552e-01,
          1.5032e-01, -9.4218e-02,  1.6160e-01,  1.1575e-01,  2.8875e-01,
         -2.7470e-01, -5.8494e-03,  2.5481e-01,  1.3825e-01,  3.0319e-01,
         -8.1651e-02,  1.2618e-01,  1.0666e-01, -3.3721e-01, -1.9718e-01,
          7.5909e-02, -1.6528e-01,  2.4792e-01, -4.4548e-01,  2.3929e-01,
          1.6040e-01, -6.9904e-01,  7.3691e-02, -3.9184e-02, -2.5991e-01,
         -1.0130e-01,  2.2939e-01, -4.0104e-02, -1.7095e-01, -2.1421e-01,
          8.7267e-02, -2.5188e-01,  7.5509e-01, -1.3354e-01,  1.0978e-01,
          2.9996e-01, -2.6011e-01,  3.5821e-01, -1.4321e-01,  6.0295e-02,
         -1.2726e-02,  1.2972e-01,  4.2688e-02,  7.2007e-03, -6.3338e-02,
          3.6112e-02, -4.9460e-02, -1.1330e-02,  6.0836e-02, -8.2864e-02,
          1.3595e-01, -6.0028e-02, -3.4713e-02,  1.2515e-01,  3.8796e-02,
         -1.6168e-01, -7.8826e-02, -2.7867e-01, -6.9946e-02,  1.3898e-02,
          1.8078e-02,  3.6841e-02,  1.7376e-03, -7.8857e-02, -5.2888e-02,
         -1.4597e-01,  1.5057e-01, -8.6428e-02,  5.1347e-02, -6.4854e-02,
          2.1138e-02,  2.0058e-01, -2.3123e-01, -1.3656e-01, -1.4975e-01,
         -1.4619e-01, -2.3260e-01,  2.1708e-01, -3.5237e-02,  1.2245e-01,
         -1.4377e-01,  1.1439e-01,  1.3765e-01, -1.0272e-01, -2.2152e-01,
          7.0746e-02,  7.7593e-02,  1.5584e-01, -6.6998e-02,  7.9980e-02,
         -8.8088e-02]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
234000 特征值优化 tensor(0.6028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.5068e-01,  6.7600e-01, -9.6080e-01, -1.0555e+00,  3.0029e+00,
          2.5162e+00,  2.4484e+00,  2.5566e+00,  1.0261e+00,  1.0924e-01,
         -1.0657e-01, -7.6613e-01,  9.1097e-02, -4.7307e-01, -3.7172e-01,
          1.3126e+00,  3.7536e-01,  6.3070e-01, -6.3233e-02,  5.5350e-01,
          1.7848e-01, -2.6175e-02,  5.2325e-01, -8.7161e-02,  6.0407e-01,
         -1.1013e-01, -3.9142e-01,  3.5030e-01, -5.9063e-02,  1.5267e-01,
         -2.7699e-01, -2.9216e-01,  3.0318e-01,  1.5842e-02,  5.6486e-01,
          3.5818e-01,  5.0649e-01,  2.8685e-01, -1.1135e-01,  5.5968e-02,
          1.8122e-03,  5.3064e-02,  2.2958e-02, -1.1095e-02, -2.5854e-01,
         -7.6956e-03, -2.5442e-02,  4.2664e-01, -2.5881e-01, -6.2152e-01,
          4.8411e-02, -1.4223e-01, -3.2444e-01, -4.4411e-01,  1.9709e-01,
         -4.5321e-01,  7.1824e-02,  2.7165e-01,  1.0502e-01, -4.1553e-01,
          2.8188e-01, -6.0317e-01,  4.0830e-02,  4.8513e-02,  5.9073e-02,
         -1.9176e-01, -5.1547e-02, -1.3244e-01, -2.7333e-01,  1.7717e-01,
          1.5554e-01, -8.6316e-02,  1.6304e-01,  1.1170e-01,  3.0660e-01,
         -2.5208e-01,  1.8732e-03,  2.2499e-01,  1.0391e-01,  3.0948e-01,
         -7.1639e-02,  1.2199e-01,  1.0453e-01, -3.2698e-01, -1.9469e-01,
          7.7895e-02, -1.8355e-01,  2.4088e-01, -4.5306e-01,  2.2537e-01,
          1.4378e-01, -7.0890e-01,  6.2439e-02, -1.0152e-02, -2.6158e-01,
         -1.0010e-01,  2.3666e-01, -4.3685e-02, -1.8791e-01, -1.6187e-01,
          1.3890e-01, -2.5078e-01,  7.5294e-01, -1.2618e-01,  1.0091e-01,
          2.8628e-01, -2.7238e-01,  3.7906e-01, -1.2996e-01,  5.8465e-02,
         -1.4787e-02,  1.0893e-01,  2.7766e-02,  1.4667e-02, -5.0871e-02,
          4.7345e-02, -4.7737e-02, -1.3565e-02,  5.2442e-02, -9.6072e-02,
          1.2008e-01, -7.5243e-02, -4.1784e-02,  1.2501e-01,  4.7745e-02,
         -1.7140e-01, -7.3053e-02, -2.7070e-01, -5.4517e-02,  5.1005e-03,
          2.0816e-02,  2.7943e-02, -1.5438e-03, -9.3247e-02, -4.7365e-02,
         -1.3871e-01,  1.6806e-01, -1.0920e-01,  5.2518e-02, -6.5785e-02,
          2.3212e-03,  2.2985e-01, -1.9985e-01, -1.7506e-01, -1.7051e-01,
         -1.4726e-01, -2.3925e-01,  2.0226e-01, -1.8811e-02,  1.3369e-01,
         -1.5112e-01,  1.0220e-01,  1.4093e-01, -1.1116e-01, -2.1140e-01,
          8.8024e-02,  7.2313e-02,  1.4621e-01, -6.9902e-02,  9.1418e-02,
         -8.9898e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
235000 特征值优化 tensor(0.6067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0114,  0.6571, -0.9529, -1.0519,  3.0029,  2.5246,  2.4454,  2.5514,
          1.0381,  0.1127, -0.0840, -0.7624,  0.1037, -0.4663, -0.3617,  1.3169,
          0.3719,  0.6335, -0.0641,  0.5543,  0.1854, -0.0294,  0.5296, -0.0791,
          0.6054, -0.0982, -0.4058,  0.3635, -0.0641,  0.1592, -0.2801, -0.2877,
          0.3062,  0.0211,  0.5734,  0.3601,  0.5137,  0.2846, -0.1123,  0.0516,
         -0.0088,  0.0522,  0.0235, -0.0049, -0.2642, -0.0056, -0.0291,  0.4278,
         -0.2489, -0.6215,  0.0444, -0.1442, -0.3157, -0.4438,  0.1978, -0.4568,
          0.0584,  0.2508,  0.0986, -0.4148,  0.2822, -0.6002,  0.0386,  0.0458,
          0.0575, -0.1921, -0.0454, -0.1255, -0.2826,  0.1756,  0.1487, -0.0864,
          0.1584,  0.1233,  0.3130, -0.2561,  0.0031,  0.2249,  0.1058,  0.3046,
         -0.0705,  0.1220,  0.1046, -0.3427, -0.1976,  0.0839, -0.1819,  0.2397,
         -0.4561,  0.2181,  0.1336, -0.7036,  0.0562, -0.0133, -0.2506, -0.1023,
          0.2517, -0.0435, -0.1800, -0.1594,  0.1357, -0.2466,  0.7547, -0.1206,
          0.1047,  0.2844, -0.2667,  0.3821, -0.1485,  0.0549, -0.0116,  0.1079,
          0.0266,  0.0159, -0.0528,  0.0411, -0.0432, -0.0170,  0.0511, -0.0882,
          0.1166, -0.0721, -0.0397,  0.1249,  0.0543, -0.1688, -0.0734, -0.2697,
         -0.0590,  0.0133,  0.0219,  0.0286, -0.0064, -0.0898, -0.0499, -0.1414,
          0.1622, -0.1049,  0.0682, -0.0697,  0.0156,  0.2182, -0.2155, -0.1779,
         -0.1591, -0.1556, -0.2446,  0.2065, -0.0170,  0.1369, -0.1506,  0.1003,
          0.1410, -0.1058, -0.2104,  0.0841,  0.0781,  0.1449, -0.0679,  0.0843,
         -0.0883]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
236000 特征值优化 tensor(0.6219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0480e+00,  6.6076e-01, -9.4518e-01, -1.0540e+00,  2.9975e+00,
          2.5386e+00,  2.4707e+00,  2.5539e+00,  1.0567e+00,  1.1617e-01,
         -6.8871e-02, -7.5651e-01,  1.1865e-01, -4.4775e-01, -3.4483e-01,
          1.3337e+00,  3.7334e-01,  6.2743e-01, -6.4195e-02,  5.5524e-01,
          1.8811e-01, -3.3733e-02,  5.1654e-01, -6.9081e-02,  5.9751e-01,
         -1.0180e-01, -4.3272e-01,  3.6956e-01, -5.6550e-02,  1.6213e-01,
         -2.7944e-01, -2.8130e-01,  2.8329e-01,  1.5848e-02,  5.7537e-01,
          3.6618e-01,  5.2908e-01,  2.8169e-01, -1.0256e-01,  6.0669e-02,
         -1.5499e-02,  5.3801e-02,  2.4560e-02,  5.4989e-03, -2.6747e-01,
         -4.2727e-03, -1.7304e-02,  4.2199e-01, -2.4739e-01, -6.2123e-01,
          4.9562e-02, -1.4752e-01, -3.0940e-01, -4.4301e-01,  1.9714e-01,
         -4.4991e-01,  5.6474e-02,  2.2665e-01,  9.7714e-02, -4.2366e-01,
          2.6513e-01, -6.0004e-01,  3.4054e-02,  3.7012e-02,  5.2769e-02,
         -1.8350e-01, -5.6020e-02, -1.1416e-01, -2.8074e-01,  1.7429e-01,
          1.4104e-01, -8.8958e-02,  1.5533e-01,  1.2253e-01,  2.9400e-01,
         -2.7126e-01,  5.1492e-03,  2.4932e-01,  1.1387e-01,  3.1011e-01,
         -6.9157e-02,  1.1788e-01,  1.0817e-01, -3.5766e-01, -1.9408e-01,
          7.4095e-02, -1.7746e-01,  2.4318e-01, -4.8397e-01,  2.0634e-01,
          1.3927e-01, -6.9374e-01,  5.7891e-02, -2.5753e-02, -2.5734e-01,
         -9.8502e-02,  2.5533e-01, -5.9179e-02, -2.1729e-01, -1.7749e-01,
          1.2819e-01, -2.3695e-01,  7.6249e-01, -1.1542e-01,  1.1009e-01,
          2.6124e-01, -2.5939e-01,  3.7098e-01, -1.7714e-01,  5.2743e-02,
         -8.4018e-03,  1.1017e-01,  2.7641e-02,  1.4026e-02, -5.7624e-02,
          3.5117e-02, -3.8979e-02, -1.5385e-02,  5.1333e-02, -9.1020e-02,
          1.2309e-01, -6.8300e-02, -4.7093e-02,  1.3129e-01,  3.8144e-02,
         -1.6268e-01, -7.2392e-02, -2.6517e-01, -6.4241e-02,  1.2489e-02,
          1.7515e-02,  2.0727e-02,  1.5366e-03, -7.9642e-02, -4.9400e-02,
         -1.5101e-01,  1.6102e-01, -8.7311e-02,  5.2322e-02, -8.6350e-02,
          9.1958e-03,  1.9010e-01, -2.2488e-01, -1.5084e-01, -1.4087e-01,
         -1.5225e-01, -2.3677e-01,  2.0982e-01, -1.8361e-02,  1.2781e-01,
         -1.4472e-01,  1.1312e-01,  1.4525e-01, -1.0309e-01, -1.9815e-01,
          7.4529e-02,  8.8444e-02,  1.4557e-01, -6.3256e-02,  8.4828e-02,
         -9.2231e-02]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
237000 特征值优化 tensor(0.6022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1017e+00,  6.7916e-01, -9.6619e-01, -1.0573e+00,  3.0115e+00,
          2.5615e+00,  2.5012e+00,  2.5741e+00,  1.0636e+00,  1.2493e-01,
         -4.3876e-02, -7.2391e-01,  1.4096e-01, -4.5046e-01, -3.3744e-01,
          1.3299e+00,  3.6151e-01,  6.2316e-01, -6.8458e-02,  5.7994e-01,
          1.9519e-01, -4.6417e-02,  5.0741e-01, -6.2148e-02,  6.2339e-01,
         -8.5296e-02, -4.4344e-01,  3.9579e-01, -7.0962e-02,  1.6901e-01,
         -2.8270e-01, -2.8638e-01,  2.8031e-01,  4.1139e-02,  5.8138e-01,
          3.5749e-01,  5.1043e-01,  2.7965e-01, -1.2237e-01,  5.5888e-02,
         -2.3925e-03,  5.1872e-02,  2.4046e-02, -1.0498e-02, -2.7649e-01,
          5.9225e-03, -1.0160e-02,  4.2823e-01, -2.4810e-01, -6.1830e-01,
          5.0024e-02, -1.5029e-01, -3.0299e-01, -4.4685e-01,  1.9265e-01,
         -4.3200e-01,  5.7066e-02,  2.3685e-01,  8.8398e-02, -4.1499e-01,
          2.8265e-01, -5.9652e-01,  2.3842e-02,  3.2405e-02,  4.2336e-02,
         -1.7956e-01, -6.2106e-02, -1.0892e-01, -2.6349e-01,  1.6999e-01,
          1.4561e-01, -9.3071e-02,  1.5303e-01,  1.0962e-01,  3.1553e-01,
         -2.4755e-01,  9.4701e-03,  2.2365e-01,  9.0272e-02,  3.1168e-01,
         -6.4337e-02,  1.0900e-01,  1.0510e-01, -3.3912e-01, -1.9013e-01,
          8.6518e-02, -1.9347e-01,  2.4479e-01, -4.7624e-01,  1.9445e-01,
          1.2130e-01, -7.0312e-01,  5.4282e-02, -2.1494e-02, -2.6072e-01,
         -9.8483e-02,  2.6209e-01, -6.0169e-02, -2.3630e-01, -1.5132e-01,
          1.6056e-01, -2.2898e-01,  7.6375e-01, -1.1171e-01,  1.0328e-01,
          2.5145e-01, -2.6765e-01,  3.6988e-01, -1.7137e-01,  5.0231e-02,
         -1.0227e-02,  1.0195e-01,  3.2818e-02,  7.4185e-03, -5.6071e-02,
          3.9436e-02, -4.4045e-02, -1.7308e-02,  6.0059e-02, -1.0223e-01,
          1.0910e-01, -7.8862e-02, -5.9689e-02,  1.2220e-01,  4.5301e-02,
         -1.6168e-01, -5.9545e-02, -2.5415e-01, -5.8029e-02,  1.1792e-02,
          1.5324e-02,  2.1486e-02, -5.0398e-04, -8.1027e-02, -4.7759e-02,
         -1.2650e-01,  1.7408e-01, -1.2009e-01,  5.6528e-02, -7.8204e-02,
          5.1614e-03,  2.1819e-01, -2.0896e-01, -1.7456e-01, -1.5510e-01,
         -1.4421e-01, -2.3962e-01,  2.0098e-01, -1.4419e-02,  1.3277e-01,
         -1.4447e-01,  1.0274e-01,  1.4374e-01, -1.1171e-01, -1.9945e-01,
          7.8147e-02,  7.6051e-02,  1.4325e-01, -5.8210e-02,  8.5340e-02,
         -9.3116e-02]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
238000 特征值优化 tensor(0.5994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1560e+00,  6.7048e-01, -9.5262e-01, -1.0581e+00,  3.0156e+00,
          2.5537e+00,  2.4906e+00,  2.5746e+00,  1.0638e+00,  1.3543e-01,
         -3.6685e-02, -7.1126e-01,  1.4482e-01, -4.4884e-01, -3.2451e-01,
          1.3341e+00,  3.5015e-01,  6.2118e-01, -5.9997e-02,  5.9223e-01,
          1.9346e-01, -3.8690e-02,  4.9604e-01, -6.1738e-02,  6.3343e-01,
         -8.5575e-02, -4.6437e-01,  4.2936e-01, -6.7380e-02,  1.7350e-01,
         -2.8588e-01, -2.8263e-01,  2.6811e-01,  3.6081e-02,  5.8503e-01,
          3.5758e-01,  5.2930e-01,  2.8155e-01, -1.2424e-01,  4.5022e-02,
         -2.7278e-03,  5.3381e-02,  2.3488e-02, -1.8476e-03, -2.8065e-01,
          9.6267e-04, -1.5106e-02,  4.1656e-01, -2.4667e-01, -6.2462e-01,
          4.8195e-02, -1.4731e-01, -2.9429e-01, -4.4290e-01,  1.9925e-01,
         -4.3582e-01,  5.4885e-02,  2.2093e-01,  9.3083e-02, -4.1373e-01,
          2.7846e-01, -5.9374e-01,  1.4717e-02,  2.8018e-02,  4.0254e-02,
         -1.8297e-01, -6.9952e-02, -1.0412e-01, -2.5730e-01,  1.6568e-01,
          1.3696e-01, -9.9817e-02,  1.5134e-01,  1.1406e-01,  3.2300e-01,
         -2.4101e-01,  9.8594e-03,  2.2156e-01,  8.1479e-02,  3.1637e-01,
         -6.8056e-02,  1.1291e-01,  1.0152e-01, -3.4050e-01, -1.7782e-01,
          9.1790e-02, -2.0439e-01,  2.4941e-01, -4.6266e-01,  1.8828e-01,
          1.1872e-01, -7.0227e-01,  5.6978e-02, -3.0839e-02, -2.5995e-01,
         -1.0066e-01,  2.6374e-01, -5.2504e-02, -2.3037e-01, -1.3770e-01,
          1.5464e-01, -2.2255e-01,  7.6571e-01, -9.8653e-02,  1.0659e-01,
          2.3658e-01, -2.6650e-01,  3.7238e-01, -1.8686e-01,  4.7200e-02,
         -9.6289e-03,  1.0535e-01,  4.7643e-02,  9.7777e-03, -4.6070e-02,
          4.3268e-02, -3.2285e-02, -1.7654e-02,  6.0091e-02, -1.0457e-01,
          1.0077e-01, -8.5533e-02, -6.2498e-02,  1.2611e-01,  3.7598e-02,
         -1.7743e-01, -5.9353e-02, -2.4739e-01, -5.8197e-02,  1.3761e-02,
          1.8476e-02,  9.6254e-03, -4.0683e-03, -7.7509e-02, -4.3049e-02,
         -1.3970e-01,  1.7876e-01, -1.1580e-01,  5.7304e-02, -7.6929e-02,
          7.8778e-03,  2.1954e-01, -2.1109e-01, -1.7865e-01, -1.5315e-01,
         -1.3432e-01, -2.3459e-01,  2.0329e-01, -1.1456e-02,  1.4074e-01,
         -1.4689e-01,  1.0708e-01,  1.5055e-01, -1.1469e-01, -2.0570e-01,
          8.4248e-02,  7.9560e-02,  1.3632e-01, -5.7003e-02,  8.8386e-02,
         -9.6020e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
239000 特征值优化 tensor(0.5969, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1926e+00,  6.6006e-01, -9.5447e-01, -1.0589e+00,  2.9916e+00,
          2.5652e+00,  2.4840e+00,  2.5555e+00,  1.0884e+00,  1.4513e-01,
         -2.2550e-02, -7.3271e-01,  1.5027e-01, -4.1558e-01, -3.0652e-01,
          1.3399e+00,  3.5484e-01,  6.1457e-01, -6.3393e-02,  6.0219e-01,
          1.7482e-01, -2.3327e-02,  4.9784e-01, -5.1885e-02,  6.3792e-01,
         -8.4084e-02, -4.7824e-01,  4.2399e-01, -5.2570e-02,  1.8154e-01,
         -2.8768e-01, -2.6320e-01,  2.6974e-01,  1.0861e-02,  5.9332e-01,
          3.6320e-01,  5.4896e-01,  2.7413e-01, -9.0557e-02,  4.0618e-02,
         -3.2064e-02,  5.3206e-02,  2.3920e-02, -8.9190e-04, -2.8804e-01,
         -2.6334e-03, -8.8692e-03,  4.2281e-01, -2.2811e-01, -6.2827e-01,
          4.4975e-02, -1.3974e-01, -2.9127e-01, -4.3623e-01,  2.0261e-01,
         -4.5281e-01,  5.3763e-02,  2.0838e-01,  9.4628e-02, -4.1732e-01,
          2.7904e-01, -5.9035e-01,  3.8811e-03,  3.5498e-02,  3.6218e-02,
         -1.7827e-01, -7.8957e-02, -9.2950e-02, -2.7468e-01,  1.6694e-01,
          1.3041e-01, -9.8811e-02,  1.5181e-01,  1.2698e-01,  3.0754e-01,
         -2.7845e-01,  6.3010e-03,  2.4142e-01,  1.1578e-01,  3.0773e-01,
         -7.8069e-02,  1.1276e-01,  1.0343e-01, -3.6923e-01, -1.9756e-01,
          6.4897e-02, -1.6704e-01,  2.4496e-01, -4.7581e-01,  1.7657e-01,
          1.2798e-01, -6.9116e-01,  5.8738e-02, -5.1517e-02, -2.6124e-01,
         -9.9962e-02,  2.7797e-01, -5.7998e-02, -2.4369e-01, -1.5592e-01,
          1.2015e-01, -2.2160e-01,  7.6625e-01, -1.0257e-01,  1.2422e-01,
          2.3667e-01, -2.4930e-01,  3.6072e-01, -2.0449e-01,  4.3632e-02,
         -1.0185e-02,  1.2544e-01,  5.2236e-02,  6.8014e-03, -5.8683e-02,
          2.1977e-02, -2.5601e-02, -2.0843e-03,  5.8647e-02, -1.0886e-01,
          1.1382e-01, -7.9329e-02, -6.5804e-02,  1.3463e-01,  2.5462e-02,
         -1.7898e-01, -4.8799e-02, -2.5183e-01, -5.9178e-02,  1.5641e-02,
          1.4001e-02,  1.3742e-02, -1.4331e-03, -6.3469e-02, -5.1779e-02,
         -1.2948e-01,  1.5818e-01, -1.1184e-01,  5.8774e-02, -8.7229e-02,
          3.0626e-02,  1.9079e-01, -2.4836e-01, -1.5609e-01, -1.1413e-01,
         -1.3418e-01, -2.2485e-01,  2.1576e-01, -2.2178e-02,  1.3824e-01,
         -1.3821e-01,  1.0636e-01,  1.4012e-01, -9.7067e-02, -2.1567e-01,
          6.3071e-02,  7.9739e-02,  1.3616e-01, -5.2594e-02,  8.7820e-02,
         -8.9932e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
240000 特征值优化 tensor(0.6215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2341e+00,  6.6205e-01, -9.5109e-01, -1.0554e+00,  2.9728e+00,
          2.5716e+00,  2.4919e+00,  2.5709e+00,  1.0825e+00,  1.4901e-01,
         -8.3625e-03, -7.1920e-01,  1.6233e-01, -4.1612e-01, -3.0633e-01,
          1.3484e+00,  3.6284e-01,  6.1424e-01, -6.2179e-02,  6.0388e-01,
          1.7004e-01, -2.3826e-02,  4.8880e-01, -5.5631e-02,  6.4231e-01,
         -6.3917e-02, -4.8343e-01,  4.2876e-01, -5.9992e-02,  1.9021e-01,
         -2.8413e-01, -2.6025e-01,  2.7446e-01,  1.4679e-02,  6.0600e-01,
          3.5609e-01,  5.5146e-01,  2.6784e-01, -1.0321e-01,  4.7144e-02,
         -2.5004e-02,  5.4529e-02,  2.7251e-02,  2.0121e-03, -2.9559e-01,
         -2.0254e-04, -1.8374e-02,  4.1390e-01, -2.2729e-01, -6.2917e-01,
          4.2826e-02, -1.3445e-01, -2.8212e-01, -4.3303e-01,  2.0386e-01,
         -4.5016e-01,  3.0797e-02,  2.0942e-01,  7.7737e-02, -4.0679e-01,
          2.8675e-01, -5.8637e-01,  8.5046e-03,  3.3864e-02,  3.5827e-02,
         -1.7232e-01, -8.7061e-02, -8.8393e-02, -2.6471e-01,  1.6286e-01,
          1.3272e-01, -9.1184e-02,  1.5326e-01,  1.3046e-01,  3.0382e-01,
         -2.7358e-01,  7.4130e-03,  2.4342e-01,  9.7731e-02,  3.1152e-01,
         -7.8516e-02,  1.0692e-01,  9.8240e-02, -3.6305e-01, -2.0209e-01,
          6.2335e-02, -1.7807e-01,  2.4777e-01, -4.7424e-01,  1.8190e-01,
          1.2261e-01, -6.9824e-01,  5.2590e-02, -3.4627e-02, -2.5479e-01,
         -9.7649e-02,  2.8441e-01, -6.5751e-02, -2.3643e-01, -1.5743e-01,
          1.2467e-01, -2.2226e-01,  7.6921e-01, -8.3908e-02,  1.1194e-01,
          2.3978e-01, -2.6007e-01,  3.6704e-01, -2.0557e-01,  4.1921e-02,
         -6.9211e-03,  1.1765e-01,  5.9994e-02,  1.0182e-02, -5.5575e-02,
          2.3661e-02, -1.6734e-02, -1.1826e-03,  5.9372e-02, -1.1242e-01,
          1.0595e-01, -7.8951e-02, -5.6952e-02,  1.2679e-01,  2.2974e-02,
         -1.6721e-01, -4.9132e-02, -2.5621e-01, -5.3546e-02,  1.3615e-02,
          1.5818e-02,  7.7233e-03,  2.4526e-03, -6.3860e-02, -4.5928e-02,
         -1.5657e-01,  1.6844e-01, -1.0303e-01,  5.0238e-02, -8.9993e-02,
          5.2222e-02,  1.9125e-01, -2.4826e-01, -1.5851e-01, -1.2816e-01,
         -1.5055e-01, -2.3262e-01,  2.1265e-01, -2.1665e-02,  1.3783e-01,
         -1.3655e-01,  1.0556e-01,  1.3958e-01, -9.8856e-02, -2.1829e-01,
          6.5716e-02,  8.1826e-02,  1.3297e-01, -5.6263e-02,  9.0961e-02,
         -8.2637e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
241000 特征值优化 tensor(0.6000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2580,  0.6865, -0.9557, -1.0582,  2.9846,  2.5916,  2.5471,  2.6056,
          1.0837,  0.1530,  0.0065, -0.7040,  0.1567, -0.4095, -0.2932,  1.3548,
          0.3342,  0.5786, -0.0571,  0.6047,  0.1780, -0.0099,  0.4922, -0.0567,
          0.6463, -0.0654, -0.4663,  0.4138, -0.0641,  0.1950, -0.2962, -0.2493,
          0.2796,  0.0217,  0.6202,  0.3513,  0.5384,  0.2790, -0.1156,  0.0477,
         -0.0251,  0.0549,  0.0236, -0.0112, -0.3030,  0.0308, -0.0379,  0.3981,
         -0.2419, -0.6232,  0.0313, -0.1191, -0.2706, -0.4281,  0.1906, -0.4515,
          0.0249,  0.2019,  0.0630, -0.3911,  0.2981, -0.5778,  0.0046,  0.0366,
          0.0390, -0.1686, -0.0916, -0.0827, -0.2640,  0.1483,  0.1497, -0.0981,
          0.1556,  0.1526,  0.3028, -0.2734,  0.0107,  0.2332,  0.0930,  0.3077,
         -0.0777,  0.0907,  0.1030, -0.3533, -0.1935,  0.0656, -0.1828,  0.2297,
         -0.4812,  0.1762,  0.1122, -0.7081,  0.0346, -0.0390, -0.2593, -0.1002,
          0.3064, -0.0728, -0.2903, -0.1498,  0.1838, -0.2227,  0.7621, -0.0930,
          0.1154,  0.2606, -0.2668,  0.3698, -0.1903,  0.0370, -0.0041,  0.1199,
          0.0620,  0.0032, -0.0566,  0.0345, -0.0202, -0.0098,  0.0667, -0.1242,
          0.0834, -0.0789, -0.0771,  0.1356,  0.0276, -0.1552, -0.0462, -0.2642,
         -0.0373,  0.0097,  0.0174,  0.0097,  0.0119, -0.0683, -0.0450, -0.1426,
          0.1540, -0.1494,  0.0588, -0.1018,  0.0426,  0.2122, -0.2168, -0.1854,
         -0.1393, -0.1594, -0.2259,  0.2106, -0.0310,  0.1222, -0.1527,  0.1097,
          0.1381, -0.0989, -0.2128,  0.0677,  0.0630,  0.1391, -0.0599,  0.0897,
         -0.0824]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
242000 特征值优化 tensor(0.6019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2968e+00,  6.6701e-01, -9.5225e-01, -1.0562e+00,  3.0067e+00,
          2.5911e+00,  2.5704e+00,  2.6064e+00,  1.0766e+00,  1.5979e-01,
          2.5765e-02, -6.8551e-01,  1.8084e-01, -4.2598e-01, -3.0185e-01,
          1.3313e+00,  3.3129e-01,  5.7691e-01, -5.0102e-02,  5.8604e-01,
          1.7522e-01, -1.6798e-02,  4.8988e-01, -5.5244e-02,  6.2260e-01,
         -8.6765e-02, -4.5099e-01,  4.0200e-01, -3.8872e-02,  2.0057e-01,
         -3.0740e-01, -2.4822e-01,  2.4992e-01,  4.1539e-02,  6.4019e-01,
          3.5132e-01,  5.6412e-01,  2.5791e-01, -1.3345e-01,  5.1351e-02,
         -2.7525e-02,  5.3608e-02,  2.5977e-02, -2.8352e-03, -3.0798e-01,
          3.7892e-02, -4.4516e-02,  3.9978e-01, -2.2238e-01, -6.2219e-01,
          2.8392e-02, -1.1548e-01, -2.7026e-01, -4.2545e-01,  1.9298e-01,
         -4.4017e-01,  2.3067e-02,  1.8658e-01,  4.2698e-02, -3.9290e-01,
          2.7391e-01, -5.7489e-01, -7.4706e-04,  4.3869e-02,  3.6784e-02,
         -1.6627e-01, -8.2869e-02, -7.6248e-02, -2.7206e-01,  1.4383e-01,
          1.4351e-01, -1.0389e-01,  1.5760e-01,  1.5283e-01,  3.1763e-01,
         -2.5798e-01,  4.8991e-03,  2.4349e-01,  7.8799e-02,  3.0873e-01,
         -7.5844e-02,  9.1442e-02,  1.0252e-01, -3.6187e-01, -1.8126e-01,
          8.6373e-02, -2.0444e-01,  2.3196e-01, -4.7500e-01,  1.6539e-01,
          1.1370e-01, -7.0719e-01,  5.3263e-02, -2.1797e-02, -2.5673e-01,
         -1.0242e-01,  3.0781e-01, -5.4181e-02, -2.8853e-01, -1.3363e-01,
          1.8734e-01, -2.2763e-01,  7.5603e-01, -9.4931e-02,  1.1391e-01,
          2.5912e-01, -2.6492e-01,  3.7246e-01, -1.8411e-01,  3.4077e-02,
         -4.7837e-03,  1.1010e-01,  5.2063e-02,  4.0322e-03, -5.4591e-02,
          4.3099e-02, -1.1652e-03, -1.5630e-02,  5.4613e-02, -1.1534e-01,
          7.2727e-02, -8.8987e-02, -6.9665e-02,  1.5180e-01,  2.4169e-02,
         -1.6435e-01, -3.7863e-02, -2.6235e-01, -3.4528e-02,  1.2710e-02,
          1.4049e-02,  2.6990e-03,  7.2798e-03, -6.4597e-02, -5.0719e-02,
         -1.6204e-01,  1.6318e-01, -1.2280e-01,  4.7403e-02, -9.0222e-02,
          3.6736e-02,  2.1243e-01, -2.4230e-01, -1.6284e-01, -1.4687e-01,
         -1.5697e-01, -2.3318e-01,  2.0428e-01, -2.6783e-02,  1.3712e-01,
         -1.6154e-01,  1.1632e-01,  1.3561e-01, -1.0936e-01, -2.1729e-01,
          6.7769e-02,  5.2443e-02,  1.3395e-01, -6.2621e-02,  9.7911e-02,
         -8.1190e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
243000 特征值优化 tensor(0.6008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3562e+00,  6.6430e-01, -9.2310e-01, -1.0520e+00,  2.9951e+00,
          2.5809e+00,  2.6245e+00,  2.6412e+00,  1.0727e+00,  1.6206e-01,
          1.8699e-02, -6.9528e-01,  1.8578e-01, -4.2344e-01, -2.7708e-01,
          1.3485e+00,  3.2625e-01,  5.8568e-01, -2.2712e-02,  5.8965e-01,
          1.5971e-01, -2.6481e-02,  4.9451e-01, -3.5522e-02,  6.1322e-01,
         -6.8672e-02, -4.7349e-01,  3.7011e-01, -2.9451e-02,  2.0711e-01,
         -3.0765e-01, -2.6461e-01,  2.7011e-01,  3.6351e-02,  6.4108e-01,
          3.4066e-01,  5.5644e-01,  2.3878e-01, -1.2853e-01,  8.2624e-02,
         -4.7119e-02,  5.1593e-02,  2.3796e-02,  9.7952e-03, -3.1050e-01,
          1.5172e-02, -5.7250e-02,  3.8949e-01, -2.3307e-01, -5.9633e-01,
          2.4534e-02, -1.3433e-01, -2.3846e-01, -4.3971e-01,  1.6839e-01,
         -4.2320e-01,  6.2379e-03,  1.7485e-01,  1.8088e-02, -3.7942e-01,
          2.6183e-01, -5.7062e-01, -1.6961e-02,  3.3646e-02,  3.2689e-02,
         -1.6456e-01, -9.0177e-02, -7.8008e-02, -2.6193e-01,  1.3138e-01,
          1.1743e-01, -1.0461e-01,  1.5840e-01,  1.6530e-01,  3.1311e-01,
         -2.6085e-01, -7.2687e-03,  2.4796e-01,  8.0222e-02,  3.0704e-01,
         -6.9640e-02,  7.2534e-02,  1.2130e-01, -3.5001e-01, -1.7607e-01,
          8.1587e-02, -2.0584e-01,  2.2950e-01, -4.3950e-01,  1.9035e-01,
          9.9068e-02, -6.9515e-01,  2.0974e-02, -2.0182e-02, -2.6757e-01,
         -1.0207e-01,  3.1847e-01, -5.2771e-02, -2.7661e-01, -1.0928e-01,
          1.7782e-01, -2.2307e-01,  7.5774e-01, -8.6497e-02,  1.2005e-01,
          2.6945e-01, -2.6732e-01,  3.8604e-01, -1.9963e-01,  3.2429e-02,
         -4.2886e-03,  1.1158e-01,  5.6275e-02, -3.8831e-03, -5.1256e-02,
          3.5004e-02, -5.9764e-04, -2.6705e-02,  5.8124e-02, -1.1690e-01,
          5.9381e-02, -8.9096e-02, -6.5749e-02,  1.5813e-01,  2.3922e-02,
         -1.6362e-01, -3.5313e-02, -2.5568e-01, -3.5180e-02,  1.4883e-02,
          1.5801e-02,  7.8993e-03,  1.4767e-02, -6.7142e-02, -5.8902e-02,
         -1.6596e-01,  1.8388e-01, -1.1112e-01,  5.3298e-02, -1.0154e-01,
         -6.7243e-03,  2.1874e-01, -2.1837e-01, -1.6898e-01, -1.4165e-01,
         -1.6908e-01, -2.1572e-01,  2.0414e-01, -1.9501e-02,  1.2406e-01,
         -1.6950e-01,  1.3252e-01,  1.3033e-01, -1.3448e-01, -1.9803e-01,
          6.1251e-02,  4.7936e-02,  1.5352e-01, -5.1285e-02,  8.5929e-02,
         -7.1051e-02]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
244000 特征值优化 tensor(0.5973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3711e+00,  6.6033e-01, -9.1462e-01, -1.0588e+00,  3.0268e+00,
          2.5834e+00,  2.6456e+00,  2.6826e+00,  1.0717e+00,  1.5700e-01,
          2.8958e-02, -6.8795e-01,  1.8936e-01, -4.0777e-01, -2.4661e-01,
          1.3779e+00,  3.3094e-01,  5.7741e-01,  1.3139e-02,  5.9705e-01,
          1.9405e-01, -3.2130e-02,  4.7371e-01, -1.5466e-02,  6.3768e-01,
         -5.6147e-02, -5.2185e-01,  3.7958e-01, -2.4621e-02,  2.0304e-01,
         -3.0495e-01, -2.5808e-01,  2.8711e-01,  2.3441e-02,  6.2925e-01,
          3.4011e-01,  5.7577e-01,  2.4158e-01, -1.0453e-01,  8.2864e-02,
         -6.2122e-02,  5.4681e-02,  2.6897e-02,  1.7817e-03, -3.1111e-01,
         -1.6780e-02, -8.8705e-02,  3.8104e-01, -2.4156e-01, -5.9548e-01,
          1.5489e-02, -1.3534e-01, -2.1227e-01, -4.3240e-01,  1.7475e-01,
         -4.5222e-01,  4.8183e-03,  1.5819e-01,  2.8718e-02, -3.6953e-01,
          2.6409e-01, -5.5898e-01, -1.4203e-02,  2.4618e-02,  1.4684e-02,
         -1.6425e-01, -1.0251e-01, -8.2795e-02, -2.4903e-01,  1.3056e-01,
          9.9481e-02, -1.0230e-01,  1.5673e-01,  1.5590e-01,  2.8342e-01,
         -2.7714e-01,  1.2908e-02,  2.5311e-01,  1.0161e-01,  3.0207e-01,
         -7.3359e-02,  7.8662e-02,  1.4008e-01, -3.6962e-01, -1.6805e-01,
          8.0169e-02, -1.8589e-01,  2.0344e-01, -4.1478e-01,  1.4208e-01,
          9.3180e-02, -6.7786e-01,  1.4759e-02, -1.7239e-02, -2.5498e-01,
         -1.1303e-01,  3.4410e-01, -6.5069e-02, -2.8325e-01, -8.4879e-02,
          1.5354e-01, -2.1495e-01,  7.3858e-01, -7.6826e-02,  1.3522e-01,
          2.8261e-01, -2.5975e-01,  3.9358e-01, -2.0176e-01,  2.7840e-02,
         -5.0732e-03,  1.2226e-01,  4.3141e-02, -1.0641e-04, -3.6618e-02,
          4.7350e-02,  4.8860e-03, -1.8579e-02,  4.5714e-02, -1.1514e-01,
          3.6316e-02, -1.0229e-01, -7.0573e-02,  1.4232e-01,  1.9291e-02,
         -1.5991e-01, -3.4796e-02, -2.4472e-01, -3.0788e-02,  1.5057e-02,
          2.8068e-02,  1.6227e-02,  1.2224e-02, -7.8282e-02, -6.3453e-02,
         -1.4611e-01,  1.6630e-01, -1.0073e-01,  4.4365e-02, -1.4283e-01,
         -1.5480e-02,  1.9963e-01, -2.1245e-01, -1.5969e-01, -1.1702e-01,
         -1.6020e-01, -2.0373e-01,  1.9767e-01, -2.1189e-02,  1.0750e-01,
         -1.6506e-01,  1.1814e-01,  1.2067e-01, -1.3520e-01, -1.9707e-01,
          5.6623e-02,  5.6360e-02,  1.6229e-01, -5.1100e-02,  7.8816e-02,
         -6.8099e-02]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
245000 特征值优化 tensor(0.6075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3794e+00,  6.7459e-01, -9.5190e-01, -1.0568e+00,  3.0358e+00,
          2.5864e+00,  2.6399e+00,  2.6873e+00,  1.1001e+00,  1.5068e-01,
          4.6404e-02, -7.0235e-01,  2.3441e-01, -4.1375e-01, -1.7680e-01,
          1.3929e+00,  3.1872e-01,  5.5547e-01,  5.2656e-02,  6.5715e-01,
          2.4283e-01, -6.8364e-02,  4.0702e-01,  3.7304e-03,  6.7525e-01,
         -6.6182e-02, -5.6119e-01,  3.6099e-01,  4.8198e-03,  2.1919e-01,
         -2.7298e-01, -2.4723e-01,  2.6770e-01, -2.5311e-02,  5.9685e-01,
          3.2331e-01,  5.8163e-01,  2.1257e-01, -1.1205e-01,  1.2457e-01,
         -8.6254e-02,  5.1418e-02,  2.8593e-02,  1.8612e-03, -3.2900e-01,
         -7.0801e-02, -1.5146e-01,  3.7662e-01, -2.5008e-01, -5.7474e-01,
         -5.8801e-03, -1.3250e-01, -1.8509e-01, -4.1990e-01,  1.6984e-01,
         -4.5160e-01, -6.4999e-03,  1.5450e-01,  4.7458e-02, -3.2844e-01,
          2.5028e-01, -5.4560e-01, -2.3654e-02, -4.6487e-03, -3.6627e-03,
         -1.3758e-01, -1.4183e-01, -1.0680e-01, -1.7430e-01,  1.2148e-01,
          8.8002e-02, -1.2572e-01,  1.7838e-01,  1.4124e-01,  2.9338e-01,
         -2.8875e-01,  2.9605e-02,  2.6014e-01,  1.2025e-01,  2.9789e-01,
         -8.0564e-02,  9.5085e-02,  1.4404e-01, -3.7203e-01, -1.6545e-01,
          9.0950e-02, -2.1810e-01,  1.8599e-01, -3.7260e-01,  9.7257e-02,
          6.6048e-02, -6.2746e-01, -3.5582e-02, -2.0993e-02, -2.4904e-01,
         -9.8315e-02,  3.5789e-01, -8.8846e-02, -3.0422e-01, -1.5958e-02,
          1.1486e-01, -2.0889e-01,  7.3967e-01, -6.9779e-02,  1.6864e-01,
          3.2562e-01, -2.8102e-01,  4.0823e-01, -2.4974e-01,  2.7146e-02,
          1.0303e-02,  1.2309e-01,  5.0624e-02, -9.6868e-04, -2.2600e-02,
          8.7373e-02,  1.5329e-02, -2.6356e-02,  4.9585e-02, -1.1613e-01,
         -1.1260e-03, -1.1253e-01, -7.1492e-02,  1.2150e-01,  2.6035e-02,
         -1.6933e-01, -4.4187e-02, -2.4245e-01, -2.8894e-02,  2.1455e-02,
          4.5323e-02,  1.5593e-02,  1.3932e-02, -1.0999e-01, -7.9553e-02,
         -1.2058e-01,  1.5003e-01, -6.5536e-02,  5.9233e-02, -1.7455e-01,
         -1.8069e-02,  2.1133e-01, -2.3526e-01, -1.6067e-01, -1.2351e-01,
         -1.2162e-01, -2.0071e-01,  1.9487e-01, -2.0101e-02,  7.4221e-02,
         -1.7012e-01,  1.0458e-01,  9.1073e-02, -1.6262e-01, -1.8623e-01,
          6.9865e-02,  5.0146e-02,  1.8370e-01, -6.8609e-02,  7.7908e-02,
         -6.3759e-02]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
246000 特征值优化 tensor(0.5775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4180e+00,  7.0360e-01, -1.0079e+00, -1.0589e+00,  3.0862e+00,
          2.5827e+00,  2.6637e+00,  2.6835e+00,  1.1352e+00,  1.3806e-01,
          6.2667e-02, -6.8267e-01,  2.6610e-01, -3.9529e-01, -9.1916e-02,
          1.3827e+00,  3.1249e-01,  5.5025e-01,  7.2360e-02,  7.1479e-01,
          2.6696e-01, -7.9172e-02,  3.0857e-01, -2.8694e-02,  7.2522e-01,
         -8.1652e-02, -5.8617e-01,  4.1065e-01,  2.4243e-02,  2.4270e-01,
         -2.5777e-01, -2.3354e-01,  2.0783e-01, -1.3819e-02,  5.9185e-01,
          3.0729e-01,  6.0806e-01,  1.9526e-01, -1.2089e-01,  1.2919e-01,
         -8.9676e-02,  5.6602e-02,  1.7748e-02, -1.9739e-02, -3.4616e-01,
         -1.0253e-01, -1.8266e-01,  3.6621e-01, -2.4538e-01, -5.7370e-01,
         -2.2091e-02, -1.5185e-01, -1.2587e-01, -4.1241e-01,  1.6117e-01,
         -4.1617e-01, -1.9449e-02,  1.2491e-01,  4.3276e-02, -2.9719e-01,
          2.1057e-01, -5.2977e-01, -3.3324e-02, -3.4463e-02, -2.1914e-02,
         -1.2691e-01, -1.6781e-01, -1.3595e-01, -8.4099e-02,  1.3743e-01,
          7.8807e-02, -1.7501e-01,  1.9160e-01,  1.3645e-01,  2.7654e-01,
         -3.0609e-01,  6.4212e-02,  2.1401e-01,  1.3212e-01,  2.9170e-01,
         -7.6584e-02,  9.0573e-02,  1.5403e-01, -3.7999e-01, -1.6951e-01,
          8.8456e-02, -2.4695e-01,  1.5764e-01, -3.7068e-01, -4.2139e-03,
          3.7330e-02, -5.6826e-01, -7.6020e-02,  2.9595e-03, -2.3970e-01,
         -9.9094e-02,  3.7928e-01, -1.1973e-01, -3.1596e-01,  6.0690e-02,
          3.5140e-03, -1.8278e-01,  7.8997e-01, -7.5894e-02,  1.8392e-01,
          3.3917e-01, -2.8655e-01,  3.9366e-01, -3.7121e-01,  2.3683e-02,
         -7.1414e-03,  1.3403e-01,  4.5697e-02, -3.1287e-03, -3.3915e-02,
          1.0851e-01,  5.9115e-02, -1.6000e-02,  4.7333e-02, -1.0817e-01,
         -5.9638e-02, -1.3253e-01, -4.5682e-02,  9.4597e-02, -8.9700e-03,
         -1.6212e-01, -6.1650e-02, -2.4557e-01, -4.0682e-02,  2.5050e-02,
          5.4019e-02, -6.8565e-03, -3.3157e-03, -1.1255e-01, -1.0557e-01,
         -1.0317e-01,  1.2243e-01, -5.9796e-02,  7.2537e-02, -1.9943e-01,
          3.4293e-03,  2.0530e-01, -2.4472e-01, -1.5399e-01, -1.1453e-01,
         -1.2334e-01, -1.7224e-01,  1.8538e-01,  5.1241e-03,  8.9396e-02,
         -1.5073e-01,  1.3099e-01,  4.8245e-02, -1.9608e-01, -1.8371e-01,
          6.3693e-02,  4.7226e-02,  1.8710e-01, -7.3602e-02,  9.1101e-02,
         -6.7955e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
247000 特征值优化 tensor(0.5760, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5040e+00,  7.1522e-01, -1.0593e+00, -1.0610e+00,  3.1271e+00,
          2.6153e+00,  2.6763e+00,  2.6927e+00,  1.1764e+00,  1.2933e-01,
          8.1656e-02, -6.6228e-01,  2.8054e-01, -3.8670e-01, -9.5003e-02,
          1.3988e+00,  2.7861e-01,  5.5816e-01,  9.0887e-02,  7.4210e-01,
          3.0384e-01, -5.7960e-02,  2.6190e-01, -2.4990e-02,  7.3245e-01,
         -6.5985e-02, -5.9145e-01,  4.0832e-01,  2.0777e-02,  2.6271e-01,
         -2.6603e-01, -1.9899e-01,  2.0993e-01, -2.4521e-02,  5.8751e-01,
          3.2015e-01,  6.0074e-01,  1.9344e-01, -1.1366e-01,  1.3888e-01,
         -9.0748e-02,  5.6636e-02,  1.6786e-02, -3.0504e-02, -3.6865e-01,
         -1.1390e-01, -1.8353e-01,  3.6386e-01, -2.5331e-01, -5.6203e-01,
         -3.4889e-02, -1.5205e-01, -9.2062e-02, -4.0147e-01,  1.4412e-01,
         -3.8971e-01, -4.5396e-02,  1.2626e-01,  3.8107e-02, -2.9029e-01,
          2.0430e-01, -5.1153e-01, -6.5407e-02, -3.9331e-02, -2.0083e-02,
         -1.3673e-01, -1.7287e-01, -1.3224e-01, -6.3258e-02,  1.3359e-01,
          7.7418e-02, -1.9140e-01,  1.9530e-01,  1.3304e-01,  2.5956e-01,
         -3.0919e-01,  8.1092e-02,  2.0444e-01,  1.3666e-01,  2.8278e-01,
         -8.4523e-02,  9.6175e-02,  1.5879e-01, -3.7405e-01, -1.7491e-01,
          1.1166e-01, -2.6551e-01,  1.6197e-01, -3.6692e-01, -3.5003e-02,
          2.3848e-02, -5.3682e-01, -1.0542e-01, -3.5205e-03, -2.3871e-01,
         -8.5809e-02,  3.8294e-01, -1.2147e-01, -3.2091e-01,  8.5873e-02,
         -3.4905e-02, -1.6181e-01,  8.1325e-01, -7.3461e-02,  1.9085e-01,
          3.3332e-01, -2.8220e-01,  3.7513e-01, -4.2881e-01,  2.1247e-02,
         -1.2491e-03,  1.4743e-01,  4.0338e-02, -1.2620e-02, -3.1362e-02,
          9.9543e-02,  7.4815e-02, -1.1833e-02,  2.9318e-02, -9.7245e-02,
         -6.4234e-02, -1.3443e-01, -2.3211e-02,  9.7109e-02, -1.6068e-02,
         -1.5406e-01, -7.1467e-02, -2.4326e-01, -4.0025e-02,  1.8645e-02,
          6.2440e-02, -8.3845e-03, -1.2138e-02, -1.0328e-01, -1.0528e-01,
         -1.0209e-01,  1.1473e-01, -6.1718e-02,  7.6286e-02, -2.1503e-01,
          1.1740e-02,  2.0620e-01, -2.5531e-01, -1.4320e-01, -1.0174e-01,
         -1.3931e-01, -1.6487e-01,  1.8382e-01,  3.5640e-03,  8.9415e-02,
         -1.3571e-01,  1.1867e-01,  3.2283e-02, -2.0741e-01, -1.7613e-01,
          7.0589e-02,  4.6585e-02,  1.7128e-01, -6.7195e-02,  1.0532e-01,
         -5.8403e-02]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
248000 特征值优化 tensor(0.5756, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5720e+00,  7.0443e-01, -1.1159e+00, -1.0628e+00,  3.1881e+00,
          2.6511e+00,  2.6876e+00,  2.6984e+00,  1.2138e+00,  1.2452e-01,
          7.3859e-02, -6.4468e-01,  2.8431e-01, -3.7864e-01, -7.4413e-02,
          1.4060e+00,  2.5485e-01,  5.6208e-01,  1.0316e-01,  7.5017e-01,
          3.0079e-01, -5.0868e-02,  2.4619e-01, -2.3367e-02,  7.4007e-01,
         -6.1527e-02, -5.7887e-01,  4.0633e-01,  3.5422e-02,  2.7402e-01,
         -2.6559e-01, -1.7756e-01,  2.1374e-01, -2.4838e-02,  5.8803e-01,
          3.3075e-01,  6.0038e-01,  1.9783e-01, -1.0431e-01,  1.4632e-01,
         -9.0567e-02,  5.7996e-02,  1.5898e-02, -4.1625e-02, -3.8052e-01,
         -1.1438e-01, -1.8873e-01,  3.5877e-01, -2.5623e-01, -5.5931e-01,
         -4.3441e-02, -1.5408e-01, -6.7072e-02, -3.8882e-01,  1.3012e-01,
         -3.7815e-01, -4.2240e-02,  1.3130e-01,  3.4117e-02, -2.9422e-01,
          2.2059e-01, -4.9645e-01, -8.4151e-02, -4.6101e-02, -1.7965e-02,
         -1.3892e-01, -1.7715e-01, -1.2767e-01, -6.3133e-02,  1.2609e-01,
          7.7692e-02, -2.0185e-01,  1.9181e-01,  1.2644e-01,  2.5614e-01,
         -3.0941e-01,  8.9186e-02,  1.9348e-01,  1.3640e-01,  2.7424e-01,
         -8.5275e-02,  9.3448e-02,  1.5173e-01, -3.6000e-01, -1.7095e-01,
          1.1178e-01, -2.7889e-01,  1.6459e-01, -3.5579e-01, -5.5044e-02,
          1.3093e-02, -5.1547e-01, -1.3220e-01,  2.3004e-05, -2.4347e-01,
         -7.0235e-02,  3.8544e-01, -1.1984e-01, -3.2323e-01,  1.1365e-01,
         -4.6344e-02, -1.5887e-01,  8.1073e-01, -7.1821e-02,  1.9428e-01,
          3.3575e-01, -2.6993e-01,  3.6744e-01, -4.5105e-01,  1.8236e-02,
          2.4337e-03,  1.4564e-01,  4.4851e-02, -1.4313e-02, -4.2099e-02,
          9.5358e-02,  8.5626e-02, -2.5363e-03,  2.1056e-02, -9.8029e-02,
         -7.3063e-02, -1.3250e-01, -1.2033e-02,  1.0139e-01, -1.6623e-02,
         -1.4985e-01, -7.2194e-02, -2.3999e-01, -3.8561e-02,  1.8916e-02,
          6.7921e-02, -1.0956e-02, -1.8822e-02, -8.8524e-02, -1.0504e-01,
         -1.1651e-01,  1.2264e-01, -5.7163e-02,  6.9764e-02, -2.0872e-01,
          1.5088e-02,  1.8818e-01, -2.6123e-01, -1.3661e-01, -1.0889e-01,
         -1.2966e-01, -1.5560e-01,  1.7013e-01,  4.4260e-03,  1.0129e-01,
         -1.3934e-01,  1.3207e-01,  3.0646e-02, -2.1588e-01, -1.7657e-01,
          8.6033e-02,  3.5966e-02,  1.6539e-01, -6.3290e-02,  1.0263e-01,
         -5.0918e-02]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
249000 特征值优化 tensor(0.5821, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6186e+00,  6.8142e-01, -1.1676e+00, -1.0591e+00,  3.2311e+00,
          2.6756e+00,  2.6961e+00,  2.7137e+00,  1.2449e+00,  1.2447e-01,
          8.8813e-02, -6.2620e-01,  2.8171e-01, -3.8513e-01, -5.5022e-02,
          1.4210e+00,  2.2534e-01,  5.7086e-01,  1.1623e-01,  7.6151e-01,
          3.1826e-01, -2.3790e-02,  2.3616e-01, -3.6588e-02,  7.5619e-01,
         -5.2579e-02, -5.4103e-01,  3.9021e-01,  3.9926e-02,  2.8050e-01,
         -2.7179e-01, -1.5776e-01,  1.8778e-01, -2.7339e-02,  5.8981e-01,
          3.3651e-01,  5.7315e-01,  2.0295e-01, -9.2974e-02,  1.5376e-01,
         -8.4769e-02,  5.7071e-02,  1.7990e-02, -4.4868e-02, -3.9251e-01,
         -1.0061e-01, -1.8386e-01,  3.5400e-01, -2.6760e-01, -5.5347e-01,
         -4.5835e-02, -1.6038e-01, -4.3048e-02, -3.8186e-01,  1.1383e-01,
         -3.9970e-01, -4.1803e-02,  1.2953e-01,  3.7266e-02, -2.9206e-01,
          2.5410e-01, -4.7855e-01, -9.6631e-02, -4.5792e-02, -3.5048e-02,
         -1.4185e-01, -1.6041e-01, -1.2190e-01, -5.4724e-02,  1.1248e-01,
          8.7065e-02, -2.1109e-01,  1.8213e-01,  1.3948e-01,  2.6578e-01,
         -2.9693e-01,  7.9331e-02,  1.8574e-01,  1.4133e-01,  2.7296e-01,
         -8.1594e-02,  9.4671e-02,  1.5907e-01, -3.5406e-01, -1.8913e-01,
          9.6780e-02, -2.8831e-01,  1.6609e-01, -3.6769e-01, -7.0248e-02,
         -6.5964e-03, -5.2279e-01, -1.5362e-01, -9.2941e-03, -2.3332e-01,
         -5.7008e-02,  3.9029e-01, -1.4035e-01, -3.1922e-01,  1.2443e-01,
         -1.5248e-02, -1.5598e-01,  8.1381e-01, -8.1406e-02,  1.9868e-01,
          3.2449e-01, -2.5929e-01,  3.7780e-01, -4.6509e-01,  1.4244e-02,
          1.4088e-02,  1.3256e-01,  6.0818e-02, -1.7851e-02, -3.9113e-02,
          9.4621e-02,  9.2978e-02,  7.9063e-03,  1.5995e-02, -1.0616e-01,
         -8.0135e-02, -1.3250e-01, -2.2321e-03,  9.5265e-02, -1.2578e-02,
         -1.5280e-01, -8.0282e-02, -2.3748e-01, -2.5403e-02,  2.1231e-02,
          7.9691e-02, -1.2434e-02, -2.4072e-02, -7.5750e-02, -9.6884e-02,
         -1.0068e-01,  1.3542e-01, -6.0772e-02,  7.4519e-02, -1.8810e-01,
          7.7148e-03,  2.0211e-01, -2.5764e-01, -1.4321e-01, -1.1504e-01,
         -1.2406e-01, -1.5404e-01,  1.6940e-01,  1.0485e-02,  9.6464e-02,
         -1.4724e-01,  1.4342e-01,  2.2950e-02, -2.1698e-01, -1.6981e-01,
          8.4303e-02,  3.0895e-02,  1.6993e-01, -6.4789e-02,  1.0465e-01,
         -5.0227e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
250000 特征值优化 tensor(0.5810, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6461e+00,  6.6400e-01, -1.1871e+00, -1.0584e+00,  3.2700e+00,
          2.6894e+00,  2.7145e+00,  2.7184e+00,  1.2513e+00,  1.2504e-01,
          8.3216e-02, -6.1806e-01,  2.8414e-01, -3.9801e-01, -5.0918e-02,
          1.4208e+00,  2.1722e-01,  5.7511e-01,  1.1882e-01,  7.6539e-01,
          3.1805e-01, -2.5787e-02,  2.3139e-01, -3.6025e-02,  7.5041e-01,
         -4.9085e-02, -5.4524e-01,  3.7739e-01,  3.1266e-02,  2.8358e-01,
         -2.9227e-01, -1.5660e-01,  1.9569e-01, -2.4266e-02,  5.8120e-01,
          3.3379e-01,  5.8899e-01,  2.0638e-01, -1.0339e-01,  1.4547e-01,
         -8.5001e-02,  5.7707e-02,  1.8603e-02, -5.2689e-02, -3.9353e-01,
         -1.0299e-01, -1.8957e-01,  3.4973e-01, -2.6514e-01, -5.4821e-01,
         -4.8908e-02, -1.6074e-01, -3.6387e-02, -3.8382e-01,  1.1533e-01,
         -3.8807e-01, -5.1963e-02,  1.2418e-01,  3.0130e-02, -2.9424e-01,
          2.3940e-01, -4.7441e-01, -1.1579e-01, -5.1552e-02, -2.6754e-02,
         -1.3727e-01, -1.7253e-01, -1.1744e-01, -5.4866e-02,  1.0795e-01,
          7.7463e-02, -2.1405e-01,  1.8297e-01,  1.3349e-01,  2.4548e-01,
         -3.1287e-01,  9.5932e-02,  1.9069e-01,  1.2893e-01,  2.6394e-01,
         -8.2845e-02,  9.2341e-02,  1.6092e-01, -3.6520e-01, -1.7523e-01,
          1.2339e-01, -2.7271e-01,  1.7001e-01, -3.4356e-01, -6.2562e-02,
         -7.8012e-03, -4.9440e-01, -1.4442e-01,  3.1992e-04, -2.3415e-01,
         -5.3268e-02,  3.8823e-01, -1.4587e-01, -3.0814e-01,  1.2350e-01,
         -3.5993e-02, -1.5145e-01,  8.0914e-01, -7.4911e-02,  1.9215e-01,
          3.2003e-01, -2.4899e-01,  3.6705e-01, -4.7201e-01,  1.2168e-02,
          1.2917e-02,  1.3989e-01,  5.1498e-02, -2.0595e-02, -3.8579e-02,
          8.1946e-02,  9.5000e-02, -1.6497e-03,  3.9245e-03, -9.9796e-02,
         -7.7632e-02, -1.3391e-01,  1.5411e-03,  1.0028e-01, -2.3059e-02,
         -1.4653e-01, -7.8560e-02, -2.2767e-01, -2.3846e-02,  1.7105e-02,
          7.6419e-02, -5.2733e-03, -3.2195e-02, -7.6695e-02, -1.0349e-01,
         -1.1764e-01,  1.2576e-01, -5.4341e-02,  6.3277e-02, -1.9194e-01,
          2.2819e-02,  1.7330e-01, -2.7545e-01, -1.2523e-01, -1.1012e-01,
         -1.3835e-01, -1.5098e-01,  1.7469e-01,  4.1012e-03,  9.7013e-02,
         -1.4200e-01,  1.3299e-01,  2.1298e-02, -2.1574e-01, -1.6944e-01,
          8.9422e-02,  3.3329e-02,  1.5256e-01, -5.7881e-02,  1.0807e-01,
         -4.5378e-02]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
251000 特征值优化 tensor(0.5733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6298,  0.6484, -1.1919, -1.0637,  3.3148,  2.7022,  2.7041,  2.7129,
          1.2769,  0.1258,  0.0778, -0.6143,  0.2829, -0.3661, -0.0390,  1.4163,
          0.2018,  0.5613,  0.1284,  0.7702,  0.3173, -0.0163,  0.2373, -0.0360,
          0.7477, -0.0506, -0.5429,  0.3662,  0.0470,  0.2856, -0.2959, -0.1439,
          0.1917, -0.0312,  0.5827,  0.3455,  0.5967,  0.1990, -0.0983,  0.1477,
         -0.0787,  0.0573,  0.0160, -0.0610, -0.3926, -0.1030, -0.2111,  0.3461,
         -0.2606, -0.5488, -0.0641, -0.1700, -0.0279, -0.3828,  0.1150, -0.3810,
         -0.0394,  0.1286,  0.0342, -0.2884,  0.2406, -0.4669, -0.1416, -0.0615,
         -0.0202, -0.1455, -0.1689, -0.1177, -0.0562,  0.1073,  0.0694, -0.2173,
          0.1757,  0.1431,  0.2443, -0.3162,  0.1034,  0.2035,  0.1205,  0.2645,
         -0.0826,  0.0935,  0.1569, -0.3626, -0.1700,  0.1274, -0.2830,  0.1620,
         -0.3521, -0.0585, -0.0093, -0.4800, -0.1543, -0.0067, -0.2410, -0.0518,
          0.3796, -0.1480, -0.2990,  0.1279, -0.0441, -0.1432,  0.8094, -0.0693,
          0.1936,  0.3274, -0.2604,  0.3555, -0.4785,  0.0102,  0.0127,  0.1495,
          0.0526, -0.0256, -0.0376,  0.0893,  0.1001, -0.0134,  0.0073, -0.1025,
         -0.0788, -0.1371,  0.0184,  0.1053, -0.0216, -0.1539, -0.0781, -0.2191,
         -0.0298,  0.0056,  0.0820, -0.0182, -0.0306, -0.0792, -0.1114, -0.1063,
          0.1175, -0.0543,  0.0745, -0.2036,  0.0248,  0.1895, -0.2613, -0.1139,
         -0.1180, -0.1367, -0.1536,  0.1661,  0.0085,  0.0939, -0.1364,  0.1333,
          0.0202, -0.2127, -0.1634,  0.0817,  0.0236,  0.1616, -0.0633,  0.0986,
         -0.0399]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
252000 特征值优化 tensor(0.5788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6687,  0.6192, -1.1977, -1.0578,  3.3299,  2.7131,  2.6783,  2.7182,
          1.2898,  0.1326,  0.0698, -0.6222,  0.3190, -0.4030, -0.0484,  1.4227,
          0.2009,  0.5562,  0.1276,  0.7605,  0.3530, -0.0395,  0.2452, -0.0224,
          0.7497, -0.0702, -0.5546,  0.3628,  0.0238,  0.2875, -0.2969, -0.1486,
          0.1816, -0.0358,  0.5808,  0.3404,  0.5735,  0.2202, -0.0935,  0.1742,
         -0.0901,  0.0562,  0.0174, -0.0532, -0.3970, -0.0913, -0.2107,  0.3192,
         -0.2646, -0.5325, -0.0620, -0.1670, -0.0102, -0.3707,  0.1013, -0.3767,
         -0.0411,  0.1164,  0.0299, -0.2844,  0.2375, -0.4613, -0.1261, -0.0523,
         -0.0445, -0.1414, -0.1548, -0.1150, -0.0622,  0.0918,  0.0699, -0.2182,
          0.1886,  0.1404,  0.2577, -0.3270,  0.1110,  0.1827,  0.1528,  0.2689,
         -0.0717,  0.0939,  0.1603, -0.3566, -0.1914,  0.1180, -0.3074,  0.1624,
         -0.3440, -0.0838, -0.0228, -0.4880, -0.1803,  0.0173, -0.2352, -0.0514,
          0.3900, -0.1910, -0.2922,  0.1431, -0.0295, -0.1342,  0.8101, -0.0751,
          0.2075,  0.3391, -0.2583,  0.3643, -0.4850,  0.0063,  0.0185,  0.1270,
          0.0645, -0.0252, -0.0589,  0.0931,  0.0910,  0.0035,  0.0258, -0.0975,
         -0.0621, -0.1241,  0.0227,  0.0975,  0.0064, -0.1471, -0.0750, -0.2149,
         -0.0325,  0.0193,  0.0798, -0.0179, -0.0451, -0.0748, -0.0973, -0.0869,
          0.1394, -0.0630,  0.0590, -0.1762,  0.0114,  0.1502, -0.2437, -0.1296,
         -0.0991, -0.1204, -0.1543,  0.1802,  0.0110,  0.1147, -0.1374,  0.1524,
          0.0110, -0.2114, -0.1530,  0.0946,  0.0309,  0.1665, -0.0643,  0.0968,
         -0.0443]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
253000 特征值优化 tensor(0.5737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6720,  0.5988, -1.2057, -1.0636,  3.3633,  2.7267,  2.6770,  2.7171,
          1.3112,  0.1369,  0.0548, -0.6323,  0.3114, -0.4029, -0.0487,  1.4118,
          0.1949,  0.5616,  0.1257,  0.7580,  0.3438, -0.0435,  0.2440, -0.0307,
          0.7468, -0.0623, -0.5679,  0.3707,  0.0282,  0.2981, -0.3061, -0.1390,
          0.1987, -0.0273,  0.5748,  0.3387,  0.5822,  0.2299, -0.0920,  0.1825,
         -0.0824,  0.0570,  0.0174, -0.0673, -0.4080, -0.0857, -0.2058,  0.3098,
         -0.2671, -0.5177, -0.0687, -0.1686,  0.0036, -0.3643,  0.1005, -0.3681,
         -0.0399,  0.1205,  0.0208, -0.2824,  0.2451, -0.4510, -0.1263, -0.0522,
         -0.0424, -0.1450, -0.1566, -0.1137, -0.0592,  0.0806,  0.0750, -0.2228,
          0.1847,  0.1361,  0.2626, -0.3247,  0.1182,  0.1760,  0.1633,  0.2666,
         -0.0711,  0.0840,  0.1600, -0.3707, -0.2038,  0.1064, -0.2891,  0.1551,
         -0.3517, -0.1007, -0.0334, -0.4833, -0.1805,  0.0331, -0.2398, -0.0499,
          0.3910, -0.2183, -0.2995,  0.1387, -0.0204, -0.1335,  0.8186, -0.0734,
          0.2132,  0.3344, -0.2458,  0.3718, -0.4900,  0.0039,  0.0148,  0.1236,
          0.0503, -0.0214, -0.0698,  0.0990,  0.0758,  0.0044,  0.0224, -0.0962,
         -0.0521, -0.1312,  0.0226,  0.0997,  0.0070, -0.1430, -0.0713, -0.2112,
         -0.0247,  0.0117,  0.0745, -0.0143, -0.0470, -0.0671, -0.0989, -0.0843,
          0.1421, -0.0618,  0.0668, -0.1703,  0.0110,  0.1439, -0.2369, -0.1284,
         -0.0923, -0.1254, -0.1503,  0.1785,  0.0157,  0.1056, -0.1351,  0.1610,
          0.0129, -0.2065, -0.1641,  0.0969,  0.0306,  0.1587, -0.0520,  0.0906,
         -0.0546]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
254000 特征值优化 tensor(0.5853, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6763e+00,  5.5897e-01, -1.2044e+00, -1.0565e+00,  3.3782e+00,
          2.7336e+00,  2.6804e+00,  2.7137e+00,  1.3080e+00,  1.4100e-01,
          4.7565e-02, -6.2035e-01,  3.2927e-01, -4.1572e-01, -3.2239e-02,
          1.4101e+00,  2.0483e-01,  5.5595e-01,  1.4761e-01,  7.6230e-01,
          3.2671e-01, -4.4696e-02,  2.4550e-01, -2.6558e-02,  7.3696e-01,
         -5.1968e-02, -5.5319e-01,  3.6125e-01,  1.7783e-02,  3.0091e-01,
         -3.0458e-01, -1.5672e-01,  1.9554e-01, -3.0328e-02,  5.7031e-01,
          3.3430e-01,  5.8087e-01,  2.2369e-01, -9.8134e-02,  1.7420e-01,
         -8.5480e-02,  5.5801e-02,  1.9307e-02, -6.3823e-02, -4.1061e-01,
         -1.0173e-01, -2.1033e-01,  3.0897e-01, -2.6073e-01, -5.0722e-01,
         -7.0265e-02, -1.6951e-01,  7.1692e-03, -3.6684e-01,  9.9125e-02,
         -3.7876e-01, -3.6033e-02,  9.9578e-02,  1.4275e-02, -2.7608e-01,
          2.3348e-01, -4.4555e-01, -1.3151e-01, -5.9601e-02, -3.2995e-02,
         -1.4238e-01, -1.6931e-01, -1.1785e-01, -5.5584e-02,  8.2777e-02,
          7.2997e-02, -2.2100e-01,  1.8929e-01,  1.2666e-01,  2.4877e-01,
         -3.2893e-01,  1.2204e-01,  1.8155e-01,  1.5576e-01,  2.6975e-01,
         -6.1417e-02,  9.1336e-02,  1.6752e-01, -3.7450e-01, -1.9529e-01,
          1.2627e-01, -3.0831e-01,  1.5873e-01, -3.3390e-01, -7.8515e-02,
         -3.3912e-02, -4.8037e-01, -1.7914e-01,  2.9225e-02, -2.3546e-01,
         -4.7847e-02,  3.8642e-01, -1.9605e-01, -2.9307e-01,  1.5451e-01,
         -4.3229e-02, -1.2995e-01,  8.1541e-01, -7.9793e-02,  2.1849e-01,
          3.3203e-01, -2.4301e-01,  3.7194e-01, -4.8109e-01,  1.8375e-03,
          2.5061e-02,  1.2841e-01,  4.1158e-02, -2.3749e-02, -5.4497e-02,
          9.0901e-02,  8.2590e-02,  1.2905e-02,  2.8319e-03, -9.9372e-02,
         -5.1492e-02, -1.2653e-01,  3.3095e-02,  9.6720e-02,  1.6303e-03,
         -1.4574e-01, -7.2728e-02, -2.0368e-01, -3.4691e-02,  2.1859e-02,
          8.1718e-02, -1.4306e-02, -4.9064e-02, -7.2993e-02, -9.8527e-02,
         -8.9908e-02,  1.3696e-01, -4.8936e-02,  6.6298e-02, -1.7394e-01,
          1.5185e-02,  1.4018e-01, -2.5359e-01, -1.1913e-01, -1.1314e-01,
         -1.4278e-01, -1.5547e-01,  1.8050e-01,  2.0621e-02,  9.4469e-02,
         -1.3850e-01,  1.4878e-01,  8.2895e-03, -2.0139e-01, -1.5386e-01,
          9.3139e-02,  4.5105e-02,  1.5914e-01, -5.6976e-02,  9.7149e-02,
         -4.0899e-02]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
255000 特征值优化 tensor(29.0337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.0971e-02, -6.4419e-01, -7.0257e-01, -5.2206e-01, -8.7902e-01,
         -1.6949e+00,  1.4959e+00, -7.5020e-02, -1.7190e-01, -3.1410e+00,
          7.3365e-01,  1.6299e-02, -7.8033e-01, -1.0323e-01,  1.3298e+00,
         -4.5379e-01, -6.5083e-01, -5.7196e-01, -8.2870e-02, -2.3189e+00,
          9.7639e-02, -2.9798e-01,  6.4691e-01, -1.4100e-01,  2.1013e-01,
          2.6429e-01,  4.5363e-02,  5.8960e-01, -3.7292e-02,  6.3758e-01,
         -9.8837e-01,  4.5815e-01, -3.0476e-01,  1.6365e+00,  1.3306e+00,
         -3.3367e-01, -1.8155e-01,  1.5998e-01,  2.2781e-01, -2.4534e-02,
          5.0420e-01, -5.0982e-01,  5.7041e-01, -1.2842e-02,  3.9782e-01,
         -3.3284e-02,  5.5599e-01, -9.9002e-01, -2.2190e-01,  4.6143e-01,
          4.0872e-01, -3.3718e-01,  1.9590e-01,  5.4556e-01, -1.6993e-02,
         -6.0889e-02, -4.2909e-01,  2.4412e-03, -2.2556e-02,  6.0179e-01,
         -3.1398e-01,  4.2898e-01, -3.2143e-01, -5.2995e-01, -4.0495e-01,
          7.0801e-02,  7.1329e-02,  7.7179e-01,  1.6582e-01,  5.3471e-01,
          3.3361e-01,  2.6624e-01,  4.9260e-01,  9.0176e-02,  1.6738e-01,
         -3.4528e-01,  1.3962e+00, -1.2361e+00, -8.8936e-02, -1.6086e-01,
         -2.2344e-01,  5.5794e-01,  2.8079e-01,  7.1037e-02,  1.5169e-01,
         -6.7720e-01,  1.2238e-01, -9.5834e-01,  3.6072e-01,  4.4138e-02,
          9.9388e-01,  7.5953e-01, -2.4641e-01, -6.6009e-01, -4.6580e-01,
          5.4001e-01, -1.5243e-01,  4.1221e-01, -7.0431e-01, -1.1423e+00,
          2.0686e-01,  7.7681e-01,  1.0524e+00, -1.4275e-01,  9.1264e-03,
         -8.5015e-01, -6.8754e-01, -1.9473e-01,  1.0057e+00,  1.5495e+00,
          3.2650e-01,  9.4283e-02,  8.6069e-01, -6.1461e-02,  1.1387e-01,
          4.8302e-01, -2.2619e-01, -4.0883e-01, -1.8783e+00, -3.9311e-01,
          2.0453e-01,  5.8662e-02,  1.3274e+00,  4.2858e-01,  9.1999e-02,
         -8.1182e-01, -5.6150e-01, -7.2876e-01,  9.7395e-01,  9.1312e-01,
         -1.3141e+00, -7.2054e-01, -6.9368e-02, -3.1304e-01, -5.9887e-02,
          4.6840e-01, -2.6932e-01,  8.3259e-01,  3.8013e-01,  1.4124e+00,
          2.0579e-01,  2.3008e-01, -1.2765e+00, -3.6567e+00, -7.2611e-02,
         -1.0541e+00, -1.6918e-01, -4.7522e-01, -7.4626e-01, -3.1683e-01,
         -2.2783e-01,  6.0272e-01,  2.8203e-01, -4.0147e-02,  3.6268e-01,
         -4.0454e-03,  3.1481e-01, -2.6984e-01,  2.4423e-01, -9.4832e-03,
          1.4336e-01]], device='cuda:0') tensor(0.2231, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
256000 特征值优化 tensor(9.9887, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1617,  0.6243,  0.1918, -0.9090,  0.0525, -0.9403,  1.0495, -0.1331,
          1.0451, -2.0369,  0.1103,  0.0974,  0.1591,  0.1351,  0.8875, -0.0217,
         -0.2915, -0.1322, -0.3387, -1.5973,  0.0054, -0.4561,  0.1135,  0.1460,
         -0.4637, -0.0414,  0.1393,  0.1274,  0.0725,  0.1582, -0.2432, -0.0345,
         -0.0293,  0.6458,  0.6735, -0.2261, -0.0894,  0.1318,  0.0830, -0.0377,
          0.0302, -0.4112,  0.4862,  0.1056,  0.2800,  0.0614,  0.0304, -0.1410,
         -0.1537, -0.1266,  0.0315, -0.2896, -0.1270,  0.2047,  0.1607,  0.1673,
         -0.0421, -0.0493, -0.2488, -0.0053, -0.1392,  0.3368,  0.0032,  0.0518,
         -0.1968,  0.1198, -0.0447,  0.0187, -0.2176,  0.0860, -0.0125,  0.2092,
          0.1347,  0.1208,  0.1595,  0.0105,  0.6536, -0.2739, -0.0374, -0.1184,
         -0.0596,  0.1131, -0.0357,  0.0821, -0.0605, -0.2469,  0.0342, -0.2463,
          0.1583, -0.2292,  0.4428,  0.1298,  0.1484,  0.0702,  0.1083, -0.1174,
         -0.0666, -0.0233, -0.0478, -0.2855,  0.1472,  0.2464,  0.5165,  0.2290,
          0.0973, -0.1489, -0.0682,  0.0317, -0.0752,  0.8216, -0.0552,  0.0804,
          0.1835, -0.0400, -0.0760, -0.0554, -0.0672, -0.0324, -0.8658,  0.0258,
          0.2229,  0.0269,  0.4394,  0.2673, -0.1077, -0.1647, -0.1722, -0.2470,
          0.5201,  0.2822, -0.5759, -0.2781,  0.1140, -0.0969, -0.0753,  0.1029,
         -0.2214,  0.2646,  0.0850,  0.6533,  0.3642, -0.1855, -0.6972, -2.4810,
         -0.0075, -0.3369,  0.0899, -0.0549, -0.2050,  0.0553, -0.0108,  0.2031,
          0.0779,  0.1895,  0.2254, -0.0558, -0.0542, -0.0157, -0.0250,  0.0747,
         -0.0345]], device='cuda:0') tensor(0.2316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
257000 特征值优化 tensor(3.9903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1456e+00,  1.2019e+00,  2.1379e-01, -8.5295e-01,  1.0471e+00,
         -2.4169e-01,  1.3196e+00, -7.3317e-02,  1.7583e+00, -1.1262e+00,
         -2.5322e-02, -8.3863e-02,  3.2842e-01, -1.1437e-01,  2.0377e-01,
          1.5614e-01, -7.3015e-02, -3.1142e-02, -4.7499e-01, -1.4311e+00,
          2.1955e-02, -7.3127e-01, -1.1400e-01, -2.8156e-01, -8.1247e-01,
         -2.1579e-01,  1.4281e-02, -4.8292e-02, -2.6957e-01,  1.8732e-01,
         -1.5742e-01,  4.4286e-02, -2.1659e-02,  2.4825e-01,  4.8958e-01,
         -2.4382e-01, -3.8334e-03,  1.3233e-02, -1.1190e-01, -2.7981e-01,
         -2.4424e-01, -6.0203e-01,  6.7980e-01,  1.2353e-01,  2.8828e-01,
         -2.0283e-02,  1.0383e-01, -3.4530e-02, -2.1969e-02, -3.0945e-01,
         -1.8348e-02, -2.3073e-01, -2.5090e-01,  3.3746e-01,  2.5409e-02,
          1.6060e-01,  2.8747e-02, -5.3829e-02, -8.8110e-02,  2.6378e-01,
         -3.8433e-01,  2.4864e-01, -3.2545e-02, -7.1707e-02, -1.3865e-01,
         -5.5689e-02, -9.9674e-02, -1.3827e-01, -1.8148e-01,  1.3338e-01,
         -5.1958e-02,  1.2442e-01,  1.3275e-01, -7.3714e-03,  2.1667e-01,
         -1.9180e-01,  4.7788e-01, -7.2915e-03,  5.9409e-03,  3.6834e-02,
          8.0104e-02,  1.8487e-01,  5.2595e-02,  1.1388e-01, -1.3230e-01,
         -2.0423e-01, -1.1394e-01, -2.3922e-01,  1.2027e-01, -9.0586e-01,
          1.4136e-01,  3.5445e-01,  3.3407e-01,  1.3273e-01,  5.3990e-01,
         -1.4083e-01, -3.5408e-01,  3.8106e-02, -1.0111e-01,  1.5675e-02,
          9.6701e-02,  1.7913e-01,  5.3189e-01,  3.9866e-01, -1.9971e-02,
         -1.5458e-01,  8.0729e-02, -1.4649e-01, -4.3589e-01,  3.4611e-01,
         -4.1774e-02, -7.8930e-02,  1.7393e-02, -5.8666e-05, -9.3189e-02,
         -1.8098e-01,  1.4053e-01, -8.7473e-05, -5.1140e-01,  9.5643e-02,
          1.4487e-01,  1.5034e-01,  2.5026e-01,  2.5199e-01, -1.3388e-01,
         -5.4618e-02, -3.0999e-02, -1.2669e-01,  3.7625e-01,  3.7396e-02,
         -3.4180e-01, -2.8247e-01,  1.9346e-01,  4.8512e-02,  5.7067e-02,
          2.1771e-01, -6.9572e-02,  1.1680e-01,  1.7031e-01,  4.6324e-01,
          3.5416e-01, -3.0801e-02, -5.2620e-01, -1.4730e+00, -5.3776e-03,
         -4.9584e-02,  1.0780e-01,  1.4790e-01, -9.0700e-02, -9.8948e-03,
          1.7329e-01, -1.6093e-01,  7.3803e-02,  2.1732e-01,  1.3801e-01,
          7.4847e-02,  5.7524e-02,  8.1349e-03,  9.1797e-02, -1.0095e-01,
          1.7361e-01]], device='cuda:0') tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
258000 特征值优化 tensor(1.8163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.9934e-01,  1.1559e+00,  1.3221e-01, -8.3744e-01,  1.7824e+00,
         -1.4464e-01,  2.0477e+00,  9.8454e-01,  1.9225e+00, -7.5320e-01,
         -7.5952e-02, -4.7288e-02,  3.8056e-01, -5.5321e-01,  1.9758e-01,
          3.0123e-01, -4.7040e-01,  1.3573e-01, -4.2565e-01, -1.4175e+00,
         -1.0529e-01, -3.4322e-01, -1.1021e-01, -8.5606e-01, -1.2859e+00,
         -4.0205e-01,  4.5831e-02, -4.7221e-01, -5.2615e-01,  8.4018e-02,
         -1.4683e-01,  1.9268e-01, -8.3082e-02,  2.6903e-01,  2.8607e-01,
         -3.3348e-01, -1.0215e-01, -1.4315e-02, -8.2045e-02, -4.3186e-01,
         -3.5817e-01, -6.5466e-01,  7.2720e-01,  1.5313e-01,  4.3650e-01,
         -1.3434e-01,  1.0133e-01, -9.2415e-02, -4.2087e-02, -2.2692e-01,
         -1.3481e-02, -9.5683e-03, -2.9064e-01,  3.4276e-01, -3.8156e-04,
          7.3934e-02, -3.1248e-01, -7.4279e-02,  7.5438e-02,  3.6152e-01,
         -3.8143e-01,  1.4739e-01, -8.1872e-02, -1.0400e-01, -6.8145e-02,
         -2.0122e-02, -2.4501e-02, -2.3134e-01, -1.8199e-01,  2.2483e-01,
         -5.2269e-02,  9.2962e-02,  1.4288e-01, -1.1009e-01,  1.8633e-01,
         -3.1798e-01,  2.4525e-01, -3.1069e-01,  7.5303e-02,  9.2182e-02,
          1.2281e-01,  2.2496e-01,  5.8613e-02,  9.1479e-02, -4.7738e-02,
         -1.8912e-01, -1.0517e-01, -2.5093e-01,  1.4194e-01, -7.4621e-01,
          1.3091e-01,  8.4043e-01,  4.4976e-01,  1.0755e-01,  6.8560e-01,
         -1.3117e-01, -5.2814e-01,  2.0367e-01,  2.2473e-02,  2.9269e-02,
          2.7929e-01,  9.0516e-02,  2.2029e-01,  2.4712e-01, -5.6129e-02,
         -3.7619e-01, -2.2803e-01, -7.8485e-02, -5.7733e-01,  2.3139e-01,
         -4.6088e-04, -8.0588e-02, -4.4840e-02, -5.5967e-02, -4.3647e-02,
         -1.0175e-01,  3.7389e-02, -5.0420e-02, -3.2109e-01, -8.6686e-03,
          1.3631e-01,  2.2536e-01,  1.6392e-01,  2.2281e-01, -1.7105e-01,
         -6.5997e-02,  1.0656e-01, -1.7767e-01,  2.0588e-01,  4.7639e-02,
         -2.4897e-01, -7.5493e-02,  2.4321e-01, -6.9326e-02, -3.9373e-02,
          1.5809e-02, -8.9385e-02,  8.4334e-02,  1.5749e-01,  3.7769e-01,
          2.1695e-01, -9.6047e-02, -1.6805e-01, -7.7972e-01,  2.0992e-02,
         -2.5735e-03,  7.2094e-02,  1.5896e-01, -1.0534e-01,  5.0792e-02,
          1.1855e-01, -2.1300e-01,  5.9105e-02,  1.1505e-01,  2.2203e-01,
          1.6245e-01,  1.2578e-01, -1.2135e-01,  1.2616e-01, -1.6146e-01,
          2.6640e-02]], device='cuda:0') tensor(0.2333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
259000 特征值优化 tensor(1.5077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.7058e-01,  1.1109e+00, -9.4592e-02, -8.8592e-01,  2.0877e+00,
          2.9988e-02,  2.3489e+00,  1.2063e+00,  1.8900e+00, -7.5124e-01,
         -9.9885e-02,  1.7176e-01,  4.2130e-01, -6.8000e-01,  3.2119e-01,
          3.3831e-01, -4.4933e-01,  1.4691e-01, -4.2010e-01, -1.4213e+00,
         -2.3829e-01, -1.5385e-01, -8.7590e-02, -1.1881e+00, -1.3575e+00,
         -4.5032e-01,  1.8839e-02, -5.6677e-01, -5.1041e-01,  1.1292e-01,
         -2.2373e-01,  2.7169e-01, -5.9090e-02,  2.4551e-01,  1.9915e-01,
         -2.8602e-01, -1.6856e-01,  2.4985e-02, -1.3389e-01, -4.8226e-01,
         -2.3900e-01, -6.6376e-01,  7.2670e-01,  6.7867e-02,  3.9478e-01,
         -2.7458e-01,  2.1797e-02, -6.2516e-02,  4.7391e-02, -8.4386e-02,
         -8.0406e-02,  6.4942e-02, -2.7395e-01,  2.9598e-01, -2.5855e-03,
          3.4981e-02, -3.0832e-01, -1.2810e-01,  3.3229e-02,  3.9148e-01,
         -3.0948e-01,  8.2786e-02,  3.6732e-02, -3.7071e-02,  4.1581e-02,
          6.8084e-03,  1.0251e-02, -1.8185e-01, -1.9091e-01,  1.8347e-01,
         -1.8985e-02,  6.5268e-02,  1.6706e-01, -1.2979e-01,  1.7174e-01,
         -3.4023e-01,  1.6666e-01, -3.8948e-01,  1.5190e-01,  5.0039e-02,
          1.1896e-01,  1.9621e-01,  7.1929e-02,  8.0394e-02, -1.5655e-02,
         -1.6215e-01, -1.0562e-01, -1.6524e-01, -6.0809e-02, -6.5489e-01,
          9.8931e-02,  1.0236e+00,  4.4353e-01, -1.4223e-02,  6.4073e-01,
         -3.7774e-02, -6.4167e-01,  1.2654e-01,  9.5246e-02, -6.5301e-02,
          4.4145e-01, -1.0242e-01,  9.0265e-02,  1.1087e-01,  9.4397e-02,
         -3.0764e-01, -3.0029e-01,  7.4451e-02, -5.6885e-01,  2.1623e-01,
          1.1144e-01, -6.2290e-02, -3.7611e-02, -1.2755e-01, -8.0249e-03,
          1.9759e-02,  2.7330e-02, -4.8007e-02, -2.4722e-01, -5.8050e-02,
          1.7230e-01,  1.8904e-01,  1.4041e-01,  1.2965e-01, -1.1025e-01,
         -3.1603e-02,  1.6575e-01, -1.8164e-01,  3.8541e-02,  1.3405e-01,
         -2.2885e-01, -1.0753e-02,  1.5164e-01,  1.3232e-03, -8.4831e-02,
          5.4668e-02, -9.6411e-02,  5.2174e-02,  8.7255e-02,  2.9832e-01,
          1.2235e-01, -2.7080e-02, -1.0839e-01, -5.6338e-01,  3.1707e-02,
         -2.6256e-02,  7.4765e-02,  8.0952e-02, -2.1130e-02,  4.9751e-02,
          3.9667e-02, -1.2912e-01,  4.8607e-02,  1.0446e-01,  3.0839e-01,
          2.4010e-01,  1.6323e-01, -2.4783e-01,  1.7389e-01, -1.1104e-01,
         -1.1927e-02]], device='cuda:0') tensor(0.2201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
260000 特征值优化 tensor(1.4748, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.8178e-01,  9.5009e-01, -1.1703e-01, -9.0713e-01,  2.1593e+00,
          1.3640e-01,  2.4169e+00,  1.2572e+00,  1.9843e+00, -7.5041e-01,
         -1.5207e-01,  2.1061e-01,  4.7432e-01, -5.7917e-01,  3.1575e-01,
          2.3756e-01, -3.3578e-01,  1.0361e-01, -4.7801e-01, -1.4473e+00,
         -2.8485e-01, -8.6723e-02, -1.7591e-02, -1.2673e+00, -1.3634e+00,
         -4.8795e-01,  8.7173e-03, -5.2900e-01, -4.7603e-01,  1.6626e-01,
         -2.4095e-01,  2.7267e-01, -7.2868e-03,  2.0049e-01,  1.6270e-01,
         -1.7550e-01, -2.1651e-01,  6.7655e-02, -1.7903e-01, -4.6656e-01,
         -2.0989e-01, -6.6945e-01,  7.3321e-01,  5.4311e-02,  3.4818e-01,
         -2.8549e-01,  2.4212e-02, -6.9671e-02,  3.0108e-02,  8.3697e-03,
         -1.1178e-01,  6.1771e-02, -2.3980e-01,  2.5584e-01, -2.6467e-02,
          1.1027e-01, -3.1766e-01, -1.5627e-01, -1.9774e-02,  3.0946e-01,
         -3.3614e-01, -5.1058e-03,  1.4620e-01, -1.0558e-03,  9.7750e-02,
         -5.6294e-02, -1.4170e-02, -1.5290e-01, -1.6844e-01,  1.5693e-01,
          1.1077e-02,  2.0973e-02,  1.7582e-01, -1.4051e-01,  1.5234e-01,
         -3.6158e-01,  1.4589e-01, -3.9555e-01,  2.0163e-01,  3.6403e-02,
          1.1177e-01,  1.7657e-01,  8.3849e-02,  9.4785e-02, -2.5971e-02,
         -1.7844e-01, -1.0975e-01, -1.2350e-01, -1.2749e-01, -6.2494e-01,
          9.6172e-02,  1.0370e+00,  4.0238e-01, -6.9944e-02,  6.3938e-01,
         -2.5558e-02, -7.0651e-01,  1.5857e-01,  2.0063e-01, -1.1854e-01,
          5.3678e-01, -1.7403e-01,  8.5646e-02,  8.4966e-02,  1.0628e-01,
         -2.3592e-01, -2.9399e-01,  1.5031e-01, -5.9598e-01,  2.0726e-01,
          1.0900e-01, -4.4796e-02, -6.8248e-02, -1.9126e-01, -1.0608e-02,
          5.3825e-02, -5.1568e-04, -3.8748e-02, -2.0324e-01, -5.2127e-02,
          1.0367e-01,  1.5260e-01,  1.4313e-01,  9.1407e-02, -1.1451e-01,
         -2.3901e-03,  1.7547e-01, -1.7679e-01,  1.3501e-02,  1.5546e-01,
         -2.3735e-01, -4.1535e-02,  1.1253e-01, -6.4653e-03, -6.9140e-02,
          4.8942e-02, -9.4130e-02,  5.5478e-02,  5.4701e-02,  2.7883e-01,
          1.3111e-01,  1.8857e-02, -1.2144e-01, -5.3639e-01,  7.7338e-02,
         -4.1071e-02,  5.5313e-02,  1.0279e-01,  3.2444e-02,  3.3881e-02,
          1.6442e-02, -1.3786e-01,  4.6018e-02,  1.0643e-01,  3.0986e-01,
          2.8263e-01,  1.7217e-01, -2.8600e-01,  1.8695e-01, -1.2822e-01,
          7.8192e-04]], device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
261000 特征值优化 tensor(1.5606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.2051e-01,  7.5552e-01, -1.9428e-01, -9.0562e-01,  2.2445e+00,
          2.7186e-01,  2.4149e+00,  1.3177e+00,  2.0823e+00, -7.1503e-01,
         -1.6914e-01,  2.4928e-01,  5.3338e-01, -5.6912e-01,  3.1625e-01,
          2.5875e-01, -2.2139e-01,  1.3522e-01, -4.7092e-01, -1.4956e+00,
         -2.8484e-01, -4.8201e-02,  1.9709e-02, -1.3740e+00, -1.3732e+00,
         -4.8661e-01, -3.5374e-02, -5.0220e-01, -4.4959e-01,  2.0080e-01,
         -2.6864e-01,  2.5619e-01, -7.6700e-03,  1.6552e-01,  1.1919e-01,
         -7.2590e-02, -2.3263e-01,  8.8802e-02, -2.0835e-01, -4.2998e-01,
         -1.7957e-01, -6.8469e-01,  7.4517e-01,  2.9778e-02,  3.1127e-01,
         -3.0517e-01,  6.0950e-03, -6.7041e-02,  3.9331e-03,  5.7293e-03,
         -1.5464e-01,  2.3418e-02, -2.0047e-01,  2.2589e-01, -8.1413e-02,
          1.3022e-01, -3.4465e-01, -1.7283e-01,  1.7134e-02,  2.6335e-01,
         -3.5584e-01, -3.3384e-02,  1.5970e-01, -2.3796e-02,  1.5049e-01,
         -1.1567e-01,  6.8453e-04, -1.3477e-01, -1.3408e-01,  1.2572e-01,
          4.1840e-02, -1.5870e-02,  1.8677e-01, -1.4264e-01,  1.5101e-01,
         -3.7696e-01,  1.0512e-01, -3.8588e-01,  2.2659e-01,  1.0285e-02,
          9.1629e-02,  1.5217e-01,  6.4820e-02,  7.3569e-02, -4.7071e-02,
         -1.9005e-01, -1.0964e-01, -1.0941e-01, -1.9439e-01, -5.7434e-01,
          7.3992e-02,  1.0265e+00,  3.6660e-01, -3.3405e-02,  6.4573e-01,
          9.3765e-03, -7.1438e-01,  1.4409e-01,  1.6312e-01, -2.1550e-01,
          6.3762e-01, -1.7827e-01,  1.2417e-01,  9.1993e-02,  1.3358e-01,
         -1.5218e-01, -3.2434e-01,  1.4868e-01, -6.2759e-01,  1.9522e-01,
          1.0886e-01, -1.5550e-02, -2.9533e-02, -1.8313e-01, -1.2843e-02,
          6.3629e-02, -3.5384e-02, -6.0240e-02, -1.8856e-01, -8.4587e-02,
          3.2241e-03,  1.1793e-01,  1.2116e-01,  7.3453e-02, -1.0726e-01,
         -5.3344e-03,  1.7334e-01, -1.2950e-01,  3.4651e-02,  9.7408e-02,
         -2.1683e-01, -2.7521e-02,  9.4960e-02,  2.6817e-02, -1.1250e-01,
          8.8430e-03, -9.8802e-02,  5.6634e-02,  2.8230e-02,  2.5713e-01,
          1.3573e-01,  3.2097e-02, -1.3654e-01, -5.2188e-01,  6.0811e-02,
         -5.9772e-02,  6.8524e-02,  1.3833e-01,  5.5677e-02,  5.7941e-02,
          6.7871e-03, -1.5066e-01,  4.5086e-02,  7.1397e-02,  3.3797e-01,
          2.7857e-01,  1.8295e-01, -2.8091e-01,  1.8395e-01, -1.2880e-01,
          5.3891e-04]], device='cuda:0') tensor(0.2607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
262000 特征值优化 tensor(1.4304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5094e-01,  6.1235e-01, -2.5308e-01, -9.1175e-01,  2.2261e+00,
          4.1207e-01,  2.3932e+00,  1.3810e+00,  2.1800e+00, -6.8218e-01,
         -1.7365e-01,  2.7029e-01,  5.2897e-01, -5.6931e-01,  3.1239e-01,
          3.1816e-01, -2.0074e-01,  1.1952e-01, -3.8965e-01, -1.4875e+00,
         -3.4549e-01, -8.5230e-02,  2.6427e-02, -1.4474e+00, -1.3420e+00,
         -4.9272e-01,  2.2980e-02, -5.3734e-01, -4.4483e-01,  2.1624e-01,
         -2.3740e-01,  2.2433e-01, -2.6966e-02,  1.2761e-01,  5.1938e-02,
          1.7343e-02, -2.2501e-01,  6.6411e-02, -2.2442e-01, -4.0768e-01,
         -1.3493e-01, -6.8787e-01,  7.4465e-01,  3.6311e-02,  3.0856e-01,
         -2.7209e-01, -3.0963e-02, -1.1068e-01,  3.1864e-02, -2.8442e-02,
         -1.6320e-01,  3.7781e-02, -1.5553e-01,  1.9605e-01, -1.5895e-01,
          1.3448e-01, -3.4450e-01, -2.2356e-01,  1.3023e-01,  1.7473e-01,
         -3.1745e-01, -6.1729e-02,  1.6985e-01, -7.1067e-02,  1.4582e-01,
         -1.3801e-01,  2.2416e-02, -9.2414e-02, -1.0181e-01,  1.6803e-01,
          5.6875e-02, -6.9878e-02,  2.0124e-01, -1.5006e-01,  1.4652e-01,
         -3.5892e-01,  1.3751e-01, -4.0184e-01,  2.5469e-01,  2.6291e-02,
          1.6218e-01,  1.3448e-01,  4.4127e-02,  4.7491e-02, -3.0730e-02,
         -2.1182e-01, -1.5105e-01, -1.2396e-01, -2.3112e-01, -5.1755e-01,
          4.1135e-02,  9.7368e-01,  3.6165e-01,  2.0575e-02,  6.1507e-01,
          4.3498e-02, -7.1423e-01,  1.2673e-01,  1.8287e-01, -2.0737e-01,
          5.9108e-01, -2.0438e-01,  1.1133e-01,  8.7758e-02,  1.4948e-01,
         -1.3877e-01, -3.4433e-01,  2.3914e-01, -6.6351e-01,  1.9931e-01,
          1.0619e-01, -5.1712e-03,  1.1097e-03, -1.4435e-01,  7.2698e-03,
          8.6427e-02, -5.8322e-02, -3.6807e-02, -1.9864e-01, -1.3541e-01,
         -6.0193e-02,  1.3047e-01,  9.2612e-02,  6.7996e-02, -1.1485e-01,
          1.1451e-02,  1.6446e-01, -1.4575e-01,  6.5865e-02,  8.8659e-02,
         -2.0262e-01, -4.3522e-02,  9.5091e-02,  5.5750e-02, -1.2776e-01,
         -4.6274e-03, -1.0708e-01,  4.3375e-02,  4.0090e-03,  2.2610e-01,
          1.2642e-01,  9.6560e-02, -1.3187e-01, -5.2285e-01,  4.8212e-02,
         -4.2434e-02,  8.1897e-02,  1.2025e-01,  2.4762e-02,  8.1057e-02,
          3.8900e-02, -1.2660e-01,  5.7925e-02,  3.5401e-02,  3.3335e-01,
          2.9666e-01,  2.0675e-01, -3.0125e-01,  1.4040e-01, -1.6334e-01,
          2.3870e-03]], device='cuda:0') tensor(0.2262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
263000 特征值优化 tensor(1.4302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.9063e-01,  4.9502e-01, -1.9681e-01, -9.2081e-01,  2.2497e+00,
          4.9310e-01,  2.3678e+00,  1.3957e+00,  2.2045e+00, -7.0395e-01,
         -1.8173e-01,  2.4827e-01,  4.8950e-01, -6.0244e-01,  3.6460e-01,
          3.4585e-01, -2.1634e-01,  1.1767e-01, -3.1737e-01, -1.4676e+00,
         -3.5900e-01, -1.3511e-01,  4.8573e-02, -1.4858e+00, -1.3471e+00,
         -5.2815e-01,  5.7840e-02, -5.7987e-01, -4.4829e-01,  2.1285e-01,
         -2.3496e-01,  2.1140e-01, -1.2577e-02,  1.3330e-01,  5.1258e-02,
          7.3021e-02, -2.1926e-01,  5.1895e-02, -1.8287e-01, -3.9569e-01,
         -1.4110e-01, -6.8720e-01,  7.4282e-01,  4.0730e-02,  3.1095e-01,
         -2.5173e-01, -2.1512e-02, -1.0239e-01,  9.4920e-03, -8.2426e-02,
         -1.5356e-01,  2.5087e-02, -1.5745e-01,  1.9007e-01, -1.6811e-01,
          1.1916e-01, -3.0593e-01, -2.1035e-01,  1.9302e-01,  1.0311e-01,
         -2.8954e-01, -6.1137e-02,  1.7057e-01, -9.1540e-02,  1.0951e-01,
         -1.6535e-01,  4.2764e-02, -1.0341e-01, -9.6434e-02,  1.7499e-01,
          6.0050e-02, -9.6584e-02,  2.1279e-01, -1.1924e-01,  1.5038e-01,
         -3.5972e-01,  1.6205e-01, -4.0536e-01,  2.5952e-01, -1.0210e-02,
          1.6344e-01,  1.2865e-01,  8.1659e-02,  2.7518e-02, -6.6113e-02,
         -2.1076e-01, -1.6512e-01, -1.1335e-01, -2.6390e-01, -5.3527e-01,
          3.7090e-02,  9.2640e-01,  3.1235e-01,  4.2125e-02,  6.2044e-01,
          2.8823e-02, -7.1855e-01,  1.3375e-01,  1.4346e-01, -2.4053e-01,
          6.2749e-01, -2.2854e-01,  7.8752e-02,  8.0950e-02,  1.3821e-01,
         -1.5329e-01, -3.0863e-01,  2.7874e-01, -5.9705e-01,  2.0010e-01,
          1.0834e-01, -6.0989e-03,  2.3490e-02, -1.6852e-01,  1.5883e-02,
          8.7078e-02, -6.0139e-02, -4.3163e-02, -1.9617e-01, -1.5347e-01,
         -6.2356e-02,  1.3472e-01,  7.8713e-02,  7.3134e-02, -1.3717e-01,
          1.5756e-02,  1.4992e-01, -1.2464e-01,  6.7105e-02,  8.1582e-02,
         -1.9245e-01, -4.4046e-02,  9.1569e-02,  7.7557e-02, -1.2536e-01,
          2.2793e-02, -1.0951e-01,  6.6484e-02, -9.4154e-03,  1.9086e-01,
          9.9236e-02,  1.1239e-01, -1.3940e-01, -5.2261e-01,  5.4816e-02,
         -5.8977e-02,  6.5022e-02,  1.2095e-01,  2.2419e-02,  7.8426e-02,
          3.5831e-02, -1.2586e-01,  5.2826e-02,  2.2889e-02,  3.5210e-01,
          2.8660e-01,  2.1665e-01, -3.1090e-01,  1.1369e-01, -1.6285e-01,
          9.6576e-05]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
264000 特征值优化 tensor(1.4238, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3521,  0.4134, -0.1277, -0.9234,  2.2789,  0.5239,  2.3730,  1.3866,
          2.1990, -0.6947, -0.1919,  0.2585,  0.4759, -0.5974,  0.3752,  0.3203,
         -0.2205,  0.0780, -0.2609, -1.4630, -0.3683, -0.1507,  0.0590, -1.5097,
         -1.3652, -0.5311,  0.0840, -0.6116, -0.4831,  0.1921, -0.2311,  0.2011,
         -0.0297,  0.1109,  0.0565,  0.1008, -0.2067,  0.0385, -0.1716, -0.3635,
         -0.1183, -0.6870,  0.7415,  0.0334,  0.3278, -0.2442,  0.0057, -0.1009,
         -0.0067, -0.1057, -0.1572,  0.0167, -0.1578,  0.1688, -0.1681,  0.1037,
         -0.2824, -0.2113,  0.2065,  0.0821, -0.2785, -0.0423,  0.1755, -0.0954,
          0.1088, -0.1756,  0.0490, -0.1014, -0.0776,  0.1829,  0.0724, -0.1143,
          0.2132, -0.1304,  0.1599, -0.3596,  0.1615, -0.4083,  0.2788, -0.0172,
          0.1837,  0.1243,  0.0751,  0.0250, -0.0593, -0.2141, -0.1752, -0.1207,
         -0.2992, -0.5271,  0.0401,  0.8620,  0.3088,  0.0531,  0.6179,  0.0135,
         -0.7031,  0.1226,  0.0982, -0.2391,  0.6199, -0.2297,  0.1104,  0.0801,
          0.1326, -0.1363, -0.2556,  0.2944, -0.5647,  0.2108,  0.1086, -0.0072,
          0.0230, -0.1609,  0.0295,  0.0869, -0.0343, -0.0525, -0.2164, -0.1602,
         -0.0583,  0.1571,  0.0845,  0.0692, -0.1271,  0.0182,  0.1523, -0.1276,
          0.0606,  0.0729, -0.2144, -0.0374,  0.0945,  0.1014, -0.1257,  0.0147,
         -0.1132,  0.0621,  0.0025,  0.1806,  0.0856,  0.1374, -0.1371, -0.5257,
          0.0500, -0.0497,  0.0870,  0.1211,  0.0096,  0.0965,  0.0683, -0.1268,
          0.0879,  0.0198,  0.3451,  0.2821,  0.2390, -0.3138,  0.0969, -0.1639,
         -0.0055]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
265000 特征值优化 tensor(1.4253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2984,  0.3568, -0.1239, -0.9349,  2.3140,  0.5472,  2.3665,  1.4151,
          2.2126, -0.7069, -0.2030,  0.2553,  0.4514, -0.5834,  0.4084,  0.3471,
         -0.1968,  0.0581, -0.2461, -1.4880, -0.3684, -0.1769,  0.0897, -1.5234,
         -1.3851, -0.5232,  0.0917, -0.6082, -0.4720,  0.1676, -0.2537,  0.1909,
         -0.0100,  0.1139,  0.0512,  0.1187, -0.2001,  0.0284, -0.1335, -0.3409,
         -0.1152, -0.6872,  0.7367,  0.0146,  0.3469, -0.2490,  0.0354, -0.1078,
         -0.0397, -0.1100, -0.1498,  0.0025, -0.1611,  0.1573, -0.1891,  0.1059,
         -0.2862, -0.2516,  0.2093,  0.0716, -0.2656, -0.0587,  0.1803, -0.1056,
          0.0849, -0.1759,  0.0564, -0.1191, -0.0818,  0.1643,  0.0795, -0.1123,
          0.2136, -0.1359,  0.1697, -0.3648,  0.1519, -0.3899,  0.2519, -0.0433,
          0.1613,  0.1181,  0.0942,  0.0248, -0.0837, -0.2232, -0.2004, -0.1439,
         -0.3068, -0.5528,  0.0543,  0.8014,  0.3079,  0.0937,  0.6286,  0.0098,
         -0.6795,  0.1244,  0.0936, -0.2413,  0.5766, -0.2382,  0.1415,  0.0812,
          0.1058, -0.0965, -0.2436,  0.3052, -0.5576,  0.2060,  0.1102, -0.0214,
          0.0326, -0.1806,  0.0181,  0.0645, -0.0534, -0.0608, -0.2001, -0.1850,
         -0.0588,  0.1583,  0.0679,  0.0787, -0.1222,  0.0206,  0.1494, -0.1231,
          0.0650,  0.0475, -0.1993, -0.0394,  0.0899,  0.1275, -0.1360,  0.0243,
         -0.1137,  0.0440, -0.0037,  0.1698,  0.0762,  0.1219, -0.1521, -0.5140,
          0.0393, -0.0715,  0.0701,  0.1139,  0.0073,  0.1160,  0.0999, -0.1244,
          0.0938,  0.0197,  0.3341,  0.2701,  0.2162, -0.3205,  0.1005, -0.1662,
         -0.0070]], device='cuda:0') tensor(0.2339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
266000 特征值优化 tensor(1.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4658e-01,  2.9724e-01, -1.3778e-01, -9.5009e-01,  2.3063e+00,
          5.9056e-01,  2.3720e+00,  1.4323e+00,  2.2611e+00, -7.0023e-01,
         -2.1120e-01,  2.8190e-01,  4.7910e-01, -5.5903e-01,  3.9683e-01,
          3.5867e-01, -1.8344e-01,  2.3796e-02, -2.2836e-01, -1.4962e+00,
         -3.8824e-01, -1.7762e-01,  1.3754e-01, -1.5494e+00, -1.3964e+00,
         -5.0505e-01,  1.0088e-01, -5.9784e-01, -4.9790e-01,  1.4509e-01,
         -2.4032e-01,  1.9749e-01,  8.6961e-04,  1.0637e-01,  4.7879e-02,
          1.3469e-01, -1.9782e-01, -1.3304e-02, -1.1102e-01, -2.9095e-01,
         -1.0972e-01, -6.8216e-01,  7.3235e-01, -1.0511e-02,  3.6723e-01,
         -2.6196e-01,  4.4195e-02, -1.1647e-01, -3.1190e-02, -9.5987e-02,
         -1.5161e-01, -3.3097e-02, -1.5303e-01,  1.5440e-01, -2.0512e-01,
          1.1637e-01, -3.0521e-01, -2.5897e-01,  2.0970e-01,  5.4325e-02,
         -2.4629e-01, -4.6839e-02,  1.7403e-01, -8.6889e-02,  7.8703e-02,
         -1.7916e-01,  5.5838e-02, -1.2183e-01, -8.0376e-02,  1.5649e-01,
          9.1526e-02, -1.2394e-01,  2.0725e-01, -1.2698e-01,  1.8067e-01,
         -3.7827e-01,  1.4125e-01, -3.7576e-01,  2.7682e-01, -5.1665e-02,
          1.8107e-01,  1.1482e-01,  6.6281e-02,  3.2534e-03, -8.3371e-02,
         -2.2578e-01, -1.9565e-01, -1.5218e-01, -3.3059e-01, -5.4645e-01,
          4.4545e-02,  7.6173e-01,  3.0175e-01,  8.4363e-02,  6.2660e-01,
          1.2661e-02, -6.5170e-01,  1.1782e-01,  8.8142e-02, -2.1585e-01,
          5.9622e-01, -2.5258e-01,  1.3197e-01,  6.3450e-02,  1.1438e-01,
         -7.4815e-02, -2.4728e-01,  3.2136e-01, -5.1422e-01,  2.0431e-01,
          1.0873e-01, -4.4176e-03,  4.0569e-02, -1.8787e-01,  1.8223e-02,
          6.7645e-02, -2.9538e-02, -4.0193e-02, -2.0489e-01, -1.7070e-01,
         -6.3870e-02,  1.6369e-01,  6.3095e-02,  7.0503e-02, -1.0233e-01,
          1.5082e-02,  1.4712e-01, -1.2614e-01,  6.2917e-02,  2.3803e-02,
         -1.8879e-01, -3.2759e-02,  9.2762e-02,  1.4721e-01, -1.6301e-01,
          2.4486e-02, -1.4000e-01,  3.8434e-02,  1.8888e-02,  1.5283e-01,
          7.5383e-02,  1.1543e-01, -1.7421e-01, -4.9322e-01,  3.1506e-02,
         -8.8100e-02,  8.1641e-02,  9.1557e-02, -1.7886e-03,  1.3119e-01,
          1.3555e-01, -1.2620e-01,  9.5364e-02,  2.4018e-02,  3.2275e-01,
          2.7382e-01,  2.3729e-01, -3.2609e-01,  1.0694e-01, -1.6267e-01,
         -1.5550e-02]], device='cuda:0') tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
267000 特征值优化 tensor(1.4126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2235e-01,  2.6176e-01, -1.1372e-01, -9.5603e-01,  2.3078e+00,
          5.8977e-01,  2.3687e+00,  1.4429e+00,  2.3033e+00, -6.6691e-01,
         -2.1425e-01,  2.9921e-01,  4.8611e-01, -5.7169e-01,  4.1588e-01,
          3.7298e-01, -1.9986e-01,  5.7451e-03, -1.9983e-01, -1.5092e+00,
         -3.8759e-01, -2.0884e-01,  1.7069e-01, -1.5277e+00, -1.3862e+00,
         -4.8987e-01,  1.0121e-01, -5.9998e-01, -4.7686e-01,  1.4256e-01,
         -2.4981e-01,  1.8852e-01,  1.6625e-02,  9.5649e-02,  3.8029e-02,
          1.5383e-01, -1.8144e-01,  3.1224e-03, -9.6955e-02, -2.9612e-01,
         -1.0748e-01, -6.8493e-01,  7.3372e-01, -1.5302e-02,  3.7063e-01,
         -2.3504e-01,  3.7616e-02, -1.2008e-01, -3.8536e-03, -9.3955e-02,
         -1.6035e-01, -5.9233e-02, -1.3973e-01,  1.6202e-01, -1.9983e-01,
          1.1026e-01, -3.0704e-01, -2.7372e-01,  2.2560e-01,  3.9377e-02,
         -2.3863e-01, -6.5424e-02,  1.7617e-01, -8.2126e-02,  5.9950e-02,
         -1.7392e-01,  7.1428e-02, -1.1669e-01, -6.2305e-02,  1.4337e-01,
          1.0555e-01, -1.2179e-01,  2.0061e-01, -1.1432e-01,  1.6519e-01,
         -3.4925e-01,  1.5699e-01, -4.0152e-01,  2.9696e-01, -6.1142e-02,
          1.7615e-01,  9.8949e-02,  8.9686e-02,  6.1058e-03, -7.7127e-02,
         -2.1716e-01, -2.1224e-01, -1.6033e-01, -3.2202e-01, -5.3038e-01,
          3.8534e-02,  7.4780e-01,  2.9453e-01,  1.0097e-01,  6.3108e-01,
          7.2384e-03, -6.4948e-01,  9.0299e-02,  8.4869e-02, -2.4419e-01,
          5.7028e-01, -2.5756e-01,  1.3492e-01,  7.2739e-02,  1.0650e-01,
         -5.7338e-02, -2.3865e-01,  3.3649e-01, -5.0625e-01,  1.9785e-01,
          1.0888e-01,  7.8935e-04,  5.6552e-02, -1.8699e-01,  8.1648e-03,
          8.1074e-02, -3.2002e-02, -5.7976e-02, -2.0750e-01, -1.9260e-01,
         -4.1625e-02,  1.7723e-01,  5.7055e-02,  7.0609e-02, -9.9565e-02,
          1.6658e-02,  1.5189e-01, -1.1860e-01,  4.0028e-02,  9.3436e-04,
         -1.6549e-01, -3.5300e-02,  8.6447e-02,  1.8394e-01, -1.5559e-01,
          8.7592e-03, -1.3537e-01,  6.3196e-02, -9.8895e-03,  1.6846e-01,
          6.4196e-02,  1.3504e-01, -1.5638e-01, -5.2951e-01,  3.8085e-02,
         -7.9349e-02,  8.0823e-02,  9.8022e-02,  1.6542e-02,  1.3154e-01,
          1.2619e-01, -1.2349e-01,  1.1384e-01,  3.8002e-02,  3.1938e-01,
          2.7127e-01,  2.3419e-01, -3.3371e-01,  9.9730e-02, -1.7443e-01,
         -7.7409e-03]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
268000 特征值优化 tensor(1.4542, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4345e-01,  2.5817e-01, -1.2758e-01, -9.4834e-01,  2.3275e+00,
          5.7707e-01,  2.3659e+00,  1.4587e+00,  2.3230e+00, -6.2429e-01,
         -2.1954e-01,  3.3822e-01,  5.1448e-01, -5.4062e-01,  4.2514e-01,
          3.7817e-01, -1.8967e-01, -4.3517e-04, -1.7363e-01, -1.5331e+00,
         -4.0142e-01, -2.2798e-01,  2.3278e-01, -1.5317e+00, -1.3874e+00,
         -4.5050e-01,  7.7328e-02, -5.7369e-01, -5.1821e-01,  1.2639e-01,
         -2.3930e-01,  1.7636e-01,  2.6935e-02,  8.7929e-02,  5.9901e-03,
          1.5716e-01, -1.8774e-01, -1.0343e-02, -5.6373e-02, -2.8155e-01,
         -1.1174e-01, -6.8185e-01,  7.3300e-01, -1.7979e-02,  3.8696e-01,
         -2.3548e-01,  1.4707e-02, -1.4095e-01,  4.5168e-02, -8.5426e-02,
         -1.5975e-01, -9.0240e-02, -1.1375e-01,  1.5645e-01, -2.1220e-01,
          1.0045e-01, -3.2787e-01, -2.7423e-01,  2.3896e-01,  3.4535e-02,
         -2.3203e-01, -7.1301e-02,  1.6081e-01, -6.9254e-02,  4.6417e-02,
         -1.4830e-01,  7.5257e-02, -1.2260e-01, -5.5566e-02,  1.3075e-01,
          1.3211e-01, -1.3145e-01,  2.0921e-01, -1.2437e-01,  1.6700e-01,
         -3.4790e-01,  1.4520e-01, -3.7244e-01,  3.2104e-01, -5.9444e-02,
          1.6917e-01,  8.3795e-02,  7.9673e-02, -2.4914e-03, -5.1742e-02,
         -2.1619e-01, -2.0711e-01, -1.6764e-01, -3.1560e-01, -5.3465e-01,
          2.0261e-02,  7.5767e-01,  2.6644e-01,  9.3141e-02,  6.1211e-01,
          1.0846e-02, -6.4316e-01,  1.0996e-01,  9.1229e-02, -2.0125e-01,
          5.9481e-01, -2.5576e-01,  1.1340e-01,  5.3828e-02,  9.7468e-02,
         -2.7451e-02, -2.2716e-01,  3.3894e-01, -5.1547e-01,  1.9342e-01,
          1.0990e-01, -1.2665e-02,  5.5344e-02, -1.8069e-01,  1.5823e-02,
          7.6650e-02, -2.9955e-02, -5.7234e-02, -2.2389e-01, -1.9020e-01,
         -5.1304e-02,  1.6871e-01,  4.0905e-02,  6.5179e-02, -8.0897e-02,
          2.0711e-02,  1.4547e-01, -1.2832e-01,  2.3533e-02, -2.9713e-02,
         -1.4736e-01, -2.5287e-02,  8.6796e-02,  2.1311e-01, -1.7085e-01,
         -1.6351e-02, -1.4858e-01,  4.8533e-02, -4.3649e-03,  1.4798e-01,
          7.2033e-02,  1.0699e-01, -1.8270e-01, -4.9148e-01, -7.4744e-03,
         -7.2018e-02,  1.0379e-01,  7.8967e-02,  7.9176e-03,  1.3926e-01,
          1.4383e-01, -1.1090e-01,  1.1900e-01,  5.0493e-02,  3.0197e-01,
          2.6731e-01,  2.3168e-01, -3.5343e-01,  1.1607e-01, -1.7366e-01,
         -3.8168e-02]], device='cuda:0') tensor(0.2238, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
269000 特征值优化 tensor(1.4254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2528,  0.2311, -0.1477, -0.9492,  2.3805,  0.5760,  2.3041,  1.4516,
          2.3310, -0.5873, -0.2376,  0.3734,  0.5527, -0.5142,  0.4538,  0.3706,
         -0.2359, -0.0301, -0.1338, -1.5365, -0.4235, -0.2936,  0.2768, -1.5291,
         -1.3801, -0.4149,  0.0670, -0.5472, -0.5119,  0.1151, -0.2391,  0.1759,
          0.0431,  0.0822, -0.0044,  0.1644, -0.1847, -0.0231, -0.0107, -0.2771,
         -0.0972, -0.6800,  0.7313, -0.0226,  0.3941, -0.2089,  0.0157, -0.1417,
          0.0827, -0.0680, -0.1484, -0.1194, -0.0793,  0.1555, -0.2196,  0.0824,
         -0.3295, -0.2773,  0.2246,  0.0286, -0.2221, -0.0732,  0.1463, -0.0546,
          0.0241, -0.1417,  0.0809, -0.1226, -0.0384,  0.1098,  0.1520, -0.1273,
          0.2168, -0.1333,  0.1528, -0.3314,  0.1375, -0.3810,  0.3550, -0.0618,
          0.1710,  0.0634,  0.0894, -0.0160, -0.0566, -0.2224, -0.2327, -0.1753,
         -0.3149, -0.5242,  0.0200,  0.7683,  0.2657,  0.0969,  0.6153,  0.0152,
         -0.6413,  0.0927,  0.1092, -0.1895,  0.5910, -0.2433,  0.0514,  0.0589,
          0.1007, -0.0123, -0.2569,  0.3509, -0.4644,  0.1915,  0.1146, -0.0055,
          0.0676, -0.1829,  0.0072,  0.0871, -0.0317, -0.0783, -0.2264, -0.2027,
         -0.0437,  0.1735,  0.0202,  0.0732, -0.0574,  0.0192,  0.1517, -0.1244,
         -0.0068, -0.0437, -0.1222, -0.0336,  0.0833,  0.2560, -0.1918, -0.0264,
         -0.1595,  0.0621, -0.0316,  0.1644,  0.0721,  0.0938, -0.1674, -0.4866,
         -0.0087, -0.0608,  0.1091,  0.0747,  0.0270,  0.1374,  0.1290, -0.1049,
          0.1345,  0.0616,  0.2949,  0.2682,  0.2330, -0.3695,  0.1267, -0.1899,
         -0.0373]], device='cuda:0') tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
270000 特征值优化 tensor(1.4822, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5922e-01,  2.5584e-01, -1.7137e-01, -9.5968e-01,  2.3590e+00,
          5.8638e-01,  2.2544e+00,  1.4482e+00,  2.3461e+00, -5.3890e-01,
         -2.3947e-01,  4.1232e-01,  6.0709e-01, -4.6581e-01,  4.4725e-01,
          3.5847e-01, -2.5528e-01, -4.8978e-02, -1.1970e-01, -1.5615e+00,
         -4.4289e-01, -3.2792e-01,  3.4544e-01, -1.5349e+00, -1.3806e+00,
         -3.8734e-01,  5.0599e-02, -5.0433e-01, -5.3230e-01,  1.1276e-01,
         -2.3481e-01,  1.6884e-01,  7.7967e-02,  5.9674e-02, -1.1352e-02,
          1.7998e-01, -1.9127e-01, -3.5839e-02,  2.4976e-02, -2.6571e-01,
         -8.6401e-02, -6.8252e-01,  7.3545e-01, -2.9380e-02,  3.9268e-01,
         -2.0346e-01,  2.2672e-02, -1.5345e-01,  1.1192e-01, -4.8220e-02,
         -1.5062e-01, -1.2130e-01, -7.1289e-02,  1.4430e-01, -2.2479e-01,
          8.9791e-02, -3.5788e-01, -2.8636e-01,  2.1666e-01,  5.8575e-03,
         -2.1923e-01, -7.9063e-02,  1.3803e-01, -2.8737e-02,  1.6204e-02,
         -1.3402e-01,  7.9715e-02, -1.2934e-01, -4.2680e-02,  9.0292e-02,
          1.6578e-01, -1.3120e-01,  2.1787e-01, -1.4008e-01,  1.4762e-01,
         -3.4417e-01,  1.0824e-01, -3.8303e-01,  3.8529e-01, -8.1238e-02,
          1.4803e-01,  6.0065e-02,  8.1500e-02, -8.9279e-03, -7.3549e-02,
         -1.9118e-01, -2.3237e-01, -1.7973e-01, -3.3278e-01, -5.3433e-01,
          8.8047e-03,  7.7821e-01,  2.6538e-01,  1.0296e-01,  6.1340e-01,
          2.3582e-02, -6.3477e-01,  9.1479e-02,  8.1534e-02, -1.6135e-01,
          6.0222e-01, -2.2398e-01,  5.8483e-02,  3.8619e-02,  1.0636e-01,
          2.0643e-02, -2.7956e-01,  3.3502e-01, -5.0636e-01,  1.8013e-01,
          1.1908e-01,  5.6056e-05,  7.5949e-02, -1.9594e-01,  1.0434e-02,
          6.6252e-02, -4.1787e-02, -6.8418e-02, -2.2721e-01, -2.0411e-01,
         -5.8521e-02,  1.6955e-01,  4.4697e-03,  8.0138e-02, -3.6374e-02,
          5.4986e-03,  1.4772e-01, -1.2003e-01, -1.9006e-02, -5.7897e-02,
         -9.6139e-02, -2.1759e-02,  7.5450e-02,  2.7345e-01, -2.0786e-01,
         -3.1992e-02, -1.6005e-01,  6.3141e-02, -3.8853e-02,  1.3774e-01,
          8.7093e-02,  6.5555e-02, -1.7686e-01, -4.7082e-01, -6.7229e-03,
         -7.4665e-02,  8.6306e-02,  6.5218e-02,  1.9435e-02,  1.4070e-01,
          1.3785e-01, -1.1855e-01,  1.1315e-01,  7.3734e-02,  2.7933e-01,
          2.8404e-01,  2.1492e-01, -3.9368e-01,  1.5066e-01, -1.7927e-01,
         -3.3447e-02]], device='cuda:0') tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
271000 特征值优化 tensor(1.4295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5730e-01,  2.8250e-01, -2.0907e-01, -9.5233e-01,  2.3822e+00,
          5.8048e-01,  2.2223e+00,  1.4461e+00,  2.3394e+00, -5.0058e-01,
         -2.3968e-01,  4.7152e-01,  6.2828e-01, -4.6524e-01,  4.4906e-01,
          3.4454e-01, -2.9392e-01, -9.6713e-02, -1.0072e-01, -1.5567e+00,
         -4.7334e-01, -3.5358e-01,  3.5658e-01, -1.5341e+00, -1.3645e+00,
         -3.5928e-01,  4.1078e-02, -4.7959e-01, -5.2450e-01,  1.0778e-01,
         -2.3992e-01,  1.5900e-01,  8.4900e-02,  6.2388e-02, -2.2591e-02,
          1.9252e-01, -1.8295e-01, -4.0010e-02,  4.3979e-02, -2.5599e-01,
         -8.5404e-02, -6.7540e-01,  7.3105e-01, -3.5947e-02,  4.0335e-01,
         -1.9111e-01,  7.5537e-03, -1.3894e-01,  1.3455e-01, -3.9457e-02,
         -1.4783e-01, -1.2318e-01, -6.0369e-02,  1.2440e-01, -2.2253e-01,
          1.0211e-01, -3.4703e-01, -2.8314e-01,  2.2628e-01, -1.1052e-02,
         -2.4294e-01, -8.5336e-02,  1.2958e-01, -2.3282e-02,  1.2946e-02,
         -1.3291e-01,  7.5475e-02, -1.2257e-01, -2.2971e-02,  9.2019e-02,
          1.6233e-01, -1.3693e-01,  2.1365e-01, -1.3591e-01,  1.3799e-01,
         -3.2753e-01,  1.1033e-01, -3.9498e-01,  3.8716e-01, -7.6754e-02,
          1.5613e-01,  4.4321e-02,  8.0368e-02, -1.1475e-02, -5.3867e-02,
         -1.9752e-01, -2.5098e-01, -1.8162e-01, -3.1615e-01, -5.3357e-01,
          8.6642e-03,  7.9853e-01,  2.6618e-01,  8.0680e-02,  6.0770e-01,
          3.0130e-02, -6.3464e-01,  7.5458e-02,  7.8880e-02, -1.6047e-01,
          6.1032e-01, -2.2608e-01,  6.8545e-02,  3.5441e-02,  1.1921e-01,
          5.2669e-02, -3.0053e-01,  3.2979e-01, -5.3227e-01,  1.7423e-01,
          1.1822e-01,  4.0738e-03,  7.3779e-02, -1.8493e-01,  3.8320e-03,
          8.0420e-02, -3.4258e-02, -8.1603e-02, -2.2711e-01, -1.9653e-01,
         -4.8666e-02,  1.7081e-01, -1.4255e-02,  7.0644e-02, -5.5677e-04,
         -4.2007e-03,  1.5240e-01, -1.0906e-01, -3.5642e-02, -4.6328e-02,
         -7.7990e-02, -2.7031e-02,  7.9239e-02,  2.8382e-01, -2.0447e-01,
         -5.2732e-02, -1.6993e-01,  6.3408e-02, -2.9562e-02,  1.5500e-01,
          9.8588e-02,  6.7257e-02, -1.5940e-01, -4.6216e-01, -1.3811e-02,
         -7.9460e-02,  9.3412e-02,  6.7812e-02,  3.8184e-02,  1.4499e-01,
          1.2783e-01, -1.1665e-01,  1.3391e-01,  7.8751e-02,  2.6683e-01,
          2.7825e-01,  2.0948e-01, -3.8944e-01,  1.5119e-01, -1.9383e-01,
         -3.4999e-02]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
272000 特征值优化 tensor(1.4270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3912e-01,  3.0609e-01, -2.3450e-01, -9.6532e-01,  2.4003e+00,
          5.8783e-01,  2.1745e+00,  1.4413e+00,  2.3385e+00, -4.7853e-01,
         -2.4552e-01,  5.0725e-01,  6.4852e-01, -4.3693e-01,  4.5305e-01,
          3.3304e-01, -3.2666e-01, -1.2578e-01, -9.7920e-02, -1.5427e+00,
         -4.9855e-01, -3.7253e-01,  3.6653e-01, -1.5291e+00, -1.3589e+00,
         -3.4911e-01,  3.3050e-02, -4.6338e-01, -5.1261e-01,  9.7853e-02,
         -2.3472e-01,  1.5377e-01,  9.9702e-02,  5.7634e-02, -1.7702e-02,
          2.1333e-01, -1.8360e-01, -4.1178e-02,  5.2743e-02, -2.4868e-01,
         -6.5355e-02, -6.7453e-01,  7.2937e-01, -3.3903e-02,  4.0888e-01,
         -1.7783e-01,  5.6863e-03, -1.3280e-01,  1.5782e-01, -3.5920e-02,
         -1.5532e-01, -1.0426e-01, -6.3054e-02,  1.0954e-01, -2.1823e-01,
          1.1571e-01, -3.6177e-01, -2.8851e-01,  2.2379e-01, -2.1353e-02,
         -2.5137e-01, -8.8413e-02,  1.2123e-01, -1.5185e-02,  1.0611e-02,
         -1.2743e-01,  6.9831e-02, -1.1961e-01, -1.5715e-02,  8.5580e-02,
          1.5355e-01, -1.3243e-01,  2.0727e-01, -1.3098e-01,  1.2734e-01,
         -3.2666e-01,  1.0073e-01, -4.0931e-01,  3.9666e-01, -8.6073e-02,
          1.5490e-01,  4.1203e-02,  8.3066e-02, -1.2879e-02, -6.9107e-02,
         -1.9611e-01, -2.5741e-01, -1.8990e-01, -3.2239e-01, -5.5439e-01,
          6.8209e-03,  8.0312e-01,  2.6770e-01,  8.4769e-02,  6.0867e-01,
          3.3282e-02, -6.3285e-01,  6.8762e-02,  7.0050e-02, -1.6211e-01,
          6.1356e-01, -2.2532e-01,  8.2094e-02,  3.8615e-02,  1.3070e-01,
          8.7644e-02, -3.3296e-01,  3.3335e-01, -5.5682e-01,  1.6635e-01,
          1.1979e-01,  3.6107e-03,  6.4553e-02, -1.8533e-01,  3.7463e-04,
          8.4673e-02, -4.2633e-02, -7.9930e-02, -2.2714e-01, -1.8653e-01,
         -4.6140e-02,  1.7104e-01, -2.4733e-02,  7.4016e-02,  1.4874e-02,
         -1.9514e-02,  1.5573e-01, -9.3631e-02, -3.8707e-02, -4.1603e-02,
         -6.9177e-02, -2.7783e-02,  7.8422e-02,  2.8801e-01, -2.1269e-01,
         -7.8379e-02, -1.6138e-01,  6.6155e-02, -2.4395e-02,  1.5885e-01,
          9.5424e-02,  5.8948e-02, -1.5520e-01, -4.6399e-01, -1.3222e-02,
         -8.4023e-02,  8.7478e-02,  6.8136e-02,  4.7882e-02,  1.4788e-01,
          1.2711e-01, -1.2114e-01,  1.3360e-01,  8.5912e-02,  2.5851e-01,
          2.8261e-01,  2.0096e-01, -3.9063e-01,  1.5535e-01, -1.9018e-01,
         -3.5850e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
273000 特征值优化 tensor(1.4078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1625e-01,  3.2145e-01, -2.4253e-01, -9.6428e-01,  2.3938e+00,
          6.0839e-01,  2.1745e+00,  1.4533e+00,  2.3195e+00, -4.3102e-01,
         -2.4462e-01,  5.2318e-01,  6.6390e-01, -4.0523e-01,  4.4294e-01,
          3.1774e-01, -3.4596e-01, -1.3456e-01, -1.0575e-01, -1.5267e+00,
         -5.1780e-01, -3.6806e-01,  3.9783e-01, -1.5355e+00, -1.3589e+00,
         -3.4428e-01,  4.9958e-03, -4.3729e-01, -5.1435e-01,  9.1129e-02,
         -2.4074e-01,  1.5574e-01,  1.0569e-01,  4.3424e-02, -1.9398e-02,
          2.2891e-01, -1.7908e-01, -4.8177e-02,  5.5700e-02, -2.4489e-01,
         -6.4432e-02, -6.8098e-01,  7.3563e-01, -3.3725e-02,  4.1261e-01,
         -1.7247e-01,  3.5328e-03, -1.3437e-01,  1.5557e-01, -4.6728e-02,
         -1.6030e-01, -8.3110e-02, -8.9978e-02,  9.7991e-02, -2.1184e-01,
          1.2072e-01, -3.7042e-01, -2.9016e-01,  2.2995e-01, -3.4345e-02,
         -2.5716e-01, -7.9700e-02,  1.1349e-01, -1.0029e-02,  3.4628e-03,
         -1.2768e-01,  7.2963e-02, -1.2576e-01, -2.2255e-02,  8.9680e-02,
          1.3389e-01, -1.3023e-01,  2.0858e-01, -1.3677e-01,  1.3034e-01,
         -3.4004e-01,  8.3891e-02, -4.1008e-01,  4.1599e-01, -9.8019e-02,
          1.3412e-01,  4.2971e-02,  8.0204e-02,  1.6835e-02, -7.7573e-02,
         -1.8495e-01, -2.5553e-01, -1.7882e-01, -3.2301e-01, -5.4273e-01,
          1.9247e-02,  8.1223e-01,  2.6905e-01,  1.0248e-01,  6.0644e-01,
          4.2667e-02, -6.4084e-01,  9.5940e-02,  5.6715e-02, -1.5228e-01,
          6.1862e-01, -2.2904e-01,  1.0526e-01,  8.5665e-03,  1.3580e-01,
          1.5385e-01, -3.5640e-01,  3.2457e-01, -5.9065e-01,  1.6427e-01,
          1.1971e-01,  1.8478e-02,  5.7084e-02, -1.7873e-01,  1.5557e-03,
          8.3048e-02, -4.4500e-02, -7.3633e-02, -2.3792e-01, -1.8862e-01,
         -5.5514e-02,  1.7291e-01, -1.9055e-02,  7.6754e-02,  2.2674e-02,
         -3.0993e-02,  1.5845e-01, -9.0186e-02, -2.7657e-02, -3.7268e-02,
         -5.6579e-02, -3.3992e-02,  7.9244e-02,  2.9033e-01, -2.1783e-01,
         -9.2015e-02, -1.5116e-01,  6.4933e-02, -3.9682e-02,  1.5277e-01,
          8.2741e-02,  4.4882e-02, -1.4804e-01, -4.5300e-01, -2.2205e-02,
         -9.2084e-02,  7.1123e-02,  6.2320e-02,  5.0164e-02,  1.5188e-01,
          1.1656e-01, -1.2544e-01,  1.2646e-01,  8.3030e-02,  2.6095e-01,
          2.9277e-01,  1.9422e-01, -4.0110e-01,  1.5670e-01, -1.8652e-01,
         -2.8039e-02]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
274000 特征值优化 tensor(1.4136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1751,  0.3369, -0.2775, -0.9507,  2.3814,  0.6309,  2.1550,  1.4594,
          2.3265, -0.4233, -0.2575,  0.5358,  0.6743, -0.3583,  0.4368,  0.3245,
         -0.3608, -0.1763, -0.0977, -1.5077, -0.5328, -0.3542,  0.3936, -1.5310,
         -1.3428, -0.3496, -0.0070, -0.4330, -0.5059,  0.0830, -0.2354,  0.1518,
          0.1166,  0.0349, -0.0265,  0.2424, -0.1742, -0.0522,  0.0611, -0.2315,
         -0.0478, -0.6863,  0.7383, -0.0386,  0.4238, -0.1635,  0.0063, -0.1175,
          0.1734, -0.0395, -0.1405, -0.0706, -0.0848,  0.0859, -0.2143,  0.1399,
         -0.3673, -0.2918,  0.2390, -0.0604, -0.2799, -0.0789,  0.1073, -0.0203,
          0.0093, -0.1187,  0.0726, -0.1294, -0.0160,  0.0907,  0.1332, -0.1435,
          0.2081, -0.1289,  0.1326, -0.3470,  0.0905, -0.4232,  0.4204, -0.0934,
          0.1445,  0.0243,  0.0904,  0.0142, -0.0756, -0.1976, -0.2544, -0.1797,
         -0.3038, -0.5420,  0.0120,  0.8066,  0.2751,  0.0914,  0.6046,  0.0559,
         -0.6321,  0.1117,  0.0730, -0.1624,  0.6422, -0.2367,  0.1187,  0.0027,
          0.1408,  0.1802, -0.3748,  0.3291, -0.5980,  0.1661,  0.1163,  0.0164,
          0.0720, -0.1725,  0.0034,  0.0846, -0.0377, -0.0643, -0.2473, -0.1859,
         -0.0368,  0.1733, -0.0271,  0.0595,  0.0442, -0.0455,  0.1410, -0.0732,
         -0.0252, -0.0319, -0.0444, -0.0249,  0.0831,  0.2911, -0.2093, -0.1039,
         -0.1600,  0.0798, -0.0392,  0.1626,  0.0886,  0.0361, -0.1316, -0.4445,
         -0.0185, -0.0842,  0.0644,  0.0787,  0.0790,  0.1490,  0.1084, -0.1138,
          0.1374,  0.0878,  0.2393,  0.2883,  0.1894, -0.4036,  0.1463, -0.1938,
         -0.0148]], device='cuda:0') tensor(0.2277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
275000 特征值优化 tensor(1.4038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5432e-01,  3.3439e-01, -2.7636e-01, -9.6859e-01,  2.3906e+00,
          6.6572e-01,  2.1328e+00,  1.4479e+00,  2.3367e+00, -3.8012e-01,
         -2.5761e-01,  5.4149e-01,  6.7660e-01, -3.5208e-01,  4.6307e-01,
          3.2052e-01, -3.8385e-01, -1.8336e-01, -9.0609e-02, -1.4899e+00,
         -5.4349e-01, -3.6828e-01,  3.7552e-01, -1.5223e+00, -1.3252e+00,
         -3.3021e-01, -3.9661e-03, -4.3016e-01, -4.8500e-01,  8.3874e-02,
         -2.4408e-01,  1.5343e-01,  1.2630e-01,  3.9440e-02, -1.0967e-02,
          2.5102e-01, -1.8082e-01, -6.2687e-02,  6.7732e-02, -2.2644e-01,
         -5.2913e-02, -6.8406e-01,  7.3686e-01, -3.8870e-02,  4.1964e-01,
         -1.5385e-01, -1.5461e-02, -1.0911e-01,  1.8332e-01, -5.4286e-02,
         -1.3165e-01, -6.3030e-02, -9.7106e-02,  9.5503e-02, -2.1222e-01,
          1.6835e-01, -3.9083e-01, -2.7752e-01,  2.4570e-01, -8.3404e-02,
         -2.7479e-01, -7.6241e-02,  9.8250e-02, -3.7842e-03,  9.8552e-03,
         -1.3010e-01,  6.7118e-02, -1.3052e-01, -1.8905e-02,  8.4494e-02,
          1.1405e-01, -1.3511e-01,  2.0789e-01, -1.2234e-01,  1.2334e-01,
         -3.4535e-01,  8.4262e-02, -4.3202e-01,  4.2177e-01, -1.0557e-01,
          1.3595e-01,  2.5169e-02,  1.0399e-01, -6.4360e-03, -1.0180e-01,
         -1.9416e-01, -2.6023e-01, -1.7399e-01, -3.0336e-01, -5.4063e-01,
          1.3597e-02,  7.8821e-01,  2.9847e-01,  8.0920e-02,  6.1662e-01,
          5.0983e-02, -6.3486e-01,  8.9372e-02,  7.9143e-02, -1.6559e-01,
          6.4557e-01, -2.4823e-01,  1.0486e-01,  1.0777e-02,  1.5626e-01,
          2.1063e-01, -3.8505e-01,  3.2868e-01, -5.8538e-01,  1.5862e-01,
          1.2304e-01,  2.6366e-02,  6.5832e-02, -1.8499e-01,  4.6355e-04,
          9.3529e-02, -4.1156e-02, -7.7217e-02, -2.2666e-01, -1.8510e-01,
         -4.0569e-02,  1.6483e-01, -3.9298e-02,  7.3296e-02,  5.3198e-02,
         -4.6076e-02,  1.5091e-01, -6.2179e-02, -2.6730e-02, -2.9589e-02,
         -3.4112e-02, -2.9289e-02,  8.4885e-02,  2.9262e-01, -2.2022e-01,
         -1.0139e-01, -1.5962e-01,  9.3441e-02, -4.7862e-02,  1.5174e-01,
          1.1362e-01,  3.8050e-02, -1.3226e-01, -4.5155e-01, -1.6549e-02,
         -1.0961e-01,  4.3037e-02,  7.8638e-02,  1.0471e-01,  1.4822e-01,
          7.3889e-02, -1.3126e-01,  1.2221e-01,  7.9472e-02,  2.5214e-01,
          2.9415e-01,  2.0207e-01, -4.0564e-01,  1.4022e-01, -1.9378e-01,
         -1.4675e-02]], device='cuda:0') tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
276000 特征值优化 tensor(1.4099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1188,  0.3312, -0.2980, -0.9616,  2.3535,  0.6778,  2.1417,  1.4522,
          2.3424, -0.3612, -0.2605,  0.5713,  0.6788, -0.3566,  0.4481,  0.3112,
         -0.4029, -0.2130, -0.0976, -1.4791, -0.5615, -0.3756,  0.3768, -1.5293,
         -1.3173, -0.3089, -0.0168, -0.4234, -0.5008,  0.0725, -0.2594,  0.1568,
          0.1168,  0.0384, -0.0191,  0.2487, -0.1740, -0.0634,  0.0677, -0.2379,
         -0.0383, -0.6815,  0.7337, -0.0523,  0.4263, -0.1505, -0.0146, -0.1219,
          0.1831, -0.0741, -0.1188, -0.0482, -0.1186,  0.0781, -0.2112,  0.1843,
         -0.3855, -0.2931,  0.2568, -0.0902, -0.2877, -0.0717,  0.0925, -0.0192,
          0.0116, -0.1162,  0.0604, -0.1271, -0.0089,  0.1074,  0.1100, -0.1396,
          0.2111, -0.1344,  0.1190, -0.3519,  0.0693, -0.4292,  0.4163, -0.0884,
          0.1290,  0.0233,  0.0906, -0.0111, -0.0795, -0.1821, -0.2781, -0.1653,
         -0.2810, -0.5167,  0.0147,  0.7756,  0.2944,  0.0900,  0.6101,  0.0572,
         -0.6279,  0.1141,  0.0518, -0.1518,  0.6578, -0.2497,  0.1175, -0.0149,
          0.1626,  0.2374, -0.3653,  0.3299, -0.5870,  0.1525,  0.1222,  0.0268,
          0.0729, -0.1653, -0.0035,  0.0987, -0.0422, -0.0758, -0.2331, -0.1826,
         -0.0515,  0.1666, -0.0451,  0.0540,  0.0860, -0.0474,  0.1538, -0.0693,
         -0.0414, -0.0201, -0.0140, -0.0260,  0.0816,  0.2882, -0.2340, -0.1014,
         -0.1716,  0.0750, -0.0190,  0.1374,  0.1158,  0.0216, -0.1328, -0.4267,
         -0.0242, -0.1051,  0.0480,  0.0684,  0.0775,  0.1655,  0.1022, -0.1235,
          0.1188,  0.0707,  0.2341,  0.2933,  0.1852, -0.4108,  0.1572, -0.1975,
         -0.0245]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
277000 特征值优化 tensor(1.4213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0561,  0.3218, -0.2916, -0.9613,  2.3308,  0.6920,  2.1484,  1.4506,
          2.3461, -0.3282, -0.2525,  0.5663,  0.6867, -0.3352,  0.4347,  0.3106,
         -0.4196, -0.2263, -0.1107, -1.4640, -0.5437, -0.3839,  0.3727, -1.5119,
         -1.3166, -0.3217, -0.0244, -0.4003, -0.5087,  0.0761, -0.2607,  0.1565,
          0.1217,  0.0264, -0.0100,  0.2608, -0.1743, -0.0614,  0.0769, -0.2287,
         -0.0273, -0.6826,  0.7328, -0.0531,  0.4260, -0.1587, -0.0133, -0.0999,
          0.1960, -0.0849, -0.1098, -0.0497, -0.1280,  0.0835, -0.2074,  0.1962,
         -0.3697, -0.2850,  0.2737, -0.1130, -0.2970, -0.0669,  0.0898, -0.0139,
          0.0124, -0.1243,  0.0565, -0.1286, -0.0133,  0.1068,  0.1022, -0.1355,
          0.2080, -0.1318,  0.1336, -0.3533,  0.0714, -0.4382,  0.4164, -0.0952,
          0.1315,  0.0179,  0.0961, -0.0036, -0.0814, -0.1806, -0.2765, -0.1526,
         -0.2729, -0.5112,  0.0264,  0.7559,  0.2891,  0.0930,  0.6138,  0.0557,
         -0.6322,  0.1014,  0.0638, -0.1507,  0.6558, -0.2615,  0.1106, -0.0277,
          0.1654,  0.2550, -0.3936,  0.3346, -0.5775,  0.1518,  0.1191,  0.0309,
          0.0710, -0.1697,  0.0025,  0.1003, -0.0376, -0.0708, -0.2314, -0.1837,
         -0.0506,  0.1664, -0.0436,  0.0474,  0.0876, -0.0530,  0.1449, -0.0676,
         -0.0415, -0.0125, -0.0063, -0.0276,  0.0816,  0.2928, -0.2358, -0.1130,
         -0.1603,  0.0886, -0.0322,  0.1400,  0.1117,  0.0356, -0.1144, -0.4266,
         -0.0197, -0.1056,  0.0579,  0.0717,  0.0966,  0.1602,  0.0893, -0.1274,
          0.1166,  0.0724,  0.2314,  0.2967,  0.1698, -0.4125,  0.1582, -0.1974,
         -0.0166]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
278000 特征值优化 tensor(1.4027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.4240e-02,  3.0990e-01, -2.9112e-01, -9.6711e-01,  2.3012e+00,
          7.2489e-01,  2.1306e+00,  1.4489e+00,  2.3532e+00, -2.8058e-01,
         -2.1531e-01,  5.3417e-01,  6.8198e-01, -3.3211e-01,  4.1685e-01,
          2.9064e-01, -4.2537e-01, -2.4347e-01, -1.2430e-01, -1.4487e+00,
         -5.1240e-01, -3.9389e-01,  3.5602e-01, -1.4965e+00, -1.2768e+00,
         -3.3673e-01, -2.1979e-02, -4.1248e-01, -5.1474e-01,  8.9017e-02,
         -2.4843e-01,  1.7582e-01,  1.2874e-01,  1.3702e-02,  1.0662e-02,
          2.4908e-01, -1.8207e-01, -6.8894e-02,  1.1391e-01, -2.1126e-01,
         -2.6460e-02, -6.8527e-01,  7.3789e-01, -5.0944e-02,  4.1305e-01,
         -1.6589e-01,  2.3865e-03, -1.0938e-01,  2.0631e-01, -1.2015e-01,
         -5.5898e-02, -6.1471e-02, -1.4418e-01,  8.5777e-02, -2.1008e-01,
          2.2269e-01, -3.7804e-01, -2.9631e-01,  2.8536e-01, -1.5352e-01,
         -3.0461e-01, -6.0302e-02,  9.3489e-02, -1.9540e-02,  4.8211e-02,
         -1.2320e-01,  4.3137e-02, -1.3291e-01, -1.5999e-02,  1.1334e-01,
          8.1418e-02, -1.3822e-01,  1.8960e-01, -1.4170e-01,  1.2329e-01,
         -3.6216e-01,  4.2572e-02, -4.4451e-01,  4.2177e-01, -9.6024e-02,
          1.2313e-01,  1.3369e-02,  1.1558e-01,  8.7018e-03, -9.4975e-02,
         -1.7148e-01, -2.7509e-01, -1.2927e-01, -3.1450e-01, -5.0950e-01,
          3.3378e-02,  7.3021e-01,  2.9658e-01,  1.0310e-01,  6.1196e-01,
          5.5155e-02, -6.5041e-01,  1.0886e-01,  8.9619e-02, -1.3626e-01,
          6.7233e-01, -2.7101e-01,  1.4090e-01, -4.2192e-02,  1.7300e-01,
          3.1451e-01, -4.1744e-01,  3.4184e-01, -5.9056e-01,  1.3985e-01,
          1.1449e-01,  2.7682e-02,  7.2189e-02, -1.8803e-01, -3.6420e-03,
          7.5463e-02, -4.2539e-02, -7.0871e-02, -2.0645e-01, -1.7066e-01,
         -6.0847e-02,  1.6918e-01, -3.8564e-02, -1.1250e-03,  1.2029e-01,
         -5.0731e-02,  1.1960e-01, -6.2405e-02, -5.5076e-02,  7.7149e-03,
          3.6823e-02, -2.8828e-02,  7.6868e-02,  2.9654e-01, -2.5219e-01,
         -1.1220e-01, -1.5029e-01,  1.0756e-01, -4.2966e-02,  1.3124e-01,
          1.3965e-01,  3.4730e-02, -9.3796e-02, -4.2156e-01, -2.2353e-02,
         -1.1296e-01,  2.7406e-02,  7.0088e-02,  1.4417e-01,  1.5799e-01,
          6.5197e-02, -1.2351e-01,  1.0877e-01,  8.2299e-02,  2.4107e-01,
          2.9826e-01,  1.6650e-01, -4.0999e-01,  1.4943e-01, -1.9265e-01,
         -3.6996e-03]], device='cuda:0') tensor(0.2360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
279000 特征值优化 tensor(1.4376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3864e-02,  2.6140e-01, -2.8944e-01, -9.7611e-01,  2.2553e+00,
          7.7037e-01,  2.1211e+00,  1.4698e+00,  2.3808e+00, -2.7776e-01,
         -1.6663e-01,  4.9122e-01,  6.5216e-01, -3.2416e-01,  3.6746e-01,
          2.4955e-01, -4.5304e-01, -2.6484e-01, -1.1320e-01, -1.4307e+00,
         -5.3332e-01, -4.1620e-01,  3.4887e-01, -1.4832e+00, -1.2340e+00,
         -3.4198e-01, -5.8028e-02, -4.3482e-01, -5.3001e-01,  1.0162e-01,
         -2.5638e-01,  1.8686e-01,  1.0719e-01,  4.9430e-03,  3.5350e-02,
          2.2681e-01, -1.8969e-01, -5.9994e-02,  1.1077e-01, -2.2784e-01,
         -3.5087e-02, -6.7880e-01,  7.3175e-01, -4.9397e-02,  3.9925e-01,
         -1.9123e-01,  1.0809e-02, -1.1274e-01,  2.1530e-01, -1.5775e-01,
          1.1405e-03, -6.1797e-02, -1.7597e-01,  7.3355e-02, -2.3348e-01,
          2.5743e-01, -3.6538e-01, -2.6154e-01,  2.9058e-01, -1.8743e-01,
         -3.1472e-01, -3.7269e-02,  1.0425e-01, -3.6213e-02,  6.8618e-02,
         -1.2560e-01,  5.0418e-02, -1.4126e-01, -2.5216e-02,  1.2832e-01,
          5.7488e-02, -1.2692e-01,  1.8576e-01, -1.6136e-01,  1.1976e-01,
         -3.7603e-01,  1.5618e-02, -4.4748e-01,  4.0720e-01, -7.4226e-02,
          1.1493e-01,  1.2289e-02,  1.0251e-01,  1.6137e-02, -8.4366e-02,
         -1.4126e-01, -2.7687e-01, -8.2752e-02, -3.1646e-01, -4.7688e-01,
          5.6200e-02,  6.7717e-01,  3.0095e-01,  1.1768e-01,  6.0157e-01,
          5.3542e-02, -6.6208e-01,  1.4234e-01,  9.6217e-02, -1.1056e-01,
          7.2026e-01, -2.9688e-01,  1.6065e-01, -8.5579e-02,  1.7837e-01,
          3.9167e-01, -4.3647e-01,  3.3732e-01, -5.8593e-01,  1.3090e-01,
          1.0322e-01,  3.5533e-02,  8.6562e-02, -1.7627e-01, -2.5790e-03,
          5.5939e-02, -5.3608e-02, -7.1378e-02, -2.1389e-01, -1.5969e-01,
         -8.0387e-02,  1.6063e-01, -3.6933e-02, -3.2605e-02,  1.2232e-01,
         -5.8430e-02,  1.1237e-01, -5.8297e-02, -4.6172e-02,  2.1125e-02,
          7.4841e-02, -3.1887e-02,  8.2965e-02,  2.7557e-01, -2.7584e-01,
         -1.1220e-01, -1.4484e-01,  1.2789e-01, -3.8739e-02,  1.1307e-01,
          1.4184e-01,  2.3660e-02, -8.1585e-02, -3.9817e-01, -2.5297e-02,
         -1.0255e-01,  2.3480e-02,  5.3218e-02,  1.5694e-01,  1.6840e-01,
          5.4323e-02, -1.0142e-01,  9.5201e-02,  7.5892e-02,  2.4106e-01,
          2.9956e-01,  1.5067e-01, -4.1947e-01,  1.6663e-01, -1.8627e-01,
         -4.5229e-03]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
280000 特征值优化 tensor(1.4260, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.9760e-02,  2.1788e-01, -2.6539e-01, -9.7818e-01,  2.2235e+00,
          8.0597e-01,  2.1598e+00,  1.4905e+00,  2.3863e+00, -3.0430e-01,
         -1.4551e-01,  4.7186e-01,  6.0650e-01, -3.2140e-01,  3.3315e-01,
          2.4017e-01, -4.7723e-01, -2.8146e-01, -1.2692e-01, -1.3783e+00,
         -5.2844e-01, -4.2607e-01,  3.3128e-01, -1.4798e+00, -1.2270e+00,
         -3.5725e-01, -3.7291e-02, -4.3719e-01, -5.1389e-01,  1.1266e-01,
         -2.7405e-01,  1.9575e-01,  8.7353e-02,  5.2258e-03,  4.4265e-02,
          2.1531e-01, -1.9339e-01, -5.7556e-02,  1.0777e-01, -2.3153e-01,
         -2.8357e-02, -6.7714e-01,  7.2899e-01, -3.8529e-02,  3.7597e-01,
         -1.9526e-01,  2.1947e-02, -8.9726e-02,  2.2019e-01, -1.6830e-01,
          1.2682e-02, -4.5075e-02, -1.9075e-01,  7.4442e-02, -2.3538e-01,
          2.7012e-01, -3.6109e-01, -2.7457e-01,  2.8880e-01, -1.8729e-01,
         -3.1055e-01, -2.5066e-02,  1.1602e-01, -4.2176e-02,  8.3900e-02,
         -1.3764e-01,  6.2376e-02, -1.4488e-01, -3.9644e-02,  1.3254e-01,
          4.5205e-02, -1.2054e-01,  1.8033e-01, -1.6074e-01,  1.2716e-01,
         -3.6709e-01,  3.2746e-02, -4.7022e-01,  4.0389e-01, -7.9569e-02,
          1.3099e-01,  1.1692e-02,  1.0933e-01,  2.6665e-02, -8.8856e-02,
         -1.4531e-01, -2.7197e-01, -6.1669e-02, -2.7367e-01, -4.5207e-01,
          6.0304e-02,  6.4129e-01,  2.9814e-01,  1.3045e-01,  6.0340e-01,
          4.3426e-02, -6.7982e-01,  1.2587e-01,  1.0544e-01, -1.2637e-01,
          7.2901e-01, -2.9826e-01,  1.5645e-01, -1.0038e-01,  1.7988e-01,
          4.0575e-01, -4.4010e-01,  3.4392e-01, -5.7451e-01,  1.2908e-01,
          1.0513e-01,  3.5190e-02,  7.7325e-02, -1.8296e-01, -9.7220e-03,
          5.8587e-02, -6.5077e-02, -7.9560e-02, -2.1396e-01, -1.6466e-01,
         -7.8854e-02,  1.5939e-01, -4.4344e-02, -3.6543e-02,  1.0595e-01,
         -7.2763e-02,  1.2688e-01, -4.4819e-02, -2.1262e-02,  3.1213e-02,
          8.0111e-02, -4.0438e-02,  8.2823e-02,  2.7215e-01, -2.7461e-01,
         -1.2079e-01, -1.2053e-01,  1.3446e-01, -5.3506e-02,  9.4038e-02,
          1.4444e-01,  3.7542e-02, -5.4039e-02, -4.1315e-01, -2.2579e-02,
         -1.0399e-01,  3.6805e-02,  5.6946e-02,  1.5118e-01,  1.6576e-01,
          5.3883e-02, -1.0660e-01,  1.0234e-01,  7.9715e-02,  2.3606e-01,
          2.9647e-01,  1.5940e-01, -4.1592e-01,  1.5010e-01, -1.8762e-01,
          1.6588e-03]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
281000 特征值优化 tensor(1.4182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0295,  0.1621, -0.2751, -0.9751,  2.1542,  0.8299,  2.1890,  1.5082,
          2.4297, -0.3425, -0.1071,  0.4465,  0.6216, -0.2933,  0.3138,  0.2614,
         -0.4958, -0.2784, -0.1236, -1.3829, -0.5119, -0.4383,  0.3069, -1.4848,
         -1.2253, -0.3715, -0.0485, -0.4282, -0.5253,  0.1421, -0.2689,  0.2050,
          0.0816, -0.0158,  0.0458,  0.2079, -0.1804, -0.0636,  0.0997, -0.2361,
         -0.0288, -0.6754,  0.7250, -0.0509,  0.3567, -0.1984,  0.0066, -0.0832,
          0.2173, -0.1713,  0.0206, -0.0418, -0.2050,  0.0844, -0.2276,  0.2639,
         -0.3473, -0.2835,  0.2922, -0.1873, -0.3038, -0.0552,  0.1083, -0.0360,
          0.0878, -0.1345,  0.0508, -0.1326, -0.0431,  0.1313,  0.0433, -0.1261,
          0.1819, -0.1677,  0.1251, -0.3696,  0.0263, -0.4715,  0.3999, -0.0826,
          0.1270,  0.0121,  0.1022,  0.0309, -0.0977, -0.1377, -0.2833, -0.0533,
         -0.2417, -0.4264,  0.0625,  0.6085,  0.3098,  0.1308,  0.6088,  0.0493,
         -0.6657,  0.1194,  0.0967, -0.1308,  0.7240, -0.3061,  0.1487, -0.0851,
          0.1851,  0.3736, -0.4203,  0.3501, -0.5347,  0.1289,  0.1058,  0.0291,
          0.0843, -0.1837, -0.0198,  0.0699, -0.0841, -0.0864, -0.1986, -0.1550,
         -0.1064,  0.1573, -0.0387, -0.0372,  0.1253, -0.0653,  0.1262, -0.0413,
         -0.0361,  0.0309,  0.0817, -0.0356,  0.0763,  0.2723, -0.2888, -0.1303,
         -0.1168,  0.1333, -0.0633,  0.0859,  0.1552,  0.0386, -0.0732, -0.4041,
         -0.0202, -0.1064,  0.0398,  0.0548,  0.1492,  0.1700,  0.0563, -0.1075,
          0.0959,  0.0674,  0.2464,  0.2969,  0.1614, -0.4134,  0.1635, -0.1909,
         -0.0060]], device='cuda:0') tensor(0.2309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
282000 特征值优化 tensor(1.4737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0202,  0.1151, -0.2448, -0.9792,  2.1086,  0.8654,  2.2194,  1.4989,
          2.4648, -0.3577, -0.1082,  0.4064,  0.6106, -0.2807,  0.3039,  0.2810,
         -0.5102, -0.2695, -0.1299, -1.3676, -0.4908, -0.4238,  0.2899, -1.4808,
         -1.2203, -0.3695, -0.0435, -0.4207, -0.5306,  0.1476, -0.2566,  0.2145,
          0.0805, -0.0172,  0.0591,  0.2065, -0.1795, -0.0830,  0.1021, -0.2021,
         -0.0318, -0.6802,  0.7330, -0.0420,  0.3458, -0.1900,  0.0078, -0.0722,
          0.2274, -0.1817,  0.0101, -0.0354, -0.2141,  0.0871, -0.2198,  0.2655,
         -0.3530, -0.2831,  0.3032, -0.1821, -0.3014, -0.0668,  0.1131, -0.0318,
          0.0932, -0.1352,  0.0531, -0.1276, -0.0429,  0.1335,  0.0411, -0.1301,
          0.1788, -0.1534,  0.1280, -0.3753,  0.0334, -0.4815,  0.4064, -0.0908,
          0.1213,  0.0217,  0.1161,  0.0239, -0.1067, -0.1301, -0.2812, -0.0613,
         -0.2557, -0.3949,  0.0518,  0.5766,  0.3014,  0.1261,  0.6120,  0.0411,
         -0.6724,  0.1149,  0.1297, -0.1290,  0.7173, -0.2971,  0.1629, -0.0775,
          0.1893,  0.4056, -0.4132,  0.3566, -0.5232,  0.1317,  0.1073,  0.0413,
          0.0789, -0.1978, -0.0166,  0.0620, -0.0832, -0.0911, -0.1959, -0.1457,
         -0.1034,  0.1608, -0.0402, -0.0377,  0.1300, -0.0578,  0.1216, -0.0381,
         -0.0326,  0.0295,  0.0851, -0.0276,  0.0772,  0.2686, -0.2845, -0.1278,
         -0.0985,  0.1592, -0.0889,  0.0780,  0.1610,  0.0401, -0.0678, -0.4127,
         -0.0067, -0.1195,  0.0214,  0.0696,  0.1849,  0.1496,  0.0273, -0.1135,
          0.0949,  0.0782,  0.2524,  0.3021,  0.1705, -0.4239,  0.1536, -0.1913,
          0.0054]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
283000 特征值优化 tensor(1.4020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0213,  0.0698, -0.2515, -0.9688,  2.1070,  0.8916,  2.2329,  1.4926,
          2.4729, -0.3677, -0.1128,  0.4195,  0.5864, -0.2927,  0.2906,  0.2791,
         -0.5261, -0.2648, -0.1275, -1.3510, -0.5073, -0.4253,  0.2936, -1.4688,
         -1.2166, -0.3690, -0.0607, -0.4317, -0.5270,  0.1549, -0.2737,  0.2155,
          0.0656, -0.0255,  0.0490,  0.1895, -0.1815, -0.0609,  0.0833, -0.2297,
         -0.0231, -0.6744,  0.7248, -0.0513,  0.3407, -0.1958,  0.0090, -0.0949,
          0.2251, -0.1970,  0.0200, -0.0298, -0.2301,  0.0872, -0.2118,  0.2740,
         -0.3578, -0.2840,  0.3148, -0.1702, -0.3117, -0.0673,  0.1093, -0.0380,
          0.0918, -0.1360,  0.0542, -0.1241, -0.0376,  0.1338,  0.0361, -0.1292,
          0.1827, -0.1829,  0.1310, -0.3725,  0.0370, -0.4692,  0.3835, -0.0886,
          0.1160,  0.0132,  0.0967,  0.0428, -0.1002, -0.1235, -0.2992, -0.0384,
         -0.2466, -0.3848,  0.0569,  0.5658,  0.2898,  0.1268,  0.6052,  0.0395,
         -0.6656,  0.1107,  0.1034, -0.1231,  0.7205, -0.2923,  0.1683, -0.1022,
          0.1879,  0.4402, -0.4194,  0.3449, -0.5077,  0.1239,  0.1126,  0.0314,
          0.0909, -0.1855, -0.0164,  0.0815, -0.1029, -0.0971, -0.2019, -0.1342,
         -0.1053,  0.1587, -0.0364, -0.0363,  0.1320, -0.0697,  0.1234, -0.0371,
         -0.0337,  0.0303,  0.0791, -0.0352,  0.0777,  0.2640, -0.2995, -0.1553,
         -0.0953,  0.1410, -0.0831,  0.0717,  0.1599,  0.0277, -0.0684, -0.4020,
         -0.0208, -0.1216,  0.0419,  0.0426,  0.1679,  0.1720,  0.0432, -0.1198,
          0.0841,  0.0588,  0.2463,  0.2898,  0.1534, -0.4184,  0.1687, -0.1959,
         -0.0187]], device='cuda:0') tensor(0.2274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
284000 特征值优化 tensor(1.3936, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0166,  0.0422, -0.2532, -0.9804,  2.1018,  0.8946,  2.2534,  1.4888,
          2.5177, -0.3827, -0.1097,  0.4050,  0.5958, -0.2732,  0.2761,  0.2923,
         -0.5129, -0.2761, -0.1190, -1.3389, -0.4867, -0.4278,  0.3005, -1.4709,
         -1.2050, -0.3683, -0.0616, -0.4290, -0.5336,  0.1558, -0.2505,  0.2256,
          0.0602, -0.0420,  0.0594,  0.1742, -0.1823, -0.0798,  0.0948, -0.2164,
         -0.0189, -0.6841,  0.7370, -0.0457,  0.3320, -0.1904,  0.0141, -0.0741,
          0.2179, -0.1824,  0.0263, -0.0226, -0.2238,  0.0849, -0.2154,  0.2629,
         -0.3441, -0.2739,  0.3003, -0.1620, -0.2800, -0.0637,  0.1124, -0.0348,
          0.1032, -0.1520,  0.0608, -0.1357, -0.0464,  0.1380,  0.0388, -0.1323,
          0.1724, -0.1754,  0.1346, -0.3655,  0.0400, -0.4852,  0.3940, -0.0867,
          0.1312,  0.0152,  0.1149,  0.0419, -0.0909, -0.1074, -0.2845, -0.0484,
         -0.2378, -0.3835,  0.0475,  0.5478,  0.3047,  0.1124,  0.6091,  0.0456,
         -0.6680,  0.0924,  0.1318, -0.1313,  0.7304, -0.3020,  0.1749, -0.0941,
          0.1928,  0.4191, -0.4078,  0.3549, -0.5003,  0.1300,  0.1092,  0.0372,
          0.0789, -0.1929, -0.0114,  0.0664, -0.0840, -0.0858, -0.2054, -0.1403,
         -0.1040,  0.1520, -0.0463, -0.0502,  0.1192, -0.0666,  0.1182, -0.0391,
         -0.0323,  0.0329,  0.0850, -0.0290,  0.0752,  0.2762, -0.2951, -0.1276,
         -0.1048,  0.1323, -0.0826,  0.0699,  0.1746,  0.0516, -0.0670, -0.4167,
         -0.0156, -0.1194,  0.0534,  0.0724,  0.1698,  0.1545,  0.0481, -0.1122,
          0.1081,  0.0795,  0.2445,  0.2918,  0.1747, -0.4246,  0.1470, -0.1849,
          0.0069]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
285000 特征值优化 tensor(1.4142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0302,  0.0171, -0.2539, -0.9752,  2.0610,  0.8976,  2.2722,  1.5102,
          2.5203, -0.3785, -0.1091,  0.3935,  0.5791, -0.2682,  0.2883,  0.2928,
         -0.4955, -0.2570, -0.1233, -1.3440, -0.4802, -0.4172,  0.3131, -1.4652,
         -1.2031, -0.3659, -0.0518, -0.4346, -0.5529,  0.1529, -0.2597,  0.2190,
          0.0632, -0.0255,  0.0494,  0.1702, -0.1815, -0.0647,  0.0905, -0.2085,
         -0.0219, -0.6814,  0.7332, -0.0484,  0.3462, -0.2030,  0.0162, -0.0816,
          0.2233, -0.1990,  0.0322, -0.0320, -0.2220,  0.0946, -0.2146,  0.2483,
         -0.3502, -0.3012,  0.3139, -0.1572, -0.2880, -0.0735,  0.1152, -0.0366,
          0.0946, -0.1376,  0.0506, -0.1262, -0.0385,  0.1322,  0.0497, -0.1368,
          0.1793, -0.1818,  0.1360, -0.3781,  0.0314, -0.4667,  0.3838, -0.0822,
          0.1251,  0.0097,  0.1067,  0.0431, -0.1051, -0.1161, -0.2920, -0.0452,
         -0.2416, -0.3752,  0.0538,  0.5212,  0.3023,  0.1079,  0.6052,  0.0463,
         -0.6673,  0.1276,  0.1159, -0.1171,  0.7328, -0.2950,  0.1772, -0.0769,
          0.1790,  0.4371, -0.4035,  0.3624, -0.4961,  0.1269,  0.1099,  0.0384,
          0.0835, -0.2024, -0.0124,  0.0660, -0.0935, -0.0929, -0.1932, -0.1395,
         -0.0973,  0.1603, -0.0366, -0.0358,  0.1351, -0.0613,  0.1126, -0.0347,
         -0.0408,  0.0235,  0.0801, -0.0254,  0.0792,  0.2726, -0.2957, -0.1221,
         -0.0907,  0.1387, -0.0888,  0.0736,  0.1564,  0.0347, -0.0657, -0.3950,
         -0.0309, -0.1085,  0.0349,  0.0603,  0.1793,  0.1637,  0.0440, -0.1134,
          0.0887,  0.0633,  0.2482,  0.2847,  0.1801, -0.4151,  0.1502, -0.2020,
         -0.0061]], device='cuda:0') tensor(0.2294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
286000 特征值优化 tensor(1.4605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0226, -0.0057, -0.2536, -0.9798,  2.0737,  0.9353,  2.2941,  1.4848,
          2.5503, -0.3670, -0.1169,  0.3960,  0.5814, -0.2523,  0.2532,  0.2996,
         -0.5024, -0.2735, -0.1291, -1.3320, -0.4668, -0.4118,  0.3228, -1.4507,
         -1.1871, -0.3584, -0.0751, -0.4357, -0.5627,  0.1526, -0.2676,  0.2262,
          0.0422, -0.0458,  0.0555,  0.1729, -0.1907, -0.0684,  0.0796, -0.2040,
         -0.0042, -0.6852,  0.7365, -0.0272,  0.3444, -0.1942,  0.0361, -0.1041,
          0.2276, -0.1904,  0.0319, -0.0202, -0.2339,  0.0893, -0.2143,  0.2794,
         -0.3519, -0.2773,  0.2921, -0.1618, -0.3172, -0.0719,  0.1166, -0.0326,
          0.1028, -0.1443,  0.0575, -0.1296, -0.0497,  0.1329,  0.0383, -0.1275,
          0.1726, -0.1853,  0.1463, -0.3935,  0.0421, -0.4695,  0.3801, -0.0861,
          0.1129,  0.0059,  0.0949,  0.0480, -0.0980, -0.0981, -0.2838, -0.0522,
         -0.2433, -0.3654,  0.0470,  0.4875,  0.3187,  0.1265,  0.6025,  0.0529,
         -0.6565,  0.1152,  0.1089, -0.1104,  0.7357, -0.3051,  0.1900, -0.0963,
          0.1901,  0.4575, -0.3807,  0.3655, -0.4782,  0.1214,  0.1101,  0.0251,
          0.0861, -0.1932, -0.0085,  0.0495, -0.0976, -0.0956, -0.2011, -0.1327,
         -0.1181,  0.1578, -0.0374, -0.0453,  0.1361, -0.0672,  0.1012, -0.0289,
         -0.0368,  0.0161,  0.0747, -0.0220,  0.0591,  0.2716, -0.3062, -0.1403,
         -0.0909,  0.1261, -0.0685,  0.0574,  0.1578,  0.0070, -0.0769, -0.3878,
         -0.0205, -0.1191,  0.0419,  0.0455,  0.1704,  0.1671,  0.0462, -0.1193,
          0.0962,  0.0763,  0.2403,  0.2908,  0.1663, -0.4324,  0.1520, -0.1832,
         -0.0131]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
287000 特征值优化 tensor(1.3987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4116e-02, -6.6436e-02, -2.5557e-01, -9.7392e-01,  2.0665e+00,
          9.5970e-01,  2.2952e+00,  1.4838e+00,  2.5710e+00, -3.6065e-01,
         -1.2148e-01,  3.8874e-01,  5.8087e-01, -2.3950e-01,  2.4947e-01,
          2.9492e-01, -5.1591e-01, -2.8456e-01, -1.4155e-01, -1.2970e+00,
         -4.4055e-01, -4.0627e-01,  3.1547e-01, -1.4420e+00, -1.1900e+00,
         -3.5834e-01, -7.5878e-02, -4.4073e-01, -5.6585e-01,  1.5016e-01,
         -2.6297e-01,  2.3337e-01,  3.6003e-02, -3.7603e-02,  7.4273e-02,
          1.7525e-01, -1.7961e-01, -7.2855e-02,  8.4614e-02, -1.9324e-01,
          4.5253e-03, -6.7932e-01,  7.3532e-01, -2.5990e-02,  3.4228e-01,
         -1.9870e-01,  2.9356e-02, -8.6266e-02,  2.3150e-01, -1.8845e-01,
          1.9107e-02, -1.3304e-02, -2.2973e-01,  9.4109e-02, -2.0531e-01,
          2.7957e-01, -3.4878e-01, -2.7396e-01,  2.8442e-01, -1.5966e-01,
         -3.2471e-01, -6.7639e-02,  1.1442e-01, -3.2222e-02,  1.0792e-01,
         -1.4230e-01,  6.2076e-02, -1.2727e-01, -4.5783e-02,  1.3582e-01,
          4.2333e-02, -1.2912e-01,  1.7756e-01, -1.9000e-01,  1.4973e-01,
         -3.8473e-01,  4.5944e-02, -4.8127e-01,  3.7945e-01, -1.0138e-01,
          1.2761e-01, -4.9452e-04,  9.6089e-02,  5.1971e-02, -9.2934e-02,
         -1.0508e-01, -2.7931e-01, -4.7096e-02, -2.3520e-01, -3.3508e-01,
          5.7113e-02,  4.8027e-01,  3.0020e-01,  1.2877e-01,  5.9658e-01,
          4.4526e-02, -6.5656e-01,  1.0782e-01,  1.2816e-01, -1.3457e-01,
          7.3392e-01, -2.9751e-01,  2.0746e-01, -8.8134e-02,  2.1046e-01,
          4.5561e-01, -3.6912e-01,  3.5895e-01, -4.7746e-01,  1.2105e-01,
          1.1240e-01,  3.2354e-02,  8.7590e-02, -1.9284e-01, -7.6830e-03,
          6.1399e-02, -9.7078e-02, -9.5770e-02, -1.9770e-01, -1.3359e-01,
         -1.0993e-01,  1.5543e-01, -4.1870e-02, -5.4554e-02,  1.3708e-01,
         -6.8152e-02,  1.0582e-01, -2.7717e-02, -3.5566e-02,  1.3080e-02,
          6.7638e-02, -2.2828e-02,  6.2152e-02,  2.8036e-01, -3.0556e-01,
         -1.4107e-01, -6.2555e-02,  1.2403e-01, -8.9418e-02,  5.4178e-02,
          1.5584e-01,  2.8642e-02, -6.7739e-02, -3.9217e-01, -2.0892e-02,
         -1.3117e-01,  3.6389e-02,  7.3534e-02,  1.7298e-01,  1.3957e-01,
          4.6600e-02, -1.1870e-01,  1.0981e-01,  8.9811e-02,  2.3050e-01,
          2.8654e-01,  1.6858e-01, -4.2857e-01,  1.5510e-01, -1.8584e-01,
         -2.7411e-04]], device='cuda:0') tensor(0.2098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
288000 特征值优化 tensor(1.4155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0760, -0.0851, -0.2355, -0.9680,  2.0401,  0.9656,  2.3305,  1.5072,
          2.5608, -0.3536, -0.1215,  0.4015,  0.5633, -0.2417,  0.2548,  0.2863,
         -0.5194, -0.2789, -0.1535, -1.2882, -0.4597, -0.4042,  0.3041, -1.4365,
         -1.1659, -0.3733, -0.0667, -0.4526, -0.5592,  0.1554, -0.2734,  0.2259,
          0.0278, -0.0383,  0.0767,  0.1802, -0.1797, -0.0640,  0.0935, -0.1954,
         -0.0044, -0.6785,  0.7338, -0.0207,  0.3453, -0.2063,  0.0416, -0.0869,
          0.2315, -0.1856,  0.0261, -0.0175, -0.2262,  0.1023, -0.2246,  0.2738,
         -0.3612, -0.2862,  0.2766, -0.1607, -0.3195, -0.0741,  0.1203, -0.0335,
          0.1004, -0.1504,  0.0586, -0.1278, -0.0427,  0.1251,  0.0414, -0.1226,
          0.1739, -0.1806,  0.1509, -0.3930,  0.0472, -0.4750,  0.3717, -0.0962,
          0.1263, -0.0038,  0.1019,  0.0773, -0.1146, -0.0967, -0.2861, -0.0454,
         -0.2250, -0.3259,  0.0649,  0.4280,  0.3191,  0.1233,  0.6000,  0.0417,
         -0.6568,  0.1101,  0.0990, -0.1103,  0.7432, -0.2907,  0.1918, -0.0976,
          0.1948,  0.4827, -0.3554,  0.3545, -0.4426,  0.1221,  0.1094,  0.0367,
          0.0864, -0.1949, -0.0096,  0.0628, -0.0963, -0.1045, -0.2103, -0.1446,
         -0.1091,  0.1589, -0.0434, -0.0343,  0.1396, -0.0761,  0.1035, -0.0183,
         -0.0357,  0.0138,  0.0713, -0.0241,  0.0611,  0.2744, -0.2938, -0.1325,
         -0.0412,  0.1379, -0.0906,  0.0409,  0.1691,  0.0198, -0.0718, -0.3802,
         -0.0241, -0.1054,  0.0257,  0.0574,  0.1824,  0.1497,  0.0348, -0.1075,
          0.0927,  0.0876,  0.2293,  0.2794,  0.1653, -0.4232,  0.1424, -0.1842,
         -0.0136]], device='cuda:0') tensor(0.2185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
289000 特征值优化 tensor(1.3983, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.6457e-02, -9.9607e-02, -2.1216e-01, -9.7278e-01,  2.0166e+00,
          9.7934e-01,  2.3417e+00,  1.5137e+00,  2.5800e+00, -3.7703e-01,
         -1.1663e-01,  3.8020e-01,  5.5286e-01, -2.5868e-01,  2.7236e-01,
          3.0349e-01, -5.1390e-01, -2.7056e-01, -1.5202e-01, -1.2869e+00,
         -4.4525e-01, -4.0845e-01,  2.9687e-01, -1.4341e+00, -1.1633e+00,
         -3.6748e-01, -7.8710e-02, -4.4215e-01, -5.7349e-01,  1.5727e-01,
         -2.8026e-01,  2.2451e-01,  2.9605e-02, -2.5866e-02,  8.8005e-02,
          1.7324e-01, -1.7294e-01, -7.1308e-02,  8.0361e-02, -1.9075e-01,
          4.0443e-03, -6.8471e-01,  7.3621e-01, -3.0978e-02,  3.3854e-01,
         -2.0866e-01,  3.2775e-02, -9.0462e-02,  2.3256e-01, -1.9137e-01,
          2.5444e-02, -2.0211e-02, -2.1934e-01,  1.0435e-01, -2.2586e-01,
          2.7563e-01, -3.6824e-01, -2.7777e-01,  2.6564e-01, -1.5742e-01,
         -3.1185e-01, -7.3902e-02,  1.1856e-01, -3.0927e-02,  1.0484e-01,
         -1.4921e-01,  5.3562e-02, -1.2709e-01, -4.9662e-02,  1.2839e-01,
          4.9618e-02, -1.2032e-01,  1.8463e-01, -1.9022e-01,  1.4994e-01,
         -3.9204e-01,  3.9673e-02, -4.7197e-01,  3.6754e-01, -1.0148e-01,
          1.1802e-01,  2.1757e-03,  9.5116e-02,  6.5390e-02, -1.1364e-01,
         -9.7110e-02, -2.8499e-01, -3.2312e-02, -2.1539e-01, -3.1107e-01,
          6.6501e-02,  4.2025e-01,  3.1298e-01,  1.1296e-01,  6.0877e-01,
          4.1218e-02, -6.4983e-01,  1.1678e-01,  8.9351e-02, -9.8257e-02,
          7.3809e-01, -2.9888e-01,  2.0454e-01, -9.3860e-02,  1.8956e-01,
          4.8766e-01, -3.5100e-01,  3.5538e-01, -4.2949e-01,  1.1744e-01,
          1.1023e-01,  3.3828e-02,  9.5026e-02, -2.0309e-01, -1.8892e-02,
          6.6050e-02, -1.0506e-01, -1.1823e-01, -1.9380e-01, -1.3675e-01,
         -1.1925e-01,  1.6193e-01, -3.7796e-02, -3.7741e-02,  1.3586e-01,
         -6.3917e-02,  9.8384e-02, -2.5914e-02, -3.7631e-02,  1.6053e-02,
          6.9295e-02, -1.9106e-02,  6.3443e-02,  2.6619e-01, -3.0752e-01,
         -1.3121e-01, -5.6199e-02,  1.3503e-01, -7.9235e-02,  3.8219e-02,
          1.5718e-01,  8.9217e-03, -8.4489e-02, -3.8015e-01, -1.7741e-02,
         -1.2114e-01,  3.2318e-02,  4.7396e-02,  1.7721e-01,  1.4657e-01,
          4.9781e-02, -1.2208e-01,  8.2987e-02,  7.7163e-02,  2.3734e-01,
          2.8754e-01,  1.6809e-01, -4.3740e-01,  1.5539e-01, -1.8550e-01,
         -2.3862e-02]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
290000 特征值优化 tensor(1.4103, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.7788e-02, -1.4391e-01, -2.1398e-01, -9.6705e-01,  2.0074e+00,
          9.8904e-01,  2.3439e+00,  1.4959e+00,  2.5872e+00, -3.5817e-01,
         -1.1653e-01,  3.8350e-01,  5.5819e-01, -2.4426e-01,  2.7487e-01,
          3.1610e-01, -5.2694e-01, -2.7884e-01, -1.5911e-01, -1.2642e+00,
         -4.5819e-01, -4.1237e-01,  2.9956e-01, -1.4252e+00, -1.1529e+00,
         -3.5704e-01, -5.8926e-02, -4.2645e-01, -5.7002e-01,  1.6548e-01,
         -2.7393e-01,  2.2968e-01,  3.9909e-02, -2.6235e-02,  7.4995e-02,
          1.6812e-01, -1.7362e-01, -6.8770e-02,  8.3881e-02, -1.9266e-01,
         -3.6758e-04, -6.8039e-01,  7.3049e-01, -2.3955e-02,  3.3670e-01,
         -2.0228e-01,  3.4173e-02, -8.6831e-02,  2.3296e-01, -1.9560e-01,
          3.8438e-02, -2.3937e-02, -2.2670e-01,  1.0627e-01, -2.2527e-01,
          2.7401e-01, -3.6951e-01, -2.8090e-01,  2.8278e-01, -1.5607e-01,
         -3.2317e-01, -8.3333e-02,  1.2172e-01, -2.0558e-02,  1.0579e-01,
         -1.5520e-01,  6.0090e-02, -1.2084e-01, -4.7878e-02,  1.2329e-01,
          4.5610e-02, -1.2021e-01,  1.7977e-01, -1.8556e-01,  1.4725e-01,
         -3.9097e-01,  4.5898e-02, -4.8179e-01,  3.7206e-01, -9.1667e-02,
          1.2548e-01, -9.7894e-05,  1.0842e-01,  7.3005e-02, -1.3017e-01,
         -1.0428e-01, -2.7972e-01, -4.3644e-02, -2.0769e-01, -3.3643e-01,
          6.4532e-02,  3.9909e-01,  3.2157e-01,  1.1729e-01,  6.0408e-01,
          3.7266e-02, -6.5209e-01,  1.1135e-01,  1.0010e-01, -1.0917e-01,
          7.4979e-01, -2.9491e-01,  2.1337e-01, -8.0459e-02,  1.8554e-01,
          5.0120e-01, -3.5748e-01,  3.6623e-01, -4.3218e-01,  1.2139e-01,
          1.1007e-01,  4.3811e-02,  8.1492e-02, -2.1526e-01, -8.7117e-03,
          6.5143e-02, -1.0672e-01, -1.1054e-01, -1.8941e-01, -1.4324e-01,
         -1.0944e-01,  1.5423e-01, -4.3988e-02, -2.9864e-02,  1.3948e-01,
         -6.6914e-02,  1.0056e-01, -2.1745e-02, -3.6087e-02,  1.6125e-02,
          6.3507e-02, -2.1149e-02,  5.8987e-02,  2.6707e-01, -2.9965e-01,
         -1.3905e-01, -4.1898e-02,  1.3794e-01, -1.0291e-01,  3.9650e-02,
          1.6350e-01,  2.4934e-02, -8.0410e-02, -3.9093e-01, -2.9159e-02,
         -1.1455e-01,  2.3575e-02,  5.6783e-02,  1.7813e-01,  1.4063e-01,
          4.1323e-02, -1.1392e-01,  7.8413e-02,  6.7328e-02,  2.3969e-01,
          2.8252e-01,  1.7636e-01, -4.3802e-01,  1.3468e-01, -1.9369e-01,
         -5.6411e-03]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
291000 特征值优化 tensor(1.4033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0666, -0.1464, -0.2259, -0.9746,  2.0230,  1.0005,  2.3648,  1.4949,
          2.6070, -0.3709, -0.1209,  0.3934,  0.5539, -0.2462,  0.2530,  0.3096,
         -0.5229, -0.2744, -0.1421, -1.2723, -0.4504, -0.4070,  0.3045, -1.4093,
         -1.1512, -0.3732, -0.0853, -0.4425, -0.5640,  0.1553, -0.2715,  0.2280,
          0.0329, -0.0440,  0.0704,  0.1611, -0.1789, -0.0528,  0.0793, -0.2010,
          0.0079, -0.6761,  0.7272, -0.0285,  0.3366, -0.2042,  0.0325, -0.0805,
          0.2287, -0.1971,  0.0375, -0.0102, -0.2366,  0.1096, -0.2247,  0.2813,
         -0.3634, -0.2842,  0.2879, -0.1554, -0.3211, -0.0755,  0.1195, -0.0332,
          0.1017, -0.1421,  0.0598, -0.1202, -0.0410,  0.1257,  0.0395, -0.1229,
          0.1868, -0.1965,  0.1490, -0.3875,  0.0512, -0.4836,  0.3626, -0.0984,
          0.1235, -0.0052,  0.0936,  0.0790, -0.1102, -0.0888, -0.2917, -0.0415,
         -0.2233, -0.3166,  0.0606,  0.4032,  0.3126,  0.1077,  0.6044,  0.0377,
         -0.6492,  0.0995,  0.1052, -0.1159,  0.7391, -0.2984,  0.2050, -0.1005,
          0.1927,  0.4972, -0.3476,  0.3618, -0.4203,  0.1137,  0.1087,  0.0379,
          0.0937, -0.1999, -0.0132,  0.0692, -0.1046, -0.1115, -0.2054, -0.1441,
         -0.1089,  0.1630, -0.0410, -0.0390,  0.1473, -0.0680,  0.1032, -0.0226,
         -0.0381,  0.0131,  0.0724, -0.0230,  0.0570,  0.2698, -0.3015, -0.1476,
         -0.0503,  0.1325, -0.0899,  0.0397,  0.1642,  0.0201, -0.0814, -0.3896,
         -0.0274, -0.1141,  0.0335,  0.0426,  0.1766,  0.1612,  0.0482, -0.1181,
          0.0934,  0.0803,  0.2309,  0.2779,  0.1614, -0.4339,  0.1511, -0.1884,
         -0.0185]], device='cuda:0') tensor(0.2186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
292000 特征值优化 tensor(1.3994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0772, -0.1731, -0.2302, -0.9775,  2.0263,  1.0154,  2.3741,  1.4891,
          2.6238, -0.3736, -0.1172,  0.3791,  0.5511, -0.2325,  0.2625,  0.3129,
         -0.5089, -0.2779, -0.1359, -1.2707, -0.4531, -0.4066,  0.3026, -1.4094,
         -1.1492, -0.3642, -0.0897, -0.4310, -0.5839,  0.1568, -0.2681,  0.2334,
          0.0269, -0.0465,  0.0692,  0.1547, -0.1774, -0.0548,  0.0760, -0.1972,
          0.0130, -0.6793,  0.7310, -0.0230,  0.3346, -0.1984,  0.0342, -0.0870,
          0.2286, -0.2017,  0.0399, -0.0066, -0.2450,  0.1076, -0.2150,  0.2780,
         -0.3616, -0.2864,  0.2913, -0.1520, -0.3131, -0.0753,  0.1183, -0.0272,
          0.1058, -0.1553,  0.0580, -0.1220, -0.0472,  0.1280,  0.0359, -0.1205,
          0.1842, -0.1952,  0.1517, -0.3897,  0.0456, -0.4820,  0.3595, -0.0922,
          0.1179, -0.0054,  0.0938,  0.0719, -0.1008, -0.0804, -0.2827, -0.0379,
         -0.2188, -0.3255,  0.0541,  0.3910,  0.3229,  0.1125,  0.6056,  0.0415,
         -0.6537,  0.1019,  0.1161, -0.1118,  0.7437, -0.2992,  0.1998, -0.1067,
          0.1920,  0.5028, -0.3517,  0.3638, -0.4099,  0.1162,  0.1099,  0.0361,
          0.0840, -0.2060, -0.0078,  0.0603, -0.1057, -0.1037, -0.1953, -0.1324,
         -0.1163,  0.1589, -0.0412, -0.0377,  0.1462, -0.0718,  0.0948, -0.0234,
         -0.0368,  0.0128,  0.0721, -0.0217,  0.0598,  0.2718, -0.3136, -0.1446,
         -0.0532,  0.1260, -0.0965,  0.0389,  0.1671,  0.0179, -0.0805, -0.3899,
         -0.0349, -0.1228,  0.0384,  0.0449,  0.1785,  0.1619,  0.0475, -0.1220,
          0.0948,  0.0718,  0.2360,  0.2796,  0.1677, -0.4367,  0.1493, -0.1875,
         -0.0159]], device='cuda:0') tensor(0.2136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
293000 特征值优化 tensor(1.4237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0664, -0.1849, -0.2395, -0.9746,  2.0257,  1.0149,  2.3922,  1.5025,
          2.6361, -0.3767, -0.1201,  0.3755,  0.5535, -0.2309,  0.2585,  0.3029,
         -0.5090, -0.2669, -0.1481, -1.2610, -0.4395, -0.3967,  0.3043, -1.4169,
         -1.1382, -0.3673, -0.0848, -0.4239, -0.5753,  0.1611, -0.2583,  0.2305,
          0.0271, -0.0428,  0.0690,  0.1533, -0.1822, -0.0583,  0.0862, -0.1918,
          0.0057, -0.6827,  0.7335, -0.0270,  0.3354, -0.2019,  0.0414, -0.0877,
          0.2340, -0.1858,  0.0351, -0.0113, -0.2353,  0.1113, -0.2172,  0.2728,
         -0.3532, -0.2882,  0.2839, -0.1517, -0.3173, -0.0829,  0.1110, -0.0219,
          0.1038, -0.1548,  0.0585, -0.1288, -0.0444,  0.1244,  0.0452, -0.1267,
          0.1809, -0.1936,  0.1497, -0.3922,  0.0437, -0.4824,  0.3529, -0.1069,
          0.1113, -0.0042,  0.1012,  0.0740, -0.1187, -0.0913, -0.2882, -0.0438,
         -0.2205, -0.3060,  0.0551,  0.3803,  0.3159,  0.1103,  0.6053,  0.0424,
         -0.6598,  0.1140,  0.1103, -0.1145,  0.7542, -0.3005,  0.2008, -0.1013,
          0.1933,  0.4950, -0.3431,  0.3596, -0.4038,  0.1187,  0.1115,  0.0429,
          0.0860, -0.2033, -0.0081,  0.0711, -0.0991, -0.1083, -0.1977, -0.1259,
         -0.1102,  0.1600, -0.0409, -0.0370,  0.1435, -0.0698,  0.0988, -0.0205,
         -0.0356,  0.0103,  0.0678, -0.0165,  0.0599,  0.2746, -0.3058, -0.1360,
         -0.0383,  0.1415, -0.0980,  0.0299,  0.1603,  0.0241, -0.0875, -0.3771,
         -0.0343, -0.1197,  0.0172,  0.0621,  0.1928,  0.1378,  0.0377, -0.1153,
          0.0829,  0.0787,  0.2295,  0.2647,  0.1746, -0.4283,  0.1386, -0.1872,
         -0.0234]], device='cuda:0') tensor(0.2186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
294000 特征值优化 tensor(1.4033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0907, -0.1964, -0.2389, -0.9716,  2.0416,  1.0199,  2.3971,  1.4973,
          2.6341, -0.3819, -0.1275,  0.3665,  0.5466, -0.2395,  0.2756,  0.3057,
         -0.5103, -0.2703, -0.1386, -1.2457, -0.4341, -0.4045,  0.3069, -1.4119,
         -1.1440, -0.3662, -0.0908, -0.4163, -0.5795,  0.1632, -0.2716,  0.2302,
          0.0271, -0.0389,  0.0767,  0.1561, -0.1764, -0.0596,  0.0802, -0.1802,
          0.0053, -0.6792,  0.7317, -0.0300,  0.3330, -0.2038,  0.0277, -0.0812,
          0.2316, -0.1977,  0.0366, -0.0070, -0.2383,  0.1146, -0.2194,  0.2851,
         -0.3606, -0.2914,  0.2881, -0.1507, -0.3262, -0.0813,  0.1194, -0.0262,
          0.1108, -0.1574,  0.0592, -0.1232, -0.0476,  0.1271,  0.0421, -0.1178,
          0.1858, -0.2015,  0.1462, -0.3902,  0.0538, -0.4915,  0.3467, -0.1063,
          0.1145, -0.0035,  0.0983,  0.0854, -0.1133, -0.0864, -0.2881, -0.0399,
         -0.2111, -0.2989,  0.0646,  0.3885,  0.3113,  0.1032,  0.6049,  0.0436,
         -0.6657,  0.1091,  0.1214, -0.1264,  0.7401, -0.2997,  0.2120, -0.0938,
          0.1947,  0.5059, -0.3407,  0.3673, -0.4071,  0.1246,  0.1138,  0.0447,
          0.0842, -0.2107, -0.0136,  0.0760, -0.1034, -0.1139, -0.1833, -0.1364,
         -0.1138,  0.1583, -0.0401, -0.0332,  0.1430, -0.0690,  0.1035, -0.0230,
         -0.0363,  0.0107,  0.0743, -0.0197,  0.0622,  0.2694, -0.3016, -0.1504,
         -0.0521,  0.1352, -0.0940,  0.0325,  0.1534,  0.0220, -0.0826, -0.3865,
         -0.0406, -0.1182,  0.0269,  0.0498,  0.1844,  0.1473,  0.0482, -0.1184,
          0.0854,  0.0711,  0.2318,  0.2764,  0.1683, -0.4360,  0.1440, -0.1904,
         -0.0171]], device='cuda:0') tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
295000 特征值优化 tensor(1.4812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0741, -0.2081, -0.2280, -0.9808,  1.9959,  1.0397,  2.3849,  1.4944,
          2.6484, -0.3885, -0.1266,  0.3810,  0.5372, -0.2555,  0.2677,  0.3010,
         -0.5090, -0.2743, -0.1446, -1.2388, -0.4392, -0.4047,  0.3064, -1.4161,
         -1.1372, -0.3606, -0.0929, -0.4297, -0.5905,  0.1638, -0.2749,  0.2266,
          0.0163, -0.0349,  0.0741,  0.1501, -0.1798, -0.0442,  0.0733, -0.1984,
          0.0178, -0.6825,  0.7321, -0.0412,  0.3294, -0.2054,  0.0501, -0.0952,
          0.2345, -0.2006,  0.0341, -0.0112, -0.2399,  0.1004, -0.2169,  0.2834,
         -0.3616, -0.2828,  0.2860, -0.1386, -0.3020, -0.0891,  0.1205, -0.0234,
          0.1040, -0.1479,  0.0598, -0.1179, -0.0407,  0.1252,  0.0477, -0.1236,
          0.1833, -0.1933,  0.1607, -0.3876,  0.0591, -0.4896,  0.3489, -0.1097,
          0.1314, -0.0080,  0.0965,  0.0706, -0.1123, -0.0717, -0.3033, -0.0420,
         -0.2034, -0.2800,  0.0622,  0.3662,  0.3178,  0.1115,  0.6114,  0.0425,
         -0.6474,  0.0959,  0.0585, -0.0890,  0.7353, -0.3020,  0.2201, -0.0830,
          0.1920,  0.5275, -0.3515,  0.3611, -0.4134,  0.1152,  0.1119,  0.0327,
          0.0895, -0.2007, -0.0182,  0.0718, -0.1108, -0.1252, -0.1929, -0.1351,
         -0.1118,  0.1581, -0.0400, -0.0489,  0.1447, -0.0706,  0.0936, -0.0166,
         -0.0365,  0.0170,  0.0657, -0.0135,  0.0602,  0.2667, -0.3024, -0.1239,
         -0.0449,  0.1271, -0.0901,  0.0234,  0.1685,  0.0303, -0.0859, -0.3907,
         -0.0357, -0.1105,  0.0393,  0.0268,  0.1811,  0.1571,  0.0698, -0.1289,
          0.0817,  0.0725,  0.2253,  0.2838,  0.1850, -0.4411,  0.1283, -0.1874,
         -0.0216]], device='cuda:0') tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
296000 特征值优化 tensor(1.3965, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0711, -0.2180, -0.2146, -0.9789,  2.0151,  1.0197,  2.4058,  1.4959,
          2.6468, -0.3852, -0.1226,  0.3957,  0.5416, -0.2458,  0.2572,  0.3141,
         -0.5069, -0.2685, -0.1262, -1.2509, -0.4393, -0.4033,  0.3056, -1.4084,
         -1.1376, -0.3692, -0.0964, -0.4283, -0.5842,  0.1568, -0.2731,  0.2324,
          0.0259, -0.0442,  0.0716,  0.1482, -0.1765, -0.0458,  0.0758, -0.1941,
          0.0189, -0.6840,  0.7351, -0.0284,  0.3365, -0.2065,  0.0330, -0.0844,
          0.2275, -0.2066,  0.0417, -0.0111, -0.2406,  0.1067, -0.2163,  0.2705,
         -0.3527, -0.2827,  0.2891, -0.1422, -0.3064, -0.0852,  0.1155, -0.0300,
          0.1048, -0.1465,  0.0593, -0.1226, -0.0469,  0.1284,  0.0455, -0.1246,
          0.1849, -0.2030,  0.1504, -0.3924,  0.0477, -0.4899,  0.3467, -0.1019,
          0.1211, -0.0065,  0.0925,  0.0784, -0.1068, -0.0697, -0.2970, -0.0421,
         -0.2099, -0.3015,  0.0592,  0.3705,  0.3224,  0.1021,  0.6081,  0.0414,
         -0.6459,  0.1112,  0.0987, -0.0972,  0.7469, -0.2992,  0.2171, -0.1017,
          0.1896,  0.5119, -0.3358,  0.3583, -0.4026,  0.1110,  0.1115,  0.0348,
          0.0954, -0.1982, -0.0184,  0.0706, -0.1074, -0.1252, -0.2037, -0.1400,
         -0.1094,  0.1593, -0.0423, -0.0462,  0.1488, -0.0681,  0.0943, -0.0198,
         -0.0393,  0.0110,  0.0705, -0.0180,  0.0571,  0.2691, -0.3055, -0.1373,
         -0.0435,  0.1321, -0.0911,  0.0310,  0.1650,  0.0136, -0.0803, -0.3879,
         -0.0396, -0.1096,  0.0309,  0.0338,  0.1795,  0.1564,  0.0618, -0.1241,
          0.0878,  0.0791,  0.2307,  0.2762,  0.1782, -0.4431,  0.1382, -0.1831,
         -0.0231]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
297000 正交保障 tensor(0.2353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0192e-01, -2.2788e-01, -2.2593e-01, -9.7821e-01,  2.0173e+00,
          1.0256e+00,  2.4236e+00,  1.5032e+00,  2.6548e+00, -3.7955e-01,
         -1.2257e-01,  3.8760e-01,  5.5780e-01, -2.2591e-01,  2.6374e-01,
          3.1877e-01, -5.1023e-01, -2.6325e-01, -1.2165e-01, -1.2633e+00,
         -4.4673e-01, -3.9998e-01,  2.9672e-01, -1.4135e+00, -1.1395e+00,
         -3.5316e-01, -1.0712e-01, -4.2520e-01, -6.0354e-01,  1.5909e-01,
         -2.7228e-01,  2.3164e-01,  1.7521e-02, -4.4971e-02,  6.8212e-02,
          1.5192e-01, -1.7704e-01, -5.6115e-02,  8.1218e-02, -1.8067e-01,
          1.2653e-02, -6.8200e-01,  7.3631e-01, -1.8068e-02,  3.3873e-01,
         -1.9872e-01,  3.5336e-02, -9.3123e-02,  2.2032e-01, -2.0583e-01,
          3.6996e-02, -1.1148e-02, -2.4191e-01,  1.0503e-01, -2.1558e-01,
          2.7459e-01, -3.4484e-01, -2.8512e-01,  2.9096e-01, -1.3871e-01,
         -3.1561e-01, -8.5609e-02,  1.1630e-01, -2.8764e-02,  1.0306e-01,
         -1.5887e-01,  5.4918e-02, -1.3145e-01, -4.8257e-02,  1.2483e-01,
          3.4722e-02, -1.2422e-01,  1.8590e-01, -2.0124e-01,  1.4707e-01,
         -3.9733e-01,  4.2192e-02, -4.8842e-01,  3.5135e-01, -8.3427e-02,
          1.0570e-01, -8.2524e-03,  9.5336e-02,  7.2969e-02, -1.0118e-01,
         -7.9080e-02, -2.8599e-01, -3.7972e-02, -1.9798e-01, -3.0004e-01,
          5.8187e-02,  3.6082e-01,  3.2796e-01,  1.0050e-01,  6.0041e-01,
          4.0735e-02, -6.4495e-01,  1.1970e-01,  1.0081e-01, -1.0035e-01,
          7.6242e-01, -3.0068e-01,  2.2621e-01, -1.0494e-01,  1.8084e-01,
          5.1190e-01, -3.3033e-01,  3.6455e-01, -4.0215e-01,  1.1438e-01,
          1.1224e-01,  3.7633e-02,  8.3538e-02, -2.0200e-01, -6.8308e-03,
          6.1706e-02, -1.0027e-01, -1.1979e-01, -1.9288e-01, -1.2891e-01,
         -1.1761e-01,  1.5744e-01, -4.0613e-02, -3.4143e-02,  1.5427e-01,
         -6.7106e-02,  8.5557e-02, -2.4283e-02, -4.5398e-02,  5.5622e-03,
          6.5835e-02, -1.7422e-02,  5.6710e-02,  2.7120e-01, -3.1174e-01,
         -1.3581e-01, -5.5826e-02,  1.3768e-01, -9.1383e-02,  3.5594e-02,
          1.5489e-01,  5.9239e-04, -8.8474e-02, -3.8157e-01, -4.2607e-02,
         -1.1182e-01,  2.6548e-02,  4.0664e-02,  1.8590e-01,  1.4907e-01,
          5.8899e-02, -1.1626e-01,  8.9763e-02,  7.2225e-02,  2.3937e-01,
          2.6947e-01,  1.7504e-01, -4.4834e-01,  1.4510e-01, -1.8611e-01,
         -2.0299e-02]], device='cuda:0') tensor(0.2353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
298000 特征值优化 tensor(1.4023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0909, -0.2345, -0.2330, -0.9723,  2.0360,  1.0227,  2.4256,  1.5155,
          2.6456, -0.3954, -0.1226,  0.3699,  0.5565, -0.2239,  0.2867,  0.3214,
         -0.5172, -0.2710, -0.1394, -1.2361, -0.4266, -0.3968,  0.3014, -1.4132,
         -1.1347, -0.3562, -0.0859, -0.4134, -0.5964,  0.1666, -0.2656,  0.2413,
          0.0349, -0.0240,  0.0750,  0.1449, -0.1740, -0.0619,  0.0882, -0.1714,
          0.0135, -0.6788,  0.7312, -0.0323,  0.3334, -0.2004,  0.0402, -0.0817,
          0.2253, -0.1970,  0.0418, -0.0056, -0.2414,  0.1148, -0.2172,  0.2731,
         -0.3483, -0.2917,  0.2883, -0.1440, -0.3209, -0.0882,  0.1185, -0.0245,
          0.1022, -0.1519,  0.0578, -0.1298, -0.0494,  0.1277,  0.0391, -0.1177,
          0.1782, -0.1937,  0.1425, -0.3942,  0.0463, -0.5011,  0.3367, -0.1127,
          0.1081, -0.0088,  0.1063,  0.0721, -0.1359, -0.0895, -0.2793, -0.0435,
         -0.2054, -0.3158,  0.0634,  0.3706,  0.3089,  0.0969,  0.6043,  0.0426,
         -0.6553,  0.1137,  0.1061, -0.1240,  0.7520, -0.3041,  0.2278, -0.0919,
          0.1893,  0.5062, -0.3388,  0.3675, -0.3959,  0.1229,  0.1104,  0.0445,
          0.0779, -0.2168, -0.0075,  0.0644, -0.1053, -0.1156, -0.1823, -0.1366,
         -0.1084,  0.1534, -0.0402, -0.0339,  0.1401, -0.0703,  0.0931, -0.0210,
         -0.0418,  0.0074,  0.0678, -0.0158,  0.0542,  0.2707, -0.3037, -0.1361,
         -0.0465,  0.1346, -0.1003,  0.0184,  0.1607,  0.0274, -0.0847, -0.3855,
         -0.0496, -0.1194,  0.0037,  0.0476,  0.1850,  0.1372,  0.0524, -0.1259,
          0.0730,  0.0748,  0.2331,  0.2686,  0.1802, -0.4437,  0.1344, -0.1888,
         -0.0087]], device='cuda:0') tensor(0.2194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
299000 特征值优化 tensor(1.4047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0634e-01, -2.4539e-01, -2.1136e-01, -9.7069e-01,  2.0226e+00,
          1.0187e+00,  2.4225e+00,  1.4987e+00,  2.6472e+00, -3.8197e-01,
         -1.2679e-01,  3.8341e-01,  5.6377e-01, -2.2671e-01,  2.7670e-01,
          3.1420e-01, -5.0573e-01, -2.6642e-01, -1.4101e-01, -1.2410e+00,
         -4.2967e-01, -4.0242e-01,  2.9265e-01, -1.4139e+00, -1.1259e+00,
         -3.6734e-01, -9.3892e-02, -4.1827e-01, -5.9127e-01,  1.6176e-01,
         -2.6337e-01,  2.3936e-01,  2.7422e-02, -3.8627e-02,  7.1784e-02,
          1.4967e-01, -1.8095e-01, -6.0271e-02,  8.9125e-02, -1.7321e-01,
          1.2552e-02, -6.8273e-01,  7.3178e-01, -1.8008e-02,  3.3748e-01,
         -1.9543e-01,  3.9399e-02, -7.6036e-02,  2.2726e-01, -1.9908e-01,
          4.6126e-02, -2.1330e-02, -2.2965e-01,  1.1427e-01, -2.1398e-01,
          2.7395e-01, -3.4440e-01, -2.8227e-01,  2.8968e-01, -1.4243e-01,
         -3.0900e-01, -8.4955e-02,  1.1703e-01, -2.5030e-02,  1.0406e-01,
         -1.5681e-01,  6.7889e-02, -1.2964e-01, -4.4569e-02,  1.1894e-01,
          4.4666e-02, -1.2221e-01,  1.8035e-01, -1.9428e-01,  1.4850e-01,
         -3.8986e-01,  4.7751e-02, -5.0284e-01,  3.3762e-01, -9.9398e-02,
          1.2263e-01, -1.2586e-02,  1.1160e-01,  7.9128e-02, -1.1217e-01,
         -6.8043e-02, -2.8488e-01, -4.3477e-02, -2.0214e-01, -3.0146e-01,
          6.3854e-02,  3.5317e-01,  3.2495e-01,  9.0809e-02,  6.0898e-01,
          3.7217e-02, -6.5857e-01,  9.7930e-02,  1.0514e-01, -1.0225e-01,
          7.4958e-01, -2.9396e-01,  2.2366e-01, -9.2440e-02,  1.8057e-01,
          5.0991e-01, -3.5180e-01,  3.6855e-01, -4.0988e-01,  1.2414e-01,
          1.1124e-01,  3.8462e-02,  7.6898e-02, -2.0609e-01,  3.1077e-04,
          7.4530e-02, -9.7709e-02, -1.1792e-01, -1.9643e-01, -1.4536e-01,
         -1.0462e-01,  1.5849e-01, -4.5125e-02, -4.0708e-02,  1.3974e-01,
         -7.0055e-02,  9.2464e-02, -2.2675e-02, -4.1084e-02,  1.5741e-02,
          6.2961e-02, -2.0502e-02,  5.2993e-02,  2.7357e-01, -3.0096e-01,
         -1.3855e-01, -3.7348e-02,  1.4485e-01, -1.1054e-01,  3.0120e-02,
          1.7065e-01,  3.3203e-02, -8.3877e-02, -3.9394e-01, -4.9824e-02,
         -1.0843e-01,  2.2281e-02,  4.2363e-02,  2.0345e-01,  1.4334e-01,
          4.3953e-02, -1.1694e-01,  8.6720e-02,  7.1462e-02,  2.4547e-01,
          2.7156e-01,  1.9009e-01, -4.4883e-01,  1.1734e-01, -1.8411e-01,
         -1.7133e-02]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
300000 特征值优化 tensor(1.3891, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0647, -0.2475, -0.2221, -0.9794,  2.0009,  1.0324,  2.4314,  1.5022,
          2.6721, -0.3910, -0.1251,  0.3744,  0.5247, -0.2502,  0.2909,  0.3071,
         -0.4972, -0.2620, -0.1128, -1.2629, -0.4552, -0.4004,  0.2825, -1.4283,
         -1.1343, -0.3596, -0.0998, -0.4066, -0.6111,  0.1570, -0.2619,  0.2270,
          0.0553, -0.0342,  0.0520,  0.1384, -0.1898, -0.0461,  0.0649, -0.2050,
          0.0141, -0.6820,  0.7332, -0.0335,  0.3448, -0.2153,  0.0431, -0.0931,
          0.2224, -0.1969,  0.0424, -0.0219, -0.2427,  0.1030, -0.2183,  0.2592,
         -0.3610, -0.2896,  0.3005, -0.1382, -0.2787, -0.0869,  0.1214, -0.0321,
          0.0961, -0.1472,  0.0545, -0.1149, -0.0391,  0.1230,  0.0386, -0.1171,
          0.1884, -0.2004,  0.1471, -0.3986,  0.0406, -0.4850,  0.3438, -0.0920,
          0.1085,  0.0041,  0.0976,  0.0641, -0.1150, -0.0642, -0.2988, -0.0375,
         -0.2178, -0.2981,  0.0643,  0.3573,  0.3144,  0.0994,  0.6068,  0.0424,
         -0.6605,  0.1223,  0.0870, -0.0838,  0.7594, -0.2978,  0.2230, -0.0905,
          0.1809,  0.5348, -0.3504,  0.3529, -0.3880,  0.1106,  0.1103,  0.0306,
          0.0901, -0.2188, -0.0108,  0.0650, -0.1071, -0.1204, -0.1847, -0.1445,
         -0.1056,  0.1566, -0.0283, -0.0340,  0.1570, -0.0668,  0.1061, -0.0308,
         -0.0526,  0.0192,  0.0772, -0.0144,  0.0759,  0.2589, -0.3053, -0.1224,
         -0.0446,  0.1267, -0.1035,  0.0416,  0.1785,  0.0148, -0.0960, -0.3787,
         -0.0588, -0.0985,  0.0174,  0.0243,  0.1872,  0.1603,  0.0635, -0.1265,
          0.0685,  0.0593,  0.2414,  0.2788,  0.1868, -0.4563,  0.1272, -0.1878,
         -0.0219]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
301000 特征值优化 tensor(1.4117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0738, -0.2484, -0.2352, -0.9729,  2.0331,  1.0221,  2.4280,  1.5029,
          2.6715, -0.3871, -0.1249,  0.3874,  0.5398, -0.2392,  0.2624,  0.3131,
         -0.5184, -0.2737, -0.1274, -1.2367, -0.4213, -0.4033,  0.3038, -1.4066,
         -1.1197, -0.3703, -0.1009, -0.4049, -0.5799,  0.1623, -0.2662,  0.2388,
          0.0253, -0.0419,  0.0724,  0.1482, -0.1732, -0.0456,  0.0846, -0.1868,
          0.0151, -0.6774,  0.7263, -0.0311,  0.3339, -0.2030,  0.0317, -0.0737,
          0.2246, -0.2031,  0.0387, -0.0168, -0.2412,  0.1127, -0.2161,  0.2632,
         -0.3465, -0.2922,  0.2949, -0.1428, -0.3106, -0.0895,  0.1209, -0.0300,
          0.1073, -0.1486,  0.0611, -0.1205, -0.0496,  0.1261,  0.0446, -0.1226,
          0.1835, -0.1949,  0.1516, -0.3880,  0.0505, -0.5085,  0.3263, -0.1032,
          0.1138, -0.0140,  0.0965,  0.0846, -0.1134, -0.0726, -0.3013, -0.0437,
         -0.2204, -0.3082,  0.0617,  0.3530,  0.3173,  0.0896,  0.5999,  0.0429,
         -0.6517,  0.0900,  0.1134, -0.1126,  0.7448, -0.2951,  0.2281, -0.0979,
          0.1847,  0.5105, -0.3421,  0.3590, -0.4006,  0.1197,  0.1120,  0.0402,
          0.0851, -0.2027, -0.0094,  0.0717, -0.1006, -0.1202, -0.1968, -0.1413,
         -0.1088,  0.1611, -0.0390, -0.0419,  0.1457, -0.0729,  0.0939, -0.0165,
         -0.0460,  0.0145,  0.0661, -0.0242,  0.0530,  0.2762, -0.3085, -0.1361,
         -0.0547,  0.1338, -0.0885,  0.0317,  0.1656,  0.0321, -0.0740, -0.3914,
         -0.0575, -0.1085,  0.0190,  0.0416,  0.1879,  0.1451,  0.0633, -0.1183,
          0.0846,  0.0728,  0.2272,  0.2658,  0.1694, -0.4425,  0.1305, -0.1948,
         -0.0233]], device='cuda:0') tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
302000 特征值优化 tensor(1.4168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0834, -0.2548, -0.2415, -0.9683,  2.0305,  1.0232,  2.4277,  1.5062,
          2.6640, -0.3868, -0.1227,  0.3772,  0.5357, -0.2354,  0.2851,  0.3111,
         -0.5058, -0.2653, -0.1240, -1.2342, -0.4187, -0.3994,  0.2994, -1.4088,
         -1.1192, -0.3636, -0.0973, -0.4057, -0.6031,  0.1586, -0.2636,  0.2380,
          0.0274, -0.0331,  0.0745,  0.1445, -0.1776, -0.0494,  0.0835, -0.1819,
          0.0172, -0.6808,  0.7315, -0.0365,  0.3420, -0.2046,  0.0347, -0.0775,
          0.2311, -0.2025,  0.0503, -0.0151, -0.2493,  0.1119, -0.2016,  0.2665,
         -0.3421, -0.2974,  0.2941, -0.1468, -0.3114, -0.0901,  0.1173, -0.0274,
          0.1084, -0.1499,  0.0605, -0.1216, -0.0468,  0.1235,  0.0455, -0.1300,
          0.1770, -0.1949,  0.1513, -0.3876,  0.0549, -0.4978,  0.3348, -0.1011,
          0.1199, -0.0148,  0.1013,  0.0795, -0.1076, -0.0797, -0.2952, -0.0472,
         -0.2051, -0.3087,  0.0639,  0.3541,  0.3183,  0.0854,  0.6044,  0.0448,
         -0.6561,  0.1079,  0.1018, -0.0990,  0.7529, -0.2961,  0.2113, -0.0924,
          0.1803,  0.5097, -0.3474,  0.3682, -0.3876,  0.1198,  0.1112,  0.0427,
          0.0934, -0.2103, -0.0122,  0.0752, -0.1056, -0.1206, -0.1830, -0.1332,
         -0.1069,  0.1587, -0.0347, -0.0377,  0.1476, -0.0680,  0.0902, -0.0159,
         -0.0532,  0.0147,  0.0653, -0.0166,  0.0572,  0.2762, -0.3058, -0.1358,
         -0.0477,  0.1371, -0.1008,  0.0408,  0.1572,  0.0278, -0.0683, -0.3816,
         -0.0585, -0.1107,  0.0229,  0.0413,  0.1973,  0.1485,  0.0551, -0.1214,
          0.0840,  0.0593,  0.2322,  0.2646,  0.1918, -0.4422,  0.1226, -0.1961,
         -0.0227]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
303000 特征值优化 tensor(1.3996, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.9036e-02, -2.5124e-01, -2.3434e-01, -9.7375e-01,  2.0471e+00,
          1.0097e+00,  2.4323e+00,  1.4998e+00,  2.6676e+00, -3.9768e-01,
         -1.2655e-01,  3.6115e-01,  5.4886e-01, -2.2672e-01,  2.8667e-01,
          3.1633e-01, -5.0822e-01, -2.6487e-01, -1.3292e-01, -1.2423e+00,
         -4.1014e-01, -3.9829e-01,  2.9408e-01, -1.4135e+00, -1.1184e+00,
         -3.6225e-01, -8.6881e-02, -4.0211e-01, -6.1107e-01,  1.6272e-01,
         -2.6088e-01,  2.4036e-01,  4.2817e-02, -3.6964e-02,  8.0908e-02,
          1.4003e-01, -1.7922e-01, -6.3511e-02,  8.7088e-02, -1.6816e-01,
          1.9546e-02, -6.7851e-01,  7.3172e-01, -1.9627e-02,  3.3811e-01,
         -2.0301e-01,  4.0615e-02, -8.2954e-02,  2.2399e-01, -2.0726e-01,
          4.0312e-02, -8.5826e-03, -2.4940e-01,  1.1077e-01, -2.1025e-01,
          2.5777e-01, -3.4265e-01, -2.9351e-01,  2.8486e-01, -1.4058e-01,
         -3.1424e-01, -9.2968e-02,  1.1750e-01, -2.2227e-02,  1.0543e-01,
         -1.5331e-01,  6.2510e-02, -1.2683e-01, -5.0171e-02,  1.3168e-01,
          3.8641e-02, -1.1691e-01,  1.7496e-01, -1.9432e-01,  1.4743e-01,
         -3.9893e-01,  4.1220e-02, -5.0615e-01,  3.3191e-01, -1.2173e-01,
          1.0407e-01, -1.0361e-02,  1.0072e-01,  7.0591e-02, -1.3157e-01,
         -7.8552e-02, -2.7748e-01, -4.7865e-02, -2.0670e-01, -3.0224e-01,
          6.3812e-02,  3.5574e-01,  3.1319e-01,  9.6498e-02,  5.9949e-01,
          4.2058e-02, -6.5762e-01,  1.1213e-01,  1.2289e-01, -1.1549e-01,
          7.5687e-01, -2.9766e-01,  2.4191e-01, -9.6694e-02,  1.8955e-01,
          5.2335e-01, -3.4345e-01,  3.6082e-01, -3.9477e-01,  1.1677e-01,
          1.1064e-01,  4.9620e-02,  8.1624e-02, -2.1651e-01, -1.2378e-03,
          6.7721e-02, -1.1089e-01, -1.1736e-01, -1.7927e-01, -1.3065e-01,
         -1.1100e-01,  1.5420e-01, -3.9040e-02, -3.8101e-02,  1.3879e-01,
         -6.4230e-02,  9.1937e-02, -2.5875e-02, -4.4996e-02,  9.8401e-03,
          6.7342e-02, -1.8139e-02,  5.7066e-02,  2.7579e-01, -3.1145e-01,
         -1.3308e-01, -3.8345e-02,  1.3457e-01, -1.0609e-01,  2.6207e-02,
          1.6322e-01,  2.7057e-02, -7.8578e-02, -3.8594e-01, -5.7416e-02,
         -1.2096e-01, -4.8259e-03,  4.8289e-02,  1.8790e-01,  1.2589e-01,
          5.4016e-02, -1.2454e-01,  6.7192e-02,  7.5868e-02,  2.3626e-01,
          2.6897e-01,  1.8203e-01, -4.4756e-01,  1.2443e-01, -1.9147e-01,
         -3.5186e-03]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
304000 特征值优化 tensor(1.4575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.0072e-02, -2.6014e-01, -2.2049e-01, -9.7795e-01,  2.0543e+00,
          1.0250e+00,  2.4378e+00,  1.4949e+00,  2.6691e+00, -4.0272e-01,
         -1.2819e-01,  3.6105e-01,  5.5877e-01, -2.1772e-01,  2.9209e-01,
          3.1111e-01, -5.1739e-01, -2.8076e-01, -1.1853e-01, -1.2190e+00,
         -4.2046e-01, -4.0147e-01,  2.8629e-01, -1.4118e+00, -1.1106e+00,
         -3.4917e-01, -9.7892e-02, -4.1526e-01, -5.9821e-01,  1.5935e-01,
         -2.6378e-01,  2.4183e-01,  2.3754e-02, -3.7007e-02,  8.3685e-02,
          1.4849e-01, -1.7345e-01, -4.5937e-02,  8.3734e-02, -1.8032e-01,
          1.9931e-02, -6.8209e-01,  7.3321e-01, -2.3674e-02,  3.3307e-01,
         -2.0505e-01,  3.0314e-02, -6.5936e-02,  2.1883e-01, -1.9785e-01,
          4.2506e-02, -6.2009e-03, -2.4327e-01,  1.0713e-01, -2.0383e-01,
          2.7580e-01, -3.3794e-01, -2.8592e-01,  2.8342e-01, -1.4195e-01,
         -3.1593e-01, -7.9022e-02,  1.2201e-01, -2.5828e-02,  1.0931e-01,
         -1.5880e-01,  6.2827e-02, -1.1574e-01, -4.5115e-02,  1.1858e-01,
          3.1465e-02, -1.2373e-01,  1.7607e-01, -1.7888e-01,  1.4913e-01,
         -3.8286e-01,  6.6118e-02, -5.2995e-01,  3.3307e-01, -9.8601e-02,
          1.2767e-01, -1.7525e-02,  1.1044e-01,  7.4608e-02, -1.0660e-01,
         -7.4223e-02, -2.8465e-01, -4.3287e-02, -2.0711e-01, -2.8840e-01,
          6.9451e-02,  3.4117e-01,  3.2437e-01,  8.6866e-02,  6.1156e-01,
          3.9050e-02, -6.6287e-01,  9.5300e-02,  1.0152e-01, -1.2750e-01,
          7.4853e-01, -3.0723e-01,  2.2818e-01, -9.0248e-02,  1.9037e-01,
          5.1726e-01, -3.3176e-01,  3.6412e-01, -4.0236e-01,  1.2521e-01,
          1.1165e-01,  4.6582e-02,  7.6779e-02, -2.1129e-01, -2.3261e-03,
          8.8055e-02, -9.6093e-02, -1.1340e-01, -1.8119e-01, -1.5203e-01,
         -1.0046e-01,  1.5741e-01, -3.7423e-02, -3.9776e-02,  1.5580e-01,
         -7.5204e-02,  9.4011e-02, -6.3791e-03, -5.4240e-02,  1.7957e-02,
          6.1519e-02, -1.8092e-02,  5.8945e-02,  2.7535e-01, -2.9967e-01,
         -1.1785e-01, -5.4632e-02,  1.3583e-01, -9.1526e-02,  2.9516e-02,
          1.6724e-01,  4.3327e-02, -6.9699e-02, -4.0792e-01, -5.9762e-02,
         -1.0738e-01,  3.0236e-02,  2.8026e-02,  1.9811e-01,  1.5367e-01,
          6.9571e-02, -1.2368e-01,  9.3373e-02,  6.6341e-02,  2.3175e-01,
          2.7554e-01,  1.9591e-01, -4.5058e-01,  1.0703e-01, -1.8228e-01,
         -7.7730e-03]], device='cuda:0') tensor(0.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
305000 特征值优化 tensor(1.4006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0724, -0.2621, -0.2252, -0.9811,  2.0351,  1.0304,  2.4472,  1.4945,
          2.6833, -0.3888, -0.1197,  0.3607,  0.5300, -0.2485,  0.2914,  0.3100,
         -0.5150, -0.2602, -0.1160, -1.2361, -0.4153, -0.4025,  0.2999, -1.4095,
         -1.1076, -0.3578, -0.0992, -0.4004, -0.6130,  0.1561, -0.2669,  0.2357,
          0.0405, -0.0354,  0.0698,  0.1485, -0.1802, -0.0403,  0.0758, -0.1880,
          0.0261, -0.6832,  0.7339, -0.0278,  0.3440, -0.2107,  0.0355, -0.0771,
          0.2248, -0.1956,  0.0405, -0.0168, -0.2358,  0.1099, -0.2156,  0.2650,
         -0.3485, -0.2857,  0.2806, -0.1409, -0.3029, -0.0950,  0.1212, -0.0253,
          0.1046, -0.1504,  0.0606, -0.1156, -0.0392,  0.1179,  0.0415, -0.1194,
          0.1863, -0.1911,  0.1548, -0.4005,  0.0476, -0.5079,  0.3193, -0.1061,
          0.1120, -0.0152,  0.0958,  0.0705, -0.1194, -0.0665, -0.3020, -0.0529,
         -0.2220, -0.2895,  0.0668,  0.3398,  0.3230,  0.0832,  0.6048,  0.0436,
         -0.6559,  0.1175,  0.0869, -0.1041,  0.7583, -0.2948,  0.2252, -0.0834,
          0.1906,  0.5266, -0.3329,  0.3587, -0.3840,  0.1237,  0.1106,  0.0454,
          0.0889, -0.2150, -0.0180,  0.0700, -0.1055, -0.1303, -0.1825, -0.1398,
         -0.1159,  0.1610, -0.0320, -0.0368,  0.1535, -0.0679,  0.0934, -0.0195,
         -0.0480,  0.0083,  0.0714, -0.0121,  0.0562,  0.2714, -0.3039, -0.1255,
         -0.0466,  0.1515, -0.0871,  0.0225,  0.1725,  0.0221, -0.1018, -0.3774,
         -0.0619, -0.1017,  0.0129,  0.0232,  0.1920,  0.1490,  0.0645, -0.1202,
          0.0712,  0.0641,  0.2306,  0.2641,  0.1868, -0.4552,  0.1158, -0.1836,
         -0.0241]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
306000 特征值优化 tensor(28.3687, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.1110e-01, -3.4796e-01, -4.4771e-01, -1.0199e+00, -4.8142e-01,
         -7.8935e-01, -2.9929e-01, -4.4666e-01,  1.8127e+00, -5.6614e-02,
          1.4352e+00, -5.4176e-01,  2.2549e-02,  4.7576e-01, -4.1872e-01,
          9.5011e-02,  8.9379e-01, -3.2390e-01, -1.7844e+00,  1.8086e+00,
          1.6006e+00,  1.2315e+00,  3.3367e-02, -1.0327e+00,  2.0092e-03,
         -9.3518e-01, -6.0876e-01, -1.1075e-01, -9.1022e-01,  1.2269e+00,
          8.2768e-01, -4.3436e-03, -9.3795e-01,  2.4612e-01, -1.6807e-01,
          3.2998e-01,  5.9473e-01, -1.2658e+00,  2.4342e-01,  9.7789e-01,
          3.8177e-01, -6.4802e-01, -3.1790e-01, -4.1016e-01,  8.0963e-01,
          2.0855e+00, -6.0754e-01, -1.1286e+00, -5.1127e-01,  1.6420e-01,
          1.1747e-01, -7.8756e-01, -2.9053e-01,  3.5840e-01, -3.8618e-01,
          9.1372e-01,  1.1506e-01,  3.8989e-01, -5.0714e-01, -9.4164e-02,
         -4.2939e-01, -1.4665e-01, -7.4725e-01,  5.4432e-01, -5.7313e-01,
          1.7216e-01,  4.7490e-01, -4.0399e-01, -9.0364e-01, -3.7324e-01,
         -4.7700e-02, -9.0718e-02,  1.3513e+00,  6.0014e-02, -4.2427e-01,
          7.3092e-01,  1.5550e-01, -1.4810e-01, -4.2066e-01, -2.0941e-01,
         -1.2365e+00,  3.4172e-01, -1.7983e+00, -1.8065e+00,  1.7006e-01,
          3.2438e-01, -3.6896e-01,  5.5590e-01, -5.6085e-01,  3.5628e-01,
          8.8865e-01,  1.1701e+00,  3.0441e-01, -8.1742e-02,  3.7770e-01,
          4.3269e-01, -1.8329e+00, -1.0085e+00, -1.6351e-01,  4.1865e-02,
          1.1701e+00,  2.4178e-01, -4.0060e-01,  4.8231e-01,  5.5685e-01,
          7.3759e-01,  8.6309e-01, -3.8751e-01, -1.9478e-01,  7.1137e-02,
          2.9290e-01, -4.2625e-01, -1.9407e+00,  6.7451e-01,  1.4628e-01,
          9.8842e-03, -1.5500e+00,  2.0129e-01, -3.9118e-01,  4.7211e-01,
         -2.9531e-01, -2.1088e-05, -1.0876e+00, -4.7223e-01,  9.9315e-01,
         -7.7766e-01, -6.4688e-01, -1.0203e-01,  3.8803e-01,  1.9133e-01,
          8.1829e-01,  2.0758e+00,  9.1209e-01, -1.0125e+00, -9.6369e-01,
         -2.2758e-01,  6.9864e-01,  8.8746e-01, -2.7851e-01, -5.7497e-02,
         -4.1392e-01,  5.2786e-01,  1.0563e-01,  1.9292e-01, -2.7203e-01,
          4.7742e-01,  1.2062e+00, -2.0581e-01, -1.2474e-02, -9.1501e-02,
          1.1007e-01, -2.7547e-01,  2.3629e-02,  1.0728e-01,  5.3710e-01,
          1.0023e+00, -7.4591e-01,  3.8722e-01, -1.0437e+00,  1.3908e-01,
         -1.8798e-01]], device='cuda:0') tensor(0.3074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
307000 正交保障 tensor(0.2819, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.9276e-01,  4.7117e-01,  3.2134e-01, -1.0736e+00,  7.7642e-01,
          3.1897e-01, -3.9296e-01, -1.0337e-01,  2.2599e+00, -2.0171e-02,
          7.3294e-01, -1.1740e-02,  6.1387e-01, -1.5451e-01,  5.2275e-02,
         -1.3333e-01, -1.2108e-01,  1.9331e-03, -6.0618e-01,  1.0737e+00,
          4.4052e-01,  2.5238e-01,  2.9019e-01, -1.3355e+00, -4.0910e-01,
          1.7841e-02, -3.0053e-01,  1.7389e-01, -5.5550e-02,  5.5561e-01,
          1.9692e-02, -1.0549e-01, -9.3673e-02,  9.0182e-02, -5.5713e-02,
         -8.9281e-02, -8.4295e-02, -3.0481e-01, -7.1906e-02,  1.6656e-01,
          2.5584e-02, -4.9191e-01,  2.4012e-01,  1.2031e-03,  2.6612e-01,
          9.2929e-01, -7.0159e-02, -3.9357e-01, -5.5245e-02,  2.4625e-01,
         -1.2574e-02, -2.3433e-01, -1.3687e-02,  3.5639e-02, -5.6365e-02,
          5.1399e-01,  2.6671e-01, -1.4739e-01, -5.6561e-02, -5.1385e-02,
         -4.4636e-01, -4.0386e-03, -1.6563e-01,  3.9555e-02,  1.3342e-01,
         -9.3976e-02,  9.5539e-02, -1.1442e-01, -6.4375e-02, -1.1875e-01,
         -2.0111e-02, -1.8705e-01,  6.3782e-01, -1.1879e-01,  7.7988e-02,
          1.4068e-01,  2.9640e-01, -1.1834e-01, -7.6414e-02, -6.0346e-02,
         -3.4990e-01,  7.0422e-02, -6.9297e-01, -7.3178e-01,  2.7238e-02,
          1.9853e-01,  1.0550e-02,  5.2144e-02,  7.8040e-02,  9.7554e-03,
          4.4984e-02,  6.0518e-01, -2.2341e-01, -1.4478e-01,  1.0256e+00,
         -1.9586e-01, -7.6350e-01, -8.0872e-01,  8.9179e-02, -6.9582e-01,
          2.9378e-01, -8.3510e-02, -4.9056e-01,  1.2081e-01,  2.3215e-02,
          4.5993e-01,  2.6440e-01,  2.5812e-02,  3.6131e-01, -8.5957e-03,
         -1.8452e-01,  4.6700e-04, -9.7214e-01,  5.9701e-02, -1.2106e-01,
         -1.9458e-02, -5.5035e-01,  6.8122e-02, -3.1601e-02,  4.5389e-02,
          1.4951e-01,  9.9848e-03, -2.3347e-01, -9.5482e-02,  2.7892e-01,
         -2.4581e-01, -1.4888e-01,  5.7237e-02,  2.2618e-01, -7.6277e-02,
          9.1985e-02,  1.1255e+00,  2.8585e-01, -1.3828e-01, -2.5019e-01,
         -6.7657e-02,  2.2364e-01,  2.3083e-02, -7.9357e-02,  9.9305e-02,
         -1.6482e-01,  3.3087e-02, -1.4996e-01, -1.5234e-01, -4.1733e-03,
         -3.2226e-02,  2.9699e-01, -3.9645e-02, -1.9057e-01, -4.4201e-02,
         -1.1902e-01, -5.2598e-02, -1.6473e-01, -6.6526e-02,  1.6413e-01,
          1.5360e-01, -1.5455e-01, -9.4599e-02, -2.6570e-01, -9.6098e-02,
         -1.7882e-01]], device='cuda:0') tensor(0.2819, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
308000 特征值优化 tensor(2.0036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.1055e-01,  5.2161e-01,  5.3801e-02, -9.8171e-01,  1.0493e+00,
          5.1286e-02, -8.4777e-01, -3.8762e-01,  2.9269e+00,  1.5194e-01,
          6.0597e-01, -1.8833e-01,  3.4146e-01, -2.5824e-01, -1.9175e-01,
         -7.8124e-01, -3.1859e-01, -9.1920e-02, -5.8299e-01,  4.8619e-01,
          1.6217e-01,  2.3968e-02,  4.3198e-01, -9.1162e-01, -4.4311e-01,
         -2.1936e-01, -4.8798e-01,  2.8661e-01,  2.5560e-01,  3.5433e-01,
         -9.7594e-02, -7.3772e-02,  1.7157e-01,  1.4175e-01, -8.1232e-02,
         -3.7259e-01, -3.9558e-02, -5.6594e-02,  8.8455e-02,  2.3247e-01,
         -6.4367e-02, -5.9701e-01,  4.8362e-01,  2.6652e-02,  1.9458e-01,
          4.8514e-01, -5.4964e-02, -3.7207e-01,  1.3270e-01,  2.8897e-01,
          1.7235e-02, -4.9813e-02,  7.9072e-02,  5.8443e-02, -2.1102e-01,
          5.0652e-01,  3.7943e-01,  5.1043e-03,  1.3008e-01,  3.2800e-01,
         -5.6437e-01,  2.4451e-02, -8.6000e-02,  2.8010e-02,  2.9716e-02,
         -1.9655e-01, -7.2506e-02, -2.2021e-02,  4.2385e-02, -4.2074e-02,
         -3.8782e-02, -1.6175e-01,  6.4957e-01, -1.5883e-01,  1.4325e-01,
          1.7805e-01,  2.9307e-01, -4.1203e-01, -5.0416e-02, -1.1068e-01,
         -1.6954e-01, -6.0779e-02, -5.0963e-01, -4.2301e-01,  5.2572e-02,
          1.7492e-01,  2.3100e-01, -1.8278e-02,  6.9733e-01,  1.7100e-01,
          1.0253e-01,  2.6946e-01, -6.0976e-01, -2.0993e-01,  1.1337e+00,
         -2.1043e-01, -6.0915e-01, -2.6685e-01, -5.4220e-02, -1.2974e-01,
         -2.8142e-02,  1.4380e-02, -5.6969e-01,  1.2035e-01,  7.2280e-02,
         -9.4335e-03, -1.2261e-01, -6.6179e-02,  7.2260e-01, -7.3914e-03,
         -1.8348e-01, -8.0845e-03, -5.2894e-01, -7.4114e-02,  4.4367e-02,
         -2.0171e-02, -2.3175e-01,  1.4449e-01,  4.2057e-02,  8.7301e-02,
          1.2877e-01, -9.6982e-02, -1.3424e-01, -1.5761e-01,  2.6256e-01,
         -4.3157e-02,  4.6718e-02,  1.2911e-01,  1.4053e-01,  1.7369e-01,
          1.2566e-02,  6.1329e-01,  8.5146e-02,  3.6553e-02, -4.3241e-01,
          8.4156e-03,  1.5226e-01, -9.8793e-02, -6.1213e-02,  1.7175e-01,
          6.5671e-02,  1.2590e-03, -3.3992e-01, -1.4067e-01,  2.2069e-01,
         -1.6287e-01,  4.8619e-02, -8.5911e-02, -1.6521e-01,  7.3311e-02,
          1.1151e-01, -2.5303e-02, -1.8033e-01, -1.2538e-02,  1.5401e-01,
         -6.5663e-02, -1.8371e-02,  1.1773e-01, -2.8536e-01,  8.6204e-02,
         -7.0257e-02]], device='cuda:0') tensor(0.2349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
309000 特征值优化 tensor(1.7300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6570e-01,  3.3067e-01,  2.5003e-01, -1.2140e+00,  9.7323e-01,
          1.0026e-01, -1.1137e+00, -3.4351e-01,  2.9990e+00,  4.4406e-01,
          5.0265e-01, -2.9830e-01,  1.8839e-01, -2.3065e-01, -3.7646e-01,
         -7.7676e-01, -2.6625e-01, -6.9805e-02, -7.3040e-01,  4.2344e-01,
          2.2285e-01,  1.1547e-01,  7.1452e-01, -9.6000e-01, -5.6620e-01,
         -2.9869e-01, -5.9996e-01,  4.5160e-01,  5.0916e-01,  3.0321e-01,
         -1.5883e-02, -2.6271e-01,  1.3725e-01,  2.9895e-01,  1.8235e-02,
         -4.6189e-01, -4.4831e-03, -1.5552e-01,  1.7566e-01,  2.3185e-01,
         -2.0787e-01, -6.5976e-01,  5.2786e-01,  7.1893e-02,  2.3856e-01,
          3.2942e-01, -1.9029e-01, -3.8727e-01,  2.0814e-01,  2.7634e-01,
         -1.9345e-02, -7.0171e-02,  9.8919e-02,  6.0803e-03, -1.9459e-01,
          4.3335e-01,  4.1309e-02, -1.5342e-01,  6.3431e-02,  4.8431e-01,
         -6.0157e-01, -2.2104e-02, -9.2949e-02,  1.0154e-01,  1.3621e-02,
         -2.6378e-01, -6.9758e-02, -1.0459e-02,  3.2824e-02,  5.4781e-02,
         -6.5951e-02, -1.2635e-01,  6.1257e-01, -9.2103e-02,  1.4300e-01,
         -4.5556e-02,  2.5417e-01, -4.9591e-01,  3.9540e-02, -7.0910e-02,
         -1.2958e-01, -5.9181e-02, -3.9758e-01, -2.9568e-01,  7.1870e-02,
          2.2723e-01,  3.5750e-01, -7.7298e-02,  5.8958e-01,  3.7231e-01,
          1.1415e-01,  2.1139e-01, -6.1236e-01, -6.6658e-03,  1.0688e+00,
         -1.7151e-01, -5.6086e-01, -1.0061e-01,  1.9952e-01, -2.7873e-01,
         -1.9275e-01, -3.9966e-02, -4.8466e-01,  3.7486e-02,  1.0235e-01,
         -2.6856e-01, -1.5830e-01, -1.4803e-01,  8.0117e-01, -8.9845e-02,
         -1.9764e-01,  5.0276e-03, -3.0702e-01, -1.4352e-01,  1.9710e-02,
          3.8675e-02, -1.3957e-01,  1.5413e-01,  1.1282e-02,  1.9724e-02,
          1.4491e-01, -1.8501e-01, -8.4268e-02, -1.6088e-01,  2.4053e-01,
          3.2663e-02,  8.6730e-02,  5.6981e-02,  1.4163e-01,  9.8497e-02,
          9.4177e-03,  3.8227e-01,  7.0255e-03,  1.4461e-01, -5.1602e-01,
          2.7182e-02,  9.8113e-02, -1.1642e-02, -9.3778e-02,  1.1138e-02,
          1.4895e-01,  1.9243e-02, -3.3548e-01, -1.6935e-01,  1.5726e-01,
         -1.4419e-01,  1.8281e-03, -3.2458e-02, -1.0320e-01,  1.2174e-01,
          3.5429e-02, -1.3150e-02, -1.5838e-01,  4.0307e-02,  2.2225e-02,
         -1.2423e-01, -2.1738e-01,  1.0227e-01, -3.0055e-01,  1.2181e-01,
         -8.6069e-02]], device='cuda:0') tensor(0.2876, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
310000 特征值优化 tensor(1.5663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7291e-01,  2.1026e-01,  3.6167e-01, -1.2457e+00,  8.3689e-01,
          3.6525e-02, -1.1813e+00, -2.4884e-01,  2.9516e+00,  4.8293e-01,
          3.6914e-01, -4.7871e-01, -6.8252e-02, -1.8244e-01, -2.7543e-01,
         -6.0599e-01, -2.4777e-01, -1.5212e-01, -7.6085e-01,  4.2094e-01,
          4.0732e-01,  1.5167e-01,  7.7459e-01, -9.6404e-01, -5.6441e-01,
         -3.7918e-01, -6.1775e-01,  5.0264e-01,  4.4518e-01,  3.6895e-01,
          1.0365e-01, -3.4815e-01,  8.3696e-02,  2.5743e-01,  2.9970e-02,
         -3.6680e-01, -3.6840e-03, -7.1217e-02,  1.0262e-01,  2.1227e-01,
         -2.3597e-01, -6.6414e-01,  5.4750e-01,  8.3246e-02,  1.9830e-01,
          2.8214e-01, -1.7968e-01, -3.2761e-01,  2.4341e-01,  1.7996e-01,
         -8.1144e-02, -1.0402e-02,  1.3817e-01,  1.8078e-02, -2.2526e-01,
          4.7216e-01, -6.4266e-02, -1.9073e-01,  8.3301e-02,  4.7689e-01,
         -6.8198e-01, -2.2619e-02, -3.5257e-02, -5.6901e-03, -6.4949e-02,
         -2.3681e-01, -1.1526e-01,  5.3063e-02,  1.1331e-01,  6.5040e-02,
         -7.1609e-02, -1.2742e-01,  5.9653e-01, -5.7265e-02,  1.6392e-01,
         -1.1822e-01,  2.3971e-01, -5.6823e-01, -8.3604e-02, -6.9267e-02,
         -1.6675e-01, -6.0937e-02, -3.4715e-01, -2.3907e-01,  1.6047e-01,
          1.8341e-01,  3.5687e-01, -1.1411e-01,  2.6406e-01,  3.2936e-01,
          9.5258e-02,  2.4912e-01, -5.4241e-01,  3.0598e-02,  9.6060e-01,
         -1.5654e-01, -5.8223e-01, -2.7926e-02,  2.5248e-01, -4.1925e-01,
         -1.4652e-01, -5.4824e-02, -3.6276e-01,  5.6076e-02,  9.7038e-02,
         -4.0230e-01, -1.8518e-01, -1.6853e-01,  8.3522e-01, -1.7530e-01,
         -1.1045e-01,  5.3896e-02, -2.1267e-01, -9.5825e-02,  3.3986e-02,
         -4.9150e-02, -4.8752e-02,  1.7596e-01,  5.4569e-02, -1.9860e-02,
          8.9485e-02, -1.9896e-01, -1.6102e-01, -1.3181e-02,  1.9672e-01,
          5.1891e-02,  8.7734e-02, -5.7595e-03,  1.5403e-01,  2.5407e-02,
          2.0889e-02,  2.9389e-01, -7.7474e-03,  2.5214e-01, -5.0957e-01,
          1.4140e-02,  2.0847e-02,  8.6609e-02, -1.0105e-01, -7.4020e-02,
          1.3903e-01, -8.1649e-03, -3.4500e-01, -1.6653e-01,  6.4786e-02,
         -1.0102e-01, -9.9973e-02, -9.7272e-04, -7.2475e-02,  4.1652e-02,
          3.5991e-02, -4.3572e-02, -1.4081e-01,  4.4035e-02,  2.7511e-02,
         -1.1377e-01, -3.0220e-01,  8.0581e-02, -3.1572e-01,  6.1739e-02,
         -1.4892e-01]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
311000 特征值优化 tensor(1.5174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.4035e-01,  1.8620e-01,  5.0361e-01, -1.3010e+00,  1.1406e+00,
         -2.3377e-02, -1.1078e+00, -1.9040e-01,  2.8085e+00,  4.6555e-01,
          2.6100e-01, -7.5856e-01, -1.6831e-01, -2.1372e-01, -2.7391e-01,
         -5.0798e-01, -2.1686e-01, -2.5083e-01, -7.7187e-01,  3.7329e-01,
          4.9077e-01,  1.0738e-01,  7.8828e-01, -9.5876e-01, -5.3583e-01,
         -4.4522e-01, -6.3156e-01,  5.0429e-01,  4.6367e-01,  3.4573e-01,
          1.7029e-01, -3.4403e-01,  3.9784e-02,  1.8160e-01,  4.9011e-02,
         -3.5356e-01, -4.9401e-02, -4.4556e-02,  6.3438e-02,  2.1829e-01,
         -2.1328e-01, -6.6873e-01,  5.4693e-01,  1.1815e-02,  2.5493e-01,
          2.1032e-01, -1.4782e-01, -3.4843e-01,  1.9456e-01,  1.1957e-01,
         -9.5963e-02,  1.2446e-01,  1.2799e-01,  8.8783e-03, -2.5438e-01,
          4.4815e-01, -1.3339e-01, -2.1672e-01,  7.2982e-02,  4.8538e-01,
         -7.1655e-01, -2.2710e-02,  3.2497e-02, -1.2779e-01, -8.3556e-02,
         -1.8876e-01, -1.5144e-01,  6.2998e-02,  1.4561e-01,  4.9842e-02,
         -5.4858e-02, -1.5000e-01,  5.9193e-01,  6.6323e-03,  1.5020e-01,
         -1.5856e-01,  2.3733e-01, -5.6738e-01, -2.1552e-01, -5.6792e-02,
         -1.8920e-01, -8.5222e-02, -3.3183e-01, -2.3295e-01,  1.2061e-01,
          2.0235e-01,  3.2152e-01, -1.9808e-01, -3.8951e-02,  2.4775e-01,
          1.2241e-01,  2.6848e-01, -4.9014e-01,  3.5213e-02,  8.6992e-01,
         -1.4992e-01, -5.7253e-01,  9.3235e-02,  3.1715e-01, -6.2813e-01,
         -1.0432e-01, -7.5469e-02, -2.7317e-01,  1.1638e-01,  8.3566e-02,
         -5.0827e-01, -1.4729e-01, -1.7554e-01,  8.3939e-01, -2.0343e-01,
         -2.7744e-02,  6.0232e-02, -1.4323e-01, -5.6690e-02,  3.5951e-02,
         -6.5638e-02, -5.9127e-03,  1.3309e-01,  7.5530e-02,  1.5881e-02,
          1.0556e-01, -1.6624e-01, -1.9686e-01,  8.4828e-02,  1.3861e-01,
          4.7046e-02,  1.2670e-01, -9.9815e-03,  1.5792e-01,  2.5299e-02,
          4.0821e-02,  2.4483e-01,  3.2774e-03,  2.5625e-01, -4.7424e-01,
         -5.4421e-03,  2.4651e-02,  1.1440e-01, -1.1077e-01, -4.9140e-02,
          1.5228e-01, -3.4029e-02, -3.4682e-01, -1.2706e-01, -4.5563e-02,
         -7.0049e-02, -1.2994e-01, -5.6791e-04, -4.0433e-02,  4.4548e-02,
          3.1594e-02, -3.0031e-02, -1.4755e-01,  4.0496e-02, -1.1537e-02,
         -1.2189e-01, -3.2020e-01,  5.2551e-02, -3.0421e-01,  3.7849e-02,
         -1.8857e-01]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
312000 特征值优化 tensor(1.5215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.3220e-01,  1.5551e-01,  4.8262e-01, -1.2613e+00,  1.4615e+00,
         -7.4749e-02, -9.8776e-01, -1.9680e-01,  2.7443e+00,  5.2096e-01,
          1.9611e-01, -8.4191e-01, -2.4636e-01, -1.9689e-01, -2.6608e-01,
         -4.3015e-01, -1.8992e-01, -2.2543e-01, -8.0352e-01,  3.6625e-01,
          5.1333e-01,  8.4568e-02,  7.6421e-01, -9.9307e-01, -5.2094e-01,
         -5.0844e-01, -6.4169e-01,  4.4939e-01,  4.7601e-01,  3.2006e-01,
          1.6320e-01, -3.1451e-01, -2.0785e-02,  2.1696e-01,  7.6570e-02,
         -3.6995e-01, -9.3842e-02, -6.8168e-02,  4.3203e-02,  2.2189e-01,
         -1.8792e-01, -6.6409e-01,  5.4645e-01,  2.7762e-02,  2.9842e-01,
          1.5369e-01, -1.4214e-01, -3.3116e-01,  1.2977e-01,  1.0116e-01,
         -1.0004e-01,  2.4661e-01,  1.1595e-01,  1.6079e-02, -2.5407e-01,
          3.8972e-01, -1.2467e-01, -2.0145e-01,  5.5374e-02,  5.0137e-01,
         -7.0871e-01, -2.0468e-02,  4.3958e-02, -1.6319e-01, -9.1251e-02,
         -1.8859e-01, -1.5200e-01,  8.0955e-02,  1.6266e-01,  2.9703e-02,
         -5.2882e-02, -1.4929e-01,  5.8927e-01,  1.1510e-03,  1.4165e-01,
         -1.8766e-01,  2.4371e-01, -5.2929e-01, -3.3612e-01, -6.3062e-02,
         -1.7242e-01, -9.3345e-02, -3.5281e-01, -2.0731e-01,  1.1511e-01,
          1.8180e-01,  3.3430e-01, -2.5485e-01, -1.2674e-01,  2.3046e-01,
          1.4421e-01,  2.8245e-01, -4.9591e-01,  4.2901e-02,  8.6018e-01,
         -1.3943e-01, -6.0564e-01,  1.5865e-01,  3.6163e-01, -6.8659e-01,
         -1.4548e-01, -8.2159e-02, -2.1278e-01,  1.8503e-01,  7.6485e-02,
         -5.5474e-01, -1.6045e-01, -1.7202e-01,  8.2068e-01, -2.2260e-01,
         -3.8548e-03,  6.0179e-02, -8.9279e-02, -5.7023e-02,  2.8844e-02,
         -7.7042e-02,  1.4542e-02,  1.4578e-01,  6.4379e-02,  4.4946e-02,
          1.2138e-01, -1.4668e-01, -2.0766e-01,  1.0031e-01,  9.9435e-02,
          4.0829e-02,  1.3699e-01,  1.8770e-02,  1.4419e-01,  1.1460e-02,
          5.6537e-02,  2.3793e-01,  1.1639e-02,  2.1642e-01, -4.7179e-01,
         -8.0096e-03,  9.6320e-03,  1.1731e-01, -1.1225e-01, -9.4592e-03,
          1.4817e-01, -4.4237e-02, -3.3109e-01, -1.0610e-01, -8.6665e-02,
         -9.3317e-02, -7.2927e-02,  4.6052e-03, -1.1264e-02,  4.0427e-02,
          1.2702e-02, -1.4933e-02, -1.6951e-01,  6.4750e-02, -5.8995e-02,
         -1.6658e-01, -3.0621e-01,  3.9248e-02, -2.7050e-01,  3.3138e-02,
         -1.9568e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
313000 特征值优化 tensor(1.5412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.0137e-01,  1.3301e-01,  5.5027e-01, -1.2937e+00,  1.7105e+00,
         -1.8901e-01, -8.9421e-01, -1.6298e-01,  2.7095e+00,  5.0140e-01,
          1.1850e-01, -8.9603e-01, -2.8537e-01, -1.7994e-01, -2.8642e-01,
         -3.2684e-01, -1.7593e-01, -2.1771e-01, -8.1372e-01,  3.7174e-01,
          5.3074e-01,  3.7328e-02,  6.8924e-01, -1.0326e+00, -5.1942e-01,
         -5.3287e-01, -6.1213e-01,  3.9605e-01,  4.6360e-01,  2.7643e-01,
          1.8063e-01, -3.2712e-01, -5.4273e-02,  2.1943e-01,  9.6591e-02,
         -3.4500e-01, -1.3254e-01, -1.0075e-01,  4.9031e-02,  2.1044e-01,
         -1.6115e-01, -6.5671e-01,  5.6235e-01,  1.9816e-02,  3.3943e-01,
          9.9152e-02, -7.7656e-02, -2.7883e-01,  1.0356e-03,  1.8382e-02,
         -1.6151e-01,  3.3840e-01,  1.2156e-01,  3.7434e-02, -2.6842e-01,
          3.7597e-01, -9.6000e-02, -1.9552e-01,  7.5684e-02,  5.2509e-01,
         -7.2256e-01, -1.3756e-02,  4.0332e-02, -1.5463e-01, -7.5857e-02,
         -1.8060e-01, -1.7911e-01,  7.0773e-02,  1.8333e-01,  1.2333e-02,
         -5.3768e-02, -1.4552e-01,  5.5845e-01,  8.8222e-04,  1.1970e-01,
         -2.2550e-01,  2.5994e-01, -4.8005e-01, -4.3828e-01, -6.3614e-02,
         -1.7261e-01, -1.0980e-01, -3.7930e-01, -2.1612e-01,  1.1219e-01,
          1.7027e-01,  3.3378e-01, -3.0307e-01, -2.4425e-01,  2.1244e-01,
          1.7973e-01,  2.6138e-01, -5.3149e-01,  6.2390e-02,  7.3612e-01,
         -1.0151e-01, -6.3175e-01,  2.1936e-01,  3.5966e-01, -7.9137e-01,
         -1.4986e-01, -5.8528e-02, -1.7167e-01,  2.1367e-01,  8.6941e-02,
         -5.9917e-01, -1.7468e-01, -2.0150e-01,  8.5190e-01, -2.0259e-01,
          4.2948e-02,  6.8522e-02, -3.4162e-02, -2.7920e-02,  4.3013e-03,
         -9.7616e-02,  3.3378e-02,  1.3682e-01,  8.7347e-02,  5.8798e-02,
          1.9859e-01, -1.4576e-01, -1.9850e-01,  1.0078e-01,  6.0512e-02,
          2.7785e-02,  1.8308e-01,  6.0543e-02,  1.5537e-01,  1.4070e-03,
          5.2285e-02,  2.2754e-01,  8.7642e-04,  1.4855e-01, -4.6640e-01,
         -3.2613e-02, -1.2599e-02,  1.0542e-01, -1.3436e-01,  1.2523e-02,
          1.3636e-01, -3.2157e-02, -3.0030e-01, -6.6548e-02, -1.0436e-01,
         -9.6373e-02, -1.9099e-02,  9.1953e-03, -4.1621e-02,  7.5585e-02,
          9.1161e-04,  2.2681e-02, -2.1418e-01,  8.3244e-02, -7.1999e-02,
         -2.2341e-01, -2.7178e-01,  7.9698e-03, -2.8170e-01, -3.9932e-03,
         -1.8918e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
314000 特征值优化 tensor(1.4348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6600,  0.0924,  0.6005, -1.2892,  1.8781, -0.2735, -0.8491, -0.1949,
          2.7556,  0.5028,  0.0637, -0.8434, -0.3016, -0.1649, -0.3235, -0.2722,
         -0.1569, -0.2363, -0.7471,  0.4035,  0.5128,  0.0319,  0.6120, -1.0721,
         -0.4867, -0.5394, -0.6355,  0.3504,  0.4784,  0.2460,  0.1981, -0.3051,
         -0.0747,  0.2336,  0.1277, -0.3219, -0.1488, -0.1413,  0.0655,  0.2035,
         -0.1285, -0.6553,  0.5522,  0.0348,  0.3718,  0.0423, -0.0876, -0.2367,
         -0.0875, -0.0175, -0.2046,  0.4098,  0.1125,  0.0324, -0.2463,  0.3679,
         -0.1039, -0.2157,  0.0637,  0.5433, -0.7249, -0.0036,  0.0517, -0.1792,
         -0.0817, -0.1858, -0.1613,  0.0963,  0.1769,  0.0285, -0.0685, -0.1908,
          0.5400,  0.0220,  0.1173, -0.2319,  0.2544, -0.4293, -0.5016, -0.0522,
         -0.1902, -0.1496, -0.3698, -0.2229,  0.0982,  0.1601,  0.3201, -0.3135,
         -0.2708,  0.1948,  0.1890,  0.2381, -0.5507,  0.0270,  0.7421, -0.1063,
         -0.6529,  0.2620,  0.3718, -0.8170, -0.1598, -0.0709, -0.1149,  0.2329,
          0.0761, -0.6105, -0.1886, -0.1771,  0.8324, -0.1877,  0.0659,  0.0716,
         -0.0284, -0.0364, -0.0127, -0.0899,  0.0406,  0.1311,  0.1144,  0.0870,
          0.1733, -0.1155, -0.2132,  0.0704,  0.0698,  0.0197,  0.1740,  0.0524,
          0.1953,  0.0275,  0.0425,  0.1976, -0.0054,  0.1186, -0.4811, -0.0431,
         -0.0065,  0.1094, -0.1231,  0.0385,  0.1514, -0.0260, -0.2660, -0.0424,
         -0.0847, -0.1055, -0.0235,  0.0126, -0.0179,  0.0883, -0.0255,  0.0458,
         -0.2327,  0.0796, -0.0647, -0.2166, -0.2558, -0.0393, -0.2707, -0.0379,
         -0.1670]], device='cuda:0') tensor(0.2423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
315000 特征值优化 tensor(1.4920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.7433e-01,  2.1715e-02,  6.2059e-01, -1.2811e+00,  1.9591e+00,
         -3.1687e-01, -8.2557e-01, -2.1259e-01,  2.7968e+00,  5.1827e-01,
          3.5037e-02, -8.3857e-01, -3.2614e-01, -1.5895e-01, -2.8647e-01,
         -2.4124e-01, -1.5078e-01, -2.4408e-01, -7.3642e-01,  3.9955e-01,
          5.0522e-01,  2.9521e-03,  5.7593e-01, -1.0401e+00, -4.7549e-01,
         -5.6507e-01, -6.2265e-01,  3.4471e-01,  4.7498e-01,  2.3941e-01,
          2.0330e-01, -2.9122e-01, -9.9944e-02,  2.2836e-01,  1.3681e-01,
         -3.2255e-01, -1.6383e-01, -1.5592e-01,  7.3251e-02,  1.8584e-01,
         -1.0590e-01, -6.5776e-01,  5.6082e-01,  3.2528e-02,  3.8682e-01,
          2.0227e-02, -9.1887e-02, -2.0989e-01, -1.3435e-01, -2.9535e-02,
         -1.9318e-01,  4.2021e-01,  1.1049e-01,  3.3321e-02, -2.5872e-01,
          3.7023e-01, -1.1273e-01, -2.2115e-01,  7.6999e-02,  5.2565e-01,
         -7.2521e-01,  9.7177e-04,  5.5873e-02, -1.6244e-01, -6.9059e-02,
         -1.7428e-01, -1.8927e-01,  7.9253e-02,  1.8966e-01,  2.9985e-02,
         -6.3703e-02, -2.0985e-01,  5.2254e-01,  1.9196e-02,  1.0264e-01,
         -2.4955e-01,  2.5191e-01, -3.9306e-01, -5.3646e-01, -6.5117e-02,
         -1.7653e-01, -1.4992e-01, -3.7423e-01, -2.4003e-01,  1.1164e-01,
          1.4121e-01,  3.1519e-01, -3.0409e-01, -2.6437e-01,  2.0380e-01,
          1.9596e-01,  2.2082e-01, -5.5833e-01,  1.4755e-02,  7.4029e-01,
         -1.1636e-01, -6.5695e-01,  2.8267e-01,  4.0072e-01, -8.2877e-01,
         -1.8046e-01, -6.5800e-02, -1.3042e-01,  2.5417e-01,  7.7488e-02,
         -6.4649e-01, -1.8235e-01, -1.9294e-01,  8.9030e-01, -1.7703e-01,
          8.1896e-02,  7.2722e-02, -2.4240e-02, -2.9831e-02, -1.4629e-02,
         -9.1930e-02,  3.7988e-02,  1.3713e-01,  7.5767e-02,  1.0579e-01,
          1.6493e-01, -1.1474e-01, -2.1171e-01,  7.5266e-02,  6.2423e-02,
          1.1484e-02,  1.7185e-01,  5.6791e-02,  1.8269e-01,  4.2678e-02,
          4.5274e-02,  2.0305e-01, -1.9486e-02,  6.3013e-02, -4.9187e-01,
         -5.6099e-02,  2.9215e-04,  1.0380e-01, -1.3000e-01,  5.8554e-02,
          1.4587e-01, -2.4842e-02, -2.4837e-01, -3.2556e-02, -8.7005e-02,
         -1.1769e-01,  9.2224e-03,  2.6101e-02, -3.6416e-02,  7.2156e-02,
         -2.0540e-02,  3.1986e-02, -2.1838e-01,  1.1830e-01, -7.9700e-02,
         -2.5586e-01, -2.4664e-01, -6.1491e-02, -2.6813e-01, -5.0230e-02,
         -1.7894e-01]], device='cuda:0') tensor(0.2278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
316000 特征值优化 tensor(1.4997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.5845e-01,  2.1564e-03,  6.1350e-01, -1.2964e+00,  2.0184e+00,
         -3.2887e-01, -8.4671e-01, -2.4160e-01,  2.8432e+00,  5.2661e-01,
          3.5435e-02, -8.1825e-01, -3.3965e-01, -1.4974e-01, -2.8186e-01,
         -2.2606e-01, -1.5542e-01, -2.6066e-01, -7.4983e-01,  3.7438e-01,
          5.0468e-01, -1.6739e-02,  5.5983e-01, -9.9270e-01, -4.6368e-01,
         -5.8752e-01, -6.1453e-01,  3.2919e-01,  4.6417e-01,  2.3095e-01,
          2.0493e-01, -3.0527e-01, -1.0350e-01,  2.3505e-01,  1.5474e-01,
         -3.1971e-01, -1.6885e-01, -1.6775e-01,  8.8049e-02,  1.8357e-01,
         -1.0743e-01, -6.5836e-01,  5.6341e-01,  1.6733e-02,  3.9832e-01,
          7.3754e-03, -1.0895e-01, -1.6965e-01, -1.8506e-01, -2.9801e-02,
         -1.9206e-01,  4.0428e-01,  1.0590e-01,  4.2297e-02, -2.7505e-01,
          3.8626e-01, -1.3413e-01, -2.1800e-01,  5.2498e-02,  5.1906e-01,
         -7.2410e-01,  2.6207e-02,  6.1665e-02, -1.7070e-01, -5.6838e-02,
         -1.6257e-01, -1.6915e-01,  7.9257e-02,  1.9112e-01,  3.5441e-02,
         -5.9153e-02, -2.1641e-01,  5.2023e-01,  1.0915e-02,  9.0778e-02,
         -2.5742e-01,  2.4683e-01, -3.4436e-01, -5.6390e-01, -6.4045e-02,
         -1.7106e-01, -1.6146e-01, -3.7252e-01, -2.5396e-01,  9.9655e-02,
          1.1127e-01,  3.0526e-01, -3.1544e-01, -2.4698e-01,  1.7903e-01,
          2.0919e-01,  1.9840e-01, -5.6376e-01, -3.4114e-03,  7.4406e-01,
         -1.1656e-01, -6.6188e-01,  2.9837e-01,  4.2218e-01, -8.1375e-01,
         -2.0972e-01, -5.9000e-02, -1.1961e-01,  2.4632e-01,  8.9589e-02,
         -6.7104e-01, -1.4520e-01, -1.9353e-01,  8.9885e-01, -1.6549e-01,
          8.4310e-02,  7.8346e-02, -2.7073e-02, -3.7940e-02, -1.4938e-02,
         -8.5088e-02,  2.7184e-02,  1.3746e-01,  8.2992e-02,  1.0604e-01,
          1.5356e-01, -1.1647e-01, -2.0390e-01,  8.9158e-02,  5.0986e-02,
          4.9325e-03,  1.7717e-01,  6.0310e-02,  1.7635e-01,  4.9522e-02,
          5.2204e-02,  1.8904e-01, -2.4050e-02,  2.6594e-02, -4.9377e-01,
         -5.8220e-02,  9.6630e-03,  9.0631e-02, -1.3929e-01,  6.2805e-02,
          1.4792e-01, -3.8514e-02, -2.4260e-01, -2.7505e-02, -7.2402e-02,
         -1.1562e-01,  1.4888e-02,  1.1133e-02, -6.2199e-02,  8.3988e-02,
         -2.6325e-03,  3.1631e-02, -2.0808e-01,  1.5066e-01, -9.2587e-02,
         -2.7942e-01, -2.1685e-01, -7.2164e-02, -2.7636e-01, -7.8773e-02,
         -1.6685e-01]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
317000 特征值优化 tensor(1.5400, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.8539e-01, -2.3831e-02,  6.2115e-01, -1.2756e+00,  2.0735e+00,
         -3.4426e-01, -8.3004e-01, -2.8424e-01,  2.8525e+00,  5.4152e-01,
          5.2598e-02, -8.1220e-01, -3.2581e-01, -1.2403e-01, -2.8892e-01,
         -2.0971e-01, -1.9744e-01, -2.4025e-01, -7.6144e-01,  3.7378e-01,
          4.9121e-01, -4.0900e-02,  5.5393e-01, -9.5330e-01, -4.2854e-01,
         -6.2065e-01, -6.4236e-01,  3.2727e-01,  4.4464e-01,  2.0896e-01,
          1.9694e-01, -3.2257e-01, -1.2577e-01,  2.2042e-01,  1.6581e-01,
         -3.1209e-01, -1.8055e-01, -1.4304e-01,  8.7824e-02,  1.5029e-01,
         -7.9990e-02, -6.6646e-01,  5.6315e-01,  2.7281e-02,  4.2342e-01,
          6.6044e-03, -1.2552e-01, -1.2958e-01, -1.9968e-01, -2.7975e-02,
         -1.7822e-01,  4.0715e-01,  8.1925e-02,  3.7369e-02, -2.8403e-01,
          3.8514e-01, -1.4470e-01, -2.1485e-01,  2.5104e-02,  5.1592e-01,
         -7.2526e-01,  4.3336e-02,  8.1811e-02, -1.6669e-01, -4.3361e-02,
         -1.5834e-01, -1.6272e-01,  7.1056e-02,  1.7526e-01,  3.1524e-02,
         -5.9075e-02, -2.2083e-01,  5.2403e-01, -4.9115e-03,  9.9329e-02,
         -2.5798e-01,  2.4449e-01, -3.2854e-01, -5.9261e-01, -8.6632e-02,
         -1.3968e-01, -1.6652e-01, -3.7830e-01, -2.6829e-01,  8.8027e-02,
          1.1319e-01,  3.0517e-01, -3.3803e-01, -2.1277e-01,  1.7439e-01,
          2.1971e-01,  1.7761e-01, -5.2317e-01, -1.5940e-02,  7.3481e-01,
         -1.0131e-01, -6.6235e-01,  2.9093e-01,  4.4884e-01, -7.7996e-01,
         -2.4973e-01, -6.7890e-02, -1.2452e-01,  2.4449e-01,  9.8188e-02,
         -6.6977e-01, -1.2050e-01, -2.0746e-01,  9.0818e-01, -1.4936e-01,
          7.1428e-02,  8.0061e-02, -3.5564e-02, -3.2708e-02, -1.0347e-02,
         -8.9440e-02,  2.5111e-02,  1.3582e-01,  7.0468e-02,  1.1632e-01,
          1.5207e-01, -1.1362e-01, -1.9086e-01,  8.7435e-02,  5.9012e-02,
          5.2764e-03,  1.6856e-01,  5.4510e-02,  1.7683e-01,  7.0097e-02,
          6.0952e-02,  1.5553e-01, -3.5295e-02,  6.5931e-05, -5.1212e-01,
         -5.6666e-02,  1.8657e-02,  7.1805e-02, -1.4754e-01,  5.3654e-02,
          1.6620e-01, -5.1082e-02, -2.5510e-01, -1.2910e-02, -6.7449e-02,
         -1.3622e-01,  1.1701e-02,  4.0240e-02, -6.6322e-02,  6.8900e-02,
          7.6381e-03,  2.4680e-02, -1.8218e-01,  1.8107e-01, -9.8011e-02,
         -2.8792e-01, -2.2003e-01, -9.0791e-02, -2.5014e-01, -6.9043e-02,
         -1.7078e-01]], device='cuda:0') tensor(0.2505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
318000 特征值优化 tensor(1.5117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5213, -0.0116,  0.6275, -1.2617,  2.0838, -0.3467, -0.8265, -0.3336,
          2.8188,  0.5262,  0.0570, -0.7907, -0.2843, -0.0824, -0.3145, -0.2254,
         -0.2371, -0.2565, -0.7441,  0.3665,  0.4947, -0.0552,  0.5525, -0.9400,
         -0.4155, -0.6371, -0.6747,  0.3107,  0.4674,  0.1996,  0.1832, -0.3379,
         -0.1289,  0.2336,  0.1908, -0.2995, -0.1698, -0.1656,  0.0900,  0.1426,
         -0.0838, -0.6683,  0.5694,  0.0317,  0.4360,  0.0094, -0.1440, -0.1014,
         -0.2219, -0.0272, -0.1854,  0.4056,  0.0575,  0.0245, -0.2777,  0.3665,
         -0.1425, -0.2222,  0.0071,  0.5144, -0.7315,  0.0602,  0.1042, -0.1505,
         -0.0532, -0.1678, -0.1492,  0.0889,  0.1725,  0.0395, -0.0658, -0.2310,
          0.5265,  0.0076,  0.1043, -0.2489,  0.2429, -0.3059, -0.5768, -0.0954,
         -0.1559, -0.1780, -0.3688, -0.2706,  0.0714,  0.1329,  0.2957, -0.3591,
         -0.1436,  0.1565,  0.2324,  0.1536, -0.5223, -0.0529,  0.7616, -0.1228,
         -0.6537,  0.2903,  0.4516, -0.7438, -0.2762, -0.0636, -0.0942,  0.2251,
          0.0998, -0.6666, -0.1070, -0.2097,  0.9011, -0.1490,  0.0597,  0.0690,
         -0.0594, -0.0266, -0.0364, -0.0769,  0.0081,  0.1324,  0.0736,  0.1240,
          0.1391, -0.0897, -0.1990,  0.0928,  0.0722,  0.0100,  0.1528,  0.0328,
          0.1818,  0.0812,  0.0600,  0.1333, -0.0371, -0.0188, -0.5172, -0.0651,
          0.0354,  0.0515, -0.1598,  0.0602,  0.1757, -0.0412, -0.2618, -0.0116,
         -0.0472, -0.1362, -0.0148,  0.0417, -0.0640,  0.0616,  0.0065,  0.0213,
         -0.1832,  0.1999, -0.0894, -0.2830, -0.2049, -0.1204, -0.2428, -0.1101,
         -0.1523]], device='cuda:0') tensor(0.2590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
319000 特征值优化 tensor(1.4705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.6381e-01,  1.5806e-02,  6.7436e-01, -1.2820e+00,  2.0988e+00,
         -3.7620e-01, -8.4596e-01, -3.8605e-01,  2.7827e+00,  5.2527e-01,
          7.7856e-02, -7.8552e-01, -2.7949e-01, -5.8619e-02, -3.1832e-01,
         -2.0922e-01, -2.4571e-01, -2.7032e-01, -7.4717e-01,  3.6385e-01,
          5.1026e-01, -7.7378e-02,  5.7020e-01, -9.3160e-01, -4.2077e-01,
         -6.4485e-01, -6.8391e-01,  2.9670e-01,  4.7876e-01,  1.9447e-01,
          1.5780e-01, -3.6697e-01, -1.3983e-01,  2.6148e-01,  2.1406e-01,
         -3.0192e-01, -1.6334e-01, -1.7394e-01,  9.9128e-02,  1.3686e-01,
         -8.5641e-02, -6.6296e-01,  5.7735e-01,  3.4315e-02,  4.3267e-01,
          2.2705e-03, -1.5315e-01, -7.2504e-02, -2.3921e-01, -3.1108e-02,
         -1.8946e-01,  4.0001e-01,  3.3641e-02,  2.4958e-02, -2.7914e-01,
          3.5676e-01, -1.5538e-01, -2.2903e-01, -9.8802e-04,  4.9379e-01,
         -7.2194e-01,  5.9834e-02,  1.1330e-01, -1.4722e-01, -3.9474e-02,
         -1.5812e-01, -1.4667e-01,  7.2093e-02,  1.6433e-01,  4.8411e-02,
         -5.4992e-02, -2.2625e-01,  5.1829e-01,  6.6958e-04,  9.6055e-02,
         -2.4398e-01,  2.4610e-01, -2.9592e-01, -5.6333e-01, -9.5919e-02,
         -1.4815e-01, -1.8328e-01, -3.5327e-01, -2.6651e-01,  6.4091e-02,
          1.3674e-01,  2.9806e-01, -3.5976e-01, -7.2462e-02,  1.7638e-01,
          2.3716e-01,  1.5335e-01, -5.2979e-01, -7.3400e-02,  7.5399e-01,
         -1.4161e-01, -6.3841e-01,  2.9506e-01,  4.8040e-01, -7.1670e-01,
         -2.9350e-01, -5.6828e-02, -9.9997e-02,  2.1427e-01,  1.0808e-01,
         -6.7908e-01, -7.0366e-02, -2.1981e-01,  9.2830e-01, -1.3714e-01,
          4.8764e-02,  7.9968e-02, -6.8621e-02, -3.5912e-02, -2.6349e-02,
         -7.0774e-02, -1.5626e-02,  1.4549e-01,  5.9939e-02,  1.2605e-01,
          1.4213e-01, -9.7877e-02, -2.0370e-01,  8.9537e-02,  6.5408e-02,
          1.2724e-02,  1.4970e-01,  3.4143e-02,  1.6679e-01,  7.1813e-02,
          6.0957e-02,  1.3081e-01, -4.8535e-02, -3.7891e-02, -5.1928e-01,
         -6.2238e-02,  4.2612e-02,  5.0511e-02, -1.5207e-01,  6.6331e-02,
          1.7779e-01, -6.2334e-02, -2.6486e-01, -1.9845e-02, -3.1661e-02,
         -1.2196e-01, -1.1547e-02,  2.0627e-02, -7.7579e-02,  6.7567e-02,
          1.6126e-02,  3.1853e-02, -1.8581e-01,  2.0703e-01, -7.1945e-02,
         -2.9317e-01, -1.9464e-01, -1.4669e-01, -2.4605e-01, -1.4564e-01,
         -1.3958e-01]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
320000 特征值优化 tensor(1.4555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.6206e-01,  3.2552e-02,  7.2176e-01, -1.2795e+00,  2.0924e+00,
         -4.4873e-01, -8.5148e-01, -4.3852e-01,  2.7745e+00,  5.4324e-01,
          9.0628e-02, -7.8363e-01, -2.8275e-01, -3.4579e-02, -2.9477e-01,
         -2.1843e-01, -2.5873e-01, -2.6551e-01, -7.5091e-01,  3.3665e-01,
          5.1204e-01, -8.4434e-02,  5.6761e-01, -9.3673e-01, -4.2183e-01,
         -6.6023e-01, -6.7749e-01,  2.7389e-01,  4.8598e-01,  2.0080e-01,
          1.5408e-01, -3.7182e-01, -1.2170e-01,  2.5909e-01,  2.1784e-01,
         -2.8135e-01, -1.8091e-01, -1.7311e-01,  7.5385e-02,  1.2421e-01,
         -6.7935e-02, -6.6159e-01,  5.7097e-01,  2.8833e-02,  4.2510e-01,
          1.0039e-02, -1.6676e-01, -4.9873e-02, -2.4510e-01, -2.7148e-02,
         -1.9441e-01,  3.7237e-01,  1.7251e-02,  1.1478e-02, -2.8377e-01,
          3.5915e-01, -1.5985e-01, -2.4105e-01, -2.2051e-02,  4.9175e-01,
         -7.1121e-01,  6.0932e-02,  1.1609e-01, -1.4102e-01, -3.4709e-02,
         -1.5976e-01, -1.5854e-01,  5.2370e-02,  1.7282e-01,  4.8218e-02,
         -5.3699e-02, -2.2389e-01,  5.2760e-01,  5.8890e-03,  9.8060e-02,
         -2.2785e-01,  2.4244e-01, -2.8617e-01, -5.5015e-01, -1.2007e-01,
         -1.3484e-01, -1.8352e-01, -3.5715e-01, -2.8637e-01,  7.6852e-02,
          1.3983e-01,  2.7020e-01, -3.5522e-01, -6.7816e-02,  1.7407e-01,
          2.5199e-01,  1.3443e-01, -5.5024e-01, -7.9758e-02,  7.4119e-01,
         -1.4871e-01, -6.3673e-01,  3.2063e-01,  4.8589e-01, -7.1387e-01,
         -3.2493e-01, -5.0419e-02, -8.4217e-02,  2.3094e-01,  1.0207e-01,
         -6.8911e-01, -5.4051e-02, -2.3805e-01,  9.3585e-01, -1.4604e-01,
          4.5611e-02,  6.7319e-02, -8.9178e-02, -2.7306e-02, -2.4534e-02,
         -5.7027e-02, -1.7026e-02,  1.3457e-01,  3.1194e-02,  1.2790e-01,
          1.3620e-01, -1.0598e-01, -1.9430e-01,  9.3951e-02,  6.8993e-02,
          4.0826e-03,  1.6049e-01,  2.0891e-02,  1.5953e-01,  7.9502e-02,
          4.5567e-02,  1.1996e-01, -4.4776e-02, -5.6506e-02, -5.2706e-01,
         -6.0390e-02,  6.1302e-02,  5.0250e-02, -1.5851e-01,  5.9891e-02,
          1.8679e-01, -3.9913e-02, -2.6450e-01, -1.9816e-02, -3.5385e-02,
         -1.3104e-01, -1.0997e-02,  2.1916e-02, -7.4198e-02,  6.2322e-02,
          2.1671e-03,  1.4822e-02, -1.8876e-01,  1.9807e-01, -7.2043e-02,
         -3.0540e-01, -1.9806e-01, -1.5083e-01, -2.3880e-01, -1.5475e-01,
         -1.3881e-01]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
321000 特征值优化 tensor(1.4445, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.7479e-01,  7.5841e-02,  7.6254e-01, -1.2829e+00,  2.0738e+00,
         -5.1421e-01, -8.9168e-01, -4.8097e-01,  2.7653e+00,  5.5636e-01,
          9.6513e-02, -7.5278e-01, -2.7733e-01, -2.6839e-02, -2.8706e-01,
         -2.1326e-01, -2.7289e-01, -2.7590e-01, -7.5161e-01,  3.4223e-01,
          5.2110e-01, -9.1681e-02,  5.7309e-01, -9.2041e-01, -4.4137e-01,
         -6.6272e-01, -6.8226e-01,  2.5498e-01,  5.0530e-01,  2.0494e-01,
          1.3573e-01, -3.8202e-01, -1.4550e-01,  2.9115e-01,  2.5021e-01,
         -2.8054e-01, -1.6863e-01, -1.8245e-01,  8.9628e-02,  1.0894e-01,
         -8.8241e-02, -6.6229e-01,  5.7795e-01,  2.0692e-02,  4.2858e-01,
         -8.4174e-03, -1.6428e-01, -4.0539e-02, -2.5774e-01, -3.8175e-02,
         -2.0488e-01,  3.7674e-01,  3.6228e-03,  1.1593e-02, -3.0023e-01,
          3.5862e-01, -1.8325e-01, -2.4425e-01, -3.7545e-02,  4.8713e-01,
         -7.1754e-01,  7.1958e-02,  1.1669e-01, -1.5171e-01, -4.1459e-02,
         -1.4356e-01, -1.3143e-01,  5.9325e-02,  1.6435e-01,  5.0475e-02,
         -3.9363e-02, -2.1884e-01,  5.1244e-01, -2.4171e-02,  8.9724e-02,
         -2.3829e-01,  2.3140e-01, -2.6584e-01, -5.3561e-01, -1.1594e-01,
         -1.2082e-01, -1.7609e-01, -3.5530e-01, -2.8509e-01,  8.1195e-02,
          1.1583e-01,  2.6608e-01, -3.6673e-01, -5.2372e-02,  1.6070e-01,
          2.6264e-01,  1.3478e-01, -5.4609e-01, -8.5591e-02,  7.4770e-01,
         -1.6122e-01, -6.4076e-01,  3.3444e-01,  4.8986e-01, -6.6764e-01,
         -3.0375e-01, -1.8157e-02, -9.1005e-02,  2.0722e-01,  1.1358e-01,
         -7.0420e-01, -3.2725e-02, -2.5209e-01,  9.4021e-01, -1.4119e-01,
          4.3001e-02,  8.2926e-02, -8.8692e-02, -3.7760e-02, -2.3813e-02,
         -5.9843e-02, -3.2276e-02,  1.4521e-01,  3.6630e-02,  1.3868e-01,
          1.3357e-01, -9.6518e-02, -1.9865e-01,  8.8229e-02,  6.1412e-02,
          2.9596e-03,  1.5255e-01,  2.2583e-02,  1.4730e-01,  7.7615e-02,
          4.7446e-02,  1.2110e-01, -5.4165e-02, -8.7193e-02, -5.2579e-01,
         -6.4605e-02,  6.2958e-02,  1.9182e-02, -1.5488e-01,  9.9115e-02,
          1.8262e-01, -7.2058e-02, -2.4046e-01, -2.0303e-02, -3.6780e-02,
         -1.2279e-01, -2.5050e-03,  1.2676e-02, -7.6525e-02,  6.3561e-02,
          1.1317e-02,  2.2847e-02, -1.9909e-01,  2.0487e-01, -7.5727e-02,
         -3.1332e-01, -1.7838e-01, -1.6578e-01, -2.4714e-01, -1.8216e-01,
         -1.0884e-01]], device='cuda:0') tensor(0.2405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
322000 特征值优化 tensor(1.4789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.8843e-01,  8.8420e-02,  8.0866e-01, -1.2815e+00,  2.0852e+00,
         -5.8618e-01, -9.3265e-01, -5.2230e-01,  2.7565e+00,  5.7874e-01,
          9.0233e-02, -7.2816e-01, -2.6479e-01,  4.4707e-03, -2.7396e-01,
         -2.2465e-01, -2.7404e-01, -2.8794e-01, -7.4394e-01,  3.3674e-01,
          5.1474e-01, -8.7689e-02,  5.6199e-01, -9.1678e-01, -4.4866e-01,
         -6.6592e-01, -6.7845e-01,  2.3424e-01,  5.3493e-01,  2.1320e-01,
          1.2765e-01, -3.9256e-01, -1.4125e-01,  3.0764e-01,  2.6542e-01,
         -2.6412e-01, -1.7486e-01, -1.8874e-01,  8.4210e-02,  9.6456e-02,
         -8.6682e-02, -6.6453e-01,  5.7982e-01,  3.2654e-02,  4.2018e-01,
         -1.4820e-02, -1.6653e-01, -3.2882e-02, -2.6848e-01, -3.1834e-02,
         -2.2224e-01,  3.7451e-01, -2.6209e-02, -1.8052e-03, -2.9809e-01,
          3.4881e-01, -1.9424e-01, -2.6221e-01, -4.8684e-02,  4.8876e-01,
         -7.1981e-01,  8.0513e-02,  1.2036e-01, -1.4129e-01, -5.4900e-02,
         -1.3951e-01, -1.0997e-01,  5.5998e-02,  1.4981e-01,  5.3834e-02,
         -4.2838e-02, -2.2305e-01,  5.0763e-01, -3.0279e-02,  8.7975e-02,
         -2.2662e-01,  2.2865e-01, -2.3501e-01, -5.2086e-01, -1.3306e-01,
         -1.2006e-01, -1.7536e-01, -3.4423e-01, -2.8643e-01,  8.6406e-02,
          1.0301e-01,  2.5089e-01, -3.6622e-01, -5.8895e-02,  1.4568e-01,
          2.6811e-01,  1.2567e-01, -5.5170e-01, -1.0293e-01,  7.5774e-01,
         -1.7554e-01, -6.3976e-01,  3.4807e-01,  4.8918e-01, -6.6738e-01,
         -3.1252e-01,  3.3772e-03, -7.1708e-02,  2.0675e-01,  1.2005e-01,
         -7.0488e-01, -2.8750e-02, -2.7772e-01,  9.4132e-01, -1.3821e-01,
          4.1198e-02,  8.1464e-02, -8.6114e-02, -2.6806e-02, -3.9655e-02,
         -5.4057e-02, -2.8461e-02,  1.3645e-01,  3.5908e-02,  1.3549e-01,
          1.2843e-01, -8.5602e-02, -2.0769e-01,  8.0620e-02,  7.1758e-02,
          2.4958e-03,  1.4922e-01,  1.2945e-02,  1.4344e-01,  9.1128e-02,
          3.2009e-02,  1.0444e-01, -6.1398e-02, -1.0253e-01, -5.2319e-01,
         -6.4883e-02,  6.3667e-02,  2.5654e-02, -1.5475e-01,  1.1411e-01,
          1.8916e-01, -5.3214e-02, -2.2811e-01, -1.1731e-02, -3.4951e-02,
         -1.1903e-01, -8.4888e-03,  1.4128e-02, -6.5835e-02,  6.4882e-02,
         -1.0383e-03,  2.4301e-02, -2.1727e-01,  1.9153e-01, -6.6167e-02,
         -3.1707e-01, -1.8021e-01, -1.7017e-01, -2.4496e-01, -2.0016e-01,
         -8.4596e-02]], device='cuda:0') tensor(0.2230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
323000 特征值优化 tensor(1.4550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.9268e-01,  8.4339e-02,  8.7633e-01, -1.2782e+00,  2.0811e+00,
         -6.7108e-01, -9.8795e-01, -5.6469e-01,  2.7691e+00,  6.1112e-01,
          8.1848e-02, -7.1636e-01, -2.8032e-01,  2.9094e-02, -2.3216e-01,
         -2.2112e-01, -2.9734e-01, -2.8560e-01, -7.5757e-01,  3.3723e-01,
          5.1383e-01, -8.8032e-02,  5.6610e-01, -9.1690e-01, -4.6080e-01,
         -6.6225e-01, -6.6710e-01,  2.2306e-01,  5.3827e-01,  2.1224e-01,
          1.2209e-01, -3.8908e-01, -1.5363e-01,  3.1179e-01,  2.8019e-01,
         -2.5626e-01, -1.8278e-01, -1.9024e-01,  7.9510e-02,  9.1912e-02,
         -8.7615e-02, -6.6058e-01,  5.7547e-01,  3.8364e-02,  4.1410e-01,
         -2.8037e-02, -1.6750e-01, -2.8668e-02, -2.6757e-01, -3.2698e-02,
         -2.1902e-01,  3.6773e-01, -3.1407e-02, -4.1725e-03, -3.0527e-01,
          3.4667e-01, -2.0525e-01, -2.5126e-01, -7.0410e-02,  4.7899e-01,
         -7.1824e-01,  8.0974e-02,  1.2121e-01, -1.4016e-01, -4.3235e-02,
         -1.3162e-01, -1.0473e-01,  4.6000e-02,  1.5590e-01,  5.6141e-02,
         -2.9162e-02, -2.2149e-01,  4.9731e-01, -3.8742e-02,  8.8445e-02,
         -2.1533e-01,  2.2780e-01, -2.4039e-01, -5.1141e-01, -1.4463e-01,
         -1.0491e-01, -1.6269e-01, -3.4805e-01, -2.8926e-01,  1.0570e-01,
          9.4191e-02,  2.4043e-01, -3.7209e-01, -6.7061e-02,  1.4143e-01,
          2.7025e-01,  1.2667e-01, -5.6026e-01, -1.1062e-01,  7.5717e-01,
         -1.9464e-01, -6.4071e-01,  3.5520e-01,  4.9194e-01, -6.7399e-01,
         -3.2056e-01,  3.0182e-02, -7.8267e-02,  2.1218e-01,  1.1585e-01,
         -7.1807e-01, -1.5576e-02, -2.7874e-01,  9.4941e-01, -1.4280e-01,
          3.9296e-02,  8.5000e-02, -8.0626e-02, -2.2168e-02, -2.9568e-02,
         -5.3446e-02, -2.5697e-02,  1.4115e-01,  2.5892e-02,  1.4392e-01,
          1.3099e-01, -7.8734e-02, -2.0045e-01,  7.7724e-02,  6.3011e-02,
         -5.0478e-04,  1.5737e-01,  1.4857e-02,  1.3188e-01,  9.0429e-02,
          2.8076e-02,  1.1263e-01, -6.2859e-02, -1.2866e-01, -5.2697e-01,
         -7.5132e-02,  6.5960e-02,  1.6446e-02, -1.5376e-01,  1.1617e-01,
          1.8377e-01, -3.9602e-02, -2.2483e-01, -1.3206e-02, -4.0616e-02,
         -1.1738e-01,  6.6953e-04,  1.6031e-02, -6.8759e-02,  5.6724e-02,
         -2.5919e-03,  1.7276e-02, -2.1748e-01,  1.7480e-01, -6.9807e-02,
         -3.2839e-01, -1.6719e-01, -1.7888e-01, -2.5148e-01, -2.0245e-01,
         -7.3814e-02]], device='cuda:0') tensor(0.2312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
324000 特征值优化 tensor(1.4895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.2120e-01,  1.2083e-01,  9.2459e-01, -1.2727e+00,  2.0369e+00,
         -7.2906e-01, -9.9794e-01, -6.0741e-01,  2.7483e+00,  6.3754e-01,
          7.3665e-02, -7.0184e-01, -2.7628e-01,  6.2178e-02, -2.1993e-01,
         -2.2439e-01, -3.1501e-01, -2.9483e-01, -7.4920e-01,  3.2369e-01,
          5.1384e-01, -9.2543e-02,  5.6967e-01, -9.0154e-01, -4.6255e-01,
         -6.5903e-01, -6.4955e-01,  2.1285e-01,  5.5835e-01,  2.1430e-01,
          1.2329e-01, -3.8711e-01, -1.5311e-01,  3.1930e-01,  3.0444e-01,
         -2.4688e-01, -1.8817e-01, -1.9109e-01,  7.6579e-02,  7.8508e-02,
         -8.7719e-02, -6.6269e-01,  5.7132e-01,  5.5849e-02,  4.1582e-01,
         -3.5528e-02, -1.6691e-01, -3.7478e-02, -2.7248e-01, -3.1038e-02,
         -2.2780e-01,  3.6240e-01, -6.0333e-02, -2.4594e-02, -3.0243e-01,
          3.3106e-01, -2.0958e-01, -2.6504e-01, -8.5767e-02,  4.8052e-01,
         -7.1311e-01,  8.0695e-02,  1.1784e-01, -1.3751e-01, -5.5263e-02,
         -1.2944e-01, -8.3072e-02,  4.7878e-02,  1.4560e-01,  5.7442e-02,
         -3.6609e-02, -2.2341e-01,  4.9488e-01, -4.9951e-02,  9.2197e-02,
         -2.1261e-01,  2.2569e-01, -2.1642e-01, -5.0410e-01, -1.6017e-01,
         -1.0326e-01, -1.6462e-01, -3.3550e-01, -2.9486e-01,  1.1473e-01,
          7.9382e-02,  2.3547e-01, -3.6686e-01, -8.2179e-02,  1.3118e-01,
          2.7775e-01,  1.1572e-01, -5.4377e-01, -1.1390e-01,  7.6323e-01,
         -2.0769e-01, -6.4541e-01,  3.6801e-01,  4.9635e-01, -6.6046e-01,
         -3.0953e-01,  4.6473e-02, -7.2561e-02,  2.1048e-01,  1.1343e-01,
         -7.2484e-01, -9.4412e-03, -3.0055e-01,  9.4992e-01, -1.4597e-01,
          4.6632e-02,  8.3563e-02, -7.7629e-02, -9.7547e-03, -4.4298e-02,
         -4.6024e-02, -1.3339e-02,  1.2597e-01,  3.4788e-02,  1.4610e-01,
          1.3757e-01, -7.1021e-02, -2.0231e-01,  6.5924e-02,  6.9745e-02,
         -2.3717e-03,  1.4750e-01,  7.1144e-03,  1.3202e-01,  1.0393e-01,
          1.2169e-02,  9.6205e-02, -6.6206e-02, -1.3463e-01, -5.2468e-01,
         -6.8898e-02,  7.5018e-02,  1.3496e-02, -1.5197e-01,  1.3215e-01,
          1.9297e-01, -3.3262e-02, -2.2138e-01, -1.2635e-02, -3.2831e-02,
         -1.2619e-01, -1.4357e-03,  1.8769e-02, -5.0817e-02,  5.2462e-02,
         -1.2779e-02,  1.2092e-02, -2.2540e-01,  1.7381e-01, -5.9197e-02,
         -3.2039e-01, -1.7808e-01, -1.7838e-01, -2.4468e-01, -2.2155e-01,
         -6.1261e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
325000 特征值优化 tensor(1.4476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.5513e-01,  1.2873e-01,  9.7872e-01, -1.2747e+00,  2.0472e+00,
         -7.7228e-01, -1.0173e+00, -6.5535e-01,  2.7333e+00,  6.8978e-01,
          6.1533e-02, -6.9582e-01, -2.6559e-01,  9.8762e-02, -1.4738e-01,
         -2.0131e-01, -3.2585e-01, -2.8669e-01, -7.5410e-01,  3.2478e-01,
          5.2055e-01, -9.4975e-02,  5.7467e-01, -8.8890e-01, -4.5216e-01,
         -6.5409e-01, -6.3876e-01,  2.1080e-01,  5.6800e-01,  2.2361e-01,
          1.4703e-01, -3.6533e-01, -1.6236e-01,  3.3051e-01,  3.0398e-01,
         -2.4138e-01, -1.9975e-01, -1.9909e-01,  8.1904e-02,  6.7045e-02,
         -7.6709e-02, -6.6121e-01,  5.7010e-01,  7.2501e-02,  4.0499e-01,
         -4.9149e-02, -1.5795e-01, -3.3769e-02, -2.7907e-01, -1.6091e-02,
         -2.3019e-01,  3.6231e-01, -6.8056e-02, -3.8200e-02, -3.0396e-01,
          3.2711e-01, -1.9886e-01, -2.6715e-01, -1.0188e-01,  4.7646e-01,
         -7.0338e-01,  7.1730e-02,  1.2311e-01, -1.4086e-01, -4.9773e-02,
         -1.0935e-01, -5.8446e-02,  4.3147e-02,  1.4175e-01,  5.9647e-02,
         -3.2165e-02, -2.3428e-01,  4.9358e-01, -5.7305e-02,  9.4808e-02,
         -2.0490e-01,  2.2740e-01, -1.8897e-01, -4.9808e-01, -1.7508e-01,
         -9.5797e-02, -1.5671e-01, -3.2993e-01, -2.9546e-01,  1.2428e-01,
          5.3125e-02,  2.1956e-01, -3.5869e-01, -1.0004e-01,  1.3589e-01,
          2.8303e-01,  1.0621e-01, -5.5087e-01, -1.2464e-01,  7.6013e-01,
         -2.1937e-01, -6.4714e-01,  3.6935e-01,  5.2819e-01, -6.6196e-01,
         -3.2006e-01,  8.2955e-02, -6.7400e-02,  2.0891e-01,  1.0434e-01,
         -7.3764e-01,  1.1871e-02, -3.2528e-01,  9.5205e-01, -1.6297e-01,
          5.2088e-02,  8.7956e-02, -6.1622e-02, -3.4039e-04, -3.6004e-02,
         -3.4331e-02,  2.4994e-02,  1.2764e-01,  4.1397e-02,  1.6052e-01,
          1.5641e-01, -7.1690e-02, -2.0088e-01,  5.1777e-02,  7.2507e-02,
         -2.1749e-03,  1.4785e-01,  1.3899e-02,  1.2692e-01,  1.1692e-01,
         -4.0484e-04,  8.2157e-02, -7.0265e-02, -1.5366e-01, -5.2250e-01,
         -6.3800e-02,  7.6989e-02,  2.3788e-03, -1.5310e-01,  1.3648e-01,
          1.8756e-01, -2.2361e-02, -2.1972e-01, -2.5880e-02, -3.1935e-02,
         -1.3502e-01,  8.8588e-03,  3.0797e-02, -4.6499e-02,  3.8743e-02,
         -1.3351e-02,  1.9505e-03, -2.2979e-01,  1.5300e-01, -5.7648e-02,
         -3.2502e-01, -1.8275e-01, -1.7925e-01, -2.5440e-01, -2.3433e-01,
         -4.7978e-02]], device='cuda:0') tensor(0.2120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
326000 特征值优化 tensor(1.4396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7286,  0.1028,  1.0168, -1.2720,  2.0400, -0.7912, -1.0388, -0.6894,
          2.7313,  0.7035,  0.0521, -0.6539, -0.2685,  0.1231, -0.0318, -0.1642,
         -0.3241, -0.2824, -0.7552,  0.3157,  0.5476, -0.1269,  0.6082, -0.8523,
         -0.4700, -0.6375, -0.6093,  0.2138,  0.5765,  0.2561,  0.1309, -0.3539,
         -0.1823,  0.3397,  0.3051, -0.2334, -0.2286, -0.2051,  0.0962,  0.0531,
         -0.0716, -0.6568,  0.5661,  0.0724,  0.3693, -0.0655, -0.1616, -0.0249,
         -0.2818, -0.0096, -0.2148,  0.3632, -0.0988, -0.0263, -0.3206,  0.3114,
         -0.2062, -0.2698, -0.1250,  0.4597, -0.6839,  0.0360,  0.1229, -0.1621,
         -0.0260, -0.0827, -0.0419,  0.0348,  0.1396,  0.0601, -0.0173, -0.2186,
          0.4865, -0.0827,  0.0727, -0.2032,  0.2171, -0.1895, -0.5057, -0.1688,
         -0.0666, -0.1461, -0.3475, -0.3018,  0.1240,  0.0324,  0.2012, -0.3459,
         -0.0858,  0.1543,  0.2824,  0.1055, -0.5791, -0.1213,  0.7482, -0.2261,
         -0.6697,  0.3672,  0.5705, -0.6667, -0.3116,  0.1046, -0.0492,  0.2064,
          0.1044, -0.7614,  0.0300, -0.3361,  0.9402, -0.2078,  0.0635,  0.0861,
         -0.0589,  0.0063, -0.0225, -0.0420,  0.0578,  0.1349,  0.0084,  0.1939,
          0.1690, -0.0648, -0.1883,  0.0446,  0.0509, -0.0119,  0.1606,  0.0175,
          0.1036,  0.1227, -0.0032,  0.0860, -0.0771, -0.1927, -0.5125, -0.0783,
          0.0792, -0.0150, -0.1491,  0.1301,  0.1979, -0.0058, -0.2098, -0.0403,
         -0.0413, -0.1311,  0.0322,  0.0129, -0.0575,  0.0635, -0.0064, -0.0086,
         -0.2152,  0.1400, -0.0763, -0.3390, -0.1629, -0.1810, -0.2722, -0.2281,
         -0.0675]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
327000 特征值优化 tensor(1.4473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7676,  0.0963,  1.0314, -1.2811,  2.0256, -0.7885, -1.0442, -0.7470,
          2.7235,  0.7020,  0.0333, -0.6359, -0.2922,  0.1479,  0.0257, -0.1231,
         -0.3492, -0.2989, -0.7287,  0.3419,  0.5527, -0.1200,  0.6295, -0.8412,
         -0.4801, -0.6433, -0.6023,  0.2061,  0.6165,  0.2612,  0.1081, -0.3677,
         -0.1878,  0.3523,  0.2840, -0.2266, -0.2210, -0.2227,  0.1125,  0.0642,
         -0.0715, -0.6550,  0.5711,  0.0893,  0.3617, -0.0750, -0.1867, -0.0336,
         -0.2763,  0.0202, -0.2328,  0.3663, -0.1063, -0.0543, -0.3125,  0.2899,
         -0.2027, -0.2631, -0.1127,  0.4638, -0.6793,  0.0141,  0.1186, -0.1575,
         -0.0423, -0.0950, -0.0090,  0.0535,  0.1242,  0.0641, -0.0286, -0.2476,
          0.4881, -0.0882,  0.0648, -0.1796,  0.2061, -0.1721, -0.4816, -0.1760,
         -0.0798, -0.1482, -0.3337, -0.2979,  0.0962,  0.0258,  0.1929, -0.3426,
         -0.1293,  0.1370,  0.2710,  0.1131, -0.5698, -0.1435,  0.7490, -0.2371,
         -0.6792,  0.3736,  0.5656, -0.6819, -0.2948,  0.1339, -0.0458,  0.2073,
          0.0918, -0.7691,  0.0370, -0.3629,  0.9333, -0.2250,  0.0621,  0.1048,
         -0.0550,  0.0235, -0.0307, -0.0465,  0.0809,  0.1269,  0.0036,  0.2237,
          0.1560, -0.0590, -0.1883,  0.0404,  0.0555, -0.0119,  0.1522,  0.0290,
          0.1017,  0.1590, -0.0396,  0.0769, -0.0655, -0.1942, -0.4923, -0.0672,
          0.0888, -0.0269, -0.1373,  0.1377,  0.2043,  0.0048, -0.1971, -0.0245,
         -0.0363, -0.1257,  0.0320,  0.0334, -0.0479,  0.0441, -0.0193, -0.0161,
         -0.2437,  0.1194, -0.0651, -0.3372, -0.1685, -0.1677, -0.2719, -0.2290,
         -0.0572]], device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
328000 特征值优化 tensor(1.4662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7827,  0.0634,  1.0364, -1.2654,  2.0302, -0.7925, -1.0606, -0.7670,
          2.7443,  0.6941,  0.0235, -0.6415, -0.2900,  0.1727,  0.0614, -0.1038,
         -0.3699, -0.2958, -0.7240,  0.3445,  0.5726, -0.1258,  0.6490, -0.8219,
         -0.5043, -0.6447, -0.5851,  0.1989,  0.6326,  0.2748,  0.0948, -0.3719,
         -0.2085,  0.3615,  0.2700, -0.2383, -0.2208, -0.2185,  0.1190,  0.0693,
         -0.0688, -0.6597,  0.5699,  0.0858,  0.3622, -0.0847, -0.2089, -0.0416,
         -0.2771,  0.0357, -0.2289,  0.3687, -0.1184, -0.0560, -0.3227,  0.2639,
         -0.1978, -0.2573, -0.1222,  0.4670, -0.6723,  0.0074,  0.1268, -0.1436,
         -0.0537, -0.0958,  0.0079,  0.0551,  0.1121,  0.0663, -0.0225, -0.2392,
          0.4793, -0.0945,  0.0522, -0.1722,  0.2021, -0.1678, -0.4777, -0.1690,
         -0.0750, -0.1470, -0.3407, -0.2969,  0.1115,  0.0294,  0.1855, -0.3630,
         -0.1283,  0.1501,  0.2612,  0.1235, -0.5718, -0.1344,  0.7486, -0.2301,
         -0.6754,  0.3761,  0.5561, -0.6687, -0.2992,  0.1446, -0.0255,  0.2082,
          0.1003, -0.7660,  0.0351, -0.3485,  0.9078, -0.2225,  0.0628,  0.1042,
         -0.0644,  0.0373, -0.0220, -0.0345,  0.0830,  0.1247,  0.0042,  0.2283,
          0.1457, -0.0516, -0.1885,  0.0419,  0.0440, -0.0178,  0.1605,  0.0301,
          0.0964,  0.1642, -0.0463,  0.0844, -0.0631, -0.2056, -0.4835, -0.0733,
          0.0880, -0.0413, -0.1268,  0.1496,  0.2108,  0.0109, -0.2009, -0.0239,
         -0.0458, -0.1185,  0.0416,  0.0281, -0.0510,  0.0507, -0.0171, -0.0204,
         -0.2408,  0.1281, -0.0813, -0.3351, -0.1618, -0.1579, -0.2692, -0.2389,
         -0.0549]], device='cuda:0') tensor(0.2246, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
329000 特征值优化 tensor(1.4654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.2525e-01,  6.2230e-02,  1.0290e+00, -1.2632e+00,  2.0135e+00,
         -7.9100e-01, -1.0843e+00, -7.8252e-01,  2.7452e+00,  6.9361e-01,
          2.1353e-02, -6.1627e-01, -2.8946e-01,  1.6910e-01,  7.9093e-02,
         -8.1608e-02, -3.8652e-01, -2.9340e-01, -7.2452e-01,  3.5218e-01,
          5.7848e-01, -1.2262e-01,  6.7130e-01, -7.9432e-01, -5.2334e-01,
         -6.4321e-01, -5.6456e-01,  1.9358e-01,  6.3572e-01,  2.5970e-01,
          1.0245e-01, -3.6909e-01, -2.0115e-01,  3.6342e-01,  2.5113e-01,
         -2.4834e-01, -2.1859e-01, -2.2124e-01,  1.2715e-01,  7.7419e-02,
         -6.0656e-02, -6.5804e-01,  5.6707e-01,  8.0000e-02,  3.6963e-01,
         -7.3509e-02, -2.2056e-01, -3.7921e-02, -2.8346e-01,  4.2661e-02,
         -2.2914e-01,  3.6565e-01, -1.1418e-01, -5.6591e-02, -3.2890e-01,
          2.5489e-01, -2.0272e-01, -2.6004e-01, -1.0825e-01,  4.8075e-01,
         -6.6096e-01,  6.3073e-03,  1.1342e-01, -1.6314e-01, -5.7043e-02,
         -7.9950e-02,  1.2465e-02,  4.5213e-02,  1.1264e-01,  6.5529e-02,
         -1.9321e-02, -2.3282e-01,  4.7531e-01, -1.0269e-01,  4.8294e-02,
         -1.8268e-01,  1.9481e-01, -1.6425e-01, -4.6668e-01, -1.8129e-01,
         -6.7498e-02, -1.5084e-01, -3.4534e-01, -2.9946e-01,  1.0442e-01,
          1.7462e-02,  1.8235e-01, -3.5432e-01, -1.5928e-01,  1.4938e-01,
          2.5876e-01,  1.2747e-01, -5.7872e-01, -1.2787e-01,  7.3762e-01,
         -2.3011e-01, -6.8438e-01,  3.7084e-01,  5.6373e-01, -6.7216e-01,
         -3.0242e-01,  1.5056e-01, -7.5040e-03,  2.0059e-01,  9.0737e-02,
         -7.6542e-01,  5.0638e-02, -3.6684e-01,  9.1958e-01, -2.2379e-01,
          6.4876e-02,  1.0501e-01, -7.6091e-02,  2.6626e-02, -1.6993e-02,
         -4.4083e-02,  8.9854e-02,  1.2837e-01,  6.9880e-04,  2.2685e-01,
          1.5103e-01, -4.7770e-02, -1.8582e-01,  3.9412e-02,  4.2672e-02,
         -6.7585e-03,  1.6310e-01,  3.2128e-02,  9.4699e-02,  1.6437e-01,
         -5.5992e-02,  8.5404e-02, -6.3524e-02, -2.1123e-01, -4.7932e-01,
         -7.3939e-02,  1.0169e-01, -4.5045e-02, -1.3250e-01,  1.4384e-01,
          2.0816e-01,  9.1994e-03, -2.0125e-01, -1.3522e-02, -4.4717e-02,
         -1.2721e-01,  3.5999e-02,  1.6512e-02, -5.4015e-02,  5.4018e-02,
         -7.0645e-03, -2.1517e-02, -2.3823e-01,  1.3248e-01, -8.9248e-02,
         -3.3029e-01, -1.4702e-01, -1.5156e-01, -2.7803e-01, -2.3763e-01,
         -5.4090e-02]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
330000 特征值优化 tensor(1.4780, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1130e-01,  5.1708e-02,  1.0402e+00, -1.2688e+00,  2.0372e+00,
         -7.9646e-01, -1.0675e+00, -7.7808e-01,  2.7535e+00,  6.8760e-01,
          2.2540e-02, -6.1855e-01, -2.9876e-01,  1.6973e-01,  1.0166e-01,
         -8.0533e-02, -3.8978e-01, -2.8453e-01, -7.1232e-01,  3.4546e-01,
          5.8040e-01, -1.1703e-01,  6.7596e-01, -7.8221e-01, -5.3114e-01,
         -6.4473e-01, -5.6861e-01,  1.9005e-01,  6.3891e-01,  2.6620e-01,
          9.7980e-02, -3.7244e-01, -2.1356e-01,  3.6310e-01,  2.4241e-01,
         -2.4637e-01, -2.2032e-01, -2.0369e-01,  1.2853e-01,  6.7605e-02,
         -6.2360e-02, -6.5508e-01,  5.7030e-01,  9.5966e-02,  3.6548e-01,
         -7.4003e-02, -2.3456e-01, -3.3729e-02, -2.8587e-01,  4.7407e-02,
         -2.3070e-01,  3.5800e-01, -1.2728e-01, -5.9257e-02, -3.2494e-01,
          2.6306e-01, -2.0107e-01, -2.4153e-01, -1.1340e-01,  4.7721e-01,
         -6.7776e-01,  1.5185e-02,  1.2588e-01, -1.6443e-01, -4.9725e-02,
         -7.8106e-02,  1.3020e-02,  3.7364e-02,  1.1376e-01,  7.0806e-02,
         -1.2363e-02, -2.3284e-01,  4.7563e-01, -1.1234e-01,  4.2065e-02,
         -1.7012e-01,  1.9502e-01, -1.8843e-01, -4.7613e-01, -1.7785e-01,
         -6.6574e-02, -1.4957e-01, -3.4541e-01, -2.8722e-01,  1.0104e-01,
          2.9417e-02,  1.7761e-01, -3.7407e-01, -1.4634e-01,  1.7210e-01,
          2.7097e-01,  1.2445e-01, -5.7663e-01, -1.2811e-01,  7.3299e-01,
         -2.3253e-01, -6.6359e-01,  3.6929e-01,  5.6466e-01, -6.7520e-01,
         -3.0344e-01,  1.5506e-01, -1.8423e-02,  1.9361e-01,  1.0579e-01,
         -7.7105e-01,  3.5669e-02, -3.4478e-01,  8.9781e-01, -2.2125e-01,
          6.4120e-02,  1.1418e-01, -6.9961e-02,  2.2764e-02, -1.3676e-02,
         -3.5249e-02,  8.9713e-02,  1.3007e-01, -1.0256e-03,  2.2552e-01,
          1.4740e-01, -3.9201e-02, -1.8320e-01,  3.4300e-02,  3.2678e-02,
         -2.0703e-02,  1.6460e-01,  4.2216e-02,  8.8703e-02,  1.7047e-01,
         -5.7418e-02,  8.0484e-02, -5.7115e-02, -2.1643e-01, -4.7525e-01,
         -7.6148e-02,  8.8814e-02, -5.6252e-02, -1.2319e-01,  1.5476e-01,
          2.0211e-01, -1.5358e-03, -1.9892e-01, -2.4896e-02, -5.5259e-02,
         -1.1776e-01,  4.7832e-02,  3.1696e-02, -4.8405e-02,  5.2999e-02,
         -1.8626e-02, -2.0836e-02, -2.3573e-01,  1.3107e-01, -9.4247e-02,
         -3.3961e-01, -1.5631e-01, -1.5749e-01, -2.7771e-01, -2.4024e-01,
         -5.4697e-02]], device='cuda:0') tensor(0.2532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
331000 特征值优化 tensor(1.4807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8052,  0.0409,  1.0377, -1.2699,  2.0185, -0.7963, -1.0719, -0.7840,
          2.7730,  0.6928,  0.0193, -0.6229, -0.2929,  0.2010,  0.0938, -0.0855,
         -0.3968, -0.2904, -0.7046,  0.3463,  0.5885, -0.1167,  0.6770, -0.7837,
         -0.5346, -0.6549, -0.5689,  0.1892,  0.6536,  0.2688,  0.0954, -0.3702,
         -0.2099,  0.3578,  0.2436, -0.2510, -0.2166, -0.2089,  0.1256,  0.0689,
         -0.0578, -0.6583,  0.5694,  0.0895,  0.3680, -0.0929, -0.2336, -0.0382,
         -0.2793,  0.0525, -0.2288,  0.3657, -0.1357, -0.0690, -0.3208,  0.2562,
         -0.2075, -0.2560, -0.1063,  0.4788, -0.6745,  0.0071,  0.1304, -0.1509,
         -0.0695, -0.0901,  0.0260,  0.0540,  0.1022,  0.0759, -0.0235, -0.2381,
          0.4789, -0.0973,  0.0487, -0.1662,  0.1982, -0.1602, -0.4706, -0.1759,
         -0.0768, -0.1471, -0.3376, -0.2881,  0.1108,  0.0306,  0.1792, -0.3602,
         -0.1414,  0.1505,  0.2486,  0.1359, -0.5715, -0.1403,  0.7503, -0.2323,
         -0.6718,  0.3763,  0.5435, -0.6469, -0.3004,  0.1665, -0.0186,  0.2056,
          0.1033, -0.7624,  0.0307, -0.3590,  0.8934, -0.2203,  0.0629,  0.1086,
         -0.0648,  0.0399, -0.0214, -0.0351,  0.0935,  0.1181,  0.0044,  0.2336,
          0.1450, -0.0404, -0.1919,  0.0383,  0.0431, -0.0168,  0.1570,  0.0290,
          0.0938,  0.1789, -0.0598,  0.0761, -0.0587, -0.2116, -0.4714, -0.0710,
          0.0885, -0.0520, -0.1234,  0.1479,  0.2145,  0.0124, -0.1957, -0.0069,
         -0.0459, -0.1147,  0.0378,  0.0333, -0.0456,  0.0465, -0.0214, -0.0252,
         -0.2391,  0.1377, -0.0859, -0.3327, -0.1613, -0.1546, -0.2596, -0.2436,
         -0.0446]], device='cuda:0') tensor(0.2302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
332000 特征值优化 tensor(1.4722, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8022,  0.0278,  1.0421, -1.2773,  2.0116, -0.7959, -1.0640, -0.7900,
          2.7721,  0.6989,  0.0220, -0.6190, -0.2956,  0.1889,  0.1096, -0.0745,
         -0.3986, -0.2839, -0.7016,  0.3417,  0.5946, -0.1118,  0.6769, -0.7774,
         -0.5385, -0.6501, -0.5674,  0.1885,  0.6519,  0.2657,  0.0914, -0.3691,
         -0.2108,  0.3626,  0.2397, -0.2499, -0.2177, -0.2075,  0.1300,  0.0784,
         -0.0520, -0.6587,  0.5714,  0.0862,  0.3617, -0.0944, -0.2388, -0.0342,
         -0.2855,  0.0602, -0.2362,  0.3616, -0.1337, -0.0638, -0.3204,  0.2514,
         -0.2016, -0.2406, -0.0999,  0.4880, -0.6771,  0.0119,  0.1257, -0.1528,
         -0.0587, -0.0859,  0.0157,  0.0537,  0.1022,  0.0730, -0.0234, -0.2357,
          0.4786, -0.0951,  0.0434, -0.1687,  0.1959, -0.1568, -0.4604, -0.1726,
         -0.0786, -0.1496, -0.3378, -0.2881,  0.1045,  0.0296,  0.1757, -0.3623,
         -0.1590,  0.1756,  0.2492,  0.1308, -0.5786, -0.1407,  0.7513, -0.2348,
         -0.6735,  0.3697,  0.5416, -0.6522, -0.3174,  0.1643, -0.0161,  0.2091,
          0.0997, -0.7626,  0.0322, -0.3674,  0.8969, -0.2214,  0.0620,  0.1112,
         -0.0745,  0.0390, -0.0127, -0.0336,  0.0931,  0.1256, -0.0045,  0.2333,
          0.1435, -0.0326, -0.1896,  0.0356,  0.0401, -0.0117,  0.1577,  0.0283,
          0.0961,  0.1806, -0.0600,  0.0794, -0.0588, -0.2137, -0.4680, -0.0695,
          0.0956, -0.0517, -0.1214,  0.1529,  0.2039,  0.0068, -0.1850, -0.0038,
         -0.0435, -0.1127,  0.0326,  0.0346, -0.0489,  0.0507, -0.0210, -0.0236,
         -0.2432,  0.1351, -0.0910, -0.3328, -0.1611, -0.1585, -0.2627, -0.2409,
         -0.0419]], device='cuda:0') tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
333000 特征值优化 tensor(1.4262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0496e-01,  3.1488e-02,  1.0433e+00, -1.2732e+00,  2.0204e+00,
         -8.0833e-01, -1.0833e+00, -7.7600e-01,  2.7935e+00,  6.9133e-01,
          2.1118e-02, -6.1223e-01, -2.9213e-01,  1.8479e-01,  1.1356e-01,
         -6.4463e-02, -4.0469e-01, -2.8803e-01, -7.0888e-01,  3.3837e-01,
          6.0292e-01, -1.2364e-01,  6.8405e-01, -7.5716e-01, -5.5059e-01,
         -6.4380e-01, -5.5659e-01,  1.9296e-01,  6.4310e-01,  2.6545e-01,
          9.3309e-02, -3.6475e-01, -2.1516e-01,  3.5895e-01,  2.2509e-01,
         -2.4977e-01, -2.2310e-01, -1.9609e-01,  1.3140e-01,  5.5787e-02,
         -5.6024e-02, -6.5374e-01,  5.6414e-01,  8.5700e-02,  3.6457e-01,
         -8.7357e-02, -2.3849e-01, -3.2123e-02, -2.8838e-01,  5.4827e-02,
         -2.2676e-01,  3.5957e-01, -1.3147e-01, -5.3934e-02, -3.3175e-01,
          2.6337e-01, -2.0698e-01, -2.4313e-01, -1.1054e-01,  4.7943e-01,
         -6.5989e-01,  1.1675e-02,  1.2929e-01, -1.7644e-01, -5.3525e-02,
         -7.1424e-02,  2.0085e-02,  3.4185e-02,  1.1790e-01,  6.9306e-02,
         -1.0512e-02, -2.3045e-01,  4.7544e-01, -1.1259e-01,  4.5654e-02,
         -1.7615e-01,  1.9294e-01, -1.7697e-01, -4.7729e-01, -1.7348e-01,
         -6.2864e-02, -1.4259e-01, -3.4868e-01, -2.9093e-01,  1.1028e-01,
          2.4852e-02,  1.6710e-01, -3.6937e-01, -1.4610e-01,  1.7207e-01,
          2.5135e-01,  1.3600e-01, -5.7539e-01, -1.2651e-01,  7.3815e-01,
         -2.3247e-01, -6.6660e-01,  3.7299e-01,  5.5876e-01, -6.5238e-01,
         -2.9964e-01,  1.7182e-01, -2.7731e-02,  1.9345e-01,  1.0665e-01,
         -7.6859e-01,  4.8713e-02, -3.5213e-01,  8.8934e-01, -2.2477e-01,
          6.1082e-02,  1.1233e-01, -7.3462e-02,  1.4209e-02, -1.1081e-02,
         -2.8241e-02,  9.4887e-02,  1.3537e-01,  1.5553e-04,  2.2885e-01,
          1.4830e-01, -4.7913e-02, -1.7797e-01,  4.0301e-02,  2.8642e-02,
         -1.8353e-02,  1.7071e-01,  3.1480e-02,  8.3791e-02,  1.6938e-01,
         -5.9553e-02,  8.8915e-02, -6.1419e-02, -2.2498e-01, -4.7305e-01,
         -7.9815e-02,  9.6905e-02, -6.5098e-02, -1.2202e-01,  1.4025e-01,
          2.1170e-01,  4.9470e-03, -2.0231e-01, -1.8539e-02, -5.0725e-02,
         -1.1747e-01,  4.3591e-02,  2.7015e-02, -5.3673e-02,  5.3958e-02,
         -1.2963e-02, -2.7002e-02, -2.2296e-01,  1.3596e-01, -1.0020e-01,
         -3.3726e-01, -1.5059e-01, -1.5623e-01, -2.7259e-01, -2.3833e-01,
         -5.1289e-02]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
334000 特征值优化 tensor(1.4424, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8071,  0.0137,  1.0520, -1.2797,  2.0150, -0.8086, -1.0919, -0.7803,
          2.7963,  0.6965,  0.0206, -0.6500, -0.2804,  0.2029,  0.0865, -0.0611,
         -0.4080, -0.2890, -0.6944,  0.3439,  0.5858, -0.1124,  0.6777, -0.7686,
         -0.5496, -0.6511, -0.5427,  0.1915,  0.6513,  0.2740,  0.0940, -0.3726,
         -0.2188,  0.3487,  0.2333, -0.2475, -0.2294, -0.1936,  0.1229,  0.0640,
         -0.0508, -0.6537,  0.5708,  0.0954,  0.3575, -0.0869, -0.2371, -0.0224,
         -0.2953,  0.0517, -0.2404,  0.3775, -0.1444, -0.0548, -0.3181,  0.2595,
         -0.2109, -0.2421, -0.1102,  0.4857, -0.6701,  0.0149,  0.1340, -0.1454,
         -0.0786, -0.0869,  0.0579,  0.0431,  0.1111,  0.0745, -0.0179, -0.2381,
          0.4816, -0.1065,  0.0402, -0.1668,  0.1898, -0.1665, -0.4627, -0.1770,
         -0.0715, -0.1467, -0.3452, -0.2882,  0.0916,  0.0219,  0.1770, -0.3691,
         -0.1559,  0.1762,  0.2452,  0.1394, -0.5793, -0.1389,  0.7470, -0.2426,
         -0.6642,  0.3646,  0.5414, -0.6628, -0.3150,  0.1741, -0.0206,  0.1882,
          0.1078, -0.7560,  0.0418, -0.3525,  0.8869, -0.2209,  0.0632,  0.1157,
         -0.0684,  0.0380, -0.0359, -0.0364,  0.0966,  0.1219,  0.0336,  0.2334,
          0.1583, -0.0429, -0.1797,  0.0372,  0.0380, -0.0114,  0.1565,  0.0297,
          0.0917,  0.1827, -0.0648,  0.0836, -0.0529, -0.2168, -0.4762, -0.0708,
          0.0909, -0.0533, -0.1296,  0.1446,  0.1983,  0.0031, -0.1904, -0.0054,
         -0.0478, -0.1241,  0.0308,  0.0265, -0.0440,  0.0512, -0.0218, -0.0203,
         -0.2391,  0.1333, -0.0946, -0.3345, -0.1612, -0.1585, -0.2586, -0.2426,
         -0.0476]], device='cuda:0') tensor(0.2150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
335000 特征值优化 tensor(1.4624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7004,  0.0236,  1.0354, -1.2575,  1.9947, -0.7918, -1.0754, -0.7693,
          2.8037,  0.6963,  0.0156, -0.5886, -0.2839,  0.1890,  0.1147, -0.0647,
         -0.4008, -0.2858, -0.7003,  0.3443,  0.5874, -0.1156,  0.6793, -0.7497,
         -0.5408, -0.6521, -0.5684,  0.1971,  0.6493,  0.3015,  0.0849, -0.3575,
         -0.2108,  0.3384,  0.2321, -0.2451, -0.2203, -0.2019,  0.1370,  0.0699,
         -0.0580, -0.6617,  0.5768,  0.0832,  0.3328, -0.0808, -0.2383, -0.0369,
         -0.2933,  0.0613, -0.2478,  0.3714, -0.1295, -0.0556, -0.3218,  0.2628,
         -0.2155, -0.2404, -0.1161,  0.5009, -0.6570,  0.0311,  0.1348, -0.1570,
         -0.0576, -0.0789,  0.0032,  0.0348,  0.0994,  0.0799, -0.0118, -0.2378,
          0.4785, -0.1027,  0.0440, -0.1639,  0.1885, -0.1797, -0.4653, -0.1794,
         -0.0719, -0.1515, -0.3443, -0.2878,  0.1023,  0.0084,  0.1783, -0.3574,
         -0.1529,  0.1472,  0.2487,  0.1223, -0.5803, -0.1281,  0.7483, -0.2355,
         -0.6642,  0.3728,  0.5359, -0.6796, -0.2963,  0.1712, -0.0034,  0.1961,
          0.1005, -0.7396,  0.0472, -0.3585,  0.8822, -0.2252,  0.0648,  0.1119,
         -0.0811,  0.0296, -0.0156, -0.0322,  0.0991,  0.1261, -0.0207,  0.2228,
          0.1423, -0.0286, -0.1859,  0.0358,  0.0377, -0.0182,  0.1546,  0.0319,
          0.0918,  0.1810, -0.0564,  0.0786, -0.0502, -0.2189, -0.4795, -0.0754,
          0.1020, -0.0473, -0.1278,  0.1372,  0.2032,  0.0274, -0.1837, -0.0262,
         -0.0442, -0.1190,  0.0467,  0.0341, -0.0407,  0.0459, -0.0249, -0.0251,
         -0.2366,  0.1479, -0.0940, -0.3224, -0.1477, -0.1569, -0.2627, -0.2336,
         -0.0462]], device='cuda:0') tensor(0.3292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
336000 特征值优化 tensor(1.4616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6666,  0.0239,  1.0410, -1.2478,  1.9675, -0.7789, -1.0659, -0.7475,
          2.8042,  0.7057,  0.0187, -0.6071, -0.3055,  0.1814,  0.0973, -0.0674,
         -0.4038, -0.2831, -0.7014,  0.3336,  0.5924, -0.1141,  0.6728, -0.7442,
         -0.5339, -0.6486, -0.5610,  0.1906,  0.6513,  0.3054,  0.0775, -0.3645,
         -0.1974,  0.3315,  0.2221, -0.2457, -0.2191, -0.1996,  0.1360,  0.0623,
         -0.0549, -0.6594,  0.5659,  0.0798,  0.3345, -0.0757, -0.2511, -0.0293,
         -0.2950,  0.0653, -0.2424,  0.3646, -0.1284, -0.0509, -0.3266,  0.2821,
         -0.2181, -0.2478, -0.1017,  0.4924, -0.6687,  0.0220,  0.1302, -0.1511,
         -0.0598, -0.0777,  0.0157,  0.0317,  0.1016,  0.0699, -0.0059, -0.2358,
          0.4797, -0.1048,  0.0467, -0.1752,  0.1907, -0.1647, -0.4660, -0.1848,
         -0.0704, -0.1549, -0.3410, -0.2928,  0.1255,  0.0186,  0.1766, -0.3426,
         -0.1621,  0.1312,  0.2519,  0.1247, -0.5795, -0.1311,  0.7221, -0.2245,
         -0.6675,  0.3795,  0.5414, -0.6750, -0.3145,  0.1560, -0.0045,  0.2021,
          0.0955, -0.7578,  0.0466, -0.3717,  0.9107, -0.2229,  0.0658,  0.1105,
         -0.0775,  0.0264, -0.0260, -0.0264,  0.0916,  0.1246, -0.0112,  0.2206,
          0.1523, -0.0303, -0.1901,  0.0366,  0.0355, -0.0133,  0.1580,  0.0300,
          0.0864,  0.1761, -0.0521,  0.0795, -0.0588, -0.2181, -0.4830, -0.0690,
          0.1019, -0.0550, -0.1305,  0.1406,  0.2054,  0.0062, -0.1906, -0.0163,
         -0.0497, -0.1259,  0.0457,  0.0198, -0.0451,  0.0452, -0.0155, -0.0287,
         -0.2392,  0.1489, -0.0985, -0.3317, -0.1476, -0.1535, -0.2632, -0.2394,
         -0.0430]], device='cuda:0') tensor(0.2129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
337000 特征值优化 tensor(1.4601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6496,  0.0279,  1.0396, -1.2500,  1.9494, -0.7752, -1.0668, -0.7424,
          2.8085,  0.7055,  0.0194, -0.6010, -0.3048,  0.1821,  0.0943, -0.0685,
         -0.4008, -0.2795, -0.7038,  0.3276,  0.5931, -0.1157,  0.6766, -0.7290,
         -0.5348, -0.6478, -0.5667,  0.1990,  0.6593,  0.3113,  0.0734, -0.3654,
         -0.1954,  0.3370,  0.2238, -0.2438, -0.2110, -0.2124,  0.1444,  0.0689,
         -0.0587, -0.6597,  0.5637,  0.0789,  0.3239, -0.0768, -0.2550, -0.0308,
         -0.2946,  0.0630, -0.2396,  0.3664, -0.1312, -0.0475, -0.3234,  0.2896,
         -0.2198, -0.2502, -0.1020,  0.4921, -0.6707,  0.0241,  0.1260, -0.1489,
         -0.0616, -0.0772,  0.0150,  0.0307,  0.0985,  0.0730, -0.0052, -0.2366,
          0.4781, -0.1034,  0.0513, -0.1728,  0.1948, -0.1604, -0.4614, -0.1819,
         -0.0728, -0.1549, -0.3382, -0.2929,  0.1293,  0.0182,  0.1799, -0.3348,
         -0.1589,  0.1137,  0.2548,  0.1228, -0.5783, -0.1314,  0.7249, -0.2246,
         -0.6696,  0.3936,  0.5450, -0.6744, -0.3114,  0.1565, -0.0121,  0.2035,
          0.0907, -0.7510,  0.0450, -0.3701,  0.9032, -0.2263,  0.0652,  0.1037,
         -0.0791,  0.0249, -0.0252, -0.0304,  0.0936,  0.1205, -0.0131,  0.2241,
          0.1511, -0.0299, -0.1910,  0.0401,  0.0346, -0.0138,  0.1568,  0.0333,
          0.0838,  0.1756, -0.0498,  0.0785, -0.0592, -0.2211, -0.4822, -0.0639,
          0.1050, -0.0563, -0.1286,  0.1399,  0.2132,  0.0118, -0.1916, -0.0159,
         -0.0440, -0.1276,  0.0432,  0.0127, -0.0454,  0.0507, -0.0136, -0.0315,
         -0.2428,  0.1493, -0.0953, -0.3315, -0.1417, -0.1497, -0.2647, -0.2384,
         -0.0405]], device='cuda:0') tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
338000 特征值优化 tensor(1.4590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6453,  0.0320,  1.0378, -1.2539,  1.9488, -0.7814, -1.0579, -0.7321,
          2.8013,  0.7155,  0.0252, -0.6121, -0.3042,  0.1830,  0.0926, -0.0639,
         -0.4141, -0.2850, -0.7000,  0.3183,  0.5948, -0.1123,  0.6745, -0.7300,
         -0.5325, -0.6509, -0.5751,  0.2062,  0.6622,  0.3013,  0.0705, -0.3537,
         -0.2004,  0.3293,  0.2298, -0.2404, -0.2173, -0.2063,  0.1450,  0.0567,
         -0.0614, -0.6587,  0.5705,  0.0815,  0.3243, -0.0781, -0.2508, -0.0340,
         -0.2925,  0.0622, -0.2405,  0.3631, -0.1233, -0.0452, -0.3216,  0.2931,
         -0.2205, -0.2470, -0.0994,  0.4875, -0.6733,  0.0271,  0.1309, -0.1459,
         -0.0588, -0.0762,  0.0136,  0.0318,  0.1050,  0.0769, -0.0052, -0.2441,
          0.4815, -0.1067,  0.0501, -0.1721,  0.1947, -0.1722, -0.4766, -0.1767,
         -0.0706, -0.1520, -0.3360, -0.2886,  0.1202,  0.0236,  0.1791, -0.3305,
         -0.1571,  0.1302,  0.2472,  0.1306, -0.5805, -0.1396,  0.7385, -0.2320,
         -0.6621,  0.3927,  0.5376, -0.6544, -0.2953,  0.1640, -0.0303,  0.2068,
          0.0829, -0.7580,  0.0406, -0.3698,  0.9092, -0.2255,  0.0648,  0.1073,
         -0.0716,  0.0276, -0.0298, -0.0249,  0.0896,  0.1227, -0.0143,  0.2235,
          0.1513, -0.0271, -0.1911,  0.0415,  0.0330, -0.0193,  0.1550,  0.0259,
          0.0868,  0.1784, -0.0445,  0.0795, -0.0560, -0.2215, -0.4852, -0.0713,
          0.1069, -0.0576, -0.1312,  0.1313,  0.2062,  0.0155, -0.1962, -0.0232,
         -0.0530, -0.1259,  0.0444,  0.0270, -0.0412,  0.0408, -0.0194, -0.0279,
         -0.2351,  0.1358, -0.0900, -0.3353, -0.1429, -0.1571, -0.2616, -0.2262,
         -0.0376]], device='cuda:0') tensor(0.2540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
339000 特征值优化 tensor(1.4457, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6652,  0.0151,  1.0535, -1.2646,  1.9416, -0.7781, -1.0490, -0.7332,
          2.8018,  0.7145,  0.0272, -0.6201, -0.3139,  0.2023,  0.0932, -0.0595,
         -0.4235, -0.2857, -0.6929,  0.3108,  0.5939, -0.1029,  0.6660, -0.7403,
         -0.5262, -0.6526, -0.5770,  0.2012,  0.6784,  0.2992,  0.0690, -0.3613,
         -0.1860,  0.3145,  0.2338, -0.2324, -0.2092, -0.2177,  0.1339,  0.0560,
         -0.0461, -0.6561,  0.5673,  0.0909,  0.3282, -0.0860, -0.2531, -0.0346,
         -0.2857,  0.0648, -0.2473,  0.3639, -0.1258, -0.0565, -0.3107,  0.3004,
         -0.2042, -0.2447, -0.0950,  0.4809, -0.6865,  0.0250,  0.1239, -0.1330,
         -0.0586, -0.0810,  0.0135,  0.0279,  0.1122,  0.0806, -0.0136, -0.2575,
          0.4897, -0.0900,  0.0524, -0.1641,  0.1948, -0.1488, -0.4596, -0.1802,
         -0.0869, -0.1590, -0.3255, -0.2865,  0.1266,  0.0416,  0.1889, -0.3275,
         -0.1438,  0.1087,  0.2528,  0.1307, -0.5676, -0.1450,  0.7245, -0.2275,
         -0.6636,  0.4106,  0.5278, -0.6556, -0.3193,  0.1496, -0.0241,  0.2204,
          0.0734, -0.7531,  0.0337, -0.3696,  0.9209, -0.2246,  0.0652,  0.1112,
         -0.0692,  0.0323, -0.0357, -0.0368,  0.0826,  0.1132, -0.0135,  0.2300,
          0.1515, -0.0288, -0.1892,  0.0390,  0.0400, -0.0125,  0.1483,  0.0184,
          0.0897,  0.1854, -0.0527,  0.0694, -0.0605, -0.2141, -0.4914, -0.0635,
          0.1030, -0.0436, -0.1407,  0.1250,  0.2166,  0.0307, -0.2041, -0.0075,
         -0.0415, -0.1185,  0.0392,  0.0207, -0.0402,  0.0410, -0.0228, -0.0299,
         -0.2549,  0.1344, -0.0845, -0.3297, -0.1572, -0.1637, -0.2434, -0.2396,
         -0.0311]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
340000 特征值优化 tensor(1.4253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6167,  0.0351,  1.0314, -1.2476,  1.9356, -0.7577, -1.0366, -0.7310,
          2.8143,  0.7133,  0.0280, -0.6250, -0.3159,  0.2041,  0.0837, -0.0687,
         -0.4066, -0.2814, -0.6934,  0.3082,  0.5925, -0.1025,  0.6732, -0.7300,
         -0.5255, -0.6557, -0.5818,  0.2004,  0.6745,  0.3197,  0.0747, -0.3617,
         -0.1834,  0.3269,  0.2247, -0.2387, -0.2124, -0.2127,  0.1409,  0.0558,
         -0.0525, -0.6582,  0.5682,  0.0834,  0.3227, -0.0813, -0.2559, -0.0331,
         -0.2862,  0.0609, -0.2516,  0.3752, -0.1243, -0.0631, -0.3117,  0.2985,
         -0.2117, -0.2475, -0.0950,  0.4884, -0.6793,  0.0229,  0.1314, -0.1239,
         -0.0635, -0.0900,  0.0168,  0.0416,  0.0953,  0.0795, -0.0139, -0.2575,
          0.4847, -0.0954,  0.0575, -0.1656,  0.2011, -0.1466, -0.4609, -0.1822,
         -0.0836, -0.1593, -0.3242, -0.2849,  0.1397,  0.0455,  0.1766, -0.3412,
         -0.1619,  0.1187,  0.2612,  0.1148, -0.5625, -0.1476,  0.7366, -0.2249,
         -0.6708,  0.4009,  0.5341, -0.6615, -0.3063,  0.1616, -0.0364,  0.2091,
          0.0746, -0.7379,  0.0417, -0.3731,  0.9073, -0.2218,  0.0642,  0.1079,
         -0.0605,  0.0515, -0.0346, -0.0337,  0.0920,  0.1008, -0.0183,  0.2262,
          0.1525, -0.0131, -0.1996,  0.0367,  0.0409, -0.0178,  0.1468,  0.0244,
          0.0935,  0.1899, -0.0544,  0.0667, -0.0548, -0.2102, -0.4891, -0.0641,
          0.1038, -0.0553, -0.1317,  0.1367,  0.2214,  0.0216, -0.1970, -0.0090,
         -0.0395, -0.1289,  0.0439,  0.0289, -0.0343,  0.0322, -0.0292, -0.0275,
         -0.2500,  0.1435, -0.0844, -0.3286, -0.1509, -0.1626, -0.2433, -0.2434,
         -0.0308]], device='cuda:0') tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
341000 特征值优化 tensor(1.4454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6537,  0.0290,  1.0368, -1.2503,  1.9310, -0.7756, -1.0468, -0.7015,
          2.8156,  0.7156,  0.0328, -0.6127, -0.3001,  0.1843,  0.0840, -0.0492,
         -0.4150, -0.2761, -0.6999,  0.3047,  0.5990, -0.1091,  0.6713, -0.7238,
         -0.5275, -0.6473, -0.5683,  0.2110,  0.6703,  0.3128,  0.0654, -0.3647,
         -0.1963,  0.3266,  0.2288, -0.2408, -0.2146, -0.2107,  0.1387,  0.0624,
         -0.0473, -0.6588,  0.5761,  0.0857,  0.3223, -0.0809, -0.2575, -0.0337,
         -0.2958,  0.0672, -0.2468,  0.3672, -0.1334, -0.0467, -0.3200,  0.3011,
         -0.2256, -0.2452, -0.1064,  0.4896, -0.6812,  0.0253,  0.1272, -0.1433,
         -0.0605, -0.0802,  0.0230,  0.0306,  0.1004,  0.0779, -0.0067, -0.2511,
          0.4825, -0.0989,  0.0509, -0.1719,  0.1938, -0.1621, -0.4690, -0.1820,
         -0.0785, -0.1580, -0.3312, -0.2850,  0.1279,  0.0257,  0.1848, -0.3388,
         -0.1579,  0.1286,  0.2552,  0.1229, -0.5746, -0.1423,  0.7393, -0.2322,
         -0.6611,  0.3880,  0.5116, -0.6600, -0.3003,  0.1549, -0.0261,  0.2073,
          0.0849, -0.7478,  0.0379, -0.3679,  0.9115, -0.2238,  0.0636,  0.1078,
         -0.0732,  0.0249, -0.0344, -0.0282,  0.0891,  0.1201, -0.0105,  0.2163,
          0.1549, -0.0189, -0.1926,  0.0400,  0.0338, -0.0150,  0.1492,  0.0285,
          0.0886,  0.1784, -0.0482,  0.0783, -0.0566, -0.2176, -0.4876, -0.0617,
          0.1084, -0.0481, -0.1280,  0.1347,  0.2102,  0.0171, -0.1986, -0.0135,
         -0.0488, -0.1256,  0.0395,  0.0244, -0.0393,  0.0357, -0.0266, -0.0257,
         -0.2453,  0.1372, -0.0889, -0.3360, -0.1425, -0.1594, -0.2544, -0.2329,
         -0.0333]], device='cuda:0') tensor(0.2380, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
342000 特征值优化 tensor(1.4294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.3567e-01,  2.7301e-02,  1.0282e+00, -1.2563e+00,  1.9258e+00,
         -7.6273e-01, -1.0450e+00, -6.8741e-01,  2.8358e+00,  7.1163e-01,
          2.9390e-02, -6.0936e-01, -3.0244e-01,  1.8026e-01,  8.9351e-02,
         -3.5018e-02, -4.2499e-01, -2.7186e-01, -7.0593e-01,  2.9981e-01,
          6.1155e-01, -1.2067e-01,  6.8919e-01, -7.1181e-01, -5.3627e-01,
         -6.3738e-01, -5.5478e-01,  2.1638e-01,  6.6178e-01,  3.1290e-01,
          5.6331e-02, -3.5724e-01, -1.9688e-01,  3.1508e-01,  2.2702e-01,
         -2.4347e-01, -2.1361e-01, -2.0255e-01,  1.3980e-01,  5.0371e-02,
         -5.2237e-02, -6.5260e-01,  5.6171e-01,  7.3718e-02,  3.1715e-01,
         -8.1106e-02, -2.6122e-01, -3.4647e-02, -2.9342e-01,  7.4022e-02,
         -2.3631e-01,  3.6621e-01, -1.3051e-01, -4.1297e-02, -3.3019e-01,
          3.0819e-01, -2.2011e-01, -2.4876e-01, -1.0567e-01,  4.8130e-01,
         -6.7598e-01,  2.8523e-02,  1.2612e-01, -1.4602e-01, -5.7053e-02,
         -6.5793e-02,  9.2729e-03,  1.4782e-02,  1.1485e-01,  8.0905e-02,
         -2.8823e-04, -2.4091e-01,  4.7993e-01, -1.1018e-01,  4.8273e-02,
         -1.8502e-01,  1.9438e-01, -1.6953e-01, -4.7726e-01, -1.7369e-01,
         -6.3071e-02, -1.5298e-01, -3.4470e-01, -2.9098e-01,  1.4312e-01,
          3.7424e-02,  1.7523e-01, -3.2932e-01, -1.3937e-01,  1.1928e-01,
          2.5957e-01,  1.2075e-01, -5.7978e-01, -1.3332e-01,  7.3949e-01,
         -2.2760e-01, -6.6723e-01,  4.0532e-01,  5.2925e-01, -6.5585e-01,
         -3.0558e-01,  1.5386e-01, -4.6521e-02,  2.0852e-01,  8.5696e-02,
         -7.5329e-01,  5.0207e-02, -3.6917e-01,  9.1506e-01, -2.2516e-01,
          6.3237e-02,  9.9539e-02, -7.0044e-02,  2.3630e-02, -2.2760e-02,
         -1.9258e-02,  8.9922e-02,  1.2401e-01, -2.2822e-02,  2.1941e-01,
          1.5552e-01, -3.1654e-02, -1.8498e-01,  4.2520e-02,  2.4327e-02,
         -1.8893e-02,  1.5792e-01,  1.6495e-02,  8.4603e-02,  1.7072e-01,
         -3.7868e-02,  8.4000e-02, -6.3001e-02, -2.2662e-01, -4.7934e-01,
         -6.4183e-02,  9.9883e-02, -6.5162e-02, -1.3260e-01,  1.2612e-01,
          2.1939e-01,  3.4870e-03, -1.9084e-01, -2.5626e-02, -5.0650e-02,
         -1.2171e-01,  5.7912e-02,  1.4486e-02, -4.3200e-02,  4.3245e-02,
         -1.6980e-02, -3.1006e-02, -2.3147e-01,  1.4105e-01, -1.0384e-01,
         -3.3829e-01, -1.3337e-01, -1.5691e-01, -2.5649e-01, -2.2931e-01,
         -4.8709e-02]], device='cuda:0') tensor(0.2239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
343000 特征值优化 tensor(1.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6252,  0.0255,  1.0338, -1.2623,  1.9195, -0.7740, -1.0407, -0.6937,
          2.8224,  0.7156,  0.0306, -0.6094, -0.3028,  0.1973,  0.0871, -0.0483,
         -0.4155, -0.2804, -0.6922,  0.2940,  0.5911, -0.1069,  0.6843, -0.7167,
         -0.5300, -0.6645, -0.5759,  0.2122,  0.6799,  0.3175,  0.0602, -0.3576,
         -0.1818,  0.3272,  0.2321, -0.2372, -0.2129, -0.2148,  0.1382,  0.0519,
         -0.0512, -0.6581,  0.5649,  0.0747,  0.3202, -0.0805, -0.2550, -0.0383,
         -0.2824,  0.0655, -0.2504,  0.3712, -0.1307, -0.0569, -0.3154,  0.2949,
         -0.2260, -0.2432, -0.0970,  0.4857, -0.6904,  0.0258,  0.1277, -0.1402,
         -0.0631, -0.0730,  0.0222,  0.0266,  0.1085,  0.0825, -0.0103, -0.2554,
          0.4827, -0.0953,  0.0558, -0.1678,  0.1976, -0.1506, -0.4677, -0.1856,
         -0.0813, -0.1570, -0.3290, -0.2857,  0.1385,  0.0443,  0.1852, -0.3375,
         -0.1594,  0.1186,  0.2491,  0.1293, -0.5641, -0.1521,  0.7289, -0.2181,
         -0.6634,  0.4040,  0.5355, -0.6603, -0.2873,  0.1605, -0.0363,  0.2199,
          0.0803, -0.7425,  0.0408, -0.3760,  0.9251, -0.2229,  0.0641,  0.1002,
         -0.0677,  0.0355, -0.0409, -0.0267,  0.0876,  0.1135, -0.0183,  0.2241,
          0.1543, -0.0205, -0.1916,  0.0403,  0.0407, -0.0181,  0.1478,  0.0142,
          0.0902,  0.1842, -0.0495,  0.0713, -0.0591, -0.2169, -0.4887, -0.0647,
          0.0936, -0.0536, -0.1240,  0.1303,  0.2176,  0.0269, -0.1993, -0.0131,
         -0.0417, -0.1241,  0.0425,  0.0213, -0.0335,  0.0377, -0.0333, -0.0332,
         -0.2404,  0.1431, -0.0878, -0.3322, -0.1468, -0.1659, -0.2444, -0.2343,
         -0.0376]], device='cuda:0') tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
344000 特征值优化 tensor(1.4410, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6350,  0.0331,  1.0331, -1.2600,  1.9248, -0.7725, -1.0507, -0.6800,
          2.8291,  0.7202,  0.0303, -0.6070, -0.2895,  0.1947,  0.0928, -0.0441,
         -0.4127, -0.2726, -0.6980,  0.2910,  0.5934, -0.1150,  0.6868, -0.7050,
         -0.5262, -0.6552, -0.5634,  0.2221,  0.6766,  0.3163,  0.0684, -0.3624,
         -0.1857,  0.3123,  0.2336, -0.2379, -0.2129, -0.2088,  0.1427,  0.0523,
         -0.0479, -0.6563,  0.5702,  0.0830,  0.3195, -0.0867, -0.2587, -0.0390,
         -0.2793,  0.0638, -0.2484,  0.3735, -0.1385, -0.0471, -0.3204,  0.3053,
         -0.2205, -0.2418, -0.1046,  0.4912, -0.6738,  0.0244,  0.1278, -0.1474,
         -0.0630, -0.0768,  0.0280,  0.0284,  0.1054,  0.0778, -0.0073, -0.2529,
          0.4862, -0.0978,  0.0529, -0.1725,  0.1961, -0.1499, -0.4647, -0.1901,
         -0.0751, -0.1591, -0.3334, -0.2924,  0.1299,  0.0356,  0.1813, -0.3288,
         -0.1561,  0.1131,  0.2524,  0.1226, -0.5720, -0.1408,  0.7466, -0.2353,
         -0.6634,  0.4021,  0.5250, -0.6630, -0.2958,  0.1543, -0.0383,  0.2037,
          0.0888, -0.7335,  0.0469, -0.3742,  0.9152, -0.2252,  0.0636,  0.1070,
         -0.0729,  0.0205, -0.0314, -0.0279,  0.0980,  0.1113, -0.0102,  0.2222,
          0.1575, -0.0117, -0.1918,  0.0439,  0.0346, -0.0069,  0.1486,  0.0203,
          0.0889,  0.1821, -0.0486,  0.0768, -0.0576, -0.2162, -0.4924, -0.0569,
          0.1092, -0.0506, -0.1266,  0.1293,  0.2223,  0.0174, -0.1979, -0.0084,
         -0.0383, -0.1328,  0.0401,  0.0172, -0.0352,  0.0357, -0.0242, -0.0352,
         -0.2412,  0.1390, -0.0861, -0.3365, -0.1396, -0.1566, -0.2506, -0.2363,
         -0.0376]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
345000 特征值优化 tensor(1.4067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6170,  0.0327,  1.0249, -1.2500,  1.9266, -0.7838, -1.0300, -0.6886,
          2.8249,  0.7141,  0.0310, -0.6103, -0.3029,  0.1980,  0.1029, -0.0437,
         -0.4158, -0.2748, -0.6927,  0.2965,  0.5983, -0.1065,  0.6700, -0.7185,
         -0.5313, -0.6498, -0.5713,  0.2170,  0.6848,  0.3204,  0.0569, -0.3680,
         -0.2001,  0.3328,  0.2202, -0.2413, -0.2123, -0.2245,  0.1444,  0.0695,
         -0.0573, -0.6571,  0.5684,  0.0972,  0.3123, -0.0917, -0.2643, -0.0367,
         -0.2867,  0.0790, -0.2542,  0.3736, -0.1255, -0.0538, -0.3093,  0.3096,
         -0.2187, -0.2259, -0.1173,  0.5028, -0.6788,  0.0272,  0.1319, -0.1361,
         -0.0461, -0.0919,  0.0067,  0.0411,  0.0975,  0.0800, -0.0099, -0.2636,
          0.4920, -0.0833,  0.0529, -0.1666,  0.2022, -0.1436, -0.4668, -0.1834,
         -0.0824, -0.1591, -0.3215, -0.2817,  0.1238,  0.0373,  0.1878, -0.3340,
         -0.1631,  0.1341,  0.2673,  0.1094, -0.5647, -0.1544,  0.7403, -0.2269,
         -0.6670,  0.4089,  0.5062, -0.6599, -0.2990,  0.1601, -0.0370,  0.2076,
          0.0687, -0.7270,  0.0488, -0.3725,  0.9049, -0.2229,  0.0630,  0.1009,
         -0.0693,  0.0301, -0.0195, -0.0196,  0.0803,  0.1029, -0.0288,  0.2225,
          0.1530,  0.0042, -0.2015,  0.0413,  0.0438, -0.0164,  0.1421,  0.0233,
          0.0964,  0.1910, -0.0477,  0.0733, -0.0562, -0.2122, -0.4870, -0.0590,
          0.0993, -0.0472, -0.1354,  0.1326,  0.2159,  0.0223, -0.1900, -0.0030,
         -0.0449, -0.1209,  0.0418,  0.0382, -0.0345,  0.0221, -0.0245, -0.0353,
         -0.2531,  0.1301, -0.0772, -0.3264, -0.1447, -0.1653, -0.2445, -0.2297,
         -0.0264]], device='cuda:0') tensor(0.3163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
346000 特征值优化 tensor(1.4595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.1384e-01,  2.4648e-02,  1.0411e+00, -1.2661e+00,  1.9114e+00,
         -7.7812e-01, -1.0254e+00, -6.7660e-01,  2.8395e+00,  7.1519e-01,
          3.1221e-02, -6.2066e-01, -2.9979e-01,  1.8162e-01,  8.8693e-02,
         -3.2426e-02, -4.1261e-01, -2.7399e-01, -7.0060e-01,  2.8960e-01,
          6.0015e-01, -1.1774e-01,  6.8351e-01, -7.0271e-01, -5.3395e-01,
         -6.4574e-01, -5.6954e-01,  2.1952e-01,  6.7364e-01,  3.1502e-01,
          5.4594e-02, -3.6277e-01, -1.9077e-01,  3.2648e-01,  2.2933e-01,
         -2.3591e-01, -2.1073e-01, -2.2113e-01,  1.4559e-01,  5.8684e-02,
         -5.3321e-02, -6.5807e-01,  5.6770e-01,  8.3034e-02,  3.1386e-01,
         -8.9489e-02, -2.5974e-01, -3.9809e-02, -2.8341e-01,  7.2041e-02,
         -2.4627e-01,  3.6620e-01, -1.3348e-01, -4.4279e-02, -3.1819e-01,
          3.1317e-01, -2.2334e-01, -2.4052e-01, -1.0022e-01,  4.9052e-01,
         -6.8056e-01,  1.6990e-02,  1.2705e-01, -1.4272e-01, -6.0905e-02,
         -7.1132e-02,  1.9623e-02,  2.2553e-02,  1.0513e-01,  8.3988e-02,
          9.0019e-04, -2.5131e-01,  4.8213e-01, -9.6177e-02,  5.8438e-02,
         -1.7219e-01,  1.9766e-01, -1.4278e-01, -4.6999e-01, -1.8131e-01,
         -7.2854e-02, -1.6096e-01, -3.3301e-01, -2.8294e-01,  1.3470e-01,
          4.7272e-02,  1.8537e-01, -3.1900e-01, -1.5024e-01,  1.1504e-01,
          2.4589e-01,  1.2844e-01, -5.7038e-01, -1.5828e-01,  7.2377e-01,
         -2.2108e-01, -6.6048e-01,  4.1621e-01,  5.3757e-01, -6.7507e-01,
         -2.9803e-01,  1.5300e-01, -4.2360e-02,  2.0645e-01,  8.3511e-02,
         -7.4828e-01,  5.3335e-02, -3.7469e-01,  9.2387e-01, -2.2290e-01,
          6.1691e-02,  1.0138e-01, -6.1828e-02,  2.6248e-02, -2.9322e-02,
         -2.9048e-02,  8.2240e-02,  1.1600e-01, -1.3901e-02,  2.2236e-01,
          1.6797e-01, -1.4384e-02, -1.9363e-01,  3.8354e-02,  3.2128e-02,
         -1.7597e-02,  1.5308e-01,  1.5017e-02,  8.7759e-02,  1.7706e-01,
         -4.4677e-02,  7.7498e-02, -5.9177e-02, -2.1935e-01, -4.8865e-01,
         -5.6741e-02,  9.7085e-02, -5.6947e-02, -1.3163e-01,  1.2752e-01,
          2.1894e-01,  1.9032e-02, -1.9465e-01, -1.0832e-02, -4.5437e-02,
         -1.1641e-01,  4.7219e-02,  1.0444e-02, -4.1371e-02,  4.4948e-02,
         -1.6462e-02, -3.1563e-02, -2.4435e-01,  1.4010e-01, -9.3084e-02,
         -3.4112e-01, -1.3804e-01, -1.6146e-01, -2.5575e-01, -2.4202e-01,
         -3.7751e-02]], device='cuda:0') tensor(0.2179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
347000 特征值优化 tensor(1.4518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.2954e-01,  2.1389e-02,  1.0413e+00, -1.2623e+00,  1.9430e+00,
         -7.8411e-01, -1.0195e+00, -6.7311e-01,  2.8382e+00,  7.1179e-01,
          3.5915e-02, -6.2644e-01, -2.9151e-01,  1.8218e-01,  8.7456e-02,
         -2.9338e-02, -4.1619e-01, -2.7028e-01, -6.9472e-01,  2.7863e-01,
          6.0805e-01, -1.1238e-01,  6.8556e-01, -7.0625e-01, -5.4235e-01,
         -6.3569e-01, -5.6912e-01,  2.1766e-01,  6.7381e-01,  3.1888e-01,
          4.7323e-02, -3.6576e-01, -1.9445e-01,  3.3301e-01,  2.3078e-01,
         -2.3939e-01, -2.0798e-01, -2.1615e-01,  1.3986e-01,  5.2247e-02,
         -4.7357e-02, -6.5833e-01,  5.6620e-01,  8.2628e-02,  3.1705e-01,
         -9.0780e-02, -2.5587e-01, -3.7595e-02, -2.8993e-01,  6.1244e-02,
         -2.4433e-01,  3.6782e-01, -1.3630e-01, -4.7265e-02, -3.1511e-01,
          3.1911e-01, -2.2104e-01, -2.3293e-01, -1.0132e-01,  4.8888e-01,
         -6.9196e-01,  2.3249e-02,  1.3016e-01, -1.4583e-01, -5.7893e-02,
         -7.0755e-02,  2.0611e-02,  2.4494e-02,  1.0531e-01,  7.9959e-02,
          2.2636e-03, -2.5461e-01,  4.7519e-01, -1.0131e-01,  5.9215e-02,
         -1.6158e-01,  1.9909e-01, -1.4946e-01, -4.7006e-01, -1.8265e-01,
         -7.6438e-02, -1.6214e-01, -3.2745e-01, -2.8401e-01,  1.4509e-01,
          5.1156e-02,  1.9157e-01, -3.3859e-01, -1.3174e-01,  1.1599e-01,
          2.5094e-01,  1.3426e-01, -5.6012e-01, -1.5638e-01,  7.1991e-01,
         -2.1741e-01, -6.6096e-01,  4.2536e-01,  5.1965e-01, -6.6411e-01,
         -2.9971e-01,  1.5280e-01, -4.7867e-02,  2.0786e-01,  8.5762e-02,
         -7.4792e-01,  5.0028e-02, -3.6594e-01,  9.2202e-01, -2.2488e-01,
          6.0067e-02,  1.0497e-01, -6.8552e-02,  2.2433e-02, -3.5127e-02,
         -2.5198e-02,  7.7406e-02,  1.1497e-01, -1.4265e-02,  2.2196e-01,
          1.5878e-01, -1.3013e-02, -1.9336e-01,  3.6644e-02,  3.3937e-02,
         -2.4283e-02,  1.5603e-01,  9.9969e-03,  8.2008e-02,  1.7911e-01,
         -4.4218e-02,  8.1155e-02, -6.0671e-02, -2.2149e-01, -4.8423e-01,
         -6.5876e-02,  9.8364e-02, -5.9818e-02, -1.2523e-01,  1.3798e-01,
          2.2149e-01,  2.4037e-02, -2.0028e-01, -8.3743e-03, -4.5085e-02,
         -1.2630e-01,  5.0119e-02,  1.0286e-02, -4.4326e-02,  4.4433e-02,
         -1.5163e-02, -3.2903e-02, -2.4738e-01,  1.4158e-01, -9.0270e-02,
         -3.4417e-01, -1.3637e-01, -1.6103e-01, -2.5028e-01, -2.4157e-01,
         -3.4091e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
348000 特征值优化 tensor(1.4500, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.0113e-01,  2.0107e-02,  1.0389e+00, -1.2622e+00,  1.9141e+00,
         -7.7037e-01, -1.0240e+00, -6.6348e-01,  2.8487e+00,  7.1453e-01,
          3.5681e-02, -6.1258e-01, -3.0190e-01,  1.7455e-01,  8.1588e-02,
         -3.0615e-02, -4.1867e-01, -2.6281e-01, -6.9428e-01,  2.8180e-01,
          5.9971e-01, -1.1318e-01,  6.7632e-01, -7.0412e-01, -5.3484e-01,
         -6.4620e-01, -5.6551e-01,  2.1772e-01,  6.7013e-01,  3.1519e-01,
          5.2843e-02, -3.6437e-01, -1.8369e-01,  3.2061e-01,  2.2513e-01,
         -2.3531e-01, -2.0825e-01, -2.1191e-01,  1.4270e-01,  5.1284e-02,
         -4.9628e-02, -6.5726e-01,  5.6744e-01,  8.5369e-02,  3.1445e-01,
         -9.0515e-02, -2.6042e-01, -4.1249e-02, -2.9246e-01,  6.6468e-02,
         -2.5573e-01,  3.6934e-01, -1.3923e-01, -4.8115e-02, -3.1366e-01,
          3.2011e-01, -2.3300e-01, -2.3502e-01, -1.0038e-01,  4.9530e-01,
         -6.9220e-01,  2.4707e-02,  1.2906e-01, -1.4820e-01, -6.1141e-02,
         -6.5839e-02,  2.7568e-02,  2.2999e-02,  1.0445e-01,  7.5957e-02,
          5.1992e-04, -2.5572e-01,  4.8245e-01, -1.0164e-01,  5.7660e-02,
         -1.7210e-01,  1.9577e-01, -1.4548e-01, -4.7015e-01, -1.9266e-01,
         -7.4723e-02, -1.6104e-01, -3.2637e-01, -2.8901e-01,  1.3526e-01,
          3.1849e-02,  1.8540e-01, -3.2328e-01, -1.5395e-01,  1.1806e-01,
          2.4902e-01,  1.2441e-01, -5.6378e-01, -1.6379e-01,  7.2025e-01,
         -2.2308e-01, -6.6490e-01,  4.1482e-01,  5.3171e-01, -6.7166e-01,
         -2.8633e-01,  1.5763e-01, -4.8159e-02,  1.9933e-01,  8.9491e-02,
         -7.4641e-01,  5.6101e-02, -3.7095e-01,  9.2428e-01, -2.2082e-01,
          6.0571e-02,  1.0454e-01, -7.7536e-02,  2.4684e-02, -3.5727e-02,
         -2.1446e-02,  7.8608e-02,  1.2039e-01, -6.6099e-03,  2.1127e-01,
          1.5963e-01, -1.1316e-02, -1.9365e-01,  3.6844e-02,  3.6585e-02,
         -1.8072e-02,  1.4937e-01,  1.9702e-02,  8.7131e-02,  1.8205e-01,
         -4.7948e-02,  7.5248e-02, -6.1412e-02, -2.1461e-01, -4.9161e-01,
         -5.8756e-02,  1.0504e-01, -5.5672e-02, -1.3665e-01,  1.3672e-01,
          2.1344e-01,  1.0491e-02, -1.9229e-01, -1.3778e-02, -4.5623e-02,
         -1.3528e-01,  4.3053e-02,  1.4382e-02, -3.6529e-02,  3.5940e-02,
         -2.2331e-02, -3.4566e-02, -2.4323e-01,  1.4634e-01, -9.1421e-02,
         -3.3904e-01, -1.4080e-01, -1.6572e-01, -2.4958e-01, -2.4218e-01,
         -3.0665e-02]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
349000 特征值优化 tensor(1.4988, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.3667e-01,  3.3967e-02,  1.0308e+00, -1.2494e+00,  1.9254e+00,
         -7.9321e-01, -1.0265e+00, -6.6431e-01,  2.8517e+00,  7.2089e-01,
          3.8479e-02, -6.1502e-01, -3.0612e-01,  1.9320e-01,  9.5052e-02,
         -4.5356e-02, -4.1467e-01, -2.6301e-01, -7.0665e-01,  2.7933e-01,
          6.0621e-01, -1.2950e-01,  6.9216e-01, -6.8069e-01, -5.4361e-01,
         -6.3970e-01, -5.6299e-01,  2.3086e-01,  6.6504e-01,  3.1715e-01,
          5.5483e-02, -3.6154e-01, -1.8732e-01,  3.3634e-01,  2.2569e-01,
         -2.3800e-01, -2.0954e-01, -2.2155e-01,  1.5065e-01,  6.5341e-02,
         -5.9907e-02, -6.5605e-01,  5.6714e-01,  7.3494e-02,  3.2321e-01,
         -8.6232e-02, -2.5367e-01, -4.2311e-02, -2.8967e-01,  6.2621e-02,
         -2.4633e-01,  3.6253e-01, -1.2879e-01, -3.9505e-02, -3.1652e-01,
          3.0563e-01, -2.2889e-01, -2.2546e-01, -9.8813e-02,  4.8801e-01,
         -6.8268e-01,  2.4190e-02,  1.2359e-01, -1.3433e-01, -5.7026e-02,
         -8.4201e-02,  1.6307e-02,  4.2972e-02,  1.0408e-01,  8.2305e-02,
          7.0708e-03, -2.4642e-01,  4.7858e-01, -1.0033e-01,  5.2170e-02,
         -1.6847e-01,  1.9619e-01, -1.4585e-01, -4.6670e-01, -1.8146e-01,
         -6.8353e-02, -1.5924e-01, -3.3322e-01, -2.8655e-01,  1.3559e-01,
          3.7288e-02,  1.9588e-01, -3.2906e-01, -1.6148e-01,  1.2246e-01,
          2.5970e-01,  1.1450e-01, -5.7301e-01, -1.5083e-01,  7.4139e-01,
         -2.3157e-01, -6.7236e-01,  4.0875e-01,  5.2470e-01, -6.6335e-01,
         -2.7573e-01,  1.5372e-01, -4.1167e-02,  1.9875e-01,  6.8789e-02,
         -7.3960e-01,  6.2627e-02, -3.7471e-01,  9.1716e-01, -2.2670e-01,
          6.1902e-02,  9.8397e-02, -6.6987e-02,  3.4267e-02, -3.3089e-02,
         -2.5696e-02,  8.6436e-02,  1.0411e-01, -2.1295e-02,  2.1651e-01,
          1.6334e-01,  5.5344e-03, -1.9837e-01,  3.6457e-02,  2.6617e-02,
         -2.1033e-02,  1.5825e-01,  1.9475e-02,  8.0839e-02,  1.7319e-01,
         -4.1599e-02,  8.4918e-02, -5.8736e-02, -2.2229e-01, -4.9223e-01,
         -6.9323e-02,  1.0076e-01, -5.0694e-02, -1.3664e-01,  1.4669e-01,
          2.1921e-01,  1.7579e-02, -2.0090e-01, -1.1047e-02, -4.0960e-02,
         -1.2649e-01,  4.8637e-02,  8.4857e-04, -4.5744e-02,  4.7255e-02,
         -1.5211e-02, -2.8865e-02, -2.3800e-01,  1.4330e-01, -9.1181e-02,
         -3.3750e-01, -1.2359e-01, -1.6042e-01, -2.6098e-01, -2.3392e-01,
         -3.7843e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
350000 特征值优化 tensor(1.4339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6166,  0.0294,  1.0420, -1.2607,  1.9166, -0.7814, -1.0139, -0.6521,
          2.8555,  0.7130,  0.0354, -0.6064, -0.3104,  0.1856,  0.1045, -0.0212,
         -0.4220, -0.2612, -0.7035,  0.2698,  0.6136, -0.1286,  0.6924, -0.6864,
         -0.5424, -0.6414, -0.5684,  0.2205,  0.6692,  0.3151,  0.0488, -0.3573,
         -0.1939,  0.3155,  0.2298, -0.2403, -0.2123, -0.2132,  0.1432,  0.0523,
         -0.0526, -0.6566,  0.5620,  0.0761,  0.3194, -0.0833, -0.2584, -0.0428,
         -0.2853,  0.0692, -0.2459,  0.3651, -0.1319, -0.0446, -0.3203,  0.3141,
         -0.2336, -0.2360, -0.1064,  0.4894, -0.6800,  0.0230,  0.1300, -0.1479,
         -0.0499, -0.0769,  0.0137,  0.0195,  0.1096,  0.0784,  0.0064, -0.2474,
          0.4766, -0.1048,  0.0586, -0.1803,  0.1983, -0.1545, -0.4742, -0.1840,
         -0.0644, -0.1608, -0.3357, -0.2863,  0.1337,  0.0531,  0.1845, -0.3281,
         -0.1497,  0.1128,  0.2549,  0.1278, -0.5647, -0.1537,  0.7190, -0.2172,
         -0.6620,  0.4213,  0.5437, -0.6727, -0.3001,  0.1488, -0.0553,  0.2008,
          0.0744, -0.7515,  0.0694, -0.3651,  0.9248, -0.2291,  0.0595,  0.0972,
         -0.0626,  0.0220, -0.0192, -0.0286,  0.0904,  0.1132, -0.0198,  0.2131,
          0.1667, -0.0156, -0.1897,  0.0359,  0.0265, -0.0211,  0.1582,  0.0108,
          0.0813,  0.1728, -0.0374,  0.0813, -0.0649, -0.2204, -0.4875, -0.0623,
          0.0977, -0.0644, -0.1341,  0.1320,  0.2179,  0.0074, -0.1939, -0.0221,
         -0.0460, -0.1245,  0.0570,  0.0047, -0.0411,  0.0418, -0.0159, -0.0320,
         -0.2350,  0.1483, -0.0979, -0.3387, -0.1286, -0.1572, -0.2553, -0.2409,
         -0.0410]], device='cuda:0') tensor(0.2178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
351000 特征值优化 tensor(1.4296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.2335e-01,  3.3731e-02,  1.0322e+00, -1.2578e+00,  1.9157e+00,
         -7.8205e-01, -1.0213e+00, -6.5720e-01,  2.8617e+00,  7.1512e-01,
          4.0637e-02, -6.0769e-01, -3.1033e-01,  1.8756e-01,  1.0901e-01,
         -2.8536e-02, -4.1903e-01, -2.6154e-01, -6.9189e-01,  2.7700e-01,
          6.0430e-01, -1.1841e-01,  6.8356e-01, -6.9432e-01, -5.4080e-01,
         -6.4707e-01, -5.6616e-01,  2.2604e-01,  6.7890e-01,  3.1578e-01,
          5.5846e-02, -3.6325e-01, -1.9639e-01,  3.2620e-01,  2.2251e-01,
         -2.3906e-01, -2.0820e-01, -2.2467e-01,  1.4437e-01,  5.9212e-02,
         -4.9669e-02, -6.5437e-01,  5.6979e-01,  8.4422e-02,  3.1717e-01,
         -9.1726e-02, -2.5498e-01, -4.3468e-02, -2.8417e-01,  7.5604e-02,
         -2.5816e-01,  3.6856e-01, -1.3276e-01, -5.0154e-02, -3.0600e-01,
          3.1227e-01, -2.3080e-01, -2.2687e-01, -1.1500e-01,  5.0021e-01,
         -6.7971e-01,  2.5983e-02,  1.2510e-01, -1.4773e-01, -4.7200e-02,
         -7.9612e-02,  7.3873e-03,  3.1608e-02,  1.0302e-01,  8.2004e-02,
         -1.0050e-03, -2.6183e-01,  4.8257e-01, -9.6023e-02,  5.9112e-02,
         -1.7084e-01,  2.0004e-01, -1.4058e-01, -4.6284e-01, -1.8794e-01,
         -7.8913e-02, -1.6390e-01, -3.2452e-01, -2.8607e-01,  1.2755e-01,
          4.3392e-02,  1.9034e-01, -3.3043e-01, -1.5215e-01,  1.2272e-01,
          2.5413e-01,  1.1584e-01, -5.6026e-01, -1.6295e-01,  7.2644e-01,
         -2.3061e-01, -6.6430e-01,  4.1141e-01,  5.2665e-01, -6.7320e-01,
         -2.9022e-01,  1.5034e-01, -4.2941e-02,  2.0206e-01,  6.4144e-02,
         -7.2917e-01,  6.3319e-02, -3.6607e-01,  9.1294e-01, -2.2809e-01,
          6.0374e-02,  1.0264e-01, -7.2538e-02,  2.5376e-02, -2.7023e-02,
         -3.1351e-02,  7.9396e-02,  1.1197e-01, -2.6296e-02,  2.1754e-01,
          1.6804e-01, -1.9578e-03, -1.9821e-01,  3.6669e-02,  3.7128e-02,
         -1.5504e-02,  1.4545e-01,  1.5034e-02,  8.9946e-02,  1.8868e-01,
         -5.1112e-02,  7.3709e-02, -5.9389e-02, -2.0965e-01, -4.9196e-01,
         -6.0160e-02,  1.0416e-01, -5.5683e-02, -1.3689e-01,  1.3001e-01,
          2.1811e-01,  1.3242e-02, -1.9458e-01, -8.7672e-03, -3.9168e-02,
         -1.2611e-01,  3.4568e-02,  1.6642e-02, -3.2304e-02,  3.1027e-02,
         -1.9637e-02, -3.3994e-02, -2.5016e-01,  1.3986e-01, -8.6147e-02,
         -3.3347e-01, -1.3953e-01, -1.6447e-01, -2.4674e-01, -2.4364e-01,
         -2.6585e-02]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
352000 特征值优化 tensor(1.4678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6489,  0.0250,  1.0302, -1.2635,  1.9107, -0.7857, -1.0068, -0.6469,
          2.8585,  0.7111,  0.0454, -0.6214, -0.2984,  0.1852,  0.0897, -0.0198,
         -0.4191, -0.2538, -0.7021,  0.2668,  0.6190, -0.1248,  0.6883, -0.7014,
         -0.5452, -0.6365, -0.5658,  0.2263,  0.6766,  0.3076,  0.0442, -0.3671,
         -0.1957,  0.3331,  0.2357, -0.2404, -0.2081, -0.2188,  0.1382,  0.0628,
         -0.0503, -0.6589,  0.5689,  0.0852,  0.3270, -0.0979, -0.2526, -0.0496,
         -0.2835,  0.0691, -0.2537,  0.3669, -0.1385, -0.0458, -0.3109,  0.3105,
         -0.2226, -0.2227, -0.1042,  0.4948, -0.6932,  0.0161,  0.1303, -0.1410,
         -0.0642, -0.0753,  0.0272,  0.0281,  0.1077,  0.0821,  0.0039, -0.2578,
          0.4766, -0.0971,  0.0525, -0.1676,  0.1927, -0.1380, -0.4716, -0.1838,
         -0.0767, -0.1624, -0.3267, -0.2860,  0.1396,  0.0383,  0.1890, -0.3274,
         -0.1315,  0.1239,  0.2474,  0.1286, -0.5654, -0.1681,  0.7461, -0.2258,
         -0.6678,  0.4140,  0.5194, -0.6577, -0.2844,  0.1638, -0.0602,  0.2101,
          0.0758, -0.7449,  0.0595, -0.3692,  0.9180, -0.2234,  0.0590,  0.1073,
         -0.0724,  0.0313, -0.0346, -0.0244,  0.0829,  0.1089, -0.0114,  0.2215,
          0.1583, -0.0099, -0.1955,  0.0409,  0.0352, -0.0229,  0.1502,  0.0082,
          0.0861,  0.1808, -0.0456,  0.0838, -0.0589, -0.2148, -0.4861, -0.0581,
          0.0992, -0.0543, -0.1408,  0.1481,  0.2162,  0.0228, -0.1942, -0.0063,
         -0.0447, -0.1250,  0.0447,  0.0095, -0.0402,  0.0395, -0.0164, -0.0327,
         -0.2429,  0.1389, -0.0910, -0.3378, -0.1355, -0.1667, -0.2517, -0.2447,
         -0.0320]], device='cuda:0') tensor(0.2113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
353000 特征值优化 tensor(1.4435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6384,  0.0273,  1.0302, -1.2614,  1.9247, -0.8072, -1.0162, -0.6313,
          2.8624,  0.7129,  0.0424, -0.6118, -0.3015,  0.1790,  0.0955, -0.0111,
         -0.4178, -0.2564, -0.7030,  0.2665,  0.6172, -0.1308,  0.6950, -0.6899,
         -0.5533, -0.6433, -0.5710,  0.2298,  0.6728,  0.3167,  0.0431, -0.3661,
         -0.1897,  0.3333,  0.2273, -0.2390, -0.1984, -0.2128,  0.1432,  0.0534,
         -0.0512, -0.6592,  0.5659,  0.0783,  0.3188, -0.0990, -0.2607, -0.0519,
         -0.2831,  0.0692, -0.2510,  0.3656, -0.1436, -0.0406, -0.3165,  0.3004,
         -0.2242, -0.2282, -0.1048,  0.4920, -0.6788,  0.0161,  0.1258, -0.1490,
         -0.0623, -0.0662,  0.0243,  0.0195,  0.1080,  0.0856,  0.0104, -0.2505,
          0.4753, -0.1046,  0.0548, -0.1758,  0.1960, -0.1450, -0.4758, -0.1817,
         -0.0723, -0.1616, -0.3309, -0.2763,  0.1424,  0.0483,  0.1818, -0.3285,
         -0.1408,  0.1262,  0.2515,  0.1272, -0.5665, -0.1613,  0.7322, -0.2168,
         -0.6645,  0.4169,  0.5262, -0.6710, -0.2919,  0.1619, -0.0459,  0.2030,
          0.0859, -0.7340,  0.0621, -0.3730,  0.9292, -0.2265,  0.0591,  0.1087,
         -0.0698,  0.0179, -0.0395, -0.0224,  0.0899,  0.1244, -0.0129,  0.2121,
          0.1686, -0.0120, -0.1912,  0.0354,  0.0268, -0.0226,  0.1546,  0.0054,
          0.0839,  0.1731, -0.0384,  0.0846, -0.0608, -0.2203, -0.4884, -0.0672,
          0.1017, -0.0612, -0.1335,  0.1386,  0.2148,  0.0115, -0.1962, -0.0195,
         -0.0471, -0.1139,  0.0505,  0.0069, -0.0412,  0.0440, -0.0174, -0.0318,
         -0.2399,  0.1437, -0.0973, -0.3451, -0.1312, -0.1620, -0.2511, -0.2424,
         -0.0374]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
354000 特征值优化 tensor(1.4364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.5397e-01,  3.0666e-02,  1.0379e+00, -1.2561e+00,  1.9281e+00,
         -8.1879e-01, -1.0220e+00, -6.3766e-01,  2.8638e+00,  7.1296e-01,
          4.3153e-02, -6.2472e-01, -2.8715e-01,  1.8901e-01,  8.4615e-02,
         -1.1913e-02, -4.2330e-01, -2.4674e-01, -7.0728e-01,  2.6142e-01,
          6.1866e-01, -1.3462e-01,  7.0024e-01, -6.8177e-01, -5.5975e-01,
         -6.3261e-01, -5.4863e-01,  2.2275e-01,  6.6317e-01,  3.2266e-01,
          4.7137e-02, -3.6566e-01, -1.8705e-01,  3.1222e-01,  2.3059e-01,
         -2.4356e-01, -2.1652e-01, -2.1700e-01,  1.4483e-01,  5.9955e-02,
         -5.6319e-02, -6.5780e-01,  5.5842e-01,  8.5407e-02,  3.1952e-01,
         -8.1961e-02, -2.5662e-01, -5.6002e-02, -2.9038e-01,  6.3217e-02,
         -2.4943e-01,  3.6466e-01, -1.3280e-01, -3.1323e-02, -3.1758e-01,
          2.9818e-01, -2.2207e-01, -2.4304e-01, -1.0613e-01,  4.9691e-01,
         -6.7951e-01,  2.0865e-02,  1.2499e-01, -1.3269e-01, -7.4312e-02,
         -8.9434e-02,  3.3585e-02,  1.9695e-02,  1.0529e-01,  7.8329e-02,
          1.6936e-02, -2.4310e-01,  4.6883e-01, -1.0244e-01,  5.1503e-02,
         -1.7671e-01,  2.0079e-01, -1.3834e-01, -4.7552e-01, -1.8693e-01,
         -6.4569e-02, -1.6379e-01, -3.3500e-01, -2.8514e-01,  1.4252e-01,
          4.2488e-02,  1.7840e-01, -3.4049e-01, -1.5921e-01,  1.3268e-01,
          2.4973e-01,  1.2872e-01, -5.7388e-01, -1.5797e-01,  7.2415e-01,
         -2.1602e-01, -6.6718e-01,  4.1295e-01,  5.2113e-01, -6.8019e-01,
         -2.8181e-01,  1.6203e-01, -4.2427e-02,  1.9169e-01,  7.2326e-02,
         -7.4088e-01,  7.9855e-02, -3.7549e-01,  9.2848e-01, -2.2848e-01,
          5.8753e-02,  1.1421e-01, -6.5007e-02,  3.8493e-02, -4.1998e-02,
         -2.9161e-02,  9.7049e-02,  1.0652e-01, -7.3526e-03,  2.0410e-01,
          1.6872e-01, -9.5338e-03, -1.9303e-01,  3.5863e-02,  2.0426e-02,
         -2.4749e-02,  1.6184e-01,  1.4705e-02,  7.8682e-02,  1.6541e-01,
         -3.8673e-02,  8.9741e-02, -6.0186e-02, -2.2234e-01, -4.9236e-01,
         -5.9348e-02,  1.0918e-01, -5.2283e-02, -1.4496e-01,  1.3512e-01,
          2.1898e-01,  1.0833e-02, -1.9666e-01, -1.1690e-02, -4.8280e-02,
         -1.2920e-01,  5.1890e-02, -1.7310e-03, -5.2329e-02,  4.1119e-02,
         -6.9984e-03, -3.0496e-02, -2.3400e-01,  1.4814e-01, -1.0024e-01,
         -3.3660e-01, -1.1759e-01, -1.6313e-01, -2.6257e-01, -2.4011e-01,
         -3.7769e-02]], device='cuda:0') tensor(0.2147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
355000 特征值优化 tensor(1.4331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6269,  0.0347,  1.0358, -1.2482,  1.9265, -0.8269, -1.0077, -0.6301,
          2.8737,  0.7044,  0.0410, -0.6090, -0.2940,  0.1833,  0.0956, -0.0056,
         -0.4087, -0.2490, -0.6995,  0.2620,  0.6185, -0.1318,  0.6982, -0.6860,
         -0.5554, -0.6350, -0.5635,  0.2337,  0.6771,  0.3175,  0.0413, -0.3658,
         -0.2057,  0.3311,  0.2314, -0.2426, -0.2068, -0.2122,  0.1347,  0.0505,
         -0.0490, -0.6574,  0.5662,  0.0799,  0.3147, -0.1019, -0.2471, -0.0589,
         -0.2805,  0.0682, -0.2446,  0.3670, -0.1407, -0.0422, -0.3167,  0.3067,
         -0.2306, -0.2299, -0.1044,  0.4989, -0.6811,  0.0200,  0.1269, -0.1536,
         -0.0511, -0.0720,  0.0145,  0.0204,  0.1065,  0.0899,  0.0114, -0.2549,
          0.4708, -0.1031,  0.0551, -0.1687,  0.1926, -0.1384, -0.4806, -0.1839,
         -0.0688, -0.1571, -0.3300, -0.2863,  0.1311,  0.0523,  0.1848, -0.3375,
         -0.1470,  0.1218,  0.2512,  0.1281, -0.5591, -0.1688,  0.7206, -0.2170,
         -0.6564,  0.4261,  0.5293, -0.6779, -0.2847,  0.1562, -0.0500,  0.2050,
          0.0842, -0.7407,  0.0721, -0.3704,  0.9276, -0.2295,  0.0580,  0.1052,
         -0.0629,  0.0225, -0.0307, -0.0235,  0.0765,  0.1197, -0.0222,  0.2117,
          0.1664, -0.0107, -0.1951,  0.0408,  0.0286, -0.0293,  0.1543,  0.0035,
          0.0825,  0.1733, -0.0410,  0.0850, -0.0604, -0.2168, -0.4863, -0.0741,
          0.0898, -0.0480, -0.1370,  0.1352,  0.2225,  0.0222, -0.1958, -0.0159,
         -0.0511, -0.1188,  0.0539,  0.0113, -0.0437,  0.0403, -0.0151, -0.0382,
         -0.2330,  0.1445, -0.0993, -0.3475, -0.1277, -0.1592, -0.2551, -0.2393,
         -0.0352]], device='cuda:0') tensor(0.2528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
356000 特征值优化 tensor(1.4289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.4424e-01,  2.7337e-02,  1.0356e+00, -1.2522e+00,  1.9168e+00,
         -8.0778e-01, -1.0058e+00, -6.1778e-01,  2.8754e+00,  7.1584e-01,
          4.5586e-02, -6.1444e-01, -2.7834e-01,  1.9147e-01,  8.6504e-02,
         -1.7997e-02, -4.2175e-01, -2.5250e-01, -6.9085e-01,  2.6211e-01,
          6.0701e-01, -1.2544e-01,  6.9104e-01, -6.8411e-01, -5.4441e-01,
         -6.4430e-01, -5.6861e-01,  2.2756e-01,  6.8888e-01,  3.1488e-01,
          4.8355e-02, -3.6468e-01, -1.8239e-01,  3.2718e-01,  2.3065e-01,
         -2.3209e-01, -2.1012e-01, -2.2877e-01,  1.3659e-01,  6.1198e-02,
         -4.8456e-02, -6.5728e-01,  5.6782e-01,  8.5992e-02,  3.1536e-01,
         -9.4156e-02, -2.5978e-01, -5.7879e-02, -2.8712e-01,  7.0165e-02,
         -2.6151e-01,  3.6687e-01, -1.4719e-01, -4.7615e-02, -3.0197e-01,
          3.1401e-01, -2.3450e-01, -2.3148e-01, -1.0446e-01,  5.0145e-01,
         -6.8756e-01,  1.8954e-02,  1.2742e-01, -1.4426e-01, -6.2288e-02,
         -7.6678e-02,  3.2411e-02,  2.1811e-02,  1.0567e-01,  8.1333e-02,
          3.2339e-03, -2.6613e-01,  4.8216e-01, -9.8563e-02,  6.5053e-02,
         -1.6368e-01,  1.9876e-01, -1.3930e-01, -4.6882e-01, -1.9354e-01,
         -7.8492e-02, -1.6391e-01, -3.1808e-01, -2.8400e-01,  1.2512e-01,
          4.0726e-02,  1.8229e-01, -3.2836e-01, -1.5155e-01,  1.1723e-01,
          2.4837e-01,  1.2019e-01, -5.5825e-01, -1.7505e-01,  7.2254e-01,
         -2.2158e-01, -6.6436e-01,  4.1501e-01,  5.2154e-01, -6.7309e-01,
         -2.6592e-01,  1.6026e-01, -4.9867e-02,  1.9832e-01,  7.8563e-02,
         -7.3642e-01,  6.6729e-02, -3.8195e-01,  9.3362e-01, -2.2495e-01,
          5.7539e-02,  1.0682e-01, -7.1909e-02,  2.4372e-02, -3.8528e-02,
         -3.1061e-02,  9.1505e-02,  1.1164e-01, -1.1936e-02,  2.0844e-01,
          1.7177e-01,  1.3078e-03, -1.8888e-01,  3.6245e-02,  3.5227e-02,
         -1.6306e-02,  1.4709e-01,  9.4564e-03,  8.6617e-02,  1.8375e-01,
         -5.1697e-02,  6.9458e-02, -5.9050e-02, -2.0666e-01, -4.9572e-01,
         -6.0750e-02,  1.0267e-01, -4.9159e-02, -1.2989e-01,  1.2867e-01,
          2.1973e-01,  2.9812e-02, -1.8929e-01, -1.4911e-02, -4.2838e-02,
         -1.2680e-01,  3.4264e-02,  1.5683e-02, -2.7486e-02,  3.2279e-02,
         -2.8308e-02, -3.5195e-02, -2.4383e-01,  1.4032e-01, -8.6541e-02,
         -3.3413e-01, -1.3712e-01, -1.6506e-01, -2.5197e-01, -2.4335e-01,
         -2.0965e-02]], device='cuda:0') tensor(0.2207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
357000 特征值优化 tensor(51.8243, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9942,  2.1802, -0.4879, -0.7277,  0.4832,  0.3801, -0.3667, -1.1017,
         -2.1273, -0.6652,  0.8061, -2.3137, -1.3880,  0.7787, -1.2729, -0.9280,
         -0.3494,  0.6000,  0.5212,  0.9872,  0.5574, -0.2357,  1.9316,  0.4487,
         -1.5217, -0.3466,  0.4073, -0.5026, -0.5483, -0.0464, -0.3512, -0.3240,
          1.7589,  0.4661, -1.2421, -0.3370,  0.0666,  0.1523, -1.2002,  0.9169,
         -0.5478, -0.1673,  0.6609,  0.3755, -0.7756, -1.8099,  1.0326, -0.4552,
         -0.6731, -0.2265, -0.4104,  0.7222,  0.7756,  0.4871, -0.2533, -1.0249,
          0.0265,  1.5219,  0.4078,  0.0356, -0.2782,  0.9471,  1.8950,  1.2139,
          0.5728, -0.2437,  1.2280,  1.5287, -1.0026, -0.8282, -1.4436, -0.0817,
         -0.4799,  1.2450,  0.9160,  1.0675,  0.7880,  0.6128,  0.7123, -0.3738,
          0.3922,  0.7324,  1.1710, -1.1865,  0.2711, -0.1157,  0.9129,  2.2035,
          0.1803, -2.2727, -0.9275,  0.3963, -0.3015,  0.0754, -0.0234,  0.1547,
          1.7811,  0.0654,  0.6558,  0.1046, -1.4577, -0.8468, -1.0443,  1.4722,
         -0.4162,  0.7916,  0.0382,  0.3350, -0.3626, -0.7527, -0.1094,  0.5661,
          1.3055,  0.2583,  0.2796,  0.0252,  0.2373, -0.3715, -0.3369,  0.6348,
          0.8755, -1.4131,  0.7743,  2.8855, -0.5731, -0.4789, -1.7150,  0.8012,
         -1.9450,  0.0779,  0.3924,  0.1387, -0.3108, -0.5253, -1.2907,  0.1126,
          1.8769,  0.6515, -0.6439, -1.4976, -0.5429,  1.1092,  0.2350, -0.0424,
         -0.9657, -0.2784, -1.0839, -0.3807,  0.9794, -0.2738, -0.6667, -1.8470,
          0.6694, -1.3704,  1.0871, -0.1843,  0.6310, -0.4319,  1.8642,  0.6738,
          0.5715]], device='cuda:0') tensor(0.2378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
358000 特征值优化 tensor(10.3448, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3136e-01,  2.9931e+00, -4.5992e-01, -8.8649e-01,  1.1655e+00,
          1.2562e+00, -1.0128e+00, -4.0424e-01, -8.3667e-01, -9.4483e-02,
          1.7804e-01, -9.4730e-01, -6.3238e-01,  3.6946e-02, -1.6158e-01,
         -1.2663e+00,  3.2864e-01, -3.8905e-01,  1.2740e+00,  1.1058e+00,
          1.4243e+00,  5.8295e-02,  1.0370e+00,  3.3292e-01, -9.6156e-01,
          1.2587e-01,  1.5531e-02,  1.1408e-01, -1.5194e-01, -1.7158e-01,
          7.4755e-02,  1.4233e-01,  7.4503e-01, -4.4610e-02, -5.0588e-01,
         -3.9299e-02,  2.6344e-01,  5.9239e-02, -2.9342e-02,  1.7524e-01,
          6.1573e-02,  6.8070e-02,  6.8363e-02,  1.4667e-01, -1.4736e-01,
         -8.2293e-01,  2.2183e-01, -4.1970e-02, -7.2246e-02,  5.1125e-01,
          6.5652e-03, -4.0697e-02,  4.8688e-02, -7.8669e-03,  1.2273e-02,
         -1.1032e-01,  6.4711e-02,  5.6345e-01,  3.9766e-02, -4.4366e-02,
          1.5258e-01,  2.2809e-01,  9.8044e-01,  3.0951e-01, -3.9349e-02,
          1.1478e-01,  3.2731e-01,  5.9663e-01, -1.0717e-01, -2.7809e-01,
         -5.1585e-01, -2.3107e-01,  3.8368e-02,  1.7118e-01,  1.3904e-01,
          1.9222e-01,  2.9173e-02,  1.8618e-01,  1.4937e-01,  7.2068e-02,
         -6.5156e-03,  4.2160e-02,  4.0401e-01, -4.3884e-01,  6.5012e-02,
         -8.7478e-03,  1.4257e-01,  1.1080e+00, -2.2104e-01, -1.2258e+00,
         -1.3435e-01,  1.0736e+00, -1.6014e-01,  5.0883e-02,  1.8390e-01,
         -2.9142e-01,  6.7735e-01,  5.9845e-01,  2.2789e-02,  2.1264e-01,
         -6.3739e-01, -8.6584e-02, -2.7555e-01,  6.6045e-01, -1.2485e-02,
          5.0702e-02,  4.2888e-02, -1.5404e-01,  1.9804e-01, -1.1218e-01,
         -1.5402e-01,  3.8953e-02,  5.1895e-01,  9.2253e-02,  2.5609e-02,
          1.3356e-01, -1.2962e-02,  3.2039e-02,  2.9402e-02,  2.3072e-02,
          8.4617e-02, -4.1978e-01, -3.3155e-04,  1.8320e+00,  1.7421e-01,
         -1.6846e-01, -7.8268e-01, -1.9128e-01, -1.0907e+00,  1.3910e-01,
         -5.4963e-02,  1.0888e-01,  1.6775e-01, -1.1046e-01, -5.0688e-01,
         -6.2460e-02,  7.5294e-01,  8.6490e-02, -6.1538e-01, -4.0710e-01,
          3.0190e-02,  3.5343e-01,  2.8807e-01, -1.4326e-01, -1.8587e-01,
          2.4979e-01, -1.8858e-01, -6.0574e-02,  1.9209e-01, -1.3836e-01,
          5.0634e-02, -8.2689e-01,  8.7846e-02, -4.4273e-01,  3.2415e-01,
          9.3291e-03, -1.6673e-01,  1.0624e-01,  8.5167e-01,  2.9862e-01,
         -4.0620e-03]], device='cuda:0') tensor(0.2155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
359000 特征值优化 tensor(3.8889, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.7442e-02,  3.0908e+00, -5.5356e-01, -8.6747e-01,  1.1275e+00,
          1.6126e+00, -7.6942e-01, -4.6504e-01, -4.3739e-01, -4.9619e-01,
         -1.7884e-01, -3.3097e-01, -2.4354e-01, -3.9928e-01,  1.1103e-01,
         -1.0388e+00,  5.6640e-01, -5.1041e-01,  1.0704e+00,  2.0218e-01,
          1.2601e+00,  9.6679e-03,  3.8973e-01,  1.8112e-01, -9.9706e-01,
          6.8358e-02,  8.2000e-02,  4.4683e-01,  6.4060e-03, -1.3078e-01,
          5.5820e-02,  1.4611e-02,  3.3478e-01,  7.0684e-02, -3.5032e-01,
         -1.9166e-01,  7.6368e-02,  3.3542e-02,  9.1237e-02,  1.6026e-01,
          7.7641e-02,  2.0598e-01, -1.3728e-01,  1.7116e-01,  4.0857e-02,
         -2.1994e-01,  1.1414e-01, -1.1649e-01, -2.9378e-01,  5.4660e-01,
          2.7857e-01, -1.7903e-01,  6.4344e-02, -9.2384e-03,  2.8335e-02,
         -1.3863e-01,  2.8324e-01,  1.7821e-01,  2.9757e-02, -9.0795e-02,
          7.6172e-02,  2.0427e-01,  5.8895e-01,  9.9285e-02,  1.6545e-01,
          2.5720e-01,  2.4094e-01,  2.3655e-01, -2.8510e-02, -2.4594e-01,
         -2.4663e-01, -2.3069e-01,  2.3937e-01, -6.1727e-02, -7.9698e-02,
          1.0223e-01,  1.3867e-02,  1.9305e-01,  3.2710e-01,  1.2127e-01,
         -1.5286e-02,  5.4961e-03,  1.9167e-01, -2.3527e-01, -1.9480e-01,
         -7.4512e-02,  1.4370e-01,  5.3908e-01, -3.1007e-01, -9.8337e-01,
          2.5639e-02,  6.6194e-01, -2.5535e-01,  1.2475e-01,  4.9941e-02,
         -2.0932e-01,  9.8526e-02,  2.7287e-01, -1.5629e-02,  9.3570e-02,
         -3.0093e-01, -5.2204e-02, -1.8936e-01,  4.1804e-01, -1.7626e-01,
          3.2199e-02,  2.8874e-01, -5.8685e-02, -1.4176e-01,  1.0013e-02,
         -1.5548e-02,  9.5216e-02,  1.8055e-01, -1.8954e-02,  1.8971e-02,
          2.0098e-01, -6.8407e-02,  1.4898e-02, -1.9809e-03,  2.0195e-01,
         -5.9025e-03, -5.6905e-02,  1.3630e-01,  1.2383e+00,  2.2002e-02,
          1.4140e-01, -4.9058e-01, -1.2101e-01, -5.7843e-01, -2.6352e-02,
         -3.9886e-02,  8.5316e-02,  1.2987e-01,  5.7971e-02, -2.2872e-01,
         -6.3725e-02,  3.6505e-03, -1.1474e-01, -4.3913e-01, -1.1170e-01,
          2.7193e-01, -2.6044e-02,  2.8081e-01, -1.8601e-01, -2.4232e-02,
          5.0048e-03, -6.4413e-02, -1.2190e-01,  1.0440e-01, -3.5776e-01,
          1.0032e-02, -2.4430e-01, -3.2920e-02, -2.0902e-01,  1.8944e-01,
         -2.2557e-01, -3.7660e-01,  1.0901e-01,  3.9166e-01,  1.8961e-01,
          1.5599e-02]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
360000 特征值优化 tensor(3.0269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2936,  2.6319, -0.4482, -0.8640,  0.9202,  1.4823, -0.8331, -0.6681,
          0.2460, -0.5044, -0.2231, -0.2473, -0.4626, -0.5706,  0.0819, -0.9820,
          0.7198, -0.3790,  0.8820,  0.3492,  1.3648, -0.0433,  0.3955,  0.2260,
         -1.2705, -0.3124,  0.2022,  0.6997,  0.3579, -0.1400,  0.0045, -0.0726,
          0.3913, -0.0570, -0.1536, -0.2625,  0.2338,  0.0364,  0.0415,  0.2665,
          0.2847,  0.1957, -0.1211,  0.2001, -0.0041, -0.0061,  0.0867,  0.0631,
         -0.3762,  0.4538,  0.3976, -0.1979, -0.0057,  0.0342,  0.0632, -0.0248,
          0.4085, -0.0105,  0.0120, -0.2421, -0.1599,  0.1662,  0.5683, -0.0245,
          0.1625,  0.2253,  0.2338,  0.2403,  0.0336, -0.1692, -0.2034, -0.2492,
          0.3712, -0.0773, -0.0786,  0.1515,  0.1511, -0.0584,  0.4026,  0.1598,
         -0.0180,  0.0752,  0.1453, -0.2811, -0.1824,  0.0321,  0.1433,  0.5038,
         -0.3418, -0.8046,  0.0991,  0.4629, -0.2009,  0.0462,  0.0242, -0.2495,
          0.1765,  0.4186, -0.0354,  0.1463, -0.2550, -0.0056, -0.4629,  0.3015,
         -0.2762, -0.0757,  0.2768, -0.0054, -0.1170,  0.0855, -0.0087,  0.3136,
          0.1151, -0.0360, -0.0215,  0.1766, -0.0517,  0.0789, -0.0675,  0.2950,
          0.0647,  0.0522,  0.1816,  0.8589, -0.0147,  0.1847, -0.3725,  0.0157,
         -0.3709, -0.0200, -0.0947,  0.0479,  0.2446,  0.0429, -0.3167, -0.0700,
         -0.0158, -0.0857, -0.3369, -0.1032,  0.3171, -0.1720,  0.1523, -0.0875,
         -0.0691, -0.0438, -0.2196, -0.0982,  0.0494, -0.3083,  0.0224, -0.1390,
          0.0083, -0.1134,  0.0160, -0.3228, -0.3015,  0.2588,  0.2431,  0.1871,
          0.0833]], device='cuda:0') tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
361000 特征值优化 tensor(2.8625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4340e-01,  2.2254e+00, -2.0612e-01, -8.8886e-01,  1.0255e+00,
          1.4563e+00, -9.6431e-01, -1.0758e+00,  4.1623e-01, -4.6720e-01,
         -2.9421e-01, -2.8538e-01, -5.1346e-01, -5.3542e-01,  5.5304e-02,
         -8.4112e-01,  7.8487e-01, -3.1096e-01,  7.4954e-01,  4.0595e-01,
          1.3480e+00, -2.7842e-03,  3.0354e-01,  2.3631e-01, -1.2386e+00,
         -5.9419e-01,  2.1251e-01,  7.8114e-01,  4.9775e-01, -1.3884e-01,
          8.5182e-02, -1.4252e-01,  3.9089e-01, -2.0831e-01, -8.0536e-02,
         -3.4685e-01,  3.1603e-01,  1.3323e-01, -9.2319e-03,  2.4448e-01,
          3.7193e-01,  1.8423e-01, -1.1213e-01,  1.3904e-01,  4.6987e-02,
          8.1469e-02,  8.0748e-02,  1.3437e-01, -3.7122e-01,  3.6874e-01,
          4.4284e-01, -1.3650e-01, -1.8988e-02,  1.3090e-02,  2.3990e-02,
         -8.5547e-02,  4.1597e-01, -1.2471e-01, -1.1423e-02, -2.4476e-01,
         -1.6304e-01,  1.2612e-01,  6.1238e-01, -7.4108e-02,  2.1255e-01,
          1.6532e-01,  1.2113e-01,  2.6083e-01,  8.8982e-02, -1.8516e-01,
         -2.3210e-01, -1.7794e-01,  3.6578e-01, -1.0264e-01, -1.4383e-01,
          1.4941e-01,  1.4412e-01, -1.5714e-01,  3.3336e-01,  1.5702e-01,
          2.9623e-03,  1.1462e-01,  5.7912e-02, -3.4332e-01, -1.9539e-01,
          1.1954e-01,  1.0698e-01,  4.2213e-01, -2.0903e-01, -7.2458e-01,
          1.4410e-01,  5.1521e-01, -1.6210e-01,  2.6531e-02,  8.5670e-02,
         -2.7252e-01,  1.9082e-01,  5.1153e-01, -1.7869e-03,  1.0833e-01,
         -3.0352e-01,  1.6094e-01, -6.0428e-01,  1.8862e-01, -2.5905e-01,
         -2.1021e-01,  2.5595e-01, -1.5647e-01, -1.2945e-01,  8.0339e-02,
         -2.0649e-02,  3.1743e-01, -4.8841e-03, -3.2720e-02, -2.4323e-03,
          1.3297e-01,  7.9640e-03,  9.1224e-02, -1.0568e-01,  3.3560e-01,
          4.6958e-02,  1.2427e-01,  2.0268e-01,  7.1684e-01,  1.3373e-03,
          1.8847e-01, -2.8006e-01,  6.5108e-03, -2.2436e-01, -2.8455e-02,
         -6.7165e-02, -5.6714e-03,  2.3255e-01,  2.9442e-02, -2.8602e-01,
         -2.3463e-02,  9.3187e-02, -9.0324e-02, -3.8459e-01, -5.7522e-02,
          3.1169e-01, -2.6342e-01,  6.8196e-02, -7.2291e-02, -5.1859e-02,
         -4.5795e-02, -2.9897e-01,  2.2219e-03, -6.7792e-02, -3.0520e-01,
         -4.5321e-03, -1.2364e-01,  2.0668e-02, -3.2630e-02, -5.7108e-02,
         -3.5109e-01, -2.4270e-01,  2.8462e-01,  1.2383e-01,  1.6762e-01,
          9.0478e-02]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
362000 特征值优化 tensor(2.7499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.4608e-01,  1.9942e+00, -5.1236e-02, -9.0138e-01,  1.2163e+00,
          1.4470e+00, -1.0164e+00, -1.2939e+00,  3.6611e-01, -4.8322e-01,
         -3.9718e-01, -2.0043e-01, -5.7296e-01, -5.0190e-01, -1.4884e-02,
         -8.8575e-01,  8.5503e-01, -2.5244e-01,  7.5396e-01,  3.8515e-01,
          1.3152e+00,  2.6775e-02,  3.1150e-01,  1.9724e-01, -1.1986e+00,
         -7.1042e-01,  2.1953e-01,  7.3647e-01,  5.4034e-01, -9.5586e-02,
          4.1037e-02, -1.5120e-01,  4.1356e-01, -2.3566e-01, -1.0791e-01,
         -3.7538e-01,  3.0844e-01,  1.3242e-01,  1.0292e-02,  2.6563e-01,
          3.9503e-01,  1.9803e-01, -1.1910e-01,  1.9764e-01, -7.2726e-04,
          1.6131e-02,  4.6896e-02,  1.4582e-01, -3.0118e-01,  3.3183e-01,
          4.5750e-01, -9.9703e-02, -1.0010e-01, -2.7520e-02,  1.2411e-02,
         -1.8580e-01,  4.1703e-01, -1.8722e-01,  1.6642e-02, -2.4329e-01,
         -8.4285e-02,  1.4201e-01,  6.1051e-01, -6.3807e-02,  2.4594e-01,
          1.1861e-01,  8.4633e-02,  2.1747e-01,  1.6741e-01, -2.3881e-01,
         -2.1871e-01, -7.4965e-02,  3.1578e-01, -9.7008e-02, -1.7005e-01,
          1.1411e-01,  1.2638e-01, -1.3215e-01,  2.9676e-01,  1.7634e-01,
          4.8215e-02,  1.3445e-01, -1.2840e-03, -3.3551e-01, -1.1436e-01,
          1.6073e-01,  2.6845e-02,  4.0349e-01, -2.2264e-01, -6.1365e-01,
          6.8565e-02,  6.0252e-01, -1.9409e-01, -1.5845e-02,  7.8567e-02,
         -3.1263e-01,  1.8838e-01,  4.7306e-01,  1.0269e-02,  3.5494e-02,
         -2.3469e-01,  3.3481e-01, -5.8774e-01,  1.2675e-01, -2.5634e-01,
         -3.8314e-01,  3.2995e-01, -2.3180e-01, -1.7147e-01,  8.3323e-02,
          1.1407e-02,  3.2144e-01, -6.7768e-02, -3.4624e-02,  1.1065e-02,
          7.2438e-02,  1.5974e-03,  7.6755e-02, -1.1145e-01,  2.4593e-01,
         -9.5255e-03,  1.8438e-01,  2.2212e-01,  5.9813e-01,  1.6971e-02,
          1.6381e-01, -1.9300e-01,  1.1831e-02, -1.0612e-01, -1.0661e-02,
         -6.3263e-02, -6.3630e-02,  1.9401e-01,  9.2962e-02, -3.0112e-01,
          4.0174e-03,  4.6834e-02, -7.3366e-02, -4.7826e-01, -2.4670e-02,
          2.9384e-01, -2.9659e-01,  6.2361e-02, -1.7055e-02, -7.7671e-02,
         -1.4654e-02, -3.1882e-01,  5.1282e-02, -1.6159e-01, -2.4642e-01,
         -1.5964e-02, -1.0408e-01,  3.7326e-02, -3.3314e-02, -9.3535e-02,
         -3.5870e-01, -2.0321e-01,  2.9429e-01,  8.2024e-02,  1.8905e-01,
          6.8543e-02]], device='cuda:0') tensor(0.2190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
363000 特征值优化 tensor(2.7049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.8353e-01,  1.8974e+00,  6.9098e-02, -9.4110e-01,  1.4253e+00,
          1.3378e+00, -9.8322e-01, -1.3913e+00,  3.1461e-01, -5.4235e-01,
         -3.9307e-01, -7.2116e-02, -4.8149e-01, -3.5085e-01, -2.6367e-02,
         -9.3779e-01,  8.8684e-01, -1.8403e-01,  8.3837e-01,  2.8254e-01,
          1.2795e+00,  4.4552e-02,  3.3799e-01,  1.8332e-01, -1.0888e+00,
         -8.0334e-01,  2.3208e-01,  6.5101e-01,  5.6064e-01, -2.8428e-02,
         -3.3172e-03, -1.2597e-01,  4.4209e-01, -2.5241e-01, -1.3742e-01,
         -3.5342e-01,  2.9938e-01,  1.4879e-01,  4.5494e-02,  3.0118e-01,
          4.6596e-01,  1.9914e-01, -1.1627e-01,  1.7039e-01, -4.1171e-02,
         -5.8264e-02,  7.7282e-02,  9.4657e-02, -2.5110e-01,  3.3301e-01,
          4.2305e-01, -9.9926e-02, -1.4068e-01, -4.0427e-02,  6.8483e-02,
         -2.4543e-01,  3.6735e-01, -1.7973e-01,  2.5408e-02, -2.4400e-01,
         -2.7115e-02,  1.2286e-01,  5.9702e-01, -5.3779e-02,  2.9283e-01,
          1.3754e-01,  9.0319e-02,  1.6975e-01,  1.5830e-01, -2.9119e-01,
         -2.3068e-01,  8.0578e-03,  2.5582e-01, -7.6863e-02, -1.4307e-01,
          1.6369e-01,  1.1746e-01, -1.5789e-01,  2.5353e-01,  1.9013e-01,
          9.1846e-02,  1.3670e-01,  3.5879e-04, -2.8162e-01, -4.1040e-02,
          1.9714e-01,  3.4966e-02,  3.6650e-01, -1.8600e-01, -5.8624e-01,
          3.4731e-02,  7.0141e-01, -2.7820e-01, -2.3056e-02,  7.6379e-02,
         -3.4520e-01,  1.9788e-01,  5.0191e-01, -1.3935e-03,  4.6590e-02,
         -2.9638e-01,  4.1801e-01, -5.4641e-01,  1.3536e-01, -2.4149e-01,
         -5.8748e-01,  5.4535e-01, -2.5752e-01, -2.3161e-01,  5.0311e-02,
          1.9615e-02,  2.7060e-01, -1.0483e-01, -3.3881e-03, -3.2111e-02,
          3.3242e-02,  5.4798e-03,  6.9591e-02, -1.3536e-01,  2.2137e-01,
          3.8342e-02,  2.2788e-01,  2.1362e-01,  4.5205e-01,  1.2475e-02,
          1.5663e-01, -1.1380e-01,  4.1930e-02, -4.5544e-02, -4.1446e-02,
         -5.9120e-02, -7.6390e-02,  1.7734e-01,  1.2514e-01, -3.4524e-01,
         -4.0135e-02,  2.5932e-02, -4.1054e-02, -5.5487e-01, -9.6238e-02,
          2.3819e-01, -2.0391e-01,  3.5737e-02,  1.6628e-02, -5.9193e-02,
          1.3859e-02, -3.4804e-01,  8.7923e-02, -2.0942e-01, -2.1847e-01,
          3.4752e-04, -1.0685e-01,  6.0272e-02, -3.4265e-03, -1.2929e-01,
         -3.5978e-01, -1.4524e-01,  2.9085e-01,  3.7386e-02,  2.0365e-01,
          5.6956e-02]], device='cuda:0') tensor(0.2517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
364000 特征值优化 tensor(2.6973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4783e-01,  1.8244e+00,  6.7200e-02, -9.3399e-01,  1.6187e+00,
          1.2547e+00, -8.7001e-01, -1.6148e+00,  4.0213e-01, -5.9942e-01,
         -4.4163e-01,  1.0605e-01, -3.6124e-01, -2.4306e-01, -4.4178e-02,
         -9.5158e-01,  8.5988e-01, -1.2580e-01,  8.7351e-01,  1.8785e-01,
          1.2583e+00,  2.7154e-02,  3.0536e-01,  1.7495e-01, -1.0298e+00,
         -7.9820e-01,  2.3061e-01,  6.0282e-01,  5.4504e-01,  2.2259e-02,
         -4.7643e-02, -9.8750e-02,  4.4204e-01, -2.6534e-01, -1.3636e-01,
         -3.3342e-01,  3.2635e-01,  1.5627e-01,  6.3560e-02,  3.3350e-01,
          4.7930e-01,  1.9914e-01, -1.1780e-01,  1.6039e-01, -9.8274e-02,
         -1.1271e-01,  1.5663e-01,  2.2374e-02, -2.2742e-01,  3.4382e-01,
          4.0586e-01, -9.7710e-02, -1.5110e-01, -7.9109e-03,  9.7268e-02,
         -2.5650e-01,  3.2995e-01, -1.6468e-01,  2.4440e-02, -2.4958e-01,
         -5.1423e-02,  1.3066e-01,  5.8911e-01, -2.2502e-02,  3.2081e-01,
          1.6924e-01,  1.1720e-01,  1.4117e-01,  1.0760e-01, -3.0298e-01,
         -2.2480e-01,  3.6135e-02,  2.1758e-01, -7.8690e-02, -1.0833e-01,
          2.3327e-01,  1.0661e-01, -1.3607e-01,  2.7096e-01,  1.7922e-01,
          1.0911e-01,  1.2831e-01,  1.3347e-02, -1.8129e-01,  2.0869e-02,
          1.7986e-01,  1.3461e-03,  3.6273e-01, -1.7779e-01, -6.5530e-01,
          3.8905e-02,  8.5731e-01, -3.1106e-01, -3.9992e-02,  8.0822e-02,
         -3.4210e-01,  1.7470e-01,  5.4551e-01, -2.2980e-02,  9.9572e-02,
         -3.6273e-01,  4.4038e-01, -5.4685e-01,  1.1823e-01, -1.4683e-01,
         -6.2744e-01,  6.7835e-01, -2.5763e-01, -4.1304e-01,  3.4798e-02,
          1.6896e-02,  1.7975e-01, -1.1929e-01,  4.0895e-03, -3.2737e-02,
         -2.3168e-02,  4.4690e-02,  3.1027e-02, -1.4786e-01,  1.6420e-01,
          5.2906e-02,  2.5658e-01,  2.1636e-01,  3.3806e-01,  3.6470e-02,
          1.4954e-01, -7.7289e-02,  6.7367e-02, -1.9980e-02, -5.0792e-02,
         -9.1750e-03, -7.8035e-02,  1.9973e-01,  1.1655e-01, -3.6671e-01,
         -1.8210e-01, -4.6901e-02,  1.7692e-03, -5.8481e-01, -1.1459e-01,
          1.8086e-01, -9.0227e-02,  1.4547e-01, -4.3739e-04, -2.8501e-02,
          3.8586e-02, -3.8164e-01,  1.2785e-01, -2.3816e-01, -2.2968e-01,
          2.6417e-02, -1.3041e-01,  8.7516e-02, -3.0255e-02, -1.2077e-01,
         -3.7107e-01, -1.2157e-01,  2.6292e-01,  5.6687e-02,  2.1610e-01,
          5.0938e-02]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
365000 特征值优化 tensor(2.5677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5944,  1.3304,  0.1201, -0.9988,  1.6341,  1.5968, -0.9756, -1.8455,
          0.5929, -0.5949, -0.4341,  0.3087, -0.1463, -0.1845,  0.0527, -0.8930,
          0.8455, -0.0559,  0.8199,  0.1891,  1.1888, -0.0084,  0.2401,  0.3105,
         -1.0743, -0.8181,  0.1277,  0.6111,  0.5542,  0.0716, -0.0665, -0.1200,
          0.4065, -0.2284, -0.1037, -0.3191,  0.4625,  0.1663,  0.0756,  0.3100,
          0.5228,  0.1839, -0.1020,  0.2347, -0.1491, -0.1439,  0.2243, -0.0372,
         -0.1810,  0.3431,  0.3762, -0.1386, -0.1370, -0.0092,  0.0784, -0.3116,
          0.2737, -0.1749,  0.0199, -0.2248, -0.0462,  0.1171,  0.5814,  0.0570,
          0.2932,  0.2258,  0.1058,  0.1732,  0.0805, -0.2865, -0.1856,  0.0704,
          0.2217, -0.0320, -0.1376,  0.2235,  0.0438, -0.0918,  0.2761,  0.1938,
          0.1067,  0.1269, -0.0151, -0.0682, -0.0204,  0.1207, -0.0096,  0.3826,
         -0.0599, -0.6348,  0.1927,  1.1346, -0.2311, -0.0693,  0.0587, -0.3277,
          0.1662,  0.4642, -0.1593,  0.1714, -0.4170,  0.2329, -0.7249,  0.1752,
         -0.1297, -0.6004,  0.7306, -0.2311, -0.5220,  0.0340,  0.0098,  0.0478,
         -0.0953,  0.0035,  0.0207, -0.0712,  0.0452, -0.0109, -0.1506,  0.1128,
          0.0711,  0.2750,  0.2171,  0.2154,  0.0509,  0.1441, -0.0585,  0.1018,
          0.0380, -0.0033,  0.0088, -0.0943,  0.1718,  0.1040, -0.3737, -0.2235,
         -0.0834, -0.0209, -0.5275, -0.1439,  0.2204, -0.0819,  0.1567,  0.0030,
         -0.0238,  0.0530, -0.3194,  0.2043, -0.2990, -0.1762, -0.0327, -0.2193,
          0.1344, -0.0421, -0.0731, -0.3953, -0.0581,  0.2396,  0.0268,  0.2267,
          0.0110]], device='cuda:0') tensor(0.2573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
366000 特征值优化 tensor(2.5932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6634,  1.1888,  0.2042, -0.9913,  1.9026,  1.6722, -0.9941, -1.9313,
          0.4810, -0.5946, -0.4520,  0.3365, -0.0602, -0.0519,  0.1064, -0.8531,
          0.8524, -0.0225,  0.8022,  0.1385,  1.0896,  0.0136,  0.2240,  0.3739,
         -1.0919, -0.8265,  0.0972,  0.5974,  0.5743,  0.0919, -0.0614, -0.1019,
          0.3944, -0.1099, -0.1192, -0.3157,  0.3799,  0.2195,  0.0543,  0.2908,
          0.5437,  0.1775, -0.0983,  0.2734, -0.1791, -0.1599,  0.2489, -0.0947,
         -0.1512,  0.3526,  0.3566, -0.1681, -0.1343, -0.0128,  0.0557, -0.3301,
          0.2393, -0.1628,  0.0247, -0.2046, -0.0284,  0.1345,  0.5648,  0.0978,
          0.2959,  0.2465,  0.1015,  0.2072,  0.0833, -0.3063, -0.1724,  0.0739,
          0.2101, -0.0584, -0.1534,  0.1735,  0.0397, -0.1037,  0.2478,  0.1791,
          0.1153,  0.1379, -0.0461, -0.0651, -0.0578,  0.0961, -0.0276,  0.4888,
         -0.0362, -0.6216,  0.2014,  1.2071, -0.2133, -0.0786,  0.0726, -0.3508,
          0.0286,  0.4408, -0.1797,  0.1353, -0.4386,  0.2316, -0.8001,  0.1809,
         -0.1144, -0.5888,  0.6847, -0.2184, -0.4984,  0.0300, -0.0042, -0.0098,
         -0.0506, -0.0033,  0.0367, -0.0581,  0.0181, -0.0027, -0.1383,  0.0393,
          0.0795,  0.2555,  0.2178,  0.1482,  0.0669,  0.1708, -0.0609,  0.1187,
          0.0441,  0.0249,  0.0196, -0.0972,  0.1777,  0.0824, -0.3795, -0.2117,
         -0.0824, -0.0653, -0.5336, -0.1283,  0.3016, -0.1504,  0.0821, -0.0150,
         -0.0681,  0.0676, -0.3310,  0.2372, -0.3244, -0.1753, -0.0497, -0.2166,
          0.1249, -0.0684, -0.0682, -0.3899, -0.0313,  0.2376,  0.0023,  0.2441,
          0.0044]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
367000 特征值优化 tensor(2.5899, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.0551e-01,  1.0504e+00,  2.5621e-01, -9.9586e-01,  2.2558e+00,
          1.6822e+00, -9.9958e-01, -1.9531e+00,  4.1259e-01, -6.2605e-01,
         -4.8063e-01,  3.0588e-01, -4.6167e-02,  9.3581e-03,  1.1758e-01,
         -8.6129e-01,  9.0729e-01, -6.7419e-03,  7.8441e-01,  1.0314e-01,
          1.0474e+00,  6.7188e-02,  2.3381e-01,  4.4434e-01, -1.0893e+00,
         -8.3250e-01,  8.7956e-02,  5.7911e-01,  5.9632e-01,  9.7301e-02,
         -7.8002e-02, -1.0102e-01,  3.9205e-01, -6.9367e-02, -1.3744e-01,
         -2.9512e-01,  3.0464e-01,  2.2301e-01,  4.2850e-02,  2.8588e-01,
          5.5581e-01,  1.7465e-01, -9.5135e-02,  2.8586e-01, -1.7836e-01,
         -1.6386e-01,  2.4683e-01, -1.5030e-01, -1.2934e-01,  3.6632e-01,
          3.2206e-01, -1.8222e-01, -1.2714e-01,  1.3509e-02,  2.9837e-02,
         -3.3268e-01,  2.0700e-01, -1.6379e-01,  1.8272e-02, -1.9118e-01,
         -3.1815e-02,  1.2800e-01,  5.5271e-01,  1.1356e-01,  2.8871e-01,
          2.6974e-01,  9.5735e-02,  2.3552e-01,  5.5990e-02, -3.1393e-01,
         -1.6555e-01,  5.8093e-02,  2.0325e-01, -9.1686e-02, -1.2780e-01,
          1.6490e-01,  3.4144e-02, -1.0760e-01,  2.4377e-01,  1.7475e-01,
          1.2325e-01,  1.4966e-01, -6.5732e-02, -9.2498e-02, -6.9189e-02,
          7.3726e-02, -4.5368e-02,  5.2833e-01, -5.3800e-03, -5.9724e-01,
          2.1902e-01,  1.3130e+00, -2.0376e-01, -8.6131e-02,  7.4460e-02,
         -3.6170e-01, -8.8945e-02,  4.6996e-01, -1.9119e-01,  1.1668e-01,
         -4.0985e-01,  2.5508e-01, -8.7882e-01,  1.6924e-01, -8.8678e-02,
         -5.4528e-01,  6.1752e-01, -2.2700e-01, -4.5983e-01,  3.5568e-02,
         -1.5019e-02, -1.9683e-02, -3.3853e-02, -8.4997e-03,  4.3896e-02,
         -1.8099e-02, -3.5172e-02, -8.8326e-04, -1.2308e-01,  1.7012e-03,
          5.8829e-02,  2.3346e-01,  1.9692e-01,  1.1833e-01,  7.5274e-02,
          1.6674e-01, -5.1069e-02,  1.3312e-01,  5.1230e-02,  5.1712e-02,
          1.6304e-02, -8.9800e-02,  1.7615e-01,  5.6639e-02, -3.7958e-01,
         -2.1846e-01, -9.4094e-02, -7.4103e-02, -5.0302e-01, -1.0047e-01,
          3.4426e-01, -1.4442e-01,  7.4767e-02, -1.2350e-02, -8.3500e-02,
          9.0386e-02, -3.1490e-01,  2.2790e-01, -3.5319e-01, -1.5940e-01,
         -3.7157e-02, -2.1240e-01,  1.2414e-01, -8.9270e-02, -4.2876e-02,
         -4.0290e-01, -3.7768e-02,  2.2553e-01, -2.7278e-02,  2.3483e-01,
         -1.2742e-02]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
368000 特征值优化 tensor(2.5491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.2969e-01,  9.3508e-01,  2.8016e-01, -9.9533e-01,  2.7065e+00,
          1.6764e+00, -9.5832e-01, -1.9561e+00,  3.5501e-01, -6.8601e-01,
         -4.9031e-01,  2.6789e-01, -6.9346e-02,  6.2943e-02,  8.7792e-02,
         -8.7840e-01,  9.3525e-01,  9.2359e-03,  7.7328e-01,  8.2105e-02,
          1.0050e+00,  1.1696e-01,  2.5660e-01,  5.3142e-01, -1.0956e+00,
         -8.4862e-01,  1.0415e-01,  5.5538e-01,  5.9947e-01,  8.8180e-02,
         -1.0960e-01, -1.0189e-01,  3.7671e-01, -2.2850e-02, -1.4314e-01,
         -2.7007e-01,  2.1138e-01,  1.9372e-01,  3.2303e-02,  3.0345e-01,
          5.5707e-01,  1.7580e-01, -9.7146e-02,  2.9420e-01, -1.7005e-01,
         -1.7870e-01,  2.2318e-01, -2.1617e-01, -7.9560e-02,  3.6421e-01,
          2.8255e-01, -2.0789e-01, -1.3039e-01,  3.2627e-02,  7.3840e-03,
         -3.1957e-01,  1.9562e-01, -1.8029e-01,  3.1791e-02, -1.7277e-01,
         -3.9524e-02,  1.0685e-01,  5.4856e-01,  1.0681e-01,  2.7834e-01,
          2.7958e-01,  8.5558e-02,  2.5919e-01,  2.3429e-02, -3.1504e-01,
         -1.7685e-01,  6.7648e-02,  1.9027e-01, -1.2894e-01, -1.0832e-01,
          1.3440e-01,  1.6494e-02, -1.0839e-01,  2.4646e-01,  1.8030e-01,
          1.3114e-01,  1.6985e-01, -8.9139e-02, -9.7378e-02, -6.8630e-02,
          3.9495e-02, -3.7369e-02,  5.4861e-01,  1.2000e-02, -5.9139e-01,
          2.2652e-01,  1.4002e+00, -2.1229e-01, -1.1918e-01,  7.0328e-02,
         -3.6805e-01, -1.9123e-01,  5.0753e-01, -1.0587e-01,  1.2262e-01,
         -3.4299e-01,  2.8102e-01, -9.6696e-01,  1.6859e-01, -8.1622e-02,
         -5.0295e-01,  5.7227e-01, -2.6180e-01, -3.8152e-01,  5.2436e-02,
         -2.4705e-02, -3.9567e-06, -4.2198e-02, -9.5371e-03,  6.5579e-02,
          4.4915e-03, -1.2116e-01, -1.2568e-02, -9.7685e-02, -4.2670e-02,
          4.0707e-02,  1.9991e-01,  1.6290e-01,  9.2830e-02,  7.6794e-02,
          1.5670e-01, -3.8245e-02,  1.4439e-01,  6.4154e-02,  7.3716e-02,
         -4.5457e-03, -7.2303e-02,  1.6770e-01,  8.6082e-03, -3.8045e-01,
         -1.9013e-01, -1.1786e-01, -5.2464e-02, -4.4454e-01, -9.5493e-02,
          3.4311e-01, -1.4983e-01,  8.8391e-02,  7.0151e-03, -8.4520e-02,
          1.1905e-01, -3.0681e-01,  2.2583e-01, -3.3499e-01, -1.7198e-01,
         -4.4108e-02, -2.1276e-01,  1.3289e-01, -1.0034e-01, -3.9231e-02,
         -4.1947e-01, -2.7332e-02,  1.9685e-01, -3.1356e-02,  2.2306e-01,
         -3.4010e-02]], device='cuda:0') tensor(0.2316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
369000 特征值优化 tensor(2.5771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4540,  0.8355,  0.3338, -1.0102,  3.1652,  1.6592, -0.9466, -1.9517,
          0.2866, -0.7501, -0.4948,  0.2602, -0.0898,  0.0814,  0.0165, -0.9344,
          0.9218,  0.0446,  0.7652,  0.0723,  0.9780,  0.1818,  0.2730,  0.5976,
         -1.0758, -0.8592,  0.0938,  0.5228,  0.6479,  0.0896, -0.1056, -0.1036,
          0.3756, -0.0068, -0.1707, -0.2498,  0.1317,  0.1907,  0.0226,  0.2971,
          0.5650,  0.1791, -0.0997,  0.2752, -0.1597, -0.1720,  0.2091, -0.2655,
         -0.0110,  0.3749,  0.2496, -0.2124, -0.1262,  0.0635, -0.0237, -0.3156,
          0.1687, -0.1696,  0.0343, -0.1665, -0.0473,  0.1254,  0.5412,  0.0567,
          0.2565,  0.2785,  0.1018,  0.2728, -0.0233, -0.3138, -0.1705,  0.0742,
          0.1849, -0.1466, -0.0920,  0.1095,  0.0357, -0.1349,  0.2073,  0.1634,
          0.1150,  0.1736, -0.1127, -0.1067, -0.0868,  0.0309, -0.0286,  0.5580,
          0.0322, -0.5551,  0.2339,  1.4910, -0.2245, -0.1484,  0.0654, -0.3828,
         -0.2880,  0.5475,  0.0223,  0.1488, -0.2666,  0.3140, -1.0546,  0.1538,
         -0.0594, -0.4709,  0.5389, -0.2831, -0.2895,  0.0603, -0.0258,  0.0099,
         -0.0412, -0.0424,  0.0718,  0.0089, -0.1846,  0.0053, -0.0636, -0.0543,
          0.0472,  0.1502,  0.1207,  0.0694,  0.0894,  0.1523, -0.0340,  0.1625,
          0.0546,  0.0884, -0.0124, -0.0547,  0.1620, -0.0506, -0.3709, -0.1408,
         -0.1696, -0.0420, -0.3754, -0.0742,  0.3334, -0.1418,  0.1409,  0.0275,
         -0.0866,  0.1314, -0.3002,  0.2074, -0.3398, -0.1584, -0.0161, -0.2157,
          0.1431, -0.1009, -0.0257, -0.4255,  0.0123,  0.1950, -0.0566,  0.2084,
         -0.0230]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
370000 特征值优化 tensor(2.5736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.3863e-01,  7.2661e-01,  3.7961e-01, -1.0122e+00,  3.5429e+00,
          1.6461e+00, -9.3313e-01, -1.9518e+00,  2.3416e-01, -8.0342e-01,
         -4.9618e-01,  2.2744e-01, -1.1619e-01,  8.6083e-02, -2.6190e-02,
         -9.3177e-01,  8.5609e-01,  5.7597e-02,  7.4273e-01,  7.0799e-02,
          9.6831e-01,  2.2929e-01,  2.8422e-01,  6.5853e-01, -1.0687e+00,
         -8.6137e-01,  1.1514e-01,  5.2391e-01,  6.4361e-01,  8.7374e-02,
         -9.1740e-02, -8.9896e-02,  3.7792e-01,  4.3713e-02, -1.8217e-01,
         -2.4403e-01,  7.3318e-02,  1.6578e-01,  1.4511e-02,  3.1500e-01,
          5.6774e-01,  1.8216e-01, -1.0399e-01,  2.8588e-01, -1.6146e-01,
         -1.6215e-01,  1.8447e-01, -2.6718e-01,  3.2978e-02,  3.8012e-01,
          2.1890e-01, -2.3476e-01, -1.1391e-01,  7.3679e-02, -5.5499e-02,
         -2.9450e-01,  1.5467e-01, -1.9931e-01,  4.1614e-02, -1.4365e-01,
         -5.7795e-02,  1.1951e-01,  5.4151e-01,  4.0331e-02,  2.5118e-01,
          2.6241e-01,  9.1063e-02,  2.6518e-01, -7.3434e-02, -3.0861e-01,
         -1.8099e-01,  8.0048e-02,  1.7724e-01, -1.6081e-01, -6.7883e-02,
          9.3925e-02,  5.2697e-02, -1.4066e-01,  2.1179e-01,  1.7045e-01,
          1.1833e-01,  1.8275e-01, -1.3928e-01, -8.9981e-02, -8.4851e-02,
          2.6533e-03, -2.3373e-02,  5.6442e-01,  4.2129e-02, -5.2051e-01,
          2.4245e-01,  1.5507e+00, -2.2082e-01, -1.6815e-01,  5.0581e-02,
         -3.9099e-01, -3.5319e-01,  5.7387e-01,  1.0791e-01,  1.8631e-01,
         -1.9880e-01,  3.4190e-01, -1.1109e+00,  1.5533e-01, -4.5280e-02,
         -4.3522e-01,  5.0726e-01, -3.0105e-01, -2.4408e-01,  7.6466e-02,
         -2.8388e-02,  2.3154e-02, -4.2049e-02, -4.1822e-02,  7.7456e-02,
          1.6960e-02, -2.2387e-01,  1.3193e-03, -4.6216e-02, -7.0981e-02,
          5.5524e-02,  1.2539e-01,  8.9730e-02,  6.3806e-02,  9.2033e-02,
          1.3676e-01, -3.0344e-02,  1.6799e-01,  6.7078e-02,  8.8517e-02,
         -7.2217e-03, -3.5708e-02,  1.4894e-01, -8.2552e-02, -3.6686e-01,
         -1.1932e-01, -2.0579e-01, -3.2849e-02, -3.1626e-01, -7.5419e-02,
          3.0659e-01, -9.9511e-02,  1.3276e-01,  5.3691e-02, -5.7060e-02,
          1.7266e-01, -2.7691e-01,  2.0899e-01, -3.3095e-01, -1.6425e-01,
         -1.6135e-02, -2.0420e-01,  1.7086e-01, -1.0151e-01, -2.3321e-02,
         -4.1988e-01,  1.3834e-02,  1.7972e-01, -2.9842e-02,  2.0035e-01,
         -3.0806e-02]], device='cuda:0') tensor(0.2219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
371000 特征值优化 tensor(2.5261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.4952e-01,  6.0777e-01,  4.1426e-01, -1.0176e+00,  3.8576e+00,
          1.6439e+00, -9.3599e-01, -1.9598e+00,  2.1742e-01, -8.2723e-01,
         -5.0505e-01,  2.2999e-01, -1.5350e-01,  7.4522e-02, -4.2604e-02,
         -8.7816e-01,  7.5492e-01,  4.3116e-02,  7.4172e-01,  9.5021e-02,
          9.4853e-01,  2.8100e-01,  2.9174e-01,  7.0511e-01, -1.0581e+00,
         -8.6135e-01,  1.3005e-01,  5.2517e-01,  6.5443e-01,  8.9222e-02,
         -9.0176e-02, -7.6516e-02,  3.7707e-01,  4.3815e-02, -1.8390e-01,
         -2.3984e-01,  1.9253e-02,  1.3637e-01,  1.9285e-02,  3.1210e-01,
          5.7373e-01,  1.7545e-01, -9.7104e-02,  3.0352e-01, -1.5856e-01,
         -1.5833e-01,  1.5944e-01, -2.7886e-01,  5.3226e-02,  3.8408e-01,
          1.9030e-01, -2.5309e-01, -1.1310e-01,  7.6811e-02, -7.7993e-02,
         -2.9153e-01,  1.3512e-01, -1.9970e-01,  3.7989e-02, -1.1851e-01,
         -9.0683e-02,  1.2254e-01,  5.4428e-01,  2.2038e-02,  2.5117e-01,
          2.4855e-01,  9.2524e-02,  2.6777e-01, -9.3028e-02, -3.1839e-01,
         -1.8014e-01,  8.2453e-02,  1.7369e-01, -1.6292e-01, -7.2863e-02,
          8.2585e-02,  5.8867e-02, -1.5999e-01,  1.9110e-01,  1.6228e-01,
          1.0760e-01,  1.8457e-01, -1.5098e-01, -8.5537e-02, -8.7441e-02,
         -7.1507e-03, -9.6261e-03,  5.7330e-01,  4.5000e-02, -5.0737e-01,
          2.3580e-01,  1.6070e+00, -2.1780e-01, -1.5226e-01,  6.0609e-02,
         -3.9708e-01, -4.1251e-01,  5.8387e-01,  1.5653e-01,  2.1346e-01,
         -1.8195e-01,  3.5274e-01, -1.1326e+00,  1.5587e-01, -4.2405e-02,
         -4.2232e-01,  4.5502e-01, -2.9973e-01, -2.2066e-01,  8.3809e-02,
         -2.3983e-02,  3.4959e-02, -3.1049e-02, -5.5355e-02,  6.6642e-02,
          1.1952e-02, -2.6520e-01,  2.5534e-03, -3.1659e-02, -6.7195e-02,
          5.6123e-02,  1.2510e-01,  7.1022e-02,  5.2954e-02,  9.2149e-02,
          1.2519e-01, -3.4294e-02,  1.7976e-01,  6.3517e-02,  8.7598e-02,
          4.1693e-03, -1.6161e-02,  1.4678e-01, -1.0755e-01, -3.5971e-01,
         -1.1180e-01, -2.3396e-01, -3.4136e-02, -2.8495e-01, -1.0021e-01,
          2.9410e-01, -6.5474e-02,  1.2695e-01,  6.1730e-02, -3.8235e-02,
          1.8041e-01, -2.6336e-01,  2.2694e-01, -3.2885e-01, -1.7220e-01,
         -1.1619e-02, -2.1463e-01,  1.7258e-01, -8.5591e-02, -1.3775e-02,
         -3.9541e-01,  2.6808e-02,  1.8361e-01, -3.2576e-02,  1.8177e-01,
         -2.8451e-02]], device='cuda:0') tensor(0.2189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
372000 特征值优化 tensor(2.5382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.0639e-01,  5.0932e-01,  4.0965e-01, -1.0134e+00,  4.1243e+00,
          1.6417e+00, -9.4645e-01, -1.9686e+00,  2.0074e-01, -8.4265e-01,
         -5.0724e-01,  2.4546e-01, -1.9380e-01,  5.7636e-02, -5.2867e-02,
         -8.0726e-01,  6.4959e-01,  3.4406e-02,  7.2492e-01,  9.6134e-02,
          9.3045e-01,  3.1579e-01,  3.0896e-01,  7.3168e-01, -1.0722e+00,
         -8.6492e-01,  1.4252e-01,  5.0272e-01,  6.5601e-01,  8.8453e-02,
         -7.0261e-02, -6.0335e-02,  3.9547e-01,  2.1754e-02, -1.9544e-01,
         -2.3044e-01, -2.0546e-02,  1.1652e-01,  3.2942e-02,  3.0135e-01,
          5.7386e-01,  1.7623e-01, -9.9577e-02,  3.1462e-01, -1.5302e-01,
         -1.5642e-01,  1.4422e-01, -2.8264e-01,  7.7286e-02,  3.9179e-01,
          1.6509e-01, -2.6242e-01, -1.0392e-01,  7.2161e-02, -8.3728e-02,
         -2.7406e-01,  1.4369e-01, -1.9109e-01,  3.5591e-02, -1.0372e-01,
         -1.1183e-01,  1.2829e-01,  5.5171e-01,  7.7666e-03,  2.4402e-01,
          2.3711e-01,  9.6470e-02,  2.6718e-01, -1.0212e-01, -3.3661e-01,
         -1.6875e-01,  9.0659e-02,  1.6611e-01, -1.5337e-01, -8.8247e-02,
          5.2819e-02,  7.3504e-02, -1.7261e-01,  1.7366e-01,  1.6118e-01,
          1.0569e-01,  1.8333e-01, -1.5323e-01, -6.4673e-02, -9.5150e-02,
         -1.5948e-02,  9.3449e-03,  5.5739e-01,  6.4926e-02, -5.0326e-01,
          2.2409e-01,  1.6514e+00, -2.5401e-01, -1.4693e-01,  4.9108e-02,
         -3.9389e-01, -4.5098e-01,  5.7306e-01,  1.5904e-01,  2.3304e-01,
         -1.5239e-01,  3.6818e-01, -1.1419e+00,  1.5410e-01, -3.3530e-02,
         -4.0857e-01,  4.2064e-01, -3.0160e-01, -1.8890e-01,  8.6837e-02,
         -1.4722e-02,  4.2252e-02, -2.8919e-02, -6.6130e-02,  5.7242e-02,
          1.8324e-02, -2.7986e-01,  2.3597e-03, -1.2157e-02, -6.1885e-02,
          5.6998e-02,  1.4028e-01,  6.1195e-02,  5.4592e-02,  9.6671e-02,
          1.2304e-01, -4.0137e-02,  1.8992e-01,  6.7318e-02,  8.2174e-02,
          1.5958e-02, -8.9038e-03,  1.4635e-01, -1.2452e-01, -3.5337e-01,
         -1.0354e-01, -2.6822e-01, -4.0725e-02, -2.4936e-01, -1.4337e-01,
          2.9647e-01, -5.0601e-02,  9.8758e-02,  6.3779e-02, -3.2346e-02,
          1.8217e-01, -2.5764e-01,  2.3010e-01, -3.3286e-01, -1.8659e-01,
         -7.3445e-04, -2.1825e-01,  1.8182e-01, -6.7704e-02, -1.4580e-02,
         -3.7677e-01,  1.8416e-02,  1.8541e-01, -5.1450e-02,  1.6876e-01,
         -3.4359e-02]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
373000 特征值优化 tensor(2.5244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6869e-01,  4.2934e-01,  3.9741e-01, -1.0155e+00,  4.3247e+00,
          1.6395e+00, -9.5090e-01, -1.9811e+00,  1.9503e-01, -8.4851e-01,
         -4.9834e-01,  2.6601e-01, -2.2403e-01,  4.2144e-02, -5.9246e-02,
         -7.4523e-01,  5.5316e-01,  1.5260e-02,  7.2934e-01,  9.0272e-02,
          9.2034e-01,  3.4928e-01,  3.0189e-01,  7.4584e-01, -1.0819e+00,
         -8.6990e-01,  1.4831e-01,  5.0338e-01,  6.4852e-01,  8.3839e-02,
         -7.0756e-02, -4.2068e-02,  3.8950e-01,  3.0891e-02, -1.9429e-01,
         -2.2505e-01, -4.6957e-02,  9.4222e-02,  4.5204e-02,  2.9959e-01,
          5.7283e-01,  1.7525e-01, -9.7793e-02,  3.1369e-01, -1.4646e-01,
         -1.4962e-01,  1.3909e-01, -2.7956e-01,  9.1806e-02,  4.0879e-01,
          1.4418e-01, -2.7417e-01, -9.7752e-02,  6.1298e-02, -8.6561e-02,
         -2.5200e-01,  1.5138e-01, -1.9895e-01,  2.0910e-02, -8.6786e-02,
         -1.4841e-01,  1.1813e-01,  5.5434e-01,  8.3513e-03,  2.4510e-01,
          2.3599e-01,  9.8608e-02,  2.6595e-01, -1.1342e-01, -3.3961e-01,
         -1.6947e-01,  7.4581e-02,  1.6067e-01, -1.5434e-01, -8.0337e-02,
          5.3083e-02,  9.1675e-02, -1.8488e-01,  1.7459e-01,  1.5084e-01,
          9.8777e-02,  1.8384e-01, -1.5023e-01, -6.0472e-02, -1.1137e-01,
         -9.4084e-03,  1.0804e-02,  5.6935e-01,  7.2971e-02, -4.9375e-01,
          2.1994e-01,  1.6869e+00, -2.3716e-01, -1.2948e-01,  5.5792e-02,
         -3.8980e-01, -4.9856e-01,  5.7861e-01,  2.0331e-01,  2.5761e-01,
         -1.5258e-01,  3.6370e-01, -1.1425e+00,  1.5252e-01, -2.2337e-02,
         -3.9520e-01,  3.9510e-01, -3.1091e-01, -1.7146e-01,  9.3935e-02,
         -2.0302e-02,  4.5192e-02, -9.8884e-03, -6.5058e-02,  5.2439e-02,
          2.0007e-02, -2.9486e-01,  4.1342e-03, -6.5113e-03, -5.9798e-02,
          5.3469e-02,  1.4590e-01,  3.5910e-02,  5.5194e-02,  1.0347e-01,
          1.1973e-01, -3.5859e-02,  2.0985e-01,  5.9590e-02,  8.0744e-02,
          2.8175e-02, -5.3352e-03,  1.4679e-01, -1.3259e-01, -3.4518e-01,
         -1.0037e-01, -2.6854e-01, -6.0107e-02, -2.2322e-01, -1.6564e-01,
          3.0243e-01, -2.9040e-02,  8.9938e-02,  6.8416e-02, -3.5053e-02,
          1.7952e-01, -2.5096e-01,  2.2655e-01, -3.3944e-01, -1.9134e-01,
          9.8307e-03, -2.1553e-01,  1.7674e-01, -5.6602e-02, -8.7025e-03,
         -3.6539e-01,  6.3019e-03,  1.9360e-01, -5.5031e-02,  1.5796e-01,
         -4.1884e-02]], device='cuda:0') tensor(0.2760, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
374000 特征值优化 tensor(2.5053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3889e-01,  3.8437e-01,  3.7788e-01, -1.0239e+00,  4.4694e+00,
          1.6473e+00, -9.5229e-01, -1.9811e+00,  1.8635e-01, -8.5765e-01,
         -4.8810e-01,  2.7195e-01, -2.7343e-01,  2.2981e-02, -3.5249e-02,
         -6.7741e-01,  5.1092e-01,  3.0665e-03,  7.3246e-01,  6.8127e-02,
          9.2506e-01,  3.8290e-01,  2.9560e-01,  7.6721e-01, -1.0941e+00,
         -8.8896e-01,  1.5488e-01,  4.9666e-01,  6.5548e-01,  8.0935e-02,
         -7.4386e-02, -3.7868e-02,  4.0134e-01,  2.8436e-02, -1.8916e-01,
         -2.1846e-01, -8.1094e-02,  9.7198e-02,  6.3748e-02,  2.7455e-01,
          5.6627e-01,  1.8266e-01, -1.0339e-01,  2.9443e-01, -1.4425e-01,
         -1.6119e-01,  1.2510e-01, -2.6419e-01,  1.0050e-01,  4.1623e-01,
          1.1968e-01, -2.6677e-01, -8.2323e-02,  4.4992e-02, -9.0426e-02,
         -2.1557e-01,  1.4235e-01, -2.0716e-01,  1.6225e-02, -7.9033e-02,
         -1.7087e-01,  9.8601e-02,  5.6817e-01,  2.6468e-02,  2.3571e-01,
          2.3562e-01,  1.0791e-01,  2.6353e-01, -1.3991e-01, -3.4499e-01,
         -1.8053e-01,  5.4498e-02,  1.5534e-01, -1.5799e-01, -5.7241e-02,
          7.3110e-02,  1.0734e-01, -2.1594e-01,  1.7894e-01,  1.3747e-01,
          9.7519e-02,  1.7938e-01, -1.2975e-01, -6.5558e-02, -1.3309e-01,
         -1.9531e-03,  1.4210e-02,  5.7569e-01,  7.2244e-02, -4.4594e-01,
          2.2691e-01,  1.7126e+00, -2.1816e-01, -1.2711e-01,  4.8012e-02,
         -3.9023e-01, -5.2614e-01,  6.1984e-01,  1.9591e-01,  2.6044e-01,
         -1.8023e-01,  3.6694e-01, -1.1483e+00,  1.5386e-01, -9.2668e-03,
         -3.7108e-01,  3.7543e-01, -3.0765e-01, -1.5085e-01,  1.0929e-01,
         -1.4028e-02,  5.3801e-02,  1.1650e-02, -4.6346e-02,  5.5047e-02,
          3.9524e-02, -3.0459e-01,  1.8227e-02,  1.1220e-02, -1.0687e-01,
          4.0501e-02,  1.4838e-01,  7.0316e-03,  5.4213e-02,  1.0734e-01,
          1.1090e-01, -2.3765e-02,  2.1974e-01,  6.1386e-02,  8.9785e-02,
          4.2253e-02,  3.9784e-03,  1.5435e-01, -1.4307e-01, -3.3259e-01,
         -9.6205e-02, -2.7226e-01, -6.5133e-02, -1.7729e-01, -1.7292e-01,
          3.2198e-01, -3.1129e-02,  8.8333e-02,  4.5574e-02, -2.6270e-02,
          1.9118e-01, -2.3631e-01,  2.0918e-01, -3.5213e-01, -1.7954e-01,
          2.3138e-02, -2.2139e-01,  1.6937e-01, -3.8901e-02,  1.7843e-02,
         -3.6246e-01,  5.7468e-04,  2.0534e-01, -7.1935e-02,  1.5341e-01,
         -2.0246e-02]], device='cuda:0') tensor(0.2148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
375000 特征值优化 tensor(2.5274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2975e-01,  3.7401e-01,  3.2451e-01, -1.0083e+00,  4.5415e+00,
          1.6638e+00, -9.5156e-01, -1.9821e+00,  2.1169e-01, -8.5917e-01,
         -4.7888e-01,  3.0672e-01, -2.9271e-01, -2.9708e-03, -3.8099e-02,
         -6.3055e-01,  4.2008e-01, -8.9387e-04,  7.2325e-01,  6.3636e-02,
          9.1849e-01,  4.0958e-01,  3.1536e-01,  7.8494e-01, -1.1280e+00,
         -8.7035e-01,  1.6318e-01,  4.9212e-01,  6.3338e-01,  7.9061e-02,
         -7.7409e-02, -2.3621e-02,  3.8781e-01,  1.0388e-02, -1.8646e-01,
         -1.9709e-01, -8.5310e-02,  7.7015e-02,  6.5446e-02,  2.7182e-01,
          5.6052e-01,  1.6876e-01, -9.1675e-02,  2.9409e-01, -1.4111e-01,
         -1.6511e-01,  8.0596e-02, -2.6291e-01,  1.0497e-01,  4.2096e-01,
          9.9328e-02, -2.9063e-01, -8.3390e-02,  4.6923e-02, -9.9212e-02,
         -1.6145e-01,  1.4761e-01, -1.9411e-01, -4.6595e-03, -6.5690e-02,
         -2.1640e-01,  1.0523e-01,  5.6482e-01,  5.3918e-03,  2.2264e-01,
          2.2236e-01,  1.1894e-01,  2.7821e-01, -1.3333e-01, -3.5116e-01,
         -1.6039e-01,  4.8091e-02,  1.4956e-01, -1.5856e-01, -7.4397e-02,
          5.4190e-02,  1.1197e-01, -1.7592e-01,  1.5693e-01,  1.4138e-01,
          9.4361e-02,  1.8494e-01, -1.4324e-01, -1.6967e-02, -1.3732e-01,
         -3.5756e-03,  5.9065e-02,  5.8629e-01,  7.5762e-02, -4.3979e-01,
          2.2127e-01,  1.7490e+00, -2.2121e-01, -1.0508e-01,  4.9386e-02,
         -3.6415e-01, -5.4876e-01,  6.1448e-01,  2.1913e-01,  2.7152e-01,
         -1.8719e-01,  3.6130e-01, -1.1633e+00,  1.4685e-01, -6.3045e-03,
         -3.5680e-01,  3.4680e-01, -3.3346e-01, -1.3773e-01,  1.0730e-01,
         -1.4122e-02,  5.0881e-02,  5.7754e-02, -6.9916e-02,  5.4607e-02,
          5.2671e-02, -3.0430e-01,  1.1187e-03,  8.8693e-03, -1.2374e-01,
          5.0253e-02,  1.5532e-01,  6.9124e-03,  6.5426e-02,  1.0584e-01,
          1.0887e-01, -3.0430e-02,  2.3193e-01,  4.9828e-02,  8.3878e-02,
          5.0596e-02,  6.3317e-03,  1.5454e-01, -1.6327e-01, -3.3575e-01,
         -1.0684e-01, -3.0803e-01, -7.8499e-02, -1.6365e-01, -2.0937e-01,
          3.0532e-01, -3.9360e-02,  6.4095e-02,  7.0217e-02, -4.9921e-02,
          1.8519e-01, -2.2394e-01,  2.2596e-01, -3.4108e-01, -2.0334e-01,
          3.4149e-02, -2.1114e-01,  1.6710e-01, -4.0571e-02,  7.8524e-03,
         -3.3821e-01, -1.9265e-02,  2.0513e-01, -5.9881e-02,  1.3826e-01,
         -3.7605e-02]], device='cuda:0') tensor(0.2125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
376000 特征值优化 tensor(2.5138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9895e-01,  3.9103e-01,  2.3361e-01, -1.0106e+00,  4.5889e+00,
          1.7031e+00, -9.7472e-01, -2.0123e+00,  2.3066e-01, -8.6624e-01,
         -4.7658e-01,  3.2236e-01, -3.1157e-01, -1.9958e-02, -7.3569e-03,
         -5.8369e-01,  4.0820e-01, -8.6098e-03,  7.1494e-01,  5.0950e-02,
          9.1502e-01,  4.4063e-01,  3.2970e-01,  8.0909e-01, -1.1390e+00,
         -8.8153e-01,  1.7241e-01,  4.6218e-01,  6.0094e-01,  8.1347e-02,
         -1.0848e-01, -1.9578e-02,  3.8146e-01,  7.8161e-03, -1.7516e-01,
         -1.8210e-01, -8.9522e-02,  6.6295e-02,  8.1423e-02,  2.4894e-01,
          5.4001e-01,  1.7234e-01, -9.3589e-02,  2.5111e-01, -1.4508e-01,
         -1.6098e-01,  4.7459e-02, -2.4710e-01,  7.7903e-02,  4.3097e-01,
          8.0758e-02, -2.8010e-01, -8.8296e-02,  4.2102e-02, -8.7526e-02,
         -9.9121e-02,  1.3699e-01, -2.0342e-01, -2.4820e-02, -6.3914e-02,
         -2.4420e-01,  8.6362e-02,  5.6107e-01,  2.0711e-02,  2.1820e-01,
          2.1488e-01,  1.1891e-01,  2.9380e-01, -1.4485e-01, -3.6340e-01,
         -1.5068e-01,  2.1537e-02,  1.4265e-01, -1.4737e-01, -6.3390e-02,
          6.0630e-02,  1.2239e-01, -2.0128e-01,  1.9957e-01,  1.2585e-01,
          9.0777e-02,  1.8436e-01, -1.3097e-01, -1.2419e-02, -1.4692e-01,
         -1.6499e-02,  4.8050e-02,  5.8758e-01,  6.8835e-02, -4.4068e-01,
          2.2537e-01,  1.7462e+00, -1.9454e-01, -9.5013e-02,  5.6027e-02,
         -3.4843e-01, -5.5862e-01,  6.2161e-01,  2.0833e-01,  2.5178e-01,
         -1.9106e-01,  3.6225e-01, -1.1967e+00,  1.6198e-01,  1.4126e-03,
         -3.0010e-01,  3.4083e-01, -3.5366e-01, -1.1194e-01,  1.1223e-01,
         -2.2377e-02,  5.5911e-02,  1.0375e-01, -5.0901e-02,  5.6392e-02,
          5.3653e-02, -2.9857e-01,  1.9082e-02,  1.8851e-02, -1.5759e-01,
          3.3012e-02,  1.4288e-01,  9.9131e-05,  7.4764e-02,  1.1336e-01,
          1.1362e-01, -3.1445e-02,  2.4014e-01,  4.8604e-02,  9.0608e-02,
          6.1313e-02,  2.0304e-02,  1.6360e-01, -1.7290e-01, -3.3624e-01,
         -8.7052e-02, -3.0023e-01, -7.5771e-02, -1.4210e-01, -2.2539e-01,
          3.3124e-01, -3.2315e-02,  5.8858e-02,  4.7508e-02, -3.8641e-02,
          1.9989e-01, -2.1406e-01,  2.1991e-01, -3.3790e-01, -2.0008e-01,
          3.5419e-02, -1.9495e-01,  1.6879e-01, -2.1007e-02,  3.8297e-02,
         -3.4208e-01, -1.3597e-02,  2.0771e-01, -6.6740e-02,  1.4533e-01,
         -2.1540e-02]], device='cuda:0') tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
377000 特征值优化 tensor(2.5085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7412e-01,  4.3806e-01,  9.9906e-02, -9.9809e-01,  4.5409e+00,
          1.7605e+00, -1.0165e+00, -2.0360e+00,  2.4875e-01, -8.6034e-01,
         -4.7163e-01,  3.4041e-01, -3.2619e-01, -4.4186e-02,  1.8695e-02,
         -5.6618e-01,  3.8373e-01, -2.2425e-03,  6.8831e-01,  3.0719e-02,
          9.0387e-01,  4.8338e-01,  3.5757e-01,  8.3070e-01, -1.1696e+00,
         -8.5652e-01,  1.7961e-01,  4.5321e-01,  5.3574e-01,  8.2649e-02,
         -1.2382e-01, -1.6584e-02,  3.6635e-01,  5.9043e-03, -1.5944e-01,
         -1.5088e-01, -8.3395e-02,  3.7268e-02,  9.1445e-02,  2.4588e-01,
          5.1318e-01,  1.6949e-01, -9.2118e-02,  2.3263e-01, -1.4268e-01,
         -1.6466e-01,  8.9174e-04, -2.3139e-01,  4.7710e-02,  4.4249e-01,
          4.3256e-02, -2.9037e-01, -9.3647e-02,  3.5783e-02, -8.2717e-02,
         -1.7812e-02,  1.1349e-01, -2.1939e-01, -5.5468e-02, -5.6424e-02,
         -2.9132e-01,  8.2012e-02,  5.5544e-01,  2.0339e-02,  2.0244e-01,
          2.0233e-01,  1.3541e-01,  3.0844e-01, -1.3275e-01, -3.6632e-01,
         -1.2176e-01, -1.0929e-02,  1.3801e-01, -1.3407e-01, -6.2737e-02,
          4.6455e-02,  1.3005e-01, -1.8040e-01,  2.2765e-01,  1.1591e-01,
          8.7400e-02,  1.9554e-01, -1.4086e-01,  2.5199e-02, -1.5135e-01,
         -2.9149e-02,  6.5351e-02,  5.9708e-01,  6.0961e-02, -4.4713e-01,
          2.1779e-01,  1.7674e+00, -1.6467e-01, -5.8884e-02,  6.6378e-02,
         -3.1486e-01, -5.6299e-01,  6.3112e-01,  2.2208e-01,  2.2861e-01,
         -2.1198e-01,  3.5181e-01, -1.2574e+00,  1.6641e-01, -1.0031e-03,
         -2.2388e-01,  3.2245e-01, -3.8062e-01, -5.1940e-02,  1.1557e-01,
         -3.0828e-02,  5.7441e-02,  1.7050e-01, -4.7055e-02,  6.5226e-02,
          5.4493e-02, -2.8429e-01,  1.4928e-02,  2.5301e-02, -1.8901e-01,
          3.6220e-02,  1.4731e-01, -2.7203e-03,  8.3882e-02,  1.1819e-01,
          1.0435e-01, -4.2854e-02,  2.4747e-01,  4.6972e-02,  1.0127e-01,
          7.1245e-02,  2.6711e-02,  1.7298e-01, -1.8982e-01, -3.4051e-01,
         -8.8003e-02, -3.1425e-01, -9.7746e-02, -1.2114e-01, -2.6372e-01,
          3.3747e-01, -5.6056e-02,  4.1153e-02,  4.4243e-02, -3.6117e-02,
          2.0744e-01, -1.9266e-01,  2.3701e-01, -3.2979e-01, -2.2205e-01,
          5.6571e-02, -1.8442e-01,  1.7886e-01, -2.9451e-02,  6.5248e-02,
         -3.3039e-01, -3.7550e-02,  2.2052e-01, -4.9798e-02,  1.4147e-01,
         -3.1974e-02]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
378000 特征值优化 tensor(2.5058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0856e-01,  4.9297e-01, -5.8423e-02, -9.9706e-01,  4.5629e+00,
          1.8128e+00, -1.0340e+00, -2.0358e+00,  2.9854e-01, -8.4871e-01,
         -4.7058e-01,  3.5291e-01, -3.0960e-01, -8.3618e-02,  3.0971e-02,
         -5.6254e-01,  3.6352e-01, -1.5693e-02,  6.5925e-01,  1.8330e-02,
          8.7954e-01,  5.2996e-01,  3.8899e-01,  8.7122e-01, -1.2051e+00,
         -8.2393e-01,  1.8947e-01,  4.3290e-01,  4.8566e-01,  8.1326e-02,
         -1.2148e-01, -2.0831e-02,  3.3774e-01,  7.1935e-04, -1.4017e-01,
         -1.1223e-01, -8.4443e-02,  2.4815e-02,  1.1761e-01,  2.1373e-01,
          4.7361e-01,  1.7166e-01, -9.6010e-02,  1.6685e-01, -1.4750e-01,
         -1.6218e-01, -3.2130e-02, -1.9378e-01,  1.7080e-02,  4.5159e-01,
         -2.3880e-03, -3.0035e-01, -9.9975e-02,  1.2798e-02, -7.4086e-02,
          4.5824e-02,  7.0139e-02, -2.2161e-01, -8.5225e-02, -4.0105e-02,
         -2.9951e-01,  1.0507e-01,  5.5343e-01,  1.1988e-02,  1.9018e-01,
          1.7623e-01,  1.3915e-01,  3.1003e-01, -1.1132e-01, -3.9360e-01,
         -7.4888e-02, -2.1073e-02,  1.1728e-01, -1.1381e-01, -6.5833e-02,
          1.8113e-02,  1.3898e-01, -1.6475e-01,  2.6150e-01,  1.0193e-01,
          8.6555e-02,  1.9858e-01, -1.4198e-01,  3.0796e-02, -1.3163e-01,
         -5.5507e-02,  6.5484e-02,  6.0123e-01,  7.0893e-02, -4.4748e-01,
          2.2926e-01,  1.7731e+00, -1.6201e-01, -5.4907e-02,  6.5247e-02,
         -2.8316e-01, -5.6757e-01,  6.1314e-01,  2.2972e-01,  2.1448e-01,
         -2.2207e-01,  3.3428e-01, -1.3354e+00,  2.0069e-01,  3.1003e-03,
         -1.4921e-01,  3.0810e-01, -4.1735e-01,  2.1426e-02,  9.8802e-02,
         -3.0682e-02,  6.6915e-02,  2.0748e-01, -5.3970e-02,  7.3023e-02,
          6.2651e-02, -2.6808e-01, -1.5831e-03,  4.8165e-02, -2.1917e-01,
          3.8855e-02,  1.5178e-01,  1.0232e-02,  1.0262e-01,  1.0777e-01,
          1.0548e-01, -6.2332e-02,  2.7219e-01,  3.9479e-02,  1.0486e-01,
          8.7041e-02,  4.0357e-02,  1.7681e-01, -2.1722e-01, -3.4385e-01,
         -8.1485e-02, -3.4536e-01, -8.8592e-02, -1.2567e-01, -3.0415e-01,
          3.3141e-01, -8.6241e-02,  1.9667e-02,  4.5680e-02, -3.8535e-02,
          2.1054e-01, -1.8449e-01,  2.5525e-01, -3.2136e-01, -2.3478e-01,
          5.5582e-02, -1.7226e-01,  1.8221e-01, -3.1967e-02,  7.3492e-02,
         -3.0755e-01, -3.8632e-02,  2.1838e-01, -4.9527e-02,  1.3879e-01,
         -3.4535e-02]], device='cuda:0') tensor(0.2277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
379000 特征值优化 tensor(2.5099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.4305e-01,  5.5910e-01, -2.0506e-01, -9.9651e-01,  4.5151e+00,
          1.8661e+00, -1.0637e+00, -2.0231e+00,  3.6708e-01, -8.0141e-01,
         -4.8121e-01,  3.3094e-01, -3.0517e-01, -1.1325e-01,  4.6827e-02,
         -5.7586e-01,  3.6996e-01, -4.5791e-02,  6.3524e-01,  4.5128e-03,
          8.7060e-01,  5.6816e-01,  4.0655e-01,  9.1512e-01, -1.2280e+00,
         -7.8136e-01,  1.8199e-01,  4.2430e-01,  4.8321e-01,  7.3505e-02,
         -1.4780e-01, -1.8665e-02,  2.9850e-01, -1.8577e-02, -1.3117e-01,
         -7.8213e-02, -7.5217e-02,  2.0643e-02,  1.1306e-01,  2.0857e-01,
          4.4583e-01,  1.6420e-01, -8.4733e-02,  1.3723e-01, -1.4179e-01,
         -1.7504e-01, -3.7555e-02, -1.7089e-01, -9.5559e-03,  4.4639e-01,
         -5.7051e-02, -3.0153e-01, -9.3773e-02,  7.7319e-03, -6.3538e-02,
          7.6837e-02,  8.7446e-03, -2.2918e-01, -9.7792e-02, -2.6817e-02,
         -3.0286e-01,  1.0657e-01,  5.5599e-01,  4.1375e-02,  1.9091e-01,
          1.6384e-01,  1.2902e-01,  2.9419e-01, -1.2882e-01, -3.9128e-01,
         -6.3874e-02, -5.6174e-02,  1.0001e-01, -1.1040e-01, -3.4009e-02,
          2.8311e-02,  1.3956e-01, -1.7342e-01,  3.1118e-01,  7.4901e-02,
          7.4144e-02,  2.0240e-01, -1.2723e-01,  6.1283e-02, -1.1292e-01,
         -5.5454e-02,  7.5971e-02,  6.1456e-01,  3.9340e-02, -4.8319e-01,
          2.3954e-01,  1.7672e+00, -1.4440e-01, -3.0446e-02,  7.3468e-02,
         -2.4165e-01, -5.6626e-01,  6.2685e-01,  2.1409e-01,  2.2608e-01,
         -2.1378e-01,  3.1563e-01, -1.3968e+00,  2.1297e-01,  2.0471e-02,
         -1.1382e-01,  3.1763e-01, -4.4598e-01,  8.1698e-02,  1.0359e-01,
         -2.0837e-02,  8.8279e-02,  2.5022e-01, -4.6733e-02,  8.4369e-02,
          7.2642e-02, -2.6053e-01,  2.9074e-03,  5.2638e-02, -2.4103e-01,
          2.8280e-02,  1.5700e-01, -7.6605e-03,  1.1347e-01,  9.9738e-02,
          9.3883e-02, -4.9246e-02,  2.9159e-01,  5.0041e-02,  1.1779e-01,
          9.5899e-02,  5.6912e-02,  1.9395e-01, -2.2945e-01, -3.3980e-01,
         -1.0918e-01, -3.4807e-01, -1.1875e-01, -8.9843e-02, -3.0637e-01,
          3.4090e-01, -8.0556e-02,  1.2428e-02,  1.6304e-02, -5.1627e-02,
          1.9297e-01, -1.7534e-01,  2.5068e-01, -3.3259e-01, -2.2278e-01,
          9.5365e-02, -1.8194e-01,  1.7455e-01, -3.4347e-02,  7.7433e-02,
         -2.8818e-01, -3.3791e-02,  2.3150e-01, -6.2982e-02,  1.3372e-01,
         -4.6736e-02]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
380000 特征值优化 tensor(2.5233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9386e-01,  6.3626e-01, -3.5927e-01, -9.9551e-01,  4.5033e+00,
          1.8919e+00, -1.0923e+00, -1.9880e+00,  4.4466e-01, -7.4170e-01,
         -4.9176e-01,  2.8391e-01, -2.9304e-01, -1.4001e-01,  4.6932e-02,
         -6.1230e-01,  3.8695e-01, -7.6445e-02,  6.0024e-01,  4.3231e-03,
          8.3586e-01,  6.2665e-01,  4.0826e-01,  9.5442e-01, -1.2458e+00,
         -7.1389e-01,  1.8687e-01,  3.9779e-01,  4.5310e-01,  6.8236e-02,
         -1.5099e-01, -1.3510e-02,  2.5885e-01, -2.0101e-02, -1.3353e-01,
         -3.3552e-02, -6.7430e-02,  1.6675e-02,  1.3055e-01,  1.8856e-01,
          4.1377e-01,  1.6579e-01, -9.0372e-02,  9.0158e-02, -1.5251e-01,
         -1.7939e-01, -4.3599e-02, -1.6274e-01, -1.6662e-02,  4.4130e-01,
         -1.0810e-01, -3.1983e-01, -8.2674e-02, -1.2710e-02, -4.9381e-02,
          1.2307e-01, -2.1026e-02, -2.2792e-01, -1.1661e-01, -1.2762e-02,
         -2.8589e-01,  1.4193e-01,  5.6307e-01,  5.7009e-02,  1.9604e-01,
          1.4258e-01,  1.1669e-01,  2.6047e-01, -1.4191e-01, -4.0823e-01,
         -3.6217e-02, -8.2775e-02,  6.2979e-02, -1.0001e-01, -2.8644e-02,
          2.4484e-02,  1.2836e-01, -1.8414e-01,  3.5765e-01,  4.7323e-02,
          7.5711e-02,  1.9769e-01, -1.1516e-01,  6.3712e-02, -9.4457e-02,
         -5.0940e-02,  5.8389e-02,  6.3069e-01,  6.7719e-02, -4.2488e-01,
          2.6316e-01,  1.7745e+00, -1.4747e-01,  9.2462e-03,  8.1935e-02,
         -2.0879e-01, -5.5670e-01,  6.3937e-01,  1.8161e-01,  2.1000e-01,
         -2.0068e-01,  3.0538e-01, -1.4752e+00,  2.4841e-01,  4.8297e-02,
         -9.6123e-02,  3.2829e-01, -4.8837e-01,  1.6474e-01,  8.2467e-02,
         -1.2505e-02,  1.1428e-01,  2.7059e-01, -5.4181e-02,  8.3652e-02,
          6.2782e-02, -2.5653e-01, -1.0280e-02,  5.8707e-02, -2.5026e-01,
          8.2812e-03,  1.6026e-01, -1.5028e-02,  1.1660e-01,  8.9302e-02,
          8.3575e-02, -5.2162e-02,  3.1395e-01,  5.3403e-02,  1.2941e-01,
          1.0077e-01,  6.4513e-02,  2.1419e-01, -2.4535e-01, -3.3651e-01,
         -1.0814e-01, -3.7685e-01, -1.2718e-01, -1.1090e-01, -3.1857e-01,
          3.3729e-01, -9.9760e-02,  7.1780e-03, -1.7323e-03, -7.8383e-02,
          1.9404e-01, -1.6039e-01,  2.4817e-01, -3.2481e-01, -2.1382e-01,
          1.2010e-01, -1.8192e-01,  1.7700e-01, -2.6978e-02,  9.2481e-02,
         -2.5110e-01, -4.8183e-02,  2.3165e-01, -5.1794e-02,  1.1778e-01,
         -3.5019e-02]], device='cuda:0') tensor(0.2538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
381000 特征值优化 tensor(2.4980, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.0906e-01,  6.8944e-01, -4.9004e-01, -9.9522e-01,  4.4781e+00,
          1.9078e+00, -1.1183e+00, -1.9277e+00,  5.1470e-01, -7.0060e-01,
         -5.4078e-01,  2.3262e-01, -2.7333e-01, -1.3828e-01,  5.8060e-02,
         -6.3881e-01,  3.8516e-01, -9.4683e-02,  5.6336e-01, -3.9716e-03,
          7.9583e-01,  6.5784e-01,  4.1650e-01,  9.7941e-01, -1.2823e+00,
         -6.4728e-01,  1.9485e-01,  3.7413e-01,  4.0081e-01,  6.3309e-02,
         -1.4498e-01, -1.1906e-02,  2.4237e-01, -2.3878e-02, -1.0552e-01,
         -4.0329e-03, -7.3364e-02,  1.6021e-02,  1.2198e-01,  1.7845e-01,
          3.7980e-01,  1.5941e-01, -8.2389e-02,  6.3579e-02, -1.5521e-01,
         -1.7737e-01, -4.3442e-02, -1.4514e-01, -2.9978e-02,  4.4050e-01,
         -1.5659e-01, -3.2701e-01, -7.6515e-02, -2.6715e-02, -3.7639e-02,
          1.6586e-01, -6.1301e-02, -2.2471e-01, -1.2844e-01,  6.9286e-03,
         -2.9529e-01,  1.8775e-01,  5.5264e-01,  6.7052e-02,  2.1029e-01,
          1.2296e-01,  1.1544e-01,  2.3654e-01, -1.4036e-01, -4.0639e-01,
         -5.1210e-03, -1.0058e-01,  5.7741e-02, -9.4275e-02, -2.7111e-02,
          9.5501e-03,  1.1864e-01, -1.6304e-01,  3.9398e-01,  3.0624e-02,
          8.6674e-02,  2.0919e-01, -1.0658e-01,  4.9733e-02, -1.0285e-01,
         -2.9049e-02,  4.2206e-02,  6.2506e-01,  5.7257e-02, -4.4836e-01,
          2.7080e-01,  1.7635e+00, -1.2584e-01,  2.8586e-02,  8.1717e-02,
         -1.6870e-01, -5.5379e-01,  6.4125e-01,  1.9625e-01,  2.2646e-01,
         -1.9377e-01,  2.8434e-01, -1.5408e+00,  2.6844e-01,  7.7591e-02,
         -8.6604e-02,  3.1213e-01, -5.2282e-01,  2.2841e-01,  6.5067e-02,
          6.3535e-03,  1.4061e-01,  2.6732e-01, -7.3520e-02,  7.9679e-02,
          5.4178e-02, -2.5726e-01, -1.5667e-02,  7.2060e-02, -2.7270e-01,
          1.5838e-02,  1.7465e-01, -1.3079e-02,  1.2107e-01,  6.7355e-02,
          7.9476e-02, -5.4941e-02,  3.3122e-01,  5.9454e-02,  1.4532e-01,
          1.0393e-01,  5.7740e-02,  2.0609e-01, -2.5163e-01, -3.4725e-01,
         -1.0446e-01, -4.1636e-01, -1.2759e-01, -1.2854e-01, -3.3180e-01,
          3.2401e-01, -1.2660e-01, -4.6749e-03,  1.1272e-02, -7.5061e-02,
          1.9534e-01, -1.4051e-01,  2.7659e-01, -3.2053e-01, -2.2261e-01,
          1.4260e-01, -1.7119e-01,  1.9311e-01, -3.3878e-02,  1.1315e-01,
         -2.2115e-01, -6.7802e-02,  2.3543e-01, -2.4887e-02,  1.1947e-01,
         -1.8712e-02]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
382000 特征值优化 tensor(2.5022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.1172e-01,  7.1872e-01, -5.8906e-01, -9.9559e-01,  4.4383e+00,
          1.9173e+00, -1.1180e+00, -1.8952e+00,  5.7140e-01, -6.4754e-01,
         -6.0427e-01,  1.6146e-01, -2.5541e-01, -1.4445e-01,  8.4061e-02,
         -6.5387e-01,  3.7837e-01, -9.7443e-02,  5.2447e-01,  1.2130e-03,
          7.7840e-01,  6.7193e-01,  4.1145e-01,  1.0140e+00, -1.3055e+00,
         -5.8546e-01,  2.0353e-01,  3.2505e-01,  3.7460e-01,  5.7116e-02,
         -1.4285e-01, -1.5907e-02,  2.0407e-01, -4.1718e-02, -9.6741e-02,
          1.0498e-02, -8.0080e-02,  3.0590e-02,  1.0827e-01,  1.8938e-01,
          3.4333e-01,  1.5693e-01, -7.8822e-02,  3.2836e-02, -1.5443e-01,
         -1.8844e-01, -3.9145e-02, -1.2503e-01, -5.9104e-02,  4.2496e-01,
         -1.8233e-01, -3.0895e-01, -6.6640e-02, -4.0267e-02, -2.0216e-02,
          2.1526e-01, -6.6250e-02, -2.4776e-01, -1.3818e-01,  2.0658e-02,
         -3.1367e-01,  2.1896e-01,  5.3033e-01,  8.6060e-02,  2.2614e-01,
          1.2232e-01,  1.0889e-01,  2.1287e-01, -1.5765e-01, -3.9291e-01,
         -1.4956e-02, -1.3041e-01,  3.9086e-02, -9.1239e-02, -1.9588e-03,
          2.3909e-02,  1.3302e-01, -1.8096e-01,  4.0204e-01,  9.4448e-03,
          8.6994e-02,  2.0763e-01, -1.0401e-01,  4.4168e-02, -8.5171e-02,
         -4.1288e-02,  3.8909e-02,  6.2298e-01,  8.2380e-03, -4.6521e-01,
          2.8537e-01,  1.7643e+00, -1.0205e-01,  4.0124e-02,  8.2232e-02,
         -1.4117e-01, -5.5769e-01,  6.5125e-01,  2.2354e-01,  2.4411e-01,
         -1.8323e-01,  2.6978e-01, -1.5986e+00,  2.8672e-01,  8.6332e-02,
         -8.1890e-02,  2.8418e-01, -5.3124e-01,  2.8078e-01,  6.1755e-02,
          3.8143e-02,  1.6687e-01,  2.7948e-01, -6.6612e-02,  7.5939e-02,
          5.0870e-02, -2.5157e-01,  5.2370e-03,  6.2403e-02, -2.9103e-01,
          1.0804e-02,  1.8623e-01, -3.8102e-02,  1.2558e-01,  6.5220e-02,
          7.6567e-02, -4.1085e-02,  3.4100e-01,  7.9531e-02,  1.5459e-01,
          9.6339e-02,  6.8356e-02,  2.1966e-01, -2.5790e-01, -3.4272e-01,
         -8.2091e-02, -4.1432e-01, -1.2339e-01, -1.0087e-01, -3.3091e-01,
          3.2436e-01, -1.2915e-01,  1.7172e-02,  1.0232e-02, -7.2910e-02,
          1.7856e-01, -1.4811e-01,  2.6454e-01, -3.1041e-01, -1.9472e-01,
          1.6452e-01, -1.7294e-01,  1.7629e-01, -3.4128e-02,  1.1192e-01,
         -2.0398e-01, -5.6950e-02,  2.4545e-01, -2.3438e-02,  1.2457e-01,
         -2.1788e-02]], device='cuda:0') tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
383000 特征值优化 tensor(2.5152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4026,  0.7226, -0.6283, -0.9949,  4.4517,  1.9203, -1.1043, -1.8686,
          0.6373, -0.6250, -0.6686,  0.0804, -0.2202, -0.1309,  0.0956, -0.6582,
          0.3472, -0.0937,  0.4835,  0.0089,  0.7604,  0.6858,  0.4014,  1.0309,
         -1.3228, -0.5245,  0.2188,  0.2909,  0.3389,  0.0511, -0.1348, -0.0156,
          0.1902, -0.0500, -0.0828,  0.0156, -0.0835,  0.0419,  0.0938,  0.1969,
          0.3110,  0.1565, -0.0813,  0.0227, -0.1540, -0.1942, -0.0314, -0.1148,
         -0.0747,  0.4170, -0.2089, -0.3079, -0.0688, -0.0523, -0.0121,  0.2635,
         -0.0589, -0.2689, -0.1425,  0.0327, -0.3284,  0.2648,  0.5183,  0.0859,
          0.2430,  0.1115,  0.1004,  0.1980, -0.1571, -0.3851, -0.0107, -0.1357,
          0.0317, -0.0980,  0.0066,  0.0170,  0.1308, -0.1678,  0.4102,  0.0096,
          0.0914,  0.2078, -0.1073,  0.0469, -0.0903, -0.0231,  0.0333,  0.6322,
         -0.0143, -0.4742,  0.2900,  1.7574, -0.0822,  0.0311,  0.0797, -0.1277,
         -0.5587,  0.6468,  0.2574,  0.2476, -0.1565,  0.2535, -1.6213,  0.2926,
          0.0938, -0.0929,  0.2505, -0.5395,  0.3286,  0.0407,  0.0560,  0.1701,
          0.2863, -0.0767,  0.0690,  0.0479, -0.2457,  0.0161,  0.0614, -0.2923,
          0.0059,  0.1906, -0.0451,  0.1303,  0.0577,  0.0625, -0.0423,  0.3420,
          0.0834,  0.1594,  0.0950,  0.0699,  0.2103, -0.2587, -0.3482, -0.0720,
         -0.4407, -0.1101, -0.1022, -0.3469,  0.3139, -0.1586,  0.0101,  0.0440,
         -0.0679,  0.1612, -0.1503,  0.2723, -0.3114, -0.1952,  0.1733, -0.1737,
          0.1734, -0.0401,  0.1113, -0.1906, -0.0554,  0.2468, -0.0140,  0.1252,
         -0.0249]], device='cuda:0') tensor(0.2200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
384000 特征值优化 tensor(2.5302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8405e-01,  7.0794e-01, -6.5941e-01, -9.9540e-01,  4.4851e+00,
          1.9199e+00, -1.0970e+00, -1.8376e+00,  6.7039e-01, -5.9703e-01,
         -7.2818e-01,  3.1490e-03, -1.8680e-01, -1.5051e-01,  8.8094e-02,
         -6.4360e-01,  3.3464e-01, -8.8882e-02,  4.6999e-01,  1.5717e-02,
          7.4856e-01,  6.9411e-01,  3.9229e-01,  1.0465e+00, -1.3215e+00,
         -5.0120e-01,  2.3082e-01,  2.5819e-01,  3.4664e-01,  6.4729e-02,
         -1.3301e-01, -1.1935e-02,  1.7708e-01, -5.3597e-02, -8.0850e-02,
          1.3021e-02, -8.9736e-02,  5.9987e-02,  8.9963e-02,  1.9379e-01,
          2.9689e-01,  1.6299e-01, -8.7699e-02,  5.0218e-03, -1.5885e-01,
         -1.7598e-01, -9.4982e-03, -9.7275e-02, -7.4885e-02,  4.1741e-01,
         -2.1301e-01, -3.0127e-01, -6.8935e-02, -6.0080e-02, -7.0507e-03,
          2.7397e-01, -6.2116e-02, -2.8036e-01, -1.5032e-01,  3.8253e-02,
         -3.3725e-01,  2.8804e-01,  5.0815e-01,  9.0461e-02,  2.5230e-01,
          1.2248e-01,  9.0672e-02,  1.8476e-01, -1.7552e-01, -3.7959e-01,
         -1.7919e-02, -1.4671e-01,  2.0567e-02, -9.6989e-02,  2.6782e-02,
          2.1712e-02,  1.4018e-01, -1.8697e-01,  4.2396e-01,  1.2674e-04,
          9.0143e-02,  2.0420e-01, -9.8298e-02,  3.2402e-02, -8.9179e-02,
         -9.9542e-03,  2.4931e-02,  6.3122e-01, -4.4160e-02, -4.5604e-01,
          2.9716e-01,  1.7529e+00, -7.4540e-02,  2.2567e-02,  7.4408e-02,
         -1.2195e-01, -5.7115e-01,  6.4991e-01,  2.7751e-01,  2.7775e-01,
         -1.3454e-01,  2.4379e-01, -1.6412e+00,  2.9836e-01,  9.7883e-02,
         -9.0732e-02,  2.4080e-01, -5.4475e-01,  3.6914e-01,  3.2261e-02,
          7.0096e-02,  1.6811e-01,  2.8534e-01, -7.1604e-02,  6.6047e-02,
          4.8709e-02, -2.4594e-01,  2.8637e-02,  5.4646e-02, -2.9521e-01,
         -9.5006e-03,  1.8368e-01, -6.2957e-02,  1.2138e-01,  5.9293e-02,
          5.5968e-02, -3.9785e-02,  3.4338e-01,  8.8327e-02,  1.6441e-01,
          9.1238e-02,  7.0441e-02,  2.2113e-01, -2.5394e-01, -3.4286e-01,
         -5.2793e-02, -4.4197e-01, -1.0712e-01, -1.0248e-01, -3.3990e-01,
          3.2619e-01, -1.5745e-01,  3.2909e-02,  4.1676e-02, -4.6625e-02,
          1.5452e-01, -1.6086e-01,  2.6142e-01, -3.1408e-01, -1.8456e-01,
          1.8303e-01, -1.8353e-01,  1.6581e-01, -3.8519e-02,  1.1521e-01,
         -1.9128e-01, -5.6571e-02,  2.5622e-01, -1.0149e-02,  1.2716e-01,
         -1.6820e-02]], device='cuda:0') tensor(0.3096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
385000 特征值优化 tensor(2.5291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5526e-01,  6.9448e-01, -6.8057e-01, -9.8883e-01,  4.5006e+00,
          1.9167e+00, -1.0879e+00, -1.8502e+00,  6.9796e-01, -5.7981e-01,
         -7.4128e-01, -2.5075e-02, -1.7975e-01, -1.0065e-01,  1.0072e-01,
         -6.4312e-01,  3.1433e-01, -7.5225e-02,  4.3644e-01,  2.5722e-02,
          7.5570e-01,  6.9617e-01,  3.9242e-01,  1.0556e+00, -1.3354e+00,
         -4.8256e-01,  2.2538e-01,  2.6228e-01,  3.1331e-01,  5.9609e-02,
         -1.2386e-01, -1.5364e-02,  1.6386e-01, -5.7455e-02, -5.9073e-02,
          1.5409e-02, -8.6071e-02,  5.5080e-02,  8.9189e-02,  1.9193e-01,
          2.9094e-01,  1.5844e-01, -8.0490e-02,  7.4453e-03, -1.5483e-01,
         -1.9104e-01, -5.3283e-03, -8.8750e-02, -8.0287e-02,  4.0614e-01,
         -2.1909e-01, -3.0032e-01, -6.4720e-02, -6.1455e-02, -2.5468e-03,
          2.9014e-01, -6.0557e-02, -2.7687e-01, -1.5183e-01,  4.6617e-02,
         -3.5352e-01,  3.0858e-01,  4.9164e-01,  7.2944e-02,  2.5769e-01,
          1.0447e-01,  9.0565e-02,  1.9313e-01, -1.6685e-01, -3.7351e-01,
         -1.2403e-02, -1.5168e-01,  3.2126e-02, -1.1143e-01,  2.6625e-02,
          1.0308e-02,  1.2892e-01, -1.7926e-01,  4.1659e-01, -5.1505e-04,
          9.2209e-02,  2.1079e-01, -9.7473e-02,  2.8044e-02, -1.0059e-01,
          1.3379e-02,  3.4631e-02,  6.2645e-01, -6.7728e-02, -4.6337e-01,
          2.8796e-01,  1.7394e+00, -5.1066e-02,  1.6607e-02,  7.7387e-02,
         -1.1541e-01, -5.6313e-01,  6.3461e-01,  3.0671e-01,  2.7222e-01,
         -1.4083e-01,  2.3800e-01, -1.6605e+00,  2.9824e-01,  1.0203e-01,
         -8.7889e-02,  2.1358e-01, -5.5231e-01,  3.9680e-01,  2.2038e-02,
          7.9831e-02,  1.7319e-01,  2.9689e-01, -8.6991e-02,  6.3773e-02,
          4.4476e-02, -2.4417e-01,  2.3626e-02,  7.1766e-02, -2.8565e-01,
         -1.0820e-02,  1.8999e-01, -6.0154e-02,  1.2064e-01,  5.2558e-02,
          4.6991e-02, -3.9281e-02,  3.4127e-01,  9.1104e-02,  1.7252e-01,
          8.6081e-02,  6.8668e-02,  2.1029e-01, -2.4746e-01, -3.5075e-01,
         -5.5255e-02, -4.6413e-01, -9.9634e-02, -9.1990e-02, -3.5582e-01,
          3.1043e-01, -1.7859e-01,  2.2875e-02,  7.3122e-02, -5.9508e-02,
          1.4484e-01, -1.4973e-01,  2.7363e-01, -3.1748e-01, -1.9661e-01,
          2.0353e-01, -1.8268e-01,  1.6858e-01, -3.7241e-02,  1.2583e-01,
         -1.9615e-01, -7.1248e-02,  2.5710e-01,  5.0133e-03,  1.2335e-01,
         -7.9023e-03]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
386000 特征值优化 tensor(2.4993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.4818e-01,  6.8566e-01, -6.9178e-01, -9.9562e-01,  4.5254e+00,
          1.9137e+00, -1.0881e+00, -1.8355e+00,  7.1912e-01, -5.5257e-01,
         -7.5534e-01, -6.3022e-02, -1.6981e-01, -1.0649e-01,  9.8576e-02,
         -6.2876e-01,  2.9518e-01, -6.7810e-02,  4.2189e-01,  3.0298e-02,
          7.5779e-01,  6.9834e-01,  3.9368e-01,  1.0607e+00, -1.3362e+00,
         -4.7995e-01,  2.4393e-01,  2.4756e-01,  3.1085e-01,  6.2586e-02,
         -1.3311e-01, -1.5792e-02,  1.4898e-01, -5.3709e-02, -6.0791e-02,
          9.9446e-03, -9.3102e-02,  6.6411e-02,  8.5609e-02,  1.9135e-01,
          2.7842e-01,  1.5956e-01, -7.6410e-02, -9.2859e-04, -1.6201e-01,
         -1.8008e-01,  8.4719e-04, -7.7166e-02, -7.4688e-02,  4.0426e-01,
         -2.2759e-01, -2.9826e-01, -6.6250e-02, -6.7882e-02, -4.5011e-03,
          2.9099e-01, -6.1944e-02, -2.8891e-01, -1.5720e-01,  6.3105e-02,
         -3.5033e-01,  3.2227e-01,  4.8379e-01,  7.8463e-02,  2.6342e-01,
          1.0892e-01,  9.1869e-02,  1.8434e-01, -1.7610e-01, -3.7398e-01,
         -1.3927e-02, -1.6204e-01,  2.3156e-02, -1.1362e-01,  3.4101e-02,
          1.5163e-02,  1.3396e-01, -1.9837e-01,  4.1539e-01, -7.7989e-03,
          8.8701e-02,  2.0872e-01, -9.2683e-02,  8.9891e-03, -1.0022e-01,
          3.7205e-03,  2.9718e-02,  6.1539e-01, -8.9799e-02, -4.6195e-01,
          2.9120e-01,  1.7349e+00, -1.8943e-02,  1.5423e-02,  7.4737e-02,
         -1.1571e-01, -5.6795e-01,  6.3554e-01,  3.2747e-01,  2.8116e-01,
         -1.1553e-01,  2.3828e-01, -1.6703e+00,  3.0077e-01,  1.0365e-01,
         -8.9392e-02,  2.0355e-01, -5.4926e-01,  4.1512e-01,  1.6257e-02,
          9.0658e-02,  1.7780e-01,  2.9717e-01, -8.6012e-02,  6.5309e-02,
          4.9780e-02, -2.4212e-01,  2.6947e-02,  6.2636e-02, -2.9587e-01,
         -2.6093e-02,  1.9119e-01, -7.2951e-02,  1.1726e-01,  5.3842e-02,
          4.3118e-02, -3.1947e-02,  3.3888e-01,  9.8297e-02,  1.7652e-01,
          8.6569e-02,  7.2265e-02,  2.1889e-01, -2.4610e-01, -3.4977e-01,
         -5.0178e-02, -4.6839e-01, -9.1002e-02, -9.1157e-02, -3.4319e-01,
          3.0679e-01, -1.7268e-01,  3.2034e-02,  7.8097e-02, -3.9622e-02,
          1.4248e-01, -1.6221e-01,  2.6316e-01, -3.1503e-01, -1.8852e-01,
          2.0342e-01, -1.8290e-01,  1.6160e-01, -2.6505e-02,  1.1698e-01,
         -1.9341e-01, -7.2048e-02,  2.6047e-01,  4.9889e-03,  1.2944e-01,
         -1.4964e-03]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
387000 特征值优化 tensor(2.5209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.4685e-01,  6.6871e-01, -6.8929e-01, -9.9389e-01,  4.5335e+00,
          1.9092e+00, -1.0725e+00, -1.8340e+00,  7.4263e-01, -5.4121e-01,
         -7.6449e-01, -8.3486e-02, -1.6439e-01, -1.0990e-01,  9.3052e-02,
         -6.2029e-01,  2.9262e-01, -5.7709e-02,  4.0582e-01,  3.3856e-02,
          7.6480e-01,  6.9833e-01,  3.8444e-01,  1.0665e+00, -1.3316e+00,
         -4.7645e-01,  2.5433e-01,  2.4660e-01,  2.9595e-01,  6.8153e-02,
         -1.2672e-01, -2.1327e-02,  1.4762e-01, -6.3663e-02, -5.2073e-02,
          5.7966e-03, -9.0862e-02,  6.5262e-02,  8.2807e-02,  1.9719e-01,
          2.7182e-01,  1.5934e-01, -8.1442e-02,  4.5188e-03, -1.6506e-01,
         -1.7958e-01,  1.1214e-02, -6.9527e-02, -8.2942e-02,  3.9426e-01,
         -2.3660e-01, -2.9396e-01, -7.1235e-02, -7.4924e-02, -4.0223e-05,
          2.8441e-01, -6.2199e-02, -2.9827e-01, -1.5541e-01,  6.7673e-02,
         -3.5482e-01,  3.2907e-01,  4.8238e-01,  7.8315e-02,  2.6471e-01,
          1.0894e-01,  9.3137e-02,  1.8053e-01, -1.7383e-01, -3.6884e-01,
         -1.1270e-02, -1.6457e-01,  2.1240e-02, -1.1275e-01,  4.0342e-02,
          9.8003e-03,  1.3197e-01, -1.9738e-01,  4.1631e-01, -9.7073e-03,
          8.6650e-02,  2.0563e-01, -9.2923e-02,  1.3989e-02, -1.0175e-01,
          9.3681e-03,  3.5579e-02,  6.0645e-01, -9.6602e-02, -4.6057e-01,
          2.9364e-01,  1.7314e+00, -9.0136e-03,  1.7034e-02,  7.3705e-02,
         -1.0952e-01, -5.6154e-01,  6.3171e-01,  3.4376e-01,  2.8870e-01,
         -1.0728e-01,  2.3560e-01, -1.6833e+00,  3.0187e-01,  1.0117e-01,
         -7.9685e-02,  1.8747e-01, -5.4706e-01,  4.5229e-01,  7.6719e-03,
          9.3258e-02,  1.7658e-01,  2.9528e-01, -8.5907e-02,  6.2861e-02,
          4.7055e-02, -2.4191e-01,  2.7951e-02,  7.1266e-02, -2.8908e-01,
         -2.9109e-02,  1.9255e-01, -7.4118e-02,  1.1317e-01,  5.0258e-02,
          4.3606e-02, -3.5321e-02,  3.4230e-01,  1.0014e-01,  1.7765e-01,
          8.0289e-02,  7.2884e-02,  2.1617e-01, -2.4831e-01, -3.4785e-01,
         -4.3679e-02, -4.7942e-01, -8.6201e-02, -8.8880e-02, -3.5035e-01,
          3.0756e-01, -1.8554e-01,  2.7807e-02,  8.8208e-02, -3.1232e-02,
          1.3431e-01, -1.6682e-01,  2.5707e-01, -3.0927e-01, -1.8788e-01,
          2.0482e-01, -1.8963e-01,  1.6037e-01, -3.1582e-02,  1.1207e-01,
         -1.8685e-01, -7.4294e-02,  2.5766e-01,  5.5236e-03,  1.2316e-01,
          1.1376e-03]], device='cuda:0') tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
388000 特征值优化 tensor(2.5189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3100e-01,  6.6302e-01, -6.8182e-01, -9.9321e-01,  4.5255e+00,
          1.8994e+00, -1.0574e+00, -1.8382e+00,  7.3174e-01, -5.2637e-01,
         -7.7750e-01, -9.4479e-02, -1.6071e-01, -1.1602e-01,  1.0388e-01,
         -6.1853e-01,  2.8328e-01, -4.8916e-02,  3.9165e-01,  3.0513e-02,
          7.7793e-01,  7.0345e-01,  3.7334e-01,  1.0701e+00, -1.3342e+00,
         -4.7418e-01,  2.5908e-01,  2.4102e-01,  2.9583e-01,  6.9533e-02,
         -1.2656e-01, -1.7291e-02,  1.6560e-01, -7.3575e-02, -4.6114e-02,
          3.7917e-03, -9.1201e-02,  7.4795e-02,  8.0194e-02,  1.9566e-01,
          2.7092e-01,  1.6072e-01, -8.5285e-02,  5.3155e-03, -1.6586e-01,
         -1.7351e-01,  1.2247e-02, -6.3832e-02, -8.3686e-02,  3.8529e-01,
         -2.4043e-01, -2.8559e-01, -7.1085e-02, -7.5959e-02,  6.7542e-03,
          2.8709e-01, -5.7443e-02, -3.0756e-01, -1.4844e-01,  7.2428e-02,
         -3.4918e-01,  3.4030e-01,  4.7560e-01,  7.2703e-02,  2.6775e-01,
          9.8894e-02,  8.9797e-02,  1.7888e-01, -1.6828e-01, -3.6704e-01,
         -9.0172e-03, -1.7088e-01,  2.5109e-02, -1.1343e-01,  4.5117e-02,
          1.4230e-02,  1.3222e-01, -1.9839e-01,  4.1129e-01, -9.4548e-03,
          8.5970e-02,  2.0241e-01, -9.3215e-02,  1.0814e-02, -9.6853e-02,
         -3.9484e-04,  4.0457e-02,  6.1331e-01, -1.0539e-01, -4.6766e-01,
          2.9223e-01,  1.7327e+00,  7.1125e-03, -6.4606e-04,  7.6293e-02,
         -1.1241e-01, -5.5980e-01,  6.3815e-01,  3.6329e-01,  2.9416e-01,
         -1.0921e-01,  2.3299e-01, -1.7015e+00,  2.9630e-01,  1.0842e-01,
         -7.2801e-02,  1.6903e-01, -5.4090e-01,  4.6396e-01,  1.7515e-03,
          1.0036e-01,  1.7636e-01,  2.9722e-01, -8.7640e-02,  6.0173e-02,
          5.0121e-02, -2.4286e-01,  2.6708e-02,  6.5899e-02, -2.8755e-01,
         -3.1018e-02,  1.9623e-01, -7.3046e-02,  1.1333e-01,  4.4659e-02,
          4.2360e-02, -3.3409e-02,  3.3952e-01,  1.0584e-01,  1.8080e-01,
          8.1053e-02,  7.1590e-02,  2.1890e-01, -2.4653e-01, -3.4791e-01,
         -4.0222e-02, -4.8155e-01, -8.1269e-02, -9.2492e-02, -3.5681e-01,
          3.0159e-01, -1.8668e-01,  3.8904e-02,  9.6212e-02, -3.2690e-02,
          1.3072e-01, -1.6737e-01,  2.5440e-01, -3.1218e-01, -1.9025e-01,
          2.0250e-01, -1.9478e-01,  1.6046e-01, -3.4483e-02,  1.0586e-01,
         -1.9102e-01, -7.9781e-02,  2.5739e-01,  9.9213e-03,  1.2389e-01,
          5.0388e-04]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
389000 特征值优化 tensor(2.5306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.4765e-01,  6.7579e-01, -6.8337e-01, -9.7558e-01,  4.5263e+00,
          1.8922e+00, -1.0350e+00, -1.8389e+00,  7.1516e-01, -5.1393e-01,
         -7.7982e-01, -8.8428e-02, -1.5464e-01, -1.0178e-01,  8.5930e-02,
         -6.1948e-01,  2.6592e-01, -4.3398e-02,  3.8925e-01,  2.9426e-02,
          7.6313e-01,  6.9608e-01,  3.7766e-01,  1.0725e+00, -1.3363e+00,
         -4.7975e-01,  2.6895e-01,  2.3585e-01,  3.0916e-01,  6.0936e-02,
         -1.2176e-01, -2.9596e-02,  1.3285e-01, -7.4310e-02, -3.9015e-02,
          4.0829e-03, -8.1326e-02,  8.1740e-02,  7.3115e-02,  1.9149e-01,
          2.8143e-01,  1.6233e-01, -8.3515e-02, -5.6029e-03, -1.6280e-01,
         -1.7962e-01,  1.4839e-02, -7.1561e-02, -9.9714e-02,  3.8148e-01,
         -2.3217e-01, -2.7899e-01, -8.2558e-02, -7.9323e-02,  1.1779e-02,
          2.8326e-01, -5.8256e-02, -3.0618e-01, -1.3974e-01,  6.9307e-02,
         -3.5455e-01,  3.6119e-01,  4.5686e-01,  6.0221e-02,  2.7620e-01,
          8.4534e-02,  9.4015e-02,  1.8564e-01, -1.5733e-01, -3.7247e-01,
          5.3799e-03, -1.5788e-01,  2.9776e-02, -1.2015e-01,  2.9456e-02,
          9.9669e-03,  1.2656e-01, -1.8773e-01,  3.8641e-01, -1.7928e-02,
          8.0919e-02,  2.0126e-01, -1.0954e-01,  2.0998e-02, -9.3670e-02,
          1.2104e-02,  4.2812e-02,  6.0596e-01, -1.1957e-01, -4.4074e-01,
          2.8068e-01,  1.7404e+00,  6.5620e-03, -1.2374e-02,  8.2913e-02,
         -1.1991e-01, -5.5618e-01,  6.5161e-01,  3.7272e-01,  3.1188e-01,
         -1.3580e-01,  2.2605e-01, -1.7173e+00,  3.0716e-01,  1.0542e-01,
         -7.7695e-02,  1.6730e-01, -5.4058e-01,  4.7791e-01, -1.0763e-02,
          1.0371e-01,  1.7118e-01,  3.0326e-01, -9.5450e-02,  5.6120e-02,
          4.2767e-02, -2.5004e-01,  2.1324e-02,  6.9558e-02, -2.8971e-01,
         -1.8582e-02,  2.0239e-01, -6.8546e-02,  1.1441e-01,  4.3811e-02,
          4.3045e-02, -3.1978e-02,  3.3993e-01,  1.0139e-01,  1.7263e-01,
          8.2737e-02,  6.9696e-02,  2.1553e-01, -2.4339e-01, -3.4638e-01,
         -4.9427e-02, -4.9077e-01, -8.4823e-02, -1.0907e-01, -3.5146e-01,
          2.8632e-01, -1.9313e-01,  2.7741e-02,  1.1797e-01, -3.2239e-02,
          1.2036e-01, -1.7495e-01,  2.5958e-01, -3.1852e-01, -2.0076e-01,
          2.0102e-01, -2.1320e-01,  1.4843e-01, -3.2631e-02,  9.7989e-02,
         -1.9658e-01, -6.8278e-02,  2.5564e-01, -6.9712e-03,  1.2266e-01,
         -1.3388e-02]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
390000 特征值优化 tensor(2.5295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2621e-01,  6.6543e-01, -6.8130e-01, -9.9552e-01,  4.5204e+00,
          1.8905e+00, -1.0378e+00, -1.8358e+00,  7.2684e-01, -5.1406e-01,
         -7.9004e-01, -1.1739e-01, -1.5557e-01, -1.0028e-01,  9.0254e-02,
         -6.2516e-01,  2.8199e-01, -2.5203e-02,  3.7758e-01,  2.3465e-02,
          7.8187e-01,  6.9398e-01,  3.7271e-01,  1.0800e+00, -1.3423e+00,
         -4.8030e-01,  2.6366e-01,  2.4911e-01,  3.0271e-01,  6.5699e-02,
         -1.1734e-01, -2.7837e-02,  1.6149e-01, -9.4043e-02, -3.9349e-02,
          3.5719e-03, -9.0461e-02,  9.1203e-02,  7.9635e-02,  1.8278e-01,
          2.8466e-01,  1.6414e-01, -8.2528e-02, -5.7769e-03, -1.6792e-01,
         -1.7315e-01,  1.1166e-02, -6.5756e-02, -9.8088e-02,  3.7962e-01,
         -2.3378e-01, -2.6982e-01, -7.8317e-02, -7.9147e-02,  1.0965e-02,
          2.9444e-01, -6.4700e-02, -3.2014e-01, -1.4460e-01,  7.3338e-02,
         -3.5592e-01,  3.5114e-01,  4.6325e-01,  6.1130e-02,  2.7730e-01,
          9.5174e-02,  8.6893e-02,  1.8358e-01, -1.6147e-01, -3.6344e-01,
          5.5840e-04, -1.6079e-01,  3.2627e-02, -1.2916e-01,  4.1511e-02,
          1.4174e-02,  1.2450e-01, -1.8793e-01,  3.9566e-01, -1.8229e-02,
          8.2645e-02,  2.0209e-01, -1.0516e-01,  6.2896e-03, -8.8338e-02,
          2.6968e-03,  4.0685e-02,  6.1044e-01, -1.3792e-01, -4.4585e-01,
          2.8711e-01,  1.7257e+00,  1.9613e-02, -1.2474e-02,  6.8830e-02,
         -1.1795e-01, -5.6179e-01,  6.3811e-01,  3.8071e-01,  3.0943e-01,
         -1.1847e-01,  2.2705e-01, -1.7274e+00,  2.9873e-01,  1.0636e-01,
         -7.6436e-02,  1.5107e-01, -5.4119e-01,  5.0034e-01, -6.4873e-03,
          1.0373e-01,  1.7350e-01,  3.0012e-01, -8.6836e-02,  5.7011e-02,
          4.1907e-02, -2.3745e-01,  2.4689e-02,  6.3789e-02, -2.8409e-01,
         -4.0697e-02,  1.9661e-01, -7.6123e-02,  1.1123e-01,  3.6350e-02,
          3.5426e-02, -2.6957e-02,  3.3976e-01,  1.0424e-01,  1.7468e-01,
          8.0651e-02,  6.9304e-02,  2.1372e-01, -2.3990e-01, -3.4831e-01,
         -4.8374e-02, -4.8684e-01, -8.3608e-02, -9.9958e-02, -3.4641e-01,
          2.9043e-01, -1.8551e-01,  3.8865e-02,  1.0783e-01, -3.4713e-02,
          1.1923e-01, -1.6817e-01,  2.5740e-01, -3.1777e-01, -2.0179e-01,
          2.0460e-01, -2.0731e-01,  1.5197e-01, -3.2270e-02,  9.0711e-02,
         -2.0417e-01, -7.9082e-02,  2.5579e-01,  3.0105e-03,  1.2043e-01,
         -1.0805e-02]], device='cuda:0') tensor(0.2190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
391000 特征值优化 tensor(2.4894, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0000e-01,  6.6221e-01, -6.9325e-01, -9.8934e-01,  4.5573e+00,
          1.8858e+00, -1.0463e+00, -1.8423e+00,  7.2896e-01, -5.0963e-01,
         -8.0843e-01, -1.2802e-01, -1.5569e-01, -8.0973e-02,  1.0061e-01,
         -6.1857e-01,  2.7177e-01, -2.5437e-02,  3.7540e-01,  3.7045e-02,
          7.7362e-01,  7.1426e-01,  3.7065e-01,  1.0610e+00, -1.3373e+00,
         -4.7364e-01,  2.6717e-01,  2.4049e-01,  2.8736e-01,  6.5408e-02,
         -1.1389e-01, -2.6397e-02,  1.5742e-01, -7.2589e-02, -3.1702e-02,
         -7.6504e-04, -8.5979e-02,  8.3477e-02,  7.8799e-02,  1.7347e-01,
          2.7317e-01,  1.6444e-01, -8.3347e-02,  6.2368e-03, -1.7049e-01,
         -1.6541e-01,  2.4504e-02, -4.5202e-02, -9.4804e-02,  3.8815e-01,
         -2.3628e-01, -2.7792e-01, -7.2743e-02, -7.2203e-02,  5.3546e-03,
          2.7686e-01, -5.8919e-02, -3.0641e-01, -1.4327e-01,  7.9869e-02,
         -3.4941e-01,  3.6711e-01,  4.5146e-01,  4.7860e-02,  2.7688e-01,
          9.0142e-02,  9.4333e-02,  1.8660e-01, -1.4165e-01, -3.6807e-01,
          8.1222e-03, -1.6845e-01,  3.7140e-02, -1.1171e-01,  2.7197e-02,
          4.2601e-03,  1.2248e-01, -1.7291e-01,  4.0341e-01, -5.5911e-03,
          9.1086e-02,  2.1166e-01, -9.2289e-02,  4.7856e-05, -1.1361e-01,
          2.1339e-02,  3.2151e-02,  5.9466e-01, -1.2679e-01, -4.4105e-01,
          2.8679e-01,  1.7153e+00,  4.6242e-02, -1.9583e-02,  7.5853e-02,
         -1.1781e-01, -5.5142e-01,  6.2180e-01,  3.9032e-01,  2.8896e-01,
         -1.1509e-01,  2.3215e-01, -1.7276e+00,  3.0402e-01,  1.0839e-01,
         -7.7410e-02,  1.5151e-01, -5.5437e-01,  4.8960e-01, -1.6716e-02,
          1.0895e-01,  1.6977e-01,  3.0607e-01, -9.0576e-02,  5.5134e-02,
          3.8826e-02, -2.4787e-01,  3.0742e-02,  7.3865e-02, -2.8180e-01,
         -2.9562e-02,  2.0305e-01, -6.8834e-02,  1.1273e-01,  3.1704e-02,
          5.0701e-02, -3.9634e-02,  3.4464e-01,  1.0520e-01,  1.9161e-01,
          7.4421e-02,  5.6758e-02,  2.1434e-01, -2.3432e-01, -3.5422e-01,
         -2.9347e-02, -5.0663e-01, -5.4503e-02, -1.1052e-01, -3.5202e-01,
          2.8711e-01, -2.0050e-01,  3.6542e-02,  1.3098e-01, -2.4654e-02,
          1.3455e-01, -1.5920e-01,  2.5018e-01, -3.2180e-01, -1.9881e-01,
          2.0300e-01, -1.9008e-01,  1.6656e-01, -1.9956e-02,  1.0829e-01,
         -2.1319e-01, -9.5160e-02,  2.5111e-01,  2.6595e-02,  1.2866e-01,
          1.4014e-02]], device='cuda:0') tensor(0.2069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
392000 特征值优化 tensor(2.5214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9912e-01,  6.6504e-01, -6.9109e-01, -9.8081e-01,  4.5465e+00,
          1.8853e+00, -1.0456e+00, -1.8535e+00,  7.4505e-01, -4.9541e-01,
         -8.1139e-01, -1.6750e-01, -1.5272e-01, -8.6268e-02,  1.0953e-01,
         -6.0530e-01,  2.9586e-01, -1.9853e-02,  3.6494e-01,  3.4230e-02,
          7.9139e-01,  7.0626e-01,  3.6860e-01,  1.0715e+00, -1.3246e+00,
         -4.8239e-01,  2.6460e-01,  2.3815e-01,  2.9155e-01,  7.4637e-02,
         -1.1315e-01, -2.9722e-02,  1.7362e-01, -8.5099e-02, -4.3152e-02,
         -1.1482e-03, -9.4787e-02,  8.2399e-02,  7.5470e-02,  1.8527e-01,
          2.7581e-01,  1.6309e-01, -8.4180e-02, -4.5868e-03, -1.7245e-01,
         -1.5754e-01,  2.4186e-02, -4.8251e-02, -8.3952e-02,  3.8101e-01,
         -2.3319e-01, -2.6034e-01, -8.5697e-02, -8.6658e-02,  1.7002e-02,
          2.7825e-01, -5.8267e-02, -3.0969e-01, -1.4784e-01,  7.3482e-02,
         -3.5390e-01,  3.5765e-01,  4.6018e-01,  5.9276e-02,  2.7867e-01,
          1.0256e-01,  7.7037e-02,  1.7732e-01, -1.5432e-01, -3.5802e-01,
         -5.1531e-03, -1.7081e-01,  2.4199e-02, -1.2613e-01,  4.6952e-02,
          1.4703e-02,  1.3024e-01, -1.9649e-01,  3.9057e-01, -1.6292e-02,
          8.3199e-02,  1.9636e-01, -1.0485e-01,  8.8970e-03, -9.1854e-02,
          1.3409e-03,  4.1266e-02,  6.0002e-01, -1.4024e-01, -4.5762e-01,
          2.9215e-01,  1.7265e+00,  4.0821e-02, -2.1389e-02,  8.0036e-02,
         -1.1827e-01, -5.5856e-01,  6.4117e-01,  3.7180e-01,  3.0903e-01,
         -1.0575e-01,  2.2942e-01, -1.7305e+00,  3.1297e-01,  1.0422e-01,
         -6.3166e-02,  1.3756e-01, -5.4355e-01,  5.0757e-01, -1.1261e-02,
          1.1153e-01,  1.7417e-01,  2.9573e-01, -7.1782e-02,  5.5781e-02,
          4.8502e-02, -2.3850e-01,  3.7682e-02,  6.0187e-02, -2.9216e-01,
         -4.3989e-02,  1.9539e-01, -8.4740e-02,  1.1344e-01,  3.2867e-02,
          4.1159e-02, -2.7465e-02,  3.3980e-01,  1.1295e-01,  1.8623e-01,
          7.3053e-02,  7.0083e-02,  2.2078e-01, -2.4016e-01, -3.4377e-01,
         -3.8640e-02, -4.8775e-01, -6.8669e-02, -9.3463e-02, -3.4262e-01,
          3.0033e-01, -1.9107e-01,  4.5163e-02,  1.1434e-01, -2.1468e-02,
          1.2278e-01, -1.7059e-01,  2.3092e-01, -3.2598e-01, -1.8896e-01,
          2.0925e-01, -2.0733e-01,  1.5292e-01, -3.3094e-02,  9.2488e-02,
         -2.1448e-01, -8.3628e-02,  2.5411e-01,  1.3094e-02,  1.1664e-01,
         -2.5463e-03]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
393000 特征值优化 tensor(2.5005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9535e-01,  6.5915e-01, -7.0372e-01, -9.7965e-01,  4.5568e+00,
          1.8840e+00, -1.0355e+00, -1.8553e+00,  7.4554e-01, -4.7649e-01,
         -8.2152e-01, -1.8112e-01, -1.4902e-01, -7.3822e-02,  1.1109e-01,
         -6.0398e-01,  2.9237e-01, -1.3988e-02,  3.6020e-01,  3.8585e-02,
          7.9983e-01,  7.0699e-01,  3.7389e-01,  1.0691e+00, -1.3247e+00,
         -4.7306e-01,  2.7240e-01,  2.4644e-01,  2.9239e-01,  7.5897e-02,
         -1.1190e-01, -3.5874e-02,  1.6690e-01, -9.7302e-02, -3.7669e-02,
          5.6574e-03, -9.2012e-02,  8.7514e-02,  7.7180e-02,  1.8788e-01,
          2.6575e-01,  1.6459e-01, -8.0244e-02,  9.4367e-03, -1.7495e-01,
         -1.5710e-01,  2.8664e-02, -4.2948e-02, -7.7692e-02,  3.7886e-01,
         -2.3365e-01, -2.5755e-01, -8.7334e-02, -9.0295e-02,  2.3450e-02,
          2.6754e-01, -5.8666e-02, -3.0531e-01, -1.4746e-01,  7.2983e-02,
         -3.5663e-01,  3.5994e-01,  4.4788e-01,  5.7018e-02,  2.7895e-01,
          1.0294e-01,  7.8087e-02,  1.7797e-01, -1.4733e-01, -3.6590e-01,
         -1.2283e-03, -1.7935e-01,  2.5681e-02, -1.3220e-01,  4.5354e-02,
          1.2165e-02,  1.2860e-01, -1.8914e-01,  3.8245e-01, -1.6177e-02,
          8.1014e-02,  2.0037e-01, -1.0779e-01,  1.9223e-02, -9.6317e-02,
         -4.9518e-03,  5.3549e-02,  5.9088e-01, -1.4910e-01, -4.5667e-01,
          2.9261e-01,  1.7167e+00,  5.6321e-02, -1.2623e-02,  7.6992e-02,
         -1.1913e-01, -5.5245e-01,  6.3752e-01,  3.8115e-01,  3.0991e-01,
         -1.0155e-01,  2.3217e-01, -1.7472e+00,  3.1309e-01,  9.7715e-02,
         -5.2334e-02,  1.3742e-01, -5.4614e-01,  5.1375e-01, -1.4224e-02,
          1.1771e-01,  1.7660e-01,  2.9606e-01, -7.1375e-02,  5.8904e-02,
          4.9366e-02, -2.4108e-01,  3.4311e-02,  5.7693e-02, -2.9600e-01,
         -4.8220e-02,  2.0119e-01, -8.8014e-02,  1.0840e-01,  3.3000e-02,
          4.2037e-02, -3.0713e-02,  3.3842e-01,  1.1537e-01,  1.8926e-01,
          7.4859e-02,  7.3874e-02,  2.2349e-01, -2.3901e-01, -3.4237e-01,
         -3.9298e-02, -4.8957e-01, -6.0339e-02, -9.8720e-02, -3.3828e-01,
          2.9583e-01, -1.9347e-01,  4.4746e-02,  1.2170e-01, -2.2321e-02,
          1.1386e-01, -1.7107e-01,  2.3230e-01, -3.1688e-01, -1.9695e-01,
          2.1197e-01, -2.0655e-01,  1.5718e-01, -3.0677e-02,  8.0775e-02,
         -2.1237e-01, -8.1647e-02,  2.5117e-01,  8.9457e-03,  1.1336e-01,
         -1.0861e-02]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
394000 特征值优化 tensor(2.4923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7809e-01,  6.7153e-01, -7.0534e-01, -9.9629e-01,  4.5471e+00,
          1.8687e+00, -1.0289e+00, -1.8548e+00,  7.5539e-01, -4.7025e-01,
         -8.3338e-01, -1.7020e-01, -1.5177e-01, -8.1506e-02,  8.6954e-02,
         -6.0798e-01,  2.8940e-01, -9.5245e-04,  3.3676e-01,  5.1666e-02,
          8.1603e-01,  7.0136e-01,  3.6082e-01,  1.0801e+00, -1.3218e+00,
         -4.8213e-01,  2.8486e-01,  2.4038e-01,  2.9963e-01,  8.7332e-02,
         -1.0200e-01, -4.2254e-02,  1.7028e-01, -9.8898e-02, -2.6100e-02,
         -3.5553e-03, -9.4071e-02,  9.8596e-02,  7.1539e-02,  1.7880e-01,
          2.6793e-01,  1.6042e-01, -8.0256e-02,  1.2139e-02, -1.8055e-01,
         -1.5039e-01,  3.6554e-02, -3.4309e-02, -7.3944e-02,  3.6814e-01,
         -2.2654e-01, -2.5556e-01, -7.8177e-02, -9.5133e-02,  1.9246e-02,
          2.6656e-01, -6.0778e-02, -3.0973e-01, -1.4903e-01,  7.4556e-02,
         -3.5486e-01,  3.7781e-01,  4.3309e-01,  3.7457e-02,  2.7718e-01,
          1.0196e-01,  8.0862e-02,  1.8386e-01, -1.3102e-01, -3.6947e-01,
          8.8684e-03, -1.6296e-01,  2.2049e-02, -1.1285e-01,  4.7031e-02,
          6.5172e-03,  1.3686e-01, -1.9226e-01,  3.9755e-01, -3.0931e-02,
          7.7438e-02,  1.9906e-01, -1.1020e-01,  1.7184e-02, -9.1987e-02,
         -1.9733e-02,  5.2854e-02,  5.8077e-01, -1.5481e-01, -4.5435e-01,
          3.0412e-01,  1.7133e+00,  6.9467e-02, -1.4841e-03,  7.2884e-02,
         -1.0885e-01, -5.5273e-01,  6.1813e-01,  3.8146e-01,  2.8822e-01,
         -9.2752e-02,  2.2746e-01, -1.7598e+00,  3.1908e-01,  8.7822e-02,
         -5.1887e-02,  1.3243e-01, -5.5428e-01,  5.3441e-01, -1.8728e-02,
          1.2036e-01,  1.8333e-01,  2.8519e-01, -9.1544e-02,  5.3299e-02,
          5.0606e-02, -2.3060e-01,  3.7258e-02,  6.0758e-02, -3.0317e-01,
         -5.0315e-02,  2.0617e-01, -8.2446e-02,  1.0369e-01,  2.1911e-02,
          4.3586e-02, -3.2179e-02,  3.5008e-01,  9.4901e-02,  1.8650e-01,
          7.3573e-02,  7.2234e-02,  2.1720e-01, -2.3763e-01, -3.3803e-01,
         -1.3452e-02, -5.0413e-01, -4.2244e-02, -9.3888e-02, -3.4584e-01,
          3.0231e-01, -2.0678e-01,  5.4456e-02,  1.1153e-01, -1.2150e-02,
          1.0948e-01, -1.7216e-01,  2.3481e-01, -3.0508e-01, -1.8684e-01,
          2.2567e-01, -2.1917e-01,  1.5883e-01, -2.7987e-02,  7.0178e-02,
         -2.1607e-01, -8.6633e-02,  2.5312e-01,  6.8390e-03,  1.1630e-01,
         -1.8759e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
395000 特征值优化 tensor(2.4966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5191e-01,  6.7695e-01, -7.1502e-01, -9.8918e-01,  4.5597e+00,
          1.8649e+00, -1.0311e+00, -1.8507e+00,  7.4067e-01, -4.5035e-01,
         -8.4541e-01, -2.0816e-01, -1.4673e-01, -6.8870e-02,  1.0890e-01,
         -6.0611e-01,  2.9350e-01,  2.4572e-03,  3.4283e-01,  3.8600e-02,
          8.1291e-01,  7.1404e-01,  3.6237e-01,  1.0683e+00, -1.3221e+00,
         -4.7502e-01,  2.8701e-01,  2.2968e-01,  2.7259e-01,  8.0699e-02,
         -1.0528e-01, -3.5766e-02,  1.5875e-01, -7.3959e-02, -2.6506e-02,
          2.7505e-03, -9.3756e-02,  9.8759e-02,  7.1138e-02,  1.8433e-01,
          2.6118e-01,  1.6158e-01, -7.9994e-02,  5.9144e-03, -1.8172e-01,
         -1.4593e-01,  2.4430e-02, -2.2843e-02, -8.2239e-02,  3.7277e-01,
         -2.3147e-01, -2.5724e-01, -8.0983e-02, -8.6667e-02,  2.2889e-02,
          2.6024e-01, -6.3655e-02, -3.0360e-01, -1.5703e-01,  7.7065e-02,
         -3.5306e-01,  3.8082e-01,  4.3949e-01,  5.8027e-02,  2.8473e-01,
          9.2474e-02,  6.9674e-02,  1.7774e-01, -1.4158e-01, -3.5464e-01,
         -9.7078e-03, -1.8389e-01,  2.6442e-02, -1.3698e-01,  5.0091e-02,
          8.1209e-03,  1.2498e-01, -1.7903e-01,  3.8852e-01, -1.5806e-02,
          7.8496e-02,  2.0258e-01, -9.3172e-02, -1.4821e-03, -1.1313e-01,
          2.2434e-03,  3.1277e-02,  5.8047e-01, -1.6935e-01, -4.4143e-01,
          2.9529e-01,  1.7188e+00,  8.1824e-02, -8.2310e-03,  7.6514e-02,
         -1.1068e-01, -5.5301e-01,  6.3331e-01,  3.9252e-01,  3.1371e-01,
         -1.0389e-01,  2.3452e-01, -1.7570e+00,  3.1088e-01,  1.0495e-01,
         -6.5804e-02,  1.3853e-01, -5.5289e-01,  5.2331e-01, -2.2205e-02,
          1.1880e-01,  1.9221e-01,  2.8937e-01, -6.9126e-02,  4.9306e-02,
          4.3488e-02, -2.4332e-01,  4.6421e-02,  5.6787e-02, -2.9482e-01,
         -5.8796e-02,  1.9874e-01, -9.3148e-02,  9.5493e-02,  3.8774e-02,
          4.1441e-02, -3.1387e-02,  3.4118e-01,  1.0676e-01,  1.9741e-01,
          6.7496e-02,  6.6639e-02,  2.2431e-01, -2.3122e-01, -3.4709e-01,
         -3.2910e-02, -4.8965e-01, -5.6342e-02, -1.0302e-01, -3.3555e-01,
          2.9468e-01, -1.9366e-01,  5.1891e-02,  1.2118e-01, -1.6837e-02,
          1.3001e-01, -1.6602e-01,  2.3109e-01, -3.1277e-01, -1.8463e-01,
          2.2867e-01, -1.9590e-01,  1.6269e-01, -2.4560e-02,  9.1745e-02,
         -2.1826e-01, -9.6460e-02,  2.5064e-01,  1.7863e-02,  1.1575e-01,
          6.1339e-03]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
396000 特征值优化 tensor(2.4968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2738e-01,  6.8758e-01, -7.1483e-01, -9.9655e-01,  4.5625e+00,
          1.8546e+00, -1.0212e+00, -1.8465e+00,  7.4245e-01, -4.5055e-01,
         -8.4571e-01, -2.0400e-01, -1.4549e-01, -7.0328e-02,  8.5845e-02,
         -6.0836e-01,  2.7983e-01,  1.5680e-02,  3.2801e-01,  4.9227e-02,
          8.0673e-01,  7.0967e-01,  3.6574e-01,  1.0785e+00, -1.3268e+00,
         -4.7046e-01,  3.0042e-01,  2.2622e-01,  2.7120e-01,  7.6466e-02,
         -1.0041e-01, -4.2047e-02,  1.6983e-01, -9.2865e-02, -1.6116e-02,
          5.3391e-03, -8.5101e-02,  9.9264e-02,  7.0570e-02,  1.7816e-01,
          2.6163e-01,  1.6634e-01, -8.4465e-02, -5.8307e-03, -1.8157e-01,
         -1.5597e-01,  3.5992e-02, -2.9356e-02, -8.7802e-02,  3.7264e-01,
         -2.2549e-01, -2.5046e-01, -8.8078e-02, -9.9407e-02,  2.8715e-02,
          2.5952e-01, -5.5567e-02, -3.1493e-01, -1.5746e-01,  6.3902e-02,
         -3.4437e-01,  3.9337e-01,  4.2175e-01,  3.9962e-02,  2.8513e-01,
          8.8593e-02,  7.5429e-02,  1.8647e-01, -1.1874e-01, -3.6322e-01,
          7.8145e-03, -1.6903e-01,  2.3030e-02, -1.2485e-01,  3.1442e-02,
          4.0952e-03,  1.2208e-01, -1.6695e-01,  3.9578e-01, -2.2771e-02,
          7.9718e-02,  2.0437e-01, -1.0510e-01,  1.8616e-02, -9.6580e-02,
         -1.9521e-02,  4.8696e-02,  5.6954e-01, -1.5382e-01, -4.4263e-01,
          2.9317e-01,  1.7184e+00,  7.1572e-02, -7.6270e-03,  6.9014e-02,
         -1.1131e-01, -5.4456e-01,  6.2036e-01,  4.0967e-01,  3.0116e-01,
         -1.0378e-01,  2.3020e-01, -1.7600e+00,  3.2079e-01,  9.8266e-02,
         -5.7533e-02,  1.2914e-01, -5.5551e-01,  5.4112e-01, -3.7770e-02,
          1.2915e-01,  1.8968e-01,  2.8297e-01, -8.3756e-02,  5.2990e-02,
          3.8471e-02, -2.4185e-01,  3.2834e-02,  6.5248e-02, -2.8738e-01,
         -5.0273e-02,  2.0683e-01, -7.7196e-02,  9.7610e-02,  2.6267e-02,
          4.4500e-02, -4.5124e-02,  3.4516e-01,  9.2796e-02,  1.8960e-01,
          6.6493e-02,  7.4694e-02,  2.1446e-01, -2.3389e-01, -3.4915e-01,
         -1.7532e-02, -5.0973e-01, -3.1077e-02, -1.2186e-01, -3.4806e-01,
          2.8381e-01, -2.1019e-01,  4.6563e-02,  1.4243e-01, -1.3618e-02,
          1.1501e-01, -1.7391e-01,  2.3582e-01, -3.0241e-01, -1.9445e-01,
          2.2326e-01, -2.0762e-01,  1.6486e-01, -3.3524e-02,  7.4141e-02,
         -2.1361e-01, -8.7930e-02,  2.4077e-01,  7.3005e-03,  1.1659e-01,
         -6.2697e-03]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
397000 特征值优化 tensor(2.4988, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2125e-01,  6.8597e-01, -7.1496e-01, -9.9359e-01,  4.5432e+00,
          1.8594e+00, -1.0124e+00, -1.8533e+00,  7.2794e-01, -4.4593e-01,
         -8.6019e-01, -2.2102e-01, -1.4322e-01, -6.1404e-02,  8.6938e-02,
         -6.0720e-01,  3.0572e-01,  2.6858e-02,  3.3112e-01,  4.0338e-02,
          8.1111e-01,  7.0436e-01,  3.6715e-01,  1.0743e+00, -1.3366e+00,
         -4.6605e-01,  2.9113e-01,  2.4013e-01,  2.7703e-01,  7.7723e-02,
         -9.3058e-02, -4.3007e-02,  1.7787e-01, -9.6901e-02, -1.5018e-02,
          6.5111e-03, -8.9526e-02,  1.0418e-01,  7.5244e-02,  1.8004e-01,
          2.6497e-01,  1.6209e-01, -7.9180e-02, -7.4686e-03, -1.8029e-01,
         -1.5200e-01,  3.3684e-02, -1.9224e-02, -8.1426e-02,  3.6701e-01,
         -2.3082e-01, -2.4753e-01, -8.3421e-02, -9.0846e-02,  2.6846e-02,
          2.7591e-01, -4.1011e-02, -3.1420e-01, -1.5255e-01,  6.8272e-02,
         -3.4862e-01,  3.9064e-01,  4.3291e-01,  4.2856e-02,  2.8730e-01,
          9.0265e-02,  7.2344e-02,  1.7988e-01, -1.3008e-01, -3.5371e-01,
         -4.8050e-04, -1.7169e-01,  3.0182e-02, -1.4108e-01,  4.9279e-02,
          1.0104e-02,  1.1914e-01, -1.6742e-01,  3.8575e-01, -1.8842e-02,
          7.6449e-02,  2.0362e-01, -1.0232e-01,  2.4695e-02, -9.7117e-02,
         -6.9044e-03,  5.1754e-02,  5.8426e-01, -1.7119e-01, -4.4740e-01,
          2.9695e-01,  1.7144e+00,  6.9406e-02, -5.2207e-03,  7.3603e-02,
         -1.1046e-01, -5.4923e-01,  6.2392e-01,  3.9185e-01,  3.1015e-01,
         -9.8410e-02,  2.3127e-01, -1.7519e+00,  3.1457e-01,  1.0781e-01,
         -6.6248e-02,  1.2914e-01, -5.4823e-01,  5.2879e-01, -3.3817e-02,
          1.3054e-01,  1.9760e-01,  2.8457e-01, -8.0956e-02,  5.0165e-02,
          3.7487e-02, -2.3837e-01,  3.6968e-02,  6.8762e-02, -2.8381e-01,
         -6.7754e-02,  2.0527e-01, -8.6218e-02,  9.5388e-02,  3.5097e-02,
          4.1315e-02, -3.2866e-02,  3.4202e-01,  9.7750e-02,  1.9167e-01,
          6.9045e-02,  6.8846e-02,  2.1692e-01, -2.3729e-01, -3.5096e-01,
         -1.9664e-02, -4.9462e-01, -5.1458e-02, -1.1213e-01, -3.4940e-01,
          2.8314e-01, -2.0907e-01,  5.3598e-02,  1.2042e-01, -2.4128e-02,
          1.1914e-01, -1.6790e-01,  2.3774e-01, -3.1318e-01, -1.8916e-01,
          2.3566e-01, -2.0359e-01,  1.6396e-01, -3.2165e-02,  7.5725e-02,
         -2.1990e-01, -9.5448e-02,  2.4398e-01,  8.2599e-03,  1.0986e-01,
         -5.6314e-03]], device='cuda:0') tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
398000 特征值优化 tensor(2.4986, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1899e-01,  6.8721e-01, -7.1550e-01, -9.9163e-01,  4.5502e+00,
          1.8504e+00, -1.0192e+00, -1.8404e+00,  7.4514e-01, -4.3397e-01,
         -8.6462e-01, -2.3791e-01, -1.4283e-01, -6.2564e-02,  9.6494e-02,
         -6.0718e-01,  3.1040e-01,  2.0978e-02,  3.3543e-01,  4.5411e-02,
          8.1222e-01,  7.1367e-01,  3.5892e-01,  1.0733e+00, -1.3144e+00,
         -4.6518e-01,  3.0341e-01,  2.2097e-01,  2.7123e-01,  8.5997e-02,
         -9.3466e-02, -3.9743e-02,  1.6127e-01, -7.6230e-02, -1.2646e-02,
          3.5475e-03, -9.4549e-02,  1.1196e-01,  7.0442e-02,  1.7378e-01,
          2.5934e-01,  1.6363e-01, -8.1638e-02,  5.5791e-03, -1.8599e-01,
         -1.4524e-01,  3.7320e-02, -1.0351e-02, -8.3653e-02,  3.7100e-01,
         -2.2804e-01, -2.5263e-01, -8.1812e-02, -8.7229e-02,  2.3601e-02,
          2.5769e-01, -5.9023e-02, -3.0893e-01, -1.5706e-01,  6.3929e-02,
         -3.4627e-01,  3.8865e-01,  4.3157e-01,  5.2950e-02,  2.8872e-01,
          9.4395e-02,  7.3685e-02,  1.7436e-01, -1.3464e-01, -3.5577e-01,
         -4.7792e-03, -1.8481e-01,  2.8041e-02, -1.4031e-01,  4.7958e-02,
          9.3717e-03,  1.2382e-01, -1.7731e-01,  3.8354e-01, -1.3915e-02,
          7.7906e-02,  2.0309e-01, -9.5893e-02,  5.6672e-03, -1.2295e-01,
          1.0500e-03,  3.8397e-02,  5.7510e-01, -1.7569e-01, -4.4352e-01,
          3.0051e-01,  1.7197e+00,  9.0869e-02, -9.6803e-03,  6.9902e-02,
         -1.0932e-01, -5.5431e-01,  6.1822e-01,  3.9740e-01,  3.0483e-01,
         -9.3430e-02,  2.2936e-01, -1.7505e+00,  3.1092e-01,  1.0542e-01,
         -6.6177e-02,  1.3418e-01, -5.5711e-01,  5.3495e-01, -2.8810e-02,
          1.2411e-01,  1.9736e-01,  2.8475e-01, -6.6510e-02,  4.8725e-02,
          4.3633e-02, -2.4213e-01,  4.5081e-02,  6.2512e-02, -2.9364e-01,
         -7.0202e-02,  1.9957e-01, -9.5326e-02,  8.9793e-02,  3.6014e-02,
          4.0809e-02, -3.7921e-02,  3.4483e-01,  9.9004e-02,  1.9880e-01,
          6.8181e-02,  6.8108e-02,  2.2304e-01, -2.2825e-01, -3.4885e-01,
         -2.5050e-02, -4.9891e-01, -4.3104e-02, -1.1073e-01, -3.3228e-01,
          2.8970e-01, -2.0212e-01,  5.1453e-02,  1.3020e-01, -1.0980e-02,
          1.2782e-01, -1.7019e-01,  2.2489e-01, -3.1030e-01, -1.8075e-01,
          2.2942e-01, -1.9359e-01,  1.6812e-01, -2.7560e-02,  8.8589e-02,
         -2.1944e-01, -9.8273e-02,  2.4588e-01,  1.4889e-02,  1.0979e-01,
          6.4387e-03]], device='cuda:0') tensor(0.2693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
399000 特征值优化 tensor(2.5110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0642e-01,  6.8530e-01, -7.0729e-01, -9.9088e-01,  4.5605e+00,
          1.8516e+00, -1.0043e+00, -1.8500e+00,  7.2922e-01, -4.3038e-01,
         -8.6338e-01, -2.4835e-01, -1.4192e-01, -6.0380e-02,  9.9516e-02,
         -6.0225e-01,  3.0970e-01,  3.0519e-02,  3.2552e-01,  5.1667e-02,
          8.1319e-01,  7.1486e-01,  3.5856e-01,  1.0777e+00, -1.3154e+00,
         -4.6165e-01,  2.9986e-01,  2.2043e-01,  2.7048e-01,  8.5266e-02,
         -9.0509e-02, -3.9231e-02,  1.8291e-01, -9.3244e-02, -1.2575e-02,
          6.5144e-03, -9.3062e-02,  1.0521e-01,  7.0705e-02,  1.8749e-01,
          2.5852e-01,  1.6274e-01, -8.4877e-02,  1.9512e-04, -1.8661e-01,
         -1.4454e-01,  4.0950e-02, -1.3405e-02, -7.6843e-02,  3.6436e-01,
         -2.3057e-01, -2.4474e-01, -8.6099e-02, -9.1944e-02,  3.0408e-02,
          2.5940e-01, -5.3038e-02, -3.1591e-01, -1.5403e-01,  6.4061e-02,
         -3.4214e-01,  3.8744e-01,  4.3243e-01,  4.8960e-02,  2.8568e-01,
          9.3475e-02,  6.8591e-02,  1.7480e-01, -1.3001e-01, -3.5313e-01,
         -3.2392e-03, -1.8139e-01,  2.5652e-02, -1.3944e-01,  5.4634e-02,
          1.0220e-02,  1.2234e-01, -1.6858e-01,  3.7911e-01, -1.1745e-02,
          7.8584e-02,  2.0083e-01, -1.0032e-01,  1.1921e-02, -1.0398e-01,
         -8.2449e-03,  4.3424e-02,  5.7115e-01, -1.7017e-01, -4.5624e-01,
          3.0354e-01,  1.7285e+00,  8.3114e-02, -6.8690e-03,  7.2302e-02,
         -1.0560e-01, -5.4654e-01,  6.3308e-01,  4.0124e-01,  3.1298e-01,
         -9.4388e-02,  2.3407e-01, -1.7608e+00,  3.0972e-01,  1.0756e-01,
         -5.9736e-02,  1.2833e-01, -5.5397e-01,  5.4052e-01, -3.5944e-02,
          1.2888e-01,  1.9234e-01,  2.7695e-01, -6.7317e-02,  4.8061e-02,
          4.6029e-02, -2.4015e-01,  4.6492e-02,  5.7085e-02, -2.8418e-01,
         -6.6658e-02,  2.0198e-01, -9.3089e-02,  9.2387e-02,  2.8204e-02,
          4.1260e-02, -4.1896e-02,  3.4217e-01,  9.8638e-02,  1.9772e-01,
          6.4647e-02,  7.2529e-02,  2.1924e-01, -2.3334e-01, -3.4988e-01,
         -1.6904e-02, -4.9789e-01, -4.0040e-02, -1.1099e-01, -3.4473e-01,
          2.9424e-01, -2.0756e-01,  5.7614e-02,  1.2729e-01, -1.9148e-02,
          1.2645e-01, -1.7157e-01,  2.2362e-01, -3.0588e-01, -1.7899e-01,
          2.2107e-01, -1.9654e-01,  1.6810e-01, -2.7083e-02,  7.9547e-02,
         -2.1741e-01, -9.7303e-02,  2.4548e-01,  1.7164e-02,  1.1478e-01,
         -5.5342e-03]], device='cuda:0') tensor(0.2129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
400000 特征值优化 tensor(2.5230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.9829e-01,  6.9881e-01, -7.1548e-01, -9.8265e-01,  4.5382e+00,
          1.8376e+00, -1.0005e+00, -1.8520e+00,  7.3521e-01, -4.2933e-01,
         -8.6769e-01, -2.2194e-01, -1.4036e-01, -4.7684e-02,  1.0447e-01,
         -5.9883e-01,  3.1004e-01,  2.0770e-02,  3.1747e-01,  5.2722e-02,
          8.1455e-01,  7.1441e-01,  3.6438e-01,  1.0640e+00, -1.3251e+00,
         -4.7054e-01,  2.9869e-01,  2.2309e-01,  2.6592e-01,  7.8127e-02,
         -8.0710e-02, -4.0394e-02,  1.6360e-01, -1.0199e-01, -6.4508e-03,
          3.8806e-03, -8.9856e-02,  1.1380e-01,  6.6456e-02,  1.7814e-01,
          2.5820e-01,  1.6292e-01, -8.3929e-02,  4.3813e-03, -1.7994e-01,
         -1.5097e-01,  3.7402e-02, -6.3631e-03, -8.3820e-02,  3.6517e-01,
         -2.3036e-01, -2.4937e-01, -8.7172e-02, -8.7938e-02,  2.4864e-02,
          2.6527e-01, -5.3024e-02, -3.0925e-01, -1.5508e-01,  7.1347e-02,
         -3.4574e-01,  3.9148e-01,  4.2445e-01,  3.5164e-02,  2.9036e-01,
          8.7199e-02,  7.5871e-02,  1.8262e-01, -1.1744e-01, -3.4980e-01,
         -1.8954e-03, -1.8085e-01,  2.9700e-02, -1.3278e-01,  5.0598e-02,
          3.2639e-03,  1.2000e-01, -1.7315e-01,  3.8877e-01, -1.9063e-02,
          7.7565e-02,  2.0585e-01, -8.9779e-02, -4.8780e-03, -1.0918e-01,
         -1.4451e-02,  3.4485e-02,  5.7807e-01, -1.8929e-01, -4.4249e-01,
          2.9080e-01,  1.7210e+00,  7.7986e-02, -2.7537e-03,  7.7994e-02,
         -1.0955e-01, -5.4825e-01,  6.2342e-01,  3.9740e-01,  2.9873e-01,
         -1.1344e-01,  2.3079e-01, -1.7553e+00,  3.0762e-01,  1.1100e-01,
         -6.8968e-02,  1.3557e-01, -5.5962e-01,  5.2942e-01, -3.8512e-02,
          1.2897e-01,  2.0074e-01,  2.7591e-01, -7.7207e-02,  4.6008e-02,
          4.4548e-02, -2.4064e-01,  4.1832e-02,  7.0789e-02, -2.8916e-01,
         -6.6541e-02,  2.0878e-01, -8.9786e-02,  9.0746e-02,  3.2831e-02,
          4.0620e-02, -3.8663e-02,  3.4613e-01,  9.6587e-02,  2.0109e-01,
          6.3644e-02,  6.3252e-02,  2.1685e-01, -2.2943e-01, -3.5471e-01,
         -2.5918e-02, -5.0540e-01, -4.2248e-02, -1.0453e-01, -3.4981e-01,
          2.8651e-01, -2.1646e-01,  5.0359e-02,  1.2595e-01, -2.3458e-02,
          1.3062e-01, -1.6645e-01,  2.1870e-01, -3.1836e-01, -1.7732e-01,
          2.4186e-01, -2.0006e-01,  1.6650e-01, -2.9125e-02,  9.0510e-02,
         -2.2299e-01, -1.0605e-01,  2.4331e-01,  1.9818e-02,  1.1257e-01,
          4.8058e-03]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
401000 特征值优化 tensor(2.5166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0643e-01,  6.8847e-01, -7.0222e-01, -9.9195e-01,  4.5454e+00,
          1.8377e+00, -1.0081e+00, -1.8517e+00,  7.3301e-01, -4.2036e-01,
         -8.6201e-01, -2.5714e-01, -1.4000e-01, -5.9959e-02,  1.0727e-01,
         -6.0531e-01,  3.2678e-01,  2.8786e-02,  3.2322e-01,  4.9077e-02,
          8.1703e-01,  7.1306e-01,  3.6010e-01,  1.0809e+00, -1.3150e+00,
         -4.6711e-01,  2.9667e-01,  2.2134e-01,  2.7582e-01,  8.5299e-02,
         -8.9659e-02, -4.3135e-02,  1.8445e-01, -8.8833e-02, -1.8423e-02,
          5.0024e-03, -9.4693e-02,  1.0809e-01,  6.8510e-02,  1.8887e-01,
          2.5683e-01,  1.6339e-01, -8.5511e-02, -2.4405e-03, -1.8612e-01,
         -1.4511e-01,  4.0020e-02, -1.1346e-02, -8.1331e-02,  3.6577e-01,
         -2.3147e-01, -2.4379e-01, -8.6933e-02, -8.6336e-02,  2.4598e-02,
          2.6723e-01, -5.5859e-02, -3.1271e-01, -1.5498e-01,  6.5118e-02,
         -3.5733e-01,  3.9156e-01,  4.2966e-01,  4.6557e-02,  2.9142e-01,
          9.7250e-02,  6.5626e-02,  1.7031e-01, -1.3009e-01, -3.4892e-01,
         -5.9711e-03, -1.7685e-01,  2.3417e-02, -1.4124e-01,  5.3626e-02,
          1.5261e-02,  1.2180e-01, -1.8348e-01,  3.8040e-01, -2.1624e-02,
          7.5382e-02,  2.0025e-01, -9.7970e-02,  1.5330e-02, -1.0665e-01,
         -6.7470e-03,  4.3411e-02,  5.8248e-01, -1.6720e-01, -4.4707e-01,
          3.0140e-01,  1.7290e+00,  8.1620e-02, -9.7951e-03,  7.2156e-02,
         -1.0846e-01, -5.5308e-01,  6.3943e-01,  3.9108e-01,  3.1958e-01,
         -9.5304e-02,  2.2870e-01, -1.7451e+00,  3.1304e-01,  1.1067e-01,
         -6.9956e-02,  1.3077e-01, -5.5227e-01,  5.3649e-01, -3.6225e-02,
          1.2759e-01,  1.9647e-01,  2.7894e-01, -6.8161e-02,  4.8319e-02,
          4.2393e-02, -2.3740e-01,  5.1188e-02,  5.5564e-02, -2.8370e-01,
         -7.0565e-02,  1.9960e-01, -9.9027e-02,  9.3963e-02,  2.9642e-02,
          3.9502e-02, -3.9737e-02,  3.4777e-01,  9.3932e-02,  1.9679e-01,
          6.4153e-02,  7.1670e-02,  2.1857e-01, -2.3279e-01, -3.4997e-01,
         -2.7041e-02, -4.9964e-01, -4.3853e-02, -1.0354e-01, -3.4303e-01,
          2.9314e-01, -2.0536e-01,  6.3565e-02,  1.2081e-01, -1.4808e-02,
          1.2097e-01, -1.7510e-01,  2.2540e-01, -3.1350e-01, -1.7776e-01,
          2.3443e-01, -2.0187e-01,  1.6912e-01, -3.6317e-02,  8.0604e-02,
         -2.2151e-01, -9.2083e-02,  2.4623e-01,  1.0965e-02,  1.0820e-01,
          3.4020e-03]], device='cuda:0') tensor(0.2299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
402000 特征值优化 tensor(2.4981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.9287e-01,  6.8655e-01, -7.1846e-01, -9.9740e-01,  4.5528e+00,
          1.8380e+00, -9.9864e-01, -1.8387e+00,  7.3705e-01, -4.2082e-01,
         -8.7057e-01, -2.5373e-01, -1.3495e-01, -3.6756e-02,  1.0323e-01,
         -6.0588e-01,  3.1511e-01,  3.2179e-02,  3.2281e-01,  5.4596e-02,
          8.0311e-01,  7.2376e-01,  3.6781e-01,  1.0597e+00, -1.3238e+00,
         -4.6778e-01,  3.0628e-01,  2.1777e-01,  2.6645e-01,  8.4240e-02,
         -8.5725e-02, -4.2766e-02,  1.7353e-01, -8.9821e-02, -1.6373e-02,
          8.7171e-03, -9.2626e-02,  1.1889e-01,  6.4479e-02,  1.7618e-01,
          2.5651e-01,  1.6440e-01, -7.9676e-02, -1.1114e-02, -1.8300e-01,
         -1.4957e-01,  4.9969e-02, -1.0561e-02, -7.6447e-02,  3.7001e-01,
         -2.3149e-01, -2.5218e-01, -8.2054e-02, -8.0869e-02,  1.3824e-02,
          2.7071e-01, -4.1848e-02, -3.1222e-01, -1.5640e-01,  6.6195e-02,
         -3.4182e-01,  3.9866e-01,  4.1629e-01,  3.3750e-02,  2.8852e-01,
          9.1832e-02,  7.5437e-02,  1.7647e-01, -1.1381e-01, -3.5607e-01,
          3.9167e-03, -1.7786e-01,  3.3226e-02, -1.3463e-01,  4.0527e-02,
          1.7481e-03,  1.2498e-01, -1.6855e-01,  3.8705e-01, -1.5006e-02,
          7.7576e-02,  2.1101e-01, -8.9885e-02,  8.0065e-03, -1.1643e-01,
         -6.9916e-03,  4.0677e-02,  5.6146e-01, -1.6690e-01, -4.5498e-01,
          3.0068e-01,  1.7155e+00,  7.8662e-02, -1.0057e-03,  6.8166e-02,
         -1.1198e-01, -5.4835e-01,  6.2560e-01,  4.0048e-01,  3.0428e-01,
         -8.7051e-02,  2.3530e-01, -1.7445e+00,  3.1433e-01,  1.1279e-01,
         -7.9426e-02,  1.3087e-01, -5.6135e-01,  5.2597e-01, -4.4216e-02,
          1.3375e-01,  1.9522e-01,  2.8169e-01, -7.5569e-02,  4.8018e-02,
          4.2115e-02, -2.4271e-01,  5.2326e-02,  6.5815e-02, -2.8070e-01,
         -6.7129e-02,  2.0676e-01, -9.0897e-02,  9.4570e-02,  2.5135e-02,
          4.8256e-02, -4.8721e-02,  3.4313e-01,  9.0840e-02,  2.0802e-01,
          6.5192e-02,  6.4883e-02,  2.1606e-01, -2.2816e-01, -3.5574e-01,
         -1.6906e-02, -5.0963e-01, -2.5519e-02, -1.2187e-01, -3.5467e-01,
          2.7885e-01, -2.1773e-01,  5.0660e-02,  1.3426e-01, -1.3088e-02,
          1.3012e-01, -1.7427e-01,  2.2437e-01, -3.1377e-01, -1.7649e-01,
          2.3582e-01, -1.8797e-01,  1.7624e-01, -2.3276e-02,  8.5146e-02,
         -2.2479e-01, -1.0626e-01,  2.4555e-01,  2.4558e-02,  1.2078e-01,
          8.5695e-03]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
403000 特征值优化 tensor(2.4931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8148e-01,  6.8909e-01, -7.1295e-01, -9.9587e-01,  4.5577e+00,
          1.8332e+00, -9.9614e-01, -1.8384e+00,  7.3882e-01, -4.1646e-01,
         -8.7037e-01, -2.6111e-01, -1.3071e-01, -2.6062e-02,  9.3263e-02,
         -6.0601e-01,  3.1870e-01,  4.2236e-02,  3.2087e-01,  6.0997e-02,
          7.9815e-01,  7.3009e-01,  3.6919e-01,  1.0577e+00, -1.3163e+00,
         -4.5594e-01,  3.1973e-01,  2.1717e-01,  2.7104e-01,  8.1999e-02,
         -8.8288e-02, -4.8583e-02,  1.8637e-01, -8.6877e-02, -1.2606e-02,
          9.9055e-03, -9.2474e-02,  1.1118e-01,  6.3581e-02,  1.7793e-01,
          2.5509e-01,  1.6666e-01, -8.5942e-02, -1.1516e-02, -1.7563e-01,
         -1.5439e-01,  5.6727e-02, -1.0074e-02, -8.1763e-02,  3.6906e-01,
         -2.2962e-01, -2.4846e-01, -8.0645e-02, -7.3874e-02,  4.5928e-03,
          2.6250e-01, -4.4106e-02, -3.1322e-01, -1.6232e-01,  6.6040e-02,
         -3.4187e-01,  4.0208e-01,  4.1572e-01,  3.1746e-02,  2.9075e-01,
          8.9598e-02,  7.1521e-02,  1.8024e-01, -1.0658e-01, -3.5140e-01,
          8.4011e-03, -1.8859e-01,  3.5512e-02, -1.3710e-01,  3.1775e-02,
          3.8189e-03,  1.1803e-01, -1.5862e-01,  3.8312e-01, -9.1117e-03,
          8.4514e-02,  2.1359e-01, -8.9632e-02,  1.6548e-02, -1.1699e-01,
          1.0042e-04,  3.2693e-02,  5.5998e-01, -1.5367e-01, -4.5444e-01,
          2.9905e-01,  1.7072e+00,  8.9492e-02, -1.2523e-02,  6.4416e-02,
         -1.0941e-01, -5.4442e-01,  6.2210e-01,  4.1494e-01,  2.9692e-01,
         -9.7309e-02,  2.3222e-01, -1.7442e+00,  3.1755e-01,  1.1476e-01,
         -7.9285e-02,  1.3718e-01, -5.6016e-01,  5.4158e-01, -4.6836e-02,
          1.3791e-01,  1.9960e-01,  2.8264e-01, -7.3278e-02,  4.7791e-02,
          4.1147e-02, -2.5201e-01,  5.3161e-02,  6.2369e-02, -2.7132e-01,
         -7.0625e-02,  2.0964e-01, -8.7229e-02,  9.3378e-02,  2.7239e-02,
          4.8502e-02, -5.3244e-02,  3.4742e-01,  9.1802e-02,  2.1281e-01,
          6.6111e-02,  6.4433e-02,  2.1818e-01, -2.2189e-01, -3.5435e-01,
         -1.3150e-02, -5.1405e-01, -1.9444e-02, -1.2724e-01, -3.4188e-01,
          2.8296e-01, -2.1277e-01,  5.4978e-02,  1.3921e-01, -1.1799e-02,
          1.3292e-01, -1.7287e-01,  2.3283e-01, -3.1347e-01, -1.8529e-01,
          2.3731e-01, -1.8433e-01,  1.8293e-01, -2.4051e-02,  8.6106e-02,
         -2.2218e-01, -1.1110e-01,  2.4617e-01,  2.9929e-02,  1.2904e-01,
          8.6339e-03]], device='cuda:0') tensor(0.2214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
404000 特征值优化 tensor(2.5065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8031e-01,  7.0235e-01, -7.2524e-01, -9.8934e-01,  4.5517e+00,
          1.8301e+00, -9.9166e-01, -1.8546e+00,  7.5390e-01, -4.0551e-01,
         -8.7546e-01, -2.7217e-01, -1.3520e-01, -3.7388e-02,  1.0147e-01,
         -6.0855e-01,  3.2232e-01,  3.9756e-02,  3.1631e-01,  5.8645e-02,
          8.2147e-01,  7.1775e-01,  3.6545e-01,  1.0697e+00, -1.3103e+00,
         -4.5734e-01,  3.1148e-01,  2.2253e-01,  2.7655e-01,  8.8060e-02,
         -8.9632e-02, -5.8511e-02,  1.8011e-01, -1.0339e-01, -8.0803e-03,
          4.8711e-03, -9.6419e-02,  1.0479e-01,  6.8884e-02,  1.8818e-01,
          2.4797e-01,  1.6185e-01, -8.2761e-02,  1.5241e-03, -1.9070e-01,
         -1.4287e-01,  5.1660e-02,  3.4134e-03, -7.4679e-02,  3.6488e-01,
         -2.3176e-01, -2.4050e-01, -9.1106e-02, -8.7689e-02,  2.1930e-02,
          2.5731e-01, -4.7300e-02, -3.1458e-01, -1.5720e-01,  6.6263e-02,
         -3.4802e-01,  3.9457e-01,  4.2155e-01,  3.9336e-02,  2.9177e-01,
          9.7101e-02,  7.1343e-02,  1.7258e-01, -1.1259e-01, -3.4709e-01,
         -3.6816e-03, -1.7950e-01,  3.0582e-02, -1.4573e-01,  4.9241e-02,
          8.8042e-03,  1.2300e-01, -1.6991e-01,  3.8153e-01, -2.0796e-02,
          7.2569e-02,  2.0459e-01, -9.8300e-02,  2.1370e-02, -1.0757e-01,
         -1.8399e-02,  5.5827e-02,  5.6646e-01, -1.7933e-01, -4.5004e-01,
          3.0247e-01,  1.7197e+00,  8.1706e-02,  4.3334e-03,  7.0865e-02,
         -1.0258e-01, -5.4600e-01,  6.2753e-01,  4.0003e-01,  3.1569e-01,
         -8.1593e-02,  2.3150e-01, -1.7488e+00,  3.1873e-01,  1.0366e-01,
         -7.4280e-02,  1.2064e-01, -5.5428e-01,  5.4013e-01, -3.9523e-02,
          1.2991e-01,  2.0507e-01,  2.7576e-01, -6.4564e-02,  4.8062e-02,
          4.7051e-02, -2.3827e-01,  4.2817e-02,  5.6783e-02, -2.8913e-01,
         -8.2086e-02,  2.0505e-01, -9.9280e-02,  9.2231e-02,  2.4568e-02,
          4.0319e-02, -4.2403e-02,  3.4262e-01,  9.8190e-02,  2.0146e-01,
          6.6553e-02,  7.5503e-02,  2.2130e-01, -2.3336e-01, -3.5016e-01,
         -2.7374e-02, -5.0736e-01, -3.3349e-02, -1.0987e-01, -3.4655e-01,
          2.8430e-01, -2.1259e-01,  5.4209e-02,  1.2919e-01, -1.3483e-02,
          1.2195e-01, -1.8117e-01,  2.2548e-01, -3.0554e-01, -1.7698e-01,
          2.3987e-01, -1.9430e-01,  1.7222e-01, -3.4186e-02,  7.1174e-02,
         -2.2250e-01, -9.7939e-02,  2.4574e-01,  2.0295e-02,  1.1274e-01,
         -1.1602e-03]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
405000 特征值优化 tensor(2.5152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7008e-01,  6.9391e-01, -7.1422e-01, -9.9330e-01,  4.5356e+00,
          1.8343e+00, -9.8753e-01, -1.8559e+00,  7.4561e-01, -4.0475e-01,
         -8.6969e-01, -2.8279e-01, -1.3216e-01, -4.3253e-02,  1.0443e-01,
         -6.1261e-01,  3.3098e-01,  4.4430e-02,  3.1272e-01,  5.7378e-02,
          8.1694e-01,  7.2019e-01,  3.6054e-01,  1.0679e+00, -1.3201e+00,
         -4.5320e-01,  3.1405e-01,  2.1841e-01,  2.7519e-01,  8.4447e-02,
         -8.1618e-02, -5.4396e-02,  1.8023e-01, -9.5557e-02, -7.4105e-03,
         -4.6668e-04, -8.8619e-02,  1.0778e-01,  6.6400e-02,  1.8641e-01,
          2.5096e-01,  1.6278e-01, -8.6941e-02, -1.3607e-03, -1.8417e-01,
         -1.4810e-01,  5.1553e-02, -2.5387e-03, -8.1282e-02,  3.6368e-01,
         -2.3103e-01, -2.3841e-01, -9.1204e-02, -8.4598e-02,  2.0913e-02,
          2.6642e-01, -4.8661e-02, -3.1364e-01, -1.5013e-01,  6.6398e-02,
         -3.4915e-01,  3.9395e-01,  4.2281e-01,  3.5153e-02,  2.8960e-01,
          1.0137e-01,  7.5861e-02,  1.7434e-01, -1.1309e-01, -3.4748e-01,
         -5.3731e-03, -1.7786e-01,  3.8192e-02, -1.4599e-01,  5.0087e-02,
          8.8397e-03,  1.2039e-01, -1.6523e-01,  3.7626e-01, -1.6972e-02,
          7.1060e-02,  2.0647e-01, -9.7401e-02,  1.2123e-02, -1.0328e-01,
         -9.6845e-03,  3.9306e-02,  5.7133e-01, -1.8909e-01, -4.4681e-01,
          3.0415e-01,  1.7223e+00,  6.9970e-02, -3.3473e-03,  7.0843e-02,
         -1.0232e-01, -5.4744e-01,  6.3347e-01,  3.9725e-01,  3.1499e-01,
         -9.3985e-02,  2.3023e-01, -1.7549e+00,  3.1319e-01,  1.0944e-01,
         -9.3099e-02,  1.2088e-01, -5.5752e-01,  5.4395e-01, -4.1190e-02,
          1.2962e-01,  2.0122e-01,  2.7552e-01, -6.3182e-02,  4.6115e-02,
          4.9038e-02, -2.4094e-01,  4.6135e-02,  6.2239e-02, -2.8203e-01,
         -8.5853e-02,  2.0685e-01, -9.8302e-02,  8.9910e-02,  2.5603e-02,
          3.9657e-02, -4.6265e-02,  3.3721e-01,  9.8439e-02,  2.0474e-01,
          6.2508e-02,  7.0016e-02,  2.1790e-01, -2.2843e-01, -3.5222e-01,
         -2.5778e-02, -4.9969e-01, -3.6254e-02, -1.0819e-01, -3.4758e-01,
          2.8038e-01, -2.1008e-01,  6.0575e-02,  1.2945e-01, -2.3801e-02,
          1.2202e-01, -1.7749e-01,  2.2013e-01, -3.0779e-01, -1.7415e-01,
          2.3457e-01, -1.9124e-01,  1.7329e-01, -3.7757e-02,  7.8178e-02,
         -2.2085e-01, -9.8741e-02,  2.4340e-01,  1.9070e-02,  1.1706e-01,
          4.2336e-03]], device='cuda:0') tensor(0.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
406000 特征值优化 tensor(2.5168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8910e-01,  6.9515e-01, -7.2226e-01, -9.9519e-01,  4.5494e+00,
          1.8284e+00, -9.7673e-01, -1.8702e+00,  7.5304e-01, -4.0564e-01,
         -8.7293e-01, -2.7923e-01, -1.3069e-01, -5.1469e-02,  9.2848e-02,
         -6.1482e-01,  3.2752e-01,  4.0863e-02,  3.0403e-01,  6.9090e-02,
          8.2368e-01,  7.1840e-01,  3.5411e-01,  1.0769e+00, -1.3177e+00,
         -4.6328e-01,  3.1049e-01,  2.2770e-01,  2.7245e-01,  9.1145e-02,
         -7.9611e-02, -5.9088e-02,  1.7528e-01, -9.4436e-02, -9.1988e-03,
          2.4151e-03, -9.0069e-02,  1.1696e-01,  6.2970e-02,  1.7520e-01,
          2.5254e-01,  1.6070e-01, -8.3235e-02,  5.0157e-03, -1.8950e-01,
         -1.4209e-01,  5.7897e-02,  5.4266e-03, -8.8213e-02,  3.5965e-01,
         -2.2620e-01, -2.4021e-01, -9.4410e-02, -9.0409e-02,  2.5312e-02,
          2.5942e-01, -5.1293e-02, -3.0786e-01, -1.5419e-01,  6.7454e-02,
         -3.5705e-01,  3.9737e-01,  4.1581e-01,  2.7620e-02,  2.9229e-01,
          9.5631e-02,  7.4733e-02,  1.7959e-01, -9.7563e-02, -3.4970e-01,
          1.0418e-03, -1.7773e-01,  2.7220e-02, -1.3616e-01,  5.3261e-02,
          3.2353e-03,  1.2575e-01, -1.7839e-01,  3.8374e-01, -2.5126e-02,
          7.3656e-02,  2.0278e-01, -1.0218e-01,  1.5351e-02, -1.0958e-01,
         -1.6283e-02,  5.3590e-02,  5.6576e-01, -1.9561e-01, -4.4786e-01,
          3.0065e-01,  1.7126e+00,  8.8492e-02,  2.3086e-03,  7.2781e-02,
         -1.0228e-01, -5.4436e-01,  6.2273e-01,  3.9074e-01,  3.0225e-01,
         -8.7908e-02,  2.2137e-01, -1.7585e+00,  3.1694e-01,  1.0242e-01,
         -8.2905e-02,  1.2609e-01, -5.5391e-01,  5.4261e-01, -4.2702e-02,
          1.2767e-01,  2.0224e-01,  2.6966e-01, -7.0668e-02,  4.2530e-02,
          4.6988e-02, -2.3707e-01,  4.7523e-02,  6.4376e-02, -2.8923e-01,
         -7.9541e-02,  2.0462e-01, -9.7030e-02,  9.1884e-02,  2.3148e-02,
          4.0044e-02, -4.6196e-02,  3.4589e-01,  9.2509e-02,  2.0106e-01,
          6.2506e-02,  7.1959e-02,  2.1766e-01, -2.3097e-01, -3.4949e-01,
         -1.8001e-02, -5.0905e-01, -2.9491e-02, -1.1072e-01, -3.5068e-01,
          2.8590e-01, -2.1715e-01,  5.7118e-02,  1.1820e-01, -1.7741e-02,
          1.1693e-01, -1.7629e-01,  2.2488e-01, -3.0466e-01, -1.7561e-01,
          2.3980e-01, -2.0165e-01,  1.7547e-01, -3.3084e-02,  7.3379e-02,
         -2.2134e-01, -9.5334e-02,  2.4535e-01,  1.8410e-02,  1.0948e-01,
          1.5296e-03]], device='cuda:0') tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
407000 特征值优化 tensor(2.5202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7542e-01,  6.9876e-01, -7.1003e-01, -9.9296e-01,  4.5654e+00,
          1.8233e+00, -9.7130e-01, -1.8590e+00,  7.4447e-01, -4.0071e-01,
         -8.6802e-01, -2.8384e-01, -1.2994e-01, -4.3705e-02,  8.7987e-02,
         -6.1015e-01,  3.1808e-01,  4.9790e-02,  3.0740e-01,  6.5613e-02,
          8.1877e-01,  7.1781e-01,  3.5863e-01,  1.0800e+00, -1.3224e+00,
         -4.5982e-01,  3.1779e-01,  2.2258e-01,  2.7460e-01,  8.5857e-02,
         -8.2907e-02, -5.7692e-02,  1.7377e-01, -9.2353e-02, -4.2338e-03,
         -1.7819e-03, -8.6561e-02,  1.0466e-01,  6.4091e-02,  1.7339e-01,
          2.5028e-01,  1.6701e-01, -9.0181e-02,  3.6411e-03, -1.8795e-01,
         -1.4630e-01,  4.8081e-02,  6.5295e-03, -8.8181e-02,  3.6307e-01,
         -2.2413e-01, -2.3614e-01, -9.5761e-02, -8.6823e-02,  2.0489e-02,
          2.5682e-01, -6.1816e-02, -3.1782e-01, -1.4443e-01,  6.0095e-02,
         -3.5143e-01,  4.0420e-01,  4.0874e-01,  2.9118e-02,  2.9730e-01,
          9.3385e-02,  7.8282e-02,  1.8153e-01, -9.5556e-02, -3.4843e-01,
          3.7778e-03, -1.7558e-01,  3.7778e-02, -1.4283e-01,  3.8882e-02,
          8.1724e-03,  1.1666e-01, -1.7341e-01,  3.8537e-01, -2.6497e-02,
          7.4615e-02,  2.0344e-01, -9.9285e-02,  1.0423e-02, -1.0640e-01,
         -1.1269e-02,  4.2557e-02,  5.5665e-01, -1.8213e-01, -4.4660e-01,
          2.9383e-01,  1.7172e+00,  8.6147e-02, -9.2128e-03,  6.8064e-02,
         -1.0793e-01, -5.4078e-01,  6.3006e-01,  4.0963e-01,  3.1605e-01,
         -1.0175e-01,  2.2132e-01, -1.7620e+00,  3.1948e-01,  1.0179e-01,
         -8.6264e-02,  1.3221e-01, -5.4731e-01,  5.5377e-01, -4.5378e-02,
          1.2938e-01,  1.9712e-01,  2.7758e-01, -6.5950e-02,  4.2854e-02,
          4.2935e-02, -2.4011e-01,  4.4476e-02,  6.3134e-02, -2.8453e-01,
         -7.4769e-02,  2.0708e-01, -9.4676e-02,  8.9729e-02,  2.3748e-02,
          4.4802e-02, -4.4969e-02,  3.4656e-01,  8.7216e-02,  2.0219e-01,
          6.3034e-02,  6.8423e-02,  2.1664e-01, -2.2715e-01, -3.5324e-01,
         -3.1078e-02, -5.1129e-01, -3.2729e-02, -1.2452e-01, -3.3433e-01,
          2.8230e-01, -2.1454e-01,  4.5067e-02,  1.4017e-01, -5.1268e-03,
          1.1414e-01, -1.7617e-01,  2.2419e-01, -3.0555e-01, -1.7752e-01,
          2.3224e-01, -1.9701e-01,  1.7029e-01, -3.9568e-02,  7.7716e-02,
         -2.1616e-01, -9.2107e-02,  2.3659e-01,  1.4230e-02,  1.0858e-01,
          1.2194e-02]], device='cuda:0') tensor(0.2749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
408000 特征值优化 tensor(2.5052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8391e-01,  6.9865e-01, -7.2169e-01, -9.9686e-01,  4.5477e+00,
          1.8299e+00, -9.6682e-01, -1.8660e+00,  7.5347e-01, -3.9686e-01,
         -8.7353e-01, -2.9567e-01, -1.2857e-01, -4.3777e-02,  1.1138e-01,
         -6.1360e-01,  3.3203e-01,  4.5658e-02,  3.0733e-01,  6.5331e-02,
          8.2263e-01,  7.2736e-01,  3.4961e-01,  1.0723e+00, -1.3069e+00,
         -4.5840e-01,  3.1059e-01,  2.2343e-01,  2.6949e-01,  9.0123e-02,
         -8.1771e-02, -5.6502e-02,  1.6362e-01, -8.8134e-02, -1.1110e-02,
         -5.9048e-03, -9.1655e-02,  1.1252e-01,  6.1213e-02,  1.7440e-01,
          2.5454e-01,  1.6088e-01, -8.0184e-02,  3.4282e-03, -1.8977e-01,
         -1.3728e-01,  5.2664e-02,  6.0090e-03, -8.5716e-02,  3.5851e-01,
         -2.2498e-01, -2.3907e-01, -9.7649e-02, -8.7207e-02,  2.2759e-02,
          2.5882e-01, -5.0864e-02, -3.0742e-01, -1.5051e-01,  7.2827e-02,
         -3.5675e-01,  3.9996e-01,  4.1737e-01,  3.1802e-02,  2.9654e-01,
          9.4414e-02,  7.0337e-02,  1.7798e-01, -1.0217e-01, -3.4550e-01,
          1.3068e-04, -1.8438e-01,  3.7496e-02, -1.4318e-01,  5.4674e-02,
          2.4802e-03,  1.2684e-01, -1.7562e-01,  3.7629e-01, -1.9065e-02,
          7.4166e-02,  2.0283e-01, -9.3477e-02,  2.4831e-03, -1.2269e-01,
         -6.6282e-03,  4.4378e-02,  5.6461e-01, -1.9302e-01, -4.4947e-01,
          2.9892e-01,  1.7144e+00,  9.9361e-02, -5.7392e-04,  7.3501e-02,
         -1.0691e-01, -5.5058e-01,  6.2536e-01,  4.0003e-01,  3.0717e-01,
         -9.0360e-02,  2.2631e-01, -1.7595e+00,  3.1776e-01,  1.0581e-01,
         -8.6737e-02,  1.2679e-01, -5.5031e-01,  5.4403e-01, -4.3565e-02,
          1.2613e-01,  2.0267e-01,  2.7661e-01, -6.1433e-02,  4.1838e-02,
          4.8956e-02, -2.3922e-01,  5.4073e-02,  5.8153e-02, -2.8746e-01,
         -8.9409e-02,  2.0252e-01, -1.0338e-01,  8.9692e-02,  2.3243e-02,
          3.8625e-02, -4.2986e-02,  3.4188e-01,  9.7560e-02,  2.0701e-01,
          6.0584e-02,  6.9777e-02,  2.2390e-01, -2.2723e-01, -3.5163e-01,
         -3.0014e-02, -5.0396e-01, -3.5253e-02, -1.1091e-01, -3.3994e-01,
          2.8051e-01, -2.1276e-01,  5.4527e-02,  1.2832e-01, -1.0285e-02,
          1.2582e-01, -1.7410e-01,  2.1773e-01, -3.1120e-01, -1.7228e-01,
          2.4518e-01, -1.9035e-01,  1.7563e-01, -3.1947e-02,  8.0428e-02,
         -2.2779e-01, -1.0630e-01,  2.4492e-01,  3.2360e-02,  1.0963e-01,
          1.3296e-02]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
409000 特征值优化 tensor(24.1384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2427,  0.0680,  0.5714, -0.5754, -1.0071,  0.0911, -1.2535, -0.8945,
         -0.1785,  0.7840, -1.4303, -1.2246,  0.6301,  0.6871,  0.1723,  0.2360,
          0.6935,  0.8014,  0.5254, -0.1074, -1.0467,  0.4668, -0.3247,  0.6799,
         -1.2075, -0.1450,  0.1354,  0.2582,  0.1023, -0.2292,  0.0551, -0.8432,
          0.0036, -0.8472,  0.3985, -1.6576,  0.1830, -0.4385,  1.0232,  0.0323,
          0.9710,  0.0417, -0.0666,  0.3490, -0.0322,  1.1563, -1.6516,  0.1632,
          0.7529,  0.6876, -0.2222, -0.2840, -0.5525, -0.1232,  1.8327, -1.0427,
          0.7130, -0.2829,  0.2148,  1.5666,  0.7375,  0.4703, -0.2609,  0.7384,
         -0.6361,  1.0977, -0.1455,  0.4668, -0.5240, -0.5111,  1.7658,  0.1178,
          0.0430, -0.0849,  0.4247, -0.1627, -0.6873, -0.3362, -0.2052, -0.0983,
         -0.7914, -0.2447, -0.0840, -0.2006,  0.0465,  0.1665, -0.3328,  0.4586,
         -1.1510,  0.2064,  0.9852, -0.5511, -0.0527, -1.1559,  0.5543, -0.7768,
          0.3478, -0.4669,  0.8279,  0.9444,  0.1881,  0.7828, -1.5023,  0.6609,
          0.5848, -0.1729,  0.0286, -0.2895,  0.9808, -1.2348,  0.3007,  0.5589,
         -0.9904,  0.4587, -0.2043, -0.5597, -0.1173,  0.0606, -1.5629, -0.0236,
          0.4108, -0.1397, -0.1298, -0.3487,  0.1418,  0.1241, -0.1703,  0.0442,
         -0.1829, -0.1850, -0.2031, -0.4179,  0.5289, -0.3788,  0.2600, -0.9671,
          0.6232,  0.4803, -0.4978,  0.3905, -0.1878,  0.0837, -0.0040,  0.1569,
          1.2272, -0.5873, -1.3599,  0.0193, -0.3518, -0.3251, -1.3921,  1.2939,
          1.3475, -0.4025,  0.6089, -0.1679,  0.2673,  0.0528, -0.1844,  0.1095,
         -0.8455]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
410000 特征值优化 tensor(3.7006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3822,  0.6137,  0.2253, -0.8418,  0.1041,  1.1170, -0.9921, -0.7295,
          0.4578,  0.9395, -0.8223, -0.4072,  0.2494,  0.1907,  0.3565,  0.2315,
          0.1277,  0.2732,  0.2737, -0.3624, -0.5830,  0.2677, -0.2517,  0.7559,
         -0.3707,  0.1724,  0.1890,  0.1116,  0.4916, -0.2118,  0.2692, -0.0411,
         -0.2583, -0.2280, -0.2456, -0.4393, -0.1271,  0.0368,  0.2162,  0.2265,
          0.3778,  0.0572, -0.0144,  0.5088,  0.1049,  0.3256, -0.7676, -0.1021,
          0.1421,  0.0125, -0.1913, -0.1537, -0.0114, -0.0101,  0.7677, -0.3391,
          0.2972, -0.0521,  0.3563,  0.5745,  0.2514,  0.3962, -0.0456,  0.1383,
         -0.2021,  0.3036, -0.0284, -0.1858, -0.1716, -0.0601,  0.7321,  0.0045,
          0.0225,  0.0552,  0.2691,  0.1086, -0.1731, -0.0755,  0.2065,  0.0277,
         -0.2141, -0.1403, -0.2317, -0.1650,  0.0451,  0.1096, -0.0436,  0.0422,
         -0.7228, -0.0189,  0.5389, -0.1422, -0.3636, -0.0365, -0.1772, -0.4081,
          0.1352, -0.2007,  0.8290,  0.4524, -0.2262,  0.5687, -0.5770,  0.4930,
          0.2516, -0.2032,  0.1533, -0.0670,  0.2980, -0.5931,  0.1912,  0.0789,
         -0.3582,  0.0837, -0.0333, -0.1606,  0.0497,  0.0759, -0.6181,  0.0429,
         -0.0030, -0.0739, -0.0296, -0.0413, -0.1858,  0.0664, -0.1820, -0.0400,
         -0.1589, -0.0830, -0.1186, -0.1244,  0.0862, -0.2116,  0.2112, -0.2357,
          0.1133,  0.4771, -0.2301,  0.3298,  0.1838, -0.1106, -0.1395, -0.0353,
          0.3281,  0.0171, -0.5267, -0.1278, -0.0683, -0.0348, -0.5322,  0.5694,
          0.3754, -0.1578,  0.2000,  0.1279,  0.0158,  0.1755, -0.0086, -0.0332,
         -0.2379]], device='cuda:0') tensor(0.2207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
411000 特征值优化 tensor(1.4786, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2251e+00,  8.3143e-01, -4.2490e-01, -7.1424e-01,  7.2847e-01,
          1.2980e+00, -1.2364e+00, -1.3735e-01,  9.1887e-01,  6.0700e-01,
         -5.4296e-01,  3.0602e-01,  2.7618e-01,  1.6745e-01,  4.9384e-01,
          5.5580e-01,  3.2832e-01,  2.2699e-01,  4.5406e-01, -1.1098e+00,
         -5.1479e-01,  1.7536e-01, -5.6037e-01,  7.6633e-01, -3.4626e-01,
          1.5593e-01,  4.0884e-02,  1.1646e-02,  3.8322e-01, -1.4764e-01,
          1.5724e-01,  2.0168e-01, -5.7333e-01, -9.6079e-02, -4.3423e-01,
         -2.0000e-01, -6.2879e-02, -1.0312e-03, -6.8634e-02,  3.6986e-01,
          4.1598e-01,  4.4470e-02, -2.4228e-02,  4.3144e-01,  5.1959e-02,
          2.3282e-01, -4.9307e-01, -2.3289e-01,  4.0412e-03,  1.9562e-01,
         -2.1701e-01, -3.3018e-01,  5.4432e-02, -1.0998e-02,  5.3855e-01,
         -1.6039e-01,  5.8242e-01,  2.7628e-01,  4.0691e-01,  4.0189e-01,
         -4.5734e-02,  5.0037e-01,  1.4509e-01, -7.8538e-02, -3.4951e-01,
          8.1005e-02, -1.5193e-03, -3.0215e-01, -2.3692e-01, -6.4539e-02,
          5.0989e-01, -7.7090e-02,  3.2910e-02,  3.0068e-02,  2.5128e-01,
         -7.9267e-02, -2.7548e-01, -9.5595e-02,  1.0615e-01,  4.5297e-02,
         -7.6209e-02, -5.9771e-02, -2.0836e-01,  1.6242e-03,  2.7243e-01,
          1.0173e-01, -9.9035e-02,  1.2939e-01, -2.9657e-01, -2.9408e-01,
          3.5398e-01,  1.8229e-01, -3.9436e-01,  1.6870e-01,  5.0620e-02,
         -2.7776e-01,  1.9964e-01, -1.4335e-01,  3.2610e-01,  1.0568e-01,
         -2.3607e-01,  1.5127e-01, -2.8447e-01,  3.4901e-01,  2.7996e-01,
         -2.2634e-01,  2.8025e-01, -1.7209e-01, -2.7118e-02, -3.5423e-01,
         -6.5781e-03, -2.5274e-02, -2.1058e-01,  5.0892e-02, -1.1392e-01,
         -2.6077e-02, -8.5206e-02,  1.1306e-01, -3.9060e-01, -1.3596e-02,
          2.3832e-02, -1.5281e-01, -1.0053e-01,  5.9138e-02, -2.4620e-01,
          8.3565e-02, -7.9223e-02,  4.0482e-02, -2.3502e-01,  3.0090e-04,
         -1.5597e-01, -7.4709e-02, -2.1791e-02, -1.9138e-01,  3.9420e-01,
          1.4704e-01, -1.1123e-01,  1.7020e-01, -4.3775e-02,  2.4277e-01,
         -6.7696e-02, -1.6368e-01, -2.1594e-02, -1.2422e-01,  1.3591e-01,
          1.8059e-01, -3.9172e-01, -4.5699e-02, -1.1806e-01, -2.7940e-02,
         -2.9771e-01,  3.3954e-01,  6.6788e-02, -2.9199e-01,  2.0959e-01,
          2.2024e-01,  5.0652e-02,  2.3706e-01, -1.2011e-01,  1.5771e-01,
         -1.0448e-01]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
412000 特征值优化 tensor(1.1092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3955e+00,  1.1267e+00, -6.6447e-01, -9.2290e-01,  1.0414e+00,
          1.2664e+00, -1.4009e+00,  3.7035e-01,  7.2425e-01,  4.8954e-01,
         -5.5039e-01,  6.3209e-01,  2.3842e-01,  2.2655e-01,  5.3321e-01,
          7.0871e-01,  3.8646e-01,  2.3763e-01,  4.1476e-01, -1.4686e+00,
         -4.8248e-01,  3.6965e-01, -6.0459e-01,  9.4340e-01, -3.8152e-01,
          3.1307e-01,  1.1670e-01,  6.9328e-02,  5.5455e-01, -1.6705e-01,
          4.1346e-02,  2.4916e-01, -5.6448e-01, -1.0874e-01, -4.4528e-01,
         -1.1215e-01, -1.4365e-02, -1.0700e-01, -1.1441e-01,  4.2560e-01,
          4.4377e-01,  4.2157e-02, -1.2329e-01,  3.5826e-01,  1.9279e-02,
          2.2619e-01, -4.4703e-01, -3.2621e-01, -4.0983e-02,  3.2363e-01,
         -2.1853e-01, -2.5713e-01, -2.0635e-03, -4.4032e-02,  4.6117e-01,
         -1.3053e-01,  6.2957e-01,  1.8129e-01,  3.3441e-01,  3.6762e-01,
         -1.9590e-01,  4.0988e-01,  2.9050e-01, -1.2111e-01, -3.4448e-01,
          7.9780e-02,  1.0215e-01, -2.1737e-01, -2.7471e-01, -4.9043e-02,
          4.2207e-01, -7.3240e-02,  6.3758e-02, -2.3249e-02,  2.3700e-01,
         -1.4438e-01, -2.4843e-01, -1.5204e-01,  1.3325e-01,  9.0640e-02,
         -1.5322e-02,  2.0701e-03, -1.3729e-01,  1.1783e-01,  2.0647e-01,
         -6.9204e-02, -1.5971e-01, -8.2487e-02, -2.9482e-01, -3.3180e-01,
          2.5616e-01,  4.0762e-01, -3.1354e-01,  1.6227e-01,  9.1751e-02,
         -1.6885e-01,  2.7060e-01, -1.4799e-01,  7.4808e-02,  2.6613e-01,
         -2.4871e-01,  1.8177e-01, -3.3950e-01,  3.0988e-01,  2.8013e-01,
         -1.7003e-01,  4.0180e-01, -1.5214e-01, -1.8440e-01, -2.9388e-01,
         -6.9977e-02, -8.5484e-03, -1.5909e-01, -6.0497e-02, -2.1220e-01,
         -7.1474e-02, -1.6245e-02,  8.7693e-02, -3.3333e-01, -1.6250e-02,
         -8.9528e-02, -1.9187e-01, -1.1611e-01,  4.2792e-02, -2.1799e-01,
          3.4147e-02, -4.9609e-02,  5.1673e-02, -2.0057e-01, -4.1003e-02,
         -6.1169e-02, -1.0568e-01, -6.8903e-02, -1.5685e-01,  3.0540e-01,
          4.1900e-01, -1.4829e-01,  3.1799e-02,  9.9994e-02,  8.8065e-02,
          7.5828e-02,  9.1289e-03, -5.8550e-02, -1.3451e-01,  1.1105e-01,
          2.0735e-01, -2.6910e-01, -1.7756e-01, -1.5721e-01,  6.9227e-02,
         -8.6695e-02,  2.5914e-01, -7.0164e-02, -2.2519e-01,  1.2686e-01,
          6.8070e-02,  5.6840e-02,  7.2075e-02, -1.0991e-01,  2.1562e-01,
         -2.5228e-02]], device='cuda:0') tensor(0.2210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
413000 特征值优化 tensor(0.9997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4467e+00,  1.1159e+00, -7.1129e-01, -9.6366e-01,  1.4980e+00,
          1.2827e+00, -1.2446e+00,  5.5866e-01,  5.5821e-01,  3.6164e-01,
         -5.0931e-01,  7.2311e-01,  2.0603e-01,  3.6337e-01,  7.0799e-01,
          7.6059e-01,  4.3783e-01,  1.8971e-01,  3.5593e-01, -1.5797e+00,
         -4.8237e-01,  4.8161e-01, -4.8199e-01,  8.7496e-01, -5.9515e-01,
          4.3701e-01,  1.8095e-01,  5.3690e-02,  5.6691e-01, -1.8049e-01,
          6.5160e-02,  2.6845e-01, -4.1542e-01, -2.3075e-02, -4.6417e-01,
         -3.2969e-02, -2.2820e-03, -9.0971e-02, -8.5447e-02,  4.5719e-01,
          4.5300e-01,  3.5271e-02, -1.1866e-01,  2.9217e-01,  2.7826e-02,
          1.8076e-01, -3.8556e-01, -3.4887e-01,  3.5089e-02,  3.9898e-01,
         -2.3724e-01, -3.1568e-01,  1.1360e-02, -1.0966e-01,  3.9514e-01,
         -3.4250e-02,  5.7749e-01,  8.8976e-02,  2.7002e-01,  3.2412e-01,
         -3.0647e-01,  3.3440e-01,  3.9503e-01, -7.5438e-02, -2.9386e-01,
          8.9466e-02,  1.1671e-01, -2.1259e-01, -2.0212e-01, -4.0821e-02,
          3.7495e-01, -1.9533e-02,  8.8374e-02, -3.8852e-02,  2.6637e-01,
         -2.0241e-01, -2.5374e-01, -2.3475e-01,  2.2697e-01,  1.2273e-01,
         -5.1475e-02, -9.0017e-03, -1.4254e-01,  1.8666e-01,  1.7967e-01,
         -1.6319e-01, -2.0464e-01, -2.5403e-01, -3.4487e-01, -1.7598e-01,
          1.8346e-01,  5.5019e-01, -2.4416e-01,  1.0705e-01,  9.6875e-02,
         -1.5220e-01,  3.6392e-01, -7.8077e-02, -1.1052e-01,  3.6449e-01,
         -2.0027e-01,  1.8817e-01, -3.4975e-01,  2.8094e-01,  2.3313e-01,
         -6.8904e-02,  3.9157e-01, -1.4829e-01, -1.9254e-01, -2.5592e-01,
         -6.7071e-02,  6.2118e-02, -1.8140e-01, -1.1092e-01, -3.1413e-01,
         -1.2367e-01,  2.8148e-02,  1.1362e-01, -2.5160e-01, -2.8609e-02,
         -2.2872e-01, -2.2018e-01, -1.1603e-01,  6.2077e-02, -1.9796e-01,
          1.7575e-02, -1.8930e-02,  2.1992e-02, -1.8077e-01, -2.1396e-02,
         -5.6538e-02, -1.0008e-01, -8.2444e-02, -1.5259e-01,  2.3487e-01,
          4.6196e-01, -4.2635e-02,  7.4433e-02,  1.2882e-01, -9.9020e-02,
          7.4548e-02,  2.2015e-03, -4.7991e-02, -9.0672e-02,  1.5157e-01,
          2.1436e-01, -2.6283e-01, -1.8669e-01, -1.1468e-01,  1.0206e-01,
         -2.6257e-02,  2.4877e-01, -6.7754e-02, -1.6742e-01,  8.9592e-02,
         -2.1289e-02,  4.6179e-02, -3.6056e-02, -1.0846e-01,  2.4232e-01,
         -5.2470e-02]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
414000 特征值优化 tensor(0.9351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3811,  1.1156, -0.7095, -1.0088,  1.6602,  1.4133, -1.2682,  0.6435,
          0.4365,  0.2176, -0.4436,  0.8239,  0.2720,  0.4421,  0.7359,  0.8258,
          0.4771,  0.1480,  0.3832, -1.5549, -0.5005,  0.4571, -0.4834,  0.8019,
         -0.6080,  0.4972,  0.2401, -0.0219,  0.5426, -0.1497,  0.1050,  0.2701,
         -0.3126, -0.0035, -0.4604,  0.0061, -0.0290, -0.1444, -0.0541,  0.4137,
          0.4666,  0.0378, -0.1206,  0.2963, -0.0072,  0.1914, -0.4005, -0.3373,
          0.0710,  0.4184, -0.2738, -0.3925, -0.0644, -0.1657,  0.3729, -0.0149,
          0.5381,  0.0426,  0.2168,  0.3319, -0.3319,  0.2584,  0.4669, -0.1051,
         -0.2691,  0.0840,  0.1382, -0.2015, -0.1744, -0.0294,  0.3469, -0.0229,
          0.1097, -0.0783,  0.2808, -0.2265, -0.2219, -0.2832,  0.2126,  0.1089,
         -0.0353, -0.0495, -0.0947,  0.2213,  0.1355, -0.1967, -0.2091, -0.2716,
         -0.3933, -0.0892,  0.1485,  0.5985, -0.1331,  0.0835,  0.1108, -0.1651,
          0.3618, -0.1387, -0.1511,  0.3897, -0.1863,  0.1971, -0.3575,  0.2616,
          0.1700,  0.0266,  0.4271, -0.1108, -0.1694, -0.2302, -0.0641,  0.0456,
         -0.2043, -0.1067, -0.3173, -0.0726,  0.1088,  0.0915, -0.1290, -0.0434,
         -0.2543, -0.2236, -0.1034,  0.0513, -0.2488, -0.0059,  0.0236,  0.0136,
         -0.1328, -0.0188, -0.0212, -0.0570, -0.0775, -0.1083,  0.2001,  0.4101,
          0.0339,  0.0728,  0.1645, -0.1613,  0.0381, -0.0312, -0.0460, -0.0125,
          0.1434,  0.3183, -0.2783, -0.1571, -0.0871,  0.0990, -0.0451,  0.2252,
         -0.0742, -0.1645,  0.1413, -0.0105,  0.0587, -0.0996, -0.1317,  0.2604,
         -0.0863]], device='cuda:0') tensor(0.2174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
415000 特征值优化 tensor(0.9273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2836e+00,  1.0401e+00, -6.6068e-01, -1.0141e+00,  1.7668e+00,
          1.4981e+00, -1.3337e+00,  6.1780e-01,  3.6116e-01,  1.7545e-01,
         -3.2841e-01,  9.1207e-01,  2.5235e-01,  4.5812e-01,  7.6950e-01,
          8.2028e-01,  3.8113e-01,  3.7931e-02,  3.2422e-01, -1.6109e+00,
         -6.0602e-01,  4.8034e-01, -4.9898e-01,  7.4853e-01, -5.8794e-01,
          5.2663e-01,  2.4462e-01, -3.8712e-02,  5.1422e-01, -1.1547e-01,
          1.6252e-01,  2.3813e-01, -2.6911e-01,  8.8162e-03, -4.0965e-01,
          4.1148e-02, -2.1121e-02, -1.8786e-01, -2.3973e-02,  3.8990e-01,
          4.5468e-01,  3.9542e-02, -1.1872e-01,  3.0505e-01, -3.0732e-02,
          1.8614e-01, -3.9532e-01, -3.1087e-01,  1.2928e-01,  3.0126e-01,
         -3.5005e-01, -4.1144e-01, -9.5111e-02, -1.8685e-01,  3.5092e-01,
         -3.4314e-04,  5.3410e-01, -6.2612e-03,  2.6584e-01,  3.7491e-01,
         -3.6314e-01,  1.8753e-01,  5.3377e-01, -9.9503e-02, -2.6233e-01,
          1.7156e-01,  1.2961e-01, -1.9795e-01, -1.5835e-01, -4.2126e-03,
          2.7979e-01, -1.2403e-02,  1.4146e-01, -1.0260e-01,  2.6740e-01,
         -2.3361e-01, -1.8783e-01, -3.0865e-01,  2.0820e-01,  1.1553e-01,
         -1.3647e-02, -5.0588e-02, -8.3367e-02,  2.3546e-01,  1.1359e-01,
         -1.5513e-01, -1.7462e-01, -3.0731e-01, -3.6626e-01,  4.9881e-03,
          1.3463e-01,  5.4130e-01, -1.2059e-01,  4.1759e-02,  1.1310e-01,
         -1.7661e-01,  3.8025e-01, -1.4276e-01, -1.9130e-01,  4.9021e-01,
         -2.3953e-01,  1.5916e-01, -3.4384e-01,  2.6746e-01,  1.5403e-01,
          1.0640e-01,  3.2898e-01, -3.4143e-02, -1.5782e-01, -1.9520e-01,
         -6.4889e-02, -8.6576e-03, -1.8470e-01, -1.1123e-01, -3.1096e-01,
         -6.7423e-02,  1.4665e-01,  8.7035e-02, -9.4064e-02, -2.4531e-02,
         -2.3806e-01, -2.3761e-01, -1.2812e-01,  6.8922e-02, -2.8913e-01,
         -4.1024e-02,  4.7762e-02,  3.4543e-02, -1.2382e-01, -3.2957e-02,
         -7.8707e-03, -4.8742e-02, -8.4100e-02, -1.0379e-01,  1.8474e-01,
          3.3821e-01,  1.3936e-01,  8.1823e-02,  2.0703e-01, -1.5388e-01,
          3.0513e-02, -7.8889e-02,  1.2446e-02, -1.8730e-02,  1.3647e-01,
          3.6765e-01, -2.9246e-01, -1.4761e-01, -7.1447e-02,  6.5413e-02,
         -2.7848e-02,  2.0124e-01, -6.1811e-02, -1.3709e-01,  1.7410e-01,
         -6.4954e-03,  9.4146e-02, -1.1082e-01, -1.2263e-01,  2.4511e-01,
         -1.0568e-01]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
416000 特征值优化 tensor(0.9241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2464e+00,  8.8621e-01, -5.3586e-01, -1.0154e+00,  1.8782e+00,
          1.5641e+00, -1.3605e+00,  6.5553e-01,  3.1921e-01,  1.4913e-01,
         -2.1881e-01,  9.2075e-01,  2.7683e-01,  4.4047e-01,  7.8824e-01,
          8.0745e-01,  3.5215e-01,  1.5264e-02,  2.9398e-01, -1.6446e+00,
         -6.4450e-01,  4.7487e-01, -4.6454e-01,  7.7591e-01, -6.2803e-01,
          5.1573e-01,  1.9672e-01, -1.1280e-02,  4.8500e-01, -5.8273e-02,
          2.0622e-01,  2.0019e-01, -2.5785e-01,  5.7773e-02, -3.4352e-01,
          6.2932e-02,  1.6048e-02, -2.2194e-01, -5.0813e-03,  3.1857e-01,
          4.4392e-01,  3.5006e-02, -1.2079e-01,  3.0036e-01, -9.5726e-02,
          1.7950e-01, -3.7144e-01, -3.3825e-01,  1.9712e-01,  2.5893e-01,
         -3.6747e-01, -4.2632e-01, -1.5659e-01, -2.0980e-01,  3.3516e-01,
         -3.0119e-02,  4.8034e-01,  6.1734e-03,  2.5326e-01,  3.7043e-01,
         -3.9343e-01,  1.6874e-01,  5.6187e-01, -1.1176e-01, -2.4863e-01,
          2.1017e-01,  1.0227e-01, -2.4008e-01, -1.3506e-01, -3.9854e-03,
          2.5545e-01,  1.7060e-02,  1.4728e-01, -1.2064e-01,  2.6211e-01,
         -2.4649e-01, -2.0053e-01, -3.5981e-01,  1.6567e-01,  1.5049e-01,
          4.1927e-03, -5.4335e-02, -8.5863e-02,  2.0434e-01,  9.1850e-02,
         -1.6992e-01, -1.7136e-01, -3.4285e-01, -2.9982e-01,  4.9264e-02,
          1.5016e-01,  4.8030e-01, -8.1365e-02,  2.3095e-02,  1.1592e-01,
         -2.1155e-01,  4.0294e-01, -9.6278e-02, -1.3574e-01,  5.3056e-01,
         -3.1316e-01,  1.3677e-01, -2.4227e-01,  2.6790e-01,  1.6780e-01,
          2.0889e-01,  3.2122e-01, -1.3322e-02, -1.7969e-01, -1.8112e-01,
         -6.8555e-02, -1.3662e-02, -2.1058e-01, -1.3458e-01, -3.0005e-01,
         -8.4755e-02,  1.7553e-01,  1.0702e-01, -6.7453e-02,  1.9899e-06,
         -2.6756e-01, -2.1528e-01, -9.5897e-02,  4.1364e-02, -3.1926e-01,
         -3.7987e-02,  5.5810e-02,  5.0059e-02, -8.8628e-02, -5.0027e-02,
         -2.7201e-03, -5.1007e-02, -8.5974e-02, -9.3399e-02,  1.7099e-01,
          3.1577e-01,  1.4692e-01,  5.9140e-02,  2.5847e-01, -1.7323e-01,
          3.0519e-02, -1.3249e-01,  2.7529e-02, -1.5223e-02,  1.2639e-01,
          4.2486e-01, -2.9929e-01, -1.4156e-01, -3.5804e-02,  5.6770e-02,
         -1.0025e-02,  1.6017e-01, -6.1250e-02, -1.0391e-01,  1.7249e-01,
         -3.7235e-02,  1.0327e-01, -9.1308e-02, -1.4738e-01,  2.3560e-01,
         -1.2444e-01]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
417000 特征值优化 tensor(0.9195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2676,  0.7462, -0.5041, -1.0129,  1.9545,  1.6651, -1.4281,  0.6887,
          0.2852,  0.1591, -0.1863,  0.9432,  0.2682,  0.3827,  0.7909,  0.7979,
          0.3346,  0.0177,  0.2961, -1.6658, -0.6768,  0.4472, -0.4654,  0.7892,
         -0.6338,  0.5060,  0.2127,  0.0088,  0.4619, -0.0095,  0.2160,  0.1399,
         -0.2619,  0.0817, -0.2790,  0.0462, -0.0089, -0.2691,  0.0139,  0.3016,
          0.4262,  0.0382, -0.1206,  0.3170, -0.1501,  0.1820, -0.3266, -0.3477,
          0.2235,  0.2041, -0.3617, -0.4320, -0.1872, -0.1991,  0.3310, -0.0321,
          0.4764, -0.0057,  0.2426,  0.3781, -0.4252,  0.1517,  0.5693, -0.1036,
         -0.2356,  0.2175,  0.0756, -0.2398, -0.1587, -0.0065,  0.2466,  0.0033,
          0.1511, -0.1077,  0.2438, -0.2183, -0.1852, -0.3769,  0.1649,  0.1586,
          0.0276, -0.0521, -0.0680,  0.1939,  0.0730, -0.1771, -0.1724, -0.3713,
         -0.3196,  0.0166,  0.1387,  0.4305, -0.0533,  0.0349,  0.1182, -0.2139,
          0.4177, -0.0532, -0.0628,  0.5320, -0.3310,  0.1317, -0.2085,  0.2591,
          0.1647,  0.2489,  0.3478,  0.0171, -0.1454, -0.1701, -0.0631, -0.0155,
         -0.2285, -0.1374, -0.2956, -0.0952,  0.1939,  0.1015, -0.0703,  0.0294,
         -0.2839, -0.2133, -0.0817,  0.0444, -0.3587, -0.0377,  0.0543,  0.0527,
         -0.0695, -0.0365,  0.0145, -0.0458, -0.0816, -0.0941,  0.1591,  0.3047,
          0.1529,  0.0761,  0.2528, -0.1573,  0.0280, -0.1283,  0.0502,  0.0039,
          0.1289,  0.4304, -0.3020, -0.1365, -0.0369,  0.0433, -0.0116,  0.1392,
         -0.0484, -0.0952,  0.2020, -0.0135,  0.1113, -0.0962, -0.1467,  0.2362,
         -0.1138]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
418000 特征值优化 tensor(0.9097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2752e+00,  6.4263e-01, -4.7957e-01, -1.0131e+00,  2.0269e+00,
          1.7572e+00, -1.4773e+00,  7.3461e-01,  2.5674e-01,  1.9969e-01,
         -1.6145e-01,  9.7251e-01,  2.5747e-01,  3.0581e-01,  7.6961e-01,
          7.5529e-01,  3.2005e-01,  2.5418e-02,  2.7569e-01, -1.6487e+00,
         -6.6845e-01,  4.1703e-01, -4.6303e-01,  8.1604e-01, -6.4667e-01,
          5.0774e-01,  2.1058e-01,  1.0276e-02,  4.5908e-01,  2.9663e-02,
          2.1708e-01,  1.3217e-01, -2.6952e-01,  1.0054e-01, -2.3138e-01,
          5.0001e-02,  6.1879e-03, -2.8522e-01,  4.3976e-02,  2.8325e-01,
          4.0886e-01,  3.9031e-02, -1.1829e-01,  3.2437e-01, -1.9129e-01,
          1.8838e-01, -3.0696e-01, -3.3804e-01,  2.4160e-01,  1.8238e-01,
         -3.5395e-01, -4.2918e-01, -2.3086e-01, -1.9523e-01,  3.4099e-01,
         -3.5812e-02,  4.8008e-01, -7.6052e-03,  2.1428e-01,  3.7109e-01,
         -4.4150e-01,  1.5480e-01,  5.7715e-01, -9.6177e-02, -2.3019e-01,
          2.3960e-01,  4.7301e-02, -2.4280e-01, -1.6194e-01, -1.2403e-02,
          2.4410e-01, -8.4825e-03,  1.5356e-01, -1.1884e-01,  2.3716e-01,
         -2.1324e-01, -1.8422e-01, -3.9612e-01,  1.7982e-01,  1.5549e-01,
          3.1844e-02, -4.9460e-02, -7.3234e-02,  2.0811e-01,  5.6951e-02,
         -1.6508e-01, -1.4704e-01, -3.8894e-01, -3.2866e-01,  1.9941e-02,
          1.1550e-01,  3.7930e-01, -5.9002e-02,  3.6862e-02,  1.2017e-01,
         -2.1697e-01,  4.2507e-01, -2.6981e-02, -5.2797e-02,  5.4771e-01,
         -3.2783e-01,  1.2820e-01, -1.7538e-01,  2.5232e-01,  1.5913e-01,
          2.6991e-01,  3.5689e-01,  3.8496e-02, -1.2434e-01, -1.6652e-01,
         -5.4965e-02, -1.1268e-02, -2.1306e-01, -1.3796e-01, -2.9525e-01,
         -9.6851e-02,  2.0841e-01,  9.4808e-02, -7.9963e-02,  2.5697e-02,
         -2.8654e-01, -2.1319e-01, -8.5056e-02,  3.7693e-02, -3.6371e-01,
         -3.7307e-02,  4.9930e-02,  3.8489e-02, -5.7180e-02, -4.6329e-02,
          3.0829e-02, -3.4678e-02, -6.8048e-02, -8.0455e-02,  1.4857e-01,
          3.0302e-01,  1.5410e-01,  7.2202e-02,  2.4353e-01, -1.6096e-01,
          4.1533e-02, -1.2587e-01,  5.9344e-02, -3.1638e-04,  1.3319e-01,
          4.3828e-01, -3.0962e-01, -1.5088e-01, -6.3998e-02,  3.5682e-02,
         -1.2752e-02,  1.5240e-01, -3.8625e-02, -9.1532e-02,  2.1893e-01,
          3.8737e-03,  1.2730e-01, -9.7349e-02, -1.4458e-01,  2.4072e-01,
         -1.1401e-01]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
419000 特征值优化 tensor(0.9460, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2530e+00,  5.3989e-01, -4.6303e-01, -1.0150e+00,  2.0941e+00,
          1.8127e+00, -1.4807e+00,  7.4837e-01,  2.5780e-01,  1.8584e-01,
         -1.6847e-01,  9.9272e-01,  2.7454e-01,  2.7656e-01,  7.5931e-01,
          7.4675e-01,  3.1033e-01,  2.9070e-02,  2.6356e-01, -1.6424e+00,
         -6.5671e-01,  3.9941e-01, -4.4579e-01,  8.2687e-01, -6.7092e-01,
          5.1673e-01,  1.8337e-01,  1.0141e-02,  4.6451e-01,  6.0677e-02,
          2.1014e-01,  1.2793e-01, -2.8474e-01,  1.0244e-01, -2.0047e-01,
          5.8657e-02,  1.3306e-02, -2.7822e-01,  4.9435e-02,  2.6950e-01,
          3.9931e-01,  3.8952e-02, -1.2338e-01,  3.2666e-01, -2.1586e-01,
          1.9824e-01, -3.0073e-01, -3.3551e-01,  2.4262e-01,  1.6634e-01,
         -3.4693e-01, -4.3368e-01, -2.6262e-01, -1.8548e-01,  3.5548e-01,
         -3.3795e-02,  4.5939e-01, -1.7371e-02,  1.9880e-01,  3.5660e-01,
         -4.5207e-01,  1.6788e-01,  5.7684e-01, -9.5382e-02, -2.3037e-01,
          2.3571e-01,  4.8934e-02, -2.4565e-01, -1.6953e-01, -2.2704e-02,
          2.4885e-01, -1.2578e-02,  1.6358e-01, -1.1819e-01,  2.3971e-01,
         -2.2256e-01, -2.0363e-01, -4.1196e-01,  1.7114e-01,  1.5842e-01,
          3.2495e-02, -5.0968e-02, -8.4692e-02,  2.0634e-01,  7.3826e-02,
         -1.5997e-01, -1.4326e-01, -4.0648e-01, -3.0444e-01,  2.5292e-02,
          1.1940e-01,  3.6196e-01, -7.0895e-02,  5.0377e-02,  1.2024e-01,
         -2.1845e-01,  4.3930e-01, -5.3364e-03, -3.2795e-02,  5.1598e-01,
         -3.2747e-01,  1.2273e-01, -1.5697e-01,  2.5701e-01,  1.7464e-01,
          2.8759e-01,  3.3896e-01,  4.3506e-02, -1.1237e-01, -1.4869e-01,
         -4.0209e-02, -7.5640e-03, -2.1493e-01, -1.4466e-01, -2.7991e-01,
         -7.8706e-02,  2.0002e-01,  9.0781e-02, -6.1186e-02,  2.6196e-03,
         -2.8812e-01, -1.9241e-01, -1.0107e-01,  2.5756e-02, -3.7701e-01,
         -2.1393e-02,  4.4519e-02,  3.7114e-02, -5.0794e-02, -3.3327e-02,
          4.2195e-02, -2.9185e-02, -5.9533e-02, -6.8591e-02,  1.2637e-01,
          3.2219e-01,  1.3348e-01,  7.3548e-02,  2.5150e-01, -1.8545e-01,
          5.6027e-02, -1.4336e-01,  2.3936e-02,  8.7959e-03,  1.2153e-01,
          4.5473e-01, -3.1673e-01, -1.4789e-01, -6.2782e-02,  2.0697e-02,
         -2.8371e-02,  1.5695e-01, -3.0185e-02, -9.2617e-02,  2.0749e-01,
          2.2750e-03,  1.0828e-01, -7.9387e-02, -1.6285e-01,  2.2547e-01,
         -1.2222e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
420000 特征值优化 tensor(0.9087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2337e+00,  4.7051e-01, -4.7954e-01, -1.0138e+00,  2.1303e+00,
          1.8897e+00, -1.4744e+00,  7.9131e-01,  2.6115e-01,  1.7059e-01,
         -1.7412e-01,  1.0124e+00,  2.5415e-01,  2.4879e-01,  7.8987e-01,
          7.3307e-01,  3.1487e-01,  1.8454e-02,  2.4552e-01, -1.6295e+00,
         -6.3523e-01,  3.8501e-01, -4.4508e-01,  8.3629e-01, -6.6448e-01,
          5.2270e-01,  1.9684e-01,  2.4385e-02,  4.3981e-01,  7.1916e-02,
          2.0868e-01,  1.2891e-01, -2.7684e-01,  9.6316e-02, -1.7183e-01,
          5.7017e-02,  1.9997e-03, -3.0738e-01,  6.5348e-02,  2.7046e-01,
          4.0235e-01,  4.3983e-02, -1.1787e-01,  3.3301e-01, -2.3951e-01,
          1.8888e-01, -2.7774e-01, -3.3909e-01,  2.4758e-01,  1.4611e-01,
         -3.4688e-01, -4.5026e-01, -2.7433e-01, -1.7650e-01,  3.5486e-01,
         -2.5632e-02,  4.7226e-01, -2.9943e-02,  1.9082e-01,  3.5735e-01,
         -4.6506e-01,  1.6387e-01,  5.7799e-01, -7.3390e-02, -2.2001e-01,
          2.4285e-01,  2.3891e-02, -2.3759e-01, -1.8500e-01, -3.1078e-02,
          2.6477e-01, -2.1559e-02,  1.5101e-01, -1.1020e-01,  2.4117e-01,
         -2.0222e-01, -1.9865e-01, -4.2398e-01,  1.9128e-01,  1.6222e-01,
          2.3850e-02, -4.7463e-02, -7.4605e-02,  2.0258e-01,  6.4092e-02,
         -1.7487e-01, -1.4280e-01, -4.1703e-01, -3.0194e-01,  9.8147e-03,
          1.0615e-01,  3.2263e-01, -5.7870e-02,  4.2675e-02,  1.0962e-01,
         -2.1190e-01,  4.4212e-01,  1.6278e-02, -3.2376e-02,  5.3375e-01,
         -3.1662e-01,  1.5045e-01, -1.6408e-01,  2.5659e-01,  1.7744e-01,
          2.8550e-01,  3.3703e-01,  3.4672e-02, -8.2083e-02, -1.3700e-01,
         -3.8883e-02, -8.5589e-03, -2.1323e-01, -1.3167e-01, -2.7914e-01,
         -8.4482e-02,  2.1426e-01,  8.4085e-02, -6.2917e-02,  4.0127e-03,
         -2.9173e-01, -1.9610e-01, -9.5677e-02,  1.1010e-02, -3.7781e-01,
         -1.3804e-02,  4.5564e-02,  3.3123e-02, -3.9216e-02, -3.7191e-02,
          5.5939e-02, -2.5613e-02, -5.9254e-02, -7.4109e-02,  1.1995e-01,
          3.0773e-01,  1.4576e-01,  9.0184e-02,  2.2386e-01, -1.8022e-01,
          6.8447e-02, -1.2491e-01,  3.0521e-02,  4.0177e-03,  1.3507e-01,
          4.6059e-01, -3.1284e-01, -1.5064e-01, -6.6793e-02,  1.1193e-02,
         -5.0709e-02,  1.6192e-01, -3.0098e-02, -8.7379e-02,  2.2673e-01,
          7.2885e-03,  1.2664e-01, -7.1882e-02, -1.4906e-01,  2.1243e-01,
         -1.0718e-01]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
421000 特征值优化 tensor(0.8994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1989e+00,  4.0184e-01, -4.3713e-01, -1.0148e+00,  2.1281e+00,
          1.9356e+00, -1.4648e+00,  8.2489e-01,  2.6440e-01,  1.5198e-01,
         -1.6582e-01,  1.0521e+00,  2.6688e-01,  2.3177e-01,  7.9517e-01,
          7.2583e-01,  3.3422e-01,  9.5947e-04,  2.2648e-01, -1.6653e+00,
         -6.1990e-01,  3.8740e-01, -4.3573e-01,  8.5052e-01, -6.7643e-01,
          5.0424e-01,  1.9185e-01,  1.4117e-02,  4.1208e-01,  8.3189e-02,
          2.0847e-01,  1.1516e-01, -2.8425e-01,  8.3622e-02, -1.4810e-01,
          6.2588e-02, -1.0217e-02, -3.0327e-01,  5.5918e-02,  2.6854e-01,
          4.0280e-01,  3.8359e-02, -1.2720e-01,  3.3912e-01, -2.4690e-01,
          1.6954e-01, -2.6476e-01, -3.4980e-01,  2.2891e-01,  1.3380e-01,
         -3.4693e-01, -4.6917e-01, -2.8724e-01, -1.4852e-01,  3.5262e-01,
         -3.4110e-02,  4.5974e-01, -4.1327e-02,  1.8204e-01,  3.5923e-01,
         -4.6214e-01,  1.8329e-01,  5.7374e-01, -6.3672e-02, -2.1156e-01,
          2.3656e-01,  1.7211e-02, -2.4498e-01, -1.7511e-01, -3.6140e-02,
          2.6088e-01, -2.9242e-02,  1.6378e-01, -1.0795e-01,  2.4226e-01,
         -2.0550e-01, -2.0423e-01, -4.3050e-01,  1.8062e-01,  1.7110e-01,
          2.3897e-02, -4.9017e-02, -6.1472e-02,  2.0542e-01,  6.1922e-02,
         -1.7977e-01, -1.5109e-01, -4.1514e-01, -2.6878e-01,  1.3759e-02,
          1.2062e-01,  2.8566e-01, -3.5657e-02,  3.9636e-02,  1.1087e-01,
         -2.2335e-01,  4.4735e-01,  3.3605e-02, -1.5849e-02,  5.2036e-01,
         -3.3435e-01,  1.6059e-01, -1.4333e-01,  2.4179e-01,  1.6759e-01,
          3.2171e-01,  3.2209e-01,  2.9784e-02, -7.8852e-02, -1.2216e-01,
         -3.3521e-02, -4.2333e-03, -2.2235e-01, -1.3414e-01, -2.7531e-01,
         -7.6988e-02,  2.2848e-01,  8.1030e-02, -5.3772e-02,  1.6443e-02,
         -2.9625e-01, -2.0105e-01, -7.8318e-02, -9.6619e-03, -3.8313e-01,
         -9.6332e-03,  4.3642e-02,  4.2100e-02, -3.8487e-02, -9.0706e-03,
          5.1131e-02, -4.1226e-02, -4.0989e-02, -7.0595e-02,  1.0328e-01,
          3.0883e-01,  1.5257e-01,  9.1174e-02,  2.1891e-01, -1.7709e-01,
          7.2607e-02, -1.2385e-01,  2.7510e-02,  1.4017e-02,  1.6182e-01,
          4.6820e-01, -3.2796e-01, -1.4351e-01, -5.1854e-02,  1.4292e-02,
         -5.2108e-02,  1.5801e-01, -2.9557e-02, -7.9436e-02,  2.2186e-01,
         -1.5004e-02,  9.9172e-02, -7.0516e-02, -1.6819e-01,  2.1097e-01,
         -1.0249e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
422000 特征值优化 tensor(0.9126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1420e+00,  3.8528e-01, -4.4494e-01, -1.0090e+00,  2.1620e+00,
          1.9462e+00, -1.4533e+00,  8.6587e-01,  2.9067e-01,  1.5081e-01,
         -1.1436e-01,  1.0626e+00,  2.8036e-01,  2.0689e-01,  8.2748e-01,
          7.2154e-01,  3.4271e-01, -1.6329e-02,  2.1746e-01, -1.6820e+00,
         -6.1680e-01,  3.9857e-01, -4.2105e-01,  8.5741e-01, -6.7860e-01,
          5.0115e-01,  1.7418e-01,  5.9644e-03,  4.0161e-01,  7.7838e-02,
          2.1576e-01,  1.3053e-01, -2.8228e-01,  9.0517e-02, -1.3204e-01,
          6.7265e-02,  3.8818e-03, -2.9545e-01,  5.6012e-02,  2.4877e-01,
          3.8741e-01,  3.4370e-02, -1.2543e-01,  3.3585e-01, -2.5750e-01,
          2.0295e-01, -2.5445e-01, -3.5055e-01,  2.3219e-01,  1.3647e-01,
         -3.3954e-01, -4.7728e-01, -3.1191e-01, -1.5324e-01,  3.5000e-01,
         -3.9400e-02,  4.4209e-01, -2.3303e-02,  1.7344e-01,  3.6372e-01,
         -4.6057e-01,  2.2537e-01,  5.6687e-01, -7.3977e-02, -2.0270e-01,
          2.2984e-01,  1.1228e-02, -2.3601e-01, -1.5376e-01, -3.8618e-02,
          2.7160e-01, -2.3280e-03,  1.7985e-01, -9.9660e-02,  2.6491e-01,
         -2.1907e-01, -1.9911e-01, -4.3646e-01,  1.8273e-01,  1.8128e-01,
          1.8750e-02, -5.5294e-02, -5.3328e-02,  1.8645e-01,  8.0252e-02,
         -1.5172e-01, -1.5745e-01, -4.2473e-01, -2.4647e-01, -1.3603e-02,
          1.2270e-01,  2.6608e-01, -6.6499e-02,  5.5537e-02,  1.1140e-01,
         -2.2436e-01,  4.5357e-01,  4.8944e-02, -8.4739e-03,  4.9989e-01,
         -3.1613e-01,  1.4317e-01, -1.1039e-01,  2.5496e-01,  1.6600e-01,
          3.2462e-01,  3.3478e-01,  5.3862e-02, -7.7658e-02, -9.2209e-02,
         -4.5779e-02, -5.8854e-03, -2.1588e-01, -1.4572e-01, -2.6673e-01,
         -7.7894e-02,  2.2036e-01,  8.5998e-02, -3.9571e-02,  2.5718e-03,
         -2.7390e-01, -1.9787e-01, -9.0372e-02, -1.4399e-02, -3.6923e-01,
         -3.7589e-03,  5.2678e-02,  4.3129e-02, -3.4279e-02, -1.1494e-02,
          7.2507e-02, -4.1910e-02, -2.9699e-02, -5.5901e-02,  1.1793e-01,
          3.2462e-01,  1.3482e-01,  9.6532e-02,  2.1381e-01, -1.8498e-01,
          7.5717e-02, -1.2175e-01,  1.1807e-02,  1.5216e-02,  1.4882e-01,
          4.5470e-01, -3.2569e-01, -1.5702e-01, -6.8884e-02,  1.8384e-02,
         -4.5482e-02,  1.5020e-01, -4.5486e-02, -6.5457e-02,  2.0894e-01,
         -1.5036e-02,  9.1731e-02, -6.1309e-02, -1.5997e-01,  2.2016e-01,
         -1.2608e-01]], device='cuda:0') tensor(0.2076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
423000 特征值优化 tensor(0.9111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1264e+00,  3.4309e-01, -4.3397e-01, -1.0129e+00,  2.1893e+00,
          1.9567e+00, -1.4608e+00,  8.8325e-01,  3.0253e-01,  1.6214e-01,
         -1.0959e-01,  1.0713e+00,  2.7896e-01,  2.1102e-01,  8.4489e-01,
          7.1461e-01,  3.4377e-01, -1.5589e-02,  2.0307e-01, -1.6749e+00,
         -6.1827e-01,  3.9146e-01, -4.1652e-01,  8.4857e-01, -6.8464e-01,
          5.1364e-01,  1.6891e-01,  5.6437e-04,  4.0442e-01,  8.6304e-02,
          2.1535e-01,  1.2235e-01, -2.8415e-01,  9.1122e-02, -1.3999e-01,
          6.6900e-02,  5.8485e-03, -2.8805e-01,  5.3082e-02,  2.4154e-01,
          3.9169e-01,  3.6314e-02, -1.2317e-01,  3.3794e-01, -2.6627e-01,
          2.1083e-01, -2.4941e-01, -3.5522e-01,  2.2667e-01,  1.4601e-01,
         -3.3703e-01, -4.7794e-01, -3.1433e-01, -1.5415e-01,  3.5291e-01,
         -3.7940e-02,  4.4234e-01, -2.0170e-02,  1.7103e-01,  3.6252e-01,
         -4.5878e-01,  2.2803e-01,  5.6752e-01, -7.1531e-02, -1.8896e-01,
          2.2882e-01,  3.1089e-03, -2.4084e-01, -1.5507e-01, -3.3163e-02,
          2.6150e-01, -4.7140e-03,  1.8688e-01, -1.0672e-01,  2.6894e-01,
         -2.1723e-01, -2.0101e-01, -4.4747e-01,  1.7954e-01,  1.8255e-01,
          1.9220e-02, -5.6563e-02, -5.0900e-02,  1.8505e-01,  7.6764e-02,
         -1.5609e-01, -1.6164e-01, -4.1880e-01, -2.3378e-01, -1.0580e-02,
          1.2047e-01,  2.5880e-01, -7.3060e-02,  4.8054e-02,  1.1330e-01,
         -2.2606e-01,  4.4887e-01,  6.8579e-02, -8.4665e-03,  4.6959e-01,
         -3.2035e-01,  1.3999e-01, -9.7788e-02,  2.5133e-01,  1.6226e-01,
          3.2111e-01,  3.3423e-01,  5.7297e-02, -8.4034e-02, -8.4958e-02,
         -5.0350e-02, -6.8147e-03, -2.1412e-01, -1.4771e-01, -2.6843e-01,
         -7.9417e-02,  2.1844e-01,  8.6514e-02, -3.5424e-02,  7.4594e-04,
         -2.6848e-01, -1.9544e-01, -9.0261e-02, -1.7207e-02, -3.7070e-01,
         -7.5333e-03,  5.5746e-02,  4.1791e-02, -3.0059e-02, -7.8469e-03,
          7.7707e-02, -4.2254e-02, -2.7599e-02, -5.6871e-02,  1.1239e-01,
          3.2400e-01,  1.3119e-01,  9.7970e-02,  2.1882e-01, -1.9013e-01,
          7.7098e-02, -1.2859e-01,  7.0960e-03,  1.7961e-02,  1.5457e-01,
          4.5514e-01, -3.2739e-01, -1.5364e-01, -6.3993e-02,  1.7916e-02,
         -5.7054e-02,  1.4653e-01, -5.3825e-02, -6.7741e-02,  2.1121e-01,
         -2.1488e-02,  8.9259e-02, -5.2433e-02, -1.6260e-01,  2.2052e-01,
         -1.2799e-01]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
424000 特征值优化 tensor(0.9029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1341e+00,  3.0981e-01, -4.2819e-01, -1.0122e+00,  2.1531e+00,
          1.9703e+00, -1.4736e+00,  9.0533e-01,  3.2226e-01,  1.7571e-01,
         -1.0335e-01,  1.0683e+00,  2.6357e-01,  1.9000e-01,  8.4643e-01,
          7.1985e-01,  3.4597e-01, -2.3807e-02,  1.9806e-01, -1.6601e+00,
         -6.1246e-01,  3.9413e-01, -4.1071e-01,  8.4210e-01, -6.8517e-01,
          5.1286e-01,  1.7211e-01,  2.6844e-02,  4.0738e-01,  7.1423e-02,
          2.2356e-01,  1.2145e-01, -2.8014e-01,  9.0969e-02, -1.3691e-01,
          7.1849e-02, -2.6038e-03, -2.8197e-01,  5.1739e-02,  2.4568e-01,
          3.8605e-01,  3.3669e-02, -1.2568e-01,  3.4009e-01, -2.4999e-01,
          2.0332e-01, -2.4420e-01, -3.5313e-01,  2.1723e-01,  1.4617e-01,
         -3.4604e-01, -4.8225e-01, -3.1025e-01, -1.4578e-01,  3.5010e-01,
         -3.4847e-02,  4.4947e-01, -3.4149e-02,  1.7285e-01,  3.5842e-01,
         -4.5700e-01,  2.2052e-01,  5.6923e-01, -6.8164e-02, -1.8125e-01,
          2.1860e-01, -2.8789e-03, -2.4006e-01, -1.6332e-01, -2.5652e-02,
          2.5055e-01, -3.4878e-03,  1.9014e-01, -9.9489e-02,  2.6972e-01,
         -2.1125e-01, -1.9489e-01, -4.5065e-01,  1.9472e-01,  1.8341e-01,
          3.3750e-02, -4.2728e-02, -4.7381e-02,  1.9622e-01,  8.4234e-02,
         -1.5984e-01, -1.6233e-01, -4.1933e-01, -2.2007e-01, -1.0985e-02,
          1.2715e-01,  2.3074e-01, -5.0474e-02,  5.6911e-02,  1.0529e-01,
         -2.2772e-01,  4.5734e-01,  8.6428e-02,  9.1118e-03,  4.5890e-01,
         -3.3941e-01,  1.4965e-01, -8.5929e-02,  2.4096e-01,  1.6330e-01,
          3.1431e-01,  3.2312e-01,  4.5918e-02, -9.4560e-02, -7.5335e-02,
         -5.8512e-02, -6.5886e-03, -2.1425e-01, -1.4314e-01, -2.8140e-01,
         -8.9352e-02,  2.2778e-01,  7.3262e-02, -4.8092e-02, -7.3220e-03,
         -2.7465e-01, -1.8643e-01, -8.8648e-02, -1.1159e-02, -3.6180e-01,
         -1.3873e-02,  6.7057e-02,  4.7778e-02, -2.4684e-02, -7.2304e-03,
          7.8457e-02, -4.0058e-02, -2.9600e-02, -6.2475e-02,  1.2029e-01,
          3.3594e-01,  1.2315e-01,  9.8388e-02,  2.1649e-01, -1.7554e-01,
          8.0218e-02, -1.2652e-01, -1.0103e-03,  2.5099e-02,  1.6300e-01,
          4.7043e-01, -3.3264e-01, -1.4692e-01, -6.3071e-02,  1.0464e-02,
         -5.6501e-02,  1.5942e-01, -5.3136e-02, -7.7226e-02,  2.1909e-01,
         -8.1867e-03,  9.3733e-02, -6.8302e-02, -1.6234e-01,  2.2474e-01,
         -1.1682e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
425000 特征值优化 tensor(0.9013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1171e+00,  3.0413e-01, -4.1507e-01, -1.0130e+00,  2.1526e+00,
          1.9679e+00, -1.4594e+00,  9.1373e-01,  3.1549e-01,  1.8907e-01,
         -1.0552e-01,  1.0768e+00,  2.8113e-01,  1.8252e-01,  8.3806e-01,
          7.1188e-01,  3.5010e-01, -1.9855e-02,  1.8847e-01, -1.6657e+00,
         -6.1080e-01,  3.7947e-01, -4.0879e-01,  8.2878e-01, -6.7948e-01,
          5.2553e-01,  1.6151e-01,  3.9907e-04,  4.0783e-01,  7.1975e-02,
          2.2626e-01,  1.3124e-01, -2.9211e-01,  8.8492e-02, -1.5202e-01,
          6.4719e-02,  1.6232e-02, -2.6340e-01,  5.2203e-02,  2.3589e-01,
          3.8080e-01,  3.5049e-02, -1.2878e-01,  3.4041e-01, -2.4941e-01,
          2.2690e-01, -2.4948e-01, -3.5748e-01,  2.1019e-01,  1.5609e-01,
         -3.3959e-01, -4.6801e-01, -3.1892e-01, -1.4660e-01,  3.5376e-01,
         -3.2306e-02,  4.3187e-01, -2.6592e-02,  1.7259e-01,  3.6343e-01,
         -4.5549e-01,  2.4540e-01,  5.6583e-01, -7.8675e-02, -1.7151e-01,
          2.2196e-01,  2.6775e-03, -2.4262e-01, -1.5502e-01, -2.5665e-02,
          2.4334e-01,  3.9132e-04,  1.9906e-01, -1.0377e-01,  2.8472e-01,
         -2.2015e-01, -1.9581e-01, -4.5444e-01,  1.8199e-01,  1.8593e-01,
          2.0676e-02, -4.9601e-02, -5.8971e-02,  1.9309e-01,  8.6920e-02,
         -1.4905e-01, -1.6786e-01, -4.0328e-01, -1.8808e-01, -6.5417e-03,
          1.2202e-01,  2.0767e-01, -7.3990e-02,  6.4091e-02,  1.1002e-01,
         -2.2745e-01,  4.4083e-01,  1.0501e-01,  8.9471e-03,  4.4405e-01,
         -3.3825e-01,  1.3778e-01, -7.0524e-02,  2.5302e-01,  1.5949e-01,
          3.2708e-01,  3.3296e-01,  6.5508e-02, -8.7082e-02, -7.1162e-02,
         -6.1139e-02, -7.3453e-03, -2.1977e-01, -1.4987e-01, -2.7456e-01,
         -8.5646e-02,  2.1924e-01,  8.8764e-02, -3.4974e-02, -9.9119e-03,
         -2.7372e-01, -1.9521e-01, -9.9868e-02, -1.8085e-02, -3.6998e-01,
         -1.4179e-02,  7.7031e-02,  4.1518e-02, -2.3461e-02, -4.4821e-03,
          7.7090e-02, -4.1134e-02, -3.2973e-02, -5.7654e-02,  1.1681e-01,
          3.3545e-01,  1.1244e-01,  9.2101e-02,  2.2559e-01, -2.0150e-01,
          9.7659e-02, -1.4343e-01,  8.4959e-03,  2.5924e-02,  1.4972e-01,
          4.6339e-01, -3.2423e-01, -1.4583e-01, -6.7633e-02,  1.1188e-02,
         -6.1703e-02,  1.5108e-01, -6.7099e-02, -7.2223e-02,  2.1520e-01,
         -1.1933e-02,  8.7898e-02, -5.8964e-02, -1.5515e-01,  2.2231e-01,
         -1.3018e-01]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
426000 特征值优化 tensor(0.8859, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1136e+00,  2.9988e-01, -4.2317e-01, -1.0124e+00,  2.1358e+00,
          1.9931e+00, -1.4449e+00,  9.2952e-01,  3.2111e-01,  2.0613e-01,
         -9.4499e-02,  1.0792e+00,  2.5964e-01,  1.5931e-01,  8.4986e-01,
          6.8845e-01,  3.4256e-01, -2.9035e-02,  1.5919e-01, -1.6489e+00,
         -6.0545e-01,  3.7351e-01, -4.0848e-01,  8.2370e-01, -6.8483e-01,
          5.2887e-01,  1.8449e-01,  1.0603e-03,  4.2171e-01,  6.8272e-02,
          2.3107e-01,  1.2503e-01, -2.9201e-01,  7.8580e-02, -1.5283e-01,
          5.9282e-02,  1.1837e-02, -2.7343e-01,  5.3240e-02,  2.4533e-01,
          3.7966e-01,  3.8827e-02, -1.3132e-01,  3.4248e-01, -2.4003e-01,
          2.4202e-01, -2.2361e-01, -3.6459e-01,  2.0844e-01,  1.4485e-01,
         -3.4428e-01, -4.6927e-01, -3.1674e-01, -1.5568e-01,  3.5005e-01,
         -3.5523e-02,  4.4308e-01, -4.6913e-02,  1.7653e-01,  3.6767e-01,
         -4.6050e-01,  2.5081e-01,  5.5549e-01, -7.2832e-02, -1.5886e-01,
          2.2765e-01, -1.6804e-02, -2.3476e-01, -1.5007e-01, -1.5308e-02,
          2.5082e-01, -5.0435e-03,  1.8987e-01, -9.7770e-02,  2.7648e-01,
         -2.1661e-01, -2.1419e-01, -4.8880e-01,  1.9309e-01,  1.7900e-01,
          1.7451e-02, -4.6682e-02, -5.1179e-02,  2.0243e-01,  8.1538e-02,
         -1.6500e-01, -1.5784e-01, -4.0751e-01, -1.5783e-01, -2.2064e-02,
          1.2408e-01,  2.1097e-01, -7.5391e-02,  3.8546e-02,  9.9764e-02,
         -2.2698e-01,  4.4141e-01,  1.2134e-01, -3.4528e-03,  4.5205e-01,
         -3.7221e-01,  1.4012e-01, -5.9105e-02,  2.3885e-01,  1.3554e-01,
          3.1037e-01,  3.5046e-01,  6.1625e-02, -8.9081e-02, -5.6998e-02,
         -7.3519e-02,  3.6922e-03, -1.9842e-01, -1.4258e-01, -2.9728e-01,
         -1.0057e-01,  2.2299e-01,  8.3349e-02, -4.8085e-02, -1.1251e-02,
         -2.6954e-01, -2.1448e-01, -1.0953e-01, -1.0916e-02, -3.6745e-01,
         -1.7028e-02,  7.4288e-02,  3.4395e-02, -1.6914e-02, -7.7467e-03,
          7.8092e-02, -3.7990e-02, -3.1061e-02, -5.6151e-02,  1.2432e-01,
          3.1806e-01,  1.2122e-01,  1.0978e-01,  1.7982e-01, -1.9018e-01,
          8.4494e-02, -1.3830e-01,  6.6741e-03,  1.1049e-02,  1.6859e-01,
          4.5790e-01, -3.1872e-01, -1.4723e-01, -7.0470e-02,  1.6818e-02,
         -8.1283e-02,  1.4589e-01, -8.5230e-02, -8.6446e-02,  2.2242e-01,
         -4.1751e-03,  9.7174e-02, -7.0265e-02, -1.5378e-01,  2.2241e-01,
         -1.2016e-01]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
427000 特征值优化 tensor(0.8909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0896e+00,  2.5842e-01, -3.8782e-01, -1.0117e+00,  2.1372e+00,
          1.9818e+00, -1.4579e+00,  9.4979e-01,  3.3883e-01,  2.1504e-01,
         -8.8265e-02,  1.0895e+00,  2.6466e-01,  1.5101e-01,  8.2963e-01,
          7.2426e-01,  3.7322e-01, -1.4787e-02,  1.6106e-01, -1.6353e+00,
         -5.9910e-01,  3.7852e-01, -3.9586e-01,  8.1298e-01, -7.0766e-01,
          5.4906e-01,  1.6178e-01, -1.0359e-02,  4.2111e-01,  6.4147e-02,
          2.2961e-01,  1.3965e-01, -2.9649e-01,  8.5265e-02, -1.5279e-01,
          6.8995e-02,  6.6384e-03, -2.5299e-01,  4.6832e-02,  2.3305e-01,
          3.7819e-01,  3.3803e-02, -1.3005e-01,  3.5065e-01, -2.4478e-01,
          2.4210e-01, -2.3769e-01, -3.6049e-01,  1.8780e-01,  1.6263e-01,
         -3.4186e-01, -4.7099e-01, -3.0339e-01, -1.4177e-01,  3.5539e-01,
         -3.5417e-02,  4.2438e-01, -2.0132e-02,  1.6879e-01,  3.6326e-01,
         -4.5935e-01,  2.5487e-01,  5.6056e-01, -8.4271e-02, -1.4459e-01,
          2.2366e-01,  4.6259e-03, -2.5645e-01, -1.5604e-01, -8.9193e-03,
          2.2866e-01,  4.9274e-03,  2.0394e-01, -1.1113e-01,  2.8956e-01,
         -2.2844e-01, -2.1456e-01, -4.6299e-01,  1.8207e-01,  1.8416e-01,
          1.2611e-02, -4.8358e-02, -6.7316e-02,  1.8712e-01,  8.6426e-02,
         -1.5306e-01, -1.7113e-01, -3.9541e-01, -1.5772e-01, -8.7836e-03,
          1.3502e-01,  2.0580e-01, -6.1027e-02,  6.1449e-02,  1.1121e-01,
         -2.3231e-01,  4.5111e-01,  1.3489e-01,  2.7267e-02,  4.4061e-01,
         -3.4122e-01,  1.3498e-01, -6.3463e-02,  2.4350e-01,  1.5822e-01,
          3.1391e-01,  3.4705e-01,  5.5903e-02, -9.2498e-02, -6.2511e-02,
         -8.0763e-02, -1.2002e-05, -2.2005e-01, -1.5630e-01, -2.8565e-01,
         -9.7607e-02,  2.1743e-01,  9.1403e-02, -3.4610e-02, -1.6151e-02,
         -2.7104e-01, -1.8644e-01, -8.2327e-02, -1.4805e-02, -3.6997e-01,
         -2.8339e-02,  8.3028e-02,  4.2424e-02, -1.5730e-02, -4.4730e-03,
          7.5104e-02, -5.4588e-02, -3.4065e-02, -5.9399e-02,  1.0783e-01,
          3.4889e-01,  9.6376e-02,  9.9889e-02,  2.2109e-01, -2.1011e-01,
          9.1984e-02, -1.5735e-01, -1.1174e-02,  3.5270e-02,  1.5220e-01,
          4.6945e-01, -3.2932e-01, -1.3995e-01, -5.3792e-02,  1.9783e-02,
         -6.5528e-02,  1.4072e-01, -9.4213e-02, -8.2077e-02,  1.9475e-01,
         -2.8105e-02,  8.1360e-02, -5.7561e-02, -1.4974e-01,  2.3214e-01,
         -1.2451e-01]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
428000 特征值优化 tensor(0.8873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0988e+00,  2.6141e-01, -3.8559e-01, -1.0125e+00,  2.0901e+00,
          1.9940e+00, -1.4650e+00,  9.5595e-01,  3.4755e-01,  2.0433e-01,
         -9.0257e-02,  1.0978e+00,  2.6533e-01,  1.5794e-01,  8.3025e-01,
          6.9863e-01,  3.3903e-01, -2.1667e-02,  1.5392e-01, -1.6300e+00,
         -5.8866e-01,  3.7473e-01, -4.0094e-01,  8.1324e-01, -6.8640e-01,
          5.5669e-01,  1.6495e-01,  1.9616e-03,  3.9988e-01,  5.8327e-02,
          2.3721e-01,  1.3131e-01, -3.0819e-01,  8.1861e-02, -1.5545e-01,
          6.9823e-02,  1.3055e-02, -2.6538e-01,  5.1071e-02,  2.5294e-01,
          3.7587e-01,  3.7303e-02, -1.2929e-01,  3.6567e-01, -2.3595e-01,
          2.4528e-01, -2.2328e-01, -3.5278e-01,  1.9774e-01,  1.6605e-01,
         -3.5134e-01, -4.5483e-01, -3.1155e-01, -1.4033e-01,  3.6224e-01,
         -2.9896e-02,  4.4904e-01, -4.5137e-02,  1.6194e-01,  3.6606e-01,
         -4.6517e-01,  2.5231e-01,  5.5957e-01, -6.9588e-02, -1.5146e-01,
          1.9190e-01, -1.9612e-02, -2.4817e-01, -1.4684e-01,  7.4600e-04,
          2.2869e-01, -1.1909e-03,  1.9649e-01, -9.7010e-02,  2.9672e-01,
         -2.0179e-01, -1.9177e-01, -4.7896e-01,  2.0968e-01,  1.8413e-01,
          3.3351e-02, -3.8134e-02, -4.2535e-02,  1.9692e-01,  7.7964e-02,
         -1.8148e-01, -1.6200e-01, -3.8688e-01, -1.4429e-01, -3.0719e-02,
          1.2796e-01,  1.8296e-01, -5.8604e-02,  5.4857e-02,  1.0801e-01,
         -2.3366e-01,  4.3317e-01,  1.6341e-01,  3.8089e-02,  4.3302e-01,
         -3.5409e-01,  1.2812e-01, -4.6959e-02,  2.2388e-01,  1.5681e-01,
          3.0611e-01,  3.4377e-01,  6.5068e-02, -9.1489e-02, -5.2353e-02,
         -8.4894e-02,  5.9035e-03, -2.0426e-01, -1.4804e-01, -2.9886e-01,
         -8.7086e-02,  2.2485e-01,  8.5209e-02, -4.6319e-02, -1.8034e-02,
         -2.7503e-01, -2.0325e-01, -1.1362e-01, -1.2567e-02, -3.7279e-01,
         -2.3431e-02,  7.6226e-02,  4.2119e-02, -1.0213e-02, -3.6265e-03,
          8.6508e-02, -3.6165e-02, -2.8553e-02, -5.8508e-02,  1.2017e-01,
          3.3773e-01,  1.0584e-01,  1.2781e-01,  2.0502e-01, -1.8709e-01,
          9.7804e-02, -1.3865e-01,  5.7607e-03,  3.3120e-02,  1.7883e-01,
          4.6621e-01, -3.1222e-01, -1.3662e-01, -5.0883e-02,  3.6655e-03,
         -7.2645e-02,  1.4955e-01, -7.5757e-02, -8.4757e-02,  2.2626e-01,
         -2.6004e-02,  1.0132e-01, -4.9929e-02, -1.3692e-01,  2.3177e-01,
         -1.1979e-01]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
429000 特征值优化 tensor(0.8919, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1096e+00,  2.2870e-01, -3.6514e-01, -1.0131e+00,  2.0884e+00,
          1.9707e+00, -1.4675e+00,  9.5188e-01,  3.5758e-01,  2.0045e-01,
         -8.6143e-02,  1.1115e+00,  2.5826e-01,  1.4062e-01,  8.4952e-01,
          7.1538e-01,  3.2547e-01, -1.9507e-02,  1.5388e-01, -1.6374e+00,
         -5.9916e-01,  3.5918e-01, -3.9206e-01,  7.9794e-01, -7.0900e-01,
          5.7265e-01,  1.4862e-01, -6.7964e-04,  4.1358e-01,  6.8950e-02,
          2.4113e-01,  1.2769e-01, -3.0323e-01,  8.4285e-02, -1.6695e-01,
          7.2741e-02,  1.6590e-02, -2.3530e-01,  4.0926e-02,  2.3384e-01,
          3.7654e-01,  3.6595e-02, -1.2929e-01,  3.5800e-01, -2.4116e-01,
          2.4113e-01, -2.3652e-01, -3.5232e-01,  1.9349e-01,  1.9054e-01,
         -3.4468e-01, -4.5873e-01, -3.0575e-01, -1.4566e-01,  3.6241e-01,
         -3.8521e-02,  4.3161e-01, -1.5552e-02,  1.5223e-01,  3.5910e-01,
         -4.6623e-01,  2.4898e-01,  5.6538e-01, -8.0473e-02, -1.3808e-01,
          2.1090e-01, -3.1449e-03, -2.5167e-01, -1.5574e-01,  2.7682e-03,
          2.0785e-01,  7.8378e-03,  2.1006e-01, -1.1180e-01,  2.9101e-01,
         -2.1972e-01, -2.0693e-01, -4.7707e-01,  1.9343e-01,  1.8346e-01,
          1.5139e-02, -4.6877e-02, -5.8843e-02,  1.8207e-01,  8.6914e-02,
         -1.6841e-01, -1.5976e-01, -3.8826e-01, -1.2652e-01, -9.6719e-03,
          1.4141e-01,  1.6715e-01, -5.7081e-02,  5.9957e-02,  1.0542e-01,
         -2.3992e-01,  4.3854e-01,  1.5079e-01,  1.0818e-02,  4.4762e-01,
         -3.4002e-01,  1.3879e-01, -3.9291e-02,  2.3405e-01,  1.6646e-01,
          3.0735e-01,  3.5047e-01,  5.5261e-02, -8.4453e-02, -5.9056e-02,
         -7.6992e-02,  2.5067e-03, -2.0816e-01, -1.5708e-01, -2.9318e-01,
         -9.6204e-02,  2.1698e-01,  9.2584e-02, -3.1926e-02, -6.7528e-03,
         -2.6328e-01, -1.8696e-01, -1.0791e-01, -1.0073e-02, -3.6028e-01,
         -3.5669e-02,  8.6973e-02,  4.9295e-02, -1.6450e-02, -7.8495e-04,
          8.8619e-02, -5.0989e-02, -3.4631e-02, -5.9626e-02,  1.1205e-01,
          3.4669e-01,  1.0514e-01,  1.0596e-01,  2.1563e-01, -2.1284e-01,
          9.0670e-02, -1.6330e-01, -1.8213e-02,  2.9992e-02,  1.6033e-01,
          4.6503e-01, -3.2357e-01, -1.2697e-01, -4.9023e-02,  2.4348e-02,
         -6.9978e-02,  1.3704e-01, -9.0686e-02, -9.6445e-02,  2.0492e-01,
         -3.6018e-02,  8.0756e-02, -5.7130e-02, -1.3783e-01,  2.3735e-01,
         -1.2129e-01]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
430000 特征值优化 tensor(0.9302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1035e+00,  2.1396e-01, -3.5923e-01, -1.0119e+00,  2.0631e+00,
          1.9874e+00, -1.4593e+00,  9.7605e-01,  3.7724e-01,  2.0610e-01,
         -7.9371e-02,  1.1171e+00,  2.6302e-01,  1.5011e-01,  8.4754e-01,
          7.0664e-01,  3.5586e-01, -2.3342e-02,  1.5240e-01, -1.6331e+00,
         -5.7735e-01,  3.7007e-01, -3.9046e-01,  7.9636e-01, -6.8634e-01,
          5.6604e-01,  1.5359e-01,  3.2429e-03,  4.0607e-01,  7.1633e-02,
          2.4394e-01,  1.2120e-01, -3.0663e-01,  8.8076e-02, -1.6393e-01,
          7.2673e-02,  3.5708e-03, -2.4579e-01,  4.4674e-02,  2.4592e-01,
          3.7888e-01,  3.5631e-02, -1.3085e-01,  3.5695e-01, -2.4481e-01,
          2.3140e-01, -2.2074e-01, -3.5978e-01,  1.8594e-01,  1.8367e-01,
         -3.4827e-01, -4.5631e-01, -3.0967e-01, -1.4118e-01,  3.5060e-01,
         -3.1231e-02,  4.4588e-01, -2.9072e-02,  1.5175e-01,  3.6106e-01,
         -4.6552e-01,  2.3508e-01,  5.6077e-01, -6.8120e-02, -1.3482e-01,
          1.9493e-01, -2.6348e-02, -2.6342e-01, -1.5281e-01,  6.6804e-03,
          2.0909e-01,  3.1948e-03,  2.0691e-01, -1.0060e-01,  2.9360e-01,
         -2.0004e-01, -1.9825e-01, -4.8276e-01,  1.9985e-01,  1.7793e-01,
          2.7816e-02, -4.3751e-02, -5.1220e-02,  1.8639e-01,  7.8126e-02,
         -1.8619e-01, -1.7332e-01, -3.8972e-01, -1.1993e-01, -1.7773e-02,
          1.3337e-01,  1.6447e-01, -7.4071e-02,  5.1279e-02,  1.0708e-01,
         -2.4191e-01,  4.3476e-01,  1.5653e-01,  2.9957e-02,  4.2545e-01,
         -3.5815e-01,  1.4373e-01, -2.4433e-02,  2.1444e-01,  1.5769e-01,
          3.0997e-01,  3.3792e-01,  5.4149e-02, -9.7422e-02, -5.2529e-02,
         -8.2650e-02,  6.7386e-03, -2.0852e-01, -1.5663e-01, -2.9787e-01,
         -1.1845e-01,  2.1371e-01,  8.7587e-02, -5.8627e-02,  2.8641e-03,
         -2.6685e-01, -1.9130e-01, -8.1183e-02, -1.8334e-02, -3.6284e-01,
         -3.4083e-02,  8.7978e-02,  4.0572e-02, -1.4881e-02,  2.8285e-03,
          8.8457e-02, -4.5816e-02, -3.4113e-02, -5.9335e-02,  1.1935e-01,
          3.5034e-01,  1.1076e-01,  1.1560e-01,  2.0224e-01, -1.9516e-01,
          1.0321e-01, -1.5154e-01, -1.4849e-03,  4.0301e-02,  1.7687e-01,
          4.6863e-01, -3.1832e-01, -1.4238e-01, -5.9687e-02,  1.0187e-02,
         -7.1304e-02,  1.4170e-01, -8.7487e-02, -8.0339e-02,  2.1549e-01,
         -3.1877e-02,  9.7216e-02, -5.2226e-02, -1.3536e-01,  2.3946e-01,
         -1.2203e-01]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
431000 特征值优化 tensor(0.8962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1046,  0.1960, -0.3603, -1.0134,  2.0624,  1.9774, -1.4676,  0.9778,
          0.3796,  0.1784, -0.0669,  1.1413,  0.2686,  0.1338,  0.8373,  0.7097,
          0.3329, -0.0158,  0.1509, -1.6380, -0.5786,  0.3601, -0.3742,  0.7820,
         -0.7062,  0.5777,  0.1380, -0.0069,  0.4203,  0.0892,  0.2465,  0.1107,
         -0.3102,  0.0810, -0.1650,  0.0679,  0.0152, -0.2364,  0.0442,  0.2301,
          0.3762,  0.0361, -0.1292,  0.3621, -0.2591,  0.2350, -0.2223, -0.3642,
          0.1866,  0.1989, -0.3444, -0.4517, -0.3149, -0.1459,  0.3523, -0.0323,
          0.4347, -0.0122,  0.1527,  0.3598, -0.4696,  0.2501,  0.5653, -0.0708,
         -0.1267,  0.1983, -0.0160, -0.2609, -0.1535,  0.0065,  0.1962,  0.0112,
          0.2139, -0.1126,  0.2947, -0.2171, -0.2079, -0.4824,  0.1874,  0.1851,
          0.0176, -0.0518, -0.0588,  0.1847,  0.0904, -0.1633, -0.1718, -0.3810,
         -0.0956, -0.0071,  0.1267,  0.1562, -0.0797,  0.0519,  0.1067, -0.2400,
          0.4318,  0.1522,  0.0232,  0.4228, -0.3506,  0.1446, -0.0222,  0.2294,
          0.1639,  0.3148,  0.3453,  0.0663, -0.0848, -0.0532, -0.0829,  0.0066,
         -0.2067, -0.1619, -0.2929, -0.1148,  0.2134,  0.0990, -0.0462, -0.0034,
         -0.2637, -0.1766, -0.0991, -0.0203, -0.3655, -0.0450,  0.0934,  0.0454,
         -0.0152,  0.0045,  0.0828, -0.0562, -0.0335, -0.0591,  0.1108,  0.3477,
          0.1080,  0.1106,  0.2221, -0.2143,  0.1129, -0.1682, -0.0093,  0.0353,
          0.1685,  0.4671, -0.3177, -0.1340, -0.0537,  0.0176, -0.0748,  0.1343,
         -0.0967, -0.0803,  0.2063, -0.0374,  0.0880, -0.0523, -0.1416,  0.2413,
         -0.1310]], device='cuda:0') tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
432000 特征值优化 tensor(0.8881, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1382e+00,  1.6777e-01, -3.4950e-01, -1.0122e+00,  2.0380e+00,
          2.0120e+00, -1.4668e+00,  1.0063e+00,  3.8782e-01,  1.7968e-01,
         -7.5225e-02,  1.1611e+00,  2.5873e-01,  1.4090e-01,  8.3521e-01,
          7.0252e-01,  3.4877e-01, -8.7612e-03,  1.4711e-01, -1.6218e+00,
         -5.6786e-01,  3.5802e-01, -3.7670e-01,  7.8756e-01, -6.9926e-01,
          5.7445e-01,  1.4989e-01,  1.3081e-02,  3.9797e-01,  8.5328e-02,
          2.4922e-01,  1.0203e-01, -2.9774e-01,  8.3571e-02, -1.5527e-01,
          7.4168e-02, -5.1312e-03, -2.4137e-01,  4.6491e-02,  2.4590e-01,
          3.8142e-01,  3.8234e-02, -1.3246e-01,  3.5734e-01, -2.6301e-01,
          2.1307e-01, -2.1209e-01, -3.6412e-01,  1.7077e-01,  1.8174e-01,
         -3.5190e-01, -4.4934e-01, -3.0794e-01, -1.4761e-01,  3.5186e-01,
         -2.6819e-02,  4.4744e-01, -3.2039e-02,  1.4265e-01,  3.6630e-01,
         -4.6407e-01,  2.2673e-01,  5.7188e-01, -5.7831e-02, -1.2566e-01,
          1.7341e-01, -2.6843e-02, -2.7150e-01, -1.5368e-01,  1.4790e-02,
          1.9490e-01,  3.5036e-03,  2.1515e-01, -1.0204e-01,  2.9309e-01,
         -1.9700e-01, -2.0182e-01, -4.9356e-01,  2.0413e-01,  1.7909e-01,
          3.5767e-02, -4.0993e-02, -5.2260e-02,  1.9804e-01,  8.0956e-02,
         -1.8947e-01, -1.7502e-01, -3.8063e-01, -1.1360e-01, -5.3385e-03,
          1.2519e-01,  1.5711e-01, -6.4173e-02,  4.5217e-02,  1.0635e-01,
         -2.4326e-01,  4.3945e-01,  1.6667e-01,  4.0662e-02,  4.0379e-01,
         -3.7106e-01,  1.4633e-01, -1.7146e-02,  2.0207e-01,  1.6168e-01,
          3.0925e-01,  3.4609e-01,  5.7011e-02, -8.9495e-02, -4.5743e-02,
         -8.5667e-02,  8.6622e-03, -1.9208e-01, -1.5833e-01, -3.1128e-01,
         -1.2875e-01,  2.1585e-01,  8.2921e-02, -6.6368e-02,  1.8346e-02,
         -2.6866e-01, -1.8801e-01, -7.5496e-02, -2.0409e-02, -3.6380e-01,
         -4.1174e-02,  9.0852e-02,  4.8558e-02, -1.3262e-02,  1.4354e-02,
          8.8599e-02, -4.8056e-02, -3.0211e-02, -6.3421e-02,  1.1791e-01,
          3.5420e-01,  1.1566e-01,  1.2871e-01,  2.1176e-01, -2.0033e-01,
          1.0593e-01, -1.5604e-01,  2.8076e-03,  3.6968e-02,  1.9412e-01,
          4.7163e-01, -3.1702e-01, -1.4371e-01, -5.7003e-02,  1.1954e-03,
         -6.6926e-02,  1.4436e-01, -8.9135e-02, -8.1803e-02,  2.1726e-01,
         -3.5708e-02,  8.7766e-02, -6.2261e-02, -1.2066e-01,  2.4954e-01,
         -1.2573e-01]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
433000 特征值优化 tensor(0.9252, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1338e+00,  1.5202e-01, -3.4731e-01, -1.0107e+00,  2.0480e+00,
          2.0268e+00, -1.4780e+00,  1.0050e+00,  3.6857e-01,  1.3401e-01,
         -7.2563e-02,  1.1653e+00,  2.8074e-01,  1.4043e-01,  8.2321e-01,
          6.8611e-01,  3.5036e-01, -9.3874e-03,  1.4052e-01, -1.6305e+00,
         -5.6347e-01,  3.4862e-01, -3.7039e-01,  7.6697e-01, -6.9935e-01,
          5.7089e-01,  1.4344e-01, -1.0362e-02,  4.0654e-01,  1.0793e-01,
          2.6188e-01,  1.1140e-01, -3.1170e-01,  8.5193e-02, -1.5397e-01,
          7.0070e-02,  5.0605e-03, -2.3787e-01,  4.5973e-02,  2.3983e-01,
          3.7467e-01,  3.4059e-02, -1.3249e-01,  3.5853e-01, -2.8345e-01,
          1.9923e-01, -2.0604e-01, -3.7318e-01,  1.7931e-01,  1.9097e-01,
         -3.4620e-01, -4.3516e-01, -3.1770e-01, -1.5188e-01,  3.4600e-01,
         -2.3394e-02,  4.3880e-01, -2.6900e-02,  1.4096e-01,  3.6374e-01,
         -4.6993e-01,  2.3295e-01,  5.6417e-01, -4.8330e-02, -1.2365e-01,
          1.6658e-01, -2.6908e-02, -2.7197e-01, -1.5243e-01,  1.5788e-02,
          1.8938e-01,  9.2462e-03,  2.1151e-01, -1.1679e-01,  2.9170e-01,
         -1.9911e-01, -2.0733e-01, -4.8279e-01,  1.9476e-01,  1.8175e-01,
          3.4651e-02, -4.8790e-02, -5.2456e-02,  1.9283e-01,  7.9580e-02,
         -1.8498e-01, -1.7001e-01, -3.7896e-01, -9.1766e-02, -9.5212e-03,
          1.2482e-01,  1.6156e-01, -9.3769e-02,  5.4332e-02,  1.1696e-01,
         -2.4284e-01,  4.2997e-01,  1.5501e-01,  4.2728e-02,  3.8986e-01,
         -3.4200e-01,  1.4391e-01, -1.9415e-02,  2.1916e-01,  1.6129e-01,
          3.0478e-01,  3.2618e-01,  6.8607e-02, -9.5743e-02, -4.5303e-02,
         -7.6723e-02,  3.7752e-03, -1.9135e-01, -1.6719e-01, -3.0037e-01,
         -1.3553e-01,  2.0770e-01,  1.0100e-01, -5.7964e-02,  8.9829e-03,
         -2.7331e-01, -1.7990e-01, -8.1618e-02, -3.1662e-02, -3.6444e-01,
         -4.7905e-02,  1.0805e-01,  3.8437e-02, -1.5700e-02,  1.6993e-02,
          8.8505e-02, -5.0165e-02, -3.8208e-02, -6.3600e-02,  1.1077e-01,
          3.4560e-01,  1.1607e-01,  1.1834e-01,  2.0112e-01, -2.1808e-01,
          1.1543e-01, -1.6850e-01, -1.2925e-03,  5.5990e-02,  1.7639e-01,
          4.6804e-01, -3.1056e-01, -1.4266e-01, -4.7870e-02,  1.1437e-02,
         -7.3597e-02,  1.4627e-01, -8.1008e-02, -6.5533e-02,  2.2104e-01,
         -2.8856e-02,  9.3461e-02, -5.3855e-02, -1.4204e-01,  2.3549e-01,
         -1.2833e-01]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
434000 特征值优化 tensor(0.9002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1479e+00,  1.5265e-01, -3.5535e-01, -1.0116e+00,  2.0330e+00,
          2.0445e+00, -1.4723e+00,  1.0272e+00,  3.8278e-01,  9.3005e-02,
         -8.2223e-02,  1.1836e+00,  2.8964e-01,  1.2851e-01,  8.3249e-01,
          6.7251e-01,  3.2634e-01,  4.5263e-04,  1.3181e-01, -1.6275e+00,
         -5.4686e-01,  3.4204e-01, -3.6195e-01,  7.6391e-01, -7.0219e-01,
          5.6960e-01,  1.3181e-01,  1.2616e-02,  4.0303e-01,  1.1327e-01,
          2.6893e-01,  9.1322e-02, -3.0469e-01,  8.7129e-02, -1.5410e-01,
          6.3134e-02,  8.3407e-03, -2.3533e-01,  4.7450e-02,  2.4604e-01,
          3.7437e-01,  3.6624e-02, -1.3078e-01,  3.5981e-01, -2.8977e-01,
          1.8411e-01, -2.0195e-01, -3.8061e-01,  1.5784e-01,  1.9562e-01,
         -3.4630e-01, -4.3254e-01, -3.1593e-01, -1.5156e-01,  3.4388e-01,
         -2.9260e-02,  4.4917e-01, -3.6572e-02,  1.4217e-01,  3.6588e-01,
         -4.7182e-01,  2.3121e-01,  5.6630e-01, -3.4374e-02, -1.2576e-01,
          1.6558e-01, -2.4227e-02, -2.6867e-01, -1.6497e-01,  1.2575e-02,
          1.8625e-01,  5.6953e-03,  2.1883e-01, -1.1313e-01,  2.8810e-01,
         -1.9665e-01, -2.1405e-01, -4.9614e-01,  2.0469e-01,  1.7971e-01,
          3.8324e-02, -3.6069e-02, -5.2966e-02,  1.9476e-01,  9.2574e-02,
         -1.8367e-01, -1.5979e-01, -3.7796e-01, -8.2477e-02, -2.0141e-02,
          1.2472e-01,  1.4814e-01, -6.4294e-02,  4.1510e-02,  1.0307e-01,
         -2.4313e-01,  4.3579e-01,  1.6135e-01,  5.4879e-02,  4.0218e-01,
         -3.5423e-01,  1.3365e-01, -9.4287e-03,  2.1180e-01,  1.6617e-01,
          2.9711e-01,  3.1872e-01,  7.1378e-02, -9.9494e-02, -3.3006e-02,
         -7.8528e-02,  9.1812e-03, -1.8146e-01, -1.7412e-01, -3.0443e-01,
         -1.3360e-01,  2.0906e-01,  1.0310e-01, -5.0337e-02,  1.5923e-02,
         -2.6920e-01, -1.7574e-01, -9.7094e-02, -3.7271e-02, -3.6071e-01,
         -4.3654e-02,  1.0438e-01,  4.3148e-02, -1.5901e-02,  2.4962e-02,
          8.4180e-02, -4.4219e-02, -4.1962e-02, -6.5142e-02,  1.1391e-01,
          3.5567e-01,  1.1985e-01,  1.4511e-01,  1.9310e-01, -2.1979e-01,
          1.1528e-01, -1.7379e-01, -8.8479e-03,  5.4998e-02,  1.9137e-01,
          4.7866e-01, -3.0908e-01, -1.3996e-01, -3.3344e-02,  3.0171e-03,
         -9.6461e-02,  1.4197e-01, -8.9421e-02, -8.1927e-02,  2.2902e-01,
         -2.9636e-02,  9.2482e-02, -6.6666e-02, -1.4204e-01,  2.4047e-01,
         -1.2320e-01]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
435000 特征值优化 tensor(0.9240, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1637,  0.1143, -0.3384, -1.0106,  1.9783,  2.0434, -1.4567,  1.0413,
          0.4015,  0.0425, -0.0936,  1.2373,  0.2856,  0.1111,  0.8425,  0.6811,
          0.3189,  0.0101,  0.1313, -1.6270, -0.5569,  0.3268, -0.3482,  0.7595,
         -0.7161,  0.5783,  0.1114,  0.0097,  0.4144,  0.1222,  0.2722,  0.0890,
         -0.3040,  0.0875, -0.1605,  0.0564,  0.0115, -0.2137,  0.0331,  0.2300,
          0.3739,  0.0351, -0.1329,  0.3678, -0.2991,  0.1784, -0.1754, -0.3844,
          0.1362,  0.2061, -0.3378, -0.4213, -0.3058, -0.1515,  0.3424, -0.0333,
          0.4311, -0.0260,  0.1294,  0.3683, -0.4604,  0.2176,  0.5694, -0.0364,
         -0.1013,  0.1618, -0.0253, -0.2728, -0.1605,  0.0157,  0.1814,  0.0096,
          0.2148, -0.1305,  0.2980, -0.1969, -0.2171, -0.4934,  0.1907,  0.1819,
          0.0317, -0.0468, -0.0589,  0.1961,  0.0954, -0.1786, -0.1725, -0.3675,
         -0.0616, -0.0229,  0.1187,  0.1541, -0.0781,  0.0569,  0.1096, -0.2417,
          0.4233,  0.1516,  0.0611,  0.3877, -0.3439,  0.1477, -0.0228,  0.2255,
          0.1697,  0.3046,  0.3331,  0.0750, -0.1050, -0.0185, -0.0763,  0.0116,
         -0.1729, -0.1754, -0.2967, -0.1411,  0.1941,  0.1028, -0.0544,  0.0144,
         -0.2658, -0.1646, -0.0957, -0.0386, -0.3559, -0.0504,  0.1105,  0.0452,
         -0.0153,  0.0277,  0.0817, -0.0596, -0.0434, -0.0624,  0.1073,  0.3555,
          0.1096,  0.1276,  0.2072, -0.2412,  0.1186, -0.1799, -0.0206,  0.0680,
          0.1801,  0.4788, -0.3066, -0.1440, -0.0416,  0.0124, -0.0983,  0.1434,
         -0.1078, -0.0794,  0.2135, -0.0333,  0.0794, -0.0607, -0.1356,  0.2497,
         -0.1199]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
436000 特征值优化 tensor(0.8946, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1607e+00,  9.5697e-02, -3.2293e-01, -1.0118e+00,  1.9781e+00,
          2.0279e+00, -1.4325e+00,  1.0394e+00,  4.2198e-01, -5.8871e-03,
         -1.1229e-01,  1.2454e+00,  2.9384e-01,  1.1723e-01,  8.4349e-01,
          6.4932e-01,  3.2445e-01,  1.6102e-02,  1.3235e-01, -1.6334e+00,
         -5.4960e-01,  3.1803e-01, -3.3855e-01,  7.4598e-01, -7.0910e-01,
          5.8510e-01,  1.0776e-01,  1.3904e-02,  4.2088e-01,  1.4470e-01,
          2.7495e-01,  8.3371e-02, -3.1000e-01,  7.7698e-02, -1.6832e-01,
          5.2898e-02,  1.3672e-02, -1.9517e-01,  3.3208e-02,  2.3428e-01,
          3.6938e-01,  3.5850e-02, -1.2913e-01,  3.6659e-01, -3.1614e-01,
          1.6662e-01, -1.4992e-01, -3.9430e-01,  1.2583e-01,  2.1880e-01,
         -3.4301e-01, -4.2161e-01, -3.0945e-01, -1.5499e-01,  3.3523e-01,
         -4.1766e-02,  4.3382e-01, -1.9955e-02,  1.2566e-01,  3.7493e-01,
         -4.6692e-01,  2.1958e-01,  5.6653e-01, -3.7254e-02, -1.0222e-01,
          1.4314e-01, -2.8364e-02, -2.7926e-01, -1.5980e-01,  2.1773e-02,
          1.7081e-01,  1.7556e-02,  2.1373e-01, -1.3089e-01,  3.0436e-01,
         -2.0165e-01, -2.2040e-01, -5.1273e-01,  1.9740e-01,  1.8314e-01,
          2.4036e-02, -4.9216e-02, -5.7696e-02,  1.9907e-01,  1.0301e-01,
         -1.7556e-01, -1.7288e-01, -3.7328e-01, -3.1265e-02, -2.2015e-03,
          1.1150e-01,  1.2986e-01, -8.9970e-02,  5.3174e-02,  1.0302e-01,
         -2.4999e-01,  4.1344e-01,  1.3140e-01,  6.2864e-02,  3.7672e-01,
         -3.6201e-01,  1.5221e-01,  1.1646e-02,  2.1859e-01,  1.8201e-01,
          3.1053e-01,  3.4012e-01,  8.3735e-02, -9.7522e-02, -2.6214e-02,
         -6.0504e-02,  1.6211e-02, -1.6869e-01, -1.8624e-01, -2.9471e-01,
         -1.4316e-01,  1.9445e-01,  1.0906e-01, -5.0641e-02,  2.0301e-02,
         -2.6626e-01, -1.7898e-01, -9.5385e-02, -4.7074e-02, -3.6127e-01,
         -5.8518e-02,  1.2356e-01,  4.4966e-02, -1.0259e-02,  3.8100e-02,
          8.6963e-02, -6.4204e-02, -4.0231e-02, -6.8557e-02,  9.8968e-02,
          3.5465e-01,  1.1762e-01,  1.2280e-01,  2.0252e-01, -2.5097e-01,
          1.3094e-01, -1.8754e-01, -1.5605e-02,  6.8339e-02,  1.8872e-01,
          4.7620e-01, -2.9888e-01, -1.4203e-01, -3.9764e-02,  5.3893e-03,
         -1.0580e-01,  1.3268e-01, -1.0326e-01, -8.1404e-02,  2.1448e-01,
         -4.7071e-02,  7.4423e-02, -6.2271e-02, -1.3352e-01,  2.5404e-01,
         -1.2155e-01]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
437000 特征值优化 tensor(0.8961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1572,  0.0542, -0.3138, -1.0127,  1.9684,  2.0461, -1.4387,  1.0627,
          0.4434, -0.0206, -0.1262,  1.2507,  0.2916,  0.1089,  0.8390,  0.6440,
          0.3197,  0.0199,  0.1308, -1.6313, -0.5364,  0.3190, -0.3381,  0.7415,
         -0.7153,  0.5824,  0.1030,  0.0044,  0.4325,  0.1531,  0.2698,  0.0814,
         -0.2996,  0.0814, -0.1626,  0.0502,  0.0096, -0.1875,  0.0350,  0.2281,
          0.3655,  0.0362, -0.1296,  0.3682, -0.3322,  0.1620, -0.1422, -0.3941,
          0.1101,  0.2144, -0.3331, -0.4217, -0.3058, -0.1568,  0.3306, -0.0429,
          0.4228, -0.0235,  0.1233,  0.3711, -0.4589,  0.2121,  0.5699, -0.0388,
         -0.0842,  0.1441, -0.0381, -0.2812, -0.1574,  0.0222,  0.1633,  0.0160,
          0.2106, -0.1359,  0.3060, -0.1951, -0.2276, -0.5197,  0.2008,  0.1861,
          0.0293, -0.0499, -0.0579,  0.1954,  0.0977, -0.1785, -0.1773, -0.3704,
         -0.0127, -0.0147,  0.1169,  0.1330, -0.0822,  0.0501,  0.1014, -0.2549,
          0.4236,  0.1293,  0.0860,  0.3734, -0.3792,  0.1529,  0.0088,  0.2142,
          0.1774,  0.3093,  0.3344,  0.0703, -0.0950, -0.0204, -0.0618,  0.0189,
         -0.1612, -0.1839, -0.2965, -0.1430,  0.1939,  0.1095, -0.0594,  0.0248,
         -0.2631, -0.1689, -0.0960, -0.0411, -0.3568, -0.0620,  0.1165,  0.0401,
         -0.0123,  0.0350,  0.0845, -0.0674, -0.0407, -0.0702,  0.1028,  0.3503,
          0.1266,  0.1253,  0.1990, -0.2533,  0.1219, -0.1803, -0.0162,  0.0661,
          0.1904,  0.4847, -0.3114, -0.1361, -0.0407,  0.0095, -0.1156,  0.1298,
         -0.1176, -0.0740,  0.2064, -0.0512,  0.0783, -0.0610, -0.1276,  0.2666,
         -0.1212]], device='cuda:0') tensor(0.2167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
438000 特征值优化 tensor(0.8866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1276,  0.0375, -0.3014, -1.0123,  1.9871,  2.0559, -1.4367,  1.0763,
          0.4604, -0.0152, -0.1349,  1.2561,  0.2921,  0.1135,  0.8177,  0.6452,
          0.3073,  0.0288,  0.1324, -1.6233, -0.5367,  0.3229, -0.3309,  0.7416,
         -0.7200,  0.5779,  0.1006,  0.0222,  0.4335,  0.1559,  0.2768,  0.0803,
         -0.3055,  0.0794, -0.1560,  0.0530,  0.0184, -0.1820,  0.0272,  0.2219,
          0.3575,  0.0342, -0.1275,  0.3735, -0.3414,  0.1578, -0.1277, -0.3945,
          0.1056,  0.2144, -0.3342, -0.4212, -0.3183, -0.1690,  0.3332, -0.0456,
          0.4246, -0.0244,  0.1165,  0.3680, -0.4594,  0.2026,  0.5699, -0.0451,
         -0.0811,  0.1425, -0.0312, -0.2836, -0.1587,  0.0232,  0.1671,  0.0168,
          0.2146, -0.1413,  0.3056, -0.2048, -0.2327, -0.5199,  0.1957,  0.1859,
          0.0272, -0.0483, -0.0716,  0.2060,  0.1021, -0.1737, -0.1732, -0.3721,
         -0.0075,  0.0050,  0.1157,  0.1306, -0.0773,  0.0608,  0.1010, -0.2548,
          0.4327,  0.1390,  0.0851,  0.3739, -0.3913,  0.1506,  0.0109,  0.2164,
          0.1732,  0.3039,  0.3256,  0.0730, -0.1058, -0.0247, -0.0565,  0.0161,
         -0.1580, -0.1890, -0.2976, -0.1491,  0.1950,  0.1079, -0.0577,  0.0184,
         -0.2625, -0.1624, -0.1058, -0.0472, -0.3573, -0.0618,  0.1255,  0.0338,
         -0.0081,  0.0346,  0.0830, -0.0683, -0.0421, -0.0756,  0.0965,  0.3490,
          0.1062,  0.1238,  0.2201, -0.2567,  0.1239, -0.1876, -0.0262,  0.0699,
          0.1851,  0.4875, -0.3118, -0.1432, -0.0475,  0.0108, -0.1102,  0.1277,
         -0.1189, -0.0802,  0.1995, -0.0446,  0.0645, -0.0655, -0.1342,  0.2627,
         -0.1309]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
439000 特征值优化 tensor(0.8981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0964e+00,  1.9296e-02, -3.0594e-01, -1.0127e+00,  1.9735e+00,
          2.0718e+00, -1.4525e+00,  1.0747e+00,  4.6864e-01, -2.7069e-02,
         -1.3357e-01,  1.2479e+00,  2.9277e-01,  1.2734e-01,  8.2918e-01,
          6.2325e-01,  3.2824e-01,  2.4691e-02,  1.2330e-01, -1.6270e+00,
         -5.2518e-01,  3.1298e-01, -3.3910e-01,  7.2772e-01, -7.1287e-01,
          5.8898e-01,  1.0102e-01,  1.7716e-02,  4.2700e-01,  1.7003e-01,
          2.7574e-01,  8.4746e-02, -3.1199e-01,  8.2417e-02, -1.5057e-01,
          4.9957e-02,  1.0558e-02, -1.8815e-01,  3.6547e-02,  2.2842e-01,
          3.5708e-01,  4.0006e-02, -1.3389e-01,  3.7310e-01, -3.4749e-01,
          1.6013e-01, -1.2987e-01, -4.0191e-01,  1.0666e-01,  2.0753e-01,
         -3.3319e-01, -4.2677e-01, -3.3462e-01, -1.6732e-01,  3.3726e-01,
         -3.6690e-02,  4.3090e-01, -1.9170e-02,  1.1264e-01,  3.7084e-01,
         -4.5829e-01,  2.0750e-01,  5.6185e-01, -3.7465e-02, -7.9599e-02,
          1.3925e-01, -4.0786e-02, -2.8789e-01, -1.6213e-01,  2.0782e-02,
          1.6390e-01,  1.0679e-02,  2.1193e-01, -1.3569e-01,  3.0636e-01,
         -1.9566e-01, -2.2530e-01, -5.2175e-01,  2.0729e-01,  1.8254e-01,
          3.0559e-02, -4.4240e-02, -6.2412e-02,  2.0205e-01,  9.9673e-02,
         -1.7444e-01, -1.7935e-01, -3.5797e-01,  1.4467e-02, -1.5959e-03,
          1.0471e-01,  1.0688e-01, -8.0726e-02,  4.6273e-02,  1.0212e-01,
         -2.5629e-01,  4.2966e-01,  1.4095e-01,  8.8102e-02,  3.7775e-01,
         -3.8265e-01,  1.5135e-01,  3.7158e-02,  2.1762e-01,  1.8414e-01,
          3.0824e-01,  3.2761e-01,  8.4222e-02, -9.8913e-02, -3.2415e-02,
         -5.6207e-02,  1.8239e-02, -1.6222e-01, -1.8282e-01, -2.9590e-01,
         -1.5087e-01,  1.8918e-01,  1.0977e-01, -5.7469e-02,  1.9840e-02,
         -2.6342e-01, -1.5969e-01, -9.3276e-02, -4.8485e-02, -3.5483e-01,
         -5.7420e-02,  1.1638e-01,  4.1467e-02, -9.7015e-03,  3.9143e-02,
          8.2200e-02, -6.0363e-02, -3.2501e-02, -7.1898e-02,  1.0232e-01,
          3.5419e-01,  1.2701e-01,  1.2582e-01,  2.0544e-01, -2.5501e-01,
          1.3531e-01, -1.7452e-01, -1.5837e-02,  6.6549e-02,  1.8343e-01,
          4.8724e-01, -3.0768e-01, -1.4362e-01, -4.2200e-02, -2.6141e-03,
         -1.2134e-01,  1.2838e-01, -1.1095e-01, -7.0088e-02,  2.1113e-01,
         -5.0000e-02,  7.3478e-02, -4.5123e-02, -1.3222e-01,  2.5899e-01,
         -1.1954e-01]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
440000 特征值优化 tensor(0.9262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0503, -0.0083, -0.3004, -1.0092,  1.9751,  2.0928, -1.4580,  1.0732,
          0.4797, -0.0250, -0.1373,  1.2522,  0.2825,  0.1299,  0.8130,  0.6034,
          0.3202,  0.0352,  0.1130, -1.6122, -0.5327,  0.3091, -0.3345,  0.7226,
         -0.7208,  0.5894,  0.1005,  0.0353,  0.4282,  0.1706,  0.2843,  0.0911,
         -0.3089,  0.0874, -0.1450,  0.0538,  0.0047, -0.1829,  0.0300,  0.2289,
          0.3521,  0.0390, -0.1295,  0.3768, -0.3505,  0.1589, -0.1156, -0.4001,
          0.0949,  0.1947, -0.3389, -0.4257, -0.3453, -0.1828,  0.3317, -0.0323,
          0.4389, -0.0334,  0.1171,  0.3713, -0.4497,  0.2017,  0.5615, -0.0426,
         -0.0730,  0.1277, -0.0417, -0.2829, -0.1540,  0.0158,  0.1760,  0.0058,
          0.2101, -0.1344,  0.3017, -0.2031, -0.2328, -0.5144,  0.2044,  0.1826,
          0.0416, -0.0422, -0.0696,  0.2056,  0.1117, -0.1703, -0.1742, -0.3544,
          0.0223,  0.0181,  0.1092,  0.1036, -0.0804,  0.0502,  0.1041, -0.2516,
          0.4306,  0.1589,  0.0985,  0.3789, -0.3902,  0.1519,  0.0454,  0.2185,
          0.1750,  0.3115,  0.3229,  0.0920, -0.1203, -0.0290, -0.0583,  0.0134,
         -0.1452, -0.1728, -0.3042, -0.1548,  0.1923,  0.1084, -0.0617,  0.0143,
         -0.2600, -0.1650, -0.1029, -0.0552, -0.3522, -0.0521,  0.1099,  0.0363,
         -0.0057,  0.0430,  0.0805, -0.0581, -0.0354, -0.0798,  0.0986,  0.3505,
          0.1169,  0.1309,  0.2096, -0.2502,  0.1353, -0.1744, -0.0207,  0.0781,
          0.1781,  0.4887, -0.3021, -0.1531, -0.0497, -0.0094, -0.1214,  0.1306,
         -0.1006, -0.0759,  0.2092, -0.0411,  0.0731, -0.0483, -0.1403,  0.2558,
         -0.1177]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
441000 特征值优化 tensor(0.9314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0200e+00, -3.0266e-02, -2.8126e-01, -1.0097e+00,  1.9742e+00,
          2.1134e+00, -1.4673e+00,  1.0897e+00,  4.8669e-01, -2.8895e-02,
         -1.3212e-01,  1.2489e+00,  2.7106e-01,  1.3591e-01,  8.3735e-01,
          6.2505e-01,  3.1437e-01,  3.6997e-02,  1.1723e-01, -1.6205e+00,
         -5.1368e-01,  3.0010e-01, -3.3840e-01,  7.2068e-01, -7.2187e-01,
          5.9470e-01,  9.5450e-02,  2.6530e-02,  4.2387e-01,  1.7743e-01,
          2.8107e-01,  8.6133e-02, -3.0929e-01,  1.0424e-01, -1.3951e-01,
          4.5501e-02,  1.0648e-02, -1.8137e-01,  4.0201e-02,  2.2081e-01,
          3.5081e-01,  3.8204e-02, -1.3065e-01,  3.7691e-01, -3.6081e-01,
          1.5076e-01, -1.1777e-01, -4.0386e-01,  1.0025e-01,  2.0534e-01,
         -3.2505e-01, -4.2335e-01, -3.3914e-01, -1.7698e-01,  3.3597e-01,
         -2.7681e-02,  4.2656e-01, -2.6137e-02,  1.0293e-01,  3.6805e-01,
         -4.5200e-01,  1.9138e-01,  5.6265e-01, -3.5513e-02, -7.1753e-02,
          1.4509e-01, -3.6580e-02, -2.9440e-01, -1.6372e-01,  1.1489e-02,
          1.6782e-01,  3.4715e-03,  2.0756e-01, -1.3969e-01,  3.0858e-01,
         -1.9322e-01, -2.2948e-01, -5.1977e-01,  2.1171e-01,  1.7966e-01,
          4.1437e-02, -4.6006e-02, -6.6273e-02,  1.9168e-01,  1.0378e-01,
         -1.7964e-01, -1.7683e-01, -3.4517e-01,  2.1139e-02, -6.3810e-04,
          1.0878e-01,  1.0681e-01, -7.0484e-02,  4.8676e-02,  1.0191e-01,
         -2.5935e-01,  4.2591e-01,  1.5602e-01,  1.0128e-01,  3.8457e-01,
         -3.9022e-01,  1.4556e-01,  3.0379e-02,  2.2170e-01,  1.8901e-01,
          3.0632e-01,  3.2428e-01,  9.0814e-02, -1.1308e-01, -2.0296e-02,
         -5.9109e-02,  1.5259e-02, -1.5364e-01, -1.7954e-01, -3.1024e-01,
         -1.5148e-01,  1.8126e-01,  1.1295e-01, -5.3079e-02,  1.8145e-02,
         -2.5845e-01, -1.5163e-01, -1.0249e-01, -4.5660e-02, -3.5069e-01,
         -5.4020e-02,  1.0705e-01,  3.8261e-02, -1.0732e-02,  3.1763e-02,
          7.4060e-02, -6.5294e-02, -3.6348e-02, -7.2526e-02,  1.0216e-01,
          3.5534e-01,  1.3375e-01,  1.2544e-01,  2.0447e-01, -2.6176e-01,
          1.2355e-01, -1.6655e-01, -2.3024e-02,  6.5650e-02,  1.7534e-01,
          4.9327e-01, -3.0651e-01, -1.5202e-01, -4.7840e-02, -1.0006e-02,
         -1.2431e-01,  1.3520e-01, -1.0912e-01, -8.0206e-02,  2.1067e-01,
         -4.8672e-02,  7.8457e-02, -4.3444e-02, -1.3594e-01,  2.5252e-01,
         -1.1686e-01]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
442000 特征值优化 tensor(0.9528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0129e+00, -3.4519e-02, -2.9239e-01, -1.0101e+00,  1.9583e+00,
          2.1267e+00, -1.4589e+00,  1.1181e+00,  4.9671e-01, -3.9328e-02,
         -1.2988e-01,  1.2549e+00,  2.6109e-01,  1.3280e-01,  8.4183e-01,
          5.9234e-01,  3.5202e-01,  2.5817e-02,  1.0767e-01, -1.6130e+00,
         -4.8929e-01,  3.0260e-01, -3.3486e-01,  7.1118e-01, -7.1023e-01,
          5.9182e-01,  1.0628e-01,  2.4660e-02,  4.1948e-01,  1.7919e-01,
          2.7378e-01,  7.2381e-02, -3.1116e-01,  9.7960e-02, -1.3618e-01,
          4.4878e-02, -8.1336e-04, -1.9237e-01,  4.6662e-02,  2.4249e-01,
          3.5036e-01,  3.6774e-02, -1.3027e-01,  3.7464e-01, -3.5349e-01,
          1.4281e-01, -1.0820e-01, -4.1092e-01,  9.0174e-02,  1.9806e-01,
         -3.2626e-01, -4.2697e-01, -3.4107e-01, -1.8333e-01,  3.3019e-01,
         -1.9683e-02,  4.3068e-01, -4.0548e-02,  9.9183e-02,  3.6903e-01,
         -4.4555e-01,  1.8627e-01,  5.6418e-01, -2.5556e-02, -8.0137e-02,
          1.3085e-01, -5.5023e-02, -2.9587e-01, -1.6308e-01,  1.7421e-02,
          1.7429e-01, -2.6296e-03,  2.0577e-01, -1.2573e-01,  3.0602e-01,
         -1.7141e-01, -2.4522e-01, -5.2597e-01,  2.2908e-01,  1.7589e-01,
          4.5764e-02, -4.0385e-02, -6.1538e-02,  1.8887e-01,  9.4936e-02,
         -1.9550e-01, -1.8405e-01, -3.4128e-01,  2.6424e-02, -1.1960e-02,
          1.0690e-01,  9.4687e-02, -7.0160e-02,  3.7201e-02,  1.0146e-01,
         -2.6223e-01,  4.1622e-01,  1.5413e-01,  1.1653e-01,  3.8600e-01,
         -3.8362e-01,  1.5745e-01,  5.2351e-02,  2.0570e-01,  1.8052e-01,
          3.2575e-01,  3.3040e-01,  8.4152e-02, -1.1659e-01, -2.3439e-02,
         -6.0657e-02,  1.4111e-02, -1.4564e-01, -1.7293e-01, -3.1940e-01,
         -1.5646e-01,  1.7769e-01,  9.2847e-02, -7.1669e-02,  3.5031e-02,
         -2.6510e-01, -1.7305e-01, -7.8753e-02, -4.9333e-02, -3.4853e-01,
         -5.4800e-02,  1.0272e-01,  3.8361e-02, -6.8013e-03,  3.2884e-02,
          7.7317e-02, -5.6922e-02, -3.1078e-02, -7.3496e-02,  1.0916e-01,
          3.5452e-01,  1.5164e-01,  1.3767e-01,  1.8766e-01, -2.5099e-01,
          1.2202e-01, -1.5686e-01, -9.0213e-03,  6.5585e-02,  1.9806e-01,
          4.9027e-01, -3.0843e-01, -1.5071e-01, -5.6265e-02, -9.1863e-03,
         -1.3183e-01,  1.3168e-01, -9.4199e-02, -7.2601e-02,  2.1556e-01,
         -4.6703e-02,  7.7121e-02, -3.1737e-02, -1.1955e-01,  2.5651e-01,
         -1.1962e-01]], device='cuda:0') tensor(0.2168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
443000 特征值优化 tensor(0.8954, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9655e+00, -6.4104e-02, -2.8361e-01, -1.0140e+00,  1.9676e+00,
          2.1557e+00, -1.4763e+00,  1.1306e+00,  4.8492e-01, -4.9147e-02,
         -1.3801e-01,  1.2546e+00,  2.5356e-01,  1.3340e-01,  8.3733e-01,
          5.9868e-01,  3.3710e-01,  2.8837e-02,  1.0780e-01, -1.6099e+00,
         -4.9845e-01,  3.0445e-01, -3.3468e-01,  7.1324e-01, -7.1376e-01,
          5.9534e-01,  1.0012e-01,  4.0144e-02,  4.1478e-01,  1.8203e-01,
          2.7953e-01,  7.8075e-02, -3.1242e-01,  9.7421e-02, -1.3175e-01,
          4.3886e-02, -3.7550e-03, -1.8822e-01,  3.8964e-02,  2.3621e-01,
          3.5168e-01,  4.2166e-02, -1.3034e-01,  3.7911e-01, -3.5788e-01,
          1.4347e-01, -1.0802e-01, -4.0897e-01,  9.3670e-02,  1.9167e-01,
         -3.3065e-01, -4.1919e-01, -3.4677e-01, -1.8626e-01,  3.3529e-01,
         -1.3469e-02,  4.3890e-01, -3.7987e-02,  1.1030e-01,  3.7375e-01,
         -4.5131e-01,  1.8356e-01,  5.6417e-01, -2.9952e-02, -7.3084e-02,
          1.3640e-01, -4.8905e-02, -2.9287e-01, -1.6257e-01,  1.1886e-02,
          1.7660e-01, -6.3535e-03,  2.0734e-01, -1.2580e-01,  3.0525e-01,
         -1.8259e-01, -2.4272e-01, -5.1834e-01,  2.2526e-01,  1.8531e-01,
          5.3197e-02, -3.3229e-02, -6.5581e-02,  1.9783e-01,  1.1066e-01,
         -1.8782e-01, -1.8062e-01, -3.3826e-01,  3.0716e-02,  9.0916e-03,
          1.0509e-01,  8.5672e-02, -6.4062e-02,  4.7887e-02,  1.0003e-01,
         -2.6225e-01,  4.2955e-01,  1.6621e-01,  1.2263e-01,  3.7540e-01,
         -3.9881e-01,  1.4674e-01,  5.6439e-02,  2.0460e-01,  1.8264e-01,
          3.1700e-01,  3.1868e-01,  9.9261e-02, -1.1517e-01, -2.2606e-02,
         -5.9391e-02,  1.5247e-02, -1.3255e-01, -1.7691e-01, -3.1973e-01,
         -1.6126e-01,  1.7895e-01,  1.0409e-01, -5.9298e-02,  2.7963e-02,
         -2.5937e-01, -1.6501e-01, -8.9020e-02, -4.9645e-02, -3.4865e-01,
         -4.8691e-02,  1.0481e-01,  4.0242e-02, -1.0070e-03,  3.9382e-02,
          7.6011e-02, -5.0811e-02, -2.8650e-02, -7.8161e-02,  1.0257e-01,
          3.4897e-01,  1.3531e-01,  1.4438e-01,  1.9718e-01, -2.4778e-01,
          1.1906e-01, -1.6193e-01, -9.6131e-03,  7.4145e-02,  1.9109e-01,
          4.9023e-01, -3.0266e-01, -1.4917e-01, -5.0996e-02, -2.0966e-02,
         -1.3415e-01,  1.3109e-01, -8.5830e-02, -7.2614e-02,  2.1283e-01,
         -3.7298e-02,  7.6840e-02, -3.7009e-02, -1.3496e-01,  2.5028e-01,
         -1.1615e-01]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
444000 特征值优化 tensor(0.8951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9111e+00, -7.4930e-02, -2.7425e-01, -1.0143e+00,  1.9929e+00,
          2.1607e+00, -1.4776e+00,  1.1283e+00,  4.9627e-01, -5.7042e-02,
         -1.3590e-01,  1.2509e+00,  2.5611e-01,  1.3292e-01,  8.3015e-01,
          6.0588e-01,  3.2804e-01,  3.5529e-02,  1.1273e-01, -1.6316e+00,
         -4.9469e-01,  3.0100e-01, -3.3284e-01,  7.0092e-01, -7.0927e-01,
          6.0244e-01,  9.2406e-02,  1.8323e-02,  4.2445e-01,  1.9274e-01,
          2.7711e-01,  8.5117e-02, -3.2101e-01,  1.1265e-01, -1.3465e-01,
          4.2560e-02,  7.9675e-03, -1.7191e-01,  3.8584e-02,  2.1870e-01,
          3.4695e-01,  3.7356e-02, -1.2897e-01,  3.8034e-01, -3.6518e-01,
          1.5344e-01, -1.1036e-01, -4.0798e-01,  1.0020e-01,  2.1026e-01,
         -3.2515e-01, -4.1611e-01, -3.4687e-01, -1.8491e-01,  3.4145e-01,
         -1.8833e-02,  4.2047e-01, -3.0344e-02,  9.6954e-02,  3.7011e-01,
         -4.5673e-01,  1.8990e-01,  5.5874e-01, -3.1410e-02, -8.0686e-02,
          1.4869e-01, -4.1836e-02, -2.9349e-01, -1.6214e-01,  1.3041e-02,
          1.6461e-01,  1.8667e-03,  2.0883e-01, -1.4582e-01,  3.1650e-01,
         -1.9328e-01, -2.3346e-01, -5.2364e-01,  2.2040e-01,  1.7875e-01,
          3.8725e-02, -4.5165e-02, -6.3724e-02,  1.8658e-01,  1.0780e-01,
         -1.8023e-01, -1.7875e-01, -3.3697e-01,  3.7263e-02, -9.9375e-04,
          1.0738e-01,  8.2804e-02, -7.6424e-02,  4.7298e-02,  1.0190e-01,
         -2.6654e-01,  4.2744e-01,  1.4828e-01,  1.0757e-01,  3.8071e-01,
         -3.9174e-01,  1.4104e-01,  4.8103e-02,  2.1793e-01,  1.9648e-01,
          3.1394e-01,  3.2172e-01,  1.0575e-01, -1.1013e-01, -2.2544e-02,
         -5.7712e-02,  1.0529e-02, -1.4864e-01, -1.8007e-01, -3.1258e-01,
         -1.4742e-01,  1.8034e-01,  1.1858e-01, -5.3391e-02,  2.6638e-02,
         -2.5763e-01, -1.5209e-01, -1.0127e-01, -5.0475e-02, -3.4518e-01,
         -5.5623e-02,  1.1275e-01,  4.3498e-02, -2.6814e-03,  3.1063e-02,
          7.1538e-02, -6.2836e-02, -3.3549e-02, -7.3911e-02,  9.8231e-02,
          3.4189e-01,  1.4110e-01,  1.3146e-01,  2.0290e-01, -2.6712e-01,
          1.2680e-01, -1.6781e-01, -1.5632e-02,  7.0211e-02,  1.7235e-01,
          4.8941e-01, -3.0765e-01, -1.5053e-01, -5.4187e-02, -1.7337e-02,
         -1.2997e-01,  1.2888e-01, -1.0309e-01, -6.4327e-02,  2.1088e-01,
         -5.4099e-02,  8.1344e-02, -2.7598e-02, -1.3557e-01,  2.4964e-01,
         -1.2211e-01]], device='cuda:0') tensor(0.2130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
445000 特征值优化 tensor(0.8941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8812e+00, -8.5537e-02, -2.6228e-01, -1.0104e+00,  1.9892e+00,
          2.1727e+00, -1.4708e+00,  1.1367e+00,  4.9536e-01, -6.3900e-02,
         -1.3464e-01,  1.2530e+00,  2.5365e-01,  1.2547e-01,  8.2235e-01,
          5.9634e-01,  3.3463e-01,  3.4934e-02,  1.1636e-01, -1.6256e+00,
         -4.9079e-01,  3.0022e-01, -3.3392e-01,  6.9790e-01, -7.1564e-01,
          6.0182e-01,  9.4794e-02,  2.0767e-02,  4.3463e-01,  1.9682e-01,
          2.7932e-01,  7.8648e-02, -3.1633e-01,  1.1282e-01, -1.4032e-01,
          3.9709e-02,  7.8673e-03, -1.6541e-01,  3.9610e-02,  2.1717e-01,
          3.3713e-01,  3.7439e-02, -1.3074e-01,  3.8272e-01, -3.7544e-01,
          1.4585e-01, -1.0678e-01, -4.0909e-01,  9.4717e-02,  2.1025e-01,
         -3.1678e-01, -4.1268e-01, -3.4763e-01, -1.8608e-01,  3.4379e-01,
         -1.8627e-02,  4.1260e-01, -3.8653e-02,  1.0084e-01,  3.6951e-01,
         -4.5168e-01,  1.8370e-01,  5.5817e-01, -2.9971e-02, -7.3213e-02,
          1.4800e-01, -4.2400e-02, -2.9399e-01, -1.5926e-01,  1.4186e-02,
          1.6909e-01, -3.0433e-04,  2.0492e-01, -1.4716e-01,  3.1463e-01,
         -1.9285e-01, -2.3822e-01, -5.2636e-01,  2.2017e-01,  1.8524e-01,
          3.6834e-02, -4.1178e-02, -6.2260e-02,  1.9528e-01,  1.0391e-01,
         -1.7678e-01, -1.7848e-01, -3.3123e-01,  4.1509e-02,  1.0573e-03,
          1.0739e-01,  7.4987e-02, -7.7810e-02,  4.8435e-02,  1.0304e-01,
         -2.6793e-01,  4.3182e-01,  1.4725e-01,  1.1187e-01,  3.7933e-01,
         -3.9197e-01,  1.4169e-01,  5.8089e-02,  2.1884e-01,  1.9061e-01,
          3.1790e-01,  3.2225e-01,  1.0085e-01, -1.1583e-01, -1.9444e-02,
         -5.9283e-02,  9.5842e-03, -1.4633e-01, -1.8065e-01, -3.1011e-01,
         -1.4723e-01,  1.8242e-01,  1.1253e-01, -5.8912e-02,  2.5455e-02,
         -2.5678e-01, -1.5708e-01, -9.8940e-02, -5.3329e-02, -3.4951e-01,
         -5.3011e-02,  1.0692e-01,  4.2846e-02, -5.7480e-03,  3.3996e-02,
          7.2742e-02, -5.9069e-02, -2.9140e-02, -7.6380e-02,  9.6792e-02,
          3.3766e-01,  1.3581e-01,  1.3081e-01,  2.0756e-01, -2.7178e-01,
          1.2068e-01, -1.7101e-01, -2.1660e-02,  6.9460e-02,  1.7449e-01,
          4.8675e-01, -3.1929e-01, -1.5208e-01, -6.0142e-02, -1.9110e-02,
         -1.3066e-01,  1.2763e-01, -1.0036e-01, -6.5809e-02,  2.1045e-01,
         -4.4221e-02,  7.6869e-02, -2.9840e-02, -1.4179e-01,  2.5423e-01,
         -1.2189e-01]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
446000 特征值优化 tensor(0.9690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8550e+00, -9.5019e-02, -2.6749e-01, -1.0107e+00,  1.9781e+00,
          2.2039e+00, -1.4808e+00,  1.1520e+00,  4.9594e-01, -5.1660e-02,
         -1.3573e-01,  1.2420e+00,  2.3465e-01,  1.4360e-01,  8.4278e-01,
          5.7516e-01,  3.5171e-01,  3.3128e-02,  9.8007e-02, -1.6121e+00,
         -4.7761e-01,  3.0369e-01, -3.3091e-01,  7.0075e-01, -7.0052e-01,
          6.0295e-01,  1.0478e-01,  3.7689e-02,  4.1148e-01,  1.8764e-01,
          2.7793e-01,  8.0838e-02, -3.1793e-01,  1.1272e-01, -1.2769e-01,
          4.1067e-02, -2.3552e-03, -1.8915e-01,  4.8338e-02,  2.3648e-01,
          3.4629e-01,  4.0429e-02, -1.3193e-01,  3.8124e-01, -3.5946e-01,
          1.3237e-01, -1.0595e-01, -4.0959e-01,  9.4939e-02,  1.9048e-01,
         -3.2853e-01, -4.2328e-01, -3.6047e-01, -1.8851e-01,  3.3703e-01,
         -4.2606e-03,  4.4453e-01, -5.2203e-02,  9.9144e-02,  3.7081e-01,
         -4.4737e-01,  1.6832e-01,  5.6239e-01, -2.1271e-02, -7.4501e-02,
          1.3387e-01, -5.0666e-02, -2.9813e-01, -1.6409e-01,  9.3228e-03,
          1.8318e-01, -1.4377e-02,  2.0619e-01, -1.2688e-01,  3.1298e-01,
         -1.7557e-01, -2.4794e-01, -5.2821e-01,  2.3768e-01,  1.7683e-01,
          4.9982e-02, -3.4274e-02, -6.5697e-02,  1.9899e-01,  1.0003e-01,
         -1.9474e-01, -1.7447e-01, -3.2679e-01,  2.7336e-02,  1.3576e-02,
          1.0041e-01,  7.2358e-02, -6.1416e-02,  3.1268e-02,  1.0668e-01,
         -2.6741e-01,  4.2979e-01,  1.7389e-01,  1.2347e-01,  3.7875e-01,
         -4.1292e-01,  1.4650e-01,  7.3277e-02,  2.0353e-01,  1.8002e-01,
          3.2543e-01,  3.2314e-01,  1.0572e-01, -1.1897e-01, -1.4226e-02,
         -6.0867e-02,  1.6664e-02, -1.2795e-01, -1.7389e-01, -3.2612e-01,
         -1.5905e-01,  1.7613e-01,  1.0060e-01, -6.6378e-02,  3.2705e-02,
         -2.6260e-01, -1.7493e-01, -8.0742e-02, -5.9800e-02, -3.3707e-01,
         -4.6347e-02,  9.6140e-02,  4.7328e-02, -4.2096e-04,  3.7826e-02,
          7.8591e-02, -4.7215e-02, -2.4525e-02, -7.8095e-02,  9.6616e-02,
          3.4296e-01,  1.4742e-01,  1.4618e-01,  1.9401e-01, -2.4779e-01,
          1.2107e-01, -1.5196e-01, -1.3457e-03,  6.5401e-02,  1.8836e-01,
          4.8882e-01, -3.0843e-01, -1.6465e-01, -6.4296e-02, -3.3936e-02,
         -1.3294e-01,  1.3749e-01, -7.8363e-02, -7.3565e-02,  2.2123e-01,
         -4.8453e-02,  8.2023e-02, -2.6036e-02, -1.3134e-01,  2.3951e-01,
         -1.2391e-01]], device='cuda:0') tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
447000 特征值优化 tensor(0.9076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8063e+00, -1.0614e-01, -2.6237e-01, -1.0126e+00,  1.9883e+00,
          2.2172e+00, -1.4889e+00,  1.1571e+00,  5.0223e-01, -6.6972e-02,
         -1.4425e-01,  1.2501e+00,  2.3799e-01,  1.2933e-01,  8.2168e-01,
          5.9148e-01,  3.2939e-01,  3.9790e-02,  1.0871e-01, -1.6178e+00,
         -4.7867e-01,  2.9737e-01, -3.2670e-01,  6.9639e-01, -7.1482e-01,
          6.0750e-01,  1.0136e-01,  2.9057e-02,  4.2693e-01,  1.9528e-01,
          2.8052e-01,  8.2542e-02, -3.2266e-01,  1.2488e-01, -1.2823e-01,
          3.9481e-02,  4.4972e-03, -1.7349e-01,  3.9360e-02,  2.3081e-01,
          3.4134e-01,  4.3142e-02, -1.3186e-01,  3.7917e-01, -3.7326e-01,
          1.3746e-01, -9.3411e-02, -4.0841e-01,  9.5379e-02,  1.9354e-01,
         -3.1925e-01, -4.1095e-01, -3.6236e-01, -2.0049e-01,  3.4388e-01,
         -6.9982e-03,  4.2889e-01, -4.6010e-02,  1.0237e-01,  3.6734e-01,
         -4.4140e-01,  1.7301e-01,  5.6378e-01, -2.3301e-02, -7.0582e-02,
          1.4614e-01, -4.2265e-02, -2.9243e-01, -1.6488e-01,  1.0266e-02,
          1.8141e-01, -1.4153e-02,  2.0371e-01, -1.4417e-01,  3.0786e-01,
         -1.9103e-01, -2.3958e-01, -5.1697e-01,  2.2873e-01,  1.8347e-01,
          4.4801e-02, -2.5332e-02, -6.6131e-02,  1.9487e-01,  1.0503e-01,
         -1.8045e-01, -1.8213e-01, -3.1784e-01,  5.6369e-02,  1.7219e-02,
          1.0130e-01,  6.7343e-02, -6.5367e-02,  3.9664e-02,  1.0812e-01,
         -2.6604e-01,  4.2626e-01,  1.7346e-01,  1.1702e-01,  3.8477e-01,
         -4.0643e-01,  1.5191e-01,  5.0955e-02,  2.1333e-01,  1.8261e-01,
          3.3479e-01,  3.0225e-01,  1.0356e-01, -1.3099e-01, -1.2108e-02,
         -6.2535e-02,  1.4694e-03, -1.2605e-01, -1.7250e-01, -3.1635e-01,
         -1.5586e-01,  1.8634e-01,  1.0943e-01, -6.2329e-02,  3.0746e-02,
         -2.4644e-01, -1.5309e-01, -9.5759e-02, -6.0048e-02, -3.4296e-01,
         -4.6749e-02,  9.6188e-02,  4.3388e-02,  1.1436e-04,  3.9614e-02,
          6.5469e-02, -5.0025e-02, -2.4629e-02, -8.2832e-02,  9.4550e-02,
          3.3474e-01,  1.3382e-01,  1.3735e-01,  2.0733e-01, -2.5527e-01,
          1.1926e-01, -1.6130e-01, -1.8609e-02,  7.9136e-02,  1.7303e-01,
          4.8784e-01, -3.2457e-01, -1.6895e-01, -6.3078e-02, -4.3319e-02,
         -1.4180e-01,  1.3610e-01, -8.5457e-02, -6.6281e-02,  2.1715e-01,
         -3.1528e-02,  8.0198e-02, -2.5664e-02, -1.4950e-01,  2.3974e-01,
         -1.2099e-01]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
448000 特征值优化 tensor(0.8837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7303e+00, -1.1913e-01, -2.4567e-01, -1.0100e+00,  1.9673e+00,
          2.2605e+00, -1.4916e+00,  1.1704e+00,  5.1043e-01, -1.0538e-01,
         -1.4098e-01,  1.2440e+00,  2.3333e-01,  1.3543e-01,  7.8967e-01,
          5.7395e-01,  3.4651e-01,  4.6819e-02,  1.2233e-01, -1.6187e+00,
         -4.7061e-01,  2.8467e-01, -3.3481e-01,  6.8356e-01, -7.0557e-01,
          5.8912e-01,  1.3545e-01,  1.9408e-02,  4.0287e-01,  2.0430e-01,
          2.7292e-01,  6.7587e-02, -3.3403e-01,  1.3487e-01, -1.1444e-01,
          3.6046e-02,  1.8728e-02, -1.6871e-01,  4.2818e-02,  2.3751e-01,
          3.4376e-01,  4.0588e-02, -1.3122e-01,  3.9016e-01, -3.8320e-01,
          1.1615e-01, -1.0520e-01, -4.0148e-01,  9.5300e-02,  1.8653e-01,
         -3.1956e-01, -3.9732e-01, -3.6414e-01, -2.2019e-01,  3.4257e-01,
          8.6866e-03,  4.1942e-01, -6.5350e-02,  1.0437e-01,  3.6784e-01,
         -4.5415e-01,  1.4843e-01,  5.6116e-01, -2.0868e-03, -9.9829e-02,
          1.6209e-01, -3.9000e-02, -3.0913e-01, -1.7827e-01,  7.2768e-03,
          1.8737e-01, -2.4900e-02,  2.0448e-01, -1.3024e-01,  3.0001e-01,
         -1.7406e-01, -2.5607e-01, -5.2529e-01,  2.6066e-01,  1.7952e-01,
          5.0974e-02, -2.7042e-02, -7.1847e-02,  1.8491e-01,  9.6327e-02,
         -1.9837e-01, -1.6611e-01, -3.1033e-01,  6.6346e-02,  1.5400e-02,
          8.3208e-02,  7.7572e-02, -1.0621e-01,  3.0402e-02,  1.0029e-01,
         -2.7060e-01,  4.4255e-01,  1.6695e-01,  1.4651e-01,  3.8759e-01,
         -4.2382e-01,  1.5647e-01,  4.9338e-02,  2.0824e-01,  1.7395e-01,
          3.5674e-01,  2.8296e-01,  1.0893e-01, -1.4672e-01, -1.2753e-02,
         -6.0757e-02, -2.3843e-03, -1.2680e-01, -1.7367e-01, -3.2509e-01,
         -1.4773e-01,  1.8082e-01,  1.0705e-01, -7.0814e-02,  4.7784e-02,
         -2.5365e-01, -1.4398e-01, -8.3055e-02, -6.8438e-02, -3.4004e-01,
         -4.4507e-02,  9.4039e-02,  4.4215e-02, -1.6255e-03,  4.3227e-02,
          5.1755e-02, -4.8351e-02, -2.5254e-02, -7.9881e-02,  9.8274e-02,
          3.3303e-01,  1.5466e-01,  1.4657e-01,  1.7121e-01, -2.6014e-01,
          1.0787e-01, -1.5101e-01,  3.4606e-03,  6.6568e-02,  1.8325e-01,
          4.9402e-01, -3.2853e-01, -1.7926e-01, -9.5900e-02, -4.5125e-02,
         -1.5204e-01,  1.4159e-01, -5.9760e-02, -4.8805e-02,  2.2612e-01,
         -1.7678e-02,  7.8688e-02,  5.4690e-04, -1.5335e-01,  2.3379e-01,
         -1.3060e-01]], device='cuda:0') tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
449000 特征值优化 tensor(0.9540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6344e+00, -1.4313e-01, -2.3024e-01, -1.0110e+00,  1.9576e+00,
          2.2905e+00, -1.5052e+00,  1.1806e+00,  4.9395e-01, -1.3873e-01,
         -1.6600e-01,  1.2344e+00,  2.3731e-01,  9.4406e-02,  7.9266e-01,
          5.4180e-01,  3.4776e-01,  4.4367e-02,  1.3149e-01, -1.6469e+00,
         -4.6874e-01,  2.6848e-01, -3.3793e-01,  6.8369e-01, -7.0728e-01,
          5.6809e-01,  1.4006e-01,  3.7823e-02,  3.8345e-01,  2.2179e-01,
          2.8836e-01,  5.1251e-02, -3.4193e-01,  1.5995e-01, -1.0900e-01,
          2.3030e-02,  2.0186e-02, -1.5641e-01,  4.4052e-02,  2.3821e-01,
          3.2780e-01,  3.9969e-02, -1.3112e-01,  3.8929e-01, -3.8971e-01,
          9.0431e-02, -8.7174e-02, -4.1267e-01,  8.8218e-02,  1.5847e-01,
         -3.0776e-01, -3.8430e-01, -3.6820e-01, -2.3398e-01,  3.5050e-01,
          1.6123e-02,  4.1592e-01, -6.2544e-02,  8.7604e-02,  3.7723e-01,
         -4.6117e-01,  1.5244e-01,  5.5752e-01,  7.2282e-03, -9.5817e-02,
          1.5561e-01, -3.2387e-02, -3.2595e-01, -1.8620e-01,  8.0750e-03,
          1.9920e-01, -3.8242e-02,  1.9872e-01, -1.3577e-01,  2.9617e-01,
         -1.6696e-01, -2.5928e-01, -5.1545e-01,  2.6724e-01,  1.8398e-01,
          5.3283e-02, -2.2697e-02, -6.7129e-02,  1.8231e-01,  1.0449e-01,
         -1.9224e-01, -1.5390e-01, -3.1284e-01,  4.4848e-02,  2.8711e-02,
          7.1574e-02,  9.2530e-02, -1.1717e-01,  2.7546e-02,  9.7559e-02,
         -2.7690e-01,  4.4166e-01,  1.7471e-01,  1.5885e-01,  4.2169e-01,
         -4.5702e-01,  1.4164e-01,  7.6980e-02,  2.0605e-01,  1.6809e-01,
          3.9486e-01,  2.5992e-01,  1.2932e-01, -1.5791e-01, -1.0651e-02,
         -5.4397e-02, -1.8387e-02, -1.4792e-01, -1.7531e-01, -3.2705e-01,
         -1.0282e-01,  1.8130e-01,  1.1834e-01, -7.5892e-02,  6.9457e-02,
         -2.3990e-01, -1.4008e-01, -8.2279e-02, -8.1176e-02, -3.2015e-01,
         -4.1678e-02,  9.4474e-02,  5.8252e-02, -1.6606e-02,  4.9062e-02,
          3.9362e-02, -5.1611e-02, -1.5175e-02, -8.5204e-02,  8.9024e-02,
          3.1586e-01,  1.5427e-01,  1.4197e-01,  1.7330e-01, -2.6545e-01,
          1.0992e-01, -1.4570e-01, -2.4892e-03,  7.2856e-02,  1.7193e-01,
          4.9597e-01, -3.4139e-01, -1.8857e-01, -1.0490e-01, -5.1731e-02,
         -1.6161e-01,  1.4159e-01, -4.3145e-02, -5.2191e-02,  2.3038e-01,
          6.9122e-06,  7.0047e-02,  1.9150e-02, -1.5085e-01,  2.2644e-01,
         -1.2811e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
450000 特征值优化 tensor(0.8645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5448, -0.1679, -0.2200, -1.0104,  2.0644,  2.3400, -1.5790,  1.2111,
          0.4675, -0.1921, -0.1950,  1.2040,  0.2507,  0.0957,  0.7501,  0.4812,
          0.3002,  0.0496,  0.1331, -1.6765, -0.4754,  0.2424, -0.3501,  0.6615,
         -0.7181,  0.5463,  0.1515,  0.0575,  0.3694,  0.2471,  0.3013,  0.0534,
         -0.3520,  0.1781, -0.1004,  0.0347,  0.0231, -0.1225,  0.0444,  0.2260,
          0.3131,  0.0407, -0.1358,  0.3925, -0.4115,  0.0768, -0.0604, -0.4104,
          0.0811,  0.1470, -0.3167, -0.3600, -0.3707, -0.2627,  0.3579,  0.0286,
          0.4183, -0.0837,  0.0971,  0.3696, -0.4760,  0.1592,  0.5407,  0.0122,
         -0.0920,  0.1635, -0.0259, -0.3287, -0.1856,  0.0113,  0.2081, -0.0537,
          0.1886, -0.1568,  0.2812, -0.1733, -0.2654, -0.5121,  0.2897,  0.1960,
          0.0600, -0.0185, -0.0657,  0.1852,  0.0959, -0.1693, -0.1221, -0.3143,
          0.0523,  0.0585,  0.0602,  0.1022, -0.1072,  0.0400,  0.0968, -0.2760,
          0.4369,  0.1747,  0.1684,  0.4465, -0.4899,  0.1282,  0.1031,  0.2149,
          0.1569,  0.4191,  0.2254,  0.1549, -0.2005, -0.0058, -0.0487, -0.0310,
         -0.1429, -0.1704, -0.3229, -0.0830,  0.1921,  0.1368, -0.0754,  0.0683,
         -0.2346, -0.1273, -0.1199, -0.0957, -0.3029, -0.0316,  0.0939,  0.0636,
         -0.0196,  0.0619,  0.0364, -0.0469, -0.0212, -0.0987,  0.0742,  0.2891,
          0.1566,  0.1230,  0.1826, -0.2750,  0.1101, -0.1545, -0.0209,  0.0651,
          0.1445,  0.4912, -0.3395, -0.1946, -0.1229, -0.0462, -0.1725,  0.1429,
         -0.0235, -0.0539,  0.2321,  0.0128,  0.0520,  0.0455, -0.1635,  0.2149,
         -0.1255]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
451000 特征值优化 tensor(0.9714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4270e+00, -1.8897e-01, -2.3243e-01, -1.0109e+00,  2.0621e+00,
          2.4034e+00, -1.5907e+00,  1.2578e+00,  4.7895e-01, -2.4410e-01,
         -2.1130e-01,  1.1919e+00,  2.3417e-01,  6.5196e-02,  7.4060e-01,
          4.1226e-01,  3.1148e-01,  4.2948e-02,  1.4090e-01, -1.6823e+00,
         -4.5024e-01,  2.2114e-01, -3.5522e-01,  6.5090e-01, -7.0995e-01,
          5.3144e-01,  1.6188e-01,  6.6842e-02,  3.4833e-01,  2.5032e-01,
          2.9429e-01,  5.0912e-02, -3.5730e-01,  2.2197e-01, -8.3203e-02,
          3.3630e-02,  1.8931e-02, -1.1114e-01,  5.4322e-02,  2.2489e-01,
          3.0658e-01,  3.9457e-02, -1.3209e-01,  3.9473e-01, -4.1375e-01,
          4.2200e-02, -4.7172e-02, -4.0611e-01,  6.7582e-02,  1.4498e-01,
         -3.1201e-01, -3.5912e-01, -3.8890e-01, -2.6586e-01,  3.5936e-01,
          2.7724e-02,  3.9517e-01, -8.2896e-02,  8.0163e-02,  3.6669e-01,
         -4.6152e-01,  1.2362e-01,  5.3739e-01,  3.1855e-02, -1.0905e-01,
          1.6357e-01, -2.1665e-02, -3.3227e-01, -1.8655e-01,  8.2322e-04,
          2.3424e-01, -6.9208e-02,  1.7179e-01, -1.7832e-01,  2.9065e-01,
         -1.5822e-01, -2.6112e-01, -5.0599e-01,  3.1529e-01,  2.0201e-01,
          4.5991e-02, -9.9348e-03, -5.5983e-02,  1.8590e-01,  9.5913e-02,
         -1.8177e-01, -1.1510e-01, -3.0459e-01,  6.5741e-02,  5.0844e-02,
          5.6504e-02,  1.0385e-01, -7.7109e-02,  3.5383e-02,  9.4475e-02,
         -2.7684e-01,  4.4386e-01,  1.6287e-01,  2.0366e-01,  4.5890e-01,
         -5.1627e-01,  1.1126e-01,  1.4285e-01,  2.1677e-01,  1.5926e-01,
          4.4095e-01,  2.1809e-01,  1.7648e-01, -2.6227e-01,  4.5773e-03,
         -4.5038e-02, -3.5683e-02, -1.3820e-01, -1.6979e-01, -3.1926e-01,
         -7.8263e-02,  1.7688e-01,  1.4166e-01, -6.8223e-02,  7.7470e-02,
         -2.3129e-01, -1.4819e-01, -1.0235e-01, -1.0988e-01, -2.8967e-01,
         -2.0925e-02,  8.8780e-02,  7.0959e-02, -2.1486e-03,  5.9491e-02,
          2.2775e-02, -4.0202e-02, -1.4586e-02, -9.1453e-02,  7.6008e-02,
          2.5736e-01,  1.6558e-01,  1.3078e-01,  1.8081e-01, -3.0020e-01,
          8.8930e-02, -1.3034e-01, -1.1670e-02,  6.4928e-02,  1.2883e-01,
          4.8958e-01, -3.3943e-01, -1.9225e-01, -1.2404e-01, -5.4225e-02,
         -1.8810e-01,  1.3588e-01, -4.5657e-03, -5.6596e-02,  2.4188e-01,
          7.3667e-03,  5.3752e-02,  5.6655e-02, -1.5994e-01,  1.9483e-01,
         -1.1580e-01]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
452000 特征值优化 tensor(0.8853, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2879e+00, -2.2282e-01, -2.2889e-01, -1.0147e+00,  2.1444e+00,
          2.4247e+00, -1.6180e+00,  1.2916e+00,  4.8212e-01, -2.9978e-01,
         -2.2043e-01,  1.1674e+00,  2.2213e-01,  7.0446e-02,  7.0476e-01,
          4.4317e-01,  3.4545e-01,  4.8043e-02,  1.4551e-01, -1.6885e+00,
         -4.3199e-01,  2.1598e-01, -3.5633e-01,  6.2913e-01, -7.2401e-01,
          5.3721e-01,  1.7867e-01,  7.7929e-02,  3.1665e-01,  2.4863e-01,
          3.1373e-01,  3.4704e-02, -3.5835e-01,  2.5394e-01, -7.5229e-02,
          3.4085e-02,  1.1787e-02, -1.1000e-01,  4.9774e-02,  2.3057e-01,
          2.9495e-01,  4.6695e-02, -1.3316e-01,  3.9537e-01, -4.1567e-01,
          2.5405e-02, -3.5466e-02, -4.1086e-01,  2.9854e-02,  1.4161e-01,
         -3.0631e-01, -3.5385e-01, -3.9839e-01, -2.6338e-01,  3.7908e-01,
          3.9878e-02,  3.9138e-01, -9.0566e-02,  7.9967e-02,  3.6391e-01,
         -4.6308e-01,  6.6924e-02,  5.2990e-01,  5.0204e-02, -1.2095e-01,
          1.7734e-01, -7.2764e-03, -3.2929e-01, -1.9289e-01, -8.4548e-03,
          2.5214e-01, -8.4467e-02,  1.7187e-01, -1.8942e-01,  2.8431e-01,
         -1.6069e-01, -2.8084e-01, -4.7370e-01,  3.2189e-01,  2.0549e-01,
          6.7185e-02,  1.9994e-03, -5.1611e-02,  1.7780e-01,  8.7531e-02,
         -1.8394e-01, -1.2450e-01, -2.9166e-01,  3.1916e-02,  4.2842e-02,
          5.2429e-02,  9.4578e-02, -4.6101e-02,  6.1958e-02,  1.0603e-01,
         -2.7298e-01,  4.4660e-01,  1.9661e-01,  1.9078e-01,  4.9183e-01,
         -5.1042e-01,  1.0861e-01,  1.4746e-01,  2.1895e-01,  1.5945e-01,
          4.5722e-01,  2.1013e-01,  1.8813e-01, -2.6204e-01,  1.6746e-02,
         -4.5199e-02, -4.5665e-02, -1.2569e-01, -1.7323e-01, -3.1440e-01,
         -1.0018e-01,  1.6627e-01,  1.5017e-01, -5.6026e-02,  7.1023e-02,
         -2.1609e-01, -1.2361e-01, -9.5858e-02, -1.0802e-01, -2.7380e-01,
         -3.0573e-03,  9.0552e-02,  6.4157e-02, -4.7190e-03,  6.0649e-02,
          1.2950e-02, -2.8235e-02, -8.3126e-03, -1.0250e-01,  6.3901e-02,
          2.4814e-01,  1.5203e-01,  1.1730e-01,  2.0213e-01, -2.9670e-01,
          7.8866e-02, -1.4105e-01, -2.1569e-02,  7.5567e-02,  1.0580e-01,
          4.8706e-01, -3.4601e-01, -1.9996e-01, -1.1372e-01, -7.9303e-02,
         -1.9880e-01,  1.3541e-01, -4.9063e-03, -5.2973e-02,  2.5279e-01,
          4.3379e-03,  5.8550e-02,  8.3390e-02, -1.6963e-01,  1.8491e-01,
         -1.0629e-01]], device='cuda:0') tensor(0.2216, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
453000 特征值优化 tensor(0.9451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1850, -0.2537, -0.2188, -1.0105,  2.1713,  2.4841, -1.6090,  1.2945,
          0.4836, -0.3380, -0.2013,  1.1370,  0.2181,  0.0371,  0.6516,  0.4266,
          0.3470,  0.0563,  0.1646, -1.6884, -0.4263,  0.2076, -0.3688,  0.6089,
         -0.7167,  0.5239,  0.1881,  0.0883,  0.3223,  0.2571,  0.3034,  0.0240,
         -0.3552,  0.2657, -0.0733,  0.0300,  0.0227, -0.0759,  0.0383,  0.2077,
          0.2826,  0.0404, -0.1301,  0.3968, -0.4232,  0.0212, -0.0263, -0.4073,
          0.0124,  0.1394, -0.3154, -0.3628, -0.4107, -0.2604,  0.3827,  0.0501,
          0.3695, -0.0963,  0.0706,  0.3741, -0.4617,  0.0556,  0.5216,  0.0594,
         -0.1391,  0.1870,  0.0229, -0.3224, -0.1695, -0.0159,  0.2630, -0.0909,
          0.1778, -0.2052,  0.2814, -0.1731, -0.2846, -0.4657,  0.3157,  0.2066,
          0.0554,  0.0042, -0.0566,  0.1896,  0.0898, -0.1832, -0.1153, -0.3034,
          0.0484,  0.0662,  0.0395,  0.0817, -0.0436,  0.0854,  0.0930, -0.2768,
          0.4620,  0.1696,  0.1896,  0.5087, -0.5212,  0.1056,  0.1704,  0.2290,
          0.1598,  0.4779,  0.2010,  0.2055, -0.2934,  0.0241, -0.0454, -0.0678,
         -0.1235, -0.1796, -0.3028, -0.0857,  0.1592,  0.1612, -0.0501,  0.0507,
         -0.2234, -0.1359, -0.1170, -0.1170, -0.2641,  0.0157,  0.0880,  0.0617,
          0.0059,  0.0613,  0.0025, -0.0266, -0.0074, -0.0953,  0.0693,  0.2219,
          0.1290,  0.1182,  0.2261, -0.3273,  0.0887, -0.1513, -0.0209,  0.0802,
          0.0827,  0.4816, -0.3496, -0.2043, -0.1328, -0.0783, -0.1971,  0.1307,
          0.0053, -0.0409,  0.2477,  0.0134,  0.0548,  0.0953, -0.1825,  0.1858,
         -0.1135]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
454000 特征值优化 tensor(0.8841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1065e+00, -2.6468e-01, -2.6398e-01, -1.0142e+00,  2.2002e+00,
          2.5045e+00, -1.6025e+00,  1.3075e+00,  4.8505e-01, -3.7860e-01,
         -1.8540e-01,  1.1052e+00,  2.0329e-01,  3.6371e-02,  6.4742e-01,
          4.6141e-01,  3.8275e-01,  6.7003e-02,  1.8326e-01, -1.6802e+00,
         -4.2534e-01,  2.0484e-01, -3.6966e-01,  6.0836e-01, -7.1054e-01,
          5.3561e-01,  1.8828e-01,  1.0652e-01,  3.0922e-01,  2.5153e-01,
          3.1428e-01,  2.4844e-02, -3.6282e-01,  2.7211e-01, -5.4971e-02,
          2.7195e-02,  2.1231e-03, -8.7563e-02,  4.1094e-02,  2.2206e-01,
          2.8232e-01,  4.1756e-02, -1.3040e-01,  3.7639e-01, -4.1067e-01,
          1.9172e-03, -3.5629e-02, -4.1071e-01,  1.5426e-03,  1.2452e-01,
         -3.2231e-01, -3.6280e-01, -4.2297e-01, -2.6959e-01,  3.8923e-01,
          4.8624e-02,  3.6948e-01, -1.0801e-01,  7.8444e-02,  3.8068e-01,
         -4.5119e-01,  2.5922e-02,  5.2095e-01,  7.3751e-02, -1.5478e-01,
          1.7801e-01,  2.1236e-02, -3.0252e-01, -1.6675e-01, -2.4833e-02,
          2.8237e-01, -1.0242e-01,  1.6433e-01, -1.9569e-01,  2.8666e-01,
         -1.5684e-01, -2.9277e-01, -4.5930e-01,  3.2552e-01,  2.0965e-01,
          6.4208e-02,  8.0882e-03, -4.9334e-02,  1.7933e-01,  1.0156e-01,
         -1.8993e-01, -1.0329e-01, -3.2110e-01,  2.2432e-02,  3.5786e-02,
          4.9000e-02,  8.4994e-02, -2.4400e-02,  7.7258e-02,  1.0052e-01,
         -2.6765e-01,  4.7077e-01,  1.7460e-01,  1.9516e-01,  5.1858e-01,
         -5.4735e-01,  9.9316e-02,  1.7399e-01,  2.3078e-01,  1.5783e-01,
          4.9459e-01,  1.9354e-01,  2.0678e-01, -2.9652e-01,  1.8542e-02,
         -5.8908e-02, -6.5153e-02, -1.0612e-01, -1.7847e-01, -3.0413e-01,
         -7.6784e-02,  1.4756e-01,  1.7860e-01, -3.3407e-02,  5.3284e-02,
         -2.2332e-01, -1.2077e-01, -1.0257e-01, -1.2341e-01, -2.5238e-01,
          2.7895e-02,  8.9584e-02,  6.8889e-02,  1.2903e-02,  5.7739e-02,
         -1.8608e-02, -2.4925e-02, -3.7466e-03, -9.4913e-02,  7.9326e-02,
          2.1898e-01,  1.4578e-01,  1.4140e-01,  2.1476e-01, -3.0893e-01,
          7.1438e-02, -1.4141e-01, -9.5163e-03,  8.4279e-02,  9.7467e-02,
          4.7035e-01, -3.3574e-01, -1.9934e-01, -1.1700e-01, -9.2340e-02,
         -2.0777e-01,  1.2153e-01,  1.7035e-02, -5.0759e-02,  2.4963e-01,
          2.4370e-03,  5.4910e-02,  1.1264e-01, -1.7347e-01,  1.6878e-01,
         -1.0427e-01]], device='cuda:0') tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
455000 特征值优化 tensor(0.9109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0127e+00, -2.6115e-01, -2.6300e-01, -1.0101e+00,  2.2756e+00,
          2.5220e+00, -1.6087e+00,  1.3146e+00,  4.6930e-01, -4.0149e-01,
         -1.8264e-01,  1.0926e+00,  2.0182e-01,  4.1319e-02,  6.3264e-01,
          4.7942e-01,  3.8624e-01,  5.4833e-02,  1.8689e-01, -1.6746e+00,
         -4.2085e-01,  2.0222e-01, -3.7339e-01,  5.9965e-01, -7.2165e-01,
          5.3188e-01,  1.7158e-01,  9.5595e-02,  3.0101e-01,  2.4155e-01,
          3.1254e-01,  2.2678e-02, -3.6590e-01,  2.9506e-01, -5.2012e-02,
          3.4081e-02,  4.7228e-03, -7.8308e-02,  4.6500e-02,  2.0649e-01,
          2.6555e-01,  3.9456e-02, -1.3158e-01,  3.8281e-01, -4.0675e-01,
         -1.6271e-02, -3.8879e-02, -4.1583e-01, -1.3595e-02,  1.1907e-01,
         -3.2731e-01, -3.6042e-01, -4.2834e-01, -2.6439e-01,  3.9569e-01,
          5.8384e-02,  3.4834e-01, -1.1097e-01,  7.1969e-02,  3.8209e-01,
         -4.4094e-01,  8.5499e-03,  5.0361e-01,  8.0281e-02, -1.5795e-01,
          1.7196e-01,  2.9279e-02, -3.0617e-01, -1.6805e-01, -2.5136e-02,
          2.8576e-01, -1.0137e-01,  1.5595e-01, -2.0335e-01,  2.8692e-01,
         -1.6271e-01, -2.9393e-01, -4.4129e-01,  3.0708e-01,  2.1157e-01,
          5.6245e-02,  1.2203e-02, -5.3671e-02,  1.6880e-01,  9.0516e-02,
         -1.8877e-01, -1.0505e-01, -3.1244e-01,  1.3275e-02,  4.0298e-02,
          3.6254e-02,  8.4036e-02, -2.9531e-02,  9.5999e-02,  1.0371e-01,
         -2.6549e-01,  4.7743e-01,  1.7802e-01,  2.1859e-01,  5.2889e-01,
         -5.4941e-01,  9.6945e-02,  1.5618e-01,  2.5120e-01,  1.6557e-01,
          5.0845e-01,  1.9651e-01,  2.1357e-01, -2.9633e-01,  2.0080e-02,
         -5.7579e-02, -6.5868e-02, -1.0009e-01, -1.7246e-01, -3.0246e-01,
         -8.7770e-02,  1.3461e-01,  1.8536e-01, -3.2194e-02,  4.9290e-02,
         -2.1952e-01, -1.2429e-01, -1.1186e-01, -1.2770e-01, -2.5117e-01,
          3.3600e-02,  8.6926e-02,  6.9998e-02,  1.0521e-02,  5.1046e-02,
         -1.5358e-02, -2.7638e-02,  3.0653e-04, -9.9812e-02,  7.3592e-02,
          2.2020e-01,  1.2993e-01,  1.1660e-01,  2.2773e-01, -3.1741e-01,
          7.3428e-02, -1.5201e-01, -2.2309e-02,  8.5908e-02,  8.2864e-02,
          4.7873e-01, -3.4284e-01, -2.0227e-01, -1.0206e-01, -8.8825e-02,
         -2.0708e-01,  1.3085e-01,  9.2764e-03, -5.0666e-02,  2.5828e-01,
          4.2545e-03,  4.4646e-02,  1.1959e-01, -1.7568e-01,  1.7903e-01,
         -1.0624e-01]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
456000 特征值优化 tensor(0.8609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9528e+00, -2.7193e-01, -2.7707e-01, -1.0101e+00,  2.3063e+00,
          2.5511e+00, -1.5795e+00,  1.3286e+00,  5.0205e-01, -4.1422e-01,
         -1.8056e-01,  1.0848e+00,  1.9375e-01,  8.3670e-03,  6.2731e-01,
          4.4731e-01,  4.0641e-01,  6.6527e-02,  1.8967e-01, -1.6753e+00,
         -4.0178e-01,  2.0016e-01, -3.8474e-01,  5.9470e-01, -7.0616e-01,
          5.2423e-01,  1.9299e-01,  1.1984e-01,  3.0159e-01,  2.3062e-01,
          3.1239e-01,  1.7242e-02, -3.5704e-01,  2.9315e-01, -3.8110e-02,
          2.6733e-02,  1.1036e-02, -8.6791e-02,  6.0604e-02,  2.1002e-01,
          2.7200e-01,  4.2729e-02, -1.3109e-01,  3.7921e-01, -4.0146e-01,
         -2.6537e-02, -4.0480e-02, -4.1141e-01,  1.1161e-04,  1.1640e-01,
         -3.2089e-01, -3.6024e-01, -4.2711e-01, -2.6730e-01,  3.9080e-01,
          5.1406e-02,  3.7071e-01, -1.3149e-01,  6.2649e-02,  3.8473e-01,
         -4.2992e-01, -6.6366e-03,  4.8994e-01,  9.1026e-02, -1.6330e-01,
          1.6867e-01,  2.1082e-02, -3.1484e-01, -1.6914e-01, -4.0964e-02,
          2.9906e-01, -1.1522e-01,  1.5227e-01, -1.9828e-01,  2.8685e-01,
         -1.3686e-01, -3.0545e-01, -4.5778e-01,  3.3129e-01,  1.9623e-01,
          5.5218e-02,  4.6292e-03, -4.1636e-02,  1.8040e-01,  8.0587e-02,
         -1.9909e-01, -8.8287e-02, -3.1219e-01,  2.1161e-02,  3.2782e-02,
          3.6364e-02,  8.6545e-02, -2.1520e-02,  6.6462e-02,  1.0174e-01,
         -2.6477e-01,  4.9018e-01,  1.9018e-01,  2.1760e-01,  5.4056e-01,
         -5.8088e-01,  8.5837e-02,  1.7593e-01,  2.4698e-01,  1.5522e-01,
          5.0701e-01,  1.9003e-01,  2.1540e-01, -3.0609e-01,  1.6018e-02,
         -6.4527e-02, -7.1247e-02, -9.5759e-02, -1.7947e-01, -3.0757e-01,
         -7.2800e-02,  1.3952e-01,  1.7573e-01, -3.7153e-02,  6.3659e-02,
         -2.2240e-01, -1.4571e-01, -9.2307e-02, -1.2713e-01, -2.4651e-01,
          4.0599e-02,  7.2995e-02,  6.7620e-02,  9.4028e-03,  4.6490e-02,
         -2.0345e-02, -1.0434e-02,  3.9070e-03, -8.6016e-02,  7.8249e-02,
          2.0887e-01,  1.5271e-01,  1.3980e-01,  2.0645e-01, -3.1385e-01,
          4.6344e-02, -1.2274e-01,  6.2668e-03,  8.6256e-02,  1.0712e-01,
          4.8463e-01, -3.4819e-01, -2.0439e-01, -1.2003e-01, -9.7939e-02,
         -2.1645e-01,  1.3478e-01,  4.5309e-03, -6.3512e-02,  2.6167e-01,
         -1.3010e-03,  6.5597e-02,  1.1168e-01, -1.7477e-01,  1.6870e-01,
         -9.7956e-02]], device='cuda:0') tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
457000 特征值优化 tensor(0.8784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8604e+00, -3.0128e-01, -2.6586e-01, -1.0158e+00,  2.3682e+00,
          2.5687e+00, -1.5647e+00,  1.3299e+00,  5.0022e-01, -4.2785e-01,
         -1.7533e-01,  1.0895e+00,  1.9530e-01, -9.3746e-04,  6.2459e-01,
          4.6689e-01,  4.0711e-01,  7.9558e-02,  2.0577e-01, -1.6741e+00,
         -3.9486e-01,  2.1159e-01, -3.8115e-01,  5.8693e-01, -7.1202e-01,
          5.2413e-01,  1.9972e-01,  1.1594e-01,  2.9812e-01,  2.3561e-01,
          3.0695e-01,  1.0434e-02, -3.5361e-01,  2.9506e-01, -4.4112e-02,
          1.6957e-02,  1.2842e-04, -8.3525e-02,  5.3492e-02,  2.1082e-01,
          2.6676e-01,  4.5105e-02, -1.3019e-01,  3.7430e-01, -3.9850e-01,
         -1.6195e-02, -4.0516e-02, -4.0666e-01, -1.1395e-02,  1.0869e-01,
         -3.1595e-01, -3.4883e-01, -4.3578e-01, -2.5797e-01,  3.9850e-01,
          5.7819e-02,  3.6491e-01, -1.1644e-01,  7.3016e-02,  3.8754e-01,
         -4.3667e-01, -8.0290e-03,  4.7973e-01,  9.7995e-02, -1.6883e-01,
          1.7428e-01,  1.6763e-02, -2.9762e-01, -1.6632e-01, -5.2843e-02,
          3.0480e-01, -1.2169e-01,  1.4798e-01, -1.9653e-01,  2.8245e-01,
         -1.4860e-01, -3.1121e-01, -4.5355e-01,  3.1918e-01,  2.0465e-01,
          6.8129e-02,  1.1431e-02, -4.9475e-02,  1.8055e-01,  7.3226e-02,
         -1.9765e-01, -8.7397e-02, -3.1958e-01,  4.9847e-03,  2.8490e-02,
          4.7485e-02,  7.4788e-02, -1.4678e-02,  7.9733e-02,  1.1686e-01,
         -2.6858e-01,  5.0319e-01,  1.8133e-01,  2.0023e-01,  5.5386e-01,
         -5.5687e-01,  7.9087e-02,  2.0167e-01,  2.4017e-01,  1.4819e-01,
          5.4301e-01,  1.9884e-01,  2.1212e-01, -3.1397e-01,  1.6835e-02,
         -6.6129e-02, -6.1437e-02, -8.1907e-02, -1.7186e-01, -3.0295e-01,
         -7.7035e-02,  1.4717e-01,  1.8886e-01, -3.9884e-02,  5.0403e-02,
         -2.2729e-01, -1.3150e-01, -1.0154e-01, -1.3393e-01, -2.3137e-01,
          4.7596e-02,  6.8474e-02,  7.6129e-02,  1.5375e-02,  4.5096e-02,
         -2.8801e-02, -6.8178e-03,  8.8095e-03, -9.0558e-02,  7.5721e-02,
          2.1215e-01,  1.1368e-01,  1.3440e-01,  2.2547e-01, -3.1361e-01,
          7.0158e-02, -1.2769e-01, -7.3468e-03,  7.9590e-02,  1.0229e-01,
          4.7609e-01, -3.4805e-01, -2.0773e-01, -1.1852e-01, -1.1356e-01,
         -2.1698e-01,  1.2392e-01,  9.7143e-03, -4.3975e-02,  2.5714e-01,
         -5.4319e-03,  5.9550e-02,  1.2148e-01, -1.8009e-01,  1.6752e-01,
         -9.7441e-02]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
458000 特征值优化 tensor(0.8741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7935e+00, -3.0301e-01, -2.6874e-01, -1.0111e+00,  2.4074e+00,
          2.5874e+00, -1.5295e+00,  1.3425e+00,  4.9385e-01, -4.2703e-01,
         -1.7218e-01,  1.0760e+00,  1.9525e-01,  1.0183e-02,  6.1342e-01,
          4.6586e-01,  4.1308e-01,  8.7435e-02,  2.1608e-01, -1.6750e+00,
         -4.0485e-01,  2.0173e-01, -3.7902e-01,  5.9552e-01, -6.9076e-01,
          5.2887e-01,  2.0509e-01,  1.2112e-01,  3.1180e-01,  2.3052e-01,
          2.9911e-01,  1.6265e-02, -3.6268e-01,  2.9278e-01, -4.0464e-02,
          9.0480e-03, -2.6926e-03, -7.7176e-02,  5.5973e-02,  2.0255e-01,
          2.6447e-01,  4.2542e-02, -1.2813e-01,  3.7202e-01, -3.9400e-01,
         -1.9646e-02, -3.7997e-02, -4.1006e-01, -1.6677e-02,  1.0897e-01,
         -3.1380e-01, -3.5351e-01, -4.3209e-01, -2.5512e-01,  3.9974e-01,
          6.6713e-02,  3.6908e-01, -1.2820e-01,  7.0396e-02,  3.9209e-01,
         -4.3184e-01, -1.8674e-02,  4.7679e-01,  9.3975e-02, -1.6583e-01,
          1.7413e-01,  2.3759e-02, -2.9509e-01, -1.6085e-01, -5.9340e-02,
          3.0859e-01, -1.2350e-01,  1.4196e-01, -1.9122e-01,  2.8711e-01,
         -1.5179e-01, -3.2299e-01, -4.5401e-01,  3.2010e-01,  2.0127e-01,
          6.0808e-02,  6.2729e-03, -4.3153e-02,  1.7952e-01,  7.5070e-02,
         -2.0521e-01, -8.7758e-02, -3.2611e-01,  2.8779e-02,  3.8594e-02,
          4.1241e-02,  7.9165e-02, -1.4340e-02,  7.3824e-02,  1.0860e-01,
         -2.6842e-01,  5.1291e-01,  1.9484e-01,  2.2383e-01,  5.6757e-01,
         -5.6558e-01,  8.1850e-02,  2.0455e-01,  2.4765e-01,  1.5264e-01,
          5.2606e-01,  2.0723e-01,  2.0755e-01, -3.1613e-01,  1.6910e-02,
         -6.4574e-02, -5.8742e-02, -7.4245e-02, -1.7744e-01, -3.0540e-01,
         -7.2284e-02,  1.3473e-01,  1.9421e-01, -4.1856e-02,  3.8446e-02,
         -2.3021e-01, -1.3658e-01, -1.0480e-01, -1.3717e-01, -2.2931e-01,
          5.2401e-02,  6.7034e-02,  7.8252e-02,  1.5179e-02,  4.7753e-02,
         -2.5929e-02, -1.2850e-02,  1.0422e-02, -9.1275e-02,  7.5270e-02,
          2.0976e-01,  1.1921e-01,  1.4191e-01,  2.0800e-01, -3.1462e-01,
          6.5518e-02, -1.2195e-01,  1.9856e-03,  8.1900e-02,  9.6769e-02,
          4.7167e-01, -3.5024e-01, -2.0916e-01, -1.1683e-01, -1.1612e-01,
         -2.2576e-01,  1.2868e-01,  1.3967e-02, -5.3682e-02,  2.5324e-01,
         -4.1875e-03,  5.6858e-02,  1.2406e-01, -1.8242e-01,  1.5924e-01,
         -9.1603e-02]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
459000 特征值优化 tensor(0.8779, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7418e+00, -3.2714e-01, -2.7389e-01, -1.0154e+00,  2.4376e+00,
          2.6023e+00, -1.5174e+00,  1.3637e+00,  5.0396e-01, -4.3734e-01,
         -1.7898e-01,  1.0820e+00,  1.9968e-01,  2.5087e-02,  6.0370e-01,
          4.6530e-01,  3.9597e-01,  9.6986e-02,  2.2922e-01, -1.6904e+00,
         -3.9723e-01,  2.1451e-01, -3.7808e-01,  6.0117e-01, -6.8591e-01,
          5.3960e-01,  1.8767e-01,  1.0741e-01,  3.1079e-01,  2.2363e-01,
          3.0180e-01,  2.4478e-02, -3.5777e-01,  2.9815e-01, -3.4445e-02,
          6.7754e-03,  2.5520e-03, -6.5818e-02,  4.8536e-02,  1.9682e-01,
          2.6937e-01,  4.3939e-02, -1.3102e-01,  3.7641e-01, -3.8827e-01,
         -1.7586e-02, -2.8203e-02, -4.1715e-01, -2.6735e-02,  1.2498e-01,
         -3.1358e-01, -3.4393e-01, -4.4876e-01, -2.4479e-01,  4.0251e-01,
          6.1480e-02,  3.5936e-01, -1.1748e-01,  5.6235e-02,  3.9225e-01,
         -4.2238e-01, -8.7237e-03,  4.7245e-01,  9.2871e-02, -1.6960e-01,
          1.5600e-01,  4.0291e-02, -2.9476e-01, -1.6379e-01, -6.0631e-02,
          3.0249e-01, -1.1638e-01,  1.3440e-01, -2.1237e-01,  3.0159e-01,
         -1.6454e-01, -3.1672e-01, -4.4162e-01,  3.1054e-01,  2.1396e-01,
          5.4344e-02,  9.1161e-03, -5.1153e-02,  1.6712e-01,  8.8500e-02,
         -1.9803e-01, -9.5169e-02, -3.3202e-01,  2.0831e-02,  3.9813e-02,
          4.4876e-02,  6.2175e-02, -1.3131e-02,  8.3497e-02,  1.0574e-01,
         -2.6614e-01,  5.1118e-01,  1.7928e-01,  2.1166e-01,  5.7889e-01,
         -5.7592e-01,  8.6814e-02,  1.9832e-01,  2.7249e-01,  1.6888e-01,
          5.3808e-01,  2.1212e-01,  2.2084e-01, -3.1141e-01,  1.0179e-02,
         -6.8148e-02, -5.2080e-02, -7.6144e-02, -1.7183e-01, -2.9892e-01,
         -7.3463e-02,  1.2121e-01,  2.1257e-01, -3.4559e-02,  4.0198e-02,
         -2.2407e-01, -1.2479e-01, -1.1468e-01, -1.5122e-01, -2.2443e-01,
          5.5168e-02,  7.6419e-02,  8.0187e-02,  2.0004e-02,  5.1146e-02,
         -2.9367e-02, -2.2649e-02,  5.1276e-03, -9.9193e-02,  6.8241e-02,
          1.9153e-01,  1.1981e-01,  1.4148e-01,  2.1141e-01, -3.2629e-01,
          7.2595e-02, -1.2889e-01,  1.2044e-02,  1.0131e-01,  7.9397e-02,
          4.5912e-01, -3.3469e-01, -2.0623e-01, -1.1065e-01, -1.1429e-01,
         -2.1844e-01,  1.2405e-01,  2.3402e-02, -4.1903e-02,  2.4070e-01,
         -2.2490e-03,  4.9093e-02,  1.2753e-01, -1.8306e-01,  1.6705e-01,
         -9.7249e-02]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
460000 特征值优化 tensor(17.0559, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6740,  0.9391,  1.5535,  0.1672,  0.6067,  0.9791,  0.1186,  1.8711,
         -0.4176, -0.1054,  0.7745, -0.0347, -0.4732,  0.3988, -0.0355, -0.7556,
         -0.6467, -0.8301, -0.0968, -1.7971,  0.3104,  2.4149, -0.0620,  0.5760,
          0.0904, -0.2787, -0.8882,  0.1357,  0.5838, -0.2024,  0.0878,  0.6917,
          0.3820,  0.4524, -1.0134, -0.3455,  0.4288,  0.0230,  0.0756,  0.5098,
          0.3874, -0.2566,  0.0525, -0.5704, -0.7606, -0.0026,  0.0619,  0.0107,
         -0.2569,  1.9370,  0.5208, -0.8586, -0.3495, -0.6037,  0.0545, -0.2387,
         -0.0118,  0.9224,  0.3993, -0.1913,  0.0079, -0.8863, -0.4963,  0.5714,
         -0.3261,  2.0605,  0.1121,  1.3342, -0.1087, -0.1616,  0.1452, -0.1763,
          0.0786, -0.1627,  0.0457,  0.0720, -0.1328,  0.4071, -0.1516,  0.1939,
         -0.2576,  1.0270, -0.1167, -0.5683, -0.0746,  0.8820, -0.3822,  0.4976,
         -0.1384, -0.9420, -0.0221,  0.1155,  0.3122, -0.6181,  0.5219, -0.5073,
         -0.5053, -0.3176,  0.0160, -0.2680,  0.6780,  0.7158,  0.3763, -0.5852,
         -0.0411,  0.6920, -0.7030,  0.3304, -0.8485,  0.6342, -0.1355, -0.3363,
          0.1184,  0.0280, -0.4068, -0.7928,  0.1687,  0.0243, -0.0457, -0.5332,
         -0.0792,  0.3543,  0.8395,  0.0336,  0.0443,  1.0798, -0.1098,  0.1309,
          0.0088, -0.4517,  0.4472,  0.0368, -0.0360, -0.7743, -0.3046,  0.4115,
         -0.7427, -0.3585,  0.1558,  0.2314, -0.6865,  0.0751,  1.0146, -0.5981,
          0.2695,  2.0185, -0.4976,  0.0945, -0.1089, -0.7547, -0.1145, -0.8607,
         -0.3428, -0.0552,  0.2505,  0.4340,  0.9762,  0.4613, -0.2296, -0.1876,
          1.0454]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
461000 特征值优化 tensor(2.0200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0698e-01,  1.2159e+00,  3.0387e-01, -7.2450e-01,  6.8841e-01,
          1.1364e+00,  1.3070e-01,  1.3745e+00,  5.6924e-01, -1.6573e-01,
          3.5594e-02, -3.6736e-02,  9.0419e-02, -1.8665e-01, -4.4547e-02,
         -4.3813e-01, -8.5555e-02, -4.1421e-01, -5.4683e-01, -8.8184e-01,
          2.6901e-01,  1.2353e+00, -1.7487e-01,  1.9820e-01,  3.9621e-01,
         -1.1506e-01, -2.4782e-01,  1.3733e-01,  3.7984e-02, -5.4299e-02,
          2.0737e-01,  1.2823e-01, -2.7682e-02,  1.8692e-01, -7.4190e-01,
          1.2811e-02,  4.2334e-01,  2.1025e-01,  4.6296e-01,  2.4860e-01,
          7.2531e-02,  3.1473e-03,  6.6367e-02, -7.2913e-02, -3.7883e-01,
          3.3284e-02, -1.1448e-02,  2.3002e-02,  2.1623e-02,  1.2931e+00,
          7.3745e-02, -3.3152e-01,  4.0882e-02, -3.4194e-01, -7.5461e-02,
          4.4464e-02,  2.3929e-01,  2.9452e-01, -1.2854e-01, -1.6451e-02,
          2.9822e-02, -4.4923e-01, -4.0455e-03,  7.2033e-02, -2.2305e-02,
          9.4536e-01,  4.8078e-02,  3.6146e-01,  1.7347e-01, -1.2441e-01,
          9.3514e-02, -2.1109e-01, -2.1622e-01, -2.4601e-01, -1.5805e-01,
         -5.1635e-02, -7.3815e-02,  7.2978e-03, -9.7594e-02,  4.0780e-02,
          3.7401e-02,  3.0276e-01,  2.1474e-02, -1.9894e-01, -6.9000e-02,
          3.8045e-01, -1.6077e-02,  7.1612e-01,  3.6245e-01, -1.7453e-01,
          1.1933e-01, -1.4518e-01, -4.5506e-01, -2.3099e-01,  1.7704e-01,
         -5.5654e-01, -9.6547e-02, -5.2506e-01, -3.5238e-01, -3.2648e-01,
          1.2371e-03,  2.4794e-01,  1.8373e-01, -1.5639e-01, -1.1214e-01,
          1.0502e-01, -3.3121e-02,  2.0371e-01, -4.6723e-01,  2.2939e-01,
         -1.4806e-02,  3.9577e-02, -6.7162e-02,  6.5121e-03, -5.6295e-03,
         -1.1094e-01,  7.1312e-02, -2.4195e-02, -1.8051e-02, -1.1539e-02,
         -2.6310e-02,  4.8212e-02,  2.8002e-01,  4.1731e-02, -1.0607e-01,
          4.1597e-01,  1.3411e-01,  6.4912e-02,  1.6938e-01, -1.4076e-01,
          3.3376e-02,  1.3621e-01,  2.4920e-01, -4.3861e-01,  3.8137e-02,
         -3.9725e-02, -1.9930e-01,  1.1687e-01, -1.9853e-01,  7.5465e-02,
         -1.9906e-01,  1.6372e-01,  1.9240e-01, -2.1321e-01,  4.7727e-03,
          9.4035e-01,  7.6928e-03,  1.2844e-01, -4.5798e-02, -1.7482e-01,
         -1.5867e-01, -1.5244e-01,  6.4784e-03,  8.9259e-03,  1.3619e-01,
          2.4730e-01,  1.6573e-01,  2.6846e-02,  2.0170e-01,  3.3888e-02,
          2.7991e-01]], device='cuda:0') tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
462000 特征值优化 tensor(0.6896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.5745e-01,  1.9255e+00, -5.2357e-01, -9.5726e-01,  5.4903e-01,
          1.4556e+00,  1.4053e-02,  2.0203e+00,  6.4107e-01,  1.6209e-02,
         -2.2235e-02, -4.5434e-01,  5.6326e-01, -4.5392e-01, -5.1236e-02,
         -1.8265e-01, -1.4136e-01, -3.3389e-01, -4.1943e-01, -9.4000e-01,
          5.6136e-01,  9.8153e-01, -2.4525e-01,  1.7528e-01,  5.4243e-01,
         -9.2308e-02, -5.1681e-01,  3.6679e-01,  4.6569e-02, -3.0646e-02,
          2.2237e-01,  1.1264e-01,  5.3905e-02,  4.5583e-01, -8.5540e-01,
          2.8225e-02,  6.3679e-01,  1.6679e-01,  4.3828e-01,  3.2551e-01,
          1.9619e-01, -1.4907e-02,  6.8129e-02,  1.0396e-01, -1.6732e-01,
          3.1797e-01, -2.1785e-01,  2.2150e-01,  2.0874e-01,  1.2020e+00,
         -2.3540e-02, -2.3508e-01,  8.2609e-02, -3.7960e-01,  5.9079e-03,
         -2.1097e-01,  1.9527e-01,  2.9517e-01, -1.1345e-01,  2.4548e-02,
          6.0511e-04, -5.0161e-01,  1.4421e-01, -1.1710e-02, -1.2200e-02,
          7.0418e-01,  5.7679e-02,  1.1625e-01,  2.2705e-01, -1.5536e-01,
          1.1594e-01, -1.5426e-01, -2.5728e-01, -2.2437e-01, -2.6013e-01,
         -9.4372e-02, -1.0020e-01, -3.6707e-02, -1.4500e-01,  2.3913e-02,
          1.1003e-02,  1.9324e-01, -1.0503e-01, -1.8119e-01,  4.7777e-02,
          1.7770e-01,  4.5816e-02,  6.5758e-01,  5.6886e-01, -1.5607e-01,
          3.5109e-02, -5.1908e-02, -4.1560e-01, -3.7765e-01,  1.4160e-01,
         -3.1549e-01,  9.7989e-02, -3.8126e-01, -5.3512e-01, -9.4202e-02,
         -2.7329e-01,  4.1014e-02,  2.1078e-01, -1.1254e-01, -7.1216e-02,
         -6.6511e-02, -1.6465e-01,  1.4490e-01, -4.4540e-01,  1.6426e-01,
         -1.1849e-02,  1.3155e-01,  1.6167e-02,  3.9644e-02, -1.6627e-02,
         -1.0247e-01, -1.1870e-03, -6.2685e-03,  2.9736e-02,  1.3922e-02,
         -4.5502e-02,  4.1531e-02,  1.9209e-01, -6.8765e-02, -2.4435e-01,
          3.1265e-01,  5.7430e-02,  1.0059e-01,  2.4579e-01, -5.9084e-02,
          8.5220e-02,  1.0176e-01,  2.3951e-01, -4.4520e-01,  9.5208e-02,
          7.0744e-02, -7.2875e-02,  2.2839e-01, -2.3924e-01,  1.6550e-01,
         -1.1063e-01, -2.0585e-02,  1.2552e-01, -1.9429e-01,  7.7613e-03,
          5.8777e-01,  5.0688e-04,  7.0365e-02, -4.7585e-02, -8.6570e-02,
         -1.9733e-01, -9.7486e-02,  3.2240e-02, -8.1252e-02,  2.6223e-01,
          1.5269e-01,  8.6211e-02,  6.8035e-02,  1.9000e-01, -8.0240e-02,
          1.0528e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
463000 特征值优化 tensor(0.6417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.9072e-01,  2.1549e+00, -6.8208e-01, -9.9019e-01,  3.4475e-01,
          1.3945e+00,  1.7307e-02,  1.9511e+00,  5.8467e-01,  3.0812e-02,
          2.6394e-02, -5.0727e-01,  6.2820e-01, -5.5552e-01, -1.3258e-01,
         -1.0194e-01, -3.5373e-01, -3.1478e-01, -4.0206e-01, -1.0115e+00,
          7.1753e-01,  8.5315e-01, -2.8079e-01,  6.9347e-02,  5.2241e-01,
         -1.1254e-01, -5.4483e-01,  4.0154e-01,  7.2270e-02, -2.7894e-02,
          2.0455e-01,  1.4716e-01,  7.6339e-02,  4.7008e-01, -8.5875e-01,
         -2.7659e-02,  6.8018e-01,  1.3234e-01,  4.6573e-01,  4.2230e-01,
          3.3309e-01, -2.0336e-02,  6.9781e-02,  6.9956e-02, -1.8381e-01,
          3.2142e-01, -1.7975e-01,  2.5487e-01,  2.5580e-01,  1.1644e+00,
         -4.5661e-02, -2.0282e-01,  1.1044e-01, -4.0420e-01,  3.5090e-02,
         -2.3070e-01,  1.6642e-01,  2.6582e-01, -4.8299e-02,  8.7568e-02,
          7.3778e-03, -4.9392e-01,  2.0205e-01, -3.5849e-02, -2.5296e-02,
          6.6138e-01,  5.3273e-02,  6.2583e-02,  2.5557e-01, -1.3146e-01,
          1.1695e-01, -1.3576e-01, -2.9249e-01, -2.1584e-01, -2.4510e-01,
         -5.7661e-02, -1.2150e-01, -7.0143e-02, -1.4589e-01,  2.5044e-02,
          2.1705e-02,  1.8993e-01, -1.2391e-01, -1.6937e-01,  1.1647e-02,
          1.4830e-01,  5.2812e-02,  6.2888e-01,  6.0101e-01, -9.0518e-02,
          5.0743e-05,  5.3957e-02, -3.9091e-01, -3.6199e-01,  1.3695e-01,
         -2.6732e-01,  1.4020e-01, -3.1305e-01, -4.3966e-01, -1.0074e-01,
         -2.7804e-01,  2.2416e-02,  9.0812e-02, -8.0481e-02, -6.1191e-02,
         -1.0222e-01, -3.4340e-01,  1.4635e-01, -4.1728e-01,  1.5895e-01,
         -2.5082e-02,  1.4884e-01,  4.0420e-02,  3.4150e-02, -3.2048e-02,
         -1.3168e-01,  2.0813e-02, -6.6476e-03, -3.3636e-02,  1.9093e-02,
         -3.3000e-02,  1.9593e-02,  1.5779e-01, -9.6325e-02, -2.5882e-01,
          2.6541e-01,  6.4296e-02,  7.8949e-02,  2.4178e-01, -1.1518e-01,
          1.4087e-02,  8.8562e-02,  2.1329e-01, -4.0490e-01,  1.0576e-01,
          9.1952e-02, -8.1895e-02,  2.2950e-01, -2.0008e-01,  2.0135e-01,
         -8.1354e-02, -1.3409e-02,  1.0291e-01, -2.1275e-01,  1.7010e-02,
          5.3581e-01, -1.3446e-02,  4.4482e-02, -2.2607e-02, -7.1473e-02,
         -1.9094e-01, -1.1528e-01,  2.9588e-02, -1.4547e-01,  2.3033e-01,
          1.6496e-01,  1.1074e-01,  7.8692e-02,  2.0187e-01, -1.2158e-01,
          8.9846e-02]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
464000 特征值优化 tensor(0.6267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2418,  2.3050, -0.6804, -1.0033,  0.2411,  1.3266,  0.0481,  1.9636,
          0.4612,  0.0229,  0.0743, -0.5205,  0.6712, -0.6067, -0.2081, -0.1627,
         -0.4802, -0.3614, -0.3649, -1.1316,  0.8345,  0.8189, -0.3098,  0.0368,
          0.4999, -0.1124, -0.5572,  0.3986,  0.0794, -0.0579,  0.2129,  0.1995,
          0.1325,  0.4784, -0.8727, -0.0337,  0.6840,  0.0819,  0.4672,  0.4152,
          0.3936, -0.0191,  0.0700,  0.0695, -0.1634,  0.3175, -0.1585,  0.2613,
          0.2520,  1.1142, -0.0478, -0.1861,  0.1159, -0.4107,  0.0199, -0.2210,
          0.1756,  0.2587,  0.0317,  0.0903, -0.0121, -0.4948,  0.2204, -0.0511,
         -0.0442,  0.6422,  0.0729,  0.0507,  0.2562, -0.0962,  0.1424, -0.1308,
         -0.2997, -0.1654, -0.2090, -0.0249, -0.1401, -0.0645, -0.1830,  0.0293,
          0.0244,  0.1813, -0.1322, -0.1715,  0.0038,  0.1264,  0.0312,  0.6264,
          0.5485, -0.0590,  0.0041,  0.0887, -0.3542, -0.3524,  0.1318, -0.2665,
          0.1378, -0.2566, -0.3951, -0.1527, -0.2452,  0.0148,  0.0342, -0.0868,
         -0.0745, -0.1043, -0.4542,  0.1370, -0.3754,  0.1502, -0.0404,  0.1336,
          0.0258,  0.0353, -0.0350, -0.1343,  0.0602, -0.0180, -0.0503,  0.0230,
         -0.0411, -0.0033,  0.1211, -0.1073, -0.2295,  0.2574,  0.0745,  0.0882,
          0.2364, -0.1191, -0.0199,  0.0906,  0.2084, -0.3917,  0.0875,  0.1018,
         -0.0871,  0.2241, -0.1994,  0.2464, -0.0399, -0.0056,  0.0969, -0.2383,
          0.0195,  0.4916, -0.0100,  0.0265, -0.0249, -0.0638, -0.1665, -0.1183,
         -0.0033, -0.1528,  0.1927,  0.1465,  0.1193,  0.0655,  0.1638, -0.1037,
          0.0847]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
465000 特征值优化 tensor(0.6074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5077,  2.4061, -0.5967, -1.0136,  0.1603,  1.2660,  0.0467,  1.9952,
          0.3267,  0.0203,  0.1635, -0.5429,  0.6835, -0.6514, -0.2605, -0.2279,
         -0.5604, -0.3873, -0.3561, -1.2254,  0.9298,  0.7992, -0.3658,  0.0035,
          0.5061, -0.1177, -0.5970,  0.3960,  0.1307, -0.0774,  0.2088,  0.2600,
          0.1985,  0.4831, -0.9029, -0.0486,  0.6831,  0.0285,  0.4798,  0.3935,
          0.4328, -0.0210,  0.0848,  0.0572, -0.1458,  0.3524, -0.1458,  0.2637,
          0.2006,  1.0625, -0.0358, -0.1637,  0.1547, -0.3965,  0.0089, -0.2372,
          0.1705,  0.2558,  0.1008,  0.0982, -0.0086, -0.4899,  0.2096, -0.0530,
         -0.0474,  0.6112,  0.0356,  0.0343,  0.2471, -0.0731,  0.1517, -0.1231,
         -0.3132, -0.1338, -0.1852, -0.0088, -0.1358, -0.0511, -0.1864,  0.0199,
          0.0320,  0.1697, -0.1133, -0.1460, -0.0190,  0.0998,  0.0298,  0.6106,
          0.4671, -0.0355,  0.0221,  0.1236, -0.2744, -0.3658,  0.0924, -0.2772,
          0.1092, -0.2463, -0.3383, -0.2320, -0.2089, -0.0106,  0.0494, -0.1030,
         -0.0989, -0.1212, -0.5761,  0.1415, -0.3651,  0.1467, -0.0462,  0.1398,
          0.0136,  0.0522, -0.0562, -0.1338,  0.1049, -0.0142, -0.0381,  0.0306,
         -0.0749,  0.0250,  0.0821, -0.0975, -0.2268,  0.2638,  0.0712,  0.0801,
          0.2300, -0.1285, -0.0318,  0.0687,  0.1849, -0.3738,  0.0711,  0.0755,
         -0.1114,  0.2317, -0.1835,  0.2441, -0.0246,  0.0290,  0.0882, -0.2019,
          0.0467,  0.4284, -0.0122,  0.0195, -0.0202, -0.0758, -0.1601, -0.1052,
         -0.0364, -0.1679,  0.1535,  0.1212,  0.1208,  0.0756,  0.1436, -0.1206,
          0.0740]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
466000 特征值优化 tensor(0.6047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7745,  2.4340, -0.5628, -1.0125,  0.1411,  1.2183,  0.0353,  2.0163,
          0.1898,  0.0290,  0.2694, -0.5797,  0.7144, -0.6985, -0.3056, -0.1999,
         -0.6406, -0.3787, -0.3475, -1.2900,  1.0055,  0.7699, -0.3843, -0.0568,
          0.4852, -0.0974, -0.5961,  0.4011,  0.1489, -0.1072,  0.1693,  0.2944,
          0.2390,  0.4806, -0.9376, -0.0720,  0.6651,  0.0167,  0.4874,  0.3983,
          0.4513, -0.0212,  0.0881,  0.0576, -0.1180,  0.3597, -0.0995,  0.2401,
          0.1806,  1.0410, -0.0190, -0.1461,  0.1883, -0.3746,  0.0190, -0.2828,
          0.1809,  0.2705,  0.1593,  0.1042,  0.0076, -0.4818,  0.1996, -0.0531,
         -0.0705,  0.5911,  0.0227, -0.0036,  0.2472, -0.0293,  0.1505, -0.1115,
         -0.3079, -0.1314, -0.1676, -0.0117, -0.0916, -0.0754, -0.1930,  0.0278,
          0.0566,  0.1453, -0.1125, -0.1690, -0.0175,  0.0881, -0.0056,  0.6213,
          0.4313, -0.0241,  0.0290,  0.1465, -0.2614, -0.3193,  0.0942, -0.2914,
          0.0671, -0.2129, -0.2990, -0.2415, -0.2304, -0.0092,  0.0848, -0.0900,
         -0.0908, -0.1260, -0.6242,  0.1405, -0.3671,  0.1432, -0.0674,  0.1230,
          0.0284,  0.0501, -0.0666, -0.1320,  0.1261, -0.0291, -0.0369,  0.0253,
         -0.0860, -0.0100,  0.0665, -0.0941, -0.2176,  0.2513,  0.0726,  0.0773,
          0.2150, -0.1224, -0.0185,  0.0564,  0.1699, -0.3618,  0.0574,  0.0686,
         -0.1317,  0.2142, -0.1761,  0.2452, -0.0349,  0.0341,  0.0991, -0.1767,
          0.0453,  0.3848, -0.0359,  0.0091, -0.0219, -0.0695, -0.1480, -0.0984,
         -0.0471, -0.1813,  0.1393,  0.1103,  0.1159,  0.0883,  0.1474, -0.1067,
          0.0626]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
467000 特征值优化 tensor(0.5921, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0582,  2.4441, -0.5430, -1.0094,  0.1299,  1.2037,  0.0235,  2.0033,
          0.0980,  0.0882,  0.4103, -0.6044,  0.6865, -0.7767, -0.3172, -0.1558,
         -0.6725, -0.3540, -0.3435, -1.3425,  1.0783,  0.7455, -0.3908, -0.1030,
          0.4361, -0.0802, -0.5587,  0.4193,  0.1410, -0.1268,  0.1272,  0.2883,
          0.2568,  0.4629, -0.9696, -0.0867,  0.6529,  0.0382,  0.4982,  0.4069,
          0.4824, -0.0223,  0.0872,  0.0688, -0.0938,  0.3817, -0.0449,  0.2372,
          0.1818,  1.0413, -0.0164, -0.1369,  0.2024, -0.3554,  0.0101, -0.3435,
          0.1761,  0.2786,  0.2058,  0.0962,  0.0356, -0.4654,  0.1610, -0.0709,
         -0.0871,  0.5509,  0.0042, -0.0897,  0.2357, -0.0044,  0.1467, -0.1012,
         -0.2747, -0.1436, -0.1640, -0.0128, -0.0832, -0.1073, -0.1727,  0.0228,
          0.0597,  0.1322, -0.1143, -0.1775, -0.0342,  0.0935, -0.0244,  0.6103,
          0.4252, -0.0291,  0.0439,  0.1623, -0.2641, -0.2934,  0.0921, -0.2935,
          0.0298, -0.1810, -0.2563, -0.2465, -0.2381,  0.0114,  0.0892, -0.0846,
         -0.0689, -0.1191, -0.6321,  0.1192, -0.3682,  0.1416, -0.0845,  0.1174,
          0.0748,  0.0353, -0.0638, -0.1195,  0.1171, -0.0233, -0.0369, -0.0038,
         -0.0696, -0.0373,  0.0528, -0.0951, -0.2049,  0.2334,  0.0727,  0.0774,
          0.2104, -0.1114, -0.0105,  0.0531,  0.1777, -0.3435,  0.0412,  0.0565,
         -0.1484,  0.2007, -0.1701,  0.2417, -0.0292,  0.0237,  0.0865, -0.1322,
          0.0754,  0.3526, -0.0508,  0.0177, -0.0307, -0.0773, -0.1655, -0.1020,
         -0.0437, -0.2076,  0.1207,  0.0953,  0.1091,  0.1070,  0.1773, -0.0926,
          0.0409]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
468000 特征值优化 tensor(0.5384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1780e+00,  2.4644e+00, -5.0179e-01, -1.0031e+00,  7.2759e-02,
          1.2304e+00, -4.0664e-02,  1.9867e+00, -3.9582e-02,  1.7727e-01,
          5.1046e-01, -6.2481e-01,  6.5453e-01, -8.6071e-01, -3.6483e-01,
         -1.5137e-01, -6.4503e-01, -3.4002e-01, -3.0787e-01, -1.3695e+00,
          1.0876e+00,  6.9619e-01, -3.8206e-01, -1.1135e-01,  3.3483e-01,
         -7.3311e-02, -5.5213e-01,  5.0949e-01,  1.3908e-01, -1.3483e-01,
          1.0804e-01,  2.2453e-01,  2.6156e-01,  4.1820e-01, -1.0574e+00,
         -1.0063e-01,  6.2345e-01,  1.4363e-02,  5.2118e-01,  4.4828e-01,
          4.7359e-01, -2.3160e-02,  8.3589e-02,  7.7166e-02, -3.8238e-02,
          4.0624e-01, -5.3746e-03,  2.2801e-01,  1.4343e-01,  1.0200e+00,
         -2.9273e-02, -1.1205e-01,  2.0505e-01, -3.3966e-01,  3.0570e-02,
         -4.3196e-01,  1.2938e-01,  2.7254e-01,  2.7500e-01,  1.3600e-01,
          1.1097e-01, -4.9016e-01,  1.3747e-01, -8.5502e-02, -8.8660e-02,
          5.3360e-01,  1.1313e-02, -1.1250e-01,  2.1834e-01,  1.5296e-02,
          1.5090e-01, -7.8993e-02, -2.3966e-01, -1.3414e-01, -1.7396e-01,
         -4.0739e-02, -1.1701e-01, -1.5982e-01, -1.4076e-01,  5.3834e-02,
          7.6907e-02,  1.0700e-01, -9.9390e-02, -1.7383e-01, -3.5864e-02,
          1.0329e-01, -8.3352e-02,  5.9055e-01,  2.9702e-01, -6.2226e-02,
          6.9200e-02,  1.9212e-01, -2.2077e-01, -3.2296e-01,  8.8805e-02,
         -2.9146e-01, -5.2818e-02, -1.3025e-01, -1.0133e-01, -2.2891e-01,
         -2.2739e-01,  2.9655e-02,  1.3855e-01, -7.6441e-02, -4.7380e-02,
         -1.1730e-01, -5.9154e-01,  1.2075e-01, -3.9803e-01,  1.3773e-01,
         -1.0164e-01,  1.1100e-01,  1.1507e-01,  3.4786e-02, -7.5365e-02,
         -1.1969e-01,  1.6005e-01, -3.0602e-02, -1.3999e-02, -2.2771e-02,
         -1.2989e-01, -7.5352e-02,  1.3982e-02, -9.0406e-02, -2.0129e-01,
          1.9320e-01,  5.4104e-02,  1.0363e-01,  1.8340e-01, -9.2163e-02,
         -3.3398e-02,  6.4337e-02,  1.6355e-01, -3.4971e-01,  5.3201e-02,
          3.8793e-02, -1.6799e-01,  1.8849e-01, -1.9327e-01,  2.2319e-01,
         -1.1093e-02,  9.8004e-03,  8.6067e-02, -8.8839e-02,  8.6453e-02,
          3.2900e-01, -5.5183e-02,  3.5606e-02, -7.2084e-04, -6.9546e-02,
         -1.7614e-01, -9.8168e-02, -3.4213e-02, -1.9949e-01,  1.3747e-01,
          5.8664e-02,  1.1720e-01,  5.0457e-02,  1.9970e-01, -6.7772e-02,
         -7.2575e-03]], device='cuda:0') tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
469000 特征值优化 tensor(0.5257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3014e+00,  2.4635e+00, -4.5505e-01, -9.9815e-01,  7.9618e-02,
          1.2457e+00, -6.8029e-02,  1.9644e+00, -1.4960e-01,  1.6180e-01,
          5.3096e-01, -6.0018e-01,  6.6179e-01, -8.9432e-01, -3.3889e-01,
         -1.4171e-01, -6.3037e-01, -3.6864e-01, -2.7825e-01, -1.3729e+00,
          1.0919e+00,  6.8160e-01, -4.0393e-01, -9.6246e-02,  2.2220e-01,
         -6.4586e-02, -5.4927e-01,  5.5411e-01,  1.3596e-01, -1.4383e-01,
          7.1375e-02,  2.3481e-01,  2.5821e-01,  3.5728e-01, -1.0646e+00,
         -1.0363e-01,  6.0691e-01, -8.9006e-03,  5.3032e-01,  4.7766e-01,
          4.6452e-01, -2.4078e-02,  7.7865e-02,  8.3147e-02, -4.0610e-02,
          4.1042e-01,  3.8524e-02,  2.1745e-01,  1.4125e-01,  9.8744e-01,
         -4.1514e-02, -9.1158e-02,  2.2763e-01, -3.1937e-01,  3.9587e-02,
         -5.1130e-01,  1.3015e-01,  2.6220e-01,  2.9701e-01,  1.6420e-01,
          1.6891e-01, -4.8465e-01,  1.1078e-01, -9.7377e-02, -8.9274e-02,
          5.1474e-01,  2.1239e-02, -1.3342e-01,  2.1952e-01,  2.6942e-02,
          1.5143e-01, -7.3533e-02, -2.3190e-01, -1.3081e-01, -2.0611e-01,
         -4.3181e-02, -1.2850e-01, -1.6500e-01, -1.1096e-01,  5.4669e-02,
          5.9218e-02,  1.0461e-01, -9.1419e-02, -1.7252e-01, -6.3524e-02,
          1.0181e-01, -9.3797e-02,  5.8720e-01,  2.3665e-01, -6.3592e-02,
          7.8549e-02,  1.8909e-01, -1.7449e-01, -3.3200e-01,  8.7637e-02,
         -2.9963e-01, -8.8098e-02, -1.2904e-01, -5.5692e-02, -1.9980e-01,
         -2.2665e-01, -4.1344e-04,  1.7955e-01, -6.0838e-02, -2.3962e-02,
         -1.1718e-01, -5.7394e-01,  1.5026e-01, -4.1945e-01,  1.3213e-01,
         -1.0938e-01,  1.0050e-01,  1.4459e-01,  7.0241e-02, -8.3413e-02,
         -1.2034e-01,  1.6755e-01, -3.3619e-02, -1.2638e-02, -2.4906e-02,
         -1.3746e-01, -7.8039e-02, -3.6067e-03, -7.6114e-02, -1.9306e-01,
          1.6444e-01,  3.9246e-02,  1.0579e-01,  1.6686e-01, -9.0366e-02,
         -7.8797e-02,  3.8469e-02,  1.8461e-01, -3.3982e-01,  5.2245e-02,
          4.3916e-03, -1.7510e-01,  1.8555e-01, -1.8387e-01,  1.8721e-01,
          6.5510e-03,  1.8866e-02,  4.1138e-02, -5.0957e-02,  1.0098e-01,
          3.2027e-01, -5.7949e-02,  3.2695e-02,  3.4589e-02, -8.9566e-02,
         -1.7684e-01, -8.8247e-02, -6.2824e-02, -1.9672e-01,  1.4206e-01,
          6.1866e-02,  1.0438e-01,  6.4977e-02,  2.0382e-01, -9.0901e-02,
         -4.9543e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
470000 特征值优化 tensor(0.5739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3739e+00,  2.4689e+00, -4.2501e-01, -9.9513e-01,  8.3265e-02,
          1.2790e+00, -8.2152e-02,  1.9384e+00, -2.1672e-01,  1.4258e-01,
          5.3848e-01, -5.5371e-01,  6.4612e-01, -9.5340e-01, -3.6371e-01,
         -1.6176e-01, -5.9226e-01, -3.3540e-01, -2.5032e-01, -1.4010e+00,
          1.1213e+00,  6.7931e-01, -4.2197e-01, -8.6529e-02,  1.7146e-01,
         -4.9455e-02, -5.5186e-01,  5.4860e-01,  1.2594e-01, -1.3040e-01,
          6.2599e-02,  2.4533e-01,  2.7449e-01,  3.5715e-01, -1.0486e+00,
         -1.0875e-01,  6.0161e-01, -2.4332e-02,  5.2404e-01,  4.9287e-01,
          4.7677e-01, -2.3900e-02,  7.7061e-02,  9.2085e-02, -5.8334e-02,
          4.0886e-01,  3.4076e-02,  1.9778e-01,  1.2070e-01,  9.5175e-01,
         -3.7151e-02, -6.8758e-02,  2.4479e-01, -3.1509e-01,  4.3583e-02,
         -5.4976e-01,  1.1587e-01,  2.7578e-01,  3.2501e-01,  1.6120e-01,
          1.9617e-01, -4.9055e-01,  9.4765e-02, -9.8134e-02, -6.2043e-02,
          5.2139e-01,  3.4746e-02, -1.1188e-01,  2.0771e-01,  2.4117e-02,
          1.4956e-01, -7.5664e-02, -2.4275e-01, -1.1141e-01, -2.1162e-01,
         -4.4048e-02, -1.3425e-01, -1.7240e-01, -1.1114e-01,  5.9726e-02,
          4.9990e-02,  9.8671e-02, -9.3039e-02, -1.6789e-01, -7.0778e-02,
          1.1884e-01, -1.0431e-01,  5.8036e-01,  2.1822e-01, -4.7872e-02,
          7.5020e-02,  1.6103e-01, -1.5793e-01, -3.3033e-01,  8.8152e-02,
         -3.0705e-01, -9.2409e-02, -1.4779e-01, -4.5188e-02, -1.9283e-01,
         -2.5010e-01,  2.9588e-03,  1.9470e-01,  1.1601e-02,  4.6063e-03,
         -1.0320e-01, -5.7783e-01,  1.6552e-01, -4.0759e-01,  1.3604e-01,
         -1.2301e-01,  1.0997e-01,  1.6147e-01,  7.5988e-02, -7.5011e-02,
         -1.0477e-01,  1.6273e-01, -4.0648e-02, -7.7436e-03, -5.1179e-02,
         -1.0863e-01, -1.0599e-01,  1.7960e-02, -5.9244e-02, -1.7290e-01,
          1.3677e-01,  2.7230e-02,  1.2508e-01,  1.6176e-01, -7.3952e-02,
         -9.1045e-02,  1.8913e-02,  1.9794e-01, -3.3173e-01,  2.4890e-02,
          9.0977e-03, -1.5525e-01,  1.7679e-01, -2.0531e-01,  1.9305e-01,
          1.2309e-04, -1.1779e-03,  3.3136e-02, -5.1407e-02,  1.0255e-01,
          3.1534e-01, -5.4540e-02,  3.9496e-02,  3.9857e-02, -9.0873e-02,
         -1.7212e-01, -9.1253e-02, -6.5230e-02, -1.8886e-01,  1.3935e-01,
          6.5918e-02,  9.7384e-02,  7.7106e-02,  2.0388e-01, -6.8642e-02,
         -5.0878e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
471000 特征值优化 tensor(0.5294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4298,  2.4434, -0.4158, -1.0055,  0.0026,  1.3000, -0.0982,  1.9096,
         -0.2465,  0.1404,  0.5566, -0.5029,  0.6420, -0.9827, -0.3948, -0.1772,
         -0.5955, -0.3192, -0.2431, -1.4094,  1.1227,  0.6571, -0.4180, -0.0923,
          0.1262, -0.0693, -0.5286,  0.5534,  0.1216, -0.1253,  0.0207,  0.2703,
          0.3253,  0.3325, -1.0573, -0.1052,  0.6115, -0.0427,  0.5252,  0.4905,
          0.4763, -0.0248,  0.0737,  0.1028, -0.0485,  0.4171,  0.0422,  0.1749,
          0.1178,  0.9730, -0.0519, -0.0445,  0.2674, -0.3168,  0.0465, -0.5695,
          0.1040,  0.2922,  0.3263,  0.1701,  0.1854, -0.4805,  0.1040, -0.0873,
         -0.0808,  0.4974,  0.0540, -0.1113,  0.2083,  0.0161,  0.1270, -0.0860,
         -0.2346, -0.1064, -0.2056, -0.0306, -0.1155, -0.1783, -0.1061,  0.0648,
          0.0556,  0.1040, -0.0999, -0.1680, -0.0867,  0.1193, -0.0900,  0.5778,
          0.2294, -0.0316,  0.0860,  0.1487, -0.1389, -0.3406,  0.0888, -0.3068,
         -0.1003, -0.1497, -0.0155, -0.2542, -0.2552, -0.0121,  0.2101,  0.0272,
          0.0272, -0.1042, -0.5760,  0.1686, -0.3987,  0.1383, -0.1428,  0.1086,
          0.1796,  0.0891, -0.0855, -0.0973,  0.1541, -0.0377, -0.0214, -0.0403,
         -0.1310, -0.1005,  0.0090, -0.0552, -0.1534,  0.1444,  0.0275,  0.1207,
          0.1574, -0.0642, -0.1078,  0.0313,  0.2026, -0.3347,  0.0269,  0.0290,
         -0.1651,  0.1748, -0.1937,  0.1729, -0.0047,  0.0335,  0.0165, -0.0453,
          0.1245,  0.3086, -0.0661,  0.0525,  0.0596, -0.0689, -0.1713, -0.0823,
         -0.0782, -0.1954,  0.1372,  0.0620,  0.0868,  0.0896,  0.2046, -0.0645,
         -0.0569]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
472000 特征值优化 tensor(0.5575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4931e+00,  2.4481e+00, -4.0640e-01, -9.9190e-01, -6.7090e-02,
          1.3217e+00, -1.3535e-01,  1.8933e+00, -2.5272e-01,  1.4688e-01,
          5.8950e-01, -4.6038e-01,  5.9185e-01, -1.0065e+00, -3.6790e-01,
         -1.6988e-01, -5.7598e-01, -3.1084e-01, -2.3297e-01, -1.4123e+00,
          1.1391e+00,  6.1638e-01, -4.0280e-01, -8.8316e-02,  8.2977e-02,
         -8.5291e-02, -5.1478e-01,  5.5707e-01,  1.3566e-01, -1.2884e-01,
         -1.7628e-02,  2.9577e-01,  3.4581e-01,  3.1911e-01, -1.0822e+00,
         -9.8934e-02,  6.2154e-01, -5.9051e-02,  5.4518e-01,  4.7946e-01,
          4.7310e-01, -2.4418e-02,  7.3047e-02,  1.0776e-01, -4.7502e-02,
          4.1530e-01,  5.9550e-02,  1.4481e-01,  1.2185e-01,  9.9113e-01,
         -6.5929e-02, -1.2006e-02,  2.7757e-01, -2.9905e-01,  6.4783e-02,
         -5.8343e-01,  9.2046e-02,  2.9021e-01,  3.2517e-01,  1.7467e-01,
          1.9030e-01, -4.7249e-01,  1.0422e-01, -8.2993e-02, -9.8740e-02,
          4.7827e-01,  6.3957e-02, -1.0701e-01,  2.1498e-01,  1.2508e-02,
          1.1300e-01, -9.3050e-02, -2.3618e-01, -1.0354e-01, -2.1109e-01,
         -1.2055e-02, -1.1932e-01, -1.7648e-01, -9.4746e-02,  7.8720e-02,
          5.4119e-02,  1.0577e-01, -9.3744e-02, -1.5198e-01, -1.1551e-01,
          1.1467e-01, -7.8205e-02,  5.6473e-01,  2.1010e-01, -4.0647e-02,
          8.6119e-02,  1.4784e-01, -1.2016e-01, -3.3853e-01,  8.3166e-02,
         -3.0275e-01, -9.4203e-02, -1.6702e-01,  1.3087e-02, -2.9356e-01,
         -2.4107e-01, -3.1489e-02,  2.0277e-01,  3.0204e-02,  3.1517e-02,
         -9.5286e-02, -5.8905e-01,  1.9352e-01, -4.0509e-01,  1.5369e-01,
         -1.6265e-01,  1.1361e-01,  1.9563e-01,  9.1393e-02, -9.5190e-02,
         -1.0773e-01,  1.4573e-01, -3.5758e-02, -3.2922e-02, -3.2975e-02,
         -1.3581e-01, -9.9274e-02, -2.3488e-03, -3.8202e-02, -1.4296e-01,
          1.6008e-01,  3.9195e-02,  1.1778e-01,  1.4917e-01, -4.9072e-02,
         -1.1958e-01,  3.1135e-02,  1.8813e-01, -3.2438e-01,  1.8350e-02,
          1.5784e-03, -2.0469e-01,  1.8530e-01, -1.5248e-01,  1.4727e-01,
         -1.5697e-03,  4.2640e-02, -8.9169e-04, -3.8456e-02,  1.1862e-01,
          3.2202e-01, -8.7203e-02,  5.1857e-02,  5.8990e-02, -5.5048e-02,
         -1.7482e-01, -6.9144e-02, -1.0247e-01, -1.9506e-01,  1.2684e-01,
          4.9603e-02,  8.0987e-02,  1.1349e-01,  2.0947e-01, -5.3053e-02,
         -6.3918e-02]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
473000 特征值优化 tensor(0.5172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5530,  2.4754, -0.4021, -0.9919, -0.0923,  1.3060, -0.1476,  1.8646,
         -0.2867,  0.1510,  0.5766, -0.4276,  0.5544, -0.9945, -0.3760, -0.1707,
         -0.5674, -0.3091, -0.2253, -1.4043,  1.1431,  0.6242, -0.3991, -0.0814,
          0.0782, -0.0872, -0.5128,  0.5375,  0.1452, -0.1323, -0.0251,  0.3045,
          0.3732,  0.3217, -1.0820, -0.0998,  0.6221, -0.0528,  0.5620,  0.4632,
          0.4711, -0.0254,  0.0714,  0.1059, -0.0407,  0.3969,  0.0920,  0.1509,
          0.1184,  0.9765, -0.0533, -0.0054,  0.2805, -0.2844,  0.0713, -0.5857,
          0.0808,  0.3117,  0.3186,  0.1767,  0.1881, -0.4618,  0.1053, -0.1141,
         -0.0779,  0.5135,  0.0618, -0.1069,  0.2066, -0.0037,  0.1168, -0.1002,
         -0.2403, -0.0933, -0.2195, -0.0236, -0.1135, -0.2133, -0.1194,  0.0702,
          0.0410,  0.1040, -0.1139, -0.1450, -0.1165,  0.1245, -0.0962,  0.5388,
          0.2115, -0.0591,  0.0828,  0.1592, -0.1027, -0.3796,  0.0878, -0.3056,
         -0.0749, -0.1624,  0.0340, -0.2550, -0.2195, -0.0414,  0.1925,  0.0348,
          0.0532, -0.0927, -0.5970,  0.1876, -0.3756,  0.1654, -0.1578,  0.1034,
          0.1814,  0.0861, -0.0981, -0.1450,  0.1584, -0.0520, -0.0210, -0.0307,
         -0.1367, -0.1035,  0.0051, -0.0313, -0.1474,  0.1640,  0.0302,  0.1106,
          0.1472, -0.0459, -0.1280,  0.0234,  0.1980, -0.3329,  0.0208,  0.0157,
         -0.1888,  0.1694, -0.1791,  0.1346, -0.0153,  0.0393,  0.0230, -0.0517,
          0.1062,  0.3146, -0.0942,  0.0560,  0.0440, -0.0394, -0.1826, -0.0602,
         -0.0999, -0.1915,  0.1153,  0.0344,  0.0655,  0.1317,  0.2111, -0.0406,
         -0.0676]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
474000 特征值优化 tensor(0.5354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6656e+00,  2.4854e+00, -4.0025e-01, -1.0003e+00, -9.2665e-02,
          1.2527e+00, -1.3540e-01,  1.8126e+00, -2.9770e-01,  1.3842e-01,
          5.7056e-01, -4.3181e-01,  5.5057e-01, -1.0103e+00, -3.7204e-01,
         -1.5607e-01, -5.4777e-01, -3.2267e-01, -2.2405e-01, -1.3951e+00,
          1.1650e+00,  6.3042e-01, -3.9421e-01, -6.4571e-02,  7.2962e-02,
         -6.3570e-02, -5.1188e-01,  5.3762e-01,  1.3318e-01, -1.2714e-01,
         -4.6724e-02,  2.8468e-01,  3.6993e-01,  3.2342e-01, -1.0772e+00,
         -9.8416e-02,  6.2361e-01, -5.7611e-02,  5.5934e-01,  4.6494e-01,
          4.8252e-01, -2.3711e-02,  6.9561e-02,  1.0500e-01, -5.0918e-02,
          4.1740e-01,  7.8453e-02,  1.5229e-01,  1.1390e-01,  9.9651e-01,
         -5.1914e-02, -7.6788e-05,  2.9109e-01, -2.7714e-01,  6.4217e-02,
         -6.1136e-01,  8.0793e-02,  3.1830e-01,  3.0722e-01,  1.7347e-01,
          1.9286e-01, -4.7101e-01,  1.1195e-01, -1.0896e-01, -8.8019e-02,
          5.0811e-01,  5.5171e-02, -1.1222e-01,  2.1032e-01, -1.0387e-02,
          1.0673e-01, -9.6540e-02, -2.4673e-01, -9.3339e-02, -2.2190e-01,
         -1.6174e-02, -1.1417e-01, -1.8906e-01, -1.1133e-01,  7.3017e-02,
          4.2958e-02,  9.7133e-02, -9.8950e-02, -1.6619e-01, -1.1467e-01,
          1.2730e-01, -9.0903e-02,  5.2756e-01,  2.3571e-01, -6.8091e-02,
          7.6345e-02,  1.5055e-01, -1.2308e-01, -3.7358e-01,  8.8282e-02,
         -3.0668e-01, -7.7552e-02, -1.9256e-01,  4.0808e-02, -2.7945e-01,
         -2.0621e-01, -3.1613e-02,  2.1462e-01,  3.8402e-02,  4.5131e-02,
         -8.5849e-02, -5.5713e-01,  2.0269e-01, -3.6716e-01,  1.5078e-01,
         -1.6085e-01,  8.9744e-02,  1.7905e-01,  9.1826e-02, -1.0665e-01,
         -1.4290e-01,  1.5555e-01, -4.9239e-02, -3.7781e-02, -3.7329e-02,
         -1.3450e-01, -1.0510e-01,  6.3411e-03, -2.1837e-02, -1.4734e-01,
          1.6310e-01,  3.8036e-02,  1.1326e-01,  1.5209e-01, -4.1375e-02,
         -1.1975e-01,  2.3082e-02,  1.9050e-01, -3.3229e-01,  1.1127e-02,
          2.5031e-02, -1.9290e-01,  1.6491e-01, -1.5489e-01,  1.5599e-01,
         -3.4516e-03,  3.9669e-02,  2.2372e-03, -3.9400e-02,  1.2352e-01,
          3.2345e-01, -8.6740e-02,  6.6322e-02,  4.0445e-02, -3.8195e-02,
         -1.8138e-01, -6.5263e-02, -9.8057e-02, -1.9031e-01,  1.2711e-01,
          4.5475e-02,  7.2921e-02,  1.2148e-01,  1.9332e-01, -2.6244e-02,
         -5.5698e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
475000 特征值优化 tensor(0.5283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7528e+00,  2.4933e+00, -4.0439e-01, -1.0051e+00, -1.4256e-01,
          1.2326e+00, -1.4641e-01,  1.7894e+00, -3.2231e-01,  1.3107e-01,
          5.7262e-01, -4.3109e-01,  5.2617e-01, -1.0074e+00, -3.6445e-01,
         -1.5259e-01, -5.3961e-01, -3.1887e-01, -2.1844e-01, -1.3941e+00,
          1.1530e+00,  6.2200e-01, -4.1358e-01, -6.3201e-02,  7.2669e-02,
         -6.9190e-02, -5.0196e-01,  5.4153e-01,  1.3195e-01, -1.2976e-01,
         -5.2007e-02,  2.9405e-01,  3.8282e-01,  3.2570e-01, -1.0806e+00,
         -9.9399e-02,  6.3539e-01, -5.5327e-02,  5.6202e-01,  4.6415e-01,
          4.8241e-01, -2.5475e-02,  6.9421e-02,  1.0346e-01, -4.3596e-02,
          4.0617e-01,  8.2039e-02,  1.5159e-01,  1.2435e-01,  9.8720e-01,
         -5.8359e-02,  6.2649e-03,  2.9437e-01, -2.7970e-01,  7.0272e-02,
         -6.2726e-01,  7.5539e-02,  3.1894e-01,  3.2368e-01,  1.7971e-01,
          1.9225e-01, -4.6086e-01,  1.1459e-01, -1.1415e-01, -8.4535e-02,
          5.0860e-01,  4.7033e-02, -1.1081e-01,  2.0193e-01, -6.5808e-03,
          1.0719e-01, -9.1485e-02, -2.4801e-01, -9.4036e-02, -2.2859e-01,
         -1.1215e-02, -1.0981e-01, -1.9254e-01, -1.1655e-01,  7.0792e-02,
          3.9750e-02,  1.0461e-01, -1.0233e-01, -1.5813e-01, -1.2096e-01,
          1.2510e-01, -9.5885e-02,  5.1653e-01,  2.3895e-01, -7.9713e-02,
          8.3253e-02,  1.4389e-01, -1.1070e-01, -3.6995e-01,  8.6939e-02,
         -3.0586e-01, -6.9250e-02, -1.7828e-01,  4.8768e-02, -2.6895e-01,
         -1.9881e-01, -3.7487e-02,  2.0884e-01,  3.4799e-02,  5.0119e-02,
         -9.5647e-02, -5.5386e-01,  2.0271e-01, -3.3974e-01,  1.5835e-01,
         -1.6096e-01,  9.7959e-02,  1.8137e-01,  9.1154e-02, -1.1197e-01,
         -1.5318e-01,  1.5045e-01, -4.5599e-02, -3.4017e-02, -4.2291e-02,
         -1.3284e-01, -1.0555e-01,  2.3359e-03, -2.3865e-02, -1.5358e-01,
          1.6523e-01,  2.9857e-02,  1.1666e-01,  1.4826e-01, -3.9225e-02,
         -1.1511e-01,  2.1493e-02,  1.9373e-01, -3.2851e-01,  7.7301e-03,
          2.1297e-02, -1.8750e-01,  1.6768e-01, -1.6128e-01,  1.5029e-01,
         -4.5328e-03,  3.8298e-02,  5.5918e-03, -4.1847e-02,  1.1521e-01,
          3.2109e-01, -9.4459e-02,  5.6891e-02,  4.0381e-02, -3.9477e-02,
         -1.8403e-01, -5.6799e-02, -9.9969e-02, -1.9949e-01,  1.2835e-01,
          3.2593e-02,  7.4767e-02,  1.2500e-01,  1.9696e-01, -2.5500e-02,
         -6.1126e-02]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
476000 特征值优化 tensor(0.5192, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8335e+00,  2.5211e+00, -3.9396e-01, -9.9363e-01, -1.3313e-01,
          1.2189e+00, -1.4964e-01,  1.7608e+00, -3.4079e-01,  1.2738e-01,
          5.8166e-01, -4.0373e-01,  5.0366e-01, -1.0095e+00, -3.5655e-01,
         -1.2459e-01, -5.2316e-01, -3.3005e-01, -2.1784e-01, -1.3939e+00,
          1.1420e+00,  6.1364e-01, -4.1841e-01, -5.2652e-02,  7.8439e-02,
         -7.5571e-02, -4.8091e-01,  5.3476e-01,  1.4213e-01, -1.3038e-01,
         -4.7977e-02,  3.1636e-01,  3.6630e-01,  3.2527e-01, -1.0777e+00,
         -1.1319e-01,  6.2796e-01, -5.4821e-02,  5.6989e-01,  4.6458e-01,
          4.7081e-01, -2.4226e-02,  7.5912e-02,  1.0813e-01, -4.4071e-02,
          3.9915e-01,  8.3681e-02,  1.6287e-01,  1.3451e-01,  9.7265e-01,
         -5.6736e-02, -2.3107e-04,  2.8344e-01, -2.8175e-01,  7.5575e-02,
         -6.2899e-01,  8.7187e-02,  3.4248e-01,  3.2157e-01,  1.9149e-01,
          1.7322e-01, -4.6033e-01,  1.2079e-01, -1.2381e-01, -7.6827e-02,
          5.0873e-01,  4.2118e-02, -1.0772e-01,  1.9797e-01, -1.8380e-02,
          1.0822e-01, -1.0012e-01, -2.4252e-01, -8.8677e-02, -2.3406e-01,
         -1.7238e-02, -1.0331e-01, -2.0720e-01, -1.2785e-01,  7.3498e-02,
          4.5101e-02,  1.0377e-01, -1.0863e-01, -1.5786e-01, -1.3305e-01,
          1.3061e-01, -9.0415e-02,  5.0435e-01,  2.4090e-01, -9.1350e-02,
          8.4208e-02,  1.5587e-01, -1.0595e-01, -3.7565e-01,  8.5340e-02,
         -3.1163e-01, -7.6290e-02, -1.6607e-01,  4.6330e-02, -2.6334e-01,
         -2.0251e-01, -4.0303e-02,  1.9967e-01,  3.0465e-02,  6.3077e-02,
         -1.0197e-01, -5.5185e-01,  1.8709e-01, -3.3414e-01,  1.5869e-01,
         -1.6658e-01,  9.8723e-02,  1.8510e-01,  9.5466e-02, -1.0106e-01,
         -1.4918e-01,  1.4655e-01, -4.5264e-02, -3.0303e-02, -4.9796e-02,
         -1.2177e-01, -1.1786e-01,  2.7720e-03, -2.7298e-02, -1.6757e-01,
          1.6714e-01,  2.4726e-02,  1.1348e-01,  1.4668e-01, -4.0597e-02,
         -1.1355e-01,  1.9457e-02,  1.9894e-01, -3.2869e-01,  8.1327e-03,
          1.8602e-02, -1.9126e-01,  1.5677e-01, -1.6195e-01,  1.3518e-01,
         -1.1394e-02,  4.8431e-02,  6.1992e-03, -5.5449e-02,  1.0979e-01,
          3.1601e-01, -1.0434e-01,  4.7487e-02,  4.0247e-02, -3.6850e-02,
         -1.8362e-01, -6.2386e-02, -9.7260e-02, -1.9842e-01,  1.2555e-01,
          3.2837e-02,  6.9023e-02,  1.2751e-01,  2.0703e-01, -2.9724e-02,
         -6.3678e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
477000 特征值优化 tensor(0.5540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9040e+00,  2.5286e+00, -3.9554e-01, -9.9566e-01, -1.5799e-01,
          1.2164e+00, -1.5000e-01,  1.7391e+00, -3.5521e-01,  1.1774e-01,
          5.7798e-01, -3.9192e-01,  4.7451e-01, -1.0099e+00, -3.4435e-01,
         -1.2073e-01, -5.2181e-01, -3.2045e-01, -2.1551e-01, -1.3919e+00,
          1.1453e+00,  6.1894e-01, -4.3311e-01, -4.7543e-02,  6.2279e-02,
         -7.9323e-02, -4.7925e-01,  5.2789e-01,  1.5330e-01, -1.3102e-01,
         -4.9662e-02,  3.1410e-01,  3.7042e-01,  3.1909e-01, -1.0761e+00,
         -1.1667e-01,  6.3035e-01, -4.9754e-02,  5.6870e-01,  4.6049e-01,
          4.6670e-01, -2.4114e-02,  7.3099e-02,  1.0750e-01, -4.6734e-02,
          3.9655e-01,  7.5946e-02,  1.5888e-01,  1.3386e-01,  9.7131e-01,
         -5.6767e-02,  3.3243e-03,  2.8021e-01, -2.8353e-01,  7.9251e-02,
         -6.2955e-01,  7.6706e-02,  3.4997e-01,  3.2311e-01,  1.9719e-01,
          1.6697e-01, -4.6006e-01,  1.2334e-01, -1.3042e-01, -7.8974e-02,
          5.1035e-01,  4.0164e-02, -1.0732e-01,  1.9950e-01, -1.5859e-02,
          1.0760e-01, -9.8653e-02, -2.4294e-01, -8.7119e-02, -2.3705e-01,
         -1.8937e-02, -1.0593e-01, -2.0885e-01, -1.3155e-01,  7.2985e-02,
          4.3000e-02,  1.0184e-01, -1.1099e-01, -1.5702e-01, -1.3236e-01,
          1.3027e-01, -9.3848e-02,  4.9636e-01,  2.4082e-01, -1.0270e-01,
          8.8524e-02,  1.5966e-01, -9.8792e-02, -3.7892e-01,  8.5347e-02,
         -3.0826e-01, -8.0053e-02, -1.5798e-01,  4.2138e-02, -2.5475e-01,
         -1.9592e-01, -4.2373e-02,  1.9067e-01,  3.1092e-02,  5.5962e-02,
         -9.8682e-02, -5.4202e-01,  1.9228e-01, -3.3014e-01,  1.5527e-01,
         -1.6537e-01,  1.0124e-01,  1.9238e-01,  9.6918e-02, -1.1058e-01,
         -1.5046e-01,  1.4115e-01, -4.8582e-02, -3.2533e-02, -5.5535e-02,
         -1.1760e-01, -1.1611e-01,  5.1986e-04, -2.5975e-02, -1.6848e-01,
          1.6700e-01,  2.2903e-02,  1.1804e-01,  1.4976e-01, -3.9007e-02,
         -1.1303e-01,  1.8721e-02,  1.9452e-01, -3.2970e-01,  2.8284e-03,
          2.3886e-02, -1.9012e-01,  1.5608e-01, -1.5716e-01,  1.2583e-01,
         -1.8593e-02,  5.1093e-02,  1.1227e-02, -5.6598e-02,  1.1210e-01,
          3.1602e-01, -1.0540e-01,  4.7825e-02,  3.7678e-02, -3.4967e-02,
         -1.8047e-01, -6.5944e-02, -9.2560e-02, -1.9311e-01,  1.1985e-01,
          3.4791e-02,  6.1158e-02,  1.3374e-01,  2.0713e-01, -2.8877e-02,
         -6.4909e-02]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
478000 特征值优化 tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9570e+00,  2.5509e+00, -4.1175e-01, -9.9278e-01, -1.6455e-01,
          1.2165e+00, -1.5534e-01,  1.7274e+00, -3.6875e-01,  1.2271e-01,
          5.7712e-01, -3.9738e-01,  4.6102e-01, -1.0069e+00, -3.4651e-01,
         -1.0045e-01, -5.0244e-01, -3.1933e-01, -2.0822e-01, -1.3975e+00,
          1.1435e+00,  6.1353e-01, -4.3369e-01, -4.4196e-02,  6.2823e-02,
         -7.2060e-02, -4.7515e-01,  5.1811e-01,  1.5854e-01, -1.3340e-01,
         -6.5363e-02,  3.1494e-01,  3.7681e-01,  3.3638e-01, -1.0739e+00,
         -1.2450e-01,  6.3847e-01, -4.7978e-02,  5.6675e-01,  4.5879e-01,
          4.6541e-01, -2.4784e-02,  7.2969e-02,  1.0804e-01, -4.3970e-02,
          3.9402e-01,  7.9431e-02,  1.5350e-01,  1.3377e-01,  9.6039e-01,
         -5.8986e-02,  1.9716e-03,  2.8146e-01, -2.8305e-01,  8.2912e-02,
         -6.3463e-01,  6.3147e-02,  3.4857e-01,  3.3265e-01,  2.0699e-01,
          1.6760e-01, -4.5484e-01,  1.2933e-01, -1.3264e-01, -7.5221e-02,
          5.1231e-01,  2.5053e-02, -1.1303e-01,  1.8804e-01, -1.5784e-02,
          1.0767e-01, -1.0175e-01, -2.4129e-01, -8.7458e-02, -2.4433e-01,
         -1.4898e-02, -1.1310e-01, -1.9735e-01, -1.2775e-01,  7.2931e-02,
          4.2380e-02,  9.9019e-02, -1.1310e-01, -1.6061e-01, -1.3595e-01,
          1.4338e-01, -1.0644e-01,  4.8911e-01,  2.3881e-01, -1.1325e-01,
          8.9842e-02,  1.4907e-01, -1.0081e-01, -3.8154e-01,  8.6090e-02,
         -3.0537e-01, -7.6064e-02, -1.5715e-01,  3.5095e-02, -2.6115e-01,
         -1.9232e-01, -5.1760e-02,  1.8924e-01,  2.6476e-02,  5.9648e-02,
         -8.9349e-02, -5.3334e-01,  1.9386e-01, -3.1327e-01,  1.5698e-01,
         -1.6900e-01,  9.9403e-02,  1.8935e-01,  9.0653e-02, -1.1579e-01,
         -1.6259e-01,  1.4779e-01, -4.7576e-02, -4.0188e-02, -5.3771e-02,
         -1.2040e-01, -1.1545e-01,  2.2422e-03, -2.5282e-02, -1.7409e-01,
          1.6639e-01,  2.1408e-02,  1.2210e-01,  1.4516e-01, -3.7663e-02,
         -1.1603e-01,  1.8000e-02,  1.9918e-01, -3.3146e-01,  3.7192e-03,
          3.0018e-02, -1.8596e-01,  1.5374e-01, -1.5136e-01,  1.2413e-01,
         -1.8639e-02,  5.6813e-02,  1.5573e-02, -4.4624e-02,  1.1011e-01,
          3.1244e-01, -1.0649e-01,  4.7225e-02,  4.0772e-02, -3.5912e-02,
         -1.7713e-01, -6.6370e-02, -9.4257e-02, -1.9412e-01,  1.1826e-01,
          3.5087e-02,  6.4861e-02,  1.3752e-01,  2.0642e-01, -1.5537e-02,
         -6.8484e-02]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
479000 特征值优化 tensor(0.5191, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0341e+00,  2.5373e+00, -3.9648e-01, -9.9326e-01, -1.9247e-01,
          1.1938e+00, -1.4465e-01,  1.6961e+00, -3.7427e-01,  1.2324e-01,
          5.8838e-01, -3.7160e-01,  4.5753e-01, -1.0061e+00, -3.4582e-01,
         -1.0565e-01, -4.9168e-01, -3.2365e-01, -2.1104e-01, -1.3937e+00,
          1.1432e+00,  6.0454e-01, -4.3204e-01, -3.4390e-02,  6.0148e-02,
         -7.3867e-02, -4.7223e-01,  5.1900e-01,  1.4600e-01, -1.3573e-01,
         -7.4178e-02,  3.1879e-01,  3.7550e-01,  3.3408e-01, -1.0787e+00,
         -1.1483e-01,  6.3868e-01, -4.6264e-02,  5.7181e-01,  4.6522e-01,
          4.6603e-01, -2.4301e-02,  7.2669e-02,  1.1110e-01, -4.0424e-02,
          3.9499e-01,  8.0732e-02,  1.4898e-01,  1.4805e-01,  9.6586e-01,
         -6.9298e-02, -2.3270e-03,  2.7419e-01, -2.8137e-01,  8.4681e-02,
         -6.4488e-01,  7.1358e-02,  3.6136e-01,  3.3395e-01,  2.0555e-01,
          1.5564e-01, -4.5080e-01,  1.2658e-01, -1.3810e-01, -7.7481e-02,
          5.0889e-01,  2.2304e-02, -1.2000e-01,  2.0334e-01, -1.5617e-02,
          1.0678e-01, -1.0337e-01, -2.4537e-01, -8.7795e-02, -2.4046e-01,
         -1.3357e-02, -1.1350e-01, -2.1574e-01, -1.3379e-01,  7.6306e-02,
          4.1826e-02,  9.7789e-02, -1.1386e-01, -1.5960e-01, -1.4287e-01,
          1.3779e-01, -9.2037e-02,  4.7335e-01,  2.4073e-01, -1.1280e-01,
          8.9456e-02,  1.4493e-01, -9.9313e-02, -3.7445e-01,  8.6406e-02,
         -3.0853e-01, -7.3078e-02, -1.5393e-01,  4.8057e-02, -2.3708e-01,
         -1.9382e-01, -5.0128e-02,  1.9955e-01,  2.5334e-02,  5.9771e-02,
         -9.9339e-02, -5.2722e-01,  1.9832e-01, -3.0835e-01,  1.6397e-01,
         -1.7103e-01,  9.3557e-02,  1.9047e-01,  1.0111e-01, -1.1283e-01,
         -1.6459e-01,  1.4131e-01, -4.5768e-02, -4.3349e-02, -4.0748e-02,
         -1.3495e-01, -1.0724e-01, -1.0068e-02, -2.3274e-02, -1.7526e-01,
          1.7184e-01,  2.5548e-02,  1.1389e-01,  1.4571e-01, -3.3729e-02,
         -1.1393e-01,  2.4599e-02,  1.9328e-01, -3.2998e-01,  2.4333e-03,
          2.4440e-02, -2.0130e-01,  1.5262e-01, -1.4787e-01,  1.3391e-01,
         -1.9654e-02,  3.8754e-02,  1.1764e-02, -6.7293e-02,  1.0623e-01,
          3.1402e-01, -1.0895e-01,  4.5696e-02,  3.7662e-02, -3.6705e-02,
         -1.7698e-01, -6.5807e-02, -9.8680e-02, -1.9166e-01,  1.1992e-01,
          3.6363e-02,  6.6444e-02,  1.3524e-01,  2.0804e-01, -2.2188e-02,
         -6.7058e-02]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
480000 特征值优化 tensor(0.5172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1159e+00,  2.5315e+00, -3.9057e-01, -9.9452e-01, -1.9783e-01,
          1.1891e+00, -1.4162e-01,  1.6827e+00, -3.7953e-01,  1.3657e-01,
          6.0439e-01, -3.5279e-01,  4.5546e-01, -1.0080e+00, -3.4170e-01,
         -8.6094e-02, -4.7475e-01, -3.1732e-01, -1.9750e-01, -1.3986e+00,
          1.1471e+00,  6.0428e-01, -4.3565e-01, -3.8307e-02,  7.1296e-02,
         -6.2665e-02, -4.9049e-01,  5.1715e-01,  1.5051e-01, -1.3642e-01,
         -7.5905e-02,  2.9992e-01,  3.8327e-01,  3.3901e-01, -1.0754e+00,
         -1.1221e-01,  6.4162e-01, -5.0409e-02,  5.7150e-01,  4.5685e-01,
          4.7432e-01, -2.4715e-02,  7.3005e-02,  1.0766e-01, -4.2381e-02,
          3.9998e-01,  7.2496e-02,  1.4023e-01,  1.4010e-01,  9.5311e-01,
         -7.4704e-02, -6.1123e-03,  2.7519e-01, -2.8987e-01,  8.6238e-02,
         -6.5075e-01,  7.0157e-02,  3.7075e-01,  3.4458e-01,  2.0967e-01,
          1.4895e-01, -4.5618e-01,  1.1848e-01, -1.3515e-01, -7.4408e-02,
          5.0745e-01,  1.5005e-02, -1.0365e-01,  2.0539e-01, -1.2420e-02,
          1.0466e-01, -1.0253e-01, -2.4317e-01, -8.9183e-02, -2.3920e-01,
         -1.3226e-02, -1.1822e-01, -2.0652e-01, -1.2784e-01,  7.4727e-02,
          3.6501e-02,  9.7994e-02, -1.1936e-01, -1.5589e-01, -1.3895e-01,
          1.4082e-01, -8.5851e-02,  4.6668e-01,  2.3518e-01, -1.0761e-01,
          9.0573e-02,  1.3483e-01, -9.2862e-02, -3.7008e-01,  8.7941e-02,
         -3.1072e-01, -7.5972e-02, -1.7515e-01,  3.8891e-02, -2.3432e-01,
         -1.8834e-01, -5.5521e-02,  2.0195e-01,  2.1918e-02,  5.4726e-02,
         -9.9289e-02, -5.2171e-01,  2.0745e-01, -2.9827e-01,  1.5625e-01,
         -1.7710e-01,  8.4556e-02,  1.9230e-01,  1.1770e-01, -1.0266e-01,
         -1.6580e-01,  1.4833e-01, -4.2799e-02, -5.4219e-02, -5.0385e-02,
         -1.3111e-01, -1.1555e-01, -6.9901e-03, -2.4508e-02, -1.7949e-01,
          1.6252e-01,  2.3436e-02,  1.1871e-01,  1.4947e-01, -2.9105e-02,
         -1.0300e-01,  1.1302e-02,  1.9663e-01, -3.2644e-01, -9.0838e-03,
          2.6368e-02, -1.8733e-01,  1.5138e-01, -1.5167e-01,  1.4587e-01,
         -2.7704e-02,  3.2614e-02,  2.1112e-03, -6.0275e-02,  1.0920e-01,
          3.1405e-01, -1.0697e-01,  4.4229e-02,  3.6457e-02, -3.4244e-02,
         -1.7643e-01, -7.2659e-02, -8.9413e-02, -1.9261e-01,  1.1806e-01,
          4.0022e-02,  6.1817e-02,  1.3369e-01,  2.1462e-01, -1.5692e-02,
         -6.2317e-02]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
481000 特征值优化 tensor(0.5131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1073e+00,  2.5385e+00, -4.0221e-01, -9.9169e-01, -2.2470e-01,
          1.2197e+00, -1.6676e-01,  1.6925e+00, -3.9967e-01,  1.2863e-01,
          5.8913e-01, -3.7745e-01,  4.6571e-01, -1.0212e+00, -3.1540e-01,
         -7.4509e-02, -4.9663e-01, -3.1598e-01, -1.6930e-01, -1.4065e+00,
          1.1510e+00,  5.9425e-01, -4.1666e-01, -4.3888e-02,  4.0408e-02,
         -5.7504e-02, -5.0047e-01,  5.0216e-01,  1.3829e-01, -1.3373e-01,
         -1.1397e-01,  3.2191e-01,  3.8690e-01,  3.6204e-01, -1.0797e+00,
         -1.1873e-01,  6.2444e-01, -5.0029e-02,  5.7034e-01,  4.5488e-01,
          4.7123e-01, -2.4647e-02,  7.0860e-02,  1.2975e-01, -4.2247e-02,
          3.7735e-01,  6.7224e-02,  1.1257e-01,  1.2372e-01,  9.7514e-01,
         -6.4180e-02, -2.1928e-02,  3.0008e-01, -2.9033e-01,  7.2544e-02,
         -6.5126e-01,  2.5760e-02,  3.8684e-01,  3.3111e-01,  2.0926e-01,
          1.3054e-01, -4.5778e-01,  1.1507e-01, -1.3417e-01, -8.3257e-02,
          5.0278e-01,  2.3324e-02, -9.0075e-02,  2.0117e-01, -1.7381e-02,
          1.0069e-01, -1.1398e-01, -2.4104e-01, -5.1237e-02, -2.2544e-01,
          2.3657e-04, -1.3218e-01, -1.7675e-01, -1.2941e-01,  8.5628e-02,
          3.6102e-02,  9.3695e-02, -1.1912e-01, -1.6293e-01, -1.3121e-01,
          1.5187e-01, -9.5420e-02,  4.7801e-01,  2.2250e-01, -1.1648e-01,
          1.0558e-01,  1.1364e-01, -8.4536e-02, -4.0262e-01,  9.1321e-02,
         -3.0528e-01, -8.9278e-02, -1.2892e-01,  3.0327e-02, -2.7281e-01,
         -1.7332e-01, -7.3572e-02,  1.7696e-01,  1.6574e-02,  7.2702e-02,
         -9.3719e-02, -5.1245e-01,  2.1046e-01, -2.5905e-01,  1.4593e-01,
         -1.9412e-01,  8.5654e-02,  1.8848e-01,  1.0233e-01, -1.1633e-01,
         -1.7056e-01,  1.5191e-01, -4.8425e-02, -6.7481e-02, -3.1106e-02,
         -1.1672e-01, -1.0788e-01, -1.9784e-02, -1.4628e-02, -1.9014e-01,
          1.7376e-01,  1.5906e-02,  1.0756e-01,  1.2303e-01, -1.5561e-02,
         -1.1462e-01,  1.3628e-02,  2.0024e-01, -3.5182e-01,  4.2748e-03,
          4.7682e-02, -1.8640e-01,  1.4426e-01, -1.3673e-01,  1.5354e-01,
         -1.6197e-02,  6.6988e-02,  1.6821e-02, -3.7574e-02,  1.2297e-01,
          2.9454e-01, -9.6432e-02,  6.1562e-02,  2.9372e-02, -3.9352e-02,
         -1.6928e-01, -7.2576e-02, -1.0107e-01, -1.8898e-01,  1.2383e-01,
          3.2176e-02,  6.1584e-02,  1.2817e-01,  2.0387e-01,  9.2791e-03,
         -5.4913e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
482000 特征值优化 tensor(0.5114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0374e+00,  2.5688e+00, -3.7955e-01, -9.9153e-01, -2.3336e-01,
          1.2411e+00, -1.6345e-01,  1.6367e+00, -4.3303e-01,  1.4451e-01,
          5.7136e-01, -3.6513e-01,  4.2284e-01, -1.0220e+00, -3.0097e-01,
         -7.2136e-02, -4.2527e-01, -3.1352e-01, -1.5101e-01, -1.4027e+00,
          1.1441e+00,  5.7665e-01, -4.1908e-01, -5.7517e-02,  2.2284e-02,
         -6.8047e-02, -5.3298e-01,  5.1657e-01,  1.3825e-01, -1.3253e-01,
         -1.3455e-01,  3.3311e-01,  3.7560e-01,  3.9026e-01, -1.0630e+00,
         -1.3049e-01,  6.3795e-01, -3.6845e-02,  5.6766e-01,  4.6626e-01,
          4.6588e-01, -2.4215e-02,  7.0099e-02,  1.4346e-01, -4.4323e-02,
          3.7934e-01,  5.8020e-02,  1.1735e-01,  1.5274e-01,  9.5518e-01,
         -6.2822e-02, -5.2436e-02,  2.9418e-01, -2.9556e-01,  5.9582e-02,
         -6.5794e-01,  7.5333e-03,  3.9539e-01,  3.3324e-01,  2.1704e-01,
          1.3507e-01, -4.5684e-01,  1.1661e-01, -1.2678e-01, -7.1885e-02,
          5.0334e-01,  1.2579e-02, -7.3729e-02,  2.0367e-01, -8.8110e-03,
          1.1096e-01, -1.1616e-01, -2.4833e-01, -4.3599e-02, -2.3026e-01,
          7.2523e-03, -1.4306e-01, -1.7081e-01, -1.5281e-01,  8.8162e-02,
          4.0969e-02,  1.0585e-01, -1.2137e-01, -1.5573e-01, -1.3777e-01,
          1.3902e-01, -1.0076e-01,  4.8507e-01,  2.0902e-01, -1.1714e-01,
          1.3308e-01,  7.7188e-02, -4.7034e-02, -4.2184e-01,  9.0927e-02,
         -3.1014e-01, -8.3778e-02, -1.1989e-01,  2.9816e-02, -2.4750e-01,
         -1.4307e-01, -9.1898e-02,  1.6076e-01,  1.1015e-02,  9.6073e-02,
         -1.1125e-01, -4.9714e-01,  2.1712e-01, -2.4208e-01,  1.4937e-01,
         -1.8902e-01,  8.4905e-02,  1.8246e-01,  1.0509e-01, -1.2058e-01,
         -1.7509e-01,  1.5984e-01, -3.5150e-02, -5.8516e-02, -2.7574e-02,
         -1.1598e-01, -1.1376e-01, -3.2240e-02,  9.3558e-03, -1.9188e-01,
          1.6541e-01,  6.2999e-03,  1.0484e-01,  1.0702e-01, -1.5496e-03,
         -1.0455e-01,  5.9255e-03,  2.0275e-01, -3.4969e-01, -8.5373e-03,
          5.6270e-02, -1.9959e-01,  1.5419e-01, -1.2378e-01,  1.2769e-01,
         -6.0934e-03,  8.1679e-02,  4.3093e-03, -3.8603e-02,  1.1902e-01,
          3.0114e-01, -1.0608e-01,  6.1596e-02,  2.2595e-02, -4.9562e-02,
         -1.5893e-01, -6.5031e-02, -1.0243e-01, -2.1069e-01,  1.3224e-01,
          1.8687e-02,  7.3811e-02,  1.3034e-01,  2.1026e-01,  1.4517e-02,
         -6.2586e-02]], device='cuda:0') tensor(0.2076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
483000 特征值优化 tensor(0.5098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0292e+00,  2.5961e+00, -3.5437e-01, -9.9324e-01, -2.5147e-01,
          1.2117e+00, -1.4722e-01,  1.6093e+00, -4.4438e-01,  1.7028e-01,
          5.7256e-01, -3.6378e-01,  4.0735e-01, -1.0095e+00, -3.0656e-01,
         -9.1092e-02, -4.1622e-01, -3.2702e-01, -1.4709e-01, -1.4010e+00,
          1.1484e+00,  5.8835e-01, -4.4460e-01, -3.5464e-02,  4.7250e-02,
         -9.3755e-02, -5.7258e-01,  4.9289e-01,  1.3418e-01, -1.4205e-01,
         -1.4612e-01,  3.3373e-01,  3.8011e-01,  3.9348e-01, -1.0533e+00,
         -1.3311e-01,  6.2033e-01, -4.2643e-02,  5.6151e-01,  4.7284e-01,
          4.6705e-01, -2.4181e-02,  7.2072e-02,  1.4967e-01, -4.2560e-02,
          3.9391e-01,  5.6616e-02,  1.2157e-01,  1.3009e-01,  9.6225e-01,
         -4.6450e-02, -5.6909e-02,  3.0068e-01, -2.8926e-01,  4.3897e-02,
         -6.4231e-01,  2.7072e-02,  4.1647e-01,  3.2134e-01,  2.0230e-01,
          1.4283e-01, -4.4557e-01,  1.2617e-01, -1.0313e-01, -8.4591e-02,
          4.7959e-01,  4.4125e-05, -9.2944e-02,  1.9540e-01, -1.0344e-02,
          1.1602e-01, -1.2206e-01, -2.6369e-01, -4.1380e-02, -2.4053e-01,
          1.1144e-02, -1.3359e-01, -1.6445e-01, -1.4999e-01,  8.3512e-02,
          4.2359e-02,  1.1423e-01, -1.2310e-01, -1.5737e-01, -1.3317e-01,
          1.3427e-01, -9.0273e-02,  4.8772e-01,  1.9516e-01, -1.1595e-01,
          1.2836e-01,  5.7427e-02, -3.6678e-02, -4.3719e-01,  9.2564e-02,
         -3.1745e-01, -6.6042e-02, -1.4107e-01,  2.2502e-02, -2.7111e-01,
         -1.0784e-01, -1.1466e-01,  1.7503e-01,  1.9986e-02,  1.1610e-01,
         -1.3126e-01, -4.8802e-01,  2.4466e-01, -2.4184e-01,  1.5450e-01,
         -1.6794e-01,  1.0431e-01,  1.7222e-01,  1.2773e-01, -1.4341e-01,
         -1.7513e-01,  1.4607e-01, -3.5443e-02, -5.3137e-02, -3.0378e-02,
         -8.9826e-02, -9.5264e-02, -2.3049e-02,  2.3432e-02, -1.9365e-01,
          1.6437e-01,  1.6101e-03,  1.0053e-01,  9.8624e-02,  6.8727e-03,
         -9.3677e-02,  2.6225e-03,  1.9189e-01, -3.4092e-01, -7.4118e-03,
          4.9012e-02, -2.0373e-01,  1.5153e-01, -1.1897e-01,  1.4604e-01,
          3.9234e-04,  7.5820e-02, -7.4974e-03, -2.1293e-02,  1.5025e-01,
          3.1134e-01, -8.3846e-02,  7.3061e-02,  1.6334e-02, -4.8588e-02,
         -1.5616e-01, -4.7984e-02, -9.6009e-02, -2.2199e-01,  1.3394e-01,
          1.1701e-02,  7.3416e-02,  1.3383e-01,  2.0465e-01,  2.0972e-02,
         -6.0977e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
484000 特征值优化 tensor(0.5106, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0294e+00,  2.5899e+00, -3.3314e-01, -9.9288e-01, -2.2025e-01,
          1.2175e+00, -1.3142e-01,  1.5759e+00, -4.6689e-01,  1.8421e-01,
          5.7572e-01, -3.6121e-01,  4.0678e-01, -9.9605e-01, -3.0792e-01,
         -9.0358e-02, -3.8317e-01, -3.3725e-01, -1.3736e-01, -1.3948e+00,
          1.1395e+00,  5.8788e-01, -4.4939e-01, -3.1242e-02,  3.7650e-02,
         -7.6973e-02, -5.6977e-01,  4.8744e-01,  1.1946e-01, -1.4523e-01,
         -1.5876e-01,  3.3256e-01,  3.8777e-01,  4.0048e-01, -1.0418e+00,
         -1.2333e-01,  6.2502e-01, -4.2648e-02,  5.6474e-01,  4.7726e-01,
          4.6478e-01, -2.4231e-02,  7.1618e-02,  1.5470e-01, -3.9348e-02,
          3.8371e-01,  5.3502e-02,  1.0881e-01,  1.4117e-01,  9.4918e-01,
         -5.6769e-02, -4.9289e-02,  3.0334e-01, -3.0069e-01,  4.4311e-02,
         -6.5280e-01,  3.4023e-02,  4.1478e-01,  3.2236e-01,  2.0430e-01,
          1.3461e-01, -4.4149e-01,  1.2272e-01, -1.0593e-01, -7.7552e-02,
          4.8610e-01, -1.0470e-02, -1.0307e-01,  1.9950e-01, -1.3922e-03,
          1.0840e-01, -1.2024e-01, -2.6288e-01, -4.9329e-02, -2.3907e-01,
          1.3139e-02, -1.4036e-01, -1.6614e-01, -1.5811e-01,  8.9679e-02,
          3.9384e-02,  1.1662e-01, -1.2228e-01, -1.6216e-01, -1.2721e-01,
          1.4284e-01, -9.1140e-02,  4.7884e-01,  2.0209e-01, -1.1717e-01,
          1.3114e-01,  4.8064e-02, -3.9193e-02, -4.2805e-01,  9.1887e-02,
         -3.2253e-01, -6.2539e-02, -1.1849e-01,  2.8571e-02, -2.7234e-01,
         -1.2108e-01, -1.1512e-01,  1.7644e-01,  2.2043e-02,  1.1509e-01,
         -1.2608e-01, -4.8297e-01,  2.4760e-01, -2.3269e-01,  1.5577e-01,
         -1.7201e-01,  8.2667e-02,  1.6811e-01,  1.2862e-01, -1.5018e-01,
         -1.8460e-01,  1.5824e-01, -3.4824e-02, -5.1135e-02, -1.1832e-02,
         -1.0256e-01, -9.6147e-02, -2.0523e-02,  2.3559e-02, -1.9316e-01,
          1.5643e-01, -1.6376e-03,  8.9729e-02,  9.2825e-02,  1.0519e-02,
         -9.9466e-02,  2.1473e-03,  1.9871e-01, -3.4438e-01, -1.5747e-02,
          4.5468e-02, -2.0394e-01,  1.5513e-01, -1.2323e-01,  1.5829e-01,
         -4.3978e-03,  6.7243e-02, -3.1495e-05, -3.0892e-02,  1.4068e-01,
          3.0671e-01, -9.0438e-02,  7.0625e-02,  2.3882e-02, -5.5587e-02,
         -1.6219e-01, -5.4436e-02, -9.3510e-02, -2.1635e-01,  1.4359e-01,
          1.5580e-02,  7.1948e-02,  1.3499e-01,  2.0709e-01,  2.3450e-02,
         -6.4200e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
485000 特征值优化 tensor(0.5108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0447e+00,  2.5878e+00, -3.0729e-01, -9.9316e-01, -2.6232e-01,
          1.2258e+00, -1.1761e-01,  1.6019e+00, -5.0808e-01,  1.8031e-01,
          5.9476e-01, -3.5639e-01,  4.1353e-01, -1.0153e+00, -3.0460e-01,
         -8.4188e-02, -3.7066e-01, -3.2507e-01, -1.3786e-01, -1.3902e+00,
          1.1498e+00,  5.7237e-01, -4.3421e-01, -4.7633e-02,  8.3369e-03,
         -5.5042e-02, -5.4510e-01,  4.9010e-01,  1.2612e-01, -1.4113e-01,
         -1.3493e-01,  3.3007e-01,  3.8627e-01,  4.3829e-01, -1.0384e+00,
         -1.2916e-01,  6.3973e-01, -4.5493e-02,  5.6372e-01,  4.8069e-01,
          4.6613e-01, -2.4005e-02,  7.0693e-02,  1.6420e-01, -3.5682e-02,
          3.8496e-01,  5.6372e-02,  1.3010e-01,  1.4586e-01,  9.3056e-01,
         -5.7327e-02, -8.3405e-02,  3.0081e-01, -2.9139e-01,  3.3171e-02,
         -6.5543e-01,  1.5167e-02,  4.0113e-01,  3.3187e-01,  2.0826e-01,
          1.1166e-01, -4.4944e-01,  1.1823e-01, -1.2779e-01, -7.1595e-02,
          4.9078e-01,  7.4193e-04, -8.1408e-02,  2.0896e-01, -2.2962e-03,
          1.1669e-01, -1.1472e-01, -2.6596e-01, -5.3825e-02, -2.2486e-01,
          8.7729e-03, -1.5066e-01, -1.6614e-01, -1.4799e-01,  9.3922e-02,
          4.5640e-02,  1.1540e-01, -1.1706e-01, -1.6785e-01, -1.4903e-01,
          1.4745e-01, -9.2531e-02,  4.7915e-01,  1.7072e-01, -1.3450e-01,
          1.4708e-01,  5.0831e-02, -5.2728e-02, -4.2400e-01,  9.3333e-02,
         -3.2697e-01, -7.1795e-02, -1.5924e-01,  4.6842e-02, -2.5761e-01,
         -8.5630e-02, -1.1836e-01,  1.6444e-01,  1.3708e-02,  1.2502e-01,
         -1.4262e-01, -4.9976e-01,  2.4158e-01, -2.1937e-01,  1.5362e-01,
         -1.8531e-01,  8.0072e-02,  1.7524e-01,  1.1096e-01, -1.2442e-01,
         -1.8134e-01,  1.4859e-01, -2.6150e-02, -5.8426e-02, -2.4246e-02,
         -9.7623e-02, -9.7310e-02, -2.4183e-02,  2.9052e-02, -1.9194e-01,
          1.5725e-01,  7.7752e-03,  1.0191e-01,  9.0774e-02,  1.8153e-02,
         -9.6850e-02, -8.6615e-03,  1.9866e-01, -3.5022e-01, -1.1607e-02,
          4.3243e-02, -2.1886e-01,  1.5224e-01, -9.1162e-02,  1.5089e-01,
         -2.7500e-02,  7.2722e-02,  8.6915e-03, -1.6608e-02,  1.2097e-01,
          2.9428e-01, -1.0834e-01,  5.7081e-02,  1.5750e-02, -5.1323e-02,
         -1.4892e-01, -6.8199e-02, -9.5471e-02, -2.1634e-01,  1.3180e-01,
          2.3549e-02,  7.5669e-02,  1.3639e-01,  2.2221e-01,  2.1895e-02,
         -5.5498e-02]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
486000 特征值优化 tensor(0.5103, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0545e+00,  2.5647e+00, -2.9734e-01, -9.9060e-01, -2.5174e-01,
          1.2272e+00, -1.0910e-01,  1.5873e+00, -5.0520e-01,  1.7291e-01,
          5.8872e-01, -3.4206e-01,  3.8994e-01, -1.0054e+00, -3.4266e-01,
         -7.4917e-02, -3.5917e-01, -3.0463e-01, -1.4963e-01, -1.4016e+00,
          1.1708e+00,  5.9657e-01, -4.5975e-01, -4.3422e-02,  2.2394e-02,
         -5.6644e-02, -5.4296e-01,  4.8424e-01,  1.1974e-01, -1.3757e-01,
         -1.5800e-01,  3.3457e-01,  4.0899e-01,  4.4070e-01, -1.0458e+00,
         -1.1908e-01,  6.3967e-01, -4.9049e-02,  5.6674e-01,  4.7244e-01,
          4.6827e-01, -2.1997e-02,  7.3268e-02,  1.6078e-01, -3.3036e-02,
          3.8228e-01,  5.3532e-02,  1.2237e-01,  1.4019e-01,  9.2891e-01,
         -5.2790e-02, -7.1846e-02,  3.2082e-01, -2.9038e-01,  2.2676e-02,
         -6.5672e-01,  1.5064e-02,  3.9257e-01,  3.2103e-01,  1.9687e-01,
          1.0678e-01, -4.5418e-01,  1.1411e-01, -1.2294e-01, -7.4324e-02,
          4.7315e-01, -2.2884e-02, -8.3212e-02,  2.0697e-01, -1.1605e-02,
          1.0572e-01, -1.2339e-01, -2.6572e-01, -5.3270e-02, -2.2570e-01,
          5.1741e-03, -1.4539e-01, -1.6140e-01, -1.5775e-01,  8.7439e-02,
          3.7204e-02,  1.2060e-01, -1.1828e-01, -1.6196e-01, -1.4214e-01,
          1.4505e-01, -1.0437e-01,  4.8675e-01,  1.7657e-01, -1.4979e-01,
          1.3219e-01,  4.9549e-02, -3.9844e-02, -4.2258e-01,  9.0018e-02,
         -3.2982e-01, -8.8532e-02, -1.3152e-01,  4.5414e-02, -2.8590e-01,
         -8.1278e-02, -1.2158e-01,  1.7265e-01,  1.2011e-02,  1.3072e-01,
         -1.4918e-01, -5.0559e-01,  2.5242e-01, -1.9710e-01,  1.4829e-01,
         -1.8766e-01,  7.1381e-02,  1.7886e-01,  1.0692e-01, -1.3054e-01,
         -1.6470e-01,  1.6691e-01, -7.9502e-03, -5.5655e-02, -3.0584e-02,
         -9.6374e-02, -1.1483e-01, -2.2316e-02,  2.1964e-02, -1.7094e-01,
          1.5200e-01,  2.3681e-03,  9.3769e-02,  9.0622e-02,  2.3994e-02,
         -6.3395e-02, -1.2716e-02,  1.9898e-01, -3.4621e-01, -2.3112e-02,
          5.9915e-02, -2.1205e-01,  1.4481e-01, -1.0474e-01,  1.4060e-01,
         -2.1129e-02,  7.5603e-02,  1.3846e-02, -2.7260e-02,  1.3055e-01,
          3.0770e-01, -1.0352e-01,  6.3325e-02,  3.6848e-03, -5.1429e-02,
         -1.6333e-01, -5.6590e-02, -9.4674e-02, -2.1308e-01,  1.3297e-01,
          1.6397e-02,  7.2431e-02,  1.2867e-01,  2.2621e-01,  2.0020e-02,
         -5.0532e-02]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
487000 特征值优化 tensor(0.5076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0985,  2.5492, -0.3042, -0.9938, -0.2635,  1.2409, -0.0975,  1.5979,
         -0.5042,  0.1814,  0.5954, -0.3428,  0.4105, -0.9876, -0.3468, -0.0473,
         -0.3668, -0.2837, -0.1529, -1.4071,  1.1943,  0.6005, -0.4382, -0.0356,
          0.0160, -0.0537, -0.5412,  0.4677,  0.1337, -0.1504, -0.1573,  0.3254,
          0.4017,  0.4624, -1.0352, -0.1240,  0.6291, -0.0530,  0.5696,  0.4627,
          0.4617, -0.0231,  0.0729,  0.1614, -0.0247,  0.3929,  0.0439,  0.1311,
          0.1517,  0.9303, -0.0388, -0.0684,  0.3293, -0.2892,  0.0170, -0.6491,
          0.0227,  0.4054,  0.3166,  0.1909,  0.1108, -0.4439,  0.1126, -0.1234,
         -0.0792,  0.4607, -0.0355, -0.0805,  0.2190, -0.0250,  0.1042, -0.1324,
         -0.2659, -0.0501, -0.2234, -0.0051, -0.1530, -0.1691, -0.1564,  0.0894,
          0.0578,  0.1219, -0.1159, -0.1554, -0.1354,  0.1399, -0.1102,  0.4944,
          0.1738, -0.1524,  0.1471,  0.0553, -0.0419, -0.4165,  0.0876, -0.3291,
         -0.0958, -0.1503,  0.0511, -0.2963, -0.0550, -0.1396,  0.1770,  0.0072,
          0.1268, -0.1594, -0.5107,  0.2539, -0.1929,  0.1445, -0.1882,  0.0750,
          0.1842,  0.1061, -0.1355, -0.1549,  0.1768, -0.0079, -0.0609, -0.0294,
         -0.0794, -0.1181, -0.0338,  0.0304, -0.1688,  0.1527,  0.0054,  0.0937,
          0.0923,  0.0233, -0.0747, -0.0193,  0.1957, -0.3450, -0.0217,  0.0636,
         -0.2217,  0.1495, -0.1008,  0.1367, -0.0549,  0.0732,  0.0466, -0.0251,
          0.1330,  0.3101, -0.1024,  0.0580,  0.0031, -0.0478, -0.1472, -0.0610,
         -0.0890, -0.2123,  0.1181,  0.0351,  0.0670,  0.1315,  0.2356,  0.0178,
         -0.0480]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
488000 特征值优化 tensor(0.5073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1132e+00,  2.5362e+00, -3.1508e-01, -9.9238e-01, -2.2448e-01,
          1.2386e+00, -1.0122e-01,  1.6220e+00, -5.0905e-01,  1.7484e-01,
          6.0519e-01, -3.3824e-01,  4.1426e-01, -9.8196e-01, -3.5672e-01,
         -4.3929e-02, -3.9145e-01, -2.7829e-01, -1.5645e-01, -1.4132e+00,
          1.2041e+00,  6.0140e-01, -4.4360e-01, -2.5608e-02,  2.4032e-02,
         -4.9991e-02, -5.3990e-01,  4.5608e-01,  1.3615e-01, -1.5096e-01,
         -1.6235e-01,  3.2891e-01,  4.1057e-01,  4.7129e-01, -1.0310e+00,
         -1.2722e-01,  6.2423e-01, -5.4303e-02,  5.6702e-01,  4.5752e-01,
          4.6445e-01, -2.3239e-02,  7.2781e-02,  1.5741e-01, -2.6778e-02,
          3.9019e-01,  3.9962e-02,  1.2625e-01,  1.5354e-01,  9.3343e-01,
         -2.9674e-02, -6.0883e-02,  3.3428e-01, -2.8741e-01,  1.7791e-02,
         -6.5180e-01,  2.5636e-02,  4.0745e-01,  3.1189e-01,  1.8599e-01,
          1.0938e-01, -4.4387e-01,  1.1457e-01, -1.2346e-01, -8.6591e-02,
          4.5587e-01, -4.1316e-02, -9.0723e-02,  2.2387e-01, -2.6333e-02,
          1.0006e-01, -1.3758e-01, -2.6774e-01, -5.1186e-02, -2.1850e-01,
         -5.7131e-03, -1.4153e-01, -1.6741e-01, -1.5181e-01,  8.8160e-02,
          6.0641e-02,  1.1742e-01, -1.1658e-01, -1.6386e-01, -1.2721e-01,
          1.4270e-01, -9.6426e-02,  4.9191e-01,  1.5836e-01, -1.6730e-01,
          1.4469e-01,  6.3927e-02, -5.4068e-02, -4.2335e-01,  8.7677e-02,
         -3.2583e-01, -1.0171e-01, -1.5167e-01,  4.3644e-02, -3.0460e-01,
         -5.8626e-02, -1.4473e-01,  1.8111e-01,  1.8696e-02,  1.2529e-01,
         -1.5697e-01, -5.1490e-01,  2.5885e-01, -1.8788e-01,  1.4706e-01,
         -1.8789e-01,  7.1868e-02,  1.8275e-01,  1.0689e-01, -1.3246e-01,
         -1.5653e-01,  1.7384e-01, -5.9114e-03, -6.6413e-02, -2.9761e-02,
         -7.7156e-02, -1.1750e-01, -3.8453e-02,  3.4701e-02, -1.6780e-01,
          1.5084e-01,  2.0845e-03,  9.8314e-02,  9.5434e-02,  2.3939e-02,
         -7.8204e-02, -2.2921e-02,  1.9126e-01, -3.4322e-01, -1.9976e-02,
          5.2021e-02, -2.1986e-01,  1.4993e-01, -1.1891e-01,  1.5356e-01,
         -5.8610e-02,  5.9329e-02,  4.2517e-02, -3.0333e-02,  1.3378e-01,
          3.0538e-01, -9.4806e-02,  6.4060e-02,  3.5874e-03, -4.8964e-02,
         -1.5230e-01, -6.2601e-02, -8.5835e-02, -2.0895e-01,  1.1644e-01,
          3.7431e-02,  6.6889e-02,  1.2779e-01,  2.3400e-01,  2.6550e-02,
         -4.6070e-02]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
489000 特征值优化 tensor(0.5111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1164e+00,  2.5317e+00, -3.2724e-01, -9.9101e-01, -1.9658e-01,
          1.2533e+00, -1.0947e-01,  1.6180e+00, -5.2535e-01,  1.6166e-01,
          5.9739e-01, -3.3072e-01,  3.9523e-01, -9.7826e-01, -3.7636e-01,
         -5.4927e-02, -3.8258e-01, -2.7772e-01, -1.5855e-01, -1.4138e+00,
          1.2078e+00,  6.0513e-01, -4.4752e-01, -2.7542e-02,  2.9527e-02,
         -5.4239e-02, -5.4330e-01,  4.5201e-01,  1.3175e-01, -1.5109e-01,
         -1.7111e-01,  3.2978e-01,  4.3166e-01,  4.6287e-01, -1.0318e+00,
         -1.2615e-01,  6.2172e-01, -5.8061e-02,  5.7297e-01,  4.5027e-01,
          4.6363e-01, -2.3319e-02,  7.4613e-02,  1.4898e-01, -2.6714e-02,
          3.9044e-01,  4.6072e-02,  1.2365e-01,  1.4975e-01,  9.2740e-01,
         -3.4829e-02, -5.5463e-02,  3.4129e-01, -2.8362e-01,  2.1833e-02,
         -6.4239e-01,  2.6661e-02,  4.0428e-01,  3.1724e-01,  1.8781e-01,
          1.0491e-01, -4.4286e-01,  1.2202e-01, -1.2868e-01, -8.5277e-02,
          4.5466e-01, -5.1812e-02, -9.1777e-02,  2.2354e-01, -2.6337e-02,
          9.3257e-02, -1.4020e-01, -2.6769e-01, -5.7045e-02, -2.1296e-01,
         -7.9368e-03, -1.3568e-01, -1.6167e-01, -1.5137e-01,  8.3926e-02,
          5.8596e-02,  1.1659e-01, -1.1797e-01, -1.6490e-01, -1.1911e-01,
          1.4491e-01, -9.7533e-02,  4.9150e-01,  1.7313e-01, -1.6330e-01,
          1.3668e-01,  6.3784e-02, -5.4688e-02, -4.1316e-01,  9.0049e-02,
         -3.2578e-01, -1.0375e-01, -1.5286e-01,  4.6666e-02, -2.9678e-01,
         -5.4994e-02, -1.4638e-01,  1.7881e-01,  2.8716e-02,  1.3048e-01,
         -1.4971e-01, -5.1010e-01,  2.6872e-01, -1.8156e-01,  1.5077e-01,
         -1.8721e-01,  6.6053e-02,  1.8092e-01,  1.0167e-01, -1.3102e-01,
         -1.5510e-01,  1.8301e-01,  6.7844e-04, -7.3926e-02, -2.8321e-02,
         -8.7663e-02, -1.2202e-01, -3.2211e-02,  3.9103e-02, -1.6011e-01,
          1.5268e-01,  3.0160e-03,  9.3193e-02,  9.0665e-02,  2.2011e-02,
         -6.9972e-02, -2.1484e-02,  1.9199e-01, -3.4807e-01, -2.2004e-02,
          5.3425e-02, -2.2213e-01,  1.4731e-01, -1.2312e-01,  1.4140e-01,
         -4.7300e-02,  6.6850e-02,  3.8071e-02, -3.8215e-02,  1.3640e-01,
          3.1371e-01, -9.5289e-02,  6.4789e-02, -5.5779e-03, -4.1783e-02,
         -1.5590e-01, -5.1364e-02, -8.8170e-02, -2.0684e-01,  1.2429e-01,
          3.3697e-02,  6.3167e-02,  1.3735e-01,  2.2467e-01,  2.3971e-02,
         -4.3515e-02]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
490000 特征值优化 tensor(0.5300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1259e+00,  2.5280e+00, -3.3651e-01, -9.9496e-01, -1.8319e-01,
          1.2600e+00, -9.9670e-02,  1.6227e+00, -5.3529e-01,  1.7111e-01,
          5.9692e-01, -3.1605e-01,  3.9733e-01, -9.6717e-01, -3.7322e-01,
         -7.9596e-02, -3.5783e-01, -2.7649e-01, -1.5907e-01, -1.4240e+00,
          1.2142e+00,  6.1055e-01, -4.5270e-01, -1.5513e-02,  4.1689e-02,
         -6.7417e-02, -5.6304e-01,  4.5011e-01,  1.3398e-01, -1.5174e-01,
         -1.8616e-01,  3.1729e-01,  4.2680e-01,  4.4649e-01, -1.0345e+00,
         -1.2413e-01,  6.0865e-01, -6.5776e-02,  5.7752e-01,  4.4205e-01,
          4.5956e-01, -2.2450e-02,  7.2316e-02,  1.4549e-01, -2.3477e-02,
          3.8302e-01,  3.6387e-02,  1.2041e-01,  1.6066e-01,  9.2183e-01,
         -3.2898e-02, -4.3155e-02,  3.4731e-01, -2.8439e-01,  1.6959e-02,
         -6.3965e-01,  4.5917e-02,  4.1667e-01,  3.2470e-01,  1.8383e-01,
          1.0802e-01, -4.3277e-01,  1.2691e-01, -1.1219e-01, -8.4585e-02,
          4.5092e-01, -6.7486e-02, -1.0670e-01,  2.2629e-01, -3.2466e-02,
          9.6320e-02, -1.4734e-01, -2.6869e-01, -4.8346e-02, -2.1907e-01,
         -6.8878e-03, -1.2864e-01, -1.8374e-01, -1.6446e-01,  8.3630e-02,
          6.1169e-02,  1.1668e-01, -1.2331e-01, -1.5691e-01, -1.0580e-01,
          1.3320e-01, -8.9296e-02,  4.7818e-01,  2.0078e-01, -1.4974e-01,
          1.3168e-01,  6.2884e-02, -3.9910e-02, -4.1894e-01,  8.8703e-02,
         -3.2119e-01, -9.8829e-02, -1.4751e-01,  7.7210e-02, -2.8465e-01,
         -6.9732e-02, -1.3782e-01,  1.8215e-01,  1.8648e-02,  1.2287e-01,
         -1.4190e-01, -5.0443e-01,  2.6891e-01, -1.7831e-01,  1.4962e-01,
         -1.8641e-01,  4.2690e-02,  1.6922e-01,  1.1547e-01, -1.3765e-01,
         -1.5125e-01,  1.9721e-01,  5.5662e-03, -7.0142e-02, -7.6855e-03,
         -1.0093e-01, -1.2747e-01, -3.7596e-02,  4.0704e-02, -1.5440e-01,
          1.5691e-01, -2.7619e-03,  8.9384e-02,  9.3372e-02,  2.4246e-02,
         -7.2739e-02, -2.0795e-02,  1.9097e-01, -3.4294e-01, -1.7149e-02,
          4.1686e-02, -2.3774e-01,  1.5447e-01, -1.2272e-01,  1.6612e-01,
         -5.2429e-02,  4.4195e-02,  3.5686e-02, -5.7030e-02,  1.2814e-01,
          3.1890e-01, -7.8105e-02,  6.8315e-02,  1.1811e-03, -3.6447e-02,
         -1.5861e-01, -4.5208e-02, -7.9064e-02, -2.0871e-01,  1.2618e-01,
          3.5480e-02,  5.6162e-02,  1.3977e-01,  2.3070e-01,  2.8571e-02,
         -4.0935e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
491000 特征值优化 tensor(0.5147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1368e+00,  2.5339e+00, -3.4217e-01, -1.0007e+00, -2.0138e-01,
          1.2605e+00, -1.0671e-01,  1.6456e+00, -5.4362e-01,  1.7488e-01,
          5.9459e-01, -3.1054e-01,  4.0029e-01, -9.7295e-01, -3.8733e-01,
         -7.2795e-02, -3.6817e-01, -2.7595e-01, -1.6340e-01, -1.4158e+00,
          1.2314e+00,  6.1430e-01, -4.4530e-01, -5.1882e-03,  4.7211e-02,
         -6.3601e-02, -5.4694e-01,  4.4018e-01,  1.3146e-01, -1.5996e-01,
         -1.7665e-01,  3.2244e-01,  4.2608e-01,  4.5978e-01, -1.0359e+00,
         -1.2280e-01,  6.1503e-01, -7.6749e-02,  5.7660e-01,  4.4196e-01,
          4.5666e-01, -2.4486e-02,  7.5379e-02,  1.4329e-01, -1.7139e-02,
          3.9064e-01,  4.4166e-02,  1.3178e-01,  1.6085e-01,  9.1988e-01,
         -2.6395e-02, -4.3120e-02,  3.5371e-01, -2.7704e-01,  1.8704e-02,
         -6.3562e-01,  3.5174e-02,  4.1032e-01,  3.2910e-01,  1.8105e-01,
          9.4113e-02, -4.3268e-01,  1.2715e-01, -1.2830e-01, -8.9719e-02,
          4.4841e-01, -5.7012e-02, -9.7865e-02,  2.3058e-01, -4.9098e-02,
          8.6866e-02, -1.5222e-01, -2.7094e-01, -4.7141e-02, -2.0861e-01,
         -1.0671e-02, -1.2162e-01, -1.7680e-01, -1.6064e-01,  8.2927e-02,
          6.8639e-02,  1.1351e-01, -1.1842e-01, -1.5997e-01, -1.0723e-01,
          1.4436e-01, -8.9538e-02,  4.8195e-01,  1.9372e-01, -1.6320e-01,
          1.3099e-01,  6.6311e-02, -5.6470e-02, -4.1405e-01,  8.9507e-02,
         -3.2482e-01, -9.5916e-02, -1.6114e-01,  7.1400e-02, -2.8861e-01,
         -4.4373e-02, -1.4251e-01,  1.7569e-01,  3.1193e-02,  1.2150e-01,
         -1.6376e-01, -5.1421e-01,  2.6881e-01, -1.7788e-01,  1.5361e-01,
         -1.8245e-01,  4.7925e-02,  1.7166e-01,  1.0208e-01, -1.3013e-01,
         -1.4194e-01,  1.9381e-01,  7.9943e-03, -7.7383e-02, -7.7269e-03,
         -9.1228e-02, -1.2298e-01, -4.4989e-02,  5.0472e-02, -1.4560e-01,
          1.6097e-01,  3.0806e-03,  9.4293e-02,  9.5425e-02,  2.6644e-02,
         -7.0969e-02, -2.8016e-02,  1.8705e-01, -3.4685e-01, -1.9399e-02,
          4.6332e-02, -2.3693e-01,  1.4080e-01, -1.2462e-01,  1.4825e-01,
         -5.4371e-02,  7.0559e-02,  4.7509e-02, -4.2000e-02,  1.2623e-01,
          3.1124e-01, -8.2836e-02,  7.0443e-02, -2.7147e-03, -2.8310e-02,
         -1.5301e-01, -4.6865e-02, -8.9635e-02, -2.1008e-01,  1.1836e-01,
          4.2036e-02,  5.4048e-02,  1.3251e-01,  2.3658e-01,  3.2225e-02,
         -3.7249e-02]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
492000 特征值优化 tensor(0.5087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1420e+00,  2.5281e+00, -3.3093e-01, -9.9180e-01, -1.7574e-01,
          1.2690e+00, -1.2224e-01,  1.6577e+00, -5.4396e-01,  1.8608e-01,
          6.0068e-01, -2.9651e-01,  3.9008e-01, -9.6248e-01, -3.9088e-01,
         -4.9510e-02, -3.6562e-01, -2.7669e-01, -1.6464e-01, -1.4276e+00,
          1.2419e+00,  6.1276e-01, -4.4286e-01, -1.1681e-02,  2.8396e-02,
         -6.9996e-02, -5.4665e-01,  4.4232e-01,  1.4557e-01, -1.6462e-01,
         -1.7693e-01,  3.2091e-01,  4.4239e-01,  4.7850e-01, -1.0329e+00,
         -1.3031e-01,  6.1970e-01, -7.8841e-02,  5.7225e-01,  4.4262e-01,
          4.5825e-01, -2.3299e-02,  7.2143e-02,  1.4801e-01, -1.7173e-02,
          3.9392e-01,  4.6680e-02,  1.3172e-01,  1.6283e-01,  9.2249e-01,
         -2.0019e-02, -3.3239e-02,  3.5889e-01, -2.7422e-01,  1.9823e-02,
         -6.5073e-01,  3.4717e-02,  3.9935e-01,  3.2343e-01,  1.8064e-01,
          1.0285e-01, -4.3145e-01,  1.3108e-01, -1.2449e-01, -1.0420e-01,
          4.3675e-01, -5.6754e-02, -9.6406e-02,  2.2730e-01, -5.2287e-02,
          8.7881e-02, -1.5099e-01, -2.6666e-01, -4.5300e-02, -2.0508e-01,
         -1.0582e-02, -1.1763e-01, -1.7284e-01, -1.4941e-01,  7.9890e-02,
          7.0633e-02,  1.1453e-01, -1.1906e-01, -1.4554e-01, -1.0460e-01,
          1.3732e-01, -7.3483e-02,  4.7754e-01,  1.6909e-01, -1.6705e-01,
          1.3833e-01,  7.1306e-02, -6.5332e-02, -4.1523e-01,  8.7135e-02,
         -3.2235e-01, -9.2418e-02, -1.8148e-01,  7.3869e-02, -3.0845e-01,
         -4.3179e-02, -1.5659e-01,  1.8188e-01,  4.1333e-02,  1.2383e-01,
         -1.5511e-01, -5.1936e-01,  2.6895e-01, -1.8049e-01,  1.5555e-01,
         -1.7326e-01,  5.3856e-02,  1.7097e-01,  1.0238e-01, -1.3726e-01,
         -1.4818e-01,  1.9381e-01,  1.1273e-02, -6.4069e-02, -2.7403e-02,
         -8.0032e-02, -1.2273e-01, -3.3040e-02,  5.5344e-02, -1.4186e-01,
          1.5142e-01, -7.9933e-04,  9.3555e-02,  9.0164e-02,  1.9710e-02,
         -6.7027e-02, -2.1821e-02,  1.8757e-01, -3.4431e-01, -9.5790e-03,
          3.8617e-02, -2.3889e-01,  1.3768e-01, -1.2632e-01,  1.4852e-01,
         -7.0604e-02,  6.7354e-02,  4.0419e-02, -3.7826e-02,  1.3288e-01,
          3.1969e-01, -8.0768e-02,  7.7530e-02, -8.0532e-03, -2.4923e-02,
         -1.5596e-01, -3.5890e-02, -8.1307e-02, -2.1189e-01,  1.1910e-01,
          4.7719e-02,  5.2970e-02,  1.3580e-01,  2.2487e-01,  2.9319e-02,
         -2.8305e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
493000 特征值优化 tensor(0.5301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1394,  2.5241, -0.3195, -0.9965, -0.2083,  1.2708, -0.1129,  1.6459,
         -0.5456,  0.1978,  0.5957, -0.2808,  0.4019, -0.9669, -0.3828, -0.0396,
         -0.3525, -0.2719, -0.1602, -1.4226,  1.2428,  0.6152, -0.4378, -0.0123,
          0.0286, -0.0766, -0.5520,  0.4382,  0.1459, -0.1603, -0.1779,  0.3204,
          0.4486,  0.4829, -1.0354, -0.1345,  0.6247, -0.0796,  0.5723,  0.4422,
          0.4536, -0.0232,  0.0713,  0.1492, -0.0166,  0.3900,  0.0482,  0.1290,
          0.1781,  0.9140, -0.0128, -0.0314,  0.3585, -0.2742,  0.0206, -0.6493,
          0.0463,  0.4096,  0.3289,  0.1803,  0.0944, -0.4318,  0.1277, -0.1114,
         -0.1081,  0.4283, -0.0529, -0.0925,  0.2291, -0.0482,  0.0922, -0.1544,
         -0.2686, -0.0355, -0.2043, -0.0072, -0.1148, -0.1736, -0.1473,  0.0828,
          0.0700,  0.1157, -0.1200, -0.1437, -0.1026,  0.1368, -0.0658,  0.4642,
          0.1601, -0.1794,  0.1386,  0.0694, -0.0727, -0.4189,  0.0902, -0.3252,
         -0.0800, -0.1872,  0.0786, -0.3091, -0.0484, -0.1562,  0.1713,  0.0408,
          0.1358, -0.1528, -0.5217,  0.2814, -0.1850,  0.1530, -0.1718,  0.0453,
          0.1681,  0.1150, -0.1307, -0.1447,  0.2003,  0.0140, -0.0639, -0.0281,
         -0.0798, -0.1209, -0.0412,  0.0577, -0.1345,  0.1571, -0.0058,  0.0962,
          0.0931,  0.0218, -0.0753, -0.0231,  0.1895, -0.3392, -0.0062,  0.0456,
         -0.2497,  0.1344, -0.1243,  0.1652, -0.0800,  0.0532,  0.0382, -0.0242,
          0.1358,  0.3184, -0.0834,  0.0732, -0.0112, -0.0281, -0.1559, -0.0277,
         -0.0769, -0.2119,  0.1211,  0.0511,  0.0493,  0.1413,  0.2192,  0.0337,
         -0.0274]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
494000 特征值优化 tensor(0.5113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1450,  2.5313, -0.3119, -0.9926, -0.2222,  1.2772, -0.1221,  1.6371,
         -0.5608,  0.2162,  0.5908, -0.2578,  0.3982, -0.9580, -0.3717, -0.0349,
         -0.3205, -0.2667, -0.1590, -1.4150,  1.2437,  0.6279, -0.4406, -0.0167,
          0.0308, -0.0785, -0.5456,  0.4387,  0.1443, -0.1601, -0.1921,  0.3133,
          0.4575,  0.4747, -1.0423, -0.1350,  0.6263, -0.0831,  0.5806,  0.4360,
          0.4534, -0.0235,  0.0719,  0.1457, -0.0146,  0.3803,  0.0565,  0.1254,
          0.1831,  0.9131, -0.0152, -0.0189,  0.3756, -0.2788,  0.0175, -0.6578,
          0.0386,  0.4126,  0.3379,  0.1767,  0.1011, -0.4377,  0.1179, -0.1215,
         -0.1158,  0.4289, -0.0600, -0.0985,  0.2282, -0.0553,  0.0823, -0.1558,
         -0.2711, -0.0417, -0.2059, -0.0183, -0.1127, -0.1701, -0.1479,  0.0885,
          0.0749,  0.1187, -0.1168, -0.1387, -0.0998,  0.1359, -0.0715,  0.4629,
          0.1753, -0.1804,  0.1297,  0.0616, -0.0606, -0.4129,  0.0893, -0.3287,
         -0.0793, -0.1789,  0.0688, -0.2898, -0.0547, -0.1595,  0.1673,  0.0442,
          0.1327, -0.1583, -0.5132,  0.2917, -0.1721,  0.1514, -0.1660,  0.0394,
          0.1717,  0.1135, -0.1340, -0.1480,  0.1970,  0.0213, -0.0576, -0.0163,
         -0.0832, -0.1257, -0.0354,  0.0648, -0.1308,  0.1587, -0.0043,  0.0913,
          0.0803,  0.0202, -0.0647, -0.0261,  0.1908, -0.3457, -0.0118,  0.0266,
         -0.2393,  0.1381, -0.1316,  0.1605, -0.0605,  0.0514,  0.0322, -0.0298,
          0.1372,  0.3230, -0.0863,  0.0668, -0.0159, -0.0160, -0.1523, -0.0255,
         -0.0814, -0.2064,  0.1220,  0.0388,  0.0513,  0.1475,  0.2222,  0.0378,
         -0.0199]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
495000 特征值优化 tensor(0.5097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1648,  2.5435, -0.3097, -0.9919, -0.2644,  1.2945, -0.1268,  1.6391,
         -0.5820,  0.2183,  0.5885, -0.2371,  0.3981, -0.9648, -0.3762, -0.0192,
         -0.2909, -0.2636, -0.1586, -1.4115,  1.2472,  0.6324, -0.4329, -0.0202,
          0.0192, -0.0849, -0.5511,  0.4423,  0.1502, -0.1613, -0.1970,  0.3119,
          0.4552,  0.4754, -1.0452, -0.1339,  0.6324, -0.0876,  0.5804,  0.4339,
          0.4507, -0.0245,  0.0718,  0.1486, -0.0166,  0.3776,  0.0547,  0.1288,
          0.1815,  0.9103, -0.0099, -0.0103,  0.3826, -0.2780,  0.0160, -0.6569,
          0.0338,  0.4117,  0.3466,  0.1745,  0.1003, -0.4355,  0.1225, -0.1186,
         -0.1179,  0.4209, -0.0583, -0.0976,  0.2250, -0.0582,  0.0804, -0.1583,
         -0.2681, -0.0393, -0.1990, -0.0197, -0.1145, -0.1558, -0.1490,  0.0877,
          0.0761,  0.1186, -0.1178, -0.1336, -0.1049,  0.1292, -0.0714,  0.4635,
          0.1730, -0.1895,  0.1274,  0.0652, -0.0590, -0.4121,  0.0891, -0.3287,
         -0.0697, -0.1822,  0.0656, -0.2934, -0.0572, -0.1657,  0.1655,  0.0463,
          0.1397, -0.1509, -0.5121,  0.2979, -0.1736,  0.1499, -0.1699,  0.0408,
          0.1749,  0.1155, -0.1358, -0.1374,  0.2017,  0.0248, -0.0548, -0.0215,
         -0.0777, -0.1316, -0.0334,  0.0675, -0.1206,  0.1574, -0.0057,  0.0906,
          0.0783,  0.0206, -0.0664, -0.0228,  0.1908, -0.3472, -0.0116,  0.0269,
         -0.2419,  0.1335, -0.1351,  0.1632, -0.0635,  0.0514,  0.0256, -0.0214,
          0.1314,  0.3189, -0.0838,  0.0680, -0.0183, -0.0121, -0.1499, -0.0196,
         -0.0817, -0.2113,  0.1214,  0.0434,  0.0514,  0.1528,  0.2255,  0.0414,
         -0.0198]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
496000 特征值优化 tensor(0.5120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1880,  2.5581, -0.3167, -0.9953, -0.3024,  1.2991, -0.1244,  1.6433,
         -0.6047,  0.2186,  0.5819, -0.2219,  0.3994, -0.9683, -0.3805, -0.0152,
         -0.2676, -0.2573, -0.1535, -1.4164,  1.2555,  0.6395, -0.4256, -0.0270,
          0.0134, -0.0883, -0.5470,  0.4439,  0.1484, -0.1629, -0.2002,  0.3129,
          0.4517,  0.4755, -1.0521, -0.1373,  0.6399, -0.0854,  0.5805,  0.4305,
          0.4482, -0.0238,  0.0745,  0.1432, -0.0118,  0.3758,  0.0545,  0.1254,
          0.1917,  0.9073, -0.0058, -0.0112,  0.3787, -0.2791,  0.0149, -0.6605,
          0.0284,  0.4154,  0.3531,  0.1699,  0.1021, -0.4307,  0.1268, -0.1293,
         -0.1193,  0.4176, -0.0563, -0.0981,  0.2217, -0.0540,  0.0768, -0.1604,
         -0.2665, -0.0398, -0.2005, -0.0236, -0.1126, -0.1554, -0.1534,  0.0917,
          0.0774,  0.1164, -0.1139, -0.1359, -0.1046,  0.1355, -0.0692,  0.4615,
          0.1742, -0.1847,  0.1271,  0.0611, -0.0548, -0.4080,  0.0864, -0.3294,
         -0.0763, -0.1772,  0.0506, -0.2826, -0.0623, -0.1653,  0.1709,  0.0567,
          0.1457, -0.1551, -0.5117,  0.3035, -0.1739,  0.1495, -0.1715,  0.0361,
          0.1731,  0.1088, -0.1341, -0.1358,  0.1948,  0.0251, -0.0536, -0.0130,
         -0.0828, -0.1234, -0.0355,  0.0735, -0.1131,  0.1568, -0.0086,  0.0910,
          0.0733,  0.0219, -0.0683, -0.0277,  0.1926, -0.3446, -0.0161,  0.0230,
         -0.2406,  0.1307, -0.1346,  0.1618, -0.0613,  0.0489,  0.0267, -0.0270,
          0.1335,  0.3177, -0.0896,  0.0681, -0.0188, -0.0055, -0.1484, -0.0161,
         -0.0821, -0.2080,  0.1198,  0.0340,  0.0508,  0.1580,  0.2277,  0.0442,
         -0.0182]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
497000 特征值优化 tensor(0.5241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2060e+00,  2.5658e+00, -3.3218e-01, -9.9983e-01, -3.2382e-01,
          1.3167e+00, -1.2347e-01,  1.6555e+00, -6.3002e-01,  2.1726e-01,
          5.7052e-01, -2.1150e-01,  3.8734e-01, -9.8197e-01, -3.8551e-01,
         -2.6284e-02, -2.4386e-01, -2.6108e-01, -1.4745e-01, -1.4163e+00,
          1.2568e+00,  6.4044e-01, -4.2463e-01, -2.6586e-02,  1.1888e-02,
         -8.8222e-02, -5.5186e-01,  4.3099e-01,  1.4238e-01, -1.6259e-01,
         -2.0146e-01,  3.0442e-01,  4.5079e-01,  4.7999e-01, -1.0539e+00,
         -1.3255e-01,  6.2896e-01, -8.2856e-02,  5.8181e-01,  4.2647e-01,
          4.4579e-01, -2.3752e-02,  7.1798e-02,  1.4039e-01, -1.0768e-02,
          3.7239e-01,  5.5848e-02,  1.1371e-01,  1.9487e-01,  8.9211e-01,
         -1.2057e-03, -1.2363e-02,  3.6923e-01, -2.8191e-01,  2.1147e-02,
         -6.4713e-01,  2.2594e-02,  4.2188e-01,  3.6506e-01,  1.6762e-01,
          1.0118e-01, -4.2042e-01,  1.3628e-01, -1.1278e-01, -1.0273e-01,
          4.2468e-01, -5.8795e-02, -1.1166e-01,  2.1701e-01, -5.0795e-02,
          8.0646e-02, -1.6419e-01, -2.6300e-01, -3.6350e-02, -2.0415e-01,
         -3.2451e-02, -1.1410e-01, -1.7410e-01, -1.6213e-01,  9.3559e-02,
          7.7775e-02,  1.1262e-01, -1.1581e-01, -1.4170e-01, -1.1143e-01,
          1.3965e-01, -7.2920e-02,  4.6100e-01,  1.6737e-01, -1.6133e-01,
          1.3436e-01,  5.1265e-02, -4.8862e-02, -4.1509e-01,  8.7778e-02,
         -3.2421e-01, -8.2134e-02, -1.6708e-01,  4.9962e-02, -2.6809e-01,
         -7.7382e-02, -1.6056e-01,  1.6646e-01,  6.2780e-02,  1.5582e-01,
         -1.3614e-01, -5.2535e-01,  3.0184e-01, -1.6953e-01,  1.4420e-01,
         -1.7369e-01,  2.4322e-02,  1.6604e-01,  1.2125e-01, -1.2162e-01,
         -1.2766e-01,  1.9740e-01,  2.5097e-02, -6.6404e-02, -3.9982e-03,
         -8.9605e-02, -1.2502e-01, -4.2182e-02,  7.7265e-02, -1.0888e-01,
          1.5651e-01, -1.6150e-02,  9.0687e-02,  7.9733e-02,  2.0798e-02,
         -7.4879e-02, -3.2343e-02,  1.9159e-01, -3.4619e-01, -1.1364e-02,
          3.6195e-02, -2.2516e-01,  1.3709e-01, -1.5644e-01,  1.6494e-01,
         -6.3377e-02,  4.5065e-02,  2.7174e-02, -4.3150e-02,  1.2124e-01,
          3.1259e-01, -8.9926e-02,  7.1211e-02, -1.0918e-02, -9.6575e-04,
         -1.4990e-01, -1.5384e-02, -8.2165e-02, -2.0025e-01,  1.1395e-01,
          3.5282e-02,  5.0761e-02,  1.6366e-01,  2.3404e-01,  4.6857e-02,
         -1.7522e-02]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
498000 特征值优化 tensor(0.5094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2274e+00,  2.5761e+00, -3.4143e-01, -9.9161e-01, -3.3759e-01,
          1.3334e+00, -1.2324e-01,  1.6620e+00, -6.2629e-01,  2.1822e-01,
          5.6137e-01, -2.2367e-01,  3.9134e-01, -9.8388e-01, -3.9235e-01,
         -1.1572e-02, -2.5598e-01, -2.5013e-01, -1.4037e-01, -1.4126e+00,
          1.2653e+00,  6.3985e-01, -4.2664e-01, -3.4367e-02,  2.0841e-02,
         -8.8741e-02, -5.4751e-01,  4.2704e-01,  1.5231e-01, -1.5951e-01,
         -2.1002e-01,  3.0671e-01,  4.5253e-01,  4.8989e-01, -1.0534e+00,
         -1.3456e-01,  6.2549e-01, -8.1859e-02,  5.7847e-01,  4.2674e-01,
          4.4660e-01, -2.3619e-02,  7.3224e-02,  1.4417e-01, -1.3454e-02,
          3.6210e-01,  4.2751e-02,  1.0772e-01,  1.9772e-01,  8.9486e-01,
          4.3543e-04,  5.7774e-03,  3.7040e-01, -2.8702e-01,  1.6575e-02,
         -6.4621e-01,  2.3492e-02,  4.1578e-01,  3.7515e-01,  1.6291e-01,
          9.8349e-02, -4.2185e-01,  1.5488e-01, -1.0644e-01, -1.0218e-01,
          4.2258e-01, -6.3431e-02, -1.1065e-01,  2.1470e-01, -5.5034e-02,
          8.4098e-02, -1.6814e-01, -2.5996e-01, -2.7130e-02, -2.0193e-01,
         -3.2625e-02, -1.0842e-01, -1.6686e-01, -1.6029e-01,  9.2710e-02,
          8.0752e-02,  1.1519e-01, -1.1578e-01, -1.4274e-01, -1.0174e-01,
          1.4485e-01, -8.0736e-02,  4.5794e-01,  1.6289e-01, -1.8429e-01,
          1.3322e-01,  5.3458e-02, -4.3563e-02, -4.1229e-01,  8.9924e-02,
         -3.2093e-01, -7.8200e-02, -1.5845e-01,  6.7569e-02, -2.8377e-01,
         -6.7081e-02, -1.6954e-01,  1.6164e-01,  6.1423e-02,  1.5937e-01,
         -1.3557e-01, -5.2833e-01,  2.9448e-01, -1.6324e-01,  1.4451e-01,
         -1.8221e-01,  3.2674e-02,  1.6830e-01,  1.2507e-01, -1.1371e-01,
         -1.3027e-01,  2.0324e-01,  2.9482e-02, -7.3978e-02, -6.5574e-03,
         -8.8411e-02, -1.2367e-01, -4.7714e-02,  7.4425e-02, -1.0412e-01,
          1.5360e-01, -1.5732e-02,  9.3814e-02,  8.3269e-02,  1.8287e-02,
         -7.3325e-02, -3.6320e-02,  1.9524e-01, -3.4992e-01, -1.1723e-02,
          4.8087e-02, -2.2661e-01,  1.3660e-01, -1.5001e-01,  1.5381e-01,
         -4.6126e-02,  5.5250e-02,  2.0292e-02, -4.2423e-02,  1.2249e-01,
          3.0735e-01, -8.8997e-02,  6.4726e-02, -1.7808e-02, -4.3978e-03,
         -1.4759e-01, -1.5650e-02, -7.7944e-02, -2.0060e-01,  1.0970e-01,
          3.7481e-02,  5.2162e-02,  1.6480e-01,  2.3118e-01,  5.0214e-02,
         -2.0335e-02]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
499000 特征值优化 tensor(0.5096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2510e+00,  2.5781e+00, -3.4322e-01, -9.9128e-01, -3.3142e-01,
          1.3201e+00, -1.2791e-01,  1.6548e+00, -6.2186e-01,  2.2369e-01,
          5.6708e-01, -2.0379e-01,  4.0076e-01, -9.7455e-01, -3.8600e-01,
         -7.4730e-03, -2.5227e-01, -2.5042e-01, -1.4908e-01, -1.4284e+00,
          1.2685e+00,  6.4140e-01, -4.1596e-01, -3.7946e-02,  4.6877e-03,
         -1.0045e-01, -5.4439e-01,  4.3842e-01,  1.4863e-01, -1.6835e-01,
         -2.0647e-01,  3.1206e-01,  4.4068e-01,  4.8299e-01, -1.0507e+00,
         -1.3831e-01,  6.4484e-01, -8.5095e-02,  5.7660e-01,  4.2221e-01,
          4.4448e-01, -2.4197e-02,  7.0779e-02,  1.3667e-01, -1.2548e-02,
          3.7864e-01,  5.9604e-02,  1.2264e-01,  2.0368e-01,  8.9843e-01,
          6.0638e-03, -2.0480e-04,  3.8235e-01, -2.8032e-01,  1.2554e-02,
         -6.5624e-01,  2.4879e-02,  4.0754e-01,  3.6441e-01,  1.6114e-01,
          1.0044e-01, -4.2656e-01,  1.4017e-01, -1.2813e-01, -1.2080e-01,
          4.1293e-01, -5.1736e-02, -9.2634e-02,  2.2177e-01, -5.8344e-02,
          7.5824e-02, -1.6318e-01, -2.6416e-01, -4.0321e-02, -1.9751e-01,
         -2.1858e-02, -1.0901e-01, -1.5090e-01, -1.4417e-01,  9.0493e-02,
          8.2602e-02,  1.1909e-01, -1.1508e-01, -1.3149e-01, -1.0192e-01,
          1.2683e-01, -6.6410e-02,  4.5601e-01,  1.6392e-01, -1.9345e-01,
          1.2870e-01,  5.7967e-02, -5.5584e-02, -4.0653e-01,  8.9544e-02,
         -3.1937e-01, -6.1393e-02, -1.8065e-01,  5.6549e-02, -3.0061e-01,
         -7.3480e-02, -1.8195e-01,  1.6838e-01,  6.1509e-02,  1.4849e-01,
         -1.4703e-01, -5.1749e-01,  3.0425e-01, -1.6847e-01,  1.4833e-01,
         -1.6970e-01,  3.8608e-02,  1.7453e-01,  1.1300e-01, -1.2857e-01,
         -1.3642e-01,  1.9777e-01,  2.4936e-02, -5.7184e-02, -1.9059e-02,
         -7.4474e-02, -1.2622e-01, -3.0300e-02,  7.6381e-02, -1.0447e-01,
          1.4894e-01, -1.6446e-02,  9.4850e-02,  7.7748e-02,  2.1879e-02,
         -7.1282e-02, -2.9892e-02,  1.8870e-01, -3.4250e-01, -1.3052e-02,
          2.6135e-02, -2.3605e-01,  1.3414e-01, -1.3735e-01,  1.5474e-01,
         -6.7060e-02,  5.1025e-02,  2.8857e-02, -2.4392e-02,  1.3405e-01,
          3.1930e-01, -8.6604e-02,  6.5023e-02, -2.3408e-02, -6.5108e-03,
         -1.4587e-01, -1.1395e-02, -8.0044e-02, -2.0745e-01,  1.1610e-01,
          4.0448e-02,  4.5119e-02,  1.6141e-01,  2.2393e-01,  4.7423e-02,
         -1.9243e-02]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
500000 特征值优化 tensor(0.5073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2625e+00,  2.5865e+00, -3.5581e-01, -9.9244e-01, -3.4508e-01,
          1.3329e+00, -1.2142e-01,  1.6739e+00, -6.4167e-01,  2.2866e-01,
          5.5479e-01, -2.0577e-01,  3.8298e-01, -9.8108e-01, -3.9638e-01,
         -6.8296e-03, -2.3059e-01, -2.5448e-01, -1.3821e-01, -1.4209e+00,
          1.2673e+00,  6.4180e-01, -4.1972e-01, -3.6633e-02,  1.7373e-02,
         -9.0077e-02, -5.5307e-01,  4.2060e-01,  1.4639e-01, -1.6381e-01,
         -2.0755e-01,  3.0539e-01,  4.3973e-01,  4.9462e-01, -1.0609e+00,
         -1.3282e-01,  6.3065e-01, -8.1869e-02,  5.8231e-01,  4.1738e-01,
          4.4515e-01, -2.3773e-02,  7.4173e-02,  1.3743e-01, -8.4157e-03,
          3.6801e-01,  5.8774e-02,  1.1147e-01,  2.0727e-01,  8.8791e-01,
          3.4412e-03,  8.4446e-03,  3.6497e-01, -2.8712e-01,  2.0284e-02,
         -6.4336e-01,  2.4472e-02,  4.1544e-01,  3.8043e-01,  1.6329e-01,
          9.6889e-02, -4.1578e-01,  1.5820e-01, -1.0911e-01, -9.9063e-02,
          4.2268e-01, -6.3355e-02, -1.1046e-01,  2.1065e-01, -5.4319e-02,
          8.0439e-02, -1.7278e-01, -2.5640e-01, -2.7807e-02, -1.9623e-01,
         -3.4251e-02, -1.1532e-01, -1.7444e-01, -1.6329e-01,  9.5208e-02,
          8.1517e-02,  1.1244e-01, -1.1640e-01, -1.4462e-01, -1.0116e-01,
          1.4646e-01, -8.0011e-02,  4.5433e-01,  1.6001e-01, -1.7529e-01,
          1.3263e-01,  5.3630e-02, -4.3266e-02, -4.1156e-01,  8.4754e-02,
         -3.1850e-01, -7.9482e-02, -1.6335e-01,  6.0173e-02, -2.7324e-01,
         -8.0077e-02, -1.7325e-01,  1.6738e-01,  6.4944e-02,  1.6630e-01,
         -1.2984e-01, -5.3453e-01,  2.9802e-01, -1.6098e-01,  1.4190e-01,
         -1.8222e-01,  2.4663e-02,  1.6306e-01,  1.2834e-01, -1.1195e-01,
         -1.2352e-01,  2.0338e-01,  2.9088e-02, -7.3597e-02, -2.0771e-03,
         -9.1009e-02, -1.2476e-01, -4.8445e-02,  7.7286e-02, -1.0150e-01,
          1.5111e-01, -2.5879e-02,  9.1861e-02,  8.2291e-02,  2.1286e-02,
         -7.9186e-02, -3.9052e-02,  1.9657e-01, -3.4682e-01, -1.2533e-02,
          4.5351e-02, -2.1989e-01,  1.3564e-01, -1.5484e-01,  1.5953e-01,
         -5.7514e-02,  5.5034e-02,  2.6144e-02, -4.4688e-02,  1.1943e-01,
          3.0338e-01, -8.6444e-02,  6.8757e-02, -1.5990e-02,  5.7973e-03,
         -1.5095e-01, -1.4167e-02, -7.9216e-02, -1.9127e-01,  1.0778e-01,
          3.4395e-02,  4.9879e-02,  1.7079e-01,  2.3451e-01,  5.5835e-02,
         -2.1969e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
501000 特征值优化 tensor(0.5356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2912,  2.5846, -0.3515, -0.9942, -0.3530,  1.3258, -0.1306,  1.6605,
         -0.6297,  0.2305,  0.5616, -0.2012,  0.4092, -0.9667, -0.3928,  0.0121,
         -0.2567, -0.2402, -0.1353, -1.4314,  1.2786,  0.6354, -0.4068, -0.0426,
          0.0075, -0.1071, -0.5455,  0.4319,  0.1478, -0.1703, -0.2023,  0.3147,
          0.4295,  0.4809, -1.0517, -0.1399,  0.6482, -0.0887,  0.5740,  0.4151,
          0.4396, -0.0235,  0.0712,  0.1417, -0.0122,  0.3734,  0.0672,  0.1257,
          0.2155,  0.8965,  0.0163,  0.0046,  0.3801, -0.2819,  0.0120, -0.6574,
          0.0250,  0.4158,  0.3714,  0.1565,  0.0917, -0.4180,  0.1499, -0.1176,
         -0.1245,  0.4071, -0.0481, -0.0851,  0.2148, -0.0586,  0.0797, -0.1714,
         -0.2629, -0.0271, -0.1941, -0.0211, -0.1104, -0.1530, -0.1504,  0.0940,
          0.0856,  0.1160, -0.1161, -0.1302, -0.0956,  0.1282, -0.0626,  0.4488,
          0.1648, -0.1936,  0.1317,  0.0622, -0.0593, -0.4134,  0.0879, -0.3181,
         -0.0596, -0.1695,  0.0437, -0.2976, -0.0845, -0.1880,  0.1739,  0.0631,
          0.1547, -0.1458, -0.5247,  0.3070, -0.1772,  0.1453, -0.1777,  0.0351,
          0.1721,  0.1164, -0.1266, -0.1288,  0.2034,  0.0237, -0.0631, -0.0303,
         -0.0668, -0.1291, -0.0343,  0.0850, -0.0961,  0.1511, -0.0194,  0.0982,
          0.0806,  0.0235, -0.0762, -0.0363,  0.1881, -0.3425, -0.0089,  0.0367,
         -0.2403,  0.1276, -0.1428,  0.1656, -0.0735,  0.0494,  0.0235, -0.0193,
          0.1379,  0.3092, -0.0880,  0.0637, -0.0219, -0.0059, -0.1490, -0.0036,
         -0.0759, -0.2028,  0.1151,  0.0440,  0.0462,  0.1691,  0.2218,  0.0514,
         -0.0160]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
502000 特征值优化 tensor(0.5065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3024,  2.5932, -0.3598, -0.9926, -0.3549,  1.3403, -0.1237,  1.6794,
         -0.6607,  0.2365,  0.5489, -0.1928,  0.3818, -0.9750, -0.3978, -0.0064,
         -0.2199, -0.2473, -0.1259, -1.4281,  1.2806,  0.6402, -0.4056, -0.0454,
          0.0137, -0.0942, -0.5571,  0.4210,  0.1443, -0.1666, -0.2049,  0.3056,
          0.4336,  0.4935, -1.0609, -0.1349,  0.6323, -0.0862,  0.5827,  0.4086,
          0.4424, -0.0247,  0.0710,  0.1331, -0.0060,  0.3727,  0.0651,  0.1089,
          0.2131,  0.8826,  0.0114,  0.0119,  0.3661, -0.2899,  0.0175, -0.6438,
          0.0214,  0.4149,  0.3886,  0.1578,  0.0939, -0.4081,  0.1701, -0.1049,
         -0.1015,  0.4211, -0.0627, -0.1124,  0.2091, -0.0537,  0.0799, -0.1787,
         -0.2541, -0.0277, -0.1918, -0.0351, -0.1182, -0.1799, -0.1609,  0.1012,
          0.0842,  0.1134, -0.1154, -0.1454, -0.0981,  0.1459, -0.0818,  0.4494,
          0.1709, -0.1594,  0.1313,  0.0524, -0.0380, -0.4120,  0.0875, -0.3147,
         -0.0807, -0.1730,  0.0543, -0.2597, -0.0875, -0.1746,  0.1737,  0.0654,
          0.1675, -0.1242, -0.5431,  0.2981, -0.1607,  0.1391, -0.1848,  0.0206,
          0.1666,  0.1321, -0.1104, -0.1209,  0.1980,  0.0286, -0.0784, -0.0040,
         -0.0920, -0.1250, -0.0460,  0.0832, -0.0912,  0.1484, -0.0272,  0.0970,
          0.0805,  0.0232, -0.0823, -0.0430,  0.1973, -0.3424, -0.0084,  0.0418,
         -0.2202,  0.1355, -0.1560,  0.1609, -0.0673,  0.0556,  0.0300, -0.0488,
          0.1179,  0.2985, -0.0870,  0.0699, -0.0173,  0.0115, -0.1518, -0.0115,
         -0.0763, -0.1889,  0.1075,  0.0359,  0.0505,  0.1791,  0.2342,  0.0597,
         -0.0249]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
503000 特征值优化 tensor(0.5086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3321e+00,  2.5943e+00, -3.5441e-01, -9.9237e-01, -3.4707e-01,
          1.3261e+00, -1.3080e-01,  1.6667e+00, -6.5093e-01,  2.4038e-01,
          5.5899e-01, -1.8404e-01,  4.0205e-01, -9.5890e-01, -4.0266e-01,
         -3.7801e-03, -2.4109e-01, -2.3802e-01, -1.2259e-01, -1.4342e+00,
          1.2923e+00,  6.3855e-01, -3.9076e-01, -5.0248e-02, -1.6261e-03,
         -1.1519e-01, -5.4577e-01,  4.4003e-01,  1.4840e-01, -1.7560e-01,
         -1.9844e-01,  3.1707e-01,  4.2603e-01,  4.7759e-01, -1.0504e+00,
         -1.4175e-01,  6.4790e-01, -9.5540e-02,  5.7616e-01,  4.0996e-01,
          4.3976e-01, -2.4050e-02,  7.1496e-02,  1.4007e-01, -1.1395e-02,
          3.7264e-01,  7.6124e-02,  1.1943e-01,  2.1772e-01,  8.9565e-01,
          1.7956e-02,  9.9979e-03,  3.8298e-01, -2.8074e-01,  1.1707e-02,
         -6.6002e-01,  1.9409e-02,  4.1291e-01,  3.7688e-01,  1.5298e-01,
          9.0646e-02, -4.1069e-01,  1.5905e-01, -1.2316e-01, -1.2691e-01,
          4.0534e-01, -4.4441e-02, -8.9069e-02,  2.1716e-01, -6.5925e-02,
          7.0584e-02, -1.7590e-01, -2.6039e-01, -3.3037e-02, -1.9192e-01,
         -2.1734e-02, -1.1232e-01, -1.5114e-01, -1.4849e-01,  9.8137e-02,
          8.6837e-02,  1.1673e-01, -1.1369e-01, -1.3080e-01, -9.1214e-02,
          1.2497e-01, -6.8722e-02,  4.4456e-01,  1.7806e-01, -1.8043e-01,
          1.2757e-01,  5.9276e-02, -4.9939e-02, -4.1269e-01,  8.9126e-02,
         -3.1748e-01, -5.4511e-02, -1.7795e-01,  4.2188e-02, -2.9452e-01,
         -8.8633e-02, -1.8932e-01,  1.8200e-01,  6.6096e-02,  1.5212e-01,
         -1.4091e-01, -5.2828e-01,  3.0522e-01, -1.6982e-01,  1.4430e-01,
         -1.7443e-01,  3.3772e-02,  1.7247e-01,  1.1400e-01, -1.2665e-01,
         -1.3230e-01,  1.9936e-01,  2.7861e-02, -6.0447e-02, -2.7406e-02,
         -7.3259e-02, -1.2956e-01, -2.4772e-02,  8.9276e-02, -8.5881e-02,
          1.4789e-01, -1.7057e-02,  1.0130e-01,  7.7745e-02,  2.6644e-02,
         -7.5966e-02, -3.6047e-02,  1.8925e-01, -3.3652e-01, -7.9511e-03,
          2.5173e-02, -2.3902e-01,  1.2711e-01, -1.3933e-01,  1.6282e-01,
         -6.8767e-02,  5.3634e-02,  2.0517e-02, -1.9295e-02,  1.3749e-01,
          3.1157e-01, -8.8251e-02,  6.4456e-02, -2.1925e-02,  2.0521e-03,
         -1.4932e-01,  1.9695e-03, -7.9554e-02, -2.0084e-01,  1.1555e-01,
          3.8811e-02,  4.2075e-02,  1.7468e-01,  2.2061e-01,  5.5018e-02,
         -1.8369e-02]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
504000 特征值优化 tensor(0.5059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3407e+00,  2.5863e+00, -3.6744e-01, -9.9297e-01, -3.4386e-01,
          1.3313e+00, -1.4936e-01,  1.6924e+00, -6.5702e-01,  2.5106e-01,
          5.5920e-01, -1.8934e-01,  4.0182e-01, -9.6535e-01, -4.1140e-01,
         -9.4128e-04, -2.6682e-01, -2.3958e-01, -1.2344e-01, -1.4351e+00,
          1.2894e+00,  6.3961e-01, -3.9339e-01, -4.9910e-02, -7.5276e-03,
         -1.0953e-01, -5.4265e-01,  4.2482e-01,  1.4818e-01, -1.7708e-01,
         -1.9486e-01,  3.1377e-01,  4.2272e-01,  4.9644e-01, -1.0502e+00,
         -1.4150e-01,  6.4610e-01, -1.0448e-01,  5.7029e-01,  4.1361e-01,
          4.3642e-01, -2.4194e-02,  7.2023e-02,  1.3559e-01, -7.2479e-03,
          3.7261e-01,  7.7943e-02,  1.2797e-01,  2.2935e-01,  8.9281e-01,
          2.4532e-02,  3.6680e-03,  3.7018e-01, -2.7733e-01,  1.8569e-02,
         -6.5449e-01,  1.3062e-02,  4.0668e-01,  3.7498e-01,  1.5074e-01,
          9.0003e-02, -4.1242e-01,  1.6075e-01, -1.3473e-01, -1.2823e-01,
          4.0195e-01, -3.8285e-02, -8.3363e-02,  2.2354e-01, -6.0594e-02,
          7.6785e-02, -1.7810e-01, -2.6254e-01, -2.8973e-02, -1.9409e-01,
         -2.7458e-02, -1.1793e-01, -1.4789e-01, -1.3453e-01,  9.2949e-02,
          8.1522e-02,  1.1401e-01, -1.1660e-01, -1.2478e-01, -9.3546e-02,
          1.2880e-01, -6.5216e-02,  4.4073e-01,  1.5114e-01, -1.9215e-01,
          1.3634e-01,  6.1383e-02, -7.1220e-02, -4.2427e-01,  8.6301e-02,
         -3.1352e-01, -6.0480e-02, -1.7926e-01,  6.5964e-02, -2.9999e-01,
         -8.5208e-02, -1.9879e-01,  1.8859e-01,  6.9027e-02,  1.5427e-01,
         -1.3698e-01, -5.4558e-01,  3.0999e-01, -1.7221e-01,  1.4434e-01,
         -1.7613e-01,  4.0678e-02,  1.7212e-01,  1.1532e-01, -1.2530e-01,
         -1.3899e-01,  1.9727e-01,  2.4869e-02, -6.6300e-02, -2.5010e-02,
         -5.7610e-02, -1.2266e-01, -3.5411e-02,  8.8781e-02, -8.9111e-02,
          1.4300e-01, -2.0485e-02,  1.1009e-01,  7.7225e-02,  2.7925e-02,
         -8.2785e-02, -4.3743e-02,  1.8690e-01, -3.3500e-01, -5.9993e-03,
          3.7404e-02, -2.3430e-01,  1.1822e-01, -1.4453e-01,  1.5596e-01,
         -9.5399e-02,  5.4524e-02,  3.6653e-02, -1.0591e-02,  1.3766e-01,
          3.1180e-01, -9.3879e-02,  5.5949e-02, -1.9368e-02, -8.9525e-03,
         -1.5189e-01,  1.7402e-03, -7.5090e-02, -1.9941e-01,  1.1605e-01,
          4.6484e-02,  3.9113e-02,  1.7617e-01,  2.2256e-01,  5.5197e-02,
         -1.4989e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
505000 特征值优化 tensor(0.5069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3405e+00,  2.5874e+00, -3.7388e-01, -9.9323e-01, -3.1981e-01,
          1.3438e+00, -1.3734e-01,  1.6867e+00, -6.7484e-01,  2.4690e-01,
          5.4338e-01, -1.9250e-01,  3.9888e-01, -9.8605e-01, -4.2490e-01,
         -1.8097e-02, -2.3885e-01, -2.4683e-01, -1.1880e-01, -1.4290e+00,
          1.2878e+00,  6.4968e-01, -4.0069e-01, -5.4611e-02,  1.3130e-02,
         -9.6177e-02, -5.5405e-01,  4.2038e-01,  1.4934e-01, -1.6807e-01,
         -2.2442e-01,  2.9777e-01,  4.1772e-01,  4.8418e-01, -1.0550e+00,
         -1.3599e-01,  6.2843e-01, -9.3317e-02,  5.8065e-01,  4.0579e-01,
          4.3940e-01, -2.4112e-02,  7.1761e-02,  1.3165e-01, -6.6439e-03,
          3.6189e-01,  7.6068e-02,  1.0655e-01,  2.2485e-01,  8.7904e-01,
          1.2610e-02,  2.2350e-02,  3.8749e-01, -2.8657e-01,  1.3902e-02,
         -6.3701e-01,  3.0285e-02,  4.0983e-01,  3.8577e-01,  1.5607e-01,
          7.9508e-02, -4.0749e-01,  1.7358e-01, -1.1928e-01, -1.0867e-01,
          4.2060e-01, -6.4640e-02, -1.1028e-01,  2.1263e-01, -6.4108e-02,
          7.2195e-02, -1.8253e-01, -2.5430e-01, -2.6455e-02, -2.0195e-01,
         -2.3574e-02, -1.1644e-01, -1.7739e-01, -1.5098e-01,  9.9431e-02,
          8.3281e-02,  1.1565e-01, -1.1308e-01, -1.4979e-01, -8.8293e-02,
          1.3670e-01, -7.7077e-02,  4.3562e-01,  1.8418e-01, -1.6205e-01,
          1.2998e-01,  5.5260e-02, -3.3867e-02, -4.0971e-01,  8.6063e-02,
         -3.1145e-01, -7.2565e-02, -1.5008e-01,  8.1121e-02, -2.7187e-01,
         -8.5040e-02, -1.8495e-01,  1.7808e-01,  6.2429e-02,  1.5204e-01,
         -1.0911e-01, -5.3852e-01,  3.0617e-01, -1.5275e-01,  1.3993e-01,
         -1.8270e-01,  1.3529e-02,  1.5897e-01,  1.3148e-01, -1.0699e-01,
         -1.3722e-01,  1.9637e-01,  2.9019e-02, -8.9511e-02,  1.0322e-03,
         -8.3032e-02, -1.2995e-01, -4.4034e-02,  7.5858e-02, -8.6799e-02,
          1.4770e-01, -2.5194e-02,  1.0303e-01,  8.2234e-02,  2.0589e-02,
         -8.3777e-02, -3.6814e-02,  1.9506e-01, -3.3869e-01, -6.3488e-03,
          3.9402e-02, -2.1857e-01,  1.3588e-01, -1.5296e-01,  1.7150e-01,
         -6.1423e-02,  4.8948e-02,  2.8024e-02, -4.2778e-02,  1.2362e-01,
          3.0260e-01, -8.7216e-02,  7.4753e-02, -1.6916e-02,  1.2199e-02,
         -1.4527e-01, -1.1057e-02, -7.6301e-02, -1.8577e-01,  1.0738e-01,
          3.9254e-02,  4.0551e-02,  1.8140e-01,  2.3046e-01,  5.9632e-02,
         -2.3357e-02]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
506000 特征值优化 tensor(0.5212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3512e+00,  2.5960e+00, -3.8267e-01, -1.0013e+00, -3.2041e-01,
          1.3350e+00, -1.2738e-01,  1.6827e+00, -6.7456e-01,  2.4959e-01,
          5.5051e-01, -1.8484e-01,  3.9106e-01, -9.7991e-01, -4.1984e-01,
         -1.6441e-02, -2.3043e-01, -2.4316e-01, -1.2078e-01, -1.4277e+00,
          1.2992e+00,  6.4996e-01, -3.8424e-01, -6.7972e-02,  6.6322e-03,
         -1.0441e-01, -5.5098e-01,  4.2841e-01,  1.3939e-01, -1.6874e-01,
         -2.1123e-01,  2.9572e-01,  4.2162e-01,  4.8385e-01, -1.0492e+00,
         -1.3395e-01,  6.3445e-01, -9.4039e-02,  5.8400e-01,  3.9786e-01,
          4.3760e-01, -2.3406e-02,  7.1643e-02,  1.2352e-01, -4.6458e-03,
          3.6558e-01,  7.9074e-02,  1.1048e-01,  2.2964e-01,  8.7476e-01,
          1.8542e-02,  1.5257e-02,  3.8861e-01, -2.8087e-01,  1.5174e-02,
         -6.5151e-01,  2.4133e-02,  4.1751e-01,  3.7673e-01,  1.5016e-01,
          8.6244e-02, -4.0424e-01,  1.6703e-01, -1.2801e-01, -1.1305e-01,
          4.1459e-01, -5.1792e-02, -1.0501e-01,  2.1946e-01, -6.7099e-02,
          7.1657e-02, -1.7844e-01, -2.5885e-01, -3.7786e-02, -1.9963e-01,
         -3.0957e-02, -1.1382e-01, -1.7057e-01, -1.4512e-01,  9.7822e-02,
          8.6425e-02,  1.1375e-01, -1.1343e-01, -1.4163e-01, -8.7419e-02,
          1.2824e-01, -6.4538e-02,  4.2377e-01,  1.9008e-01, -1.6598e-01,
          1.3190e-01,  5.8330e-02, -3.4610e-02, -4.1386e-01,  8.7296e-02,
         -3.1043e-01, -7.0301e-02, -1.6287e-01,  5.4815e-02, -2.6060e-01,
         -9.3006e-02, -1.8121e-01,  1.7866e-01,  7.0647e-02,  1.4754e-01,
         -1.2274e-01, -5.3428e-01,  3.1205e-01, -1.6755e-01,  1.4011e-01,
         -1.7724e-01,  1.6421e-02,  1.6289e-01,  1.2241e-01, -1.1503e-01,
         -1.3559e-01,  1.9237e-01,  3.0868e-02, -8.4159e-02, -5.3167e-03,
         -8.4764e-02, -1.2536e-01, -3.9037e-02,  8.0691e-02, -8.6908e-02,
          1.5167e-01, -2.6581e-02,  9.8103e-02,  8.1198e-02,  1.8469e-02,
         -8.5562e-02, -3.6546e-02,  1.9208e-01, -3.3895e-01, -1.0727e-02,
          3.4237e-02, -2.2413e-01,  1.3112e-01, -1.5984e-01,  1.6721e-01,
         -7.1925e-02,  4.7390e-02,  3.2177e-02, -3.8145e-02,  1.2757e-01,
          3.0506e-01, -8.8898e-02,  7.3761e-02, -1.7621e-02,  1.1257e-02,
         -1.4183e-01, -1.5138e-03, -8.2817e-02, -1.8841e-01,  1.1267e-01,
          4.0181e-02,  3.7522e-02,  1.8202e-01,  2.2811e-01,  5.3108e-02,
         -1.4834e-02]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
507000 特征值优化 tensor(0.5094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3632e+00,  2.6016e+00, -3.8524e-01, -9.9279e-01, -3.0721e-01,
          1.3267e+00, -1.3748e-01,  1.6702e+00, -6.5086e-01,  2.5949e-01,
          5.5544e-01, -1.9339e-01,  4.0823e-01, -9.6748e-01, -4.0069e-01,
          2.3706e-03, -2.5782e-01, -2.3307e-01, -1.1901e-01, -1.4352e+00,
          1.3013e+00,  6.4937e-01, -3.8115e-01, -7.0406e-02,  8.7609e-03,
         -1.1366e-01, -5.3977e-01,  4.3475e-01,  1.4011e-01, -1.7568e-01,
         -2.1282e-01,  3.0248e-01,  4.1018e-01,  4.7853e-01, -1.0496e+00,
         -1.3847e-01,  6.3950e-01, -9.7322e-02,  5.8224e-01,  3.9789e-01,
          4.3551e-01, -2.3515e-02,  7.1544e-02,  1.2970e-01, -6.8114e-03,
          3.6810e-01,  8.3769e-02,  1.1995e-01,  2.3019e-01,  8.9159e-01,
          2.3168e-02,  2.1814e-02,  3.9595e-01, -2.7981e-01,  1.0384e-02,
         -6.6158e-01,  3.4677e-02,  4.1551e-01,  3.7733e-01,  1.4416e-01,
          8.6703e-02, -4.1348e-01,  1.6579e-01, -1.2450e-01, -1.3256e-01,
          4.0410e-01, -5.5633e-02, -9.1447e-02,  2.2298e-01, -7.3441e-02,
          7.2544e-02, -1.7699e-01, -2.6103e-01, -3.3661e-02, -1.9413e-01,
         -2.2010e-02, -1.1080e-01, -1.4769e-01, -1.4136e-01,  9.6131e-02,
          9.2451e-02,  1.1397e-01, -1.1382e-01, -1.3198e-01, -8.7223e-02,
          1.2266e-01, -5.8123e-02,  4.1835e-01,  1.8554e-01, -1.8490e-01,
          1.2068e-01,  6.8541e-02, -4.1727e-02, -4.0567e-01,  8.7720e-02,
         -3.0757e-01, -5.1559e-02, -1.7521e-01,  4.6550e-02, -2.8775e-01,
         -8.6593e-02, -1.9474e-01,  1.8389e-01,  6.3102e-02,  1.4773e-01,
         -1.2993e-01, -5.2297e-01,  3.1486e-01, -1.7025e-01,  1.4724e-01,
         -1.7511e-01,  1.5037e-02,  1.7164e-01,  1.2041e-01, -1.2078e-01,
         -1.3087e-01,  1.9661e-01,  2.8282e-02, -7.6418e-02, -1.8975e-02,
         -7.9857e-02, -1.2995e-01, -2.7769e-02,  8.1998e-02, -8.4829e-02,
          1.4462e-01, -3.0628e-02,  9.7095e-02,  7.4618e-02,  1.9487e-02,
         -8.1609e-02, -3.9157e-02,  1.9391e-01, -3.3972e-01, -3.2878e-03,
          2.6800e-02, -2.3534e-01,  1.4015e-01, -1.4162e-01,  1.6931e-01,
         -7.6609e-02,  6.3308e-02,  1.7106e-02, -1.6011e-02,  1.3996e-01,
          3.0704e-01, -8.8638e-02,  6.5508e-02, -2.0977e-02,  6.0647e-03,
         -1.4119e-01,  3.2846e-03, -7.8292e-02, -1.9855e-01,  1.1756e-01,
          4.2969e-02,  4.0619e-02,  1.8359e-01,  2.1938e-01,  5.7375e-02,
         -1.3170e-02]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
508000 特征值优化 tensor(0.5073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3723e+00,  2.5997e+00, -3.9019e-01, -9.9285e-01, -2.9409e-01,
          1.3359e+00, -1.2208e-01,  1.6782e+00, -6.5773e-01,  2.4291e-01,
          5.5564e-01, -1.9773e-01,  4.1524e-01, -9.6569e-01, -4.0218e-01,
          3.3495e-02, -2.9449e-01, -2.2496e-01, -1.0766e-01, -1.4342e+00,
          1.3088e+00,  6.4607e-01, -3.8109e-01, -7.1756e-02,  6.2862e-03,
         -1.2740e-01, -5.4568e-01,  4.4064e-01,  1.5104e-01, -1.7554e-01,
         -2.3236e-01,  3.0920e-01,  4.0731e-01,  4.8047e-01, -1.0488e+00,
         -1.4037e-01,  6.3439e-01, -9.5599e-02,  5.7787e-01,  3.9787e-01,
          4.2892e-01, -2.3939e-02,  7.0837e-02,  1.2886e-01, -9.2150e-03,
          3.6175e-01,  6.9502e-02,  1.1870e-01,  2.2839e-01,  8.9472e-01,
          2.4226e-02,  2.1128e-02,  3.8841e-01, -2.8283e-01,  7.4415e-03,
         -6.4626e-01,  4.6774e-02,  4.1268e-01,  3.7100e-01,  1.4686e-01,
          8.0660e-02, -4.1072e-01,  1.7593e-01, -1.2389e-01, -1.3592e-01,
          3.9622e-01, -5.4999e-02, -8.0509e-02,  2.2383e-01, -6.8491e-02,
          7.7062e-02, -1.8059e-01, -2.6328e-01, -2.9527e-02, -1.9133e-01,
         -1.4720e-02, -1.0730e-01, -1.5301e-01, -1.2906e-01,  1.0185e-01,
          9.4614e-02,  1.1832e-01, -1.1048e-01, -1.3282e-01, -9.0207e-02,
          1.2180e-01, -5.8251e-02,  4.2199e-01,  1.6990e-01, -1.9809e-01,
          1.1595e-01,  7.1503e-02, -3.8078e-02, -4.0443e-01,  8.6890e-02,
         -3.0635e-01, -5.4236e-02, -1.7465e-01,  5.3871e-02, -2.9995e-01,
         -8.4251e-02, -2.0099e-01,  1.8582e-01,  7.4458e-02,  1.6187e-01,
         -1.3470e-01, -5.3413e-01,  3.2511e-01, -1.7409e-01,  1.5038e-01,
         -1.8291e-01,  8.7094e-03,  1.6845e-01,  1.1402e-01, -1.1868e-01,
         -1.2952e-01,  1.9673e-01,  2.7254e-02, -7.6386e-02, -2.7011e-02,
         -7.4939e-02, -1.2660e-01, -2.7275e-02,  8.9056e-02, -6.6280e-02,
          1.3591e-01, -3.9327e-02,  1.0161e-01,  7.7033e-02,  2.3288e-02,
         -7.4721e-02, -4.3153e-02,  1.9737e-01, -3.3674e-01, -1.3972e-03,
          4.0008e-02, -2.4119e-01,  1.3906e-01, -1.4004e-01,  1.7693e-01,
         -7.7917e-02,  5.9048e-02,  1.3448e-02, -2.5229e-02,  1.4801e-01,
          3.0383e-01, -9.0463e-02,  7.0215e-02, -2.1124e-02,  1.0991e-02,
         -1.3900e-01,  1.4786e-02, -7.8778e-02, -2.0421e-01,  1.1317e-01,
          4.4988e-02,  3.8500e-02,  1.8737e-01,  2.2098e-01,  6.1523e-02,
         -1.7995e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
509000 特征值优化 tensor(0.5089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3751e+00,  2.6021e+00, -3.9660e-01, -9.9368e-01, -2.7105e-01,
          1.3456e+00, -1.1762e-01,  1.6707e+00, -6.7582e-01,  2.3050e-01,
          5.4442e-01, -1.9229e-01,  3.9410e-01, -9.6352e-01, -4.0487e-01,
          2.7331e-02, -2.8324e-01, -2.1384e-01, -1.0156e-01, -1.4385e+00,
          1.3227e+00,  6.4372e-01, -3.7244e-01, -7.9747e-02, -2.6539e-03,
         -1.1681e-01, -5.4221e-01,  4.3436e-01,  1.5333e-01, -1.6977e-01,
         -2.3678e-01,  3.0356e-01,  4.0367e-01,  4.8846e-01, -1.0378e+00,
         -1.3383e-01,  6.4309e-01, -9.9773e-02,  5.7997e-01,  3.9471e-01,
          4.2975e-01, -2.4215e-02,  7.0637e-02,  1.2802e-01, -1.4181e-02,
          3.6384e-01,  7.4899e-02,  1.1235e-01,  2.2746e-01,  8.8823e-01,
          2.0899e-02,  3.1727e-02,  3.9628e-01, -2.8550e-01,  8.2527e-03,
         -6.6148e-01,  3.9051e-02,  4.0828e-01,  3.7196e-01,  1.4191e-01,
          8.3391e-02, -4.1058e-01,  1.8298e-01, -1.3305e-01, -1.3095e-01,
          3.9987e-01, -5.7828e-02, -9.3836e-02,  2.2529e-01, -7.7523e-02,
          6.5982e-02, -1.7984e-01, -2.6586e-01, -3.8857e-02, -1.8362e-01,
         -2.0477e-02, -1.1424e-01, -1.6022e-01, -1.3559e-01,  1.0447e-01,
          9.5883e-02,  1.1834e-01, -1.0972e-01, -1.2708e-01, -8.7274e-02,
          1.2387e-01, -5.9124e-02,  4.2168e-01,  1.7702e-01, -1.9338e-01,
          1.2213e-01,  7.6109e-02, -3.7960e-02, -4.0065e-01,  8.8387e-02,
         -3.0583e-01, -5.7832e-02, -1.6580e-01,  5.5734e-02, -2.9634e-01,
         -9.0877e-02, -2.0578e-01,  1.8238e-01,  7.8484e-02,  1.5265e-01,
         -1.3812e-01, -5.3906e-01,  3.2003e-01, -1.6754e-01,  1.4871e-01,
         -1.7893e-01,  1.6392e-02,  1.7506e-01,  1.0959e-01, -1.2390e-01,
         -1.3594e-01,  1.9484e-01,  3.3616e-02, -8.0151e-02, -1.4374e-02,
         -7.8577e-02, -1.2445e-01, -2.8926e-02,  8.7880e-02, -6.1867e-02,
          1.3247e-01, -4.2514e-02,  9.6588e-02,  7.2429e-02,  2.3833e-02,
         -7.8075e-02, -4.9734e-02,  1.9694e-01, -3.3475e-01, -8.4154e-03,
          3.4486e-02, -2.4136e-01,  1.3698e-01, -1.4523e-01,  1.6931e-01,
         -8.9753e-02,  6.9264e-02,  1.8443e-02, -2.5767e-02,  1.3581e-01,
          2.9708e-01, -8.6994e-02,  6.0446e-02, -1.9829e-02,  1.3121e-02,
         -1.3636e-01,  1.5460e-02, -7.9259e-02, -2.0288e-01,  1.1407e-01,
          4.3620e-02,  3.4389e-02,  1.8660e-01,  2.2334e-01,  6.5951e-02,
         -1.7886e-02]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
510000 特征值优化 tensor(45.2618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0861,  0.9748,  2.2974, -1.8004, -0.1029,  1.9519,  0.6011, -0.6033,
         -0.8745,  0.5546,  0.5214, -1.4601,  0.4052,  0.0564,  0.1712,  1.1266,
          1.3144, -1.2210,  0.6520, -0.1504,  0.2612,  1.1797, -1.0172, -0.2597,
         -0.6457, -0.9944,  2.2236,  0.4370,  0.1125, -0.0192,  1.3192, -0.7826,
          0.0508, -0.3592,  0.0371,  0.1507,  0.1901, -0.2033,  0.1474,  0.3167,
          0.7149, -0.0303, -0.2588, -0.3099,  0.3153,  0.0487,  0.3702, -1.5246,
         -0.1044, -0.1656,  2.0202, -0.1400,  0.1326,  0.6555,  0.4206,  1.7388,
         -1.8211, -0.3981, -0.4885,  1.0455,  0.7898,  0.7332,  0.1763,  1.4247,
         -0.0039,  0.5043,  0.2239,  0.7356, -0.6342,  1.8224, -0.8125, -0.3572,
          0.6394,  0.4678,  0.4919, -0.4466, -0.0851, -0.4338,  0.5475, -1.2032,
          0.7110, -0.5608,  0.6419, -0.1092,  0.2293, -0.1676,  0.2531,  0.9240,
          0.3455,  0.6427,  0.1123, -0.9146, -0.2813,  2.0502, -1.4028, -0.9580,
          0.1720,  0.1597,  0.2852, -0.2993,  1.0331, -0.0112, -1.3209, -0.9177,
         -0.0851, -1.3832, -0.3064, -0.4331,  2.0220, -0.0426, -0.4930, -0.8790,
         -0.0035,  0.3929, -0.2106, -0.1054, -0.9273,  0.0827,  0.0276, -1.2461,
         -0.9631, -0.4305,  0.1746,  0.4560, -0.2502,  1.1764, -1.3177,  0.7614,
          0.0898,  1.5428,  0.5351, -0.3591,  2.5146,  0.3209, -0.3520,  1.4104,
          1.3317,  0.5982, -0.0511,  0.7156, -0.3851,  0.2051,  1.6277, -0.9376,
          0.1009, -0.6815, -1.8422,  1.0417, -1.0946, -0.2879,  1.8614,  0.2239,
          1.5634,  0.2537, -0.0032, -1.8150, -0.2768, -0.1932,  1.2808,  0.9330,
          0.1202]], device='cuda:0') tensor(0.2175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
511000 特征值优化 tensor(8.6445, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0253,  1.6119,  1.7392, -1.2509,  0.3082,  1.8779,  1.0422, -0.2329,
         -0.1288, -0.0810,  0.2734, -0.5448, -0.0833, -0.1540, -0.0145,  0.2439,
          0.5431, -0.8863,  0.2203, -0.9827,  0.9302,  0.4088, -0.2340,  0.0468,
         -1.4740, -0.2198,  1.0932,  0.1372, -0.3923, -0.4700,  0.3951, -0.1449,
          0.0031,  0.0404, -0.0150, -0.3623,  0.1734, -0.0376, -0.5122,  0.2968,
          0.0288, -0.0376,  0.1155,  0.1803, -0.0806,  0.0855, -0.0453, -0.4746,
          0.0670,  0.1181,  0.9756, -0.1134,  0.3129,  0.1670, -0.2320,  0.5016,
         -0.7477,  0.0992, -0.2005,  0.2437,  0.0603,  0.4288,  0.0163,  0.4888,
          0.0927, -0.0670,  0.0020,  0.1396, -0.1317,  0.8737, -0.0728, -0.0795,
         -0.1554, -0.1446,  0.1994, -0.0475,  0.1839, -0.0462, -0.0359, -0.3347,
         -0.0619, -0.2330,  0.1109, -0.0477,  0.1994, -0.1429,  0.1801,  0.7508,
         -0.2478,  0.1073,  0.2832, -0.3013, -0.5329,  1.0419, -0.8094, -0.4114,
         -0.0189,  0.3188,  0.1863, -0.1135,  0.3143, -0.0706, -0.2328, -0.1698,
          0.1051, -0.7324, -0.4089, -0.2860,  1.2137, -0.1317, -0.1090, -0.1425,
         -0.0215,  0.1008,  0.0029,  0.0115, -0.1269,  0.0716, -0.0186, -0.3587,
         -0.1743,  0.2709,  0.1509,  0.2543, -0.0952,  0.2813, -0.4747,  0.3195,
          0.0096,  0.7124, -0.0267, -0.0731,  1.5196, -0.4128,  0.0172,  0.5459,
          0.2815, -0.0025,  0.1584,  0.1974, -0.2114,  0.0401,  0.6324, -0.1530,
         -0.0517,  0.0131, -0.9745,  0.2482, -0.2299,  0.0257,  0.8080,  0.1248,
          0.5198, -0.0563, -0.2295, -0.9004,  0.2092,  0.0203,  0.4365,  0.2463,
         -0.0991]], device='cuda:0') tensor(0.2736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
512000 特征值优化 tensor(2.5390, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.2784e-01,  1.6978e+00,  5.2389e-01, -8.8723e-01, -1.5915e-01,
          1.4634e+00,  7.2376e-01,  4.8760e-01, -7.2904e-02, -5.3108e-01,
          1.1802e-01, -1.6285e-01, -1.1816e-01, -2.8358e-01,  2.6256e-01,
          1.3985e-02, -7.5314e-02, -5.5503e-01,  7.9088e-01, -9.4047e-01,
          8.2279e-01,  2.2649e-01,  8.5119e-02, -4.1103e-01, -1.3374e+00,
         -1.8024e-01,  5.3112e-01,  1.0108e-01, -5.9889e-02, -4.2286e-01,
          1.0961e-01,  1.0101e-01,  3.4221e-01, -2.1260e-01, -2.8622e-01,
         -2.6450e-01,  3.1988e-01, -4.3428e-02, -6.8311e-01,  1.9840e-01,
          5.9228e-02, -4.1075e-02,  1.0061e-01,  4.6877e-01, -1.2342e-01,
         -5.4501e-02,  1.9471e-01, -5.8117e-02,  2.5201e-02,  2.2994e-01,
          6.1345e-01, -3.2034e-01,  4.9247e-01, -9.9793e-02,  2.7660e-02,
         -1.7423e-01, -3.4079e-01,  2.7518e-01,  2.1158e-01, -7.7991e-02,
         -1.0256e-01,  4.9821e-01, -4.9680e-02,  3.8320e-01, -2.3746e-01,
          1.2458e-01, -8.3236e-02,  3.9586e-01, -7.6000e-02,  5.2083e-01,
          6.2815e-02, -4.9374e-04, -7.0946e-02,  1.3154e-01,  2.9766e-01,
         -4.1599e-02,  1.3712e-01,  2.6604e-02,  3.6090e-02, -1.2493e-01,
         -1.1553e-01,  1.3048e-01, -4.9201e-02, -9.9365e-02,  2.1525e-01,
         -1.5466e-01, -3.3071e-02,  5.7984e-01, -1.1083e-01,  6.4232e-02,
          1.5018e-01,  1.6734e-01, -1.7926e-01,  4.7885e-01, -2.3263e-01,
         -3.6494e-01,  1.9416e-01,  5.9949e-01, -1.4248e-01,  1.3539e-01,
          3.0331e-01,  4.1560e-02, -1.8033e-01, -8.3030e-02,  3.9804e-02,
         -6.5433e-01, -3.3948e-01, -6.9316e-02,  4.0152e-01, -2.6915e-02,
         -3.9623e-02, -2.2270e-01,  6.2166e-02,  1.1589e-01,  1.3818e-02,
          7.4019e-02, -5.4922e-02,  1.7943e-01, -1.5098e-01, -1.2970e-01,
          7.2533e-02,  3.5585e-01,  7.8513e-02,  8.1009e-02, -7.2706e-02,
          1.2356e-01, -1.2458e-01,  1.9820e-01, -1.5787e-01,  4.0792e-01,
         -8.9709e-02, -5.4005e-02,  8.7462e-01, -3.1577e-01, -1.8293e-01,
          1.7462e-01,  5.6861e-02,  1.3766e-01,  2.7411e-01,  1.9332e-01,
          5.4792e-02,  2.5464e-01, -6.2546e-02, -8.2403e-02, -1.9376e-01,
         -8.5538e-02, -3.3713e-01, -1.9322e-01, -1.5006e-01, -1.3866e-01,
          3.2223e-01,  3.9317e-01,  2.6969e-01, -1.8333e-01, -1.1722e-01,
         -4.1796e-01, -8.7868e-02, -1.0763e-01,  9.3378e-02,  1.1307e-01,
         -1.3874e-01]], device='cuda:0') tensor(0.2616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
513000 特征值优化 tensor(1.8901, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7707,  2.1919, -0.0342, -0.8533, -0.3194,  1.8450,  0.4043,  0.9700,
         -0.1985, -0.4793,  0.1085, -0.1712, -0.0216, -0.2505, -0.0857, -0.0840,
         -0.2733, -0.5351,  0.8899, -0.9724,  0.6920,  0.1448, -0.0279, -0.5999,
         -0.9350, -0.1533,  0.3279,  0.0836, -0.0144, -0.3663,  0.0481,  0.1559,
          0.4086, -0.2440, -0.3635, -0.2525,  0.4350, -0.0860, -0.7021,  0.2887,
          0.1626, -0.0268,  0.0736,  0.6901, -0.1606, -0.0542,  0.1547, -0.1087,
          0.1219,  0.1904,  0.5395, -0.4412,  0.3717, -0.0783,  0.0966, -0.3748,
         -0.1821,  0.3363,  0.3711, -0.1033, -0.1562,  0.4969, -0.1565,  0.4488,
         -0.3761,  0.0724, -0.0568,  0.3414, -0.0857,  0.4275,  0.0724, -0.0064,
         -0.0224,  0.2066,  0.2642, -0.0343,  0.0547,  0.0662,  0.0230, -0.1417,
         -0.1222,  0.1199, -0.0945, -0.1604,  0.2734, -0.0729, -0.0954,  0.5323,
         -0.0606, -0.0477,  0.0207,  0.3299, -0.0591,  0.3588, -0.1339, -0.2189,
          0.2625,  0.6957, -0.2082,  0.2118,  0.1466,  0.1598, -0.3979, -0.1851,
         -0.0634, -0.3782, -0.1272, -0.1979,  0.3039, -0.0258,  0.0048, -0.2388,
          0.0453,  0.0234, -0.0993,  0.1539,  0.0323,  0.1418, -0.0378, -0.0638,
          0.1114,  0.3563,  0.2212,  0.0256, -0.0364,  0.0214, -0.0522,  0.0940,
         -0.1699,  0.3755, -0.0423, -0.0372,  0.5740, -0.1568, -0.1890,  0.1090,
          0.1811,  0.2104,  0.1683,  0.0961,  0.0920,  0.2330, -0.1799, -0.0208,
         -0.2046, -0.1181, -0.2664, -0.3279, -0.1888, -0.0990,  0.2312,  0.4123,
          0.2049, -0.1412, -0.0183, -0.3642,  0.0264, -0.1236,  0.0051,  0.1271,
         -0.1159]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
514000 特征值优化 tensor(1.8164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.1156e-01,  2.2503e+00, -7.6418e-02, -8.6670e-01, -3.7340e-01,
          2.1930e+00,  5.4458e-01,  1.0920e+00, -4.7053e-01, -5.3866e-01,
          8.8096e-02, -2.6416e-01,  2.0759e-02, -2.0469e-01, -1.7816e-01,
         -4.7399e-02, -3.1942e-01, -4.7072e-01,  1.0065e+00, -1.0905e+00,
          6.3622e-01,  6.5404e-02, -1.0410e-01, -8.1459e-01, -7.8618e-01,
         -4.8662e-02,  1.6376e-01,  8.3581e-02,  5.6274e-02, -3.3328e-01,
          7.9728e-02,  1.8999e-01,  3.9416e-01, -2.6862e-01, -3.6006e-01,
         -2.6336e-01,  4.8304e-01, -4.7527e-02, -6.8178e-01,  3.5005e-01,
          2.1572e-01, -2.0449e-02,  5.5899e-02,  6.7607e-01, -1.8480e-01,
         -7.3262e-02,  1.9994e-01, -8.5192e-02,  4.3714e-02,  1.5082e-01,
          5.4509e-01, -4.9483e-01,  2.1919e-01, -4.2629e-03,  1.5710e-01,
         -4.8338e-01, -1.3771e-01,  3.2365e-01,  3.8675e-01, -7.9832e-02,
         -4.6440e-02,  4.9824e-01, -1.4299e-01,  4.2481e-01, -4.1965e-01,
          5.7670e-02,  2.4917e-03,  3.7322e-01, -7.3476e-02,  3.6342e-01,
          3.5236e-02,  1.7129e-02,  1.1717e-02,  2.6292e-01,  2.6551e-01,
         -8.2977e-02,  5.0690e-03,  7.9814e-02, -3.4299e-02, -1.2644e-01,
         -7.7659e-02,  9.5473e-02, -8.9173e-02, -7.7295e-02,  2.5247e-01,
         -4.7669e-02, -2.4110e-01,  5.1317e-01, -9.0736e-02, -5.1864e-02,
          1.9425e-02,  3.0112e-01, -1.2467e-01,  3.4772e-01, -1.4922e-01,
         -2.0442e-01,  3.1886e-01,  7.6590e-01, -1.8519e-01,  8.1902e-02,
          2.6117e-01,  1.1957e-01, -4.6773e-01, -2.5344e-01, -6.9329e-02,
         -6.9694e-02, -8.9349e-02, -1.4290e-01,  2.8501e-01, -2.1437e-02,
         -4.4283e-04, -2.2466e-01,  2.0670e-02,  2.3381e-02, -7.6731e-02,
          1.5005e-01,  2.1151e-02,  1.3612e-01,  1.1620e-02, -6.8415e-02,
          8.5783e-02,  3.2984e-01,  2.0187e-01, -2.3881e-02,  8.2423e-03,
         -4.9089e-03, -2.3275e-02,  3.7154e-02, -2.0558e-01,  3.4203e-01,
          3.9554e-02, -5.4663e-02,  4.4963e-01, -5.1121e-02, -1.9697e-01,
          2.3616e-02,  1.9049e-01,  1.8355e-01,  8.9642e-02,  1.5607e-01,
          7.0664e-02,  1.3397e-01, -1.0235e-01, -9.9553e-02, -1.1741e-01,
         -1.0650e-01, -2.7643e-01, -3.2999e-01, -2.1804e-01, -1.1696e-01,
          2.6025e-01,  4.0389e-01,  1.8702e-01, -1.3085e-01,  4.4290e-02,
         -4.1284e-01,  3.7194e-02, -1.1880e-01, -2.9166e-02,  2.1750e-01,
         -3.4149e-02]], device='cuda:0') tensor(0.2254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
515000 特征值优化 tensor(1.3353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.5007e-01,  2.3302e+00, -9.9664e-02, -8.3947e-01, -3.0158e-01,
          2.5111e+00,  4.6363e-01,  1.2316e+00, -7.2530e-01, -6.3801e-01,
          1.4410e-02, -3.3096e-01,  5.7511e-02, -1.1831e-01, -2.0912e-01,
          8.9264e-03, -2.6246e-01, -3.5436e-01,  1.0065e+00, -1.2296e+00,
          4.9451e-01, -1.3127e-02, -7.9846e-02, -1.0456e+00, -7.0155e-01,
          4.1768e-02,  6.7288e-02,  2.8362e-02,  1.1327e-01, -2.1041e-01,
          8.4702e-02,  1.8576e-01,  2.9076e-01, -2.5011e-01, -2.4096e-01,
         -3.1843e-01,  5.3755e-01, -1.0920e-01, -6.6259e-01,  4.2431e-01,
          2.3769e-01, -4.1737e-02,  2.4339e-02,  6.9345e-01, -9.1569e-03,
         -1.2164e-01,  9.6502e-02, -3.6032e-02,  7.7257e-03,  1.1191e-01,
          5.2470e-01, -4.7770e-01,  1.3140e-01,  5.5405e-02,  2.2181e-01,
         -6.1206e-01, -4.8614e-02,  3.3791e-01,  1.9500e-01, -3.0876e-02,
          3.1808e-02,  4.3306e-01, -1.3194e-01,  4.5996e-01, -4.0663e-01,
          1.2396e-01,  1.1118e-01,  5.0814e-01, -1.1948e-01,  3.0512e-01,
         -3.0538e-02,  1.1777e-02,  5.2834e-03,  3.1284e-01,  1.6534e-01,
         -1.0497e-01, -5.3722e-02,  6.3703e-02,  3.2987e-02, -8.6105e-02,
         -1.1162e-02,  5.9383e-02, -6.8718e-02, -6.8950e-02,  1.4799e-01,
         -1.2386e-01, -2.9103e-01,  5.8809e-01, -1.4464e-01,  2.4831e-02,
          5.7589e-02,  1.1254e-01, -2.5174e-01,  2.7500e-01, -2.0370e-01,
         -1.8093e-01,  5.1191e-01,  7.7587e-01, -9.5885e-02, -1.3788e-01,
          4.4008e-01,  1.1934e-01, -5.8565e-01, -2.0808e-01, -5.9089e-02,
          2.6744e-01, -1.2401e-01, -2.0717e-01,  4.0364e-01, -9.3399e-02,
         -4.8147e-02, -2.0273e-01,  9.4175e-02, -1.4359e-02, -4.5570e-02,
          1.1504e-01, -6.1485e-02,  8.3665e-02, -3.9069e-02, -1.0024e-01,
          4.8628e-02,  2.3187e-01,  1.6091e-01, -1.3031e-01,  2.1241e-02,
          1.1373e-02,  9.3309e-04,  3.3413e-02, -1.8714e-01,  2.2098e-01,
          5.9903e-02, -1.0305e-01,  3.8020e-01, -5.8179e-03, -1.5773e-01,
         -5.9063e-03,  2.1817e-01,  1.6096e-01,  8.4070e-02,  2.0859e-01,
          7.3994e-02,  4.5762e-03, -7.3336e-02, -1.9066e-01, -1.1655e-01,
         -1.0344e-01, -2.5341e-01, -3.0217e-01, -2.3309e-01, -1.5891e-01,
          2.7924e-01,  3.3609e-01,  2.0116e-01, -7.3721e-02,  9.2700e-02,
         -3.6127e-01,  5.9937e-02, -7.8177e-02, -1.1163e-02,  2.9327e-01,
         -7.2320e-02]], device='cuda:0') tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
516000 特征值优化 tensor(1.0781, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1268,  2.5126, -0.1807, -0.8877, -0.3026,  2.5514,  0.4327,  1.5750,
         -0.8568, -0.5078,  0.0080, -0.3718,  0.2362, -0.2028, -0.2358,  0.0388,
          0.0393, -0.3147,  1.0063, -1.3875,  0.3414,  0.0339,  0.0382, -1.0952,
         -0.5948, -0.0030,  0.2250, -0.0197,  0.4165, -0.2248,  0.0045,  0.1317,
          0.3109, -0.1145, -0.1972, -0.4099,  0.5664, -0.3096, -0.5301,  0.4105,
          0.1957, -0.0345,  0.0431,  0.6377,  0.0318, -0.1588, -0.0824, -0.0477,
         -0.0447,  0.1672,  0.6070, -0.1917, -0.0691,  0.2425,  0.1857, -0.5965,
         -0.0042,  0.3908,  0.0848, -0.0478,  0.1239,  0.4285, -0.1224,  0.4541,
         -0.3707,  0.1646,  0.2556,  0.5631, -0.1312,  0.3173, -0.1158, -0.0100,
          0.0632,  0.2210,  0.0489, -0.0901, -0.0402, -0.0832,  0.0177,  0.0217,
         -0.0652,  0.1181, -0.0051, -0.0549, -0.0089, -0.1596, -0.1967,  0.5592,
          0.1058,  0.1646,  0.1382,  0.0061, -0.2970,  0.1222, -0.2849, -0.1263,
          0.5184,  0.6537, -0.1555, -0.1547,  0.5076,  0.1209, -0.4695, -0.0104,
         -0.1011,  0.4578, -0.2699, -0.2881,  0.3557, -0.1172, -0.0029, -0.0818,
          0.1833,  0.0071,  0.0188,  0.1199, -0.0593, -0.0070, -0.0150, -0.0663,
         -0.1324,  0.1887,  0.1598, -0.1621, -0.1353,  0.0330, -0.0491,  0.0827,
         -0.1654,  0.1244,  0.1005, -0.0876,  0.3113,  0.0524, -0.0962,  0.2016,
          0.1711,  0.2752,  0.2015,  0.2338,  0.0266, -0.1305, -0.0522, -0.2137,
         -0.1229, -0.1971, -0.1177, -0.3017, -0.1672, -0.1971,  0.2446,  0.2967,
          0.1854,  0.0274,  0.1525, -0.2642,  0.0170, -0.0324, -0.0291,  0.2013,
         -0.1459]], device='cuda:0') tensor(0.2110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
517000 特征值优化 tensor(1.0624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0086e-01,  2.4864e+00, -1.7163e-01, -8.9244e-01, -2.0802e-01,
          2.6295e+00,  3.2402e-01,  1.5790e+00, -8.9223e-01, -4.9813e-01,
         -6.1195e-03, -4.1564e-01,  1.0191e-01, -2.3461e-01, -2.3510e-01,
         -8.9610e-03,  5.4420e-02, -3.2532e-01,  8.9795e-01, -1.3502e+00,
          3.1238e-01,  6.2207e-02,  9.1215e-02, -1.0682e+00, -5.6320e-01,
         -5.9433e-02,  1.6244e-01, -2.0027e-02,  4.3001e-01, -2.5125e-01,
         -5.9680e-02,  1.5829e-01,  2.8494e-01, -5.1383e-02, -1.9620e-01,
         -4.8847e-01,  5.7389e-01, -3.4854e-01, -5.3490e-01,  4.3914e-01,
          2.1814e-01, -3.1244e-02,  3.9131e-02,  6.3955e-01,  5.9419e-02,
         -1.3411e-01, -4.2203e-03, -3.4915e-02, -6.3050e-02,  1.9773e-01,
          6.5047e-01, -1.2079e-01, -5.7989e-02,  2.5425e-01,  1.4495e-01,
         -5.8047e-01,  2.7533e-02,  4.2155e-01,  3.5289e-02, -7.0122e-03,
          1.0142e-01,  4.3109e-01, -1.6574e-01,  3.7774e-01, -4.1993e-01,
          1.8016e-01,  2.7931e-01,  5.0988e-01, -1.2213e-01,  3.6097e-01,
         -1.3310e-01,  2.8483e-02,  8.2022e-02,  2.1961e-01,  5.2021e-02,
         -8.3865e-02,  1.7585e-02, -9.5925e-02,  2.8058e-02,  3.0006e-02,
         -8.6803e-02,  1.2673e-01, -3.5812e-02, -1.2516e-02, -8.4320e-02,
         -8.5433e-02, -1.9907e-01,  5.7073e-01, -5.6001e-02,  2.0194e-01,
          2.0933e-01, -6.6692e-02, -2.8742e-01, -4.4493e-03, -2.9007e-01,
         -1.2929e-01,  4.9257e-01,  7.5256e-01, -3.0059e-01, -1.3393e-01,
          4.4070e-01,  1.0194e-01, -4.2932e-01,  2.6213e-02, -8.3756e-02,
          5.5897e-01, -2.7118e-01, -3.0989e-01,  3.2911e-01, -1.0518e-01,
         -1.2051e-03, -1.2174e-01,  1.4466e-01,  2.6409e-02,  6.4447e-03,
          8.0509e-02, -2.2172e-02, -3.2469e-02, -1.1510e-02, -8.8856e-02,
         -1.6686e-01,  1.7631e-01,  1.9432e-01, -1.2302e-01, -1.8309e-01,
          3.7237e-02, -1.2988e-01,  1.2917e-01, -1.4499e-01,  1.3411e-01,
          5.5694e-02, -2.6348e-02,  2.8094e-01,  6.8103e-02, -9.9638e-02,
          1.8823e-01,  1.8006e-01,  3.2998e-01,  1.1547e-01,  1.9065e-01,
         -4.3046e-02, -1.1609e-01, -5.1598e-02, -2.3460e-01, -5.4921e-02,
         -1.7550e-01, -4.7687e-02, -2.7746e-01, -1.5620e-01, -1.9490e-01,
          2.6143e-01,  2.5353e-01,  2.4644e-01, -5.6436e-03,  1.6738e-01,
         -2.7003e-01,  5.1508e-02, -5.7632e-02, -4.2973e-02,  1.9263e-01,
         -1.4684e-01]], device='cuda:0') tensor(0.2160, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
518000 特征值优化 tensor(1.0462, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3936e-01,  2.5132e+00, -1.9069e-01, -9.1049e-01, -2.8921e-01,
          2.7113e+00,  3.0013e-01,  1.5490e+00, -9.6107e-01, -5.2196e-01,
         -1.1386e-02, -4.1204e-01,  3.4475e-02, -1.9677e-01, -2.9096e-01,
         -5.1235e-02, -9.3605e-02, -3.1292e-01,  8.6404e-01, -1.3180e+00,
          3.0835e-01,  8.7045e-02,  8.6644e-02, -1.0673e+00, -5.7931e-01,
         -1.1537e-01,  1.3483e-01,  1.5812e-02,  4.4030e-01, -2.8025e-01,
         -7.6508e-02,  1.7001e-01,  2.7667e-01, -7.4157e-02, -1.9288e-01,
         -5.2413e-01,  5.8867e-01, -3.4147e-01, -5.2858e-01,  4.2679e-01,
          1.8936e-01, -3.5140e-02,  4.6415e-02,  6.2428e-01,  7.5557e-02,
         -1.1304e-01,  3.3500e-02, -5.8020e-02, -7.5800e-02,  1.9962e-01,
          6.5091e-01, -1.3362e-01, -4.0089e-02,  2.6837e-01,  1.5821e-01,
         -5.6562e-01,  1.7880e-02,  4.2552e-01,  4.5481e-02,  2.7627e-02,
          1.0980e-01,  4.2625e-01, -1.8713e-01,  3.4014e-01, -4.4859e-01,
          1.8804e-01,  3.0174e-01,  4.7383e-01, -1.1741e-01,  3.7615e-01,
         -1.1105e-01,  4.4960e-02,  1.0849e-01,  2.5438e-01,  5.6135e-02,
         -8.3026e-02,  4.5670e-02, -8.2807e-02,  3.3900e-04,  4.3806e-02,
         -1.1463e-01,  1.4592e-01, -1.5854e-02,  9.3581e-03, -1.0995e-01,
         -7.1329e-02, -2.0292e-01,  5.8288e-01, -7.8000e-02,  1.4623e-01,
          2.0530e-01, -5.4122e-02, -2.6120e-01, -4.3603e-02, -2.8878e-01,
         -1.2360e-01,  5.0704e-01,  7.9994e-01, -3.6200e-01, -9.4892e-02,
          4.5545e-01,  7.1080e-02, -4.5596e-01,  3.2509e-02, -5.7998e-02,
          5.6002e-01, -2.8114e-01, -2.7045e-01,  3.0692e-01, -9.3822e-02,
          1.3483e-02, -1.0664e-01,  1.6095e-01,  1.4951e-02, -2.3519e-03,
          4.5091e-02, -2.1091e-02, -1.1490e-02, -3.9588e-02, -9.9447e-02,
         -1.5738e-01,  1.9641e-01,  2.1272e-01, -1.2362e-01, -1.8635e-01,
          3.6137e-02, -1.5093e-01,  1.1845e-01, -1.5846e-01,  1.1387e-01,
          3.3668e-02,  5.9874e-03,  2.7827e-01,  6.1788e-02, -9.7914e-02,
          1.6983e-01,  1.7879e-01,  3.3478e-01,  6.9879e-02,  2.0718e-01,
         -4.1227e-02, -1.3068e-01, -6.6039e-02, -2.2369e-01, -4.2961e-02,
         -1.6583e-01, -3.1954e-02, -2.4916e-01, -1.4111e-01, -2.0241e-01,
          2.3134e-01,  2.7896e-01,  2.3595e-01,  8.7653e-03,  1.8555e-01,
         -2.4943e-01,  5.9628e-02, -6.4511e-02, -5.5828e-02,  1.7911e-01,
         -1.4405e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
519000 特征值优化 tensor(1.0502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8810e-01,  2.5603e+00, -2.3105e-01, -9.1159e-01, -3.4132e-01,
          2.7379e+00,  3.0544e-01,  1.5242e+00, -1.0290e+00, -5.4375e-01,
         -2.1072e-02, -4.2203e-01, -3.9493e-02, -1.8391e-01, -3.1764e-01,
         -4.8987e-02, -2.1500e-01, -2.9390e-01,  8.5783e-01, -1.2799e+00,
          3.0750e-01,  7.3180e-02,  7.9338e-02, -1.0441e+00, -6.1036e-01,
         -1.4082e-01,  1.3647e-01,  2.4159e-02,  4.5194e-01, -2.9066e-01,
         -7.5737e-02,  1.5873e-01,  2.5950e-01, -9.6559e-02, -2.0538e-01,
         -5.3729e-01,  6.0297e-01, -3.4446e-01, -5.1220e-01,  4.1866e-01,
          2.0165e-01, -3.2796e-02,  4.3605e-02,  6.0353e-01,  8.7932e-02,
         -1.0554e-01,  6.2923e-02, -6.9871e-02, -9.6436e-02,  2.0655e-01,
          6.4712e-01, -1.3072e-01, -4.5233e-02,  2.6160e-01,  1.6235e-01,
         -5.9143e-01, -1.8483e-03,  4.3232e-01,  5.1394e-02,  3.8831e-02,
          1.3923e-01,  4.3044e-01, -2.0941e-01,  3.0589e-01, -4.6997e-01,
          1.8391e-01,  2.9448e-01,  4.5613e-01, -9.8343e-02,  3.8791e-01,
         -1.0993e-01,  3.9999e-02,  1.2016e-01,  2.6586e-01,  2.9615e-02,
         -7.8017e-02,  2.4935e-02, -7.5061e-02, -5.5801e-04,  6.4209e-02,
         -1.0987e-01,  1.5220e-01,  2.2785e-03,  1.4937e-02, -1.1515e-01,
         -8.4170e-02, -1.9994e-01,  5.6063e-01, -1.0211e-01,  1.3552e-01,
          1.9638e-01, -3.8963e-02, -2.4647e-01, -4.7494e-02, -2.7926e-01,
         -1.2181e-01,  5.2798e-01,  7.9667e-01, -3.6060e-01, -6.8580e-02,
          4.6795e-01,  7.6309e-02, -4.6695e-01,  2.5721e-02, -4.7175e-02,
          5.3735e-01, -2.8370e-01, -2.7039e-01,  3.1126e-01, -8.0023e-02,
          2.0418e-02, -1.1744e-01,  1.6605e-01,  1.6750e-02, -2.0536e-02,
          2.1255e-02, -1.7816e-02, -1.2591e-02, -4.7260e-02, -1.1116e-01,
         -1.5559e-01,  2.0268e-01,  2.0738e-01, -1.3858e-01, -1.7381e-01,
          2.6873e-02, -1.6644e-01,  1.4233e-01, -1.6372e-01,  1.1448e-01,
          2.8065e-02,  2.3099e-02,  2.7663e-01,  7.0822e-02, -8.6717e-02,
          1.6671e-01,  1.7916e-01,  3.1533e-01,  3.4316e-02,  2.0135e-01,
         -7.0757e-02, -1.3003e-01, -7.8822e-02, -2.2007e-01, -3.0552e-02,
         -1.6071e-01, -6.1649e-03, -2.5286e-01, -1.3489e-01, -2.0439e-01,
          2.2734e-01,  2.6246e-01,  2.3205e-01,  4.7900e-03,  1.8287e-01,
         -2.3179e-01,  6.4121e-02, -8.5677e-02, -4.5581e-02,  1.6740e-01,
         -1.5511e-01]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
520000 特征值优化 tensor(1.0436, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8166e-01,  2.6266e+00, -2.4140e-01, -9.1668e-01, -3.7023e-01,
          2.7682e+00,  3.3723e-01,  1.5087e+00, -1.0921e+00, -5.6077e-01,
         -2.4064e-02, -4.2209e-01, -1.1767e-01, -1.5792e-01, -3.1024e-01,
         -7.7418e-02, -2.8325e-01, -2.9259e-01,  8.5968e-01, -1.2641e+00,
          3.0668e-01,  6.5950e-02,  9.1847e-02, -1.0195e+00, -6.4774e-01,
         -1.3990e-01,  1.1879e-01,  2.9792e-02,  4.6592e-01, -2.7966e-01,
         -7.4083e-02,  1.5956e-01,  2.3370e-01, -1.0917e-01, -1.9800e-01,
         -5.5441e-01,  5.9448e-01, -3.4498e-01, -4.9180e-01,  4.1225e-01,
          2.0708e-01, -3.4548e-02,  4.4942e-02,  6.0461e-01,  8.1186e-02,
         -9.0338e-02,  8.1582e-02, -6.7904e-02, -1.2261e-01,  2.2113e-01,
          6.4745e-01, -1.3103e-01, -7.7015e-02,  2.4046e-01,  1.5210e-01,
         -6.1484e-01, -1.1954e-03,  4.6196e-01,  3.4385e-02,  4.8055e-02,
          1.6119e-01,  4.3057e-01, -2.0708e-01,  2.8643e-01, -4.7480e-01,
          2.1285e-01,  2.7206e-01,  4.4539e-01, -8.5913e-02,  3.8435e-01,
         -1.1735e-01,  4.9094e-02,  1.2919e-01,  2.7800e-01,  5.8634e-04,
         -8.3814e-02,  1.1182e-02, -6.3613e-02,  1.3719e-02,  6.8495e-02,
         -8.3275e-02,  1.4789e-01,  1.6839e-02, -1.2548e-03, -8.7167e-02,
         -9.1711e-02, -1.8594e-01,  5.3505e-01, -1.2098e-01,  1.6082e-01,
          1.8931e-01, -1.2091e-02, -2.2735e-01, -7.3384e-02, -2.7781e-01,
         -1.1545e-01,  5.4840e-01,  7.7797e-01, -3.6828e-01, -4.4319e-02,
          4.8199e-01,  8.9687e-02, -4.5904e-01,  8.7469e-03, -2.2790e-02,
          5.1295e-01, -2.6572e-01, -2.8627e-01,  2.9182e-01, -7.5075e-02,
          2.3171e-02, -1.1299e-01,  1.7580e-01,  3.5018e-02, -4.8069e-02,
          6.5979e-02, -3.0011e-02,  5.2095e-03, -5.3932e-02, -1.0656e-01,
         -1.4444e-01,  1.9950e-01,  2.0762e-01, -1.6470e-01, -1.6761e-01,
          2.2903e-02, -1.6336e-01,  1.4601e-01, -1.6948e-01,  9.9499e-02,
          3.1738e-02,  3.3137e-02,  2.6363e-01,  8.0913e-02, -8.9342e-02,
          1.4550e-01,  1.7202e-01,  2.8888e-01, -3.1306e-03,  1.7682e-01,
         -1.0943e-01, -1.4436e-01, -9.7144e-02, -2.2737e-01,  9.8743e-04,
         -1.7085e-01,  2.3080e-02, -2.5936e-01, -1.3248e-01, -2.0457e-01,
          2.3030e-01,  2.4176e-01,  2.3745e-01, -2.4128e-03,  1.8674e-01,
         -1.9948e-01,  7.5786e-02, -7.9865e-02, -4.9535e-02,  1.6931e-01,
         -1.6686e-01]], device='cuda:0') tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
521000 特征值优化 tensor(1.0350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2726,  2.6709, -0.2643, -0.9152, -0.3292,  2.7792,  0.3477,  1.5001,
         -1.1930, -0.5612, -0.0269, -0.3778, -0.1552, -0.1218, -0.3077, -0.1356,
         -0.3689, -0.2968,  0.9040, -1.2230,  0.3003,  0.0653,  0.1169, -1.0040,
         -0.6872, -0.1534,  0.1347,  0.0282,  0.5171, -0.2511, -0.0752,  0.1376,
          0.2001, -0.1151, -0.1862, -0.5518,  0.6105, -0.3510, -0.4446,  0.3902,
          0.2090, -0.0359,  0.0460,  0.5930,  0.0616, -0.0825,  0.0992, -0.0782,
         -0.1300,  0.2311,  0.6506, -0.1428, -0.1222,  0.2252,  0.1381, -0.6233,
         -0.0238,  0.4846,  0.0039,  0.0337,  0.1388,  0.4233, -0.2000,  0.2654,
         -0.4784,  0.2207,  0.2517,  0.4299, -0.0892,  0.3971, -0.1152,  0.0650,
          0.1278,  0.2965, -0.0239, -0.0741,  0.0321, -0.0504,  0.0264,  0.0899,
         -0.0793,  0.1804,  0.0537, -0.0057, -0.0857, -0.1264, -0.1572,  0.4614,
         -0.1166,  0.1659,  0.1611,  0.0269, -0.2177, -0.0775, -0.2793, -0.1074,
          0.5828,  0.7558, -0.4145,  0.0117,  0.5028,  0.1099, -0.4678,  0.0054,
         -0.0180,  0.4574, -0.2875, -0.2815,  0.2705, -0.0814,  0.0364, -0.0864,
          0.1732,  0.0417, -0.0544,  0.0716, -0.0243,  0.0368, -0.0620, -0.1432,
         -0.1355,  0.2062,  0.1990, -0.1649, -0.1437,  0.0359, -0.1675,  0.1539,
         -0.1786,  0.0541,  0.0427,  0.0208,  0.2554,  0.1042, -0.0756,  0.1211,
          0.1319,  0.2933, -0.0050,  0.1748, -0.1060, -0.1589, -0.1083, -0.2447,
          0.0304, -0.1637,  0.0445, -0.2464, -0.1215, -0.2251,  0.2190,  0.2560,
          0.2352, -0.0169,  0.1705, -0.1732,  0.0899, -0.0529, -0.0667,  0.1229,
         -0.1781]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
522000 特征值优化 tensor(1.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2643,  2.6628, -0.2698, -0.9215, -0.2787,  2.8301,  0.4221,  1.5286,
         -1.2042, -0.5535, -0.0143, -0.3332, -0.2025, -0.1497, -0.3032, -0.1854,
         -0.4181, -0.2930,  0.9433, -1.1587,  0.3087,  0.0304,  0.1598, -0.9102,
         -0.7304, -0.1832,  0.1636,  0.0458,  0.5793, -0.2219, -0.0856,  0.1305,
          0.2002, -0.1196, -0.1837, -0.5298,  0.6270, -0.3779, -0.3764,  0.3903,
          0.1738, -0.0362,  0.0470,  0.5866,  0.0341, -0.1029,  0.1331, -0.1031,
         -0.1146,  0.2525,  0.6475, -0.1425, -0.1512,  0.1871,  0.1065, -0.6293,
         -0.0579,  0.5048, -0.0239,  0.0146,  0.1415,  0.4191, -0.1980,  0.2436,
         -0.4801,  0.2155,  0.2320,  0.4226, -0.0798,  0.4222, -0.1218,  0.0293,
          0.1143,  0.2924, -0.0616, -0.0519,  0.0168, -0.0323,  0.0307,  0.0931,
         -0.0673,  0.2099,  0.0705, -0.0380, -0.0888, -0.1209, -0.1017,  0.4182,
         -0.1255,  0.2237,  0.1186,  0.0684, -0.1851, -0.0562, -0.2733, -0.1079,
          0.6159,  0.7351, -0.4295,  0.0365,  0.5172,  0.1467, -0.4566, -0.0127,
         -0.0206,  0.4270, -0.2865, -0.2678,  0.2077, -0.0907,  0.0464, -0.1134,
          0.1658,  0.0478, -0.0620,  0.0830, -0.0238,  0.0443, -0.0521, -0.1507,
         -0.1254,  0.2013,  0.2039, -0.1909, -0.1152,  0.0283, -0.1794,  0.1484,
         -0.1924,  0.0115,  0.0580,  0.0080,  0.2334,  0.1303, -0.0656,  0.1287,
          0.0831,  0.2931, -0.0109,  0.1789, -0.1211, -0.1899, -0.1078, -0.2465,
          0.0742, -0.1569,  0.0585, -0.2420, -0.1178, -0.2166,  0.2388,  0.2567,
          0.2165, -0.0206,  0.1574, -0.1250,  0.0743, -0.0460, -0.0773,  0.1242,
         -0.1997]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
523000 特征值优化 tensor(1.0461, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3283,  2.6496, -0.2847, -0.9162, -0.2418,  2.9051,  0.4788,  1.5401,
         -1.2867, -0.5539,  0.0124, -0.3063, -0.2032, -0.1001, -0.2717, -0.2054,
         -0.4326, -0.2802,  0.9448, -1.1370,  0.3239, -0.0029,  0.1837, -0.8304,
         -0.7905, -0.2138,  0.2130,  0.0613,  0.6137, -0.2076, -0.0820,  0.1404,
          0.2170, -0.1374, -0.1783, -0.5270,  0.6163, -0.3952, -0.3194,  0.3826,
          0.1546, -0.0356,  0.0448,  0.5892,  0.0226, -0.1170,  0.1549, -0.0987,
         -0.1353,  0.2526,  0.6371, -0.1484, -0.1943,  0.1711,  0.1173, -0.6340,
         -0.0924,  0.5076, -0.0441,  0.0321,  0.1527,  0.4144, -0.2049,  0.2377,
         -0.4684,  0.2282,  0.2124,  0.3989, -0.0620,  0.4245, -0.1340,  0.0238,
          0.1231,  0.2969, -0.0764, -0.0530,  0.0215, -0.0176,  0.0482,  0.1020,
         -0.0449,  0.2128,  0.0718, -0.0554, -0.0592, -0.0888, -0.0660,  0.3996,
         -0.1886,  0.2396,  0.1041,  0.0773, -0.1639, -0.0751, -0.2758, -0.0975,
          0.6158,  0.7099, -0.4430,  0.0807,  0.5056,  0.1565, -0.4283, -0.0226,
         -0.0137,  0.3785, -0.3213, -0.2691,  0.1701, -0.0924,  0.0390, -0.1220,
          0.1537,  0.0476, -0.0455,  0.0798, -0.0166,  0.0604, -0.0425, -0.1726,
         -0.1063,  0.2090,  0.2181, -0.2022, -0.0952,  0.0231, -0.1774,  0.1497,
         -0.1988,  0.0052,  0.0612,  0.0107,  0.2310,  0.1538, -0.0682,  0.1089,
          0.0573,  0.2746, -0.0096,  0.1609, -0.1383, -0.2110, -0.1145, -0.2535,
          0.0982, -0.1517,  0.0568, -0.2456, -0.1312, -0.2125,  0.2349,  0.2403,
          0.1807, -0.0174,  0.1515, -0.0999,  0.0714, -0.0623, -0.0882,  0.1231,
         -0.2219]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
524000 特征值优化 tensor(1.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.7538e-01,  2.6251e+00, -2.7968e-01, -9.2383e-01, -2.2973e-01,
          2.9486e+00,  5.1616e-01,  1.5616e+00, -1.3220e+00, -5.6059e-01,
          1.6579e-02, -3.0895e-01, -2.0967e-01, -8.4559e-02, -2.5182e-01,
         -2.1164e-01, -4.3768e-01, -2.5211e-01,  9.3830e-01, -1.1268e+00,
          3.1381e-01, -1.8176e-02,  2.0208e-01, -7.6258e-01, -8.1887e-01,
         -2.3273e-01,  2.3967e-01,  7.5775e-02,  6.2231e-01, -1.9491e-01,
         -9.4977e-02,  1.4400e-01,  2.3158e-01, -1.3670e-01, -1.7909e-01,
         -5.2647e-01,  6.2468e-01, -4.1089e-01, -2.9485e-01,  3.8287e-01,
          1.4618e-01, -3.9195e-02,  4.8716e-02,  5.8342e-01,  9.7301e-03,
         -1.2697e-01,  1.6714e-01, -9.1213e-02, -1.2170e-01,  2.4750e-01,
          6.3520e-01, -1.3437e-01, -1.9656e-01,  1.4671e-01,  1.1887e-01,
         -6.3295e-01, -1.1689e-01,  4.9402e-01, -4.3399e-02,  3.1922e-02,
          1.6334e-01,  4.1958e-01, -2.0382e-01,  2.2457e-01, -4.7489e-01,
          2.2663e-01,  2.0296e-01,  3.9374e-01, -5.4390e-02,  4.2563e-01,
         -1.4563e-01,  2.4615e-02,  1.3385e-01,  3.0676e-01, -7.0387e-02,
         -2.8045e-02,  3.7326e-02, -2.5877e-02,  4.1655e-02,  1.1218e-01,
         -4.5536e-02,  2.1499e-01,  6.8717e-02, -5.8241e-02, -3.2718e-02,
         -8.5669e-02, -4.0323e-02,  3.9508e-01, -2.1172e-01,  2.3249e-01,
          1.1226e-01,  7.0269e-02, -1.5054e-01, -6.6423e-02, -2.7980e-01,
         -1.0105e-01,  6.0386e-01,  6.8092e-01, -4.5668e-01,  7.8096e-02,
          5.1591e-01,  1.5646e-01, -4.1187e-01, -9.2750e-03,  7.5405e-03,
          3.6106e-01, -3.0867e-01, -2.5197e-01,  1.5886e-01, -9.5168e-02,
          2.7820e-02, -1.2218e-01,  1.5000e-01,  4.6125e-02, -5.0002e-02,
          7.5141e-02, -1.6154e-02,  6.8518e-02, -5.0969e-02, -1.7153e-01,
         -9.8856e-02,  2.1239e-01,  2.1990e-01, -1.9873e-01, -7.3174e-02,
          2.5354e-02, -1.7671e-01,  1.5823e-01, -1.9117e-01,  2.5910e-03,
          6.7026e-02,  2.2960e-02,  2.3618e-01,  1.6895e-01, -8.5568e-02,
          7.8384e-02,  5.3789e-02,  2.6219e-01, -1.6385e-02,  1.6934e-01,
         -1.3772e-01, -2.0478e-01, -1.2230e-01, -2.5429e-01,  1.3457e-01,
         -1.5635e-01,  4.8555e-02, -2.5414e-01, -1.4596e-01, -2.0159e-01,
          2.3027e-01,  2.4277e-01,  1.8448e-01, -2.0331e-02,  1.4247e-01,
         -9.6514e-02,  6.3654e-02, -5.6502e-02, -9.1378e-02,  1.1237e-01,
         -2.2195e-01]], device='cuda:0') tensor(0.2075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
525000 特征值优化 tensor(1.0478, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2537e-01,  2.5884e+00, -2.7675e-01, -9.1254e-01, -2.2086e-01,
          2.9632e+00,  5.4032e-01,  1.5791e+00, -1.3377e+00, -5.7148e-01,
          1.7569e-02, -2.8135e-01, -2.3558e-01, -8.6847e-02, -2.4326e-01,
         -2.0001e-01, -4.4650e-01, -2.3763e-01,  9.3622e-01, -1.1314e+00,
          3.0041e-01, -1.9170e-02,  1.9671e-01, -7.2560e-01, -8.2707e-01,
         -2.3509e-01,  2.2742e-01,  8.3521e-02,  6.1589e-01, -1.8918e-01,
         -8.3829e-02,  1.6352e-01,  2.2834e-01, -1.2964e-01, -1.6125e-01,
         -5.3762e-01,  6.1490e-01, -4.1278e-01, -2.9005e-01,  3.8248e-01,
          1.2417e-01, -3.9735e-02,  4.0131e-02,  5.9671e-01,  2.7572e-03,
         -1.2520e-01,  1.6344e-01, -1.0754e-01, -1.3384e-01,  2.4089e-01,
          6.3516e-01, -1.2265e-01, -2.0051e-01,  1.5716e-01,  1.2103e-01,
         -6.4965e-01, -1.1069e-01,  4.8464e-01, -4.9295e-02,  4.8883e-02,
          1.6902e-01,  4.1026e-01, -2.0960e-01,  2.1905e-01, -4.7030e-01,
          2.3424e-01,  2.0054e-01,  3.7886e-01, -4.1998e-02,  4.2976e-01,
         -1.5510e-01,  3.5165e-02,  1.3584e-01,  3.1868e-01, -8.8228e-02,
         -2.0444e-02,  3.7117e-02, -1.5629e-02,  6.2459e-02,  1.2759e-01,
         -5.1268e-02,  2.1666e-01,  7.8453e-02, -6.2228e-02,  4.2875e-03,
         -7.6121e-02, -3.2965e-02,  4.0136e-01, -2.4018e-01,  2.1180e-01,
          1.0556e-01,  6.6119e-02, -1.5342e-01, -8.3940e-02, -2.6380e-01,
         -9.6436e-02,  6.0364e-01,  6.8924e-01, -4.5717e-01,  1.1522e-01,
          5.1972e-01,  1.5389e-01, -4.1936e-01, -3.3356e-02,  3.4191e-03,
          3.2112e-01, -3.0773e-01, -2.6328e-01,  1.5870e-01, -9.1685e-02,
          2.9786e-02, -1.2806e-01,  1.3935e-01,  6.0053e-02, -4.5815e-02,
          6.4348e-02, -1.9012e-02,  5.8846e-02, -5.0152e-02, -1.6941e-01,
         -8.7581e-02,  2.2664e-01,  2.1447e-01, -1.9626e-01, -6.0376e-02,
          2.0635e-02, -1.7922e-01,  1.6906e-01, -1.9888e-01, -2.4389e-03,
          6.8759e-02,  1.3856e-02,  2.3046e-01,  1.5595e-01, -7.5553e-02,
          7.6535e-02,  2.6231e-02,  2.4942e-01, -1.3396e-02,  1.4830e-01,
         -1.3019e-01, -2.0231e-01, -1.2339e-01, -2.3889e-01,  1.4406e-01,
         -1.5109e-01,  4.7754e-02, -2.5069e-01, -1.3538e-01, -2.0391e-01,
          2.1403e-01,  2.3202e-01,  1.6742e-01, -1.0335e-02,  1.3844e-01,
         -8.5725e-02,  6.1713e-02, -7.7012e-02, -9.6401e-02,  1.1812e-01,
         -2.2812e-01]], device='cuda:0') tensor(0.2275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
526000 特征值优化 tensor(1.0395, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8650e-01,  2.5982e+00, -2.6434e-01, -9.0536e-01, -2.3124e-01,
          2.9485e+00,  5.5032e-01,  1.5847e+00, -1.3633e+00, -5.7451e-01,
          1.6142e-02, -2.7524e-01, -2.4002e-01, -7.6080e-02, -2.2499e-01,
         -2.0427e-01, -4.3912e-01, -2.3176e-01,  9.3540e-01, -1.1349e+00,
          2.9700e-01, -2.1363e-02,  2.0178e-01, -7.0476e-01, -8.2709e-01,
         -2.3864e-01,  2.2824e-01,  8.5265e-02,  6.1386e-01, -1.8505e-01,
         -8.8695e-02,  1.7149e-01,  2.3786e-01, -1.3050e-01, -1.4675e-01,
         -5.4716e-01,  6.1185e-01, -4.1410e-01, -2.8634e-01,  3.7868e-01,
          1.3091e-01, -3.7330e-02,  4.8073e-02,  5.8947e-01, -2.3193e-03,
         -1.4638e-01,  1.6402e-01, -1.0909e-01, -1.2552e-01,  2.2965e-01,
          6.3748e-01, -1.1707e-01, -1.9789e-01,  1.5097e-01,  1.1974e-01,
         -6.4919e-01, -1.2000e-01,  4.8489e-01, -4.4065e-02,  5.3627e-02,
          1.6584e-01,  4.1198e-01, -2.1441e-01,  2.1050e-01, -4.8058e-01,
          2.3694e-01,  1.9356e-01,  3.7905e-01, -3.9236e-02,  4.2816e-01,
         -1.5500e-01,  4.3375e-02,  1.3723e-01,  3.2073e-01, -8.7568e-02,
         -1.5485e-02,  4.2184e-02, -1.4036e-02,  5.3313e-02,  1.3499e-01,
         -4.9532e-02,  2.1364e-01,  7.7096e-02, -6.4043e-02,  1.2526e-02,
         -7.8217e-02, -3.0890e-02,  3.9552e-01, -2.4268e-01,  2.2395e-01,
          1.1276e-01,  6.4765e-02, -1.4347e-01, -7.7599e-02, -2.6475e-01,
         -1.0654e-01,  5.9517e-01,  6.8670e-01, -4.7305e-01,  1.1470e-01,
          5.0974e-01,  1.5416e-01, -3.9475e-01, -3.5176e-02,  7.0275e-03,
          3.2154e-01, -3.0138e-01, -2.6618e-01,  1.6712e-01, -9.2473e-02,
          2.5613e-02, -1.2827e-01,  1.3934e-01,  6.2476e-02, -4.9295e-02,
          5.6087e-02, -1.2521e-02,  6.3965e-02, -4.5177e-02, -1.6899e-01,
         -8.7377e-02,  2.2770e-01,  2.1431e-01, -1.9234e-01, -5.6444e-02,
          1.8458e-02, -1.6600e-01,  1.6522e-01, -1.8967e-01, -1.2218e-02,
          6.5248e-02,  2.6531e-02,  2.4237e-01,  1.5631e-01, -8.4914e-02,
          7.0611e-02,  2.4239e-02,  2.3894e-01, -2.1832e-02,  1.6317e-01,
         -1.3923e-01, -2.0258e-01, -1.3999e-01, -2.3929e-01,  1.4582e-01,
         -1.5223e-01,  4.2937e-02, -2.5524e-01, -1.4756e-01, -2.0557e-01,
          2.1490e-01,  2.3471e-01,  1.6572e-01, -1.5677e-02,  1.3492e-01,
         -8.6952e-02,  5.9498e-02, -7.1889e-02, -9.6272e-02,  1.1071e-01,
         -2.2729e-01]], device='cuda:0') tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
527000 特征值优化 tensor(1.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5147,  2.5983, -0.2714, -0.9098, -0.2361,  2.9349,  0.5337,  1.5864,
         -1.3543, -0.5774,  0.0172, -0.2943, -0.2272, -0.0698, -0.2381, -0.2119,
         -0.4504, -0.2245,  0.9232, -1.1553,  0.3003, -0.0240,  0.2243, -0.7000,
         -0.8328, -0.2352,  0.2375,  0.0803,  0.6152, -0.1819, -0.1052,  0.1776,
          0.2457, -0.1311, -0.1558, -0.5535,  0.6177, -0.4203, -0.2795,  0.3842,
          0.1306, -0.0371,  0.0478,  0.5879, -0.0034, -0.1447,  0.1695, -0.0986,
         -0.1144,  0.2274,  0.6363, -0.1069, -0.1789,  0.1452,  0.1126, -0.6621,
         -0.1378,  0.4828, -0.0265,  0.0499,  0.1686,  0.4118, -0.2206,  0.2110,
         -0.4833,  0.2389,  0.1881,  0.3727, -0.0396,  0.4238, -0.1586,  0.0347,
          0.1329,  0.3227, -0.0735, -0.0091,  0.0422, -0.0213,  0.0515,  0.1401,
         -0.0447,  0.2101,  0.0780, -0.0606,  0.0111, -0.0744, -0.0250,  0.3912,
         -0.2558,  0.1951,  0.1136,  0.0755, -0.1399, -0.0731, -0.2665, -0.1058,
          0.5925,  0.6779, -0.4744,  0.1107,  0.4946,  0.1465, -0.3751, -0.0191,
          0.0167,  0.3222, -0.3059, -0.2471,  0.1449, -0.0914,  0.0262, -0.1215,
          0.1289,  0.0552, -0.0521,  0.0610, -0.0102,  0.0609, -0.0377, -0.1621,
         -0.0872,  0.2262,  0.2203, -0.1894, -0.0581,  0.0188, -0.1734,  0.1730,
         -0.1814, -0.0052,  0.0588,  0.0260,  0.2398,  0.1661, -0.0839,  0.0587,
          0.0416,  0.2444, -0.0191,  0.1710, -0.1392, -0.2072, -0.1412, -0.2451,
          0.1539, -0.1494,  0.0402, -0.2643, -0.1478, -0.2010,  0.2125,  0.2300,
          0.1695, -0.0135,  0.1332, -0.0914,  0.0574, -0.0715, -0.0965,  0.1055,
         -0.2341]], device='cuda:0') tensor(0.2107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
528000 特征值优化 tensor(1.0258, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.6213e-01,  2.6014e+00, -2.6630e-01, -9.1497e-01, -2.2894e-01,
          2.9385e+00,  5.5048e-01,  1.6050e+00, -1.3876e+00, -5.7473e-01,
          2.4180e-02, -2.7635e-01, -2.4128e-01, -6.8209e-02, -2.2733e-01,
         -1.8728e-01, -4.3998e-01, -2.2338e-01,  9.2970e-01, -1.1400e+00,
          3.0082e-01, -2.7032e-02,  2.0212e-01, -6.8865e-01, -8.2212e-01,
         -2.5051e-01,  2.2234e-01,  7.2671e-02,  6.1297e-01, -1.8117e-01,
         -1.0510e-01,  1.6809e-01,  2.3660e-01, -1.4175e-01, -1.4513e-01,
         -5.5683e-01,  6.0629e-01, -4.2070e-01, -3.0047e-01,  3.7520e-01,
          1.1789e-01, -4.0326e-02,  4.9485e-02,  5.8903e-01, -9.7648e-03,
         -1.4988e-01,  1.8353e-01, -8.8312e-02, -1.3744e-01,  2.1754e-01,
          6.3802e-01, -1.1952e-01, -1.8615e-01,  1.5309e-01,  1.2054e-01,
         -6.5582e-01, -1.3064e-01,  4.7621e-01, -3.7474e-02,  5.8280e-02,
          1.5589e-01,  4.0764e-01, -2.1523e-01,  2.0971e-01, -4.7132e-01,
          2.3454e-01,  1.8947e-01,  3.7870e-01, -3.6798e-02,  4.3120e-01,
         -1.5775e-01,  4.7369e-02,  1.3371e-01,  3.2240e-01, -9.1475e-02,
         -4.0248e-02,  3.0797e-02, -9.8457e-03,  3.4583e-02,  1.4998e-01,
         -4.7048e-02,  2.0659e-01,  8.6341e-02, -6.4733e-02,  3.6717e-02,
         -6.7585e-02, -2.2808e-02,  3.8673e-01, -2.3670e-01,  2.1214e-01,
          1.1084e-01,  6.3885e-02, -1.3375e-01, -7.7047e-02, -2.6632e-01,
         -1.0418e-01,  5.9634e-01,  6.7720e-01, -4.8204e-01,  1.2543e-01,
          5.1353e-01,  1.5135e-01, -3.8790e-01, -3.9289e-02, -2.5547e-03,
          3.0815e-01, -3.1216e-01, -2.6070e-01,  1.6001e-01, -9.3759e-02,
          2.7447e-02, -1.2387e-01,  1.3659e-01,  7.1437e-02, -5.5116e-02,
          5.4169e-02, -1.3054e-02,  5.8804e-02, -5.2467e-02, -1.6349e-01,
         -8.7549e-02,  2.2833e-01,  2.1972e-01, -1.9426e-01, -6.2614e-02,
          1.7042e-02, -1.7206e-01,  1.7183e-01, -1.8431e-01, -1.4137e-02,
          6.1901e-02,  2.6789e-02,  2.4706e-01,  1.5650e-01, -8.7323e-02,
          5.8042e-02,  2.0377e-02,  2.5412e-01, -8.9366e-03,  1.5532e-01,
         -1.4502e-01, -1.9866e-01, -1.4456e-01, -2.4441e-01,  1.4541e-01,
         -1.4095e-01,  5.0767e-02, -2.6107e-01, -1.3717e-01, -2.0334e-01,
          2.1092e-01,  2.3072e-01,  1.7779e-01, -1.9725e-02,  1.3917e-01,
         -7.9660e-02,  4.9626e-02, -8.9635e-02, -9.2940e-02,  9.6245e-02,
         -2.2841e-01]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
529000 特征值优化 tensor(1.0246, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.6801e-01,  2.6021e+00, -2.6642e-01, -9.1802e-01, -2.3997e-01,
          2.9454e+00,  5.5023e-01,  1.6021e+00, -1.3977e+00, -5.8011e-01,
          2.4086e-02, -2.8187e-01, -2.4038e-01, -7.9360e-02, -2.2945e-01,
         -1.7958e-01, -4.6215e-01, -2.1905e-01,  9.2380e-01, -1.1411e+00,
          2.9401e-01, -3.1047e-02,  1.9761e-01, -6.9311e-01, -8.0868e-01,
         -2.4051e-01,  2.1454e-01,  4.9840e-02,  6.1165e-01, -1.7377e-01,
         -1.1745e-01,  1.6701e-01,  2.3107e-01, -1.4534e-01, -1.4945e-01,
         -5.5753e-01,  6.1354e-01, -4.1933e-01, -2.9430e-01,  3.7978e-01,
          1.4331e-01, -4.0951e-02,  4.9903e-02,  5.8613e-01, -1.3587e-02,
         -1.5236e-01,  1.8077e-01, -7.9506e-02, -1.4147e-01,  2.1728e-01,
          6.3433e-01, -1.2421e-01, -1.8373e-01,  1.5555e-01,  1.2148e-01,
         -6.5368e-01, -1.3198e-01,  4.8543e-01, -3.3795e-02,  6.5200e-02,
          1.5098e-01,  4.0881e-01, -2.0860e-01,  2.0307e-01, -4.7444e-01,
          2.3758e-01,  1.9200e-01,  3.8049e-01, -3.5838e-02,  4.2963e-01,
         -1.6459e-01,  3.9812e-02,  1.3944e-01,  3.2180e-01, -8.2741e-02,
         -3.8901e-02,  2.8361e-02, -1.1711e-02,  3.7219e-02,  1.4506e-01,
         -4.3787e-02,  2.0522e-01,  7.8599e-02, -6.5322e-02,  3.2748e-02,
         -6.0393e-02, -2.2290e-02,  3.8296e-01, -2.4329e-01,  2.1193e-01,
          1.1259e-01,  7.2474e-02, -1.2749e-01, -7.5038e-02, -2.6805e-01,
         -1.0417e-01,  5.9523e-01,  6.7331e-01, -4.8605e-01,  1.1883e-01,
          5.2097e-01,  1.5075e-01, -3.7808e-01, -3.0271e-02,  1.4304e-03,
          3.1355e-01, -3.0990e-01, -2.6044e-01,  1.5068e-01, -9.4702e-02,
          2.5557e-02, -1.3299e-01,  1.3506e-01,  7.0546e-02, -6.0963e-02,
          6.1002e-02, -1.8001e-02,  5.3850e-02, -4.9961e-02, -1.6844e-01,
         -9.2543e-02,  2.2290e-01,  2.1473e-01, -1.9457e-01, -6.2336e-02,
          1.8927e-02, -1.6314e-01,  1.7259e-01, -1.7957e-01, -1.5299e-02,
          6.0570e-02,  3.8315e-02,  2.4668e-01,  1.5286e-01, -8.9417e-02,
          5.6937e-02,  1.1802e-02,  2.5230e-01,  1.7925e-03,  1.5482e-01,
         -1.5767e-01, -1.9380e-01, -1.3832e-01, -2.4219e-01,  1.4268e-01,
         -1.4250e-01,  5.0154e-02, -2.5987e-01, -1.3775e-01, -1.9546e-01,
          2.2149e-01,  2.3748e-01,  1.7889e-01, -2.4530e-02,  1.4118e-01,
         -8.0375e-02,  5.2071e-02, -9.3380e-02, -8.9084e-02,  1.0069e-01,
         -2.3087e-01]], device='cuda:0') tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
530000 特征值优化 tensor(1.0264, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5607,  2.5933, -0.2622, -0.9100, -0.2312,  2.9442,  0.5413,  1.5956,
         -1.3851, -0.5760,  0.0195, -0.2959, -0.2200, -0.0665, -0.2172, -0.2046,
         -0.4320, -0.2151,  0.9204, -1.1524,  0.2875, -0.0356,  0.2062, -0.6912,
         -0.8198, -0.2552,  0.2323,  0.0748,  0.6076, -0.1773, -0.0948,  0.1833,
          0.2526, -0.1358, -0.1481, -0.5547,  0.6169, -0.4261, -0.2855,  0.3899,
          0.1180, -0.0363,  0.0449,  0.5952, -0.0135, -0.1457,  0.1619, -0.1044,
         -0.1178,  0.2250,  0.6302, -0.1127, -0.1707,  0.1569,  0.1105, -0.6626,
         -0.1396,  0.4870, -0.0394,  0.0634,  0.1709,  0.4114, -0.2099,  0.2104,
         -0.4831,  0.2467,  0.1911,  0.3689, -0.0316,  0.4234, -0.1587,  0.0413,
          0.1298,  0.3209, -0.0785, -0.0155,  0.0511, -0.0198,  0.0539,  0.1324,
         -0.0593,  0.2094,  0.0842, -0.0638,  0.0120, -0.0780, -0.0219,  0.3897,
         -0.2438,  0.1967,  0.1219,  0.0777, -0.1326, -0.0662, -0.2752, -0.1051,
          0.5906,  0.6667, -0.4771,  0.1292,  0.4979,  0.1589, -0.3786, -0.0300,
          0.0134,  0.3161, -0.2986, -0.2680,  0.1430, -0.0930,  0.0207, -0.1213,
          0.1256,  0.0627, -0.0394,  0.0587, -0.0131,  0.0635, -0.0477, -0.1671,
         -0.0842,  0.2301,  0.2148, -0.1902, -0.0513,  0.0175, -0.1713,  0.1758,
         -0.1984, -0.0070,  0.0577,  0.0235,  0.2475,  0.1657, -0.0819,  0.0613,
          0.0316,  0.2440, -0.0097,  0.1675, -0.1375, -0.2124, -0.1328, -0.2413,
          0.1540, -0.1608,  0.0298, -0.2562, -0.1471, -0.2012,  0.2115,  0.2375,
          0.1662, -0.0071,  0.1335, -0.0944,  0.0649, -0.0715, -0.0872,  0.1073,
         -0.2234]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
531000 特征值优化 tensor(1.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5370,  2.6295, -0.2800, -0.9184, -0.2634,  2.9546,  0.5512,  1.5943,
         -1.3902, -0.5788,  0.0231, -0.2890, -0.2326, -0.0516, -0.2218, -0.1794,
         -0.4642, -0.2251,  0.9216, -1.1459,  0.2915, -0.0511,  0.2012, -0.6739,
         -0.8168, -0.2479,  0.2296,  0.0724,  0.6151, -0.1802, -0.1087,  0.1740,
          0.2542, -0.1484, -0.1515, -0.5543,  0.6115, -0.4235, -0.2852,  0.3804,
          0.1263, -0.0398,  0.0502,  0.5875, -0.0077, -0.1451,  0.1706, -0.0876,
         -0.1225,  0.2250,  0.6376, -0.1156, -0.1743,  0.1447,  0.1226, -0.6526,
         -0.1387,  0.4818, -0.0364,  0.0558,  0.1672,  0.4121, -0.2141,  0.2055,
         -0.4814,  0.2402,  0.1865,  0.3738, -0.0381,  0.4276, -0.1675,  0.0531,
          0.1365,  0.3222, -0.0808, -0.0208,  0.0368, -0.0260,  0.0488,  0.1386,
         -0.0443,  0.2086,  0.0828, -0.0581,  0.0216, -0.0696, -0.0201,  0.3968,
         -0.2446,  0.2068,  0.1232,  0.0719, -0.1398, -0.0701, -0.2699, -0.1013,
          0.5786,  0.6691, -0.4993,  0.1165,  0.5055,  0.1475, -0.3919, -0.0164,
          0.0073,  0.3139, -0.3088, -0.2616,  0.1538, -0.0944,  0.0264, -0.1257,
          0.1377,  0.0578, -0.0555,  0.0559, -0.0150,  0.0620, -0.0448, -0.1767,
         -0.0865,  0.2314,  0.2159, -0.1926, -0.0503,  0.0221, -0.1657,  0.1671,
         -0.1817, -0.0242,  0.0576,  0.0388,  0.2492,  0.1463, -0.0873,  0.0498,
          0.0276,  0.2467, -0.0062,  0.1646, -0.1487, -0.2018, -0.1287, -0.2435,
          0.1552, -0.1489,  0.0399, -0.2604, -0.1570, -0.1974,  0.2091,  0.2358,
          0.1713, -0.0291,  0.1345, -0.0891,  0.0543, -0.0873, -0.0957,  0.0947,
         -0.2286]], device='cuda:0') tensor(0.2070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
532000 特征值优化 tensor(1.0239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5329,  2.6059, -0.2664, -0.9122, -0.2554,  2.9712,  0.5649,  1.6107,
         -1.4045, -0.5764,  0.0163, -0.2786, -0.2323, -0.0877, -0.2319, -0.1919,
         -0.4472, -0.2160,  0.9264, -1.1408,  0.2860, -0.0309,  0.2020, -0.6684,
         -0.8236, -0.2547,  0.2089,  0.0831,  0.6125, -0.1823, -0.0987,  0.1812,
          0.2316, -0.1233, -0.1393, -0.5589,  0.6103, -0.4277, -0.2955,  0.3824,
          0.1036, -0.0378,  0.0476,  0.5931, -0.0085, -0.1268,  0.1544, -0.1067,
         -0.1352,  0.2247,  0.6260, -0.1095, -0.1729,  0.1535,  0.1124, -0.6549,
         -0.1207,  0.4830, -0.0454,  0.0737,  0.1611,  0.4076, -0.2103,  0.2082,
         -0.4793,  0.2454,  0.1875,  0.3697, -0.0301,  0.4327, -0.1603,  0.0517,
          0.1315,  0.3268, -0.0998, -0.0152,  0.0489, -0.0125,  0.0634,  0.1422,
         -0.0628,  0.2086,  0.0820, -0.0689,  0.0377, -0.0668, -0.0165,  0.3991,
         -0.2445,  0.1985,  0.1271,  0.0692, -0.1339, -0.0833, -0.2708, -0.1044,
          0.5926,  0.6796, -0.4795,  0.1352,  0.5128,  0.1607, -0.3950, -0.0373,
          0.0167,  0.2942, -0.3023, -0.2783,  0.1463, -0.0918,  0.0225, -0.1204,
          0.1383,  0.0745, -0.0455,  0.0638, -0.0096,  0.0480, -0.0529, -0.1693,
         -0.0727,  0.2274,  0.2117, -0.1837, -0.0523,  0.0221, -0.1652,  0.1722,
         -0.2009, -0.0153,  0.0594,  0.0299,  0.2493,  0.1517, -0.0803,  0.0554,
          0.0108,  0.2395, -0.0171,  0.1371, -0.1363, -0.1969, -0.1334, -0.2446,
          0.1502, -0.1659,  0.0404, -0.2664, -0.1468, -0.2025,  0.2155,  0.2253,
          0.1725, -0.0104,  0.1331, -0.0799,  0.0634, -0.0808, -0.0997,  0.1086,
         -0.2300]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
533000 特征值优化 tensor(1.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.5895e-01,  2.6296e+00, -2.7312e-01, -9.0416e-01, -2.5643e-01,
          2.9546e+00,  5.6233e-01,  1.6078e+00, -1.4127e+00, -5.7307e-01,
          1.8654e-02, -2.6417e-01, -2.2925e-01, -6.1380e-02, -2.3257e-01,
         -1.9016e-01, -4.5416e-01, -2.2091e-01,  9.1593e-01, -1.1458e+00,
          2.9120e-01, -4.6294e-02,  1.8880e-01, -6.6339e-01, -8.0029e-01,
         -2.3917e-01,  2.0668e-01,  7.4444e-02,  6.1726e-01, -1.8322e-01,
         -1.1055e-01,  1.7848e-01,  2.4136e-01, -1.3502e-01, -1.4426e-01,
         -5.6625e-01,  6.1439e-01, -4.1773e-01, -2.9283e-01,  3.8464e-01,
          1.2460e-01, -3.9965e-02,  4.8690e-02,  5.8866e-01, -6.9999e-03,
         -1.3801e-01,  1.6049e-01, -1.0102e-01, -1.3003e-01,  2.2868e-01,
          6.3616e-01, -1.1767e-01, -1.7857e-01,  1.4900e-01,  1.1505e-01,
         -6.5605e-01, -1.2111e-01,  4.7859e-01, -4.3494e-02,  7.2108e-02,
          1.5407e-01,  4.1125e-01, -2.1092e-01,  2.0012e-01, -4.8091e-01,
          2.4095e-01,  1.7996e-01,  3.6638e-01, -3.1147e-02,  4.2624e-01,
         -1.6049e-01,  5.7788e-02,  1.3615e-01,  3.2525e-01, -9.4521e-02,
         -1.2447e-02,  3.3618e-02, -1.7021e-02,  4.4657e-02,  1.4539e-01,
         -5.1694e-02,  2.0475e-01,  8.2604e-02, -7.0091e-02,  4.0874e-02,
         -7.2385e-02, -1.7818e-02,  3.9606e-01, -2.3535e-01,  2.1690e-01,
          1.2425e-01,  7.9318e-02, -1.4485e-01, -7.4536e-02, -2.6180e-01,
         -1.0545e-01,  5.9121e-01,  6.7441e-01, -4.8975e-01,  1.2616e-01,
          5.0260e-01,  1.5455e-01, -3.8112e-01, -3.3676e-02,  1.2780e-03,
          3.0038e-01, -3.0921e-01, -2.7143e-01,  1.4015e-01, -9.4992e-02,
          2.4321e-02, -1.3195e-01,  1.2542e-01,  7.8040e-02, -5.2375e-02,
          5.1906e-02, -1.1008e-02,  5.6070e-02, -5.5510e-02, -1.6245e-01,
         -7.8519e-02,  2.3482e-01,  2.1824e-01, -1.9184e-01, -5.0926e-02,
          1.7556e-02, -1.6030e-01,  1.7097e-01, -1.9181e-01, -1.9813e-02,
          5.8012e-02,  4.0935e-02,  2.5383e-01,  1.5275e-01, -9.0847e-02,
          5.3915e-02,  2.0318e-02,  2.4797e-01, -1.5305e-02,  1.5014e-01,
         -1.4600e-01, -2.0343e-01, -1.3201e-01, -2.3760e-01,  1.5607e-01,
         -1.5884e-01,  4.3709e-02, -2.6373e-01, -1.4745e-01, -2.0674e-01,
          2.1033e-01,  2.3215e-01,  1.8161e-01, -1.8902e-02,  1.3093e-01,
         -7.4510e-02,  4.9527e-02, -8.6001e-02, -8.9607e-02,  1.0504e-01,
         -2.1959e-01]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
534000 特征值优化 tensor(1.0382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5192,  2.6295, -0.2851, -0.9023, -0.2576,  2.9748,  0.5586,  1.5989,
         -1.4066, -0.5768,  0.0116, -0.2931, -0.2173, -0.0804, -0.2348, -0.1811,
         -0.4746, -0.2163,  0.9031, -1.1584,  0.2857, -0.0582,  0.2018, -0.6559,
         -0.8242, -0.2458,  0.2117,  0.0758,  0.6244, -0.1801, -0.1055,  0.1738,
          0.2414, -0.1296, -0.1470, -0.5638,  0.6175, -0.4222, -0.2832,  0.3774,
          0.1243, -0.0371,  0.0494,  0.5863, -0.0078, -0.1331,  0.1625, -0.0977,
         -0.1198,  0.2319,  0.6312, -0.1139, -0.1761,  0.1500,  0.1111, -0.6546,
         -0.1289,  0.4783, -0.0420,  0.0692,  0.1590,  0.4129, -0.2180,  0.2062,
         -0.4794,  0.2428,  0.1836,  0.3687, -0.0401,  0.4223, -0.1738,  0.0601,
          0.1381,  0.3224, -0.1000, -0.0176,  0.0378, -0.0275,  0.0446,  0.1494,
         -0.0506,  0.2079,  0.0776, -0.0679,  0.0382, -0.0702, -0.0195,  0.4108,
         -0.2628,  0.1958,  0.1268,  0.0719, -0.1411, -0.0830, -0.2633, -0.1003,
          0.5804,  0.6681, -0.4884,  0.1315,  0.5165,  0.1445, -0.3766, -0.0221,
          0.0143,  0.3003, -0.3131, -0.2651,  0.1342, -0.0947,  0.0257, -0.1309,
          0.1332,  0.0713, -0.0437,  0.0508, -0.0104,  0.0532, -0.0480, -0.1638,
         -0.0802,  0.2342,  0.2121, -0.1881, -0.0463,  0.0224, -0.1644,  0.1725,
         -0.1899, -0.0289,  0.0549,  0.0399,  0.2476,  0.1477, -0.0851,  0.0494,
          0.0226,  0.2517, -0.0143,  0.1400, -0.1403, -0.2153, -0.1208, -0.2286,
          0.1560, -0.1556,  0.0391, -0.2733, -0.1478, -0.1936,  0.2071,  0.2269,
          0.1793, -0.0305,  0.1303, -0.0752,  0.0492, -0.0904, -0.0900,  0.1016,
         -0.2297]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
535000 特征值优化 tensor(1.0477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5476,  2.6231, -0.2712, -0.9142, -0.2383,  2.9507,  0.5542,  1.5947,
         -1.4016, -0.5761,  0.0150, -0.2893, -0.2217, -0.0759, -0.2272, -0.2140,
         -0.4644, -0.2123,  0.9098, -1.1570,  0.2844, -0.0564,  0.2039, -0.6581,
         -0.8233, -0.2348,  0.2218,  0.0659,  0.6294, -0.1811, -0.1137,  0.1683,
          0.2422, -0.1416, -0.1498, -0.5595,  0.6179, -0.4238, -0.2810,  0.3764,
          0.1248, -0.0393,  0.0469,  0.5834, -0.0059, -0.1375,  0.1670, -0.0960,
         -0.1076,  0.2282,  0.6313, -0.1078, -0.1723,  0.1507,  0.1074, -0.6563,
         -0.1339,  0.4802, -0.0402,  0.0677,  0.1560,  0.4115, -0.2112,  0.2073,
         -0.4850,  0.2442,  0.1758,  0.3632, -0.0430,  0.4231, -0.1683,  0.0535,
          0.1455,  0.3203, -0.0869, -0.0186,  0.0471, -0.0360,  0.0455,  0.1389,
         -0.0495,  0.2048,  0.0776, -0.0671,  0.0313, -0.0572, -0.0253,  0.4025,
         -0.2517,  0.1949,  0.1120,  0.0843, -0.1424, -0.0745, -0.2598, -0.1007,
          0.5821,  0.6617, -0.4904,  0.1219,  0.5151,  0.1464, -0.3718, -0.0171,
          0.0135,  0.3001, -0.3133, -0.2608,  0.1362, -0.0940,  0.0252, -0.1365,
          0.1268,  0.0676, -0.0418,  0.0506, -0.0158,  0.0585, -0.0440, -0.1673,
         -0.0745,  0.2286,  0.2225, -0.1874, -0.0481,  0.0184, -0.1690,  0.1751,
         -0.1862, -0.0207,  0.0567,  0.0408,  0.2454,  0.1581, -0.0936,  0.0499,
          0.0237,  0.2528, -0.0070,  0.1467, -0.1363, -0.2103, -0.1275, -0.2347,
          0.1507, -0.1552,  0.0382, -0.2708, -0.1476, -0.1829,  0.2085,  0.2360,
          0.1807, -0.0218,  0.1289, -0.0828,  0.0514, -0.0867, -0.0909,  0.1000,
         -0.2297]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
536000 特征值优化 tensor(1.0399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5615,  2.6167, -0.2793, -0.9052, -0.2282,  2.9504,  0.5617,  1.6237,
         -1.4065, -0.5829,  0.0229, -0.2838, -0.2205, -0.0678, -0.2540, -0.1823,
         -0.4588, -0.2129,  0.9164, -1.1627,  0.2888, -0.0409,  0.2183, -0.6534,
         -0.8265, -0.2468,  0.2230,  0.0662,  0.6110, -0.1852, -0.0998,  0.1728,
          0.2499, -0.1281, -0.1451, -0.5639,  0.6157, -0.4240, -0.2769,  0.3744,
          0.1159, -0.0423,  0.0473,  0.5886, -0.0063, -0.1377,  0.1703, -0.1003,
         -0.1308,  0.2273,  0.6366, -0.1048, -0.1602,  0.1513,  0.0959, -0.6523,
         -0.1412,  0.4777, -0.0419,  0.0721,  0.1699,  0.4121, -0.2252,  0.2101,
         -0.4746,  0.2423,  0.1793,  0.3596, -0.0391,  0.4173, -0.1758,  0.0584,
          0.1318,  0.3227, -0.0895, -0.0235,  0.0354, -0.0137,  0.0567,  0.1454,
         -0.0507,  0.2092,  0.0764, -0.0691,  0.0346, -0.0657, -0.0218,  0.3936,
         -0.2476,  0.2067,  0.1180,  0.0883, -0.1424, -0.0931, -0.2593, -0.1014,
          0.5898,  0.6614, -0.4917,  0.1179,  0.4883,  0.1440, -0.3788, -0.0248,
          0.0253,  0.3068, -0.3201, -0.2604,  0.1357, -0.0898,  0.0240, -0.1240,
          0.1222,  0.0665, -0.0439,  0.0521, -0.0075,  0.0561, -0.0391, -0.1654,
         -0.0809,  0.2409,  0.2149, -0.1882, -0.0523,  0.0142, -0.1745,  0.1782,
         -0.1919, -0.0169,  0.0492,  0.0325,  0.2484,  0.1636, -0.0869,  0.0609,
          0.0392,  0.2537, -0.0059,  0.1463, -0.1359, -0.2102, -0.1319, -0.2362,
          0.1481, -0.1554,  0.0384, -0.2662, -0.1426, -0.1953,  0.2036,  0.2249,
          0.1607, -0.0171,  0.1279, -0.0820,  0.0577, -0.0851, -0.0983,  0.1057,
         -0.2308]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
537000 特征值优化 tensor(1.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5562,  2.6414, -0.2669, -0.9124, -0.2539,  2.9373,  0.5611,  1.6070,
         -1.3996, -0.5764,  0.0247, -0.2939, -0.2167, -0.0537, -0.2219, -0.2024,
         -0.4563, -0.2024,  0.9158, -1.1681,  0.2878, -0.0537,  0.2045, -0.6695,
         -0.8178, -0.2568,  0.2186,  0.0718,  0.6100, -0.1826, -0.1014,  0.1866,
          0.2551, -0.1332, -0.1485, -0.5628,  0.6134, -0.4258, -0.2843,  0.3860,
          0.1239, -0.0372,  0.0466,  0.5954, -0.0039, -0.1381,  0.1609, -0.1041,
         -0.1162,  0.2246,  0.6371, -0.1070, -0.1547,  0.1549,  0.0927, -0.6583,
         -0.1391,  0.4849, -0.0394,  0.0653,  0.1681,  0.4140, -0.2236,  0.2134,
         -0.4814,  0.2419,  0.1865,  0.3607, -0.0310,  0.4174, -0.1694,  0.0512,
          0.1379,  0.3179, -0.0888, -0.0058,  0.0467, -0.0187,  0.0563,  0.1319,
         -0.0584,  0.2069,  0.0762, -0.0602,  0.0230, -0.0824, -0.0189,  0.3921,
         -0.2487,  0.1864,  0.1243,  0.0875, -0.1445, -0.0675, -0.2750, -0.1048,
          0.5900,  0.6736, -0.4884,  0.1316,  0.4997,  0.1444, -0.3849, -0.0296,
          0.0218,  0.3179, -0.3023, -0.2657,  0.1389, -0.0922,  0.0221, -0.1199,
          0.1339,  0.0597, -0.0416,  0.0556, -0.0074,  0.0677, -0.0428, -0.1665,
         -0.0823,  0.2327,  0.2109, -0.1900, -0.0493,  0.0176, -0.1626,  0.1772,
         -0.1842, -0.0208,  0.0538,  0.0387,  0.2493,  0.1591, -0.0886,  0.0508,
          0.0348,  0.2524, -0.0074,  0.1627, -0.1337, -0.2093, -0.1294, -0.2397,
          0.1498, -0.1641,  0.0264, -0.2662, -0.1506, -0.1986,  0.2099,  0.2331,
          0.1695, -0.0149,  0.1304, -0.0913,  0.0585, -0.0802, -0.0949,  0.1122,
         -0.2239]], device='cuda:0') tensor(0.2110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
538000 特征值优化 tensor(1.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5702,  2.6395, -0.2623, -0.9092, -0.2322,  2.9335,  0.5776,  1.5998,
         -1.4052, -0.5863,  0.0213, -0.2810, -0.2327, -0.0900, -0.2325, -0.1969,
         -0.4626, -0.2098,  0.9202, -1.1622,  0.2898, -0.0569,  0.1967, -0.6604,
         -0.8084, -0.2507,  0.2035,  0.0702,  0.6148, -0.1791, -0.1026,  0.1818,
          0.2434, -0.1295, -0.1326, -0.5659,  0.6049, -0.4268, -0.2930,  0.3830,
          0.1108, -0.0380,  0.0461,  0.5912, -0.0155, -0.1361,  0.1654, -0.1119,
         -0.1269,  0.2141,  0.6352, -0.0935, -0.1634,  0.1597,  0.1042, -0.6516,
         -0.1192,  0.4918, -0.0449,  0.0703,  0.1706,  0.4098, -0.2134,  0.2116,
         -0.4769,  0.2478,  0.1930,  0.3638, -0.0342,  0.4270, -0.1682,  0.0588,
          0.1341,  0.3126, -0.0993, -0.0187,  0.0447, -0.0159,  0.0609,  0.1424,
         -0.0611,  0.2060,  0.0829, -0.0697,  0.0444, -0.0624, -0.0197,  0.4008,
         -0.2396,  0.2086,  0.1187,  0.0829, -0.1345, -0.0845, -0.2668, -0.1045,
          0.5918,  0.6845, -0.4889,  0.1446,  0.5153,  0.1497, -0.3959, -0.0441,
          0.0163,  0.3037, -0.3013, -0.2681,  0.1443, -0.0919,  0.0252, -0.1260,
          0.1320,  0.0729, -0.0464,  0.0545, -0.0127,  0.0505, -0.0446, -0.1650,
         -0.0712,  0.2385,  0.2090, -0.1864, -0.0547,  0.0165, -0.1615,  0.1790,
         -0.1961, -0.0172,  0.0560,  0.0371,  0.2531,  0.1508, -0.0901,  0.0667,
          0.0203,  0.2435, -0.0105,  0.1266, -0.1375, -0.2005, -0.1312, -0.2399,
          0.1363, -0.1679,  0.0380, -0.2611, -0.1457, -0.1978,  0.2130,  0.2297,
          0.1690, -0.0165,  0.1319, -0.0837,  0.0589, -0.0841, -0.1014,  0.1103,
         -0.2255]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
539000 特征值优化 tensor(1.0245, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5532,  2.6343, -0.2607, -0.9186, -0.2429,  2.9274,  0.5670,  1.5977,
         -1.3938, -0.5784,  0.0134, -0.3074, -0.2246, -0.0696, -0.2219, -0.2237,
         -0.4548, -0.2009,  0.9158, -1.1676,  0.3035, -0.0617,  0.2067, -0.6606,
         -0.8168, -0.2402,  0.2356,  0.0731,  0.6136, -0.1794, -0.1055,  0.1828,
          0.2614, -0.1245, -0.1420, -0.5663,  0.6210, -0.4228, -0.2897,  0.3829,
          0.1031, -0.0380,  0.0473,  0.5907, -0.0091, -0.1369,  0.1609, -0.1057,
         -0.1072,  0.2213,  0.6366, -0.1001, -0.1519,  0.1501,  0.0984, -0.6548,
         -0.1445,  0.4872, -0.0318,  0.0622,  0.1678,  0.4119, -0.2114,  0.2137,
         -0.4885,  0.2510,  0.1835,  0.3609, -0.0355,  0.4201, -0.1626,  0.0477,
          0.1378,  0.3097, -0.0833, -0.0049,  0.0513, -0.0267,  0.0567,  0.1397,
         -0.0458,  0.1974,  0.0833, -0.0655,  0.0156, -0.0663, -0.0201,  0.4017,
         -0.2452,  0.1865,  0.1260,  0.0816, -0.1371, -0.0761, -0.2746, -0.1064,
          0.5812,  0.6655, -0.4788,  0.1339,  0.5014,  0.1397, -0.3777, -0.0203,
          0.0201,  0.3320, -0.3043, -0.2595,  0.1394, -0.0924,  0.0199, -0.1231,
          0.1301,  0.0528, -0.0492,  0.0613, -0.0124,  0.0569, -0.0340, -0.1629,
         -0.0743,  0.2287,  0.2194, -0.1937, -0.0540,  0.0163, -0.1778,  0.1718,
         -0.1910, -0.0123,  0.0567,  0.0303,  0.2453,  0.1631, -0.0897,  0.0525,
          0.0441,  0.2642, -0.0153,  0.1578, -0.1352, -0.2243, -0.1209, -0.2407,
          0.1496, -0.1605,  0.0241, -0.2759, -0.1545, -0.2019,  0.2058,  0.2291,
          0.1754, -0.0206,  0.1321, -0.0845,  0.0473, -0.0824, -0.0983,  0.1126,
         -0.2347]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
540000 特征值优化 tensor(1.0250, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5788,  2.6306, -0.2704, -0.9076, -0.2562,  2.9303,  0.5675,  1.6020,
         -1.3964, -0.5800,  0.0201, -0.3023, -0.2237, -0.0587, -0.2247, -0.2095,
         -0.4502, -0.1977,  0.9199, -1.1599,  0.2903, -0.0580,  0.2046, -0.6663,
         -0.8079, -0.2550,  0.2247,  0.0620,  0.6121, -0.1830, -0.1054,  0.1784,
          0.2499, -0.1373, -0.1534, -0.5607,  0.6186, -0.4320, -0.2829,  0.3905,
          0.1152, -0.0379,  0.0473,  0.5948, -0.0047, -0.1399,  0.1717, -0.0991,
         -0.1152,  0.2221,  0.6354, -0.0984, -0.1555,  0.1516,  0.1034, -0.6578,
         -0.1403,  0.4821, -0.0337,  0.0668,  0.1669,  0.4101, -0.2108,  0.2148,
         -0.4798,  0.2461,  0.1857,  0.3622, -0.0323,  0.4252, -0.1708,  0.0557,
          0.1317,  0.3124, -0.0909, -0.0185,  0.0456, -0.0247,  0.0564,  0.1384,
         -0.0577,  0.2080,  0.0843, -0.0608,  0.0191, -0.0813, -0.0235,  0.3947,
         -0.2533,  0.1944,  0.1204,  0.0840, -0.1412, -0.0644, -0.2705, -0.1021,
          0.5907,  0.6668, -0.4808,  0.1375,  0.4994,  0.1475, -0.3782, -0.0276,
          0.0171,  0.3139, -0.3030, -0.2652,  0.1406, -0.0914,  0.0215, -0.1253,
          0.1309,  0.0589, -0.0469,  0.0562, -0.0121,  0.0615, -0.0401, -0.1699,
         -0.0807,  0.2299,  0.2174, -0.1978, -0.0524,  0.0199, -0.1741,  0.1744,
         -0.1933, -0.0138,  0.0542,  0.0374,  0.2495,  0.1583, -0.0857,  0.0610,
          0.0312,  0.2625,  0.0057,  0.1696, -0.1305, -0.2159, -0.1262, -0.2399,
          0.1476, -0.1658,  0.0325, -0.2576, -0.1497, -0.2045,  0.2076,  0.2431,
          0.1659, -0.0132,  0.1292, -0.0896,  0.0566, -0.0798, -0.0859,  0.1022,
         -0.2229]], device='cuda:0') tensor(0.2258, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
541000 特征值优化 tensor(1.0266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5768,  2.6390, -0.2716, -0.9097, -0.2509,  2.9393,  0.5720,  1.6061,
         -1.4085, -0.5860,  0.0160, -0.2772, -0.2330, -0.0930, -0.2352, -0.1981,
         -0.4542, -0.2019,  0.9227, -1.1489,  0.2992, -0.0469,  0.1955, -0.6673,
         -0.8034, -0.2495,  0.2140,  0.0716,  0.6176, -0.1780, -0.1098,  0.1759,
          0.2337, -0.1303, -0.1405, -0.5645,  0.6079, -0.4325, -0.2859,  0.3829,
          0.1081, -0.0363,  0.0461,  0.5936, -0.0156, -0.1332,  0.1639, -0.1061,
         -0.1333,  0.2225,  0.6345, -0.0944, -0.1718,  0.1574,  0.1048, -0.6569,
         -0.1197,  0.4918, -0.0433,  0.0730,  0.1632,  0.4094, -0.2117,  0.2059,
         -0.4756,  0.2490,  0.1890,  0.3654, -0.0314,  0.4295, -0.1625,  0.0561,
          0.1374,  0.3133, -0.1038, -0.0213,  0.0392, -0.0113,  0.0547,  0.1450,
         -0.0624,  0.2064,  0.0815, -0.0745,  0.0388, -0.0646, -0.0198,  0.3991,
         -0.2426,  0.2054,  0.1209,  0.0843, -0.1371, -0.0853, -0.2694, -0.1041,
          0.5898,  0.6744, -0.4790,  0.1384,  0.5147,  0.1498, -0.3855, -0.0405,
          0.0187,  0.2935, -0.3082, -0.2692,  0.1320, -0.0913,  0.0215, -0.1294,
          0.1317,  0.0789, -0.0445,  0.0556, -0.0105,  0.0467, -0.0453, -0.1659,
         -0.0740,  0.2292,  0.2124, -0.1885, -0.0530,  0.0179, -0.1699,  0.1754,
         -0.2014, -0.0219,  0.0546,  0.0389,  0.2507,  0.1533, -0.0890,  0.0634,
          0.0157,  0.2592, -0.0054,  0.1316, -0.1364, -0.1955, -0.1328, -0.2467,
          0.1355, -0.1654,  0.0401, -0.2588, -0.1415, -0.2032,  0.2103,  0.2263,
          0.1721, -0.0179,  0.1328, -0.0826,  0.0606, -0.0825, -0.0970,  0.1084,
         -0.2287]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
542000 特征值优化 tensor(1.0268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.2969e-01,  2.6460e+00, -2.8825e-01, -9.0096e-01, -3.0880e-01,
          2.9452e+00,  5.9971e-01,  1.6067e+00, -1.3953e+00, -6.2088e-01,
          1.8379e-02, -3.1002e-01, -2.2520e-01, -9.0560e-02, -2.4993e-01,
         -2.4441e-01, -5.2037e-01, -1.7575e-01,  9.0932e-01, -1.1276e+00,
          2.7864e-01, -4.7794e-02,  2.1505e-01, -6.3669e-01, -8.0794e-01,
         -2.4403e-01,  2.0682e-01,  6.2445e-02,  6.2304e-01, -1.8591e-01,
         -1.2327e-01,  1.6110e-01,  2.3604e-01, -1.3022e-01, -1.3613e-01,
         -5.7152e-01,  6.2427e-01, -4.1466e-01, -2.7606e-01,  3.7866e-01,
          1.2290e-01, -4.0912e-02,  4.9708e-02,  5.9109e-01, -6.7183e-03,
         -1.3422e-01,  2.0116e-01, -1.0145e-01, -1.3796e-01,  2.1200e-01,
          6.4625e-01, -1.0384e-01, -1.7893e-01,  1.4696e-01,  1.1793e-01,
         -6.6290e-01, -1.3681e-01,  4.7463e-01, -2.6577e-02,  6.6345e-02,
          1.6360e-01,  4.0834e-01, -2.1890e-01,  2.0793e-01, -4.7506e-01,
          2.4292e-01,  1.9038e-01,  3.3923e-01, -1.7498e-02,  4.2385e-01,
         -1.5887e-01,  5.0326e-02,  1.3413e-01,  3.1057e-01, -1.1011e-01,
         -1.7634e-02,  4.3353e-02, -3.7745e-02,  5.1468e-02,  1.4834e-01,
         -4.9476e-02,  2.0696e-01,  8.5386e-02, -4.2635e-02,  1.9448e-02,
         -6.6093e-02, -1.5760e-02,  4.0054e-01, -2.5302e-01,  2.0314e-01,
          1.1854e-01,  6.9467e-02, -1.4043e-01, -8.5825e-02, -2.7586e-01,
         -9.4751e-02,  6.0347e-01,  6.5223e-01, -4.8620e-01,  1.3340e-01,
          4.9773e-01,  1.3361e-01, -3.3432e-01, -4.4839e-02, -5.8707e-03,
          2.9191e-01, -3.0731e-01, -2.6189e-01,  1.3047e-01, -7.8427e-02,
          2.1534e-02, -1.2210e-01,  1.2876e-01,  7.3143e-02, -4.8324e-02,
          5.5145e-02, -1.6669e-02,  5.9952e-02, -5.0964e-02, -1.7940e-01,
         -6.6729e-02,  2.3363e-01,  2.1104e-01, -2.1195e-01, -4.6689e-02,
          1.3111e-03, -1.6792e-01,  1.7709e-01, -2.0102e-01, -2.1059e-02,
          5.5790e-02,  4.7259e-02,  2.4363e-01,  1.7266e-01, -9.4722e-02,
          6.9011e-02,  1.3643e-02,  2.4292e-01, -1.1675e-02,  1.4102e-01,
         -1.3862e-01, -1.9247e-01, -1.2526e-01, -2.3459e-01,  1.5026e-01,
         -1.4330e-01,  5.3068e-02, -2.6263e-01, -1.5424e-01, -2.1114e-01,
          2.1250e-01,  2.2534e-01,  1.7973e-01, -1.7611e-02,  1.3419e-01,
         -8.4453e-02,  5.6766e-02, -9.3006e-02, -9.3359e-02,  8.9154e-02,
         -2.2270e-01]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
543000 特征值优化 tensor(1.0625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.1863e-01,  2.6430e+00, -2.8860e-01, -9.1816e-01, -3.2908e-01,
          2.9513e+00,  6.2571e-01,  1.6284e+00, -1.3711e+00, -6.3476e-01,
          3.8288e-02, -3.1355e-01, -2.3022e-01, -9.8495e-02, -2.4758e-01,
         -2.5120e-01, -5.2161e-01, -1.5975e-01,  9.3150e-01, -1.1036e+00,
          2.9046e-01, -4.3145e-02,  2.1376e-01, -6.2712e-01, -7.8723e-01,
         -2.2809e-01,  2.0406e-01,  5.6913e-02,  6.2359e-01, -1.7992e-01,
         -1.2434e-01,  1.6165e-01,  2.3711e-01, -1.2777e-01, -1.1166e-01,
         -5.7461e-01,  6.2642e-01, -4.1021e-01, -2.7463e-01,  3.8867e-01,
          1.2153e-01, -4.0174e-02,  4.8773e-02,  5.9735e-01, -1.1517e-02,
         -1.4808e-01,  2.2606e-01, -8.7951e-02, -1.5255e-01,  1.8020e-01,
          6.5956e-01, -1.0629e-01, -1.7301e-01,  1.3646e-01,  1.1859e-01,
         -6.5582e-01, -1.4177e-01,  4.8301e-01, -2.8521e-02,  5.9319e-02,
          1.6718e-01,  4.1164e-01, -2.0819e-01,  2.0204e-01, -4.6993e-01,
          2.4131e-01,  1.9633e-01,  3.2990e-01, -7.1603e-04,  4.3058e-01,
         -1.4560e-01,  4.4224e-02,  1.3679e-01,  3.2117e-01, -1.0396e-01,
         -2.8181e-02,  3.6686e-02, -2.9073e-02,  5.2999e-02,  1.4353e-01,
         -4.3853e-02,  2.0126e-01,  8.3091e-02, -4.3438e-02,  1.1006e-02,
         -5.9147e-02, -1.7353e-02,  3.9499e-01, -2.4154e-01,  2.3359e-01,
          1.2584e-01,  2.6244e-02, -1.3470e-01, -7.7013e-02, -2.8848e-01,
         -9.2526e-02,  6.1199e-01,  6.4373e-01, -4.7448e-01,  1.2812e-01,
          4.8128e-01,  1.3211e-01, -3.2151e-01, -5.9282e-02, -9.7261e-03,
          2.7975e-01, -2.8753e-01, -2.7572e-01,  1.4310e-01, -7.6908e-02,
          1.7651e-02, -1.2675e-01,  1.2876e-01,  7.2013e-02, -5.6900e-02,
          5.6499e-02, -1.4484e-02,  5.5507e-02, -4.7127e-02, -1.8037e-01,
         -6.7935e-02,  2.2887e-01,  2.0741e-01, -2.1657e-01, -4.9544e-02,
         -3.9906e-03, -1.7374e-01,  1.7354e-01, -2.0506e-01, -2.4828e-02,
          5.9918e-02,  4.4511e-02,  2.3895e-01,  1.6993e-01, -9.7437e-02,
          6.1258e-02, -3.0909e-04,  2.4015e-01, -1.1045e-02,  1.3989e-01,
         -1.5139e-01, -1.8892e-01, -1.3159e-01, -2.4143e-01,  1.6165e-01,
         -1.3795e-01,  6.2418e-02, -2.5315e-01, -1.5000e-01, -2.3415e-01,
          2.1496e-01,  2.2203e-01,  1.7917e-01, -9.4769e-03,  1.4254e-01,
         -8.3932e-02,  5.2796e-02, -8.5225e-02, -9.6851e-02,  8.2873e-02,
         -2.2386e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
544000 特征值优化 tensor(1.0522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5416,  2.6321, -0.3033, -0.9078, -0.3312,  2.9367,  0.6433,  1.6304,
         -1.3675, -0.6411,  0.0469, -0.3304, -0.2420, -0.1049, -0.2323, -0.2541,
         -0.5504, -0.1386,  0.9379, -1.1069,  0.2883, -0.0390,  0.2117, -0.6290,
         -0.7720, -0.2211,  0.2051,  0.0442,  0.6260, -0.1733, -0.1217,  0.1608,
          0.2347, -0.1358, -0.0987, -0.5734,  0.6310, -0.4110, -0.2555,  0.4018,
          0.1315, -0.0436,  0.0478,  0.5903, -0.0141, -0.1437,  0.2398, -0.0756,
         -0.1603,  0.1644,  0.6586, -0.1088, -0.1710,  0.1375,  0.1222, -0.6622,
         -0.1489,  0.4803, -0.0310,  0.0626,  0.1598,  0.4113, -0.1989,  0.2039,
         -0.4692,  0.2246,  0.1999,  0.3233,  0.0107,  0.4311, -0.1416,  0.0302,
          0.1341,  0.3237, -0.0841, -0.0361,  0.0447, -0.0297,  0.0361,  0.1334,
         -0.0364,  0.2062,  0.0796, -0.0458, -0.0033, -0.0544, -0.0263,  0.3973,
         -0.2709,  0.2383,  0.1289,  0.0219, -0.1259, -0.0744, -0.2794, -0.0863,
          0.6069,  0.6292, -0.4961,  0.0883,  0.5256,  0.1350, -0.3046, -0.0560,
         -0.0176,  0.2770, -0.2864, -0.2809,  0.1386, -0.0790,  0.0147, -0.1231,
          0.1329,  0.0678, -0.0607,  0.0675, -0.0247,  0.0509, -0.0404, -0.1781,
         -0.0689,  0.2309,  0.2027, -0.2089, -0.0446, -0.0043, -0.1707,  0.1782,
         -0.2057, -0.0147,  0.0630,  0.0354,  0.2338,  0.1832, -0.0907,  0.0731,
          0.0150,  0.2365, -0.0103,  0.1475, -0.1563, -0.1977, -0.1340, -0.2360,
          0.1472, -0.1331,  0.0549, -0.2525, -0.1375, -0.2252,  0.2183,  0.2353,
          0.1672,  0.0035,  0.1428, -0.0775,  0.0637, -0.0796, -0.1005,  0.0784,
         -0.2282]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
545000 特征值优化 tensor(1.0266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.3182e-01,  2.6149e+00, -2.9100e-01, -9.0433e-01, -3.5849e-01,
          2.9471e+00,  6.4021e-01,  1.6195e+00, -1.3311e+00, -6.5428e-01,
          4.8536e-02, -3.2170e-01, -2.3434e-01, -9.8422e-02, -2.3539e-01,
         -2.7732e-01, -5.3268e-01, -1.3369e-01,  9.3303e-01, -1.1040e+00,
          2.8570e-01, -4.4737e-02,  2.0726e-01, -6.2516e-01, -7.7407e-01,
         -2.2832e-01,  1.9642e-01,  6.0604e-02,  6.2600e-01, -1.7291e-01,
         -1.2953e-01,  1.7429e-01,  2.3882e-01, -1.2269e-01, -9.4218e-02,
         -5.7262e-01,  6.3142e-01, -4.0674e-01, -2.6716e-01,  4.0054e-01,
          1.3536e-01, -4.1879e-02,  4.8775e-02,  5.9090e-01, -2.1883e-02,
         -1.5076e-01,  2.2000e-01, -9.5495e-02, -1.4351e-01,  1.5615e-01,
          6.6774e-01, -1.0810e-01, -1.7731e-01,  1.3248e-01,  1.1706e-01,
         -6.5624e-01, -1.3946e-01,  4.8336e-01, -2.3099e-02,  5.5635e-02,
          1.6431e-01,  4.1093e-01, -1.9252e-01,  2.0135e-01, -4.7378e-01,
          2.3356e-01,  2.0179e-01,  3.2159e-01,  1.9338e-02,  4.3468e-01,
         -1.3833e-01,  3.0774e-02,  1.3926e-01,  3.2793e-01, -9.4659e-02,
         -1.8292e-02,  4.6935e-02, -3.1848e-02,  4.9606e-02,  1.4221e-01,
         -3.9112e-02,  2.0534e-01,  7.8460e-02, -5.1879e-02,  1.2779e-03,
         -6.7713e-02, -2.2516e-02,  4.0542e-01, -2.6149e-01,  2.2568e-01,
          1.2921e-01, -4.1041e-03, -1.2619e-01, -6.2677e-02, -2.7974e-01,
         -9.1890e-02,  6.0768e-01,  6.3274e-01, -4.6989e-01,  1.1962e-01,
          4.8082e-01,  1.3459e-01, -2.9587e-01, -7.6205e-02, -2.1094e-02,
          2.8882e-01, -2.7280e-01, -2.8251e-01,  1.3756e-01, -7.9100e-02,
          1.4698e-02, -1.2515e-01,  1.2930e-01,  7.7368e-02, -6.1370e-02,
          6.1478e-02, -1.9541e-02,  4.7156e-02, -5.5982e-02, -1.8049e-01,
         -6.8204e-02,  2.2792e-01,  2.1268e-01, -2.1049e-01, -3.9919e-02,
         -5.4702e-03, -1.6892e-01,  1.7714e-01, -2.0633e-01, -1.2540e-02,
          6.4342e-02,  4.0778e-02,  2.4052e-01,  1.7813e-01, -9.9120e-02,
          5.8827e-02, -3.4155e-03,  2.2981e-01, -2.4576e-02,  1.4596e-01,
         -1.4690e-01, -1.8409e-01, -1.4159e-01, -2.3517e-01,  1.5519e-01,
         -1.3594e-01,  6.6830e-02, -2.5063e-01, -1.4159e-01, -2.3995e-01,
          2.1713e-01,  2.1451e-01,  1.8379e-01, -1.2558e-02,  1.4534e-01,
         -7.3040e-02,  5.4717e-02, -8.0063e-02, -9.3091e-02,  8.5184e-02,
         -2.2637e-01]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
546000 特征值优化 tensor(1.0224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.4581e-01,  2.6032e+00, -2.9034e-01, -9.1283e-01, -3.2182e-01,
          2.9642e+00,  6.3864e-01,  1.6149e+00, -1.3333e+00, -6.4995e-01,
          4.7938e-02, -3.4130e-01, -2.2078e-01, -9.1005e-02, -2.2150e-01,
         -2.7750e-01, -5.0446e-01, -1.2159e-01,  9.4462e-01, -1.1105e+00,
          2.9296e-01, -5.0282e-02,  2.1684e-01, -6.0635e-01, -7.7391e-01,
         -2.3268e-01,  2.0789e-01,  7.3034e-02,  6.3378e-01, -1.7171e-01,
         -1.2169e-01,  1.7349e-01,  2.6001e-01, -1.4916e-01, -8.6721e-02,
         -5.7342e-01,  6.2370e-01, -4.0693e-01, -2.6167e-01,  3.9572e-01,
          1.3067e-01, -4.0107e-02,  4.8575e-02,  5.9224e-01, -2.6608e-02,
         -1.4373e-01,  2.2137e-01, -1.0663e-01, -1.5464e-01,  1.5526e-01,
          6.5479e-01, -1.2026e-01, -1.7472e-01,  1.4198e-01,  1.2541e-01,
         -6.4966e-01, -1.5383e-01,  4.8806e-01, -3.5214e-02,  6.5641e-02,
          1.8267e-01,  4.1947e-01, -2.0211e-01,  2.1510e-01, -4.7259e-01,
          2.2969e-01,  2.0001e-01,  3.0791e-01,  2.2298e-02,  4.2316e-01,
         -1.3728e-01,  4.6025e-02,  1.3792e-01,  3.2860e-01, -9.1640e-02,
         -2.1175e-02,  4.5202e-02, -2.4614e-02,  7.3686e-02,  1.4949e-01,
         -3.8641e-02,  1.9299e-01,  9.6024e-02, -4.3843e-02, -2.2559e-02,
         -5.3485e-02, -2.0685e-02,  4.0385e-01, -2.6599e-01,  2.4641e-01,
          1.3653e-01, -1.0602e-03, -1.2494e-01, -7.7106e-02, -2.8504e-01,
         -9.3469e-02,  6.1213e-01,  6.1903e-01, -4.6825e-01,  1.2735e-01,
          4.8078e-01,  1.2295e-01, -2.7876e-01, -6.1249e-02, -1.1693e-02,
          3.0000e-01, -2.8233e-01, -2.8834e-01,  1.3049e-01, -7.9004e-02,
          7.6614e-03, -1.1648e-01,  1.2657e-01,  5.4598e-02, -5.3126e-02,
          6.9150e-02, -1.3400e-02,  5.5948e-02, -3.2564e-02, -1.7797e-01,
         -6.1558e-02,  2.3909e-01,  2.0919e-01, -2.0852e-01, -4.7868e-02,
         -6.5735e-03, -1.6442e-01,  1.8824e-01, -2.1433e-01, -1.7533e-02,
          5.7302e-02,  3.2601e-02,  2.4214e-01,  1.8874e-01, -1.0087e-01,
          5.0051e-02,  8.7560e-03,  2.4009e-01, -2.5836e-02,  1.5397e-01,
         -1.4711e-01, -2.0313e-01, -1.3824e-01, -2.3171e-01,  1.6839e-01,
         -1.2882e-01,  5.2212e-02, -2.5852e-01, -1.5541e-01, -2.3764e-01,
          2.1108e-01,  2.1708e-01,  1.6065e-01, -1.6652e-04,  1.4654e-01,
         -8.8059e-02,  6.7689e-02, -7.9728e-02, -1.0403e-01,  8.2266e-02,
         -2.2454e-01]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
547000 特征值优化 tensor(1.0385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4981,  2.5977, -0.2897, -0.9106, -0.3197,  2.9615,  0.6606,  1.6416,
         -1.3411, -0.6408,  0.0482, -0.3424, -0.2184, -0.1004, -0.2296, -0.2718,
         -0.5417, -0.1234,  0.9387, -1.1169,  0.2812, -0.0674,  0.2106, -0.5997,
         -0.7655, -0.2286,  0.2015,  0.0730,  0.6343, -0.1671, -0.1294,  0.1684,
          0.2457, -0.1302, -0.0796, -0.5710,  0.6316, -0.4092, -0.2593,  0.3973,
          0.1342, -0.0432,  0.0477,  0.5830, -0.0278, -0.1501,  0.2201, -0.0873,
         -0.1390,  0.1553,  0.6570, -0.1235, -0.1615,  0.1322,  0.1042, -0.6578,
         -0.1437,  0.4815, -0.0401,  0.0606,  0.1710,  0.4166, -0.2016,  0.2050,
         -0.4738,  0.2325,  0.1926,  0.3120,  0.0172,  0.4247, -0.1400,  0.0431,
          0.1426,  0.3295, -0.0869, -0.0155,  0.0487, -0.0415,  0.0495,  0.1400,
         -0.0334,  0.1998,  0.0820, -0.0532, -0.0031, -0.0455, -0.0238,  0.4187,
         -0.2868,  0.2328,  0.1389, -0.0125, -0.1218, -0.0819, -0.2728, -0.0911,
          0.6040,  0.6109, -0.4947,  0.1104,  0.5099,  0.1350, -0.2818, -0.0591,
         -0.0147,  0.2912, -0.2630, -0.2866,  0.1351, -0.0836,  0.0132, -0.1215,
          0.1213,  0.0694, -0.0514,  0.0608, -0.0195,  0.0509, -0.0409, -0.1752,
         -0.0649,  0.2322,  0.2054, -0.2057, -0.0339, -0.0053, -0.1658,  0.1810,
         -0.2099, -0.0199,  0.0599,  0.0370,  0.2373,  0.1827, -0.0982,  0.0591,
          0.0036,  0.2214, -0.0177,  0.1456, -0.1457, -0.2029, -0.1300, -0.2283,
          0.1604, -0.1325,  0.0563, -0.2555, -0.1481, -0.2311,  0.2140,  0.2199,
          0.1738, -0.0091,  0.1434, -0.0758,  0.0537, -0.0812, -0.0959,  0.0860,
         -0.2334]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
548000 特征值优化 tensor(1.0220, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.2142e-01,  2.5997e+00, -2.9609e-01, -9.1719e-01, -3.1452e-01,
          2.9531e+00,  6.5840e-01,  1.6438e+00, -1.3230e+00, -6.5121e-01,
          4.7695e-02, -3.4265e-01, -2.1997e-01, -8.0964e-02, -2.2716e-01,
         -2.7996e-01, -5.3828e-01, -1.2233e-01,  9.4010e-01, -1.1209e+00,
          2.8258e-01, -7.1045e-02,  2.1535e-01, -5.9373e-01, -7.6323e-01,
         -2.2940e-01,  2.0863e-01,  6.8598e-02,  6.2816e-01, -1.6906e-01,
         -1.2931e-01,  1.6855e-01,  2.5015e-01, -1.4677e-01, -7.2314e-02,
         -5.7306e-01,  6.2951e-01, -4.1468e-01, -2.6174e-01,  3.9802e-01,
          1.3410e-01, -4.1733e-02,  5.0265e-02,  5.8887e-01, -2.6830e-02,
         -1.5748e-01,  2.3524e-01, -9.2923e-02, -1.3942e-01,  1.4425e-01,
          6.6364e-01, -1.1613e-01, -1.7351e-01,  1.2965e-01,  1.1697e-01,
         -6.6898e-01, -1.5430e-01,  4.7155e-01, -3.3493e-02,  5.5871e-02,
          1.7938e-01,  4.1598e-01, -2.0045e-01,  2.0480e-01, -4.7331e-01,
          2.3392e-01,  1.9565e-01,  3.1203e-01,  1.8939e-02,  4.2988e-01,
         -1.4065e-01,  5.4873e-02,  1.3840e-01,  3.1885e-01, -8.3615e-02,
         -1.4248e-02,  3.7954e-02, -3.4687e-02,  5.0588e-02,  1.4922e-01,
         -3.5178e-02,  1.9944e-01,  8.7330e-02, -4.3672e-02, -2.6927e-03,
         -5.9735e-02, -1.9920e-02,  4.0150e-01, -2.7348e-01,  2.3832e-01,
          1.3502e-01, -1.8662e-02, -1.1990e-01, -6.7445e-02, -2.8623e-01,
         -8.9861e-02,  6.1365e-01,  6.2953e-01, -4.9556e-01,  1.0822e-01,
          5.0967e-01,  1.3556e-01, -2.7981e-01, -6.1371e-02, -2.1577e-02,
          2.9546e-01, -2.7351e-01, -2.8933e-01,  1.3902e-01, -7.9354e-02,
          1.2511e-02, -1.2001e-01,  1.1983e-01,  5.3455e-02, -6.1872e-02,
          5.7288e-02, -1.6119e-02,  5.9830e-02, -4.2315e-02, -1.7352e-01,
         -6.5301e-02,  2.3123e-01,  2.1298e-01, -2.0653e-01, -4.3838e-02,
         -1.0744e-03, -1.6713e-01,  1.7548e-01, -2.0453e-01, -2.5056e-02,
          5.8044e-02,  4.5108e-02,  2.4009e-01,  1.7305e-01, -9.9738e-02,
          5.4069e-02,  1.9655e-03,  2.2825e-01, -1.9141e-02,  1.6379e-01,
         -1.4744e-01, -1.9551e-01, -1.3612e-01, -2.3106e-01,  1.6590e-01,
         -1.2186e-01,  5.5499e-02, -2.5788e-01, -1.5142e-01, -2.3800e-01,
          2.1077e-01,  2.2367e-01,  1.6548e-01, -6.4006e-03,  1.4323e-01,
         -8.0497e-02,  5.5910e-02, -8.6406e-02, -8.9954e-02,  7.3142e-02,
         -2.2986e-01]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
549000 特征值优化 tensor(1.0267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.3054e-01,  2.5875e+00, -2.8593e-01, -9.0411e-01, -2.9492e-01,
          2.9549e+00,  6.5812e-01,  1.6397e+00, -1.3451e+00, -6.5034e-01,
          4.8392e-02, -3.3455e-01, -2.1298e-01, -8.6541e-02, -2.4163e-01,
         -2.9506e-01, -5.3162e-01, -1.2393e-01,  9.3919e-01, -1.1096e+00,
          2.8964e-01, -6.7337e-02,  2.1352e-01, -5.8019e-01, -7.6547e-01,
         -2.2671e-01,  1.9971e-01,  6.8108e-02,  6.3740e-01, -1.6882e-01,
         -1.2890e-01,  1.6995e-01,  2.3195e-01, -1.3805e-01, -6.9768e-02,
         -5.7619e-01,  6.3306e-01, -4.1224e-01, -2.6200e-01,  3.9996e-01,
          1.3195e-01, -4.2436e-02,  5.1071e-02,  5.9497e-01, -3.1623e-02,
         -1.5490e-01,  2.2084e-01, -1.0182e-01, -1.3817e-01,  1.4607e-01,
          6.6077e-01, -1.2410e-01, -1.7860e-01,  1.3831e-01,  1.1771e-01,
         -6.6655e-01, -1.4911e-01,  4.7381e-01, -3.9489e-02,  6.6134e-02,
          1.6997e-01,  4.1751e-01, -2.0374e-01,  2.0169e-01, -4.7405e-01,
          2.4032e-01,  1.9137e-01,  3.1346e-01,  2.2561e-02,  4.3088e-01,
         -1.3730e-01,  5.3331e-02,  1.3825e-01,  3.2321e-01, -9.2038e-02,
         -2.0283e-02,  4.6546e-02, -3.3234e-02,  4.9371e-02,  1.4431e-01,
         -4.4807e-02,  2.0134e-01,  8.8321e-02, -4.9792e-02, -4.3273e-03,
         -5.2579e-02, -2.0420e-02,  4.0004e-01, -2.7724e-01,  2.1913e-01,
          1.3965e-01, -1.1162e-02, -1.2257e-01, -7.5213e-02, -2.8050e-01,
         -9.3895e-02,  6.1666e-01,  6.1253e-01, -4.9106e-01,  1.1931e-01,
          4.9043e-01,  1.4283e-01, -2.7253e-01, -6.8843e-02, -2.3927e-02,
          2.7357e-01, -2.7323e-01, -2.9012e-01,  1.2622e-01, -8.0250e-02,
          1.2457e-02, -1.1717e-01,  1.1044e-01,  7.0832e-02, -4.8737e-02,
          6.0458e-02, -1.1190e-02,  5.5257e-02, -4.7300e-02, -1.6834e-01,
         -6.0968e-02,  2.2884e-01,  2.1273e-01, -1.9991e-01, -3.8446e-02,
         -3.3871e-03, -1.6148e-01,  1.8206e-01, -2.1682e-01, -1.9552e-02,
          5.6987e-02,  4.5935e-02,  2.4444e-01,  1.7998e-01, -1.0347e-01,
          5.5919e-02, -1.1413e-03,  2.3192e-01, -1.4860e-02,  1.4743e-01,
         -1.4342e-01, -1.9996e-01, -1.4118e-01, -2.2944e-01,  1.6572e-01,
         -1.3152e-01,  6.1054e-02, -2.5923e-01, -1.4652e-01, -2.3167e-01,
          2.1977e-01,  2.2042e-01,  1.7344e-01, -5.0532e-03,  1.4287e-01,
         -7.1213e-02,  6.3510e-02, -8.6321e-02, -9.7463e-02,  8.4865e-02,
         -2.2155e-01]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
550000 特征值优化 tensor(1.0237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.9247e-01,  2.5817e+00, -2.9113e-01, -9.1150e-01, -3.0236e-01,
          2.9628e+00,  6.7145e-01,  1.6444e+00, -1.3192e+00, -6.4735e-01,
          4.5805e-02, -3.4990e-01, -2.2188e-01, -8.8641e-02, -2.2966e-01,
         -2.7955e-01, -5.5087e-01, -1.1807e-01,  9.4269e-01, -1.1256e+00,
          2.8211e-01, -7.1994e-02,  2.1249e-01, -5.7928e-01, -7.6206e-01,
         -2.2474e-01,  2.0455e-01,  7.3199e-02,  6.2934e-01, -1.6554e-01,
         -1.3381e-01,  1.6581e-01,  2.5460e-01, -1.2952e-01, -7.5283e-02,
         -5.7240e-01,  6.2681e-01, -4.2038e-01, -2.6090e-01,  4.0117e-01,
          1.3234e-01, -4.2112e-02,  5.1412e-02,  5.9552e-01, -2.8045e-02,
         -1.5045e-01,  2.3471e-01, -8.8697e-02, -1.3602e-01,  1.4349e-01,
          6.6526e-01, -1.1502e-01, -1.5511e-01,  1.2706e-01,  1.0468e-01,
         -6.5298e-01, -1.5946e-01,  4.8694e-01, -3.1525e-02,  5.3866e-02,
          1.7443e-01,  4.1568e-01, -2.0714e-01,  2.0680e-01, -4.7606e-01,
          2.3581e-01,  1.9025e-01,  3.1231e-01,  1.7166e-02,  4.2412e-01,
         -1.4070e-01,  5.1892e-02,  1.4112e-01,  3.1811e-01, -8.8117e-02,
         -8.2204e-03,  4.8291e-02, -3.7416e-02,  5.5697e-02,  1.3588e-01,
         -3.6077e-02,  1.9980e-01,  7.8077e-02, -4.6256e-02, -1.5009e-02,
         -4.4446e-02, -1.8469e-02,  4.0433e-01, -2.8514e-01,  2.3366e-01,
          1.3483e-01, -9.4978e-03, -1.2405e-01, -7.2089e-02, -2.8344e-01,
         -9.2538e-02,  6.1116e-01,  6.1232e-01, -5.0731e-01,  1.1401e-01,
          4.8720e-01,  1.3156e-01, -2.8616e-01, -5.0183e-02, -9.1340e-03,
          2.9043e-01, -2.6662e-01, -2.8135e-01,  1.3434e-01, -7.9324e-02,
          1.1115e-02, -1.1212e-01,  1.2381e-01,  5.4089e-02, -5.7876e-02,
          6.4061e-02, -1.3281e-02,  5.8559e-02, -3.5362e-02, -1.7879e-01,
         -6.1364e-02,  2.3310e-01,  2.1298e-01, -2.0539e-01, -3.5967e-02,
         -5.6680e-03, -1.7093e-01,  1.7270e-01, -2.0538e-01, -2.6297e-02,
          5.9333e-02,  4.1068e-02,  2.3919e-01,  1.8412e-01, -1.0366e-01,
          4.3100e-02,  1.1007e-02,  2.3084e-01, -3.2840e-02,  1.5914e-01,
         -1.4041e-01, -1.9096e-01, -1.4081e-01, -2.3542e-01,  1.6887e-01,
         -1.3192e-01,  5.3866e-02, -2.6240e-01, -1.4842e-01, -2.3186e-01,
          2.0961e-01,  2.1298e-01,  1.6779e-01, -1.2242e-03,  1.4348e-01,
         -7.7156e-02,  5.3903e-02, -8.5270e-02, -8.6976e-02,  8.0350e-02,
         -2.3228e-01]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
551000 特征值优化 tensor(1.0243, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5050,  2.5917, -0.2871, -0.9117, -0.2925,  2.9458,  0.6842,  1.6452,
         -1.3337, -0.6543,  0.0423, -0.3318, -0.2173, -0.0818, -0.2323, -0.2917,
         -0.5455, -0.1148,  0.9322, -1.1140,  0.2876, -0.0760,  0.2126, -0.5778,
         -0.7619, -0.2282,  0.2058,  0.0727,  0.6341, -0.1684, -0.1305,  0.1655,
          0.2458, -0.1389, -0.0621, -0.5796,  0.6344, -0.4164, -0.2596,  0.3981,
          0.1304, -0.0425,  0.0520,  0.5924, -0.0277, -0.1538,  0.2322, -0.1046,
         -0.1386,  0.1400,  0.6658, -0.1160, -0.1655,  0.1277,  0.1133, -0.6739,
         -0.1506,  0.4731, -0.0369,  0.0600,  0.1729,  0.4156, -0.2070,  0.2060,
         -0.4747,  0.2389,  0.1893,  0.3074,  0.0240,  0.4265, -0.1363,  0.0575,
          0.1380,  0.3199, -0.0894, -0.0140,  0.0395, -0.0268,  0.0494,  0.1453,
         -0.0397,  0.2000,  0.0841, -0.0484, -0.0032, -0.0611, -0.0207,  0.3962,
         -0.2726,  0.2192,  0.1404, -0.0166, -0.1211, -0.0624, -0.2817, -0.0944,
          0.6188,  0.6177, -0.5015,  0.1236,  0.4945,  0.1374, -0.2712, -0.0632,
         -0.0184,  0.2850, -0.2697, -0.2892,  0.1391, -0.0769,  0.0144, -0.1186,
          0.1146,  0.0616, -0.0570,  0.0541, -0.0121,  0.0607, -0.0439, -0.1675,
         -0.0604,  0.2333,  0.2127, -0.2045, -0.0415, -0.0074, -0.1666,  0.1786,
         -0.2082, -0.0226,  0.0579,  0.0442,  0.2431,  0.1783, -0.1039,  0.0527,
          0.0058,  0.2302, -0.0213,  0.1571, -0.1423, -0.1855, -0.1429, -0.2319,
          0.1624, -0.1225,  0.0596, -0.2595, -0.1468, -0.2373,  0.2159,  0.2225,
          0.1665, -0.0145,  0.1448, -0.0764,  0.0550, -0.0846, -0.0872,  0.0754,
         -0.2286]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
552000 特征值优化 tensor(1.0206, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4893,  2.5987, -0.2871, -0.9144, -0.2852,  2.9654,  0.6852,  1.6455,
         -1.3285, -0.6485,  0.0549, -0.3597, -0.2122, -0.0801, -0.2034, -0.2728,
         -0.5690, -0.1116,  0.9463, -1.1209,  0.2875, -0.0750,  0.2232, -0.5696,
         -0.7621, -0.2232,  0.2108,  0.0802,  0.6326, -0.1618, -0.1434,  0.1568,
          0.2631, -0.1530, -0.0651, -0.5688,  0.6295, -0.4203, -0.2554,  0.4002,
          0.1399, -0.0429,  0.0514,  0.5879, -0.0331, -0.1585,  0.2435, -0.0803,
         -0.1349,  0.1281,  0.6622, -0.1101, -0.1585,  0.1288,  0.1138, -0.6538,
         -0.1719,  0.4860, -0.0306,  0.0575,  0.1806,  0.4191, -0.1988,  0.2111,
         -0.4723,  0.2303,  0.1883,  0.3114,  0.0162,  0.4273, -0.1496,  0.0481,
          0.1400,  0.3174, -0.0826, -0.0217,  0.0449, -0.0342,  0.0368,  0.1421,
         -0.0324,  0.1981,  0.0812, -0.0550, -0.0107, -0.0478, -0.0200,  0.4009,
         -0.2697,  0.2531,  0.1353, -0.0168, -0.1157, -0.0597, -0.2788, -0.0949,
          0.6127,  0.6022, -0.5225,  0.1001,  0.5177,  0.1332, -0.2767, -0.0432,
         -0.0115,  0.2849, -0.2653, -0.2902,  0.1303, -0.0799,  0.0054, -0.1227,
          0.1209,  0.0498, -0.0584,  0.0555, -0.0128,  0.0575, -0.0262, -0.1742,
         -0.0577,  0.2333,  0.2087, -0.2054, -0.0391, -0.0033, -0.1651,  0.1753,
         -0.1973, -0.0368,  0.0584,  0.0508,  0.2383,  0.1797, -0.1019,  0.0395,
          0.0084,  0.2340, -0.0136,  0.1550, -0.1545, -0.1997, -0.1294, -0.2328,
          0.1657, -0.1298,  0.0487, -0.2580, -0.1467, -0.2332,  0.2109,  0.2309,
          0.1672, -0.0135,  0.1437, -0.0907,  0.0606, -0.0913, -0.0967,  0.0671,
         -0.2309]], device='cuda:0') tensor(0.2034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
553000 特征值优化 tensor(1.0175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5101,  2.5797, -0.2856, -0.9177, -0.2613,  2.9654,  0.6893,  1.6511,
         -1.3250, -0.6551,  0.0393, -0.3446, -0.2228, -0.1011, -0.2303, -0.3022,
         -0.5524, -0.1113,  0.9494, -1.1128,  0.2872, -0.0792,  0.2200, -0.5787,
         -0.7646, -0.2175,  0.2132,  0.0652,  0.6274, -0.1654, -0.1344,  0.1701,
          0.2429, -0.1262, -0.0650, -0.5696,  0.6276, -0.4182, -0.2559,  0.4083,
          0.1376, -0.0400,  0.0488,  0.5904, -0.0332, -0.1506,  0.2296, -0.0926,
         -0.1224,  0.1303,  0.6616, -0.1112, -0.1541,  0.1258,  0.0961, -0.6466,
         -0.1608,  0.4934, -0.0289,  0.0593,  0.1734,  0.4187, -0.1976,  0.1998,
         -0.4781,  0.2505,  0.1821,  0.3107,  0.0147,  0.4266, -0.1362,  0.0508,
          0.1409,  0.3216, -0.0792, -0.0087,  0.0574, -0.0478,  0.0515,  0.1324,
         -0.0441,  0.2020,  0.0678, -0.0606, -0.0061, -0.0349, -0.0208,  0.3951,
         -0.2830,  0.2209,  0.1292, -0.0191, -0.1191, -0.0694, -0.2864, -0.0940,
          0.6183,  0.6158, -0.5153,  0.1115,  0.4877,  0.1363, -0.2815, -0.0500,
         -0.0063,  0.2887, -0.2532, -0.2811,  0.1306, -0.0797,  0.0140, -0.1277,
          0.1226,  0.0597, -0.0616,  0.0597, -0.0243,  0.0423, -0.0317, -0.1807,
         -0.0614,  0.2257,  0.2147, -0.1987, -0.0319, -0.0062, -0.1715,  0.1844,
         -0.2059, -0.0159,  0.0625,  0.0425,  0.2366,  0.1773, -0.1011,  0.0418,
         -0.0093,  0.2329, -0.0181,  0.1560, -0.1288, -0.1920, -0.1455, -0.2414,
          0.1662, -0.1424,  0.0574, -0.2520, -0.1398, -0.2300,  0.2266,  0.2118,
          0.1778,  0.0059,  0.1425, -0.0743,  0.0606, -0.0881, -0.0878,  0.0942,
         -0.2341]], device='cuda:0') tensor(0.2237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
554000 特征值优化 tensor(1.0152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.1128e-01,  2.5905e+00, -2.9370e-01, -9.1500e-01, -2.5853e-01,
          2.9428e+00,  7.0192e-01,  1.6533e+00, -1.3362e+00, -6.5357e-01,
          4.2039e-02, -3.3544e-01, -2.0575e-01, -8.0588e-02, -2.3255e-01,
         -2.6418e-01, -5.2495e-01, -1.2145e-01,  9.4986e-01, -1.1026e+00,
          3.0069e-01, -7.4666e-02,  2.1667e-01, -5.6913e-01, -7.5853e-01,
         -2.2937e-01,  2.0178e-01,  5.5579e-02,  6.2840e-01, -1.6621e-01,
         -1.2730e-01,  1.6696e-01,  2.4244e-01, -1.4859e-01, -6.3172e-02,
         -5.7896e-01,  6.2222e-01, -4.0554e-01, -2.7648e-01,  3.9182e-01,
          1.2636e-01, -4.1149e-02,  5.0037e-02,  5.9417e-01, -3.4218e-02,
         -1.4569e-01,  2.3846e-01, -1.1564e-01, -1.5492e-01,  1.3454e-01,
          6.6486e-01, -1.2089e-01, -1.5827e-01,  1.3714e-01,  1.1533e-01,
         -6.6676e-01, -1.5438e-01,  4.7437e-01, -3.5051e-02,  6.1273e-02,
          1.7777e-01,  4.1951e-01, -2.1020e-01,  2.1154e-01, -4.6920e-01,
          2.3637e-01,  1.9422e-01,  3.0979e-01,  2.7949e-02,  4.3030e-01,
         -1.4071e-01,  6.8849e-02,  1.3390e-01,  3.2434e-01, -1.0634e-01,
         -3.5591e-02,  2.7188e-02, -1.6515e-02,  7.2230e-02,  1.5115e-01,
         -4.1208e-02,  1.9466e-01,  9.1237e-02, -3.5108e-02,  2.2430e-03,
         -5.0895e-02, -1.6616e-02,  3.8809e-01, -2.6181e-01,  2.4669e-01,
          1.3211e-01, -3.2028e-03, -1.2030e-01, -7.8021e-02, -2.8864e-01,
         -9.0962e-02,  6.2437e-01,  6.1537e-01, -4.8743e-01,  1.3550e-01,
          4.7722e-01,  1.3820e-01, -2.7482e-01, -6.3470e-02, -2.1063e-02,
          2.7524e-01, -2.8445e-01, -2.9023e-01,  1.3839e-01, -7.5408e-02,
          1.1218e-02, -1.1363e-01,  1.2418e-01,  5.8904e-02, -5.4235e-02,
          5.7673e-02, -5.0902e-03,  6.4073e-02, -4.2648e-02, -1.8468e-01,
         -5.6422e-02,  2.3186e-01,  2.1718e-01, -2.1060e-01, -4.7775e-02,
         -7.4887e-03, -1.6369e-01,  1.7532e-01, -2.1200e-01, -3.5248e-02,
          5.7726e-02,  5.0469e-02,  2.4548e-01,  1.7135e-01, -1.0507e-01,
          5.9095e-02,  3.9777e-03,  2.3260e-01, -2.3316e-02,  1.4193e-01,
         -1.5756e-01, -1.8613e-01, -1.4903e-01, -2.3638e-01,  1.6765e-01,
         -1.1960e-01,  6.6298e-02, -2.5831e-01, -1.4813e-01, -2.3911e-01,
          2.2130e-01,  2.3045e-01,  1.5618e-01, -6.3928e-03,  1.4994e-01,
         -7.1595e-02,  5.4298e-02, -9.0899e-02, -9.6633e-02,  7.7753e-02,
         -2.2534e-01]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
555000 特征值优化 tensor(1.0370, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8794e-01,  2.5907e+00, -2.9221e-01, -9.0556e-01, -2.9021e-01,
          2.9486e+00,  7.0687e-01,  1.6448e+00, -1.3326e+00, -6.5371e-01,
          4.5768e-02, -3.2441e-01, -2.1138e-01, -8.9627e-02, -2.2698e-01,
         -2.9972e-01, -5.4329e-01, -1.1241e-01,  9.3532e-01, -1.1224e+00,
          2.9411e-01, -8.0635e-02,  2.0182e-01, -5.8558e-01, -7.5723e-01,
         -2.2529e-01,  1.9955e-01,  6.8990e-02,  6.2790e-01, -1.6628e-01,
         -1.2114e-01,  1.7842e-01,  2.4707e-01, -1.3123e-01, -5.5217e-02,
         -5.8115e-01,  6.3134e-01, -4.1544e-01, -2.6486e-01,  4.0396e-01,
          1.3935e-01, -4.1750e-02,  5.0745e-02,  5.9603e-01, -3.1488e-02,
         -1.5157e-01,  2.2558e-01, -1.1280e-01, -1.3045e-01,  1.3218e-01,
          6.6085e-01, -9.6919e-02, -1.6154e-01,  1.3044e-01,  1.1235e-01,
         -6.6350e-01, -1.5463e-01,  4.7693e-01, -3.7430e-02,  6.7399e-02,
          1.7453e-01,  4.1797e-01, -1.9932e-01,  1.9941e-01, -4.7632e-01,
          2.4177e-01,  1.8679e-01,  3.0454e-01,  3.2952e-02,  4.2804e-01,
         -1.3973e-01,  6.1264e-02,  1.3682e-01,  3.2096e-01, -9.8072e-02,
         -8.0867e-03,  5.7693e-02, -3.0688e-02,  6.5214e-02,  1.4032e-01,
         -4.2604e-02,  2.0459e-01,  7.5863e-02, -5.4504e-02,  1.4407e-04,
         -5.5647e-02, -2.1124e-02,  3.9931e-01, -2.7174e-01,  2.2527e-01,
          1.4234e-01, -1.6305e-02, -1.2338e-01, -7.3412e-02, -2.8737e-01,
         -9.0423e-02,  6.2152e-01,  6.0465e-01, -4.9960e-01,  1.2767e-01,
          4.8673e-01,  1.4682e-01, -2.8409e-01, -6.7642e-02, -1.5501e-02,
          2.8026e-01, -2.6409e-01, -2.9568e-01,  1.2841e-01, -7.8571e-02,
          1.1934e-02, -1.1948e-01,  1.2073e-01,  6.2396e-02, -5.4646e-02,
          5.3077e-02, -1.6597e-02,  5.4053e-02, -3.4843e-02, -1.6897e-01,
         -6.3586e-02,  2.3012e-01,  2.1425e-01, -2.0246e-01, -4.3722e-02,
         -3.7661e-03, -1.6359e-01,  1.7585e-01, -2.1165e-01, -2.1279e-02,
          5.5557e-02,  4.5921e-02,  2.4427e-01,  1.6841e-01, -9.3194e-02,
          5.4789e-02,  6.3956e-04,  2.2463e-01, -2.8438e-02,  1.4631e-01,
         -1.3231e-01, -1.8725e-01, -1.3720e-01, -2.3181e-01,  1.6532e-01,
         -1.3652e-01,  5.7752e-02, -2.6058e-01, -1.5209e-01, -2.3477e-01,
          2.1979e-01,  2.1851e-01,  1.6646e-01,  2.8895e-04,  1.3714e-01,
         -7.2943e-02,  6.4128e-02, -8.9224e-02, -9.6517e-02,  8.2962e-02,
         -2.2802e-01]], device='cuda:0') tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
556000 特征值优化 tensor(1.0161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.2121e-01,  2.6020e+00, -2.9214e-01, -9.1751e-01, -2.7549e-01,
          2.9418e+00,  6.9322e-01,  1.6530e+00, -1.3210e+00, -6.5431e-01,
          4.6172e-02, -3.3180e-01, -2.1524e-01, -8.6449e-02, -2.1669e-01,
         -3.0007e-01, -5.5835e-01, -1.0751e-01,  9.4013e-01, -1.1208e+00,
          2.9421e-01, -7.8904e-02,  2.1188e-01, -5.7890e-01, -7.5069e-01,
         -2.1772e-01,  1.9742e-01,  6.9635e-02,  6.2269e-01, -1.6347e-01,
         -1.3336e-01,  1.6842e-01,  2.5141e-01, -1.3312e-01, -6.0534e-02,
         -5.7730e-01,  6.3151e-01, -4.1783e-01, -2.6809e-01,  4.0168e-01,
          1.4173e-01, -4.1929e-02,  5.1162e-02,  5.8544e-01, -3.1401e-02,
         -1.5465e-01,  2.3907e-01, -9.4789e-02, -1.2171e-01,  1.2855e-01,
          6.6366e-01, -1.0640e-01, -1.5960e-01,  1.2825e-01,  1.0635e-01,
         -6.5333e-01, -1.7275e-01,  4.7747e-01, -2.7488e-02,  5.6884e-02,
          1.6587e-01,  4.1933e-01, -1.9341e-01,  1.9743e-01, -4.7797e-01,
          2.4610e-01,  1.8264e-01,  2.9819e-01,  2.7844e-02,  4.3303e-01,
         -1.3729e-01,  5.7049e-02,  1.4408e-01,  3.1723e-01, -7.8116e-02,
         -4.4356e-03,  5.3830e-02, -4.5843e-02,  4.9713e-02,  1.4168e-01,
         -4.0585e-02,  2.0428e-01,  7.5606e-02, -5.5940e-02,  4.3717e-03,
         -4.4144e-02, -2.0574e-02,  3.8931e-01, -2.8241e-01,  2.1346e-01,
          1.3343e-01, -1.3629e-02, -1.1937e-01, -6.6860e-02, -2.7943e-01,
         -9.4682e-02,  6.2092e-01,  6.1114e-01, -5.2257e-01,  1.1153e-01,
          4.9092e-01,  1.3522e-01, -2.8221e-01, -5.4023e-02, -2.0309e-02,
          2.9113e-01, -2.6016e-01, -2.8367e-01,  1.4125e-01, -8.0549e-02,
          1.3285e-02, -1.2050e-01,  1.1054e-01,  4.7773e-02, -7.3585e-02,
          5.1081e-02, -2.1057e-02,  4.2772e-02, -3.1965e-02, -1.7900e-01,
         -6.7446e-02,  2.2627e-01,  2.2263e-01, -2.0717e-01, -3.8468e-02,
         -1.9127e-03, -1.6125e-01,  1.7884e-01, -1.9637e-01, -2.9269e-02,
          5.9710e-02,  5.9185e-02,  2.4262e-01,  1.6837e-01, -1.0530e-01,
          4.7695e-02, -5.2738e-03,  2.3176e-01, -1.5557e-02,  1.6040e-01,
         -1.4004e-01, -1.9101e-01, -1.4563e-01, -2.3612e-01,  1.7389e-01,
         -1.3482e-01,  5.1889e-02, -2.5890e-01, -1.4895e-01, -2.3319e-01,
          2.2667e-01,  2.1841e-01,  1.7368e-01, -7.7298e-03,  1.3622e-01,
         -7.1087e-02,  4.9433e-02, -9.1157e-02, -8.2660e-02,  7.9778e-02,
         -2.3551e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
557000 特征值优化 tensor(1.0246, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4780,  2.5892, -0.2820, -0.9106, -0.2937,  2.9561,  0.7066,  1.6590,
         -1.3363, -0.6548,  0.0441, -0.3379, -0.2093, -0.0827, -0.2216, -0.2844,
         -0.5535, -0.1080,  0.9305, -1.1158,  0.2868, -0.0891,  0.2173, -0.5736,
         -0.7528, -0.2312,  0.2047,  0.0765,  0.6212, -0.1654, -0.1242,  0.1692,
          0.2539, -0.1425, -0.0590, -0.5842,  0.6283, -0.4190, -0.2645,  0.4001,
          0.1363, -0.0431,  0.0515,  0.5948, -0.0307, -0.1507,  0.2354, -0.1066,
         -0.1325,  0.1310,  0.6631, -0.1040, -0.1540,  0.1296,  0.1098, -0.6646,
         -0.1650,  0.4688, -0.0305,  0.0661,  0.1760,  0.4173, -0.1973,  0.2054,
         -0.4765,  0.2440,  0.1813,  0.2999,  0.0322,  0.4281, -0.1412,  0.0607,
          0.1356,  0.3197, -0.0933, -0.0103,  0.0442, -0.0314,  0.0504,  0.1453,
         -0.0404,  0.2014,  0.0811, -0.0457, -0.0050, -0.0562, -0.0183,  0.4035,
         -0.2842,  0.2233,  0.1420, -0.0184, -0.1171, -0.0665, -0.2805, -0.0950,
          0.6163,  0.6092, -0.5293,  0.1414,  0.4921,  0.1456, -0.2794, -0.0625,
         -0.0198,  0.2856, -0.2687, -0.2917,  0.1366, -0.0789,  0.0117, -0.1195,
          0.1155,  0.0542, -0.0603,  0.0517, -0.0143,  0.0554, -0.0395, -0.1667,
         -0.0629,  0.2335,  0.2181, -0.2029, -0.0419, -0.0064, -0.1627,  0.1772,
         -0.2054, -0.0253,  0.0563,  0.0529,  0.2435,  0.1768, -0.1023,  0.0462,
          0.0039,  0.2245, -0.0250,  0.1520, -0.1470, -0.1972, -0.1356, -0.2256,
          0.1698, -0.1266,  0.0525, -0.2624, -0.1531, -0.2381,  0.2138,  0.2208,
          0.1643, -0.0097,  0.1429, -0.0788,  0.0511, -0.0933, -0.0886,  0.0751,
         -0.2310]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
558000 特征值优化 tensor(1.0343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.9457e-01,  2.5972e+00, -2.8819e-01, -9.0502e-01, -2.7780e-01,
          2.9507e+00,  7.0421e-01,  1.6642e+00, -1.3472e+00, -6.4899e-01,
          4.4905e-02, -3.3883e-01, -1.9981e-01, -1.0159e-01, -2.3016e-01,
         -2.7872e-01, -5.7522e-01, -1.0775e-01,  9.2775e-01, -1.1126e+00,
          2.9442e-01, -7.8456e-02,  2.1492e-01, -5.8338e-01, -7.4459e-01,
         -2.1980e-01,  1.9961e-01,  8.2030e-02,  6.3766e-01, -1.6241e-01,
         -1.3406e-01,  1.7417e-01,  2.3570e-01, -1.2526e-01, -5.4933e-02,
         -5.7729e-01,  6.3514e-01, -4.1020e-01, -2.6738e-01,  4.0272e-01,
          1.4491e-01, -4.1895e-02,  5.0004e-02,  5.9066e-01, -3.4433e-02,
         -1.4857e-01,  2.3551e-01, -9.9420e-02, -1.3473e-01,  1.2973e-01,
          6.4990e-01, -1.0871e-01, -1.5481e-01,  1.3657e-01,  1.0585e-01,
         -6.5789e-01, -1.5887e-01,  4.7553e-01, -4.1879e-02,  7.0005e-02,
          1.7070e-01,  4.1936e-01, -1.9254e-01,  1.9899e-01, -4.7997e-01,
          2.3170e-01,  1.7973e-01,  2.9952e-01,  3.2413e-02,  4.2748e-01,
         -1.3829e-01,  5.4073e-02,  1.3727e-01,  3.2669e-01, -8.1083e-02,
         -1.5937e-02,  5.2846e-02, -3.7823e-02,  3.6451e-02,  1.4326e-01,
         -4.0403e-02,  2.0035e-01,  7.9228e-02, -6.2653e-02,  1.2607e-02,
         -5.0079e-02, -1.9479e-02,  4.0150e-01, -2.8359e-01,  2.2984e-01,
          1.4215e-01, -2.3639e-02, -1.2771e-01, -7.6912e-02, -2.7489e-01,
         -9.4596e-02,  6.1518e-01,  6.0239e-01, -5.2532e-01,  1.2556e-01,
          4.9847e-01,  1.4773e-01, -2.7066e-01, -6.0206e-02, -1.2269e-02,
          2.7042e-01, -2.6193e-01, -2.9611e-01,  1.3093e-01, -8.2521e-02,
          1.1388e-02, -1.2521e-01,  1.1423e-01,  6.8504e-02, -5.8560e-02,
          5.0329e-02, -1.5326e-02,  4.0709e-02, -4.6178e-02, -1.7056e-01,
         -6.3105e-02,  2.2799e-01,  2.1120e-01, -1.9957e-01, -3.1773e-02,
         -6.2227e-03, -1.6086e-01,  1.7921e-01, -2.1323e-01, -1.8762e-02,
          5.4550e-02,  5.0114e-02,  2.3806e-01,  1.7666e-01, -9.7306e-02,
          5.9273e-02, -2.1700e-03,  2.1264e-01, -1.5392e-02,  1.4850e-01,
         -1.4652e-01, -2.0210e-01, -1.3325e-01, -2.2210e-01,  1.6579e-01,
         -1.3719e-01,  5.8419e-02, -2.5897e-01, -1.4664e-01, -2.3611e-01,
          2.1098e-01,  2.1346e-01,  1.8168e-01, -1.1505e-02,  1.3808e-01,
         -6.7592e-02,  5.8227e-02, -9.0085e-02, -9.3671e-02,  7.7491e-02,
         -2.2622e-01]], device='cuda:0') tensor(0.2372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
559000 特征值优化 tensor(1.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4881,  2.5840, -0.3000, -0.9042, -0.2791,  2.9507,  0.7233,  1.6515,
         -1.3415, -0.6472,  0.0500, -0.3407, -0.1996, -0.0950, -0.2314, -0.2700,
         -0.5609, -0.1091,  0.9366, -1.1172,  0.2982, -0.0818,  0.2227, -0.5864,
         -0.7469, -0.2225,  0.1853,  0.0756,  0.6221, -0.1633, -0.1289,  0.1769,
          0.2423, -0.1300, -0.0513, -0.5807,  0.6310, -0.4157, -0.2625,  0.4062,
          0.1464, -0.0409,  0.0524,  0.5867, -0.0322, -0.1451,  0.2392, -0.0983,
         -0.1391,  0.1269,  0.6581, -0.1078, -0.1508,  0.1359,  0.1052, -0.6653,
         -0.1535,  0.4736, -0.0375,  0.0686,  0.1664,  0.4186, -0.1976,  0.1995,
         -0.4747,  0.2412,  0.1833,  0.2979,  0.0345,  0.4297, -0.1352,  0.0556,
          0.1328,  0.3225, -0.0942, -0.0222,  0.0554, -0.0300,  0.0522,  0.1446,
         -0.0425,  0.2007,  0.0808, -0.0641,  0.0109, -0.0550, -0.0185,  0.4007,
         -0.2807,  0.2330,  0.1449, -0.0151, -0.1170, -0.0700, -0.2769, -0.0922,
          0.6136,  0.5964, -0.5349,  0.1260,  0.4922,  0.1397, -0.2738, -0.0729,
         -0.0113,  0.2722, -0.2636, -0.2954,  0.1245, -0.0814,  0.0103, -0.1187,
          0.1133,  0.0707, -0.0611,  0.0439, -0.0160,  0.0382, -0.0437, -0.1657,
         -0.0686,  0.2353,  0.2172, -0.1986, -0.0323, -0.0058, -0.1556,  0.1792,
         -0.2106, -0.0204,  0.0543,  0.0456,  0.2427,  0.1739, -0.0940,  0.0581,
         -0.0078,  0.2246, -0.0144,  0.1427, -0.1431, -0.1911, -0.1309, -0.2372,
          0.1600, -0.1356,  0.0665, -0.2616, -0.1406, -0.2390,  0.2160,  0.2166,
          0.1783, -0.0032,  0.1393, -0.0675,  0.0576, -0.0937, -0.0934,  0.0757,
         -0.2309]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
560000 特征值优化 tensor(1.0445, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.0657e-01,  2.5904e+00, -2.9561e-01, -9.1420e-01, -2.8295e-01,
          2.9484e+00,  7.0687e-01,  1.6375e+00, -1.3263e+00, -6.4982e-01,
          5.1851e-02, -3.4129e-01, -2.0438e-01, -9.8375e-02, -2.2003e-01,
         -2.9758e-01, -5.5417e-01, -1.0030e-01,  9.4051e-01, -1.1259e+00,
          2.8749e-01, -7.5015e-02,  2.0434e-01, -5.8985e-01, -7.4532e-01,
         -2.2979e-01,  2.0008e-01,  7.6121e-02,  6.3236e-01, -1.6359e-01,
         -1.2167e-01,  1.8218e-01,  2.4979e-01, -1.2722e-01, -4.9788e-02,
         -5.8016e-01,  6.2527e-01, -4.1561e-01, -2.7477e-01,  4.0419e-01,
          1.4571e-01, -4.1613e-02,  4.7132e-02,  5.9171e-01, -3.3527e-02,
         -1.5057e-01,  2.3184e-01, -1.1264e-01, -1.2802e-01,  1.2967e-01,
          6.5638e-01, -1.0789e-01, -1.5015e-01,  1.3394e-01,  1.0523e-01,
         -6.5885e-01, -1.6769e-01,  4.7945e-01, -3.9666e-02,  6.6265e-02,
          1.7097e-01,  4.1978e-01, -1.9530e-01,  1.9617e-01, -4.7745e-01,
          2.3683e-01,  1.8382e-01,  3.0166e-01,  4.1588e-02,  4.2638e-01,
         -1.3528e-01,  5.6299e-02,  1.3781e-01,  3.2486e-01, -9.4341e-02,
         -3.6785e-03,  6.3051e-02, -2.8599e-02,  6.1966e-02,  1.3636e-01,
         -4.2438e-02,  1.9747e-01,  8.1695e-02, -5.6555e-02, -4.4011e-03,
         -5.6233e-02, -2.3855e-02,  3.9419e-01, -2.8314e-01,  2.0457e-01,
          1.3903e-01, -2.0812e-02, -1.2516e-01, -6.0676e-02, -2.8624e-01,
         -8.6978e-02,  6.2347e-01,  6.0054e-01, -5.2495e-01,  1.3875e-01,
          4.7624e-01,  1.4569e-01, -2.7958e-01, -6.6316e-02, -1.2359e-02,
          2.8572e-01, -2.6525e-01, -2.9724e-01,  1.3098e-01, -7.9818e-02,
          9.3163e-03, -1.1244e-01,  1.2102e-01,  6.3163e-02, -5.3222e-02,
          5.4702e-02, -1.7422e-02,  5.2476e-02, -3.7679e-02, -1.7120e-01,
         -6.1757e-02,  2.2170e-01,  2.1590e-01, -1.9751e-01, -3.6777e-02,
         -6.2689e-03, -1.5908e-01,  1.7822e-01, -2.1353e-01, -2.1853e-02,
          5.4910e-02,  4.1902e-02,  2.4183e-01,  1.7523e-01, -9.3146e-02,
          5.6710e-02,  4.8892e-03,  2.0990e-01, -2.6484e-02,  1.5090e-01,
         -1.2933e-01, -1.8956e-01, -1.3989e-01, -2.3472e-01,  1.6010e-01,
         -1.3829e-01,  5.0480e-02, -2.5936e-01, -1.5110e-01, -2.3862e-01,
          2.1896e-01,  2.1679e-01,  1.6910e-01,  1.5468e-03,  1.3944e-01,
         -7.3900e-02,  6.6234e-02, -8.6645e-02, -1.0094e-01,  8.9311e-02,
         -2.2963e-01]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
561000 特征值优化 tensor(39.4121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0722e+00, -3.9341e-01,  2.0300e-01, -1.0947e+00,  1.4664e-01,
          9.9753e-01,  2.8559e-01,  2.3416e-01,  1.0474e+00, -6.4659e-01,
          1.1462e+00, -7.7696e-01,  8.5283e-01,  2.0729e-01,  2.0089e+00,
         -4.8278e-01,  1.1347e+00,  4.9234e-01, -4.2081e-01,  1.4038e+00,
         -3.9807e-01,  5.9058e-01,  7.5792e-01, -1.3845e+00,  2.6001e-01,
          6.0613e-01,  1.2082e+00,  1.4627e+00, -1.3868e-01, -1.1389e-01,
         -9.3694e-01,  3.0760e-01,  4.4170e-01,  2.5432e-01,  1.5926e+00,
         -8.0709e-01,  2.8465e-02,  3.5226e-02, -2.7291e-02, -1.0913e+00,
          1.8298e+00, -7.8651e-01,  2.8266e-01,  1.3061e-01, -7.1972e-01,
         -3.6642e-01,  1.4975e+00,  9.0163e-01,  1.2706e+00,  2.8915e-01,
          8.1315e-01, -2.6609e+00, -4.4465e-02, -4.6790e-01,  4.8778e-02,
          3.8522e-01, -5.0586e-01,  4.3268e-01,  8.7284e-01, -6.1242e-01,
          9.5568e-04,  1.2586e+00,  7.3432e-02, -1.4886e+00,  1.9454e+00,
          8.5163e-01, -2.7691e-01, -6.2656e-01, -4.4832e-01, -8.5224e-02,
         -4.2744e-01, -9.4102e-01,  1.6813e-01,  1.4834e-01,  1.8132e-01,
         -1.5785e+00,  4.5361e-01, -6.6971e-01,  6.4590e-01,  1.8314e+00,
         -1.9100e+00,  8.9206e-01, -4.3478e-01,  1.2995e-02, -7.0359e-02,
         -7.2427e-01,  8.4699e-04,  1.0600e+00,  1.0962e+00,  2.9296e-01,
         -3.9968e-01,  2.1491e-01,  1.4571e+00, -1.0525e+00,  1.5236e+00,
          2.5064e-01,  7.6408e-01,  1.1480e-01,  2.3920e-01, -4.6191e-01,
          1.0574e-02, -3.0271e-01, -1.7727e+00,  1.3310e+00, -1.0815e+00,
          5.4446e-01,  1.1801e+00,  4.5698e-02,  1.0735e-01,  2.2186e-01,
         -9.1030e-01,  1.0907e+00,  2.7409e-01, -4.5177e-01, -1.0768e+00,
          2.0269e+00,  1.6338e-01, -3.8475e-01,  1.5359e-01,  9.1398e-01,
          1.5897e-01,  5.2403e-02,  1.9770e+00, -1.7879e+00, -1.9703e-01,
          3.9393e-01,  4.4743e-01,  2.5337e-02, -9.4000e-02, -3.1322e-01,
         -7.4721e-01,  2.0739e-01, -4.0863e-02,  1.2511e-01, -5.8549e-01,
         -4.0576e-01,  1.1551e+00,  8.6928e-01,  4.1247e-01, -5.0237e-02,
         -1.1088e-02,  1.0786e+00, -9.8610e-03,  8.5621e-02, -2.0105e-01,
         -9.2022e-01,  1.2443e+00,  9.4390e-01,  2.6084e-01, -2.8034e-01,
          1.6804e+00, -1.5207e-01, -1.6343e+00,  1.2440e+00,  1.5377e-02,
          1.0675e+00,  1.9347e-01,  6.3172e-01, -3.0288e-01,  2.0406e-01,
          8.5688e-01]], device='cuda:0') tensor(0.3438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
562000 特征值优化 tensor(8.1744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7030,  0.2204,  0.9628, -1.3212,  0.8559,  2.2342, -0.2965, -0.0474,
          1.0198,  0.2093,  0.2341, -0.3565,  0.0060, -0.4865,  1.1209, -0.1914,
         -0.0121,  0.6460,  0.1772,  0.8624,  0.0853, -0.0418,  0.3061, -0.5747,
         -0.1475, -0.0166,  0.6210,  0.5315, -0.4975, -0.1039, -0.1687,  0.0498,
          0.0768,  0.0155,  0.6607, -0.2950,  0.2121,  0.1185,  0.0772, -0.2250,
          0.8439, -0.1106, -0.0052,  0.4303,  0.0501,  0.0669,  0.6360,  0.2654,
          0.4720, -0.0242,  0.2256, -1.5740, -0.0336,  0.1329, -0.0509, -0.1085,
          0.0054, -0.0107,  0.0171,  0.0251,  0.4207,  0.4866, -0.2464, -0.4029,
          0.9765,  0.0557,  0.0186, -0.2054,  0.0171,  0.0783, -0.0943, -0.1538,
         -0.0499,  0.1275, -0.0052, -0.6371,  0.0415, -0.1070,  0.1234,  0.8294,
         -0.8890,  0.1646, -0.0639,  0.0595,  0.2759, -0.0250, -0.1075,  0.4898,
          0.7440, -0.0873, -0.0174, -0.0313,  0.2867, -0.7110,  0.7100, -0.5147,
          0.1151,  0.2542, -0.2598, -0.6281, -0.4265,  0.3057, -0.6903,  0.5288,
         -0.1612, -0.0752,  0.2931, -0.0201, -0.2963, -0.1715, -0.1820,  0.2600,
         -0.4003, -0.0430, -0.2389,  1.0850, -0.0569,  0.0366,  0.2327,  0.2113,
          0.1395,  0.0190,  0.8979, -0.8137,  0.1262, -0.0866, -0.0637, -0.3760,
         -0.1215,  0.1812, -0.1474,  0.1801,  0.1289,  0.0508, -0.0830, -0.3322,
          0.4009,  0.2075, -0.2096, -0.3046,  0.0360,  0.2623,  0.1010, -0.0890,
         -0.0194, -0.1330,  0.2759,  0.0967, -0.0735,  0.4089,  0.7128, -0.0248,
         -0.5506,  0.3632, -0.1947,  0.2628, -0.2160, -0.1391, -0.0534, -0.3813,
          0.2972]], device='cuda:0') tensor(0.2147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
563000 特征值优化 tensor(1.1422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.0035e-01,  1.1794e-01,  5.6484e-02, -1.3175e+00,  1.3733e+00,
          3.0115e+00,  9.9432e-02, -1.2186e+00,  7.1259e-02,  2.3710e-01,
          2.9650e-01, -7.6295e-01,  1.0615e-01, -4.2898e-01,  3.2955e-01,
          5.0363e-01, -5.6848e-02,  5.5297e-01,  5.5348e-01,  7.2819e-01,
         -2.6663e-02,  1.9933e-01,  2.1873e-01, -3.4785e-01, -5.0673e-01,
          4.1067e-01,  6.9662e-01,  1.7180e-01, -6.4179e-01,  1.1959e-01,
          9.9029e-03,  1.4738e-01,  1.9017e-01,  1.0724e-01,  4.5144e-02,
         -6.1809e-02,  4.1731e-01,  2.8777e-02,  1.6650e-01, -4.6297e-02,
          4.3492e-01, -2.7412e-03, -8.5269e-03,  1.4399e-01, -3.3874e-01,
         -1.7626e-01,  3.2332e-01,  2.6218e-01,  8.9197e-02,  8.8891e-02,
          9.6032e-02, -1.0070e+00,  3.0011e-01, -1.3925e-01, -6.6248e-02,
         -5.0418e-01,  4.7194e-02, -1.1929e-01,  2.8191e-02,  2.5035e-02,
          3.6719e-01,  2.7432e-01, -5.2390e-01,  7.2314e-02,  3.8355e-01,
          6.8800e-02,  1.3357e-01, -3.3549e-01,  2.5167e-01,  1.5482e-01,
         -1.2865e-01, -1.3229e-01, -1.1318e-01,  6.2776e-02,  2.1366e-01,
         -1.8834e-01, -2.7773e-01, -2.1724e-01, -2.4696e-01,  4.2219e-01,
         -4.4478e-01, -5.0050e-02, -1.8365e-01,  1.8587e-01,  4.0623e-01,
          2.1085e-02,  5.4463e-02,  2.6450e-01,  4.0848e-01, -1.6366e-01,
          1.6617e-02, -4.7939e-01,  7.1412e-02, -1.0542e-01,  3.0072e-01,
         -3.4042e-01,  3.4465e-01,  1.6323e-01, -2.4087e-01,  2.2017e-02,
          1.3945e-01,  6.0741e-01, -2.3871e-02,  1.6731e-01,  2.0959e-01,
         -1.2314e-01, -2.6849e-01, -8.1123e-02, -3.2291e-01, -7.4893e-02,
          8.6064e-02,  2.9601e-02, -1.5505e-01,  7.3503e-03, -3.5120e-02,
          4.5567e-01,  7.9900e-02, -1.1202e-02,  1.1013e-01, -3.7449e-02,
          4.2670e-02, -1.6582e-02,  4.2587e-01, -3.8011e-01,  1.0559e-01,
         -7.3727e-02,  2.4322e-01, -2.9249e-01, -3.3336e-01, -2.2050e-02,
         -1.6068e-01,  8.0917e-03,  2.0355e-01, -6.2603e-02, -1.2031e-02,
         -5.1733e-02,  2.6128e-03, -4.0818e-02, -1.4015e-02,  5.2418e-04,
          3.0863e-01,  7.5931e-02, -3.3361e-01, -1.0549e-01, -5.3552e-02,
         -1.1177e-01,  6.8041e-02, -1.5410e-02, -1.5249e-01,  2.7095e-01,
          2.9818e-01, -4.7745e-03, -1.5584e-01,  2.2231e-01,  4.7666e-03,
          8.9621e-02, -1.7217e-01, -1.6546e-01, -1.2392e-01, -2.6048e-01,
          5.7334e-02]], device='cuda:0') tensor(0.2744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
564000 特征值优化 tensor(0.5954, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4282e-01,  4.5622e-02, -4.9202e-01, -9.9158e-01,  1.6470e+00,
          3.5942e+00,  6.1431e-01, -1.9732e+00,  1.4487e-01,  1.9779e-01,
          4.9497e-01, -7.6887e-01, -5.2986e-02, -2.7159e-01,  5.0228e-01,
          9.7122e-01, -1.3312e-01,  5.2207e-01,  5.2659e-01,  1.0503e+00,
         -4.7947e-02,  1.5788e-01,  8.4566e-02, -2.9280e-01, -5.0209e-01,
          7.1338e-01,  7.2830e-01,  2.5472e-01, -5.3348e-01,  2.4368e-01,
          1.4165e-01,  9.8170e-02,  2.2954e-01,  3.7451e-02,  4.5906e-03,
          5.8963e-02,  4.2651e-01, -7.4625e-03,  3.0735e-01, -2.6039e-02,
          3.0084e-01,  4.5356e-02, -4.3812e-02,  1.4494e-01, -4.0907e-01,
         -1.4217e-01,  2.7408e-01,  2.6347e-01,  3.4569e-02,  2.0595e-01,
         -9.2501e-02, -9.6381e-01,  3.9799e-01, -1.5567e-01, -1.7638e-01,
         -5.6730e-01,  7.2459e-02, -4.3954e-02, -8.1545e-02,  8.1739e-02,
          4.1834e-01,  2.2516e-01, -5.0371e-01,  1.2249e-01,  3.0264e-01,
          8.9056e-02,  4.6877e-02, -4.1342e-01,  1.8031e-01,  1.0060e-01,
         -1.0576e-01, -1.6798e-01, -1.0432e-01, -2.3623e-02,  2.8155e-01,
         -1.5757e-01, -2.7255e-01, -1.0237e-01, -2.4045e-01,  3.0528e-01,
         -3.5661e-01, -9.1896e-02, -1.3513e-01,  1.4163e-01,  2.8356e-01,
         -9.9941e-02, -3.2633e-02,  1.2223e-01,  1.9434e-01, -5.0510e-03,
         -1.6547e-02, -5.2860e-01,  1.8050e-01, -3.0188e-02,  1.7293e-01,
         -2.6400e-01,  4.7393e-01, -1.5898e-01, -4.5197e-02,  8.5770e-02,
          2.4686e-01,  4.5534e-01,  7.8649e-04,  6.7814e-02,  3.1470e-01,
         -1.1695e-01, -2.7913e-01, -7.7672e-03, -1.6250e-01, -4.1675e-02,
          2.2372e-02,  2.8432e-02, -1.0393e-01,  1.2557e-02, -6.5142e-02,
          2.3388e-01,  5.7455e-02,  1.2155e-02,  1.0152e-02, -4.4944e-02,
          1.0072e-01,  3.6898e-02,  3.1761e-01, -2.6768e-01, -4.8309e-02,
         -1.3078e-02,  2.4672e-01, -1.4018e-01, -3.1579e-01, -8.5716e-02,
         -1.6438e-01,  6.3928e-02,  1.0709e-01, -1.1867e-01, -2.5855e-02,
         -1.6231e-01,  1.0086e-01, -6.5840e-02,  2.0812e-02,  1.3160e-01,
          2.9692e-01, -1.2602e-02, -1.3411e-01, -4.8825e-02,  9.6951e-02,
         -3.9824e-02,  1.6362e-01, -9.4953e-02, -1.5340e-01,  1.0100e-01,
          2.1125e-01,  3.2592e-02, -1.0264e-01,  2.1130e-01,  4.7915e-02,
         -1.1348e-02, -9.5306e-02, -1.6824e-01, -1.1021e-01, -1.3775e-01,
          3.6146e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
565000 特征值优化 tensor(0.5763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0545e-01,  1.7303e-02, -5.5895e-01, -1.0008e+00,  1.7965e+00,
          3.7522e+00,  6.3046e-01, -2.0937e+00,  1.0558e-01,  1.1943e-01,
          5.6558e-01, -7.6974e-01, -1.1084e-01, -3.0098e-01,  6.0235e-01,
          1.0565e+00, -1.7188e-01,  5.5393e-01,  5.0056e-01,  1.0697e+00,
          2.8929e-02,  1.4854e-01,  5.7284e-02, -2.6788e-01, -4.7286e-01,
          7.2998e-01,  7.5723e-01,  3.0459e-01, -4.5897e-01,  2.3207e-01,
          1.7151e-01,  7.2285e-02,  2.2643e-01,  2.7761e-02,  5.1945e-03,
          1.3685e-01,  4.0004e-01, -3.7800e-02,  2.9526e-01, -2.4157e-02,
          2.4726e-01,  4.8390e-02, -4.9506e-02,  1.2955e-01, -3.8493e-01,
         -9.2244e-02,  3.1222e-01,  2.7098e-01,  1.0584e-02,  2.2994e-01,
         -1.7406e-01, -9.4462e-01,  3.2224e-01, -1.4007e-01, -1.8049e-01,
         -5.4485e-01,  1.2619e-01, -4.3858e-02, -1.1678e-01,  9.1453e-02,
          4.2170e-01,  2.1473e-01, -4.9422e-01,  1.4253e-01,  2.6239e-01,
          9.3731e-02,  5.8404e-02, -3.9235e-01,  2.1053e-01,  2.6293e-02,
         -8.0255e-02, -1.7149e-01, -1.3885e-01, -8.1488e-02,  3.0944e-01,
         -1.7083e-01, -2.5209e-01, -8.6319e-02, -2.6982e-01,  2.5888e-01,
         -3.4819e-01, -1.2550e-01, -1.4671e-01,  1.2973e-01,  2.9403e-01,
         -1.0589e-01, -3.8952e-02,  7.8885e-02,  1.3999e-01, -3.9680e-02,
         -3.5283e-02, -5.1943e-01,  1.7936e-01,  6.0306e-02,  1.6152e-01,
         -2.4395e-01,  4.8937e-01, -1.7565e-01,  2.5695e-02,  1.2448e-01,
          2.4130e-01,  4.3673e-01, -9.9960e-03,  8.2367e-02,  3.4298e-01,
         -1.3050e-01, -2.5431e-01, -4.5334e-03, -1.4844e-01, -1.2560e-03,
          1.4542e-02,  1.9747e-02, -6.8075e-02,  4.5361e-03, -7.1881e-02,
          2.1203e-01,  6.0146e-02, -7.3122e-03, -3.6694e-03, -8.3997e-02,
          8.9838e-02,  5.2359e-02,  2.8955e-01, -2.1772e-01, -7.7515e-02,
         -2.0775e-02,  2.7020e-01, -8.7371e-02, -2.9533e-01, -1.1478e-01,
         -1.3088e-01,  3.1517e-02,  8.1008e-02, -1.1972e-01,  7.5431e-03,
         -1.4622e-01,  7.4866e-02, -1.0298e-01,  1.9632e-02,  1.3614e-01,
          2.3900e-01, -2.9077e-02, -4.4437e-02, -1.0552e-01,  7.4335e-02,
          3.9929e-02,  1.7015e-01, -1.0655e-01, -1.6554e-01,  4.8644e-02,
          2.0666e-01,  2.3537e-02, -8.2312e-02,  1.9345e-01,  3.0343e-02,
         -7.2857e-03, -6.8169e-02, -1.7939e-01, -1.0876e-01, -1.0012e-01,
          1.9190e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
566000 特征值优化 tensor(0.5690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.9928e-02, -2.0105e-03, -6.0438e-01, -1.0064e+00,  1.9242e+00,
          3.8130e+00,  6.8005e-01, -2.1184e+00,  6.8573e-02,  3.2335e-02,
          5.8876e-01, -8.0711e-01, -1.5374e-01, -2.9321e-01,  5.9322e-01,
          1.0882e+00, -2.0627e-01,  5.8280e-01,  5.0582e-01,  1.0750e+00,
          1.0414e-01,  1.4832e-01,  3.0012e-02, -3.2363e-01, -4.6916e-01,
          7.3212e-01,  7.2625e-01,  3.6121e-01, -4.3806e-01,  2.1871e-01,
          1.9336e-01,  3.4128e-02,  2.3162e-01, -4.5336e-03,  1.4135e-02,
          1.7661e-01,  4.0761e-01, -4.8810e-02,  3.1048e-01, -4.1721e-02,
          2.2557e-01,  4.6765e-02, -5.3589e-02,  1.1222e-01, -3.7216e-01,
         -6.9918e-02,  3.5659e-01,  2.7003e-01, -3.8603e-02,  2.2662e-01,
         -2.3296e-01, -9.4458e-01,  3.0801e-01, -1.5488e-01, -2.1304e-01,
         -5.5883e-01,  1.4768e-01, -9.0452e-02, -1.2055e-01,  1.0761e-01,
          4.4293e-01,  2.0355e-01, -4.9818e-01,  1.5458e-01,  2.3785e-01,
          9.3739e-02,  8.7285e-02, -3.5149e-01,  2.3612e-01, -3.9954e-03,
         -6.0765e-02, -1.6665e-01, -1.3636e-01, -7.4985e-02,  2.9101e-01,
         -1.4640e-01, -2.6182e-01, -6.1611e-02, -2.0594e-01,  2.2531e-01,
         -3.3110e-01, -1.3463e-01, -1.2807e-01,  1.0779e-01,  2.9320e-01,
         -1.1804e-01, -1.9417e-02,  6.3629e-02,  1.5290e-01, -7.6354e-02,
         -8.3830e-03, -5.3253e-01,  1.7994e-01,  3.9947e-02,  1.6175e-01,
         -2.2645e-01,  4.9978e-01, -1.5855e-01,  3.1297e-02,  1.6987e-01,
          2.1901e-01,  3.9445e-01,  2.2172e-02,  9.9182e-02,  3.2616e-01,
         -1.2472e-01, -2.5005e-01,  9.2505e-03, -1.6923e-01,  3.0073e-02,
          1.5270e-03, -1.1886e-03, -6.7985e-02, -8.5781e-03, -5.9277e-02,
          2.0256e-01,  6.2241e-02, -1.4950e-02, -1.4821e-02, -1.3321e-01,
          8.7241e-02,  5.5827e-02,  2.8336e-01, -1.9322e-01, -1.0764e-01,
         -6.8025e-02,  2.4876e-01, -4.5182e-02, -2.7777e-01, -1.1251e-01,
         -1.1418e-01,  6.5670e-02,  5.2593e-02, -1.4763e-01,  5.3323e-03,
         -1.1124e-01,  5.0046e-02, -6.8815e-02,  2.4364e-02,  1.8337e-01,
          2.3561e-01, -5.6151e-02, -5.4341e-02, -9.1700e-02,  9.0175e-02,
          3.0499e-02,  1.6789e-01, -1.3044e-01, -1.6412e-01,  3.0814e-02,
          2.0147e-01,  9.2786e-02, -8.6352e-02,  1.8779e-01,  9.7225e-03,
         -2.4708e-02, -4.5083e-02, -1.4451e-01, -8.7658e-02, -5.9734e-02,
          6.7111e-02]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
567000 特征值优化 tensor(0.5583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6246e-02,  7.8018e-03, -6.3613e-01, -1.0027e+00,  2.0499e+00,
          3.8648e+00,  6.0597e-01, -2.0841e+00,  3.3647e-02, -4.6341e-02,
          5.3551e-01, -8.1224e-01, -1.1974e-01, -2.8884e-01,  6.5967e-01,
          1.0709e+00, -2.2809e-01,  5.8801e-01,  5.6713e-01,  1.0891e+00,
          6.2844e-02,  1.1902e-01, -1.6875e-02, -2.3711e-01, -4.7850e-01,
          8.0237e-01,  7.1914e-01,  4.3348e-01, -4.1618e-01,  1.9018e-01,
          2.2514e-01,  5.9129e-02,  1.3621e-01, -2.7591e-02,  8.0190e-02,
          1.9462e-01,  3.7988e-01, -8.2302e-02,  2.6133e-01, -2.2676e-02,
          2.2292e-01,  3.9979e-02, -5.3656e-02,  1.0136e-01, -3.6060e-01,
         -4.8592e-02,  3.5286e-01,  2.6130e-01, -1.1057e-01,  2.0862e-01,
         -2.5092e-01, -8.9661e-01,  2.9099e-01, -1.6921e-01, -2.5212e-01,
         -5.4685e-01,  1.7495e-01, -1.1028e-01, -1.5782e-01,  1.1416e-01,
          4.5617e-01,  2.0067e-01, -4.9150e-01,  1.8217e-01,  2.3014e-01,
          8.0437e-02,  1.3900e-01, -3.2604e-01,  2.8016e-01, -4.9183e-02,
         -6.3598e-02, -1.4941e-01, -1.3257e-01, -1.0964e-01,  3.1895e-01,
         -1.4511e-01, -2.3224e-01, -7.3216e-02, -2.1114e-01,  1.8210e-01,
         -2.9855e-01, -1.6826e-01, -1.5007e-01,  7.0568e-02,  2.8094e-01,
         -1.1918e-01, -3.8405e-02,  5.0827e-02,  1.7132e-01, -3.3520e-02,
          1.0194e-03, -5.8141e-01,  1.8306e-01,  8.7580e-02,  1.6367e-01,
         -2.1538e-01,  5.0992e-01, -1.5431e-01,  3.7174e-02,  2.0968e-01,
          2.4584e-01,  3.6500e-01,  1.1778e-01,  1.1327e-01,  3.5274e-01,
         -1.6422e-01, -2.4646e-01,  1.7063e-02, -2.2120e-01,  6.2574e-02,
          8.8914e-03, -1.4607e-02, -1.1381e-01,  1.8586e-02, -5.4817e-02,
          1.6829e-01,  9.7770e-02, -1.4920e-02,  3.9094e-03, -1.6184e-01,
          1.0979e-01,  6.9236e-02,  2.8057e-01, -1.7691e-01, -1.2003e-01,
         -6.0218e-02,  2.7480e-01, -4.0323e-02, -2.3950e-01, -1.0546e-01,
         -1.1837e-01,  5.2646e-02,  5.4259e-02, -1.3306e-01,  2.0072e-02,
         -8.3551e-02,  5.9520e-02, -1.0181e-01,  1.9988e-02,  1.7542e-01,
          2.2526e-01, -4.3179e-02, -5.3270e-02, -9.0540e-02,  3.2565e-02,
          2.3095e-02,  1.4559e-01, -1.4665e-01, -1.7153e-01,  1.9493e-02,
          1.7954e-01,  1.0526e-01, -1.0945e-01,  1.6689e-01,  1.1016e-02,
         -7.2374e-02, -4.2603e-02, -1.0035e-01, -5.5185e-02, -2.8457e-02,
          2.9348e-02]], device='cuda:0') tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
568000 特征值优化 tensor(0.5045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4490e-01,  2.9255e-02, -7.2854e-01, -1.0092e+00,  2.1788e+00,
          4.0209e+00,  6.7321e-01, -2.0990e+00, -4.5441e-03, -2.8640e-02,
          5.0672e-01, -7.7955e-01, -9.6629e-02, -2.7484e-01,  7.3342e-01,
          1.0979e+00, -2.8759e-01,  5.6526e-01,  5.2134e-01,  1.0187e+00,
          8.7372e-02,  1.0626e-01, -8.1123e-02, -2.4793e-01, -4.5559e-01,
          8.7598e-01,  7.4063e-01,  5.0627e-01, -4.3243e-01,  1.9838e-01,
          2.5318e-01,  7.1088e-02,  9.8418e-02, -5.1121e-02,  1.5018e-01,
          1.8555e-01,  3.6242e-01, -6.9083e-02,  2.2847e-01, -7.6123e-02,
          2.1232e-01,  3.6271e-02, -1.2828e-01,  1.0279e-01, -3.8063e-01,
          1.8422e-02,  3.3015e-01,  2.7365e-01, -1.9127e-01,  2.0276e-01,
         -2.3558e-01, -8.3697e-01,  2.4848e-01, -1.5661e-01, -3.0279e-01,
         -5.2254e-01,  2.2463e-01, -1.1496e-01, -2.0802e-01,  1.4830e-01,
          4.2958e-01,  1.9678e-01, -4.4866e-01,  1.5429e-01,  2.0703e-01,
          5.7089e-02,  1.3335e-01, -2.9136e-01,  2.9217e-01, -7.6228e-02,
         -4.3134e-02, -1.4725e-01, -1.0691e-01, -1.6629e-01,  3.4137e-01,
         -1.1973e-01, -2.2855e-01, -2.0975e-02, -1.6230e-01,  1.7877e-01,
         -2.4645e-01, -1.9962e-01, -1.2564e-01,  4.1229e-02,  2.4296e-01,
         -1.4547e-01, -4.3713e-02,  3.4786e-02,  1.9897e-01, -1.5859e-02,
          2.9349e-02, -5.9105e-01,  1.6329e-01,  6.8230e-02,  8.6448e-02,
         -1.4887e-01,  5.0994e-01, -8.1523e-02,  3.2224e-02,  2.1262e-01,
          2.8999e-01,  3.5291e-01,  1.0679e-01,  2.0394e-01,  3.3177e-01,
         -1.5109e-01, -2.3790e-01,  1.3879e-02, -2.6064e-01,  5.5865e-02,
          4.5936e-02, -1.6509e-02, -1.3195e-01,  3.0353e-02, -8.1708e-02,
          9.9023e-02,  1.1492e-01, -3.1495e-03, -2.3669e-02, -1.6583e-01,
          1.3033e-01,  7.9386e-02,  2.6971e-01, -9.8183e-02, -1.4835e-01,
         -6.7052e-02,  2.3844e-01, -1.1721e-02, -1.9946e-01, -1.0160e-01,
         -1.4283e-01,  5.3953e-02,  4.4266e-02, -1.6028e-01,  4.2260e-02,
         -5.2481e-02,  5.4637e-02, -1.0590e-01, -4.5308e-02,  2.1002e-01,
          2.3648e-01, -5.4877e-02, -3.1818e-02, -1.1873e-01, -5.6345e-02,
          5.9468e-02,  8.9805e-02, -1.8000e-01, -1.8603e-01,  1.0359e-02,
          1.5603e-01,  1.2758e-01, -1.3215e-01,  1.5331e-01, -2.6894e-02,
         -6.1596e-02, -3.9666e-04, -7.3125e-02, -6.1082e-03, -3.3260e-03,
          4.8780e-02]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
569000 特征值优化 tensor(0.5118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3390e-01,  3.9044e-02, -8.1495e-01, -1.0131e+00,  2.2176e+00,
          4.0704e+00,  7.7726e-01, -2.0940e+00,  4.0372e-02, -1.2360e-01,
          4.9323e-01, -6.6943e-01, -8.4120e-02, -2.3443e-01,  6.2747e-01,
          1.0905e+00, -3.5888e-01,  5.9953e-01,  5.5063e-01,  1.0308e+00,
          8.3125e-02,  8.0818e-02, -7.7085e-02, -1.8480e-01, -4.7651e-01,
          8.9956e-01,  7.4355e-01,  4.8644e-01, -4.7091e-01,  2.1251e-01,
          2.5362e-01,  2.2666e-02,  2.8998e-02, -1.1368e-01,  1.7161e-01,
          2.5636e-01,  3.9143e-01, -3.1541e-02,  2.7540e-01, -1.0486e-01,
          2.0795e-01,  3.8597e-02, -1.3008e-01,  8.5112e-02, -3.9151e-01,
          8.2982e-02,  3.2681e-01,  2.8409e-01, -2.6857e-01,  1.8329e-01,
         -2.3194e-01, -8.4828e-01,  2.6354e-01, -1.6398e-01, -2.6920e-01,
         -5.1575e-01,  2.7654e-01, -6.8992e-02, -2.0653e-01,  7.7633e-02,
          4.2200e-01,  1.8028e-01, -4.3643e-01,  1.7848e-01,  1.5338e-01,
          5.5046e-02,  6.5641e-02, -2.9532e-01,  3.1360e-01, -1.1302e-01,
         -1.5029e-02, -1.4184e-01, -6.4557e-02, -1.8253e-01,  3.5887e-01,
         -1.1864e-01, -2.1305e-01,  2.8900e-02, -9.5678e-02,  1.6447e-01,
         -1.8736e-01, -2.0517e-01, -8.8893e-02, -5.9908e-03,  2.6432e-01,
         -1.3211e-01, -9.8384e-02,  2.7381e-02,  2.0612e-01,  6.0301e-02,
          3.0601e-02, -5.7619e-01,  2.2156e-01,  6.1920e-02,  8.2101e-02,
         -1.2098e-01,  5.2387e-01, -6.9943e-02,  2.0359e-02,  1.3467e-01,
          2.6903e-01,  3.5939e-01,  6.2649e-02,  1.7350e-01,  3.1945e-01,
         -1.3829e-01, -3.0507e-01, -1.2713e-02, -2.3667e-01,  7.9457e-02,
          5.5409e-02, -1.9030e-02, -1.6062e-01,  1.8949e-02, -3.9110e-02,
          6.1322e-02,  1.2798e-01,  4.5022e-03, -1.5570e-02, -1.8206e-01,
          1.0108e-01,  1.0029e-01,  2.4076e-01, -3.4142e-02, -1.7280e-01,
         -1.0076e-01,  2.1667e-01,  6.9612e-03, -1.6663e-01, -7.5457e-02,
         -1.7635e-01,  4.0424e-02,  4.8711e-02, -1.5718e-01,  7.0221e-02,
          3.0382e-04,  3.1513e-02, -9.4754e-02, -7.4160e-02,  2.4800e-01,
          1.9131e-01, -7.5603e-02, -4.4469e-02, -1.0246e-01, -8.3595e-02,
          7.9180e-02,  3.5772e-02, -2.1637e-01, -1.3722e-01, -1.2416e-02,
          1.5540e-01,  1.4270e-01, -1.0674e-01,  1.1438e-01, -7.1824e-02,
         -3.0835e-02,  2.9459e-02, -5.8788e-02,  4.1048e-02,  1.0334e-02,
          7.1812e-02]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
570000 特征值优化 tensor(0.4877, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2764e-01,  3.6358e-02, -8.7250e-01, -1.0151e+00,  2.2291e+00,
          4.0731e+00,  7.6876e-01, -2.0724e+00,  9.0896e-02, -2.0709e-01,
          5.0661e-01, -6.2472e-01, -8.7914e-02, -1.7212e-01,  5.7274e-01,
          1.0859e+00, -3.8974e-01,  6.0165e-01,  5.5734e-01,  1.0485e+00,
          7.8411e-02,  8.4601e-02, -6.5953e-02, -1.9818e-01, -5.2128e-01,
          9.4109e-01,  7.5709e-01,  4.9499e-01, -4.0598e-01,  2.2006e-01,
          2.6107e-01,  3.4455e-02,  3.3840e-02, -9.9491e-02,  1.6880e-01,
          2.8959e-01,  3.7606e-01, -3.0759e-02,  3.0917e-01, -9.8962e-02,
          2.0310e-01,  3.6911e-02, -1.3118e-01,  7.4279e-02, -4.0352e-01,
          8.6896e-02,  3.2330e-01,  2.8766e-01, -2.7636e-01,  1.8366e-01,
         -2.4037e-01, -8.5089e-01,  2.6818e-01, -1.5654e-01, -2.3546e-01,
         -5.0369e-01,  2.6861e-01, -7.3126e-02, -2.0089e-01,  5.0027e-02,
          4.3287e-01,  1.7699e-01, -4.2832e-01,  1.8123e-01,  1.5324e-01,
          5.6085e-02,  6.5731e-02, -2.7999e-01,  3.3029e-01, -1.1309e-01,
         -2.1635e-02, -1.5341e-01, -6.2522e-02, -1.9400e-01,  3.6975e-01,
         -1.0645e-01, -2.0437e-01,  4.6420e-02, -7.0751e-02,  1.4403e-01,
         -1.9103e-01, -1.8980e-01, -7.4172e-02, -4.6294e-02,  2.8816e-01,
         -1.2815e-01, -6.1914e-02,  3.7031e-02,  2.5244e-01,  5.5754e-02,
          2.4754e-02, -5.8356e-01,  2.0811e-01,  1.1374e-01,  6.8250e-02,
         -1.0015e-01,  5.0948e-01, -6.4210e-02,  6.7951e-03,  1.1496e-01,
          2.6073e-01,  3.6315e-01,  5.2822e-02,  1.4996e-01,  3.0446e-01,
         -1.4994e-01, -3.2883e-01, -2.8829e-02, -2.2815e-01,  9.3339e-02,
          6.4763e-02, -3.2816e-02, -1.4835e-01,  3.8702e-02, -4.9889e-02,
          7.5361e-02,  1.1458e-01,  2.6570e-03, -1.5448e-02, -1.9998e-01,
          8.7025e-02,  1.1355e-01,  2.3915e-01, -1.0391e-02, -1.7770e-01,
         -1.1368e-01,  2.2509e-01, -2.1453e-03, -1.5382e-01, -5.5537e-02,
         -1.6888e-01,  3.1855e-02,  6.2079e-02, -1.5031e-01,  5.8781e-02,
         -1.0243e-03,  3.3622e-02, -1.1039e-01, -9.1144e-02,  2.3455e-01,
          1.5508e-01, -5.8061e-02, -3.1047e-02, -8.8320e-02, -1.1034e-01,
          9.9422e-02, -4.5255e-03, -2.2288e-01, -1.2547e-01, -2.8974e-02,
          1.4112e-01,  1.3436e-01, -1.0384e-01,  1.1113e-01, -8.5167e-02,
         -2.5088e-02,  3.1899e-02, -4.9064e-02,  5.3146e-02,  4.9426e-03,
          4.1431e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
571000 特征值优化 tensor(0.4877, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1191e-01,  4.9184e-02, -9.0098e-01, -1.0139e+00,  2.2506e+00,
          4.0609e+00,  7.8174e-01, -2.0878e+00,  1.0770e-01, -2.4650e-01,
          5.0000e-01, -6.0279e-01, -1.0149e-01, -1.4780e-01,  5.5219e-01,
          1.0748e+00, -4.1955e-01,  5.9259e-01,  5.7902e-01,  1.0610e+00,
          7.2589e-02,  7.9565e-02, -6.0167e-02, -1.8708e-01, -5.1954e-01,
          9.5306e-01,  7.5245e-01,  4.8464e-01, -3.9495e-01,  2.2726e-01,
          2.8710e-01,  3.9705e-02,  1.6084e-02, -1.1153e-01,  1.8097e-01,
          3.0038e-01,  3.7031e-01, -2.8810e-02,  3.1727e-01, -1.0302e-01,
          2.0423e-01,  3.9186e-02, -1.3454e-01,  6.6894e-02, -4.0865e-01,
          8.8054e-02,  3.1783e-01,  2.5942e-01, -2.8821e-01,  1.7599e-01,
         -2.4106e-01, -8.5536e-01,  2.4746e-01, -1.4377e-01, -2.2296e-01,
         -4.8174e-01,  2.8232e-01, -4.3018e-02, -2.0679e-01,  3.8676e-02,
          4.1954e-01,  1.7753e-01, -4.3521e-01,  1.9001e-01,  1.4301e-01,
          6.9632e-02,  6.4982e-02, -2.8012e-01,  3.3432e-01, -1.1705e-01,
         -1.6255e-02, -1.5223e-01, -6.2753e-02, -1.9013e-01,  3.7740e-01,
         -1.1234e-01, -1.9094e-01,  6.4642e-02, -4.6256e-02,  1.4148e-01,
         -1.9154e-01, -1.9091e-01, -7.2365e-02, -6.0006e-02,  2.9219e-01,
         -1.1764e-01, -1.0359e-01,  5.3578e-02,  2.5236e-01,  5.1630e-02,
          3.0119e-02, -5.7752e-01,  2.2288e-01,  1.3230e-01,  7.0506e-02,
         -9.4791e-02,  4.8294e-01, -6.1506e-02,  4.4576e-03,  1.0278e-01,
          2.5252e-01,  3.6581e-01,  5.1725e-02,  1.5812e-01,  3.0836e-01,
         -1.3713e-01, -3.2300e-01, -4.0515e-02, -2.3048e-01,  9.9843e-02,
          6.6065e-02, -2.5954e-02, -1.7209e-01,  3.7612e-02, -3.8848e-02,
          9.7068e-02,  9.1030e-02, -1.0079e-03, -2.1479e-02, -1.6641e-01,
          1.0183e-01,  1.2198e-01,  2.3046e-01,  6.1450e-03, -1.7908e-01,
         -1.2125e-01,  2.2577e-01,  6.0233e-03, -1.5147e-01, -5.5860e-02,
         -1.6189e-01,  2.7489e-02,  6.2729e-02, -1.4786e-01,  6.1654e-02,
         -4.4823e-03,  1.8392e-02, -1.2627e-01, -6.9154e-02,  2.4269e-01,
          1.4785e-01, -6.9655e-02, -3.2673e-02, -8.1889e-02, -1.0571e-01,
          1.0299e-01, -9.7390e-03, -2.2806e-01, -1.0509e-01, -3.0727e-02,
          1.4210e-01,  1.2992e-01, -8.4692e-02,  1.0656e-01, -8.6506e-02,
         -1.7307e-02,  3.9060e-02, -6.3979e-02,  6.0979e-02,  5.0117e-03,
          5.5057e-02]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
572000 特征值优化 tensor(0.4944, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2209e-01,  1.7312e-02, -9.2928e-01, -1.0115e+00,  2.2929e+00,
          4.0844e+00,  7.8347e-01, -2.1193e+00,  9.6107e-02, -2.7500e-01,
          4.8971e-01, -5.8911e-01, -9.0442e-02, -1.2626e-01,  5.2014e-01,
          1.0776e+00, -4.5322e-01,  5.8941e-01,  5.8024e-01,  1.0622e+00,
          7.2019e-02,  7.2519e-02, -8.4765e-02, -1.9145e-01, -5.1799e-01,
          9.5379e-01,  7.3856e-01,  4.9079e-01, -3.6808e-01,  2.2950e-01,
          2.7546e-01,  3.3083e-02, -1.4391e-02, -1.1475e-01,  1.8773e-01,
          3.0336e-01,  3.6687e-01, -4.0119e-02,  3.2045e-01, -1.1809e-01,
          2.1067e-01,  4.1586e-02, -1.3481e-01,  6.2661e-02, -4.1214e-01,
          7.8710e-02,  3.2578e-01,  2.5194e-01, -2.9588e-01,  1.8153e-01,
         -2.4328e-01, -8.7316e-01,  2.3579e-01, -1.3823e-01, -1.9701e-01,
         -4.8237e-01,  2.5937e-01, -1.1272e-02, -2.2000e-01,  4.2518e-02,
          4.2070e-01,  1.8256e-01, -4.3527e-01,  1.8210e-01,  1.2406e-01,
          8.6004e-02,  5.6323e-02, -2.8188e-01,  3.1671e-01, -1.2093e-01,
         -2.3933e-02, -1.5009e-01, -6.4967e-02, -1.7860e-01,  3.7233e-01,
         -1.1780e-01, -1.8813e-01,  6.6494e-02, -3.3932e-02,  1.3665e-01,
         -1.8372e-01, -1.9377e-01, -7.8994e-02, -7.9985e-02,  3.1054e-01,
         -1.0998e-01, -8.6217e-02,  6.9307e-02,  2.7005e-01,  9.3565e-02,
          4.4168e-02, -5.6593e-01,  2.1125e-01,  1.2571e-01,  7.7983e-02,
         -8.8473e-02,  4.6937e-01, -7.2201e-02, -2.1049e-03,  7.9384e-02,
          2.6450e-01,  3.6478e-01,  3.7850e-02,  1.4689e-01,  3.2525e-01,
         -1.2248e-01, -3.1972e-01, -6.1284e-02, -2.1476e-01,  1.0718e-01,
          6.7493e-02, -3.2423e-02, -1.5807e-01,  5.1735e-02, -2.3890e-02,
          9.1934e-02,  1.0769e-01, -6.4187e-03, -2.8257e-02, -1.5734e-01,
          1.1923e-01,  1.2738e-01,  2.3990e-01,  1.3158e-02, -1.7337e-01,
         -1.2652e-01,  2.1530e-01,  1.2004e-02, -1.4770e-01, -5.8041e-02,
         -1.6318e-01,  3.5812e-02,  5.6484e-02, -1.4524e-01,  5.5598e-02,
          1.3532e-02,  2.1552e-02, -1.4235e-01, -7.6216e-02,  2.5165e-01,
          1.5715e-01, -5.9576e-02, -4.9191e-02, -1.0874e-01, -1.0406e-01,
          7.8224e-02, -2.0817e-03, -2.1381e-01, -9.4471e-02, -3.5814e-02,
          1.3618e-01,  1.3832e-01, -7.8149e-02,  1.1255e-01, -1.1912e-01,
         -1.6068e-02,  3.7983e-02, -6.8528e-02,  5.4762e-02, -1.0913e-03,
          6.5200e-02]], device='cuda:0') tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
573000 特征值优化 tensor(0.4866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8424e-01,  4.4453e-03, -9.5363e-01, -1.0158e+00,  2.2956e+00,
          4.1134e+00,  7.8611e-01, -2.1288e+00,  1.0722e-01, -3.0205e-01,
          4.9102e-01, -5.8568e-01, -7.5393e-02, -7.9594e-02,  4.8024e-01,
          1.0733e+00, -4.7530e-01,  5.8401e-01,  5.8390e-01,  1.0531e+00,
          7.2891e-02,  7.5409e-02, -9.5113e-02, -1.8983e-01, -5.2688e-01,
          9.5152e-01,  7.4918e-01,  4.9340e-01, -3.4812e-01,  2.3734e-01,
          2.6128e-01,  4.0945e-02, -1.3451e-02, -1.4207e-01,  2.0060e-01,
          3.1197e-01,  3.6079e-01, -4.5051e-02,  3.1769e-01, -1.4325e-01,
          2.0908e-01,  3.8910e-02, -1.3423e-01,  5.2321e-02, -4.1356e-01,
          7.4969e-02,  3.2611e-01,  2.3159e-01, -3.1070e-01,  1.8232e-01,
         -2.4715e-01, -8.7575e-01,  2.1058e-01, -1.3730e-01, -1.8235e-01,
         -4.7154e-01,  2.5785e-01,  1.2992e-03, -2.3039e-01,  3.5774e-02,
          4.1649e-01,  1.7451e-01, -4.4081e-01,  1.7573e-01,  1.2898e-01,
          9.1698e-02,  5.6779e-02, -2.8948e-01,  3.0736e-01, -1.2732e-01,
         -2.5841e-02, -1.4256e-01, -6.5988e-02, -1.7159e-01,  3.7745e-01,
         -1.1485e-01, -1.8287e-01,  8.4329e-02, -2.0577e-02,  1.2688e-01,
         -1.7528e-01, -1.9193e-01, -6.9880e-02, -7.9729e-02,  3.2516e-01,
         -1.2877e-01, -7.6807e-02,  6.1906e-02,  3.0512e-01,  1.2554e-01,
          5.3371e-02, -5.7034e-01,  2.1249e-01,  1.3475e-01,  6.9457e-02,
         -7.9827e-02,  4.6396e-01, -5.6535e-02, -3.8043e-03,  6.0837e-02,
          2.5250e-01,  3.6610e-01,  1.6413e-02,  1.4916e-01,  3.2577e-01,
         -1.2372e-01, -3.2418e-01, -7.0074e-02, -1.9053e-01,  1.1136e-01,
          7.2754e-02, -2.9169e-02, -1.4620e-01,  3.2267e-02, -7.9984e-03,
          9.6990e-02,  9.9375e-02,  1.5952e-02, -5.6243e-02, -1.3843e-01,
          1.2840e-01,  1.2762e-01,  2.3993e-01,  2.4943e-02, -1.6774e-01,
         -1.2516e-01,  2.0414e-01,  1.5790e-02, -1.5410e-01, -5.6890e-02,
         -1.6237e-01,  4.3432e-02,  5.5029e-02, -1.5084e-01,  4.8370e-02,
          2.3616e-02,  1.3877e-02, -1.5600e-01, -7.3122e-02,  2.6872e-01,
          1.5064e-01, -5.5573e-02, -5.3242e-02, -1.2785e-01, -8.2945e-02,
          7.2732e-02, -7.5632e-04, -2.0503e-01, -1.0361e-01, -4.1950e-02,
          1.3160e-01,  1.5395e-01, -7.3935e-02,  1.0957e-01, -1.3443e-01,
         -8.1421e-04,  4.4484e-02, -7.6518e-02,  5.3396e-02,  4.8849e-04,
          6.2542e-02]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
574000 特征值优化 tensor(0.4865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8525e-01, -1.8281e-02, -9.6033e-01, -1.0159e+00,  2.3010e+00,
          4.1313e+00,  7.8081e-01, -2.1123e+00,  1.0943e-01, -3.3446e-01,
          4.8285e-01, -5.8285e-01, -4.8742e-02, -6.4004e-02,  4.7423e-01,
          1.0695e+00, -4.9575e-01,  5.7576e-01,  5.8330e-01,  1.0467e+00,
          7.4121e-02,  7.2451e-02, -1.0580e-01, -1.9829e-01, -5.3541e-01,
          9.4501e-01,  7.4880e-01,  5.0296e-01, -3.3181e-01,  2.4438e-01,
          2.5788e-01,  5.6369e-02, -3.3451e-02, -1.4261e-01,  2.1012e-01,
          3.1785e-01,  3.5772e-01, -5.7293e-02,  3.1925e-01, -1.5459e-01,
          2.0884e-01,  3.9307e-02, -1.3479e-01,  5.2260e-02, -4.1898e-01,
          7.2081e-02,  3.2936e-01,  2.1669e-01, -3.2514e-01,  1.8397e-01,
         -2.4961e-01, -8.8693e-01,  1.9188e-01, -1.3208e-01, -1.6796e-01,
         -4.6044e-01,  2.6109e-01,  1.5957e-02, -2.4212e-01,  2.8033e-02,
          4.0433e-01,  1.7064e-01, -4.4240e-01,  1.7808e-01,  1.0915e-01,
          9.2210e-02,  6.2055e-02, -2.8954e-01,  3.0801e-01, -1.2618e-01,
         -2.2086e-02, -1.3761e-01, -6.7031e-02, -1.6504e-01,  3.8361e-01,
         -1.1789e-01, -1.7584e-01,  8.6610e-02, -1.1843e-02,  1.1680e-01,
         -1.7412e-01, -1.8830e-01, -6.6324e-02, -8.7855e-02,  3.3786e-01,
         -1.3280e-01, -7.2141e-02,  7.3030e-02,  3.2192e-01,  1.3910e-01,
          6.0869e-02, -5.7813e-01,  2.1408e-01,  1.3553e-01,  6.8305e-02,
         -7.7555e-02,  4.4895e-01, -6.0363e-02, -4.6284e-03,  3.5405e-02,
          2.5325e-01,  3.6421e-01,  1.0218e-02,  1.6352e-01,  3.3395e-01,
         -1.1505e-01, -3.3954e-01, -7.6862e-02, -1.7386e-01,  1.1530e-01,
          7.7251e-02, -2.9123e-02, -1.3922e-01,  2.5592e-02,  3.9668e-03,
          9.7319e-02,  8.9848e-02,  1.5285e-02, -6.3907e-02, -1.2365e-01,
          1.2879e-01,  1.3320e-01,  2.4010e-01,  2.7867e-02, -1.6327e-01,
         -1.2990e-01,  1.9559e-01,  2.4182e-02, -1.5962e-01, -5.0241e-02,
         -1.5499e-01,  4.5611e-02,  5.5628e-02, -1.5000e-01,  4.0234e-02,
          2.3983e-02,  1.6687e-02, -1.5977e-01, -7.6246e-02,  2.7079e-01,
          1.4557e-01, -5.2973e-02, -5.9725e-02, -1.3377e-01, -7.7272e-02,
          6.9355e-02, -2.6094e-04, -2.0836e-01, -9.4318e-02, -4.2781e-02,
          1.2579e-01,  1.6106e-01, -6.4259e-02,  1.0835e-01, -1.4197e-01,
          6.3899e-04,  4.4754e-02, -7.8623e-02,  5.4958e-02, -3.4463e-03,
          5.9187e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
575000 特征值优化 tensor(0.4874, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0849e-01, -3.4500e-02, -9.5508e-01, -1.0160e+00,  2.3460e+00,
          4.1366e+00,  7.6106e-01, -2.0845e+00,  1.1064e-01, -3.5732e-01,
          4.7185e-01, -5.8864e-01, -3.8864e-02, -4.5334e-02,  4.8418e-01,
          1.0810e+00, -5.0149e-01,  5.7746e-01,  5.8681e-01,  1.0384e+00,
          7.3005e-02,  8.0110e-02, -1.0885e-01, -1.9527e-01, -5.4749e-01,
          9.5731e-01,  7.4522e-01,  5.1155e-01, -3.2065e-01,  2.5660e-01,
          2.6474e-01,  5.9244e-02, -4.9133e-02, -1.3721e-01,  2.2688e-01,
          3.1361e-01,  3.4858e-01, -6.0407e-02,  3.1254e-01, -1.5532e-01,
          2.0679e-01,  3.9037e-02, -1.3605e-01,  5.3110e-02, -4.3138e-01,
          6.0556e-02,  3.3532e-01,  2.0689e-01, -3.2351e-01,  1.8544e-01,
         -2.4700e-01, -8.9666e-01,  1.7985e-01, -1.2866e-01, -1.6672e-01,
         -4.5032e-01,  2.5736e-01,  1.8986e-02, -2.5723e-01,  3.2974e-02,
          4.0200e-01,  1.7418e-01, -4.4592e-01,  1.7142e-01,  8.9022e-02,
          8.8428e-02,  6.6306e-02, -2.7634e-01,  3.1176e-01, -1.2447e-01,
         -2.1735e-02, -1.4145e-01, -7.1483e-02, -1.6942e-01,  3.8613e-01,
         -1.2252e-01, -1.7206e-01,  9.1470e-02, -1.6738e-02,  1.1890e-01,
         -1.7826e-01, -1.8711e-01, -6.9333e-02, -8.5001e-02,  3.4716e-01,
         -1.3588e-01, -7.7272e-02,  8.4500e-02,  3.2146e-01,  1.3654e-01,
          6.7127e-02, -5.7705e-01,  2.0812e-01,  1.3388e-01,  6.9867e-02,
         -7.9150e-02,  4.3576e-01, -6.7832e-02,  5.4497e-04,  2.7136e-02,
          2.3851e-01,  3.7010e-01, -5.8213e-05,  1.7031e-01,  3.3360e-01,
         -1.1062e-01, -3.3845e-01, -8.9418e-02, -1.5979e-01,  1.1745e-01,
          7.5033e-02, -2.0253e-02, -1.3361e-01,  2.6534e-02,  1.7354e-02,
          1.0373e-01,  7.6204e-02,  1.3458e-02, -5.6988e-02, -1.1279e-01,
          1.3398e-01,  1.3415e-01,  2.3721e-01,  3.1241e-02, -1.5704e-01,
         -1.2858e-01,  1.8923e-01,  2.7809e-02, -1.6400e-01, -4.4228e-02,
         -1.4783e-01,  3.5079e-02,  5.6988e-02, -1.4485e-01,  3.6259e-02,
          2.7119e-02,  2.7600e-02, -1.5597e-01, -8.5762e-02,  2.6565e-01,
          1.4006e-01, -6.2712e-02, -6.1961e-02, -1.3014e-01, -6.9237e-02,
          7.2825e-02,  9.2872e-03, -2.0043e-01, -9.6132e-02, -4.0462e-02,
          1.2709e-01,  1.5564e-01, -6.0031e-02,  1.1391e-01, -1.3490e-01,
         -6.2734e-03,  3.5611e-02, -8.5769e-02,  5.9721e-02, -9.0519e-03,
          5.5160e-02]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
576000 特征值优化 tensor(0.4863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0458e-01, -3.6735e-02, -9.4838e-01, -1.0164e+00,  2.3970e+00,
          4.1433e+00,  7.4586e-01, -2.0550e+00,  1.1315e-01, -3.9321e-01,
          4.6320e-01, -5.9714e-01, -3.5009e-02, -3.2912e-02,  4.9839e-01,
          1.0924e+00, -5.1281e-01,  5.7557e-01,  5.9046e-01,  1.0254e+00,
          7.7624e-02,  6.9267e-02, -1.0383e-01, -1.8999e-01, -5.4638e-01,
          9.7108e-01,  7.4800e-01,  5.2715e-01, -3.1970e-01,  2.6535e-01,
          2.7708e-01,  6.4778e-02, -5.6262e-02, -1.2230e-01,  2.3200e-01,
          3.0738e-01,  3.2917e-01, -5.7000e-02,  3.1295e-01, -1.4578e-01,
          1.9829e-01,  3.9285e-02, -1.3607e-01,  5.2789e-02, -4.4563e-01,
          4.8120e-02,  3.3727e-01,  2.0097e-01, -3.2300e-01,  1.9050e-01,
         -2.4466e-01, -9.0048e-01,  1.6865e-01, -1.2646e-01, -1.5705e-01,
         -4.3560e-01,  2.6545e-01,  1.0428e-02, -2.6982e-01,  3.8610e-02,
          4.0576e-01,  1.8519e-01, -4.3973e-01,  1.7640e-01,  5.0180e-02,
          7.3103e-02,  7.4651e-02, -2.5981e-01,  3.2118e-01, -1.2874e-01,
         -1.3560e-02, -1.4565e-01, -7.7624e-02, -1.6333e-01,  3.9677e-01,
         -1.3246e-01, -1.6990e-01,  8.4420e-02, -2.0030e-02,  1.2238e-01,
         -1.8019e-01, -1.8814e-01, -6.9044e-02, -7.9857e-02,  3.5690e-01,
         -1.3133e-01, -9.4842e-02,  9.2507e-02,  3.1548e-01,  1.0752e-01,
          7.2715e-02, -5.7602e-01,  1.9812e-01,  1.4374e-01,  7.2884e-02,
         -8.3499e-02,  4.2342e-01, -6.4353e-02, -2.3241e-03,  3.1832e-02,
          2.3672e-01,  3.6858e-01, -1.2795e-02,  1.8284e-01,  3.2414e-01,
         -9.5651e-02, -3.6161e-01, -9.5692e-02, -1.4889e-01,  1.1498e-01,
          7.0786e-02, -1.0908e-02, -1.3831e-01,  3.1048e-02,  2.6329e-02,
          1.0274e-01,  5.7512e-02,  3.2585e-03, -4.6387e-02, -9.9382e-02,
          1.2467e-01,  1.4244e-01,  2.3949e-01,  3.0686e-02, -1.4672e-01,
         -1.2504e-01,  1.8524e-01,  3.0090e-02, -1.6223e-01, -2.7268e-02,
         -1.4139e-01,  2.1608e-02,  5.8156e-02, -1.4069e-01,  3.5482e-02,
          1.8725e-02,  4.6638e-02, -1.3854e-01, -8.4965e-02,  2.4095e-01,
          1.1724e-01, -8.4344e-02, -4.9007e-02, -1.4811e-01, -6.9671e-02,
          8.4198e-02,  1.5672e-02, -2.0467e-01, -8.0085e-02, -4.4672e-02,
          1.3395e-01,  1.3648e-01, -4.7614e-02,  1.1610e-01, -1.1958e-01,
         -1.7888e-02,  3.4446e-02, -9.8753e-02,  6.5034e-02, -1.0494e-02,
          6.5861e-02]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
577000 特征值优化 tensor(0.4855, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8557e-01, -6.8150e-02, -9.4363e-01, -1.0166e+00,  2.4218e+00,
          4.1328e+00,  7.4183e-01, -2.0294e+00,  1.0028e-01, -4.1881e-01,
          4.7031e-01, -6.2518e-01, -4.7457e-02, -6.7965e-02,  5.0375e-01,
          1.1284e+00, -5.0128e-01,  5.7784e-01,  5.8459e-01,  1.0101e+00,
          5.5980e-02,  5.5466e-02, -1.2180e-01, -1.7143e-01, -5.4501e-01,
          9.4527e-01,  7.4271e-01,  5.2870e-01, -3.2176e-01,  2.7223e-01,
          2.6188e-01,  4.4742e-02, -7.3343e-02, -1.4765e-01,  2.4588e-01,
          3.0504e-01,  3.2732e-01, -6.4513e-02,  3.1702e-01, -1.7642e-01,
          2.1974e-01,  3.8671e-02, -1.3476e-01,  5.2334e-02, -4.5062e-01,
          3.8946e-02,  3.4121e-01,  1.9544e-01, -3.1988e-01,  1.8279e-01,
         -2.4281e-01, -9.1829e-01,  1.7517e-01, -1.2467e-01, -1.4800e-01,
         -4.4783e-01,  2.6072e-01,  2.4787e-02, -2.7400e-01,  3.7283e-02,
          4.0252e-01,  1.6674e-01, -4.6546e-01,  1.7031e-01,  3.4063e-02,
          7.4100e-02,  6.7842e-02, -2.6245e-01,  3.1334e-01, -1.3785e-01,
         -9.0613e-03, -1.3787e-01, -6.5376e-02, -1.4864e-01,  3.9430e-01,
         -1.2723e-01, -1.6956e-01,  8.2437e-02, -1.0885e-02,  1.2349e-01,
         -1.6946e-01, -1.9146e-01, -6.5739e-02, -8.6087e-02,  3.6381e-01,
         -1.3878e-01, -7.0049e-02,  9.7595e-02,  3.4424e-01,  1.2468e-01,
          8.0359e-02, -5.7414e-01,  1.9590e-01,  1.4140e-01,  7.8581e-02,
         -8.7581e-02,  4.0117e-01, -8.0579e-02,  2.2483e-02,  1.7471e-02,
          2.0619e-01,  3.6526e-01, -2.5382e-02,  1.7041e-01,  3.2838e-01,
         -9.9198e-02, -3.6177e-01, -9.0963e-02, -1.2574e-01,  1.2888e-01,
          6.2047e-02, -5.7536e-03, -1.2856e-01,  2.0762e-02,  3.2628e-02,
          9.5040e-02,  5.9493e-02,  4.0149e-03, -5.8608e-02, -1.1078e-01,
          1.4419e-01,  1.3061e-01,  2.3065e-01,  3.3845e-02, -1.3650e-01,
         -1.2803e-01,  1.7833e-01,  3.4455e-02, -1.7276e-01, -2.0202e-02,
         -1.5111e-01,  2.7307e-02,  5.2454e-02, -1.5043e-01,  3.8217e-02,
          3.6406e-02,  3.2451e-02, -1.4689e-01, -8.6856e-02,  2.6960e-01,
          1.3581e-01, -7.0466e-02, -7.4498e-02, -1.2730e-01, -4.5078e-02,
          8.5003e-02,  1.8476e-02, -1.9344e-01, -8.3402e-02, -3.4891e-02,
          1.3256e-01,  1.4622e-01, -4.5889e-02,  1.1441e-01, -1.3603e-01,
         -4.2658e-05,  3.3458e-02, -1.0373e-01,  5.9092e-02, -5.7692e-03,
          7.7504e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
578000 特征值优化 tensor(0.4864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6208e-01, -4.6961e-02, -9.4790e-01, -1.0150e+00,  2.4360e+00,
          4.1055e+00,  7.4133e-01, -2.0104e+00,  1.0046e-01, -4.4558e-01,
          4.7508e-01, -6.4971e-01, -3.3123e-02, -5.8658e-02,  5.0943e-01,
          1.1422e+00, -5.2173e-01,  5.8499e-01,  5.9478e-01,  1.0067e+00,
          5.4026e-02,  4.9331e-02, -1.2409e-01, -1.5079e-01, -5.3690e-01,
          9.4776e-01,  7.5670e-01,  5.2717e-01, -3.0826e-01,  2.7139e-01,
          2.6694e-01,  3.4615e-02, -7.6069e-02, -1.5109e-01,  2.4634e-01,
          2.9405e-01,  3.1816e-01, -6.7000e-02,  3.1984e-01, -1.8064e-01,
          2.2305e-01,  3.8787e-02, -1.3445e-01,  5.0924e-02, -4.4824e-01,
          4.0358e-02,  3.3962e-01,  2.0007e-01, -3.0769e-01,  1.7871e-01,
         -2.4190e-01, -9.2410e-01,  1.7816e-01, -1.2453e-01, -1.3941e-01,
         -4.4713e-01,  2.6703e-01,  2.8600e-02, -2.7198e-01,  4.4699e-02,
          4.0275e-01,  1.7508e-01, -4.7196e-01,  1.6428e-01,  1.9475e-02,
          7.4031e-02,  6.2397e-02, -2.5456e-01,  3.1455e-01, -1.4854e-01,
         -5.6444e-03, -1.4507e-01, -6.2674e-02, -1.4187e-01,  3.9557e-01,
         -1.3117e-01, -1.6532e-01,  8.7875e-02, -6.0442e-03,  1.3024e-01,
         -1.6243e-01, -1.8841e-01, -6.2275e-02, -6.5969e-02,  3.6943e-01,
         -1.4172e-01, -7.0260e-02,  1.0950e-01,  3.3318e-01,  1.1699e-01,
          8.9031e-02, -5.5791e-01,  1.8589e-01,  1.4129e-01,  8.0422e-02,
         -8.6855e-02,  3.8371e-01, -6.6882e-02,  2.2501e-02,  2.4820e-02,
          1.9327e-01,  3.6282e-01, -3.3500e-02,  1.6296e-01,  3.1718e-01,
         -1.0200e-01, -3.5718e-01, -1.0043e-01, -1.2658e-01,  1.3095e-01,
          5.9526e-02, -1.1357e-03, -1.2922e-01,  1.9969e-02,  4.5781e-02,
          9.3406e-02,  5.7386e-02,  9.4019e-03, -5.7828e-02, -1.0651e-01,
          1.4386e-01,  1.3025e-01,  2.2758e-01,  4.0380e-02, -1.3181e-01,
         -1.2336e-01,  1.7607e-01,  3.4607e-02, -1.7269e-01, -1.3144e-02,
         -1.4707e-01,  2.0693e-02,  5.0841e-02, -1.5300e-01,  4.4666e-02,
          3.3793e-02,  3.9025e-02, -1.3848e-01, -9.0101e-02,  2.6428e-01,
          1.3133e-01, -7.5088e-02, -7.2168e-02, -1.2960e-01, -4.1495e-02,
          9.4284e-02,  2.6675e-02, -1.8323e-01, -7.5063e-02, -2.7626e-02,
          1.3405e-01,  1.4232e-01, -4.1046e-02,  1.2192e-01, -1.3997e-01,
         -1.0268e-03,  2.9609e-02, -1.0406e-01,  5.6843e-02, -4.5205e-03,
          8.8091e-02]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
579000 特征值优化 tensor(0.4860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0378e-01, -3.6054e-02, -9.4343e-01, -1.0151e+00,  2.4532e+00,
          4.0801e+00,  7.4811e-01, -2.0006e+00,  9.3451e-02, -4.6213e-01,
          4.9748e-01, -6.6499e-01, -5.2555e-02, -5.1773e-02,  5.1529e-01,
          1.1616e+00, -5.2949e-01,  5.8967e-01,  5.9516e-01,  9.9764e-01,
          4.7172e-02,  3.3642e-02, -1.3623e-01, -1.3271e-01, -5.2486e-01,
          9.4092e-01,  7.5320e-01,  5.3055e-01, -2.9658e-01,  2.6764e-01,
          2.5995e-01,  3.8619e-02, -6.7076e-02, -1.4049e-01,  2.4888e-01,
          2.9183e-01,  3.0567e-01, -7.1640e-02,  3.1935e-01, -1.9040e-01,
          2.3350e-01,  3.8530e-02, -1.3464e-01,  5.2229e-02, -4.4499e-01,
          4.0724e-02,  3.4366e-01,  1.9878e-01, -3.0470e-01,  1.7263e-01,
         -2.3544e-01, -9.2644e-01,  1.7762e-01, -1.2806e-01, -1.2959e-01,
         -4.4193e-01,  2.7267e-01,  4.0356e-02, -2.6785e-01,  4.3087e-02,
          3.9553e-01,  1.7487e-01, -4.7793e-01,  1.6111e-01,  1.1950e-02,
          7.3165e-02,  6.8532e-02, -2.5446e-01,  3.1048e-01, -1.5876e-01,
         -4.9719e-04, -1.4523e-01, -5.4366e-02, -1.2995e-01,  3.9951e-01,
         -1.3269e-01, -1.6059e-01,  7.8445e-02, -1.1825e-02,  1.3343e-01,
         -1.5264e-01, -1.9074e-01, -5.8865e-02, -7.1479e-02,  3.8889e-01,
         -1.5060e-01, -6.7930e-02,  1.1857e-01,  3.3661e-01,  1.1600e-01,
          1.0174e-01, -5.5366e-01,  1.8051e-01,  1.3405e-01,  7.9784e-02,
         -8.8047e-02,  3.6477e-01, -5.4805e-02,  4.0593e-02,  3.1368e-02,
          2.0021e-01,  3.5037e-01, -3.3964e-02,  1.6051e-01,  3.0077e-01,
         -9.6289e-02, -3.6728e-01, -1.0347e-01, -1.1651e-01,  1.3037e-01,
          5.7947e-02, -1.0561e-03, -1.2834e-01,  2.7407e-02,  4.9861e-02,
          8.3121e-02,  5.5076e-02,  1.3909e-02, -5.2614e-02, -1.0791e-01,
          1.4645e-01,  1.3077e-01,  2.2933e-01,  4.8733e-02, -1.2648e-01,
         -1.2638e-01,  1.6551e-01,  3.9148e-02, -1.8117e-01, -5.0156e-03,
         -1.4528e-01,  1.9154e-02,  4.6438e-02, -1.6152e-01,  4.8163e-02,
          2.5563e-02,  4.8535e-02, -1.3378e-01, -9.7388e-02,  2.6002e-01,
          1.3397e-01, -7.0759e-02, -7.0557e-02, -1.3423e-01, -3.4797e-02,
          9.4049e-02,  3.6340e-02, -1.7623e-01, -7.2557e-02, -1.3969e-02,
          1.4286e-01,  1.4010e-01, -3.7974e-02,  1.2480e-01, -1.5579e-01,
         -3.4286e-03,  2.1909e-02, -1.0219e-01,  5.1508e-02, -5.6083e-03,
          9.8568e-02]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
580000 特征值优化 tensor(0.4881, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.6809e-02, -7.9026e-03, -9.6361e-01, -1.0154e+00,  2.5343e+00,
          4.0520e+00,  7.4590e-01, -1.9561e+00,  8.1359e-02, -4.9139e-01,
          5.0823e-01, -6.6785e-01, -6.4914e-02, -2.4482e-02,  5.1437e-01,
          1.1518e+00, -5.5727e-01,  5.8589e-01,  6.1114e-01,  9.8200e-01,
          1.9546e-02,  2.6227e-02, -1.4575e-01, -1.2842e-01, -5.2540e-01,
          9.5114e-01,  7.6000e-01,  5.2406e-01, -2.8033e-01,  2.6557e-01,
          2.6678e-01,  4.6128e-02, -6.4721e-02, -1.5256e-01,  2.5639e-01,
          2.6675e-01,  2.9094e-01, -5.9284e-02,  3.1975e-01, -1.7482e-01,
          2.2978e-01,  3.8937e-02, -1.3068e-01,  5.3633e-02, -4.4144e-01,
          3.8549e-02,  3.4745e-01,  1.8222e-01, -3.0508e-01,  1.7559e-01,
         -2.3387e-01, -9.2524e-01,  1.5711e-01, -1.3991e-01, -1.3189e-01,
         -4.4221e-01,  2.9676e-01,  5.1460e-02, -2.6955e-01,  5.8709e-02,
          3.9634e-01,  1.8304e-01, -4.7622e-01,  1.4686e-01, -9.5351e-03,
          8.6828e-02,  6.4114e-02, -2.5958e-01,  3.0442e-01, -1.7113e-01,
         -1.7552e-03, -1.4961e-01, -5.4505e-02, -1.3434e-01,  4.0290e-01,
         -1.4689e-01, -1.5307e-01,  9.5497e-02, -6.3240e-03,  1.4214e-01,
         -1.4600e-01, -1.8252e-01, -4.6097e-02, -5.3311e-02,  3.8995e-01,
         -1.5272e-01, -8.1957e-02,  1.1969e-01,  3.0659e-01,  8.0853e-02,
          1.0900e-01, -5.3674e-01,  1.5334e-01,  1.3748e-01,  6.4757e-02,
         -7.8338e-02,  3.4784e-01, -4.0042e-02,  1.8105e-02,  4.2876e-02,
          1.7929e-01,  3.5387e-01, -5.3103e-02,  1.7224e-01,  2.8960e-01,
         -1.0171e-01, -3.9111e-01, -1.1709e-01, -1.0286e-01,  1.3146e-01,
          5.7404e-02, -1.2568e-02, -1.0641e-01,  3.1575e-02,  5.9531e-02,
          9.0506e-02,  5.7555e-02,  6.7391e-03, -4.8181e-02, -8.3204e-02,
          1.5134e-01,  1.3574e-01,  2.2872e-01,  5.5951e-02, -1.2290e-01,
         -1.2863e-01,  1.5662e-01,  4.6047e-02, -1.7678e-01, -2.8700e-03,
         -1.4068e-01,  1.3675e-02,  4.9598e-02, -1.4887e-01,  4.9010e-02,
          2.0612e-02,  6.1475e-02, -1.3288e-01, -1.0655e-01,  2.5001e-01,
          1.2642e-01, -9.0560e-02, -7.6616e-02, -1.2789e-01, -3.5190e-02,
          1.0252e-01,  4.3155e-02, -1.6929e-01, -7.6456e-02, -4.4615e-03,
          1.4313e-01,  1.3231e-01, -4.5713e-02,  1.2572e-01, -1.4888e-01,
         -3.3897e-03,  1.2352e-02, -9.0448e-02,  5.0722e-02,  1.2766e-02,
          9.3922e-02]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
581000 特征值优化 tensor(0.4856, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.9211e-03, -1.9295e-02, -9.7614e-01, -1.0170e+00,  2.5708e+00,
          4.0242e+00,  7.5895e-01, -1.9297e+00,  8.2198e-02, -5.1223e-01,
          5.2562e-01, -6.6311e-01, -6.7439e-02, -2.3323e-02,  4.9758e-01,
          1.1527e+00, -5.5454e-01,  5.9204e-01,  6.2016e-01,  9.7341e-01,
          3.8831e-03,  2.0628e-02, -1.5152e-01, -1.3146e-01, -5.2928e-01,
          9.4167e-01,  7.5558e-01,  5.2206e-01, -2.7858e-01,  2.6266e-01,
          2.6461e-01,  3.4095e-02, -5.5029e-02, -1.5448e-01,  2.6715e-01,
          2.6483e-01,  2.8015e-01, -6.6742e-02,  3.1746e-01, -1.7831e-01,
          2.4093e-01,  3.7730e-02, -1.2954e-01,  5.0390e-02, -4.3772e-01,
          3.8173e-02,  3.4966e-01,  1.8199e-01, -2.9774e-01,  1.6473e-01,
         -2.2980e-01, -9.2786e-01,  1.5864e-01, -1.4511e-01, -1.3217e-01,
         -4.4852e-01,  3.0985e-01,  5.4482e-02, -2.6871e-01,  6.0627e-02,
          4.0006e-01,  1.7925e-01, -4.7921e-01,  1.4212e-01, -1.9185e-02,
          9.1603e-02,  6.2917e-02, -2.6226e-01,  3.0119e-01, -1.8066e-01,
          1.9591e-03, -1.4865e-01, -5.1577e-02, -1.2968e-01,  4.0206e-01,
         -1.5079e-01, -1.5409e-01,  9.4887e-02, -8.9429e-03,  1.4428e-01,
         -1.4184e-01, -1.8070e-01, -4.2450e-02, -5.9803e-02,  4.0100e-01,
         -1.5649e-01, -7.2163e-02,  1.1874e-01,  3.1037e-01,  8.7341e-02,
          1.2158e-01, -5.2818e-01,  1.4851e-01,  1.2835e-01,  6.3203e-02,
         -7.3904e-02,  3.3503e-01, -2.2173e-02,  1.8803e-02,  4.5013e-02,
          1.7027e-01,  3.4442e-01, -4.6325e-02,  1.7365e-01,  2.9038e-01,
         -1.1230e-01, -3.9888e-01, -1.1450e-01, -1.0008e-01,  1.3906e-01,
          5.5997e-02, -9.3252e-03, -1.0354e-01,  4.1852e-02,  6.2275e-02,
          8.8335e-02,  6.1673e-02,  5.7079e-03, -4.6780e-02, -8.2791e-02,
          1.5924e-01,  1.3717e-01,  2.3108e-01,  6.2403e-02, -1.1768e-01,
         -1.3045e-01,  1.5434e-01,  5.2006e-02, -1.7826e-01, -3.0673e-03,
         -1.4138e-01,  1.6369e-02,  4.7785e-02, -1.5060e-01,  4.8237e-02,
          1.9615e-02,  7.0388e-02, -1.2734e-01, -1.1596e-01,  2.3941e-01,
          1.2148e-01, -7.8371e-02, -7.5119e-02, -1.2849e-01, -3.2135e-02,
          9.8712e-02,  5.0035e-02, -1.6042e-01, -8.5143e-02, -1.6154e-04,
          1.4835e-01,  1.3682e-01, -4.4615e-02,  1.2167e-01, -1.6101e-01,
         -3.6689e-03,  6.6464e-03, -8.4693e-02,  5.3204e-02,  1.8798e-02,
          1.0163e-01]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
582000 特征值优化 tensor(0.4854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4181e-02, -1.3636e-02, -9.7858e-01, -1.0155e+00,  2.6169e+00,
          4.0000e+00,  7.6598e-01, -1.9184e+00,  8.4467e-02, -5.1542e-01,
          5.3923e-01, -6.6294e-01, -7.7720e-02, -2.9424e-02,  4.9103e-01,
          1.1495e+00, -5.4981e-01,  5.9731e-01,  6.2731e-01,  9.7266e-01,
         -4.1746e-03,  1.4934e-02, -1.5855e-01, -1.3293e-01, -5.2364e-01,
          9.3580e-01,  7.5042e-01,  5.0481e-01, -2.7480e-01,  2.6203e-01,
          2.6279e-01,  3.1321e-02, -5.2807e-02, -1.6026e-01,  2.7523e-01,
          2.6551e-01,  2.7079e-01, -6.9084e-02,  3.1705e-01, -1.8035e-01,
          2.4607e-01,  3.7602e-02, -1.2805e-01,  5.1458e-02, -4.3969e-01,
          3.8491e-02,  3.5451e-01,  1.8016e-01, -2.9923e-01,  1.5795e-01,
         -2.3192e-01, -9.3215e-01,  1.5908e-01, -1.4574e-01, -1.2890e-01,
         -4.5379e-01,  3.1673e-01,  6.7644e-02, -2.7040e-01,  6.1292e-02,
          4.0490e-01,  1.7834e-01, -4.8167e-01,  1.4274e-01, -1.9805e-02,
          9.1199e-02,  6.5800e-02, -2.6194e-01,  3.0073e-01, -1.8462e-01,
          3.7730e-03, -1.4781e-01, -4.7200e-02, -1.2827e-01,  4.0030e-01,
         -1.5564e-01, -1.5340e-01,  9.1174e-02, -1.0433e-02,  1.4245e-01,
         -1.4181e-01, -1.7800e-01, -3.8810e-02, -6.0476e-02,  4.0332e-01,
         -1.5170e-01, -7.4222e-02,  1.1488e-01,  3.1080e-01,  8.1632e-02,
          1.2409e-01, -5.2304e-01,  1.4561e-01,  1.2700e-01,  6.0591e-02,
         -7.3078e-02,  3.2279e-01, -4.3561e-03,  1.7458e-02,  4.8931e-02,
          1.6105e-01,  3.3362e-01, -4.1586e-02,  1.7277e-01,  2.8941e-01,
         -1.1417e-01, -4.0534e-01, -1.0610e-01, -1.0422e-01,  1.3782e-01,
          5.0516e-02, -1.3750e-02, -1.0189e-01,  4.1568e-02,  6.5749e-02,
          9.0217e-02,  5.9339e-02,  4.1460e-03, -4.3015e-02, -8.7289e-02,
          1.5872e-01,  1.3988e-01,  2.3383e-01,  6.4806e-02, -1.1290e-01,
         -1.3342e-01,  1.5048e-01,  5.2190e-02, -1.8340e-01, -1.4397e-03,
         -1.4159e-01,  1.7772e-02,  4.6612e-02, -1.5381e-01,  4.6042e-02,
          8.6019e-03,  7.1857e-02, -1.2329e-01, -1.1831e-01,  2.3955e-01,
          1.2463e-01, -7.5143e-02, -8.3865e-02, -1.2914e-01, -2.9850e-02,
          1.0031e-01,  5.3823e-02, -1.5678e-01, -8.8286e-02,  5.0834e-03,
          1.5288e-01,  1.3718e-01, -4.5560e-02,  1.2295e-01, -1.6099e-01,
         -4.0446e-03,  2.8348e-03, -8.3183e-02,  5.4604e-02,  2.1597e-02,
          1.0255e-01]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
583000 特征值优化 tensor(0.4931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9900e-02,  1.0065e-02, -9.8557e-01, -1.0085e+00,  2.6564e+00,
          3.9687e+00,  7.6502e-01, -1.8944e+00,  8.8775e-02, -5.2402e-01,
          5.1456e-01, -6.6603e-01, -6.5755e-02, -3.7529e-03,  4.8963e-01,
          1.1333e+00, -5.5756e-01,  6.0544e-01,  6.3577e-01,  9.8245e-01,
         -6.1185e-03,  1.7074e-03, -1.6094e-01, -1.2326e-01, -5.1807e-01,
          9.4778e-01,  7.5718e-01,  5.1835e-01, -2.5858e-01,  2.6948e-01,
          2.7261e-01,  3.5506e-02, -5.7582e-02, -1.4040e-01,  2.7948e-01,
          2.5189e-01,  2.5882e-01, -7.1777e-02,  3.2715e-01, -1.6970e-01,
          2.3515e-01,  3.9453e-02, -1.3180e-01,  4.9332e-02, -4.4259e-01,
          2.3442e-02,  3.4995e-01,  1.7047e-01, -2.9870e-01,  1.5336e-01,
         -2.2873e-01, -9.3639e-01,  1.6488e-01, -1.4717e-01, -1.2041e-01,
         -4.4530e-01,  3.3791e-01,  5.9084e-02, -2.7388e-01,  7.2452e-02,
          4.1374e-01,  1.8335e-01, -4.8266e-01,  1.3271e-01, -2.4601e-02,
          9.3573e-02,  5.7634e-02, -2.6193e-01,  3.0504e-01, -1.8992e-01,
          3.4285e-03, -1.5338e-01, -5.3396e-02, -1.4224e-01,  4.0012e-01,
         -1.5569e-01, -1.5159e-01,  9.7590e-02,  2.1036e-04,  1.4526e-01,
         -1.4675e-01, -1.7546e-01, -3.9442e-02, -3.4775e-02,  3.9056e-01,
         -1.5806e-01, -1.0038e-01,  1.2679e-01,  2.7922e-01,  4.7015e-02,
          1.2856e-01, -5.1081e-01,  1.2979e-01,  1.3479e-01,  6.5377e-02,
         -7.4340e-02,  2.9821e-01, -8.8612e-03,  6.4527e-03,  5.1222e-02,
          1.5883e-01,  3.3213e-01, -3.6784e-02,  1.8071e-01,  2.8801e-01,
         -1.3235e-01, -4.2148e-01, -1.0928e-01, -1.0932e-01,  1.3316e-01,
          5.3010e-02, -1.1809e-03, -1.1049e-01,  4.3303e-02,  5.5724e-02,
          8.8789e-02,  6.5015e-02, -2.5415e-03, -3.8474e-02, -7.0348e-02,
          1.5710e-01,  1.4044e-01,  2.2506e-01,  6.4537e-02, -1.1607e-01,
         -1.3964e-01,  1.4692e-01,  5.3697e-02, -1.7400e-01, -2.6090e-03,
         -1.3852e-01,  1.0994e-02,  4.2133e-02, -1.4463e-01,  5.1349e-02,
          1.1607e-02,  6.1784e-02, -1.1424e-01, -1.0839e-01,  2.5021e-01,
          1.4040e-01, -9.3704e-02, -8.6539e-02, -1.3027e-01, -3.3112e-02,
          1.1644e-01,  4.4229e-02, -1.5348e-01, -9.1060e-02,  1.0410e-03,
          1.5315e-01,  1.2141e-01, -4.2079e-02,  1.2504e-01, -1.4717e-01,
         -1.7871e-02,  7.5252e-04, -8.6781e-02,  5.3411e-02,  2.2627e-02,
          8.3616e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
584000 特征值优化 tensor(0.4955, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4694e-02,  1.5199e-02, -9.8500e-01, -1.0123e+00,  2.6950e+00,
          3.9451e+00,  7.6033e-01, -1.8803e+00,  8.5388e-02, -5.2338e-01,
          5.1504e-01, -6.7590e-01, -5.3632e-02, -5.6957e-03,  4.7388e-01,
          1.1243e+00, -5.5673e-01,  6.0746e-01,  6.3352e-01,  9.7803e-01,
         -3.7967e-03,  4.6110e-04, -1.5687e-01, -1.1184e-01, -5.2190e-01,
          9.5367e-01,  7.6434e-01,  5.1720e-01, -2.4180e-01,  2.6655e-01,
          2.7494e-01,  3.7430e-02, -5.1802e-02, -1.5220e-01,  2.8377e-01,
          2.5328e-01,  2.4537e-01, -7.8049e-02,  3.2617e-01, -1.7635e-01,
          2.3498e-01,  3.8270e-02, -1.3126e-01,  5.1081e-02, -4.4108e-01,
          2.4970e-02,  3.5057e-01,  1.6380e-01, -2.9458e-01,  1.4312e-01,
         -2.3017e-01, -9.3074e-01,  1.6758e-01, -1.4512e-01, -1.1289e-01,
         -4.4831e-01,  3.4324e-01,  4.9973e-02, -2.7096e-01,  7.1062e-02,
          4.1902e-01,  1.8368e-01, -4.8573e-01,  1.2883e-01, -3.2148e-02,
          9.3263e-02,  6.1091e-02, -2.6720e-01,  3.0782e-01, -1.9097e-01,
          6.1349e-03, -1.5548e-01, -5.5709e-02, -1.3519e-01,  4.0393e-01,
         -1.5993e-01, -1.5659e-01,  9.7293e-02, -4.3852e-05,  1.4603e-01,
         -1.4237e-01, -1.7425e-01, -3.2719e-02, -3.3031e-02,  3.9268e-01,
         -1.5621e-01, -1.0718e-01,  1.3311e-01,  2.7603e-01,  5.0078e-02,
          1.3319e-01, -5.0059e-01,  1.2169e-01,  1.4330e-01,  6.2250e-02,
         -7.2191e-02,  2.9084e-01,  3.0602e-03,  1.0604e-02,  6.7695e-02,
          1.5412e-01,  3.3375e-01, -3.7541e-02,  1.9197e-01,  2.8692e-01,
         -1.3927e-01, -4.4526e-01, -1.0883e-01, -1.0460e-01,  1.3124e-01,
          5.0495e-02,  8.9078e-03, -1.1102e-01,  3.7363e-02,  6.2960e-02,
          8.6937e-02,  6.4239e-02,  9.9615e-04, -4.1590e-02, -6.7292e-02,
          1.5924e-01,  1.4100e-01,  2.2398e-01,  6.2764e-02, -1.1400e-01,
         -1.3930e-01,  1.5292e-01,  5.8478e-02, -1.7405e-01, -1.6911e-03,
         -1.4353e-01,  9.5876e-03,  4.1830e-02, -1.4524e-01,  5.5378e-02,
          6.3640e-03,  6.8824e-02, -1.0520e-01, -1.0170e-01,  2.4406e-01,
          1.4850e-01, -8.9224e-02, -8.9948e-02, -1.3741e-01, -2.8935e-02,
          1.2116e-01,  3.9689e-02, -1.5542e-01, -9.0198e-02,  7.2345e-04,
          1.6002e-01,  1.1864e-01, -4.0003e-02,  1.2672e-01, -1.4423e-01,
         -1.8614e-02,  3.3670e-04, -9.1877e-02,  5.9305e-02,  2.1323e-02,
          8.2234e-02]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
585000 特征值优化 tensor(0.4836, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4139e-02,  1.5063e-02, -9.7185e-01, -1.0161e+00,  2.7209e+00,
          3.9347e+00,  7.6031e-01, -1.8802e+00,  8.9659e-02, -5.2367e-01,
          5.2576e-01, -6.8450e-01, -5.2956e-02, -2.0938e-02,  4.8502e-01,
          1.1219e+00, -5.4211e-01,  6.1206e-01,  6.3409e-01,  9.7280e-01,
          2.0726e-03,  5.5685e-03, -1.5172e-01, -1.1702e-01, -5.2269e-01,
          9.5915e-01,  7.6494e-01,  5.0277e-01, -2.2842e-01,  2.6371e-01,
          2.6931e-01,  3.5179e-02, -5.2977e-02, -1.6381e-01,  2.9764e-01,
          2.6007e-01,  2.4806e-01, -7.5578e-02,  3.2588e-01, -1.8158e-01,
          2.3750e-01,  3.7899e-02, -1.2878e-01,  5.1569e-02, -4.4330e-01,
          2.6646e-02,  3.5190e-01,  1.6994e-01, -2.9497e-01,  1.3397e-01,
         -2.3123e-01, -9.2844e-01,  1.6448e-01, -1.4524e-01, -1.0830e-01,
         -4.5275e-01,  3.4042e-01,  5.8464e-02, -2.7327e-01,  6.7638e-02,
          4.1667e-01,  2.0006e-01, -4.8089e-01,  1.2975e-01, -4.0304e-02,
          8.2358e-02,  6.2731e-02, -2.6406e-01,  3.1434e-01, -1.8917e-01,
          5.0608e-03, -1.5460e-01, -5.8495e-02, -1.3415e-01,  4.0303e-01,
         -1.6263e-01, -1.5426e-01,  7.5854e-02, -1.2832e-02,  1.4487e-01,
         -1.4315e-01, -1.7152e-01, -3.4155e-02, -3.8578e-02,  3.9224e-01,
         -1.5251e-01, -1.1877e-01,  1.3268e-01,  2.8216e-01,  4.2791e-02,
          1.3450e-01, -4.9130e-01,  1.2584e-01,  1.3913e-01,  6.5115e-02,
         -7.7038e-02,  2.9376e-01,  4.2696e-03,  1.4325e-02,  6.9752e-02,
          1.7048e-01,  3.2685e-01, -5.2602e-02,  1.9511e-01,  2.8392e-01,
         -1.3555e-01, -4.4942e-01, -1.0696e-01, -1.1989e-01,  1.2638e-01,
          4.5255e-02,  6.4761e-03, -1.0964e-01,  3.6186e-02,  5.9186e-02,
          9.8904e-02,  6.1886e-02, -1.9564e-02, -4.2615e-02, -6.6959e-02,
          1.6130e-01,  1.4509e-01,  2.2266e-01,  6.2921e-02, -1.1471e-01,
         -1.4478e-01,  1.5720e-01,  5.7897e-02, -1.7678e-01, -1.5794e-03,
         -1.4654e-01,  1.0129e-02,  4.4746e-02, -1.4344e-01,  5.8687e-02,
          9.3064e-04,  7.5535e-02, -1.0785e-01, -1.0918e-01,  2.3936e-01,
          1.5509e-01, -7.4336e-02, -8.7684e-02, -1.4953e-01, -3.3334e-02,
          1.2232e-01,  4.1954e-02, -1.5917e-01, -8.8295e-02,  9.0839e-03,
          1.6147e-01,  1.1996e-01, -3.9256e-02,  1.3284e-01, -1.5015e-01,
         -2.4510e-02, -6.8129e-03, -8.8642e-02,  6.1735e-02,  2.5264e-02,
          7.9339e-02]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
586000 特征值优化 tensor(0.4860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.6943e-03,  1.4495e-02, -9.7477e-01, -1.0162e+00,  2.7486e+00,
          3.9255e+00,  7.5981e-01, -1.8672e+00,  8.8531e-02, -5.2671e-01,
          5.4050e-01, -6.8747e-01, -5.9722e-02, -3.5847e-02,  4.9752e-01,
          1.1249e+00, -5.1271e-01,  6.1931e-01,  6.2845e-01,  9.6629e-01,
          1.7240e-02, -3.9454e-04, -1.4763e-01, -1.3523e-01, -5.2682e-01,
          9.5826e-01,  7.5522e-01,  5.0091e-01, -2.2212e-01,  2.6611e-01,
          2.6725e-01,  2.3856e-02, -5.9987e-02, -1.5443e-01,  3.0266e-01,
          2.6758e-01,  2.5300e-01, -7.9862e-02,  3.2154e-01, -1.8262e-01,
          2.4508e-01,  3.6386e-02, -1.2871e-01,  5.1738e-02, -4.4268e-01,
          2.3616e-02,  3.5210e-01,  1.8627e-01, -2.7927e-01,  1.2849e-01,
         -2.3240e-01, -9.1671e-01,  1.6421e-01, -1.4893e-01, -1.1339e-01,
         -4.6420e-01,  3.3301e-01,  5.0880e-02, -2.6710e-01,  5.9802e-02,
          4.2023e-01,  2.0777e-01, -4.8402e-01,  1.3118e-01, -4.8210e-02,
          8.7773e-02,  6.6878e-02, -2.5545e-01,  3.2379e-01, -1.8882e-01,
          5.1439e-03, -1.5199e-01, -5.2004e-02, -1.3943e-01,  3.9836e-01,
         -1.4854e-01, -1.6742e-01,  7.6245e-02, -1.9554e-02,  1.4530e-01,
         -1.4121e-01, -1.7142e-01, -3.5542e-02, -4.4377e-02,  3.9905e-01,
         -1.6112e-01, -1.1314e-01,  1.2791e-01,  2.7520e-01,  6.0821e-02,
          1.3906e-01, -4.9385e-01,  1.2379e-01,  1.2743e-01,  6.3356e-02,
         -7.4414e-02,  2.9449e-01, -1.0852e-02,  2.8902e-02,  3.9231e-02,
          1.8390e-01,  3.2419e-01, -4.4088e-02,  1.9466e-01,  2.8016e-01,
         -1.4279e-01, -4.3210e-01, -1.1352e-01, -1.1262e-01,  1.2701e-01,
          3.8486e-02,  8.2139e-03, -9.8239e-02,  3.9034e-02,  6.2583e-02,
          9.9388e-02,  6.8830e-02, -1.6237e-02, -4.0347e-02, -7.2156e-02,
          1.7171e-01,  1.4240e-01,  2.2718e-01,  6.2606e-02, -1.1866e-01,
         -1.3943e-01,  1.6065e-01,  5.6791e-02, -1.7688e-01, -8.2542e-04,
         -1.4879e-01,  1.9122e-02,  4.5661e-02, -1.4351e-01,  5.8264e-02,
         -5.2810e-03,  7.8377e-02, -1.1276e-01, -1.1371e-01,  2.3914e-01,
          1.6014e-01, -6.1294e-02, -8.5930e-02, -1.4057e-01, -3.0637e-02,
          1.1768e-01,  5.7122e-02, -1.5521e-01, -9.4759e-02,  1.2499e-02,
          1.6131e-01,  1.3366e-01, -3.7915e-02,  1.2658e-01, -1.6619e-01,
         -1.7726e-02, -1.3849e-02, -8.8812e-02,  5.9240e-02,  1.7735e-02,
          8.3463e-02]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
587000 特征值优化 tensor(0.4836, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8998e-02,  2.8017e-02, -9.6957e-01, -1.0163e+00,  2.7388e+00,
          3.9099e+00,  7.5959e-01, -1.8446e+00,  8.5732e-02, -5.2144e-01,
          5.2896e-01, -6.9696e-01, -4.4358e-02, -4.5703e-02,  4.9026e-01,
          1.1184e+00, -5.2090e-01,  6.2740e-01,  6.3707e-01,  9.7693e-01,
          1.2522e-02, -7.0397e-04, -1.5119e-01, -1.3226e-01, -5.3093e-01,
          9.6602e-01,  7.6738e-01,  5.0974e-01, -2.1190e-01,  2.6511e-01,
          2.7117e-01,  2.6080e-02, -6.4549e-02, -1.5913e-01,  3.0292e-01,
          2.6722e-01,  2.4725e-01, -8.7480e-02,  3.2157e-01, -1.8307e-01,
          2.4498e-01,  3.7360e-02, -1.2901e-01,  5.5622e-02, -4.4072e-01,
          1.7977e-02,  3.5155e-01,  1.7649e-01, -2.8654e-01,  1.2506e-01,
         -2.3254e-01, -9.1512e-01,  1.6924e-01, -1.4836e-01, -1.1231e-01,
         -4.5313e-01,  3.3318e-01,  5.1474e-02, -2.6456e-01,  6.0018e-02,
          4.0847e-01,  2.1086e-01, -4.8295e-01,  1.3303e-01, -5.0140e-02,
          9.0004e-02,  6.5443e-02, -2.6157e-01,  3.2431e-01, -1.9272e-01,
          2.8198e-04, -1.5563e-01, -5.3219e-02, -1.4542e-01,  3.9905e-01,
         -1.4909e-01, -1.6968e-01,  7.7010e-02, -1.2919e-02,  1.4657e-01,
         -1.3949e-01, -1.7255e-01, -3.7705e-02, -4.6964e-02,  3.9829e-01,
         -1.6221e-01, -1.0944e-01,  1.3040e-01,  2.7786e-01,  6.6691e-02,
          1.4778e-01, -4.8338e-01,  1.1331e-01,  1.2499e-01,  5.9565e-02,
         -7.3997e-02,  2.8930e-01,  2.3493e-03,  3.0281e-02,  6.9213e-02,
          1.7420e-01,  3.2195e-01, -5.6650e-02,  1.9916e-01,  2.7116e-01,
         -1.3609e-01, -4.4390e-01, -1.1369e-01, -1.0894e-01,  1.2446e-01,
          4.1340e-02,  1.0820e-02, -9.4049e-02,  3.9396e-02,  5.4492e-02,
          9.4276e-02,  6.8008e-02, -2.0121e-02, -4.0665e-02, -6.8837e-02,
          1.7054e-01,  1.4485e-01,  2.2182e-01,  6.4526e-02, -1.2129e-01,
         -1.4628e-01,  1.5593e-01,  6.0424e-02, -1.7445e-01, -2.2440e-03,
         -1.5543e-01,  1.9368e-02,  4.3304e-02, -1.4490e-01,  5.5524e-02,
         -5.3457e-03,  7.2061e-02, -1.1120e-01, -1.0413e-01,  2.5470e-01,
          1.6898e-01, -7.5359e-02, -9.3886e-02, -1.4074e-01, -1.8380e-02,
          1.2105e-01,  4.6068e-02, -1.5235e-01, -1.0217e-01,  1.7719e-02,
          1.6053e-01,  1.2588e-01, -4.1790e-02,  1.2447e-01, -1.6187e-01,
         -2.4961e-02, -6.9643e-03, -9.1875e-02,  5.0247e-02,  1.9190e-02,
          7.9616e-02]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
588000 特征值优化 tensor(0.4844, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.8003e-03,  5.7752e-02, -9.8559e-01, -1.0156e+00,  2.7557e+00,
          3.9138e+00,  7.6381e-01, -1.8389e+00,  6.1384e-02, -5.2756e-01,
          5.4965e-01, -7.0295e-01, -4.9861e-02, -1.6135e-02,  4.8122e-01,
          1.1128e+00, -5.1405e-01,  6.2226e-01,  6.4755e-01,  9.7922e-01,
          1.4261e-03, -4.8561e-04, -1.5401e-01, -1.2571e-01, -5.4067e-01,
          9.2872e-01,  7.6651e-01,  5.1303e-01, -2.6110e-01,  2.5780e-01,
          2.6117e-01,  2.6424e-02, -4.4703e-02, -1.6269e-01,  3.0424e-01,
          2.7147e-01,  2.3335e-01, -8.2085e-02,  3.3194e-01, -1.8961e-01,
          2.4677e-01,  3.7503e-02, -1.2806e-01,  5.0109e-02, -4.3492e-01,
          2.3920e-02,  3.5248e-01,  1.7514e-01, -2.8592e-01,  1.2508e-01,
         -2.3990e-01, -9.1635e-01,  1.6581e-01, -1.5051e-01, -1.0338e-01,
         -4.5736e-01,  3.2991e-01,  3.4819e-02, -2.6814e-01,  6.1545e-02,
          4.2898e-01,  1.9927e-01, -4.8337e-01,  1.4212e-01, -3.8503e-02,
          1.0305e-01,  7.2131e-02, -2.5680e-01,  3.1977e-01, -2.0016e-01,
          1.3528e-02, -1.5163e-01, -4.7166e-02, -1.1375e-01,  3.9390e-01,
         -1.6600e-01, -1.6979e-01,  1.1168e-01, -3.2395e-02,  1.4141e-01,
         -1.3864e-01, -1.6646e-01, -3.3271e-02, -3.4670e-02,  3.9412e-01,
         -1.5963e-01, -1.1718e-01,  1.2588e-01,  2.7334e-01,  6.6751e-02,
          1.3462e-01, -4.9387e-01,  1.2574e-01,  1.3700e-01,  6.0530e-02,
         -7.0348e-02,  2.9492e-01, -1.0963e-02,  3.2424e-02,  6.3258e-02,
          1.9981e-01,  3.2219e-01, -4.1436e-02,  1.8726e-01,  2.8371e-01,
         -1.3999e-01, -4.5341e-01, -1.0516e-01, -1.1336e-01,  1.3780e-01,
          4.2821e-02, -4.4442e-04, -9.7544e-02,  2.9572e-02,  8.0502e-02,
          8.0311e-02,  8.1314e-02, -5.7923e-03, -4.4017e-02, -7.8153e-02,
          1.6033e-01,  1.4942e-01,  2.3481e-01,  6.4303e-02, -1.1708e-01,
         -1.3332e-01,  1.4486e-01,  5.7416e-02, -1.8767e-01,  9.4945e-04,
         -1.5095e-01,  1.5232e-02,  4.8603e-02, -1.5056e-01,  5.4246e-02,
          3.1791e-02,  9.5903e-02, -1.1647e-01, -1.1698e-01,  2.1908e-01,
          1.4492e-01, -6.4332e-02, -8.1304e-02, -1.3972e-01, -3.4369e-02,
          1.0844e-01,  5.1890e-02, -1.5000e-01, -9.2461e-02,  1.0758e-02,
          1.5814e-01,  1.4071e-01, -4.6148e-02,  1.2605e-01, -1.6511e-01,
         -2.2590e-02,  2.2269e-03, -9.2218e-02,  5.6601e-02,  1.7006e-02,
          1.0845e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
589000 特征值优化 tensor(0.4845, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2482e-02,  4.8795e-02, -9.9099e-01, -1.0159e+00,  2.7618e+00,
          3.9185e+00,  7.5730e-01, -1.8286e+00,  7.5776e-02, -5.1527e-01,
          5.5570e-01, -6.9896e-01, -6.8496e-02, -5.8667e-03,  4.7958e-01,
          1.1080e+00, -5.1006e-01,  6.2693e-01,  6.5357e-01,  9.9247e-01,
         -7.3164e-03,  5.4260e-03, -1.5826e-01, -1.1542e-01, -5.4825e-01,
          9.2667e-01,  7.5881e-01,  5.0558e-01, -2.4881e-01,  2.6261e-01,
          2.6752e-01,  2.5115e-02, -3.5672e-02, -1.8068e-01,  3.1330e-01,
          2.7391e-01,  2.3118e-01, -7.7382e-02,  3.2949e-01, -1.8481e-01,
          2.4707e-01,  3.6914e-02, -1.2865e-01,  4.7333e-02, -4.3999e-01,
          1.3374e-02,  3.5591e-01,  1.6625e-01, -2.9438e-01,  1.2171e-01,
         -2.4020e-01, -9.1621e-01,  1.5671e-01, -1.5215e-01, -1.0388e-01,
         -4.5407e-01,  3.3840e-01,  4.0013e-02, -2.6916e-01,  6.0385e-02,
          4.2594e-01,  2.0303e-01, -4.8530e-01,  1.4396e-01, -3.1706e-02,
          1.0530e-01,  6.7942e-02, -2.5957e-01,  3.1999e-01, -2.0412e-01,
          1.0911e-02, -1.5129e-01, -4.4864e-02, -1.2374e-01,  3.9219e-01,
         -1.6799e-01, -1.6877e-01,  1.0745e-01, -4.0034e-02,  1.4189e-01,
         -1.3983e-01, -1.6620e-01, -3.4523e-02, -4.1934e-02,  3.9738e-01,
         -1.5035e-01, -1.0721e-01,  1.1764e-01,  2.6202e-01,  6.1016e-02,
          1.3959e-01, -4.8621e-01,  1.1807e-01,  1.3692e-01,  5.9478e-02,
         -6.7690e-02,  2.9719e-01, -7.4898e-03,  2.8831e-02,  9.1334e-02,
          1.8432e-01,  3.1806e-01, -4.5876e-02,  1.8903e-01,  2.8206e-01,
         -1.4239e-01, -4.4093e-01, -1.0807e-01, -1.1231e-01,  1.3233e-01,
          3.4447e-02,  3.2656e-03, -9.3509e-02,  2.4897e-02,  7.3367e-02,
          7.7499e-02,  8.0207e-02, -4.7399e-03, -4.0683e-02, -8.1953e-02,
          1.6549e-01,  1.4815e-01,  2.3112e-01,  6.8796e-02, -1.2067e-01,
         -1.3259e-01,  1.4556e-01,  5.6752e-02, -1.8468e-01, -6.6332e-04,
         -1.5172e-01,  1.5792e-02,  5.2611e-02, -1.5490e-01,  5.0383e-02,
          2.5673e-02,  8.5992e-02, -1.1266e-01, -1.1206e-01,  2.3444e-01,
          1.4100e-01, -7.3053e-02, -8.3649e-02, -1.2903e-01, -2.9452e-02,
          1.1568e-01,  5.0810e-02, -1.4410e-01, -9.2985e-02,  1.2356e-02,
          1.5737e-01,  1.3845e-01, -4.7273e-02,  1.2946e-01, -1.6436e-01,
         -2.0984e-02, -4.7274e-03, -9.4658e-02,  5.6146e-02,  1.7869e-02,
          1.0419e-01]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
590000 特征值优化 tensor(0.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6881e-02,  5.8309e-02, -1.0086e+00, -1.0162e+00,  2.7728e+00,
          3.9144e+00,  7.6069e-01, -1.8248e+00,  7.8156e-02, -5.0464e-01,
          5.4844e-01, -7.0799e-01, -7.9081e-02, -2.9321e-03,  4.8759e-01,
          1.1004e+00, -4.9492e-01,  6.2192e-01,  6.5474e-01,  9.9640e-01,
         -1.5491e-02,  4.9739e-03, -1.5947e-01, -1.2358e-01, -5.5137e-01,
          9.1673e-01,  7.5476e-01,  4.9843e-01, -2.5982e-01,  2.6265e-01,
          2.7459e-01,  2.6577e-02, -3.4969e-02, -1.7568e-01,  3.1586e-01,
          2.7283e-01,  2.2622e-01, -7.7458e-02,  3.3043e-01, -1.8618e-01,
          2.4730e-01,  3.7996e-02, -1.2997e-01,  4.1713e-02, -4.4207e-01,
          2.3198e-02,  3.6113e-01,  1.6125e-01, -2.9113e-01,  1.2083e-01,
         -2.4512e-01, -9.1478e-01,  1.5651e-01, -1.5157e-01, -1.0390e-01,
         -4.5108e-01,  3.3588e-01,  4.9482e-02, -2.7318e-01,  6.4930e-02,
          4.2960e-01,  2.0360e-01, -4.9577e-01,  1.4042e-01, -2.3026e-02,
          1.1177e-01,  6.1903e-02, -2.5693e-01,  3.2503e-01, -2.0932e-01,
          1.3655e-02, -1.5273e-01, -4.2852e-02, -1.1706e-01,  3.9509e-01,
         -1.7134e-01, -1.6999e-01,  1.0322e-01, -3.4947e-02,  1.3735e-01,
         -1.3986e-01, -1.6330e-01, -3.2519e-02, -4.0351e-02,  3.9761e-01,
         -1.4953e-01, -1.1144e-01,  1.2443e-01,  2.5847e-01,  5.3128e-02,
          1.4181e-01, -4.8740e-01,  1.1502e-01,  1.4084e-01,  6.2656e-02,
         -6.6146e-02,  2.8907e-01, -2.3345e-03,  4.2778e-02,  8.7750e-02,
          1.9993e-01,  3.1047e-01, -4.3402e-02,  1.8713e-01,  2.9218e-01,
         -1.3870e-01, -4.4366e-01, -1.0656e-01, -1.1460e-01,  1.2853e-01,
          2.5740e-02,  6.9801e-03, -9.5511e-02,  2.5708e-02,  7.8319e-02,
          7.6710e-02,  7.9805e-02,  4.6441e-03, -4.1694e-02, -8.5157e-02,
          1.6871e-01,  1.5203e-01,  2.3605e-01,  6.8102e-02, -1.1730e-01,
         -1.3146e-01,  1.4585e-01,  5.5083e-02, -1.8549e-01,  5.0056e-04,
         -1.5164e-01,  1.5718e-02,  4.8790e-02, -1.5359e-01,  5.0483e-02,
          2.4590e-02,  9.7284e-02, -1.1612e-01, -1.2213e-01,  2.2160e-01,
          1.4426e-01, -5.9028e-02, -8.6462e-02, -1.2048e-01, -3.7735e-02,
          1.1596e-01,  4.9073e-02, -1.4808e-01, -9.5968e-02,  8.3244e-03,
          1.6916e-01,  1.4342e-01, -4.3507e-02,  1.3220e-01, -1.6750e-01,
         -2.5173e-02, -1.2461e-03, -8.9100e-02,  5.9064e-02,  1.6969e-02,
          1.0889e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
591000 特征值优化 tensor(0.4831, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1147e-02,  6.3511e-02, -1.0139e+00, -1.0168e+00,  2.7777e+00,
          3.9105e+00,  7.6584e-01, -1.8240e+00,  7.8282e-02, -4.9920e-01,
          5.4327e-01, -7.2133e-01, -7.5222e-02, -7.4946e-03,  4.8405e-01,
          1.1064e+00, -4.9147e-01,  6.2088e-01,  6.6120e-01,  1.0000e+00,
         -1.4399e-02,  9.1589e-03, -1.5354e-01, -1.2813e-01, -5.5196e-01,
          9.0328e-01,  7.5030e-01,  4.9266e-01, -2.6738e-01,  2.6121e-01,
          2.7401e-01,  5.4321e-03, -2.9971e-02, -1.7843e-01,  3.1672e-01,
          2.7358e-01,  2.2067e-01, -8.1641e-02,  3.3731e-01, -1.8325e-01,
          2.4274e-01,  3.8998e-02, -1.3122e-01,  4.0564e-02, -4.3936e-01,
          3.2679e-02,  3.6295e-01,  1.6247e-01, -2.9161e-01,  1.1465e-01,
         -2.4985e-01, -9.1013e-01,  1.4773e-01, -1.5503e-01, -9.8677e-02,
         -4.5135e-01,  3.3640e-01,  5.5108e-02, -2.7181e-01,  6.9854e-02,
          4.3124e-01,  2.1885e-01, -4.9441e-01,  1.4549e-01, -3.1282e-02,
          1.1149e-01,  6.8583e-02, -2.5121e-01,  3.2987e-01, -2.1373e-01,
          1.4150e-02, -1.5506e-01, -4.1834e-02, -1.0726e-01,  3.9420e-01,
         -1.7834e-01, -1.7076e-01,  9.9997e-02, -3.7148e-02,  1.3239e-01,
         -1.4053e-01, -1.5900e-01, -2.8412e-02, -4.3398e-02,  3.9714e-01,
         -1.4680e-01, -1.1781e-01,  1.2068e-01,  2.6458e-01,  4.7181e-02,
          1.4259e-01, -4.8685e-01,  1.1821e-01,  1.4457e-01,  6.4268e-02,
         -6.5944e-02,  2.9197e-01, -1.6557e-02,  5.0810e-02,  8.5653e-02,
          2.1941e-01,  3.0757e-01, -4.1575e-02,  1.8802e-01,  2.9195e-01,
         -1.3901e-01, -4.5873e-01, -1.0479e-01, -1.1761e-01,  1.2527e-01,
          2.0708e-02,  5.0184e-04, -8.9577e-02,  2.6692e-02,  7.7200e-02,
          7.7637e-02,  7.9870e-02, -4.5539e-03, -4.0532e-02, -9.1760e-02,
          1.7155e-01,  1.5393e-01,  2.3565e-01,  6.7663e-02, -1.1726e-01,
         -1.2733e-01,  1.4460e-01,  5.6609e-02, -1.8759e-01, -1.7805e-03,
         -1.5495e-01,  1.2914e-02,  4.8325e-02, -1.5369e-01,  5.2353e-02,
          2.6695e-02,  1.1006e-01, -1.1365e-01, -1.3339e-01,  2.2243e-01,
          1.3926e-01, -5.7235e-02, -8.0074e-02, -1.2315e-01, -4.7893e-02,
          1.1135e-01,  5.0032e-02, -1.5582e-01, -9.3746e-02,  9.2809e-03,
          1.6610e-01,  1.5212e-01, -5.1293e-02,  1.4036e-01, -1.7449e-01,
         -2.2957e-02,  5.3494e-03, -8.3456e-02,  6.1004e-02,  1.3948e-02,
          1.1436e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
592000 特征值优化 tensor(0.5022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4514e-02,  5.3792e-02, -1.0097e+00, -1.0157e+00,  2.7658e+00,
          3.9054e+00,  7.6812e-01, -1.8191e+00,  8.7465e-02, -5.1319e-01,
          5.5366e-01, -7.3897e-01, -4.8779e-02, -1.7550e-02,  4.9021e-01,
          1.1008e+00, -4.9856e-01,  6.3431e-01,  6.7459e-01,  9.9858e-01,
         -3.1029e-03,  2.1531e-03, -1.6257e-01, -1.2962e-01, -5.4353e-01,
          9.2846e-01,  7.3952e-01,  4.8633e-01, -2.2104e-01,  2.4574e-01,
          2.7217e-01,  1.2327e-02, -4.4985e-02, -1.5376e-01,  3.1365e-01,
          2.7437e-01,  2.4159e-01, -8.4453e-02,  3.2312e-01, -1.7784e-01,
          2.4212e-01,  3.8185e-02, -1.2877e-01,  4.2423e-02, -4.2176e-01,
          3.3450e-02,  3.5990e-01,  1.6736e-01, -2.7162e-01,  1.1261e-01,
         -2.5129e-01, -9.0867e-01,  1.5692e-01, -1.6057e-01, -1.0569e-01,
         -4.4527e-01,  3.4270e-01,  6.1597e-02, -2.6303e-01,  7.0382e-02,
          4.0595e-01,  2.2911e-01, -4.8563e-01,  1.3519e-01, -3.6544e-02,
          1.0276e-01,  6.4484e-02, -2.6821e-01,  3.2420e-01, -2.1217e-01,
          6.7958e-03, -1.6168e-01, -3.7782e-02, -1.3633e-01,  3.8716e-01,
         -1.5385e-01, -1.7423e-01,  9.7603e-02, -2.8933e-02,  1.4028e-01,
         -1.4344e-01, -1.6523e-01, -3.1613e-02, -4.8943e-02,  4.0450e-01,
         -1.5306e-01, -9.7287e-02,  1.2819e-01,  2.9066e-01,  4.1517e-02,
          1.6234e-01, -4.8654e-01,  1.0879e-01,  1.1775e-01,  6.1275e-02,
         -6.4386e-02,  2.8719e-01, -6.7306e-03,  1.5516e-02,  8.4191e-02,
          2.0546e-01,  2.9950e-01, -5.6081e-02,  1.9552e-01,  2.7932e-01,
         -1.5053e-01, -4.3032e-01, -1.1799e-01, -9.3890e-02,  1.3175e-01,
          2.8947e-02, -6.0153e-03, -7.9453e-02,  3.6044e-02,  5.8849e-02,
          9.8703e-02,  6.9594e-02, -1.4201e-02, -2.8419e-02, -8.1185e-02,
          1.8471e-01,  1.4643e-01,  2.2959e-01,  6.9020e-02, -1.2474e-01,
         -1.3549e-01,  1.5784e-01,  4.8909e-02, -1.7548e-01, -7.5028e-04,
         -1.5541e-01,  1.9413e-02,  4.8020e-02, -1.5340e-01,  4.9924e-02,
          1.0284e-03,  8.6650e-02, -1.1820e-01, -1.0110e-01,  2.6540e-01,
          1.5903e-01, -7.1852e-02, -9.5356e-02, -1.3819e-01, -2.2876e-02,
          1.3351e-01,  4.9108e-02, -1.4615e-01, -9.9489e-02,  1.7158e-02,
          1.6785e-01,  1.3175e-01, -4.4934e-02,  1.3595e-01, -1.5789e-01,
         -2.5836e-02, -1.4436e-02, -8.9372e-02,  5.3838e-02,  1.6989e-02,
          8.5134e-02]], device='cuda:0') tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
593000 特征值优化 tensor(0.4838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1392e-02,  1.0110e-01, -1.0370e+00, -1.0159e+00,  2.7489e+00,
          3.9042e+00,  7.7490e-01, -1.8441e+00,  7.3465e-02, -5.1123e-01,
          5.3710e-01, -7.1352e-01, -4.8590e-02,  4.7938e-03,  4.8304e-01,
          1.1053e+00, -4.8675e-01,  6.2696e-01,  6.8263e-01,  9.9051e-01,
         -2.1397e-02,  4.2709e-03, -1.6490e-01, -1.3437e-01, -5.3916e-01,
          9.0232e-01,  7.4301e-01,  4.7885e-01, -2.6127e-01,  2.6146e-01,
          2.9292e-01,  1.8437e-02, -3.8757e-02, -1.6331e-01,  3.1906e-01,
          2.7510e-01,  2.2887e-01, -9.4382e-02,  3.3322e-01, -1.8466e-01,
          2.4339e-01,  3.7968e-02, -1.3067e-01,  3.5518e-02, -4.4048e-01,
          2.1775e-02,  3.6570e-01,  1.6521e-01, -2.8375e-01,  1.1350e-01,
         -2.5465e-01, -9.1779e-01,  1.4943e-01, -1.5269e-01, -9.9652e-02,
         -4.4814e-01,  3.3388e-01,  7.2152e-02, -2.6963e-01,  7.4241e-02,
          4.3047e-01,  2.1906e-01, -4.9864e-01,  1.3594e-01, -3.7363e-02,
          1.0922e-01,  5.8777e-02, -2.6319e-01,  3.2969e-01, -2.1510e-01,
          1.3822e-02, -1.6342e-01, -4.9029e-02, -1.1725e-01,  3.9119e-01,
         -1.7076e-01, -1.6419e-01,  1.1867e-01, -4.3918e-02,  1.3439e-01,
         -1.4205e-01, -1.5730e-01, -2.4175e-02, -4.7255e-02,  3.9627e-01,
         -1.3822e-01, -1.1932e-01,  1.1409e-01,  2.3974e-01,  4.4891e-02,
          1.4041e-01, -4.8757e-01,  1.1771e-01,  1.4017e-01,  6.1069e-02,
         -5.7716e-02,  2.9982e-01, -8.8516e-03,  4.2414e-02,  6.4801e-02,
          2.0578e-01,  3.0065e-01, -3.4175e-02,  1.8825e-01,  3.1268e-01,
         -1.4317e-01, -4.4311e-01, -1.0224e-01, -1.2229e-01,  1.2926e-01,
          1.6791e-02, -1.1139e-04, -9.1759e-02,  3.2405e-02,  7.3310e-02,
          8.7444e-02,  7.7422e-02, -7.6133e-04, -3.7611e-02, -8.5451e-02,
          1.6872e-01,  1.4648e-01,  2.2753e-01,  6.9302e-02, -1.1421e-01,
         -1.2924e-01,  1.4731e-01,  4.8288e-02, -1.8884e-01,  7.9388e-04,
         -1.4913e-01,  1.2105e-02,  4.2258e-02, -1.4735e-01,  5.3557e-02,
          2.7940e-02,  8.8117e-02, -1.2007e-01, -1.1276e-01,  2.2676e-01,
          1.5393e-01, -6.0129e-02, -9.5902e-02, -1.1650e-01, -3.6214e-02,
          1.2128e-01,  4.9408e-02, -1.4561e-01, -1.0008e-01,  4.9931e-03,
          1.7035e-01,  1.4269e-01, -4.7341e-02,  1.3898e-01, -1.5723e-01,
         -3.1401e-02, -6.4699e-03, -8.3397e-02,  6.7775e-02,  1.9260e-02,
          1.0951e-01]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
594000 特征值优化 tensor(0.4970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.2832e-02,  7.5346e-02, -1.0427e+00, -1.0148e+00,  2.7356e+00,
          3.9140e+00,  7.6020e-01, -1.8306e+00,  9.4977e-02, -5.1422e-01,
          5.5138e-01, -7.2022e-01, -5.3644e-02, -3.2371e-02,  4.9756e-01,
          1.1143e+00, -4.7985e-01,  6.4229e-01,  6.7914e-01,  9.9748e-01,
         -1.9323e-02, -2.1124e-03, -1.4655e-01, -1.2921e-01, -5.5179e-01,
          9.2067e-01,  7.3186e-01,  4.8814e-01, -2.1582e-01,  2.5455e-01,
          2.6755e-01,  3.6598e-03, -5.2657e-02, -1.5171e-01,  3.2212e-01,
          2.7822e-01,  2.4609e-01, -8.1932e-02,  3.1417e-01, -1.7386e-01,
          2.4186e-01,  3.8258e-02, -1.3059e-01,  3.4311e-02, -4.3042e-01,
          2.9532e-02,  3.5150e-01,  1.6480e-01, -2.7023e-01,  1.0322e-01,
         -2.5174e-01, -9.1499e-01,  1.5792e-01, -1.5518e-01, -1.0585e-01,
         -4.4008e-01,  3.4053e-01,  6.3106e-02, -2.6891e-01,  6.3916e-02,
          4.1090e-01,  2.2144e-01, -4.8942e-01,  1.3116e-01, -4.0062e-02,
          1.0794e-01,  6.2045e-02, -2.7093e-01,  3.2237e-01, -2.1164e-01,
          4.3848e-03, -1.5589e-01, -4.1416e-02, -1.3390e-01,  3.8873e-01,
         -1.6324e-01, -1.7549e-01,  9.3014e-02, -3.0543e-02,  1.3685e-01,
         -1.3940e-01, -1.6734e-01, -3.0393e-02, -5.2739e-02,  4.0510e-01,
         -1.5254e-01, -8.6417e-02,  1.1771e-01,  2.9161e-01,  5.8644e-02,
          1.6200e-01, -4.9298e-01,  1.0556e-01,  1.2096e-01,  6.5028e-02,
         -5.6815e-02,  2.9227e-01, -1.3234e-02, -2.1546e-03,  8.6345e-02,
          1.9457e-01,  2.8798e-01, -5.2903e-02,  1.9978e-01,  2.8607e-01,
         -1.4006e-01, -4.2760e-01, -1.1251e-01, -9.3355e-02,  1.2876e-01,
          2.3754e-02, -8.9290e-03, -7.3508e-02,  3.5597e-02,  6.8840e-02,
          9.1624e-02,  7.3289e-02, -1.1794e-02, -3.6623e-02, -7.1721e-02,
          1.8750e-01,  1.4450e-01,  2.2975e-01,  6.8032e-02, -1.2318e-01,
         -1.4093e-01,  1.5562e-01,  5.0018e-02, -1.7782e-01,  1.3735e-03,
         -1.5964e-01,  2.3085e-02,  5.5809e-02, -1.5627e-01,  4.7242e-02,
          5.0058e-03,  9.3614e-02, -1.1391e-01, -1.1542e-01,  2.4989e-01,
          1.6036e-01, -8.0855e-02, -9.3692e-02, -1.3853e-01, -7.2573e-03,
          1.2861e-01,  4.6861e-02, -1.5207e-01, -1.0152e-01,  1.3869e-02,
          1.7184e-01,  1.3802e-01, -3.9425e-02,  1.3088e-01, -1.5721e-01,
         -2.5491e-02, -1.6252e-02, -9.1836e-02,  5.6271e-02,  1.5540e-02,
          8.4421e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
595000 特征值优化 tensor(0.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.1235e-02,  7.7892e-02, -1.0507e+00, -1.0143e+00,  2.7212e+00,
          3.9206e+00,  7.5792e-01, -1.8267e+00,  1.0007e-01, -5.0289e-01,
          5.5816e-01, -7.2246e-01, -5.3273e-02, -4.8257e-02,  5.0279e-01,
          1.1153e+00, -4.7389e-01,  6.5090e-01,  6.6555e-01,  1.0061e+00,
         -6.7819e-03, -9.7015e-04, -1.4725e-01, -1.2711e-01, -5.6058e-01,
          9.3369e-01,  7.3490e-01,  4.8336e-01, -2.2119e-01,  2.5680e-01,
          2.5725e-01, -2.6151e-03, -6.1872e-02, -1.4242e-01,  3.2910e-01,
          2.8306e-01,  2.5238e-01, -7.9538e-02,  3.0950e-01, -1.7770e-01,
          2.4532e-01,  3.8555e-02, -1.3056e-01,  3.2492e-02, -4.3073e-01,
          3.0691e-02,  3.4538e-01,  1.6491e-01, -2.7766e-01,  1.0230e-01,
         -2.5043e-01, -9.1041e-01,  1.5646e-01, -1.5507e-01, -1.1463e-01,
         -4.4335e-01,  3.4024e-01,  6.3147e-02, -2.6888e-01,  5.9762e-02,
          4.0986e-01,  2.1821e-01, -4.8785e-01,  1.1680e-01, -3.4100e-02,
          1.1308e-01,  5.8416e-02, -2.6761e-01,  3.2314e-01, -2.1015e-01,
         -6.8449e-04, -1.5501e-01, -4.3115e-02, -1.3637e-01,  3.9252e-01,
         -1.5952e-01, -1.8204e-01,  7.3217e-02, -2.9926e-02,  1.3753e-01,
         -1.2955e-01, -1.6776e-01, -3.1537e-02, -6.7761e-02,  4.0966e-01,
         -1.6110e-01, -8.0049e-02,  1.2002e-01,  2.8181e-01,  7.4191e-02,
          1.6794e-01, -4.9139e-01,  1.0719e-01,  1.1453e-01,  6.3711e-02,
         -5.5911e-02,  2.9280e-01,  1.9070e-02,  6.2599e-03,  1.1217e-01,
          1.7488e-01,  2.8565e-01, -5.5181e-02,  2.0253e-01,  2.9081e-01,
         -1.3568e-01, -4.3190e-01, -1.1642e-01, -9.7440e-02,  1.2657e-01,
          3.2213e-02, -2.7422e-03, -7.4219e-02,  4.5621e-02,  6.3785e-02,
          9.3315e-02,  7.5757e-02, -1.6623e-02, -3.6999e-02, -7.5049e-02,
          1.9273e-01,  1.4481e-01,  2.3461e-01,  6.4347e-02, -1.2339e-01,
         -1.4035e-01,  1.5254e-01,  5.6588e-02, -1.7595e-01,  1.8281e-03,
         -1.6420e-01,  2.1594e-02,  5.3757e-02, -1.5518e-01,  4.4155e-02,
          2.4263e-03,  9.2864e-02, -1.0846e-01, -1.1216e-01,  2.5653e-01,
          1.6080e-01, -7.1792e-02, -9.5111e-02, -1.3621e-01,  4.3413e-04,
          1.1853e-01,  5.5201e-02, -1.5328e-01, -9.6110e-02,  2.0378e-02,
          1.6168e-01,  1.4478e-01, -2.8473e-02,  1.3556e-01, -1.5845e-01,
         -2.1831e-02, -1.1934e-02, -8.8600e-02,  5.6600e-02,  1.3928e-02,
          8.6340e-02]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
596000 特征值优化 tensor(0.4865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.4330e-02,  1.1235e-01, -1.0834e+00, -1.0166e+00,  2.7235e+00,
          3.9236e+00,  7.6057e-01, -1.8250e+00,  8.7644e-02, -5.0957e-01,
          5.5300e-01, -7.2765e-01, -4.9053e-02, -2.1844e-02,  4.9363e-01,
          1.1041e+00, -4.6916e-01,  6.4534e-01,  6.6913e-01,  1.0069e+00,
         -2.8044e-03,  1.0356e-03, -1.5066e-01, -1.2087e-01, -5.6775e-01,
          9.3747e-01,  7.2874e-01,  4.9014e-01, -2.2770e-01,  2.6543e-01,
          2.6321e-01,  1.1419e-02, -6.2618e-02, -1.4363e-01,  3.2715e-01,
          2.7903e-01,  2.5314e-01, -7.9754e-02,  3.2032e-01, -1.7576e-01,
          2.3969e-01,  4.0435e-02, -1.2990e-01,  2.3760e-02, -4.4238e-01,
          3.8235e-02,  3.4583e-01,  1.6354e-01, -2.8611e-01,  1.0225e-01,
         -2.5766e-01, -9.0943e-01,  1.6087e-01, -1.5357e-01, -1.1284e-01,
         -4.4976e-01,  3.3150e-01,  5.4346e-02, -2.6552e-01,  6.7983e-02,
          4.2097e-01,  2.1619e-01, -4.8560e-01,  1.2424e-01, -3.9994e-02,
          1.0412e-01,  6.3542e-02, -2.5951e-01,  3.2901e-01, -2.1023e-01,
          2.0359e-03, -1.6061e-01, -4.4022e-02, -1.3427e-01,  3.9146e-01,
         -1.5540e-01, -1.8146e-01,  8.9048e-02, -4.2725e-02,  1.3914e-01,
         -1.2834e-01, -1.5635e-01, -2.3762e-02, -6.1448e-02,  4.0847e-01,
         -1.5536e-01, -8.9700e-02,  1.1844e-01,  2.6495e-01,  4.1138e-02,
          1.6010e-01, -4.8197e-01,  1.0419e-01,  1.1600e-01,  6.6789e-02,
         -4.7310e-02,  2.9983e-01,  2.0784e-03,  1.3406e-02,  9.9301e-02,
          1.8739e-01,  2.8228e-01, -4.7239e-02,  1.9489e-01,  2.9434e-01,
         -1.4416e-01, -4.3568e-01, -1.2021e-01, -1.1215e-01,  1.2294e-01,
          2.7583e-02,  8.0029e-04, -7.5610e-02,  5.0329e-02,  5.9620e-02,
          1.0329e-01,  7.2339e-02, -1.9809e-02, -3.0039e-02, -7.8023e-02,
          1.8838e-01,  1.3976e-01,  2.3544e-01,  6.6005e-02, -1.1815e-01,
         -1.3639e-01,  1.5403e-01,  5.1747e-02, -1.7639e-01, -1.5206e-03,
         -1.5583e-01,  1.6548e-02,  5.3942e-02, -1.5000e-01,  4.9711e-02,
          1.3601e-02,  8.2171e-02, -1.1708e-01, -1.0586e-01,  2.5379e-01,
          1.5483e-01, -6.9545e-02, -8.9615e-02, -1.4086e-01, -9.8777e-03,
          1.1153e-01,  6.2299e-02, -1.4444e-01, -1.0249e-01,  1.7600e-02,
          1.6339e-01,  1.4589e-01, -3.0537e-02,  1.3754e-01, -1.5056e-01,
         -1.8619e-02, -1.0864e-02, -8.5868e-02,  5.4140e-02,  1.8848e-02,
          9.4053e-02]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
597000 特征值优化 tensor(0.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.9417e-02,  1.2909e-01, -1.0909e+00, -1.0165e+00,  2.7109e+00,
          3.9224e+00,  7.5873e-01, -1.8370e+00,  8.5534e-02, -5.0406e-01,
          5.4465e-01, -7.3896e-01, -3.6571e-02, -1.2810e-02,  4.9088e-01,
          1.1050e+00, -4.6250e-01,  6.4481e-01,  6.6865e-01,  1.0143e+00,
         -1.1057e-02,  3.0657e-03, -1.4830e-01, -1.2439e-01, -5.6751e-01,
          9.2464e-01,  7.4121e-01,  4.7835e-01, -2.5682e-01,  2.6581e-01,
          2.7682e-01,  1.7209e-02, -5.1538e-02, -1.5459e-01,  3.3311e-01,
          2.7538e-01,  2.3065e-01, -8.3726e-02,  3.2861e-01, -1.7312e-01,
          2.3255e-01,  3.7748e-02, -1.2895e-01,  2.2521e-02, -4.4301e-01,
          2.9619e-02,  3.5346e-01,  1.6219e-01, -2.8750e-01,  1.0058e-01,
         -2.5551e-01, -9.0775e-01,  1.5507e-01, -1.5356e-01, -1.0600e-01,
         -4.4851e-01,  3.3263e-01,  5.0724e-02, -2.7190e-01,  7.1781e-02,
          4.3093e-01,  2.0820e-01, -4.9908e-01,  1.3271e-01, -3.6747e-02,
          1.1289e-01,  6.6709e-02, -2.6968e-01,  3.2642e-01, -2.1320e-01,
          6.9459e-03, -1.6142e-01, -5.2403e-02, -1.1625e-01,  3.9202e-01,
         -1.7251e-01, -1.7193e-01,  1.0630e-01, -4.7461e-02,  1.3549e-01,
         -1.3510e-01, -1.5507e-01, -2.4973e-02, -5.6261e-02,  3.9999e-01,
         -1.3605e-01, -1.1158e-01,  1.0957e-01,  2.4041e-01,  5.5749e-02,
          1.4484e-01, -4.9297e-01,  1.1840e-01,  1.3727e-01,  6.3218e-02,
         -4.5179e-02,  3.0501e-01,  3.6541e-03,  3.9554e-02,  8.4080e-02,
          1.8554e-01,  2.8556e-01, -3.3334e-02,  1.9455e-01,  2.9648e-01,
         -1.4310e-01, -4.4578e-01, -1.0849e-01, -1.1859e-01,  1.2680e-01,
          1.7309e-02,  9.5977e-03, -8.5314e-02,  3.9095e-02,  8.3799e-02,
          8.3017e-02,  7.7802e-02, -8.2538e-03, -3.2015e-02, -7.4533e-02,
          1.7881e-01,  1.4651e-01,  2.3202e-01,  6.7602e-02, -1.2167e-01,
         -1.3370e-01,  1.4449e-01,  5.4282e-02, -1.8488e-01, -2.1433e-03,
         -1.5533e-01,  8.1788e-03,  5.5560e-02, -1.4856e-01,  4.9093e-02,
          3.5935e-02,  7.7446e-02, -1.1539e-01, -1.0339e-01,  2.2941e-01,
          1.5961e-01, -7.6482e-02, -9.5653e-02, -1.2029e-01, -2.0848e-02,
          1.1453e-01,  5.3444e-02, -1.4466e-01, -9.5261e-02,  1.2933e-02,
          1.6052e-01,  1.4324e-01, -4.0928e-02,  1.3719e-01, -1.4106e-01,
         -3.5384e-02, -6.2393e-03, -8.8403e-02,  7.1217e-02,  2.1483e-02,
          1.0278e-01]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
598000 特征值优化 tensor(0.4844, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.9607e-02,  1.1301e-01, -1.0956e+00, -1.0160e+00,  2.7225e+00,
          3.9203e+00,  7.6612e-01, -1.8216e+00,  8.7944e-02, -5.0391e-01,
          5.5307e-01, -7.4399e-01, -3.3880e-02, -4.4202e-02,  5.0508e-01,
          1.1048e+00, -4.6322e-01,  6.4988e-01,  6.7493e-01,  1.0124e+00,
         -6.8694e-03,  4.1572e-04, -1.4880e-01, -1.3187e-01, -5.6399e-01,
          9.2385e-01,  7.2862e-01,  4.7545e-01, -2.2508e-01,  2.5331e-01,
          2.6579e-01,  5.2499e-03, -5.5083e-02, -1.3290e-01,  3.3155e-01,
          2.7497e-01,  2.5343e-01, -8.5873e-02,  3.1356e-01, -1.8167e-01,
          2.4249e-01,  3.7913e-02, -1.2946e-01,  2.0159e-02, -4.2927e-01,
          3.8554e-02,  3.4572e-01,  1.6416e-01, -2.7057e-01,  9.6050e-02,
         -2.5247e-01, -9.0718e-01,  1.5524e-01, -1.5227e-01, -1.1475e-01,
         -4.4574e-01,  3.2892e-01,  6.2511e-02, -2.6363e-01,  6.9124e-02,
          4.1695e-01,  2.1439e-01, -4.9563e-01,  1.1842e-01, -4.4974e-02,
          1.1194e-01,  5.8370e-02, -2.7477e-01,  3.2138e-01, -2.1656e-01,
          1.8397e-03, -1.6036e-01, -4.0566e-02, -1.3453e-01,  3.9477e-01,
         -1.5280e-01, -1.8006e-01,  8.1035e-02, -2.6399e-02,  1.3780e-01,
         -1.2644e-01, -1.6058e-01, -2.4387e-02, -5.3976e-02,  4.1362e-01,
         -1.5397e-01, -8.5608e-02,  1.1003e-01,  2.7353e-01,  7.4918e-02,
          1.6273e-01, -4.8884e-01,  1.0088e-01,  1.1762e-01,  6.2613e-02,
         -4.4020e-02,  2.9865e-01,  1.3724e-02,  1.0367e-02,  8.9789e-02,
          1.9134e-01,  2.7986e-01, -3.7651e-02,  1.9441e-01,  2.9578e-01,
         -1.4772e-01, -4.2554e-01, -1.1662e-01, -1.1099e-01,  1.3290e-01,
          2.6297e-02,  1.3781e-03, -7.6263e-02,  4.5834e-02,  7.1669e-02,
          1.0362e-01,  7.3613e-02, -2.0577e-02, -2.9616e-02, -7.4543e-02,
          1.9521e-01,  1.4424e-01,  2.3578e-01,  6.4056e-02, -1.1816e-01,
         -1.4056e-01,  1.5689e-01,  5.2034e-02, -1.7327e-01, -1.7721e-03,
         -1.5889e-01,  2.0895e-02,  5.2804e-02, -1.5284e-01,  4.3979e-02,
          1.0456e-02,  7.9853e-02, -1.1617e-01, -1.0451e-01,  2.5981e-01,
          1.5219e-01, -6.9949e-02, -9.8488e-02, -1.4224e-01, -6.3773e-03,
          1.1992e-01,  5.7378e-02, -1.4387e-01, -9.9776e-02,  1.7809e-02,
          1.6249e-01,  1.4936e-01, -2.9006e-02,  1.3719e-01, -1.6170e-01,
         -2.2773e-02, -1.7073e-02, -8.2742e-02,  6.0766e-02,  1.6465e-02,
          9.1457e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
599000 特征值优化 tensor(0.4897, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1336e-01,  1.2372e-01, -1.1009e+00, -1.0109e+00,  2.6918e+00,
          3.9192e+00,  7.6760e-01, -1.8339e+00,  7.7736e-02, -5.0279e-01,
          5.4909e-01, -7.4815e-01, -5.3860e-02, -4.2649e-02,  4.9207e-01,
          1.1199e+00, -4.6837e-01,  6.5108e-01,  6.6777e-01,  1.0147e+00,
         -1.0283e-02, -1.0435e-02, -1.4240e-01, -1.2935e-01, -5.6526e-01,
          9.2620e-01,  7.3821e-01,  4.9132e-01, -2.4343e-01,  2.6320e-01,
          2.7006e-01,  8.7526e-03, -5.0765e-02, -1.3492e-01,  3.2997e-01,
          2.7972e-01,  2.4984e-01, -9.2404e-02,  3.2282e-01, -1.7901e-01,
          2.4357e-01,  3.5579e-02, -1.2949e-01,  1.9273e-02, -4.3361e-01,
          2.9201e-02,  3.4438e-01,  1.5355e-01, -2.7672e-01,  9.1780e-02,
         -2.5076e-01, -9.0592e-01,  1.5440e-01, -1.5098e-01, -1.0967e-01,
         -4.4323e-01,  3.2937e-01,  6.4942e-02, -2.6120e-01,  6.9299e-02,
          4.2084e-01,  1.9723e-01, -5.0048e-01,  1.2299e-01, -3.6177e-02,
          1.1528e-01,  6.1558e-02, -2.8187e-01,  3.1705e-01, -2.1589e-01,
          9.6488e-03, -1.6153e-01, -4.5534e-02, -1.2000e-01,  3.9136e-01,
         -1.6446e-01, -1.7407e-01,  9.1488e-02, -2.9620e-02,  1.3515e-01,
         -1.2821e-01, -1.5789e-01, -2.5400e-02, -5.4790e-02,  4.1216e-01,
         -1.3686e-01, -9.0434e-02,  1.0143e-01,  2.6386e-01,  5.1700e-02,
          1.6401e-01, -4.8863e-01,  1.0717e-01,  1.2069e-01,  6.7378e-02,
         -4.1739e-02,  3.0381e-01,  2.6600e-02,  4.9854e-03,  9.0995e-02,
          1.8288e-01,  2.8204e-01, -4.0958e-02,  1.9785e-01,  2.8749e-01,
         -1.3566e-01, -4.3523e-01, -1.1526e-01, -1.1308e-01,  1.3259e-01,
          2.3044e-02,  4.3816e-03, -7.9579e-02,  4.5259e-02,  8.6278e-02,
          8.2064e-02,  7.5592e-02, -1.4184e-02, -3.3152e-02, -8.3014e-02,
          1.8731e-01,  1.4959e-01,  2.3665e-01,  6.1750e-02, -1.1629e-01,
         -1.3792e-01,  1.4533e-01,  5.8573e-02, -1.8523e-01,  1.8865e-03,
         -1.6049e-01,  1.5391e-02,  5.5388e-02, -1.5345e-01,  4.8054e-02,
          9.3402e-03,  7.7999e-02, -9.8367e-02, -1.1324e-01,  2.3973e-01,
          1.5976e-01, -7.8598e-02, -1.0879e-01, -1.2201e-01, -7.4641e-03,
          1.0854e-01,  5.5822e-02, -1.5260e-01, -1.0110e-01,  2.6273e-02,
          1.6770e-01,  1.4661e-01, -3.6517e-02,  1.3304e-01, -1.5752e-01,
         -2.4510e-02, -1.2167e-02, -8.2594e-02,  6.2152e-02,  1.6444e-02,
          9.9805e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
600000 特征值优化 tensor(0.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0118e-01,  1.4815e-01, -1.0845e+00, -1.0156e+00,  2.6912e+00,
          3.8979e+00,  7.5644e-01, -1.8486e+00,  7.5653e-02, -5.0671e-01,
          5.5143e-01, -7.5108e-01, -6.0303e-02, -6.2846e-02,  4.9358e-01,
          1.1226e+00, -4.5793e-01,  6.5146e-01,  6.6447e-01,  1.0170e+00,
         -8.1041e-03, -1.3396e-02, -1.4806e-01, -1.1660e-01, -5.5598e-01,
          9.4653e-01,  7.4339e-01,  4.8154e-01, -2.1719e-01,  2.6823e-01,
          2.6305e-01,  9.2503e-03, -5.7452e-02, -1.3742e-01,  3.3835e-01,
          2.6703e-01,  2.3000e-01, -9.0569e-02,  3.2392e-01, -1.8598e-01,
          2.4412e-01,  3.7501e-02, -1.2949e-01,  2.6837e-02, -4.4367e-01,
          4.2301e-02,  3.4897e-01,  1.6133e-01, -2.8349e-01,  8.4797e-02,
         -2.4696e-01, -8.9754e-01,  1.4913e-01, -1.5381e-01, -1.0481e-01,
         -4.4389e-01,  3.2754e-01,  6.5843e-02, -2.6143e-01,  7.3592e-02,
          4.2608e-01,  1.8524e-01, -5.0820e-01,  1.2088e-01, -3.3562e-02,
          1.1145e-01,  7.1202e-02, -2.7916e-01,  3.1846e-01, -2.1859e-01,
          1.6490e-02, -1.5954e-01, -4.9316e-02, -1.1260e-01,  3.9289e-01,
         -1.6518e-01, -1.7041e-01,  9.1644e-02, -3.9709e-02,  1.3919e-01,
         -1.2518e-01, -1.5523e-01, -1.9888e-02, -3.6427e-02,  4.0525e-01,
         -1.4115e-01, -1.0880e-01,  1.0690e-01,  2.7632e-01,  8.2213e-02,
          1.5701e-01, -4.7907e-01,  1.0595e-01,  1.2829e-01,  6.0473e-02,
         -4.5181e-02,  3.0654e-01,  3.9210e-02,  3.0779e-02,  7.4655e-02,
          1.5992e-01,  2.8192e-01, -4.1190e-02,  2.0385e-01,  2.8784e-01,
         -1.4129e-01, -4.5163e-01, -1.1291e-01, -1.1872e-01,  1.3200e-01,
          1.6057e-02,  1.3365e-02, -7.7373e-02,  4.9350e-02,  8.3382e-02,
          9.0678e-02,  7.2206e-02, -2.2339e-02, -2.6353e-02, -8.0647e-02,
          1.8916e-01,  1.4426e-01,  2.3272e-01,  6.1351e-02, -1.1990e-01,
         -1.4432e-01,  1.4780e-01,  6.1202e-02, -1.9078e-01,  3.3861e-03,
         -1.6398e-01,  1.1290e-02,  4.4566e-02, -1.4494e-01,  5.0930e-02,
          1.7586e-02,  7.2478e-02, -1.0770e-01, -1.0935e-01,  2.4616e-01,
          1.6392e-01, -8.3694e-02, -1.0863e-01, -1.2704e-01, -1.6719e-02,
          1.1159e-01,  5.5382e-02, -1.4807e-01, -1.0653e-01,  2.7386e-02,
          1.6510e-01,  1.3835e-01, -3.9035e-02,  1.3561e-01, -1.3898e-01,
         -3.2438e-02, -1.3851e-02, -8.0785e-02,  6.7447e-02,  2.2607e-02,
          7.7929e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
601000 特征值优化 tensor(0.4824, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.3703e-02,  1.5152e-01, -1.0738e+00, -1.0165e+00,  2.7074e+00,
          3.8929e+00,  7.5923e-01, -1.8334e+00,  7.3425e-02, -5.1426e-01,
          5.5746e-01, -7.6438e-01, -6.9277e-02, -7.4583e-02,  4.9554e-01,
          1.1290e+00, -4.6294e-01,  6.5216e-01,  6.5969e-01,  1.0167e+00,
         -4.0924e-04, -1.4845e-02, -1.5323e-01, -1.0511e-01, -5.5761e-01,
          9.4562e-01,  7.4081e-01,  4.8066e-01, -2.1085e-01,  2.6987e-01,
          2.6205e-01,  8.2655e-03, -6.6844e-02, -1.3287e-01,  3.4201e-01,
          2.6623e-01,  2.2132e-01, -9.6253e-02,  3.2151e-01, -1.9155e-01,
          2.4619e-01,  3.6535e-02, -1.2846e-01,  2.9365e-02, -4.4419e-01,
          3.6708e-02,  3.4626e-01,  1.6302e-01, -2.8289e-01,  7.8511e-02,
         -2.4454e-01, -8.9169e-01,  1.4959e-01, -1.5147e-01, -1.0165e-01,
         -4.3756e-01,  3.3001e-01,  6.3782e-02, -2.5853e-01,  7.0372e-02,
          4.2765e-01,  1.8193e-01, -5.0814e-01,  1.1194e-01, -3.8351e-02,
          1.1011e-01,  6.4553e-02, -2.7865e-01,  3.1490e-01, -2.2153e-01,
          2.2407e-02, -1.6146e-01, -5.1210e-02, -1.1136e-01,  3.9151e-01,
         -1.6742e-01, -1.7001e-01,  1.0001e-01, -4.2062e-02,  1.4195e-01,
         -1.1954e-01, -1.5787e-01, -1.8999e-02, -3.2475e-02,  4.0829e-01,
         -1.4200e-01, -1.1738e-01,  1.1605e-01,  2.7818e-01,  7.4756e-02,
          1.5999e-01, -4.7498e-01,  1.0384e-01,  1.3324e-01,  5.9732e-02,
         -4.6350e-02,  2.9914e-01,  3.1393e-02,  4.4829e-02,  9.1250e-02,
          1.5183e-01,  2.8459e-01, -5.3948e-02,  2.0752e-01,  2.8945e-01,
         -1.4468e-01, -4.6087e-01, -1.1688e-01, -1.1204e-01,  1.3454e-01,
          1.7797e-02,  2.0996e-02, -7.1685e-02,  5.0845e-02,  7.9207e-02,
          9.5266e-02,  7.1585e-02, -2.6998e-02, -2.2676e-02, -8.1271e-02,
          1.9068e-01,  1.4147e-01,  2.3228e-01,  6.0154e-02, -1.2333e-01,
         -1.4298e-01,  1.4876e-01,  6.3369e-02, -1.9364e-01,  1.2168e-03,
         -1.6545e-01,  9.9278e-03,  4.2421e-02, -1.4390e-01,  4.9419e-02,
          2.2123e-02,  7.1145e-02, -1.0751e-01, -1.0256e-01,  2.4949e-01,
          1.7004e-01, -8.1745e-02, -1.1881e-01, -1.2082e-01, -1.2616e-02,
          1.1699e-01,  6.2507e-02, -1.4793e-01, -1.0966e-01,  2.7510e-02,
          1.6461e-01,  1.3559e-01, -3.8599e-02,  1.3575e-01, -1.3723e-01,
         -3.3830e-02, -1.0202e-02, -8.7055e-02,  6.8272e-02,  2.3782e-02,
          7.6174e-02]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
602000 特征值优化 tensor(0.4828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.6569e-02,  1.5429e-01, -1.0751e+00, -1.0159e+00,  2.7222e+00,
          3.8944e+00,  7.5994e-01, -1.8172e+00,  6.9872e-02, -5.2044e-01,
          5.7372e-01, -7.7643e-01, -6.7646e-02, -7.5426e-02,  4.9710e-01,
          1.1320e+00, -4.6628e-01,  6.5037e-01,  6.5013e-01,  1.0170e+00,
          9.5361e-03, -1.4465e-02, -1.5683e-01, -1.0118e-01, -5.6234e-01,
          9.4283e-01,  7.4254e-01,  4.8272e-01, -2.1573e-01,  2.6705e-01,
          2.5507e-01,  8.4148e-03, -6.9087e-02, -1.4148e-01,  3.3924e-01,
          2.6784e-01,  2.2201e-01, -9.1867e-02,  3.2408e-01, -1.9592e-01,
          2.5012e-01,  3.7342e-02, -1.2923e-01,  2.9054e-02, -4.4185e-01,
          2.3603e-02,  3.4124e-01,  1.7108e-01, -2.7830e-01,  7.9573e-02,
         -2.4633e-01, -8.8938e-01,  1.5346e-01, -1.5194e-01, -9.9281e-02,
         -4.4233e-01,  3.3099e-01,  5.4213e-02, -2.5628e-01,  7.1238e-02,
          4.2697e-01,  1.8346e-01, -5.0046e-01,  1.1213e-01, -4.1493e-02,
          1.0958e-01,  6.4378e-02, -2.7603e-01,  3.0724e-01, -2.2097e-01,
          2.4911e-02, -1.6111e-01, -4.9974e-02, -1.0882e-01,  3.8924e-01,
         -1.6887e-01, -1.7338e-01,  1.0157e-01, -4.6726e-02,  1.4273e-01,
         -1.1994e-01, -1.5673e-01, -1.8924e-02, -3.2503e-02,  4.0854e-01,
         -1.4295e-01, -1.1706e-01,  1.1159e-01,  2.7449e-01,  6.5115e-02,
          1.5632e-01, -4.6858e-01,  1.0527e-01,  1.3880e-01,  5.9936e-02,
         -4.7515e-02,  2.9997e-01,  3.6079e-02,  4.3463e-02,  1.0401e-01,
          1.4919e-01,  2.8957e-01, -5.9076e-02,  2.0468e-01,  2.8640e-01,
         -1.4214e-01, -4.6326e-01, -1.2038e-01, -1.0593e-01,  1.3828e-01,
          2.0481e-02,  3.0406e-02, -8.3867e-02,  5.3765e-02,  8.6925e-02,
          9.2203e-02,  7.6777e-02, -2.7313e-02, -2.1318e-02, -8.2875e-02,
          1.9040e-01,  1.3905e-01,  2.3707e-01,  6.0177e-02, -1.2358e-01,
         -1.4037e-01,  1.4894e-01,  6.2295e-02, -1.9612e-01, -1.0970e-03,
         -1.6338e-01,  7.8508e-03,  4.6076e-02, -1.4499e-01,  4.9426e-02,
          1.9415e-02,  7.4637e-02, -1.0187e-01, -1.1122e-01,  2.4723e-01,
          1.7719e-01, -7.7532e-02, -1.2242e-01, -1.2381e-01, -1.8414e-02,
          1.1946e-01,  6.4306e-02, -1.4734e-01, -1.0208e-01,  2.5861e-02,
          1.6355e-01,  1.3563e-01, -3.6313e-02,  1.3391e-01, -1.3922e-01,
         -3.1923e-02, -6.8671e-03, -8.7987e-02,  6.5412e-02,  2.1655e-02,
          8.1045e-02]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
603000 特征值优化 tensor(0.5045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2276e-01,  1.4752e-01, -1.0955e+00, -1.0152e+00,  2.7385e+00,
          3.8918e+00,  7.7043e-01, -1.7933e+00,  7.1901e-02, -5.4045e-01,
          5.7914e-01, -7.9191e-01, -4.9641e-02, -6.1830e-02,  4.9735e-01,
          1.1297e+00, -4.9749e-01,  6.5446e-01,  6.5104e-01,  1.0116e+00,
          2.0778e-02, -9.6936e-03, -1.4466e-01, -1.1812e-01, -5.8177e-01,
          9.2923e-01,  7.5666e-01,  4.8383e-01, -2.2132e-01,  2.6174e-01,
          2.5064e-01, -9.0305e-03, -5.0924e-02, -1.3034e-01,  3.2562e-01,
          2.7533e-01,  2.4380e-01, -1.0210e-01,  3.1699e-01, -2.0040e-01,
          2.5609e-01,  3.7717e-02, -1.3005e-01,  1.8845e-02, -4.3305e-01,
          3.1901e-02,  3.3032e-01,  1.6361e-01, -2.6343e-01,  8.0072e-02,
         -2.4521e-01, -8.9703e-01,  1.5801e-01, -1.4665e-01, -9.8367e-02,
         -4.5513e-01,  3.2184e-01,  5.0659e-02, -2.4865e-01,  6.1215e-02,
          4.2516e-01,  1.9643e-01, -4.9056e-01,  1.1437e-01, -5.8202e-02,
          1.1397e-01,  5.4268e-02, -2.7860e-01,  3.0515e-01, -2.2431e-01,
          1.4908e-02, -1.6441e-01, -4.5315e-02, -1.1250e-01,  3.9127e-01,
         -1.5422e-01, -1.8651e-01,  6.6267e-02, -3.4887e-02,  1.3978e-01,
         -1.1607e-01, -1.5699e-01, -2.3278e-02, -4.6417e-02,  4.1376e-01,
         -1.6430e-01, -9.1681e-02,  1.1598e-01,  2.6609e-01,  6.3865e-02,
          1.6906e-01, -4.5677e-01,  8.2473e-02,  1.2109e-01,  6.8410e-02,
         -4.6188e-02,  2.8440e-01,  1.2295e-02,  2.3302e-02,  1.2291e-01,
          1.5162e-01,  2.8792e-01, -7.0678e-02,  1.8772e-01,  2.7625e-01,
         -1.3695e-01, -4.4559e-01, -1.3102e-01, -1.0652e-01,  1.3797e-01,
          2.8569e-02,  2.6091e-02, -8.6311e-02,  4.7497e-02,  8.0102e-02,
          8.1086e-02,  8.5192e-02, -2.7301e-02, -3.4747e-02, -6.7584e-02,
          1.9252e-01,  1.4244e-01,  2.3614e-01,  6.1543e-02, -1.1763e-01,
         -1.3478e-01,  1.4976e-01,  5.8318e-02, -1.8995e-01,  1.3940e-03,
         -1.5719e-01,  1.8802e-02,  4.9882e-02, -1.5086e-01,  4.6029e-02,
          1.7461e-02,  9.5852e-02, -9.8661e-02, -1.2895e-01,  2.4004e-01,
          1.6380e-01, -5.2959e-02, -1.0968e-01, -1.3923e-01, -3.1058e-03,
          1.1841e-01,  6.4367e-02, -1.4522e-01, -9.7614e-02,  3.3848e-02,
          1.6617e-01,  1.5739e-01, -3.2257e-02,  1.3011e-01, -1.7515e-01,
         -2.2889e-02, -6.4807e-03, -8.8158e-02,  4.7191e-02,  1.4479e-02,
          1.0806e-01]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
604000 特征值优化 tensor(0.4838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2587e-01,  1.6031e-01, -1.0858e+00, -1.0169e+00,  2.7460e+00,
          3.8795e+00,  7.5806e-01, -1.7937e+00,  5.5390e-02, -5.3828e-01,
          5.7925e-01, -7.9533e-01, -4.1685e-02, -5.6964e-02,  4.8883e-01,
          1.1232e+00, -4.9624e-01,  6.5980e-01,  6.5579e-01,  1.0214e+00,
          2.1477e-02, -9.8809e-03, -1.5040e-01, -1.0165e-01, -5.9185e-01,
          9.3285e-01,  7.5046e-01,  4.9088e-01, -2.2773e-01,  2.6272e-01,
          2.5326e-01, -6.6670e-03, -5.1044e-02, -1.3791e-01,  3.2330e-01,
          2.7386e-01,  2.3778e-01, -8.8421e-02,  3.1842e-01, -1.9832e-01,
          2.5382e-01,  3.8141e-02, -1.2981e-01,  2.3607e-02, -4.3496e-01,
          2.7264e-02,  3.2876e-01,  1.6028e-01, -2.7210e-01,  8.2055e-02,
         -2.4698e-01, -8.9622e-01,  1.5481e-01, -1.4876e-01, -1.0470e-01,
         -4.5229e-01,  3.2683e-01,  5.3798e-02, -2.4655e-01,  6.5520e-02,
          4.1696e-01,  1.9224e-01, -4.8878e-01,  1.1854e-01, -5.8836e-02,
          1.1441e-01,  5.9378e-02, -2.7488e-01,  3.0693e-01, -2.2199e-01,
          1.3995e-02, -1.6373e-01, -4.5988e-02, -1.2056e-01,  3.9049e-01,
         -1.5986e-01, -1.8184e-01,  6.8095e-02, -3.7714e-02,  1.4225e-01,
         -1.1333e-01, -1.5351e-01, -2.2062e-02, -4.0526e-02,  4.1426e-01,
         -1.6309e-01, -9.0495e-02,  1.1473e-01,  2.6380e-01,  5.6059e-02,
          1.6025e-01, -4.5067e-01,  8.5475e-02,  1.2252e-01,  6.2604e-02,
         -4.7340e-02,  2.8662e-01,  2.9968e-02,  1.9809e-02,  1.2689e-01,
          1.3669e-01,  2.9288e-01, -6.1833e-02,  1.8967e-01,  2.7695e-01,
         -1.3117e-01, -4.5086e-01, -1.2655e-01, -1.1610e-01,  1.3722e-01,
          3.2883e-02,  2.4277e-02, -8.3568e-02,  4.6684e-02,  8.1263e-02,
          8.0496e-02,  8.5938e-02, -2.7926e-02, -3.3475e-02, -6.9071e-02,
          1.9427e-01,  1.4317e-01,  2.3851e-01,  5.9661e-02, -1.1320e-01,
         -1.3754e-01,  1.5117e-01,  5.8624e-02, -1.9320e-01,  2.2063e-03,
         -1.5571e-01,  1.4520e-02,  5.8448e-02, -1.5316e-01,  4.3857e-02,
          1.3671e-02,  8.9750e-02, -9.7855e-02, -1.2037e-01,  2.3773e-01,
          1.5764e-01, -5.4329e-02, -1.0807e-01, -1.3256e-01, -8.2239e-03,
          1.1296e-01,  6.4752e-02, -1.3794e-01, -1.0714e-01,  2.9086e-02,
          1.6693e-01,  1.5357e-01, -3.2146e-02,  1.2934e-01, -1.6121e-01,
         -2.3169e-02, -8.6197e-03, -8.6826e-02,  4.5243e-02,  1.7789e-02,
          1.1029e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
605000 特征值优化 tensor(0.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3611e-01,  1.5749e-01, -1.0861e+00, -1.0149e+00,  2.7574e+00,
          3.8704e+00,  7.5374e-01, -1.7827e+00,  5.7063e-02, -5.3990e-01,
          5.8515e-01, -7.9230e-01, -3.8705e-02, -5.7047e-02,  4.8478e-01,
          1.1216e+00, -5.0169e-01,  6.5947e-01,  6.5308e-01,  1.0307e+00,
          2.2037e-02, -9.1495e-03, -1.5386e-01, -1.0062e-01, -5.8692e-01,
          9.3515e-01,  7.5431e-01,  4.9444e-01, -2.3220e-01,  2.5958e-01,
          2.5096e-01, -5.4229e-03, -4.1150e-02, -1.3445e-01,  3.2290e-01,
          2.7591e-01,  2.3869e-01, -8.7730e-02,  3.1933e-01, -1.9894e-01,
          2.5496e-01,  3.8055e-02, -1.2969e-01,  2.3442e-02, -4.3242e-01,
          2.2200e-02,  3.2528e-01,  1.5554e-01, -2.7673e-01,  8.2731e-02,
         -2.4859e-01, -8.9567e-01,  1.5136e-01, -1.4566e-01, -1.0292e-01,
         -4.5634e-01,  3.2371e-01,  5.2125e-02, -2.4594e-01,  6.4603e-02,
          4.1860e-01,  1.9424e-01, -4.8660e-01,  1.1892e-01, -5.7155e-02,
          1.2069e-01,  5.8155e-02, -2.7259e-01,  3.0576e-01, -2.2256e-01,
          1.0472e-02, -1.6506e-01, -4.5802e-02, -1.2297e-01,  3.9336e-01,
         -1.5896e-01, -1.8261e-01,  6.8139e-02, -3.6231e-02,  1.4252e-01,
         -1.1437e-01, -1.5336e-01, -2.4471e-02, -4.2880e-02,  4.1232e-01,
         -1.6640e-01, -9.0988e-02,  1.1502e-01,  2.5408e-01,  5.3352e-02,
          1.6091e-01, -4.4812e-01,  8.6396e-02,  1.2576e-01,  6.1148e-02,
         -4.6594e-02,  2.8207e-01,  2.7081e-02,  1.6549e-02,  1.2502e-01,
          1.3397e-01,  2.9468e-01, -5.8705e-02,  1.9013e-01,  2.7717e-01,
         -1.3157e-01, -4.5384e-01, -1.2812e-01, -1.1791e-01,  1.3693e-01,
          3.4528e-02,  2.3436e-02, -8.7739e-02,  4.9148e-02,  8.4578e-02,
          8.1873e-02,  8.8783e-02, -2.9184e-02, -3.4232e-02, -7.1916e-02,
          1.9124e-01,  1.4354e-01,  2.3981e-01,  5.7850e-02, -1.1328e-01,
         -1.3821e-01,  1.4899e-01,  5.8573e-02, -1.9320e-01,  1.2825e-03,
         -1.5420e-01,  1.4727e-02,  5.7460e-02, -1.5187e-01,  4.3519e-02,
          1.3770e-02,  9.0605e-02, -9.4285e-02, -1.2292e-01,  2.3512e-01,
          1.5646e-01, -5.2624e-02, -1.0737e-01, -1.3224e-01, -8.8134e-03,
          1.1023e-01,  6.2017e-02, -1.3776e-01, -1.0899e-01,  2.7025e-02,
          1.6338e-01,  1.5363e-01, -3.1104e-02,  1.2829e-01, -1.6485e-01,
         -2.2828e-02, -4.6333e-03, -8.5765e-02,  4.4632e-02,  1.7400e-02,
          1.1249e-01]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
606000 特征值优化 tensor(0.4842, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3543e-01,  1.5952e-01, -1.0768e+00, -1.0155e+00,  2.7716e+00,
          3.8627e+00,  7.5356e-01, -1.7790e+00,  5.4314e-02, -5.4269e-01,
          5.8836e-01, -7.9814e-01, -3.9549e-02, -4.9395e-02,  4.8559e-01,
          1.1200e+00, -5.0332e-01,  6.5916e-01,  6.5330e-01,  1.0358e+00,
          2.2598e-02, -1.0921e-02, -1.5478e-01, -9.3864e-02, -5.9003e-01,
          9.3856e-01,  7.5786e-01,  4.9564e-01, -2.2651e-01,  2.6329e-01,
          2.4869e-01, -2.7043e-03, -4.0041e-02, -1.3882e-01,  3.2007e-01,
          2.7678e-01,  2.3542e-01, -8.5030e-02,  3.2193e-01, -1.9936e-01,
          2.5509e-01,  3.8022e-02, -1.2994e-01,  2.4853e-02, -4.3628e-01,
          2.3162e-02,  3.2480e-01,  1.5863e-01, -2.7870e-01,  8.0239e-02,
         -2.4994e-01, -8.9319e-01,  1.5131e-01, -1.4680e-01, -1.0219e-01,
         -4.5811e-01,  3.2869e-01,  4.4922e-02, -2.4389e-01,  6.4443e-02,
          4.1803e-01,  1.9003e-01, -4.8564e-01,  1.1866e-01, -5.8462e-02,
          1.1765e-01,  5.9350e-02, -2.7026e-01,  3.0613e-01, -2.2383e-01,
          1.1170e-02, -1.6479e-01, -4.6723e-02, -1.2140e-01,  3.9329e-01,
         -1.5896e-01, -1.8115e-01,  7.1306e-02, -3.7716e-02,  1.4293e-01,
         -1.1353e-01, -1.5235e-01, -2.3529e-02, -3.9737e-02,  4.1111e-01,
         -1.6589e-01, -9.2409e-02,  1.1333e-01,  2.5400e-01,  5.8291e-02,
          1.5971e-01, -4.4372e-01,  8.5399e-02,  1.2401e-01,  6.2513e-02,
         -4.8585e-02,  2.8233e-01,  3.5736e-02,  2.4581e-02,  1.2465e-01,
          1.3324e-01,  2.9593e-01, -5.8678e-02,  1.8939e-01,  2.7585e-01,
         -1.3388e-01, -4.5638e-01, -1.2789e-01, -1.2240e-01,  1.3552e-01,
          3.3078e-02,  2.8940e-02, -9.0651e-02,  4.8471e-02,  8.4996e-02,
          8.0442e-02,  8.7366e-02, -2.6614e-02, -3.3053e-02, -7.2022e-02,
          1.8689e-01,  1.4290e-01,  2.4261e-01,  5.8729e-02, -1.1438e-01,
         -1.3867e-01,  1.5053e-01,  5.9209e-02, -1.9248e-01,  1.1606e-03,
         -1.5271e-01,  1.3029e-02,  5.9530e-02, -1.5092e-01,  4.5750e-02,
          1.2348e-02,  8.6865e-02, -9.2279e-02, -1.1973e-01,  2.3707e-01,
          1.5893e-01, -5.4471e-02, -1.0607e-01, -1.3520e-01, -1.0705e-02,
          1.1229e-01,  6.2226e-02, -1.3330e-01, -1.0828e-01,  2.5548e-02,
          1.6347e-01,  1.5095e-01, -3.0538e-02,  1.2758e-01, -1.6181e-01,
         -2.0608e-02, -6.3522e-03, -8.7312e-02,  4.2584e-02,  2.2581e-02,
          1.0965e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
607000 特征值优化 tensor(0.4928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5518e-01,  1.6557e-01, -1.0634e+00, -1.0117e+00,  2.7524e+00,
          3.8555e+00,  7.5101e-01, -1.7816e+00,  4.1193e-02, -5.3043e-01,
          6.0300e-01, -7.9322e-01, -6.6875e-02, -7.3128e-02,  4.9848e-01,
          1.1263e+00, -4.8950e-01,  6.5209e-01,  6.4889e-01,  1.0418e+00,
          8.9154e-03, -1.1488e-02, -1.6479e-01, -7.8303e-02, -5.8542e-01,
          9.3984e-01,  7.5271e-01,  5.0214e-01, -2.2542e-01,  2.7545e-01,
          2.4347e-01,  6.0297e-03, -4.6260e-02, -1.4581e-01,  3.2496e-01,
          2.7708e-01,  2.2616e-01, -8.4856e-02,  3.3146e-01, -1.9371e-01,
          2.5148e-01,  3.6215e-02, -1.2889e-01,  2.6451e-02, -4.3974e-01,
          1.3146e-02,  3.2955e-01,  1.5883e-01, -2.9501e-01,  7.7833e-02,
         -2.5393e-01, -8.9121e-01,  1.5477e-01, -1.4918e-01, -9.7840e-02,
         -4.5491e-01,  3.3569e-01,  3.3227e-02, -2.4610e-01,  6.4736e-02,
          4.2378e-01,  1.7447e-01, -4.8482e-01,  1.1917e-01, -4.5449e-02,
          1.0888e-01,  6.4897e-02, -2.6446e-01,  3.0037e-01, -2.2070e-01,
          1.8001e-02, -1.6650e-01, -4.7207e-02, -1.1703e-01,  3.8841e-01,
         -1.6453e-01, -1.7863e-01,  1.0033e-01, -4.3621e-02,  1.4081e-01,
         -1.1578e-01, -1.5263e-01, -2.2813e-02, -3.6099e-02,  4.0838e-01,
         -1.6233e-01, -1.0092e-01,  1.0797e-01,  2.3976e-01,  4.5406e-02,
          1.5476e-01, -4.3749e-01,  9.0233e-02,  1.3141e-01,  6.3570e-02,
         -4.9489e-02,  2.8311e-01,  3.9420e-02,  3.5533e-02,  1.2516e-01,
          1.2228e-01,  3.0425e-01, -5.1090e-02,  1.9410e-01,  2.7996e-01,
         -1.2957e-01, -4.7358e-01, -1.2628e-01, -1.2326e-01,  1.2912e-01,
          2.6993e-02,  3.1592e-02, -9.3896e-02,  4.7425e-02,  8.4694e-02,
          8.8992e-02,  7.7263e-02, -2.1919e-02, -2.3690e-02, -7.7365e-02,
          1.7977e-01,  1.3838e-01,  2.4526e-01,  6.0790e-02, -1.1513e-01,
         -1.3855e-01,  1.5258e-01,  5.8291e-02, -1.9760e-01,  1.5968e-03,
         -1.5182e-01,  7.5250e-03,  5.2793e-02, -1.4480e-01,  5.0013e-02,
          4.1567e-03,  7.6161e-02, -8.7132e-02, -1.0747e-01,  2.4809e-01,
          1.6863e-01, -6.8096e-02, -1.2375e-01, -1.3274e-01, -1.0010e-02,
          1.1202e-01,  5.5173e-02, -1.4039e-01, -1.0569e-01,  2.1881e-02,
          1.6779e-01,  1.4311e-01, -3.7117e-02,  1.2800e-01, -1.3706e-01,
         -2.5624e-02, -1.0545e-02, -9.5232e-02,  5.4182e-02,  1.3278e-02,
          8.9899e-02]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
608000 特征值优化 tensor(0.4839, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7707e-01,  1.5903e-01, -1.0616e+00, -1.0160e+00,  2.7742e+00,
          3.8591e+00,  7.4686e-01, -1.7618e+00,  4.5538e-02, -5.3092e-01,
          6.1496e-01, -7.7738e-01, -7.6414e-02, -9.3532e-02,  5.0897e-01,
          1.1375e+00, -4.9617e-01,  6.5121e-01,  6.4406e-01,  1.0464e+00,
          1.3795e-02, -5.8862e-03, -1.6557e-01, -9.9360e-02, -5.7801e-01,
          9.4578e-01,  7.4543e-01,  4.9477e-01, -2.1982e-01,  2.6654e-01,
          2.3640e-01,  1.7576e-03, -5.4336e-02, -1.5151e-01,  3.2847e-01,
          2.8470e-01,  2.2147e-01, -8.1724e-02,  3.3007e-01, -2.0157e-01,
          2.5631e-01,  3.7083e-02, -1.2773e-01,  3.2516e-02, -4.4217e-01,
          1.4143e-02,  3.2533e-01,  1.6692e-01, -2.9174e-01,  8.2781e-02,
         -2.5867e-01, -8.8925e-01,  1.4886e-01, -1.5058e-01, -9.6211e-02,
         -4.5904e-01,  3.3361e-01,  2.4261e-02, -2.5040e-01,  6.5018e-02,
          4.2355e-01,  1.7168e-01, -4.8505e-01,  1.2480e-01, -3.8811e-02,
          1.1642e-01,  6.1330e-02, -2.7256e-01,  2.9502e-01, -2.1843e-01,
          2.1102e-02, -1.6499e-01, -4.7463e-02, -1.2180e-01,  3.8909e-01,
         -1.7101e-01, -1.6990e-01,  9.5759e-02, -4.7239e-02,  1.4082e-01,
         -1.1693e-01, -1.5293e-01, -2.2264e-02, -4.4608e-02,  4.0884e-01,
         -1.4936e-01, -1.1687e-01,  9.5926e-02,  2.6104e-01,  4.4546e-02,
          1.4790e-01, -4.4484e-01,  1.0992e-01,  1.3407e-01,  5.7259e-02,
         -4.9445e-02,  2.9185e-01,  3.3472e-02,  1.7314e-02,  1.3024e-01,
          1.1895e-01,  3.0072e-01, -5.5644e-02,  1.9458e-01,  2.8287e-01,
         -1.2145e-01, -4.6868e-01, -1.2138e-01, -1.1159e-01,  1.4048e-01,
          2.7612e-02,  3.4878e-02, -9.7943e-02,  5.9176e-02,  9.3209e-02,
          9.5833e-02,  7.7818e-02, -2.6356e-02, -1.8464e-02, -8.3545e-02,
          1.8226e-01,  1.4189e-01,  2.4296e-01,  5.9502e-02, -1.1936e-01,
         -1.3903e-01,  1.4819e-01,  6.0802e-02, -1.9825e-01, -7.4017e-03,
         -1.5387e-01,  7.6849e-03,  5.1497e-02, -1.4803e-01,  5.0945e-02,
          7.9909e-03,  7.8773e-02, -8.5617e-02, -1.2185e-01,  2.4177e-01,
          1.6649e-01, -6.6420e-02, -1.2578e-01, -1.2530e-01, -2.2912e-02,
          1.1189e-01,  6.3248e-02, -1.4444e-01, -1.0435e-01,  2.1276e-02,
          1.5695e-01,  1.4152e-01, -3.3148e-02,  1.2873e-01, -1.3725e-01,
         -2.8240e-02, -6.4815e-03, -8.9522e-02,  6.0431e-02,  1.7002e-02,
          8.4532e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
609000 特征值优化 tensor(0.4829, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9424e-01,  1.5812e-01, -1.0774e+00, -1.0153e+00,  2.8031e+00,
          3.8464e+00,  7.5786e-01, -1.7343e+00,  5.4630e-02, -5.5009e-01,
          6.0762e-01, -7.9328e-01, -4.1211e-02, -6.2291e-02,  5.0917e-01,
          1.1282e+00, -5.1408e-01,  6.5253e-01,  6.4295e-01,  1.0456e+00,
          1.8394e-02,  5.9230e-03, -1.6624e-01, -1.1986e-01, -5.8907e-01,
          9.3431e-01,  7.6624e-01,  4.8268e-01, -2.3588e-01,  2.6069e-01,
          2.5286e-01, -1.5773e-02, -3.0091e-02, -1.6591e-01,  3.1749e-01,
          2.9164e-01,  2.4036e-01, -8.8671e-02,  3.1922e-01, -2.0381e-01,
          2.6116e-01,  3.8374e-02, -1.3108e-01,  2.3901e-02, -4.3236e-01,
          1.5336e-02,  3.2131e-01,  1.7095e-01, -2.7146e-01,  8.5742e-02,
         -2.5964e-01, -8.9647e-01,  1.5668e-01, -1.4877e-01, -9.9891e-02,
         -4.7850e-01,  3.3397e-01,  2.9044e-02, -2.4654e-01,  6.2978e-02,
          4.2150e-01,  1.8591e-01, -4.7115e-01,  1.1820e-01, -5.2769e-02,
          1.3026e-01,  3.7699e-02, -2.6813e-01,  2.9914e-01, -2.2147e-01,
          8.3972e-03, -1.6821e-01, -5.2318e-02, -1.2015e-01,  3.8986e-01,
         -1.6455e-01, -1.7886e-01,  6.4626e-02, -4.7751e-02,  1.3777e-01,
         -1.1147e-01, -1.5799e-01, -2.6376e-02, -6.0070e-02,  4.1331e-01,
         -1.6856e-01, -8.5121e-02,  9.5977e-02,  1.9620e-01,  4.5601e-02,
          1.5230e-01, -4.2813e-01,  8.9525e-02,  1.1803e-01,  6.5054e-02,
         -4.9183e-02,  2.8353e-01, -3.0951e-03,  6.7853e-03,  1.5297e-01,
          1.2939e-01,  2.9881e-01, -6.2439e-02,  1.8440e-01,  2.7272e-01,
         -1.1388e-01, -4.5304e-01, -1.2402e-01, -1.2651e-01,  1.3629e-01,
          4.0943e-02,  3.8665e-02, -1.1448e-01,  5.5241e-02,  8.6498e-02,
          8.9024e-02,  8.9011e-02, -1.9987e-02, -3.2071e-02, -7.0082e-02,
          1.7773e-01,  1.4193e-01,  2.4094e-01,  6.2039e-02, -1.1680e-01,
         -1.3790e-01,  1.4355e-01,  5.8352e-02, -1.8744e-01, -4.7824e-03,
         -1.4623e-01,  1.8213e-02,  5.1830e-02, -1.4731e-01,  4.6558e-02,
          1.9798e-02,  1.0043e-01, -9.4635e-02, -1.3246e-01,  2.2739e-01,
          1.6443e-01, -4.0792e-02, -1.0894e-01, -1.4379e-01, -1.8991e-02,
          1.1279e-01,  6.8054e-02, -1.4331e-01, -9.5050e-02,  2.4968e-02,
          1.6110e-01,  1.5686e-01, -2.5306e-02,  1.3284e-01, -1.7528e-01,
         -1.8191e-02,  3.5871e-03, -8.9964e-02,  3.7726e-02,  1.1489e-02,
          1.1375e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
610000 特征值优化 tensor(0.4868, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7687e-01,  1.7228e-01, -1.0774e+00, -1.0162e+00,  2.8322e+00,
          3.8301e+00,  7.5644e-01, -1.7439e+00,  5.1661e-02, -5.3401e-01,
          6.1534e-01, -8.0451e-01, -3.9113e-02, -7.1411e-02,  5.0467e-01,
          1.1274e+00, -5.0297e-01,  6.4774e-01,  6.5204e-01,  1.0580e+00,
          8.7538e-03, -8.1483e-03, -1.7663e-01, -1.0510e-01, -5.7891e-01,
          9.3446e-01,  7.5320e-01,  4.8147e-01, -2.3453e-01,  2.6372e-01,
          2.4179e-01, -1.3385e-03, -4.3521e-02, -1.5520e-01,  3.2285e-01,
          2.8821e-01,  2.2866e-01, -8.0145e-02,  3.2870e-01, -1.9801e-01,
          2.6563e-01,  3.9279e-02, -1.3053e-01,  2.5994e-02, -4.3547e-01,
          7.1752e-03,  3.2767e-01,  1.7145e-01, -2.8435e-01,  8.5087e-02,
         -2.6322e-01, -8.9380e-01,  1.6523e-01, -1.5145e-01, -1.0444e-01,
         -4.6922e-01,  3.3378e-01,  2.2346e-02, -2.4662e-01,  6.7357e-02,
          4.1773e-01,  1.8700e-01, -4.7400e-01,  1.2681e-01, -5.9506e-02,
          1.1714e-01,  5.4617e-02, -2.6997e-01,  2.9857e-01, -2.1982e-01,
          1.2176e-02, -1.6987e-01, -4.7517e-02, -1.2639e-01,  3.9034e-01,
         -1.5743e-01, -1.7697e-01,  8.5953e-02, -2.5035e-02,  1.4541e-01,
         -1.1904e-01, -1.5546e-01, -2.6147e-02, -3.8775e-02,  4.0060e-01,
         -1.5763e-01, -1.0863e-01,  9.3438e-02,  2.3392e-01,  7.0231e-02,
          1.4671e-01, -4.3017e-01,  9.0380e-02,  1.2824e-01,  6.7743e-02,
         -5.3034e-02,  2.8540e-01,  1.4361e-02,  1.1643e-02,  1.2786e-01,
          1.2635e-01,  2.9623e-01, -5.5270e-02,  1.9290e-01,  2.8355e-01,
         -1.1414e-01, -4.4646e-01, -1.2050e-01, -1.1460e-01,  1.3621e-01,
          2.9762e-02,  4.0608e-02, -1.0860e-01,  4.1766e-02,  9.1551e-02,
          8.7920e-02,  8.2748e-02, -2.6325e-02, -2.6260e-02, -7.9999e-02,
          1.8521e-01,  1.4479e-01,  2.4721e-01,  6.5453e-02, -1.1909e-01,
         -1.4299e-01,  1.5602e-01,  5.2356e-02, -1.8411e-01, -1.2189e-02,
         -1.4793e-01,  1.1237e-02,  5.1174e-02, -1.4549e-01,  4.8238e-02,
          8.7758e-03,  8.8689e-02, -9.3940e-02, -1.1965e-01,  2.4774e-01,
          1.6394e-01, -5.3874e-02, -1.0475e-01, -1.4483e-01, -1.8741e-02,
          1.2033e-01,  5.7878e-02, -1.4073e-01, -1.1104e-01,  2.5420e-02,
          1.5850e-01,  1.4478e-01, -2.9133e-02,  1.2403e-01, -1.4936e-01,
         -2.0642e-02,  1.9284e-04, -9.0389e-02,  3.6580e-02,  2.5465e-02,
          1.0009e-01]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
611000 特征值优化 tensor(0.4831, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6194e-01,  1.5912e-01, -1.0606e+00, -1.0164e+00,  2.8272e+00,
          3.8356e+00,  7.5368e-01, -1.7426e+00,  5.1730e-02, -5.4164e-01,
          6.2428e-01, -7.9299e-01, -5.4870e-02, -9.5367e-02,  5.2099e-01,
          1.1296e+00, -4.8551e-01,  6.4557e-01,  6.5431e-01,  1.0535e+00,
          5.3132e-04, -1.0692e-02, -1.7205e-01, -1.0466e-01, -5.7910e-01,
          9.3857e-01,  7.4859e-01,  4.8201e-01, -2.2586e-01,  2.6688e-01,
          2.4209e-01,  4.4876e-03, -5.3494e-02, -1.5123e-01,  3.2879e-01,
          2.8877e-01,  2.1005e-01, -8.2756e-02,  3.3135e-01, -2.0311e-01,
          2.6291e-01,  3.6982e-02, -1.2798e-01,  3.3802e-02, -4.4048e-01,
         -5.0148e-04,  3.2488e-01,  1.7403e-01, -2.8016e-01,  8.0631e-02,
         -2.6782e-01, -8.9030e-01,  1.5719e-01, -1.5421e-01, -9.1153e-02,
         -4.6375e-01,  3.3368e-01,  2.3742e-02, -2.4852e-01,  7.0915e-02,
          4.2471e-01,  1.6463e-01, -4.8781e-01,  1.1984e-01, -4.8074e-02,
          1.1808e-01,  5.8316e-02, -2.7688e-01,  2.9249e-01, -2.1958e-01,
          2.1368e-02, -1.7063e-01, -4.9513e-02, -1.1414e-01,  3.8593e-01,
         -1.7030e-01, -1.7068e-01,  1.0191e-01, -5.0535e-02,  1.4190e-01,
         -1.1666e-01, -1.5254e-01, -1.9389e-02, -3.6381e-02,  4.0852e-01,
         -1.4366e-01, -1.2432e-01,  9.0797e-02,  2.4902e-01,  5.9208e-02,
          1.4277e-01, -4.2740e-01,  1.0738e-01,  1.4099e-01,  5.8437e-02,
         -5.0582e-02,  2.9123e-01,  3.7045e-02,  4.4411e-02,  1.2414e-01,
          1.1694e-01,  3.0242e-01, -6.0442e-02,  1.9886e-01,  2.8844e-01,
         -1.2746e-01, -4.5888e-01, -1.1633e-01, -1.1853e-01,  1.4911e-01,
          2.3014e-02,  5.1160e-02, -1.0912e-01,  5.2718e-02,  9.2667e-02,
          8.1047e-02,  8.5077e-02, -3.3658e-02, -1.5689e-02, -8.4899e-02,
          1.8742e-01,  1.4104e-01,  2.4373e-01,  6.3804e-02, -1.2210e-01,
         -1.3964e-01,  1.5142e-01,  5.3052e-02, -1.9387e-01, -1.1825e-02,
         -1.5529e-01,  5.6705e-03,  5.4604e-02, -1.4596e-01,  5.0784e-02,
          1.2860e-02,  7.0913e-02, -8.8529e-02, -1.0969e-01,  2.3990e-01,
          1.7529e-01, -6.3903e-02, -1.2478e-01, -1.2251e-01, -2.8518e-02,
          1.2113e-01,  6.1903e-02, -1.4389e-01, -1.0459e-01,  1.9953e-02,
          1.5947e-01,  1.3527e-01, -2.5353e-02,  1.3124e-01, -1.3237e-01,
         -2.7243e-02, -4.2974e-03, -9.5843e-02,  5.8694e-02,  1.9439e-02,
          9.1242e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
612000 特征值优化 tensor(23.4404, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2662e+00, -1.3729e+00,  1.0867e+00, -1.8129e-01,  1.0904e+00,
          1.5744e+00, -7.8913e-02, -1.0703e+00,  8.3765e-01,  1.0704e+00,
          8.7820e-02, -1.1566e+00,  1.0777e+00,  5.1566e-01, -1.9080e-03,
         -5.5333e-01, -3.3667e-01, -2.0591e-01,  1.0170e+00, -1.3278e+00,
         -1.2796e+00, -5.7410e-01, -3.6147e-01, -3.0194e-01,  1.0951e+00,
          5.0565e-01,  4.3289e-01,  5.2805e-01,  1.6471e-01,  6.8199e-01,
         -1.2513e-01, -1.5296e-01, -1.3912e-01,  3.9544e-01,  1.1853e+00,
          3.4982e-01, -7.5519e-01, -6.1342e-01, -6.4352e-03,  2.8935e-01,
          6.5764e-01, -7.6818e-02,  7.4535e-02,  4.2362e-01,  1.6614e-01,
          2.9307e-02, -3.2150e-01, -1.5029e+00, -1.1163e+00,  5.2117e-01,
          5.4531e-01,  2.9807e-01,  1.5744e+00, -4.3606e-02, -9.7177e-01,
         -7.5066e-01, -4.8551e-02, -3.2161e-01,  2.0001e-01, -4.7487e-01,
          1.1494e+00,  3.1956e-01,  4.0376e-01, -1.9697e-01,  1.3326e+00,
         -3.8970e-01,  1.3686e+00, -1.8465e-01,  1.3216e-01, -1.7663e-01,
          1.0602e+00,  7.9526e-02,  3.5835e-01,  2.0588e-01,  2.3650e-01,
         -7.5639e-01, -2.2487e-01,  5.4061e-01, -4.9301e-01, -2.3021e-02,
          5.5092e-02,  2.0480e-02,  7.1862e-01,  4.8684e-02, -1.7632e-01,
          1.0100e-01,  1.6065e-01,  4.3758e-01,  1.1191e-01,  2.4954e-02,
         -7.1982e-01,  1.2183e+00, -2.7263e-01, -1.1503e+00,  1.5970e-01,
         -6.7238e-01, -1.7279e+00,  3.2087e-01,  6.7224e-01,  1.4681e+00,
          6.6576e-01, -2.6810e-01, -1.7222e-01,  1.3644e-01,  2.0128e+00,
         -5.7635e-01, -1.2644e+00,  8.5502e-01, -2.8808e-01, -1.1681e+00,
         -2.3071e-01,  3.4353e-01, -6.5721e-01,  8.0204e-01,  1.4545e-01,
          1.3194e+00,  1.0516e-01,  4.7197e-01,  1.1006e+00,  3.1292e-01,
         -5.6880e-01,  2.1607e-01,  3.8221e-01, -8.9644e-01, -1.7698e-01,
          6.3044e-01,  6.9302e-01,  5.6102e-01,  2.8960e-01,  7.7775e-02,
          7.5520e-01, -9.8298e-02, -7.3249e-01,  3.0476e-01, -4.3262e-01,
         -1.0915e+00, -9.5268e-01,  4.6311e-01,  6.8638e-01, -4.4905e-01,
          9.2596e-02, -3.5556e-02,  8.8924e-01, -7.9326e-02,  1.5924e+00,
         -3.3667e-01, -1.7580e+00,  8.4516e-02, -1.0000e+00, -1.6097e+00,
          4.0662e-01,  1.5875e-01,  4.4136e-01,  3.5120e-01, -2.6288e-01,
         -1.2717e-03,  1.3281e-01, -2.9115e-01,  8.6037e-01, -1.7196e-01,
          9.6229e-01]], device='cuda:0') tensor(0.2415, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
613000 特征值优化 tensor(4.3365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0632, -0.6990,  0.4744, -0.9385,  1.0583,  1.9242,  0.3319, -1.6012,
          1.3097,  0.7758, -0.0543, -0.3607,  0.0142, -0.1213,  0.1919, -0.2244,
         -0.0768, -0.2206,  0.5673, -0.6981, -1.2066, -0.2716, -0.1802, -0.3771,
          0.7282,  0.3025,  0.2455, -0.1996,  0.1461,  0.2631, -0.1874,  0.1284,
          0.1395,  0.1990,  0.2761,  0.0313, -0.1021,  0.0906,  0.2867, -0.1604,
          0.0714, -0.0444,  0.1213,  0.2681,  0.0128, -0.0840, -0.0232, -0.5428,
         -0.3292, -0.1686,  0.1482, -0.1042,  0.7867,  0.0583, -0.3718, -0.3411,
          0.1363, -0.2786,  0.1495, -0.4401,  0.3502,  0.2576,  0.1954,  0.0566,
          0.4761,  0.0181,  0.5706, -0.0646, -0.0351, -0.1320,  0.5043,  0.1640,
          0.1127, -0.1073,  0.3264, -0.0962, -0.0052, -0.1244,  0.1642, -0.2886,
         -0.1359, -0.0375,  0.0795,  0.0315,  0.1397,  0.1573, -0.1379,  0.2758,
          0.2702, -0.2059, -0.0672,  0.4263, -0.3092, -0.1241,  0.2596, -0.6330,
         -0.2264, -0.2292,  0.1799,  0.7901,  0.7322,  0.2306,  0.4109,  0.0606,
          1.0218, -0.3794, -0.9079,  0.0585, -0.1763, -0.5859, -0.0713,  0.0263,
         -0.0440,  0.1515,  0.0143,  0.4691, -0.1663, -0.0195,  0.4245,  0.1799,
          0.0592,  0.0519,  0.0139, -0.3216, -0.1264,  0.2106,  0.1268,  0.2250,
         -0.0799,  0.0514,  0.1252, -0.0315, -0.1766,  0.0023,  0.0492, -0.1121,
         -0.1965,  0.2708,  0.0164, -0.2273, -0.2140,  0.2226,  0.1827, -0.0380,
          0.6241,  0.0693, -0.6793, -0.3895, -0.3056, -0.7044,  0.2518, -0.1815,
         -0.0428, -0.0302, -0.2210, -0.0673,  0.2021, -0.1431,  0.1118, -0.1384,
          0.2573]], device='cuda:0') tensor(0.2067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
614000 特征值优化 tensor(1.2995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6937e+00,  9.1360e-02, -7.7933e-01, -8.3690e-01,  1.1117e+00,
          2.7960e+00,  4.8619e-01, -1.8917e+00,  6.0207e-01,  6.8672e-01,
         -6.1473e-01, -4.5475e-01, -5.0699e-01, -4.6109e-01,  2.1667e-01,
         -5.4277e-01, -1.3686e-01, -5.0919e-01,  7.5670e-01, -6.1252e-01,
         -1.0209e+00, -9.1591e-03,  2.2232e-01, -7.7542e-01,  6.3529e-01,
         -4.0175e-02,  1.2762e-01, -2.0605e-01,  1.3123e-01,  5.7375e-02,
         -2.0285e-02,  1.9318e-01,  3.5251e-01,  2.0306e-01, -2.3554e-01,
          2.4925e-02,  2.0328e-03,  8.7803e-02,  4.9520e-01,  4.9658e-02,
          1.1361e-01,  7.6695e-02, -1.1161e-02,  1.9698e-01, -1.9216e-01,
         -3.1593e-02, -3.9620e-02, -2.4812e-01, -2.3962e-02,  2.1523e-01,
          1.3734e-01, -1.1763e-01,  6.1664e-01,  4.6531e-01, -2.0911e-01,
         -2.0240e-01,  1.3892e-01, -2.0439e-01,  1.9650e-01, -2.2148e-01,
          8.7856e-03,  3.7634e-01,  2.9386e-01, -3.0352e-02,  3.4027e-01,
          1.6308e-01,  4.1762e-01,  4.5482e-01,  6.8240e-02, -3.7462e-02,
          3.8658e-01,  8.0193e-02,  6.2534e-02, -2.7397e-01,  1.8479e-01,
         -2.2921e-02, -2.8484e-03, -1.2386e-01,  2.4051e-01, -1.6287e-01,
          5.0834e-02,  1.0956e-01,  1.5367e-01,  3.6982e-01, -6.9278e-02,
          7.7857e-02, -3.8240e-02,  8.8680e-04, -7.2792e-02, -2.0313e-01,
          1.6138e-01, -5.2728e-02, -1.4212e-01, -2.4766e-01,  2.8085e-01,
         -4.4149e-01,  2.4798e-01, -1.4093e-01, -2.3767e-01,  2.9243e-01,
          3.8372e-01,  1.0050e-01,  8.5021e-02,  5.1276e-02,  6.9523e-01,
         -5.9043e-01, -4.3807e-01,  7.0360e-02, -7.0654e-03, -3.5613e-01,
         -4.5249e-02,  2.0518e-01,  9.8264e-02,  6.3148e-02,  3.7546e-02,
          1.8426e-01, -1.2282e-02, -2.9081e-02,  2.7382e-01,  6.2538e-02,
          5.4922e-02,  1.6123e-01,  3.5735e-02, -2.4785e-01, -1.6041e-01,
          2.0275e-02, -4.8763e-02,  2.5152e-01, -1.4141e-01, -6.5022e-02,
         -6.9546e-02, -5.7846e-02, -8.4346e-03, -1.6686e-01, -4.6688e-02,
         -1.1967e-02,  1.7161e-01,  4.9103e-01, -1.5988e-02, -8.6274e-04,
          2.5025e-02,  2.2548e-01, -1.1793e-01, -1.6999e-02,  2.8046e-01,
          2.0554e-01, -5.0936e-01, -2.1586e-01, -5.4178e-02, -3.9988e-01,
          3.0084e-02, -2.9504e-01,  4.2169e-02, -1.1017e-01, -1.5936e-01,
         -1.7054e-01,  1.7127e-02,  1.0361e-02,  6.1510e-02,  3.8109e-02,
          1.7043e-01]], device='cuda:0') tensor(0.2168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
615000 特征值优化 tensor(1.1041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7920e+00,  1.1672e-01, -1.0245e+00, -8.7802e-01,  1.1583e+00,
          3.0855e+00,  4.6830e-01, -1.9399e+00,  4.3946e-01,  6.5065e-01,
         -8.3345e-01, -3.2298e-01, -7.0547e-01, -4.7331e-01,  1.8046e-01,
         -7.3167e-01, -1.7626e-01, -6.1378e-01,  8.7953e-01, -6.0486e-01,
         -9.1947e-01, -4.1990e-02,  3.4510e-01, -8.4552e-01,  5.7912e-01,
         -6.8485e-02,  5.4137e-02, -2.3631e-01,  2.9860e-03,  3.8766e-02,
          9.8873e-02,  1.5789e-01,  3.5850e-01,  2.4828e-01, -3.0168e-01,
          2.9464e-02, -1.1980e-02,  4.9631e-02,  5.0685e-01,  9.5214e-02,
          9.8210e-02,  6.8111e-02, -9.7970e-03,  1.1658e-01, -1.5155e-01,
          4.8688e-02, -3.2391e-02, -2.3803e-01, -2.6025e-02,  4.4401e-01,
          8.3206e-02, -6.7108e-02,  6.1769e-01,  4.7200e-01, -1.5789e-01,
         -6.9675e-02,  2.1938e-02, -1.5795e-01, -3.0097e-02, -1.3061e-01,
         -7.2686e-02,  3.1678e-01,  3.8018e-01, -8.9919e-02,  3.4538e-01,
          1.7732e-01,  3.3875e-01,  3.7381e-01,  1.2984e-01, -4.4362e-02,
          3.7205e-01,  1.2158e-01, -1.0459e-02, -2.6817e-01,  1.2688e-01,
          5.8777e-02,  2.3389e-02, -8.9597e-02,  2.9166e-01, -1.4779e-01,
          1.3051e-01,  1.1816e-01,  1.2832e-01,  4.3515e-01, -1.6765e-01,
          4.0364e-02, -7.8413e-02, -9.7301e-02,  7.1163e-02, -2.6127e-01,
          1.7497e-01, -1.0146e-01, -4.9705e-02, -2.3695e-01,  1.2250e-01,
         -2.7537e-01,  2.8868e-01, -3.8241e-02, -1.7221e-01,  3.5187e-01,
          3.4037e-01,  8.9513e-02,  5.6471e-02, -9.2739e-02,  6.2052e-01,
         -5.3339e-01, -3.3957e-01,  1.4090e-02,  6.1586e-02, -3.0179e-01,
         -3.5071e-02,  1.9726e-01,  5.9100e-02,  3.1561e-02,  1.7023e-02,
          8.8019e-02,  3.3135e-02,  3.4989e-02,  2.7229e-01,  1.2937e-01,
          3.3191e-02,  1.8356e-01,  7.5678e-02, -2.4937e-01, -1.5501e-01,
          3.6078e-02, -4.6558e-02,  3.1185e-01, -1.9338e-01, -5.1071e-02,
         -9.6803e-02, -5.9908e-02, -1.3130e-02, -1.6647e-01, -1.0519e-02,
         -5.2225e-02,  2.2467e-01,  4.2149e-01, -1.3195e-02,  3.9947e-02,
          7.7860e-02,  1.2539e-01, -8.8332e-02,  6.3780e-03,  2.1677e-01,
          2.7249e-01, -3.7311e-01, -1.6368e-01, -1.9390e-02, -4.0369e-01,
          8.1870e-02, -3.0250e-01,  1.1669e-01,  3.2484e-03, -8.6041e-02,
         -8.0383e-02,  6.9076e-02,  2.0210e-03, -1.7283e-02,  8.0826e-02,
          8.3742e-02]], device='cuda:0') tensor(0.2205, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
616000 特征值优化 tensor(1.0843, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9028e+00,  1.2547e-01, -1.2334e+00, -8.8587e-01,  1.3702e+00,
          3.2524e+00,  5.2021e-01, -1.8845e+00,  4.0065e-01,  6.8177e-01,
         -8.3048e-01, -3.1922e-01, -7.6944e-01, -4.7891e-01,  1.5422e-01,
         -8.5382e-01, -2.1781e-01, -6.4434e-01,  9.2600e-01, -6.5463e-01,
         -9.1003e-01, -3.5733e-02,  3.6911e-01, -7.8082e-01,  6.2946e-01,
         -4.3520e-02, -3.1780e-02, -2.5919e-01, -1.0238e-02,  1.7312e-02,
          6.5844e-02, -1.1566e-02,  3.1383e-01,  1.9678e-01, -2.7274e-01,
          1.4364e-02, -2.4809e-02, -2.9034e-02,  4.8669e-01,  1.0854e-01,
          8.2906e-02,  6.7102e-02, -3.5150e-03,  9.1417e-02, -1.3752e-01,
          5.0522e-03,  3.0153e-02, -2.5582e-01, -6.1585e-02,  4.7801e-01,
          4.3396e-02, -1.9516e-02,  5.6485e-01,  4.4052e-01, -1.6613e-01,
         -2.2728e-02,  1.2075e-02, -1.2842e-01, -9.9399e-02, -7.0467e-02,
         -1.0424e-01,  3.4247e-01,  3.7183e-01, -1.1919e-01,  3.4255e-01,
          1.9146e-01,  2.8741e-01,  3.0730e-01,  7.8949e-02, -4.1613e-02,
          3.7152e-01,  1.3336e-01,  1.5524e-02, -2.6052e-01,  1.3523e-01,
          7.5575e-02,  4.5848e-02, -1.7054e-02,  3.1392e-01, -1.3641e-01,
          1.6210e-01,  1.2655e-01,  1.0826e-01,  4.5858e-01, -1.5710e-01,
          5.0864e-02, -9.3754e-02, -1.8752e-01,  4.9280e-02, -2.0046e-01,
          1.6047e-01, -3.6188e-02, -1.0189e-02, -2.0964e-01,  6.9814e-02,
         -2.0102e-01,  3.4606e-01,  2.2999e-03, -1.7371e-01,  3.2206e-01,
          3.1220e-01,  5.5314e-02,  2.8812e-02, -1.2122e-01,  5.5206e-01,
         -5.8839e-01, -3.6740e-01, -1.9543e-02,  9.0978e-02, -2.8657e-01,
         -4.1042e-02,  2.5384e-01,  6.5163e-02,  5.3577e-02,  1.9634e-02,
          1.3335e-02,  4.3388e-02,  4.8831e-02,  2.7717e-01,  1.8396e-01,
          5.3803e-02,  2.3256e-01,  5.9505e-02, -2.6012e-01, -1.4652e-01,
          6.8496e-02, -4.2410e-02,  2.9694e-01, -1.6418e-01, -1.8857e-02,
         -7.1726e-02, -5.8940e-02,  2.5380e-02, -1.7782e-01, -4.0486e-02,
         -1.0198e-01,  1.9617e-01,  4.0662e-01,  4.6740e-02,  2.1187e-02,
          9.5360e-02,  1.3626e-01, -3.0168e-02,  6.1134e-04,  1.9773e-01,
          2.9572e-01, -2.8250e-01, -1.3351e-01,  7.5457e-03, -3.6943e-01,
          1.1904e-01, -2.9187e-01,  1.7122e-01,  3.1159e-02, -1.0391e-01,
         -3.0471e-02,  1.0783e-01, -2.0096e-02, -1.0900e-02,  8.0253e-02,
          7.5480e-02]], device='cuda:0') tensor(0.2174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
617000 正交保障 tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9652e+00,  1.8580e-01, -1.3682e+00, -9.0938e-01,  1.6173e+00,
          3.2543e+00,  5.4728e-01, -1.8740e+00,  4.0458e-01,  7.4066e-01,
         -7.3629e-01, -3.0909e-01, -7.9137e-01, -4.4111e-01,  8.6569e-02,
         -9.8107e-01, -2.5875e-01, -6.5536e-01,  9.4571e-01, -6.4782e-01,
         -9.1762e-01, -2.3185e-02,  3.5975e-01, -7.5926e-01,  6.2441e-01,
         -9.0903e-02, -1.1675e-01, -2.8198e-01, -2.8869e-02, -1.1794e-02,
          4.1643e-02, -9.1568e-02,  2.2270e-01,  1.2321e-01, -2.1669e-01,
         -2.5314e-02, -1.3232e-02, -9.0549e-02,  4.6224e-01,  8.4459e-02,
          6.6070e-02,  6.3256e-02, -8.3015e-03,  5.5597e-02, -9.4633e-02,
         -2.2792e-02,  1.4198e-01, -2.5220e-01, -5.6049e-02,  4.5890e-01,
          5.8614e-02, -8.9115e-03,  5.2471e-01,  4.1063e-01, -2.0052e-01,
          5.1157e-03,  3.8115e-03, -1.4777e-01, -1.4037e-01, -4.9406e-02,
         -1.4756e-01,  4.4574e-01,  3.3043e-01, -1.5135e-01,  3.5281e-01,
          2.3077e-01,  2.3074e-01,  2.3349e-01,  3.1421e-02, -6.6422e-03,
          3.7205e-01,  1.2960e-01,  3.5650e-02, -2.5691e-01,  1.4882e-01,
          6.6778e-02,  1.0103e-01,  3.8252e-02,  3.2662e-01, -1.3267e-01,
          1.7273e-01,  1.2172e-01,  8.1679e-02,  4.9615e-01, -1.1890e-01,
          7.8407e-02, -8.0984e-02, -2.8186e-01,  7.9951e-02, -2.4284e-01,
          1.5050e-01, -3.9286e-02,  4.4066e-02, -1.7964e-01,  7.9833e-02,
         -1.5784e-01,  3.8006e-01, -1.5574e-02, -9.5025e-02,  2.6527e-01,
          3.0384e-01,  2.3427e-02,  1.2195e-01, -1.3425e-01,  4.9484e-01,
         -5.7679e-01, -3.8743e-01, -2.4016e-02,  6.6106e-02, -2.7442e-01,
         -2.6570e-02,  2.2520e-01,  8.2298e-02,  7.7849e-02,  1.1417e-02,
         -4.1924e-02,  4.3943e-02,  7.4866e-02,  2.8224e-01,  2.3140e-01,
         -1.3558e-02,  2.8268e-01,  6.2164e-02, -2.6089e-01, -1.1738e-01,
          9.5587e-02, -3.7331e-02,  2.6597e-01, -1.4777e-01, -4.2851e-03,
         -5.3803e-02, -6.0381e-02,  5.2492e-02, -1.7292e-01, -8.2364e-02,
         -1.0852e-01,  1.8306e-01,  4.2034e-01,  6.4443e-02,  1.6505e-02,
          6.1373e-02,  1.4342e-01, -5.6571e-03,  2.2096e-02,  1.9272e-01,
          3.1183e-01, -2.3601e-01, -1.2478e-01,  5.8040e-02, -3.1408e-01,
          1.5236e-01, -2.6818e-01,  2.2076e-01,  5.0037e-02, -9.8382e-02,
         -1.1959e-02,  8.8653e-02, -5.0337e-04, -1.0356e-02,  9.0048e-02,
          1.0702e-01]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
618000 特征值优化 tensor(1.0483, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9252e+00,  2.6013e-01, -1.4883e+00, -9.1200e-01,  1.8459e+00,
          3.1736e+00,  5.9033e-01, -1.8914e+00,  4.1962e-01,  7.2277e-01,
         -5.6144e-01, -3.2357e-01, -8.3201e-01, -4.8551e-01,  4.0649e-02,
         -1.0822e+00, -2.9619e-01, -6.6473e-01,  9.4476e-01, -6.1260e-01,
         -8.8199e-01,  2.1709e-02,  3.6597e-01, -7.4425e-01,  5.8899e-01,
         -1.0043e-01, -2.3235e-01, -2.9298e-01,  7.1206e-03, -3.7579e-02,
          7.5912e-03, -1.4527e-01,  1.2684e-01,  6.2061e-02, -1.4238e-01,
         -1.0362e-01, -1.8998e-02, -8.8921e-02,  4.5802e-01,  2.4058e-02,
          4.0630e-02,  6.6484e-02, -1.0902e-02,  4.3443e-02, -7.6683e-02,
         -4.3413e-02,  2.0618e-01, -2.3534e-01, -3.5374e-02,  3.7861e-01,
          1.1585e-01,  1.5291e-02,  4.9316e-01,  3.8873e-01, -2.0509e-01,
         -4.9487e-03,  2.6472e-02, -1.9834e-01, -1.3819e-01, -2.1911e-02,
         -1.7318e-01,  5.4102e-01,  3.0324e-01, -1.6994e-01,  3.5219e-01,
          2.3153e-01,  1.5221e-01,  1.8210e-01, -1.8825e-03,  5.6416e-02,
          3.7585e-01,  7.5042e-02,  3.6270e-02, -2.8240e-01,  1.4952e-01,
          9.9289e-02,  9.6031e-02,  9.1228e-02,  3.3266e-01, -1.1174e-01,
          1.7441e-01,  1.3561e-01,  7.0494e-02,  4.9044e-01, -4.0865e-02,
          1.0473e-01, -6.8089e-02, -3.4713e-01,  6.7857e-02, -2.8819e-01,
          1.6923e-01, -2.1560e-02,  4.8017e-02, -2.0873e-01,  6.4615e-02,
         -1.2332e-01,  4.2250e-01, -1.1484e-01, -5.1321e-02,  2.5040e-01,
          3.3310e-01, -2.7776e-02,  2.1666e-01, -1.0596e-01,  4.6734e-01,
         -5.6659e-01, -4.4618e-01, -3.2777e-02,  6.0557e-03, -2.5808e-01,
          3.9506e-02,  2.2285e-01,  9.6393e-02,  1.2757e-01,  4.3164e-02,
         -5.1782e-02,  5.9839e-02,  5.0704e-02,  3.0525e-01,  2.3585e-01,
         -5.5763e-02,  2.9924e-01,  8.5642e-02, -2.7701e-01, -1.1609e-01,
          1.3661e-01, -5.1435e-02,  1.7508e-01, -1.7723e-01,  1.8843e-02,
         -5.1960e-02, -8.4656e-02,  5.2392e-02, -1.5894e-01, -9.4793e-02,
         -9.2188e-02,  1.5634e-01,  4.0762e-01,  7.0234e-02,  5.4022e-02,
          5.4277e-02,  1.5343e-01, -4.6698e-02,  2.0436e-02,  1.8564e-01,
          2.6256e-01, -1.8205e-01, -1.1724e-01,  1.0623e-01, -2.8158e-01,
          2.1251e-01, -2.5194e-01,  2.4696e-01,  5.8863e-02, -6.2828e-02,
          1.0899e-02,  8.5151e-02,  6.5891e-03,  1.1228e-03,  1.0374e-01,
          1.3944e-01]], device='cuda:0') tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
619000 特征值优化 tensor(1.0712, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8768e+00,  3.1198e-01, -1.5822e+00, -9.2705e-01,  1.9517e+00,
          3.1701e+00,  6.1548e-01, -2.0125e+00,  4.4572e-01,  6.4651e-01,
         -4.2734e-01, -2.8531e-01, -8.8406e-01, -4.7610e-01, -2.9026e-02,
         -1.1690e+00, -3.2793e-01, -7.0544e-01,  9.6530e-01, -5.8504e-01,
         -8.5650e-01,  4.0621e-02,  3.5431e-01, -7.2016e-01,  5.6180e-01,
         -9.5164e-02, -3.0794e-01, -2.9859e-01,  6.0033e-03, -1.2300e-02,
         -1.2998e-02, -1.9694e-01,  1.7752e-02,  3.0690e-02, -6.7404e-02,
         -1.4965e-01, -1.5232e-02, -1.0821e-01,  4.6307e-01, -2.5468e-03,
          3.7669e-02,  6.5935e-02, -1.2084e-02,  2.5948e-02, -1.0811e-01,
         -4.0272e-02,  2.1677e-01, -2.1420e-01,  3.4346e-02,  3.0482e-01,
          1.7375e-01,  2.9161e-02,  4.2132e-01,  3.3681e-01, -1.5279e-01,
          5.8537e-03,  5.7609e-02, -2.1140e-01, -1.4486e-01, -3.3427e-02,
         -1.6980e-01,  5.6593e-01,  2.5277e-01, -1.3588e-01,  3.3630e-01,
          2.0199e-01,  7.9946e-02,  1.2979e-01, -3.6733e-02,  9.6160e-02,
          3.7452e-01,  6.4932e-02,  3.4115e-02, -2.7844e-01,  1.5204e-01,
          1.2431e-01,  1.0083e-01,  1.2845e-01,  3.4901e-01, -8.6885e-02,
          1.7610e-01,  1.2461e-01,  6.6856e-02,  5.0283e-01, -1.4711e-02,
          9.5275e-02, -6.0380e-02, -3.7270e-01,  7.2352e-02, -2.8556e-01,
          1.9777e-01, -3.3216e-02,  3.1793e-02, -2.4726e-01,  5.2381e-02,
         -9.2888e-02,  4.5072e-01, -1.3520e-01, -4.6547e-03,  2.2259e-01,
          3.5636e-01, -5.5446e-02,  2.6995e-01, -6.4217e-02,  4.0303e-01,
         -5.5234e-01, -4.4955e-01, -3.8411e-02, -5.8105e-02, -2.4663e-01,
          5.3634e-02,  2.1545e-01,  7.3728e-02,  1.4067e-01,  6.5774e-02,
         -5.2028e-02,  9.5968e-02,  7.2310e-02,  3.2939e-01,  2.7057e-01,
         -6.6326e-02,  3.1647e-01,  1.0175e-01, -2.7100e-01, -1.0397e-01,
          1.7300e-01, -6.1948e-02,  1.1470e-01, -1.8485e-01,  2.4706e-02,
         -2.8591e-02, -9.0343e-02,  4.2886e-02, -1.5856e-01, -1.1675e-01,
         -4.7720e-02,  1.4342e-01,  3.9219e-01,  5.0560e-02,  7.0963e-02,
          2.0476e-02,  1.3504e-01, -6.3983e-02,  2.2721e-02,  1.6152e-01,
          2.3210e-01, -1.5760e-01, -1.2580e-01,  1.4154e-01, -2.2564e-01,
          2.4471e-01, -2.4269e-01,  2.3265e-01,  4.8590e-02, -3.2553e-02,
          5.9790e-03,  8.5660e-02,  4.7317e-02,  6.8861e-03,  6.9562e-02,
          1.7138e-01]], device='cuda:0') tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
620000 特征值优化 tensor(1.0201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8922e+00,  3.5909e-01, -1.6234e+00, -9.2667e-01,  2.0525e+00,
          3.1892e+00,  6.1098e-01, -2.0212e+00,  3.9316e-01,  6.1317e-01,
         -2.9615e-01, -3.1518e-01, -9.6003e-01, -5.0686e-01, -7.3838e-02,
         -1.2556e+00, -3.5308e-01, -7.3931e-01,  9.1429e-01, -5.8376e-01,
         -8.3778e-01,  5.6855e-02,  3.7355e-01, -6.9737e-01,  5.4581e-01,
         -3.5670e-02, -3.4500e-01, -2.9796e-01, -2.8261e-02,  6.8608e-04,
          2.9545e-02, -2.3729e-01, -2.1146e-02,  4.5929e-02, -7.3543e-03,
         -1.8260e-01, -1.6463e-02, -1.3045e-01,  4.2824e-01, -4.4155e-03,
          2.6496e-02,  6.0622e-02, -7.6958e-03,  6.3130e-03, -1.2157e-01,
          1.9754e-02,  2.0384e-01, -1.4909e-01,  9.6491e-02,  2.8808e-01,
          1.9412e-01,  5.8822e-03,  3.6870e-01,  2.9743e-01, -1.6549e-01,
          4.6711e-03,  1.2085e-01, -2.1096e-01, -1.7951e-01, -1.6802e-02,
         -1.5719e-01,  5.8087e-01,  1.9472e-01, -8.2141e-02,  2.7309e-01,
          2.2095e-01,  5.1510e-02,  8.5132e-02, -9.6009e-02,  1.2005e-01,
          3.9699e-01,  7.0697e-02,  1.6856e-02, -2.5554e-01,  1.9205e-01,
          1.1766e-01,  9.3713e-02,  1.1564e-01,  3.8839e-01, -8.3755e-02,
          1.6761e-01,  1.1486e-01,  7.2222e-02,  4.8974e-01, -2.0531e-02,
          1.0223e-01, -6.9530e-02, -3.9812e-01,  1.1686e-01, -3.1317e-01,
          2.1171e-01, -2.6972e-02,  3.4803e-02, -2.4664e-01,  5.9127e-02,
         -7.7573e-02,  4.5419e-01, -1.8189e-01,  6.2090e-02,  2.4113e-01,
          3.3211e-01, -8.8069e-02,  2.5599e-01, -5.9768e-02,  3.3868e-01,
         -5.3371e-01, -4.8803e-01, -3.3648e-02, -2.7463e-02, -2.4994e-01,
          4.7905e-02,  2.1361e-01,  4.0657e-02,  1.4121e-01,  7.8754e-02,
         -5.8775e-02,  1.1961e-01,  9.5751e-02,  3.3869e-01,  2.7804e-01,
         -9.4368e-02,  3.4623e-01,  8.9215e-02, -2.6986e-01, -8.1342e-02,
          1.6731e-01, -3.0570e-02,  1.0198e-01, -1.9849e-01,  3.8076e-02,
         -1.5955e-02, -1.0462e-01,  2.0981e-02, -1.6140e-01, -1.4422e-01,
         -2.3695e-02,  1.4103e-01,  3.9132e-01,  5.3065e-02,  7.8252e-02,
          4.2537e-02,  8.5220e-02, -6.0449e-02, -1.2777e-02,  1.7758e-01,
          1.8731e-01, -1.3235e-01, -9.5344e-02,  1.6644e-01, -2.0933e-01,
          2.8083e-01, -2.3238e-01,  2.5530e-01,  7.9718e-02, -3.6102e-02,
          3.0885e-02,  8.3453e-02,  4.4302e-02,  1.2471e-02,  7.1326e-02,
          1.8171e-01]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
621000 特征值优化 tensor(1.0106, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8546e+00,  3.9968e-01, -1.6352e+00, -9.3845e-01,  2.0788e+00,
          3.1824e+00,  5.6383e-01, -2.0395e+00,  3.5136e-01,  5.7275e-01,
         -1.8532e-01, -3.2887e-01, -1.0469e+00, -4.8073e-01, -9.8948e-02,
         -1.2912e+00, -3.5603e-01, -7.3828e-01,  8.4284e-01, -5.4557e-01,
         -8.0854e-01,  6.6325e-02,  3.9243e-01, -6.8995e-01,  5.4990e-01,
         -3.0506e-02, -3.2020e-01, -2.5262e-01, -4.4550e-02, -2.2272e-02,
          5.8728e-02, -2.3914e-01, -7.2271e-02,  5.9711e-02,  2.3792e-02,
         -1.9096e-01, -1.5027e-02, -8.1019e-02,  4.2682e-01, -2.9286e-02,
          2.3694e-03,  6.1189e-02, -9.4621e-03,  6.8028e-03, -1.2821e-01,
          6.3468e-04,  2.4763e-01, -1.2895e-01,  1.3537e-01,  2.8425e-01,
          1.9458e-01,  4.6687e-04,  3.4393e-01,  2.8621e-01, -1.7926e-01,
         -1.6197e-02,  1.4542e-01, -2.2132e-01, -1.9794e-01,  3.2131e-03,
         -1.4197e-01,  5.8282e-01,  1.5485e-01, -6.0700e-02,  2.4115e-01,
          2.3539e-01,  3.4692e-02,  6.2323e-02, -9.8246e-02,  1.3496e-01,
          4.1475e-01,  6.2279e-02,  1.6262e-02, -2.6395e-01,  2.1116e-01,
          1.0913e-01,  5.3714e-02,  1.5050e-01,  3.8060e-01, -9.9609e-02,
          1.6670e-01,  1.1540e-01,  8.7444e-02,  5.2999e-01, -3.9012e-02,
          1.0905e-01, -6.3423e-02, -4.1169e-01,  1.3226e-01, -3.7597e-01,
          2.3341e-01, -5.1491e-02, -5.2111e-03, -2.9476e-01,  5.8785e-02,
         -7.4023e-02,  4.5908e-01, -1.6962e-01,  1.0925e-01,  2.0626e-01,
          3.2627e-01, -9.4528e-02,  2.7256e-01, -4.4720e-02,  2.9105e-01,
         -5.1575e-01, -5.2721e-01, -3.8235e-02, -2.6210e-02, -2.4181e-01,
          4.4448e-02,  2.2401e-01,  7.1361e-03,  1.6901e-01,  5.9284e-02,
         -3.0482e-02,  1.2102e-01,  1.0339e-01,  3.2937e-01,  2.7495e-01,
         -1.0392e-01,  3.4906e-01,  1.0897e-01, -2.7320e-01, -6.7503e-02,
          1.4567e-01, -1.0159e-02,  1.0497e-01, -2.3218e-01,  3.1230e-02,
         -1.7775e-02, -1.0574e-01, -4.1632e-03, -1.5687e-01, -1.7180e-01,
         -2.4994e-02,  1.3602e-01,  3.8055e-01,  3.2400e-02,  7.8524e-02,
          1.9353e-02,  8.7836e-02, -8.8759e-02,  1.0965e-02,  1.4936e-01,
          1.7969e-01, -1.6621e-01, -9.9714e-02,  1.6368e-01, -1.4570e-01,
          2.9323e-01, -2.1611e-01,  2.4574e-01,  5.9838e-02,  1.2810e-02,
          4.7533e-02,  8.4784e-02,  3.3001e-02, -1.7448e-03,  5.9112e-02,
          1.8653e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
622000 特征值优化 tensor(1.0173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8507e+00,  4.1787e-01, -1.6041e+00, -9.3653e-01,  2.0679e+00,
          3.2083e+00,  5.1827e-01, -2.0310e+00,  2.9104e-01,  5.6142e-01,
         -1.0855e-01, -3.7169e-01, -1.0515e+00, -5.1876e-01, -1.0955e-01,
         -1.3165e+00, -3.5265e-01, -7.3818e-01,  8.0259e-01, -5.0125e-01,
         -7.9087e-01,  6.4747e-02,  4.2695e-01, -6.7800e-01,  5.5153e-01,
         -7.2517e-03, -3.0006e-01, -2.2740e-01, -2.8198e-02, -6.1267e-03,
          7.9162e-02, -2.4122e-01, -8.0986e-02,  7.2400e-02,  6.2303e-02,
         -1.9009e-01, -1.8308e-02, -7.1682e-02,  4.0423e-01,  1.1404e-02,
          1.2321e-02,  6.4861e-02, -1.0054e-02,  1.6266e-02, -1.3903e-01,
          3.3236e-02,  2.7035e-01, -1.0474e-01,  1.4880e-01,  2.6672e-01,
          2.0035e-01,  2.6413e-03,  3.2900e-01,  2.6824e-01, -1.7078e-01,
         -1.3244e-02,  1.6872e-01, -2.4816e-01, -2.2559e-01, -4.1953e-03,
         -1.4523e-01,  5.8843e-01,  1.2472e-01, -4.5681e-02,  2.4240e-01,
          2.2082e-01,  2.4787e-02,  6.5239e-02, -1.2669e-01,  1.5575e-01,
          4.3505e-01,  6.0332e-02, -3.3623e-03, -2.6656e-01,  2.2844e-01,
          8.4894e-02,  7.8449e-02,  1.2151e-01,  3.9421e-01, -1.0248e-01,
          1.4222e-01,  8.4246e-02,  9.2305e-02,  5.3482e-01, -3.7370e-02,
          1.4454e-01, -1.0444e-01, -4.1873e-01,  1.3612e-01, -3.6995e-01,
          2.5443e-01, -5.4342e-02, -1.0932e-02, -3.0129e-01,  5.2333e-02,
         -8.1889e-02,  4.5613e-01, -1.8958e-01,  1.3783e-01,  1.9517e-01,
          3.3465e-01, -1.0076e-01,  2.8630e-01, -2.5864e-02,  2.4501e-01,
         -5.1033e-01, -5.5411e-01, -4.9611e-02, -2.0671e-02, -2.4518e-01,
          4.0063e-02,  2.3153e-01,  1.2384e-02,  1.6327e-01,  8.6139e-02,
         -3.5681e-02,  1.0919e-01,  6.6959e-02,  3.1706e-01,  2.6662e-01,
         -9.2305e-02,  3.4401e-01,  9.4722e-02, -2.7056e-01, -5.1479e-02,
          1.4538e-01,  1.3539e-02,  1.1658e-01, -2.3773e-01,  2.4643e-02,
          9.6374e-03, -8.9137e-02, -2.3170e-02, -1.3683e-01, -1.5521e-01,
         -2.7659e-02,  1.3572e-01,  3.7404e-01,  3.9995e-02,  9.4179e-02,
          3.5226e-02,  9.6668e-02, -8.5640e-02, -2.7154e-02,  1.5832e-01,
          1.6655e-01, -1.9246e-01, -9.2639e-02,  1.2666e-01, -1.4479e-01,
          3.1139e-01, -2.0924e-01,  2.6997e-01,  5.7586e-02,  4.1198e-04,
          3.1902e-02,  9.0849e-02,  4.4230e-02,  1.0855e-03,  7.7326e-02,
          1.6241e-01]], device='cuda:0') tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
623000 特征值优化 tensor(1.0432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8473e+00,  4.2049e-01, -1.5780e+00, -9.4403e-01,  2.0763e+00,
          3.2038e+00,  4.8641e-01, -2.0444e+00,  2.3074e-01,  5.6806e-01,
         -4.1969e-03, -3.9321e-01, -1.0607e+00, -5.2376e-01, -9.4555e-02,
         -1.3142e+00, -3.5294e-01, -7.2481e-01,  7.5999e-01, -4.7846e-01,
         -7.8204e-01,  6.8148e-02,  4.5109e-01, -6.5864e-01,  5.1772e-01,
          2.1789e-03, -2.5583e-01, -2.1446e-01, -3.7070e-02, -1.1149e-03,
          9.6162e-02, -2.4050e-01, -8.6679e-02,  6.3494e-02,  8.3779e-02,
         -1.9681e-01, -1.8515e-02, -5.3328e-02,  3.9600e-01,  1.5542e-02,
          8.6032e-03,  6.3881e-02, -1.0862e-02,  2.6021e-02, -1.4925e-01,
          5.9518e-02,  2.8640e-01, -1.1053e-01,  1.4672e-01,  2.6314e-01,
          2.0374e-01,  1.6421e-03,  3.2020e-01,  2.6604e-01, -1.6861e-01,
         -2.1679e-02,  1.7016e-01, -2.4101e-01, -2.2808e-01, -7.2608e-03,
         -1.4552e-01,  5.8765e-01,  9.9092e-02, -4.1473e-02,  2.5112e-01,
          2.0879e-01,  2.4752e-02,  5.3062e-02, -1.2608e-01,  1.5446e-01,
          4.4714e-01,  6.3080e-02, -1.7660e-03, -2.6021e-01,  2.3977e-01,
          7.7949e-02,  9.3319e-02,  1.1011e-01,  4.1168e-01, -1.2905e-01,
          1.4489e-01,  7.9039e-02,  1.0004e-01,  5.5010e-01, -4.6721e-02,
          1.5710e-01, -1.1782e-01, -4.1225e-01,  1.5697e-01, -3.5571e-01,
          2.5946e-01, -6.2615e-02, -1.3100e-02, -3.0200e-01,  5.4950e-02,
         -8.9827e-02,  4.5989e-01, -1.6368e-01,  1.5209e-01,  1.9517e-01,
          3.2620e-01, -9.0789e-02,  3.0864e-01, -1.1509e-02,  2.3743e-01,
         -4.9350e-01, -5.5499e-01, -6.4298e-02, -2.7383e-02, -2.4510e-01,
          3.3247e-02,  2.3375e-01,  1.4388e-02,  1.7491e-01,  9.0583e-02,
         -3.3288e-02,  1.0405e-01,  6.2382e-02,  3.1708e-01,  2.6497e-01,
         -7.1718e-02,  3.5592e-01,  7.7089e-02, -2.8088e-01, -5.0545e-02,
          1.3903e-01,  1.9392e-02,  1.3952e-01, -2.4135e-01,  2.1762e-02,
          1.4156e-02, -8.9298e-02, -2.2644e-02, -1.3171e-01, -1.4497e-01,
         -3.3896e-02,  1.2654e-01,  3.8611e-01,  4.2352e-02,  8.6126e-02,
          3.9952e-02,  9.4376e-02, -1.0174e-01, -3.2717e-02,  1.5236e-01,
          1.6809e-01, -2.2539e-01, -9.2688e-02,  1.1653e-01, -1.4014e-01,
          3.2839e-01, -1.9280e-01,  2.6942e-01,  4.8233e-02,  3.3108e-03,
          3.5707e-02,  1.0496e-01,  3.3628e-02, -7.7851e-03,  9.1321e-02,
          1.6771e-01]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
624000 特征值优化 tensor(1.0099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8378e+00,  4.3038e-01, -1.5737e+00, -9.4418e-01,  2.0974e+00,
          3.2307e+00,  4.6711e-01, -2.0248e+00,  1.9411e-01,  5.6473e-01,
          5.1037e-02, -4.0072e-01, -1.0513e+00, -5.6338e-01, -8.9601e-02,
         -1.3178e+00, -3.3408e-01, -7.0617e-01,  7.3251e-01, -4.5143e-01,
         -7.6462e-01,  8.2078e-02,  4.7595e-01, -6.5553e-01,  4.9665e-01,
          1.9121e-02, -2.4409e-01, -2.1212e-01, -3.7631e-02,  4.4122e-03,
          1.1414e-01, -2.1943e-01, -6.9932e-02,  5.2682e-02,  9.8740e-02,
         -1.9510e-01, -1.6982e-02, -3.9393e-02,  3.8106e-01,  1.3857e-02,
          6.5341e-03,  6.4616e-02, -1.3776e-02,  1.8913e-02, -1.4939e-01,
          8.8021e-02,  3.0293e-01, -8.9546e-02,  1.4832e-01,  2.5430e-01,
          2.1905e-01, -8.4235e-03,  3.0999e-01,  2.5420e-01, -1.5167e-01,
         -2.1583e-02,  1.6519e-01, -2.2955e-01, -2.3704e-01, -2.6442e-02,
         -1.5047e-01,  5.8675e-01,  7.2579e-02, -4.9320e-02,  2.4319e-01,
          2.0562e-01,  2.7755e-02,  5.4250e-02, -1.3905e-01,  1.5324e-01,
          4.6144e-01,  6.6722e-02, -3.8732e-03, -2.7219e-01,  2.3936e-01,
          7.0408e-02,  9.9961e-02,  9.6354e-02,  4.1774e-01, -1.2924e-01,
          1.3878e-01,  6.4338e-02,  1.0620e-01,  5.5744e-01, -3.7963e-02,
          1.6768e-01, -1.3017e-01, -4.2273e-01,  1.5260e-01, -3.4819e-01,
          2.5641e-01, -6.2401e-02, -1.3645e-02, -3.0042e-01,  5.7784e-02,
         -9.0332e-02,  4.6095e-01, -1.5433e-01,  1.5356e-01,  1.8387e-01,
          3.3054e-01, -9.1498e-02,  3.1668e-01, -1.2186e-02,  2.2987e-01,
         -5.0389e-01, -5.5523e-01, -5.4730e-02, -2.8219e-02, -2.4625e-01,
          2.9444e-02,  2.4334e-01,  1.4491e-03,  1.7383e-01,  9.3568e-02,
         -4.1903e-02,  9.8712e-02,  5.6050e-02,  3.1806e-01,  2.6099e-01,
         -5.7508e-02,  3.5522e-01,  8.1058e-02, -2.9655e-01, -4.8227e-02,
          1.4089e-01,  2.8303e-02,  1.4646e-01, -2.4739e-01,  2.2770e-02,
          2.3198e-02, -8.6114e-02, -1.7162e-02, -1.3459e-01, -1.5051e-01,
         -3.1942e-02,  1.2916e-01,  3.7515e-01,  4.6656e-02,  1.0870e-01,
          4.2970e-02,  9.4976e-02, -9.9953e-02, -4.9290e-02,  1.7003e-01,
          1.6425e-01, -2.3984e-01, -9.3231e-02,  1.1071e-01, -1.3599e-01,
          3.2815e-01, -1.7813e-01,  2.6992e-01,  4.0036e-02, -6.8800e-03,
          2.5819e-02,  1.0112e-01,  4.5068e-02,  4.7327e-04,  1.0406e-01,
          1.7271e-01]], device='cuda:0') tensor(0.2179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
625000 特征值优化 tensor(1.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8157e+00,  4.1366e-01, -1.5717e+00, -9.3942e-01,  2.1082e+00,
          3.2475e+00,  4.4207e-01, -2.0095e+00,  1.7102e-01,  5.4720e-01,
          1.1798e-01, -4.0723e-01, -1.0530e+00, -6.0078e-01, -7.9470e-02,
         -1.3159e+00, -3.1434e-01, -6.9135e-01,  7.0742e-01, -4.2586e-01,
         -7.5298e-01,  1.0051e-01,  4.8969e-01, -6.5388e-01,  4.7607e-01,
          1.5010e-02, -2.3398e-01, -1.9189e-01, -2.9712e-02,  5.8825e-03,
          1.2576e-01, -2.0777e-01, -5.9513e-02,  5.3647e-02,  9.5194e-02,
         -1.9267e-01, -1.5180e-02, -6.8427e-03,  3.9589e-01,  7.1737e-03,
         -4.8856e-04,  6.4524e-02, -9.5880e-03,  2.9234e-02, -1.5433e-01,
          9.1024e-02,  3.0742e-01, -6.6717e-02,  1.5027e-01,  2.5389e-01,
          2.3598e-01, -9.2566e-03,  2.9407e-01,  2.5172e-01, -1.4812e-01,
         -1.8719e-02,  1.5012e-01, -2.3068e-01, -2.3740e-01, -3.8695e-02,
         -1.4301e-01,  5.8946e-01,  5.6875e-02, -5.0911e-02,  2.3888e-01,
          2.1380e-01,  3.7087e-02,  5.5589e-02, -1.4294e-01,  1.5485e-01,
          4.6977e-01,  7.1952e-02,  1.2497e-03, -2.9190e-01,  2.3848e-01,
          7.2535e-02,  9.3465e-02,  1.0769e-01,  4.0519e-01, -1.2080e-01,
          1.2468e-01,  6.1441e-02,  1.1251e-01,  5.7483e-01, -3.7485e-02,
          1.6820e-01, -1.3345e-01, -4.0986e-01,  1.5349e-01, -3.4554e-01,
          2.6067e-01, -6.6914e-02, -3.4286e-02, -3.1184e-01,  5.1301e-02,
         -9.4101e-02,  4.6213e-01, -1.2773e-01,  1.5499e-01,  1.8223e-01,
          3.3688e-01, -9.7687e-02,  3.1780e-01, -8.0307e-03,  2.1375e-01,
         -5.0193e-01, -5.5156e-01, -5.5008e-02, -2.6250e-02, -2.4187e-01,
          2.0948e-02,  2.5501e-01,  9.1137e-03,  1.8464e-01,  8.4750e-02,
         -4.7811e-02,  9.5863e-02,  5.8060e-02,  3.0810e-01,  2.6010e-01,
         -5.0431e-02,  3.5017e-01,  9.3358e-02, -3.0198e-01, -4.3398e-02,
          1.4760e-01,  2.9028e-02,  1.6718e-01, -2.3999e-01,  3.1043e-02,
          3.0649e-02, -8.1592e-02, -1.8365e-02, -1.3899e-01, -1.5023e-01,
         -3.0262e-02,  1.2398e-01,  3.6597e-01,  4.2303e-02,  1.1309e-01,
          3.9936e-02,  9.1668e-02, -1.1566e-01, -3.8162e-02,  1.5227e-01,
          1.6610e-01, -2.6268e-01, -1.0649e-01,  1.0762e-01, -1.2107e-01,
          3.2274e-01, -1.7160e-01,  2.5934e-01,  2.9426e-02, -7.5452e-03,
          1.4197e-02,  1.0225e-01,  6.3607e-02,  1.1893e-02,  8.4736e-02,
          1.6609e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
626000 特征值优化 tensor(1.0132, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8367e+00,  4.2429e-01, -1.5707e+00, -9.4213e-01,  2.1101e+00,
          3.2920e+00,  4.4467e-01, -2.0169e+00,  1.5045e-01,  5.4728e-01,
          1.8395e-01, -4.0495e-01, -1.0454e+00, -5.8461e-01, -7.3289e-02,
         -1.3110e+00, -3.0810e-01, -6.6965e-01,  7.0130e-01, -3.9903e-01,
         -7.4145e-01,  1.0173e-01,  4.9785e-01, -6.4556e-01,  4.3934e-01,
          2.2616e-02, -2.0046e-01, -1.8009e-01, -3.6684e-02,  2.0001e-03,
          1.3466e-01, -2.0046e-01, -5.5493e-02,  6.4949e-02,  9.6280e-02,
         -1.9983e-01, -1.3666e-02, -3.7004e-03,  3.9299e-01,  5.5254e-04,
         -1.2484e-02,  6.0682e-02, -9.8852e-03,  2.2186e-02, -1.4967e-01,
          1.1247e-01,  2.9848e-01, -6.3748e-02,  1.4012e-01,  2.6790e-01,
          2.3863e-01, -1.0704e-02,  2.9551e-01,  2.5412e-01, -1.5044e-01,
         -1.5636e-02,  1.6618e-01, -2.0984e-01, -2.4701e-01, -3.6050e-02,
         -1.4118e-01,  5.9487e-01,  3.4159e-02, -4.8007e-02,  2.4639e-01,
          2.0884e-01,  3.0314e-02,  5.1776e-02, -1.4296e-01,  1.5631e-01,
          4.7871e-01,  7.9067e-02,  3.1563e-04, -2.8654e-01,  2.3678e-01,
          7.5592e-02,  1.0143e-01,  9.6845e-02,  4.0799e-01, -1.3707e-01,
          1.2092e-01,  5.3893e-02,  1.1991e-01,  5.8787e-01, -3.8572e-02,
          1.5660e-01, -1.3047e-01, -4.2348e-01,  1.5142e-01, -3.5122e-01,
          2.5918e-01, -8.1177e-02, -3.0636e-02, -3.1529e-01,  5.6708e-02,
         -8.8755e-02,  4.6736e-01, -1.1694e-01,  1.6068e-01,  1.4081e-01,
          3.4216e-01, -9.7102e-02,  3.1718e-01, -1.5261e-02,  2.0950e-01,
         -5.1269e-01, -5.4886e-01, -5.0846e-02, -2.6389e-02, -2.3936e-01,
          1.9227e-03,  2.6491e-01,  5.0923e-03,  1.9487e-01,  7.8956e-02,
         -4.3111e-02,  9.2205e-02,  6.5331e-02,  3.0279e-01,  2.5804e-01,
         -3.3413e-02,  3.5690e-01,  8.8927e-02, -3.0536e-01, -4.5131e-02,
          1.4773e-01,  3.8419e-02,  1.8277e-01, -2.3978e-01,  2.5128e-02,
          2.4529e-02, -8.3573e-02, -2.0199e-02, -1.3014e-01, -1.4760e-01,
         -4.1763e-02,  1.1858e-01,  3.8647e-01,  2.5546e-02,  1.1233e-01,
          2.5692e-02,  7.3809e-02, -1.2920e-01, -3.4258e-02,  1.4928e-01,
          1.8168e-01, -2.7747e-01, -1.0860e-01,  1.1783e-01, -1.1913e-01,
          3.3142e-01, -1.5428e-01,  2.4849e-01,  1.7542e-02, -6.3669e-03,
          1.3989e-02,  1.0351e-01,  6.7659e-02,  1.6385e-02,  8.8600e-02,
          1.8228e-01]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
627000 特征值优化 tensor(0.9989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8331e+00,  4.2709e-01, -1.5533e+00, -9.5515e-01,  2.1339e+00,
          3.3109e+00,  4.3913e-01, -2.0245e+00,  1.0207e-01,  5.4945e-01,
          2.4564e-01, -4.2864e-01, -1.0162e+00, -6.0622e-01, -5.4084e-02,
         -1.2841e+00, -3.1479e-01, -6.7863e-01,  6.8139e-01, -3.8340e-01,
         -7.4279e-01,  1.0133e-01,  4.9907e-01, -6.3039e-01,  4.2989e-01,
          4.6076e-02, -1.9403e-01, -2.0108e-01, -4.1839e-02, -1.4929e-03,
          1.3732e-01, -2.0724e-01, -5.6929e-02,  5.2601e-02,  9.9001e-02,
         -2.0446e-01, -1.0073e-02,  1.3521e-03,  3.7075e-01,  7.4974e-03,
         -2.6630e-04,  6.0208e-02, -1.1878e-02,  2.0454e-02, -1.3432e-01,
          1.4638e-01,  2.8735e-01, -4.5720e-02,  1.4085e-01,  2.7096e-01,
          2.4976e-01, -3.2738e-03,  2.9109e-01,  2.2970e-01, -1.4530e-01,
         -2.6758e-02,  1.5534e-01, -2.0231e-01, -2.4484e-01, -4.7033e-02,
         -1.5725e-01,  5.8315e-01,  1.2051e-02, -4.3690e-02,  2.4782e-01,
          1.9648e-01,  3.2794e-02,  6.0221e-02, -1.6890e-01,  1.5963e-01,
          4.7658e-01,  8.9680e-02, -5.1297e-03, -2.8757e-01,  2.5285e-01,
          6.4977e-02,  1.2017e-01,  7.8874e-02,  4.3400e-01, -1.4816e-01,
          1.1464e-01,  4.4680e-02,  1.2595e-01,  5.7310e-01, -1.3400e-02,
          1.8105e-01, -1.4566e-01, -4.2792e-01,  1.5882e-01, -3.2000e-01,
          2.6706e-01, -8.4385e-02, -3.3457e-02, -2.9498e-01,  6.7717e-02,
         -9.5895e-02,  4.5885e-01, -1.3612e-01,  1.5852e-01,  1.3650e-01,
          3.4115e-01, -1.2098e-01,  3.1144e-01,  3.5747e-03,  1.9764e-01,
         -4.8891e-01, -5.6820e-01, -3.2986e-02,  1.3395e-03, -2.5379e-01,
          1.3510e-02,  2.6274e-01,  2.2689e-02,  1.8833e-01,  1.0675e-01,
         -5.4091e-02,  8.0174e-02,  3.4808e-02,  3.1084e-01,  2.6263e-01,
         -4.0013e-02,  3.5550e-01,  6.9027e-02, -3.1220e-01, -4.2616e-02,
          1.5091e-01,  3.9678e-02,  1.7293e-01, -2.3158e-01,  2.0560e-02,
          3.4536e-02, -8.1302e-02, -2.3841e-02, -1.3020e-01, -1.2887e-01,
         -2.1219e-02,  1.2462e-01,  3.7317e-01,  5.3018e-02,  1.2077e-01,
          5.4542e-02,  8.3002e-02, -1.2034e-01, -5.0196e-02,  1.7977e-01,
          1.6327e-01, -2.8156e-01, -9.2580e-02,  9.6876e-02, -1.3719e-01,
          3.4435e-01, -1.5783e-01,  2.5722e-01,  2.7013e-02, -1.5949e-02,
          2.7793e-02,  1.0618e-01,  5.8404e-02,  1.1538e-02,  1.0984e-01,
          1.7973e-01]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
628000 特征值优化 tensor(1.0262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8147e+00,  3.9003e-01, -1.5498e+00, -9.4077e-01,  2.1491e+00,
          3.3442e+00,  4.2523e-01, -2.0039e+00,  8.1011e-02,  5.4276e-01,
          2.8967e-01, -4.2291e-01, -1.0206e+00, -6.2885e-01, -3.9244e-02,
         -1.2870e+00, -2.8851e-01, -6.7187e-01,  6.4899e-01, -3.6603e-01,
         -7.4193e-01,  9.7708e-02,  5.1328e-01, -6.2507e-01,  3.9181e-01,
          5.0332e-02, -1.8230e-01, -1.7053e-01, -3.5756e-02, -1.1071e-02,
          1.5763e-01, -1.9191e-01, -7.6357e-02,  4.7389e-02,  9.8571e-02,
         -2.1338e-01, -1.7300e-02,  2.4299e-02,  3.8285e-01,  3.6609e-03,
         -1.3528e-02,  6.2622e-02, -9.3547e-03,  3.5269e-02, -1.2769e-01,
          1.5533e-01,  2.8665e-01, -1.0767e-02,  1.4473e-01,  2.5531e-01,
          2.6070e-01, -4.9270e-04,  2.6872e-01,  2.3568e-01, -1.4136e-01,
         -3.2445e-02,  1.5490e-01, -2.0076e-01, -2.3871e-01, -4.3524e-02,
         -1.4385e-01,  5.8013e-01, -1.5818e-02, -4.9543e-02,  2.3602e-01,
          2.1122e-01,  3.9035e-02,  6.7288e-02, -1.7575e-01,  1.5539e-01,
          4.7277e-01,  9.0536e-02,  2.4946e-03, -2.9518e-01,  2.5250e-01,
          6.8834e-02,  1.1658e-01,  8.0041e-02,  4.1843e-01, -1.4918e-01,
          1.0852e-01,  4.0315e-02,  1.3321e-01,  5.8848e-01, -1.0080e-03,
          1.7346e-01, -1.5952e-01, -4.1518e-01,  1.3194e-01, -3.4163e-01,
          2.7038e-01, -9.5504e-02, -3.3896e-02, -3.1404e-01,  5.7877e-02,
         -1.0142e-01,  4.6818e-01, -1.1615e-01,  1.7281e-01,  1.1212e-01,
          3.2588e-01, -1.3459e-01,  3.0939e-01,  2.3750e-02,  1.7821e-01,
         -4.8297e-01, -5.8209e-01, -1.7622e-02,  6.8709e-03, -2.4675e-01,
          4.4777e-04,  2.7979e-01,  2.2196e-02,  2.0198e-01,  9.4380e-02,
         -5.0055e-02,  6.7163e-02,  3.3850e-02,  2.8929e-01,  2.6275e-01,
         -5.1032e-02,  3.4769e-01,  8.3368e-02, -3.1232e-01, -4.1398e-02,
          1.5247e-01,  3.3749e-02,  1.7841e-01, -2.4193e-01,  2.6839e-02,
          4.3381e-02, -8.3555e-02, -1.8084e-02, -1.3495e-01, -1.3302e-01,
         -2.4782e-02,  1.4054e-01,  3.6665e-01,  2.1054e-02,  1.1796e-01,
          2.7217e-02,  6.5526e-02, -1.3559e-01, -4.5147e-02,  1.6347e-01,
          1.6457e-01, -2.9876e-01, -1.0262e-01,  1.0382e-01, -1.2313e-01,
          3.3031e-01, -1.3937e-01,  2.5418e-01,  4.8092e-03, -2.2009e-02,
          1.5612e-02,  1.1634e-01,  7.0616e-02,  2.0286e-02,  8.5060e-02,
          1.7198e-01]], device='cuda:0') tensor(0.2185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
629000 特征值优化 tensor(1.0062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7692e+00,  3.9840e-01, -1.5112e+00, -9.4941e-01,  2.1510e+00,
          3.3599e+00,  4.4550e-01, -2.0140e+00,  5.6475e-02,  5.3103e-01,
          3.4764e-01, -4.3636e-01, -1.0127e+00, -6.3347e-01,  2.2989e-02,
         -1.2771e+00, -2.9746e-01, -6.5160e-01,  6.3835e-01, -3.3239e-01,
         -7.5558e-01,  9.0019e-02,  5.2147e-01, -6.2830e-01,  3.5511e-01,
          5.1035e-02, -1.6021e-01, -1.4840e-01, -2.4136e-02, -1.1846e-02,
          1.6241e-01, -1.8020e-01, -1.0407e-01,  5.6118e-02,  1.1652e-01,
         -2.2869e-01, -6.6194e-03,  1.8401e-02,  3.8220e-01,  1.9262e-02,
         -1.8813e-02,  6.3120e-02, -1.1890e-02,  3.8360e-02, -1.3195e-01,
          1.7405e-01,  2.8041e-01,  1.7758e-02,  1.5769e-01,  2.3991e-01,
          2.8785e-01,  3.2844e-02,  2.6227e-01,  2.3396e-01, -1.3470e-01,
         -5.6843e-02,  1.6334e-01, -1.7666e-01, -2.3891e-01, -5.6911e-02,
         -1.2378e-01,  5.7923e-01, -2.4740e-02, -5.2972e-02,  2.3442e-01,
          2.0207e-01,  5.5096e-02,  7.1977e-02, -1.7189e-01,  1.5109e-01,
          4.6489e-01,  8.6756e-02, -1.6497e-03, -2.8589e-01,  2.5562e-01,
          6.9806e-02,  1.2898e-01,  8.9301e-02,  4.1522e-01, -1.4689e-01,
          1.1109e-01,  3.0291e-02,  1.4288e-01,  6.0808e-01,  7.0106e-03,
          1.8542e-01, -1.6560e-01, -4.1155e-01,  1.7041e-01, -3.3711e-01,
          2.6628e-01, -1.1929e-01, -2.8203e-02, -3.0996e-01,  5.1868e-02,
         -1.0481e-01,  4.6676e-01, -1.2833e-01,  1.8851e-01,  6.6501e-02,
          3.0030e-01, -1.6224e-01,  3.1655e-01,  3.7293e-02,  1.5226e-01,
         -5.0274e-01, -5.8689e-01,  1.1960e-02,  2.4886e-02, -2.4671e-01,
         -7.2037e-03,  2.9125e-01,  4.5999e-02,  2.1313e-01,  1.1831e-01,
         -4.6685e-02,  5.1407e-02,  1.6273e-02,  2.7850e-01,  2.7242e-01,
         -6.4134e-02,  3.4488e-01,  6.9323e-02, -3.1553e-01, -5.2160e-02,
          1.5193e-01,  3.9435e-02,  1.7983e-01, -2.5310e-01,  2.7198e-02,
          5.4634e-02, -8.8609e-02, -1.2026e-02, -1.2382e-01, -1.3017e-01,
         -1.9030e-02,  1.2246e-01,  3.7639e-01,  1.5287e-02,  1.4229e-01,
          3.5910e-02,  6.3280e-02, -1.2955e-01, -4.4835e-02,  1.6445e-01,
          1.8515e-01, -3.1261e-01, -1.2065e-01,  9.6278e-02, -1.0321e-01,
          3.2713e-01, -1.2090e-01,  2.5094e-01, -1.1130e-03, -2.8717e-02,
         -7.3308e-03,  1.1032e-01,  8.2815e-02,  2.7070e-02,  7.7360e-02,
          1.7519e-01]], device='cuda:0') tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
630000 特征值优化 tensor(1.0038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7623e+00,  3.9941e-01, -1.5247e+00, -9.4251e-01,  2.1685e+00,
          3.4159e+00,  4.3655e-01, -2.0039e+00, -2.4539e-03,  5.0993e-01,
          3.8543e-01, -4.4004e-01, -1.0145e+00, -6.3911e-01,  7.9098e-02,
         -1.2765e+00, -2.6352e-01, -6.2800e-01,  6.0289e-01, -3.2580e-01,
         -7.5539e-01,  8.1384e-02,  5.3894e-01, -6.5399e-01,  3.0673e-01,
          7.3625e-02, -1.4252e-01, -1.3749e-01, -2.8035e-02, -7.6912e-04,
          1.9418e-01, -1.5749e-01, -9.2045e-02,  4.3922e-02,  1.1432e-01,
         -2.5464e-01, -2.0188e-02,  2.4499e-02,  3.5437e-01,  1.2238e-02,
         -2.1147e-02,  6.2501e-02, -1.3101e-02,  3.2690e-02, -1.3656e-01,
          1.9578e-01,  2.7013e-01,  5.5085e-02,  1.8723e-01,  2.2262e-01,
          3.1599e-01,  5.4255e-02,  2.5149e-01,  2.2153e-01, -1.2467e-01,
         -6.8512e-02,  1.4883e-01, -1.4037e-01, -2.2345e-01, -5.9060e-02,
         -1.0544e-01,  5.7274e-01, -3.9201e-02, -6.5026e-02,  2.2897e-01,
          2.0481e-01,  7.5353e-02,  7.8579e-02, -1.5260e-01,  1.6228e-01,
          4.6912e-01,  8.8619e-02, -1.8258e-02, -3.0206e-01,  2.9069e-01,
          3.4161e-02,  1.0797e-01,  1.0900e-01,  4.1713e-01, -1.5516e-01,
          9.1299e-02,  3.2770e-02,  1.4999e-01,  5.8582e-01,  1.9639e-02,
          2.1685e-01, -1.7779e-01, -4.2909e-01,  1.5246e-01, -3.3716e-01,
          2.8226e-01, -9.7680e-02, -1.5657e-02, -3.0688e-01,  5.4211e-02,
         -9.9570e-02,  4.6683e-01, -1.2233e-01,  2.1322e-01,  4.6328e-02,
          2.6604e-01, -2.0160e-01,  2.6203e-01,  8.6968e-02,  1.5662e-01,
         -4.6886e-01, -6.1123e-01,  4.0879e-02,  4.8925e-02, -2.3738e-01,
         -1.2014e-02,  2.9225e-01,  4.8340e-02,  2.1748e-01,  1.3123e-01,
         -1.4217e-02,  3.6705e-02,  1.5742e-02,  2.7115e-01,  2.7056e-01,
         -6.5381e-02,  3.3537e-01,  8.5563e-02, -3.1873e-01, -4.2502e-02,
          1.4626e-01,  4.4769e-02,  1.7591e-01, -2.4024e-01,  2.8944e-02,
          6.2792e-02, -9.3514e-02, -2.2494e-02, -1.2829e-01, -1.3401e-01,
         -3.6641e-02,  1.3076e-01,  3.6533e-01,  1.4180e-02,  1.4384e-01,
          3.6046e-02,  1.7102e-02, -1.5762e-01, -4.0945e-02,  1.7690e-01,
          1.6506e-01, -3.1674e-01, -1.0113e-01,  9.3591e-02, -1.2236e-01,
          3.3735e-01, -1.1641e-01,  2.4620e-01,  6.0643e-04, -3.4725e-02,
          9.4979e-04,  1.1365e-01,  6.8676e-02,  3.1338e-02,  9.7417e-02,
          1.7934e-01]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
631000 特征值优化 tensor(0.9982, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6640e+00,  3.8522e-01, -1.4455e+00, -9.4800e-01,  2.1462e+00,
          3.4758e+00,  4.2583e-01, -2.0136e+00, -9.9558e-02,  5.0762e-01,
          4.2348e-01, -4.0698e-01, -9.8617e-01, -6.6022e-01,  1.5255e-01,
         -1.2455e+00, -2.7225e-01, -6.0949e-01,  5.8133e-01, -3.0840e-01,
         -7.6872e-01,  5.9022e-02,  5.4659e-01, -6.6315e-01,  2.7035e-01,
          6.7194e-02, -8.0401e-02, -9.8468e-02,  1.3401e-02, -1.5854e-02,
          2.0976e-01, -1.4111e-01, -1.0845e-01,  3.4569e-02,  1.0494e-01,
         -2.5125e-01, -1.9052e-02,  4.6744e-02,  3.7067e-01,  2.9289e-02,
         -4.6086e-02,  6.3945e-02, -1.4569e-02,  6.1957e-02, -1.3262e-01,
          2.2831e-01,  2.6141e-01,  9.3990e-02,  2.0290e-01,  2.2609e-01,
          3.1192e-01,  6.6286e-02,  2.3278e-01,  2.1264e-01, -1.2804e-01,
         -1.0876e-01,  1.4805e-01, -1.0730e-01, -2.1043e-01, -5.5545e-02,
         -5.0303e-02,  5.7340e-01, -4.4690e-02, -4.5648e-02,  2.3228e-01,
          1.9176e-01,  7.1158e-02,  8.0672e-02, -1.4284e-01,  1.6043e-01,
          4.6431e-01,  9.4664e-02, -2.8467e-02, -2.7930e-01,  3.0239e-01,
          3.8833e-02,  1.1713e-01,  1.2423e-01,  3.9808e-01, -1.7720e-01,
          9.0674e-02,  2.4061e-02,  1.5786e-01,  5.8405e-01,  2.2880e-02,
          2.2911e-01, -1.9917e-01, -3.8809e-01,  1.1393e-01, -3.4342e-01,
          2.7898e-01, -9.8926e-02, -4.7397e-02, -3.2222e-01,  4.0765e-02,
         -1.1783e-01,  4.7520e-01, -1.7595e-01,  2.4214e-01,  3.8650e-03,
          2.1083e-01, -2.2142e-01,  2.3549e-01,  1.3728e-01,  1.5613e-01,
         -4.2035e-01, -6.2971e-01,  7.6353e-02,  7.1155e-02, -2.3575e-01,
         -2.4087e-02,  3.0651e-01,  4.1247e-02,  2.3196e-01,  1.4987e-01,
          3.0539e-03,  2.6856e-02,  1.9982e-02,  2.6616e-01,  2.6526e-01,
         -6.8778e-02,  3.4123e-01,  5.8470e-02, -3.2006e-01, -4.8826e-02,
          1.4563e-01,  4.4101e-02,  1.7589e-01, -2.5398e-01,  2.4941e-02,
          7.7678e-02, -9.3036e-02, -2.2062e-02, -1.2050e-01, -1.0852e-01,
         -1.0165e-02,  1.2175e-01,  3.5697e-01, -1.6195e-02,  1.5408e-01,
          8.5263e-02,  1.7081e-02, -1.9584e-01, -2.2148e-02,  1.6420e-01,
          1.8221e-01, -3.3262e-01, -1.2110e-01,  1.0419e-01, -1.1881e-01,
          3.0404e-01, -7.9998e-02,  2.5480e-01, -1.1069e-02, -4.5959e-02,
         -2.9512e-02,  1.2093e-01,  8.2760e-02,  2.8500e-02,  8.8534e-02,
          1.8223e-01]], device='cuda:0') tensor(0.2106, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
632000 特征值优化 tensor(1.0041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6238e+00,  3.1114e-01, -1.3706e+00, -9.4099e-01,  2.1399e+00,
          3.5471e+00,  4.1873e-01, -2.0024e+00, -1.6825e-01,  5.1840e-01,
          4.6116e-01, -3.3984e-01, -9.3779e-01, -6.9697e-01,  2.3750e-01,
         -1.2293e+00, -2.5567e-01, -5.5099e-01,  5.5625e-01, -3.1369e-01,
         -7.4861e-01,  3.4308e-02,  5.5591e-01, -6.7258e-01,  1.7615e-01,
          8.9464e-02, -7.9381e-02, -4.7984e-02,  4.5025e-02, -2.6752e-03,
          2.4133e-01, -1.3537e-01, -1.1240e-01, -8.9534e-03,  1.0250e-01,
         -2.6378e-01, -1.0870e-02,  6.9646e-02,  3.2337e-01,  3.4152e-02,
         -3.8840e-02,  6.2204e-02, -1.3409e-02,  7.7833e-02, -1.3684e-01,
          2.5384e-01,  2.2462e-01,  1.2547e-01,  2.3688e-01,  2.2195e-01,
          3.2351e-01,  5.3242e-02,  2.3728e-01,  2.2152e-01, -9.9851e-02,
         -1.4692e-01,  1.1441e-01, -7.2938e-02, -2.0507e-01, -6.1240e-02,
         -2.7482e-02,  5.7020e-01, -4.8009e-02, -4.6303e-02,  2.2876e-01,
          2.0268e-01,  8.0525e-02,  9.2420e-02, -1.0626e-01,  1.5949e-01,
          4.7187e-01,  9.7333e-02, -3.9792e-02, -2.7360e-01,  3.4065e-01,
          2.5948e-02,  1.1776e-01,  1.5187e-01,  3.8894e-01, -2.0736e-01,
          5.7024e-02,  5.4463e-03,  1.6258e-01,  5.7037e-01,  4.8093e-02,
          2.3622e-01, -2.2097e-01, -3.8537e-01,  8.3645e-02, -3.5517e-01,
          2.7794e-01, -1.1174e-01, -2.2099e-02, -2.9331e-01,  5.1499e-02,
         -1.3765e-01,  4.6587e-01, -1.8947e-01,  2.9234e-01, -4.7604e-02,
          1.2038e-01, -2.6026e-01,  2.1823e-01,  1.5023e-01,  1.4129e-01,
         -4.0295e-01, -6.5639e-01,  1.3690e-01,  1.1946e-01, -2.4042e-01,
         -2.7567e-02,  3.1453e-01,  3.8402e-02,  2.5570e-01,  1.5238e-01,
          2.4282e-02,  7.1036e-03,  4.0680e-02,  2.3388e-01,  2.6995e-01,
         -8.8029e-02,  3.3668e-01,  6.5007e-02, -3.2662e-01, -2.3787e-02,
          1.3911e-01,  6.1747e-02,  1.6878e-01, -2.4148e-01,  3.0824e-02,
          6.7787e-02, -9.7473e-02, -2.5542e-02, -1.1286e-01, -9.1473e-02,
         -4.8069e-03,  1.2405e-01,  3.3928e-01, -7.3928e-03,  1.7258e-01,
          8.6901e-02, -3.5924e-02, -1.8963e-01, -4.0427e-02,  1.8604e-01,
          1.9636e-01, -3.3027e-01, -1.2833e-01,  8.0914e-02, -1.1536e-01,
          3.1722e-01, -4.5939e-02,  2.5275e-01, -3.9791e-02, -6.5009e-02,
         -1.2556e-02,  1.1682e-01,  8.2271e-02,  3.3083e-02,  9.0907e-02,
          1.7425e-01]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
633000 特征值优化 tensor(0.9875, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6069e+00,  2.1957e-01, -1.3067e+00, -9.5330e-01,  2.1643e+00,
          3.6347e+00,  4.1894e-01, -1.9800e+00, -2.0132e-01,  4.9838e-01,
          4.5427e-01, -2.9405e-01, -9.0222e-01, -7.1642e-01,  3.1347e-01,
         -1.1905e+00, -2.3516e-01, -5.0513e-01,  5.5052e-01, -3.1679e-01,
         -7.2578e-01,  2.7555e-02,  5.3722e-01, -7.0656e-01,  1.2262e-01,
          9.6179e-02, -4.7612e-02, -1.7266e-02,  7.6649e-02,  3.1134e-03,
          2.4126e-01, -1.1576e-01, -1.3594e-01, -2.7401e-02,  9.1692e-02,
         -2.6220e-01, -1.2890e-02,  9.4055e-02,  3.0114e-01,  1.8476e-02,
         -3.8649e-02,  6.4537e-02, -1.4510e-02,  8.8743e-02, -1.4651e-01,
          2.6607e-01,  2.0085e-01,  1.3900e-01,  2.6312e-01,  2.4418e-01,
          3.4121e-01,  3.7344e-02,  2.6522e-01,  2.2915e-01, -7.7310e-02,
         -2.1233e-01,  1.1624e-01, -3.0750e-02, -2.0969e-01, -7.1882e-02,
          2.0264e-02,  5.6892e-01, -4.7667e-02, -5.7833e-02,  2.2025e-01,
          1.9438e-01,  8.5796e-02,  9.4365e-02, -6.1909e-02,  1.4536e-01,
          4.7337e-01,  9.4513e-02, -3.8669e-02, -2.6207e-01,  3.5637e-01,
          4.3868e-03,  1.0647e-01,  1.7093e-01,  3.7303e-01, -2.3088e-01,
          3.8289e-02,  3.7717e-03,  1.8648e-01,  5.3922e-01,  5.0358e-02,
          2.5549e-01, -2.2729e-01, -3.8777e-01,  2.4169e-02, -3.8043e-01,
          2.6948e-01, -1.2589e-01, -5.4698e-02, -2.8281e-01,  5.4571e-02,
         -1.5521e-01,  4.6384e-01, -2.1077e-01,  3.7051e-01, -1.1025e-01,
          7.9044e-02, -2.6104e-01,  1.8363e-01,  1.3138e-01,  1.5863e-01,
         -4.0052e-01, -6.7494e-01,  1.6331e-01,  1.4603e-01, -2.3036e-01,
         -2.4227e-02,  3.1319e-01,  3.5376e-02,  2.5651e-01,  1.7717e-01,
          4.2840e-02, -2.0514e-03,  5.7740e-02,  2.2028e-01,  2.7267e-01,
         -1.0314e-01,  3.3815e-01,  7.2471e-02, -3.4063e-01, -2.6749e-02,
          1.3707e-01,  6.7732e-02,  1.5723e-01, -2.2850e-01,  4.2297e-02,
          7.3333e-02, -1.0644e-01, -3.7063e-02, -1.1494e-01, -8.9077e-02,
         -2.9038e-03,  1.2901e-01,  3.2854e-01,  1.2637e-02,  1.8188e-01,
          8.4030e-02, -6.2895e-02, -1.9501e-01, -5.0282e-02,  1.8332e-01,
          1.9937e-01, -3.3997e-01, -1.1312e-01,  7.5545e-02, -1.1660e-01,
          3.1337e-01, -2.8506e-02,  2.5590e-01, -4.0827e-02, -8.7809e-02,
          5.0001e-03,  1.3770e-01,  7.2984e-02,  2.3472e-02,  1.1375e-01,
          1.8415e-01]], device='cuda:0') tensor(0.2313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
634000 特征值优化 tensor(0.9928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6048e+00,  1.3919e-01, -1.2570e+00, -9.4558e-01,  2.1801e+00,
          3.7057e+00,  4.0399e-01, -1.9648e+00, -2.5451e-01,  4.8895e-01,
          4.3192e-01, -2.6341e-01, -9.0358e-01, -7.3463e-01,  3.4983e-01,
         -1.1874e+00, -2.1502e-01, -4.8761e-01,  5.5427e-01, -3.1208e-01,
         -7.1947e-01,  1.4919e-02,  5.1971e-01, -7.1586e-01,  6.1745e-02,
          1.2907e-01, -3.7133e-02,  5.0159e-03,  1.0429e-01,  9.3341e-03,
          2.2285e-01, -1.2271e-01, -1.4046e-01, -3.8815e-02,  7.2118e-02,
         -2.7027e-01, -7.2728e-03,  8.5445e-02,  2.9433e-01,  4.2005e-02,
         -4.3678e-02,  6.2629e-02, -1.4002e-02,  9.7497e-02, -1.5150e-01,
          2.8500e-01,  1.9952e-01,  1.7327e-01,  2.7379e-01,  2.9922e-01,
          3.5471e-01,  3.0320e-02,  3.1196e-01,  2.3272e-01, -5.8863e-02,
         -2.4746e-01,  1.2095e-01, -3.8109e-02, -2.4562e-01, -7.7250e-02,
          5.9390e-02,  5.6825e-01, -1.6981e-02, -6.8216e-02,  2.1077e-01,
          1.9678e-01,  9.3816e-02,  1.2197e-01, -5.0421e-02,  1.4437e-01,
          4.6361e-01,  9.4122e-02, -5.9222e-02, -2.3440e-01,  3.5450e-01,
          2.2483e-02,  1.2204e-01,  1.7161e-01,  3.6010e-01, -2.4655e-01,
          1.9723e-02, -3.1586e-03,  1.8690e-01,  5.0352e-01,  5.1401e-02,
          2.5474e-01, -2.4361e-01, -4.0658e-01,  4.7821e-03, -3.8638e-01,
          2.4872e-01, -1.2952e-01, -6.0596e-02, -2.6821e-01,  6.0532e-02,
         -1.6792e-01,  4.7810e-01, -2.5941e-01,  3.9011e-01, -1.5613e-01,
          2.4467e-02, -2.6567e-01,  1.5210e-01,  1.1834e-01,  1.6515e-01,
         -3.9008e-01, -6.9133e-01,  2.0153e-01,  2.0465e-01, -2.3344e-01,
         -2.3409e-02,  3.0334e-01,  2.8337e-02,  2.5853e-01,  1.6785e-01,
          5.4378e-02,  3.2299e-04,  7.0721e-02,  2.1436e-01,  2.9143e-01,
         -8.7267e-02,  3.1105e-01,  7.1706e-02, -3.4696e-01, -3.2728e-02,
          1.3622e-01,  7.8245e-02,  1.4773e-01, -2.1177e-01,  4.6455e-02,
          5.5407e-02, -1.0665e-01, -3.7598e-02, -1.1431e-01, -9.6391e-02,
          1.2045e-02,  1.3377e-01,  3.3081e-01,  2.2493e-02,  2.1195e-01,
          1.0207e-01, -7.6776e-02, -1.6785e-01, -7.7154e-02,  1.6634e-01,
          2.0015e-01, -3.2148e-01, -1.1112e-01,  6.6815e-02, -9.6278e-02,
          3.0412e-01, -3.1720e-02,  2.5916e-01, -4.9839e-02, -1.1800e-01,
         -1.0426e-02,  1.2366e-01,  8.5693e-02,  3.3218e-02,  1.2012e-01,
          1.8277e-01]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
635000 正交保障 tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6230e+00,  5.7685e-02, -1.2038e+00, -9.6193e-01,  2.1685e+00,
          3.7626e+00,  3.9998e-01, -1.9894e+00, -3.0403e-01,  4.8049e-01,
          4.3625e-01, -2.6396e-01, -9.0070e-01, -7.4528e-01,  3.4994e-01,
         -1.1517e+00, -2.3202e-01, -4.4403e-01,  5.3616e-01, -3.3303e-01,
         -7.1396e-01,  1.4279e-02,  5.1602e-01, -7.2151e-01,  3.0014e-02,
          1.3120e-01, -1.0674e-02,  3.0529e-02,  1.0976e-01,  1.3387e-02,
          2.0887e-01, -1.4084e-01, -1.6529e-01, -5.3173e-02,  4.1804e-02,
         -2.5439e-01, -1.6667e-02,  9.7921e-02,  3.0826e-01,  5.9768e-02,
         -4.3494e-02,  6.4207e-02, -1.6246e-02,  1.1023e-01, -1.5242e-01,
          2.7270e-01,  2.0657e-01,  1.7344e-01,  2.7246e-01,  3.3361e-01,
          3.4603e-01,  3.6597e-02,  3.2307e-01,  2.3463e-01, -5.3538e-02,
         -2.7099e-01,  1.1520e-01, -5.8233e-02, -2.4788e-01, -8.1525e-02,
          6.3761e-02,  5.6566e-01, -4.4480e-03, -8.8035e-02,  2.2078e-01,
          1.9231e-01,  1.1190e-01,  1.3043e-01, -4.2419e-02,  1.4666e-01,
          4.5373e-01,  9.3424e-02, -5.5378e-02, -2.4358e-01,  3.3854e-01,
          8.7965e-03,  1.0709e-01,  1.7700e-01,  3.3449e-01, -2.4199e-01,
          1.5436e-02, -2.2422e-02,  2.0917e-01,  4.9273e-01,  6.7307e-02,
          2.3757e-01, -2.5219e-01, -4.1097e-01, -2.1502e-02, -4.0103e-01,
          2.4450e-01, -1.5929e-01, -6.5093e-02, -2.8532e-01,  6.1325e-02,
         -1.8319e-01,  4.7416e-01, -2.5049e-01,  4.4276e-01, -2.2691e-01,
          1.1895e-02, -2.6766e-01,  1.3387e-01,  1.1712e-01,  1.4219e-01,
         -4.0728e-01, -7.1709e-01,  2.2242e-01,  2.3909e-01, -2.4225e-01,
         -1.6642e-02,  2.9968e-01,  3.2239e-02,  2.6725e-01,  1.6287e-01,
          6.6029e-02,  1.4794e-03,  8.0611e-02,  2.0606e-01,  3.0147e-01,
         -7.9415e-02,  3.0827e-01,  3.6299e-02, -3.4451e-01, -2.7775e-02,
          1.3795e-01,  8.7383e-02,  1.3251e-01, -2.1569e-01,  5.3856e-02,
          5.9611e-02, -1.0248e-01, -5.4659e-02, -1.1734e-01, -1.0368e-01,
          1.6885e-02,  1.2809e-01,  3.1853e-01,  1.6023e-02,  2.0668e-01,
          8.2526e-02, -7.3855e-02, -1.8938e-01, -1.1679e-01,  1.4367e-01,
          2.2100e-01, -2.9311e-01, -1.0906e-01,  6.3255e-02, -9.1538e-02,
          2.7932e-01, -4.4546e-03,  2.7514e-01, -6.1518e-02, -1.1213e-01,
         -6.0457e-03,  1.5663e-01,  5.8163e-02,  2.2422e-02,  1.1216e-01,
          1.8830e-01]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
636000 特征值优化 tensor(1.0007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6389e+00,  3.4931e-02, -1.2197e+00, -9.5267e-01,  2.1840e+00,
          3.8256e+00,  4.2593e-01, -2.0185e+00, -3.2367e-01,  4.8156e-01,
          4.2811e-01, -2.6675e-01, -8.6873e-01, -7.2824e-01,  3.6657e-01,
         -1.1137e+00, -2.0471e-01, -4.0014e-01,  5.3221e-01, -3.4354e-01,
         -7.0076e-01, -2.2194e-03,  5.0780e-01, -7.1287e-01,  7.9547e-03,
          1.2062e-01,  9.6171e-03,  5.4561e-02,  9.4683e-02,  1.2727e-02,
          1.8570e-01, -1.3781e-01, -1.9297e-01, -5.7364e-02,  3.3638e-02,
         -2.5317e-01, -1.1806e-02,  9.4151e-02,  2.9943e-01,  7.1135e-02,
         -4.2285e-02,  6.3686e-02, -1.5280e-02,  1.0173e-01, -1.5821e-01,
          2.6040e-01,  1.9848e-01,  1.7219e-01,  2.5697e-01,  3.6180e-01,
          3.4218e-01,  6.4680e-02,  3.2340e-01,  2.3032e-01, -3.0478e-02,
         -2.6995e-01,  1.0763e-01, -3.6483e-02, -2.6446e-01, -7.9855e-02,
          6.5723e-02,  5.5693e-01,  2.7437e-02, -1.2290e-01,  2.3646e-01,
          1.7003e-01,  1.0620e-01,  1.3754e-01, -3.5310e-02,  1.5028e-01,
          4.4678e-01,  1.0039e-01, -6.8980e-02, -2.4515e-01,  3.4154e-01,
          1.3271e-02,  1.2198e-01,  1.8283e-01,  3.2357e-01, -2.6037e-01,
         -2.3774e-03, -1.5881e-02,  2.0601e-01,  4.7772e-01,  7.4557e-02,
          2.3983e-01, -2.3264e-01, -4.0626e-01, -3.4738e-02, -3.8599e-01,
          2.3135e-01, -1.6640e-01, -7.0861e-02, -2.8429e-01,  7.0223e-02,
         -1.8504e-01,  4.7947e-01, -2.7234e-01,  4.7035e-01, -2.4889e-01,
         -2.0068e-02, -2.9157e-01,  1.2080e-01,  1.1912e-01,  1.4271e-01,
         -4.1609e-01, -7.1443e-01,  2.5059e-01,  2.6732e-01, -2.4406e-01,
         -2.4221e-02,  2.7855e-01,  5.6510e-02,  2.6497e-01,  1.7062e-01,
          5.9963e-02,  7.0632e-04,  1.1660e-01,  1.9704e-01,  3.0420e-01,
         -9.6091e-02,  3.0890e-01,  5.7382e-02, -3.4944e-01, -2.9648e-02,
          1.4421e-01,  9.0992e-02,  1.2985e-01, -2.1093e-01,  5.3680e-02,
          5.3823e-02, -1.0770e-01, -5.2521e-02, -1.1809e-01, -8.7952e-02,
          2.5296e-02,  1.2053e-01,  3.4136e-01,  4.6929e-02,  2.3120e-01,
          8.0444e-02, -7.6599e-02, -1.9098e-01, -9.2096e-02,  1.4001e-01,
          2.2036e-01, -2.7864e-01, -1.1274e-01,  4.6859e-02, -7.6191e-02,
          2.9397e-01, -5.0307e-03,  2.8019e-01, -5.7491e-02, -1.0731e-01,
         -6.6091e-03,  1.6486e-01,  4.9889e-02,  3.0965e-02,  1.1832e-01,
          1.9670e-01]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
637000 特征值优化 tensor(1.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6524e+00, -2.3080e-02, -1.1940e+00, -9.5694e-01,  2.1747e+00,
          3.8703e+00,  4.4687e-01, -2.0401e+00, -3.5505e-01,  4.8069e-01,
          4.3564e-01, -2.7245e-01, -8.3687e-01, -7.5487e-01,  3.6216e-01,
         -1.0975e+00, -2.0238e-01, -3.6848e-01,  5.2107e-01, -3.2744e-01,
         -6.9508e-01, -1.3069e-02,  5.0185e-01, -6.9533e-01,  2.3990e-02,
          1.2560e-01,  1.7677e-02,  5.9448e-02,  1.1724e-01,  2.0987e-02,
          1.5908e-01, -1.3629e-01, -2.0078e-01, -5.9064e-02,  4.1062e-02,
         -2.3568e-01, -1.1071e-02,  1.0382e-01,  2.9378e-01,  8.8194e-02,
         -4.8793e-02,  6.7020e-02, -1.8773e-02,  1.0922e-01, -1.6649e-01,
          2.4548e-01,  1.8552e-01,  1.7486e-01,  2.3957e-01,  3.6778e-01,
          3.3614e-01,  6.7991e-02,  3.1164e-01,  2.2839e-01, -1.6608e-02,
         -2.7399e-01,  1.1262e-01, -4.1448e-02, -2.7659e-01, -9.1078e-02,
          6.4066e-02,  5.4367e-01,  4.5683e-02, -1.4955e-01,  2.5559e-01,
          1.5913e-01,  1.1307e-01,  1.4498e-01, -2.3180e-02,  1.4798e-01,
          4.4033e-01,  1.0165e-01, -7.0745e-02, -2.5109e-01,  3.3635e-01,
          1.3754e-02,  1.3343e-01,  1.8567e-01,  3.2044e-01, -2.6657e-01,
         -1.5965e-02, -1.7935e-02,  2.0570e-01,  4.8312e-01,  8.0599e-02,
          2.3341e-01, -2.4323e-01, -4.1193e-01, -4.7328e-02, -3.8934e-01,
          2.3312e-01, -1.9781e-01, -7.1433e-02, -2.8802e-01,  6.5563e-02,
         -1.9101e-01,  4.8421e-01, -2.8057e-01,  4.5400e-01, -2.5992e-01,
         -4.2755e-02, -2.9243e-01,  1.3529e-01,  1.2639e-01,  1.2189e-01,
         -4.1373e-01, -7.2507e-01,  2.6129e-01,  2.7714e-01, -2.4637e-01,
         -2.4683e-02,  2.5732e-01,  8.7314e-02,  2.6533e-01,  1.6377e-01,
          6.1769e-02,  3.2583e-03,  1.0942e-01,  1.8596e-01,  3.2867e-01,
         -1.0535e-01,  3.0046e-01,  5.3529e-02, -3.5625e-01, -3.2384e-02,
          1.4809e-01,  8.5119e-02,  1.2486e-01, -2.1300e-01,  4.4901e-02,
          6.4972e-02, -9.9089e-02, -5.1523e-02, -1.2350e-01, -8.0512e-02,
          3.8362e-02,  1.2714e-01,  3.4838e-01,  4.6646e-02,  2.3276e-01,
          7.4499e-02, -7.6840e-02, -1.9746e-01, -9.0374e-02,  1.4311e-01,
          2.3014e-01, -2.6739e-01, -1.2177e-01,  3.8975e-02, -7.9642e-02,
          2.9669e-01,  3.9694e-03,  2.9301e-01, -5.2394e-02, -1.1606e-01,
         -6.3347e-04,  1.6361e-01,  4.3858e-02,  3.6883e-02,  1.1701e-01,
          1.9355e-01]], device='cuda:0') tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
638000 特征值优化 tensor(1.0041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6707, -0.0596, -1.1977, -0.9541,  2.1903,  3.9286,  0.4527, -2.0841,
         -0.3869,  0.4699,  0.4474, -0.2806, -0.8001, -0.7657,  0.3486, -1.0875,
         -0.2010, -0.3475,  0.5083, -0.3130, -0.6795, -0.0046,  0.4874, -0.6809,
          0.0227,  0.1231,  0.0358,  0.0654,  0.1189,  0.0260,  0.1498, -0.1429,
         -0.2121, -0.0546,  0.0469, -0.2279, -0.0106,  0.1153,  0.2821,  0.0878,
         -0.0449,  0.0648, -0.0126,  0.1128, -0.1714,  0.2449,  0.1608,  0.1751,
          0.2237,  0.3523,  0.3358,  0.0869,  0.3076,  0.2243, -0.0120, -0.2752,
          0.1147, -0.0506, -0.2758, -0.0992,  0.0565,  0.5488,  0.0617, -0.1620,
          0.2764,  0.1428,  0.1228,  0.1509, -0.0243,  0.1528,  0.4364,  0.1031,
         -0.0718, -0.2513,  0.3364,  0.0084,  0.1438,  0.1935,  0.3150, -0.2656,
         -0.0168, -0.0134,  0.1984,  0.4695,  0.0792,  0.2356, -0.2455, -0.4121,
         -0.0526, -0.3661,  0.2262, -0.2066, -0.0779, -0.2883,  0.0647, -0.1930,
          0.4756, -0.2956,  0.4103, -0.2741, -0.0495, -0.2787,  0.1297,  0.1339,
          0.1139, -0.4130, -0.7085,  0.2590,  0.2818, -0.2548, -0.0247,  0.2474,
          0.1018,  0.2657,  0.1575,  0.0592,  0.0075,  0.1217,  0.1948,  0.3292,
         -0.1022,  0.2999,  0.0498, -0.3563, -0.0355,  0.1464,  0.0796,  0.1256,
         -0.2146,  0.0303,  0.0815, -0.0931, -0.0442, -0.1250, -0.0797,  0.0551,
          0.1319,  0.3397,  0.0445,  0.2255,  0.0711, -0.0960, -0.2232, -0.0822,
          0.1427,  0.2243, -0.2723, -0.1148,  0.0425, -0.0771,  0.3002, -0.0056,
          0.2889, -0.0458, -0.1111, -0.0165,  0.1664,  0.0405,  0.0311,  0.1298,
          0.1859]], device='cuda:0') tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
639000 特征值优化 tensor(0.9853, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6909e+00, -1.0375e-01, -1.1953e+00, -9.5423e-01,  2.2121e+00,
          3.9855e+00,  4.6282e-01, -2.1063e+00, -3.9769e-01,  4.8064e-01,
          4.5553e-01, -2.6639e-01, -7.7160e-01, -7.5577e-01,  3.5297e-01,
         -1.0637e+00, -2.0131e-01, -3.2910e-01,  4.9973e-01, -2.9229e-01,
         -6.5846e-01, -3.5892e-03,  4.8102e-01, -6.6566e-01,  3.1647e-02,
          1.1130e-01,  5.0439e-02,  5.9181e-02,  1.1147e-01,  2.3566e-02,
          1.3196e-01, -1.4999e-01, -2.3879e-01, -4.9552e-02,  4.7744e-02,
         -2.1421e-01, -7.0355e-03,  1.0081e-01,  2.9260e-01,  8.8086e-02,
         -5.6387e-02,  6.4457e-02, -1.4381e-02,  1.0717e-01, -1.7516e-01,
          2.3479e-01,  1.5612e-01,  1.8504e-01,  2.0860e-01,  3.5536e-01,
          3.2936e-01,  9.0575e-02,  3.0524e-01,  2.2547e-01, -1.9036e-02,
         -2.7867e-01,  1.1885e-01, -4.2253e-02, -2.7645e-01, -1.0554e-01,
          6.4724e-02,  5.3842e-01,  6.8717e-02, -1.7101e-01,  2.8540e-01,
          1.2922e-01,  1.0919e-01,  1.4740e-01, -2.5727e-02,  1.4863e-01,
          4.4037e-01,  1.0281e-01, -7.9687e-02, -2.4537e-01,  3.3639e-01,
          2.6624e-02,  1.4316e-01,  1.8248e-01,  3.0638e-01, -2.6454e-01,
         -1.4000e-02, -1.5064e-02,  2.0611e-01,  4.7397e-01,  6.8115e-02,
          2.4250e-01, -2.3843e-01, -4.1309e-01, -5.5328e-02, -3.4949e-01,
          2.1376e-01, -2.1231e-01, -7.2985e-02, -2.9404e-01,  7.2111e-02,
         -1.9252e-01,  4.7674e-01, -3.0294e-01,  3.9471e-01, -2.6765e-01,
         -4.8939e-02, -2.6655e-01,  1.5275e-01,  1.4230e-01,  1.2871e-01,
         -4.0892e-01, -7.0579e-01,  2.5452e-01,  2.7840e-01, -2.6140e-01,
         -2.8090e-02,  2.3399e-01,  1.1303e-01,  2.6587e-01,  1.6587e-01,
          5.2428e-02,  6.8144e-03,  1.3598e-01,  1.9712e-01,  3.3798e-01,
         -1.1563e-01,  3.1250e-01,  4.5470e-02, -3.5171e-01, -3.1141e-02,
          1.5459e-01,  7.1234e-02,  1.2684e-01, -2.2033e-01,  2.6027e-02,
          9.0472e-02, -9.1862e-02, -4.3301e-02, -1.2151e-01, -7.9286e-02,
          5.7212e-02,  1.2779e-01,  3.4589e-01,  4.4721e-02,  2.3770e-01,
          6.3311e-02, -8.1921e-02, -2.3771e-01, -7.2912e-02,  1.2853e-01,
          2.2290e-01, -2.8178e-01, -1.2742e-01,  4.1400e-02, -8.1449e-02,
          2.9717e-01, -3.0723e-03,  2.9004e-01, -3.7655e-02, -1.0811e-01,
         -2.3819e-02,  1.7368e-01,  4.9440e-02,  3.0814e-02,  1.4158e-01,
          1.9350e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
640000 特征值优化 tensor(0.9877, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6584e+00, -1.3011e-01, -1.2029e+00, -9.4987e-01,  2.2652e+00,
          4.0221e+00,  4.6247e-01, -2.1208e+00, -4.1108e-01,  4.8836e-01,
          4.7150e-01, -2.6582e-01, -7.5061e-01, -7.4900e-01,  3.5638e-01,
         -1.0726e+00, -2.0124e-01, -3.2221e-01,  4.8928e-01, -2.7680e-01,
         -6.4125e-01,  1.1947e-04,  4.7960e-01, -6.5178e-01,  3.5188e-02,
          1.0491e-01,  3.8540e-02,  6.0437e-02,  1.0944e-01,  2.6391e-02,
          1.4107e-01, -1.4471e-01, -2.3282e-01, -5.0923e-02,  5.7035e-02,
         -2.1117e-01, -2.2721e-02,  9.9648e-02,  2.8764e-01,  9.1821e-02,
         -5.1765e-02,  6.5655e-02, -1.7243e-02,  1.0444e-01, -1.7582e-01,
          2.3310e-01,  1.4181e-01,  1.7994e-01,  2.0231e-01,  3.5222e-01,
          3.2447e-01,  9.7202e-02,  3.0991e-01,  2.2758e-01, -1.8819e-02,
         -2.7737e-01,  1.2058e-01, -4.2062e-02, -2.8431e-01, -1.0270e-01,
          6.0949e-02,  5.3990e-01,  5.8308e-02, -1.8588e-01,  2.9261e-01,
          1.3345e-01,  1.1897e-01,  1.5441e-01, -2.9766e-02,  1.4448e-01,
          4.3639e-01,  9.6306e-02, -7.3396e-02, -2.4938e-01,  3.3387e-01,
          2.2182e-02,  1.3880e-01,  1.8568e-01,  3.0513e-01, -2.6486e-01,
         -1.2668e-02, -1.6279e-02,  2.0504e-01,  4.7636e-01,  7.2678e-02,
          2.4570e-01, -2.3983e-01, -4.3596e-01, -5.9248e-02, -3.5013e-01,
          2.2054e-01, -2.1264e-01, -7.9089e-02, -2.9564e-01,  7.3539e-02,
         -1.9113e-01,  4.8623e-01, -3.0405e-01,  3.6363e-01, -2.6060e-01,
         -5.9269e-02, -2.6384e-01,  1.5838e-01,  1.4020e-01,  1.2982e-01,
         -4.0406e-01, -7.1375e-01,  2.4535e-01,  2.8333e-01, -2.5378e-01,
         -3.6691e-02,  2.3376e-01,  1.1353e-01,  2.6041e-01,  1.6260e-01,
          6.1137e-02,  1.0960e-02,  1.3459e-01,  1.9877e-01,  3.4420e-01,
         -1.1660e-01,  2.9976e-01,  4.2514e-02, -3.5569e-01, -3.0424e-02,
          1.5004e-01,  6.3466e-02,  1.2071e-01, -2.2828e-01,  2.1370e-02,
          9.0737e-02, -9.5876e-02, -4.1440e-02, -1.2005e-01, -7.7662e-02,
          5.0312e-02,  1.2808e-01,  3.5419e-01,  4.8763e-02,  2.3670e-01,
          5.6755e-02, -8.6655e-02, -2.4714e-01, -7.2785e-02,  1.3333e-01,
          2.1833e-01, -2.7912e-01, -1.2625e-01,  3.5122e-02, -9.2799e-02,
          2.9870e-01, -1.0143e-03,  2.9287e-01, -4.0393e-02, -1.1153e-01,
         -2.6161e-02,  1.7246e-01,  4.5602e-02,  3.4602e-02,  1.4892e-01,
          1.9916e-01]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
641000 特征值优化 tensor(0.9984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6332e+00, -1.6618e-01, -1.1868e+00, -9.5102e-01,  2.2652e+00,
          4.0306e+00,  4.5767e-01, -2.1338e+00, -4.1565e-01,  4.7995e-01,
          4.9240e-01, -2.5761e-01, -7.5690e-01, -7.6036e-01,  3.4073e-01,
         -1.0707e+00, -2.0029e-01, -3.0921e-01,  4.8778e-01, -2.7924e-01,
         -6.1171e-01, -2.4759e-03,  4.6266e-01, -6.2398e-01,  2.2830e-02,
          9.8669e-02,  2.5602e-02,  7.1050e-02,  1.0976e-01,  2.0155e-02,
          1.5454e-01, -1.4458e-01, -2.2125e-01, -6.0636e-02,  5.5901e-02,
         -2.1766e-01, -5.0353e-03,  1.0117e-01,  2.7698e-01,  9.5073e-02,
         -5.3803e-02,  6.4191e-02, -1.5634e-02,  1.1639e-01, -1.6586e-01,
          2.4429e-01,  1.3314e-01,  1.7572e-01,  2.0518e-01,  3.5432e-01,
          3.2995e-01,  8.9319e-02,  3.0025e-01,  2.2576e-01, -7.8568e-03,
         -2.8948e-01,  1.3059e-01, -3.0785e-02, -2.8111e-01, -1.0190e-01,
          5.9221e-02,  5.3788e-01,  4.9689e-02, -1.8487e-01,  3.0123e-01,
          1.3121e-01,  1.2589e-01,  1.5705e-01, -1.9306e-02,  1.4762e-01,
          4.3516e-01,  9.9943e-02, -6.8700e-02, -2.3917e-01,  3.4485e-01,
          1.5902e-02,  1.4448e-01,  1.8905e-01,  3.2041e-01, -2.7624e-01,
         -2.0381e-02, -1.4366e-02,  2.0518e-01,  4.7309e-01,  9.8179e-02,
          2.3397e-01, -2.3781e-01, -4.3792e-01, -7.6858e-02, -3.4879e-01,
          2.1153e-01, -2.3094e-01, -7.0740e-02, -2.8905e-01,  6.9393e-02,
         -1.9335e-01,  5.0107e-01, -3.3284e-01,  3.5304e-01, -2.7741e-01,
         -8.1490e-02, -2.5172e-01,  1.7410e-01,  1.2113e-01,  1.2670e-01,
         -4.2166e-01, -7.1645e-01,  2.5242e-01,  2.9022e-01, -2.4944e-01,
         -4.1780e-02,  2.3090e-01,  1.2438e-01,  2.7114e-01,  1.4446e-01,
          7.0348e-02,  5.5509e-03,  1.1962e-01,  1.8310e-01,  3.3181e-01,
         -1.2335e-01,  2.9586e-01,  4.6212e-02, -3.5367e-01, -3.0410e-02,
          1.4579e-01,  5.8224e-02,  1.1712e-01, -2.3213e-01,  2.2440e-02,
          8.5718e-02, -9.9018e-02, -4.2315e-02, -1.2532e-01, -8.0848e-02,
          4.7320e-02,  1.2268e-01,  3.5778e-01,  4.0078e-02,  2.1929e-01,
          6.0499e-02, -9.1054e-02, -2.3569e-01, -6.1694e-02,  1.4793e-01,
          2.1380e-01, -2.7197e-01, -1.4222e-01,  2.4319e-02, -8.6510e-02,
          3.0646e-01,  1.3888e-03,  3.0275e-01, -6.0282e-02, -1.0555e-01,
         -2.2013e-02,  1.6676e-01,  3.8670e-02,  4.0605e-02,  1.3402e-01,
          1.8885e-01]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
642000 特征值优化 tensor(0.9897, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6254e+00, -1.7767e-01, -1.1869e+00, -9.4530e-01,  2.3067e+00,
          4.0728e+00,  4.5311e-01, -2.1314e+00, -4.2129e-01,  4.9009e-01,
          5.1117e-01, -2.5537e-01, -7.3323e-01, -7.4043e-01,  3.4787e-01,
         -1.0539e+00, -1.9351e-01, -3.0552e-01,  4.7569e-01, -2.6865e-01,
         -5.9913e-01, -5.6149e-03,  4.6743e-01, -6.1715e-01,  1.6898e-02,
          1.0172e-01,  3.4954e-02,  6.4087e-02,  1.1257e-01,  1.9090e-02,
          1.3887e-01, -1.3663e-01, -2.3144e-01, -5.4067e-02,  5.8937e-02,
         -2.0451e-01, -5.0890e-03,  1.0321e-01,  2.8276e-01,  1.0210e-01,
         -4.9817e-02,  6.4294e-02, -1.4885e-02,  1.0963e-01, -1.6676e-01,
          2.3412e-01,  1.3764e-01,  1.8231e-01,  2.1193e-01,  3.5861e-01,
          3.2197e-01,  9.0976e-02,  3.1004e-01,  2.3209e-01, -1.1841e-02,
         -2.7902e-01,  1.1816e-01, -3.7950e-02, -2.9244e-01, -1.0833e-01,
          5.7986e-02,  5.3872e-01,  4.8353e-02, -1.9027e-01,  2.9869e-01,
          1.3236e-01,  1.2144e-01,  1.5689e-01, -2.6241e-02,  1.3525e-01,
          4.3529e-01,  1.0148e-01, -6.5801e-02, -2.3803e-01,  3.4191e-01,
          2.6911e-02,  1.5205e-01,  1.7813e-01,  3.0258e-01, -2.7074e-01,
         -1.6821e-02, -2.5948e-02,  2.1274e-01,  4.6944e-01,  8.0377e-02,
          2.4160e-01, -2.4640e-01, -4.4070e-01, -6.1982e-02, -3.4954e-01,
          2.1202e-01, -2.3143e-01, -6.9623e-02, -2.8158e-01,  7.3627e-02,
         -1.9468e-01,  4.9693e-01, -3.2341e-01,  3.6281e-01, -2.7878e-01,
         -8.6175e-02, -2.6289e-01,  1.6743e-01,  1.3920e-01,  1.3103e-01,
         -4.2219e-01, -7.1418e-01,  2.5392e-01,  2.9514e-01, -2.5481e-01,
         -4.7220e-02,  2.2418e-01,  1.2048e-01,  2.5884e-01,  1.5872e-01,
          6.5012e-02,  5.2546e-03,  1.4067e-01,  1.9867e-01,  3.3397e-01,
         -1.3357e-01,  3.0339e-01,  4.6611e-02, -3.5332e-01, -2.0805e-02,
          1.5803e-01,  5.4099e-02,  1.1492e-01, -2.3952e-01,  1.7819e-02,
          9.0404e-02, -1.0177e-01, -3.9772e-02, -1.2076e-01, -7.5105e-02,
          5.8918e-02,  1.3267e-01,  3.5423e-01,  4.4665e-02,  2.3643e-01,
          5.0965e-02, -9.1560e-02, -2.3916e-01, -7.3318e-02,  1.3989e-01,
          2.1379e-01, -2.8787e-01, -1.3569e-01,  3.1995e-02, -8.9936e-02,
          2.9234e-01,  3.0981e-03,  2.9034e-01, -4.5924e-02, -1.1156e-01,
         -2.8040e-02,  1.7060e-01,  3.9237e-02,  4.2093e-02,  1.4513e-01,
          1.8627e-01]], device='cuda:0') tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
643000 特征值优化 tensor(0.9963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5827e+00, -1.8029e-01, -1.1866e+00, -9.5397e-01,  2.3432e+00,
          4.0711e+00,  4.5286e-01, -2.1328e+00, -4.4259e-01,  4.9656e-01,
          5.2462e-01, -2.5703e-01, -7.4300e-01, -7.4155e-01,  3.3067e-01,
         -1.0666e+00, -1.8970e-01, -3.0770e-01,  4.7195e-01, -2.6144e-01,
         -5.8435e-01, -2.2268e-03,  4.5878e-01, -6.1984e-01,  2.7825e-02,
          1.0256e-01,  1.5085e-02,  7.2930e-02,  1.1283e-01,  1.4659e-02,
          1.4511e-01, -1.3886e-01, -2.2289e-01, -7.1024e-02,  6.1052e-02,
         -2.0089e-01, -7.2243e-04,  9.3927e-02,  2.6863e-01,  1.0846e-01,
         -4.9998e-02,  6.5174e-02, -1.4615e-02,  1.0526e-01, -1.6549e-01,
          2.3918e-01,  1.2672e-01,  1.7024e-01,  2.0116e-01,  3.5955e-01,
          3.2323e-01,  9.4560e-02,  3.1138e-01,  2.3116e-01, -5.7512e-03,
         -2.7545e-01,  1.2003e-01, -4.1334e-02, -2.9938e-01, -1.0470e-01,
          6.3460e-02,  5.2612e-01,  3.9923e-02, -1.8834e-01,  3.0694e-01,
          1.3663e-01,  1.3347e-01,  1.6280e-01, -2.7012e-02,  1.4454e-01,
          4.3238e-01,  1.0185e-01, -7.5616e-02, -2.3937e-01,  3.4772e-01,
          1.5399e-02,  1.5031e-01,  1.8466e-01,  3.1564e-01, -2.6880e-01,
         -1.8400e-02, -1.3576e-02,  2.0454e-01,  4.7616e-01,  9.1133e-02,
          2.3905e-01, -2.4644e-01, -4.3945e-01, -6.5179e-02, -3.5464e-01,
          2.0757e-01, -2.3852e-01, -6.5901e-02, -2.9012e-01,  7.5645e-02,
         -1.9659e-01,  4.9895e-01, -3.3337e-01,  3.3488e-01, -2.7430e-01,
         -8.7387e-02, -2.5300e-01,  1.7455e-01,  1.3096e-01,  1.2343e-01,
         -4.1519e-01, -7.0965e-01,  2.5037e-01,  2.9357e-01, -2.5466e-01,
         -4.9020e-02,  2.3167e-01,  1.3690e-01,  2.5070e-01,  1.4266e-01,
          7.1693e-02,  5.0867e-03,  1.3404e-01,  1.8214e-01,  3.4523e-01,
         -1.1865e-01,  2.8994e-01,  5.2030e-02, -3.6134e-01, -2.5804e-02,
          1.4066e-01,  5.0496e-02,  1.1622e-01, -2.4051e-01,  1.1890e-02,
          8.8786e-02, -9.4588e-02, -3.2728e-02, -1.3052e-01, -7.1959e-02,
          4.7301e-02,  1.2980e-01,  3.6095e-01,  4.0815e-02,  2.2588e-01,
          5.5365e-02, -1.0319e-01, -2.4511e-01, -7.0127e-02,  1.4926e-01,
          2.1783e-01, -2.8067e-01, -1.2364e-01,  2.1840e-02, -8.9886e-02,
          3.0571e-01,  8.5542e-03,  2.9724e-01, -5.5765e-02, -1.1881e-01,
         -2.8072e-02,  1.6110e-01,  3.6670e-02,  5.1171e-02,  1.4385e-01,
          1.7766e-01]], device='cuda:0') tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
644000 特征值优化 tensor(0.9913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5751, -0.1821, -1.1757, -0.9474,  2.3482,  4.0652,  0.4597, -2.1249,
         -0.4388,  0.5026,  0.5113, -0.2310, -0.7144, -0.7294,  0.3410, -1.0542,
         -0.1910, -0.3117,  0.4873, -0.2601, -0.5659,  0.0085,  0.4522, -0.6058,
          0.0288,  0.0998,  0.0117,  0.0636,  0.0989,  0.0175,  0.1415, -0.1504,
         -0.2380, -0.0505,  0.0653, -0.1883, -0.0193,  0.0882,  0.2769,  0.1043,
         -0.0604,  0.0618, -0.0133,  0.1138, -0.1668,  0.2395,  0.1265,  0.1700,
          0.1997,  0.3526,  0.3141,  0.0881,  0.3197,  0.2235, -0.0083, -0.2770,
          0.1197, -0.0279, -0.2986, -0.1123,  0.0585,  0.5266,  0.0541, -0.1846,
          0.3128,  0.1381,  0.1217,  0.1589, -0.0367,  0.1482,  0.4407,  0.0973,
         -0.0676, -0.2488,  0.3397,  0.0324,  0.1497,  0.1928,  0.3077, -0.2673,
         -0.0041, -0.0095,  0.2075,  0.4825,  0.0916,  0.2482, -0.2445, -0.4526,
         -0.0658, -0.3275,  0.2162, -0.2284, -0.0572, -0.2881,  0.0732, -0.1949,
          0.5114, -0.3176,  0.3180, -0.2548, -0.0932, -0.2649,  0.1947,  0.1330,
          0.1245, -0.4162, -0.7086,  0.2483,  0.2675, -0.2580, -0.0525,  0.2377,
          0.1471,  0.2594,  0.1531,  0.0650,  0.0082,  0.1367,  0.1910,  0.3481,
         -0.1303,  0.2963,  0.0457, -0.3537, -0.0229,  0.1493,  0.0523,  0.1239,
         -0.2390,  0.0181,  0.1016, -0.0979, -0.0329, -0.1258, -0.0774,  0.0443,
          0.1125,  0.3568,  0.0318,  0.2347,  0.0440, -0.0831, -0.2492, -0.0610,
          0.1344,  0.2156, -0.2844, -0.1245,  0.0213, -0.0984,  0.3014,  0.0075,
          0.3016, -0.0470, -0.1147, -0.0317,  0.1713,  0.0502,  0.0414,  0.1593,
          0.1895]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
645000 特征值优化 tensor(1.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5745e+00, -2.1370e-01, -1.1855e+00, -9.4402e-01,  2.3722e+00,
          4.0917e+00,  4.4713e-01, -2.1383e+00, -4.5282e-01,  5.0703e-01,
          5.2744e-01, -2.3207e-01, -7.2867e-01, -7.5012e-01,  3.3123e-01,
         -1.0616e+00, -1.9240e-01, -2.9617e-01,  4.7803e-01, -2.6411e-01,
         -5.5429e-01,  3.2029e-03,  4.6409e-01, -5.7858e-01,  2.6706e-02,
          9.5674e-02,  1.1573e-02,  7.1526e-02,  1.0258e-01,  1.2145e-02,
          1.4564e-01, -1.3716e-01, -2.3243e-01, -6.8534e-02,  7.0894e-02,
         -1.9669e-01, -1.3246e-02,  1.0271e-01,  2.6916e-01,  9.2357e-02,
         -5.9060e-02,  6.4321e-02, -1.4728e-02,  1.1209e-01, -1.5895e-01,
          2.4361e-01,  1.1835e-01,  1.6807e-01,  1.9496e-01,  3.4916e-01,
          3.1124e-01,  1.0461e-01,  3.0926e-01,  2.2422e-01,  1.6238e-03,
         -2.7640e-01,  1.2556e-01, -3.8760e-02, -2.9335e-01, -1.0173e-01,
          4.8660e-02,  5.3406e-01,  3.4871e-02, -1.8454e-01,  3.1373e-01,
          1.2812e-01,  1.2896e-01,  1.6221e-01, -1.9309e-02,  1.3770e-01,
          4.4016e-01,  1.0580e-01, -5.9115e-02, -2.4426e-01,  3.4418e-01,
          2.1991e-02,  1.4749e-01,  1.9130e-01,  3.1243e-01, -2.7126e-01,
         -1.7710e-02, -1.8623e-02,  2.0892e-01,  4.7117e-01,  9.7594e-02,
          2.2900e-01, -2.4670e-01, -4.5692e-01, -7.3135e-02, -3.4963e-01,
          2.0884e-01, -2.3825e-01, -7.2822e-02, -2.8809e-01,  7.0946e-02,
         -1.9690e-01,  5.1508e-01, -3.2662e-01,  3.2257e-01, -2.7011e-01,
         -9.8935e-02, -2.6078e-01,  1.9286e-01,  1.3490e-01,  1.2036e-01,
         -4.2354e-01, -7.0770e-01,  2.5712e-01,  2.8781e-01, -2.5180e-01,
         -5.3941e-02,  2.3621e-01,  1.4044e-01,  2.6043e-01,  1.4003e-01,
          7.5873e-02,  5.4411e-03,  1.3327e-01,  1.8190e-01,  3.3676e-01,
         -1.3361e-01,  2.9066e-01,  4.5865e-02, -3.5707e-01, -1.2198e-02,
          1.5225e-01,  5.0898e-02,  1.1446e-01, -2.4471e-01,  9.1077e-03,
          9.2620e-02, -9.8994e-02, -3.7845e-02, -1.3247e-01, -7.2466e-02,
          5.2031e-02,  1.2968e-01,  3.4651e-01,  3.0784e-02,  2.2581e-01,
          5.1980e-02, -9.9989e-02, -2.5237e-01, -6.4066e-02,  1.5033e-01,
          2.0707e-01, -2.8342e-01, -1.3751e-01,  2.5885e-02, -8.4675e-02,
          2.9770e-01,  1.0013e-02,  3.0027e-01, -5.7939e-02, -1.1085e-01,
         -1.8796e-02,  1.7009e-01,  2.9546e-02,  5.4705e-02,  1.4366e-01,
          1.7814e-01]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
646000 特征值优化 tensor(1.0014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5611e+00, -2.3827e-01, -1.1665e+00, -9.4273e-01,  2.3775e+00,
          4.1063e+00,  4.4651e-01, -2.1341e+00, -4.5341e-01,  5.0203e-01,
          5.1827e-01, -2.3291e-01, -7.1164e-01, -7.5408e-01,  3.3904e-01,
         -1.0601e+00, -1.9475e-01, -2.8749e-01,  4.7034e-01, -2.6019e-01,
         -5.5046e-01,  6.4625e-03,  4.6895e-01, -5.7800e-01,  1.8950e-02,
          9.9979e-02,  9.9236e-03,  7.7216e-02,  1.0339e-01,  1.1661e-02,
          1.4032e-01, -1.2475e-01, -2.2775e-01, -5.6508e-02,  6.0368e-02,
         -2.0143e-01, -3.3900e-03,  9.9133e-02,  2.6753e-01,  1.1319e-01,
         -5.6963e-02,  6.4471e-02, -1.4373e-02,  1.1728e-01, -1.5824e-01,
          2.4634e-01,  1.0414e-01,  1.6762e-01,  2.0872e-01,  3.5589e-01,
          3.2106e-01,  8.8188e-02,  3.0753e-01,  2.2254e-01,  1.6194e-03,
         -2.8379e-01,  1.1944e-01, -4.1947e-02, -2.8385e-01, -1.1285e-01,
          4.8264e-02,  5.2888e-01,  3.7175e-02, -1.8118e-01,  3.1929e-01,
          1.2354e-01,  1.2742e-01,  1.6657e-01, -1.6607e-02,  1.3519e-01,
          4.3709e-01,  1.0439e-01, -6.2525e-02, -2.3868e-01,  3.4786e-01,
          3.3878e-02,  1.4830e-01,  1.9350e-01,  3.0685e-01, -2.7043e-01,
         -1.4914e-02, -1.4333e-02,  2.0459e-01,  4.6300e-01,  1.1790e-01,
          2.3674e-01, -2.4502e-01, -4.5903e-01, -7.1444e-02, -3.4543e-01,
          2.1238e-01, -2.3988e-01, -5.9449e-02, -2.8272e-01,  7.1646e-02,
         -2.0130e-01,  5.1001e-01, -3.2143e-01,  3.3021e-01, -2.5502e-01,
         -9.8293e-02, -2.5110e-01,  1.7764e-01,  1.3748e-01,  1.1614e-01,
         -4.2992e-01, -7.2377e-01,  2.6490e-01,  2.8557e-01, -2.5521e-01,
         -5.1162e-02,  2.4264e-01,  1.4784e-01,  2.5596e-01,  1.5030e-01,
          7.7966e-02,  4.3122e-03,  1.3197e-01,  1.8931e-01,  3.3582e-01,
         -1.4765e-01,  2.8800e-01,  4.5727e-02, -3.5790e-01, -1.0898e-02,
          1.5784e-01,  4.5335e-02,  1.2506e-01, -2.4510e-01,  1.5136e-02,
          9.5385e-02, -9.1772e-02, -3.5606e-02, -1.3375e-01, -6.8587e-02,
          4.4578e-02,  1.2049e-01,  3.5257e-01,  3.1589e-02,  2.2607e-01,
          4.0859e-02, -1.1141e-01, -2.5456e-01, -6.8053e-02,  1.4897e-01,
          1.9869e-01, -2.8185e-01, -1.4340e-01,  3.4717e-02, -9.4290e-02,
          3.0624e-01,  4.5219e-03,  3.0432e-01, -6.0803e-02, -1.2279e-01,
         -2.8003e-02,  1.6411e-01,  3.2455e-02,  5.7384e-02,  1.4309e-01,
          1.7337e-01]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
647000 特征值优化 tensor(0.9987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5240e+00, -2.2229e-01, -1.1901e+00, -9.4479e-01,  2.3977e+00,
          4.1159e+00,  4.4799e-01, -2.1385e+00, -4.4679e-01,  5.0609e-01,
          5.3210e-01, -2.2623e-01, -7.1101e-01, -7.4498e-01,  3.4171e-01,
         -1.0606e+00, -1.8736e-01, -2.9080e-01,  4.6675e-01, -2.5235e-01,
         -5.4608e-01, -4.7745e-03,  4.6424e-01, -5.7656e-01,  1.9483e-02,
          1.0685e-01,  9.0563e-03,  6.9486e-02,  9.6855e-02,  1.1325e-02,
          1.4638e-01, -1.3539e-01, -2.3293e-01, -5.4314e-02,  5.9781e-02,
         -1.9602e-01, -1.5889e-02,  1.0218e-01,  2.7075e-01,  1.0448e-01,
         -5.9849e-02,  6.2076e-02, -1.2926e-02,  1.0918e-01, -1.5819e-01,
          2.4218e-01,  1.1326e-01,  1.6552e-01,  2.0283e-01,  3.5571e-01,
          3.1838e-01,  9.5017e-02,  3.1492e-01,  2.2238e-01,  1.4216e-03,
         -2.7978e-01,  1.2119e-01, -3.1145e-02, -2.8797e-01, -1.1560e-01,
          4.6655e-02,  5.2538e-01,  4.1711e-02, -1.8453e-01,  3.1939e-01,
          1.3340e-01,  1.2545e-01,  1.6066e-01, -2.5745e-02,  1.3860e-01,
          4.3662e-01,  9.8322e-02, -6.0720e-02, -2.4270e-01,  3.4764e-01,
          2.7450e-02,  1.4084e-01,  1.8732e-01,  3.1220e-01, -2.7678e-01,
         -1.1961e-02, -1.3466e-02,  2.0964e-01,  4.6700e-01,  9.2243e-02,
          2.4248e-01, -2.4289e-01, -4.6294e-01, -6.4091e-02, -3.2619e-01,
          2.1260e-01, -2.3960e-01, -7.3806e-02, -2.9486e-01,  7.4013e-02,
         -1.9548e-01,  5.2279e-01, -3.3224e-01,  3.1272e-01, -2.6152e-01,
         -1.0250e-01, -2.5674e-01,  1.8620e-01,  1.3640e-01,  1.1845e-01,
         -4.1736e-01, -7.1600e-01,  2.5841e-01,  2.8660e-01, -2.5196e-01,
         -5.9120e-02,  2.3530e-01,  1.5140e-01,  2.5851e-01,  1.5035e-01,
          6.7254e-02,  5.3752e-03,  1.3410e-01,  1.9037e-01,  3.3718e-01,
         -1.3293e-01,  2.8831e-01,  4.6831e-02, -3.4756e-01, -1.5406e-02,
          1.4966e-01,  4.6713e-02,  1.1785e-01, -2.4543e-01,  2.0821e-02,
          9.4837e-02, -9.8680e-02, -3.6688e-02, -1.2790e-01, -7.0752e-02,
          4.2774e-02,  1.1999e-01,  3.6168e-01,  3.9225e-02,  2.2747e-01,
          3.8219e-02, -9.5821e-02, -2.5044e-01, -5.3641e-02,  1.4495e-01,
          2.0355e-01, -2.8778e-01, -1.2637e-01,  1.8357e-02, -1.0012e-01,
          3.0971e-01, -4.0123e-03,  3.0132e-01, -5.5262e-02, -1.1346e-01,
         -3.5757e-02,  1.6874e-01,  3.6536e-02,  4.9487e-02,  1.4772e-01,
          1.8641e-01]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
648000 特征值优化 tensor(0.9824, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5146e+00, -2.1322e-01, -1.1799e+00, -9.5647e-01,  2.4342e+00,
          4.1092e+00,  4.3414e-01, -2.1268e+00, -4.5659e-01,  5.0880e-01,
          5.3145e-01, -2.1491e-01, -7.0507e-01, -7.3937e-01,  3.3948e-01,
         -1.0523e+00, -1.9619e-01, -2.9949e-01,  4.8123e-01, -2.5176e-01,
         -5.4084e-01, -1.3356e-03,  4.6054e-01, -5.6678e-01,  1.7094e-02,
          1.1362e-01,  2.5211e-02,  5.6274e-02,  9.5063e-02,  5.9003e-03,
          1.5317e-01, -1.3380e-01, -2.4584e-01, -5.9993e-02,  6.5006e-02,
         -1.8844e-01, -1.1617e-02,  9.3385e-02,  2.7447e-01,  9.5549e-02,
         -5.9669e-02,  6.4006e-02, -1.5457e-02,  1.0841e-01, -1.5620e-01,
          2.4085e-01,  1.2294e-01,  1.7926e-01,  1.9508e-01,  3.5258e-01,
          3.1071e-01,  8.8816e-02,  3.2350e-01,  2.1981e-01, -2.5544e-03,
         -2.8162e-01,  1.1144e-01, -3.6099e-02, -2.9149e-01, -1.1195e-01,
          5.6399e-02,  5.2391e-01,  4.2488e-02, -1.6693e-01,  3.1013e-01,
          1.2839e-01,  1.2666e-01,  1.5464e-01, -4.7005e-02,  1.3839e-01,
          4.4029e-01,  9.6095e-02, -5.8828e-02, -2.3258e-01,  3.4397e-01,
          4.1067e-02,  1.4114e-01,  1.8618e-01,  2.9691e-01, -2.6490e-01,
         -4.0148e-03, -1.5023e-02,  2.1679e-01,  4.7245e-01,  8.8476e-02,
          2.5007e-01, -2.3528e-01, -4.7598e-01, -5.1066e-02, -3.2223e-01,
          2.0583e-01, -2.3906e-01, -6.4852e-02, -2.9712e-01,  7.2545e-02,
         -1.9479e-01,  5.2046e-01, -3.3847e-01,  3.1222e-01, -2.8872e-01,
         -8.9527e-02, -2.4831e-01,  2.0689e-01,  1.4232e-01,  1.0927e-01,
         -4.0398e-01, -7.0205e-01,  2.4748e-01,  2.7681e-01, -2.5721e-01,
         -6.4974e-02,  2.2849e-01,  1.4080e-01,  2.6070e-01,  1.5386e-01,
          6.9546e-02, -4.1626e-03,  1.3879e-01,  1.9436e-01,  3.4312e-01,
         -1.4432e-01,  2.9875e-01,  3.5068e-02, -3.5652e-01, -1.8814e-02,
          1.5048e-01,  4.8717e-02,  1.1847e-01, -2.4483e-01,  1.7837e-02,
          9.7309e-02, -9.8693e-02, -3.4184e-02, -1.2723e-01, -8.1639e-02,
          5.3318e-02,  1.3402e-01,  3.5620e-01,  2.2763e-02,  2.3470e-01,
          5.0438e-02, -8.6784e-02, -2.6109e-01, -7.5380e-02,  1.3366e-01,
          2.0223e-01, -2.9477e-01, -1.3597e-01,  2.9250e-02, -1.0079e-01,
          2.9201e-01,  2.4324e-03,  3.1405e-01, -4.9607e-02, -1.0789e-01,
         -3.8023e-02,  1.7963e-01,  4.3229e-02,  3.1341e-02,  1.6013e-01,
          1.9225e-01]], device='cuda:0') tensor(0.2185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
649000 特征值优化 tensor(0.9847, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5050e+00, -2.4075e-01, -1.1742e+00, -9.5129e-01,  2.4305e+00,
          4.1239e+00,  4.3253e-01, -2.1333e+00, -4.6113e-01,  5.1384e-01,
          5.2658e-01, -2.0337e-01, -7.0056e-01, -7.5475e-01,  3.2495e-01,
         -1.0588e+00, -2.1098e-01, -2.8549e-01,  4.7188e-01, -2.6634e-01,
         -5.2573e-01,  1.2414e-03,  4.5901e-01, -5.6768e-01,  2.5598e-02,
          8.9252e-02,  1.7926e-02,  6.7759e-02,  8.8658e-02,  7.8613e-03,
          1.5459e-01, -1.1690e-01, -2.2774e-01, -6.8608e-02,  7.6888e-02,
         -1.9179e-01, -2.1401e-02,  1.1837e-01,  2.6204e-01,  1.0039e-01,
         -4.6649e-02,  6.3383e-02, -1.3696e-02,  1.1004e-01, -1.5559e-01,
          2.3819e-01,  1.0160e-01,  1.5823e-01,  1.9923e-01,  3.3710e-01,
          3.2216e-01,  9.8413e-02,  3.1261e-01,  2.2416e-01,  7.3743e-03,
         -2.8266e-01,  1.1844e-01, -3.0311e-02, -2.9080e-01, -1.1327e-01,
          5.4121e-02,  5.2516e-01,  2.3835e-02, -1.6814e-01,  3.1746e-01,
          1.3248e-01,  1.3614e-01,  1.6269e-01, -2.1744e-02,  1.4569e-01,
          4.3750e-01,  1.0791e-01, -5.1407e-02, -2.3783e-01,  3.5543e-01,
          2.8481e-02,  1.3300e-01,  2.0440e-01,  3.1632e-01, -2.8113e-01,
         -1.6844e-02, -1.3773e-02,  2.0615e-01,  4.7603e-01,  1.0442e-01,
          2.3602e-01, -2.2436e-01, -4.7215e-01, -6.8343e-02, -3.3718e-01,
          2.1131e-01, -2.4079e-01, -7.7015e-02, -2.8510e-01,  7.7218e-02,
         -1.9695e-01,  5.2320e-01, -3.3301e-01,  2.9922e-01, -2.6994e-01,
         -1.0585e-01, -2.4496e-01,  2.0440e-01,  1.3635e-01,  1.2345e-01,
         -4.1661e-01, -7.1406e-01,  2.4936e-01,  2.7503e-01, -2.5016e-01,
         -5.7602e-02,  2.4252e-01,  1.5098e-01,  2.6598e-01,  1.4392e-01,
          7.6880e-02,  1.3303e-02,  1.3814e-01,  1.8123e-01,  3.3279e-01,
         -1.4269e-01,  2.8904e-01,  3.4966e-02, -3.5605e-01, -1.4066e-02,
          1.5380e-01,  4.2013e-02,  1.1786e-01, -2.4182e-01,  1.2290e-02,
          9.1867e-02, -9.5613e-02, -4.1670e-02, -1.3780e-01, -6.6606e-02,
          4.5228e-02,  1.2739e-01,  3.5154e-01,  3.2162e-02,  2.1834e-01,
          3.6234e-02, -1.0776e-01, -2.5884e-01, -5.2013e-02,  1.5416e-01,
          2.1026e-01, -2.8532e-01, -1.3896e-01,  3.4862e-02, -9.5764e-02,
          3.0296e-01,  1.4016e-02,  3.1167e-01, -6.3840e-02, -9.9214e-02,
         -2.0956e-02,  1.6039e-01,  2.5133e-02,  5.0801e-02,  1.4763e-01,
          1.9851e-01]], device='cuda:0') tensor(0.2378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
650000 特征值优化 tensor(1.0118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4847e+00, -2.4344e-01, -1.1903e+00, -9.5104e-01,  2.4559e+00,
          4.1334e+00,  4.3615e-01, -2.1340e+00, -4.6849e-01,  5.1200e-01,
          5.4190e-01, -2.1271e-01, -7.0861e-01, -7.5136e-01,  3.2594e-01,
         -1.0570e+00, -1.9278e-01, -2.9378e-01,  4.7361e-01, -2.5609e-01,
         -5.2619e-01, -8.1969e-03,  4.5563e-01, -5.5668e-01,  2.7611e-02,
          1.0240e-01,  1.2150e-02,  6.9979e-02,  9.8607e-02,  8.0587e-03,
          1.5664e-01, -1.2532e-01, -2.1838e-01, -5.6591e-02,  8.2841e-02,
         -1.8993e-01, -2.9591e-04,  9.9705e-02,  2.6368e-01,  1.0904e-01,
         -6.4672e-02,  6.5248e-02, -1.5561e-02,  1.0730e-01, -1.5512e-01,
          2.4664e-01,  1.0441e-01,  1.5981e-01,  2.0685e-01,  3.4467e-01,
          3.2085e-01,  8.5229e-02,  3.2220e-01,  2.2225e-01,  5.9925e-03,
         -2.8673e-01,  1.2428e-01, -3.7378e-02, -2.9659e-01, -1.2234e-01,
          4.6952e-02,  5.2115e-01,  2.8792e-02, -1.8063e-01,  3.2459e-01,
          1.4186e-01,  1.3138e-01,  1.5930e-01, -3.5516e-02,  1.4564e-01,
          4.2865e-01,  9.7374e-02, -6.3560e-02, -2.3353e-01,  3.5065e-01,
          2.4789e-02,  1.4035e-01,  1.8899e-01,  3.1522e-01, -2.7784e-01,
         -1.8576e-02, -1.3037e-02,  2.0304e-01,  4.6635e-01,  1.0303e-01,
          2.3843e-01, -2.4117e-01, -4.7284e-01, -4.9631e-02, -3.4260e-01,
          2.0576e-01, -2.3976e-01, -6.7881e-02, -2.8298e-01,  7.2060e-02,
         -1.9763e-01,  5.2834e-01, -3.3790e-01,  2.9817e-01, -2.6268e-01,
         -1.1427e-01, -2.5119e-01,  1.9572e-01,  1.3884e-01,  1.1257e-01,
         -4.2180e-01, -7.2877e-01,  2.6343e-01,  2.8299e-01, -2.5042e-01,
         -6.2517e-02,  2.2970e-01,  1.5288e-01,  2.5874e-01,  1.3937e-01,
          7.3691e-02,  9.8701e-03,  1.2722e-01,  1.8668e-01,  3.4089e-01,
         -1.3446e-01,  2.9275e-01,  4.8189e-02, -3.4977e-01, -1.4051e-02,
          1.4542e-01,  4.3669e-02,  1.1826e-01, -2.4280e-01,  1.7121e-02,
          9.6771e-02, -9.6908e-02, -3.1298e-02, -1.3054e-01, -7.3114e-02,
          3.9516e-02,  1.2757e-01,  3.6998e-01,  4.2202e-02,  2.2037e-01,
          3.3894e-02, -1.0226e-01, -2.4500e-01, -5.4287e-02,  1.4812e-01,
          2.0573e-01, -2.8148e-01, -1.2299e-01,  1.1058e-02, -1.0560e-01,
          3.1230e-01,  5.0495e-03,  3.0398e-01, -5.9336e-02, -1.0965e-01,
         -3.0182e-02,  1.5657e-01,  3.1963e-02,  5.8213e-02,  1.4045e-01,
          1.8779e-01]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
651000 特征值优化 tensor(1.0358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4629e+00, -2.3844e-01, -1.1839e+00, -9.6406e-01,  2.4856e+00,
          4.1367e+00,  4.3777e-01, -2.1229e+00, -4.6181e-01,  5.1724e-01,
          5.4142e-01, -2.0793e-01, -7.0883e-01, -7.2860e-01,  3.4089e-01,
         -1.0566e+00, -1.9612e-01, -2.9291e-01,  4.7176e-01, -2.5438e-01,
         -5.2065e-01, -4.8605e-03,  4.7010e-01, -5.5631e-01,  1.7525e-02,
          1.0741e-01,  3.0639e-02,  7.0547e-02,  1.0038e-01,  1.0768e-02,
          1.5930e-01, -1.3002e-01, -2.3727e-01, -4.3817e-02,  7.9133e-02,
         -1.9114e-01, -9.4059e-03,  9.5525e-02,  2.7114e-01,  1.1797e-01,
         -6.3100e-02,  6.6073e-02, -1.6086e-02,  1.0848e-01, -1.6202e-01,
          2.3712e-01,  1.2113e-01,  1.6990e-01,  2.0702e-01,  3.3823e-01,
          3.1874e-01,  9.0652e-02,  3.2371e-01,  2.1650e-01,  6.6956e-03,
         -2.7976e-01,  1.2312e-01, -3.4819e-02, -2.8896e-01, -1.1468e-01,
          5.4705e-02,  5.2038e-01,  4.0422e-02, -1.6098e-01,  3.1732e-01,
          1.2302e-01,  1.4370e-01,  1.5437e-01, -3.8528e-02,  1.4530e-01,
          4.3680e-01,  9.9468e-02, -6.6080e-02, -2.2142e-01,  3.6125e-01,
          4.9904e-02,  1.2106e-01,  1.9150e-01,  3.0634e-01, -2.6886e-01,
         -1.1478e-02, -1.2169e-02,  2.1406e-01,  4.7284e-01,  1.0794e-01,
          2.4498e-01, -2.2373e-01, -4.7259e-01, -5.7568e-02, -3.2890e-01,
          2.1003e-01, -2.5111e-01, -7.0872e-02, -3.0102e-01,  6.6613e-02,
         -1.9659e-01,  5.2621e-01, -3.6277e-01,  3.0509e-01, -2.7137e-01,
         -1.0070e-01, -2.5468e-01,  2.0743e-01,  1.3190e-01,  1.0476e-01,
         -4.0228e-01, -7.1110e-01,  2.5590e-01,  2.8794e-01, -2.5426e-01,
         -6.2601e-02,  2.3104e-01,  1.4540e-01,  2.5466e-01,  1.4529e-01,
          7.6011e-02,  3.3037e-03,  1.3477e-01,  1.9217e-01,  3.3956e-01,
         -1.3479e-01,  2.9485e-01,  4.3215e-02, -3.5868e-01, -1.6628e-02,
          1.4942e-01,  4.4218e-02,  1.2199e-01, -2.3998e-01,  1.6553e-02,
          9.6411e-02, -9.5885e-02, -3.0486e-02, -1.3472e-01, -7.4095e-02,
          4.0955e-02,  1.1661e-01,  3.6457e-01,  3.3088e-02,  2.2872e-01,
          4.1386e-02, -9.9719e-02, -2.7751e-01, -5.6513e-02,  1.3298e-01,
          2.0060e-01, -2.9189e-01, -1.3529e-01,  3.0170e-02, -1.0084e-01,
          2.8494e-01,  5.5645e-03,  3.1351e-01, -6.9182e-02, -1.1045e-01,
         -4.5767e-02,  1.7035e-01,  3.9599e-02,  3.8788e-02,  1.5021e-01,
          1.9111e-01]], device='cuda:0') tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
652000 特征值优化 tensor(1.0188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4658e+00, -2.4174e-01, -1.1739e+00, -9.6252e-01,  2.4761e+00,
          4.1448e+00,  4.4695e-01, -2.1303e+00, -4.7043e-01,  5.1755e-01,
          5.4325e-01, -2.0978e-01, -7.1384e-01, -7.4326e-01,  3.4280e-01,
         -1.0524e+00, -1.8624e-01, -2.8441e-01,  4.8622e-01, -2.5324e-01,
         -5.1508e-01, -4.1205e-03,  4.6599e-01, -5.4513e-01,  2.4311e-02,
          1.0317e-01,  2.4580e-02,  6.2630e-02,  1.0251e-01,  2.8803e-03,
          1.5629e-01, -1.2961e-01, -2.3828e-01, -4.5515e-02,  8.4852e-02,
         -1.8534e-01, -1.3788e-02,  9.5965e-02,  2.6686e-01,  1.0505e-01,
         -6.7750e-02,  6.5134e-02, -1.3194e-02,  1.0473e-01, -1.5571e-01,
          2.4493e-01,  1.0767e-01,  1.6868e-01,  2.1228e-01,  3.3594e-01,
          3.1539e-01,  9.1070e-02,  3.2503e-01,  2.1543e-01,  8.9942e-03,
         -2.8690e-01,  1.2516e-01, -3.8211e-02, -2.9582e-01, -1.2390e-01,
          5.1903e-02,  5.1786e-01,  2.8040e-02, -1.7339e-01,  3.1847e-01,
          1.2642e-01,  1.2430e-01,  1.6029e-01, -4.0215e-02,  1.3836e-01,
          4.3803e-01,  1.0579e-01, -6.8263e-02, -2.2142e-01,  3.4762e-01,
          4.4752e-02,  1.4649e-01,  1.8508e-01,  3.1279e-01, -2.7048e-01,
         -1.0372e-02, -1.5046e-02,  2.1215e-01,  4.7005e-01,  1.0646e-01,
          2.3734e-01, -2.3970e-01, -4.6961e-01, -5.0730e-02, -3.3107e-01,
          1.9990e-01, -2.4638e-01, -6.5173e-02, -2.8460e-01,  6.7417e-02,
         -1.9976e-01,  5.2877e-01, -3.5225e-01,  3.1785e-01, -2.8640e-01,
         -1.2030e-01, -2.5867e-01,  2.1194e-01,  1.3705e-01,  1.1616e-01,
         -4.0736e-01, -7.0765e-01,  2.6364e-01,  2.9045e-01, -2.5445e-01,
         -6.3580e-02,  2.2710e-01,  1.4801e-01,  2.4421e-01,  1.4352e-01,
          7.2405e-02,  4.4436e-03,  1.3006e-01,  1.8884e-01,  3.3261e-01,
         -1.4015e-01,  2.8770e-01,  5.1540e-02, -3.5274e-01, -1.0452e-02,
          1.4994e-01,  4.6579e-02,  1.1886e-01, -2.4678e-01,  1.1969e-02,
          9.9518e-02, -9.7638e-02, -3.5840e-02, -1.3524e-01, -6.6079e-02,
          6.4204e-02,  1.3540e-01,  3.4932e-01,  1.5427e-02,  2.2908e-01,
          6.1624e-02, -9.3566e-02, -2.6053e-01, -6.3411e-02,  1.5052e-01,
          2.0205e-01, -2.8546e-01, -1.3855e-01,  2.1550e-02, -9.8028e-02,
          2.9194e-01,  2.1715e-03,  3.0994e-01, -5.7352e-02, -1.1170e-01,
         -3.0152e-02,  1.6951e-01,  3.2525e-02,  4.2227e-02,  1.4200e-01,
          1.8524e-01]], device='cuda:0') tensor(0.2553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
653000 特征值优化 tensor(0.9777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4581, -0.2667, -1.1861, -0.9569,  2.4905,  4.1452,  0.4383, -2.1337,
         -0.4580,  0.5193,  0.5357, -0.1974, -0.7014, -0.7474,  0.3309, -1.0502,
         -0.2181, -0.2885,  0.4783, -0.2634, -0.4884, -0.0134,  0.4651, -0.5294,
          0.0364,  0.0809,  0.0095,  0.0766,  0.0870,  0.0136,  0.1591, -0.1139,
         -0.2161, -0.0487,  0.0929, -0.1894, -0.0147,  0.1029,  0.2548,  0.1173,
         -0.0544,  0.0620, -0.0129,  0.1047, -0.1619,  0.2455,  0.1072,  0.1645,
          0.2159,  0.3278,  0.3232,  0.0984,  0.3304,  0.2245,  0.0183, -0.2867,
          0.1202, -0.0291, -0.2918, -0.1219,  0.0656,  0.5253,  0.0280, -0.1686,
          0.3130,  0.1395,  0.1406,  0.1582, -0.0351,  0.1551,  0.4321,  0.0999,
         -0.0609, -0.2278,  0.3642,  0.0300,  0.1283,  0.2017,  0.3201, -0.2870,
         -0.0225, -0.0220,  0.2098,  0.4761,  0.1075,  0.2312, -0.2271, -0.4821,
         -0.0469, -0.3482,  0.2097, -0.2269, -0.0641, -0.2689,  0.0761, -0.1944,
          0.5263, -0.3459,  0.3002, -0.2521, -0.1307, -0.2533,  0.2036,  0.1336,
          0.1148, -0.4136, -0.7240,  0.2599,  0.2667, -0.2508, -0.0634,  0.2382,
          0.1439,  0.2619,  0.1416,  0.0852,  0.0159,  0.1363,  0.1837,  0.3406,
         -0.1260,  0.2946,  0.0259, -0.3541, -0.0072,  0.1500,  0.0355,  0.1194,
         -0.2325,  0.0128,  0.0923, -0.0951, -0.0360, -0.1324, -0.0682,  0.0281,
          0.1266,  0.3777,  0.0488,  0.2177,  0.0260, -0.1099, -0.2443, -0.0502,
          0.1568,  0.2099, -0.2776, -0.1223,  0.0136, -0.0976,  0.3206,  0.0088,
          0.3080, -0.0669, -0.1012, -0.0349,  0.1521,  0.0239,  0.0666,  0.1406,
          0.2030]], device='cuda:0') tensor(0.2167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
654000 特征值优化 tensor(1.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4247e+00, -2.4763e-01, -1.1732e+00, -9.6009e-01,  2.4908e+00,
          4.1351e+00,  4.3399e-01, -2.1212e+00, -4.4696e-01,  5.0066e-01,
          5.4666e-01, -2.0993e-01, -7.0782e-01, -7.3490e-01,  3.5620e-01,
         -1.0548e+00, -1.9486e-01, -2.8827e-01,  4.8767e-01, -2.5450e-01,
         -5.0223e-01, -5.8977e-03,  4.6558e-01, -5.4698e-01,  7.9477e-03,
          1.0569e-01,  2.2474e-02,  6.8601e-02,  1.1662e-01,  9.0581e-03,
          1.6505e-01, -1.3244e-01, -2.1991e-01, -5.3221e-02,  9.1676e-02,
         -1.9080e-01, -6.3380e-03,  9.8658e-02,  2.6396e-01,  1.0279e-01,
         -6.4448e-02,  6.6387e-02, -2.0477e-02,  1.1358e-01, -1.6040e-01,
          2.4388e-01,  1.2395e-01,  1.7417e-01,  2.1908e-01,  3.2849e-01,
          3.2325e-01,  8.9726e-02,  3.2308e-01,  2.1041e-01,  1.8611e-02,
         -2.8488e-01,  1.1629e-01, -3.5990e-02, -2.9266e-01, -1.2324e-01,
          5.5602e-02,  5.1587e-01,  3.4104e-02, -1.7202e-01,  3.2133e-01,
          1.1535e-01,  1.2622e-01,  1.5828e-01, -5.0988e-02,  1.3909e-01,
          4.3215e-01,  9.9570e-02, -5.9790e-02, -2.2736e-01,  3.4912e-01,
          5.2840e-02,  1.4045e-01,  1.8269e-01,  3.0832e-01, -2.6810e-01,
         -7.7957e-03, -1.4839e-02,  2.1783e-01,  4.7041e-01,  1.1357e-01,
          2.4644e-01, -2.3452e-01, -4.7781e-01, -5.1929e-02, -3.2654e-01,
          2.0043e-01, -2.5699e-01, -7.2219e-02, -2.8639e-01,  6.9701e-02,
         -1.9527e-01,  5.3710e-01, -3.5722e-01,  2.8651e-01, -2.7766e-01,
         -1.1154e-01, -2.5327e-01,  2.0957e-01,  1.3620e-01,  1.0432e-01,
         -3.9998e-01, -7.1487e-01,  2.6613e-01,  2.7994e-01, -2.5278e-01,
         -6.5130e-02,  2.3229e-01,  1.4576e-01,  2.3729e-01,  1.4490e-01,
          8.1215e-02, -6.0191e-03,  1.3557e-01,  2.0006e-01,  3.3533e-01,
         -1.4124e-01,  2.9383e-01,  5.0109e-02, -3.5079e-01, -7.5627e-03,
          1.4876e-01,  4.1199e-02,  1.1607e-01, -2.5576e-01,  1.8667e-02,
          9.3402e-02, -9.7355e-02, -3.3026e-02, -1.3374e-01, -6.8369e-02,
          5.2300e-02,  1.3369e-01,  3.5301e-01,  8.3765e-03,  2.2989e-01,
          5.9962e-02, -9.2526e-02, -2.6929e-01, -6.1261e-02,  1.3830e-01,
          2.0563e-01, -2.9157e-01, -1.4549e-01,  3.6436e-02, -9.8057e-02,
          2.8898e-01, -2.6089e-03,  3.1153e-01, -5.2042e-02, -1.2125e-01,
         -3.5793e-02,  1.7035e-01,  3.4078e-02,  5.1249e-02,  1.4628e-01,
          1.8455e-01]], device='cuda:0') tensor(0.2111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
655000 特征值优化 tensor(0.9905, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4319e+00, -2.4836e-01, -1.1819e+00, -9.5503e-01,  2.5057e+00,
          4.1553e+00,  4.4093e-01, -2.1262e+00, -4.4982e-01,  4.9915e-01,
          5.4933e-01, -1.9516e-01, -7.0378e-01, -7.2279e-01,  3.5632e-01,
         -1.0475e+00, -1.9662e-01, -2.8982e-01,  4.7635e-01, -2.4546e-01,
         -4.9418e-01, -1.4363e-02,  4.7598e-01, -5.3320e-01,  8.3569e-03,
          9.7155e-02,  3.0205e-02,  6.0358e-02,  1.0724e-01,  2.9626e-03,
          1.7390e-01, -1.3301e-01, -2.2401e-01, -4.0948e-02,  9.3747e-02,
         -1.8774e-01, -8.7555e-03,  9.3458e-02,  2.6298e-01,  1.0632e-01,
         -5.9404e-02,  6.4617e-02, -1.5047e-02,  1.0858e-01, -1.6302e-01,
          2.3672e-01,  1.2634e-01,  1.8999e-01,  2.2074e-01,  3.1855e-01,
          3.2481e-01,  8.7345e-02,  3.3131e-01,  2.2063e-01,  1.5949e-02,
         -2.8629e-01,  1.1518e-01, -2.9298e-02, -2.8321e-01, -1.2768e-01,
          6.4836e-02,  5.0927e-01,  3.5201e-02, -1.6216e-01,  3.1200e-01,
          1.2798e-01,  1.2630e-01,  1.5915e-01, -6.1281e-02,  1.3674e-01,
          4.3726e-01,  9.5999e-02, -5.8577e-02, -2.0941e-01,  3.5594e-01,
          5.4421e-02,  1.3082e-01,  1.8268e-01,  3.0698e-01, -2.6848e-01,
         -9.7613e-03, -2.2061e-02,  2.1318e-01,  4.7948e-01,  1.0334e-01,
          2.4849e-01, -2.2687e-01, -4.7814e-01, -2.9834e-02, -3.2176e-01,
          2.0666e-01, -2.4701e-01, -6.3738e-02, -2.8479e-01,  7.3123e-02,
         -1.9670e-01,  5.3106e-01, -3.6406e-01,  3.1601e-01, -2.7981e-01,
         -1.1737e-01, -2.5934e-01,  2.1430e-01,  1.4397e-01,  1.0575e-01,
         -3.9179e-01, -7.1066e-01,  2.5473e-01,  2.7988e-01, -2.5518e-01,
         -6.6837e-02,  2.2993e-01,  1.4155e-01,  2.4683e-01,  1.5116e-01,
          7.3499e-02, -6.2837e-04,  1.4744e-01,  1.9264e-01,  3.3865e-01,
         -1.4146e-01,  2.9165e-01,  4.3332e-02, -3.4855e-01, -8.1866e-03,
          1.5290e-01,  3.9519e-02,  1.1615e-01, -2.4869e-01,  2.0444e-02,
          9.7561e-02, -9.4284e-02, -2.9505e-02, -1.3527e-01, -6.8877e-02,
          5.5568e-02,  1.2247e-01,  3.6055e-01,  1.8251e-02,  2.1536e-01,
          5.2695e-02, -8.5073e-02, -2.6206e-01, -7.8875e-02,  1.3572e-01,
          2.1335e-01, -2.9649e-01, -1.4075e-01,  2.7398e-02, -1.0184e-01,
          2.8963e-01,  1.4177e-02,  3.1139e-01, -5.5280e-02, -1.0731e-01,
         -3.4788e-02,  1.7425e-01,  3.4643e-02,  3.4811e-02,  1.4739e-01,
          1.9829e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
656000 特征值优化 tensor(0.9995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4177e+00, -2.5936e-01, -1.1883e+00, -9.4645e-01,  2.5097e+00,
          4.1560e+00,  4.3535e-01, -2.1325e+00, -4.6126e-01,  4.9816e-01,
          5.5531e-01, -2.0067e-01, -7.0843e-01, -7.3806e-01,  3.4829e-01,
         -1.0558e+00, -1.9935e-01, -2.7784e-01,  4.8426e-01, -2.6038e-01,
         -4.7764e-01, -9.8988e-03,  4.8065e-01, -5.2954e-01,  8.0214e-03,
          1.0007e-01,  1.5044e-02,  6.6801e-02,  1.0662e-01,  1.2345e-02,
          1.7280e-01, -1.2928e-01, -2.1624e-01, -4.5638e-02,  1.0274e-01,
         -1.8938e-01, -7.0401e-03,  1.0507e-01,  2.5355e-01,  1.0204e-01,
         -6.6149e-02,  6.4465e-02, -1.4026e-02,  1.1006e-01, -1.6658e-01,
          2.3767e-01,  1.1323e-01,  1.8118e-01,  2.1810e-01,  3.1846e-01,
          3.2629e-01,  8.0260e-02,  3.2513e-01,  2.2028e-01,  1.9684e-02,
         -2.8954e-01,  1.2159e-01, -3.2013e-02, -2.9160e-01, -1.3070e-01,
          5.3356e-02,  5.0717e-01,  2.4195e-02, -1.7583e-01,  3.2658e-01,
          1.3048e-01,  1.3614e-01,  1.6258e-01, -5.8892e-02,  1.4124e-01,
          4.3697e-01,  9.8373e-02, -6.0026e-02, -2.2239e-01,  3.5141e-01,
          4.0078e-02,  1.4145e-01,  1.8407e-01,  3.1263e-01, -2.7806e-01,
         -1.8343e-02, -1.9715e-02,  2.0903e-01,  4.6921e-01,  1.0593e-01,
          2.4018e-01, -2.2837e-01, -4.8358e-01, -5.0612e-02, -3.4227e-01,
          2.0546e-01, -2.4783e-01, -8.0604e-02, -2.8104e-01,  7.4301e-02,
         -1.9576e-01,  5.3350e-01, -3.5152e-01,  3.0133e-01, -2.7002e-01,
         -1.2114e-01, -2.6101e-01,  2.1053e-01,  1.4344e-01,  1.0881e-01,
         -4.0875e-01, -7.1218e-01,  2.6882e-01,  2.6790e-01, -2.5080e-01,
         -6.4806e-02,  2.4234e-01,  1.4803e-01,  2.4079e-01,  1.4160e-01,
          7.9642e-02,  2.1570e-03,  1.3287e-01,  1.9225e-01,  3.3771e-01,
         -1.3426e-01,  2.8864e-01,  5.0351e-02, -3.4519e-01, -4.8622e-03,
          1.5189e-01,  3.7394e-02,  1.1782e-01, -2.5627e-01,  2.0208e-02,
          9.2870e-02, -9.6353e-02, -3.0377e-02, -1.3447e-01, -6.6864e-02,
          3.9579e-02,  1.2225e-01,  3.6208e-01,  2.4556e-02,  2.1661e-01,
          4.6664e-02, -1.0230e-01, -2.5030e-01, -6.7739e-02,  1.4311e-01,
          2.0322e-01, -2.9046e-01, -1.3576e-01,  2.9470e-02, -1.0798e-01,
          2.9933e-01,  6.7796e-03,  3.0712e-01, -5.5497e-02, -1.0845e-01,
         -3.0792e-02,  1.6406e-01,  2.9424e-02,  5.7818e-02,  1.3954e-01,
          1.9099e-01]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
657000 特征值优化 tensor(1.0268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4076e+00, -2.6216e-01, -1.1774e+00, -9.5952e-01,  2.5145e+00,
          4.1675e+00,  4.3935e-01, -2.1243e+00, -4.5849e-01,  5.0437e-01,
          5.5780e-01, -1.8954e-01, -7.0883e-01, -7.3960e-01,  3.4566e-01,
         -1.0511e+00, -1.9492e-01, -2.8549e-01,  4.8569e-01, -2.5696e-01,
         -4.6812e-01, -1.5656e-02,  4.7116e-01, -5.2154e-01,  2.5362e-02,
          9.2933e-02,  9.0271e-03,  6.5510e-02,  1.1078e-01,  9.5446e-03,
          1.7788e-01, -1.2755e-01, -1.9994e-01, -4.8203e-02,  1.0580e-01,
         -1.8834e-01,  8.8925e-04,  1.0586e-01,  2.4773e-01,  1.0684e-01,
         -6.5483e-02,  6.4327e-02, -1.4541e-02,  1.0708e-01, -1.6000e-01,
          2.4585e-01,  1.1198e-01,  1.6524e-01,  2.1784e-01,  3.1176e-01,
          3.3305e-01,  7.1913e-02,  3.1677e-01,  2.1591e-01,  2.2906e-02,
         -2.7272e-01,  1.1824e-01, -4.3030e-02, -2.8991e-01, -1.3005e-01,
          4.5594e-02,  5.0599e-01,  2.2502e-02, -1.7128e-01,  3.2070e-01,
          1.4166e-01,  1.3459e-01,  1.6194e-01, -5.0810e-02,  1.4544e-01,
          4.3380e-01,  9.8003e-02, -6.2135e-02, -2.2535e-01,  3.5828e-01,
          3.0420e-02,  1.3865e-01,  1.8918e-01,  3.2418e-01, -2.8329e-01,
         -1.8387e-02, -1.9636e-02,  2.0498e-01,  4.6789e-01,  1.2004e-01,
          2.4509e-01, -2.4064e-01, -4.8126e-01, -4.2851e-02, -3.5255e-01,
          2.0251e-01, -2.5149e-01, -6.8315e-02, -2.7741e-01,  7.2409e-02,
         -1.9680e-01,  5.3737e-01, -3.6200e-01,  2.9439e-01, -2.5986e-01,
         -1.2881e-01, -2.6166e-01,  2.0431e-01,  1.4949e-01,  1.0475e-01,
         -4.0720e-01, -7.3160e-01,  2.7817e-01,  2.7367e-01, -2.5218e-01,
         -6.6865e-02,  2.3743e-01,  1.5049e-01,  2.5028e-01,  1.3426e-01,
          8.1726e-02,  1.4540e-02,  1.3078e-01,  1.8489e-01,  3.4145e-01,
         -1.2111e-01,  2.9017e-01,  5.4282e-02, -3.4940e-01, -3.2321e-03,
          1.4640e-01,  3.6113e-02,  1.1706e-01, -2.4884e-01,  2.5611e-02,
          9.0549e-02, -9.9463e-02, -3.1153e-02, -1.3508e-01, -6.3277e-02,
          3.6953e-02,  1.3156e-01,  3.7156e-01,  2.6649e-02,  2.0810e-01,
          3.9062e-02, -1.1070e-01, -2.3480e-01, -5.5280e-02,  1.5084e-01,
          2.1132e-01, -2.8116e-01, -1.3037e-01,  3.1829e-03, -1.1161e-01,
          3.1213e-01,  2.9657e-03,  3.1439e-01, -6.0502e-02, -1.1318e-01,
         -3.0456e-02,  1.4663e-01,  2.7709e-02,  5.9994e-02,  1.3375e-01,
          1.8403e-01]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
658000 特征值优化 tensor(1.0138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3876e+00, -2.3897e-01, -1.1852e+00, -9.6450e-01,  2.5216e+00,
          4.1295e+00,  4.4139e-01, -2.1149e+00, -4.4787e-01,  5.1759e-01,
          5.4446e-01, -1.8489e-01, -7.0982e-01, -7.3374e-01,  3.5470e-01,
         -1.0544e+00, -2.0731e-01, -2.9568e-01,  5.0237e-01, -2.5656e-01,
         -4.5660e-01, -1.2017e-02,  4.6927e-01, -5.1866e-01,  3.7408e-03,
          1.0720e-01,  1.1400e-02,  7.4840e-02,  1.0443e-01,  1.4232e-02,
          1.6868e-01, -1.2920e-01, -2.2328e-01, -4.5439e-02,  1.0583e-01,
         -1.8890e-01, -9.0539e-03,  1.0001e-01,  2.4840e-01,  1.1023e-01,
         -6.0680e-02,  6.5937e-02, -1.4700e-02,  1.0868e-01, -1.6021e-01,
          2.4721e-01,  1.1940e-01,  1.6927e-01,  2.1866e-01,  3.1587e-01,
          3.2136e-01,  8.6254e-02,  3.3500e-01,  2.0583e-01,  2.4935e-02,
         -2.8657e-01,  1.2634e-01, -2.8949e-02, -2.9466e-01, -1.2532e-01,
          6.1139e-02,  5.0535e-01,  3.6990e-02, -1.5926e-01,  3.1961e-01,
          1.2968e-01,  1.4041e-01,  1.5913e-01, -5.7998e-02,  1.4457e-01,
          4.3511e-01,  9.6925e-02, -6.7233e-02, -2.1956e-01,  3.5937e-01,
          4.4163e-02,  1.2357e-01,  1.8147e-01,  3.1480e-01, -2.7448e-01,
         -1.0801e-02, -6.3091e-03,  2.0924e-01,  4.7366e-01,  1.2762e-01,
          2.4721e-01, -2.1657e-01, -4.8050e-01, -4.6838e-02, -3.3444e-01,
          2.0620e-01, -2.5878e-01, -8.0505e-02, -2.9529e-01,  7.1231e-02,
         -2.0093e-01,  5.3879e-01, -3.6190e-01,  2.7544e-01, -2.6462e-01,
         -1.0780e-01, -2.5592e-01,  2.1933e-01,  1.3567e-01,  1.0396e-01,
         -3.8028e-01, -7.0321e-01,  2.6623e-01,  2.6651e-01, -2.6125e-01,
         -6.1869e-02,  2.4444e-01,  1.4769e-01,  2.4817e-01,  1.3812e-01,
          7.5767e-02,  3.5000e-03,  1.2948e-01,  1.9396e-01,  3.3783e-01,
         -1.2694e-01,  2.9120e-01,  4.6017e-02, -3.5480e-01, -4.1904e-03,
          1.4307e-01,  3.3684e-02,  1.2161e-01, -2.5217e-01,  2.0556e-02,
          9.1968e-02, -9.9213e-02, -2.7779e-02, -1.4198e-01, -6.6076e-02,
          4.1615e-02,  1.2506e-01,  3.6126e-01,  1.9131e-02,  2.0988e-01,
          5.0113e-02, -1.0120e-01, -2.6765e-01, -6.2782e-02,  1.4312e-01,
          2.0937e-01, -2.8524e-01, -1.4324e-01,  2.4159e-02, -1.0696e-01,
          3.0003e-01, -2.1925e-03,  3.1859e-01, -6.0167e-02, -1.0260e-01,
         -3.8620e-02,  1.6540e-01,  3.5546e-02,  3.8200e-02,  1.3810e-01,
          1.9322e-01]], device='cuda:0') tensor(0.2231, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
659000 特征值优化 tensor(0.9906, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3653e+00, -2.5151e-01, -1.1717e+00, -9.5284e-01,  2.5336e+00,
          4.1332e+00,  4.3961e-01, -2.1104e+00, -4.4340e-01,  5.0446e-01,
          5.4751e-01, -1.9322e-01, -7.1569e-01, -7.4517e-01,  3.5138e-01,
         -1.0520e+00, -2.0878e-01, -2.8737e-01,  5.0132e-01, -2.5015e-01,
         -4.6599e-01, -1.3277e-02,  4.7670e-01, -5.1072e-01,  8.0010e-03,
          1.0622e-01,  3.5788e-03,  6.9827e-02,  1.1162e-01,  1.6548e-02,
          1.8060e-01, -1.3436e-01, -2.1439e-01, -4.0830e-02,  1.1052e-01,
         -1.8662e-01, -1.1511e-02,  1.0249e-01,  2.5049e-01,  1.0323e-01,
         -6.6136e-02,  6.3996e-02, -1.7304e-02,  1.1344e-01, -1.6410e-01,
          2.4463e-01,  1.2656e-01,  1.6988e-01,  2.1381e-01,  3.1178e-01,
          3.3171e-01,  8.4805e-02,  3.3299e-01,  1.9970e-01,  3.0181e-02,
         -2.7912e-01,  1.2578e-01, -3.3156e-02, -2.9982e-01, -1.2899e-01,
          6.3136e-02,  4.9570e-01,  3.9064e-02, -1.5931e-01,  3.2186e-01,
          1.3502e-01,  1.3155e-01,  1.6037e-01, -6.3569e-02,  1.4221e-01,
          4.3759e-01,  9.6434e-02, -5.6722e-02, -2.2926e-01,  3.5146e-01,
          4.5835e-02,  1.2656e-01,  1.8557e-01,  3.1834e-01, -2.7540e-01,
         -1.2140e-02, -1.3548e-02,  2.1158e-01,  4.8636e-01,  1.3238e-01,
          2.3988e-01, -2.2132e-01, -4.8714e-01, -5.1193e-02, -3.4005e-01,
          2.0827e-01, -2.5594e-01, -7.4474e-02, -2.9730e-01,  6.8233e-02,
         -1.9481e-01,  5.3836e-01, -3.5850e-01,  2.8837e-01, -2.4837e-01,
         -1.1930e-01, -2.6492e-01,  2.2411e-01,  1.3716e-01,  9.3441e-02,
         -3.9470e-01, -7.1959e-01,  2.7594e-01,  2.5076e-01, -2.5795e-01,
         -6.3039e-02,  2.4926e-01,  1.5806e-01,  2.4672e-01,  1.3643e-01,
          8.4691e-02,  8.6650e-03,  1.2779e-01,  1.8198e-01,  3.4345e-01,
         -1.3851e-01,  2.8796e-01,  4.5402e-02, -3.5073e-01,  9.5380e-04,
          1.5002e-01,  3.9754e-02,  1.2460e-01, -2.5779e-01,  2.8051e-02,
          9.5678e-02, -9.4372e-02, -3.0427e-02, -1.4353e-01, -6.5241e-02,
          2.7522e-02,  1.1069e-01,  3.6466e-01,  1.1026e-02,  2.1685e-01,
          3.8322e-02, -9.1129e-02, -2.6129e-01, -6.6114e-02,  1.4042e-01,
          2.1618e-01, -2.7979e-01, -1.5037e-01,  1.8397e-02, -1.1281e-01,
          2.9318e-01,  1.4897e-02,  3.2341e-01, -6.2781e-02, -1.1365e-01,
         -3.6182e-02,  1.6931e-01,  3.4609e-02,  4.6907e-02,  1.2659e-01,
          1.9283e-01]], device='cuda:0') tensor(0.2263, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
660000 特征值优化 tensor(0.9927, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3917e+00, -2.4609e-01, -1.1735e+00, -9.4924e-01,  2.5164e+00,
          4.1348e+00,  4.4984e-01, -2.1088e+00, -4.4790e-01,  5.0763e-01,
          5.4250e-01, -1.9317e-01, -7.0956e-01, -7.5597e-01,  3.6122e-01,
         -1.0462e+00, -2.0758e-01, -2.9610e-01,  5.0369e-01, -2.6655e-01,
         -4.3167e-01, -1.9767e-02,  4.6461e-01, -5.0812e-01,  1.3101e-03,
          1.1630e-01, -6.7096e-03,  6.3331e-02,  1.1536e-01,  1.3644e-02,
          1.8297e-01, -1.3744e-01, -2.1110e-01, -1.9699e-02,  1.2068e-01,
         -1.9067e-01, -1.0102e-02,  1.0662e-01,  2.4043e-01,  1.1072e-01,
         -6.3783e-02,  5.9304e-02, -1.2053e-02,  1.0915e-01, -1.6227e-01,
          2.5070e-01,  1.1977e-01,  1.4314e-01,  2.2229e-01,  3.0825e-01,
          3.3774e-01,  7.0629e-02,  3.2899e-01,  1.9945e-01,  3.4435e-02,
         -2.8116e-01,  1.3741e-01, -3.6780e-02, -3.0048e-01, -1.2794e-01,
          5.2023e-02,  5.0202e-01,  3.2412e-02, -1.6071e-01,  3.1482e-01,
          1.3638e-01,  1.3540e-01,  1.6035e-01, -4.7773e-02,  1.4891e-01,
          4.3727e-01,  9.8763e-02, -7.0841e-02, -2.2237e-01,  3.6779e-01,
          3.3482e-02,  1.3411e-01,  1.9809e-01,  3.3710e-01, -2.8584e-01,
         -1.1190e-02, -1.5017e-02,  2.0591e-01,  4.6452e-01,  1.3625e-01,
          2.4843e-01, -2.2785e-01, -4.8965e-01, -4.9878e-02, -3.4098e-01,
          1.9952e-01, -2.5359e-01, -7.5621e-02, -2.7543e-01,  7.8421e-02,
         -1.9430e-01,  5.3761e-01, -3.5331e-01,  2.7717e-01, -2.4073e-01,
         -1.3742e-01, -2.6269e-01,  2.2055e-01,  1.3137e-01,  9.1157e-02,
         -3.9452e-01, -7.2112e-01,  2.8166e-01,  2.5492e-01, -2.5320e-01,
         -6.3048e-02,  2.4935e-01,  1.4533e-01,  2.3993e-01,  1.3802e-01,
          7.7949e-02,  1.5651e-02,  1.2511e-01,  1.9768e-01,  3.5578e-01,
         -1.2516e-01,  2.9096e-01,  5.1629e-02, -3.5573e-01, -1.9744e-03,
          1.3886e-01,  3.8182e-02,  1.2152e-01, -2.4222e-01,  2.6994e-02,
          8.7729e-02, -9.4003e-02, -2.3042e-02, -1.4716e-01, -6.1909e-02,
          1.5804e-02,  1.2949e-01,  3.6952e-01,  3.9768e-02,  1.9811e-01,
          3.5875e-02, -1.0368e-01, -2.5598e-01, -5.3301e-02,  1.4508e-01,
          2.0380e-01, -2.7711e-01, -1.4440e-01,  7.6888e-03, -1.1511e-01,
          3.2049e-01, -1.5817e-02,  3.2053e-01, -6.1411e-02, -1.1733e-01,
         -3.2018e-02,  1.5464e-01,  2.4344e-02,  5.7377e-02,  1.3558e-01,
          1.8559e-01]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
661000 特征值优化 tensor(0.9955, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3797e+00, -2.6023e-01, -1.1923e+00, -9.4161e-01,  2.5291e+00,
          4.1717e+00,  4.4027e-01, -2.1226e+00, -4.5262e-01,  5.0345e-01,
          5.4265e-01, -1.8526e-01, -7.0764e-01, -7.4255e-01,  3.5984e-01,
         -1.0374e+00, -2.1600e-01, -2.7070e-01,  4.9984e-01, -2.5931e-01,
         -4.4025e-01, -2.7650e-02,  4.8199e-01, -4.9715e-01,  5.4358e-03,
          1.0595e-01,  1.7977e-02,  6.0030e-02,  1.0387e-01,  1.7365e-02,
          1.7168e-01, -1.3940e-01, -2.2519e-01, -2.4148e-02,  1.1283e-01,
         -1.8468e-01, -4.7239e-03,  1.0654e-01,  2.4827e-01,  1.0217e-01,
         -6.7700e-02,  6.5641e-02, -1.5993e-02,  1.0821e-01, -1.6436e-01,
          2.4492e-01,  1.2777e-01,  1.7201e-01,  2.3162e-01,  2.9089e-01,
          3.3168e-01,  7.8909e-02,  3.2662e-01,  2.0910e-01,  3.5992e-02,
         -2.7703e-01,  1.1801e-01, -2.9965e-02, -2.7714e-01, -1.3944e-01,
          4.7103e-02,  5.0411e-01,  3.2772e-02, -1.6262e-01,  3.1970e-01,
          1.2564e-01,  1.3132e-01,  1.6320e-01, -5.9709e-02,  1.3720e-01,
          4.3850e-01,  1.0018e-01, -6.4862e-02, -2.1512e-01,  3.6098e-01,
          4.6490e-02,  1.3193e-01,  1.8369e-01,  3.1669e-01, -2.7562e-01,
         -1.4585e-02, -2.9868e-02,  2.1541e-01,  4.7284e-01,  1.1327e-01,
          2.4783e-01, -2.2096e-01, -4.8228e-01, -5.4011e-02, -3.2831e-01,
          2.0055e-01, -2.5977e-01, -8.6398e-02, -2.8120e-01,  7.7070e-02,
         -1.9827e-01,  5.3711e-01, -3.5366e-01,  3.0277e-01, -2.5480e-01,
         -1.4014e-01, -2.6743e-01,  2.2604e-01,  1.4423e-01,  1.0390e-01,
         -3.8575e-01, -7.0354e-01,  2.7798e-01,  2.5806e-01, -2.5623e-01,
         -6.0647e-02,  2.3999e-01,  1.4418e-01,  2.3801e-01,  1.4634e-01,
          7.9212e-02,  2.6008e-03,  1.4390e-01,  1.9178e-01,  3.3609e-01,
         -1.3886e-01,  2.9362e-01,  4.2978e-02, -3.4465e-01,  5.7231e-03,
          1.5392e-01,  3.2331e-02,  1.1476e-01, -2.5569e-01,  2.6472e-02,
          9.6888e-02, -9.9533e-02, -3.1519e-02, -1.3823e-01, -5.9208e-02,
          3.3091e-02,  1.2460e-01,  3.7041e-01,  1.7525e-02,  2.1022e-01,
          4.6126e-02, -9.8655e-02, -2.6180e-01, -7.4035e-02,  1.3636e-01,
          2.0644e-01, -2.9216e-01, -1.4704e-01,  2.7908e-02, -1.1499e-01,
          2.9890e-01, -2.7950e-03,  3.1255e-01, -4.9857e-02, -1.0909e-01,
         -3.8039e-02,  1.6788e-01,  3.3635e-02,  5.0904e-02,  1.3557e-01,
          1.9277e-01]], device='cuda:0') tensor(0.2253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
662000 特征值优化 tensor(0.9888, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3617e+00, -2.7788e-01, -1.1797e+00, -9.5005e-01,  2.5399e+00,
          4.1804e+00,  4.4288e-01, -2.1199e+00, -4.5826e-01,  5.0869e-01,
          5.4982e-01, -1.8983e-01, -7.1163e-01, -7.3507e-01,  3.6790e-01,
         -1.0451e+00, -2.1741e-01, -2.7564e-01,  4.9795e-01, -2.4955e-01,
         -4.3918e-01, -2.0568e-02,  4.8644e-01, -5.0457e-01,  9.4935e-03,
          9.3648e-02,  2.3549e-02,  5.7513e-02,  1.0890e-01,  1.8997e-02,
          1.7632e-01, -1.3683e-01, -2.2396e-01, -2.2552e-02,  1.1490e-01,
         -1.7721e-01, -2.0995e-02,  9.6926e-02,  2.5270e-01,  1.0649e-01,
         -7.4439e-02,  6.1690e-02, -1.3626e-02,  1.0853e-01, -1.6403e-01,
          2.3326e-01,  1.2241e-01,  1.8003e-01,  2.1840e-01,  2.8686e-01,
          3.3239e-01,  8.6023e-02,  3.2748e-01,  2.0941e-01,  3.0318e-02,
         -2.8117e-01,  1.1784e-01, -3.1056e-02, -2.7994e-01, -1.4228e-01,
          6.2125e-02,  4.9702e-01,  3.1935e-02, -1.5825e-01,  3.2374e-01,
          1.2001e-01,  1.3507e-01,  1.5784e-01, -7.0968e-02,  1.4182e-01,
          4.3760e-01,  9.7949e-02, -6.4624e-02, -2.1524e-01,  3.5407e-01,
          4.5785e-02,  1.2845e-01,  1.8206e-01,  3.1504e-01, -2.7868e-01,
         -3.5964e-03, -1.4860e-02,  2.1253e-01,  4.8322e-01,  1.1192e-01,
          2.4962e-01, -2.1582e-01, -4.9085e-01, -4.9255e-02, -3.3685e-01,
          2.1710e-01, -2.5752e-01, -7.9131e-02, -2.7380e-01,  7.7918e-02,
         -1.9554e-01,  5.4514e-01, -3.5041e-01,  3.0128e-01, -2.5246e-01,
         -1.2057e-01, -2.6888e-01,  2.3111e-01,  1.4457e-01,  1.0028e-01,
         -3.8495e-01, -7.1776e-01,  2.6595e-01,  2.5388e-01, -2.5410e-01,
         -6.2776e-02,  2.3408e-01,  1.4562e-01,  2.3602e-01,  1.4610e-01,
          7.9463e-02,  5.2154e-03,  1.3915e-01,  1.9719e-01,  3.4601e-01,
         -1.2412e-01,  2.9297e-01,  3.9780e-02, -3.4656e-01, -4.6440e-03,
          1.4199e-01,  3.0686e-02,  1.1367e-01, -2.5754e-01,  2.3124e-02,
          9.6218e-02, -9.3189e-02, -2.9244e-02, -1.4388e-01, -5.7961e-02,
          3.8276e-02,  1.2533e-01,  3.6943e-01,  1.9482e-02,  2.1294e-01,
          5.1448e-02, -9.5551e-02, -2.7130e-01, -6.5550e-02,  1.3359e-01,
          2.2003e-01, -2.9477e-01, -1.3461e-01,  2.8050e-02, -1.1317e-01,
          2.9353e-01,  6.9356e-03,  3.1283e-01, -4.8538e-02, -1.1226e-01,
         -4.1226e-02,  1.6152e-01,  3.6858e-02,  5.1001e-02,  1.3994e-01,
          1.9793e-01]], device='cuda:0') tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
663000 特征值优化 tensor(21.1920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2227,  0.9868,  0.6853, -0.2720,  1.0954, -0.3789, -0.2999, -2.1140,
         -0.3212, -1.0114, -0.4127, -0.1001, -0.6658, -0.2310,  0.4173, -0.1939,
          1.4723,  0.2792,  1.1706, -0.5460, -1.2549, -1.1930, -0.2886,  0.1392,
          0.0507, -0.4753, -0.0144,  1.1403, -0.5224,  0.1032, -0.7846, -0.0580,
          0.2595, -0.8482,  0.0126,  0.0905, -0.7537, -0.4149, -0.4258, -0.1401,
         -0.7995,  0.6667, -0.1699,  0.4604, -0.2872, -0.4395,  0.6271, -0.1794,
          1.0743,  0.7092,  0.8826, -0.1526, -1.0661,  1.1161,  0.1212, -0.7511,
          0.0330, -1.2179, -0.7069, -0.3585, -1.1611, -0.7119,  0.1934,  0.0936,
         -0.0117,  0.4604,  0.4633,  0.6135, -0.7902,  0.3794,  0.3011, -0.2927,
          0.2360, -0.7925,  0.7165, -0.4184, -0.7368,  0.2704,  0.0798, -0.1247,
          0.7184,  0.0582,  0.2298, -0.4669, -0.1206, -0.5570,  1.5322, -0.4773,
         -0.6656, -0.1438,  0.1353, -0.4066,  0.0139, -0.6047, -0.3351,  1.0341,
          0.1375,  0.4961,  0.5201,  0.3349, -0.7372, -1.5111,  0.9807, -0.0514,
          1.3422, -0.0289, -0.6160,  2.1264, -0.5500,  0.5132,  0.0291,  0.1681,
          0.6338,  0.0097, -0.2470, -0.0364, -0.0086,  0.2499, -1.0883, -0.2424,
          0.0773, -0.2066, -0.1879, -0.3205, -0.3068, -0.0428,  0.5248,  0.7337,
          0.1216,  0.4567,  0.2134,  0.3314, -0.1153, -0.6484, -0.2861, -0.1001,
         -0.0197,  0.0594, -1.1398,  0.0423, -0.6410,  0.8298, -1.6244,  0.0682,
         -0.1417, -0.5207,  0.7048,  0.7821,  0.0734,  0.8981,  0.1669, -0.1373,
         -0.6170, -0.4837, -0.4762, -0.2072,  0.2007, -1.5119,  0.6510, -0.2153,
          0.6904]], device='cuda:0') tensor(0.3067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
664000 特征值优化 tensor(1.4239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0410e+00,  1.0709e+00,  3.6922e-01, -9.3218e-01,  1.7481e+00,
          6.1575e-01, -9.0171e-01, -1.1361e+00,  8.4895e-01,  1.6644e-02,
         -1.5955e-01, -8.6783e-02,  6.5943e-02,  6.2361e-01,  7.0830e-01,
         -6.4851e-01,  7.5081e-01, -9.3726e-02,  6.0769e-01, -9.5897e-01,
         -5.5888e-01, -4.0186e-01,  6.1145e-02,  4.0391e-01,  8.0736e-01,
         -5.5593e-01,  4.3173e-01,  5.3464e-01,  1.1657e-05,  3.3450e-01,
         -3.0682e-01,  3.6034e-02, -3.1533e-01, -3.4951e-01,  2.7989e-01,
         -2.8663e-02,  4.2943e-01, -5.2867e-01, -9.9981e-03, -8.6315e-02,
         -2.7403e-01, -2.1240e-04,  6.4196e-02,  3.4363e-01, -5.0935e-01,
         -1.4317e-01,  1.3354e-01, -2.2968e-01,  2.8781e-01,  2.0770e-01,
          3.0794e-01,  4.5398e-01, -3.5390e-01,  4.4692e-01, -2.0766e-01,
         -3.1895e-01,  4.2380e-02, -3.7730e-01, -3.7804e-01, -2.0182e-01,
         -1.9086e-01, -2.7447e-01, -2.5329e-02, -1.1402e-01,  1.3411e-01,
          2.7229e-03,  9.9821e-02,  1.6542e-01, -1.8117e-01, -3.3666e-02,
          2.2829e-01,  9.6098e-02, -8.8394e-02, -1.4703e-01,  2.9316e-01,
          3.1923e-01,  1.5769e-02,  1.2900e-03, -3.7865e-01,  1.6262e-01,
          5.5224e-02, -1.2608e-01, -2.0576e-01, -2.4227e-01,  5.9962e-02,
          2.0942e-02,  5.4860e-01, -2.0133e-01, -2.3404e-01, -1.3655e-01,
          7.9271e-02, -5.7184e-01, -1.6572e-01, -5.1989e-02, -1.2643e-01,
         -6.1570e-02,  6.7164e-01,  8.6305e-02, -2.9812e-02,  3.2779e-01,
         -3.9463e-01, -6.2495e-01,  7.7525e-01, -5.8511e-02,  2.4357e-01,
         -4.5944e-01,  8.6421e-02,  1.0555e+00, -8.2041e-01,  1.2766e-01,
          1.2191e-01, -4.6878e-02,  1.9481e-01,  4.0503e-02, -4.1599e-02,
         -6.8340e-02,  2.6164e-02, -2.2091e-02, -3.0890e-01, -1.4986e-03,
         -2.6823e-02, -3.2481e-02, -3.5774e-01, -8.1191e-02,  1.1536e-01,
          1.3917e-01,  1.5506e-01,  2.1665e-01, -1.3289e-01,  7.6629e-03,
          1.5932e-03,  1.0382e-01,  8.0979e-02, -1.3740e-01,  5.8179e-02,
          2.5599e-01,  9.4237e-02, -2.0006e-02, -3.1751e-01,  3.5239e-02,
         -5.6939e-02,  1.0133e-01, -6.9484e-01,  6.3469e-02,  4.8317e-02,
         -1.3565e-01,  3.6656e-01,  6.0351e-02,  1.3813e-01,  4.2755e-01,
          1.9059e-01,  8.5757e-02, -3.3670e-02,  7.2859e-02, -6.3517e-02,
          1.3588e-01,  6.4129e-02, -6.8047e-01,  1.6760e-02,  5.3062e-02,
          2.2084e-02]], device='cuda:0') tensor(0.3016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
665000 特征值优化 tensor(0.6395, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6739,  1.0706,  0.3116, -1.0483,  1.7016,  0.7469, -1.2846, -1.2176,
          1.0775,  0.2631, -0.4169, -0.2891,  0.1432,  0.8996,  0.5505, -0.7632,
          0.6693, -0.0668,  0.6072, -1.1545, -0.5976, -0.2981,  0.1643,  0.4642,
          0.8569, -0.6377,  0.5024,  0.5351,  0.0927,  0.3413, -0.2406,  0.0730,
         -0.3138, -0.3541,  0.3480, -0.1033,  0.5663, -0.5390,  0.0318, -0.0544,
         -0.3649,  0.0451,  0.0510,  0.2277, -0.4945, -0.2691, -0.1000, -0.2984,
          0.2236,  0.1289,  0.1490,  0.4773, -0.2698,  0.3405, -0.1976, -0.3870,
         -0.0569, -0.3297, -0.4089, -0.0422, -0.0915, -0.3009,  0.1162, -0.1561,
          0.0716, -0.0981,  0.0625,  0.2371, -0.1433, -0.0626,  0.2081,  0.1414,
         -0.0412, -0.0943,  0.2084,  0.4607,  0.0662,  0.0906, -0.4460,  0.2044,
         -0.0249, -0.1435, -0.3211, -0.2615,  0.0519,  0.0687,  0.4418, -0.3263,
         -0.0421, -0.2328, -0.0094, -0.2878, -0.0773, -0.0192,  0.0652, -0.2271,
          0.8121,  0.3082,  0.1537,  0.4886, -0.3538, -0.5179,  0.4578, -0.1346,
          0.0817, -0.3647, -0.0125,  0.8831, -0.5371, -0.0495,  0.1485, -0.0418,
          0.1066,  0.0848, -0.0020, -0.0906,  0.0780, -0.0285, -0.1961, -0.1582,
          0.0078, -0.0138, -0.3378, -0.0025, -0.0243,  0.1216,  0.1458,  0.1002,
         -0.0960, -0.0187,  0.0906,  0.0903,  0.1324, -0.1419,  0.0758,  0.1911,
          0.1189, -0.0733, -0.1881, -0.0491, -0.0785,  0.0569, -0.4166, -0.0728,
          0.0153, -0.1474,  0.2121, -0.0415,  0.0440,  0.2986,  0.2140,  0.0323,
         -0.0159,  0.0077, -0.0611,  0.0713,  0.1206, -0.4561,  0.0201,  0.0027,
          0.0514]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
666000 特征值优化 tensor(0.5650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.4112e-01,  1.0527e+00,  3.1405e-01, -1.0542e+00,  1.8036e+00,
          7.2428e-01, -1.4853e+00, -1.2898e+00,  1.0983e+00,  2.5652e-01,
         -3.9746e-01, -4.1739e-01,  1.3647e-01,  9.5968e-01,  5.4372e-01,
         -8.2173e-01,  6.5285e-01, -4.2513e-02,  6.4137e-01, -1.1708e+00,
         -5.9530e-01, -2.7592e-01,  1.9747e-01,  5.4757e-01,  8.5072e-01,
         -6.4400e-01,  5.6281e-01,  5.8354e-01,  1.3487e-01,  3.6194e-01,
         -2.2227e-01,  8.9877e-02, -3.1852e-01, -3.4084e-01,  3.7685e-01,
         -8.1437e-02,  5.6986e-01, -5.1879e-01,  7.3939e-02, -6.7069e-02,
         -3.9567e-01,  3.6049e-02,  5.5786e-02,  2.2874e-01, -5.1049e-01,
         -3.1945e-01, -1.4724e-01, -3.0342e-01,  2.1626e-01,  1.7258e-01,
          9.9666e-02,  4.3162e-01, -2.2787e-01,  2.7214e-01, -2.2168e-01,
         -3.4744e-01, -3.3061e-02, -3.2923e-01, -4.7612e-01, -1.5664e-02,
         -1.0553e-01, -2.6952e-01,  1.4928e-01, -1.6061e-01,  2.3270e-02,
         -1.0183e-01,  5.2858e-02,  2.4383e-01, -1.1605e-01, -7.5789e-02,
          2.3349e-01,  1.6347e-01, -5.4809e-02, -8.0036e-02,  1.5941e-01,
          4.6341e-01,  6.9809e-02,  1.1252e-01, -4.2012e-01,  2.1993e-01,
         -7.2127e-03, -1.1885e-01, -3.3002e-01, -2.5400e-01,  5.9551e-02,
          1.0425e-01,  4.2706e-01, -3.2378e-01, -1.5991e-02, -2.2737e-01,
         -2.3349e-02, -2.6107e-01, -6.5249e-02, -3.5531e-02,  6.8426e-02,
         -2.2883e-01,  8.0836e-01,  3.5336e-01,  2.0132e-01,  4.6826e-01,
         -2.9952e-01, -4.4781e-01,  4.0308e-01, -1.1913e-01,  3.5077e-02,
         -3.1837e-01, -4.5169e-02,  8.4258e-01, -5.4499e-01, -6.5640e-02,
          1.2072e-01, -4.5843e-02,  7.2811e-02,  7.2487e-02, -1.5846e-03,
         -1.0259e-01,  9.8555e-02, -5.8440e-03, -1.4963e-01, -1.5879e-01,
          1.7438e-02, -1.0475e-02, -3.4450e-01, -1.4620e-02, -8.6998e-02,
          8.9401e-02,  1.5310e-01,  9.4045e-02, -8.9217e-02, -3.7595e-02,
          1.1851e-01,  8.1968e-02,  1.1653e-01, -1.1991e-01,  5.2251e-02,
          1.6503e-01,  1.1984e-01, -3.5397e-02, -1.8692e-01, -7.6610e-02,
         -9.3909e-02,  7.4753e-02, -3.5630e-01, -8.5449e-02,  4.8970e-02,
         -1.2613e-01,  1.8355e-01, -2.6033e-02,  5.3973e-02,  2.9469e-01,
          1.7701e-01,  3.6388e-02, -2.8428e-02,  2.3481e-02, -9.6745e-02,
          8.1733e-02,  1.4462e-01, -3.9403e-01, -4.1571e-02, -4.3464e-03,
          6.6975e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
667000 特征值优化 tensor(0.5556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.8421e-01,  1.0471e+00,  3.2540e-01, -1.0564e+00,  1.9505e+00,
          7.1792e-01, -1.5958e+00, -1.3396e+00,  1.1100e+00,  2.1691e-01,
         -3.8000e-01, -4.7401e-01,  1.1459e-01,  9.5904e-01,  5.3996e-01,
         -8.9819e-01,  6.6005e-01, -4.2961e-02,  6.6088e-01, -1.1666e+00,
         -5.7945e-01, -2.6013e-01,  1.9841e-01,  5.5819e-01,  8.5667e-01,
         -6.5507e-01,  5.7357e-01,  6.4077e-01,  1.3726e-01,  3.7260e-01,
         -2.1172e-01,  1.0285e-01, -3.3575e-01, -3.3027e-01,  4.4074e-01,
         -8.0456e-02,  5.5031e-01, -4.8477e-01,  1.0515e-01, -7.7276e-02,
         -4.0773e-01,  3.9113e-02,  5.5978e-02,  2.4308e-01, -5.2128e-01,
         -3.2143e-01, -1.6122e-01, -3.2238e-01,  2.2078e-01,  1.6892e-01,
          8.4101e-02,  3.9345e-01, -1.9933e-01,  2.2585e-01, -2.0966e-01,
         -3.0712e-01, -5.6681e-02, -3.0934e-01, -5.4080e-01, -6.7243e-03,
         -1.3599e-01, -2.5228e-01,  1.4114e-01, -1.4689e-01, -5.4244e-03,
         -9.0511e-02,  4.0317e-02,  2.3949e-01, -1.0091e-01, -9.1762e-02,
          2.5796e-01,  1.6600e-01, -5.0872e-02, -9.4354e-02,  1.4221e-01,
          4.5957e-01,  6.3639e-02,  1.0375e-01, -4.0528e-01,  2.3509e-01,
         -6.9615e-03, -1.1405e-01, -3.1149e-01, -2.4707e-01,  7.9468e-02,
          1.2983e-01,  4.3504e-01, -3.1272e-01,  1.3159e-02, -2.6237e-01,
          9.1910e-04, -2.4555e-01, -6.5978e-02, -5.2557e-02,  6.5106e-02,
         -2.3205e-01,  7.9447e-01,  3.7649e-01,  1.7879e-01,  4.4870e-01,
         -2.9876e-01, -4.1794e-01,  4.2964e-01, -1.1504e-01, -8.7411e-03,
         -3.2678e-01, -4.2358e-02,  7.9983e-01, -5.9327e-01, -7.1572e-02,
          1.0396e-01, -7.4041e-02,  3.9553e-02,  6.7681e-02, -1.1892e-02,
         -9.7856e-02,  8.6678e-02, -8.6325e-04, -1.2338e-01, -1.4788e-01,
          2.0684e-02, -2.2263e-02, -3.4686e-01, -1.3978e-02, -1.0035e-01,
          5.6970e-02,  1.5963e-01,  9.6722e-02, -9.9896e-02, -3.7006e-02,
          9.9676e-02,  8.1908e-02,  1.0418e-01, -1.0246e-01,  4.0622e-02,
          1.5538e-01,  1.1688e-01, -2.9052e-02, -1.7655e-01, -9.2541e-02,
         -1.0413e-01,  7.3702e-02, -3.1174e-01, -5.1539e-02,  6.8560e-02,
         -1.2265e-01,  1.7843e-01, -1.7659e-02,  5.9140e-02,  2.9331e-01,
          1.7558e-01,  5.1710e-02, -2.0343e-02,  4.3521e-02, -1.1672e-01,
          8.3452e-02,  1.5254e-01, -3.4214e-01, -5.8427e-02,  1.4755e-02,
          7.7117e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
668000 特征值优化 tensor(0.5378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3362e-01,  1.0362e+00,  3.0807e-01, -1.0603e+00,  2.1740e+00,
          7.1784e-01, -1.6185e+00, -1.4305e+00,  1.1158e+00,  1.7665e-01,
         -3.7839e-01, -5.2736e-01,  1.1639e-01,  9.1200e-01,  5.3470e-01,
         -9.4667e-01,  6.2541e-01, -4.2633e-02,  6.9600e-01, -1.1696e+00,
         -5.7331e-01, -2.1714e-01,  1.9501e-01,  5.9136e-01,  8.4365e-01,
         -7.0445e-01,  6.0328e-01,  7.1284e-01,  1.0573e-01,  3.8731e-01,
         -1.7944e-01,  1.0921e-01, -3.2706e-01, -3.3567e-01,  4.4986e-01,
         -1.0509e-01,  5.2856e-01, -4.6864e-01,  1.4059e-01, -7.1175e-02,
         -4.1525e-01,  3.9794e-02,  5.2607e-02,  2.2994e-01, -5.3286e-01,
         -3.2490e-01, -1.6661e-01, -3.6298e-01,  2.4043e-01,  2.0479e-01,
          7.0953e-02,  3.7560e-01, -1.8074e-01,  1.5412e-01, -1.8601e-01,
         -2.5315e-01, -8.1569e-02, -2.8657e-01, -6.1957e-01,  4.7073e-02,
         -1.6592e-01, -2.3755e-01,  1.2847e-01, -1.2297e-01, -4.8862e-02,
         -7.0321e-02,  3.7064e-02,  1.8099e-01, -9.9585e-02, -1.1208e-01,
          2.5076e-01,  1.7470e-01, -4.9774e-02, -9.3355e-02,  1.0573e-01,
          4.7573e-01,  5.7719e-02,  1.1518e-01, -3.2598e-01,  2.2162e-01,
          2.4765e-03, -1.1920e-01, -2.8318e-01, -2.6241e-01,  4.9180e-02,
          1.4009e-01,  4.3986e-01, -2.9608e-01,  2.7070e-02, -3.5378e-01,
          1.0260e-03, -2.3206e-01, -1.1906e-01, -1.0540e-01,  5.2543e-02,
         -2.2857e-01,  7.9065e-01,  4.1360e-01,  1.8265e-01,  5.4583e-01,
         -3.0729e-01, -4.1121e-01,  4.3031e-01, -1.3074e-01, -4.4655e-02,
         -3.6429e-01, -5.9541e-03,  7.8089e-01, -5.9128e-01, -7.0248e-02,
          7.6169e-02, -5.6074e-02,  2.2847e-03,  6.7773e-02, -1.7438e-02,
         -6.4495e-02,  9.2557e-02, -1.5383e-02, -7.9723e-02, -1.2508e-01,
          4.1131e-02, -1.4457e-02, -3.5578e-01, -3.2640e-04, -1.0417e-01,
          4.6380e-02,  1.6538e-01,  7.8322e-02, -1.0231e-01, -1.3948e-02,
          1.0497e-01,  7.8177e-02,  9.8533e-02, -1.0017e-01,  1.2760e-02,
          1.7031e-01,  9.5536e-02, -3.5098e-02, -1.6862e-01, -9.9956e-02,
         -1.0471e-01,  8.2749e-02, -2.6577e-01,  1.5454e-02,  1.0453e-01,
         -8.2165e-02,  1.8219e-01, -1.1780e-02,  7.2155e-02,  2.8310e-01,
          2.0372e-01,  3.0812e-02, -7.7395e-03,  4.3213e-02, -1.1918e-01,
          4.3058e-02,  1.0602e-01, -2.6032e-01, -3.7616e-02,  3.1093e-02,
          8.0249e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
669000 特征值优化 tensor(0.5385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3535e-01,  1.0447e+00,  2.6820e-01, -1.0562e+00,  2.2217e+00,
          7.6328e-01, -1.6503e+00, -1.5382e+00,  1.1155e+00,  1.2534e-01,
         -3.8995e-01, -5.7383e-01,  1.0718e-01,  8.8376e-01,  5.5469e-01,
         -1.0011e+00,  5.9709e-01, -4.7208e-02,  7.4363e-01, -1.1897e+00,
         -5.9705e-01, -1.3384e-01,  1.5652e-01,  6.1863e-01,  8.5943e-01,
         -7.0076e-01,  5.8049e-01,  7.7769e-01,  1.1085e-01,  3.7448e-01,
         -1.7848e-01,  1.2678e-01, -3.2472e-01, -3.3720e-01,  4.7226e-01,
         -1.3974e-01,  5.1894e-01, -4.3950e-01,  1.6127e-01, -3.7150e-02,
         -4.0056e-01,  4.6362e-02,  5.5608e-02,  2.2675e-01, -5.2255e-01,
         -3.1257e-01, -1.5104e-01, -3.8458e-01,  2.6976e-01,  2.2236e-01,
          5.4796e-02,  3.2404e-01, -1.4731e-01,  7.4975e-02, -1.8075e-01,
         -2.3326e-01, -1.2737e-01, -2.7000e-01, -6.6377e-01,  9.6087e-02,
         -1.7006e-01, -2.3010e-01,  1.0648e-01, -1.1045e-01, -5.9747e-02,
         -5.6516e-02,  4.5336e-02,  1.3746e-01, -1.2014e-01, -1.3537e-01,
          2.6187e-01,  2.0274e-01, -6.2383e-02, -9.6790e-02,  1.0042e-01,
          4.3528e-01,  2.9495e-02,  9.1682e-02, -3.2917e-01,  2.1625e-01,
         -2.8951e-03, -1.4299e-01, -2.4213e-01, -2.4961e-01,  3.7804e-02,
          9.4943e-02,  4.4686e-01, -2.7243e-01,  4.4251e-02, -4.3903e-01,
          1.4320e-02, -2.3281e-01, -1.3099e-01, -1.3035e-01,  6.0858e-02,
         -2.1488e-01,  7.7521e-01,  4.4638e-01,  2.2322e-01,  5.5225e-01,
         -3.1012e-01, -4.0931e-01,  4.4877e-01, -1.3687e-01, -5.1852e-02,
         -3.8985e-01,  2.0781e-02,  7.6670e-01, -6.2835e-01, -6.2960e-02,
          4.7498e-02, -5.1878e-02, -4.8049e-02,  4.6653e-02, -1.1000e-02,
         -5.4717e-02,  7.9098e-02, -1.2200e-02, -5.1193e-02, -1.0175e-01,
          2.7801e-02, -9.7176e-03, -3.6042e-01,  1.9924e-02, -1.1557e-01,
          2.8937e-02,  1.7781e-01,  8.4428e-02, -1.1576e-01,  9.4874e-04,
          8.2348e-02,  6.1770e-02,  8.2439e-02, -8.3635e-02, -3.9995e-03,
          1.5971e-01,  1.0662e-01, -4.8430e-02, -1.3997e-01, -1.2147e-01,
         -9.8720e-02,  7.0139e-02, -2.3862e-01,  2.4739e-03,  9.9462e-02,
         -5.2767e-02,  1.8998e-01, -5.5424e-02,  7.7376e-02,  2.7401e-01,
          1.7812e-01,  4.4790e-02, -3.9788e-03,  3.9915e-02, -1.4492e-01,
          4.3853e-02,  9.1120e-02, -2.3300e-01, -3.8974e-02,  8.6044e-02,
          6.3162e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
670000 特征值优化 tensor(0.5297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.1748e-02,  1.1076e+00,  2.0628e-01, -1.0668e+00,  2.2299e+00,
          7.7898e-01, -1.6915e+00, -1.5939e+00,  1.1372e+00,  8.7663e-02,
         -4.1252e-01, -5.8376e-01,  8.6331e-02,  8.4463e-01,  5.6537e-01,
         -1.0265e+00,  5.4722e-01, -5.1314e-02,  7.6003e-01, -1.2048e+00,
         -6.1178e-01, -7.7218e-02,  1.3307e-01,  6.2150e-01,  8.5868e-01,
         -6.9701e-01,  5.6694e-01,  7.8569e-01,  9.0954e-02,  3.4414e-01,
         -1.6093e-01,  1.1915e-01, -3.0626e-01, -3.3121e-01,  4.7871e-01,
         -1.5722e-01,  5.2987e-01, -4.4221e-01,  1.7955e-01, -3.4513e-02,
         -3.9419e-01,  4.5064e-02,  5.1735e-02,  2.1797e-01, -4.9201e-01,
         -2.9940e-01, -1.3789e-01, -4.0840e-01,  2.7766e-01,  2.2894e-01,
          4.3904e-02,  2.8949e-01, -1.2000e-01,  1.5123e-02, -1.5792e-01,
         -2.3067e-01, -1.3499e-01, -2.6836e-01, -6.8156e-01,  1.2653e-01,
         -1.6273e-01, -2.3013e-01,  1.0619e-01, -1.0538e-01, -6.1013e-02,
         -4.1557e-02,  4.0880e-02,  1.2208e-01, -1.3116e-01, -1.3481e-01,
          2.6262e-01,  1.9307e-01, -7.0172e-02, -7.2500e-02,  8.4537e-02,
          4.4062e-01,  2.4333e-02,  9.7149e-02, -3.0495e-01,  2.1338e-01,
         -1.1503e-02, -1.4568e-01, -2.0992e-01, -2.5826e-01,  9.0184e-03,
          9.3399e-02,  4.5279e-01, -2.7351e-01,  8.1190e-02, -4.8661e-01,
          2.5206e-02, -2.2313e-01, -1.7935e-01, -1.3464e-01,  5.2719e-02,
         -1.9895e-01,  7.9471e-01,  4.4335e-01,  1.9603e-01,  5.8051e-01,
         -2.8841e-01, -4.0757e-01,  4.6325e-01, -1.4180e-01, -7.9956e-02,
         -3.9900e-01,  2.0322e-02,  7.3773e-01, -6.7493e-01, -5.2841e-02,
          2.1664e-02, -4.3982e-02, -5.6106e-02,  4.5621e-02, -1.1237e-02,
         -4.3755e-02,  6.3276e-02, -8.7050e-03, -3.2645e-02, -1.0729e-01,
          2.1906e-02,  2.2471e-02, -3.6148e-01,  3.6705e-02, -1.2338e-01,
          2.2507e-02,  1.7416e-01,  8.0475e-02, -1.2938e-01,  1.1375e-02,
          6.7678e-02,  8.3958e-02,  7.6097e-02, -7.7495e-02, -1.1285e-02,
          1.8607e-01,  9.3642e-02, -4.2455e-02, -1.4911e-01, -1.1072e-01,
         -8.3253e-02,  7.5289e-02, -2.3948e-01,  2.0880e-03,  1.2255e-01,
         -3.7391e-02,  1.9940e-01, -6.4294e-02,  8.2327e-02,  2.8537e-01,
          1.7512e-01,  5.6471e-02, -1.0429e-03,  5.5851e-02, -1.5137e-01,
          2.7481e-02,  8.3351e-02, -2.2144e-01, -4.1508e-02,  1.0518e-01,
          7.1653e-02]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
671000 特征值优化 tensor(0.5224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.1041e-02,  1.1949e+00,  1.0296e-01, -1.0738e+00,  2.2751e+00,
          7.9539e-01, -1.6838e+00, -1.6511e+00,  1.1408e+00,  5.0444e-02,
         -4.0805e-01, -6.4775e-01,  7.5924e-02,  8.4849e-01,  5.8936e-01,
         -1.0160e+00,  5.3259e-01, -6.6142e-02,  7.7937e-01, -1.2225e+00,
         -6.2530e-01, -4.5019e-02,  1.1068e-01,  6.1222e-01,  8.3639e-01,
         -6.8658e-01,  5.4418e-01,  7.8213e-01,  9.8203e-02,  3.2438e-01,
         -1.2867e-01,  1.5831e-01, -3.0132e-01, -3.5529e-01,  5.0492e-01,
         -2.0224e-01,  5.2510e-01, -4.5336e-01,  1.7166e-01,  5.8694e-03,
         -3.6673e-01,  4.7906e-02,  5.0726e-02,  2.0751e-01, -4.6767e-01,
         -2.8394e-01, -1.5563e-01, -4.0383e-01,  2.7424e-01,  2.0814e-01,
          6.9818e-02,  2.6868e-01, -1.1467e-01, -3.2639e-02, -1.3011e-01,
         -2.3329e-01, -1.6549e-01, -2.9918e-01, -6.8228e-01,  1.4269e-01,
         -1.5196e-01, -1.8989e-01,  1.1358e-01, -5.3197e-02, -6.6413e-02,
         -7.3702e-02,  4.2636e-02,  7.4491e-02, -1.4510e-01, -1.5080e-01,
          2.9444e-01,  2.1287e-01, -8.6511e-02, -7.5751e-02,  9.7800e-02,
          4.2729e-01, -4.6774e-03,  1.1535e-01, -2.9223e-01,  2.1271e-01,
         -9.7519e-03, -1.5711e-01, -2.0228e-01, -2.4005e-01,  2.3163e-02,
          6.8956e-02,  4.5529e-01, -3.0492e-01,  1.4109e-01, -4.8064e-01,
          3.7511e-02, -2.2624e-01, -1.5030e-01, -1.3370e-01,  3.7487e-02,
         -1.6279e-01,  8.1672e-01,  4.4365e-01,  1.3714e-01,  6.1982e-01,
         -3.6516e-01, -3.8505e-01,  4.5174e-01, -1.2771e-01, -7.4742e-02,
         -4.3685e-01,  6.6897e-04,  6.9219e-01, -6.8546e-01, -6.0808e-02,
          1.7406e-02, -4.2285e-02, -8.1247e-02,  6.9477e-02, -9.9092e-03,
          4.8487e-04,  6.3286e-02, -1.1319e-02, -1.8726e-02, -1.1938e-01,
          2.6059e-02,  3.2742e-02, -3.6977e-01,  4.6712e-02, -1.2016e-01,
          5.1329e-02,  1.6212e-01,  7.3528e-02, -1.2880e-01,  2.2735e-02,
          4.6733e-02,  6.2930e-02,  7.4561e-02, -7.2628e-02, -3.6707e-02,
          1.4728e-01,  8.7949e-02, -5.3895e-02, -1.2718e-01, -1.5725e-01,
         -7.8179e-02,  6.6133e-02, -2.1963e-01, -2.6217e-02,  8.8589e-02,
         -2.9633e-02,  1.9204e-01, -6.8121e-02,  5.1485e-02,  2.3869e-01,
          1.8494e-01,  4.0637e-02, -1.5402e-02,  6.3257e-02, -1.7442e-01,
          4.3142e-02,  3.4581e-02, -2.4321e-01, -3.9625e-02,  1.0115e-01,
          6.4462e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
672000 特征值优化 tensor(0.5314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.9121e-02,  1.2467e+00,  2.8697e-02, -1.0648e+00,  2.2567e+00,
          8.0525e-01, -1.6699e+00, -1.6581e+00,  1.1408e+00,  4.1224e-02,
         -4.2007e-01, -6.7131e-01,  5.2456e-02,  8.5049e-01,  5.9558e-01,
         -1.0266e+00,  4.8592e-01, -7.2783e-02,  7.6945e-01, -1.2422e+00,
         -6.2207e-01, -1.4024e-02,  9.3244e-02,  6.1008e-01,  8.3386e-01,
         -6.7224e-01,  5.1377e-01,  7.7267e-01,  7.2239e-02,  2.9815e-01,
         -1.2054e-01,  1.4887e-01, -3.0474e-01, -3.5519e-01,  5.1893e-01,
         -2.2352e-01,  5.4527e-01, -4.4421e-01,  1.7615e-01,  1.8415e-02,
         -3.5709e-01,  4.7404e-02,  5.0878e-02,  1.7854e-01, -4.3764e-01,
         -2.8766e-01, -1.6033e-01, -4.2583e-01,  2.6816e-01,  2.0340e-01,
          8.1549e-02,  2.6504e-01, -1.1168e-01, -6.4450e-02, -1.3518e-01,
         -2.3953e-01, -1.7021e-01, -3.0827e-01, -6.8888e-01,  1.5464e-01,
         -1.4136e-01, -1.8129e-01,  9.4730e-02, -3.8795e-02, -5.7291e-02,
         -8.0276e-02,  2.4399e-02,  5.5128e-02, -1.5791e-01, -1.4153e-01,
          2.8440e-01,  2.0966e-01, -9.4568e-02, -5.1036e-02,  9.4972e-02,
          4.1504e-01, -2.0780e-03,  1.2130e-01, -2.8880e-01,  2.1239e-01,
         -1.7871e-02, -1.5262e-01, -1.9610e-01, -2.3793e-01,  1.1057e-02,
          6.8606e-02,  4.4606e-01, -3.2002e-01,  1.4732e-01, -5.2074e-01,
          4.6012e-02, -2.3916e-01, -1.7104e-01, -1.2961e-01,  5.2358e-02,
         -1.5088e-01,  8.3184e-01,  4.2479e-01,  1.2605e-01,  6.5762e-01,
         -3.4621e-01, -3.9773e-01,  4.5157e-01, -1.3526e-01, -6.3373e-02,
         -4.5773e-01, -5.8083e-03,  6.8069e-01, -6.7874e-01, -5.3005e-02,
          1.1361e-02, -4.9325e-02, -6.8751e-02,  6.5810e-02, -7.6696e-03,
         -3.6711e-03,  5.9966e-02, -1.2067e-02, -1.7004e-02, -1.2022e-01,
          2.2763e-02,  5.0392e-02, -3.5931e-01,  6.2788e-02, -1.2854e-01,
          4.9703e-02,  1.6086e-01,  6.1190e-02, -1.3428e-01,  2.4449e-02,
          4.6057e-02,  6.6149e-02,  6.7919e-02, -8.3020e-02, -2.8502e-02,
          1.7441e-01,  7.6314e-02, -5.4008e-02, -1.4620e-01, -1.6264e-01,
         -7.4201e-02,  6.7077e-02, -2.3929e-01, -4.9451e-02,  8.8511e-02,
         -2.2617e-02,  1.9852e-01, -8.1553e-02,  5.4854e-02,  2.3948e-01,
          1.6894e-01,  4.4147e-02, -2.1137e-02,  6.0744e-02, -1.7284e-01,
          5.1427e-02,  3.6389e-02, -2.4221e-01, -5.1123e-02,  9.5413e-02,
          6.4434e-02]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
673000 特征值优化 tensor(0.5322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0474,  1.2976, -0.0228, -1.0667,  2.2768,  0.8279, -1.6630, -1.6640,
          1.1329,  0.0318, -0.4028, -0.6722,  0.0366,  0.8544,  0.5998, -1.0302,
          0.4755, -0.0808,  0.7861, -1.2588, -0.6268, -0.0120,  0.0788,  0.6063,
          0.8322, -0.6676,  0.4861,  0.7534,  0.0658,  0.2862, -0.1090,  0.1618,
         -0.3162, -0.3563,  0.5402, -0.2364,  0.5521, -0.4450,  0.1682,  0.0252,
         -0.3541,  0.0458,  0.0477,  0.1709, -0.4301, -0.2818, -0.1430, -0.4319,
          0.2654,  0.1859,  0.0946,  0.2705, -0.1169, -0.0831, -0.1267, -0.2350,
         -0.1876, -0.3050, -0.6974,  0.1555, -0.1410, -0.1754,  0.0762, -0.0293,
         -0.0434, -0.0876,  0.0062,  0.0403, -0.1658, -0.1334,  0.2791,  0.2092,
         -0.0956, -0.0343,  0.0933,  0.4202, -0.0089,  0.1159, -0.2859,  0.2105,
         -0.0289, -0.1567, -0.1874, -0.2340,  0.0072,  0.0713,  0.4404, -0.3361,
          0.1754, -0.5395,  0.0470, -0.2229, -0.1822, -0.1205,  0.0451, -0.1364,
          0.8479,  0.4307,  0.1455,  0.6440, -0.3372, -0.4072,  0.4278, -0.1363,
         -0.0530, -0.4709, -0.0051,  0.6725, -0.6629, -0.0521,  0.0165, -0.0640,
         -0.0528,  0.0624, -0.0178,  0.0102,  0.0685, -0.0104, -0.0192, -0.1089,
          0.0248,  0.0630, -0.3555,  0.0662, -0.1339,  0.0531,  0.1672,  0.0577,
         -0.1388,  0.0354,  0.0347,  0.0680,  0.0654, -0.0857, -0.0227,  0.1798,
          0.0753, -0.0517, -0.1495, -0.1605, -0.0793,  0.0635, -0.2376, -0.0436,
          0.0862, -0.0161,  0.2055, -0.0839,  0.0572,  0.2406,  0.1638,  0.0381,
         -0.0173,  0.0729, -0.1786,  0.0425,  0.0436, -0.2433, -0.0565,  0.0938,
          0.0572]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
674000 特征值优化 tensor(0.5262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7003e-02,  1.3569e+00, -7.0729e-02, -1.0677e+00,  2.2839e+00,
          8.5036e-01, -1.6789e+00, -1.6488e+00,  1.0986e+00,  2.2502e-02,
         -3.7973e-01, -6.8347e-01,  2.1704e-02,  8.5657e-01,  5.8533e-01,
         -1.0373e+00,  4.9209e-01, -8.8366e-02,  7.9451e-01, -1.2513e+00,
         -6.1793e-01, -2.0006e-03,  6.5086e-02,  6.0703e-01,  8.6311e-01,
         -6.7105e-01,  4.7864e-01,  7.1980e-01,  7.0714e-02,  2.8053e-01,
         -1.1105e-01,  1.7296e-01, -3.2001e-01, -3.4328e-01,  5.5430e-01,
         -2.4767e-01,  5.6340e-01, -4.4096e-01,  1.6939e-01,  4.1934e-02,
         -3.5409e-01,  4.5106e-02,  5.1252e-02,  1.6658e-01, -4.2430e-01,
         -2.7722e-01, -1.4499e-01, -4.2912e-01,  2.5605e-01,  1.7743e-01,
          1.0062e-01,  2.6888e-01, -1.2045e-01, -8.8020e-02, -1.2636e-01,
         -2.4363e-01, -1.9952e-01, -3.0851e-01, -7.0306e-01,  1.5813e-01,
         -1.3928e-01, -1.7595e-01,  4.8750e-02, -1.4405e-02, -4.2789e-02,
         -9.8536e-02, -7.9960e-03,  2.2525e-02, -1.6712e-01, -1.1935e-01,
          2.7237e-01,  2.0261e-01, -9.5361e-02, -1.7121e-02,  8.8155e-02,
          4.2950e-01, -1.9072e-02,  1.1390e-01, -2.8039e-01,  2.1036e-01,
         -4.1818e-02, -1.5982e-01, -1.8685e-01, -2.2648e-01,  1.3330e-02,
          7.2086e-02,  4.3833e-01, -3.5708e-01,  1.8732e-01, -5.3674e-01,
          6.3434e-02, -2.3753e-01, -2.0636e-01, -1.2499e-01,  2.8535e-02,
         -1.1334e-01,  8.6096e-01,  4.2107e-01,  1.3216e-01,  6.3511e-01,
         -3.3679e-01, -4.2215e-01,  4.0962e-01, -1.3214e-01, -4.3121e-02,
         -4.6798e-01, -3.4279e-02,  6.6068e-01, -6.3698e-01, -5.1591e-02,
          2.3057e-02, -7.6786e-02, -4.4103e-02,  5.3686e-02, -1.9966e-02,
          1.5632e-02,  6.5450e-02, -1.6064e-02, -1.4345e-02, -1.0614e-01,
          1.9528e-02,  8.0818e-02, -3.5813e-01,  6.9586e-02, -1.2958e-01,
          4.8621e-02,  1.6691e-01,  4.9642e-02, -1.3975e-01,  4.5512e-02,
          2.6295e-02,  7.7484e-02,  6.3073e-02, -9.7021e-02, -2.4104e-02,
          1.8142e-01,  5.2409e-02, -4.0806e-02, -1.3771e-01, -1.8417e-01,
         -8.5800e-02,  6.6373e-02, -2.3853e-01, -5.9597e-02,  7.0068e-02,
         -1.0078e-03,  2.1077e-01, -7.4877e-02,  5.7710e-02,  2.4853e-01,
          1.5600e-01,  3.0415e-02, -3.1855e-02,  8.7576e-02, -1.9079e-01,
          4.9273e-02,  4.5893e-02, -2.4241e-01, -5.9206e-02,  9.7054e-02,
          6.7952e-02]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
675000 特征值优化 tensor(0.5237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.0324e-04,  1.4146e+00, -1.4547e-01, -1.0725e+00,  2.2824e+00,
          8.6538e-01, -1.7052e+00, -1.6688e+00,  1.0757e+00,  1.1355e-02,
         -3.5965e-01, -6.9425e-01,  1.9353e-02,  8.6973e-01,  5.7516e-01,
         -1.0351e+00,  4.9105e-01, -9.4065e-02,  8.0922e-01, -1.2642e+00,
         -6.2638e-01,  1.2418e-02,  4.7855e-02,  5.9470e-01,  8.7169e-01,
         -6.8131e-01,  4.6288e-01,  7.0812e-01,  7.1920e-02,  2.7049e-01,
         -1.1413e-01,  1.8269e-01, -3.1855e-01, -3.4451e-01,  5.5579e-01,
         -2.5763e-01,  5.6092e-01, -4.3879e-01,  1.5806e-01,  3.9972e-02,
         -3.4204e-01,  4.6681e-02,  4.9789e-02,  1.5081e-01, -4.1437e-01,
         -2.8489e-01, -1.3987e-01, -4.1929e-01,  2.5951e-01,  1.7679e-01,
          1.1130e-01,  2.7145e-01, -1.1197e-01, -8.1437e-02, -1.2374e-01,
         -2.2650e-01, -2.0674e-01, -3.2008e-01, -7.0864e-01,  1.5800e-01,
         -1.4418e-01, -1.7206e-01,  1.9835e-02, -1.9234e-02, -4.6434e-02,
         -1.0584e-01, -2.6503e-02,  1.5499e-02, -1.7387e-01, -1.1320e-01,
          2.6430e-01,  2.1120e-01, -8.4359e-02, -1.1476e-02,  9.6499e-02,
          4.2451e-01, -2.6693e-02,  9.5223e-02, -2.8610e-01,  1.9329e-01,
         -4.7089e-02, -1.6734e-01, -1.8492e-01, -2.2186e-01,  2.6433e-02,
          6.7861e-02,  4.3648e-01, -3.7192e-01,  1.9311e-01, -5.2904e-01,
          5.9999e-02, -2.3412e-01, -2.1167e-01, -1.1226e-01,  3.0603e-02,
         -9.7637e-02,  8.7827e-01,  4.3561e-01,  1.3214e-01,  6.3324e-01,
         -3.3623e-01, -4.3232e-01,  3.8872e-01, -1.4017e-01, -1.9211e-02,
         -4.6383e-01, -4.5089e-02,  6.5716e-01, -6.0038e-01, -5.0533e-02,
          3.4223e-02, -9.1366e-02, -4.8782e-02,  5.0171e-02, -2.6348e-02,
          2.2026e-02,  6.7164e-02, -1.7369e-02, -1.8352e-02, -9.8498e-02,
          3.2744e-02,  8.1261e-02, -3.5681e-01,  7.1627e-02, -1.3051e-01,
          6.0427e-02,  1.7152e-01,  4.8070e-02, -1.4100e-01,  4.8811e-02,
          2.5712e-02,  7.6449e-02,  6.3982e-02, -9.9224e-02, -2.3473e-02,
          1.6272e-01,  4.0797e-02, -4.0894e-02, -1.2919e-01, -1.9613e-01,
         -7.1709e-02,  7.2775e-02, -2.2807e-01, -5.5989e-02,  5.7908e-02,
          1.0512e-03,  2.0706e-01, -8.7347e-02,  6.0221e-02,  2.5328e-01,
          1.5086e-01,  1.3812e-02, -3.2067e-02,  8.6367e-02, -1.8939e-01,
          4.4779e-02,  5.0646e-02, -2.4815e-01, -6.2178e-02,  9.2372e-02,
          6.1188e-02]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
676000 特征值优化 tensor(0.5204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1489e-02,  1.4533e+00, -2.0756e-01, -1.0734e+00,  2.2853e+00,
          8.9497e-01, -1.6996e+00, -1.6781e+00,  1.0675e+00, -1.3380e-04,
         -3.2549e-01, -7.0813e-01, -7.1310e-03,  8.8096e-01,  5.6849e-01,
         -1.0493e+00,  4.8332e-01, -9.2515e-02,  8.3712e-01, -1.2710e+00,
         -6.2208e-01,  1.1892e-02,  2.4396e-02,  6.0388e-01,  8.8323e-01,
         -6.8546e-01,  4.3154e-01,  7.0036e-01,  7.1059e-02,  2.6023e-01,
         -1.1563e-01,  2.0716e-01, -2.9874e-01, -3.3579e-01,  5.7700e-01,
         -2.6915e-01,  5.7228e-01, -4.3381e-01,  1.4414e-01,  5.9218e-02,
         -3.2581e-01,  4.6154e-02,  4.8419e-02,  1.4019e-01, -4.0825e-01,
         -2.7625e-01, -1.4110e-01, -4.1585e-01,  2.4801e-01,  1.6954e-01,
          1.2789e-01,  2.6276e-01, -1.0939e-01, -9.4067e-02, -1.3617e-01,
         -2.2023e-01, -2.1662e-01, -3.0028e-01, -7.1838e-01,  1.5080e-01,
         -1.4496e-01, -1.7640e-01, -1.5726e-03,  1.5819e-04, -2.6786e-02,
         -1.0722e-01, -4.1081e-02,  8.9182e-03, -1.7450e-01, -1.0082e-01,
          2.6708e-01,  1.9488e-01, -8.6484e-02,  6.9789e-03,  8.3301e-02,
          4.3225e-01, -4.1613e-02,  1.1157e-01, -2.7516e-01,  1.9627e-01,
         -5.4263e-02, -1.6442e-01, -1.8518e-01, -2.1593e-01,  9.4633e-03,
          8.2911e-02,  4.1858e-01, -3.8701e-01,  1.8778e-01, -5.4370e-01,
          6.9031e-02, -2.2306e-01, -2.2169e-01, -1.1992e-01,  1.1497e-02,
         -7.2257e-02,  8.9061e-01,  4.1961e-01,  1.2961e-01,  6.0090e-01,
         -3.1861e-01, -4.4663e-01,  3.6515e-01, -1.3353e-01, -1.3008e-02,
         -4.4844e-01, -6.1959e-02,  6.4626e-01, -5.9270e-01, -4.6563e-02,
          4.2519e-02, -9.9849e-02, -2.6719e-02,  4.5252e-02, -2.5046e-02,
          1.2240e-02,  6.8941e-02, -1.2114e-02, -1.3239e-02, -1.0498e-01,
          3.8095e-02,  9.5362e-02, -3.5386e-01,  6.6295e-02, -1.2698e-01,
          6.9080e-02,  1.6766e-01,  4.5905e-02, -1.4523e-01,  5.0118e-02,
          9.3108e-03,  8.5242e-02,  6.3686e-02, -1.0051e-01, -2.9065e-02,
          1.5976e-01,  1.5046e-02, -1.5470e-02, -1.5005e-01, -1.8119e-01,
         -7.9260e-02,  9.0442e-02, -2.4907e-01, -5.2054e-02,  7.8917e-02,
          8.5272e-03,  2.1291e-01, -7.9934e-02,  5.9676e-02,  2.4326e-01,
          1.3833e-01,  2.8694e-02, -3.1299e-02,  9.2723e-02, -1.8973e-01,
          3.4900e-02,  5.7789e-02, -2.4799e-01, -6.5981e-02,  9.7238e-02,
          5.7716e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
677000 特征值优化 tensor(0.5192, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0500,  1.5281, -0.2811, -1.0751,  2.2725,  0.9277, -1.7203, -1.6940,
          1.0418, -0.0065, -0.3120, -0.7345,  0.0070,  0.8769,  0.5433, -1.0479,
          0.4916, -0.0952,  0.8505, -1.2511, -0.6523,  0.0284,  0.0144,  0.6335,
          0.9209, -0.6947,  0.4363,  0.6688,  0.0958,  0.2507, -0.1343,  0.2056,
         -0.3060, -0.3158,  0.5671, -0.2899,  0.5643, -0.4263,  0.1397,  0.0474,
         -0.3208,  0.0459,  0.0490,  0.1231, -0.3947, -0.2717, -0.1364, -0.4098,
          0.2510,  0.1760,  0.1394,  0.2715, -0.0929, -0.0820, -0.1397, -0.2066,
         -0.2423, -0.3160, -0.7182,  0.1615, -0.1427, -0.1715, -0.0138, -0.0108,
         -0.0405, -0.1170, -0.0565, -0.0068, -0.1830, -0.1049,  0.2550,  0.1951,
         -0.0819,  0.0106,  0.1035,  0.4183, -0.0538,  0.1163, -0.2950,  0.1838,
         -0.0655, -0.1603, -0.1721, -0.1906,  0.0320,  0.0853,  0.4233, -0.4016,
          0.2234, -0.5129,  0.0721, -0.2162, -0.2111, -0.1358,  0.0099, -0.0535,
          0.8983,  0.4445,  0.0751,  0.6092, -0.3147, -0.4485,  0.3314, -0.1319,
          0.0170, -0.4450, -0.0539,  0.6306, -0.5702, -0.0439,  0.0420, -0.1156,
         -0.0428,  0.0468, -0.0330,  0.0279,  0.0580, -0.0182, -0.0203, -0.0931,
          0.0481,  0.0920, -0.3544,  0.0713, -0.1208,  0.0698,  0.1602,  0.0493,
         -0.1357,  0.0595,  0.0183,  0.0851,  0.0641, -0.0978, -0.0179,  0.1728,
          0.0389, -0.0421, -0.1397, -0.2166, -0.0734,  0.0723, -0.2095, -0.0529,
          0.0479,  0.0153,  0.2079, -0.0625,  0.0525,  0.2526,  0.1435,  0.0204,
         -0.0478,  0.1028, -0.1994,  0.0417,  0.0528, -0.2413, -0.0688,  0.1013,
          0.0713]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
678000 特征值优化 tensor(0.5187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.7885e-02,  1.5600e+00, -3.4712e-01, -1.0751e+00,  2.2908e+00,
          9.5026e-01, -1.7251e+00, -1.6860e+00,  1.0367e+00, -1.9476e-02,
         -2.9745e-01, -7.6048e-01, -1.9864e-03,  8.6559e-01,  5.4795e-01,
         -1.0564e+00,  4.9124e-01, -9.0845e-02,  8.6114e-01, -1.2655e+00,
         -6.5363e-01,  4.5736e-02, -1.9433e-04,  6.3274e-01,  9.2821e-01,
         -6.9333e-01,  4.2370e-01,  6.6593e-01,  1.0450e-01,  2.4623e-01,
         -1.4029e-01,  2.1987e-01, -3.0970e-01, -2.9667e-01,  5.6787e-01,
         -3.0367e-01,  5.6648e-01, -4.2157e-01,  1.3087e-01,  5.4649e-02,
         -3.0808e-01,  4.7319e-02,  5.0492e-02,  1.0594e-01, -3.9092e-01,
         -2.7141e-01, -1.4786e-01, -4.0177e-01,  2.5148e-01,  1.8350e-01,
          1.5220e-01,  2.6775e-01, -8.9050e-02, -7.8501e-02, -1.4657e-01,
         -1.8963e-01, -2.5157e-01, -3.2504e-01, -7.2638e-01,  1.6220e-01,
         -1.4736e-01, -1.6206e-01, -2.9265e-02, -1.3575e-02, -3.8791e-02,
         -1.1954e-01, -6.6465e-02, -9.0109e-03, -1.8278e-01, -9.2665e-02,
          2.4536e-01,  1.9002e-01, -8.1381e-02,  1.7984e-02,  1.0707e-01,
          4.1165e-01, -6.6337e-02,  1.0983e-01, -2.9326e-01,  1.7799e-01,
         -7.4355e-02, -1.7084e-01, -1.7220e-01, -1.9555e-01,  2.9501e-02,
          8.1058e-02,  4.1644e-01, -4.1132e-01,  2.1347e-01, -4.9834e-01,
          7.2781e-02, -2.0166e-01, -1.9834e-01, -1.3940e-01,  1.0795e-02,
         -3.5567e-02,  9.0300e-01,  4.4665e-01,  6.3875e-02,  6.0059e-01,
         -3.0747e-01, -4.6269e-01,  3.0677e-01, -1.2648e-01,  2.3209e-02,
         -4.3190e-01, -6.9749e-02,  6.2871e-01, -5.5272e-01, -4.6282e-02,
          5.0377e-02, -1.1779e-01, -3.8811e-02,  3.8740e-02, -3.1693e-02,
          3.1761e-02,  5.4944e-02, -1.1446e-02, -2.8654e-02, -9.2582e-02,
          4.9528e-02,  9.3725e-02, -3.5243e-01,  7.0720e-02, -1.1323e-01,
          7.4802e-02,  1.6889e-01,  4.6584e-02, -1.3258e-01,  6.1147e-02,
          9.6489e-03,  8.3099e-02,  6.8822e-02, -9.9291e-02, -2.0265e-02,
          1.5974e-01,  2.5759e-02, -2.4783e-02, -1.3796e-01, -2.2059e-01,
         -6.5821e-02,  8.0074e-02, -2.1249e-01, -5.5386e-02,  4.8745e-02,
          4.2716e-03,  1.9983e-01, -7.3698e-02,  6.0802e-02,  2.5291e-01,
          1.2789e-01,  1.1170e-02, -4.3861e-02,  8.7431e-02, -1.9719e-01,
          5.0590e-02,  5.3241e-02, -2.4960e-01, -6.4371e-02,  9.9730e-02,
          7.2341e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
679000 特征值优化 tensor(0.5192, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0831,  1.5793, -0.3784, -1.0753,  2.3134,  0.9648, -1.7321, -1.7117,
          1.0331, -0.0275, -0.2762, -0.7717, -0.0054,  0.8730,  0.5421, -1.0722,
          0.4866, -0.0898,  0.8790, -1.2652, -0.6570,  0.0598, -0.0088,  0.6379,
          0.9389, -0.6941,  0.4044,  0.6413,  0.1002,  0.2401, -0.1367,  0.2261,
         -0.2961, -0.2944,  0.5709, -0.3103,  0.5621, -0.4093,  0.1295,  0.0474,
         -0.2964,  0.0473,  0.0498,  0.0971, -0.3825, -0.2697, -0.1463, -0.4050,
          0.2553,  0.1956,  0.1536,  0.2670, -0.0882, -0.0803, -0.1510, -0.1866,
         -0.2543, -0.3146, -0.7417,  0.1664, -0.1453, -0.1503, -0.0544, -0.0098,
         -0.0359, -0.1166, -0.0762, -0.0109, -0.1882, -0.0983,  0.2422,  0.1804,
         -0.0781,  0.0316,  0.0993,  0.4162, -0.0708,  0.0992, -0.2906,  0.1734,
         -0.0774, -0.1658, -0.1717, -0.1963,  0.0199,  0.0917,  0.4089, -0.4196,
          0.2093, -0.4905,  0.0710, -0.1936, -0.1991, -0.1355,  0.0120, -0.0290,
          0.9041,  0.4627,  0.0641,  0.5938, -0.2856, -0.4716,  0.2997, -0.1243,
          0.0348, -0.4395, -0.0616,  0.6258, -0.5428, -0.0465,  0.0585, -0.1218,
         -0.0337,  0.0374, -0.0294,  0.0250,  0.0557, -0.0048, -0.0322, -0.0947,
          0.0511,  0.0926, -0.3498,  0.0693, -0.1131,  0.0801,  0.1650,  0.0467,
         -0.1357,  0.0614,  0.0093,  0.0841,  0.0667, -0.1012, -0.0236,  0.1764,
          0.0173, -0.0327, -0.1446, -0.2110, -0.0561,  0.0755, -0.2199, -0.0576,
          0.0542,  0.0079,  0.2030, -0.0677,  0.0579,  0.2523,  0.1242,  0.0144,
         -0.0444,  0.0926, -0.1956,  0.0478,  0.0467, -0.2416, -0.0651,  0.1010,
          0.0699]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
680000 特征值优化 tensor(0.5190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0885,  1.5830, -0.4116, -1.0744,  2.3411,  0.9737, -1.7451, -1.7159,
          1.0296, -0.0364, -0.2480, -0.7988, -0.0327,  0.8729,  0.5600, -1.0872,
          0.4761, -0.0751,  0.9028, -1.2666, -0.6485,  0.0577, -0.0097,  0.6348,
          0.9383, -0.6986,  0.4045,  0.6306,  0.1017,  0.2353, -0.1137,  0.2411,
         -0.2801, -0.2774,  0.5942, -0.3175,  0.5803, -0.4059,  0.1251,  0.0183,
         -0.3027,  0.0454,  0.0480,  0.0792, -0.3792, -0.2748, -0.1365, -0.4010,
          0.2536,  0.1873,  0.1592,  0.2552, -0.0977, -0.0785, -0.1434, -0.2046,
         -0.2348, -0.3127, -0.7546,  0.1661, -0.1311, -0.1463, -0.0836,  0.0040,
         -0.0084, -0.1190, -0.0750, -0.0180, -0.1945, -0.0978,  0.2439,  0.1674,
         -0.0779,  0.0156,  0.0866,  0.4235, -0.0834,  0.0839, -0.2559,  0.1618,
         -0.0709, -0.1736, -0.1717, -0.1989,  0.0127,  0.1060,  0.4084, -0.4150,
          0.1878, -0.5275,  0.0793, -0.1938, -0.2178, -0.1311,  0.0090, -0.0203,
          0.8981,  0.4307,  0.0932,  0.5929, -0.2916, -0.4785,  0.2873, -0.1190,
          0.0371, -0.4501, -0.0886,  0.6196, -0.5341, -0.0490,  0.0800, -0.1290,
         -0.0139,  0.0303, -0.0278,  0.0088,  0.0604, -0.0137, -0.0182, -0.1020,
          0.0435,  0.1019, -0.3414,  0.0679, -0.1091,  0.0833,  0.1637,  0.0349,
         -0.1396,  0.0601,  0.0134,  0.0751,  0.0621, -0.0874, -0.0451,  0.1424,
         -0.0094, -0.0088, -0.1252, -0.2010, -0.0831,  0.0898, -0.2308, -0.0513,
          0.0841,  0.0061,  0.1999, -0.0697,  0.0525,  0.2465,  0.1018,  0.0062,
         -0.0422,  0.0872, -0.1839,  0.0471,  0.0291, -0.2470, -0.0582,  0.0902,
          0.0775]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
681000 特征值优化 tensor(0.5202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0935,  1.5964, -0.4272, -1.0745,  2.3363,  0.9940, -1.7661, -1.7265,
          1.0156, -0.0395, -0.2489, -0.7952, -0.0083,  0.8599,  0.5464, -1.1002,
          0.4773, -0.0834,  0.9172, -1.2695, -0.6615,  0.0833, -0.0230,  0.6397,
          0.9575, -0.7010,  0.4063,  0.6139,  0.1238,  0.2312, -0.1292,  0.2396,
         -0.2918, -0.2766,  0.5741, -0.3167,  0.5606, -0.4032,  0.1175,  0.0325,
         -0.2829,  0.0477,  0.0504,  0.0850, -0.3728, -0.2722, -0.1287, -0.4051,
          0.2407,  0.1935,  0.1498,  0.2661, -0.0834, -0.0772, -0.1536, -0.1877,
         -0.2557, -0.3160, -0.7464,  0.1782, -0.1360, -0.1321, -0.0897, -0.0066,
         -0.0278, -0.1188, -0.0921, -0.0159, -0.2012, -0.1046,  0.2327,  0.1707,
         -0.0732,  0.0396,  0.0966,  0.4081, -0.0778,  0.0872, -0.2775,  0.1590,
         -0.0831, -0.1682, -0.1701, -0.1936,  0.0149,  0.1051,  0.3998, -0.4277,
          0.1996, -0.4962,  0.0820, -0.1998, -0.1962, -0.1317,  0.0108, -0.0151,
          0.9017,  0.4521,  0.0761,  0.5857, -0.2828, -0.4820,  0.2735, -0.1089,
          0.0516, -0.4442, -0.0738,  0.6217, -0.5134, -0.0456,  0.0613, -0.1297,
         -0.0250,  0.0338, -0.0288,  0.0222,  0.0597, -0.0096, -0.0292, -0.0964,
          0.0534,  0.0865, -0.3393,  0.0730, -0.1173,  0.0798,  0.1606,  0.0399,
         -0.1369,  0.0670,  0.0170,  0.0774,  0.0713, -0.1020, -0.0262,  0.1579,
          0.0135, -0.0182, -0.1369, -0.2142, -0.0547,  0.0692, -0.2129, -0.0608,
          0.0572,  0.0049,  0.1972, -0.0707,  0.0542,  0.2557,  0.1065,  0.0037,
         -0.0518,  0.0862, -0.1906,  0.0546,  0.0319, -0.2438, -0.0709,  0.0995,
          0.0803]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
682000 特征值优化 tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.4133e-02,  1.5725e+00, -4.6331e-01, -1.0749e+00,  2.3426e+00,
          1.0247e+00, -1.7549e+00, -1.7302e+00,  1.0341e+00, -4.8775e-02,
         -2.3272e-01, -8.0418e-01, -3.4259e-02,  8.7836e-01,  5.5107e-01,
         -1.0975e+00,  4.7157e-01, -8.1341e-02,  9.2083e-01, -1.2890e+00,
         -6.5248e-01,  7.9897e-02, -3.5608e-02,  6.4355e-01,  9.4621e-01,
         -7.0068e-01,  3.8048e-01,  6.2144e-01,  1.1888e-01,  2.2574e-01,
         -1.1091e-01,  2.5537e-01, -2.7816e-01, -2.7233e-01,  5.9161e-01,
         -3.1010e-01,  5.7403e-01, -3.9086e-01,  1.0722e-01,  4.0487e-02,
         -2.7645e-01,  4.7572e-02,  5.1025e-02,  7.5867e-02, -3.7156e-01,
         -2.5884e-01, -1.3289e-01, -4.0655e-01,  2.5221e-01,  1.8783e-01,
          1.5206e-01,  2.5563e-01, -8.4591e-02, -7.5138e-02, -1.5949e-01,
         -1.8914e-01, -2.4488e-01, -3.0184e-01, -7.5348e-01,  1.6580e-01,
         -1.4254e-01, -1.2929e-01, -1.0245e-01,  4.0074e-03, -1.0761e-02,
         -1.1880e-01, -9.0763e-02, -8.6221e-03, -1.9764e-01, -8.3157e-02,
          2.3353e-01,  1.5508e-01, -7.4674e-02,  3.5801e-02,  8.8624e-02,
          4.2097e-01, -7.7946e-02,  8.6244e-02, -2.6946e-01,  1.6375e-01,
         -7.1855e-02, -1.7351e-01, -1.7660e-01, -1.9809e-01,  8.7565e-03,
          1.1660e-01,  3.8710e-01, -4.2183e-01,  1.8405e-01, -5.2066e-01,
          8.5325e-02, -1.9840e-01, -2.1066e-01, -1.4574e-01,  1.0870e-02,
         -5.6036e-03,  9.0295e-01,  4.5283e-01,  8.0715e-02,  5.6951e-01,
         -2.8214e-01, -4.9648e-01,  2.7344e-01, -1.0234e-01,  4.8865e-02,
         -4.3370e-01, -8.7907e-02,  6.1873e-01, -5.1284e-01, -4.4753e-02,
          6.7892e-02, -1.2014e-01, -1.7433e-02,  2.7917e-02, -1.7330e-02,
          9.9590e-03,  7.1426e-02, -3.3523e-03, -2.7545e-02, -1.0050e-01,
          5.1717e-02,  9.7729e-02, -3.3918e-01,  7.2873e-02, -1.0636e-01,
          7.9221e-02,  1.6437e-01,  3.8810e-02, -1.2755e-01,  5.5255e-02,
          1.0613e-02,  8.9477e-02,  6.5933e-02, -9.8806e-02, -3.8094e-02,
          1.3605e-01,  6.5475e-03,  1.3374e-03, -1.4996e-01, -1.7580e-01,
         -7.8485e-02,  7.0543e-02, -2.3928e-01, -5.9143e-02,  7.8502e-02,
          3.6824e-03,  1.9481e-01, -7.8731e-02,  7.5209e-02,  2.4057e-01,
          1.0106e-01,  3.7778e-03, -4.4688e-02,  8.5614e-02, -1.9304e-01,
          4.5727e-02,  4.3865e-02, -2.4985e-01, -6.0924e-02,  9.6349e-02,
          7.3190e-02]], device='cuda:0') tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
683000 特征值优化 tensor(0.5311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1868e-01,  1.5775e+00, -4.9868e-01, -1.0676e+00,  2.3529e+00,
          1.0322e+00, -1.7762e+00, -1.7449e+00,  1.0416e+00, -5.8883e-02,
         -2.2138e-01, -8.0120e-01, -3.4756e-02,  8.7083e-01,  5.4788e-01,
         -1.0976e+00,  4.7136e-01, -8.2734e-02,  9.2492e-01, -1.2889e+00,
         -6.5785e-01,  8.5710e-02, -3.7207e-02,  6.4729e-01,  9.5818e-01,
         -7.0456e-01,  3.7917e-01,  5.9718e-01,  1.1517e-01,  2.2442e-01,
         -1.0902e-01,  2.5867e-01, -2.8435e-01, -2.6142e-01,  5.9821e-01,
         -3.0426e-01,  5.7171e-01, -3.9300e-01,  1.0486e-01,  3.2238e-02,
         -2.6248e-01,  4.5484e-02,  4.7940e-02,  6.4672e-02, -3.6627e-01,
         -2.5809e-01, -1.2949e-01, -4.0580e-01,  2.4940e-01,  1.8365e-01,
          1.5537e-01,  2.6185e-01, -8.9064e-02, -6.3100e-02, -1.5135e-01,
         -1.9710e-01, -2.4327e-01, -3.0425e-01, -7.5530e-01,  1.5724e-01,
         -1.3128e-01, -1.1622e-01, -1.0706e-01,  2.0270e-04, -1.4149e-02,
         -1.1753e-01, -9.5952e-02, -1.2345e-02, -1.9692e-01, -8.7221e-02,
          2.2810e-01,  1.5641e-01, -7.1064e-02,  4.0247e-02,  9.0945e-02,
          4.1396e-01, -8.6515e-02,  8.8045e-02, -2.7083e-01,  1.5907e-01,
         -7.3727e-02, -1.7926e-01, -1.6727e-01, -1.9215e-01,  4.9235e-03,
          1.1315e-01,  3.9079e-01, -4.3033e-01,  1.8142e-01, -5.1728e-01,
          9.0309e-02, -2.0586e-01, -2.0941e-01, -1.4434e-01,  1.1482e-02,
         -1.4932e-03,  9.0327e-01,  4.4703e-01,  7.2880e-02,  5.7209e-01,
         -2.8548e-01, -4.9746e-01,  2.9217e-01, -1.0413e-01,  6.0854e-02,
         -4.3329e-01, -9.3386e-02,  6.1034e-01, -5.1243e-01, -4.5288e-02,
          6.6032e-02, -1.2622e-01, -2.7156e-02,  3.0696e-02, -2.2412e-02,
          1.2375e-02,  7.8537e-02, -7.2002e-03, -3.1606e-02, -9.8130e-02,
          4.6195e-02,  9.3535e-02, -3.3854e-01,  7.1136e-02, -1.1015e-01,
          7.7268e-02,  1.6389e-01,  4.3024e-02, -1.3167e-01,  5.9275e-02,
          1.6836e-02,  8.5736e-02,  6.2509e-02, -9.6282e-02, -3.3606e-02,
          1.4233e-01,  4.3306e-03, -3.3317e-03, -1.4693e-01, -1.8440e-01,
         -7.1468e-02,  6.3816e-02, -2.3117e-01, -6.2552e-02,  6.9392e-02,
          1.2420e-02,  1.8791e-01, -7.8120e-02,  6.6789e-02,  2.4511e-01,
          1.0052e-01,  5.6225e-03, -5.5253e-02,  8.4578e-02, -1.8502e-01,
          5.3788e-02,  3.9796e-02, -2.4309e-01, -5.8990e-02,  9.7909e-02,
          8.0095e-02]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
684000 特征值优化 tensor(0.5301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3631e-01,  1.5819e+00, -5.2190e-01, -1.0667e+00,  2.3600e+00,
          1.0423e+00, -1.7946e+00, -1.7573e+00,  1.0451e+00, -6.4478e-02,
         -2.1350e-01, -8.0260e-01, -3.5089e-02,  8.7032e-01,  5.4367e-01,
         -1.1029e+00,  4.7253e-01, -8.5711e-02,  9.3607e-01, -1.2913e+00,
         -6.5350e-01,  8.5496e-02, -4.2347e-02,  6.5732e-01,  9.6979e-01,
         -7.0809e-01,  3.7420e-01,  5.8538e-01,  1.1390e-01,  2.1823e-01,
         -9.9811e-02,  2.6421e-01, -2.8273e-01, -2.5536e-01,  5.9900e-01,
         -2.9696e-01,  5.7191e-01, -3.8824e-01,  1.0139e-01,  2.6590e-02,
         -2.5374e-01,  4.6619e-02,  4.7626e-02,  6.0032e-02, -3.5986e-01,
         -2.5753e-01, -1.2494e-01, -4.0802e-01,  2.4497e-01,  1.8295e-01,
          1.5139e-01,  2.6508e-01, -8.4529e-02, -6.0457e-02, -1.4865e-01,
         -1.9417e-01, -2.4209e-01, -3.0468e-01, -7.5616e-01,  1.5328e-01,
         -1.2783e-01, -1.0783e-01, -1.1392e-01,  4.9437e-04, -1.0266e-02,
         -1.1831e-01, -1.0352e-01, -1.1936e-02, -1.9716e-01, -8.8123e-02,
          2.2551e-01,  1.5130e-01, -6.6430e-02,  4.5310e-02,  9.0759e-02,
          4.1510e-01, -8.8704e-02,  8.4135e-02, -2.6917e-01,  1.5462e-01,
         -7.6204e-02, -1.7821e-01, -1.6377e-01, -1.8913e-01,  4.3819e-03,
          1.1491e-01,  3.9007e-01, -4.3720e-01,  1.7620e-01, -5.1293e-01,
          9.2621e-02, -2.1076e-01, -2.0845e-01, -1.4671e-01,  1.0884e-02,
          4.7950e-03,  9.0439e-01,  4.5164e-01,  6.9102e-02,  5.6120e-01,
         -2.8665e-01, -4.9942e-01,  2.9766e-01, -1.0307e-01,  6.8812e-02,
         -4.3028e-01, -1.0401e-01,  6.0239e-01, -5.0776e-01, -4.4082e-02,
          6.8190e-02, -1.2977e-01, -2.8655e-02,  3.1193e-02, -2.6177e-02,
          1.1493e-02,  8.1722e-02, -6.6357e-03, -3.2576e-02, -9.9337e-02,
          4.5666e-02,  9.3653e-02, -3.3721e-01,  6.9118e-02, -1.0717e-01,
          7.4169e-02,  1.6231e-01,  4.5850e-02, -1.3157e-01,  6.0570e-02,
          1.8198e-02,  8.7314e-02,  6.1273e-02, -9.7594e-02, -3.4934e-02,
          1.4285e-01,  1.8571e-03, -8.4483e-03, -1.4704e-01, -1.8755e-01,
         -6.8894e-02,  6.0091e-02, -2.2960e-01, -6.3649e-02,  6.3173e-02,
          1.2592e-02,  1.9065e-01, -8.0134e-02,  6.3729e-02,  2.4582e-01,
          9.4156e-02,  7.2538e-03, -5.5528e-02,  8.2856e-02, -1.8545e-01,
          5.2043e-02,  4.1766e-02, -2.4295e-01, -5.9346e-02,  9.8799e-02,
          8.1648e-02]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
685000 正交保障 tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4752e-01,  1.5776e+00, -5.3506e-01, -1.0747e+00,  2.3630e+00,
          1.0615e+00, -1.7934e+00, -1.7523e+00,  1.0474e+00, -7.3663e-02,
         -2.1579e-01, -8.2423e-01, -4.1481e-02,  8.7562e-01,  5.4524e-01,
         -1.1169e+00,  4.7701e-01, -8.7789e-02,  9.4870e-01, -1.2993e+00,
         -6.4407e-01,  8.3145e-02, -4.9737e-02,  6.6625e-01,  9.7292e-01,
         -6.9802e-01,  3.5753e-01,  5.9714e-01,  1.2242e-01,  2.1220e-01,
         -9.0789e-02,  2.7702e-01, -2.7210e-01, -2.4636e-01,  6.0184e-01,
         -2.8818e-01,  5.7047e-01, -3.8306e-01,  9.3395e-02,  3.6757e-02,
         -2.4903e-01,  4.8019e-02,  5.0716e-02,  6.0145e-02, -3.5467e-01,
         -2.5360e-01, -1.1828e-01, -4.0227e-01,  2.4949e-01,  1.7737e-01,
          1.4730e-01,  2.6663e-01, -7.8564e-02, -6.0318e-02, -1.5059e-01,
         -1.8600e-01, -2.4407e-01, -3.0283e-01, -7.5737e-01,  1.4779e-01,
         -1.3697e-01, -1.0032e-01, -1.3049e-01,  6.0115e-03, -4.1535e-03,
         -1.1743e-01, -1.0052e-01, -3.9475e-03, -1.9960e-01, -8.0789e-02,
          2.3324e-01,  1.4100e-01, -6.4217e-02,  3.7400e-02,  9.3797e-02,
          4.1760e-01, -8.2313e-02,  8.0721e-02, -2.7176e-01,  1.6004e-01,
         -7.2423e-02, -1.7085e-01, -1.7422e-01, -1.9094e-01,  8.2561e-03,
          1.2846e-01,  3.7864e-01, -4.3502e-01,  1.8006e-01, -5.2957e-01,
          9.5573e-02, -2.1167e-01, -2.1280e-01, -1.5331e-01,  1.0721e-02,
          1.1618e-02,  9.0329e-01,  4.7026e-01,  6.7653e-02,  5.4845e-01,
         -2.6384e-01, -5.0766e-01,  2.8986e-01, -9.5879e-02,  6.9588e-02,
         -4.2464e-01, -1.1242e-01,  6.0195e-01, -5.0348e-01, -4.2085e-02,
          7.6959e-02, -1.2543e-01, -2.0145e-02,  2.6202e-02, -1.4089e-02,
          9.6833e-03,  7.9967e-02, -5.9249e-03, -2.2468e-02, -1.0004e-01,
          5.3655e-02,  9.4135e-02, -3.3695e-01,  6.6697e-02, -9.7144e-02,
          7.7877e-02,  1.6297e-01,  4.7245e-02, -1.2478e-01,  5.8185e-02,
          1.3600e-02,  9.5377e-02,  5.7409e-02, -1.0400e-01, -4.5037e-02,
          1.2133e-01,  1.9521e-02, -7.7244e-04, -1.5523e-01, -1.7624e-01,
         -6.9003e-02,  6.2537e-02, -2.4001e-01, -6.5106e-02,  5.7987e-02,
          5.2861e-03,  1.9502e-01, -8.1647e-02,  6.7201e-02,  2.3931e-01,
          9.1451e-02,  5.8159e-03, -4.0134e-02,  7.8383e-02, -1.9497e-01,
          5.0504e-02,  4.3435e-02, -2.4764e-01, -6.0586e-02,  9.6448e-02,
          7.2520e-02]], device='cuda:0') tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
686000 特征值优化 tensor(0.5290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1735,  1.5821, -0.5633, -1.0667,  2.3697,  1.0663, -1.8123, -1.7552,
          1.0438, -0.0814, -0.2163, -0.8281, -0.0336,  0.8664,  0.5537, -1.1153,
          0.4722, -0.0969,  0.9507, -1.2976, -0.6441,  0.0923, -0.0486,  0.6696,
          0.9816, -0.6955,  0.3642,  0.5788,  0.1165,  0.2102, -0.0965,  0.2722,
         -0.2840, -0.2375,  0.5996, -0.2876,  0.5684, -0.3855,  0.0944,  0.0242,
         -0.2391,  0.0465,  0.0478,  0.0467, -0.3528, -0.2533, -0.1196, -0.4068,
          0.2440,  0.1779,  0.1467,  0.2693, -0.0838, -0.0551, -0.1444, -0.1895,
         -0.2364, -0.3048, -0.7542,  0.1458, -0.1301, -0.0967, -0.1321,  0.0037,
         -0.0126, -0.1221, -0.1100, -0.0123, -0.2027, -0.0850,  0.2264,  0.1482,
         -0.0588,  0.0457,  0.0861,  0.4113, -0.0934,  0.0853, -0.2597,  0.1509,
         -0.0757, -0.1749, -0.1642, -0.1942,  0.0047,  0.1204,  0.3830, -0.4451,
          0.1793, -0.5093,  0.0934, -0.2142, -0.2097, -0.1488,  0.0111,  0.0145,
          0.9029,  0.4502,  0.0556,  0.5562, -0.2902, -0.5086,  0.2951, -0.0993,
          0.0750, -0.4319, -0.1076,  0.5985, -0.4935, -0.0368,  0.0678, -0.1271,
         -0.0322,  0.0240, -0.0233,  0.0055,  0.0840, -0.0098, -0.0290, -0.1011,
          0.0410,  0.0922, -0.3349,  0.0715, -0.1071,  0.0751,  0.1655,  0.0506,
         -0.1323,  0.0610,  0.0177,  0.0883,  0.0616, -0.0995, -0.0370,  0.1394,
          0.0052, -0.0108, -0.1425, -0.1942, -0.0658,  0.0648, -0.2287, -0.0660,
          0.0579,  0.0084,  0.1853, -0.0843,  0.0639,  0.2455,  0.0892,  0.0058,
         -0.0583,  0.0761, -0.1864,  0.0543,  0.0441, -0.2419, -0.0599,  0.0949,
          0.0819]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
687000 特征值优化 tensor(0.5303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8448e-01,  1.5848e+00, -5.8878e-01, -1.0647e+00,  2.3687e+00,
          1.0771e+00, -1.8187e+00, -1.7655e+00,  1.0380e+00, -8.8430e-02,
         -2.1329e-01, -8.2949e-01, -4.6234e-02,  8.7239e-01,  5.4595e-01,
         -1.1120e+00,  4.6865e-01, -9.7058e-02,  9.5864e-01, -1.3004e+00,
         -6.4726e-01,  9.3676e-02, -5.5759e-02,  6.6830e-01,  9.8489e-01,
         -6.9800e-01,  3.5669e-01,  5.7170e-01,  1.1999e-01,  2.0942e-01,
         -9.8882e-02,  2.7285e-01, -2.7547e-01, -2.3073e-01,  6.0311e-01,
         -2.8282e-01,  5.6955e-01, -3.8194e-01,  8.8882e-02,  2.4216e-02,
         -2.3425e-01,  4.6089e-02,  4.8622e-02,  3.7618e-02, -3.5188e-01,
         -2.5387e-01, -1.1526e-01, -4.0491e-01,  2.4287e-01,  1.7977e-01,
          1.4774e-01,  2.6715e-01, -7.9354e-02, -5.3886e-02, -1.4361e-01,
         -1.8458e-01, -2.3932e-01, -3.0576e-01, -7.5877e-01,  1.4147e-01,
         -1.3096e-01, -9.6398e-02, -1.3288e-01,  4.3669e-03, -8.0331e-03,
         -1.2307e-01, -1.1024e-01, -9.7667e-03, -2.0304e-01, -8.3864e-02,
          2.2284e-01,  1.4630e-01, -5.7651e-02,  4.5936e-02,  8.4036e-02,
          4.0823e-01, -9.8800e-02,  8.4588e-02, -2.5943e-01,  1.5138e-01,
         -7.7682e-02, -1.7440e-01, -1.6185e-01, -1.9089e-01,  1.5282e-03,
          1.2201e-01,  3.7572e-01, -4.4481e-01,  1.8365e-01, -5.1570e-01,
          9.3888e-02, -2.0657e-01, -2.1132e-01, -1.5579e-01,  1.2828e-02,
          2.0505e-02,  9.0338e-01,  4.5155e-01,  4.8238e-02,  5.5839e-01,
         -2.9720e-01, -5.1369e-01,  2.8490e-01, -9.7781e-02,  8.0195e-02,
         -4.3121e-01, -1.1464e-01,  5.9620e-01, -4.8324e-01, -3.6596e-02,
          6.9109e-02, -1.2349e-01, -3.0698e-02,  2.6192e-02, -2.7882e-02,
          4.6257e-03,  8.5924e-02, -1.2408e-02, -2.5722e-02, -1.0027e-01,
          4.7827e-02,  9.1580e-02, -3.3531e-01,  7.0186e-02, -1.0600e-01,
          7.7258e-02,  1.6724e-01,  5.1602e-02, -1.3131e-01,  6.5824e-02,
          1.4718e-02,  9.0980e-02,  5.9937e-02, -1.0150e-01, -3.9541e-02,
          1.3347e-01,  5.3971e-03, -7.6308e-03, -1.4443e-01, -1.9570e-01,
         -6.5171e-02,  6.0913e-02, -2.3330e-01, -6.6509e-02,  6.0020e-02,
          1.1130e-02,  1.8627e-01, -8.1837e-02,  6.1986e-02,  2.4633e-01,
          8.6199e-02,  2.0070e-03, -5.5068e-02,  7.6109e-02, -1.8966e-01,
          5.4584e-02,  4.3801e-02, -2.4337e-01, -6.1705e-02,  9.4760e-02,
          7.9878e-02]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
688000 特征值优化 tensor(0.5288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8610e-01,  1.5958e+00, -6.1335e-01, -1.0660e+00,  2.3649e+00,
          1.0940e+00, -1.8274e+00, -1.7649e+00,  1.0461e+00, -9.2518e-02,
         -2.0917e-01, -8.2980e-01, -4.5524e-02,  8.7266e-01,  5.4782e-01,
         -1.1158e+00,  4.6722e-01, -1.0217e-01,  9.6512e-01, -1.3044e+00,
         -6.4795e-01,  9.9677e-02, -6.0259e-02,  6.7463e-01,  9.9102e-01,
         -6.9741e-01,  3.4806e-01,  5.6280e-01,  1.1844e-01,  2.0813e-01,
         -9.2314e-02,  2.7040e-01, -2.7462e-01, -2.2257e-01,  6.0547e-01,
         -2.8308e-01,  5.6879e-01, -3.8279e-01,  8.2975e-02,  1.8110e-02,
         -2.2840e-01,  4.7274e-02,  4.7725e-02,  3.4254e-02, -3.5118e-01,
         -2.5079e-01, -1.1666e-01, -4.0329e-01,  2.4270e-01,  1.7872e-01,
          1.4686e-01,  2.6781e-01, -7.8891e-02, -5.5273e-02, -1.4120e-01,
         -1.8420e-01, -2.4190e-01, -3.0684e-01, -7.5927e-01,  1.4060e-01,
         -1.2485e-01, -9.6543e-02, -1.3646e-01,  3.2253e-03, -8.0956e-03,
         -1.2174e-01, -1.1347e-01, -8.8723e-03, -2.0110e-01, -8.4044e-02,
          2.2080e-01,  1.4656e-01, -5.7228e-02,  5.2481e-02,  8.3048e-02,
          4.0838e-01, -9.7311e-02,  8.7239e-02, -2.5662e-01,  1.4884e-01,
         -8.0360e-02, -1.7438e-01, -1.6143e-01, -1.9000e-01,  6.2115e-03,
          1.2197e-01,  3.7816e-01, -4.4754e-01,  1.8464e-01, -5.0960e-01,
          9.5075e-02, -2.0818e-01, -2.0686e-01, -1.5726e-01,  1.2595e-02,
          2.7338e-02,  9.0174e-01,  4.5502e-01,  3.9922e-02,  5.5086e-01,
         -2.9887e-01, -5.1714e-01,  2.8226e-01, -9.7386e-02,  8.3042e-02,
         -4.2972e-01, -1.1325e-01,  5.9082e-01, -4.8215e-01, -3.5889e-02,
          7.1242e-02, -1.2928e-01, -3.1388e-02,  2.5584e-02, -2.9495e-02,
          5.7521e-03,  8.6954e-02, -1.2989e-02, -2.6650e-02, -1.0050e-01,
          4.5799e-02,  9.4521e-02, -3.3623e-01,  6.9936e-02, -1.0550e-01,
          7.7052e-02,  1.6508e-01,  5.1959e-02, -1.3185e-01,  6.2992e-02,
          1.6917e-02,  9.0862e-02,  6.0165e-02, -1.0193e-01, -3.7663e-02,
          1.4040e-01,  1.0123e-03, -1.2024e-02, -1.4473e-01, -1.9571e-01,
         -6.5184e-02,  6.4604e-02, -2.3099e-01, -6.6001e-02,  5.7454e-02,
          1.2262e-02,  1.8720e-01, -7.9514e-02,  6.0309e-02,  2.4635e-01,
          8.6127e-02,  2.2303e-03, -5.6632e-02,  7.7568e-02, -1.8656e-01,
          5.3069e-02,  4.4191e-02, -2.4123e-01, -6.2127e-02,  9.4853e-02,
          8.2053e-02]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
689000 特征值优化 tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8400e-01,  1.6003e+00, -6.3542e-01, -1.0745e+00,  2.3734e+00,
          1.1159e+00, -1.8222e+00, -1.7650e+00,  1.0508e+00, -9.7976e-02,
         -2.0285e-01, -8.3698e-01, -6.0326e-02,  8.8447e-01,  5.3854e-01,
         -1.1201e+00,  4.6319e-01, -1.0147e-01,  9.7545e-01, -1.3100e+00,
         -6.4262e-01,  9.5304e-02, -6.9115e-02,  6.6810e-01,  9.9217e-01,
         -6.8857e-01,  3.2596e-01,  5.6086e-01,  1.2652e-01,  2.0486e-01,
         -8.8314e-02,  2.8439e-01, -2.6127e-01, -2.2473e-01,  6.1092e-01,
         -2.7651e-01,  5.7303e-01, -3.7581e-01,  8.0910e-02,  3.2270e-02,
         -2.2384e-01,  4.7081e-02,  4.8993e-02,  3.3421e-02, -3.4947e-01,
         -2.4657e-01, -1.1240e-01, -3.9775e-01,  2.4894e-01,  1.7983e-01,
          1.4784e-01,  2.6408e-01, -7.8733e-02, -5.7863e-02, -1.4200e-01,
         -1.7520e-01, -2.4360e-01, -2.9563e-01, -7.6487e-01,  1.3654e-01,
         -1.2808e-01, -9.6063e-02, -1.4486e-01,  7.1475e-03,  2.4531e-03,
         -1.1943e-01, -1.1432e-01, -5.7946e-03, -2.0668e-01, -7.6932e-02,
          2.2514e-01,  1.3867e-01, -5.9039e-02,  4.9043e-02,  8.2387e-02,
          4.1700e-01, -9.9420e-02,  8.6479e-02, -2.4309e-01,  1.5227e-01,
         -7.6529e-02, -1.6916e-01, -1.6459e-01, -1.9452e-01,  1.0955e-02,
          1.3602e-01,  3.6837e-01, -4.3909e-01,  1.8655e-01, -5.2403e-01,
          9.4258e-02, -2.0188e-01, -2.1608e-01, -1.7084e-01,  1.0492e-02,
          3.5331e-02,  9.0197e-01,  4.4931e-01,  4.5647e-02,  5.5303e-01,
         -2.9237e-01, -5.2623e-01,  2.7092e-01, -9.1541e-02,  8.3245e-02,
         -4.2492e-01, -1.1986e-01,  5.9221e-01, -4.7859e-01, -3.5075e-02,
          7.7038e-02, -1.2037e-01, -2.3685e-02,  2.1640e-02, -2.3461e-02,
          5.4174e-03,  8.5513e-02, -7.0346e-03, -2.3885e-02, -1.0373e-01,
          5.1297e-02,  9.8381e-02, -3.3381e-01,  6.7346e-02, -9.7336e-02,
          8.2245e-02,  1.6652e-01,  5.4967e-02, -1.2726e-01,  6.3706e-02,
          9.9439e-03,  9.4250e-02,  5.5154e-02, -1.0480e-01, -4.6280e-02,
          1.1806e-01,  8.8004e-03, -1.2578e-03, -1.5109e-01, -1.8524e-01,
         -7.0120e-02,  7.0101e-02, -2.3969e-01, -6.6439e-02,  6.8435e-02,
          7.2695e-03,  1.9658e-01, -8.4328e-02,  7.0540e-02,  2.4304e-01,
          7.8572e-02,  6.3532e-04, -4.1480e-02,  7.7982e-02, -1.9683e-01,
          4.9116e-02,  5.1604e-02, -2.4411e-01, -6.0328e-02,  9.8852e-02,
          7.3234e-02]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
690000 特征值优化 tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8721e-01,  1.6057e+00, -6.5135e-01, -1.0750e+00,  2.3721e+00,
          1.1273e+00, -1.8309e+00, -1.7597e+00,  1.0626e+00, -1.0182e-01,
         -1.9967e-01, -8.2822e-01, -6.0744e-02,  8.7426e-01,  5.5097e-01,
         -1.1233e+00,  4.5906e-01, -1.0548e-01,  9.7869e-01, -1.3164e+00,
         -6.4149e-01,  1.0230e-01, -6.9996e-02,  6.7363e-01,  9.9583e-01,
         -6.8514e-01,  3.2350e-01,  5.5311e-01,  1.2535e-01,  2.0560e-01,
         -7.6626e-02,  2.8494e-01, -2.5831e-01, -2.1659e-01,  6.1074e-01,
         -2.7918e-01,  5.6944e-01, -3.7478e-01,  8.2892e-02,  3.0658e-02,
         -2.1971e-01,  4.8002e-02,  5.0355e-02,  3.1648e-02, -3.4941e-01,
         -2.4735e-01, -1.0908e-01, -3.9904e-01,  2.4738e-01,  1.7820e-01,
          1.4877e-01,  2.6637e-01, -7.9154e-02, -6.0937e-02, -1.4013e-01,
         -1.7607e-01, -2.5295e-01, -2.9931e-01, -7.6703e-01,  1.3729e-01,
         -1.2015e-01, -9.6152e-02, -1.5450e-01,  6.5305e-03,  4.8957e-03,
         -1.1847e-01, -1.1241e-01, -5.9588e-03, -2.0932e-01, -7.9357e-02,
          2.2433e-01,  1.3861e-01, -5.7882e-02,  5.6402e-02,  8.2566e-02,
          4.1466e-01, -9.6762e-02,  9.0170e-02, -2.4001e-01,  1.5100e-01,
         -7.7886e-02, -1.6855e-01, -1.6387e-01, -1.8792e-01,  1.9021e-02,
          1.3478e-01,  3.6934e-01, -4.3852e-01,  1.7487e-01, -5.2826e-01,
          9.7038e-02, -2.0692e-01, -2.2041e-01, -1.7400e-01,  1.0419e-02,
          4.1302e-02,  8.9768e-01,  4.5817e-01,  2.9791e-02,  5.5111e-01,
         -2.8797e-01, -5.2730e-01,  2.7186e-01, -9.1150e-02,  8.5752e-02,
         -4.2771e-01, -1.1759e-01,  5.8789e-01, -4.8286e-01, -3.5157e-02,
          7.9327e-02, -1.2389e-01, -1.6659e-02,  2.1105e-02, -2.9191e-02,
          8.2812e-03,  8.2192e-02, -1.2879e-02, -1.5031e-02, -1.0472e-01,
          4.6830e-02,  9.7135e-02, -3.3338e-01,  6.8002e-02, -1.0026e-01,
          8.2379e-02,  1.6393e-01,  5.1727e-02, -1.2946e-01,  6.3360e-02,
          1.1818e-02,  9.1094e-02,  5.6818e-02, -1.0534e-01, -4.7126e-02,
          1.2449e-01,  5.6982e-03,  1.0519e-04, -1.4868e-01, -1.8605e-01,
         -7.1451e-02,  7.1254e-02, -2.2942e-01, -6.9009e-02,  6.0536e-02,
          6.4820e-03,  1.9597e-01, -8.6530e-02,  6.7873e-02,  2.4085e-01,
          7.4510e-02, -8.6985e-04, -4.3691e-02,  7.1223e-02, -1.9813e-01,
          4.7909e-02,  4.7318e-02, -2.4295e-01, -6.0976e-02,  9.8897e-02,
          7.4695e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
691000 特征值优化 tensor(0.5210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8119e-01,  1.6192e+00, -6.8224e-01, -1.0729e+00,  2.3702e+00,
          1.1180e+00, -1.8500e+00, -1.7627e+00,  1.0639e+00, -9.9590e-02,
         -2.0345e-01, -8.1650e-01, -3.8525e-02,  8.7250e-01,  5.2850e-01,
         -1.1214e+00,  4.4470e-01, -1.1366e-01,  9.8194e-01, -1.3109e+00,
         -6.5903e-01,  1.1668e-01, -6.7549e-02,  6.7803e-01,  1.0094e+00,
         -6.8255e-01,  3.3115e-01,  5.3563e-01,  1.1900e-01,  2.0682e-01,
         -9.4327e-02,  2.7397e-01, -2.7239e-01, -2.0685e-01,  6.0224e-01,
         -2.8115e-01,  5.6024e-01, -3.8282e-01,  8.2470e-02,  9.3980e-03,
         -2.1029e-01,  4.6368e-02,  4.9214e-02,  1.9644e-02, -3.4866e-01,
         -2.5343e-01, -1.1224e-01, -4.0603e-01,  2.3346e-01,  1.8599e-01,
          1.5106e-01,  2.7102e-01, -7.8751e-02, -5.2724e-02, -1.3187e-01,
         -1.7443e-01, -2.6241e-01, -3.0574e-01, -7.6756e-01,  1.3914e-01,
         -1.0432e-01, -8.3930e-02, -1.3662e-01, -4.5037e-03, -9.3315e-03,
         -1.2013e-01, -1.1850e-01, -1.3538e-02, -2.1557e-01, -8.8651e-02,
          2.1667e-01,  1.4977e-01, -5.4763e-02,  6.2103e-02,  9.0190e-02,
          3.9461e-01, -9.9030e-02,  8.8845e-02, -2.5001e-01,  1.4206e-01,
         -8.0026e-02, -1.7131e-01, -1.5381e-01, -1.9140e-01,  1.3973e-02,
          1.2455e-01,  3.8236e-01, -4.4835e-01,  1.9665e-01, -4.9145e-01,
          9.7244e-02, -2.0908e-01, -2.1189e-01, -1.6643e-01,  1.6287e-02,
          4.4923e-02,  9.0254e-01,  4.6844e-01,  3.0610e-03,  5.5552e-01,
         -3.0176e-01, -5.2683e-01,  2.8696e-01, -9.6322e-02,  9.8592e-02,
         -4.3525e-01, -1.1273e-01,  5.8242e-01, -4.7330e-01, -3.7611e-02,
          6.8995e-02, -1.3724e-01, -3.8199e-02,  2.7603e-02, -4.1716e-02,
         -1.0069e-03,  9.0389e-02, -1.6393e-02, -2.4544e-02, -9.8633e-02,
          4.6322e-02,  8.9547e-02, -3.3657e-01,  7.3154e-02, -1.0618e-01,
          8.1438e-02,  1.6331e-01,  5.4405e-02, -1.3638e-01,  6.7752e-02,
          1.9064e-02,  8.3031e-02,  6.1448e-02, -9.8442e-02, -3.5704e-02,
          1.5044e-01,  9.4193e-04, -2.6375e-02, -1.3437e-01, -2.1256e-01,
         -4.8142e-02,  6.5665e-02, -2.1559e-01, -6.1484e-02,  4.8828e-02,
          1.2243e-02,  1.9260e-01, -7.9083e-02,  5.8542e-02,  2.5281e-01,
          7.8723e-02, -1.0558e-02, -5.7104e-02,  7.2452e-02, -1.8539e-01,
          5.9928e-02,  5.3657e-02, -2.3883e-01, -5.3614e-02,  9.8379e-02,
          8.4041e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
692000 特征值优化 tensor(0.5218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7329e-01,  1.6303e+00, -7.0018e-01, -1.0724e+00,  2.3548e+00,
          1.1199e+00, -1.8583e+00, -1.7648e+00,  1.0812e+00, -9.6093e-02,
         -1.9825e-01, -8.1356e-01, -5.1590e-02,  8.7791e-01,  5.2583e-01,
         -1.1140e+00,  4.4559e-01, -1.0913e-01,  9.8879e-01, -1.3113e+00,
         -6.5988e-01,  1.1651e-01, -6.8741e-02,  6.7731e-01,  9.9836e-01,
         -6.9180e-01,  3.2527e-01,  5.2890e-01,  1.2224e-01,  2.0586e-01,
         -8.0678e-02,  2.8127e-01, -2.5635e-01, -1.9518e-01,  6.0788e-01,
         -2.7576e-01,  5.6476e-01, -3.7447e-01,  7.5908e-02,  7.1545e-03,
         -2.1364e-01,  4.7296e-02,  4.9462e-02,  1.7299e-02, -3.4879e-01,
         -2.4621e-01, -1.1583e-01, -4.0773e-01,  2.3218e-01,  1.8696e-01,
          1.4886e-01,  2.6752e-01, -7.8368e-02, -5.5288e-02, -1.2878e-01,
         -1.7833e-01, -2.6715e-01, -3.0796e-01, -7.7395e-01,  1.3620e-01,
         -1.0018e-01, -8.2649e-02, -1.3558e-01, -5.4564e-03, -7.0587e-03,
         -1.2144e-01, -1.2271e-01, -1.5231e-02, -2.1029e-01, -8.8779e-02,
          2.1656e-01,  1.4574e-01, -5.3039e-02,  6.5582e-02,  8.9667e-02,
          3.9548e-01, -1.0137e-01,  8.8467e-02, -2.5200e-01,  1.4232e-01,
         -7.7358e-02, -1.7059e-01, -1.5734e-01, -1.8865e-01,  2.3310e-02,
          1.2005e-01,  3.8187e-01, -4.4760e-01,  1.8572e-01, -4.8902e-01,
          9.3543e-02, -2.0720e-01, -2.1425e-01, -1.7823e-01,  1.3133e-02,
          5.1531e-02,  9.0673e-01,  4.6814e-01, -3.3137e-03,  5.5442e-01,
         -3.0512e-01, -5.2185e-01,  2.7792e-01, -9.4969e-02,  9.4972e-02,
         -4.2293e-01, -1.2494e-01,  5.7764e-01, -4.7477e-01, -3.8717e-02,
          7.1089e-02, -1.3260e-01, -4.6782e-02,  2.6291e-02, -4.5936e-02,
         -1.2273e-03,  9.8684e-02, -1.3743e-02, -2.1803e-02, -9.4776e-02,
          4.8543e-02,  9.0479e-02, -3.3245e-01,  7.1774e-02, -1.0570e-01,
          8.2695e-02,  1.6059e-01,  5.4837e-02, -1.3389e-01,  6.9336e-02,
          1.8491e-02,  8.4428e-02,  6.2424e-02, -9.6320e-02, -4.1628e-02,
          1.4835e-01,  1.3459e-03, -2.0310e-02, -1.3414e-01, -2.1232e-01,
         -4.7737e-02,  6.2187e-02, -2.1745e-01, -6.8314e-02,  4.5766e-02,
          1.2979e-02,  1.9715e-01, -8.0354e-02,  5.8911e-02,  2.5131e-01,
          7.6572e-02, -3.8050e-03, -5.2075e-02,  7.5219e-02, -1.9077e-01,
          5.7369e-02,  4.9500e-02, -2.3167e-01, -5.0823e-02,  1.0272e-01,
          7.5259e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
693000 正交保障 tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1547,  1.6448, -0.7201, -1.0751,  2.3594,  1.1314, -1.8719, -1.7400,
          1.0929, -0.0917, -0.1919, -0.8177, -0.0474,  0.8630,  0.5165, -1.1153,
          0.4566, -0.1147,  1.0039, -1.3180, -0.6498,  0.1257, -0.0749,  0.6753,
          0.9950, -0.6787,  0.3326,  0.5316,  0.1274,  0.2024, -0.0760,  0.2920,
         -0.2444, -0.1964,  0.6138, -0.2655,  0.5615, -0.3821,  0.0793, -0.0043,
         -0.2111,  0.0483,  0.0500,  0.0122, -0.3438, -0.2294, -0.1092, -0.4063,
          0.2227,  0.1850,  0.1476,  0.2657, -0.0725, -0.0528, -0.1227, -0.1754,
         -0.2640, -0.3197, -0.7749,  0.1261, -0.0921, -0.0847, -0.1467, -0.0061,
         -0.0118, -0.1232, -0.1139, -0.0182, -0.2121, -0.0878,  0.2248,  0.1445,
         -0.0504,  0.0514,  0.0879,  0.4023, -0.0980,  0.1047, -0.2518,  0.1502,
         -0.0723, -0.1740, -0.1666, -0.1831,  0.0377,  0.1171,  0.3892, -0.4442,
          0.1982, -0.4950,  0.0964, -0.2200, -0.2047, -0.1768,  0.0106,  0.0578,
          0.9054,  0.4664, -0.0084,  0.5381, -0.3105, -0.5312,  0.2865, -0.0938,
          0.0937, -0.4097, -0.1415,  0.5802, -0.4819, -0.0392,  0.0746, -0.1289,
         -0.0693,  0.0227, -0.0466, -0.0117,  0.0969, -0.0199, -0.0168, -0.0925,
          0.0357,  0.0909, -0.3336,  0.0747, -0.1071,  0.0850,  0.1655,  0.0590,
         -0.1414,  0.0659,  0.0154,  0.0803,  0.0676, -0.0893, -0.0546,  0.1252,
          0.0095, -0.0233, -0.1201, -0.2008, -0.0522,  0.0818, -0.2146, -0.0645,
          0.0473,  0.0065,  0.1859, -0.0740,  0.0532,  0.2475,  0.0748, -0.0079,
         -0.0537,  0.0785, -0.1853,  0.0520,  0.0475, -0.2386, -0.0561,  0.0977,
          0.0791]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
694000 特征值优化 tensor(0.5188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3223e-01,  1.6412e+00, -7.1703e-01, -1.0748e+00,  2.3929e+00,
          1.1385e+00, -1.8773e+00, -1.7423e+00,  1.1006e+00, -9.4655e-02,
         -2.1348e-01, -8.3167e-01, -5.2837e-02,  8.5639e-01,  5.0764e-01,
         -1.1114e+00,  4.3629e-01, -1.1032e-01,  9.9869e-01, -1.3258e+00,
         -6.3367e-01,  1.3359e-01, -8.2731e-02,  6.6031e-01,  1.0017e+00,
         -6.7623e-01,  3.1552e-01,  5.2974e-01,  1.3478e-01,  1.9791e-01,
         -5.7614e-02,  2.8780e-01, -2.4258e-01, -2.2132e-01,  6.1870e-01,
         -2.5855e-01,  5.7388e-01, -3.8394e-01,  7.2558e-02,  8.4913e-03,
         -1.9661e-01,  4.7394e-02,  4.8866e-02,  1.0127e-02, -3.4193e-01,
         -2.3514e-01, -1.0563e-01, -3.9952e-01,  2.4253e-01,  1.7503e-01,
          1.3238e-01,  2.6444e-01, -8.0377e-02, -5.8676e-02, -1.2688e-01,
         -1.6480e-01, -2.6254e-01, -3.0645e-01, -7.7196e-01,  1.3433e-01,
         -1.1381e-01, -8.8198e-02, -1.4700e-01,  4.4612e-03, -3.9994e-04,
         -1.1502e-01, -1.2070e-01, -5.9318e-03, -2.1522e-01, -7.9941e-02,
          2.1761e-01,  1.3650e-01, -5.0900e-02,  7.8680e-02,  7.7461e-02,
          4.0848e-01, -8.3025e-02,  1.0365e-01, -2.3048e-01,  1.3987e-01,
         -9.3003e-02, -1.6673e-01, -1.5295e-01, -2.0595e-01,  1.9177e-02,
          1.3163e-01,  3.7543e-01, -4.3965e-01,  1.7721e-01, -4.6987e-01,
          1.1354e-01, -2.2054e-01, -2.3433e-01, -1.5994e-01,  1.1299e-02,
          5.5846e-02,  9.0775e-01,  4.8628e-01,  3.3113e-02,  5.3284e-01,
         -2.7587e-01, -5.5671e-01,  2.9271e-01, -8.6348e-02,  7.9392e-02,
         -4.1418e-01, -1.4229e-01,  5.8225e-01, -4.8763e-01, -2.9166e-02,
          6.0948e-02, -1.3214e-01, -5.5926e-02,  1.8607e-02, -2.6075e-02,
          1.5836e-03,  8.3820e-02, -8.1511e-03, -2.5886e-02, -9.3539e-02,
          4.0236e-02,  9.8892e-02, -3.2768e-01,  7.1211e-02, -1.0921e-01,
          7.5541e-02,  1.6808e-01,  5.5560e-02, -1.4594e-01,  7.3728e-02,
          6.8011e-03,  8.5427e-02,  6.4782e-02, -1.1023e-01, -3.9003e-02,
          1.5525e-01, -1.6084e-02, -3.1366e-02, -1.5027e-01, -1.9640e-01,
         -5.1839e-02,  7.4122e-02, -2.3506e-01, -6.7289e-02,  5.8625e-02,
         -1.6309e-03,  1.9091e-01, -9.3344e-02,  7.3346e-02,  2.6247e-01,
          6.9030e-02,  9.1857e-05, -4.2707e-02,  7.1520e-02, -1.9570e-01,
          4.0696e-02,  5.5494e-02, -2.4935e-01, -6.5869e-02,  9.2294e-02,
          8.1553e-02]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
695000 特征值优化 tensor(0.5266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2044e-01,  1.6466e+00, -7.1459e-01, -1.0667e+00,  2.3791e+00,
          1.1159e+00, -1.8740e+00, -1.7431e+00,  1.0897e+00, -9.2385e-02,
         -2.0735e-01, -8.2743e-01, -7.2031e-02,  8.7272e-01,  5.2424e-01,
         -1.1357e+00,  4.4445e-01, -1.2021e-01,  1.0114e+00, -1.3199e+00,
         -6.3019e-01,  1.3894e-01, -8.0435e-02,  6.8617e-01,  9.8855e-01,
         -6.7633e-01,  3.1997e-01,  5.2275e-01,  1.2960e-01,  1.9050e-01,
         -6.6561e-02,  2.9364e-01, -2.2930e-01, -1.9907e-01,  6.1839e-01,
         -2.5221e-01,  5.7282e-01, -3.8741e-01,  6.9479e-02,  9.3385e-03,
         -2.0383e-01,  4.5631e-02,  4.6623e-02,  1.4097e-02, -3.3607e-01,
         -2.2619e-01, -1.0856e-01, -4.0859e-01,  2.3372e-01,  1.8180e-01,
          1.3740e-01,  2.7270e-01, -6.9507e-02, -5.0908e-02, -1.2603e-01,
         -1.7188e-01, -2.5449e-01, -3.0239e-01, -7.7673e-01,  1.2452e-01,
         -1.0599e-01, -8.9271e-02, -1.6014e-01,  3.4740e-03, -1.9545e-02,
         -1.2366e-01, -1.1381e-01, -3.1102e-04, -2.1184e-01, -9.0589e-02,
          2.2141e-01,  1.3955e-01, -4.9103e-02,  6.7200e-02,  7.5742e-02,
          3.9710e-01, -8.8674e-02,  9.4823e-02, -2.4107e-01,  1.4485e-01,
         -8.0363e-02, -1.6853e-01, -1.5799e-01, -1.9477e-01,  3.5983e-02,
          1.1956e-01,  3.8826e-01, -4.3550e-01,  1.9055e-01, -4.8705e-01,
          1.0877e-01, -2.1617e-01, -2.1667e-01, -1.6415e-01,  1.2064e-02,
          5.2440e-02,  9.0046e-01,  4.7419e-01,  2.0250e-02,  5.3589e-01,
         -2.9660e-01, -5.4182e-01,  2.9387e-01, -9.1359e-02,  8.7360e-02,
         -4.1742e-01, -1.2301e-01,  5.7634e-01, -4.8501e-01, -2.7987e-02,
          7.1465e-02, -1.3370e-01, -4.3734e-02,  1.2614e-02, -4.0875e-02,
         -3.5820e-03,  8.5429e-02, -1.7513e-03, -2.3769e-02, -9.7910e-02,
          3.2714e-02,  9.9733e-02, -3.2489e-01,  7.2332e-02, -1.0672e-01,
          8.2452e-02,  1.6125e-01,  6.2710e-02, -1.4430e-01,  7.2955e-02,
          1.1082e-02,  8.0176e-02,  6.9436e-02, -1.0729e-01, -4.7004e-02,
          1.5290e-01, -1.7197e-03, -3.4913e-02, -1.3462e-01, -2.0111e-01,
         -4.6628e-02,  7.4215e-02, -2.2886e-01, -7.6954e-02,  4.7698e-02,
          7.7250e-03,  2.0119e-01, -7.5607e-02,  6.4672e-02,  2.5954e-01,
          7.4555e-02, -5.8233e-04, -5.1391e-02,  6.7774e-02, -1.8982e-01,
          5.3393e-02,  4.7401e-02, -2.4956e-01, -7.2457e-02,  9.4366e-02,
          8.7978e-02]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
696000 特征值优化 tensor(0.5318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3345e-01,  1.6569e+00, -7.0148e-01, -1.0682e+00,  2.3680e+00,
          1.1133e+00, -1.8529e+00, -1.7316e+00,  1.0809e+00, -9.4628e-02,
         -1.9562e-01, -8.0847e-01, -8.3143e-02,  8.8666e-01,  5.2977e-01,
         -1.1256e+00,  4.3881e-01, -1.1351e-01,  1.0208e+00, -1.3142e+00,
         -6.3490e-01,  1.4133e-01, -7.5932e-02,  6.8032e-01,  9.9487e-01,
         -6.7500e-01,  3.0616e-01,  5.3021e-01,  1.2624e-01,  1.9792e-01,
         -5.9077e-02,  2.8763e-01, -2.4147e-01, -1.9462e-01,  6.2352e-01,
         -2.5499e-01,  5.7655e-01, -3.8519e-01,  6.9754e-02,  6.0118e-03,
         -2.0038e-01,  4.6206e-02,  4.7964e-02,  1.5757e-02, -3.4115e-01,
         -2.3455e-01, -1.0193e-01, -4.1412e-01,  2.3247e-01,  1.7254e-01,
          1.3717e-01,  2.6566e-01, -6.9520e-02, -4.5763e-02, -1.2872e-01,
         -1.8188e-01, -2.6094e-01, -3.2119e-01, -7.7432e-01,  1.2657e-01,
         -1.0710e-01, -8.3655e-02, -1.5809e-01,  2.9117e-03, -1.1664e-02,
         -1.1838e-01, -1.1980e-01,  2.9638e-03, -2.1211e-01, -8.8007e-02,
          2.2177e-01,  1.3114e-01, -5.2912e-02,  7.3762e-02,  7.5801e-02,
          3.9982e-01, -8.9510e-02,  9.3739e-02, -2.3691e-01,  1.4441e-01,
         -8.6855e-02, -1.6708e-01, -1.5289e-01, -1.9614e-01,  1.7626e-02,
          1.2369e-01,  3.7199e-01, -4.4189e-01,  1.8625e-01, -4.8207e-01,
          1.1002e-01, -2.1899e-01, -2.1651e-01, -1.6099e-01,  1.1989e-02,
          5.0896e-02,  9.0913e-01,  4.6777e-01,  7.4592e-03,  5.3042e-01,
         -2.9737e-01, -5.4279e-01,  3.0880e-01, -8.9466e-02,  8.1081e-02,
         -4.2074e-01, -1.3999e-01,  5.8107e-01, -4.9681e-01, -3.0592e-02,
          6.1997e-02, -1.3297e-01, -4.0284e-02,  1.8227e-02, -3.7285e-02,
          7.8535e-04,  9.2942e-02, -2.0494e-03, -2.1113e-02, -1.0031e-01,
          4.1096e-02,  9.8608e-02, -3.2110e-01,  7.1886e-02, -1.0233e-01,
          8.1527e-02,  1.5789e-01,  6.1012e-02, -1.4518e-01,  7.1117e-02,
          1.1391e-02,  8.3105e-02,  6.2329e-02, -1.0994e-01, -4.1586e-02,
          1.4124e-01, -1.0558e-02, -2.3289e-02, -1.3548e-01, -2.1148e-01,
         -5.5271e-02,  8.0018e-02, -2.4085e-01, -6.9835e-02,  5.2433e-02,
          4.8167e-03,  1.9961e-01, -7.2050e-02,  6.3625e-02,  2.5755e-01,
          5.9180e-02,  1.1447e-02, -5.0451e-02,  6.3388e-02, -1.8912e-01,
          5.7427e-02,  3.9804e-02, -2.4889e-01, -5.9792e-02,  8.9973e-02,
          8.5872e-02]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
697000 特征值优化 tensor(0.5186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6273e-01,  1.6786e+00, -6.9590e-01, -1.0759e+00,  2.3395e+00,
          1.1004e+00, -1.8572e+00, -1.7362e+00,  1.0918e+00, -9.8104e-02,
         -1.9048e-01, -8.0288e-01, -9.6900e-02,  8.8887e-01,  5.2347e-01,
         -1.1311e+00,  4.3611e-01, -1.1656e-01,  1.0262e+00, -1.3183e+00,
         -6.2720e-01,  1.3652e-01, -7.6785e-02,  6.8788e-01,  9.8715e-01,
         -6.8303e-01,  3.1793e-01,  5.2016e-01,  1.4028e-01,  1.9585e-01,
         -6.1464e-02,  2.9920e-01, -2.2761e-01, -1.8884e-01,  6.1881e-01,
         -2.5631e-01,  5.6273e-01, -3.7104e-01,  8.5690e-02, -4.9698e-03,
         -2.1938e-01,  4.8195e-02,  4.9968e-02,  1.5087e-02, -3.3944e-01,
         -2.2490e-01, -1.0359e-01, -4.0675e-01,  2.4510e-01,  1.8591e-01,
          1.3092e-01,  2.6748e-01, -5.1920e-02, -4.6360e-02, -1.3284e-01,
         -1.8096e-01, -2.6407e-01, -3.2093e-01, -7.7853e-01,  1.3272e-01,
         -8.8607e-02, -8.7729e-02, -1.6261e-01,  1.0094e-02, -8.4249e-04,
         -1.1842e-01, -1.0933e-01, -6.3150e-03, -2.1912e-01, -8.4668e-02,
          2.2345e-01,  1.2606e-01, -5.2330e-02,  5.9439e-02,  9.2460e-02,
          3.9071e-01, -9.7216e-02,  1.0636e-01, -2.5188e-01,  1.4825e-01,
         -8.0265e-02, -1.6245e-01, -1.5957e-01, -1.8773e-01,  2.8940e-02,
          1.2777e-01,  3.7847e-01, -4.3587e-01,  1.8538e-01, -5.0601e-01,
          1.0086e-01, -2.2813e-01, -2.0742e-01, -1.7473e-01,  1.1583e-02,
          5.1310e-02,  9.0964e-01,  4.6892e-01,  2.2298e-02,  5.3446e-01,
         -3.2518e-01, -5.2862e-01,  3.1316e-01, -9.1227e-02,  9.2854e-02,
         -4.2584e-01, -1.2674e-01,  5.7265e-01, -5.0652e-01, -3.2164e-02,
          7.0403e-02, -1.2881e-01, -4.8608e-02,  2.3769e-02, -2.9126e-02,
         -7.5907e-03,  9.2189e-02,  2.2397e-03, -1.8488e-02, -9.7735e-02,
          4.8400e-02,  9.8178e-02, -3.2837e-01,  7.4722e-02, -9.7558e-02,
          7.1478e-02,  1.6180e-01,  6.7986e-02, -1.4135e-01,  7.2783e-02,
          1.2008e-02,  8.6687e-02,  5.8363e-02, -1.0183e-01, -5.3996e-02,
          1.5415e-01,  9.5543e-03, -5.5954e-02, -1.2722e-01, -2.1034e-01,
         -6.7229e-02,  7.5381e-02, -2.1434e-01, -7.5201e-02,  4.6856e-02,
          1.9198e-03,  2.0551e-01, -8.3731e-02,  4.7431e-02,  2.4766e-01,
          6.9017e-02,  5.8339e-03, -6.0580e-02,  7.7199e-02, -2.0166e-01,
          4.7613e-02,  4.4909e-02, -2.4132e-01, -6.5363e-02,  1.0976e-01,
          8.1146e-02]], device='cuda:0') tensor(0.2132, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
698000 特征值优化 tensor(0.5244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5833e-01,  1.6788e+00, -6.9612e-01, -1.0666e+00,  2.3235e+00,
          1.0901e+00, -1.8401e+00, -1.7338e+00,  1.0881e+00, -9.9152e-02,
         -1.8819e-01, -7.9666e-01, -9.2624e-02,  8.9085e-01,  5.3081e-01,
         -1.1256e+00,  4.4158e-01, -1.1679e-01,  1.0153e+00, -1.3249e+00,
         -6.2930e-01,  1.3529e-01, -6.8961e-02,  7.0303e-01,  9.9109e-01,
         -6.9138e-01,  3.0903e-01,  5.3577e-01,  1.3461e-01,  1.9863e-01,
         -6.2049e-02,  2.9098e-01, -2.4064e-01, -1.8903e-01,  6.1965e-01,
         -2.5693e-01,  5.7297e-01, -3.8159e-01,  8.0147e-02, -1.9030e-03,
         -2.1248e-01,  4.6285e-02,  5.0330e-02,  2.5473e-02, -3.4245e-01,
         -2.3168e-01, -1.0173e-01, -4.1428e-01,  2.4199e-01,  1.8358e-01,
          1.3584e-01,  2.6656e-01, -6.1850e-02, -4.5305e-02, -1.3168e-01,
         -1.8270e-01, -2.5978e-01, -3.2777e-01, -7.7780e-01,  1.2996e-01,
         -1.0059e-01, -8.3699e-02, -1.5536e-01,  8.4697e-03, -8.3463e-03,
         -1.2161e-01, -1.1282e-01, -1.2136e-03, -2.1638e-01, -8.4539e-02,
          2.1589e-01,  1.2296e-01, -5.0647e-02,  6.7082e-02,  8.8288e-02,
          3.9009e-01, -9.3624e-02,  9.2220e-02, -2.4652e-01,  1.4460e-01,
         -8.4339e-02, -1.6070e-01, -1.5811e-01, -1.9334e-01,  1.9383e-02,
          1.2279e-01,  3.7176e-01, -4.4573e-01,  1.7608e-01, -4.8570e-01,
          1.0152e-01, -2.2090e-01, -2.0594e-01, -1.7346e-01,  1.1364e-02,
          5.1530e-02,  9.1457e-01,  4.6733e-01,  1.2487e-02,  5.3907e-01,
         -3.2785e-01, -5.2905e-01,  3.1606e-01, -9.3291e-02,  8.6922e-02,
         -4.2948e-01, -1.3258e-01,  5.7118e-01, -5.0955e-01, -3.0854e-02,
          6.2029e-02, -1.2954e-01, -3.9281e-02,  2.5896e-02, -3.1987e-02,
         -1.6982e-03,  9.3067e-02,  1.9862e-04, -1.9230e-02, -9.8270e-02,
          4.1242e-02,  1.0259e-01, -3.1988e-01,  7.5501e-02, -1.0315e-01,
          7.0596e-02,  1.6133e-01,  6.1322e-02, -1.4002e-01,  7.0457e-02,
          1.4023e-02,  8.2125e-02,  6.0924e-02, -1.0643e-01, -4.5667e-02,
          1.4570e-01,  2.1612e-03, -3.4973e-02, -1.2361e-01, -2.1678e-01,
         -5.6433e-02,  6.9232e-02, -2.2655e-01, -7.8372e-02,  4.3254e-02,
          5.6142e-03,  2.0807e-01, -8.0394e-02,  4.9506e-02,  2.4928e-01,
          5.9059e-02,  9.7850e-03, -5.1999e-02,  6.6478e-02, -1.9347e-01,
          5.8210e-02,  4.3167e-02, -2.3630e-01, -5.7767e-02,  9.9210e-02,
          8.1719e-02]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
699000 特征值优化 tensor(0.5188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8520e-01,  1.6901e+00, -6.8370e-01, -1.0753e+00,  2.3129e+00,
          1.0707e+00, -1.8439e+00, -1.7453e+00,  1.0886e+00, -1.0704e-01,
         -1.9480e-01, -7.9397e-01, -1.0675e-01,  8.9722e-01,  5.2450e-01,
         -1.1209e+00,  4.4012e-01, -1.1960e-01,  1.0142e+00, -1.3296e+00,
         -6.2519e-01,  1.3611e-01, -6.7684e-02,  6.9252e-01,  9.7587e-01,
         -6.8716e-01,  3.2544e-01,  5.1849e-01,  1.5013e-01,  1.9574e-01,
         -5.9431e-02,  3.0540e-01, -2.3400e-01, -1.8838e-01,  6.0814e-01,
         -2.5916e-01,  5.6762e-01, -3.6675e-01,  8.7793e-02, -6.6894e-04,
         -2.2306e-01,  4.8060e-02,  4.9352e-02,  1.7813e-02, -3.4067e-01,
         -2.2582e-01, -1.0739e-01, -4.0667e-01,  2.4877e-01,  1.9655e-01,
          1.3152e-01,  2.6664e-01, -5.3115e-02, -4.9443e-02, -1.3381e-01,
         -1.7987e-01, -2.6406e-01, -3.1903e-01, -7.7924e-01,  1.3695e-01,
         -9.3218e-02, -8.6013e-02, -1.5657e-01,  1.6077e-02,  5.5646e-04,
         -1.2362e-01, -9.9556e-02, -6.8164e-03, -2.2071e-01, -8.7339e-02,
          2.2202e-01,  1.2183e-01, -5.1645e-02,  5.5941e-02,  9.2574e-02,
          3.8407e-01, -1.0354e-01,  1.1027e-01, -2.5475e-01,  1.4992e-01,
         -7.8757e-02, -1.6222e-01, -1.6349e-01, -1.8907e-01,  2.7837e-02,
          1.2417e-01,  3.7889e-01, -4.4112e-01,  1.8770e-01, -5.1449e-01,
          9.9514e-02, -2.2549e-01, -2.1006e-01, -1.8269e-01,  1.1698e-02,
          4.7664e-02,  9.1433e-01,  4.7661e-01,  1.9310e-02,  5.1740e-01,
         -3.3691e-01, -5.1997e-01,  3.1641e-01, -8.8472e-02,  8.8727e-02,
         -4.2601e-01, -1.2093e-01,  5.7321e-01, -5.1123e-01, -3.1308e-02,
          6.9668e-02, -1.3166e-01, -5.8499e-02,  2.9135e-02, -3.0367e-02,
         -1.1782e-02,  9.4293e-02, -4.6210e-04, -5.5771e-03, -9.3774e-02,
          4.3502e-02,  1.0014e-01, -3.2584e-01,  7.9781e-02, -1.0090e-01,
          7.0939e-02,  1.6420e-01,  6.3547e-02, -1.4079e-01,  7.1476e-02,
          1.3090e-02,  9.0439e-02,  6.3212e-02, -1.0234e-01, -5.0999e-02,
          1.4066e-01,  1.3054e-02, -4.7822e-02, -1.2356e-01, -2.0645e-01,
         -6.5984e-02,  7.1761e-02, -2.2225e-01, -6.8987e-02,  4.4516e-02,
          2.4062e-03,  2.0928e-01, -8.9605e-02,  4.2099e-02,  2.4684e-01,
          6.5756e-02,  3.1194e-03, -6.4948e-02,  7.6407e-02, -2.0701e-01,
          5.0985e-02,  4.1439e-02, -2.4303e-01, -5.9412e-02,  1.0638e-01,
          7.9382e-02]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
700000 特征值优化 tensor(0.5194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9975e-01,  1.6765e+00, -6.8513e-01, -1.0733e+00,  2.2983e+00,
          1.0728e+00, -1.8373e+00, -1.7432e+00,  1.0843e+00, -1.0784e-01,
         -1.9988e-01, -7.7734e-01, -7.8084e-02,  8.8487e-01,  5.3088e-01,
         -1.1184e+00,  4.3944e-01, -1.2308e-01,  1.0040e+00, -1.3335e+00,
         -6.4017e-01,  1.3850e-01, -5.8995e-02,  7.0443e-01,  9.8531e-01,
         -6.7725e-01,  3.1327e-01,  5.2465e-01,  1.4698e-01,  2.0304e-01,
         -6.7362e-02,  2.8949e-01, -2.5600e-01, -1.9024e-01,  6.0987e-01,
         -2.6413e-01,  5.8884e-01, -3.7852e-01,  7.1817e-02, -8.4204e-04,
         -2.1428e-01,  4.7325e-02,  5.0091e-02,  1.7936e-02, -3.4515e-01,
         -2.3701e-01, -1.0862e-01, -4.1684e-01,  2.3347e-01,  1.8898e-01,
          1.3502e-01,  2.6243e-01, -6.4932e-02, -4.7336e-02, -1.2929e-01,
         -1.8250e-01, -2.6181e-01, -3.1618e-01, -7.7616e-01,  1.3733e-01,
         -1.1767e-01, -7.9644e-02, -1.5757e-01,  1.2653e-03, -2.2310e-02,
         -1.1911e-01, -1.1534e-01,  7.9973e-03, -2.1636e-01, -9.6732e-02,
          2.1801e-01,  1.1410e-01, -4.9212e-02,  8.0210e-02,  7.1059e-02,
          4.0062e-01, -9.0522e-02,  9.2160e-02, -2.2878e-01,  1.4399e-01,
         -9.3982e-02, -1.6030e-01, -1.5706e-01, -1.9930e-01,  2.1155e-03,
          1.3425e-01,  3.7218e-01, -4.5087e-01,  1.9927e-01, -4.8714e-01,
          1.0954e-01, -2.1458e-01, -2.2577e-01, -1.5665e-01,  7.2026e-03,
          4.9621e-02,  9.1843e-01,  4.6635e-01,  1.0223e-02,  5.1869e-01,
         -3.3144e-01, -5.3093e-01,  3.1450e-01, -8.8688e-02,  7.5059e-02,
         -4.2676e-01, -1.2600e-01,  5.7319e-01, -5.1786e-01, -2.7501e-02,
          5.6938e-02, -1.2826e-01, -5.8538e-02,  2.7100e-02, -4.9458e-02,
         -7.3736e-04,  8.9007e-02, -4.6006e-03, -1.2257e-02, -9.8635e-02,
          4.0374e-02,  1.0634e-01, -3.1745e-01,  7.9290e-02, -1.0785e-01,
          7.9439e-02,  1.5470e-01,  5.1243e-02, -1.4393e-01,  6.7144e-02,
          1.6842e-02,  9.7481e-02,  6.4239e-02, -1.0878e-01, -3.1714e-02,
          1.5768e-01, -1.0370e-02, -2.8434e-02, -1.3516e-01, -2.0594e-01,
         -4.6575e-02,  7.6952e-02, -2.5017e-01, -6.6201e-02,  5.4619e-02,
         -6.4596e-04,  2.0927e-01, -7.6821e-02,  5.7364e-02,  2.5667e-01,
          5.2493e-02,  7.5269e-03, -4.7544e-02,  6.0077e-02, -1.9415e-01,
          6.7370e-02,  3.5640e-02, -2.4081e-01, -5.0314e-02,  8.5884e-02,
          9.4651e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
701000 特征值优化 tensor(0.5186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1971,  1.6985, -0.6892, -1.0748,  2.2897,  1.0631, -1.8453, -1.7534,
          1.0869, -0.1195, -0.1969, -0.8060, -0.0874,  0.8911,  0.5296, -1.1172,
          0.4386, -0.1190,  1.0187, -1.3377, -0.6299,  0.1388, -0.0582,  0.6880,
          0.9706, -0.6941,  0.3250,  0.5243,  0.1709,  0.1987, -0.0725,  0.2970,
         -0.2281, -0.1917,  0.5990, -0.2642,  0.5747, -0.3575,  0.0851, -0.0089,
         -0.2306,  0.0483,  0.0503,  0.0192, -0.3444, -0.2326, -0.1069, -0.4048,
          0.2456,  0.2023,  0.1297,  0.2563, -0.0553, -0.0491, -0.1319, -0.1722,
         -0.2642, -0.3207, -0.7776,  0.1430, -0.1090, -0.0813, -0.1587,  0.0107,
         -0.0102, -0.1242, -0.0963, -0.0069, -0.2220, -0.0916,  0.2174,  0.1222,
         -0.0549,  0.0509,  0.0951,  0.3817, -0.0997,  0.1060, -0.2532,  0.1503,
         -0.0761, -0.1652, -0.1622, -0.1915,  0.0240,  0.1290,  0.3756, -0.4478,
          0.2130, -0.5126,  0.1043, -0.2235, -0.2067, -0.1846,  0.0116,  0.0499,
          0.9154,  0.4831,  0.0243,  0.5072, -0.3451, -0.5284,  0.3092, -0.0860,
          0.0830, -0.4278, -0.1126,  0.5810, -0.5123, -0.0294,  0.0702, -0.1219,
         -0.0658,  0.0227, -0.0296, -0.0146,  0.0956, -0.0058, -0.0056, -0.0900,
          0.0483,  0.1025, -0.3219,  0.0842, -0.1024,  0.0764,  0.1616,  0.0614,
         -0.1412,  0.0744,  0.0073,  0.0871,  0.0697, -0.0952, -0.0487,  0.1244,
          0.0224, -0.0378, -0.1196, -0.2182, -0.0556,  0.0763, -0.2205, -0.0678,
          0.0407, -0.0054,  0.1974, -0.0825,  0.0453,  0.2486,  0.0729, -0.0077,
         -0.0601,  0.0774, -0.2048,  0.0543,  0.0312, -0.2471, -0.0604,  0.1012,
          0.0876]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
702000 特征值优化 tensor(0.5197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9367e-01,  1.7052e+00, -6.7490e-01, -1.0752e+00,  2.2873e+00,
          1.0659e+00, -1.8484e+00, -1.7495e+00,  1.0796e+00, -1.1917e-01,
         -1.9174e-01, -8.0889e-01, -8.7656e-02,  8.9083e-01,  5.3408e-01,
         -1.1086e+00,  4.3358e-01, -1.1733e-01,  1.0230e+00, -1.3331e+00,
         -6.3019e-01,  1.4359e-01, -6.0004e-02,  6.9679e-01,  9.8315e-01,
         -6.9818e-01,  3.2434e-01,  5.2715e-01,  1.7529e-01,  1.9971e-01,
         -7.9361e-02,  2.9332e-01, -2.2623e-01, -1.9581e-01,  5.9430e-01,
         -2.5962e-01,  5.7629e-01, -3.6196e-01,  8.1837e-02, -1.9278e-02,
         -2.2845e-01,  4.9165e-02,  5.0898e-02,  2.3191e-02, -3.4367e-01,
         -2.3026e-01, -1.0589e-01, -4.0776e-01,  2.4472e-01,  2.0045e-01,
          1.2224e-01,  2.5357e-01, -5.3388e-02, -4.1943e-02, -1.3284e-01,
         -1.6951e-01, -2.6495e-01, -3.2017e-01, -7.7440e-01,  1.4440e-01,
         -1.1237e-01, -8.4437e-02, -1.5887e-01,  1.2272e-02, -1.1500e-02,
         -1.2301e-01, -9.6653e-02, -5.8266e-03, -2.1366e-01, -9.5380e-02,
          2.1692e-01,  1.2002e-01, -5.2964e-02,  5.7796e-02,  9.0143e-02,
          3.8031e-01, -1.0132e-01,  1.0324e-01, -2.4564e-01,  1.4294e-01,
         -7.9672e-02, -1.6632e-01, -1.5830e-01, -2.0122e-01,  1.0081e-02,
          1.3471e-01,  3.6667e-01, -4.4821e-01,  2.0489e-01, -5.0662e-01,
          9.5520e-02, -2.1876e-01, -2.0557e-01, -1.8141e-01,  1.2162e-02,
          4.6923e-02,  9.1827e-01,  4.7656e-01,  1.1480e-02,  5.1181e-01,
         -3.5167e-01, -5.2808e-01,  2.9698e-01, -8.0352e-02,  8.2239e-02,
         -4.2848e-01, -9.9651e-02,  5.8858e-01, -5.0964e-01, -2.7157e-02,
          6.5411e-02, -1.2152e-01, -6.9178e-02,  2.1244e-02, -2.9327e-02,
         -1.2069e-02,  9.4950e-02, -4.0994e-03, -1.1866e-02, -8.7053e-02,
          4.4851e-02,  1.1139e-01, -3.2660e-01,  8.7228e-02, -9.9744e-02,
          7.5406e-02,  1.6100e-01,  6.2349e-02, -1.4695e-01,  7.5192e-02,
          1.3646e-02,  8.6704e-02,  6.9899e-02, -9.7249e-02, -4.8583e-02,
          1.3139e-01,  1.3721e-02, -4.4668e-02, -1.1619e-01, -2.3489e-01,
         -5.9474e-02,  8.1810e-02, -2.1688e-01, -6.5246e-02,  4.6254e-02,
         -1.1100e-02,  1.9300e-01, -8.0753e-02,  4.5888e-02,  2.5352e-01,
          6.6048e-02,  1.3527e-03, -5.6150e-02,  7.4899e-02, -1.9521e-01,
          6.6911e-02,  3.1513e-02, -2.4183e-01, -6.1060e-02,  1.0135e-01,
          9.0112e-02]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
703000 特征值优化 tensor(0.5368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8158e-01,  1.6930e+00, -6.8036e-01, -1.0725e+00,  2.2713e+00,
          1.0742e+00, -1.8297e+00, -1.7484e+00,  1.0760e+00, -1.1904e-01,
         -1.8592e-01, -7.9951e-01, -9.0802e-02,  9.0088e-01,  5.4613e-01,
         -1.1176e+00,  4.3764e-01, -1.1261e-01,  1.0210e+00, -1.3306e+00,
         -6.4799e-01,  1.4226e-01, -5.5740e-02,  7.1010e-01,  9.9073e-01,
         -6.9555e-01,  3.0588e-01,  5.3631e-01,  1.6737e-01,  2.0599e-01,
         -6.9982e-02,  2.7768e-01, -2.3918e-01, -2.0301e-01,  6.0141e-01,
         -2.6082e-01,  5.9258e-01, -3.7076e-01,  6.5593e-02, -1.1611e-02,
         -2.1670e-01,  4.5471e-02,  4.7385e-02,  2.2958e-02, -3.4887e-01,
         -2.3377e-01, -9.0046e-02, -4.0538e-01,  2.5224e-01,  1.9280e-01,
          1.2655e-01,  2.4873e-01, -6.2206e-02, -3.6894e-02, -1.3560e-01,
         -1.6904e-01, -2.5906e-01, -3.1352e-01, -7.7245e-01,  1.4358e-01,
         -1.3636e-01, -8.3783e-02, -1.5318e-01,  3.6678e-03, -2.4577e-02,
         -1.1748e-01, -1.0246e-01,  2.6629e-03, -2.1140e-01, -9.8321e-02,
          2.1557e-01,  1.1339e-01, -5.4602e-02,  6.8511e-02,  7.4828e-02,
          3.9233e-01, -9.2534e-02,  9.0966e-02, -2.2992e-01,  1.4111e-01,
         -9.0860e-02, -1.6435e-01, -1.5382e-01, -2.0200e-01,  5.8231e-03,
          1.4004e-01,  3.5429e-01, -4.5004e-01,  1.9843e-01, -4.7804e-01,
          1.0175e-01, -2.1412e-01, -2.1187e-01, -1.5761e-01,  1.0213e-02,
          4.5787e-02,  9.2464e-01,  4.6902e-01,  1.6225e-02,  5.2042e-01,
         -3.3839e-01, -5.3410e-01,  2.9904e-01, -8.0288e-02,  6.9456e-02,
         -4.2751e-01, -9.4765e-02,  5.9269e-01, -5.1005e-01, -2.5030e-02,
          5.4875e-02, -1.2502e-01, -5.8455e-02,  1.9457e-02, -3.8729e-02,
         -5.5838e-03,  8.3253e-02, -1.1335e-03, -2.0252e-02, -9.1795e-02,
          4.5197e-02,  1.1588e-01, -3.1556e-01,  7.8779e-02, -1.0112e-01,
          7.7779e-02,  1.5461e-01,  5.7691e-02, -1.4735e-01,  7.1411e-02,
          1.4563e-02,  8.6541e-02,  7.0485e-02, -1.0646e-01, -3.9342e-02,
          1.2772e-01, -7.1374e-03, -1.5694e-02, -1.2680e-01, -2.2553e-01,
         -5.5513e-02,  8.2281e-02, -2.3981e-01, -6.7924e-02,  5.8067e-02,
         -8.5855e-03,  1.9847e-01, -7.2102e-02,  5.7853e-02,  2.5789e-01,
          5.8283e-02,  1.0150e-02, -4.3531e-02,  6.1684e-02, -1.9038e-01,
          6.7186e-02,  2.6731e-02, -2.5072e-01, -5.4998e-02,  8.2584e-02,
          9.3968e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
704000 特征值优化 tensor(0.5191, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9519e-01,  1.6880e+00, -6.6991e-01, -1.0730e+00,  2.2594e+00,
          1.0769e+00, -1.8199e+00, -1.7518e+00,  1.0776e+00, -1.2561e-01,
         -1.7836e-01, -7.9658e-01, -8.4589e-02,  8.7978e-01,  5.4628e-01,
         -1.1281e+00,  4.2520e-01, -1.1426e-01,  1.0143e+00, -1.3285e+00,
         -6.5216e-01,  1.4180e-01, -4.9124e-02,  7.2334e-01,  9.9765e-01,
         -6.9549e-01,  2.9948e-01,  5.4270e-01,  1.6571e-01,  2.0550e-01,
         -7.9584e-02,  2.8122e-01, -2.5798e-01, -2.0112e-01,  5.9619e-01,
         -2.6200e-01,  5.9280e-01, -3.7963e-01,  6.2573e-02, -1.5641e-02,
         -2.1525e-01,  4.7742e-02,  4.9810e-02,  2.6911e-02, -3.4845e-01,
         -2.4255e-01, -9.8712e-02, -4.0400e-01,  2.4188e-01,  1.9714e-01,
          1.2583e-01,  2.4366e-01, -6.5668e-02, -3.6163e-02, -1.3268e-01,
         -1.6411e-01, -2.6124e-01, -3.1782e-01, -7.7192e-01,  1.4439e-01,
         -1.3707e-01, -9.0911e-02, -1.5021e-01,  1.5224e-03, -2.4601e-02,
         -1.1846e-01, -1.0461e-01,  8.0469e-03, -2.1294e-01, -1.0223e-01,
          2.1364e-01,  1.0710e-01, -4.9764e-02,  6.7300e-02,  7.3313e-02,
          3.9261e-01, -9.6148e-02,  8.4101e-02, -2.2577e-01,  1.3849e-01,
         -9.6235e-02, -1.6569e-01, -1.5288e-01, -2.0603e-01, -2.9014e-03,
          1.4230e-01,  3.5212e-01, -4.5335e-01,  2.0939e-01, -4.7450e-01,
          1.0228e-01, -2.1365e-01, -2.1188e-01, -1.5952e-01,  1.0197e-02,
          4.5353e-02,  9.2585e-01,  4.7479e-01,  2.0015e-02,  5.1117e-01,
         -3.5756e-01, -5.3942e-01,  2.9697e-01, -7.7717e-02,  6.8439e-02,
         -4.3053e-01, -9.9332e-02,  5.9518e-01, -5.1659e-01, -2.3645e-02,
          5.2324e-02, -1.3092e-01, -5.3984e-02,  2.5038e-02, -3.8644e-02,
         -4.7035e-03,  7.8947e-02, -7.4857e-03, -1.5121e-02, -9.3902e-02,
          4.8336e-02,  1.1951e-01, -3.1393e-01,  7.8230e-02, -1.0112e-01,
          7.9220e-02,  1.5331e-01,  5.2350e-02, -1.4580e-01,  7.0997e-02,
          1.7562e-02,  9.4352e-02,  6.9884e-02, -1.0883e-01, -3.4368e-02,
          1.2750e-01, -1.2462e-02, -1.4304e-02, -1.2260e-01, -2.2132e-01,
         -5.1963e-02,  7.6332e-02, -2.4320e-01, -6.2175e-02,  6.1369e-02,
         -7.3840e-03,  2.0409e-01, -7.2015e-02,  5.8169e-02,  2.5790e-01,
          5.4004e-02,  8.5475e-03, -3.9019e-02,  5.5176e-02, -1.8774e-01,
          7.5564e-02,  2.3504e-02, -2.4939e-01, -4.8073e-02,  8.1897e-02,
          9.5514e-02]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
705000 特征值优化 tensor(0.5187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1863,  1.6863, -0.6677, -1.0741,  2.2468,  1.0760, -1.8088, -1.7685,
          1.0854, -0.1293, -0.1774, -0.8040, -0.0703,  0.8685,  0.5473, -1.1138,
          0.4197, -0.1250,  1.0071, -1.3371, -0.6598,  0.1392, -0.0568,  0.7246,
          0.9856, -0.6968,  0.3036,  0.5406,  0.1630,  0.2096, -0.0932,  0.2790,
         -0.2491, -0.1881,  0.5950, -0.2591,  0.5879, -0.3788,  0.0719, -0.0110,
         -0.2247,  0.0473,  0.0502,  0.0215, -0.3517, -0.2503, -0.0983, -0.4113,
          0.2355,  0.1962,  0.1238,  0.2440, -0.0665, -0.0393, -0.1261, -0.1635,
         -0.2583, -0.3163, -0.7727,  0.1440, -0.1339, -0.0837, -0.1509,  0.0024,
         -0.0290, -0.1191, -0.1042,  0.0129, -0.2111, -0.0998,  0.2128,  0.1083,
         -0.0513,  0.0752,  0.0750,  0.3920, -0.0934,  0.0942, -0.2301,  0.1446,
         -0.0955, -0.1687, -0.1532, -0.1890,  0.0047,  0.1467,  0.3600, -0.4486,
          0.2266, -0.4785,  0.1041, -0.2096, -0.2118, -0.1729,  0.0034,  0.0474,
          0.9245,  0.4873,  0.0097,  0.5106, -0.3611, -0.5366,  0.3005, -0.0855,
          0.0790, -0.4380, -0.0842,  0.5916, -0.5241, -0.0269,  0.0530, -0.1300,
         -0.0578,  0.0235, -0.0431, -0.0039,  0.0860, -0.0124, -0.0071, -0.0920,
          0.0551,  0.1158, -0.3186,  0.0822, -0.1084,  0.0732,  0.1578,  0.0543,
         -0.1446,  0.0726,  0.0195,  0.1000,  0.0699, -0.1041, -0.0288,  0.1519,
         -0.0059, -0.0316, -0.1257, -0.2230, -0.0439,  0.0675, -0.2387, -0.0618,
          0.0540, -0.0045,  0.2009, -0.0675,  0.0518,  0.2518,  0.0665,  0.0087,
         -0.0490,  0.0592, -0.1853,  0.0742,  0.0289, -0.2521, -0.0487,  0.0832,
          0.0951]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
706000 特征值优化 tensor(0.5190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7605e-01,  1.7088e+00, -6.7133e-01, -1.0755e+00,  2.2503e+00,
          1.0659e+00, -1.8141e+00, -1.7713e+00,  1.0961e+00, -1.4097e-01,
         -1.8698e-01, -8.0429e-01, -9.1464e-02,  8.7373e-01,  5.4651e-01,
         -1.1034e+00,  4.3414e-01, -1.2426e-01,  1.0168e+00, -1.3401e+00,
         -6.4428e-01,  1.3059e-01, -5.2197e-02,  7.3138e-01,  9.7503e-01,
         -6.9764e-01,  3.1381e-01,  5.3792e-01,  1.7915e-01,  2.0568e-01,
         -7.6744e-02,  2.9432e-01, -2.4378e-01, -1.9572e-01,  5.8951e-01,
         -2.5904e-01,  5.8032e-01, -3.5472e-01,  7.7585e-02, -1.7411e-02,
         -2.2775e-01,  4.7579e-02,  4.9538e-02,  2.3977e-02, -3.5083e-01,
         -2.3619e-01, -9.6275e-02, -4.0448e-01,  2.4573e-01,  2.1040e-01,
          1.2590e-01,  2.4648e-01, -5.3398e-02, -3.6799e-02, -1.3534e-01,
         -1.5493e-01, -2.6955e-01, -3.1961e-01, -7.7445e-01,  1.4320e-01,
         -1.1853e-01, -7.9608e-02, -1.4930e-01,  1.1588e-02, -6.2359e-03,
         -1.1826e-01, -9.0723e-02,  2.0480e-03, -2.1376e-01, -9.3119e-02,
          2.1610e-01,  1.0275e-01, -4.6799e-02,  5.0027e-02,  8.0832e-02,
          3.7673e-01, -1.1107e-01,  9.9539e-02, -2.4320e-01,  1.4762e-01,
         -8.1173e-02, -1.6326e-01, -1.5941e-01, -1.8921e-01,  1.6935e-02,
          1.3415e-01,  3.6418e-01, -4.3951e-01,  2.1748e-01, -5.1249e-01,
          8.2134e-02, -2.1585e-01, -2.1255e-01, -1.8892e-01,  1.0039e-02,
          4.5790e-02,  9.2247e-01,  4.8861e-01,  2.4446e-02,  4.9694e-01,
         -3.8693e-01, -5.2423e-01,  3.1091e-01, -7.4671e-02,  7.9662e-02,
         -4.3863e-01, -8.1818e-02,  5.9639e-01, -5.2772e-01, -2.9602e-02,
          6.4052e-02, -1.2253e-01, -5.7575e-02,  1.9502e-02, -2.7745e-02,
         -1.5604e-02,  8.8845e-02, -8.2646e-03, -6.1983e-03, -9.0030e-02,
          4.6990e-02,  1.1999e-01, -3.1967e-01,  8.3470e-02, -1.0243e-01,
          6.4240e-02,  1.6394e-01,  6.0910e-02, -1.4118e-01,  7.2479e-02,
          1.4195e-02,  9.9762e-02,  6.7196e-02, -9.9680e-02, -4.0915e-02,
          1.2305e-01,  6.4278e-03, -2.6228e-02, -1.1157e-01, -2.3354e-01,
         -6.9857e-02,  8.1007e-02, -2.2835e-01, -6.6708e-02,  5.2211e-02,
         -5.8442e-03,  1.9915e-01, -8.6339e-02,  5.1441e-02,  2.4446e-01,
          6.5345e-02, -3.2598e-04, -5.5896e-02,  7.3512e-02, -2.0398e-01,
          5.8390e-02,  3.3308e-02, -2.5605e-01, -5.2966e-02,  9.8260e-02,
          8.4088e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
707000 特征值优化 tensor(0.5199, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1870,  1.7041, -0.6682, -1.0746,  2.2405,  1.0574, -1.8128, -1.7724,
          1.1048, -0.1483, -0.2003, -0.8028, -0.0986,  0.8892,  0.5474, -1.0986,
          0.4337, -0.1227,  1.0164, -1.3429, -0.6388,  0.1314, -0.0473,  0.7352,
          0.9692, -0.7013,  0.3094,  0.5242,  0.1837,  0.2056, -0.0799,  0.2865,
         -0.2383, -0.1975,  0.5967, -0.2589,  0.5864, -0.3547,  0.0793, -0.0188,
         -0.2396,  0.0476,  0.0522,  0.0309, -0.3526, -0.2349, -0.0946, -0.4060,
          0.2496,  0.2087,  0.1210,  0.2451, -0.0470, -0.0331, -0.1445, -0.1563,
         -0.2584, -0.3140, -0.7756,  0.1473, -0.1269, -0.0752, -0.1428,  0.0157,
         -0.0046, -0.1135, -0.0930,  0.0028, -0.2098, -0.0975,  0.2150,  0.0974,
         -0.0482,  0.0542,  0.0746,  0.3811, -0.1087,  0.0961, -0.2449,  0.1498,
         -0.0844, -0.1624, -0.1615, -0.1939,  0.0114,  0.1437,  0.3586, -0.4434,
          0.2149, -0.5186,  0.0847, -0.2231, -0.2097, -0.1802,  0.0119,  0.0469,
          0.9278,  0.4954,  0.0322,  0.5014, -0.3858, -0.5282,  0.3175, -0.0747,
          0.0817, -0.4477, -0.0760,  0.5951, -0.5311, -0.0281,  0.0632, -0.1190,
         -0.0516,  0.0173, -0.0264, -0.0135,  0.0862, -0.0031, -0.0119, -0.0876,
          0.0469,  0.1230, -0.3192,  0.0895, -0.1022,  0.0614,  0.1631,  0.0599,
         -0.1452,  0.0715,  0.0208,  0.0964,  0.0644, -0.1003, -0.0387,  0.1228,
          0.0056, -0.0297, -0.1137, -0.2301, -0.0791,  0.0735, -0.2239, -0.0639,
          0.0551, -0.0049,  0.2020, -0.0758,  0.0530,  0.2416,  0.0704,  0.0076,
         -0.0489,  0.0713, -0.2006,  0.0648,  0.0240, -0.2514, -0.0544,  0.1014,
          0.0875]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
708000 特征值优化 tensor(0.5186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1768,  1.7116, -0.6657, -1.0746,  2.2203,  1.0507, -1.7961, -1.7675,
          1.1048, -0.1587, -0.2007, -0.7942, -0.1113,  0.8911,  0.5491, -1.0897,
          0.4341, -0.1271,  1.0136, -1.3529, -0.6344,  0.1282, -0.0416,  0.7374,
          0.9698, -0.7017,  0.3138,  0.5281,  0.1871,  0.2077, -0.0747,  0.2920,
         -0.2402, -0.1931,  0.5876, -0.2619,  0.5855, -0.3500,  0.0823, -0.0197,
         -0.2373,  0.0477,  0.0502,  0.0257, -0.3517, -0.2363, -0.0955, -0.4078,
          0.2566,  0.2140,  0.1213,  0.2434, -0.0399, -0.0376, -0.1438, -0.1549,
         -0.2576, -0.3253, -0.7733,  0.1497, -0.1240, -0.0717, -0.1410,  0.0175,
         -0.0045, -0.1132, -0.0889,  0.0037, -0.2121, -0.0944,  0.2138,  0.0944,
         -0.0476,  0.0518,  0.0760,  0.3787, -0.1113,  0.0973, -0.2430,  0.1501,
         -0.0816, -0.1585, -0.1615, -0.1865,  0.0119,  0.1443,  0.3586, -0.4428,
          0.2129, -0.5302,  0.0847, -0.2220, -0.2152, -0.1942,  0.0118,  0.0434,
          0.9326,  0.4955,  0.0298,  0.5044, -0.3972, -0.5244,  0.3182, -0.0715,
          0.0761, -0.4471, -0.0747,  0.5982, -0.5379, -0.0260,  0.0627, -0.1178,
         -0.0612,  0.0168, -0.0297, -0.0162,  0.0860, -0.0044, -0.0056, -0.0886,
          0.0462,  0.1245, -0.3195,  0.0911, -0.1030,  0.0585,  0.1662,  0.0578,
         -0.1440,  0.0680,  0.0200,  0.1029,  0.0630, -0.0953, -0.0406,  0.1161,
          0.0135, -0.0253, -0.1124, -0.2324, -0.0720,  0.0748, -0.2298, -0.0650,
          0.0574, -0.0052,  0.2036, -0.0841,  0.0522,  0.2427,  0.0667,  0.0029,
         -0.0582,  0.0709, -0.2089,  0.0615,  0.0285, -0.2533, -0.0541,  0.1007,
          0.0861]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
709000 特征值优化 tensor(0.5225, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1991,  1.7102, -0.6734, -1.0727,  2.2200,  1.0500, -1.7960, -1.7736,
          1.1114, -0.1665, -0.2090, -0.7863, -0.0988,  0.8970,  0.5485, -1.0804,
          0.4315, -0.1297,  1.0156, -1.3500, -0.6336,  0.1347, -0.0370,  0.7408,
          0.9643, -0.7083,  0.3126,  0.5233,  0.1871,  0.2124, -0.0845,  0.2827,
         -0.2367, -0.1999,  0.5879, -0.2639,  0.5889, -0.3517,  0.0807, -0.0174,
         -0.2441,  0.0497,  0.0501,  0.0322, -0.3552, -0.2378, -0.0967, -0.4144,
          0.2519,  0.2132,  0.1260,  0.2420, -0.0485, -0.0304, -0.1464, -0.1569,
         -0.2556, -0.3177, -0.7766,  0.1471, -0.1367, -0.0674, -0.1339,  0.0193,
         -0.0066, -0.1100, -0.0956,  0.0081, -0.2074, -0.0955,  0.2104,  0.0891,
         -0.0487,  0.0598,  0.0748,  0.3770, -0.1029,  0.0918, -0.2477,  0.1451,
         -0.0868, -0.1606, -0.1572, -0.1962,  0.0023,  0.1404,  0.3518, -0.4526,
          0.2282, -0.5173,  0.0826, -0.2142, -0.2128, -0.1835,  0.0094,  0.0467,
          0.9306,  0.5044,  0.0268,  0.4968, -0.4034, -0.5246,  0.3255, -0.0702,
          0.0764, -0.4554, -0.0667,  0.5948, -0.5423, -0.0243,  0.0594, -0.1163,
         -0.0640,  0.0170, -0.0347, -0.0140,  0.0891, -0.0034, -0.0068, -0.0824,
          0.0477,  0.1274, -0.3202,  0.0944, -0.1044,  0.0568,  0.1635,  0.0593,
         -0.1440,  0.0696,  0.0195,  0.0972,  0.0665, -0.0996, -0.0334,  0.1184,
          0.0094, -0.0336, -0.1123, -0.2381, -0.0644,  0.0756, -0.2284, -0.0620,
          0.0555, -0.0033,  0.2011, -0.0758,  0.0491,  0.2461,  0.0690,  0.0061,
         -0.0497,  0.0715, -0.2030,  0.0681,  0.0240, -0.2494, -0.0486,  0.0925,
          0.0913]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
710000 特征值优化 tensor(0.5258, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0023e-01,  1.7026e+00, -6.6836e-01, -1.0660e+00,  2.1877e+00,
          1.0467e+00, -1.7847e+00, -1.7734e+00,  1.1025e+00, -1.7112e-01,
         -2.1454e-01, -7.8892e-01, -1.0449e-01,  9.0937e-01,  5.4617e-01,
         -1.0752e+00,  4.2753e-01, -1.2911e-01,  1.0127e+00, -1.3550e+00,
         -6.4039e-01,  1.3347e-01, -3.6313e-02,  7.4729e-01,  9.7031e-01,
         -7.0957e-01,  3.0454e-01,  5.3106e-01,  1.8738e-01,  2.1556e-01,
         -8.5493e-02,  2.7370e-01, -2.4851e-01, -1.9266e-01,  5.8591e-01,
         -2.6497e-01,  5.9358e-01, -3.5597e-01,  7.3962e-02, -2.5306e-02,
         -2.3421e-01,  4.7408e-02,  5.1704e-02,  3.0662e-02, -3.5948e-01,
         -2.4546e-01, -9.5762e-02, -4.2075e-01,  2.5392e-01,  2.1461e-01,
          1.2681e-01,  2.4290e-01, -4.7533e-02, -2.7531e-02, -1.5078e-01,
         -1.5913e-01, -2.5152e-01, -3.2250e-01, -7.7334e-01,  1.4797e-01,
         -1.4181e-01, -5.7809e-02, -1.3325e-01,  1.7960e-02, -9.0391e-03,
         -1.0935e-01, -9.8453e-02,  9.6973e-03, -1.9909e-01, -9.4644e-02,
          2.0972e-01,  8.9418e-02, -4.4219e-02,  6.3403e-02,  6.5546e-02,
          3.8214e-01, -1.0175e-01,  8.0560e-02, -2.4407e-01,  1.4650e-01,
         -9.0967e-02, -1.5900e-01, -1.5810e-01, -1.8744e-01, -7.5913e-04,
          1.4451e-01,  3.4574e-01, -4.5122e-01,  2.4615e-01, -5.1431e-01,
          8.2467e-02, -2.0611e-01, -2.1219e-01, -1.7643e-01,  1.3067e-02,
          4.6052e-02,  9.3785e-01,  5.1845e-01,  3.3469e-02,  4.9356e-01,
         -3.9882e-01, -5.2794e-01,  3.2184e-01, -7.1119e-02,  7.3431e-02,
         -4.6130e-01, -6.4310e-02,  6.0151e-01, -5.4360e-01, -2.4471e-02,
          5.3539e-02, -1.1355e-01, -6.8561e-02,  1.1100e-02, -3.9399e-02,
         -1.1847e-02,  8.7396e-02, -7.3451e-03, -9.3679e-03, -7.9964e-02,
          4.2420e-02,  1.2848e-01, -3.1369e-01,  9.6115e-02, -1.0799e-01,
          6.0160e-02,  1.6333e-01,  5.2573e-02, -1.4461e-01,  6.5587e-02,
          2.1647e-02,  1.0238e-01,  6.6043e-02, -1.0135e-01, -3.0183e-02,
          1.1833e-01,  2.8916e-03, -2.3047e-02, -1.0868e-01, -2.3866e-01,
         -6.6465e-02,  7.3967e-02, -2.3232e-01, -6.6442e-02,  5.6886e-02,
          2.6251e-03,  1.9866e-01, -7.2054e-02,  5.3836e-02,  2.4492e-01,
          6.1930e-02,  1.2749e-02, -4.7270e-02,  6.9429e-02, -2.0119e-01,
          7.2648e-02,  2.0707e-02, -2.4842e-01, -4.2988e-02,  8.9710e-02,
          9.0795e-02]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
711000 特征值优化 tensor(0.5183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0614e-01,  1.7037e+00, -6.6622e-01, -1.0743e+00,  2.1832e+00,
          1.0577e+00, -1.7699e+00, -1.7677e+00,  1.1041e+00, -1.8064e-01,
         -2.2763e-01, -7.6634e-01, -9.6437e-02,  9.0626e-01,  5.3332e-01,
         -1.0642e+00,  4.3596e-01, -1.3707e-01,  1.0247e+00, -1.3574e+00,
         -6.5080e-01,  1.2770e-01, -3.4874e-02,  7.5596e-01,  9.7930e-01,
         -6.8847e-01,  2.8231e-01,  5.3849e-01,  1.9150e-01,  2.2083e-01,
         -8.1477e-02,  2.6308e-01, -2.6252e-01, -2.0549e-01,  5.7906e-01,
         -2.6672e-01,  6.0331e-01, -3.6411e-01,  5.9257e-02, -1.9477e-02,
         -2.2718e-01,  4.7196e-02,  4.9280e-02,  2.8701e-02, -3.6425e-01,
         -2.4395e-01, -9.3881e-02, -4.1759e-01,  2.4079e-01,  2.1618e-01,
          1.2808e-01,  2.4485e-01, -5.5023e-02, -2.1378e-02, -1.5076e-01,
         -1.4484e-01, -2.6849e-01, -3.2360e-01, -7.7377e-01,  1.4866e-01,
         -1.6240e-01, -4.5880e-02, -1.2451e-01,  1.3467e-02, -2.8885e-02,
         -1.0009e-01, -9.7797e-02,  1.8018e-02, -1.9767e-01, -1.0187e-01,
          2.0506e-01,  8.0921e-02, -4.3123e-02,  7.3077e-02,  6.2572e-02,
          3.8187e-01, -9.4332e-02,  8.9866e-02, -2.3760e-01,  1.4140e-01,
         -1.0419e-01, -1.6483e-01, -1.5022e-01, -1.9759e-01, -1.2960e-03,
          1.5304e-01,  3.3719e-01, -4.5358e-01,  2.7206e-01, -5.1431e-01,
          9.1991e-02, -2.0562e-01, -1.9643e-01, -1.7329e-01,  6.7771e-03,
          4.5591e-02,  9.3659e-01,  5.1196e-01,  3.1502e-02,  4.6796e-01,
         -3.9270e-01, -5.3783e-01,  3.0729e-01, -6.9503e-02,  7.2016e-02,
         -4.5032e-01, -5.5017e-02,  6.0634e-01, -5.4581e-01, -2.6113e-02,
          4.6819e-02, -1.1893e-01, -8.0737e-02,  2.0734e-02, -4.7069e-02,
         -9.0166e-03,  8.8999e-02, -7.5809e-03, -1.2709e-02, -7.5239e-02,
          5.1702e-02,  1.2594e-01, -3.1890e-01,  9.5168e-02, -1.0399e-01,
          7.0761e-02,  1.5845e-01,  5.0862e-02, -1.4460e-01,  6.3647e-02,
          2.0642e-02,  1.0705e-01,  6.9800e-02, -1.0196e-01, -2.2484e-02,
          1.1566e-01, -6.7443e-03, -1.9309e-02, -1.0982e-01, -2.4131e-01,
         -5.6540e-02,  7.3468e-02, -2.4105e-01, -5.3513e-02,  4.8126e-02,
         -1.4908e-02,  2.0924e-01, -6.0848e-02,  6.4414e-02,  2.4406e-01,
          6.7847e-02,  2.8751e-03, -3.5258e-02,  5.8400e-02, -1.9543e-01,
          7.8361e-02,  1.9539e-02, -2.5869e-01, -3.7705e-02,  7.3083e-02,
          9.7568e-02]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
712000 特征值优化 tensor(0.5209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1849,  1.7245, -0.6563, -1.0759,  2.1549,  1.0345, -1.7892, -1.7768,
          1.1132, -0.1849, -0.2337, -0.7739, -0.1119,  0.8967,  0.5534, -1.0677,
          0.4380, -0.1362,  1.0305, -1.3575, -0.6275,  0.1233, -0.0244,  0.7748,
          0.9716, -0.7121,  0.3052,  0.5245,  0.1933,  0.2198, -0.0749,  0.2722,
         -0.2407, -0.1846,  0.5753, -0.2650,  0.5952, -0.3446,  0.0687, -0.0275,
         -0.2523,  0.0484,  0.0515,  0.0322, -0.3662, -0.2377, -0.0888, -0.4183,
          0.2526,  0.2246,  0.1272,  0.2440, -0.0463, -0.0191, -0.1525, -0.1487,
         -0.2591, -0.3176, -0.7717,  0.1468, -0.1386, -0.0528, -0.1310,  0.0266,
         -0.0055, -0.0973, -0.0917,  0.0078, -0.2037, -0.0947,  0.2069,  0.0798,
         -0.0448,  0.0601,  0.0619,  0.3755, -0.1094,  0.0790, -0.2400,  0.1452,
         -0.0866, -0.1590, -0.1577, -0.1915,  0.0055,  0.1578,  0.3433, -0.4459,
          0.2325, -0.5361,  0.0722, -0.2016, -0.2169, -0.1760,  0.0155,  0.0414,
          0.9392,  0.5160,  0.0392,  0.4936, -0.4175, -0.5151,  0.3078, -0.0623,
          0.0718, -0.4507, -0.0456,  0.6023, -0.5563, -0.0273,  0.0579, -0.1065,
         -0.0751,  0.0124, -0.0342, -0.0137,  0.0858, -0.0069, -0.0054, -0.0815,
          0.0423,  0.1327, -0.3222,  0.0962, -0.1063,  0.0517,  0.1671,  0.0607,
         -0.1507,  0.0673,  0.0262,  0.1031,  0.0640, -0.0994, -0.0284,  0.1298,
          0.0167, -0.0366, -0.1013, -0.2301, -0.0742,  0.0748, -0.2280, -0.0660,
          0.0595, -0.0094,  0.2023, -0.0713,  0.0508,  0.2464,  0.0652,  0.0116,
         -0.0496,  0.0716, -0.2024,  0.0737,  0.0211, -0.2523, -0.0421,  0.0856,
          0.0882]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
713000 特征值优化 tensor(0.5255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9740e-01,  1.7302e+00, -6.5146e-01, -1.0671e+00,  2.1418e+00,
          1.0217e+00, -1.7930e+00, -1.7815e+00,  1.1227e+00, -1.9360e-01,
         -2.3459e-01, -7.6001e-01, -9.9704e-02,  8.9035e-01,  5.4679e-01,
         -1.0554e+00,  4.4369e-01, -1.4676e-01,  1.0233e+00, -1.3600e+00,
         -6.2788e-01,  1.1256e-01, -1.6893e-02,  7.7168e-01,  9.7291e-01,
         -7.1289e-01,  3.0138e-01,  5.2403e-01,  2.0553e-01,  2.2264e-01,
         -7.9424e-02,  2.7037e-01, -2.5064e-01, -1.9540e-01,  5.6896e-01,
         -2.6123e-01,  6.0720e-01, -3.4770e-01,  6.1803e-02, -2.3353e-02,
         -2.4504e-01,  4.9034e-02,  4.8019e-02,  1.9656e-02, -3.6747e-01,
         -2.4420e-01, -8.8724e-02, -4.2044e-01,  2.4813e-01,  2.2624e-01,
          1.2672e-01,  2.4995e-01, -4.4215e-02, -1.7584e-02, -1.5341e-01,
         -1.3708e-01, -2.5969e-01, -3.1138e-01, -7.7165e-01,  1.4509e-01,
         -1.5265e-01, -4.4391e-02, -1.2592e-01,  1.6236e-02, -1.4740e-02,
         -9.1742e-02, -9.6275e-02,  1.6674e-02, -1.9886e-01, -1.0259e-01,
          2.0000e-01,  7.0571e-02, -3.6090e-02,  6.7527e-02,  5.6336e-02,
          3.7847e-01, -1.0198e-01,  7.0975e-02, -2.3625e-01,  1.4079e-01,
         -9.6287e-02, -1.5717e-01, -1.5055e-01, -1.9100e-01,  9.0571e-03,
          1.4995e-01,  3.4356e-01, -4.4730e-01,  2.5071e-01, -5.3227e-01,
          7.6110e-02, -1.9436e-01, -2.2137e-01, -1.7846e-01,  1.0989e-02,
          3.9720e-02,  9.3316e-01,  5.0012e-01,  3.8015e-02,  4.8028e-01,
         -4.2044e-01, -5.2038e-01,  3.1062e-01, -6.6063e-02,  6.0737e-02,
         -4.5414e-01, -4.2974e-02,  6.0223e-01, -5.5898e-01, -2.9483e-02,
          5.5291e-02, -1.1010e-01, -8.4132e-02,  1.5188e-02, -4.5043e-02,
         -1.0985e-02,  8.9760e-02, -1.9293e-03, -1.3174e-02, -7.4031e-02,
          3.6759e-02,  1.3601e-01, -3.1469e-01,  9.2999e-02, -1.0905e-01,
          5.4596e-02,  1.6625e-01,  5.9468e-02, -1.4848e-01,  6.3808e-02,
          2.2562e-02,  1.0517e-01,  6.5490e-02, -9.8732e-02, -2.4448e-02,
          1.3249e-01,  1.3743e-02, -2.3999e-02, -1.1162e-01, -2.3906e-01,
         -6.1546e-02,  6.7514e-02, -2.4403e-01, -5.8453e-02,  5.3744e-02,
         -7.8207e-03,  2.1558e-01, -7.1510e-02,  5.4069e-02,  2.4627e-01,
          6.5025e-02,  1.0343e-02, -4.3323e-02,  5.9512e-02, -2.1076e-01,
          7.4074e-02,  2.3759e-02, -2.6528e-01, -3.6622e-02,  7.6537e-02,
          9.5698e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
714000 特征值优化 tensor(15.3550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.9631e-01, -1.0874e-01, -3.1824e-01,  9.0719e-01,  1.6767e+00,
          5.5300e-01,  2.1434e-01, -5.5689e-01,  2.0972e-01,  9.7118e-01,
         -9.6161e-01, -9.3155e-01, -3.2404e-01,  2.1185e-01,  3.3653e-01,
         -3.1852e-01,  1.9310e-01,  9.0250e-01,  2.0963e-01,  5.1277e-01,
          1.1490e+00,  1.5475e-01, -1.2309e+00,  2.3619e-01, -9.8523e-01,
          1.3100e-01, -8.3522e-02,  2.9795e-01, -5.4696e-01, -2.4965e-02,
         -4.3652e-01,  2.2830e-02, -3.8511e-01,  5.6037e-02, -1.0528e-01,
          7.3796e-02,  4.8780e-01,  3.5070e-01, -1.4949e-02, -1.0271e-01,
          2.7821e-01, -1.8623e-02,  7.4789e-02,  8.7683e-02,  6.8388e-02,
         -4.1404e-01, -6.8490e-01, -1.1511e-02, -1.9274e-01,  1.0317e-01,
         -2.6190e-01, -4.3798e-01,  7.1822e-01,  1.9303e-01, -1.6908e-01,
          1.0055e+00, -2.2791e-01, -1.0381e-01,  6.1851e-02,  1.0267e-01,
          3.8272e-02,  1.1873e+00, -2.6516e-02, -2.5756e-02,  2.0427e-01,
          1.8183e-01,  1.8274e-01, -3.6936e-01, -2.2569e-01, -1.0432e-01,
         -1.3386e+00,  6.4580e-01,  2.7022e-02,  9.7826e-02, -3.2129e-01,
         -5.1694e-03, -3.7873e-01, -5.5521e-03,  2.2791e-01, -2.5529e-01,
          2.5824e-01,  2.0758e-02,  1.6389e-01,  1.4122e-01, -5.8410e-01,
          4.0042e-01, -1.3856e+00,  3.4751e-01,  6.9147e-01, -4.2540e-01,
          4.7021e-03,  1.4489e+00,  4.1275e-01, -1.9239e-01,  1.1083e-01,
         -3.5372e-01,  5.9246e-02,  1.1660e-01,  7.1765e-01,  7.4237e-01,
          2.9969e-01,  1.8492e-01,  4.3885e-01,  1.9854e-01,  6.2006e-01,
         -3.5730e-01,  3.6129e-01,  2.2341e-01, -8.5011e-01, -1.3594e+00,
          9.0041e-01,  5.4538e-01, -1.2391e-01,  2.0976e-01, -7.8216e-02,
         -3.8783e-02, -1.6426e-01,  2.4437e-01, -2.2379e-01,  2.6604e-01,
          6.1002e-02, -3.1963e-01,  3.1146e-02,  1.9611e-01, -4.7561e-02,
         -3.1920e-01,  4.1407e-02, -4.3776e-01,  3.0824e-02, -8.3336e-02,
          2.9727e-01, -2.2564e-02,  4.4158e-01, -1.5263e-01,  8.5683e-01,
         -8.3716e-02, -6.9623e-01,  1.5789e-02,  3.2069e-01,  7.2024e-01,
         -1.7783e-01, -5.2077e-01,  1.6379e-01, -6.1790e-02,  1.0772e+00,
         -7.9284e-04,  1.6176e-01,  1.2354e-03,  1.3533e+00, -1.7438e-01,
         -2.7609e-01, -9.4526e-03, -7.9271e-01,  2.8935e-01, -5.6387e-01,
         -1.2710e-01,  5.3208e-02, -2.1343e-01,  2.3423e-01, -4.9327e-01,
          4.9167e-01]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
715000 特征值优化 tensor(2.4538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8076e+00,  8.5226e-01, -4.2333e-01, -1.2164e-01,  2.2347e+00,
          1.0485e+00,  6.5663e-01, -1.1037e+00,  8.2083e-01,  1.2356e+00,
         -1.0403e+00, -4.8429e-01, -5.6663e-01,  6.2921e-02, -8.9266e-02,
          2.7448e-01,  4.0458e-01,  7.6114e-01, -1.8782e-01, -1.3948e-02,
          5.9285e-01,  3.6485e-02, -1.0186e+00,  5.8954e-01, -7.7247e-01,
         -4.9663e-01, -8.8594e-02, -2.1331e-02,  7.3425e-02,  1.3365e-02,
         -7.8433e-02,  8.9816e-02,  2.1068e-02, -1.8947e-02, -2.2053e-01,
          4.7562e-02, -2.3937e-01,  4.5583e-01, -2.1490e-01, -2.1119e-01,
          1.4585e-01,  8.1507e-03,  3.2173e-02,  2.9794e-01, -9.5332e-03,
          7.9392e-03, -1.9015e-01, -1.3778e-01, -1.0707e-02, -6.8229e-02,
         -2.1480e-01,  2.7659e-02,  2.6122e-01,  2.0890e-01, -2.2604e-01,
          2.7821e-01, -4.4373e-03, -7.1269e-02,  2.0198e-01,  2.0356e-01,
         -2.9206e-01,  4.8662e-01,  3.0898e-01,  1.6069e-01,  1.1657e-01,
          3.3637e-01,  2.5381e-01, -1.6713e-01, -2.4967e-01,  6.0508e-03,
         -6.4366e-01,  1.1354e-01, -1.6137e-01, -4.6592e-03, -4.3331e-02,
          8.2013e-02, -3.0806e-01, -3.3158e-02,  1.8787e-01, -1.0485e-01,
          8.1941e-02,  9.8247e-02, -4.0030e-02,  1.8708e-01, -1.8690e-01,
          2.2190e-02, -6.4563e-01, -1.7271e-01,  3.2182e-01,  8.5279e-02,
          1.5740e-01,  8.0625e-01,  4.1424e-03,  2.8417e-01,  9.4596e-02,
         -3.5711e-01,  4.2872e-01, -3.6921e-02,  1.6389e-01,  3.8021e-01,
          1.3530e-01,  1.7774e-01,  2.1047e-01,  3.2945e-01,  2.1174e-01,
         -6.0827e-01, -1.0787e-01, -6.1496e-02, -7.0573e-01, -6.7589e-01,
          3.5931e-01,  1.9055e-01,  2.0215e-01, -7.4923e-02,  8.7786e-03,
         -4.3469e-03, -1.8937e-02,  2.2796e-01, -1.3505e-01, -1.0333e-01,
         -2.4629e-03, -6.2262e-02, -1.8081e-01,  2.8612e-01,  8.6405e-02,
          5.9461e-02, -5.6390e-02, -5.0905e-01,  1.4179e-01,  5.9426e-02,
          5.1185e-02, -4.2521e-02,  1.5011e-01, -1.1229e-01,  3.2857e-01,
         -6.7669e-02, -2.6590e-02,  8.9076e-04,  1.0378e-02,  2.2886e-01,
          9.9219e-02, -2.7444e-01, -1.0835e-01,  1.5325e-02,  3.1182e-01,
         -4.1333e-02,  6.2483e-02,  1.0067e-01,  5.3229e-01, -1.1738e-01,
         -8.9535e-02, -1.7444e-01, -1.5669e-01,  1.7107e-01, -2.4463e-02,
          1.3620e-01,  6.6476e-02,  6.9903e-03,  9.7320e-03, -2.2567e-01,
          1.6669e-01]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
716000 特征值优化 tensor(1.0712, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5078e+00,  5.1305e-01, -8.7997e-01, -5.4723e-01,  2.5839e+00,
          1.6260e+00,  6.8851e-01, -1.8628e+00,  8.8083e-01,  9.6408e-01,
         -8.2597e-01, -2.0274e-01, -5.5866e-01, -9.9669e-03, -6.1722e-02,
          2.2453e-01,  6.6902e-01,  7.1312e-01, -1.6939e-01,  2.1175e-02,
          8.0011e-01,  1.7382e-01, -8.5175e-01,  9.9344e-01, -5.2981e-01,
         -5.8635e-01, -1.8552e-01, -4.6179e-02, -7.6889e-02,  4.2715e-02,
         -3.0835e-02,  8.6343e-02, -8.1433e-02, -1.6175e-02, -2.9577e-01,
         -1.9713e-02, -2.8499e-01,  3.8431e-01, -2.8790e-01, -1.1737e-01,
          3.9529e-02,  1.8431e-02,  4.2998e-02,  1.7562e-01, -7.8665e-02,
         -9.6903e-03, -1.0840e-01, -2.5206e-01,  1.4753e-01,  7.5278e-03,
         -3.8568e-01,  1.1226e-01,  3.1976e-01,  3.1025e-01, -2.0163e-01,
          4.4557e-01,  4.8930e-02, -1.5950e-01,  2.7932e-01,  3.8726e-01,
         -4.4012e-01,  4.2808e-01,  3.1012e-01,  1.6609e-01,  9.1383e-02,
          3.0358e-01,  2.3232e-01, -5.8139e-02, -2.6279e-01, -1.2756e-01,
         -5.8677e-01,  7.6223e-04, -2.1934e-01, -2.3190e-02, -1.3779e-01,
         -7.8420e-02, -3.8541e-01, -4.2562e-02,  1.9072e-01, -8.5725e-02,
          7.8547e-02,  1.5699e-01, -4.9324e-02,  1.7447e-01, -2.0876e-01,
         -3.8543e-02, -4.3794e-01, -4.9217e-01, -8.2210e-02,  4.2248e-02,
          1.8740e-01,  6.6976e-01, -8.4325e-02,  2.7250e-01,  8.1470e-02,
         -2.6987e-01,  5.2737e-01,  9.5962e-02,  7.0146e-02,  4.9941e-01,
         -3.2695e-01,  7.6729e-02,  1.0094e-01,  3.5642e-01,  3.6140e-01,
         -5.9170e-01, -1.5670e-01, -8.1577e-02, -3.8564e-01, -3.7625e-01,
          1.2149e-01, -6.0574e-02,  2.3502e-01,  3.5315e-02,  5.7494e-02,
         -2.0756e-01,  3.9863e-02,  2.8008e-01, -1.7510e-01, -2.0877e-02,
         -7.9461e-02, -5.5292e-02, -2.4800e-01,  2.3604e-01,  2.1826e-02,
          1.1485e-01, -1.3624e-01, -4.3663e-01,  1.7963e-01,  6.4008e-02,
         -7.0500e-03, -2.7289e-02,  1.1714e-01, -1.0440e-01,  2.5823e-01,
          9.7548e-02,  9.5932e-02, -8.7457e-02, -9.5304e-02, -3.9509e-02,
         -1.3616e-01, -1.4924e-01,  5.4294e-02, -1.2062e-02,  1.5893e-01,
          1.2426e-02,  2.9224e-02,  6.3474e-02,  3.2963e-01, -1.8342e-01,
          3.1308e-02, -1.1827e-01, -1.4538e-01,  8.5539e-02,  7.9703e-02,
          1.3326e-01,  1.2619e-01, -4.0104e-02, -8.6617e-02, -2.0485e-01,
          6.1638e-02]], device='cuda:0') tensor(0.2153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
717000 特征值优化 tensor(0.8950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7916,  0.2400, -1.1536, -0.4644,  2.4800,  1.9688,  0.6106, -2.0071,
          0.9889,  0.9147, -0.8010, -0.2164, -0.5964, -0.0842,  0.0143,  0.2319,
          0.7374,  0.7853, -0.1995, -0.0638,  0.8845,  0.2861, -0.7625,  1.0550,
         -0.5056, -0.4628, -0.1135, -0.0675, -0.1139,  0.0731, -0.0264,  0.1368,
         -0.1666,  0.0127, -0.3058, -0.0211, -0.2656,  0.3136, -0.2379, -0.1506,
         -0.0094,  0.0172,  0.0452,  0.0942, -0.1145,  0.0335, -0.0553, -0.2898,
          0.1782,  0.0705, -0.4214,  0.2035,  0.3613,  0.3160, -0.2111,  0.5823,
          0.1399, -0.3056,  0.1771,  0.4431, -0.5501,  0.3831,  0.3302,  0.1064,
          0.0648,  0.2932,  0.1293,  0.0338, -0.2378, -0.1284, -0.5358, -0.0454,
         -0.1530, -0.0084, -0.0704, -0.0235, -0.3955,  0.0181,  0.1888, -0.0597,
          0.0710,  0.1591, -0.0201,  0.1231, -0.1458,  0.0567, -0.3708, -0.5811,
         -0.2583, -0.0546,  0.1574,  0.5435, -0.0115,  0.2391,  0.0706, -0.1843,
          0.5849,  0.1723, -0.3245,  0.4997, -0.3129,  0.0221,  0.0879,  0.3155,
          0.3434, -0.6607, -0.2779, -0.0847, -0.2362, -0.3202,  0.0918, -0.0362,
          0.2521,  0.0457,  0.1504, -0.1522,  0.1383,  0.2779, -0.1084, -0.0425,
         -0.1485, -0.1389, -0.2616,  0.1968,  0.0411,  0.0902, -0.1325, -0.3702,
          0.1812,  0.0239, -0.0398,  0.0201,  0.0689, -0.0612,  0.2794,  0.1357,
          0.0205, -0.1235, -0.0939, -0.2199, -0.1018, -0.0937, -0.0206,  0.0397,
          0.1308,  0.0561,  0.0189,  0.0675,  0.2416, -0.1774,  0.0518, -0.1365,
         -0.1428,  0.0287,  0.0466,  0.1287,  0.1079, -0.0716, -0.0636, -0.1897,
          0.0801]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
718000 特征值优化 tensor(0.8946, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8640e+00,  1.5031e-01, -1.3228e+00, -4.5206e-01,  2.3085e+00,
          2.0395e+00,  4.9402e-01, -1.9931e+00,  1.1780e+00,  8.6216e-01,
         -7.5265e-01, -2.8362e-01, -6.7949e-01, -1.5452e-01,  9.4184e-02,
          2.7875e-01,  7.7375e-01,  8.3597e-01, -2.3114e-01, -9.0405e-02,
          9.5514e-01,  3.6435e-01, -6.5889e-01,  1.1279e+00, -5.2981e-01,
         -4.2161e-01, -1.3751e-01, -4.4901e-02, -9.7056e-02,  8.6720e-02,
         -2.7685e-02,  1.5002e-01, -2.1796e-01,  9.1060e-02, -3.0598e-01,
         -2.6461e-02, -2.1125e-01,  2.7776e-01, -2.2313e-01, -1.4559e-01,
         -2.2248e-02,  2.5813e-02,  4.1639e-02,  5.1633e-02, -1.2829e-01,
          6.8529e-02, -6.3801e-02, -2.2017e-01,  2.1600e-01,  1.1034e-01,
         -4.4190e-01,  2.4320e-01,  4.0766e-01,  3.1244e-01, -2.4139e-01,
          5.9276e-01,  1.1958e-01, -3.5559e-01,  1.2827e-01,  4.6012e-01,
         -5.5528e-01,  3.5630e-01,  3.4755e-01,  3.9420e-02,  5.5935e-02,
          3.0598e-01,  1.3175e-01,  5.1924e-02, -2.2020e-01, -1.1652e-01,
         -4.5882e-01, -6.9914e-02, -1.1136e-01, -6.8188e-03, -3.5535e-02,
         -1.5105e-02, -4.0093e-01,  3.8131e-02,  2.4369e-01, -6.0470e-02,
          6.0644e-02,  1.6624e-01, -4.1129e-02,  1.0184e-01, -1.0450e-01,
          6.2673e-02, -3.9536e-01, -5.8513e-01, -3.0047e-01, -4.3092e-02,
          1.4371e-01,  4.8446e-01, -2.7440e-02,  2.9018e-01,  7.1390e-02,
         -1.4503e-01,  6.2839e-01,  2.6970e-01, -4.0404e-01,  4.6847e-01,
         -1.8905e-01, -2.0682e-02,  8.4512e-02,  2.5585e-01,  3.2247e-01,
         -7.0683e-01, -3.2342e-01, -8.0031e-02, -1.7638e-01, -2.9568e-01,
          7.9372e-02, -2.3475e-02,  2.3183e-01,  4.7103e-02,  1.6046e-01,
         -1.3956e-01,  1.6330e-01,  2.5473e-01, -6.6332e-02, -5.6999e-02,
         -1.5079e-01, -1.7789e-01, -2.6549e-01,  1.8644e-01,  3.3724e-02,
          7.8321e-02, -1.3715e-01, -3.0628e-01,  1.8199e-01, -1.9107e-03,
         -3.8863e-02,  8.6475e-02,  7.5925e-02, -5.0886e-02,  2.6095e-01,
          1.5400e-01,  2.4538e-02, -1.0673e-01, -1.2642e-01, -2.3005e-01,
         -5.0917e-02, -1.0150e-01, -7.6384e-02,  4.0735e-02,  1.2388e-01,
          8.5570e-02,  4.9011e-02,  5.0521e-02,  1.7668e-01, -1.5310e-01,
          8.5753e-02, -1.3709e-01, -1.1085e-01,  4.3961e-02,  3.2846e-02,
          1.3692e-01,  1.2190e-01, -7.5049e-02, -5.8755e-02, -1.6500e-01,
          6.4059e-02]], device='cuda:0') tensor(0.2325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
719000 特征值优化 tensor(0.8585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8499e+00,  1.0128e-01, -1.4086e+00, -4.3787e-01,  2.1998e+00,
          2.0693e+00,  4.2654e-01, -2.0504e+00,  1.3078e+00,  8.3053e-01,
         -7.2737e-01, -2.8901e-01, -7.4211e-01, -2.3130e-01,  1.5982e-01,
          2.8943e-01,  7.8269e-01,  8.7299e-01, -2.6567e-01, -1.1678e-01,
          9.9133e-01,  4.0065e-01, -5.9452e-01,  1.1744e+00, -5.4152e-01,
         -3.3016e-01, -1.1188e-01, -2.8213e-02, -8.3126e-02,  9.6984e-02,
         -2.1855e-02,  1.7988e-01, -2.6308e-01,  1.1396e-01, -2.9877e-01,
          5.2341e-03, -2.0250e-01,  2.7843e-01, -2.3467e-01, -1.5181e-01,
         -3.7749e-02,  2.9450e-02,  3.4109e-02,  3.9043e-02, -1.3129e-01,
          8.2091e-02, -4.8253e-02, -1.9737e-01,  2.3495e-01,  1.1515e-01,
         -4.7319e-01,  2.3793e-01,  3.9803e-01,  3.3241e-01, -2.6367e-01,
          5.9875e-01,  1.2110e-01, -3.8219e-01,  9.6896e-02,  4.6295e-01,
         -5.2304e-01,  3.4656e-01,  3.5675e-01, -2.6918e-02,  4.0200e-02,
          2.9581e-01,  1.1233e-01,  5.7328e-02, -2.0286e-01, -1.2285e-01,
         -4.0267e-01, -7.0155e-02, -9.7078e-02,  8.5078e-03, -4.2084e-02,
         -1.5759e-02, -4.0029e-01,  6.2141e-02,  2.8402e-01, -3.4546e-02,
          7.3125e-02,  1.6454e-01, -3.6092e-02,  9.7451e-02, -8.4270e-02,
          7.3826e-02, -4.0659e-01, -5.8286e-01, -2.8832e-01, -5.3395e-02,
          1.5017e-01,  3.8805e-01,  2.1945e-03,  3.5263e-01,  6.4635e-02,
         -1.2977e-01,  6.4759e-01,  3.0979e-01, -4.1359e-01,  4.1579e-01,
         -6.7741e-02, -5.3567e-02,  1.1896e-01,  2.2895e-01,  2.8475e-01,
         -7.0487e-01, -3.4483e-01, -6.3408e-02, -1.2572e-01, -2.8081e-01,
          6.8697e-02, -1.6807e-02,  2.1072e-01,  7.5524e-02,  1.5934e-01,
         -1.3817e-01,  1.5538e-01,  2.6183e-01, -4.9092e-02, -9.7993e-02,
         -1.4596e-01, -1.7687e-01, -2.8122e-01,  1.5797e-01,  3.3276e-02,
          6.1521e-02, -1.1365e-01, -2.7851e-01,  1.8770e-01, -2.8744e-02,
         -2.8654e-02,  8.9126e-02,  7.6082e-02, -3.9423e-02,  2.5859e-01,
          1.4930e-01,  1.0550e-02, -9.3778e-02, -1.3627e-01, -1.5216e-01,
         -4.0010e-02, -1.5338e-01, -7.3174e-02,  9.3003e-03,  1.1544e-01,
          1.0809e-01,  7.2486e-02,  4.8087e-03,  1.9043e-01, -1.1504e-01,
          1.0874e-01, -1.5199e-01, -7.9889e-02,  4.3341e-02,  5.2643e-02,
          1.6107e-01,  1.1887e-01, -7.2177e-02, -3.1702e-02, -1.6614e-01,
          3.8480e-02]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
720000 特征值优化 tensor(0.8637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8818e+00,  5.6877e-02, -1.5312e+00, -4.3609e-01,  2.0526e+00,
          2.1823e+00,  3.5186e-01, -2.0792e+00,  1.4195e+00,  8.0338e-01,
         -7.1429e-01, -3.2416e-01, -7.5651e-01, -3.2214e-01,  1.8654e-01,
          3.8234e-01,  7.8886e-01,  9.3532e-01, -3.1713e-01, -1.3898e-01,
          9.5788e-01,  4.3972e-01, -5.9884e-01,  1.1962e+00, -4.9107e-01,
         -2.6268e-01, -6.8797e-02, -1.4649e-02, -1.0745e-01,  1.0937e-01,
         -1.5258e-02,  1.9386e-01, -3.0774e-01,  1.4367e-01, -2.0656e-01,
          7.6932e-04, -1.8809e-01,  2.6259e-01, -2.3316e-01, -1.7942e-01,
         -4.4715e-02,  3.3887e-02,  3.3815e-02, -1.0884e-02, -1.3193e-01,
          1.0294e-01, -3.1308e-02, -1.5601e-01,  1.8693e-01,  8.8532e-02,
         -4.6826e-01,  2.5075e-01,  3.6415e-01,  2.9413e-01, -2.7571e-01,
          6.1511e-01,  7.6854e-02, -3.6073e-01,  6.6566e-02,  4.4852e-01,
         -5.0972e-01,  2.7995e-01,  3.8332e-01, -7.5686e-02,  8.8409e-02,
          2.4397e-01,  1.0022e-01,  5.3285e-02, -1.7471e-01, -1.4584e-01,
         -3.5474e-01, -5.8535e-02, -9.2571e-02,  8.8526e-03, -3.1354e-03,
         -2.4467e-02, -4.1207e-01,  7.7094e-02,  2.9701e-01, -5.2016e-02,
          1.1346e-01,  1.6287e-01, -3.1313e-02,  1.1708e-01, -7.3342e-02,
          9.8319e-02, -4.1569e-01, -6.0846e-01, -2.0812e-01, -1.8254e-03,
          1.8564e-01,  2.6230e-01,  4.4838e-03,  4.6651e-01,  6.3715e-02,
         -9.6040e-02,  6.6708e-01,  3.4200e-01, -4.5931e-01,  2.4086e-01,
         -2.9957e-02, -5.9129e-02,  1.4300e-01,  2.3383e-01,  2.5695e-01,
         -6.3424e-01, -3.5046e-01, -1.2695e-01, -1.1414e-02, -2.5194e-01,
          6.2932e-02,  2.8221e-02,  1.9468e-01,  7.6499e-02,  1.8722e-01,
         -1.3744e-01,  1.7661e-01,  2.3498e-01, -2.4310e-02, -1.8005e-01,
         -1.1333e-01, -1.9746e-01, -2.9052e-01,  1.8584e-01,  5.8182e-02,
          3.4585e-02, -4.0644e-02, -2.5455e-01,  1.3329e-01, -5.4121e-02,
         -1.0587e-02,  9.0568e-02,  8.7862e-02, -2.3451e-02,  2.5475e-01,
          1.4760e-01, -9.9551e-03, -7.1109e-02, -1.5170e-01, -7.4330e-02,
          1.3406e-02, -2.0556e-01, -1.3360e-01, -8.5180e-03,  1.4435e-01,
          1.8085e-01,  1.1328e-01, -3.9658e-02,  1.6291e-01, -6.6178e-02,
          1.1927e-01, -1.7014e-01, -7.4259e-02,  4.7416e-02,  3.7853e-02,
          1.7114e-01,  1.1210e-01, -9.1265e-02, -1.0834e-02, -1.5028e-01,
          3.0498e-02]], device='cuda:0') tensor(0.2161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
721000 特征值优化 tensor(0.8055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9668e+00,  4.8717e-02, -1.5481e+00, -4.3820e-01,  2.0051e+00,
          2.2121e+00,  3.6295e-01, -2.1226e+00,  1.4111e+00,  7.5929e-01,
         -6.7169e-01, -3.1815e-01, -7.4386e-01, -4.4383e-01,  1.9631e-01,
          3.8728e-01,  8.1226e-01,  9.7655e-01, -3.7983e-01, -1.5170e-01,
          9.1908e-01,  4.3884e-01, -6.2736e-01,  1.1794e+00, -4.8819e-01,
         -1.8221e-01, -8.7058e-02, -5.5283e-02, -1.5439e-01,  1.0421e-01,
         -5.7356e-02,  1.9497e-01, -2.9815e-01,  2.1110e-01, -1.1940e-01,
          2.3320e-03, -1.7443e-01,  2.6251e-01, -2.3313e-01, -1.9524e-01,
         -8.8642e-02,  3.6085e-02,  4.5152e-02, -3.8734e-02, -1.2960e-01,
          1.3095e-01,  1.4387e-02, -1.4363e-01,  1.4835e-01,  8.6808e-02,
         -4.5738e-01,  2.4017e-01,  3.1892e-01,  2.7335e-01, -2.6505e-01,
          6.2485e-01,  7.8252e-02, -3.4197e-01, -1.2649e-02,  4.2170e-01,
         -5.0740e-01,  2.6802e-01,  3.8334e-01, -8.6860e-02,  1.0175e-01,
          2.1277e-01,  9.4940e-02,  1.0223e-01, -1.8323e-01, -1.2700e-01,
         -3.5799e-01, -4.1748e-02, -1.0494e-01,  1.6563e-02,  4.1937e-03,
         -2.2920e-02, -4.0128e-01,  7.2201e-02,  3.1390e-01, -5.4763e-02,
          1.3829e-01,  1.4961e-01, -1.4107e-02,  1.4636e-01, -1.0381e-01,
          9.0564e-02, -4.3867e-01, -6.2996e-01, -1.6923e-01, -4.6068e-02,
          2.2821e-01,  1.4845e-01, -1.7325e-02,  4.4758e-01,  3.3703e-02,
         -8.8548e-02,  6.8292e-01,  3.4349e-01, -4.3972e-01,  1.6706e-01,
          6.7576e-02, -8.9359e-02,  2.0804e-01,  2.3517e-01,  2.1012e-01,
         -5.7236e-01, -3.8411e-01, -1.3716e-01,  3.2327e-02, -2.4370e-01,
          4.9033e-02,  3.3199e-02,  2.0585e-01,  8.7484e-02,  1.9724e-01,
         -1.5026e-01,  1.8122e-01,  2.3109e-01, -1.2141e-02, -2.3280e-01,
         -6.9616e-02, -2.0531e-01, -2.9136e-01,  1.8782e-01,  1.0467e-01,
          1.3049e-02, -4.6191e-03, -2.4996e-01,  1.2839e-01, -6.1597e-02,
          1.9388e-02,  7.1386e-02,  9.9131e-02, -1.7659e-02,  2.2749e-01,
          1.1915e-01, -7.4525e-02, -8.1140e-02, -1.6875e-01, -5.4945e-02,
          4.7652e-02, -2.2665e-01, -1.7556e-01, -3.5577e-02,  1.3953e-01,
          2.0480e-01,  1.3808e-01, -3.9576e-02,  1.3468e-01, -7.0835e-02,
          8.5973e-02, -1.7193e-01, -5.3566e-02,  2.9834e-02,  2.6352e-02,
          1.7643e-01,  4.0861e-02, -1.0231e-01,  2.9244e-02, -1.2939e-01,
          3.8654e-02]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
722000 特征值优化 tensor(0.8063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9834,  0.0305, -1.5518, -0.4364,  1.9879,  2.2595,  0.3610, -2.1830,
          1.3953,  0.7417, -0.6300, -0.3099, -0.7611, -0.5264,  0.1968,  0.3798,
          0.8176,  0.9640, -0.3995, -0.1592,  0.9041,  0.4219, -0.6289,  1.1665,
         -0.4534, -0.1514, -0.1367, -0.0735, -0.2015,  0.1094, -0.0869,  0.1917,
         -0.3110,  0.2315, -0.0963,  0.0203, -0.1722,  0.2592, -0.2512, -0.1941,
         -0.1319,  0.0374,  0.0455, -0.0481, -0.1337,  0.1428,  0.0329, -0.1478,
          0.1208,  0.0941, -0.4543,  0.2206,  0.2826,  0.2718, -0.2557,  0.6271,
          0.0554, -0.3320, -0.0429,  0.3942, -0.4963,  0.2798,  0.3864, -0.0780,
          0.0954,  0.1877,  0.0716,  0.1292, -0.1938, -0.1138, -0.3560, -0.0400,
         -0.1213,  0.0301,  0.0199, -0.0117, -0.3978,  0.0629,  0.3127, -0.0593,
          0.1393,  0.1462,  0.0070,  0.1578, -0.0975,  0.0637, -0.4423, -0.6306,
         -0.1753, -0.0470,  0.2399,  0.1116, -0.0269,  0.4278,  0.0382, -0.0916,
          0.6821,  0.3691, -0.4469,  0.1565,  0.0769, -0.0950,  0.2438,  0.2507,
          0.1746, -0.5497, -0.3968, -0.1461,  0.0370, -0.2388,  0.0477,  0.0378,
          0.2261,  0.0899,  0.1884, -0.1609,  0.1803,  0.2227, -0.0356, -0.2424,
         -0.0462, -0.2087, -0.2863,  0.2069,  0.1221,  0.0112,  0.0109, -0.2468,
          0.1308, -0.0669,  0.0260,  0.0573,  0.0909, -0.0174,  0.2162,  0.0991,
         -0.0940, -0.1089, -0.1540, -0.0757,  0.0303, -0.2303, -0.1826, -0.0466,
          0.1370,  0.2325,  0.1398, -0.0294,  0.1208, -0.0843,  0.0715, -0.1729,
         -0.0534,  0.0154,  0.0171,  0.1549,  0.0163, -0.0945,  0.0443, -0.1248,
          0.0466]], device='cuda:0') tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
723000 特征值优化 tensor(0.8024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9960e+00, -1.4099e-02, -1.5315e+00, -4.3892e-01,  1.9931e+00,
          2.2860e+00,  3.5380e-01, -2.2174e+00,  1.3616e+00,  7.3171e-01,
         -6.1329e-01, -2.8616e-01, -7.4847e-01, -5.7606e-01,  2.0732e-01,
          3.7420e-01,  8.0986e-01,  9.5123e-01, -3.9905e-01, -1.5987e-01,
          8.8375e-01,  3.9581e-01, -6.3077e-01,  1.1635e+00, -4.2323e-01,
         -1.5522e-01, -1.7984e-01, -9.5638e-02, -2.2392e-01,  1.2923e-01,
         -9.9574e-02,  1.9401e-01, -3.0983e-01,  2.5687e-01, -7.6575e-02,
          3.7716e-02, -1.7828e-01,  2.5749e-01, -2.6954e-01, -1.8108e-01,
         -1.5445e-01,  3.5588e-02,  4.5583e-02, -5.7907e-02, -1.5240e-01,
          1.4663e-01,  4.1039e-02, -1.4601e-01,  1.0378e-01,  9.4593e-02,
         -4.5154e-01,  2.0134e-01,  2.6088e-01,  2.6820e-01, -2.5675e-01,
          6.3204e-01,  4.4367e-02, -3.0192e-01, -6.0769e-02,  3.7796e-01,
         -4.9052e-01,  2.8362e-01,  3.8425e-01, -7.2891e-02,  9.3197e-02,
          1.7836e-01,  6.6539e-02,  1.4914e-01, -1.9974e-01, -1.0521e-01,
         -3.5058e-01, -4.7466e-02, -1.3003e-01,  3.9948e-02,  2.5743e-02,
         -6.2077e-03, -4.0602e-01,  5.7190e-02,  3.0538e-01, -4.8104e-02,
          1.3885e-01,  1.3913e-01,  3.0057e-02,  1.6814e-01, -1.0500e-01,
          5.0449e-02, -4.4944e-01, -6.3868e-01, -1.9149e-01, -4.8068e-02,
          2.3944e-01,  9.4837e-02, -3.9252e-02,  4.1102e-01,  3.6469e-02,
         -9.3090e-02,  6.8658e-01,  3.5684e-01, -4.6792e-01,  1.7136e-01,
          8.0675e-02, -7.7860e-02,  2.8620e-01,  2.5258e-01,  1.6110e-01,
         -5.5020e-01, -4.1573e-01, -1.4682e-01,  1.6384e-02, -2.2656e-01,
          5.1255e-02,  3.1346e-02,  2.2986e-01,  1.0632e-01,  1.9484e-01,
         -1.5480e-01,  1.7612e-01,  2.1385e-01, -3.7260e-02, -2.4713e-01,
         -2.9630e-02, -2.0610e-01, -2.8469e-01,  2.1503e-01,  1.2697e-01,
          2.2611e-02,  1.8021e-02, -2.3528e-01,  1.3298e-01, -6.7407e-02,
          2.7007e-02,  4.5776e-02,  8.1881e-02, -1.3171e-02,  2.1279e-01,
          7.5704e-02, -1.0301e-01, -1.2396e-01, -1.4412e-01, -1.1582e-01,
          1.8780e-02, -2.2474e-01, -1.8881e-01, -4.7513e-02,  1.4995e-01,
          2.4903e-01,  1.4313e-01, -3.1715e-02,  1.1821e-01, -8.8059e-02,
          5.1634e-02, -1.7411e-01, -6.3496e-02,  1.9096e-02,  6.5012e-05,
          1.3941e-01, -1.3523e-02, -9.0789e-02,  3.7631e-02, -1.1266e-01,
          5.6303e-02]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
724000 特征值优化 tensor(0.8050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9834e+00, -2.3365e-02, -1.5017e+00, -4.3913e-01,  2.0060e+00,
          2.2871e+00,  3.7102e-01, -2.2376e+00,  1.3597e+00,  7.2747e-01,
         -6.0638e-01, -2.5964e-01, -7.7117e-01, -6.0573e-01,  2.5155e-01,
          3.5836e-01,  7.9581e-01,  9.6113e-01, -4.1544e-01, -1.5873e-01,
          8.9938e-01,  3.9084e-01, -6.4020e-01,  1.1491e+00, -4.0997e-01,
         -1.4974e-01, -2.0947e-01, -8.3068e-02, -2.4740e-01,  1.4840e-01,
         -1.1715e-01,  1.8238e-01, -3.0216e-01,  2.3209e-01, -6.0614e-02,
          4.6822e-02, -1.7885e-01,  2.5046e-01, -2.9476e-01, -1.7887e-01,
         -1.7694e-01,  3.8089e-02,  3.8535e-02, -6.8072e-02, -1.7278e-01,
          1.4899e-01,  3.2096e-02, -1.7066e-01,  9.6318e-02,  9.9136e-02,
         -4.5023e-01,  1.8434e-01,  2.5337e-01,  2.5372e-01, -2.5579e-01,
          6.3261e-01,  4.3983e-02, -3.1317e-01, -8.5307e-02,  3.5936e-01,
         -5.0381e-01,  2.8150e-01,  3.8184e-01, -6.9984e-02,  8.6899e-02,
          1.7282e-01,  5.2115e-02,  1.6107e-01, -2.0628e-01, -9.7355e-02,
         -3.5349e-01, -3.9202e-02, -1.2313e-01,  5.6801e-02,  9.8838e-03,
          3.3315e-03, -4.0299e-01,  3.3098e-02,  2.7991e-01, -6.5576e-02,
          1.3627e-01,  1.3294e-01,  3.9692e-02,  1.5442e-01, -9.3198e-02,
          1.2975e-02, -4.4941e-01, -6.5547e-01, -1.9243e-01, -5.6067e-02,
          2.2062e-01,  8.4341e-02, -4.5993e-02,  3.8522e-01,  5.0088e-02,
         -1.0368e-01,  6.9938e-01,  3.5241e-01, -4.8887e-01,  1.3710e-01,
          5.1621e-02, -5.5297e-02,  3.1847e-01,  2.6039e-01,  1.3452e-01,
         -5.3011e-01, -4.2074e-01, -1.4876e-01, -1.5525e-02, -2.2713e-01,
          6.5090e-02,  2.1964e-02,  2.2756e-01,  1.2850e-01,  1.7276e-01,
         -1.4542e-01,  1.7029e-01,  2.1668e-01, -5.4274e-02, -2.4329e-01,
         -1.5239e-02, -2.0789e-01, -2.8068e-01,  2.2155e-01,  1.2471e-01,
          2.3555e-02,  1.4339e-02, -2.4163e-01,  1.3616e-01, -7.1870e-02,
          1.5500e-02,  2.8485e-02,  7.6141e-02, -1.2603e-02,  2.0345e-01,
          8.7902e-02, -1.0986e-01, -1.2660e-01, -1.3226e-01, -9.6007e-02,
          2.1640e-02, -2.1558e-01, -2.0946e-01, -8.7870e-02,  1.5170e-01,
          2.5099e-01,  1.4430e-01, -2.4672e-02,  1.2872e-01, -1.1403e-01,
          3.2885e-02, -1.8715e-01, -7.5265e-02,  1.9843e-02,  1.5526e-03,
          1.5553e-01, -4.0739e-02, -7.8768e-02,  3.2909e-02, -1.0361e-01,
          5.4636e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
725000 特征值优化 tensor(0.8020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9534, -0.0501, -1.4679, -0.4424,  2.0366,  2.2613,  0.3582, -2.2553,
          1.3540,  0.7286, -0.6053, -0.2805, -0.7712, -0.6291,  0.2416,  0.3494,
          0.7686,  0.9588, -0.4238, -0.1590,  0.9113,  0.3852, -0.6294,  1.1327,
         -0.3999, -0.1644, -0.2566, -0.0952, -0.2583,  0.1604, -0.1267,  0.1651,
         -0.3245,  0.2194, -0.0399,  0.0517, -0.1768,  0.2376, -0.2942, -0.1846,
         -0.1784,  0.0323,  0.0344, -0.0732, -0.1871,  0.1663,  0.0270, -0.1626,
          0.0928,  0.1055, -0.4468,  0.1802,  0.2558,  0.2668, -0.2510,  0.6483,
          0.0267, -0.2992, -0.1056,  0.3646, -0.5070,  0.2827,  0.3641, -0.0429,
          0.0717,  0.1696,  0.0508,  0.1796, -0.2171, -0.0889, -0.3567, -0.0384,
         -0.1234,  0.0573,  0.0143,  0.0117, -0.3926,  0.0279,  0.2698, -0.0684,
          0.1402,  0.1406,  0.0375,  0.1766, -0.1018,  0.0138, -0.4470, -0.6655,
         -0.2162, -0.0700,  0.2205,  0.0829, -0.0711,  0.3957,  0.0590, -0.1081,
          0.7089,  0.3073, -0.4662,  0.1563,  0.0231, -0.0378,  0.3417,  0.2805,
          0.1329, -0.5315, -0.4034, -0.1498, -0.0523, -0.2206,  0.0658,  0.0337,
          0.2364,  0.1080,  0.1823, -0.1619,  0.1665,  0.2109, -0.0518, -0.2410,
         -0.0257, -0.1983, -0.2778,  0.2216,  0.1240,  0.0288,  0.0229, -0.2336,
          0.1322, -0.0724,  0.0290,  0.0240,  0.0771, -0.0092,  0.1936,  0.0872,
         -0.1131, -0.1090, -0.1220, -0.1063,  0.0277, -0.2167, -0.2083, -0.0870,
          0.1535,  0.2760,  0.1557, -0.0212,  0.1302, -0.0891,  0.0473, -0.1778,
         -0.0737,  0.0139, -0.0229,  0.1513, -0.0183, -0.0784,  0.0246, -0.1265,
          0.0724]], device='cuda:0') tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
726000 特征值优化 tensor(0.7986, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9209, -0.0810, -1.4479, -0.4465,  2.0853,  2.2604,  0.3389, -2.2458,
          1.3554,  0.7241, -0.6090, -0.2744, -0.7607, -0.6501,  0.2162,  0.3261,
          0.7404,  0.9648, -0.4354, -0.1467,  0.9318,  0.3743, -0.6387,  1.1256,
         -0.3833, -0.1641, -0.2679, -0.1132, -0.2677,  0.1846, -0.1361,  0.1545,
         -0.3128,  0.2403, -0.0255,  0.0569, -0.1816,  0.2189, -0.2920, -0.1650,
         -0.1824,  0.0362,  0.0394, -0.0670, -0.2107,  0.1697,  0.0176, -0.1705,
          0.0833,  0.0983, -0.4424,  0.1786,  0.2549,  0.2688, -0.2558,  0.6556,
          0.0319, -0.3063, -0.1160,  0.3540, -0.5231,  0.2717,  0.3518, -0.0456,
          0.0741,  0.1604,  0.0503,  0.1955, -0.2216, -0.0769, -0.3511, -0.0327,
         -0.1223,  0.0560,  0.0214,  0.0128, -0.3951,  0.0241,  0.2710, -0.0722,
          0.1393,  0.1285,  0.0433,  0.1714, -0.1031,  0.0061, -0.4422, -0.6775,
         -0.2260, -0.0923,  0.2070,  0.0910, -0.0919,  0.3894,  0.0478, -0.1175,
          0.7206,  0.2935, -0.4586,  0.1627,  0.0279, -0.0182,  0.3453,  0.2748,
          0.1254, -0.5259, -0.3986, -0.1484, -0.0614, -0.2131,  0.0778,  0.0389,
          0.2186,  0.1135,  0.2011, -0.1623,  0.1577,  0.2108, -0.0579, -0.2405,
         -0.0273, -0.1890, -0.2769,  0.2295,  0.1117,  0.0236,  0.0270, -0.2314,
          0.1420, -0.0736,  0.0297,  0.0178,  0.0728, -0.0060,  0.1961,  0.0949,
         -0.1195, -0.1017, -0.1074, -0.1159,  0.0233, -0.2054, -0.2058, -0.1034,
          0.1570,  0.2938,  0.1423, -0.0133,  0.1275, -0.0808,  0.0276, -0.1827,
         -0.0828, -0.0047, -0.0231,  0.1492, -0.0329, -0.0732,  0.0114, -0.1253,
          0.0721]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
727000 特征值优化 tensor(0.8109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8979e+00, -8.0615e-02, -1.4451e+00, -4.4219e-01,  2.1059e+00,
          2.2729e+00,  3.4487e-01, -2.2305e+00,  1.3435e+00,  7.2781e-01,
         -6.0454e-01, -2.6100e-01, -7.7531e-01, -6.4586e-01,  2.6258e-01,
          3.0333e-01,  7.3052e-01,  9.7078e-01, -4.4196e-01, -1.3331e-01,
          9.2705e-01,  3.7088e-01, -6.3965e-01,  1.1049e+00, -3.7426e-01,
         -1.6537e-01, -3.0035e-01, -1.0495e-01, -2.8442e-01,  1.9750e-01,
         -1.4624e-01,  1.3766e-01, -3.0621e-01,  2.3729e-01, -8.3807e-03,
          6.2250e-02, -1.7548e-01,  2.2041e-01, -3.0333e-01, -1.8283e-01,
         -2.0161e-01,  3.4051e-02,  3.8617e-02, -6.7845e-02, -2.2059e-01,
          1.7473e-01,  1.1711e-02, -1.9459e-01,  7.3985e-02,  9.6909e-02,
         -4.4514e-01,  1.6729e-01,  2.8465e-01,  2.7359e-01, -2.4525e-01,
          6.6156e-01,  3.7190e-02, -3.1137e-01, -1.3182e-01,  3.5255e-01,
         -5.3501e-01,  2.5880e-01,  3.4334e-01, -5.0838e-02,  8.8129e-02,
          1.4131e-01,  3.6928e-02,  1.9493e-01, -2.3068e-01, -7.1936e-02,
         -3.5120e-01, -2.7803e-02, -1.1961e-01,  4.7586e-02,  1.7853e-02,
          1.8435e-02, -3.9691e-01,  2.3001e-02,  2.6353e-01, -7.2496e-02,
          1.2596e-01,  1.2629e-01,  5.1382e-02,  1.4804e-01, -8.7211e-02,
          1.9412e-03, -4.3475e-01, -6.8866e-01, -2.2323e-01, -9.0109e-02,
          2.0188e-01,  9.9682e-02, -1.1549e-01,  3.6132e-01,  5.4218e-02,
         -1.1697e-01,  7.3409e-01,  2.9537e-01, -4.6243e-01,  1.9186e-01,
         -6.1406e-03, -8.8521e-03,  3.4964e-01,  2.8171e-01,  1.0254e-01,
         -5.0885e-01, -4.1073e-01, -1.4884e-01, -7.1066e-02, -2.0935e-01,
          8.1134e-02,  3.9613e-02,  2.2862e-01,  1.1704e-01,  1.9098e-01,
         -1.5483e-01,  1.4465e-01,  1.9434e-01, -7.6794e-02, -2.4326e-01,
         -2.2772e-02, -1.8837e-01, -2.6880e-01,  2.3178e-01,  1.1300e-01,
          1.9642e-02,  2.2196e-02, -2.3478e-01,  1.2501e-01, -7.4737e-02,
          2.2228e-02,  6.2513e-03,  6.6206e-02, -9.3625e-03,  1.9002e-01,
          9.4840e-02, -1.0131e-01, -1.2272e-01, -1.2258e-01, -1.0276e-01,
          2.7509e-02, -2.1864e-01, -1.9534e-01, -1.0200e-01,  1.6772e-01,
          2.9179e-01,  1.3945e-01, -9.1999e-03,  1.3023e-01, -8.8652e-02,
          1.0520e-02, -1.8015e-01, -7.5106e-02,  3.0667e-03, -2.5035e-02,
          1.4966e-01, -4.0120e-02, -6.8262e-02,  2.4654e-02, -1.0872e-01,
          7.5560e-02]], device='cuda:0') tensor(0.2249, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
728000 特征值优化 tensor(0.7972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8785e+00, -1.0892e-01, -1.4288e+00, -4.4065e-01,  2.1519e+00,
          2.2734e+00,  3.1004e-01, -2.2419e+00,  1.3626e+00,  7.1800e-01,
         -6.0596e-01, -2.7579e-01, -7.7338e-01, -6.8350e-01,  2.2952e-01,
          2.9532e-01,  6.9949e-01,  9.8302e-01, -4.3208e-01, -1.1548e-01,
          9.3379e-01,  3.8307e-01, -6.4872e-01,  1.1055e+00, -3.7137e-01,
         -1.7337e-01, -3.2324e-01, -9.5588e-02, -2.9700e-01,  2.1130e-01,
         -1.5927e-01,  1.2996e-01, -3.0529e-01,  2.2025e-01,  2.3366e-02,
          8.0077e-02, -1.6641e-01,  2.1078e-01, -3.0265e-01, -1.6577e-01,
         -1.9388e-01,  3.3710e-02,  4.2551e-02, -6.7222e-02, -2.3940e-01,
          1.8330e-01,  2.1659e-02, -1.8953e-01,  6.0049e-02,  8.4127e-02,
         -4.5116e-01,  1.6285e-01,  2.9927e-01,  2.6961e-01, -2.4258e-01,
          6.4641e-01,  2.7707e-02, -3.2487e-01, -1.4426e-01,  3.4036e-01,
         -5.2698e-01,  2.5235e-01,  3.2847e-01, -3.6293e-02,  7.8737e-02,
          1.3411e-01,  3.0847e-02,  2.1024e-01, -2.3239e-01, -7.6133e-02,
         -3.4827e-01, -2.0984e-02, -1.2124e-01,  3.8084e-02,  2.0689e-02,
          5.3696e-03, -4.0839e-01, -4.8853e-04,  2.5805e-01, -8.0339e-02,
          1.2709e-01,  1.2589e-01,  5.8866e-02,  1.5368e-01, -7.7339e-02,
         -2.5405e-02, -4.2643e-01, -7.0876e-01, -2.4191e-01, -1.0115e-01,
          1.9668e-01,  8.4960e-02, -1.1873e-01,  3.5803e-01,  5.0174e-02,
         -1.1905e-01,  7.4250e-01,  2.7917e-01, -4.6051e-01,  1.8780e-01,
         -6.4649e-03, -1.2856e-03,  3.5134e-01,  2.7425e-01,  1.0570e-01,
         -4.9209e-01, -3.9884e-01, -1.4652e-01, -7.0706e-02, -2.0331e-01,
          8.7727e-02,  5.6601e-02,  2.2291e-01,  1.0677e-01,  1.9414e-01,
         -1.6864e-01,  1.4476e-01,  1.9373e-01, -8.4441e-02, -2.4741e-01,
         -2.8744e-02, -1.7711e-01, -2.6899e-01,  2.2615e-01,  1.0557e-01,
          2.5169e-02,  2.0892e-02, -2.3257e-01,  1.1859e-01, -7.8102e-02,
          1.8047e-02,  1.0668e-02,  6.1888e-02, -5.0417e-03,  1.9343e-01,
          1.0582e-01, -1.1442e-01, -1.1504e-01, -1.0769e-01, -1.1092e-01,
          2.0855e-02, -2.2233e-01, -2.0030e-01, -1.1266e-01,  1.5806e-01,
          3.0272e-01,  1.4212e-01,  6.9960e-03,  1.4797e-01, -8.9878e-02,
          3.8553e-03, -1.8856e-01, -6.5439e-02, -9.5632e-03, -1.9075e-02,
          1.5209e-01, -3.8696e-02, -8.0079e-02,  1.1564e-02, -1.0602e-01,
          7.7313e-02]], device='cuda:0') tensor(0.2129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
729000 特征值优化 tensor(0.7920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8558e+00, -1.2108e-01, -1.4172e+00, -4.4858e-01,  2.1656e+00,
          2.2745e+00,  2.9980e-01, -2.2349e+00,  1.3653e+00,  7.0466e-01,
         -6.0999e-01, -2.5895e-01, -7.8678e-01, -7.0145e-01,  1.6491e-01,
          2.7777e-01,  7.0088e-01,  9.8225e-01, -4.3086e-01, -1.1089e-01,
          9.2148e-01,  3.9333e-01, -6.4454e-01,  1.1025e+00, -3.9216e-01,
         -1.4086e-01, -3.1820e-01, -1.1093e-01, -2.7643e-01,  2.2996e-01,
         -1.7818e-01,  1.0714e-01, -2.9738e-01,  2.0385e-01,  4.8712e-02,
          9.0047e-02, -1.7437e-01,  2.0502e-01, -3.1730e-01, -1.7876e-01,
         -1.9036e-01,  3.5002e-02,  4.1630e-02, -7.9700e-02, -2.5205e-01,
          1.8717e-01,  6.0403e-03, -1.9432e-01,  3.7785e-02,  6.1565e-02,
         -4.5281e-01,  1.5943e-01,  2.9459e-01,  2.6767e-01, -2.3425e-01,
          6.7230e-01,  5.4576e-02, -3.2740e-01, -1.5044e-01,  3.3183e-01,
         -5.5648e-01,  2.4489e-01,  3.2160e-01, -3.4736e-02,  8.7421e-02,
          1.1477e-01,  1.2628e-02,  2.1265e-01, -2.2860e-01, -7.2260e-02,
         -3.4843e-01, -1.1173e-02, -1.2218e-01,  3.4155e-02,  2.3128e-02,
          5.3961e-03, -4.1596e-01, -3.4796e-02,  2.5626e-01, -8.0691e-02,
          1.2381e-01,  1.1471e-01,  7.0003e-02,  1.3614e-01, -8.7614e-02,
         -4.0431e-02, -4.2447e-01, -7.2510e-01, -2.6156e-01, -9.5930e-02,
          2.0095e-01,  7.8441e-02, -1.5004e-01,  3.5160e-01,  4.6621e-02,
         -1.2287e-01,  7.5120e-01,  2.7852e-01, -4.7709e-01,  1.5897e-01,
         -4.0696e-02, -9.7325e-03,  3.6439e-01,  2.6310e-01,  9.9138e-02,
         -4.9769e-01, -4.1528e-01, -1.3854e-01, -6.8188e-02, -2.0221e-01,
          9.8191e-02,  3.3519e-02,  2.2530e-01,  1.4076e-01,  1.8930e-01,
         -1.4827e-01,  1.1618e-01,  1.8700e-01, -9.3552e-02, -2.6688e-01,
         -1.0512e-02, -1.8486e-01, -2.6836e-01,  2.2395e-01,  9.8418e-02,
          1.4394e-02,  1.7925e-02, -2.3150e-01,  1.2564e-01, -9.2050e-02,
          1.0921e-02,  7.3290e-03,  5.9783e-02, -9.8640e-04,  1.9348e-01,
          9.9824e-02, -8.4338e-02, -9.8153e-02, -1.2266e-01, -8.7362e-02,
          1.5016e-02, -2.1538e-01, -1.9728e-01, -1.1964e-01,  1.6921e-01,
          2.8464e-01,  1.3694e-01,  8.2343e-03,  1.5136e-01, -1.0152e-01,
         -4.6180e-03, -2.0121e-01, -7.4607e-02, -2.5716e-02, -1.3919e-03,
          1.3305e-01, -5.9358e-02, -6.7490e-02,  1.2703e-02, -9.8067e-02,
          7.8009e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
730000 特征值优化 tensor(0.8150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8158e+00, -1.1346e-01, -1.3997e+00, -4.4058e-01,  2.1400e+00,
          2.2575e+00,  2.7426e-01, -2.2064e+00,  1.3596e+00,  6.9703e-01,
         -5.9949e-01, -2.7566e-01, -7.7677e-01, -7.0780e-01,  1.2505e-01,
          2.8477e-01,  6.7346e-01,  9.8664e-01, -4.3567e-01, -1.0884e-01,
          9.1792e-01,  3.9106e-01, -6.2991e-01,  1.0982e+00, -4.0957e-01,
         -1.5122e-01, -3.2584e-01, -9.3531e-02, -2.8522e-01,  2.2777e-01,
         -1.8077e-01,  1.1515e-01, -2.8688e-01,  2.1201e-01,  5.8600e-02,
          9.9788e-02, -1.5552e-01,  2.1063e-01, -3.2768e-01, -1.6099e-01,
         -2.0745e-01,  3.2136e-02,  3.8342e-02, -6.6295e-02, -2.5542e-01,
          2.0527e-01,  3.7566e-04, -1.9522e-01, -1.8271e-03,  4.0764e-02,
         -4.5951e-01,  1.4882e-01,  3.0646e-01,  2.6218e-01, -2.1970e-01,
          6.6659e-01,  6.5287e-02, -3.2917e-01, -1.5392e-01,  3.2992e-01,
         -5.5551e-01,  2.5711e-01,  3.1296e-01, -3.7937e-02,  8.2314e-02,
          1.1224e-01, -5.3369e-03,  2.1531e-01, -2.3267e-01, -6.9757e-02,
         -3.4717e-01, -2.2808e-03, -1.1810e-01,  5.7295e-02,  2.3487e-02,
          6.7441e-03, -4.0504e-01, -3.1193e-02,  2.4980e-01, -8.3988e-02,
          1.1803e-01,  1.1952e-01,  6.7647e-02,  1.3393e-01, -9.1512e-02,
         -2.7527e-02, -4.2346e-01, -7.0667e-01, -2.8885e-01, -1.0685e-01,
          2.0856e-01,  6.3855e-02, -1.3859e-01,  3.4338e-01,  6.1105e-02,
         -1.2442e-01,  7.5311e-01,  2.4750e-01, -4.8827e-01,  1.8590e-01,
         -4.2256e-02, -3.6457e-04,  3.7773e-01,  2.6811e-01,  8.6363e-02,
         -4.9163e-01, -4.2059e-01, -1.4561e-01, -7.5677e-02, -2.0122e-01,
          9.8478e-02,  4.7832e-02,  2.2803e-01,  1.2584e-01,  1.9839e-01,
         -1.6547e-01,  1.1584e-01,  1.9519e-01, -9.9158e-02, -2.5858e-01,
         -2.2221e-02, -1.7129e-01, -2.7167e-01,  2.2798e-01,  1.1084e-01,
          1.7466e-02,  1.5819e-02, -2.2996e-01,  1.2375e-01, -8.1510e-02,
          9.1917e-03,  1.1230e-02,  6.8765e-02,  9.1056e-03,  1.8873e-01,
          1.2096e-01, -1.1368e-01, -1.0369e-01, -9.9778e-02, -9.7156e-02,
          3.9882e-02, -2.1753e-01, -1.8400e-01, -1.1277e-01,  1.6940e-01,
          2.9612e-01,  1.1399e-01,  6.1171e-03,  1.5122e-01, -9.7166e-02,
         -1.7258e-02, -2.0171e-01, -8.3194e-02, -2.1595e-02, -1.3166e-03,
          1.4165e-01, -6.8939e-02, -5.5639e-02,  2.3712e-02, -7.9791e-02,
          7.0430e-02]], device='cuda:0') tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
731000 特征值优化 tensor(0.8100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8083e+00, -1.0743e-01, -1.4071e+00, -4.3564e-01,  2.1406e+00,
          2.2565e+00,  2.7524e-01, -2.2224e+00,  1.3523e+00,  6.9217e-01,
         -5.9615e-01, -2.7363e-01, -7.8816e-01, -7.1770e-01,  1.2166e-01,
          2.8205e-01,  6.6229e-01,  9.8187e-01, -4.3928e-01, -9.7912e-02,
          9.3374e-01,  4.0823e-01, -6.4509e-01,  1.0901e+00, -4.1150e-01,
         -1.5650e-01, -3.3573e-01, -9.1383e-02, -2.8445e-01,  2.3518e-01,
         -1.8116e-01,  1.0698e-01, -2.9786e-01,  2.1341e-01,  6.6904e-02,
          1.1242e-01, -1.6383e-01,  2.0690e-01, -3.2956e-01, -1.6282e-01,
         -2.0860e-01,  3.0989e-02,  3.7658e-02, -6.9207e-02, -2.5955e-01,
          2.0146e-01, -5.1171e-03, -1.8758e-01, -1.3362e-02,  4.8476e-02,
         -4.7016e-01,  1.3860e-01,  3.1466e-01,  2.6635e-01, -2.0961e-01,
          6.6253e-01,  6.5956e-02, -3.3831e-01, -1.6186e-01,  3.3015e-01,
         -5.4462e-01,  2.4410e-01,  3.0724e-01, -2.9497e-02,  7.8674e-02,
          9.6907e-02, -2.3705e-02,  2.3405e-01, -2.3675e-01, -6.5786e-02,
         -3.4855e-01, -4.3327e-03, -1.1234e-01,  4.8772e-02,  3.4730e-02,
          4.4360e-03, -4.0632e-01, -4.6896e-02,  2.4468e-01, -6.8928e-02,
          1.2119e-01,  1.2477e-01,  6.3248e-02,  1.3367e-01, -8.3941e-02,
         -3.6183e-02, -4.1432e-01, -7.1141e-01, -2.9577e-01, -9.3574e-02,
          2.0697e-01,  5.5589e-02, -1.3499e-01,  3.4832e-01,  5.5458e-02,
         -1.2109e-01,  7.6117e-01,  2.7033e-01, -5.0005e-01,  1.8559e-01,
         -5.2271e-02,  2.5857e-04,  3.7998e-01,  2.7926e-01,  9.0114e-02,
         -4.8794e-01, -4.0654e-01, -1.5233e-01, -6.8683e-02, -1.9513e-01,
          9.9593e-02,  4.6628e-02,  2.1734e-01,  1.2988e-01,  1.9491e-01,
         -1.6674e-01,  1.1187e-01,  1.9063e-01, -1.0777e-01, -2.5768e-01,
         -1.7240e-02, -1.6481e-01, -2.6973e-01,  2.2799e-01,  1.1088e-01,
          1.5018e-02,  1.2578e-02, -2.3153e-01,  1.1462e-01, -8.2607e-02,
          7.9263e-03,  9.9454e-03,  7.0115e-02,  4.7587e-03,  1.9021e-01,
          1.1035e-01, -1.0609e-01, -8.8490e-02, -1.0855e-01, -8.6700e-02,
          3.2093e-02, -2.3643e-01, -1.7588e-01, -1.1876e-01,  1.7062e-01,
          2.9328e-01,  1.2078e-01,  4.9861e-03,  1.5452e-01, -9.0452e-02,
         -4.5521e-03, -2.0753e-01, -7.7492e-02, -2.3710e-02,  5.8693e-03,
          1.4128e-01, -6.4171e-02, -5.1216e-02,  6.5264e-03, -7.0950e-02,
          7.2160e-02]], device='cuda:0') tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
732000 特征值优化 tensor(0.8362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8263e+00, -1.0012e-01, -1.4138e+00, -4.4209e-01,  2.1488e+00,
          2.2752e+00,  2.7268e-01, -2.2391e+00,  1.3595e+00,  6.7604e-01,
         -5.8928e-01, -2.5837e-01, -7.8811e-01, -7.2823e-01,  1.4346e-01,
          2.4357e-01,  6.7245e-01,  9.7840e-01, -4.3874e-01, -8.3988e-02,
          9.2158e-01,  4.0257e-01, -6.3154e-01,  1.0719e+00, -4.0823e-01,
         -1.6404e-01, -3.3759e-01, -9.1716e-02, -2.9765e-01,  2.4368e-01,
         -1.8637e-01,  9.8253e-02, -2.7667e-01,  2.0655e-01,  7.7952e-02,
          1.1745e-01, -1.6556e-01,  2.1671e-01, -3.2995e-01, -1.6368e-01,
         -2.2096e-01,  3.4783e-02,  3.3649e-02, -6.9818e-02, -2.7036e-01,
          2.1869e-01, -4.3446e-03, -2.0582e-01, -1.4304e-02,  3.0791e-02,
         -4.7377e-01,  1.3184e-01,  3.3516e-01,  2.6803e-01, -2.0510e-01,
          6.7129e-01,  5.9809e-02, -3.3177e-01, -1.5533e-01,  3.2845e-01,
         -5.5626e-01,  2.3686e-01,  3.0117e-01, -3.1133e-02,  7.3245e-02,
          7.4359e-02, -3.5507e-02,  2.2256e-01, -2.3849e-01, -6.6196e-02,
         -3.4395e-01,  3.4165e-03, -1.1214e-01,  4.9688e-02,  1.1696e-02,
         -2.8139e-03, -4.0724e-01, -3.3545e-02,  2.3109e-01, -7.7449e-02,
          1.0448e-01,  1.2046e-01,  7.2949e-02,  1.3349e-01, -7.9493e-02,
         -2.4690e-02, -4.2016e-01, -7.2855e-01, -2.6433e-01, -9.4390e-02,
          2.0409e-01,  7.1415e-02, -1.4821e-01,  3.1867e-01,  5.4577e-02,
         -1.1968e-01,  7.6266e-01,  2.6435e-01, -4.8939e-01,  1.8481e-01,
         -6.2142e-02, -2.4006e-03,  3.7481e-01,  2.7635e-01,  7.7988e-02,
         -4.9887e-01, -4.0784e-01, -1.5024e-01, -7.9767e-02, -1.8919e-01,
          9.8779e-02,  4.8181e-02,  2.1280e-01,  1.3693e-01,  1.9427e-01,
         -1.6894e-01,  8.9175e-02,  1.7452e-01, -1.1109e-01, -2.6502e-01,
         -2.0440e-02, -1.6739e-01, -2.6379e-01,  2.2780e-01,  1.0638e-01,
          1.7671e-02,  1.4331e-02, -2.2643e-01,  1.1647e-01, -8.7465e-02,
          3.8942e-03,  6.6642e-03,  6.8142e-02,  1.8569e-03,  1.9161e-01,
          1.3336e-01, -8.4667e-02, -1.1406e-01, -1.1937e-01, -7.9598e-02,
          1.7588e-02, -2.3979e-01, -1.6610e-01, -1.2002e-01,  1.7206e-01,
          3.0193e-01,  1.1285e-01,  9.4211e-04,  1.5206e-01, -9.6470e-02,
         -5.9338e-03, -2.0461e-01, -8.4330e-02, -2.9659e-02, -2.7414e-03,
          1.4047e-01, -7.4950e-02, -4.9467e-02,  3.2962e-02, -6.6460e-02,
          7.3636e-02]], device='cuda:0') tensor(0.2393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
733000 特征值优化 tensor(0.7957, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7996e+00, -1.1552e-01, -1.3970e+00, -4.4264e-01,  2.1545e+00,
          2.2571e+00,  2.5745e-01, -2.2053e+00,  1.3626e+00,  6.8075e-01,
         -6.0149e-01, -2.9050e-01, -7.9487e-01, -7.5176e-01,  1.1947e-01,
          2.3543e-01,  6.6376e-01,  9.9615e-01, -4.3349e-01, -6.0784e-02,
          9.1418e-01,  4.0088e-01, -6.2949e-01,  1.0764e+00, -4.2416e-01,
         -1.6727e-01, -3.4516e-01, -8.6162e-02, -3.0320e-01,  2.4560e-01,
         -1.8782e-01,  9.8641e-02, -2.7574e-01,  2.0436e-01,  9.0444e-02,
          1.3478e-01, -1.6247e-01,  2.1242e-01, -3.3468e-01, -1.4443e-01,
         -2.2270e-01,  3.3621e-02,  3.9905e-02, -6.2221e-02, -2.7590e-01,
          2.1778e-01,  3.6029e-04, -1.9633e-01, -3.6842e-02,  1.1374e-02,
         -4.8559e-01,  1.2946e-01,  3.2385e-01,  2.6372e-01, -2.0055e-01,
          6.6134e-01,  7.1332e-02, -3.4796e-01, -1.5176e-01,  3.2462e-01,
         -5.6025e-01,  2.3086e-01,  3.0003e-01, -2.6224e-02,  7.0769e-02,
          8.4001e-02, -4.1467e-02,  2.2744e-01, -2.3866e-01, -6.3605e-02,
         -3.4594e-01,  6.9347e-03, -1.2330e-01,  4.2838e-02,  2.7932e-02,
         -2.3748e-03, -4.1881e-01, -5.8184e-02,  2.4932e-01, -7.0081e-02,
          1.2074e-01,  1.0926e-01,  7.9397e-02,  1.4488e-01, -6.6682e-02,
         -5.1680e-02, -4.0820e-01, -7.2620e-01, -2.8043e-01, -1.0760e-01,
          2.0246e-01,  5.1072e-02, -1.5136e-01,  3.2380e-01,  5.3135e-02,
         -1.2344e-01,  7.7017e-01,  2.5862e-01, -4.7973e-01,  1.9189e-01,
         -3.3929e-02,  7.7567e-03,  3.8890e-01,  2.6752e-01,  7.1998e-02,
         -5.0061e-01, -4.1547e-01, -1.5284e-01, -7.0027e-02, -1.8330e-01,
          9.9678e-02,  5.6220e-02,  2.1021e-01,  1.1408e-01,  2.0407e-01,
         -1.7299e-01,  9.0552e-02,  1.8179e-01, -1.0704e-01, -2.6003e-01,
         -3.2197e-02, -1.7172e-01, -2.6261e-01,  2.1959e-01,  1.0234e-01,
          8.5265e-03,  1.8087e-02, -2.2945e-01,  1.1173e-01, -9.0099e-02,
         -4.2055e-03, -6.7523e-04,  6.2266e-02,  4.1812e-03,  1.9444e-01,
          1.2171e-01, -1.0894e-01, -8.2529e-02, -8.9807e-02, -1.0908e-01,
          1.8173e-02, -2.2089e-01, -1.7775e-01, -1.2493e-01,  1.8358e-01,
          3.1272e-01,  1.2280e-01, -1.4241e-03,  1.6177e-01, -8.6328e-02,
         -1.7944e-02, -1.9129e-01, -6.3725e-02, -3.2876e-02,  1.1503e-02,
          1.3652e-01, -7.9505e-02, -3.3982e-02,  2.5840e-02, -6.8091e-02,
          6.9024e-02]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
734000 特征值优化 tensor(0.8020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7864e+00, -1.1741e-01, -1.3935e+00, -4.4205e-01,  2.1460e+00,
          2.2694e+00,  2.2224e-01, -2.2173e+00,  1.3669e+00,  6.7933e-01,
         -5.9459e-01, -2.8794e-01, -7.8333e-01, -7.6085e-01,  8.2541e-02,
          2.5140e-01,  6.5023e-01,  9.7584e-01, -4.3450e-01, -7.1473e-02,
          9.1502e-01,  4.1200e-01, -6.2698e-01,  1.0761e+00, -4.1893e-01,
         -1.7153e-01, -3.4602e-01, -8.1952e-02, -3.0285e-01,  2.4786e-01,
         -1.8951e-01,  9.7709e-02, -2.7584e-01,  2.1114e-01,  9.6962e-02,
          1.2991e-01, -1.5416e-01,  2.0857e-01, -3.3316e-01, -1.5380e-01,
         -2.1533e-01,  3.5159e-02,  3.9275e-02, -6.0530e-02, -2.7821e-01,
          2.1830e-01, -3.6701e-03, -1.9216e-01, -3.8549e-02,  1.3325e-02,
         -4.8479e-01,  1.3553e-01,  3.3039e-01,  2.6898e-01, -1.9689e-01,
          6.7443e-01,  5.9986e-02, -3.4565e-01, -1.5155e-01,  3.2409e-01,
         -5.6552e-01,  2.3936e-01,  2.9178e-01, -2.0810e-02,  7.3157e-02,
          7.9325e-02, -3.6072e-02,  2.3602e-01, -2.3895e-01, -6.7407e-02,
         -3.4323e-01,  1.2192e-02, -1.1800e-01,  4.5662e-02,  2.7228e-02,
          2.6647e-03, -4.1784e-01, -4.9453e-02,  2.4236e-01, -8.6440e-02,
          1.2077e-01,  1.1263e-01,  7.3782e-02,  1.3741e-01, -8.2361e-02,
         -5.3614e-02, -4.0558e-01, -7.2449e-01, -2.8010e-01, -1.1529e-01,
          2.0234e-01,  4.3706e-02, -1.5396e-01,  3.3010e-01,  5.3884e-02,
         -1.2874e-01,  7.7301e-01,  2.4936e-01, -4.9720e-01,  2.0953e-01,
         -5.8786e-02,  1.0992e-02,  3.8923e-01,  2.8096e-01,  7.6226e-02,
         -4.9539e-01, -4.0306e-01, -1.5677e-01, -7.2484e-02, -1.8689e-01,
          1.0232e-01,  6.5388e-02,  2.0630e-01,  1.2028e-01,  2.0987e-01,
         -1.7957e-01,  9.6492e-02,  1.7539e-01, -1.0471e-01, -2.6434e-01,
         -2.5719e-02, -1.6173e-01, -2.6475e-01,  2.2451e-01,  1.0063e-01,
          1.3985e-02,  1.4834e-02, -2.3140e-01,  1.1375e-01, -8.6062e-02,
         -8.9277e-04,  6.9730e-03,  7.3119e-02,  6.5750e-03,  1.9126e-01,
          1.2576e-01, -1.1363e-01, -8.1865e-02, -9.9546e-02, -9.0550e-02,
          2.6083e-02, -2.2837e-01, -1.7651e-01, -1.1284e-01,  1.7624e-01,
          3.1409e-01,  1.1433e-01,  4.3403e-03,  1.5897e-01, -8.9880e-02,
         -2.0905e-02, -1.9245e-01, -7.3487e-02, -4.3299e-02,  1.0968e-02,
          1.3924e-01, -6.3411e-02, -4.7174e-02,  2.2273e-02, -6.5413e-02,
          7.2311e-02]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
735000 特征值优化 tensor(0.7901, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7990e+00, -1.2336e-01, -1.3910e+00, -4.4571e-01,  2.1463e+00,
          2.2632e+00,  2.5076e-01, -2.2361e+00,  1.3663e+00,  6.7951e-01,
         -5.8221e-01, -2.6478e-01, -8.0090e-01, -7.5157e-01,  9.9809e-02,
          2.6574e-01,  6.5046e-01,  9.8312e-01, -4.4734e-01, -8.6842e-02,
          9.2573e-01,  4.1046e-01, -6.2678e-01,  1.0793e+00, -4.2283e-01,
         -1.6366e-01, -3.4904e-01, -6.6439e-02, -3.0951e-01,  2.5327e-01,
         -1.8728e-01,  9.8334e-02, -2.6861e-01,  1.9137e-01,  9.1369e-02,
          1.3120e-01, -1.6375e-01,  2.0584e-01, -3.3356e-01, -1.5527e-01,
         -2.2582e-01,  3.6312e-02,  3.0463e-02, -7.4650e-02, -2.7563e-01,
          2.1801e-01, -2.3628e-04, -2.0794e-01, -3.3425e-02,  9.6591e-03,
         -4.8799e-01,  1.3427e-01,  3.3749e-01,  2.6218e-01, -1.9009e-01,
          6.7441e-01,  7.3386e-02, -3.4800e-01, -1.5237e-01,  3.2549e-01,
         -5.6143e-01,  2.3341e-01,  2.8834e-01, -2.8973e-02,  8.5747e-02,
          6.1085e-02, -5.1715e-02,  2.3689e-01, -2.3712e-01, -6.5146e-02,
         -3.4618e-01,  1.2726e-02, -1.1588e-01,  5.8907e-02,  1.3359e-02,
         -6.4413e-03, -4.0875e-01, -3.5177e-02,  2.3741e-01, -7.8214e-02,
          1.0212e-01,  1.2560e-01,  7.7478e-02,  1.2870e-01, -8.8222e-02,
         -3.4616e-02, -4.1708e-01, -7.4748e-01, -2.8679e-01, -1.1516e-01,
          1.9974e-01,  5.1969e-02, -1.5096e-01,  3.1937e-01,  4.9564e-02,
         -1.2567e-01,  7.8284e-01,  2.6421e-01, -4.6358e-01,  1.8239e-01,
         -4.9549e-02,  1.0754e-02,  3.9690e-01,  2.7876e-01,  7.9986e-02,
         -4.8924e-01, -4.1720e-01, -1.4958e-01, -8.8187e-02, -1.9076e-01,
          1.0535e-01,  4.3444e-02,  2.2067e-01,  1.4679e-01,  1.9677e-01,
         -1.7810e-01,  8.5103e-02,  1.6340e-01, -1.2251e-01, -2.7296e-01,
         -1.5832e-02, -1.5207e-01, -2.6920e-01,  2.2002e-01,  1.0398e-01,
          1.1606e-02,  1.6523e-03, -2.3373e-01,  1.1081e-01, -8.8937e-02,
         -2.8119e-03, -8.9107e-04,  6.9828e-02,  8.5805e-03,  1.9026e-01,
          1.2624e-01, -1.0671e-01, -8.7618e-02, -1.1197e-01, -7.2717e-02,
          4.0826e-02, -2.3818e-01, -1.6741e-01, -8.8912e-02,  1.8097e-01,
          3.0319e-01,  1.1432e-01, -2.8242e-03,  1.5163e-01, -1.0657e-01,
          3.1074e-04, -2.0325e-01, -8.6210e-02, -3.6127e-02,  9.4241e-03,
          1.3831e-01, -8.1153e-02, -5.3024e-02,  3.8327e-02, -5.8521e-02,
          7.1370e-02]], device='cuda:0') tensor(0.2261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
736000 特征值优化 tensor(0.7898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7453e+00, -1.1951e-01, -1.3753e+00, -4.4103e-01,  2.1546e+00,
          2.2595e+00,  2.2885e-01, -2.2143e+00,  1.3758e+00,  6.7976e-01,
         -5.7866e-01, -2.8439e-01, -7.8001e-01, -7.7567e-01,  9.6671e-02,
          2.4196e-01,  6.5217e-01,  9.8289e-01, -4.3344e-01, -7.1546e-02,
          9.0354e-01,  4.1254e-01, -6.2023e-01,  1.0811e+00, -4.3090e-01,
         -1.8481e-01, -3.3483e-01, -8.2431e-02, -3.0661e-01,  2.5366e-01,
         -1.9417e-01,  8.4184e-02, -2.6644e-01,  2.1277e-01,  1.0067e-01,
          1.3089e-01, -1.5321e-01,  2.1733e-01, -3.2454e-01, -1.6144e-01,
         -2.1378e-01,  3.5010e-02,  4.0156e-02, -5.9291e-02, -2.8060e-01,
          2.1391e-01,  3.1399e-03, -1.9960e-01, -2.7840e-02,  4.7147e-03,
         -4.8222e-01,  1.4165e-01,  3.3272e-01,  2.7056e-01, -1.9960e-01,
          6.5567e-01,  5.0435e-02, -3.6730e-01, -1.4788e-01,  3.2378e-01,
         -5.5101e-01,  2.3587e-01,  2.8053e-01, -1.3501e-02,  7.3957e-02,
          8.4118e-02, -3.6164e-02,  2.4195e-01, -2.4074e-01, -6.0059e-02,
         -3.4813e-01,  9.5829e-03, -1.2124e-01,  3.3333e-02,  2.5271e-02,
         -1.3736e-02, -4.2197e-01, -4.9137e-02,  2.4406e-01, -8.4129e-02,
          1.2706e-01,  1.1436e-01,  7.8969e-02,  1.5551e-01, -7.9445e-02,
         -6.0119e-02, -3.9798e-01, -7.3486e-01, -2.7162e-01, -1.2715e-01,
          1.9583e-01,  4.3280e-02, -1.5311e-01,  3.4614e-01,  4.8099e-02,
         -1.3158e-01,  7.8346e-01,  2.6459e-01, -4.7082e-01,  2.0109e-01,
         -3.2542e-02,  2.6884e-02,  3.9611e-01,  2.6817e-01,  8.0460e-02,
         -4.8761e-01, -4.0425e-01, -1.6014e-01, -8.0302e-02, -1.8379e-01,
          1.0205e-01,  6.7496e-02,  2.0513e-01,  1.2059e-01,  2.1678e-01,
         -1.7662e-01,  8.8946e-02,  1.7128e-01, -1.0322e-01, -2.6334e-01,
         -2.9298e-02, -1.7044e-01, -2.5944e-01,  2.2892e-01,  1.0257e-01,
          2.0940e-02,  1.3868e-02, -2.2929e-01,  1.1122e-01, -9.3089e-02,
          3.2196e-03, -2.8748e-03,  6.5623e-02,  3.1672e-03,  1.8558e-01,
          1.1475e-01, -1.1445e-01, -7.9452e-02, -8.8767e-02, -1.0448e-01,
          1.5921e-02, -2.1813e-01, -1.7322e-01, -1.1668e-01,  1.8481e-01,
          3.2728e-01,  1.1735e-01,  2.3085e-03,  1.5016e-01, -9.1158e-02,
         -2.4870e-02, -1.8997e-01, -7.7754e-02, -3.9276e-02,  9.2721e-03,
          1.2439e-01, -6.8870e-02, -4.4184e-02,  2.5892e-02, -7.4663e-02,
          7.0866e-02]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
737000 特征值优化 tensor(0.8022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7577e+00, -1.2429e-01, -1.3874e+00, -4.3954e-01,  2.1617e+00,
          2.2673e+00,  2.3405e-01, -2.2048e+00,  1.3703e+00,  6.8386e-01,
         -5.6915e-01, -2.7112e-01, -8.0926e-01, -7.4486e-01,  1.1241e-01,
          2.6230e-01,  6.5618e-01,  9.8188e-01, -4.3662e-01, -7.8319e-02,
          9.0301e-01,  4.1194e-01, -6.3353e-01,  1.0847e+00, -4.2185e-01,
         -1.7569e-01, -3.6169e-01, -7.0710e-02, -3.0836e-01,  2.5304e-01,
         -1.9010e-01,  8.8110e-02, -2.6249e-01,  1.9117e-01,  1.0551e-01,
          1.3320e-01, -1.6117e-01,  2.0657e-01, -3.3455e-01, -1.6186e-01,
         -2.2932e-01,  3.4744e-02,  3.0836e-02, -6.8992e-02, -2.8161e-01,
          2.1147e-01, -1.3035e-03, -2.1146e-01, -2.1941e-02, -6.5495e-03,
         -4.8772e-01,  1.2858e-01,  3.4760e-01,  2.6924e-01, -2.0185e-01,
          6.6649e-01,  7.1300e-02, -3.5257e-01, -1.4491e-01,  3.2544e-01,
         -5.5145e-01,  2.3256e-01,  2.7256e-01, -3.0284e-02,  8.0441e-02,
          6.9850e-02, -4.5408e-02,  2.4109e-01, -2.4055e-01, -6.5852e-02,
         -3.4199e-01,  1.6156e-02, -1.1989e-01,  4.9888e-02,  1.6844e-02,
         -7.2289e-03, -4.1399e-01, -4.0000e-02,  2.4302e-01, -8.1569e-02,
          1.1912e-01,  1.2652e-01,  7.2774e-02,  1.3058e-01, -7.7305e-02,
         -4.2660e-02, -4.1480e-01, -7.4241e-01, -2.8207e-01, -1.1829e-01,
          2.0009e-01,  4.4338e-02, -1.4368e-01,  3.2400e-01,  5.7673e-02,
         -1.2848e-01,  7.8619e-01,  2.7216e-01, -4.7810e-01,  2.0115e-01,
         -5.5391e-02,  1.8514e-02,  3.9498e-01,  2.7411e-01,  7.9456e-02,
         -4.9171e-01, -4.1190e-01, -1.5799e-01, -8.0497e-02, -1.8846e-01,
          1.0378e-01,  6.1145e-02,  2.1472e-01,  1.3916e-01,  1.9252e-01,
         -1.7471e-01,  8.5877e-02,  1.6470e-01, -1.0650e-01, -2.7371e-01,
         -1.8873e-02, -1.6010e-01, -2.5923e-01,  2.2670e-01,  1.0137e-01,
          1.4313e-02,  8.5511e-03, -2.4115e-01,  1.0880e-01, -9.5166e-02,
          1.4933e-03, -3.4898e-03,  6.1228e-02,  7.9958e-03,  1.8559e-01,
          1.2634e-01, -1.0755e-01, -9.0115e-02, -1.0963e-01, -8.8970e-02,
          2.6192e-02, -2.1042e-01, -1.6028e-01, -1.0343e-01,  1.9314e-01,
          3.0407e-01,  1.2065e-01,  3.1467e-03,  1.5894e-01, -1.0803e-01,
         -1.0408e-02, -2.0488e-01, -6.5577e-02, -2.7262e-02,  8.1766e-03,
          1.4475e-01, -7.0112e-02, -5.7902e-02,  1.6652e-02, -5.5292e-02,
          6.9720e-02]], device='cuda:0') tensor(0.2138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
738000 特征值优化 tensor(0.7978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7613e+00, -1.2508e-01, -1.3875e+00, -4.4607e-01,  2.1749e+00,
          2.2619e+00,  2.2068e-01, -2.2011e+00,  1.3665e+00,  6.8923e-01,
         -5.8089e-01, -2.8039e-01, -7.9522e-01, -7.4209e-01,  7.4155e-02,
          2.6689e-01,  6.5092e-01,  9.8405e-01, -4.3513e-01, -7.4599e-02,
          8.9998e-01,  4.2232e-01, -6.2985e-01,  1.0826e+00, -4.3309e-01,
         -1.7909e-01, -3.5371e-01, -5.8392e-02, -3.1397e-01,  2.5195e-01,
         -1.9042e-01,  8.3613e-02, -2.6200e-01,  2.1210e-01,  1.1099e-01,
          1.4063e-01, -1.6229e-01,  1.9549e-01, -3.1321e-01, -1.5417e-01,
         -2.2546e-01,  3.7221e-02,  3.8346e-02, -5.1554e-02, -2.7997e-01,
          2.0772e-01,  3.9523e-03, -2.0382e-01, -1.8631e-02, -9.9268e-03,
         -4.9854e-01,  1.3393e-01,  3.4589e-01,  2.6545e-01, -1.8965e-01,
          6.6859e-01,  6.3180e-02, -3.5637e-01, -1.5604e-01,  3.2828e-01,
         -5.5785e-01,  2.3051e-01,  2.7279e-01, -1.4270e-02,  8.5803e-02,
          6.0568e-02, -4.2025e-02,  2.4470e-01, -2.3821e-01, -6.6929e-02,
         -3.4499e-01,  1.7188e-02, -1.1916e-01,  4.3156e-02,  2.3745e-02,
         -9.6754e-03, -4.2107e-01, -3.2703e-02,  2.4595e-01, -7.8090e-02,
          1.1009e-01,  1.3160e-01,  7.5420e-02,  1.3717e-01, -8.5550e-02,
         -5.4687e-02, -3.9739e-01, -7.4893e-01, -2.8490e-01, -1.2016e-01,
          1.9925e-01,  4.5139e-02, -1.6674e-01,  3.3342e-01,  4.4276e-02,
         -1.2813e-01,  7.8647e-01,  2.6682e-01, -4.6721e-01,  1.9147e-01,
         -3.8196e-02,  2.0811e-02,  4.0389e-01,  2.7273e-01,  8.1069e-02,
         -4.8054e-01, -4.0873e-01, -1.5149e-01, -7.6616e-02, -1.9119e-01,
          1.0715e-01,  5.0803e-02,  2.1300e-01,  1.3746e-01,  2.1466e-01,
         -1.7430e-01,  8.9553e-02,  1.5607e-01, -1.1261e-01, -2.7258e-01,
         -1.4267e-02, -1.5514e-01, -2.6390e-01,  2.2288e-01,  1.0323e-01,
          1.6555e-02,  8.3661e-03, -2.3805e-01,  1.0960e-01, -8.6896e-02,
         -4.6695e-04, -1.9810e-04,  7.1143e-02,  5.5045e-03,  1.8491e-01,
          1.4419e-01, -1.1856e-01, -8.2288e-02, -9.5058e-02, -8.3559e-02,
          3.3635e-02, -2.2184e-01, -1.6896e-01, -8.9591e-02,  1.7857e-01,
          3.1602e-01,  1.1020e-01,  5.1843e-03,  1.5211e-01, -8.9349e-02,
         -9.9891e-03, -1.9082e-01, -7.8364e-02, -4.0469e-02,  1.0293e-02,
          1.3544e-01, -8.3102e-02, -6.5103e-02,  2.7248e-02, -5.8473e-02,
          6.7006e-02]], device='cuda:0') tensor(0.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
739000 特征值优化 tensor(0.8094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7528e+00, -1.1274e-01, -1.3704e+00, -4.4147e-01,  2.1711e+00,
          2.2713e+00,  2.1389e-01, -2.2004e+00,  1.3575e+00,  6.8900e-01,
         -5.7268e-01, -2.8079e-01, -8.0948e-01, -7.3919e-01,  9.3858e-02,
          2.7773e-01,  6.4773e-01,  9.7375e-01, -4.4572e-01, -7.3754e-02,
          9.0302e-01,  4.2033e-01, -6.2429e-01,  1.0748e+00, -4.3296e-01,
         -1.7123e-01, -3.5513e-01, -6.6072e-02, -3.1450e-01,  2.5152e-01,
         -1.8490e-01,  8.1027e-02, -2.7880e-01,  2.0102e-01,  1.0962e-01,
          1.4732e-01, -1.5099e-01,  2.0989e-01, -3.2830e-01, -1.5039e-01,
         -2.2339e-01,  3.1273e-02,  4.2344e-02, -5.2254e-02, -2.8084e-01,
          2.0626e-01,  4.8837e-03, -2.0026e-01, -3.1634e-02, -9.6748e-03,
         -4.9916e-01,  1.3439e-01,  3.5509e-01,  2.6693e-01, -1.9167e-01,
          6.7275e-01,  6.9388e-02, -3.6009e-01, -1.4395e-01,  3.2539e-01,
         -5.6037e-01,  2.3832e-01,  2.6738e-01, -1.8914e-02,  7.9352e-02,
          7.1038e-02, -4.7242e-02,  2.3854e-01, -2.3669e-01, -7.0641e-02,
         -3.4317e-01,  1.2580e-02, -1.2494e-01,  5.3170e-02,  3.0724e-02,
          5.6189e-03, -4.1284e-01, -4.2487e-02,  2.5004e-01, -7.9222e-02,
          1.1989e-01,  1.1505e-01,  7.7739e-02,  1.2427e-01, -7.3815e-02,
         -6.6021e-02, -3.9725e-01, -7.3098e-01, -2.7892e-01, -1.2123e-01,
          2.0380e-01,  3.1237e-02, -1.6520e-01,  3.3243e-01,  5.4599e-02,
         -1.3258e-01,  7.8229e-01,  2.6103e-01, -4.6448e-01,  2.0334e-01,
         -4.9398e-02,  2.0021e-02,  3.9722e-01,  2.6660e-01,  7.2611e-02,
         -4.8051e-01, -4.1395e-01, -1.6230e-01, -6.4110e-02, -1.8722e-01,
          1.0241e-01,  5.7652e-02,  2.1342e-01,  1.2862e-01,  1.9894e-01,
         -1.6541e-01,  8.9755e-02,  1.6923e-01, -1.1362e-01, -2.6939e-01,
         -1.3980e-02, -1.6344e-01, -2.6585e-01,  2.2353e-01,  1.0020e-01,
          1.6946e-02,  4.1062e-03, -2.3604e-01,  1.0970e-01, -8.4799e-02,
         -3.1205e-03,  1.5745e-03,  7.3240e-02,  1.4123e-03,  1.8379e-01,
          1.3766e-01, -1.1308e-01, -6.7080e-02, -1.0675e-01, -8.5055e-02,
          4.2782e-02, -2.1775e-01, -1.6557e-01, -1.1297e-01,  1.7874e-01,
          3.0789e-01,  1.2186e-01, -4.7712e-03,  1.6953e-01, -8.8182e-02,
         -2.2885e-02, -1.9803e-01, -6.8520e-02, -4.4898e-02,  1.4843e-02,
          1.3587e-01, -7.7758e-02, -4.3688e-02,  2.0867e-02, -6.1441e-02,
          7.3175e-02]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
740000 特征值优化 tensor(0.7975, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7472, -0.1293, -1.3603, -0.4409,  2.1566,  2.2644,  0.2099, -2.1835,
          1.3508,  0.6840, -0.5823, -0.2818, -0.7912, -0.7485,  0.0629,  0.2732,
          0.6537,  0.9747, -0.4374, -0.0672,  0.8809,  0.4151, -0.6190,  1.0791,
         -0.4389, -0.1774, -0.3575, -0.0710, -0.3220,  0.2572, -0.1917,  0.0916,
         -0.2577,  0.2115,  0.1196,  0.1502, -0.1584,  0.2041, -0.3279, -0.1618,
         -0.2222,  0.0364,  0.0386, -0.0492, -0.2803,  0.2052, -0.0036, -0.2017,
         -0.0268, -0.0251, -0.4991,  0.1266,  0.3494,  0.2729, -0.1901,  0.6651,
          0.0596, -0.3596, -0.1541,  0.3253, -0.5654,  0.2464,  0.2651, -0.0136,
          0.0714,  0.0796, -0.0448,  0.2407, -0.2368, -0.0681, -0.3441,  0.0181,
         -0.1254,  0.0494,  0.0202, -0.0087, -0.4209, -0.0341,  0.2456, -0.0910,
          0.1099,  0.1280,  0.0789,  0.1374, -0.0825, -0.0638, -0.4119, -0.7318,
         -0.2948, -0.1191,  0.2063,  0.0261, -0.1654,  0.3303,  0.0506, -0.1357,
          0.7844,  0.2490, -0.4767,  0.1771, -0.0530,  0.0189,  0.4052,  0.2755,
          0.0905, -0.4827, -0.4212, -0.1549, -0.0747, -0.1891,  0.1070,  0.0623,
          0.2104,  0.1282,  0.2188, -0.1822,  0.0839,  0.1662, -0.0997, -0.2715,
         -0.0187, -0.1586, -0.2652,  0.2231,  0.1088,  0.0174,  0.0121, -0.2346,
          0.1129, -0.0926,  0.0051,  0.0072,  0.0747,  0.0100,  0.1855,  0.1522,
         -0.1207, -0.0738, -0.1004, -0.0863,  0.0332, -0.2123, -0.1621, -0.1032,
          0.1748,  0.3154,  0.1048,  0.0052,  0.1551, -0.0897, -0.0148, -0.1883,
         -0.0872, -0.0378,  0.0110,  0.1353, -0.0857, -0.0533,  0.0341, -0.0514,
          0.0692]], device='cuda:0') tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
741000 特征值优化 tensor(0.8494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7546e+00, -1.2561e-01, -1.3827e+00, -4.4560e-01,  2.1699e+00,
          2.2767e+00,  2.1717e-01, -2.1714e+00,  1.3612e+00,  6.8204e-01,
         -5.6355e-01, -2.7140e-01, -8.0683e-01, -7.2525e-01,  9.3133e-02,
          2.7537e-01,  6.5094e-01,  9.7936e-01, -4.3584e-01, -4.9427e-02,
          9.0501e-01,  4.1908e-01, -6.2266e-01,  1.0799e+00, -4.3261e-01,
         -1.7833e-01, -3.5115e-01, -9.5999e-02, -2.8363e-01,  2.5002e-01,
         -1.9221e-01,  8.4953e-02, -2.8024e-01,  1.9969e-01,  1.1920e-01,
          1.4333e-01, -1.5721e-01,  2.0896e-01, -3.4376e-01, -1.6602e-01,
         -2.0345e-01,  3.8349e-02,  3.6110e-02, -6.7486e-02, -2.8070e-01,
          1.9779e-01, -2.8908e-03, -2.1043e-01, -2.8167e-02, -2.0947e-02,
         -4.9393e-01,  1.2003e-01,  3.6596e-01,  2.6853e-01, -2.0496e-01,
          6.7301e-01,  7.7051e-02, -3.5972e-01, -1.4513e-01,  3.2039e-01,
         -5.6815e-01,  2.4048e-01,  2.6377e-01, -3.4101e-02,  8.3548e-02,
          7.4640e-02, -5.6544e-02,  2.2734e-01, -2.3875e-01, -6.8858e-02,
         -3.4759e-01,  2.0842e-02, -1.2882e-01,  3.8732e-02,  3.3342e-02,
         -2.2693e-03, -4.2490e-01, -5.5142e-02,  2.5660e-01, -8.5669e-02,
          1.1815e-01,  1.1272e-01,  7.9029e-02,  1.2475e-01, -6.6067e-02,
         -3.4735e-02, -4.1555e-01, -7.5192e-01, -2.6473e-01, -1.1713e-01,
          2.0617e-01,  2.9182e-02, -1.5987e-01,  3.0408e-01,  4.9432e-02,
         -1.2799e-01,  7.8557e-01,  2.6021e-01, -4.7766e-01,  1.6828e-01,
         -7.9859e-02,  1.5456e-02,  4.0353e-01,  2.8203e-01,  9.3091e-02,
         -4.8273e-01, -4.0166e-01, -1.5605e-01, -6.2696e-02, -1.9063e-01,
          9.8266e-02,  5.9069e-02,  2.1276e-01,  1.4318e-01,  1.9165e-01,
         -1.7836e-01,  7.7834e-02,  1.6846e-01, -1.1267e-01, -2.8066e-01,
         -2.4714e-03, -1.7775e-01, -2.6231e-01,  2.2526e-01,  9.6719e-02,
          9.9445e-03,  6.2790e-03, -2.3733e-01,  1.0344e-01, -9.4794e-02,
         -1.6225e-03,  1.5237e-03,  6.9282e-02,  3.7162e-03,  1.8691e-01,
          1.4279e-01, -9.5356e-02, -8.3875e-02, -1.1504e-01, -9.1344e-02,
          2.6675e-02, -2.2555e-01, -1.7765e-01, -1.1714e-01,  1.8762e-01,
          2.8412e-01,  1.0464e-01, -1.3758e-02,  1.4920e-01, -1.1551e-01,
         -2.0123e-02, -2.0704e-01, -6.3636e-02, -3.9400e-02,  1.9619e-02,
          1.4143e-01, -6.3468e-02, -5.1543e-02,  2.4618e-02, -6.1956e-02,
          6.2251e-02]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
742000 特征值优化 tensor(0.7978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7221e+00, -1.1945e-01, -1.3420e+00, -4.4374e-01,  2.1706e+00,
          2.2484e+00,  1.7304e-01, -2.1588e+00,  1.3485e+00,  6.8466e-01,
         -5.5533e-01, -2.9631e-01, -7.7837e-01, -7.4951e-01,  6.4512e-02,
          3.0282e-01,  6.4596e-01,  9.6795e-01, -4.3493e-01, -5.8740e-02,
          9.1761e-01,  4.1484e-01, -6.1151e-01,  1.0914e+00, -4.3361e-01,
         -2.0528e-01, -3.6134e-01, -9.4648e-02, -2.8563e-01,  2.5609e-01,
         -1.8677e-01,  8.4630e-02, -2.6180e-01,  2.1144e-01,  1.1876e-01,
          1.2882e-01, -1.6164e-01,  1.9841e-01, -3.3830e-01, -1.7461e-01,
         -2.0715e-01,  3.6978e-02,  4.1004e-02, -5.0232e-02, -2.8469e-01,
          1.9199e-01, -1.2065e-02, -2.0574e-01, -3.1691e-02, -2.4471e-02,
         -4.8937e-01,  1.3077e-01,  3.6869e-01,  2.8491e-01, -2.0402e-01,
          6.7162e-01,  5.2086e-02, -3.6804e-01, -1.4206e-01,  3.3343e-01,
         -5.6441e-01,  2.4428e-01,  2.5416e-01, -2.1775e-02,  7.4239e-02,
          8.7716e-02, -3.9107e-02,  2.3813e-01, -2.3803e-01, -6.6894e-02,
         -3.4944e-01,  2.3257e-02, -1.2202e-01,  5.4944e-02,  2.5508e-02,
         -1.0755e-03, -4.1797e-01, -5.0367e-02,  2.5373e-01, -7.6609e-02,
          1.0776e-01,  1.2785e-01,  7.0862e-02,  1.4493e-01, -7.5273e-02,
         -3.5089e-02, -4.0930e-01, -7.4226e-01, -2.9698e-01, -1.2711e-01,
          2.0228e-01,  4.0469e-02, -1.4320e-01,  3.1621e-01,  4.8430e-02,
         -1.3836e-01,  7.8851e-01,  2.5555e-01, -4.6842e-01,  1.8119e-01,
         -7.1676e-02,  2.4940e-02,  4.0012e-01,  2.8491e-01,  9.6989e-02,
         -4.6824e-01, -4.0418e-01, -1.5475e-01, -7.7192e-02, -1.9341e-01,
          1.0515e-01,  6.8017e-02,  2.1051e-01,  1.2769e-01,  2.1415e-01,
         -1.8091e-01,  8.5388e-02,  1.6950e-01, -9.2097e-02, -2.7898e-01,
         -2.9764e-03, -1.6716e-01, -2.6332e-01,  2.2953e-01,  1.0712e-01,
          1.4190e-02,  5.0545e-03, -2.3689e-01,  1.0781e-01, -9.3211e-02,
          8.2320e-03, -2.5032e-03,  7.2091e-02,  1.0531e-02,  1.8317e-01,
          1.4561e-01, -1.1751e-01, -6.7242e-02, -9.9354e-02, -1.0251e-01,
          3.1852e-02, -2.0572e-01, -1.7235e-01, -1.0672e-01,  1.8744e-01,
          3.1019e-01,  1.0050e-01, -4.1124e-03,  1.6833e-01, -1.0095e-01,
         -1.9637e-02, -1.9883e-01, -7.7376e-02, -4.7364e-02,  1.4283e-02,
          1.3628e-01, -5.2268e-02, -6.6367e-02,  2.3488e-02, -6.5523e-02,
          6.9621e-02]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
743000 特征值优化 tensor(0.8079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7248e+00, -1.1099e-01, -1.3565e+00, -4.4161e-01,  2.1919e+00,
          2.2351e+00,  1.7395e-01, -2.1585e+00,  1.3592e+00,  6.9060e-01,
         -5.4845e-01, -2.9069e-01, -7.8893e-01, -7.3553e-01,  8.6492e-02,
          3.1025e-01,  6.4514e-01,  9.6752e-01, -4.4597e-01, -5.8609e-02,
          9.3512e-01,  4.2133e-01, -6.1134e-01,  1.0897e+00, -4.3768e-01,
         -1.9995e-01, -3.6601e-01, -9.7266e-02, -2.7902e-01,  2.5401e-01,
         -1.8892e-01,  8.5732e-02, -2.6049e-01,  1.9545e-01,  1.1726e-01,
          1.2788e-01, -1.5451e-01,  2.0784e-01, -3.4575e-01, -1.6992e-01,
         -2.1076e-01,  3.4073e-02,  3.8598e-02, -7.0423e-02, -2.8894e-01,
          1.8996e-01, -1.0119e-02, -2.1046e-01, -3.5757e-02, -2.7739e-02,
         -4.8813e-01,  1.1875e-01,  3.7876e-01,  2.8117e-01, -2.1096e-01,
          6.6140e-01,  6.7416e-02, -3.6302e-01, -1.3474e-01,  3.2954e-01,
         -5.6140e-01,  2.4591e-01,  2.5503e-01, -3.0580e-02,  8.0833e-02,
          8.4529e-02, -5.2804e-02,  2.2732e-01, -2.3767e-01, -7.0555e-02,
         -3.4680e-01,  2.6679e-02, -1.2462e-01,  5.3778e-02,  3.2315e-02,
          3.5132e-03, -4.1848e-01, -5.5947e-02,  2.5721e-01, -7.9406e-02,
          1.1310e-01,  1.1480e-01,  7.3335e-02,  1.3436e-01, -7.0740e-02,
         -3.3994e-02, -4.1099e-01, -7.3874e-01, -2.8381e-01, -1.1703e-01,
          2.0423e-01,  4.9022e-02, -1.5019e-01,  3.0530e-01,  5.5448e-02,
         -1.3507e-01,  7.7968e-01,  2.6973e-01, -4.7106e-01,  1.8861e-01,
         -7.1082e-02,  2.7738e-02,  4.0343e-01,  2.9226e-01,  9.8491e-02,
         -4.6971e-01, -3.9790e-01, -1.5662e-01, -8.0718e-02, -1.9409e-01,
          1.0220e-01,  6.3094e-02,  2.1223e-01,  1.3783e-01,  2.0311e-01,
         -1.8093e-01,  8.1559e-02,  1.6920e-01, -9.4674e-02, -2.7491e-01,
          3.1470e-04, -1.7742e-01, -2.6226e-01,  2.3016e-01,  9.5883e-02,
          1.1351e-02, -3.6297e-03, -2.3966e-01,  1.0970e-01, -9.0760e-02,
          4.2330e-03, -4.0007e-03,  7.0044e-02,  7.7740e-03,  1.8080e-01,
          1.4503e-01, -1.0709e-01, -7.8873e-02, -1.0798e-01, -9.4733e-02,
          3.4264e-02, -2.0798e-01, -1.7417e-01, -1.0892e-01,  1.9034e-01,
          2.8861e-01,  1.0215e-01, -1.1438e-02,  1.6119e-01, -1.0820e-01,
         -1.9701e-02, -2.1022e-01, -7.0843e-02, -4.7286e-02,  2.0820e-02,
          1.3528e-01, -5.5209e-02, -5.6808e-02,  1.6403e-02, -6.8001e-02,
          6.1689e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
744000 特征值优化 tensor(0.8300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7228e+00, -1.0465e-01, -1.3485e+00, -4.4309e-01,  2.1965e+00,
          2.2359e+00,  1.6728e-01, -2.1427e+00,  1.3514e+00,  6.8823e-01,
         -5.3945e-01, -3.0223e-01, -7.7745e-01, -7.3543e-01,  8.0803e-02,
          3.1483e-01,  6.4582e-01,  9.6576e-01, -4.4372e-01, -5.4431e-02,
          9.3184e-01,  4.1564e-01, -6.0876e-01,  1.0880e+00, -4.4215e-01,
         -2.1249e-01, -3.7289e-01, -9.3829e-02, -2.8524e-01,  2.5552e-01,
         -1.9333e-01,  7.8150e-02, -2.5735e-01,  2.0148e-01,  1.2248e-01,
          1.2925e-01, -1.5742e-01,  2.0185e-01, -3.3706e-01, -1.7087e-01,
         -2.0849e-01,  3.5169e-02,  4.0050e-02, -5.5008e-02, -2.8483e-01,
          1.9477e-01, -3.0621e-03, -2.0689e-01, -3.2197e-02, -3.2023e-02,
         -4.8633e-01,  1.2522e-01,  3.7848e-01,  2.8141e-01, -2.0907e-01,
          6.6576e-01,  6.3332e-02, -3.6974e-01, -1.3008e-01,  3.3067e-01,
         -5.5838e-01,  2.4841e-01,  2.4569e-01, -3.1452e-02,  7.6060e-02,
          8.7507e-02, -4.5392e-02,  2.3013e-01, -2.3548e-01, -7.2800e-02,
         -3.5153e-01,  2.5694e-02, -1.2488e-01,  6.3059e-02,  2.8005e-02,
         -1.6423e-03, -4.1298e-01, -4.6437e-02,  2.5716e-01, -7.9161e-02,
          1.0514e-01,  1.2531e-01,  6.9876e-02,  1.4784e-01, -7.2428e-02,
         -3.9981e-02, -4.0291e-01, -7.4498e-01, -2.8804e-01, -1.2441e-01,
          2.0033e-01,  5.5184e-02, -1.4186e-01,  3.1475e-01,  5.1464e-02,
         -1.3927e-01,  7.8550e-01,  2.6703e-01, -4.6689e-01,  1.8861e-01,
         -7.1630e-02,  3.3253e-02,  4.0442e-01,  2.8465e-01,  9.8716e-02,
         -4.5251e-01, -4.0735e-01, -1.6152e-01, -9.4823e-02, -1.9499e-01,
          1.0197e-01,  6.2837e-02,  2.0980e-01,  1.2844e-01,  2.1143e-01,
         -1.8111e-01,  8.5791e-02,  1.7043e-01, -9.0043e-02, -2.8038e-01,
          3.4546e-03, -1.7485e-01, -2.6159e-01,  2.3147e-01,  1.0155e-01,
          1.3474e-02, -1.8692e-03, -2.3904e-01,  1.0934e-01, -9.3723e-02,
          9.6399e-03, -6.0042e-03,  7.3543e-02,  5.6103e-03,  1.8046e-01,
          1.5320e-01, -1.1533e-01, -6.7860e-02, -9.7870e-02, -9.4349e-02,
          4.2072e-02, -2.0519e-01, -1.6651e-01, -9.5210e-02,  1.8652e-01,
          3.0299e-01,  1.0310e-01, -5.8937e-03,  1.6694e-01, -1.0491e-01,
         -1.4046e-02, -2.0005e-01, -7.0662e-02, -4.2009e-02,  1.7422e-02,
          1.3089e-01, -5.2507e-02, -6.1412e-02,  2.2676e-02, -6.7870e-02,
          6.1131e-02]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
745000 特征值优化 tensor(0.7990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7280e+00, -1.0128e-01, -1.3402e+00, -4.4332e-01,  2.2122e+00,
          2.2334e+00,  1.8626e-01, -2.1318e+00,  1.3245e+00,  6.8724e-01,
         -5.3302e-01, -2.8700e-01, -8.0251e-01, -7.3240e-01,  8.9127e-02,
          3.1457e-01,  6.4586e-01,  9.6405e-01, -4.5163e-01, -6.4124e-02,
          9.3171e-01,  4.1360e-01, -6.1366e-01,  1.0976e+00, -4.4091e-01,
         -1.9578e-01, -3.6346e-01, -1.0438e-01, -2.7819e-01,  2.5461e-01,
         -1.9375e-01,  7.3013e-02, -2.8051e-01,  1.8417e-01,  1.2025e-01,
          1.2895e-01, -1.5432e-01,  1.9969e-01, -3.5630e-01, -1.6643e-01,
         -2.0506e-01,  3.6118e-02,  3.6047e-02, -7.5074e-02, -2.8613e-01,
          1.9003e-01, -1.5878e-02, -2.0739e-01, -3.7841e-02, -3.3534e-02,
         -4.8795e-01,  1.1217e-01,  3.7633e-01,  2.7778e-01, -2.2456e-01,
          6.6639e-01,  5.7495e-02, -3.5991e-01, -1.3284e-01,  3.3212e-01,
         -5.6859e-01,  2.4237e-01,  2.4681e-01, -3.9650e-02,  8.1225e-02,
          7.1887e-02, -6.1309e-02,  2.2400e-01, -2.4017e-01, -7.1147e-02,
         -3.4875e-01,  2.3286e-02, -1.2783e-01,  5.6864e-02,  3.1853e-02,
          3.8003e-03, -4.2225e-01, -6.5004e-02,  2.4924e-01, -8.1999e-02,
          1.1341e-01,  1.1116e-01,  7.6398e-02,  1.2366e-01, -5.4419e-02,
         -4.7264e-02, -4.1432e-01, -7.4845e-01, -2.8724e-01, -1.1526e-01,
          1.9618e-01,  5.3660e-02, -1.5756e-01,  2.9051e-01,  5.1086e-02,
         -1.3625e-01,  7.8700e-01,  2.8374e-01, -4.4128e-01,  1.7974e-01,
         -7.4878e-02,  3.0046e-02,  4.0291e-01,  2.9260e-01,  9.9791e-02,
         -4.6746e-01, -3.9245e-01, -1.5235e-01, -8.2313e-02, -1.9450e-01,
          1.0110e-01,  6.3822e-02,  2.0810e-01,  1.4452e-01,  1.9519e-01,
         -1.8516e-01,  7.6832e-02,  1.6631e-01, -1.0469e-01, -2.8161e-01,
          1.9449e-03, -1.8725e-01, -2.5752e-01,  2.3423e-01,  9.4064e-02,
          1.4573e-02,  6.6274e-03, -2.4114e-01,  1.0928e-01, -8.8721e-02,
          1.4571e-03, -1.0755e-02,  6.5382e-02,  4.3403e-03,  1.8124e-01,
          1.4176e-01, -1.0808e-01, -7.2241e-02, -1.0165e-01, -1.0530e-01,
          2.1724e-02, -2.0511e-01, -1.7415e-01, -1.1637e-01,  1.9413e-01,
          2.9176e-01,  1.0632e-01, -9.5835e-03,  1.6634e-01, -1.1393e-01,
         -2.9950e-02, -2.2001e-01, -7.1338e-02, -4.6660e-02,  2.3599e-02,
          1.4001e-01, -6.7185e-02, -4.9736e-02,  1.6845e-02, -6.3932e-02,
          6.4724e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
746000 特征值优化 tensor(0.8006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7284e+00, -9.6490e-02, -1.3537e+00, -4.4160e-01,  2.2231e+00,
          2.2356e+00,  1.7318e-01, -2.1257e+00,  1.3381e+00,  6.8713e-01,
         -5.3121e-01, -3.0731e-01, -7.8551e-01, -7.3415e-01,  6.9921e-02,
          3.2076e-01,  6.4231e-01,  9.6382e-01, -4.4460e-01, -6.5090e-02,
          9.3146e-01,  4.1215e-01, -6.0910e-01,  1.0914e+00, -4.3683e-01,
         -2.1991e-01, -3.6633e-01, -9.8963e-02, -2.8661e-01,  2.5893e-01,
         -1.9629e-01,  7.4525e-02, -2.5182e-01,  2.0679e-01,  1.2468e-01,
          1.2681e-01, -1.5990e-01,  2.0311e-01, -3.3993e-01, -1.7591e-01,
         -2.1074e-01,  3.4724e-02,  3.8023e-02, -5.7024e-02, -2.8562e-01,
          1.9295e-01, -1.2030e-02, -2.0849e-01, -3.7357e-02, -3.8875e-02,
         -4.8766e-01,  1.2295e-01,  3.8722e-01,  2.8838e-01, -2.1441e-01,
          6.6657e-01,  5.4669e-02, -3.7774e-01, -1.3738e-01,  3.3678e-01,
         -5.6663e-01,  2.3598e-01,  2.4543e-01, -2.3062e-02,  7.6602e-02,
          8.0907e-02, -4.9158e-02,  2.2789e-01, -2.4289e-01, -7.1355e-02,
         -3.4897e-01,  2.4705e-02, -1.2525e-01,  5.6564e-02,  2.8918e-02,
         -3.5977e-03, -4.1418e-01, -4.6650e-02,  2.5456e-01, -7.5846e-02,
          1.0905e-01,  1.2414e-01,  6.7847e-02,  1.4756e-01, -7.5181e-02,
         -3.5720e-02, -4.0171e-01, -7.5197e-01, -2.9059e-01, -1.2211e-01,
          2.0148e-01,  6.1543e-02, -1.4533e-01,  3.0148e-01,  4.8403e-02,
         -1.3526e-01,  7.9025e-01,  2.7569e-01, -4.4458e-01,  1.9605e-01,
         -7.1993e-02,  2.8535e-02,  4.0187e-01,  2.9107e-01,  9.7686e-02,
         -4.6468e-01, -3.9609e-01, -1.6033e-01, -8.8476e-02, -1.9303e-01,
          1.0289e-01,  7.1705e-02,  2.0668e-01,  1.3000e-01,  2.1006e-01,
         -1.8323e-01,  7.6074e-02,  1.6984e-01, -9.0619e-02, -2.8352e-01,
          7.4581e-03, -1.7765e-01, -2.5606e-01,  2.3332e-01,  1.0250e-01,
          1.6414e-02,  1.3245e-03, -2.3802e-01,  1.0914e-01, -9.3955e-02,
          1.2081e-02, -1.1515e-02,  6.8486e-02,  7.6389e-03,  1.7935e-01,
          1.4018e-01, -1.0898e-01, -7.3147e-02, -1.0500e-01, -1.0502e-01,
          3.2094e-02, -2.0599e-01, -1.6867e-01, -1.0118e-01,  1.8666e-01,
          3.0926e-01,  1.0023e-01, -9.4790e-03,  1.6887e-01, -1.0295e-01,
         -1.1965e-02, -1.9788e-01, -7.1004e-02, -5.4509e-02,  1.6596e-02,
          1.3458e-01, -5.5370e-02, -6.6234e-02,  2.2170e-02, -6.4419e-02,
          6.0459e-02]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
747000 特征值优化 tensor(0.7922, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7242e+00, -1.0072e-01, -1.3512e+00, -4.4560e-01,  2.2208e+00,
          2.2433e+00,  1.8710e-01, -2.1272e+00,  1.3365e+00,  6.8052e-01,
         -5.3413e-01, -2.9016e-01, -8.0516e-01, -7.1499e-01,  7.0374e-02,
          3.0305e-01,  6.4213e-01,  9.5887e-01, -4.5178e-01, -6.2696e-02,
          9.3128e-01,  4.0041e-01, -6.1282e-01,  1.1025e+00, -4.4050e-01,
         -2.0180e-01, -3.5154e-01, -1.1673e-01, -2.8144e-01,  2.5815e-01,
         -2.0084e-01,  6.9620e-02, -2.8341e-01,  1.8651e-01,  1.2986e-01,
          1.2955e-01, -1.6424e-01,  1.9439e-01, -3.6266e-01, -1.6968e-01,
         -2.0838e-01,  3.7709e-02,  3.4065e-02, -6.9463e-02, -2.8818e-01,
          1.9875e-01, -6.1245e-03, -2.1327e-01, -4.1230e-02, -4.0580e-02,
         -4.8705e-01,  1.1750e-01,  3.8407e-01,  2.7787e-01, -2.2213e-01,
          6.7274e-01,  6.7565e-02, -3.6430e-01, -1.3600e-01,  3.2637e-01,
         -5.6458e-01,  2.3774e-01,  2.4497e-01, -2.3742e-02,  8.4306e-02,
          6.2703e-02, -6.9723e-02,  2.1845e-01, -2.4326e-01, -6.8810e-02,
         -3.5162e-01,  2.2231e-02, -1.2833e-01,  5.0252e-02,  3.6322e-02,
          1.5172e-03, -4.3018e-01, -5.7306e-02,  2.5119e-01, -8.2040e-02,
          1.1514e-01,  1.0928e-01,  7.6931e-02,  1.3359e-01, -5.1595e-02,
         -3.6943e-02, -4.0812e-01, -7.5805e-01, -2.7488e-01, -1.0476e-01,
          1.9982e-01,  6.2557e-02, -1.5319e-01,  2.8772e-01,  4.9438e-02,
         -1.3661e-01,  7.8909e-01,  2.7734e-01, -4.4182e-01,  1.7647e-01,
         -8.4746e-02,  3.1664e-02,  3.9169e-01,  2.9288e-01,  1.0130e-01,
         -4.7416e-01, -3.8508e-01, -1.5849e-01, -8.2982e-02, -1.9307e-01,
          1.0229e-01,  6.0934e-02,  2.1406e-01,  1.5254e-01,  1.9417e-01,
         -1.9270e-01,  7.1649e-02,  1.6103e-01, -1.0659e-01, -2.8355e-01,
          9.3760e-03, -1.9606e-01, -2.5429e-01,  2.3663e-01,  9.0023e-02,
          9.7729e-03,  6.4987e-03, -2.3848e-01,  1.0679e-01, -9.6341e-02,
         -3.0787e-03, -1.1818e-02,  6.4483e-02,  6.8963e-03,  1.8181e-01,
          1.2610e-01, -8.6794e-02, -9.0494e-02, -1.1347e-01, -9.9822e-02,
          2.6529e-02, -2.1758e-01, -1.8622e-01, -1.2583e-01,  1.8611e-01,
          2.9370e-01,  9.8688e-02,  2.4333e-04,  1.5762e-01, -1.2842e-01,
         -1.5342e-02, -2.0483e-01, -6.5225e-02, -5.3920e-02,  2.2222e-02,
          1.4091e-01, -6.1532e-02, -5.5454e-02,  1.6479e-02, -5.7198e-02,
          5.9486e-02]], device='cuda:0') tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
748000 特征值优化 tensor(0.8074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7156e+00, -9.2149e-02, -1.3498e+00, -4.4844e-01,  2.2241e+00,
          2.2345e+00,  1.7014e-01, -2.1302e+00,  1.3325e+00,  6.8538e-01,
         -5.2971e-01, -3.0255e-01, -7.9487e-01, -7.2718e-01,  8.2486e-02,
          3.2982e-01,  6.4199e-01,  9.5896e-01, -4.5427e-01, -6.0424e-02,
          9.4943e-01,  4.1448e-01, -6.1022e-01,  1.0885e+00, -4.4060e-01,
         -2.0210e-01, -3.7819e-01, -9.7537e-02, -2.8525e-01,  2.4813e-01,
         -1.9653e-01,  7.0349e-02, -2.7367e-01,  1.8673e-01,  1.2251e-01,
          1.2017e-01, -1.6089e-01,  2.0414e-01, -3.5411e-01, -1.7116e-01,
         -2.0728e-01,  3.4831e-02,  4.0561e-02, -6.8263e-02, -2.8237e-01,
          1.9620e-01, -1.1862e-02, -2.0971e-01, -3.1156e-02, -4.1900e-02,
         -4.8173e-01,  1.1668e-01,  3.8217e-01,  2.7956e-01, -2.2047e-01,
          6.6507e-01,  6.0957e-02, -3.7204e-01, -1.2611e-01,  3.2872e-01,
         -5.6253e-01,  2.4748e-01,  2.4057e-01, -3.9767e-02,  8.2295e-02,
          7.9940e-02, -6.2004e-02,  2.2069e-01, -2.4049e-01, -7.5030e-02,
         -3.4508e-01,  2.5848e-02, -1.2798e-01,  5.9698e-02,  2.9752e-02,
          4.4473e-04, -4.1982e-01, -5.3371e-02,  2.5509e-01, -8.0430e-02,
          1.1502e-01,  1.1430e-01,  7.2173e-02,  1.3242e-01, -5.9571e-02,
         -4.4497e-02, -4.0658e-01, -7.4638e-01, -2.8420e-01, -1.2741e-01,
          2.0170e-01,  5.6439e-02, -1.4729e-01,  2.9860e-01,  5.2670e-02,
         -1.3627e-01,  7.8529e-01,  2.8369e-01, -4.4025e-01,  1.8615e-01,
         -8.2607e-02,  3.1706e-02,  4.0486e-01,  2.9056e-01,  9.8870e-02,
         -4.5985e-01, -4.0724e-01, -1.6121e-01, -9.0180e-02, -1.9523e-01,
          1.0211e-01,  6.5918e-02,  2.0780e-01,  1.4219e-01,  1.9723e-01,
         -1.8240e-01,  8.2947e-02,  1.7253e-01, -9.9493e-02, -2.8045e-01,
          8.0597e-03, -1.8742e-01, -2.5786e-01,  2.3479e-01,  9.0623e-02,
          1.1450e-02, -2.4870e-03, -2.3852e-01,  1.1228e-01, -9.3983e-02,
          5.4668e-03, -8.5778e-03,  6.5224e-02,  7.5121e-03,  1.7967e-01,
          1.4852e-01, -1.1610e-01, -8.0114e-02, -9.4023e-02, -9.8355e-02,
          3.4822e-02, -2.0740e-01, -1.6914e-01, -1.0383e-01,  1.9704e-01,
          2.9170e-01,  1.0518e-01, -1.0649e-02,  1.6753e-01, -1.1187e-01,
         -1.9924e-02, -2.1589e-01, -5.6032e-02, -5.3279e-02,  1.9905e-02,
          1.3581e-01, -5.0178e-02, -5.7766e-02,  1.5389e-02, -6.3580e-02,
          5.9164e-02]], device='cuda:0') tensor(0.2067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
749000 特征值优化 tensor(0.7921, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7368, -0.0925, -1.3767, -0.4448,  2.2404,  2.2451,  0.1983, -2.1214,
          1.3381,  0.6846, -0.5208, -0.2834, -0.8060, -0.7100,  0.1003,  0.3118,
          0.6401,  0.9651, -0.4660, -0.0682,  0.9527,  0.4134, -0.6159,  1.0874,
         -0.4386, -0.2046, -0.3497, -0.1097, -0.2886,  0.2519, -0.2008,  0.0739,
         -0.2671,  0.1975,  0.1252,  0.1258, -0.1682,  0.1993, -0.3599, -0.1631,
         -0.2124,  0.0386,  0.0348, -0.0839, -0.2799,  0.1900, -0.0118, -0.2079,
         -0.0358, -0.0414, -0.4849,  0.1122,  0.3901,  0.2807, -0.2276,  0.6719,
          0.0627, -0.3727, -0.1352,  0.3261, -0.5644,  0.2345,  0.2471, -0.0331,
          0.0817,  0.0650, -0.0739,  0.2151, -0.2464, -0.0725, -0.3494,  0.0257,
         -0.1235,  0.0544,  0.0322, -0.0076, -0.4226, -0.0408,  0.2523, -0.0868,
          0.1065,  0.1110,  0.0756,  0.1342, -0.0602, -0.0314, -0.4121, -0.7663,
         -0.2740, -0.1117,  0.2020,  0.0715, -0.1588,  0.2741,  0.0470, -0.1285,
          0.7920,  0.2971, -0.4369,  0.1869, -0.0817,  0.0240,  0.3912,  0.2978,
          0.1042, -0.4675, -0.3821, -0.1598, -0.0850, -0.1944,  0.0982,  0.0548,
          0.2109,  0.1596,  0.1918, -0.1929,  0.0697,  0.1552, -0.1067, -0.2831,
          0.0207, -0.1996, -0.2511,  0.2351,  0.0919,  0.0132,  0.0073, -0.2387,
          0.1144, -0.0933,  0.0041, -0.0097,  0.0612,  0.0043,  0.1813,  0.1471,
         -0.0897, -0.1006, -0.1182, -0.0945,  0.0218, -0.2204, -0.1750, -0.1154,
          0.1793,  0.2877,  0.0917,  0.0028,  0.1582, -0.1240, -0.0088, -0.2147,
         -0.0713, -0.0476,  0.0199,  0.1454, -0.0577, -0.0640,  0.0121, -0.0607,
          0.0560]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
750000 特征值优化 tensor(0.8082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7158e+00, -9.4405e-02, -1.3764e+00, -4.3395e-01,  2.2475e+00,
          2.2404e+00,  1.7189e-01, -2.1152e+00,  1.3242e+00,  6.8296e-01,
         -5.3005e-01, -3.1818e-01, -8.0298e-01, -7.2501e-01,  6.8500e-02,
          3.2811e-01,  6.4104e-01,  9.5609e-01, -4.6069e-01, -6.0270e-02,
          9.4196e-01,  4.0960e-01, -6.1058e-01,  1.0977e+00, -4.4089e-01,
         -2.2157e-01, -3.7464e-01, -9.8555e-02, -2.8521e-01,  2.5741e-01,
         -1.9840e-01,  6.6425e-02, -2.6958e-01,  2.0080e-01,  1.2229e-01,
          1.2600e-01, -1.6117e-01,  1.9707e-01, -3.4401e-01, -1.7856e-01,
         -2.1390e-01,  3.5696e-02,  3.8548e-02, -6.1006e-02, -2.8406e-01,
          1.9865e-01, -1.1457e-02, -2.0816e-01, -3.4814e-02, -3.9863e-02,
         -4.8292e-01,  1.1749e-01,  3.8495e-01,  2.8552e-01, -2.1516e-01,
          6.6927e-01,  5.2223e-02, -3.7792e-01, -1.3639e-01,  3.3128e-01,
         -5.5892e-01,  2.3920e-01,  2.4464e-01, -3.2461e-02,  7.9364e-02,
          7.1660e-02, -6.3809e-02,  2.2644e-01, -2.4944e-01, -7.3149e-02,
         -3.4755e-01,  2.4417e-02, -1.2570e-01,  7.0540e-02,  3.4445e-02,
          6.8643e-04, -4.1041e-01, -4.0400e-02,  2.5410e-01, -7.6345e-02,
          1.0296e-01,  1.2455e-01,  7.1541e-02,  1.3911e-01, -7.0446e-02,
         -3.7688e-02, -4.0516e-01, -7.4876e-01, -2.8987e-01, -1.1942e-01,
          2.0058e-01,  7.4927e-02, -1.4516e-01,  2.9483e-01,  4.5655e-02,
         -1.3229e-01,  7.8666e-01,  2.7963e-01, -4.3536e-01,  1.8922e-01,
         -7.9216e-02,  2.9785e-02,  4.0189e-01,  2.9658e-01,  1.0420e-01,
         -4.5007e-01, -4.0738e-01, -1.6739e-01, -8.6726e-02, -1.9460e-01,
          1.0468e-01,  6.7595e-02,  2.0232e-01,  1.3669e-01,  2.0678e-01,
         -1.8756e-01,  7.5259e-02,  1.6670e-01, -9.9063e-02, -2.8351e-01,
          1.8926e-02, -1.8485e-01, -2.5064e-01,  2.3909e-01,  9.5615e-02,
          1.5728e-02,  1.3776e-03, -2.3843e-01,  1.1423e-01, -8.8787e-02,
          8.6546e-03, -8.6207e-03,  6.6976e-02,  6.3391e-03,  1.8006e-01,
          1.4558e-01, -1.0393e-01, -7.3030e-02, -1.1381e-01, -1.1051e-01,
          3.3785e-02, -2.1165e-01, -1.6092e-01, -9.8122e-02,  1.7724e-01,
          3.0560e-01,  1.0075e-01,  1.1124e-04,  1.5888e-01, -1.0410e-01,
         -2.2686e-03, -1.9278e-01, -6.7292e-02, -4.5703e-02,  2.3103e-02,
          1.2443e-01, -5.3496e-02, -5.6687e-02,  1.5719e-02, -6.1160e-02,
          6.4275e-02]], device='cuda:0') tensor(0.2293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
751000 特征值优化 tensor(0.7954, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7187e+00, -8.0289e-02, -1.3640e+00, -4.4253e-01,  2.2523e+00,
          2.2466e+00,  1.6518e-01, -2.1482e+00,  1.3403e+00,  6.8645e-01,
         -5.3118e-01, -3.2153e-01, -7.9158e-01, -7.0047e-01,  6.8185e-02,
          3.2982e-01,  6.3526e-01,  9.5251e-01, -4.5774e-01, -5.4779e-02,
          9.6050e-01,  4.1034e-01, -6.1557e-01,  1.0888e+00, -4.3531e-01,
         -2.1980e-01, -3.8385e-01, -9.7415e-02, -2.9758e-01,  2.4448e-01,
         -1.9547e-01,  6.4623e-02, -2.8183e-01,  1.9300e-01,  1.2331e-01,
          1.1692e-01, -1.5979e-01,  2.0616e-01, -3.3911e-01, -1.7302e-01,
         -2.0216e-01,  3.7020e-02,  3.3458e-02, -5.5660e-02, -2.7526e-01,
          2.0691e-01, -1.2696e-02, -2.1193e-01, -3.5071e-02, -4.0341e-02,
         -4.8099e-01,  1.1583e-01,  3.8714e-01,  2.8901e-01, -2.1968e-01,
          6.5974e-01,  6.2996e-02, -3.9084e-01, -1.3152e-01,  3.3891e-01,
         -5.5155e-01,  2.4753e-01,  2.4305e-01, -3.3983e-02,  8.2532e-02,
          7.5379e-02, -5.0734e-02,  2.1671e-01, -2.4617e-01, -8.2259e-02,
         -3.4824e-01,  3.0465e-02, -1.1898e-01,  7.6822e-02,  2.9665e-02,
         -5.5331e-03, -4.0881e-01, -3.6389e-02,  2.5540e-01, -7.1006e-02,
          1.0146e-01,  1.2583e-01,  6.3691e-02,  1.5281e-01, -5.0874e-02,
         -5.4854e-02, -4.0065e-01, -7.4904e-01, -2.9735e-01, -1.1679e-01,
          2.0001e-01,  6.5133e-02, -1.4545e-01,  3.1820e-01,  5.0111e-02,
         -1.3423e-01,  7.8378e-01,  2.7095e-01, -4.4841e-01,  1.9361e-01,
         -6.6431e-02,  2.6732e-02,  3.9695e-01,  2.9298e-01,  1.0491e-01,
         -4.4489e-01, -4.1293e-01, -1.6260e-01, -1.0549e-01, -2.0116e-01,
          1.0325e-01,  7.2994e-02,  2.1018e-01,  1.3032e-01,  2.0106e-01,
         -1.9012e-01,  9.2356e-02,  1.7355e-01, -9.8518e-02, -2.8238e-01,
          6.3684e-03, -1.9113e-01, -2.5383e-01,  2.3675e-01,  9.8466e-02,
          2.1450e-02,  5.3983e-04, -2.3438e-01,  1.1298e-01, -9.5895e-02,
          9.0366e-03, -1.6198e-02,  6.1172e-02,  5.8342e-03,  1.8202e-01,
          1.5346e-01, -1.2358e-01, -8.0758e-02, -9.0938e-02, -1.0861e-01,
          4.4425e-02, -2.0274e-01, -1.7264e-01, -8.9423e-02,  1.8886e-01,
          3.0100e-01,  1.0375e-01, -1.1765e-02,  1.6532e-01, -1.0144e-01,
         -2.2629e-03, -2.0394e-01, -5.8285e-02, -4.1941e-02,  2.1755e-02,
          1.4275e-01, -4.0396e-02, -6.6470e-02,  1.7809e-02, -6.3487e-02,
          6.5479e-02]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
752000 特征值优化 tensor(0.7869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7489e+00, -1.0861e-01, -1.3801e+00, -4.4539e-01,  2.2846e+00,
          2.2515e+00,  1.9125e-01, -2.1418e+00,  1.3408e+00,  6.9469e-01,
         -5.4094e-01, -2.9626e-01, -7.8061e-01, -7.0053e-01,  6.1369e-02,
          3.4481e-01,  6.1902e-01,  9.5721e-01, -4.7235e-01, -5.8844e-02,
          9.8909e-01,  4.1507e-01, -6.3084e-01,  1.0819e+00, -4.1939e-01,
         -2.0352e-01, -3.4683e-01, -1.1920e-01, -2.7609e-01,  2.4780e-01,
         -1.8609e-01,  7.3065e-02, -2.7953e-01,  2.2144e-01,  1.2088e-01,
          1.2942e-01, -1.5073e-01,  1.8146e-01, -3.4739e-01, -1.5548e-01,
         -2.0304e-01,  3.6340e-02,  3.9712e-02, -7.7121e-02, -2.7777e-01,
          1.8275e-01, -1.9896e-02, -1.9426e-01, -2.4831e-02, -3.3356e-02,
         -4.8509e-01,  1.1468e-01,  3.7939e-01,  2.7346e-01, -2.2354e-01,
          6.5219e-01,  6.4805e-02, -3.7001e-01, -1.3042e-01,  3.2782e-01,
         -5.6186e-01,  2.1673e-01,  2.4203e-01, -1.7583e-02,  9.9600e-02,
          3.5863e-02, -5.5964e-02,  2.1743e-01, -2.4022e-01, -8.0797e-02,
         -3.5284e-01,  2.0583e-02, -1.3344e-01,  4.0201e-02,  4.9715e-02,
         -1.0558e-02, -4.3613e-01, -3.5186e-02,  2.5381e-01, -7.9875e-02,
          1.0849e-01,  1.1016e-01,  6.9066e-02,  1.4379e-01, -8.6164e-02,
         -1.9780e-02, -4.1060e-01, -7.7080e-01, -2.7714e-01, -1.5602e-01,
          1.9208e-01,  7.4191e-02, -1.5796e-01,  2.8854e-01,  4.4298e-02,
         -1.2795e-01,  7.9754e-01,  3.1437e-01, -4.3077e-01,  2.0592e-01,
         -6.5640e-02,  2.5426e-02,  3.9908e-01,  3.0685e-01,  1.1379e-01,
         -4.4523e-01, -3.9164e-01, -1.5507e-01, -9.8963e-02, -1.9308e-01,
          1.0327e-01,  5.3888e-02,  1.9767e-01,  1.6443e-01,  2.2782e-01,
         -1.8453e-01,  1.0326e-01,  1.3850e-01, -1.1629e-01, -2.8876e-01,
          1.7995e-02, -1.8390e-01, -2.6048e-01,  2.3442e-01,  8.9609e-02,
          1.4207e-02, -1.0578e-02, -2.3655e-01,  1.1582e-01, -8.7600e-02,
          3.8829e-03, -6.0275e-03,  6.0204e-02,  1.2113e-03,  1.8588e-01,
          1.3276e-01, -7.9022e-02, -9.1155e-02, -1.2000e-01, -9.3817e-02,
          4.0927e-03, -2.3230e-01, -1.7192e-01, -1.0062e-01,  1.6738e-01,
          2.9849e-01,  8.1375e-02,  7.6602e-03,  1.6694e-01, -1.1615e-01,
         -7.0758e-03, -2.1629e-01, -5.4941e-02, -4.5923e-02,  3.1241e-02,
          1.4902e-01, -4.9353e-02, -6.5386e-02,  1.6390e-02, -6.4004e-02,
          5.2817e-02]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
753000 特征值优化 tensor(0.8560, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7076e+00, -1.1556e-01, -1.3755e+00, -4.4429e-01,  2.2695e+00,
          2.2444e+00,  1.8414e-01, -2.1433e+00,  1.3472e+00,  6.8972e-01,
         -5.4254e-01, -3.1501e-01, -7.8216e-01, -7.3465e-01,  9.3519e-02,
          3.2264e-01,  6.3103e-01,  9.4461e-01, -4.5908e-01, -4.2397e-02,
          9.6689e-01,  4.1742e-01, -6.2240e-01,  1.0737e+00, -4.1556e-01,
         -2.3001e-01, -3.5440e-01, -8.9825e-02, -3.1105e-01,  2.5743e-01,
         -1.8908e-01,  6.8638e-02, -2.6022e-01,  2.1669e-01,  1.1833e-01,
          1.2153e-01, -1.5813e-01,  1.9210e-01, -3.4014e-01, -1.7001e-01,
         -2.0433e-01,  3.6521e-02,  4.0715e-02, -7.3354e-02, -2.9119e-01,
          1.9873e-01, -1.6401e-02, -2.1667e-01, -3.3102e-02, -3.3569e-02,
         -4.8908e-01,  1.1958e-01,  3.8839e-01,  2.7947e-01, -2.2555e-01,
          6.5203e-01,  4.6312e-02, -3.8714e-01, -1.2209e-01,  3.3766e-01,
         -5.4407e-01,  2.2846e-01,  2.3696e-01, -1.6591e-02,  8.4024e-02,
          6.9707e-02, -4.3360e-02,  2.2189e-01, -2.4254e-01, -7.9820e-02,
         -3.3969e-01,  2.4185e-02, -1.2262e-01,  4.1047e-02,  2.6335e-02,
         -1.2936e-02, -4.2040e-01, -3.8263e-02,  2.5344e-01, -8.1527e-02,
          1.1009e-01,  1.2071e-01,  6.4152e-02,  1.4527e-01, -7.5185e-02,
         -5.4869e-02, -3.9976e-01, -7.5476e-01, -2.8170e-01, -1.5355e-01,
          1.9008e-01,  8.1599e-02, -1.4734e-01,  3.1298e-01,  4.8987e-02,
         -1.3623e-01,  7.8975e-01,  3.0238e-01, -4.3574e-01,  2.1901e-01,
         -4.8825e-02,  3.0634e-02,  4.0347e-01,  2.9141e-01,  9.5481e-02,
         -4.6202e-01, -3.9011e-01, -1.5635e-01, -1.1391e-01, -1.9159e-01,
          1.0806e-01,  7.0416e-02,  2.0394e-01,  1.3590e-01,  2.2055e-01,
         -1.9921e-01,  8.9675e-02,  1.5775e-01, -9.0221e-02, -2.8373e-01,
          7.6120e-03, -1.7815e-01, -2.5355e-01,  2.3551e-01,  8.8496e-02,
          1.1691e-02,  1.7647e-03, -2.3666e-01,  1.0999e-01, -9.0325e-02,
          7.7614e-03, -6.8892e-03,  6.0723e-02,  6.3731e-03,  1.8544e-01,
          1.2511e-01, -1.2632e-01, -8.7675e-02, -8.6946e-02, -8.8947e-02,
          3.5980e-02, -2.1608e-01, -1.7492e-01, -8.9245e-02,  1.7736e-01,
          3.0890e-01,  9.7828e-02,  1.7314e-02,  1.6736e-01, -1.0709e-01,
         -1.0270e-02, -1.9887e-01, -5.4320e-02, -4.7639e-02,  1.5848e-02,
          1.4193e-01, -3.7224e-02, -7.6024e-02,  4.1950e-03, -7.2903e-02,
          5.6655e-02]], device='cuda:0') tensor(0.2161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
754000 特征值优化 tensor(0.7974, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7160e+00, -1.1517e-01, -1.3835e+00, -4.4496e-01,  2.2640e+00,
          2.2656e+00,  2.0205e-01, -2.1539e+00,  1.3511e+00,  6.6895e-01,
         -5.4057e-01, -3.1469e-01, -8.1431e-01, -7.1619e-01,  9.4091e-02,
          2.8575e-01,  6.3703e-01,  9.4598e-01, -4.6576e-01, -3.2158e-02,
          9.5293e-01,  4.0969e-01, -6.2118e-01,  1.0705e+00, -4.2994e-01,
         -2.1583e-01, -3.6901e-01, -1.0315e-01, -2.9786e-01,  2.5705e-01,
         -1.8501e-01,  7.3962e-02, -2.7595e-01,  1.9546e-01,  1.1335e-01,
          1.2021e-01, -1.6327e-01,  1.9847e-01, -3.5008e-01, -1.7214e-01,
         -2.1550e-01,  3.8319e-02,  2.9330e-02, -7.7006e-02, -2.9040e-01,
          2.1417e-01, -1.5940e-02, -2.2149e-01, -4.4457e-02, -3.0735e-02,
         -4.9108e-01,  1.0899e-01,  3.8539e-01,  2.8121e-01, -2.1604e-01,
          6.5777e-01,  6.4432e-02, -3.8094e-01, -1.3358e-01,  3.4128e-01,
         -5.4990e-01,  2.2560e-01,  2.4798e-01, -3.2872e-02,  7.9987e-02,
          5.0939e-02, -5.9537e-02,  2.1251e-01, -2.4652e-01, -7.6417e-02,
         -3.4072e-01,  2.4270e-02, -1.1699e-01,  6.3988e-02,  3.5388e-02,
          2.8887e-03, -4.1585e-01, -3.8294e-02,  2.4663e-01, -7.2027e-02,
          9.9793e-02,  1.2012e-01,  7.1815e-02,  1.3761e-01, -5.4734e-02,
         -4.6995e-02, -4.1143e-01, -7.5762e-01, -2.8626e-01, -1.1845e-01,
          1.8867e-01,  7.9074e-02, -1.4588e-01,  2.8841e-01,  5.9322e-02,
         -1.3000e-01,  7.8668e-01,  2.9220e-01, -4.4743e-01,  2.1805e-01,
         -6.1643e-02,  3.0075e-02,  3.9648e-01,  2.8872e-01,  8.1980e-02,
         -4.7060e-01, -4.0176e-01, -1.5324e-01, -1.0981e-01, -1.8958e-01,
          1.0790e-01,  7.0805e-02,  2.0977e-01,  1.3249e-01,  1.9963e-01,
         -1.9532e-01,  7.2191e-02,  1.6895e-01, -1.1467e-01, -2.8184e-01,
          4.1466e-03, -1.8931e-01, -2.4834e-01,  2.3506e-01,  8.9521e-02,
          1.1285e-02,  2.6520e-03, -2.3489e-01,  1.1140e-01, -9.4777e-02,
          1.5014e-03, -1.3798e-02,  5.8533e-02,  9.5721e-03,  1.8600e-01,
          1.3978e-01, -1.0795e-01, -1.0805e-01, -8.7205e-02, -1.0702e-01,
          2.5227e-02, -2.0704e-01, -1.7940e-01, -1.0313e-01,  1.8243e-01,
          3.0214e-01,  9.2186e-02, -2.2438e-03,  1.6077e-01, -1.1375e-01,
         -9.1694e-03, -2.1260e-01, -6.2042e-02, -3.9450e-02,  1.7220e-02,
          1.5626e-01, -6.6677e-02, -6.1254e-02,  1.4901e-02, -5.2894e-02,
          6.0217e-02]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
755000 特征值优化 tensor(0.7936, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7166e+00, -1.2356e-01, -1.3792e+00, -4.4669e-01,  2.2706e+00,
          2.2533e+00,  2.1474e-01, -2.1658e+00,  1.3484e+00,  6.6992e-01,
         -5.3257e-01, -2.9276e-01, -8.0092e-01, -7.4465e-01,  1.0870e-01,
          3.1073e-01,  6.3270e-01,  9.5009e-01, -4.5887e-01, -3.5185e-02,
          9.6388e-01,  4.1121e-01, -6.2194e-01,  1.0705e+00, -4.1897e-01,
         -1.9541e-01, -3.6287e-01, -1.0587e-01, -2.8591e-01,  2.6151e-01,
         -2.0102e-01,  6.4686e-02, -2.5644e-01,  1.8053e-01,  1.1958e-01,
          1.1779e-01, -1.6739e-01,  2.0247e-01, -3.4494e-01, -1.7361e-01,
         -2.0074e-01,  3.5719e-02,  3.9105e-02, -8.3446e-02, -2.9032e-01,
          2.0613e-01, -1.4255e-02, -2.1641e-01, -4.2078e-02, -3.3541e-02,
         -4.8139e-01,  1.1338e-01,  3.7690e-01,  2.7812e-01, -2.2851e-01,
          6.6525e-01,  6.9876e-02, -3.7093e-01, -1.2683e-01,  3.3203e-01,
         -5.5220e-01,  2.2668e-01,  2.4589e-01, -2.3550e-02,  7.6818e-02,
          6.4308e-02, -6.9442e-02,  2.2356e-01, -2.4276e-01, -7.8671e-02,
         -3.3543e-01,  2.5422e-02, -1.2298e-01,  4.5101e-02,  3.4177e-02,
         -1.3619e-02, -4.2365e-01, -4.0507e-02,  2.5551e-01, -8.1948e-02,
          1.2101e-01,  1.1104e-01,  7.2560e-02,  1.3445e-01, -6.9125e-02,
         -4.0607e-02, -4.0691e-01, -7.6268e-01, -2.7294e-01, -1.2032e-01,
          1.9449e-01,  7.2463e-02, -1.4696e-01,  3.0712e-01,  5.0989e-02,
         -1.3082e-01,  7.8733e-01,  2.9952e-01, -4.4018e-01,  1.9568e-01,
         -6.6067e-02,  2.3234e-02,  3.9331e-01,  2.8587e-01,  9.3447e-02,
         -4.7733e-01, -3.9856e-01, -1.5381e-01, -8.5145e-02, -1.8880e-01,
          1.0507e-01,  5.3526e-02,  2.1294e-01,  1.5830e-01,  1.9542e-01,
         -1.9072e-01,  6.2306e-02,  1.5754e-01, -1.0189e-01, -2.8809e-01,
          1.9089e-02, -1.7879e-01, -2.5383e-01,  2.3735e-01,  9.1622e-02,
          9.6321e-03,  5.0737e-03, -2.3213e-01,  1.1586e-01, -9.6189e-02,
          7.0763e-03, -4.3767e-03,  5.6049e-02,  9.5476e-03,  1.9109e-01,
          1.2647e-01, -1.0027e-01, -8.7198e-02, -1.0816e-01, -1.0695e-01,
          1.3886e-02, -2.2024e-01, -1.6174e-01, -1.0501e-01,  2.0848e-01,
          3.0032e-01,  9.9689e-02, -2.6551e-03,  1.5536e-01, -1.1046e-01,
         -2.1747e-02, -2.1354e-01, -4.2791e-02, -5.0861e-02,  2.7890e-02,
          1.3779e-01, -4.9103e-02, -5.7539e-02,  1.3890e-02, -6.4198e-02,
          5.5916e-02]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
756000 特征值优化 tensor(0.8005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7096e+00, -1.1298e-01, -1.3762e+00, -4.4192e-01,  2.2701e+00,
          2.2595e+00,  2.1284e-01, -2.1769e+00,  1.3515e+00,  6.7324e-01,
         -5.3799e-01, -3.1052e-01, -7.9959e-01, -7.2844e-01,  7.3955e-02,
          3.2937e-01,  6.4135e-01,  9.5756e-01, -4.6126e-01, -4.5445e-02,
          9.4490e-01,  4.0397e-01, -6.1813e-01,  1.0817e+00, -4.4347e-01,
         -2.1096e-01, -3.5855e-01, -1.0099e-01, -2.8422e-01,  2.5143e-01,
         -2.0368e-01,  6.1239e-02, -2.7414e-01,  1.7368e-01,  1.2600e-01,
          1.2319e-01, -1.6396e-01,  1.9899e-01, -3.5035e-01, -1.6672e-01,
         -1.9760e-01,  3.7757e-02,  3.8371e-02, -8.0637e-02, -2.8432e-01,
          2.0934e-01, -1.0225e-02, -2.1348e-01, -3.6690e-02, -4.3824e-02,
         -4.8615e-01,  1.1293e-01,  3.7960e-01,  2.7278e-01, -2.2783e-01,
          6.6584e-01,  6.7277e-02, -3.7401e-01, -1.2633e-01,  3.3158e-01,
         -5.5731e-01,  2.3093e-01,  2.3766e-01, -3.1276e-02,  8.1566e-02,
          6.4296e-02, -6.3718e-02,  2.1922e-01, -2.4330e-01, -8.1827e-02,
         -3.4054e-01,  2.6461e-02, -1.3127e-01,  4.9493e-02,  3.5207e-02,
         -4.3535e-03, -4.2107e-01, -5.6232e-02,  2.5364e-01, -8.3101e-02,
          1.1319e-01,  1.1103e-01,  6.8768e-02,  1.3656e-01, -6.9731e-02,
         -3.7681e-02, -4.0147e-01, -7.6518e-01, -2.6582e-01, -1.1157e-01,
          1.9527e-01,  6.8259e-02, -1.3800e-01,  2.9191e-01,  5.1070e-02,
         -1.2946e-01,  7.9139e-01,  2.8771e-01, -4.4565e-01,  1.9364e-01,
         -8.6714e-02,  3.0918e-02,  3.9398e-01,  2.8985e-01,  1.0176e-01,
         -4.6023e-01, -3.8881e-01, -1.6414e-01, -8.8272e-02, -1.9163e-01,
          1.0543e-01,  5.7697e-02,  2.1279e-01,  1.4431e-01,  1.9182e-01,
         -1.9074e-01,  7.9394e-02,  1.6183e-01, -1.0431e-01, -2.8749e-01,
          1.4065e-02, -1.8323e-01, -2.5254e-01,  2.3287e-01,  8.4557e-02,
          1.0387e-02,  6.2137e-03, -2.3802e-01,  1.1945e-01, -9.1095e-02,
          5.1544e-03, -5.8809e-03,  6.6183e-02,  1.1538e-02,  1.8578e-01,
          1.3357e-01, -1.0476e-01, -8.4989e-02, -1.0338e-01, -8.8564e-02,
          3.1030e-02, -2.1509e-01, -1.7482e-01, -9.9854e-02,  1.9619e-01,
          2.9605e-01,  9.4941e-02, -4.4286e-04,  1.6059e-01, -1.2413e-01,
         -2.1076e-02, -2.0051e-01, -5.6731e-02, -4.8759e-02,  1.4779e-02,
          1.5146e-01, -5.4409e-02, -5.4829e-02,  1.8259e-02, -6.5488e-02,
          6.1211e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
757000 特征值优化 tensor(0.7930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7037e+00, -1.0012e-01, -1.3878e+00, -4.4641e-01,  2.2855e+00,
          2.2590e+00,  1.8431e-01, -2.1722e+00,  1.3488e+00,  6.8375e-01,
         -5.3742e-01, -3.2482e-01, -7.7362e-01, -7.3918e-01,  7.2338e-02,
          3.3461e-01,  6.2681e-01,  9.5413e-01, -4.5783e-01, -3.5618e-02,
          9.5158e-01,  4.1426e-01, -6.1431e-01,  1.0851e+00, -4.4202e-01,
         -2.2208e-01, -3.5317e-01, -9.1020e-02, -2.9286e-01,  2.5456e-01,
         -1.9884e-01,  6.7794e-02, -2.5867e-01,  2.0098e-01,  1.2972e-01,
          1.2526e-01, -1.6007e-01,  2.0433e-01, -3.2890e-01, -1.7281e-01,
         -2.0094e-01,  3.6136e-02,  3.8246e-02, -5.5582e-02, -2.8543e-01,
          2.1021e-01, -7.2860e-03, -2.0522e-01, -2.4923e-02, -4.5288e-02,
         -4.9010e-01,  1.2025e-01,  3.7825e-01,  2.8564e-01, -2.1760e-01,
          6.5866e-01,  5.5045e-02, -3.8170e-01, -1.2683e-01,  3.4098e-01,
         -5.5221e-01,  2.3548e-01,  2.3480e-01, -2.6162e-02,  7.8884e-02,
          7.3368e-02, -4.3359e-02,  2.2121e-01, -2.4102e-01, -8.6215e-02,
         -3.4115e-01,  2.6898e-02, -1.2372e-01,  6.9042e-02,  2.3232e-02,
         -1.6148e-02, -4.1109e-01, -3.4522e-02,  2.5504e-01, -7.3598e-02,
          1.0248e-01,  1.3337e-01,  6.4282e-02,  1.5520e-01, -7.2988e-02,
         -5.2910e-02, -4.0319e-01, -7.5587e-01, -2.8793e-01, -1.3218e-01,
          1.9223e-01,  7.3856e-02, -1.2773e-01,  3.1742e-01,  4.9215e-02,
         -1.2822e-01,  7.8694e-01,  2.7713e-01, -4.3501e-01,  1.9855e-01,
         -6.0877e-02,  2.4354e-02,  3.9772e-01,  2.8081e-01,  1.0171e-01,
         -4.4802e-01, -4.0518e-01, -1.5488e-01, -1.1171e-01, -1.9519e-01,
          1.0915e-01,  7.0343e-02,  2.0051e-01,  1.2981e-01,  2.2117e-01,
         -1.9109e-01,  9.2380e-02,  1.6315e-01, -9.1418e-02, -2.8237e-01,
          1.2332e-02, -1.8155e-01, -2.5809e-01,  2.3056e-01,  9.6789e-02,
          1.7703e-02,  3.0843e-03, -2.3450e-01,  1.1939e-01, -9.2937e-02,
          1.1221e-02, -9.5693e-03,  6.7005e-02,  4.6783e-03,  1.8167e-01,
          1.5304e-01, -1.2715e-01, -7.4881e-02, -7.9872e-02, -9.8203e-02,
          3.7000e-02, -2.0319e-01, -1.6638e-01, -8.1736e-02,  1.8686e-01,
          3.0771e-01,  9.6058e-02, -5.5097e-03,  1.7259e-01, -9.4048e-02,
          5.3256e-05, -2.0225e-01, -6.3619e-02, -4.3224e-02,  2.6608e-02,
          1.3387e-01, -4.2405e-02, -7.9918e-02,  2.6088e-02, -6.5494e-02,
          6.6142e-02]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
758000 特征值优化 tensor(0.7930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7146, -0.1014, -1.3855, -0.4451,  2.2769,  2.2666,  0.2178, -2.1451,
          1.3457,  0.6753, -0.5242, -0.2970, -0.8080, -0.7175,  0.0941,  0.3197,
          0.6365,  0.9505, -0.4745, -0.0515,  0.9576,  0.4061, -0.6220,  1.0737,
         -0.4414, -0.2160, -0.3563, -0.1174, -0.2906,  0.2509, -0.2041,  0.0638,
         -0.2636,  0.1833,  0.1268,  0.1273, -0.1691,  0.2007, -0.3522, -0.1661,
         -0.2126,  0.0376,  0.0323, -0.0819, -0.2793,  0.2027, -0.0135, -0.2079,
         -0.0383, -0.0447, -0.4898,  0.1060,  0.3896,  0.2737, -0.2294,  0.6713,
          0.0644, -0.3755, -0.1332,  0.3315, -0.5590,  0.2318,  0.2393, -0.0381,
          0.0832,  0.0560, -0.0719,  0.2082, -0.2470, -0.0786, -0.3442,  0.0239,
         -0.1256,  0.0596,  0.0322, -0.0082, -0.4176, -0.0439,  0.2491, -0.0862,
          0.1062,  0.1128,  0.0725,  0.1366, -0.0576, -0.0351, -0.4122, -0.7670,
         -0.2718, -0.1086,  0.1975,  0.0765, -0.1577,  0.2758,  0.0492, -0.1261,
          0.7917,  0.3039, -0.4336,  0.1837, -0.0797,  0.0192,  0.4005,  0.2995,
          0.0997, -0.4648, -0.3795, -0.1540, -0.0979, -0.1954,  0.1016,  0.0606,
          0.2079,  0.1557,  0.1890, -0.1905,  0.0714,  0.1586, -0.1071, -0.2838,
          0.0192, -0.2028, -0.2482,  0.2393,  0.0883,  0.0151,  0.0061, -0.2368,
          0.1205, -0.0918,  0.0061, -0.0115,  0.0613,  0.0040,  0.1818,  0.1472,
         -0.0983, -0.1074, -0.1086, -0.0853,  0.0320, -0.2235, -0.1820, -0.1163,
          0.1830,  0.2916,  0.0919,  0.0030,  0.1510, -0.1216, -0.0033, -0.2130,
         -0.0649, -0.0431,  0.0164,  0.1514, -0.0613, -0.0624,  0.0116, -0.0592,
          0.0587]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
759000 特征值优化 tensor(0.7900, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7196e+00, -9.7323e-02, -1.3928e+00, -4.4583e-01,  2.2860e+00,
          2.2650e+00,  2.1528e-01, -2.1231e+00,  1.3360e+00,  6.7906e-01,
         -5.1637e-01, -2.8916e-01, -7.9525e-01, -7.1208e-01,  1.1436e-01,
          3.1576e-01,  6.3388e-01,  9.4763e-01, -4.7574e-01, -4.8088e-02,
          9.7065e-01,  4.2135e-01, -6.2443e-01,  1.0750e+00, -4.3749e-01,
         -2.0933e-01, -3.3567e-01, -1.1946e-01, -2.9569e-01,  2.5433e-01,
         -2.0264e-01,  6.8978e-02, -2.5825e-01,  2.0092e-01,  1.2665e-01,
          1.2317e-01, -1.6904e-01,  2.1020e-01, -3.5076e-01, -1.6605e-01,
         -2.1518e-01,  3.6677e-02,  3.5196e-02, -9.0708e-02, -2.8203e-01,
          1.9840e-01, -1.3324e-02, -2.1513e-01, -3.2549e-02, -4.6819e-02,
         -4.8628e-01,  1.0063e-01,  3.9422e-01,  2.7931e-01, -2.3152e-01,
          6.6651e-01,  6.8177e-02, -3.7250e-01, -1.3231e-01,  3.3203e-01,
         -5.5747e-01,  2.2514e-01,  2.3726e-01, -2.6337e-02,  7.6346e-02,
          6.0873e-02, -7.9363e-02,  2.0821e-01, -2.5000e-01, -8.0939e-02,
         -3.4059e-01,  2.7821e-02, -1.1982e-01,  5.5321e-02,  3.3627e-02,
         -1.6377e-02, -4.1935e-01, -3.0987e-02,  2.5482e-01, -8.9993e-02,
          1.0433e-01,  1.1311e-01,  7.0162e-02,  1.3356e-01, -6.8823e-02,
         -2.8210e-02, -4.1881e-01, -7.7499e-01, -2.6895e-01, -1.1601e-01,
          1.9753e-01,  7.9019e-02, -1.5082e-01,  2.6999e-01,  4.5869e-02,
         -1.2240e-01,  7.9371e-01,  3.0363e-01, -4.3137e-01,  2.0915e-01,
         -7.9262e-02,  2.0171e-02,  3.9834e-01,  2.9512e-01,  9.9192e-02,
         -4.8385e-01, -3.8674e-01, -1.5257e-01, -9.2707e-02, -1.9059e-01,
          9.7435e-02,  5.8673e-02,  2.0909e-01,  1.6218e-01,  1.9647e-01,
         -1.9914e-01,  6.7375e-02,  1.4897e-01, -1.0727e-01, -2.7946e-01,
          2.5119e-02, -2.0507e-01, -2.4397e-01,  2.3602e-01,  8.9134e-02,
          1.8646e-02,  3.0051e-03, -2.3258e-01,  1.1980e-01, -9.0254e-02,
          1.1495e-02, -7.0282e-03,  5.8414e-02,  3.4202e-03,  1.8195e-01,
          1.5061e-01, -8.6940e-02, -1.1319e-01, -1.1944e-01, -1.1030e-01,
          1.6094e-02, -2.1225e-01, -1.6942e-01, -1.1156e-01,  1.8676e-01,
          2.9446e-01,  8.4697e-02,  5.7527e-05,  1.5055e-01, -1.1645e-01,
         -1.3086e-02, -2.1734e-01, -6.6376e-02, -3.9156e-02,  2.2919e-02,
          1.4924e-01, -5.7162e-02, -6.5206e-02,  1.1523e-02, -5.6962e-02,
          5.2169e-02]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
760000 特征值优化 tensor(0.8030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7160e+00, -9.2673e-02, -1.4112e+00, -4.4043e-01,  2.3081e+00,
          2.2712e+00,  1.9390e-01, -2.1470e+00,  1.3353e+00,  6.8119e-01,
         -5.2538e-01, -3.0963e-01, -7.8131e-01, -7.2251e-01,  8.7201e-02,
          3.2381e-01,  6.3195e-01,  9.4684e-01, -4.7046e-01, -4.1325e-02,
          9.5392e-01,  4.1441e-01, -6.2221e-01,  1.0658e+00, -4.3642e-01,
         -2.2236e-01, -3.6721e-01, -9.6452e-02, -2.9670e-01,  2.5847e-01,
         -1.9509e-01,  6.9054e-02, -2.5529e-01,  1.9768e-01,  1.2275e-01,
          1.2704e-01, -1.6019e-01,  1.9846e-01, -3.4818e-01, -1.6564e-01,
         -2.1612e-01,  3.7810e-02,  3.3596e-02, -8.2158e-02, -2.8478e-01,
          1.9589e-01, -1.0488e-02, -2.1709e-01, -3.7028e-02, -4.6134e-02,
         -4.9386e-01,  1.0503e-01,  4.0132e-01,  2.7817e-01, -2.2592e-01,
          6.6160e-01,  4.9771e-02, -3.7905e-01, -1.2756e-01,  3.3888e-01,
         -5.4367e-01,  2.1781e-01,  2.3403e-01, -3.2433e-02,  8.5251e-02,
          5.6402e-02, -6.1207e-02,  2.0717e-01, -2.4740e-01, -8.0828e-02,
         -3.3311e-01,  3.0065e-02, -1.2313e-01,  4.8748e-02,  3.6964e-02,
         -7.7312e-03, -4.1589e-01, -1.9352e-02,  2.4904e-01, -6.3393e-02,
          9.7825e-02,  1.2397e-01,  6.9926e-02,  1.4952e-01, -7.3756e-02,
         -4.3137e-02, -4.0482e-01, -7.7178e-01, -2.7144e-01, -1.2419e-01,
          1.9017e-01,  9.4882e-02, -1.5192e-01,  2.8729e-01,  5.0054e-02,
         -1.2235e-01,  7.9401e-01,  2.9811e-01, -4.3297e-01,  2.4057e-01,
         -7.3411e-02,  1.8884e-02,  3.9222e-01,  2.8714e-01,  8.3677e-02,
         -4.6394e-01, -4.0090e-01, -1.5220e-01, -1.0716e-01, -1.9197e-01,
          1.0734e-01,  6.7721e-02,  2.0315e-01,  1.4399e-01,  2.1391e-01,
         -1.9834e-01,  8.7524e-02,  1.5051e-01, -1.1116e-01, -2.8327e-01,
          2.1035e-02, -1.9476e-01, -2.4621e-01,  2.3508e-01,  9.4248e-02,
          1.6682e-02,  1.8175e-03, -2.3365e-01,  1.1948e-01, -9.0743e-02,
          1.1639e-02, -9.8268e-03,  6.2131e-02,  3.5973e-03,  1.8075e-01,
          1.3134e-01, -1.2137e-01, -9.6991e-02, -9.3681e-02, -1.1091e-01,
          2.2734e-02, -1.9842e-01, -1.6158e-01, -9.8098e-02,  1.8670e-01,
          3.0536e-01,  8.6138e-02, -2.6580e-03,  1.6824e-01, -1.0115e-01,
         -2.0466e-02, -1.9599e-01, -5.9649e-02, -4.1985e-02,  2.2100e-02,
          1.4855e-01, -5.1139e-02, -6.5326e-02,  1.4787e-02, -5.8442e-02,
          5.9885e-02]], device='cuda:0') tensor(0.2175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
761000 特征值优化 tensor(0.8164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6926e+00, -1.1152e-01, -1.3880e+00, -4.4305e-01,  2.3065e+00,
          2.2708e+00,  1.9610e-01, -2.1589e+00,  1.3409e+00,  6.7724e-01,
         -5.2268e-01, -3.0519e-01, -8.0207e-01, -7.3453e-01,  1.0678e-01,
          3.2334e-01,  6.2575e-01,  9.3419e-01, -4.6862e-01, -4.0911e-02,
          9.6759e-01,  4.2443e-01, -6.2590e-01,  1.0523e+00, -4.3332e-01,
         -2.2617e-01, -3.6807e-01, -1.0217e-01, -2.9439e-01,  2.5839e-01,
         -1.9975e-01,  6.0347e-02, -2.4768e-01,  1.9875e-01,  1.2208e-01,
          1.2799e-01, -1.6193e-01,  1.9837e-01, -3.3409e-01, -1.7070e-01,
         -2.0501e-01,  3.3373e-02,  4.3822e-02, -7.9908e-02, -2.8433e-01,
          2.0805e-01, -3.5084e-03, -2.1478e-01, -4.0327e-02, -4.2202e-02,
         -4.9726e-01,  1.1111e-01,  3.9912e-01,  2.8059e-01, -2.2564e-01,
          6.5594e-01,  5.8790e-02, -3.7783e-01, -1.2382e-01,  3.3803e-01,
         -5.3903e-01,  2.2612e-01,  2.3004e-01, -2.3187e-02,  8.3732e-02,
          5.6605e-02, -6.3496e-02,  2.1409e-01, -2.4703e-01, -8.2474e-02,
         -3.3380e-01,  2.5530e-02, -1.1844e-01,  6.5209e-02,  2.5686e-02,
         -1.0539e-02, -4.0809e-01, -2.5934e-02,  2.6088e-01, -7.6751e-02,
          9.9371e-02,  1.2237e-01,  6.2840e-02,  1.4533e-01, -6.6735e-02,
         -4.0498e-02, -4.0160e-01, -7.6095e-01, -2.8178e-01, -1.3203e-01,
          1.9448e-01,  7.7324e-02, -1.5476e-01,  2.9743e-01,  4.7163e-02,
         -1.2572e-01,  7.8920e-01,  3.1559e-01, -4.2607e-01,  2.0552e-01,
         -6.6596e-02,  2.6963e-02,  3.9213e-01,  2.8917e-01,  9.1746e-02,
         -4.7349e-01, -4.0314e-01, -1.6237e-01, -8.9784e-02, -1.8959e-01,
          1.0452e-01,  6.3514e-02,  2.0654e-01,  1.4298e-01,  1.9923e-01,
         -1.9005e-01,  7.3752e-02,  1.5329e-01, -9.7053e-02, -2.8549e-01,
          2.1754e-02, -1.9173e-01, -2.5025e-01,  2.3779e-01,  9.2947e-02,
          1.4108e-02, -8.1480e-04, -2.3521e-01,  1.1470e-01, -9.2773e-02,
          7.7823e-03, -3.5102e-03,  5.0407e-02,  4.0632e-04,  1.8350e-01,
          1.3699e-01, -1.1829e-01, -8.7372e-02, -9.6404e-02, -9.9514e-02,
          4.1652e-02, -2.0203e-01, -1.6295e-01, -8.9990e-02,  1.9310e-01,
          3.0132e-01,  8.3571e-02, -3.2101e-03,  1.5498e-01, -9.3438e-02,
         -1.0890e-02, -2.0651e-01, -5.5661e-02, -3.9131e-02,  2.5377e-02,
          1.4253e-01, -4.7879e-02, -6.6567e-02,  1.1784e-03, -6.1216e-02,
          5.5787e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
762000 特征值优化 tensor(0.7959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7051e+00, -1.1111e-01, -1.3979e+00, -4.4589e-01,  2.3124e+00,
          2.2763e+00,  2.0269e-01, -2.1654e+00,  1.3593e+00,  6.7340e-01,
         -5.2324e-01, -2.9085e-01, -7.9502e-01, -7.5229e-01,  1.2390e-01,
          3.3471e-01,  6.1802e-01,  9.3939e-01, -4.6694e-01, -3.8255e-02,
          9.7254e-01,  4.2613e-01, -6.2517e-01,  1.0492e+00, -4.3637e-01,
         -2.1976e-01, -3.5337e-01, -1.1454e-01, -2.9298e-01,  2.5941e-01,
         -1.9815e-01,  5.8701e-02, -2.3478e-01,  1.9674e-01,  1.2248e-01,
          1.2609e-01, -1.7081e-01,  1.9906e-01, -3.3435e-01, -1.7603e-01,
         -2.0508e-01,  3.5959e-02,  3.6743e-02, -8.8315e-02, -2.8222e-01,
          2.0260e-01, -1.2247e-02, -2.2170e-01, -2.4894e-02, -4.6604e-02,
         -4.9699e-01,  1.0899e-01,  3.8877e-01,  2.8305e-01, -2.2654e-01,
          6.6299e-01,  6.0713e-02, -3.8985e-01, -1.2788e-01,  3.4112e-01,
         -5.4126e-01,  2.2790e-01,  2.3269e-01, -2.6176e-02,  7.4819e-02,
          5.9409e-02, -7.6574e-02,  2.1553e-01, -2.4606e-01, -8.3195e-02,
         -3.3690e-01,  3.0135e-02, -1.1295e-01,  7.5049e-02,  2.2272e-02,
         -2.1557e-02, -4.0725e-01, -1.4718e-02,  2.5416e-01, -8.0245e-02,
          9.7332e-02,  1.1748e-01,  6.4041e-02,  1.4437e-01, -7.7849e-02,
         -2.8417e-02, -4.0824e-01, -7.7230e-01, -2.8709e-01, -1.3329e-01,
          1.9391e-01,  8.1934e-02, -1.5775e-01,  2.8387e-01,  4.1728e-02,
         -1.2147e-01,  7.9142e-01,  3.1917e-01, -4.3123e-01,  2.1012e-01,
         -4.3831e-02,  2.6556e-02,  3.8711e-01,  2.8708e-01,  9.6795e-02,
         -4.7362e-01, -4.0506e-01, -1.5906e-01, -8.5584e-02, -1.9256e-01,
          1.0747e-01,  5.4221e-02,  2.0553e-01,  1.6247e-01,  1.9978e-01,
         -1.8455e-01,  6.3996e-02,  1.5023e-01, -1.0750e-01, -2.8598e-01,
          2.8603e-02, -1.8525e-01, -2.5160e-01,  2.3562e-01,  9.3919e-02,
          1.7756e-02, -9.1661e-04, -2.3607e-01,  1.2392e-01, -9.2018e-02,
          5.0527e-03, -6.8512e-03,  5.2770e-02, -1.1485e-03,  1.8007e-01,
          1.5015e-01, -1.2018e-01, -8.2438e-02, -1.0132e-01, -1.0574e-01,
          5.0570e-02, -1.9438e-01, -1.6426e-01, -8.4940e-02,  1.9447e-01,
          2.9587e-01,  8.6919e-02, -1.6700e-02,  1.5417e-01, -9.1013e-02,
         -1.1781e-02, -2.1900e-01, -6.4307e-02, -3.4394e-02,  2.6586e-02,
          1.4358e-01, -4.0972e-02, -7.1417e-02, -1.9995e-03, -7.7908e-02,
          6.0060e-02]], device='cuda:0') tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
763000 特征值优化 tensor(0.7909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6916, -0.1352, -1.3606, -0.4442,  2.3030,  2.2613,  0.1804, -2.1543,
          1.3443,  0.6928, -0.5273, -0.3202, -0.7740, -0.7375,  0.0991,  0.3515,
          0.6275,  0.9384, -0.4582, -0.0362,  0.9688,  0.4111, -0.6242,  1.0688,
         -0.4300, -0.2277, -0.3762, -0.0835, -0.3146,  0.2568, -0.1894,  0.0657,
         -0.2528,  0.2090,  0.1213,  0.1206, -0.1709,  0.2050, -0.3458, -0.1692,
         -0.1969,  0.0352,  0.0402, -0.0608, -0.2899,  0.2012, -0.0077, -0.2157,
         -0.0256, -0.0401, -0.4968,  0.1148,  0.3954,  0.2803, -0.2253,  0.6485,
          0.0364, -0.3849, -0.1310,  0.3472, -0.5397,  0.2218,  0.2241, -0.0114,
          0.0815,  0.0562, -0.0484,  0.2151, -0.2457, -0.0802, -0.3337,  0.0306,
         -0.1221,  0.0499,  0.0202, -0.0129, -0.4173, -0.0153,  0.2611, -0.0736,
          0.1067,  0.1293,  0.0625,  0.1500, -0.0899, -0.0562, -0.4000, -0.7669,
         -0.2973, -0.1535,  0.1872,  0.0856, -0.1363,  0.3094,  0.0436, -0.1341,
          0.7965,  0.3116, -0.4338,  0.2267, -0.0743,  0.0265,  0.3949,  0.2812,
          0.0872, -0.4625, -0.3954, -0.1461, -0.1089, -0.1937,  0.1092,  0.0674,
          0.2080,  0.1399,  0.2220, -0.1991,  0.0899,  0.1458, -0.0954, -0.2794,
          0.0228, -0.1865, -0.2478,  0.2303,  0.0924,  0.0106, -0.0034, -0.2350,
          0.1116, -0.0862,  0.0100, -0.0091,  0.0628,  0.0110,  0.1799,  0.1260,
         -0.1362, -0.0886, -0.0817, -0.1021,  0.0287, -0.2048, -0.1619, -0.0676,
          0.2052,  0.3105,  0.0951,  0.0041,  0.1706, -0.1011, -0.0096, -0.2054,
         -0.0531, -0.0561,  0.0260,  0.1477, -0.0320, -0.0792,  0.0100, -0.0663,
          0.0592]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
764000 特征值优化 tensor(61.8215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.5426e-01,  7.2674e-01,  8.6310e-01, -1.5952e-01, -6.8365e-01,
         -1.3393e+00, -1.2294e+00,  1.1722e+00,  9.2458e-01,  5.1324e-01,
          1.3841e-01,  7.5606e-01,  1.3863e-01, -1.5042e+00, -1.5268e+00,
         -2.1811e-01, -1.9367e+00, -4.5766e-01, -1.2784e+00, -1.5144e-01,
          9.7502e-01,  1.6797e+00,  6.6373e-01,  1.0838e-01,  8.6397e-01,
         -9.9342e-01,  1.9354e+00, -3.7191e+00,  7.1194e-01,  3.4854e-01,
          7.2303e-01,  7.8207e-01,  1.4641e-01,  5.7031e-01, -1.9895e+00,
         -1.4545e+00,  1.2282e+00,  1.3554e+00, -8.6330e-01,  1.3339e+00,
          2.0972e+00, -5.9381e-01,  1.1527e+00,  1.1559e+00, -8.1343e-02,
          4.5759e-01, -8.1680e-01, -1.9682e+00, -4.7259e-01,  1.1741e+00,
         -6.8131e-01,  2.1066e-01,  7.1690e-01, -1.3320e+00,  1.1974e+00,
         -7.4369e-01,  7.7507e-01, -1.4055e-01, -9.1572e-01,  5.2637e-01,
          3.0583e-01,  4.2256e-01, -1.3490e+00,  1.0234e+00, -6.9598e-01,
          6.8344e-01, -1.8903e+00, -1.3101e-01, -1.0044e+00,  4.2863e-01,
         -1.8412e-03,  4.0102e-01, -6.0965e-01, -1.0040e+00, -1.1642e+00,
         -1.1546e-01, -8.3961e-01, -8.5141e-01, -3.8938e-01,  6.1780e-01,
         -1.8753e-01,  5.5072e-02, -5.3850e-01,  2.6557e-01, -4.9102e-01,
          4.2493e-01,  1.7474e+00, -1.1141e+00, -1.3037e+00, -1.1917e-01,
          4.1759e-01,  1.1525e+00, -9.3871e-01,  4.3618e-01,  5.2124e-01,
          2.4951e-01, -9.7556e-01,  2.8707e-01, -6.9632e-04,  1.6462e+00,
         -5.7982e-01,  1.1219e+00,  4.4438e-01, -1.5087e-01, -9.2174e-01,
         -8.7913e-01,  4.1127e-01,  7.4571e-01,  9.4850e-02,  2.7228e+00,
         -1.1204e+00,  2.1485e+00,  8.2097e-01, -8.2382e-01, -1.6095e+00,
         -1.3356e+00, -6.0047e-01,  6.4289e-01, -2.6025e+00, -2.3886e-01,
          8.6949e-01, -5.2895e-01,  1.7226e+00,  6.4134e-01,  1.4261e+00,
         -7.0544e-01,  1.8903e-01,  1.2776e+00, -4.1662e-01, -1.0954e+00,
         -3.7768e-01,  6.1027e-01, -8.3149e-02,  1.6036e+00,  2.1491e-01,
          3.2639e-01,  1.7724e-01, -6.9183e-01, -2.8391e-01, -3.2065e-01,
         -7.9553e-02, -6.5348e-01, -4.5118e-01,  2.2405e-01, -6.7847e-01,
         -1.3314e+00, -1.7841e+00,  6.1950e-01,  1.0769e+00,  7.8517e-01,
          1.7305e-01,  1.1195e+00, -1.9184e+00,  5.0184e-01, -6.4062e-01,
          4.9013e-01, -1.2038e+00, -4.3017e-01,  1.8791e+00, -1.6998e-01,
          2.2132e-01]], device='cuda:0') tensor(17.1291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
765000 特征值优化 tensor(19.9683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3196,  1.1297,  0.3415, -0.8836,  0.4376, -0.5687, -0.5745,  0.5422,
          0.8841, -0.5034,  0.8719, -0.1769,  0.6649, -0.4670, -0.5610,  0.4889,
         -0.9780, -0.6565, -0.6941, -0.4641,  0.4875,  0.7985,  0.0068, -0.3193,
          0.7580, -0.2923,  1.0894, -2.8106,  0.1116, -0.1297,  0.1371,  0.1708,
         -0.0174,  0.0248, -1.0358, -0.5923,  0.2796,  0.3333, -0.0109,  0.4260,
          1.1528, -0.0876,  0.2364,  0.2644, -0.1707, -0.1475, -0.1469, -1.0333,
         -0.2058,  0.6403, -0.1547, -0.2233,  0.1193, -0.4877,  0.4292,  0.0203,
          0.1880,  0.1921, -0.0700,  0.0788,  0.2708, -0.4906, -0.4964,  0.0970,
          0.1701,  0.1383, -0.8605,  0.0215, -0.1405,  0.0283, -0.1739, -0.0378,
         -0.1772, -0.1644, -0.3291, -0.0791, -0.1972,  0.0781, -0.3086, -0.0626,
          0.0942,  0.1549,  0.1090, -0.1374,  0.2996, -0.2994,  0.8027,  0.0069,
         -0.3801, -0.3926,  0.2133, -0.0279, -0.0606, -0.2825,  0.0679, -0.3802,
          0.1345,  0.1876,  0.4875,  1.6253,  0.4406,  0.2693, -0.3537,  0.2575,
         -0.1474, -0.1930, -0.3579,  0.5004, -0.4601,  1.6803, -0.3075,  1.2168,
         -0.0590, -0.0225, -0.6642, -0.4277,  0.1092, -0.0136, -1.4651, -0.1700,
          0.2419, -0.1100,  0.7586,  0.1514,  0.5694, -0.0743, -0.1919,  0.5422,
          0.0879, -0.2848,  0.0915,  0.2031,  0.1318,  0.7190, -0.1695,  0.0787,
         -0.0931,  0.0050, -0.0848,  0.0327, -0.1028, -0.2581, -0.1896, -0.0261,
         -0.1428, -0.7571, -0.8770,  0.0289,  0.3303,  0.2519,  0.0267,  0.5352,
         -1.0199, -0.1486, -0.3887,  0.4088, -0.1409,  0.1789,  0.9030, -0.7254,
          0.2412]], device='cuda:0') tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
766000 特征值优化 tensor(2.4841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3710e+00,  6.2206e-01,  4.1156e-01, -8.5853e-01,  1.2871e+00,
         -3.8134e-01, -1.0800e-01,  3.7137e-01,  2.1436e+00, -1.1856e+00,
          5.3299e-01, -1.9776e-01,  2.1351e-01,  1.0897e-01,  2.7092e-01,
          3.7018e-01, -6.4178e-01, -1.3580e-01, -3.5453e-01, -6.9540e-02,
          4.1155e-03,  4.7202e-01, -2.0350e-01,  2.1157e-01,  1.2210e+00,
          1.3029e-01,  5.3388e-01, -1.9337e+00, -1.4422e-02,  9.2429e-02,
          1.4820e-01,  9.7294e-02, -3.8630e-02,  9.6495e-02, -6.3746e-01,
         -6.3279e-02, -5.5719e-02, -1.5789e-01,  5.5536e-03,  6.5261e-02,
          5.6507e-01,  3.8477e-02,  4.2421e-02,  3.1008e-01, -1.4110e-01,
         -1.5716e-02, -9.5794e-02, -2.5745e-01, -1.2088e-01,  6.9282e-01,
         -1.5063e-01, -1.8205e-01,  3.4782e-02, -2.5541e-01,  3.4297e-01,
         -1.4705e-01,  1.4305e-01,  1.3636e-01, -2.3861e-02,  2.3435e-01,
          4.2821e-02, -4.4864e-01, -5.6484e-02, -1.9241e-01,  7.5581e-02,
          5.9252e-02, -2.7554e-01, -1.7118e-01,  7.8536e-02, -1.0930e-01,
         -1.0816e-01, -1.3171e-01, -2.0499e-01, -1.6275e-01, -2.2288e-01,
          2.2698e-01, -1.9741e-01,  1.0488e-01,  7.2561e-02, -6.8321e-02,
         -1.2345e-01,  5.0397e-02, -4.4340e-02,  5.2308e-02,  1.8985e-01,
         -3.2493e-01,  1.0999e-01,  1.6496e-01, -3.4272e-01,  9.8418e-03,
          4.9602e-01, -1.8312e-01,  2.7022e-01, -1.6845e-01,  2.8422e-01,
         -6.8580e-01,  2.7428e-01, -1.3540e-02,  5.1404e-03,  4.1368e-01,
          3.0818e-01,  1.6267e-01, -3.2540e-01,  9.1813e-02, -8.7550e-02,
         -4.9749e-02, -4.1290e-01,  1.7496e-01,  2.5344e-02,  7.5844e-01,
         -1.0139e-01,  5.4676e-01, -2.0882e-02,  6.1353e-02, -1.4474e-01,
         -3.6765e-02,  1.6732e-01, -3.2594e-02, -5.5812e-01, -1.4413e-02,
          1.2629e-01, -1.4543e-01,  1.8083e-01,  2.2454e-01,  1.6512e-01,
         -8.3421e-02, -5.9867e-02,  3.6490e-02,  1.1354e-01, -7.7627e-02,
          9.0387e-02,  1.0069e-01,  5.4770e-02,  2.3652e-01, -4.9880e-02,
          2.0823e-01,  1.4280e-01, -1.9599e-01, -1.0765e-01,  9.3021e-02,
         -3.2585e-02, -1.4953e-01, -1.7217e-01, -1.0034e-02,  1.1852e-01,
         -1.8860e-02, -2.5369e-01,  1.2379e-01,  1.3937e-01,  7.2296e-02,
         -2.1849e-01,  1.3619e-02, -3.6217e-01, -2.2419e-01, -7.4964e-02,
         -1.3641e-03,  4.8559e-03, -8.0701e-02,  1.9246e-01, -3.1534e-01,
          9.7893e-02]], device='cuda:0') tensor(0.2397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
767000 特征值优化 tensor(1.3385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9499e+00,  3.8300e-01,  4.7781e-01, -8.3017e-01,  1.8396e+00,
         -6.7454e-01, -8.1972e-01,  7.2412e-01,  2.4461e+00, -8.8334e-01,
          1.9807e-01,  9.2934e-02,  4.9995e-02,  1.4505e-01,  2.2225e-01,
          5.6969e-01, -4.7382e-01, -9.4650e-02, -3.8831e-01, -4.0783e-03,
         -3.7865e-02,  5.0477e-01, -2.5237e-01,  4.7181e-01,  1.3014e+00,
          1.1387e-01,  3.3856e-01, -1.6906e+00, -2.4798e-02,  1.7146e-01,
          2.8334e-01,  6.1098e-02,  1.6779e-01,  1.0070e-01, -4.1934e-01,
         -2.7046e-02, -3.9638e-03, -2.2472e-01,  8.2287e-02,  1.3367e-01,
          5.6837e-01, -1.9506e-02,  1.0443e-01,  4.7652e-01, -4.2437e-01,
         -2.4076e-01, -2.4984e-01, -1.4971e-01, -1.7281e-01,  6.7615e-01,
         -1.0901e-01, -2.2233e-01, -1.9006e-01, -2.7838e-01,  3.9278e-01,
         -2.8477e-01,  2.5120e-01,  2.9382e-01, -3.0130e-02,  1.5428e-01,
         -1.4997e-01, -3.8675e-01, -3.2852e-02, -1.6687e-01,  4.4340e-02,
          3.0032e-01, -2.2258e-01, -2.9999e-01,  1.3205e-03, -2.4516e-01,
         -7.4853e-02, -7.2559e-02, -2.5758e-01, -2.1346e-01, -1.4048e-01,
          2.9921e-01, -2.2993e-01,  1.6046e-01,  7.7649e-02, -6.7068e-02,
         -1.2477e-01,  1.1595e-02, -6.3413e-02,  3.9222e-02,  2.1008e-01,
         -2.3320e-01,  1.6911e-01, -2.6682e-01, -1.6675e-01, -1.2695e-01,
          4.0296e-01, -2.5722e-01,  3.4072e-01, -7.5049e-02,  2.7374e-01,
         -6.5791e-01,  3.6237e-01,  1.4568e-01,  3.3044e-01,  2.0372e-01,
          3.7565e-01,  2.5749e-01, -1.5279e-01,  1.2396e-02, -8.7547e-02,
          1.5637e-01, -2.4944e-01,  7.8437e-02,  2.0361e-01,  5.0922e-01,
          5.2219e-03,  3.2457e-01,  9.3653e-02,  5.5484e-02, -1.3663e-01,
         -1.2243e-01,  1.8643e-01, -6.4217e-02, -4.3554e-01,  9.5499e-02,
          1.3580e-01, -1.6815e-01,  1.4063e-01,  1.2111e-01,  1.6305e-01,
         -6.3464e-02,  5.9011e-02, -3.4041e-02,  1.3541e-01,  4.5425e-02,
          4.0916e-02, -9.5573e-03,  1.0612e-01,  1.0953e-01, -6.7406e-02,
          1.4718e-01,  8.5921e-02, -1.3485e-01, -6.1862e-02,  1.7998e-01,
         -2.8639e-02, -8.1908e-02, -1.6488e-02, -3.6367e-03,  9.4554e-02,
         -1.5471e-02, -1.1914e-01,  1.6554e-01,  1.0718e-01,  1.2960e-01,
         -3.0337e-01,  1.2778e-01, -2.1627e-01, -2.4498e-01,  1.3706e-01,
          1.9304e-02, -7.1432e-03, -4.4068e-02,  6.7737e-02, -1.7827e-01,
         -4.9260e-03]], device='cuda:0') tensor(0.2275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
768000 特征值优化 tensor(0.9514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0202e+00,  2.0150e-01,  4.3059e-01, -9.4403e-01,  2.0876e+00,
         -6.5841e-01, -9.1961e-01,  6.3948e-01,  2.5322e+00, -7.4598e-01,
          8.1962e-02,  1.3766e-01,  3.9073e-03,  4.7212e-02,  2.1250e-01,
          6.0885e-01, -4.4577e-01, -1.8873e-01, -4.1879e-01, -3.1934e-02,
         -3.9108e-02,  5.5206e-01, -1.8686e-01,  6.1266e-01,  1.3701e+00,
          1.2884e-01,  3.2164e-01, -1.6406e+00, -3.2394e-02,  2.9876e-01,
          2.6006e-01,  5.8389e-02,  2.4125e-01,  1.8823e-01, -3.8520e-01,
         -7.5341e-02,  8.6267e-03, -1.0961e-01,  1.5560e-01,  1.8335e-01,
          5.8286e-01,  5.6002e-03,  1.2102e-01,  4.4107e-01, -4.5690e-01,
         -2.1930e-01, -2.2426e-01, -1.0697e-01, -1.2131e-01,  6.2574e-01,
         -5.3010e-02, -1.8412e-01, -2.6519e-01, -2.1649e-01,  4.0801e-01,
         -2.9117e-01,  2.7592e-01,  2.7997e-01, -6.1991e-02,  1.0752e-01,
         -1.3386e-01, -4.1680e-01, -4.2625e-02, -2.0094e-01,  7.3940e-02,
          3.1193e-01, -1.9089e-01, -2.8532e-01, -4.9237e-03, -2.7774e-01,
         -8.4996e-02, -4.0285e-02, -2.4793e-01, -2.0896e-01, -9.3686e-02,
          3.3032e-01, -2.3895e-01,  1.4370e-01,  1.6283e-01, -6.1122e-02,
         -1.5212e-01, -2.7713e-02, -5.9165e-02,  1.1885e-01,  2.3873e-01,
         -1.9785e-01,  2.2406e-01, -2.6829e-01, -6.5033e-02, -2.4219e-02,
          2.8222e-01, -1.4762e-01,  2.6248e-01, -2.3167e-02,  2.9992e-01,
         -6.3575e-01,  4.7744e-01,  1.8761e-01,  4.5171e-01,  1.3713e-01,
          4.1891e-01,  2.3237e-01, -7.8504e-02, -7.7863e-02, -9.5086e-02,
          3.8406e-01, -1.7895e-01,  1.1091e-01,  1.3795e-01,  4.1333e-01,
         -1.1249e-02,  2.7578e-01,  4.5339e-02,  1.0103e-01, -1.2799e-01,
         -1.3328e-01,  8.4647e-02, -1.0837e-01, -4.0244e-01,  7.2224e-02,
          1.8268e-01, -1.6532e-01,  1.2184e-01,  1.1459e-01,  1.3435e-01,
         -5.9567e-02,  2.2595e-02, -7.1864e-02,  1.0181e-01,  8.2589e-02,
          4.3169e-04, -4.9212e-02,  1.1762e-01,  5.8464e-02, -3.3208e-02,
          1.3481e-01,  9.9985e-02, -4.3980e-02, -1.1344e-01,  1.7444e-01,
         -1.1544e-02, -5.8153e-02, -2.3562e-02,  4.7790e-02,  8.1119e-02,
         -9.2546e-02, -7.5161e-02,  2.1593e-01,  1.2374e-01,  1.3271e-01,
         -2.4249e-01,  1.6718e-01, -1.6057e-01, -1.8953e-01,  2.2088e-01,
          8.8839e-02,  1.1110e-01, -3.4225e-02,  1.2914e-01, -1.7730e-01,
         -1.2421e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
769000 特征值优化 tensor(0.9288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8140e+00,  1.6693e-01,  3.9373e-01, -9.6729e-01,  2.0843e+00,
         -4.8410e-01, -8.5978e-01,  5.3943e-01,  2.5721e+00, -6.8612e-01,
          1.5148e-02,  1.7083e-01,  1.4306e-03, -1.2682e-02,  2.2477e-01,
          6.2501e-01, -4.7754e-01, -1.9811e-01, -4.2028e-01, -1.0591e-02,
         -5.4461e-02,  5.4571e-01, -1.0356e-01,  6.7421e-01,  1.3472e+00,
          1.0586e-01,  3.1315e-01, -1.5951e+00, -2.6894e-02,  3.2550e-01,
          2.9455e-01,  5.1091e-02,  2.7307e-01,  1.9232e-01, -3.7175e-01,
         -7.8480e-02,  3.0539e-02, -3.3528e-02,  1.6097e-01,  1.6239e-01,
          5.7402e-01,  2.4324e-03,  1.2355e-01,  4.2157e-01, -4.8725e-01,
         -2.6798e-01, -2.2266e-01, -6.4707e-02, -6.8949e-02,  6.7058e-01,
         -4.2999e-02, -1.5865e-01, -2.5851e-01, -2.4250e-01,  4.4560e-01,
         -2.6483e-01,  2.9386e-01,  2.8589e-01, -1.3306e-01,  1.0852e-01,
         -1.2317e-01, -4.1755e-01, -8.4677e-03, -2.1928e-01,  6.3296e-02,
          3.0481e-01, -1.8874e-01, -2.8253e-01,  2.4041e-02, -2.4086e-01,
         -1.0395e-01, -3.3706e-02, -2.5295e-01, -2.2141e-01, -9.0595e-02,
          3.4236e-01, -2.3337e-01,  1.4882e-01,  1.7484e-01, -5.1147e-02,
         -1.7798e-01, -4.3822e-02, -4.7629e-02,  1.9358e-01,  2.6251e-01,
         -1.7058e-01,  2.1981e-01, -2.4817e-01, -3.8681e-02, -3.3346e-02,
          2.2569e-01, -9.4231e-02,  2.8138e-01, -1.9396e-03,  3.0752e-01,
         -6.2963e-01,  4.8212e-01,  2.9945e-01,  4.4500e-01,  5.4191e-02,
          4.5253e-01,  2.4302e-01, -7.4028e-02, -1.1177e-01, -6.7137e-02,
          4.4598e-01, -2.0214e-01,  9.9991e-02,  1.2242e-01,  3.8013e-01,
         -4.3718e-03,  2.7773e-01,  2.1355e-02,  1.1243e-01, -1.1240e-01,
         -1.0914e-01,  3.9512e-02, -1.1416e-01, -3.8373e-01,  5.3334e-02,
          2.0635e-01, -1.6967e-01,  1.3401e-01,  1.3517e-01,  1.3229e-01,
         -4.6627e-02,  1.2670e-02, -9.1818e-02,  9.5639e-02,  1.0457e-01,
         -1.7561e-03, -7.6816e-02,  1.2450e-01,  4.6391e-02, -2.0500e-02,
          1.3902e-01,  1.4034e-01, -3.6127e-02, -1.5770e-01,  1.7624e-01,
         -1.2220e-02,  2.9762e-02, -1.9382e-02,  5.6587e-02,  5.6582e-02,
         -9.0380e-02, -4.9397e-02,  1.9430e-01,  1.3389e-01,  1.7084e-01,
         -1.9454e-01,  2.1797e-01, -1.4825e-01, -1.7021e-01,  2.3017e-01,
          1.0965e-01,  1.0546e-01, -1.4832e-02,  1.3757e-01, -1.6718e-01,
         -1.6932e-01]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
770000 特征值优化 tensor(0.9170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6361e+00,  1.7417e-01,  3.4914e-01, -9.7298e-01,  2.0792e+00,
         -4.3122e-01, -8.5651e-01,  5.6029e-01,  2.5865e+00, -6.3424e-01,
         -4.3740e-02,  1.6381e-01, -1.2858e-03, -4.8298e-02,  2.2639e-01,
          6.2823e-01, -5.1265e-01, -1.7324e-01, -4.3443e-01, -3.8688e-02,
         -1.1188e-01,  5.2130e-01, -2.6183e-02,  6.9875e-01,  1.3578e+00,
          1.0961e-01,  3.2429e-01, -1.5654e+00, -4.0058e-02,  3.4343e-01,
          2.8387e-01,  6.6669e-02,  3.0483e-01,  1.7519e-01, -3.0738e-01,
         -8.1211e-02,  7.8695e-03, -1.4956e-02,  1.7831e-01,  1.3622e-01,
          5.8214e-01,  3.5565e-03,  1.2457e-01,  4.2149e-01, -4.9806e-01,
         -2.6450e-01, -2.5118e-01, -2.3109e-02, -2.8317e-02,  6.6203e-01,
         -5.4183e-02, -1.1934e-01, -2.4126e-01, -2.4175e-01,  4.6033e-01,
         -2.5252e-01,  2.7958e-01,  2.9296e-01, -1.8075e-01,  1.2116e-01,
         -8.3972e-02, -4.2552e-01, -2.0890e-03, -2.0269e-01,  8.7254e-02,
          2.7168e-01, -1.8639e-01, -2.7992e-01,  3.1200e-02, -2.3669e-01,
         -1.0246e-01, -2.4512e-02, -2.7734e-01, -2.3426e-01, -8.3091e-02,
          3.3327e-01, -2.4738e-01,  1.8454e-01,  1.8830e-01, -5.1592e-02,
         -2.0987e-01, -5.4218e-02, -4.7391e-02,  2.2174e-01,  2.5048e-01,
         -1.7045e-01,  2.3572e-01, -2.2184e-01,  5.4922e-03, -5.7054e-02,
          2.4177e-01, -9.7163e-02,  2.6287e-01, -2.0892e-02,  3.1081e-01,
         -6.1911e-01,  4.7860e-01,  3.3079e-01,  4.6826e-01, -2.2377e-02,
          4.6716e-01,  2.4761e-01, -2.3312e-02, -1.1469e-01, -6.3368e-02,
          4.9174e-01, -2.3520e-01,  4.5079e-02,  7.3520e-02,  3.5965e-01,
          1.2002e-02,  2.6364e-01,  6.6227e-03,  1.0560e-01, -1.0847e-01,
         -1.2422e-01,  1.2800e-02, -1.4478e-01, -3.7852e-01,  3.9131e-02,
          2.4031e-01, -1.5765e-01,  1.4537e-01,  1.6138e-01,  1.3036e-01,
         -5.0161e-02, -4.3775e-03, -1.0906e-01,  9.0171e-02,  1.0419e-01,
          3.3621e-03, -7.9129e-02,  1.2169e-01,  6.6488e-02, -1.3553e-02,
          1.4035e-01,  1.5674e-01, -2.8705e-02, -1.6887e-01,  1.5037e-01,
         -3.5914e-02,  1.0104e-02, -2.3907e-02,  5.5264e-02,  3.4751e-02,
         -1.0266e-01, -5.1638e-02,  2.0545e-01,  1.1979e-01,  1.6734e-01,
         -2.0549e-01,  2.1883e-01, -1.5529e-01, -1.7247e-01,  2.3958e-01,
          8.6149e-02,  1.0217e-01, -1.0669e-02,  1.1030e-01, -1.7251e-01,
         -1.4350e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
771000 特征值优化 tensor(0.9215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5135e+00,  2.0709e-01,  3.2731e-01, -9.8382e-01,  2.1253e+00,
         -4.6326e-01, -9.0293e-01,  6.2174e-01,  2.6393e+00, -5.9253e-01,
         -1.1011e-01,  1.3087e-01,  5.2359e-02, -4.9897e-02,  1.7612e-01,
          5.9703e-01, -5.2904e-01, -1.3268e-01, -4.3054e-01, -5.1044e-02,
         -1.5510e-01,  5.3482e-01,  6.8700e-03,  7.2403e-01,  1.3898e+00,
          1.1500e-01,  3.2945e-01, -1.5452e+00, -3.7149e-02,  3.3254e-01,
          2.8577e-01,  6.9721e-02,  3.2675e-01,  1.8172e-01, -2.9083e-01,
         -8.0039e-02,  1.7273e-02,  1.8043e-02,  1.8809e-01,  1.1871e-01,
          6.0523e-01,  2.4412e-03,  1.2038e-01,  3.9944e-01, -4.9762e-01,
         -2.5654e-01, -2.7128e-01, -7.4028e-03,  1.0019e-02,  6.6998e-01,
         -6.4428e-02, -9.3220e-02, -2.3177e-01, -2.4124e-01,  4.4984e-01,
         -2.5896e-01,  2.6763e-01,  2.6387e-01, -2.1474e-01,  1.2968e-01,
         -6.7922e-02, -4.1567e-01,  1.7563e-02, -1.7557e-01,  1.2586e-01,
          2.4820e-01, -1.8370e-01, -2.8208e-01,  3.1460e-02, -2.5008e-01,
         -9.7915e-02, -3.9920e-02, -2.7600e-01, -2.5098e-01, -7.8475e-02,
          3.4180e-01, -2.4026e-01,  1.9688e-01,  1.8353e-01, -5.8373e-02,
         -2.1252e-01, -6.2464e-02, -4.7048e-02,  2.3048e-01,  2.4768e-01,
         -1.6912e-01,  2.2040e-01, -1.9908e-01, -2.0777e-02, -6.4491e-02,
          2.4027e-01, -7.1286e-02,  2.0803e-01, -2.9849e-02,  3.1490e-01,
         -6.1596e-01,  4.9096e-01,  3.3831e-01,  4.5428e-01, -4.7640e-02,
          4.6612e-01,  2.5799e-01,  2.0795e-02, -1.2894e-01, -3.3533e-02,
          4.8593e-01, -2.5522e-01,  2.7815e-02,  1.2621e-02,  3.5422e-01,
          2.1977e-02,  2.4438e-01,  1.6915e-02,  1.0253e-01, -9.2977e-02,
         -1.3604e-01, -8.1187e-03, -1.6702e-01, -3.6822e-01,  2.5015e-02,
          2.5318e-01, -1.6406e-01,  1.3843e-01,  1.6289e-01,  1.2904e-01,
         -4.2635e-02, -2.4261e-02, -1.1403e-01,  9.6139e-02,  8.6871e-02,
          1.9152e-02, -8.5480e-02,  1.1101e-01,  8.8870e-02, -1.7656e-02,
          1.1016e-01,  1.7388e-01, -2.4619e-02, -1.6971e-01,  1.4271e-01,
         -4.1252e-02,  1.3850e-02, -3.1768e-02,  6.8990e-02, -8.1818e-03,
         -1.0841e-01, -6.3031e-02,  2.1129e-01,  1.3488e-01,  1.5840e-01,
         -2.1428e-01,  2.0279e-01, -1.5641e-01, -1.7586e-01,  2.2322e-01,
          7.2756e-02,  1.0779e-01, -1.8808e-02,  9.3424e-02, -1.7379e-01,
         -1.4175e-01]], device='cuda:0') tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
772000 特征值优化 tensor(0.9049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4053e+00,  2.2841e-01,  3.0138e-01, -9.8035e-01,  2.1860e+00,
         -4.5066e-01, -9.9215e-01,  6.6854e-01,  2.6551e+00, -5.5722e-01,
         -1.4943e-01,  1.6426e-01,  9.3014e-02, -2.3807e-02,  1.1743e-01,
          5.9497e-01, -5.4702e-01, -1.1583e-01, -3.9543e-01, -6.9911e-02,
         -1.7206e-01,  5.3656e-01,  1.4651e-02,  7.2275e-01,  1.4060e+00,
          6.4830e-02,  3.2214e-01, -1.5283e+00, -3.8673e-02,  3.2065e-01,
          2.8211e-01,  8.2399e-02,  3.1585e-01,  1.8444e-01, -2.8503e-01,
         -7.9938e-02,  1.4275e-02,  5.0370e-02,  1.8652e-01,  1.0076e-01,
          6.3129e-01,  1.8283e-03,  1.2335e-01,  3.9497e-01, -4.8332e-01,
         -2.4776e-01, -2.9341e-01, -2.0980e-02,  4.1338e-02,  6.8142e-01,
         -7.4257e-02, -8.6522e-02, -2.3070e-01, -2.2821e-01,  4.2811e-01,
         -2.4297e-01,  2.7460e-01,  2.3622e-01, -2.2467e-01,  1.3445e-01,
         -4.8159e-02, -4.1904e-01,  2.7477e-02, -1.5193e-01,  1.4119e-01,
          2.5216e-01, -2.0071e-01, -2.8297e-01,  3.0141e-02, -2.6372e-01,
         -9.4268e-02, -6.2481e-02, -2.7513e-01, -2.6647e-01, -6.1777e-02,
          3.3197e-01, -2.2905e-01,  2.2493e-01,  1.9721e-01, -6.6056e-02,
         -2.2298e-01, -5.9502e-02, -2.4916e-02,  2.5506e-01,  2.3258e-01,
         -1.7189e-01,  1.8722e-01, -1.7894e-01, -7.3950e-02, -7.7335e-02,
          2.1852e-01, -1.7011e-02,  1.6416e-01, -4.9676e-02,  3.1319e-01,
         -6.0744e-01,  4.7539e-01,  3.2661e-01,  4.8390e-01, -4.3771e-02,
          4.3741e-01,  2.5447e-01,  1.2084e-02, -1.3933e-01,  3.3585e-03,
          4.6632e-01, -2.8175e-01,  3.4952e-02, -4.8397e-02,  3.4664e-01,
          1.4557e-02,  2.3915e-01,  4.1223e-02,  1.0946e-01, -9.9704e-02,
         -1.5756e-01, -2.2257e-02, -1.7098e-01, -3.5791e-01, -9.9295e-03,
          2.5995e-01, -1.6974e-01,  1.3194e-01,  1.6126e-01,  1.2812e-01,
         -3.9907e-02, -3.1580e-02, -1.1801e-01,  1.1462e-01,  8.4274e-02,
          2.4345e-02, -7.5555e-02,  8.8800e-02,  1.0414e-01, -2.7365e-02,
          9.4048e-02,  1.9849e-01, -1.1554e-02, -1.5375e-01,  1.5950e-01,
         -5.1652e-02, -9.6243e-03, -4.3600e-02,  7.2956e-02, -3.2842e-02,
         -8.0295e-02, -9.6032e-02,  2.1800e-01,  1.4271e-01,  1.7104e-01,
         -2.1176e-01,  1.9270e-01, -1.6829e-01, -1.7550e-01,  2.3863e-01,
          4.1872e-02,  1.0359e-01, -1.7093e-02,  9.8061e-02, -1.7857e-01,
         -1.4417e-01]], device='cuda:0') tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
773000 特征值优化 tensor(0.9086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2611e+00,  2.6249e-01,  3.0720e-01, -9.8106e-01,  2.1742e+00,
         -4.6071e-01, -1.0754e+00,  6.7709e-01,  2.6522e+00, -5.2988e-01,
         -1.5193e-01,  1.8906e-01,  1.5338e-01, -9.0530e-03,  5.0287e-02,
          6.0030e-01, -5.4599e-01, -7.7248e-02, -3.8726e-01, -7.7915e-02,
         -1.8706e-01,  5.4275e-01,  1.9321e-02,  7.3448e-01,  1.4053e+00,
          4.2649e-02,  3.0235e-01, -1.5210e+00, -3.8640e-02,  3.1479e-01,
          2.7275e-01,  9.0130e-02,  2.9248e-01,  1.7928e-01, -2.9973e-01,
         -7.3572e-02,  1.7407e-02,  6.5219e-02,  1.7640e-01,  8.9338e-02,
          6.6389e-01,  2.6346e-03,  1.2179e-01,  3.9159e-01, -4.6817e-01,
         -2.6080e-01, -3.1061e-01,  1.4937e-03,  7.7182e-02,  6.9516e-01,
         -8.8582e-02, -8.2064e-02, -2.2710e-01, -2.2683e-01,  4.1203e-01,
         -2.2641e-01,  2.6529e-01,  2.1062e-01, -2.2443e-01,  1.4268e-01,
         -4.5809e-02, -4.2396e-01,  1.4779e-02, -1.4595e-01,  1.4802e-01,
          2.4251e-01, -2.1195e-01, -2.8287e-01,  2.6146e-02, -2.6265e-01,
         -8.5699e-02, -5.8155e-02, -2.6707e-01, -2.7029e-01, -7.6504e-02,
          3.3877e-01, -2.1075e-01,  2.2390e-01,  2.0488e-01, -6.5689e-02,
         -2.1638e-01, -6.4664e-02, -1.6214e-02,  2.5528e-01,  2.5265e-01,
         -1.6878e-01,  1.6203e-01, -1.4613e-01, -9.7528e-02, -9.2683e-02,
          2.1270e-01,  9.4310e-04,  1.4512e-01, -7.2764e-02,  3.2140e-01,
         -6.1136e-01,  4.7199e-01,  3.2022e-01,  4.5487e-01, -4.2259e-02,
          4.3295e-01,  2.3988e-01,  2.4850e-02, -1.4984e-01,  9.2939e-03,
          4.5519e-01, -2.9426e-01,  5.5108e-02, -8.7377e-02,  3.4024e-01,
          1.4491e-02,  2.3345e-01,  6.8294e-02,  9.0199e-02, -8.6188e-02,
         -1.6477e-01, -3.6920e-02, -1.8270e-01, -3.4961e-01, -3.6890e-03,
          2.4765e-01, -1.6256e-01,  1.4091e-01,  1.6565e-01,  1.2430e-01,
         -3.6292e-02, -3.8343e-02, -1.1749e-01,  1.2253e-01,  8.2177e-02,
          2.5488e-02, -7.5964e-02,  8.8801e-02,  1.1097e-01, -2.1614e-02,
          8.6638e-02,  1.9765e-01, -2.6649e-03, -1.4966e-01,  1.7127e-01,
         -6.7488e-02, -2.2419e-02, -4.5259e-02,  8.7057e-02, -4.5074e-02,
         -6.3714e-02, -1.0675e-01,  2.3066e-01,  1.5400e-01,  1.5766e-01,
         -2.1988e-01,  1.8303e-01, -1.5149e-01, -1.6084e-01,  2.7904e-01,
          3.2297e-02,  9.2271e-02, -8.7930e-03,  9.8483e-02, -1.7378e-01,
         -1.5104e-01]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
774000 特征值优化 tensor(0.9131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1739e+00,  2.9221e-01,  3.1610e-01, -9.8325e-01,  2.1752e+00,
         -4.7632e-01, -1.1082e+00,  6.6475e-01,  2.6320e+00, -5.0609e-01,
         -1.3336e-01,  1.8432e-01,  1.6833e-01,  3.7327e-03,  1.3986e-02,
          6.0271e-01, -5.4156e-01, -5.5550e-02, -3.7214e-01, -8.2756e-02,
         -2.0284e-01,  5.3563e-01,  8.4784e-03,  7.4407e-01,  1.4131e+00,
          2.8145e-02,  2.9929e-01, -1.5138e+00, -3.2061e-02,  3.1478e-01,
          2.6765e-01,  9.5110e-02,  2.8145e-01,  1.8640e-01, -3.0273e-01,
         -7.5329e-02,  1.2561e-02,  7.9936e-02,  1.8208e-01,  8.9995e-02,
          6.7975e-01,  3.5532e-03,  1.1788e-01,  3.8997e-01, -4.6476e-01,
         -2.5839e-01, -3.2781e-01,  1.4022e-02,  9.0732e-02,  6.9265e-01,
         -8.5059e-02, -8.0180e-02, -2.3508e-01, -2.2270e-01,  4.0303e-01,
         -2.1866e-01,  2.7142e-01,  2.1508e-01, -2.1499e-01,  1.4625e-01,
         -4.8598e-02, -4.2673e-01,  9.4745e-03, -1.3832e-01,  1.5723e-01,
          2.3796e-01, -2.3044e-01, -2.8091e-01,  1.2813e-02, -2.6279e-01,
         -7.7784e-02, -5.6008e-02, -2.6185e-01, -2.6887e-01, -8.7143e-02,
          3.4458e-01, -2.0147e-01,  2.2731e-01,  1.9256e-01, -6.4810e-02,
         -2.1257e-01, -6.7708e-02, -1.5254e-02,  2.5885e-01,  2.6226e-01,
         -1.7875e-01,  1.3824e-01, -1.3509e-01, -1.0425e-01, -7.3440e-02,
          2.1883e-01,  1.5313e-02,  1.2968e-01, -7.7577e-02,  3.2326e-01,
         -6.1356e-01,  4.8330e-01,  3.0165e-01,  4.5005e-01, -3.0211e-02,
          4.2819e-01,  2.3684e-01,  2.8047e-02, -1.5615e-01,  1.4505e-02,
          4.3226e-01, -2.8821e-01,  6.4300e-02, -1.2663e-01,  3.3938e-01,
          1.4096e-02,  2.3170e-01,  9.0476e-02,  8.3957e-02, -7.9870e-02,
         -1.6263e-01, -4.0352e-02, -1.8478e-01, -3.4370e-01,  1.2330e-03,
          2.3090e-01, -1.6070e-01,  1.4254e-01,  1.5836e-01,  1.1918e-01,
         -3.5815e-02, -4.0339e-02, -1.1273e-01,  1.2211e-01,  8.2217e-02,
          3.1977e-02, -7.3096e-02,  9.3763e-02,  1.1595e-01, -2.8928e-02,
          9.2868e-02,  2.0970e-01, -4.7460e-05, -1.4747e-01,  1.6073e-01,
         -7.1773e-02, -2.6410e-02, -5.0479e-02,  9.5416e-02, -6.0235e-02,
         -4.3460e-02, -1.1101e-01,  2.3839e-01,  1.5414e-01,  1.4959e-01,
         -2.3136e-01,  1.8115e-01, -1.5208e-01, -1.6169e-01,  2.7692e-01,
          3.0352e-02,  9.4863e-02, -9.6193e-03,  9.5641e-02, -1.7708e-01,
         -1.5923e-01]], device='cuda:0') tensor(0.2355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
775000 特征值优化 tensor(0.8997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1440e+00,  3.2838e-01,  3.4727e-01, -9.8805e-01,  2.2076e+00,
         -4.9513e-01, -1.1393e+00,  6.6441e-01,  2.6503e+00, -4.8510e-01,
         -1.1946e-01,  1.7636e-01,  1.9044e-01, -8.9719e-04, -2.4029e-02,
          5.8807e-01, -5.4888e-01, -3.2900e-02, -3.5920e-01, -8.2868e-02,
         -1.9650e-01,  5.4248e-01, -5.3935e-03,  7.5255e-01,  1.4125e+00,
          3.7154e-02,  2.9612e-01, -1.5279e+00, -3.8509e-02,  2.9060e-01,
          2.7603e-01,  8.7806e-02,  2.8077e-01,  2.0690e-01, -3.0131e-01,
         -5.9827e-02,  1.2463e-02,  8.7770e-02,  1.8317e-01,  9.2210e-02,
          6.7769e-01,  1.4465e-03,  1.2283e-01,  4.0311e-01, -4.4433e-01,
         -2.5957e-01, -3.4047e-01,  5.7736e-03,  8.4080e-02,  6.9076e-01,
         -9.1134e-02, -8.0149e-02, -2.4261e-01, -2.2135e-01,  3.9555e-01,
         -2.2971e-01,  2.3688e-01,  2.1612e-01, -2.2113e-01,  1.3165e-01,
         -4.0561e-02, -4.2571e-01, -2.3025e-03, -1.1402e-01,  1.6711e-01,
          2.4458e-01, -2.2664e-01, -2.8849e-01,  5.0000e-03, -2.6528e-01,
         -7.5789e-02, -5.3150e-02, -2.5425e-01, -2.8434e-01, -8.8858e-02,
          3.4237e-01, -1.7837e-01,  2.2965e-01,  1.7728e-01, -6.9598e-02,
         -2.0926e-01, -6.9872e-02, -3.9845e-03,  2.5565e-01,  2.6491e-01,
         -1.8631e-01,  1.2290e-01, -1.3539e-01, -9.6498e-02, -4.6368e-02,
          2.1197e-01,  2.8322e-02,  1.3586e-01, -6.4139e-02,  3.1849e-01,
         -6.2066e-01,  4.6185e-01,  2.8048e-01,  4.4837e-01, -2.1428e-02,
          4.5578e-01,  2.2878e-01,  2.8881e-02, -1.5927e-01,  1.4180e-02,
          4.2224e-01, -3.0202e-01,  7.8404e-02, -1.4271e-01,  3.4633e-01,
          1.4286e-02,  2.3659e-01,  1.0830e-01,  8.5410e-02, -8.3303e-02,
         -1.6392e-01, -4.6596e-02, -1.9634e-01, -3.3947e-01, -2.2625e-02,
          2.2080e-01, -1.7858e-01,  1.3628e-01,  1.5091e-01,  1.0872e-01,
         -2.8873e-02, -4.1692e-02, -1.0757e-01,  1.2948e-01,  8.5728e-02,
          3.4768e-02, -7.2435e-02,  9.2662e-02,  1.1657e-01, -2.1539e-02,
          9.7565e-02,  2.2112e-01,  1.1000e-02, -1.4070e-01,  1.4153e-01,
         -7.6535e-02, -3.1950e-02, -7.5685e-02,  1.1616e-01, -7.3887e-02,
         -3.3687e-02, -9.3246e-02,  2.3630e-01,  1.4587e-01,  1.5479e-01,
         -2.3504e-01,  1.6609e-01, -1.5925e-01, -1.6203e-01,  2.7871e-01,
          4.2201e-02,  8.6574e-02, -9.1824e-03,  9.8010e-02, -1.6769e-01,
         -1.5168e-01]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
776000 特征值优化 tensor(0.8967, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0853e+00,  3.4675e-01,  3.7522e-01, -9.9015e-01,  2.1956e+00,
         -5.1549e-01, -1.1596e+00,  6.5185e-01,  2.6470e+00, -4.7015e-01,
         -1.0006e-01,  1.7934e-01,  1.8988e-01,  2.5297e-03, -4.8478e-02,
          5.8817e-01, -5.4138e-01, -1.9027e-02, -3.5329e-01, -9.1260e-02,
         -2.2335e-01,  5.4947e-01, -8.6066e-03,  7.6908e-01,  1.4032e+00,
          1.6519e-02,  2.9425e-01, -1.5137e+00, -2.5460e-02,  2.8048e-01,
          2.9053e-01,  9.2672e-02,  2.7736e-01,  2.1126e-01, -3.0022e-01,
         -5.7682e-02,  2.1015e-02,  1.0244e-01,  1.8662e-01,  9.0556e-02,
          6.7090e-01,  1.3593e-03,  1.2316e-01,  4.0980e-01, -4.4089e-01,
         -2.5342e-01, -3.4450e-01,  1.2465e-02,  8.8668e-02,  6.8729e-01,
         -9.2514e-02, -7.2476e-02, -2.4503e-01, -2.0700e-01,  3.8705e-01,
         -2.2915e-01,  2.3485e-01,  2.1442e-01, -2.1966e-01,  1.3451e-01,
         -3.4159e-02, -4.2181e-01, -1.1210e-03, -1.0601e-01,  1.6620e-01,
          2.6060e-01, -2.3148e-01, -2.8029e-01,  6.6275e-03, -2.5472e-01,
         -7.6422e-02, -5.6765e-02, -2.5115e-01, -2.8636e-01, -9.8935e-02,
          3.5843e-01, -1.6637e-01,  2.1795e-01,  1.7890e-01, -8.0067e-02,
         -2.2078e-01, -6.5328e-02,  3.4697e-03,  2.5068e-01,  2.6809e-01,
         -2.0702e-01,  1.0034e-01, -1.3597e-01, -1.1737e-01, -3.5688e-02,
          2.0740e-01,  1.6104e-02,  1.3375e-01, -7.3937e-02,  3.1714e-01,
         -6.2729e-01,  4.7511e-01,  2.7449e-01,  4.2854e-01, -1.8164e-02,
          4.5982e-01,  2.3245e-01,  3.2743e-02, -1.6036e-01,  5.0171e-03,
          3.9647e-01, -2.8076e-01,  8.5096e-02, -1.5181e-01,  3.4541e-01,
         -7.1144e-03,  2.3956e-01,  1.1383e-01,  8.4348e-02, -7.7072e-02,
         -1.6253e-01, -5.3684e-02, -1.8758e-01, -3.4657e-01, -2.1713e-02,
          2.1501e-01, -1.8182e-01,  1.3163e-01,  1.5429e-01,  1.0765e-01,
         -2.6136e-02, -5.0552e-02, -1.0050e-01,  1.2213e-01,  8.5120e-02,
          3.6375e-02, -6.1801e-02,  9.3699e-02,  1.2240e-01, -1.6111e-02,
          8.2208e-02,  2.1743e-01,  8.3349e-03, -1.4127e-01,  1.6203e-01,
         -9.3381e-02, -4.5198e-02, -6.4029e-02,  1.1155e-01, -7.1460e-02,
         -2.7267e-02, -9.7098e-02,  2.3310e-01,  1.4473e-01,  1.6218e-01,
         -2.1785e-01,  1.5895e-01, -1.7545e-01, -1.6935e-01,  2.8431e-01,
          3.9343e-02,  7.4337e-02, -6.2740e-03,  9.0417e-02, -1.7561e-01,
         -1.6766e-01]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
777000 特征值优化 tensor(0.8993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0213e+00,  3.5087e-01,  3.8333e-01, -9.8696e-01,  2.2228e+00,
         -5.3445e-01, -1.1549e+00,  6.2409e-01,  2.6457e+00, -4.6678e-01,
         -8.0346e-02,  1.8619e-01,  1.6932e-01,  5.9229e-03, -6.8208e-02,
          5.9974e-01, -5.4652e-01, -1.0070e-02, -3.5394e-01, -9.3418e-02,
         -2.4004e-01,  5.5216e-01, -9.8107e-03,  7.6870e-01,  1.3964e+00,
          2.9019e-02,  3.1111e-01, -1.5172e+00, -1.1443e-02,  2.8518e-01,
          2.8443e-01,  9.5799e-02,  2.7301e-01,  2.0378e-01, -2.9117e-01,
         -4.7601e-02,  3.1600e-02,  1.2087e-01,  1.8812e-01,  9.0506e-02,
          6.8121e-01,  2.1837e-03,  1.2314e-01,  4.1621e-01, -4.4345e-01,
         -2.6136e-01, -3.5748e-01,  2.0153e-02,  1.1246e-01,  6.9018e-01,
         -8.5886e-02, -7.1392e-02, -2.4556e-01, -2.1144e-01,  3.8737e-01,
         -2.3369e-01,  2.4064e-01,  2.1886e-01, -2.3302e-01,  1.1963e-01,
         -4.3742e-02, -4.2473e-01, -1.9117e-02, -9.4483e-02,  1.6289e-01,
          2.6162e-01, -2.3167e-01, -2.7525e-01,  8.7941e-03, -2.5114e-01,
         -7.4876e-02, -5.8625e-02, -2.4558e-01, -2.8259e-01, -1.0237e-01,
          3.5047e-01, -1.6452e-01,  2.1537e-01,  1.7310e-01, -6.2671e-02,
         -2.1017e-01, -6.7966e-02,  2.0047e-03,  2.4512e-01,  2.8098e-01,
         -1.9227e-01,  7.4859e-02, -1.3465e-01, -1.3120e-01, -5.5092e-02,
          2.1033e-01,  8.4590e-03,  1.5371e-01, -8.2370e-02,  3.1521e-01,
         -6.2984e-01,  4.7813e-01,  2.7885e-01,  4.1004e-01, -2.6847e-02,
          4.5671e-01,  2.3790e-01,  4.2096e-02, -1.7143e-01,  6.9283e-03,
          3.7149e-01, -2.7357e-01,  8.3883e-02, -1.5468e-01,  3.3477e-01,
         -9.8143e-03,  2.3801e-01,  1.1818e-01,  8.5503e-02, -8.0073e-02,
         -1.6516e-01, -5.7199e-02, -1.7905e-01, -3.4565e-01, -1.7873e-02,
          2.0835e-01, -1.8621e-01,  1.3715e-01,  1.5324e-01,  1.0569e-01,
         -3.0931e-02, -4.6518e-02, -1.0131e-01,  1.2317e-01,  8.1012e-02,
          4.1254e-02, -6.5421e-02,  9.9914e-02,  1.1872e-01, -1.3900e-02,
          7.9790e-02,  2.3154e-01,  1.0139e-02, -1.4069e-01,  1.4207e-01,
         -8.0910e-02, -6.2109e-02, -7.2472e-02,  1.2165e-01, -7.5464e-02,
          3.0765e-03, -9.4361e-02,  2.3057e-01,  1.6285e-01,  1.5311e-01,
         -2.2607e-01,  1.6456e-01, -1.6540e-01, -1.6649e-01,  2.7205e-01,
          3.8792e-02,  5.2283e-02, -4.8789e-03,  9.0007e-02, -1.8113e-01,
         -1.7449e-01]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
778000 特征值优化 tensor(0.9095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.7032e-01,  3.4281e-01,  4.0019e-01, -9.7702e-01,  2.2266e+00,
         -5.5660e-01, -1.1559e+00,  6.3333e-01,  2.6144e+00, -4.4756e-01,
         -7.2135e-02,  1.7268e-01,  1.5787e-01,  3.3829e-02, -8.5611e-02,
          6.2229e-01, -5.4121e-01, -1.4115e-02, -3.5492e-01, -9.4672e-02,
         -2.5076e-01,  5.6025e-01, -2.2242e-02,  7.7783e-01,  1.3833e+00,
          3.4561e-02,  3.0947e-01, -1.5168e+00, -2.3034e-02,  3.0096e-01,
          2.9312e-01,  1.0566e-01,  2.5652e-01,  2.0254e-01, -2.8725e-01,
         -3.9828e-02,  9.2064e-03,  1.2092e-01,  1.8688e-01,  8.1089e-02,
          6.8771e-01,  8.0788e-04,  1.2198e-01,  4.1931e-01, -4.4459e-01,
         -2.5951e-01, -3.6712e-01,  3.0243e-02,  1.2732e-01,  6.9694e-01,
         -8.3775e-02, -6.6283e-02, -2.4397e-01, -2.0814e-01,  3.8357e-01,
         -2.3291e-01,  2.4647e-01,  2.2055e-01, -2.4409e-01,  1.0960e-01,
         -5.0798e-02, -4.1906e-01, -2.8390e-02, -8.4781e-02,  1.6293e-01,
          2.4996e-01, -2.4349e-01, -2.7068e-01,  1.3644e-02, -2.4871e-01,
         -7.3605e-02, -5.3640e-02, -2.4900e-01, -2.8712e-01, -1.0644e-01,
          3.4711e-01, -1.4739e-01,  2.1666e-01,  1.7577e-01, -6.3371e-02,
         -2.1265e-01, -6.6351e-02,  1.4258e-03,  2.2689e-01,  2.8737e-01,
         -1.7595e-01,  7.5605e-02, -1.2889e-01, -1.3499e-01, -5.3160e-02,
          2.2952e-01,  1.8136e-02,  1.6359e-01, -9.2022e-02,  3.1618e-01,
         -6.3518e-01,  4.9308e-01,  2.7044e-01,  4.1133e-01, -3.3212e-02,
          4.3645e-01,  2.2895e-01,  4.7939e-02, -1.8119e-01, -2.7299e-03,
          3.6320e-01, -2.6230e-01,  9.0617e-02, -1.6284e-01,  3.3243e-01,
         -1.3583e-02,  2.3874e-01,  1.1159e-01,  7.7418e-02, -6.9186e-02,
         -1.6533e-01, -5.5010e-02, -1.7091e-01, -3.3812e-01, -3.5047e-02,
          1.9688e-01, -1.6363e-01,  1.3787e-01,  1.5589e-01,  1.0641e-01,
         -2.9224e-02, -5.0536e-02, -1.0203e-01,  1.3072e-01,  8.3697e-02,
          4.2423e-02, -6.7096e-02,  1.0053e-01,  1.2237e-01, -1.4579e-02,
          7.4392e-02,  2.3519e-01,  1.1680e-02, -1.5518e-01,  1.3658e-01,
         -8.3750e-02, -3.3187e-02, -6.9528e-02,  1.2499e-01, -8.2543e-02,
          5.3668e-03, -9.6782e-02,  2.3324e-01,  1.5673e-01,  1.5253e-01,
         -2.2583e-01,  1.5540e-01, -1.7783e-01, -1.6223e-01,  2.8267e-01,
          3.4758e-02,  4.3078e-02,  3.7812e-03,  9.2326e-02, -1.7733e-01,
         -1.7252e-01]], device='cuda:0') tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
779000 特征值优化 tensor(0.8969, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.4585e-01,  3.5545e-01,  4.1565e-01, -9.9020e-01,  2.2596e+00,
         -5.4408e-01, -1.1525e+00,  6.2660e-01,  2.6113e+00, -4.5280e-01,
         -3.6742e-02,  1.5592e-01,  1.7715e-01,  2.1617e-02, -1.0371e-01,
          6.1221e-01, -5.3929e-01, -3.5595e-02, -3.4268e-01, -9.4422e-02,
         -2.5186e-01,  5.6216e-01, -1.4532e-02,  7.8669e-01,  1.3838e+00,
          4.5729e-02,  3.0387e-01, -1.5257e+00, -4.2107e-02,  2.9541e-01,
          3.0221e-01,  1.0608e-01,  2.4120e-01,  2.2278e-01, -2.7879e-01,
         -2.6975e-02,  8.2886e-03,  1.4117e-01,  1.9806e-01,  6.6165e-02,
          6.8427e-01,  1.4723e-03,  1.2278e-01,  4.1884e-01, -4.5069e-01,
         -2.5666e-01, -3.7365e-01,  3.4055e-02,  1.2524e-01,  7.0087e-01,
         -8.7180e-02, -7.1800e-02, -2.4108e-01, -2.1112e-01,  3.8636e-01,
         -2.4017e-01,  1.9888e-01,  2.2458e-01, -2.6608e-01,  1.0632e-01,
         -4.1828e-02, -4.0401e-01, -4.0277e-02, -7.9366e-02,  1.5142e-01,
          2.4379e-01, -2.3067e-01, -2.7004e-01,  2.2835e-02, -2.5284e-01,
         -7.3184e-02, -4.8581e-02, -2.5003e-01, -2.8108e-01, -1.2034e-01,
          3.5064e-01, -1.4721e-01,  2.2923e-01,  1.8532e-01, -7.3043e-02,
         -2.1423e-01, -6.6407e-02,  1.2918e-02,  2.6016e-01,  2.7794e-01,
         -1.8641e-01,  7.2424e-02, -1.2894e-01, -1.3416e-01, -2.9635e-02,
          2.2074e-01,  1.7505e-02,  1.7836e-01, -1.0686e-01,  3.1830e-01,
         -6.3815e-01,  4.7926e-01,  2.9030e-01,  3.8085e-01, -4.2090e-02,
          4.4751e-01,  2.2402e-01,  4.8863e-02, -1.7966e-01, -1.3615e-02,
          3.6419e-01, -2.6691e-01,  8.8388e-02, -1.7051e-01,  3.2489e-01,
         -1.5972e-02,  2.3139e-01,  1.1154e-01,  7.0115e-02, -7.6763e-02,
         -1.7838e-01, -4.5250e-02, -1.8547e-01, -3.4112e-01, -2.8327e-02,
          1.9710e-01, -1.8070e-01,  1.4381e-01,  1.5001e-01,  1.0236e-01,
         -3.0386e-02, -4.6788e-02, -8.2259e-02,  1.2084e-01,  8.1286e-02,
          4.3398e-02, -7.6396e-02,  1.0175e-01,  1.1925e-01, -5.4097e-03,
          7.9063e-02,  2.1798e-01,  2.9548e-02, -1.5269e-01,  1.3739e-01,
         -9.9100e-02, -4.8532e-02, -6.9435e-02,  1.3272e-01, -7.6108e-02,
          7.5013e-03, -9.5696e-02,  2.1908e-01,  1.6352e-01,  1.6571e-01,
         -2.2800e-01,  1.2935e-01, -1.8126e-01, -1.6226e-01,  2.9593e-01,
          3.9733e-02,  4.9716e-02,  7.8735e-03,  8.2955e-02, -1.8413e-01,
         -1.5612e-01]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
780000 特征值优化 tensor(0.8891, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.1115e-01,  3.6866e-01,  4.4123e-01, -9.9507e-01,  2.2676e+00,
         -5.6139e-01, -1.1555e+00,  6.5412e-01,  2.6181e+00, -4.6277e-01,
         -5.0178e-02,  1.5710e-01,  1.9866e-01, -1.5552e-02, -9.1447e-02,
          6.1336e-01, -5.0762e-01, -5.6232e-02, -3.2621e-01, -1.1752e-01,
         -2.5519e-01,  5.5195e-01, -1.2979e-02,  7.7127e-01,  1.3965e+00,
          5.8931e-03,  3.2784e-01, -1.5497e+00, -3.9425e-02,  2.7267e-01,
          3.0490e-01,  1.3450e-01,  2.3035e-01,  2.0705e-01, -2.4197e-01,
         -1.6864e-02,  2.2252e-02,  1.3364e-01,  2.0048e-01,  5.9854e-02,
          6.6611e-01, -7.2574e-03,  1.2918e-01,  4.2729e-01, -4.5523e-01,
         -2.3476e-01, -3.8536e-01,  5.8916e-02,  1.1978e-01,  7.0580e-01,
         -8.5093e-02, -7.0816e-02, -2.2802e-01, -2.0992e-01,  3.7822e-01,
         -2.3186e-01,  2.0328e-01,  2.1971e-01, -2.8770e-01,  9.4368e-02,
         -5.6876e-02, -4.1212e-01, -6.1984e-02, -9.1047e-02,  1.4023e-01,
          2.4200e-01, -2.3000e-01, -2.6480e-01,  2.2253e-02, -2.7115e-01,
         -5.8178e-02, -5.3249e-02, -2.4942e-01, -2.9271e-01, -1.1721e-01,
          3.5278e-01, -1.4485e-01,  2.3543e-01,  1.7552e-01, -8.9126e-02,
         -2.2484e-01, -5.8747e-02,  1.4145e-02,  2.2417e-01,  2.7859e-01,
         -1.9441e-01,  7.5269e-02, -1.3840e-01, -1.8816e-01, -2.3419e-02,
          2.2225e-01, -2.5349e-03,  1.5579e-01, -9.7177e-02,  3.1752e-01,
         -6.3825e-01,  4.9041e-01,  2.7996e-01,  3.8212e-01,  9.3432e-03,
          4.1607e-01,  2.2599e-01,  4.6563e-02, -1.7915e-01, -3.5357e-02,
          3.7869e-01, -2.7813e-01,  8.9852e-02, -1.7350e-01,  3.0576e-01,
         -4.6470e-02,  2.5186e-01,  1.1301e-01,  7.0368e-02, -7.1737e-02,
         -1.5620e-01, -3.8594e-02, -1.9362e-01, -3.5134e-01, -1.8429e-02,
          2.1326e-01, -1.7381e-01,  1.5639e-01,  1.4070e-01,  8.8679e-02,
         -3.4884e-02, -5.8554e-02, -9.7775e-02,  1.3769e-01,  8.2054e-02,
          4.6864e-02, -7.9538e-02,  1.0665e-01,  1.1689e-01, -6.2173e-03,
          7.7511e-02,  1.9983e-01,  2.7320e-02, -1.7078e-01,  1.3824e-01,
         -1.0207e-01, -2.6267e-02, -3.4588e-02,  1.1299e-01, -6.0598e-02,
          5.6428e-03, -9.6154e-02,  2.0216e-01,  1.4561e-01,  1.3224e-01,
         -2.3167e-01,  1.2816e-01, -1.8594e-01, -1.6248e-01,  2.8372e-01,
          2.2388e-02,  2.7545e-02, -1.7969e-02,  8.7159e-02, -1.8536e-01,
         -1.6690e-01]], device='cuda:0') tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
781000 正交保障 tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.9253e-01,  3.7696e-01,  4.2346e-01, -9.9551e-01,  2.3026e+00,
         -5.8316e-01, -1.1376e+00,  6.8923e-01,  2.6206e+00, -4.8439e-01,
         -9.2920e-02,  1.6031e-01,  1.7904e-01, -1.8000e-02, -6.8172e-02,
          6.3341e-01, -5.3712e-01, -8.5951e-02, -3.2167e-01, -1.4793e-01,
         -2.2850e-01,  5.5214e-01, -1.5515e-02,  7.4929e-01,  1.4061e+00,
          7.0596e-03,  3.2210e-01, -1.5561e+00, -2.4289e-02,  2.6089e-01,
          3.2011e-01,  1.2363e-01,  2.5476e-01,  1.8759e-01, -2.2540e-01,
         -5.1572e-03,  2.7779e-02,  1.3443e-01,  1.7931e-01,  6.5494e-02,
          6.6260e-01, -6.1950e-03,  1.2983e-01,  4.2807e-01, -4.4202e-01,
         -2.5322e-01, -3.7733e-01,  6.1235e-02,  1.0053e-01,  6.9536e-01,
         -9.2533e-02, -9.2373e-02, -2.2222e-01, -2.1570e-01,  3.8417e-01,
         -2.5435e-01,  2.1833e-01,  2.0304e-01, -2.9962e-01,  8.9979e-02,
         -4.1146e-02, -4.4485e-01, -4.6809e-02, -8.2994e-02,  1.4796e-01,
          2.4804e-01, -2.1846e-01, -2.7715e-01,  1.3687e-02, -2.7744e-01,
         -6.8717e-02, -7.6522e-02, -2.3218e-01, -3.0096e-01, -9.7362e-02,
          3.4391e-01, -1.3329e-01,  2.2179e-01,  1.6980e-01, -7.4660e-02,
         -2.1080e-01, -5.6041e-02,  1.7732e-02,  2.5330e-01,  2.9333e-01,
         -1.6887e-01,  6.1929e-02, -1.5882e-01, -1.9125e-01, -4.8984e-02,
          2.4641e-01,  1.2935e-02,  1.8594e-01, -9.4552e-02,  3.1249e-01,
         -6.3115e-01,  5.0224e-01,  2.6209e-01,  3.9602e-01, -2.4272e-02,
          4.0306e-01,  2.1765e-01,  4.3664e-02, -1.7345e-01, -8.8293e-04,
          3.9055e-01, -2.7483e-01,  7.5346e-02, -1.5856e-01,  2.9804e-01,
         -5.9668e-02,  2.5101e-01,  9.4851e-02,  7.3733e-02, -5.3013e-02,
         -1.6970e-01, -4.9477e-02, -1.6683e-01, -3.5871e-01, -1.9957e-02,
          2.1388e-01, -1.5630e-01,  1.2924e-01,  1.5020e-01,  8.2845e-02,
         -3.6761e-02, -4.9157e-02, -1.0807e-01,  1.4726e-01,  8.3940e-02,
          5.0653e-02, -7.3108e-02,  1.0629e-01,  9.9657e-02, -1.7843e-02,
          7.4936e-02,  2.1987e-01,  1.3947e-02, -1.8942e-01,  1.3917e-01,
         -8.6166e-02, -2.8047e-02, -5.9660e-02,  1.1323e-01, -8.3210e-02,
          8.6442e-03, -7.9467e-02,  2.0271e-01,  1.5944e-01,  1.1541e-01,
         -2.2450e-01,  1.3540e-01, -1.7776e-01, -1.6328e-01,  2.6690e-01,
          1.6282e-02,  1.9073e-02, -3.3363e-02,  5.8639e-02, -2.0261e-01,
         -1.9605e-01]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
782000 特征值优化 tensor(0.9016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.0108e-01,  3.8563e-01,  3.9709e-01, -9.8787e-01,  2.3095e+00,
         -5.8715e-01, -1.1278e+00,  6.9819e-01,  2.6280e+00, -4.8359e-01,
         -9.7609e-02,  1.8421e-01,  1.5236e-01,  9.9118e-03, -5.2765e-02,
          6.3033e-01, -5.3331e-01, -1.1306e-01, -3.1308e-01, -1.3921e-01,
         -2.4111e-01,  5.6175e-01, -9.9076e-03,  7.4750e-01,  1.4061e+00,
          3.0191e-03,  3.2009e-01, -1.5575e+00, -3.6154e-02,  2.5905e-01,
          3.0528e-01,  1.3254e-01,  2.4844e-01,  2.0525e-01, -2.2120e-01,
         -2.6972e-03,  1.1478e-02,  1.3467e-01,  1.8125e-01,  5.7678e-02,
          6.6396e-01, -6.0137e-03,  1.2885e-01,  4.1928e-01, -4.2909e-01,
         -2.6700e-01, -3.8495e-01,  5.3042e-02,  1.1534e-01,  6.9185e-01,
         -9.1199e-02, -9.5043e-02, -2.2567e-01, -2.1412e-01,  3.7216e-01,
         -2.5698e-01,  2.2084e-01,  2.0459e-01, -2.9285e-01,  8.4477e-02,
         -5.1308e-02, -4.4859e-01, -6.3348e-02, -8.9074e-02,  1.3945e-01,
          2.3390e-01, -2.3627e-01, -2.6818e-01,  2.8223e-02, -2.8081e-01,
         -7.4433e-02, -7.2360e-02, -2.3428e-01, -2.9296e-01, -9.9257e-02,
          3.3477e-01, -1.4301e-01,  2.2952e-01,  1.7464e-01, -7.9257e-02,
         -2.1170e-01, -5.8392e-02,  1.7630e-02,  2.5216e-01,  2.8615e-01,
         -1.6684e-01,  7.8820e-02, -1.5276e-01, -1.9483e-01, -3.2736e-02,
          2.5377e-01,  1.0296e-03,  1.8906e-01, -9.6857e-02,  3.2049e-01,
         -6.2800e-01,  4.9831e-01,  2.6179e-01,  4.3638e-01, -1.2704e-02,
          4.1308e-01,  2.1079e-01,  2.3474e-02, -1.6556e-01,  1.1578e-02,
          4.0851e-01, -2.7225e-01,  7.7241e-02, -1.3568e-01,  2.9438e-01,
         -5.6422e-02,  2.4582e-01,  1.0155e-01,  7.9699e-02, -5.2058e-02,
         -1.6972e-01, -3.4453e-02, -1.6712e-01, -3.4736e-01, -2.7329e-02,
          2.1286e-01, -1.6030e-01,  1.3570e-01,  1.5760e-01,  8.7159e-02,
         -3.8698e-02, -5.1237e-02, -1.0124e-01,  1.4686e-01,  8.5416e-02,
          5.4077e-02, -7.4222e-02,  1.0155e-01,  1.0507e-01, -1.9786e-02,
          6.7626e-02,  1.9370e-01,  3.0728e-02, -1.8293e-01,  1.5122e-01,
         -8.8043e-02, -2.3797e-02, -5.9045e-02,  1.1172e-01, -8.1762e-02,
         -1.1751e-03, -8.6141e-02,  2.0628e-01,  1.5994e-01,  1.1486e-01,
         -2.2667e-01,  1.3368e-01, -1.8282e-01, -1.6397e-01,  2.6894e-01,
          1.3129e-02,  2.8155e-02, -2.6169e-02,  6.3692e-02, -1.9350e-01,
         -1.8824e-01]], device='cuda:0') tensor(0.2103, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
783000 特征值优化 tensor(0.9384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.8585e-01,  4.1059e-01,  3.9696e-01, -9.9905e-01,  2.3224e+00,
         -5.7431e-01, -1.1112e+00,  6.9956e-01,  2.6318e+00, -4.9326e-01,
         -1.0484e-01,  1.5858e-01,  1.6134e-01,  5.2337e-04, -4.5809e-02,
          6.1610e-01, -5.2762e-01, -1.1153e-01, -3.0877e-01, -1.3455e-01,
         -2.3376e-01,  5.5630e-01, -2.2577e-02,  7.5091e-01,  1.4065e+00,
          2.0129e-02,  3.1432e-01, -1.5598e+00, -5.2085e-02,  2.4092e-01,
          3.0179e-01,  1.3223e-01,  2.4885e-01,  2.1556e-01, -2.1357e-01,
         -9.7823e-03,  8.3725e-03,  1.4594e-01,  1.7592e-01,  3.8916e-02,
          6.7011e-01, -8.0414e-03,  1.3345e-01,  4.1426e-01, -4.1592e-01,
         -2.7486e-01, -3.7707e-01,  5.0278e-02,  1.1746e-01,  6.7172e-01,
         -9.3506e-02, -8.6259e-02, -2.3007e-01, -2.2248e-01,  3.7464e-01,
         -2.5198e-01,  2.0309e-01,  2.1086e-01, -2.8923e-01,  9.6041e-02,
         -3.1330e-02, -4.5054e-01, -7.2363e-02, -9.3972e-02,  1.3343e-01,
          2.1855e-01, -2.2759e-01, -2.5779e-01,  3.2598e-02, -2.7907e-01,
         -7.0738e-02, -6.7816e-02, -2.4275e-01, -2.9023e-01, -1.1098e-01,
          3.4118e-01, -1.4749e-01,  2.3282e-01,  1.7128e-01, -7.9280e-02,
         -2.1576e-01, -5.6343e-02,  2.0564e-02,  2.6164e-01,  2.7712e-01,
         -1.7337e-01,  8.7476e-02, -1.5412e-01, -1.7774e-01, -2.1765e-02,
          2.4848e-01, -6.5181e-03,  1.7980e-01, -1.1532e-01,  3.2413e-01,
         -6.2524e-01,  5.0175e-01,  2.6518e-01,  4.1836e-01, -4.8097e-03,
          4.2750e-01,  2.0658e-01,  2.7274e-02, -1.6989e-01,  1.2544e-03,
          4.3203e-01, -2.8264e-01,  7.4774e-02, -1.3238e-01,  2.9344e-01,
         -5.7670e-02,  2.4948e-01,  9.9765e-02,  7.4260e-02, -5.0424e-02,
         -1.7188e-01, -3.5286e-02, -1.7947e-01, -3.4707e-01, -1.9111e-02,
          2.1840e-01, -1.7600e-01,  1.4910e-01,  1.5375e-01,  8.9135e-02,
         -3.7583e-02, -5.0548e-02, -1.0207e-01,  1.4117e-01,  8.9319e-02,
          6.7948e-02, -8.4148e-02,  1.0100e-01,  1.1262e-01, -1.7859e-02,
          7.7711e-02,  1.8676e-01,  2.9341e-02, -1.7710e-01,  1.5660e-01,
         -9.4261e-02, -2.7772e-02, -5.7310e-02,  1.0864e-01, -6.7799e-02,
         -2.4923e-03, -9.2190e-02,  1.9103e-01,  1.5729e-01,  1.2170e-01,
         -2.3610e-01,  1.2279e-01, -1.7554e-01, -1.6074e-01,  2.8102e-01,
          1.1404e-02,  3.9792e-02, -2.6907e-02,  5.5129e-02, -1.9097e-01,
         -1.7325e-01]], device='cuda:0') tensor(0.2088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
784000 特征值优化 tensor(0.9099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8700,  0.4025,  0.3806, -0.9946,  2.3324, -0.5775, -1.1062,  0.6979,
          2.6307, -0.4917, -0.1284,  0.1747,  0.1458, -0.0132, -0.0533,  0.6301,
         -0.5367, -0.1045, -0.3116, -0.1371, -0.2246,  0.5584, -0.0182,  0.7571,
          1.4155,  0.0144,  0.3361, -1.5592, -0.0462,  0.2323,  0.3096,  0.1258,
          0.2582,  0.2120, -0.2187, -0.0068,  0.0306,  0.1457,  0.1713,  0.0505,
          0.6637, -0.0083,  0.1332,  0.4088, -0.4123, -0.2738, -0.3656,  0.0362,
          0.1094,  0.6754, -0.0981, -0.0952, -0.2268, -0.2126,  0.3756, -0.2595,
          0.2073,  0.2038, -0.2805,  0.0972, -0.0353, -0.4528, -0.0515, -0.0999,
          0.1406,  0.2374, -0.2216, -0.2636,  0.0215, -0.2812, -0.0753, -0.0735,
         -0.2384, -0.2928, -0.0983,  0.3338, -0.1499,  0.2236,  0.1754, -0.0797,
         -0.2100, -0.0547,  0.0101,  0.2686,  0.2809, -0.1674,  0.0933, -0.1554,
         -0.1800, -0.0404,  0.2559, -0.0107,  0.1907, -0.1053,  0.3235, -0.6204,
          0.5008,  0.2639,  0.4108, -0.0277,  0.4086,  0.2058,  0.0218, -0.1658,
          0.0062,  0.4196, -0.2807,  0.0682, -0.1269,  0.2866, -0.0612,  0.2504,
          0.0896,  0.0750, -0.0494, -0.1631, -0.0428, -0.1660, -0.3495, -0.0128,
          0.2140, -0.1721,  0.1408,  0.1528,  0.0951, -0.0328, -0.0531, -0.1010,
          0.1364,  0.0880,  0.0652, -0.0774,  0.1033,  0.1095, -0.0182,  0.0747,
          0.2009,  0.0273, -0.1910,  0.1412, -0.0916, -0.0274, -0.0544,  0.1051,
         -0.0711, -0.0070, -0.1009,  0.2011,  0.1570,  0.1264, -0.2373,  0.1280,
         -0.1743, -0.1633,  0.2736,  0.0115,  0.0371, -0.0318,  0.0575, -0.1945,
         -0.1805]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
785000 特征值优化 tensor(0.9537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.7341e-01,  4.1107e-01,  3.7456e-01, -1.0013e+00,  2.3697e+00,
         -5.7059e-01, -1.1045e+00,  7.0818e-01,  2.6383e+00, -4.9673e-01,
         -1.2922e-01,  1.7128e-01,  1.4634e-01,  1.4415e-02, -5.4805e-02,
          6.2731e-01, -5.3831e-01, -1.2413e-01, -3.0121e-01, -1.2336e-01,
         -2.3553e-01,  5.5514e-01, -3.0358e-02,  7.4709e-01,  1.4148e+00,
          1.9693e-02,  3.2118e-01, -1.5570e+00, -5.8893e-02,  2.2047e-01,
          2.9340e-01,  1.2503e-01,  2.5220e-01,  2.2730e-01, -2.2010e-01,
         -7.2132e-03, -1.4335e-03,  1.4522e-01,  1.7614e-01,  3.1505e-02,
          6.7071e-01, -9.0190e-03,  1.3102e-01,  4.0941e-01, -4.0034e-01,
         -2.8149e-01, -3.6373e-01,  3.7802e-02,  1.1837e-01,  6.7306e-01,
         -9.7668e-02, -9.5307e-02, -2.2546e-01, -2.1947e-01,  3.6973e-01,
         -2.4761e-01,  1.9613e-01,  2.1534e-01, -2.8268e-01,  9.7849e-02,
         -2.7082e-02, -4.6023e-01, -6.6075e-02, -9.9870e-02,  1.2652e-01,
          2.2745e-01, -2.2671e-01, -2.5869e-01,  2.9475e-02, -2.8452e-01,
         -7.4060e-02, -6.4611e-02, -2.4145e-01, -2.9154e-01, -1.0318e-01,
          3.3883e-01, -1.5624e-01,  2.4259e-01,  1.7969e-01, -8.2620e-02,
         -2.1505e-01, -5.6863e-02,  1.3087e-02,  2.7774e-01,  2.6756e-01,
         -1.7992e-01,  8.8919e-02, -1.4541e-01, -1.7534e-01, -1.9164e-02,
          2.5469e-01, -4.4640e-03,  1.7641e-01, -1.1368e-01,  3.2337e-01,
         -6.1899e-01,  4.8686e-01,  2.5906e-01,  4.3222e-01, -9.4110e-03,
          4.2626e-01,  2.0157e-01,  2.0627e-02, -1.6623e-01,  7.2473e-03,
          4.2827e-01, -2.8701e-01,  6.3957e-02, -1.2083e-01,  2.9499e-01,
         -5.6303e-02,  2.4736e-01,  1.0583e-01,  7.6598e-02, -5.7273e-02,
         -1.7734e-01, -2.6807e-02, -1.7881e-01, -3.5017e-01, -1.1553e-02,
          2.2382e-01, -1.7671e-01,  1.5100e-01,  1.6044e-01,  9.0813e-02,
         -3.7786e-02, -4.6452e-02, -9.8240e-02,  1.4079e-01,  9.3003e-02,
          6.7449e-02, -8.4951e-02,  9.9588e-02,  1.0961e-01, -1.6820e-02,
          6.6681e-02,  1.7954e-01,  3.0682e-02, -1.7298e-01,  1.5042e-01,
         -9.6181e-02, -2.8024e-02, -4.9887e-02,  1.1198e-01, -8.2208e-02,
         -3.4468e-03, -9.7972e-02,  1.9040e-01,  1.5612e-01,  1.2868e-01,
         -2.3733e-01,  1.2356e-01, -1.7124e-01, -1.6230e-01,  2.7652e-01,
          1.4325e-02,  4.2990e-02, -2.9337e-02,  6.1013e-02, -1.9037e-01,
         -1.7269e-01]], device='cuda:0') tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
786000 特征值优化 tensor(0.9076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.5379e-01,  4.2329e-01,  3.6571e-01, -9.9315e-01,  2.3604e+00,
         -5.7574e-01, -1.1179e+00,  7.0599e-01,  2.6350e+00, -4.8785e-01,
         -1.4059e-01,  1.6295e-01,  1.4488e-01, -1.1896e-02, -4.7587e-02,
          6.3338e-01, -5.5313e-01, -1.1007e-01, -3.0585e-01, -1.2562e-01,
         -2.2228e-01,  5.5653e-01, -2.5796e-02,  7.4511e-01,  1.4208e+00,
          9.3694e-03,  3.3870e-01, -1.5639e+00, -4.4446e-02,  2.2266e-01,
          3.0133e-01,  1.3042e-01,  2.8338e-01,  2.1377e-01, -2.1617e-01,
         -1.7098e-02,  3.1456e-02,  1.4942e-01,  1.6705e-01,  4.7516e-02,
          6.6216e-01, -6.6622e-03,  1.3097e-01,  4.0469e-01, -3.9998e-01,
         -2.7331e-01, -3.6266e-01,  3.8708e-02,  1.0991e-01,  6.6027e-01,
         -9.7188e-02, -9.5445e-02, -2.2677e-01, -2.1152e-01,  3.7039e-01,
         -2.4611e-01,  2.0999e-01,  2.0036e-01, -2.7082e-01,  1.0555e-01,
         -3.8054e-02, -4.5889e-01, -5.1510e-02, -1.0183e-01,  1.3185e-01,
          2.4104e-01, -2.2488e-01, -2.6596e-01,  2.0844e-02, -2.8382e-01,
         -7.4101e-02, -6.9989e-02, -2.4128e-01, -2.9010e-01, -9.3669e-02,
          3.4000e-01, -1.5552e-01,  2.2987e-01,  1.7330e-01, -7.6778e-02,
         -2.0514e-01, -5.1658e-02,  1.0335e-02,  2.6160e-01,  2.8424e-01,
         -1.6088e-01,  9.8088e-02, -1.5322e-01, -1.8288e-01, -4.5743e-02,
          2.5380e-01, -8.5289e-03,  1.9113e-01, -9.9179e-02,  3.1739e-01,
         -6.1798e-01,  4.9763e-01,  2.5720e-01,  4.1475e-01, -3.7720e-02,
          4.0998e-01,  2.0038e-01,  1.7447e-02, -1.6450e-01,  1.5040e-03,
          4.3029e-01, -2.9896e-01,  7.1536e-02, -1.2365e-01,  2.8453e-01,
         -5.9894e-02,  2.4889e-01,  9.0495e-02,  7.4467e-02, -4.3891e-02,
         -1.5524e-01, -4.0024e-02, -1.6280e-01, -3.4843e-01, -1.3324e-02,
          2.1786e-01, -1.6937e-01,  1.3674e-01,  1.6121e-01,  9.7911e-02,
         -3.9803e-02, -5.0784e-02, -1.0065e-01,  1.3325e-01,  9.6475e-02,
          5.8867e-02, -7.6026e-02,  1.0326e-01,  1.0679e-01, -7.3162e-03,
          8.5309e-02,  1.9631e-01,  2.7335e-02, -1.8915e-01,  1.3612e-01,
         -8.8537e-02, -3.4667e-02, -4.9505e-02,  9.7938e-02, -7.3449e-02,
         -7.4766e-03, -8.7979e-02,  2.0115e-01,  1.5921e-01,  1.1698e-01,
         -2.4258e-01,  1.3459e-01, -1.6174e-01, -1.6130e-01,  2.7254e-01,
          1.1747e-02,  3.0206e-02, -2.8907e-02,  6.6147e-02, -1.9471e-01,
         -1.8629e-01]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
787000 特征值优化 tensor(0.9106, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.4113e-01,  4.1614e-01,  3.4685e-01, -9.8728e-01,  2.3700e+00,
         -5.8165e-01, -1.1078e+00,  7.0808e-01,  2.6458e+00, -4.9206e-01,
         -1.5072e-01,  1.5787e-01,  1.3802e-01, -1.6022e-02, -4.6573e-02,
          6.2668e-01, -5.5602e-01, -1.0160e-01, -3.0524e-01, -1.2438e-01,
         -2.2736e-01,  5.5538e-01, -2.5368e-02,  7.4571e-01,  1.4294e+00,
          1.6360e-02,  3.4669e-01, -1.5604e+00, -4.8111e-02,  2.1998e-01,
          2.9455e-01,  1.2742e-01,  2.7850e-01,  2.2125e-01, -2.1769e-01,
         -1.7905e-02,  3.0478e-02,  1.5112e-01,  1.6607e-01,  5.8354e-02,
          6.6493e-01, -6.1658e-03,  1.3080e-01,  3.9960e-01, -3.9747e-01,
         -2.7545e-01, -3.5662e-01,  3.0348e-02,  1.1050e-01,  6.5959e-01,
         -9.5771e-02, -9.9846e-02, -2.2266e-01, -2.1091e-01,  3.7300e-01,
         -2.4832e-01,  2.1131e-01,  2.0347e-01, -2.6327e-01,  1.0168e-01,
         -2.9681e-02, -4.5728e-01, -4.6725e-02, -1.0145e-01,  1.3277e-01,
          2.4196e-01, -2.2284e-01, -2.6270e-01,  2.1607e-02, -2.8415e-01,
         -7.4292e-02, -7.2268e-02, -2.4268e-01, -2.9059e-01, -9.7142e-02,
          3.3673e-01, -1.4764e-01,  2.3167e-01,  1.6701e-01, -7.4834e-02,
         -2.0789e-01, -5.3079e-02,  8.6417e-03,  2.6979e-01,  2.7728e-01,
         -1.6027e-01,  1.0330e-01, -1.5613e-01, -1.6663e-01, -4.0993e-02,
          2.6144e-01, -1.0948e-02,  1.8549e-01, -1.0014e-01,  3.2129e-01,
         -6.1512e-01,  5.0084e-01,  2.5960e-01,  3.9618e-01, -4.5684e-02,
          3.9983e-01,  1.9660e-01,  2.4471e-02, -1.7130e-01,  1.4073e-03,
          4.3632e-01, -2.9518e-01,  6.3789e-02, -1.2650e-01,  2.8552e-01,
         -6.0787e-02,  2.4971e-01,  9.2556e-02,  7.5400e-02, -4.0529e-02,
         -1.5752e-01, -3.9818e-02, -1.6440e-01, -3.4435e-01, -1.0834e-02,
          2.2329e-01, -1.7193e-01,  1.3793e-01,  1.5684e-01,  9.6654e-02,
         -3.8602e-02, -4.9944e-02, -1.0244e-01,  1.3270e-01,  9.2377e-02,
          6.1285e-02, -7.4322e-02,  1.0008e-01,  1.0907e-01, -1.0507e-02,
          8.8189e-02,  2.0206e-01,  1.9555e-02, -1.9002e-01,  1.2894e-01,
         -7.3088e-02, -2.5822e-02, -5.7852e-02,  9.7535e-02, -6.8745e-02,
         -1.2981e-02, -9.5047e-02,  2.0063e-01,  1.5310e-01,  1.1827e-01,
         -2.3641e-01,  1.3580e-01, -1.6936e-01, -1.6073e-01,  2.6659e-01,
          1.6674e-02,  4.1161e-02, -3.8083e-02,  5.7124e-02, -1.9676e-01,
         -1.8606e-01]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
788000 特征值优化 tensor(0.9229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.5002e-01,  4.2996e-01,  3.3613e-01, -9.9497e-01,  2.3674e+00,
         -5.8202e-01, -1.1118e+00,  7.2053e-01,  2.6603e+00, -4.9302e-01,
         -1.5175e-01,  1.6204e-01,  1.2978e-01, -2.3675e-03, -4.4269e-02,
          6.3298e-01, -5.4334e-01, -1.1182e-01, -3.0420e-01, -1.2642e-01,
         -2.2915e-01,  5.5634e-01, -3.0566e-02,  7.3652e-01,  1.4243e+00,
          9.9696e-03,  3.4835e-01, -1.5716e+00, -5.6165e-02,  2.1970e-01,
          2.8572e-01,  1.3337e-01,  2.7045e-01,  2.2780e-01, -2.2486e-01,
         -1.8594e-02,  1.5552e-02,  1.4306e-01,  1.7332e-01,  4.7628e-02,
          6.6210e-01, -9.1338e-03,  1.3287e-01,  3.9788e-01, -3.8910e-01,
         -2.7303e-01, -3.6032e-01,  3.6819e-02,  1.1954e-01,  6.7080e-01,
         -8.9846e-02, -1.0227e-01, -2.3248e-01, -2.1703e-01,  3.7220e-01,
         -2.4570e-01,  2.1930e-01,  2.0876e-01, -2.6511e-01,  9.8603e-02,
         -3.1430e-02, -4.6203e-01, -6.1957e-02, -1.0746e-01,  1.3232e-01,
          2.2950e-01, -2.3013e-01, -2.5801e-01,  2.7715e-02, -2.8254e-01,
         -7.5408e-02, -6.9096e-02, -2.4172e-01, -2.9804e-01, -8.3198e-02,
          3.3804e-01, -1.5454e-01,  2.5369e-01,  1.6792e-01, -7.6260e-02,
         -2.1328e-01, -5.9990e-02,  1.0787e-02,  2.6500e-01,  2.6599e-01,
         -1.6905e-01,  9.3517e-02, -1.5296e-01, -1.6700e-01, -1.9570e-02,
          2.4880e-01, -3.9317e-03,  1.7350e-01, -1.0133e-01,  3.2101e-01,
         -6.0751e-01,  4.9889e-01,  2.5027e-01,  4.2824e-01, -2.8552e-02,
          4.2405e-01,  1.9709e-01,  2.1227e-02, -1.6092e-01,  1.1193e-02,
          4.3670e-01, -2.8724e-01,  7.1081e-02, -1.2136e-01,  2.8786e-01,
         -5.6027e-02,  2.4893e-01,  9.8438e-02,  8.5709e-02, -5.0879e-02,
         -1.5800e-01, -3.5436e-02, -1.7408e-01, -3.4541e-01, -1.7880e-02,
          2.1882e-01, -1.6648e-01,  1.5903e-01,  1.6202e-01,  9.2278e-02,
         -3.5352e-02, -5.3518e-02, -9.8156e-02,  1.4001e-01,  9.3098e-02,
          6.8792e-02, -7.8091e-02,  9.5374e-02,  1.1225e-01, -1.1902e-02,
          6.9109e-02,  1.8889e-01,  3.0836e-02, -1.7860e-01,  1.4293e-01,
         -8.3776e-02, -3.1703e-02, -5.0467e-02,  1.0097e-01, -8.1227e-02,
         -4.9988e-03, -9.7527e-02,  1.9849e-01,  1.5098e-01,  1.2441e-01,
         -2.4042e-01,  1.2210e-01, -1.6845e-01, -1.6150e-01,  2.6031e-01,
          1.8438e-02,  4.3807e-02, -3.1832e-02,  6.0440e-02, -1.8832e-01,
         -1.8025e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
789000 特征值优化 tensor(0.9524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8490,  0.4312,  0.3417, -0.9990,  2.3719, -0.5745, -1.1232,  0.7209,
          2.6652, -0.5088, -0.1514,  0.1711,  0.1371,  0.0132, -0.0444,  0.6056,
         -0.5507, -0.1106, -0.3141, -0.1198, -0.2256,  0.5536, -0.0334,  0.7334,
          1.4316,  0.0128,  0.3311, -1.5686, -0.0593,  0.2050,  0.2866,  0.1367,
          0.2653,  0.2220, -0.2239, -0.0210,  0.0191,  0.1308,  0.1727,  0.0458,
          0.6668, -0.0107,  0.1314,  0.4029, -0.3812, -0.2774, -0.3624,  0.0294,
          0.1223,  0.6524, -0.0908, -0.0938, -0.2311, -0.2195,  0.3680, -0.2439,
          0.2133,  0.2116, -0.2560,  0.1043, -0.0233, -0.4649, -0.0714, -0.1107,
          0.1202,  0.2210, -0.2313, -0.2533,  0.0320, -0.2873, -0.0726, -0.0695,
         -0.2368, -0.2912, -0.0954,  0.3369, -0.1540,  0.2461,  0.1685, -0.0779,
         -0.2153, -0.0560,  0.0111,  0.2606,  0.2661, -0.1762,  0.1059, -0.1552,
         -0.1685, -0.0267,  0.2515, -0.0053,  0.1692, -0.1145,  0.3179, -0.6097,
          0.4997,  0.2543,  0.4389, -0.0153,  0.4280,  0.1953,  0.0207, -0.1613,
          0.0074,  0.4535, -0.2921,  0.0716, -0.1229,  0.2938, -0.0544,  0.2456,
          0.1007,  0.0763, -0.0517, -0.1674, -0.0406, -0.1816, -0.3460, -0.0077,
          0.2295, -0.1823,  0.1538,  0.1576,  0.0944, -0.0331, -0.0534, -0.1039,
          0.1406,  0.0972,  0.0708, -0.0819,  0.0993,  0.1100, -0.0159,  0.0821,
          0.1816,  0.0340, -0.1789,  0.1538, -0.0843, -0.0288, -0.0559,  0.0936,
         -0.0675, -0.0033, -0.0975,  0.1864,  0.1491,  0.1230, -0.2464,  0.1231,
         -0.1715, -0.1609,  0.2735,  0.0074,  0.0380, -0.0337,  0.0581, -0.1889,
         -0.1711]], device='cuda:0') tensor(0.2137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
790000 特征值优化 tensor(0.8940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.3834e-01,  4.2056e-01,  3.3887e-01, -9.8746e-01,  2.3711e+00,
         -5.7378e-01, -1.1139e+00,  7.2741e-01,  2.6675e+00, -5.0555e-01,
         -1.6881e-01,  1.8343e-01,  1.2410e-01,  6.1448e-03, -4.0551e-02,
          6.3819e-01, -5.6677e-01, -1.0481e-01, -3.0754e-01, -1.2537e-01,
         -2.1441e-01,  5.5464e-01, -2.7991e-02,  7.3651e-01,  1.4278e+00,
          7.2130e-03,  3.4344e-01, -1.5663e+00, -3.9608e-02,  2.1023e-01,
          2.8884e-01,  1.3369e-01,  2.8705e-01,  2.0627e-01, -2.2288e-01,
         -2.2299e-02,  1.7532e-02,  1.2787e-01,  1.6511e-01,  6.5969e-02,
          6.6557e-01, -4.0549e-03,  1.2846e-01,  3.9991e-01, -3.9021e-01,
         -2.6644e-01, -3.5747e-01,  2.9329e-02,  1.0860e-01,  6.4949e-01,
         -9.4101e-02, -9.7861e-02, -2.3067e-01, -2.1223e-01,  3.7178e-01,
         -2.4656e-01,  2.3180e-01,  2.0315e-01, -2.5140e-01,  1.0608e-01,
         -2.7888e-02, -4.5895e-01, -4.4673e-02, -1.0603e-01,  1.2671e-01,
          2.4878e-01, -2.2512e-01, -2.7097e-01,  1.9593e-02, -2.8520e-01,
         -7.2786e-02, -7.8663e-02, -2.3860e-01, -3.0123e-01, -8.9569e-02,
          3.3270e-01, -1.4383e-01,  2.3635e-01,  1.7377e-01, -7.6897e-02,
         -2.0848e-01, -5.5289e-02,  5.0320e-03,  2.6550e-01,  2.7989e-01,
         -1.5818e-01,  9.5656e-02, -1.6587e-01, -1.7007e-01, -5.6071e-02,
          2.5497e-01,  6.3492e-04,  1.7934e-01, -9.5210e-02,  3.1598e-01,
         -6.0974e-01,  5.0303e-01,  2.4632e-01,  4.2103e-01, -4.4956e-02,
          4.0157e-01,  1.9553e-01,  1.3254e-02, -1.6715e-01,  9.1271e-03,
          4.3355e-01, -2.9680e-01,  6.3103e-02, -1.2863e-01,  2.8592e-01,
         -5.9006e-02,  2.6144e-01,  8.9328e-02,  8.4139e-02, -4.7202e-02,
         -1.6015e-01, -4.6075e-02, -1.6005e-01, -3.5344e-01, -1.4339e-02,
          2.2529e-01, -1.6014e-01,  1.4083e-01,  1.5887e-01,  9.7933e-02,
         -3.7064e-02, -5.0082e-02, -1.1209e-01,  1.3784e-01,  9.6261e-02,
          6.0250e-02, -7.0685e-02,  9.8020e-02,  1.0797e-01, -2.0641e-02,
          7.5589e-02,  1.9596e-01,  1.6339e-02, -1.8894e-01,  1.2847e-01,
         -7.7169e-02, -2.8891e-02, -5.0038e-02,  9.0301e-02, -7.2585e-02,
         -1.3338e-02, -9.7191e-02,  2.1045e-01,  1.4958e-01,  1.0848e-01,
         -2.3005e-01,  1.4517e-01, -1.7504e-01, -1.6164e-01,  2.5495e-01,
          9.9249e-03,  3.3086e-02, -3.9079e-02,  7.1236e-02, -1.9644e-01,
         -1.9105e-01]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
791000 特征值优化 tensor(0.9546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8503,  0.4296,  0.3325, -1.0004,  2.3883, -0.5670, -1.1099,  0.7280,
          2.6685, -0.5088, -0.1691,  0.1724,  0.1408,  0.0069, -0.0415,  0.6162,
         -0.5403, -0.1082, -0.3030, -0.1133, -0.2202,  0.5533, -0.0282,  0.7396,
          1.4267,  0.0163,  0.3331, -1.5590, -0.0619,  0.2035,  0.2858,  0.1344,
          0.2733,  0.2288, -0.2281, -0.0256,  0.0100,  0.1401,  0.1713,  0.0491,
          0.6726, -0.0096,  0.1315,  0.3987, -0.3809, -0.2760, -0.3555,  0.0265,
          0.1247,  0.6469, -0.0906, -0.0921, -0.2333, -0.2258,  0.3741, -0.2406,
          0.2149,  0.2059, -0.2474,  0.1098, -0.0196, -0.4634, -0.0605, -0.1109,
          0.1211,  0.2289, -0.2253, -0.2558,  0.0308, -0.2898, -0.0698, -0.0674,
         -0.2463, -0.2887, -0.0968,  0.3373, -0.1604,  0.2537,  0.1712, -0.0777,
         -0.2081, -0.0602,  0.0130,  0.2716,  0.2646, -0.1756,  0.1115, -0.1574,
         -0.1669, -0.0356,  0.2492, -0.0032,  0.1555, -0.1164,  0.3212, -0.6080,
          0.5018,  0.2481,  0.4281, -0.0203,  0.4202,  0.1990,  0.0161, -0.1652,
          0.0029,  0.4532, -0.3043,  0.0617, -0.1199,  0.2909, -0.0552,  0.2437,
          0.0938,  0.0790, -0.0528, -0.1655, -0.0377, -0.1771, -0.3454, -0.0049,
          0.2300, -0.1750,  0.1642,  0.1605,  0.0901, -0.0344, -0.0489, -0.1056,
          0.1391,  0.0948,  0.0734, -0.0841,  0.0952,  0.1091, -0.0131,  0.0846,
          0.1901,  0.0281, -0.1818,  0.1534, -0.0934, -0.0275, -0.0517,  0.0926,
         -0.0775, -0.0101, -0.0937,  0.1917,  0.1567,  0.1203, -0.2385,  0.1243,
         -0.1639, -0.1581,  0.2691,  0.0088,  0.0521, -0.0322,  0.0517, -0.1902,
         -0.1716]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
792000 特征值优化 tensor(0.8880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8630,  0.4323,  0.3139, -0.9976,  2.3806, -0.5730, -1.1178,  0.7290,
          2.6990, -0.5026, -0.1696,  0.1973,  0.1261,  0.0211, -0.0410,  0.6071,
         -0.5520, -0.1106, -0.3122, -0.1117, -0.2231,  0.5447, -0.0402,  0.7283,
          1.4400,  0.0126,  0.3397, -1.5613, -0.0547,  0.1987,  0.2862,  0.1337,
          0.2872,  0.2202, -0.2294, -0.0217,  0.0223,  0.1420,  0.1742,  0.0440,
          0.6617, -0.0091,  0.1317,  0.3940, -0.3766, -0.2856, -0.3521,  0.0267,
          0.1243,  0.6602, -0.0881, -0.1021, -0.2243, -0.2239,  0.3715, -0.2515,
          0.2065,  0.2225, -0.2573,  0.1008, -0.0240, -0.4616, -0.0646, -0.1193,
          0.1223,  0.2355, -0.2218, -0.2590,  0.0318, -0.2832, -0.0738, -0.0688,
         -0.2376, -0.2882, -0.0873,  0.3321, -0.1611,  0.2489,  0.1715, -0.0778,
         -0.2007, -0.0580,  0.0074,  0.2881,  0.2704, -0.1726,  0.1020, -0.1661,
         -0.1607, -0.0352,  0.2446, -0.0114,  0.1788, -0.1094,  0.3207, -0.6064,
          0.5025,  0.2545,  0.4326, -0.0298,  0.4074,  0.1899,  0.0192, -0.1677,
          0.0037,  0.4517, -0.2980,  0.0724, -0.1173,  0.2884, -0.0540,  0.2424,
          0.0947,  0.0917, -0.0601, -0.1631, -0.0443, -0.1745, -0.3496, -0.0036,
          0.2232, -0.1806,  0.1603,  0.1612,  0.0958, -0.0371, -0.0438, -0.1002,
          0.1390,  0.0967,  0.0694, -0.0824,  0.0956,  0.1129, -0.0149,  0.0878,
          0.1824,  0.0258, -0.1870,  0.1498, -0.0795, -0.0468, -0.0567,  0.1037,
         -0.0755, -0.0056, -0.0869,  0.1926,  0.1565,  0.1311, -0.2328,  0.1296,
         -0.1617, -0.1669,  0.2606,  0.0170,  0.0380, -0.0435,  0.0600, -0.1900,
         -0.1853]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
793000 特征值优化 tensor(0.9042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8472,  0.4216,  0.3027, -0.9884,  2.4021, -0.5739, -1.1224,  0.7364,
          2.6889, -0.5018, -0.1775,  0.1819,  0.1297, -0.0221, -0.0315,  0.6275,
         -0.5672, -0.1043, -0.3249, -0.1080, -0.2159,  0.5419, -0.0275,  0.7454,
          1.4377,  0.0094,  0.3529, -1.5669, -0.0569,  0.2089,  0.2937,  0.1388,
          0.2836,  0.2028, -0.2165, -0.0330,  0.0231,  0.1359,  0.1618,  0.0483,
          0.6516, -0.0097,  0.1300,  0.3921, -0.3864, -0.2752, -0.3488,  0.0433,
          0.1106,  0.6485, -0.0872, -0.1039, -0.2321, -0.2163,  0.3853, -0.2551,
          0.2127,  0.2031, -0.2534,  0.1127, -0.0357, -0.4666, -0.0582, -0.1168,
          0.1300,  0.2355, -0.2301, -0.2642,  0.0253, -0.2848, -0.0753, -0.0718,
         -0.2420, -0.2903, -0.0832,  0.3305, -0.1529,  0.2451,  0.1646, -0.0791,
         -0.2028, -0.0528,  0.0142,  0.2726,  0.2686, -0.1619,  0.1005, -0.1755,
         -0.1697, -0.0346,  0.2575, -0.0151,  0.1760, -0.0923,  0.3207, -0.6045,
          0.5067,  0.2700,  0.4285, -0.0601,  0.4120,  0.2009,  0.0286, -0.1681,
          0.0054,  0.4541, -0.2902,  0.0571, -0.1179,  0.2813, -0.0534,  0.2542,
          0.0797,  0.0908, -0.0473, -0.1499, -0.0423, -0.1512, -0.3404, -0.0044,
          0.2237, -0.1738,  0.1485,  0.1631,  0.1028, -0.0360, -0.0459, -0.1026,
          0.1355,  0.1007,  0.0603, -0.0764,  0.0955,  0.1023, -0.0081,  0.0856,
          0.1855,  0.0351, -0.1961,  0.1425, -0.0751, -0.0322, -0.0527,  0.1045,
         -0.0731, -0.0084, -0.0933,  0.2026,  0.1578,  0.1154, -0.2413,  0.1403,
         -0.1649, -0.1643,  0.2620,  0.0154,  0.0405, -0.0376,  0.0654, -0.1931,
         -0.1792]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
794000 特征值优化 tensor(0.9383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.3165e-01,  4.2515e-01,  3.1454e-01, -9.9738e-01,  2.4158e+00,
         -5.7321e-01, -1.1192e+00,  7.3675e-01,  2.6845e+00, -5.0900e-01,
         -1.7261e-01,  1.7468e-01,  1.4069e-01, -2.4682e-02, -2.9718e-02,
          6.4554e-01, -5.5430e-01, -1.0402e-01, -3.0892e-01, -1.2008e-01,
         -2.1208e-01,  5.4181e-01, -3.3638e-02,  7.4194e-01,  1.4299e+00,
          1.6140e-02,  3.5177e-01, -1.5780e+00, -6.2535e-02,  2.1019e-01,
          2.8890e-01,  1.3746e-01,  2.7341e-01,  2.0817e-01, -2.0594e-01,
         -3.4947e-02,  1.1899e-02,  1.2506e-01,  1.6344e-01,  6.5279e-02,
          6.5445e-01, -5.9975e-03,  1.3052e-01,  3.9883e-01, -3.8870e-01,
         -2.6863e-01, -3.5156e-01,  2.8767e-02,  1.1640e-01,  6.4317e-01,
         -9.0820e-02, -1.0290e-01, -2.3910e-01, -2.1851e-01,  3.7856e-01,
         -2.4555e-01,  2.2310e-01,  1.9537e-01, -2.6073e-01,  1.1459e-01,
         -2.1560e-02, -4.6313e-01, -5.9191e-02, -1.2358e-01,  1.1780e-01,
          2.3899e-01, -2.3752e-01, -2.6067e-01,  1.8591e-02, -2.8775e-01,
         -7.1835e-02, -7.4457e-02, -2.4253e-01, -2.9777e-01, -9.2005e-02,
          3.3878e-01, -1.4541e-01,  2.4338e-01,  1.7031e-01, -7.9787e-02,
         -2.1499e-01, -5.2093e-02,  1.0387e-02,  2.6063e-01,  2.5640e-01,
         -1.7431e-01,  1.0570e-01, -1.6975e-01, -1.6357e-01, -5.3889e-02,
          2.5528e-01, -2.0197e-02,  1.5729e-01, -1.0480e-01,  3.1555e-01,
         -6.0521e-01,  5.1131e-01,  2.5766e-01,  4.3484e-01, -4.1163e-02,
          4.0365e-01,  2.0457e-01,  2.7395e-02, -1.5851e-01,  4.7858e-03,
          4.4520e-01, -2.9516e-01,  5.0289e-02, -1.2039e-01,  2.8218e-01,
         -5.3347e-02,  2.6383e-01,  7.4479e-02,  7.8370e-02, -5.2855e-02,
         -1.5203e-01, -5.0453e-02, -1.6376e-01, -3.4306e-01, -1.8788e-03,
          2.2525e-01, -1.5709e-01,  1.5540e-01,  1.6112e-01,  9.9403e-02,
         -2.9729e-02, -5.3226e-02, -1.1366e-01,  1.3330e-01,  1.0300e-01,
          6.2427e-02, -7.4306e-02,  9.6721e-02,  1.0534e-01, -1.2778e-02,
          7.7273e-02,  1.8884e-01,  3.2853e-02, -2.0123e-01,  1.5304e-01,
         -8.1317e-02, -2.9884e-02, -5.1904e-02,  9.1296e-02, -6.4821e-02,
         -1.7577e-02, -1.0167e-01,  2.0874e-01,  1.4371e-01,  1.1951e-01,
         -2.3184e-01,  1.3355e-01, -1.7415e-01, -1.6039e-01,  2.7576e-01,
          6.5722e-03,  3.8246e-02, -3.4783e-02,  6.5370e-02, -1.8826e-01,
         -1.7096e-01]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
795000 特征值优化 tensor(0.8863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8128,  0.4255,  0.3148, -1.0015,  2.4200, -0.5836, -1.1379,  0.7244,
          2.7076, -0.5105, -0.1823,  0.1564,  0.1242, -0.0043, -0.0325,  0.6393,
         -0.5508, -0.1103, -0.3190, -0.1008, -0.2080,  0.5272, -0.0271,  0.7375,
          1.4356,  0.0089,  0.3553, -1.5643, -0.0644,  0.1935,  0.2818,  0.1363,
          0.2773,  0.2151, -0.2132, -0.0351,  0.0176,  0.1289,  0.1628,  0.0587,
          0.6530, -0.0122,  0.1306,  0.3958, -0.3777, -0.2756, -0.3450,  0.0306,
          0.1244,  0.6370, -0.0890, -0.0915, -0.2351, -0.2241,  0.3920, -0.2361,
          0.2190,  0.2118, -0.2508,  0.1198, -0.0190, -0.4601, -0.0675, -0.1210,
          0.1148,  0.2254, -0.2248, -0.2643,  0.0265, -0.2769, -0.0733, -0.0651,
         -0.2417, -0.2874, -0.0939,  0.3442, -0.1524,  0.2458,  0.1812, -0.0751,
         -0.2120, -0.0566,  0.0300,  0.2611,  0.2606, -0.1627,  0.1145, -0.1606,
         -0.1420, -0.0300,  0.2553, -0.0199,  0.1579, -0.0971,  0.3248, -0.6024,
          0.5043,  0.2502,  0.4285, -0.0147,  0.4194,  0.1946,  0.0343, -0.1655,
         -0.0084,  0.4809, -0.3039,  0.0496, -0.1234,  0.2859, -0.0496,  0.2504,
          0.0957,  0.0815, -0.0497, -0.1591, -0.0479, -0.1817, -0.3409, -0.0031,
          0.2232, -0.1623,  0.1668,  0.1561,  0.0957, -0.0329, -0.0476, -0.1078,
          0.1283,  0.1029,  0.0692, -0.0857,  0.1047,  0.1131, -0.0198,  0.0911,
          0.1888,  0.0279, -0.1965,  0.1529, -0.0784, -0.0263, -0.0590,  0.0959,
         -0.0679, -0.0069, -0.0981,  0.1987,  0.1599,  0.1238, -0.2364,  0.1310,
         -0.1653, -0.1641,  0.2718,  0.0145,  0.0561, -0.0305,  0.0615, -0.1879,
         -0.1653]], device='cuda:0') tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
796000 特征值优化 tensor(0.8996, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0520e-01,  4.4092e-01,  2.9168e-01, -9.9008e-01,  2.4153e+00,
         -5.7896e-01, -1.1136e+00,  7.2311e-01,  2.6790e+00, -5.2667e-01,
         -1.8160e-01,  1.7876e-01,  1.2363e-01,  4.9716e-03, -3.5882e-02,
          6.3914e-01, -5.6628e-01, -1.1881e-01, -3.1341e-01, -1.0283e-01,
         -2.0580e-01,  5.2770e-01, -2.9072e-02,  7.4048e-01,  1.4399e+00,
          1.8927e-03,  3.4989e-01, -1.5602e+00, -5.7288e-02,  1.9441e-01,
          2.8369e-01,  1.3597e-01,  2.8496e-01,  1.9588e-01, -2.1380e-01,
         -4.3801e-02,  7.3570e-03,  1.1734e-01,  1.5260e-01,  6.5952e-02,
          6.5692e-01, -6.8551e-03,  1.2715e-01,  3.9096e-01, -3.6573e-01,
         -2.7195e-01, -3.4656e-01,  1.8883e-02,  1.1393e-01,  6.3703e-01,
         -8.6089e-02, -1.0601e-01, -2.4529e-01, -2.2596e-01,  3.9196e-01,
         -2.2449e-01,  2.3545e-01,  2.0583e-01, -2.4429e-01,  1.1994e-01,
         -3.4553e-02, -4.7062e-01, -6.2895e-02, -1.2955e-01,  1.2462e-01,
          2.3115e-01, -2.3708e-01, -2.6080e-01,  2.1601e-02, -2.7340e-01,
         -7.5000e-02, -7.4889e-02, -2.4122e-01, -2.8746e-01, -8.6115e-02,
          3.4385e-01, -1.6177e-01,  2.3885e-01,  1.7609e-01, -7.6748e-02,
         -2.0791e-01, -5.6045e-02,  9.1138e-03,  2.6381e-01,  2.6496e-01,
         -1.6188e-01,  1.0527e-01, -1.6600e-01, -1.3885e-01, -4.2027e-02,
          2.6880e-01, -1.7291e-02,  1.6118e-01, -8.8088e-02,  3.1653e-01,
         -6.0085e-01,  5.1273e-01,  2.5325e-01,  4.3139e-01, -3.3474e-02,
          4.2929e-01,  2.0373e-01,  2.5208e-02, -1.6626e-01, -2.7602e-03,
          4.5488e-01, -2.9391e-01,  3.9230e-02, -1.1641e-01,  2.8543e-01,
         -5.2509e-02,  2.4954e-01,  8.8019e-02,  8.8827e-02, -4.6957e-02,
         -1.4224e-01, -4.9068e-02, -1.5938e-01, -3.5573e-01, -2.9768e-03,
          2.3237e-01, -1.6084e-01,  1.4751e-01,  1.6000e-01,  1.0138e-01,
         -3.1394e-02, -4.7478e-02, -1.2051e-01,  1.3174e-01,  1.0116e-01,
          6.4445e-02, -7.7134e-02,  1.0211e-01,  1.0918e-01, -1.8363e-02,
          9.0863e-02,  1.8600e-01,  2.4948e-02, -1.8856e-01,  1.4867e-01,
         -8.3001e-02, -2.5958e-02, -5.8100e-02,  8.3214e-02, -7.0611e-02,
         -1.4766e-02, -9.4588e-02,  2.2591e-01,  1.5180e-01,  1.0829e-01,
         -2.3288e-01,  1.4316e-01, -1.6836e-01, -1.6093e-01,  2.5999e-01,
          1.8888e-02,  5.0715e-02, -3.2999e-02,  6.6288e-02, -1.8949e-01,
         -1.8871e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
797000 特征值优化 tensor(0.8860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1925e-01,  4.5079e-01,  2.9569e-01, -9.9731e-01,  2.4229e+00,
         -5.7336e-01, -1.1154e+00,  7.2001e-01,  2.6900e+00, -5.2501e-01,
         -1.8713e-01,  1.7868e-01,  1.3497e-01,  1.1388e-03, -3.8438e-02,
          6.3097e-01, -5.4891e-01, -1.1282e-01, -3.1997e-01, -9.9904e-02,
         -2.1085e-01,  5.2752e-01, -3.0027e-02,  7.4239e-01,  1.4465e+00,
         -4.9615e-03,  3.5015e-01, -1.5682e+00, -6.8763e-02,  1.8779e-01,
          2.7029e-01,  1.4539e-01,  2.6849e-01,  1.9681e-01, -2.2074e-01,
         -4.2075e-02,  2.6630e-02,  1.2947e-01,  1.7098e-01,  7.4971e-02,
          6.4580e-01, -8.1839e-03,  1.2920e-01,  3.9172e-01, -3.7288e-01,
         -2.7020e-01, -3.4512e-01,  2.0909e-02,  1.1149e-01,  6.3905e-01,
         -9.1454e-02, -9.6467e-02, -2.5365e-01, -2.2323e-01,  3.8845e-01,
         -2.3115e-01,  2.3765e-01,  2.1502e-01, -2.4121e-01,  1.2808e-01,
         -2.0234e-02, -4.6002e-01, -5.8310e-02, -1.3976e-01,  1.1336e-01,
          2.3455e-01, -2.3128e-01, -2.6528e-01,  2.0455e-02, -2.8309e-01,
         -7.0629e-02, -7.0500e-02, -2.4473e-01, -2.9594e-01, -9.3852e-02,
          3.4181e-01, -1.5027e-01,  2.4557e-01,  1.7612e-01, -7.7423e-02,
         -2.1931e-01, -5.6738e-02,  2.1847e-02,  2.4811e-01,  2.5388e-01,
         -1.6225e-01,  1.3121e-01, -1.6648e-01, -1.5407e-01, -4.3246e-02,
          2.6406e-01, -2.3770e-02,  1.5403e-01, -8.5897e-02,  3.1491e-01,
         -6.0115e-01,  5.0721e-01,  2.4500e-01,  4.3793e-01, -2.2470e-02,
          4.2304e-01,  2.1133e-01,  3.2673e-02, -1.6359e-01, -1.3287e-02,
          4.5337e-01, -3.1216e-01,  2.5049e-02, -1.2200e-01,  2.8183e-01,
         -5.2408e-02,  2.6370e-01,  7.3545e-02,  8.4320e-02, -5.5407e-02,
         -1.4373e-01, -4.2787e-02, -1.6579e-01, -3.4800e-01,  1.0088e-02,
          2.2868e-01, -1.6749e-01,  1.6910e-01,  1.5634e-01,  9.9627e-02,
         -2.7361e-02, -5.2479e-02, -1.2038e-01,  1.3085e-01,  1.0623e-01,
          6.8627e-02, -7.6332e-02,  1.0062e-01,  1.0825e-01, -1.5489e-02,
          9.2622e-02,  1.8129e-01,  1.3911e-02, -2.0165e-01,  1.4983e-01,
         -6.8298e-02, -2.4884e-02, -5.7406e-02,  8.8653e-02, -6.1613e-02,
         -2.4501e-02, -9.9858e-02,  2.1816e-01,  1.4224e-01,  1.1348e-01,
         -2.2953e-01,  1.3696e-01, -1.7084e-01, -1.5698e-01,  2.7367e-01,
          1.2322e-02,  5.2436e-02, -3.7841e-02,  4.8420e-02, -1.8653e-01,
         -1.6408e-01]], device='cuda:0') tensor(0.2202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
798000 特征值优化 tensor(0.8992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0444e-01,  4.4089e-01,  2.9960e-01, -9.8505e-01,  2.3894e+00,
         -5.9212e-01, -1.1421e+00,  7.2645e-01,  2.7020e+00, -5.1247e-01,
         -1.9654e-01,  1.7116e-01,  1.1044e-01, -3.2069e-03, -3.9402e-02,
          6.2078e-01, -5.7549e-01, -1.1505e-01, -3.2340e-01, -9.8490e-02,
         -1.9801e-01,  5.0907e-01, -2.5451e-02,  7.4453e-01,  1.4390e+00,
          4.8663e-03,  3.6780e-01, -1.5486e+00, -5.8238e-02,  1.8982e-01,
          2.7988e-01,  1.4322e-01,  2.9528e-01,  1.9922e-01, -2.1135e-01,
         -4.3127e-02,  1.2926e-02,  1.2182e-01,  1.5804e-01,  7.1177e-02,
          6.5220e-01, -6.7322e-03,  1.2842e-01,  3.9535e-01, -3.6371e-01,
         -2.7715e-01, -3.4436e-01,  1.8844e-02,  1.1043e-01,  6.4616e-01,
         -8.5516e-02, -1.1351e-01, -2.4702e-01, -2.2308e-01,  3.9491e-01,
         -2.4220e-01,  2.2744e-01,  2.0423e-01, -2.5241e-01,  1.1677e-01,
         -2.6961e-02, -4.7823e-01, -5.9851e-02, -1.2978e-01,  1.2196e-01,
          2.3764e-01, -2.3106e-01, -2.6882e-01,  1.0310e-02, -2.7220e-01,
         -7.9286e-02, -7.0786e-02, -2.3255e-01, -2.8759e-01, -7.8030e-02,
          3.4369e-01, -1.5556e-01,  2.5057e-01,  1.5571e-01, -6.9970e-02,
         -2.0446e-01, -5.3043e-02,  2.1462e-02,  2.6059e-01,  2.5462e-01,
         -1.6364e-01,  1.0922e-01, -1.6405e-01, -1.4020e-01, -4.2989e-02,
          2.7394e-01, -2.4636e-02,  1.5296e-01, -9.4285e-02,  3.2127e-01,
         -6.0627e-01,  5.0170e-01,  2.4353e-01,  4.4142e-01, -1.5276e-02,
          4.1977e-01,  2.0105e-01,  2.5514e-02, -1.6035e-01,  1.3843e-03,
          4.5723e-01, -3.0285e-01,  4.1830e-02, -1.2032e-01,  2.8811e-01,
         -5.0626e-02,  2.5630e-01,  8.4033e-02,  1.0075e-01, -5.0840e-02,
         -1.4118e-01, -5.3447e-02, -1.5651e-01, -3.4401e-01,  1.1573e-02,
          2.3061e-01, -1.7635e-01,  1.4370e-01,  1.5489e-01,  1.0707e-01,
         -2.4715e-02, -4.4848e-02, -1.1839e-01,  1.3138e-01,  1.0516e-01,
          6.1483e-02, -7.7684e-02,  1.0243e-01,  1.1069e-01, -2.6832e-02,
          8.9183e-02,  1.9344e-01,  3.0098e-02, -1.9783e-01,  1.4687e-01,
         -7.9303e-02, -2.1533e-02, -7.9598e-02,  8.9579e-02, -8.0907e-02,
         -1.4869e-02, -1.0490e-01,  2.2687e-01,  1.5696e-01,  1.1688e-01,
         -2.3347e-01,  1.4355e-01, -1.6732e-01, -1.7516e-01,  2.6056e-01,
          1.4285e-02,  5.1515e-02, -4.1226e-02,  6.5156e-02, -1.9225e-01,
         -1.7797e-01]], device='cuda:0') tensor(0.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
799000 特征值优化 tensor(0.8850, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.9003e-01,  4.4205e-01,  3.0085e-01, -9.9690e-01,  2.4139e+00,
         -5.8681e-01, -1.1446e+00,  7.2300e-01,  2.7040e+00, -5.2043e-01,
         -2.0162e-01,  1.5883e-01,  1.0629e-01,  8.6388e-04, -3.7506e-02,
          6.1587e-01, -5.8472e-01, -1.0745e-01, -3.1752e-01, -9.9908e-02,
         -2.0163e-01,  5.0340e-01, -1.9793e-02,  7.3414e-01,  1.4573e+00,
         -2.4828e-02,  3.7133e-01, -1.5325e+00, -4.9937e-02,  1.8375e-01,
          2.8526e-01,  1.3989e-01,  3.1100e-01,  2.0379e-01, -2.0578e-01,
         -4.2737e-02,  2.1627e-02,  1.3036e-01,  1.5720e-01,  7.3788e-02,
          6.5232e-01, -5.7591e-03,  1.2951e-01,  3.9555e-01, -3.6137e-01,
         -2.7621e-01, -3.2909e-01,  2.4801e-02,  9.4692e-02,  6.2797e-01,
         -8.6282e-02, -1.1144e-01, -2.2389e-01, -2.2680e-01,  4.0148e-01,
         -2.2077e-01,  2.2754e-01,  2.2634e-01, -2.4445e-01,  1.1740e-01,
         -2.8525e-02, -4.8069e-01, -5.3324e-02, -1.3200e-01,  1.1962e-01,
          2.4122e-01, -2.3371e-01, -2.6513e-01,  3.2624e-03, -2.6552e-01,
         -7.4286e-02, -7.8947e-02, -2.3732e-01, -3.0491e-01, -7.8365e-02,
          3.4546e-01, -1.4870e-01,  2.4101e-01,  1.6719e-01, -7.4299e-02,
         -2.0476e-01, -5.7423e-02,  1.8206e-02,  2.6655e-01,  2.5492e-01,
         -1.6419e-01,  1.0372e-01, -1.6831e-01, -1.5581e-01, -6.1445e-02,
          2.7243e-01, -1.6091e-02,  1.6620e-01, -9.0351e-02,  3.1298e-01,
         -6.0095e-01,  5.0606e-01,  2.3806e-01,  4.2190e-01, -2.1022e-02,
          4.3529e-01,  2.0120e-01,  3.3434e-02, -1.6145e-01, -8.9521e-03,
          4.8314e-01, -3.0119e-01,  3.3965e-02, -1.2268e-01,  2.8686e-01,
         -5.1490e-02,  2.5817e-01,  8.8914e-02,  9.8806e-02, -4.5147e-02,
         -1.3721e-01, -6.1257e-02, -1.5112e-01, -3.4932e-01,  5.5693e-03,
          2.3390e-01, -1.8141e-01,  1.3191e-01,  1.5386e-01,  1.0521e-01,
         -2.9932e-02, -4.4854e-02, -1.1813e-01,  1.2813e-01,  1.0995e-01,
          5.7937e-02, -6.8764e-02,  1.0293e-01,  1.1012e-01, -3.1350e-02,
          8.7064e-02,  1.8328e-01,  5.2537e-03, -1.8608e-01,  1.3819e-01,
         -9.0235e-02, -2.4270e-02, -7.1144e-02,  9.3650e-02, -8.6151e-02,
         -1.0012e-02, -9.5206e-02,  2.2631e-01,  1.5410e-01,  1.1687e-01,
         -2.2057e-01,  1.5746e-01, -1.6903e-01, -1.7118e-01,  2.6061e-01,
          1.7395e-02,  4.9116e-02, -4.0651e-02,  7.2096e-02, -1.9858e-01,
         -1.9022e-01]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
800000 特征值优化 tensor(0.8893, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.8359e-01,  4.5059e-01,  2.9634e-01, -9.8961e-01,  2.4025e+00,
         -5.7635e-01, -1.1323e+00,  7.3118e-01,  2.7044e+00, -5.1824e-01,
         -2.0486e-01,  1.6812e-01,  1.0899e-01,  1.8437e-05, -2.7369e-02,
          6.3007e-01, -5.8203e-01, -1.1214e-01, -3.1276e-01, -9.3316e-02,
         -2.0524e-01,  5.1233e-01, -3.0395e-02,  7.2914e-01,  1.4603e+00,
         -2.8767e-03,  3.5526e-01, -1.5459e+00, -5.6498e-02,  1.8192e-01,
          2.7976e-01,  1.4295e-01,  3.0761e-01,  1.9798e-01, -2.0408e-01,
         -5.0054e-02,  1.9601e-02,  1.4614e-01,  1.5923e-01,  6.7815e-02,
          6.4907e-01, -5.2182e-03,  1.2897e-01,  3.8954e-01, -3.6185e-01,
         -2.8790e-01, -3.3338e-01,  3.3660e-02,  1.1182e-01,  6.3477e-01,
         -8.8388e-02, -1.0928e-01, -2.2899e-01, -2.2283e-01,  3.9250e-01,
         -2.3443e-01,  2.3493e-01,  2.1999e-01, -2.4992e-01,  1.2798e-01,
         -2.1871e-02, -4.7462e-01, -5.5973e-02, -1.3900e-01,  1.1180e-01,
          2.3499e-01, -2.3889e-01, -2.5436e-01,  1.1048e-02, -2.6681e-01,
         -7.0717e-02, -8.1320e-02, -2.3065e-01, -2.9080e-01, -8.3004e-02,
          3.4038e-01, -1.6073e-01,  2.3585e-01,  1.7506e-01, -7.6952e-02,
         -2.1438e-01, -5.9273e-02,  1.3865e-02,  2.7073e-01,  2.5238e-01,
         -1.7001e-01,  9.5809e-02, -1.6353e-01, -1.5151e-01, -5.6119e-02,
          2.6764e-01, -3.4018e-02,  1.4885e-01, -9.5267e-02,  3.1513e-01,
         -6.0123e-01,  5.0946e-01,  2.5448e-01,  4.3516e-01, -1.7935e-02,
          4.1920e-01,  2.0005e-01,  2.0502e-02, -1.7077e-01, -1.0480e-02,
          4.6814e-01, -3.0156e-01,  3.3709e-02, -1.1496e-01,  2.8670e-01,
         -5.0188e-02,  2.6029e-01,  7.0909e-02,  9.4006e-02, -4.4531e-02,
         -1.4586e-01, -5.6972e-02, -1.5818e-01, -3.5026e-01,  1.4506e-02,
          2.2888e-01, -1.7944e-01,  1.3754e-01,  1.6182e-01,  1.0659e-01,
         -2.4688e-02, -5.7914e-02, -1.2076e-01,  1.2719e-01,  1.0640e-01,
          6.4734e-02, -6.9680e-02,  1.0263e-01,  1.0827e-01, -2.1889e-02,
          7.8427e-02,  1.9399e-01,  2.7172e-02, -2.0326e-01,  1.4475e-01,
         -9.5019e-02, -2.9359e-02, -6.3312e-02,  8.6580e-02, -7.5459e-02,
         -1.5792e-02, -1.0034e-01,  2.1722e-01,  1.5122e-01,  1.2116e-01,
         -2.1810e-01,  1.4151e-01, -1.7433e-01, -1.6972e-01,  2.5252e-01,
          9.2736e-03,  4.4176e-02, -4.5134e-02,  6.0705e-02, -1.8834e-01,
         -1.8421e-01]], device='cuda:0') tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
801000 特征值优化 tensor(0.8969, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7781,  0.4452,  0.2861, -0.9896,  2.4042, -0.5824, -1.1462,  0.7227,
          2.6973, -0.5133, -0.2003,  0.1599,  0.1005, -0.0055, -0.0233,  0.6427,
         -0.5571, -0.1232, -0.3094, -0.0813, -0.2033,  0.5105, -0.0275,  0.7382,
          1.4585, -0.0075,  0.3518, -1.5536, -0.0740,  0.1675,  0.2883,  0.1374,
          0.2960,  0.2111, -0.2059, -0.0573,  0.0149,  0.1417,  0.1512,  0.0593,
          0.6571, -0.0077,  0.1320,  0.3878, -0.3429, -0.2875, -0.3312,  0.0314,
          0.1258,  0.6414, -0.0882, -0.1132, -0.2358, -0.2221,  0.3960, -0.2399,
          0.2141,  0.2014, -0.2514,  0.1384, -0.0112, -0.4821, -0.0645, -0.1372,
          0.1122,  0.2325, -0.2313, -0.2647,  0.0205, -0.2690, -0.0738, -0.0732,
         -0.2310, -0.2859, -0.0893,  0.3474, -0.1610,  0.2407,  0.1754, -0.0737,
         -0.2033, -0.0600,  0.0288,  0.2566,  0.2656, -0.1572,  0.1138, -0.1490,
         -0.1587, -0.0387,  0.2758, -0.0304,  0.1621, -0.0936,  0.3187, -0.6011,
          0.5055,  0.2347,  0.4477, -0.0164,  0.4162,  0.1962,  0.0199, -0.1704,
         -0.0101,  0.4807, -0.2976,  0.0281, -0.1078,  0.2811, -0.0478,  0.2560,
          0.0733,  0.0909, -0.0481, -0.1435, -0.0504, -0.1665, -0.3448,  0.0069,
          0.2245, -0.1685,  0.1547,  0.1666,  0.1031, -0.0298, -0.0510, -0.1108,
          0.1236,  0.1062,  0.0641, -0.0752,  0.1057,  0.1064, -0.0211,  0.0923,
          0.1882,  0.0255, -0.2072,  0.1489, -0.0903, -0.0294, -0.0634,  0.1015,
         -0.0645, -0.0153, -0.0998,  0.2116,  0.1719,  0.1157, -0.2242,  0.1350,
         -0.1506, -0.1613,  0.2789,  0.0087,  0.0554, -0.0354,  0.0544, -0.1850,
         -0.1711]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
802000 特征值优化 tensor(0.8993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.8203e-01,  4.5588e-01,  2.8371e-01, -9.9048e-01,  2.4044e+00,
         -5.8571e-01, -1.1384e+00,  7.0692e-01,  2.6941e+00, -5.1272e-01,
         -2.1264e-01,  1.5397e-01,  1.0521e-01,  1.2377e-05, -3.0467e-02,
          6.3848e-01, -5.6342e-01, -1.2211e-01, -3.1525e-01, -8.0601e-02,
         -1.9845e-01,  4.9747e-01, -2.5394e-02,  7.4009e-01,  1.4677e+00,
         -2.2673e-03,  3.5504e-01, -1.5510e+00, -7.8743e-02,  1.6244e-01,
          2.8126e-01,  1.3660e-01,  3.0547e-01,  2.1919e-01, -2.1810e-01,
         -5.2988e-02,  3.0660e-02,  1.3154e-01,  1.4674e-01,  6.5722e-02,
          6.5827e-01, -8.4491e-03,  1.2970e-01,  3.8625e-01, -3.4450e-01,
         -2.8886e-01, -3.3140e-01,  2.7294e-02,  1.1802e-01,  6.4062e-01,
         -7.6995e-02, -1.2342e-01, -2.3104e-01, -2.2061e-01,  4.0230e-01,
         -2.4595e-01,  2.0887e-01,  2.0614e-01, -2.4117e-01,  1.2925e-01,
         -1.3535e-02, -4.8611e-01, -5.7068e-02, -1.3181e-01,  1.1216e-01,
          2.3847e-01, -2.3542e-01, -2.5830e-01,  1.4157e-02, -2.7021e-01,
         -7.3718e-02, -7.3957e-02, -2.3414e-01, -2.9251e-01, -8.8277e-02,
          3.4262e-01, -1.5535e-01,  2.3775e-01,  1.7493e-01, -6.9367e-02,
         -2.0837e-01, -5.6834e-02,  2.2471e-02,  2.7073e-01,  2.6442e-01,
         -1.5274e-01,  1.1344e-01, -1.5192e-01, -1.5235e-01, -3.9597e-02,
          2.7769e-01, -3.9996e-02,  1.5967e-01, -9.3138e-02,  3.1897e-01,
         -6.0118e-01,  5.0602e-01,  2.3734e-01,  4.4290e-01, -1.0885e-02,
          4.2429e-01,  1.9443e-01,  1.5243e-02, -1.6272e-01, -1.0017e-02,
          4.7663e-01, -3.0074e-01,  3.5454e-02, -1.0733e-01,  2.7905e-01,
         -4.5928e-02,  2.5662e-01,  7.3165e-02,  8.9913e-02, -4.4064e-02,
         -1.4250e-01, -5.2431e-02, -1.6388e-01, -3.4473e-01,  8.5285e-03,
          2.2386e-01, -1.7713e-01,  1.4601e-01,  1.6427e-01,  9.8675e-02,
         -2.9868e-02, -4.4378e-02, -1.0780e-01,  1.2458e-01,  1.1297e-01,
          6.2973e-02, -7.5824e-02,  1.0505e-01,  1.0781e-01, -2.3044e-02,
          8.1452e-02,  1.8705e-01,  1.5834e-02, -2.0314e-01,  1.4054e-01,
         -9.8531e-02, -2.7178e-02, -5.6171e-02,  9.7762e-02, -6.0580e-02,
         -1.6145e-02, -1.0096e-01,  2.1952e-01,  1.5994e-01,  1.2078e-01,
         -2.1972e-01,  1.3810e-01, -1.5714e-01, -1.5961e-01,  2.7788e-01,
          1.6300e-02,  5.9687e-02, -4.1428e-02,  5.3778e-02, -1.8358e-01,
         -1.6946e-01]], device='cuda:0') tensor(0.2098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
803000 特征值优化 tensor(0.9382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0032e-01,  4.5784e-01,  2.8286e-01, -9.9949e-01,  2.4006e+00,
         -5.7978e-01, -1.1273e+00,  7.1525e-01,  2.6922e+00, -5.1641e-01,
         -2.1578e-01,  1.8099e-01,  1.0210e-01,  1.3014e-02, -1.4736e-02,
          6.5280e-01, -5.7040e-01, -1.1673e-01, -3.1500e-01, -9.0010e-02,
         -1.9626e-01,  5.0496e-01, -2.4754e-02,  7.3509e-01,  1.4661e+00,
         -1.4841e-03,  3.6550e-01, -1.5422e+00, -6.0165e-02,  1.6592e-01,
          2.8283e-01,  1.3603e-01,  3.0792e-01,  2.0826e-01, -2.2140e-01,
         -5.2403e-02,  2.6502e-02,  1.3412e-01,  1.4624e-01,  8.0254e-02,
          6.5759e-01, -6.1134e-03,  1.3197e-01,  3.8827e-01, -3.4626e-01,
         -2.8288e-01, -3.2316e-01,  2.2442e-02,  1.1226e-01,  6.3185e-01,
         -8.6247e-02, -1.2306e-01, -2.4184e-01, -2.2354e-01,  3.9417e-01,
         -2.3926e-01,  2.4124e-01,  2.1439e-01, -2.3936e-01,  1.3083e-01,
         -1.4515e-02, -4.8317e-01, -5.3996e-02, -1.3811e-01,  1.1090e-01,
          2.4090e-01, -2.3564e-01, -2.6861e-01,  8.2660e-03, -2.7140e-01,
         -7.5395e-02, -8.5012e-02, -2.3078e-01, -2.9561e-01, -7.9953e-02,
          3.4246e-01, -1.4789e-01,  2.3831e-01,  1.6457e-01, -6.7767e-02,
         -2.0605e-01, -5.7004e-02,  1.8052e-02,  2.5933e-01,  2.6090e-01,
         -1.5614e-01,  1.0397e-01, -1.6740e-01, -1.6735e-01, -5.7714e-02,
          2.8622e-01, -3.3947e-02,  1.4511e-01, -9.4732e-02,  3.1202e-01,
         -5.9565e-01,  5.1166e-01,  2.3629e-01,  4.3600e-01, -2.1461e-02,
          3.9881e-01,  2.0361e-01,  3.7503e-02, -1.6310e-01, -6.4749e-03,
          4.5995e-01, -2.9562e-01,  1.6890e-02, -1.1963e-01,  2.7775e-01,
         -4.7609e-02,  2.6498e-01,  7.0418e-02,  9.1857e-02, -4.6610e-02,
         -1.4423e-01, -6.5894e-02, -1.5172e-01, -3.4747e-01,  6.8210e-04,
          2.3184e-01, -1.6676e-01,  1.4586e-01,  1.6339e-01,  1.0254e-01,
         -2.6190e-02, -5.3358e-02, -1.2072e-01,  1.3143e-01,  1.0819e-01,
          6.0849e-02, -6.8792e-02,  1.0166e-01,  1.0660e-01, -2.2165e-02,
          8.0386e-02,  1.9231e-01,  1.6108e-02, -2.0549e-01,  1.3799e-01,
         -8.2049e-02, -2.2182e-02, -6.5529e-02,  8.3820e-02, -6.5902e-02,
         -1.1602e-02, -1.0300e-01,  2.1390e-01,  1.6122e-01,  1.1888e-01,
         -2.2942e-01,  1.4497e-01, -1.5870e-01, -1.6383e-01,  2.5739e-01,
          4.7389e-03,  4.6642e-02, -4.8608e-02,  5.0035e-02, -1.9583e-01,
         -1.8895e-01]], device='cuda:0') tensor(0.2153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
804000 特征值优化 tensor(0.8910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1457e-01,  4.7307e-01,  2.7389e-01, -9.9612e-01,  2.4105e+00,
         -5.7456e-01, -1.1175e+00,  7.3113e-01,  2.6992e+00, -5.1353e-01,
         -2.1762e-01,  1.5796e-01,  1.0941e-01,  7.6656e-03, -3.2319e-02,
          6.3780e-01, -5.6220e-01, -1.3566e-01, -3.1322e-01, -7.6760e-02,
         -2.0227e-01,  4.9954e-01, -2.0106e-02,  7.3569e-01,  1.4660e+00,
         -7.2131e-05,  3.6519e-01, -1.5475e+00, -8.2388e-02,  1.5809e-01,
          2.7339e-01,  1.3955e-01,  3.0936e-01,  2.2160e-01, -2.2123e-01,
         -5.4100e-02,  6.6965e-03,  1.3421e-01,  1.5935e-01,  5.4771e-02,
          6.5107e-01, -1.0430e-02,  1.3332e-01,  3.8235e-01, -3.3592e-01,
         -2.8843e-01, -3.3127e-01,  2.4575e-02,  1.1282e-01,  6.4407e-01,
         -8.3943e-02, -1.2321e-01, -2.4746e-01, -2.2518e-01,  3.9188e-01,
         -2.4791e-01,  2.2041e-01,  2.2579e-01, -2.4726e-01,  1.3005e-01,
         -2.0877e-03, -4.8790e-01, -6.5389e-02, -1.3934e-01,  1.0699e-01,
          2.3078e-01, -2.3529e-01, -2.5704e-01,  1.9953e-02, -2.7513e-01,
         -8.1444e-02, -7.3368e-02, -2.3012e-01, -2.9605e-01, -8.4817e-02,
          3.3484e-01, -1.6543e-01,  2.5200e-01,  1.7739e-01, -8.1014e-02,
         -2.0598e-01, -5.8342e-02,  1.4142e-02,  2.7102e-01,  2.4954e-01,
         -1.6793e-01,  1.0760e-01, -1.5874e-01, -1.2926e-01, -5.2046e-02,
          2.7225e-01, -2.7781e-02,  1.5479e-01, -9.4148e-02,  3.2149e-01,
         -5.9597e-01,  4.9883e-01,  2.4233e-01,  4.3961e-01, -1.0938e-02,
          4.3112e-01,  1.9479e-01,  2.2717e-02, -1.6099e-01, -9.4297e-03,
          4.7581e-01, -3.1296e-01,  2.6545e-02, -1.1577e-01,  2.8697e-01,
         -4.4611e-02,  2.5641e-01,  7.0447e-02,  9.3178e-02, -4.9346e-02,
         -1.4640e-01, -4.3843e-02, -1.6803e-01, -3.4525e-01,  9.4069e-03,
          2.3267e-01, -1.8008e-01,  1.5839e-01,  1.6333e-01,  1.0012e-01,
         -2.3576e-02, -4.8426e-02, -1.0965e-01,  1.2754e-01,  1.0864e-01,
          6.9013e-02, -7.8954e-02,  9.9067e-02,  1.1173e-01, -2.1068e-02,
          7.4643e-02,  1.8292e-01,  2.5015e-02, -1.8623e-01,  1.3643e-01,
         -9.9253e-02, -2.8613e-02, -5.9234e-02,  9.9707e-02, -6.6430e-02,
         -1.9576e-02, -1.0553e-01,  2.1472e-01,  1.4915e-01,  1.2195e-01,
         -2.3050e-01,  1.2882e-01, -1.6436e-01, -1.7195e-01,  2.6290e-01,
          1.4368e-02,  6.0510e-02, -4.6314e-02,  5.1377e-02, -1.8833e-01,
         -1.7417e-01]], device='cuda:0') tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
805000 特征值优化 tensor(0.9249, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.3261e-01,  4.6425e-01,  2.6900e-01, -9.9589e-01,  2.3993e+00,
         -5.8046e-01, -1.1182e+00,  7.3569e-01,  2.6951e+00, -5.2261e-01,
         -2.1261e-01,  1.6794e-01,  1.1282e-01,  1.0124e-02, -1.7324e-02,
          6.3293e-01, -5.7407e-01, -1.2298e-01, -3.1810e-01, -7.8880e-02,
         -2.0031e-01,  5.1855e-01, -2.9015e-02,  7.3353e-01,  1.4654e+00,
          2.7472e-04,  3.6030e-01, -1.5450e+00, -7.6017e-02,  1.5791e-01,
          2.7816e-01,  1.3692e-01,  3.0310e-01,  2.1956e-01, -2.1989e-01,
         -5.4928e-02,  1.5417e-02,  1.2877e-01,  1.5535e-01,  6.4885e-02,
          6.5637e-01, -7.2078e-03,  1.3158e-01,  3.8277e-01, -3.3588e-01,
         -2.8851e-01, -3.3415e-01,  1.8252e-02,  1.2047e-01,  6.3602e-01,
         -8.4386e-02, -1.1890e-01, -2.5201e-01, -2.3269e-01,  3.8984e-01,
         -2.3914e-01,  2.2683e-01,  2.1388e-01, -2.4024e-01,  1.2986e-01,
         -1.8989e-02, -4.8594e-01, -6.8641e-02, -1.4363e-01,  1.1084e-01,
          2.3167e-01, -2.3300e-01, -2.6373e-01,  9.4118e-03, -2.7600e-01,
         -7.5758e-02, -7.3134e-02, -2.2999e-01, -2.8607e-01, -7.7495e-02,
          3.3825e-01, -1.6750e-01,  2.5059e-01,  1.6743e-01, -7.3545e-02,
         -1.9909e-01, -6.5523e-02,  2.1333e-02,  2.7043e-01,  2.5740e-01,
         -1.6683e-01,  1.1665e-01, -1.5875e-01, -1.3878e-01, -3.6530e-02,
          2.7547e-01, -2.6667e-02,  1.4701e-01, -9.7764e-02,  3.2211e-01,
         -5.9415e-01,  5.0200e-01,  2.4036e-01,  4.6408e-01, -1.4291e-02,
          4.3424e-01,  1.9935e-01,  2.8813e-02, -1.5616e-01, -1.4944e-03,
          4.7935e-01, -3.0905e-01,  2.4013e-02, -1.0798e-01,  2.8738e-01,
         -4.4667e-02,  2.5317e-01,  7.7563e-02,  8.8885e-02, -4.8828e-02,
         -1.4545e-01, -5.8097e-02, -1.6729e-01, -3.4354e-01,  1.0587e-02,
          2.3018e-01, -1.7837e-01,  1.4232e-01,  1.6361e-01,  9.7092e-02,
         -2.4308e-02, -4.6609e-02, -1.1573e-01,  1.3427e-01,  1.0544e-01,
          6.8578e-02, -7.7749e-02,  1.0025e-01,  1.0498e-01, -2.5571e-02,
          1.0073e-01,  1.7656e-01,  2.5089e-02, -1.8435e-01,  1.5207e-01,
         -8.3363e-02, -3.0009e-02, -6.4224e-02,  9.1081e-02, -8.0260e-02,
         -1.3490e-02, -9.4644e-02,  2.1307e-01,  1.5673e-01,  1.1305e-01,
         -2.3746e-01,  1.3552e-01, -1.5829e-01, -1.6056e-01,  2.6725e-01,
          1.1849e-02,  6.5907e-02, -4.0586e-02,  5.4370e-02, -1.8720e-01,
         -1.7500e-01]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
806000 特征值优化 tensor(0.8998, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0453e-01,  4.6608e-01,  2.6735e-01, -9.8768e-01,  2.3984e+00,
         -5.8176e-01, -1.1442e+00,  7.4177e-01,  2.6985e+00, -5.2243e-01,
         -2.1132e-01,  1.7552e-01,  1.0911e-01,  9.4592e-03, -3.0196e-02,
          6.4098e-01, -5.6237e-01, -1.1142e-01, -3.2078e-01, -9.3742e-02,
         -1.9642e-01,  5.0227e-01, -3.7891e-02,  7.2909e-01,  1.4763e+00,
         -1.2327e-02,  3.5559e-01, -1.5412e+00, -6.2557e-02,  1.7224e-01,
          2.6914e-01,  1.4825e-01,  3.1557e-01,  2.0679e-01, -2.1458e-01,
         -6.0599e-02,  9.1514e-03,  1.2701e-01,  1.4606e-01,  7.3058e-02,
          6.5852e-01, -7.2535e-03,  1.2828e-01,  3.8312e-01, -3.4779e-01,
         -2.7482e-01, -3.2935e-01,  2.7802e-02,  1.2114e-01,  6.3046e-01,
         -8.2720e-02, -1.1940e-01, -2.5226e-01, -2.2201e-01,  3.8091e-01,
         -2.3969e-01,  2.4165e-01,  2.0949e-01, -2.3554e-01,  1.3344e-01,
         -1.7711e-02, -4.8417e-01, -6.7890e-02, -1.4875e-01,  1.0736e-01,
          2.3728e-01, -2.4672e-01, -2.7016e-01,  3.2032e-03, -2.8102e-01,
         -7.5344e-02, -6.9967e-02, -2.2787e-01, -2.9153e-01, -7.8006e-02,
          3.4279e-01, -1.6063e-01,  2.4111e-01,  1.7531e-01, -7.4371e-02,
         -2.0678e-01, -5.9709e-02,  1.5236e-02,  2.6911e-01,  2.6158e-01,
         -1.6215e-01,  1.0802e-01, -1.6214e-01, -1.3701e-01, -4.4209e-02,
          2.7747e-01, -2.2678e-02,  1.4650e-01, -9.2965e-02,  3.1976e-01,
         -5.9495e-01,  5.0669e-01,  2.3649e-01,  4.4697e-01, -1.5617e-02,
          4.1766e-01,  1.9752e-01,  2.3396e-02, -1.5892e-01, -5.1874e-04,
          4.7533e-01, -3.0276e-01,  2.6811e-02, -1.1071e-01,  2.8144e-01,
         -4.5783e-02,  2.6060e-01,  7.7153e-02,  9.2560e-02, -4.0230e-02,
         -1.3741e-01, -5.8073e-02, -1.6083e-01, -3.4237e-01,  1.1444e-02,
          2.3393e-01, -1.6171e-01,  1.5421e-01,  1.6789e-01,  1.0253e-01,
         -2.6716e-02, -4.5853e-02, -1.1901e-01,  1.2974e-01,  1.1378e-01,
          6.7265e-02, -7.2838e-02,  1.0154e-01,  1.0640e-01, -2.8942e-02,
          8.4460e-02,  1.8854e-01,  2.7435e-02, -2.0182e-01,  1.3536e-01,
         -8.3870e-02, -1.7499e-02, -6.5313e-02,  8.2700e-02, -6.0029e-02,
         -1.9917e-02, -1.0479e-01,  2.2295e-01,  1.5117e-01,  1.1493e-01,
         -2.2724e-01,  1.4077e-01, -1.6336e-01, -1.6676e-01,  2.5908e-01,
          8.3816e-03,  5.1892e-02, -3.9562e-02,  4.9026e-02, -1.8988e-01,
         -1.8202e-01]], device='cuda:0') tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
807000 特征值优化 tensor(0.9287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8115,  0.4799,  0.2679, -1.0048,  2.3913, -0.5754, -1.1290,  0.7476,
          2.6943, -0.5226, -0.1945,  0.1832,  0.1092,  0.0202, -0.0237,  0.6216,
         -0.5720, -0.1206, -0.3085, -0.0886, -0.1986,  0.5035, -0.0400,  0.7329,
          1.4643,  0.0070,  0.3512, -1.5435, -0.0841,  0.1672,  0.2701,  0.1442,
          0.2967,  0.2056, -0.2121, -0.0651,  0.0111,  0.1181,  0.1486,  0.0541,
          0.6665, -0.0079,  0.1322,  0.3869, -0.3335, -0.2854, -0.3320,  0.0230,
          0.1244,  0.6289, -0.0843, -0.1229, -0.2443, -0.2262,  0.3890, -0.2421,
          0.2227,  0.2102, -0.2373,  0.1393, -0.0154, -0.4921, -0.0767, -0.1390,
          0.1102,  0.2255, -0.2509, -0.2543,  0.0167, -0.2807, -0.0760, -0.0733,
         -0.2299, -0.2909, -0.0879,  0.3475, -0.1545,  0.2553,  0.1732, -0.0726,
         -0.2046, -0.0621,  0.0203,  0.2785,  0.2551, -0.1668,  0.1115, -0.1563,
         -0.1270, -0.0299,  0.2800, -0.0166,  0.1492, -0.1208,  0.3203, -0.5910,
          0.5071,  0.2487,  0.4555, -0.0042,  0.4348,  0.1913,  0.0109, -0.1600,
          0.0095,  0.4776, -0.2866,  0.0305, -0.1053,  0.2844, -0.0443,  0.2504,
          0.0774,  0.0911, -0.0452, -0.1485, -0.0542, -0.1550, -0.3411,  0.0079,
          0.2326, -0.1798,  0.1513,  0.1691,  0.1013, -0.0286, -0.0458, -0.1111,
          0.1301,  0.1116,  0.0716, -0.0782,  0.0982,  0.1098, -0.0286,  0.0815,
          0.1719,  0.0247, -0.1889,  0.1695, -0.0888, -0.0365, -0.0632,  0.0878,
         -0.0718, -0.0200, -0.0987,  0.2092,  0.1553,  0.1105, -0.2258,  0.1278,
         -0.1607, -0.1652,  0.2683,  0.0074,  0.0612, -0.0387,  0.0540, -0.1881,
         -0.1645]], device='cuda:0') tensor(0.2222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
808000 特征值优化 tensor(0.8895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.2786e-01,  4.7561e-01,  2.7434e-01, -9.9223e-01,  2.3999e+00,
         -5.7027e-01, -1.1156e+00,  7.4782e-01,  2.6817e+00, -5.2296e-01,
         -2.0403e-01,  1.7879e-01,  1.0958e-01,  4.1068e-04, -3.7714e-02,
          6.4291e-01, -5.8325e-01, -1.0972e-01, -3.1000e-01, -8.2415e-02,
         -1.9225e-01,  5.0221e-01, -3.0931e-02,  7.3108e-01,  1.4745e+00,
          1.0628e-02,  3.5708e-01, -1.5532e+00, -6.1609e-02,  1.7704e-01,
          2.7887e-01,  1.4078e-01,  3.0308e-01,  1.9783e-01, -2.1648e-01,
         -5.6249e-02,  1.8586e-02,  1.2157e-01,  1.4430e-01,  7.9629e-02,
          6.6711e-01, -5.6897e-03,  1.2869e-01,  3.8389e-01, -3.5643e-01,
         -2.7786e-01, -3.2849e-01,  2.3029e-02,  1.0407e-01,  6.2540e-01,
         -9.0923e-02, -1.2409e-01, -2.3723e-01, -2.2634e-01,  3.8732e-01,
         -2.3149e-01,  2.5052e-01,  2.0861e-01, -2.3232e-01,  1.3591e-01,
         -9.4300e-03, -4.7979e-01, -5.8945e-02, -1.4270e-01,  1.0700e-01,
          2.4089e-01, -2.3594e-01, -2.6829e-01,  1.1034e-02, -2.8069e-01,
         -7.3523e-02, -7.9180e-02, -2.3116e-01, -2.9524e-01, -8.8021e-02,
          3.4270e-01, -1.4491e-01,  2.4256e-01,  1.6901e-01, -7.2781e-02,
         -2.0801e-01, -5.7338e-02,  1.5891e-02,  2.5997e-01,  2.5916e-01,
         -1.5130e-01,  1.1116e-01, -1.7134e-01, -1.5383e-01, -5.7532e-02,
          2.7606e-01, -1.6147e-02,  1.4384e-01, -1.0713e-01,  3.1748e-01,
         -5.9521e-01,  5.0824e-01,  2.5734e-01,  4.2265e-01, -3.5320e-02,
          4.1321e-01,  2.0478e-01,  3.0265e-02, -1.6890e-01,  4.2625e-04,
          4.5352e-01, -2.9299e-01,  1.7513e-02, -1.2669e-01,  2.7810e-01,
         -4.8863e-02,  2.7066e-01,  7.0977e-02,  9.0931e-02, -5.0618e-02,
         -1.4770e-01, -5.8609e-02, -1.5000e-01, -3.5709e-01, -9.6483e-04,
          2.3171e-01, -1.6387e-01,  1.4568e-01,  1.6819e-01,  1.0249e-01,
         -2.6730e-02, -5.2865e-02, -1.1823e-01,  1.3080e-01,  1.0790e-01,
          6.6479e-02, -7.2437e-02,  1.0366e-01,  1.0571e-01, -2.6935e-02,
          8.8621e-02,  1.8162e-01,  1.5835e-02, -1.9727e-01,  1.4006e-01,
         -7.7818e-02, -2.5962e-02, -5.7124e-02,  7.7022e-02, -6.5273e-02,
         -1.9107e-02, -1.0139e-01,  2.1430e-01,  1.5361e-01,  1.1116e-01,
         -2.2547e-01,  1.3704e-01, -1.6737e-01, -1.5617e-01,  2.5027e-01,
          2.3866e-03,  4.8366e-02, -4.5905e-02,  4.8804e-02, -1.9538e-01,
         -1.9008e-01]], device='cuda:0') tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
809000 特征值优化 tensor(0.8963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1200e-01,  4.8726e-01,  2.7942e-01, -9.8816e-01,  2.3950e+00,
         -5.7217e-01, -1.1245e+00,  7.4882e-01,  2.6689e+00, -5.1921e-01,
         -2.0219e-01,  1.7273e-01,  1.1195e-01, -2.0144e-02, -2.8283e-02,
          6.2729e-01, -5.6842e-01, -1.1671e-01, -3.0207e-01, -7.5935e-02,
         -1.8993e-01,  5.0472e-01, -3.9445e-02,  7.3736e-01,  1.4787e+00,
         -2.5852e-03,  3.5722e-01, -1.5537e+00, -8.5417e-02,  1.7033e-01,
          2.7691e-01,  1.3686e-01,  2.9753e-01,  2.1522e-01, -2.2652e-01,
         -6.0446e-02,  2.9129e-02,  1.2475e-01,  1.4950e-01,  6.2832e-02,
          6.6827e-01, -9.3406e-03,  1.2946e-01,  3.7975e-01, -3.5148e-01,
         -2.8140e-01, -3.2891e-01,  2.4232e-02,  1.1392e-01,  6.2792e-01,
         -8.7952e-02, -1.1911e-01, -2.5262e-01, -2.2764e-01,  3.8802e-01,
         -2.4203e-01,  2.2256e-01,  2.0268e-01, -2.2616e-01,  1.4377e-01,
         -1.3698e-02, -4.8461e-01, -6.4072e-02, -1.3652e-01,  1.0926e-01,
          2.3938e-01, -2.2977e-01, -2.6428e-01,  2.3252e-02, -2.8306e-01,
         -7.0422e-02, -6.7620e-02, -2.3404e-01, -2.8747e-01, -8.6338e-02,
          3.3860e-01, -1.6207e-01,  2.4394e-01,  1.7791e-01, -7.9607e-02,
         -2.0327e-01, -5.8358e-02,  1.5789e-02,  2.7364e-01,  2.5542e-01,
         -1.5407e-01,  1.2891e-01, -1.5934e-01, -1.3615e-01, -4.7432e-02,
          2.6114e-01, -8.5396e-03,  1.5824e-01, -9.9454e-02,  3.2727e-01,
         -5.9793e-01,  5.0542e-01,  2.5677e-01,  4.3376e-01, -4.1685e-02,
          4.3007e-01,  2.0140e-01,  1.5143e-02, -1.6195e-01,  3.1226e-03,
          4.6618e-01, -3.1113e-01,  3.1171e-02, -1.1737e-01,  2.8428e-01,
         -4.6539e-02,  2.5371e-01,  7.9131e-02,  8.2644e-02, -5.3886e-02,
         -1.3616e-01, -4.6705e-02, -1.6413e-01, -3.4775e-01,  1.5663e-02,
          2.2974e-01, -1.7669e-01,  1.5493e-01,  1.6432e-01,  9.9524e-02,
         -2.9635e-02, -4.3903e-02, -1.0744e-01,  1.2466e-01,  1.0431e-01,
          6.9299e-02, -8.0540e-02,  9.8720e-02,  1.1160e-01, -2.4413e-02,
          8.5521e-02,  1.8120e-01,  2.3135e-02, -1.9736e-01,  1.4103e-01,
         -8.3843e-02, -3.7151e-02, -6.0592e-02,  8.6813e-02, -6.1574e-02,
         -2.2724e-02, -1.0239e-01,  2.2001e-01,  1.5231e-01,  1.2033e-01,
         -2.3392e-01,  1.3265e-01, -1.6086e-01, -1.5474e-01,  2.7272e-01,
          1.3238e-02,  6.1380e-02, -3.8634e-02,  6.0947e-02, -1.8870e-01,
         -1.7073e-01]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
810000 特征值优化 tensor(0.8965, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1311e-01,  4.7893e-01,  2.7158e-01, -9.8623e-01,  2.4010e+00,
         -5.6411e-01, -1.1158e+00,  7.4938e-01,  2.6698e+00, -5.1651e-01,
         -2.0258e-01,  1.6495e-01,  1.1213e-01, -2.8667e-03, -2.9062e-02,
          6.3103e-01, -5.7289e-01, -1.1494e-01, -3.1335e-01, -7.4671e-02,
         -1.8599e-01,  5.0996e-01, -3.1414e-02,  7.3451e-01,  1.4660e+00,
          2.0645e-03,  3.5951e-01, -1.5458e+00, -8.4089e-02,  1.7524e-01,
          2.7860e-01,  1.4032e-01,  3.0034e-01,  2.2441e-01, -2.2441e-01,
         -5.8218e-02,  2.0928e-02,  1.3215e-01,  1.4869e-01,  6.9132e-02,
          6.7108e-01, -9.7220e-03,  1.3125e-01,  3.8363e-01, -3.5429e-01,
         -2.7531e-01, -3.3673e-01,  1.4923e-02,  1.1323e-01,  6.3513e-01,
         -8.9850e-02, -1.1823e-01, -2.5533e-01, -2.3193e-01,  3.8845e-01,
         -2.5275e-01,  2.1133e-01,  2.0054e-01, -2.3167e-01,  1.3683e-01,
         -1.8815e-02, -4.8799e-01, -6.4218e-02, -1.3585e-01,  1.1265e-01,
          2.3523e-01, -2.3255e-01, -2.6609e-01,  1.5268e-02, -2.8460e-01,
         -7.7664e-02, -6.7826e-02, -2.3772e-01, -2.7794e-01, -7.8326e-02,
          3.4627e-01, -1.6911e-01,  2.5227e-01,  1.6412e-01, -7.6333e-02,
         -1.9825e-01, -5.5755e-02,  2.6626e-02,  2.8137e-01,  2.5386e-01,
         -1.6250e-01,  1.2691e-01, -1.6407e-01, -1.2888e-01, -5.0927e-02,
          2.7169e-01, -5.8610e-03,  1.5104e-01, -1.0471e-01,  3.2254e-01,
         -5.9372e-01,  5.0311e-01,  2.6154e-01,  4.3262e-01, -4.0068e-02,
          4.2032e-01,  2.0001e-01,  1.7672e-02, -1.5901e-01,  4.5460e-04,
          4.7226e-01, -3.0428e-01,  2.6439e-02, -1.2049e-01,  2.8239e-01,
         -4.6231e-02,  2.4738e-01,  7.6012e-02,  8.6282e-02, -5.3220e-02,
         -1.4629e-01, -5.3560e-02, -1.6161e-01, -3.4040e-01,  1.8197e-02,
          2.3226e-01, -1.7784e-01,  1.5547e-01,  1.6199e-01,  1.0205e-01,
         -3.0448e-02, -3.9683e-02, -1.1099e-01,  1.3178e-01,  1.0577e-01,
          6.2895e-02, -7.6871e-02,  9.5587e-02,  1.0939e-01, -1.9823e-02,
          1.1004e-01,  1.8650e-01,  2.4269e-02, -1.9875e-01,  1.3843e-01,
         -8.7874e-02, -3.3787e-02, -6.2894e-02,  8.9344e-02, -6.7016e-02,
         -1.8823e-02, -9.7077e-02,  2.2092e-01,  1.6242e-01,  1.2500e-01,
         -2.3600e-01,  1.2920e-01, -1.5192e-01, -1.5725e-01,  2.7326e-01,
          1.4537e-02,  6.5037e-02, -3.9314e-02,  5.6300e-02, -1.9185e-01,
         -1.7212e-01]], device='cuda:0') tensor(0.2200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
811000 特征值优化 tensor(0.8847, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.0243e-01,  4.7857e-01,  2.8454e-01, -1.0031e+00,  2.3967e+00,
         -5.6696e-01, -1.1161e+00,  7.4850e-01,  2.6765e+00, -5.2616e-01,
         -1.9748e-01,  1.8437e-01,  1.2018e-01, -8.6272e-03, -2.2399e-02,
          6.4961e-01, -5.7047e-01, -1.1442e-01, -3.0976e-01, -8.4970e-02,
         -2.0348e-01,  5.1081e-01, -3.7998e-02,  7.3640e-01,  1.4797e+00,
          5.6467e-04,  3.4730e-01, -1.5557e+00, -8.2453e-02,  1.7173e-01,
          2.7541e-01,  1.4614e-01,  2.7319e-01,  2.0585e-01, -2.2902e-01,
         -5.5602e-02,  1.2345e-02,  1.2067e-01,  1.5391e-01,  7.6997e-02,
          6.6360e-01, -6.7868e-03,  1.2729e-01,  3.8804e-01, -3.5483e-01,
         -2.7310e-01, -3.3504e-01,  1.9728e-02,  1.1480e-01,  6.2470e-01,
         -8.8877e-02, -1.0791e-01, -2.5699e-01, -2.2386e-01,  3.7940e-01,
         -2.3123e-01,  2.4004e-01,  2.0197e-01, -2.1650e-01,  1.3600e-01,
         -1.2932e-02, -4.6740e-01, -6.4036e-02, -1.4854e-01,  1.0114e-01,
          2.4524e-01, -2.3435e-01, -2.6532e-01,  2.1042e-02, -2.8999e-01,
         -6.9013e-02, -6.9518e-02, -2.3634e-01, -2.8962e-01, -8.9040e-02,
          3.4829e-01, -1.4935e-01,  2.4272e-01,  1.7106e-01, -7.6589e-02,
         -2.1039e-01, -5.8884e-02,  2.2859e-02,  2.5492e-01,  2.5669e-01,
         -1.6054e-01,  1.2983e-01, -1.6174e-01, -1.5063e-01, -4.1192e-02,
          2.7780e-01, -7.5292e-03,  1.4987e-01, -1.0233e-01,  3.2023e-01,
         -5.9734e-01,  5.1286e-01,  2.5753e-01,  4.4393e-01, -3.4174e-02,
          4.1827e-01,  2.0969e-01,  2.2878e-02, -1.6872e-01, -2.0059e-04,
          4.3879e-01, -3.0887e-01,  7.9814e-03, -1.3023e-01,  2.8135e-01,
         -5.0043e-02,  2.6825e-01,  7.1751e-02,  7.8799e-02, -5.2941e-02,
         -1.4422e-01, -4.5524e-02, -1.6525e-01, -3.4723e-01,  1.0411e-02,
          2.3996e-01, -1.5581e-01,  1.6117e-01,  1.6356e-01,  9.9733e-02,
         -2.7291e-02, -5.1439e-02, -1.1711e-01,  1.3158e-01,  1.0963e-01,
          6.9652e-02, -7.7426e-02,  1.0124e-01,  1.0599e-01, -2.3312e-02,
          1.0427e-01,  1.7999e-01,  1.3099e-02, -2.0320e-01,  1.5394e-01,
         -6.3789e-02, -3.5973e-02, -6.0484e-02,  7.8173e-02, -6.5352e-02,
         -1.8530e-02, -1.0432e-01,  2.0705e-01,  1.4970e-01,  1.1288e-01,
         -2.2778e-01,  1.3336e-01, -1.6571e-01, -1.5548e-01,  2.6769e-01,
          5.6796e-04,  4.9441e-02, -4.8633e-02,  4.9257e-02, -1.8983e-01,
         -1.6528e-01]], device='cuda:0') tensor(0.2115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
812000 特征值优化 tensor(0.8902, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8086,  0.4849,  0.2810, -0.9971,  2.4047, -0.5744, -1.1380,  0.7443,
          2.6883, -0.5197, -0.2161,  0.1685,  0.1120,  0.0053, -0.0259,  0.6159,
         -0.5699, -0.1169, -0.3117, -0.0757, -0.2015,  0.5074, -0.0345,  0.7357,
          1.4717, -0.0060,  0.3640, -1.5493, -0.0872,  0.1655,  0.2700,  0.1426,
          0.2997,  0.2214, -0.2287, -0.0569,  0.0136,  0.1188,  0.1544,  0.0629,
          0.6635, -0.0115,  0.1309,  0.3841, -0.3459, -0.2862, -0.3369,  0.0176,
          0.1224,  0.6316, -0.0889, -0.1120, -0.2519, -0.2284,  0.3881, -0.2395,
          0.2197,  0.2122, -0.2247,  0.1340, -0.0149, -0.4753, -0.0663, -0.1456,
          0.1044,  0.2362, -0.2328, -0.2592,  0.0266, -0.2798, -0.0761, -0.0643,
         -0.2315, -0.2785, -0.0889,  0.3451, -0.1653,  0.2546,  0.1800, -0.0796,
         -0.2012, -0.0584,  0.0255,  0.2667,  0.2555, -0.1648,  0.1199, -0.1586,
         -0.1319, -0.0428,  0.2657, -0.0115,  0.1563, -0.1038,  0.3235, -0.5947,
          0.4991,  0.2456,  0.4501, -0.0270,  0.4235,  0.1982,  0.0192, -0.1603,
         -0.0063,  0.4738, -0.3124,  0.0318, -0.1228,  0.2891, -0.0448,  0.2577,
          0.0768,  0.0858, -0.0549, -0.1460, -0.0462, -0.1681, -0.3447,  0.0214,
          0.2326, -0.1770,  0.1632,  0.1638,  0.1000, -0.0266, -0.0421, -0.1099,
          0.1242,  0.1063,  0.0691, -0.0827,  0.1037,  0.1094, -0.0211,  0.0911,
          0.1799,  0.0303, -0.1912,  0.1588, -0.0806, -0.0435, -0.0662,  0.0936,
         -0.0647, -0.0176, -0.0971,  0.2079,  0.1545,  0.1198, -0.2327,  0.1335,
         -0.1583, -0.1662,  0.2759,  0.0077,  0.0500, -0.0400,  0.0588, -0.1922,
         -0.1647]], device='cuda:0') tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
813000 特征值优化 tensor(0.8963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.1086e-01,  4.7399e-01,  2.7608e-01, -9.9002e-01,  2.3962e+00,
         -5.6934e-01, -1.1246e+00,  7.4704e-01,  2.6809e+00, -5.1830e-01,
         -2.2494e-01,  1.7411e-01,  1.1357e-01,  6.4407e-03, -2.2841e-02,
          6.2270e-01, -5.8148e-01, -1.1901e-01, -3.1276e-01, -7.0594e-02,
         -1.9230e-01,  4.9982e-01, -2.9027e-02,  7.4112e-01,  1.4756e+00,
          1.4907e-03,  3.5511e-01, -1.5478e+00, -8.7023e-02,  1.6340e-01,
          2.7591e-01,  1.3344e-01,  3.0334e-01,  2.1733e-01, -2.2909e-01,
         -5.3865e-02,  1.4137e-02,  1.2394e-01,  1.5334e-01,  5.7433e-02,
          6.6661e-01, -9.6789e-03,  1.3194e-01,  3.8670e-01, -3.4138e-01,
         -2.8779e-01, -3.3392e-01,  1.2909e-02,  1.1776e-01,  6.3532e-01,
         -9.0004e-02, -1.2150e-01, -2.5215e-01, -2.2816e-01,  3.8753e-01,
         -2.4340e-01,  2.2487e-01,  2.1174e-01, -2.2794e-01,  1.3737e-01,
         -9.9652e-03, -4.8215e-01, -5.8990e-02, -1.4146e-01,  1.0720e-01,
          2.4198e-01, -2.2500e-01, -2.6159e-01,  2.7248e-02, -2.7862e-01,
         -7.3215e-02, -6.9741e-02, -2.2827e-01, -2.8253e-01, -9.2561e-02,
          3.4375e-01, -1.6617e-01,  2.4945e-01,  1.6829e-01, -7.8037e-02,
         -2.0336e-01, -5.7164e-02,  2.5492e-02,  2.6835e-01,  2.5688e-01,
         -1.6020e-01,  1.2299e-01, -1.5980e-01, -1.2864e-01, -4.9471e-02,
          2.6984e-01, -1.4200e-02,  1.5765e-01, -1.0747e-01,  3.1994e-01,
         -5.9483e-01,  4.9959e-01,  2.3993e-01,  4.4701e-01, -2.9118e-02,
          4.2189e-01,  1.9453e-01,  1.8523e-02, -1.5705e-01, -1.0832e-02,
          4.7498e-01, -3.1386e-01,  3.1974e-02, -1.2073e-01,  2.9018e-01,
         -4.5399e-02,  2.5456e-01,  6.7793e-02,  8.6888e-02, -4.8391e-02,
         -1.4334e-01, -5.3671e-02, -1.6419e-01, -3.4612e-01,  1.9538e-02,
          2.3281e-01, -1.7187e-01,  1.5482e-01,  1.6063e-01,  1.0218e-01,
         -2.6967e-02, -4.6718e-02, -1.1395e-01,  1.2443e-01,  1.0431e-01,
          6.5594e-02, -7.6938e-02,  1.0201e-01,  1.1352e-01, -2.1709e-02,
          9.5967e-02,  1.8091e-01,  1.9182e-02, -1.9520e-01,  1.5485e-01,
         -8.7515e-02, -4.1099e-02, -6.8522e-02,  9.0737e-02, -6.4489e-02,
         -2.0180e-02, -1.0063e-01,  2.0624e-01,  1.5803e-01,  1.2003e-01,
         -2.3056e-01,  1.2961e-01, -1.5809e-01, -1.6162e-01,  2.7763e-01,
          8.5631e-03,  5.3734e-02, -4.5541e-02,  5.0791e-02, -1.9077e-01,
         -1.6682e-01]], device='cuda:0') tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
814000 特征值优化 tensor(0.9210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.2536e-01,  4.7288e-01,  2.6399e-01, -9.9885e-01,  2.4123e+00,
         -5.7301e-01, -1.1054e+00,  7.4314e-01,  2.6796e+00, -5.2168e-01,
         -2.1120e-01,  1.6519e-01,  1.1197e-01,  1.4618e-03, -2.6390e-02,
          6.0768e-01, -5.7912e-01, -1.2393e-01, -3.1228e-01, -7.2967e-02,
         -1.9818e-01,  5.0023e-01, -2.9314e-02,  7.3359e-01,  1.4714e+00,
          2.2168e-03,  3.6923e-01, -1.5518e+00, -8.1497e-02,  1.7092e-01,
          2.6080e-01,  1.4348e-01,  3.0846e-01,  2.1594e-01, -2.2107e-01,
         -5.5393e-02,  1.2539e-02,  1.2778e-01,  1.5312e-01,  5.8456e-02,
          6.6156e-01, -1.0169e-02,  1.3376e-01,  3.8013e-01, -3.4465e-01,
         -2.8385e-01, -3.3343e-01,  1.9710e-02,  1.1144e-01,  6.3796e-01,
         -8.8096e-02, -1.2416e-01, -2.5919e-01, -2.2415e-01,  3.8887e-01,
         -2.3706e-01,  2.2346e-01,  2.1230e-01, -2.3279e-01,  1.3390e-01,
         -1.1722e-02, -4.8080e-01, -6.7502e-02, -1.4219e-01,  1.1287e-01,
          2.3803e-01, -2.3483e-01, -2.6116e-01,  2.3851e-02, -2.7997e-01,
         -7.5915e-02, -6.7834e-02, -2.3135e-01, -2.9653e-01, -7.9586e-02,
          3.4694e-01, -1.5807e-01,  2.5494e-01,  1.6772e-01, -7.7199e-02,
         -2.0273e-01, -6.2245e-02,  1.7355e-02,  2.7654e-01,  2.5066e-01,
         -1.6138e-01,  1.0486e-01, -1.6025e-01, -1.3263e-01, -5.4858e-02,
          2.7080e-01, -1.7163e-02,  1.4758e-01, -1.0117e-01,  3.2286e-01,
         -5.9144e-01,  5.1136e-01,  2.4711e-01,  4.4880e-01, -2.8059e-02,
          4.2030e-01,  1.9734e-01,  2.3820e-02, -1.6226e-01,  1.7873e-03,
          4.6663e-01, -3.1333e-01,  3.3128e-02, -1.1293e-01,  2.8378e-01,
         -4.3702e-02,  2.5473e-01,  8.3600e-02,  8.9581e-02, -4.7532e-02,
         -1.4511e-01, -5.1663e-02, -1.6219e-01, -3.4464e-01,  1.3210e-02,
          2.3032e-01, -1.7194e-01,  1.4939e-01,  1.6713e-01,  9.7171e-02,
         -2.6715e-02, -4.6319e-02, -1.1076e-01,  1.3310e-01,  1.0818e-01,
          7.1194e-02, -7.7985e-02,  9.8655e-02,  1.1161e-01, -2.2465e-02,
          7.9074e-02,  1.8509e-01,  2.7796e-02, -1.8758e-01,  1.4694e-01,
         -8.2788e-02, -2.6867e-02, -5.9420e-02,  9.2506e-02, -7.3627e-02,
         -2.3735e-02, -9.6671e-02,  2.1596e-01,  1.5108e-01,  1.1372e-01,
         -2.3320e-01,  1.2301e-01, -1.5537e-01, -1.6011e-01,  2.6000e-01,
          7.6879e-03,  5.8192e-02, -4.2388e-02,  5.7448e-02, -1.9034e-01,
         -1.7887e-01]], device='cuda:0') tensor(0.2097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
815000 特征值优化 tensor(43.9955, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0345,  0.5336,  0.2300, -0.0165, -1.6520,  0.4682, -0.3495, -0.0055,
          2.0640, -0.6634, -1.1070, -0.9264, -0.2410, -0.7804, -0.4740, -0.6254,
          1.2778, -0.4215,  0.4975,  0.4060,  0.4035,  0.1516, -1.0928,  1.4655,
         -0.4698,  1.2931, -0.1015,  1.7162,  0.6156,  1.1742, -0.3335,  1.8227,
         -0.3799, -1.1114, -0.1283,  0.1245, -0.0756, -0.3835, -0.1325, -0.0854,
          1.5436, -0.2693, -1.0743,  0.3869,  0.2594, -1.1034, -0.5850, -1.6140,
          1.2059, -0.2409, -0.6248,  0.1610, -1.3379, -0.5723,  0.8404, -1.5855,
          1.1248,  0.5970,  0.6005, -1.1972,  1.2432,  0.6090,  1.5147, -0.3360,
         -2.7807,  0.1527,  0.2840, -0.8765, -0.1512,  0.0936, -0.2727,  0.3045,
         -0.9645,  0.9058, -0.3567, -0.0860,  0.4013, -0.3277, -0.7697,  1.5917,
          0.6879, -0.9858, -0.1158, -1.5555, -1.6555, -0.1325, -1.6175, -1.0760,
         -0.0873, -0.7180,  0.6842, -0.6599, -1.1524,  0.7586,  0.8301,  0.0524,
         -0.2796, -0.6194, -1.2680, -0.5902, -0.0541,  1.0583,  0.8371,  1.0692,
         -0.3426,  0.5928,  1.1103,  0.5249, -1.3917,  1.5006,  0.7209, -0.8709,
         -0.3952,  0.2101, -1.3389, -1.6907,  0.4383, -0.5191, -0.4874,  0.2369,
         -1.1318,  0.0242, -0.3503, -0.2866, -1.8613, -2.6655,  0.2389,  0.1271,
          0.4148, -0.2224,  0.2192,  0.3742, -1.0060, -1.4405, -0.6409,  0.7862,
          1.1459,  1.6316, -0.0480,  1.0473, -0.2917, -1.8625, -0.7745, -0.1130,
         -0.0229,  0.4981, -0.3227, -0.4539,  0.6595,  1.1481,  0.3590, -0.2503,
          1.2995, -0.9150, -0.2097,  0.9601, -1.2000, -1.3232, -0.5445,  0.7738,
          0.7264]], device='cuda:0') tensor(0.2308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
816000 特征值优化 tensor(10.2534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2161,  1.1127,  0.1899, -0.8803, -0.3545,  1.3782, -0.3495,  0.1667,
          1.1753, -1.2059, -1.1284, -0.1193, -0.5412, -0.0698, -0.2693,  0.4199,
          0.1285, -0.2414,  0.4991,  1.1974, -0.2082,  0.6790, -0.5183,  0.5971,
          0.1921,  0.4845, -0.1179,  0.8765,  0.3105,  0.3314, -0.0923,  0.7504,
         -0.0246, -0.3460,  0.0672,  0.0366,  0.1073, -0.1238,  0.2696, -0.1842,
          0.4885,  0.0709, -0.1479,  0.2299,  0.1092, -0.2503,  0.1379, -0.6328,
          0.4662, -0.2088, -0.2635,  0.0668, -0.5288, -0.0236,  0.1626, -0.6751,
          0.3360,  0.2777,  0.7698, -0.4777,  0.5707,  0.0792,  0.6971,  0.0294,
         -1.6035,  0.1596, -0.1675, -0.1689,  0.0501,  0.1978,  0.0166, -0.0463,
         -0.2667,  0.2684,  0.1333,  0.0814, -0.0344, -0.2280, -0.1377,  0.5252,
          0.1842, -0.2636, -0.0939, -0.7050, -0.7118,  0.0471, -0.6602, -0.3111,
         -0.1068, -0.3902,  0.3587, -0.0380, -0.1753,  0.1239,  0.2178, -0.4903,
         -0.0568,  0.0268, -0.3603,  0.1593, -0.5081,  0.3525,  0.2237,  0.1805,
         -0.2336, -0.0067,  0.6049,  0.1714, -0.5953,  0.7596,  0.2487, -0.1791,
          0.3104,  0.0230, -0.2410, -0.8631,  0.0258,  0.0063,  0.0604,  0.1234,
         -0.4847, -0.2338, -0.1154,  0.0964, -0.9076, -1.6010,  0.0906,  0.2380,
          0.1375,  0.0777,  0.4128, -0.0879, -0.2941, -0.6037, -0.1388, -0.0351,
          0.3335,  0.6309, -0.3152,  0.1793,  0.2252, -0.6195, -0.1850,  0.1034,
         -0.0693,  0.2997,  0.0353,  0.1146, -0.0196,  0.1810,  0.0816,  0.2259,
          0.2652, -0.2132,  0.0873,  0.1557, -0.3108, -0.3941, -0.0391,  0.0968,
          0.1003]], device='cuda:0') tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
817000 特征值优化 tensor(3.2772, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5914e+00,  1.3667e+00, -4.6054e-01, -1.1099e+00, -4.3772e-01,
          2.1103e+00, -5.9822e-01,  2.7580e-01,  3.3336e-01, -1.0121e+00,
         -4.2241e-01,  2.2237e-01, -2.2575e-01,  1.9348e-01, -9.1759e-02,
          5.6658e-01, -7.3849e-02, -5.0949e-01,  3.6156e-01,  8.3444e-01,
         -1.9752e-01,  6.5192e-01, -4.9379e-01,  4.8917e-01,  5.2748e-02,
          3.6280e-01, -4.5661e-02,  4.5955e-01,  7.7007e-02,  2.4758e-01,
         -3.0585e-03,  2.0696e-01, -2.3728e-01, -2.3419e-01,  2.3432e-01,
          2.2705e-01, -7.3874e-02, -1.6154e-01,  3.1672e-01, -3.8879e-01,
          2.9821e-01,  6.2212e-02, -1.3538e-01,  1.6071e-01,  2.9096e-01,
         -2.6615e-02,  2.3277e-01, -2.5766e-01,  2.6788e-01, -2.5613e-01,
         -4.2205e-01,  9.2380e-02, -1.9117e-01, -4.7512e-02,  1.0747e-01,
         -2.6121e-01,  4.5146e-01,  5.0864e-01,  8.6693e-01, -5.3605e-01,
          1.9612e-01,  9.9564e-02,  1.7349e-01, -6.2019e-02, -9.2242e-01,
         -6.0452e-02, -1.2512e-02,  4.5717e-02, -7.3979e-02,  9.5700e-02,
          3.3755e-01, -2.1032e-01, -1.0831e-01, -6.9998e-02,  1.2759e-01,
         -2.1816e-01, -2.7704e-01, -4.1041e-01, -1.2680e-01,  2.3412e-01,
          6.1442e-02, -2.8946e-02, -2.5437e-01, -3.2623e-01, -2.7912e-01,
          8.9311e-02, -2.3740e-01, -2.8489e-01,  3.1162e-02, -2.3798e-02,
          7.7076e-03,  4.2803e-01,  6.6875e-02,  4.7420e-01,  2.2969e-01,
         -3.0053e-01, -2.3005e-01,  1.9546e-01, -1.4278e-01,  2.8384e-01,
         -2.8569e-01,  2.4187e-01, -9.6751e-03, -8.7717e-02, -1.5718e-01,
          1.6074e-01,  2.0961e-01,  2.1346e-01, -4.5727e-02,  4.2691e-01,
          2.2504e-01, -3.2670e-02,  7.4243e-02, -3.1687e-02, -1.4406e-01,
         -3.9807e-01, -1.7984e-01,  1.0351e-01,  5.1844e-02,  1.2921e-01,
         -1.1190e-01, -9.9799e-02,  2.0402e-02,  1.0594e-01, -3.6842e-01,
         -8.5596e-01,  2.3002e-03,  2.2644e-01, -1.2224e-01,  8.3802e-02,
          2.9889e-01, -4.1761e-02, -8.2277e-02, -2.1320e-01, -8.7179e-02,
          4.3602e-02, -5.4602e-02,  2.4921e-01, -5.8447e-02,  3.4132e-01,
          7.2736e-02, -5.2381e-01,  4.3067e-02, -1.4060e-01,  1.0270e-01,
          3.3261e-01, -3.0202e-02, -9.0039e-02,  9.3059e-02, -5.4055e-02,
          8.7101e-02,  2.5099e-01, -1.1865e-01, -9.1156e-03,  6.3444e-02,
         -7.7924e-02,  9.7427e-02,  2.6391e-01, -1.7713e-01,  5.0225e-02,
          1.8095e-02]], device='cuda:0') tensor(0.2376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
818000 特征值优化 tensor(1.9547, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3950e+00,  9.3776e-01, -2.9845e-01, -1.2568e+00, -1.1456e+00,
          2.5759e+00, -9.0574e-01,  4.9825e-01,  3.5758e-01, -7.9381e-01,
         -2.1311e-01,  5.8191e-01, -2.4064e-01,  4.0088e-01, -1.2896e-01,
          2.7881e-01,  6.0664e-02, -8.6035e-01,  1.0423e-01,  6.3107e-01,
         -8.9028e-01,  7.7963e-01, -4.1201e-01,  4.4073e-01, -1.3701e-01,
          1.9657e-01, -4.9522e-02,  5.3906e-01, -2.6694e-01,  2.9144e-01,
          2.2764e-02,  1.0181e-01, -2.8935e-01, -4.3638e-01,  2.1177e-01,
          3.1887e-01, -1.8743e-01, -3.4041e-01,  1.3264e-01, -2.4037e-01,
          4.8203e-01,  4.0494e-02, -1.2730e-01,  1.2622e-01,  8.9624e-02,
         -1.4738e-01,  2.0872e-01, -2.0888e-01,  1.6840e-01, -1.2820e-01,
         -5.2926e-01,  3.7507e-02, -1.7812e-01, -1.7353e-01,  2.0935e-01,
         -4.7501e-02,  3.0272e-01,  5.7238e-01,  8.4944e-01, -4.1384e-01,
          2.9955e-02,  2.3628e-02,  1.1923e-02, -4.6312e-02, -6.6631e-01,
          1.1235e-01,  1.1080e-01,  5.0096e-02, -7.2798e-02,  3.6157e-03,
          4.6081e-01, -1.4483e-01, -1.6582e-01, -2.2529e-01, -8.6911e-02,
         -1.3202e-01, -1.9417e-01, -2.7287e-01, -4.8891e-02,  8.0594e-02,
          1.4920e-02,  4.2590e-02, -2.4923e-01, -2.3591e-01, -3.1964e-01,
          1.0725e-01, -3.1755e-01, -4.0460e-01, -3.7069e-01,  5.8285e-02,
          4.8232e-02,  1.0188e+00, -1.7504e-01,  2.8586e-01,  1.4381e-01,
         -2.9060e-01, -5.1412e-03,  4.3162e-01, -1.1509e-01,  2.6602e-01,
         -1.6332e-01,  1.0451e-01, -2.6669e-02, -1.7458e-01, -5.6718e-02,
          1.7631e-01, -1.8548e-03,  1.0251e-01, -1.0964e-01,  2.5258e-01,
          1.3592e-01,  3.7080e-02,  8.4168e-02, -9.3162e-02, -9.8331e-02,
         -3.1590e-01, -1.2537e-01,  2.0071e-02, -1.7683e-02, -7.7158e-03,
         -4.0186e-03,  1.6909e-02, -1.1044e-01, -2.4283e-02, -3.2373e-01,
         -4.8188e-01,  4.5507e-02,  3.0310e-01, -6.3384e-02,  7.4572e-02,
          2.1891e-01, -4.4422e-02, -1.4741e-02, -1.3198e-01, -3.9731e-02,
          7.8411e-02, -2.3195e-02,  8.0637e-02,  1.9770e-01,  8.8352e-02,
         -1.5589e-01, -4.3559e-01,  8.6335e-02, -3.6106e-02,  1.8305e-02,
          3.3104e-01, -1.3087e-01,  8.7559e-02,  2.2012e-01, -3.1313e-01,
         -1.3078e-01,  6.2199e-02, -3.7321e-02, -1.0301e-01,  7.7373e-02,
         -1.6701e-01,  1.3876e-01,  4.3476e-01, -2.4955e-01,  1.7580e-01,
         -8.1026e-02]], device='cuda:0') tensor(0.2317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
819000 特征值优化 tensor(1.8646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3748e+00,  7.7961e-01, -1.4553e-01, -1.2729e+00, -1.3425e+00,
          2.7227e+00, -9.9046e-01,  7.0666e-01,  3.1938e-01, -6.4828e-01,
         -1.3626e-01,  7.9670e-01, -1.9989e-01,  2.3289e-01, -2.5561e-01,
          2.1497e-01,  9.8600e-02, -9.1793e-01,  4.7016e-02,  5.5592e-01,
         -1.0612e+00,  7.7786e-01, -3.5561e-01,  3.5013e-01, -2.4524e-01,
          1.7856e-01, -9.4165e-02,  4.1142e-01, -1.9113e-01,  3.5925e-01,
          6.0540e-02,  6.9766e-02, -2.5266e-01, -4.3032e-01,  1.8249e-01,
          2.9543e-01, -1.4722e-01, -3.6146e-01,  6.2046e-02, -2.7123e-01,
          5.5202e-01,  4.2772e-02, -1.2848e-01,  1.9240e-01,  3.8761e-02,
         -1.5916e-01,  1.4500e-01, -1.7379e-01,  1.1745e-01, -1.2649e-01,
         -5.5979e-01,  8.5028e-02, -1.8087e-01, -2.4840e-01,  1.9320e-01,
          3.9627e-02,  2.6572e-01,  5.3840e-01,  8.4310e-01, -3.5428e-01,
         -1.1495e-01, -2.8891e-02,  7.5071e-03, -2.0540e-02, -6.0164e-01,
          1.3054e-01,  1.1966e-01,  2.1732e-02, -4.8815e-02, -5.3326e-02,
          4.6557e-01, -1.2220e-01, -1.4820e-01, -2.2237e-01, -8.6269e-02,
         -9.8410e-02, -1.7736e-01, -3.0867e-01, -3.7876e-02,  4.5251e-02,
         -3.2457e-04,  6.9895e-02, -2.1412e-01, -2.5862e-01, -3.8003e-01,
          1.4934e-01, -2.7187e-01, -4.6753e-01, -3.4904e-01,  1.0132e-01,
         -7.4734e-03,  1.0271e+00, -2.1081e-01,  2.2438e-01,  1.2215e-01,
         -3.1250e-01,  5.2084e-02,  3.3366e-01, -5.1039e-02,  1.5565e-01,
         -1.6277e-01,  1.4895e-01, -1.3208e-01, -1.6469e-01, -1.2038e-02,
          3.5963e-01, -8.2509e-02,  1.4836e-01, -1.3214e-01,  2.0072e-01,
          1.1204e-01,  1.3196e-01,  1.2773e-01, -7.5204e-02, -8.0894e-02,
         -3.0334e-01, -1.1326e-01, -6.6774e-03, -3.8070e-02,  2.5346e-02,
         -4.6574e-02,  4.4550e-02, -1.2157e-01, -6.6108e-02, -3.3073e-01,
         -3.2103e-01,  2.6378e-02,  3.1766e-01, -2.8790e-02,  2.5869e-02,
          2.4042e-01,  3.8726e-03,  1.2096e-03, -4.5061e-02,  3.4632e-03,
          4.8775e-02, -4.2918e-02,  4.6315e-04,  2.6303e-01,  9.0132e-02,
         -1.0367e-01, -4.8257e-01,  8.8696e-03, -2.8911e-02, -1.2803e-02,
          4.0629e-01, -1.1602e-01,  7.4097e-02,  2.2301e-01, -4.3032e-01,
         -1.1686e-01, -4.8715e-02, -6.1068e-02, -7.2760e-02,  8.7835e-02,
         -1.8330e-01,  1.5504e-01,  4.2852e-01, -2.6367e-01,  1.8929e-01,
         -6.0450e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
820000 特征值优化 tensor(1.7841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3362e+00,  6.2474e-01, -2.2080e-01, -1.2191e+00, -1.3291e+00,
          2.8612e+00, -1.1042e+00,  8.7945e-01,  3.1332e-01, -5.0926e-01,
         -1.1312e-01,  8.7091e-01, -1.7742e-01,  1.9094e-01, -2.0401e-01,
          2.8076e-01,  7.5207e-02, -9.2127e-01,  6.8797e-03,  5.4962e-01,
         -1.2353e+00,  8.1607e-01, -3.0224e-01,  4.0284e-01, -3.1360e-01,
          1.5432e-01, -6.9053e-02,  3.9836e-01, -1.4307e-01,  4.0749e-01,
          1.0730e-01,  3.8295e-02, -2.7072e-01, -3.6015e-01,  8.9852e-02,
          3.1198e-01, -1.5224e-01, -3.6759e-01,  2.1421e-02, -2.4452e-01,
          5.6210e-01,  6.5310e-02, -1.4553e-01,  1.7215e-01,  7.7304e-02,
         -1.7504e-01,  6.9531e-02, -1.7763e-01,  1.3146e-01, -1.3581e-01,
         -5.5443e-01, -6.0810e-03, -1.2013e-01, -2.5989e-01,  1.9097e-01,
          5.2133e-02,  2.6649e-01,  5.0918e-01,  8.2787e-01, -3.6488e-01,
         -1.3546e-01, -4.5304e-02,  1.7662e-02, -1.6519e-02, -5.2535e-01,
          1.5345e-01,  1.1284e-01,  4.9030e-02, -5.1056e-02, -8.3752e-02,
          4.3171e-01, -1.3202e-01, -1.6716e-01, -2.1560e-01, -6.9023e-02,
         -1.0079e-01, -1.8420e-01, -3.2324e-01, -5.0423e-02,  5.9957e-03,
         -2.2304e-03,  6.5409e-02, -2.3266e-01, -2.6318e-01, -3.8465e-01,
          1.4030e-01, -2.5830e-01, -6.1436e-01, -3.7930e-01,  6.5902e-02,
         -6.7736e-02,  1.0488e+00, -2.3689e-01,  1.2447e-01,  1.2847e-01,
         -3.2283e-01,  7.8001e-02,  3.0974e-01,  2.7540e-02,  3.9712e-02,
         -2.6100e-01,  2.0753e-01, -1.1063e-01, -1.9616e-01, -3.7310e-04,
          4.8814e-01, -1.1109e-01,  1.9807e-01, -1.5106e-01,  1.9589e-01,
          1.1803e-01,  1.4687e-01,  1.1336e-01, -1.0983e-01, -9.4953e-02,
         -2.8792e-01, -5.6893e-02, -2.0247e-02,  8.0194e-03,  7.8950e-02,
         -1.0323e-01,  1.6981e-02, -1.2747e-01, -5.2614e-02, -2.7732e-01,
         -2.1358e-01,  5.6667e-02,  3.0023e-01, -5.3656e-02,  4.0385e-02,
          2.1006e-01,  4.6068e-03,  7.9510e-03, -4.8957e-02, -7.7215e-03,
          3.5156e-02, -4.3956e-02, -2.3774e-02,  3.3803e-01,  1.0518e-01,
         -5.5152e-02, -4.8440e-01,  5.3648e-02,  1.6195e-02, -2.2432e-02,
          3.7530e-01, -1.1790e-01,  4.7348e-02,  1.9218e-01, -4.3557e-01,
         -1.1809e-01, -9.1379e-02, -6.4372e-02, -9.7602e-02,  1.1202e-01,
         -1.9411e-01,  1.7055e-01,  4.1622e-01, -2.8320e-01,  1.7996e-01,
         -8.4542e-02]], device='cuda:0') tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
821000 特征值优化 tensor(1.7680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4099e+00,  5.1600e-01, -2.8909e-01, -1.2006e+00, -1.2725e+00,
          3.0185e+00, -1.1641e+00,  1.0021e+00,  3.1133e-01, -5.1364e-01,
         -1.1650e-01,  9.4691e-01, -1.7097e-01,  1.5644e-01, -1.7280e-01,
          2.8023e-01,  3.4922e-02, -8.8150e-01, -1.8020e-02,  5.1731e-01,
         -1.3184e+00,  8.0911e-01, -2.6115e-01,  4.5430e-01, -3.4254e-01,
          1.4361e-01, -7.2959e-02,  3.8837e-01, -1.1659e-01,  3.7555e-01,
          9.1774e-02,  4.5811e-02, -2.8793e-01, -2.7578e-01,  1.0409e-02,
          2.9186e-01, -1.2828e-01, -3.5170e-01, -2.7989e-03, -2.0869e-01,
          5.4820e-01,  6.0659e-02, -1.4488e-01,  1.4339e-01,  1.1248e-01,
         -1.4235e-01,  2.6775e-02, -1.9304e-01,  1.2438e-01, -6.6670e-02,
         -5.5537e-01,  1.1976e-02, -6.1233e-02, -2.8547e-01,  2.1014e-01,
          4.6647e-02,  2.5466e-01,  4.9929e-01,  8.2582e-01, -3.4234e-01,
         -1.6688e-01, -4.9625e-02,  5.2001e-02,  2.6338e-03, -4.6735e-01,
          1.8973e-01,  9.3800e-02,  4.7404e-02, -7.1759e-02, -8.4989e-02,
          4.3141e-01, -1.1233e-01, -1.8074e-01, -1.8057e-01, -3.5923e-02,
         -1.1284e-01, -1.9589e-01, -3.4040e-01, -6.0733e-02, -1.2391e-02,
         -1.2927e-02,  6.2689e-02, -2.2429e-01, -2.5015e-01, -3.9313e-01,
          1.2426e-01, -2.7865e-01, -6.8528e-01, -3.5432e-01,  1.5085e-01,
         -1.0652e-01,  1.0782e+00, -2.2071e-01,  8.9407e-02,  1.1766e-01,
         -2.9847e-01,  1.1389e-01,  3.1945e-01, -1.5660e-02,  7.8073e-03,
         -2.7300e-01,  2.0605e-01, -1.4131e-01, -2.2947e-01,  1.0254e-02,
          5.3175e-01, -9.0843e-02,  2.2956e-01, -1.4411e-01,  1.9182e-01,
          1.2708e-01,  1.2930e-01,  1.1154e-01, -1.2935e-01, -1.2437e-01,
         -2.8539e-01, -1.7145e-02, -5.8815e-02,  2.2260e-02,  1.0439e-01,
         -1.3057e-01,  1.9372e-02, -1.1705e-01, -5.7949e-02, -2.2469e-01,
         -1.7246e-01,  7.3653e-02,  2.9697e-01, -6.3879e-02,  5.2359e-02,
          1.8904e-01,  7.1508e-03,  1.4771e-02, -5.9942e-02,  4.7924e-03,
          5.9442e-02, -3.6520e-02, -3.9708e-02,  3.4456e-01,  1.0050e-01,
         -5.5540e-02, -4.8777e-01,  1.2583e-02,  3.1556e-02, -3.0877e-02,
          3.5216e-01, -1.2863e-01,  7.4773e-02,  2.0252e-01, -4.4594e-01,
         -1.3599e-01, -1.0353e-01, -5.6660e-02, -7.9054e-02,  1.4298e-01,
         -1.6144e-01,  1.9904e-01,  4.1284e-01, -3.0731e-01,  2.0904e-01,
         -6.9044e-02]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
822000 特征值优化 tensor(1.7773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5223e+00,  4.6858e-01, -3.4261e-01, -1.1899e+00, -1.2619e+00,
          3.0754e+00, -1.2321e+00,  1.1773e+00,  2.6244e-01, -5.0062e-01,
         -1.1641e-01,  9.7165e-01, -1.5457e-01,  1.5419e-01, -1.7223e-01,
          2.7599e-01,  2.5010e-02, -8.5557e-01, -4.7765e-02,  5.3185e-01,
         -1.3610e+00,  8.0387e-01, -2.1653e-01,  5.1033e-01, -2.5251e-01,
          6.9380e-02, -5.9235e-02,  3.7648e-01, -4.9476e-02,  3.5768e-01,
          1.1612e-01,  5.9831e-02, -2.9117e-01, -2.4092e-01, -2.5026e-02,
          2.4087e-01, -1.3878e-01, -3.3298e-01, -3.8951e-02, -1.5272e-01,
          5.3835e-01,  5.7519e-02, -1.4306e-01,  1.5278e-01,  1.2719e-01,
         -1.0383e-01, -2.8660e-02, -1.6853e-01,  1.3256e-01,  6.9603e-03,
         -5.0619e-01,  7.9087e-03, -1.7502e-02, -2.9920e-01,  2.2955e-01,
          6.0769e-02,  2.3815e-01,  5.0614e-01,  7.9726e-01, -3.3167e-01,
         -1.7848e-01, -6.1486e-02,  5.7784e-02,  1.3809e-02, -4.2589e-01,
          2.1461e-01,  8.7090e-02,  4.7580e-02, -7.6754e-02, -5.6600e-02,
          4.3370e-01, -1.1200e-01, -1.8486e-01, -1.8426e-01, -3.3947e-02,
         -1.1479e-01, -1.6394e-01, -3.5145e-01, -6.3859e-02, -3.2912e-02,
          3.4879e-03,  4.0307e-02, -2.3501e-01, -2.9136e-01, -3.9138e-01,
          1.1210e-01, -2.3121e-01, -6.8078e-01, -3.8846e-01,  1.7275e-01,
         -1.1276e-01,  1.1135e+00, -2.2807e-01,  8.2180e-02,  1.2607e-01,
         -2.8017e-01,  9.8257e-02,  2.5050e-01, -3.0402e-02, -4.8057e-02,
         -2.6114e-01,  2.5017e-01, -1.6808e-01, -2.2990e-01, -1.4733e-02,
          5.6329e-01, -7.8150e-02,  2.0672e-01, -1.4731e-01,  1.9586e-01,
          1.2416e-01,  1.3266e-01,  1.0159e-01, -1.5242e-01, -1.0946e-01,
         -2.4249e-01,  2.9446e-02, -6.3707e-02,  5.2587e-02,  1.0539e-01,
         -1.3258e-01,  1.9729e-02, -1.1725e-01, -6.3041e-02, -1.3468e-01,
         -1.6225e-01,  7.6049e-02,  2.6672e-01, -1.0000e-01,  1.1021e-01,
          1.9885e-01, -6.9752e-03, -1.6257e-03, -7.4676e-02,  1.8047e-02,
          2.5016e-02, -7.6681e-02, -2.4482e-02,  3.6565e-01,  9.4689e-02,
         -4.3887e-02, -4.6839e-01,  1.9683e-02,  4.6319e-02, -3.5873e-02,
          3.4158e-01, -1.4043e-01,  8.2347e-02,  1.8867e-01, -4.4147e-01,
         -1.4842e-01, -1.0457e-01, -7.2737e-02, -6.7187e-02,  1.7485e-01,
         -1.6396e-01,  2.1005e-01,  4.2632e-01, -2.6891e-01,  2.1193e-01,
         -8.5925e-02]], device='cuda:0') tensor(0.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
823000 特征值优化 tensor(1.8237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5951e+00,  4.9817e-01, -3.8604e-01, -1.1767e+00, -1.3707e+00,
          3.1592e+00, -1.2395e+00,  1.2777e+00,  2.4213e-01, -4.7457e-01,
         -1.2664e-01,  1.0106e+00, -1.4707e-01,  1.8782e-01, -1.8080e-01,
          3.0513e-01,  5.2246e-02, -8.3308e-01, -7.1374e-02,  4.4982e-01,
         -1.4082e+00,  8.3065e-01, -1.6237e-01,  5.4557e-01, -1.7025e-01,
          5.5424e-02, -8.6294e-02,  3.4344e-01, -5.5923e-02,  3.8291e-01,
          1.4456e-01,  7.2911e-02, -2.5866e-01, -2.3268e-01, -2.7215e-02,
          2.3575e-01, -1.3806e-01, -3.3264e-01, -5.4331e-02, -1.6124e-01,
          4.8318e-01,  5.2698e-02, -1.3795e-01,  1.3885e-01,  9.9214e-02,
         -7.7269e-02, -4.0272e-02, -1.6219e-01,  1.2618e-01,  3.8466e-02,
         -4.9710e-01,  3.0993e-02,  1.1958e-02, -2.8013e-01,  2.5480e-01,
          1.0865e-01,  2.5565e-01,  5.1979e-01,  7.6562e-01, -3.3996e-01,
         -1.7995e-01, -4.5270e-02,  5.3503e-02,  7.9909e-03, -4.0197e-01,
          2.2830e-01,  8.1949e-02,  3.9793e-02, -7.3554e-02, -4.1730e-02,
          4.2106e-01, -1.2440e-01, -1.6184e-01, -1.6701e-01, -2.3135e-02,
         -1.2678e-01, -1.5029e-01, -3.3471e-01, -4.7132e-02,  1.2472e-03,
         -1.2514e-03,  4.6089e-02, -2.2829e-01, -2.6643e-01, -3.8888e-01,
          1.0907e-01, -2.1906e-01, -6.8116e-01, -3.5908e-01,  1.7994e-01,
         -1.1448e-01,  1.0904e+00, -1.8178e-01,  5.4853e-02,  1.2578e-01,
         -2.7060e-01,  1.0638e-01,  2.9611e-01, -7.1987e-02, -6.0474e-02,
         -2.6283e-01,  2.5259e-01, -1.5258e-01, -2.1148e-01, -3.4209e-02,
          6.2410e-01, -2.8757e-02,  1.8500e-01, -1.4652e-01,  2.0149e-01,
          1.1166e-01,  1.5508e-01,  1.0984e-01, -1.8239e-01, -1.0820e-01,
         -2.3047e-01,  4.3336e-02, -7.5668e-02,  7.6432e-02,  1.1702e-01,
         -1.2158e-01,  2.7464e-02, -1.1110e-01, -6.4234e-02, -1.0144e-01,
         -1.7300e-01,  7.3992e-02,  2.5094e-01, -1.2105e-01,  1.3035e-01,
          1.9360e-01, -1.8701e-02,  2.4027e-03, -9.0192e-02,  2.0240e-02,
          1.6019e-02, -6.0324e-02, -4.7037e-02,  3.7994e-01,  1.1402e-01,
         -4.9503e-02, -4.9527e-01,  6.0424e-02,  5.2562e-02, -5.1289e-02,
          3.6358e-01, -1.7208e-01,  7.6876e-02,  2.0784e-01, -4.2311e-01,
         -1.6284e-01, -1.0462e-01, -1.0629e-01, -8.0026e-02,  1.6116e-01,
         -1.8520e-01,  1.9507e-01,  4.1896e-01, -2.4221e-01,  1.9855e-01,
         -1.1547e-01]], device='cuda:0') tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
824000 特征值优化 tensor(1.7566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6954e+00,  4.7128e-01, -4.2829e-01, -1.1834e+00, -1.4499e+00,
          3.2056e+00, -1.2800e+00,  1.3048e+00,  2.2078e-01, -4.5278e-01,
         -1.4503e-01,  1.0387e+00, -1.3713e-01,  2.2123e-01, -1.5345e-01,
          3.1379e-01,  6.3155e-02, -8.3307e-01, -6.8493e-02,  3.9739e-01,
         -1.4606e+00,  8.6434e-01, -1.2380e-01,  5.2054e-01, -1.2933e-01,
          6.7617e-02, -1.2240e-01,  3.1090e-01, -4.8835e-02,  3.9467e-01,
          1.7663e-01,  4.9676e-02, -2.7900e-01, -2.1860e-01, -4.6599e-03,
          2.4553e-01, -1.1944e-01, -3.6065e-01, -6.9120e-02, -1.3945e-01,
          4.6683e-01,  6.0887e-02, -1.4284e-01,  1.1498e-01,  9.0619e-02,
         -7.8171e-02, -5.0206e-02, -1.5227e-01,  1.1592e-01,  3.5375e-02,
         -5.0176e-01,  3.4894e-02,  2.8640e-02, -2.2137e-01,  2.6547e-01,
          1.1510e-01,  2.9066e-01,  4.8911e-01,  7.4751e-01, -3.4544e-01,
         -2.1731e-01, -3.9051e-02,  5.4601e-02, -1.8035e-03, -3.8432e-01,
          2.4526e-01,  5.9999e-02,  3.7422e-02, -7.0542e-02, -2.9729e-02,
          4.0936e-01, -1.2621e-01, -1.3215e-01, -1.6662e-01, -3.8210e-02,
         -1.0532e-01, -1.6683e-01, -3.2741e-01, -6.5290e-02, -3.0063e-04,
          1.7013e-02,  6.5652e-02, -2.0490e-01, -2.5928e-01, -3.7854e-01,
          9.7922e-02, -2.3211e-01, -7.0880e-01, -3.6340e-01,  1.8856e-01,
         -1.0155e-01,  1.0747e+00, -1.9916e-01,  3.7430e-02,  1.1934e-01,
         -2.6268e-01,  1.1261e-01,  3.0885e-01, -5.4375e-02, -6.6180e-02,
         -2.6266e-01,  2.5511e-01, -1.2505e-01, -2.1210e-01, -2.8101e-02,
          5.9837e-01, -6.6726e-02,  1.7291e-01, -1.5373e-01,  2.0833e-01,
          9.9360e-02,  1.8343e-01,  8.9656e-02, -1.7393e-01, -1.1737e-01,
         -2.0930e-01,  5.4904e-02, -7.7569e-02,  6.6495e-02,  1.1751e-01,
         -1.1069e-01,  1.8136e-02, -1.1244e-01, -6.1556e-02, -1.0221e-01,
         -1.7396e-01,  7.5683e-02,  2.5579e-01, -1.1660e-01,  1.4085e-01,
          2.0803e-01, -1.9210e-02, -9.7669e-03, -8.2568e-02,  9.6040e-03,
         -2.2564e-02, -5.9033e-02, -3.5199e-02,  3.9754e-01,  1.1101e-01,
         -7.5966e-02, -4.9227e-01,  5.0761e-02,  3.3514e-02, -6.9903e-02,
          3.5610e-01, -1.6099e-01,  9.1406e-02,  2.0697e-01, -4.3595e-01,
         -1.3955e-01, -1.1959e-01, -9.0514e-02, -5.5867e-02,  1.5869e-01,
         -1.7064e-01,  2.2251e-01,  3.9301e-01, -2.5907e-01,  2.1295e-01,
         -1.0393e-01]], device='cuda:0') tensor(0.2089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
825000 特征值优化 tensor(1.7729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7657e+00,  4.5892e-01, -4.3248e-01, -1.1826e+00, -1.5278e+00,
          3.2628e+00, -1.2622e+00,  1.3361e+00,  1.6948e-01, -4.3414e-01,
         -2.0108e-01,  1.0076e+00, -1.2543e-01,  2.4387e-01, -1.4336e-01,
          3.1996e-01,  7.1090e-02, -8.0434e-01, -3.3765e-02,  3.6576e-01,
         -1.4999e+00,  9.0825e-01, -1.2430e-01,  5.2771e-01, -9.8402e-02,
          7.9209e-02, -1.2507e-01,  3.0853e-01, -4.5037e-02,  4.0350e-01,
          1.7872e-01,  2.3624e-02, -2.9118e-01, -1.9823e-01,  4.9500e-04,
          2.4260e-01, -1.1099e-01, -3.6666e-01, -8.1685e-02, -1.5460e-01,
          4.5181e-01,  6.1850e-02, -1.4148e-01,  1.2041e-01,  7.8013e-02,
         -5.4759e-02, -4.4564e-02, -1.3157e-01,  1.1141e-01,  5.5752e-02,
         -5.1559e-01,  3.6125e-02,  2.0266e-02, -2.0885e-01,  2.5284e-01,
          1.2226e-01,  2.8254e-01,  4.8007e-01,  7.2447e-01, -3.2794e-01,
         -2.3160e-01, -1.6196e-02,  1.7592e-02,  3.4345e-03, -3.6838e-01,
          2.5190e-01,  6.4690e-02,  2.9697e-02, -5.9005e-02, -1.6713e-02,
          3.9629e-01, -1.1519e-01, -1.3588e-01, -1.4547e-01, -5.7315e-02,
         -1.0911e-01, -1.5737e-01, -3.2611e-01, -4.7312e-02, -5.1593e-03,
          8.5332e-03,  6.6338e-02, -2.0839e-01, -2.6119e-01, -3.6439e-01,
          1.0514e-01, -2.1714e-01, -7.0548e-01, -3.2142e-01,  1.5962e-01,
         -9.5789e-02,  1.0271e+00, -1.9157e-01,  1.9100e-02,  1.2354e-01,
         -2.5566e-01,  1.2789e-01,  3.4439e-01, -2.9037e-02, -6.2765e-02,
         -2.4386e-01,  2.7544e-01, -8.5304e-02, -2.0338e-01, -4.9826e-02,
          5.8689e-01, -8.8025e-02,  1.5405e-01, -1.5454e-01,  2.1827e-01,
          8.6276e-02,  1.8200e-01,  9.0523e-02, -1.9099e-01, -1.1774e-01,
         -2.1387e-01,  6.6528e-02, -6.9930e-02,  7.0396e-02,  1.0902e-01,
         -1.1652e-01,  2.5517e-02, -1.1496e-01, -2.4834e-02, -8.7574e-02,
         -1.5659e-01,  7.0736e-02,  2.5225e-01, -9.4704e-02,  1.5300e-01,
          2.0219e-01, -1.7767e-02, -7.4188e-03, -4.9040e-02,  1.6113e-02,
          1.5654e-03, -6.1750e-02, -4.7312e-02,  4.1450e-01,  1.0836e-01,
         -5.4311e-02, -5.0609e-01,  4.6819e-02,  2.6071e-02, -6.3947e-02,
          3.6321e-01, -1.8767e-01,  9.4181e-02,  2.0112e-01, -4.3218e-01,
         -1.5133e-01, -1.1932e-01, -1.0563e-01, -5.4093e-02,  1.6523e-01,
         -1.6983e-01,  2.0835e-01,  3.9636e-01, -2.3750e-01,  2.0156e-01,
         -1.0816e-01]], device='cuda:0') tensor(0.2294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
826000 特征值优化 tensor(1.7661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7131e+00,  4.8629e-01, -4.4027e-01, -1.1943e+00, -1.4858e+00,
          3.2722e+00, -1.2686e+00,  1.3373e+00,  1.3843e-01, -4.5375e-01,
         -2.6170e-01,  9.8847e-01, -1.1796e-01,  2.3195e-01, -1.6255e-01,
          3.1326e-01,  8.8114e-02, -7.6961e-01,  9.2153e-03,  3.5967e-01,
         -1.5390e+00,  9.3540e-01, -1.1108e-01,  5.3907e-01, -1.1141e-01,
          7.1485e-02, -1.4000e-01,  2.9327e-01, -5.8802e-02,  3.7230e-01,
          1.7431e-01, -1.7443e-02, -2.8147e-01, -1.8305e-01,  5.2281e-03,
          2.2052e-01, -1.1336e-01, -3.9114e-01, -8.4779e-02, -1.6807e-01,
          4.3986e-01,  6.7518e-02, -1.4173e-01,  1.3420e-01,  1.0824e-01,
         -5.5144e-02,  3.7377e-05, -1.1763e-01,  1.2082e-01,  8.4941e-02,
         -5.1137e-01,  3.5365e-02,  9.7222e-03, -1.7286e-01,  2.3089e-01,
          1.3279e-01,  2.9381e-01,  4.5629e-01,  6.8465e-01, -3.1361e-01,
         -2.3564e-01, -1.7083e-02,  1.9198e-02, -4.5689e-03, -3.6701e-01,
          2.5499e-01,  7.8408e-02,  1.5518e-02, -4.6840e-02, -3.4851e-02,
          3.8307e-01, -1.1406e-01, -1.3630e-01, -1.4833e-01, -5.6179e-02,
         -9.3204e-02, -1.5978e-01, -3.2540e-01, -4.2829e-02, -4.0829e-03,
          9.0359e-03,  5.7194e-02, -2.0734e-01, -2.6985e-01, -3.7830e-01,
          1.1675e-01, -2.3124e-01, -7.1881e-01, -3.2333e-01,  1.3342e-01,
         -9.2958e-02,  9.9910e-01, -2.1037e-01,  1.7016e-02,  1.3449e-01,
         -2.5804e-01,  1.2614e-01,  3.4457e-01,  4.1912e-02, -7.4919e-02,
         -2.5545e-01,  2.9158e-01, -7.9036e-02, -2.0632e-01, -4.0554e-02,
          5.9796e-01, -1.1140e-01,  1.2789e-01, -1.4466e-01,  2.3497e-01,
          8.6753e-02,  2.2344e-01,  1.0941e-01, -1.9406e-01, -1.1602e-01,
         -2.0295e-01,  6.1107e-02, -7.1406e-02,  5.0395e-02,  7.5183e-02,
         -1.3832e-01,  1.4524e-02, -1.2385e-01, -9.0587e-03, -8.2515e-02,
         -1.6049e-01,  6.3640e-02,  2.6178e-01, -8.2011e-02,  1.6912e-01,
          1.9363e-01, -1.6520e-02, -1.8839e-02, -2.8684e-02,  2.9864e-03,
         -6.4606e-03, -5.6542e-02, -5.2562e-02,  4.2307e-01,  1.0329e-01,
         -4.5840e-02, -5.1254e-01,  3.8668e-02,  1.5551e-02, -8.4290e-02,
          3.7428e-01, -1.9657e-01,  9.8603e-02,  2.1644e-01, -4.3373e-01,
         -1.5075e-01, -1.2066e-01, -1.1511e-01, -3.9667e-02,  1.6861e-01,
         -1.6897e-01,  2.1379e-01,  3.9594e-01, -2.2853e-01,  2.0191e-01,
         -1.0976e-01]], device='cuda:0') tensor(0.2204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
827000 特征值优化 tensor(1.7633, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7168e+00,  5.0516e-01, -4.3064e-01, -1.1975e+00, -1.4651e+00,
          3.2619e+00, -1.2805e+00,  1.3661e+00,  1.0542e-01, -4.6773e-01,
         -2.0207e-01,  9.8917e-01, -1.0942e-01,  2.3596e-01, -1.7419e-01,
          3.1423e-01,  1.1732e-01, -7.5731e-01,  5.3698e-02,  3.3334e-01,
         -1.5631e+00,  9.4819e-01, -1.0572e-01,  5.3376e-01, -1.1307e-01,
          4.8192e-02, -1.3879e-01,  2.8794e-01, -6.9184e-02,  3.5712e-01,
          1.5779e-01, -3.9802e-02, -2.7922e-01, -1.7726e-01,  2.4422e-02,
          2.0920e-01, -1.1406e-01, -3.9592e-01, -8.1721e-02, -1.7890e-01,
          4.4094e-01,  7.0105e-02, -1.3962e-01,  1.3382e-01,  1.1943e-01,
         -3.8435e-02,  1.8382e-02, -1.1866e-01,  1.2280e-01,  1.2293e-01,
         -5.0935e-01,  1.9244e-02,  1.1498e-02, -1.4152e-01,  2.0943e-01,
          1.2660e-01,  3.0778e-01,  4.4851e-01,  6.3102e-01, -3.0949e-01,
         -2.3981e-01, -2.6558e-02,  5.0558e-02, -1.2690e-02, -3.6236e-01,
          2.5728e-01,  8.7219e-02,  1.6833e-02, -4.3951e-02, -5.7710e-02,
          3.6130e-01, -1.2220e-01, -1.4512e-01, -1.4606e-01, -5.1168e-02,
         -9.5959e-02, -1.6823e-01, -3.1386e-01, -4.8043e-02,  2.5484e-05,
          1.0385e-02,  5.1791e-02, -2.0910e-01, -2.7580e-01, -3.6315e-01,
          1.1491e-01, -2.3723e-01, -7.3505e-01, -3.5966e-01,  1.5203e-01,
         -8.2214e-02,  1.0035e+00, -2.2454e-01,  1.4629e-02,  1.4159e-01,
         -2.5851e-01,  1.3046e-01,  3.4266e-01,  7.1755e-02, -9.5941e-02,
         -2.7031e-01,  3.1286e-01, -6.2891e-02, -2.1577e-01, -3.8658e-02,
          5.9732e-01, -1.0656e-01,  9.3350e-02, -1.4265e-01,  2.2441e-01,
          1.0247e-01,  2.2699e-01,  1.0883e-01, -1.9933e-01, -1.1676e-01,
         -1.9899e-01,  6.5053e-02, -6.1482e-02,  4.9063e-02,  7.1598e-02,
         -1.4498e-01,  1.9590e-02, -1.2292e-01, -1.2317e-03, -7.9294e-02,
         -1.6508e-01,  5.2587e-02,  2.4921e-01, -6.2859e-02,  1.6978e-01,
          1.9128e-01, -2.4245e-02, -2.0084e-02, -2.0439e-02, -3.3045e-03,
          1.5894e-02, -5.7132e-02, -5.7728e-02,  4.1385e-01,  9.8603e-02,
         -3.5656e-02, -5.1371e-01,  3.7309e-02,  1.6079e-02, -8.1680e-02,
          3.9637e-01, -2.0691e-01,  8.8915e-02,  2.1731e-01, -4.3796e-01,
         -1.6906e-01, -1.1572e-01, -1.1661e-01, -3.0964e-02,  1.6316e-01,
         -1.6799e-01,  2.1040e-01,  3.9219e-01, -2.2303e-01,  2.0318e-01,
         -1.1611e-01]], device='cuda:0') tensor(0.2144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
828000 特征值优化 tensor(1.7489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7376e+00,  5.5037e-01, -4.3215e-01, -1.2025e+00, -1.4612e+00,
          3.2608e+00, -1.2936e+00,  1.3789e+00,  9.1416e-02, -4.7246e-01,
         -1.8944e-01,  9.7312e-01, -9.6866e-02,  2.3500e-01, -1.8900e-01,
          3.4289e-01,  1.2164e-01, -7.4644e-01,  7.1082e-02,  3.3992e-01,
         -1.5846e+00,  9.4978e-01, -1.0910e-01,  5.4045e-01, -9.5851e-02,
          5.2659e-02, -1.3637e-01,  2.9471e-01, -8.7870e-02,  3.4800e-01,
          1.7225e-01, -3.5708e-02, -2.9119e-01, -1.8322e-01,  3.6916e-02,
          1.8634e-01, -1.2050e-01, -4.0200e-01, -8.9660e-02, -1.8363e-01,
          4.5112e-01,  6.3277e-02, -1.3422e-01,  1.3640e-01,  1.2248e-01,
         -4.2334e-02,  1.2620e-02, -1.0523e-01,  1.2170e-01,  1.4583e-01,
         -4.9484e-01,  3.1096e-03,  1.9862e-02, -1.1992e-01,  2.0580e-01,
          1.2918e-01,  2.9839e-01,  4.4272e-01,  5.9968e-01, -2.9710e-01,
         -2.4599e-01, -2.5454e-02,  5.9695e-02, -2.4894e-02, -3.6168e-01,
          2.5203e-01,  9.3179e-02,  2.1999e-02, -2.6366e-02, -6.3392e-02,
          3.4362e-01, -1.3650e-01, -1.5402e-01, -1.5194e-01, -6.1591e-02,
         -8.5312e-02, -1.5531e-01, -3.2119e-01, -5.7980e-02, -9.2743e-03,
          4.2703e-03,  5.7777e-02, -2.1971e-01, -2.8207e-01, -3.4796e-01,
          1.2580e-01, -2.2459e-01, -7.2831e-01, -3.6803e-01,  1.5879e-01,
         -7.1824e-02,  9.9590e-01, -2.3121e-01,  7.0257e-03,  1.5265e-01,
         -2.6228e-01,  1.3777e-01,  3.4109e-01,  6.7752e-02, -1.2563e-01,
         -2.7341e-01,  3.1834e-01, -5.6112e-02, -2.2494e-01, -3.3091e-02,
          5.8724e-01, -1.0482e-01,  6.1305e-02, -1.3991e-01,  2.2484e-01,
          9.9449e-02,  2.3684e-01,  9.2560e-02, -2.0233e-01, -1.0220e-01,
         -1.9643e-01,  5.6888e-02, -5.1903e-02,  6.0395e-02,  6.3347e-02,
         -1.6358e-01,  2.6864e-02, -1.2397e-01,  9.5699e-03, -8.3792e-02,
         -1.7719e-01,  4.0885e-02,  2.4920e-01, -5.9120e-02,  1.7311e-01,
          1.9690e-01, -3.0093e-02, -1.0891e-02, -8.7349e-03, -1.0537e-02,
          5.6955e-03, -7.0250e-02, -5.6229e-02,  4.1612e-01,  1.0999e-01,
         -2.5684e-02, -5.2001e-01,  3.4689e-02,  3.8664e-03, -8.8089e-02,
          4.0450e-01, -2.1785e-01,  8.4728e-02,  1.9486e-01, -4.3922e-01,
         -1.6687e-01, -1.2171e-01, -1.3056e-01, -3.6994e-02,  1.5586e-01,
         -1.7083e-01,  1.9206e-01,  3.8190e-01, -2.1625e-01,  1.8908e-01,
         -1.2805e-01]], device='cuda:0') tensor(0.2200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
829000 特征值优化 tensor(1.7643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7281e+00,  5.7381e-01, -4.3055e-01, -1.2034e+00, -1.4498e+00,
          3.2458e+00, -1.2888e+00,  1.3873e+00,  7.1105e-02, -4.9744e-01,
         -1.8970e-01,  9.7358e-01, -1.0553e-01,  2.2053e-01, -2.0634e-01,
          3.3583e-01,  1.2275e-01, -7.4075e-01,  8.9907e-02,  3.2617e-01,
         -1.6064e+00,  9.4194e-01, -1.1513e-01,  5.3656e-01, -8.4260e-02,
          5.5438e-02, -1.5333e-01,  2.8142e-01, -7.6762e-02,  3.4553e-01,
          1.6909e-01, -3.5435e-02, -2.7971e-01, -1.7300e-01,  4.9461e-02,
          1.7983e-01, -1.0999e-01, -3.9800e-01, -8.9796e-02, -2.0127e-01,
          4.3263e-01,  6.7125e-02, -1.3703e-01,  1.2332e-01,  1.2711e-01,
         -4.5304e-02,  2.3166e-02, -9.7200e-02,  1.2018e-01,  1.5490e-01,
         -4.9665e-01, -7.4396e-03,  2.7653e-02, -1.1115e-01,  1.9401e-01,
          1.3354e-01,  3.0462e-01,  4.3870e-01,  5.8071e-01, -2.9707e-01,
         -2.6826e-01, -3.1965e-02,  6.7184e-02, -2.9310e-02, -3.6159e-01,
          2.4713e-01,  8.5285e-02,  2.0568e-02, -3.0646e-02, -6.7096e-02,
          3.2929e-01, -1.4013e-01, -1.5045e-01, -1.4828e-01, -5.3583e-02,
         -8.8762e-02, -1.6711e-01, -3.1235e-01, -4.3352e-02, -1.9374e-03,
          5.3499e-03,  5.6519e-02, -2.0440e-01, -2.8759e-01, -3.5173e-01,
          1.1437e-01, -2.3240e-01, -7.3311e-01, -3.5224e-01,  1.7490e-01,
         -5.6317e-02,  1.0079e+00, -2.2720e-01,  6.1522e-03,  1.4838e-01,
         -2.5982e-01,  1.3246e-01,  3.3989e-01,  6.6882e-02, -1.2814e-01,
         -2.8011e-01,  3.2076e-01, -5.7830e-02, -2.4376e-01, -3.6372e-02,
          5.8326e-01, -8.9214e-02,  5.7785e-02, -1.5663e-01,  2.2638e-01,
          1.0469e-01,  2.3509e-01,  1.0446e-01, -1.9338e-01, -1.1150e-01,
         -2.0415e-01,  6.1621e-02, -4.9858e-02,  4.4443e-02,  6.6794e-02,
         -1.6879e-01,  2.4581e-02, -1.3000e-01,  2.2070e-02, -8.4812e-02,
         -1.7983e-01,  3.2275e-02,  2.4529e-01, -4.9783e-02,  1.7542e-01,
          2.0712e-01, -3.4632e-02, -1.1127e-02, -1.3426e-03, -1.0543e-02,
          1.1554e-02, -4.9880e-02, -5.1293e-02,  4.1220e-01,  9.9523e-02,
         -3.6952e-02, -5.1499e-01,  2.6570e-02,  2.0167e-02, -8.0836e-02,
          4.0387e-01, -2.1786e-01,  9.1718e-02,  2.0360e-01, -4.5849e-01,
         -1.6882e-01, -1.1548e-01, -1.3043e-01, -3.0322e-02,  1.6364e-01,
         -1.6386e-01,  1.9582e-01,  3.8484e-01, -2.1579e-01,  1.8752e-01,
         -1.1731e-01]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
830000 特征值优化 tensor(1.7443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7198e+00,  6.0863e-01, -4.2667e-01, -1.1958e+00, -1.4344e+00,
          3.2226e+00, -1.2933e+00,  1.3887e+00,  4.8941e-02, -5.0314e-01,
         -1.7105e-01,  9.7553e-01, -1.1401e-01,  2.1617e-01, -2.2933e-01,
          3.4531e-01,  1.3113e-01, -7.5283e-01,  9.4221e-02,  3.1804e-01,
         -1.6226e+00,  9.4393e-01, -1.1575e-01,  5.3172e-01, -1.0204e-01,
          5.1671e-02, -1.5979e-01,  2.6861e-01, -8.0229e-02,  3.4040e-01,
          1.7294e-01, -3.6919e-02, -2.5659e-01, -1.7747e-01,  7.0669e-02,
          1.8483e-01, -1.1181e-01, -3.9886e-01, -7.7940e-02, -1.8520e-01,
          4.3738e-01,  7.0264e-02, -1.3900e-01,  1.2110e-01,  1.3889e-01,
         -4.7394e-02,  1.0545e-02, -9.3706e-02,  1.4285e-01,  1.5439e-01,
         -4.9526e-01, -5.0996e-04,  4.4752e-02, -1.0893e-01,  1.8460e-01,
          1.4871e-01,  3.3418e-01,  4.3221e-01,  5.5053e-01, -2.9975e-01,
         -2.7404e-01, -3.9533e-02,  6.5305e-02, -3.4707e-02, -3.5477e-01,
          2.4611e-01,  9.3571e-02,  2.3164e-02, -2.5464e-02, -7.9458e-02,
          3.2311e-01, -1.4325e-01, -1.4005e-01, -1.2936e-01, -4.1268e-02,
         -9.9879e-02, -1.8629e-01, -3.0839e-01, -5.0474e-02, -5.4890e-04,
          6.6833e-03,  6.2425e-02, -2.0083e-01, -2.8552e-01, -3.5928e-01,
          1.0909e-01, -2.3868e-01, -7.4438e-01, -3.4704e-01,  1.8817e-01,
         -4.6448e-02,  9.9356e-01, -2.3168e-01, -5.0543e-03,  1.4102e-01,
         -2.6000e-01,  1.3007e-01,  3.3790e-01,  7.0770e-02, -1.2359e-01,
         -2.8855e-01,  3.2744e-01, -4.9036e-02, -2.5660e-01, -3.2163e-02,
          5.9383e-01, -8.0436e-02,  4.9324e-02, -1.6069e-01,  2.2780e-01,
          1.0625e-01,  2.3963e-01,  9.4494e-02, -1.8656e-01, -1.2126e-01,
         -1.9944e-01,  5.4985e-02, -5.3017e-02,  2.5352e-02,  7.3608e-02,
         -1.6626e-01,  1.3153e-02, -1.2947e-01,  1.9509e-02, -7.6968e-02,
         -1.7617e-01,  2.6386e-02,  2.4652e-01, -4.3738e-02,  1.6652e-01,
          2.0896e-01, -4.2487e-02, -9.4319e-03, -7.8597e-03, -2.5883e-02,
          2.6880e-02, -4.7656e-02, -6.5473e-02,  4.0982e-01,  9.7927e-02,
         -3.7622e-02, -5.2178e-01,  1.4908e-02,  2.6748e-02, -8.4887e-02,
          4.0958e-01, -2.0532e-01,  9.7187e-02,  2.1576e-01, -4.6843e-01,
         -1.7969e-01, -1.1932e-01, -1.2502e-01, -1.2911e-02,  1.6430e-01,
         -1.5434e-01,  2.0601e-01,  3.9060e-01, -2.2194e-01,  2.0011e-01,
         -1.0676e-01]], device='cuda:0') tensor(0.2342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
831000 特征值优化 tensor(1.7840, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7154e+00,  6.4470e-01, -4.4728e-01, -1.2018e+00, -1.4296e+00,
          3.2135e+00, -1.3118e+00,  1.4117e+00,  1.5554e-02, -5.0637e-01,
         -1.6425e-01,  9.8567e-01, -1.0200e-01,  2.1406e-01, -2.2067e-01,
          3.5564e-01,  1.4078e-01, -7.3783e-01,  9.8259e-02,  3.0011e-01,
         -1.6334e+00,  9.4100e-01, -1.2320e-01,  5.3868e-01, -7.0243e-02,
          5.0912e-02, -1.5493e-01,  2.5850e-01, -9.0218e-02,  3.3606e-01,
          1.8732e-01, -3.2390e-02, -2.8058e-01, -1.6674e-01,  7.7264e-02,
          1.7021e-01, -1.1309e-01, -4.0716e-01, -1.0032e-01, -1.9545e-01,
          4.4679e-01,  6.9309e-02, -1.3870e-01,  1.3138e-01,  1.4248e-01,
         -4.4338e-02,  1.0046e-02, -9.0432e-02,  1.4153e-01,  1.6585e-01,
         -4.9269e-01, -1.8115e-03,  5.4413e-02, -1.0157e-01,  1.7846e-01,
          1.5076e-01,  3.2772e-01,  4.2129e-01,  5.3689e-01, -2.8938e-01,
         -2.7371e-01, -4.2740e-02,  7.5534e-02, -3.9925e-02, -3.4085e-01,
          2.4375e-01,  9.8981e-02,  3.0079e-02, -2.8003e-02, -8.5662e-02,
          3.1080e-01, -1.4611e-01, -1.4581e-01, -1.3812e-01, -3.8516e-02,
         -9.7495e-02, -1.8388e-01, -3.0881e-01, -5.4543e-02, -2.1534e-03,
          7.6702e-03,  5.9594e-02, -2.0078e-01, -3.0278e-01, -3.5253e-01,
          1.1273e-01, -2.2992e-01, -7.3949e-01, -3.5994e-01,  2.0140e-01,
         -4.2680e-02,  1.0108e+00, -2.1602e-01,  1.8742e-02,  1.2937e-01,
         -2.4598e-01,  1.2900e-01,  3.2909e-01,  7.6644e-02, -1.2753e-01,
         -3.0334e-01,  3.3303e-01, -7.3441e-02, -2.5421e-01, -2.2288e-02,
          5.7454e-01, -9.1719e-02,  4.0828e-02, -1.5697e-01,  2.2270e-01,
          1.0664e-01,  2.4100e-01,  8.6665e-02, -1.8493e-01, -1.1402e-01,
         -2.0521e-01,  5.4262e-02, -4.4028e-02,  3.1664e-02,  7.0201e-02,
         -1.7608e-01,  1.4078e-02, -1.3295e-01,  1.5500e-02, -6.8023e-02,
         -1.7339e-01,  1.8588e-02,  2.4788e-01, -3.7600e-02,  1.6921e-01,
          2.0976e-01, -4.9690e-02, -4.2586e-03, -5.8445e-03, -2.5318e-02,
          2.5602e-02, -5.6140e-02, -6.0548e-02,  4.1815e-01,  9.4163e-02,
         -2.0900e-02, -5.1864e-01,  9.0019e-03,  2.9874e-02, -9.1702e-02,
          4.0695e-01, -2.1544e-01,  8.9371e-02,  2.2610e-01, -4.5524e-01,
         -1.7469e-01, -1.2422e-01, -1.1051e-01, -1.4766e-02,  1.6519e-01,
         -1.6754e-01,  2.0020e-01,  3.9067e-01, -2.1969e-01,  1.9706e-01,
         -1.1335e-01]], device='cuda:0') tensor(0.2111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
832000 特征值优化 tensor(1.7632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7100e+00,  6.6644e-01, -4.2448e-01, -1.2008e+00, -1.4329e+00,
          3.1885e+00, -1.2969e+00,  1.4132e+00,  1.5415e-02, -5.1768e-01,
         -1.5613e-01,  9.8273e-01, -9.1230e-02,  2.1190e-01, -2.3815e-01,
          3.5927e-01,  1.3278e-01, -7.3947e-01,  1.1212e-01,  3.0286e-01,
         -1.6525e+00,  9.3939e-01, -1.2097e-01,  5.3594e-01, -4.8509e-02,
          3.8036e-02, -1.6731e-01,  2.7757e-01, -7.3962e-02,  3.3428e-01,
          1.9570e-01, -3.4835e-02, -2.7932e-01, -1.7989e-01,  8.7647e-02,
          1.6206e-01, -1.1646e-01, -3.9780e-01, -9.0365e-02, -2.0719e-01,
          4.3518e-01,  6.6151e-02, -1.3607e-01,  1.3082e-01,  1.3550e-01,
         -4.6281e-02,  1.0872e-02, -7.6962e-02,  1.3308e-01,  1.6637e-01,
         -4.8187e-01, -1.2671e-02,  7.0089e-02, -9.3113e-02,  1.6426e-01,
          1.4629e-01,  3.1892e-01,  4.4059e-01,  5.2869e-01, -2.8899e-01,
         -2.6736e-01, -4.1973e-02,  8.3864e-02, -4.9531e-02, -3.4463e-01,
          2.4091e-01,  8.3516e-02,  2.8773e-02, -2.3217e-02, -7.9274e-02,
          2.9637e-01, -1.5530e-01, -1.5237e-01, -1.4055e-01, -4.1084e-02,
         -8.7256e-02, -1.7796e-01, -3.1705e-01, -4.4420e-02, -4.7454e-03,
          3.0624e-04,  6.1915e-02, -1.9956e-01, -2.9118e-01, -3.4867e-01,
          1.2388e-01, -2.3471e-01, -7.2644e-01, -3.6057e-01,  2.1828e-01,
         -2.5528e-02,  1.0228e+00, -2.2505e-01,  5.8517e-03,  1.4443e-01,
         -2.5844e-01,  1.3952e-01,  3.2781e-01,  5.4219e-02, -1.2782e-01,
         -2.9134e-01,  3.3302e-01, -7.0849e-02, -2.6382e-01, -2.1986e-02,
          5.6703e-01, -7.3452e-02,  1.9439e-02, -1.5377e-01,  2.2030e-01,
          1.0835e-01,  2.4050e-01,  7.7382e-02, -1.9234e-01, -1.0531e-01,
         -2.0838e-01,  5.9874e-02, -4.2608e-02,  3.0113e-02,  7.2540e-02,
         -1.7745e-01,  1.7293e-02, -1.3417e-01,  2.2216e-02, -6.9651e-02,
         -1.8412e-01,  1.4715e-02,  2.4384e-01, -3.3542e-02,  1.7017e-01,
          2.1251e-01, -5.3236e-02,  3.1191e-03,  4.9354e-03, -2.1564e-02,
          2.5212e-02, -5.1088e-02, -6.1535e-02,  4.0322e-01,  1.0092e-01,
         -2.2259e-02, -5.1511e-01,  1.1943e-02,  1.8673e-02, -7.7179e-02,
          4.0373e-01, -2.1052e-01,  1.0071e-01,  1.9957e-01, -4.6986e-01,
         -1.7371e-01, -1.2281e-01, -1.3641e-01, -2.5050e-02,  1.6113e-01,
         -1.6443e-01,  1.9162e-01,  3.8282e-01, -2.1060e-01,  1.8758e-01,
         -1.1146e-01]], device='cuda:0') tensor(0.2576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
833000 特征值优化 tensor(1.7481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6881e+00,  7.1964e-01, -4.3505e-01, -1.2021e+00, -1.4249e+00,
          3.1656e+00, -1.3266e+00,  1.4421e+00,  6.6965e-03, -5.2734e-01,
         -1.5740e-01,  9.7136e-01, -7.9794e-02,  2.0073e-01, -2.3675e-01,
          3.6359e-01,  1.3390e-01, -7.4430e-01,  1.1664e-01,  2.9657e-01,
         -1.6639e+00,  9.2688e-01, -1.3051e-01,  5.3684e-01, -4.0838e-02,
          2.4930e-02, -1.4726e-01,  2.7605e-01, -9.0694e-02,  3.2328e-01,
          2.1201e-01, -2.0037e-02, -2.9216e-01, -1.8041e-01,  1.0656e-01,
          1.5879e-01, -1.2239e-01, -3.8595e-01, -1.0132e-01, -2.1231e-01,
          4.4699e-01,  7.1559e-02, -1.3730e-01,  1.3974e-01,  1.4564e-01,
         -4.6314e-02,  6.8334e-03, -8.0380e-02,  1.4281e-01,  1.6231e-01,
         -4.7240e-01, -2.3674e-02,  8.3054e-02, -8.9684e-02,  1.5919e-01,
          1.3069e-01,  3.0464e-01,  4.4263e-01,  5.1225e-01, -2.9220e-01,
         -2.5318e-01, -4.2933e-02,  8.9365e-02, -6.3470e-02, -3.2892e-01,
          2.3827e-01,  9.4476e-02,  3.7423e-02, -2.1874e-02, -8.2988e-02,
          2.8866e-01, -1.6433e-01, -1.5295e-01, -1.4887e-01, -4.0784e-02,
         -8.8329e-02, -1.7788e-01, -3.1712e-01, -4.3869e-02, -5.2012e-03,
          4.3302e-03,  5.6120e-02, -2.1150e-01, -3.0206e-01, -3.5102e-01,
          1.3350e-01, -2.2956e-01, -7.2875e-01, -3.5683e-01,  2.2409e-01,
         -3.0546e-02,  1.0259e+00, -2.3062e-01,  1.1476e-02,  1.4971e-01,
         -2.6466e-01,  1.4200e-01,  3.3051e-01,  6.1314e-02, -1.3706e-01,
         -3.0000e-01,  3.2990e-01, -8.5019e-02, -2.6383e-01, -1.7470e-02,
          5.5146e-01, -6.3602e-02,  1.8436e-03, -1.4314e-01,  2.2026e-01,
          1.0846e-01,  2.4712e-01,  7.1126e-02, -2.0012e-01, -9.9130e-02,
         -2.1133e-01,  6.2886e-02, -3.9693e-02,  3.4762e-02,  7.6243e-02,
         -1.8073e-01,  1.5824e-02, -1.3835e-01,  1.3272e-02, -6.2058e-02,
         -1.8276e-01,  1.1334e-02,  2.4745e-01, -3.2697e-02,  1.6511e-01,
          2.1701e-01, -6.1468e-02,  7.7499e-03, -3.0939e-04, -2.8723e-02,
          2.3129e-02, -5.8704e-02, -6.1146e-02,  3.9744e-01,  1.0476e-01,
         -2.9589e-03, -5.1529e-01,  7.4219e-03,  1.6880e-02, -7.6433e-02,
          4.0200e-01, -2.1888e-01,  9.4571e-02,  2.0276e-01, -4.6063e-01,
         -1.7301e-01, -1.2914e-01, -1.3088e-01, -3.1584e-02,  1.5503e-01,
         -1.7865e-01,  1.8777e-01,  3.8686e-01, -2.1157e-01,  1.7513e-01,
         -1.2476e-01]], device='cuda:0') tensor(0.2331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
834000 特征值优化 tensor(1.7788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6671e+00,  7.6216e-01, -4.4405e-01, -1.2008e+00, -1.3999e+00,
          3.1288e+00, -1.3507e+00,  1.4601e+00, -9.9411e-03, -5.3339e-01,
         -1.5805e-01,  9.7225e-01, -7.8156e-02,  1.8837e-01, -2.5204e-01,
          3.6151e-01,  1.3546e-01, -7.3834e-01,  1.2745e-01,  2.8338e-01,
         -1.6752e+00,  9.2276e-01, -1.3134e-01,  5.3769e-01, -2.2278e-02,
          1.4279e-02, -1.6054e-01,  2.6368e-01, -7.7976e-02,  3.2488e-01,
          2.0800e-01, -1.8984e-02, -2.8441e-01, -1.7385e-01,  1.0069e-01,
          1.4515e-01, -1.2480e-01, -3.9276e-01, -9.9727e-02, -2.2106e-01,
          4.3681e-01,  7.2662e-02, -1.3935e-01,  1.4394e-01,  1.4813e-01,
         -5.1785e-02,  9.1725e-03, -8.1324e-02,  1.3074e-01,  1.7354e-01,
         -4.6393e-01, -2.8873e-02,  8.6966e-02, -8.2171e-02,  1.4836e-01,
          1.3707e-01,  3.1123e-01,  4.2945e-01,  4.9838e-01, -2.8177e-01,
         -2.5147e-01, -4.9407e-02,  9.7963e-02, -6.5914e-02, -3.2184e-01,
          2.4206e-01,  8.9160e-02,  3.3849e-02, -2.0887e-02, -8.6203e-02,
          2.8438e-01, -1.6428e-01, -1.4659e-01, -1.4216e-01, -2.8894e-02,
         -8.2480e-02, -1.7773e-01, -3.2238e-01, -5.2350e-02,  4.2828e-03,
         -8.3656e-04,  6.0692e-02, -2.0363e-01, -3.0460e-01, -3.5077e-01,
          1.3335e-01, -2.3527e-01, -7.3149e-01, -3.6470e-01,  2.4137e-01,
         -2.3251e-02,  1.0449e+00, -2.2467e-01,  1.2397e-03,  1.5008e-01,
         -2.5590e-01,  1.3673e-01,  3.1325e-01,  5.8293e-02, -1.3605e-01,
         -2.9976e-01,  3.3180e-01, -1.1064e-01, -2.6754e-01, -8.4516e-03,
          5.3063e-01, -6.3157e-02,  2.5430e-03, -1.3201e-01,  2.1707e-01,
          1.1230e-01,  2.3859e-01,  6.5895e-02, -2.0492e-01, -1.0151e-01,
         -2.0805e-01,  6.1299e-02, -4.2638e-02,  2.7668e-02,  7.7815e-02,
         -1.8305e-01,  1.1751e-02, -1.3132e-01,  2.3394e-02, -5.0678e-02,
         -1.9320e-01,  7.1575e-04,  2.4750e-01, -3.2396e-02,  1.6831e-01,
          2.1421e-01, -5.6177e-02,  6.1683e-03, -1.9760e-03, -3.1163e-02,
          2.3463e-02, -5.7910e-02, -6.3410e-02,  4.0619e-01,  1.0210e-01,
         -7.6934e-03, -5.0934e-01,  7.3303e-03,  1.7876e-02, -8.6062e-02,
          4.0942e-01, -2.2484e-01,  9.5014e-02,  2.1159e-01, -4.5008e-01,
         -1.7106e-01, -1.2931e-01, -1.2585e-01, -2.0195e-02,  1.5185e-01,
         -1.7787e-01,  1.8751e-01,  3.8110e-01, -2.1224e-01,  1.7776e-01,
         -1.2150e-01]], device='cuda:0') tensor(0.2088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
835000 特征值优化 tensor(1.7394, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6783e+00,  7.9870e-01, -4.1021e-01, -1.1756e+00, -1.3921e+00,
          3.1090e+00, -1.3472e+00,  1.4579e+00, -9.9684e-03, -5.4986e-01,
         -1.5785e-01,  9.5988e-01, -7.8729e-02,  1.6398e-01, -2.5938e-01,
          3.7129e-01,  1.4896e-01, -7.2872e-01,  1.4235e-01,  2.7321e-01,
         -1.6981e+00,  9.2749e-01, -1.3929e-01,  5.4645e-01,  2.8841e-03,
         -7.3287e-03, -1.5714e-01,  2.7251e-01, -7.8019e-02,  3.2322e-01,
          2.2227e-01, -2.3278e-02, -2.7555e-01, -1.9627e-01,  1.1044e-01,
          1.4206e-01, -1.3518e-01, -3.8912e-01, -1.1645e-01, -2.2656e-01,
          4.6024e-01,  7.0061e-02, -1.3556e-01,  1.3314e-01,  1.4830e-01,
         -5.6444e-02, -7.2899e-04, -7.0204e-02,  1.3596e-01,  1.6743e-01,
         -4.4751e-01, -3.3002e-02,  1.0118e-01, -6.8721e-02,  1.4078e-01,
          1.4498e-01,  3.1534e-01,  4.4191e-01,  4.8916e-01, -2.9473e-01,
         -2.3380e-01, -4.6703e-02,  1.0764e-01, -7.4326e-02, -3.1113e-01,
          2.4401e-01,  9.5766e-02,  3.8005e-02, -2.2423e-02, -9.3877e-02,
          2.6502e-01, -1.7548e-01, -1.5122e-01, -1.5190e-01, -3.4087e-02,
         -7.3345e-02, -1.8208e-01, -3.2925e-01, -5.0802e-02, -4.7676e-03,
          4.6252e-03,  5.8697e-02, -2.1823e-01, -2.9146e-01, -3.4794e-01,
          1.3597e-01, -2.3834e-01, -7.3384e-01, -3.6047e-01,  2.5544e-01,
         -2.9598e-02,  1.0533e+00, -2.1784e-01,  4.3918e-03,  1.3642e-01,
         -2.6707e-01,  1.4054e-01,  3.1761e-01,  5.2640e-02, -1.2987e-01,
         -2.9426e-01,  3.2615e-01, -1.2995e-01, -2.6709e-01,  6.1092e-03,
          5.2722e-01, -5.0193e-02,  9.9257e-04, -1.1818e-01,  2.1873e-01,
          1.0864e-01,  2.4339e-01,  4.8303e-02, -2.1240e-01, -1.0178e-01,
         -2.0916e-01,  7.1409e-02, -4.7944e-02,  3.2698e-02,  7.7083e-02,
         -1.7718e-01,  2.2375e-02, -1.3305e-01,  2.2361e-02, -4.2323e-02,
         -1.8261e-01, -3.1214e-03,  2.3976e-01, -3.1137e-02,  1.6550e-01,
          2.0761e-01, -6.2282e-02,  1.9124e-02,  6.0469e-04, -2.8075e-02,
          2.2384e-02, -6.8896e-02, -6.6882e-02,  4.1104e-01,  1.1771e-01,
          2.6718e-03, -5.0984e-01,  2.6679e-05,  9.9963e-03, -9.0977e-02,
          4.1693e-01, -2.3063e-01,  9.2706e-02,  2.0679e-01, -4.5379e-01,
         -1.6233e-01, -1.2858e-01, -1.2309e-01, -2.5729e-02,  1.3965e-01,
         -1.7915e-01,  1.7861e-01,  3.7399e-01, -2.1079e-01,  1.7069e-01,
         -1.3150e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
836000 特征值优化 tensor(1.7606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6451e+00,  8.1863e-01, -4.1406e-01, -1.1888e+00, -1.3733e+00,
          3.0780e+00, -1.3651e+00,  1.4664e+00, -2.9875e-02, -5.5852e-01,
         -1.6224e-01,  9.7372e-01, -7.5122e-02,  1.6715e-01, -2.6907e-01,
          3.6525e-01,  1.5292e-01, -7.3043e-01,  1.5243e-01,  2.6556e-01,
         -1.7019e+00,  9.2436e-01, -1.3892e-01,  5.4918e-01,  1.9530e-03,
         -5.2458e-03, -1.7664e-01,  2.5419e-01, -8.0612e-02,  3.1841e-01,
          2.1955e-01, -2.4524e-02, -2.7975e-01, -1.7304e-01,  1.1776e-01,
          1.3675e-01, -1.1877e-01, -3.8596e-01, -1.0652e-01, -2.3327e-01,
          4.5193e-01,  7.0148e-02, -1.3790e-01,  1.3324e-01,  1.5528e-01,
         -6.1709e-02,  1.7821e-02, -7.2872e-02,  1.4007e-01,  1.6953e-01,
         -4.5267e-01, -2.5212e-02,  1.2047e-01, -6.9859e-02,  1.2061e-01,
          1.3148e-01,  3.2741e-01,  4.3403e-01,  4.7867e-01, -2.8807e-01,
         -2.4619e-01, -5.2495e-02,  1.0158e-01, -8.2622e-02, -3.0729e-01,
          2.4417e-01,  8.7839e-02,  3.6787e-02, -2.2483e-02, -9.7011e-02,
          2.5473e-01, -1.7125e-01, -1.4049e-01, -1.3814e-01, -1.9993e-02,
         -8.9132e-02, -1.8971e-01, -3.2299e-01, -3.8627e-02,  3.7097e-03,
          3.2319e-03,  5.8189e-02, -2.0990e-01, -3.0214e-01, -3.6306e-01,
          1.2820e-01, -2.4960e-01, -7.3734e-01, -3.6238e-01,  2.6887e-01,
         -1.8331e-02,  1.0662e+00, -2.3289e-01,  1.4787e-02,  1.3884e-01,
         -2.6614e-01,  1.3736e-01,  3.1419e-01,  4.3708e-02, -1.2582e-01,
         -3.0346e-01,  3.3183e-01, -1.3390e-01, -2.8164e-01,  1.5666e-02,
          5.1940e-01, -4.0209e-02, -2.2754e-03, -1.2423e-01,  2.2224e-01,
          1.1392e-01,  2.4354e-01,  5.5664e-02, -1.9412e-01, -1.0484e-01,
         -2.1070e-01,  6.4317e-02, -4.5738e-02,  1.4468e-02,  7.9802e-02,
         -1.8572e-01,  1.0379e-02, -1.3288e-01,  3.0941e-02, -3.4374e-02,
         -1.9450e-01, -9.2349e-03,  2.4220e-01, -2.1248e-02,  1.5878e-01,
          2.0801e-01, -6.1644e-02,  1.1894e-02, -7.2778e-03, -3.4390e-02,
          3.9082e-02, -4.7950e-02, -7.3359e-02,  3.9621e-01,  9.8381e-02,
         -6.9844e-03, -5.0348e-01, -1.7401e-03,  2.8257e-02, -8.2761e-02,
          4.0909e-01, -2.1857e-01,  1.1274e-01,  2.1176e-01, -4.6934e-01,
         -1.5730e-01, -1.2276e-01, -1.1712e-01, -1.9787e-02,  1.4915e-01,
         -1.7585e-01,  1.9130e-01,  3.8041e-01, -2.2620e-01,  1.7807e-01,
         -1.1620e-01]], device='cuda:0') tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
837000 特征值优化 tensor(1.7658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6053e+00,  8.5719e-01, -4.1697e-01, -1.1837e+00, -1.3325e+00,
          3.0534e+00, -1.3603e+00,  1.4655e+00, -4.5150e-02, -5.7853e-01,
         -1.4992e-01,  9.9137e-01, -7.4802e-02,  1.6400e-01, -2.7929e-01,
          3.7087e-01,  1.5279e-01, -7.3727e-01,  1.6012e-01,  2.5319e-01,
         -1.7080e+00,  9.1300e-01, -1.4198e-01,  5.5265e-01,  1.2162e-02,
         -5.8164e-04, -1.8738e-01,  2.6175e-01, -7.9257e-02,  3.0423e-01,
          2.2019e-01, -2.8044e-02, -2.6721e-01, -1.7722e-01,  1.2897e-01,
          1.3275e-01, -1.1115e-01, -3.9270e-01, -1.1006e-01, -2.4394e-01,
          4.3639e-01,  6.7110e-02, -1.3789e-01,  1.2492e-01,  1.6344e-01,
         -6.1539e-02,  1.6382e-02, -6.8697e-02,  1.3119e-01,  1.7497e-01,
         -4.5165e-01, -3.0174e-02,  1.3194e-01, -6.4487e-02,  1.1191e-01,
          1.3430e-01,  3.2496e-01,  4.4896e-01,  4.7058e-01, -2.8636e-01,
         -2.5028e-01, -5.4950e-02,  1.1435e-01, -8.4905e-02, -3.0839e-01,
          2.3917e-01,  8.9209e-02,  4.2256e-02, -2.1691e-02, -9.6354e-02,
          2.5471e-01, -1.7664e-01, -1.4223e-01, -1.3367e-01, -1.1575e-02,
         -8.7038e-02, -1.9351e-01, -3.1916e-01, -3.9489e-02,  6.7514e-03,
         -2.8570e-03,  5.5765e-02, -2.0855e-01, -3.0574e-01, -3.6234e-01,
          1.3060e-01, -2.3727e-01, -7.3461e-01, -3.5280e-01,  2.9281e-01,
         -1.0660e-02,  1.0928e+00, -2.1600e-01,  1.0770e-02,  1.3709e-01,
         -2.6330e-01,  1.4890e-01,  3.1631e-01,  2.8882e-02, -1.3218e-01,
         -2.9594e-01,  3.3313e-01, -1.4096e-01, -2.9272e-01,  7.5176e-03,
          5.2056e-01, -3.5294e-02, -3.3964e-03, -1.4107e-01,  2.1309e-01,
          1.1274e-01,  2.3828e-01,  5.9335e-02, -1.8376e-01, -9.7724e-02,
         -2.0783e-01,  6.6943e-02, -4.0256e-02,  1.0149e-02,  8.8214e-02,
         -1.9175e-01,  1.7278e-02, -1.3537e-01,  2.9928e-02, -4.2696e-02,
         -1.9090e-01, -1.0949e-02,  2.3253e-01, -1.4979e-02,  1.5887e-01,
          2.0878e-01, -7.1489e-02,  1.9753e-02, -2.4679e-04, -2.8642e-02,
          4.3522e-02, -5.0337e-02, -6.5267e-02,  3.8082e-01,  9.8826e-02,
         -1.0155e-02, -5.0326e-01, -3.7528e-03,  2.6430e-02, -7.7504e-02,
          4.0536e-01, -2.1593e-01,  1.1186e-01,  2.0233e-01, -4.8087e-01,
         -1.5610e-01, -1.3149e-01, -1.2450e-01, -2.3398e-02,  1.4998e-01,
         -1.6714e-01,  1.9658e-01,  3.7753e-01, -2.1893e-01,  1.7196e-01,
         -1.0972e-01]], device='cuda:0') tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
838000 特征值优化 tensor(1.7417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5906e+00,  8.7244e-01, -4.1256e-01, -1.1887e+00, -1.2981e+00,
          3.0398e+00, -1.3843e+00,  1.4875e+00, -5.7012e-02, -5.8207e-01,
         -1.5216e-01,  9.9239e-01, -7.6064e-02,  1.5451e-01, -2.9148e-01,
          3.8527e-01,  1.6524e-01, -7.3196e-01,  1.5997e-01,  2.3855e-01,
         -1.7143e+00,  9.1347e-01, -1.4155e-01,  5.5564e-01,  1.6416e-02,
         -6.1335e-04, -1.9097e-01,  2.4419e-01, -6.8933e-02,  2.9345e-01,
          2.2265e-01, -2.3369e-02, -2.5935e-01, -1.7339e-01,  1.4371e-01,
          1.2342e-01, -1.1066e-01, -3.9319e-01, -1.0403e-01, -2.3639e-01,
          4.4594e-01,  6.7844e-02, -1.3758e-01,  1.1793e-01,  1.8159e-01,
         -6.5766e-02,  1.3508e-02, -6.8690e-02,  1.4477e-01,  1.7778e-01,
         -4.4468e-01, -2.6265e-02,  1.4205e-01, -6.6520e-02,  9.9847e-02,
          1.4660e-01,  3.3981e-01,  4.4428e-01,  4.5211e-01, -2.8516e-01,
         -2.5180e-01, -5.9544e-02,  1.1379e-01, -8.8267e-02, -3.0614e-01,
          2.3127e-01,  9.8919e-02,  4.4304e-02, -2.2701e-02, -1.1021e-01,
          2.4423e-01, -1.8003e-01, -1.3469e-01, -1.3308e-01, -7.6198e-03,
         -9.5584e-02, -1.9814e-01, -3.2012e-01, -4.9507e-02,  1.1936e-02,
         -5.2686e-03,  5.7178e-02, -2.0177e-01, -3.1096e-01, -3.6484e-01,
          1.1942e-01, -2.4120e-01, -7.4132e-01, -3.6021e-01,  3.0325e-01,
         -6.6064e-03,  1.0888e+00, -2.1860e-01,  1.5555e-02,  1.3540e-01,
         -2.6748e-01,  1.4192e-01,  3.2261e-01,  3.2878e-02, -1.1873e-01,
         -3.0466e-01,  3.3195e-01, -1.5059e-01, -2.9938e-01,  1.8451e-02,
          5.1363e-01, -2.7640e-02, -1.2938e-02, -1.3170e-01,  2.1500e-01,
          1.1565e-01,  2.3872e-01,  5.5719e-02, -1.7924e-01, -1.0795e-01,
         -2.0108e-01,  6.8237e-02, -4.3067e-02,  2.6826e-03,  9.0701e-02,
         -1.9676e-01,  7.7441e-03, -1.3378e-01,  3.0733e-02, -3.1888e-02,
         -1.9355e-01, -1.3757e-02,  2.4215e-01, -1.4563e-02,  1.5174e-01,
          2.0483e-01, -7.0184e-02,  1.7695e-02, -1.2400e-02, -3.7262e-02,
          5.1782e-02, -4.2082e-02, -7.0278e-02,  3.9060e-01,  9.3881e-02,
         -1.4010e-02, -5.0451e-01, -1.2725e-02,  3.2844e-02, -8.8069e-02,
          4.0277e-01, -2.1494e-01,  1.1342e-01,  2.1886e-01, -4.8419e-01,
         -1.5570e-01, -1.2950e-01, -1.0641e-01, -6.8023e-03,  1.5989e-01,
         -1.6692e-01,  2.0421e-01,  3.8003e-01, -2.3284e-01,  1.8326e-01,
         -1.0473e-01]], device='cuda:0') tensor(0.2351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
839000 特征值优化 tensor(1.7598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5576e+00,  8.9045e-01, -4.1241e-01, -1.1930e+00, -1.2937e+00,
          3.0274e+00, -1.3944e+00,  1.4984e+00, -6.7163e-02, -5.8160e-01,
         -1.4838e-01,  9.7753e-01, -7.1840e-02,  1.4110e-01, -2.7524e-01,
          3.7534e-01,  1.7021e-01, -7.3029e-01,  1.6345e-01,  2.3736e-01,
         -1.7137e+00,  9.0214e-01, -1.4832e-01,  5.4543e-01,  1.9168e-02,
         -1.7935e-02, -1.8710e-01,  2.4445e-01, -7.3575e-02,  2.9455e-01,
          2.2773e-01, -1.1669e-02, -2.6534e-01, -1.8712e-01,  1.4979e-01,
          1.2226e-01, -1.1879e-01, -3.8810e-01, -1.0654e-01, -2.4634e-01,
          4.5078e-01,  6.6387e-02, -1.3710e-01,  1.3911e-01,  1.8092e-01,
         -6.9813e-02,  9.8470e-04, -6.7645e-02,  1.3955e-01,  1.7283e-01,
         -4.3761e-01, -3.3668e-02,  1.3946e-01, -6.7026e-02,  1.0538e-01,
          1.4007e-01,  3.3356e-01,  4.3010e-01,  4.4253e-01, -2.8154e-01,
         -2.4662e-01, -6.3060e-02,  1.1013e-01, -9.5541e-02, -2.9832e-01,
          2.3664e-01,  9.0859e-02,  4.9756e-02, -2.5562e-02, -1.0271e-01,
          2.4441e-01, -1.8044e-01, -1.3464e-01, -1.3990e-01, -1.5483e-02,
         -9.0438e-02, -1.9376e-01, -3.2311e-01, -4.1092e-02,  6.0582e-03,
         -2.4277e-03,  6.0197e-02, -2.0816e-01, -3.0392e-01, -3.6911e-01,
          1.2687e-01, -2.5072e-01, -7.4526e-01, -3.7164e-01,  2.8259e-01,
         -1.0617e-02,  1.1079e+00, -2.2867e-01,  1.2960e-02,  1.3603e-01,
         -2.6400e-01,  1.4168e-01,  3.1537e-01,  3.0249e-02, -1.2320e-01,
         -3.0418e-01,  3.3532e-01, -1.5100e-01, -2.8679e-01,  1.8130e-02,
          5.1290e-01, -4.0792e-02, -1.9130e-02, -1.3497e-01,  2.1668e-01,
          1.1613e-01,  2.3621e-01,  5.2519e-02, -1.9594e-01, -1.0147e-01,
         -2.1325e-01,  6.2561e-02, -4.0506e-02,  2.5021e-03,  8.7100e-02,
         -1.9808e-01,  5.9324e-03, -1.3480e-01,  3.1609e-02, -3.2149e-02,
         -1.9785e-01, -1.6631e-02,  2.3839e-01, -2.3009e-02,  1.5306e-01,
          2.0973e-01, -7.0957e-02,  1.9982e-02, -7.0818e-03, -3.3730e-02,
          4.4967e-02, -4.9183e-02, -7.4713e-02,  3.8324e-01,  9.9682e-02,
         -1.3176e-02, -5.0654e-01, -8.6161e-03,  3.5815e-02, -8.0912e-02,
          4.0663e-01, -2.2296e-01,  1.1258e-01,  2.1073e-01, -4.7384e-01,
         -1.5027e-01, -1.2331e-01, -1.2461e-01, -1.4189e-02,  1.5017e-01,
         -1.7882e-01,  1.9180e-01,  3.7650e-01, -2.2880e-01,  1.7668e-01,
         -1.1322e-01]], device='cuda:0') tensor(0.2537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
840000 特征值优化 tensor(1.7449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5465e+00,  9.2364e-01, -3.9766e-01, -1.1815e+00, -1.2556e+00,
          3.0249e+00, -1.4168e+00,  1.5062e+00, -7.3827e-02, -5.9706e-01,
         -1.6016e-01,  9.8316e-01, -7.8296e-02,  1.2309e-01, -2.8376e-01,
          3.8884e-01,  1.6887e-01, -7.2772e-01,  1.6015e-01,  2.2418e-01,
         -1.7215e+00,  9.0099e-01, -1.4945e-01,  5.6092e-01,  2.7390e-02,
         -8.3243e-03, -1.9871e-01,  2.4469e-01, -6.8135e-02,  2.7980e-01,
          2.2549e-01, -1.9134e-02, -2.5372e-01, -1.8233e-01,  1.5503e-01,
          1.2172e-01, -1.1150e-01, -3.8116e-01, -1.0789e-01, -2.4576e-01,
          4.4624e-01,  6.8081e-02, -1.4149e-01,  1.2274e-01,  1.9248e-01,
         -7.4043e-02,  5.6526e-03, -6.6078e-02,  1.4930e-01,  1.7711e-01,
         -4.3592e-01, -2.0281e-02,  1.4920e-01, -6.3564e-02,  9.5984e-02,
          1.4418e-01,  3.3411e-01,  4.3954e-01,  4.3624e-01, -2.8716e-01,
         -2.4045e-01, -6.4341e-02,  1.0355e-01, -8.8397e-02, -3.0016e-01,
          2.2616e-01,  9.2152e-02,  5.2323e-02, -1.6286e-02, -1.0475e-01,
          2.3473e-01, -1.8967e-01, -1.3431e-01, -1.3366e-01, -5.4494e-03,
         -8.8257e-02, -1.9753e-01, -3.2231e-01, -3.8202e-02,  1.6851e-02,
         -6.0741e-03,  5.9991e-02, -2.0370e-01, -2.9979e-01, -3.7248e-01,
          1.2492e-01, -2.6084e-01, -7.5401e-01, -3.5583e-01,  3.0766e-01,
         -9.9736e-04,  1.1061e+00, -2.2072e-01,  1.1159e-02,  1.3182e-01,
         -2.6786e-01,  1.4593e-01,  3.2434e-01,  1.0068e-02, -1.1389e-01,
         -3.0610e-01,  3.2846e-01, -1.7736e-01, -2.9420e-01,  3.0524e-02,
          5.0504e-01, -2.4269e-02, -1.3685e-02, -1.3062e-01,  2.1972e-01,
          1.2003e-01,  2.3342e-01,  5.4498e-02, -1.8614e-01, -1.1047e-01,
         -2.1657e-01,  5.9944e-02, -4.3446e-02, -9.1030e-03,  8.9467e-02,
         -2.0766e-01,  2.6419e-03, -1.3861e-01,  3.0813e-02, -2.6876e-02,
         -1.9404e-01, -2.1224e-02,  2.3728e-01, -1.8145e-02,  1.4887e-01,
          2.0338e-01, -7.0569e-02,  1.3910e-02, -1.5878e-02, -4.0109e-02,
          5.5215e-02, -4.5633e-02, -6.8428e-02,  3.8375e-01,  9.9559e-02,
         -2.4333e-02, -5.0560e-01, -1.6467e-02,  4.0252e-02, -9.3858e-02,
          4.0198e-01, -2.2171e-01,  1.2058e-01,  2.1391e-01, -4.7619e-01,
         -1.5244e-01, -1.2295e-01, -1.0465e-01, -9.3248e-03,  1.5570e-01,
         -1.7210e-01,  1.9871e-01,  3.7907e-01, -2.4189e-01,  1.7814e-01,
         -1.1013e-01]], device='cuda:0') tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
841000 特征值优化 tensor(1.7682, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5228e+00,  9.2905e-01, -4.0782e-01, -1.1931e+00, -1.2305e+00,
          2.9965e+00, -1.4035e+00,  1.5080e+00, -8.3301e-02, -6.1052e-01,
         -1.5785e-01,  9.8604e-01, -6.7131e-02,  1.3078e-01, -2.7403e-01,
          4.0550e-01,  1.6811e-01, -7.3667e-01,  1.6207e-01,  2.2044e-01,
         -1.7226e+00,  8.9556e-01, -1.5006e-01,  5.6301e-01,  4.5791e-02,
         -9.4700e-03, -1.9510e-01,  2.4741e-01, -7.2517e-02,  2.6999e-01,
          2.3348e-01, -9.5299e-03, -2.6119e-01, -1.7140e-01,  1.5711e-01,
          1.1543e-01, -1.1199e-01, -3.8240e-01, -1.1475e-01, -2.5099e-01,
          4.3423e-01,  6.5594e-02, -1.3557e-01,  1.2628e-01,  1.9585e-01,
         -6.8639e-02,  3.1940e-03, -5.8987e-02,  1.3900e-01,  1.8602e-01,
         -4.2970e-01, -3.3947e-02,  1.4609e-01, -6.2471e-02,  9.5631e-02,
          1.4241e-01,  3.2867e-01,  4.3588e-01,  4.2853e-01, -2.8240e-01,
         -2.5230e-01, -6.2236e-02,  1.1028e-01, -9.4619e-02, -2.9516e-01,
          2.2568e-01,  9.3585e-02,  5.7018e-02, -1.4602e-02, -1.0097e-01,
          2.3743e-01, -1.9139e-01, -1.3932e-01, -1.3608e-01, -9.7598e-03,
         -8.6773e-02, -1.8893e-01, -3.2796e-01, -3.6706e-02,  1.2847e-02,
         -7.8172e-03,  5.3660e-02, -2.0807e-01, -3.1456e-01, -3.5412e-01,
          1.3160e-01, -2.4322e-01, -7.4782e-01, -3.6419e-01,  3.0898e-01,
          1.5824e-03,  1.1170e+00, -2.1593e-01,  1.6835e-02,  1.3809e-01,
         -2.6482e-01,  1.5895e-01,  3.2905e-01,  5.6440e-03, -1.2741e-01,
         -2.9593e-01,  3.3594e-01, -1.7712e-01, -3.0234e-01,  2.0492e-02,
          5.0284e-01, -3.1502e-02, -2.1816e-02, -1.2616e-01,  2.1459e-01,
          1.2031e-01,  2.2949e-01,  5.4745e-02, -1.8581e-01, -9.8521e-02,
         -2.1045e-01,  6.2469e-02, -3.0342e-02,  1.6855e-03,  9.3862e-02,
         -2.0828e-01,  9.0468e-03, -1.3757e-01,  2.9660e-02, -2.7882e-02,
         -1.9123e-01, -2.1653e-02,  2.3241e-01, -2.1158e-02,  1.5098e-01,
          2.0578e-01, -7.6635e-02,  2.5412e-02, -8.7964e-03, -3.0648e-02,
          5.2708e-02, -4.9170e-02, -6.4654e-02,  3.8040e-01,  9.9572e-02,
         -1.5526e-02, -5.0560e-01, -7.0419e-03,  3.2977e-02, -8.0412e-02,
          4.0102e-01, -2.2751e-01,  1.1489e-01,  2.0219e-01, -4.7397e-01,
         -1.4569e-01, -1.3427e-01, -1.2143e-01, -1.4146e-02,  1.5319e-01,
         -1.7244e-01,  1.9379e-01,  3.6666e-01, -2.3014e-01,  1.6868e-01,
         -1.0955e-01]], device='cuda:0') tensor(0.2045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
842000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5091e+00,  9.4291e-01, -3.9995e-01, -1.1875e+00, -1.2092e+00,
          3.0028e+00, -1.4171e+00,  1.5131e+00, -8.8313e-02, -6.1423e-01,
         -1.6919e-01,  9.8436e-01, -7.2823e-02,  1.1853e-01, -2.7786e-01,
          4.0661e-01,  1.7235e-01, -7.3332e-01,  1.5932e-01,  2.1199e-01,
         -1.7339e+00,  8.8940e-01, -1.4734e-01,  5.6136e-01,  5.0326e-02,
         -9.6678e-03, -2.0173e-01,  2.3762e-01, -6.3982e-02,  2.6659e-01,
          2.3478e-01, -1.2430e-02, -2.5980e-01, -1.7925e-01,  1.5915e-01,
          1.1064e-01, -1.1330e-01, -3.8805e-01, -1.1320e-01, -2.4703e-01,
          4.4292e-01,  6.8588e-02, -1.3952e-01,  1.2330e-01,  2.0546e-01,
         -7.3035e-02,  3.5261e-03, -5.9936e-02,  1.4313e-01,  1.8797e-01,
         -4.3430e-01, -2.5854e-02,  1.5978e-01, -6.5324e-02,  8.6360e-02,
          1.5253e-01,  3.3335e-01,  4.3592e-01,  4.2290e-01, -2.8269e-01,
         -2.5475e-01, -6.3634e-02,  1.1081e-01, -9.3526e-02, -3.0313e-01,
          2.2128e-01,  9.8893e-02,  5.4470e-02, -1.4690e-02, -1.0737e-01,
          2.3326e-01, -1.9152e-01, -1.3360e-01, -1.3289e-01, -4.8226e-03,
         -8.6714e-02, -1.9875e-01, -3.2812e-01, -3.9617e-02,  1.4633e-02,
         -8.6949e-03,  6.1084e-02, -2.0220e-01, -3.0948e-01, -3.6282e-01,
          1.2403e-01, -2.5544e-01, -7.5624e-01, -3.6094e-01,  3.0736e-01,
          4.6778e-03,  1.1148e+00, -2.1942e-01,  1.2085e-02,  1.3361e-01,
         -2.6959e-01,  1.5235e-01,  3.2698e-01, -3.6747e-03, -1.1743e-01,
         -3.0026e-01,  3.3615e-01, -1.7605e-01, -3.0182e-01,  2.5742e-02,
          4.9832e-01, -1.8663e-02, -2.3296e-02, -1.2785e-01,  2.1559e-01,
          1.2226e-01,  2.2992e-01,  5.6045e-02, -1.8196e-01, -1.0170e-01,
         -2.1253e-01,  5.8708e-02, -3.5067e-02, -5.5445e-03,  8.9706e-02,
         -2.0977e-01,  7.7450e-04, -1.3726e-01,  3.0910e-02, -2.5913e-02,
         -1.9932e-01, -2.1094e-02,  2.3542e-01, -2.0016e-02,  1.4791e-01,
          2.0737e-01, -7.6976e-02,  2.2992e-02, -1.7627e-02, -3.5976e-02,
          5.6204e-02, -4.4918e-02, -6.5629e-02,  3.8465e-01,  9.3022e-02,
         -2.0119e-02, -5.0563e-01, -1.0026e-02,  3.6082e-02, -9.0832e-02,
          4.0100e-01, -2.2182e-01,  1.1924e-01,  2.0631e-01, -4.7998e-01,
         -1.4041e-01, -1.3178e-01, -1.0955e-01, -6.1435e-03,  1.5736e-01,
         -1.6845e-01,  1.9652e-01,  3.6343e-01, -2.4580e-01,  1.7369e-01,
         -1.0885e-01]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
843000 特征值优化 tensor(1.7417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4711e+00,  9.7767e-01, -4.1301e-01, -1.1832e+00, -1.1970e+00,
          2.9832e+00, -1.4449e+00,  1.5375e+00, -9.3491e-02, -5.8985e-01,
         -1.6877e-01,  9.6857e-01, -5.2588e-02,  1.1574e-01, -2.8295e-01,
          4.0242e-01,  1.5225e-01, -7.3547e-01,  1.6653e-01,  2.0999e-01,
         -1.7352e+00,  8.9170e-01, -1.5693e-01,  5.6788e-01,  5.8131e-02,
         -1.8325e-02, -1.8273e-01,  2.5019e-01, -8.0370e-02,  2.6146e-01,
          2.5556e-01, -1.1168e-02, -2.8121e-01, -1.9262e-01,  1.5492e-01,
          1.0208e-01, -1.2643e-01, -3.6790e-01, -1.2203e-01, -2.5777e-01,
          4.3941e-01,  6.7944e-02, -1.3640e-01,  1.4279e-01,  2.1892e-01,
         -5.8421e-02,  3.4059e-03, -5.9006e-02,  1.4149e-01,  1.8246e-01,
         -4.1210e-01, -4.0264e-02,  1.5242e-01, -6.1021e-02,  8.8811e-02,
          1.3036e-01,  3.1908e-01,  4.2795e-01,  4.2992e-01, -2.8808e-01,
         -2.3100e-01, -5.5515e-02,  1.0703e-01, -9.4236e-02, -2.8595e-01,
          2.3076e-01,  9.1275e-02,  5.7262e-02, -1.6293e-02, -9.0739e-02,
          2.2913e-01, -1.9824e-01, -1.3854e-01, -1.3946e-01, -2.4485e-02,
         -7.5645e-02, -1.8314e-01, -3.4574e-01, -4.2488e-02,  8.0904e-03,
         -4.7572e-03,  5.1096e-02, -2.1367e-01, -3.1159e-01, -3.6087e-01,
          1.4462e-01, -2.5314e-01, -7.4810e-01, -3.5852e-01,  3.0481e-01,
         -6.9471e-03,  1.1323e+00, -2.2155e-01, -4.5251e-04,  1.3919e-01,
         -2.6551e-01,  1.6415e-01,  3.3726e-01, -7.7880e-03, -1.3056e-01,
         -3.0722e-01,  3.3084e-01, -1.9844e-01, -2.9186e-01,  1.7364e-02,
          4.7666e-01, -2.9431e-02, -2.2446e-02, -1.2187e-01,  2.1696e-01,
          1.2079e-01,  2.2259e-01,  4.3228e-02, -2.0951e-01, -8.9827e-02,
         -2.2501e-01,  6.6957e-02, -3.9712e-02,  1.1168e-02,  9.6631e-02,
         -2.1427e-01,  7.8146e-03, -1.3998e-01,  2.8882e-02, -2.6595e-02,
         -1.9429e-01, -2.0907e-02,  2.3533e-01, -3.2109e-02,  1.5707e-01,
          2.1671e-01, -7.2412e-02,  3.1468e-02, -1.1396e-02, -2.4099e-02,
          4.4140e-02, -6.0265e-02, -7.2304e-02,  3.8270e-01,  1.1077e-01,
         -1.0165e-02, -5.0912e-01, -1.3010e-02,  3.4955e-02, -9.2276e-02,
          3.8930e-01, -2.3292e-01,  1.0798e-01,  1.9532e-01, -4.6756e-01,
         -1.4861e-01, -1.4016e-01, -1.2572e-01, -1.5590e-02,  1.5793e-01,
         -1.8632e-01,  1.8577e-01,  3.5781e-01, -2.3891e-01,  1.5570e-01,
         -1.3002e-01]], device='cuda:0') tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
844000 特征值优化 tensor(1.7517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5024e+00,  9.9382e-01, -4.3258e-01, -1.1812e+00, -1.1501e+00,
          2.9655e+00, -1.4493e+00,  1.5298e+00, -6.3111e-02, -5.6484e-01,
         -1.6233e-01,  9.8884e-01, -5.5495e-02,  1.1114e-01, -3.0147e-01,
          4.0587e-01,  1.5819e-01, -7.1589e-01,  1.5956e-01,  1.8261e-01,
         -1.7480e+00,  8.8152e-01, -1.5023e-01,  5.8481e-01,  6.7213e-02,
         -3.0305e-02, -2.0168e-01,  2.4181e-01, -7.4365e-02,  2.5755e-01,
          2.4566e-01, -2.2055e-02, -2.5866e-01, -1.6513e-01,  1.3364e-01,
          9.4688e-02, -1.2045e-01, -3.7704e-01, -1.1890e-01, -2.4936e-01,
          4.2614e-01,  5.9485e-02, -1.3406e-01,  1.3092e-01,  2.2944e-01,
         -4.0361e-02,  1.8719e-02, -6.2179e-02,  1.3540e-01,  1.9538e-01,
         -4.1491e-01, -4.3961e-02,  1.6519e-01, -7.7877e-02,  7.6239e-02,
          1.3850e-01,  3.4032e-01,  4.3463e-01,  4.3812e-01, -2.8398e-01,
         -2.4676e-01, -5.6314e-02,  1.0422e-01, -9.9620e-02, -2.7209e-01,
          2.2760e-01,  7.8543e-02,  6.2314e-02, -2.3762e-02, -9.6400e-02,
          2.2041e-01, -1.9145e-01, -1.2106e-01, -1.3257e-01, -1.0166e-02,
         -9.2016e-02, -1.9090e-01, -3.3935e-01, -3.6599e-02,  2.2663e-02,
         -1.1875e-02,  5.7070e-02, -2.0950e-01, -3.0434e-01, -3.6981e-01,
          1.2677e-01, -2.6388e-01, -7.6754e-01, -3.6133e-01,  3.3184e-01,
         -1.1117e-02,  1.1548e+00, -2.1749e-01,  1.2739e-02,  1.3773e-01,
         -2.5430e-01,  1.5368e-01,  3.5757e-01, -1.4626e-02, -1.2433e-01,
         -3.0297e-01,  3.3666e-01, -2.3118e-01, -3.0751e-01,  2.2035e-02,
          4.7567e-01, -1.7297e-02, -1.9482e-02, -1.2582e-01,  2.1659e-01,
          1.1920e-01,  2.1647e-01,  6.1649e-02, -1.9607e-01, -1.0677e-01,
         -2.1395e-01,  7.3170e-02, -3.7354e-02,  5.3694e-03,  1.1153e-01,
         -2.1425e-01, -1.3963e-03, -1.3499e-01,  3.2352e-02, -1.6781e-02,
         -1.9429e-01, -2.6202e-02,  2.4325e-01, -2.7863e-02,  1.5616e-01,
          2.1086e-01, -7.8909e-02,  2.4741e-02, -1.9750e-02, -3.2503e-02,
          4.9023e-02, -4.6758e-02, -7.4449e-02,  3.7172e-01,  1.0181e-01,
         -3.4574e-02, -5.1414e-01, -1.2188e-02,  4.8887e-02, -9.8376e-02,
          3.9139e-01, -2.2303e-01,  1.2793e-01,  2.0822e-01, -4.7290e-01,
         -1.4195e-01, -1.3565e-01, -1.0816e-01, -7.6587e-03,  1.5997e-01,
         -1.6771e-01,  2.0354e-01,  3.6461e-01, -2.5056e-01,  1.7093e-01,
         -1.1582e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
845000 特征值优化 tensor(1.7642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4932e+00,  1.0053e+00, -4.2962e-01, -1.1713e+00, -1.1467e+00,
          2.9314e+00, -1.4447e+00,  1.5267e+00, -5.8919e-02, -5.7624e-01,
         -1.5408e-01,  9.7891e-01, -5.0014e-02,  1.0807e-01, -2.9096e-01,
          4.1300e-01,  1.7621e-01, -7.2252e-01,  1.6076e-01,  1.7513e-01,
         -1.7482e+00,  8.7875e-01, -1.5114e-01,  5.8949e-01,  7.8851e-02,
         -3.6197e-02, -1.9734e-01,  2.5122e-01, -7.2977e-02,  2.4873e-01,
          2.5190e-01, -2.6776e-02, -2.5823e-01, -1.8095e-01,  1.3219e-01,
          8.9252e-02, -1.3097e-01, -3.6760e-01, -1.3599e-01, -2.4597e-01,
          4.2834e-01,  6.4950e-02, -1.3930e-01,  1.2002e-01,  2.3191e-01,
         -3.7017e-02,  3.4544e-03, -6.5604e-02,  1.3274e-01,  2.0698e-01,
         -4.1258e-01, -5.7846e-02,  1.6471e-01, -7.3525e-02,  7.5736e-02,
          1.3565e-01,  3.3979e-01,  4.4976e-01,  4.3560e-01, -2.8468e-01,
         -2.4289e-01, -5.5443e-02,  1.1165e-01, -9.9742e-02, -2.6892e-01,
          2.3463e-01,  7.6650e-02,  5.9650e-02, -2.4111e-02, -1.0035e-01,
          2.2239e-01, -1.9219e-01, -1.2320e-01, -1.3447e-01, -1.1843e-02,
         -8.7422e-02, -1.8999e-01, -3.4192e-01, -3.3921e-02,  1.8873e-02,
         -5.3145e-03,  4.6388e-02, -2.1846e-01, -3.0259e-01, -3.6106e-01,
          1.2917e-01, -2.5360e-01, -7.5527e-01, -3.6485e-01,  3.3145e-01,
         -1.2469e-02,  1.1621e+00, -2.0952e-01,  2.0319e-02,  1.3564e-01,
         -2.5778e-01,  1.5415e-01,  3.6204e-01, -2.3872e-02, -1.2323e-01,
         -3.0296e-01,  3.4602e-01, -2.3429e-01, -3.0769e-01,  2.3703e-02,
          4.6787e-01, -1.1361e-02, -1.2339e-02, -1.0326e-01,  2.1631e-01,
          1.1367e-01,  2.2370e-01,  5.4800e-02, -1.9721e-01, -9.9017e-02,
         -2.1604e-01,  8.0185e-02, -3.3325e-02,  1.7126e-02,  1.0854e-01,
         -2.1400e-01,  3.5823e-03, -1.3006e-01,  1.8583e-02, -1.4035e-02,
         -1.9084e-01, -2.6652e-02,  2.4343e-01, -2.6606e-02,  1.5648e-01,
          2.0424e-01, -7.9744e-02,  3.5957e-02, -2.3548e-02, -3.0693e-02,
          3.0179e-02, -5.5956e-02, -7.4524e-02,  3.8640e-01,  1.0411e-01,
         -2.7423e-02, -5.1128e-01, -2.7964e-03,  3.9570e-02, -9.2999e-02,
          3.7792e-01, -2.1775e-01,  1.1731e-01,  1.9982e-01, -4.7584e-01,
         -1.4259e-01, -1.5354e-01, -1.0499e-01, -1.4601e-02,  1.5531e-01,
         -1.7845e-01,  1.9859e-01,  3.6073e-01, -2.4440e-01,  1.5959e-01,
         -1.2309e-01]], device='cuda:0') tensor(0.2203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
846000 特征值优化 tensor(1.7667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4973e+00,  1.0023e+00, -4.4028e-01, -1.1822e+00, -1.1362e+00,
          2.9325e+00, -1.4367e+00,  1.5232e+00, -5.7646e-02, -5.8610e-01,
         -1.4997e-01,  9.9223e-01, -5.0693e-02,  1.0787e-01, -2.9605e-01,
          4.2033e-01,  1.6309e-01, -7.2819e-01,  1.6632e-01,  1.6344e-01,
         -1.7539e+00,  8.7709e-01, -1.4454e-01,  5.9775e-01,  8.6903e-02,
         -2.8803e-02, -2.1483e-01,  2.4998e-01, -8.9619e-02,  2.4778e-01,
          2.5266e-01, -2.6132e-02, -2.5692e-01, -1.7135e-01,  1.2511e-01,
          8.4931e-02, -1.1853e-01, -3.6865e-01, -1.2347e-01, -2.5309e-01,
          4.1738e-01,  6.1307e-02, -1.3275e-01,  1.2284e-01,  2.3299e-01,
         -3.8012e-02,  1.2692e-02, -6.0382e-02,  1.2398e-01,  2.0153e-01,
         -4.0882e-01, -5.5949e-02,  1.6897e-01, -7.8960e-02,  6.9670e-02,
          1.3417e-01,  3.3868e-01,  4.5961e-01,  4.4822e-01, -2.8092e-01,
         -2.4478e-01, -5.6292e-02,  1.1053e-01, -1.0201e-01, -2.7734e-01,
          2.2497e-01,  7.1152e-02,  5.8453e-02, -2.2003e-02, -9.5142e-02,
          2.2102e-01, -1.9252e-01, -1.2856e-01, -1.2864e-01, -3.8866e-03,
         -8.9810e-02, -1.8640e-01, -3.3191e-01, -3.1821e-02,  2.3867e-02,
         -1.2435e-02,  4.9096e-02, -2.1684e-01, -3.0267e-01, -3.6176e-01,
          1.2612e-01, -2.5193e-01, -7.5661e-01, -3.5849e-01,  3.5169e-01,
         -9.2368e-03,  1.1680e+00, -2.0286e-01,  1.7384e-02,  1.3807e-01,
         -2.5444e-01,  1.6369e-01,  3.5404e-01, -3.0517e-02, -1.3158e-01,
         -2.8900e-01,  3.3998e-01, -2.4369e-01, -3.2092e-01,  1.8333e-02,
          4.6056e-01, -1.4664e-02, -1.3055e-02, -1.2084e-01,  2.1592e-01,
          1.1376e-01,  2.2565e-01,  6.3539e-02, -1.8792e-01, -1.0086e-01,
         -2.1281e-01,  7.6567e-02, -3.5118e-02,  1.3361e-02,  1.1610e-01,
         -2.1382e-01,  8.1877e-03, -1.3207e-01,  2.1972e-02, -1.4630e-02,
         -1.7998e-01, -2.3384e-02,  2.4020e-01, -2.2221e-02,  1.5858e-01,
          2.0576e-01, -8.3509e-02,  3.3820e-02, -1.4837e-02, -2.6464e-02,
          4.3555e-02, -5.4342e-02, -7.1103e-02,  3.6686e-01,  9.5475e-02,
         -3.2893e-02, -5.0887e-01, -1.7867e-03,  4.2144e-02, -8.7167e-02,
          3.8249e-01, -2.2153e-01,  1.2556e-01,  1.8970e-01, -4.7460e-01,
         -1.3114e-01, -1.4524e-01, -1.1389e-01, -1.6902e-02,  1.6002e-01,
         -1.6436e-01,  2.0553e-01,  3.5826e-01, -2.4511e-01,  1.6047e-01,
         -1.1786e-01]], device='cuda:0') tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
847000 特征值优化 tensor(1.7450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4907e+00,  1.0134e+00, -4.1536e-01, -1.1747e+00, -1.1446e+00,
          2.9342e+00, -1.4369e+00,  1.5278e+00, -4.0004e-02, -5.8198e-01,
         -1.5053e-01,  9.8164e-01, -4.4608e-02,  1.1951e-01, -2.9085e-01,
          4.1836e-01,  1.6613e-01, -7.2065e-01,  1.6733e-01,  1.6306e-01,
         -1.7499e+00,  8.8058e-01, -1.4788e-01,  5.8971e-01,  9.3886e-02,
         -5.4602e-02, -1.9092e-01,  2.5759e-01, -9.0486e-02,  2.4788e-01,
          2.5181e-01, -2.0014e-02, -2.5604e-01, -1.8609e-01,  1.2396e-01,
          8.0779e-02, -1.4022e-01, -3.5056e-01, -1.3473e-01, -2.6353e-01,
          4.3010e-01,  6.9119e-02, -1.3943e-01,  1.2827e-01,  2.3514e-01,
         -3.8790e-02,  6.4425e-03, -5.7967e-02,  1.2797e-01,  1.9975e-01,
         -3.9560e-01, -6.2739e-02,  1.6343e-01, -7.9849e-02,  7.6336e-02,
          1.3997e-01,  3.3072e-01,  4.6706e-01,  4.4176e-01, -2.8735e-01,
         -2.2500e-01, -5.2478e-02,  1.1672e-01, -1.1114e-01, -2.6246e-01,
          2.3000e-01,  7.6228e-02,  6.6976e-02, -2.2365e-02, -9.4926e-02,
          2.2239e-01, -2.0128e-01, -1.3037e-01, -1.3930e-01, -1.1495e-02,
         -8.3106e-02, -1.8279e-01, -3.4607e-01, -3.4071e-02,  1.2981e-02,
         -4.8647e-03,  3.6714e-02, -2.3348e-01, -2.9462e-01, -3.6601e-01,
          1.3504e-01, -2.5440e-01, -7.5978e-01, -3.7032e-01,  3.3059e-01,
         -1.9807e-02,  1.1589e+00, -2.0287e-01,  1.8541e-02,  1.2915e-01,
         -2.6443e-01,  1.6283e-01,  3.6116e-01, -2.8865e-02, -1.2243e-01,
         -2.9313e-01,  3.3531e-01, -2.6409e-01, -3.0866e-01,  1.7457e-02,
          4.5739e-01, -1.6439e-02, -1.1845e-02, -1.0210e-01,  2.1333e-01,
          1.1318e-01,  2.2833e-01,  5.1835e-02, -2.0132e-01, -9.7009e-02,
         -2.2904e-01,  8.3653e-02, -2.9139e-02,  2.3591e-02,  1.0718e-01,
         -2.1312e-01,  1.0346e-02, -1.3500e-01,  1.2367e-02, -1.0019e-02,
         -1.8345e-01, -2.5544e-02,  2.4282e-01, -3.3012e-02,  1.6089e-01,
          2.0646e-01, -8.4136e-02,  4.2974e-02, -1.5353e-02, -2.4649e-02,
          2.6849e-02, -5.3861e-02, -7.3223e-02,  3.7035e-01,  1.1308e-01,
         -1.8242e-02, -5.1305e-01, -2.5977e-03,  3.2555e-02, -8.7666e-02,
          3.8763e-01, -2.3098e-01,  1.1777e-01,  1.9653e-01, -4.6775e-01,
         -1.3797e-01, -1.4944e-01, -1.1239e-01, -2.3108e-02,  1.4379e-01,
         -1.8511e-01,  1.9263e-01,  3.6168e-01, -2.3921e-01,  1.4505e-01,
         -1.3647e-01]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
848000 特征值优化 tensor(1.7441, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4908,  1.0243, -0.4409, -1.1806, -1.1344,  2.9322, -1.4497,  1.5326,
         -0.0536, -0.5844, -0.1428,  0.9933, -0.0524,  0.0998, -0.3049,  0.4179,
          0.1653, -0.7218,  0.1732,  0.1409, -1.7510,  0.8722, -0.1434,  0.6012,
          0.0777, -0.0309, -0.2210,  0.2452, -0.0964,  0.2451,  0.2410, -0.0274,
         -0.2563, -0.1761,  0.1190,  0.0826, -0.1159, -0.3690, -0.1246, -0.2534,
          0.4153,  0.0629, -0.1331,  0.1140,  0.2389, -0.0352,  0.0204, -0.0587,
          0.1322,  0.2046, -0.4090, -0.0503,  0.1713, -0.0879,  0.0620,  0.1396,
          0.3482,  0.4582,  0.4455, -0.2797, -0.2461, -0.0599,  0.1123, -0.1056,
         -0.2754,  0.2301,  0.0810,  0.0545, -0.0234, -0.1057,  0.2192, -0.1942,
         -0.1259, -0.1227, -0.0057, -0.1054, -0.1926, -0.3280, -0.0237,  0.0278,
         -0.0191,  0.0455, -0.2186, -0.3005, -0.3760,  0.1156, -0.2518, -0.7631,
         -0.3559,  0.3600, -0.0167,  1.1758, -0.2007,  0.0168,  0.1343, -0.2562,
          0.1593,  0.3663, -0.0337, -0.1250, -0.2973,  0.3371, -0.2582, -0.3224,
          0.0265,  0.4642, -0.0108, -0.0118, -0.1230,  0.2149,  0.1133,  0.2175,
          0.0712, -0.1812, -0.1082, -0.2104,  0.0787, -0.0412,  0.0097,  0.1148,
         -0.2157,  0.0040, -0.1308,  0.0256, -0.0115, -0.1903, -0.0221,  0.2470,
         -0.0234,  0.1530,  0.2051, -0.0826,  0.0289, -0.0219, -0.0284,  0.0451,
         -0.0486, -0.0790,  0.3664,  0.0931, -0.0373, -0.5200, -0.0081,  0.0539,
         -0.0904,  0.3719, -0.2187,  0.1323,  0.2024, -0.4789, -0.1258, -0.1499,
         -0.1014, -0.0052,  0.1647, -0.1631,  0.2134,  0.3659, -0.2553,  0.1664,
         -0.1148]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
849000 特征值优化 tensor(1.7597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4788e+00,  1.0414e+00, -4.5626e-01, -1.1889e+00, -1.1706e+00,
          2.9236e+00, -1.4588e+00,  1.5196e+00, -4.7133e-02, -5.7636e-01,
         -1.4301e-01,  9.9094e-01, -4.5918e-02,  1.0675e-01, -3.0770e-01,
          4.1241e-01,  1.6307e-01, -7.1825e-01,  1.6544e-01,  1.5082e-01,
         -1.7496e+00,  8.7823e-01, -1.5673e-01,  6.0318e-01,  9.1467e-02,
         -4.0577e-02, -2.1204e-01,  2.6013e-01, -8.9429e-02,  2.4676e-01,
          2.4918e-01, -2.0302e-02, -2.5246e-01, -1.8013e-01,  1.1294e-01,
          7.9426e-02, -1.2073e-01, -3.6244e-01, -1.3646e-01, -2.6891e-01,
          4.1548e-01,  5.9822e-02, -1.3380e-01,  1.2413e-01,  2.3486e-01,
         -4.1816e-02,  1.9242e-02, -6.4531e-02,  1.2577e-01,  1.9847e-01,
         -4.0121e-01, -5.8458e-02,  1.7084e-01, -7.6153e-02,  6.5964e-02,
          1.2984e-01,  3.3864e-01,  4.6209e-01,  4.5337e-01, -2.8200e-01,
         -2.4156e-01, -5.8664e-02,  1.1711e-01, -1.0933e-01, -2.5885e-01,
          2.3387e-01,  6.9508e-02,  5.9516e-02, -2.4213e-02, -9.7643e-02,
          2.1809e-01, -1.9300e-01, -1.2551e-01, -1.2313e-01, -9.6522e-03,
         -9.0766e-02, -1.8652e-01, -3.3786e-01, -3.0184e-02,  2.4870e-02,
         -1.3028e-02,  4.3416e-02, -2.1796e-01, -2.9765e-01, -3.7161e-01,
          1.2498e-01, -2.6184e-01, -7.5690e-01, -3.6712e-01,  3.5152e-01,
         -2.1419e-02,  1.1724e+00, -2.0266e-01,  2.6036e-02,  1.4132e-01,
         -2.5064e-01,  1.6125e-01,  3.6287e-01, -4.0421e-02, -1.3224e-01,
         -2.8815e-01,  3.3825e-01, -2.7357e-01, -3.1501e-01,  2.9885e-02,
          4.5452e-01, -1.0723e-02, -6.0489e-03, -1.1539e-01,  2.1128e-01,
          1.1114e-01,  2.3317e-01,  6.1024e-02, -1.9480e-01, -9.8879e-02,
         -2.1956e-01,  7.2107e-02, -3.8272e-02,  1.5271e-02,  1.0257e-01,
         -2.1827e-01,  2.8207e-03, -1.3230e-01,  2.2916e-02, -3.1067e-03,
         -1.9528e-01, -2.2751e-02,  2.5060e-01, -2.1755e-02,  1.6185e-01,
          2.0515e-01, -7.8200e-02,  3.0921e-02, -2.2558e-02, -2.4590e-02,
          3.9207e-02, -5.2342e-02, -8.0286e-02,  3.6789e-01,  9.4878e-02,
         -2.3255e-02, -5.0959e-01, -7.7455e-04,  3.6538e-02, -9.5095e-02,
          3.7715e-01, -2.1561e-01,  1.3200e-01,  1.9647e-01, -4.6943e-01,
         -1.2619e-01, -1.4780e-01, -1.0772e-01, -9.8004e-03,  1.5115e-01,
         -1.6989e-01,  2.0603e-01,  3.5683e-01, -2.6032e-01,  1.5348e-01,
         -1.2693e-01]], device='cuda:0') tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
850000 特征值优化 tensor(1.7459, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4679e+00,  1.0618e+00, -4.4105e-01, -1.1865e+00, -1.1559e+00,
          2.9042e+00, -1.4648e+00,  1.5176e+00, -3.4882e-02, -5.7569e-01,
         -1.4506e-01,  9.9392e-01, -4.5825e-02,  9.9395e-02, -3.3045e-01,
          4.1700e-01,  1.5615e-01, -7.1806e-01,  1.6506e-01,  1.5914e-01,
         -1.7403e+00,  8.7964e-01, -1.5639e-01,  6.1399e-01,  9.8896e-02,
         -5.0639e-02, -2.0663e-01,  2.6795e-01, -9.1415e-02,  2.4818e-01,
          2.4819e-01, -2.2667e-02, -2.4870e-01, -1.8830e-01,  1.1710e-01,
          7.4646e-02, -1.3123e-01, -3.4990e-01, -1.3893e-01, -2.7783e-01,
          4.1971e-01,  6.2974e-02, -1.3594e-01,  1.2251e-01,  2.3531e-01,
         -3.6736e-02,  1.7831e-02, -6.1064e-02,  1.3414e-01,  1.9969e-01,
         -3.9288e-01, -5.6972e-02,  1.7578e-01, -7.0093e-02,  5.1233e-02,
          1.3107e-01,  3.2658e-01,  4.8569e-01,  4.4185e-01, -2.8000e-01,
         -2.1689e-01, -5.5782e-02,  1.1431e-01, -1.1845e-01, -2.5305e-01,
          2.2807e-01,  7.2462e-02,  6.5314e-02, -2.6239e-02, -8.7720e-02,
          2.2065e-01, -1.9370e-01, -1.3000e-01, -1.4332e-01, -1.4353e-02,
         -9.4674e-02, -1.8773e-01, -3.3540e-01, -2.3573e-02,  1.8851e-02,
         -1.0246e-02,  3.0675e-02, -2.2733e-01, -2.9878e-01, -3.6527e-01,
          1.3089e-01, -2.5859e-01, -7.6047e-01, -3.8294e-01,  3.5493e-01,
         -2.8484e-02,  1.1907e+00, -1.9798e-01,  2.6499e-02,  1.4040e-01,
         -2.5734e-01,  1.6362e-01,  3.5403e-01, -4.0907e-02, -1.3948e-01,
         -3.0151e-01,  3.3268e-01, -2.9715e-01, -3.2555e-01,  3.2611e-02,
          4.4171e-01, -2.1986e-03, -4.0013e-03, -1.0762e-01,  2.1141e-01,
          1.1072e-01,  2.3342e-01,  5.5470e-02, -1.8555e-01, -1.0035e-01,
         -2.2444e-01,  8.1356e-02, -3.0956e-02,  4.8133e-03,  1.1149e-01,
         -2.1754e-01,  5.5644e-03, -1.3553e-01,  1.5760e-02,  1.2394e-03,
         -1.8755e-01, -1.8444e-02,  2.4656e-01, -2.7525e-02,  1.6655e-01,
          1.9536e-01, -7.3468e-02,  4.5241e-02, -1.6803e-02, -3.0144e-02,
          3.0804e-02, -5.0697e-02, -7.7243e-02,  3.6360e-01,  1.0984e-01,
         -2.3667e-02, -5.1260e-01, -2.9420e-04,  3.4710e-02, -8.8307e-02,
          3.7258e-01, -2.1576e-01,  1.3187e-01,  1.9635e-01, -4.6276e-01,
         -1.3036e-01, -1.5123e-01, -1.0646e-01, -2.1295e-02,  1.4973e-01,
         -1.7339e-01,  2.0430e-01,  3.5946e-01, -2.5636e-01,  1.4063e-01,
         -1.3612e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
851000 特征值优化 tensor(1.7610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4743,  1.0498, -0.4540, -1.1829, -1.1531,  2.9069, -1.4791,  1.5264,
         -0.0427, -0.5843, -0.1435,  0.9871, -0.0390,  0.0813, -0.3040,  0.4210,
          0.1629, -0.7178,  0.1662,  0.1412, -1.7433,  0.8757, -0.1643,  0.6104,
          0.1139, -0.0403, -0.2173,  0.2569, -0.0833,  0.2437,  0.2487, -0.0260,
         -0.2586, -0.1873,  0.1108,  0.0801, -0.1194, -0.3572, -0.1409, -0.2876,
          0.4083,  0.0665, -0.1315,  0.1302,  0.2348, -0.0396,  0.0176, -0.0581,
          0.1299,  0.2068, -0.3965, -0.0662,  0.1746, -0.0722,  0.0590,  0.1235,
          0.3272,  0.4705,  0.4547, -0.2895, -0.2249, -0.0594,  0.1115, -0.1094,
         -0.2624,  0.2302,  0.0653,  0.0557, -0.0234, -0.0977,  0.2215, -0.1940,
         -0.1167, -0.1202, -0.0167, -0.0878, -0.1839, -0.3440, -0.0244,  0.0277,
         -0.0175,  0.0337, -0.2101, -0.3015, -0.3700,  0.1234, -0.2559, -0.7569,
         -0.3699,  0.3725, -0.0171,  1.1837, -0.1971,  0.0248,  0.1302, -0.2456,
          0.1618,  0.3540, -0.0352, -0.1311, -0.2917,  0.3326, -0.2858, -0.3321,
          0.0238,  0.4560, -0.0286,  0.0029, -0.1268,  0.2143,  0.1130,  0.2249,
          0.0568, -0.1914, -0.1049, -0.2222,  0.0782, -0.0390,  0.0181,  0.1054,
         -0.2147,  0.0081, -0.1322,  0.0215,  0.0040, -0.1889, -0.0268,  0.2456,
         -0.0240,  0.1645,  0.1862, -0.0830,  0.0395, -0.0174, -0.0287,  0.0430,
         -0.0587, -0.0683,  0.3675,  0.0910, -0.0238, -0.5117,  0.0087,  0.0311,
         -0.0966,  0.3709, -0.2270,  0.1298,  0.1977, -0.4638, -0.1112, -0.1493,
         -0.1092, -0.0135,  0.1543, -0.1566,  0.2067,  0.3507, -0.2577,  0.1541,
         -0.1279]], device='cuda:0') tensor(0.2129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
852000 特征值优化 tensor(1.7460, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5056e+00,  1.0401e+00, -4.5002e-01, -1.1765e+00, -1.1357e+00,
          2.9005e+00, -1.4883e+00,  1.5255e+00, -4.9916e-02, -5.7739e-01,
         -1.2997e-01,  9.8492e-01, -3.6134e-02,  8.2981e-02, -2.9533e-01,
          4.2105e-01,  1.6248e-01, -7.0432e-01,  1.6133e-01,  1.4159e-01,
         -1.7411e+00,  8.7563e-01, -1.6563e-01,  5.8880e-01,  1.1774e-01,
         -5.7966e-02, -2.3716e-01,  2.5312e-01, -8.5458e-02,  2.3698e-01,
          2.5845e-01, -2.7233e-02, -2.6360e-01, -1.6869e-01,  1.0624e-01,
          7.8949e-02, -1.1371e-01, -3.8811e-01, -1.4598e-01, -2.7975e-01,
          4.0945e-01,  7.0500e-02, -1.3735e-01,  1.2891e-01,  2.4498e-01,
         -3.3121e-02,  2.7946e-02, -6.1504e-02,  1.1860e-01,  2.0001e-01,
         -3.9812e-01, -6.5318e-02,  1.7661e-01, -6.4677e-02,  6.8621e-02,
          1.1998e-01,  3.3820e-01,  4.5664e-01,  4.6202e-01, -2.9116e-01,
         -2.4153e-01, -6.3597e-02,  1.0837e-01, -1.0423e-01, -2.5849e-01,
          2.3596e-01,  6.5860e-02,  6.2869e-02, -2.4963e-02, -1.0304e-01,
          2.2131e-01, -1.9844e-01, -1.1901e-01, -1.3180e-01, -1.1010e-02,
         -9.6151e-02, -1.8750e-01, -3.4302e-01, -3.4890e-02,  3.7240e-02,
         -1.4658e-02,  3.5973e-02, -2.0928e-01, -3.0111e-01, -3.8046e-01,
          1.0885e-01, -2.6341e-01, -7.6949e-01, -3.8753e-01,  3.7278e-01,
         -2.2739e-02,  1.2027e+00, -1.8149e-01,  2.1813e-02,  1.3345e-01,
         -2.5683e-01,  1.5966e-01,  3.6839e-01, -4.5330e-02, -1.2814e-01,
         -2.8624e-01,  3.3254e-01, -2.9383e-01, -3.2513e-01,  2.9865e-02,
          4.5089e-01, -2.0963e-02,  9.3850e-03, -1.1680e-01,  2.1186e-01,
          1.0971e-01,  2.2304e-01,  5.3836e-02, -2.0167e-01, -1.0659e-01,
         -2.1280e-01,  8.8114e-02, -4.6623e-02,  2.3019e-02,  1.0350e-01,
         -2.1760e-01,  4.2719e-03, -1.2906e-01,  2.1545e-02,  2.2674e-03,
         -1.9750e-01, -2.1525e-02,  2.4955e-01, -3.1601e-02,  1.7445e-01,
          1.9131e-01, -8.0173e-02,  3.1503e-02, -3.2102e-02, -2.9939e-02,
          4.4663e-02, -6.2561e-02, -8.4181e-02,  3.7730e-01,  8.3645e-02,
         -3.6123e-02, -5.0781e-01, -3.5001e-03,  3.4377e-02, -1.0159e-01,
          3.6502e-01, -2.2624e-01,  1.2963e-01,  2.0236e-01, -4.5694e-01,
         -1.0158e-01, -1.5210e-01, -9.8612e-02,  9.5956e-04,  1.5419e-01,
         -1.5611e-01,  2.2267e-01,  3.4120e-01, -2.7122e-01,  1.5410e-01,
         -1.2277e-01]], device='cuda:0') tensor(0.2265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
853000 特征值优化 tensor(1.7585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4736,  1.0621, -0.4503, -1.1859, -1.1153,  2.8760, -1.4805,  1.5360,
         -0.0488, -0.5749, -0.1284,  0.9821, -0.0451,  0.0936, -0.3182,  0.4293,
          0.1646, -0.6931,  0.1694,  0.1416, -1.7470,  0.8606, -0.1717,  0.5844,
          0.1298, -0.0488, -0.2437,  0.2625, -0.0788,  0.2354,  0.2545, -0.0312,
         -0.2634, -0.1775,  0.1053,  0.0760, -0.1209, -0.3695, -0.1476, -0.2924,
          0.4015,  0.0606, -0.1316,  0.1281,  0.2457, -0.0275,  0.0326, -0.0537,
          0.1187,  0.2014, -0.3942, -0.0736,  0.1883, -0.0721,  0.0578,  0.1262,
          0.3243,  0.4727,  0.4615, -0.2879, -0.2285, -0.0667,  0.1070, -0.1089,
         -0.2464,  0.2312,  0.0663,  0.0681, -0.0258, -0.1096,  0.2181, -0.1924,
         -0.1205, -0.1373, -0.0132, -0.1005, -0.1840, -0.3419, -0.0293,  0.0311,
         -0.0222,  0.0343, -0.2137, -0.3125, -0.3704,  0.1171, -0.2476, -0.7631,
         -0.3725,  0.3685, -0.0201,  1.2105, -0.1903,  0.0274,  0.1371, -0.2471,
          0.1601,  0.3637, -0.0392, -0.1355, -0.2869,  0.3355, -0.3064, -0.3271,
          0.0219,  0.4383, -0.0192,  0.0052, -0.1151,  0.2076,  0.1113,  0.2087,
          0.0649, -0.1977, -0.1037, -0.2189,  0.0987, -0.0295,  0.0218,  0.1028,
         -0.2265,  0.0044, -0.1323,  0.0279,  0.0081, -0.2015, -0.0274,  0.2398,
         -0.0283,  0.1680,  0.1933, -0.0825,  0.0324, -0.0308, -0.0282,  0.0411,
         -0.0516, -0.0834,  0.3823,  0.0960, -0.0403, -0.5100,  0.0081,  0.0392,
         -0.0919,  0.3550, -0.2435,  0.1291,  0.2082, -0.4732, -0.1155, -0.1607,
         -0.1051, -0.0228,  0.1528, -0.1651,  0.2105,  0.3479, -0.2658,  0.1478,
         -0.1262]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
854000 特征值优化 tensor(1.7747, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4685e+00,  1.0856e+00, -4.3899e-01, -1.1774e+00, -1.1077e+00,
          2.8636e+00, -1.4843e+00,  1.5375e+00, -5.1218e-02, -5.6786e-01,
         -1.2609e-01,  9.8118e-01, -4.9269e-02,  7.7365e-02, -3.1057e-01,
          4.1746e-01,  1.6484e-01, -6.9135e-01,  1.7122e-01,  1.4123e-01,
         -1.7422e+00,  8.6761e-01, -1.7651e-01,  5.7712e-01,  1.3977e-01,
         -6.9430e-02, -2.2773e-01,  2.4830e-01, -8.7568e-02,  2.3518e-01,
          2.5991e-01, -2.7920e-02, -2.5840e-01, -1.8336e-01,  1.0869e-01,
          7.0036e-02, -1.3331e-01, -3.6338e-01, -1.5464e-01, -3.0187e-01,
          4.1072e-01,  6.5218e-02, -1.3707e-01,  1.2512e-01,  2.4819e-01,
         -2.0826e-02,  1.9890e-02, -5.6199e-02,  1.2147e-01,  2.1538e-01,
         -3.8696e-01, -7.9056e-02,  1.8303e-01, -6.7976e-02,  6.0912e-02,
          1.3017e-01,  3.3094e-01,  4.6398e-01,  4.4567e-01, -2.8815e-01,
         -2.2660e-01, -6.2883e-02,  1.1355e-01, -1.0629e-01, -2.3723e-01,
          2.2981e-01,  5.9633e-02,  6.4363e-02, -3.1022e-02, -1.1233e-01,
          2.1906e-01, -1.9198e-01, -1.1761e-01, -1.3447e-01, -1.2008e-02,
         -9.2369e-02, -1.7806e-01, -3.4684e-01, -1.7840e-02,  2.2620e-02,
         -1.3111e-02,  2.0589e-02, -2.1945e-01, -3.0832e-01, -3.6605e-01,
          1.2236e-01, -2.5044e-01, -7.6134e-01, -3.7477e-01,  3.6919e-01,
         -2.6291e-02,  1.2181e+00, -1.8767e-01,  3.1221e-02,  1.3398e-01,
         -2.5149e-01,  1.5645e-01,  3.5144e-01, -3.1255e-02, -1.3596e-01,
         -3.0073e-01,  3.3907e-01, -3.0948e-01, -3.2010e-01,  2.6131e-02,
          4.3815e-01, -2.7857e-02,  2.5215e-03, -1.0841e-01,  2.0395e-01,
          1.0874e-01,  2.1103e-01,  5.4936e-02, -2.0698e-01, -1.0043e-01,
         -2.1864e-01,  8.9053e-02, -2.8556e-02,  3.4111e-02,  1.0230e-01,
         -2.1798e-01,  4.8169e-03, -1.3058e-01,  2.6298e-02,  9.1071e-03,
         -2.0439e-01, -3.1263e-02,  2.4865e-01, -3.5867e-02,  1.6507e-01,
          1.8939e-01, -7.5822e-02,  3.7785e-02, -3.2541e-02, -2.9920e-02,
          3.5419e-02, -5.3206e-02, -7.8298e-02,  3.8981e-01,  1.0078e-01,
         -2.6259e-02, -5.1265e-01,  7.8168e-03,  3.6657e-02, -9.1502e-02,
          3.4918e-01, -2.3712e-01,  1.1915e-01,  2.1193e-01, -4.5988e-01,
         -1.2585e-01, -1.6403e-01, -9.8925e-02, -1.5936e-02,  1.5199e-01,
         -1.6936e-01,  2.0072e-01,  3.4358e-01, -2.5299e-01,  1.4221e-01,
         -1.4329e-01]], device='cuda:0') tensor(0.2590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
855000 特征值优化 tensor(1.7549, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4850e+00,  1.0862e+00, -4.4474e-01, -1.1828e+00, -1.1196e+00,
          2.8535e+00, -1.5053e+00,  1.5424e+00, -6.5288e-02, -5.8697e-01,
         -1.3683e-01,  9.8596e-01, -5.5576e-02,  7.3111e-02, -3.0780e-01,
          4.2239e-01,  1.5083e-01, -6.9841e-01,  1.6766e-01,  1.4119e-01,
         -1.7394e+00,  8.6855e-01, -1.8020e-01,  5.9452e-01,  1.4835e-01,
         -6.9151e-02, -2.3461e-01,  2.5776e-01, -8.9979e-02,  2.3422e-01,
          2.6330e-01, -2.4867e-02, -2.7010e-01, -1.6860e-01,  1.0935e-01,
          6.9196e-02, -1.2707e-01, -3.5868e-01, -1.5230e-01, -3.0698e-01,
          4.0284e-01,  6.7613e-02, -1.3346e-01,  1.3257e-01,  2.4383e-01,
         -2.3163e-02,  2.9189e-02, -5.4548e-02,  1.1970e-01,  2.1261e-01,
         -3.8927e-01, -7.7005e-02,  1.8386e-01, -5.8817e-02,  5.6363e-02,
          1.2958e-01,  3.2368e-01,  4.7053e-01,  4.5559e-01, -2.8699e-01,
         -2.2649e-01, -6.2360e-02,  1.1127e-01, -1.1859e-01, -2.5051e-01,
          2.2391e-01,  5.8781e-02,  6.0188e-02, -2.5054e-02, -1.0171e-01,
          2.2159e-01, -1.9569e-01, -1.1813e-01, -1.3884e-01, -1.6289e-02,
         -9.1752e-02, -1.8218e-01, -3.4394e-01, -1.3424e-02,  2.7946e-02,
         -2.0146e-02,  2.8464e-02, -2.1732e-01, -3.1525e-01, -3.6694e-01,
          1.2174e-01, -2.5424e-01, -7.6289e-01, -3.7252e-01,  3.6803e-01,
         -2.1728e-02,  1.2198e+00, -1.8282e-01,  3.4120e-02,  1.3918e-01,
         -2.5156e-01,  1.6525e-01,  3.5739e-01, -3.3027e-02, -1.4950e-01,
         -2.8325e-01,  3.3866e-01, -3.2637e-01, -3.3422e-01,  1.7914e-02,
          4.3257e-01, -3.1829e-02, -1.5999e-03, -1.1621e-01,  2.0946e-01,
          1.1087e-01,  2.1677e-01,  6.0478e-02, -2.0252e-01, -1.0489e-01,
         -2.2036e-01,  9.2032e-02, -3.1380e-02,  2.9393e-02,  1.0789e-01,
         -2.1858e-01,  3.4503e-03, -1.3488e-01,  2.0697e-02,  1.0602e-02,
         -1.9238e-01, -2.3132e-02,  2.3551e-01, -3.3209e-02,  1.7156e-01,
          1.9180e-01, -8.0645e-02,  3.7455e-02, -2.6089e-02, -3.2064e-02,
          4.6532e-02, -5.0700e-02, -8.3266e-02,  3.6603e-01,  9.8953e-02,
         -3.0107e-02, -5.1084e-01,  6.1410e-03,  2.6381e-02, -9.1280e-02,
          3.5138e-01, -2.4527e-01,  1.3197e-01,  2.0282e-01, -4.6338e-01,
         -1.1306e-01, -1.5778e-01, -1.1047e-01, -2.0220e-02,  1.5664e-01,
         -1.6177e-01,  2.0339e-01,  3.4129e-01, -2.6162e-01,  1.4077e-01,
         -1.3843e-01]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
856000 特征值优化 tensor(1.7570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4838e+00,  1.0937e+00, -4.5225e-01, -1.1855e+00, -1.1180e+00,
          2.8380e+00, -1.4975e+00,  1.5425e+00, -5.7568e-02, -5.8284e-01,
         -1.3234e-01,  9.8540e-01, -6.1957e-02,  6.5065e-02, -3.0465e-01,
          4.2908e-01,  1.6144e-01, -6.9411e-01,  1.7505e-01,  1.3896e-01,
         -1.7458e+00,  8.6599e-01, -1.6797e-01,  5.9450e-01,  1.4827e-01,
         -7.1788e-02, -2.4033e-01,  2.5217e-01, -9.1805e-02,  2.3736e-01,
          2.5868e-01, -3.8514e-02, -2.5781e-01, -1.7819e-01,  1.0704e-01,
          6.6407e-02, -1.2441e-01, -3.6552e-01, -1.5724e-01, -3.0422e-01,
          3.9842e-01,  6.5477e-02, -1.3623e-01,  1.2849e-01,  2.4712e-01,
         -2.4259e-02,  3.2205e-02, -5.0763e-02,  1.1290e-01,  2.1901e-01,
         -3.8992e-01, -7.1369e-02,  1.8713e-01, -7.0082e-02,  5.7845e-02,
          1.2781e-01,  3.1829e-01,  4.6843e-01,  4.5086e-01, -2.8715e-01,
         -2.3044e-01, -5.7854e-02,  1.1653e-01, -1.1131e-01, -2.5247e-01,
          2.2129e-01,  5.6759e-02,  6.0081e-02, -2.4722e-02, -1.0896e-01,
          2.1818e-01, -1.9882e-01, -1.2632e-01, -1.3210e-01, -1.0641e-02,
         -8.5327e-02, -1.8086e-01, -3.4283e-01, -1.9288e-02,  2.9360e-02,
         -2.2790e-02,  2.7958e-02, -2.1376e-01, -3.1513e-01, -3.7125e-01,
          1.2102e-01, -2.5234e-01, -7.5971e-01, -3.5629e-01,  3.7929e-01,
         -2.2935e-02,  1.2255e+00, -1.8358e-01,  3.4813e-02,  1.3896e-01,
         -2.5374e-01,  1.6257e-01,  3.6820e-01, -4.6051e-02, -1.4781e-01,
         -2.8315e-01,  3.3742e-01, -3.2648e-01, -3.2522e-01,  2.2116e-02,
          4.3737e-01, -3.2263e-02, -1.7019e-03, -1.0350e-01,  2.1051e-01,
          1.0685e-01,  2.1778e-01,  6.2094e-02, -2.0192e-01, -1.0361e-01,
         -2.2005e-01,  8.8919e-02, -3.0663e-02,  3.4459e-02,  1.0780e-01,
         -2.2143e-01,  5.8978e-03, -1.3296e-01,  2.5053e-02,  6.4043e-03,
         -1.9255e-01, -2.5233e-02,  2.3730e-01, -3.6611e-02,  1.7177e-01,
          1.9599e-01, -8.1827e-02,  3.6391e-02, -2.9989e-02, -2.6117e-02,
          3.7692e-02, -5.3479e-02, -7.5316e-02,  3.7437e-01,  9.4553e-02,
         -3.3968e-02, -5.0385e-01,  7.0822e-03,  2.7019e-02, -1.0002e-01,
          3.5005e-01, -2.5034e-01,  1.3795e-01,  2.0050e-01, -4.6934e-01,
         -1.0715e-01, -1.5926e-01, -9.9581e-02, -1.9015e-02,  1.5195e-01,
         -1.6046e-01,  2.0918e-01,  3.4046e-01, -2.7110e-01,  1.4957e-01,
         -1.3628e-01]], device='cuda:0') tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
857000 特征值优化 tensor(1.7444, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4880e+00,  1.1168e+00, -4.2885e-01, -1.1747e+00, -1.1206e+00,
          2.8393e+00, -1.5065e+00,  1.5417e+00, -4.9667e-02, -5.7892e-01,
         -1.2726e-01,  9.8536e-01, -7.1667e-02,  5.9460e-02, -3.1372e-01,
          4.2564e-01,  1.6044e-01, -6.8350e-01,  1.7452e-01,  1.2330e-01,
         -1.7384e+00,  8.6295e-01, -1.7026e-01,  5.9684e-01,  1.4581e-01,
         -6.3111e-02, -2.4818e-01,  2.4193e-01, -8.7198e-02,  2.3906e-01,
          2.5350e-01, -3.1562e-02, -2.5614e-01, -1.6980e-01,  1.1124e-01,
          6.5518e-02, -1.1793e-01, -3.7364e-01, -1.5891e-01, -3.0594e-01,
          4.0116e-01,  6.2083e-02, -1.3584e-01,  1.2365e-01,  2.4816e-01,
         -2.7261e-02,  3.3838e-02, -5.0470e-02,  1.2293e-01,  2.1140e-01,
         -3.8663e-01, -6.2872e-02,  1.9031e-01, -7.3894e-02,  5.6267e-02,
          1.3445e-01,  3.2527e-01,  4.5916e-01,  4.4640e-01, -2.8640e-01,
         -2.3683e-01, -6.8318e-02,  1.0405e-01, -1.0827e-01, -2.5185e-01,
          2.2189e-01,  5.9381e-02,  5.8903e-02, -2.4845e-02, -1.1896e-01,
          2.1451e-01, -1.9659e-01, -1.1980e-01, -1.2712e-01, -2.8135e-03,
         -9.6781e-02, -1.9293e-01, -3.3903e-01, -1.2324e-02,  3.6694e-02,
         -2.4723e-02,  3.7048e-02, -2.0088e-01, -3.1073e-01, -3.7575e-01,
          1.0685e-01, -2.6268e-01, -7.7055e-01, -3.6511e-01,  3.8645e-01,
         -1.9202e-02,  1.2343e+00, -1.7795e-01,  2.5678e-02,  1.2886e-01,
         -2.5912e-01,  1.5534e-01,  3.5866e-01, -2.8243e-02, -1.2923e-01,
         -2.8327e-01,  3.3237e-01, -3.3497e-01, -3.2588e-01,  2.7122e-02,
          4.4316e-01, -2.6368e-02,  4.3695e-03, -1.1536e-01,  2.1478e-01,
          1.1064e-01,  2.0923e-01,  6.3211e-02, -1.9470e-01, -1.1675e-01,
         -2.1889e-01,  8.7851e-02, -3.8241e-02,  2.0794e-02,  1.1145e-01,
         -2.1983e-01,  9.0042e-04, -1.3149e-01,  3.2468e-02,  7.7141e-03,
         -2.0217e-01, -2.9476e-02,  2.4681e-01, -3.6184e-02,  1.6511e-01,
          1.9928e-01, -8.1658e-02,  2.8895e-02, -3.4856e-02, -3.0611e-02,
          5.5488e-02, -4.4448e-02, -8.1241e-02,  3.7708e-01,  9.0297e-02,
         -4.6550e-02, -5.0902e-01, -3.5278e-03,  3.2988e-02, -9.9525e-02,
          3.4323e-01, -2.4371e-01,  1.4591e-01,  2.1292e-01, -4.7595e-01,
         -1.0506e-01, -1.5540e-01, -8.9685e-02, -3.9356e-03,  1.6288e-01,
         -1.5522e-01,  2.1780e-01,  3.3702e-01, -2.8423e-01,  1.5944e-01,
         -1.2751e-01]], device='cuda:0') tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
858000 特征值优化 tensor(1.7498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4940e+00,  1.1271e+00, -4.3759e-01, -1.1816e+00, -1.1321e+00,
          2.8418e+00, -1.5160e+00,  1.5567e+00, -3.9793e-02, -5.7404e-01,
         -1.3190e-01,  9.8071e-01, -7.0428e-02,  6.3196e-02, -3.0264e-01,
          4.1855e-01,  1.5492e-01, -6.8425e-01,  1.7587e-01,  1.2106e-01,
         -1.7333e+00,  8.6383e-01, -1.7509e-01,  6.0557e-01,  1.5178e-01,
         -7.4378e-02, -2.3832e-01,  2.4135e-01, -9.5740e-02,  2.4616e-01,
          2.5680e-01, -3.6800e-02, -2.5461e-01, -1.6752e-01,  1.0620e-01,
          6.8516e-02, -1.1994e-01, -3.6466e-01, -1.6423e-01, -3.1267e-01,
          4.0007e-01,  5.9143e-02, -1.3827e-01,  1.2809e-01,  2.4234e-01,
         -2.6341e-02,  3.3769e-02, -4.8245e-02,  1.1816e-01,  2.1334e-01,
         -3.8851e-01, -6.3884e-02,  1.8961e-01, -7.3004e-02,  4.9159e-02,
          1.3485e-01,  3.2278e-01,  4.5483e-01,  4.4830e-01, -2.8632e-01,
         -2.3503e-01, -6.5151e-02,  1.0550e-01, -1.1132e-01, -2.5018e-01,
          2.2408e-01,  5.1816e-02,  6.0938e-02, -2.3212e-02, -1.1732e-01,
          2.1505e-01, -1.9577e-01, -1.2830e-01, -1.2558e-01, -4.8894e-03,
         -9.4705e-02, -1.9005e-01, -3.4718e-01, -7.1576e-03,  3.5445e-02,
         -2.7240e-02,  2.9603e-02, -2.1002e-01, -3.0889e-01, -3.7971e-01,
          1.0772e-01, -2.6846e-01, -7.6759e-01, -3.6734e-01,  3.8138e-01,
         -2.0218e-02,  1.2317e+00, -1.7950e-01,  2.5902e-02,  1.2928e-01,
         -2.5234e-01,  1.5585e-01,  3.6408e-01, -2.5308e-02, -1.3601e-01,
         -2.8021e-01,  3.2917e-01, -3.4074e-01, -3.2283e-01,  2.8764e-02,
          4.3670e-01, -2.3640e-02,  2.9053e-03, -1.1030e-01,  2.1383e-01,
          1.1186e-01,  2.0919e-01,  6.1928e-02, -2.0048e-01, -1.1369e-01,
         -2.1985e-01,  9.0455e-02, -4.0445e-02,  2.0146e-02,  1.1147e-01,
         -2.2030e-01, -2.5397e-05, -1.3316e-01,  3.2155e-02,  1.0592e-02,
         -2.0242e-01, -2.6412e-02,  2.5002e-01, -3.3638e-02,  1.6660e-01,
          1.9573e-01, -7.8207e-02,  2.8783e-02, -3.2766e-02, -2.9124e-02,
          5.4656e-02, -4.8431e-02, -8.4066e-02,  3.7342e-01,  9.3461e-02,
         -3.8919e-02, -5.0866e-01, -5.1604e-03,  2.6396e-02, -9.9551e-02,
          3.3867e-01, -2.4747e-01,  1.4315e-01,  2.1171e-01, -4.6835e-01,
         -1.0127e-01, -1.5539e-01, -9.0824e-02, -6.3840e-03,  1.6036e-01,
         -1.5663e-01,  2.1267e-01,  3.3867e-01, -2.7540e-01,  1.5318e-01,
         -1.3311e-01]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
859000 特征值优化 tensor(1.7457, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4797e+00,  1.1200e+00, -4.5595e-01, -1.1807e+00, -1.1362e+00,
          2.8117e+00, -1.5135e+00,  1.5600e+00, -4.4427e-02, -5.7863e-01,
         -1.2664e-01,  9.8117e-01, -6.3749e-02,  6.2582e-02, -3.0463e-01,
          4.2665e-01,  1.6257e-01, -6.9320e-01,  1.8391e-01,  1.3517e-01,
         -1.7385e+00,  8.6600e-01, -1.7638e-01,  6.0419e-01,  1.5618e-01,
         -8.2805e-02, -2.3487e-01,  2.5766e-01, -9.5164e-02,  2.2960e-01,
          2.5996e-01, -4.5853e-02, -2.5960e-01, -1.8542e-01,  1.0826e-01,
          6.3338e-02, -1.2653e-01, -3.6972e-01, -1.6837e-01, -3.1583e-01,
          3.9749e-01,  6.5807e-02, -1.3568e-01,  1.3399e-01,  2.4907e-01,
         -2.4118e-02,  3.4352e-02, -5.0910e-02,  1.1059e-01,  2.1580e-01,
         -3.8385e-01, -7.8016e-02,  1.8412e-01, -6.8715e-02,  5.3398e-02,
          1.2992e-01,  3.1800e-01,  4.6776e-01,  4.5539e-01, -2.8611e-01,
         -2.2596e-01, -5.8833e-02,  1.1818e-01, -1.1488e-01, -2.4941e-01,
          2.1790e-01,  5.1233e-02,  5.7907e-02, -2.5343e-02, -1.0691e-01,
          2.1768e-01, -2.0004e-01, -1.2068e-01, -1.3383e-01, -1.5108e-02,
         -8.2930e-02, -1.8114e-01, -3.5259e-01, -1.8202e-02,  2.6264e-02,
         -2.5455e-02,  2.3543e-02, -2.1527e-01, -3.1837e-01, -3.6864e-01,
          1.1939e-01, -2.6446e-01, -7.5563e-01, -3.5500e-01,  3.8653e-01,
         -3.0337e-02,  1.2409e+00, -1.8423e-01,  2.6653e-02,  1.3637e-01,
         -2.5238e-01,  1.6461e-01,  3.7403e-01, -4.6592e-02, -1.4543e-01,
         -2.8483e-01,  3.3192e-01, -3.4139e-01, -3.2312e-01,  2.0827e-02,
          4.3481e-01, -3.6662e-02, -1.7815e-03, -1.0096e-01,  2.0917e-01,
          1.0360e-01,  2.1432e-01,  5.6174e-02, -2.1196e-01, -1.0016e-01,
         -2.2212e-01,  9.4892e-02, -3.0349e-02,  3.7542e-02,  1.0489e-01,
         -2.2145e-01,  5.3210e-03, -1.3441e-01,  2.4265e-02,  1.2780e-02,
         -1.9611e-01, -2.2880e-02,  2.3825e-01, -3.7851e-02,  1.7342e-01,
          1.9515e-01, -7.7743e-02,  3.7808e-02, -3.0202e-02, -2.5260e-02,
          3.3448e-02, -5.5419e-02, -7.9950e-02,  3.7527e-01,  9.6460e-02,
         -2.5352e-02, -5.0317e-01,  1.5514e-03,  1.6887e-02, -1.1173e-01,
          3.3720e-01, -2.5857e-01,  1.3783e-01,  2.0094e-01, -4.6707e-01,
         -9.4744e-02, -1.5436e-01, -9.5614e-02, -1.5728e-02,  1.5435e-01,
         -1.6171e-01,  2.1038e-01,  3.4024e-01, -2.7386e-01,  1.4561e-01,
         -1.4258e-01]], device='cuda:0') tensor(0.2287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
860000 特征值优化 tensor(1.7435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4986e+00,  1.1246e+00, -4.3190e-01, -1.1802e+00, -1.1246e+00,
          2.8079e+00, -1.5218e+00,  1.5634e+00, -5.0815e-02, -5.8014e-01,
         -1.1905e-01,  9.9231e-01, -7.8701e-02,  5.1485e-02, -3.0319e-01,
          4.2752e-01,  1.6394e-01, -6.9031e-01,  1.9374e-01,  1.1494e-01,
         -1.7312e+00,  8.5955e-01, -1.7954e-01,  6.0939e-01,  1.5551e-01,
         -6.2238e-02, -2.4505e-01,  2.4834e-01, -1.0700e-01,  2.3436e-01,
          2.5045e-01, -4.0346e-02, -2.4890e-01, -1.6873e-01,  1.1023e-01,
          7.1866e-02, -1.1781e-01, -3.7349e-01, -1.6477e-01, -3.1385e-01,
          3.8626e-01,  6.2059e-02, -1.3452e-01,  1.1750e-01,  2.4731e-01,
         -1.7535e-02,  4.4427e-02, -4.7253e-02,  1.2314e-01,  2.1616e-01,
         -3.9224e-01, -7.1408e-02,  1.8972e-01, -6.5892e-02,  4.4709e-02,
          1.3701e-01,  3.3050e-01,  4.5618e-01,  4.4381e-01, -2.8618e-01,
         -2.3989e-01, -6.8114e-02,  1.1148e-01, -1.1593e-01, -2.5104e-01,
          2.2365e-01,  6.3534e-02,  5.6318e-02, -2.5741e-02, -1.2262e-01,
          2.1445e-01, -1.9542e-01, -1.2394e-01, -1.3291e-01, -9.5488e-03,
         -1.0220e-01, -1.9068e-01, -3.3025e-01, -2.3026e-03,  3.4765e-02,
         -2.9876e-02,  2.3906e-02, -2.0501e-01, -3.2531e-01, -3.7783e-01,
          1.0629e-01, -2.5132e-01, -7.6542e-01, -3.4981e-01,  3.9588e-01,
         -2.4208e-02,  1.2399e+00, -1.7807e-01,  3.1739e-02,  1.3334e-01,
         -2.5824e-01,  1.5707e-01,  3.7099e-01, -3.8989e-02, -1.3750e-01,
         -2.7917e-01,  3.3485e-01, -3.4324e-01, -3.3262e-01,  2.7768e-02,
          4.2975e-01, -2.0601e-02,  3.0060e-03, -1.0195e-01,  2.0965e-01,
          1.0652e-01,  2.0578e-01,  6.7232e-02, -1.9067e-01, -1.1275e-01,
         -2.1470e-01,  9.4505e-02, -3.4044e-02,  2.7338e-02,  1.1123e-01,
         -2.2459e-01,  3.7189e-04, -1.3175e-01,  2.5941e-02,  1.2929e-02,
         -2.0140e-01, -2.5484e-02,  2.4484e-01, -3.3738e-02,  1.6214e-01,
          1.9084e-01, -7.9652e-02,  2.8689e-02, -4.2129e-02, -3.0528e-02,
          4.7921e-02, -4.9688e-02, -8.7782e-02,  3.7203e-01,  8.5420e-02,
         -4.3649e-02, -5.1858e-01, -7.0420e-04,  3.6825e-02, -9.7253e-02,
          3.2878e-01, -2.5410e-01,  1.4575e-01,  2.0695e-01, -4.7814e-01,
         -9.0817e-02, -1.6499e-01, -8.4074e-02, -8.3987e-04,  1.7181e-01,
         -1.5721e-01,  2.2239e-01,  3.4460e-01, -2.8908e-01,  1.5452e-01,
         -1.2881e-01]], device='cuda:0') tensor(0.2158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
861000 特征值优化 tensor(1.7531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4879e+00,  1.1168e+00, -4.4111e-01, -1.1814e+00, -1.1348e+00,
          2.8047e+00, -1.5151e+00,  1.5645e+00, -4.1613e-02, -5.8259e-01,
         -1.2365e-01,  9.8313e-01, -6.8836e-02,  5.8424e-02, -2.9343e-01,
          4.2299e-01,  1.5963e-01, -6.8927e-01,  1.8818e-01,  1.1923e-01,
         -1.7296e+00,  8.6407e-01, -1.8328e-01,  6.0848e-01,  1.6996e-01,
         -8.4981e-02, -2.3680e-01,  2.6335e-01, -1.0219e-01,  2.3918e-01,
          2.6442e-01, -3.4852e-02, -2.6307e-01, -1.7861e-01,  1.1333e-01,
          6.7415e-02, -1.2676e-01, -3.5927e-01, -1.6974e-01, -3.2346e-01,
          3.9070e-01,  6.4997e-02, -1.3425e-01,  1.3157e-01,  2.4101e-01,
         -2.0793e-02,  3.6289e-02, -4.9209e-02,  1.1737e-01,  2.0887e-01,
         -3.8219e-01, -7.5242e-02,  1.8341e-01, -6.7444e-02,  5.0870e-02,
          1.3277e-01,  3.2217e-01,  4.6284e-01,  4.5179e-01, -2.8685e-01,
         -2.2573e-01, -5.7340e-02,  1.1741e-01, -1.1970e-01, -2.4282e-01,
          2.2614e-01,  5.9721e-02,  6.7110e-02, -2.8280e-02, -1.1228e-01,
          2.2113e-01, -2.0210e-01, -1.3143e-01, -1.4049e-01, -1.2396e-02,
         -9.2193e-02, -1.8755e-01, -3.3698e-01, -2.7343e-03,  2.9505e-02,
         -2.6950e-02,  2.0525e-02, -2.1939e-01, -3.2135e-01, -3.6512e-01,
          1.1994e-01, -2.5700e-01, -7.5791e-01, -3.6707e-01,  3.8350e-01,
         -2.6170e-02,  1.2374e+00, -1.7471e-01,  3.9090e-02,  1.3808e-01,
         -2.5844e-01,  1.6285e-01,  3.6268e-01, -4.0171e-02, -1.3725e-01,
         -2.7050e-01,  3.3071e-01, -3.4886e-01, -3.2278e-01,  2.7961e-02,
          4.3200e-01, -3.2039e-02, -1.8891e-03, -9.9471e-02,  2.1011e-01,
          1.0714e-01,  2.1451e-01,  5.6670e-02, -2.0312e-01, -9.7822e-02,
         -2.1703e-01,  9.9919e-02, -3.1420e-02,  3.7197e-02,  1.0487e-01,
         -2.2144e-01,  4.1712e-03, -1.3414e-01,  1.7605e-02,  1.7899e-02,
         -1.9700e-01, -2.2865e-02,  2.3833e-01, -3.6771e-02,  1.6874e-01,
          1.8736e-01, -8.1850e-02,  3.4161e-02, -3.2017e-02, -3.1071e-02,
          4.0697e-02, -5.5242e-02, -8.7874e-02,  3.6498e-01,  9.8108e-02,
         -2.8504e-02, -5.1285e-01,  1.3389e-03,  2.4946e-02, -9.5758e-02,
          3.3399e-01, -2.6580e-01,  1.3906e-01,  1.9666e-01, -4.6395e-01,
         -8.7354e-02, -1.6195e-01, -9.5390e-02, -1.6513e-02,  1.5647e-01,
         -1.6412e-01,  2.0883e-01,  3.3439e-01, -2.7955e-01,  1.4097e-01,
         -1.4584e-01]], device='cuda:0') tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
862000 特征值优化 tensor(1.7558, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4744e+00,  1.1257e+00, -4.5216e-01, -1.1787e+00, -1.1377e+00,
          2.8050e+00, -1.5235e+00,  1.5658e+00, -3.9512e-02, -5.7804e-01,
         -1.2524e-01,  9.8079e-01, -7.4029e-02,  5.9194e-02, -2.9652e-01,
          4.2681e-01,  1.6088e-01, -6.8508e-01,  1.8735e-01,  1.1331e-01,
         -1.7342e+00,  8.6724e-01, -1.7421e-01,  6.1264e-01,  1.7045e-01,
         -8.2987e-02, -2.4669e-01,  2.5733e-01, -1.0141e-01,  2.3820e-01,
          2.5707e-01, -3.5431e-02, -2.6069e-01, -1.8645e-01,  1.0387e-01,
          6.7883e-02, -1.2687e-01, -3.5652e-01, -1.6639e-01, -3.2423e-01,
          3.8332e-01,  6.3114e-02, -1.3727e-01,  1.2672e-01,  2.4457e-01,
         -2.5957e-02,  3.9961e-02, -5.1314e-02,  1.1583e-01,  2.1328e-01,
         -3.8454e-01, -7.5400e-02,  1.8731e-01, -6.5148e-02,  5.3096e-02,
          1.3274e-01,  3.2606e-01,  4.6674e-01,  4.5529e-01, -2.8759e-01,
         -2.2319e-01, -6.3182e-02,  1.1730e-01, -1.2096e-01, -2.4362e-01,
          2.2551e-01,  5.1802e-02,  6.1681e-02, -2.5038e-02, -1.1061e-01,
          2.1546e-01, -1.9944e-01, -1.2841e-01, -1.3480e-01, -1.3271e-02,
         -9.2589e-02, -1.8621e-01, -3.4107e-01, -2.5695e-03,  2.8999e-02,
         -2.8562e-02,  2.0250e-02, -2.1482e-01, -3.0660e-01, -3.7228e-01,
          1.1701e-01, -2.6146e-01, -7.6277e-01, -3.5405e-01,  3.9236e-01,
         -2.7247e-02,  1.2428e+00, -1.7336e-01,  3.5217e-02,  1.3533e-01,
         -2.5311e-01,  1.5832e-01,  3.6564e-01, -5.4019e-02, -1.4287e-01,
         -2.7246e-01,  3.2983e-01, -3.6089e-01, -3.2127e-01,  2.6546e-02,
          4.2755e-01, -3.5189e-02,  3.6781e-03, -9.5292e-02,  2.1228e-01,
          1.0584e-01,  2.1831e-01,  5.7845e-02, -2.0298e-01, -1.0106e-01,
         -2.2168e-01,  9.8746e-02, -3.1809e-02,  3.2669e-02,  1.0778e-01,
         -2.2143e-01,  2.7866e-03, -1.3313e-01,  1.8280e-02,  1.5851e-02,
         -1.9386e-01, -2.4379e-02,  2.3904e-01, -3.8772e-02,  1.6791e-01,
          1.9265e-01, -8.0458e-02,  3.4223e-02, -3.3697e-02, -2.1599e-02,
          3.7426e-02, -5.8335e-02, -8.6309e-02,  3.6549e-01,  9.6225e-02,
         -3.1863e-02, -5.1641e-01,  2.4144e-03,  2.7678e-02, -9.4540e-02,
          3.2988e-01, -2.6124e-01,  1.4757e-01,  1.9517e-01, -4.6544e-01,
         -7.9032e-02, -1.5785e-01, -8.7305e-02, -1.6956e-02,  1.5689e-01,
         -1.5863e-01,  2.0951e-01,  3.3317e-01, -2.8835e-01,  1.4317e-01,
         -1.4504e-01]], device='cuda:0') tensor(0.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
863000 特征值优化 tensor(1.7594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4862e+00,  1.1454e+00, -4.4598e-01, -1.1745e+00, -1.1331e+00,
          2.7902e+00, -1.5328e+00,  1.5768e+00, -4.4275e-02, -5.8585e-01,
         -1.2623e-01,  9.8558e-01, -7.4662e-02,  6.4766e-02, -2.9909e-01,
          4.2540e-01,  1.5984e-01, -6.8034e-01,  1.9201e-01,  1.1347e-01,
         -1.7309e+00,  8.6107e-01, -1.8479e-01,  6.2689e-01,  1.6301e-01,
         -7.7939e-02, -2.3959e-01,  2.5628e-01, -1.0144e-01,  2.3279e-01,
          2.5622e-01, -3.9718e-02, -2.6154e-01, -1.7253e-01,  1.0150e-01,
          6.2769e-02, -1.1871e-01, -3.6791e-01, -1.7985e-01, -3.3334e-01,
          3.8286e-01,  6.4131e-02, -1.3395e-01,  1.2611e-01,  2.4830e-01,
         -2.2160e-02,  3.2326e-02, -5.6984e-02,  1.1588e-01,  2.1641e-01,
         -3.8193e-01, -8.9061e-02,  1.8575e-01, -6.1767e-02,  4.3238e-02,
          1.2777e-01,  3.1490e-01,  4.5415e-01,  4.6038e-01, -2.9126e-01,
         -2.3769e-01, -6.3220e-02,  1.1361e-01, -1.1092e-01, -2.4722e-01,
          2.2137e-01,  4.8676e-02,  5.7727e-02, -2.4280e-02, -1.1091e-01,
          2.1961e-01, -1.9830e-01, -1.1895e-01, -1.3155e-01, -1.5568e-02,
         -8.2586e-02, -1.7964e-01, -3.3959e-01, -6.2191e-05,  3.1758e-02,
         -2.7399e-02,  2.0800e-02, -2.0866e-01, -3.3156e-01, -3.5420e-01,
          1.1762e-01, -2.5663e-01, -7.5731e-01, -3.4985e-01,  3.8874e-01,
         -3.0443e-02,  1.2480e+00, -1.7710e-01,  3.1205e-02,  1.3675e-01,
         -2.4854e-01,  1.6814e-01,  3.6140e-01, -4.0341e-02, -1.5041e-01,
         -2.7942e-01,  3.3714e-01, -3.5262e-01, -3.2733e-01,  2.0347e-02,
          4.2528e-01, -3.6023e-02,  7.1439e-03, -1.0783e-01,  2.0736e-01,
          1.0599e-01,  2.1536e-01,  5.6567e-02, -2.0441e-01, -1.0731e-01,
         -2.1722e-01,  9.2434e-02, -2.6535e-02,  3.3219e-02,  1.0964e-01,
         -2.2334e-01,  4.8754e-03, -1.3493e-01,  2.4053e-02,  1.6982e-02,
         -1.9525e-01, -2.4720e-02,  2.3437e-01, -3.4113e-02,  1.7108e-01,
          1.9002e-01, -8.1240e-02,  3.2234e-02, -2.8319e-02, -2.1470e-02,
          4.9779e-02, -5.3798e-02, -7.6085e-02,  3.6608e-01,  8.9346e-02,
         -3.3218e-02, -5.1080e-01, -3.1036e-03,  2.5020e-02, -9.1521e-02,
          3.2208e-01, -2.6135e-01,  1.4619e-01,  1.9325e-01, -4.6943e-01,
         -9.0752e-02, -1.6364e-01, -9.2158e-02, -1.0705e-02,  1.6402e-01,
         -1.5862e-01,  2.1037e-01,  3.3980e-01, -2.8192e-01,  1.4736e-01,
         -1.4026e-01]], device='cuda:0') tensor(0.2106, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
864000 特征值优化 tensor(1.7345, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4860e+00,  1.1411e+00, -4.3504e-01, -1.1715e+00, -1.1302e+00,
          2.7950e+00, -1.5225e+00,  1.5615e+00, -3.6899e-02, -5.8820e-01,
         -1.1404e-01,  1.0015e+00, -8.9325e-02,  4.5503e-02, -3.1716e-01,
          4.2680e-01,  1.6503e-01, -6.7565e-01,  1.9891e-01,  8.9000e-02,
         -1.7355e+00,  8.5644e-01, -1.7252e-01,  6.2506e-01,  1.5928e-01,
         -7.2164e-02, -2.5204e-01,  2.4888e-01, -1.1834e-01,  2.3913e-01,
          2.3566e-01, -4.7898e-02, -2.4899e-01, -1.7460e-01,  1.0369e-01,
          7.5722e-02, -1.1737e-01, -3.6816e-01, -1.6476e-01, -3.2355e-01,
          3.8076e-01,  6.1296e-02, -1.3485e-01,  1.1167e-01,  2.4209e-01,
         -2.9484e-02,  4.6368e-02, -4.3437e-02,  1.1685e-01,  2.1043e-01,
         -3.9165e-01, -7.1261e-02,  1.8949e-01, -7.8387e-02,  3.9352e-02,
          1.4041e-01,  3.3499e-01,  4.6513e-01,  4.5661e-01, -2.8097e-01,
         -2.3664e-01, -6.3284e-02,  1.0974e-01, -1.1697e-01, -2.5414e-01,
          2.2925e-01,  6.2615e-02,  5.7113e-02, -2.1851e-02, -1.2066e-01,
          2.1124e-01, -1.9766e-01, -1.3037e-01, -1.2413e-01, -7.4895e-03,
         -1.0556e-01, -1.9182e-01, -3.2516e-01,  4.7158e-03,  3.9478e-02,
         -3.7783e-02,  1.6451e-02, -2.1914e-01, -3.1734e-01, -3.7295e-01,
          9.9435e-02, -2.5130e-01, -7.7057e-01, -3.2988e-01,  4.1460e-01,
         -2.5401e-02,  1.2577e+00, -1.6231e-01,  2.0879e-02,  1.2862e-01,
         -2.5718e-01,  1.6680e-01,  3.7137e-01, -5.0078e-02, -1.3840e-01,
         -2.8115e-01,  3.2421e-01, -3.5736e-01, -3.3205e-01,  3.6020e-02,
          4.3986e-01, -2.4699e-02,  1.4153e-02, -1.1519e-01,  2.0811e-01,
          1.0709e-01,  2.0580e-01,  6.8999e-02, -1.8700e-01, -1.1984e-01,
         -2.0483e-01,  9.1059e-02, -4.2330e-02,  1.9247e-02,  1.1126e-01,
         -2.2446e-01, -4.2547e-04, -1.3096e-01,  3.0964e-02,  1.5942e-02,
         -1.9896e-01, -2.1815e-02,  2.3886e-01, -3.7753e-02,  1.5609e-01,
          1.8751e-01, -8.1413e-02,  2.3717e-02, -3.3709e-02, -2.4424e-02,
          5.4840e-02, -5.5243e-02, -8.7683e-02,  3.6065e-01,  7.8287e-02,
         -4.5461e-02, -5.2818e-01, -6.1001e-03,  4.4359e-02, -9.3992e-02,
          3.2481e-01, -2.5563e-01,  1.4604e-01,  1.9652e-01, -4.7713e-01,
         -7.2966e-02, -1.5907e-01, -8.0799e-02,  7.7201e-04,  1.6901e-01,
         -1.5044e-01,  2.2292e-01,  3.4960e-01, -2.8223e-01,  1.5778e-01,
         -1.3042e-01]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
865000 特征值优化 tensor(1.7544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4794e+00,  1.1390e+00, -4.5430e-01, -1.1807e+00, -1.1471e+00,
          2.7868e+00, -1.5344e+00,  1.5530e+00, -1.1977e-02, -5.8141e-01,
         -1.1749e-01,  9.8320e-01, -7.6415e-02,  5.2592e-02, -3.0570e-01,
          4.2172e-01,  1.6376e-01, -6.8232e-01,  1.9189e-01,  1.0802e-01,
         -1.7332e+00,  8.6295e-01, -1.8673e-01,  6.1214e-01,  1.7121e-01,
         -8.4223e-02, -2.4293e-01,  2.5027e-01, -1.0370e-01,  2.4375e-01,
          2.6095e-01, -3.5772e-02, -2.5551e-01, -1.8395e-01,  1.0383e-01,
          6.4727e-02, -1.2160e-01, -3.6314e-01, -1.7917e-01, -3.2521e-01,
          3.7972e-01,  5.7160e-02, -1.3619e-01,  1.2247e-01,  2.4293e-01,
         -3.1974e-02,  4.4091e-02, -5.3302e-02,  1.1630e-01,  2.0664e-01,
         -3.8243e-01, -7.7963e-02,  1.8748e-01, -6.7535e-02,  4.8603e-02,
          1.3273e-01,  3.2361e-01,  4.6244e-01,  4.6515e-01, -2.8729e-01,
         -2.3510e-01, -6.6472e-02,  1.1462e-01, -1.1832e-01, -2.3779e-01,
          2.3002e-01,  5.1720e-02,  6.0915e-02, -2.7579e-02, -1.1510e-01,
          2.1149e-01, -1.9913e-01, -1.2331e-01, -1.2711e-01, -8.4444e-03,
         -9.4514e-02, -1.8810e-01, -3.3770e-01, -8.2496e-03,  3.3931e-02,
         -2.7764e-02,  1.5618e-02, -2.1060e-01, -3.1661e-01, -3.7041e-01,
          1.1059e-01, -2.6482e-01, -7.5023e-01, -3.7004e-01,  3.8435e-01,
         -3.1364e-02,  1.2453e+00, -1.8166e-01,  3.3733e-02,  1.3431e-01,
         -2.5341e-01,  1.5521e-01,  3.6405e-01, -5.4026e-02, -1.3645e-01,
         -2.7408e-01,  3.2978e-01, -3.5679e-01, -3.2961e-01,  2.6629e-02,
          4.2596e-01, -1.7620e-02,  6.6269e-03, -9.8504e-02,  2.0935e-01,
          1.0537e-01,  2.1820e-01,  5.3852e-02, -2.0197e-01, -9.7198e-02,
         -2.1967e-01,  8.8404e-02, -3.4383e-02,  3.5974e-02,  9.7609e-02,
         -2.2201e-01,  6.6899e-04, -1.3128e-01,  2.8453e-02,  2.1619e-02,
         -2.1457e-01, -2.6194e-02,  2.4738e-01, -3.6506e-02,  1.6804e-01,
          1.9669e-01, -7.3578e-02,  3.2201e-02, -4.3287e-02, -2.1897e-02,
          4.0958e-02, -5.7432e-02, -9.0348e-02,  3.7295e-01,  8.5543e-02,
         -2.9056e-02, -5.0747e-01,  1.8551e-03,  2.5841e-02, -1.0226e-01,
          3.2297e-01, -2.5516e-01,  1.5113e-01,  2.0231e-01, -4.7138e-01,
         -7.8094e-02, -1.6502e-01, -8.2890e-02, -2.7111e-03,  1.5683e-01,
         -1.5982e-01,  2.1894e-01,  3.3080e-01, -2.9808e-01,  1.4381e-01,
         -1.4077e-01]], device='cuda:0') tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
866000 特征值优化 tensor(1.7375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4470e+00,  1.1462e+00, -4.5397e-01, -1.1686e+00, -1.1115e+00,
          2.7694e+00, -1.5356e+00,  1.5751e+00, -1.3927e-02, -5.8936e-01,
         -1.1169e-01,  9.6235e-01, -6.9190e-02,  5.7207e-02, -2.9719e-01,
          4.1800e-01,  1.5468e-01, -6.7181e-01,  1.8294e-01,  1.0768e-01,
         -1.7353e+00,  8.5337e-01, -1.8551e-01,  6.1081e-01,  1.8277e-01,
         -8.1003e-02, -2.5205e-01,  2.3976e-01, -8.8225e-02,  2.2601e-01,
          2.6130e-01, -3.7610e-02, -2.8149e-01, -2.0234e-01,  1.0454e-01,
          5.7857e-02, -1.2291e-01, -3.7354e-01, -1.8049e-01, -3.2519e-01,
          3.9486e-01,  7.3659e-02, -1.4479e-01,  1.4255e-01,  2.5276e-01,
         -2.1454e-02,  4.0327e-02, -4.7120e-02,  1.0312e-01,  2.0578e-01,
         -3.8321e-01, -7.2221e-02,  2.0858e-01, -7.2375e-02,  4.0534e-02,
          1.3415e-01,  3.1816e-01,  4.5784e-01,  4.6194e-01, -2.8170e-01,
         -2.3706e-01, -6.9265e-02,  1.1216e-01, -1.1811e-01, -2.3785e-01,
          2.2803e-01,  5.7998e-02,  5.8903e-02, -1.5828e-02, -1.2230e-01,
          2.1598e-01, -1.9149e-01, -1.3491e-01, -1.2932e-01, -9.1464e-03,
         -8.9041e-02, -1.8602e-01, -3.6549e-01, -2.4091e-02,  2.7628e-02,
         -2.9045e-02,  1.5700e-02, -2.0417e-01, -3.2455e-01, -3.7967e-01,
          9.2578e-02, -2.6027e-01, -7.5162e-01, -3.6938e-01,  3.8663e-01,
         -2.3059e-02,  1.2468e+00, -1.6631e-01,  2.5920e-02,  1.1636e-01,
         -2.5411e-01,  1.5653e-01,  3.6519e-01, -5.7625e-02, -1.3841e-01,
         -2.7227e-01,  3.2999e-01, -3.4856e-01, -3.2791e-01,  1.4791e-02,
          4.2772e-01, -9.4139e-03,  2.1436e-03, -1.1038e-01,  2.0983e-01,
          1.0420e-01,  2.1677e-01,  4.7782e-02, -2.1701e-01, -9.2496e-02,
         -2.1910e-01,  9.7772e-02, -3.6547e-02,  4.6617e-02,  9.4555e-02,
         -2.3463e-01, -6.9739e-03, -1.3948e-01,  3.4139e-02,  2.4346e-02,
         -2.1314e-01, -2.4287e-02,  2.5573e-01, -4.1965e-02,  1.6676e-01,
          1.9076e-01, -7.6124e-02,  2.6042e-02, -3.6161e-02, -1.5729e-02,
          5.0949e-02, -5.7253e-02, -8.9592e-02,  3.7875e-01,  9.2825e-02,
         -2.7591e-02, -5.0991e-01, -1.4491e-02,  1.0780e-02, -1.1762e-01,
          3.0385e-01, -2.6771e-01,  1.4525e-01,  2.0166e-01, -4.6604e-01,
         -6.3669e-02, -1.6755e-01, -8.3704e-02, -1.4155e-02,  1.5613e-01,
         -1.4453e-01,  2.2440e-01,  3.1788e-01, -3.0145e-01,  1.5070e-01,
         -1.3707e-01]], device='cuda:0') tensor(0.2115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
867000 特征值优化 tensor(19.1123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5139e+00,  7.5550e-01, -6.0574e-01,  2.6808e-02, -1.5377e-01,
         -6.5405e-01,  7.2159e-01,  1.3946e+00,  1.0686e-01,  1.0299e+00,
         -8.2719e-02,  1.1465e+00, -1.2579e+00, -8.6542e-01, -8.7215e-02,
         -3.4008e-01,  4.6292e-02, -2.0368e+00,  2.7307e-01,  5.7712e-01,
          7.9258e-01, -4.6638e-01, -1.8054e-01, -1.2755e+00,  1.0873e+00,
         -2.0431e-01,  6.0120e-01, -4.6393e-01, -2.4300e-02, -7.0349e-02,
          2.5997e-01,  1.5632e-01,  7.2963e-01,  5.1888e-01, -9.5641e-02,
         -1.6049e-01,  1.4217e-01,  4.4177e-01, -1.5778e-01,  5.7371e-02,
          1.6372e+00,  1.4945e-01, -2.2915e-01, -1.3219e-01, -6.2370e-01,
          6.6756e-02,  1.4150e-01,  5.8886e-02,  1.6109e-04, -2.4460e-01,
          3.3708e-01, -1.0565e-02, -3.4256e-02,  1.5014e-01, -7.3666e-01,
          4.1965e-01, -3.6960e-01, -5.1295e-02,  3.5857e-01, -1.1726e-01,
          1.3285e+00,  6.3078e-01, -1.4848e-01, -2.6416e-01, -1.6688e-01,
         -4.6490e-01,  1.0220e-01, -2.0610e-01,  5.2455e-01,  1.8938e+00,
          9.9512e-02,  1.1788e+00,  2.1163e-01,  7.0621e-01,  1.3727e-01,
          5.3991e-01,  1.7391e+00, -3.3210e-02,  1.0857e+00,  3.2103e-01,
         -1.8625e-01, -1.6373e-01, -1.6703e-01, -8.0327e-01,  2.4209e-01,
         -1.2907e+00, -9.4453e-01,  1.0918e+00,  2.2230e-01,  5.9599e-01,
          3.9115e-01,  3.7051e-02, -6.8816e-02,  6.3398e-01,  3.3594e-01,
         -4.2741e-01,  2.2200e-01, -8.6931e-01, -3.6787e-01,  2.1474e-01,
          6.7392e-02, -1.6698e-01,  1.2223e+00,  6.7806e-01, -1.4511e+00,
         -7.1062e-01,  7.5439e-01, -1.0444e-01,  3.1845e-01, -5.1030e-01,
          1.2267e-01,  2.7742e-02,  1.4798e-01,  2.6529e-01,  8.7578e-01,
          9.2601e-01,  9.7738e-02,  1.3017e-01, -2.0166e-01, -5.9622e-02,
         -6.3147e-01, -1.5775e-01, -6.5926e-02,  1.0685e-01,  1.7477e-01,
         -5.8656e-01, -2.4534e-01,  9.0860e-01, -2.0284e-01, -2.1440e-01,
          3.9466e-02,  8.4000e-01, -3.0832e-02,  3.4682e-01, -1.6873e-01,
         -1.7100e-01,  8.1893e-02,  4.6180e-01, -1.0990e+00,  3.6852e-01,
          4.7457e-01, -1.1649e+00, -2.0102e-01,  6.9576e-02, -1.5933e-01,
          5.8227e-01, -8.2688e-02,  2.9465e-01, -8.5989e-01, -1.1235e+00,
         -1.1762e-01,  4.7228e-02, -1.7199e-02,  1.3936e-01, -5.8975e-01,
         -1.0926e-01, -1.7272e+00, -4.8893e-03,  2.7812e-01,  1.5454e-01,
          3.0881e-01]], device='cuda:0') tensor(0.2451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
868000 特征值优化 tensor(2.6833, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1571,  1.4678,  0.2802, -0.7957,  0.5784,  0.2711,  0.9933,  0.9288,
          1.1218,  0.0573,  0.0554,  0.6410, -0.5833, -0.5469, -0.4165,  0.3057,
          0.2705, -0.9930,  0.2654,  0.4084,  0.7205, -0.2246,  0.0610, -1.1739,
          0.6823, -0.4480,  0.2515, -0.1976, -0.2342, -0.0611, -0.0155,  0.0788,
          0.2904,  0.1847, -0.0854, -0.0434, -0.0625,  0.1064, -0.1249,  0.1611,
          0.7078,  0.1534,  0.0560,  0.1786, -0.2517,  0.2542, -0.0306,  0.1265,
         -0.0754,  0.1264, -0.0141, -0.0774,  0.0046,  0.0408, -0.0559,  0.4144,
         -0.1142, -0.0267,  0.0189,  0.0270,  0.3963,  0.3976, -0.2019, -0.1173,
          0.0681, -0.2135,  0.1688, -0.3644,  0.1516,  0.8925,  0.0473,  0.3788,
          0.0636,  0.1131,  0.1806,  0.0504,  0.7618, -0.1166,  0.2672,  0.0864,
          0.1667, -0.1074, -0.0173, -0.1378, -0.1979, -0.5453, -0.3132,  0.5787,
          0.0761,  0.0543,  0.5721, -0.1168,  0.1988,  0.2420, -0.0024, -0.4824,
          0.4861, -0.1861,  0.2670, -0.1701, -0.1086,  0.1364,  0.1982,  0.3110,
         -0.7549, -0.1830,  0.8045, -0.2294, -0.5033, -0.1338,  0.1670,  0.1711,
         -0.0168, -0.0030,  0.2811,  0.3719, -0.1509,  0.0331,  0.1931, -0.0532,
         -0.0760, -0.1591, -0.1479,  0.1753,  0.0362, -0.0998, -0.1227,  0.3101,
         -0.0709, -0.0261, -0.1126,  0.2826, -0.1254,  0.1338,  0.0840,  0.1297,
         -0.0314,  0.0115, -0.2596,  0.0390,  0.0054, -0.2730, -0.0118, -0.0164,
         -0.0136,  0.0305, -0.1439, -0.1786, -0.0811, -0.2984,  0.1626, -0.1347,
         -0.0605, -0.0515, -0.2267, -0.0303, -0.6246, -0.0723,  0.2075,  0.1114,
          0.1384]], device='cuda:0') tensor(0.2137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
869000 特征值优化 tensor(1.1439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2213e-01,  1.6692e+00, -3.9014e-01, -8.5652e-01,  1.0564e+00,
          5.4829e-01,  1.3904e+00,  9.4200e-01,  1.6694e+00, -2.7080e-02,
         -2.2506e-01,  5.6454e-01, -2.0468e-01, -2.7898e-01, -5.8289e-01,
          1.8303e-01,  1.6723e-02, -6.2814e-01,  3.7683e-01,  1.8505e-01,
          1.1578e+00, -8.8567e-02,  3.1715e-02, -1.1264e+00,  7.4919e-01,
         -6.0460e-01,  1.6491e-01, -1.3152e-01, -4.1540e-01, -1.9532e-01,
          6.3175e-02, -4.7658e-02,  1.7624e-01,  2.2513e-01, -1.4988e-01,
         -2.1564e-01, -1.1969e-01, -2.6282e-01, -5.1140e-02,  1.0882e-01,
          5.7935e-01,  1.8100e-01, -4.9104e-03,  2.4532e-02, -1.2078e-01,
          3.0079e-01,  2.2950e-01,  2.6882e-01, -2.3584e-01,  3.9136e-01,
          1.6355e-01, -5.5160e-02,  3.0917e-02,  1.7262e-01,  5.4816e-02,
          4.3614e-01, -3.6321e-01,  9.2366e-02, -1.2739e-01,  3.1675e-02,
          2.5913e-01,  3.4057e-01, -3.8125e-01, -1.7224e-01,  1.4558e-01,
          2.2148e-02,  3.6035e-01, -5.5435e-01,  6.1341e-02,  6.1208e-01,
          3.9956e-02,  2.4548e-01,  1.2237e-01,  2.3227e-01,  1.8808e-01,
          1.6209e-01,  5.5205e-01,  8.5922e-02,  2.0687e-01,  2.1384e-01,
          3.0144e-02,  1.6131e-02,  6.6390e-02, -1.1823e-01, -3.1573e-01,
         -3.7475e-01, -2.4139e-01,  1.6387e-01,  1.8451e-01,  1.8449e-01,
          6.8289e-01,  3.2657e-02,  2.2793e-01, -3.6816e-02,  3.8876e-04,
         -2.8153e-01,  7.3914e-01, -3.0054e-01,  6.7138e-03, -1.2529e-01,
          1.8876e-01,  2.9222e-02,  8.0808e-02,  1.4764e-01, -5.4722e-01,
         -3.4801e-01,  6.9371e-01, -3.4194e-01, -8.4751e-01, -5.3632e-02,
          1.3928e-01,  1.5059e-01, -1.3202e-01,  3.1304e-02,  1.3934e-01,
          9.1920e-02, -1.6253e-01,  2.5297e-02,  1.3465e-01,  1.8910e-01,
          2.2346e-01, -7.1023e-02, -1.2625e-01,  1.8572e-02, -7.2861e-02,
         -3.9427e-02, -5.1437e-02,  2.5832e-01,  2.1198e-02, -3.3592e-02,
         -1.9011e-01,  8.7295e-02, -9.0486e-02, -3.7135e-02,  1.6350e-01,
          1.8295e-01, -1.7754e-01, -2.8932e-02, -1.9876e-02,  1.7100e-01,
         -1.5082e-01, -8.5477e-02, -1.6003e-02, -2.0657e-02, -1.0623e-01,
         -1.6767e-01, -1.8389e-01, -7.7710e-02, -3.8469e-02, -2.2785e-01,
          1.2059e-01, -1.5473e-01, -1.7617e-02, -9.6409e-02, -1.7564e-01,
          5.6525e-02, -1.5726e-01, -1.2194e-01,  1.9385e-01,  1.4679e-01,
         -6.1588e-02]], device='cuda:0') tensor(0.2124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
870000 特征值优化 tensor(1.0383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.5283e-01,  1.6338e+00, -5.8091e-01, -9.3085e-01,  1.6169e+00,
          4.2711e-01,  1.6288e+00,  9.6452e-01,  1.7735e+00,  4.0961e-02,
         -2.9333e-01,  4.1137e-01,  1.1202e-01, -4.4297e-01, -5.6799e-01,
          3.4730e-01, -2.9069e-01, -4.7198e-01,  3.0724e-01,  2.5203e-02,
          1.3595e+00,  8.5233e-03,  4.8520e-02, -1.1592e+00,  8.8421e-01,
         -5.9747e-01,  1.3256e-01, -2.4050e-01, -3.7162e-01, -1.6777e-01,
          1.1758e-01, -2.3954e-01,  1.4070e-01,  3.6724e-01, -1.8718e-01,
         -3.0406e-01, -1.6870e-01, -2.3563e-01, -3.7997e-02, -1.7307e-02,
          5.7302e-01,  1.8930e-01,  1.4319e-02,  1.6959e-02, -1.5629e-01,
          3.7127e-01,  1.9760e-01,  2.5232e-01, -2.9508e-01,  4.1948e-01,
          2.8984e-01, -3.5667e-02,  2.2897e-02,  2.0639e-01,  6.0280e-02,
          4.5997e-01, -2.6920e-01,  1.1013e-01, -1.2418e-01, -1.7748e-02,
          2.2333e-01,  2.3577e-01, -4.2269e-01, -1.4694e-01,  2.2610e-01,
         -4.8039e-02,  4.3183e-01, -5.5531e-01, -4.7628e-04,  5.3711e-01,
          1.6550e-02,  1.8909e-01,  9.8155e-02,  2.6710e-01,  1.7494e-01,
          1.9581e-01,  4.7525e-01,  2.3450e-02,  2.3172e-01,  2.6163e-01,
          2.0202e-02,  2.1278e-02,  6.9094e-02, -6.8988e-02, -2.7988e-01,
         -3.0537e-01, -2.2234e-01,  1.3031e-01,  1.1859e-01,  3.4835e-01,
          6.6405e-01,  1.5939e-01,  2.7781e-01, -1.2579e-01, -6.8413e-02,
         -2.2489e-01,  6.9633e-01, -1.7886e-01, -1.4643e-01, -2.2137e-01,
          1.2341e-01,  4.3857e-02,  1.0999e-01,  1.0396e-01, -4.3620e-01,
         -4.4509e-01,  5.1950e-01, -3.6410e-01, -9.2316e-01, -8.9707e-02,
          1.3728e-01,  1.1904e-01, -1.3573e-01,  2.8930e-02,  1.4272e-01,
          1.7808e-02, -1.4261e-01, -4.0587e-02,  1.1218e-01,  1.1633e-01,
          2.6692e-01, -4.6111e-02, -3.4181e-02,  3.5161e-03, -9.7838e-02,
         -1.4646e-02, -3.0845e-02,  2.3889e-01, -2.8613e-02, -5.8828e-04,
         -1.9593e-01,  9.5371e-02, -7.4697e-02, -6.3900e-02,  1.2718e-01,
          6.1199e-02, -1.9719e-01,  7.0944e-02, -3.3439e-02,  9.6033e-02,
         -1.2985e-01, -4.3532e-02, -4.8814e-02,  5.5756e-02, -1.2112e-01,
         -1.1497e-01, -1.3422e-01, -1.2152e-01, -2.6124e-02, -1.7573e-01,
          1.0486e-01, -1.4242e-01, -4.3107e-02, -1.6644e-01, -1.6494e-01,
          1.1061e-01, -1.0411e-01, -1.3291e-01,  1.4395e-01,  1.7737e-01,
         -4.6628e-02]], device='cuda:0') tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
871000 特征值优化 tensor(0.9789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.0450e-01,  1.6742e+00, -4.8441e-01, -9.6070e-01,  1.6598e+00,
          2.3060e-01,  1.8444e+00,  9.1933e-01,  1.8184e+00,  1.0166e-01,
         -3.0300e-01,  2.6342e-01,  1.5656e-01, -5.5082e-01, -6.0943e-01,
          4.2262e-01, -4.6748e-01, -3.5455e-01,  3.0276e-01, -5.2474e-02,
          1.4313e+00,  8.6233e-02,  6.3089e-02, -1.1981e+00,  8.8562e-01,
         -6.1644e-01,  7.2117e-02, -3.1531e-01, -4.2446e-01, -1.8051e-01,
          7.5996e-02, -3.0288e-01,  1.2335e-01,  4.4909e-01, -2.9407e-01,
         -3.2683e-01, -1.7614e-01, -2.5284e-01, -3.3445e-02, -6.4589e-02,
          5.7114e-01,  1.9118e-01,  1.5222e-02,  5.5070e-02, -1.4306e-01,
          2.7705e-01,  1.3411e-01,  2.3274e-01, -3.2039e-01,  4.3425e-01,
          3.6315e-01, -4.8245e-03,  2.5625e-02,  2.4402e-01,  1.5172e-02,
          4.4931e-01, -1.6556e-01,  1.3632e-01, -4.8606e-02, -7.5895e-02,
          1.8676e-01,  1.7251e-01, -4.1404e-01, -8.3776e-02,  2.4646e-01,
         -9.9066e-02,  4.8388e-01, -5.1716e-01, -4.7425e-02,  4.9075e-01,
         -1.5730e-02,  1.4790e-01,  1.2817e-01,  3.0680e-01,  1.6540e-01,
          2.2118e-01,  3.8890e-01,  5.0981e-02,  2.0214e-01,  2.8278e-01,
         -8.6516e-03,  3.6636e-02,  5.4530e-02, -7.0689e-02, -3.1797e-01,
         -2.6253e-01, -2.1739e-01,  1.2860e-01,  1.8665e-01,  4.3157e-01,
          6.3424e-01,  2.5369e-01,  2.9201e-01, -1.2338e-01, -8.0488e-02,
         -2.4521e-01,  6.8607e-01, -1.9686e-01, -2.0755e-01, -3.5547e-01,
          3.1363e-02,  4.6401e-02,  6.1005e-02,  1.0138e-01, -2.9417e-01,
         -5.2349e-01,  3.5829e-01, -2.9657e-01, -9.6061e-01, -1.3009e-01,
          1.6977e-01,  1.0717e-01, -8.6444e-02,  2.8745e-02,  1.4097e-01,
          8.4650e-02, -9.2075e-02, -3.6053e-02,  6.2374e-02,  6.8724e-02,
          3.2618e-01, -3.2953e-02,  3.1282e-02, -2.7680e-02, -1.1282e-01,
          1.2731e-03, -5.0728e-02,  2.2551e-01, -2.0590e-02,  7.1999e-03,
         -1.9420e-01,  1.0766e-01, -3.1967e-02, -2.9018e-02,  5.2454e-02,
         -1.0102e-02, -1.5240e-01,  9.2765e-02, -5.2473e-02,  4.7434e-02,
         -1.5795e-01,  8.0383e-03,  6.9932e-03,  6.1443e-02, -8.7533e-02,
         -8.0009e-02, -8.8057e-02, -1.4139e-01, -5.2532e-02, -1.3623e-01,
          1.0156e-01, -1.0720e-01, -7.8432e-02, -2.0066e-01, -1.6302e-01,
          1.0245e-01, -1.0190e-01, -1.5051e-01,  1.0533e-01,  1.8346e-01,
         -5.6239e-02]], device='cuda:0') tensor(0.2115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
872000 特征值优化 tensor(0.9508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.4005e-01,  1.7104e+00, -4.5552e-01, -9.8367e-01,  1.6621e+00,
          4.8546e-02,  1.9509e+00,  9.9502e-01,  1.9061e+00,  2.6857e-01,
         -2.5873e-01,  2.4745e-01,  1.1153e-01, -6.4246e-01, -6.3176e-01,
          5.0375e-01, -5.8183e-01, -2.8468e-01,  4.1493e-01, -1.6109e-01,
          1.3727e+00,  1.5800e-01,  5.8283e-02, -1.2174e+00,  9.0122e-01,
         -5.8008e-01, -5.2322e-03, -3.5407e-01, -5.0903e-01, -2.0028e-01,
          7.9346e-02, -2.3873e-01,  1.0894e-01,  4.6925e-01, -3.8319e-01,
         -2.7978e-01, -1.3684e-01, -2.1638e-01, -3.0427e-03, -1.0579e-01,
          5.5437e-01,  1.9349e-01,  2.7212e-02,  6.1269e-02, -1.1942e-01,
          2.6205e-01,  1.4621e-01,  2.0503e-01, -3.5004e-01,  3.8026e-01,
          3.7049e-01, -5.9916e-02, -7.4583e-03,  3.2883e-01, -4.4505e-02,
          4.2516e-01, -1.8605e-01,  1.0418e-01,  9.4885e-02, -1.3003e-01,
          1.6707e-01,  1.1545e-01, -3.9255e-01, -2.0318e-03,  2.7723e-01,
         -1.6169e-01,  4.7185e-01, -4.6232e-01, -3.0787e-02,  4.5209e-01,
         -5.5343e-02,  1.0665e-01,  1.4348e-01,  3.3078e-01,  1.7239e-01,
          2.6288e-01,  3.1686e-01,  1.1287e-01,  2.0981e-01,  2.5956e-01,
          1.7508e-02,  1.3512e-02, -9.1097e-05, -7.2833e-02, -3.2078e-01,
         -2.7104e-01, -1.9013e-01,  8.6834e-02,  1.1471e-01,  4.1601e-01,
          5.8369e-01,  3.0239e-01,  2.9243e-01, -6.9491e-02, -1.1683e-01,
         -2.5156e-01,  7.3144e-01, -2.1929e-01, -1.9335e-01, -4.2896e-01,
          9.5924e-02,  2.1987e-02, -1.1918e-03,  6.0662e-02, -1.8958e-01,
         -4.9183e-01,  2.0911e-01, -2.0792e-01, -9.2749e-01, -1.0546e-01,
          1.9982e-01,  9.4605e-02, -6.6905e-02,  1.7086e-02,  1.7813e-01,
          1.7901e-01, -1.3699e-01, -1.9034e-02,  4.0590e-02, -3.8286e-03,
          3.4279e-01, -5.7608e-02,  4.6030e-02, -6.8939e-02, -8.6991e-02,
          2.2267e-02, -5.0209e-02,  2.4691e-01,  2.5578e-02, -1.5239e-03,
         -2.0159e-01,  1.2797e-01,  2.6923e-03, -1.8493e-02, -3.0108e-03,
         -4.6961e-03, -1.3986e-01,  9.8519e-02, -3.9215e-02,  3.6298e-02,
         -8.9920e-02, -3.8233e-02, -5.4308e-02,  2.7737e-02, -1.1825e-01,
         -9.4206e-02, -1.0334e-01, -1.4076e-01, -3.7959e-02, -1.5663e-01,
          8.5865e-02, -8.5036e-02, -9.3737e-02, -2.3964e-01, -1.3876e-01,
          1.2509e-01, -5.5461e-02, -1.5748e-01,  7.6461e-02,  1.7987e-01,
         -4.8382e-02]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
873000 特征值优化 tensor(0.9594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.1544e-01,  1.6533e+00, -4.9127e-01, -9.8044e-01,  1.5655e+00,
          3.8311e-02,  2.0393e+00,  1.0166e+00,  2.0090e+00,  3.7933e-01,
         -2.4508e-01,  2.7184e-01,  1.0846e-01, -6.2706e-01, -6.8863e-01,
          5.7903e-01, -6.3330e-01, -2.4214e-01,  4.7278e-01, -2.2717e-01,
          1.3150e+00,  2.6168e-01,  1.1542e-01, -1.3002e+00,  9.5127e-01,
         -5.1317e-01, -7.9500e-02, -3.9145e-01, -5.1751e-01, -1.7505e-01,
          6.1190e-02, -1.6532e-01,  8.9003e-02,  4.8373e-01, -5.0434e-01,
         -2.1541e-01, -1.3158e-01, -2.1098e-01, -1.0212e-02, -1.0232e-01,
          5.4419e-01,  1.9456e-01,  2.7916e-02,  5.0678e-02, -1.4145e-01,
          2.5324e-01,  1.5966e-01,  1.8380e-01, -3.3864e-01,  3.9073e-01,
          3.5518e-01, -1.2339e-01, -2.8079e-02,  3.7041e-01, -5.9448e-02,
          3.7245e-01, -2.0110e-01,  7.0913e-02,  2.0606e-01, -1.8719e-01,
          2.1223e-01,  8.0573e-02, -4.0577e-01,  1.1001e-01,  2.7122e-01,
         -1.8137e-01,  4.5826e-01, -3.9770e-01, -1.5775e-02,  4.2280e-01,
         -5.9722e-02,  8.1760e-02,  1.4991e-01,  3.4746e-01,  1.7369e-01,
          2.6528e-01,  2.6515e-01,  1.0425e-01,  1.9280e-01,  2.2267e-01,
          1.4231e-02,  1.5589e-02, -3.5890e-03, -8.0708e-02, -3.0943e-01,
         -2.5795e-01, -1.7233e-01,  8.2375e-02,  7.7257e-02,  4.3624e-01,
          5.2740e-01,  3.6872e-01,  2.8046e-01, -4.2465e-02, -1.3224e-01,
         -2.3471e-01,  7.3789e-01, -2.5050e-01, -1.0741e-01, -4.3716e-01,
          9.0500e-02,  3.1454e-02, -9.1329e-02, -9.8390e-03, -1.5405e-01,
         -4.6486e-01,  6.0457e-02, -1.7037e-01, -8.8847e-01, -7.8229e-02,
          1.9669e-01,  6.5735e-02, -7.5658e-02,  1.4218e-02,  1.7634e-01,
          2.0217e-01, -1.6636e-01,  1.9870e-03,  5.0725e-02, -5.9141e-03,
          3.6531e-01, -8.8994e-02,  5.4679e-02, -1.0120e-01, -6.1280e-02,
          5.4635e-02, -4.9975e-02,  2.5436e-01,  2.0929e-02, -6.9502e-03,
         -2.1172e-01,  1.1942e-01, -1.5122e-02,  8.1276e-03,  1.2999e-02,
         -6.3130e-04, -1.0372e-01,  1.1778e-01, -2.1221e-02,  1.7556e-02,
         -6.4378e-02, -7.8175e-02, -4.1502e-02,  1.9578e-03, -1.2094e-01,
         -7.2595e-02, -1.1699e-01, -1.7591e-01, -6.8054e-02, -1.5542e-01,
          6.1147e-02, -1.0387e-01, -9.0155e-02, -2.5134e-01, -1.1542e-01,
          1.1069e-01, -3.8404e-02, -1.5677e-01,  6.0367e-02,  1.6896e-01,
         -5.8245e-02]], device='cuda:0') tensor(0.2114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
874000 特征值优化 tensor(0.9541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.8932e-01,  1.6513e+00, -5.2680e-01, -9.8446e-01,  1.3648e+00,
          2.8079e-02,  2.0718e+00,  1.0059e+00,  2.0688e+00,  4.8267e-01,
         -2.1738e-01,  2.7655e-01,  1.3836e-01, -6.0414e-01, -6.8817e-01,
          6.3345e-01, -6.7448e-01, -2.1832e-01,  5.0749e-01, -2.4548e-01,
          1.2801e+00,  3.4791e-01,  1.6886e-01, -1.3679e+00,  1.0049e+00,
         -4.6611e-01, -1.3024e-01, -3.7674e-01, -5.1789e-01, -1.6365e-01,
          2.5629e-02, -1.3534e-01,  8.0301e-02,  4.6892e-01, -5.8069e-01,
         -1.8889e-01, -1.1401e-01, -1.7098e-01, -1.5334e-02, -1.0781e-01,
          5.4416e-01,  1.9378e-01,  2.9346e-02,  5.9663e-02, -1.6501e-01,
          2.5870e-01,  1.4245e-01,  1.8220e-01, -3.3837e-01,  4.1775e-01,
          3.4480e-01, -1.6365e-01, -5.3035e-02,  3.9497e-01, -8.3220e-02,
          3.4659e-01, -2.0353e-01,  6.5310e-02,  2.5612e-01, -1.9913e-01,
          2.4134e-01,  3.9296e-02, -4.1093e-01,  1.3534e-01,  2.8766e-01,
         -1.7435e-01,  4.1493e-01, -3.5131e-01,  3.5635e-03,  4.0287e-01,
         -2.8091e-02,  6.8617e-02,  1.1371e-01,  3.6605e-01,  1.5048e-01,
          2.6227e-01,  2.4418e-01,  9.1115e-02,  1.8749e-01,  1.9289e-01,
          1.1479e-02,  1.9965e-02, -1.1036e-02, -9.1128e-02, -3.2486e-01,
         -2.5269e-01, -1.7432e-01,  9.3430e-02,  7.5516e-02,  4.2201e-01,
          4.9489e-01,  4.0069e-01,  2.4311e-01, -5.8935e-02, -1.2882e-01,
         -2.2499e-01,  7.4334e-01, -2.6279e-01, -4.1909e-02, -4.0926e-01,
          9.1210e-02,  6.4781e-02, -1.8944e-01, -3.1191e-02, -1.1379e-01,
         -4.6043e-01, -5.8116e-02, -1.7589e-01, -8.5883e-01, -6.2217e-02,
          1.9948e-01,  5.8312e-02, -6.5612e-02,  3.6256e-02,  1.7801e-01,
          2.2135e-01, -1.4566e-01,  3.2322e-02,  7.4150e-02, -4.8969e-03,
          3.6106e-01, -1.0087e-01,  7.0522e-02, -1.0280e-01, -4.7971e-02,
          7.0938e-02, -5.2396e-02,  2.2836e-01, -2.0768e-02, -2.8126e-03,
         -1.9047e-01,  1.2005e-01, -1.7933e-02,  2.4055e-02,  2.0651e-02,
          3.1523e-04, -7.6450e-02,  1.1920e-01, -2.8782e-02,  3.5178e-02,
         -3.4435e-02, -9.6196e-02, -3.0880e-02, -1.1918e-02, -1.3583e-01,
         -7.6316e-02, -1.3355e-01, -1.7119e-01, -6.4982e-02, -1.5971e-01,
          6.8352e-02, -1.0578e-01, -8.7630e-02, -2.7149e-01, -9.5075e-02,
          1.2131e-01, -3.9899e-02, -1.4188e-01,  5.6633e-02,  1.4760e-01,
         -7.4475e-02]], device='cuda:0') tensor(0.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
875000 特征值优化 tensor(0.9227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.3361e-01,  1.6898e+00, -5.4942e-01, -1.0001e+00,  1.2580e+00,
          2.2540e-02,  2.1213e+00,  9.6390e-01,  2.1210e+00,  5.4862e-01,
         -1.9083e-01,  3.0826e-01,  1.3930e-01, -5.8878e-01, -6.4100e-01,
          6.5276e-01, -6.9883e-01, -1.4257e-01,  5.2483e-01, -2.6434e-01,
          1.2341e+00,  4.3877e-01,  2.9598e-01, -1.4237e+00,  1.0057e+00,
         -4.8004e-01, -1.0494e-01, -3.6361e-01, -4.8967e-01, -1.5897e-01,
          2.1699e-02, -1.4137e-01,  8.5177e-02,  4.8057e-01, -6.0808e-01,
         -1.7696e-01, -1.0224e-01, -1.5487e-01,  7.4095e-03, -8.8253e-02,
          5.3298e-01,  1.9561e-01,  2.7407e-02,  6.7103e-02, -1.7815e-01,
          2.6978e-01,  1.2330e-01,  1.8760e-01, -3.0947e-01,  4.0041e-01,
          3.4657e-01, -1.8290e-01, -6.7324e-02,  4.2066e-01, -1.1152e-01,
          3.1762e-01, -2.0479e-01,  1.2758e-01,  3.1212e-01, -2.1700e-01,
          2.4793e-01,  2.4304e-02, -4.0135e-01,  1.5104e-01,  2.9675e-01,
         -1.6475e-01,  3.9327e-01, -3.2214e-01,  2.4253e-02,  3.9466e-01,
         -7.1219e-03,  4.5311e-02,  5.8824e-02,  3.7321e-01,  1.2352e-01,
          2.6433e-01,  2.3203e-01,  9.1502e-02,  1.6855e-01,  2.0721e-01,
          9.5064e-03,  2.4704e-02, -5.0054e-02, -8.2467e-02, -3.3839e-01,
         -2.2903e-01, -1.6253e-01,  7.0648e-02,  3.8451e-02,  3.8689e-01,
          4.7439e-01,  4.2275e-01,  1.9952e-01, -3.8879e-02, -1.2605e-01,
         -2.2402e-01,  7.7102e-01, -2.7391e-01,  1.1405e-02, -4.4630e-01,
          8.4708e-02,  9.5886e-02, -2.4873e-01, -4.0975e-02, -1.1982e-01,
         -4.4619e-01, -8.7893e-02, -1.9841e-01, -8.3278e-01, -6.4599e-02,
          1.8423e-01,  5.9064e-02, -8.2492e-02,  2.1315e-02,  1.8839e-01,
          2.0629e-01, -1.4611e-01,  4.5519e-02,  9.9725e-02, -9.0328e-04,
          3.3899e-01, -1.0589e-01,  8.9592e-02, -1.0476e-01, -4.8950e-02,
          7.0688e-02, -5.4341e-02,  1.9237e-01, -5.7242e-02,  2.9689e-03,
         -1.7520e-01,  1.3135e-01, -7.8983e-03,  2.6731e-02, -7.4713e-03,
         -2.5322e-02, -6.3180e-02,  1.2256e-01, -3.3999e-02,  4.3468e-02,
          3.3548e-02, -9.7301e-02,  6.5970e-03,  1.9790e-02, -1.3705e-01,
         -4.4280e-02, -1.6246e-01, -1.2725e-01, -5.1456e-02, -1.7451e-01,
          7.1688e-02, -8.2077e-02, -7.8251e-02, -2.7136e-01, -9.8338e-02,
          1.1781e-01, -1.7478e-02, -1.3436e-01,  4.9490e-02,  1.3148e-01,
         -8.3567e-02]], device='cuda:0') tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
876000 特征值优化 tensor(0.9355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.5387e-01,  1.6819e+00, -5.4587e-01, -9.9118e-01,  1.1905e+00,
         -4.6240e-03,  2.1070e+00,  8.9675e-01,  2.1502e+00,  5.4474e-01,
         -1.6364e-01,  3.0533e-01,  1.4781e-01, -6.4815e-01, -6.1744e-01,
          6.3295e-01, -7.1754e-01, -9.9400e-02,  5.2689e-01, -2.8625e-01,
          1.2116e+00,  4.7986e-01,  3.4372e-01, -1.4416e+00,  1.0027e+00,
         -4.8792e-01, -1.1203e-01, -3.2968e-01, -4.8683e-01, -1.4568e-01,
          2.3526e-02, -1.4479e-01,  7.9663e-02,  4.6626e-01, -6.4428e-01,
         -1.4859e-01, -8.6819e-02, -1.6159e-01,  5.6008e-03, -9.1827e-02,
          5.4991e-01,  1.9528e-01,  2.7484e-02,  5.2460e-02, -1.7891e-01,
          2.7121e-01,  1.0390e-01,  1.7874e-01, -3.0184e-01,  4.0225e-01,
          3.3322e-01, -2.0424e-01, -3.9810e-02,  4.5404e-01, -9.7668e-02,
          2.8573e-01, -2.1517e-01,  1.6316e-01,  3.4547e-01, -2.2943e-01,
          2.7112e-01,  2.2686e-02, -4.0484e-01,  1.6543e-01,  3.0598e-01,
         -1.5027e-01,  3.6158e-01, -2.9389e-01,  4.3708e-02,  3.9050e-01,
          1.8067e-02,  3.1234e-02,  4.1093e-03,  3.8759e-01,  9.8059e-02,
          2.6146e-01,  2.3686e-01,  4.7006e-02,  1.6389e-01,  1.9869e-01,
          1.7514e-03,  4.5652e-02, -4.2425e-02, -8.7546e-02, -3.0843e-01,
         -2.1605e-01, -1.5549e-01,  6.1945e-02,  2.8960e-02,  4.1181e-01,
          4.4708e-01,  4.2601e-01,  2.2091e-01, -4.8166e-02, -1.2621e-01,
         -2.2251e-01,  7.9642e-01, -3.5101e-01,  3.0876e-02, -4.4569e-01,
          4.9337e-02,  9.9048e-02, -3.1077e-01, -3.8048e-02, -1.7089e-01,
         -4.4370e-01, -1.4329e-01, -1.7155e-01, -7.8284e-01, -6.1283e-02,
          1.7253e-01,  4.6572e-02, -9.4240e-02,  3.9407e-03,  1.8482e-01,
          2.1511e-01, -1.1345e-01,  3.3206e-02,  1.3877e-01, -2.8409e-02,
          3.2792e-01, -1.2276e-01,  9.1521e-02, -1.0209e-01, -6.0527e-02,
          6.8588e-02, -7.2391e-02,  1.8870e-01, -7.7163e-02,  2.9818e-02,
         -1.5007e-01,  1.3481e-01, -8.2184e-03,  3.2530e-02,  8.6926e-03,
         -3.1369e-02, -5.3266e-02,  1.2486e-01, -5.3852e-02,  6.8279e-02,
          5.4265e-02, -1.2449e-01,  1.2261e-02,  4.4828e-03, -1.5333e-01,
         -4.6026e-02, -1.6917e-01, -1.2562e-01, -5.7488e-02, -1.6989e-01,
          7.6119e-02, -8.2825e-02, -6.9069e-02, -2.5796e-01, -7.8726e-02,
          1.0482e-01, -3.5123e-03, -1.2271e-01,  4.9751e-02,  1.3618e-01,
         -7.3381e-02]], device='cuda:0') tensor(0.2157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
877000 特征值优化 tensor(0.9365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9222,  1.6659, -0.5198, -1.0044,  1.0637, -0.0230,  2.1209,  0.8439,
          2.1769,  0.5977, -0.1189,  0.2524,  0.1446, -0.6633, -0.6408,  0.5997,
         -0.7260, -0.0294,  0.5560, -0.3008,  1.1314,  0.5256,  0.4183, -1.4662,
          0.9915, -0.5222, -0.1046, -0.2886, -0.5249, -0.1471,  0.0143, -0.1342,
          0.0628,  0.5000, -0.6832, -0.1116, -0.0803, -0.1437,  0.0309, -0.1076,
          0.5523,  0.1936,  0.0343,  0.0734, -0.1790,  0.2548,  0.1028,  0.1599,
         -0.3050,  0.4323,  0.3104, -0.2092, -0.0515,  0.4767, -0.0938,  0.2522,
         -0.2213,  0.1691,  0.3530, -0.2456,  0.2997,  0.0082, -0.4156,  0.1934,
          0.3057, -0.1230,  0.3420, -0.2780,  0.0745,  0.3386,  0.0286,  0.0130,
         -0.0776,  0.3786,  0.0758,  0.2597,  0.2075, -0.0094,  0.1610,  0.2092,
         -0.0162,  0.0593, -0.0701, -0.0753, -0.3170, -0.1967, -0.1562,  0.0787,
          0.0123,  0.4362,  0.4603,  0.3834,  0.2072, -0.0636, -0.1415, -0.2267,
          0.7882, -0.4225,  0.0912, -0.4129,  0.0214,  0.0723, -0.3128, -0.0628,
         -0.1985, -0.4521, -0.1649, -0.1502, -0.7520, -0.0689,  0.1601,  0.0387,
         -0.0992,  0.0131,  0.1893,  0.2155, -0.1052,  0.0545,  0.1462, -0.0411,
          0.3224, -0.1016,  0.1084, -0.0816, -0.0783,  0.0922, -0.0595,  0.1600,
         -0.0905,  0.0497, -0.1311,  0.1595,  0.0271,  0.0262,  0.0046, -0.0490,
         -0.0546,  0.1318, -0.0857,  0.0926,  0.0656, -0.1289, -0.0062, -0.0160,
         -0.1181, -0.0377, -0.1983, -0.1128, -0.0303, -0.1515,  0.0907, -0.0944,
         -0.0353, -0.2584, -0.0743,  0.0667,  0.0143, -0.1000,  0.0235,  0.1124,
         -0.0729]], device='cuda:0') tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
878000 特征值优化 tensor(0.9022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.7132e-01,  1.6505e+00, -4.9934e-01, -1.0153e+00,  9.7910e-01,
         -3.5035e-02,  2.0829e+00,  7.6041e-01,  2.2034e+00,  6.2347e-01,
         -4.9622e-02,  2.1468e-01,  1.4252e-01, -7.0569e-01, -6.6598e-01,
          5.4642e-01, -7.5588e-01,  5.8523e-02,  6.3962e-01, -3.0861e-01,
          1.0361e+00,  5.6003e-01,  5.2802e-01, -1.4791e+00,  9.4449e-01,
         -5.4644e-01, -1.0444e-01, -2.9290e-01, -5.1871e-01, -1.7098e-01,
          4.1051e-02, -1.2902e-01,  6.4622e-02,  4.8940e-01, -6.9782e-01,
         -8.6059e-02, -8.2746e-02, -1.6470e-01,  2.8990e-02, -1.2587e-01,
          5.5821e-01,  1.9495e-01,  3.0297e-02,  8.5603e-02, -1.6597e-01,
          2.6508e-01,  6.5841e-02,  1.2669e-01, -3.0346e-01,  4.1579e-01,
          2.9081e-01, -2.1806e-01, -6.7817e-02,  4.8508e-01, -6.7375e-02,
          2.1821e-01, -2.4669e-01,  1.8990e-01,  3.6586e-01, -2.4378e-01,
          3.4492e-01, -1.4125e-02, -4.2721e-01,  2.0940e-01,  2.8680e-01,
         -8.4722e-02,  3.1770e-01, -2.7369e-01,  9.2687e-02,  2.8345e-01,
          1.4595e-02, -5.0099e-03, -1.4517e-01,  3.6503e-01,  4.0858e-02,
          2.6917e-01,  1.8714e-01, -5.1021e-02,  1.6678e-01,  2.1550e-01,
         -3.0390e-02,  6.3264e-02, -1.1103e-01, -6.3994e-02, -3.1834e-01,
         -2.0764e-01, -1.6423e-01,  1.2197e-01,  5.1800e-03,  4.2520e-01,
          4.7397e-01,  3.2526e-01,  2.3903e-01, -7.5876e-02, -1.3901e-01,
         -2.3077e-01,  7.8417e-01, -4.4195e-01,  1.1687e-01, -3.7684e-01,
          1.0587e-02,  5.6914e-02, -3.6831e-01, -6.0857e-02, -2.1940e-01,
         -4.2544e-01, -1.9477e-01, -1.5401e-01, -6.5198e-01, -7.1792e-02,
          1.4973e-01,  1.7078e-02, -7.7496e-02, -1.2842e-02,  1.9361e-01,
          2.1203e-01, -7.9678e-02,  6.5224e-02,  1.4734e-01, -3.9101e-02,
          3.3422e-01, -8.0871e-02,  1.1654e-01, -7.3289e-02, -7.3231e-02,
          1.0948e-01, -3.2484e-02,  1.5453e-01, -1.1094e-01,  6.4296e-02,
         -1.0954e-01,  1.8043e-01,  3.4373e-02,  1.3036e-03, -1.2894e-02,
         -2.1751e-02, -3.9480e-02,  1.2565e-01, -1.2333e-01,  9.4591e-02,
          6.0664e-02, -1.2896e-01,  2.5228e-03, -2.7094e-02, -1.2523e-01,
          7.5591e-03, -2.0180e-01, -1.0043e-01, -1.4340e-02, -1.5229e-01,
          6.7646e-02, -8.8697e-02, -1.0799e-02, -2.7264e-01, -1.0032e-01,
          1.7261e-02,  1.3232e-02, -4.9914e-02,  2.7457e-02,  8.9245e-02,
         -6.7401e-02]], device='cuda:0') tensor(0.2435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
879000 特征值优化 tensor(0.9114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0472,  1.6416, -0.4955, -1.0123,  0.8988, -0.0258,  2.0309,  0.6642,
          2.2089,  0.6336,  0.0117,  0.1717,  0.1003, -0.7295, -0.6751,  0.4579,
         -0.7856,  0.1010,  0.7065, -0.3041,  0.9420,  0.5377,  0.5688, -1.4560,
          0.9281, -0.5360, -0.1070, -0.2983, -0.4823, -0.1809,  0.0779, -0.1200,
          0.0308,  0.4873, -0.6865, -0.0470, -0.0798, -0.1753,  0.0345, -0.1356,
          0.5581,  0.1966,  0.0291,  0.0777, -0.1601,  0.2798,  0.0253,  0.0916,
         -0.3078,  0.4238,  0.2634, -0.2324, -0.1004,  0.5013, -0.0695,  0.1789,
         -0.2380,  0.2219,  0.3620, -0.2497,  0.3762, -0.0432, -0.4209,  0.2411,
          0.2538, -0.0910,  0.2885, -0.2859,  0.1023,  0.2425,  0.0213,  0.0160,
         -0.1923,  0.3619,  0.0304,  0.2894,  0.1950, -0.0688,  0.1826,  0.2077,
         -0.0328,  0.0883, -0.1289, -0.0705, -0.3080, -0.2091, -0.1662,  0.1244,
          0.0304,  0.4174,  0.4938,  0.2798,  0.2759, -0.0696, -0.1399, -0.2289,
          0.7746, -0.4135,  0.1587, -0.3889,  0.0700,  0.0235, -0.4337, -0.0712,
         -0.2159, -0.4248, -0.2181, -0.1407, -0.5315, -0.0577,  0.1490,  0.0046,
         -0.0318, -0.0207,  0.2193,  0.2224, -0.0533,  0.0654,  0.1730, -0.0676,
          0.3213, -0.0545,  0.1322, -0.0857, -0.0518,  0.1382, -0.0330,  0.1521,
         -0.1182,  0.0900, -0.0788,  0.1843,  0.0477, -0.0255, -0.0247, -0.0057,
         -0.0498,  0.1226, -0.1364,  0.0876,  0.0449, -0.1285,  0.0233, -0.0228,
         -0.1210,  0.0236, -0.1915, -0.1019, -0.0314, -0.1327,  0.0519, -0.1101,
          0.0033, -0.2631, -0.1311, -0.0070,  0.0407, -0.0213,  0.0142,  0.1025,
         -0.0363]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
880000 特征值优化 tensor(0.8945, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1571e+00,  1.6582e+00, -4.9268e-01, -1.0139e+00,  7.6612e-01,
         -2.8448e-02,  2.0201e+00,  5.8472e-01,  2.2203e+00,  6.2992e-01,
          8.2348e-02,  1.9112e-01,  9.0800e-02, -7.4831e-01, -6.9896e-01,
          3.6943e-01, -8.1625e-01,  1.3985e-01,  7.0811e-01, -2.8900e-01,
          8.8067e-01,  5.0355e-01,  5.9316e-01, -1.4314e+00,  9.0299e-01,
         -5.4054e-01, -1.0346e-01, -2.8372e-01, -4.6194e-01, -1.8395e-01,
          1.1632e-01, -1.3020e-01,  1.1424e-02,  4.8570e-01, -6.6230e-01,
          3.1848e-03, -7.5253e-02, -1.8347e-01,  5.3408e-02, -1.3405e-01,
          5.5351e-01,  1.9519e-01,  2.9956e-02,  7.2823e-02, -1.6878e-01,
          2.8289e-01,  1.0045e-02,  4.0121e-02, -2.8229e-01,  3.9420e-01,
          2.3330e-01, -2.3652e-01, -1.2391e-01,  5.1411e-01, -7.1501e-02,
          1.7112e-01, -2.2523e-01,  2.5046e-01,  3.6728e-01, -2.7811e-01,
          3.9393e-01, -6.8574e-02, -3.8929e-01,  2.6487e-01,  2.1856e-01,
         -7.1496e-02,  2.6195e-01, -3.0686e-01,  9.0454e-02,  2.1887e-01,
          4.8197e-02,  4.1218e-02, -2.2431e-01,  3.4966e-01,  2.1261e-02,
          2.8586e-01,  1.9248e-01, -8.7115e-02,  2.0047e-01,  2.0791e-01,
         -3.2625e-02,  9.7582e-02, -1.5105e-01, -8.3956e-02, -3.0899e-01,
         -2.3294e-01, -1.5749e-01,  1.1697e-01,  5.7642e-03,  4.0133e-01,
          5.0658e-01,  2.1945e-01,  3.1360e-01, -5.7008e-02, -1.4218e-01,
         -2.3049e-01,  7.7131e-01, -4.0768e-01,  1.5712e-01, -4.0659e-01,
          8.2855e-02,  1.3362e-02, -4.8203e-01, -8.5186e-02, -1.9159e-01,
         -4.4156e-01, -2.3320e-01, -1.3855e-01, -4.2890e-01, -4.7737e-02,
          1.4357e-01, -3.4664e-03,  4.0581e-04, -3.2773e-02,  2.3726e-01,
          2.0219e-01, -3.4331e-02,  7.3752e-02,  1.8893e-01, -9.7091e-02,
          3.3286e-01, -4.4305e-02,  1.4189e-01, -1.0755e-01, -5.4365e-02,
          1.5545e-01, -3.3362e-02,  1.3396e-01, -1.2983e-01,  1.0973e-01,
         -4.7264e-02,  1.8980e-01,  5.6571e-02, -5.3206e-02, -3.6198e-02,
         -1.7835e-02, -4.6041e-02,  1.2339e-01, -1.4943e-01,  9.4895e-02,
          3.4410e-02, -1.3033e-01,  3.1539e-02, -2.4257e-02, -1.2350e-01,
          3.8421e-02, -1.9765e-01, -1.2310e-01, -3.9805e-02, -1.0478e-01,
          4.6128e-02, -1.0350e-01,  6.5576e-03, -2.6249e-01, -1.5862e-01,
         -1.6494e-02,  3.1682e-02, -3.8249e-03,  3.9028e-02,  1.0528e-01,
         -1.5455e-03]], device='cuda:0') tensor(0.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
881000 特征值优化 tensor(0.8652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2968,  1.6512, -0.5265, -1.0123,  0.7716, -0.0254,  2.0749,  0.5475,
          2.2128,  0.6482,  0.1587,  0.2045,  0.0969, -0.7114, -0.7072,  0.3561,
         -0.8002,  0.1679,  0.7012, -0.2808,  0.8934,  0.4710,  0.6086, -1.3937,
          0.9446, -0.4853, -0.0283, -0.2724, -0.5010, -0.1589,  0.1131, -0.1122,
          0.0262,  0.4915, -0.6314,  0.0314, -0.0709, -0.1550,  0.0708, -0.1236,
          0.5106,  0.1961,  0.0282,  0.0746, -0.1804,  0.2954,  0.0163,  0.0563,
         -0.2642,  0.3893,  0.2325, -0.2352, -0.1201,  0.4996, -0.0828,  0.1861,
         -0.2031,  0.2413,  0.3694, -0.3302,  0.3540, -0.1161, -0.3647,  0.2707,
          0.2232, -0.0449,  0.2502, -0.3270,  0.0878,  0.2252,  0.0671,  0.0958,
         -0.2408,  0.3613,  0.0303,  0.2719,  0.2130, -0.0991,  0.2286,  0.2272,
         -0.0306,  0.1080, -0.1596, -0.0721, -0.2945, -0.2355, -0.1566,  0.0626,
          0.0116,  0.4007,  0.4897,  0.2276,  0.3579, -0.0493, -0.1459, -0.2212,
          0.7868, -0.4016,  0.1147, -0.5083,  0.1385, -0.0100, -0.4421, -0.1137,
         -0.1745, -0.4988, -0.3025, -0.1195, -0.4012, -0.0344,  0.1202, -0.0134,
          0.0116, -0.0224,  0.2504,  0.1627, -0.0361,  0.0742,  0.1873, -0.0899,
          0.3153, -0.0588,  0.1352, -0.1023, -0.0641,  0.1380, -0.0644,  0.1411,
         -0.1350,  0.1204, -0.0318,  0.1746,  0.0255, -0.0553, -0.0056, -0.0364,
         -0.0477,  0.1373, -0.1457,  0.0891,  0.0662, -0.1431,  0.0429,  0.0304,
         -0.1015,  0.0248, -0.1944, -0.1445, -0.0418, -0.1098,  0.0699, -0.1074,
          0.0056, -0.2776, -0.1680, -0.0729,  0.0510,  0.1087,  0.0519,  0.1206,
          0.0271]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
882000 特征值优化 tensor(0.8893, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2274e+00,  1.6509e+00, -5.9179e-01, -1.0091e+00,  9.1802e-01,
         -4.1110e-02,  2.0294e+00,  5.5554e-01,  2.2507e+00,  6.4951e-01,
          2.4248e-01,  1.9845e-01,  1.3578e-01, -7.8936e-01, -6.8943e-01,
          2.9925e-01, -8.4304e-01,  1.7052e-01,  7.2909e-01, -2.3657e-01,
          9.2728e-01,  4.7329e-01,  5.9796e-01, -1.4092e+00,  9.2913e-01,
         -4.9263e-01, -2.6295e-02, -2.3458e-01, -4.7343e-01, -1.3942e-01,
          1.2971e-01, -1.3357e-01,  4.7341e-02,  4.8744e-01, -5.9216e-01,
          2.6234e-02, -6.0828e-02, -1.7119e-01,  4.9140e-02, -1.2565e-01,
          5.0296e-01,  1.9427e-01,  2.5902e-02,  5.0306e-02, -2.0042e-01,
          3.0088e-01,  3.9372e-03,  2.8221e-02, -2.3018e-01,  3.7715e-01,
          2.6683e-01, -2.4283e-01, -7.4860e-02,  4.5149e-01, -8.6949e-02,
          1.8106e-01, -2.2761e-01,  2.4797e-01,  3.4656e-01, -3.5390e-01,
          3.3308e-01, -1.0110e-01, -3.4529e-01,  2.6005e-01,  2.3606e-01,
         -4.5073e-02,  2.6548e-01, -3.2706e-01,  9.6274e-02,  2.4654e-01,
          7.9473e-02,  1.0135e-01, -2.3099e-01,  3.4812e-01,  2.5955e-02,
          2.5364e-01,  2.2305e-01, -1.4268e-01,  1.9176e-01,  2.1879e-01,
         -6.3551e-02,  1.2919e-01, -1.3498e-01, -6.4143e-02, -2.8618e-01,
         -2.3236e-01, -1.4303e-01,  2.1832e-02,  2.9817e-02,  4.2810e-01,
          4.7046e-01,  2.5723e-01,  3.7884e-01,  1.1115e-02, -1.4086e-01,
         -2.0206e-01,  8.2157e-01, -4.0324e-01,  6.5784e-02, -5.6515e-01,
          5.8624e-02, -2.7071e-02, -4.3484e-01, -9.9428e-02, -1.7710e-01,
         -5.1695e-01, -2.9235e-01, -9.4057e-02, -4.2924e-01, -5.0633e-02,
          1.0293e-01, -1.1232e-02,  1.9158e-02, -1.3741e-02,  2.3935e-01,
          1.7327e-01, -4.4524e-02,  5.9574e-02,  1.8470e-01, -7.2138e-02,
          3.0824e-01, -5.5187e-02,  1.4840e-01, -1.1260e-01, -6.0732e-02,
          1.4411e-01, -7.4600e-02,  1.5338e-01, -1.3370e-01,  1.2084e-01,
         -2.3545e-02,  1.5235e-01,  4.7428e-02, -4.8025e-02, -3.2840e-02,
         -2.9203e-02, -6.5534e-02,  1.6182e-01, -1.2985e-01,  9.7794e-02,
          8.4970e-02, -1.4369e-01, -2.1025e-04,  5.5129e-02, -1.0739e-01,
         -6.0244e-03, -1.7858e-01, -1.5454e-01, -4.5849e-02, -1.1129e-01,
          7.2432e-02, -1.0136e-01,  2.0362e-02, -2.8326e-01, -1.7577e-01,
         -5.9935e-02,  7.3393e-02,  1.6081e-01,  6.8885e-02,  1.4909e-01,
          5.2089e-02]], device='cuda:0') tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
883000 特征值优化 tensor(0.8812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1726e+00,  1.6468e+00, -6.0085e-01, -1.0112e+00,  9.7804e-01,
         -4.5035e-02,  2.0327e+00,  5.7265e-01,  2.2600e+00,  6.3570e-01,
          2.7194e-01,  1.6339e-01,  1.4062e-01, -8.3886e-01, -6.6161e-01,
          2.6902e-01, -8.6921e-01,  1.4809e-01,  7.3468e-01, -2.3344e-01,
          9.7063e-01,  4.6927e-01,  5.9254e-01, -1.4100e+00,  9.1647e-01,
         -4.9774e-01, -8.1003e-03, -2.2158e-01, -4.5587e-01, -1.3044e-01,
          1.5870e-01, -1.3636e-01,  4.0623e-02,  4.8214e-01, -5.7215e-01,
          2.4659e-02, -6.0906e-02, -1.7175e-01,  5.2009e-02, -1.3216e-01,
          5.0837e-01,  1.9664e-01,  2.4793e-02,  5.3263e-02, -2.0213e-01,
          2.9969e-01,  1.2098e-03,  2.1210e-02, -2.1281e-01,  3.7163e-01,
          2.5717e-01, -2.5535e-01, -5.5756e-02,  4.4651e-01, -8.2597e-02,
          1.8249e-01, -2.2921e-01,  2.5364e-01,  3.3298e-01, -3.4295e-01,
          3.3098e-01, -1.0210e-01, -3.3777e-01,  2.4603e-01,  2.4304e-01,
         -4.9614e-02,  2.7356e-01, -3.2707e-01,  9.0767e-02,  2.5997e-01,
          7.5537e-02,  9.6837e-02, -2.2176e-01,  3.4657e-01,  1.4253e-02,
          2.4519e-01,  2.2326e-01, -1.5584e-01,  1.8829e-01,  2.1610e-01,
         -6.6607e-02,  1.2689e-01, -1.3914e-01, -6.8164e-02, -2.8515e-01,
         -2.3568e-01, -1.5464e-01,  1.3427e-02,  7.3596e-03,  4.2842e-01,
          4.6189e-01,  2.5306e-01,  3.7239e-01,  2.3183e-02, -1.4124e-01,
         -2.0165e-01,  8.3882e-01, -4.0747e-01,  2.6533e-02, -6.0884e-01,
          4.5596e-02, -3.2255e-02, -4.3682e-01, -8.4532e-02, -1.8952e-01,
         -5.2403e-01, -2.7595e-01, -9.4097e-02, -4.2870e-01, -5.1945e-02,
          9.1855e-02, -1.2776e-02,  2.5401e-02, -1.5568e-02,  2.2793e-01,
          1.7688e-01, -4.4621e-02,  6.3198e-02,  1.7612e-01, -7.7550e-02,
          2.9951e-01, -5.2512e-02,  1.5708e-01, -1.1923e-01, -6.1901e-02,
          1.4930e-01, -6.3601e-02,  1.4344e-01, -1.3204e-01,  1.1926e-01,
         -2.0091e-02,  1.5053e-01,  5.7664e-02, -5.1106e-02, -3.7554e-02,
         -1.6788e-02, -6.1393e-02,  1.5677e-01, -1.3133e-01,  9.6371e-02,
          7.8296e-02, -1.5189e-01, -3.6092e-03,  6.1319e-02, -9.1239e-02,
         -1.4712e-02, -1.8750e-01, -1.5078e-01, -4.8766e-02, -1.0472e-01,
          7.1431e-02, -9.7553e-02,  1.9175e-02, -2.7813e-01, -1.9848e-01,
         -6.9673e-02,  6.0669e-02,  1.7323e-01,  7.8464e-02,  1.5320e-01,
          5.3525e-02]], device='cuda:0') tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
884000 特征值优化 tensor(0.8575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1647,  1.6431, -0.5883, -1.0119,  1.0224, -0.0596,  2.0422,  0.5812,
          2.2854,  0.6128,  0.3111,  0.1683,  0.1662, -0.8728, -0.6399,  0.2152,
         -0.9119,  0.1392,  0.7397, -0.2201,  0.9900,  0.4574,  0.6029, -1.4100,
          0.8928, -0.5050, -0.0074, -0.2177, -0.4388, -0.1375,  0.1617, -0.1508,
          0.0404,  0.4748, -0.5635,  0.0258, -0.0626, -0.1922,  0.0428, -0.1279,
          0.5174,  0.1974,  0.0253,  0.0623, -0.2051,  0.2919, -0.0143,  0.0128,
         -0.1862,  0.3753,  0.2617, -0.2387, -0.0558,  0.4367, -0.0903,  0.1861,
         -0.2465,  0.2448,  0.3165, -0.3483,  0.3365, -0.0977, -0.3274,  0.2268,
          0.2574, -0.0575,  0.2565, -0.3175,  0.0963,  0.2567,  0.0887,  0.0945,
         -0.2266,  0.3377,  0.0056,  0.2470,  0.2130, -0.1574,  0.1788,  0.2078,
         -0.0776,  0.1406, -0.1269, -0.0530, -0.2974, -0.2168, -0.1535, -0.0098,
          0.0114,  0.4416,  0.4595,  0.2595,  0.3862,  0.0342, -0.1461, -0.2039,
          0.8432, -0.3998,  0.0289, -0.6242,  0.0320, -0.0289, -0.4467, -0.0696,
         -0.1938, -0.5243, -0.2874, -0.0874, -0.4244, -0.0553,  0.0880, -0.0161,
          0.0075,  0.0053,  0.2392,  0.1727, -0.0419,  0.0582,  0.1745, -0.0895,
          0.3037, -0.0537,  0.1679, -0.1321, -0.0789,  0.1457, -0.0552,  0.1368,
         -0.1344,  0.1194, -0.0032,  0.1532,  0.0534, -0.0584, -0.0415, -0.0217,
         -0.0625,  0.1789, -0.1283,  0.0905,  0.0717, -0.1476, -0.0112,  0.0586,
         -0.0870, -0.0152, -0.2067, -0.1572, -0.0626, -0.1023,  0.0797, -0.0798,
          0.0201, -0.2612, -0.1927, -0.0717,  0.0609,  0.1804,  0.0816,  0.1727,
          0.0609]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
885000 特征值优化 tensor(0.8701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1431e+00,  1.6230e+00, -6.2468e-01, -1.0122e+00,  9.8656e-01,
         -4.6960e-02,  2.0521e+00,  5.8672e-01,  2.3199e+00,  5.9134e-01,
          3.2235e-01,  1.4731e-01,  1.5055e-01, -8.7820e-01, -6.4102e-01,
          2.0683e-01, -9.5369e-01,  1.3908e-01,  7.3701e-01, -2.3251e-01,
          1.0055e+00,  4.3856e-01,  6.3315e-01, -1.3958e+00,  8.9905e-01,
         -4.9400e-01,  1.4108e-03, -2.1284e-01, -4.2392e-01, -1.2908e-01,
          1.6983e-01, -1.3099e-01,  5.5820e-02,  4.4859e-01, -5.5678e-01,
          3.4703e-02, -5.3560e-02, -1.9108e-01,  7.5747e-02, -1.1720e-01,
          4.9618e-01,  1.9736e-01,  2.6527e-02,  3.9936e-02, -1.9366e-01,
          2.8301e-01, -2.3525e-02,  1.2797e-02, -1.6806e-01,  3.6806e-01,
          2.5393e-01, -2.2564e-01, -5.8845e-02,  4.3947e-01, -9.9775e-02,
          1.7534e-01, -2.5367e-01,  2.5482e-01,  3.1603e-01, -3.4903e-01,
          3.4749e-01, -1.2668e-01, -3.2123e-01,  2.2227e-01,  2.5500e-01,
         -6.6137e-02,  2.7392e-01, -3.0609e-01,  8.4636e-02,  2.5510e-01,
          9.8928e-02,  9.3276e-02, -2.5019e-01,  3.3108e-01, -8.3041e-03,
          2.3992e-01,  2.1088e-01, -1.5207e-01,  1.8749e-01,  2.2210e-01,
         -7.6577e-02,  1.3792e-01, -1.2850e-01, -6.0670e-02, -2.8574e-01,
         -2.1310e-01, -1.7332e-01, -1.6833e-02,  4.0717e-02,  4.4379e-01,
          4.6160e-01,  2.3718e-01,  3.5531e-01,  2.3579e-02, -1.3850e-01,
         -1.9309e-01,  8.4970e-01, -4.0902e-01,  5.4393e-03, -6.5566e-01,
          5.2962e-02, -1.6063e-02, -4.3001e-01, -5.8150e-02, -1.9100e-01,
         -5.0171e-01, -2.7926e-01, -1.1524e-01, -4.0778e-01, -3.5638e-02,
          7.3716e-02, -2.5688e-02, -6.8871e-04,  1.2400e-02,  2.2290e-01,
          1.6259e-01, -3.8635e-02,  5.4382e-02,  1.8554e-01, -1.0483e-01,
          2.9508e-01, -6.2732e-02,  1.7608e-01, -1.3366e-01, -1.0571e-01,
          1.4427e-01, -4.7503e-02,  1.1474e-01, -1.3711e-01,  1.3542e-01,
         -9.3567e-04,  1.6815e-01,  6.0890e-02, -7.5917e-02, -3.5547e-02,
         -5.0748e-03, -5.5593e-02,  1.6760e-01, -1.3787e-01,  7.6838e-02,
          7.5672e-02, -1.3209e-01, -2.0638e-03,  6.9018e-02, -6.5555e-02,
         -2.6471e-02, -2.1535e-01, -1.4760e-01, -5.1177e-02, -1.0420e-01,
          7.3005e-02, -6.4059e-02,  4.2734e-02, -2.6734e-01, -1.9369e-01,
         -8.6088e-02,  6.0895e-02,  2.0330e-01,  6.8950e-02,  1.7720e-01,
          5.3688e-02]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
886000 特征值优化 tensor(0.8723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1431e+00,  1.6268e+00, -6.4661e-01, -1.0119e+00,  9.9541e-01,
         -6.4653e-02,  2.0614e+00,  5.9348e-01,  2.3426e+00,  5.7735e-01,
          3.2339e-01,  1.4788e-01,  1.5365e-01, -8.8818e-01, -6.6353e-01,
          2.1190e-01, -9.8196e-01,  1.4935e-01,  7.5428e-01, -2.2747e-01,
          1.0356e+00,  4.1772e-01,  6.6400e-01, -1.3697e+00,  8.8633e-01,
         -4.9934e-01,  2.6204e-03, -2.2556e-01, -4.2092e-01, -1.2521e-01,
          1.6481e-01, -1.1783e-01,  5.7644e-02,  4.4684e-01, -5.4840e-01,
          4.0459e-02, -4.4534e-02, -1.7928e-01,  7.7439e-02, -1.2889e-01,
          4.9177e-01,  1.9722e-01,  2.7932e-02,  3.9577e-02, -2.0019e-01,
          2.7187e-01, -4.7307e-02, -4.0420e-04, -1.6263e-01,  3.7606e-01,
          2.6134e-01, -2.2756e-01, -4.8036e-02,  4.3392e-01, -1.0911e-01,
          1.6666e-01, -2.7393e-01,  2.6534e-01,  2.9271e-01, -3.6263e-01,
          3.4879e-01, -1.4263e-01, -3.1230e-01,  2.1960e-01,  2.4681e-01,
         -6.7063e-02,  2.8838e-01, -2.8122e-01,  8.4772e-02,  2.4639e-01,
          9.3546e-02,  8.6178e-02, -2.6231e-01,  3.1575e-01, -2.5295e-02,
          2.4142e-01,  2.0396e-01, -1.5522e-01,  1.7807e-01,  2.2165e-01,
         -7.7162e-02,  1.3911e-01, -1.3262e-01, -5.6801e-02, -2.8661e-01,
         -2.0263e-01, -1.6744e-01, -2.8473e-02,  5.6591e-02,  4.2235e-01,
          4.5558e-01,  2.3817e-01,  3.4777e-01,  1.1972e-02, -1.3712e-01,
         -1.8917e-01,  8.5839e-01, -4.2272e-01, -8.7694e-03, -6.4969e-01,
          3.9055e-02, -8.5565e-03, -4.0988e-01, -5.3958e-02, -1.8537e-01,
         -4.8228e-01, -2.7521e-01, -1.1957e-01, -4.2532e-01, -2.2804e-02,
          6.1369e-02, -1.8389e-02, -4.3904e-03,  1.7928e-02,  2.2122e-01,
          1.5562e-01, -3.2924e-02,  6.1953e-02,  1.6386e-01, -1.0229e-01,
          2.9331e-01, -6.5283e-02,  1.8916e-01, -1.2871e-01, -1.2079e-01,
          1.4003e-01, -2.9863e-02,  1.0182e-01, -1.4430e-01,  1.4292e-01,
         -8.2386e-03,  1.7583e-01,  5.6635e-02, -8.6245e-02, -2.5688e-02,
         -8.6200e-03, -5.5826e-02,  1.5158e-01, -1.3956e-01,  8.3797e-02,
          8.1432e-02, -1.1855e-01,  8.4378e-03,  6.5323e-02, -4.3102e-02,
         -1.6854e-02, -2.1413e-01, -1.5319e-01, -4.7845e-02, -1.0090e-01,
          8.0726e-02, -5.6401e-02,  4.9294e-02, -2.5984e-01, -1.8790e-01,
         -8.2284e-02,  6.5608e-02,  2.0625e-01,  6.4023e-02,  1.7151e-01,
          4.0433e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
887000 特征值优化 tensor(0.8564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1606e+00,  1.6123e+00, -6.7411e-01, -1.0093e+00,  1.0128e+00,
         -4.4541e-02,  2.0644e+00,  6.0673e-01,  2.3677e+00,  5.6555e-01,
          3.2803e-01,  1.4527e-01,  1.6747e-01, -8.7506e-01, -6.4893e-01,
          2.2919e-01, -9.7831e-01,  1.7468e-01,  7.6714e-01, -2.4112e-01,
          1.0330e+00,  4.1909e-01,  6.8874e-01, -1.3712e+00,  8.7568e-01,
         -5.0467e-01,  1.2013e-02, -2.3997e-01, -3.9794e-01, -1.2339e-01,
          1.5904e-01, -1.0239e-01,  4.2667e-02,  4.3293e-01, -5.3965e-01,
          4.9212e-02, -4.8701e-02, -1.8802e-01,  8.8236e-02, -1.2225e-01,
          4.9086e-01,  1.9586e-01,  2.8843e-02,  3.9385e-02, -2.0427e-01,
          2.7200e-01, -5.0527e-02,  4.9678e-04, -1.6824e-01,  3.7820e-01,
          2.6509e-01, -2.3960e-01, -5.0599e-02,  4.2470e-01, -1.1167e-01,
          1.7074e-01, -2.5653e-01,  2.5936e-01,  2.8081e-01, -3.7698e-01,
          3.7391e-01, -1.5738e-01, -2.9809e-01,  2.1648e-01,  2.3400e-01,
         -5.6288e-02,  2.8810e-01, -2.6190e-01,  9.6309e-02,  2.4121e-01,
          9.8701e-02,  8.4925e-02, -2.6914e-01,  3.0731e-01, -2.3090e-02,
          2.2641e-01,  2.1606e-01, -1.5460e-01,  1.7230e-01,  2.2814e-01,
         -7.1954e-02,  1.3953e-01, -1.3642e-01, -5.0160e-02, -2.9583e-01,
         -1.9212e-01, -1.8593e-01, -3.1871e-02,  5.0403e-02,  4.1905e-01,
          4.7529e-01,  2.4466e-01,  3.4535e-01,  1.4497e-02, -1.4231e-01,
         -1.8458e-01,  8.6299e-01, -4.1851e-01, -4.5731e-02, -6.6684e-01,
          3.6053e-02, -3.2489e-03, -3.7944e-01, -6.5665e-02, -1.7355e-01,
         -4.9204e-01, -2.6124e-01, -1.4494e-01, -4.5650e-01, -1.1218e-02,
          4.6455e-02, -1.8267e-02, -6.0979e-03,  4.2820e-03,  2.2489e-01,
          1.5209e-01, -4.6793e-02,  7.6561e-02,  1.6393e-01, -1.1026e-01,
          2.8637e-01, -5.2306e-02,  1.9396e-01, -1.2876e-01, -1.2406e-01,
          1.4392e-01, -1.8810e-02,  9.3561e-02, -1.5861e-01,  1.3803e-01,
         -1.6207e-02,  1.8489e-01,  5.5717e-02, -9.4137e-02, -1.6802e-02,
         -7.0970e-03, -4.5102e-02,  1.5399e-01, -1.5293e-01,  9.5220e-02,
          7.8772e-02, -1.1689e-01,  2.5614e-02,  6.6573e-02, -2.1701e-02,
         -7.5235e-03, -2.1603e-01, -1.5296e-01, -4.1140e-02, -1.0449e-01,
          8.8007e-02, -5.0210e-02,  4.7770e-02, -2.5338e-01, -2.0700e-01,
         -7.5971e-02,  5.9449e-02,  2.1337e-01,  5.5697e-02,  1.8428e-01,
          1.8104e-02]], device='cuda:0') tensor(0.2157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
888000 特征值优化 tensor(0.8629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1661e+00,  1.6115e+00, -6.8635e-01, -1.0103e+00,  1.0068e+00,
         -4.9825e-02,  2.0481e+00,  6.0307e-01,  2.3666e+00,  5.7254e-01,
          3.3864e-01,  1.2169e-01,  1.9369e-01, -8.8392e-01, -6.6363e-01,
          2.2978e-01, -9.9077e-01,  1.8909e-01,  7.7322e-01, -2.3247e-01,
          1.0492e+00,  4.1700e-01,  6.9932e-01, -1.3782e+00,  8.6293e-01,
         -5.1193e-01,  1.1170e-02, -2.4955e-01, -4.1105e-01, -1.2232e-01,
          1.5467e-01, -9.7331e-02,  4.0592e-02,  4.1771e-01, -5.3349e-01,
          5.7690e-02, -4.6914e-02, -1.8801e-01,  8.7093e-02, -1.4153e-01,
          4.8660e-01,  1.9643e-01,  2.5701e-02,  3.1797e-02, -2.0762e-01,
          2.7488e-01, -6.1817e-02, -1.5194e-02, -1.6671e-01,  3.8419e-01,
          2.6866e-01, -2.4455e-01, -4.2391e-02,  4.1675e-01, -1.0408e-01,
          1.5642e-01, -2.7462e-01,  2.5171e-01,  2.7842e-01, -3.8838e-01,
          3.6357e-01, -1.6805e-01, -2.8887e-01,  2.2031e-01,  2.3006e-01,
         -4.5106e-02,  2.9860e-01, -2.4559e-01,  1.0660e-01,  2.4242e-01,
          1.0366e-01,  8.9290e-02, -2.7646e-01,  3.0076e-01, -3.1490e-02,
          2.2835e-01,  2.0643e-01, -1.6137e-01,  1.5101e-01,  2.3081e-01,
         -7.0569e-02,  1.3813e-01, -1.3572e-01, -4.1446e-02, -2.8720e-01,
         -1.7917e-01, -1.6742e-01, -4.0077e-02,  6.7490e-02,  4.2104e-01,
          4.6524e-01,  2.3377e-01,  3.5109e-01,  1.3286e-02, -1.4203e-01,
         -1.7677e-01,  8.6208e-01, -4.2419e-01, -4.8438e-02, -6.5900e-01,
          2.4010e-02, -6.1580e-03, -3.6123e-01, -5.9273e-02, -1.8733e-01,
         -4.6697e-01, -2.6027e-01, -1.4133e-01, -4.6113e-01, -7.8446e-03,
          3.9349e-02, -2.8937e-02,  5.5306e-04,  1.4964e-02,  2.3561e-01,
          1.4595e-01, -4.8951e-02,  7.4336e-02,  1.4686e-01, -1.0075e-01,
          2.9740e-01, -5.3375e-02,  1.9493e-01, -1.3136e-01, -1.2805e-01,
          1.4252e-01, -1.6198e-02,  1.0383e-01, -1.7355e-01,  1.3555e-01,
         -2.7237e-02,  1.8226e-01,  5.7123e-02, -9.3042e-02, -1.4144e-02,
         -1.4234e-02, -5.1365e-02,  1.5608e-01, -1.4942e-01,  9.7742e-02,
          8.4089e-02, -1.0944e-01,  2.3092e-02,  7.6970e-02, -1.3799e-02,
          3.6616e-03, -2.0649e-01, -1.6064e-01, -4.7796e-02, -9.9924e-02,
          1.0086e-01, -4.5533e-02,  5.2566e-02, -2.3508e-01, -1.9215e-01,
         -7.5747e-02,  6.4705e-02,  2.0975e-01,  4.1974e-02,  1.8664e-01,
          2.8819e-02]], device='cuda:0') tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
889000 特征值优化 tensor(0.8519, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2108,  1.6121, -0.7000, -1.0115,  1.0175, -0.0456,  2.0260,  0.5928,
          2.3813,  0.5653,  0.3502,  0.0895,  0.2078, -0.8659, -0.6641,  0.2235,
         -0.9841,  0.1924,  0.7815, -0.2264,  1.0512,  0.4180,  0.7111, -1.3920,
          0.8550, -0.4966,  0.0196, -0.2551, -0.3955, -0.1237,  0.1347, -0.0953,
          0.0216,  0.4036, -0.5231,  0.0544, -0.0462, -0.2004,  0.0720, -0.1415,
          0.4984,  0.1990,  0.0214,  0.0381, -0.2065,  0.2786, -0.0868, -0.0175,
         -0.1544,  0.4001,  0.2870, -0.2509, -0.0415,  0.3993, -0.0951,  0.1501,
         -0.2740,  0.2635,  0.2458, -0.4015,  0.3798, -0.1777, -0.2892,  0.2439,
          0.2316, -0.0385,  0.2781, -0.2307,  0.1176,  0.2446,  0.1132,  0.0907,
         -0.2664,  0.3022, -0.0323,  0.2240,  0.2026, -0.1845,  0.1280,  0.2271,
         -0.0713,  0.1502, -0.1270, -0.0372, -0.2917, -0.1745, -0.1723, -0.0444,
          0.0934,  0.4518,  0.4760,  0.2418,  0.3628,  0.0389, -0.1511, -0.1722,
          0.8602, -0.4180, -0.0423, -0.6410, -0.0041, -0.0177, -0.3331, -0.0814,
         -0.1770, -0.4702, -0.2402, -0.1459, -0.4844, -0.0029,  0.0367, -0.0248,
         -0.0031,  0.0230,  0.2380,  0.1382, -0.0492,  0.0928,  0.1393, -0.0834,
          0.3055, -0.0521,  0.1981, -0.1372, -0.1240,  0.1337, -0.0143,  0.1213,
         -0.1795,  0.1200, -0.0293,  0.1744,  0.0498, -0.0852, -0.0128, -0.0093,
         -0.0598,  0.1655, -0.1497,  0.1100,  0.0886, -0.1108,  0.0192,  0.0661,
         -0.0131,  0.0119, -0.2105, -0.1719, -0.0550, -0.1028,  0.1102, -0.0422,
          0.0409, -0.2263, -0.2144, -0.0451,  0.0705,  0.1979,  0.0261,  0.2084,
          0.0119]], device='cuda:0') tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
890000 特征值优化 tensor(0.8571, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1804,  1.6436, -0.7090, -1.0127,  0.9935, -0.0386,  1.9868,  0.5738,
          2.3680,  0.5758,  0.3627,  0.0571,  0.2186, -0.8614, -0.6768,  0.2295,
         -0.9799,  0.2218,  0.7955, -0.2318,  1.0422,  0.4410,  0.7146, -1.4183,
          0.8574, -0.4787,  0.0137, -0.2735, -0.3963, -0.1173,  0.1282, -0.0875,
          0.0146,  0.3914, -0.5108,  0.0534, -0.0476, -0.1982,  0.0830, -0.1493,
          0.5000,  0.1972,  0.0251,  0.0396, -0.2100,  0.2702, -0.1002, -0.0214,
         -0.1605,  0.4116,  0.2848, -0.2715, -0.0474,  0.3928, -0.0868,  0.1387,
         -0.2756,  0.2610,  0.2261, -0.3991,  0.3940, -0.1959, -0.2758,  0.2518,
          0.2261, -0.0358,  0.2704, -0.2277,  0.1200,  0.2554,  0.1222,  0.0913,
         -0.2656,  0.2914, -0.0426,  0.2191,  0.1953, -0.1935,  0.1201,  0.2204,
         -0.0539,  0.1480, -0.1407, -0.0358, -0.2854, -0.1759, -0.1581, -0.0388,
          0.1491,  0.4514,  0.4803,  0.2357,  0.3363,  0.0581, -0.1548, -0.1668,
          0.8637, -0.4289, -0.0456, -0.6208, -0.0236, -0.0084, -0.3289, -0.0843,
         -0.1708, -0.4730, -0.2607, -0.1625, -0.4981,  0.0064,  0.0286, -0.0450,
          0.0117,  0.0246,  0.2309,  0.1270, -0.0410,  0.1005,  0.1410, -0.0690,
          0.3104, -0.0449,  0.2019, -0.1458, -0.1209,  0.1323, -0.0117,  0.1207,
         -0.1901,  0.1059, -0.0251,  0.1741,  0.0423, -0.0864, -0.0272, -0.0224,
         -0.0678,  0.1614, -0.1525,  0.1035,  0.0835, -0.1049,  0.0180,  0.0611,
          0.0147,  0.0331, -0.2144, -0.1766, -0.0538, -0.1024,  0.1253, -0.0371,
          0.0382, -0.2200, -0.2048, -0.0315,  0.0724,  0.2074,  0.0259,  0.2058,
          0.0173]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
891000 特征值优化 tensor(0.8498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1873,  1.6701, -0.7085, -1.0104,  0.9504, -0.0613,  1.9446,  0.5710,
          2.3734,  0.5597,  0.3497,  0.0299,  0.2160, -0.8551, -0.6910,  0.2338,
         -0.9840,  0.2396,  0.8133, -0.2374,  1.0125,  0.4376,  0.7131, -1.4142,
          0.8656, -0.4922,  0.0055, -0.2537, -0.3972, -0.1211,  0.1225, -0.0784,
          0.0058,  0.3905, -0.5099,  0.0631, -0.0462, -0.1839,  0.0781, -0.1622,
          0.5049,  0.1970,  0.0217,  0.0469, -0.2063,  0.2554, -0.1307, -0.0401,
         -0.1820,  0.4129,  0.2769, -0.2722, -0.0385,  0.3910, -0.0965,  0.1227,
         -0.2911,  0.2873,  0.2151, -0.4013,  0.3973, -0.2090, -0.2581,  0.2438,
          0.2277, -0.0255,  0.2736, -0.2297,  0.1020,  0.2577,  0.1292,  0.0926,
         -0.2611,  0.2941, -0.0564,  0.2052,  0.1849, -0.1854,  0.1260,  0.2098,
         -0.0500,  0.1466, -0.1459, -0.0336, -0.2973, -0.1898, -0.1522, -0.0307,
          0.1582,  0.4435,  0.4852,  0.2114,  0.3542,  0.0588, -0.1649, -0.1633,
          0.8634, -0.4468, -0.0653, -0.6069, -0.0423, -0.0056, -0.3152, -0.0918,
         -0.1580, -0.4515, -0.2740, -0.1636, -0.4896,  0.0153,  0.0321, -0.0435,
          0.0156,  0.0431,  0.2298,  0.1262, -0.0314,  0.1232,  0.1141, -0.0514,
          0.3210, -0.0541,  0.2062, -0.1521, -0.1280,  0.1256, -0.0025,  0.1203,
         -0.1976,  0.1081, -0.0182,  0.1720,  0.0402, -0.0820, -0.0372, -0.0319,
         -0.0742,  0.1712, -0.1493,  0.1046,  0.0913, -0.0947,  0.0113,  0.0604,
          0.0193,  0.0382, -0.2279, -0.1813, -0.0667, -0.0953,  0.1287, -0.0431,
          0.0372, -0.2334, -0.2078, -0.0303,  0.0700,  0.2135,  0.0319,  0.1928,
          0.0186]], device='cuda:0') tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
892000 特征值优化 tensor(0.8523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2003e+00,  1.6815e+00, -7.0266e-01, -1.0110e+00,  9.3546e-01,
         -6.1335e-02,  1.9506e+00,  5.9302e-01,  2.3675e+00,  5.6044e-01,
          3.3245e-01,  2.7749e-02,  2.1848e-01, -8.6417e-01, -6.7720e-01,
          2.6297e-01, -9.7741e-01,  2.4471e-01,  8.3583e-01, -2.6864e-01,
          1.0090e+00,  4.5714e-01,  7.0539e-01, -1.4029e+00,  8.6772e-01,
         -4.9020e-01,  2.1097e-02, -2.9162e-01, -4.0938e-01, -1.2969e-01,
          1.3199e-01, -6.4672e-02, -1.9577e-03,  3.7123e-01, -4.9123e-01,
          7.5925e-02, -4.8755e-02, -1.7632e-01,  1.0814e-01, -1.6744e-01,
          4.9184e-01,  1.9500e-01,  2.3622e-02,  5.5015e-02, -2.0470e-01,
          2.3986e-01, -1.1617e-01, -3.3715e-02, -1.8990e-01,  3.9169e-01,
          2.6282e-01, -2.9163e-01, -6.0580e-02,  3.8936e-01, -1.0658e-01,
          1.2688e-01, -2.6611e-01,  2.6610e-01,  2.2587e-01, -3.9775e-01,
          4.0510e-01, -2.3433e-01, -2.5115e-01,  2.2480e-01,  2.0691e-01,
         -2.3893e-02,  2.8303e-01, -2.4369e-01,  9.0165e-02,  2.5224e-01,
          1.3600e-01,  8.9031e-02, -2.7440e-01,  2.8078e-01, -6.4614e-02,
          2.0198e-01,  2.0500e-01, -1.6841e-01,  1.3730e-01,  2.1864e-01,
         -3.0324e-02,  1.2841e-01, -1.6044e-01, -3.4782e-02, -2.8903e-01,
         -1.6331e-01, -1.5987e-01, -3.2784e-02,  1.6168e-01,  4.2511e-01,
          4.8959e-01,  2.0057e-01,  3.4464e-01,  5.2979e-02, -1.6014e-01,
         -1.6710e-01,  8.6894e-01, -4.2160e-01, -9.0893e-02, -6.2492e-01,
         -6.3316e-02, -1.3579e-03, -3.0163e-01, -9.5345e-02, -1.6634e-01,
         -4.5096e-01, -3.0638e-01, -1.7871e-01, -4.9597e-01,  2.1633e-02,
          1.0748e-02, -5.6104e-02,  1.7431e-02,  2.0791e-02,  2.2698e-01,
          1.2624e-01, -5.1212e-02,  1.1633e-01,  1.3512e-01, -6.1049e-02,
          3.0763e-01, -4.0479e-02,  2.1218e-01, -1.6415e-01, -1.2265e-01,
          1.2469e-01,  8.0302e-03,  1.1399e-01, -2.0166e-01,  1.1278e-01,
         -1.9991e-02,  1.7822e-01,  4.5934e-02, -9.6186e-02, -3.6215e-02,
         -3.2579e-03, -8.5822e-02,  1.5318e-01, -1.5935e-01,  8.7962e-02,
          6.7448e-02, -1.0629e-01,  3.3997e-02,  7.9110e-02,  5.1301e-02,
          4.7326e-02, -2.2711e-01, -1.6125e-01, -4.3170e-02, -1.1022e-01,
          1.1947e-01, -2.9547e-02,  4.2456e-02, -2.1537e-01, -2.0781e-01,
         -4.5881e-02,  5.4211e-02,  2.3385e-01,  4.2544e-02,  2.0917e-01,
          1.6020e-02]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
893000 特征值优化 tensor(0.8852, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1958,  1.6935, -0.6903, -1.0151,  0.9178, -0.0847,  1.9365,  0.5853,
          2.3626,  0.5688,  0.3317,  0.0187,  0.2116, -0.8646, -0.6889,  0.2606,
         -0.9833,  0.2487,  0.8339, -0.2727,  1.0138,  0.4485,  0.7198, -1.3935,
          0.8590, -0.4868,  0.0059, -0.2839, -0.4221, -0.1282,  0.1240, -0.0652,
          0.0078,  0.3764, -0.4802,  0.0853, -0.0531, -0.1764,  0.1078, -0.1633,
          0.4987,  0.1941,  0.0243,  0.0520, -0.2035,  0.2435, -0.1296, -0.0398,
         -0.1919,  0.3819,  0.2583, -0.2903, -0.0551,  0.3866, -0.1003,  0.1206,
         -0.2735,  0.2643,  0.2238, -0.3972,  0.4004, -0.2439, -0.2508,  0.2315,
          0.2047, -0.0212,  0.2891, -0.2323,  0.0974,  0.2565,  0.1347,  0.0900,
         -0.2764,  0.2799, -0.0570,  0.2031,  0.1984, -0.1770,  0.1346,  0.2068,
         -0.0286,  0.1368, -0.1611, -0.0419, -0.2843, -0.1708, -0.1425, -0.0283,
          0.1728,  0.4230,  0.4974,  0.1900,  0.3466,  0.0652, -0.1530, -0.1723,
          0.8711, -0.4357, -0.0789, -0.6167, -0.0634, -0.0045, -0.3075, -0.0880,
         -0.1682, -0.4360, -0.3194, -0.1743, -0.4777,  0.0188,  0.0148, -0.0514,
          0.0173,  0.0357,  0.2189,  0.1260, -0.0556,  0.1160,  0.1260, -0.0570,
          0.3103, -0.0448,  0.2098, -0.1617, -0.1250,  0.1215,  0.0065,  0.1142,
         -0.2016,  0.1164, -0.0215,  0.1780,  0.0435, -0.0987, -0.0342, -0.0064,
         -0.0912,  0.1578, -0.1450,  0.0876,  0.0628, -0.0932,  0.0232,  0.0727,
          0.0453,  0.0484, -0.2240, -0.1687, -0.0377, -0.1020,  0.1227, -0.0313,
          0.0440, -0.2209, -0.1928, -0.0411,  0.0638,  0.2279,  0.0265,  0.2025,
          0.0288]], device='cuda:0') tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
894000 特征值优化 tensor(0.8860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1867,  1.6994, -0.6876, -1.0123,  0.9212, -0.1082,  1.9409,  0.5803,
          2.3672,  0.5698,  0.3267,  0.0161,  0.2077, -0.8623, -0.6902,  0.2647,
         -0.9785,  0.2448,  0.8367, -0.2826,  1.0222,  0.4473,  0.7229, -1.3871,
          0.8570, -0.4811,  0.0087, -0.2871, -0.4147, -0.1289,  0.1235, -0.0704,
          0.0053,  0.3787, -0.4777,  0.1027, -0.0480, -0.1843,  0.1172, -0.1602,
          0.4950,  0.1933,  0.0266,  0.0540, -0.2001,  0.2349, -0.1338, -0.0397,
         -0.1977,  0.3778,  0.2425, -0.2924, -0.0609,  0.3888, -0.0953,  0.1119,
         -0.2735,  0.2699,  0.2243, -0.3998,  0.4056, -0.2474, -0.2431,  0.2366,
          0.1988, -0.0172,  0.2901, -0.2227,  0.0999,  0.2548,  0.1314,  0.0892,
         -0.2737,  0.2896, -0.0650,  0.2018,  0.1950, -0.1508,  0.1456,  0.2062,
         -0.0219,  0.1368, -0.1734, -0.0468, -0.2802, -0.1662, -0.1422, -0.0280,
          0.1700,  0.4101,  0.4925,  0.1960,  0.3596,  0.0607, -0.1524, -0.1746,
          0.8721, -0.4315, -0.0786, -0.6245, -0.0586, -0.0062, -0.3209, -0.0966,
         -0.1632, -0.4264, -0.3282, -0.1736, -0.4656,  0.0231,  0.0146, -0.0499,
          0.0250,  0.0417,  0.2186,  0.1272, -0.0562,  0.1180,  0.1235, -0.0510,
          0.3113, -0.0463,  0.2104, -0.1628, -0.1305,  0.1226,  0.0070,  0.1130,
         -0.1954,  0.1173, -0.0244,  0.1798,  0.0470, -0.0977, -0.0322, -0.0120,
         -0.0884,  0.1648, -0.1486,  0.0865,  0.0650, -0.0961,  0.0246,  0.0776,
          0.0459,  0.0495, -0.2356, -0.1657, -0.0360, -0.1121,  0.1339, -0.0254,
          0.0455, -0.2162, -0.1949, -0.0417,  0.0521,  0.2286,  0.0191,  0.2009,
          0.0323]], device='cuda:0') tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
895000 特征值优化 tensor(0.8540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2075e+00,  1.7038e+00, -6.6613e-01, -1.0131e+00,  9.1731e-01,
         -1.5567e-01,  1.9618e+00,  5.7280e-01,  2.3758e+00,  5.6342e-01,
          3.3285e-01,  6.8862e-03,  2.2356e-01, -8.4980e-01, -6.8581e-01,
          2.4813e-01, -9.8312e-01,  2.3651e-01,  8.3389e-01, -2.7716e-01,
          1.0227e+00,  4.3085e-01,  7.1808e-01, -1.3849e+00,  8.5048e-01,
         -4.6931e-01,  1.0046e-03, -2.9549e-01, -4.1328e-01, -1.2393e-01,
          1.1456e-01, -7.9236e-02, -1.7641e-03,  3.8838e-01, -4.8424e-01,
          1.1247e-01, -4.2665e-02, -1.8027e-01,  1.1609e-01, -1.5381e-01,
          4.9771e-01,  1.9571e-01,  2.5189e-02,  5.0269e-02, -1.9997e-01,
          2.4197e-01, -1.4357e-01, -4.3716e-02, -1.8878e-01,  3.8286e-01,
          2.4302e-01, -2.9030e-01, -6.2539e-02,  3.8302e-01, -9.1110e-02,
          1.0573e-01, -2.7143e-01,  2.7263e-01,  2.1766e-01, -4.1465e-01,
          4.1550e-01, -2.3846e-01, -2.4146e-01,  2.6125e-01,  2.0150e-01,
         -1.5647e-02,  2.7401e-01, -2.1389e-01,  1.0784e-01,  2.4211e-01,
          1.2788e-01,  8.7438e-02, -2.6379e-01,  3.0278e-01, -5.9723e-02,
          2.0524e-01,  1.9425e-01, -1.4793e-01,  1.3330e-01,  2.0903e-01,
         -3.1205e-02,  1.4261e-01, -1.6761e-01, -4.2239e-02, -2.8132e-01,
         -1.5322e-01, -1.4508e-01, -2.9196e-02,  1.7648e-01,  4.2573e-01,
          5.0522e-01,  2.0711e-01,  3.6773e-01,  5.9518e-02, -1.5724e-01,
         -1.7763e-01,  8.6686e-01, -4.2508e-01, -5.0309e-02, -6.0281e-01,
         -5.5332e-02, -1.7685e-02, -3.3122e-01, -1.1459e-01, -1.5746e-01,
         -4.1742e-01, -3.2707e-01, -1.6155e-01, -4.5582e-01,  2.5293e-02,
          2.5008e-02, -2.9163e-02,  1.2009e-02,  6.2832e-02,  2.2073e-01,
          1.2280e-01, -5.8522e-02,  1.2003e-01,  1.1945e-01, -3.8101e-02,
          3.1748e-01, -4.5891e-02,  2.1602e-01, -1.5905e-01, -1.2980e-01,
          1.2011e-01,  1.3882e-02,  1.2810e-01, -1.9113e-01,  1.1780e-01,
         -2.8433e-02,  1.7402e-01,  3.9741e-02, -9.1123e-02, -3.2305e-02,
         -1.5484e-02, -8.1414e-02,  1.8827e-01, -1.4685e-01,  9.3644e-02,
          7.4510e-02, -9.6543e-02,  2.1368e-02,  7.1623e-02,  2.7873e-02,
          5.2395e-02, -2.4114e-01, -1.7876e-01, -4.4675e-02, -1.1585e-01,
          1.4822e-01, -2.8362e-02,  4.3963e-02, -2.1081e-01, -1.9555e-01,
         -2.8410e-02,  5.2328e-02,  2.1132e-01,  9.4368e-03,  2.1959e-01,
          2.0381e-02]], device='cuda:0') tensor(0.2115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
896000 特征值优化 tensor(0.8559, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2044e+00,  1.7193e+00, -6.6256e-01, -1.0091e+00,  8.8190e-01,
         -1.7337e-01,  1.9554e+00,  5.7451e-01,  2.3915e+00,  5.6918e-01,
          3.4351e-01, -1.0112e-03,  2.1370e-01, -8.5517e-01, -6.8293e-01,
          2.4145e-01, -9.8151e-01,  2.3754e-01,  8.3615e-01, -2.7222e-01,
          1.0162e+00,  4.3883e-01,  7.3328e-01, -1.3806e+00,  8.5120e-01,
         -4.6975e-01, -6.9766e-03, -2.9444e-01, -4.4262e-01, -1.1330e-01,
          1.0953e-01, -7.2945e-02,  7.3968e-04,  4.0780e-01, -4.8008e-01,
          1.1701e-01, -4.6220e-02, -1.6891e-01,  1.2061e-01, -1.6162e-01,
          5.0209e-01,  1.9873e-01,  2.5043e-02,  5.2349e-02, -1.9838e-01,
          2.4630e-01, -1.4673e-01, -5.3378e-02, -2.0067e-01,  3.7359e-01,
          2.3023e-01, -2.8577e-01, -7.1404e-02,  3.8117e-01, -9.2698e-02,
          9.5544e-02, -2.8193e-01,  2.7540e-01,  2.1760e-01, -4.1175e-01,
          4.1885e-01, -2.4481e-01, -2.3225e-01,  2.6867e-01,  2.0583e-01,
         -1.3501e-02,  2.7347e-01, -2.0696e-01,  1.1113e-01,  2.3756e-01,
          1.3615e-01,  1.0158e-01, -2.6362e-01,  3.0021e-01, -6.1726e-02,
          1.9844e-01,  1.8049e-01, -1.4936e-01,  1.3822e-01,  2.0967e-01,
         -3.0391e-02,  1.4259e-01, -1.6963e-01, -4.0230e-02, -2.7764e-01,
         -1.5422e-01, -1.2463e-01, -2.7901e-02,  1.6709e-01,  4.1106e-01,
          5.0458e-01,  1.9372e-01,  3.5972e-01,  5.9204e-02, -1.6032e-01,
         -1.7953e-01,  8.6413e-01, -4.3768e-01, -3.9104e-02, -5.8975e-01,
         -5.4274e-02, -1.9460e-02, -3.4538e-01, -1.0804e-01, -1.5915e-01,
         -4.1817e-01, -3.4500e-01, -1.6140e-01, -4.3226e-01,  2.3031e-02,
          2.6080e-02, -2.6418e-02,  1.9660e-02,  6.7923e-02,  2.2168e-01,
          1.2846e-01, -5.4830e-02,  1.1405e-01,  1.0810e-01, -3.7033e-02,
          3.2425e-01, -5.3580e-02,  2.1234e-01, -1.5494e-01, -1.3342e-01,
          1.1939e-01,  1.4697e-02,  1.2242e-01, -1.8645e-01,  1.1716e-01,
         -2.7311e-02,  1.6902e-01,  3.2448e-02, -8.9540e-02, -3.9124e-02,
         -2.8375e-02, -7.8977e-02,  1.8690e-01, -1.4686e-01,  9.3407e-02,
          7.8176e-02, -8.6008e-02,  2.5922e-02,  6.1964e-02,  3.3467e-02,
          5.8833e-02, -2.4196e-01, -1.7301e-01, -4.3566e-02, -1.1436e-01,
          1.5193e-01, -2.7076e-02,  4.4129e-02, -2.1689e-01, -1.7560e-01,
         -2.6231e-02,  6.0415e-02,  2.1348e-01,  1.2523e-02,  2.1297e-01,
          2.8925e-02]], device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
897000 特征值优化 tensor(0.8538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1986e+00,  1.7267e+00, -6.5477e-01, -1.0113e+00,  8.7829e-01,
         -1.6956e-01,  1.9631e+00,  5.6687e-01,  2.3825e+00,  5.8659e-01,
          3.3371e-01,  2.1576e-02,  2.1202e-01, -8.3541e-01, -6.8205e-01,
          2.5720e-01, -9.8132e-01,  2.4263e-01,  8.4348e-01, -2.7659e-01,
          1.0112e+00,  4.4038e-01,  7.5758e-01, -1.3845e+00,  8.6450e-01,
         -4.7392e-01,  4.1114e-04, -2.8677e-01, -4.4754e-01, -1.2476e-01,
          1.0909e-01, -5.9796e-02,  2.0801e-02,  4.1642e-01, -4.7054e-01,
          1.2679e-01, -4.9960e-02, -1.4926e-01,  1.4363e-01, -1.6166e-01,
          4.8792e-01,  1.9511e-01,  2.6291e-02,  6.4272e-02, -2.0868e-01,
          2.4086e-01, -1.3143e-01, -4.0966e-02, -1.9804e-01,  3.5481e-01,
          2.2310e-01, -2.9098e-01, -9.4041e-02,  3.6939e-01, -9.7618e-02,
          9.7981e-02, -2.6455e-01,  2.8997e-01,  2.4037e-01, -4.0979e-01,
          4.2340e-01, -2.5755e-01, -2.1754e-01,  2.4536e-01,  1.8545e-01,
         -3.7833e-03,  2.8577e-01, -2.2012e-01,  1.0029e-01,  2.3292e-01,
          1.3758e-01,  1.0676e-01, -2.7710e-01,  2.8689e-01, -6.7307e-02,
          1.9597e-01,  1.8866e-01, -1.3017e-01,  1.5485e-01,  2.0840e-01,
         -1.2411e-02,  1.2930e-01, -1.8259e-01, -4.6462e-02, -2.7958e-01,
         -1.6994e-01, -1.4095e-01, -1.5963e-02,  1.5309e-01,  3.8232e-01,
          5.0226e-01,  1.8896e-01,  3.4207e-01,  5.3593e-02, -1.5293e-01,
         -1.8274e-01,  8.6746e-01, -4.4347e-01, -4.7151e-02, -6.0648e-01,
         -4.0149e-02, -1.1029e-02, -3.5916e-01, -1.1216e-01, -1.4780e-01,
         -4.2963e-01, -3.3491e-01, -1.7509e-01, -4.2565e-01,  2.8932e-02,
          1.2756e-02, -3.7047e-02,  3.4101e-02,  6.0651e-02,  2.0962e-01,
          1.2232e-01, -5.8110e-02,  1.3250e-01,  1.1832e-01, -5.3293e-02,
          3.1321e-01, -4.4243e-02,  2.1474e-01, -1.5642e-01, -1.3919e-01,
          1.2871e-01,  1.3642e-02,  1.0619e-01, -1.8472e-01,  1.1427e-01,
         -2.3131e-02,  1.7834e-01,  4.0425e-02, -9.5777e-02, -3.9726e-02,
         -2.6278e-02, -8.7709e-02,  1.7176e-01, -1.5102e-01,  9.3435e-02,
          7.6348e-02, -9.5083e-02,  3.9292e-02,  7.6860e-02,  5.0522e-02,
          6.4298e-02, -2.3889e-01, -1.6573e-01, -2.7290e-02, -1.1716e-01,
          1.3650e-01, -2.4849e-02,  4.6796e-02, -2.3081e-01, -1.8574e-01,
         -4.6590e-02,  4.8856e-02,  2.2343e-01,  1.9893e-02,  1.9585e-01,
          1.2039e-02]], device='cuda:0') tensor(0.2011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
898000 特征值优化 tensor(0.8558, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1711e+00,  1.7418e+00, -6.6068e-01, -1.0109e+00,  8.7719e-01,
         -1.7717e-01,  1.9689e+00,  5.8095e-01,  2.3957e+00,  5.8519e-01,
          3.4224e-01,  9.8202e-03,  2.1011e-01, -8.4848e-01, -6.5998e-01,
          2.6491e-01, -9.9024e-01,  2.3513e-01,  8.4632e-01, -2.7114e-01,
          1.0101e+00,  4.4099e-01,  7.5359e-01, -1.3822e+00,  8.6160e-01,
         -4.6402e-01,  3.2508e-03, -2.9752e-01, -4.4959e-01, -1.2219e-01,
          1.0208e-01, -6.9262e-02, -1.1675e-05,  4.1579e-01, -4.7002e-01,
          1.2903e-01, -5.1115e-02, -1.5847e-01,  1.5595e-01, -1.4877e-01,
          4.8542e-01,  1.9525e-01,  2.7783e-02,  5.8521e-02, -2.0685e-01,
          2.3279e-01, -1.3847e-01, -5.0317e-02, -1.9682e-01,  3.5216e-01,
          2.2503e-01, -2.9109e-01, -9.2423e-02,  3.7176e-01, -9.7732e-02,
          9.9691e-02, -2.5597e-01,  2.7172e-01,  2.4534e-01, -4.1008e-01,
          4.3165e-01, -2.6145e-01, -1.9983e-01,  2.4953e-01,  1.8676e-01,
         -4.9713e-03,  2.8368e-01, -2.0989e-01,  1.0270e-01,  2.3036e-01,
          1.4136e-01,  1.0658e-01, -2.7851e-01,  2.9556e-01, -6.5490e-02,
          1.9151e-01,  1.9288e-01, -1.2733e-01,  1.5829e-01,  2.0399e-01,
         -1.4124e-02,  1.3579e-01, -1.7705e-01, -4.3818e-02, -2.8319e-01,
         -1.4649e-01, -1.3806e-01, -1.0170e-02,  1.4920e-01,  3.8888e-01,
          5.0918e-01,  1.9706e-01,  3.4962e-01,  5.6746e-02, -1.5244e-01,
         -1.8269e-01,  8.6349e-01, -4.3916e-01, -6.0295e-02, -6.0785e-01,
         -4.3675e-02, -1.1561e-02, -3.8072e-01, -1.1280e-01, -1.5447e-01,
         -4.3703e-01, -3.5954e-01, -1.7458e-01, -4.2116e-01,  2.9181e-02,
          9.9286e-03, -3.3165e-02,  2.9052e-02,  5.6549e-02,  2.1090e-01,
          1.2470e-01, -6.9879e-02,  1.2562e-01,  1.2360e-01, -4.4983e-02,
          3.1501e-01, -4.3407e-02,  2.1478e-01, -1.5977e-01, -1.3648e-01,
          1.1713e-01,  1.0536e-02,  1.0928e-01, -1.7857e-01,  1.1512e-01,
         -1.3685e-02,  1.8079e-01,  4.1330e-02, -9.8873e-02, -4.4080e-02,
         -1.4018e-02, -9.5924e-02,  1.7453e-01, -1.5355e-01,  7.9066e-02,
          7.5889e-02, -9.3590e-02,  3.4610e-02,  7.7943e-02,  4.7666e-02,
          5.9100e-02, -2.4356e-01, -1.6415e-01, -2.2437e-02, -1.2017e-01,
          1.3261e-01, -2.0805e-02,  3.9357e-02, -2.1581e-01, -1.8075e-01,
         -4.3390e-02,  4.1508e-02,  2.2505e-01,  2.1217e-02,  2.1662e-01,
          1.9310e-02]], device='cuda:0') tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
899000 特征值优化 tensor(0.8732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1644e+00,  1.7462e+00, -6.6172e-01, -1.0136e+00,  8.9485e-01,
         -1.9791e-01,  1.9711e+00,  5.7939e-01,  2.4015e+00,  5.7504e-01,
          3.5120e-01,  5.7219e-03,  2.0514e-01, -8.5406e-01, -6.7438e-01,
          2.4887e-01, -9.9355e-01,  2.4431e-01,  8.3648e-01, -2.7645e-01,
          1.0206e+00,  4.2983e-01,  7.4909e-01, -1.3895e+00,  8.5134e-01,
         -4.5183e-01, -5.6180e-03, -2.9591e-01, -4.5397e-01, -1.2128e-01,
          1.0815e-01, -6.5266e-02,  1.8106e-02,  4.1554e-01, -4.6877e-01,
          1.3535e-01, -5.1196e-02, -1.5139e-01,  1.5552e-01, -1.5119e-01,
          4.8673e-01,  1.9672e-01,  2.5848e-02,  5.0276e-02, -2.0844e-01,
          2.4685e-01, -1.4683e-01, -4.8018e-02, -1.9193e-01,  3.4767e-01,
          2.2990e-01, -2.8671e-01, -8.4255e-02,  3.6906e-01, -9.6134e-02,
          9.4632e-02, -2.7018e-01,  2.7445e-01,  2.4367e-01, -4.1643e-01,
          4.2510e-01, -2.6792e-01, -2.0907e-01,  2.5752e-01,  1.8857e-01,
          1.2110e-03,  2.7160e-01, -2.0774e-01,  1.0605e-01,  2.3043e-01,
          1.3025e-01,  1.0980e-01, -2.7253e-01,  2.9351e-01, -6.2632e-02,
          1.9762e-01,  1.8418e-01, -1.2346e-01,  1.5557e-01,  2.0364e-01,
         -1.3772e-02,  1.3561e-01, -1.7262e-01, -5.4755e-02, -2.7486e-01,
         -1.5609e-01, -1.3362e-01, -1.7330e-02,  1.5140e-01,  3.9732e-01,
          5.0319e-01,  2.0290e-01,  3.5429e-01,  6.6065e-02, -1.5387e-01,
         -1.7991e-01,  8.7206e-01, -4.3099e-01, -4.8548e-02, -6.0489e-01,
         -4.6171e-02, -1.1250e-02, -3.6949e-01, -1.0409e-01, -1.5122e-01,
         -4.3249e-01, -3.4834e-01, -1.6278e-01, -4.2954e-01,  2.4831e-02,
          1.5960e-02, -2.1666e-02,  2.2780e-02,  7.3574e-02,  2.0464e-01,
          1.3117e-01, -6.1475e-02,  1.3189e-01,  1.1115e-01, -4.6278e-02,
          3.1476e-01, -4.0414e-02,  2.1763e-01, -1.5608e-01, -1.3792e-01,
          1.1941e-01,  1.5629e-02,  1.1595e-01, -1.8049e-01,  1.2332e-01,
         -1.6546e-02,  1.7607e-01,  4.0116e-02, -9.7448e-02, -4.3056e-02,
         -2.2497e-02, -1.0220e-01,  1.8263e-01, -1.4190e-01,  7.5594e-02,
          6.8911e-02, -8.8169e-02,  3.0778e-02,  7.1793e-02,  3.7146e-02,
          4.8191e-02, -2.3474e-01, -1.7944e-01, -2.1435e-02, -1.1133e-01,
          1.3158e-01, -3.3588e-02,  4.5080e-02, -2.2767e-01, -1.7554e-01,
         -3.0989e-02,  4.9629e-02,  2.2120e-01,  1.3641e-02,  1.9836e-01,
          2.5718e-02]], device='cuda:0') tensor(0.2097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
900000 特征值优化 tensor(0.8631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1610e+00,  1.7400e+00, -6.5723e-01, -1.0102e+00,  9.0306e-01,
         -2.0682e-01,  1.9801e+00,  5.8284e-01,  2.4098e+00,  5.7331e-01,
          3.4505e-01,  7.2798e-03,  2.3097e-01, -8.5569e-01, -6.7209e-01,
          2.4405e-01, -9.9128e-01,  2.4055e-01,  8.4106e-01, -2.7507e-01,
          1.0259e+00,  4.1979e-01,  7.4572e-01, -1.3752e+00,  8.5303e-01,
         -4.4911e-01,  1.1106e-03, -2.9942e-01, -4.5452e-01, -1.2587e-01,
          1.0491e-01, -6.5705e-02,  1.4702e-02,  4.0900e-01, -4.6743e-01,
          1.4096e-01, -4.8791e-02, -1.5975e-01,  1.5594e-01, -1.4943e-01,
          4.8490e-01,  1.9562e-01,  2.8193e-02,  5.3531e-02, -2.0190e-01,
          2.4829e-01, -1.3838e-01, -5.1949e-02, -1.9702e-01,  3.4328e-01,
          2.2639e-01, -2.8803e-01, -8.4802e-02,  3.6800e-01, -9.7264e-02,
          9.4306e-02, -2.6668e-01,  2.6711e-01,  2.4681e-01, -4.2549e-01,
          4.2396e-01, -2.6183e-01, -2.0148e-01,  2.5331e-01,  1.7897e-01,
          9.1506e-03,  2.7586e-01, -2.1357e-01,  1.0803e-01,  2.2968e-01,
          1.3096e-01,  1.0458e-01, -2.7866e-01,  3.0165e-01, -6.5399e-02,
          2.0287e-01,  1.8779e-01, -1.1945e-01,  1.5604e-01,  2.0836e-01,
         -1.5244e-02,  1.3408e-01, -1.7456e-01, -5.1263e-02, -2.7465e-01,
         -1.4389e-01, -1.2890e-01, -2.6095e-02,  1.6113e-01,  3.9129e-01,
          5.0167e-01,  2.1228e-01,  3.5606e-01,  6.2621e-02, -1.5460e-01,
         -1.8196e-01,  8.7554e-01, -4.3126e-01, -4.8845e-02, -6.1203e-01,
         -3.6544e-02, -1.5720e-02, -3.7739e-01, -1.0762e-01, -1.5991e-01,
         -4.2265e-01, -3.4819e-01, -1.6552e-01, -4.2389e-01,  2.7327e-02,
          7.3930e-03, -2.9154e-02,  2.5640e-02,  7.5851e-02,  2.0455e-01,
          1.2580e-01, -5.9037e-02,  1.2726e-01,  1.1773e-01, -4.6996e-02,
          3.1659e-01, -4.2152e-02,  2.1488e-01, -1.5320e-01, -1.4213e-01,
          1.1720e-01,  9.3764e-03,  1.1356e-01, -1.7725e-01,  1.2633e-01,
         -1.9316e-02,  1.7962e-01,  4.1971e-02, -9.2528e-02, -4.0771e-02,
         -2.0383e-02, -9.4282e-02,  1.8495e-01, -1.4494e-01,  7.9891e-02,
          7.5285e-02, -9.1958e-02,  3.4111e-02,  7.7360e-02,  4.1591e-02,
          5.3469e-02, -2.4241e-01, -1.7016e-01, -2.8795e-02, -1.2426e-01,
          1.4005e-01, -2.2384e-02,  4.4761e-02, -2.1384e-01, -1.7180e-01,
         -3.8708e-02,  4.2200e-02,  2.1999e-01,  1.6963e-02,  2.1125e-01,
          2.5915e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
901000 特征值优化 tensor(0.8522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1412e+00,  1.7351e+00, -6.6345e-01, -1.0114e+00,  9.2529e-01,
         -2.0330e-01,  1.9851e+00,  5.9666e-01,  2.4206e+00,  5.6973e-01,
          3.4413e-01,  2.1575e-02,  2.3270e-01, -8.5886e-01, -6.5889e-01,
          2.4815e-01, -9.8359e-01,  2.5023e-01,  8.4667e-01, -2.8529e-01,
          1.0199e+00,  4.2492e-01,  7.4702e-01, -1.3814e+00,  8.5812e-01,
         -4.5639e-01,  1.1178e-02, -3.0424e-01, -4.5558e-01, -1.2813e-01,
          1.1028e-01, -6.6258e-02,  1.2470e-02,  4.0671e-01, -4.6164e-01,
          1.4834e-01, -5.1276e-02, -1.5287e-01,  1.6295e-01, -1.5029e-01,
          4.8134e-01,  1.9562e-01,  2.8372e-02,  6.2059e-02, -2.0053e-01,
          2.4332e-01, -1.3924e-01, -5.0297e-02, -1.9583e-01,  3.3394e-01,
          2.2405e-01, -2.9661e-01, -8.7438e-02,  3.7048e-01, -9.8320e-02,
          9.8112e-02, -2.6758e-01,  2.6454e-01,  2.5255e-01, -4.2562e-01,
          4.3161e-01, -2.7149e-01, -1.9587e-01,  2.4796e-01,  1.8307e-01,
          2.7694e-03,  2.7714e-01, -2.1689e-01,  1.0446e-01,  2.2762e-01,
          1.3142e-01,  1.0367e-01, -2.7927e-01,  2.9231e-01, -6.7175e-02,
          1.9538e-01,  1.9553e-01, -1.0731e-01,  1.5970e-01,  2.0462e-01,
         -1.4417e-02,  1.3214e-01, -1.8467e-01, -4.9165e-02, -2.7787e-01,
         -1.3987e-01, -1.2804e-01, -2.9892e-02,  1.6008e-01,  3.8660e-01,
          4.9991e-01,  1.9909e-01,  3.4749e-01,  7.6516e-02, -1.5722e-01,
         -1.8178e-01,  8.7986e-01, -4.3480e-01, -6.4934e-02, -6.1503e-01,
         -4.2072e-02, -1.2161e-02, -3.6971e-01, -1.1043e-01, -1.5924e-01,
         -4.2367e-01, -3.5803e-01, -1.6549e-01, -4.2456e-01,  3.1004e-02,
         -1.0719e-04, -2.8839e-02,  2.4672e-02,  7.5073e-02,  2.1249e-01,
          1.2725e-01, -6.4781e-02,  1.2535e-01,  1.2056e-01, -4.9808e-02,
          3.1000e-01, -3.5142e-02,  2.2090e-01, -1.5278e-01, -1.3765e-01,
          1.2302e-01,  1.3394e-02,  1.0682e-01, -1.7873e-01,  1.2138e-01,
         -1.6518e-02,  1.8576e-01,  4.4433e-02, -9.6948e-02, -4.1602e-02,
         -1.7345e-02, -9.6778e-02,  1.8042e-01, -1.4906e-01,  8.2790e-02,
          6.0888e-02, -9.3017e-02,  3.9109e-02,  7.9359e-02,  5.3897e-02,
          5.7237e-02, -2.4387e-01, -1.6464e-01, -1.9827e-02, -1.1924e-01,
          1.3679e-01, -1.9296e-02,  4.0282e-02, -2.0688e-01, -1.7546e-01,
         -3.9459e-02,  4.6986e-02,  2.2928e-01,  1.9881e-02,  2.1244e-01,
          3.1154e-02]], device='cuda:0') tensor(0.2227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
902000 特征值优化 tensor(0.8587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1252,  1.7255, -0.6621, -1.0084,  0.9398, -0.2189,  1.9793,  0.5766,
          2.4423,  0.5764,  0.3499,  0.0059,  0.2252, -0.8418, -0.6681,  0.2282,
         -0.9995,  0.2449,  0.8411, -0.2678,  1.0395,  0.4100,  0.7528, -1.3764,
          0.8484, -0.4509,  0.0074, -0.2879, -0.4414, -0.1266,  0.0985, -0.0698,
          0.0280,  0.4042, -0.4606,  0.1450, -0.0492, -0.1602,  0.1438, -0.1542,
          0.5005,  0.1987,  0.0275,  0.0544, -0.1984,  0.2503, -0.1437, -0.0520,
         -0.1878,  0.3455,  0.2255, -0.2922, -0.0706,  0.3610, -0.0883,  0.0912,
         -0.2722,  0.2864,  0.2386, -0.4328,  0.4406, -0.2630, -0.2081,  0.2668,
          0.1953,  0.0120,  0.2595, -0.1989,  0.1161,  0.2236,  0.1282,  0.1028,
         -0.2731,  0.2983, -0.0624,  0.1969,  0.1878, -0.1223,  0.1392,  0.2030,
         -0.0249,  0.1400, -0.1710, -0.0529, -0.2826, -0.1573, -0.1378, -0.0237,
          0.1825,  0.3858,  0.5032,  0.1940,  0.3430,  0.0741, -0.1555, -0.1802,
          0.8769, -0.4470, -0.0432, -0.6087, -0.0360, -0.0233, -0.3657, -0.1155,
         -0.1493, -0.4213, -0.3420, -0.1642, -0.4219,  0.0229,  0.0138, -0.0194,
          0.0134,  0.0929,  0.2054,  0.1187, -0.0526,  0.1409,  0.0996, -0.0395,
          0.3109, -0.0428,  0.2177, -0.1438, -0.1414,  0.1195,  0.0166,  0.1118,
         -0.1756,  0.1204, -0.0208,  0.1778,  0.0419, -0.0956, -0.0319, -0.0231,
         -0.0932,  0.1975, -0.1361,  0.0877,  0.0751, -0.0857,  0.0339,  0.0706,
          0.0365,  0.0469, -0.2489, -0.1828, -0.0341, -0.1111,  0.1432, -0.0293,
          0.0453, -0.2199, -0.1833, -0.0244,  0.0471,  0.2141,  0.0072,  0.2057,
          0.0198]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
903000 特征值优化 tensor(0.8525, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0966,  1.7177, -0.6534, -1.0102,  0.9218, -0.2192,  1.9771,  0.5770,
          2.4554,  0.5642,  0.3477,  0.0101,  0.2166, -0.8423, -0.6621,  0.2242,
         -0.9982,  0.2515,  0.8380, -0.2668,  1.0394,  0.4126,  0.7495, -1.3750,
          0.8435, -0.4480,  0.0073, -0.2805, -0.4414, -0.1197,  0.0962, -0.0726,
          0.0214,  0.4103, -0.4555,  0.1457, -0.0413, -0.1566,  0.1373, -0.1543,
          0.4980,  0.1984,  0.0248,  0.0529, -0.2047,  0.2492, -0.1555, -0.0610,
         -0.1987,  0.3450,  0.2289, -0.2867, -0.0671,  0.3617, -0.0871,  0.0896,
         -0.2824,  0.2887,  0.2301, -0.4347,  0.4322, -0.2586, -0.2018,  0.2686,
          0.1992,  0.0091,  0.2622, -0.1954,  0.1127,  0.2314,  0.1269,  0.1047,
         -0.2673,  0.3030, -0.0618,  0.1881,  0.1796, -0.1283,  0.1400,  0.2031,
         -0.0359,  0.1438, -0.1686, -0.0542, -0.2841, -0.1580, -0.1318, -0.0246,
          0.1803,  0.3820,  0.5041,  0.1852,  0.3605,  0.0716, -0.1595, -0.1816,
          0.8769, -0.4555, -0.0492, -0.5933, -0.0519, -0.0279, -0.3682, -0.1151,
         -0.1516, -0.4159, -0.3411, -0.1526, -0.4136,  0.0265,  0.0141, -0.0183,
          0.0214,  0.0971,  0.2041,  0.1214, -0.0545,  0.1391,  0.0982, -0.0295,
          0.3196, -0.0506,  0.2195, -0.1479, -0.1423,  0.1172,  0.0089,  0.1123,
         -0.1732,  0.1178, -0.0124,  0.1718,  0.0424, -0.0922, -0.0394, -0.0231,
         -0.0894,  0.2045, -0.1324,  0.0840,  0.0783, -0.0793,  0.0232,  0.0610,
          0.0433,  0.0482, -0.2548, -0.1782, -0.0366, -0.1126,  0.1498, -0.0319,
          0.0410, -0.2263, -0.1850, -0.0253,  0.0467,  0.2124,  0.0167,  0.2063,
          0.0230]], device='cuda:0') tensor(0.2194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
904000 特征值优化 tensor(0.8545, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0779e+00,  1.6992e+00, -6.5153e-01, -1.0116e+00,  9.3908e-01,
         -1.9825e-01,  1.9953e+00,  5.9531e-01,  2.4496e+00,  5.7137e-01,
          3.3361e-01,  1.4462e-02,  2.2270e-01, -8.5350e-01, -6.3579e-01,
          2.4823e-01, -9.8946e-01,  2.5333e-01,  8.5232e-01, -2.7871e-01,
          1.0175e+00,  4.1732e-01,  7.5364e-01, -1.3754e+00,  8.5146e-01,
         -4.4896e-01,  1.8732e-02, -2.9575e-01, -4.5441e-01, -1.2220e-01,
          1.0752e-01, -7.6077e-02,  1.1304e-02,  4.0469e-01, -4.4899e-01,
          1.5246e-01, -4.9571e-02, -1.5847e-01,  1.6104e-01, -1.5023e-01,
          4.8163e-01,  1.9590e-01,  2.8003e-02,  6.5128e-02, -2.0337e-01,
          2.3666e-01, -1.4474e-01, -5.0352e-02, -1.9694e-01,  3.2734e-01,
          2.1922e-01, -2.9448e-01, -8.3830e-02,  3.6750e-01, -9.2645e-02,
          9.4540e-02, -2.6181e-01,  2.7011e-01,  2.4530e-01, -4.3079e-01,
          4.4148e-01, -2.7111e-01, -1.8456e-01,  2.4807e-01,  1.7886e-01,
          7.1758e-03,  2.7754e-01, -2.1014e-01,  1.0765e-01,  2.3245e-01,
          1.3645e-01,  1.0147e-01, -2.8107e-01,  2.9206e-01, -6.6416e-02,
          1.8681e-01,  1.9485e-01, -1.1178e-01,  1.5831e-01,  2.0364e-01,
         -2.1492e-02,  1.3600e-01, -1.7928e-01, -5.2872e-02, -2.8084e-01,
         -1.4234e-01, -1.3275e-01, -2.0359e-02,  1.6131e-01,  3.7575e-01,
          5.0365e-01,  1.8210e-01,  3.5270e-01,  6.7616e-02, -1.5396e-01,
         -1.8356e-01,  8.8174e-01, -4.4009e-01, -7.8843e-02, -6.1832e-01,
         -4.9727e-02, -1.8759e-02, -3.6736e-01, -1.1190e-01, -1.6120e-01,
         -4.2195e-01, -3.6109e-01, -1.6433e-01, -4.1801e-01,  3.3373e-02,
         -9.7948e-04, -2.4697e-02,  2.4859e-02,  8.0027e-02,  2.0826e-01,
          1.2761e-01, -6.8420e-02,  1.3111e-01,  1.2218e-01, -3.8304e-02,
          3.1377e-01, -3.4820e-02,  2.2144e-01, -1.5619e-01, -1.3764e-01,
          1.0670e-01,  1.4016e-02,  1.0427e-01, -1.7796e-01,  1.1977e-01,
         -1.4511e-02,  1.8162e-01,  4.5895e-02, -1.0175e-01, -4.4338e-02,
         -4.7371e-03, -9.8080e-02,  1.8482e-01, -1.4582e-01,  7.8089e-02,
          6.6427e-02, -9.2261e-02,  3.7216e-02,  8.3778e-02,  5.2714e-02,
          4.8383e-02, -2.5263e-01, -1.5969e-01, -1.9894e-02, -1.1609e-01,
          1.4120e-01, -1.6622e-02,  4.2125e-02, -2.1070e-01, -1.8279e-01,
         -4.1514e-02,  3.6524e-02,  2.2988e-01,  2.4068e-02,  2.2145e-01,
          2.9513e-02]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
905000 特征值优化 tensor(0.8658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0610,  1.6929, -0.6407, -1.0118,  0.9601, -0.2106,  1.9930,  0.5907,
          2.4523,  0.5690,  0.3343,  0.0072,  0.2105, -0.8498, -0.6416,  0.2321,
         -1.0034,  0.2523,  0.8472, -0.2770,  1.0249,  0.4085,  0.7558, -1.3764,
          0.8482, -0.4492,  0.0048, -0.2910, -0.4575, -0.1228,  0.0998, -0.0736,
          0.0208,  0.4068, -0.4532,  0.1478, -0.0506, -0.1605,  0.1495, -0.1435,
          0.4885,  0.1973,  0.0260,  0.0537, -0.2053,  0.2470, -0.1457, -0.0514,
         -0.1870,  0.3381,  0.2269, -0.2919, -0.0769,  0.3654, -0.0883,  0.0903,
         -0.2634,  0.2763,  0.2424, -0.4353,  0.4366, -0.2699, -0.1929,  0.2581,
          0.1801,  0.0120,  0.2650, -0.2026,  0.1151,  0.2285,  0.1246,  0.1065,
         -0.2742,  0.2938, -0.0650,  0.1955,  0.1892, -0.1227,  0.1511,  0.2045,
         -0.0266,  0.1385, -0.1757, -0.0630, -0.2773, -0.1495, -0.1332, -0.0170,
          0.1818,  0.3769,  0.5035,  0.1842,  0.3484,  0.0763, -0.1544, -0.1876,
          0.8822, -0.4390, -0.0625, -0.6092, -0.0472, -0.0249, -0.3616, -0.1057,
         -0.1534, -0.4208, -0.3548, -0.1571, -0.4246,  0.0245,  0.0101, -0.0156,
          0.0132,  0.0890,  0.2002,  0.1229, -0.0607,  0.1407,  0.1138, -0.0393,
          0.3128, -0.0352,  0.2185, -0.1480, -0.1445,  0.1131,  0.0153,  0.1110,
         -0.1796,  0.1233, -0.0188,  0.1769,  0.0435, -0.0983, -0.0371, -0.0189,
         -0.0966,  0.1925, -0.1369,  0.0803,  0.0773, -0.0897,  0.0315,  0.0760,
          0.0403,  0.0388, -0.2441, -0.1819, -0.0263, -0.1107,  0.1438, -0.0284,
          0.0472, -0.2214, -0.1828, -0.0339,  0.0461,  0.2208,  0.0094,  0.2130,
          0.0283]], device='cuda:0') tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
906000 特征值优化 tensor(0.8507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0192,  1.7034, -0.6046, -1.0111,  0.9375, -0.2298,  1.9837,  0.5866,
          2.4584,  0.5645,  0.3258,  0.0046,  0.2318, -0.8620, -0.6489,  0.2214,
         -0.9922,  0.2561,  0.8415, -0.2684,  1.0006,  0.4117,  0.7579, -1.3684,
          0.8465, -0.4502,  0.0052, -0.2973, -0.4758, -0.1110,  0.0827, -0.0785,
          0.0137,  0.4056, -0.4507,  0.1408, -0.0448, -0.1625,  0.1488, -0.1468,
          0.4919,  0.1989,  0.0223,  0.0489, -0.2102,  0.2550, -0.1493, -0.0746,
         -0.1892,  0.3311,  0.2283, -0.2815, -0.0892,  0.3580, -0.0880,  0.0985,
         -0.2725,  0.2805,  0.2294, -0.4293,  0.4432, -0.2583, -0.1888,  0.2801,
          0.1820,  0.0100,  0.2606, -0.1986,  0.1113,  0.2268,  0.1397,  0.1174,
         -0.2740,  0.3032, -0.0531,  0.1945,  0.1783, -0.1027,  0.1509,  0.2125,
         -0.0356,  0.1545, -0.1655, -0.0574, -0.2834, -0.1479, -0.1163, -0.0129,
          0.1753,  0.4013,  0.5026,  0.1742,  0.3701,  0.0697, -0.1739, -0.1904,
          0.8844, -0.4635, -0.0402, -0.5815, -0.0490, -0.0124, -0.4048, -0.1168,
         -0.1572, -0.4150, -0.3593, -0.1454, -0.3724,  0.0290,  0.0228, -0.0123,
          0.0048,  0.0975,  0.2157,  0.1282, -0.0624,  0.1289,  0.1027, -0.0292,
          0.3133, -0.0453,  0.2227, -0.1438, -0.1450,  0.1122,  0.0057,  0.1174,
         -0.1704,  0.1272, -0.0085,  0.1671,  0.0442, -0.0836, -0.0501, -0.0279,
         -0.0912,  0.2086, -0.1254,  0.0973,  0.0621, -0.0761,  0.0224,  0.0736,
          0.0375,  0.0607, -0.2528, -0.1731, -0.0316, -0.1128,  0.1702, -0.0324,
          0.0405, -0.2224, -0.1623, -0.0148,  0.0464,  0.2001,  0.0190,  0.2289,
          0.0335]], device='cuda:0') tensor(0.2022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
907000 特征值优化 tensor(0.8494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.9492e-01,  1.6988e+00, -5.8055e-01, -1.0111e+00,  9.1744e-01,
         -2.0649e-01,  2.0033e+00,  5.6271e-01,  2.4525e+00,  5.7459e-01,
          3.1976e-01,  2.6133e-02,  2.2689e-01, -8.4239e-01, -6.5782e-01,
          2.5153e-01, -9.7801e-01,  2.6274e-01,  8.3753e-01, -2.7650e-01,
          9.9095e-01,  4.0944e-01,  7.7078e-01, -1.3669e+00,  8.6698e-01,
         -4.5094e-01,  3.5811e-02, -2.9295e-01, -4.6510e-01, -1.1507e-01,
          1.0205e-01, -6.8736e-02,  3.7064e-02,  4.0570e-01, -4.5017e-01,
          1.5283e-01, -5.0255e-02, -1.4549e-01,  1.8038e-01, -1.4241e-01,
          4.7388e-01,  1.9701e-01,  2.5842e-02,  6.7698e-02, -2.1724e-01,
          2.4604e-01, -1.2888e-01, -5.9293e-02, -1.7543e-01,  3.1337e-01,
          2.1981e-01, -2.8545e-01, -1.0622e-01,  3.5648e-01, -8.5564e-02,
          1.0127e-01, -2.4997e-01,  2.9871e-01,  2.5191e-01, -4.2831e-01,
          4.4641e-01, -2.6620e-01, -1.8069e-01,  2.6241e-01,  1.6752e-01,
          1.6560e-02,  2.6377e-01, -2.2425e-01,  9.5942e-02,  2.2777e-01,
          1.3407e-01,  1.1421e-01, -2.8339e-01,  2.9221e-01, -5.8414e-02,
          1.8855e-01,  1.9043e-01, -8.8247e-02,  1.6886e-01,  2.0670e-01,
         -1.0307e-02,  1.4129e-01, -1.8458e-01, -6.9504e-02, -2.8543e-01,
         -1.5926e-01, -1.4206e-01,  5.7095e-05,  1.5441e-01,  3.8595e-01,
          5.0763e-01,  1.6269e-01,  3.3971e-01,  6.7900e-02, -2.0109e-01,
         -1.8251e-01,  8.8116e-01, -4.3134e-01, -7.2950e-02, -5.9565e-01,
         -5.6458e-02, -1.3562e-02, -4.0688e-01, -1.1807e-01, -1.2859e-01,
         -4.3532e-01, -3.6475e-01, -1.5485e-01, -3.5926e-01,  3.2038e-02,
          1.0912e-02, -1.3336e-02,  2.2348e-02,  9.6485e-02,  1.9405e-01,
          1.2407e-01, -5.0883e-02,  1.5348e-01,  1.0916e-01, -4.6966e-02,
          3.1493e-01, -2.5652e-02,  2.2678e-01, -1.4074e-01, -1.4415e-01,
          1.2328e-01,  1.1352e-02,  1.0064e-01, -1.6714e-01,  1.2268e-01,
         -2.0373e-03,  1.8009e-01,  5.1992e-02, -9.4873e-02, -5.1700e-02,
         -1.8770e-02, -9.6558e-02,  1.9486e-01, -1.4477e-01,  9.3252e-02,
          6.3808e-02, -9.3826e-02,  4.4591e-02,  8.4586e-02,  4.9417e-02,
          5.8408e-02, -2.5715e-01, -1.6537e-01, -6.7627e-03, -1.1450e-01,
          1.3820e-01, -3.1974e-02,  4.2569e-02, -2.3750e-01, -1.8309e-01,
         -3.8993e-02,  3.8457e-02,  2.1444e-01,  3.7677e-02,  2.2121e-01,
          1.6190e-02]], device='cuda:0') tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
908000 特征值优化 tensor(0.8539, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.8195e-01,  1.6966e+00, -6.0037e-01, -1.0119e+00,  9.3263e-01,
         -2.2874e-01,  1.9895e+00,  5.6195e-01,  2.4651e+00,  5.7511e-01,
          3.2971e-01,  2.1495e-02,  2.1835e-01, -8.5908e-01, -6.4806e-01,
          2.2881e-01, -9.9388e-01,  2.6322e-01,  8.3840e-01, -2.5683e-01,
          9.9206e-01,  4.0272e-01,  7.8071e-01, -1.3493e+00,  8.4250e-01,
         -4.3697e-01,  7.0007e-03, -2.8978e-01, -4.8654e-01, -1.0936e-01,
          8.2625e-02, -7.2664e-02,  2.2319e-02,  4.0602e-01, -4.5267e-01,
          1.4609e-01, -4.5472e-02, -1.6586e-01,  1.6263e-01, -1.3973e-01,
          4.9350e-01,  1.9688e-01,  3.1414e-02,  6.0651e-02, -2.0985e-01,
          2.5449e-01, -1.3769e-01, -6.1755e-02, -1.7749e-01,  3.2799e-01,
          2.2869e-01, -2.8266e-01, -8.8405e-02,  3.4867e-01, -7.9390e-02,
          9.6681e-02, -2.6415e-01,  2.7872e-01,  2.3589e-01, -4.3533e-01,
          4.5322e-01, -2.6101e-01, -1.9886e-01,  2.8653e-01,  1.8151e-01,
          6.4484e-03,  2.4550e-01, -2.0280e-01,  1.0972e-01,  2.2416e-01,
          1.4141e-01,  1.2235e-01, -2.7877e-01,  3.0418e-01, -5.4334e-02,
          1.8727e-01,  1.7389e-01, -9.9886e-02,  1.5467e-01,  2.0663e-01,
         -2.7406e-02,  1.5952e-01, -1.6658e-01, -5.9138e-02, -2.8643e-01,
         -1.3842e-01, -1.1916e-01, -5.7538e-03,  1.8171e-01,  3.9212e-01,
          5.0933e-01,  1.7463e-01,  3.5060e-01,  8.2210e-02, -1.8907e-01,
         -1.8245e-01,  8.7424e-01, -4.4539e-01, -4.6674e-02, -5.8513e-01,
         -4.9095e-02, -1.7843e-02, -4.1981e-01, -1.1646e-01, -1.4939e-01,
         -4.2458e-01, -3.8507e-01, -1.4899e-01, -3.5123e-01,  2.7010e-02,
          2.2265e-02, -7.4217e-03,  3.1538e-03,  1.1055e-01,  2.0296e-01,
          1.2866e-01, -5.4095e-02,  1.2709e-01,  1.2237e-01, -3.7436e-02,
          3.1430e-01, -4.4610e-02,  2.2009e-01, -1.4136e-01, -1.4672e-01,
          1.0937e-01,  7.3744e-03,  1.1530e-01, -1.6385e-01,  1.2413e-01,
         -1.3262e-03,  1.7284e-01,  3.7198e-02, -9.9619e-02, -5.6176e-02,
         -2.1919e-02, -9.3821e-02,  2.1648e-01, -1.3034e-01,  9.8649e-02,
          6.6149e-02, -9.3407e-02,  2.7748e-02,  7.4607e-02,  3.0308e-02,
          5.7290e-02, -2.6279e-01, -1.7437e-01, -2.3347e-02, -1.1998e-01,
          1.5669e-01, -3.1080e-02,  4.1613e-02, -2.2040e-01, -1.6254e-01,
         -2.3467e-02,  4.5279e-02,  2.0737e-01,  1.3538e-02,  2.3605e-01,
          3.7222e-02]], device='cuda:0') tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
909000 特征值优化 tensor(0.8575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9578,  1.6948, -0.5841, -1.0102,  0.9144, -0.2163,  1.9978,  0.5835,
          2.4656,  0.5743,  0.3194,  0.0194,  0.2173, -0.8590, -0.6408,  0.2473,
         -0.9963,  0.2610,  0.8471, -0.2639,  0.9881,  0.4032,  0.7739, -1.3467,
          0.8498, -0.4466,  0.0032, -0.3066, -0.4819, -0.1077,  0.0913, -0.0789,
          0.0239,  0.4092, -0.4423,  0.1487, -0.0505, -0.1601,  0.1798, -0.1405,
          0.4763,  0.1951,  0.0309,  0.0662, -0.2114,  0.2455, -0.1382, -0.0696,
         -0.1725,  0.3108,  0.2209, -0.2833, -0.1038,  0.3534, -0.0857,  0.0939,
         -0.2499,  0.2788,  0.2485, -0.4303,  0.4543, -0.2685, -0.1818,  0.2659,
          0.1598,  0.0082,  0.2736, -0.2118,  0.1042,  0.2258,  0.1441,  0.1184,
         -0.2897,  0.2951, -0.0527,  0.1865,  0.1842, -0.0989,  0.1720,  0.2104,
         -0.0171,  0.1502, -0.1747, -0.0674, -0.2830, -0.1387, -0.1310,  0.0142,
          0.1619,  0.3834,  0.5120,  0.1670,  0.3440,  0.0655, -0.1892, -0.1879,
          0.8726, -0.4394, -0.0642, -0.5865, -0.0609, -0.0075, -0.4271, -0.1136,
         -0.1366, -0.4324, -0.3861, -0.1703, -0.3449,  0.0306,  0.0108, -0.0137,
          0.0123,  0.0930,  0.1892,  0.1248, -0.0554,  0.1386,  0.1267, -0.0473,
          0.3183, -0.0385,  0.2181, -0.1453, -0.1428,  0.1117,  0.0091,  0.1020,
         -0.1638,  0.1297, -0.0026,  0.1739,  0.0484, -0.1040, -0.0537, -0.0154,
         -0.0932,  0.2027, -0.1371,  0.0934,  0.0783, -0.0974,  0.0342,  0.0844,
          0.0371,  0.0560, -0.2566, -0.1670, -0.0127, -0.1224,  0.1373, -0.0292,
          0.0475, -0.2264, -0.1694, -0.0334,  0.0346,  0.2157,  0.0305,  0.2342,
          0.0260]], device='cuda:0') tensor(0.2067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
910000 特征值优化 tensor(0.8514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.6172e-01,  1.6982e+00, -5.9002e-01, -1.0115e+00,  9.2748e-01,
         -2.1467e-01,  2.0141e+00,  5.8966e-01,  2.4646e+00,  5.6959e-01,
          3.1742e-01,  3.1457e-02,  2.1485e-01, -8.6264e-01, -6.3062e-01,
          2.6244e-01, -9.8593e-01,  2.6853e-01,  8.4344e-01, -2.7751e-01,
          9.8996e-01,  4.1025e-01,  7.7777e-01, -1.3446e+00,  8.5343e-01,
         -4.4419e-01,  1.7143e-02, -3.0011e-01, -4.7010e-01, -1.1288e-01,
          9.2361e-02, -7.7390e-02,  3.2880e-02,  4.0339e-01, -4.4081e-01,
          1.5437e-01, -4.9016e-02, -1.5268e-01,  1.8686e-01, -1.3724e-01,
          4.7392e-01,  1.9682e-01,  2.5938e-02,  6.3924e-02, -2.1313e-01,
          2.4756e-01, -1.3153e-01, -6.4543e-02, -1.7374e-01,  3.0289e-01,
          2.1779e-01, -2.8380e-01, -1.0389e-01,  3.5721e-01, -9.0825e-02,
          9.8551e-02, -2.4772e-01,  2.7604e-01,  2.5017e-01, -4.2578e-01,
          4.5946e-01, -2.6702e-01, -1.8030e-01,  2.6375e-01,  1.6704e-01,
          9.5578e-03,  2.6569e-01, -2.1351e-01,  9.9049e-02,  2.2759e-01,
          1.4000e-01,  1.1783e-01, -2.9093e-01,  2.8889e-01, -5.7223e-02,
          1.8172e-01,  1.9035e-01, -8.7626e-02,  1.7893e-01,  2.0349e-01,
         -1.7593e-02,  1.4751e-01, -1.7981e-01, -6.5516e-02, -2.8675e-01,
         -1.4200e-01, -1.4017e-01,  1.0167e-02,  1.6446e-01,  3.7688e-01,
          5.0988e-01,  1.6231e-01,  3.4958e-01,  6.8011e-02, -1.9788e-01,
         -1.8030e-01,  8.8318e-01, -4.3462e-01, -9.0106e-02, -5.9951e-01,
         -7.2424e-02, -7.7978e-03, -4.1784e-01, -1.1739e-01, -1.3678e-01,
         -4.3379e-01, -3.9536e-01, -1.6429e-01, -3.5477e-01,  3.2947e-02,
          5.6330e-03, -1.7451e-02,  7.6768e-03,  9.4249e-02,  1.9451e-01,
          1.2603e-01, -5.4391e-02,  1.4136e-01,  1.2215e-01, -5.4527e-02,
          3.1382e-01, -3.2843e-02,  2.2570e-01, -1.4656e-01, -1.4449e-01,
          1.1084e-01,  1.0755e-02,  9.5435e-02, -1.6553e-01,  1.2734e-01,
          4.1869e-03,  1.7989e-01,  4.9212e-02, -1.0650e-01, -5.6415e-02,
         -2.1135e-03, -9.9557e-02,  1.9371e-01, -1.3844e-01,  8.3741e-02,
          6.2585e-02, -9.2929e-02,  3.6870e-02,  9.2392e-02,  4.7412e-02,
          5.0552e-02, -2.6020e-01, -1.5868e-01, -5.8700e-03, -1.1808e-01,
          1.3797e-01, -3.0865e-02,  4.3623e-02, -2.2068e-01, -1.8161e-01,
         -4.0074e-02,  3.5418e-02,  2.2361e-01,  3.7588e-02,  2.3435e-01,
          2.3629e-02]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
911000 特征值优化 tensor(0.8626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.3889e-01,  1.6925e+00, -5.9501e-01, -1.0121e+00,  9.3610e-01,
         -2.2689e-01,  2.0110e+00,  5.8694e-01,  2.4749e+00,  5.6974e-01,
          3.1668e-01,  1.6316e-02,  2.0993e-01, -8.7225e-01, -6.4049e-01,
          2.5672e-01, -9.9758e-01,  2.6530e-01,  8.4633e-01, -2.6392e-01,
          9.8499e-01,  4.0452e-01,  7.8195e-01, -1.3405e+00,  8.5142e-01,
         -4.3630e-01,  1.5339e-03, -2.8399e-01, -4.7671e-01, -1.1250e-01,
          8.7021e-02, -7.1763e-02,  3.3026e-02,  4.0181e-01, -4.3766e-01,
          1.5112e-01, -4.8565e-02, -1.5923e-01,  1.7728e-01, -1.4034e-01,
          4.7127e-01,  1.9651e-01,  2.6945e-02,  5.9089e-02, -2.1319e-01,
          2.5054e-01, -1.4110e-01, -7.2727e-02, -1.7728e-01,  3.0206e-01,
          2.1935e-01, -2.8377e-01, -9.9079e-02,  3.5302e-01, -8.9140e-02,
          9.1504e-02, -2.5324e-01,  2.7000e-01,  2.5282e-01, -4.2791e-01,
          4.4741e-01, -2.6617e-01, -1.8538e-01,  2.6633e-01,  1.6447e-01,
          1.4486e-02,  2.6994e-01, -2.0551e-01,  1.0551e-01,  2.2771e-01,
          1.4021e-01,  1.2061e-01, -2.9079e-01,  2.9235e-01, -6.2180e-02,
          1.8326e-01,  1.7831e-01, -9.4357e-02,  1.6962e-01,  2.0491e-01,
         -2.0743e-02,  1.5140e-01, -1.7520e-01, -7.3694e-02, -2.8146e-01,
         -1.4810e-01, -1.2855e-01,  1.0676e-02,  1.8463e-01,  3.7551e-01,
          5.0520e-01,  1.6619e-01,  3.5036e-01,  7.2633e-02, -1.8869e-01,
         -1.8433e-01,  8.8000e-01, -4.5687e-01, -8.2228e-02, -5.8966e-01,
         -7.0094e-02, -1.4202e-02, -4.3048e-01, -1.0823e-01, -1.3713e-01,
         -4.2188e-01, -3.9676e-01, -1.6160e-01, -3.3823e-01,  3.3496e-02,
          8.4531e-03, -2.2563e-02,  6.6077e-03,  1.0153e-01,  1.8666e-01,
          1.2601e-01, -5.4618e-02,  1.3439e-01,  1.1474e-01, -4.8584e-02,
          3.1941e-01, -4.1506e-02,  2.1874e-01, -1.4702e-01, -1.4867e-01,
          1.0756e-01,  5.9293e-03,  1.0204e-01, -1.6521e-01,  1.2931e-01,
          2.6301e-04,  1.7417e-01,  4.9608e-02, -1.0575e-01, -5.5820e-02,
         -1.2404e-02, -1.0075e-01,  1.9640e-01, -1.3378e-01,  8.1593e-02,
          7.4371e-02, -8.9318e-02,  2.7874e-02,  9.1622e-02,  4.5466e-02,
          4.5303e-02, -2.5833e-01, -1.6618e-01, -1.3830e-02, -1.2342e-01,
          1.4495e-01, -3.3145e-02,  4.9096e-02, -2.2589e-01, -1.7016e-01,
         -3.7071e-02,  3.7149e-02,  2.1506e-01,  2.9575e-02,  2.2916e-01,
          3.4726e-02]], device='cuda:0') tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
912000 特征值优化 tensor(0.8522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.5447e-01,  1.6835e+00, -5.8738e-01, -1.0129e+00,  9.4257e-01,
         -2.2488e-01,  2.0163e+00,  5.9259e-01,  2.4819e+00,  5.7147e-01,
          3.0471e-01,  3.7504e-02,  2.2308e-01, -8.7601e-01, -6.3382e-01,
          2.5436e-01, -9.9552e-01,  2.7776e-01,  8.5016e-01, -2.7819e-01,
          9.8074e-01,  4.0831e-01,  7.8147e-01, -1.3383e+00,  8.4739e-01,
         -4.4351e-01,  1.6759e-02, -2.9652e-01, -4.8078e-01, -1.1338e-01,
          8.5468e-02, -7.5066e-02,  4.0582e-02,  4.0348e-01, -4.3480e-01,
          1.5691e-01, -5.0949e-02, -1.6130e-01,  1.9129e-01, -1.3706e-01,
          4.7125e-01,  1.9673e-01,  2.6814e-02,  6.6616e-02, -2.0476e-01,
          2.5146e-01, -1.4258e-01, -7.1064e-02, -1.7826e-01,  2.9014e-01,
          2.2152e-01, -2.8127e-01, -1.0009e-01,  3.5821e-01, -9.2363e-02,
          9.6794e-02, -2.6117e-01,  2.6812e-01,  2.5880e-01, -4.3365e-01,
          4.4507e-01, -2.6855e-01, -1.8321e-01,  2.6274e-01,  1.6303e-01,
          1.2561e-02,  2.6978e-01, -2.1632e-01,  9.8590e-02,  2.2710e-01,
          1.3688e-01,  1.1780e-01, -2.9117e-01,  2.8796e-01, -5.5453e-02,
          1.7900e-01,  1.8234e-01, -8.4766e-02,  1.7422e-01,  2.0776e-01,
         -1.9976e-02,  1.4574e-01, -1.8258e-01, -6.1205e-02, -2.8826e-01,
         -1.4273e-01, -1.2217e-01, -8.1019e-03,  1.7561e-01,  3.6046e-01,
          5.0404e-01,  1.5768e-01,  3.6278e-01,  7.3060e-02, -1.9649e-01,
         -1.8246e-01,  8.9113e-01, -4.4930e-01, -8.3420e-02, -5.9013e-01,
         -6.8990e-02, -5.4757e-03, -4.2028e-01, -1.0680e-01, -1.4738e-01,
         -4.1622e-01, -4.0076e-01, -1.6112e-01, -3.4343e-01,  3.0315e-02,
          7.7125e-03, -2.4497e-02, -3.1113e-04,  1.0725e-01,  2.0006e-01,
          1.3008e-01, -5.8674e-02,  1.3038e-01,  1.1866e-01, -5.1095e-02,
          3.1410e-01, -4.7833e-02,  2.1945e-01, -1.4611e-01, -1.4781e-01,
          1.0368e-01,  1.1171e-02,  9.4678e-02, -1.6829e-01,  1.3056e-01,
          8.1735e-04,  1.7899e-01,  5.0332e-02, -1.0618e-01, -5.6905e-02,
         -4.2480e-03, -1.1337e-01,  1.9972e-01, -1.1576e-01,  7.7045e-02,
          5.5740e-02, -8.5128e-02,  3.1340e-02,  9.7054e-02,  5.8677e-02,
          5.1088e-02, -2.6383e-01, -1.6323e-01, -7.5250e-03, -1.1959e-01,
          1.4216e-01, -2.2330e-02,  4.4931e-02, -2.2215e-01, -1.6846e-01,
         -3.5726e-02,  3.7802e-02,  2.2179e-01,  4.0670e-02,  2.3094e-01,
          4.0082e-02]], device='cuda:0') tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
913000 特征值优化 tensor(0.8545, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.4469e-01,  1.6823e+00, -5.8934e-01, -1.0119e+00,  9.6750e-01,
         -2.3825e-01,  2.0235e+00,  5.9474e-01,  2.4948e+00,  5.7776e-01,
          3.0002e-01,  2.2703e-02,  2.3002e-01, -8.8565e-01, -6.2983e-01,
          2.3030e-01, -1.0035e+00,  2.7787e-01,  8.4877e-01, -2.6391e-01,
          1.0017e+00,  3.8738e-01,  7.7489e-01, -1.3366e+00,  8.4385e-01,
         -4.3577e-01,  9.5892e-03, -3.0471e-01, -4.8087e-01, -1.1525e-01,
          8.6822e-02, -6.7589e-02,  3.9411e-02,  4.0038e-01, -4.3356e-01,
          1.5063e-01, -4.5891e-02, -1.6209e-01,  1.8371e-01, -1.2868e-01,
          4.7447e-01,  1.9710e-01,  2.5752e-02,  6.4401e-02, -2.1172e-01,
          2.5343e-01, -1.4633e-01, -6.1055e-02, -1.7737e-01,  2.9479e-01,
          2.3829e-01, -2.8373e-01, -9.5604e-02,  3.5152e-01, -8.6694e-02,
          9.8435e-02, -2.6129e-01,  2.6630e-01,  2.5582e-01, -4.4089e-01,
          4.4810e-01, -2.6508e-01, -1.8026e-01,  2.6144e-01,  1.6316e-01,
          1.2600e-02,  2.6653e-01, -2.2545e-01,  9.6601e-02,  2.2048e-01,
          1.3050e-01,  1.1379e-01, -2.9540e-01,  2.9795e-01, -4.9902e-02,
          1.8885e-01,  1.8674e-01, -1.0130e-01,  1.6650e-01,  2.1379e-01,
         -1.8543e-02,  1.4688e-01, -1.7879e-01, -5.9053e-02, -2.9153e-01,
         -1.3909e-01, -1.2572e-01, -1.1586e-02,  1.9504e-01,  3.5573e-01,
          5.0037e-01,  1.6308e-01,  3.5451e-01,  7.4253e-02, -1.9897e-01,
         -1.8251e-01,  8.8358e-01, -4.3301e-01, -5.6249e-02, -5.8603e-01,
         -6.3937e-02,  3.7089e-03, -4.1347e-01, -1.0675e-01, -1.5053e-01,
         -4.1398e-01, -3.8544e-01, -1.5941e-01, -3.4644e-01,  2.8151e-02,
          1.0203e-02, -2.0170e-02,  1.7438e-04,  1.0584e-01,  1.9931e-01,
          1.2869e-01, -5.5404e-02,  1.3186e-01,  1.2037e-01, -5.3846e-02,
          3.1509e-01, -5.3015e-02,  2.1991e-01, -1.3606e-01, -1.4538e-01,
          1.0839e-01,  1.1467e-02,  1.0106e-01, -1.6440e-01,  1.3324e-01,
          5.4363e-03,  1.7634e-01,  5.2696e-02, -1.0526e-01, -5.8138e-02,
         -1.4374e-02, -9.9673e-02,  2.1398e-01, -1.1809e-01,  8.1538e-02,
          5.6274e-02, -9.2983e-02,  2.2105e-02,  8.2986e-02,  4.0397e-02,
          5.9221e-02, -2.6015e-01, -1.6735e-01, -1.3387e-02, -1.2108e-01,
          1.4227e-01, -1.9500e-02,  4.6044e-02, -2.2143e-01, -1.6549e-01,
         -3.4705e-02,  2.9574e-02,  2.1801e-01,  3.2891e-02,  2.3434e-01,
          3.5710e-02]], device='cuda:0') tensor(0.2069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
914000 特征值优化 tensor(0.8587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.1196e-01,  1.6730e+00, -5.9172e-01, -1.0105e+00,  9.7295e-01,
         -2.3702e-01,  2.0150e+00,  5.7615e-01,  2.5152e+00,  5.6989e-01,
          3.0209e-01,  2.1802e-02,  2.1328e-01, -8.7655e-01, -6.2773e-01,
          2.3775e-01, -1.0009e+00,  2.8459e-01,  8.4690e-01, -2.5069e-01,
          1.0102e+00,  3.8502e-01,  7.6706e-01, -1.3455e+00,  8.3137e-01,
         -4.4066e-01,  9.1039e-03, -2.7863e-01, -4.6006e-01, -1.0727e-01,
          9.0779e-02, -7.5039e-02,  4.8339e-02,  3.8961e-01, -4.3279e-01,
          1.5326e-01, -4.8944e-02, -1.6335e-01,  1.7423e-01, -1.3341e-01,
          4.7893e-01,  1.9755e-01,  2.9472e-02,  6.1981e-02, -2.1308e-01,
          2.4708e-01, -1.4061e-01, -5.9508e-02, -1.7492e-01,  3.1348e-01,
          2.2908e-01, -2.8654e-01, -7.5415e-02,  3.4798e-01, -7.8469e-02,
          9.3792e-02, -2.6382e-01,  2.8671e-01,  2.3790e-01, -4.4338e-01,
          4.5578e-01, -2.5707e-01, -1.9391e-01,  2.7532e-01,  1.8255e-01,
          1.0810e-02,  2.4860e-01, -2.0705e-01,  1.0607e-01,  2.2619e-01,
          1.3253e-01,  1.2411e-01, -2.8460e-01,  2.9111e-01, -5.7588e-02,
          1.8910e-01,  1.9218e-01, -8.8337e-02,  1.6265e-01,  2.0446e-01,
         -2.7513e-02,  1.5396e-01, -1.6911e-01, -6.9466e-02, -2.8463e-01,
         -1.5842e-01, -1.4186e-01, -1.9100e-03,  2.1234e-01,  3.6243e-01,
          5.0348e-01,  1.5818e-01,  3.5680e-01,  8.0933e-02, -1.8837e-01,
         -1.8261e-01,  8.9135e-01, -4.3805e-01, -5.7628e-02, -5.9884e-01,
         -5.2372e-02, -2.2113e-02, -4.1551e-01, -1.0933e-01, -1.3806e-01,
         -4.1207e-01, -3.6785e-01, -1.5579e-01, -3.4869e-01,  2.5413e-02,
          2.0276e-02, -6.9965e-03,  8.5726e-03,  1.1676e-01,  1.9888e-01,
          1.2489e-01, -5.0692e-02,  1.4461e-01,  1.0060e-01, -4.9280e-02,
          3.1018e-01, -3.6935e-02,  2.2662e-01, -1.3484e-01, -1.4852e-01,
          1.1227e-01,  1.0447e-02,  1.0777e-01, -1.6789e-01,  1.3186e-01,
          9.6039e-03,  1.7167e-01,  4.6192e-02, -1.0310e-01, -5.3281e-02,
         -1.2711e-02, -9.7013e-02,  2.1388e-01, -1.2066e-01,  8.7122e-02,
          6.8747e-02, -9.4612e-02,  2.7542e-02,  8.9464e-02,  3.3272e-02,
          4.9042e-02, -2.5932e-01, -1.7577e-01, -2.4643e-02, -1.1292e-01,
          1.5183e-01, -3.1966e-02,  4.4546e-02, -2.3021e-01, -1.8468e-01,
         -2.4410e-02,  3.7910e-02,  2.1275e-01,  2.2818e-02,  2.1797e-01,
          3.5301e-02]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
915000 正交保障 tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.2456e-01,  1.6559e+00, -5.8846e-01, -1.0120e+00,  9.8114e-01,
         -2.1409e-01,  2.0182e+00,  6.0514e-01,  2.5010e+00,  5.6628e-01,
          3.0380e-01,  4.5631e-02,  2.2690e-01, -8.9886e-01, -6.1898e-01,
          2.4598e-01, -1.0004e+00,  2.7346e-01,  8.5041e-01, -2.6536e-01,
          1.0032e+00,  3.7621e-01,  7.6726e-01, -1.3363e+00,  8.4825e-01,
         -4.3813e-01,  1.8717e-02, -2.9586e-01, -4.7869e-01, -1.0642e-01,
          1.0022e-01, -7.6183e-02,  4.6052e-02,  3.9129e-01, -4.3159e-01,
          1.6474e-01, -4.9349e-02, -1.6232e-01,  1.9209e-01, -1.3716e-01,
          4.7850e-01,  1.9701e-01,  2.6462e-02,  6.3663e-02, -2.1445e-01,
          2.5356e-01, -1.2755e-01, -5.9563e-02, -1.7567e-01,  2.9456e-01,
          2.2311e-01, -2.9429e-01, -9.3859e-02,  3.5617e-01, -8.3064e-02,
          9.3350e-02, -2.6171e-01,  2.6912e-01,  2.4783e-01, -4.4281e-01,
          4.5500e-01, -2.6069e-01, -1.8157e-01,  2.5863e-01,  1.6827e-01,
          1.4872e-02,  2.5613e-01, -2.1822e-01,  9.6052e-02,  2.2548e-01,
          1.3247e-01,  1.1272e-01, -2.9541e-01,  2.8613e-01, -5.3594e-02,
          1.8468e-01,  1.9382e-01, -7.2924e-02,  1.7640e-01,  2.0567e-01,
         -2.0564e-02,  1.4854e-01, -1.8384e-01, -5.7929e-02, -2.8793e-01,
         -1.3884e-01, -1.3287e-01, -1.5938e-02,  1.8987e-01,  3.5252e-01,
          5.0433e-01,  1.5268e-01,  3.5464e-01,  7.5069e-02, -1.9970e-01,
         -1.8254e-01,  8.9465e-01, -4.3815e-01, -9.4348e-02, -6.1291e-01,
         -5.8939e-02, -4.3182e-03, -4.0614e-01, -1.0681e-01, -1.4911e-01,
         -4.2106e-01, -3.8856e-01, -1.6080e-01, -3.5253e-01,  2.7598e-02,
          5.7795e-03, -2.2020e-02,  1.4027e-03,  1.0828e-01,  1.9605e-01,
          1.3096e-01, -4.8487e-02,  1.3786e-01,  1.1992e-01, -6.0875e-02,
          3.1007e-01, -3.8217e-02,  2.2488e-01, -1.3520e-01, -1.5029e-01,
          1.0452e-01,  1.3264e-02,  9.3383e-02, -1.6514e-01,  1.3292e-01,
          6.9384e-03,  1.8265e-01,  5.3158e-02, -1.0928e-01, -5.3385e-02,
          3.2844e-03, -1.0865e-01,  1.9947e-01, -1.2398e-01,  8.1007e-02,
          4.6575e-02, -8.5561e-02,  3.9456e-02,  1.0251e-01,  5.2425e-02,
          4.5679e-02, -2.6581e-01, -1.6450e-01, -1.1782e-02, -1.1973e-01,
          1.4528e-01, -2.6030e-02,  4.5585e-02, -2.1163e-01, -1.8143e-01,
         -3.7905e-02,  3.7380e-02,  2.2515e-01,  3.3878e-02,  2.2975e-01,
          3.8525e-02]], device='cuda:0') tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
916000 特征值优化 tensor(0.8628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9008,  1.6519, -0.5839, -1.0138,  0.9754, -0.2352,  2.0139,  0.5977,
          2.5283,  0.5674,  0.3136,  0.0220,  0.2215, -0.8976, -0.6290,  0.2305,
         -1.0064,  0.2767,  0.8401, -0.2599,  0.9940,  0.3638,  0.7666, -1.3447,
          0.8403, -0.4334,  0.0032, -0.2845, -0.4864, -0.1036,  0.0935, -0.0738,
          0.0458,  0.3934, -0.4312,  0.1577, -0.0470, -0.1559,  0.1812, -0.1394,
          0.4842,  0.1959,  0.0293,  0.0627, -0.2207,  0.2545, -0.1408, -0.0664,
         -0.1783,  0.3053,  0.2331, -0.2869, -0.0849,  0.3486, -0.0781,  0.0856,
         -0.2829,  0.2771,  0.2383, -0.4479,  0.4482, -0.2610, -0.1897,  0.2758,
          0.1773,  0.0148,  0.2556, -0.2008,  0.1051,  0.2267,  0.1273,  0.1170,
         -0.2834,  0.2921, -0.0576,  0.1888,  0.1809, -0.0937,  0.1657,  0.2072,
         -0.0290,  0.1523, -0.1687, -0.0715, -0.2828, -0.1498, -0.1245, -0.0080,
          0.2000,  0.3740,  0.5020,  0.1469,  0.3560,  0.0847, -0.1902, -0.1894,
          0.8927, -0.4389, -0.0783, -0.5916, -0.0674, -0.0109, -0.4022, -0.0977,
         -0.1339, -0.4022, -0.3861, -0.1430, -0.3403,  0.0309,  0.0134, -0.0103,
          0.0032,  0.1273,  0.1867,  0.1262, -0.0466,  0.1383,  0.0949, -0.0454,
          0.3188, -0.0470,  0.2217, -0.1363, -0.1528,  0.1109,  0.0115,  0.1011,
         -0.1618,  0.1409,  0.0112,  0.1703,  0.0518, -0.1049, -0.0521, -0.0124,
         -0.1069,  0.2153, -0.1256,  0.0824,  0.0577, -0.0874,  0.0240,  0.0800,
          0.0306,  0.0420, -0.2700, -0.1688, -0.0184, -0.1145,  0.1553, -0.0345,
          0.0472, -0.2292, -0.1691, -0.0262,  0.0364,  0.2153,  0.0243,  0.2151,
          0.0505]], device='cuda:0') tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
917000 特征值优化 tensor(0.8529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.8333e-01,  1.6339e+00, -5.7554e-01, -1.0145e+00,  9.8992e-01,
         -2.4702e-01,  2.0202e+00,  5.9608e-01,  2.5320e+00,  5.6438e-01,
          3.1504e-01,  7.0902e-03,  2.2739e-01, -8.9089e-01, -5.9022e-01,
          2.2077e-01, -1.0044e+00,  2.6873e-01,  8.3804e-01, -2.5687e-01,
          9.9006e-01,  3.6047e-01,  7.7240e-01, -1.3328e+00,  8.4130e-01,
         -4.2732e-01,  1.4222e-03, -2.8008e-01, -4.9494e-01, -1.0805e-01,
          8.3722e-02, -7.6765e-02,  3.4199e-02,  4.0283e-01, -4.3204e-01,
          1.5660e-01, -4.4730e-02, -1.6170e-01,  1.7523e-01, -1.3486e-01,
          4.9223e-01,  1.9676e-01,  2.8485e-02,  6.5231e-02, -2.1430e-01,
          2.5499e-01, -1.4390e-01, -6.2876e-02, -1.7273e-01,  3.1379e-01,
          2.3242e-01, -2.8141e-01, -8.3053e-02,  3.4899e-01, -7.3656e-02,
          9.3361e-02, -2.5729e-01,  2.7308e-01,  2.3156e-01, -4.4769e-01,
          4.5218e-01, -2.5803e-01, -1.8335e-01,  2.8491e-01,  1.7077e-01,
          1.7435e-02,  2.4022e-01, -1.9904e-01,  1.0952e-01,  2.2449e-01,
          1.3304e-01,  1.2046e-01, -2.8152e-01,  3.0847e-01, -4.8373e-02,
          1.9183e-01,  1.8824e-01, -9.2681e-02,  1.5681e-01,  2.0783e-01,
         -3.2731e-02,  1.6523e-01, -1.6572e-01, -6.2737e-02, -2.9050e-01,
         -1.3998e-01, -1.2584e-01, -9.8577e-03,  2.1277e-01,  3.8317e-01,
          5.0841e-01,  1.4971e-01,  3.5194e-01,  8.6842e-02, -1.9271e-01,
         -1.8980e-01,  8.8637e-01, -4.5058e-01, -5.9545e-02, -5.8059e-01,
         -5.8547e-02, -1.9078e-02, -4.2453e-01, -1.1325e-01, -1.4778e-01,
         -4.1242e-01, -4.0150e-01, -1.3608e-01, -3.3289e-01,  2.7830e-02,
          1.6586e-02, -2.9534e-03, -2.9511e-03,  1.2726e-01,  1.9043e-01,
          1.2900e-01, -5.5210e-02,  1.3494e-01,  1.1789e-01, -4.0581e-02,
          3.1268e-01, -4.4766e-02,  2.2232e-01, -1.3712e-01, -1.4963e-01,
          1.0113e-01,  8.1777e-03,  1.0869e-01, -1.5697e-01,  1.3826e-01,
          7.7995e-03,  1.7222e-01,  5.0219e-02, -1.0104e-01, -5.1861e-02,
         -1.6168e-02, -9.8847e-02,  2.1647e-01, -1.2244e-01,  9.6139e-02,
          5.7326e-02, -9.3038e-02,  2.5398e-02,  8.6365e-02,  2.9463e-02,
          4.4437e-02, -2.7217e-01, -1.7414e-01, -2.5258e-02, -1.1526e-01,
          1.6088e-01, -3.3935e-02,  4.0187e-02, -2.2182e-01, -1.6930e-01,
         -2.0798e-02,  3.8182e-02,  2.0931e-01,  2.5068e-02,  2.3662e-01,
          4.1222e-02]], device='cuda:0') tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
918000 特征值优化 tensor(11.8053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3039,  0.1882,  0.4165, -0.8117, -0.4044,  1.9934, -1.0513, -0.7539,
          1.8483,  0.0094, -0.0057,  1.2403, -0.2151, -0.7888, -1.5045,  0.7900,
         -0.4562, -0.0195, -0.6061,  0.2943, -0.6299,  0.4842, -0.0068,  0.4495,
         -0.5039, -0.0463,  0.4427, -0.4221,  0.6633, -0.0821,  0.0572,  0.0987,
          0.2101, -0.1506,  0.2920, -0.2608, -0.2681, -0.1340,  0.1866,  0.0225,
          0.5818, -0.0775,  0.3990,  0.1220, -0.0974, -0.0709,  0.1220, -0.1646,
         -1.0115, -0.6759,  0.2309,  0.5983,  0.1358,  0.8338, -0.0117, -0.6220,
          0.3987, -0.0309,  0.4069,  0.2512, -0.0230,  0.2650, -0.3930,  0.4824,
         -0.2960, -0.8068,  0.0795,  0.0472, -1.2038,  0.1634,  0.6540, -0.3257,
         -0.1379, -0.0181, -0.3663, -0.0259,  0.2716,  0.0075, -0.0946, -0.1460,
          0.5636,  0.0665,  0.2067,  0.0860,  0.1909, -0.5349,  0.5664,  0.3495,
         -0.0567,  0.2421,  0.2464, -0.1660,  0.1242, -0.7644,  1.1096, -0.4521,
          0.4970, -0.9810, -1.3655,  0.2238,  0.4667,  0.2237, -0.2467, -0.1869,
         -0.1271,  0.1874,  0.5708, -0.3006, -0.1437, -0.1907,  0.0723, -1.0375,
          0.1420, -0.8185,  0.0873,  1.6576,  0.1546, -0.3273,  0.2578, -0.0949,
          0.5892,  0.0027,  0.0159, -0.1486, -0.1650, -0.4644, -0.2290,  0.0968,
          0.3114, -0.0448,  0.2940, -0.0471,  0.1587, -0.3274, -0.0198, -0.3802,
          0.0652,  0.1420, -0.0934, -0.6906, -0.1051,  0.4989,  0.2433,  0.2405,
         -1.1620, -0.1753,  0.0474,  0.0298, -0.3045, -0.6094, -0.6647, -0.7337,
         -0.1289, -0.5712, -0.8011, -0.4969,  0.4618,  0.2249,  0.4579,  0.6406,
          0.0811]], device='cuda:0') tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
919000 特征值优化 tensor(1.9732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6882e+00, -9.3852e-02,  2.3081e-01, -8.8803e-01,  4.6104e-01,
          1.8263e+00, -8.8466e-01, -4.3214e-01,  1.4566e+00,  1.9234e-01,
          7.6304e-02,  7.0807e-01, -1.7455e-01, -6.0937e-01, -9.3139e-01,
          1.3876e-01,  1.3024e-01, -3.2446e-01, -1.9191e-01,  6.0423e-01,
         -3.9627e-01,  5.5111e-01, -4.8835e-03, -2.4026e-01,  2.5706e-02,
         -4.8032e-01, -6.2727e-02, -5.5454e-01,  1.1265e-01, -1.0507e-01,
          1.0018e-01, -1.1132e-01,  3.2920e-02,  2.6792e-01, -1.1480e-01,
         -3.5805e-01, -8.5849e-02, -3.4344e-01, -3.6608e-01,  4.9220e-02,
          1.4519e-01,  1.2052e-01,  9.0240e-02,  3.5755e-01, -1.2827e-01,
         -1.0500e-01, -9.0547e-02,  8.8918e-02, -3.3703e-01, -3.7294e-01,
          8.1974e-02,  1.9005e-01, -1.3638e-01,  5.4294e-01, -1.0431e-01,
         -1.4200e-01,  1.2723e-02, -1.9177e-01,  6.7617e-01,  2.3255e-01,
          2.4023e-01,  4.1237e-01, -2.1595e-01, -1.7465e-01, -4.0905e-02,
         -1.5697e-01, -3.2040e-03,  1.4687e-01, -6.5739e-01,  1.4101e-03,
          4.1093e-01, -1.7632e-01,  1.6808e-02, -2.0493e-01,  1.8924e-01,
          1.3772e-01,  2.2449e-01,  5.0733e-02, -1.6474e-01,  1.8660e-01,
          1.8303e-01,  2.0276e-01, -1.6752e-02, -9.1049e-02,  4.9511e-03,
         -2.9429e-01,  3.1768e-01,  1.5503e-01, -2.8505e-02,  4.2014e-02,
          4.2366e-01, -3.7352e-01,  2.2660e-01,  1.0273e-01,  4.8579e-01,
         -6.4724e-01,  5.6387e-01, -5.2701e-01, -3.5060e-01, -1.5111e-02,
          4.5432e-01,  3.3511e-01,  3.1202e-01,  3.9755e-02, -1.7039e-01,
          3.7983e-01,  8.9867e-01, -3.4638e-01, -3.6400e-01, -8.7670e-02,
          8.6081e-02, -2.7035e-01, -4.3397e-02, -3.5715e-01, -5.0165e-02,
          7.3177e-01, -3.8959e-03, -8.9719e-02,  3.9350e-02, -1.7312e-01,
          1.6117e-01, -1.1431e-01, -1.0824e-01, -2.4469e-01, -5.5113e-02,
         -2.7724e-02, -1.4993e-01,  1.9177e-01,  7.0789e-02, -6.0762e-02,
          7.6822e-02, -2.5191e-02,  9.8175e-02, -1.2869e-01,  1.5864e-01,
         -2.6625e-01, -1.9024e-01,  2.7332e-01,  4.4814e-02, -2.9731e-02,
          1.9560e-01,  2.5979e-01, -2.9320e-01, -1.7169e-01, -4.7583e-01,
         -1.1100e-01,  5.3546e-01,  9.9068e-02,  1.3746e-02, -7.7611e-02,
         -2.3340e-01, -4.0715e-01, -1.4956e-01, -2.3780e-01, -3.5938e-01,
         -3.5156e-01,  9.7902e-02,  1.7680e-01,  1.0441e-01,  3.0517e-01,
         -3.9320e-02]], device='cuda:0') tensor(0.2174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
920000 特征值优化 tensor(1.1346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2510e+00, -2.8139e-01,  5.0650e-01, -8.4894e-01,  4.3917e-01,
          1.7662e+00, -3.2919e-01, -7.7698e-01,  1.3313e+00,  1.3819e-01,
          2.2466e-01,  4.5965e-01,  1.2411e-01, -5.4146e-01, -8.8715e-01,
         -1.8127e-01,  2.5500e-01, -5.5434e-01, -3.2537e-01,  4.2723e-01,
         -5.3310e-01,  2.3580e-01,  7.9453e-02, -4.7410e-01,  1.8158e-01,
         -6.7594e-01, -1.6667e-01, -6.4092e-01, -1.0726e-03, -5.9294e-02,
          2.1266e-01, -1.1147e-01,  4.1323e-02,  3.1570e-01, -2.8987e-02,
         -1.6920e-01, -3.6652e-02, -3.0904e-01, -3.8090e-01,  9.1147e-02,
          5.0354e-02,  1.3062e-01,  1.0085e-01,  4.4594e-01, -1.9077e-01,
          7.5303e-03, -2.8352e-03,  1.7026e-01, -2.2724e-01, -5.3953e-01,
          1.0729e-01,  8.7411e-02, -2.2623e-01,  5.7219e-01, -2.8975e-01,
         -2.1395e-01, -2.6606e-01, -4.1131e-01,  7.4076e-01, -9.6935e-03,
          2.9014e-01,  3.3812e-01, -2.2487e-01, -8.5870e-02, -3.4175e-02,
         -2.2703e-02, -1.3437e-02,  5.4626e-02, -6.4061e-01, -7.7786e-02,
          3.0931e-01, -1.8867e-01,  2.6037e-02, -2.6698e-01,  2.2906e-01,
          1.6847e-01,  3.2807e-01, -7.3325e-03, -1.6992e-01,  2.2846e-01,
          2.2558e-01,  1.7547e-01, -1.5862e-01, -1.3094e-01, -1.3789e-01,
         -2.3129e-01,  2.6780e-01,  5.4423e-02, -1.1603e-02, -9.3124e-02,
          2.7526e-01, -2.8457e-01, -3.6302e-02,  2.6229e-02,  3.4239e-01,
         -6.5335e-01,  7.9374e-01, -4.4167e-01, -7.4149e-02, -1.0276e-01,
          4.0121e-01,  4.2200e-01,  2.1905e-01, -1.8937e-01, -2.6276e-01,
          2.2973e-01,  9.2433e-01, -2.8915e-01, -1.7992e-01, -1.0444e-01,
          1.2837e-01, -7.3653e-02, -9.4398e-02, -3.0791e-01, -3.6524e-02,
          4.2251e-01, -4.4457e-02, -3.7861e-02,  1.0359e-01,  3.4511e-03,
          1.1768e-01, -1.3628e-02, -5.0759e-02, -1.4058e-01, -7.0341e-02,
          3.6874e-02, -1.8398e-01,  1.5903e-01,  1.1703e-01, -3.9060e-02,
         -3.0574e-02, -5.5749e-02,  1.9899e-02, -8.2033e-02,  1.4811e-01,
         -1.2786e-01, -1.8296e-02,  1.7774e-01,  2.8112e-01,  2.4532e-01,
          1.0865e-01,  2.8639e-01, -3.5665e-01, -1.3450e-01, -3.6658e-01,
         -1.5173e-01,  4.2635e-01,  1.8857e-02,  9.8525e-02,  1.1158e-01,
         -1.6459e-01, -3.3565e-01, -1.3084e-01, -2.5974e-01, -2.3379e-01,
         -2.2872e-01,  2.3610e-01,  5.8819e-02, -2.1446e-02,  3.7863e-01,
         -2.6347e-02]], device='cuda:0') tensor(0.2460, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
921000 特征值优化 tensor(1.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.6406e-01, -4.9036e-01,  7.3143e-01, -9.0881e-01,  3.5149e-01,
          1.9054e+00, -9.1765e-02, -7.7519e-01,  1.2667e+00,  8.6234e-02,
          3.5184e-01,  3.2843e-01,  1.1335e-01, -5.7519e-01, -9.0144e-01,
         -2.3947e-01,  2.4119e-01, -5.1032e-01, -3.0701e-01,  3.5964e-01,
         -6.1737e-01,  6.6497e-02, -1.6119e-02, -4.2788e-01,  1.7543e-01,
         -8.1441e-01, -1.7519e-01, -6.2129e-01, -6.4626e-02,  1.3073e-02,
          2.8196e-01, -2.3236e-02, -6.5542e-02,  2.7867e-01, -4.3567e-02,
         -1.3927e-01, -1.3786e-03, -3.0550e-01, -3.7755e-01,  1.2548e-01,
          5.6481e-03,  1.2399e-01,  1.0931e-01,  4.8472e-01, -2.6050e-01,
          5.3302e-02,  9.5171e-02,  1.4353e-01, -2.4424e-01, -6.0823e-01,
          1.3851e-01,  1.1949e-02, -1.7742e-01,  5.1852e-01, -3.0101e-01,
         -2.1885e-01, -3.7471e-01, -4.6175e-01,  8.0388e-01, -9.1677e-02,
          3.1261e-01,  2.9342e-01, -2.3705e-01, -1.0924e-01, -3.1931e-02,
         -4.3288e-02, -9.8184e-03,  7.6164e-03, -6.1519e-01, -1.4965e-01,
          2.1427e-01, -1.4725e-01,  8.2504e-02, -2.9492e-01,  2.2082e-01,
          1.4868e-01,  3.0946e-01, -8.2479e-05, -1.6997e-01,  2.2411e-01,
          2.6264e-01,  1.6270e-01, -2.2321e-01, -1.1870e-01, -1.6231e-01,
         -2.1702e-01,  1.7479e-01,  8.9309e-02,  4.9719e-02, -7.2179e-02,
          2.0001e-01, -2.5956e-01, -1.2464e-01, -3.1466e-02,  3.5067e-01,
         -7.1690e-01,  8.3249e-01, -4.9876e-01, -3.9271e-02, -2.3602e-01,
          4.1012e-01,  4.2917e-01,  2.5449e-01, -2.8587e-01, -3.4973e-01,
          7.6096e-02,  8.7569e-01, -2.1032e-01, -2.4650e-01, -6.9955e-02,
          1.0091e-01, -1.2818e-02, -8.4307e-02, -2.8254e-01, -3.9280e-02,
          3.5895e-01, -1.0329e-01,  2.9201e-02,  7.7700e-02,  7.5601e-02,
          1.1070e-01,  5.5948e-02, -5.8192e-02, -7.8282e-02, -4.5073e-02,
          3.5800e-02, -1.8952e-01,  1.1017e-01,  1.4779e-01, -1.6826e-02,
         -3.0233e-02, -9.8665e-02,  7.5285e-02, -4.3807e-02,  1.1397e-01,
         -1.2210e-01, -5.6068e-02,  8.8886e-02,  3.4282e-01,  1.9435e-01,
          9.8770e-02,  3.1204e-01, -2.5136e-01, -1.1423e-01, -3.3401e-01,
         -1.5303e-01,  4.1241e-01, -3.7023e-02,  6.6326e-02,  1.3485e-01,
         -1.3094e-01, -2.9777e-01, -1.1022e-01, -2.6694e-01, -1.8160e-01,
         -1.7338e-01,  2.9331e-01,  4.2143e-02, -9.2159e-02,  3.7536e-01,
         -5.6393e-02]], device='cuda:0') tensor(0.2290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
922000 特征值优化 tensor(1.0590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6862, -0.5536,  0.8695, -0.9125,  0.2422,  2.1090, -0.0060, -0.6370,
          1.1135,  0.0910,  0.4183,  0.2182,  0.1226, -0.5282, -0.8655, -0.2344,
          0.2669, -0.4693, -0.2551,  0.3799, -0.7337, -0.0402, -0.1098, -0.3400,
          0.1657, -0.9053, -0.1526, -0.5768, -0.0975,  0.0214,  0.3114,  0.0140,
         -0.0734,  0.2572, -0.0400, -0.1515,  0.0058, -0.2842, -0.3583,  0.1797,
         -0.0327,  0.1215,  0.1097,  0.5101, -0.2830,  0.0673,  0.1414,  0.0975,
         -0.2514, -0.6173,  0.1445,  0.0085, -0.1859,  0.4981, -0.3062, -0.2261,
         -0.3868, -0.4740,  0.8105, -0.0817,  0.3512,  0.3001, -0.2315, -0.1416,
         -0.0505, -0.0693,  0.0306, -0.0041, -0.5893, -0.1919,  0.1500, -0.0932,
          0.1288, -0.2909,  0.1980,  0.1373,  0.3405,  0.0061, -0.1752,  0.2098,
          0.2538,  0.1724, -0.2371, -0.1303, -0.1916, -0.2389,  0.1296,  0.1449,
          0.0465, -0.1263,  0.1861, -0.2840, -0.1696, -0.0030,  0.3473, -0.7488,
          0.8272, -0.5306, -0.0516, -0.3023,  0.4488,  0.3875,  0.2477, -0.3195,
         -0.4340,  0.0382,  0.8239, -0.1230, -0.2887, -0.0671,  0.0868, -0.0102,
         -0.0657, -0.2552, -0.0493,  0.3258, -0.1100,  0.0441,  0.0709,  0.1074,
          0.1061,  0.0838, -0.0795, -0.0183, -0.0263,  0.0409, -0.1796,  0.0971,
          0.1795, -0.0221, -0.0376, -0.0868,  0.1241, -0.0505,  0.0778, -0.1019,
         -0.0362,  0.0325,  0.3029,  0.1552,  0.1018,  0.3453, -0.1894, -0.1025,
         -0.2995, -0.1415,  0.4203, -0.0576,  0.0285,  0.1212, -0.1202, -0.2914,
         -0.0969, -0.2497, -0.1655, -0.1758,  0.3156,  0.0547, -0.1113,  0.3458,
         -0.0709]], device='cuda:0') tensor(0.2053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
923000 特征值优化 tensor(1.0490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8171e-01, -5.6030e-01,  8.9822e-01, -9.1261e-01,  1.1538e-01,
          2.3195e+00,  6.9180e-02, -5.4236e-01,  9.7328e-01,  5.8936e-02,
          4.2654e-01,  1.6947e-01,  1.1455e-01, -5.1701e-01, -8.1391e-01,
         -2.4758e-01,  3.0203e-01, -4.8330e-01, -2.2665e-01,  3.8300e-01,
         -7.6804e-01, -1.1708e-01, -1.4345e-01, -3.1755e-01,  1.6942e-01,
         -9.8982e-01, -1.4609e-01, -5.6762e-01, -1.2831e-01,  3.1615e-02,
          3.1302e-01,  3.5508e-02, -7.3028e-02,  2.2040e-01, -5.6874e-02,
         -1.7072e-01,  6.5669e-03, -2.7546e-01, -3.3961e-01,  2.1268e-01,
         -3.9320e-02,  1.1987e-01,  1.0371e-01,  5.1627e-01, -2.9522e-01,
          6.6979e-02,  2.0667e-01,  7.2004e-02, -2.4279e-01, -5.9360e-01,
          1.6220e-01,  1.9884e-02, -1.7736e-01,  4.8324e-01, -2.9599e-01,
         -2.2498e-01, -4.0372e-01, -4.9795e-01,  8.0668e-01, -7.2188e-02,
          4.0347e-01,  3.2000e-01, -2.2847e-01, -1.6500e-01, -4.9881e-02,
         -8.2333e-02,  4.0233e-02,  2.1152e-03, -5.7915e-01, -2.1528e-01,
          1.3745e-01, -7.9738e-02,  1.2525e-01, -2.6350e-01,  1.7876e-01,
          1.3682e-01,  3.6850e-01, -1.9525e-02, -1.6516e-01,  2.0017e-01,
          2.4185e-01,  1.6641e-01, -2.4823e-01, -1.1580e-01, -1.8444e-01,
         -2.5541e-01,  9.0176e-02,  2.1996e-01,  5.2274e-02, -1.3530e-01,
          1.9493e-01, -3.0557e-01, -1.7697e-01,  4.4009e-02,  3.6260e-01,
         -7.4540e-01,  8.0067e-01, -5.1573e-01, -8.5308e-02, -3.1369e-01,
          4.4316e-01,  3.3362e-01,  2.3337e-01, -3.8647e-01, -4.6948e-01,
          4.4299e-02,  8.1836e-01, -6.3851e-02, -3.1656e-01, -6.3231e-02,
          8.0961e-02, -1.4929e-02, -5.5807e-02, -2.3220e-01, -4.5769e-02,
          3.0869e-01, -1.0682e-01,  3.7109e-02,  9.3888e-02,  1.0111e-01,
          1.1570e-01,  1.0099e-01, -8.0472e-02, -2.3534e-04, -1.0442e-02,
          4.9464e-02, -1.6815e-01,  8.0957e-02,  1.6707e-01, -2.7304e-02,
         -3.8299e-02, -9.5826e-02,  1.0840e-01, -5.8113e-02,  6.4297e-02,
         -8.1202e-02, -2.0173e-02,  6.1811e-03,  2.7802e-01,  1.3048e-01,
          8.4293e-02,  3.5525e-01, -1.7601e-01, -1.0041e-01, -2.8449e-01,
         -1.2627e-01,  4.1434e-01, -5.3120e-02,  8.4641e-03,  1.0827e-01,
         -1.1589e-01, -2.8447e-01, -9.7162e-02, -2.2901e-01, -1.4239e-01,
         -1.6134e-01,  3.1354e-01,  4.4955e-02, -1.4792e-01,  3.0721e-01,
         -8.0439e-02]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
924000 特征值优化 tensor(1.0793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1101e-01, -5.3737e-01,  9.1699e-01, -9.1709e-01,  2.3430e-02,
          2.4704e+00,  1.3382e-01, -5.0077e-01,  8.8365e-01,  4.1189e-02,
          3.9849e-01,  1.3614e-01,  1.2363e-01, -5.3612e-01, -7.4515e-01,
         -2.7351e-01,  3.3395e-01, -4.7484e-01, -1.7672e-01,  3.8091e-01,
         -7.8620e-01, -1.9017e-01, -1.6142e-01, -2.8761e-01,  2.0019e-01,
         -1.0213e+00, -1.1900e-01, -5.7498e-01, -1.5996e-01,  3.7316e-02,
          3.0240e-01,  7.1578e-02, -9.6323e-02,  2.0775e-01, -7.6100e-02,
         -1.8925e-01, -1.4901e-03, -2.6005e-01, -3.3045e-01,  2.2169e-01,
         -4.0124e-02,  1.1947e-01,  1.0672e-01,  5.2466e-01, -2.9353e-01,
          5.8726e-02,  2.5032e-01,  7.9625e-02, -2.4200e-01, -5.6941e-01,
          1.5959e-01,  2.8289e-02, -1.5707e-01,  4.8354e-01, -2.7637e-01,
         -2.2970e-01, -4.0670e-01, -5.0867e-01,  7.9721e-01, -5.6675e-02,
          4.5208e-01,  3.5996e-01, -2.1751e-01, -1.7680e-01, -3.4568e-02,
         -6.6705e-02,  3.5940e-02,  8.4094e-03, -5.6208e-01, -2.5221e-01,
          1.3354e-01, -5.2092e-02,  1.0460e-01, -2.5564e-01,  1.7178e-01,
          1.3196e-01,  3.7190e-01, -4.1408e-02, -1.3567e-01,  1.9197e-01,
          2.4691e-01,  1.6760e-01, -2.4264e-01, -1.1480e-01, -1.8810e-01,
         -2.5163e-01,  4.4625e-02,  2.8849e-01,  2.5394e-02, -1.5292e-01,
          1.8881e-01, -2.9987e-01, -1.9882e-01,  7.8568e-02,  3.5076e-01,
         -7.5613e-01,  7.6840e-01, -5.0091e-01, -1.3057e-01, -3.4335e-01,
          4.1307e-01,  2.8912e-01,  2.0251e-01, -4.2077e-01, -4.8363e-01,
          5.8123e-02,  7.9812e-01, -1.8307e-02, -3.2729e-01, -6.0504e-02,
          7.4306e-02, -1.4729e-02, -4.8974e-02, -2.0893e-01, -4.8269e-02,
          2.8854e-01, -1.1314e-01,  3.9212e-02,  1.2626e-01,  8.7136e-02,
          1.2676e-01,  1.1638e-01, -9.1177e-02, -1.5849e-03, -3.8052e-04,
          5.5428e-02, -1.4720e-01,  5.3332e-02,  1.6119e-01, -2.5848e-02,
         -5.6045e-02, -1.0316e-01,  1.0063e-01, -5.6373e-02,  5.9315e-02,
         -7.4643e-02, -2.4018e-02, -1.7390e-02,  2.8399e-01,  1.4708e-01,
          5.2874e-02,  3.3815e-01, -1.6263e-01, -1.0734e-01, -2.7565e-01,
         -1.2085e-01,  3.9665e-01, -5.0893e-02,  2.5577e-03,  1.0645e-01,
         -1.1468e-01, -2.8391e-01, -1.0684e-01, -1.9674e-01, -1.2041e-01,
         -1.4064e-01,  3.0296e-01,  6.5802e-03, -1.8414e-01,  2.9238e-01,
         -9.5891e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
925000 特征值优化 tensor(1.0857, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 8.9061e-02, -5.5268e-01,  9.8205e-01, -9.3669e-01, -5.4944e-03,
          2.5659e+00,  1.6082e-01, -4.6472e-01,  8.1127e-01,  4.1939e-02,
          3.4680e-01,  9.2907e-02,  1.3822e-01, -5.4566e-01, -6.9443e-01,
         -2.8954e-01,  3.5895e-01, -4.8097e-01, -1.1872e-01,  3.8885e-01,
         -7.7679e-01, -2.2029e-01, -1.4463e-01, -2.9321e-01,  2.1902e-01,
         -1.0561e+00, -1.1442e-01, -5.6209e-01, -2.0002e-01,  4.7242e-02,
          3.0153e-01,  7.4165e-02, -6.9634e-02,  2.4226e-01, -7.7388e-02,
         -1.9551e-01, -7.5283e-03, -2.5377e-01, -3.1009e-01,  2.4793e-01,
         -4.1949e-02,  1.2266e-01,  1.1634e-01,  5.0604e-01, -3.0363e-01,
          6.7547e-02,  2.8225e-01,  7.5944e-02, -2.3485e-01, -5.6141e-01,
          1.4272e-01,  4.9457e-02, -1.3676e-01,  4.9430e-01, -2.7705e-01,
         -2.1672e-01, -4.0314e-01, -4.8779e-01,  7.9424e-01, -3.1448e-02,
          4.9298e-01,  4.0955e-01, -1.9954e-01, -1.8116e-01, -4.6395e-02,
         -6.1715e-02,  3.1556e-02,  8.6283e-04, -5.5165e-01, -2.7266e-01,
          1.2886e-01, -2.3549e-02,  9.6730e-02, -2.7040e-01,  1.4458e-01,
          1.0814e-01,  3.9224e-01, -6.3384e-02, -1.3385e-01,  2.1099e-01,
          2.6527e-01,  1.6190e-01, -2.4337e-01, -1.0773e-01, -1.7926e-01,
         -2.7649e-01,  3.2283e-02,  3.4205e-01,  3.8110e-02, -1.7981e-01,
          1.8478e-01, -2.9833e-01, -2.1258e-01,  1.3177e-01,  3.4963e-01,
         -7.6767e-01,  7.5879e-01, -5.1411e-01, -1.6685e-01, -4.0480e-01,
          3.7865e-01,  2.6275e-01,  1.6427e-01, -4.4744e-01, -4.8378e-01,
          9.2325e-02,  7.6698e-01,  2.4007e-02, -3.2418e-01, -5.5747e-02,
          5.9289e-02, -8.6610e-03, -3.3799e-02, -2.0178e-01, -6.4300e-02,
          2.7235e-01, -1.1812e-01,  6.0309e-02,  1.2657e-01,  7.2583e-02,
          1.3382e-01,  1.2810e-01, -1.0318e-01,  5.1038e-03,  8.1420e-03,
          5.3162e-02, -1.3372e-01,  4.7159e-02,  1.5918e-01, -1.6947e-02,
         -5.9672e-02, -9.7223e-02,  9.4402e-02, -7.3653e-02,  4.7064e-02,
         -5.3951e-02,  8.1438e-04, -5.3541e-02,  2.4426e-01,  1.1708e-01,
          5.0488e-02,  3.4472e-01, -1.3757e-01, -1.2279e-01, -2.7391e-01,
         -1.0270e-01,  4.0308e-01, -3.7933e-02,  4.9373e-03,  1.0500e-01,
         -9.2583e-02, -2.6107e-01, -1.0800e-01, -2.0354e-01, -1.0721e-01,
         -1.3726e-01,  2.8652e-01, -3.0005e-02, -2.0706e-01,  2.5329e-01,
         -1.0267e-01]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
926000 正交保障 tensor(0.2541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.0855e-02, -5.6775e-01,  9.8252e-01, -9.4072e-01,  1.0515e-02,
          2.6578e+00,  1.7022e-01, -4.6706e-01,  7.7655e-01,  3.5685e-02,
          2.8259e-01,  6.5368e-02,  1.6773e-01, -5.7982e-01, -6.4223e-01,
         -2.8719e-01,  3.6255e-01, -5.1909e-01, -7.6922e-02,  3.8928e-01,
         -7.4865e-01, -2.3720e-01, -1.3815e-01, -2.7161e-01,  2.3630e-01,
         -1.0584e+00, -1.2854e-01, -5.6081e-01, -2.1863e-01,  4.6519e-02,
          2.9958e-01,  8.6335e-02, -5.4336e-02,  2.7317e-01, -5.7030e-02,
         -2.1043e-01,  9.4844e-03, -2.5307e-01, -3.2226e-01,  2.8016e-01,
         -1.4127e-02,  1.2680e-01,  1.1995e-01,  5.0466e-01, -3.1416e-01,
          3.4650e-02,  2.9010e-01,  9.2619e-02, -2.1798e-01, -5.5851e-01,
          1.3462e-01,  8.1699e-02, -1.2022e-01,  5.0454e-01, -2.6057e-01,
         -2.3643e-01, -4.1021e-01, -4.6666e-01,  7.6707e-01, -1.0691e-02,
          5.1605e-01,  4.4529e-01, -1.7894e-01, -1.5994e-01, -5.0837e-02,
         -8.3860e-02,  2.8059e-02,  1.5210e-04, -5.4282e-01, -2.8973e-01,
          1.2895e-01,  5.9140e-03,  1.0213e-01, -2.5738e-01,  1.2406e-01,
          9.2865e-02,  4.1644e-01, -7.4056e-02, -1.5568e-01,  2.2293e-01,
          2.4906e-01,  1.5391e-01, -2.5916e-01, -9.4528e-02, -1.7518e-01,
         -2.7975e-01,  2.1731e-02,  3.7425e-01,  1.6331e-02, -1.9597e-01,
          1.7784e-01, -2.8502e-01, -2.3787e-01,  1.8580e-01,  3.5853e-01,
         -7.6827e-01,  7.5954e-01, -4.6929e-01, -1.8299e-01, -4.3878e-01,
          3.4844e-01,  2.5869e-01,  1.2272e-01, -4.5083e-01, -4.7359e-01,
          1.0558e-01,  7.6553e-01,  4.1720e-02, -3.2118e-01, -5.7729e-02,
          5.3915e-02, -7.7767e-03, -3.0908e-02, -1.9391e-01, -6.1336e-02,
          2.6148e-01, -1.3273e-01,  6.1344e-02,  1.5278e-01,  7.2432e-02,
          1.2958e-01,  1.2130e-01, -1.0631e-01,  9.9255e-03,  1.5980e-02,
          5.6922e-02, -1.2344e-01,  4.7034e-02,  1.5726e-01, -7.4930e-03,
         -5.7343e-02, -1.0331e-01,  9.9564e-02, -8.2072e-02,  4.2331e-02,
         -3.0478e-02,  4.8185e-03, -5.8261e-02,  2.0688e-01,  1.2061e-01,
          3.9747e-02,  3.2116e-01, -8.9163e-02, -1.3810e-01, -2.9221e-01,
         -1.0800e-01,  4.0902e-01, -3.1120e-02, -1.3542e-02,  1.0294e-01,
         -7.6581e-02, -2.5332e-01, -1.1629e-01, -1.9779e-01, -9.7061e-02,
         -1.2847e-01,  2.6823e-01, -5.5716e-02, -2.1478e-01,  2.3482e-01,
         -1.1578e-01]], device='cuda:0') tensor(0.2541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
927000 特征值优化 tensor(1.0381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1587, -0.5715,  0.9565, -0.9395,  0.0278,  2.7242,  0.1952, -0.4564,
          0.7785,  0.0181,  0.2420,  0.0624,  0.1954, -0.6120, -0.6001, -0.2850,
          0.3602, -0.5452, -0.0527,  0.4002, -0.7211, -0.2355, -0.1457, -0.2510,
          0.2595, -1.0642, -0.1192, -0.5648, -0.2262,  0.0625,  0.2964,  0.0748,
         -0.0448,  0.2773, -0.0522, -0.2158, -0.0095, -0.2418, -0.3054,  0.2710,
          0.0093,  0.1250,  0.1092,  0.4895, -0.3277,  0.0418,  0.3086,  0.1055,
         -0.2130, -0.5511,  0.1251,  0.1180, -0.1100,  0.5104, -0.2469, -0.2214,
         -0.4173, -0.4617,  0.7595,  0.0060,  0.5541,  0.4546, -0.1506, -0.1608,
         -0.0621, -0.0960,  0.0206, -0.0042, -0.5301, -0.2983,  0.1134,  0.0150,
          0.1064, -0.2613,  0.1316,  0.0902,  0.3976, -0.0954, -0.1354,  0.2222,
          0.2513,  0.1542, -0.2356, -0.1085, -0.1747, -0.2651,  0.0147,  0.3934,
          0.0059, -0.1911,  0.1866, -0.2835, -0.2430,  0.1845,  0.3518, -0.7588,
          0.7476, -0.4883, -0.2164, -0.4752,  0.3175,  0.2471,  0.1187, -0.4663,
         -0.4566,  0.1100,  0.7452,  0.0388, -0.3245, -0.0585,  0.0511, -0.0122,
         -0.0093, -0.1829, -0.0529,  0.2589, -0.1285,  0.0607,  0.1617,  0.0612,
          0.1326,  0.1295, -0.1096,  0.0064,  0.0178,  0.0541, -0.1258,  0.0366,
          0.1562, -0.0063, -0.0702, -0.0967,  0.0927, -0.0862,  0.0593, -0.0386,
          0.0099, -0.0739,  0.2049,  0.1269,  0.0281,  0.3144, -0.1155, -0.1389,
         -0.2730, -0.1168,  0.4147, -0.0173, -0.0233,  0.1079, -0.0902, -0.2549,
         -0.1221, -0.1829, -0.0834, -0.1251,  0.2578, -0.0581, -0.2295,  0.2357,
         -0.1148]], device='cuda:0') tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
928000 特征值优化 tensor(1.0849, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0985e-01, -5.5570e-01,  9.5402e-01, -9.5008e-01,  4.8214e-02,
          2.7721e+00,  2.0239e-01, -4.5581e-01,  7.3706e-01,  8.7169e-03,
          1.9572e-01,  5.0127e-02,  2.2691e-01, -6.2721e-01, -5.7982e-01,
         -2.7019e-01,  3.5576e-01, -5.6059e-01, -2.1559e-02,  4.1789e-01,
         -6.8690e-01, -2.2374e-01, -1.4725e-01, -2.3281e-01,  2.7041e-01,
         -1.0606e+00, -1.1718e-01, -5.4816e-01, -2.3578e-01,  6.9029e-02,
          2.8917e-01,  7.4082e-02, -3.9172e-02,  3.0182e-01, -4.3626e-02,
         -2.3186e-01,  3.1904e-03, -2.4733e-01, -3.0567e-01,  2.9434e-01,
          1.6654e-02,  1.2790e-01,  1.1934e-01,  4.9209e-01, -3.3685e-01,
          3.4398e-02,  3.0985e-01,  1.1235e-01, -1.9915e-01, -5.4616e-01,
          1.2001e-01,  1.5083e-01, -9.0603e-02,  5.0779e-01, -2.4166e-01,
         -2.3512e-01, -4.2868e-01, -4.4152e-01,  7.5602e-01,  2.0926e-02,
          5.5864e-01,  4.7256e-01, -1.3548e-01, -1.5487e-01, -7.1735e-02,
         -9.9832e-02,  1.6183e-02, -3.0612e-04, -5.2297e-01, -3.0580e-01,
          1.0574e-01,  2.9972e-02,  1.1558e-01, -2.6703e-01,  1.1909e-01,
          8.2588e-02,  4.0838e-01, -1.0597e-01, -1.5257e-01,  2.3184e-01,
          2.4855e-01,  1.4641e-01, -2.4054e-01, -1.0174e-01, -1.6887e-01,
         -2.6431e-01,  1.2654e-02,  4.1382e-01,  2.2466e-02, -1.9433e-01,
          1.8361e-01, -2.7462e-01, -2.6131e-01,  2.1412e-01,  3.5408e-01,
         -7.6724e-01,  7.4671e-01, -4.5783e-01, -2.4130e-01, -5.0865e-01,
          2.9743e-01,  2.4544e-01,  9.1081e-02, -4.6643e-01, -4.4762e-01,
          1.1448e-01,  7.4011e-01,  3.6820e-02, -3.3686e-01, -6.0139e-02,
          5.0724e-02, -1.4173e-02, -1.0536e-02, -1.7625e-01, -3.8998e-02,
          2.5191e-01, -1.3261e-01,  7.1536e-02,  1.7107e-01,  7.3936e-02,
          1.2768e-01,  1.3135e-01, -1.1790e-01,  2.4641e-02,  1.8087e-02,
          5.5981e-02, -1.1980e-01,  2.7438e-02,  1.5977e-01, -4.8938e-03,
         -6.8104e-02, -9.3280e-02,  9.3435e-02, -9.7924e-02,  5.1866e-02,
         -2.9677e-02,  2.6871e-02, -6.5859e-02,  1.7979e-01,  1.1069e-01,
          2.6578e-02,  3.0248e-01, -9.4184e-02, -1.4488e-01, -2.9080e-01,
         -1.2134e-01,  4.2372e-01, -3.9916e-03, -2.8432e-02,  1.0524e-01,
         -9.6343e-02, -2.4423e-01, -1.2066e-01, -1.8874e-01, -7.7189e-02,
         -1.3203e-01,  2.4271e-01, -6.6320e-02, -2.4598e-01,  2.2435e-01,
         -1.2328e-01]], device='cuda:0') tensor(0.2137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
929000 特征值优化 tensor(1.1074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2981e-01, -5.6325e-01,  9.4514e-01, -9.5483e-01,  4.2444e-02,
          2.7910e+00,  2.1791e-01, -4.5407e-01,  7.4523e-01, -1.7090e-02,
          1.7211e-01,  6.7017e-02,  2.4951e-01, -6.4401e-01, -5.2716e-01,
         -2.7541e-01,  3.4010e-01, -5.7781e-01, -2.7279e-03,  4.3416e-01,
         -6.6491e-01, -2.1742e-01, -1.5074e-01, -2.2911e-01,  2.9563e-01,
         -1.0585e+00, -1.0218e-01, -5.5683e-01, -2.2073e-01,  8.0116e-02,
          2.8226e-01,  5.6789e-02, -5.4322e-02,  2.8923e-01, -3.7048e-02,
         -2.3103e-01, -3.4513e-02, -2.1518e-01, -2.9553e-01,  2.8792e-01,
          3.3745e-02,  1.2896e-01,  1.1296e-01,  4.9163e-01, -3.5049e-01,
          3.9773e-02,  3.2226e-01,  1.1713e-01, -1.7703e-01, -5.3376e-01,
          1.2079e-01,  1.4873e-01, -8.5117e-02,  5.1147e-01, -2.3621e-01,
         -2.2651e-01, -4.4740e-01, -4.1897e-01,  7.2624e-01,  2.6501e-02,
          6.0117e-01,  4.7475e-01, -1.1134e-01, -1.5660e-01, -8.6003e-02,
         -1.2603e-01,  1.6225e-02,  8.6401e-03, -5.2311e-01, -3.0691e-01,
          9.9679e-02,  3.7377e-02,  1.0060e-01, -2.9116e-01,  1.2179e-01,
          9.0224e-02,  3.8581e-01, -1.1878e-01, -1.2233e-01,  2.2155e-01,
          2.4945e-01,  1.5881e-01, -2.2800e-01, -1.2924e-01, -1.8772e-01,
         -2.3914e-01, -2.8419e-03,  4.2533e-01,  9.7541e-03, -2.0654e-01,
          1.7276e-01, -2.6725e-01, -2.6837e-01,  1.9874e-01,  3.4357e-01,
         -7.6415e-01,  7.3517e-01, -4.7819e-01, -2.7440e-01, -5.3030e-01,
          2.7271e-01,  2.5068e-01,  1.0636e-01, -4.4994e-01, -4.2792e-01,
          1.2462e-01,  7.2404e-01,  3.2759e-02, -3.2450e-01, -5.8098e-02,
          4.0261e-02, -1.3882e-02,  2.1730e-04, -1.5785e-01, -5.0501e-02,
          2.4904e-01, -1.4750e-01,  7.2949e-02,  1.9651e-01,  6.9773e-02,
          1.3507e-01,  1.3399e-01, -1.2727e-01,  3.0056e-02,  2.2583e-02,
          5.6278e-02, -1.2148e-01,  2.5601e-02,  1.7089e-01, -1.4797e-02,
         -7.6675e-02, -9.2419e-02,  1.0438e-01, -9.1054e-02,  7.9056e-02,
         -3.0100e-02,  7.9207e-03, -1.0317e-01,  2.0122e-01,  1.3915e-01,
          9.4112e-03,  3.0162e-01, -1.1432e-01, -1.3504e-01, -2.5501e-01,
         -1.4358e-01,  4.2455e-01, -3.5693e-03, -4.5724e-02,  1.0546e-01,
         -1.1788e-01, -2.4579e-01, -1.2440e-01, -1.6364e-01, -7.1546e-02,
         -1.2344e-01,  2.2962e-01, -7.4308e-02, -2.5185e-01,  2.4179e-01,
         -1.2746e-01]], device='cuda:0') tensor(0.2351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
930000 特征值优化 tensor(1.0246, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4017e-01, -5.9294e-01,  9.4379e-01, -9.4328e-01,  2.3661e-02,
          2.8066e+00,  2.0214e-01, -4.6738e-01,  7.5697e-01, -3.8639e-02,
          1.3484e-01,  6.1074e-02,  2.8227e-01, -6.6480e-01, -5.2123e-01,
         -2.5833e-01,  3.2596e-01, -5.7991e-01,  2.2590e-02,  4.3912e-01,
         -6.4317e-01, -2.1400e-01, -1.4069e-01, -2.2385e-01,  2.7280e-01,
         -1.0619e+00, -1.1666e-01, -5.1694e-01, -2.3567e-01,  8.2827e-02,
          2.8356e-01,  5.4827e-02, -3.1710e-02,  2.9506e-01, -4.5327e-02,
         -2.2281e-01, -1.6040e-02, -2.1592e-01, -2.8905e-01,  3.1722e-01,
          3.6749e-02,  1.2318e-01,  1.1802e-01,  4.8615e-01, -3.5009e-01,
          2.2976e-02,  3.2279e-01,  1.2792e-01, -1.4762e-01, -5.0833e-01,
          1.1792e-01,  1.5477e-01, -9.1993e-02,  5.1056e-01, -2.3232e-01,
         -2.1956e-01, -4.4732e-01, -4.0959e-01,  7.1435e-01,  1.5441e-02,
          5.9236e-01,  4.9143e-01, -8.5195e-02, -1.6899e-01, -9.1943e-02,
         -1.3484e-01,  3.8337e-02, -3.6646e-03, -5.2976e-01, -3.2030e-01,
          1.0286e-01,  4.8393e-02,  1.1272e-01, -2.8740e-01,  1.0162e-01,
          7.1891e-02,  4.0503e-01, -1.5267e-01, -1.4937e-01,  2.4183e-01,
          2.3169e-01,  1.4168e-01, -2.4630e-01, -9.7667e-02, -1.8104e-01,
         -2.5302e-01,  7.6694e-03,  4.4532e-01,  4.7661e-03, -2.2053e-01,
          1.8476e-01, -2.6623e-01, -2.7160e-01,  2.4052e-01,  3.5407e-01,
         -7.6599e-01,  7.2246e-01, -4.5076e-01, -2.6277e-01, -5.6510e-01,
          2.3657e-01,  2.4041e-01,  8.8647e-02, -4.5115e-01, -4.1345e-01,
          1.0783e-01,  7.1252e-01,  3.7188e-02, -3.2408e-01, -5.8246e-02,
          3.1036e-02,  4.9810e-03,  2.0559e-02, -1.6570e-01, -3.9992e-02,
          2.3308e-01, -1.4777e-01,  8.0841e-02,  1.9618e-01,  7.0016e-02,
          1.4057e-01,  1.2723e-01, -1.2437e-01,  3.8351e-02,  1.6350e-02,
          5.3081e-02, -1.3119e-01,  3.0841e-02,  1.7005e-01, -2.3391e-02,
         -6.3510e-02, -8.9077e-02,  9.7428e-02, -1.0468e-01,  6.9757e-02,
         -1.0193e-02,  3.0616e-02, -1.2071e-01,  1.6542e-01,  1.1809e-01,
          2.2175e-03,  2.8952e-01, -8.9704e-02, -1.5324e-01, -2.6952e-01,
         -1.4248e-01,  4.5947e-01, -5.7267e-03, -6.8906e-02,  9.2990e-02,
         -1.1543e-01, -2.2684e-01, -1.2089e-01, -1.8406e-01, -6.2817e-02,
         -1.4144e-01,  2.1614e-01, -7.4154e-02, -2.5700e-01,  2.1425e-01,
         -1.3774e-01]], device='cuda:0') tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
931000 特征值优化 tensor(1.0629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1861, -0.6045,  0.9592, -0.9516, -0.0141,  2.7667,  0.1642, -0.5809,
          0.8146, -0.0230,  0.1083,  0.1061,  0.3248, -0.6799, -0.4710, -0.2219,
          0.2424, -0.5679,  0.0323,  0.3811, -0.6177, -0.2155, -0.1390, -0.2001,
          0.2651, -1.0706, -0.1109, -0.4778, -0.2233,  0.0739,  0.2834,  0.0365,
         -0.0844,  0.2681, -0.0423, -0.2149, -0.0231, -0.2069, -0.2609,  0.3441,
          0.0381,  0.1214,  0.1200,  0.4963, -0.3545,  0.0260,  0.3238,  0.1189,
         -0.1275, -0.4702,  0.1397,  0.1509, -0.0668,  0.5212, -0.2178, -0.2206,
         -0.4301, -0.3787,  0.6700, -0.0095,  0.5944,  0.5106, -0.0368, -0.1875,
         -0.1071, -0.1505,  0.0480,  0.0240, -0.5383, -0.3463,  0.0998,  0.0601,
          0.0973, -0.2931,  0.0907,  0.0565,  0.4114, -0.2245, -0.1314,  0.2544,
          0.2457,  0.1256, -0.2534, -0.0437, -0.2328, -0.2600,  0.0116,  0.4508,
         -0.0405, -0.2347,  0.1944, -0.2850, -0.2718,  0.2771,  0.3500, -0.7619,
          0.7205, -0.4250, -0.2582, -0.5958,  0.1298,  0.2617,  0.1272, -0.4095,
         -0.3860,  0.0693,  0.7184,  0.0075, -0.3462, -0.0676,  0.0070,  0.0159,
          0.0357, -0.1471, -0.0269,  0.1837, -0.1492,  0.0791,  0.2209,  0.0512,
          0.1501,  0.1019, -0.1301,  0.0562,  0.0381,  0.0557, -0.1266,  0.0232,
          0.1545, -0.0206, -0.0611, -0.0835,  0.0892, -0.1266,  0.0668,  0.0110,
          0.0485, -0.1278,  0.1702,  0.1145,  0.0035,  0.2877, -0.0757, -0.1710,
         -0.2420, -0.1532,  0.4571, -0.0278, -0.0737,  0.1164, -0.1180, -0.1873,
         -0.1264, -0.1953, -0.0535, -0.1208,  0.1732, -0.0852, -0.2933,  0.2174,
         -0.1585]], device='cuda:0') tensor(0.2238, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
932000 特征值优化 tensor(0.9999, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.3742e-02, -5.9200e-01,  9.6863e-01, -9.6344e-01,  5.9996e-02,
          2.6493e+00,  3.1440e-02, -6.6870e-01,  8.3557e-01,  3.1378e-03,
          1.5243e-01,  1.4467e-01,  3.6241e-01, -7.1063e-01, -3.9984e-01,
         -2.1672e-01,  1.7233e-01, -5.4677e-01,  2.4413e-02,  3.4774e-01,
         -5.7932e-01, -2.2817e-01, -1.4450e-01, -1.5463e-01,  2.7931e-01,
         -1.0635e+00, -6.3550e-02, -4.7540e-01, -2.4246e-01,  4.4575e-02,
          2.4795e-01,  9.6679e-03, -1.2930e-01,  2.2807e-01, -4.0629e-02,
         -1.9331e-01, -4.4787e-02, -1.8464e-01, -2.6062e-01,  3.1698e-01,
          5.1715e-02,  1.3000e-01,  1.1465e-01,  5.0016e-01, -3.2994e-01,
          7.9807e-02,  3.4438e-01,  9.2368e-02, -1.2161e-01, -4.1994e-01,
          1.1595e-01,  1.4535e-01, -5.2780e-02,  5.3151e-01, -1.9962e-01,
         -2.4276e-01, -4.2986e-01, -3.5604e-01,  6.2777e-01, -1.1963e-02,
          6.1594e-01,  5.1532e-01, -1.4037e-03, -1.8288e-01, -1.4190e-01,
         -1.7668e-01,  5.0709e-02,  3.8690e-02, -5.6351e-01, -3.7020e-01,
          8.8490e-02,  6.2137e-02,  7.1312e-02, -3.2496e-01,  8.6304e-02,
          7.3950e-02,  3.8616e-01, -2.7511e-01, -9.2180e-02,  2.7089e-01,
          2.5524e-01,  1.3492e-01, -2.4532e-01, -3.5574e-02, -2.9429e-01,
         -2.4600e-01, -5.7023e-03,  4.2099e-01, -8.3091e-02, -2.7620e-01,
          1.9919e-01, -2.7472e-01, -2.5482e-01,  2.9491e-01,  3.5129e-01,
         -7.6548e-01,  7.1222e-01, -3.7886e-01, -2.7886e-01, -6.3236e-01,
          9.0361e-02,  2.7013e-01,  1.6006e-01, -3.6914e-01, -3.7588e-01,
          3.7789e-02,  7.2046e-01,  4.3256e-03, -3.7683e-01, -7.4496e-02,
         -5.8182e-04,  3.8191e-02,  4.8273e-02, -1.1834e-01, -2.1196e-02,
          1.6869e-01, -1.3934e-01,  6.4751e-02,  2.6656e-01,  6.1014e-02,
          1.3390e-01,  9.2175e-02, -1.3203e-01,  5.8570e-02,  6.2595e-02,
          5.5559e-02, -1.2938e-01,  1.9184e-02,  1.3515e-01, -2.5022e-02,
         -6.2665e-02, -1.0665e-01,  8.8043e-02, -1.3400e-01,  8.0415e-02,
          1.6641e-02,  5.3864e-02, -1.4597e-01,  1.8457e-01,  1.6280e-01,
         -9.0290e-03,  2.8537e-01, -9.7232e-02, -1.2597e-01, -2.1085e-01,
         -2.0024e-01,  4.4486e-01, -4.1284e-02, -1.0380e-01,  1.5389e-01,
         -1.1927e-01, -1.6924e-01, -1.4213e-01, -1.7096e-01, -3.9427e-02,
         -1.1527e-01,  1.5944e-01, -1.2224e-01, -2.9712e-01,  2.4293e-01,
         -1.9247e-01]], device='cuda:0') tensor(0.2235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
933000 特征值优化 tensor(1.0385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.5386e-02, -5.9092e-01,  9.9132e-01, -9.5938e-01,  1.9938e-01,
          2.5947e+00, -9.0551e-02, -7.3545e-01,  8.2143e-01,  1.9216e-02,
          1.7937e-01,  1.8250e-01,  3.7630e-01, -7.0662e-01, -3.9214e-01,
         -1.7835e-01,  1.3512e-01, -5.2933e-01,  3.3567e-02,  3.6395e-01,
         -5.7076e-01, -2.3697e-01, -1.0468e-01, -1.5425e-01,  2.7615e-01,
         -1.0613e+00, -5.8050e-02, -4.4189e-01, -2.7277e-01,  1.6326e-02,
          2.0195e-01,  1.0733e-02, -1.1864e-01,  1.7978e-01, -4.1447e-02,
         -1.7341e-01, -4.1883e-02, -1.9307e-01, -2.4577e-01,  3.2289e-01,
          3.1101e-02,  1.2312e-01,  1.1823e-01,  5.0512e-01, -3.0482e-01,
          1.1038e-01,  3.4472e-01,  5.9843e-02, -1.1095e-01, -4.0373e-01,
          1.0085e-01,  1.4754e-01, -4.0824e-02,  5.2564e-01, -2.0247e-01,
         -2.5973e-01, -4.4826e-01, -2.9988e-01,  6.2137e-01, -1.8119e-02,
          6.0659e-01,  5.2293e-01,  3.3209e-02, -1.6250e-01, -1.4669e-01,
         -1.9854e-01,  8.2773e-02,  2.5528e-02, -5.6751e-01, -3.9344e-01,
          7.7447e-02,  5.7434e-02,  6.3092e-02, -3.2958e-01,  8.1819e-02,
          6.2797e-02,  3.8278e-01, -3.3368e-01, -9.1441e-02,  2.9587e-01,
          2.4148e-01,  1.1264e-01, -2.4323e-01, -1.4606e-04, -3.0767e-01,
         -2.6102e-01, -1.3691e-03,  3.9935e-01, -1.1766e-01, -2.6504e-01,
          2.0743e-01, -2.7334e-01, -2.6073e-01,  3.2249e-01,  3.4290e-01,
         -7.6358e-01,  7.1725e-01, -2.9168e-01, -2.7922e-01, -6.6765e-01,
          5.1320e-02,  2.4430e-01,  1.7913e-01, -3.4874e-01, -3.6801e-01,
          1.3893e-02,  7.4102e-01,  2.3080e-02, -3.8577e-01, -7.4754e-02,
         -1.3649e-02,  4.9041e-02,  5.4465e-02, -1.2976e-01, -2.1290e-02,
          1.4244e-01, -1.1686e-01,  7.0460e-02,  2.5991e-01,  7.9811e-02,
          1.2755e-01,  6.6259e-02, -1.2570e-01,  5.8676e-02,  6.5996e-02,
          4.5884e-02, -1.3472e-01,  2.8527e-02,  1.1931e-01, -1.2560e-02,
         -5.7814e-02, -1.1142e-01,  7.0857e-02, -1.5936e-01,  6.1706e-02,
          2.8588e-02,  7.6771e-02, -1.2707e-01,  1.7107e-01,  1.4734e-01,
         -6.2463e-03,  2.7996e-01, -7.3363e-02, -1.1079e-01, -2.2809e-01,
         -2.0657e-01,  4.4818e-01, -3.9233e-02, -1.1234e-01,  1.4974e-01,
         -1.3071e-01, -1.3800e-01, -1.3045e-01, -1.8145e-01, -2.3039e-02,
         -1.3025e-01,  1.4031e-01, -1.4925e-01, -3.1785e-01,  2.2429e-01,
         -2.0392e-01]], device='cuda:0') tensor(0.2125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
934000 特征值优化 tensor(1.0139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1496, -0.5962,  1.0253, -0.9540,  0.2925,  2.5470, -0.1588, -0.7876,
          0.8406,  0.0443,  0.1872,  0.2205,  0.3479, -0.7275, -0.3728, -0.1815,
          0.1229, -0.5163,  0.0232,  0.3323, -0.5474, -0.2389, -0.0811, -0.1481,
          0.2598, -1.0355, -0.0092, -0.4342, -0.2975, -0.0204,  0.1827,  0.0207,
         -0.1082,  0.1643, -0.0510, -0.1497, -0.0385, -0.1928, -0.2680,  0.2867,
          0.0277,  0.1331,  0.1105,  0.5049, -0.2651,  0.1347,  0.3434,  0.0341,
         -0.0929, -0.3977,  0.0769,  0.1432, -0.0629,  0.5276, -0.1904, -0.2869,
         -0.4391, -0.2787,  0.6183, -0.0241,  0.6159,  0.5241,  0.0470, -0.1501,
         -0.1647, -0.2057,  0.0825,  0.0275, -0.5846, -0.4044,  0.0694,  0.0614,
          0.0454, -0.3307,  0.0846,  0.0678,  0.3718, -0.3668, -0.0838,  0.2989,
          0.2478,  0.1101, -0.2381, -0.0073, -0.3429, -0.2567,  0.0065,  0.3818,
         -0.1232, -0.2710,  0.2070, -0.2717, -0.2708,  0.3391,  0.3593, -0.7797,
          0.7281, -0.2560, -0.2575, -0.6866,  0.0281,  0.2556,  0.1928, -0.3446,
         -0.3716,  0.0118,  0.7487,  0.0284, -0.3855, -0.0782, -0.0142,  0.0532,
          0.0577, -0.1247, -0.0120,  0.1311, -0.0965,  0.0511,  0.2652,  0.0988,
          0.1270,  0.0685, -0.1248,  0.0490,  0.0634,  0.0454, -0.1355,  0.0316,
          0.1129, -0.0106, -0.0617, -0.1133,  0.0735, -0.1674,  0.0630,  0.0356,
          0.0862, -0.1211,  0.1855,  0.1585, -0.0080,  0.2768, -0.0759, -0.1169,
         -0.2130, -0.2398,  0.4343, -0.0436, -0.1212,  0.1546, -0.1250, -0.1352,
         -0.1437, -0.1697, -0.0104, -0.1353,  0.1391, -0.1709, -0.3157,  0.2267,
         -0.2151]], device='cuda:0') tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
935000 特征值优化 tensor(1.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7525e-01, -6.0976e-01,  1.0309e+00, -9.6245e-01,  3.8628e-01,
          2.5396e+00, -2.0854e-01, -8.5049e-01,  8.2659e-01,  5.6866e-02,
          1.8166e-01,  2.3762e-01,  3.3193e-01, -7.2836e-01, -3.3864e-01,
         -1.7005e-01,  1.2335e-01, -4.9614e-01, -9.1916e-03,  3.2507e-01,
         -5.2340e-01, -2.5973e-01, -6.3358e-02, -1.3493e-01,  2.5779e-01,
         -1.0298e+00,  1.3528e-02, -4.2139e-01, -2.9665e-01, -4.5297e-02,
          1.7683e-01,  1.1639e-02, -1.3092e-01,  1.4935e-01, -4.6121e-02,
         -1.3405e-01, -5.2188e-02, -1.8178e-01, -2.7682e-01,  2.6600e-01,
          3.5991e-02,  1.3566e-01,  1.0862e-01,  5.1362e-01, -2.4221e-01,
          1.5614e-01,  3.4278e-01,  1.3346e-02, -9.2340e-02, -3.8931e-01,
          6.3091e-02,  1.4641e-01, -7.7544e-02,  5.2575e-01, -1.7813e-01,
         -2.9969e-01, -4.4833e-01, -2.5798e-01,  6.0520e-01, -2.2000e-02,
          6.2993e-01,  5.1718e-01,  5.1000e-02, -1.3152e-01, -1.7108e-01,
         -1.9954e-01,  9.5307e-02,  2.2022e-02, -5.8375e-01, -4.1274e-01,
          7.0420e-02,  6.4930e-02,  3.9060e-02, -3.4145e-01,  9.9529e-02,
          7.8637e-02,  3.4991e-01, -3.8606e-01, -5.6990e-02,  2.9493e-01,
          2.4444e-01,  1.1449e-01, -2.3209e-01, -2.6834e-02, -3.4286e-01,
         -2.4961e-01, -1.8353e-03,  3.4192e-01, -1.2207e-01, -2.5910e-01,
          1.9870e-01, -2.7763e-01, -2.6086e-01,  3.4927e-01,  3.4102e-01,
         -7.8254e-01,  7.5415e-01, -2.4489e-01, -2.6373e-01, -6.8772e-01,
          2.4156e-02,  2.4519e-01,  2.1239e-01, -3.4266e-01, -3.6768e-01,
          9.2390e-03,  7.7644e-01,  3.9259e-02, -3.8831e-01, -7.9127e-02,
         -1.4109e-02,  4.7790e-02,  5.0833e-02, -1.2608e-01, -2.1180e-02,
          1.4760e-01, -9.1805e-02,  3.2204e-02,  2.7114e-01,  9.4110e-02,
          1.2463e-01,  7.7512e-02, -1.2426e-01,  5.0599e-02,  6.2350e-02,
          4.6342e-02, -1.3332e-01,  2.7235e-02,  1.1434e-01, -1.1411e-02,
         -5.8387e-02, -1.1121e-01,  7.3196e-02, -1.7608e-01,  6.1426e-02,
          4.8574e-02,  8.3747e-02, -1.3829e-01,  1.9181e-01,  1.7049e-01,
         -1.5085e-02,  2.5969e-01, -9.1897e-02, -9.7265e-02, -2.0901e-01,
         -2.6455e-01,  4.3007e-01, -4.6549e-02, -1.3915e-01,  1.5242e-01,
         -1.2311e-01, -1.3234e-01, -1.3827e-01, -1.5789e-01, -1.7813e-02,
         -1.3217e-01,  1.5655e-01, -1.8208e-01, -3.0828e-01,  2.2873e-01,
         -2.3452e-01]], device='cuda:0') tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
936000 特征值优化 tensor(1.0242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.9345e-01, -6.3507e-01,  1.0404e+00, -9.6182e-01,  4.5290e-01,
          2.5511e+00, -2.5903e-01, -8.8320e-01,  8.0059e-01,  6.7671e-02,
          1.7463e-01,  2.3797e-01,  3.2062e-01, -7.0894e-01, -3.3455e-01,
         -1.6939e-01,  1.3313e-01, -4.8107e-01, -2.2053e-02,  3.0912e-01,
         -5.0229e-01, -2.6212e-01, -3.8528e-02, -1.4710e-01,  2.4029e-01,
         -1.0251e+00,  2.3929e-02, -3.9670e-01, -3.0472e-01, -5.9944e-02,
          1.6940e-01,  1.4020e-02, -1.2100e-01,  1.4398e-01, -4.2991e-02,
         -1.2355e-01, -3.5174e-02, -1.8061e-01, -2.7261e-01,  2.5512e-01,
          3.0979e-02,  1.3343e-01,  1.0399e-01,  5.1199e-01, -2.2131e-01,
          1.5557e-01,  3.3045e-01, -1.2022e-02, -8.8715e-02, -3.8844e-01,
          6.3400e-02,  1.6361e-01, -8.8521e-02,  5.2640e-01, -1.7023e-01,
         -3.2018e-01, -4.5671e-01, -2.4529e-01,  6.0958e-01, -3.1579e-02,
          6.1884e-01,  5.0633e-01,  6.8932e-02, -1.2775e-01, -1.7190e-01,
         -1.9093e-01,  1.0683e-01,  1.4411e-02, -5.8428e-01, -4.1542e-01,
          6.3574e-02,  7.0328e-02,  4.1668e-02, -3.3721e-01,  1.0049e-01,
          7.6394e-02,  3.4539e-01, -4.1342e-01, -6.1896e-02,  3.0527e-01,
          2.4930e-01,  1.0500e-01, -2.3626e-01, -2.5799e-02, -3.4809e-01,
         -2.5313e-01,  8.9742e-03,  3.1243e-01, -1.2219e-01, -2.4741e-01,
          1.9141e-01, -2.7855e-01, -2.5386e-01,  3.6796e-01,  3.4607e-01,
         -7.8215e-01,  7.7857e-01, -2.1981e-01, -2.6244e-01, -7.1409e-01,
          5.2694e-02,  2.4896e-01,  2.2406e-01, -3.5113e-01, -3.6406e-01,
         -4.0023e-03,  7.9434e-01,  5.0774e-02, -3.8814e-01, -8.4887e-02,
         -1.2273e-02,  3.6920e-02,  4.6062e-02, -1.3070e-01, -1.6067e-02,
          1.4031e-01, -8.0098e-02,  3.2824e-02,  2.5342e-01,  8.9379e-02,
          1.2020e-01,  7.5119e-02, -1.1226e-01,  4.3801e-02,  6.6528e-02,
          4.3179e-02, -1.2973e-01,  2.7047e-02,  1.0468e-01, -5.0037e-04,
         -5.0547e-02, -1.1064e-01,  6.7152e-02, -1.8897e-01,  5.2848e-02,
          5.0649e-02,  9.7435e-02, -1.2664e-01,  1.7934e-01,  1.5515e-01,
         -9.7948e-03,  2.6044e-01, -8.4789e-02, -8.8989e-02, -2.2099e-01,
         -2.6938e-01,  4.2913e-01, -4.7595e-02, -1.4104e-01,  1.5234e-01,
         -1.1923e-01, -1.1754e-01, -1.4144e-01, -1.6334e-01, -1.2906e-02,
         -1.3371e-01,  1.5277e-01, -1.7907e-01, -3.0557e-01,  2.1399e-01,
         -2.3773e-01]], device='cuda:0') tensor(0.2285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
937000 特征值优化 tensor(1.0130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0637e-01, -6.5860e-01,  1.0304e+00, -9.5526e-01,  5.6903e-01,
          2.5656e+00, -2.8198e-01, -9.0020e-01,  7.8584e-01,  6.7567e-02,
          1.7457e-01,  2.3595e-01,  2.9676e-01, -6.9619e-01, -3.4429e-01,
         -1.6500e-01,  1.2740e-01, -4.7355e-01, -4.2742e-02,  3.0769e-01,
         -4.7057e-01, -2.7516e-01, -1.8387e-02, -1.4796e-01,  2.3468e-01,
         -1.0102e+00,  3.2080e-02, -3.7371e-01, -3.1032e-01, -6.8569e-02,
          1.6249e-01,  5.9256e-03, -1.1522e-01,  1.4470e-01, -3.2350e-02,
         -1.0892e-01, -3.4133e-02, -1.7513e-01, -2.6973e-01,  2.4712e-01,
          2.8695e-02,  1.3421e-01,  9.9724e-02,  5.1436e-01, -2.1908e-01,
          1.5997e-01,  3.0829e-01, -3.0092e-02, -7.5400e-02, -3.9061e-01,
          6.7310e-02,  1.6335e-01, -9.0230e-02,  5.3407e-01, -1.6128e-01,
         -3.4439e-01, -4.6359e-01, -2.3932e-01,  6.0164e-01, -4.6277e-02,
          6.1995e-01,  4.9247e-01,  8.3748e-02, -1.2339e-01, -1.7305e-01,
         -1.8284e-01,  1.1450e-01,  5.3244e-03, -5.9557e-01, -4.2146e-01,
          6.9309e-02,  7.3663e-02,  3.2140e-02, -3.5147e-01,  9.6331e-02,
          8.3824e-02,  3.3683e-01, -4.2087e-01, -5.8548e-02,  3.1468e-01,
          2.5525e-01,  1.0029e-01, -2.3903e-01, -2.7968e-02, -3.5089e-01,
         -2.5069e-01,  8.4959e-03,  2.7638e-01, -1.3555e-01, -2.2240e-01,
          1.8191e-01, -2.8770e-01, -2.5616e-01,  3.8184e-01,  3.4166e-01,
         -7.7335e-01,  8.0225e-01, -2.1379e-01, -2.5059e-01, -7.3144e-01,
          4.0690e-02,  2.3978e-01,  2.4486e-01, -3.5550e-01, -3.6421e-01,
          1.4290e-03,  8.1696e-01,  6.6882e-02, -3.8834e-01, -8.7842e-02,
         -1.2697e-02,  2.9493e-02,  4.9003e-02, -1.3735e-01, -9.4522e-03,
          1.4566e-01, -8.2702e-02,  3.4607e-02,  2.4093e-01,  8.8952e-02,
          1.2121e-01,  6.5332e-02, -1.1323e-01,  3.9416e-02,  6.9034e-02,
          3.3888e-02, -1.3154e-01,  2.4196e-02,  1.0650e-01,  3.4937e-03,
         -4.6344e-02, -1.1021e-01,  6.4340e-02, -1.8637e-01,  4.9764e-02,
          4.4187e-02,  9.5730e-02, -1.2297e-01,  1.7581e-01,  1.5625e-01,
         -1.9457e-02,  2.6252e-01, -8.5857e-02, -7.7007e-02, -2.3215e-01,
         -2.6863e-01,  4.3644e-01, -3.9412e-02, -1.3952e-01,  1.3651e-01,
         -1.2096e-01, -1.0714e-01, -1.4123e-01, -1.5968e-01, -8.1574e-03,
         -1.4349e-01,  1.5065e-01, -1.8088e-01, -3.2246e-01,  2.0645e-01,
         -2.4083e-01]], device='cuda:0') tensor(0.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
938000 特征值优化 tensor(1.0004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2230e-01, -6.7792e-01,  1.0463e+00, -9.6345e-01,  6.6678e-01,
          2.5770e+00, -3.3338e-01, -9.0678e-01,  7.8084e-01,  9.9476e-02,
          1.7771e-01,  2.6229e-01,  3.0303e-01, -7.1233e-01, -3.3731e-01,
         -1.8863e-01,  1.0157e-01, -4.4951e-01, -5.8175e-02,  2.8395e-01,
         -4.5917e-01, -2.8522e-01, -6.8052e-03, -1.2801e-01,  2.3421e-01,
         -9.9594e-01,  6.1430e-02, -3.6978e-01, -3.1820e-01, -8.4248e-02,
          1.5664e-01,  9.5742e-03, -1.1128e-01,  1.6875e-01, -2.3312e-02,
         -1.0045e-01, -3.7293e-02, -1.7256e-01, -2.8422e-01,  2.2964e-01,
          2.9808e-02,  1.3424e-01,  1.0929e-01,  5.1465e-01, -1.9972e-01,
          1.7495e-01,  2.8787e-01, -5.1281e-02, -6.6158e-02, -4.0185e-01,
          5.3938e-02,  1.6320e-01, -1.0642e-01,  5.3082e-01, -1.4281e-01,
         -3.5718e-01, -4.5458e-01, -2.4193e-01,  5.9191e-01, -4.7883e-02,
          6.2787e-01,  4.7955e-01,  7.2655e-02, -1.0237e-01, -1.9942e-01,
         -1.8840e-01,  1.1909e-01,  1.4085e-02, -5.9832e-01, -4.2953e-01,
          6.6532e-02,  7.3927e-02,  1.3002e-02, -3.4493e-01,  1.0644e-01,
          8.0745e-02,  3.3130e-01, -4.3013e-01, -3.8086e-02,  3.1757e-01,
          2.6614e-01,  1.0949e-01, -2.2685e-01, -2.9583e-02, -3.7513e-01,
         -2.4243e-01,  2.0527e-02,  2.5069e-01, -1.2035e-01, -2.1388e-01,
          1.7413e-01, -2.9004e-01, -2.5310e-01,  3.8775e-01,  3.5044e-01,
         -7.8645e-01,  8.1003e-01, -2.2454e-01, -2.4917e-01, -7.3045e-01,
          1.8659e-02,  2.3629e-01,  2.5170e-01, -3.4676e-01, -3.8125e-01,
          7.9278e-03,  8.0727e-01,  7.8451e-02, -3.8882e-01, -1.0096e-01,
         -6.2639e-03,  2.7516e-02,  5.4385e-02, -1.2650e-01, -1.5044e-03,
          1.4284e-01, -7.9065e-02,  1.5595e-02,  2.3763e-01,  1.1914e-01,
          1.2749e-01,  7.7993e-02, -1.1409e-01,  4.0097e-02,  7.1399e-02,
          3.5228e-02, -1.1866e-01,  3.0710e-02,  1.0951e-01, -3.8787e-03,
         -5.2009e-02, -1.1011e-01,  7.7723e-02, -1.8573e-01,  6.0253e-02,
          5.4467e-02,  1.2027e-01, -1.2428e-01,  1.7244e-01,  1.6668e-01,
         -2.7603e-02,  2.7011e-01, -7.6605e-02, -9.6269e-02, -2.0987e-01,
         -2.8067e-01,  4.3265e-01, -4.0077e-02, -1.2345e-01,  1.3295e-01,
         -1.0659e-01, -1.0756e-01, -1.5166e-01, -1.4114e-01, -7.7687e-04,
         -1.3847e-01,  1.5888e-01, -2.0126e-01, -3.0727e-01,  2.0512e-01,
         -2.3917e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
939000 特征值优化 tensor(0.9971, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2486e-01, -7.0197e-01,  1.0507e+00, -9.6300e-01,  7.2287e-01,
          2.6106e+00, -3.5628e-01, -9.3537e-01,  7.4567e-01,  1.0644e-01,
          1.5624e-01,  2.5917e-01,  2.8530e-01, -7.1291e-01, -3.3461e-01,
         -1.8786e-01,  9.5029e-02, -4.2820e-01, -6.7841e-02,  2.7428e-01,
         -4.4052e-01, -2.9292e-01,  3.5912e-03, -1.3520e-01,  2.2395e-01,
         -9.9632e-01,  7.3810e-02, -3.5716e-01, -3.1680e-01, -9.4942e-02,
          1.5558e-01,  7.6580e-03, -1.1825e-01,  1.8343e-01, -8.4087e-03,
         -8.9171e-02, -5.2219e-02, -1.7232e-01, -2.8322e-01,  2.2139e-01,
          3.1857e-02,  1.3353e-01,  1.1056e-01,  5.1298e-01, -1.8650e-01,
          1.7621e-01,  2.7891e-01, -6.3914e-02, -6.9063e-02, -4.0121e-01,
          5.0748e-02,  1.8000e-01, -1.1209e-01,  5.3183e-01, -1.2273e-01,
         -3.5997e-01, -4.5686e-01, -2.4503e-01,  5.7924e-01, -5.4589e-02,
          6.4002e-01,  4.6873e-01,  7.7095e-02, -9.7880e-02, -2.1129e-01,
         -1.8033e-01,  1.1919e-01,  1.0718e-02, -6.0254e-01, -4.2983e-01,
          6.2583e-02,  7.6304e-02,  1.2932e-02, -3.5749e-01,  1.0238e-01,
          8.2692e-02,  3.1322e-01, -4.2895e-01, -3.5942e-02,  3.2053e-01,
          2.7142e-01,  1.1355e-01, -2.2453e-01, -4.6842e-02, -3.7267e-01,
         -2.3842e-01,  1.7868e-02,  2.2739e-01, -1.2300e-01, -2.1593e-01,
          1.6064e-01, -2.9058e-01, -2.4809e-01,  3.8603e-01,  3.4930e-01,
         -7.8685e-01,  8.1666e-01, -2.2463e-01, -2.6543e-01, -7.4027e-01,
          2.6903e-02,  2.3500e-01,  2.6574e-01, -3.4439e-01, -3.7238e-01,
          3.4374e-03,  8.1196e-01,  9.0432e-02, -3.7114e-01, -1.0424e-01,
         -6.8761e-03,  2.8859e-02,  4.8337e-02, -1.2583e-01, -4.7229e-03,
          1.4545e-01, -7.7672e-02,  1.5403e-02,  2.4126e-01,  1.1374e-01,
          1.2175e-01,  8.5054e-02, -1.1848e-01,  3.3783e-02,  7.6940e-02,
          3.4408e-02, -1.0973e-01,  2.2559e-02,  1.0932e-01, -1.2586e-03,
         -4.8362e-02, -1.1076e-01,  8.4138e-02, -1.8940e-01,  5.7956e-02,
          5.7398e-02,  1.3030e-01, -1.3477e-01,  1.6916e-01,  1.6944e-01,
         -4.1207e-02,  2.6941e-01, -7.4915e-02, -8.1973e-02, -2.2106e-01,
         -2.9018e-01,  4.3584e-01, -3.2561e-02, -1.2741e-01,  1.1821e-01,
         -1.0503e-01, -1.0048e-01, -1.5461e-01, -1.2898e-01, -1.8388e-03,
         -1.3882e-01,  1.6494e-01, -1.8650e-01, -2.9757e-01,  1.9688e-01,
         -2.4198e-01]], device='cuda:0') tensor(0.2097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
940000 特征值优化 tensor(1.0128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2330, -0.7178,  1.0436, -0.9600,  0.7881,  2.6329, -0.3782, -0.9464,
          0.7194,  0.1046,  0.1420,  0.2580,  0.2723, -0.7119, -0.3328, -0.1878,
          0.1083, -0.4162, -0.0833,  0.2608, -0.4272, -0.3015,  0.0179, -0.1406,
          0.2093, -0.9889,  0.0675, -0.3289, -0.3044, -0.0929,  0.1481,  0.0028,
         -0.1163,  0.1796, -0.0089, -0.0838, -0.0404, -0.1572, -0.2617,  0.2146,
          0.0193,  0.1304,  0.1060,  0.5124, -0.1956,  0.1668,  0.2669, -0.0734,
         -0.0627, -0.3938,  0.0564,  0.2000, -0.1227,  0.5275, -0.1180, -0.3842,
         -0.4648, -0.2290,  0.5768, -0.0670,  0.6340,  0.4596,  0.1066, -0.1076,
         -0.2046, -0.1789,  0.1187, -0.0027, -0.6022, -0.4332,  0.0581,  0.0803,
          0.0201, -0.3649,  0.0893,  0.0803,  0.3130, -0.4415, -0.0514,  0.3229,
          0.2625,  0.1026, -0.2316, -0.0476, -0.3576, -0.2403,  0.0115,  0.2150,
         -0.1569, -0.2240,  0.1767, -0.2942, -0.2567,  0.4120,  0.3477, -0.7826,
          0.8350, -0.2158, -0.2571, -0.7370,  0.0232,  0.2288,  0.2750, -0.3647,
         -0.3623, -0.0191,  0.8157,  0.0822, -0.3615, -0.1044, -0.0141,  0.0109,
          0.0458, -0.1321, -0.0051,  0.1473, -0.0759,  0.0231,  0.2357,  0.0993,
          0.1192,  0.0676, -0.1065,  0.0339,  0.0784,  0.0227, -0.1109,  0.0205,
          0.0938,  0.0080, -0.0378, -0.1099,  0.0670, -0.1933,  0.0503,  0.0395,
          0.1141, -0.1251,  0.1640,  0.1599, -0.0345,  0.2660, -0.0719, -0.0868,
         -0.2340, -0.2960,  0.4506, -0.0255, -0.1343,  0.1035, -0.1142, -0.0941,
         -0.1487, -0.1336, -0.0056, -0.1540,  0.1582, -0.1862, -0.3053,  0.1761,
         -0.2503]], device='cuda:0') tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
941000 特征值优化 tensor(1.0011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0384e-01, -7.2763e-01,  1.0494e+00, -9.6350e-01,  8.1230e-01,
          2.6455e+00, -3.9747e-01, -9.4454e-01,  6.9575e-01,  1.2439e-01,
          1.2540e-01,  2.7570e-01,  2.6089e-01, -7.3069e-01, -3.3390e-01,
         -2.1323e-01,  8.8796e-02, -4.0515e-01, -9.7368e-02,  2.5251e-01,
         -4.2913e-01, -3.0697e-01,  2.0744e-02, -1.2909e-01,  2.0782e-01,
         -9.7961e-01,  7.9635e-02, -3.2120e-01, -3.1548e-01, -1.0089e-01,
          1.3864e-01, -4.7699e-03, -1.1069e-01,  1.9019e-01, -1.0504e-02,
         -7.9960e-02, -4.5539e-02, -1.5611e-01, -2.7674e-01,  2.0850e-01,
          3.2089e-02,  1.3568e-01,  1.0450e-01,  5.1582e-01, -1.8067e-01,
          1.7797e-01,  2.5862e-01, -8.0247e-02, -5.5315e-02, -3.9098e-01,
          5.3674e-02,  1.9611e-01, -1.1853e-01,  5.3156e-01, -1.1390e-01,
         -3.8439e-01, -4.5628e-01, -2.3698e-01,  5.6911e-01, -6.1727e-02,
          6.3620e-01,  4.5176e-01,  9.9336e-02, -9.6624e-02, -2.1095e-01,
         -1.8053e-01,  1.1443e-01,  7.4055e-03, -5.9626e-01, -4.3621e-01,
          6.0518e-02,  8.2315e-02,  7.9986e-04, -3.6456e-01,  9.9560e-02,
          8.1376e-02,  3.0492e-01, -4.3946e-01, -3.0333e-02,  3.3092e-01,
          2.7167e-01,  9.9531e-02, -2.3014e-01, -5.2123e-02, -3.7547e-01,
         -2.3395e-01,  2.0078e-02,  1.9427e-01, -1.4129e-01, -2.0647e-01,
          1.6296e-01, -3.0853e-01, -2.4727e-01,  4.0610e-01,  3.4207e-01,
         -7.8034e-01,  8.3610e-01, -2.2635e-01, -2.7930e-01, -7.3124e-01,
          6.0166e-03,  2.2620e-01,  2.8464e-01, -3.5387e-01, -3.7896e-01,
         -6.2268e-04,  8.0066e-01,  9.9140e-02, -3.6878e-01, -1.1169e-01,
         -7.6925e-03,  2.0107e-02,  4.4441e-02, -1.2622e-01,  1.2378e-03,
          1.4819e-01, -7.5596e-02,  7.3018e-03,  2.3648e-01,  1.2304e-01,
          1.1404e-01,  7.9811e-02, -1.1781e-01,  3.4262e-02,  7.8628e-02,
          2.6518e-02, -1.0534e-01,  2.1750e-02,  1.0578e-01, -2.1901e-04,
         -4.2276e-02, -1.1013e-01,  7.9026e-02, -1.8694e-01,  5.6015e-02,
          5.4710e-02,  1.2461e-01, -1.3286e-01,  1.7029e-01,  1.7202e-01,
         -4.6384e-02,  2.6994e-01, -6.9507e-02, -8.9929e-02, -2.2093e-01,
         -2.9558e-01,  4.4815e-01, -2.6914e-02, -1.2601e-01,  1.0513e-01,
         -1.0706e-01, -8.6216e-02, -1.5689e-01, -1.1110e-01,  2.7592e-03,
         -1.5190e-01,  1.6046e-01, -2.0116e-01, -2.9710e-01,  1.8015e-01,
         -2.4858e-01]], device='cuda:0') tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
942000 特征值优化 tensor(0.9941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.9395e-01, -7.3402e-01,  1.0435e+00, -9.6636e-01,  8.2882e-01,
          2.6656e+00, -3.9834e-01, -9.5953e-01,  6.8838e-01,  1.2713e-01,
          1.2022e-01,  2.6186e-01,  2.5163e-01, -7.5033e-01, -3.1563e-01,
         -2.2344e-01,  1.0011e-01, -3.9948e-01, -9.6868e-02,  2.4183e-01,
         -4.1565e-01, -3.0390e-01,  2.1670e-02, -1.3122e-01,  2.0256e-01,
         -9.6301e-01,  8.6933e-02, -3.1538e-01, -3.0161e-01, -1.0331e-01,
          1.4617e-01, -9.1681e-03, -1.3176e-01,  1.9680e-01, -1.4074e-02,
         -8.0713e-02, -4.4424e-02, -1.3964e-01, -2.6951e-01,  1.9196e-01,
          3.9089e-02,  1.3404e-01,  1.0937e-01,  5.1228e-01, -1.8179e-01,
          1.7602e-01,  2.5120e-01, -8.9386e-02, -5.6044e-02, -3.8555e-01,
          5.7652e-02,  2.1820e-01, -1.1913e-01,  5.3012e-01, -1.0654e-01,
         -3.9259e-01, -4.5390e-01, -2.3132e-01,  5.6568e-01, -6.7228e-02,
          6.5217e-01,  4.4763e-01,  1.0834e-01, -9.2036e-02, -2.1556e-01,
         -1.9154e-01,  1.1885e-01,  4.4104e-03, -5.9288e-01, -4.3731e-01,
          5.0395e-02,  8.6182e-02, -2.5597e-03, -3.7227e-01,  9.6353e-02,
          8.7511e-02,  2.9494e-01, -4.4301e-01, -2.9400e-02,  3.2242e-01,
          2.6426e-01,  9.8752e-02, -2.2944e-01, -6.8532e-02, -3.7363e-01,
         -2.1585e-01,  2.8408e-04,  1.8563e-01, -1.6333e-01, -2.1784e-01,
          1.6397e-01, -2.9560e-01, -2.4221e-01,  4.2270e-01,  3.4747e-01,
         -7.8459e-01,  8.4115e-01, -2.3475e-01, -2.7163e-01, -7.1628e-01,
          4.8506e-03,  2.2258e-01,  2.9039e-01, -3.6910e-01, -3.7666e-01,
         -1.4470e-02,  7.9823e-01,  9.3270e-02, -3.5638e-01, -1.1294e-01,
         -1.0685e-02,  3.5686e-03,  3.7153e-02, -1.1844e-01,  4.9460e-03,
          1.4094e-01, -7.4424e-02,  1.5695e-03,  2.5835e-01,  1.2750e-01,
          1.1247e-01,  7.7707e-02, -1.1335e-01,  3.8307e-02,  7.7057e-02,
          2.1114e-02, -9.7235e-02,  1.7978e-02,  9.8868e-02, -4.4971e-03,
         -4.4047e-02, -1.0818e-01,  7.7386e-02, -1.8389e-01,  5.6841e-02,
          4.2558e-02,  1.2139e-01, -1.2495e-01,  1.7141e-01,  1.7737e-01,
         -4.6990e-02,  2.5818e-01, -7.5921e-02, -1.0444e-01, -2.1831e-01,
         -3.1984e-01,  4.6105e-01, -2.3127e-02, -1.2569e-01,  8.9737e-02,
         -1.0943e-01, -9.7550e-02, -1.5324e-01, -1.0427e-01, -2.0164e-03,
         -1.4304e-01,  1.6592e-01, -2.0275e-01, -2.8956e-01,  1.7389e-01,
         -2.5956e-01]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
943000 特征值优化 tensor(1.0437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8820e-01, -7.6698e-01,  1.0579e+00, -9.6552e-01,  8.6127e-01,
          2.6918e+00, -4.2337e-01, -9.7033e-01,  6.6004e-01,  1.3056e-01,
          1.0871e-01,  2.5358e-01,  2.4117e-01, -7.3938e-01, -3.4141e-01,
         -2.1522e-01,  1.0637e-01, -3.9647e-01, -9.9970e-02,  2.3141e-01,
         -4.1502e-01, -3.0213e-01,  2.7538e-02, -1.3451e-01,  1.9379e-01,
         -9.7685e-01,  8.5081e-02, -2.8232e-01, -2.9833e-01, -9.5378e-02,
          1.3643e-01, -5.6628e-03, -1.1419e-01,  1.8948e-01, -1.4056e-03,
         -7.4982e-02, -2.7108e-02, -1.4327e-01, -2.6314e-01,  1.9005e-01,
          1.6887e-02,  1.3379e-01,  1.0771e-01,  5.2113e-01, -1.8927e-01,
          1.6380e-01,  2.4392e-01, -8.9232e-02, -4.3732e-02, -3.8045e-01,
          5.9673e-02,  2.3551e-01, -1.2003e-01,  5.2589e-01, -1.0336e-01,
         -4.0945e-01, -4.7112e-01, -2.2391e-01,  5.5577e-01, -7.5870e-02,
          6.4468e-01,  4.4271e-01,  1.2778e-01, -9.6330e-02, -2.1658e-01,
         -1.8953e-01,  1.1565e-01, -6.8286e-03, -5.9445e-01, -4.3976e-01,
          5.4474e-02,  9.8925e-02,  7.1183e-03, -3.7690e-01,  7.7993e-02,
          7.5846e-02,  3.0165e-01, -4.6064e-01, -5.2025e-02,  3.4050e-01,
          2.7030e-01,  8.3156e-02, -2.3151e-01, -4.9750e-02, -3.5713e-01,
         -2.3371e-01,  8.4119e-03,  1.8170e-01, -1.7410e-01, -2.1952e-01,
          1.6350e-01, -2.9729e-01, -2.4574e-01,  4.3258e-01,  3.4222e-01,
         -7.8585e-01,  8.5259e-01, -2.1141e-01, -2.6342e-01, -7.2931e-01,
          5.8816e-03,  2.1404e-01,  2.7793e-01, -3.7060e-01, -3.5831e-01,
         -3.0032e-02,  7.9977e-01,  1.0546e-01, -3.5320e-01, -1.1282e-01,
         -1.7166e-02, -1.6689e-03,  4.1828e-02, -1.2573e-01,  5.9274e-03,
          1.3119e-01, -6.4068e-02,  2.1547e-02,  2.4090e-01,  1.2083e-01,
          1.1293e-01,  6.7840e-02, -1.0365e-01,  3.5663e-02,  8.3876e-02,
          1.6045e-02, -9.6972e-02,  2.0278e-02,  8.3547e-02,  4.9355e-03,
         -2.5396e-02, -1.1162e-01,  6.1137e-02, -1.9627e-01,  4.4253e-02,
          3.5311e-02,  1.0995e-01, -1.2255e-01,  1.5229e-01,  1.5312e-01,
         -5.8783e-02,  2.5880e-01, -5.3792e-02, -1.0751e-01, -2.5222e-01,
         -3.0045e-01,  4.5648e-01, -9.3088e-03, -1.2203e-01,  8.0014e-02,
         -1.0311e-01, -6.9199e-02, -1.5328e-01, -1.2160e-01, -5.3606e-03,
         -1.6606e-01,  1.5931e-01, -1.9347e-01, -2.9796e-01,  1.4970e-01,
         -2.6438e-01]], device='cuda:0') tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
944000 特征值优化 tensor(1.0430, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7299e-01, -7.6654e-01,  1.0630e+00, -9.6706e-01,  8.7059e-01,
          2.6912e+00, -4.2731e-01, -9.7827e-01,  6.4816e-01,  1.4399e-01,
          1.0180e-01,  2.4989e-01,  2.3947e-01, -7.6916e-01, -3.3272e-01,
         -2.2390e-01,  1.1050e-01, -3.8830e-01, -1.0307e-01,  2.2555e-01,
         -3.9772e-01, -2.9276e-01,  3.6746e-02, -1.3845e-01,  1.8349e-01,
         -9.7183e-01,  9.5204e-02, -2.7268e-01, -2.9756e-01, -9.6860e-02,
          1.2708e-01, -9.4030e-03, -1.0969e-01,  1.8832e-01, -1.7704e-03,
         -7.6639e-02, -3.4088e-02, -1.3373e-01, -2.4646e-01,  1.9402e-01,
          2.7459e-02,  1.3198e-01,  1.1169e-01,  5.1904e-01, -1.8891e-01,
          1.6494e-01,  2.4084e-01, -9.4261e-02, -5.3353e-02, -3.7118e-01,
          6.6542e-02,  2.4500e-01, -1.2380e-01,  5.2619e-01, -1.0640e-01,
         -4.1871e-01, -4.5872e-01, -2.0767e-01,  5.5208e-01, -8.0460e-02,
          6.5003e-01,  4.3753e-01,  1.3318e-01, -9.2691e-02, -2.2235e-01,
         -1.8566e-01,  1.1798e-01, -9.2371e-03, -5.9506e-01, -4.4056e-01,
          4.9447e-02,  1.0221e-01,  2.8535e-03, -3.8482e-01,  7.2416e-02,
          7.8748e-02,  2.9895e-01, -4.4840e-01, -4.5344e-02,  3.4610e-01,
          2.6597e-01,  7.0514e-02, -2.3586e-01, -5.5982e-02, -3.6827e-01,
         -2.2975e-01,  4.9015e-03,  1.7274e-01, -1.8901e-01, -2.2906e-01,
          1.5212e-01, -3.0789e-01, -2.4724e-01,  4.3292e-01,  3.5188e-01,
         -7.9001e-01,  8.5086e-01, -2.2499e-01, -2.8450e-01, -7.2044e-01,
          1.4471e-02,  2.1316e-01,  2.9325e-01, -3.7919e-01, -3.6540e-01,
         -3.4437e-02,  7.9618e-01,  1.0734e-01, -3.5231e-01, -1.1492e-01,
         -1.5211e-02, -1.6044e-02,  3.8163e-02, -1.2652e-01,  2.8798e-03,
          1.2932e-01, -5.7850e-02,  1.3178e-02,  2.3980e-01,  1.2932e-01,
          1.1211e-01,  6.8427e-02, -1.0264e-01,  4.1408e-02,  7.8434e-02,
          1.5851e-02, -9.5771e-02,  1.0672e-02,  8.6049e-02,  4.9164e-03,
         -2.2356e-02, -1.0933e-01,  6.2967e-02, -1.9660e-01,  3.9694e-02,
          4.2617e-02,  1.0838e-01, -1.3116e-01,  1.4576e-01,  1.6368e-01,
         -4.9857e-02,  2.5463e-01, -6.0396e-02, -1.0418e-01, -2.3705e-01,
         -3.0072e-01,  4.6512e-01, -9.1281e-03, -1.2609e-01,  7.7890e-02,
         -1.0354e-01, -6.7365e-02, -1.5407e-01, -1.2132e-01, -1.6490e-03,
         -1.6023e-01,  1.6225e-01, -2.1033e-01, -2.9076e-01,  1.4423e-01,
         -2.6675e-01]], device='cuda:0') tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
945000 特征值优化 tensor(0.9920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3881e-01, -7.8376e-01,  1.0484e+00, -9.6870e-01,  8.9731e-01,
          2.7197e+00, -4.3773e-01, -9.6056e-01,  6.5070e-01,  1.4857e-01,
          8.2152e-02,  2.6013e-01,  2.4289e-01, -7.8613e-01, -3.1405e-01,
         -2.4073e-01,  1.1354e-01, -3.8890e-01, -1.0351e-01,  2.1310e-01,
         -3.8415e-01, -3.0052e-01,  3.0164e-02, -1.2068e-01,  2.0016e-01,
         -9.4301e-01,  1.0941e-01, -2.8595e-01, -2.9306e-01, -9.8596e-02,
          1.3398e-01, -1.5622e-02, -1.3051e-01,  2.0695e-01,  3.9147e-04,
         -7.4801e-02, -3.3240e-02, -1.2417e-01, -2.6514e-01,  1.7712e-01,
          4.3917e-02,  1.3422e-01,  1.0808e-01,  5.0506e-01, -1.8983e-01,
          1.7686e-01,  2.2824e-01, -9.5737e-02, -5.2360e-02, -3.7363e-01,
          6.7628e-02,  2.5713e-01, -1.1060e-01,  5.2447e-01, -1.0023e-01,
         -4.2659e-01, -4.5472e-01, -2.2913e-01,  5.3889e-01, -8.2913e-02,
          6.6006e-01,  4.3077e-01,  1.3429e-01, -8.5115e-02, -2.2702e-01,
         -2.0697e-01,  1.1756e-01,  5.7381e-03, -5.8776e-01, -4.3800e-01,
          3.6753e-02,  1.0275e-01, -1.1674e-02, -3.9491e-01,  7.7292e-02,
          8.3843e-02,  2.7386e-01, -4.6067e-01, -1.1518e-02,  3.4118e-01,
          2.7245e-01,  8.7169e-02, -2.2933e-01, -8.3294e-02, -3.6868e-01,
         -2.0071e-01,  6.3015e-03,  1.5185e-01, -1.8882e-01, -2.0175e-01,
          1.6099e-01, -3.0264e-01, -2.4184e-01,  4.4945e-01,  3.5233e-01,
         -7.8484e-01,  8.5875e-01, -2.5220e-01, -2.6835e-01, -7.0353e-01,
         -5.2609e-03,  2.1101e-01,  2.9916e-01, -3.9007e-01, -3.7383e-01,
         -3.5443e-02,  7.7219e-01,  1.0872e-01, -3.4367e-01, -1.1374e-01,
         -1.1756e-02, -1.8687e-02,  3.0628e-02, -1.0953e-01,  1.5835e-02,
          1.2930e-01, -7.0741e-02, -1.9076e-03,  2.5587e-01,  1.3001e-01,
          1.0443e-01,  8.8001e-02, -1.0346e-01,  4.5831e-02,  7.8156e-02,
          1.3695e-02, -8.1191e-02,  1.3711e-03,  8.5639e-02, -4.8008e-03,
         -3.1319e-02, -1.0469e-01,  7.3263e-02, -1.8731e-01,  5.3764e-02,
          4.0640e-02,  1.2811e-01, -1.3490e-01,  1.5316e-01,  1.7520e-01,
         -5.5475e-02,  2.4315e-01, -7.3832e-02, -1.2388e-01, -2.1223e-01,
         -3.2136e-01,  4.6330e-01, -1.8701e-02, -1.2321e-01,  7.1532e-02,
         -1.0396e-01, -8.3609e-02, -1.5833e-01, -9.4847e-02,  3.2753e-03,
         -1.3500e-01,  1.6426e-01, -2.1156e-01, -2.8488e-01,  1.6350e-01,
         -2.6643e-01]], device='cuda:0') tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
946000 特征值优化 tensor(0.9975, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1549e-01, -7.8716e-01,  1.0548e+00, -9.6081e-01,  9.1376e-01,
          2.7259e+00, -4.5130e-01, -9.6542e-01,  6.2972e-01,  1.6688e-01,
          6.0361e-02,  2.6091e-01,  2.3391e-01, -7.9004e-01, -3.1882e-01,
         -2.5751e-01,  1.0557e-01, -3.7757e-01, -1.1439e-01,  2.0732e-01,
         -3.7888e-01, -3.0567e-01,  2.7780e-02, -1.1451e-01,  1.9924e-01,
         -9.4699e-01,  1.0693e-01, -2.6784e-01, -3.0214e-01, -9.2347e-02,
          1.2188e-01, -1.5684e-02, -1.2231e-01,  2.1068e-01,  3.0343e-03,
         -7.9283e-02, -3.2459e-02, -1.2419e-01, -2.5263e-01,  1.8115e-01,
          3.1249e-02,  1.3613e-01,  1.1454e-01,  5.0182e-01, -1.9222e-01,
          1.7739e-01,  2.3006e-01, -1.0256e-01, -4.0580e-02, -3.7035e-01,
          6.6473e-02,  2.7116e-01, -1.0100e-01,  5.2827e-01, -9.5229e-02,
         -4.3339e-01, -4.5590e-01, -2.2886e-01,  5.2859e-01, -7.7824e-02,
          6.6120e-01,  4.2855e-01,  1.4007e-01, -8.5421e-02, -2.2885e-01,
         -2.0762e-01,  1.0778e-01,  3.4231e-03, -5.7799e-01, -4.3773e-01,
          2.8858e-02,  1.0474e-01, -1.3073e-02, -3.8927e-01,  8.2686e-02,
          8.3746e-02,  2.7895e-01, -4.6216e-01, -1.8763e-02,  3.5133e-01,
          2.7365e-01,  7.6520e-02, -2.3695e-01, -7.5428e-02, -3.6760e-01,
         -2.0262e-01,  1.1825e-02,  1.4206e-01, -2.0767e-01, -1.9815e-01,
          1.5878e-01, -3.0217e-01, -2.5310e-01,  4.3452e-01,  3.6165e-01,
         -7.9050e-01,  8.6755e-01, -2.5322e-01, -2.8750e-01, -7.0032e-01,
         -1.7693e-02,  2.1285e-01,  3.0579e-01, -3.8983e-01, -3.7420e-01,
         -3.6498e-02,  7.6316e-01,  1.1357e-01, -3.4365e-01, -1.1325e-01,
         -1.6245e-02, -2.0017e-02,  3.8666e-02, -1.1478e-01,  1.2952e-02,
          1.2529e-01, -6.0167e-02,  1.5702e-03,  2.5304e-01,  1.3704e-01,
          1.0746e-01,  8.2616e-02, -1.0272e-01,  4.5761e-02,  7.7648e-02,
          1.1433e-02, -7.6254e-02, -8.9165e-04,  8.6520e-02, -4.5081e-03,
         -3.4007e-02, -1.1102e-01,  6.8614e-02, -1.8328e-01,  5.1642e-02,
          3.9499e-02,  1.2223e-01, -1.3120e-01,  1.5474e-01,  1.7894e-01,
         -5.7368e-02,  2.4738e-01, -6.2155e-02, -1.3154e-01, -2.2414e-01,
         -3.1097e-01,  4.6992e-01, -1.0169e-02, -1.1933e-01,  5.9734e-02,
         -9.8253e-02, -7.3102e-02, -1.5935e-01, -9.9149e-02,  7.8798e-03,
         -1.4774e-01,  1.5650e-01, -2.0628e-01, -2.8777e-01,  1.5314e-01,
         -2.6311e-01]], device='cuda:0') tensor(0.2161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
947000 特征值优化 tensor(1.0063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-9.8662e-02, -8.0456e-01,  1.0440e+00, -9.5679e-01,  9.2494e-01,
          2.7294e+00, -4.4729e-01, -9.5437e-01,  6.2433e-01,  1.7890e-01,
          6.7163e-02,  2.7006e-01,  2.3185e-01, -8.0730e-01, -3.2592e-01,
         -2.5772e-01,  1.0768e-01, -3.9097e-01, -1.1749e-01,  2.1269e-01,
         -3.7638e-01, -3.0237e-01,  2.9810e-02, -1.2220e-01,  1.8947e-01,
         -9.3883e-01,  1.2100e-01, -2.5081e-01, -3.0738e-01, -8.5485e-02,
          1.1598e-01, -2.7833e-02, -1.1558e-01,  2.0990e-01,  1.2512e-03,
         -6.9038e-02, -3.4296e-02, -1.1929e-01, -2.6831e-01,  1.8555e-01,
          4.6164e-02,  1.3619e-01,  9.7202e-02,  5.1022e-01, -2.0075e-01,
          1.7514e-01,  2.3250e-01, -1.0344e-01, -2.5872e-02, -3.6081e-01,
          6.1913e-02,  2.7131e-01, -1.0579e-01,  5.3086e-01, -1.0350e-01,
         -4.3888e-01, -4.4700e-01, -2.2022e-01,  5.2054e-01, -7.9627e-02,
          6.4702e-01,  4.2664e-01,  1.4377e-01, -7.8306e-02, -2.2458e-01,
         -2.0817e-01,  1.0211e-01, -2.6511e-03, -5.7514e-01, -4.3852e-01,
          3.4358e-02,  1.0911e-01, -1.4410e-02, -3.9366e-01,  7.1716e-02,
          7.9562e-02,  2.7741e-01, -4.6136e-01, -1.7647e-02,  3.5971e-01,
          2.7059e-01,  6.9130e-02, -2.3939e-01, -6.7265e-02, -3.8009e-01,
         -1.9950e-01,  1.7044e-02,  1.3732e-01, -2.1321e-01, -2.0049e-01,
          1.5906e-01, -3.1211e-01, -2.4851e-01,  4.3456e-01,  3.4656e-01,
         -7.7154e-01,  8.6391e-01, -2.4964e-01, -2.8850e-01, -6.9228e-01,
         -2.0960e-02,  2.0746e-01,  2.9888e-01, -3.9414e-01, -3.7305e-01,
         -4.6926e-02,  7.6542e-01,  1.3233e-01, -3.4392e-01, -1.1614e-01,
         -1.1260e-02, -2.1224e-02,  3.5808e-02, -1.1831e-01,  1.7428e-02,
          1.2130e-01, -5.3177e-02,  1.3365e-03,  2.4573e-01,  1.4809e-01,
          1.0143e-01,  8.3016e-02, -1.0841e-01,  3.8439e-02,  7.5161e-02,
          8.4188e-03, -8.2484e-02,  5.1387e-03,  8.6168e-02,  4.9045e-03,
         -1.9350e-02, -1.0927e-01,  6.8792e-02, -1.8519e-01,  4.7638e-02,
          4.6179e-02,  1.2300e-01, -1.3720e-01,  1.5238e-01,  1.6954e-01,
         -5.4203e-02,  2.4239e-01, -6.4559e-02, -1.1989e-01, -2.2145e-01,
         -3.0765e-01,  4.6186e-01, -1.5511e-02, -1.2350e-01,  7.2278e-02,
         -9.8571e-02, -5.5749e-02, -1.5682e-01, -9.2647e-02,  1.6419e-02,
         -1.4882e-01,  1.6205e-01, -2.1634e-01, -2.8798e-01,  1.4323e-01,
         -2.5938e-01]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
948000 特征值优化 tensor(0.9229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.7264e-02, -8.9395e-01,  1.0946e+00, -1.0144e+00,  1.1092e+00,
          2.8394e+00, -4.6858e-01, -8.7241e-01,  5.1543e-01,  1.5080e-01,
          1.6797e-01,  3.0146e-01,  3.0788e-01, -7.9049e-01, -2.9964e-01,
         -1.2723e-01,  1.1732e-01, -4.0132e-01, -6.5928e-02,  2.4600e-01,
         -3.4721e-01, -3.7392e-01,  3.3725e-02, -9.8383e-02,  2.5102e-01,
         -9.2836e-01,  1.1919e-01, -1.9429e-01, -2.7277e-01, -9.9982e-02,
          1.1977e-01, -6.0457e-02, -8.3998e-02,  2.2311e-01, -1.5864e-02,
         -4.5608e-02, -3.0241e-02, -8.2335e-02, -2.7854e-01,  1.8948e-01,
          4.9238e-02,  1.4254e-01,  6.1373e-02,  4.8049e-01, -1.8375e-01,
          1.7921e-01,  2.1905e-01, -1.3584e-01,  7.6795e-02, -3.8387e-01,
          8.0805e-02,  2.7642e-01, -1.4578e-01,  5.4598e-01, -6.8267e-02,
         -4.2473e-01, -4.8022e-01, -2.3793e-01,  5.7038e-01, -1.0199e-01,
          6.4154e-01,  4.0805e-01,  1.1495e-01, -6.6449e-02, -2.0793e-01,
         -2.2673e-01,  1.3604e-01,  1.9012e-02, -5.7125e-01, -4.2137e-01,
          3.5661e-02,  8.6619e-02, -2.7697e-02, -4.2275e-01,  7.1900e-02,
          8.5128e-02,  2.7548e-01, -5.3308e-01,  4.9459e-03,  3.6908e-01,
          2.7288e-01,  1.0719e-01, -2.2654e-01, -1.1147e-01, -3.4168e-01,
         -1.7787e-01, -2.7478e-05,  1.1136e-01, -2.3932e-01, -1.5666e-01,
          1.5316e-01, -3.2951e-01, -3.2052e-01,  4.4131e-01,  1.2793e-01,
         -6.9252e-01,  8.7962e-01, -1.9941e-01, -1.6540e-01, -6.2624e-01,
         -8.1606e-02,  1.9220e-01,  3.2737e-01, -3.9248e-01, -3.5185e-01,
         -4.2942e-02,  7.5375e-01,  1.5762e-01, -3.0115e-01, -1.1907e-01,
         -4.8390e-02, -3.8811e-02,  2.9024e-02, -1.1492e-01, -7.9443e-03,
          1.4425e-01, -3.9083e-02, -2.0128e-02,  2.5241e-01,  1.2781e-01,
          9.2765e-02,  5.7263e-02, -1.1503e-01,  4.7925e-02,  6.3038e-02,
          2.9613e-03, -8.6321e-02, -1.0775e-02,  5.7541e-02,  3.8039e-02,
         -2.2149e-02, -1.0451e-01,  7.0825e-02, -1.5926e-01,  6.4542e-02,
          8.7808e-04,  1.1877e-01, -1.5256e-01,  1.1750e-01,  1.8879e-01,
         -1.1920e-01,  1.9384e-01, -5.0645e-02, -9.6341e-02, -1.9157e-01,
         -3.0995e-01,  4.7590e-01,  1.2879e-02, -1.1504e-01,  2.0085e-02,
         -9.4015e-02, -5.4779e-02, -1.4504e-01, -2.8801e-02, -2.5402e-02,
         -1.7740e-01,  1.4501e-01, -1.6557e-01, -2.6514e-01,  1.1640e-01,
         -2.5866e-01]], device='cuda:0') tensor(0.2113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
949000 特征值优化 tensor(0.9761, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0254e-02, -9.1196e-01,  1.1016e+00, -1.0104e+00,  1.1743e+00,
          2.8916e+00, -4.7489e-01, -8.8442e-01,  4.3320e-01,  1.6048e-01,
          2.1514e-01,  3.1154e-01,  3.2662e-01, -7.8229e-01, -2.8903e-01,
         -7.7265e-02,  9.8275e-02, -3.9627e-01, -4.6421e-02,  2.5263e-01,
         -3.3458e-01, -3.8186e-01,  2.2814e-02, -7.9506e-02,  2.3602e-01,
         -9.2125e-01,  1.3206e-01, -1.4917e-01, -2.5783e-01, -1.0517e-01,
          1.2607e-01, -6.3222e-02, -6.4823e-02,  2.2971e-01, -1.0921e-02,
         -6.1813e-02, -4.4140e-02, -6.1114e-02, -2.6342e-01,  1.8977e-01,
          5.2880e-02,  1.4337e-01,  6.6175e-02,  4.9252e-01, -1.8037e-01,
          1.8129e-01,  2.2041e-01, -1.3264e-01,  1.1873e-01, -3.6702e-01,
          7.0716e-02,  2.8220e-01, -1.7434e-01,  5.5166e-01, -4.7108e-02,
         -4.3119e-01, -4.7816e-01, -2.3197e-01,  5.5362e-01, -8.4217e-02,
          6.3353e-01,  3.9876e-01,  1.1192e-01, -6.1573e-02, -2.1173e-01,
         -2.1742e-01,  1.4834e-01,  2.6891e-02, -5.6698e-01, -4.2350e-01,
          4.9836e-02,  9.7938e-02, -8.4077e-03, -4.2791e-01,  6.1359e-02,
          9.4934e-02,  2.7610e-01, -5.5169e-01,  1.3110e-02,  3.7067e-01,
          2.7716e-01,  1.0681e-01, -2.3129e-01, -1.2495e-01, -3.5221e-01,
         -1.7280e-01,  2.8250e-03,  8.2740e-02, -2.5511e-01, -1.6789e-01,
          1.4678e-01, -3.3404e-01, -3.1842e-01,  4.4821e-01,  1.1832e-01,
         -6.9669e-01,  8.8184e-01, -1.7424e-01, -2.1527e-01, -6.1899e-01,
         -8.5661e-02,  1.9650e-01,  3.3831e-01, -3.9152e-01, -3.4307e-01,
         -3.9654e-02,  6.9639e-01,  1.6212e-01, -2.9605e-01, -1.2491e-01,
         -6.3711e-02, -5.3338e-02,  4.4263e-02, -1.1205e-01, -2.7759e-02,
          1.3219e-01, -1.5622e-02, -2.9615e-02,  2.3094e-01,  1.2357e-01,
          9.6616e-02,  3.4805e-02, -1.2389e-01,  6.6688e-02,  6.4125e-02,
          3.7693e-04, -8.4927e-02, -2.7043e-02,  4.7398e-02,  5.4331e-02,
         -1.5088e-02, -1.0233e-01,  6.1080e-02, -1.5775e-01,  6.6051e-02,
         -3.3527e-03,  1.1322e-01, -1.5322e-01,  8.6781e-02,  1.8220e-01,
         -1.2086e-01,  1.7969e-01, -7.4951e-02, -9.5871e-02, -1.4935e-01,
         -3.1229e-01,  4.6759e-01,  3.2950e-04, -1.2181e-01,  2.5965e-02,
         -9.8459e-02, -3.4223e-02, -1.3870e-01, -2.0406e-02, -2.8873e-02,
         -1.7571e-01,  1.3389e-01, -1.6720e-01, -2.5970e-01,  9.2715e-02,
         -2.4088e-01]], device='cuda:0') tensor(0.2655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
950000 特征值优化 tensor(0.9373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-7.8291e-03, -9.4291e-01,  1.1067e+00, -1.0138e+00,  1.2307e+00,
          2.9392e+00, -4.8099e-01, -9.3742e-01,  3.6781e-01,  1.6498e-01,
          2.5807e-01,  2.9647e-01,  3.1255e-01, -7.8991e-01, -3.0448e-01,
         -7.0022e-02,  9.5358e-02, -3.9496e-01, -4.6268e-02,  2.3322e-01,
         -3.1407e-01, -3.6749e-01,  2.2604e-02, -7.8416e-02,  2.3834e-01,
         -9.1236e-01,  1.3923e-01, -1.2747e-01, -2.4653e-01, -9.4978e-02,
          1.3502e-01, -6.6778e-02, -5.1674e-02,  2.2007e-01, -6.5738e-03,
         -6.5612e-02, -4.3928e-02, -5.2182e-02, -2.7165e-01,  1.9680e-01,
          6.7987e-02,  1.4258e-01,  6.2109e-02,  4.9103e-01, -1.8710e-01,
          1.6819e-01,  2.1326e-01, -1.1714e-01,  1.2866e-01, -3.4528e-01,
          6.8320e-02,  2.8483e-01, -1.8027e-01,  5.4620e-01, -5.2136e-02,
         -4.5243e-01, -4.7698e-01, -2.0625e-01,  5.2423e-01, -6.5024e-02,
          6.3588e-01,  3.8958e-01,  1.1860e-01, -7.1237e-02, -2.0793e-01,
         -2.1677e-01,  1.6627e-01,  1.3139e-02, -5.7762e-01, -4.1742e-01,
          4.5837e-02,  1.1367e-01,  1.3332e-03, -4.4493e-01,  5.3444e-02,
          9.3406e-02,  2.7493e-01, -5.4945e-01,  7.2951e-03,  3.9045e-01,
          2.8110e-01,  9.8093e-02, -2.3417e-01, -1.1239e-01, -3.5733e-01,
         -1.8685e-01, -8.3265e-03,  7.0283e-02, -2.8694e-01, -1.8625e-01,
          1.3693e-01, -3.2484e-01, -2.9481e-01,  4.3134e-01,  1.2957e-01,
         -6.9685e-01,  8.7976e-01, -1.5661e-01, -2.4359e-01, -6.0046e-01,
         -7.0199e-02,  2.1027e-01,  3.4892e-01, -3.9709e-01, -3.4517e-01,
         -4.9860e-02,  6.5758e-01,  1.6777e-01, -2.9226e-01, -1.1718e-01,
         -8.1051e-02, -5.2486e-02,  5.3579e-02, -1.1987e-01, -3.0614e-02,
          1.1377e-01, -6.8242e-04, -2.3286e-02,  2.1455e-01,  1.2585e-01,
          9.1479e-02,  1.8686e-02, -1.1784e-01,  7.1506e-02,  6.3615e-02,
         -2.9961e-03, -7.5377e-02, -2.4221e-02,  4.8925e-02,  5.3566e-02,
         -6.2893e-03, -1.1355e-01,  5.9017e-02, -1.5746e-01,  7.4580e-02,
         -4.4146e-03,  1.0821e-01, -1.7174e-01,  5.0963e-02,  1.7255e-01,
         -1.2298e-01,  1.8180e-01, -7.6091e-02, -8.3338e-02, -1.5422e-01,
         -3.0826e-01,  4.7100e-01, -2.4708e-03, -1.3516e-01,  4.1115e-02,
         -1.0002e-01, -9.3419e-03, -1.4350e-01, -1.8795e-02, -3.1099e-02,
         -1.8247e-01,  1.3366e-01, -1.6709e-01, -2.5893e-01,  7.0765e-02,
         -2.3510e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
951000 特征值优化 tensor(0.9590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2962e-02, -9.7791e-01,  1.0931e+00, -1.0159e+00,  1.2946e+00,
          2.9832e+00, -5.0591e-01, -9.7066e-01,  3.2417e-01,  1.5682e-01,
          2.7588e-01,  3.1825e-01,  3.2835e-01, -8.1495e-01, -2.9572e-01,
         -6.9615e-02,  8.6952e-02, -3.9228e-01, -3.3718e-02,  2.4413e-01,
         -2.8865e-01, -3.4550e-01,  3.9442e-02, -7.3492e-02,  2.3032e-01,
         -9.0395e-01,  1.5406e-01, -1.0864e-01, -2.3971e-01, -9.3590e-02,
          1.4695e-01, -6.3941e-02, -5.8395e-02,  2.3482e-01,  1.9957e-03,
         -7.0168e-02, -5.4497e-02, -4.3297e-02, -2.7057e-01,  1.9582e-01,
          7.3869e-02,  1.4506e-01,  6.3896e-02,  4.8736e-01, -1.8611e-01,
          1.6776e-01,  2.2070e-01, -1.1258e-01,  1.2510e-01, -3.1897e-01,
          6.7108e-02,  2.9795e-01, -1.7992e-01,  5.3910e-01, -4.6456e-02,
         -4.5494e-01, -4.7994e-01, -2.0842e-01,  5.0287e-01, -6.3620e-02,
          6.3611e-01,  3.8341e-01,  1.1704e-01, -6.2327e-02, -2.1163e-01,
         -2.1586e-01,  1.6014e-01,  1.7482e-02, -5.7132e-01, -4.2643e-01,
          4.3141e-02,  1.1628e-01,  7.2701e-03, -4.5135e-01,  4.4865e-02,
          8.9853e-02,  2.6182e-01, -5.5789e-01,  2.2836e-02,  4.0089e-01,
          2.8841e-01,  9.0442e-02, -2.3858e-01, -1.2117e-01, -3.6913e-01,
         -1.7489e-01,  2.2430e-03,  5.6624e-02, -3.0679e-01, -1.8283e-01,
          1.2707e-01, -3.1099e-01, -2.8912e-01,  4.3913e-01,  1.2564e-01,
         -6.9430e-01,  8.7930e-01, -1.3443e-01, -2.4038e-01, -5.8655e-01,
         -6.4042e-02,  2.0941e-01,  3.5162e-01, -4.0386e-01, -3.4809e-01,
         -4.5938e-02,  6.2477e-01,  1.6474e-01, -2.9671e-01, -1.1728e-01,
         -7.7091e-02, -6.5038e-02,  5.1738e-02, -1.2056e-01, -2.2408e-02,
          9.8881e-02, -8.1028e-03, -3.8884e-02,  2.1250e-01,  1.2207e-01,
          9.3619e-02,  1.9140e-02, -1.2469e-01,  7.4269e-02,  6.6469e-02,
         -5.3751e-03, -6.9618e-02, -2.5222e-02,  4.8904e-02,  5.4153e-02,
         -1.4874e-02, -1.0353e-01,  5.4513e-02, -1.5353e-01,  7.3187e-02,
         -5.4949e-03,  1.0778e-01, -1.6522e-01,  4.0596e-02,  1.5416e-01,
         -1.2905e-01,  1.7460e-01, -6.6894e-02, -7.5473e-02, -1.6536e-01,
         -3.0071e-01,  4.6140e-01, -8.6305e-03, -1.3442e-01,  3.7909e-02,
         -8.9419e-02, -7.1152e-06, -1.4676e-01, -1.1507e-02, -2.3334e-02,
         -1.7140e-01,  1.3077e-01, -1.5953e-01, -2.5259e-01,  6.6064e-02,
         -2.2781e-01]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
952000 特征值优化 tensor(0.9251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1445e-02, -9.9279e-01,  1.1168e+00, -1.0144e+00,  1.3046e+00,
          3.0191e+00, -5.0319e-01, -1.0045e+00,  2.8561e-01,  1.7157e-01,
          2.8058e-01,  3.1336e-01,  2.9955e-01, -8.1161e-01, -3.1622e-01,
         -6.4275e-02,  9.3566e-02, -3.8868e-01, -3.6481e-02,  2.3649e-01,
         -2.7091e-01, -3.4960e-01,  4.5070e-02, -6.8939e-02,  2.2611e-01,
         -9.0641e-01,  1.4720e-01, -8.7378e-02, -2.2000e-01, -7.8491e-02,
          1.4544e-01, -7.0936e-02, -5.8834e-02,  2.1704e-01,  3.7253e-03,
         -7.1387e-02, -5.2076e-02, -3.3954e-02, -2.6889e-01,  1.9249e-01,
          6.9032e-02,  1.4225e-01,  6.3536e-02,  4.9498e-01, -2.0513e-01,
          1.6047e-01,  2.1612e-01, -1.0749e-01,  1.3748e-01, -3.1398e-01,
          5.9509e-02,  2.9615e-01, -1.8277e-01,  5.3851e-01, -4.8406e-02,
         -4.7291e-01, -4.7679e-01, -1.9260e-01,  4.8314e-01, -5.3803e-02,
          6.4772e-01,  3.7881e-01,  1.1432e-01, -7.2698e-02, -2.0337e-01,
         -2.1718e-01,  1.7183e-01,  1.6151e-02, -5.7323e-01, -4.2019e-01,
          3.9727e-02,  1.2641e-01,  1.0750e-02, -4.5495e-01,  3.9610e-02,
          8.6734e-02,  2.5730e-01, -5.5814e-01,  2.4504e-02,  4.1019e-01,
          2.9006e-01,  8.3474e-02, -2.4231e-01, -1.1190e-01, -3.6324e-01,
         -1.8405e-01, -9.1836e-03,  4.3355e-02, -3.1101e-01, -1.8359e-01,
          1.2119e-01, -3.0001e-01, -2.9249e-01,  4.3793e-01,  1.2802e-01,
         -7.0039e-01,  8.8726e-01, -1.3207e-01, -2.6388e-01, -5.8141e-01,
         -6.0233e-02,  2.2690e-01,  3.5951e-01, -4.0989e-01, -3.4207e-01,
         -4.1962e-02,  6.0305e-01,  1.6393e-01, -3.0230e-01, -1.1001e-01,
         -8.3423e-02, -7.1425e-02,  4.8899e-02, -1.2691e-01, -2.6989e-02,
          9.0480e-02,  9.7704e-03, -3.0422e-02,  2.1103e-01,  1.2194e-01,
          8.9776e-02,  2.1667e-02, -1.1699e-01,  7.6688e-02,  6.7033e-02,
         -1.3747e-02, -6.6294e-02, -2.9490e-02,  4.5676e-02,  5.9773e-02,
         -7.4063e-03, -1.0651e-01,  5.6038e-02, -1.4931e-01,  7.2559e-02,
         -8.2005e-03,  1.0021e-01, -1.6731e-01,  2.4925e-02,  1.5865e-01,
         -1.1040e-01,  1.6427e-01, -8.5098e-02, -8.0290e-02, -1.6015e-01,
         -2.9642e-01,  4.6601e-01, -2.7437e-03, -1.4168e-01,  3.5207e-02,
         -9.2300e-02,  1.8597e-02, -1.4556e-01, -1.3457e-02, -2.8779e-02,
         -1.7388e-01,  1.2818e-01, -1.6923e-01, -2.5299e-01,  5.1243e-02,
         -2.3496e-01]], device='cuda:0') tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
953000 特征值优化 tensor(0.9272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.7087e-02, -9.9275e-01,  1.1074e+00, -1.0147e+00,  1.3205e+00,
          3.0500e+00, -5.1300e-01, -1.0087e+00,  2.6223e-01,  1.6943e-01,
          2.9558e-01,  3.2669e-01,  2.9807e-01, -8.3226e-01, -2.9336e-01,
         -9.6052e-02,  7.6048e-02, -3.8029e-01, -3.8251e-02,  2.2857e-01,
         -2.4763e-01, -3.4616e-01,  4.5520e-02, -4.7625e-02,  2.2516e-01,
         -8.7902e-01,  1.7472e-01, -9.2762e-02, -2.2233e-01, -6.9839e-02,
          1.5321e-01, -7.9443e-02, -8.0828e-02,  2.2777e-01,  2.5339e-03,
         -7.1661e-02, -4.6494e-02, -1.5005e-02, -2.4955e-01,  1.8991e-01,
          7.5792e-02,  1.3937e-01,  7.2808e-02,  4.7892e-01, -2.1214e-01,
          1.6990e-01,  2.1670e-01, -1.1125e-01,  1.4467e-01, -2.9939e-01,
          6.2123e-02,  3.0678e-01, -1.8154e-01,  5.2994e-01, -4.4885e-02,
         -4.7427e-01, -4.5404e-01, -2.1137e-01,  4.7035e-01, -5.7524e-02,
          6.4797e-01,  3.6826e-01,  1.1049e-01, -6.5023e-02, -2.1242e-01,
         -2.3388e-01,  1.6111e-01,  2.6849e-02, -5.6064e-01, -4.2761e-01,
          2.7695e-02,  1.1574e-01,  4.9579e-03, -4.5449e-01,  5.2919e-02,
          1.0533e-01,  2.3706e-01, -5.7176e-01,  4.9186e-02,  4.0480e-01,
          2.9727e-01,  8.6350e-02, -2.5165e-01, -1.3662e-01, -3.7953e-01,
         -1.5973e-01, -4.7173e-03,  1.9660e-02, -2.9403e-01, -1.6211e-01,
          1.1525e-01, -3.1527e-01, -3.0379e-01,  4.1327e-01,  1.4188e-01,
         -6.8746e-01,  9.0156e-01, -1.4416e-01, -2.6410e-01, -5.5345e-01,
         -6.7761e-02,  2.3164e-01,  3.7775e-01, -4.1660e-01, -3.5162e-01,
         -3.1636e-02,  5.7271e-01,  1.6335e-01, -3.1409e-01, -1.0624e-01,
         -7.9875e-02, -7.2433e-02,  3.8872e-02, -1.2141e-01, -2.2169e-02,
          8.9262e-02, -5.6405e-04, -4.3557e-02,  2.1891e-01,  1.1797e-01,
          8.9419e-02,  3.3912e-02, -1.2401e-01,  7.3772e-02,  7.5095e-02,
         -5.6411e-03, -5.2072e-02, -2.6576e-02,  5.0812e-02,  6.2192e-02,
         -8.9419e-03, -8.8680e-02,  6.6075e-02, -1.4425e-01,  7.6033e-02,
          1.2506e-02,  1.1285e-01, -1.7493e-01,  3.8590e-02,  1.6329e-01,
         -1.3027e-01,  1.4589e-01, -9.4235e-02, -9.3876e-02, -1.4505e-01,
         -3.1137e-01,  4.6598e-01, -1.8579e-02, -1.4181e-01,  3.8200e-02,
         -8.7586e-02,  8.1408e-03, -1.5185e-01,  1.1295e-02, -1.2696e-02,
         -1.5812e-01,  1.2014e-01, -1.7596e-01, -2.5457e-01,  6.7781e-02,
         -2.2120e-01]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
954000 特征值优化 tensor(0.9237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.4699e-02, -9.9743e-01,  1.1010e+00, -1.0135e+00,  1.3771e+00,
          3.0822e+00, -5.1260e-01, -1.0328e+00,  2.2985e-01,  1.6728e-01,
          2.9838e-01,  3.2224e-01,  2.6343e-01, -8.2647e-01, -2.9863e-01,
         -8.5887e-02,  8.4155e-02, -3.8856e-01, -2.9359e-02,  2.1895e-01,
         -2.5127e-01, -3.5588e-01,  5.4039e-02, -5.7144e-02,  2.2983e-01,
         -9.0275e-01,  1.5143e-01, -6.0513e-02, -1.8848e-01, -6.6044e-02,
          1.5822e-01, -7.7221e-02, -7.9131e-02,  2.0200e-01,  1.4753e-02,
         -8.2085e-02, -5.0216e-02, -3.1424e-02, -2.3736e-01,  1.9895e-01,
          7.5599e-02,  1.3937e-01,  6.6541e-02,  4.8818e-01, -2.1992e-01,
          1.7223e-01,  2.2117e-01, -9.7840e-02,  1.4805e-01, -3.0155e-01,
          6.2591e-02,  3.1135e-01, -1.8310e-01,  5.3399e-01, -4.1989e-02,
         -4.7882e-01, -4.5722e-01, -1.9783e-01,  4.5693e-01, -4.8584e-02,
          6.5309e-01,  3.6521e-01,  1.1446e-01, -6.6885e-02, -2.1201e-01,
         -2.3006e-01,  1.6714e-01,  3.2122e-02, -5.5474e-01, -4.2271e-01,
          2.4936e-02,  1.1965e-01,  8.7840e-03, -4.5593e-01,  4.7283e-02,
          1.0658e-01,  2.2778e-01, -5.7471e-01,  6.3336e-02,  4.1427e-01,
          2.8895e-01,  7.5524e-02, -2.5376e-01, -1.2578e-01, -3.6223e-01,
         -1.7032e-01, -2.1855e-02,  1.4736e-02, -3.0848e-01, -1.5162e-01,
          1.2046e-01, -3.0527e-01, -3.0245e-01,  4.1009e-01,  1.3137e-01,
         -6.8792e-01,  8.9926e-01, -1.2972e-01, -2.6162e-01, -5.4081e-01,
         -7.1507e-02,  2.3757e-01,  3.7501e-01, -4.2234e-01, -3.3331e-01,
         -2.8728e-02,  5.7823e-01,  1.4971e-01, -3.1218e-01, -1.0219e-01,
         -8.2808e-02, -8.1357e-02,  4.8991e-02, -1.3138e-01, -1.9468e-02,
          8.2244e-02,  3.7570e-03, -3.6176e-02,  2.1499e-01,  1.1030e-01,
          8.0201e-02,  4.1610e-02, -1.2594e-01,  7.5613e-02,  7.1421e-02,
         -1.1478e-02, -5.2960e-02, -3.0825e-02,  5.1661e-02,  6.6929e-02,
         -1.6064e-02, -8.4468e-02,  7.1695e-02, -1.4099e-01,  7.2731e-02,
          3.3561e-03,  1.1262e-01, -1.7764e-01,  2.8514e-02,  1.6453e-01,
         -1.0676e-01,  1.4225e-01, -1.0907e-01, -8.5607e-02, -1.4063e-01,
         -2.9439e-01,  4.7267e-01, -9.4336e-03, -1.4695e-01,  3.7628e-02,
         -8.1665e-02,  2.3985e-02, -1.4721e-01,  7.8049e-04, -3.4666e-02,
         -1.6358e-01,  1.0930e-01, -1.7540e-01, -2.5183e-01,  4.7938e-02,
         -2.3624e-01]], device='cuda:0') tensor(0.2069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
955000 特征值优化 tensor(0.9179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2211e-01, -9.8154e-01,  1.0857e+00, -1.0137e+00,  1.3925e+00,
          3.1083e+00, -5.2176e-01, -1.0616e+00,  1.8627e-01,  1.8984e-01,
          3.1683e-01,  3.4454e-01,  2.7411e-01, -8.3516e-01, -2.9538e-01,
         -8.6233e-02,  1.0495e-01, -3.9156e-01, -4.1328e-02,  2.0341e-01,
         -2.7344e-01, -3.4678e-01,  4.6834e-02, -6.9996e-02,  2.3992e-01,
         -8.8414e-01,  1.5529e-01, -5.4684e-02, -1.6659e-01, -5.8872e-02,
          1.6536e-01, -8.3225e-02, -1.0168e-01,  2.0902e-01,  2.1371e-02,
         -8.7197e-02, -5.3265e-02, -3.5737e-02, -2.6594e-01,  1.9278e-01,
          8.0363e-02,  1.3710e-01,  6.6771e-02,  4.9016e-01, -2.2641e-01,
          1.5525e-01,  2.0808e-01, -9.1442e-02,  1.6231e-01, -3.0156e-01,
          7.6592e-02,  3.1558e-01, -2.0078e-01,  5.2845e-01, -3.3969e-02,
         -4.9417e-01, -4.5334e-01, -1.8202e-01,  4.5306e-01, -5.6460e-02,
          6.5392e-01,  3.5747e-01,  1.1412e-01, -5.8567e-02, -2.0258e-01,
         -2.2196e-01,  1.7184e-01,  2.0935e-02, -5.5908e-01, -4.2366e-01,
          2.4325e-02,  1.1634e-01,  8.2688e-03, -4.6233e-01,  2.9895e-02,
          1.0241e-01,  2.2233e-01, -5.7316e-01,  4.0214e-02,  4.1538e-01,
          2.8360e-01,  6.1673e-02, -2.5607e-01, -1.1144e-01, -3.7006e-01,
         -1.6873e-01, -2.6094e-02, -1.9751e-04, -2.9082e-01, -1.5857e-01,
          1.2000e-01, -2.8935e-01, -3.1141e-01,  4.1075e-01,  1.3324e-01,
         -6.8471e-01,  9.0232e-01, -1.1781e-01, -2.6682e-01, -5.3929e-01,
         -7.3774e-02,  2.2975e-01,  3.5968e-01, -4.2881e-01, -3.1822e-01,
         -4.7609e-02,  5.5336e-01,  1.5242e-01, -3.0274e-01, -1.0213e-01,
         -9.1792e-02, -8.3648e-02,  4.1858e-02, -1.3513e-01, -2.5046e-02,
          7.0427e-02,  1.1622e-02, -2.8930e-02,  2.1500e-01,  1.1627e-01,
          7.4058e-02,  3.3426e-02, -1.1185e-01,  6.9124e-02,  7.1748e-02,
         -1.2090e-02, -5.2664e-02, -2.9988e-02,  5.9574e-02,  7.9479e-02,
         -1.3069e-02, -7.6893e-02,  7.7630e-02, -1.3951e-01,  6.1712e-02,
         -1.6927e-02,  1.0286e-01, -1.5432e-01,  9.1014e-03,  1.4828e-01,
         -1.0322e-01,  1.4585e-01, -1.0940e-01, -9.9054e-02, -1.6327e-01,
         -3.0027e-01,  4.7516e-01, -8.3738e-04, -1.4526e-01,  2.4713e-02,
         -7.4668e-02,  2.6512e-02, -1.5639e-01,  1.0182e-02, -4.2995e-02,
         -1.7368e-01,  1.1231e-01, -1.7601e-01, -2.5664e-01,  4.0467e-02,
         -2.4866e-01]], device='cuda:0') tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
956000 特征值优化 tensor(0.9440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8144e-01, -9.8967e-01,  1.0573e+00, -1.0095e+00,  1.3817e+00,
          3.1225e+00, -5.4511e-01, -1.0445e+00,  1.7471e-01,  1.6483e-01,
          3.0512e-01,  3.5674e-01,  2.8971e-01, -8.6863e-01, -3.0688e-01,
         -7.8989e-02,  8.4958e-02, -3.7552e-01, -4.9010e-02,  2.0256e-01,
         -2.9649e-01, -3.6597e-01,  4.0838e-02, -6.2871e-02,  2.1289e-01,
         -8.8076e-01,  1.8374e-01, -4.1397e-02, -1.8715e-01, -5.9361e-02,
          1.7179e-01, -8.1686e-02, -9.0617e-02,  2.3583e-01,  2.5222e-02,
         -8.1912e-02, -5.4403e-02, -3.0965e-02, -2.4886e-01,  1.8111e-01,
          6.1622e-02,  1.4358e-01,  6.4366e-02,  4.8653e-01, -2.2879e-01,
          1.7131e-01,  2.2406e-01, -1.0163e-01,  1.5099e-01, -2.9647e-01,
          7.6897e-02,  3.1566e-01, -1.9212e-01,  5.1927e-01, -4.9931e-02,
         -4.8325e-01, -4.5889e-01, -1.9746e-01,  4.3980e-01, -6.1213e-02,
          6.3605e-01,  3.6070e-01,  1.1654e-01, -6.0723e-02, -2.1632e-01,
         -2.2061e-01,  1.5496e-01,  3.0280e-02, -5.5705e-01, -4.1961e-01,
          2.5107e-02,  1.3117e-01,  1.8883e-02, -4.5831e-01,  4.3611e-02,
          1.1186e-01,  2.2171e-01, -5.7822e-01,  6.2822e-02,  4.1517e-01,
          2.9320e-01,  7.2095e-02, -2.6296e-01, -1.2357e-01, -3.7877e-01,
         -1.6152e-01, -8.8973e-03, -3.8192e-03, -3.2047e-01, -1.6559e-01,
          1.1042e-01, -2.9417e-01, -3.1251e-01,  4.2695e-01,  1.2404e-01,
         -6.7991e-01,  9.0366e-01, -1.3678e-01, -2.8282e-01, -5.4326e-01,
         -7.7758e-02,  2.3484e-01,  3.6999e-01, -4.2061e-01, -3.1155e-01,
         -3.4576e-02,  5.4094e-01,  1.6099e-01, -2.9939e-01, -9.8496e-02,
         -8.4868e-02, -9.6086e-02,  3.5575e-02, -1.2335e-01, -2.4356e-02,
          9.2275e-02,  1.7898e-04, -4.0851e-02,  1.9521e-01,  1.0514e-01,
          7.3928e-02,  2.2969e-02, -1.2083e-01,  8.1581e-02,  8.1540e-02,
         -2.1997e-02, -6.3057e-02, -3.6192e-02,  4.4451e-02,  7.1385e-02,
         -1.5963e-02, -8.6020e-02,  6.4146e-02, -1.4340e-01,  7.0617e-02,
         -7.6183e-03,  9.9210e-02, -1.6485e-01,  3.8592e-02,  1.5855e-01,
         -1.0630e-01,  1.3370e-01, -1.1054e-01, -8.9410e-02, -1.5050e-01,
         -3.0160e-01,  4.7022e-01, -1.4895e-02, -1.3795e-01,  2.1652e-02,
         -9.4566e-02,  2.4636e-02, -1.5456e-01,  1.9322e-02, -1.8717e-02,
         -1.4842e-01,  1.2841e-01, -1.7910e-01, -2.4643e-01,  4.7125e-02,
         -2.1967e-01]], device='cuda:0') tensor(0.2139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
957000 特征值优化 tensor(0.9310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1546, -0.9748,  1.0819, -1.0140,  1.3633,  3.1978, -0.5504, -1.0697,
          0.0867,  0.1877,  0.3239,  0.3253,  0.2977, -0.8263, -0.3127, -0.0390,
          0.0613, -0.3704, -0.0368,  0.1848, -0.2648, -0.3564,  0.0377, -0.0786,
          0.2173, -0.8919,  0.2057, -0.0072, -0.1945, -0.0360,  0.1820, -0.0896,
         -0.0483,  0.2483,  0.0325, -0.0673, -0.0368, -0.0219, -0.2358,  0.1500,
          0.0726,  0.1531,  0.0636,  0.4812, -0.2448,  0.1354,  0.2167, -0.0619,
          0.1520, -0.2997,  0.0513,  0.3181, -0.2116,  0.5147, -0.0515, -0.5035,
         -0.4497, -0.2034,  0.4268, -0.0570,  0.6421,  0.3532,  0.0989, -0.0679,
         -0.1978, -0.2278,  0.1619,  0.0216, -0.5799, -0.4118,  0.0036,  0.1310,
          0.0174, -0.4570,  0.0494,  0.1162,  0.2360, -0.5950,  0.0290,  0.4122,
          0.2900,  0.0662, -0.2572, -0.1463, -0.3396, -0.1784, -0.0240, -0.0251,
         -0.3323, -0.2035,  0.1014, -0.3132, -0.3047,  0.4090,  0.1023, -0.6934,
          0.9252, -0.0768, -0.2323, -0.5545, -0.0771,  0.2213,  0.3974, -0.4408,
         -0.3170, -0.0289,  0.5393,  0.1820, -0.2804, -0.0874, -0.0799, -0.0870,
          0.0272, -0.1321, -0.0357,  0.0649,  0.0217, -0.0536,  0.1987,  0.1076,
          0.0869,  0.0074, -0.1051,  0.0776,  0.0679, -0.0234, -0.0427, -0.0420,
          0.0355,  0.0663,  0.0037, -0.0906,  0.0673, -0.1327,  0.0767, -0.0086,
          0.0912, -0.1723,  0.0348,  0.1633, -0.1124,  0.1399, -0.1276, -0.0895,
         -0.1791, -0.2934,  0.4681, -0.0129, -0.1413,  0.0249, -0.0802,  0.0125,
         -0.1515,  0.0192, -0.0200, -0.1669,  0.1555, -0.1819, -0.2212,  0.0395,
         -0.2149]], device='cuda:0') tensor(0.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
958000 特征值优化 tensor(0.8486, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9097e-02, -9.4436e-01,  1.0087e+00, -1.0071e+00,  1.4153e+00,
          3.2710e+00, -6.5963e-01, -1.0517e+00,  9.0367e-02,  1.7105e-01,
          3.8799e-01,  3.1723e-01,  3.0457e-01, -8.2728e-01, -2.7797e-01,
         -2.6094e-02,  8.8931e-02, -4.2168e-01, -3.8535e-02,  1.6633e-01,
         -2.3496e-01, -3.3139e-01,  4.4470e-02, -6.1650e-02,  1.8358e-01,
         -9.1588e-01,  2.1167e-01, -2.9317e-04, -2.1016e-01, -2.0781e-02,
          1.6029e-01, -8.1473e-02, -1.1093e-01,  2.8084e-01,  2.3146e-02,
         -5.3033e-02,  9.9579e-04, -1.4868e-02, -2.6749e-01,  1.2813e-01,
          7.1206e-02,  2.1585e-01, -8.6065e-03,  4.5350e-01, -2.7575e-01,
          8.9741e-02,  2.0522e-01, -6.8667e-02,  1.6270e-01, -2.9268e-01,
          2.6575e-02,  2.8176e-01, -2.0961e-01,  5.0208e-01, -5.5700e-02,
         -4.9470e-01, -4.7170e-01, -1.8514e-01,  3.8755e-01, -5.0303e-02,
          6.5524e-01,  3.4154e-01,  2.2425e-02, -5.7415e-02, -1.6354e-01,
         -2.1253e-01,  1.5568e-01,  4.3356e-03, -5.7690e-01, -3.9620e-01,
         -1.8687e-02,  7.5013e-02,  6.9679e-03, -4.4479e-01,  8.0108e-02,
          1.3486e-01,  2.2794e-01, -5.8459e-01,  6.4181e-03,  3.9546e-01,
          2.8908e-01,  7.8200e-02, -2.5027e-01, -2.0540e-01, -3.0165e-01,
         -1.7742e-01, -1.3497e-02,  1.2005e-03, -2.4563e-01, -2.2691e-01,
          9.8451e-02, -3.1791e-01, -3.5992e-01,  4.1277e-01,  1.0833e-01,
         -7.3724e-01,  9.4374e-01, -5.6333e-02, -1.1303e-01, -5.6200e-01,
         -2.7898e-02,  2.1354e-01,  3.9926e-01, -4.5722e-01, -3.6544e-01,
         -5.1035e-02,  4.6329e-01,  1.9290e-01, -2.6286e-01, -7.4558e-02,
         -7.7152e-02, -8.9252e-02,  1.5076e-02, -1.2322e-01, -4.8106e-02,
          7.4882e-02,  1.9938e-02, -4.5442e-02,  2.3369e-01,  1.6631e-01,
          9.5539e-02,  5.1519e-02, -7.2944e-02,  4.1644e-02,  6.1465e-02,
          2.6402e-03, -4.1943e-02, -2.0112e-02,  6.2396e-03,  7.0163e-02,
          3.0577e-02, -1.0164e-01,  7.2975e-02, -1.0867e-01,  4.2807e-02,
         -6.0287e-03,  1.0746e-01, -1.5572e-01,  9.8831e-02,  1.6970e-01,
         -1.1536e-01,  1.4792e-01, -1.5379e-01, -1.0525e-01, -1.6026e-01,
         -3.1003e-01,  4.6445e-01, -2.3909e-02, -1.4466e-01,  3.2650e-02,
         -8.3280e-02, -3.5460e-03, -1.7118e-01,  2.7915e-02, -9.5377e-03,
         -1.8078e-01,  1.6986e-01, -1.4513e-01, -1.8803e-01,  8.5689e-02,
         -2.0053e-01]], device='cuda:0') tensor(0.2127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
959000 特征值优化 tensor(0.8491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3736e-01, -9.4709e-01,  1.0149e+00, -1.0048e+00,  1.4261e+00,
          3.3224e+00, -7.0719e-01, -1.0464e+00,  5.7758e-02,  1.4721e-01,
          4.0546e-01,  2.8848e-01,  2.5139e-01, -7.8306e-01, -2.8502e-01,
         -1.7801e-02,  7.4839e-02, -4.3907e-01, -4.9147e-02,  1.6438e-01,
         -2.3137e-01, -2.9083e-01,  4.8284e-02, -8.0839e-02,  1.5860e-01,
         -9.4159e-01,  1.8843e-01,  3.5511e-02, -1.9688e-01, -3.6646e-02,
          1.5755e-01, -7.5336e-02, -1.0224e-01,  2.6284e-01,  2.4453e-02,
         -4.3458e-02, -2.9884e-02, -1.6439e-02, -2.7373e-01,  1.2586e-01,
          7.2684e-02,  2.1404e-01, -7.9994e-03,  4.8074e-01, -2.6654e-01,
          6.4718e-02,  2.3416e-01, -5.4490e-02,  1.5685e-01, -2.9078e-01,
          3.6210e-02,  2.5638e-01, -1.9716e-01,  5.0585e-01, -5.3094e-02,
         -4.7370e-01, -4.6975e-01, -1.7179e-01,  3.8632e-01, -6.2735e-02,
          6.6942e-01,  3.3383e-01,  2.5407e-02, -6.7059e-02, -1.5530e-01,
         -2.0490e-01,  1.6886e-01, -1.6281e-02, -5.7527e-01, -4.0615e-01,
         -1.7529e-02,  6.9086e-02,  7.4920e-03, -4.4296e-01,  7.7557e-02,
          1.4211e-01,  2.4353e-01, -5.5659e-01,  8.9161e-03,  4.0193e-01,
          2.7866e-01,  8.1718e-02, -2.5145e-01, -2.0005e-01, -2.9507e-01,
         -2.0648e-01, -1.2928e-02,  2.3372e-02, -2.4254e-01, -2.1027e-01,
          9.1699e-02, -3.2453e-01, -3.5653e-01,  3.9085e-01,  1.1004e-01,
         -7.3519e-01,  9.4730e-01,  7.6543e-03, -1.2940e-01, -5.8197e-01,
          1.5715e-02,  2.2154e-01,  3.9932e-01, -4.5126e-01, -3.8625e-01,
         -2.1085e-02,  4.5136e-01,  1.9447e-01, -2.7671e-01, -8.0338e-02,
         -7.2594e-02, -6.0060e-02,  3.1105e-02, -1.2820e-01, -4.8156e-02,
          8.0662e-02,  2.0009e-02, -3.5909e-02,  2.1551e-01,  1.9799e-01,
          1.0481e-01,  3.2505e-02, -8.7105e-02,  5.8871e-02,  5.4765e-02,
          2.6958e-04, -4.1188e-02, -2.8546e-02,  1.4174e-02,  7.1808e-02,
          3.6389e-02, -9.1223e-02,  7.0273e-02, -8.9064e-02,  4.9477e-02,
          6.8293e-03,  1.1877e-01, -1.6466e-01,  9.6557e-02,  1.9096e-01,
         -1.1915e-01,  1.6298e-01, -1.2842e-01, -8.3500e-02, -1.7571e-01,
         -2.8477e-01,  4.7609e-01, -1.5512e-02, -1.4462e-01,  2.3222e-02,
         -8.0017e-02,  8.6124e-03, -1.4523e-01,  7.8279e-03, -1.0587e-02,
         -1.7955e-01,  1.6732e-01, -1.3547e-01, -1.9465e-01,  8.0343e-02,
         -2.0545e-01]], device='cuda:0') tensor(0.2136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
960000 特征值优化 tensor(0.9027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2372e-01, -9.6724e-01,  1.0260e+00, -1.0120e+00,  1.4488e+00,
          3.3412e+00, -7.2332e-01, -1.0582e+00,  6.5873e-02,  1.2399e-01,
          4.0904e-01,  2.8660e-01,  2.6068e-01, -7.7561e-01, -2.4794e-01,
         -5.6743e-02,  5.6198e-02, -4.5239e-01, -5.4996e-02,  1.5681e-01,
         -2.1999e-01, -2.9514e-01,  4.1556e-02, -6.2690e-02,  1.3138e-01,
         -9.3637e-01,  1.8643e-01,  2.5441e-02, -2.0593e-01, -4.0362e-02,
          1.3607e-01, -6.0165e-02, -1.3183e-01,  2.5818e-01,  2.4060e-02,
         -4.3484e-02, -1.3841e-02,  3.7692e-04, -2.7411e-01,  1.1541e-01,
          6.4169e-02,  2.1591e-01, -8.8854e-03,  4.6933e-01, -2.5672e-01,
          5.6818e-02,  2.2378e-01, -7.2326e-02,  1.8254e-01, -2.8263e-01,
          5.3644e-02,  2.3874e-01, -2.0182e-01,  4.8928e-01, -4.1730e-02,
         -4.6409e-01, -4.8010e-01, -1.6894e-01,  3.7331e-01, -8.2736e-02,
          6.6068e-01,  3.2533e-01,  3.3520e-03, -7.1591e-02, -1.4601e-01,
         -1.8569e-01,  1.5828e-01, -3.3802e-03, -5.7995e-01, -4.1264e-01,
         -1.7497e-02,  7.2190e-02,  8.3738e-03, -4.2655e-01,  1.0359e-01,
          1.4952e-01,  2.3571e-01, -5.7866e-01,  2.5339e-02,  3.7698e-01,
          2.8481e-01,  7.2573e-02, -2.4786e-01, -2.1402e-01, -2.8746e-01,
         -1.8481e-01, -9.8985e-03,  1.8131e-02, -2.3043e-01, -1.9178e-01,
          9.1572e-02, -3.1536e-01, -3.9134e-01,  3.9522e-01,  1.0437e-01,
         -7.3784e-01,  9.5256e-01, -2.9642e-03, -1.2217e-01, -5.6151e-01,
          4.6746e-03,  2.2637e-01,  3.7704e-01, -4.5512e-01, -4.0044e-01,
         -6.1289e-03,  4.4160e-01,  2.0226e-01, -2.8165e-01, -7.8671e-02,
         -6.4301e-02, -4.9018e-02,  2.4358e-02, -1.2341e-01, -4.8580e-02,
          8.2674e-02,  1.8862e-02, -4.3997e-02,  2.3287e-01,  1.9346e-01,
          1.0113e-01,  3.6988e-02, -8.3595e-02,  5.0599e-02,  5.5717e-02,
          1.5034e-02, -4.3397e-02, -3.1943e-02,  8.6144e-03,  6.4163e-02,
          2.7192e-02, -9.1341e-02,  6.7602e-02, -7.6949e-02,  4.6702e-02,
         -1.3652e-02,  1.0682e-01, -1.3024e-01,  1.3207e-01,  2.0013e-01,
         -1.2750e-01,  1.3943e-01, -1.4298e-01, -1.1288e-01, -1.6717e-01,
         -3.0377e-01,  4.7888e-01, -3.6001e-02, -1.4102e-01,  2.6309e-02,
         -7.3060e-02, -1.4900e-02, -1.5110e-01,  2.9534e-02, -5.1612e-03,
         -1.9007e-01,  1.6571e-01, -1.2438e-01, -1.8838e-01,  1.0539e-01,
         -2.0556e-01]], device='cuda:0') tensor(0.2219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
961000 特征值优化 tensor(0.8497, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.1478e-01, -9.6971e-01,  1.0320e+00, -1.0089e+00,  1.4611e+00,
          3.3947e+00, -7.5230e-01, -1.0685e+00,  4.4316e-02,  1.1251e-01,
          3.9925e-01,  2.6133e-01,  2.3792e-01, -7.3659e-01, -2.4277e-01,
         -6.0853e-02,  6.4660e-02, -4.5685e-01, -5.2072e-02,  1.5588e-01,
         -2.0260e-01, -2.8298e-01,  4.3697e-02, -6.7264e-02,  1.2888e-01,
         -9.3644e-01,  1.8302e-01,  4.7620e-02, -1.8994e-01, -4.0647e-02,
          1.3275e-01, -5.4932e-02, -1.2373e-01,  2.2743e-01,  2.1565e-02,
         -3.3590e-02, -1.3899e-02,  6.2483e-03, -2.8536e-01,  1.0369e-01,
          5.8848e-02,  2.1738e-01, -7.5413e-03,  4.7997e-01, -2.5655e-01,
          4.2939e-02,  2.2469e-01, -6.6449e-02,  1.8405e-01, -2.8327e-01,
          4.6958e-02,  2.3808e-01, -2.1159e-01,  4.8735e-01, -4.1598e-02,
         -4.7883e-01, -4.7276e-01, -1.6484e-01,  3.7027e-01, -8.5135e-02,
          6.9003e-01,  3.1615e-01, -7.4492e-04, -8.0282e-02, -1.5141e-01,
         -1.8727e-01,  1.6379e-01, -3.2000e-02, -5.9455e-01, -4.1406e-01,
         -2.5114e-02,  7.4465e-02,  8.1558e-03, -4.3613e-01,  7.8637e-02,
          1.5455e-01,  2.4721e-01, -5.5264e-01,  2.3957e-03,  3.9687e-01,
          2.9031e-01,  7.4888e-02, -2.4163e-01, -2.1000e-01, -2.7234e-01,
         -2.0036e-01, -2.0415e-02,  3.4677e-02, -2.3123e-01, -2.0528e-01,
          9.8808e-02, -3.2029e-01, -3.8168e-01,  3.8760e-01,  1.0528e-01,
         -7.4367e-01,  9.6129e-01,  2.6196e-02, -1.3215e-01, -5.6862e-01,
          4.3861e-02,  2.1522e-01,  3.6272e-01, -4.4670e-01, -3.9549e-01,
         -4.4971e-03,  4.4845e-01,  2.0840e-01, -2.7135e-01, -7.6002e-02,
         -6.5484e-02, -4.0420e-02,  1.4955e-02, -1.2642e-01, -4.8991e-02,
          7.5833e-02,  9.9963e-03, -3.6269e-02,  2.3314e-01,  2.1619e-01,
          9.5768e-02,  2.4407e-02, -7.4169e-02,  4.4189e-02,  4.6255e-02,
          1.2927e-02, -4.2596e-02, -2.5800e-02,  1.2725e-02,  5.8913e-02,
          3.8610e-02, -9.7542e-02,  6.4151e-02, -7.1133e-02,  4.6771e-02,
         -7.5191e-03,  1.0636e-01, -1.3240e-01,  1.0520e-01,  1.7528e-01,
         -1.2484e-01,  1.5910e-01, -1.2847e-01, -9.5396e-02, -1.9373e-01,
         -2.8259e-01,  4.8390e-01, -2.0467e-02, -1.2994e-01,  1.6778e-02,
         -7.2445e-02, -2.0677e-03, -1.4144e-01,  1.0817e-02, -1.1619e-02,
         -1.8790e-01,  1.7468e-01, -1.4322e-01, -2.0389e-01,  9.1674e-02,
         -2.2059e-01]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
962000 特征值优化 tensor(0.8708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6119e-01, -9.6081e-01,  1.0281e+00, -1.0133e+00,  1.5139e+00,
          3.4024e+00, -7.6923e-01, -1.0662e+00,  3.3763e-02,  1.0844e-01,
          3.9139e-01,  2.7447e-01,  2.1814e-01, -7.2230e-01, -2.3945e-01,
         -3.2425e-02,  5.0948e-02, -4.4788e-01, -5.3013e-02,  1.5850e-01,
         -1.8335e-01, -2.7829e-01,  4.5302e-02, -6.6823e-02,  1.2226e-01,
         -9.4438e-01,  1.8971e-01,  4.5089e-02, -2.1158e-01, -5.5880e-02,
          1.3608e-01, -4.9834e-02, -1.2161e-01,  2.3250e-01,  1.8897e-02,
         -3.3904e-02, -1.4943e-02, -1.0609e-03, -2.7512e-01,  1.1133e-01,
          6.3765e-02,  2.1357e-01, -4.6478e-03,  4.7507e-01, -2.4218e-01,
          4.9999e-02,  2.3221e-01, -7.4222e-02,  1.7817e-01, -2.7845e-01,
          5.7391e-02,  2.3991e-01, -1.9794e-01,  4.8956e-01, -3.8237e-02,
         -4.6807e-01, -4.8045e-01, -1.7414e-01,  3.7675e-01, -9.3518e-02,
          6.8182e-01,  3.1363e-01,  5.2252e-03, -8.6215e-02, -1.4991e-01,
         -1.7455e-01,  1.6336e-01, -2.6718e-02, -5.9061e-01, -4.2044e-01,
         -1.8340e-02,  7.4115e-02,  1.0130e-02, -4.3056e-01,  8.5470e-02,
          1.4648e-01,  2.3872e-01, -5.6219e-01,  2.5526e-02,  3.9321e-01,
          2.9130e-01,  6.3811e-02, -2.4630e-01, -2.0642e-01, -2.9236e-01,
         -1.8886e-01,  4.9798e-03,  3.8541e-02, -2.1995e-01, -1.8839e-01,
          1.0446e-01, -3.2298e-01, -3.7242e-01,  3.9313e-01,  1.1316e-01,
         -7.3488e-01,  9.5829e-01,  3.5301e-02, -1.3119e-01, -5.7766e-01,
          3.2262e-02,  2.0876e-01,  3.6873e-01, -4.3719e-01, -4.0962e-01,
          4.6575e-03,  4.3953e-01,  2.0772e-01, -2.8444e-01, -8.2109e-02,
         -6.6487e-02, -3.6765e-02,  2.2731e-02, -1.1624e-01, -4.2068e-02,
          7.9596e-02,  2.3569e-03, -4.4501e-02,  2.3713e-01,  2.0884e-01,
          1.0086e-01,  4.2643e-02, -8.2029e-02,  5.8189e-02,  4.3912e-02,
          1.2120e-02, -4.6709e-02, -4.0298e-02,  1.4392e-02,  5.7862e-02,
          3.4010e-02, -8.9683e-02,  5.8927e-02, -7.0791e-02,  4.6580e-02,
          2.2980e-03,  1.1616e-01, -1.4384e-01,  1.0514e-01,  1.9049e-01,
         -1.2594e-01,  1.5699e-01, -1.3997e-01, -9.8095e-02, -1.7921e-01,
         -2.8500e-01,  4.7035e-01, -2.3177e-02, -1.3325e-01,  1.4198e-02,
         -8.2569e-02, -7.2576e-03, -1.4524e-01,  2.2785e-02, -9.4527e-04,
         -1.7704e-01,  1.7295e-01, -1.3001e-01, -1.9221e-01,  1.0428e-01,
         -2.0407e-01]], device='cuda:0') tensor(0.2031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
963000 特征值优化 tensor(0.8529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.0412e-01, -9.7598e-01,  1.0419e+00, -1.0067e+00,  1.5026e+00,
          3.4106e+00, -7.9372e-01, -1.0736e+00,  3.1722e-02,  9.3442e-02,
          3.9388e-01,  2.5205e-01,  2.1443e-01, -6.9875e-01, -2.4221e-01,
         -3.4977e-02,  4.7911e-02, -4.5403e-01, -4.7652e-02,  1.5648e-01,
         -1.7958e-01, -2.8254e-01,  6.0432e-02, -6.6656e-02,  1.1106e-01,
         -9.6089e-01,  1.8078e-01,  5.6027e-02, -2.1649e-01, -5.9634e-02,
          1.3827e-01, -5.0879e-02, -1.1638e-01,  2.1838e-01,  2.2003e-02,
         -3.6041e-02, -2.3758e-02,  2.8359e-03, -2.7383e-01,  1.1432e-01,
          6.6975e-02,  2.1429e-01, -3.6222e-03,  4.8376e-01, -2.3320e-01,
          4.9678e-02,  2.3498e-01, -8.1413e-02,  1.7871e-01, -2.7862e-01,
          5.4482e-02,  2.3376e-01, -2.0035e-01,  4.9098e-01, -3.5388e-02,
         -4.6712e-01, -4.7695e-01, -1.6642e-01,  3.7866e-01, -9.3917e-02,
          6.8754e-01,  3.1002e-01, -2.3997e-03, -7.8210e-02, -1.5007e-01,
         -1.7301e-01,  1.8035e-01, -2.3909e-02, -5.9089e-01, -4.1296e-01,
         -1.4757e-02,  7.3204e-02,  5.9459e-03, -4.3350e-01,  8.3639e-02,
          1.5754e-01,  2.4501e-01, -5.6174e-01,  3.1145e-02,  3.9461e-01,
          2.8312e-01,  7.7630e-02, -2.5066e-01, -1.9950e-01, -2.9160e-01,
         -1.9943e-01,  5.5458e-03,  5.3976e-02, -2.1237e-01, -2.0019e-01,
          8.9248e-02, -3.3142e-01, -3.7151e-01,  3.9280e-01,  9.7531e-02,
         -7.4030e-01,  9.5501e-01,  3.2395e-02, -1.4959e-01, -5.8036e-01,
          2.0912e-02,  2.2239e-01,  3.7200e-01, -4.2970e-01, -4.0634e-01,
          3.4981e-03,  4.4291e-01,  2.0992e-01, -2.7530e-01, -9.0498e-02,
         -5.7227e-02, -3.2069e-02,  3.0774e-02, -1.2321e-01, -4.8465e-02,
          8.0714e-02,  1.0122e-02, -3.3787e-02,  2.1376e-01,  2.0744e-01,
          1.1154e-01,  3.3296e-02, -8.1330e-02,  5.8131e-02,  4.0440e-02,
          1.6596e-02, -4.4638e-02, -4.0179e-02,  7.9043e-03,  5.8464e-02,
          3.8276e-02, -8.6692e-02,  6.3299e-02, -7.4380e-02,  4.6953e-02,
         -4.5421e-03,  1.2346e-01, -1.4828e-01,  1.0860e-01,  1.9822e-01,
         -1.2772e-01,  1.5964e-01, -1.3003e-01, -9.8681e-02, -1.8511e-01,
         -2.7665e-01,  4.7899e-01, -2.0975e-02, -1.3270e-01,  6.6863e-03,
         -8.5289e-02,  1.9826e-03, -1.4430e-01,  1.6646e-02, -2.9163e-03,
         -1.8221e-01,  1.6597e-01, -1.2331e-01, -1.9999e-01,  9.5439e-02,
         -1.9996e-01]], device='cuda:0') tensor(0.2421, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
964000 特征值优化 tensor(0.8522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.6237e-01, -9.9376e-01,  1.0682e+00, -1.0092e+00,  1.5269e+00,
          3.4313e+00, -8.1675e-01, -1.0572e+00,  3.7346e-02,  8.4139e-02,
          3.9358e-01,  2.7623e-01,  2.0407e-01, -6.7046e-01, -2.3433e-01,
         -2.5123e-02,  1.4681e-02, -4.5063e-01, -6.7153e-02,  1.5594e-01,
         -1.8231e-01, -2.9140e-01,  5.6561e-02, -5.8482e-02,  1.2160e-01,
         -9.5194e-01,  1.7624e-01,  5.2492e-02, -2.0003e-01, -6.6360e-02,
          1.3017e-01, -4.6812e-02, -1.3039e-01,  2.1181e-01,  2.3443e-02,
         -3.2177e-02, -1.5669e-02,  2.5063e-03, -2.6434e-01,  9.2337e-02,
          5.7258e-02,  2.1318e-01, -1.6923e-05,  5.0198e-01, -2.3708e-01,
          5.1651e-02,  2.1686e-01, -8.2797e-02,  1.8969e-01, -2.7349e-01,
          6.2630e-02,  2.4420e-01, -1.9098e-01,  4.8437e-01, -2.6188e-02,
         -4.7703e-01, -4.7138e-01, -1.8501e-01,  3.6760e-01, -1.0544e-01,
          6.8284e-01,  3.0367e-01, -1.4941e-02, -8.6816e-02, -1.3205e-01,
         -1.7314e-01,  1.6678e-01, -2.4058e-02, -5.8965e-01, -4.1629e-01,
         -1.8315e-02,  7.8027e-02,  3.9399e-03, -4.2053e-01,  9.0794e-02,
          1.5618e-01,  2.4799e-01, -5.7542e-01,  1.8438e-02,  3.7606e-01,
          2.8380e-01,  6.2724e-02, -2.4914e-01, -2.1580e-01, -2.8987e-01,
         -1.8809e-01, -1.0631e-02,  4.8063e-02, -2.1494e-01, -1.9678e-01,
          9.9599e-02, -3.4142e-01, -3.8382e-01,  4.0138e-01,  8.7508e-02,
         -7.4546e-01,  9.5341e-01,  3.3216e-02, -1.2583e-01, -5.7656e-01,
          5.8977e-03,  2.2488e-01,  3.6316e-01, -4.1904e-01, -4.3001e-01,
          2.1666e-02,  4.6351e-01,  2.1643e-01, -2.7920e-01, -8.9143e-02,
         -6.0588e-02, -1.8297e-02,  2.9512e-02, -1.2541e-01, -3.6726e-02,
          9.1850e-02, -1.5035e-02, -2.5833e-02,  2.1743e-01,  2.1169e-01,
          1.1047e-01,  2.7411e-02, -9.2879e-02,  5.4285e-02,  4.5005e-02,
          1.5806e-02, -5.7248e-02, -4.9068e-02,  2.2048e-02,  6.0435e-02,
          2.9582e-02, -8.2812e-02,  5.4896e-02, -6.4248e-02,  3.5201e-02,
         -1.5732e-02,  1.1068e-01, -1.1905e-01,  1.1316e-01,  2.1013e-01,
         -1.3827e-01,  1.4541e-01, -1.2254e-01, -1.1492e-01, -1.9726e-01,
         -2.9537e-01,  4.9746e-01, -3.1839e-02, -1.3277e-01,  1.1168e-03,
         -6.8736e-02, -2.3139e-02, -1.4439e-01,  2.9185e-02, -1.8243e-02,
         -1.8013e-01,  1.5754e-01, -1.1818e-01, -1.9813e-01,  1.0966e-01,
         -2.1521e-01]], device='cuda:0') tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
965000 特征值优化 tensor(0.8600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.8213e-01, -9.9450e-01,  1.0370e+00, -1.0088e+00,  1.5168e+00,
          3.4503e+00, -8.3512e-01, -1.0838e+00,  3.5254e-02,  8.6518e-02,
          3.7114e-01,  2.5557e-01,  2.1409e-01, -6.6505e-01, -2.3934e-01,
         -1.9635e-02,  5.7944e-02, -4.4620e-01, -7.1934e-02,  1.4246e-01,
         -1.5804e-01, -2.7613e-01,  5.2931e-02, -5.7663e-02,  1.1874e-01,
         -9.6577e-01,  1.8535e-01,  5.5287e-02, -2.1428e-01, -6.0324e-02,
          1.2361e-01, -4.6054e-02, -1.0989e-01,  2.0160e-01,  2.9428e-02,
         -3.1130e-02, -1.6326e-02,  1.9497e-03, -2.7733e-01,  8.5507e-02,
          6.3856e-02,  2.1901e-01, -1.6223e-04,  4.7844e-01, -2.3648e-01,
          3.3851e-02,  2.1582e-01, -8.6971e-02,  2.0226e-01, -2.8149e-01,
          5.1943e-02,  2.4105e-01, -1.9171e-01,  4.8779e-01, -3.6961e-02,
         -4.9100e-01, -4.7276e-01, -1.5829e-01,  3.6624e-01, -1.0015e-01,
          7.0747e-01,  3.0216e-01, -1.1662e-02, -8.1446e-02, -1.3423e-01,
         -1.5346e-01,  1.6911e-01, -3.4034e-02, -6.0025e-01, -4.1049e-01,
         -1.6609e-02,  8.1809e-02,  6.8245e-03, -4.2429e-01,  8.4818e-02,
          1.5284e-01,  2.4850e-01, -5.6143e-01,  3.8278e-02,  3.8416e-01,
          2.8914e-01,  7.2668e-02, -2.3983e-01, -2.0829e-01, -2.8348e-01,
         -1.8660e-01,  1.3140e-02,  5.4028e-02, -2.2146e-01, -2.0309e-01,
          1.0078e-01, -3.4977e-01, -3.6361e-01,  3.9109e-01,  8.0187e-02,
         -7.4390e-01,  9.5290e-01,  4.5628e-02, -1.3508e-01, -5.8485e-01,
          3.9288e-02,  2.1769e-01,  3.6615e-01, -4.2535e-01, -4.1664e-01,
          1.4722e-03,  4.7506e-01,  2.2101e-01, -2.6222e-01, -8.6499e-02,
         -5.7995e-02, -2.1599e-02,  1.9095e-02, -1.2305e-01, -3.9104e-02,
          8.8259e-02, -4.2312e-03, -3.3895e-02,  2.1635e-01,  2.1101e-01,
          1.2069e-01,  1.3942e-02, -6.6276e-02,  6.2001e-02,  4.1079e-02,
          1.1148e-02, -4.9979e-02, -4.8370e-02,  2.3975e-02,  5.1059e-02,
          4.2296e-02, -9.1983e-02,  6.0762e-02, -6.3740e-02,  4.7486e-02,
         -4.6325e-03,  1.1791e-01, -1.3702e-01,  1.0744e-01,  1.9668e-01,
         -1.3816e-01,  1.6703e-01, -1.1699e-01, -1.1221e-01, -1.8958e-01,
         -2.8549e-01,  4.7940e-01, -1.9429e-02, -1.2308e-01, -9.6088e-03,
         -7.7345e-02, -1.4768e-02, -1.5107e-01,  2.8489e-02,  8.3462e-04,
         -1.7821e-01,  1.7326e-01, -1.3103e-01, -1.9924e-01,  1.0894e-01,
         -1.9623e-01]], device='cuda:0') tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
966000 特征值优化 tensor(0.8665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.1119e-01, -9.8387e-01,  1.0530e+00, -1.0141e+00,  1.5141e+00,
          3.4520e+00, -8.6375e-01, -1.0771e+00,  2.7597e-02,  7.2289e-02,
          3.8344e-01,  2.4190e-01,  2.0677e-01, -6.5246e-01, -2.2888e-01,
          6.4055e-05,  4.7466e-02, -4.4421e-01, -7.7687e-02,  1.2989e-01,
         -1.4079e-01, -2.8536e-01,  5.7706e-02, -6.1361e-02,  1.0210e-01,
         -9.7322e-01,  1.9123e-01,  5.2632e-02, -2.0938e-01, -6.8149e-02,
          1.2912e-01, -3.6150e-02, -1.0720e-01,  1.8545e-01,  3.1848e-02,
         -2.9323e-02, -9.5286e-03, -2.9875e-03, -2.7458e-01,  7.7414e-02,
          6.6997e-02,  2.1082e-01,  4.9436e-03,  4.8456e-01, -2.3091e-01,
          3.4407e-02,  2.2776e-01, -8.8054e-02,  1.9372e-01, -2.7856e-01,
          5.9815e-02,  2.4261e-01, -1.9324e-01,  4.8429e-01, -2.6061e-02,
         -4.9136e-01, -4.6813e-01, -1.4848e-01,  3.6326e-01, -1.0203e-01,
          7.1063e-01,  2.8938e-01, -1.0532e-02, -8.2546e-02, -1.3215e-01,
         -1.4972e-01,  1.6592e-01, -3.5178e-02, -6.0152e-01, -4.1641e-01,
         -1.6682e-02,  7.6707e-02,  8.1172e-03, -4.2193e-01,  8.9019e-02,
          1.4790e-01,  2.4263e-01, -5.6767e-01,  3.7862e-02,  3.8468e-01,
          2.8967e-01,  6.9440e-02, -2.4401e-01, -2.0206e-01, -2.8359e-01,
         -1.8987e-01,  1.0372e-02,  6.0421e-02, -2.0973e-01, -1.8581e-01,
          1.0120e-01, -3.4581e-01, -3.5536e-01,  3.9005e-01,  1.0219e-01,
         -7.4113e-01,  9.6637e-01,  6.0142e-02, -1.3850e-01, -5.8484e-01,
          4.7134e-02,  2.1679e-01,  3.5639e-01, -4.1681e-01, -4.0859e-01,
          3.9823e-03,  4.5779e-01,  2.1036e-01, -2.6864e-01, -9.0659e-02,
         -5.3728e-02, -1.5394e-02,  2.4333e-02, -1.3121e-01, -4.1256e-02,
          8.4519e-02, -7.9819e-03, -3.6664e-02,  2.1931e-01,  2.1348e-01,
          1.2031e-01,  2.9594e-02, -7.2243e-02,  5.7493e-02,  3.8173e-02,
          1.7133e-02, -5.5661e-02, -5.3834e-02,  2.8019e-02,  4.6274e-02,
          3.9643e-02, -8.4927e-02,  5.8055e-02, -6.9057e-02,  3.9334e-02,
          4.8988e-03,  1.2665e-01, -1.4008e-01,  9.4966e-02,  1.9647e-01,
         -1.4068e-01,  1.6956e-01, -1.2004e-01, -1.1159e-01, -1.8650e-01,
         -2.7593e-01,  4.8421e-01, -1.9135e-02, -1.1745e-01, -5.2664e-03,
         -8.5361e-02, -1.2446e-02, -1.4481e-01,  2.7066e-02, -3.0430e-03,
         -1.8193e-01,  1.7264e-01, -1.2080e-01, -1.9056e-01,  1.1313e-01,
         -1.9623e-01]], device='cuda:0') tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
967000 特征值优化 tensor(0.8505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.2421e-01, -9.9067e-01,  1.0604e+00, -1.0094e+00,  1.5284e+00,
          3.4648e+00, -8.8652e-01, -1.0851e+00,  2.3698e-02,  7.1873e-02,
          3.7638e-01,  2.5084e-01,  1.9301e-01, -6.4428e-01, -2.1985e-01,
          2.1695e-02,  5.9060e-02, -4.3940e-01, -7.7878e-02,  1.1714e-01,
         -1.3362e-01, -2.8250e-01,  6.6118e-02, -6.2850e-02,  1.0122e-01,
         -9.6687e-01,  2.0299e-01,  4.7288e-02, -2.2563e-01, -6.8525e-02,
          1.2855e-01, -3.8930e-02, -1.0649e-01,  2.0525e-01,  3.5083e-02,
         -2.8073e-02, -9.8467e-03, -4.4009e-03, -2.7588e-01,  8.3864e-02,
          7.4618e-02,  2.1130e-01,  2.7509e-03,  4.8093e-01, -2.2553e-01,
          2.6806e-02,  2.1660e-01, -8.9201e-02,  2.0385e-01, -2.7774e-01,
          4.9790e-02,  2.4153e-01, -1.8823e-01,  4.8713e-01, -3.0511e-02,
         -4.9780e-01, -4.5439e-01, -1.5091e-01,  3.6212e-01, -9.7290e-02,
          7.1822e-01,  2.9490e-01, -5.7473e-03, -9.0252e-02, -1.2292e-01,
         -1.4817e-01,  1.6014e-01, -2.1738e-02, -6.0870e-01, -4.1901e-01,
         -1.2918e-02,  7.5399e-02,  9.4390e-03, -4.2064e-01,  9.7677e-02,
          1.6173e-01,  2.3970e-01, -5.6378e-01,  5.6135e-02,  3.7918e-01,
          2.8906e-01,  6.8944e-02, -2.4808e-01, -2.0962e-01, -3.0126e-01,
         -1.7987e-01,  2.1693e-02,  5.9793e-02, -2.0696e-01, -1.8517e-01,
          9.7659e-02, -3.4889e-01, -3.5505e-01,  3.8028e-01,  9.4982e-02,
         -7.4445e-01,  9.5396e-01,  4.0122e-02, -1.3234e-01, -5.7201e-01,
          4.7907e-02,  2.0833e-01,  3.5201e-01, -4.1480e-01, -4.3301e-01,
          1.8513e-02,  4.5513e-01,  2.2224e-01, -2.6017e-01, -1.0119e-01,
         -5.1191e-02, -1.3459e-02,  2.5796e-02, -1.2507e-01, -4.4589e-02,
          7.8390e-02,  1.1678e-02, -5.4544e-02,  2.1711e-01,  2.0660e-01,
          1.1745e-01,  4.3151e-02, -5.8022e-02,  5.8902e-02,  4.4335e-02,
          2.0722e-02, -4.7303e-02, -4.9324e-02,  2.6014e-02,  5.0156e-02,
          4.4878e-02, -8.4835e-02,  5.9878e-02, -6.3304e-02,  3.9436e-02,
          6.5777e-03,  1.3618e-01, -1.3150e-01,  9.9616e-02,  1.9384e-01,
         -1.4316e-01,  1.8151e-01, -1.1715e-01, -1.0846e-01, -1.7638e-01,
         -2.8896e-01,  4.7638e-01, -1.7140e-02, -1.2145e-01, -1.1633e-02,
         -6.9364e-02, -2.3877e-02, -1.5638e-01,  3.9225e-02,  5.8710e-03,
         -1.9150e-01,  1.6397e-01, -1.1189e-01, -1.8040e-01,  1.2508e-01,
         -1.8822e-01]], device='cuda:0') tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
968000 特征值优化 tensor(0.8482, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6204e-01, -9.5894e-01,  1.0656e+00, -1.0088e+00,  1.5271e+00,
          3.4471e+00, -9.0073e-01, -1.0974e+00,  1.0381e-02,  7.4438e-02,
          3.6744e-01,  2.4226e-01,  1.9150e-01, -6.1154e-01, -2.1276e-01,
         -2.3282e-03,  3.0567e-02, -4.5702e-01, -8.5278e-02,  1.1011e-01,
         -1.4066e-01, -2.9535e-01,  6.0997e-02, -6.3504e-02,  1.2627e-01,
         -9.6418e-01,  1.8239e-01,  5.2282e-02, -1.9692e-01, -6.1911e-02,
          1.2389e-01, -4.4938e-02, -1.2690e-01,  1.7510e-01,  2.5754e-02,
         -2.1962e-02, -1.3556e-02,  2.1513e-02, -2.7914e-01,  6.6484e-02,
          4.9339e-02,  2.1645e-01, -1.7422e-03,  4.9729e-01, -2.3831e-01,
          2.5956e-02,  2.0589e-01, -1.1501e-01,  2.2549e-01, -2.7644e-01,
          5.8071e-02,  2.6062e-01, -1.7051e-01,  4.9168e-01, -2.6381e-02,
         -5.0872e-01, -4.5404e-01, -1.6684e-01,  3.6629e-01, -1.1023e-01,
          7.2014e-01,  2.9833e-01, -2.2334e-02, -8.0300e-02, -1.1200e-01,
         -1.4317e-01,  1.6526e-01, -1.4717e-02, -5.9728e-01, -3.9878e-01,
         -1.3250e-02,  9.7194e-02, -1.9170e-03, -4.0500e-01,  1.0097e-01,
          1.5720e-01,  2.5217e-01, -5.8002e-01,  6.4417e-02,  3.7594e-01,
          2.8106e-01,  7.7340e-02, -2.2883e-01, -1.9977e-01, -2.8816e-01,
         -1.7812e-01, -6.7691e-03,  6.2879e-02, -1.9457e-01, -1.9984e-01,
          1.0734e-01, -3.3298e-01, -3.7439e-01,  4.1486e-01,  8.4820e-02,
         -7.4608e-01,  9.6331e-01,  3.5601e-02, -1.4998e-01, -5.4817e-01,
          6.6717e-02,  2.1361e-01,  3.3420e-01, -4.2076e-01, -4.3330e-01,
          2.0547e-02,  4.7454e-01,  2.1034e-01, -2.5804e-01, -8.0728e-02,
         -5.8482e-02, -1.5014e-02,  1.4071e-02, -1.2758e-01, -2.8713e-02,
          8.8776e-02, -1.2507e-02, -2.6740e-02,  2.1790e-01,  2.0070e-01,
          1.2872e-01,  1.9580e-02, -7.3920e-02,  5.2435e-02,  3.2003e-02,
          1.6089e-02, -6.5348e-02, -5.3907e-02,  1.7302e-02,  4.8493e-02,
          4.5239e-02, -9.3752e-02,  5.6289e-02, -6.4836e-02,  3.1647e-02,
         -1.5661e-02,  1.3552e-01, -8.5173e-02,  1.1734e-01,  1.9565e-01,
         -1.4902e-01,  1.5963e-01, -9.1365e-02, -1.3630e-01, -1.9107e-01,
         -2.9352e-01,  4.9754e-01, -7.2962e-03, -1.2299e-01, -1.6846e-02,
         -7.3740e-02, -3.0573e-02, -1.3195e-01,  2.7007e-02, -2.3833e-02,
         -2.0163e-01,  1.7300e-01, -1.1011e-01, -1.9078e-01,  1.1590e-01,
         -2.1303e-01]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
超出最大迭代
969000 特征值优化 tensor(17.1534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 7.8519e-01, -1.2442e+00, -8.5877e-01, -8.6581e-01,  8.1064e-01,
          7.0582e-02,  2.3400e+00,  1.9288e-01,  4.4920e-01, -1.1725e-02,
         -3.2105e-02,  1.7870e-01,  2.5167e-01, -1.3882e-01,  1.8525e-01,
          4.9233e-01, -1.2240e+00,  8.2138e-01,  3.2032e-01,  5.6936e-01,
          1.6833e+00, -8.6710e-01,  7.9611e-02,  2.2061e+00, -9.2741e-01,
          1.1845e+00, -2.2465e-01, -1.0345e-02, -3.3286e-01,  2.8273e-01,
         -6.4555e-02,  1.0641e-01, -4.0638e-02,  8.9156e-02, -1.2390e+00,
         -2.1423e-01, -1.1213e-01, -6.3307e-02,  3.3691e-01,  1.5809e-01,
         -2.4989e-02,  1.7002e-01,  1.6667e-02,  1.1639e+00, -5.3731e-03,
          4.6421e-01, -5.5240e-01,  4.7837e-01,  2.8379e-01,  3.5298e-01,
          2.2381e-01, -1.3480e-01,  1.4542e-01, -2.2714e-01,  6.2461e-01,
         -5.3869e-02, -1.3469e+00, -1.0861e-01, -3.6298e-01, -3.1758e-01,
          7.7884e-01,  6.8812e-01, -7.8613e-01, -1.4068e+00, -1.0083e+00,
         -2.6288e-01,  3.0432e-02, -7.5599e-02, -3.5823e-01, -1.1261e-01,
         -5.4040e-01, -4.2627e-01,  9.6632e-01, -2.5041e-01,  1.3322e+00,
         -1.4719e-01,  3.1052e-01,  5.8961e-01, -2.7578e-01,  1.8814e-02,
          5.5772e-01,  7.2702e-02,  2.7411e-01,  3.9927e-01,  6.0907e-01,
         -2.3985e-01,  5.5416e-01, -2.0201e-01, -6.4282e-01, -9.6310e-02,
          9.6184e-01, -3.5130e-01, -8.7131e-02, -3.7060e-01,  5.2388e-02,
          1.2463e-02, -2.8885e-01, -8.0523e-01, -1.0686e+00, -9.9694e-01,
         -7.3475e-01,  4.7428e-01, -5.9648e-01, -7.2894e-01, -2.7871e-01,
         -6.5146e-03,  5.5337e-02, -1.3202e+00,  4.7439e-01, -1.9013e-01,
          1.2691e-01, -3.7214e-01,  4.2343e-01,  8.9836e-01, -1.5393e-01,
          1.3567e-01, -1.8329e-01,  1.2130e-01, -1.2003e-01, -6.9403e-01,
          4.3577e-01, -6.2435e-01, -9.9242e-01, -1.2914e+00, -3.1681e-01,
         -1.4847e-01,  1.5344e-01,  3.2593e-01,  5.2137e-02,  3.2303e-01,
         -2.7197e-01,  3.8099e-01,  1.3695e-01, -6.3699e-03, -2.4696e-03,
          4.0807e-01,  3.1067e-01, -9.1583e-01, -1.0043e-01, -4.4327e-01,
          3.3576e-01, -1.8511e-01, -9.3188e-02, -4.3048e-01, -2.0172e-01,
         -1.4378e-03,  5.1768e-01, -4.9350e-02,  1.2162e+00, -1.0579e-01,
          7.2270e-01,  2.3272e-02, -3.2010e-01,  4.5492e-01, -1.4006e+00,
          1.3024e-02, -2.2650e-01, -5.8391e-01, -2.7760e-01, -2.4284e-01,
          4.6212e-01]], device='cuda:0') tensor(0.2722, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
970000 特征值优化 tensor(1.4317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6395e+00,  7.9319e-03,  1.0747e-02, -8.3883e-01,  1.6251e+00,
          1.3314e+00,  1.2929e+00, -6.4617e-01,  1.0734e+00, -1.8801e-01,
         -3.2476e-01,  3.5071e-01,  6.8850e-01, -2.2181e-01,  1.4298e-01,
          4.4818e-01, -6.1362e-01,  2.4876e-01,  3.0600e-01,  3.5594e-01,
          9.4828e-01, -2.2862e-01,  1.1252e-01,  1.3862e+00, -6.7938e-01,
          5.5155e-01, -2.0175e-01, -2.8290e-02, -2.7620e-01, -4.1267e-01,
          3.8460e-03,  4.5449e-02, -7.2955e-02, -3.8680e-01, -5.4456e-01,
         -3.2674e-02,  1.5825e-01,  1.5518e-01, -2.4339e-01, -1.0280e-01,
         -2.6822e-01,  1.3270e-01, -4.5604e-02,  4.1901e-01,  2.6478e-01,
         -6.5888e-02, -8.3300e-03,  7.5255e-02,  2.9730e-02,  6.8240e-01,
          3.1791e-01,  9.1295e-02, -3.9358e-02, -3.2678e-01,  1.1688e-01,
         -2.4588e-01, -5.9719e-01, -1.6014e-01, -2.4752e-02, -2.5609e-01,
         -1.8660e-01,  4.3129e-01, -1.6571e-01, -6.4867e-01, -2.0833e-01,
         -4.3973e-02, -1.8728e-01, -1.1127e-01,  1.2281e-01, -1.5393e-01,
          7.5141e-02, -1.5126e-01,  3.7878e-01, -1.9201e-01,  4.7481e-01,
         -1.3733e-01,  6.1276e-02,  1.9155e-01, -4.9162e-01, -1.1630e-01,
          2.4989e-03,  2.1764e-01, -1.3743e-02, -7.8187e-02,  1.8870e-01,
          6.9914e-02,  9.2495e-02,  5.0228e-01, -1.9293e-01, -2.1490e-01,
          5.8281e-01, -7.1194e-01, -3.6359e-01,  2.1348e-01,  3.3913e-01,
         -3.5341e-01, -1.0755e-01, -1.8298e-01, -4.6372e-01, -5.3109e-01,
         -3.6748e-01,  2.4585e-01, -4.4580e-01, -2.1483e-01,  4.5047e-02,
         -3.5655e-01, -7.2440e-01, -5.2820e-01,  9.0137e-01, -1.5799e-01,
          5.5758e-02,  2.1524e-02, -4.5848e-02,  1.3604e-01, -9.0080e-02,
          4.4333e-02,  7.5567e-02,  2.2864e-02, -8.5305e-02, -2.9083e-01,
          8.4680e-02, -1.8086e-01, -3.1233e-01, -4.2391e-01, -5.9683e-02,
         -5.7459e-02,  8.6209e-02, -8.1153e-03, -1.1576e-01, -4.3287e-02,
         -5.5221e-02,  2.7647e-03, -4.7181e-02, -4.2543e-02, -1.5277e-01,
          8.9861e-02, -1.8839e-01, -2.0861e-01, -8.1139e-02, -2.1535e-01,
         -2.1236e-03, -2.2824e-01, -3.2787e-02,  5.8036e-02,  5.9089e-02,
          1.7725e-01,  1.1250e-01,  5.9590e-02,  4.4736e-01,  1.2413e-01,
          2.1762e-01,  1.2350e-01, -5.0648e-02, -1.4373e-03, -5.9291e-01,
          1.5585e-01, -5.5767e-02, -1.4196e-03,  1.2015e-01, -1.4128e-01,
          3.0656e-02]], device='cuda:0') tensor(0.2289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
971000 特征值优化 tensor(0.6533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8270e+00,  4.3398e-01, -2.4068e-01, -1.0022e+00,  2.0067e+00,
          1.6206e+00,  1.5707e+00, -1.5928e+00,  7.5820e-01,  6.1613e-02,
         -7.1008e-01,  3.8725e-01,  7.7417e-01,  2.2411e-02,  4.4608e-01,
          4.5785e-01, -6.0459e-01,  2.1457e-01,  4.3612e-01,  3.7620e-01,
          9.5865e-01, -4.4049e-02,  7.4945e-02,  1.3336e+00, -6.7429e-01,
          4.7762e-01, -2.4947e-01,  1.7766e-01, -4.0335e-01, -4.3185e-01,
          8.4237e-02,  1.1822e-01, -6.2399e-02, -5.6839e-01, -5.8614e-01,
          9.1189e-02,  1.9669e-02,  1.3363e-01, -3.1811e-01, -1.8937e-01,
         -2.1921e-01,  1.1753e-01, -2.6236e-02,  3.4533e-01,  2.5778e-01,
         -1.4593e-01, -6.9225e-02,  3.9552e-02,  4.4473e-02,  5.9230e-01,
          1.2642e-01,  2.1240e-01, -2.9964e-01, -2.4270e-01, -2.0418e-02,
         -8.7104e-02, -4.5581e-01, -1.7519e-01,  2.2835e-02, -1.8220e-01,
         -2.3636e-01,  4.0548e-01,  4.5085e-03, -5.5116e-01, -7.7749e-02,
         -1.2681e-01, -1.8630e-01, -1.4528e-01,  2.6435e-01, -1.4530e-01,
          7.8605e-02, -1.2792e-01,  3.5452e-01, -2.9473e-01,  3.8461e-01,
         -1.1447e-01,  1.3142e-01, -1.1463e-01, -4.6829e-01, -8.4848e-02,
         -6.6574e-02,  1.6621e-01, -7.9902e-03, -1.1196e-01,  1.5903e-01,
          7.0912e-02,  1.6068e-01,  5.4973e-01, -1.9622e-01, -3.1775e-01,
          5.7126e-01, -5.5076e-01, -3.5767e-01,  6.6171e-03,  1.6866e-01,
         -2.1821e-01, -3.0707e-01,  2.5497e-02, -2.8729e-01, -7.5157e-01,
         -2.0996e-01,  5.9012e-02, -5.1138e-01, -1.6745e-01,  8.8702e-02,
         -4.6415e-01, -7.2384e-01, -3.2713e-01,  9.3590e-01, -1.9756e-01,
          9.1781e-02, -1.3013e-03, -1.3245e-01,  6.8241e-02, -8.8589e-02,
          9.0469e-02,  6.9420e-02,  7.0899e-02, -7.6101e-02, -1.8946e-01,
          1.6562e-01, -1.5776e-01, -2.6222e-01, -2.4440e-01,  8.9163e-02,
         -1.2488e-01,  1.0848e-01, -5.8624e-04, -2.2072e-01, -3.8091e-02,
         -6.5411e-03,  2.7783e-02, -2.9628e-02, -1.6964e-02, -2.3729e-01,
          2.3141e-01, -1.8233e-01, -1.9768e-01, -1.1094e-01, -2.2520e-01,
         -7.6358e-03, -3.3189e-01, -1.7086e-02,  1.6209e-01, -1.7093e-02,
          2.1381e-01,  1.5694e-01,  2.7486e-02,  2.0220e-01,  9.9887e-02,
          6.4079e-02,  1.8067e-02, -7.2687e-02,  1.3199e-01, -3.6854e-01,
          1.3958e-01,  6.5735e-02,  5.6816e-02,  1.3659e-01, -9.9966e-02,
         -1.3249e-01]], device='cuda:0') tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
972000 特征值优化 tensor(0.5771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8706e+00,  6.1711e-01, -4.9121e-01, -1.0141e+00,  2.1092e+00,
          1.7316e+00,  1.7532e+00, -1.9209e+00,  6.7127e-01,  1.5210e-01,
         -8.1949e-01,  4.4498e-01,  7.7409e-01,  2.8902e-02,  4.6047e-01,
          4.5716e-01, -6.2232e-01,  1.6473e-01,  4.4658e-01,  4.4984e-01,
          9.9996e-01, -1.3951e-02,  4.4892e-02,  1.3781e+00, -6.9650e-01,
          3.6482e-01, -2.7642e-01,  1.0904e-01, -3.7385e-01, -4.7880e-01,
          9.2186e-02,  1.4429e-01, -7.3488e-02, -5.7496e-01, -6.4773e-01,
          1.1438e-01, -2.4113e-02,  1.8413e-01, -3.4325e-01, -1.7718e-01,
         -2.4493e-01,  1.1610e-01, -2.7089e-02,  2.8107e-01,  3.0617e-01,
         -9.1135e-02, -1.3036e-01, -1.1201e-03,  7.8910e-02,  5.2092e-01,
          9.3028e-02,  2.3978e-01, -3.4148e-01, -2.4211e-01, -5.0775e-02,
         -4.7574e-02, -4.3243e-01, -1.4344e-01,  1.5509e-01, -1.7676e-01,
         -1.8018e-01,  3.8242e-01,  3.1211e-02, -5.3640e-01, -5.3427e-02,
         -1.1712e-01, -1.2759e-01, -1.1031e-01,  3.2336e-01, -1.7673e-01,
          5.7279e-02, -1.1966e-01,  3.7028e-01, -3.0112e-01,  3.4707e-01,
         -9.6691e-02,  1.4897e-01, -1.2309e-01, -4.4659e-01, -6.8751e-02,
         -4.1203e-02,  1.9089e-01,  1.4576e-03, -1.7776e-01,  1.0539e-01,
          1.8403e-02,  1.5323e-01,  5.7446e-01, -1.5244e-01, -3.6723e-01,
          5.6217e-01, -4.3990e-01, -3.8074e-01,  7.2102e-02,  1.6752e-01,
         -1.4891e-01, -3.6486e-01,  9.0002e-02, -2.4944e-01, -7.9913e-01,
         -2.5916e-01, -4.7757e-02, -4.8272e-01, -1.3010e-01,  9.8415e-02,
         -4.1900e-01, -6.4831e-01, -3.1410e-01,  8.5784e-01, -1.9546e-01,
          1.1120e-01,  7.3399e-03, -1.3188e-01,  6.0392e-02, -6.2005e-02,
          5.9296e-02,  3.7036e-02,  5.4134e-02, -6.8829e-02, -1.8577e-01,
          1.2841e-01, -1.0740e-01, -2.3276e-01, -1.6239e-01,  1.1950e-01,
         -9.9093e-02,  7.6750e-02,  1.7754e-02, -2.0371e-01, -3.1638e-02,
          3.1903e-03, -2.3147e-02, -4.5873e-03,  2.3385e-02, -2.3545e-01,
          2.0792e-01, -1.7492e-01, -1.9991e-01, -1.3450e-01, -2.3596e-01,
          4.0647e-04, -2.6724e-01, -5.3534e-02,  1.3453e-01, -1.7859e-02,
          2.2881e-01,  1.5718e-01,  2.3493e-02,  1.3666e-01,  8.4633e-02,
          4.0929e-02, -6.7852e-03, -2.9197e-02,  1.3008e-01, -2.9768e-01,
          8.5700e-02,  1.9893e-02,  1.2971e-01,  1.3283e-01, -7.4396e-02,
         -1.3837e-01]], device='cuda:0') tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
973000 特征值优化 tensor(0.5657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8481e+00,  7.2221e-01, -6.3764e-01, -1.0108e+00,  2.1437e+00,
          1.8151e+00,  1.7902e+00, -2.0580e+00,  6.4511e-01,  2.0049e-01,
         -8.3879e-01,  4.7708e-01,  7.1450e-01,  2.4407e-02,  4.0879e-01,
          4.2431e-01, -6.7725e-01,  1.6801e-01,  4.4566e-01,  4.7172e-01,
          1.0203e+00, -1.5001e-02,  1.5825e-02,  1.4053e+00, -6.5037e-01,
          3.1933e-01, -3.3020e-01,  4.0044e-02, -3.9114e-01, -4.8112e-01,
          7.8831e-02,  1.5949e-01, -4.0985e-02, -5.8641e-01, -6.9807e-01,
          1.1032e-01, -2.9363e-02,  1.9771e-01, -3.8361e-01, -1.7607e-01,
         -2.3122e-01,  1.2777e-01, -4.1187e-02,  2.4854e-01,  3.2843e-01,
         -7.3431e-02, -1.5299e-01,  1.1004e-02,  8.3992e-02,  4.8186e-01,
          1.0515e-01,  2.5559e-01, -3.9161e-01, -2.3207e-01, -8.0069e-02,
         -4.4488e-02, -3.8990e-01, -1.4890e-01,  2.4721e-01, -1.9470e-01,
         -1.7177e-01,  3.9286e-01,  7.7689e-02, -5.4067e-01, -4.7893e-02,
         -1.3998e-01, -1.1574e-01, -6.2702e-02,  3.3169e-01, -1.8913e-01,
          4.0507e-02, -1.2727e-01,  3.5126e-01, -3.0318e-01,  3.5833e-01,
         -7.8830e-02,  1.6314e-01, -1.1026e-01, -4.3190e-01, -6.1320e-02,
         -6.9667e-04,  2.1404e-01,  5.8577e-03, -1.9543e-01,  6.1289e-02,
          1.5329e-02,  1.6808e-01,  5.5988e-01, -1.4121e-01, -3.5964e-01,
          5.7061e-01, -3.9444e-01, -4.0090e-01,  1.7197e-01,  1.4563e-01,
         -1.1082e-01, -3.5508e-01,  1.2232e-01, -2.3945e-01, -8.2246e-01,
         -2.5032e-01, -1.1896e-01, -4.3302e-01, -1.0528e-01,  1.1076e-01,
         -3.6274e-01, -5.7864e-01, -2.9093e-01,  7.9317e-01, -2.0094e-01,
          1.1900e-01, -1.2579e-02, -1.3892e-01,  4.7746e-02, -6.2407e-02,
          6.1636e-02,  3.3516e-02,  3.1428e-02, -8.6814e-02, -1.5662e-01,
          1.1003e-01, -6.3271e-02, -2.1490e-01, -1.3478e-01,  1.2143e-01,
         -8.9265e-02,  6.2477e-02,  5.0966e-02, -1.9555e-01, -3.4577e-02,
          1.8863e-02, -3.8333e-02,  1.2935e-02,  5.0586e-02, -2.2714e-01,
          1.9040e-01, -1.6172e-01, -2.0477e-01, -1.2838e-01, -2.2908e-01,
          9.7845e-03, -2.0276e-01, -5.3394e-02,  1.1402e-01, -7.9329e-03,
          2.3183e-01,  1.4577e-01,  4.9338e-02,  1.0838e-01,  5.9950e-02,
          3.3250e-02, -3.8885e-02,  3.8639e-03,  1.5588e-01, -2.5966e-01,
          9.4316e-02,  1.3014e-02,  1.4113e-01,  1.4370e-01, -4.2159e-02,
         -1.3731e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
974000 特征值优化 tensor(0.5825, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9156,  0.7536, -0.6944, -1.0108,  2.1440,  1.8512,  1.8403, -2.1563,
          0.6310,  0.2476, -0.8545,  0.5023,  0.6641,  0.0326,  0.4099,  0.3908,
         -0.7242,  0.1828,  0.4425,  0.5060,  1.0357, -0.0329,  0.0190,  1.4343,
         -0.6312,  0.3080, -0.3440,  0.0312, -0.3675, -0.4965,  0.0691,  0.1677,
         -0.0158, -0.5863, -0.7200,  0.1050, -0.0298,  0.2083, -0.3925, -0.1700,
         -0.2261,  0.1243, -0.0438,  0.2383,  0.3356, -0.0671, -0.1475,  0.0170,
          0.0716,  0.4630,  0.1031,  0.2429, -0.4168, -0.2422, -0.0916, -0.0375,
         -0.3765, -0.1301,  0.2915, -0.1848, -0.1539,  0.3957,  0.0884, -0.5380,
         -0.0399, -0.1352, -0.1161, -0.0392,  0.3258, -0.1845,  0.0297, -0.1315,
          0.3262, -0.2998,  0.3504, -0.0773,  0.1712, -0.0920, -0.4128, -0.0572,
          0.0063,  0.2104,  0.0190, -0.1777,  0.0391,  0.0046,  0.1652,  0.5320,
         -0.1295, -0.3394,  0.5683, -0.3659, -0.4079,  0.2133,  0.1491, -0.0959,
         -0.3484,  0.1349, -0.2190, -0.8009, -0.2242, -0.1498, -0.4146, -0.1003,
          0.1089, -0.3550, -0.5236, -0.2709,  0.7504, -0.2134,  0.1252, -0.0191,
         -0.1301,  0.0494, -0.0454,  0.0637,  0.0289,  0.0410, -0.0839, -0.1366,
          0.1017, -0.0541, -0.2069, -0.1295,  0.1140, -0.0832,  0.0669,  0.0675,
         -0.1946, -0.0332,  0.0288, -0.0411,  0.0268,  0.0627, -0.2338,  0.1842,
         -0.1813, -0.1913, -0.1035, -0.2297,  0.0066, -0.1855, -0.0481,  0.1212,
         -0.0138,  0.2455,  0.1427,  0.0653,  0.1028,  0.0456,  0.0250, -0.0339,
          0.0268,  0.1552, -0.2388,  0.0956,  0.0131,  0.1418,  0.1353, -0.0505,
         -0.1229]], device='cuda:0') tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
975000 特征值优化 tensor(0.5467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9802e+00,  7.5801e-01, -7.3405e-01, -1.0029e+00,  2.1652e+00,
          1.8718e+00,  1.8387e+00, -2.1885e+00,  6.3090e-01,  2.9301e-01,
         -8.7214e-01,  5.3607e-01,  6.6011e-01,  6.5686e-02,  4.0046e-01,
          3.9878e-01, -7.2731e-01,  1.7257e-01,  4.3389e-01,  5.1890e-01,
          1.0266e+00, -3.3919e-02, -9.4016e-03,  1.4700e+00, -6.1963e-01,
          2.9096e-01, -3.2230e-01, -3.3325e-04, -3.6251e-01, -4.9767e-01,
          3.5346e-02,  1.7279e-01,  5.4234e-03, -5.8391e-01, -7.5808e-01,
          1.0501e-01, -3.4387e-02,  2.0012e-01, -4.2450e-01, -1.9762e-01,
         -1.9839e-01,  1.2596e-01, -4.7844e-02,  2.2486e-01,  3.3966e-01,
         -4.1635e-02, -1.3742e-01,  1.3324e-03,  4.5404e-02,  4.6652e-01,
          9.9852e-02,  2.4404e-01, -4.3658e-01, -2.4192e-01, -1.0447e-01,
         -3.4655e-02, -3.6872e-01, -1.4910e-01,  3.2117e-01, -1.8476e-01,
         -1.4584e-01,  4.0414e-01,  8.8161e-02, -5.2187e-01, -4.3691e-02,
         -1.6499e-01, -1.2986e-01, -1.3561e-03,  3.3004e-01, -1.6364e-01,
          1.5974e-02, -1.3713e-01,  2.9523e-01, -2.9429e-01,  3.5945e-01,
         -8.9320e-02,  1.7588e-01, -9.2608e-02, -4.1448e-01, -4.3748e-02,
          1.8883e-02,  2.0051e-01,  3.8650e-02, -1.6500e-01,  1.9931e-02,
          2.6463e-02,  1.7564e-01,  5.2139e-01, -1.2550e-01, -3.5216e-01,
          5.5772e-01, -3.3343e-01, -3.8157e-01,  2.3856e-01,  1.4100e-01,
         -8.8890e-02, -3.4784e-01,  1.3971e-01, -2.0763e-01, -7.5223e-01,
         -2.1618e-01, -1.7840e-01, -4.0181e-01, -1.0969e-01,  1.1333e-01,
         -3.0910e-01, -5.2257e-01, -2.3944e-01,  7.1253e-01, -2.1903e-01,
          1.1996e-01, -1.1852e-02, -1.5580e-01,  6.0263e-02, -5.1772e-02,
          6.5579e-02,  5.3217e-02,  2.6178e-02, -7.7151e-02, -1.1837e-01,
          8.9000e-02, -6.0305e-02, -2.0402e-01, -1.2572e-01,  1.1057e-01,
         -9.3923e-02,  7.2751e-02,  8.2910e-02, -2.0568e-01, -4.7238e-02,
          2.7798e-02, -3.4981e-02,  2.6803e-02,  7.0742e-02, -2.2679e-01,
          1.8677e-01, -1.8792e-01, -1.8228e-01, -9.5841e-02, -2.2804e-01,
          1.2437e-02, -1.9084e-01, -7.6103e-02,  1.3881e-01, -3.2454e-02,
          2.5494e-01,  1.2672e-01,  7.1718e-02,  8.0660e-02,  1.6435e-02,
          9.7676e-03, -4.0759e-02,  3.4585e-02,  1.5672e-01, -2.1629e-01,
          9.6403e-02,  1.0322e-02,  1.1691e-01,  1.3721e-01, -4.5864e-02,
         -1.2830e-01]], device='cuda:0') tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
976000 正交保障 tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9871,  0.7697, -0.8037, -1.0061,  2.1839,  1.9071,  1.8590, -2.2436,
          0.6714,  0.3101, -0.9309,  0.5991,  0.6176,  0.0046,  0.4000,  0.3873,
         -0.7467,  0.1638,  0.4536,  0.5269,  1.0023, -0.0410, -0.0022,  1.4922,
         -0.6387,  0.2853, -0.2931,  0.0096, -0.3483, -0.4826,  0.0288,  0.1983,
          0.0303, -0.5850, -0.7649,  0.1072, -0.0377,  0.2115, -0.4166, -0.2171,
         -0.2027,  0.1331, -0.0504,  0.2044,  0.3224, -0.0367, -0.1369,  0.0114,
         -0.0149,  0.4717,  0.1248,  0.2433, -0.4459, -0.2641, -0.1098, -0.0475,
         -0.3510, -0.1388,  0.3223, -0.2126, -0.1053,  0.4070,  0.1305, -0.5100,
         -0.0379, -0.1792, -0.1445,  0.0343,  0.3395, -0.1395,  0.0106, -0.1478,
          0.2434, -0.3128,  0.3416, -0.1053,  0.1718, -0.0944, -0.4191, -0.0398,
          0.0350,  0.1889,  0.0468, -0.1345,  0.0279,  0.0179,  0.1775,  0.5115,
         -0.0906, -0.3475,  0.5523, -0.3053, -0.3673,  0.2822,  0.1340, -0.0750,
         -0.3526,  0.1257, -0.2102, -0.6677, -0.1674, -0.1887, -0.4123, -0.1191,
          0.1332, -0.2986, -0.4909, -0.2301,  0.6879, -0.2151,  0.1154, -0.0228,
         -0.2058,  0.0494, -0.0361,  0.0669,  0.0358,  0.0268, -0.0792, -0.0835,
          0.0764, -0.0703, -0.1989, -0.1061,  0.1130, -0.0859,  0.0810,  0.0821,
         -0.2146, -0.0609,  0.0088, -0.0227,  0.0302,  0.0740, -0.1972,  0.1340,
         -0.2265, -0.1309, -0.0771, -0.2530,  0.0128, -0.1591, -0.0712,  0.1414,
         -0.0634,  0.2602,  0.1313,  0.0871,  0.1360,  0.0074, -0.0630, -0.0432,
          0.0535,  0.1228, -0.1957,  0.1525,  0.0370,  0.0316,  0.1069, -0.0514,
         -0.1147]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
977000 特征值优化 tensor(0.5324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0337e+00,  7.9717e-01, -8.2975e-01, -1.0047e+00,  2.1290e+00,
          1.9297e+00,  1.9033e+00, -2.3219e+00,  6.3720e-01,  3.3935e-01,
         -9.6808e-01,  6.9146e-01,  6.2461e-01, -4.1254e-02,  2.8377e-01,
          3.6318e-01, -8.2399e-01,  1.9786e-01,  4.5972e-01,  5.3161e-01,
          1.0626e+00, -5.8653e-02,  1.0164e-02,  1.4974e+00, -6.5850e-01,
          2.4087e-01, -2.7644e-01,  2.6696e-02, -3.1905e-01, -4.6677e-01,
          1.7696e-02,  2.1477e-01,  5.2233e-02, -5.7724e-01, -7.5017e-01,
          1.2465e-01, -3.2952e-02,  1.5786e-01, -3.8426e-01, -1.7512e-01,
         -1.8353e-01,  1.2985e-01, -4.3425e-02,  1.8939e-01,  3.1006e-01,
         -6.4922e-02, -1.7052e-01,  3.6071e-02, -6.4121e-02,  4.3555e-01,
          1.3284e-01,  2.2384e-01, -4.3181e-01, -2.8131e-01, -1.2990e-01,
         -3.0869e-02, -3.0973e-01, -1.5992e-01,  3.2388e-01, -2.3159e-01,
         -1.3336e-01,  4.0781e-01,  1.6476e-01, -5.0023e-01, -2.0132e-02,
         -1.7293e-01, -1.2908e-01,  7.5755e-02,  3.6048e-01, -1.2227e-01,
         -1.5800e-03, -1.7139e-01,  2.1349e-01, -3.1075e-01,  3.1903e-01,
         -9.6586e-02,  1.8637e-01, -7.8317e-02, -4.3712e-01, -7.5834e-02,
          2.4090e-02,  1.9501e-01,  6.0684e-02, -1.3881e-01,  9.2645e-03,
          4.1915e-02,  1.6493e-01,  5.0521e-01, -7.1413e-02, -2.6372e-01,
          5.4154e-01, -3.0031e-01, -3.6313e-01,  2.7303e-01,  1.4425e-01,
         -6.0702e-02, -3.2943e-01,  1.3942e-01, -1.9737e-01, -6.2611e-01,
         -1.7609e-01, -1.9858e-01, -4.3551e-01, -9.7905e-02,  1.5017e-01,
         -2.9783e-01, -4.9414e-01, -2.5078e-01,  7.1305e-01, -2.0189e-01,
          1.1554e-01, -9.9552e-03, -2.4853e-01,  2.9402e-02, -5.4761e-03,
          6.4569e-02,  2.7818e-02,  1.1697e-02, -7.2701e-02, -9.0492e-02,
          3.2273e-02, -3.8442e-02, -1.8551e-01, -7.3074e-02,  7.3537e-02,
         -6.2453e-02,  6.3438e-02,  7.3768e-02, -2.0622e-01, -5.7758e-02,
          2.9845e-02, -6.6686e-03,  6.8943e-02,  9.6833e-02, -2.1230e-01,
          9.0346e-02, -2.1124e-01, -1.0645e-01, -1.0730e-01, -2.1104e-01,
          1.4810e-02, -1.6621e-01, -5.2353e-02,  1.3225e-01, -8.1026e-02,
          2.5369e-01,  1.2355e-01,  8.7655e-02,  1.5160e-01,  1.5750e-02,
         -9.3856e-02, -1.8628e-02,  5.2898e-02,  1.0627e-01, -1.7550e-01,
          1.9575e-01,  4.4863e-02, -2.3220e-02,  5.5516e-02, -5.8201e-02,
         -1.0049e-01]], device='cuda:0') tensor(0.2024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
978000 特征值优化 tensor(0.5686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1105e+00,  8.0597e-01, -8.5601e-01, -1.0029e+00,  2.1895e+00,
          1.9279e+00,  1.9049e+00, -2.3886e+00,  6.5401e-01,  3.7361e-01,
         -9.7510e-01,  7.5781e-01,  6.0186e-01, -6.6751e-02,  2.6247e-01,
          3.7510e-01, -8.5672e-01,  2.0670e-01,  4.6052e-01,  5.4924e-01,
          1.0700e+00, -5.8380e-02,  5.3343e-03,  1.4825e+00, -6.5337e-01,
          2.4716e-01, -2.6975e-01,  9.8887e-03, -2.9590e-01, -4.3669e-01,
         -1.5026e-02,  2.5431e-01,  7.7796e-02, -5.7711e-01, -7.3389e-01,
          1.3541e-01, -3.5339e-02,  1.7758e-01, -3.6934e-01, -1.8722e-01,
         -1.6819e-01,  1.2740e-01, -4.4708e-02,  1.8704e-01,  2.8533e-01,
         -3.0256e-02, -1.7676e-01,  6.2220e-02, -4.4666e-02,  4.3802e-01,
          1.4384e-01,  2.4051e-01, -3.9927e-01, -2.7971e-01, -1.3795e-01,
         -4.3348e-02, -3.3611e-01, -1.6330e-01,  2.9423e-01, -2.5549e-01,
         -1.4171e-01,  4.3419e-01,  1.9660e-01, -5.1172e-01, -1.9271e-02,
         -1.5847e-01, -1.0810e-01,  7.9302e-02,  3.4255e-01, -1.1521e-01,
         -2.0890e-02, -1.7523e-01,  2.1190e-01, -3.2161e-01,  2.9422e-01,
         -9.0669e-02,  1.9313e-01, -6.2359e-02, -4.2414e-01, -6.9219e-02,
          2.9920e-02,  1.8727e-01,  5.8017e-02, -1.2139e-01,  1.6315e-02,
          3.6483e-02,  1.6237e-01,  4.7494e-01, -7.4297e-02, -2.2385e-01,
          5.4518e-01, -3.0931e-01, -3.6157e-01,  2.9743e-01,  1.2201e-01,
         -3.8776e-02, -3.3722e-01,  1.3485e-01, -1.7722e-01, -5.6861e-01,
         -2.1549e-01, -1.9420e-01, -3.9792e-01, -6.5735e-02,  1.6210e-01,
         -2.6731e-01, -4.7002e-01, -2.5621e-01,  7.0274e-01, -1.7964e-01,
          1.1315e-01, -1.5881e-02, -2.4981e-01,  2.4052e-02, -1.1235e-03,
          4.8259e-02,  1.2663e-02, -1.1860e-02, -6.3198e-02, -9.2539e-02,
          1.2962e-02, -4.5763e-02, -1.7310e-01, -6.3725e-02,  8.1360e-02,
         -4.1756e-02,  5.8032e-02,  7.4741e-02, -1.9190e-01, -4.8321e-02,
          1.5597e-02, -9.2285e-03,  7.2838e-02,  1.0148e-01, -2.1539e-01,
          1.0820e-01, -2.3664e-01, -1.1076e-01, -1.1514e-01, -2.3887e-01,
          4.2972e-02, -1.2555e-01, -7.3236e-02,  1.2049e-01, -5.9476e-02,
          2.4217e-01,  1.4107e-01,  8.3366e-02,  1.7258e-01,  2.0489e-02,
         -9.5854e-02, -1.6583e-02,  4.1856e-02,  9.8966e-02, -1.7564e-01,
          1.9067e-01,  6.1426e-02, -2.2429e-02,  5.6887e-02, -5.6831e-02,
         -9.9413e-02]], device='cuda:0') tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
979000 特征值优化 tensor(0.5884, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2179e+00,  7.6380e-01, -8.4914e-01, -1.0022e+00,  2.1999e+00,
          1.9318e+00,  1.9479e+00, -2.4496e+00,  6.4700e-01,  3.8050e-01,
         -9.7719e-01,  8.0135e-01,  5.7888e-01, -5.7505e-02,  2.3291e-01,
          3.7105e-01, -8.9594e-01,  2.0661e-01,  4.5234e-01,  5.6669e-01,
          1.0814e+00, -6.0814e-02,  1.6035e-03,  1.4681e+00, -6.2466e-01,
          2.7271e-01, -2.9076e-01, -1.1541e-02, -2.8007e-01, -4.2800e-01,
         -3.0965e-02,  2.7600e-01,  8.5088e-02, -5.7202e-01, -7.1498e-01,
          1.3216e-01, -5.8711e-02,  1.6713e-01, -3.5908e-01, -1.9537e-01,
         -1.6046e-01,  1.3008e-01, -5.1533e-02,  1.9147e-01,  2.8177e-01,
         -1.1169e-02, -2.0137e-01,  7.2925e-02, -4.7994e-02,  4.3203e-01,
          1.4877e-01,  2.4589e-01, -3.7624e-01, -2.9146e-01, -1.4928e-01,
         -4.8052e-02, -3.3964e-01, -1.7527e-01,  2.7982e-01, -2.5846e-01,
         -1.4475e-01,  4.3325e-01,  2.4731e-01, -5.1549e-01, -2.1169e-02,
         -1.3806e-01, -9.8022e-02,  7.8454e-02,  3.5027e-01, -1.0925e-01,
         -4.0184e-02, -1.8069e-01,  1.9566e-01, -3.2278e-01,  2.7940e-01,
         -8.3744e-02,  2.0017e-01, -6.5927e-02, -4.1340e-01, -7.0637e-02,
          2.6982e-02,  1.8096e-01,  5.7395e-02, -1.0985e-01, -9.9014e-03,
          2.4584e-02,  1.4612e-01,  4.5795e-01, -8.9422e-02, -2.0523e-01,
          5.4300e-01, -3.0508e-01, -3.6275e-01,  2.9773e-01,  1.1629e-01,
         -3.4430e-02, -3.4531e-01,  1.6377e-01, -1.4566e-01, -5.4494e-01,
         -2.1906e-01, -1.7860e-01, -3.6930e-01, -4.5064e-02,  1.7117e-01,
         -2.4528e-01, -4.5303e-01, -2.7272e-01,  6.9845e-01, -1.5825e-01,
          1.1476e-01, -2.9574e-03, -2.5816e-01,  1.1747e-02,  1.8696e-02,
          4.2906e-02,  1.9513e-02, -2.3794e-02, -6.0563e-02, -7.8049e-02,
          5.3782e-03, -5.4602e-02, -1.6082e-01, -5.1367e-02,  8.0138e-02,
         -2.3539e-02,  5.8345e-02,  6.6292e-02, -1.8005e-01, -4.7304e-02,
          9.1182e-03, -1.0338e-02,  7.6798e-02,  1.1004e-01, -2.2131e-01,
          9.3960e-02, -2.4090e-01, -8.1617e-02, -1.2566e-01, -2.5476e-01,
          5.9189e-02, -1.1093e-01, -7.0542e-02,  1.0756e-01, -6.2671e-02,
          2.4159e-01,  1.4461e-01,  8.3585e-02,  1.8354e-01,  6.9128e-03,
         -9.5313e-02, -3.8878e-03,  3.7612e-02,  9.6560e-02, -1.7811e-01,
          1.8835e-01,  6.9285e-02, -2.3716e-02,  5.9670e-02, -6.0109e-02,
         -9.0838e-02]], device='cuda:0') tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
980000 特征值优化 tensor(0.5349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2944e+00,  7.0662e-01, -8.8183e-01, -1.0076e+00,  2.2832e+00,
          1.9321e+00,  1.9463e+00, -2.4678e+00,  6.3372e-01,  3.8852e-01,
         -9.9357e-01,  8.3478e-01,  5.9883e-01, -2.4445e-02,  1.9198e-01,
          3.5451e-01, -9.2692e-01,  2.0438e-01,  4.4493e-01,  6.0695e-01,
          1.0806e+00, -5.8906e-02,  6.5988e-03,  1.4533e+00, -5.9488e-01,
          2.8832e-01, -2.8631e-01, -3.6155e-02, -2.7976e-01, -4.0229e-01,
         -2.4190e-02,  2.7374e-01,  9.3987e-02, -5.5722e-01, -6.9817e-01,
          1.2774e-01, -5.7374e-02,  1.5598e-01, -3.5282e-01, -1.9584e-01,
         -1.5506e-01,  1.3048e-01, -5.1215e-02,  1.7558e-01,  2.5799e-01,
         -1.5503e-02, -2.0661e-01,  7.7490e-02, -8.1763e-02,  4.1351e-01,
          1.4891e-01,  2.6462e-01, -3.5494e-01, -2.8244e-01, -1.5891e-01,
         -5.4276e-02, -3.5060e-01, -1.9999e-01,  2.9857e-01, -2.5666e-01,
         -1.6443e-01,  4.3846e-01,  2.5875e-01, -4.9173e-01, -4.2008e-02,
         -1.6630e-01, -9.5988e-02,  8.9027e-02,  3.5348e-01, -1.1853e-01,
         -4.0055e-02, -1.7935e-01,  1.8863e-01, -3.2730e-01,  2.6491e-01,
         -7.6403e-02,  2.0469e-01, -5.5013e-02, -4.1524e-01, -7.0304e-02,
          3.1850e-02,  1.7304e-01,  7.1111e-02, -1.2776e-01, -3.3238e-02,
          4.4308e-02,  1.5032e-01,  4.5247e-01, -1.0818e-01, -1.9425e-01,
          5.3651e-01, -3.0046e-01, -3.4143e-01,  2.8307e-01,  1.1199e-01,
         -2.8137e-02, -3.5613e-01,  1.6742e-01, -1.5430e-01, -5.0289e-01,
         -1.9675e-01, -1.5305e-01, -3.1308e-01, -3.0113e-02,  1.6438e-01,
         -2.2178e-01, -4.4389e-01, -3.1310e-01,  7.0294e-01, -1.4930e-01,
          1.1489e-01,  1.0226e-02, -2.5272e-01,  1.6289e-02,  1.6458e-02,
          4.5497e-02,  3.7903e-02, -4.8394e-02, -6.4979e-02, -7.6430e-02,
          2.3239e-03, -5.1801e-02, -1.5173e-01, -5.2544e-02,  7.2772e-02,
         -2.6729e-02,  6.8045e-02,  7.8083e-02, -1.9217e-01, -6.0256e-02,
          8.0185e-03, -1.2506e-02,  6.9492e-02,  1.2125e-01, -2.0478e-01,
          1.0817e-01, -2.2879e-01, -7.8969e-02, -1.2140e-01, -2.3329e-01,
          3.2743e-02, -1.1415e-01, -4.9713e-02,  1.1038e-01, -8.5491e-02,
          2.2946e-01,  1.3074e-01,  9.7585e-02,  1.8852e-01,  6.5638e-03,
         -9.0720e-02, -1.2553e-02,  3.4551e-02,  9.5103e-02, -1.8936e-01,
          1.7945e-01,  7.4200e-02, -4.5424e-02,  6.4878e-02, -3.4909e-02,
         -8.7700e-02]], device='cuda:0') tensor(0.2070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
981000 特征值优化 tensor(0.5266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3658,  0.6799, -0.9066, -0.9999,  2.3507,  1.9553,  1.9717, -2.5085,
          0.6441,  0.3879, -1.0025,  0.8492,  0.6113, -0.0046,  0.1462,  0.3353,
         -0.9504,  0.2116,  0.4454,  0.6095,  1.0861, -0.0571,  0.0245,  1.4428,
         -0.5891,  0.2820, -0.2759, -0.0468, -0.2826, -0.3930, -0.0104,  0.2831,
          0.1132, -0.5601, -0.6940,  0.1406, -0.0756,  0.1465, -0.3491, -0.1948,
         -0.1497,  0.1306, -0.0526,  0.1747,  0.2498, -0.0064, -0.1953,  0.0575,
         -0.0904,  0.4063,  0.1295,  0.2815, -0.3266, -0.2771, -0.1689, -0.0537,
         -0.3552, -0.2006,  0.2932, -0.2491, -0.1510,  0.4408,  0.2714, -0.4686,
         -0.0428, -0.1779, -0.0795,  0.0883,  0.3642, -0.1217, -0.0419, -0.1704,
          0.1882, -0.3256,  0.2569, -0.0779,  0.2072, -0.0499, -0.4161, -0.0785,
          0.0441,  0.1719,  0.0764, -0.1305, -0.0418,  0.0477,  0.1502,  0.4395,
         -0.1294, -0.1810,  0.5286, -0.2849, -0.3228,  0.2778,  0.1092, -0.0237,
         -0.3706,  0.1719, -0.1771, -0.4914, -0.1651, -0.1281, -0.2851, -0.0055,
          0.1740, -0.1981, -0.4261, -0.3308,  0.6636, -0.1460,  0.1126,  0.0055,
         -0.2468,  0.0145,  0.0168,  0.0470,  0.0380, -0.0522, -0.0667, -0.0805,
         -0.0065, -0.0480, -0.1460, -0.0488,  0.0607, -0.0106,  0.0679,  0.0784,
         -0.1820, -0.0635,  0.0161, -0.0073,  0.0762,  0.1291, -0.2094,  0.1073,
         -0.2187, -0.0691, -0.1107, -0.2400,  0.0197, -0.1054, -0.0431,  0.1044,
         -0.0889,  0.2357,  0.1211,  0.0910,  0.1942,  0.0045, -0.0953, -0.0173,
          0.0439,  0.0934, -0.1936,  0.1741,  0.0776, -0.0457,  0.0632, -0.0248,
         -0.0888]], device='cuda:0') tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
982000 特征值优化 tensor(0.5269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3779e+00,  6.6132e-01, -9.0777e-01, -9.9900e-01,  2.3722e+00,
          1.9624e+00,  2.0134e+00, -2.5399e+00,  6.4859e-01,  3.7917e-01,
         -1.0092e+00,  8.7179e-01,  6.3328e-01, -1.4415e-03,  1.0435e-01,
          3.3912e-01, -9.3319e-01,  2.0477e-01,  4.3857e-01,  6.3131e-01,
          1.0928e+00, -4.3593e-02,  2.8788e-02,  1.4214e+00, -5.6222e-01,
          2.9229e-01, -2.7350e-01, -6.3152e-02, -2.6344e-01, -3.8010e-01,
         -1.2452e-02,  2.7884e-01,  1.0758e-01, -5.6413e-01, -6.9834e-01,
          1.4513e-01, -8.1068e-02,  1.6035e-01, -3.3814e-01, -2.2280e-01,
         -1.5159e-01,  1.3324e-01, -5.2394e-02,  1.7906e-01,  2.4227e-01,
         -6.9271e-03, -2.0982e-01,  6.9038e-02, -9.8661e-02,  4.1179e-01,
          1.2101e-01,  2.6702e-01, -3.2414e-01, -2.8358e-01, -1.7021e-01,
         -5.3718e-02, -3.5568e-01, -2.0766e-01,  2.9240e-01, -2.4845e-01,
         -1.6241e-01,  4.3923e-01,  2.7282e-01, -4.7075e-01, -4.1815e-02,
         -1.5618e-01, -6.9120e-02,  1.0562e-01,  3.6390e-01, -1.2572e-01,
         -4.2346e-02, -1.8085e-01,  1.6711e-01, -3.2258e-01,  2.4612e-01,
         -7.0822e-02,  2.2361e-01, -5.4829e-02, -4.2308e-01, -6.6248e-02,
          3.6275e-02,  1.6337e-01,  9.3393e-02, -1.0377e-01, -4.9426e-02,
          5.2970e-02,  1.3953e-01,  4.3319e-01, -1.4684e-01, -1.5319e-01,
          5.2768e-01, -2.8668e-01, -3.3342e-01,  2.9789e-01,  1.1067e-01,
         -2.1762e-02, -3.6605e-01,  1.9069e-01, -1.5531e-01, -5.2490e-01,
         -1.6878e-01, -1.3357e-01, -2.5588e-01,  2.3943e-02,  1.8474e-01,
         -2.1423e-01, -4.2290e-01, -3.3372e-01,  6.5133e-01, -1.4228e-01,
          1.1317e-01,  9.9502e-03, -2.4170e-01, -4.0908e-03,  3.1369e-02,
          4.6778e-02,  3.8128e-02, -3.7983e-02, -8.0706e-02, -8.9740e-02,
         -9.9685e-03, -3.8105e-02, -1.3301e-01, -5.2524e-02,  5.1285e-02,
         -1.8872e-02,  7.1278e-02,  8.5497e-02, -1.7161e-01, -5.4947e-02,
          2.3177e-02, -1.3654e-03,  7.6208e-02,  1.2470e-01, -1.9562e-01,
          9.0082e-02, -2.0492e-01, -4.3392e-02, -1.1615e-01, -2.0561e-01,
          4.2579e-02, -1.2907e-01, -5.5058e-02,  8.8930e-02, -9.5583e-02,
          2.3256e-01,  1.1748e-01,  9.6381e-02,  1.8005e-01, -8.8180e-03,
         -7.3811e-02, -9.7341e-03,  3.3484e-02,  1.0460e-01, -2.0135e-01,
          1.8030e-01,  5.2638e-02, -3.6449e-02,  5.9439e-02, -2.9338e-02,
         -9.6071e-02]], device='cuda:0') tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
983000 特征值优化 tensor(0.5465, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3988,  0.6245, -0.9205, -1.0063,  2.4259,  1.9641,  2.0190, -2.5601,
          0.6463,  0.3798, -1.0066,  0.8798,  0.6286,  0.0170,  0.0855,  0.3039,
         -0.9584,  0.2106,  0.4383,  0.6406,  1.0942, -0.0364,  0.0362,  1.4149,
         -0.5717,  0.3206, -0.2711, -0.0393, -0.2659, -0.3721, -0.0042,  0.2842,
          0.1233, -0.5694, -0.6808,  0.1533, -0.0715,  0.1644, -0.3318, -0.2314,
         -0.1583,  0.1303, -0.0498,  0.1688,  0.2317,  0.0052, -0.2025,  0.0540,
         -0.0958,  0.4140,  0.1053,  0.2758, -0.3141, -0.2857, -0.1771, -0.0621,
         -0.3695, -0.2068,  0.2862, -0.2406, -0.1659,  0.4377,  0.2936, -0.4709,
         -0.0419, -0.1657, -0.0578,  0.1019,  0.3667, -0.1307, -0.0462, -0.1802,
          0.1641, -0.3250,  0.2385, -0.0780,  0.2226, -0.0512, -0.4206, -0.0703,
          0.0384,  0.1614,  0.0826, -0.1190, -0.0475,  0.0405,  0.1389,  0.4157,
         -0.1422, -0.1355,  0.5209, -0.2678, -0.3271,  0.2863,  0.1134, -0.0187,
         -0.3665,  0.1996, -0.1692, -0.5030, -0.1564, -0.1135, -0.2412,  0.0347,
          0.1901, -0.2008, -0.4141, -0.3258,  0.6218, -0.1371,  0.1131,  0.0088,
         -0.2387, -0.0050,  0.0374,  0.0433,  0.0445, -0.0511, -0.0690, -0.0829,
         -0.0071, -0.0393, -0.1288, -0.0520,  0.0499, -0.0082,  0.0656,  0.0810,
         -0.1628, -0.0531,  0.0192, -0.0028,  0.0788,  0.1258, -0.1987,  0.0949,
         -0.2092, -0.0401, -0.1020, -0.2166,  0.0474, -0.1085, -0.0652,  0.0859,
         -0.0936,  0.2276,  0.1172,  0.0942,  0.1808, -0.0175, -0.0786, -0.0171,
          0.0451,  0.0877, -0.2007,  0.1695,  0.0538, -0.0330,  0.0584, -0.0355,
         -0.0944]], device='cuda:0') tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
984000 特征值优化 tensor(0.5255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3828e+00,  6.2002e-01, -9.2787e-01, -9.9793e-01,  2.4702e+00,
          1.9765e+00,  2.0343e+00, -2.5651e+00,  6.6026e-01,  3.7793e-01,
         -1.0239e+00,  8.8776e-01,  6.3946e-01,  3.4512e-02,  5.6425e-02,
          2.9130e-01, -9.4753e-01,  2.0171e-01,  4.3950e-01,  6.5789e-01,
          1.1098e+00, -2.4758e-02,  4.6221e-02,  1.3973e+00, -5.6400e-01,
          3.3081e-01, -2.6705e-01, -5.1379e-02, -2.6647e-01, -3.5558e-01,
         -5.2598e-03,  2.8932e-01,  1.1317e-01, -5.6883e-01, -6.7775e-01,
          1.5494e-01, -8.3718e-02,  1.5615e-01, -3.2679e-01, -2.4214e-01,
         -1.5614e-01,  1.3398e-01, -5.2864e-02,  1.7356e-01,  2.1274e-01,
          4.4354e-03, -2.0783e-01,  5.5023e-02, -9.5324e-02,  4.0261e-01,
          9.5297e-02,  2.7468e-01, -3.0403e-01, -2.9451e-01, -1.8370e-01,
         -5.9461e-02, -3.6852e-01, -2.1988e-01,  2.8124e-01, -2.3056e-01,
         -1.6390e-01,  4.4491e-01,  2.9862e-01, -4.6406e-01, -4.9465e-02,
         -1.6403e-01, -4.9023e-02,  1.1505e-01,  3.6548e-01, -1.4053e-01,
         -4.3855e-02, -1.7519e-01,  1.5664e-01, -3.2780e-01,  2.2533e-01,
         -7.7719e-02,  2.3459e-01, -5.5808e-02, -4.2693e-01, -7.0069e-02,
          3.2601e-02,  1.5628e-01,  9.1220e-02, -1.0480e-01, -5.9511e-02,
          5.1525e-02,  1.3712e-01,  4.1161e-01, -1.3571e-01, -1.3900e-01,
          5.1281e-01, -2.6892e-01, -3.2117e-01,  2.8218e-01,  1.0953e-01,
         -1.6716e-02, -3.6874e-01,  1.9630e-01, -1.7111e-01, -5.0384e-01,
         -1.4404e-01, -1.2135e-01, -2.0992e-01,  5.3081e-02,  1.8422e-01,
         -2.1378e-01, -4.0249e-01, -3.3023e-01,  6.0168e-01, -1.3642e-01,
          1.1389e-01,  9.4070e-03, -2.3460e-01, -1.4885e-02,  4.2684e-02,
          4.5632e-02,  4.3806e-02, -5.2172e-02, -7.2179e-02, -8.7652e-02,
         -1.2370e-02, -2.4855e-02, -1.2161e-01, -6.1125e-02,  4.2397e-02,
         -1.2659e-02,  7.0062e-02,  8.2798e-02, -1.6379e-01, -6.0924e-02,
          2.7492e-02,  2.1782e-03,  7.2150e-02,  1.3668e-01, -1.8746e-01,
          9.7826e-02, -2.0966e-01, -3.3538e-02, -9.8695e-02, -2.1093e-01,
          4.5133e-02, -1.0807e-01, -6.6358e-02,  7.8303e-02, -1.0069e-01,
          2.3152e-01,  1.0839e-01,  9.0217e-02,  1.7386e-01, -3.9477e-02,
         -7.1624e-02, -1.1462e-02,  4.0962e-02,  9.1081e-02, -2.0715e-01,
          1.7714e-01,  4.1520e-02, -2.8120e-02,  5.5382e-02, -2.0663e-02,
         -9.5915e-02]], device='cuda:0') tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
985000 特征值优化 tensor(0.5445, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3743e+00,  6.0284e-01, -9.3129e-01, -1.0018e+00,  2.5157e+00,
          1.9952e+00,  2.0258e+00, -2.5818e+00,  6.5343e-01,  3.7521e-01,
         -1.0210e+00,  8.8024e-01,  6.2426e-01,  5.3541e-02,  2.9443e-02,
          2.7210e-01, -9.7810e-01,  2.0219e-01,  4.5499e-01,  6.7392e-01,
          1.1001e+00, -2.4155e-02,  5.0100e-02,  1.4000e+00, -5.6382e-01,
          3.4925e-01, -2.5054e-01, -2.6791e-02, -2.8495e-01, -3.4973e-01,
          9.9960e-04,  2.9999e-01,  1.2906e-01, -5.6935e-01, -6.6686e-01,
          1.6198e-01, -9.1683e-02,  1.4262e-01, -3.1643e-01, -2.3089e-01,
         -1.6203e-01,  1.2819e-01, -5.1211e-02,  1.6614e-01,  2.0441e-01,
          9.1606e-03, -1.9918e-01,  4.4020e-02, -9.7816e-02,  3.8099e-01,
          7.7092e-02,  2.8354e-01, -2.8690e-01, -2.9399e-01, -1.9701e-01,
         -4.3729e-02, -3.7416e-01, -2.1140e-01,  3.0286e-01, -2.2343e-01,
         -1.7607e-01,  4.4576e-01,  3.1105e-01, -4.5299e-01, -4.7451e-02,
         -1.8407e-01, -4.6972e-02,  1.0676e-01,  3.6986e-01, -1.4960e-01,
         -4.5773e-02, -1.5987e-01,  1.5944e-01, -3.2486e-01,  2.1795e-01,
         -7.6040e-02,  2.2936e-01, -5.7483e-02, -4.1510e-01, -8.2394e-02,
          4.0579e-02,  1.5033e-01,  8.0544e-02, -1.2607e-01, -5.5343e-02,
          4.2250e-02,  1.3399e-01,  4.0945e-01, -1.4723e-01, -1.5625e-01,
          5.0809e-01, -2.5604e-01, -3.0755e-01,  2.5395e-01,  1.1252e-01,
         -1.3339e-02, -3.6366e-01,  2.2053e-01, -1.7602e-01, -4.8007e-01,
         -1.3210e-01, -9.9711e-02, -1.9131e-01,  4.7151e-02,  1.9174e-01,
         -2.0126e-01, -3.9790e-01, -3.3109e-01,  5.6842e-01, -1.3148e-01,
          1.1594e-01,  1.4753e-02, -2.3124e-01, -1.4760e-02,  4.1691e-02,
          3.7538e-02,  5.4394e-02, -7.1633e-02, -8.0670e-02, -8.0748e-02,
         -1.0910e-02, -2.8066e-02, -1.2590e-01, -7.1184e-02,  3.2896e-02,
         -5.2896e-04,  7.6503e-02,  7.8476e-02, -1.6035e-01, -6.9911e-02,
          2.1707e-02, -2.8799e-03,  7.1436e-02,  1.4139e-01, -1.9040e-01,
          9.8968e-02, -2.2827e-01, -3.4697e-02, -9.1755e-02, -2.3189e-01,
          1.8922e-02, -8.0475e-02, -4.4935e-02,  7.4225e-02, -1.0026e-01,
          2.2463e-01,  9.9702e-02,  8.9359e-02,  1.8563e-01, -4.9619e-02,
         -8.7798e-02, -1.2389e-02,  6.0502e-02,  7.3908e-02, -1.9980e-01,
          1.7159e-01,  5.8973e-02, -3.8710e-02,  5.3260e-02, -2.0529e-02,
         -9.3111e-02]], device='cuda:0') tensor(0.2004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
986000 特征值优化 tensor(0.5325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3197e+00,  6.0138e-01, -9.3053e-01, -1.0066e+00,  2.5533e+00,
          1.9889e+00,  2.0451e+00, -2.5773e+00,  6.5304e-01,  3.6418e-01,
         -1.0248e+00,  8.8905e-01,  6.2713e-01,  7.4405e-02, -1.4043e-02,
          2.8555e-01, -9.7938e-01,  2.0578e-01,  4.5534e-01,  6.9326e-01,
          1.1167e+00, -9.7676e-03,  4.5152e-02,  1.3781e+00, -5.5931e-01,
          3.6475e-01, -2.5163e-01, -3.2103e-02, -2.8399e-01, -3.2606e-01,
          7.5600e-04,  3.0016e-01,  1.2909e-01, -5.7020e-01, -6.5455e-01,
          1.5441e-01, -8.4708e-02,  1.4215e-01, -2.9430e-01, -2.4726e-01,
         -1.6313e-01,  1.3021e-01, -5.2811e-02,  1.7328e-01,  1.8338e-01,
          2.0814e-02, -2.1355e-01,  4.4801e-02, -8.6900e-02,  3.6625e-01,
          7.7595e-02,  2.7629e-01, -2.8772e-01, -3.0190e-01, -2.0161e-01,
         -4.1035e-02, -3.7648e-01, -2.2601e-01,  3.0048e-01, -2.1290e-01,
         -1.7061e-01,  4.4778e-01,  3.2488e-01, -4.5838e-01, -5.7508e-02,
         -1.8498e-01, -3.3483e-02,  1.0546e-01,  3.7569e-01, -1.5646e-01,
         -5.0491e-02, -1.5168e-01,  1.4941e-01, -3.2513e-01,  2.1676e-01,
         -8.1882e-02,  2.4213e-01, -7.3958e-02, -4.2406e-01, -8.1661e-02,
          2.6050e-02,  1.4921e-01,  7.9161e-02, -1.1953e-01, -6.1464e-02,
          4.9069e-02,  1.4752e-01,  4.0597e-01, -1.4718e-01, -1.2751e-01,
          4.9526e-01, -2.4993e-01, -3.0659e-01,  2.5869e-01,  1.1202e-01,
         -1.6521e-02, -3.5834e-01,  2.2880e-01, -1.5399e-01, -4.8296e-01,
         -1.4661e-01, -9.9580e-02, -1.6584e-01,  6.7759e-02,  2.0199e-01,
         -2.1160e-01, -4.0438e-01, -3.3486e-01,  5.4245e-01, -1.3071e-01,
          1.1077e-01,  1.0187e-02, -2.3077e-01, -2.9400e-02,  5.0433e-02,
          4.6400e-02,  6.0436e-02, -6.9377e-02, -8.5940e-02, -9.1302e-02,
         -1.3608e-02, -2.5685e-02, -1.1994e-01, -7.7740e-02,  2.7230e-02,
         -1.1933e-04,  8.0029e-02,  7.7159e-02, -1.6316e-01, -7.5932e-02,
          1.9888e-02, -1.2942e-03,  7.7639e-02,  1.3716e-01, -1.8067e-01,
          1.0277e-01, -2.0700e-01, -2.7667e-02, -8.5280e-02, -2.3579e-01,
          4.0162e-02, -8.4674e-02, -5.5717e-02,  6.5561e-02, -1.0366e-01,
          2.2567e-01,  1.0361e-01,  7.8897e-02,  1.8400e-01, -5.8979e-02,
         -7.7552e-02, -5.1189e-03,  5.2991e-02,  7.9816e-02, -1.9872e-01,
          1.7817e-01,  4.1099e-02, -3.0620e-02,  3.7639e-02, -1.6528e-02,
         -9.0580e-02]], device='cuda:0') tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
987000 特征值优化 tensor(0.5227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2990e+00,  5.9670e-01, -9.1886e-01, -9.9853e-01,  2.5861e+00,
          1.9908e+00,  2.0649e+00, -2.5949e+00,  6.6224e-01,  3.7578e-01,
         -1.0169e+00,  8.9157e-01,  6.2163e-01,  6.9720e-02, -4.1004e-02,
          2.9767e-01, -9.8696e-01,  2.1445e-01,  4.5913e-01,  7.0239e-01,
          1.1224e+00,  7.1624e-04,  2.5416e-02,  1.3745e+00, -5.5965e-01,
          3.9644e-01, -2.5043e-01, -2.5234e-02, -2.6982e-01, -3.1559e-01,
          6.1878e-03,  2.9604e-01,  1.2923e-01, -5.8662e-01, -6.4444e-01,
          1.5279e-01, -7.7260e-02,  1.5515e-01, -2.8664e-01, -2.5764e-01,
         -1.5937e-01,  1.3179e-01, -5.4880e-02,  1.7326e-01,  1.6718e-01,
          3.9218e-02, -2.1655e-01,  3.9325e-02, -8.9467e-02,  3.6357e-01,
          7.3873e-02,  2.7381e-01, -2.8075e-01, -2.9655e-01, -1.9845e-01,
         -4.2124e-02, -3.7593e-01, -2.2448e-01,  2.8888e-01, -2.0525e-01,
         -1.7158e-01,  4.5714e-01,  3.3769e-01, -4.5452e-01, -5.9710e-02,
         -1.8059e-01, -2.1281e-02,  1.1253e-01,  3.6352e-01, -1.5671e-01,
         -4.5668e-02, -1.5346e-01,  1.4214e-01, -3.1625e-01,  2.2289e-01,
         -9.1903e-02,  2.4663e-01, -9.0266e-02, -4.2988e-01, -7.5062e-02,
          2.6389e-02,  1.4016e-01,  7.9613e-02, -1.1691e-01, -7.0819e-02,
          3.3508e-02,  1.2670e-01,  3.9324e-01, -1.3811e-01, -1.1276e-01,
          4.9620e-01, -2.4079e-01, -3.0894e-01,  2.6766e-01,  1.1514e-01,
         -1.8107e-02, -3.5649e-01,  2.2260e-01, -1.3480e-01, -4.7769e-01,
         -1.4711e-01, -8.3537e-02, -1.5703e-01,  7.3698e-02,  2.0600e-01,
         -2.1811e-01, -4.1107e-01, -3.3423e-01,  4.9900e-01, -1.2909e-01,
          1.1144e-01,  1.1407e-02, -2.2195e-01, -2.6992e-02,  5.1493e-02,
          6.3937e-02,  5.8326e-02, -6.4951e-02, -8.1864e-02, -1.0559e-01,
         -2.3449e-02, -1.7449e-02, -1.1274e-01, -7.8907e-02,  1.4138e-02,
          5.1752e-03,  7.6219e-02,  7.2091e-02, -1.5441e-01, -8.6481e-02,
          1.9662e-02,  7.3216e-03,  8.2084e-02,  1.4649e-01, -1.8243e-01,
          9.3663e-02, -1.9524e-01, -2.5555e-02, -7.1055e-02, -2.2487e-01,
          4.5347e-02, -9.2852e-02, -6.9283e-02,  5.0227e-02, -1.0308e-01,
          2.2476e-01,  1.0137e-01,  7.2984e-02,  1.8118e-01, -7.8186e-02,
         -7.5859e-02,  8.6899e-04,  4.2561e-02,  6.7066e-02, -2.1620e-01,
          1.7968e-01,  3.2016e-02, -4.7918e-02,  3.7156e-02, -1.9131e-02,
         -1.1196e-01]], device='cuda:0') tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
988000 特征值优化 tensor(0.5217, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2755e+00,  6.0373e-01, -9.1832e-01, -9.9931e-01,  2.5786e+00,
          1.9962e+00,  2.0560e+00, -2.6063e+00,  6.6368e-01,  3.7492e-01,
         -1.0203e+00,  8.9916e-01,  6.1458e-01,  5.0794e-02, -7.2910e-02,
          3.2249e-01, -1.0026e+00,  2.2665e-01,  4.6600e-01,  7.0817e-01,
          1.1207e+00,  4.1046e-03,  3.3010e-02,  1.3685e+00, -5.5822e-01,
          4.1880e-01, -2.5486e-01, -2.3261e-02, -2.9480e-01, -3.0210e-01,
         -3.7458e-03,  3.0072e-01,  1.3686e-01, -5.6675e-01, -6.3372e-01,
          1.4811e-01, -7.5350e-02,  1.6094e-01, -2.8123e-01, -2.6803e-01,
         -1.5879e-01,  1.3190e-01, -5.4607e-02,  1.7234e-01,  1.5463e-01,
          4.3947e-02, -2.1632e-01,  4.3679e-02, -9.4502e-02,  3.5383e-01,
          7.2665e-02,  2.9134e-01, -2.7159e-01, -2.9091e-01, -2.0125e-01,
         -3.8834e-02, -3.7429e-01, -2.2033e-01,  2.8616e-01, -1.9853e-01,
         -1.8106e-01,  4.5420e-01,  3.6317e-01, -4.5658e-01, -5.5746e-02,
         -1.8725e-01, -2.6872e-02,  1.0457e-01,  3.6092e-01, -1.5956e-01,
         -4.7129e-02, -1.4806e-01,  1.4308e-01, -3.1256e-01,  2.1831e-01,
         -1.0484e-01,  2.4243e-01, -8.8632e-02, -4.1486e-01, -7.6696e-02,
          2.7784e-02,  1.3281e-01,  7.4040e-02, -1.3271e-01, -6.9761e-02,
          3.0956e-02,  1.3163e-01,  3.8104e-01, -1.2725e-01, -9.7770e-02,
          4.8216e-01, -2.3726e-01, -3.1293e-01,  2.5915e-01,  1.1575e-01,
         -1.8205e-02, -3.4169e-01,  2.3460e-01, -1.3051e-01, -4.7643e-01,
         -1.5921e-01, -6.6963e-02, -1.4005e-01,  6.6517e-02,  2.0681e-01,
         -2.1121e-01, -4.0747e-01, -3.3778e-01,  4.7553e-01, -1.2427e-01,
          1.1513e-01,  9.4760e-03, -2.2711e-01, -3.0186e-02,  4.8032e-02,
          6.7055e-02,  5.6445e-02, -8.7922e-02, -8.5945e-02, -1.1090e-01,
         -2.4816e-02, -2.0254e-02, -1.1232e-01, -8.8649e-02,  4.8266e-03,
          1.1381e-02,  8.4357e-02,  6.9514e-02, -1.5757e-01, -9.9331e-02,
          9.2376e-03,  1.7937e-03,  7.6428e-02,  1.4657e-01, -1.8031e-01,
          1.0165e-01, -2.0524e-01, -2.2881e-02, -6.3784e-02, -2.5458e-01,
          4.6561e-02, -7.9436e-02, -6.4479e-02,  3.6155e-02, -9.8103e-02,
          2.2201e-01,  1.0162e-01,  7.1854e-02,  1.8466e-01, -8.0434e-02,
         -7.5225e-02,  6.8024e-04,  4.3765e-02,  6.1145e-02, -2.0962e-01,
          1.8462e-01,  2.5703e-02, -4.6396e-02,  3.5165e-02, -2.1317e-02,
         -1.1250e-01]], device='cuda:0') tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
989000 特征值优化 tensor(0.5230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2889e+00,  5.9922e-01, -9.0926e-01, -9.9792e-01,  2.5509e+00,
          2.0076e+00,  2.0781e+00, -2.6115e+00,  6.4476e-01,  3.6588e-01,
         -1.0234e+00,  8.9072e-01,  6.1055e-01,  2.4982e-02, -8.2860e-02,
          3.2758e-01, -1.0249e+00,  2.3465e-01,  4.6111e-01,  7.2236e-01,
          1.1227e+00, -1.0335e-03,  3.9624e-02,  1.3755e+00, -5.6426e-01,
          4.1617e-01, -2.4473e-01, -3.8108e-02, -3.2069e-01, -3.0180e-01,
          1.3001e-03,  2.8563e-01,  1.1654e-01, -5.5269e-01, -6.3202e-01,
          1.4202e-01, -8.0881e-02,  1.3556e-01, -2.6027e-01, -2.4492e-01,
         -1.7639e-01,  1.3213e-01, -5.4649e-02,  1.7616e-01,  1.5335e-01,
          3.4259e-02, -2.2612e-01,  5.7603e-02, -1.2803e-01,  3.3040e-01,
          6.1278e-02,  2.6890e-01, -2.5645e-01, -3.0003e-01, -2.1758e-01,
         -1.2578e-02, -3.7091e-01, -2.5010e-01,  3.0460e-01, -1.8207e-01,
         -2.0142e-01,  4.5744e-01,  3.6217e-01, -4.4523e-01, -4.7828e-02,
         -1.7397e-01, -4.2457e-02,  1.0220e-01,  3.7213e-01, -1.6948e-01,
         -4.3561e-02, -1.4459e-01,  1.4810e-01, -3.2029e-01,  2.0479e-01,
         -8.2012e-02,  2.4757e-01, -8.0645e-02, -4.0387e-01, -8.5867e-02,
          3.5184e-02,  1.4311e-01,  6.0813e-02, -1.4030e-01, -7.0961e-02,
          5.1795e-02,  1.3232e-01,  3.8514e-01, -1.6183e-01, -8.7695e-02,
          4.7325e-01, -2.4205e-01, -3.0549e-01,  2.3208e-01,  1.1367e-01,
         -2.2414e-02, -3.3587e-01,  2.5780e-01, -1.3991e-01, -4.7392e-01,
         -1.2759e-01, -5.0931e-02, -1.2248e-01,  8.1289e-02,  1.9647e-01,
         -2.3151e-01, -4.0013e-01, -3.4826e-01,  4.7313e-01, -1.2375e-01,
          1.2431e-01,  2.3541e-02, -2.1289e-01, -3.9632e-02,  5.5289e-02,
          5.1338e-02,  8.7070e-02, -8.1352e-02, -1.0612e-01, -9.4015e-02,
         -1.1477e-02, -3.4159e-03, -1.1761e-01, -9.6418e-02,  3.0162e-04,
          4.2070e-03,  8.5992e-02,  6.2881e-02, -1.6642e-01, -1.0526e-01,
          4.8488e-03, -1.0960e-03,  8.3065e-02,  1.6088e-01, -1.6914e-01,
          1.0567e-01, -1.8138e-01, -2.8403e-02, -7.8633e-02, -2.3872e-01,
          2.0823e-02, -6.0451e-02, -3.4608e-02,  3.0502e-02, -1.0307e-01,
          2.1624e-01,  9.0459e-02,  9.0861e-02,  2.0294e-01, -6.2643e-02,
         -8.8706e-02,  6.7734e-03,  4.1837e-02,  7.5562e-02, -1.9979e-01,
          1.6434e-01,  4.4974e-02, -3.9039e-02,  3.3221e-02, -1.8430e-02,
         -1.0056e-01]], device='cuda:0') tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
990000 特征值优化 tensor(0.5240, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2787e+00,  5.9904e-01, -9.0305e-01, -9.9847e-01,  2.5344e+00,
          2.0137e+00,  2.0782e+00, -2.6197e+00,  6.6268e-01,  3.7141e-01,
         -1.0307e+00,  8.9908e-01,  6.1048e-01,  2.1775e-02, -1.6410e-01,
          3.4293e-01, -1.0153e+00,  2.3280e-01,  4.6225e-01,  7.3339e-01,
          1.1152e+00,  2.3935e-02,  3.2593e-02,  1.3472e+00, -5.5543e-01,
          4.5795e-01, -2.6716e-01, -2.2121e-02, -3.1694e-01, -2.8879e-01,
          1.4822e-02,  2.8316e-01,  1.2152e-01, -5.5786e-01, -6.2723e-01,
          1.3675e-01, -6.6614e-02,  1.5658e-01, -2.6342e-01, -2.5889e-01,
         -1.7664e-01,  1.3062e-01, -5.4499e-02,  1.7747e-01,  1.4089e-01,
          3.6671e-02, -2.1940e-01,  4.1833e-02, -1.0400e-01,  3.3663e-01,
          5.7457e-02,  2.7439e-01, -2.5962e-01, -2.8988e-01, -2.1403e-01,
         -5.2008e-03, -3.8024e-01, -2.4618e-01,  2.9633e-01, -1.7314e-01,
         -2.1279e-01,  4.5938e-01,  3.6332e-01, -4.5216e-01, -8.1039e-02,
         -1.7379e-01, -2.8125e-02,  1.0247e-01,  3.6021e-01, -1.6777e-01,
         -4.8189e-02, -1.4294e-01,  1.3789e-01, -3.1156e-01,  2.0308e-01,
         -9.9441e-02,  2.4696e-01, -8.6701e-02, -4.1837e-01, -7.5591e-02,
          2.5436e-02,  1.3259e-01,  7.5872e-02, -1.3778e-01, -7.3795e-02,
          3.1427e-02,  1.2863e-01,  3.8458e-01, -1.3928e-01, -1.0234e-01,
          4.6987e-01, -2.4670e-01, -2.9738e-01,  2.3343e-01,  1.0883e-01,
         -2.4583e-02, -3.3590e-01,  2.4358e-01, -1.0894e-01, -4.4994e-01,
         -1.3701e-01, -4.8797e-02, -9.4647e-02,  8.0794e-02,  2.0623e-01,
         -2.2324e-01, -4.2174e-01, -3.4606e-01,  4.3457e-01, -1.2325e-01,
          1.1872e-01,  1.3477e-02, -2.0619e-01, -3.3983e-02,  4.3150e-02,
          7.5294e-02,  7.0705e-02, -7.9128e-02, -9.1817e-02, -1.1057e-01,
         -3.9938e-02,  1.0767e-02, -1.0663e-01, -1.0215e-01, -1.9683e-02,
          3.8270e-03,  8.3974e-02,  7.0248e-02, -1.5199e-01, -1.1593e-01,
         -7.5643e-05,  1.2044e-02,  8.5976e-02,  1.5731e-01, -1.7667e-01,
          1.1100e-01, -2.0285e-01, -2.2268e-02, -4.7532e-02, -2.5158e-01,
          4.7611e-02, -6.8028e-02, -6.3097e-02,  2.3339e-02, -1.0815e-01,
          2.0918e-01,  8.3949e-02,  7.9728e-02,  1.8016e-01, -8.2031e-02,
         -7.3862e-02,  4.1042e-03,  2.4995e-02,  5.3795e-02, -2.0523e-01,
          1.7980e-01,  2.6724e-02, -5.5867e-02,  2.8285e-02, -2.5998e-02,
         -1.2128e-01]], device='cuda:0') tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
991000 特征值优化 tensor(0.5254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2757,  0.5829, -0.8943, -0.9967,  2.4957,  2.0134,  2.0934, -2.6359,
          0.6549,  0.3709, -1.0357,  0.8926,  0.5938,  0.0354, -0.1847,  0.3253,
         -1.0315,  0.2457,  0.4593,  0.7384,  1.1172,  0.0303,  0.0254,  1.3306,
         -0.5589,  0.4636, -0.2690, -0.0085, -0.3261, -0.2733,  0.0217,  0.2611,
          0.1047, -0.5483, -0.6136,  0.1336, -0.0611,  0.1556, -0.2481, -0.2517,
         -0.1783,  0.1299, -0.0524,  0.1797,  0.1301,  0.0286, -0.2233,  0.0392,
         -0.1096,  0.3295,  0.0384,  0.2619, -0.2568, -0.2932, -0.2164,  0.0057,
         -0.3842, -0.2605,  0.2915, -0.1525, -0.2279,  0.4546,  0.3813, -0.4460,
         -0.0841, -0.1937, -0.0345,  0.0967,  0.3671, -0.1724, -0.0520, -0.1392,
          0.1359, -0.3170,  0.2035, -0.0977,  0.2509, -0.1010, -0.4126, -0.0740,
          0.0338,  0.1334,  0.0745, -0.1370, -0.0708,  0.0309,  0.1278,  0.3747,
         -0.1379, -0.0981,  0.4667, -0.2601, -0.2999,  0.2160,  0.1103, -0.0243,
         -0.3241,  0.2513, -0.1111, -0.4411, -0.1212, -0.0314, -0.0671,  0.0840,
          0.2141, -0.2259, -0.4451, -0.3502,  0.4139, -0.1186,  0.1238,  0.0190,
         -0.2089, -0.0355,  0.0471,  0.0772,  0.0990, -0.0797, -0.0984, -0.1107,
         -0.0278,  0.0121, -0.1086, -0.1141, -0.0181,  0.0070,  0.0845,  0.0760,
         -0.1611, -0.1190, -0.0075,  0.0109,  0.0834,  0.1618, -0.1674,  0.1156,
         -0.1844, -0.0196, -0.0542, -0.2508,  0.0401, -0.0681, -0.0630,  0.0183,
         -0.1049,  0.1867,  0.0837,  0.0736,  0.1874, -0.0819, -0.0794,  0.0098,
          0.0221,  0.0489, -0.2060,  0.1717,  0.0221, -0.0580,  0.0238, -0.0286,
         -0.1193]], device='cuda:0') tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
992000 特征值优化 tensor(0.5221, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2563e+00,  5.6596e-01, -8.8744e-01, -9.9887e-01,  2.4699e+00,
          2.0343e+00,  2.0965e+00, -2.6561e+00,  6.7505e-01,  3.7943e-01,
         -1.0534e+00,  9.1380e-01,  5.7125e-01,  3.9840e-02, -2.0193e-01,
          3.1319e-01, -1.0421e+00,  2.5437e-01,  4.5791e-01,  7.3645e-01,
          1.1162e+00,  6.2900e-02,  3.0492e-02,  1.3219e+00, -5.4849e-01,
          4.6940e-01, -2.7265e-01, -1.2662e-03, -3.3313e-01, -2.6652e-01,
          1.4181e-02,  2.4429e-01,  9.1078e-02, -5.5002e-01, -5.9719e-01,
          1.3209e-01, -4.7136e-02,  1.5799e-01, -2.4423e-01, -2.6887e-01,
         -1.7669e-01,  1.2977e-01, -4.9686e-02,  1.6098e-01,  1.1962e-01,
          1.1951e-02, -2.2478e-01,  5.9604e-02, -1.2153e-01,  3.2048e-01,
          1.5693e-02,  2.5736e-01, -2.5125e-01, -2.9377e-01, -2.1977e-01,
          1.8654e-02, -3.8559e-01, -2.7098e-01,  2.8239e-01, -1.2935e-01,
         -2.3627e-01,  4.4984e-01,  3.9360e-01, -4.4458e-01, -9.4913e-02,
         -2.0007e-01, -4.0661e-02,  1.1316e-01,  3.5670e-01, -1.7691e-01,
         -5.0070e-02, -1.3797e-01,  1.2859e-01, -3.1341e-01,  2.0669e-01,
         -1.1448e-01,  2.4856e-01, -1.2056e-01, -4.0572e-01, -6.3053e-02,
          2.7591e-02,  1.2005e-01,  8.0162e-02, -1.2738e-01, -6.9054e-02,
          3.1429e-02,  1.2053e-01,  3.5447e-01, -1.1466e-01, -7.9363e-02,
          4.6979e-01, -2.8219e-01, -2.9289e-01,  2.0739e-01,  9.9662e-02,
         -2.8541e-02, -2.9963e-01,  2.6949e-01, -1.0606e-01, -4.5655e-01,
         -1.0147e-01, -3.4873e-02, -4.0002e-02,  7.3212e-02,  2.1815e-01,
         -2.1274e-01, -4.5656e-01, -3.4563e-01,  3.9994e-01, -1.2288e-01,
          1.2260e-01,  2.1255e-02, -1.8899e-01, -3.6239e-02,  4.8203e-02,
          7.4687e-02,  1.0793e-01, -8.9590e-02, -1.0057e-01, -1.1461e-01,
         -3.3427e-02,  1.8387e-02, -1.0557e-01, -1.2448e-01, -2.5742e-02,
          3.2794e-03,  9.2773e-02,  8.2580e-02, -1.5891e-01, -1.2707e-01,
         -2.3917e-02,  1.8477e-02,  7.9793e-02,  1.6264e-01, -1.5915e-01,
          1.0791e-01, -1.8282e-01, -1.0835e-03, -3.8049e-02, -2.5456e-01,
          5.4585e-02, -7.3355e-02, -7.1598e-02,  2.0202e-02, -1.0777e-01,
          1.8049e-01,  8.0894e-02,  7.5037e-02,  1.8392e-01, -8.9988e-02,
         -7.5177e-02,  1.3978e-02,  1.7673e-02,  4.6280e-02, -2.0041e-01,
          1.7511e-01,  1.5496e-02, -5.9521e-02,  2.4943e-02, -4.1563e-02,
         -1.3491e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
993000 特征值优化 tensor(0.5212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2706e+00,  5.2699e-01, -9.0426e-01, -1.0005e+00,  2.4734e+00,
          2.0534e+00,  2.1120e+00, -2.6722e+00,  6.9463e-01,  3.7369e-01,
         -1.0713e+00,  9.3958e-01,  5.5829e-01,  1.7443e-02, -2.2442e-01,
          3.1732e-01, -1.0782e+00,  2.6705e-01,  4.4856e-01,  7.3306e-01,
          1.1285e+00,  7.0046e-02,  3.7891e-02,  1.2964e+00, -5.5253e-01,
          4.8361e-01, -2.7934e-01, -1.3519e-02, -3.6541e-01, -2.5873e-01,
          6.2678e-03,  2.2552e-01,  9.1574e-02, -5.2002e-01, -5.8436e-01,
          1.1890e-01, -3.7177e-02,  1.5102e-01, -2.4169e-01, -2.6326e-01,
         -1.7758e-01,  1.2790e-01, -5.2455e-02,  1.4094e-01,  1.1086e-01,
          4.9987e-03, -2.1303e-01,  5.0424e-02, -1.2270e-01,  3.1915e-01,
          1.0987e-02,  2.4369e-01, -2.5249e-01, -2.9712e-01, -2.4144e-01,
          2.1930e-02, -3.8290e-01, -2.6890e-01,  2.7328e-01, -1.0841e-01,
         -2.3951e-01,  4.3393e-01,  4.1192e-01, -4.3639e-01, -1.0179e-01,
         -2.1064e-01, -5.0837e-02,  9.3152e-02,  3.5028e-01, -1.8677e-01,
         -5.7490e-02, -1.4234e-01,  1.2373e-01, -3.1420e-01,  1.9788e-01,
         -1.1399e-01,  2.5092e-01, -1.1333e-01, -3.9423e-01, -6.2246e-02,
          2.6695e-02,  1.2065e-01,  7.3110e-02, -1.4139e-01, -7.8160e-02,
          3.2578e-02,  1.2809e-01,  3.2727e-01, -8.6536e-02, -5.4312e-02,
          4.5124e-01, -3.0984e-01, -2.8445e-01,  2.0498e-01,  1.0209e-01,
         -2.3810e-02, -2.6984e-01,  2.9013e-01, -8.0612e-02, -4.4278e-01,
         -9.5976e-02, -3.1795e-02, -3.4965e-02,  7.4992e-02,  2.1961e-01,
         -2.0575e-01, -4.4734e-01, -3.3801e-01,  4.2836e-01, -1.1591e-01,
          1.1077e-01,  2.4143e-02, -1.7175e-01, -3.7443e-02,  6.0635e-02,
          7.6379e-02,  1.1041e-01, -9.6750e-02, -9.1408e-02, -1.0973e-01,
         -2.9120e-02,  1.6201e-02, -1.0901e-01, -1.3999e-01, -4.8233e-02,
          3.0236e-03,  9.0294e-02,  8.3475e-02, -1.5647e-01, -1.3144e-01,
         -2.7885e-02,  2.0765e-02,  8.5847e-02,  1.6451e-01, -1.5792e-01,
          1.1706e-01, -1.9615e-01, -4.6632e-04, -1.7953e-02, -2.5863e-01,
          5.8840e-02, -6.4614e-02, -7.7294e-02,  1.3527e-02, -1.0366e-01,
          1.7443e-01,  7.7500e-02,  7.7023e-02,  1.8699e-01, -9.5882e-02,
         -7.7198e-02,  2.2430e-02,  9.7806e-03,  3.9895e-02, -1.7688e-01,
          1.7997e-01,  3.0765e-02, -5.2642e-02,  2.2051e-02, -3.7418e-02,
         -1.3873e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
994000 特征值优化 tensor(0.5202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2894e+00,  4.8847e-01, -9.1443e-01, -9.9948e-01,  2.4545e+00,
          2.0742e+00,  2.1259e+00, -2.6835e+00,  7.1231e-01,  3.6311e-01,
         -1.0641e+00,  9.4392e-01,  5.5923e-01, -3.4796e-04, -2.7521e-01,
          3.1904e-01, -1.1128e+00,  2.7960e-01,  4.4234e-01,  7.4249e-01,
          1.1336e+00,  8.2161e-02,  3.9352e-02,  1.2775e+00, -5.5526e-01,
          4.9368e-01, -3.0396e-01, -1.6465e-02, -3.8946e-01, -2.4688e-01,
         -1.0314e-03,  2.0260e-01,  6.8256e-02, -5.1254e-01, -5.8423e-01,
          1.1118e-01, -3.4028e-02,  1.4825e-01, -2.3043e-01, -2.6240e-01,
         -1.8341e-01,  1.2778e-01, -5.2236e-02,  1.3085e-01,  1.0272e-01,
         -8.6786e-03, -2.1140e-01,  6.9051e-02, -1.2212e-01,  3.0690e-01,
         -5.6083e-03,  2.3979e-01, -2.5067e-01, -2.9379e-01, -2.4646e-01,
          3.5081e-02, -3.8829e-01, -2.8083e-01,  2.8230e-01, -8.3360e-02,
         -2.5536e-01,  4.3123e-01,  4.1327e-01, -4.3444e-01, -1.1093e-01,
         -2.0563e-01, -4.9071e-02,  9.0591e-02,  3.4944e-01, -1.8900e-01,
         -6.5390e-02, -1.4605e-01,  1.2082e-01, -3.1914e-01,  1.8537e-01,
         -1.1558e-01,  2.4877e-01, -1.1238e-01, -3.7801e-01, -6.5653e-02,
          2.6127e-02,  1.1633e-01,  7.7636e-02, -1.4157e-01, -8.0089e-02,
          2.9385e-02,  1.2653e-01,  3.1649e-01, -5.9873e-02, -5.8260e-02,
          4.4180e-01, -3.2436e-01, -2.7679e-01,  1.9583e-01,  1.0146e-01,
         -2.2274e-02, -2.5955e-01,  3.0675e-01, -7.7342e-02, -4.3034e-01,
         -6.9934e-02, -3.2869e-02,  1.2027e-03,  7.6273e-02,  2.1367e-01,
         -2.1348e-01, -4.6775e-01, -3.3259e-01,  4.1295e-01, -1.1213e-01,
          1.0380e-01,  2.5328e-02, -1.6496e-01, -4.5784e-02,  6.1195e-02,
          8.0172e-02,  1.3135e-01, -9.1336e-02, -9.0779e-02, -1.0409e-01,
         -2.3787e-02,  1.8586e-02, -1.0341e-01, -1.4888e-01, -6.4464e-02,
         -2.9545e-03,  8.1452e-02,  9.2477e-02, -1.4836e-01, -1.4050e-01,
         -4.0597e-02,  2.4140e-02,  8.7757e-02,  1.7247e-01, -1.5209e-01,
          1.1107e-01, -1.9646e-01,  1.7159e-02, -1.0453e-02, -2.5878e-01,
          6.2456e-02, -5.9717e-02, -9.0453e-02,  1.8112e-03, -8.9962e-02,
          1.5562e-01,  7.6588e-02,  7.9643e-02,  1.8271e-01, -8.7607e-02,
         -7.5050e-02,  3.3653e-02,  3.7288e-03,  3.4624e-02, -1.6285e-01,
          1.7194e-01,  3.5722e-02, -5.3475e-02,  2.8862e-02, -4.0768e-02,
         -1.3745e-01]], device='cuda:0') tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
995000 特征值优化 tensor(0.5351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2989e+00,  4.5639e-01, -9.0176e-01, -1.0059e+00,  2.4510e+00,
          2.0971e+00,  2.1344e+00, -2.7068e+00,  6.9568e-01,  3.6768e-01,
         -1.0684e+00,  9.4244e-01,  5.4076e-01, -1.3424e-03, -3.0359e-01,
          3.0751e-01, -1.1446e+00,  2.8414e-01,  4.2316e-01,  7.6803e-01,
          1.1356e+00,  7.4122e-02,  4.9541e-02,  1.2689e+00, -5.4849e-01,
          5.0631e-01, -3.0031e-01, -2.1525e-02, -4.1652e-01, -2.4212e-01,
         -8.9592e-03,  1.9833e-01,  4.4190e-02, -4.8111e-01, -5.7577e-01,
          1.0792e-01, -3.5664e-02,  1.3044e-01, -2.1328e-01, -2.4452e-01,
         -1.9620e-01,  1.2339e-01, -4.8501e-02,  1.3538e-01,  9.7012e-02,
         -2.5095e-03, -2.0374e-01,  5.7154e-02, -1.3454e-01,  2.7621e-01,
         -3.0057e-02,  2.3077e-01, -2.4535e-01, -2.8230e-01, -2.5704e-01,
          5.8521e-02, -3.9204e-01, -2.9476e-01,  3.1506e-01, -6.0094e-02,
         -2.8884e-01,  4.3169e-01,  4.2050e-01, -4.2923e-01, -1.0549e-01,
         -2.1060e-01, -7.2468e-02,  7.3991e-02,  3.5107e-01, -2.0117e-01,
         -7.0424e-02, -1.4252e-01,  1.2378e-01, -3.1177e-01,  1.8035e-01,
         -9.9159e-02,  2.4780e-01, -1.0359e-01, -3.6513e-01, -6.9314e-02,
          2.5346e-02,  1.1631e-01,  7.8332e-02, -1.4389e-01, -8.4542e-02,
          3.4924e-02,  1.1628e-01,  3.1281e-01, -5.8151e-02, -1.1705e-02,
          4.3274e-01, -3.3614e-01, -2.6655e-01,  1.8037e-01,  9.6123e-02,
         -2.5903e-02, -2.4876e-01,  3.2074e-01, -6.8389e-02, -4.3459e-01,
         -5.0014e-02, -7.2712e-03,  2.4866e-02,  7.4972e-02,  1.9904e-01,
         -2.1238e-01, -4.5599e-01, -3.3181e-01,  4.1160e-01, -1.1224e-01,
          1.1416e-01,  2.2604e-02, -1.5073e-01, -5.0061e-02,  7.7302e-02,
          7.7513e-02,  1.5301e-01, -8.5591e-02, -9.5026e-02, -1.0030e-01,
         -9.0118e-03,  1.9709e-02, -1.0146e-01, -1.4851e-01, -7.8059e-02,
         -5.5251e-03,  7.8957e-02,  9.8661e-02, -1.4077e-01, -1.3822e-01,
         -5.6384e-02,  1.8565e-02,  9.4724e-02,  1.7706e-01, -1.4265e-01,
          1.3852e-01, -1.6665e-01, -8.3792e-03, -1.1406e-02, -2.4227e-01,
          3.7911e-02, -6.2312e-02, -6.4075e-02, -2.6792e-03, -8.8095e-02,
          1.4560e-01,  6.5278e-02,  8.4350e-02,  1.9398e-01, -9.3093e-02,
         -9.6051e-02,  4.1541e-02, -3.6369e-03,  3.8103e-02, -1.5491e-01,
          1.5645e-01,  3.4415e-02, -5.2846e-02,  2.5319e-02, -5.3557e-02,
         -1.2750e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
996000 特征值优化 tensor(0.5297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2635e+00,  4.3409e-01, -9.1278e-01, -1.0072e+00,  2.4732e+00,
          2.1223e+00,  2.1392e+00, -2.7268e+00,  7.0542e-01,  3.5821e-01,
         -1.0661e+00,  9.5726e-01,  5.3417e-01, -2.5713e-02, -3.1330e-01,
          3.2271e-01, -1.1609e+00,  2.7038e-01,  4.1736e-01,  7.6622e-01,
          1.1330e+00,  7.9150e-02,  4.8005e-02,  1.2455e+00, -5.4302e-01,
          5.0939e-01, -3.0306e-01, -3.0769e-02, -4.2456e-01, -2.2977e-01,
         -1.0242e-02,  1.9830e-01,  3.9986e-02, -4.9055e-01, -5.6681e-01,
          1.0132e-01, -2.1650e-02,  1.2646e-01, -2.1223e-01, -2.4446e-01,
         -1.8668e-01,  1.2598e-01, -5.1118e-02,  1.3279e-01,  8.2358e-02,
         -1.3448e-02, -1.9816e-01,  5.3168e-02, -1.5292e-01,  2.6546e-01,
         -4.0879e-02,  2.3638e-01, -2.4541e-01, -2.7123e-01, -2.5759e-01,
          7.5020e-02, -4.0052e-01, -2.9069e-01,  3.1850e-01, -3.2282e-02,
         -3.0709e-01,  4.2411e-01,  4.3002e-01, -4.1673e-01, -1.1024e-01,
         -2.0821e-01, -7.4405e-02,  7.2583e-02,  3.4924e-01, -2.0845e-01,
         -6.8568e-02, -1.4242e-01,  1.3828e-01, -3.0097e-01,  1.7845e-01,
         -1.1439e-01,  2.4700e-01, -1.0262e-01, -3.4644e-01, -7.3228e-02,
          2.0584e-02,  1.1606e-01,  8.1001e-02, -1.2714e-01, -8.6332e-02,
          4.3223e-02,  1.1362e-01,  3.0682e-01, -2.8314e-02, -1.6541e-02,
          4.3230e-01, -3.3903e-01, -2.7447e-01,  1.7031e-01,  1.0434e-01,
         -2.1626e-02, -2.4439e-01,  3.6449e-01, -4.9477e-02, -4.3169e-01,
         -4.8335e-02, -1.1509e-02,  3.7993e-02,  6.3003e-02,  1.9179e-01,
         -2.0676e-01, -4.7078e-01, -3.3455e-01,  3.9396e-01, -1.0725e-01,
          1.0780e-01,  2.9936e-02, -1.4021e-01, -5.6349e-02,  8.4355e-02,
          7.2413e-02,  1.5328e-01, -8.0204e-02, -8.3920e-02, -1.0035e-01,
         -2.6662e-03,  1.3788e-02, -1.0465e-01, -1.4905e-01, -8.7973e-02,
         -1.1268e-02,  7.6711e-02,  1.0980e-01, -1.3400e-01, -1.5061e-01,
         -5.6962e-02,  2.5018e-02,  1.0135e-01,  1.8464e-01, -1.3489e-01,
          1.4107e-01, -1.7739e-01,  1.4038e-02, -5.8469e-03, -2.3940e-01,
          4.3359e-02, -6.9081e-02, -8.9711e-02, -1.1538e-04, -8.4880e-02,
          1.4282e-01,  6.7956e-02,  8.4806e-02,  1.9362e-01, -8.4985e-02,
         -8.0169e-02,  5.7002e-02, -2.0465e-02,  5.0035e-02, -1.5466e-01,
          1.6250e-01,  3.7354e-02, -4.7053e-02,  2.9543e-02, -3.4589e-02,
         -1.3480e-01]], device='cuda:0') tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
997000 特征值优化 tensor(0.5356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2424e+00,  3.9711e-01, -9.0753e-01, -1.0042e+00,  2.4835e+00,
          2.1400e+00,  2.1280e+00, -2.7241e+00,  7.1634e-01,  3.5232e-01,
         -1.0754e+00,  9.6974e-01,  5.1890e-01, -5.1008e-02, -3.4573e-01,
          3.1471e-01, -1.1886e+00,  2.6999e-01,  4.0085e-01,  7.7211e-01,
          1.1382e+00,  7.4198e-02,  5.9017e-02,  1.2497e+00, -5.5025e-01,
          5.1959e-01, -3.0646e-01, -1.8661e-02, -4.2383e-01, -2.3310e-01,
         -1.8002e-02,  1.8336e-01,  5.2137e-02, -4.7640e-01, -5.5689e-01,
          9.4258e-02, -3.3779e-02,  1.1331e-01, -2.0993e-01, -2.2522e-01,
         -1.9916e-01,  1.2722e-01, -5.3097e-02,  1.2671e-01,  8.4601e-02,
         -1.8204e-02, -1.9008e-01,  5.7732e-02, -1.5349e-01,  2.5435e-01,
         -5.4610e-02,  2.3200e-01, -2.5450e-01, -2.6335e-01, -2.5445e-01,
          9.6367e-02, -4.0366e-01, -2.9009e-01,  3.2658e-01, -2.0508e-02,
         -3.1287e-01,  4.0907e-01,  4.3335e-01, -4.1845e-01, -1.0878e-01,
         -2.0359e-01, -7.5572e-02,  5.6784e-02,  3.4114e-01, -2.1154e-01,
         -6.9104e-02, -1.4158e-01,  1.3427e-01, -2.9737e-01,  1.7969e-01,
         -1.1943e-01,  2.4885e-01, -1.1091e-01, -3.4448e-01, -6.8630e-02,
          1.9916e-02,  1.0983e-01,  1.0029e-01, -1.5029e-01, -8.8996e-02,
          3.8413e-02,  1.0963e-01,  3.1315e-01, -1.5065e-02,  9.8678e-03,
          4.3020e-01, -3.4671e-01, -2.6955e-01,  1.7002e-01,  9.8184e-02,
         -2.1951e-02, -2.4290e-01,  3.9900e-01, -4.4574e-02, -4.3603e-01,
         -2.5372e-02, -9.0830e-03,  5.5863e-02,  5.5846e-02,  1.9910e-01,
         -2.0607e-01, -4.8236e-01, -3.3545e-01,  3.9063e-01, -1.0060e-01,
          1.0431e-01,  3.7307e-02, -1.3739e-01, -7.1885e-02,  9.0675e-02,
          6.8081e-02,  1.6092e-01, -8.0638e-02, -8.0636e-02, -9.0959e-02,
          6.8273e-03, -1.4565e-02, -9.6909e-02, -1.4671e-01, -9.1899e-02,
         -2.3006e-03,  7.5898e-02,  1.1208e-01, -1.2761e-01, -1.4997e-01,
         -6.8730e-02,  2.1250e-02,  1.0355e-01,  1.8166e-01, -1.3478e-01,
          1.4069e-01, -1.6081e-01,  8.3664e-03, -2.2228e-03, -2.3637e-01,
          4.3571e-02, -7.6653e-02, -8.9550e-02,  1.1464e-02, -8.4876e-02,
          1.1693e-01,  7.3035e-02,  8.2073e-02,  2.0475e-01, -8.8467e-02,
         -9.1546e-02,  5.0066e-02, -3.7096e-02,  4.7276e-02, -1.4884e-01,
          1.5347e-01,  3.5670e-02, -5.5642e-02,  3.6772e-02, -5.2194e-02,
         -1.2735e-01]], device='cuda:0') tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
998000 特征值优化 tensor(0.5142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2603e+00,  3.8117e-01, -9.1060e-01, -9.9876e-01,  2.5314e+00,
          2.1484e+00,  2.1145e+00, -2.7241e+00,  7.1303e-01,  3.4175e-01,
         -1.1174e+00,  9.8159e-01,  4.9353e-01, -9.0704e-02, -3.7116e-01,
          3.0844e-01, -1.2158e+00,  2.6609e-01,  3.8478e-01,  7.6432e-01,
          1.1530e+00,  5.2659e-02,  7.5193e-02,  1.2500e+00, -5.2880e-01,
          5.1004e-01, -3.0416e-01, -2.4192e-02, -4.2627e-01, -2.3619e-01,
         -3.8734e-02,  1.7253e-01,  5.3188e-02, -4.5915e-01, -5.5409e-01,
          8.8521e-02, -3.9356e-02,  1.0773e-01, -2.2377e-01, -2.1349e-01,
         -1.9305e-01,  1.2608e-01, -5.4816e-02,  1.2899e-01,  8.9472e-02,
         -2.3799e-02, -1.7456e-01,  7.3423e-02, -1.6524e-01,  2.5376e-01,
         -6.5230e-02,  2.1603e-01, -2.5311e-01, -2.5745e-01, -2.4833e-01,
          1.3976e-01, -4.1314e-01, -2.9942e-01,  3.1173e-01,  5.5178e-03,
         -3.4831e-01,  3.7682e-01,  4.5426e-01, -4.0986e-01, -9.9733e-02,
         -1.8979e-01, -8.9820e-02,  3.2435e-02,  3.2399e-01, -2.1041e-01,
         -5.7311e-02, -1.4206e-01,  1.3339e-01, -2.8531e-01,  1.7902e-01,
         -1.2320e-01,  2.5457e-01, -9.3440e-02, -3.1144e-01, -6.3428e-02,
          2.8729e-02,  1.1707e-01,  1.0924e-01, -1.3934e-01, -9.7776e-02,
          4.6671e-02,  9.0194e-02,  3.0593e-01,  2.6193e-02,  3.3008e-02,
          4.3660e-01, -3.4586e-01, -2.8028e-01,  1.7359e-01,  1.0034e-01,
         -2.1425e-02, -2.5431e-01,  4.3011e-01, -6.0675e-02, -4.7013e-01,
         -2.1486e-02,  9.3449e-03,  5.0083e-02,  4.2159e-02,  1.8011e-01,
         -2.0214e-01, -5.0040e-01, -3.5488e-01,  3.8555e-01, -8.7363e-02,
          1.0667e-01,  3.6227e-02, -1.3724e-01, -8.9238e-02,  1.0000e-01,
          6.5937e-02,  1.7144e-01, -5.9459e-02, -9.0181e-02, -8.7127e-02,
          3.0631e-02, -4.9917e-02, -9.5187e-02, -1.4888e-01, -9.7199e-02,
         -6.9707e-04,  6.8255e-02,  1.1162e-01, -1.2323e-01, -1.5460e-01,
         -7.5485e-02,  2.5975e-02,  1.1286e-01,  1.8441e-01, -1.3563e-01,
          1.3618e-01, -1.5216e-01,  1.6059e-02, -1.1845e-02, -2.3979e-01,
          4.6279e-02, -8.1172e-02, -8.8081e-02,  3.2405e-02, -7.9415e-02,
          1.2055e-01,  8.2792e-02,  9.6811e-02,  2.2189e-01, -7.9434e-02,
         -8.7571e-02,  6.9062e-02, -5.5642e-02,  6.0010e-02, -1.4535e-01,
          1.4748e-01,  3.8040e-02, -4.9765e-02,  4.7659e-02, -5.3977e-02,
         -1.1946e-01]], device='cuda:0') tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
999000 特征值优化 tensor(0.5290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2133,  0.3592, -0.9101, -1.0079,  2.5653,  2.1355,  2.0845, -2.6914,
          0.7068,  0.3274, -1.1415,  0.9954,  0.4924, -0.1120, -0.3885,  0.3135,
         -1.2257,  0.2579,  0.3700,  0.7834,  1.1774,  0.0529,  0.0874,  1.2484,
         -0.5083,  0.5139, -0.3167, -0.0118, -0.4117, -0.2315, -0.0419,  0.1643,
          0.0560, -0.4277, -0.5375,  0.0829, -0.0354,  0.1142, -0.2414, -0.2100,
         -0.1758,  0.1258, -0.0525,  0.1191,  0.0859, -0.0098, -0.1644,  0.0658,
         -0.1665,  0.2513, -0.0723,  0.2133, -0.2744, -0.2393, -0.2373,  0.1577,
         -0.4195, -0.2930,  0.3111,  0.0143, -0.3719,  0.3474,  0.4627, -0.3989,
         -0.1160, -0.2016, -0.0873,  0.0148,  0.3149, -0.2184, -0.0567, -0.1318,
          0.1313, -0.2848,  0.1909, -0.1359,  0.2520, -0.0964, -0.3085, -0.0637,
          0.0324,  0.1102,  0.1182, -0.1506, -0.0904,  0.0258,  0.0940,  0.3069,
          0.0492,  0.0464,  0.4420, -0.3484, -0.2883,  0.1909,  0.0957, -0.0212,
         -0.2436,  0.4401, -0.0607, -0.4771, -0.0319,  0.0413,  0.0633,  0.0181,
          0.1838, -0.1827, -0.5326, -0.3925,  0.3955, -0.0777,  0.0993,  0.0250,
         -0.1191, -0.0921,  0.1063,  0.0744,  0.1726, -0.0638, -0.0780, -0.0969,
          0.0303, -0.0659, -0.0921, -0.1554, -0.1026,  0.0082,  0.0746,  0.1249,
         -0.1206, -0.1511, -0.0888,  0.0207,  0.1053,  0.1675, -0.1292,  0.1316,
         -0.1502,  0.0125, -0.0032, -0.2309,  0.0469, -0.1033, -0.0957,  0.0448,
         -0.0762,  0.1054,  0.0980,  0.0962,  0.2183, -0.0788, -0.0748,  0.0635,
         -0.0611,  0.0444, -0.1398,  0.1596,  0.0330, -0.0447,  0.0529, -0.0672,
         -0.1141]], device='cuda:0') tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
完成共1000000轮迭代 推荐参数如下：
收敛loss为： ('超出最大迭代次数', tensor(0.4536))
tensor([[-3.4141e-01, -3.6395e-01, -3.2326e-01, -9.8754e-01,  3.5121e+00,
          1.8161e+00,  2.8695e+00,  2.2321e+00,  1.7459e+00,  2.2457e-01,
          1.2153e-01, -6.8914e-01, -5.2931e-01, -1.1792e-01, -6.1443e-01,
         -1.3743e+00, -2.9683e-01, -1.3615e-01,  1.9544e-01,  1.5776e-01,
         -4.9286e-01,  6.2216e-01,  2.8269e-01,  2.6149e-01,  1.8308e-01,
          4.8191e-01,  3.3687e-01,  5.8695e-01,  5.1801e-01,  6.5910e-02,
          1.4011e-01,  7.9239e-02,  6.4352e-02, -6.8873e-02,  2.2196e-01,
          8.9300e-02,  1.2144e-01, -1.5180e-01, -2.7291e-02, -3.4282e-02,
          1.2918e-02,  1.2216e-01, -5.5869e-02,  9.1584e-02, -2.4645e-01,
         -3.6281e-02,  2.2568e-02,  2.1202e-01, -4.6942e-01, -2.1657e-01,
         -2.1763e-01, -4.4359e-01,  1.3273e-01, -2.0736e-01,  2.5712e-01,
          4.8058e-01, -2.4119e-02,  5.2736e-01,  4.2940e-02,  1.4925e-01,
         -5.0637e-01, -5.1206e-01, -3.7882e-01, -3.9589e-02, -2.4259e-01,
          1.7284e-01, -5.2552e-02,  4.0189e-01, -2.4164e-01,  5.0713e-02,
         -2.5549e-01,  1.1871e-01, -6.7892e-02,  2.9673e-01, -2.0190e-01,
          2.4884e-01,  9.2000e-02, -1.1552e-01,  4.1556e-01, -1.2630e-01,
          3.0171e-01, -1.4835e-01,  1.5910e-01,  1.4057e-01, -1.9789e-01,
          1.4269e-01, -6.1814e-02,  1.7000e-01,  2.0232e-01,  2.5140e-01,
          9.2943e-02, -3.4820e-01, -1.9246e-01,  5.6643e-02,  1.3554e-01,
         -1.8428e-01,  1.9675e-01,  4.1858e-01, -3.5563e-01, -2.5951e-01,
         -2.3341e-01,  1.9227e-01,  2.7531e-01,  1.3716e-01, -1.6028e-01,
          2.5653e-01,  1.0932e-01, -1.0780e-01, -8.1162e-03,  3.9915e-03,
          4.4275e-02, -2.3559e-02,  9.0771e-02,  9.9135e-02, -3.5238e-02,
         -1.5325e-04,  1.3678e-01,  9.3695e-02,  2.0865e-02,  8.5790e-02,
          1.0659e-02, -7.5587e-02,  1.7541e-01,  1.0738e-01,  9.5176e-02,
          1.5579e-01,  2.7263e-02, -2.2036e-01, -1.3465e-01, -1.1382e-02,
          1.3949e-01,  1.5750e-01,  8.9129e-02, -1.6679e-01, -2.2946e-02,
         -2.5398e-02,  1.2019e-01, -1.0596e-01,  6.2531e-02,  1.3210e-01,
          1.2118e-02, -8.9233e-02, -2.1912e-01, -3.4786e-02, -1.6812e-01,
          2.1452e-01, -1.8656e-01, -2.2262e-02, -8.9476e-02, -1.0516e-01,
          1.5691e-01,  1.4165e-02,  1.7324e-01,  1.7145e-01, -7.9760e-02,
          2.9197e-02,  1.7409e-02,  1.0379e-01,  6.2719e-02,  5.0705e-02,
          2.1645e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.4850))
tensor([[ 1.6066e-01,  1.6641e-01, -1.0553e+00, -1.0163e+00,  2.8243e+00,
          3.8299e+00,  7.5200e-01, -1.7428e+00,  4.5063e-02, -5.4041e-01,
          6.2090e-01, -7.8920e-01, -5.6073e-02, -8.6814e-02,  5.2542e-01,
          1.1207e+00, -4.8284e-01,  6.4383e-01,  6.5532e-01,  1.0509e+00,
         -6.8545e-03, -1.4211e-02, -1.7374e-01, -9.7398e-02, -5.8699e-01,
          9.4288e-01,  7.4756e-01,  4.8501e-01, -2.1862e-01,  2.6999e-01,
          2.4624e-01,  1.5688e-02, -5.4263e-02, -1.5210e-01,  3.2748e-01,
          2.8499e-01,  2.0746e-01, -8.0225e-02,  3.3470e-01, -1.9983e-01,
          2.5866e-01,  3.7051e-02, -1.2847e-01,  3.4903e-02, -4.4175e-01,
         -5.3494e-03,  3.2639e-01,  1.7027e-01, -2.8383e-01,  8.0285e-02,
         -2.6710e-01, -8.9071e-01,  1.6093e-01, -1.5662e-01, -9.0462e-02,
         -4.6106e-01,  3.3492e-01,  3.0886e-02, -2.4773e-01,  7.4145e-02,
          4.2284e-01,  1.6513e-01, -4.8877e-01,  1.1986e-01, -4.6308e-02,
          1.1184e-01,  6.1313e-02, -2.7138e-01,  2.9386e-01, -2.1894e-01,
          2.0396e-02, -1.7125e-01, -5.0138e-02, -1.1401e-01,  3.9117e-01,
         -1.7297e-01, -1.7051e-01,  1.0801e-01, -4.6251e-02,  1.4114e-01,
         -1.1481e-01, -1.4991e-01, -1.7457e-02, -3.3948e-02,  4.1379e-01,
         -1.4405e-01, -1.2615e-01,  8.6573e-02,  2.4374e-01,  4.7491e-02,
          1.4346e-01, -4.2160e-01,  9.9535e-02,  1.4677e-01,  5.8899e-02,
         -5.1748e-02,  2.9245e-01,  2.6438e-02,  4.6631e-02,  1.2630e-01,
          1.3063e-01,  3.0627e-01, -5.7350e-02,  2.0106e-01,  2.8828e-01,
         -1.2598e-01, -4.6599e-01, -1.1933e-01, -1.2271e-01,  1.5145e-01,
          2.0646e-02,  5.3301e-02, -1.1049e-01,  5.6665e-02,  9.4347e-02,
          8.0626e-02,  8.8805e-02, -3.1692e-02, -1.1151e-02, -8.4173e-02,
          1.8759e-01,  1.3866e-01,  2.4610e-01,  6.5762e-02, -1.1852e-01,
         -1.4113e-01,  1.5464e-01,  5.0233e-02, -1.9187e-01, -6.7678e-03,
         -1.5186e-01,  2.2609e-03,  6.2410e-02, -1.4769e-01,  5.0479e-02,
          1.3760e-02,  7.0189e-02, -8.5869e-02, -1.0387e-01,  2.3807e-01,
          1.8645e-01, -7.1923e-02, -1.3166e-01, -1.1986e-01, -2.7217e-02,
          1.2117e-01,  6.2069e-02, -1.3994e-01, -1.0279e-01,  1.6728e-02,
          1.6251e-01,  1.3351e-01, -2.3973e-02,  1.3566e-01, -1.2934e-01,
         -2.9543e-02, -6.5553e-03, -9.6404e-02,  5.8474e-02,  2.1138e-02,
          9.2106e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.5114))
tensor([[ 3.3919,  2.6005, -0.3926, -0.9922, -0.2638,  1.3373, -0.1039,  1.6783,
         -0.6885,  0.2332,  0.5492, -0.2004,  0.3833, -0.9673, -0.4123,  0.0126,
         -0.2867, -0.2233, -0.0933, -1.4402,  1.3280,  0.6400, -0.3716, -0.0841,
         -0.0121, -0.1070, -0.5546,  0.4277,  0.1527, -0.1701, -0.2367,  0.3017,
          0.4082,  0.4824, -1.0294, -0.1318,  0.6444, -0.1054,  0.5777,  0.3940,
          0.4325, -0.0247,  0.0711,  0.1239, -0.0146,  0.3662,  0.0812,  0.1185,
          0.2298,  0.8762,  0.0226,  0.0261,  0.3902, -0.2802,  0.0092, -0.6665,
          0.0342,  0.4069,  0.3698,  0.1430,  0.0816, -0.4131,  0.1839, -0.1353,
         -0.1320,  0.3995, -0.0476, -0.0976,  0.2272, -0.0793,  0.0577, -0.1751,
         -0.2758, -0.0355, -0.1831, -0.0225, -0.1124, -0.1590, -0.1363,  0.1061,
          0.0928,  0.1197, -0.1077, -0.1298, -0.0803,  0.1242, -0.0562,  0.4151,
          0.1705, -0.1930,  0.1259,  0.0716, -0.0448, -0.4004,  0.0885, -0.3080,
         -0.0517, -0.1730,  0.0680, -0.3073, -0.0999, -0.2055,  0.1830,  0.0826,
          0.1546, -0.1367, -0.5519,  0.3203, -0.1628,  0.1486, -0.1760,  0.0265,
          0.1735,  0.1105, -0.1223, -0.1434,  0.1844,  0.0328, -0.0797, -0.0167,
         -0.0677, -0.1244, -0.0305,  0.0929, -0.0622,  0.1320, -0.0402,  0.1042,
          0.0776,  0.0297, -0.0809, -0.0537,  0.1912, -0.3274, -0.0139,  0.0305,
         -0.2363,  0.1311, -0.1470,  0.1511, -0.0832,  0.0709,  0.0272, -0.0262,
          0.1353,  0.2923, -0.0888,  0.0502, -0.0239,  0.0173, -0.1293,  0.0174,
         -0.0772, -0.1992,  0.1173,  0.0424,  0.0236,  0.1982,  0.2268,  0.0666,
         -0.0137]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.5217))
tensor([[ 0.1980,  1.7170, -0.6570, -1.0745,  2.1498,  1.0208, -1.7863, -1.7714,
          1.1241, -0.1923, -0.2366, -0.7495, -0.0916,  0.8867,  0.5451, -1.0454,
          0.4350, -0.1382,  1.0283, -1.3649, -0.6414,  0.1088, -0.0203,  0.7712,
          0.9800, -0.7081,  0.2883,  0.5285,  0.1898,  0.2271, -0.0756,  0.2630,
         -0.2685, -0.1996,  0.5722, -0.2632,  0.6097, -0.3538,  0.0500, -0.0280,
         -0.2385,  0.0458,  0.0476,  0.0329, -0.3718, -0.2391, -0.0833, -0.4212,
          0.2402,  0.2195,  0.1303,  0.2488, -0.0523, -0.0143, -0.1485, -0.1387,
         -0.2665, -0.3203, -0.7677,  0.1432, -0.1693, -0.0374, -0.1180,  0.0160,
         -0.0258, -0.0887, -0.1021,  0.0197, -0.1966, -0.1010,  0.2017,  0.0654,
         -0.0331,  0.0653,  0.0538,  0.3863, -0.0963,  0.0872, -0.2238,  0.1399,
         -0.1036, -0.1601, -0.1449, -0.1999, -0.0029,  0.1548,  0.3381, -0.4467,
          0.2635, -0.5102,  0.0834, -0.1941, -0.2211, -0.1683,  0.0056,  0.0419,
          0.9413,  0.4976,  0.0322,  0.4869, -0.3982, -0.5246,  0.3108, -0.0658,
          0.0511, -0.4524, -0.0437,  0.6018, -0.5647, -0.0278,  0.0472, -0.1171,
         -0.0736,  0.0175, -0.0566, -0.0079,  0.0936, -0.0099, -0.0078, -0.0759,
          0.0458,  0.1381, -0.3192,  0.0916, -0.1073,  0.0595,  0.1681,  0.0528,
         -0.1509,  0.0659,  0.0189,  0.1025,  0.0677, -0.0988, -0.0216,  0.1106,
         -0.0024, -0.0068, -0.1056, -0.2464, -0.0563,  0.0844, -0.2549, -0.0627,
          0.0519, -0.0094,  0.2126, -0.0632,  0.0623,  0.2450,  0.0600,  0.0100,
         -0.0380,  0.0530, -0.2004,  0.0784,  0.0214, -0.2632, -0.0300,  0.0687,
          0.1023]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.5790))
tensor([[-1.6710e+00,  5.5779e-01, -1.2094e+00, -1.0621e+00,  3.3857e+00,
          2.7423e+00,  2.6794e+00,  2.7257e+00,  1.3168e+00,  1.3918e-01,
          5.0557e-02, -6.2668e-01,  3.1785e-01, -4.1147e-01, -1.9396e-02,
          1.4103e+00,  1.9678e-01,  5.5441e-01,  1.4358e-01,  7.6271e-01,
          3.1965e-01, -4.7027e-02,  2.4534e-01, -1.1163e-02,  7.3927e-01,
         -5.5162e-02, -5.6650e-01,  3.6545e-01,  1.6579e-02,  3.0034e-01,
         -2.9748e-01, -1.5736e-01,  1.8673e-01, -3.5142e-02,  5.7341e-01,
          3.3243e-01,  5.7812e-01,  2.2772e-01, -9.7706e-02,  1.7824e-01,
         -8.0284e-02,  5.6541e-02,  1.9166e-02, -7.1056e-02, -4.0913e-01,
         -9.5907e-02, -2.1815e-01,  3.0163e-01, -2.5783e-01, -5.1467e-01,
         -6.6906e-02, -1.6971e-01,  1.8260e-02, -3.6468e-01,  9.7330e-02,
         -3.6311e-01, -3.3522e-02,  1.0576e-01,  1.9179e-02, -2.7523e-01,
          2.3221e-01, -4.4512e-01, -1.3414e-01, -6.8927e-02, -3.6598e-02,
         -1.4475e-01, -1.6632e-01, -1.1885e-01, -6.9162e-02,  8.1659e-02,
          7.3437e-02, -2.2196e-01,  1.9327e-01,  1.3236e-01,  2.4470e-01,
         -3.4187e-01,  1.3052e-01,  1.7347e-01,  1.6371e-01,  2.7097e-01,
         -6.7573e-02,  8.4496e-02,  1.6180e-01, -3.6291e-01, -2.0876e-01,
          1.1772e-01, -2.9354e-01,  1.5088e-01, -3.3793e-01, -6.7166e-02,
         -4.0260e-02, -4.6383e-01, -1.8314e-01,  3.8008e-02, -2.3849e-01,
         -5.1052e-02,  3.8973e-01, -2.1132e-01, -2.9831e-01,  1.6538e-01,
         -4.9154e-02, -1.2745e-01,  8.0527e-01, -8.1268e-02,  2.0971e-01,
          3.2830e-01, -2.3530e-01,  3.7402e-01, -4.8619e-01,  1.1888e-03,
          2.4056e-02,  1.3123e-01,  4.9866e-02, -2.6524e-02, -6.5920e-02,
          9.1525e-02,  7.2213e-02,  1.7857e-02,  1.9018e-02, -9.4334e-02,
         -5.1760e-02, -1.2528e-01,  1.7400e-02,  1.0166e-01, -1.8297e-03,
         -1.3890e-01, -8.3230e-02, -1.9993e-01, -4.2103e-02,  2.4067e-02,
          8.4056e-02, -1.4509e-02, -5.6886e-02, -6.7905e-02, -9.6731e-02,
         -8.4977e-02,  1.2479e-01, -5.9419e-02,  7.1164e-02, -1.9013e-01,
          3.5375e-04,  1.4590e-01, -2.4218e-01, -1.2982e-01, -9.9941e-02,
         -1.3581e-01, -1.4827e-01,  1.9271e-01,  2.4674e-02,  1.0604e-01,
         -1.4080e-01,  1.6255e-01,  6.9315e-03, -2.1205e-01, -1.5661e-01,
          9.1172e-02,  3.6979e-02,  1.5867e-01, -5.8765e-02,  8.7265e-02,
         -5.5305e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8068))
tensor([[ 2.6842e+00, -1.2503e-01, -1.3692e+00, -4.4255e-01,  2.3210e+00,
          2.2666e+00,  1.8110e-01, -2.1602e+00,  1.3477e+00,  6.7465e-01,
         -5.2356e-01, -3.1494e-01, -8.0780e-01, -7.2905e-01,  9.8311e-02,
          3.4611e-01,  6.1873e-01,  9.3991e-01, -4.6975e-01, -4.1347e-02,
          9.5951e-01,  4.0423e-01, -6.2121e-01,  1.0740e+00, -4.4003e-01,
         -2.1623e-01, -3.6840e-01, -1.0285e-01, -2.8764e-01,  2.5968e-01,
         -1.9787e-01,  6.1603e-02, -2.5739e-01,  1.8164e-01,  1.2236e-01,
          1.2365e-01, -1.6743e-01,  2.0747e-01, -3.4967e-01, -1.6836e-01,
         -2.1195e-01,  3.4432e-02,  3.9817e-02, -7.4705e-02, -2.9059e-01,
          2.0356e-01, -1.4813e-02, -2.1216e-01, -4.5224e-02, -4.1407e-02,
         -4.9414e-01,  1.1474e-01,  3.8847e-01,  2.7941e-01, -2.2845e-01,
          6.5257e-01,  5.6069e-02, -3.8040e-01, -1.2320e-01,  3.3793e-01,
         -5.4752e-01,  2.2771e-01,  2.2588e-01, -3.2850e-02,  8.7719e-02,
          5.7050e-02, -6.1213e-02,  2.0798e-01, -2.4322e-01, -7.9927e-02,
         -3.3655e-01,  2.4236e-02, -1.2595e-01,  5.7135e-02,  2.4777e-02,
         -2.3560e-03, -4.1379e-01, -4.6494e-02,  2.5541e-01, -7.9427e-02,
          1.1145e-01,  1.1286e-01,  6.4173e-02,  1.4019e-01, -6.6122e-02,
         -4.2421e-02, -4.0826e-01, -7.6081e-01, -2.8350e-01, -1.3482e-01,
          1.8930e-01,  7.7269e-02, -1.4799e-01,  2.9406e-01,  5.7702e-02,
         -1.3154e-01,  7.8666e-01,  3.1112e-01, -4.2824e-01,  2.3152e-01,
         -5.4217e-02,  4.1847e-02,  3.9667e-01,  2.8905e-01,  9.1102e-02,
         -4.5774e-01, -3.9460e-01, -1.5690e-01, -1.0129e-01, -1.8943e-01,
          1.0982e-01,  6.7966e-02,  2.0661e-01,  1.4225e-01,  1.9476e-01,
         -1.8757e-01,  8.9150e-02,  1.6392e-01, -1.0173e-01, -2.8427e-01,
          2.0753e-02, -1.9585e-01, -2.5016e-01,  2.3724e-01,  8.7281e-02,
          1.3279e-02, -5.9844e-04, -2.4100e-01,  1.1796e-01, -8.9833e-02,
          8.5397e-03, -1.4398e-02,  5.4963e-02,  1.2323e-02,  1.8096e-01,
          1.3739e-01, -1.2429e-01, -9.1676e-02, -9.4395e-02, -1.0624e-01,
          3.1166e-02, -1.8565e-01, -1.6530e-01, -9.0512e-02,  1.9002e-01,
          3.0075e-01,  9.7736e-02, -5.0874e-04,  1.6550e-01, -1.0383e-01,
         -1.0690e-02, -2.1597e-01, -5.2801e-02, -5.1572e-02,  2.0389e-02,
          1.4689e-01, -5.2018e-02, -5.8966e-02,  6.2127e-03, -5.6040e-02,
          5.9634e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8109))
tensor([[ 1.9456e-01, -3.5426e-01,  5.9100e-01, -1.0021e+00,  1.4982e+00,
          2.0912e+00,  1.5507e+00, -1.8052e+00,  1.0453e+00,  1.3853e-01,
         -4.6060e-01,  4.2973e-01,  1.8327e-01,  8.5908e-01, -1.2388e-01,
         -7.2480e-01, -5.2021e-01,  4.0483e-01, -1.1835e-01,  2.7393e-01,
         -7.5080e-01,  3.5228e-01,  2.8410e-01, -7.0826e-01, -7.3669e-01,
         -8.3372e-01,  4.5652e-01, -5.4419e-01,  8.9563e-01,  2.4896e-01,
          7.7305e-02, -1.8213e-01,  2.8974e-01,  2.0547e-01,  5.7295e-02,
         -8.4294e-02, -4.8965e-02,  1.8397e-01, -2.0677e-02,  9.4060e-02,
         -3.0751e-01,  1.4075e-01, -8.0691e-02,  5.6275e-01, -4.1003e-01,
         -4.1268e-01, -6.4071e-02,  1.9466e-01,  2.3057e-01, -6.4457e-02,
          4.4218e-01, -5.1554e-01, -3.4398e-02, -1.1175e-01, -4.6796e-01,
         -7.0485e-01,  6.0065e-02, -3.5192e-01,  4.7568e-02, -3.4889e-01,
          5.9938e-01,  1.4848e-01,  1.2803e-01,  1.7895e-01, -7.5896e-03,
          2.5250e-01, -1.4973e-01,  7.5091e-02,  1.1862e-01,  1.4036e-01,
          1.3090e-01,  3.7580e-03, -3.3774e-04,  2.7712e-01,  1.7600e-01,
          7.0575e-02, -3.2777e-01, -3.1734e-01, -1.9523e-01,  1.0354e-01,
         -2.9206e-02, -1.0817e-01,  2.6439e-02, -1.1285e-01, -3.1606e-02,
         -1.0432e-01,  2.1697e-01, -3.2490e-01,  1.5899e-01, -2.1550e-02,
          3.2676e-02,  3.4230e-02,  1.1673e-01, -5.5664e-03,  1.8349e-01,
         -4.5605e-01,  9.0816e-01,  8.9350e-01,  3.9280e-02,  2.7553e-02,
          6.7089e-02,  4.6799e-01, -7.2775e-01,  4.4937e-01,  2.4625e-01,
         -4.5623e-02,  2.2065e-01, -4.5910e-02,  3.1971e-01, -6.7416e-02,
         -4.3797e-02,  9.9243e-02, -4.8465e-04,  2.3325e-02,  2.3972e-02,
         -2.1956e-02, -2.6562e-02, -1.1937e-02, -7.6167e-02,  6.5264e-03,
          1.6429e-01,  1.8613e-01,  2.1192e-01,  1.1389e-01, -7.1640e-02,
         -1.1079e-01, -5.4987e-02, -2.4835e-02, -1.4737e-02,  4.2955e-02,
         -6.2545e-02, -2.1525e-02, -5.3155e-02,  3.2927e-03,  9.5434e-02,
          2.8869e-02,  1.0990e-01, -8.9141e-02,  2.1131e-01,  2.3436e-01,
          6.3525e-02,  8.9334e-02, -1.0354e-01, -4.0432e-02,  7.8538e-02,
         -2.5802e-01, -8.5956e-02, -8.0101e-02,  2.1219e-02,  6.3729e-02,
          1.8087e-02,  6.9021e-02,  2.7567e-01, -1.3826e-01,  2.7903e-01,
          3.5485e-01, -6.5055e-02,  5.3800e-02, -5.5075e-02, -1.8245e-01,
          1.1523e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8189))
tensor([[ 2.4794,  0.7238, -1.1687, -1.0085,  1.2829,  1.4018, -1.0528,  1.9923,
          1.6762,  0.5482,  0.3459,  0.2582,  1.3448,  0.3883, -0.2220, -0.1063,
          0.9960,  0.2549, -0.5580, -1.1666, -0.2147,  0.1549,  0.5624,  1.6847,
         -0.7574, -0.0424,  0.1025, -0.0093,  0.0302,  0.0474, -0.1565, -0.0449,
          0.1838,  0.1502, -0.4067, -0.0917, -0.2302, -0.2926, -0.0464,  0.0866,
          0.1349,  0.0463, -0.0082,  0.2060, -0.2914, -0.1906,  0.0879, -0.0947,
         -0.4896,  0.1631, -0.1035,  0.4129, -0.0589,  0.1396,  0.4186,  0.4429,
         -0.1069,  0.3778,  0.1227,  0.3829, -0.2597, -0.3693,  0.1627, -0.1053,
         -0.0238,  0.3643,  0.1693,  0.0661, -0.2501,  0.3423,  0.2370,  0.0224,
          0.1245,  0.2432, -0.0189,  0.3338,  0.2437,  0.0153, -0.2652, -0.0660,
         -0.1450,  0.0371,  0.1004,  0.0180, -0.0410,  0.2787, -0.0974, -0.1212,
         -0.0720, -0.4370,  0.3118,  0.4532,  0.1763,  0.0102, -0.0962, -0.0852,
          0.5530,  0.0316,  0.5959,  0.1223,  0.1197, -0.0997, -0.1936,  0.2215,
         -0.3221, -0.1221, -0.1660, -0.0702, -0.2650,  0.1093, -0.1292,  0.1187,
         -0.1450,  0.0564, -0.1818,  0.0806, -0.0450,  0.1564,  0.2659,  0.1691,
         -0.2095, -0.0878, -0.3115, -0.1161, -0.2781,  0.0894,  0.0504, -0.1678,
          0.1745,  0.1375, -0.0193, -0.0304,  0.1173, -0.1374, -0.0325,  0.1153,
         -0.0131, -0.0296,  0.0552, -0.1197,  0.1362, -0.1247,  0.0647, -0.0080,
         -0.0368,  0.0789, -0.1647,  0.1127,  0.0797, -0.0257,  0.0471, -0.2089,
          0.0532,  0.1399,  0.2271, -0.0887,  0.0223, -0.1787,  0.1018, -0.0285,
         -0.1530]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8647))
tensor([[-5.2646e-01, -9.5381e-01,  1.0444e+00, -1.0096e+00,  1.4999e+00,
          3.4527e+00, -9.2626e-01, -1.0917e+00,  2.2027e-02,  7.4133e-02,
          3.7687e-01,  2.2714e-01,  1.9839e-01, -6.1165e-01, -1.9548e-01,
          5.5921e-03,  4.3511e-02, -4.4943e-01, -8.4164e-02,  9.2638e-02,
         -1.4312e-01, -2.9084e-01,  5.5376e-02, -5.4368e-02,  1.0890e-01,
         -9.5881e-01,  2.0451e-01,  3.7165e-02, -2.0987e-01, -7.0360e-02,
          1.0858e-01, -3.3160e-02, -1.1627e-01,  1.8310e-01,  2.6738e-02,
         -2.7579e-02, -1.1921e-02,  1.6744e-02, -2.6600e-01,  5.5879e-02,
          5.5613e-02,  2.1580e-01,  4.3212e-05,  4.7233e-01, -2.2903e-01,
          2.0147e-02,  2.2106e-01, -9.6455e-02,  2.1480e-01, -2.7557e-01,
          5.6281e-02,  2.4324e-01, -1.6592e-01,  4.9062e-01, -3.1869e-02,
         -5.0372e-01, -4.5788e-01, -1.6667e-01,  3.6284e-01, -1.0281e-01,
          7.4091e-01,  2.9678e-01, -3.1289e-02, -7.8013e-02, -1.1291e-01,
         -1.3742e-01,  1.5778e-01, -2.3210e-02, -6.0304e-01, -4.0483e-01,
         -1.6351e-02,  9.0602e-02,  7.6790e-03, -4.1027e-01,  9.6340e-02,
          1.5669e-01,  2.4657e-01, -5.7042e-01,  5.2769e-02,  3.7872e-01,
          2.8962e-01,  8.1632e-02, -2.3723e-01, -2.1137e-01, -2.9237e-01,
         -1.6700e-01,  1.0738e-02,  6.3494e-02, -1.8477e-01, -1.9831e-01,
          1.0492e-01, -3.3039e-01, -3.7163e-01,  3.9494e-01,  9.0912e-02,
         -7.3957e-01,  9.6526e-01,  3.4924e-02, -1.4286e-01, -5.7040e-01,
          6.5072e-02,  2.1656e-01,  3.2841e-01, -4.1631e-01, -4.4106e-01,
          2.4008e-02,  4.6117e-01,  2.0674e-01, -2.5966e-01, -8.6173e-02,
         -5.9873e-02, -1.1554e-02,  1.7085e-02, -1.1911e-01, -4.7906e-02,
          8.3298e-02, -1.2674e-02, -4.5389e-02,  2.2128e-01,  2.0827e-01,
          1.2400e-01,  1.7742e-02, -6.5721e-02,  5.3815e-02,  3.1526e-02,
          2.8565e-02, -5.6225e-02, -5.6998e-02,  2.0193e-02,  4.3048e-02,
          4.2148e-02, -9.0000e-02,  5.7369e-02, -5.9325e-02,  3.6499e-02,
         -4.4669e-03,  1.2723e-01, -1.1053e-01,  1.1709e-01,  1.9731e-01,
         -1.5722e-01,  1.6885e-01, -9.7379e-02, -1.2322e-01, -1.8646e-01,
         -2.9730e-01,  4.9331e-01, -1.5698e-02, -1.1737e-01, -6.5689e-03,
         -9.1951e-02, -2.5417e-02, -1.4304e-01,  3.5347e-02, -1.7611e-03,
         -1.9859e-01,  1.6998e-01, -9.2690e-02, -1.9413e-01,  1.3687e-01,
         -1.9103e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8651))
tensor([[ 8.7648e-01,  1.6350e+00, -5.7142e-01, -1.0144e+00,  9.9038e-01,
         -2.2417e-01,  2.0232e+00,  5.9882e-01,  2.5209e+00,  5.6911e-01,
          3.0777e-01,  3.2714e-02,  2.2131e-01, -8.7979e-01, -6.0547e-01,
          2.3615e-01, -9.9657e-01,  2.7680e-01,  8.4364e-01, -2.6863e-01,
          9.8075e-01,  3.6573e-01,  7.7683e-01, -1.3400e+00,  8.5489e-01,
         -4.4157e-01,  1.7008e-02, -2.7439e-01, -4.9313e-01, -1.0588e-01,
          9.7420e-02, -7.0121e-02,  5.6646e-02,  4.0648e-01, -4.3246e-01,
          1.6002e-01, -5.2129e-02, -1.5565e-01,  1.9199e-01, -1.3639e-01,
          4.6921e-01,  1.9660e-01,  2.7918e-02,  7.2974e-02, -2.1726e-01,
          2.5392e-01, -1.2898e-01, -5.7620e-02, -1.7064e-01,  2.9118e-01,
          2.2680e-01, -2.8593e-01, -9.7174e-02,  3.5309e-01, -7.3373e-02,
          9.7296e-02, -2.5836e-01,  2.9182e-01,  2.5286e-01, -4.4272e-01,
          4.5080e-01, -2.6233e-01, -1.7093e-01,  2.6271e-01,  1.6426e-01,
          2.6029e-02,  2.5744e-01, -2.1842e-01,  1.0061e-01,  2.2579e-01,
          1.3051e-01,  1.2053e-01, -2.9330e-01,  2.9020e-01, -5.8371e-02,
          1.8133e-01,  1.9651e-01, -7.5928e-02,  1.7313e-01,  2.1126e-01,
         -1.9296e-02,  1.4736e-01, -1.8357e-01, -7.5218e-02, -2.9255e-01,
         -1.6146e-01, -1.4169e-01, -1.4739e-03,  1.9929e-01,  3.5231e-01,
          4.9900e-01,  1.4300e-01,  3.3994e-01,  7.4737e-02, -1.9783e-01,
         -1.8762e-01,  8.9071e-01, -4.4259e-01, -7.7795e-02, -6.0035e-01,
         -6.1768e-02, -8.5528e-03, -4.2052e-01, -1.1050e-01, -1.2276e-01,
         -4.2021e-01, -3.8501e-01, -1.5238e-01, -3.3345e-01,  3.1646e-02,
          4.7108e-03, -1.9363e-02,  1.8806e-02,  1.1762e-01,  1.7630e-01,
          1.1941e-01, -4.0071e-02,  1.5669e-01,  1.1032e-01, -5.3493e-02,
          3.1018e-01, -3.9772e-02,  2.2002e-01, -1.3214e-01, -1.5050e-01,
          1.1473e-01,  1.3833e-02,  9.2220e-02, -1.5907e-01,  1.3368e-01,
          5.7334e-03,  1.7863e-01,  5.6198e-02, -1.0956e-01, -4.7316e-02,
         -1.7830e-02, -1.0190e-01,  2.0514e-01, -1.2831e-01,  8.8365e-02,
          7.2505e-02, -9.6522e-02,  4.3552e-02,  1.0483e-01,  3.7002e-02,
          4.0447e-02, -2.6844e-01, -1.6703e-01, -1.2834e-02, -1.1586e-01,
          1.4345e-01, -3.2705e-02,  4.5971e-02, -2.3538e-01, -1.8336e-01,
         -4.4567e-02,  3.4775e-02,  2.2098e-01,  3.2576e-02,  2.0975e-01,
          3.2410e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8834))
tensor([[ 1.7133e+00, -3.1966e-01, -2.7073e-01, -1.0149e+00,  2.4350e+00,
          2.6065e+00, -1.5097e+00,  1.3551e+00,  5.0954e-01, -4.3845e-01,
         -1.6960e-01,  1.0727e+00,  2.0546e-01,  2.0443e-02,  6.0164e-01,
          4.7035e-01,  4.1052e-01,  8.9751e-02,  2.2368e-01, -1.6794e+00,
         -4.0126e-01,  2.1055e-01, -3.7861e-01,  6.0834e-01, -6.9151e-01,
          5.2841e-01,  2.0570e-01,  1.2000e-01,  3.1183e-01,  2.1950e-01,
          3.0290e-01,  8.8980e-03, -3.5587e-01,  3.0076e-01, -3.4566e-02,
          1.1943e-02, -2.2451e-03, -7.5586e-02,  5.1609e-02,  1.9926e-01,
          2.6163e-01,  4.1344e-02, -1.2902e-01,  3.6613e-01, -3.8359e-01,
         -2.7074e-02, -3.7910e-02, -4.1100e-01, -2.2557e-02,  1.1733e-01,
         -3.1414e-01, -3.4391e-01, -4.4354e-01, -2.4878e-01,  4.0236e-01,
          6.3657e-02,  3.6345e-01, -1.3009e-01,  6.1055e-02,  3.8689e-01,
         -4.2567e-01, -2.6300e-02,  4.6701e-01,  9.7991e-02, -1.6821e-01,
          1.7548e-01,  2.8424e-02, -2.9702e-01, -1.6050e-01, -6.4617e-02,
          3.1082e-01, -1.2559e-01,  1.3274e-01, -1.9112e-01,  2.8987e-01,
         -1.5316e-01, -3.2484e-01, -4.5080e-01,  3.2034e-01,  2.0244e-01,
          6.2341e-02,  6.8735e-03, -4.5889e-02,  1.7734e-01,  6.9354e-02,
         -1.9943e-01, -9.5132e-02, -3.1916e-01,  2.8764e-02,  4.6587e-02,
          4.3034e-02,  6.7258e-02, -7.2979e-03,  8.0737e-02,  1.1171e-01,
         -2.6769e-01,  5.1725e-01,  1.9043e-01,  2.1102e-01,  5.7557e-01,
         -5.7642e-01,  8.4999e-02,  2.0739e-01,  2.5560e-01,  1.5592e-01,
          5.3948e-01,  2.0942e-01,  2.0897e-01, -3.1714e-01,  1.8634e-02,
         -6.8472e-02, -6.1288e-02, -7.1917e-02, -1.7447e-01, -3.0145e-01,
         -7.0738e-02,  1.3594e-01,  1.9419e-01, -4.5014e-02,  4.8588e-02,
         -2.2520e-01, -1.3348e-01, -1.0002e-01, -1.4112e-01, -2.2673e-01,
          5.9472e-02,  7.0089e-02,  7.4061e-02,  1.8624e-02,  4.7169e-02,
         -2.5889e-02, -1.6692e-02,  8.8821e-03, -9.5809e-02,  7.1551e-02,
          2.0583e-01,  1.1243e-01,  1.4048e-01,  2.1254e-01, -3.1594e-01,
          6.5240e-02, -1.2022e-01,  8.0725e-03,  8.4591e-02,  9.3700e-02,
          4.6720e-01, -3.5348e-01, -2.1313e-01, -1.1278e-01, -1.2313e-01,
         -2.2070e-01,  1.3228e-01,  8.3618e-03, -4.6126e-02,  2.4373e-01,
         -9.9711e-03,  5.7384e-02,  1.3107e-01, -1.8656e-01,  1.6514e-01,
         -9.4689e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(0.8988))
tensor([[ 8.4854e-01,  4.4682e-01,  2.7989e-01, -9.9602e-01,  2.3853e+00,
         -5.7798e-01, -1.1176e+00,  7.3592e-01,  2.7077e+00, -5.2764e-01,
         -2.1251e-01,  1.8378e-01,  1.1206e-01, -5.8575e-03, -3.6777e-02,
          6.1392e-01, -5.9690e-01, -1.2450e-01, -3.2188e-01, -6.7467e-02,
         -1.9284e-01,  5.0950e-01, -4.0097e-02,  7.3235e-01,  1.4660e+00,
         -5.5836e-03,  3.8062e-01, -1.5544e+00, -6.8638e-02,  1.6566e-01,
          2.7227e-01,  1.4076e-01,  3.1331e-01,  2.0102e-01, -2.1623e-01,
         -5.7647e-02,  2.0709e-02,  1.2225e-01,  1.5165e-01,  6.9762e-02,
          6.5397e-01, -6.2670e-03,  1.3056e-01,  3.8506e-01, -3.4137e-01,
         -2.8307e-01, -3.3312e-01,  1.4281e-02,  1.0973e-01,  6.3840e-01,
         -7.8865e-02, -1.1318e-01, -2.5447e-01, -2.2872e-01,  3.9913e-01,
         -2.5293e-01,  2.1964e-01,  2.0363e-01, -2.4369e-01,  1.2293e-01,
         -2.0160e-02, -4.8869e-01, -5.8134e-02, -1.4087e-01,  1.1319e-01,
          2.5038e-01, -2.1981e-01, -2.7297e-01,  9.9314e-03, -2.7439e-01,
         -7.7170e-02, -7.1478e-02, -2.2580e-01, -2.9345e-01, -7.4815e-02,
          3.4230e-01, -1.6059e-01,  2.5569e-01,  1.4616e-01, -6.5487e-02,
         -1.9293e-01, -6.0323e-02,  2.0348e-02,  2.7554e-01,  2.6169e-01,
         -1.6279e-01,  1.0191e-01, -1.6552e-01, -1.5446e-01, -4.6035e-02,
          2.6852e-01, -8.0788e-03,  1.5923e-01, -9.4495e-02,  3.1953e-01,
         -5.9852e-01,  5.0202e-01,  2.1539e-01,  4.6189e-01, -1.6049e-02,
          4.0651e-01,  1.9263e-01,  2.0087e-02, -1.7005e-01,  2.6663e-03,
          4.6614e-01, -3.0179e-01,  3.9185e-02, -1.1728e-01,  2.9248e-01,
         -4.9304e-02,  2.4582e-01,  8.7725e-02,  1.0002e-01, -5.5185e-02,
         -1.4466e-01, -5.8012e-02, -1.5530e-01, -3.4759e-01,  1.4699e-02,
          2.2546e-01, -1.7688e-01,  1.3772e-01,  1.6477e-01,  9.7863e-02,
         -2.8185e-02, -3.8315e-02, -1.1337e-01,  1.3442e-01,  1.0212e-01,
          6.3674e-02, -7.5997e-02,  1.0017e-01,  1.0720e-01, -2.5324e-02,
          9.9506e-02,  1.8990e-01,  1.6749e-02, -1.9015e-01,  1.4451e-01,
         -7.0410e-02, -3.9051e-02, -7.2646e-02,  1.0251e-01, -8.4626e-02,
         -8.3714e-03, -8.7934e-02,  2.2642e-01,  1.5915e-01,  1.0319e-01,
         -2.2807e-01,  1.5110e-01, -1.5698e-01, -1.6913e-01,  2.5487e-01,
          1.2987e-02,  5.0157e-02, -4.6789e-02,  5.9190e-02, -1.9616e-01,
         -1.7948e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.0003))
tensor([[ 2.3484e+00, -2.6227e-01, -1.1787e+00, -9.5369e-01,  2.5564e+00,
          4.1772e+00,  4.4084e-01, -2.1206e+00, -4.6450e-01,  5.1970e-01,
          5.4825e-01, -1.8601e-01, -7.0720e-01, -7.3145e-01,  3.7415e-01,
         -1.0467e+00, -2.1233e-01, -2.7909e-01,  5.0972e-01, -2.4588e-01,
         -4.3365e-01, -2.6285e-02,  4.8335e-01, -4.9815e-01,  6.9797e-03,
          1.0251e-01,  2.3768e-02,  5.8983e-02,  1.0715e-01,  2.0117e-02,
          1.7525e-01, -1.3698e-01, -2.2913e-01, -2.3450e-02,  1.1657e-01,
         -1.7603e-01, -1.6291e-02,  9.5478e-02,  2.5899e-01,  1.0113e-01,
         -7.3403e-02,  6.1959e-02, -1.3839e-02,  1.0888e-01, -1.6458e-01,
          2.3067e-01,  1.2365e-01,  1.7230e-01,  2.1841e-01,  2.8327e-01,
          3.2531e-01,  9.1688e-02,  3.3330e-01,  2.0935e-01,  2.7427e-02,
         -2.7837e-01,  1.1535e-01, -2.6536e-02, -2.7563e-01, -1.3715e-01,
          5.6596e-02,  5.0214e-01,  2.9419e-02, -1.5974e-01,  3.2548e-01,
          1.2110e-01,  1.3365e-01,  1.5347e-01, -7.2161e-02,  1.4249e-01,
          4.3689e-01,  9.3576e-02, -6.4597e-02, -2.1669e-01,  3.5347e-01,
          5.2610e-02,  1.2475e-01,  1.7967e-01,  3.1390e-01, -2.7700e-01,
         -1.9318e-03, -1.4109e-02,  2.1265e-01,  4.7639e-01,  1.0559e-01,
          2.5298e-01, -2.1429e-01, -4.9021e-01, -4.9353e-02, -3.2992e-01,
          2.1218e-01, -2.6367e-01, -8.5833e-02, -2.9017e-01,  7.5180e-02,
         -1.9401e-01,  5.3506e-01, -3.6098e-01,  2.8863e-01, -2.5862e-01,
         -1.1934e-01, -2.6841e-01,  2.3864e-01,  1.4172e-01,  1.0075e-01,
         -3.7988e-01, -7.1075e-01,  2.6646e-01,  2.6096e-01, -2.5368e-01,
         -6.4242e-02,  2.3331e-01,  1.4860e-01,  2.3731e-01,  1.4590e-01,
          7.7434e-02,  2.7807e-03,  1.3170e-01,  2.0700e-01,  3.4863e-01,
         -1.2925e-01,  2.9387e-01,  4.9931e-02, -3.4665e-01, -3.1115e-03,
          1.3407e-01,  2.9861e-02,  1.0868e-01, -2.5723e-01,  2.5752e-02,
          9.5023e-02, -9.6578e-02, -3.1187e-02, -1.4249e-01, -5.5739e-02,
          3.1424e-02,  1.2756e-01,  3.6055e-01,  9.8858e-03,  2.1830e-01,
          5.5158e-02, -9.0487e-02, -2.8061e-01, -6.5486e-02,  1.3475e-01,
          2.0578e-01, -2.9769e-01, -1.3655e-01,  2.8595e-02, -1.1949e-01,
          2.9501e-01, -5.9220e-03,  3.1332e-01, -4.4754e-02, -1.1489e-01,
         -4.5347e-02,  1.6609e-01,  4.0452e-02,  4.4980e-02,  1.4158e-01,
          2.0158e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.0292))
tensor([[ 0.5256,  2.5951, -0.3025, -0.9160, -0.2704,  2.9443,  0.7165,  1.6441,
         -1.3310, -0.6668,  0.0552, -0.3484, -0.2162, -0.0981, -0.2454, -0.2839,
         -0.5679, -0.0982,  0.9448, -1.1222,  0.2872, -0.0673,  0.2106, -0.5881,
         -0.7361, -0.2231,  0.1905,  0.0569,  0.6275, -0.1630, -0.1382,  0.1744,
          0.2373, -0.1387, -0.0637, -0.5815,  0.6278, -0.4123, -0.2655,  0.4044,
          0.1404, -0.0421,  0.0506,  0.5888, -0.0325, -0.1474,  0.2474, -0.0964,
         -0.1512,  0.1246,  0.6623, -0.1162, -0.1551,  0.1343,  0.1136, -0.6660,
         -0.1571,  0.4698, -0.0297,  0.0681,  0.1704,  0.4177, -0.1966,  0.1972,
         -0.4661,  0.2398,  0.1918,  0.3028,  0.0371,  0.4287, -0.1340,  0.0529,
          0.1374,  0.3224, -0.0965, -0.0234,  0.0423, -0.0288,  0.0476,  0.1418,
         -0.0389,  0.2003,  0.0767, -0.0463,  0.0067, -0.0510, -0.0193,  0.3904,
         -0.2661,  0.2228,  0.1320, -0.0120, -0.1147, -0.0623, -0.2845, -0.0886,
          0.6184,  0.6056, -0.5327,  0.1317,  0.4949,  0.1341, -0.2748, -0.0653,
         -0.0200,  0.2688, -0.2733, -0.2892,  0.1366, -0.0762,  0.0094, -0.1161,
          0.1249,  0.0685, -0.0669,  0.0606, -0.0267,  0.0533, -0.0482, -0.1816,
         -0.0725,  0.2251,  0.2105, -0.2072, -0.0398, -0.0050, -0.1575,  0.1799,
         -0.2033, -0.0227,  0.0583,  0.0432,  0.2436,  0.1769, -0.0997,  0.0579,
         -0.0035,  0.2275, -0.0158,  0.1536, -0.1504, -0.1785, -0.1463, -0.2353,
          0.1498, -0.1186,  0.0639, -0.2527, -0.1401, -0.2358,  0.2257,  0.2234,
          0.1746, -0.0070,  0.1491, -0.0734,  0.0597, -0.0940, -0.0837,  0.0750,
         -0.2292]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.4116))
tensor([[-0.0835, -0.2739, -0.2039, -0.9809,  2.0497,  1.0248,  2.4337,  1.4893,
          2.6809, -0.3966, -0.1291,  0.3760,  0.5515, -0.2361,  0.2753,  0.3145,
         -0.5328, -0.2691, -0.1280, -1.2267, -0.3945, -0.3974,  0.2935, -1.4124,
         -1.1083, -0.3788, -0.1056, -0.3922, -0.6064,  0.1576, -0.2634,  0.2450,
          0.0264, -0.0436,  0.0875,  0.1434, -0.1614, -0.0602,  0.0973, -0.1574,
          0.0085, -0.6821,  0.7383, -0.0236,  0.3276, -0.2008,  0.0292, -0.0708,
          0.2217, -0.1976,  0.0357, -0.0296, -0.2297,  0.1249, -0.2073,  0.2607,
         -0.3353, -0.2781,  0.2863, -0.1441, -0.3136, -0.0876,  0.1214, -0.0342,
          0.1092, -0.1502,  0.0653, -0.1226, -0.0458,  0.1279,  0.0516, -0.1322,
          0.1736, -0.1906,  0.1500, -0.3794,  0.0519, -0.5309,  0.3214, -0.1253,
          0.1110, -0.0107,  0.1067,  0.0699, -0.1070, -0.0646, -0.2861, -0.0435,
         -0.2153, -0.3012,  0.0642,  0.3336,  0.3112,  0.0937,  0.6043,  0.0319,
         -0.6596,  0.0765,  0.1137, -0.1092,  0.7477, -0.2871,  0.2410, -0.0960,
          0.1831,  0.4929, -0.3529,  0.3634, -0.3872,  0.1144,  0.1079,  0.0491,
          0.0856, -0.2073, -0.0044,  0.0722, -0.1078, -0.1199, -0.1879, -0.1382,
         -0.0999,  0.1636, -0.0457, -0.0471,  0.1423, -0.0684,  0.0840, -0.0178,
         -0.0470,  0.0197,  0.0690, -0.0169,  0.0605,  0.2791, -0.3062, -0.1340,
         -0.0494,  0.1459, -0.0944,  0.0428,  0.1586,  0.0421, -0.0550, -0.4056,
         -0.0563, -0.1292,  0.0086,  0.0487,  0.2099,  0.1215,  0.0477, -0.1295,
          0.0835,  0.0748,  0.2348,  0.2676,  0.1967, -0.4503,  0.1087, -0.1883,
         -0.0129]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.4587))
tensor([[ 0.6625,  0.0278,  1.0230, -1.2590,  1.9270, -0.8233, -1.0043, -0.6165,
          2.8746,  0.7124,  0.0498, -0.6234, -0.2969,  0.1760,  0.0895, -0.0065,
         -0.4221, -0.2509, -0.6957,  0.2499,  0.6051, -0.1275,  0.7014, -0.6837,
         -0.5583, -0.6375, -0.5586,  0.2255,  0.6753,  0.3069,  0.0449, -0.3651,
         -0.1773,  0.3469,  0.2261, -0.2369, -0.2097, -0.2177,  0.1325,  0.0599,
         -0.0454, -0.6588,  0.5677,  0.0730,  0.3209, -0.0929, -0.2623, -0.0543,
         -0.2858,  0.0711, -0.2560,  0.3662, -0.1365, -0.0434, -0.3103,  0.2949,
         -0.2331, -0.2353, -0.1080,  0.4999, -0.6862,  0.0244,  0.1202, -0.1462,
         -0.0533, -0.0679,  0.0297,  0.0168,  0.1067,  0.0864,  0.0081, -0.2591,
          0.4773, -0.1050,  0.0547, -0.1733,  0.1951, -0.1334, -0.4788, -0.1979,
         -0.0711, -0.1649, -0.3245, -0.2842,  0.1388,  0.0451,  0.1882, -0.3192,
         -0.1446,  0.1232,  0.2525,  0.1320, -0.5709, -0.1725,  0.7265, -0.2209,
         -0.6676,  0.4198,  0.5165, -0.6724, -0.2650,  0.1638, -0.0404,  0.2036,
          0.0700, -0.7379,  0.0729, -0.3874,  0.9397, -0.2266,  0.0609,  0.1012,
         -0.0709,  0.0223, -0.0410, -0.0278,  0.0880,  0.1201, -0.0200,  0.2041,
          0.1793, -0.0063, -0.1907,  0.0357,  0.0324, -0.0187,  0.1550,  0.0031,
          0.0837,  0.1735, -0.0441,  0.0810, -0.0617, -0.2115, -0.4934, -0.0611,
          0.1067, -0.0475, -0.1329,  0.1249,  0.2191,  0.0244, -0.2008, -0.0078,
         -0.0412, -0.1274,  0.0424,  0.0034, -0.0369,  0.0335, -0.0165, -0.0338,
         -0.2353,  0.1392, -0.0940, -0.3419, -0.1292, -0.1604, -0.2515, -0.2395,
         -0.0300]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(1.7596))
tensor([[ 2.4468e+00,  1.1448e+00, -4.5193e-01, -1.1726e+00, -1.1103e+00,
          2.7679e+00, -1.5427e+00,  1.5581e+00, -1.3984e-02, -5.8459e-01,
         -1.0954e-01,  9.6665e-01, -7.5105e-02,  4.8467e-02, -3.0276e-01,
          4.2252e-01,  1.6026e-01, -6.8706e-01,  1.8922e-01,  1.0734e-01,
         -1.7324e+00,  8.5327e-01, -1.9582e-01,  6.1376e-01,  1.9073e-01,
         -8.5168e-02, -2.5785e-01,  2.4736e-01, -9.0824e-02,  2.2893e-01,
          2.5831e-01, -3.6848e-02, -2.6873e-01, -1.8878e-01,  1.0696e-01,
          5.6106e-02, -1.2177e-01, -3.6226e-01, -1.7862e-01, -3.2848e-01,
          3.7935e-01,  6.4486e-02, -1.4038e-01,  1.3197e-01,  2.5087e-01,
         -2.0404e-02,  3.6705e-02, -4.7577e-02,  1.1117e-01,  2.1204e-01,
         -3.8545e-01, -7.8117e-02,  2.0541e-01, -6.3273e-02,  4.4857e-02,
          1.3621e-01,  3.1541e-01,  4.6602e-01,  4.6299e-01, -2.8676e-01,
         -2.3528e-01, -6.8137e-02,  1.0910e-01, -1.1551e-01, -2.3594e-01,
          2.2820e-01,  5.3487e-02,  6.3368e-02, -2.1645e-02, -1.1049e-01,
          2.1389e-01, -1.9663e-01, -1.2413e-01, -1.3147e-01, -1.3713e-02,
         -9.1701e-02, -1.8245e-01, -3.4811e-01, -2.3964e-04,  3.3037e-02,
         -2.4534e-02,  1.7354e-02, -2.0663e-01, -3.1946e-01, -3.6805e-01,
          1.0430e-01, -2.5471e-01, -7.5233e-01, -3.6668e-01,  3.8222e-01,
         -1.8544e-02,  1.2469e+00, -1.7330e-01,  3.2637e-02,  1.3150e-01,
         -2.4652e-01,  1.5678e-01,  3.6412e-01, -4.8411e-02, -1.4301e-01,
         -2.6812e-01,  3.2986e-01, -3.5655e-01, -3.3725e-01,  1.9172e-02,
          4.1942e-01, -1.8405e-02,  1.4128e-02, -1.0083e-01,  2.1090e-01,
          1.0490e-01,  2.1090e-01,  5.4562e-02, -2.0484e-01, -1.0113e-01,
         -2.2166e-01,  1.0231e-01, -3.4200e-02,  3.2064e-02,  1.0423e-01,
         -2.2874e-01,  1.2237e-03, -1.3772e-01,  2.7390e-02,  2.2053e-02,
         -2.0299e-01, -2.9143e-02,  2.4205e-01, -3.3920e-02,  1.7213e-01,
          1.8458e-01, -8.3733e-02,  3.0725e-02, -3.6354e-02, -2.3418e-02,
          5.3119e-02, -5.6535e-02, -9.1471e-02,  3.8307e-01,  8.8229e-02,
         -3.1229e-02, -5.0797e-01, -1.5233e-03,  1.9246e-02, -1.0084e-01,
          3.0840e-01, -2.5935e-01,  1.5037e-01,  1.9669e-01, -4.7148e-01,
         -6.4502e-02, -1.6658e-01, -8.2486e-02, -1.3290e-02,  1.6342e-01,
         -1.4791e-01,  2.2318e-01,  3.2318e-01, -2.9915e-01,  1.4465e-01,
         -1.3809e-01]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(2.1086))
tensor([[-1.5262e-01,  1.2793e+00, -6.4823e-01, -1.1744e+00,  3.2984e+00,
          2.2921e+00,  1.2938e+00, -1.0139e+00,  6.4608e-02, -4.2726e-01,
         -2.5948e-02,  2.1109e-01,  4.2973e-02,  5.0502e-01,  2.1802e-01,
          5.4143e-01, -6.4191e-01, -1.1418e-01,  8.0814e-01, -1.0448e+00,
          1.6742e-01,  4.6234e-01,  1.1162e-01, -5.2466e-01,  9.9234e-01,
         -6.9659e-01,  1.3378e-01,  1.9722e-02,  2.5618e-01,  1.4231e-01,
          6.1906e-02,  3.1741e-01,  5.2698e-02, -2.0656e-04,  8.3447e-01,
         -2.1461e-01,  3.4751e-01, -7.3774e-02,  6.1926e-01, -2.2934e-01,
         -1.6790e-01, -5.2606e-01,  5.9910e-01,  2.7283e-02, -3.4134e-01,
         -2.3960e-02,  2.3313e-01, -1.7916e-01,  3.9584e-01,  4.7787e-01,
         -1.3462e-02, -5.7532e-02, -4.0672e-01,  2.8334e-01,  1.7805e-02,
         -7.5228e-03, -1.1309e-01,  1.5078e-01,  6.8364e-01, -4.1873e-01,
         -1.2433e-01,  1.3607e-01, -5.5665e-01, -2.0121e-01,  1.5863e-01,
         -1.1362e-01,  3.0655e-03, -2.9178e-01, -1.5015e-01, -1.2797e-01,
          2.9714e-01,  2.4982e-05,  9.3780e-02,  4.3663e-02,  1.0864e-01,
          2.0981e-02,  2.1083e-01, -7.2481e-02, -5.1720e-02, -8.0636e-03,
          1.1208e-02,  1.1221e-01,  9.0163e-02,  8.2046e-02,  2.0592e-03,
          3.9176e-03, -1.4095e-01,  4.0539e-01, -1.4717e-01, -3.1554e-01,
          1.4152e-03,  1.2387e-01, -2.8120e-01,  4.4577e-01,  7.3949e-01,
          2.4091e-01, -3.1985e-02, -7.2697e-01, -6.6828e-01,  1.9949e-01,
         -7.1341e-01, -2.2712e-01, -1.1281e+00, -5.7800e-02,  1.8746e-01,
         -1.0280e+00, -6.9758e-01,  2.5359e-01, -1.4060e-01,  1.5353e-02,
          1.4831e-01,  3.0785e-01, -1.2375e-02, -5.2462e-02,  3.1574e-02,
         -4.9165e-02, -1.2357e-01, -1.3778e-01,  1.0267e-01,  1.5087e-01,
          6.1210e-02, -1.5913e-01, -1.4393e-01, -2.1702e-01, -1.6037e-01,
          2.9297e-01,  2.8170e-01,  2.3163e-01, -2.4382e-01,  6.2811e-02,
          6.3231e-02,  1.1776e-01, -1.0413e-01, -1.2424e-01, -8.2284e-02,
          1.1552e-01, -2.9446e-01, -2.4058e-02,  4.4018e-02,  1.3884e-01,
         -1.0778e-01, -9.2500e-02,  1.5395e-01,  5.4830e-02,  2.2297e-02,
         -6.4045e-02, -2.6803e-01, -3.6146e-01, -4.4320e-02,  2.6994e-01,
         -1.4248e-01, -7.2809e-02, -5.8583e-02,  5.5309e-02,  1.5965e-01,
          5.0475e-02,  2.6306e-01, -1.1659e-01, -1.0625e-01, -4.1389e-02,
          6.3931e-02]], device='cuda:0')
收敛loss为： ('超出最大迭代次数', tensor(2.5083))
tensor([[-1.8382e-01,  6.9623e-01, -7.1611e-01, -9.9545e-01,  4.5526e+00,
          1.8265e+00, -9.6474e-01, -1.8704e+00,  7.5615e-01, -3.9584e-01,
         -8.7144e-01, -2.9701e-01, -1.2747e-01, -4.3910e-02,  1.0607e-01,
         -6.1337e-01,  3.2993e-01,  4.7606e-02,  3.0496e-01,  6.8718e-02,
          8.2601e-01,  7.2439e-01,  3.4946e-01,  1.0769e+00, -1.3109e+00,
         -4.5538e-01,  3.1273e-01,  2.2033e-01,  2.7353e-01,  9.0735e-02,
         -8.1119e-02, -5.7223e-02,  1.6804e-01, -9.5777e-02, -8.4241e-03,
         -6.8061e-03, -9.0014e-02,  1.1466e-01,  6.2849e-02,  1.7217e-01,
          2.5480e-01,  1.6184e-01, -8.3558e-02,  1.3519e-03, -1.9098e-01,
         -1.3588e-01,  5.2042e-02,  1.1688e-02, -8.5489e-02,  3.5785e-01,
         -2.2536e-01, -2.3492e-01, -9.8705e-02, -9.0349e-02,  2.6734e-02,
          2.5691e-01, -5.1542e-02, -3.1075e-01, -1.4797e-01,  7.1400e-02,
         -3.5459e-01,  4.0059e-01,  4.1541e-01,  2.9312e-02,  2.9600e-01,
          9.4324e-02,  7.0903e-02,  1.7769e-01, -9.8650e-02, -3.4661e-01,
          3.0368e-03, -1.8122e-01,  3.4615e-02, -1.4124e-01,  5.1021e-02,
          4.5194e-03,  1.2346e-01, -1.7840e-01,  3.8098e-01, -2.1549e-02,
          7.2611e-02,  2.0089e-01, -9.8474e-02,  6.7537e-03, -1.1659e-01,
         -1.0685e-02,  5.0128e-02,  5.6176e-01, -1.9153e-01, -4.5182e-01,
          2.9775e-01,  1.7137e+00,  9.4378e-02, -2.7228e-04,  7.3672e-02,
         -1.0525e-01, -5.4637e-01,  6.2445e-01,  3.9582e-01,  3.1059e-01,
         -8.9077e-02,  2.2608e-01, -1.7632e+00,  3.2064e-01,  1.0304e-01,
         -8.7442e-02,  1.2424e-01, -5.4941e-01,  5.5330e-01, -4.3304e-02,
          1.2723e-01,  1.9949e-01,  2.7538e-01, -6.2360e-02,  4.1563e-02,
          4.9587e-02, -2.3722e-01,  4.8836e-02,  5.7728e-02, -2.8881e-01,
         -8.8102e-02,  2.0327e-01, -1.0178e-01,  8.9865e-02,  2.2777e-02,
          4.0099e-02, -4.1783e-02,  3.4459e-01,  9.5080e-02,  2.0358e-01,
          6.0559e-02,  7.0793e-02,  2.2146e-01, -2.2790e-01, -3.5211e-01,
         -2.7319e-02, -5.0534e-01, -3.0527e-02, -1.1429e-01, -3.4327e-01,
          2.8113e-01, -2.1530e-01,  5.5338e-02,  1.3162e-01, -1.2869e-02,
          1.2117e-01, -1.7549e-01,  2.1775e-01, -3.0635e-01, -1.7111e-01,
          2.4085e-01, -1.9436e-01,  1.7368e-01, -3.2576e-02,  7.5669e-02,
         -2.2434e-01, -1.0022e-01,  2.4188e-01,  2.8350e-02,  1.0712e-01,
          1.0783e-02]], device='cuda:0')
7697.0605680942535
         7327201418 function calls (7324494211 primitive calls) in 7727.257 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   2837/1    0.063    0.000 7727.262 7727.262 {built-in method builtins.exec}
        1    0.001    0.001 7727.262 7727.262 test.py:1(<module>)
        1   69.941   69.941 7697.060 7697.060 para4band.py:230(train)
  1000000   10.597    0.000 3931.788    0.004 optimizer.py:265(wrapper)
  1000000   10.076    0.000 3893.430    0.004 optimizer.py:29(_use_grad)
  1000000    5.871    0.000 3879.506    0.004 adam.py:108(step)
  1000000  124.940    0.000 3444.344    0.003 adam.py:231(adam)
  1000000   14.602    0.000 3218.638    0.003 adam.py:396(_multi_tensor_adam)
  1000000   56.293    0.000 2156.947    0.002 para4band.py:168(loss)
2000000/1000000    5.843    0.000 1582.726    0.002 module.py:1494(_call_impl)
  1000000    7.176    0.000 1578.452    0.002 para4band.py:111(forward)
  1000021    1.890    0.000 1290.845    0.001 para4tb.py:113(create_model_function)
  1000021  604.993    0.001 1288.955    0.001 para4tb.py:87(__create_TB_function)
  1000000    3.233    0.000 1286.027    0.001 _tensor.py:428(backward)
  1000000    4.391    0.000 1282.533    0.001 __init__.py:106(backward)
  1000000 1256.997    0.001 1256.997    0.001 {method 'run_backward' of 'torch._C._EngineBase' objects}
  2000262  938.815    0.000  938.815    0.000 {built-in method torch._foreach_add_}
  1000021   30.341    0.000  583.498    0.001 para4tb.py:92(<listcomp>)
  1000131  556.288    0.001  556.288    0.001 {built-in method torch._foreach_addcmul_}
162168480   46.683    0.000  553.774    0.000 container.py:629(<genexpr>)
161167440  112.999    0.000  507.090    0.000 container.py:603(__getitem__)
  1000000  302.833    0.000  413.949    0.000 adam.py:66(_init_group)
  1000000    2.591    0.000  356.608    0.000 _contextlib.py:112(decorate_context)
  1000000  290.989    0.000  347.177    0.000 _foreach_utils.py:20(_group_tensors_by_device_and_dtype)
322000262  192.697    0.000  320.866    0.000 optimizer.py:39(_get_value)
  1000000   82.517    0.000  240.150    0.000 para4band.py:155(loss3)
  1000131   53.720    0.000  219.381    0.000 adam.py:489(<listcomp>)
161170660  106.976    0.000  214.188    0.000 container.py:586(_get_abs_string_index)
  1000131   49.566    0.000  204.771    0.000 adam.py:490(<listcomp>)
  1000131  189.309    0.000  189.309    0.000 {built-in method torch._foreach_add}
  1000131  183.260    0.000  183.260    0.000 {built-in method torch._foreach_sqrt}
  1018768   23.120    0.000  170.803    0.000 para4tb.py:101(matrix_function)
166368595  119.500    0.000  164.347    0.000 {built-in method builtins.getattr}
  1000131   27.258    0.000  156.341    0.000 adam.py:494(<listcomp>)
  4018768  156.159    0.000  156.159    0.000 {built-in method torch.matmul}
  1000000   29.147    0.000  146.824    0.000 para4band.py:145(loss2)
161000131   89.809    0.000  129.083    0.000 optimizer.py:52(_dispatch_sqrt)
  1000000   28.057    0.000  123.507    0.000 para4band.py:136(loss1)
665141416/665138315   85.611    0.000  118.067    0.000 {built-in method builtins.len}
644000524  113.517    0.000  113.517    0.000 {built-in method torch.is_complex}
  1000000   82.060    0.000  112.319    0.000 optimizer.py:435(zero_grad)
1612108599  103.324    0.000  103.324    0.000 {method 'append' of 'list' objects}
  2037536   12.293    0.000  100.638    0.000 functional.py:192(einsum)
  3038313   24.438    0.000   98.685    0.000 {built-in method builtins.all}
  1000000    5.844    0.000   98.657    0.000 para4band.py:76(forward)
323149609   98.436    0.000   98.436    0.000 {method 'item' of 'torch._C._TensorBase' objects}
  2037536   84.838    0.000   84.838    0.000 {built-in method torch.einsum}
      295    0.010    0.000   80.634    0.273 __init__.py:1(<module>)
  2000001   75.024    0.000   75.024    0.000 {built-in method torch.sort}
  6795917   72.987    0.000   72.987    0.000 {built-in method torch.mean}
   799360   72.593    0.000   72.593    0.000 {built-in method torch.tensor}
  1000131   70.410    0.000   70.410    0.000 {built-in method torch._foreach_addcdiv_}
  2000262   68.223    0.000   68.223    0.000 {built-in method torch._foreach_mul_}
  1001040   61.241    0.000   61.241    0.000 {built-in method torch.stack}
  3000000   56.765    0.000   56.765    0.000 {built-in method torch.abs}
  3000000   53.759    0.000   53.759    0.000 {built-in method torch.topk}
  1000131   22.834    0.000   51.936    0.000 adam.py:436(<listcomp>)
  1000131   24.480    0.000   51.745    0.000 adam.py:433(<listcomp>)
  1000131   23.103    0.000   51.733    0.000 adam.py:434(<listcomp>)
  1000131   22.864    0.000   51.385    0.000 adam.py:435(<listcomp>)
  1000000    2.007    0.000   50.682    0.000 optimizer.py:64(_default_to_fused_or_foreach)
167190487   50.074    0.000   50.094    0.000 module.py:1601(__getattr__)
494502009/493457792   45.827    0.000   47.941    0.000 {built-in method builtins.isinstance}
  1000131   42.644    0.000   42.644    0.000 {built-in method torch._foreach_div_}
161016331   28.313    0.000   40.506    0.000 _tensor.py:942(__hash__)
162000131   30.326    0.000   38.374    0.000 adam.py:268(<genexpr>)
  3018790   36.330    0.000   36.346    0.000 {method 'type' of 'torch._C._TensorBase' objects}
162000131   35.860    0.000   35.860    0.000 optimizer.py:72(<genexpr>)
323345599   32.455    0.000   32.455    0.000 container.py:625(__len__)
490009828   31.727    0.000   31.727    0.000 _jit_internal.py:1102(is_scripting)
  2000000    3.933    0.000   26.330    0.000 profiler.py:491(__enter__)
   2671/5    0.012    0.000   25.375    5.075 <frozen importlib._bootstrap>:1167(_find_and_load)
   2637/5    0.010    0.000   25.375    5.075 <frozen importlib._bootstrap>:1122(_find_and_load_unlocked)
  2361/12    0.008    0.000   25.370    2.114 <frozen importlib._bootstrap>:666(_load_unlocked)
   2163/5    0.004    0.000   25.370    5.074 <frozen importlib._bootstrap_external>:934(exec_module)
  5725/13    0.003    0.000   25.309    1.947 <frozen importlib._bootstrap>:233(_call_with_frames_removed)
    18768    0.157    0.000   23.884    0.001 para4band.py:101(init_trans_matrix)
  1074/92    0.002    0.000   23.003    0.250 {built-in method builtins.__import__}
  2000000    1.654    0.000   22.397    0.000 _ops.py:497(__call__)
  2000000    9.366    0.000   22.356    0.000 profiler.py:495(__exit__)
  1000023   22.098    0.000   22.098    0.000 {built-in method torch.zeros}
  2000000   20.743    0.000   20.743    0.000 {built-in method torch._ops.profiler._record_function_enter_new}
323000393   19.821    0.000   19.821    0.000 _utils.py:786(is_compiling)
  1000000    4.124    0.000   19.395    0.000 __init__.py:50(_make_grads)
    18768   19.160    0.001   19.160    0.001 {built-in method torch._C._linalg.linalg_eigh}
     2163    0.014    0.000   18.357    0.008 <frozen importlib._bootstrap_external>:1007(get_code)
  1000001   18.120    0.000   18.120    0.000 {built-in method torch.diag_embed}
  1000000   18.107    0.000   18.107    0.000 {method 'repeat' of 'torch._C._TensorBase' objects}
     2163    0.006    0.000   18.024    0.008 <frozen importlib._bootstrap_external>:1127(get_data)
2239/2169   17.387    0.008   17.523    0.008 {method 'read' of '_io.BufferedReader' objects}
 2431/663    0.005    0.000   15.418    0.023 <frozen importlib._bootstrap>:1209(_handle_fromlist)
  1000000    1.964    0.000   15.023    0.000 optimizer.py:228(_cuda_graph_capture_health_check)
  1000000   14.471    0.000   14.471    0.000 {built-in method torch.ones_like}
   795917    6.317    0.000   12.423    0.000 functional.py:1387(norm)
  2000000    1.788    0.000   12.329    0.000 _ops.py:286(__call__)
161039485   12.195    0.000   12.195    0.000 {built-in method builtins.id}
161000138   11.575    0.000   11.575    0.000 {built-in method math.sqrt}
161177013   10.596    0.000   10.596    0.000 {built-in method _operator.index}
  1000005    1.582    0.000   10.593    0.000 __init__.py:94(is_available)
  2000000   10.542    0.000   10.542    0.000 {built-in method torch._ops.profiler.}
  1000131   10.187    0.000   10.187    0.000 adam.py:492(<listcomp>)
  2000000   10.054    0.000   10.054    0.000 {method 'view' of 'torch._C._TensorBase' objects}
  1062826    5.542    0.000    9.782    0.000 module.py:1617(__setattr__)
  2000000    9.745    0.000    9.745    0.000 {built-in method torch.diagonal}
  2000001    8.908    0.000    8.908    0.000 {method 'transpose' of 'torch._C._TensorBase' objects}
  1018768    8.007    0.000    8.007    0.000 {built-in method torch.exp}
  1000005    1.072    0.000    7.815    0.000 __init__.py:91(_nvml_based_avail)
        1    0.000    0.000    7.577    7.577 band_data_in.py:1(<module>)
  1000019    7.447    0.000    7.447    0.000 {built-in method torch.randn}
  2000000    4.687    0.000    6.987    0.000 profiler.py:482(__init__)
  1000027    1.000    0.000    6.743    0.000 <frozen os>:772(getenv)
  1001248    1.479    0.000    5.744    0.000 <frozen _collections_abc>:771(get)
   795917    5.707    0.000    5.707    0.000 {built-in method torch._C._linalg.linalg_vector_norm}
  4018588    3.905    0.000    5.434    0.000 grad_mode.py:149(__init__)
        1    0.000    0.000    5.070    5.070 para4band.py:123(__init__)
        1    0.000    0.000    5.070    5.070 para4band.py:83(__init__)
        1    0.001    0.001    5.068    5.068 para4tb.py:13(__init__)
  1000000    4.808    0.000    4.808    0.000 {built-in method torch.flatten}
        1    0.001    0.001    4.720    4.720 _meta_registrations.py:1(<module>)
        2    0.001    0.000    4.544    2.272 decompositions.py:1(<module>)
        1    0.000    0.000    4.426    4.426 fake_tensor.py:1(<module>)
2361/2230    0.004    0.000    4.421    0.002 <frozen importlib._bootstrap>:566(module_from_spec)
        1    0.000    0.000    4.400    4.400 _guards.py:1(<module>)
  160/140    0.000    0.000    4.369    0.031 <frozen importlib._bootstrap_external>:1231(create_module)
  160/140    3.493    0.022    4.369    0.031 {built-in method _imp.create_dynamic}
  1000357    2.845    0.000    4.266    0.000 <frozen os>:673(__getitem__)
        1    0.000    0.000    4.144    4.144 outputs.py:1(<module>)
  1000000    4.051    0.000    4.051    0.000 {built-in method torch.conj}
  1000000    3.788    0.000    3.788    0.000 {method 'conj' of 'torch._C._TensorBase' objects}
     1063    0.016    0.000    3.659    0.003 {built-in method builtins.print}
     3037    0.009    0.000    3.643    0.001 _tensor.py:420(__repr__)
     3037    0.032    0.000    3.633    0.001 _tensor_str.py:633(_str)
        1    0.000    0.000    3.591    3.591 dos.py:1(<module>)
        1    0.000    0.000    3.583    3.583 tight_binding_hamiltonian.py:1(<module>)
     3037    0.089    0.000    3.543    0.001 _tensor_str.py:366(_str_intern)
        3    0.000    0.000    3.540    1.180 _support_alternative_backends.py:1(<module>)
        1    0.000    0.000    3.498    3.498 Orbit_spd_manager.py:1(<module>)
        1    0.000    0.000    3.494    3.494 Orbit_spd_with_spin.py:1(<module>)
        1    0.000    0.000    3.486    3.486 Orbit_spd_without_spin.py:1(<module>)
        1    0.000    0.000    3.484    3.484 Orbit_spd.py:1(<module>)
  1001040    2.087    0.000    3.433    0.000 container.py:628(__iter__)
     3037    0.027    0.000    3.403    0.001 _tensor_str.py:287(_tensor_str)
        1    0.000    0.000    3.354    3.354 inputs.py:1(<module>)
        1    0.000    0.000    3.242    3.242 _signal_api.py:1(<module>)
  1000000    2.595    0.000    3.216    0.000 _foreach_utils.py:24(<listcomp>)
  160/128    0.000    0.000    3.081    0.024 <frozen importlib._bootstrap_external>:1239(exec_module)
  160/128    0.012    0.000    3.081    0.024 {built-in method _imp.exec_dynamic}
     3037    0.486    0.000    2.950    0.001 _tensor_str.py:100(__init__)
  1693880    1.292    0.000    2.857    0.000 {method 'format' of 'str' objects}
  2006075    2.797    0.000    2.797    0.000 {built-in method torch._C._get_tracing_state}
  1000000    0.898    0.000    2.785    0.000 _contextlib.py:141(clone)
        1    0.000    0.000    2.697    2.697 para4tb.py:32(load_and_check_matrix)
        1    0.000    0.000    2.364    2.364 band.py:1(<module>)
  1043875    1.881    0.000    2.360    0.000 parameter.py:8(__instancecheck__)
  1009294    1.097    0.000    2.305    0.000 grad_mode.py:53(__enter__)
 1159/799    0.001    0.000    2.291    0.003 {built-in method builtins.sum}
     1536    0.022    0.000    2.289    0.001 matrix_element.py:127(__add__)
    68950    0.109    0.000    2.196    0.000 numeric.py:2170(allclose)
       20    0.000    0.000    2.128    0.106 module.py:1039(to)
       20    0.008    0.000    2.128    0.106 module.py:795(_apply)
    12337    1.629    0.000    2.124    0.000 {method 'to' of 'torch._C._TensorBase' objects}
     3220    0.002    0.000    2.105    0.001 module.py:1139(convert)
2003902/2003650    2.041    0.000    2.089    0.000 typing.py:357(inner)
  1000000    0.376    0.000    2.087    0.000 graphs.py:19(is_current_stream_capturing)
  1009304    1.803    0.000    1.898    0.000 grad_mode.py:48(__init__)
        5    0.000    0.000    1.869    0.374 functional.py:1(<module>)
  1000131    1.235    0.000    1.856    0.000 _foreach_utils.py:27(<lambda>)
    68950    0.267    0.000    1.850    0.000 numeric.py:2249(isclose)
  1009294    0.800    0.000    1.783    0.000 grad_mode.py:57(__exit__)
     1536    0.002    0.000    1.718    0.001 matrix_element.py:14(__init__)
     1536    0.047    0.000    1.711    0.001 matrix_element.py:21(check_input)
  1000000    1.710    0.000    1.710    0.000 {built-in method torch._C._cuda_isCurrentStreamCapturing}
2498/2416    0.018    0.000    1.678    0.001 <frozen importlib._bootstrap>:1056(_find_spec)
  2037548    1.094    0.000    1.668    0.000 _VF.py:26(__getattr__)
   166077    0.159    0.000    1.565    0.000 _tensor.py:868(__format__)
        1    0.000    0.000    1.549    1.549 _spline_filters.py:1(<module>)
        1    0.000    0.000    1.548    1.548 _signaltools.py:1(<module>)
        1    0.000    0.000    1.477    1.477 _ltisys.py:1(<module>)
  1000365    0.847    0.000    1.421    0.000 <frozen os>:755(encode)
  6027882    1.364    0.000    1.364    0.000 {built-in method torch.is_grad_enabled}
        1    0.000    0.000    1.341    1.341 _peak_finding.py:1(<module>)
        1    0.000    0.000    1.283    1.283 pyplot.py:1(<module>)
        1    0.000    0.000    1.268    1.268 _geometric_slerp.py:1(<module>)
        2    0.000    0.000    1.174    0.587 distance.py:1(<module>)
    46/41    0.000    0.000    1.136    0.028 __init__.py:108(import_module)
    47/41    0.000    0.000    1.136    0.028 <frozen importlib._bootstrap>:1194(_gcd_import)
    68950    0.378    0.000    1.127    0.000 numeric.py:2330(within_tol)
2065783/2065442    0.618    0.000    1.098    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    1.074    1.074 _interpolate.py:1(<module>)
        1    0.000    0.000    1.027    1.027 json.py:1(<module>)
     2491    0.002    0.000    1.021    0.000 <frozen importlib._bootstrap_external>:1496(find_spec)
2504/2491    0.007    0.000    1.019    0.000 <frozen importlib._bootstrap_external>:1464(_get_spec)
        1    0.000    0.000    0.999    0.999 _fitpack_py.py:1(<module>)
     3709    0.028    0.000    0.998    0.000 <frozen importlib._bootstrap_external>:1604(find_spec)
        1    0.000    0.000    0.959    0.959 _bsplines.py:1(<module>)
5017/4863    0.071    0.000    0.943    0.000 {built-in method builtins.__build_class__}
    10622    0.004    0.000    0.928    0.000 <frozen importlib._bootstrap_external>:140(_path_stat)
    10795    0.926    0.000    0.926    0.000 {built-in method posix.stat}
        1    0.000    0.000    0.901    0.901 polyfuncs.py:1(<module>)
     4458    0.003    0.000    0.895    0.000 <frozen importlib._bootstrap_external>:150(_path_is_mode_type)
     4007    0.002    0.000    0.895    0.000 <frozen importlib._bootstrap_external>:159(_path_isfile)
        1    0.000    0.000    0.888    0.888 specialpolys.py:1(<module>)
  4199789    0.874    0.000    0.874    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.868    0.868 cyaml.py:1(<module>)
     1000    0.062    0.000    0.839    0.001 para4band.py:321(<listcomp>)
  1000006    0.536    0.000    0.820    0.000 __init__.py:87(_is_compiled)
  4018588    0.771    0.000    0.771    0.000 {built-in method torch._C._set_grad_enabled}
        6    0.000    0.000    0.768    0.128 __init__.py:274(load)
        5    0.000    0.000    0.761    0.152 serialization.py:28(loadfn)
        1    0.000    0.000    0.708    0.708 rings.py:1(<module>)
  1000131    0.579    0.000    0.704    0.000 optimizer.py:46(_stack_if_compiling)
    18768    0.100    0.000    0.671    0.000 para4band.py:73(__init__)
     2163    0.658    0.000    0.658    0.000 {built-in method io.open_code}
2500/2416    0.002    0.000    0.653    0.000 __init__.py:101(find_spec)
        1    0.000    0.000    0.652    0.652 _stats_py.py:1(<module>)
      2/1    0.000    0.000    0.650    0.650 __init__.py:111(spec_for_distutils)
        1    0.000    0.000    0.629    0.629 partfrac.py:1(<module>)
        1    0.000    0.000    0.628    0.628 decorator.py:65(xthreaded)
        1    0.000    0.000    0.628    0.628 decorator.py:16(threaded_factory)
   206850    0.122    0.000    0.623    0.000 fromnumeric.py:2421(all)
  4040779    0.615    0.000    0.615    0.000 {method 'values' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.581    0.581 colorbar.py:1(<module>)
  1000000    0.576    0.000    0.576    0.000 {built-in method torch._C._are_functorch_transforms_active}
        1    0.000    0.000    0.576    0.576 eager_transforms.py:1(<module>)
       10    0.000    0.000    0.572    0.057 linear.py:1(<module>)
  2037536    0.564    0.000    0.564    0.000 {built-in method torch._C._has_torch_function}
  1000131    0.558    0.000    0.558    0.000 _foreach_utils.py:27(<listcomp>)
        2    0.000    0.000    0.547    0.273 structure.py:1(<module>)
        1    0.000    0.000    0.544    0.544 inputs.py:1947(PotcarSingle)
       19    0.001    0.000    0.519    0.027 utils.py:1(<module>)
        1    0.000    0.000    0.515    0.515 figure.py:1(<module>)
  1965031    0.507    0.000    0.507    0.000 {built-in method torch._C._has_torch_function_unary}
        1    0.000    0.000    0.507    0.507 distributions.py:1(<module>)
   206887    0.200    0.000    0.501    0.000 fromnumeric.py:71(_wrapreduction)
     13/1    0.000    0.000    0.495    0.495 __init__.py:219(_lazy_init)
        1    0.000    0.000    0.484    0.484 _jit_internal.py:1(<module>)
        7    0.003    0.000    0.472    0.067 __init__.py:299(loads)
  1000000    0.470    0.000    0.470    0.000 __init__.py:98(_tensor_or_tensors_to_tuple)
        5    0.000    0.000    0.467    0.093 json.py:885(decode)
  1000500    0.458    0.000    0.458    0.000 {method 'encode' of 'str' objects}
  2000000    0.436    0.000    0.436    0.000 {method '__exit__' of 'torch._C.DisableTorchFunctionSubclass' objects}
        1    0.000    0.000    0.429    0.429 _subplots.py:1(<module>)
        1    0.426    0.426    0.426    0.426 {built-in method torch._C._cuda_init}
4056/3037    0.012    0.000    0.423    0.000 _tensor_str.py:250(_tensor_str_with_formatter)
  1012148    0.415    0.000    0.415    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
        2    0.000    0.000    0.409    0.204 python.py:1(<module>)
        1    0.000    0.000    0.407    0.407 proxy_tensor.py:1(<module>)
        1    0.000    0.000    0.407    0.407 contour.py:1(<module>)
        1    0.117    0.117    0.405    0.405 {built-in method _pickle.load}
        1    0.000    0.000    0.395    0.395 _axes.py:1(<module>)
       31    0.000    0.000    0.392    0.013 __init__.py:129(__getattr__)
     1019    0.007    0.000    0.388    0.000 _tensor_str.py:276(<listcomp>)
        1    0.000    0.000    0.384    0.384 _kdtree.py:1(<module>)
 571498/5    0.175    0.000    0.382    0.076 json.py:728(process_decoded)
26830/756    0.062    0.000    0.381    0.001 json.py:876(<dictcomp>)
     1019    0.010    0.000    0.377    0.000 _tensor_str.py:208(_vector_str)
  1000005    0.376    0.000    0.376    0.000 {built-in method torch._C._cuda_getDeviceCount}
        1    0.000    0.000    0.375    0.375 pycode.py:1(<module>)
       12    0.001    0.000    0.369    0.031 core.py:1(<module>)
        1    0.000    0.000    0.366    0.366 codeprinter.py:1(<module>)
        1    0.000    0.000    0.365    0.365 immutable.py:1(<module>)
23121/12951    0.074    0.000    0.350    0.000 json.py:881(<listcomp>)
        1    0.000    0.000    0.346    0.346 _misc.py:1(<module>)
        2    0.000    0.000    0.344    0.172 dist.py:1(<module>)
        1    0.000    0.000    0.338    0.338 polytools.py:1(<module>)
   137936    0.157    0.000    0.332    0.000 _ufunc_config.py:33(seterr)
     1019    0.033    0.000    0.328    0.000 _tensor_str.py:238(<listcomp>)
        3    0.000    0.000    0.326    0.109 __config__.py:1(<module>)
        1    0.000    0.000    0.325    0.325 ctx_fp.py:1(<module>)
       21    0.000    0.000    0.320    0.015 para4tb.py:126(set_zero_and_init_matrix_fuction)
       10    0.177    0.018    0.313    0.031 {method 'read' of '_io.TextIOWrapper' objects}
        2    0.000    0.000    0.311    0.156 constructor.py:1(<module>)
   164059    0.043    0.000    0.295    0.000 _tensor_str.py:219(_val_formatter)
        1    0.000    0.000    0.293    0.293 hub.py:1(<module>)
        1    0.000    0.000    0.292    0.292 ctx_base.py:1(<module>)
 2059/186    0.001    0.000    0.289    0.002 cache.py:69(wrapper)
        1    0.000    0.000    0.289    0.289 _optimize.py:1(<module>)
    28/25    0.000    0.000    0.288    0.012 operations.py:62(__new__)
        1    0.000    0.000    0.286    0.286 mock.py:1(<module>)
        5    0.000    0.000    0.285    0.057 add.py:197(flatten)
        1    0.000    0.000    0.276    0.276 tensor.py:1(<module>)
        1    0.000    0.000    0.276    0.276 slice.py:1(<module>)
     2163    0.006    0.000    0.275    0.000 <frozen importlib._bootstrap_external>:727(_compile_bytecode)
        1    0.000    0.000    0.272    0.272 wannier90.py:1(<module>)
     2163    0.265    0.000    0.265    0.000 {built-in method marshal.loads}
        1    0.000    0.000    0.265    0.265 simplify.py:1(<module>)
        1    0.000    0.000    0.264    0.264 override.py:1(<module>)
        1    0.000    0.000    0.264    0.264 __init__.py:80(do_override)
        1    0.000    0.000    0.264    0.264 __init__.py:63(ensure_local_distutils)
  2000000    0.262    0.000    0.262    0.000 __init__.py:89(annotate)
        1    0.000    0.000    0.262    0.262 matexpr.py:1(<module>)
        2    0.000    0.000    0.261    0.131 quantize.py:1(<module>)
   166077    0.114    0.000    0.258    0.000 _tensor_str.py:176(format)
        1    0.000    0.000    0.253    0.253 sympify.py:1(<module>)
        1    0.000    0.000    0.253    0.253 _distn_infrastructure.py:1(<module>)
        1    0.003    0.003    0.253    0.253 {built-in method torch._C._initExtension}
        1    0.000    0.000    0.251    0.251 _ndimage_api.py:1(<module>)
1008193/1008188    0.251    0.000    0.251    0.000 {built-in method builtins.iter}
        4    0.000    0.000    0.247    0.062 _base.py:1(<module>)
        1    0.000    0.000    0.246    0.246 symbolic_opset11.py:1(<module>)
   182827    0.244    0.000    0.244    0.000 {method 'detach' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.238    0.238 maggroups.py:1(<module>)
        1    0.000    0.000    0.237    0.237 matmul.py:1(<module>)
        2    0.000    0.000    0.236    0.118 _matfuncs.py:1(<module>)
        6    0.000    0.000    0.235    0.039 linear_relu.py:1(<module>)
  1043875    0.227    0.000    0.227    0.000 {function _ParameterMeta.__instancecheck__ at 0x146ac7fcb9c0}
        6    0.000    0.000    0.227    0.038 conv.py:1(<module>)
        2    0.000    0.000    0.224    0.112 parser.py:1(<module>)
     6075    0.011    0.000    0.218    0.000 _tensor.py:920(__iter__)
   206894    0.214    0.000    0.214    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    18789    0.173    0.000    0.213    0.000 module.py:437(__init__)
        2    0.000    0.000    0.213    0.106 text.py:1(<module>)
    68968    0.040    0.000    0.213    0.000 _ufunc_config.py:430(__enter__)
        1    0.000    0.000    0.211    0.211 expr.py:1(<module>)
        1    0.000    0.000    0.207    0.207 distributed_c10d.py:1(<module>)
        1    0.000    0.000    0.205    0.205 base_events.py:1(<module>)
        1    0.000    0.000    0.204    0.204 blas.py:1(<module>)
        1    0.000    0.000    0.202    0.202 _multicomp.py:1(<module>)
    68968    0.043    0.000    0.202    0.000 _ufunc_config.py:435(__exit__)
        1    0.000    0.000    0.201    0.201 _qmc.py:1(<module>)
        2    0.000    0.000    0.198    0.099 dense.py:1(<module>)
     6075    0.197    0.000    0.197    0.000 {method 'unbind' of 'torch._C._TensorBase' objects}
    21988    0.075    0.000    0.195    0.000 module.py:539(register_parameter)
        5    0.000    0.000    0.195    0.039 errors.py:1(<module>)
      245    0.000    0.000    0.193    0.001 _docscrape.py:579(__init__)
        1    0.000    0.000    0.189    0.189 _sputils.py:1(<module>)
        1    0.000    0.000    0.187    0.187 matrixbase.py:1(<module>)
        2    0.000    0.000    0.185    0.092 _util.py:1(<module>)
        1    0.000    0.000    0.183    0.183 request.py:1(<module>)
        1    0.000    0.000    0.182    0.182 _windows.py:1(<module>)
        3    0.000    0.000    0.180    0.060 _basic.py:1(<module>)
        1    0.000    0.000    0.178    0.178 rcsetup.py:1(<module>)
        1    0.000    0.000    0.173    0.173 _diagnostic.py:1(<module>)
      251    0.001    0.000    0.172    0.001 _docscrape.py:140(__init__)
  1003823    0.169    0.000    0.169    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.168    0.168 client.py:1(<module>)
        1    0.000    0.000    0.164    0.164 products.py:1(<module>)
        1    0.000    0.000    0.163    0.163 _morestats.py:1(<module>)
        1    0.000    0.000    0.161    0.161 _array_api.py:1(<module>)
        1    0.000    0.000    0.155    0.155 _minimize.py:1(<module>)
        1    0.000    0.000    0.155    0.155 _script.py:1(<module>)
        1    0.000    0.000    0.154    0.154 summations.py:1(<module>)
        3    0.000    0.000    0.154    0.051 numbers.py:1(<module>)
     3037    0.153    0.000    0.153    0.000 {built-in method torch.masked_select}
        1    0.000    0.000    0.153    0.153 textpath.py:1(<module>)
        1    0.000    0.000    0.152    0.152 _rotation_groups.py:1(<module>)
        1    0.000    0.000    0.151    0.151 _infra.py:1(<module>)
  1000000    0.150    0.000    0.150    0.000 optimizer.py:249(_optimizer_step_code)
        2    0.000    0.000    0.149    0.075 _compression.py:113(readall)
        1    0.000    0.000    0.144    0.144 hierarchy.py:1(<module>)
       19    0.001    0.000    0.140    0.007 para4tb.py:118(init_para)
        1    0.000    0.000    0.139    0.139 algebraicfield.py:1(<module>)
   144500    0.041    0.000    0.137    0.000 {built-in method builtins.next}
        1    0.000    0.000    0.136    0.136 const_fold.py:1(<module>)
     3037    0.135    0.000    0.135    0.000 {built-in method torch.isfinite}
        1    0.000    0.000    0.135    0.135 bz2.py:157(read)
        4    0.000    0.000    0.135    0.034 random.py:1(<module>)
        1    0.000    0.000    0.135    0.135 _linprog.py:1(<module>)
        9    0.000    0.000    0.133    0.015 _compression.py:72(read)
        1    0.000    0.000    0.133    0.133 ode.py:1(<module>)
       39    0.133    0.003    0.133    0.003 {method 'decompress' of '_bz2.BZ2Decompressor' objects}
      251    0.004    0.000    0.132    0.001 _docscrape.py:388(_parse)
        2    0.000    0.000    0.130    0.065 function.py:1(<module>)
        1    0.000    0.000    0.129    0.129 datapipe.py:1(<module>)
        1    0.000    0.000    0.128    0.128 formatter.py:1(<module>)
        1    0.000    0.000    0.128    0.128 mathtext.py:1(<module>)
        2    0.000    0.000    0.128    0.064 scanner.py:1(<module>)
        1    0.000    0.000    0.126    0.126 tokens.py:1(<module>)
   137936    0.113    0.000    0.124    0.000 _ufunc_config.py:132(geterr)
        1    0.000    0.000    0.122    0.122 feedparser.py:1(<module>)
        1    0.000    0.000    0.122    0.122 fontconfig_pattern.py:1(<module>)
        2    0.000    0.000    0.120    0.060 events.py:1(<module>)
        1    0.000    0.000    0.120    0.120 dbapi2.py:1(<module>)
        1    0.000    0.000    0.117    0.117 _filters.py:1(<module>)
        1    0.000    0.000    0.116    0.116 cmd.py:1(<module>)
        1    0.000    0.000    0.116    0.116 blocking_input.py:1(<module>)
        4    0.000    0.000    0.115    0.029 basic.py:1(<module>)
        1    0.000    0.000    0.115    0.115 mul.py:1(<module>)
        1    0.000    0.000    0.112    0.112 index_tricks.py:1(<module>)
        1    0.000    0.000    0.111    0.111 _policybase.py:1(<module>)
        1    0.000    0.000    0.110    0.110 _recursive.py:1(<module>)
        4    0.000    0.000    0.108    0.027 eigen.py:1(<module>)
        1    0.000    0.000    0.108    0.108 composition.py:1(<module>)
        1    0.000    0.000    0.105    0.105 _continuous_distns.py:1(<module>)
        1    0.000    0.000    0.105    0.105 Image.py:1(<module>)
        7    0.000    0.000    0.105    0.015 common.py:1(<module>)
        2    0.000    0.000    0.103    0.052 fake_quantize.py:1(<module>)
    72019    0.039    0.000    0.102    0.000 contextlib.py:141(__exit__)
        1    0.000    0.000    0.102    0.102 _delegation.py:1(<module>)
        1    0.000    0.000    0.100    0.100 _tensor.py:1(<module>)
    72019    0.029    0.000    0.100    0.000 contextlib.py:132(__enter__)
        1    0.000    0.000    0.096    0.096 compat.py:1(<module>)
    72019    0.031    0.000    0.094    0.000 contextlib.py:284(helper)
        1    0.000    0.000    0.093    0.093 limits.py:1(<module>)
        1    0.000    0.000    0.093    0.093 memory.py:1(<module>)
      110    0.000    0.000    0.092    0.001 linecache.py:36(getlines)
       51    0.000    0.000    0.092    0.002 linecache.py:80(updatecache)
        1    0.000    0.000    0.092    0.092 _mio.py:1(<module>)
        1    0.000    0.000    0.091    0.091 _memory_viz.py:1(<module>)
        1    0.000    0.000    0.090    0.090 _rgi.py:1(<module>)
       14    0.000    0.000    0.090    0.006 tokenize.py:392(open)
        1    0.000    0.000    0.090    0.090 computed_entries.py:1(<module>)
     6407    0.005    0.000    0.089    0.000 __init__.py:272(_compile)
        1    0.000    0.000    0.089    0.089 backend_bases.py:1(<module>)
        1    0.000    0.000    0.089    0.089 para4tb.py:73(__get_TB_fix_data)
        1    0.000    0.000    0.088    0.088 _root.py:1(<module>)
       30    0.000    0.000    0.088    0.003 tokenize.py:299(detect_encoding)
       36    0.000    0.000    0.088    0.002 tokenize.py:323(read_or_stop)
       20    0.088    0.004    0.088    0.004 {method 'readline' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.087    0.087 point.py:1(<module>)
       10    0.087    0.009    0.087    0.009 {orjson.loads}
   166077    0.086    0.000    0.086    0.000 {method '__format__' of 'float' objects}
        3    0.000    0.000    0.086    0.029 serialization.py:1(<module>)
        1    0.000    0.000    0.085    0.085 find_first_use_of_broken_modules.py:1(<module>)
        1    0.000    0.000    0.085    0.085 pc_groups.py:1(<module>)
     2500    0.002    0.000    0.085    0.000 inspect.py:3270(signature)
    21988    0.029    0.000    0.085    0.000 parameter.py:30(__new__)
        1    0.000    0.000    0.084    0.084 entity.py:1(<module>)
        1    0.000    0.000    0.084    0.084 category.py:1(<module>)
        2    0.000    0.000    0.084    0.042 observer.py:1(<module>)
3228/2522    0.014    0.000    0.084    0.000 inspect.py:2422(_signature_from_callable)
       97    0.001    0.000    0.083    0.001 _array_api.py:806(decorator)
     2500    0.002    0.000    0.083    0.000 inspect.py:3016(from_callable)
        1    0.000    0.000    0.083    0.083 sparse_adam.py:1(<module>)
        1    0.000    0.000    0.083    0.083 _functional.py:1(<module>)
        1    0.000    0.000    0.082    0.082 reader.py:1(<module>)
        1    0.000    0.000    0.082    0.082 single.py:1(<module>)
        1    0.000    0.000    0.081    0.081 periodic_table.py:1(<module>)
      295    0.001    0.000    0.081    0.000 _compiler.py:738(compile)
        1    0.000    0.000    0.080    0.080 autograd_function.py:1(<module>)
        1    0.000    0.000    0.080    0.080 power.py:1(<module>)
        3    0.000    0.000    0.079    0.026 linalg.py:1(<module>)
        1    0.000    0.000    0.078    0.078 package_exporter.py:1(<module>)
        1    0.000    0.000    0.078    0.078 groups.py:1(<module>)
        1    0.000    0.000    0.078    0.078 numerictypes.py:1(<module>)
        1    0.000    0.000    0.077    0.077 image.py:1(<module>)
        1    0.000    0.000    0.077    0.077 Periodicity_System.py:1(<module>)
       84    0.000    0.000    0.077    0.001 linecache.py:26(getline)
        1    0.000    0.000    0.076    0.076 polyclasses.py:1(<module>)
        1    0.000    0.000    0.076    0.076 _kde.py:1(<module>)
   137900    0.047    0.000    0.075    0.000 _ufunc_config.py:452(_no_nep50_warning)
        2    0.000    0.000    0.075    0.037 utilities.py:1(<module>)
        3    0.000    0.000    0.074    0.025 solvers.py:1(<module>)
        1    0.000    0.000    0.073    0.073 pretty.py:1(<module>)
      110    0.002    0.000    0.073    0.001 _distn_infrastructure.py:1863(__init__)
        1    0.000    0.000    0.072    0.072 _minpack_py.py:1(<module>)
        2    0.000    0.000    0.072    0.036 _parser.py:1(<module>)
        1    0.000    0.000    0.071    0.071 header.py:1(<module>)
        1    0.000    0.000    0.071    0.071 csv.py:1(<module>)
        2    0.000    0.000    0.070    0.035 traverse.py:1(<module>)
   206887    0.070    0.000    0.070    0.000 fromnumeric.py:72(<dictcomp>)
      531    0.000    0.000    0.070    0.000 __init__.py:225(compile)
   138396    0.068    0.000    0.068    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.068    0.068 frontend.py:1(<module>)
        1    0.000    0.000    0.068    0.068 __init__.py:128(_check_capability)
        2    0.000    0.000    0.067    0.033 path.py:1(<module>)
        2    0.000    0.000    0.066    0.033 _ops.py:1(<module>)
     3025    0.041    0.000    0.066    0.000 inspect.py:867(cleandoc)
        2    0.000    0.000    0.066    0.033 quantization_mappings.py:1(<module>)
        1    0.000    0.000    0.065    0.065 __init__.py:155(_check_versions)
        1    0.000    0.000    0.065    0.065 minimize_trustregion_constr.py:1(<module>)
      130    0.000    0.000    0.064    0.000 dataclasses.py:1210(wrap)
      130    0.005    0.000    0.064    0.000 dataclasses.py:885(_process_class)
        1    0.000    0.000    0.064    0.064 trigsimp.py:1(<module>)
    72019    0.052    0.000    0.063    0.000 contextlib.py:104(__init__)
       16    0.000    0.000    0.063    0.004 traceback.py:220(extract_stack)
       11    0.000    0.000    0.063    0.006 artist.py:1613(kwdoc)
       16    0.000    0.000    0.063    0.004 traceback.py:375(extract)
       16    0.000    0.000    0.063    0.004 traceback.py:397(_extract_from_extended_frame_gen)
        2    0.000    0.000    0.063    0.031 bsplines.py:1(<module>)
      181    0.000    0.000    0.062    0.000 traceback.py:316(line)
        1    0.000    0.000    0.062    0.062 _shgo.py:1(<module>)
     1400    0.005    0.000    0.062    0.000 _docscrape.py:201(_read_to_next_section)
        1    0.000    0.000    0.061    0.061 lattice.py:1(<module>)
        1    0.000    0.000    0.061    0.061 _measurements.py:1(<module>)
     2667    0.003    0.000    0.060    0.000 <frozen importlib._bootstrap>:169(__enter__)
     1444    0.002    0.000    0.060    0.000 _docscrape.py:212(_read_sections)
        6    0.000    0.000    0.060    0.010 rnn.py:1(<module>)
       63    0.001    0.000    0.059    0.001 _axis_nan_policy.py:418(axis_nan_policy_decorator)
        1    0.000    0.000    0.059    0.059 defmatrix.py:1(<module>)
        1    0.054    0.054    0.059    0.059 para4tb.py:55(__get_values_and_index)
        1    0.000    0.000    0.058    0.058 plot.py:1(<module>)
        2    0.000    0.000    0.058    0.029 main.py:1(<module>)
        1    0.000    0.000    0.057    0.057 sslproto.py:1(<module>)
     2632    0.002    0.000    0.057    0.000 inspect.py:848(getdoc)
        1    0.000    0.000    0.057    0.057 io.py:1(<module>)
        1    0.000    0.000    0.057    0.057 __init__.py:645(device_count)
        1    0.000    0.000    0.057    0.057 __init__.py:616(_device_count_nvml)
        1    0.045    0.045    0.056    0.056 __init__.py:539(_raw_device_count_nvml)
    21988    0.056    0.000    0.056    0.000 {built-in method _make_subclass}
        2    0.000    0.000    0.055    0.027 inverse.py:1(<module>)
        1    0.001    0.001    0.054    0.054 groups.py:293(SpaceGroup)
        1    0.000    0.000    0.054    0.054 PngImagePlugin.py:1(<module>)
      130    0.000    0.000    0.054    0.000 dataclasses.py:1193(dataclass)
        1    0.000    0.000    0.053    0.053 tags.py:1(<module>)
        1    0.000    0.000    0.053    0.053 _multivariate.py:1(<module>)
      295    0.001    0.000    0.053    0.000 _parser.py:970(parse)
     2005    0.016    0.000    0.053    0.000 inspect.py:2327(_signature_from_function)
        1    0.000    0.000    0.053    0.053 iterables.py:1(<module>)
        1    0.000    0.000    0.052    0.052 _mio5.py:1(<module>)
        1    0.000    0.000    0.052    0.052 collections.py:1(<module>)
        1    0.000    0.000    0.052    0.052 uarray.py:1(<module>)
        1    0.000    0.000    0.051    0.051 bandstructure.py:1(<module>)
        1    0.000    0.000    0.051    0.051 polyhedron.py:1(<module>)
        1    0.000    0.000    0.051    0.051 symbolic_caffe2.py:1(<module>)
  877/295    0.003    0.000    0.051    0.000 _parser.py:447(_parse_sub)
        1    0.000    0.000    0.050    0.050 _svds.py:1(<module>)
        1    0.000    0.000    0.050    0.050 coord.py:1(<module>)
        1    0.000    0.000    0.050    0.050 _pickle.py:1(<module>)
      462    0.001    0.000    0.050    0.000 basic.py:212(__init_subclass__)
 1297/316    0.018    0.000    0.050    0.000 _parser.py:507(_parse)
        1    0.000    0.000    0.049    0.049 pyfunctorch.py:1(<module>)
        1    0.000    0.000    0.049    0.049 numeric.py:1(<module>)
      463    0.022    0.000    0.049    0.000 assumptions.py:614(_prepare_class_assumptions)
     4862    0.048    0.000    0.049    0.000 <frozen importlib._bootstrap>:100(acquire)
        2    0.000    0.000    0.049    0.024 subprocess.py:1(<module>)
        1    0.000    0.000    0.049    0.049 ivp.py:1(<module>)
13053/11836    0.011    0.000    0.049    0.000 {built-in method __new__ of type object at 0x864300}
       68    0.000    0.000    0.049    0.001 _util.py:1195(decorator)
        1    0.000    0.000    0.048    0.048 lapack.py:1(<module>)
     2361    0.009    0.000    0.048    0.000 <frozen importlib._bootstrap>:493(_init_module_attrs)
        1    0.000    0.000    0.048    0.048 formal.py:1(<module>)
        1    0.000    0.000    0.048    0.048 uuid.py:1(<module>)
        1    0.000    0.000    0.048    0.048 _type_aliases.py:1(<module>)
        1    0.000    0.000    0.047    0.047 _svdp.py:1(<module>)
        1    0.000    0.000    0.047    0.047 _helper.py:1(<module>)
       11    0.001    0.000    0.047    0.004 artist.py:1386(pprint_setters)
        1    0.000    0.000    0.047    0.047 multiarray.py:1(<module>)
        4    0.000    0.000    0.046    0.012 transforms.py:1(<module>)
        2    0.000    0.000    0.046    0.023 abc.py:1(<module>)
        1    0.000    0.000    0.046    0.046 gumbel.py:1(<module>)
        1    0.000    0.000    0.046    0.046 cli.py:1(<module>)
       20    0.000    0.000    0.045    0.002 container.py:580(__init__)
      449    0.001    0.000    0.045    0.000 __init__.py:80(decomposition_decorator)
      521    0.005    0.000    0.044    0.000 _docscrape.py:224(_parse_param_list)
       20    0.000    0.000    0.044    0.002 container.py:631(__iadd__)
       20    0.001    0.000    0.044    0.002 container.py:650(extend)
        1    0.000    0.000    0.044    0.044 _utils_internal.py:1(<module>)
       87    0.000    0.000    0.043    0.000 dispatcher.py:178(add)
      463    0.009    0.000    0.043    0.000 doccer.py:29(docformat)
        1    0.000    0.000    0.043    0.043 artist.py:1(<module>)
        2    0.000    0.000    0.043    0.022 operations.py:1(<module>)
        1    0.000    0.000    0.043    0.043 matpow.py:1(<module>)
       87    0.000    0.000    0.043    0.000 dispatcher.py:222(reorder)
     3220    0.003    0.000    0.043    0.000 container.py:639(append)
        1    0.000    0.000    0.043    0.043 npyio.py:1(<module>)
        2    0.000    0.000    0.043    0.021 distributed.py:1(<module>)
        1    0.000    0.000    0.042    0.042 _funcs.py:1(<module>)
        2    0.000    0.000    0.042    0.021 fnmatch.py:1(<module>)
     2700    0.007    0.000    0.042    0.000 textwrap.py:419(dedent)
        2    0.000    0.000    0.042    0.021 fft.py:1(<module>)
        2    0.000    0.000    0.042    0.021 laplace.py:1(<module>)
       91    0.002    0.000    0.042    0.000 enum.py:466(__new__)
        1    0.000    0.000    0.041    0.041 band.py:29(get_data)
        1    0.000    0.000    0.041    0.041 band_data_in.py:13(__init__)
        1    0.000    0.000    0.041    0.041 band_data_in.py:29(__module_choose)
        1    0.001    0.001    0.041    0.041 band_data_in.py:36(__get_dat_content)
        1    0.000    0.000    0.041    0.041 evalf.py:1(<module>)
    18809    0.041    0.000    0.041    0.000 {built-in method torch._C._log_api_usage_once}
        1    0.000    0.000    0.040    0.040 secrets.py:1(<module>)
        1    0.000    0.000    0.040    0.040 _plotutils.py:1(<module>)
        1    0.000    0.000    0.040    0.040 gmpy.py:1(<module>)
        1    0.000    0.000    0.040    0.040 pyprojecttoml.py:1(<module>)
        1    0.000    0.000    0.039    0.039 finitefield.py:1(<module>)
        1    0.000    0.000    0.039    0.039 _apply_pyprojecttoml.py:1(<module>)
      131    0.001    0.000    0.039    0.000 _distn_infrastructure.py:830(_construct_doc)
        1    0.000    0.000    0.039    0.039 mg_operation.py:1(<module>)
      550    0.001    0.000    0.038    0.000 _pytree.py:194(tree_map)
   173101    0.035    0.000    0.038    0.000 {built-in method builtins.max}
        1    0.000    0.000    0.038    0.038 integrals.py:1(<module>)
        1    0.012    0.012    0.038    0.038 band_data_in.py:71(get_band)
        1    0.000    0.000    0.038    0.038 graph_module.py:1(<module>)
     6480    0.038    0.000    0.038    0.000 {built-in method torch.zeros_like}
        2    0.000    0.000    0.038    0.019 domainmatrix.py:1(<module>)
        2    0.000    0.000    0.037    0.019 callable.py:1(<module>)
        3    0.000    0.000    0.037    0.012 reductions.py:1(<module>)
        1    0.000    0.000    0.037    0.037 _modified.py:1(<module>)
        4    0.000    0.000    0.037    0.009 graph.py:1(<module>)
        1    0.000    0.000    0.037    0.037 _discrete_distns.py:1(<module>)
     5425    0.015    0.000    0.037    0.000 _docscrape.py:67(read_to_condition)
      421    0.002    0.000    0.037    0.000 dataclasses.py:413(_create_fn)
        1    0.000    0.000    0.037    0.037 std.py:1(<module>)
        1    0.000    0.000    0.036    0.036 basis.py:1(<module>)
        2    0.000    0.000    0.036    0.018 overrides.py:1(<module>)
     4326    0.013    0.000    0.036    0.000 <frozen importlib._bootstrap_external>:437(cache_from_source)
     1002    0.007    0.000    0.035    0.000 enum.py:233(__set_name__)
        1    0.000    0.000    0.035    0.035 py3k.py:1(<module>)
        1    0.000    0.000    0.035    0.035 _ode.py:1(<module>)
        1    0.000    0.000    0.035    0.035 tempfile.py:1(<module>)
   137937    0.035    0.000    0.035    0.000 {built-in method numpy.seterrobj}
        1    0.000    0.000    0.035    0.035 _conversion.py:1(<module>)
    21317    0.013    0.000    0.034    0.000 <frozen importlib._bootstrap_external>:126(_path_join)
        2    0.000    0.000    0.034    0.017 markers.py:1(<module>)
        2    0.000    0.000    0.034    0.017 modules.py:1(<module>)
      376    0.000    0.000    0.034    0.000 __init__.py:686(__getitem__)
      3/2    0.000    0.000    0.034    0.017 pyplot.py:216(switch_backend)
        1    0.000    0.000    0.034    0.034 _entry_points.py:1(<module>)
        1    0.000    0.000    0.033    0.033 _testutils.py:1(<module>)
       28    0.013    0.000    0.033    0.001 __init__.py:785(_rc_params_in_file)
        2    0.000    0.000    0.033    0.017 __init__.py:181(_lazy_call)
        2    0.000    0.000    0.033    0.017 traceback.py:213(format_stack)
        1    0.000    0.000    0.033    0.033 analyzer.py:1(<module>)
     3037    0.033    0.000    0.033    0.000 {method 'min' of 'torch._C._TensorBase' objects}
      550    0.000    0.000    0.033    0.000 _pytree.py:196(<listcomp>)
        1    0.000    0.000    0.033    0.033 minpoly.py:1(<module>)
        1    0.000    0.000    0.033    0.033 _filter_design.py:1(<module>)
        2    0.000    0.000    0.032    0.016 pyplot.py:276(backend_mod)
      592    0.003    0.000    0.032    0.000 __init__.py:31(_add_op_to_registry)
        2    0.000    0.000    0.032    0.016 context.py:1(<module>)
        1    0.000    0.000    0.032    0.032 kl.py:1(<module>)
      454    0.000    0.000    0.031    0.000 __init__.py:127(register)
       26    0.000    0.000    0.031    0.001 _jit_internal.py:847(_check_overload_body)
       26    0.000    0.000    0.031    0.001 _sources.py:119(parse_def)
        1    0.000    0.000    0.031    0.031 forward_ad.py:1(<module>)
        1    0.000    0.000    0.031    0.031 _linprog_ip.py:1(<module>)
     3969    0.002    0.000    0.031    0.000 _docscrape.py:77(read_to_next_empty_line)
        1    0.000    0.000    0.031    0.031 archive_util.py:1(<module>)
     4220    0.014    0.000    0.030    0.000 _docscrape.py:168(_is_at_section)
     9111    0.008    0.000    0.029    0.000 _tensor_str.py:94(tensor_totype)
     1465    0.005    0.000    0.029    0.000 _ops.py:447(__getattr__)
     3220    0.003    0.000    0.029    0.000 container.py:614(__setitem__)
        1    0.000    0.000    0.029    0.029 net_min_base.py:1(<module>)
   176208    0.029    0.000    0.029    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
    40776    0.029    0.000    0.029    0.000 module.py:1618(remove_from)
        1    0.000    0.000    0.029    0.029 factor_.py:1(<module>)
      398    0.003    0.000    0.029    0.000 _util.py:504(getfullargspec_no_self)
        3    0.000    0.000    0.029    0.010 __init__.py:342(__init__)
       26    0.000    0.000    0.029    0.001 _sources.py:11(get_source_lines_and_file)
        3    0.029    0.010    0.029    0.010 {built-in method _ctypes.dlopen}
   206993    0.028    0.000    0.028    0.000 {built-in method numpy.asanyarray}
       26    0.000    0.000    0.028    0.001 inspect.py:1243(getsourcelines)
    30805    0.010    0.000    0.028    0.000 {built-in method builtins.setattr}
     3037    0.028    0.000    0.028    0.000 {built-in method torch.ceil}
        1    0.000    0.000    0.028    0.028 core.py:164(load_base_library)
        1    0.000    0.000    0.028    0.028 core.py:196(read_style_directory)
        2    0.000    0.000    0.028    0.014 _backend.py:1(<module>)
        1    0.000    0.000    0.028    0.028 _isotonic.py:1(<module>)
        1    0.000    0.000    0.028    0.028 _mstats_basic.py:1(<module>)
        1    0.000    0.000    0.028    0.028 symbolic_helper.py:1(<module>)
        1    0.000    0.000    0.028    0.028 gradcheck.py:1(<module>)
        1    0.000    0.000    0.027    0.027 _tokenizer.py:1(<module>)
     4486    0.002    0.000    0.027    0.000 <frozen importlib._bootstrap>:392(cached)
   275874    0.027    0.000    0.027    0.000 {built-in method numpy.geterrobj}
        1    0.000    0.000    0.027    0.027 ask.py:1(<module>)
       26    0.000    0.000    0.027    0.001 __init__.py:859(rc_params_from_file)
        1    0.000    0.000    0.027    0.027 galoisgroups.py:1(<module>)
   206850    0.027    0.000    0.027    0.000 fromnumeric.py:2416(_all_dispatcher)
        1    0.000    0.000    0.027    0.027 legend.py:1(<module>)
        1    0.000    0.000    0.027    0.027 worker.py:1(<module>)
        1    0.000    0.000    0.027    0.027 _spherical_voronoi.py:1(<module>)
        1    0.000    0.000    0.027    0.027 axes3d.py:1(<module>)
        1    0.003    0.003    0.026    0.026 _meta_registrations.py:2649(activate_meta)
      295    0.001    0.000    0.026    0.000 _compiler.py:571(_code)
        1    0.000    0.000    0.026    0.026 composer.py:1(<module>)
     3037    0.026    0.000    0.026    0.000 {method 'max' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.026    0.026 combsimp.py:1(<module>)
        1    0.000    0.000    0.026    0.026 symbol.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _root_scalar.py:1(<module>)
        1    0.000    0.000    0.026    0.026 shutil.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _fitpack_impl.py:1(<module>)
        1    0.000    0.000    0.026    0.026 grad_mode.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _distribution_infrastructure.py:1(<module>)
       26    0.000    0.000    0.026    0.001 _util.py:277(decorator)
        1    0.000    0.000    0.026    0.026 singularity_functions.py:1(<module>)
        1    0.000    0.000    0.026    0.026 error_functions.py:1(<module>)
        2    0.000    0.000    0.025    0.013 shape_base.py:1(<module>)
     2323    0.003    0.000    0.025    0.000 <frozen importlib._bootstrap_external>:567(_get_cached)
        1    0.000    0.000    0.025    0.025 _external_properties.py:1(<module>)
        5    0.000    0.000    0.025    0.005 polyhedron.py:34(__new__)
     1111    0.004    0.000    0.025    0.000 typing.py:1336(__init__)
        3    0.000    0.000    0.025    0.008 __init__.py:984(version)
     2018    0.002    0.000    0.025    0.000 _tensor_str.py:195(_scalar_str)
        1    0.000    0.000    0.025    0.025 _linprog_highs.py:1(<module>)
       20    0.000    0.000    0.025    0.001 _jit_internal.py:875(_overload)
        1    0.000    0.000    0.025    0.025 delta_functions.py:1(<module>)
       12    0.002    0.000    0.024    0.002 artist.py:1337(get_setters)
        1    0.000    0.000    0.024    0.024 lambdarepr.py:1(<module>)
        1    0.000    0.000    0.024    0.024 lsq_linear.py:1(<module>)
        1    0.000    0.000    0.024    0.024 contingency.py:1(<module>)
        1    0.000    0.000    0.024    0.024 _rbfinterp.py:1(<module>)
      120    0.001    0.000    0.024    0.000 periodic_table.py:77(__init__)
        1    0.000    0.000    0.024    0.024 ellipse.py:1(<module>)
        2    0.000    0.000    0.024    0.012 polynomial.py:1(<module>)
        2    0.000    0.000    0.024    0.012 __init__.py:12(__getattr__)
     1019    0.024    0.000    0.024    0.000 {method 'tolist' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.024    0.024 assumptions.py:1(<module>)
        1    0.000    0.000    0.024    0.024 hb.py:1(<module>)
        1    0.000    0.000    0.024    0.024 densebasic.py:1(<module>)
        3    0.000    0.000    0.024    0.008 profiler.py:1(<module>)
        2    0.000    0.000    0.024    0.012 sysconfig.py:710(get_config_var)
      4/3    0.000    0.000    0.024    0.008 sysconfig.py:629(get_config_vars)
     3037    0.024    0.000    0.024    0.000 {method 'ne' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.024    0.024 ImagePalette.py:1(<module>)
        1    0.000    0.000    0.024    0.024 equality_constrained_sqp.py:1(<module>)
        1    0.000    0.000    0.024    0.024 _new_distributions.py:1(<module>)
       43    0.000    0.000    0.024    0.001 dispatcher.py:147(_)
        1    0.000    0.000    0.023    0.023 _lil.py:1(<module>)
        1    0.000    0.000    0.023    0.023 sysconfig.py:527(_init_posix)
        3    0.000    0.000    0.023    0.008 _distribution_infrastructure.py:1317(_combine_docs)
      425    0.001    0.000    0.023    0.000 artist.py:1290(get_valid_values)
        1    0.000    0.000    0.023    0.023 pythonmpq.py:1(<module>)
        1    0.000    0.000    0.023    0.023 base_backend.py:1(<module>)
      426    0.001    0.000    0.023    0.000 units.py:153(__init__)
        1    0.000    0.000    0.023    0.023 _upfirdn.py:1(<module>)
        1    0.000    0.000    0.023    0.023 _static.py:1(<module>)
     1747    0.001    0.000    0.023    0.000 artist.py:1356(is_alias)
     2137    0.002    0.000    0.023    0.000 _docscrape.py:573(dedent_lines)
     3037    0.022    0.000    0.022    0.000 {method 'abs' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.022    0.022 vq.py:1(<module>)
        1    0.000    0.000    0.022    0.022 setupcfg.py:1(<module>)
       87    0.000    0.000    0.022    0.000 conflict.py:24(ambiguities)
        1    0.000    0.000    0.022    0.022 font_manager.py:1(<module>)
  583/432    0.000    0.000    0.022    0.000 typing.py:477(__getitem__)
84947/84944    0.019    0.000    0.022    0.000 {method 'join' of 'str' objects}
     6709    0.013    0.000    0.022    0.000 inspect.py:2676(__init__)
       87    0.005    0.000    0.022    0.000 conflict.py:27(<setcomp>)
        3    0.000    0.000    0.022    0.007 __init__.py:625(version)
        3    0.000    0.000    0.022    0.007 __init__.py:598(metadata)
        1    0.000    0.000    0.022    0.022 homomorphisms.py:1(<module>)
        1    0.000    0.000    0.021    0.021 _docscrape.py:1(<module>)
     1411    0.005    0.000    0.021    0.000 library.py:71(impl)
        2    0.000    0.000    0.021    0.011 series.py:1(<module>)
      426    0.011    0.000    0.021    0.000 units.py:163(check_mappings)
       23    0.021    0.001    0.021    0.001 {method 'readlines' of '_io._IOBase' objects}
 9538/251    0.010    0.000    0.021    0.000 copy.py:128(deepcopy)
   256729    0.021    0.000    0.021    0.000 {method 'items' of 'dict' objects}
       35    0.000    0.000    0.021    0.001 core.py:59(_)
      778    0.003    0.000    0.021    0.000 _ops.py:553(__getattr__)
 2251/295    0.009    0.000    0.021    0.000 _compiler.py:37(_compile)
        1    0.000    0.000    0.021    0.021 scimath.py:1(<module>)
       87    0.001    0.000    0.021    0.000 conflict.py:56(ordering)
        1    0.000    0.000    0.021    0.021 bernoulli.py:1(<module>)
        1    0.000    0.000    0.021    0.021 gmpyfinitefield.py:1(<module>)
     3037    0.020    0.000    0.020    0.000 {method 'reshape' of 'torch._C._TensorBase' objects}
      481    0.013    0.000    0.020    0.000 doccer.py:225(indentcount_lines)
        1    0.000    0.000    0.020    0.020 annotations.py:1(<module>)
  502/251    0.003    0.000    0.020    0.000 copy.py:227(_deepcopy_dict)
        5    0.000    0.000    0.020    0.004 _common.py:1(<module>)
        2    0.000    0.000    0.020    0.010 function_base.py:1(<module>)
      131    0.001    0.000    0.020    0.000 _distn_infrastructure.py:749(_construct_argparser)
        2    0.000    0.000    0.020    0.010 bessel.py:1(<module>)
      431    0.002    0.000    0.020    0.000 typing.py:652(Union)
        1    0.000    0.000    0.020    0.020 backend_agg.py:1(<module>)
        5    0.000    0.000    0.020    0.004 pathlib.py:1053(read_text)
        1    0.000    0.000    0.020    0.020 headerregistry.py:1(<module>)
        1    0.000    0.000    0.020    0.020 fromnumeric.py:1(<module>)
        4    0.000    0.000    0.020    0.005 __init__.py:926(read_text)
        1    0.000    0.000    0.019    0.019 _linprog_util.py:1(<module>)
        2    0.000    0.000    0.019    0.010 exponential.py:1(<module>)
        1    0.000    0.000    0.019    0.019 _highs_wrapper.py:1(<module>)
        6    0.000    0.000    0.019    0.003 _typing.py:1(<module>)
      130    0.001    0.000    0.019    0.000 dataclasses.py:530(_init_fn)
        1    0.000    0.000    0.019    0.019 nvfuser_prims.py:1(<module>)
       10    0.000    0.000    0.018    0.002 version.py:1(<module>)
        2    0.000    0.000    0.018    0.009 linsolve.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _odepack_py.py:1(<module>)
        1    0.000    0.000    0.018    0.018 hyperexpand.py:1(<module>)
        1    0.000    0.000    0.018    0.018 least_squares.py:1(<module>)
        2    0.000    0.000    0.018    0.009 _adapters.py:1(<module>)
        1    0.000    0.000    0.018    0.018 lgmres.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _tool.py:1(<module>)
        2    0.000    0.000    0.018    0.009 fuse_modules.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _normalization.py:1(<module>)
        1    0.000    0.000    0.018    0.018 charset.py:1(<module>)
       12    0.000    0.000    0.018    0.001 artist.py:1242(__init__)
       12    0.001    0.000    0.017    0.001 artist.py:1262(get_aliases)
        1    0.000    0.000    0.017    0.017 __init__.py:159(_load_global_deps)
        1    0.000    0.000    0.017    0.017 _support_alternative_backends.py:294(<dictcomp>)
       23    0.000    0.000    0.017    0.001 _support_alternative_backends.py:46(wrapper)
       13    0.000    0.000    0.017    0.001 library.py:32(__init__)
      232    0.001    0.000    0.017    0.000 function.py:164(__init__)
        1    0.000    0.000    0.017    0.017 bz2.py:1(<module>)
        1    0.000    0.000    0.017    0.017 beta.py:1(<module>)
    21317    0.013    0.000    0.017    0.000 <frozen importlib._bootstrap_external>:128(<listcomp>)
       19    0.012    0.001    0.017    0.001 para4tb.py:121(<listcomp>)
        1    0.000    0.000    0.017    0.017 _linprog_rs.py:1(<module>)
        1    0.000    0.000    0.017    0.017 encoders.py:1(<module>)
      121    0.001    0.000    0.017    0.000 __init__.py:259(_make_prim)
     3037    0.011    0.000    0.017    0.000 _tensor_str.py:331(_add_suffixes)
        1    0.000    0.000    0.017    0.017 intersection.py:1(<module>)
        1    0.000    0.000    0.017    0.017 split_utils.py:1(<module>)
        2    0.000    0.000    0.017    0.008 kind.py:1(<module>)
        2    0.000    0.000    0.017    0.008 _aliases.py:1(<module>)
        5    0.000    0.000    0.017    0.003 polyhedron.py:388(<listcomp>)
       50    0.000    0.000    0.017    0.000 iterables.py:2618(minlex)
        1    0.000    0.000    0.017    0.017 _cubature.py:1(<module>)
       26    0.000    0.000    0.017    0.001 inspect.py:1055(findsource)
        6    0.000    0.000    0.016    0.003 _docscrape.py:626(__init__)
        1    0.000    0.000    0.016    0.016 exp_family.py:1(<module>)
        1    0.000    0.000    0.016    0.016 ctx_mp.py:1(<module>)
      251    0.001    0.000    0.016    0.000 _docscrape.py:366(_parse_summary)
       87    0.002    0.000    0.016    0.000 conflict.py:62(<listcomp>)
        1    0.000    0.000    0.016    0.016 half_normal.py:1(<module>)
        1    0.000    0.000    0.016    0.016 iterative.py:1(<module>)
        1    0.000    0.000    0.016    0.016 _tnc.py:1(<module>)
        1    0.000    0.000    0.016    0.016 nonhomogeneous.py:1(<module>)
        1    0.000    0.000    0.016    0.016 expand.py:1(<module>)
        1    0.000    0.000    0.016    0.016 _code_flow.py:1(<module>)
       19    0.001    0.000    0.016    0.001 para4band.py:307(<listcomp>)
      778    0.016    0.000    0.016    0.000 {built-in method torch._C._jit_get_operation}
        1    0.000    0.000    0.016    0.016 jit_utils.py:1(<module>)
        1    0.000    0.000    0.016    0.016 complexes.py:1(<module>)
        1    0.000    0.000    0.016    0.016 chi2.py:1(<module>)
        1    0.000    0.000    0.016    0.016 lines.py:1(<module>)
        1    0.000    0.000    0.016    0.016 subsets.py:1(<module>)
        1    0.000    0.000    0.015    0.015 warnings.py:96(_showwarnmsg)
        1    0.000    0.000    0.015    0.015 warnings.py:20(_showwarnmsg_impl)
     4862    0.010    0.000    0.015    0.000 <frozen importlib._bootstrap>:179(_get_module_lock)
        1    0.000    0.000    0.015    0.015 warnings.py:117(_formatwarnmsg)
        1    0.000    0.000    0.015    0.015 warnings.py:35(_formatwarnmsg_impl)
     6043    0.015    0.000    0.015    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.015    0.015 animation.py:1(<module>)
    68950    0.015    0.000    0.015    0.000 {method 'set' of '_contextvars.ContextVar' objects}
       68    0.015    0.000    0.015    0.000 {built-in method io.open}
        1    0.000    0.000    0.015    0.015 dataframes.py:1(<module>)
     6176    0.002    0.000    0.015    0.000 conflict.py:19(ambiguous)
        1    0.000    0.000    0.015    0.015 _thread_flow.py:1(<module>)
        1    0.000    0.000    0.015    0.015 _validation.py:1(<module>)
        1    0.000    0.000    0.015    0.015 gtk.py:1(<module>)
        1    0.000    0.000    0.015    0.015 _spectral_py.py:1(<module>)
        1    0.000    0.000    0.015    0.015 cm.py:1(<module>)
        1    0.000    0.000    0.015    0.015 data_parallel.py:1(<module>)
     3197    0.009    0.000    0.015    0.000 functools.py:35(update_wrapper)
        1    0.000    0.000    0.015    0.015 _ccallback.py:1(<module>)
     3146    0.010    0.000    0.014    0.000 inspect.py:2962(__init__)
      245    0.001    0.000    0.014    0.000 _docscrape.py:599(__str__)
     2700    0.014    0.000    0.014    0.000 {method 'findall' of 're.Pattern' objects}
      524    0.000    0.000    0.014    0.000 __init__.py:173(search)
        1    0.000    0.000    0.014    0.014 structures.py:1(<module>)
        1    0.000    0.000    0.014    0.014 gzip.py:296(read)
    13223    0.003    0.000    0.014    0.000 conflict.py:43(edge)
        7    0.000    0.000    0.014    0.002 gzip.py:474(read)
        1    0.000    0.000    0.014    0.014 dispatcher.py:1(<module>)
    68960    0.014    0.000    0.014    0.000 _ufunc_config.py:426(__init__)
      232    0.002    0.000    0.014    0.000 function.py:124(arity)
       21    0.000    0.000    0.014    0.001 _distn_infrastructure.py:3319(__init__)
        1    0.000    0.000    0.014    0.014 _lbfgsb_py.py:1(<module>)
        1    0.000    0.000    0.014    0.014 bonds.py:1(<module>)
        1    0.000    0.000    0.014    0.014 bonds.py:21(_load_bond_length_data)
        1    0.000    0.000    0.014    0.014 _thread_flow_location.py:1(<module>)
        1    0.000    0.000    0.014    0.014 conflict.py:1(<module>)
     2163    0.002    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:1146(path_stats)
        2    0.000    0.000    0.013    0.007 gzip.py:467(_read_gzip_header)
        2    0.000    0.000    0.013    0.007 gzip.py:418(_read_gzip_header)
       31    0.000    0.000    0.013    0.000 gzip.py:86(read)
        1    0.000    0.000    0.013    0.013 dir_util.py:1(<module>)
    68950    0.013    0.000    0.013    0.000 {method 'reset' of '_contextvars.ContextVar' objects}
       22    0.000    0.000    0.013    0.001 core.py:620(set_parse_action)
    89506    0.013    0.000    0.013    0.000 {method 'startswith' of 'str' objects}
       22    0.000    0.000    0.013    0.001 core.py:701(<listcomp>)
       26    0.000    0.000    0.013    0.001 core.py:257(_trim_arity)
      248    0.002    0.000    0.013    0.000 _docscrape.py:548(__str__)
      367    0.001    0.000    0.013    0.000 permutations.py:1628(__call__)
      131    0.000    0.000    0.013    0.000 _distn_infrastructure.py:735(_attach_argparser_methods)
     2324    0.003    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:1599(_get_spec)
     1465    0.012    0.000    0.013    0.000 _ops.py:239(__init__)
      110    0.001    0.000    0.013    0.000 _distn_infrastructure.py:1923(_attach_methods)
        1    0.000    0.000    0.013    0.013 radsimp.py:1(<module>)
     4326    0.006    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:132(_path_split)
        1    0.000    0.000    0.012    0.012 hmac.py:1(<module>)
     1456    0.001    0.000    0.012    0.000 _docscrape.py:85(read_to_next_unindented_line)
        1    0.000    0.000    0.012    0.012 generate.py:1(<module>)
     6176    0.006    0.000    0.012    0.000 conflict.py:12(consistent)
        1    0.000    0.000    0.012    0.012 binary.py:1(<module>)
     1241    0.001    0.000    0.012    0.000 __init__.py:655(__setitem__)
    71963    0.010    0.000    0.012    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.012    0.012 gamma_functions.py:1(<module>)
        1    0.000    0.000    0.012    0.012 bdf.py:1(<module>)
     2195    0.002    0.000    0.012    0.000 <frozen importlib._bootstrap>:216(_lock_unlock_module)
     1411    0.012    0.000    0.012    0.000 {built-in method torch._C.impl}
        1    0.000    0.000    0.012    0.012 engine.py:1(<module>)
        1    0.000    0.000    0.012    0.012 polyoptions.py:1(<module>)
      142    0.005    0.000    0.012    0.000 __init__.py:348(namedtuple)
        1    0.000    0.000    0.012    0.012 tz.py:1(<module>)
        1    0.000    0.000    0.012    0.012 _builtins.py:1(<module>)
        1    0.000    0.000    0.012    0.012 facts.py:1(<module>)
      213    0.000    0.000    0.012    0.000 units.py:299(__init__)
       20    0.000    0.000    0.012    0.001 adam.py:14(__init__)
      213    0.000    0.000    0.012    0.000 units.py:318(__new__)
        1    0.000    0.000    0.012    0.012 package_importer.py:1(<module>)
        1    0.012    0.012    0.012    0.012 {built-in method torch.max}
        1    0.000    0.000    0.012    0.012 _csr.py:1(<module>)
       20    0.001    0.000    0.012    0.001 optimizer.py:169(__init__)
    15999    0.008    0.000    0.012    0.000 conflict.py:7(supercedes)
     3879    0.003    0.000    0.012    0.000 <frozen importlib._bootstrap_external>:1421(_path_importer_cache)
        1    0.000    0.000    0.012    0.012 trf.py:1(<module>)
        1    0.000    0.000    0.011    0.011 server_process_global_profiler.py:1(<module>)
       26    0.001    0.000    0.011    0.000 inspect.py:1232(getblock)
     2245    0.005    0.000    0.011    0.000 typing.py:168(_type_check)
     6074    0.009    0.000    0.011    0.000 _python_dispatch.py:86(_disable_current_modes)
        1    0.000    0.000    0.011    0.011 staggered.py:1(<module>)
        8    0.000    0.000    0.011    0.001 __init__.py:368(get_device_capability)
       12    0.000    0.000    0.011    0.001 __init__.py:385(get_device_properties)
       12    0.011    0.001    0.011    0.001 {built-in method torch.cuda._get_device_properties}
        1    0.000    0.000    0.011    0.011 colors.py:1(<module>)
        1    0.000    0.000    0.011    0.011 node.py:1(<module>)
        1    0.000    0.000    0.011    0.011 _manylinux.py:1(<module>)
        1    0.000    0.000    0.011    0.011 _axes.py:71(Axes)
        1    0.000    0.000    0.011    0.011 partitions_.py:1(<module>)
        1    0.000    0.000    0.011    0.011 mod.py:1(<module>)
        1    0.000    0.000    0.011    0.011 type_check.py:1(<module>)
     1503    0.003    0.000    0.011    0.000 tokenize.py:433(_tokenize)
      131    0.000    0.000    0.011    0.000 _distn_infrastructure.py:683(__init__)
    31022    0.011    0.000    0.011    0.000 {method 'split' of 'str' objects}
2164/2161    0.002    0.000    0.011    0.000 <frozen importlib._bootstrap_external>:599(_check_name_wrapper)
       55    0.000    0.000    0.011    0.000 __init__.py:388(inner)
      100    0.002    0.000    0.011    0.000 iterables.py:1165(least_rotation)
    19254    0.006    0.000    0.011    0.000 _parser.py:252(get)
    34455    0.008    0.000    0.011    0.000 _docscrape.py:64(eof)
        1    0.000    0.000    0.011    0.011 locks.py:1(<module>)
        1    0.000    0.000    0.010    0.010 message.py:1(<module>)
     2221    0.010    0.000    0.010    0.000 {method '__exit__' of '_io._IOBase' objects}
        1    0.000    0.000    0.010    0.010 domain.py:1(<module>)
        1    0.000    0.000    0.010    0.010 _compressed.py:1(<module>)
      222    0.002    0.000    0.010    0.000 wrappers.py:191(_out_wrapper)
        1    0.000    0.000    0.010    0.010 libmpf.py:1(<module>)
     8262    0.005    0.000    0.010    0.000 typing.py:1280(__setattr__)
      129    0.000    0.000    0.010    0.000 dataclasses.py:589(_repr_fn)
        1    0.000    0.000    0.010    0.010 _memory_profiler.py:1(<module>)
        1    0.000    0.000    0.010    0.010 discovery.py:1(<module>)
        1    0.000    0.000    0.010    0.010 splitter_base.py:1(<module>)
        1    0.000    0.000    0.010    0.010 _directory_reader.py:1(<module>)
     3310    0.002    0.000    0.010    0.000 __init__.py:178(sub)
        1    0.000    0.000    0.010    0.010 ddm.py:1(<module>)
        1    0.000    0.000    0.010    0.010 actions.py:1(<module>)
        1    0.000    0.000    0.010    0.010 nvfuser_prims.py:806(register_nvprims)
        1    0.000    0.000    0.010    0.010 polyroots.py:1(<module>)
        1    0.000    0.000    0.010    0.010 comments.py:1(<module>)
        1    0.000    0.000    0.010    0.010 loss.py:1(<module>)
        1    0.000    0.000    0.010    0.010 _complex.py:1(<module>)
        1    0.000    0.000    0.010    0.010 timeutils.py:1(<module>)
        1    0.000    0.000    0.009    0.009 _zeros_py.py:1(<module>)
      292    0.001    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:1655(_fill_cache)
      128    0.000    0.000    0.009    0.000 dataclasses.py:625(_cmp_fn)
        1    0.000    0.000    0.009    0.009 _entropy.py:1(<module>)
        1    0.000    0.000    0.009    0.009 _differentiable_functions.py:1(<module>)
      403    0.001    0.000    0.009    0.000 <frozen abc>:105(__new__)
      191    0.007    0.000    0.009    0.000 {built-in method builtins.eval}
        1    0.000    0.000    0.009    0.009 _linesearch.py:1(<module>)
     8189    0.006    0.000    0.009    0.000 _docscrape.py:57(seek_next_non_empty_line)
       36    0.000    0.000    0.009    0.000 __init__.py:893(inner)
        1    0.000    0.000    0.009    0.009 onnx_proto_utils.py:1(<module>)
    68950    0.009    0.000    0.009    0.000 numeric.py:2166(_allclose_dispatcher)
     2324    0.006    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:778(spec_from_file_location)
        1    0.000    0.000    0.009    0.009 _decomp.py:1(<module>)
      292    0.001    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:1408(_path_hooks)
     1019    0.005    0.000    0.009    0.000 _tensor_str.py:243(<listcomp>)
       11    0.000    0.000    0.009    0.001 __init__.py:10(partialclass)
     3037    0.005    0.000    0.009    0.000 forward_ad.py:114(unpack_dual)
     7323    0.006    0.000    0.009    0.000 enum.py:669(__call__)
        2    0.000    0.000    0.009    0.004 fourier.py:1(<module>)
     1465    0.009    0.000    0.009    0.000 {built-in method torch._C._get_operation_overload}
2662/2617    0.002    0.000    0.009    0.000 {built-in method builtins.any}
        2    0.000    0.000    0.009    0.004 readers.py:1(<module>)
      465    0.001    0.000    0.009    0.000 permutations.py:902(__new__)
      300    0.009    0.000    0.009    0.000 {built-in method posix.listdir}
      393    0.001    0.000    0.009    0.000 typing.py:1539(copy_with)
        1    0.000    0.000    0.009    0.009 spglib.py:1(<module>)
     4862    0.007    0.000    0.008    0.000 <frozen importlib._bootstrap>:125(release)
        1    0.000    0.000    0.008    0.008 lambdify.py:1(<module>)
        1    0.000    0.000    0.008    0.008 font_manager.py:1004(json_load)
        1    0.000    0.000    0.008    0.008 _package_pickler.py:1(<module>)
        1    0.000    0.000    0.008    0.008 logging.py:1(<module>)
      257    0.001    0.000    0.008    0.000 typing.py:1530(__getitem__)
     2038    0.008    0.000    0.008    0.000 {built-in method torch._C._dispatch_has_kernel_for_dispatch_key}
        1    0.000    0.000    0.008    0.008 _common.py:17(files)
        1    0.000    0.000    0.008    0.008 _common.py:59(from_package)
        1    0.000    0.000    0.008    0.008 _adapters.py:28(get_resource_reader)
        1    0.000    0.000    0.008    0.008 _adapters.py:151(_native)
        1    0.000    0.000    0.008    0.008 _adapters.py:146(_reader)
        1    0.000    0.000    0.008    0.008 <frozen importlib._bootstrap_external>:1136(get_resource_reader)
      965    0.002    0.000    0.008    0.000 typing_extensions.py:3177(_collect_parameters)
    95906    0.008    0.000    0.008    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.008    0.008 trigonometric.py:1(<module>)
        2    0.000    0.000    0.008    0.004 batchnorm.py:1(<module>)
    12610    0.008    0.000    0.008    0.000 {method 'expandtabs' of 'str' objects}
        1    0.000    0.000    0.008    0.008 fancy_getopt.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _numdiff.py:1(<module>)
      151    0.000    0.000    0.008    0.000 typing.py:692(Optional)
       70    0.001    0.000    0.008    0.000 __init__.py:1364(_preprocess_data)
        2    0.000    0.000    0.008    0.004 base.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _ni_docstrings.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _resampling.py:1(<module>)
        1    0.000    0.000    0.008    0.008 _remove_redundancy.py:1(<module>)
        1    0.000    0.000    0.008    0.008 adadelta.py:1(<module>)
    68950    0.008    0.000    0.008    0.000 numeric.py:2245(_isclose_dispatcher)
      189    0.000    0.000    0.008    0.000 library.py:50(define)
        1    0.000    0.000    0.007    0.007 field.py:1(<module>)
        1    0.000    0.000    0.007    0.007 scatter_gather.py:1(<module>)
        1    0.000    0.000    0.007    0.007 _trustregion_krylov.py:1(<module>)
      189    0.007    0.000    0.007    0.000 {built-in method torch._C.define}
     2163    0.004    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:642(_classify_pyc)
     2667    0.002    0.000    0.007    0.000 <frozen importlib._bootstrap>:173(__exit__)
       97    0.001    0.000    0.007    0.000 __init__.py:427(_make_inplace)
     8157    0.007    0.000    0.007    0.000 {built-in method numpy.array}
        1    0.000    0.000    0.007    0.007 _result.py:1(<module>)
    69018    0.007    0.000    0.007    0.000 multiarray.py:669(result_type)
       93    0.000    0.000    0.007    0.000 pydoc.py:186(getdoc)
        6    0.000    0.000    0.007    0.001 _jit_internal.py:928(_overload_method)
     1318    0.003    0.000    0.007    0.000 enum.py:352(__setitem__)
        1    0.000    0.000    0.007    0.007 patches.py:1(<module>)
        1    0.000    0.000    0.007    0.007 _expm_multiply.py:1(<module>)
    10171    0.005    0.000    0.007    0.000 _docscrape.py:91(peek)
        1    0.000    0.000    0.007    0.007 specifiers.py:1(<module>)
     9689    0.007    0.000    0.007    0.000 {method 'splitlines' of 'str' objects}
       56    0.000    0.000    0.007    0.000 __init__.py:770(_open_file_or_url)
        1    0.000    0.000    0.007    0.007 common.py:8(pyparsing_common)
1062/1021    0.003    0.000    0.007    0.000 sorting.py:10(default_sort_key)
   112/79    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1311(__iter__)
   164/92    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1297(_recalculate)
     2232    0.004    0.000    0.007    0.000 _docscrape.py:475(_str_param_list)
       41    0.001    0.000    0.007    0.000 typing.py:2817(__new__)
     1115    0.001    0.000    0.007    0.000 typing.py:1241(__init__)
        1    0.000    0.000    0.007    0.007 union.py:1(<module>)
        1    0.000    0.000    0.007    0.007 _reqs.py:1(<module>)
       93    0.000    0.000    0.007    0.000 pydoc.py:170(_getdoc)
      748    0.003    0.000    0.007    0.000 dataclasses.py:724(_get_field)
     2603    0.004    0.000    0.007    0.000 inspect.py:735(unwrap)
        1    0.000    0.000    0.007    0.007 specifiers.py:99(Specifier)
        9    0.000    0.000    0.007    0.001 exceptions.py:1(<module>)
        1    0.000    0.000    0.007    0.007 ring_series.py:1(<module>)
        1    0.000    0.000    0.007    0.007 mstats.py:1(<module>)
  515/173    0.001    0.000    0.007    0.000 sorting.py:202(ordered)
        1    0.000    0.000    0.007    0.007 ExifTags.py:1(<module>)
        1    0.000    0.000    0.007    0.007 monkey.py:1(<module>)
        1    0.000    0.000    0.007    0.007 dense_ndim_array.py:1(<module>)
    21761    0.005    0.000    0.006    0.000 _docscrape.py:80(is_empty)
        1    0.000    0.000    0.006    0.006 distribution.py:1(<module>)
     3260    0.001    0.000    0.006    0.000 module.py:2059(parameters)
        1    0.000    0.000    0.006    0.006 rk.py:1(<module>)
       47    0.000    0.000    0.006    0.000 __init__.py:424(_make_elementwise_unary_prim)
      665    0.005    0.000    0.006    0.000 _compiler.py:241(_optimize_charset)
        1    0.000    0.000    0.006    0.006 ElementTree.py:1(<module>)
        3    0.000    0.000    0.006    0.002 _distribution_infrastructure.py:1368(_generate_example)
    14840    0.004    0.000    0.006    0.000 _parser.py:162(__getitem__)
        1    0.000    0.000    0.006    0.006 _artifact.py:1(<module>)
        1    0.000    0.000    0.006    0.006 sg_operation.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _tool_component.py:1(<module>)
      459    0.001    0.000    0.006    0.000 permutations.py:354(list)
        5    0.000    0.000    0.006    0.001 sets.py:1982(__new__)
       21    0.000    0.000    0.006    0.000 _distn_infrastructure.py:3380(_construct_docstrings)
     9305    0.004    0.000    0.006    0.000 typing.py:1229(_is_dunder)
        1    0.000    0.000    0.006    0.006 diophantine.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _lowrank.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _direct_py.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _decomp_lu.py:1(<module>)
     6489    0.004    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:84(_unpack_uint32)
     5726    0.004    0.000    0.006    0.000 _docscrape.py:86(is_unindented)
        1    0.000    0.000    0.006    0.006 tokenize.py:99(_compile)
    28116    0.005    0.000    0.006    0.000 units.py:166(<genexpr>)
        1    0.000    0.000    0.006    0.006 _at.py:1(<module>)
    22106    0.006    0.000    0.006    0.000 _parser.py:231(__next)
       44    0.000    0.000    0.006    0.000 typing.py:2797(_make_nmtuple)
        1    0.000    0.000    0.006    0.006 _run.py:1(<module>)
        1    0.000    0.000    0.006    0.006 line.py:1(<module>)
        1    0.000    0.000    0.006    0.006 axis.py:1(<module>)
     2163    0.003    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:675(_validate_timestamp_pyc)
        1    0.000    0.000    0.006    0.006 rnn.py:340(RNN)
        1    0.000    0.000    0.006    0.006 _codata.py:1(<module>)
    66802    0.006    0.000    0.006    0.000 {method 'strip' of 'str' objects}
     3260    0.001    0.000    0.006    0.000 module.py:2084(named_parameters)
      317    0.001    0.000    0.006    0.000 overrides.py:142(decorator)
        1    0.000    0.000    0.005    0.005 mutable_ndim_array.py:1(<module>)
        1    0.000    0.000    0.005    0.005 _max_len_seq.py:1(<module>)
    30618    0.005    0.000    0.005    0.000 _docscrape.py:43(__getitem__)
      706    0.002    0.000    0.005    0.000 inspect.py:2042(_signature_bound_method)
    30632    0.005    0.000    0.005    0.000 assumptions.py:489(as_property)
     1019    0.005    0.000    0.005    0.000 {built-in method torch.transpose}
    21721    0.005    0.000    0.005    0.000 <frozen importlib._bootstrap>:244(_verbose_message)
     5010    0.001    0.000    0.005    0.000 <frozen abc>:117(__instancecheck__)
 2638/706    0.004    0.000    0.005    0.000 _parser.py:172(getwidth)
        1    0.000    0.000    0.005    0.005 _beartype.py:1(<module>)
      136    0.000    0.000    0.005    0.000 typing.py:1614(__getitem__)
        1    0.000    0.000    0.005    0.005 comparison.py:1(<module>)
      295    0.001    0.000    0.005    0.000 _compiler.py:509(_compile_info)
        1    0.000    0.000    0.005    0.005 _qmvnt.py:1(<module>)
      472    0.001    0.000    0.005    0.000 assumptions.py:469(__init__)
    53199    0.005    0.000    0.005    0.000 {method 'rstrip' of 'str' objects}
     1536    0.004    0.000    0.005    0.000 matrix_element.py:90(__extract_var)
      459    0.001    0.000    0.005    0.000 permutations.py:385(<listcomp>)
      292    0.001    0.000    0.005    0.000 <frozen importlib._bootstrap_external>:1696(path_hook_for_FileFinder)
3977/3797    0.003    0.000    0.005    0.000 sympify.py:124(sympify)
     3260    0.002    0.000    0.005    0.000 module.py:2045(_named_members)
      901    0.001    0.000    0.005    0.000 inspect.py:3032(replace)
        1    0.000    0.000    0.005    0.005 _symbolic_trace.py:1(<module>)
     1477    0.001    0.000    0.005    0.000 typing.py:684(<genexpr>)
        2    0.000    0.000    0.005    0.002 _globals.py:1(<module>)
      700    0.001    0.000    0.005    0.000 colors.py:161(to_rgba)
        1    0.000    0.000    0.005    0.005 result.py:1(<module>)
        1    0.000    0.000    0.005    0.005 _hypotests.py:1(<module>)
      134    0.000    0.000    0.005    0.000 wrappers.py:105(__call__)
        1    0.000    0.000    0.005    0.005 cm.py:53(_gen_cmap_registry)
     1536    0.002    0.000    0.005    0.000 matrix_element.py:41(<listcomp>)
  580/530    0.001    0.000    0.005    0.000 containers.py:54(__new__)
        1    0.000    0.000    0.005    0.005 trf_linear.py:1(<module>)
        1    0.000    0.000    0.005    0.005 pathlib.py:1(<module>)
    93/40    0.000    0.000    0.005    0.000 typing.py:1363(__getitem__)
     7790    0.003    0.000    0.005    0.000 <frozen importlib._bootstrap>:405(parent)
        1    0.000    0.000    0.005    0.005 _location.py:1(<module>)
     1644    0.002    0.000    0.004    0.000 dataclasses.py:665(_is_type)
        1    0.000    0.000    0.004    0.004 wavfile.py:1(<module>)
       81    0.000    0.000    0.004    0.000 docstring.py:77(dedent_interpd)
       68    0.000    0.000    0.004    0.000 _internal.py:31(inner)
     1985    0.002    0.000    0.004    0.000 {built-in method builtins.sorted}
       20    0.003    0.000    0.004    0.000 optimizer.py:489(add_param_group)
       97    0.000    0.000    0.004    0.000 _array_api.py:733(_make_capabilities_note)
     2492    0.002    0.000    0.004    0.000 <frozen importlib._bootstrap>:922(find_spec)
       17    0.000    0.000    0.004    0.000 rcsetup.py:928(validate_cycler)
    13536    0.003    0.000    0.004    0.000 conflict.py:15(<genexpr>)
     2005    0.003    0.000    0.004    0.000 inspect.py:167(get_annotations)
        1    0.000    0.000    0.004    0.004 reduction.py:1(<module>)
        1    0.000    0.000    0.004    0.004 ssl.py:1(<module>)
        1    0.000    0.000    0.004    0.004 routeddecoder.py:1(<module>)
      131    0.002    0.000    0.004    0.000 facts.py:599(deduce_all_facts)
        2    0.000    0.000    0.004    0.002 polyutils.py:1(<module>)
     3220    0.002    0.000    0.004    0.000 module.py:799(compute_should_use_set_data)
       11    0.000    0.000    0.004    0.000 core.py:1152(parse_string)
     6077    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
       29    0.000    0.000    0.004    0.000 __init__.py:439(_make_elementwise_binary_prim)
      428    0.000    0.000    0.004    0.000 rcsetup.py:360(validate_color)
     9982    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1032(__exit__)
        1    0.000    0.000    0.004    0.004 perm_groups.py:1(<module>)
       14    0.000    0.000    0.004    0.000 inspect.py:592(getmembers)
41415/39575    0.004    0.000    0.004    0.000 {built-in method builtins.hash}
     1019    0.004    0.000    0.004    0.000 _tensor_str.py:240(<listcomp>)
       13    0.000    0.000    0.004    0.000 enum.py:874(_convert_)
      459    0.001    0.000    0.004    0.000 permutations.py:433(__init__)
       14    0.001    0.000    0.004    0.000 inspect.py:550(_getmembers)
        1    0.000    0.000    0.004    0.004 graphs.py:1(<module>)
        1    0.000    0.000    0.004    0.004 _tanhsinh.py:1(<module>)
     2597    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:198(cb)
        1    0.002    0.002    0.004    0.004 para4tb.py:45(__get_exp)
        1    0.000    0.000    0.004    0.004 mathtext.py:2275(Parser)
       20    0.002    0.000    0.004    0.000 enum.py:1625(convert_class)
        1    0.000    0.000    0.004    0.004 _invocation.py:1(<module>)
    19564    0.004    0.000    0.004    0.000 {method 'rpartition' of 'str' objects}
     1298    0.004    0.000    0.004    0.000 {built-in method torch._C._dispatch_has_kernel}
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<lambda>)
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<listcomp>)
     2597    0.002    0.000    0.004    0.000 <frozen importlib._bootstrap>:71(__init__)
        1    0.000    0.000    0.004    0.004 interval_arithmetic.py:1(<module>)
        1    0.000    0.000    0.004    0.004 _decomp_svd.py:1(<module>)
       64    0.000    0.000    0.004    0.000 core.py:1449(__add__)
      160    0.001    0.000    0.004    0.000 _docscrape.py:290(_parse_see_also)
        1    0.000    0.000    0.004    0.004 platform.py:1(<module>)
     3037    0.004    0.000    0.004    0.000 {built-in method torch._C._functorch.is_functorch_wrapped_tensor}
     5010    0.001    0.000    0.004    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.004    0.004 helpers.py:1(<module>)
        1    0.000    0.000    0.004    0.004 _solvers.py:1(<module>)
     1602    0.001    0.000    0.004    0.000 __init__.py:163(match)
        1    0.000    0.000    0.004    0.004 _differentialevolution.py:1(<module>)
     9982    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1028(__enter__)
  628/550    0.001    0.000    0.004    0.000 _pytree.py:143(tree_flatten)
       36    0.000    0.000    0.004    0.000 __init__.py:1329(_add_data_doc)
     8132    0.004    0.000    0.004    0.000 {method 'replace' of 'str' objects}
        8    0.000    0.000    0.004    0.000 core.py:5842(__init__)
       65    0.000    0.000    0.004    0.000 core.py:4081(__init__)
     28/7    0.000    0.000    0.004    0.001 core.py:4715(leave_whitespace)
       32    0.001    0.000    0.004    0.000 colors.py:776(from_list)
        1    0.001    0.001    0.004    0.004 symbolic_opset9.py:1(<module>)
     1048    0.003    0.000    0.004    0.000 _ops.py:314(inner)
    58/39    0.000    0.000    0.004    0.000 functools.py:981(__get__)
     8288    0.003    0.000    0.004    0.000 inspect.py:3011(<genexpr>)
       45    0.000    0.000    0.004    0.000 core.py:3146(mayReturnEmpty)
      138    0.000    0.000    0.004    0.000 rcsetup.py:87(f)
      426    0.000    0.000    0.004    0.000 colors.py:129(is_color_like)
     8652    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap_external>:134(<genexpr>)
        1    0.000    0.000    0.004    0.004 _array_like.py:1(<module>)
     2015    0.001    0.000    0.003    0.000 containers.py:60(__getitem__)
    38/19    0.000    0.000    0.003    0.000 core.py:3119(re)
 2209/389    0.000    0.000    0.003    0.000 <frozen abc>:121(__subclasscheck__)
     4952    0.001    0.000    0.003    0.000 permutations.py:320(__missing__)
     2568    0.001    0.000    0.003    0.000 typing.py:159(_type_convert)
       42    0.000    0.000    0.003    0.000 doccer.py:283(decorate)
 2209/389    0.003    0.000    0.003    0.000 {built-in method _abc._abc_subclasscheck}
      278    0.001    0.000    0.003    0.000 overrides.py:83(verify_matching_signatures)
        1    0.000    0.000    0.003    0.003 _methods.py:1(<module>)
      401    0.000    0.000    0.003    0.000 _parser.py:94(closegroup)
       87    0.000    0.000    0.003    0.000 typing.py:483(__getitem__)
        4    0.002    0.001    0.003    0.001 _codata.py:1993(parse_constants_2002to2014)
      436    0.000    0.000    0.003    0.000 core.py:526(copy)
      786    0.001    0.000    0.003    0.000 _builtins.py:161(_register_builtin)
        1    0.000    0.000    0.003    0.003 ops.py:205(add_arithmetic_ops)
2950/2720    0.001    0.000    0.003    0.000 containers.py:56(<genexpr>)
        2    0.000    0.000    0.003    0.002 _helpers.py:1(<module>)
        1    0.000    0.000    0.003    0.003 relational.py:1(<module>)
      370    0.001    0.000    0.003    0.000 colors.py:197(_to_rgba_no_colorcycle)
      129    0.000    0.000    0.003    0.000 typing.py:1585(__getitem__)
   260/11    0.001    0.000    0.003    0.000 core.py:813(_parseNoCache)
      140    0.001    0.000    0.003    0.000 deprecation.py:168(deprecate)
       18    0.000    0.000    0.003    0.000 ops.py:348(_wrap)
     7622    0.003    0.000    0.003    0.000 {method 'rfind' of 'str' objects}
     1513    0.001    0.000    0.003    0.000 sympify.py:514(_sympify)
       18    0.000    0.000    0.003    0.000 rcsetup.py:437(validate_font_properties)
     6266    0.002    0.000    0.003    0.000 misc.py:500(as_int)
      213    0.003    0.000    0.003    0.000 {built-in method builtins.compile}
        1    0.000    0.000    0.003    0.003 monkey.py:72(patch_all)
    63/11    0.000    0.000    0.003    0.000 core.py:4172(parseImpl)
        9    0.000    0.000    0.003    0.000 fontconfig_pattern.py:119(parse)
       16    0.000    0.000    0.003    0.000 util.py:412(_inner)
        1    0.000    0.000    0.003    0.003 monkey.py:93(_patch_distribution_metadata)
       22    0.000    0.000    0.003    0.000 inspect.py:1344(getfullargspec)
       71    0.000    0.000    0.003    0.000 typing.py:701(Literal)
        1    0.000    0.000    0.003    0.003 api.py:1(<module>)
     3514    0.002    0.000    0.003    0.000 copy.py:201(_deepcopy_list)
    10753    0.002    0.000    0.003    0.000 mathtext.py:2847(<genexpr>)
      256    0.000    0.000    0.003    0.000 matrix_element.py:167(__radd__)
        1    0.000    0.000    0.003    0.003 struct.py:1(<module>)
        1    0.000    0.000    0.003    0.003 unix_events.py:1(<module>)
        1    0.000    0.000    0.003    0.003 constraint_registry.py:1(<module>)
        6    0.000    0.000    0.003    0.000 _docscrape.py:680(methods)
       15    0.000    0.000    0.003    0.000 _bunch.py:32(_make_tuple_bunch)
        1    0.000    0.000    0.003    0.003 _pep440.py:1(<module>)
        2    0.000    0.000    0.003    0.001 deprecation.py:208(_inner_deprecate_positional_args)
        1    0.000    0.000    0.003    0.003 rootoftools.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _construct.py:1(<module>)
      436    0.001    0.000    0.003    0.000 copy.py:66(copy)
      100    0.000    0.000    0.003    0.000 iterables.py:1127(rotate_left)
        1    0.000    0.000    0.003    0.003 stringpict.py:1(<module>)
        1    0.000    0.000    0.003    0.003 module.py:1(<module>)
     59/7    0.000    0.000    0.003    0.000 core.py:3923(leave_whitespace)
      239    0.000    0.000    0.003    0.000 rcsetup.py:353(validate_color_for_prop_cycle)
       64    0.000    0.000    0.003    0.000 rcsetup.py:106(<listcomp>)
        1    0.000    0.000    0.003    0.003 hyper.py:1(<module>)
      292    0.001    0.000    0.003    0.000 <frozen zipimport>:64(__init__)
    20723    0.003    0.000    0.003    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.003    0.003 _artifact_change.py:1(<module>)
        1    0.000    0.000    0.003    0.003 hyperbolic.py:1(<module>)
      544    0.000    0.000    0.003    0.000 registration.py:296(wrapper)
   127/59    0.000    0.000    0.003    0.000 core.py:4015(copy)
        3    0.000    0.000    0.003    0.001 __init__.py:958(distribution)
        3    0.000    0.000    0.003    0.001 __init__.py:545(from_name)
        1    0.000    0.000    0.003    0.003 boolalg.py:1(<module>)
       87    0.001    0.000    0.003    0.000 utils.py:25(_toposort)
        2    0.000    0.000    0.003    0.001 _pytree.py:1(<module>)
        9    0.000    0.000    0.003    0.000 util.py:1(<module>)
    93/40    0.000    0.000    0.003    0.000 typing.py:1395(_determine_new_args)
       12    0.000    0.000    0.003    0.000 dataclasses.py:600(_frozen_get_del_attr)
       74    0.000    0.000    0.003    0.000 typing.py:1599(__getitem_inner__)
        1    0.000    0.000    0.003    0.003 table.py:1(<module>)
        1    0.000    0.000    0.003    0.003 configparser.py:1(<module>)
        1    0.000    0.000    0.003    0.003 socket.py:1(<module>)
     4016    0.002    0.000    0.003    0.000 copy.py:243(_keep_alive)
    13576    0.002    0.000    0.003    0.000 {method 'add' of 'set' objects}
     3037    0.003    0.000    0.003    0.000 {built-in method torch._C._get_default_device}
      292    0.001    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:1559(__init__)
        1    0.000    0.000    0.003    0.003 _fit.py:1(<module>)
       64    0.000    0.000    0.003    0.000 util.py:401(replaced_by_pep8)
        2    0.000    0.000    0.003    0.001 spawn.py:1(<module>)
      101    0.000    0.000    0.003    0.000 _meta_registrations.py:33(wrapper)
       69    0.003    0.000    0.003    0.000 {built-in method builtins.dir}
        1    0.000    0.000    0.003    0.003 _stats_mstats_common.py:1(<module>)
     2163    0.003    0.000    0.003    0.000 {built-in method _imp._fix_co_filename}
        1    0.000    0.000    0.003    0.003 _decomp_schur.py:1(<module>)
      140    0.000    0.000    0.003    0.000 core.py:4109(<genexpr>)
       16    0.000    0.000    0.002    0.000 inspect.py:2311(_signature_from_builtin)
      786    0.001    0.000    0.002    0.000 _builtins.py:128(_get_builtin_table)
        1    0.000    0.000    0.002    0.002 structure.py:5581(<dictcomp>)
       21    0.000    0.000    0.002    0.000 _distn_infrastructure.py:3358(_attach_methods)
        1    0.000    0.000    0.002    0.002 _logsumexp.py:1(<module>)
       21    0.000    0.000    0.002    0.000 __init__.py:910(<genexpr>)
       16    0.000    0.000    0.002    0.000 structure.py:5069(__init__)
       24    0.001    0.000    0.002    0.000 util.py:210(_collapse_string_to_ranges)
        1    0.000    0.000    0.002    0.002 _pep440.py:285(Version)
       18    0.000    0.000    0.002    0.000 __init__.py:808(search)
        1    0.000    0.000    0.002    0.002 _decomp_qr.py:1(<module>)
      367    0.001    0.000    0.002    0.000 permutations.py:1323(__mul__)
      431    0.001    0.000    0.002    0.000 typing.py:320(_remove_dups_flatten)
       16    0.000    0.000    0.002    0.000 structure.py:3449(__init__)
        1    0.000    0.000    0.002    0.002 version.py:161(Version)
        1    0.000    0.000    0.002    0.002 _dtype_like.py:1(<module>)
       16    0.000    0.000    0.002    0.000 inspect.py:2177(_signature_fromstr)
        1    0.000    0.000    0.002    0.002 _basinhopping.py:1(<module>)
        7    0.000    0.000    0.002    0.000 core.py:2833(__init__)
       16    0.000    0.000    0.002    0.000 rcsetup.py:843(cycler)
       93    0.000    0.000    0.002    0.000 _compatibility.py:10(mark_back_compat)
        6    0.000    0.000    0.002    0.000 _docscrape.py:694(properties)
       54    0.000    0.000    0.002    0.000 deprecation.py:333(_delete_parameter)
      451    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:164(_path_isdir)
     1465    0.002    0.000    0.002    0.000 {built-in method torch._C._get_schema}
        1    0.000    0.000    0.002    0.002 _decomp_qz.py:1(<module>)
        1    0.000    0.000    0.002    0.002 typing_extensions.py:1(<module>)
      512    0.000    0.000    0.002    0.000 numbers.py:1984(__lt__)
        2    0.000    0.000    0.002    0.001 polynomials.py:1(<module>)
    17100    0.002    0.000    0.002    0.000 {built-in method builtins.issubclass}
       21    0.000    0.000    0.002    0.000 decompositions.py:3288(register_inplace)
        1    0.000    0.000    0.002    0.002 _decomp_cholesky.py:1(<module>)
       78    0.000    0.000    0.002    0.000 typing.py:1772(__class_getitem__)
        1    0.000    0.000    0.002    0.002 residue_ntheory.py:1(<module>)
        1    0.000    0.000    0.002    0.002 pretty_symbology.py:1(<module>)
    10185    0.002    0.000    0.002    0.000 {method 'endswith' of 'str' objects}
        4    0.000    0.000    0.002    0.001 _utils.py:1(<module>)
   127/59    0.000    0.000    0.002    0.000 core.py:4018(<listcomp>)
      605    0.001    0.000    0.002    0.000 _inspect.py:96(getargspec)
     3037    0.002    0.000    0.002    0.000 {built-in method torch._is_functional_tensor}
       15    0.000    0.000    0.002    0.000 core.py:1601(__or__)
    17441    0.002    0.000    0.002    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.002    0.002 Bravais_Lattice.py:1(<module>)
        2    0.000    0.000    0.002    0.001 error.py:1(<module>)
        1    0.000    0.000    0.002    0.002 stateless.py:1(<module>)
        1    0.000    0.000    0.002    0.002 permutations.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _parseaddr.py:1(<module>)
      200    0.000    0.000    0.002    0.000 containers.py:75(__add__)
        1    0.000    0.000    0.002    0.002 pickle.py:1(<module>)
     1193    0.002    0.000    0.002    0.000 _docscrape.py:188(_strip)
       15    0.000    0.000    0.002    0.000 core.py:4399(__init__)
        3    0.000    0.000    0.002    0.001 __init__.py:32(message_from_string)
        1    0.000    0.000    0.002    0.002 _docscrape.py:112(NumpyDocString)
        1    0.000    0.000    0.002    0.002 common_types.py:1(<module>)
        3    0.000    0.000    0.002    0.001 patches.py:1867(pprint_styles)
    17441    0.002    0.000    0.002    0.000 {built-in method _imp.release_lock}
        3    0.000    0.000    0.002    0.001 ctx_mp.py:63(__init__)
        8    0.000    0.000    0.002    0.000 __init__.py:817(lookup)
      165    0.000    0.000    0.002    0.000 typing.py:832(__init__)
       93    0.000    0.000    0.002    0.000 sites.py:38(__init__)
       16    0.000    0.000    0.002    0.000 _functools.py:75(wrapper)
       20    0.000    0.000    0.002    0.000 mul.py:205(flatten)
        8    0.000    0.000    0.002    0.000 __init__.py:823(__init__)
        3    0.000    0.000    0.002    0.001 parser.py:59(parsestr)
     6251    0.001    0.000    0.002    0.000 _parser.py:247(match)
      965    0.002    0.000    0.002    0.000 typing_extensions.py:3092(_has_generic_or_protocol_as_origin)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:2043(_draw)
       59    0.000    0.000    0.002    0.000 core.py:3931(<listcomp>)
        1    0.000    0.000    0.002    0.002 _reporting_descriptor.py:1(<module>)
        2    0.001    0.001    0.002    0.001 _codata.py:2019(parse_constants_2018toXXXX)
        3    0.000    0.000    0.002    0.001 parser.py:41(parse)
        2    0.002    0.001    0.002    0.001 {method 'join' of 'bytes' objects}
        1    0.000    0.000    0.002    0.002 _artifact_location.py:1(<module>)
        2    0.000    0.000    0.002    0.001 decoder.py:332(decode)
      325    0.000    0.000    0.002    0.000 function_base.py:497(add_newdoc)
     5359    0.002    0.000    0.002    0.000 {method 'update' of 'dict' objects}
        2    0.001    0.000    0.002    0.001 decoder.py:343(raw_decode)
        1    0.000    0.000    0.002    0.002 _notification.py:1(<module>)
        1    0.000    0.000    0.002    0.002 pyplot.py:2138(_setup_pyplot_info_docstrings)
       28    0.000    0.000    0.002    0.000 _basic.py:16(_dispatch)
        1    0.000    0.000    0.002    0.002 storage.py:1(<module>)
      125    0.000    0.000    0.002    0.000 cache.py:66(func_wrapper)
      607    0.000    0.000    0.002    0.000 typing.py:1535(<genexpr>)
        1    0.000    0.000    0.002    0.002 _mannwhitneyu.py:1(<module>)
       28    0.000    0.000    0.002    0.000 _backend.py:174(generate_multimethod)
        2    0.000    0.000    0.002    0.001 _add_newdocs.py:1(<module>)
        1    0.000    0.000    0.002    0.002 proxy.py:1(<module>)
        1    0.000    0.000    0.002    0.002 unary.py:1(<module>)
        1    0.000    0.000    0.002    0.002 integers.py:1(<module>)
        1    0.000    0.000    0.002    0.002 dataloader.py:1(<module>)
     2602    0.001    0.000    0.002    0.000 numbers.py:1965(__eq__)
        1    0.000    0.000    0.002    0.002 symbolic_shapes.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _arffread.py:1(<module>)
        5    0.000    0.000    0.002    0.000 ctx_base.py:42(__init__)
        1    0.000    0.000    0.002    0.002 _replacement.py:1(<module>)
     1800    0.001    0.000    0.002    0.000 _docscrape.py:457(_str_indent)
      590    0.001    0.000    0.002    0.000 enum.py:1483(__and__)
        7    0.001    0.000    0.002    0.000 _builtins.py:134(register_all)
        3    0.000    0.000    0.002    0.001 patches.py:1871(<listcomp>)
        4    0.000    0.000    0.002    0.000 feedparser.py:173(feed)
     2616    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:180(_path_isabs)
        1    0.000    0.000    0.002    0.002 ctx_mp_python.py:1(<module>)
        1    0.002    0.002    0.002    0.002 {built-in method torch._C._c10d_init}
     5212    0.002    0.000    0.002    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.002    0.001 decoder.py:1(<module>)
       71    0.000    0.000    0.002    0.000 enum.py:451(__prepare__)
       64    0.000    0.000    0.002    0.000 wrappers.py:285(backwards_not_supported)
      544    0.001    0.000    0.002    0.000 registration.py:213(register)
       74    0.000    0.000    0.002    0.000 typing.py:1580(copy_with)
        1    0.000    0.000    0.002    0.002 smtlib.py:1(<module>)
     2776    0.001    0.000    0.002    0.000 inspect.py:755(_is_wrapper)
       35    0.000    0.000    0.002    0.000 _typing.py:346(__new__)
        1    0.000    0.000    0.002    0.002 _address.py:1(<module>)
     4901    0.001    0.000    0.002    0.000 inspect.py:378(isfunction)
        1    0.000    0.000    0.002    0.002 _artifact_content.py:1(<module>)
      291    0.000    0.000    0.002    0.000 <frozen codecs>:319(decode)
        1    0.000    0.000    0.002    0.002 _comparison.py:1(<module>)
       28    0.000    0.000    0.002    0.000 _backend.py:312(get_defaults)
     5579    0.001    0.000    0.002    0.000 _ops.py:289(__hash__)
        1    0.000    0.000    0.002    0.002 _dual_annealing.py:1(<module>)
     1043    0.001    0.000    0.002    0.000 typing.py:1270(__getattr__)
       44    0.000    0.000    0.002    0.000 typing.py:2799(<dictcomp>)
     7319    0.002    0.000    0.002    0.000 enum.py:1074(__new__)
        1    0.000    0.000    0.002    0.002 _header_value_parser.py:1(<module>)
        7    0.000    0.000    0.002    0.000 feedparser.py:178(_call_parse)
        5    0.000    0.000    0.002    0.000 pathlib.py:1036(open)
        1    0.000    0.000    0.002    0.002 interpreter.py:1(<module>)
        2    0.000    0.000    0.002    0.001 grouping.py:1(<module>)
     1126    0.001    0.000    0.002    0.000 colors.py:124(_is_nth_color)
        5    0.001    0.000    0.002    0.000 functions.py:18(__init__)
        2    0.000    0.000    0.002    0.001 sets.py:1(<module>)
        7    0.000    0.000    0.002    0.000 feedparser.py:218(_parsegen)
        1    0.000    0.000    0.002    0.002 vmap.py:1(<module>)
      592    0.001    0.000    0.002    0.000 _pytree.py:136(__init__)
     4289    0.001    0.000    0.002    0.000 _parser.py:170(append)
      459    0.001    0.000    0.002    0.000 iterables.py:1923(has_dups)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:868(draw)
     1456    0.001    0.000    0.002    0.000 _docscrape.py:49(read)
        1    0.000    0.000    0.002    0.002 _stack.py:1(<module>)
       22    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:1083(filtered)
        1    0.000    0.000    0.002    0.002 _char_codes.py:1(<module>)
     3220    0.002    0.000    0.002    0.000 {built-in method torch._has_compatible_shallow_copy_type}
      243    0.000    0.000    0.002    0.000 functools.py:518(decorating_function)
        6    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:605(draw)
        1    0.000    0.000    0.002    0.002 parametrizations.py:1(<module>)
        7    0.000    0.000    0.002    0.000 ctx_mp_python.py:279(binary_op)
     4881    0.001    0.000    0.002    0.000 _parser.py:158(__len__)
        2    0.000    0.000    0.002    0.001 factorials.py:1(<module>)
     2194    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:48(_new_module)
       72    0.000    0.000    0.002    0.000 inspect.py:3224(__str__)
        2    0.000    0.000    0.002    0.001 decorator.py:1(<module>)
      976    0.001    0.000    0.002    0.000 _compiler.py:396(_simple)
     6074    0.002    0.000    0.002    0.000 {built-in method torch.get_default_dtype}
        1    0.000    0.000    0.002    0.002 arpack.py:1(<module>)
     2671    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:357(__init__)
     9727    0.002    0.000    0.002    0.000 {method '__exit__' of '_thread.lock' objects}
        1    0.000    0.000    0.002    0.002 parameters.py:1(<module>)
     2492    0.002    0.000    0.002    0.000 {built-in method _imp.find_frozen}
        3    0.000    0.000    0.002    0.001 _constants.py:1(<module>)
      291    0.002    0.000    0.002    0.000 {built-in method _codecs.utf_8_decode}
      961    0.002    0.000    0.002    0.000 {method 'search' of 're.Pattern' objects}
       13    0.001    0.000    0.001    0.000 enum.py:891(<listcomp>)
      532    0.001    0.000    0.001    0.000 function_base.py:2285(__init__)
        1    0.000    0.000    0.001    0.001 ExifTags.py:21(Base)
       30    0.000    0.000    0.001    0.000 __init__.py:652(__init__)
        1    0.000    0.000    0.001    0.001 relativedelta.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _attachment.py:1(<module>)
     1482    0.001    0.000    0.001    0.000 enum.py:809(__setattr__)
       20    0.000    0.000    0.001    0.000 core.py:5363(parseImpl)
        2    0.000    0.000    0.001    0.001 fractions.py:1(<module>)
      403    0.001    0.000    0.001    0.000 {built-in method _abc._abc_init}
      317    0.000    0.000    0.001    0.000 font_manager.py:962(_json_decode)
        1    0.000    0.000    0.001    0.001 _reporting_descriptor_reference.py:1(<module>)
     2869    0.001    0.000    0.001    0.000 functools.py:65(wraps)
        1    0.000    0.000    0.001    0.001 parsing.py:1(<module>)
       30    0.000    0.000    0.001    0.000 <frozen _collections_abc>:941(update)
  108/107    0.000    0.000    0.001    0.000 __init__.py:235(wrapper)
        1    0.000    0.000    0.001    0.001 zeta_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 fancysets.py:1(<module>)
        1    0.000    0.000    0.001    0.001 libhyper.py:1(<module>)
     3037    0.001    0.000    0.001    0.000 {method '_is_zerotensor' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 _nonlin.py:1(<module>)
        1    0.000    0.000    0.001    0.001 module.py:366(Module)
        1    0.000    0.000    0.001    0.001 core.py:6281(<listcomp>)
       83    0.000    0.000    0.001    0.000 core.py:3887(__init__)
        1    0.000    0.000    0.001    0.001 wavfile.py:72(WAVE_FORMAT)
        1    0.000    0.000    0.001    0.001 accumulationbounds.py:1(<module>)
      524    0.001    0.000    0.001    0.000 {built-in method torch.view_as_real}
        1    0.000    0.000    0.001    0.001 _configuration_override.py:1(<module>)
        5    0.000    0.000    0.001    0.000 io.py:28(zopen)
        1    0.000    0.000    0.001    0.001 core.py:389(ParserElement)
        1    0.000    0.000    0.001    0.001 pythonfinitefield.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _expm_frechet.py:1(<module>)
     2209    0.001    0.000    0.001    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.001    0.001 polyoptions.py:397(Domain)
        1    0.000    0.000    0.001    0.001 blockmatrix.py:1(<module>)
        1    0.000    0.000    0.001    0.001 graph_drawer.py:1(<module>)
  274/176    0.000    0.000    0.001    0.000 core.py:1947(name)
        1    0.000    0.000    0.001    0.001 difflib.py:1(<module>)
       35    0.000    0.000    0.001    0.000 core.py:76(ismethod)
      628    0.000    0.000    0.001    0.000 _pytree.py:105(_is_leaf)
     6493    0.001    0.000    0.001    0.000 {built-in method from_bytes}
     3872    0.001    0.000    0.001    0.000 typing.py:1348(__eq__)
      248    0.001    0.000    0.001    0.000 _docscrape.py:499(_str_see_also)
      541    0.001    0.000    0.001    0.000 dataclasses.py:828(_set_new_attribute)
       29    0.000    0.000    0.001    0.000 typing.py:1628(copy_with)
       12    0.001    0.000    0.001    0.000 artist.py:1273(<listcomp>)
       97    0.001    0.000    0.001    0.000 {method 'sort' of 'list' objects}
     9746    0.001    0.000    0.001    0.000 {built-in method _thread.get_ident}
  206/114    0.000    0.000    0.001    0.000 core.py:1910(default_name)
     1366    0.000    0.000    0.001    0.000 {built-in method builtins.delattr}
       14    0.000    0.000    0.001    0.000 core.py:115(doc_note)
        1    0.000    0.000    0.001    0.001 dates.py:1(<module>)
        2    0.000    0.000    0.001    0.001 core.py:6134(srange)
      365    0.000    0.000    0.001    0.000 typing.py:1623(<genexpr>)
      502    0.001    0.000    0.001    0.000 typing.py:306(_deduplicate)
      927    0.001    0.000    0.001    0.000 permutations.py:1028(_af_new)
        1    0.000    0.000    0.001    0.001 _graph.py:1(<module>)
        1    0.000    0.000    0.001    0.001 configparser.py:569(RawConfigParser)
     6074    0.001    0.000    0.001    0.000 {method 'has_names' of 'torch._C._TensorBase' objects}
     1627    0.001    0.000    0.001    0.000 enum.py:78(_is_private)
     3037    0.001    0.000    0.001    0.000 {built-in method torch._C._len_torch_dispatch_stack}
        1    0.000    0.000    0.001    0.001 visualization.py:1(<module>)
       20    0.000    0.000    0.001    0.000 core.py:5119(parseImpl)
        1    0.000    0.000    0.001    0.001 afm.py:1(<module>)
      436    0.001    0.000    0.001    0.000 copy.py:259(_reconstruct)
       42    0.000    0.000    0.001    0.000 _typing.py:257(__new__)
     4191    0.001    0.000    0.001    0.000 numbers.py:2011(__hash__)
     72/4    0.000    0.000    0.001    0.000 core.py:980(_parseCache)
        1    0.000    0.000    0.001    0.001 polynomialring.py:1(<module>)
     22/3    0.000    0.000    0.001    0.000 core.py:4122(streamline)
        7    0.000    0.000    0.001    0.000 _nonlin.py:1584(_nonlin_wrapper)
     2994    0.001    0.000    0.001    0.000 _parser.py:284(tell)
      628    0.000    0.000    0.001    0.000 <string>:2(__init__)
        1    0.000    0.000    0.001    0.001 _ufunc_config.py:1(<module>)
        5    0.000    0.000    0.001    0.000 perm_groups.py:124(__new__)
      104    0.000    0.000    0.001    0.000 typing.py:1006(__init__)
    11121    0.001    0.000    0.001    0.000 inspect.py:2729(name)
     1662    0.001    0.000    0.001    0.000 basic.py:288(__new__)
        1    0.000    0.000    0.001    0.001 helpers.py:634(make_html_tags)
      822    0.000    0.000    0.001    0.000 typing_extensions.py:3114(_is_unpacked_typevartuple)
        1    0.000    0.000    0.001    0.001 sequences.py:1(<module>)
        1    0.000    0.000    0.001    0.001 helpers.py:576(_makeTags)
        1    0.000    0.000    0.001    0.001 _mio4.py:1(<module>)
      755    0.001    0.000    0.001    0.000 dataclasses.py:451(_field_init)
        1    0.000    0.000    0.001    0.001 more.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _sensitivity_analysis.py:1(<module>)
     8747    0.001    0.000    0.001    0.000 {method 'isidentifier' of 'str' objects}
      199    0.000    0.000    0.001    0.000 typing.py:245(_collect_parameters)
       43    0.000    0.000    0.001    0.000 ast.py:33(parse)
    28/22    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1136(wrapped)
        1    0.000    0.000    0.001    0.001 _correlation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap>:977(exec_module)
        1    0.000    0.000    0.001    0.001 _sketches.py:1(<module>)
       75    0.000    0.000    0.001    0.000 pathlib.py:868(__new__)
       64    0.000    0.000    0.001    0.000 typing.py:1470(copy_with)
1647/1434    0.001    0.000    0.001    0.000 typing.py:1354(__hash__)
       82    0.000    0.000    0.001    0.000 pathlib.py:504(_from_parts)
     6941    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.001    0.001 <frozen ntpath>:1(<module>)
       44    0.000    0.000    0.001    0.000 core.py:4404(<genexpr>)
     30/4    0.000    0.000    0.001    0.000 core.py:3963(streamline)
       31    0.000    0.000    0.001    0.000 _base.py:56(__set_name__)
     7529    0.001    0.000    0.001    0.000 {built-in method posix.fspath}
        1    0.000    0.000    0.001    0.001 extras.py:1(<module>)
      992    0.001    0.000    0.001    0.000 _docscrape.py:491(_str_section)
        1    0.000    0.000    0.001    0.001 realfield.py:1(<module>)
       96    0.000    0.000    0.001    0.000 pathlib.py:484(_parse_args)
  755/724    0.001    0.000    0.001    0.000 typing.py:1636(__hash__)
     1456    0.001    0.000    0.001    0.000 _docscrape.py:16(strip_blank_lines)
        1    0.000    0.000    0.001    0.001 expr_with_intlimits.py:1(<module>)
     8013    0.001    0.000    0.001    0.000 _docscrape.py:153(__getitem__)
      215    0.000    0.000    0.001    0.000 symbolic_helper.py:263(decorator)
        1    0.000    0.000    0.001    0.001 _torch_docs.py:1(<module>)
        1    0.000    0.000    0.001    0.001 replicate.py:1(<module>)
      748    0.001    0.000    0.001    0.000 dataclasses.py:347(field)
        1    0.000    0.000    0.001    0.001 backend_tools.py:1(<module>)
        1    0.000    0.000    0.001    0.001 gridspec.py:1(<module>)
      105    0.000    0.000    0.001    0.000 typing.py:1822(__init_subclass__)
        1    0.000    0.000    0.001    0.001 unary.py:167(<dictcomp>)
    12250    0.001    0.000    0.001    0.000 {method 'keys' of 'dict' objects}
      141    0.000    0.000    0.001    0.000 sorting.py:179(_nodes)
        1    0.000    0.000    0.001    0.001 fontconfig_pattern.py:62(__init__)
     3037    0.001    0.000    0.001    0.000 {method 'is_neg' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 _survival.py:1(<module>)
       55    0.000    0.000    0.001    0.000 __init__.py:2081(getLogger)
    11885    0.001    0.000    0.001    0.000 inspect.py:2741(kind)
        1    0.000    0.000    0.001    0.001 realfield.py:87(__init__)
        6    0.000    0.000    0.001    0.000 warnings.py:130(filterwarnings)
      129    0.000    0.000    0.001    0.000 dataclasses.py:394(_recursive_repr)
      138    0.000    0.000    0.001    0.000 _meta_registrations.py:34(register)
     1800    0.001    0.000    0.001    0.000 _docscrape.py:458(<listcomp>)
        1    0.000    0.000    0.001    0.001 grad.py:1(<module>)
        1    0.000    0.000    0.001    0.001 twodim_base.py:1(<module>)
        1    0.000    0.000    0.001    0.001 getlimits.py:162(_register_known_types)
        9    0.000    0.000    0.001    0.000 assume.py:175(__new__)
        1    0.000    0.000    0.001    0.001 subgraph_rewriter.py:1(<module>)
        1    0.000    0.000    0.001    0.001 graph.py:675(Graph)
        1    0.000    0.000    0.001    0.001 trajectory.py:1(<module>)
        1    0.000    0.000    0.001    0.001 band_data_out.py:1(<module>)
      586    0.001    0.000    0.001    0.000 _inspect.py:65(getargs)
        1    0.000    0.000    0.001    0.001 dviread.py:1(<module>)
       52    0.000    0.000    0.001    0.000 inspect.py:936(getsourcefile)
        1    0.000    0.000    0.001    0.001 _decomp_ldl.py:1(<module>)
     2546    0.001    0.000    0.001    0.000 _docscrape.py:403(<genexpr>)
        1    0.000    0.000    0.001    0.001 rnn.py:551(LSTM)
        1    0.000    0.000    0.001    0.001 clip_grad.py:1(<module>)
      146    0.000    0.000    0.001    0.000 enum.py:923(_get_mixins_)
        1    0.000    0.000    0.001    0.001 _rules.py:1(<module>)
       16    0.000    0.000    0.001    0.000 inspect.py:2105(_signature_strip_non_python_syntax)
     3532    0.001    0.000    0.001    0.000 facts.py:633(<genexpr>)
    11079    0.001    0.000    0.001    0.000 {built-in method builtins.callable}
        1    0.000    0.000    0.001    0.001 __init__.py:454(StrFormatStyle)
        1    0.000    0.000    0.001    0.001 lzma.py:1(<module>)
        1    0.000    0.000    0.001    0.001 tools_common.py:1(<module>)
        2    0.000    0.000    0.001    0.000 combining.py:1(<module>)
        2    0.000    0.000    0.001    0.000 container.py:1(<module>)
  518/510    0.000    0.000    0.001    0.000 {built-in method builtins.repr}
        1    0.000    0.000    0.001    0.001 meta_utils.py:1(<module>)
      665    0.001    0.000    0.001    0.000 _compiler.py:214(_compile_charset)
      459    0.000    0.000    0.001    0.000 permutations.py:455(<listcomp>)
      426    0.000    0.000    0.001    0.000 __init__.py:218(finditer)
        1    0.000    0.000    0.001    0.001 _compat.py:1(<module>)
       69    0.000    0.000    0.001    0.000 _compatibility.py:24(mark_not_back_compat)
        1    0.000    0.000    0.001    0.001 grad_scaler.py:1(<module>)
      425    0.000    0.000    0.001    0.000 artist.py:1363(aliased_name)
        1    0.000    0.000    0.001    0.001 singleton.py:1(<module>)
        1    0.000    0.000    0.001    0.001 miscellaneous.py:1(<module>)
       21    0.000    0.000    0.001    0.000 arrayprint.py:506(wrapper)
       17    0.000    0.000    0.001    0.000 deprecation.py:416(_make_keyword_only)
      277    0.001    0.000    0.001    0.000 results.py:153(__new__)
       37    0.001    0.000    0.001    0.000 function_base.py:24(linspace)
      205    0.000    0.000    0.001    0.000 inspect.py:2763(__str__)
     7354    0.001    0.000    0.001    0.000 {method '__contains__' of 'frozenset' objects}
       90    0.000    0.000    0.001    0.000 basic.py:447(sort_key)
        1    0.000    0.000    0.001    0.001 para4tb.py:24(<listcomp>)
        1    0.000    0.000    0.001    0.001 assume.py:1(<module>)
  628/550    0.001    0.000    0.001    0.000 _pytree.py:165(tree_unflatten)
        1    0.000    0.000    0.001    0.001 _variation.py:1(<module>)
     1375    0.001    0.000    0.001    0.000 enum.py:37(_is_descriptor)
        1    0.000    0.000    0.001    0.001 scalarstring.py:1(<module>)
        1    0.000    0.000    0.001    0.001 elliptic_integrals.py:1(<module>)
     2686    0.001    0.000    0.001    0.000 util.py:202(__call__)
        1    0.000    0.000    0.001    0.001 datetime.py:1(<module>)
        1    0.000    0.000    0.001    0.001 lie_group.py:1(<module>)
     10/3    0.000    0.000    0.001    0.000 unicode.py:14(__get__)
        3    0.000    0.000    0.001    0.000 string.py:1(<module>)
       80    0.000    0.000    0.001    0.000 _array_api.py:757(xp_capabilities)
        1    0.000    0.000    0.001    0.001 _external_property_file_references.py:1(<module>)
        1    0.000    0.000    0.001    0.001 binary.py:171(<dictcomp>)
       54    0.000    0.000    0.001    0.000 __init__.py:1327(getLogger)
     20/6    0.000    0.000    0.001    0.000 core.py:4741(streamline)
        1    0.000    0.000    0.001    0.001 mathieu_functions.py:1(<module>)
      182    0.000    0.000    0.001    0.000 numbers.py:1975(__gt__)
        1    0.000    0.000    0.001    0.001 ImageMode.py:1(<module>)
      115    0.000    0.000    0.001    0.000 inspect.py:786(_finddoc)
        6    0.000    0.000    0.001    0.000 getlimits.py:34(__init__)
     1747    0.001    0.000    0.001    0.000 enum.py:47(_is_dunder)
       59    0.000    0.000    0.001    0.000 __init__.py:791(joinpath)
        1    0.000    0.000    0.001    0.001 operator_schemas.py:1(<module>)
      772    0.001    0.000    0.001    0.000 _docscrape.py:28(__init__)
        1    0.000    0.000    0.001    0.001 transformed_distribution.py:1(<module>)
        1    0.000    0.000    0.001    0.001 c10d_error_logger.py:1(<module>)
      628    0.001    0.000    0.001    0.000 _pytree.py:120(__post_init__)
     1286    0.001    0.000    0.001    0.000 enum.py:728(__delattr__)
      886    0.001    0.000    0.001    0.000 typing.py:2374(get_origin)
     2237    0.001    0.000    0.001    0.000 inspect.py:292(isclass)
       12    0.000    0.000    0.001    0.000 __init__.py:1852(_define_aliases)
        2    0.000    0.000    0.001    0.000 __init__.py:456(_get_config_or_cache_dir)
     1019    0.001    0.000    0.001    0.000 {method 'size' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 defchararray.py:1(<module>)
       53    0.000    0.000    0.001    0.000 core.py:3161(parseImpl)
        1    0.000    0.000    0.001    0.001 _interpolation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 decimal.py:1(<module>)
       50    0.000    0.000    0.001    0.000 basic.py:737(as_dummy)
      395    0.000    0.000    0.001    0.000 containers.py:110(__hash__)
       15    0.000    0.000    0.001    0.000 typing.py:2893(__new__)
      542    0.001    0.000    0.001    0.000 _parser.py:367(_escape)
        1    0.000    0.000    0.001    0.001 lowrank_multivariate_normal.py:1(<module>)
        2    0.000    0.000    0.001    0.000 _internal.py:1(<module>)
        1    0.000    0.000    0.001    0.001 integerring.py:1(<module>)
        6    0.000    0.000    0.001    0.000 _docscrape.py:698(<listcomp>)
        1    0.000    0.000    0.001    0.001 rl.py:1(<module>)
        1    0.000    0.000    0.001    0.001 torch_version.py:1(<module>)
        1    0.000    0.000    0.001    0.001 depends.py:1(<module>)
       98    0.000    0.000    0.001    0.000 pathlib.py:56(parse_parts)
        1    0.000    0.000    0.001    0.001 libmpc.py:1(<module>)
      664    0.000    0.000    0.001    0.000 _pytree.py:99(_get_node_type)
        1    0.000    0.000    0.001    0.001 matcher_utils.py:1(<module>)
        1    0.000    0.000    0.001    0.001 indexed.py:1(<module>)
      106    0.000    0.000    0.001    0.000 contextlib.py:257(contextmanager)
     3220    0.001    0.000    0.001    0.000 {method 'is_floating_point' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 runner.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2297(entropy)
       14    0.000    0.000    0.001    0.000 periodic_table.py:1608(get_el_sp)
     5813    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
      401    0.000    0.000    0.001    0.000 _parser.py:82(opengroup)
        1    0.000    0.000    0.001    0.001 unary.py:170(<dictcomp>)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2317(_entropy_quadrature)
        1    0.000    0.000    0.001    0.001 __init__.py:42(_load_pmg_settings)
        8    0.000    0.000    0.001    0.000 core.py:2951(_generateDefaultName)
        1    0.000    0.000    0.001    0.001 special.py:1(<module>)
        2    0.000    0.000    0.001    0.000 _procrustes.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2076(_quadrature)
    24/12    0.000    0.000    0.001    0.000 core.py:4425(parseImpl)
        1    0.000    0.000    0.001    0.001 _region.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _nnls.py:1(<module>)
        1    0.000    0.000    0.001    0.001 signal.py:1(<module>)
     3037    0.001    0.000    0.001    0.000 _python_dispatch.py:89(<listcomp>)
        2    0.000    0.000    0.001    0.000 pathlib.py:1111(mkdir)
       57    0.000    0.000    0.001    0.000 <frozen genericpath>:16(exists)
        1    0.000    0.000    0.001    0.001 _slsqp_py.py:1(<module>)
       11    0.000    0.000    0.001    0.000 core.py:2952(charsAsStr)
        1    0.000    0.000    0.001    0.001 scale.py:1(<module>)
      398    0.001    0.000    0.001    0.000 _util.py:526(<listcomp>)
      485    0.001    0.000    0.001    0.000 _array_api.py:676(__str__)
     1721    0.001    0.000    0.001    0.000 typing.py:1631(__eq__)
      235    0.001    0.000    0.001    0.000 core.py:456(__init__)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._autograd_init}
      468    0.000    0.000    0.001    0.000 _parser.py:444(_uniq)
        2    0.001    0.000    0.001    0.000 {built-in method posix.mkdir}
        1    0.000    0.000    0.001    0.001 sites.py:1(<module>)
        1    0.000    0.000    0.001    0.001 string.py:69(__init_subclass__)
        1    0.000    0.000    0.001    0.001 _type_utils.py:1(<module>)
        3    0.000    0.000    0.001    0.000 feedparser.py:471(_parse_headers)
       18    0.000    0.000    0.001    0.000 core.py:5230(parseImpl)
       84    0.000    0.000    0.001    0.000 __init__.py:1641(get_aten_op)
        3    0.000    0.000    0.001    0.000 ctx_mp.py:96(init_builtins)
     1280    0.001    0.000    0.001    0.000 matrix_element.py:157(<listcomp>)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1(<module>)
     2667    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:165(__init__)
        1    0.000    0.000    0.001    0.001 _short_time_fft.py:1(<module>)
      110    0.000    0.000    0.001    0.000 _compiler.py:384(_mk_bitmap)
     1820    0.001    0.000    0.001    0.000 _docscrape.py:156(__setitem__)
        1    0.000    0.000    0.001    0.001 galoistools.py:1(<module>)
        1    0.000    0.000    0.001    0.001 std.py:245(tqdm)
       80    0.001    0.000    0.001    0.000 function.py:289(__init__)
        1    0.000    0.000    0.001    0.001 pydoc.py:1(<module>)
        1    0.001    0.001    0.001    0.001 events.py:644(BaseDefaultEventLoopPolicy)
        1    0.000    0.000    0.001    0.001 equality.py:1(<module>)
      349    0.000    0.000    0.001    0.000 _docscrape.py:303(parse_item_name)
        1    0.000    0.000    0.001    0.001 _decomp_polar.py:1(<module>)
        2    0.000    0.000    0.001    0.000 combinatorics.py:1(<module>)
     2412    0.001    0.000    0.001    0.000 _parser.py:109(__init__)
      327    0.001    0.000    0.001    0.000 <frozen posixpath>:60(isabs)
        1    0.000    0.000    0.001    0.001 rnn.py:830(GRU)
        1    0.000    0.000    0.001    0.001 _tanhsinh.py:958(nsum)
     1627    0.001    0.000    0.001    0.000 enum.py:58(_is_sunder)
      750    0.000    0.000    0.001    0.000 numbers.py:1972(__ne__)
        1    0.000    0.000    0.001    0.001 _gauss_kronrod.py:1(<module>)
      264    0.000    0.000    0.001    0.000 <frozen _collections_abc>:859(__iter__)
        1    0.000    0.000    0.001    0.001 helpers.py:678(<dictcomp>)
     1008    0.000    0.000    0.001    0.000 colors.py:266(<genexpr>)
     3208    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
       93    0.000    0.000    0.001    0.000 composition.py:141(__init__)
        1    0.000    0.000    0.001    0.001 connection.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _tensor_docs.py:1(<module>)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1372(<listcomp>)
       10    0.000    0.000    0.001    0.000 extras.py:233(__init__)
       63    0.000    0.000    0.001    0.000 colors.py:829(reversed)
       15    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:3136(moment)
        1    0.000    0.000    0.001    0.001 unicode.py:80(alphanums)
        1    0.000    0.000    0.001    0.001 groundtypes.py:1(<module>)
       10    0.000    0.000    0.001    0.000 extras.py:237(getdoc)
        4    0.000    0.000    0.001    0.000 enum.py:822(_create_)
       80    0.001    0.000    0.001    0.000 _array_api.py:682(_make_sphinx_capabilities)
       58    0.000    0.000    0.001    0.000 wrappers.py:328(elementwise_unary_scalar_wrapper)
        1    0.000    0.000    0.001    0.001 tools_common.py:78(FxNetAccFusionsFinder)
        6    0.001    0.000    0.001    0.000 {method 'decompress' of 'zlib.Decompress' objects}
        1    0.000    0.000    0.001    0.001 complexfield.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _pocketfft.py:1(<module>)
       65    0.000    0.000    0.001    0.000 assumptions.py:497(getit)
        1    0.000    0.000    0.001    0.001 parse.py:1(<module>)
        6    0.000    0.000    0.001    0.000 _docscrape.py:684(<listcomp>)
        1    0.000    0.000    0.001    0.001 __init__.py:505(get_cachedir)
       28    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:305(get_numerical_endpoints)
        1    0.000    0.000    0.001    0.001 tarfile.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ElementPath.py:1(<module>)
      428    0.000    0.000    0.001    0.000 libmpf.py:291(from_man_exp)
        3    0.000    0.000    0.001    0.000 activation.py:1(<module>)
     2496    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:748(find_spec)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1597(__init__)
        1    0.000    0.000    0.001    0.001 message.py:135(Message)
       20    0.000    0.000    0.001    0.000 typing.py:1357(__or__)
        1    0.000    0.000    0.001    0.001 _web_response.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pkgutil.py:506(extend_path)
        5    0.000    0.000    0.001    0.000 polyhedron.py:390(<listcomp>)
       27    0.000    0.000    0.001    0.000 pathlib.py:940(glob)
      269    0.000    0.000    0.001    0.000 __init__.py:304(<genexpr>)
      431    0.000    0.000    0.001    0.000 _util.py:541(<genexpr>)
        2    0.000    0.000    0.001    0.000 unicode.py:55(_chars_for_ranges)
     20/6    0.000    0.000    0.001    0.000 core.py:4698(parseImpl)
        1    0.000    0.000    0.001    0.001 _web_request.py:1(<module>)
       71    0.000    0.000    0.001    0.000 enum.py:987(_find_new_)
        1    0.000    0.000    0.001    0.001 unicode.py:70(alphas)
       38    0.000    0.000    0.001    0.000 getlimits.py:111(_float_to_str)
        1    0.000    0.000    0.001    0.001 pooling.py:1(<module>)
       61    0.000    0.000    0.001    0.000 core.py:4672(__init__)
        1    0.000    0.000    0.001    0.001 pickletools.py:1(<module>)
        1    0.000    0.000    0.001    0.001 beta_functions.py:1(<module>)
      297    0.000    0.000    0.001    0.000 _parser.py:222(__init__)
       83    0.000    0.000    0.001    0.000 deprecation.py:222(finalize)
        1    0.000    0.000    0.001    0.001 _miobase.py:1(<module>)
     1246    0.000    0.000    0.001    0.000 _docscrape.py:454(_str_header)
      186    0.000    0.000    0.001    0.000 typing.py:1673(__hash__)
        1    0.000    0.000    0.001    0.001 _fftlog.py:1(<module>)
        1    0.000    0.000    0.001    0.001 TiffTags.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ctx_iv.py:306(__init__)
      266    0.000    0.000    0.001    0.000 dataclasses.py:380(_tuple_str)
        1    0.000    0.000    0.001    0.001 complexfield.py:48(__init__)
        1    0.000    0.000    0.001    0.001 art3d.py:1(<module>)
        1    0.000    0.000    0.001    0.001 libintmath.py:1(<module>)
  335/280    0.000    0.000    0.001    0.000 _compiler.py:434(_get_literal_prefix)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:1(<module>)
        1    0.000    0.000    0.001    0.001 texmanager.py:1(<module>)
        1    0.000    0.000    0.001    0.001 latex.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:149(EntryPoint)
        1    0.000    0.000    0.001    0.001 _realtransforms.py:1(<module>)
       90    0.000    0.000    0.001    0.000 basic.py:475(<listcomp>)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._rpc_init}
       42    0.000    0.000    0.001    0.000 {numpy.random._generator.default_rng}
     2759    0.001    0.000    0.001    0.000 facts.py:582(_tell)
        2    0.000    0.000    0.001    0.000 loader.py:1(<module>)
        1    0.000    0.000    0.001    0.001 interpolative.py:1(<module>)
     2164    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1097(__init__)
        1    0.000    0.000    0.001    0.001 tensor_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 periodic_table.py:865(Element)
       34    0.000    0.000    0.001    0.000 symbol.py:494(__new__)
        1    0.000    0.000    0.001    0.001 dataset.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _exception.py:1(<module>)
       26    0.000    0.000    0.001    0.000 _hook_iterator.py:102(hook_iterator)
        1    0.000    0.000    0.001    0.001 _suppression.py:1(<module>)
      106    0.000    0.000    0.001    0.000 typing.py:932(__init__)
        1    0.000    0.000    0.001    0.001 symbolic_opset10.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _linalg.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ctx_iv.py:1(<module>)
     3959    0.001    0.000    0.001    0.000 typing.py:1341(<genexpr>)
        1    0.000    0.000    0.001    0.001 _graph_traversal.py:1(<module>)
      130    0.000    0.000    0.001    0.000 dataclasses.py:371(_fields_in_init_order)
       29    0.000    0.000    0.001    0.000 _array_api.py:553(xp_promote)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1616(_update_parameters)
        1    0.000    0.000    0.001    0.001 _result_provenance.py:1(<module>)
      544    0.000    0.000    0.001    0.000 registration.py:159(add)
     3970    0.001    0.000    0.001    0.000 {method 'values' of 'mappingproxy' objects}
        1    0.000    0.000    0.001    0.001 reinplace.py:1(<module>)
        6    0.000    0.000    0.001    0.000 pathlib.py:1245(is_dir)
        1    0.000    0.000    0.001    0.001 sampler.py:1(<module>)
       45    0.000    0.000    0.001    0.000 basic.py:1386(has)
        1    0.000    0.000    0.001    0.001 figure.py:220(Figure)
        1    0.000    0.000    0.001    0.001 ticker.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:27(_parse_docstrings)
        3    0.000    0.000    0.001    0.000 arrayprint.py:1487(_array_repr_implementation)
        1    0.000    0.000    0.001    0.001 polar.py:1(<module>)
       82    0.000    0.000    0.001    0.000 __init__.py:1873(make_alias)
        1    0.000    0.000    0.001    0.001 _rectangle.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _translation_metadata.py:1(<module>)
     4835    0.001    0.000    0.001    0.000 _ops.py:398(name)
        6    0.000    0.000    0.001    0.000 pathlib.py:1008(stat)
        1    0.000    0.000    0.001    0.001 _logical_location.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _info.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _special_matrices.py:1(<module>)
      664    0.000    0.000    0.001    0.000 _pytree.py:89(_is_namedtuple_instance)
        1    0.000    0.000    0.001    0.001 texmanager.py:47(TexManager)
       72    0.000    0.000    0.001    0.000 pydoc.py:104(_finddoc)
      185    0.000    0.000    0.001    0.000 inspect.py:1449(formatannotation)
       87    0.000    0.000    0.001    0.000 utils.py:83(groupby)
        1    0.000    0.000    0.001    0.001 operator_support.py:1(<module>)
     5303    0.001    0.000    0.001    0.000 inspect.py:3024(parameters)
        5    0.000    0.000    0.001    0.000 decorator.py:177(create)
      237    0.000    0.000    0.001    0.000 libmpf.py:330(from_int)
        1    0.000    0.000    0.001    0.001 _page_trend_test.py:1(<module>)
      420    0.000    0.000    0.001    0.000 _ops.py:505(overloads)
        1    0.000    0.000    0.001    0.001 _elffile.py:1(<module>)
      130    0.000    0.000    0.001    0.000 dataclasses.py:574(<listcomp>)
        4    0.000    0.000    0.001    0.000 __init__.py:2295(_make_reduction_prim)
     6709    0.001    0.000    0.001    0.000 {built-in method builtins.ord}
       23    0.001    0.000    0.001    0.000 functools.py:966(__init__)
        3    0.000    0.000    0.001    0.000 arrayprint.py:561(array2string)
        1    0.000    0.000    0.001    0.001 __init__.py:1151(<listcomp>)
       19    0.000    0.000    0.001    0.000 functools.py:852(register)
        1    0.001    0.001    0.001    0.001 comments.py:1007(CommentedKeyMap)
     1019    0.001    0.000    0.001    0.000 {built-in method math.floor}
        1    0.000    0.000    0.001    0.001 six.py:1(<module>)
        1    0.000    0.000    0.001    0.001 registration.py:1(<module>)
        1    0.001    0.001    0.001    0.001 relativedelta.py:18(relativedelta)
        1    0.000    0.000    0.001    0.001 _version_control_details.py:1(<module>)
     4878    0.001    0.000    0.001    0.000 basic.py:906(args)
       42    0.000    0.000    0.001    0.000 symbol.py:359(__xnew__)
       45    0.000    0.000    0.001    0.000 basic.py:1507(_has)
       63    0.000    0.000    0.001    0.000 colors.py:848(<dictcomp>)
      639    0.000    0.000    0.001    0.000 ctx_mp_python.py:1014(_wrap_specfun)
        1    0.000    0.000    0.001    0.001 __init__.py:345(<listcomp>)
      245    0.000    0.000    0.001    0.000 _docscrape.py:591(get_func)
        1    0.000    0.000    0.001    0.001 platform.py:781(uname_result)
        1    0.000    0.000    0.001    0.001 _stack_frame.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pyplot.py:1872(get_plot_commands)
        1    0.000    0.000    0.001    0.001 ordinals.py:1(<module>)
        1    0.000    0.000    0.001    0.001 graph_settings.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:421(PercentStyle)
       10    0.000    0.000    0.001    0.000 dataclasses.py:846(_hash_add)
        1    0.000    0.000    0.001    0.001 widgets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 comm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 diagonal.py:1(<module>)
     1318    0.000    0.000    0.000    0.000 enum.py:69(_is_internal_class)
      544    0.000    0.000    0.000    0.000 registration.py:135(__init__)
        1    0.000    0.000    0.000    0.000 _short_time_fft.py:229(ShortTimeFFT)
      540    0.000    0.000    0.000    0.000 _tensor_docs.py:8(add_docstr_all)
      790    0.000    0.000    0.000    0.000 containers.py:66(__len__)
        1    0.000    0.000    0.000    0.000 _node.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _trustregion_dogleg.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _message.py:1(<module>)
     5522    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
        1    0.000    0.000    0.000    0.000 ase.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:474(_get_data_path)
        7    0.000    0.000    0.000    0.000 periodic_table.py:1223(from_str)
        1    0.000    0.000    0.000    0.000 binary.py:174(<dictcomp>)
      330    0.000    0.000    0.000    0.000 basic.py:468(inner_key)
     1406    0.000    0.000    0.000    0.000 _parser.py:79(groups)
      146    0.000    0.000    0.000    0.000 deprecation.py:24(_generate_deprecation_warning)
      540    0.000    0.000    0.000    0.000 dataclasses.py:821(_set_qualname)
      271    0.000    0.000    0.000    0.000 _parser.py:307(_class_escape)
        1    0.000    0.000    0.000    0.000 node.py:105(Node)
        2    0.000    0.000    0.000    0.000 qconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polygon.py:1(<module>)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:291(_get_axis_params)
       14    0.000    0.000    0.000    0.000 __init__.py:2089(_warn_external)
        1    0.000    0.000    0.000    0.000 gzip.py:25(open)
      163    0.000    0.000    0.000    0.000 iterables.py:585(sift)
     2213    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
       87    0.000    0.000    0.000    0.000 conflict.py:67(<dictcomp>)
      146    0.000    0.000    0.000    0.000 enum.py:959(_find_data_type_)
        3    0.000    0.000    0.000    0.000 arrayprint.py:523(_array2string)
        8    0.000    0.000    0.000    0.000 __init__.py:794(children)
      248    0.000    0.000    0.000    0.000 _docscrape.py:531(_str_index)
       10    0.000    0.000    0.000    0.000 dataclasses.py:639(_hash_fn)
      217    0.000    0.000    0.000    0.000 enum.py:913(_check_for_existing_members_)
        1    0.000    0.000    0.000    0.000 internal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:1(<module>)
       18    0.000    0.000    0.000    0.000 arrayprint.py:1595(_array_str_implementation)
      423    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
       58    0.000    0.000    0.000    0.000 <frozen abc>:110(register)
        1    0.000    0.000    0.000    0.000 return_types.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:1(<module>)
       16    0.000    0.000    0.000    0.000 arraypad.py:533(pad)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 libintmath.py:127(<listcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:1(<module>)
     1191    0.000    0.000    0.000    0.000 libintmath.py:91(python_bitcount)
      129    0.000    0.000    0.000    0.000 ctx_mp_python.py:979(_wrap_libmp_function)
     3709    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:71(_relax_case)
      325    0.000    0.000    0.000    0.000 function_base.py:483(_add_docstring)
        1    0.000    0.000    0.000    0.000 _cm_listed.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _physical_location.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gzip.py:134(__init__)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:1(<module>)
     1293    0.000    0.000    0.000    0.000 inspect.py:1182(tokeneater)
   190/92    0.000    0.000    0.000    0.000 core.py:1956(__str__)
     2369    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:943(filtered)
      117    0.000    0.000    0.000    0.000 typing.py:1020(__typing_subst__)
       15    0.000    0.000    0.000    0.000 typing.py:2916(<dictcomp>)
      162    0.000    0.000    0.000    0.000 {built-in method torch.ones}
        1    0.000    0.000    0.000    0.000 __init__.py:569(matplotlib_fname)
        1    0.000    0.000    0.000    0.000 queue.py:1(<module>)
      115    0.000    0.000    0.000    0.000 containers.py:100(__eq__)
       58    0.000    0.000    0.000    0.000 {built-in method _abc._abc_register}
        1    0.000    0.000    0.000    0.000 backend_agg.py:389(FigureCanvasAgg)
      748    0.000    0.000    0.000    0.000 dataclasses.py:267(__init__)
     1164    0.000    0.000    0.000    0.000 {built-in method torch._C._add_docstr}
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1(<module>)
     10/4    0.000    0.000    0.000    0.000 core.py:4409(streamline)
     1272    0.000    0.000    0.000    0.000 typing.py:882(__eq__)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:34(envwrap)
       87    0.000    0.000    0.000    0.000 utils.py:61(reverse_dict)
        1    0.000    0.000    0.000    0.000 _edge.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _location_relationship.py:1(<module>)
       24    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:386(draw)
        1    0.000    0.000    0.000    0.000 utils.py:73(<dictcomp>)
     2336    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1565(<genexpr>)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1129(manager_path)
       28    0.000    0.000    0.000    0.000 _decorator.py:23(__call__)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3211(_moment_central_dispatch)
      175    0.000    0.000    0.000    0.000 <frozen posixpath>:71(join)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:621(get_path)
        1    0.000    0.000    0.000    0.000 _trace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:1(<module>)
       40    0.000    0.000    0.000    0.000 mul.py:483(_gather)
        6    0.000    0.000    0.000    0.000 _version.py:55(__init__)
     1036    0.000    0.000    0.000    0.000 _parser.py:166(__setitem__)
        2    0.000    0.000    0.000    0.000 sysconfig.py:609(get_paths)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 timeouts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 encoder.py:1(<module>)
      347    0.000    0.000    0.000    0.000 pretty_symbology.py:10(U)
        1    0.000    0.000    0.000    0.000 projections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 join.py:1(<module>)
      135    0.000    0.000    0.000    0.000 pyplot.py:1884(<genexpr>)
        1    0.000    0.000    0.000    0.000 _scalars.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:261(_expand_vars)
      459    0.000    0.000    0.000    0.000 iterables.py:1943(<genexpr>)
        1    0.000    0.000    0.000    0.000 interpreter.py:16(Interpreter)
      148    0.000    0.000    0.000    0.000 enum.py:753(__getattr__)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ops.py:89(get_ops_with_reflection)
     3220    0.000    0.000    0.000    0.000 __future__.py:20(get_overwrite_module_params_on_conversion)
       86    0.000    0.000    0.000    0.000 _parser.py:265(getuntil)
        1    0.000    0.000    0.000    0.000 hashlib.py:1(<module>)
        6    0.000    0.000    0.000    0.000 deprecation.py:56(warn_deprecated)
  460/100    0.000    0.000    0.000    0.000 sorting.py:168(_node_count)
        5    0.000    0.000    0.000    0.000 perm_groups.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 due.py:1(<module>)
       49    0.000    0.000    0.000    0.000 core.py:131(get_object_signature)
      436    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 request.py:939(AbstractBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 version.py:112(StrictVersion)
       18    0.000    0.000    0.000    0.000 arrayprint.py:1588(_guarded_repr_or_str)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1779(_validate)
        1    0.000    0.000    0.000    0.000 __init__.py:516(get_data_path)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3276(_moment_standardized)
        5    0.000    0.000    0.000    0.000 ctx_iv.py:244(_binary_op)
      398    0.000    0.000    0.000    0.000 _util.py:531(<listcomp>)
      110    0.000    0.000    0.000    0.000 _compiler.py:386(<listcomp>)
        1    0.000    0.000    0.000    0.000 _fix.py:1(<module>)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:358(decorator)
        1    0.000    0.000    0.000    0.000 options.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataloader.py:129(DataLoader)
        1    0.000    0.000    0.000    0.000 ImageFile.py:1(<module>)
      163    0.000    0.000    0.000    0.000 fromnumeric.py:53(_wrapfunc)
        4    0.000    0.000    0.000    0.000 __init__.py:590(gen_candidates)
     1694    0.000    0.000    0.000    0.000 unicode.py:63(<genexpr>)
      471    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        1    0.000    0.000    0.000    0.000 entities.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:1(<module>)
       10    0.000    0.000    0.000    0.000 contextlib.py:78(inner)
       57    0.000    0.000    0.000    0.000 <frozen posixpath>:228(expanduser)
        2    0.000    0.000    0.000    0.000 _functions.py:1(<module>)
     4061    0.000    0.000    0.000    0.000 inspect.py:2733(default)
        2    0.000    0.000    0.000    0.000 __init__.py:2078(_make_copy_from_view)
        1    0.000    0.000    0.000    0.000 band_data_in.py:60(generate_k_path)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:833(validation)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3282(_moment_standardized_dispatch)
       26    0.000    0.000    0.000    0.000 core.py:6855(__init__)
       14    0.000    0.000    0.000    0.000 hashlib.py:126(__get_openssl_constructor)
      266    0.000    0.000    0.000    0.000 inspect.py:973(getmodule)
        1    0.000    0.000    0.000    0.000 modules.py:606(SubModule)
      129    0.000    0.000    0.000    0.000 fromnumeric.py:1025(argsort)
       91    0.000    0.000    0.000    0.000 core.py:2408(__init__)
        1    0.000    0.000    0.000    0.000 _text.py:1(<module>)
       54    0.000    0.000    0.000    0.000 decorators.py:46(deco)
       68    0.000    0.000    0.000    0.000 _internal.py:14(get_xp)
      140    0.000    0.000    0.000    0.000 basic.py:497(__eq__)
  157/148    0.000    0.000    0.000    0.000 fake_tensor.py:92(contains_tensor_types)
        1    0.000    0.000    0.000    0.000 __init__.py:537(_get_data_path)
        1    0.000    0.000    0.000    0.000 _property_bag.py:1(<module>)
     2169    0.000    0.000    0.000    0.000 typing.py:1662(<genexpr>)
     1760    0.000    0.000    0.000    0.000 dataclasses.py:427(<genexpr>)
      188    0.000    0.000    0.000    0.000 colors.py:850(<listcomp>)
        1    0.000    0.000    0.000    0.000 backend_registry.py:1(<module>)
       25    0.000    0.000    0.000    0.000 typing.py:2013(__init_subclass__)
        1    0.000    0.000    0.000    0.000 artist.py:1236(ArtistInspector)
        1    0.000    0.000    0.000    0.000 collate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 shape_prop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend.py:1(<module>)
       26    0.000    0.000    0.000    0.000 core.py:6860(getdoc)
        1    0.000    0.000    0.000    0.000 ExifTags.py:295(<dictcomp>)
       87    0.000    0.000    0.000    0.000 _docscrape.py:658(splitlines_x)
     2603    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4172(get_distribution_names)
        1    0.000    0.000    0.000    0.000 hadamard.py:1(<module>)
        1    0.000    0.000    0.000    0.000 reductions.py:148(<dictcomp>)
       25    0.000    0.000    0.000    0.000 decorator.py:317(deprecated_decorator)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:18(__init__)
        6    0.000    0.000    0.000    0.000 printer.py:424(decorator)
      231    0.000    0.000    0.000    0.000 _compiler.py:465(_get_charset_prefix)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3308(_moment_standardized_normalize)
        1    0.000    0.000    0.000    0.000 mlab.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:486(get_configdir)
      109    0.000    0.000    0.000    0.000 inspect.py:2068(_signature_is_builtin)
        1    0.000    0.000    0.000    0.000 base64.py:1(<module>)
        6    0.000    0.000    0.000    0.000 rcsetup.py:340(validate_color_or_inherit)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:647(_is_classvar)
      398    0.000    0.000    0.000    0.000 _util.py:536(<listcomp>)
       62    0.000    0.000    0.000    0.000 decorator.py:233(memoize_property)
      776    0.000    0.000    0.000    0.000 enum.py:188(__get__)
        9    0.000    0.000    0.000    0.000 _multivariate.py:5755(_docfill)
       13    0.000    0.000    0.000    0.000 _deprecation.py:20(decorator)
       50    0.000    0.000    0.000    0.000 numbers.py:1622(__eq__)
       54    0.000    0.000    0.000    0.000 decorators.py:52(__sympifyit)
      398    0.000    0.000    0.000    0.000 _util.py:553(<dictcomp>)
        6    0.000    0.000    0.000    0.000 printer.py:392(__init__)
      154    0.000    0.000    0.000    0.000 <frozen _collections_abc>:428(__new__)
      398    0.000    0.000    0.000    0.000 _util.py:546(<listcomp>)
        1    0.000    0.000    0.000    0.000 colorbar.py:321(ColorbarBase)
        1    0.000    0.000    0.000    0.000 main.py:57(__init__)
        1    0.000    0.000    0.000    0.000 selectors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dlpack.py:1(<module>)
      347    0.000    0.000    0.000    0.000 {built-in method unicodedata.lookup}
       82    0.000    0.000    0.000    0.000 linecache.py:52(checkcache)
        1    0.000    0.000    0.000    0.000 piecewise.py:1(<module>)
      778    0.000    0.000    0.000    0.000 _ops.py:419(__init__)
        1    0.000    0.000    0.000    0.000 ask.py:21(AssumptionKeys)
      456    0.000    0.000    0.000    0.000 feedparser.py:128(__next__)
      398    0.000    0.000    0.000    0.000 _util.py:550(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _spdx.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _special_locations.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gammasimp.py:1(<module>)
      482    0.000    0.000    0.000    0.000 dataclasses.py:306(__set_name__)
     1371    0.000    0.000    0.000    0.000 {method 'capitalize' of 'str' objects}
       24    0.000    0.000    0.000    0.000 core.py:5818(__init__)
        1    0.000    0.000    0.000    0.000 symbolic_opset8.py:1(<module>)
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1293(_get_parent_path)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:724(validate)
        4    0.000    0.000    0.000    0.000 assumptions.py:509(_ask)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1506(UnivariateDistribution)
        6    0.000    0.000    0.000    0.000 typing.py:1360(__ror__)
        3    0.000    0.000    0.000    0.000 typing.py:2852(NamedTuple)
        1    0.000    0.000    0.000    0.000 heapq.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pickle.py:197(<listcomp>)
     3309    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 permutation.py:1(<module>)
      171    0.000    0.000    0.000    0.000 typing.py:1287(__instancecheck__)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:204(Tracer)
     2361    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:413(has_location)
        1    0.000    0.000    0.000    0.000 matadd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:1(<module>)
      590    0.000    0.000    0.000    0.000 _compiler.py:568(isstring)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:664(register_var_mean)
        4    0.000    0.000    0.000    0.000 core.py:1518(__mul__)
      216    0.000    0.000    0.000    0.000 _policybase.py:293(header_source_parse)
        1    0.000    0.000    0.000    0.000 argparse.py:1(<module>)
        3    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(_held_figure)
        5    0.000    0.000    0.000    0.000 decorator.py:144(make)
        2    0.000    0.000    0.000    0.000 determinant.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:1(<module>)
       13    0.000    0.000    0.000    0.000 deprecation.py:277(_rename_parameter)
        1    0.000    0.000    0.000    0.000 constraints.py:1(<module>)
       35    0.000    0.000    0.000    0.000 transforms.py:1251(__init_subclass__)
       40    0.000    0.000    0.000    0.000 core.py:2462(__init__)
       52    0.000    0.000    0.000    0.000 package_importer.py:687(_patched_getfile)
        3    0.000    0.000    0.000    0.000 decorator.py:200(decorate)
        2    0.000    0.000    0.000    0.000 hashlib.py:82(__get_builtin_constructor)
        1    0.000    0.000    0.000    0.000 main.py:761(official_plug_ins)
       10    0.000    0.000    0.000    0.000 symbol.py:654(symbols)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:1125(_qualified_name)
      191    0.000    0.000    0.000    0.000 typing.py:1608(<genexpr>)
        3    0.000    0.000    0.000    0.000 decorators.py:123(sympify_method_args)
        1    0.000    0.000    0.000    0.000 datapipes.py:1(<module>)
       24    0.000    0.000    0.000    0.000 symbol.py:325(__new__)
       28    0.000    0.000    0.000    0.000 inspect.py:2248(p)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:1(<module>)
      115    0.000    0.000    0.000    0.000 inspect.py:776(_findclass)
        1    0.000    0.000    0.000    0.000 containers.py:1(<module>)
      828    0.000    0.000    0.000    0.000 {method 'update' of 'set' objects}
       34    0.000    0.000    0.000    0.000 core.py:3064(__init__)
     2818    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
        2    0.000    0.000    0.000    0.000 sysconfig.py:185(_safe_realpath)
        1    0.000    0.000    0.000    0.000 _sources.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:10(parse_kwargs)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1122(get_filename)
        7    0.000    0.000    0.000    0.000 power.py:136(__new__)
        1    0.000    0.000    0.000    0.000 _base.py:422(_AxesBase)
        1    0.000    0.000    0.000    0.000 threading.py:1(<module>)
        1    0.000    0.000    0.000    0.000 types.py:1(<module>)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:411(realpath)
      757    0.000    0.000    0.000    0.000 __init__.py:907(<lambda>)
      536    0.000    0.000    0.000    0.000 function_base.py:348(iterable)
        3    0.000    0.000    0.000    0.000 arrayprint.py:452(_get_format_function)
      735    0.000    0.000    0.000    0.000 dataclasses.py:511(_init_param)
        1    0.000    0.000    0.000    0.000 glob.py:13(glob)
      436    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      100    0.000    0.000    0.000    0.000 iterables.py:1970(uniq)
       43    0.000    0.000    0.000    0.000 decompositions.py:43(type_casts)
       52    0.000    0.000    0.000    0.000 core.py:894(__init__)
      240    0.000    0.000    0.000    0.000 functools.py:479(lru_cache)
       62    0.000    0.000    0.000    0.000 __init__.py:873(normalize)
       22    0.000    0.000    0.000    0.000 core.py:4215(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 _script.py:892(_get_methods)
       50    0.000    0.000    0.000    0.000 containers.py:177(<lambda>)
       71    0.000    0.000    0.000    0.000 typing.py:335(_flatten_literal_params)
       54    0.000    0.000    0.000    0.000 __init__.py:1378(_fixupParents)
       30    0.000    0.000    0.000    0.000 _array_api.py:503(xp_result_type)
        1    0.000    0.000    0.000    0.000 periodic_table.py:72(ElementBase)
        1    0.000    0.000    0.000    0.000 contextvars.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3017(sample)
        1    0.000    0.000    0.000    0.000 axis.py:628(Axis)
        1    0.000    0.000    0.000    0.000 gmpy.py:110(_get_flint)
        1    0.000    0.000    0.000    0.000 importtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sharding.py:1(<module>)
        1    0.000    0.000    0.000    0.000 geo.py:1(<module>)
      3/1    0.000    0.000    0.000    0.000 glob.py:60(_iglob)
      3/2    0.000    0.000    0.000    0.000 <frozen posixpath>:420(_joinrealpath)
        1    0.000    0.000    0.000    0.000 _meta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset12.py:1(<module>)
       73    0.000    0.000    0.000    0.000 rcsetup.py:90(<listcomp>)
        1    0.000    0.000    0.000    0.000 glob.py:1(<module>)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:352(contains)
       26    0.000    0.000    0.000    0.000 _sources.py:102(make_source_context)
       19    0.000    0.000    0.000    0.000 path.py:98(__init__)
        1    0.000    0.000    0.000    0.000 nanfunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _color_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 split_module.py:1(<module>)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:655(_is_initvar)
        4    0.000    0.000    0.000    0.000 assumptions.py:481(copy)
     1019    0.000    0.000    0.000    0.000 _tensor_str.py:173(width)
       18    0.000    0.000    0.000    0.000 message.py:489(get)
        1    0.000    0.000    0.000    0.000 __init__.py:258(WordSet)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
      958    0.000    0.000    0.000    0.000 utils.py:56(<genexpr>)
        1    0.000    0.000    0.000    0.000 _foreach_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:85(NamedMemberAccessor)
        2    0.000    0.000    0.000    0.000 doccer.py:263(filldoc)
      295    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        1    0.000    0.000    0.000    0.000 _tensor.py:81(Tensor)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _sources.py:37(normalize_source_lines)
        1    0.000    0.000    0.000    0.000 binrel.py:1(<module>)
        1    0.000    0.000    0.000    0.000 passthrough.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:1(<module>)
        2    0.000    0.000    0.000    0.000 doccer.py:292(unindent_dict)
        1    0.000    0.000    0.000    0.000 partitions.py:1(<module>)
       41    0.000    0.000    0.000    0.000 decorators.py:110(priority_decorator)
        1    0.000    0.000    0.000    0.000 add.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler_util.py:1(<module>)
      295    0.000    0.000    0.000    0.000 _distn_infrastructure.py:839(<genexpr>)
      187    0.000    0.000    0.000    0.000 typing.py:908(_is_unpacked_typevartuple)
       77    0.000    0.000    0.000    0.000 <frozen posixpath>:150(dirname)
        1    0.000    0.000    0.000    0.000 pkgutil.py:1(<module>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1536(from_str)
        1    0.000    0.000    0.000    0.000 _mgc.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:411(<lambda>)
        1    0.000    0.000    0.000    0.000 collections.py:22(Collection)
     12/2    0.000    0.000    0.000    0.000 core.py:1578(makeOptionalList)
     1330    0.000    0.000    0.000    0.000 {built-in method sys.intern}
        5    0.000    0.000    0.000    0.000 perm_groups.py:146(<listcomp>)
       17    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2391(skewness)
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:1(<module>)
  420/397    0.000    0.000    0.000    0.000 basic.py:315(__hash__)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:257(LOBPCGAutogradFunction)
      367    0.000    0.000    0.000    0.000 permutations.py:1385(<listcomp>)
      190    0.000    0.000    0.000    0.000 pyplot.py:82(_copy_docstring_and_deprecators)
        1    0.000    0.000    0.000    0.000 proxy.py:83(TracerBase)
        1    0.000    0.000    0.000    0.000 _conversions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adjoint.py:1(<module>)
      790    0.000    0.000    0.000    0.000 containers.py:63(<genexpr>)
       14    0.000    0.000    0.000    0.000 __init__.py:198(split)
        3    0.000    0.000    0.000    0.000 streams.py:1(<module>)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:633(__new__)
      686    0.000    0.000    0.000    0.000 inspect.py:2457(<lambda>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:907(__init__)
        1    0.000    0.000    0.000    0.000 callable.py:171(CollatorIterDataPipe)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:931(create_module)
       24    0.000    0.000    0.000    0.000 doccer.py:311(unindent_string)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:1(<module>)
        1    0.000    0.000    0.000    0.000 markers.py:145(MarkerStyle)
        3    0.000    0.000    0.000    0.000 functions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 para4band.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:49(__init__)
        1    0.000    0.000    0.000    0.000 _binned_statistic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 zipfile.py:1(<module>)
      605    0.000    0.000    0.000    0.000 _inspect.py:13(ismethod)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:771(register_view)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conventions.py:1(<module>)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1057(__hash__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3247(_moment_central_transform)
        1    0.000    0.000    0.000    0.000 numpy.py:1(<module>)
        8    0.000    0.000    0.000    0.000 typing.py:2248(get_type_hints)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _musllinux.py:1(<module>)
        1    0.000    0.000    0.000    0.000 padding.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:385(register_full)
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:292(_apply)
        1    0.000    0.000    0.000    0.000 unicode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dviread.py:185(Dvi)
        7    0.000    0.000    0.000    0.000 pathlib.py:909(home)
       73    0.000    0.000    0.000    0.000 _internal.py:872(_ufunc_doc_signature_formatter)
       52    0.000    0.000    0.000    0.000 inspect.py:896(getfile)
    429/1    0.000    0.000    0.000    0.000 __config__.py:14(_cleanup)
        2    0.000    0.000    0.000    0.000 conv_fused.py:1(<module>)
      171    0.000    0.000    0.000    0.000 typing.py:1546(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:1(<module>)
       71    0.000    0.000    0.000    0.000 inspect.py:2745(replace)
       10    0.000    0.000    0.000    0.000 _contextlib.py:123(__call__)
        2    0.000    0.000    0.000    0.000 sysconfig.py:253(_extend_dict)
        2    0.000    0.000    0.000    0.000 normalization.py:1(<module>)
      156    0.000    0.000    0.000    0.000 inspect.py:330(isdatadescriptor)
        1    0.000    0.000    0.000    0.000 compatibility.py:1(<module>)
     49/1    0.000    0.000    0.000    0.000 __config__.py:20(<dictcomp>)
      268    0.000    0.000    0.000    0.000 libmpf.py:322(<genexpr>)
        1    0.000    0.000    0.000    0.000 functional_call.py:1(<module>)
        2    0.000    0.000    0.000    0.000 traceback.py:29(format_list)
      607    0.000    0.000    0.000    0.000 <frozen posixpath>:41(_get_sep)
        2    0.000    0.000    0.000    0.000 units.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sysconfig.py:1(<module>)
        2    0.000    0.000    0.000    0.000 traceback.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _sources.py:87(__init__)
      325    0.000    0.000    0.000    0.000 function_base.py:465(_needs_add_docstring)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1276(__init__)
        1    0.000    0.000    0.000    0.000 _decorator.py:1(<module>)
      129    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 matrixbase.py:99(MatrixBase)
        2    0.000    0.000    0.000    0.000 decorator.py:215(decorator)
        2    0.000    0.000    0.000    0.000 quant_type.py:1(<module>)
       27    0.000    0.000    0.000    0.000 singleton.py:190(__init__)
        1    0.000    0.000    0.000    0.000 TiffTags.py:439(_populate)
   160/80    0.000    0.000    0.000    0.000 module.py:2224(named_modules)
     2914    0.000    0.000    0.000    0.000 basic.py:208(__sympy__)
       32    0.000    0.000    0.000    0.000 rcsetup.py:925(<genexpr>)
        1    0.000    0.000    0.000    0.000 transformer.py:1(<module>)
      259    0.000    0.000    0.000    0.000 dataclasses.py:389(<listcomp>)
        1    0.000    0.000    0.000    0.000 streamreader.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:310(Pair)
        3    0.000    0.000    0.000    0.000 arrayprint.py:934(fillFormat)
       79    0.000    0.000    0.000    0.000 core.py:4216(<genexpr>)
       95    0.000    0.000    0.000    0.000 permutations.py:2051(is_identity)
        1    0.000    0.000    0.000    0.000 bisect.py:1(<module>)
      135    0.000    0.000    0.000    0.000 core.py:2016(__eq__)
        1    0.000    0.000    0.000    0.000 kronecker.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pickletools.py:2224(assure_pickle_consistency)
      232    0.000    0.000    0.000    0.000 function.py:147(<listcomp>)
       12    0.000    0.000    0.000    0.000 core.py:6035(__init__)
        1    0.000    0.000    0.000    0.000 case.py:1(<module>)
       12    0.000    0.000    0.000    0.000 message.py:591(get_content_type)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph_module.py:283(GraphModule)
      251    0.000    0.000    0.000    0.000 _docscrape.py:393(<setcomp>)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sysconfig.py:443(get_makefile_filename)
      243    0.000    0.000    0.000    0.000 iterables.py:3083(is_sequence)
      172    0.000    0.000    0.000    0.000 decorator.py:184(public)
     1239    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
      130    0.000    0.000    0.000    0.000 dataclasses.py:550(<dictcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:917(<dictcomp>)
      295    0.000    0.000    0.000    0.000 _parser.py:954(fix_flags)
       26    0.000    0.000    0.000    0.000 _mangling.py:44(is_mangled)
        3    0.000    0.000    0.000    0.000 pyplot.py:794(close)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1504(<dictcomp>)
      453    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}
       24    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:71(add_newdoc_for_scalar_type)
      449    0.000    0.000    0.000    0.000 __init__.py:57(register_decomposition)
        1    0.000    0.000    0.000    0.000 glob.py:105(_glob1)
        1    0.000    0.000    0.000    0.000 axis.py:34(Tick)
        1    0.000    0.000    0.000    0.000 nccl.py:1(<module>)
     1623    0.000    0.000    0.000    0.000 permutations.py:456(<genexpr>)
        1    0.000    0.000    0.000    0.000 runners.py:1(<module>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:465(_str_summary)
        1    0.000    0.000    0.000    0.000 quaternion.py:1(<module>)
        4    0.000    0.000    0.000    0.000 constants.py:1(<module>)
        1    0.000    0.000    0.000    0.000 isoparser.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:313(select_from)
      453    0.000    0.000    0.000    0.000 wrappers.py:210(<genexpr>)
        4    0.000    0.000    0.000    0.000 sparse.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _pylab_helpers.py:79(destroy_all)
        1    0.000    0.000    0.000    0.000 smtlib.py:25(SMTLibPrinter)
        1    0.000    0.000    0.000    0.000 artist.py:60(Artist)
       16    0.000    0.000    0.000    0.000 __init__.py:482(cycler)
        1    0.000    0.000    0.000    0.000 _comparison.py:30(ErrorMeta)
       23    0.000    0.000    0.000    0.000 core.py:5355(__init__)
        1    0.000    0.000    0.000    0.000 pydoc.py:465(Doc)
      970    0.000    0.000    0.000    0.000 _array_api.py:665(_render)
        2    0.000    0.000    0.000    0.000 traceback.py:513(format)
        1    0.000    0.000    0.000    0.000 parametrize.py:1(<module>)
      267    0.000    0.000    0.000    0.000 function.py:152(<lambda>)
        1    0.000    0.000    0.000    0.000 prufer.py:1(<module>)
       87    0.000    0.000    0.000    0.000 docstring.py:38(__call__)
       42    0.000    0.000    0.000    0.000 core.py:277(wrapper)
        1    0.000    0.000    0.000    0.000 str.py:1(<module>)
        1    0.000    0.000    0.000    0.000 container.py:42(Sequential)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:391(__init__)
      420    0.000    0.000    0.000    0.000 _ops.py:506(<listcomp>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2394(kurtosis)
        2    0.000    0.000    0.000    0.000 operations.py:623(register_handlerclass)
       23    0.000    0.000    0.000    0.000 overrides.py:177(decorator)
        1    0.000    0.000    0.000    0.000 param_fetch.py:1(<module>)
       30    0.000    0.000    0.000    0.000 _inspect.py:140(formatargspec)
        7    0.000    0.000    0.000    0.000 ops.py:136(<listcomp>)
       37    0.000    0.000    0.000    0.000 decorators.py:214(make_wrapped)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1485(__str__)
      456    0.000    0.000    0.000    0.000 feedparser.py:78(readline)
     1048    0.000    0.000    0.000    0.000 _ops.py:313(py_impl)
       24    0.000    0.000    0.000    0.000 dviread.py:167(decorate)
      519    0.000    0.000    0.000    0.000 inspect.py:300(ismethod)
        1    0.000    0.000    0.000    0.000 _interface.py:1(<module>)
       27    0.000    0.000    0.000    0.000 pathlib.py:353(_select_from)
        1    0.000    0.000    0.000    0.000 rrule.py:1(<module>)
       16    0.000    0.000    0.000    0.000 structure.py:3569(nelectrons)
      737    0.000    0.000    0.000    0.000 dataclasses.py:439(_field_assign)
      548    0.000    0.000    0.000    0.000 <frozen os>:759(decode)
      231    0.000    0.000    0.000    0.000 inspect.py:1950(_signature_get_user_defined_method)
       17    0.000    0.000    0.000    0.000 getlimits.py:484(__new__)
    347/1    0.000    0.000    0.000    0.000 __config__.py:19(_cleanup)
        1    0.000    0.000    0.000    0.000 fileopener.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _crosstab.py:1(<module>)
       19    0.000    0.000    0.000    0.000 {built-in method posix.lstat}
        1    0.000    0.000    0.000    0.000 scale.py:670(_get_scale_docs)
        1    0.000    0.000    0.000    0.000 options.py:43(TensorPipeRpcBackendOptions)
     39/1    0.000    0.000    0.000    0.000 __config__.py:25(<dictcomp>)
       43    0.000    0.000    0.000    0.000 pathlib.py:546(__fspath__)
        1    0.000    0.000    0.000    0.000 net_min_base.py:89(_MinimizerBase)
     1019    0.000    0.000    0.000    0.000 permutations.py:1065(array_form)
        1    0.000    0.000    0.000    0.000 instancenorm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 selecting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr.py:46(Expr)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2694(__init__)
        1    0.000    0.000    0.000    0.000 _meta.py:7(PackageMetadata)
       55    0.000    0.000    0.000    0.000 __init__.py:1447(__init__)
        1    0.000    0.000    0.000    0.000 plane.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:300(Wrt)
       10    0.000    0.000    0.000    0.000 {function SeedSequence.generate_state at 0x146ac892aa20}
        1    0.000    0.000    0.000    0.000 gmpy.py:135(_get_gmpy2)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:1(<module>)
        1    0.000    0.000    0.000    0.000 flatten.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:29(_initialize)
     1023    0.000    0.000    0.000    0.000 _docscrape.py:46(reset)
        1    0.000    0.000    0.000    0.000 tensor_can.py:1(<module>)
      472    0.000    0.000    0.000    0.000 facts.py:579(__init__)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:296(__init__)
       95    0.000    0.000    0.000    0.000 permutations.py:2055(is_Identity)
        3    0.000    0.000    0.000    0.000 _version.py:114(_compare)
        1    0.000    0.000    0.000    0.000 _type_utils.py:58(JitScalarType)
        1    0.000    0.000    0.000    0.000 ExifTags.py:305(GPS)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:25(__init__)
      222    0.000    0.000    0.000    0.000 wrappers.py:187(out_wrapper)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:1(<module>)
        2    0.000    0.000    0.000    0.000 kind.py:287(_)
       10    0.000    0.000    0.000    0.000 _contextlib.py:69(context_decorator)
       26    0.000    0.000    0.000    0.000 {slot wrapper '__init__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 tasks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 para4band.py:122(Para4Band_train)
       56    0.000    0.000    0.000    0.000 pathlib.py:536(__str__)
        1    0.000    0.000    0.000    0.000 __init__.py:746(copy)
        1    0.000    0.000    0.000    0.000 animation.py:408(FileMovieWriter)
       19    0.000    0.000    0.000    0.000 _continuous_distns.py:59(_call_super_mom)
        3    0.000    0.000    0.000    0.000 _itertools.py:1(<module>)
      108    0.000    0.000    0.000    0.000 typing.py:2532(overload)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3336(_moment_transform_center)
        1    0.000    0.000    0.000    0.000 __init__.py:747(<dictcomp>)
        2    0.000    0.000    0.000    0.000 _version.py:151(__ge__)
      605    0.000    0.000    0.000    0.000 _inspect.py:26(isfunction)
        2    0.000    0.000    0.000    0.000 _multivariate.py:2009(__init__)
        1    0.000    0.000    0.000    0.000 isoparser.py:42(isoparser)
        1    0.000    0.000    0.000    0.000 importtools.py:48(import_module)
       82    0.000    0.000    0.000    0.000 return_types.py:9(pytree_register_structseq)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:922(ShapeEnv)
        1    0.000    0.000    0.000    0.000 process.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {built-in method gc.collect}
        1    0.000    0.000    0.000    0.000 container.py:684(ParameterDict)
      309    0.000    0.000    0.000    0.000 types.py:164(__init__)
        1    0.000    0.000    0.000    0.000 _guards.py:83(Guard)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:605(register_rand_like)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:661(_is_kw_only)
        2    0.000    0.000    0.000    0.000 fuser_method_mappings.py:1(<module>)
       13    0.000    0.000    0.000    0.000 enum.py:1473(__or__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1925(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _decorator.py:63(non_deterministic)
      248    0.000    0.000    0.000    0.000 _docscrape.py:470(_str_extended_summary)
        2    0.000    0.000    0.000    0.000 _shape.py:1(<module>)
       20    0.000    0.000    0.000    0.000 numbers.py:3148(__eq__)
        5    0.000    0.000    0.000    0.000 symbol.py:339(_canonical_assumptions)
      273    0.000    0.000    0.000    0.000 typing_extensions.py:3054(_check_generic)
       27    0.000    0.000    0.000    0.000 artist.py:20(allow_rasterization)
      544    0.000    0.000    0.000    0.000 registration.py:267(onnx_symbolic)
        1    0.000    0.000    0.000    0.000 widgets.py:1087(SubplotTool)
        1    0.000    0.000    0.000    0.000 filelister.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _adapters.py:35(__init__)
     1260    0.000    0.000    0.000    0.000 colors.py:276(<genexpr>)
        1    0.000    0.000    0.000    0.000 _encoded_words.py:1(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:546(_cycler)
        1    0.000    0.000    0.000    0.000 polytools.py:106(Poly)
        2    0.000    0.000    0.000    0.000 fused.py:1(<module>)
        1    0.000    0.000    0.000    0.000 path.py:23(Path)
      364    0.000    0.000    0.000    0.000 socket.py:83(<lambda>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:460(_str_signature)
        1    0.000    0.000    0.000    0.000 pathlib.py:281(_make_selector)
        1    0.000    0.000    0.000    0.000 calendar.py:1(<module>)
        1    0.000    0.000    0.000    0.000 order.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _covariance.py:1(<module>)
     2730    0.000    0.000    0.000    0.000 inspect.py:589(<lambda>)
        1    0.000    0.000    0.000    0.000 arraysetops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 companion.py:1(<module>)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1536(find_distributions)
        1    0.000    0.000    0.000    0.000 ndim_array.py:1(<module>)
       72    0.000    0.000    0.000    0.000 pydoc.py:94(_findclass)
        1    0.000    0.000    0.000    0.000 join.py:112(Join)
        1    0.000    0.000    0.000    0.000 quiver.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _adapters.py:42(_repair_headers)
        9    0.000    0.000    0.000    0.000 message.py:615(get_content_maintype)
       32    0.000    0.000    0.000    0.000 basic.py:2117(_exec_constructor_postprocessors)
        1    0.000    0.000    0.000    0.000 graph.py:19(Node)
       24    0.000    0.000    0.000    0.000 dtypes.py:66(_add_dtype_helper)
        7    0.000    0.000    0.000    0.000 ops.py:140(<listcomp>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1(<module>)
       23    0.000    0.000    0.000    0.000 distributed_c10d.py:1432(exception_handler)
       27    0.000    0.000    0.000    0.000 <frozen genericpath>:27(isfile)
        1    0.000    0.000    0.000    0.000 transpose.py:1(<module>)
      264    0.000    0.000    0.000    0.000 <frozen os>:696(__iter__)
     1191    0.000    0.000    0.000    0.000 {built-in method _bisect.bisect_right}
     2343    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.000    0.000 _cubic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 upsampling.py:1(<module>)
      363    0.000    0.000    0.000    0.000 socket.py:78(<lambda>)
      265    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        1    0.000    0.000    0.000    0.000 package_exporter.py:186(PackageExporter)
      628    0.000    0.000    0.000    0.000 _pytree.py:121(<listcomp>)
       58    0.000    0.000    0.000    0.000 symbol.py:294(_sanitize)
        1    0.000    0.000    0.000    0.000 _decomp_cossin.py:1(<module>)
        1    0.000    0.000    0.000    0.000 timeouts.py:26(Timeout)
      126    0.000    0.000    0.000    0.000 colors.py:704(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:349(__init__)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:1(<module>)
       18    0.000    0.000    0.000    0.000 __init__.py:811(mtime)
        5    0.000    0.000    0.000    0.000 core.py:1485(__radd__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2385(variance)
       54    0.000    0.000    0.000    0.000 typing.py:1620(<genexpr>)
        1    0.000    0.000    0.000    0.000 mathml.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:76(wrap)
        7    0.000    0.000    0.000    0.000 pathlib.py:1377(expanduser)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:67(_apply)
        2    0.000    0.000    0.000    0.000 repmatrix.py:566(__new__)
      213    0.000    0.000    0.000    0.000 ctx_fp.py:51(_wrap_specfun)
      365    0.000    0.000    0.000    0.000 socket.py:88(<lambda>)
      750    0.000    0.000    0.000    0.000 rcsetup.py:234(validator)
      586    0.000    0.000    0.000    0.000 _inspect.py:41(iscode)
        6    0.000    0.000    0.000    0.000 deprecation.py:272(__set_name__)
       42    0.000    0.000    0.000    0.000 traceback.py:458(format_frame_summary)
     1534    0.000    0.000    0.000    0.000 {method 'isupper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _vmap_internals.py:1(<module>)
       21    0.000    0.000    0.000    0.000 deprecation.py:178(finalize)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:360(_get_scalar_type_map)
      366    0.000    0.000    0.000    0.000 socket.py:93(<lambda>)
       89    0.000    0.000    0.000    0.000 _parser.py:894(_parse_flags)
        1    0.000    0.000    0.000    0.000 importer.py:1(<module>)
      226    0.000    0.000    0.000    0.000 rcsetup.py:150(validate_bool)
       40    0.000    0.000    0.000    0.000 rcsetup.py:51(__init__)
        5    0.000    0.000    0.000    0.000 decorator.py:75(__init__)
        1    0.000    0.000    0.000    0.000 container.py:408(ModuleDict)
        1    0.000    0.000    0.000    0.000 pathlib.py:260(compile_pattern)
      544    0.000    0.000    0.000    0.000 registration.py:76(set_base)
        1    0.000    0.000    0.000    0.000 __init__.py:342(<listcomp>)
      304    0.000    0.000    0.000    0.000 _docscrape.py:374(<listcomp>)
       36    0.000    0.000    0.000    0.000 inspect.py:402(isgeneratorfunction)
        2    0.000    0.000    0.000    0.000 helper.py:1(<module>)
       13    0.000    0.000    0.000    0.000 core.py:8389(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1863(Glue)
        8    0.000    0.000    0.000    0.000 deprecation.py:231(wrapper)
        1    0.000    0.000    0.000    0.000 shlex.py:1(<module>)
        2    0.000    0.000    0.000    0.000 repmatrix.py:569(_new)
        1    0.000    0.000    0.000    0.000 axis3d.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:371(<dictcomp>)
       68    0.000    0.000    0.000    0.000 _util.py:1165(_apply_over_batch)
        1    0.000    0.000    0.000    0.000 _creation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matexpr.py:37(MatrixExpr)
       17    0.000    0.000    0.000    0.000 __init__.py:416(by_key)
        8    0.000    0.000    0.000    0.000 symbol.py:393(__xnew_cached_)
       52    0.000    0.000    0.000    0.000 singleton.py:131(__getattr__)
      295    0.000    0.000    0.000    0.000 _parser.py:73(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:893(find_distributions)
      129    0.000    0.000    0.000    0.000 dataclasses.py:593(<listcomp>)
      367    0.000    0.000    0.000    0.000 permutations.py:381(<listcomp>)
        1    0.000    0.000    0.000    0.000 monomials.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adam.py:1(<module>)
        1    0.000    0.000    0.000    0.000 representer.py:1(<module>)
       32    0.000    0.000    0.000    0.000 arraypad.py:458(_as_pairs)
        1    0.000    0.000    0.000    0.000 selector_events.py:1(<module>)
     1326    0.000    0.000    0.000    0.000 _builtins.py:124(_is_special_functional_bound_op)
       30    0.000    0.000    0.000    0.000 utils.py:104(__init__)
        1    0.000    0.000    0.000    0.000 _color_data.py:995(<dictcomp>)
       93    0.000    0.000    0.000    0.000 typing.py:277(_unpack_args)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 exprtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:75(TensorKey)
        1    0.000    0.000    0.000    0.000 conditionset.py:1(<module>)
      635    0.000    0.000    0.000    0.000 typing.py:729(<genexpr>)
      185    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
       17    0.000    0.000    0.000    0.000 stride_tricks.py:480(broadcast_arrays)
      237    0.000    0.000    0.000    0.000 pydoc.py:155(_getowndoc)
      113    0.000    0.000    0.000    0.000 typing.py:1926(_caller)
       19    0.000    0.000    0.000    0.000 deprecation.py:372(<listcomp>)
       20    0.000    0.000    0.000    0.000 colors.py:929(reversed)
        1    0.000    0.000    0.000    0.000 legend_handler.py:1(<module>)
      865    0.000    0.000    0.000    0.000 dataclasses.py:375(<genexpr>)
      426    0.000    0.000    0.000    0.000 {method 'finditer' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 para4tb.py:74(<listcomp>)
        9    0.000    0.000    0.000    0.000 functools.py:800(singledispatch)
        1    0.000    0.000    0.000    0.000 testing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:15(_init_logger)
        1    0.000    0.000    0.000    0.000 flatten.py:54(Unflatten)
        9    0.000    0.000    0.000    0.000 deprecation.py:435(<listcomp>)
        1    0.000    0.000    0.000    0.000 _quadrature.py:1(<module>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1385(AnnotationBbox)
      582    0.000    0.000    0.000    0.000 __init__.py:422(<genexpr>)
       39    0.000    0.000    0.000    0.000 inspect.py:391(_has_code_flag)
        1    0.000    0.000    0.000    0.000 meijerint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:2306(_make_var_reduction_prim)
       26    0.000    0.000    0.000    0.000 core.py:921(__init__)
        1    0.000    0.000    0.000    0.000 configparser.py:376(BasicInterpolation)
      117    0.000    0.000    0.000    0.000 __init__.py:321(filter)
       28    0.000    0.000    0.000    0.000 <frozen _collections_abc>:778(__contains__)
        1    0.000    0.000    0.000    0.000 series_class.py:1(<module>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1018(<listcomp>)
        1    0.000    0.000    0.000    0.000 _polybase.py:1(<module>)
       58    0.000    0.000    0.000    0.000 _utils.py:779(classproperty)
        1    0.000    0.000    0.000    0.000 results.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:306(profile)
       17    0.000    0.000    0.000    0.000 ctx_iv.py:407(_mpq)
        3    0.000    0.000    0.000    0.000 embedding_ops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 powerset.py:1(<module>)
      494    0.000    0.000    0.000    0.000 _compiler.py:31(_combine_flags)
      386    0.000    0.000    0.000    0.000 inspect.py:283(ismodule)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:324(_init_builtins)
      108    0.000    0.000    0.000    0.000 iterables.py:3025(iterable)
        1    0.000    0.000    0.000    0.000 _interpolate.py:282(__init__)
      306    0.000    0.000    0.000    0.000 rcsetup.py:1043(_convert_validator_spec)
       13    0.000    0.000    0.000    0.000 core.py:8394(getdoc)
       16    0.000    0.000    0.000    0.000 __init__.py:226(_from_iter)
      255    0.000    0.000    0.000    0.000 traversal.py:12(iterargs)
        1    0.000    0.000    0.000    0.000 resolver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bz2.py:271(open)
       14    0.000    0.000    0.000    0.000 pathlib.py:530(_make_child)
       23    0.000    0.000    0.000    0.000 symbolic_shapes.py:699(_make_node_magic)
        1    0.000    0.000    0.000    0.000 container.py:250(ModuleList)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:1(<module>)
      109    0.000    0.000    0.000    0.000 inspect.py:310(ismethoddescriptor)
      163    0.000    0.000    0.000    0.000 function.py:149(<listcomp>)
        3    0.000    0.000    0.000    0.000 __init__.py:906(_search_paths)
       16    0.000    0.000    0.000    0.000 tokenize.py:408(tokenize)
        1    0.000    0.000    0.000    0.000 common.py:432(<listcomp>)
        1    0.000    0.000    0.000    0.000 trace.py:1(<module>)
       93    0.000    0.000    0.000    0.000 inspect.py:2080(_signature_is_functionlike)
      162    0.000    0.000    0.000    0.000 core.py:2446(__new__)
        1    0.000    0.000    0.000    0.000 _vertex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_managers.py:1(<module>)
       40    0.000    0.000    0.000    0.000 colors.py:889(__init__)
       20    0.000    0.000    0.000    0.000 numbers.py:3314(__eq__)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:393(DataFlowNode)
        1    0.000    0.000    0.000    0.000 patches.py:2812(ArrowStyle)
       19    0.000    0.000    0.000    0.000 pythonmpq.py:57(__new__)
    52/46    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1320(__len__)
        3    0.000    0.000    0.000    0.000 autocast_mode.py:1(<module>)
     1080    0.000    0.000    0.000    0.000 inspect.py:729(getmro)
        1    0.000    0.000    0.000    0.000 curve.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:780(_formatArray)
        7    0.000    0.000    0.000    0.000 __init__.py:72(CFUNCTYPE)
        1    0.000    0.000    0.000    0.000 configparser.py:522(LegacyInterpolation)
        1    0.000    0.000    0.000    0.000 _trace.py:566(ignore_lib_warnings)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:526(register_native_batch_norm)
        1    0.000    0.000    0.000    0.000 combinatorics.py:17(SamplerIterDataPipe)
     1269    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 parabola.py:1(<module>)
       68    0.000    0.000    0.000    0.000 pickletools.py:1124(__init__)
        1    0.000    0.000    0.000    0.000 fnmatch.py:48(filter)
        1    0.000    0.000    0.000    0.000 adaptive.py:1(<module>)
       12    0.000    0.000    0.000    0.000 doccer.py:161(_doc)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graycode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gruntz.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:801(zip_children)
        1    0.000    0.000    0.000    0.000 _parser.py:58(_timelex)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:634(MemoryProfile)
        1    0.000    0.000    0.000    0.000 rcsetup.py:96(<listcomp>)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:1(<module>)
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1283(_find_parent_path_names)
        2    0.000    0.000    0.000    0.000 _delegators.py:1(<module>)
        2    0.000    0.000    0.000    0.000 getlimits.py:540(_init)
      871    0.000    0.000    0.000    0.000 conflict.py:67(<listcomp>)
       46    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:276(__init__)
        1    0.000    0.000    0.000    0.000 axes3d.py:44(Axes3D)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2177(sum)
       42    0.000    0.000    0.000    0.000 results.py:573(copy)
        1    0.000    0.000    0.000    0.000 _recursive.py:354(ConcreteTypeStore)
      871    0.000    0.000    0.000    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 contains.py:1(<module>)
        9    0.000    0.000    0.000    0.000 textwrap.py:470(indent)
       18    0.000    0.000    0.000    0.000 _static.py:27(_prevent_modification)
       71    0.000    0.000    0.000    0.000 enum.py:345(__init__)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 testing.py:17(pyparsing_test)
        1    0.000    0.000    0.000    0.000 _collections.py:1(<module>)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:340(_axis_nan_policy_factory)
        1    0.000    0.000    0.000    0.000 polar.py:776(PolarAxes)
      786    0.000    0.000    0.000    0.000 utils.py:45(<genexpr>)
       40    0.000    0.000    0.000    0.000 getlimits.py:91(_float_to_float)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1249(wrapped)
     1282    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 helpers.py:1084(<listcomp>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1339(_generate_domain_support)
      130    0.000    0.000    0.000    0.000 <frozen abc>:146(update_abstractmethods)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:100(<lambda>)
        1    0.000    0.000    0.000    0.000 unicode.py:123(pyparsing_unicode)
      544    0.000    0.000    0.000    0.000 registration.py:71(__init__)
     1297    0.000    0.000    0.000    0.000 permutations.py:1613(__iter__)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:45(GradScaler)
        1    0.000    0.000    0.000    0.000 backend_registry.py:56(register_backend)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1254(_direct)
      151    0.000    0.000    0.000    0.000 libintmath.py:353(ifac)
        3    0.000    0.000    0.000    0.000 __init__.py:866(__init__)
        1    0.000    0.000    0.000    0.000 mul.py:91(Mul)
        2    0.000    0.000    0.000    0.000 mixins.py:1(<module>)
        4    0.000    0.000    0.000    0.000 feedparser.py:101(push)
        1    0.000    0.000    0.000    0.000 bezier.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wishart.py:1(<module>)
       40    0.000    0.000    0.000    0.000 rcsetup.py:63(<dictcomp>)
     15/3    0.000    0.000    0.000    0.000 arrayprint.py:789(recurser)
        1    0.000    0.000    0.000    0.000 exponential.py:1108(LambertW)
        1    0.000    0.000    0.000    0.000 numbers.py:329(tribonacci)
        1    0.000    0.000    0.000    0.000 core.py:6550(__new__)
        1    0.000    0.000    0.000    0.000 immutable_collections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fnmatch.py:38(_compile_pattern)
        1    0.000    0.000    0.000    0.000 radau.py:1(<module>)
        5    0.000    0.000    0.000    0.000 core.py:6040(__add__)
     1185    0.000    0.000    0.000    0.000 enum.py:1125(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:617(Shadow)
        1    0.000    0.000    0.000    0.000 _qmc.py:802(QMCEngine)
       12    0.000    0.000    0.000    0.000 datetime.py:592(__new__)
        1    0.000    0.000    0.000    0.000 kl.py:818(_add_kl_info)
        1    0.000    0.000    0.000    0.000 jit_utils.py:22(GraphContext)
        1    0.000    0.000    0.000    0.000 ExifTags.py:361(LightSource)
        1    0.000    0.000    0.000    0.000 dotproduct.py:1(<module>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1044(<listcomp>)
      416    0.000    0.000    0.000    0.000 typing.py:1667(__eq__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2318(integrand)
       21    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1118(_dispatch)
       32    0.000    0.000    0.000    0.000 basic.py:2128(<setcomp>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:593(CategoryElement)
        1    0.000    0.000    0.000    0.000 backend_agg.py:71(RendererAgg)
        1    0.000    0.000    0.000    0.000 mathematica.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:108(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:149(Backend)
        1    0.000    0.000    0.000    0.000 _bsr.py:1(<module>)
       18    0.000    0.000    0.000    0.000 core.py:997(__init__)
        2    0.000    0.000    0.000    0.000 bn_relu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _basic.py:33(<dictcomp>)
        3    0.000    0.000    0.000    0.000 zipfile.py:2370(__init__)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:86(DomainMatrix)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._dist_autograd_init}
        1    0.000    0.000    0.000    0.000 lattice.py:38(Lattice)
        1    0.000    0.000    0.000    0.000 _multivariate.py:394(__init__)
        3    0.000    0.000    0.000    0.000 feedparser.py:184(close)
        1    0.000    0.000    0.000    0.000 hooks.py:1(<module>)
      432    0.000    0.000    0.000    0.000 colors.py:224(<genexpr>)
        2    0.000    0.000    0.000    0.000 windows.py:1(<module>)
        1    0.000    0.000    0.000    0.000 solveset.py:1(<module>)
        1    0.000    0.000    0.000    0.000 groups.py:316(<dictcomp>)
        1    0.000    0.000    0.000    0.000 legend.py:269(Legend)
        6    0.000    0.000    0.000    0.000 _codata.py:2045(replace_exact)
        1    0.000    0.000    0.000    0.000 _exceptions.py:1(<module>)
       15    0.000    0.000    0.000    0.000 _bunch.py:5(_validate_names)
        1    0.000    0.000    0.000    0.000 storage.py:18(_StorageBase)
        2    0.000    0.000    0.000    0.000 dropout.py:1(<module>)
      865    0.000    0.000    0.000    0.000 dataclasses.py:1102(<genexpr>)
     1790    0.000    0.000    0.000    0.000 __init__.py:785(<lambda>)
       64    0.000    0.000    0.000    0.000 wrappers.py:294(BackwardsNotSupported)
        5    0.000    0.000    0.000    0.000 core.py:589(_setResultsName)
       27    0.000    0.000    0.000    0.000 singleton.py:125(register)
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:47(_KinetoProfile)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1660(ElementType)
        1    0.000    0.000    0.000    0.000 polyoptions.py:187(_init_dependencies_order)
        1    0.000    0.000    0.000    0.000 spines.py:1(<module>)
       20    0.000    0.000    0.000    0.000 module.py:2167(children)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:108(<dictcomp>)
      158    0.000    0.000    0.000    0.000 typing.py:1800(<genexpr>)
        1    0.000    0.000    0.000    0.000 bz2.py:37(__init__)
        1    0.000    0.000    0.000    0.000 _coo.py:1(<module>)
        7    0.000    0.000    0.000    0.000 numeric.py:1393(moveaxis)
        1    0.000    0.000    0.000    0.000 weak.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tricontour.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _iotools.py:1(<module>)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:585(__init__)
      166    0.000    0.000    0.000    0.000 pathlib.py:239(splitroot)
        1    0.000    0.000    0.000    0.000 configparser.py:448(ExtendedInterpolation)
        1    0.000    0.000    0.000    0.000 fake_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unicode.py:85(identchars)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:899(_nsum_iv)
       10    0.000    0.000    0.000    0.000 version.py:52(__init__)
        5    0.000    0.000    0.000    0.000 backend_bases.py:1580(_check_savefig_extra_args)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2979(prod)
     1002    0.000    0.000    0.000    0.000 enum.py:230(__init__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:121(RendererBase)
       34    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:191(SchemaMatcher)
      566    0.000    0.000    0.000    0.000 _compiler.py:426(_get_iscased)
        1    0.000    0.000    0.000    0.000 core.py:52(Orbital)
        1    0.000    0.000    0.000    0.000 _rules.py:382(_POERules)
      138    0.000    0.000    0.000    0.000 {built-in method builtins.round}
      166    0.000    0.000    0.000    0.000 colors.py:521(__init__)
      513    0.000    0.000    0.000    0.000 {method 'items' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:181(SymNode)
        4    0.000    0.000    0.000    0.000 enum.py:1357(_missing_)
     1616    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
      147    0.000    0.000    0.000    0.000 TiffTags.py:35(__new__)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:94(_add_aliases)
       54    0.000    0.000    0.000    0.000 typing.py:1496(__mro_entries__)
        1    0.000    0.000    0.000    0.000 _dok.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sampler.py:210(BatchSampler)
       13    0.000    0.000    0.000    0.000 {built-in method torch._C._dispatch_library}
       23    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:593(__init__)
        1    0.000    0.000    0.000    0.000 serializer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 configparser.py:1325(ConverterMapping)
        1    0.000    0.000    0.000    0.000 von_mises.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sequences.py:26(SeqBase)
        2    0.000    0.000    0.000    0.000 conv_relu.py:1(<module>)
        2    0.000    0.000    0.000    0.000 typing.py:1556(__or__)
        1    0.000    0.000    0.000    0.000 _adapters.py:8(Message)
        2    0.000    0.000    0.000    0.000 repmatrix.py:209(_flat_list_to_DomainMatrix)
      117    0.000    0.000    0.000    0.000 _parser.py:1090(expand_template)
       16    0.000    0.000    0.000    0.000 _internal.py:32(wrapped_f)
        1    0.000    0.000    0.000    0.000 parameter.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:219(MathtextBackendPs)
        3    0.000    0.000    0.000    0.000 zipfile.py:2251(make)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2382(mean)
       62    0.000    0.000    0.000    0.000 rational.py:31(__new__)
        1    0.000    0.000    0.000    0.000 dirichlet.py:1(<module>)
      684    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 backend_bases.py:2785(NavigationToolbar2)
        1    0.000    0.000    0.000    0.000 gzip.py:1(<module>)
      114    0.000    0.000    0.000    0.000 textwrap.py:482(prefixed_lines)
        1    0.000    0.000    0.000    0.000 tritools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combinatorics.py:14(ShufflerIterDataPipe)
       34    0.000    0.000    0.000    0.000 libmpf.py:491(from_rational)
       43    0.000    0.000    0.000    0.000 symbolic_shapes.py:817(_make_user_magic)
       20    0.000    0.000    0.000    0.000 optimizer.py:291(_patch_step_function)
        1    0.000    0.000    0.000    0.000 _legacy.py:1(<module>)
      216    0.000    0.000    0.000    0.000 typing.py:1389(<genexpr>)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2007(_validate_order_kind)
      307    0.000    0.000    0.000    0.000 __init__.py:722(__iter__)
      694    0.000    0.000    0.000    0.000 boolalg.py:480(<lambda>)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:1(<module>)
       92    0.000    0.000    0.000    0.000 _collections.py:20(__missing__)
        1    0.000    0.000    0.000    0.000 pyplot.py:2172(<listcomp>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4994(__init__)
    27/23    0.000    0.000    0.000    0.000 basic.py:366(compare)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2249(_support)
       83    0.000    0.000    0.000    0.000 linecache.py:147(lazycache)
       37    0.000    0.000    0.000    0.000 numeric.py:1855(isscalar)
        2    0.000    0.000    0.000    0.000 _basic.py:3190(factorial2)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:1(<module>)
       21    0.000    0.000    0.000    0.000 domain.py:379(__call__)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1652(_avg_pool)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:15(ExpressionDomain)
       18    0.000    0.000    0.000    0.000 __init__.py:844(search)
        1    0.000    0.000    0.000    0.000 adam.py:13(Adam)
       26    0.000    0.000    0.000    0.000 _basic.py:33(<listcomp>)
       20    0.000    0.000    0.000    0.000 {built-in method torch._C._nn._parse_to}
      261    0.000    0.000    0.000    0.000 dispatcher.py:204(<genexpr>)
        1    0.000    0.000    0.000    0.000 patches.py:1909(BoxStyle)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3206(_moment_central)
        1    0.000    0.000    0.000    0.000 package_importer.py:48(PackageImporter)
        1    0.000    0.000    0.000    0.000 monomials.py:387(MonomialOps)
        1    0.000    0.000    0.000    0.000 transformer.py:17(Transformer)
        1    0.000    0.000    0.000    0.000 _data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:7(_ExtractModuleReferences)
        1    0.000    0.000    0.000    0.000 records.py:1(<module>)
       29    0.000    0.000    0.000    0.000 _array_api.py:576(<listcomp>)
        1    0.000    0.000    0.000    0.000 glob_group.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ddm.py:102(DDM)
        5    0.000    0.000    0.000    0.000 random.py:119(__init__)
        2    0.000    0.000    0.000    0.000 repmatrix.py:183(_dod_to_DomainMatrix)
       41    0.000    0.000    0.000    0.000 deprecation.py:365(<genexpr>)
        1    0.000    0.000    0.000    0.000 unicode.py:99(identbodychars)
       15    0.000    0.000    0.000    0.000 decorator.py:170(depends_on_deco)
       10    0.000    0.000    0.000    0.000 util.py:421(_inner)
        1    0.000    0.000    0.000    0.000 repr.py:1(<module>)
       36    0.000    0.000    0.000    0.000 tokenize.py:329(find_cookie)
        1    0.000    0.000    0.000    0.000 routeddecoder.py:17(RoutedDecoderIterDataPipe)
       58    0.000    0.000    0.000    0.000 core.py:1922(set_name)
        1    0.000    0.000    0.000    0.000 fields.py:1(<module>)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:582(_ReducedHCT_Element)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quoprimime.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:166(ComplexRootOf)
       37    0.000    0.000    0.000    0.000 mul.py:494(<listcomp>)
        1    0.000    0.000    0.000    0.000 expr.py:266(__pow__)
       92    0.000    0.000    0.000    0.000 permutations.py:463(size)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 _base.py:85(_spbase)
        1    0.000    0.000    0.000    0.000 transports.py:1(<module>)
       55    0.000    0.000    0.000    0.000 <frozen codecs>:309(__init__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2894(icdf)
       11    0.000    0.000    0.000    0.000 fractions.py:62(__new__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1656(DraggableBase)
       44    0.000    0.000    0.000    0.000 core.py:4124(<genexpr>)
        1    0.000    0.000    0.000    0.000 _netcdf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 upsampling.py:11(Upsample)
        1    0.000    0.000    0.000    0.000 animation.py:96(MovieWriterRegistry)
        1    0.000    0.000    0.000    0.000 core.py:5241(__init__)
        1    0.000    0.000    0.000    0.000 _fir_filter_design.py:1(<module>)
      143    0.000    0.000    0.000    0.000 core.py:794(preParse)
       27    0.000    0.000    0.000    0.000 pretty_symbology.py:121(<genexpr>)
       87    0.000    0.000    0.000    0.000 utils.py:44(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 splitter_base.py:256(_SplitterBase)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:757(__init_subclass__)
        6    0.000    0.000    0.000    0.000 ctx_iv.py:413(convert)
       34    0.000    0.000    0.000    0.000 operations.py:118(_from_args)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1128(__init__)
        1    0.000    0.000    0.000    0.000 sdm.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _text.py:79(__hash__)
      135    0.000    0.000    0.000    0.000 containers.py:72(__iter__)
       20    0.000    0.000    0.000    0.000 mul.py:34(_mulsort)
        1    0.000    0.000    0.000    0.000 _endian.py:1(<module>)
      711    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
        1    0.000    0.000    0.000    0.000 dumper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3267(__init__)
        1    0.000    0.000    0.000    0.000 histograms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _csc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:90(<listcomp>)
       90    0.000    0.000    0.000    0.000 _pytree.py:47(_register_pytree_node)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:87(_apply)
        1    0.000    0.000    0.000    0.000 numbers.py:1211(Rational)
        1    0.000    0.000    0.000    0.000 conv.py:1195(LazyConv1d)
       23    0.000    0.000    0.000    0.000 functools.py:841(_is_union_type)
       16    0.000    0.000    0.000    0.000 arraypad.py:86(_pad_simple)
       43    0.000    0.000    0.000    0.000 core.py:3157(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 bdist.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decorators.py:236(_func)
       22    0.000    0.000    0.000    0.000 numbers.py:1811(__new__)
        1    0.000    0.000    0.000    0.000 logic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colors.py:97(<dictcomp>)
        1    0.000    0.000    0.000    0.000 emitter.py:1(<module>)
        1    0.000    0.000    0.000    0.000 structure.py:1006(IStructure)
        1    0.000    0.000    0.000    0.000 _polyint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 optimization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _freeze.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _pep440.py:292(__init__)
        1    0.000    0.000    0.000    0.000 zetazeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6108(__init__)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1(<module>)
      216    0.000    0.000    0.000    0.000 message.py:506(set_raw)
      480    0.000    0.000    0.000    0.000 artist.py:1371(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:666(<listcomp>)
        1    0.000    0.000    0.000    0.000 proxy.py:476(ParameterProxy)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _adapters.py:42(CompatibilityFiles)
        1    0.000    0.000    0.000    0.000 linear.py:9(Linear)
        1    0.000    0.000    0.000    0.000 _qmc.py:2312(MultivariateNormalQMC)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:138(_family)
        2    0.000    0.000    0.000    0.000 _basic.py:3035(_factorialx_wrapper)
        1    0.000    0.000    0.000    0.000 symbolic_opset14.py:1(<module>)
        1    0.000    0.000    0.000    0.000 interpolate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tensor.py:98(_IndexStructure)
       21    0.000    0.000    0.000    0.000 __init__.py:315(_subx)
        6    0.000    0.000    0.000    0.000 core.py:1737(__call__)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2223(support)
        9    0.000    0.000    0.000    0.000 pathlib.py:765(__truediv__)
      544    0.000    0.000    0.000    0.000 registration.py:81(in_base)
        1    0.000    0.000    0.000    0.000 uuid.py:85(UUID)
        1    0.000    0.000    0.000    0.000 repmatrix.py:1(<module>)
       48    0.000    0.000    0.000    0.000 string.py:139(formula_double_format)
        1    0.000    0.000    0.000    0.000 symbolic_opset7.py:1(<module>)
        1    0.000    0.000    0.000    0.000 testing.py:22(reset_pyparsing_context)
        1    0.000    0.000    0.000    0.000 assumptions_generated.py:1(<module>)
        1    0.000    0.000    0.000    0.000 orderings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyclasses.py:138(DMP)
        4    0.000    0.000    0.000    0.000 random.py:128(seed)
        1    0.000    0.000    0.000    0.000 getlimits.py:1(<module>)
        1    0.000    0.000    0.000    0.000 queues.py:1(<module>)
       21    0.000    0.000    0.000    0.000 domain.py:371(new)
       16    0.000    0.000    0.000    0.000 sysconfig.py:244(_subst_vars)
        8    0.000    0.000    0.000    0.000 kind.py:43(__new__)
       49    0.000    0.000    0.000    0.000 _compiler.py:405(_generate_overlap_table)
      213    0.000    0.000    0.000    0.000 ctx_iv.py:369(_wrap_specfun)
        1    0.000    0.000    0.000    0.000 _distr_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<dictcomp>)
        8    0.000    0.000    0.000    0.000 typing.py:2345(<dictcomp>)
        1    0.000    0.000    0.000    0.000 spines.py:11(Spine)
        1    0.000    0.000    0.000    0.000 _guards.py:26(GuardSource)
       18    0.000    0.000    0.000    0.000 _compiler.py:389(_bytes_to_codes)
        6    0.000    0.000    0.000    0.000 numeric.py:2507(extend_all)
        1    0.000    0.000    0.000    0.000 exceptions.py:30(ParseBaseException)
        1    0.000    0.000    0.000    0.000 sampler.py:18(Sampler)
       66    0.000    0.000    0.000    0.000 __init__.py:228(_acquireLock)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:118(<lambda>)
        1    0.000    0.000    0.000    0.000 analyzer.py:1018(PointGroupAnalyzer)
        1    0.000    0.000    0.000    0.000 patches.py:3564(FancyBboxPatch)
        1    0.000    0.000    0.000    0.000 doccer.py:1(<module>)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:58(bitname)
      224    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
        1    0.000    0.000    0.000    0.000 streamplot.py:1(<module>)
       99    0.000    0.000    0.000    0.000 traceback.py:389(extended_frame_gen)
        1    0.000    0.000    0.000    0.000 core.py:141(MaskedTensor)
      107    0.000    0.000    0.000    0.000 rcsetup.py:65(__call__)
       26    0.000    0.000    0.000    0.000 pathlib.py:657(stem)
        1    0.000    0.000    0.000    0.000 libelefun.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:261(MathtextBackendPdf)
      212    0.000    0.000    0.000    0.000 transforms.py:1256(<genexpr>)
      309    0.000    0.000    0.000    0.000 enum.py:220(__set_name__)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:913(_set_invalid_nan)
        1    0.000    0.000    0.000    0.000 chebyshev.py:1(<module>)
        3    0.000    0.000    0.000    0.000 zipfile.py:1242(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1078(StandardPsFonts)
        1    0.000    0.000    0.000    0.000 _tukeylambda_stats.py:1(<module>)
       72    0.000    0.000    0.000    0.000 util.py:113(set_)
        3    0.000    0.000    0.000    0.000 design_patterns.py:43(cached_class)
        1    0.000    0.000    0.000    0.000 free_groups.py:1(<module>)
       71    0.000    0.000    0.000    0.000 enum.py:945(_find_data_repr_)
        1    0.000    0.000    0.000    0.000 _interface.py:55(LinearOperator)
        8    0.000    0.000    0.000    0.000 core.py:5098(__init__)
       38    0.000    0.000    0.000    0.000 assumptions.py:494(make_property)
    18/17    0.000    0.000    0.000    0.000 typing.py:1474(__repr__)
        1    0.000    0.000    0.000    0.000 rational.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _adapters.py:49(<listcomp>)
       47    0.000    0.000    0.000    0.000 numbers.py:1927(__mul__)
        6    0.000    0.000    0.000    0.000 abc.py:32(_register)
       23    0.000    0.000    0.000    0.000 pythonmpq.py:103(_new)
        1    0.000    0.000    0.000    0.000 _sysconfigdata__linux_x86_64-linux-gnu.py:1(<module>)
      254    0.000    0.000    0.000    0.000 core.py:3902(<genexpr>)
      160    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1220(__init__)
        5    0.000    0.000    0.000    0.000 matrices.py:749(__init__)
        1    0.000    0.000    0.000    0.000 interpreter.py:370(Transformer)
        2    0.000    0.000    0.000    0.000 extension.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3646(_logpxf_dispatch)
      128    0.000    0.000    0.000    0.000 dataclasses.py:1053(<listcomp>)
        1    0.000    0.000    0.000    0.000 _fuser.py:1(<module>)
      841    0.000    0.000    0.000    0.000 inspect.py:2737(annotation)
        1    0.000    0.000    0.000    0.000 container.py:552(ParameterList)
        2    0.000    0.000    0.000    0.000 core.py:6169(<listcomp>)
        1    0.000    0.000    0.000    0.000 systems.py:1(<module>)
        1    0.000    0.000    0.000    0.000 serialization.py:281(_open_zipfile_reader)
        1    0.000    0.000    0.000    0.000 fancysets.py:1386(CartesianComplexRegion)
        1    0.000    0.000    0.000    0.000 basic.py:156(Basic)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:120(<dictcomp>)
        1    0.000    0.000    0.000    0.000 decorators.py:111(binary_op_wrapper)
        4    0.000    0.000    0.000    0.000 _script.py:265(__init__)
       72    0.000    0.000    0.000    0.000 util.py:110(get)
        1    0.000    0.000    0.000    0.000 _guards.py:318(TracingContext)
        2    0.000    0.000    0.000    0.000 typing.py:2962(TypedDict)
       12    0.000    0.000    0.000    0.000 weakref.py:104(__init__)
        1    0.000    0.000    0.000    0.000 _compat_pickle.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:37(SecondaryAxis)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1379(<listcomp>)
        1    0.000    0.000    0.000    0.000 rings.py:586(PolyElement)
        1    0.000    0.000    0.000    0.000 lazy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:414(StreamContext)
       23    0.000    0.000    0.000    0.000 rcsetup.py:347(validate_color_or_auto)
        1    0.000    0.000    0.000    0.000 maple.py:1(<module>)
      200    0.000    0.000    0.000    0.000 _ops.py:437(__hash__)
        1    0.000    0.000    0.000    0.000 core.py:4667(ParseElementEnhance)
        2    0.000    0.000    0.000    0.000 deprecation.py:1(<module>)
       29    0.000    0.000    0.000    0.000 _array_api.py:571(<listcomp>)
        1    0.000    0.000    0.000    0.000 hooks.py:9(RemovableHandle)
        4    0.000    0.000    0.000    0.000 ctx_iv.py:43(__new__)
        1    0.000    0.000    0.000    0.000 backend_managers.py:39(ToolManager)
        1    0.000    0.000    0.000    0.000 _cubic.py:378(Akima1DInterpolator)
        2    0.000    0.000    0.000    0.000 _distributor_init.py:1(<module>)
        1    0.000    0.000    0.000    0.000 optimizer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4391(__init__)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hermite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 add.py:93(Add)
        1    0.000    0.000    0.000    0.000 __init__.py:437(_get_xdg_config_dir)
        1    0.000    0.000    0.000    0.000 rnn.py:18(LSTMCell)
        3    0.000    0.000    0.000    0.000 message.py:243(get_payload)
       16    0.000    0.000    0.000    0.000 {method 'uniform' of 'numpy.random._generator.Generator' objects}
      748    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:107(FullHessianUpdateStrategy)
        1    0.000    0.000    0.000    0.000 patches.py:1185(Arrow)
       10    0.000    0.000    0.000    0.000 deprecation.py:83(wrap)
      567    0.000    0.000    0.000    0.000 permutations.py:1184(size)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glob.py:175(_listdir)
       51    0.000    0.000    0.000    0.000 nvfuser_prims.py:144(_assert_nvfuser_op_exists)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:1(<module>)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:649(__init__)
      317    0.000    0.000    0.000    0.000 overrides.py:105(array_function_dispatch)
        1    0.000    0.000    0.000    0.000 cnf.py:1(<module>)
       37    0.000    0.000    0.000    0.000 libmpf.py:950(mpf_div)
        1    0.000    0.000    0.000    0.000 expr.py:261(_pow)
      257    0.000    0.000    0.000    0.000 typing.py:1661(_value_and_type_iter)
        1    0.000    0.000    0.000    0.000 laguerre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:569(__init__)
        5    0.000    0.000    0.000    0.000 pathlib.py:757(joinpath)
        1    0.000    0.000    0.000    0.000 core.py:3882(ParseExpression)
      729    0.000    0.000    0.000    0.000 conflict.py:63(<lambda>)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:29(_nonzero_schemas)
        1    0.000    0.000    0.000    0.000 scalarint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:169(FakeTensorConverter)
       62    0.000    0.000    0.000    0.000 rational.py:7(create_reduced)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wishart.py:30(Wishart)
        4    0.000    0.000    0.000    0.000 typing.py:349(_tp_cache)
       16    0.000    0.000    0.000    0.000 __init__.py:150(__init__)
        2    0.000    0.000    0.000    0.000 version.py:47(parse)
        1    0.000    0.000    0.000    0.000 operations.py:415(inversion)
        1    0.000    0.000    0.000    0.000 patches.py:3828(FancyArrowPatch)
        1    0.000    0.000    0.000    0.000 conv.py:272(Conv1d)
        1    0.000    0.000    0.000    0.000 conv.py:182(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 basic.py:2233(Atom)
      576    0.000    0.000    0.000    0.000 {method '__init_subclass__' of 'object' objects}
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.isSubtypeOf}
        1    0.000    0.000    0.000    0.000 legendre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 streams.py:395(StreamReader)
        1    0.000    0.000    0.000    0.000 numbers.py:419(bernoulli)
        1    0.000    0.000    0.000    0.000 _trigonometric_special.py:1(<module>)
      129    0.000    0.000    0.000    0.000 dataclasses.py:1047(<listcomp>)
      350    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.add_docstring}
        1    0.000    0.000    0.000    0.000 fake_utils.py:48(CrossRefFakeMode)
        1    0.000    0.000    0.000    0.000 distribution.py:10(Distribution)
        1    0.000    0.000    0.000    0.000 core.py:2697(MaskedArray)
        1    0.000    0.000    0.000    0.000 pooling.py:257(MaxUnpool1d)
      777    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_iscased}
        1    0.000    0.000    0.000    0.000 _parser.py:294(__init__)
       45    0.000    0.000    0.000    0.000 pathlib.py:523(_format_parsed_parts)
      377    0.000    0.000    0.000    0.000 enum.py:779(<genexpr>)
       58    0.000    0.000    0.000    0.000 results.py:454(__iadd__)
        1    0.000    0.000    0.000    0.000 core.py:5544(Forward)
  277/275    0.000    0.000    0.000    0.000 results.py:176(__init__)
        1    0.000    0.000    0.000    0.000 importer.py:28(Importer)
        1    0.000    0.000    0.000    0.000 conv_add.py:1(<module>)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:117(<lambda>)
       37    0.000    0.000    0.000    0.000 rcsetup.py:558(_validate_linestyle)
        1    0.000    0.000    0.000    0.000 ordinals.py:56(Ordinal)
        1    0.000    0.000    0.000    0.000 dlpack.py:10(DLDeviceType)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:37(Category)
        2    0.000    0.000    0.000    0.000 core.py:555(set_results_name)
       93    0.000    0.000    0.000    0.000 _script.py:897(<lambda>)
       26    0.000    0.000    0.000    0.000 {built-in method torch._C.call_stack}
        1    0.000    0.000    0.000    0.000 operator_support.py:37(OperatorSupport)
        1    0.000    0.000    0.000    0.000 docstring.py:1(<module>)
       15    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)
      108    0.000    0.000    0.000    0.000 typing.py:1015(<genexpr>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:325(__init__)
        1    0.000    0.000    0.000    0.000 core.py:125(Diagnostics)
        1    0.000    0.000    0.000    0.000 transforms.py:213(BboxBase)
        1    0.000    0.000    0.000    0.000 scale.py:204(LogTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:979(ComplexFloatStorage)
      682    0.000    0.000    0.000    0.000 {function RcParams.__getitem__ at 0x146a996d0cc0}
        3    0.000    0.000    0.000    0.000 blas.py:395(getter)
        1    0.000    0.000    0.000    0.000 swa_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1644(FigureCanvasBase)
        1    0.000    0.000    0.000    0.000 accumulationbounds.py:14(AccumulationBounds)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4440(TruncatedDistribution)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:101(<lambda>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2835(deprecated)
        1    0.000    0.000    0.000    0.000 activation.py:889(MultiheadAttention)
        1    0.000    0.000    0.000    0.000 rnn.py:32(RNNBase)
    32/24    0.000    0.000    0.000    0.000 typing.py:2348(_strip_annotations)
        1    0.000    0.000    0.000    0.000 _at.py:27(_AtOp)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:1(<module>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:376(<genexpr>)
       28    0.000    0.000    0.000    0.000 ops.py:324(__getitem__)
        1    0.000    0.000    0.000    0.000 cse_main.py:1(<module>)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 functional_modules.py:1(<module>)
        3    0.000    0.000    0.000    0.000 patches.py:1885(<listcomp>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:109(_getuserbase)
       80    0.000    0.000    0.000    0.000 _sources.py:51(remove_prefix)
        1    0.000    0.000    0.000    0.000 ask_generated.py:1(<module>)
        4    0.000    0.000    0.000    0.000 functools.py:861(<lambda>)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:9(PythonRationalField)
        1    0.000    0.000    0.000    0.000 exponential.py:219(exp)
        8    0.000    0.000    0.000    0.000 deprecation.py:493(_suppress_matplotlib_deprecation_warning)
       40    0.000    0.000    0.000    0.000 _parser.py:256(getwhile)
        1    0.000    0.000    0.000    0.000 mixins.py:59(NDArrayOperatorsMixin)
        3    0.000    0.000    0.000    0.000 __init__.py:882(__init__)
      149    0.000    0.000    0.000    0.000 _util.py:373(check_random_state)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor.py:17(ReportingDescriptor)
        1    0.000    0.000    0.000    0.000 libintmath.py:126(<listcomp>)
      130    0.000    0.000    0.000    0.000 core.py:1785(set_whitespace_chars)
        1    0.000    0.000    0.000    0.000 abc.py:56(Traversable)
        1    0.000    0.000    0.000    0.000 _dataclass_impls.py:1(<module>)
        2    0.000    0.000    0.000    0.000 expressiondomain.py:26(__init__)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1539(_max_pool)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:328(GaussianIntegerRing)
        4    0.000    0.000    0.000    0.000 typing.py:353(decorator)
        6    0.000    0.000    0.000    0.000 constraints.py:192(__init__)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:1(<module>)
        8    0.000    0.000    0.000    0.000 core.py:4464(_generateDefaultName)
        9    0.000    0.000    0.000    0.000 numeric.py:136(ones)
        1    0.000    0.000    0.000    0.000 combining.py:56(ZipperMapDataPipe)
        1    0.000    0.000    0.000    0.000 printer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sgd.py:1(<module>)
      208    0.000    0.000    0.000    0.000 inspect.py:946(<genexpr>)
       24    0.000    0.000    0.000    0.000 {built-in method _warnings.warn}
        1    0.000    0.000    0.000    0.000 symbol.py:456(Dummy)
       19    0.000    0.000    0.000    0.000 __init__.py:2271(_check_shape)
        7    0.000    0.000    0.000    0.000 dev.py:112(decorator)
        5    0.000    0.000    0.000    0.000 __init__.py:653(get_arch_list)
        1    0.000    0.000    0.000    0.000 ellipse.py:41(Ellipse)
        1    0.000    0.000    0.000    0.000 grouping.py:144(GrouperIterDataPipe)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:517(GaussianRationalField)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:1(<module>)
      250    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000    0.000    0.000 _fft.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:508(contains)
        7    0.000    0.000    0.000    0.000 enum.py:1532(unique)
        1    0.000    0.000    0.000    0.000 numbers.py:281(Number)
        4    0.000    0.000    0.000    0.000 {function Random.seed at 0x146b82df98a0}
        1    0.000    0.000    0.000    0.000 composition.py:38(Composition)
        1    0.000    0.000    0.000    0.000 polytools.py:4542(PurePoly)
       30    0.000    0.000    0.000    0.000 warnings.py:466(__enter__)
       19    0.000    0.000    0.000    0.000 __init__.py:1281(_to_unmasked_float_array)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:129(_max_pool)
        1    0.000    0.000    0.000    0.000 futures.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tensor.py:3394(TensMul)
        1    0.000    0.000    0.000    0.000 _state.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:199(ExprWithLimits)
        1    0.000    0.000    0.000    0.000 selectors.py:341(_PollLikeSelector)
        1    0.000    0.000    0.000    0.000 _multicomp.py:25(DunnettResult)
        2    0.000    0.000    0.000    0.000 version.py:188(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:892(MetadataPathFinder)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2894(__call__)
        1    0.000    0.000    0.000    0.000 patches.py:4184(ConnectionPatch)
    36/32    0.000    0.000    0.000    0.000 typing.py:224(_type_repr)
        1    0.000    0.000    0.000    0.000 polar.py:225(ThetaLocator)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 binomial.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:1(<module>)
    35/24    0.000    0.000    0.000    0.000 typing.py:371(_eval_type)
        2    0.000    0.000    0.000    0.000 __init__.py:305(_compile_repl)
      152    0.000    0.000    0.000    0.000 typing.py:456(__repr__)
       26    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<listcomp>)
        1    0.000    0.000    0.000    0.000 module.py:53(_WrappedHook)
       62    0.000    0.000    0.000    0.000 __init__.py:26(__new__)
        1    0.000    0.000    0.000    0.000 _compression.py:1(<module>)
        6    0.000    0.000    0.000    0.000 core.py:5220(__init__)
      140    0.000    0.000    0.000    0.000 deprecation.py:112(deprecated)
        1    0.000    0.000    0.000    0.000 facts.py:380(FactRules)
        1    0.000    0.000    0.000    0.000 ntheory.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:1689(Locator)
      212    0.000    0.000    0.000    0.000 transforms.py:1262(<genexpr>)
        1    0.000    0.000    0.000    0.000 band_data_in.py:40(get_Kpoint)
        9    0.000    0.000    0.000    0.000 warnings.py:165(simplefilter)
        1    0.000    0.000    0.000    0.000 pathlib.py:857(Path)
       76    0.000    0.000    0.000    0.000 signal.py:9(<lambda>)
      156    0.000    0.000    0.000    0.000 inspect.py:943(<genexpr>)
        1    0.000    0.000    0.000    0.000 <frozen os>:44(_get_exports_list)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:255(WriteSubprocessPipeProto)
        2    0.000    0.000    0.000    0.000 _pep440.py:117(parse)
        1    0.000    0.000    0.000    0.000 weight_norm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:484(NumberPair)
        4    0.000    0.000    0.000    0.000 polynomial.py:1227(__init__)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 trigonometry.py:1(<module>)
       59    0.000    0.000    0.000    0.000 _array_api.py:170(_asarray)
        1    0.000    0.000    0.000    0.000 categorical.py:1(<module>)
        1    0.000    0.000    0.000    0.000 proxy.py:321(Proxy)
        1    0.000    0.000    0.000    0.000 adamw.py:1(<module>)
      174    0.000    0.000    0.000    0.000 _docscrape.py:713(_should_skip_member)
        3    0.000    0.000    0.000    0.000 blas.py:422(get_blas_funcs)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:397(_logpmf_formula)
       14    0.000    0.000    0.000    0.000 _infra.py:65(from_sarif)
        1    0.000    0.000    0.000    0.000 inputs.py:1182(KpointsSupportedModes)
      101    0.000    0.000    0.000    0.000 core.py:6161(_expanded)
        1    0.000    0.000    0.000    0.000 threading.py:1402(__init__)
       66    0.000    0.000    0.000    0.000 __init__.py:237(_releaseLock)
        1    0.000    0.000    0.000    0.000 core.py:2808(__new__)
        1    0.000    0.000    0.000    0.000 conv.py:103(Conv1d)
        1    0.000    0.000    0.000    0.000 json.py:111(MSONable)
       12    0.000    0.000    0.000    0.000 polytools.py:69(_polifyit)
        9    0.000    0.000    0.000    0.000 _util.py:981(decorator)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:410(ints)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:13(DenseNDimArray)
        1    0.000    0.000    0.000    0.000 text.py:104(Text)
        2    0.000    0.000    0.000    0.000 glob.py:141(_iterdir)
       24    0.000    0.000    0.000    0.000 constructor.py:337(add_default_constructor)
        2    0.000    0.000    0.000    0.000 warnings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pooling.py:418(MaxUnpool3d)
       26    0.000    0.000    0.000    0.000 _sources.py:72(<listcomp>)
       40    0.000    0.000    0.000    0.000 numbers.py:780(__new__)
      4/3    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 six.py:887(wrapper)
        1    0.000    0.000    0.000    0.000 polar.py:407(RadialLocator)
        5    0.000    0.000    0.000    0.000 iterables.py:1948(has_variety)
       68    0.000    0.000    0.000    0.000 _internal.py:38(<listcomp>)
        1    0.000    0.000    0.000    0.000 suite.py:328(_ErrorHolder)
       55    0.000    0.000    0.000    0.000 numbers.py:3145(__hash__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4472(halfcauchy_gen)
        1    0.000    0.000    0.000    0.000 polyconfig.py:1(<module>)
       40    0.000    0.000    0.000    0.000 getlimits.py:24(_fr1)
        1    0.000    0.000    0.000    0.000 parametrize.py:69(ParametrizationList)
       11    0.000    0.000    0.000    0.000 _tensor.py:31(_handle_torch_function_and_wrap_type_error_to_not_implemented)
        1    0.000    0.000    0.000    0.000 assumptions.py:220(_load_pre_generated_assumption_rules)
       13    0.000    0.000    0.000    0.000 sympy_parser.py:1239(<genexpr>)
        1    0.000    0.000    0.000    0.000 coreerrors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polysys.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _miobase.py:134(convert_dtypes)
        1    0.000    0.000    0.000    0.000 dataset.py:202(ConcatDataset)
       20    0.000    0.000    0.000    0.000 core.py:1030(reset_cache)
       65    0.000    0.000    0.000    0.000 core.py:4087(<listcomp>)
        2    0.000    0.000    0.000    0.000 multinomial.py:1(<module>)
        6    0.000    0.000    0.000    0.000 gzip.py:525(_add_read_data)
       27    0.000    0.000    0.000    0.000 functools.py:845(_is_valid_dispatch_type)
       28    0.000    0.000    0.000    0.000 locale.py:678(getpreferredencoding)
      673    0.000    0.000    0.000    0.000 _beartype.py:34(_no_op_decorator)
        1    0.000    0.000    0.000    0.000 _subplots.py:11(SubplotBase)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lines.py:200(Line2D)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 einsumfunc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 filelist.py:1(<module>)
        1    0.000    0.000    0.000    0.000 single.py:1107(Liouville)
      127    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 version.py:314(parse)
        1    0.000    0.000    0.000    0.000 pprint.py:1(<module>)
       14    0.000    0.000    0.000    0.000 numeric.py:1330(normalize_axis_tuple)
        1    0.000    0.000    0.000    0.000 pooling.py:331(MaxUnpool2d)
        1    0.000    0.000    0.000    0.000 _tzpath.py:1(<module>)
       40    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
        1    0.000    0.000    0.000    0.000 patches.py:2376(ConnectionStyle)
        1    0.000    0.000    0.000    0.000 colorbar.py:1186(Colorbar)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fold.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:270(ComposeTransform)
        5    0.000    0.000    0.000    0.000 symbolic_shapes.py:858(_lru_cache)
        4    0.000    0.000    0.000    0.000 typing_extensions.py:491(__init__)
       85    0.000    0.000    0.000    0.000 _parser.py:295(checkgroupname)
        1    0.000    0.000    0.000    0.000 pooling.py:735(FractionalMaxPool2d)
      120    0.000    0.000    0.000    0.000 periodic_table.py:170(__getattr__)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lbfgs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _contextlib.py:1(<module>)
        4    0.000    0.000    0.000    0.000 enum.py:1420(<listcomp>)
       11    0.000    0.000    0.000    0.000 __init__.py:119(inplace_wrapper)
        1    0.000    0.000    0.000    0.000 facts.py:474(_from_python)
        5    0.000    0.000    0.000    0.000 functools.py:188(total_ordering)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:567(_get_protocol_attrs)
        1    0.000    0.000    0.000    0.000 puiseux.py:1(<module>)
        1    0.000    0.000    0.000    0.000 filelister.py:13(FileListerIterDataPipe)
        1    0.000    0.000    0.000    0.000 package_exporter.py:74(PackagingErrorReason)
        1    0.000    0.000    0.000    0.000 split_utils.py:31(Component)
        1    0.000    0.000    0.000    0.000 cm.py:211(ScalarMappable)
        1    0.000    0.000    0.000    0.000 pooling.py:805(FractionalMaxPool3d)
        3    0.000    0.000    0.000    0.000 {method 'integers' of 'numpy.random._generator.Generator' objects}
       88    0.000    0.000    0.000    0.000 six.py:146(__init__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1502(<listcomp>)
        3    0.000    0.000    0.000    0.000 core.py:1627(__xor__)
        1    0.000    0.000    0.000    0.000 uniform.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2457(pdf)
        1    0.000    0.000    0.000    0.000 selecting.py:19(FilterIterDataPipe)
        1    0.000    0.000    0.000    0.000 response.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset15.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datapipe.py:42(IterDataPipe)
        1    0.000    0.000    0.000    0.000 wrappers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scale.py:263(LogScale)
        1    0.000    0.000    0.000    0.000 rationalfield.py:1(<module>)
        2    0.000    0.000    0.000    0.000 linear_fused.py:1(<module>)
        1    0.000    0.000    0.000    0.000 extrapolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:14(Normal)
       23    0.000    0.000    0.000    0.000 stride_tricks.py:416(_broadcast_shape)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:748(FakeTensor)
        4    0.000    0.000    0.000    0.000 domainmatrix.py:138(__new__)
        1    0.000    0.000    0.000    0.000 _constraints.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adamax.py:1(<module>)
      397    0.000    0.000    0.000    0.000 enum.py:1226(value)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datetime.py:1311(time)
        1    0.000    0.000    0.000    0.000 pydoc.py:1803(Helper)
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.get}
       26    0.000    0.000    0.000    0.000 pathlib.py:877(_make_child_relpath)
      507    0.000    0.000    0.000    0.000 boolalg.py:440(__bool__)
        1    0.000    0.000    0.000    0.000 conv.py:180(Conv1d)
        1    0.000    0.000    0.000    0.000 iterables.py:781(topological_sort)
      252    0.000    0.000    0.000    0.000 rcsetup.py:58(func)
        2    0.000    0.000    0.000    0.000 init.py:1(<module>)
       42    0.000    0.000    0.000    0.000 ctx_mp_python.py:336(__new__)
       16    0.000    0.000    0.000    0.000 arraypad.py:129(_set_pad_area)
        1    0.000    0.000    0.000    0.000 registration.py:64(OverrideDict)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:204(_LogUniform)
        1    0.000    0.000    0.000    0.000 extensions.py:1(<module>)
        8    0.000    0.000    0.000    0.000 _ops.py:603(__getattr__)
        1    0.000    0.000    0.000    0.000 geometric.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _datasource.py:1(<module>)
        1    0.000    0.000    0.000    0.000 win.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quiver.py:195(QuiverKey)
        1    0.000    0.000    0.000    0.000 core.py:1103(enable_packrat)
        5    0.000    0.000    0.000    0.000 _basic.py:3009(_is_subdtype)
        1    0.000    0.000    0.000    0.000 conv.py:47(_ConvNd)
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 _path.py:1(<module>)
        4    0.000    0.000    0.000    0.000 doccer.py:202(_doc)
        1    0.000    0.000    0.000    0.000 para4tb.py:1(<module>)
        8    0.000    0.000    0.000    0.000 {built-in method zlib.crc32}
        1    0.000    0.000    0.000    0.000 _qmc.py:1960(PoissonDisk)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:367(broadcast_to)
        1    0.000    0.000    0.000    0.000 Image.py:138(Transpose)
      144    0.000    0.000    0.000    0.000 core.py:2025(__hash__)
        1    0.000    0.000    0.000    0.000 julia.py:1(<module>)
        3    0.000    0.000    0.000    0.000 numbers.py:1306(__new__)
       15    0.000    0.000    0.000    0.000 <frozen _collections_abc>:933(clear)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _sources.py:75(<listcomp>)
        2    0.000    0.000    0.000    0.000 log.py:1(<module>)
        7    0.000    0.000    0.000    0.000 memoization.py:27(decorator)
       19    0.000    0.000    0.000    0.000 path.py:193(_update_values)
        1    0.000    0.000    0.000    0.000 quadrature.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv.py:465(Conv3d)
        1    0.000    0.000    0.000    0.000 symbolic_opset16.py:1(<module>)
        1    0.000    0.000    0.000    0.000 asgd.py:1(<module>)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3269(round)
        1    0.000    0.000    0.000    0.000 octave.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:543(PowerTransform)
        1    0.000    0.000    0.000    0.000 numbers.py:594(Float)
       12    0.000    0.000    0.000    0.000 matexpr.py:23(deco)
        1    0.000    0.000    0.000    0.000 graph.py:131(saved_tensors_hooks)
       13    0.000    0.000    0.000    0.000 core.py:8406(_replace_return_type)
        3    0.000    0.000    0.000    0.000 symbolic_opset10.py:240(_avg_pool)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:863(__str__)
        1    0.000    0.000    0.000    0.000 _rules.py:22(_NodeMissingOnnxShapeInference)
        1    0.000    0.000    0.000    0.000 tokens.py:334(CommentToken)
        1    0.000    0.000    0.000    0.000 von_mises.py:70(VonMises)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:100(dtype_from_ctypes_type)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 storage.py:318(TypedStorage)
        1    0.000    0.000    0.000    0.000 adagrad.py:1(<module>)
       30    0.000    0.000    0.000    0.000 _array_api.py:523(<listcomp>)
       51    0.000    0.000    0.000    0.000 rcsetup.py:407(validate_fontsize)
        1    0.000    0.000    0.000    0.000 registration.py:123(_SymbolicFunctionGroup)
        1    0.000    0.000    0.000    0.000 _factories.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dist.py:77(Distribution)
        1    0.000    0.000    0.000    0.000 lll.py:1(<module>)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trace_dependencies.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:447(_get_xdg_cache_dir)
        3    0.000    0.000    0.000    0.000 blas.py:337(_get_funcs)
        1    0.000    0.000    0.000    0.000 logging_handlers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cauchy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 package_exporter.py:53(_ModuleProviderAction)
       15    0.000    0.000    0.000    0.000 copyreg.py:113(_slotnames)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:464(__str__)
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:1(<module>)
        7    0.000    0.000    0.000    0.000 dev.py:80(deprecated_function_decorator)
      643    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_tolower}
        1    0.000    0.000    0.000    0.000 conv.py:316(Conv2d)
        1    0.000    0.000    0.000    0.000 umath.py:1(<module>)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:1(<module>)
       11    0.000    0.000    0.000    0.000 __init__.py:1467(debug)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1609(Sobol)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tensor.py:968(TensorIndexType)
    18/17    0.000    0.000    0.000    0.000 typing.py:1480(<listcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:156(Conv2d)
        1    0.000    0.000    0.000    0.000 _mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _infra.py:13(Level)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:24(<dictcomp>)
        5    0.000    0.000    0.000    0.000 add.py:40(_addsort)
        1    0.000    0.000    0.000    0.000 meta_utils.py:70(MetaConverter)
        2    0.000    0.000    0.000    0.000 cache.py:168(lazy_function)
        1    0.000    0.000    0.000    0.000 modularinteger.py:1(<module>)
        1    0.000    0.000    0.000    0.000 weak.py:79(WeakIdKeyDictionary)
      130    0.000    0.000    0.000    0.000 unicode.py:105(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:351(_sanity_check)
        9    0.000    0.000    0.000    0.000 api.py:74(_require_initialized)
       10    0.000    0.000    0.000    0.000 basic.py:135(_get_postprocessors)
       13    0.000    0.000    0.000    0.000 enum.py:1347(_iter_member_by_def_)
        2    0.000    0.000    0.000    0.000 _parser.py:997(parse_template)
       95    0.000    0.000    0.000    0.000 permutations.py:1060(_hashable_content)
        1    0.000    0.000    0.000    0.000 rmsprop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rings.py:196(PolyRing)
        1    0.000    0.000    0.000    0.000 scale.py:560(LogitScale)
        1    0.000    0.000    0.000    0.000 nadam.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:2978(__array_finalize__)
      110    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
       20    0.000    0.000    0.000    0.000 module.py:2176(named_children)
        1    0.000    0.000    0.000    0.000 constants.py:31(_SendfileMode)
        2    0.000    0.000    0.000    0.000 hypergeometric.py:1(<module>)
       28    0.000    0.000    0.000    0.000 <frozen posixpath>:388(normpath)
        1    0.000    0.000    0.000    0.000 __init__.py:1122(ELEMENTWISE_TYPE_PROMOTION_KIND)
        1    0.000    0.000    0.000    0.000 _pytree.py:114(TreeSpec)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:35(IdentityFunction)
       30    0.000    0.000    0.000    0.000 core.py:4465(<genexpr>)
        3    0.000    0.000    0.000    0.000 patches.py:1878(<listcomp>)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:65(_DTypeDictBase)
        1    0.000    0.000    0.000    0.000 simplex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matplotlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 independent.py:1(<module>)
      362    0.000    0.000    0.000    0.000 inspect.py:3028(return_annotation)
      426    0.000    0.000    0.000    0.000 typing.py:2216(cast)
        1    0.000    0.000    0.000    0.000 cache.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph.py:275(CodeGen)
        1    0.000    0.000    0.000    0.000 graph.py:267(_PyTreeInfo)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:18(autocast)
      109    0.000    0.000    0.000    0.000 inspect.py:505(isbuiltin)
        4    0.000    0.000    0.000    0.000 typing.py:1520(__init__)
        1    0.000    0.000    0.000    0.000 power.py:22(Pow)
        1    0.000    0.000    0.000    0.000 spglib.py:84(DictInterface)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2494(pmf)
        1    0.000    0.000    0.000    0.000 powsimp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combining.py:313(DemultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 _comparison.py:607(TensorLikePair)
        2    0.000    0.000    0.000    0.000 sysconfig.py:118(joinuser)
        1    0.000    0.000    0.000    0.000 glsl.py:1(<module>)
      231    0.000    0.000    0.000    0.000 periodic_table.py:237(__hash__)
        1    0.000    0.000    0.000    0.000 symbol.py:212(Symbol)
       46    0.000    0.000    0.000    0.000 getlimits.py:101(_float_conv)
      105    0.000    0.000    0.000    0.000 textwrap.py:479(predicate)
        1    0.000    0.000    0.000    0.000 radam.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:341(<dictcomp>)
        7    0.000    0.000    0.000    0.000 symbolic_opset11.py:345(_interpolate)
        2    0.000    0.000    0.000    0.000 traversal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 contour.py:670(ContourSet)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2388(standard_deviation)
      215    0.000    0.000    0.000    0.000 symbolic_helper.py:234(parse_args)
        1    0.000    0.000    0.000    0.000 recipes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:43(RuntimeTypeCheckState)
        2    0.000    0.000    0.000    0.000 twodim_base.py:158(eye)
        3    0.000    0.000    0.000    0.000 core.py:4241(__init__)
        1    0.000    0.000    0.000    0.000 _compatibility.py:1(<module>)
        6    0.000    0.000    0.000    0.000 {method 'multinomial' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 conv.py:214(Conv3d)
        1    0.000    0.000    0.000    0.000 patches.py:1551(Arc)
        1    0.000    0.000    0.000    0.000 _comparison.py:430(BooleanPair)
        1    0.000    0.000    0.000    0.000 studentT.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ksstats.py:1(<module>)
        6    0.000    0.000    0.000    0.000 core.py:1146(__init__)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:1(<module>)
        5    0.000    0.000    0.000    0.000 version.py:70(__lt__)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 latex.py:142(LatexPrinter)
        1    0.000    0.000    0.000    0.000 rprop.py:1(<module>)
       87    0.000    0.000    0.000    0.000 kl.py:41(register_kl)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matrices.py:1(<module>)
        1    0.000    0.000    0.000    0.000 protocols.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:31(Cursors)
        7    0.000    0.000    0.000    0.000 decoder.py:284(__init__)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:340(_broadcast_to)
       85    0.000    0.000    0.000    0.000 typing.py:891(__hash__)
        1    0.000    0.000    0.000    0.000 ExifTags.py:352(IFD)
        1    0.000    0.000    0.000    0.000 report.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _fortran.py:1(<module>)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:44(_bits_of)
       42    0.000    0.000    0.000    0.000 docstring.py:43(update)
       15    0.000    0.000    0.000    0.000 arrayprint.py:989(<genexpr>)
        1    0.000    0.000    0.000    0.000 normal.py:1(<module>)
       12    0.000    0.000    0.000    0.000 __init__.py:1893(get_aliased_and_aliases)
       55    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
       50    0.000    0.000    0.000    0.000 sets.py:125(_infimum_key)
        1    0.000    0.000    0.000    0.000 collections.py:1306(LineCollection)
      391    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 libmpi.py:1(<module>)
       62    0.000    0.000    0.000    0.000 __init__.py:202(_checkLevel)
        1    0.000    0.000    0.000    0.000 _bws_test.py:1(<module>)
        1    0.000    0.000    0.000    0.000 geo.py:252(AitoffAxes)
        1    0.000    0.000    0.000    0.000 parametrizations.py:33(_OrthMaps)
        2    0.000    0.000    0.000    0.000 __init__.py:386(__getattr__)
        1    0.000    0.000    0.000    0.000 observer.py:888(HistogramObserver)
        1    0.000    0.000    0.000    0.000 _bvp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _globals.py:65(_CopyMode)
        1    0.000    0.000    0.000    0.000 _web_request.py:15(WebRequest)
        1    0.000    0.000    0.000    0.000 scale.py:515(LogitTransform)
        1    0.000    0.000    0.000    0.000 arraypad.py:1(<module>)
        7    0.000    0.000    0.000    0.000 _parser.py:309(_convert)
        1    0.000    0.000    0.000    0.000 sets.py:47(Set)
       14    0.000    0.000    0.000    0.000 numerictypes.py:357(issubdtype)
       26    0.000    0.000    0.000    0.000 _util.py:188(_transition_to_rng)
        1    0.000    0.000    0.000    0.000 __init__.py:154(_check_cubins)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:298(OpTree)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _web_response.py:15(WebResponse)
        3    0.000    0.000    0.000    0.000 core.py:1667(__invert__)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:1(<module>)
        3    0.000    0.000    0.000    0.000 monkey.py:44(get_unpatched)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:422(spec_from_loader)
        1    0.000    0.000    0.000    0.000 appellseqs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quoprimime.py:55(<listcomp>)
        1    0.000    0.000    0.000    0.000 pyplot.py:1891(colormaps)
        3    0.000    0.000    0.000    0.000 numbers.py:1374(_new)
       99    0.000    0.000    0.000    0.000 traceback.py:325(walk_stack)
      141    0.000    0.000    0.000    0.000 __init__.py:259(__iter__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2029(InverseTrigonometricFunction)
       30    0.000    0.000    0.000    0.000 warnings.py:487(__exit__)
       92    0.000    0.000    0.000    0.000 {built-in method math.log}
        1    0.000    0.000    0.000    0.000 scalarfloat.py:1(<module>)
       12    0.000    0.000    0.000    0.000 misc.py:304(func_name)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:865(<listcomp>)
       11    0.000    0.000    0.000    0.000 __init__.py:12(NewCls)
        1    0.000    0.000    0.000    0.000 sslproto.py:19(SSLProtocolState)
        1    0.000    0.000    0.000    0.000 ufunclike.py:1(<module>)
        7    0.000    0.000    0.000    0.000 <frozen posixpath>:396(abspath)
       30    0.000    0.000    0.000    0.000 _array_api.py:531(<listcomp>)
        1    0.000    0.000    0.000    0.000 ideals.py:1(<module>)
        8    0.000    0.000    0.000    0.000 core.py:1031(deprecation_wrapper)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:47(Action)
        1    0.000    0.000    0.000    0.000 bz2.py:97(close)
        1    0.000    0.000    0.000    0.000 const_fold.py:11(FoldedGraphModule)
        1    0.000    0.000    0.000    0.000 gamma.py:1(<module>)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:133(<genexpr>)
       24    0.000    0.000    0.000    0.000 proxy.py:514(_scope)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4590(ShiftedScaledDistribution)
       62    0.000    0.000    0.000    0.000 unary.py:149(_torch_unary)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:50(SubgraphMatcher)
        6    0.000    0.000    0.000    0.000 {method 'permuted' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 numbers.py:2986(Infinity)
       58    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 numbers.py:3176(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 _fftlog_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 requirements.py:1(<module>)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:516(ProxySymDispatchMode)
        7    0.000    0.000    0.000    0.000 symbolic_helper.py:1064(_interpolate_helper)
        1    0.000    0.000    0.000    0.000 readers.py:16(__init__)
        1    0.000    0.000    0.000    0.000 pareto.py:1(<module>)
        1    0.000    0.000    0.000    0.000 recurr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _policybase.py:99(_extend_docstrings)
        4    0.000    0.000    0.000    0.000 _new_distributions.py:412(_icdf_formula)
        1    0.000    0.000    0.000    0.000 plane.py:27(<listcomp>)
       43    0.000    0.000    0.000    0.000 pathlib.py:515(_from_parsed_parts)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _translation_metadata.py:15(TranslationMetadata)
        1    0.000    0.000    0.000    0.000 primes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pretty.py:30(PrettyPrinter)
        2    0.000    0.000    0.000    0.000 lsoda.py:1(<module>)
        1    0.000    0.000    0.000    0.000 inference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:154(UniformQuantizationObserverBase)
        1    0.000    0.000    0.000    0.000 _ndbspline.py:1(<module>)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:506(convert_to)
        1    0.000    0.000    0.000    0.000 padding.py:82(ConstantPad2d)
        1    0.000    0.000    0.000    0.000 structure.py:213(SiteCollection)
        1    0.000    0.000    0.000    0.000 _core_metadata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _sf_error.py:1(<module>)
        8    0.000    0.000    0.000    0.000 _aliases.py:89(asarray)
        1    0.000    0.000    0.000    0.000 gridspec.py:602(SubplotSpec)
        1    0.000    0.000    0.000    0.000 ImageColor.py:1(<module>)
       93    0.000    0.000    0.000    0.000 sites.py:138(species)
        1    0.000    0.000    0.000    0.000 fractionfield.py:1(<module>)
        7    0.000    0.000    0.000    0.000 _legacy.py:15(deprecated)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:4(_InsertPoint)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:1(<module>)
      169    0.000    0.000    0.000    0.000 contextlib.py:431(__exit__)
        1    0.000    0.000    0.000    0.000 __init__.py:354(<listcomp>)
        1    0.000    0.000    0.000    0.000 Image.py:158(Resampling)
        1    0.000    0.000    0.000    0.000 math2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 docstring.py:6(Substitution)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mio5.py:149(MatFile5Reader)
        1    0.000    0.000    0.000    0.000 compositedomain.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:144(_check_size)
        1    0.000    0.000    0.000    0.000 _stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _kdtree.py:206(KDTree)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3145(_moment_raw)
        1    0.000    0.000    0.000    0.000 timeouts.py:18(_State)
        1    0.000    0.000    0.000    0.000 symbolic_opset18.py:1(<module>)
      162    0.000    0.000    0.000    0.000 _compatibility.py:7(compatibility)
        1    0.000    0.000    0.000    0.000 __init__.py:172(SDPBackend)
        2    0.000    0.000    0.000    0.000 __init__.py:1460(setLevel)
        1    0.000    0.000    0.000    0.000 rcode.py:1(<module>)
      191    0.000    0.000    0.000    0.000 <frozen abc>:7(abstractmethod)
        1    0.000    0.000    0.000    0.000 _result.py:28(Result)
       58    0.000    0.000    0.000    0.000 unary.py:158(_torch_inplace_unary)
        1    0.000    0.000    0.000    0.000 jiterator.py:1(<module>)
        4    0.000    0.000    0.000    0.000 ssl.py:461(__new__)
        2    0.000    0.000    0.000    0.000 stubs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _run.py:30(Run)
        1    0.000    0.000    0.000    0.000 polyconfig.py:52(configure)
        1    0.000    0.000    0.000    0.000 operations.py:29(AssocOp)
        1    0.000    0.000    0.000    0.000 _spherical_bessel.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _classes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 design_patterns.py:1(<module>)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.000    0.000    0.000    0.000 fancysets.py:1440(PolarComplexRegion)
        5    0.000    0.000    0.000    0.000 version.py:334(_cmp)
        1    0.000    0.000    0.000    0.000 quant_type.py:9(QuantType)
        1    0.000    0.000    0.000    0.000 facts.py:411(__init__)
        1    0.000    0.000    0.000    0.000 core.py:23(Spin)
      127    0.000    0.000    0.000    0.000 ssl.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 _tool_component.py:19(ToolComponent)
       16    0.000    0.000    0.000    0.000 __init__.py:62(_process_keys)
       14    0.000    0.000    0.000    0.000 rcsetup.py:623(validate_capstyle)
        1    0.000    0.000    0.000    0.000 sdm.py:25(SDM)
        1    0.000    0.000    0.000    0.000 para4band.py:14(Stiefel_Frame)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:36(__deprecate_private_class)
        1    0.000    0.000    0.000    0.000 ExifTags.py:344(Interop)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1366(MouseButton)
        3    0.000    0.000    0.000    0.000 core.py:5079(__init__)
       47    0.000    0.000    0.000    0.000 core.py:2501(parseImpl)
        3    0.000    0.000    0.000    0.000 TiffTags.py:450(<dictcomp>)
        6    0.000    0.000    0.000    0.000 bessel.py:893(assume_integer_order)
        1    0.000    0.000    0.000    0.000 mock.py:44(<setcomp>)
        6    0.000    0.000    0.000    0.000 libmpf.py:410(from_float)
        6    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3841(Format)
        1    0.000    0.000    0.000    0.000 reductions.py:379(init_reductions)
        1    0.000    0.000    0.000    0.000 taskgroups.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler.py:446(record_function)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:888(Symbol)
        1    0.000    0.000    0.000    0.000 _spectral.py:1(<module>)
       38    0.000    0.000    0.000    0.000 observer.py:77(_with_args)
       83    0.000    0.000    0.000    0.000 traceback.py:264(__init__)
        3    0.000    0.000    0.000    0.000 functools.py:651(cache)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2772(_Mode)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _signal_api.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 dates.py:589(DateFormatter)
        1    0.000    0.000    0.000    0.000 profiler.py:230(ProfilerAction)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._init_names}
        1    0.000    0.000    0.000    0.000 numbers.py:4474(_register_classes)
       93    0.000    0.000    0.000    0.000 exceptions.py:49(__init__)
        1    0.000    0.000    0.000    0.000 _czt.py:1(<module>)
       87    0.000    0.000    0.000    0.000 kl.py:72(decorator)
        1    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
        1    0.000    0.000    0.000    0.000 rendezvous.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combining.py:362(_DemultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:387(_WorldMeta)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:262(_interpolate)
        1    0.000    0.000    0.000    0.000 jscode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:2510(Keyword)
        1    0.000    0.000    0.000    0.000 core.py:39(OrbitalType)
       60    0.000    0.000    0.000    0.000 module.py:2113(<lambda>)
        1    0.000    0.000    0.000    0.000 evalf.py:1395(_create_evalf_table)
        1    0.000    0.000    0.000    0.000 poisson.py:1(<module>)
        1    0.000    0.000    0.000    0.000 padding.py:133(ConstantPad3d)
        1    0.000    0.000    0.000    0.000 scale.py:431(SymmetricalLogScale)
       91    0.000    0.000    0.000    0.000 dataclasses.py:604(<genexpr>)
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:473(_get_endpoint_str)
        1    0.000    0.000    0.000    0.000 registration.py:202(SymbolicRegistry)
        1    0.000    0.000    0.000    0.000 _invocation.py:17(Invocation)
       29    0.000    0.000    0.000    0.000 constraint_registry.py:106(<lambda>)
        1    0.000    0.000    0.000    0.000 settings.py:1(<module>)
        3    0.000    0.000    0.000    0.000 misc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 compatibility.py:240(IPolys)
        1    0.000    0.000    0.000    0.000 combining.py:562(ZipperIterDataPipe)
        7    0.000    0.000    0.000    0.000 core.py:3633(__init__)
       13    0.000    0.000    0.000    0.000 fromnumeric.py:200(reshape)
       20    0.000    0.000    0.000    0.000 <frozen io>:60(__getattr__)
       38    0.000    0.000    0.000    0.000 constructor.py:321(add_constructor)
        1    0.000    0.000    0.000    0.000 symbolic_opset17.py:1(<module>)
        1    0.000    0.000    0.000    0.000 widgets.py:672(TextBox)
      127    0.000    0.000    0.000    0.000 ssl.py:125(<lambda>)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2692(max)
        1    0.000    0.000    0.000    0.000 _monitor.py:1(<module>)
      120    0.000    0.000    0.000    0.000 _multiufuncs.py:43(<genexpr>)
        1    0.000    0.000    0.000    0.000 Image.py:149(Transform)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:270(Uniform)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elffile.py:33(EMachine)
        1    0.000    0.000    0.000    0.000 _utils.py:46(EventKey)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_properties.py:25(ExternalProperties)
        9    0.000    0.000    0.000    0.000 typing.py:1639(__repr__)
        1    0.000    0.000    0.000    0.000 importtools.py:14(__sympy_debug)
        1    0.000    0.000    0.000    0.000 _polyint.py:108(_reshape_yi)
        1    0.000    0.000    0.000    0.000 order.py:11(Order)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:772(create_module)
        1    0.000    0.000    0.000    0.000 trifinder.py:1(<module>)
        6    0.000    0.000    0.000    0.000 sdm.py:78(__init__)
       13    0.000    0.000    0.000    0.000 mixins.py:44(_numeric_methods)
        1    0.000    0.000    0.000    0.000 pg_operation.py:1(<module>)
       28    0.000    0.000    0.000    0.000 typing_extensions.py:495(__setattr__)
        2    0.000    0.000    0.000    0.000 polyclasses.py:146(__new__)
        1    0.000    0.000    0.000    0.000 transforms.py:2038(IdentityTransform)
        1    0.000    0.000    0.000    0.000 geo.py:416(LambertAxes)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:3376(_unsupported_dropout)
        1    0.000    0.000    0.000    0.000 core.py:231(reload_library)
      377    0.000    0.000    0.000    0.000 enum.py:1221(name)
        1    0.000    0.000    0.000    0.000 variable.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bdist.py:48(bdist)
       48    0.000    0.000    0.000    0.000 lapack.py:908(backtickrepl)
      104    0.000    0.000    0.000    0.000 inspect.py:456(istraceback)
        1    0.000    0.000    0.000    0.000 __init__.py:1076(__init__)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:835(__iter__)
        1    0.000    0.000    0.000    0.000 scale.py:541(LogisticTransform)
        1    0.000    0.000    0.000    0.000 _guards.py:253(GuardsCheckpointState)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2322(any)
        1    0.000    0.000    0.000    0.000 rrule.py:1307(rruleset)
        1    0.000    0.000    0.000    0.000 docinfo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:601(__str__)
        1    0.000    0.000    0.000    0.000 profiler.py:820(KinetoStepTracker)
        1    0.000    0.000    0.000    0.000 locks.py:439(_BarrierState)
        1    0.000    0.000    0.000    0.000 remote_device.py:1(<module>)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:4792(_one_hidden_rnn)
        1    0.000    0.000    0.000    0.000 patches.py:1242(FancyArrow)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:433(broadcast_shapes)
        1    0.000    0.000    0.000    0.000 weibull.py:1(<module>)
       47    0.000    0.000    0.000    0.000 enum.py:1128(_generate_next_value_)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:17(_get_or_create_logger)
        1    0.000    0.000    0.000    0.000 plotgrid.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:1(<module>)
       38    0.000    0.000    0.000    0.000 getlimits.py:16(_fr0)
        1    0.000    0.000    0.000    0.000 spectrum.py:1(<module>)
       90    0.000    0.000    0.000    0.000 basic.py:938(_sorted_args)
       13    0.000    0.000    0.000    0.000 weakref.py:367(__init__)
        5    0.000    0.000    0.000    0.000 misc.py:181(debug_decorator)
        6    0.000    0.000    0.000    0.000 gaussiandomains.py:23(__new__)
       61    0.000    0.000    0.000    0.000 _inspect.py:144(<lambda>)
       14    0.000    0.000    0.000    0.000 <frozen posixpath>:140(basename)
       23    0.000    0.000    0.000    0.000 qconfig.py:98(__new__)
        1    0.000    0.000    0.000    0.000 polygon.py:25(<listcomp>)
      104    0.000    0.000    0.000    0.000 inspect.py:466(isframe)
      127    0.000    0.000    0.000    0.000 ssl.py:135(<lambda>)
        1    0.000    0.000    0.000    0.000 qs.py:1(<module>)
      127    0.000    0.000    0.000    0.000 ssl.py:140(<lambda>)
        3    0.000    0.000    0.000    0.000 core.py:2488(__init__)
       11    0.000    0.000    0.000    0.000 __init__.py:1734(isEnabledFor)
       55    0.000    0.000    0.000    0.000 numbers.py:546(__hash__)
        1    0.000    0.000    0.000    0.000 internal.py:23(RPCExecMode)
        2    0.000    0.000    0.000    0.000 immutable_collections.py:18(_create_immutable_container)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:225(BackendConfig)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:659(<listcomp>)
        1    0.000    0.000    0.000    0.000 geo.py:346(MollweideAxes)
        3    0.000    0.000    0.000    0.000 symbolic_opset11.py:577(_avg_pool)
       26    0.000    0.000    0.000    0.000 basic.py:88(_cmp_name)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1730(_adaptive_pool)
        1    0.000    0.000    0.000    0.000 table.py:30(Cell)
       36    0.000    0.000    0.000    0.000 deprecation.py:192(_deprecated_property)
        3    0.000    0.000    0.000    0.000 monkey.py:54(get_unpatched_class)
      196    0.000    0.000    0.000    0.000 core.py:485(mayReturnEmpty)
        1    0.000    0.000    0.000    0.000 _mio4.py:316(MatFile4Reader)
        4    0.000    0.000    0.000    0.000 platform.py:1107(python_implementation)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:604(CategoryDict)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:1(<module>)
        4    0.000    0.000    0.000    0.000 ctx_base.py:52(_init_aliases)
      116    0.000    0.000    0.000    0.000 typing.py:1812(<genexpr>)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:8(_SnapshotState)
        1    0.000    0.000    0.000    0.000 reinplace.py:16(_ViewType)
        3    0.000    0.000    0.000    0.000 core.py:1757(suppress)
        1    0.000    0.000    0.000    0.000 fetch.py:1(<module>)
      127    0.000    0.000    0.000    0.000 ssl.py:150(<lambda>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:707(beta_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:231(<listcomp>)
      127    0.000    0.000    0.000    0.000 ssl.py:130(<lambda>)
        1    0.000    0.000    0.000    0.000 core.py:3127(view)
        1    0.000    0.000    0.000    0.000 Image.py:177(Dither)
       71    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        3    0.000    0.000    0.000    0.000 rcsetup.py:701(_validate_hinting)
       36    0.000    0.000    0.000    0.000 constraints.py:170(__init__)
        1    0.000    0.000    0.000    0.000 log_normal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:576(__init__)
        1    0.000    0.000    0.000    0.000 preview.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2327(median)
        1    0.000    0.000    0.000    0.000 __init__.py:456(<listcomp>)
      100    0.000    0.000    0.000    0.000 perm_groups.py:136(<genexpr>)
        2    0.000    0.000    0.000    0.000 dispatcher.py:46(ambiguity_register_error_ignore_dup)
      124    0.000    0.000    0.000    0.000 functions.py:85(defun)
        3    0.000    0.000    0.000    0.000 feedparser.py:139(__init__)
        1    0.000    0.000    0.000    0.000 _polybase.py:18(ABCPolyBase)
        1    0.000    0.000    0.000    0.000 factortools.py:1(<module>)
    54/46    0.000    0.000    0.000    0.000 fake_tensor.py:94(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:393(norm_gen)
       10    0.000    0.000    0.000    0.000 getlimits.py:685(__init__)
       47    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1103(_sanity_check)
       12    0.000    0.000    0.000    0.000 weakref.py:289(update)
        1    0.000    0.000    0.000    0.000 _cm_listed.py:2061(<dictcomp>)
       42    0.000    0.000    0.000    0.000 _typing.py:275(__init__)
        1    0.000    0.000    0.000    0.000 _lazy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dop853_coefficients.py:1(<module>)
       42    0.000    0.000    0.000    0.000 typing.py:1803(<genexpr>)
        1    0.000    0.000    0.000    0.000 _morphology.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _common.py:47(get_package)
      110    0.000    0.000    0.000    0.000 _internal.py:883(<genexpr>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2345(mode)
        1    0.000    0.000    0.000    0.000 sslproto.py:27(AppProtocolState)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11012(vonmises_gen)
       89    0.000    0.000    0.000    0.000 operations.py:73(<genexpr>)
       49    0.000    0.000    0.000    0.000 results.py:215(__getitem__)
        1    0.000    0.000    0.000    0.000 _ellip_harm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:12(FPContext)
       12    0.000    0.000    0.000    0.000 arrayprint.py:753(_extendLine_pretty)
       52    0.000    0.000    0.000    0.000 _add_newdocs.py:6754(refer_to_array_attribute)
        1    0.000    0.000    0.000    0.000 pycode.py:79(AbstractPythonCodePrinter)
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3153(_moment_raw_dispatch)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:1(<module>)
      100    0.000    0.000    0.000    0.000 perm_groups.py:134(<genexpr>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1744(_broadcast)
      112    0.000    0.000    0.000    0.000 patches.py:1885(<genexpr>)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:465(boolean_dispatch)
        1    0.000    0.000    0.000    0.000 quiver.py:442(Quiver)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Image.py:527(Image)
        1    0.000    0.000    0.000    0.000 base_events.py:387(BaseEventLoop)
        5    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1074(_set_invalid_nan_property)
      124    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
       58    0.000    0.000    0.000    0.000 constraint_registry.py:87(register)
        1    0.000    0.000    0.000    0.000 defaults.py:1(<module>)
        1    0.000    0.000    0.000    0.000 groups.py:317(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _location.py:19(Location)
        1    0.000    0.000    0.000    0.000 transforms.py:1746(Affine2DBase)
        5    0.000    0.000    0.000    0.000 transforms.py:242(make_wrapper)
        2    0.000    0.000    0.000    0.000 fnmatch.py:74(translate)
        1    0.000    0.000    0.000    0.000 datetime.py:2293(timezone)
       41    0.000    0.000    0.000    0.000 numbers.py:442(sort_key)
        1    0.000    0.000    0.000    0.000 __init__.py:319(ELEMENTWISE_PRIM_TYPE_PROMOTION_KIND)
        1    0.000    0.000    0.000    0.000 _mio5.py:817(MatFile5Writer)
        2    0.000    0.000    0.000    0.000 rationaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 subscheck.py:1(<module>)
       15    0.000    0.000    0.000    0.000 rcsetup.py:84(_listify_validator)
       13    0.000    0.000    0.000    0.000 {method 'random' of 'numpy.random._generator.Generator' objects}
        8    0.000    0.000    0.000    0.000 resolver.py:131(add_implicit_resolver_base)
       15    0.000    0.000    0.000    0.000 arrayprint.py:984(<genexpr>)
        1    0.000    0.000    0.000    0.000 index_methods.py:1(<module>)
        1    0.000    0.000    0.000    0.000 enumerative.py:1(<module>)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:9(NegativeBinomial)
        1    0.000    0.000    0.000    0.000 operations.py:575(AssocOpDispatcher)
       23    0.000    0.000    0.000    0.000 pkgutil.py:407(get_importer)
       93    0.000    0.000    0.000    0.000 composition.py:207(items)
        1    0.000    0.000    0.000    0.000 Image.py:190(Quantize)
        2    0.000    0.000    0.000    0.000 calculus.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sharding.py:16(SHARDING_PRIORITIES)
        2    0.000    0.000    0.000    0.000 __init__.py:912(createLock)
       12    0.000    0.000    0.000    0.000 arrayprint.py:1018(__call__)
        1    0.000    0.000    0.000    0.000 distributed.py:148(_BufferCommHookLocation)
        1    0.000    0.000    0.000    0.000 trirefine.py:1(<module>)
        1    0.000    0.000    0.000    0.000 library.py:1(<module>)
       44    0.000    0.000    0.000    0.000 typing.py:2798(<listcomp>)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:47(__new__)
        6    0.000    0.000    0.000    0.000 <frozen posixpath>:117(splitext)
        2    0.000    0.000    0.000    0.000 getlimits.py:307(_get_machar)
        1    0.000    0.000    0.000    0.000 patches.py:698(Rectangle)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5382(MonotonicTransformedDistribution)
        1    0.000    0.000    0.000    0.000 quasirandom.py:1(<module>)
        1    0.000    0.000    0.000    0.000 common.py:286(StreamWrapper)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:21(ReplacedPatterns)
        1    0.000    0.000    0.000    0.000 ring.py:1(<module>)
       41    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:83(<genexpr>)
      134    0.000    0.000    0.000    0.000 wrappers.py:96(__init__)
        1    0.000    0.000    0.000    0.000 _binomtest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 libmpf.py:136(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:5454(__init__)
       25    0.000    0.000    0.000    0.000 polyoptions.py:64(__init__)
        1    0.000    0.000    0.000    0.000 tensor.py:2417(TensAdd)
        2    0.000    0.000    0.000    0.000 __init__.py:1415(_clear_cache)
        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:1131(REDUCTION_OUTPUT_TYPE_KIND)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:1(<module>)
        1    0.000    0.000    0.000    0.000 domainscalar.py:1(<module>)
       49    0.000    0.000    0.000    0.000 core.py:2472(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 sparse_adam.py:7(SparseAdam)
        4    0.000    0.000    0.000    0.000 {built-in method _ssl.txt2obj}
        1    0.000    0.000    0.000    0.000 grad_scaler.py:35(OptState)
        1    0.000    0.000    0.000    0.000 distributed.py:256(DistributedDataParallel)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:132(<dictcomp>)
        1    0.000    0.000    0.000    0.000 geo.py:301(HammerAxes)
        1    0.000    0.000    0.000    0.000 numbers.py:1770(Integer)
        1    0.000    0.000    0.000    0.000 _linalg_utils.py:1(<module>)
        3    0.000    0.000    0.000    0.000 <frozen os>:681(__setitem__)
        1    0.000    0.000    0.000    0.000 _miobase.py:351(MatFileReader)
       95    0.000    0.000    0.000    0.000 iterables.py:2000(check)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:107(Disposal)
        1    0.000    0.000    0.000    0.000 core.py:4777(IndentedBlock)
        1    0.000    0.000    0.000    0.000 decompositions.py:34(Reduction)
        2    0.000    0.000    0.000    0.000 signals.py:1(<module>)
       12    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        1    0.000    0.000    0.000    0.000 combining.py:10(ConcaterMapDataPipe)
        1    0.000    0.000    0.000    0.000 callable.py:21(MapperIterDataPipe)
        1    0.000    0.000    0.000    0.000 _VF.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ellipse.py:38(<listcomp>)
        1    0.000    0.000    0.000    0.000 distributed.py:13(DistributedSampler)
        1    0.000    0.000    0.000    0.000 orthopolys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _string_helpers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 grouping.py:10(BatcherMapDataPipe)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:57(pretty_try_use_unicode)
        2    0.000    0.000    0.000    0.000 {built-in method posix.scandir}
        1    0.000    0.000    0.000    0.000 runners.py:15(_State)
        3    0.000    0.000    0.000    0.000 core.py:5901(__init__)
        1    0.000    0.000    0.000    0.000 core.py:177(update_user_library)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:128(Blend)
        3    0.000    0.000    0.000    0.000 core.py:3727(__init__)
        1    0.000    0.000    0.000    0.000 _version.py:20(get_versions)
        4    0.000    0.000    0.000    0.000 vmap.py:30(doesnt_support_saved_tensors_hooks)
        1    0.000    0.000    0.000    0.000 exponential.py:607(log)
        2    0.000    0.000    0.000    0.000 getlimits.py:86(_str_smallest_subnormal)
        1    0.000    0.000    0.000    0.000 linalg.py:97(_determine_error_states)
       16    0.000    0.000    0.000    0.000 fake_quantize.py:106(with_args)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:538(<listcomp>)
        1    0.000    0.000    0.000    0.000 helpers.py:692(OpAssoc)
        2    0.000    0.000    0.000    0.000 _codata.py:1533(exact2018)
        1    0.000    0.000    0.000    0.000 util.py:49(get_platform)
        1    0.000    0.000    0.000    0.000 outputs.py:205(Vasprun)
        1    0.000    0.000    0.000    0.000 _backend.py:51(set_global_backend)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._multiprocessing_init}
      116    0.000    0.000    0.000    0.000 typing.py:1814(<genexpr>)
        1    0.000    0.000    0.000    0.000 _polyint.py:53(__init__)
      256    0.000    0.000    0.000    0.000 libintmath.py:62(python_trailing)
      186    0.000    0.000    0.000    0.000 __init__.py:108(<lambda>)
       28    0.000    0.000    0.000    0.000 {built-in method _locale.getencoding}
        1    0.000    0.000    0.000    0.000 _type_aliases.py:211(_set_array_types)
        1    0.000    0.000    0.000    0.000 __init__.py:42(__sympy_debug)
       25    0.000    0.000    0.000    0.000 rcsetup.py:773(_validate_greaterequal0_lessequal1)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2584(atan)
        1    0.000    0.000    0.000    0.000 patches.py:883(RegularPolygon)
        1    0.000    0.000    0.000    0.000 grouping.py:29(BatcherIterDataPipe)
       27    0.000    0.000    0.000    0.000 pathlib.py:622(name)
        1    0.000    0.000    0.000    0.000 autograd_function.py:511(WrappedCtx)
        1    0.000    0.000    0.000    0.000 combinatorics.py:54(ShufflerIterDataPipe)
        1    0.000    0.000    0.000    0.000 glob.py:111(_glob0)
        9    0.000    0.000    0.000    0.000 pythonmpq.py:93(_new_check)
        4    0.000    0.000    0.000    0.000 getlimits.py:62(smallest_subnormal)
        1    0.000    0.000    0.000    0.000 __init__.py:264(_reset_cache)
        1    0.000    0.000    0.000    0.000 binomial.py:13(Binomial)
       46    0.000    0.000    0.000    0.000 six.py:110(__init__)
        1    0.000    0.000    0.000    0.000 combining.py:23(ConcaterIterDataPipe)
        1    0.000    0.000    0.000    0.000 zeta.py:1(<module>)
        5    0.000    0.000    0.000    0.000 inverselaplace.py:668(__init__)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:512(__div__)
        2    0.000    0.000    0.000    0.000 complexfield.py:81(dtype)
        1    0.000    0.000    0.000    0.000 core.py:3839(Tag)
        1    0.000    0.000    0.000    0.000 ssl.py:477(Purpose)
        1    0.000    0.000    0.000    0.000 arrayop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parametrizations.py:39(_Orthogonal)
        1    0.000    0.000    0.000    0.000 inequalities.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:296(_SingleLevelFunction)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.create_builtin}
        2    0.000    0.000    0.000    0.000 conflict.py:34(super_signature)
       28    0.000    0.000    0.000    0.000 core.py:17(__setattr__)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:328(impl_decorator)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1019(<listcomp>)
        6    0.000    0.000    0.000    0.000 basic.py:147(_get_postprocessors_for_type)
        1    0.000    0.000    0.000    0.000 case.py:344(TestCase)
       25    0.000    0.000    0.000    0.000 {built-in method _struct.calcsize}
        2    0.000    0.000    0.000    0.000 contextlib.py:77(__call__)
        9    0.000    0.000    0.000    0.000 deprecation.py:433(<listcomp>)
        2    0.000    0.000    0.000    0.000 __future__.py:1(<module>)
        1    0.000    0.000    0.000    0.000 util.py:35(get_host_platform)
        1    0.000    0.000    0.000    0.000 _structures.py:1(<module>)
      449    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 numbers.py:3343(NaN)
        1    0.000    0.000    0.000    0.000 _mode_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:370(Binomial)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6024(laplace_gen)
        1    0.000    0.000    0.000    0.000 _check.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:144(is_cpython)
        1    0.000    0.000    0.000    0.000 lbfgs.py:184(LBFGS)
       36    0.000    0.000    0.000    0.000 deprecation.py:211(finalize)
      235    0.000    0.000    0.000    0.000 basic.py:324(_hashable_content)
        1    0.000    0.000    0.000    0.000 base_tasks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:3696(__init__)
        1    0.000    0.000    0.000    0.000 kind.py:190(KindDispatcher)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:1(<module>)
       97    0.000    0.000    0.000    0.000 docstring.py:63(copy)
       10    0.000    0.000    0.000    0.000 __init__.py:216(_logged_cached)
        2    0.000    0.000    0.000    0.000 __init__.py:393(__getitem__)
        4    0.000    0.000    0.000    0.000 platform.py:915(system)
        1    0.000    0.000    0.000    0.000 core.py:170(iter_user_libraries)
        1    0.000    0.000    0.000    0.000 identification.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:6568(__array_finalize__)
        1    0.000    0.000    0.000    0.000 animation.py:789(HTMLWriter)
        9    0.000    0.000    0.000    0.000 mul.py:844(as_coeff_Mul)
      147    0.000    0.000    0.000    0.000 <frozen _collections_abc>:477(_is_param_expr)
        2    0.000    0.000    0.000    0.000 densebasic.py:343(dmp_validate)
        1    0.000    0.000    0.000    0.000 rnn.py:382(LSTM)
        1    0.000    0.000    0.000    0.000 _cm.py:158(<dictcomp>)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:776(runtime_checkable)
        1    0.000    0.000    0.000    0.000 laplace.py:2203(InverseLaplaceTransform)
       58    0.000    0.000    0.000    0.000 logic.py:92(fuzzy_bool)
        1    0.000    0.000    0.000    0.000 typing.py:611(ClassVar)
        1    0.000    0.000    0.000    0.000 logistic_normal.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _compression.py:39(__init__)
        1    0.000    0.000    0.000    0.000 base_futures.py:1(<module>)
       12    0.000    0.000    0.000    0.000 core.py:6117(<lambda>)
        1    0.000    0.000    0.000    0.000 refine.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:3589(__init__)
        1    0.000    0.000    0.000    0.000 gui.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bivariate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _machar.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gzip.py:456(__init__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2630(FigureManagerBase)
        1    0.000    0.000    0.000    0.000 _sparse.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:589(_register_types)
        1    0.000    0.000    0.000    0.000 datapipe.py:358(_IterDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 sysconfig.py:219(is_python_build)
        1    0.000    0.000    0.000    0.000 line.py:47(<listcomp>)
        1    0.000    0.000    0.000    0.000 lowrank_multivariate_normal.py:48(LowRankMultivariateNormal)
        1    0.000    0.000    0.000    0.000 intfunc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dates.py:1124(RRuleLocator)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:16(_FuncInfo)
        1    0.000    0.000    0.000    0.000 _digraph.py:1(<module>)
        1    0.000    0.000    0.000    0.000 codeprinter.py:53(CodePrinter)
        1    0.000    0.000    0.000    0.000 _index.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1375(Ellipse)
        1    0.000    0.000    0.000    0.000 _trustregion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2037(expon_gen)
      181    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:19(Patch)
        1    0.000    0.000    0.000    0.000 perm_groups.py:26(PermutationGroup)
      102    0.000    0.000    0.000    0.000 patches.py:1878(<genexpr>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4810(OrderStatisticDistribution)
        1    0.000    0.000    0.000    0.000 _external_property_file_references.py:15(ExternalPropertyFileReferences)
       15    0.000    0.000    0.000    0.000 weakref.py:495(popitem)
        1    0.000    0.000    0.000    0.000 subfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 entity.py:67(<listcomp>)
      161    0.000    0.000    0.000    0.000 core.py:1774(leave_whitespace)
        1    0.000    0.000    0.000    0.000 _mstats_extras.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:491(_parse_visible_devices)
       36    0.000    0.000    0.000    0.000 binary.py:153(_torch_binary)
      169    0.000    0.000    0.000    0.000 contextlib.py:425(__init__)
        3    0.000    0.000    0.000    0.000 rcsetup.py:487(validate_whiskers)
        1    0.000    0.000    0.000    0.000 _parser.py:1371(_tzparser)
       93    0.000    0.000    0.000    0.000 _inspect.py:131(strseq)
       14    0.000    0.000    0.000    0.000 constraints.py:175(__call__)
        1    0.000    0.000    0.000    0.000 sampler.py:160(WeightedRandomSampler)
        5    0.000    0.000    0.000    0.000 decorator.py:127(update)
      216    0.000    0.000    0.000    0.000 _adapters.py:43(redent)
        1    0.000    0.000    0.000    0.000 riccati.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _asarray.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8375(pearson3_gen)
       26    0.000    0.000    0.000    0.000 _hook_iterator.py:110(IteratorDecorator)
        1    0.000    0.000    0.000    0.000 __init__.py:1145(RETURN_TYPE)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:1(<module>)
       24    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.dragon4_positional}
        7    0.000    0.000    0.000    0.000 core.py:4767(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 ssl.py:1006(SSLSocket)
        1    0.000    0.000    0.000    0.000 dataset.py:63(IterableDataset)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __config__.py:14(DisplayModes)
        1    0.000    0.000    0.000    0.000 datapipe.py:377(DataChunk)
      4/2    0.000    0.000    0.000    0.000 _aliases.py:594(isdtype)
        1    0.000    0.000    0.000    0.000 matpow.py:12(MatPow)
        6    0.000    0.000    0.000    0.000 _methods.py:55(_any)
        1    0.000    0.000    0.000    0.000 getopt.py:1(<module>)
       97    0.000    0.000    0.000    0.000 core.py:6163(<genexpr>)
        9    0.000    0.000    0.000    0.000 overrides.py:23(set_array_function_like_doc)
        3    0.000    0.000    0.000    0.000 numeric.py:67(zeros_like)
        1    0.000    0.000    0.000    0.000 numbers.py:189(fibonacci)
        1    0.000    0.000    0.000    0.000 __init__.py:1243(__init__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3548(export)
        1    0.000    0.000    0.000    0.000 ecm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _script.py:1506(_ScriptProfileTable)
       66    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:487(DataFlowGraph)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9038(rayleigh_gen)
       59    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:221(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:821(InverseMellinTransform)
        1    0.000    0.000    0.000    0.000 optimizer.py:262(profile_hook_step)
        1    0.000    0.000    0.000    0.000 _exception.py:16(Exception)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:227(_SpecialForm)
        1    0.000    0.000    0.000    0.000 _subplots.py:199(subplot_class_factory)
       53    0.000    0.000    0.000    0.000 six.py:182(_add_module)
      195    0.000    0.000    0.000    0.000 permutations.py:2083(<genexpr>)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:1(<module>)
      101    0.000    0.000    0.000    0.000 _meta_registrations.py:32(register_meta)
        1    0.000    0.000    0.000    0.000 dev.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tableform.py:1(<module>)
        1    0.000    0.000    0.000    0.000 series_class.py:11(SeriesBase)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Lattice.py:1(<module>)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3600(_overrides)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3605(_pmf_formula)
       78    0.000    0.000    0.000    0.000 inspect.py:480(iscode)
        1    0.000    0.000    0.000    0.000 _matrix.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _common.py:132(_validate_fromutc_inputs)
        7    0.000    0.000    0.000    0.000 _aliases.py:447(reshape)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:150(_families)
       97    0.000    0.000    0.000    0.000 docstring.py:65(do_copy)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:14(decorator)
        3    0.000    0.000    0.000    0.000 __init__.py:503(PYFUNCTYPE)
        1    0.000    0.000    0.000    0.000 result.py:24(TestResult)
        1    0.000    0.000    0.000    0.000 backend_tools.py:524(ToolViewsPositions)
        5    0.000    0.000    0.000    0.000 _version.py:1(<module>)
        6    0.000    0.000    0.000    0.000 numbers.py:3598(__hash__)
        1    0.000    0.000    0.000    0.000 _backend.py:330(set_global_backend)
        1    0.000    0.000    0.000    0.000 factorials.py:285(subfactorial)
        3    0.000    0.000    0.000    0.000 expr.py:220(__neg__)
        1    0.000    0.000    0.000    0.000 _polyint.py:116(_set_yi)
        5    0.000    0.000    0.000    0.000 symbolic_opset9.py:2119(wrap_logical_op_with_negation)
        1    0.000    0.000    0.000    0.000 _elffile.py:23(EIClass)
        1    0.000    0.000    0.000    0.000 _rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 categorical.py:9(Categorical)
        1    0.000    0.000    0.000    0.000 activation.py:15(MultiheadAttention)
       24    0.000    0.000    0.000    0.000 pickletools.py:193(__init__)
        5    0.000    0.000    0.000    0.000 quadrature.py:461(__init__)
        1    0.000    0.000    0.000    0.000 error_functions.py:49(erf)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_reference.py:15(ReportingDescriptorReference)
        4    0.000    0.000    0.000    0.000 __init__.py:353(get_device_name)
        1    0.000    0.000    0.000    0.000 _qap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cmd.py:34(Command)
        1    0.000    0.000    0.000    0.000 json.py:46(_load_redirect)
        1    0.000    0.000    0.000    0.000 elliptic.py:1(<module>)
       17    0.000    0.000    0.000    0.000 _multivariate.py:216(__init__)
       21    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3308(__new__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3643(_pxf_dispatch)
       55    0.000    0.000    0.000    0.000 __init__.py:382(_make_elementwise_unary_reference)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6801(lognorm_gen)
        1    0.000    0.000    0.000    0.000 results.py:39(ParseResults)
       44    0.000    0.000    0.000    0.000 unicode.py:17(<genexpr>)
       57    0.000    0.000    0.000    0.000 core.py:4169(<genexpr>)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rszeta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dist.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 __config__.py:9(DisplayModes)
        1    0.000    0.000    0.000    0.000 error_functions.py:2383(fresnels)
      166    0.000    0.000    0.000    0.000 enum.py:897(<lambda>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8574(powerlaw_gen)
        2    0.000    0.000    0.000    0.000 {built-in method _ctypes.POINTER}
        2    0.000    0.000    0.000    0.000 datetime.py:765(__neg__)
       12    0.000    0.000    0.000    0.000 _basic.py:3032(<genexpr>)
       26    0.000    0.000    0.000    0.000 {method 'fullmatch' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 _censored_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyutils.py:188(<listcomp>)
        1    0.000    0.000    0.000    0.000 polynomial.py:1472(Polynomial)
        1    0.000    0.000    0.000    0.000 unicode.py:75(nums)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:368(__new__)
        2    0.000    0.000    0.000    0.000 realfield.py:121(dtype)
       82    0.000    0.000    0.000    0.000 core.py:1962(streamline)
        1    0.000    0.000    0.000    0.000 _tzpath.py:5(reset_tzpath)
        1    0.000    0.000    0.000    0.000 format.py:1(<module>)
        2    0.000    0.000    0.000    0.000 quantize_jit.py:1(<module>)
        4    0.000    0.000    0.000    0.000 isoparser.py:22(_takes_ascii)
        1    0.000    0.000    0.000    0.000 glob.py:191(_lexists)
        1    0.000    0.000    0.000    0.000 _artifact.py:17(Artifact)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1735(DUP_Flint)
        1    0.000    0.000    0.000    0.000 _fourier.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2797(acot)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:1(<module>)
       81    0.000    0.000    0.000    0.000 __init__.py:25(decorator)
        1    0.000    0.000    0.000    0.000 function.py:281(Application)
       24    0.000    0.000    0.000    0.000 datapipe.py:133(register_datapipe_as_function)
       16    0.000    0.000    0.000    0.000 inspect.py:2230(RewriteSymbolics)
        1    0.000    0.000    0.000    0.000 __init__.py:58(Sectioned)
       42    0.000    0.000    0.000    0.000 typing.py:266(_check_generic)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:804(_reduce_with_dtype)
        1    0.000    0.000    0.000    0.000 pde.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:71(_DTypeDict)
        1    0.000    0.000    0.000    0.000 lobpcg.py:1(<module>)
       55    0.000    0.000    0.000    0.000 <frozen codecs>:260(__init__)
       17    0.000    0.000    0.000    0.000 <frozen _collections_abc>:78(_check_methods)
        4    0.000    0.000    0.000    0.000 rrule.py:80(_invalidates_cache)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3968(genhyperbolic_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:327(<listcomp>)
        1    0.000    0.000    0.000    0.000 interval_membership.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numeric.py:2123(identity)
        1    0.000    0.000    0.000    0.000 pickle.py:1137(_Unpickler)
        1    0.000    0.000    0.000    0.000 fractions.py:38(Fraction)
        1    0.000    0.000    0.000    0.000 euclidtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 timeit.py:1(<module>)
       13    0.000    0.000    0.000    0.000 enum.py:1337(_iter_member_by_value_)
        1    0.000    0.000    0.000    0.000 _typing.py:248(_DataPipeMeta)
       32    0.000    0.000    0.000    0.000 decorators.py:202(wrapper)
        4    0.000    0.000    0.000    0.000 symbolic_opset9.py:787(overload_by_arg_count)
        1    0.000    0.000    0.000    0.000 _elffile.py:28(EIData)
        1    0.000    0.000    0.000    0.000 dogbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 immutable.py:30(ImmutableRepMatrix)
        1    0.000    0.000    0.000    0.000 sampler.py:64(SequentialSampler)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:311(SizeMap)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:80(MultivariateNormal)
        1    0.000    0.000    0.000    0.000 libintmath.py:89(<listcomp>)
        1    0.000    0.000    0.000    0.000 timestamp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:153(__new__)
        4    0.000    0.000    0.000    0.000 fontconfig_pattern.py:158(_property)
       58    0.000    0.000    0.000    0.000 __init__.py:795(__init__)
       90    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        3    0.000    0.000    0.000    0.000 {built-in method _csv.register_dialect}
        1    0.000    0.000    0.000    0.000 _basic_backend.py:1(<module>)
       36    0.000    0.000    0.000    0.000 _string_helpers.py:16(english_lower)
        1    0.000    0.000    0.000    0.000 _parser.py:568(parser)
        1    0.000    0.000    0.000    0.000 arrayterator.py:1(<module>)
       18    0.000    0.000    0.000    0.000 {method 'tolist' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 {built-in method uarray._uarray.set_global_backend}
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:440(__repr__)
        1    0.000    0.000    0.000    0.000 bessel.py:1374(airyai)
        8    0.000    0.000    0.000    0.000 sympify.py:78(_is_numpy_instance)
       81    0.000    0.000    0.000    0.000 __init__.py:14(set_module)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2149(_overrides)
        1    0.000    0.000    0.000    0.000 numbers.py:609(bell)
        1    0.000    0.000    0.000    0.000 domainelement.py:1(<module>)
        3    0.000    0.000    0.000    0.000 coroutines.py:21(iscoroutinefunction)
       82    0.000    0.000    0.000    0.000 typing.py:2823(<genexpr>)
       13    0.000    0.000    0.000    0.000 enum.py:901(<dictcomp>)
       30    0.000    0.000    0.000    0.000 binary.py:162(_torch_inplace_binary)
        1    0.000    0.000    0.000    0.000 gzip.py:327(close)
       45    0.000    0.000    0.000    0.000 {built-in method torch._C.containedTypes}
       89    0.000    0.000    0.000    0.000 functions.py:81(defun_wrapped)
       35    0.000    0.000    0.000    0.000 core.py:13(dispatch)
        1    0.000    0.000    0.000    0.000 simpledomain.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:253(escape)
        1    0.000    0.000    0.000    0.000 error_functions.py:288(erfc)
        1    0.000    0.000    0.000    0.000 _ndimage_api.py:16(<listcomp>)
        2    0.000    0.000    0.000    0.000 blas.py:388(_memoize_get_funcs)
        4    0.000    0.000    0.000    0.000 random.py:797(getrandbits)
        2    0.000    0.000    0.000    0.000 tools.py:1(<module>)
      174    0.000    0.000    0.000    0.000 _docscrape.py:724(_is_show_member)
        1    0.000    0.000    0.000    0.000 geo.py:14(GeoAxes)
       15    0.000    0.000    0.000    0.000 proxy.py:524(_define_reflectable)
        1    0.000    0.000    0.000    0.000 <frozen posixpath>:174(lexists)
       12    0.000    0.000    0.000    0.000 rcsetup.py:200(validate_axisbelow)
        1    0.000    0.000    0.000    0.000 triangulation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9661(skewnorm_gen)
      230    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 core.py:3494(__init__)
        1    0.000    0.000    0.000    0.000 frontend.py:682(ExprBuilder)
        5    0.000    0.000    0.000    0.000 functools.py:191(<setcomp>)
        1    0.000    0.000    0.000    0.000 mock.py:402(NonCallableMock)
        1    0.000    0.000    0.000    0.000 expintegrals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bernoulli.py:12(Bernoulli)
       28    0.000    0.000    0.000    0.000 power.py:803(as_base_exp)
      122    0.000    0.000    0.000    0.000 core.py:2459(__getnewargs__)
      161    0.000    0.000    0.000    0.000 util.py:242(escape_re_range_char)
        1    0.000    0.000    0.000    0.000 _qmc.py:1117(Halton)
        1    0.000    0.000    0.000    0.000 py39.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sdm.py:910(convert_to)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3028(_sample_dispatch)
        1    0.000    0.000    0.000    0.000 Image.py:185(Palette)
        1    0.000    0.000    0.000    0.000 _async.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _thread_flow_location.py:19(ThreadFlowLocation)
        1    0.000    0.000    0.000    0.000 _common.py:42(resolve)
      257    0.000    0.000    0.000    0.000 hmac.py:19(<genexpr>)
       41    0.000    0.000    0.000    0.000 typing.py:2885(_namedtuple_mro_entries)
        7    0.000    0.000    0.000    0.000 rcsetup.py:292(validate_backend)
        2    0.000    0.000    0.000    0.000 core.py:6744(__init__)
        1    0.000    0.000    0.000    0.000 textpath.py:18(TextToPath)
        1    0.000    0.000    0.000    0.000 __init__.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 realtransforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9339(irwinhall_gen)
       39    0.000    0.000    0.000    0.000 functools.py:421(_unwrap_partial)
       90    0.000    0.000    0.000    0.000 basic.py:442(class_key)
        3    0.000    0.000    0.000    0.000 arrayprint.py:64(_make_options_dict)
       18    0.000    0.000    0.000    0.000 conflict.py:30(<genexpr>)
        2    0.000    0.000    0.000    0.000 traceback.py:439(from_list)
       85    0.000    0.000    0.000    0.000 __init__.py:185(keys)
        1    0.000    0.000    0.000    0.000 epathtools.py:1(<module>)
        5    0.000    0.000    0.000    0.000 perm_groups.py:149(__init__)
       30    0.000    0.000    0.000    0.000 warnings.py:440(__init__)
        1    0.000    0.000    0.000    0.000 decorators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:850(TarInfo)
        1    0.000    0.000    0.000    0.000 function.py:1045(Derivative)
        1    0.000    0.000    0.000    0.000 tag.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:367(<listcomp>)
        1    0.000    0.000    0.000    0.000 pin_memory.py:1(<module>)
        1    0.000    0.000    0.000    0.000 domain.py:18(Domain)
        1    0.000    0.000    0.000    0.000 scalarbool.py:1(<module>)
        9    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3622(_overrides)
        3    0.000    0.000    0.000    0.000 typing.py:856(_evaluate)
        1    0.000    0.000    0.000    0.000 _region.py:16(Region)
        4    0.000    0.000    0.000    0.000 enum.py:1727(<listcomp>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:553(cos)
        1    0.000    0.000    0.000    0.000 permutations.py:473(Permutation)
        8    0.000    0.000    0.000    0.000 ctx_iv.py:30(convert_mpf_)
       32    0.000    0.000    0.000    0.000 __init__.py:150(<genexpr>)
        1    0.000    0.000    0.000    0.000 <frozen os>:48(<listcomp>)
        6    0.000    0.000    0.000    0.000 _jit_internal.py:895(get_class_name_lineno)
      187    0.000    0.000    0.000    0.000 boolalg.py:365(__bool__)
        1    0.000    0.000    0.000    0.000 _complex.py:13(Complex)
        8    0.000    0.000    0.000    0.000 _nonlin.py:119(_set_doc)
        1    0.000    0.000    0.000    0.000 random.py:358(randint)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:153(sinh)
        1    0.000    0.000    0.000    0.000 _infra.py:270(__post_init__)
        1    0.000    0.000    0.000    0.000 unicode.py:236(Japanese)
        1    0.000    0.000    0.000    0.000 function.py:382(Function)
        1    0.000    0.000    0.000    0.000 _milp.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _stats.py:14(count)
        1    0.000    0.000    0.000    0.000 _at.py:52(Undef)
       40    0.000    0.000    0.000    0.000 libmpf.py:208(_normalize1)
        1    0.000    0.000    0.000    0.000 trigonometric.py:915(tan)
        4    0.000    0.000    0.000    0.000 _pep440.py:437(_cmpkey)
       96    0.000    0.000    0.000    0.000 {built-in method math.isclose}
        2    0.000    0.000    0.000    0.000 numbers.py:408(__float__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3545(gamma_gen)
       38    0.000    0.000    0.000    0.000 __init__.py:23(<genexpr>)
        1    0.000    0.000    0.000    0.000 egyptian_fraction.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:256(_register_at_fork_reinit_lock)
        3    0.000    0.000    0.000    0.000 datetime.py:1673(__new__)
       18    0.000    0.000    0.000    0.000 _ops.py:31(_apply_docstring_templates)
       18    0.000    0.000    0.000    0.000 transforms.py:52(_make_str_method)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4238(<dictcomp>)
        1    0.000    0.000    0.000    0.000 threading.py:849(__init__)
        3    0.000    0.000    0.000    0.000 monkey.py:26(_get_mro)
      130    0.000    0.000    0.000    0.000 __init__.py:247(<genexpr>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:513(__str__)
        1    0.000    0.000    0.000    0.000 powerset.py:10(PowerSet)
        1    0.000    0.000    0.000    0.000 trigonometric.py:243(sin)
        4    0.000    0.000    0.000    0.000 __init__.py:511(cast)
        1    0.000    0.000    0.000    0.000 dfm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 differentiation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:365(cosh)
       56    0.000    0.000    0.000    0.000 patches.py:1901(_register_style)
        4    0.000    0.000    0.000    0.000 _ops.py:130(inner)
        6    0.000    0.000    0.000    0.000 numeric.py:274(full)
        1    0.000    0.000    0.000    0.000 bessel.py:1546(airybi)
        1    0.000    0.000    0.000    0.000 dates.py:1475(YearLocator)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1255(cot)
        1    0.000    0.000    0.000    0.000 str.py:20(StrPrinter)
        1    0.000    0.000    0.000    0.000 parametrizations.py:288(_SpectralNorm)
        1    0.000    0.000    0.000    0.000 tensor.py:2845(Tensor)
        1    0.000    0.000    0.000    0.000 approximants.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _globals.py:24(__init__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:780(exec_module)
        1    0.000    0.000    0.000    0.000 mathml.py:547(MathMLPresentationPrinter)
        1    0.000    0.000    0.000    0.000 tarfile.py:715(TarInfo)
      169    0.000    0.000    0.000    0.000 contextlib.py:428(__enter__)
        1    0.000    0.000    0.000    0.000 deltafunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 discovery.py:210(FlatLayoutPackageFinder)
        1    0.000    0.000    0.000    0.000 _await.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:628(<dictcomp>)
        1    0.000    0.000    0.000    0.000 sorting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1236(DMP_Python)
      257    0.000    0.000    0.000    0.000 hmac.py:20(<genexpr>)
        1    0.000    0.000    0.000    0.000 trsock.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:119(Cycler)
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:301(wrapper)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3040(_sample_inverse_transform)
        1    0.000    0.000    0.000    0.000 bessel.py:1028(yn)
        1    0.000    0.000    0.000    0.000 calendar.py:52(_localized_month)
        2    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
       28    0.000    0.000    0.000    0.000 numerictypes.py:283(issubclass_)
        1    0.000    0.000    0.000    0.000 getlimits.py:612(tiny)
        1    0.000    0.000    0.000    0.000 series.py:126(BaseSeries)
        4    0.000    0.000    0.000    0.000 platform.py:1003(_sys_version)
        1    0.000    0.000    0.000    0.000 error_functions.py:482(erfi)
        1    0.000    0.000    0.000    0.000 numerictypes.py:441(_construct_lookups)
        1    0.000    0.000    0.000    0.000 densetools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:611(tanh)
        1    0.000    0.000    0.000    0.000 lib_interval.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:22(<listcomp>)
        1    0.000    0.000    0.000    0.000 <string>:2(__div__)
        1    0.000    0.000    0.000    0.000 matrix_element.py:1(<module>)
        1    0.000    0.000    0.000    0.000 boolalg.py:972(Xor)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2110(asin)
        1    0.000    0.000    0.000    0.000 sysconfig.py:719(get_platform)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:18(numeric_type_aliases)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2343(acos)
       28    0.000    0.000    0.000    0.000 inspect.py:2211(parse_name)
        1    0.000    0.000    0.000    0.000 dates.py:1230(AutoDateLocator)
        3    0.000    0.000    0.000    0.000 feedparser.py:197(_new_message)
        1    0.000    0.000    0.000    0.000 __init__.py:22(<listcomp>)
       62    0.000    0.000    0.000    0.000 _bunch.py:128(<genexpr>)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:12(ContinuousBernoulli)
        1    0.000    0.000    0.000    0.000 contour.py:48(ContourLabeler)
        4    0.000    0.000    0.000    0.000 uuid.py:139(__init__)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:313(quantized_args)
        1    0.000    0.000    0.000    0.000 scanner.py:71(Scanner)
        1    0.000    0.000    0.000    0.000 PaletteFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:1(<module>)
       26    0.000    0.000    0.000    0.000 core.py:4417(<genexpr>)
       16    0.000    0.000    0.000    0.000 doccer.py:126(_doc)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1384(acosh)
        2    0.000    0.000    0.000    0.000 tree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:394(_pmf_formula)
        1    0.000    0.000    0.000    0.000 odes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bvls.py:1(<module>)
        1    0.000    0.000    0.000    0.000 boolalg.py:1286(Equivalent)
        1    0.000    0.000    0.000    0.000 pycode.py:753(MpmathPrinter)
        1    0.000    0.000    0.000    0.000 events.py:203(AbstractEventLoop)
       18    0.000    0.000    0.000    0.000 pickletools.py:961(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:435(validate)
        1    0.000    0.000    0.000    0.000 Image.py:3874(_apply_env_variables)
        1    0.000    0.000    0.000    0.000 core.py:720(add_condition)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3176(ndim)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4259(gumbel_r_gen)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Orbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 text.py:1521(Annotation)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1572(atanh)
        2    0.000    0.000    0.000    0.000 __init__.py:394(pass_none)
        1    0.000    0.000    0.000    0.000 inputs.py:1212(Kpoints)
      208    0.000    0.000    0.000    0.000 multiarray.py:503(can_cast)
        3    0.000    0.000    0.000    0.000 message.py:409(__getitem__)
        4    0.000    0.000    0.000    0.000 shape_base.py:23(atleast_1d)
        1    0.000    0.000    0.000    0.000 engine.py:177(DiagnosticContext)
        1    0.000    0.000    0.000    0.000 core.py:4055(And)
        1    0.000    0.000    0.000    0.000 parallel_apply.py:1(<module>)
       24    0.000    0.000    0.000    0.000 numerictypes.py:514(_scalar_type_key)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:63(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9162(reciprocal_gen)
        9    0.000    0.000    0.000    0.000 _ops.py:545(__init__)
        1    0.000    0.000    0.000    0.000 limitseq.py:1(<module>)
        1    0.000    0.000    0.000    0.000 exponential.py:35(ExpBase)
       16    0.000    0.000    0.000    0.000 pretty_symbology.py:169(<lambda>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1286(LatinHypercube)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:824(coth)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:490(_SpecialGenericAlias)
        1    0.000    0.000    0.000    0.000 geometric.py:11(Geometric)
        2    0.000    0.000    0.000    0.000 conflict.py:39(<listcomp>)
       21    0.000    0.000    0.000    0.000 fancy_getopt.py:443(translate_longopt)
        1    0.000    0.000    0.000    0.000 plot_implicit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 reader.py:59(Reader)
       11    0.000    0.000    0.000    0.000 init.py:531(_make_deprecate)
        1    0.000    0.000    0.000    0.000 _waveforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 signal_handling.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:39(_get_running_interactive_framework)
        1    0.000    0.000    0.000    0.000 para4band.py:329(<listcomp>)
       28    0.000    0.000    0.000    0.000 {built-in method posix._path_normpath}
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1689(<lambda>)
        1    0.000    0.000    0.000    0.000 image.py:215(_ImageBase)
       20    0.000    0.000    0.000    0.000 mixins.py:16(_binary_method)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1017(<listcomp>)
        1    0.000    0.000    0.000    0.000 rationalfield.py:14(RationalField)
        6    0.000    0.000    0.000    0.000 rcsetup.py:617(validate_joinstyle)
        1    0.000    0.000    0.000    0.000 _address.py:12(Address)
        3    0.000    0.000    0.000    0.000 __init__.py:863(_addHandlerRef)
        1    0.000    0.000    0.000    0.000 singularities.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:112(_WindowsFlavour)
        1    0.000    0.000    0.000    0.000 quaternion.py:58(Quaternion)
        6    0.000    0.000    0.000    0.000 _weakrefset.py:37(__init__)
        1    0.000    0.000    0.000    0.000 tz.py:1470(__get_gettz)
        1    0.000    0.000    0.000    0.000 _lti_conversion.py:1(<module>)
       36    0.000    0.000    0.000    0.000 __init__.py:884(_make_elementwise_binary_reference)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1141(sech)
        1    0.000    0.000    0.000    0.000 core.py:336(AffineScalarFunc)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2448(DMF)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:355(_Gamma)
        1    0.000    0.000    0.000    0.000 ratsimp.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:3529(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 _onenormest.py:1(<module>)
        6    0.000    0.000    0.000    0.000 operations.py:135(_new_rawargs)
        1    0.000    0.000    0.000    0.000 _mangling.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1206(asinh)
        1    0.000    0.000    0.000    0.000 generate.py:45(__init__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1800(csc)
        4    0.000    0.000    0.000    0.000 platform.py:826(uname)
        3    0.000    0.000    0.000    0.000 six.py:96(__get__)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:472(<listcomp>)
        1    0.000    0.000    0.000    0.000 uniform.py:11(Uniform)
        1    0.000    0.000    0.000    0.000 formatting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_base.py:24(StandardBaseContext)
        1    0.000    0.000    0.000    0.000 linalg.py:39(EigResult)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:2080(acsch)
        3    0.000    0.000    0.000    0.000 _array_api.py:485(xp_ravel)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:417(<lambda>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3246(acsc)
       30    0.000    0.000    0.000    0.000 _type_aliases.py:203(_add_array_type)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _array_api_compat_vendor.py:1(<module>)
       24    0.000    0.000    0.000    0.000 calculus.py:4(defun)
        3    0.000    0.000    0.000    0.000 intfunc.py:162(igcd)
        1    0.000    0.000    0.000    0.000 __init__.py:118(<listcomp>)
       28    0.000    0.000    0.000    0.000 typing_extensions.py:486(_is_dunder)
        1    0.000    0.000    0.000    0.000 anchor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1001(Polygon)
        3    0.000    0.000    0.000    0.000 result.py:12(failfast)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2836(min)
       20    0.000    0.000    0.000    0.000 __init__.py:2254(_check_in_list)
        1    0.000    0.000    0.000    0.000 _constrained_layout.py:1(<module>)
        1    0.000    0.000    0.000    0.000 resolver.py:106(BaseResolver)
      115    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        2    0.000    0.000    0.000    0.000 multidimensional.py:93(__call__)
        1    0.000    0.000    0.000    0.000 _norm.py:1(<module>)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:860(is_pass)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1884(asech)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:1(<module>)
       19    0.000    0.000    0.000    0.000 {method 'round' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 inspect.py:409(iscoroutinefunction)
        1    0.000    0.000    0.000    0.000 printing.py:1(<module>)
       15    0.000    0.000    0.000    0.000 decorator.py:132(doctest_depends_on)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1737(acoth)
        1    0.000    0.000    0.000    0.000 normalforms.py:1(<module>)
       87    0.000    0.000    0.000    0.000 kl.py:822(<lambda>)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1159(_cdf2_input_validation)
        1    0.000    0.000    0.000    0.000 patches.py:1347(CirclePolygon)
        1    0.000    0.000    0.000    0.000 multidimensional.py:1(<module>)
       21    0.000    0.000    0.000    0.000 _codata.py:2127(value)
        1    0.000    0.000    0.000    0.000 eigen_symmetric.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _iotools.py:450(StringConverter)
        1    0.000    0.000    0.000    0.000 pydoc.py:565(HTMLDoc)
       18    0.000    0.000    0.000    0.000 traceback.py:310(_original_line)
       27    0.000    0.000    0.000    0.000 _testutils.py:86(__init__)
        1    0.000    0.000    0.000    0.000 _stack.py:16(Stack)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1070(csch)
        1    0.000    0.000    0.000    0.000 itt.py:1(<module>)
       58    0.000    0.000    0.000    0.000 results.py:269(__bool__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3015(asec)
        1    0.000    0.000    0.000    0.000 reductions.py:151(<dictcomp>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1713(_identify_parameterization)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:89(<listcomp>)
        1    0.000    0.000    0.000    0.000 pyplot.py:111(install_repl_displayhook)
       12    0.000    0.000    0.000    0.000 typing.py:2356(<genexpr>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1692(sec)
        1    0.000    0.000    0.000    0.000 error_functions.py:2544(fresnelc)
        2    0.000    0.000    0.000    0.000 core.py:3767(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:455(PurePath)
        1    0.000    0.000    0.000    0.000 dirichlet.py:16(_Dirichlet)
        1    0.000    0.000    0.000    0.000 __init__.py:1635(TarFile)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:71(_from_ctypes_scalar)
        1    0.000    0.000    0.000    0.000 _polyint.py:136(_set_dtype)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:175(<lambda>)
       32    0.000    0.000    0.000    0.000 _type_aliases.py:46(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 axis3d.py:35(Axis)
        1    0.000    0.000    0.000    0.000 densearith.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2697(weibull_min_gen)
        1    0.000    0.000    0.000    0.000 patches.py:1095(Wedge)
        1    0.000    0.000    0.000    0.000 pathlib.py:934(_scandir)
        1    0.000    0.000    0.000    0.000 __init__.py:727(DistributionFinder)
        1    0.000    0.000    0.000    0.000 dist.py:244(Distribution)
        1    0.000    0.000    0.000    0.000 format_helpers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sqfreetools.py:1(<module>)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:171(<lambda>)
      144    0.000    0.000    0.000    0.000 periodic_table.py:1519(oxi_state)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:744(FakeTensorConfig)
       23    0.000    0.000    0.000    0.000 <frozen os>:817(fsdecode)
        1    0.000    0.000    0.000    0.000 getlimits.py:589(smallest_normal)
        1    0.000    0.000    0.000    0.000 mock.py:1256(_patch)
        2    0.000    0.000    0.000    0.000 matrixbase.py:3796(_handle_creation_inputs)
        1    0.000    0.000    0.000    0.000 Files_out.py:1(<module>)
       30    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
       26    0.000    0.000    0.000    0.000 inspect.py:1172(__init__)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:1(<module>)
       22    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:125(StandardNormal)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:951(FakeTensorMode)
       16    0.000    0.000    0.000    0.000 structure.py:230(__iter__)
        1    0.000    0.000    0.000    0.000 typing.py:1563(__repr__)
       56    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
      138    0.000    0.000    0.000    0.000 core.py:809(postParse)
        1    0.000    0.000    0.000    0.000 inputs.py:82(Poscar)
        1    0.000    0.000    0.000    0.000 dos.py:644(CompleteDos)
        1    0.000    0.000    0.000    0.000 property.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cobyla_py.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4094(<lambda>)
        1    0.000    0.000    0.000    0.000 pprint.py:106(PrettyPrinter)
       12    0.000    0.000    0.000    0.000 domain.py:403(convert)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:1(<module>)
       54    0.000    0.000    0.000    0.000 decorators.py:23(_sympifyit)
       22    0.000    0.000    0.000    0.000 __init__.py:1273(append)
       16    0.000    0.000    0.000    0.000 inspect.py:2124(<listcomp>)
       12    0.000    0.000    0.000    0.000 arrayprint.py:739(_extendLine)
        1    0.000    0.000    0.000    0.000 {built-in method time.localtime}
        9    0.000    0.000    0.000    0.000 <frozen _collections_abc>:516(__subclasshook__)
       22    0.000    0.000    0.000    0.000 typing.py:913(_is_typevar_like)
        2    0.000    0.000    0.000    0.000 types.py:247(coroutine)
        1    0.000    0.000    0.000    0.000 datetime.py:1665(datetime)
        1    0.000    0.000    0.000    0.000 sym_operation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _notification.py:18(Notification)
        1    0.000    0.000    0.000    0.000 __init__.py:775(FastPath)
        1    0.000    0.000    0.000    0.000 _interpolate.py:434(fill_value)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6455(logistic_gen)
        1    0.000    0.000    0.000    0.000 Files_in.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:995(CatTransform)
        1    0.000    0.000    0.000    0.000 matadd.py:19(MatAdd)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:11(LogitRelaxedBernoulli)
        1    0.000    0.000    0.000    0.000 calendar.py:54(<listcomp>)
        2    0.000    0.000    0.000    0.000 __init__.py:16(_deprecation_notice)
        1    0.000    0.000    0.000    0.000 primetest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6694(loglaplace_gen)
        1    0.000    0.000    0.000    0.000 _compressed.py:25(_cs_matrix)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:123(_add_integer_aliases)
        1    0.000    0.000    0.000    0.000 timeutils.py:37(__do_timings)
        1    0.000    0.000    0.000    0.000 _polyint.py:533(BarycentricInterpolator)
        1    0.000    0.000    0.000    0.000 {built-in method posix.readlink}
        6    0.000    0.000    0.000    0.000 <frozen genericpath>:121(_splitext)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:74(_add_types)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:124(<listcomp>)
        1    0.000    0.000    0.000    0.000 _parser.py:1373(_result)
        1    0.000    0.000    0.000    0.000 ast.py:82(_convert)
        1    0.000    0.000    0.000    0.000 function.py:818(DefinedFunction)
        1    0.000    0.000    0.000    0.000 rules.py:1(<module>)
        1    0.000    0.000    0.000    0.000 subprocess.py:693(_use_posix_spawn)
       12    0.000    0.000    0.000    0.000 functools.py:355(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:43(EighResult)
        1    0.000    0.000    0.000    0.000 patches.py:1510(Circle)
       44    0.000    0.000    0.000    0.000 core.py:699(<genexpr>)
       41    0.000    0.000    0.000    0.000 representer.py:131(add_representer)
       89    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 rnn.py:518(GRU)
        1    0.000    0.000    0.000    0.000 ssl.py:484(SSLContext)
        1    0.000    0.000    0.000    0.000 _replicated_tensor_ddp_utils.py:1(<module>)
       16    0.000    0.000    0.000    0.000 arraypad.py:58(_view_roi)
       78    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
       10    0.000    0.000    0.000    0.000 _torch_docs.py:23(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10433(truncpareto_gen)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:302(_World)
        1    0.000    0.000    0.000    0.000 filelist.py:21(FileList)
        1    0.000    0.000    0.000    0.000 art3d.py:74(Text3D)
        1    0.000    0.000    0.000    0.000 _mmio.py:248(MMFile)
        1    0.000    0.000    0.000    0.000 table.py:232(Table)
        6    0.000    0.000    0.000    0.000 rcsetup.py:264(validate_fonttype)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2845(ANP)
        1    0.000    0.000    0.000    0.000 symbol.py:524(Wild)
        6    0.000    0.000    0.000    0.000 rcsetup.py:228(_make_type_validator)
        1    0.000    0.000    0.000    0.000 matmul.py:24(MatMul)
        1    0.000    0.000    0.000    0.000 core.py:87(Magmom)
        1    0.000    0.000    0.000    0.000 _realtransforms_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:277(DeprecatedList)
        1    0.000    0.000    0.000    0.000 minres.py:1(<module>)
       15    0.000    0.000    0.000    0.000 _util.py:356(<listcomp>)
        1    0.000    0.000    0.000    0.000 linalg.py:55(SVDResult)
        1    0.000    0.000    0.000    0.000 _serialization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _gcrotmk.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _coo.py:26(_coo_base)
        1    0.000    0.000    0.000    0.000 core.py:103(__diag__)
        3    0.000    0.000    0.000    0.000 _codata.py:478(exact2006)
       15    0.000    0.000    0.000    0.000 __init__.py:593(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8154(pareto_gen)
        3    0.000    0.000    0.000    0.000 _adapters.py:30(__new__)
      115    0.000    0.000    0.000    0.000 dataclasses.py:843(_hash_set_none)
        1    0.000    0.000    0.000    0.000 tensor.py:1984(TensExpr)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4565(halflogistic_gen)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.exec_builtin}
        1    0.000    0.000    0.000    0.000 patches.py:973(PathPatch)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3758(erlang_gen)
       14    0.000    0.000    0.000    0.000 dispatcher.py:113(__init__)
       61    0.000    0.000    0.000    0.000 stride_tricks.py:542(<genexpr>)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:434(mpc_convert_lhs)
        1    0.000    0.000    0.000    0.000 _infra.py:36(Tag)
       18    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:19(type_aliases_gen)
        3    0.000    0.000    0.000    0.000 core.py:708(add_parse_action)
        2    0.000    0.000    0.000    0.000 core.py:2952(_update_from)
        1    0.000    0.000    0.000    0.000 tarfile.py:1445(TarFile)
        1    0.000    0.000    0.000    0.000 mathtext.py:966(StixFonts)
        1    0.000    0.000    0.000    0.000 mathtext.py:3302(MathTextParser)
      134    0.000    0.000    0.000    0.000 six.py:93(__init__)
       39    0.000    0.000    0.000    0.000 _jit_internal.py:530(export)
        1    0.000    0.000    0.000    0.000 _laplacian.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1381(<listcomp>)
        2    0.000    0.000    0.000    0.000 _mio5_params.py:184(_convert_codecs)
        2    0.000    0.000    0.000    0.000 rcsetup.py:130(_validate_date)
       25    0.000    0.000    0.000    0.000 enum.py:787(__members__)
       29    0.000    0.000    0.000    0.000 __init__.py:1830(_str_equal)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:475(ProxyTorchDispatchMode)
        2    0.000    0.000    0.000    0.000 ordinals.py:81(__new__)
        3    0.000    0.000    0.000    0.000 __init__.py:290(__getattr__)
       10    0.000    0.000    0.000    0.000 inspect.py:1754(currentframe)
       79    0.000    0.000    0.000    0.000 reduction.py:43(register)
       28    0.000    0.000    0.000    0.000 operations.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 inputs.py:2869(Potcar)
        1    0.000    0.000    0.000    0.000 Manager.py:1(<module>)
       33    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 _common.py:149(_tzinfo)
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:807(__init__)
        1    0.000    0.000    0.000    0.000 _graph_traversal.py:16(GraphTraversal)
        2    0.000    0.000    0.000    0.000 libmpi.py:454(mpi_from_str)
        1    0.000    0.000    0.000    0.000 transforms.py:685(Bbox)
        3    0.000    0.000    0.000    0.000 _aliases.py:612(<genexpr>)
        2    0.000    0.000    0.000    0.000 selectors.py:583(_can_use)
       15    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.generic' objects}
       23    0.000    0.000    0.000    0.000 __init__.py:1267(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:1008(_set_tstate_lock)
        1    0.000    0.000    0.000    0.000 nvtx.py:1(<module>)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:235(<lambda>)
        1    0.000    0.000    0.000    0.000 singularityfunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:667(with_name)
        1    0.000    0.000    0.000    0.000 outputs.py:1962(Outcar)
        1    0.000    0.000    0.000    0.000 coreerrors.py:14(LazyExceptionMessage)
        1    0.000    0.000    0.000    0.000 __init__.py:136(script_if_tracing)
        1    0.000    0.000    0.000    0.000 sites.py:289(PeriodicSite)
       30    0.000    0.000    0.000    0.000 core.py:4416(<genexpr>)
        8    0.000    0.000    0.000    0.000 rrule.py:77(<genexpr>)
        1    0.000    0.000    0.000    0.000 reductions.py:154(<dictcomp>)
        1    0.000    0.000    0.000    0.000 boolalg.py:68(Boolean)
        1    0.000    0.000    0.000    0.000 _survival.py:17(EmpiricalDistributionFunction)
        1    0.000    0.000    0.000    0.000 puiseux.py:231(PuiseuxPoly)
        4    0.000    0.000    0.000    0.000 {built-in method posix.uname}
        4    0.000    0.000    0.000    0.000 core.py:5381(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 decompogen.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mock.py:1960(<setcomp>)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:31(InternalMatch)
        3    0.000    0.000    0.000    0.000 numbers.py:1397(from_coprime_ints)
        1    0.000    0.000    0.000    0.000 _logical_location.py:12(LogicalLocation)
       26    0.000    0.000    0.000    0.000 inspect.py:752(_is_wrapper)
        1    0.000    0.000    0.000    0.000 core.py:321(condition_as_parse_action)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:612(_set_prec)
       25    0.000    0.000    0.000    0.000 decorator.py:251(deprecated)
        2    0.000    0.000    0.000    0.000 sparsetools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4694(halfnorm_gen)
        1    0.000    0.000    0.000    0.000 julia.py:48(JuliaCodePrinter)
        1    0.000    0.000    0.000    0.000 continued_fraction.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function_docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 emitter.py:103(Emitter)
        1    0.000    0.000    0.000    0.000 main.py:56(YAML)
       75    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        2    0.000    0.000    0.000    0.000 {built-in method zlib.decompressobj}
        1    0.000    0.000    0.000    0.000 request.py:317(Request)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1650(HermiteE)
       32    0.000    0.000    0.000    0.000 arraypad.py:109(<genexpr>)
        2    0.000    0.000    0.000    0.000 typing.py:1211(__init__)
        6    0.000    0.000    0.000    0.000 _policybase.py:94(_append_doc)
       14    0.000    0.000    0.000    0.000 numeric.py:1380(<listcomp>)
        1    0.000    0.000    0.000    0.000 _dok.py:17(_dok_base)
        3    0.000    0.000    0.000    0.000 {built-in method posix.putenv}
        1    0.000    0.000    0.000    0.000 convolutions.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:70(_icdf_formula)
        1    0.000    0.000    0.000    0.000 bessel.py:1094(SphericalHankelBase)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:276(__init__)
       58    0.000    0.000    0.000    0.000 units.py:138(<genexpr>)
        1    0.000    0.000    0.000    0.000 batch_norm_replacement.py:1(<module>)
       57    0.000    0.000    0.000    0.000 __init__.py:2291(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       76    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
        1    0.000    0.000    0.000    0.000 polyhedron.py:1015(<listcomp>)
        1    0.000    0.000    0.000    0.000 engine.py:28(Diagnostic)
        1    0.000    0.000    0.000    0.000 _rectangle.py:12(Rectangle)
        7    0.000    0.000    0.000    0.000 feedparser.py:122(pushlines)
       22    0.000    0.000    0.000    0.000 util.py:197(__init__)
       11    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2035(_preserve_type)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:95(take)
        1    0.000    0.000    0.000    0.000 backend_bases.py:733(GraphicsContextBase)
        1    0.000    0.000    0.000    0.000 more.py:2049(numeric_range)
        1    0.000    0.000    0.000    0.000 precedence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _result_provenance.py:15(ResultProvenance)
      129    0.000    0.000    0.000    0.000 fromnumeric.py:1021(_argsort_dispatcher)
       93    0.000    0.000    0.000    0.000 composition.py:542(num_atoms)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1596(<listcomp>)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2108(decorator)
        1    0.000    0.000    0.000    0.000 sites.py:28(Site)
        5    0.000    0.000    0.000    0.000 datetime.py:515(_check_date_fields)
       24    0.000    0.000    0.000    0.000 ctx_iv.py:397(make_mpf)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4391(gumbel_l_gen)
        5    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
        1    0.000    0.000    0.000    0.000 _state.py:18(__init__)
        1    0.000    0.000    0.000    0.000 _dtype.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:12(RunAutomationDetails)
        5    0.000    0.000    0.000    0.000 __init__.py:750(__init__)
       66    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 _version_control_details.py:15(VersionControlDetails)
        1    0.000    0.000    0.000    0.000 convert_parameters.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _crash_handler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 argparse.py:157(HelpFormatter)
        1    0.000    0.000    0.000    0.000 common.py:449(PMGDir)
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:5(_ProbabilityDistribution)
        1    0.000    0.000    0.000    0.000 _cubature.py:29(CubatureRegion)
        1    0.000    0.000    0.000    0.000 dbapi2.py:54(register_adapters_and_converters)
        1    0.000    0.000    0.000    0.000 computed_entries.py:696(GibbsComputedStructureEntry)
        1    0.000    0.000    0.000    0.000 argparse.py:1142(_SubParsersAction)
        2    0.000    0.000    0.000    0.000 datetime.py:923(__new__)
        1    0.000    0.000    0.000    0.000 mathtext.py:642(BakomaFonts)
        1    0.000    0.000    0.000    0.000 groebnertools.py:1(<module>)
       20    0.000    0.000    0.000    0.000 para4band.py:131(mask)
        7    0.000    0.000    0.000    0.000 {method 'read' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 threading.py:583(set)
        1    0.000    0.000    0.000    0.000 __init__.py:638(levy_stable_gen)
        1    0.000    0.000    0.000    0.000 rk.py:293(RK45)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2898(_icdf_dispatch)
        1    0.000    0.000    0.000    0.000 pythonrational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sslproto.py:262(SSLProtocol)
        2    0.000    0.000    0.000    0.000 cache.py:123(_getenv)
        2    0.000    0.000    0.000    0.000 _utils_internal.py:23(get_file_path)
       50    0.000    0.000    0.000    0.000 typing.py:2018(<genexpr>)
        8    0.000    0.000    0.000    0.000 util.py:119(clear)
        4    0.000    0.000    0.000    0.000 gaussiandomains.py:56(__neg__)
        1    0.000    0.000    0.000    0.000 Physics_System.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threads.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:2955(motzkin)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:91(Tokenizer)
        3    0.000    0.000    0.000    0.000 arrayprint.py:403(_get_formatdict)
       32    0.000    0.000    0.000    0.000 arraypad.py:33(_slice_at_axis)
        1    0.000    0.000    0.000    0.000 _factories.py:26(__init__)
        2    0.000    0.000    0.000    0.000 datetime.py:1336(__new__)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 font_manager.py:1022(FontManager)
        1    0.000    0.000    0.000    0.000 _thread_flow.py:16(ThreadFlow)
        1    0.000    0.000    0.000    0.000 dviread.py:789(PsfontsMap)
        1    0.000    0.000    0.000    0.000 laguerre.py:1606(Laguerre)
        1    0.000    0.000    0.000    0.000 transformed_distribution.py:11(TransformedDistribution)
        1    0.000    0.000    0.000    0.000 _quantile.py:1(<module>)
       18    0.000    0.000    0.000    0.000 {method 'cast' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 animation.py:172(AbstractMovieWriter)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:55(_pdf_formula)
        1    0.000    0.000    0.000    0.000 outputs.py:5920(Vaspout)
        1    0.000    0.000    0.000    0.000 rnn.py:62(RNNBase)
        1    0.000    0.000    0.000    0.000 settings.py:27(JonesFaithfulTransformation)
        4    0.000    0.000    0.000    0.000 <frozen os>:1080(__subclasshook__)
        1    0.000    0.000    0.000    0.000 sets.py:1819(EmptySet)
        1    0.000    0.000    0.000    0.000 subprocess.py:747(Popen)
        1    0.000    0.000    0.000    0.000 frontend.py:531(StmtBuilder)
        1    0.000    0.000    0.000    0.000 euler.py:1(<module>)
       20    0.000    0.000    0.000    0.000 rcsetup.py:600(_deprecate_case_insensitive_join_cap)
       36    0.000    0.000    0.000    0.000 _pytree.py:59(_list_unflatten)
        1    0.000    0.000    0.000    0.000 sslproto.py:78(_SSLProtocolTransport)
        5    0.000    0.000    0.000    0.000 assume.py:305(__new__)
        1    0.000    0.000    0.000    0.000 point.py:42(Point)
        1    0.000    0.000    0.000    0.000 argparse.py:1708(ArgumentParser)
        1    0.000    0.000    0.000    0.000 observer.py:611(PerChannelMinMaxObserver)
        1    0.000    0.000    0.000    0.000 _suppression.py:12(Suppression)
       43    0.000    0.000    0.000    0.000 dispatcher.py:120(register)
        1    0.000    0.000    0.000    0.000 std.py:76(TqdmDefaultWriteLock)
        1    0.000    0.000    0.000    0.000 tz.py:41(tzutc)
        1    0.000    0.000    0.000    0.000 compat.py:62(with_metaclass)
        1    0.000    0.000    0.000    0.000 transforms.py:209(_InverseTransform)
        1    0.000    0.000    0.000    0.000 _mio5.py:516(VarWriter5)
        1    0.000    0.000    0.000    0.000 multinomial.py:11(Multinomial)
        2    0.000    0.000    0.000    0.000 weakref.py:164(__setitem__)
        1    0.000    0.000    0.000    0.000 independent.py:9(Independent)
        1    0.000    0.000    0.000    0.000 locks.py:446(Barrier)
        1    0.000    0.000    0.000    0.000 rref.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1013(<listcomp>)
       16    0.000    0.000    0.000    0.000 {method 'popitem' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 _savitzky_golay.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _helpers.py:310(is_numpy_namespace)
       32    0.000    0.000    0.000    0.000 typing.py:2906(<genexpr>)
        1    0.000    0.000    0.000    0.000 loss.py:1498(TripletMarginWithDistanceLoss)
        1    0.000    0.000    0.000    0.000 ImageChops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:677(rv_generic)
        7    0.000    0.000    0.000    0.000 core.py:2544(_arraymethod)
       74    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        1    0.000    0.000    0.000    0.000 chebyshev.py:1995(Chebyshev)
        1    0.000    0.000    0.000    0.000 lsqr.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _compression.py:59(close)
        1    0.000    0.000    0.000    0.000 _trace.py:1215(_script_if_tracing)
        3    0.000    0.000    0.000    0.000 blas.py:270(find_best_blas_type)
        3    0.000    0.000    0.000    0.000 feedparser.py:70(close)
        2    0.000    0.000    0.000    0.000 <frozen os>:687(__delitem__)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:4998(_make_r_binary_op)
        1    0.000    0.000    0.000    0.000 collections.py:1233(RegularPolyCollection)
        1    0.000    0.000    0.000    0.000 __init__.py:121(<listcomp>)
        2    0.000    0.000    0.000    0.000 version.py:523(_cmpkey)
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:9(MixtureSameFamily)
        4    0.000    0.000    0.000    0.000 function_base.py:1804(trim_zeros)
        1    0.000    0.000    0.000    0.000 _rgi.py:56(RegularGridInterpolator)
        1    0.000    0.000    0.000    0.000 dot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _artifact_content.py:15(ArtifactContent)
        1    0.000    0.000    0.000    0.000 approximation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 octave.py:65(OctaveCodePrinter)
        1    0.000    0.000    0.000    0.000 modular.py:1(<module>)
        1    0.000    0.000    0.000    0.000 qp_subproblem.py:1(<module>)
       40    0.000    0.000    0.000    0.000 enum.py:92(_is_single_bit)
        1    0.000    0.000    0.000    0.000 transformer.py:593(TransformerDecoderLayer)
        1    0.000    0.000    0.000    0.000 groups.py:66(SymmetryGroup)
       56    0.000    0.000    0.000    0.000 __init__.py:1894(<genexpr>)
        1    0.000    0.000    0.000    0.000 operations.py:29(SymmOp)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:397(PythonKeyTracer)
        1    0.000    0.000    0.000    0.000 __init__.py:112(<listcomp>)
        1    0.000    0.000    0.000    0.000 single.py:42(SingleODEProblem)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:304(MPIntervalContext)
       36    0.000    0.000    0.000    0.000 symbol.py:410(_hashable_content)
        2    0.000    0.000    0.000    0.000 arrayprint.py:503(decorating_function)
        1    0.000    0.000    0.000    0.000 pareto.py:9(Pareto)
       15    0.000    0.000    0.000    0.000 _helpers.py:660(_check_device)
        1    0.000    0.000    0.000    0.000 conv.py:675(ConvTranspose1d)
       59    0.000    0.000    0.000    0.000 {function FreezableDefaultDict.__missing__ at 0x146a9f69dd00}
        6    0.000    0.000    0.000    0.000 parse.py:786(__getattr__)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:27(merge_dicts)
        1    0.000    0.000    0.000    0.000 _spfun_stats.py:1(<module>)
       23    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        8    0.000    0.000    0.000    0.000 mock.py:322(_delegating_property)
      8/2    0.000    0.000    0.000    0.000 densebasic.py:315(_rec_validate)
        1    0.000    0.000    0.000    0.000 trajectory.py:42(Trajectory)
        1    0.000    0.000    0.000    0.000 _decomposition_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gosper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 process.py:71(BaseProcess)
        9    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:388(_attrgetter)
        1    0.000    0.000    0.000    0.000 context.py:30(BaseContext)
        1    0.000    0.000    0.000    0.000 linalg.py:51(SlogdetResult)
        1    0.000    0.000    0.000    0.000 piecewise.py:65(Piecewise)
        1    0.000    0.000    0.000    0.000 linear.py:9(LinearPackedParams)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:16(SarifLog)
        1    0.000    0.000    0.000    0.000 rk.py:183(RK23)
       11    0.000    0.000    0.000    0.000 threading.py:90(RLock)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:26(_apply)
        1    0.000    0.000    0.000    0.000 case.py:44(_Outcome)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:11(GenzMalikCubature)
        1    0.000    0.000    0.000    0.000 selector_events.py:43(BaseSelectorEventLoop)
       12    0.000    0.000    0.000    0.000 typing.py:389(<genexpr>)
        3    0.000    0.000    0.000    0.000 six.py:194(find_spec)
        1    0.000    0.000    0.000    0.000 testing.py:126(TestParseResultsAsserts)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:12(ReportingConfiguration)
        1    0.000    0.000    0.000    0.000 repmatrix.py:23(RepMatrix)
        4    0.000    0.000    0.000    0.000 legend_handler.py:181(__init__)
        1    0.000    0.000    0.000    0.000 _qmc.py:2486(MultinomialQMC)
       93    0.000    0.000    0.000    0.000 {method 'ljust' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _physical_location.py:17(PhysicalLocation)
        1    0.000    0.000    0.000    0.000 __init__.py:129(Command)
        1    0.000    0.000    0.000    0.000 subspaces.py:1(<module>)
       14    0.000    0.000    0.000    0.000 util.py:30(__init__)
        1    0.000    0.000    0.000    0.000 periodic_table.py:993(Species)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:119(__repr__)
        1    0.000    0.000    0.000    0.000 lsmr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linalg.py:47(QRResult)
        1    0.000    0.000    0.000    0.000 numbers.py:32(Complex)
        1    0.000    0.000    0.000    0.000 _util.py:671(_workers_wrapper)
        3    0.000    0.000    0.000    0.000 core.py:5093(_generateDefaultName)
       16    0.000    0.000    0.000    0.000 ctx_mp_python.py:597(make_mpf)
       71    0.000    0.000    0.000    0.000 <frozen _collections_abc>:409(__subclasshook__)
        1    0.000    0.000    0.000    0.000 legendre.py:1619(Legendre)
       57    0.000    0.000    0.000    0.000 <frozen _collections_abc>:315(__subclasshook__)
        1    0.000    0.000    0.000    0.000 generators.py:1(<module>)
        6    0.000    0.000    0.000    0.000 deprecation.py:269(__init__)
        1    0.000    0.000    0.000    0.000 stringpict.py:22(stringPict)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:99(__init__)
        2    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.generic' objects}
        7    0.000    0.000    0.000    0.000 legend_handler.py:136(__init__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:117(_sample_formula)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 _namedtensor_internals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 setupcfg.py:228(ConfigHandler)
        8    0.000    0.000    0.000    0.000 copyreg.py:12(pickle)
       26    0.000    0.000    0.000    0.000 tokenize.py:616(generate_tokens)
        1    0.000    0.000    0.000    0.000 _message.py:12(Message)
        1    0.000    0.000    0.000    0.000 operations.py:516(MagSymmOp)
        1    0.000    0.000    0.000    0.000 defmatrix.py:73(matrix)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:12(EdgeTraversal)
        1    0.000    0.000    0.000    0.000 polynomialring.py:10(PolynomialRing)
        1    0.000    0.000    0.000    0.000 unicode.py:31(unicode_set)
        7    0.000    0.000    0.000    0.000 dev.py:20(deprecated)
        8    0.000    0.000    0.000    0.000 __init__.py:56(__init_subclass__)
        1    0.000    0.000    0.000    0.000 representer.py:238(SafeRepresenter)
        1    0.000    0.000    0.000    0.000 theta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gzip.py:529(_read_eof)
       85    0.000    0.000    0.000    0.000 _compat_pickle.py:167(<genexpr>)
        1    0.000    0.000    0.000    0.000 _linprog_simplex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:142(CudnnModule)
        1    0.000    0.000    0.000    0.000 conv.py:36(_ConvNd)
        1    0.000    0.000    0.000    0.000 core.py:5959(__init__)
        9    0.000    0.000    0.000    0.000 __init__.py:163(__new__)
        1    0.000    0.000    0.000    0.000 function.py:517(once_differentiable)
        1    0.000    0.000    0.000    0.000 _edge.py:12(Edge)
        1    0.000    0.000    0.000    0.000 defchararray.py:1922(chararray)
        1    0.000    0.000    0.000    0.000 core.py:4918(__init__)
        1    0.000    0.000    0.000    0.000 tripcolor.py:1(<module>)
       13    0.000    0.000    0.000    0.000 {method 'index' of 'tuple' objects}
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:282(define_parameters)
        1    0.000    0.000    0.000    0.000 _stack_frame.py:12(StackFrame)
        1    0.000    0.000    0.000    0.000 sparse.py:226(EmbeddingBag)
       16    0.000    0.000    0.000    0.000 doccer.py:82(inherit_docstring_from)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10826(uniform_gen)
        1    0.000    0.000    0.000    0.000 typing.py:1569(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:2420(__init__)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:39(_mpf)
        1    0.000    0.000    0.000    0.000 animation.py:256(MovieWriter)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:165(_icdf_formula)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1431(__init__)
        1    0.000    0.000    0.000    0.000 ops.py:726(add_comparative_ops)
        1    0.000    0.000    0.000    0.000 _node.py:17(Node)
       40    0.000    0.000    0.000    0.000 typing_extensions.py:723(__hash__)
        1    0.000    0.000    0.000    0.000 context.py:297(passes)
        1    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 axis.py:1965(XAxis)
        1    0.000    0.000    0.000    0.000 transformer.py:370(TransformerEncoderLayer)
       41    0.000    0.000    0.000    0.000 decorators.py:83(call_highest_priority)
        2    0.000    0.000    0.000    0.000 __init__.py:12(<listcomp>)
        4    0.000    0.000    0.000    0.000 libmpf.py:631(mpf_le)
       30    0.000    0.000    0.000    0.000 _array_api.py:525(<listcomp>)
        1    0.000    0.000    0.000    0.000 _state.py:23(parse_env)
       32    0.000    0.000    0.000    0.000 arraypad.py:120(<genexpr>)
        1    0.000    0.000    0.000    0.000 futures.py:30(Future)
       19    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:45(enabled)
        1    0.000    0.000    0.000    0.000 computed_entries.py:287(ComputedEntry)
        1    0.000    0.000    0.000    0.000 _lil.py:20(_lil_base)
        8    0.000    0.000    0.000    0.000 fontconfig_pattern.py:144(_name)
        1    0.000    0.000    0.000    0.000 _script.py:562(RecursiveScriptModule)
        1    0.000    0.000    0.000    0.000 dev.py:159(__call__)
        1    0.000    0.000    0.000    0.000 delta_functions.py:393(Heaviside)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:695(LOBPCG)
       14    0.000    0.000    0.000    0.000 libelefun.py:85(constant_memo)
        1    0.000    0.000    0.000    0.000 _location_relationship.py:12(LocationRelationship)
        1    0.000    0.000    0.000    0.000 _dtype_ctypes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:58(MPContext)
        1    0.000    0.000    0.000    0.000 context.py:79(_compose)
       41    0.000    0.000    0.000    0.000 typing.py:2835(<listcomp>)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:12(ToolComponentReference)
       59    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
       15    0.000    0.000    0.000    0.000 weakref.py:427(__setitem__)
        1    0.000    0.000    0.000    0.000 tempfile.py:665(SpooledTemporaryFile)
        1    0.000    0.000    0.000    0.000 base64mime.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:16(ReportingDescriptorRelationship)
        6    0.000    0.000    0.000    0.000 domainmatrix.py:225(from_rep)
        1    0.000    0.000    0.000    0.000 _bsplines.py:69(BSpline)
        1    0.000    0.000    0.000    0.000 _stats_py.py:9096(QuantileTestResult)
        1    0.000    0.000    0.000    0.000 datetime.py:893(date)
        1    0.000    0.000    0.000    0.000 hermite.py:1658(Hermite)
        1    0.000    0.000    0.000    0.000 fusion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _attachment.py:18(Attachment)
        1    0.000    0.000    0.000    0.000 remote_device.py:6(_remote_device)
        3    0.000    0.000    0.000    0.000 libmpf.py:59(prec_to_dps)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:122(<listcomp>)
       36    0.000    0.000    0.000    0.000 __init__.py:888(__bool__)
        1    0.000    0.000    0.000    0.000 mathematica.py:122(MCodePrinter)
        1    0.000    0.000    0.000    0.000 __init__.py:282(Throttler)
        1    0.000    0.000    0.000    0.000 qmc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hb.py:354(HBMatrixType)
        1    0.000    0.000    0.000    0.000 __init__.py:192(<dictcomp>)
       14    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1692(reset_cache)
        3    0.000    0.000    0.000    0.000 feedparser.py:53(__init__)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:71(_export_c_types)
        3    0.000    0.000    0.000    0.000 _policybase.py:311(header_fetch_parse)
        1    0.000    0.000    0.000    0.000 polynomial.py:1077(poly1d)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:10(Gcf)
        1    0.000    0.000    0.000    0.000 inputs.py:791(Incar)
        1    0.000    0.000    0.000    0.000 finitefield.py:108(FiniteField)
        1    0.000    0.000    0.000    0.000 rnn.py:178(LSTMCell)
        1    0.000    0.000    0.000    0.000 sparse.py:13(Embedding)
        1    0.000    0.000    0.000    0.000 free_groups.py:350(FreeGroupElement)
        2    0.000    0.000    0.000    0.000 sdm.py:186(new)
        1    0.000    0.000    0.000    0.000 tz.py:132(tzoffset)
        1    0.000    0.000    0.000    0.000 _methods.py:47(_sum)
        1    0.000    0.000    0.000    0.000 _artifact_location.py:12(ArtifactLocation)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5028(Mixture)
        1    0.000    0.000    0.000    0.000 polytools.py:7556(GroebnerBasis)
        1    0.000    0.000    0.000    0.000 finite_diff.py:1(<module>)
        1    0.000    0.000    0.000    0.000 facts.py:95(deduce_alpha_implications)
        1    0.000    0.000    0.000    0.000 ssl.py:845(SSLObject)
        1    0.000    0.000    0.000    0.000 transforms.py:687(AffineTransform)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:60(FakeQuantizeBase)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:151(_set_up_aliases)
        1    0.000    0.000    0.000    0.000 mock.py:2158(AsyncMockMixin)
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:15(ExternalPropertyFileReference)
        1    0.000    0.000    0.000    0.000 constructor.py:62(BaseConstructor)
        1    0.000    0.000    0.000    0.000 client.py:789(HTTPConnection)
        1    0.000    0.000    0.000    0.000 _pade.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3635(_pdf_formula)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1221(StateSpace)
       10    0.000    0.000    0.000    0.000 gaussiandomains.py:27(new)
        1    0.000    0.000    0.000    0.000 datapipe.py:212(MapDataPipe)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2331(_median_dispatch)
        6    0.000    0.000    0.000    0.000 glob.py:222(has_magic)
        2    0.000    0.000    0.000    0.000 matexpr.py:81(__new__)
        2    0.000    0.000    0.000    0.000 charset.py:211(__init__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1832(tol)
        2    0.000    0.000    0.000    0.000 _importlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dos.py:171(Dos)
        1    0.000    0.000    0.000    0.000 session.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _version.py:136(__lt__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:85(add)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2067(_num_parameters)
        1    0.000    0.000    0.000    0.000 structure.py:3439(IMolecule)
        1    0.000    0.000    0.000    0.000 sets.py:1035(Interval)
        1    0.000    0.000    0.000    0.000 matexpr.py:739(_LeftRightArgs)
        1    0.000    0.000    0.000    0.000 libmpc.py:205(mpc_div_mpf)
        1    0.000    0.000    0.000    0.000 parameter.py:81(UninitializedTensorMixin)
        1    0.000    0.000    0.000    0.000 __init__.py:21(__deprecated_private_func)
        1    0.000    0.000    0.000    0.000 glsl.py:30(GLSLPrinter)
        1    0.000    0.000    0.000    0.000 __init__.py:939(ByteStorage)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5334(random_table_gen)
        7    0.000    0.000    0.000    0.000 getlimits.py:709(max)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3121(_one)
       13    0.000    0.000    0.000    0.000 enum.py:116(_iter_bits_lsb)
        1    0.000    0.000    0.000    0.000 ast.py:74(_convert_signed_num)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._distributed_c10d.set_debug_level_from_env}
       13    0.000    0.000    0.000    0.000 enum.py:775(__iter__)
        1    0.000    0.000    0.000    0.000 random.py:284(randrange)
       16    0.000    0.000    0.000    0.000 _collections.py:23(freeze)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1657(rv_continuous)
        1    0.000    0.000    0.000    0.000 tasks.py:78(Task)
        1    0.000    0.000    0.000    0.000 zipfile.py:1216(ZipFile)
        1    0.000    0.000    0.000    0.000 _script.py:486(ScriptModule)
        1    0.000    0.000    0.000    0.000 _text.py:7(FoldedCase)
        1    0.000    0.000    0.000    0.000 band.py:16(Band)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:104(_format_size)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:145(__float__)
        1    0.000    0.000    0.000    0.000 residues.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _bracket.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reduction.py:1(<module>)
       29    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
       11    0.000    0.000    0.000    0.000 eigen.py:41(defun)
        1    0.000    0.000    0.000    0.000 image.py:1010(NonUniformImage)
        1    0.000    0.000    0.000    0.000 random.py:103(Random)
        1    0.000    0.000    0.000    0.000 conditionset.py:19(ConditionSet)
        1    0.000    0.000    0.000    0.000 _finite_differences.py:1(<module>)
       10    0.000    0.000    0.000    0.000 dataclasses.py:847(<listcomp>)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:82(mpf_convert_arg)
       33    0.000    0.000    0.000    0.000 _collections.py:24(<lambda>)
        2    0.000    0.000    0.000    0.000 {built-in method posix.access}
       44    0.000    0.000    0.000    0.000 core.py:4405(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:238(<listcomp>)
       17    0.000    0.000    0.000    0.000 __init__.py:438(<dictcomp>)
       38    0.000    0.000    0.000    0.000 ops.py:33(set_doc_string)
       15    0.000    0.000    0.000    0.000 ssl.py:1000(_sslcopydoc)
        1    0.000    0.000    0.000    0.000 art3d.py:128(Line3D)
       36    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}
        2    0.000    0.000    0.000    0.000 operations.py:613(__init__)
        4    0.000    0.000    0.000    0.000 results.py:224(__setitem__)
        1    0.000    0.000    0.000    0.000 _data.py:20(_data_matrix)
        1    0.000    0.000    0.000    0.000 dir_util.py:30(wrap)
        1    0.000    0.000    0.000    0.000 threading.py:555(__init__)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:425(_reduce_with_dtype)
        1    0.000    0.000    0.000    0.000 common.py:465(<dictcomp>)
        1    0.000    0.000    0.000    0.000 repr.py:18(ReprPrinter)
       38    0.000    0.000    0.000    0.000 observer.py:53(__init__)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:12(MultiformatMessageString)
       38    0.000    0.000    0.000    0.000 ops.py:25(set_doc)
        1    0.000    0.000    0.000    0.000 tight_layout.py:1(<module>)
        1    0.000    0.000    0.000    0.000 formal.py:968(FormalPowerSeries)
        1    0.000    0.000    0.000    0.000 pickle.py:407(_Pickler)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:307(_pdf_formula)
        1    0.000    0.000    0.000    0.000 base_backend.py:49(Plot)
       10    0.000    0.000    0.000    0.000 version.py:319(<listcomp>)
        3    0.000    0.000    0.000    0.000 zipfile.py:1868(__del__)
        1    0.000    0.000    0.000    0.000 queue.py:28(Queue)
        5    0.000    0.000    0.000    0.000 __init__.py:10(set_module)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:232(<lambda>)
        1    0.000    0.000    0.000    0.000 dist.py:1109(DistributionMetadata)
        1    0.000    0.000    0.000    0.000 patches.py:2415(_Base)
        1    0.000    0.000    0.000    0.000 client.py:108(<dictcomp>)
        1    0.000    0.000    0.000    0.000 std.py:131(Bar)
       28    0.000    0.000    0.000    0.000 _decorator.py:14(__init__)
       55    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1867(validation_policy)
        1    0.000    0.000    0.000    0.000 reductions.py:52(__init__)
       10    0.000    0.000    0.000    0.000 _text.py:90(lower)
        1    0.000    0.000    0.000    0.000 __init__.py:527(Distribution)
        6    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.generic' objects}
       13    0.000    0.000    0.000    0.000 _conversions.py:38(_make_conversion_method)
        1    0.000    0.000    0.000    0.000 socket.py:214(socket)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:150(_pdf_formula)
       32    0.000    0.000    0.000    0.000 decorators.py:196(sympify_return)
        1    0.000    0.000    0.000    0.000 utils.py:17(LinearBlockSparsePattern)
       14    0.000    0.000    0.000    0.000 mixins.py:26(_reflected_binary_method)
       20    0.000    0.000    0.000    0.000 enum.py:1609(_simple_enum)
        1    0.000    0.000    0.000    0.000 conv.py:806(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 cse_opts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polygon.py:2053(Triangle)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:185(IterativeSubproblem)
       10    0.000    0.000    0.000    0.000 symbol.py:798(<listcomp>)
        1    0.000    0.000    0.000    0.000 linear.py:99(Linear)
       10    0.000    0.000    0.000    0.000 axis.py:1935(_make_getset_interval)
        1    0.000    0.000    0.000    0.000 _lebedev.py:1(<module>)
        7    0.000    0.000    0.000    0.000 rrule.py:70(__init__)
        7    0.000    0.000    0.000    0.000 graph.py:57(_register_custom_builtin)
        1    0.000    0.000    0.000    0.000 io_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:37(NumPyPrinter)
        1    0.000    0.000    0.000    0.000 decorator.py:85(conserve_mpmath_dps)
       23    0.000    0.000    0.000    0.000 functools.py:972(__set_name__)
       31    0.000    0.000    0.000    0.000 _base.py:51(__init__)
        1    0.000    0.000    0.000    0.000 is_from_package.py:1(<module>)
        2    0.000    0.000    0.000    0.000 gzip.py:463(_init_read)
        1    0.000    0.000    0.000    0.000 analyzer.py:84(SpacegroupAnalyzer)
        1    0.000    0.000    0.000    0.000 matrices.py:9(_matrix)
        1    0.000    0.000    0.000    0.000 structure.py:4137(Structure)
        1    0.000    0.000    0.000    0.000 polar.py:17(PolarTransform)
        1    0.000    0.000    0.000    0.000 para4band.py:327(<listcomp>)
        1    0.000    0.000    0.000    0.000 bessel.py:1207(hn2)
       11    0.000    0.000    0.000    0.000 windows.py:53(decorator)
        1    0.000    0.000    0.000    0.000 _conversion.py:17(Conversion)
        1    0.000    0.000    0.000    0.000 shape_prop.py:11(TensorMetadata)
        1    0.000    0.000    0.000    0.000 debug.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _csr.py:18(_csr_base)
        3    0.000    0.000    0.000    0.000 legend_handler.py:341(__init__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:816(matches)
       31    0.000    0.000    0.000    0.000 laplace.py:48(DEBUG_WRAP)
        1    0.000    0.000    0.000    0.000 numpy.py:9(<listcomp>)
        1    0.000    0.000    0.000    0.000 context.py:270(raises)
        1    0.000    0.000    0.000    0.000 digits.py:1(<module>)
        1    0.000    0.000    0.000    0.000 prufer.py:11(Prufer)
        1    0.000    0.000    0.000    0.000 _internal.py:240(_missing_ctypes)
        1    0.000    0.000    0.000    0.000 _graph.py:17(Graph)
        1    0.000    0.000    0.000    0.000 sparse.py:9(Embedding)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1279(BPoly)
        5    0.000    0.000    0.000    0.000 <frozen _collections_abc>:489(_type_repr)
        1    0.000    0.000    0.000    0.000 _fix.py:16(Fix)
       14    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 transforms.py:391(IndependentTransform)
        1    0.000    0.000    0.000    0.000 adaptive.py:19(AdaptiveLogSoftmaxWithLoss)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:28(<dictcomp>)
        8    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:98(<listcomp>)
       58    0.000    0.000    0.000    0.000 _utils.py:770(__init__)
       12    0.000    0.000    0.000    0.000 patches.py:1883(<genexpr>)
        1    0.000    0.000    0.000    0.000 rnn.py:111(RNNCell)
        1    0.000    0.000    0.000    0.000 _deprecate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:379(MinMaxBase)
        1    0.000    0.000    0.000    0.000 _extract.py:1(<module>)
       13    0.000    0.000    0.000    0.000 basic.py:539(__ne__)
        1    0.000    0.000    0.000    0.000 numbers.py:147(Real)
        1    0.000    0.000    0.000    0.000 _ltisys.py:490(TransferFunction)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:506(rv_frozen)
        1    0.000    0.000    0.000    0.000 representer.py:52(BaseRepresenter)
        1    0.000    0.000    0.000    0.000 _infra.py:272(<setcomp>)
        1    0.000    0.000    0.000    0.000 special.py:75(__new__)
        1    0.000    0.000    0.000    0.000 optimizer.py:154(Optimizer)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:10(ArrayComprehension)
        1    0.000    0.000    0.000    0.000 _digraph.py:5(DiGraph)
        1    0.000    0.000    0.000    0.000 complexfield.py:16(ComplexField)
        1    0.000    0.000    0.000    0.000 units.py:277(FloatWithUnit)
       12    0.000    0.000    0.000    0.000 _utils.py:7(_get_device_index)
       10    0.000    0.000    0.000    0.000 quadrature.py:21(__init__)
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:298(_export)
        1    0.000    0.000    0.000    0.000 modules.py:1280(ModuleElement)
        1    0.000    0.000    0.000    0.000 font_manager.py:618(FontProperties)
        1    0.000    0.000    0.000    0.000 algebraicfield.py:15(AlgebraicField)
        2    0.000    0.000    0.000    0.000 pathlib.py:777(parent)
        1    0.000    0.000    0.000    0.000 core.py:3750(__init__)
        1    0.000    0.000    0.000    0.000 _matrix.py:1(spmatrix)
        1    0.000    0.000    0.000    0.000 conv.py:39(Conv1d)
        1    0.000    0.000    0.000    0.000 qfunctions.py:1(<module>)
        9    0.000    0.000    0.000    0.000 core.py:3771(parseImpl)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:418(_mode_formula)
        3    0.000    0.000    0.000    0.000 core.py:714(<listcomp>)
        1    0.000    0.000    0.000    0.000 collections.py:1888(QuadMesh)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1011(<listcomp>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:348(_sample_formula)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:623(convert)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:46(PythonMPQ)
        5    0.000    0.000    0.000    0.000 core.py:6175(token_map)
        1    0.000    0.000    0.000    0.000 integerring.py:20(IntegerRing)
       36    0.000    0.000    0.000    0.000 _pytree.py:56(_list_flatten)
       77    0.000    0.000    0.000    0.000 signal.py:16(<lambda>)
        1    0.000    0.000    0.000    0.000 line.py:50(LinearEntity)
        1    0.000    0.000    0.000    0.000 _policybase.py:112(Policy)
        1    0.000    0.000    0.000    0.000 subsets.py:6(Subset)
        1    0.000    0.000    0.000    0.000 backend_registry.py:43(backend_registered)
        1    0.000    0.000    0.000    0.000 dirichlet.py:30(Dirichlet)
        1    0.000    0.000    0.000    0.000 re.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ndim_array.py:86(NDimArray)
        1    0.000    0.000    0.000    0.000 collections.py:887(_CollectionWithSizes)
       24    0.000    0.000    0.000    0.000 dviread.py:168(<listcomp>)
        1    0.000    0.000    0.000    0.000 file_util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataclasses.py:1224(fields)
        1    0.000    0.000    0.000    0.000 tensor.py:416(_TensorDataLazyEvaluator)
        1    0.000    0.000    0.000    0.000 polygon.py:28(Polygon)
        1    0.000    0.000    0.000    0.000 dispatcher.py:89(Dispatcher)
       12    0.000    0.000    0.000    0.000 domain.py:470(of_type)
        1    0.000    0.000    0.000    0.000 _stdlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cobyqa_py.py:1(<module>)
        1    0.000    0.000    0.000    0.000 deutils.py:1(<module>)
       45    0.000    0.000    0.000    0.000 ctx_iv.py:394(<lambda>)
        1    0.000    0.000    0.000    0.000 modularinteger.py:15(ModularInteger)
       52    0.000    0.000    0.000    0.000 pathlib.py:327(_select_from)
        1    0.000    0.000    0.000    0.000 memory_format.py:1(<module>)
       24    0.000    0.000    0.000    0.000 dviread.py:135(_dispatch)
        1    0.000    0.000    0.000    0.000 rcode.py:78(RCodePrinter)
        1    0.000    0.000    0.000    0.000 _polyutils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tool.py:12(Tool)
        1    0.000    0.000    0.000    0.000 pycode.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 jscode.py:46(JavascriptCodePrinter)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1759(<listcomp>)
        1    0.000    0.000    0.000    0.000 _lambertw.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:359(_mpc)
        1    0.000    0.000    0.000    0.000 collections.py:1824(TriMesh)
       59    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1846(cache_policy)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:444(<listcomp>)
       18    0.000    0.000    0.000    0.000 _data.py:142(_create_method)
       32    0.000    0.000    0.000    0.000 expr.py:185(_hashable_content)
       36    0.000    0.000    0.000    0.000 discovery.py:252(<genexpr>)
        1    0.000    0.000    0.000    0.000 _tzpath.py:31(_parse_python_tzpath)
        1    0.000    0.000    0.000    0.000 isolve.py:1(<module>)
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:289(_apply_params)
        1    0.000    0.000    0.000    0.000 parser.py:102(Parser)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:16(GaussianElement)
        1    0.000    0.000    0.000    0.000 {method 'normal' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 hyper.py:90(hyper)
        1    0.000    0.000    0.000    0.000 core.py:1329(make_mask_descr)
       37    0.000    0.000    0.000    0.000 function_base.py:19(_linspace_dispatcher)
        1    0.000    0.000    0.000    0.000 threading.py:838(Thread)
        1    0.000    0.000    0.000    0.000 exponential.py:10(Exponential)
       78    0.000    0.000    0.000    0.000 signal.py:21(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:1803(LoggerAdapter)
        1    0.000    0.000    0.000    0.000 tfqmr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:507(DifferentialEvolutionSolver)
        1    0.000    0.000    0.000    0.000 _interpolate.py:173(interp1d)
        1    0.000    0.000    0.000    0.000 _aliases.py:122(ones)
       20    0.000    0.000    0.000    0.000 {method 'isdisjoint' of 'set' objects}
        1    0.000    0.000    0.000    0.000 sets.py:1947(FiniteSet)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:254(_requires_builtin_wrapper)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1413(DummySpecies)
        1    0.000    0.000    0.000    0.000 bessel.py:1151(hn1)
       18    0.000    0.000    0.000    0.000 ops.py:312(__init__)
       37    0.000    0.000    0.000    0.000 numbers.py:1761(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 conv.py:961(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 queues.py:21(Queue)
        1    0.000    0.000    0.000    0.000 polygon.py:1420(RegularPolygon)
        1    0.000    0.000    0.000    0.000 comments.py:88(Comment)
        1    0.000    0.000    0.000    0.000 threading.py:389(notify_all)
        1    0.000    0.000    0.000    0.000 ast.py:70(_convert_num)
        1    0.000    0.000    0.000    0.000 __init__.py:869(ByteStorage)
        1    0.000    0.000    0.000    0.000 sparse.py:21(SparseRepMatrix)
        1    0.000    0.000    0.000    0.000 legend_handler.py:545(__init__)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:195(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 observer.py:1365(RecordingObserver)
        1    0.000    0.000    0.000    0.000 normal.py:12(Normal)
        1    0.000    0.000    0.000    0.000 _property_bag.py:10(PropertyBag)
        1    0.000    0.000    0.000    0.000 coroutines.py:1(<module>)
        4    0.000    0.000    0.000    0.000 __init__.py:798(__init__)
       74    0.000    0.000    0.000    0.000 util.py:245(no_escape_re_range_char)
        1    0.000    0.000    0.000    0.000 pycode.py:664(CmathPrinter)
        1    0.000    0.000    0.000    0.000 distance.py:1796(MetricInfo)
        1    0.000    0.000    0.000    0.000 relational.py:65(Relational)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2349(_mode_dispatch)
        1    0.000    0.000    0.000    0.000 _replacement.py:16(Replacement)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_adapter}
        1    0.000    0.000    0.000    0.000 comments.py:706(CommentedMap)
        1    0.000    0.000    0.000    0.000 axis.py:2253(YAxis)
        1    0.000    0.000    0.000    0.000 _bsr.py:24(_bsr_base)
        1    0.000    0.000    0.000    0.000 units.py:141(<dictcomp>)
        1    0.000    0.000    0.000    0.000 numbers.py:294(Integral)
        1    0.000    0.000    0.000    0.000 ideals.py:7(Ideal)
       12    0.000    0.000    0.000    0.000 doccer.py:139(extend_notes_in_docstring)
        3    0.000    0.000    0.000    0.000 arrayprint.py:1415(dtype_is_implied)
        2    0.000    0.000    0.000    0.000 _adapters.py:165(wrap_spec)
        1    0.000    0.000    0.000    0.000 datetime.py:573(timedelta)
       24    0.000    0.000    0.000    0.000 sympify.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 util.py:103(__init__)
       43    0.000    0.000    0.000    0.000 _compat_pickle.py:165(<genexpr>)
        1    0.000    0.000    0.000    0.000 _netcdf.py:98(netcdf_file)
        1    0.000    0.000    0.000    0.000 _array_api.py:659(_XPSphinxCapability)
        7    0.000    0.000    0.000    0.000 fractions.py:277(_operator_fallbacks)
        1    0.000    0.000    0.000    0.000 zipfile.py:1995(PyZipFile)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2461(_pdf_dispatch)
        6    0.000    0.000    0.000    0.000 _exceptions.py:17(_display_as_base)
        5    0.000    0.000    0.000    0.000 datetime.py:528(_check_time_fields)
        1    0.000    0.000    0.000    0.000 series.py:2180(ImplicitSeries)
       29    0.000    0.000    0.000    0.000 core.py:4695(recurse)
        7    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 conv.py:16(_ConvNd)
        1    0.000    0.000    0.000    0.000 pooling.py:16(_MaxPoolNd)
        1    0.000    0.000    0.000    0.000 index_tricks.py:310(AxisConcatenator)
       32    0.000    0.000    0.000    0.000 decorators.py:210(__init__)
        1    0.000    0.000    0.000    0.000 _builtins.py:114(_gen_torch_functional_registered_ops)
        1    0.000    0.000    0.000    0.000 distance.py:1984(<dictcomp>)
        1    0.000    0.000    0.000    0.000 tensor.py:812(__init__)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:24(BlockMatrix)
        1    0.000    0.000    0.000    0.000 maple.py:84(MapleCodePrinter)
        2    0.000    0.000    0.000    0.000 _parser.py:1006(addgroup)
        1    0.000    0.000    0.000    0.000 _code_flow.py:16(CodeFlow)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:994(wrap)
        5    0.000    0.000    0.000    0.000 ctx_base.py:458(memoize)
        1    0.000    0.000    0.000    0.000 _chandrupatla.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _configuration_override.py:16(ConfigurationOverride)
        6    0.000    0.000    0.000    0.000 basic.py:149(<genexpr>)
        1    0.000    0.000    0.000    0.000 plane.py:30(Plane)
        1    0.000    0.000    0.000    0.000 collections.py:1684(EllipseCollection)
        6    0.000    0.000    0.000    0.000 {built-in method math.frexp}
        6    0.000    0.000    0.000    0.000 six.py:131(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:221(<dictcomp>)
        2    0.000    0.000    0.000    0.000 _helpers.py:305(_compat_module_name)
        1    0.000    0.000    0.000    0.000 _covariance.py:11(Covariance)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1531(symbol)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3125(_constants)
        1    0.000    0.000    0.000    0.000 __init__.py:37(FoldedCase)
        1    0.000    0.000    0.000    0.000 client.py:239(HTTPResponse)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2342(_median_icdf)
        1    0.000    0.000    0.000    0.000 formatting.py:112(<dictcomp>)
       14    0.000    0.000    0.000    0.000 pathlib.py:94(join_parsed_parts)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3161(rv_discrete)
        1    0.000    0.000    0.000    0.000 pydoc.py:1159(TextDoc)
       11    0.000    0.000    0.000    0.000 legend_handler.py:59(__init__)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:18(ModuleHomomorphism)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:70(_apply)
        6    0.000    0.000    0.000    0.000 monkey.py:60(<genexpr>)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:172(<lambda>)
        1    0.000    0.000    0.000    0.000 _ops.py:597(__init__)
        1    0.000    0.000    0.000    0.000 comments.py:273(CommentedBase)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1037(_resolve_name)
        5    0.000    0.000    0.000    0.000 _new_distributions.py:339(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 process.py:399(__init__)
        4    0.000    0.000    0.000    0.000 kind.py:75(__new__)
        1    0.000    0.000    0.000    0.000 _factories.py:56(__init__)
        1    0.000    0.000    0.000    0.000 _kde.py:36(gaussian_kde)
       13    0.000    0.000    0.000    0.000 mixins.py:36(_inplace_binary_method)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1364(<listcomp>)
        1    0.000    0.000    0.000    0.000 _shgo.py:488(SHGO)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:70(Embedding)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:170(<lambda>)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:11(FisherSnedecor)
        1    0.000    0.000    0.000    0.000 compositedomain.py:9(CompositeDomain)
        1    0.000    0.000    0.000    0.000 _artifact_change.py:16(ArtifactChange)
        1    0.000    0.000    0.000    0.000 difflib.py:44(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 _resampling.py:2175(PermutationMethod)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:5(CanonicalConstraint)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:588(transpose)
        1    0.000    0.000    0.000    0.000 core.py:3039(Regex)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1572(ReciprocalTrigonometricFunction)
        1    0.000    0.000    0.000    0.000 ImagePalette.py:31(ImagePalette)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:262(__subclasshook__)
        1    0.000    0.000    0.000    0.000 modules.py:840(Submodule)
        1    0.000    0.000    0.000    0.000 linear.py:17(LinearPackedParams)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:583(PythonMPContext)
        1    0.000    0.000    0.000    0.000 inputs.py:3075(VaspInput)
        1    0.000    0.000    0.000    0.000 warnings.py:403(__init__)
        5    0.000    0.000    0.000    0.000 _basic.py:3031(<listcomp>)
        1    0.000    0.000    0.000    0.000 geo.py:349(MollweideTransform)
        1    0.000    0.000    0.000    0.000 _base.py:352(ProductNestedFixed)
        1    0.000    0.000    0.000    0.000 _csc.py:17(_csc_base)
        1    0.000    0.000    0.000    0.000 tensor.py:1695(TensorHead)
        6    0.000    0.000    0.000    0.000 _version.py:62(<listcomp>)
       20    0.000    0.000    0.000    0.000 _parser.py:160(__delitem__)
        1    0.000    0.000    0.000    0.000 _special_locations.py:15(SpecialLocations)
        1    0.000    0.000    0.000    0.000 indexed.py:362(IndexedBase)
        2    0.000    0.000    0.000    0.000 kind.py:266(register)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3172(_ndim_dispatcher)
        1    0.000    0.000    0.000    0.000 error_functions.py:1502(li)
        1    0.000    0.000    0.000    0.000 iterators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bz2.py:131(seekable)
        1    0.000    0.000    0.000    0.000 colors.py:81(__init__)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:23(PandasWrapper)
        1    0.000    0.000    0.000    0.000 modules.py:204(Module)
        1    0.000    0.000    0.000    0.000 __init__.py:1303(Manager)
        1    0.000    0.000    0.000    0.000 specifiers.py:44(BaseSpecifier)
       10    0.000    0.000    0.000    0.000 rcsetup.py:765(_validate_greaterequal0_lessthan1)
        1    0.000    0.000    0.000    0.000 sysconfig.py:456(_get_sysconfigdata_name)
        1    0.000    0.000    0.000    0.000 art3d.py:246(Line3DCollection)
        1    0.000    0.000    0.000    0.000 hyper.py:391(meijerg)
        1    0.000    0.000    0.000    0.000 fourier.py:127(FourierSeries)
        1    0.000    0.000    0.000    0.000 printer.py:235(Printer)
        1    0.000    0.000    0.000    0.000 fractionfield.py:9(FractionField)
        3    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 tokens.py:13(Token)
        1    0.000    0.000    0.000    0.000 structure.py:83(Neighbor)
        1    0.000    0.000    0.000    0.000 special.py:181(__new__)
        2    0.000    0.000    0.000    0.000 core.py:3613(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:386(_set_prec)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:9(Directory)
        6    0.000    0.000    0.000    0.000 libmpf.py:653(mpf_pos)
        1    0.000    0.000    0.000    0.000 upsampling.py:168(UpsamplingNearest2d)
        1    0.000    0.000    0.000    0.000 connection.py:114(_ConnectionBase)
        1    0.000    0.000    0.000    0.000 textplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rnn.py:334(LSTM)
        2    0.000    0.000    0.000    0.000 {method 'replace' of 'code' objects}
        1    0.000    0.000    0.000    0.000 abc.py:14(ResourceReader)
        1    0.000    0.000    0.000    0.000 loader.py:66(TestLoader)
        5    0.000    0.000    0.000    0.000 {built-in method posix.register_at_fork}
        1    0.000    0.000    0.000    0.000 sparse.py:49(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1407(<listcomp>)
        1    0.000    0.000    0.000    0.000 linear.py:67(Linear)
       13    0.000    0.000    0.000    0.000 _internal.py:920(npy_ctypes_check)
        1    0.000    0.000    0.000    0.000 realfield.py:54(RealField)
        1    0.000    0.000    0.000    0.000 message.py:972(MIMEPart)
        1    0.000    0.000    0.000    0.000 domainscalar.py:17(DomainScalar)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:12(SpectralNorm)
       21    0.000    0.000    0.000    0.000 _script.py:940(_make_fail)
       70    0.000    0.000    0.000    0.000 _jit_internal.py:1091(__getitem__)
        2    0.000    0.000    0.000    0.000 reprlib.py:12(decorating_function)
        1    0.000    0.000    0.000    0.000 __init__.py:1327(_TorchCompileInductorWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:33(Entry)
        2    0.000    0.000    0.000    0.000 _aliases.py:116(astype)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:46(LayoutBox)
        5    0.000    0.000    0.000    0.000 __init__.py:20(is_available)
        1    0.000    0.000    0.000    0.000 bandstructure.py:38(Kpoint)
        1    0.000    0.000    0.000    0.000 repmatrix.py:555(MutableRepMatrix)
        1    0.000    0.000    0.000    0.000 comments.py:467(CommentedSeq)
        1    0.000    0.000    0.000    0.000 core.py:1315(_replace_dtype_fields)
        8    0.000    0.000    0.000    0.000 __init__.py:463(_asdict)
        2    0.000    0.000    0.000    0.000 results.py:462(<listcomp>)
        1    0.000    0.000    0.000    0.000 rk.py:407(DOP853)
        1    0.000    0.000    0.000    0.000 core.py:80(__compat__)
        3    0.000    0.000    0.000    0.000 bz2.py:135(readable)
        1    0.000    0.000    0.000    0.000 linear.py:12(Linear)
        1    0.000    0.000    0.000    0.000 rootoftools.py:1101(RootSum)
        1    0.000    0.000    0.000    0.000 upsampling.py:213(UpsamplingBilinear2d)
        1    0.000    0.000    0.000    0.000 hierarchy.py:1074(ClusterNode)
        1    0.000    0.000    0.000    0.000 _resampling.py:2261(BootstrapMethod)
        1    0.000    0.000    0.000    0.000 outputs.py:5666(Waveder)
       12    0.000    0.000    0.000    0.000 rcsetup.py:424(validate_fontweight)
        1    0.000    0.000    0.000    0.000 serializer.py:33(Serializer)
        1    0.000    0.000    0.000    0.000 streams.py:140(Event)
        1    0.000    0.000    0.000    0.000 rmsprop.py:11(RMSprop)
        1    0.000    0.000    0.000    0.000 _testutils.py:138(_TestPythranFunc)
        1    0.000    0.000    0.000    0.000 factor_.py:665(FactorCache)
        1    0.000    0.000    0.000    0.000 outputs.py:4448(Oszicar)
        3    0.000    0.000    0.000    0.000 legend_handler.py:212(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:295(multivariate_normal_gen)
       11    0.000    0.000    0.000    0.000 results.py:272(__iter__)
        1    0.000    0.000    0.000    0.000 tags.py:42(Tag)
       16    0.000    0.000    0.000    0.000 _pep440.py:301(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4981(invgauss_gen)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:14(GMPYIntegerRing)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12328(rel_breitwigner_gen)
       23    0.000    0.000    0.000    0.000 _support_alternative_backends.py:35(name)
        1    0.000    0.000    0.000    0.000 numbers.py:4083(ImaginaryUnit)
        3    0.000    0.000    0.000    0.000 _header_value_parser.py:876(__new__)
        1    0.000    0.000    0.000    0.000 mvn.py:1(<module>)
       17    0.000    0.000    0.000    0.000 __init__.py:190(change_key)
        1    0.000    0.000    0.000    0.000 triangulation.py:4(Triangulation)
        1    0.000    0.000    0.000    0.000 _dia.py:20(_dia_base)
        4    0.000    0.000    0.000    0.000 core.py:5236(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 single.py:1436(HomogeneousCoeffSubsDepDivIndep)
       10    0.000    0.000    0.000    0.000 _policybase.py:104(<genexpr>)
       41    0.000    0.000    0.000    0.000 numbers.py:438(class_key)
        1    0.000    0.000    0.000    0.000 _infra.py:309(DiagnosticOptions)
        1    0.000    0.000    0.000    0.000 Image.py:3915(Exif)
        1    0.000    0.000    0.000    0.000 pydoc.py:525(__init__)
        1    0.000    0.000    0.000    0.000 functions.py:3(SpecialFunctions)
        1    0.000    0.000    0.000    0.000 summations.py:42(Sum)
        1    0.000    0.000    0.000    0.000 core.py:6540(MaskedConstant)
        1    0.000    0.000    0.000    0.000 _binary.py:1(<module>)
        2    0.000    0.000    0.000    0.000 densebasic.py:333(_rec_strip)
        1    0.000    0.000    0.000    0.000 std.py:67(TRLock)
        1    0.000    0.000    0.000    0.000 profiler_util.py:352(FormattedTimesMixin)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1052(TimerBase)
        1    0.000    0.000    0.000    0.000 binrel.py:15(BinaryRelation)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1105(EvaluateFalseTransformer)
        1    0.000    0.000    0.000    0.000 complexes.py:446(Abs)
        1    0.000    0.000    0.000    0.000 fields.py:103(FracField)
        5    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:176(<lambda>)
        1    0.000    0.000    0.000    0.000 weight_norm.py:11(WeightNorm)
        1    0.000    0.000    0.000    0.000 products.py:17(Product)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2479(_logpmf_dispatch)
        1    0.000    0.000    0.000    0.000 conv_fused.py:25(_ConvBnNd)
       15    0.000    0.000    0.000    0.000 arrayprint.py:993(<genexpr>)
       26    0.000    0.000    0.000    0.000 core.py:4415(<genexpr>)
        1    0.000    0.000    0.000    0.000 numpy.py:503(<dictcomp>)
        1    0.000    0.000    0.000    0.000 conv.py:232(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 _ltisys.py:879(ZerosPolesGain)
        1    0.000    0.000    0.000    0.000 data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 request.py:1694(URLopener)
        1    0.000    0.000    0.000    0.000 series.py:1861(SurfaceOver2DRangeSeries)
        1    0.000    0.000    0.000    0.000 free_groups.py:114(FreeGroup)
        1    0.000    0.000    0.000    0.000 tight_binding_hamiltonian.py:18(TBHamiltonian)
        1    0.000    0.000    0.000    0.000 base_events.py:274(Server)
        7    0.000    0.000    0.000    0.000 {method 'deleter' of 'property' objects}
       18    0.000    0.000    0.000    0.000 __init__.py:788(__init__)
        1    0.000    0.000    0.000    0.000 fancysets.py:291(ImageSet)
        1    0.000    0.000    0.000    0.000 linear_relu.py:9(LinearReLU)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1881(ComplexInterval)
        1    0.000    0.000    0.000    0.000 numbers.py:59(carmichael)
        1    0.000    0.000    0.000    0.000 rnn.py:1000(LSTMCell)
        2    0.000    0.000    0.000    0.000 typing.py:3089(__init__)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:145(__neg__)
        4    0.000    0.000    0.000    0.000 libmpf.py:1313(from_str)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:117(<listcomp>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:179(OffsetBox)
       24    0.000    0.000    0.000    0.000 expr.py:2053(as_base_exp)
        1    0.000    0.000    0.000    0.000 _imp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parse.py:143(_NetlocResultMixinBase)
        8    0.000    0.000    0.000    0.000 relativedelta.py:13(<genexpr>)
        1    0.000    0.000    0.000    0.000 pycode.py:87(<listcomp>)
        1    0.000    0.000    0.000    0.000 csv.py:80(DictReader)
        1    0.000    0.000    0.000    0.000 entity.py:71(GeometryEntity)
        1    0.000    0.000    0.000    0.000 patches.py:1824(_simpleprint_styles)
        1    0.000    0.000    0.000    0.000 conv.py:617(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 transforms.py:41(Transform)
        1    0.000    0.000    0.000    0.000 backend_tools.py:394(ToolQuit)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:790(items)
        1    0.000    0.000    0.000    0.000 types.py:39(Storage)
        1    0.000    0.000    0.000    0.000 ticker.py:468(ScalarFormatter)
        1    0.000    0.000    0.000    0.000 report.py:3(ReportBase)
        1    0.000    0.000    0.000    0.000 numpy.py:480(<dictcomp>)
        5    0.000    0.000    0.000    0.000 decorator.py:152(<listcomp>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:311(get_default_scheme)
        1    0.000    0.000    0.000    0.000 __init__.py:236(SymInt)
        1    0.000    0.000    0.000    0.000 fontconfig_pattern.py:27(FontconfigPatternParser)
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:808(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rnn.py:135(_LSTMSingleLayer)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:21(Expression)
        1    0.000    0.000    0.000    0.000 transforms.py:1098(StackTransform)
        1    0.000    0.000    0.000    0.000 _trace.py:1202(TopLevelTracedModule)
       10    0.000    0.000    0.000    0.000 bz2.py:121(closed)
        1    0.000    0.000    0.000    0.000 join.py:43(Joinable)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:151(ivmpc)
        6    0.000    0.000    0.000    0.000 utils.py:51(_has_surrogates)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:382(PngStream)
        4    0.000    0.000    0.000    0.000 serialization.py:90(register_package)
        1    0.000    0.000    0.000    0.000 bz2.py:26(BZ2File)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:12(GMPYRationalField)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:996(ReciprocalHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 _builtins.py:120(<setcomp>)
        1    0.000    0.000    0.000    0.000 gammazeta.py:394(bernoulli_size)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:73(UnivariateSpline)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:151(<listcomp>)
        3    0.000    0.000    0.000    0.000 _policybase.py:281(_sanitize_header)
        1    0.000    0.000    0.000    0.000 sequences.py:611(SeqFormula)
        1    0.000    0.000    0.000    0.000 error_functions.py:1828(Si)
        2    0.000    0.000    0.000    0.000 _aliases.py:51(empty_like)
       31    0.000    0.000    0.000    0.000 singleton.py:192(<lambda>)
        1    0.000    0.000    0.000    0.000 factorials.py:36(factorial)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        1    0.000    0.000    0.000    0.000 threading.py:236(__init__)
        1    0.000    0.000    0.000    0.000 tz.py:386(tzfile)
        2    0.000    0.000    0.000    0.000 _functools.py:6(method_cache)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:38(ivmpf)
        1    0.000    0.000    0.000    0.000 ordinals.py:273(__new__)
        1    0.000    0.000    0.000    0.000 logic.py:221(Logic)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:712(__eq__)
        1    0.000    0.000    0.000    0.000 {built-in method math.exp}
        1    0.000    0.000    0.000    0.000 _text_layout.py:1(<module>)
       23    0.000    0.000    0.000    0.000 overrides.py:173(array_function_from_dispatcher)
        1    0.000    0.000    0.000    0.000 observer.py:383(MinMaxObserver)
        1    0.000    0.000    0.000    0.000 tag.py:20(Tag)
        1    0.000    0.000    0.000    0.000 Periodicity_System.py:12(PeriodicityPhysicsSystem)
        1    0.000    0.000    0.000    0.000 group_constructs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:8(OneHotCategorical)
       15    0.000    0.000    0.000    0.000 libelefun.py:106(def_mpf_constant)
        1    0.000    0.000    0.000    0.000 _covariance.py:463(CovViaPrecision)
        1    0.000    0.000    0.000    0.000 byteordercodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 context.py:99(compose_two)
        1    0.000    0.000    0.000    0.000 outputs.py:177(KpointOptProps)
        3    0.000    0.000    0.000    0.000 rcsetup.py:459(_validate_mathtext_fallback)
        1    0.000    0.000    0.000    0.000 _inspect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 coord.py:362(Simplex)
        1    0.000    0.000    0.000    0.000 _ltisys.py:299(dlti)
        1    0.000    0.000    0.000    0.000 wannier90.py:24(Unk)
       15    0.000    0.000    0.000    0.000 serialization.py:59(<genexpr>)
        1    0.000    0.000    0.000    0.000 six.py:236(create_module)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:12(ExpressionRawDomain)
        1    0.000    0.000    0.000    0.000 <frozen genericpath>:39(isdir)
        1    0.000    0.000    0.000    0.000 observer.py:124(ObserverBase)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:75(NumExprPrinter)
        1    0.000    0.000    0.000    0.000 rnn.py:261(LSTM)
        1    0.000    0.000    0.000    0.000 pooling.py:564(AvgPool2d)
        5    0.000    0.000    0.000    0.000 datapipe.py:265(register_datapipe_as_function)
        1    0.000    0.000    0.000    0.000 tempfile.py:840(TemporaryDirectory)
       25    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 _helpers.py:487(_AutoJITWrapper)
        1    0.000    0.000    0.000    0.000 adadelta.py:12(Adadelta)
        1    0.000    0.000    0.000    0.000 named_groups.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:348(SciPyPrinter)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:25(__init__)
        2    0.000    0.000    0.000    0.000 six.py:119(_resolve)
        1    0.000    0.000    0.000    0.000 selectors.py:80(BaseSelector)
       11    0.000    0.000    0.000    0.000 ctx_iv.py:293(__new__)
        1    0.000    0.000    0.000    0.000 interval_arithmetic.py:42(interval)
        5    0.000    0.000    0.000    0.000 _compression.py:12(_check_not_closed)
        1    0.000    0.000    0.000    0.000 quasirandom.py:5(SobolEngine)
        6    0.000    0.000    0.000    0.000 _parser.py:286(seek)
        1    0.000    0.000    0.000    0.000 fields.py:292(FracElement)
        1    0.000    0.000    0.000    0.000 constructor.py:348(SafeConstructor)
        1    0.000    0.000    0.000    0.000 mathml.py:84(MathMLContentPrinter)
        3    0.000    0.000    0.000    0.000 six.py:85(_import_module)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:337(_ExpmPadeHelper)
        1    0.000    0.000    0.000    0.000 num.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11322(wrapcauchy_gen)
        1    0.000    0.000    0.000    0.000 _censored_data.py:60(CensoredData)
        1    0.000    0.000    0.000    0.000 quiver.py:904(Barbs)
        1    0.000    0.000    0.000    0.000 rnn.py:1159(LSTMCell)
        1    0.000    0.000    0.000    0.000 integers.py:496(frac)
       15    0.000    0.000    0.000    0.000 math2.py:27(_mathfun_real)
        1    0.000    0.000    0.000    0.000 ast.py:65(_raise_malformed_node)
        1    0.000    0.000    0.000    0.000 tz.py:201(tzlocal)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1612(<dictcomp>)
       22    0.000    0.000    0.000    0.000 reductions.py:123(_torch_grad_reduce)
        2    0.000    0.000    0.000    0.000 __init__.py:1646(addHandler)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1897(wishart_gen)
        1    0.000    0.000    0.000    0.000 decorator.py:65(FunctionMaker)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:576(unused)
        1    0.000    0.000    0.000    0.000 __init__.py:545(Stack)
        1    0.000    0.000    0.000    0.000 text.py:1326(_AnnotationBase)
        1    0.000    0.000    0.000    0.000 __init__.py:165(<listcomp>)
        1    0.000    0.000    0.000    0.000 containers.py:219(Dict)
        8    0.000    0.000    0.000    0.000 version.py:207(<genexpr>)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:327(register_op_impl)
        6    0.000    0.000    0.000    0.000 deprecation.py:81(_deprecated)
        1    0.000    0.000    0.000    0.000 contour.py:1388(QuadContourSet)
        3    0.000    0.000    0.000    0.000 message.py:150(__init__)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:64(_apply_params)
        1    0.000    0.000    0.000    0.000 backend_tools.py:40(ToolBase)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:747(_copy_to_script_wrapper)
        1    0.000    0.000    0.000    0.000 integrals.py:35(Integral)
        1    0.000    0.000    0.000    0.000 conv_relu.py:19(ConvReLU1d)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1761(<genexpr>)
        3    0.000    0.000    0.000    0.000 __init__.py:42(__init__)
        2    0.000    0.000    0.000    0.000 reprlib.py:38(__init__)
        5    0.000    0.000    0.000    0.000 typing.py:2191(runtime_checkable)
        1    0.000    0.000    0.000    0.000 tz.py:1167(_tzicalvtz)
        1    0.000    0.000    0.000    0.000 _aliases.py:536(floor)
        1    0.000    0.000    0.000    0.000 colorbar.py:262(_ColorbarAutoMinorLocator)
        1    0.000    0.000    0.000    0.000 __init__.py:37(cuFFTPlanCache)
        1    0.000    0.000    0.000    0.000 _netcdf.py:811(netcdf_variable)
        1    0.000    0.000    0.000    0.000 fancysets.py:519(Range)
        1    0.000    0.000    0.000    0.000 computed_entries.py:47(EnergyAdjustment)
        1    0.000    0.000    0.000    0.000 _sources.py:111(ParsedDef)
        1    0.000    0.000    0.000    0.000 __init__.py:222(__exit__)
        4    0.000    0.000    0.000    0.000 assumptions.py:484(generator)
        1    0.000    0.000    0.000    0.000 rational.py:24(mpq)
        1    0.000    0.000    0.000    0.000 quopri.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:2771(Zero)
        1    0.000    0.000    0.000    0.000 profiler.py:59(profile)
        1    0.000    0.000    0.000    0.000 _kdtree.py:287(node)
        1    0.000    0.000    0.000    0.000 __init__.py:889(FloatStorage)
        1    0.000    0.000    0.000    0.000 pycode.py:707(<listcomp>)
       17    0.000    0.000    0.000    0.000 ctx_fp.py:28(<lambda>)
        1    0.000    0.000    0.000    0.000 _ops.py:238(OpOverload)
        1    0.000    0.000    0.000    0.000 bessel.py:438(besseli)
        1    0.000    0.000    0.000    0.000 _globals.py:17(_InternalGlobals)
        1    0.000    0.000    0.000    0.000 beta.py:11(Beta)
        1    0.000    0.000    0.000    0.000 arffread.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matplotlib.py:43(MatplotlibBackend)
        1    0.000    0.000    0.000    0.000 _ltisys.py:46(LinearTimeInvariant)
        1    0.000    0.000    0.000    0.000 sets.py:1319(Union)
        1    0.000    0.000    0.000    0.000 {built-in method math.log2}
        1    0.000    0.000    0.000    0.000 specfun.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unix_events.py:57(_UnixSelectorEventLoop)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:236(<lambda>)
        1    0.000    0.000    0.000    0.000 common.py:32(VolumetricData)
        6    0.000    0.000    0.000    0.000 __init__.py:784(__new__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1879(validation_policy)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:100(split)
        1    0.000    0.000    0.000    0.000 __init__.py:1067(StreamHandler)
        1    0.000    0.000    0.000    0.000 _index.py:25(IndexMixin)
        1    0.000    0.000    0.000    0.000 error.py:35(HTTPError)
        1    0.000    0.000    0.000    0.000 sgd.py:10(SGD)
        2    0.000    0.000    0.000    0.000 __init__.py:2356(_backend_module_name)
        1    0.000    0.000    0.000    0.000 collections.py:1464(EventCollection)
        1    0.000    0.000    0.000    0.000 _base.py:325(Future)
        1    0.000    0.000    0.000    0.000 cnf.py:270(CNF)
        1    0.000    0.000    0.000    0.000 overrides.py:1786(TorchFunctionMode)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:22(PolyQuintic)
        1    0.000    0.000    0.000    0.000 transforms.py:2266(CompositeGenericTransform)
        1    0.000    0.000    0.000    0.000 tensor.py:4488(TensorElement)
        1    0.000    0.000    0.000    0.000 zipfile.py:344(ZipInfo)
        1    0.000    0.000    0.000    0.000 numbers.py:762(harmonic)
        6    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 sets.py:1496(Intersection)
       20    0.000    0.000    0.000    0.000 core.py:3915(recurse)
        1    0.000    0.000    0.000    0.000 gamma.py:14(Gamma)
        1    0.000    0.000    0.000    0.000 __init__.py:637(RcParams)
        1    0.000    0.000    0.000    0.000 transforms.py:1080(LockableBbox)
       13    0.000    0.000    0.000    0.000 utils.py:34(exposed_in)
       15    0.000    0.000    0.000    0.000 arrayprint.py:994(<genexpr>)
        1    0.000    0.000    0.000    0.000 factor_.py:700(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1824(dpareto_lognorm_gen)
        1    0.000    0.000    0.000    0.000 numbers.py:3602(Exp1)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:553(_Parameter)
        1    0.000    0.000    0.000    0.000 pathlib.py:971(absolute)
        1    0.000    0.000    0.000    0.000 numpy.py:34(<dictcomp>)
        1    0.000    0.000    0.000    0.000 widgets.py:1893(RectangleSelector)
        1    0.000    0.000    0.000    0.000 subprocess.py:469(CompletedProcess)
        1    0.000    0.000    0.000    0.000 series.py:989(Line2DBaseSeries)
       25    0.000    0.000    0.000    0.000 symbolic_helper.py:664(_block_list_in_opset)
        1    0.000    0.000    0.000    0.000 constructor.py:932(RoundTripConstructor)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2301(_entropy_dispatch)
        1    0.000    0.000    0.000    0.000 zipfile.py:2290(Path)
        1    0.000    0.000    0.000    0.000 tz.py:1545(__init__)
        1    0.000    0.000    0.000    0.000 annotations.py:41(EvalEnv)
        1    0.000    0.000    0.000    0.000 special.py:213(OneMatrix)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:10(BaseSubprocessTransport)
        1    0.000    0.000    0.000    0.000 error_functions.py:1092(Ei)
        1    0.000    0.000    0.000    0.000 spawn.py:39(ProcessExitedException)
       35    0.000    0.000    0.000    0.000 core.py:1967(recurse)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:172(_ConfigExpander)
        1    0.000    0.000    0.000    0.000 _aliases.py:665(finfo)
        1    0.000    0.000    0.000    0.000 curve.py:22(Curve)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3460(_Backend)
       13    0.000    0.000    0.000    0.000 _deprecation.py:8(deprecated)
        1    0.000    0.000    0.000    0.000 glob_group.py:7(GlobGroup)
        1    0.000    0.000    0.000    0.000 ElementTree.py:125(Element)
        1    0.000    0.000    0.000    0.000 _infra.py:266(RuleCollection)
        1    0.000    0.000    0.000    0.000 typing.py:1258(__mro_entries__)
       20    0.000    0.000    0.000    0.000 inverselaplace.py:17(__init__)
        1    0.000    0.000    0.000    0.000 _aliases.py:24(arange)
        1    0.000    0.000    0.000    0.000 extensions.py:219(MonogenicFiniteExtension)
        1    0.000    0.000    0.000    0.000 laplace.py:9(Laplace)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10074(truncexpon_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7648(nakagami_gen)
        2    0.000    0.000    0.000    0.000 {method 'difference_update' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _struct.unpack}
        1    0.000    0.000    0.000    0.000 version.py:280(LooseVersion)
        1    0.000    0.000    0.000    0.000 para4tb.py:12(ParaTB)
        1    0.000    0.000    0.000    0.000 __init__.py:1792(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:108(LinearAlgebraMethods)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:6(DisjointSet)
        1    0.000    0.000    0.000    0.000 constructor.py:664(Constructor)
        1    0.000    0.000    0.000    0.000 binary.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 numbers.py:1350(genocchi)
        1    0.000    0.000    0.000    0.000 kind.py:64(__new__)
        1    0.000    0.000    0.000    0.000 biasedurn.py:1(<module>)
        2    0.000    0.000    0.000    0.000 matfuncs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyhedron.py:11(Polyhedron)
        1    0.000    0.000    0.000    0.000 tensor.py:792(_TensorManager)
        1    0.000    0.000    0.000    0.000 numbers.py:2231(AlgebraicNumber)
        1    0.000    0.000    0.000    0.000 core.py:51(InputFile)
        1    0.000    0.000    0.000    0.000 unary.py:75(<listcomp>)
        1    0.000    0.000    0.000    0.000 pooling.py:643(AvgPool3d)
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:841(<genexpr>)
        1    0.000    0.000    0.000    0.000 exprtools.py:288(Factors)
        1    0.000    0.000    0.000    0.000 cauchy.py:12(Cauchy)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1599(<listcomp>)
        1    0.000    0.000    0.000    0.000 dfm.py:18(DFM_dummy)
        1    0.000    0.000    0.000    0.000 util.py:15(__config_flags)
        2    0.000    0.000    0.000    0.000 polyclasses.py:155(new)
        1    0.000    0.000    0.000    0.000 composer.py:31(Composer)
        1    0.000    0.000    0.000    0.000 __init__.py:17(Future)
        1    0.000    0.000    0.000    0.000 __init__.py:83(OptEinsumModule)
        1    0.000    0.000    0.000    0.000 transforms.py:1702(__init__)
        1    0.000    0.000    0.000    0.000 representer.py:492(RoundTripRepresenter)
       21    0.000    0.000    0.000    0.000 _codata.py:2121(_check_obsolete)
        1    0.000    0.000    0.000    0.000 indexed.py:124(Indexed)
        1    0.000    0.000    0.000    0.000 _ccallback.py:26(LowLevelCallable)
        1    0.000    0.000    0.000    0.000 inference.py:252(KB)
        1    0.000    0.000    0.000    0.000 heuristicgcd.py:1(<module>)
        8    0.000    0.000    0.000    0.000 core.py:5113(stopOn)
        1    0.000    0.000    0.000    0.000 proj3d.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tensor.py:815(_comm_init)
       12    0.000    0.000    0.000    0.000 {method 'islower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 functional_modules.py:82(FXFloatFunctional)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:190(_Domain)
        1    0.000    0.000    0.000    0.000 cpp_backtrace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 operator_support.py:27(OperatorSupportBase)
        1    0.000    0.000    0.000    0.000 __init__.py:873(Handler)
        1    0.000    0.000    0.000    0.000 _interpolate.py:816(PPoly)
        1    0.000    0.000    0.000    0.000 transforms.py:2503(BboxTransformTo)
        1    0.000    0.000    0.000    0.000 conv.py:588(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 legend_handler.py:436(__init__)
        1    0.000    0.000    0.000    0.000 matexpr.py:666(MatrixSymbol)
        1    0.000    0.000    0.000    0.000 adagrad.py:12(Adagrad)
        1    0.000    0.000    0.000    0.000 animation.py:895(Animation)
        1    0.000    0.000    0.000    0.000 conv.py:277(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 wrappers.py:78(elementwise_type_promotion_wrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:331(_Stream)
       51    0.000    0.000    0.000    0.000 iterables.py:861(key)
        1    0.000    0.000    0.000    0.000 log_normal.py:8(LogNormal)
       22    0.000    0.000    0.000    0.000 symbol.py:799(<genexpr>)
        5    0.000    0.000    0.000    0.000 sets.py:2010(__iter__)
        1    0.000    0.000    0.000    0.000 tight_bbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 operator_support.py:177(OpSupports)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2498(_pmf_dispatch)
        1    0.000    0.000    0.000    0.000 poisson.py:10(Poisson)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:362(__subclasshook__)
        3    0.000    0.000    0.000    0.000 __init__.py:590(_discover_resolvers)
        2    0.000    0.000    0.000    0.000 constraints.py:366(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11392(gennorm_gen)
        1    0.000    0.000    0.000    0.000 function.py:674(NestedIOFunction)
        1    0.000    0.000    0.000    0.000 polar.py:144(InvertedPolarTransform)
        1    0.000    0.000    0.000    0.000 adamw.py:12(AdamW)
        1    0.000    0.000    0.000    0.000 __init__.py:283(SymFloat)
        9    0.000    0.000    0.000    0.000 timeutils.py:54(decorator)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:13(PythonIntegerRing)
        1    0.000    0.000    0.000    0.000 backend_tools.py:800(ToolZoom)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:129(bernoulli_gen)
        1    0.000    0.000    0.000    0.000 _data.py:168(_minmax_mixin)
        1    0.000    0.000    0.000    0.000 main.py:56(TestProgram)
        1    0.000    0.000    0.000    0.000 six.py:498(Module_six_moves_urllib)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:123(<listcomp>)
        1    0.000    0.000    0.000    0.000 proxy.py:455(Attribute)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:18(profile)
       21    0.000    0.000    0.000    0.000 multiarray.py:153(concatenate)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8859(powerlognorm_gen)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:30(binom_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:273(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _infra.py:55(Rule)
        1    0.000    0.000    0.000    0.000 tarfile.py:328(_Stream)
        1    0.000    0.000    0.000    0.000 dop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 batchnorm.py:552(SyncBatchNorm)
        1    0.000    0.000    0.000    0.000 random.py:235(_randbelow_with_getrandbits)
        1    0.000    0.000    0.000    0.000 context.py:206(ExceptionTrap)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:282(nbinom_gen)
        4    0.000    0.000    0.000    0.000 core.py:3536(parseImpl)
        2    0.000    0.000    0.000    0.000 constraints.py:126(__call__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2578(invwishart_gen)
        1    0.000    0.000    0.000    0.000 transforms.py:1827(Affine2D)
        1    0.000    0.000    0.000    0.000 reduction.py:33(ForkingPickler)
       14    0.000    0.000    0.000    0.000 mock.py:1936(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10191(truncnorm_gen)
        1    0.000    0.000    0.000    0.000 utilities.py:8(__init__)
        1    0.000    0.000    0.000    0.000 bandstructure.py:157(BandStructure)
        1    0.000    0.000    0.000    0.000 _bunch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:47(Resolvent)
        1    0.000    0.000    0.000    0.000 internal.py:30(_InternalRPCPickler)
        1    0.000    0.000    0.000    0.000 cnf.py:15(Literal)
        3    0.000    0.000    0.000    0.000 __init__.py:7(is_available)
        1    0.000    0.000    0.000    0.000 __init__.py:855(_CudaLegacyStorage)
        1    0.000    0.000    0.000    0.000 __init__.py:1432(Logger)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:11(EmbeddingPackedParams)
        1    0.000    0.000    0.000    0.000 functional_modules.py:9(FloatFunctional)
       22    0.000    0.000    0.000    0.000 core.py:3595(<genexpr>)
        1    0.000    0.000    0.000    0.000 radam.py:13(RAdam)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1257(burr12_gen)
        8    0.000    0.000    0.000    0.000 {method 'removeprefix' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _ni_support.py:1(<module>)
        3    0.000    0.000    0.000    0.000 mock.py:298(__getattr__)
        1    0.000    0.000    0.000    0.000 __init__.py:1009(CharStorage)
        1    0.000    0.000    0.000    0.000 core.py:109(InputSet)
        5    0.000    0.000    0.000    0.000 rszeta.py:54(__init__)
       29    0.000    0.000    0.000    0.000 {method 'groupdict' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 bessel.py:282(bessely)
       18    0.000    0.000    0.000    0.000 multiarray.py:1080(copyto)
        2    0.000    0.000    0.000    0.000 decorator.py:319(wrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:1039(ComplexDoubleStorage)
        1    0.000    0.000    0.000    0.000 __init__.py:909(LongStorage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3046(genlogistic_gen)
        1    0.000    0.000    0.000    0.000 boolalg.py:483(BooleanFunction)
        1    0.000    0.000    0.000    0.000 error_functions.py:2210(Chi)
        1    0.000    0.000    0.000    0.000 primes.py:41(PrimeIdeal)
        1    0.000    0.000    0.000    0.000 hyper.py:796(HyperRep)
        1    0.000    0.000    0.000    0.000 art3d.py:557(Poly3DCollection)
        1    0.000    0.000    0.000    0.000 gzip.py:121(GzipFile)
        1    0.000    0.000    0.000    0.000 _interpolate.py:151(_check_broadcast_up_to)
        1    0.000    0.000    0.000    0.000 linear_fused.py:13(LinearBn1d)
        2    0.000    0.000    0.000    0.000 numerictypes.py:229(obj2sctype)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3621(DiscreteDistribution)
        9    0.000    0.000    0.000    0.000 core.py:4246(<genexpr>)
        1    0.000    0.000    0.000    0.000 pathlib.py:128(<setcomp>)
        1    0.000    0.000    0.000    0.000 gridspec.py:26(GridSpecBase)
        1    0.000    0.000    0.000    0.000 case.py:243(_AssertRaisesContext)
        2    0.000    0.000    0.000    0.000 repmatrix.py:585(_fromrep)
        1    0.000    0.000    0.000    0.000 polyoptions.py:18(Option)
        1    0.000    0.000    0.000    0.000 __init__.py:71(MkldnnModule)
        1    0.000    0.000    0.000    0.000 __init__.py:219(__enter__)
        1    0.000    0.000    0.000    0.000 {built-in method posix.confstr}
        1    0.000    0.000    0.000    0.000 activation.py:1249(PReLU)
        2    0.000    0.000    0.000    0.000 {built-in method posix.unsetenv}
        1    0.000    0.000    0.000    0.000 __init__.py:949(DoubleStorage)
        6    0.000    0.000    0.000    0.000 signal.py:49(decorator)
        1    0.000    0.000    0.000    0.000 beta_functions.py:20(beta)
        1    0.000    0.000    0.000    0.000 adamax.py:12(Adamax)
        1    0.000    0.000    0.000    0.000 units.py:494(ArrayWithUnit)
        1    0.000    0.000    0.000    0.000 traceback.py:636(TracebackException)
        1    0.000    0.000    0.000    0.000 function.py:1941(Lambda)
        1    0.000    0.000    0.000    0.000 bdist.py:37(ListCompat)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:41(<setcomp>)
        1    0.000    0.000    0.000    0.000 taskgroups.py:12(TaskGroup)
        1    0.000    0.000    0.000    0.000 functional_modules.py:129(QFunctional)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:36(IntFormat)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:290(FusedMovingAvgObsFakeQuantize)
        1    0.000    0.000    0.000    0.000 __init__.py:969(HalfStorage)
        1    0.000    0.000    0.000    0.000 rk.py:74(RungeKutta)
        3    0.000    0.000    0.000    0.000 arrayprint.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:12(add_docstr_all)
        1    0.000    0.000    0.000    0.000 numpy.py:345(<dictcomp>)
        1    0.000    0.000    0.000    0.000 textpath.py:336(TextPath)
        1    0.000    0.000    0.000    0.000 function.py:2101(Subs)
        1    0.000    0.000    0.000    0.000 normalization.py:5(LayerNorm)
        1    0.000    0.000    0.000    0.000 series.py:1978(ParametricSurfaceSeries)
        4    0.000    0.000    0.000    0.000 integerring.py:54(__eq__)
        3    0.000    0.000    0.000    0.000 message.py:330(set_payload)
        1    0.000    0.000    0.000    0.000 calendar.py:71(_localized_day)
        1    0.000    0.000    0.000    0.000 __init__.py:1069(QInt8Storage)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6257(vonmises_fisher_gen)
        1    0.000    0.000    0.000    0.000 _nonlin.py:615(LowRankMatrix)
        1    0.000    0.000    0.000    0.000 monomials.py:512(Monomial)
        2    0.000    0.000    0.000    0.000 math2.py:53(_mathfun_n)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1595(chi2_gen)
        1    0.000    0.000    0.000    0.000 netcdf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 internal.py:41(__init__)
        1    0.000    0.000    0.000    0.000 _log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 depends.py:20(Require)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:157(QConfigMapping)
        1    0.000    0.000    0.000    0.000 __init__.py:979(LongStorage)
        1    0.000    0.000    0.000    0.000 transforms.py:1613(TransformWrapper)
        1    0.000    0.000    0.000    0.000 outputs.py:4596(Xdatcar)
        1    0.000    0.000    0.000    0.000 modules.py:698(PowerBasis)
       39    0.000    0.000    0.000    0.000 {built-in method _ctypes.sizeof}
        1    0.000    0.000    0.000    0.000 colors.py:1238(SymLogNorm)
        1    0.000    0.000    0.000    0.000 numbers.py:1204(catalan)
        3    0.000    0.000    0.000    0.000 __init__.py:753(path)
       11    0.000    0.000    0.000    0.000 optimizer.py:28(_use_grad_for_differentiable)
        1    0.000    0.000    0.000    0.000 containers.py:23(Tuple)
        1    0.000    0.000    0.000    0.000 __init__.py:439(LibraryLoader)
        1    0.000    0.000    0.000    0.000 pooling.py:874(_LPPoolNd)
        1    0.000    0.000    0.000    0.000 numbers.py:1490(andre)
        1    0.000    0.000    0.000    0.000 threading.py:822(_maintain_shutdown_locks)
        1    0.000    0.000    0.000    0.000 axis3d.py:470(XAxis)
        1    0.000    0.000    0.000    0.000 signaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 activation.py:14(ReLU6)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:287(CubicTriInterpolator)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:15(Ynm)
        1    0.000    0.000    0.000    0.000 pc_groups.py:42(Collector)
        1    0.000    0.000    0.000    0.000 glob.py:31(iglob)
        1    0.000    0.000    0.000    0.000 dok.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:531(Formatter)
        1    0.000    0.000    0.000    0.000 tensor.py:1392(TensorSymmetry)
        1    0.000    0.000    0.000    0.000 error_functions.py:674(erf2)
        1    0.000    0.000    0.000    0.000 _infra.py:180(Stack)
        1    0.000    0.000    0.000    0.000 typing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cubic.py:160(PchipInterpolator)
        1    0.000    0.000    0.000    0.000 function.py:155(FunctionClass)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:54(_get_platform_and_machine)
        1    0.000    0.000    0.000    0.000 Orbit_spd_without_spin.py:15(orbit_spd_without_spin)
        9    0.000    0.000    0.000    0.000 _util.py:949(_rename_parameter)
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 filters.py:1(<module>)
        1    0.000    0.000    0.000    0.000 series.py:1289(LineOver1DRangeSeries)
        1    0.000    0.000    0.000    0.000 request.py:2139(FancyURLopener)
        1    0.000    0.000    0.000    0.000 linear_relu.py:12(LinearReLU)
        1    0.000    0.000    0.000    0.000 _iotools.py:229(NameValidator)
        1    0.000    0.000    0.000    0.000 sequences.py:962(SeqExprOp)
        1    0.000    0.000    0.000    0.000 __init__.py:999(ShortStorage)
        1    0.000    0.000    0.000    0.000 assume.py:358(UndefinedPredicate)
        1    0.000    0.000    0.000    0.000 activation.py:175(Hardtanh)
        1    0.000    0.000    0.000    0.000 graphs.py:40(CUDAGraph)
        1    0.000    0.000    0.000    0.000 linear.py:11(Linear)
        1    0.000    0.000    0.000    0.000 __init__.py:385(check_sparse_tensor_invariants)
        5    0.000    0.000    0.000    0.000 cache.py:155(cached_property)
        1    0.000    0.000    0.000    0.000 __init__.py:918(PathDistribution)
        4    0.000    0.000    0.000    0.000 libmpf.py:574(mpf_cmp)
        1    0.000    0.000    0.000    0.000 graycode.py:6(GrayCode)
        1    0.000    0.000    0.000    0.000 __init__.py:70(__init__)
        1    0.000    0.000    0.000    0.000 core.py:726(Variable)
        1    0.000    0.000    0.000    0.000 studentT.py:11(StudentT)
        1    0.000    0.000    0.000    0.000 loss.py:622(BCEWithLogitsLoss)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1836(NdPPoly)
        1    0.000    0.000    0.000    0.000 __init__.py:61(get_calls)
       16    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
        1    0.000    0.000    0.000    0.000 creation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 asgd.py:18(ASGD)
        1    0.000    0.000    0.000    0.000 boolalg.py:741(Or)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1767(yulesimon_gen)
        1    0.000    0.000    0.000    0.000 zipfile.py:802(ZipExtFile)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:61(_ResourceSharer)
        1    0.000    0.000    0.000    0.000 pg_operation.py:10(PointGroupOp)
        7    0.000    0.000    0.000    0.000 memoization.py:4(recurrence_memo)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:161(SobolResult)
        1    0.000    0.000    0.000    0.000 abc.py:177(InspectLoader)
        2    0.000    0.000    0.000    0.000 results.py:441(__getattr__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1547(dirichlet_gen)
        2    0.000    0.000    0.000    0.000 densebasic.py:255(dup_strip)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:441(_setdef)
       10    0.000    0.000    0.000    0.000 __init__.py:318(_wrap_deprecated_method)
        1    0.000    0.000    0.000    0.000 transforms.py:521(ExpTransform)
        1    0.000    0.000    0.000    0.000 _ode.py:110(ode)
        1    0.000    0.000    0.000    0.000 extensions.py:11(ExtensionElement)
        1    0.000    0.000    0.000    0.000 transforms.py:634(TanhTransform)
        1    0.000    0.000    0.000    0.000 conv.py:10(_ConvNd)
        1    0.000    0.000    0.000    0.000 padding.py:15(_ConstantPadNd)
       24    0.000    0.000    0.000    0.000 traceback.py:307(__len__)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:602(make_mpc)
        1    0.000    0.000    0.000    0.000 __init__.py:989(IntStorage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11258(wald_gen)
        1    0.000    0.000    0.000    0.000 outputs.py:4975(Wavecar)
        1    0.000    0.000    0.000    0.000 ImageFile.py:113(ImageFile)
       24    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
       27    0.000    0.000    0.000    0.000 singleton.py:152(__repr__)
        4    0.000    0.000    0.000    0.000 pythonmpq.py:194(__neg__)
        1    0.000    0.000    0.000    0.000 fglmtools.py:1(<module>)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2877(__init__)
        1    0.000    0.000    0.000    0.000 core.py:191(<listcomp>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:926(ToolPan)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:90(KroneckerDelta)
        1    0.000    0.000    0.000    0.000 function_base.py:2314(<listcomp>)
        1    0.000    0.000    0.000    0.000 _guards.py:238(Checkpointable)
        1    0.000    0.000    0.000    0.000 trsock.py:4(TransportSocket)
        1    0.000    0.000    0.000    0.000 conv.py:382(Conv2d)
        1    0.000    0.000    0.000    0.000 __init__.py:6(HTTPStatus)
        1    0.000    0.000    0.000    0.000 __init__.py:321(CDLL)
        1    0.000    0.000    0.000    0.000 axis.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 bessel.py:106(besselj)
        1    0.000    0.000    0.000    0.000 bessel.py:36(BesselBase)
        1    0.000    0.000    0.000    0.000 lambdify.py:1123(_EvaluatorPrinter)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11558(crystalball_gen)
        1    0.000    0.000    0.000    0.000 lzma.py:38(LZMAFile)
        1    0.000    0.000    0.000    0.000 readers.py:53(MultiplexedPath)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3162(multinomial_gen)
        1    0.000    0.000    0.000    0.000 trace.py:11(Trace)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1060(digamma)
        1    0.000    0.000    0.000    0.000 single.py:211(SingleODESolver)
       12    0.000    0.000    0.000    0.000 sdm.py:85(<genexpr>)
        1    0.000    0.000    0.000    0.000 _docscrape.py:25(Reader)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1728(RealInterval)
        1    0.000    0.000    0.000    0.000 assume.py:224(Predicate)
        1    0.000    0.000    0.000    0.000 header.py:413(_ValueFormatter)
        1    0.000    0.000    0.000    0.000 offsetbox.py:651(DrawingArea)
        1    0.000    0.000    0.000    0.000 error_functions.py:1964(Ci)
       20    0.000    0.000    0.000    0.000 mul.py:571(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:6345(mvoid)
        1    0.000    0.000    0.000    0.000 dos.py:395(FermiDos)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1027(matrix_normal_gen)
        1    0.000    0.000    0.000    0.000 complexes.py:265(sign)
        1    0.000    0.000    0.000    0.000 headerregistry.py:402(MIMEVersionHeader)
        1    0.000    0.000    0.000    0.000 enumerative.py:368(MultisetPartitionTraverser)
        1    0.000    0.000    0.000    0.000 conv.py:856(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 vode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ode.py:843(vode)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:246(GaussianDomain)
        1    0.000    0.000    0.000    0.000 adjoint.py:6(Adjoint)
        3    0.000    0.000    0.000    0.000 __init__.py:43(private_class)
        1    0.000    0.000    0.000    0.000 zipfile.py:2222(CompleteDirs)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4158(Sentinel)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:11(ExpRelaxedCategorical)
        1    0.000    0.000    0.000    0.000 Image.py:3765(register_extensions)
        1    0.000    0.000    0.000    0.000 image.py:1134(PcolorImage)
        1    0.000    0.000    0.000    0.000 tricontour.py:8(TriContourSet)
        1    0.000    0.000    0.000    0.000 functions.py:11(TensorProduct)
        1    0.000    0.000    0.000    0.000 conv.py:82(Conv2d)
        1    0.000    0.000    0.000    0.000 add_newdocs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sampler.py:82(RandomSampler)
        1    0.000    0.000    0.000    0.000 _ltisys.py:132(lti)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:433(_moment_central_formula)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1363(exec_module)
        1    0.000    0.000    0.000    0.000 log.py:41(Log)
        3    0.000    0.000    0.000    0.000 rcsetup.py:990(validate_hist_bins)
        1    0.000    0.000    0.000    0.000 maggroups.py:33(MagneticSpaceGroup)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:12(WilcoxonDistribution)
        1    0.000    0.000    0.000    0.000 bn_relu.py:48(BNReLU3d)
        1    0.000    0.000    0.000    0.000 setupcfg.py:603(ConfigOptionsHandler)
        1    0.000    0.000    0.000    0.000 hadamard.py:313(HadamardPower)
        1    0.000    0.000    0.000    0.000 rnn.py:163(_LSTMLayer)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:582(hypergeom_gen)
        1    0.000    0.000    0.000    0.000 facts.py:75(transitive_closure)
        1    0.000    0.000    0.000    0.000 rprop.py:11(Rprop)
        1    0.000    0.000    0.000    0.000 hyper.py:1087(HyperRep_cosasin)
        1    0.000    0.000    0.000    0.000 _ndbspline.py:26(NdBSpline)
        1    0.000    0.000    0.000    0.000 nadam.py:10(NAdam)
        1    0.000    0.000    0.000    0.000 runner.py:30(TextTestResult)
        1    0.000    0.000    0.000    0.000 polyoptions.py:349(Order)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:607(default)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1857(cache_policy)
        1    0.000    0.000    0.000    0.000 afm.py:358(AFM)
        1    0.000    0.000    0.000    0.000 __init__.py:434(Stripper)
        1    0.000    0.000    0.000    0.000 widgets.py:2443(PolygonSelector)
        1    0.000    0.000    0.000    0.000 bessel.py:607(besselk)
        1    0.000    0.000    0.000    0.000 _parser.py:241(parserinfo)
        1    0.000    0.000    0.000    0.000 stringpict.py:354(prettyForm)
        7    0.000    0.000    0.000    0.000 __init__.py:101(CFunctionType)
        2    0.000    0.000    0.000    0.000 gzip.py:402(_read_exact)
        1    0.000    0.000    0.000    0.000 Image.py:3689(register_open)
        1    0.000    0.000    0.000    0.000 bonds.py:58(CovalentBond)
        1    0.000    0.000    0.000    0.000 feedparser.py:136(FeedParser)
        1    0.000    0.000    0.000    0.000 __init__.py:959(FloatStorage)
        1    0.000    0.000    0.000    0.000 _common.py:127(_TZifHeader)
        1    0.000    0.000    0.000    0.000 _common.py:267(tzrangebase)
        1    0.000    0.000    0.000    0.000 point.py:1073(Point3D)
        1    0.000    0.000    0.000    0.000 rnn.py:230(GRUCell)
        1    0.000    0.000    0.000    0.000 _interpolate.py:592(_PPolyBase)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:961(poisson_gen)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:118(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1432(cauchy_gen)
       18    0.000    0.000    0.000    0.000 typing_extensions.py:762(<genexpr>)
        1    0.000    0.000    0.000    0.000 colors.py:371(ColorConverter)
        1    0.000    0.000    0.000    0.000 sets.py:10(MatrixSet)
        5    0.000    0.000    0.000    0.000 typing.py:2588(final)
        1    0.000    0.000    0.000    0.000 relational.py:549(Equality)
        4    0.000    0.000    0.000    0.000 mixins.py:51(_unary_method)
        1    0.000    0.000    0.000    0.000 _docscrape.py:623(ClassDoc)
        1    0.000    0.000    0.000    0.000 dataframes.py:60(Capture)
        1    0.000    0.000    0.000    0.000 tools.py:38(typed)
        1    0.000    0.000    0.000    0.000 modules.py:1005(SubQuotientModule)
        1    0.000    0.000    0.000    0.000 core.py:3237(QuotedString)
        1    0.000    0.000    0.000    0.000 main.py:1489(YAMLObject)
        1    0.000    0.000    0.000    0.000 core.py:115(<listcomp>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:324(_icdf_formula)
        1    0.000    0.000    0.000    0.000 transforms.py:1012(TransformedBbox)
        1    0.000    0.000    0.000    0.000 linear.py:208(LazyLinear)
        1    0.000    0.000    0.000    0.000 patches.py:1833(_Style)
        1    0.000    0.000    0.000    0.000 __config__.py:95(<listcomp>)
        1    0.000    0.000    0.000    0.000 normalization.py:87(LayerNorm)
        1    0.000    0.000    0.000    0.000 modules.py:44(Module)
       16    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:79(<genexpr>)
       10    0.000    0.000    0.000    0.000 wrappers.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1007(AnchoredOffsetbox)
        1    0.000    0.000    0.000    0.000 tensor.py:4928(_WildTensExpr)
        1    0.000    0.000    0.000    0.000 profiler_util.py:385(FunctionEvent)
        1    0.000    0.000    0.000    0.000 binrel.py:135(AppliedBinaryRelation)
        1    0.000    0.000    0.000    0.000 npyio.py:106(NpzFile)
        1    0.000    0.000    0.000    0.000 dense.py:28(DenseMatrix)
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:24(MultiUFunc)
        1    0.000    0.000    0.000    0.000 structure.py:25(SymmetrizedStructure)
        1    0.000    0.000    0.000    0.000 trirefine.py:47(UniformTriRefiner)
        2    0.000    0.000    0.000    0.000 sysconfig.py:299(get_preferred_scheme)
        3    0.000    0.000    0.000    0.000 __init__.py:1720(getEffectiveLevel)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:398(uppergamma)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:19(ArgsKwargsPair)
        1    0.000    0.000    0.000    0.000 figure.py:47(_AxesStack)
        1    0.000    0.000    0.000    0.000 minpack2.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _pytesttester.py:76(__init__)
        1    0.000    0.000    0.000    0.000 dataloader.py:684(_MultiProcessingDataLoaderIter)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:115(orthopoly1d)
        1    0.000    0.000    0.000    0.000 specifiers.py:690(SpecifierSet)
       30    0.000    0.000    0.000    0.000 polyoptions.py:196(<genexpr>)
        1    0.000    0.000    0.000    0.000 _base.py:174(_process_plot_var_args)
        1    0.000    0.000    0.000    0.000 discovery.py:84(_Finder)
        1    0.000    0.000    0.000    0.000 threading.py:1005(_set_native_id)
        1    0.000    0.000    0.000    0.000 __init__.py:347(EntryPoints)
        1    0.000    0.000    0.000    0.000 __init__.py:1089(QUInt4x2Storage)
        1    0.000    0.000    0.000    0.000 __init__.py:899(HalfStorage)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:476(Hyper_Function)
        1    0.000    0.000    0.000    0.000 unix_events.py:457(_UnixReadPipeTransport)
        1    0.000    0.000    0.000    0.000 numbers.py:3465(ComplexInfinity)
       11    0.000    0.000    0.000    0.000 api.py:488(method_factory)
        1    0.000    0.000    0.000    0.000 transforms.py:955(LowerCholeskyTransform)
       14    0.000    0.000    0.000    0.000 _common.py:9(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:929(ShortStorage)
        1    0.000    0.000    0.000    0.000 kind.py:257(__init__)
        1    0.000    0.000    0.000    0.000 comments.py:671(CommentedMapItemsView)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5836(johnsonsu_gen)
        1    0.000    0.000    0.000    0.000 scalarint.py:12(ScalarInt)
        1    0.000    0.000    0.000    0.000 discovery.py:132(PackageFinder)
        1    0.000    0.000    0.000    0.000 numbers.py:2839(One)
        1    0.000    0.000    0.000    0.000 function.py:252(_HookMixin)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:115(TokenList)
        5    0.000    0.000    0.000    0.000 constructor.py:331(add_multi_constructor)
        3    0.000    0.000    0.000    0.000 __init__.py:880(legacy_normalize)
        1    0.000    0.000    0.000    0.000 integers.py:21(RoundFunction)
        1    0.000    0.000    0.000    0.000 rrule.py:1112(_iterinfo)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._tracer_warn_use_python}
        1    0.000    0.000    0.000    0.000 mathtext.py:378(Fonts)
        1    0.000    0.000    0.000    0.000 comments.py:1089(CommentedSet)
        1    0.000    0.000    0.000    0.000 integers.py:297(ceiling)
        1    0.000    0.000    0.000    0.000 extras.py:1607(MAxisConcatenator)
        1    0.000    0.000    0.000    0.000 abc.py:131(TraversableResources)
       12    0.000    0.000    0.000    0.000 sdm.py:83(<genexpr>)
        1    0.000    0.000    0.000    0.000 conv_add.py:52(ConvAddReLU2d)
        2    0.000    0.000    0.000    0.000 _adapters.py:12(__init__)
        1    0.000    0.000    0.000    0.000 exceptions.py:11(SymPyDeprecationWarning)
        1    0.000    0.000    0.000    0.000 queue.py:258(_PySimpleQueue)
        3    0.000    0.000    0.000    0.000 glob.py:213(_join)
        1    0.000    0.000    0.000    0.000 ticker.py:1413(EngFormatter)
        1    0.000    0.000    0.000    0.000 _util.py:13(DeferredError)
        1    0.000    0.000    0.000    0.000 widgets.py:1417(_SelectorWidget)
        1    0.000    0.000    0.000    0.000 series.py:1496(ParametricLineBaseSeries)
        1    0.000    0.000    0.000    0.000 _internal.py:217(_getintp_ctype)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:900(_Patcher)
        1    0.000    0.000    0.000    0.000 container.py:5(Container)
        1    0.000    0.000    0.000    0.000 batchnorm.py:17(_NormBase)
        1    0.000    0.000    0.000    0.000 autograd_function.py:30(__init__)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:233(<lambda>)
        1    0.000    0.000    0.000    0.000 swa_utils.py:200(SWALR)
        1    0.000    0.000    0.000    0.000 distance.py:1990(<dictcomp>)
        1    0.000    0.000    0.000    0.000 logic.py:391(Or)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:20(Kumaraswamy)
        1    0.000    0.000    0.000    0.000 dataframes.py:282(CaptureSetItem)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:10(GaussLegendreQuadrature)
        2    0.000    0.000    0.000    0.000 facts.py:305(rules_beta)
        1    0.000    0.000    0.000    0.000 partitions.py:15(Partition)
        1    0.000    0.000    0.000    0.000 contains.py:10(Contains)
        1    0.000    0.000    0.000    0.000 _compression.py:9(BaseStream)
        4    0.000    0.000    0.000    0.000 generate.py:67(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:143(__init__)
        1    0.000    0.000    0.000    0.000 splitter_base.py:193(SplitResult)
        1    0.000    0.000    0.000    0.000 backend_tools.py:992(ToolHelpBase)
        3    0.000    0.000    0.000    0.000 constraints.py:109(__init__)
        1    0.000    0.000    0.000    0.000 fancysets.py:1110(ComplexRegion)
        1    0.000    0.000    0.000    0.000 dos.py:37(DOS)
        1    0.000    0.000    0.000    0.000 fancysets.py:166(Integers)
        1    0.000    0.000    0.000    0.000 structure.py:5062(Molecule)
        1    0.000    0.000    0.000    0.000 _mio4.py:461(VarWriter4)
        1    0.000    0.000    0.000    0.000 warnings.py:25(SetuptoolsWarning)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 mock.py:2422(_Call)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:119(ScalarFunction)
        1    0.000    0.000    0.000    0.000 core.py:3553(White)
        1    0.000    0.000    0.000    0.000 transforms.py:280(__init__)
        1    0.000    0.000    0.000    0.000 colors.py:509(Colormap)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4780(hypsecant_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:939(CharStorage)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:1122(TOMS748Solver)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
        1    0.000    0.000    0.000    0.000 spglib.py:108(SpglibDataset)
        1    0.000    0.000    0.000    0.000 exprtools.py:809(Term)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:237(<lambda>)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:19(LKJCholesky)
        1    0.000    0.000    0.000    0.000 __init__.py:969(ComplexDoubleStorage)
        1    0.000    0.000    0.000    0.000 tensor.py:1597(TensorType)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:132(ImmutableDenseNDimArray)
        1    0.000    0.000    0.000    0.000 socket.py:662(SocketIO)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:9(__PrinterOptions)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:579(DecompositionInterpreter)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:740(nhypergeom_gen)
        1    0.000    0.000    0.000    0.000 pycode.py:552(PythonCodePrinter)
        9    0.000    0.000    0.000    0.000 typing.py:3026(<lambda>)
        8    0.000    0.000    0.000    0.000 unicode.py:9(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:104(CallbackRegistry)
        4    0.000    0.000    0.000    0.000 domain.py:846(__eq__)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:114(FakeQuantize)
        1    0.000    0.000    0.000    0.000 polyoptions.py:271(Gens)
        1    0.000    0.000    0.000    0.000 modules.py:1339(QuotientModule)
        1    0.000    0.000    0.000    0.000 Bravais_Lattice.py:10(bravaislattice)
        1    0.000    0.000    0.000    0.000 discovery.py:298(ConfigDiscovery)
        1    0.000    0.000    0.000    0.000 worker.py:64(WorkerInfo)
        1    0.000    0.000    0.000    0.000 diophantine.py:1213(<setcomp>)
        1    0.000    0.000    0.000    0.000 _mio4.py:89(VarHeader4)
        1    0.000    0.000    0.000    0.000 __init__.py:879(DoubleStorage)
        1    0.000    0.000    0.000    0.000 ase.py:86(AseAtomsAdaptor)
        1    0.000    0.000    0.000    0.000 graph_module.py:27(_EvalCacheLoader)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:12(HalfCauchy)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:565(anglit_gen)
        1    0.000    0.000    0.000    0.000 traceback.py:372(StackSummary)
        1    0.000    0.000    0.000    0.000 __init__.py:13(register)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3265(_round_dispatcher)
        1    0.000    0.000    0.000    0.000 _wavelets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _byteordercodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mio4.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:498(geom_gen)
        1    0.000    0.000    0.000    0.000 conv.py:672(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 _structures.py:6(InfinityType)
        1    0.000    0.000    0.000    0.000 axis.py:553(Ticker)
        1    0.000    0.000    0.000    0.000 __init__.py:72(__init__)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:88(RelaxedOneHotCategorical)
        1    0.000    0.000    0.000    0.000 selector_events.py:888(_SelectorSocketTransport)
        1    0.000    0.000    0.000    0.000 blocking_input.py:101(BlockingMouseInput)
        1    0.000    0.000    0.000    0.000 integers.py:97(floor)
        1    0.000    0.000    0.000    0.000 mathtext.py:535(TruetypeFonts)
        1    0.000    0.000    0.000    0.000 selector_events.py:744(_SelectorTransport)
        1    0.000    0.000    0.000    0.000 nodes.py:11(Node)
        1    0.000    0.000    0.000    0.000 expr.py:3989(AtomicExpr)
        1    0.000    0.000    0.000    0.000 activation.py:161(Softmax)
        1    0.000    0.000    0.000    0.000 __init__.py:84(__init__)
        1    0.000    0.000    0.000    0.000 diophantine.py:40(DiophantineSolutionSet)
        1    0.000    0.000    0.000    0.000 __init__.py:1059(QUInt8Storage)
        2    0.000    0.000    0.000    0.000 util.py:289(<listcomp>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:76(Options)
        1    0.000    0.000    0.000    0.000 _ops.py:589(__init__)
        1    0.000    0.000    0.000    0.000 configparser.py:297(ParsingError)
        1    0.000    0.000    0.000    0.000 _vertex.py:9(VertexBase)
        1    0.000    0.000    0.000    0.000 delta_functions.py:17(DiracDelta)
        1    0.000    0.000    0.000    0.000 transforms.py:459(ReshapeTransform)
        1    0.000    0.000    0.000    0.000 outputs.py:5824(WSWQ)
       16    0.000    0.000    0.000    0.000 arraypad.py:525(_pad_dispatcher)
        1    0.000    0.000    0.000    0.000 conv_fused.py:695(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:7(PackageUnpickler)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:34(gamma)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:299(_process_parameters)
        4    0.000    0.000    0.000    0.000 libmpf.py:454(to_float)
        4    0.000    0.000    0.000    0.000 doccer.py:180(replace_notes_in_docstring)
        1    0.000    0.000    0.000    0.000 tableform.py:9(TableForm)
        1    0.000    0.000    0.000    0.000 matrixbase.py:5400(DeferredVector)
        1    0.000    0.000    0.000    0.000 storage.py:981(_LegacyStorage)
        1    0.000    0.000    0.000    0.000 __init__.py:1019(BoolStorage)
        1    0.000    0.000    0.000    0.000 units.py:110(ConversionInterface)
        1    0.000    0.000    0.000    0.000 text.py:1243(OffsetFrom)
        1    0.000    0.000    0.000    0.000 arrayterator.py:16(Arrayterator)
        1    0.000    0.000    0.000    0.000 rrule.py:1418(_rrulestr)
       12    0.000    0.000    0.000    0.000 patches.py:1879(<genexpr>)
        1    0.000    0.000    0.000    0.000 _mannwhitneyu.py:21(_MWU)
        1    0.000    0.000    0.000    0.000 dataset.py:280(Subset)
       12    0.000    0.000    0.000    0.000 symbol.py:784(literal)
        1    0.000    0.000    0.000    0.000 quadpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 libmpi.py:96(mpi_neg)
        1    0.000    0.000    0.000    0.000 _exceptions.py:116(_ArrayMemoryError)
        1    0.000    0.000    0.000    0.000 error_functions.py:2104(Shi)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:103(elliptic_f)
        9    0.000    0.000    0.000    0.000 enum.py:1354(<lambda>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1444(Char)
        1    0.000    0.000    0.000    0.000 __init__.py:2401(_CustomTextWrap)
        1    0.000    0.000    0.000    0.000 ticker.py:1218(LogitFormatter)
        1    0.000    0.000    0.000    0.000 _trustregion.py:30(BaseQuadraticSubproblem)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:163(__neg__)
        1    0.000    0.000    0.000    0.000 ndim_array.py:15(ArrayKind)
        8    0.000    0.000    0.000    0.000 mathtext.py:1903(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3254(genexpon_gen)
        1    0.000    0.000    0.000    0.000 mathtext.py:137(MathtextBackendAgg)
        1    0.000    0.000    0.000    0.000 cobyla.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:44(__new__)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:476(_broadcast_arrays_dispatcher)
        1    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
        1    0.000    0.000    0.000    0.000 dviread.py:516(DviFont)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:10(LaplacianNd)
        1    0.000    0.000    0.000    0.000 graph_module.py:230(_WrappedCall)
        1    0.000    0.000    0.000    0.000 wavelets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 weak.py:37(WeakIdRef)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3579(TypeAliasType)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:631(_IgnoreContextManager)
        1    0.000    0.000    0.000    0.000 kind.py:97(__new__)
        1    0.000    0.000    0.000    0.000 axis.py:29(<listcomp>)
       11    0.000    0.000    0.000    0.000 _color_data.py:31(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1744(dgamma_gen)
        1    0.000    0.000    0.000    0.000 _covariance.py:562(CovViaEigendecomposition)
        1    0.000    0.000    0.000    0.000 ticker.py:2084(MaxNLocator)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:295(<listcomp>)
        1    0.000    0.000    0.000    0.000 fft.py:250(_ShapeAndDims)
        1    0.000    0.000    0.000    0.000 ckdtree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 case.py:1388(FunctionTestCase)
        3    0.000    0.000    0.000    0.000 feedparser.py:210(_pop_message)
        3    0.000    0.000    0.000    0.000 __init__.py:6(is_available)
       20    0.000    0.000    0.000    0.000 mul.py:672(<listcomp>)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:560(BlockDiagMatrix)
        1    0.000    0.000    0.000    0.000 __init__.py:226(insert_shim)
        1    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:503(_MissingDynamic)
        1    0.000    0.000    0.000    0.000 __init__.py:959(BFloat16Storage)
        1    0.000    0.000    0.000    0.000 __init__.py:1099(QUInt2x4Storage)
        1    0.000    0.000    0.000    0.000 groups.py:139(PointGroup)
        1    0.000    0.000    0.000    0.000 argparse.py:1328(_ActionsContainer)
        1    0.000    0.000    0.000    0.000 gammasimp.py:463(_rf)
        1    0.000    0.000    0.000    0.000 six.py:205(load_module)
        1    0.000    0.000    0.000    0.000 linear.py:48(Linear)
        1    0.000    0.000    0.000    0.000 decoder.py:254(JSONDecoder)
        3    0.000    0.000    0.000    0.000 __init__.py:370(_FuncPtr)
        6    0.000    0.000    0.000    0.000 rcsetup.py:177(_validate_tex_preamble)
        2    0.000    0.000    0.000    0.000 core.py:6643(__setattr__)
        1    0.000    0.000    0.000    0.000 __init__.py:1402(_fixupChildren)
        3    0.000    0.000    0.000    0.000 typing.py:900(__repr__)
        1    0.000    0.000    0.000    0.000 ticker.py:1909(LinearLocator)
        1    0.000    0.000    0.000    0.000 sets.py:1893(UniversalSet)
        1    0.000    0.000    0.000    0.000 rnn.py:749(RNNCellBase)
        1    0.000    0.000    0.000    0.000 calendar.py:295(TextCalendar)
        1    0.000    0.000    0.000    0.000 _functions.py:10(Broadcast)
        1    0.000    0.000    0.000    0.000 __init__.py:1029(BFloat16Storage)
        1    0.000    0.000    0.000    0.000 _script.py:179(OrderedDictWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:79(method_cache)
        1    0.000    0.000    0.000    0.000 function_base.py:2117(vectorize)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4006(rv_sample)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:23(BarrierSubproblem)
        1    0.000    0.000    0.000    0.000 __init__.py:1049(ComplexFloatStorage)
        1    0.000    0.000    0.000    0.000 factorials.py:828(binomial)
        1    0.000    0.000    0.000    0.000 loss.py:1414(TripletMarginLoss)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9528(semicircular_gen)
        4    0.000    0.000    0.000    0.000 typing.py:442(__init__)
        7    0.000    0.000    0.000    0.000 getlimits.py:157(_register_type)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1235(_kwargs2args)
        1    0.000    0.000    0.000    0.000 _atfork.py:18(register_after_fork)
        1    0.000    0.000    0.000    0.000 more.py:2733(seekable)
        1    0.000    0.000    0.000    0.000 rnn.py:1018(RNNCellBase)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1767(C14NWriterTarget)
        1    0.000    0.000    0.000    0.000 _util.py:559(_FunctionWrapper)
        1    0.000    0.000    0.000    0.000 mod.py:12(Mod)
        1    0.000    0.000    0.000    0.000 structure.py:142(PeriodicNeighbor)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:174(<lambda>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1557(List)
        2    0.000    0.000    0.000    0.000 scale.py:634(get_scale_names)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1347(ReduceOrder)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:428(FloorDiv)
        1    0.000    0.000    0.000    0.000 streams.py:301(StreamWriter)
        1    0.000    0.000    0.000    0.000 inverse.py:8(Inverse)
        1    0.000    0.000    0.000    0.000 boolalg.py:230(BooleanAtom)
        1    0.000    0.000    0.000    0.000 bn_relu.py:12(BNReLU2d)
        1    0.000    0.000    0.000    0.000 _functions.py:6(SyncBatchNorm)
        1    0.000    0.000    0.000    0.000 six.py:219(is_package)
        1    0.000    0.000    0.000    0.000 singleton.py:24(SingletonRegistry)
        1    0.000    0.000    0.000    0.000 sets.py:854(ProductSet)
        1    0.000    0.000    0.000    0.000 mio5_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7002(gibrat_gen)
        1    0.000    0.000    0.000    0.000 difflib.py:1666(HtmlDiff)
        1    0.000    0.000    0.000    0.000 mathtext.py:82(MathtextBackend)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3599(ContinuousDistribution)
       10    0.000    0.000    0.000    0.000 __future__.py:83(__init__)
        1    0.000    0.000    0.000    0.000 widgets.py:91(AxesWidget)
        1    0.000    0.000    0.000    0.000 point.py:860(Point2D)
        1    0.000    0.000    0.000    0.000 complexes.py:142(im)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:753(PngImageFile)
        2    0.000    0.000    0.000    0.000 _pep440.py:158(_compare)
        1    0.000    0.000    0.000    0.000 threading.py:224(Condition)
        1    0.000    0.000    0.000    0.000 conv_add.py:9(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 fft.py:409(_CanonicalizeC2rReturn)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2974(_prod_dispatcher)
        1    0.000    0.000    0.000    0.000 kdtree.py:1(<module>)
       13    0.000    0.000    0.000    0.000 utils.py:35(wrapper)
        1    0.000    0.000    0.000    0.000 _ode.py:600(complex_ode)
        1    0.000    0.000    0.000    0.000 combining.py:117(_ForkerIterDataPipe)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:30(_isnull)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1632(TypeVar)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:202(_concrete_ndptr)
        1    0.000    0.000    0.000    0.000 _structures.py:35(NegativeInfinityType)
        1    0.000    0.000    0.000    0.000 msgpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 slice.py:31(MatrixSlice)
        1    0.000    0.000    0.000    0.000 immutable.py:140(ImmutableSparseMatrix)
       12    0.000    0.000    0.000    0.000 matexpr.py:21(_sympifyit)
        1    0.000    0.000    0.000    0.000 modules.py:1647(PowerBasisElement)
       10    0.000    0.000    0.000    0.000 decorator.py:195(<genexpr>)
        1    0.000    0.000    0.000    0.000 base_events.py:206(_SendfileFallbackProtocol)
        1    0.000    0.000    0.000    0.000 _at.py:61(at)
        1    0.000    0.000    0.000    0.000 memoization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 interval_membership.py:4(intervalMembership)
        1    0.000    0.000    0.000    0.000 _atfork.py:1(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:176(is_initialized)
        1    0.000    0.000    0.000    0.000 recipes.py:336(UnequalIterablesError)
        1    0.000    0.000    0.000    0.000 singularity_functions.py:14(SingularityFunction)
        4    0.000    0.000    0.000    0.000 __init__.py:169(<listcomp>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3629(__init__)
        1    0.000    0.000    0.000    0.000 sets.py:1726(Complement)
        1    0.000    0.000    0.000    0.000 connection.py:431(Listener)
       11    0.000    0.000    0.000    0.000 reductions.py:110(_torch_reduce)
        1    0.000    0.000    0.000    0.000 singleton.py:114(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2861(truncweibull_min_gen)
        1    0.000    0.000    0.000    0.000 decomp.py:1(<module>)
       11    0.000    0.000    0.000    0.000 windows.py:41(_add_docstr)
        1    0.000    0.000    0.000    0.000 linear.py:134(Bilinear)
        1    0.000    0.000    0.000    0.000 difflib.py:724(Differ)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3789(Doc)
        1    0.000    0.000    0.000    0.000 _pep440.py:140(__lt__)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:8(Embedding)
        1    0.000    0.000    0.000    0.000 rotation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:414(_ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 gridspec.py:362(GridSpec)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 activation.py:199(MultiheadAttention)
        1    0.000    0.000    0.000    0.000 profiler_util.py:16(EventList)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:223(polylog)
        1    0.000    0.000    0.000    0.000 sympify.py:27(SympifyError)
        1    0.000    0.000    0.000    0.000 category.py:26(StrCategoryConverter)
        1    0.000    0.000    0.000    0.000 mio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:506(JaxPrinter)
        1    0.000    0.000    0.000    0.000 rnn.py:1061(RNNCell)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5835(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7199(kappa4_gen)
        3    0.000    0.000    0.000    0.000 rcsetup.py:740(validate_bbox)
        1    0.000    0.000    0.000    0.000 complexes.py:897(transpose)
        1    0.000    0.000    0.000    0.000 _ode.py:1121(dopri5)
        1    0.000    0.000    0.000    0.000 pycode.py:416(ArrayPrinter)
        1    0.000    0.000    0.000    0.000 legend_handler.py:306(HandlerLineCollection)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11948(rv_histogram)
        1    0.000    0.000    0.000    0.000 core.py:5478(_update_ignorer)
        1    0.000    0.000    0.000    0.000 graph.py:113(_Namespace)
        1    0.000    0.000    0.000    0.000 complexes.py:20(re)
        1    0.000    0.000    0.000    0.000 __init__.py:949(BoolStorage)
        1    0.000    0.000    0.000    0.000 conv.py:1141(_LazyConvXdMixin)
        1    0.000    0.000    0.000    0.000 lazy.py:10(_LazyProtocol)
        1    0.000    0.000    0.000    0.000 mock.py:293(_Sentinel)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:379(DataFlowEdge)
        1    0.000    0.000    0.000    0.000 conv.py:118(Conv3d)
        1    0.000    0.000    0.000    0.000 __init__.py:919(IntStorage)
        1    0.000    0.000    0.000    0.000 __init__.py:1079(QInt32Storage)
       18    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISLNK}
        1    0.000    0.000    0.000    0.000 six.py:164(_resolve)
        1    0.000    0.000    0.000    0.000 Orbit_spd_with_spin.py:19(orbit_spd_with_spin)
        1    0.000    0.000    0.000    0.000 transforms.py:60(IntegralTransform)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4776(multivariate_t_frozen)
        1    0.000    0.000    0.000    0.000 outputs.py:4849(Dynmat)
        1    0.000    0.000    0.000    0.000 headerregistry.py:468(ContentTypeHeader)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6001(dirichlet_multinomial_gen)
        1    0.000    0.000    0.000    0.000 colors.py:1681(LightSource)
        1    0.000    0.000    0.000    0.000 parabola.py:20(Parabola)
        1    0.000    0.000    0.000    0.000 conv_fused.py:458(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 boolalg.py:397(BooleanFalse)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:897(_resolve_filename)
        6    0.000    0.000    0.000    0.000 ops.py:752(force_aff_func_args)
        1    0.000    0.000    0.000    0.000 computed_entries.py:226(TemperatureEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 qconfig.py:106(QConfigDynamic)
       12    0.000    0.000    0.000    0.000 comments.py:55(__call__)
        1    0.000    0.000    0.000    0.000 transforms.py:976(PositiveDefiniteTransform)
        1    0.000    0.000    0.000    0.000 _version.py:14(NumpyVersion)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:13(elliptic_k)
        1    0.000    0.000    0.000    0.000 conv.py:483(Conv3d)
        3    0.000    0.000    0.000    0.000 message.py:211(is_multipart)
        1    0.000    0.000    0.000    0.000 dos.py:1413(LobsterCompleteDos)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:674(Formula)
        1    0.000    0.000    0.000    0.000 codata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 batchnorm.py:9(_BatchNorm)
        1    0.000    0.000    0.000    0.000 core.py:2430(Literal)
        1    0.000    0.000    0.000    0.000 mio_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Orbit.py:2(orbit)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2460(foldcauchy_gen)
        1    0.000    0.000    0.000    0.000 streamplot.py:365(StreamMask)
       20    0.000    0.000    0.000    0.000 numbers.py:2835(__bool__)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:913(ReduceLROnPlateau)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:402(MultiStepLR)
        1    0.000    0.000    0.000    0.000 outputs.py:4024(Procar)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:37(FancyGetopt)
        1    0.000    0.000    0.000    0.000 numbers.py:3888(TribonacciConstant)
        1    0.000    0.000    0.000    0.000 getlimits.py:378(finfo)
        1    0.000    0.000    0.000    0.000 transforms.py:2460(BboxTransform)
        1    0.000    0.000    0.000    0.000 subprocess.py:126(CalledProcessError)
        1    0.000    0.000    0.000    0.000 error_functions.py:1275(expint)
        1    0.000    0.000    0.000    0.000 combining.py:93(_ContainerTemplate)
        1    0.000    0.000    0.000    0.000 filter_design.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tritools.py:11(TriAnalyzer)
        1    0.000    0.000    0.000    0.000 odepack.py:1(<module>)
       16    0.000    0.000    0.000    0.000 structure.py:3559(charge)
        1    0.000    0.000    0.000    0.000 half_normal.py:12(HalfNormal)
        1    0.000    0.000    0.000    0.000 matrix_element.py:5(Matrix_Ele)
        1    0.000    0.000    0.000    0.000 band_data_in.py:12(BandDataIn)
       14    0.000    0.000    0.000    0.000 {method 'seek' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 pkgutil.py:269(ImpLoader)
        1    0.000    0.000    0.000    0.000 _nbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 boolalg.py:572(And)
        1    0.000    0.000    0.000    0.000 orderings.py:63(ProductOrder)
        2    0.000    0.000    0.000    0.000 {method 'tobytes' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 events.py:24(Handle)
        1    0.000    0.000    0.000    0.000 selectors.py:442(EpollSelector)
        2    0.000    0.000    0.000    0.000 constraint_registry.py:83(__init__)
        1    0.000    0.000    0.000    0.000 gumbel.py:12(Gumbel)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1132(burr_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:1148(<listcomp>)
        1    0.000    0.000    0.000    0.000 hyper.py:1109(HyperRep_sinasin)
        1    0.000    0.000    0.000    0.000 rnn.py:282(RNNBase)
        1    0.000    0.000    0.000    0.000 tempfile.py:459(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 fileopener.py:13(FileOpenerIterDataPipe)
        1    0.000    0.000    0.000    0.000 engine.py:342(DiagnosticEngine)
        1    0.000    0.000    0.000    0.000 colors.py:956(Normalize)
        1    0.000    0.000    0.000    0.000 band.py:17(__init__)
        1    0.000    0.000    0.000    0.000 utils.py:11(WeightedQuantizedModule)
        1    0.000    0.000    0.000    0.000 fitpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:13(autocast)
        1    0.000    0.000    0.000    0.000 constraints.py:96(_Dependent)
        1    0.000    0.000    0.000    0.000 stackplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 runner.py:14(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 core.py:237(LinearCombination)
        5    0.000    0.000    0.000    0.000 due.py:28(dcite)
        1    0.000    0.000    0.000    0.000 _cubature.py:48(CubatureResult)
        1    0.000    0.000    0.000    0.000 matexpr.py:597(MatrixElement)
        1    0.000    0.000    0.000    0.000 special.py:104(Identity)
        1    0.000    0.000    0.000    0.000 computed_entries.py:549(ComputedStructureEntry)
        1    0.000    0.000    0.000    0.000 Orbit_spd.py:16(orbit_spd)
        1    0.000    0.000    0.000    0.000 _multivariate.py:211(multi_rv_generic)
        1    0.000    0.000    0.000    0.000 dates.py:947(rrulewrapper)
        1    0.000    0.000    0.000    0.000 sequences.py:726(RecursiveSeq)
        1    0.000    0.000    0.000    0.000 line.py:1343(Ray)
        1    0.000    0.000    0.000    0.000 numbers.py:3757(Pi)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha1}
        3    0.000    0.000    0.000    0.000 parser.py:17(__init__)
        1    0.000    0.000    0.000    0.000 scale.py:686(<listcomp>)
        1    0.000    0.000    0.000    0.000 axis3d.py:477(YAxis)
        1    0.000    0.000    0.000    0.000 sputils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _internal.py:249(_ctypes)
        6    0.000    0.000    0.000    0.000 docstring.py:33(__init__)
        1    0.000    0.000    0.000    0.000 single.py:341(NthAlgebraic)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:564(polygamma)
        1    0.000    0.000    0.000    0.000 decoder.py:269(Decoder)
        1    0.000    0.000    0.000    0.000 unix_events.py:1033(SafeChildWatcher)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:886(SupportsAbs)
        1    0.000    0.000    0.000    0.000 fir_filter_design.py:1(<module>)
       32    0.000    0.000    0.000    0.000 {method 'is_dir' of 'posix.DirEntry' objects}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3321(genextreme_gen)
        1    0.000    0.000    0.000    0.000 solvers.py:23(RawMatrix)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:6(autocast)
        1    0.000    0.000    0.000    0.000 calculus.py:5(MatrixCalculusMethods)
        1    0.000    0.000    0.000    0.000 utils.py:8(ReferenceQuantizedModule)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1074(bradford_gen)
        1    0.000    0.000    0.000    0.000 instancenorm.py:9(_InstanceNorm)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7963(t_gen)
        1    0.000    0.000    0.000    0.000 index_tricks.py:717(IndexExpression)
        1    0.000    0.000    0.000    0.000 connection.py:347(Connection)
        1    0.000    0.000    0.000    0.000 hyper.py:866(HyperRep_power1)
        1    0.000    0.000    0.000    0.000 ticker.py:232(Formatter)
       25    0.000    0.000    0.000    0.000 polyoptions.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 util.py:182(Finalize)
       16    0.000    0.000    0.000    0.000 dataclasses.py:1239(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:97(<listcomp>)
        3    0.000    0.000    0.000    0.000 index_tricks.py:320(__init__)
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:23(GimpPaletteFile)
        1    0.000    0.000    0.000    0.000 lbfgsb.py:1(<module>)
        1    0.000    0.000    0.000    0.000 normalization.py:14(LocalResponseNorm)
        1    0.000    0.000    0.000    0.000 sampler.py:139(SubsetRandomSampler)
        1    0.000    0.000    0.000    0.000 _typing.py:36(JustInt)
        1    0.000    0.000    0.000    0.000 assume.py:80(AppliedPredicate)
        1    0.000    0.000    0.000    0.000 formal.py:1492(FiniteFormalPowerSeries)
        1    0.000    0.000    0.000    0.000 hmac.py:27(HMAC)
        1    0.000    0.000    0.000    0.000 flatten.py:9(Flatten)
        1    0.000    0.000    0.000    0.000 mathtext.py:291(MathtextBackendSvg)
        1    0.000    0.000    0.000    0.000 core.py:116(<listcomp>)
        1    0.000    0.000    0.000    0.000 kronecker.py:86(KroneckerProduct)
        1    0.000    0.000    0.000    0.000 fancysets.py:73(Naturals)
        2    0.000    0.000    0.000    0.000 weakref.py:347(__new__)
        1    0.000    0.000    0.000    0.000 _type_utils.py:270(<dictcomp>)
        1    0.000    0.000    0.000    0.000 polyint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _kdtree.py:98(Rectangle)
        1    0.000    0.000    0.000    0.000 rnn.py:30(PackedSequence)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1905(sinc)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:253(iTXt)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1030(planck_gen)
        1    0.000    0.000    0.000    0.000 decomp_lu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 harwell_boeing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1224(levy_stable_frozen)
        1    0.000    0.000    0.000    0.000 index_tricks.py:562(__init__)
        1    0.000    0.000    0.000    0.000 decomp_cholesky.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:606(_FileInFile)
        2    0.000    0.000    0.000    0.000 deprecation.py:184(_deprecate_positional_args)
        1    0.000    0.000    0.000    0.000 extrapolation.py:266(levin_class)
        1    0.000    0.000    0.000    0.000 permutations.py:244(Cycle)
        1    0.000    0.000    0.000    0.000 colors.py:861(ListedColormap)
        1    0.000    0.000    0.000    0.000 transforms.py:1203(Transform)
        1    0.000    0.000    0.000    0.000 interface.py:1(<module>)
        1    0.000    0.000    0.000    0.000 configparser.py:1210(ConfigParser)
        1    0.000    0.000    0.000    0.000 compat.py:187(MutableSliceableSequence)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:18(_NestedSequence)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4888(invgamma_gen)
        1    0.000    0.000    0.000    0.000 transformer.py:166(TransformerEncoder)
        1    0.000    0.000    0.000    0.000 linear_relu.py:50(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 _check.py:8(AttributeTypeIsSupportedChecker)
        1    0.000    0.000    0.000    0.000 mock.py:1761(_patch_dict)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:25(lerchphi)
        1    0.000    0.000    0.000    0.000 numbers.py:1037(euler)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:395(zeta)
        1    0.000    0.000    0.000    0.000 ElementTree.py:525(ElementTree)
        1    0.000    0.000    0.000    0.000 markers.py:274(Marker)
        1    0.000    0.000    0.000    0.000 conv_fused.py:407(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 _arffread.py:339(RelationalAttribute)
        1    0.000    0.000    0.000    0.000 decomp_qr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 headerregistry.py:156(BaseHeader)
        1    0.000    0.000    0.000    0.000 unix_events.py:1337(ThreadedChildWatcher)
        7    0.000    0.000    0.000    0.000 __init__.py:27(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1347(fisk_gen)
       12    0.000    0.000    0.000    0.000 _pep440.py:392(_parse_letter_version)
        1    0.000    0.000    0.000    0.000 function.py:882(UndefinedFunction)
        1    0.000    0.000    0.000    0.000 _script.py:1478(_ScriptProfileColumn)
        1    0.000    0.000    0.000    0.000 _gauss_kronrod.py:9(GaussKronrodQuadrature)
        1    0.000    0.000    0.000    0.000 weibull.py:11(Weibull)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3134(genpareto_gen)
        1    0.000    0.000    0.000    0.000 colorbar.py:229(_ColorbarAutoLocator)
        1    0.000    0.000    0.000    0.000 colors.py:695(LinearSegmentedColormap)
        1    0.000    0.000    0.000    0.000 batchnorm.py:48(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 polar.py:666(RadialAxis)
        1    0.000    0.000    0.000    0.000 headerregistry.py:12(Address)
        1    0.000    0.000    0.000    0.000 _backend.py:7(_ScipyBackend)
        1    0.000    0.000    0.000    0.000 fold.py:10(Fold)
        1    0.000    0.000    0.000    0.000 _datasource.py:536(Repository)
        1    0.000    0.000    0.000    0.000 bessel.py:2044(marcumq)
        1    0.000    0.000    0.000    0.000 special.py:10(ZeroMatrix)
        1    0.000    0.000    0.000    0.000 rnn.py:7(LSTM)
        1    0.000    0.000    0.000    0.000 _machar.py:17(MachAr)
       16    0.000    0.000    0.000    0.000 results.py:29(__getitem__)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:516(VectorFunction)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:509(LinearLR)
        1    0.000    0.000    0.000    0.000 core.py:8376(_convert2ma)
        1    0.000    0.000    0.000    0.000 _cm.py:66(cubehelix)
        1    0.000    0.000    0.000    0.000 distance.py:8(PairwiseDistance)
        1    0.000    0.000    0.000    0.000 mathtext.py:2632(State)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:84(_apply_params)
        1    0.000    0.000    0.000    0.000 morphology.py:1(<module>)
       14    0.000    0.000    0.000    0.000 mock.py:1937(<genexpr>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3772(__init__)
        1    0.000    0.000    0.000    0.000 join.py:88(_JoinConfig)
        1    0.000    0.000    0.000    0.000 outputs.py:194(BandgapProps)
        8    0.000    0.000    0.000    0.000 animation.py:116(wrapper)
        9    0.000    0.000    0.000    0.000 core.py:1550(<genexpr>)
        1    0.000    0.000    0.000    0.000 activation.py:1361(Softmin)
        1    0.000    0.000    0.000    0.000 scalarstring.py:23(ScalarString)
        1    0.000    0.000    0.000    0.000 core.py:4862(AtLineStart)
        1    0.000    0.000    0.000    0.000 _arffread.py:65(Attribute)
        1    0.000    0.000    0.000    0.000 conv.py:765(ConvTranspose2d)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:302(<dictcomp>)
        1    0.000    0.000    0.000    0.000 animation.py:696(ImageMagickBase)
        1    0.000    0.000    0.000    0.000 linear.py:15(Linear)
        1    0.000    0.000    0.000    0.000 _multivariate.py:7252(normal_inverse_gamma_frozen)
        1    0.000    0.000    0.000    0.000 backend_tools.py:444(ToolGrid)
        2    0.000    0.000    0.000    0.000 cache.py:190(LazyFunction)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:538(AddWithLimits)
        3    0.000    0.000    0.000    0.000 zipfile.py:689(_check_compression)
        1    0.000    0.000    0.000    0.000 calendar.py:150(Calendar)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_224}
        1    0.000    0.000    0.000    0.000 __init__.py:1308(__init__)
        1    0.000    0.000    0.000    0.000 six.py:108(MovedModule)
        1    0.000    0.000    0.000    0.000 interpnd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Image.py:468(ImagePointTransform)
        1    0.000    0.000    0.000    0.000 core.py:2766(Word)
        1    0.000    0.000    0.000    0.000 __init__.py:35(_SupportedQEnginesProp)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:191(<listcomp>)
        1    0.000    0.000    0.000    0.000 _typing.py:52(JustComplex)
        1    0.000    0.000    0.000    0.000 __init__.py:463(SelectableGroups)
        1    0.000    0.000    0.000    0.000 dataloader.py:71(_DatasetKind)
        1    0.000    0.000    0.000    0.000 _script.py:413(RecursiveScriptClass)
        1    0.000    0.000    0.000    0.000 dsolve.py:1(<module>)
        1    0.000    0.000    0.000    0.000 headerregistry.py:276(DateHeader)
        1    0.000    0.000    0.000    0.000 complexes.py:696(arg)
        3    0.000    0.000    0.000    0.000 rcsetup.py:541(validate_ps_distiller)
        1    0.000    0.000    0.000    0.000 slsqp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:27(ExecutionStats)
        1    0.000    0.000    0.000    0.000 __init__.py:106(__version__)
        1    0.000    0.000    0.000    0.000 fancysets.py:24(Rationals)
       10    0.000    0.000    0.000    0.000 ctx_iv.py:355(_wrap_mpi_function)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:8(PixelShuffle)
        9    0.000    0.000    0.000    0.000 multiarray.py:346(where)
        1    0.000    0.000    0.000    0.000 shlex.py:19(shlex)
        1    0.000    0.000    0.000    0.000 spectrum.py:38(Spectrum)
        1    0.000    0.000    0.000    0.000 triplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_TextToBytesWrapper)
        1    0.000    0.000    0.000    0.000 observer.py:1273(FixedQParamsObserver)
        1    0.000    0.000    0.000    0.000 ndgriddata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7768(ncx2_gen)
        1    0.000    0.000    0.000    0.000 decomp_svd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 outputs.py:5528(Eigenval)
        1    0.000    0.000    0.000    0.000 normalization.py:121(InstanceNorm2d)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:222(lowergamma)
        6    0.000    0.000    0.000    0.000 conflict.py:37(<genexpr>)
        1    0.000    0.000    0.000    0.000 configparser.py:1255(SectionProxy)
        1    0.000    0.000    0.000    0.000 _aliases.py:147(zeros)
        4    0.000    0.000    0.000    0.000 sympify.py:28(__init__)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:3(Hamiltonian)
        1    0.000    0.000    0.000    0.000 indexed.py:580(Idx)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:188(elliptic_e)
        1    0.000    0.000    0.000    0.000 morestats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 immutable.py:82(ImmutableDenseMatrix)
        1    0.000    0.000    0.000    0.000 streams.py:12(Stream)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:215(_ProxyTensor)
        1    0.000    0.000    0.000    0.000 gzip.py:455(_GzipReader)
        1    0.000    0.000    0.000    0.000 _mio4.py:107(VarReader4)
        1    0.000    0.000    0.000    0.000 nonlin.py:1(<module>)
       15    0.000    0.000    0.000    0.000 dataclasses.py:179(__repr__)
        1    0.000    0.000    0.000    0.000 qhull.py:1(<module>)
        2    0.000    0.000    0.000    0.000 legend_handler.py:264(__init__)
        1    0.000    0.000    0.000    0.000 py38.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hadamard.py:41(HadamardProduct)
        1    0.000    0.000    0.000    0.000 tz.py:1475(GettzFunc)
        6    0.000    0.000    0.000    0.000 printer.py:422(print_function)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'select.epoll' objects}
        1    0.000    0.000    0.000    0.000 dir_util.py:15(SkipRepeatAbsolutePaths)
        1    0.000    0.000    0.000    0.000 kind.py:156(__new__)
        1    0.000    0.000    0.000    0.000 moduleTNC.py:1(<module>)
       16    0.000    0.000    0.000    0.000 structure.py:244(sites)
        1    0.000    0.000    0.000    0.000 activation.py:18(Threshold)
        1    0.000    0.000    0.000    0.000 locks.py:13(_ContextManagerMixin)
        1    0.000    0.000    0.000    0.000 transforms.py:80(TransformNode)
        1    0.000    0.000    0.000    0.000 ssl.py:456(_ASN1Object)
        1    0.000    0.000    0.000    0.000 core.py:2372(_MaskedPrintOption)
        1    0.000    0.000    0.000    0.000 periodic_table.py:637(is_valid_symbol)
        5    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        1    0.000    0.000    0.000    0.000 _parser.py:394(_ymd)
        1    0.000    0.000    0.000    0.000 polynomials.py:443(chebyshevt)
        1    0.000    0.000    0.000    0.000 conv.py:19(Conv1d)
        1    0.000    0.000    0.000    0.000 profiler.py:553(ExecutionGraphObserver)
        1    0.000    0.000    0.000    0.000 _infra.py:129(Location)
        1    0.000    0.000    0.000    0.000 numbers.py:1604(partition)
        1    0.000    0.000    0.000    0.000 numbers.py:2890(NegativeOne)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:14(TorchDispatchMode)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:512(AddressList)
        1    0.000    0.000    0.000    0.000 ltisys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutation.py:9(PermutationMatrix)
        1    0.000    0.000    0.000    0.000 __init__.py:43(QuantizedEngine)
        4    0.000    0.000    0.000    0.000 polynomial.py:1218(_coeffs)
        1    0.000    0.000    0.000    0.000 mio5.py:1(<module>)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:14(Match)
        1    0.000    0.000    0.000    0.000 _encoded_words.py:73(_QByteMap)
        1    0.000    0.000    0.000    0.000 numbers.py:1801(legendre_symbol)
        1    0.000    0.000    0.000    0.000 comments.py:654(CommentedMapKeysView)
        1    0.000    0.000    0.000    0.000 _rbf.py:55(Rbf)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5454(norminvgauss_gen)
        1    0.000    0.000    0.000    0.000 padding.py:330(_ReplicationPadNd)
       10    0.000    0.000    0.000    0.000 case.py:1366(_deprecate)
        1    0.000    0.000    0.000    0.000 _deprecation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 generate.py:26(Sieve)
        1    0.000    0.000    0.000    0.000 threading.py:544(Event)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1154(trigamma)
        2    0.000    0.000    0.000    0.000 main.py:1482(__init__)
        1    0.000    0.000    0.000    0.000 frontend.py:519(WithItemBuilder)
        2    0.000    0.000    0.000    0.000 multidimensional.py:81(__init__)
        1    0.000    0.000    0.000    0.000 _windows.py:2509(<listcomp>)
        2    0.000    0.000    0.000    0.000 traceback.py:297(__getitem__)
        1    0.000    0.000    0.000    0.000 minpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6574(loggamma_gen)
        1    0.000    0.000    0.000    0.000 string.py:57(Template)
        1    0.000    0.000    0.000    0.000 csr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 interpolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transformer.py:317(TransformerDecoder)
        1    0.000    0.000    0.000    0.000 mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:163(SimpleTextIOWrapper)
        1    0.000    0.000    0.000    0.000 hb.py:44(HBInfo)
        1    0.000    0.000    0.000    0.000 optimize.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distance.py:1983(<dictcomp>)
        1    0.000    0.000    0.000    0.000 events.py:189(ScalarEvent)
        1    0.000    0.000    0.000    0.000 lti_conversion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distributed.py:164(_DDPSink)
        1    0.000    0.000    0.000    0.000 rnn.py:948(RNNCell)
        1    0.000    0.000    0.000    0.000 plotgrid.py:16(PlotGrid)
        1    0.000    0.000    0.000    0.000 hyper.py:978(HyperRep_asin2)
        1    0.000    0.000    0.000    0.000 ticker.py:325(NullFormatter)
        1    0.000    0.000    0.000    0.000 core.py:3639(GoToColumn)
        1    0.000    0.000    0.000    0.000 kde.py:1(<module>)
        1    0.000    0.000    0.000    0.000 coo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bandstructure.py:909(LobsterBandStructureSymmLine)
        1    0.000    0.000    0.000    0.000 special.py:68(GenericZeroMatrix)
        1    0.000    0.000    0.000    0.000 construct.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:160(ToolToggleBase)
        1    0.000    0.000    0.000    0.000 hyper.py:1002(HyperRep_sqrts1)
        1    0.000    0.000    0.000    0.000 activation.py:241(PReLU)
        1    0.000    0.000    0.000    0.000 csc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _svdp.py:50(_AProd)
        1    0.000    0.000    0.000    0.000 dates.py:1872(DateConverter)
        2    0.000    0.000    0.000    0.000 polyclasses.py:1241(_new)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:639(ignore)
        1    0.000    0.000    0.000    0.000 _matrix_io.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _ode.py:1250(lsoda)
        1    0.000    0.000    0.000    0.000 hyper.py:890(HyperRep_power2)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3282(ToolContainerBase)
        1    0.000    0.000    0.000    0.000 threading.py:637(Barrier)
        1    0.000    0.000    0.000    0.000 polar.py:111(PolarAffine)
        1    0.000    0.000    0.000    0.000 mstats_basic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 calendar.py:74(<listcomp>)
        1    0.000    0.000    0.000    0.000 index_tricks.py:530(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5604(invweibull_gen)
        1    0.000    0.000    0.000    0.000 dbapi2.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 activation.py:52(Hardswish)
        1    0.000    0.000    0.000    0.000 contextlib.py:344(__exit__)
        1    0.000    0.000    0.000    0.000 numbers.py:2144(totient)
        1    0.000    0.000    0.000    0.000 linesearch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 loss.py:28(_WeightedLoss)
        1    0.000    0.000    0.000    0.000 dates.py:1697(MicrosecondLocator)
        1    0.000    0.000    0.000    0.000 bsr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5258(SymmetricPermutationGroup)
        1    0.000    0.000    0.000    0.000 _guards.py:354(Source)
        1    0.000    0.000    0.000    0.000 mathml.py:21(MathMLPrinterBase)
        1    0.000    0.000    0.000    0.000 traceback.py:247(FrameSummary)
        1    0.000    0.000    0.000    0.000 unix_events.py:593(_UnixWritePipeTransport)
        1    0.000    0.000    0.000    0.000 requirements.py:21(Requirement)
        1    0.000    0.000    0.000    0.000 widgets.py:948(RadioButtons)
        1    0.000    0.000    0.000    0.000 para4band.py:53(Stiefel_Frame_Function)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:42(LeviCivita)
        3    0.000    0.000    0.000    0.000 rcsetup.py:754(validate_sketch)
        1    0.000    0.000    0.000    0.000 ticker.py:1564(PercentFormatter)
        1    0.000    0.000    0.000    0.000 _base.py:569(Executor)
        1    0.000    0.000    0.000    0.000 platform.py:739(_Processor)
        1    0.000    0.000    0.000    0.000 _arffread.py:95(NominalAttribute)
        1    0.000    0.000    0.000    0.000 _globals.py:52(__new__)
        1    0.000    0.000    0.000    0.000 dropout.py:5(Dropout)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4308(multivariate_t_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:60(Quantize)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:54(_Storage)
        1    0.000    0.000    0.000    0.000 miobase.py:1(<module>)
        4    0.000    0.000    0.000    0.000 function.py:613(_iter_filter)
        1    0.000    0.000    0.000    0.000 numbers.py:1920(kronecker_symbol)
        1    0.000    0.000    0.000    0.000 expr.py:4134(ExprBuilder)
        1    0.000    0.000    0.000    0.000 sets.py:2192(SymmetricDifference)
        1    0.000    0.000    0.000    0.000 extras.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 relational.py:752(Unequality)
        1    0.000    0.000    0.000    0.000 modules.py:1746(ModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 special_matrices.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1506(XMLParser)
        1    0.000    0.000    0.000    0.000 scale.py:26(ScaleBase)
        1    0.000    0.000    0.000    0.000 observer.py:1311(PlaceholderObserver)
        1    0.000    0.000    0.000    0.000 request.py:1398(HTTPCookieProcessor)
        4    0.000    0.000    0.000    0.000 {method '__exit__' of 'numpy.nditer' objects}
        1    0.000    0.000    0.000    0.000 {built-in method posix.sysconf}
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:381(__subclasshook__)
        1    0.000    0.000    0.000    0.000 more.py:2880(run_length)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:518(Sakurai)
        1    0.000    0.000    0.000    0.000 decoder.py:236(MatHandler)
        1    0.000    0.000    0.000    0.000 hyper.py:918(HyperRep_log1)
        1    0.000    0.000    0.000    0.000 animation.py:657(AVConvBase)
        1    0.000    0.000    0.000    0.000 diophantine.py:146(DiophantineEquationType)
        1    0.000    0.000    0.000    0.000 ase.py:55(MSONAtoms)
        1    0.000    0.000    0.000    0.000 polynomials.py:1108(hermite_prob)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 decomp_schur.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ideals.py:282(ModuleImplementedIdeal)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:181(_ndptr)
        1    0.000    0.000    0.000    0.000 linear_relu.py:116(LinearTanh)
        1    0.000    0.000    0.000    0.000 outputs.py:3969(Elfcar)
        1    0.000    0.000    0.000    0.000 _covariance.py:538(CovViaCholesky)
        1    0.000    0.000    0.000    0.000 extract.py:1(<module>)
        1    0.000    0.000    0.000    0.000 activation.py:568(SELU)
        1    0.000    0.000    0.000    0.000 facts.py:135(apply_beta_to_alpha_route)
        1    0.000    0.000    0.000    0.000 loss.py:726(HingeEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2443(__init__)
        1    0.000    0.000    0.000    0.000 tensor.py:1270(TensorIndex)
        1    0.000    0.000    0.000    0.000 numbers.py:277(lucas)
        1    0.000    0.000    0.000    0.000 idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hyper.py:959(HyperRep_asin1)
        1    0.000    0.000    0.000    0.000 backend_tools.py:459(ToolMinorGrid)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:960(betaprime_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2380(fatiguelife_gen)
        1    0.000    0.000    0.000    0.000 fitpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mg_operation.py:10(MagneticGroupOp)
        1    0.000    0.000    0.000    0.000 composition.py:1400(ChemicalPotential)
        1    0.000    0.000    0.000    0.000 _util.py:1062(_RichResult)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9998(triang_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:408(Deprecated)
        1    0.000    0.000    0.000    0.000 bezier.py:182(BezierSegment)
        1    0.000    0.000    0.000    0.000 backend_registration.py:1(<module>)
        1    0.000    0.000    0.000    0.000 index_tricks.py:255(__init__)
       13    0.000    0.000    0.000    0.000 fromnumeric.py:195(_reshape_dispatcher)
        1    0.000    0.000    0.000    0.000 activation.py:109(LeakyReLU)
        1    0.000    0.000    0.000    0.000 spglib.py:254(SpglibMagneticDataset)
        1    0.000    0.000    0.000    0.000 transpose.py:5(Transpose)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.set_typeDict}
        8    0.000    0.000    0.000    0.000 animation.py:106(register)
        1    0.000    0.000    0.000    0.000 _fortran.py:33(FortranFile)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7473(kappa3_gen)
        1    0.000    0.000    0.000    0.000 zeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7553(moyal_gen)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:196(AAA)
        1    0.000    0.000    0.000    0.000 image.py:841(AxesImage)
        1    0.000    0.000    0.000    0.000 request.py:1050(HTTPBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:159(ChunkStream)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:9(FunctionMatrix)
        1    0.000    0.000    0.000    0.000 _multivariate.py:877(multivariate_normal_frozen)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1151(MeijerShiftD)
        1    0.000    0.000    0.000    0.000 operations.py:487(LatticeOp)
        1    0.000    0.000    0.000    0.000 utils.py:183(DisableOnWriteError)
        1    0.000    0.000    0.000    0.000 _type_utils.py:338(<dictcomp>)
        1    0.000    0.000    0.000    0.000 representer.py:383(Representer)
        2    0.000    0.000    0.000    0.000 Files_in.py:4(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:2091(primeomega)
        1    0.000    0.000    0.000    0.000 polynomials.py:1006(hermite)
        1    0.000    0.000    0.000    0.000 numbers.py:3545(NumberSymbol)
        1    0.000    0.000    0.000    0.000 __init__.py:764(Grouper)
        1    0.000    0.000    0.000    0.000 _tqdm_pandas.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4881(multivariate_hypergeom_gen)
        1    0.000    0.000    0.000    0.000 complexes.py:820(conjugate)
        1    0.000    0.000    0.000    0.000 spline.py:1(<module>)
        3    0.000    0.000    0.000    0.000 units.py:791(unitized)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:865(loggamma)
        1    0.000    0.000    0.000    0.000 dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 locks.py:158(Event)
        1    0.000    0.000    0.000    0.000 padding.py:31(ConstantPad1d)
        1    0.000    0.000    0.000    0.000 colorbar.py:289(_ColorbarLogLocator)
        1    0.000    0.000    0.000    0.000 importer.py:170(_SysImporter)
        1    0.000    0.000    0.000    0.000 __init__.py:99(version_info)
        1    0.000    0.000    0.000    0.000 hyper.py:1031(HyperRep_sqrts2)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3858(random_correlation_gen)
        1    0.000    0.000    0.000    0.000 error_functions.py:2327(FresnelIntegral)
        1    0.000    0.000    0.000    0.000 waveforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lil.py:1(<module>)
        1    0.000    0.000    0.000    0.000 constraints.py:515(_Cat)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3112(_moment_methods)
        1    0.000    0.000    0.000    0.000 tnc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 normalization.py:198(GroupNorm)
        1    0.000    0.000    0.000    0.000 blas.py:249(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _utils.py:25(EventMetrics)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1367(StructuredVoidFormat)
        1    0.000    0.000    0.000    0.000 _ode.py:781(IntegratorBase)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:228(IntervalPrinter)
        1    0.000    0.000    0.000    0.000 swa_utils.py:13(AveragedModel)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8315(lomax_gen)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:11(SparseNDimArray)
        1    0.000    0.000    0.000    0.000 units.py:148(Unit)
        1    0.000    0.000    0.000    0.000 gzip.py:75(_PaddedFile)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:40(ExportDiagnostic)
        1    0.000    0.000    0.000    0.000 grad_mode.py:258(_force_original_view_tracking)
        1    0.000    0.000    0.000    0.000 polynomials.py:28(OrthogonalPolynomial)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:211(AddrlistClass)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:196(kstwo_gen)
        1    0.000    0.000    0.000    0.000 lazy.py:53(LazyModuleMixin)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5508(FoldedDistribution)
        1    0.000    0.000    0.000    0.000 markers.py:52(Environment)
        1    0.000    0.000    0.000    0.000 spfun_stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unicode.py:258(Katakana)
        1    0.000    0.000    0.000    0.000 mio5_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:159(TLSVersion)
        3    0.000    0.000    0.000    0.000 rcsetup.py:520(_update_savefig_format)
        1    0.000    0.000    0.000    0.000 spectral.py:1(<module>)
        1    0.000    0.000    0.000    0.000 function.py:410(Function)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6351(levy_l_gen)
        1    0.000    0.000    0.000    0.000 compressed.py:1(<module>)
        1    0.000    0.000    0.000    0.000 worker.py:124(_ResumeIteration)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8080(nct_gen)
        1    0.000    0.000    0.000    0.000 graph_drawer.py:322(FxGraphDrawer)
        1    0.000    0.000    0.000    0.000 modules.py:260(FreeModuleElement)
        1    0.000    0.000    0.000    0.000 pydoc.py:1129(__init__)
        1    0.000    0.000    0.000    0.000 sg_operation.py:11(SpaceGroupOp)
        1    0.000    0.000    0.000    0.000 dropout.py:8(_DropoutNd)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3936(__init__)
        1    0.000    0.000    0.000    0.000 sf_error.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph.py:607(_PyTreeCodeGen)
        1    0.000    0.000    0.000    0.000 splitter_base.py:81(FxNetAccNodesFinder)
        1    0.000    0.000    0.000    0.000 piecewise.py:19(ExprCondPair)
        1    0.000    0.000    0.000    0.000 linear_relu.py:6(LinearReLU)
        1    0.000    0.000    0.000    0.000 numbers.py:1959(mobius)
      2/1    0.000    0.000    0.000    0.000 {method 'seekable' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 callable.py:18(MapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 logistic_normal.py:8(LogisticNormal)
        1    0.000    0.000    0.000    0.000 events.py:98(TimerHandle)
        1    0.000    0.000    0.000    0.000 transforms.py:2380(CompositeAffine2D)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8917(powernorm_gen)
        1    0.000    0.000    0.000    0.000 _parser.py:219(_resultbase)
        1    0.000    0.000    0.000    0.000 ImageFile.py:458(StubImageFile)
        4    0.000    0.000    0.000    0.000 timeutils.py:53(timethis)
        1    0.000    0.000    0.000    0.000 docinfo.py:95(Tag)
        1    0.000    0.000    0.000    0.000 tarfile.py:600(_FileInFile)
        1    0.000    0.000    0.000    0.000 _cubature.py:535(_VariableTransform)
        1    0.000    0.000    0.000    0.000 ellipse.py:1477(Circle)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:386(<dictcomp>)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:864(Rem)
        1    0.000    0.000    0.000    0.000 mstats_extras.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bessel.py:1723(airyaiprime)
        1    0.000    0.000    0.000    0.000 hyper.py:1062(HyperRep_log2)
        1    0.000    0.000    0.000    0.000 axis3d.py:484(ZAxis)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6247(levy_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5135(geninvgauss_gen)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1384(TreeBuilder)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1567(poisson_binom_gen)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:584(dirichlet_eta)
        1    0.000    0.000    0.000    0.000 conv_relu.py:69(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 loss.py:104(NLLLoss)
        1    0.000    0.000    0.000    0.000 rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parse.py:353(_fix_result_transcoding)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:412(AngleAddr)
        1    0.000    0.000    0.000    0.000 random.py:215(__init_subclass__)
        1    0.000    0.000    0.000    0.000 fourier.py:475(FiniteFourierSeries)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:51(FuncTorchInterpreter)
        1    0.000    0.000    0.000    0.000 complexes.py:954(adjoint)
        1    0.000    0.000    0.000    0.000 _rules.py:42(_MissingCustomSymbolicFunction)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:99(_Formatter)
        1    0.000    0.000    0.000    0.000 _compression.py:33(DecompressReader)
        1    0.000    0.000    0.000    0.000 measurements.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 hyperexpand.py:608(G_Function)
        1    0.000    0.000    0.000    0.000 mock.py:2891(PropertyMock)
        1    0.000    0.000    0.000    0.000 special.py:174(GenericIdentity)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11743(argus_gen)
        1    0.000    0.000    0.000    0.000 single.py:1297(SeparableReduced)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:94(RelaxedBernoulli)
        1    0.000    0.000    0.000    0.000 formal.py:958(Coeff)
        4    0.000    0.000    0.000    0.000 bessel.py:385(c_memo)
        1    0.000    0.000    0.000    0.000 data_parallel.py:42(DataParallel)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:13(ScalarFloat)
        1    0.000    0.000    0.000    0.000 subprocess.py:115(Process)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1384(<listcomp>)
        1    0.000    0.000    0.000    0.000 outputs.py:3920(Chgcar)
        1    0.000    0.000    0.000    0.000 field.py:8(Field)
        1    0.000    0.000    0.000    0.000 headerregistry.py:260(UnstructuredHeader)
        1    0.000    0.000    0.000    0.000 transforms.py:900(StickBreakingTransform)
        1    0.000    0.000    0.000    0.000 transports.py:197(SubprocessTransport)
        1    0.000    0.000    0.000    0.000 pooling.py:497(AvgPool1d)
        6    0.000    0.000    0.000    0.000 core.py:3614(<genexpr>)
        1    0.000    0.000    0.000    0.000 loss.py:219(NLLLoss2d)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7864(ncf_gen)
        1    0.000    0.000    0.000    0.000 core.py:3810(WordEnd)
        1    0.000    0.000    0.000    0.000 _polyint.py:19(_Interpolator1D)
        1    0.000    0.000    0.000    0.000 _fit.py:41(FitResult)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:786(keys)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:683(Max)
        1    0.000    0.000    0.000    0.000 widgets.py:63(Widget)
        1    0.000    0.000    0.000    0.000 threading.py:359(notify)
        1    0.000    0.000    0.000    0.000 pydoc.py:1855(<listcomp>)
        4    0.000    0.000    0.000    0.000 numbers.py:2871(__neg__)
        1    0.000    0.000    0.000    0.000 utils.py:8(IterableWrapperIterDataPipe)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:508(alpha_gen)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:261(FixedQParamsFakeQuantize)
        3    0.000    0.000    0.000    0.000 __init__.py:421(<genexpr>)
        1    0.000    0.000    0.000    0.000 partitions.py:308(IntegerPartition)
        1    0.000    0.000    0.000    0.000 patches.py:2252(Sawtooth)
        3    0.000    0.000    0.000    0.000 datetime.py:2313(_create)
        1    0.000    0.000    0.000    0.000 colors.py:102(<dictcomp>)
        1    0.000    0.000    0.000    0.000 band_data_out.py:9(BandDataOut)
        1    0.000    0.000    0.000    0.000 exponential.py:139(exp_polar)
        1    0.000    0.000    0.000    0.000 headerregistry.py:327(AddressHeader)
        1    0.000    0.000    0.000    0.000 dataframes.py:371(CaptureDataFrameWithDataPipeOps)
        1    0.000    0.000    0.000    0.000 backend_tools.py:319(ToolCursorPosition)
        1    0.000    0.000    0.000    0.000 compat.py:38(ordereddict)
        1    0.000    0.000    0.000    0.000 core.py:4381(MatchFirst)
        1    0.000    0.000    0.000    0.000 error_functions.py:1669(Li)
        1    0.000    0.000    0.000    0.000 wavfile.py:31(SeekEmulatingReader)
        1    0.000    0.000    0.000    0.000 ops.py:153(<listcomp>)
        1    0.000    0.000    0.000    0.000 serialization.py:294(_open_zipfile_writer_buffer)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9889(trapezoid_gen)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5401(__init__)
        1    0.000    0.000    0.000    0.000 scanner.py:2211(RoundTripScannerSC)
       12    0.000    0.000    0.000    0.000 distance.py:1814(<lambda>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7066(maxwell_gen)
        1    0.000    0.000    0.000    0.000 factorials.py:664(FallingFactorial)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:8(ChannelShuffle)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:282(<listcomp>)
        1    0.000    0.000    0.000    0.000 single.py:1930(NthOrderReducible)
        1    0.000    0.000    0.000    0.000 pooling.py:171(MaxPool3d)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:36(_BarycentricRational)
       12    0.000    0.000    0.000    0.000 message.py:633(get_default_type)
        1    0.000    0.000    0.000    0.000 operations.py:38(__init__)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:160(MutableDenseNDimArray)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2511(f_gen)
        1    0.000    0.000    0.000    0.000 _typing.py:7(RingElement)
        1    0.000    0.000    0.000    0.000 rnn.py:1043(GRUCell)
        1    0.000    0.000    0.000    0.000 setupcfg.py:520(ConfigMetadataHandler)
        1    0.000    0.000    0.000    0.000 {built-in method _thread._set_sentinel}
        1    0.000    0.000    0.000    0.000 mathtext.py:1731(Vlist)
        1    0.000    0.000    0.000    0.000 ticker.py:2735(LogitLocator)
        1    0.000    0.000    0.000    0.000 polynomials.py:561(chebyshevu)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1962(dweibull_gen)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:706(Value)
        1    0.000    0.000    0.000    0.000 animation.py:1452(ArtistAnimation)
        4    0.000    0.000    0.000    0.000 results.py:266(__len__)
        1    0.000    0.000    0.000    0.000 fold.py:156(Unfold)
        1    0.000    0.000    0.000    0.000 dataset.py:181(TensorDataset)
        1    0.000    0.000    0.000    0.000 getlimits.py:32(MachArLike)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5932(landau_gen)
        1    0.000    0.000    0.000    0.000 error_functions.py:1765(TrigonometricIntegral)
        3    0.000    0.000    0.000    0.000 __init__.py:428(__init__)
        1    0.000    0.000    0.000    0.000 radau.py:179(Radau)
        1    0.000    0.000    0.000    0.000 polyoptions.py:327(Sort)
        1    0.000    0.000    0.000    0.000 sharding.py:25(ShardingFilterIterDataPipe)
        1    0.000    0.000    0.000    0.000 units.py:682(_my_partial)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:330(_constant)
        1    0.000    0.000    0.000    0.000 streams.py:181(StreamReaderProtocol)
        1    0.000    0.000    0.000    0.000 activation.py:849(Softshrink)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3448(atan2)
        1    0.000    0.000    0.000    0.000 _factories.py:55(_TzStrFactory)
        3    0.000    0.000    0.000    0.000 zipfile.py:1872(close)
        1    0.000    0.000    0.000    0.000 __init__.py:758(is_url)
        1    0.000    0.000    0.000    0.000 outputs.py:3894(Locpot)
        1    0.000    0.000    0.000    0.000 core.py:117(<listcomp>)
        1    0.000    0.000    0.000    0.000 _atfork.py:15(_register)
        1    0.000    0.000    0.000    0.000 _resampling.py:740(MonteCarloTestResult)
        1    0.000    0.000    0.000    0.000 epathtools.py:6(EPath)
        1    0.000    0.000    0.000    0.000 dense.py:115(MutableDenseMatrix)
        6    0.000    0.000    0.000    0.000 profiler_util.py:348(_attr_formatter)
        1    0.000    0.000    0.000    0.000 polyoptions.py:638(Frac)
        1    0.000    0.000    0.000    0.000 padding.py:173(_ReflectionPadNd)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:232(LinearTriInterpolator)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1511(chi_gen)
        1    0.000    0.000    0.000    0.000 utils.py:97(lazy_property)
        1    0.000    0.000    0.000    0.000 _utils.py:93(BasicEvaluation)
        4    0.000    0.000    0.000    0.000 core.py:3417(dtype)
        1    0.000    0.000    0.000    0.000 docinfo.py:25(Version)
        1    0.000    0.000    0.000    0.000 header.py:541(_Accumulator)
        1    0.000    0.000    0.000    0.000 mathtext.py:2107(Ship)
        1    0.000    0.000    0.000    0.000 autograd_function.py:536(CtxWithSavedTensors)
        1    0.000    0.000    0.000    0.000 dataloader.py:661(_SingleProcessDataLoaderIter)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:870(Terminal)
        1    0.000    0.000    0.000    0.000 request.py:624(HTTPErrorProcessor)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:965(__new__)
        1    0.000    0.000    0.000    0.000 _type_utils.py:293(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _pep440.py:165(LegacyVersion)
        1    0.000    0.000    0.000    0.000 header.py:179(Header)
        1    0.000    0.000    0.000    0.000 backend_tools.py:514(ToolXScale)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:81(ExportDiagnosticEngine)
        1    0.000    0.000    0.000    0.000 polar.py:464(_ThetaShift)
        1    0.000    0.000    0.000    0.000 core.py:5392(SkipTo)
        1    0.000    0.000    0.000    0.000 function.py:16(FunctionCtx)
        5    0.000    0.000    0.000    0.000 core.py:3142(re_match)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4200(gompertz_gen)
        1    0.000    0.000    0.000    0.000 outputs.py:3699(VolumetricData)
        2    0.000    0.000    0.000    0.000 Image.py:3754(register_extension)
        1    0.000    0.000    0.000    0.000 numbers.py:267(Rational)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6964(normal_inverse_gamma_gen)
        1    0.000    0.000    0.000    0.000 zipfile.py:782(_Tellable)
        7    0.000    0.000    0.000    0.000 {method 'truncate' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 _backend.py:36(_backend_from_arg)
        1    0.000    0.000    0.000    0.000 diagonal.py:9(DiagonalMatrix)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9274(rice_gen)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4186(__init__)
        1    0.000    0.000    0.000    0.000 single.py:646(AlmostLinear)
        1    0.000    0.000    0.000    0.000 mock.py:1084(CallableMixin)
        1    0.000    0.000    0.000    0.000 more.py:270(peekable)
        1    0.000    0.000    0.000    0.000 __init__.py:858(Prepared)
        1    0.000    0.000    0.000    0.000 transforms.py:670(AbsTransform)
        1    0.000    0.000    0.000    0.000 hb.py:414(HBFile)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1395(_TensorExtractor)
        1    0.000    0.000    0.000    0.000 _dok.py:589(dok_matrix)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10754(tukeylambda_gen)
        1    0.000    0.000    0.000    0.000 sequences.py:415(SeqExpr)
        1    0.000    0.000    0.000    0.000 pathlib.py:129(<setcomp>)
        2    0.000    0.000    0.000    0.000 __init__.py:132(DistutilsLoader)
        1    0.000    0.000    0.000    0.000 _arraytools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3816(gengamma_gen)
        1    0.000    0.000    0.000    0.000 charset.py:167(Charset)
        2    0.000    0.000    0.000    0.000 {method 'cache_clear' of 'functools._lru_cache_wrapper' objects}
        1    0.000    0.000    0.000    0.000 _pep440.py:149(__ge__)
        1    0.000    0.000    0.000    0.000 polar.py:720(_WedgeBbox)
        1    0.000    0.000    0.000    0.000 __init__.py:7(ProjectionRegistry)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1171(randint_gen)
        3    0.000    0.000    0.000    0.000 wrappers.py:204(<listcomp>)
        1    0.000    0.000    0.000    0.000 ImageFile.py:488(Parser)
        1    0.000    0.000    0.000    0.000 transforms.py:2106(BlendedGenericTransform)
        1    0.000    0.000    0.000    0.000 factorials.py:503(RisingFactorial)
        1    0.000    0.000    0.000    0.000 polynomials.py:889(assoc_legendre)
        1    0.000    0.000    0.000    0.000 polynomials.py:45(jacobi)
        1    0.000    0.000    0.000    0.000 sets.py:2261(DisjointUnion)
        1    0.000    0.000    0.000    0.000 _compression.py:16(_check_can_read)
        1    0.000    0.000    0.000    0.000 scanner.py:1979(CommentBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9471(recipinvgauss_gen)
        1    0.000    0.000    0.000    0.000 polynomials.py:1210(laguerre)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2062(_num_parameterizations)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:393(WORLD)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:234(<lambda>)
        1    0.000    0.000    0.000    0.000 normalization.py:63(CrossMapLRN2d)
        1    0.000    0.000    0.000    0.000 trigonometric.py:45(TrigonometricFunction)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5777(johnsonsb_gen)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 polyoptions.py:576(Modulus)
        1    0.000    0.000    0.000    0.000 orderings.py:10(MonomialOrder)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:11(HessianUpdateStrategy)
        1    0.000    0.000    0.000    0.000 boolalg.py:1370(ITE)
        1    0.000    0.000    0.000    0.000 backend_tools.py:474(ToolFullScreen)
        1    0.000    0.000    0.000    0.000 mock.py:2441(__new__)
        1    0.000    0.000    0.000    0.000 animation.py:534(PillowWriter)
        1    0.000    0.000    0.000    0.000 utils.py:104(_Deprecate)
        1    0.000    0.000    0.000    0.000 boolalg.py:856(Not)
        1    0.000    0.000    0.000    0.000 feedparser.py:45(BufferedSubFile)
        1    0.000    0.000    0.000    0.000 collections.py:1190(BrokenBarHCollection)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:408(Pow)
        1    0.000    0.000    0.000    0.000 dviread.py:955(Encoding)
        1    0.000    0.000    0.000    0.000 collections.py:1769(PatchCollection)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:842(SupportsInt)
        1    0.000    0.000    0.000    0.000 _datasource.py:196(DataSource)
        1    0.000    0.000    0.000    0.000 base.py:28(OdeSolver)
        7    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISDIR}
        1    0.000    0.000    0.000    0.000 mathtext.py:1899(GlueSpec)
        1    0.000    0.000    0.000    0.000 __init__.py:44(__init__)
        1    0.000    0.000    0.000    0.000 filelist.py:335(_UniqueDirs)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11491(halfgennorm_gen)
        1    0.000    0.000    0.000    0.000 core.py:1283(_replace_dtype_fields_recursive)
        1    0.000    0.000    0.000    0.000 patches.py:2923(_Curve)
        1    0.000    0.000    0.000    0.000 _stats_py.py:5955(TtestResult)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2172(_sum_dispatcher)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1105(_ListDataStream)
        2    0.000    0.000    0.000    0.000 constraints.py:315(__init__)
        1    0.000    0.000    0.000    0.000 modules.py:160(ModuleElement)
        1    0.000    0.000    0.000    0.000 observer.py:520(MovingAverageMinMaxObserver)
        2    0.000    0.000    0.000    0.000 weakref.py:352(__init__)
        1    0.000    0.000    0.000    0.000 line.py:1578(Segment)
        1    0.000    0.000    0.000    0.000 polynomials.py:773(legendre)
        1    0.000    0.000    0.000    0.000 json.py:713(MontyDecoder)
        1    0.000    0.000    0.000    0.000 dataloader.py:567(_BaseDataLoaderIter)
        1    0.000    0.000    0.000    0.000 _VF.py:22(__init__)
        1    0.000    0.000    0.000    0.000 permutation.py:168(MatrixPermute)
        1    0.000    0.000    0.000    0.000 gruntz.py:155(SubsSet)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3571(ShowBase)
        1    0.000    0.000    0.000    0.000 backend_tools.py:728(SaveFigureBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8974(rdist_gen)
        1    0.000    0.000    0.000    0.000 _lbfgsb_py.py:513(LbfgsInvHessProduct)
        1    0.000    0.000    0.000    0.000 observer.py:804(MovingAveragePerChannelMinMaxObserver)
        7    0.000    0.000    0.000    0.000 numeric.py:1455(<listcomp>)
        9    0.000    0.000    0.000    0.000 core.py:4247(<genexpr>)
        1    0.000    0.000    0.000    0.000 activation.py:1408(Softmax)
        1    0.000    0.000    0.000    0.000 batchnorm.py:78(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 test.py:50(<listcomp>)
       10    0.000    0.000    0.000    0.000 contextlib.py:65(_recreate_cm)
        1    0.000    0.000    0.000    0.000 encoder.py:74(JSONEncoder)
        2    0.000    0.000    0.000    0.000 pyplot.py:211(_get_required_interactive_framework)
        2    0.000    0.000    0.000    0.000 reprlib.py:9(recursive_repr)
        1    0.000    0.000    0.000    0.000 request.py:426(OpenerDirector)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:757(MikotaK)
        1    0.000    0.000    0.000    0.000 runners.py:21(Runner)
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'set' objects}
        1    0.000    0.000    0.000    0.000 bessel.py:1880(airybiprime)
        1    0.000    0.000    0.000    0.000 {built-in method _ctypes.byref}
        1    0.000    0.000    0.000    0.000 collections.py:934(PathCollection)
        1    0.000    0.000    0.000    0.000 error_functions.py:912(erfcinv)
        1    0.000    0.000    0.000    0.000 ssl.py:185(_TLSAlertType)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5342(Coset)
        1    0.000    0.000    0.000    0.000 functions.py:89(defun_static)
        4    0.000    0.000    0.000    0.000 dataclasses.py:566(<genexpr>)
        1    0.000    0.000    0.000    0.000 sequences.py:1020(SeqAdd)
        1    0.000    0.000    0.000    0.000 _adapters.py:48(SpecPath)
        1    0.000    0.000    0.000    0.000 quadrature.py:5(QuadratureRule)
        1    0.000    0.000    0.000    0.000 conv_relu.py:119(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2972(weibull_max_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1686(cosine_gen)
        1    0.000    0.000    0.000    0.000 backend_tools.py:404(ToolQuitAll)
        1    0.000    0.000    0.000    0.000 _resampling.py:257(BootstrapResult)
        1    0.000    0.000    0.000    0.000 pyplot.py:92(<dictcomp>)
        2    0.000    0.000    0.000    0.000 cache.py:183(LazyFunctionMeta)
        1    0.000    0.000    0.000    0.000 _infra.py:203(ThreadFlowLocation)
        1    0.000    0.000    0.000    0.000 _interface.py:593(_CustomLinearOperator)
        1    0.000    0.000    0.000    0.000 factorials.py:383(factorial2)
        1    0.000    0.000    0.000    0.000 loss.py:1032(CrossEntropyLoss)
        1    0.000    0.000    0.000    0.000 frontend.py:315(Builder)
        1    0.000    0.000    0.000    0.000 mathtext.py:755(UnicodeFonts)
        1    0.000    0.000    0.000    0.000 reduction.py:251(AbstractReducer)
        1    0.000    0.000    0.000    0.000 cnf.py:394(EncodedCNF)
        1    0.000    0.000    0.000    0.000 context.py:220(Process)
        1    0.000    0.000    0.000    0.000 observer.py:1393(NoopObserver)
        5    0.000    0.000    0.000    0.000 datetime.py:51(_days_in_month)
        1    0.000    0.000    0.000    0.000 backend_tools.py:248(SetCursorBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9591(skewcauchy_gen)
       12    0.000    0.000    0.000    0.000 core.py:970(clear)
        9    0.000    0.000    0.000    0.000 typing.py:495(__repr__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:964(create_module)
        3    0.000    0.000    0.000    0.000 <frozen _collections_abc>:812(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._jit_init}
        1    0.000    0.000    0.000    0.000 ordinals.py:5(OmegaPower)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2249(exponweib_gen)
        1    0.000    0.000    0.000    0.000 activation.py:80(ELU)
        1    0.000    0.000    0.000    0.000 relational.py:1150(LessThan)
        1    0.000    0.000    0.000    0.000 threading.py:1421(_DummyThread)
        1    0.000    0.000    0.000    0.000 rrule.py:94(rrulebase)
        1    0.000    0.000    0.000    0.000 core.py:5917(Dict)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:310(elliptic_pi)
        1    0.000    0.000    0.000    0.000 bessel.py:940(jn)
        1    0.000    0.000    0.000    0.000 extension.py:38(Extension)
        1    0.000    0.000    0.000    0.000 error_functions.py:2710(_erfs)
        1    0.000    0.000    0.000    0.000 errors.py:93(NonPrintableDefect)
        1    0.000    0.000    0.000    0.000 csv.py:23(Dialect)
        1    0.000    0.000    0.000    0.000 rnn.py:40(RNNCellBase)
        1    0.000    0.000    0.000    0.000 rnn.py:492(GRU)
        1    0.000    0.000    0.000    0.000 units.py:153(DecimalConverter)
        1    0.000    0.000    0.000    0.000 __init__.py:23(get_projection_names)
        1    0.000    0.000    0.000    0.000 numbers.py:1662(divisor_sigma)
        1    0.000    0.000    0.000    0.000 constraints.py:328(_GreaterThanEq)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:24(mathieus)
        1    0.000    0.000    0.000    0.000 beta_functions.py:282(betainc_regularized)
        1    0.000    0.000    0.000    0.000 numbers.py:1849(jacobi_symbol)
        1    0.000    0.000    0.000    0.000 core.py:376(dtype)
        1    0.000    0.000    0.000    0.000 spglib.py:365(SpaceGroupType)
        1    0.000    0.000    0.000    0.000 comments.py:230(LineCol)
        1    0.000    0.000    0.000    0.000 _morestats.py:2625(_ABW)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4297(PearsonRResult)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1087(CyclicLR)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:103(ksone_gen)
        1    0.000    0.000    0.000    0.000 dist.py:75(__getattr__)
        1    0.000    0.000    0.000    0.000 ElementTree.py:477(QName)
        3    0.000    0.000    0.000    0.000 core.py:1362(getmask)
        1    0.000    0.000    0.000    0.000 _info.py:33(__array_namespace_info__)
        1    0.000    0.000    0.000    0.000 string.py:188(Formatter)
        2    0.000    0.000    0.000    0.000 __init__.py:87(__setattr__)
        1    0.000    0.000    0.000    0.000 polynomials.py:290(gegenbauer)
        1    0.000    0.000    0.000    0.000 beta_functions.py:173(betainc)
        1    0.000    0.000    0.000    0.000 __init__.py:230(_remove_shim)
        1    0.000    0.000    0.000    0.000 _arffread.py:256(DateAttribute)
        1    0.000    0.000    0.000    0.000 events.py:161(AbstractServer)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:890(_PatchedFnDel)
        1    0.000    0.000    0.000    0.000 activation.py:1492(LogSoftmax)
        1    0.000    0.000    0.000    0.000 threading.py:103(_RLock)
        1    0.000    0.000    0.000    0.000 computed_entries.py:112(ConstantEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:20(LambdaPrinter)
        1    0.000    0.000    0.000    0.000 polyoptions.py:512(Split)
        1    0.000    0.000    0.000    0.000 scanner.py:2044(ScannedComments)
        1    0.000    0.000    0.000    0.000 Image.py:3018(ImagePointHandler)
        1    0.000    0.000    0.000    0.000 blocking_input.py:32(BlockingInput)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:268(MatlabOpaque)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:333(MailboxList)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:238(_Interval)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:197(betabinom_gen)
        3    0.000    0.000    0.000    0.000 _add_docstring.py:11(add_newdoc)
        1    0.000    0.000    0.000    0.000 function.py:826(AppliedUndef)
        3    0.000    0.000    0.000    0.000 utils.py:16(<genexpr>)
        1    0.000    0.000    0.000    0.000 _trace.py:565(TracerWarning)
        1    0.000    0.000    0.000    0.000 single.py:1203(Separable)
        1    0.000    0.000    0.000    0.000 companion.py:8(CompanionMatrix)
        1    0.000    0.000    0.000    0.000 ImageFile.py:449(StubHandler)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._using_numpy2_behavior}
        1    0.000    0.000    0.000    0.000 puiseux.py:59(PuiseuxRing)
        1    0.000    0.000    0.000    0.000 _multivariate.py:123(_PSD)
        2    0.000    0.000    0.000    0.000 sdm.py:1447(unop_dict)
        1    0.000    0.000    0.000    0.000 complexes.py:1105(periodic_argument)
        1    0.000    0.000    0.000    0.000 _functools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:171(MatrixPowerOperator)
        4    0.000    0.000    0.000    0.000 _array_api.py:131(array_namespace)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3117(_zero)
        1    0.000    0.000    0.000    0.000 _vertex.py:247(VertexCacheField)
        1    0.000    0.000    0.000    0.000 subprocess.py:163(TimeoutExpired)
        1    0.000    0.000    0.000    0.000 _functions.py:37(ReduceAddCoalesced)
        1    0.000    0.000    0.000    0.000 loss.py:1336(MultiMarginLoss)
        1    0.000    0.000    0.000    0.000 tempfile.py:132(_RandomNameSequence)
        1    0.000    0.000    0.000    0.000 _typing.py:44(JustFloat)
        1    0.000    0.000    0.000    0.000 pycode.py:837(SymPyPrinter)
        1    0.000    0.000    0.000    0.000 activation.py:110(RReLU)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1001(_DOF_estimator)
        1    0.000    0.000    0.000    0.000 conv_fused.py:539(ConvBnReLU2d)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:75(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 ring.py:9(Ring)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2632(foldnorm_gen)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6468(__init__)
        1    0.000    0.000    0.000    0.000 package_importer.py:697(_PackageResourceReader)
        1    0.000    0.000    0.000    0.000 outputs.py:1766(BSVasprun)
        1    0.000    0.000    0.000    0.000 _VF.py:19(VFModule)
        1    0.000    0.000    0.000    0.000 _resampling.py:2105(MonteCarloMethod)
        2    0.000    0.000    0.000    0.000 _parser.py:96(checkgroup)
        1    0.000    0.000    0.000    0.000 dates.py:1052(DateLocator)
        1    0.000    0.000    0.000    0.000 more.py:3665(callback_iter)
       11    0.000    0.000    0.000    0.000 {built-in method io.text_encoding}
        1    0.000    0.000    0.000    0.000 transforms.py:1696(AffineBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6099(laplace_asymmetric_gen)
        1    0.000    0.000    0.000    0.000 kind.py:165(_BooleanKind)
        1    0.000    0.000    0.000    0.000 _ops.py:44(PyOperatorABC)
        3    0.000    0.000    0.000    0.000 _version.py:78(_compare_version)
        1    0.000    0.000    0.000    0.000 _cubic.py:569(CubicSpline)
        6    0.000    0.000    0.000    0.000 core.py:5906(postParse)
        1    0.000    0.000    0.000    0.000 computed_entries.py:168(CompositionEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 sequences.py:466(SeqPer)
        1    0.000    0.000    0.000    0.000 polyerrors.py:155(PolificationFailed)
        1    0.000    0.000    0.000    0.000 _mangling.py:9(PackageMangler)
        3    0.000    0.000    0.000    0.000 __init__.py:919(__init__)
        1    0.000    0.000    0.000    0.000 assumptions.py:464(StdFactKB)
        5    0.000    0.000    0.000    0.000 six.py:186(_get_module)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4387(TransformedDistribution)
        1    0.000    0.000    0.000    0.000 conv.py:90(Conv2d)
        1    0.000    0.000    0.000    0.000 datetime.py:1280(IsoCalendarDate)
        1    0.000    0.000    0.000    0.000 six.py:169(_SixMetaPathImporter)
        1    0.000    0.000    0.000    0.000 pycode.py:765(<dictcomp>)
        1    0.000    0.000    0.000    0.000 selectors.py:290(SelectSelector)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1449(PickEvent)
        1    0.000    0.000    0.000    0.000 polyoptions.py:543(Extension)
        1    0.000    0.000    0.000    0.000 padding.py:184(ReflectionPad1d)
        7    0.000    0.000    0.000    0.000 typing.py:406(__init_subclass__)
        1    0.000    0.000    0.000    0.000 animation.py:561(FFMpegBase)
        1    0.000    0.000    0.000    0.000 _cubature.py:589(_InfiniteLimitsTransform)
        1    0.000    0.000    0.000    0.000 memmap.py:22(memmap)
        1    0.000    0.000    0.000    0.000 loss.py:228(PoissonNLLLoss)
        1    0.000    0.000    0.000    0.000 bdf.py:72(BDF)
        1    0.000    0.000    0.000    0.000 transforms.py:2624(AffineDeltaTransform)
        1    0.000    0.000    0.000    0.000 cm.py:75(_DeprecatedCmapDictWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:123(DeprecatedTuple)
        1    0.000    0.000    0.000    0.000 mock.py:2069(MagicMixin)
        5    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getArchFlags}
        1    0.000    0.000    0.000    0.000 numbers.py:4020(Catalan)
        1    0.000    0.000    0.000    0.000 _linprog_doc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1729(udivisor_sigma)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5674(jf_skew_t_gen)
        1    0.000    0.000    0.000    0.000 complexes.py:1020(polar_lift)
        1    0.000    0.000    0.000    0.000 headerregistry.py:504(ContentTransferEncodingHeader)
        1    0.000    0.000    0.000    0.000 __init__.py:488(StringTemplateStyle)
        1    0.000    0.000    0.000    0.000 _optimize.py:2439(Brent)
        1    0.000    0.000    0.000    0.000 pydoc.py:523(HTMLRepr)
        1    0.000    0.000    0.000    0.000 _ops.py:116(__init__)
        1    0.000    0.000    0.000    0.000 streamplot.py:249(DomainMap)
        1    0.000    0.000    0.000    0.000 transforms.py:2088(_BlendedMixin)
        1    0.000    0.000    0.000    0.000 loader.py:55(Loader)
        1    0.000    0.000    0.000    0.000 timeit.py:84(Timer)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:25(_maybe_view_as_subclass)
        1    0.000    0.000    0.000    0.000 diophantine.py:958(GeneralSumOfSquares)
        1    0.000    0.000    0.000    0.000 Orbit_spd_manager.py:11(orbit_spd_manager)
        2    0.000    0.000    0.000    0.000 {method 'title' of 'str' objects}
        1    0.000    0.000    0.000    0.000 subprocess.py:17(SubprocessStreamProtocol)
        5    0.000    0.000    0.000    0.000 transforms.py:224(_noconds_)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1255(multigamma)
        1    0.000    0.000    0.000    0.000 pathlib.py:231(_PosixFlavour)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:52(normcase)
        1    0.000    0.000    0.000    0.000 determinant.py:9(Determinant)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1197(<listcomp>)
        1    0.000    0.000    0.000    0.000 _infra.py:230(Graph)
        1    0.000    0.000    0.000    0.000 calendar.py:412(HTMLCalendar)
        1    0.000    0.000    0.000    0.000 net_min_base.py:58(_MinimizerSettingBase)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:810(__len__)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1140(_fdat)
        1    0.000    0.000    0.000    0.000 axis.py:409(XTick)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1104(boltzmann_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12129(studentized_range_gen)
        1    0.000    0.000    0.000    0.000 json.py:552(MontyEncoder)
        1    0.000    0.000    0.000    0.000 core.py:2589(MaskedIterator)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1849(_nchypergeom_gen)
        2    0.000    0.000    0.000    0.000 constraints.py:332(__init__)
        1    0.000    0.000    0.000    0.000 _kdtree.py:327(innernode)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:118(GradInterpreter)
        1    0.000    0.000    0.000    0.000 normalization.py:81(InstanceNorm1d)
        1    0.000    0.000    0.000    0.000 version.py:69(_BaseVersion)
        1    0.000    0.000    0.000    0.000 dataset.py:252(ChainDataset)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:19(RelativeRiskResult)
        1    0.000    0.000    0.000    0.000 limits.py:132(Limit)
        1    0.000    0.000    0.000    0.000 graph.py:214(PythonCode)
        1    0.000    0.000    0.000    0.000 _docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 diagonal.py:157(DiagMatrix)
        1    0.000    0.000    0.000    0.000 boolalg.py:281(BooleanTrue)
        1    0.000    0.000    0.000    0.000 core.py:877(_DomainGreaterEqual)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:343(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1483(dlaplace_gen)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:765(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 relational.py:909(GreaterThan)
        1    0.000    0.000    0.000    0.000 combining.py:238(_ChildDataPipe)
        1    0.000    0.000    0.000    0.000 colors.py:1174(LogNorm)
        2    0.000    0.000    0.000    0.000 representer.py:137(add_multi_representer)
        1    0.000    0.000    0.000    0.000 modules.py:1106(SubModulePolyRing)
        1    0.000    0.000    0.000    0.000 modules.py:286(FreeModule)
        1    0.000    0.000    0.000    0.000 evalf.py:1560(EvalfMixin)
        1    0.000    0.000    0.000    0.000 hierarchy.py:1105(__init__)
        1    0.000    0.000    0.000    0.000 _functions.py:180(CrossMapLRN2d)
        1    0.000    0.000    0.000    0.000 discovery.py:185(ModuleFinder)
        1    0.000    0.000    0.000    0.000 category.py:133(StrCategoryFormatter)
        1    0.000    0.000    0.000    0.000 _ode.py:1049(zvode)
        1    0.000    0.000    0.000    0.000 _ops.py:418(OpOverloadPacket)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4346(_shift_scale_distribution_function)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:775(_Parameterization)
        1    0.000    0.000    0.000    0.000 sequences.py:1126(SeqMul)
        1    0.000    0.000    0.000    0.000 boolalg.py:1202(Implies)
        1    0.000    0.000    0.000    0.000 gzip.py:80(__init__)
        3    0.000    0.000    0.000    0.000 datetime.py:46(_days_before_year)
        4    0.000    0.000    0.000    0.000 math2.py:42(_mathfun)
        1    0.000    0.000    0.000    0.000 pickle.py:200(_Framer)
        1    0.000    0.000    0.000    0.000 backend_tools.py:694(ToolHome)
        1    0.000    0.000    0.000    0.000 distributed.py:153(_BufferCommHook)
        1    0.000    0.000    0.000    0.000 client.py:1398(HTTPSConnection)
        1    0.000    0.000    0.000    0.000 sequences.py:378(EmptySequence)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1832(dirichlet_frozen)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:801(Min)
        1    0.000    0.000    0.000    0.000 _base.py:154(FixedRule)
        1    0.000    0.000    0.000    0.000 shape_prop.py:68(ShapeProp)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:688(MikotaM)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:72(_override_resolve_out_shapes)
        1    0.000    0.000    0.000    0.000 periodic_table.py:852(_ElementMeta)
        1    0.000    0.000    0.000    0.000 _pep440.py:45(Infinity)
        1    0.000    0.000    0.000    0.000 diagonal.py:86(DiagonalOf)
        1    0.000    0.000    0.000    0.000 distance.py:56(CosineSimilarity)
        1    0.000    0.000    0.000    0.000 padding.py:225(ReflectionPad2d)
        1    0.000    0.000    0.000    0.000 conv.py:1264(LazyConv2d)
        1    0.000    0.000    0.000    0.000 colorbar.py:1636(ColorbarPatch)
        1    0.000    0.000    0.000    0.000 _factories.py:13(__call__)
        1    0.000    0.000    0.000    0.000 facts.py:257(Prover)
        1    0.000    0.000    0.000    0.000 _constraints.py:127(LinearConstraint)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:751(Protocol)
        1    0.000    0.000    0.000    0.000 mathtext.py:3324(__init__)
        1    0.000    0.000    0.000    0.000 observer.py:52(_PartialWrapper)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1390(zipfian_gen)
        1    0.000    0.000    0.000    0.000 dos.py:622(DosFingerprint)
        1    0.000    0.000    0.000    0.000 _arffread.py:170(NumericAttribute)
        1    0.000    0.000    0.000    0.000 polyoptions.py:621(Auto)
        1    0.000    0.000    0.000    0.000 resolver.py:303(VersionedResolver)
        1    0.000    0.000    0.000    0.000 bandstructure.py:707(BandStructureSymmLine)
        1    0.000    0.000    0.000    0.000 linear.py:21(Identity)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:902(logser_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:531(__init__)
        1    0.000    0.000    0.000    0.000 error_functions.py:819(erfinv)
        1    0.000    0.000    0.000    0.000 fused.py:104(BNReLU2d)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:13(ExprWithIntLimits)
        1    0.000    0.000    0.000    0.000 backend_registry.py:74(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:293(kstwobign_gen)
        1    0.000    0.000    0.000    0.000 bdist.py:21(deprecated)
        1    0.000    0.000    0.000    0.000 transports.py:9(BaseTransport)
        1    0.000    0.000    0.000    0.000 hyper.py:937(HyperRep_atanh)
        3    0.000    0.000    0.000    0.000 tag.py:25(__init__)
        3    0.000    0.000    0.000    0.000 <frozen _collections_abc>:98(__subclasshook__)
        1    0.000    0.000    0.000    0.000 loss.py:301(GaussianNLLLoss)
        1    0.000    0.000    0.000    0.000 fancysets.py:239(Reals)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:402(betanbinom_gen)
        1    0.000    0.000    0.000    0.000 para4band.py:330(<listcomp>)
        1    0.000    0.000    0.000    0.000 tz.py:874(tzrange)
        1    0.000    0.000    0.000    0.000 chi2.py:6(Chi2)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7134(mielke_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:323(device_of)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2149(exponnorm_gen)
        1    0.000    0.000    0.000    0.000 normalization.py:46(GroupNorm)
        1    0.000    0.000    0.000    0.000 results.py:22(_ParseResultsWithOffset)
        6    0.000    0.000    0.000    0.000 _type_aliases.py:92(<genexpr>)
        1    0.000    0.000    0.000    0.000 Files_in.py:3(FilesIn)
        1    0.000    0.000    0.000    0.000 transforms.py:1169(CumulativeDistributionTransform)
        1    0.000    0.000    0.000    0.000 widgets.py:1836(ToolHandles)
        1    0.000    0.000    0.000    0.000 logic.py:320(AndOr_Base)
        1    0.000    0.000    0.000    0.000 colorsys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 instancenorm.py:308(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:96(ExpFormat)
        1    0.000    0.000    0.000    0.000 figure.py:159(SubplotParams)
        1    0.000    0.000    0.000    0.000 cnf.py:77(OR)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:420(TrueDiv)
        3    0.000    0.000    0.000    0.000 rcsetup.py:391(validate_aspect)
        1    0.000    0.000    0.000    0.000 headerregistry.py:490(ContentDispositionHeader)
        1    0.000    0.000    0.000    0.000 abc.py:43(Finder)
        1    0.000    0.000    0.000    0.000 inputs.py:1927(OrbitalDescription)
        1    0.000    0.000    0.000    0.000 argparse.py:1047(_AppendConstAction)
        1    0.000    0.000    0.000    0.000 ticker.py:923(LogFormatter)
        6    0.000    0.000    0.000    0.000 iterables.py:858(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:5202(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2324(exponpow_gen)
        1    0.000    0.000    0.000    0.000 _spherical_voronoi.py:36(SphericalVoronoi)
        6    0.000    0.000    0.000    0.000 fuser_method_mappings.py:153(_sequential_wrapper2)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:76(_interpolate)
        1    0.000    0.000    0.000    0.000 _classes.py:18(_Classes)
        1    0.000    0.000    0.000    0.000 loader.py:77(__init__)
        1    0.000    0.000    0.000    0.000 _ode.py:1209(dop853)
        1    0.000    0.000    0.000    0.000 containers.py:339(OrderedSet)
        1    0.000    0.000    0.000    0.000 calendar.py:156(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:1428(HankelTypeTransform)
        1    0.000    0.000    0.000    0.000 formal.py:1690(FormalPowerSeriesInverse)
        1    0.000    0.000    0.000    0.000 property.py:3(Property)
        1    0.000    0.000    0.000    0.000 rnn.py:1248(GRUCell)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:444(MatrixHomomorphism)
        1    0.000    0.000    0.000    0.000 request.py:2399(ftpwrapper)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:928(_BivariateSplineBase)
        1    0.000    0.000    0.000    0.000 numbers.py:2194(reduced_totient)
        1    0.000    0.000    0.000    0.000 __init__.py:329(SymBool)
        1    0.000    0.000    0.000    0.000 polynomials.py:1320(assoc_laguerre)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:611(arcsine_gen)
        1    0.000    0.000    0.000    0.000 mathtext.py:1527(Accent)
        1    0.000    0.000    0.000    0.000 _factories.py:9(__init__)
        1    0.000    0.000    0.000    0.000 transports.py:251(_FlowControlMixin)
        1    0.000    0.000    0.000    0.000 random.py:784(SystemRandom)
        1    0.000    0.000    0.000    0.000 ssl.py:227(_TLSMessageType)
        4    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        3    0.000    0.000    0.000    0.000 __init__.py:504(CFunctionType)
        1    0.000    0.000    0.000    0.000 _policybase.py:271(Compat32)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2317(_any_dispatcher)
        1    0.000    0.000    0.000    0.000 batchnorm.py:121(_BatchNorm)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:30(<dictcomp>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:770(TextArea)
        1    0.000    0.000    0.000    0.000 matrices.py:747(MatrixMethods)
        1    0.000    0.000    0.000    0.000 threading.py:264(__enter__)
        1    0.000    0.000    0.000    0.000 _trace.py:1111(TracedModule)
        1    0.000    0.000    0.000    0.000 activation.py:140(Sigmoid)
        1    0.000    0.000    0.000    0.000 loss.py:539(BCELoss)
        1    0.000    0.000    0.000    0.000 tensor.py:4849(WildTensorIndex)
        1    0.000    0.000    0.000    0.000 _trace.py:75(ONNXTracedModule)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:91(set_detect_anomaly)
        1    0.000    0.000    0.000    0.000 _comparison.py:74(<dictcomp>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:913(Reader)
        1    0.000    0.000    0.000    0.000 __config__.py:98(<listcomp>)
        1    0.000    0.000    0.000    0.000 activation.py:68(ReLU)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:61(_override_key)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:667(riemann_xi)
        6    0.000    0.000    0.000    0.000 version.py:471(_parse_letter_version)
        1    0.000    0.000    0.000    0.000 numbers.py:2954(Half)
        1    0.000    0.000    0.000    0.000 optimization.py:602(MDNewton)
        1    0.000    0.000    0.000    0.000 _elffile.py:41(ELFFile)
        1    0.000    0.000    0.000    0.000 error_functions.py:995(erf2inv)
        1    0.000    0.000    0.000    0.000 exp_family.py:6(ExponentialFamily)
        1    0.000    0.000    0.000    0.000 axis.py:482(YTick)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2512(wishart_frozen)
        1    0.000    0.000    0.000    0.000 numbers.py:3825(GoldenRatio)
        1    0.000    0.000    0.000    0.000 linear.py:127(NonDynamicallyQuantizableLinear)
        1    0.000    0.000    0.000    0.000 _vertex.py:75(VertexScalarField)
        1    0.000    0.000    0.000    0.000 relational.py:1167(StrictGreaterThan)
        1    0.000    0.000    0.000    0.000 due.py:22(InactiveDueCreditCollector)
        1    0.000    0.000    0.000    0.000 request.py:645(HTTPRedirectHandler)
        1    0.000    0.000    0.000    0.000 error_functions.py:2759(_eis)
        1    0.000    0.000    0.000    0.000 response.py:68(addinfourl)
        1    0.000    0.000    0.000    0.000 _multivariate.py:245(multi_rv_frozen)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:26(LRScheduler)
        2    0.000    0.000    0.000    0.000 glob.py:108(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:936(setLevel)
        1    0.000    0.000    0.000    0.000 grad_mode.py:9(no_grad)
        4    0.000    0.000    0.000    0.000 numbers.py:1444(_eval_is_zero)
        1    0.000    0.000    0.000    0.000 version.py:78(__lt__)
        1    0.000    0.000    0.000    0.000 transforms.py:1137(SineCosineTypeTransform)
        1    0.000    0.000    0.000    0.000 utils.py:102(FormatReplace)
        1    0.000    0.000    0.000    0.000 kind.py:181(__new__)
        1    0.000    0.000    0.000    0.000 relational.py:827(_Inequality)
        4    0.000    0.000    0.000    0.000 utils.py:8(_ntuple)
        1    0.000    0.000    0.000    0.000 records.py:223(record)
        1    0.000    0.000    0.000    0.000 _policybase.py:18(_PolicyBase)
        1    0.000    0.000    0.000    0.000 _resampling.py:1314(PermutationTestResult)
        1    0.000    0.000    0.000    0.000 backend_tools.py:504(ToolYScale)
        1    0.000    0.000    0.000    0.000 expand.py:379(EnsurePackagesDiscovered)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1272(XMLPullParser)
        1    0.000    0.000    0.000    0.000 _contextlib.py:120(_DecoratorContextManager)
        1    0.000    0.000    0.000    0.000 observer.py:1419(ReuseInputObserver)
        1    0.000    0.000    0.000    0.000 _resampling.py:2082(ResamplingMethod)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:930(Writer)
        4    0.000    0.000    0.000    0.000 __init__.py:799(<dictcomp>)
        1    0.000    0.000    0.000    0.000 boolalg.py:1108(Nand)
        1    0.000    0.000    0.000    0.000 mathtext.py:1374(Node)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4367(_shift_scale_inverse_function)
        1    0.000    0.000    0.000    0.000 single.py:294(SinglePatternODESolver)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4829(gausshyper_gen)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:86(mathieuc)
        1    0.000    0.000    0.000    0.000 padding.py:277(ReflectionPad3d)
        1    0.000    0.000    0.000    0.000 core.py:190(<listcomp>)
        1    0.000    0.000    0.000    0.000 hub.py:20(_Faketqdm)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:67(_apply_params)
        1    0.000    0.000    0.000    0.000 _rbfinterp.py:134(RBFInterpolator)
        1    0.000    0.000    0.000    0.000 __init__.py:154(HTTPMethod)
        1    0.000    0.000    0.000    0.000 loss.py:35(L1Loss)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11053(_SimpleBeta)
        1    0.000    0.000    0.000    0.000 single.py:443(FirstExact)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1044(_TypedDictMeta)
        1    0.000    0.000    0.000    0.000 _expm_multiply.py:396(LazyOperatorNormInfo)
        1    0.000    0.000    0.000    0.000 backend_tools.py:703(ToolBack)
        1    0.000    0.000    0.000    0.000 core.py:4223(Or)
        1    0.000    0.000    0.000    0.000 polyoptions.py:258(Expand)
        1    0.000    0.000    0.000    0.000 _base.py:245(NestedFixedRule)
        1    0.000    0.000    0.000    0.000 graphs.py:118(graph)
        1    0.000    0.000    0.000    0.000 _ops.py:115(PyOperator)
        1    0.000    0.000    0.000    0.000 request.py:1080(AbstractDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1232(_Sparse_Matrix_coo)
        1    0.000    0.000    0.000    0.000 stubs.py:38(QuantWrapper)
        1    0.000    0.000    0.000    0.000 cse_main.py:345(Unevaluated)
        3    0.000    0.000    0.000    0.000 utils.py:17(<genexpr>)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:706(stieltjes)
        1    0.000    0.000    0.000    0.000 __init__.py:1198(is_interactive)
        1    0.000    0.000    0.000    0.000 unix_events.py:1107(FastChildWatcher)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:148(mathieusprime)
        1    0.000    0.000    0.000    0.000 proxy.py:53(ScopeContextManager)
        1    0.000    0.000    0.000    0.000 _util.py:597(MapWrapper)
        1    0.000    0.000    0.000    0.000 conv_fused.py:763(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 activation.py:478(ELU)
        1    0.000    0.000    0.000    0.000 _collections.py:27(Pair)
        1    0.000    0.000    0.000    0.000 autograd_function.py:547(CtxCustomSave)
        1    0.000    0.000    0.000    0.000 legend.py:50(DraggableLegend)
        1    0.000    0.000    0.000    0.000 numbers.py:2039(primenu)
        1    0.000    0.000    0.000    0.000 gzip.py:99(prepend)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2447(_UnpackAlias)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1701(skellam_gen)
        1    0.000    0.000    0.000    0.000 distributed.py:194(_DDPJoinHook)
        1    0.000    0.000    0.000    0.000 headerregistry.py:104(Group)
        1    0.000    0.000    0.000    0.000 _hypotests.py:705(SomersDResult)
        1    0.000    0.000    0.000    0.000 gui.py:24(tqdm_gui)
        1    0.000    0.000    0.000    0.000 records.py:308(recarray)
        1    0.000    0.000    0.000    0.000 pc_groups.py:7(PolycyclicGroup)
        1    0.000    0.000    0.000    0.000 colors.py:80(_ColorMapping)
        1    0.000    0.000    0.000    0.000 _czt.py:115(CZT)
        1    0.000    0.000    0.000    0.000 unix_events.py:1212(MultiLoopChildWatcher)
        1    0.000    0.000    0.000    0.000 core.py:6735(_extrema_operation)
        1    0.000    0.000    0.000    0.000 package_exporter.py:103(_PatternInfo)
        1    0.000    0.000    0.000    0.000 arpack.py:990(IterOpInv)
        1    0.000    0.000    0.000    0.000 _rules.py:62(_MissingStandardSymbolicFunction)
        1    0.000    0.000    0.000    0.000 activation.py:524(CELU)
        1    0.000    0.000    0.000    0.000 contour.py:35(ClabelText)
        1    0.000    0.000    0.000    0.000 reductions.py:22(StorageWeakRef)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:18(Storage)
        1    0.000    0.000    0.000    0.000 io.py:344(FileLock)
        1    0.000    0.000    0.000    0.000 printer.py:388(_PrintFunction)
        1    0.000    0.000    0.000    0.000 transforms.py:2598(ScaledTranslation)
        1    0.000    0.000    0.000    0.000 loss.py:1614(CTCLoss)
        1    0.000    0.000    0.000    0.000 _functions.py:52(Gather)
        1    0.000    0.000    0.000    0.000 para4band.py:331(<listcomp>)
        1    0.000    0.000    0.000    0.000 ticker.py:183(_DummyAxis)
        1    0.000    0.000    0.000    0.000 conv_fused.py:590(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 context.py:230(DefaultContext)
        1    0.000    0.000    0.000    0.000 csv.py:165(Sniffer)
        1    0.000    0.000    0.000    0.000 single.py:912(RiccatiSpecial)
        1    0.000    0.000    0.000    0.000 tempfile.py:416(_TemporaryFileCloser)
        7    0.000    0.000    0.000    0.000 _pep440.py:446(<lambda>)
        1    0.000    0.000    0.000    0.000 patches.py:2850(_Base)
        1    0.000    0.000    0.000    0.000 suite.py:92(TestSuite)
        1    0.000    0.000    0.000    0.000 _decorator.py:11(functional_datapipe)
        1    0.000    0.000    0.000    0.000 __init__.py:199(strict_fusion)
        1    0.000    0.000    0.000    0.000 TiffTags.py:32(TagInfo)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3915(genhalflogistic_gen)
        1    0.000    0.000    0.000    0.000 pycode.py:89(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _rules.py:323(_FxFrontendDynamoMakeFx)
        1    0.000    0.000    0.000    0.000 batchnorm.py:446(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 padding.py:475(ZeroPad2d)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:417(_PageL)
        1    0.000    0.000    0.000    0.000 _resampling.py:981(PowerResult)
        1    0.000    0.000    0.000    0.000 rnn.py:46(PackedParameter)
        1    0.000    0.000    0.000    0.000 selector_events.py:1126(_SelectorDatagramTransport)
        1    0.000    0.000    0.000    0.000 transforms.py:107(__init__)
        1    0.000    0.000    0.000    0.000 single.py:1748(LinearCoefficients)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:17(DirectoryReader)
        1    0.000    0.000    0.000    0.000 torch_version.py:41(TorchVersion)
        1    0.000    0.000    0.000    0.000 getlimits.py:630(iinfo)
        1    0.000    0.000    0.000    0.000 lsoda.py:7(LSODA)
        1    0.000    0.000    0.000    0.000 core.py:2362(_PendingSkip)
        1    0.000    0.000    0.000    0.000 sym_operation.py:4(SymOp)
        1    0.000    0.000    0.000    0.000 version.py:45(Version)
        1    0.000    0.000    0.000    0.000 spglib.py:402(MagneticSpaceGroupType)
        1    0.000    0.000    0.000    0.000 rules.py:5(Transform)
        3    0.000    0.000    0.000    0.000 __init__.py:1319(disable)
        1    0.000    0.000    0.000    0.000 readers.py:31(ZipReader)
        1    0.000    0.000    0.000    0.000 legend_handler.py:43(HandlerBase)
        8    0.000    0.000    0.000    0.000 six.py:80(_add_doc)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:851(SupportsFloat)
        1    0.000    0.000    0.000    0.000 spawn.py:12(ProcessException)
        1    0.000    0.000    0.000    0.000 selectors.py:206(_BaseSelectorImpl)
        1    0.000    0.000    0.000    0.000 numbers.py:2252(primepi)
        1    0.000    0.000    0.000    0.000 transforms.py:2562(BboxTransformFrom)
        2    0.000    0.000    0.000    0.000 _adapters.py:16(__getattr__)
        1    0.000    0.000    0.000    0.000 equality.py:25(EqualityPredicate)
        1    0.000    0.000    0.000    0.000 package_importer.py:662(_PackageNode)
        1    0.000    0.000    0.000    0.000 {built-in method _thread.get_native_id}
        1    0.000    0.000    0.000    0.000 __init__.py:2111(_OrderedSet)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:505(IsNonOverlappingAndDenseIndicator)
        1    0.000    0.000    0.000    0.000 complexes.py:1233(principal_branch)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1304(OffsetImage)
        1    0.000    0.000    0.000    0.000 legend_handler.py:652(__init__)
        1    0.000    0.000    0.000    0.000 collections.py:1102(PolyCollection)
        1    0.000    0.000    0.000    0.000 locks.py:24(Lock)
        1    0.000    0.000    0.000    0.000 normalization.py:161(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:138(MutableSparseNDimArray)
        1    0.000    0.000    0.000    0.000 backend_tools.py:1030(ToolCopyToClipboardBase)
        1    0.000    0.000    0.000    0.000 comments.py:204(Format)
        1    0.000    0.000    0.000    0.000 request.py:834(HTTPPasswordMgr)
        1    0.000    0.000    0.000    0.000 equality.py:69(UnequalityPredicate)
        4    0.000    0.000    0.000    0.000 expr.py:3570(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1295(zipf_gen)
        1    0.000    0.000    0.000    0.000 zipfile.py:1131(_ZipWriteFile)
        1    0.000    0.000    0.000    0.000 split_module.py:11(Partition)
        1    0.000    0.000    0.000    0.000 padding.py:434(ReplicationPad3d)
        1    0.000    0.000    0.000    0.000 widgets.py:25(LockDraw)
        1    0.000    0.000    0.000    0.000 conv_fused.py:363(ConvBn1d)
        1    0.000    0.000    0.000    0.000 _optimize.py:61(MemoizeJac)
        1    0.000    0.000    0.000    0.000 polyoptions.py:684(Gen)
        1    0.000    0.000    0.000    0.000 ImageMode.py:24(ModeDescriptor)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:207(ProductOperator)
        1    0.000    0.000    0.000    0.000 cse_main.py:218(FuncArgTracker)
        1    0.000    0.000    0.000    0.000 _iotools.py:133(LineSplitter)
        1    0.000    0.000    0.000    0.000 more.py:941(bucket)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1385(matrix_normal_frozen)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1189(BivariateSpline)
        1    0.000    0.000    0.000    0.000 Files_out.py:2(FilesOut)
        1    0.000    0.000    0.000    0.000 polar.py:362(ThetaAxis)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:60(PixelUnshuffle)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:897(SupportsRound)
        1    0.000    0.000    0.000    0.000 batchnorm.py:186(_LazyNormBase)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1615(_ShapeInfo)
        1    0.000    0.000    0.000    0.000 utilities.py:166(AlgIntPowers)
        1    0.000    0.000    0.000    0.000 anchor.py:10(Anchor)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1997(_interpolate)
        1    0.000    0.000    0.000    0.000 headerregistry.py:439(ParameterizedMIMEHeader)
        1    0.000    0.000    0.000    0.000 queues.py:218(PriorityQueue)
        1    0.000    0.000    0.000    0.000 scalarbool.py:21(ScalarBoolean)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:20(VisitingDistribution)
        1    0.000    0.000    0.000    0.000 _adapters.py:83(ChildPath)
        1    0.000    0.000    0.000    0.000 distance.py:1744(CDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 enumerative.py:92(PartComponent)
        1    0.000    0.000    0.000    0.000 setupcfg.py:759(_AmbiguousMarker)
        3    0.000    0.000    0.000    0.000 units.py:808(wrap)
        1    0.000    0.000    0.000    0.000 _nonlin.py:843(BroydenFirst)
        1    0.000    0.000    0.000    0.000 _input_validation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:782(_make_node_sizes_strides)
        1    0.000    0.000    0.000    0.000 padding.py:382(ReplicationPad2d)
        1    0.000    0.000    0.000    0.000 _nonlin.py:454(InverseJacobian)
        1    0.000    0.000    0.000    0.000 backend_tools.py:712(ToolForward)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3505(multinomial_frozen)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:885(MeijerFormula)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_256}
        1    0.000    0.000    0.000    0.000 boolalg.py:1487(Exclusive)
        1    0.000    0.000    0.000    0.000 _guards.py:78(ShapeGuard)
        6    0.000    0.000    0.000    0.000 core.py:846(__init__)
        1    0.000    0.000    0.000    0.000 records.py:87(format_parser)
        1    0.000    0.000    0.000    0.000 context.py:283(SpawnProcess)
        1    0.000    0.000    0.000    0.000 image.py:1351(BboxImage)
        1    0.000    0.000    0.000    0.000 equality.py:113(StrictGreaterThanPredicate)
        5    0.000    0.000    0.000    0.000 _inspect.py:143(<lambda>)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:9(detect_anomaly)
        1    0.000    0.000    0.000    0.000 mock.py:2473(__init__)
        1    0.000    0.000    0.000    0.000 ImageFile.py:812(PyDecoder)
        1    0.000    0.000    0.000    0.000 _typing.py:210(_DataPipeType)
        1    0.000    0.000    0.000    0.000 _kdtree.py:318(leafnode)
        1    0.000    0.000    0.000    0.000 pyplot.py:514(_xkcd)
        1    0.000    0.000    0.000    0.000 transforms.py:783(CorrCholeskyTransform)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:267(Znm)
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 core.py:255(InputGenerator)
        1    0.000    0.000    0.000    0.000 scanner.py:1730(RoundTripScanner)
        1    0.000    0.000    0.000    0.000 blocking_input.py:271(BlockingContourLabeler)
        1    0.000    0.000    0.000    0.000 _idl.py:629(AttrDict)
        1    0.000    0.000    0.000    0.000 response.py:14(addbase)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_converter}
        1    0.000    0.000    0.000    0.000 _internal.py:205(dummy_ctype)
        9    0.000    0.000    0.000    0.000 _globals.py:58(__repr__)
        1    0.000    0.000    0.000    0.000 activation.py:298(Hardsigmoid)
        1    0.000    0.000    0.000    0.000 comments.py:591(CommentedKeySeq)
        1    0.000    0.000    0.000    0.000 constraints.py:186(_IndependentConstraint)
        1    0.000    0.000    0.000    0.000 _docscrape.py:578(FunctionDoc)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:878(SupportsIndex)
        1    0.000    0.000    0.000    0.000 ImageFile.py:101(_Tile)
        1    0.000    0.000    0.000    0.000 library.py:18(Library)
        1    0.000    0.000    0.000    0.000 runner.py:161(TextTestRunner)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:53(_ScalarHessWrapper)
        1    0.000    0.000    0.000    0.000 codeprinter.py:18(requires)
        1    0.000    0.000    0.000    0.000 _functions.py:85(Scatter)
        1    0.000    0.000    0.000    0.000 _functions.py:273(BackwardHookFunction)
        1    0.000    0.000    0.000    0.000 single.py:976(RationalRiccati)
        1    0.000    0.000    0.000    0.000 single.py:1560(HomogeneousCoeffSubsIndepDivDep)
        1    0.000    0.000    0.000    0.000 dispatcher.py:366(MethodDispatcher)
        3    0.000    0.000    0.000    0.000 libmpf.py:663(mpf_neg)
        1    0.000    0.000    0.000    0.000 pooling.py:990(_AdaptiveMaxPoolNd)
        1    0.000    0.000    0.000    0.000 encoder.py:105(__init__)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:280(PngInfo)
        1    0.000    0.000    0.000    0.000 __init__.py:7(Warning)
        1    0.000    0.000    0.000    0.000 importer.py:183(OrderedImporter)
        1    0.000    0.000    0.000    0.000 core.py:5313(Opt)
        1    0.000    0.000    0.000    0.000 main.py:882(YAMLContextManager)
        1    0.000    0.000    0.000    0.000 common.py:137(OdeSolution)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:210(mathieucprime)
        1    0.000    0.000    0.000    0.000 transports.py:72(WriteTransport)
        1    0.000    0.000    0.000    0.000 _script.py:1534(_ScriptProfile)
        1    0.000    0.000    0.000    0.000 grouping.py:19(__getattr__)
        1    0.000    0.000    0.000    0.000 line.py:1109(Line)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1175(DiagBroyden)
        1    0.000    0.000    0.000    0.000 _base.py:1554(sparray)
        1    0.000    0.000    0.000    0.000 colors.py:1099(TwoSlopeNorm)
        1    0.000    0.000    0.000    0.000 relational.py:1185(StrictLessThan)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:285(BFGS)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:251(RotationSpline)
        1    0.000    0.000    0.000    0.000 loss.py:1179(MultiLabelSoftMarginLoss)
        1    0.000    0.000    0.000    0.000 grouping.py:89(UnBatcherIterDataPipe)
        1    0.000    0.000    0.000    0.000 mathtext.py:1618(Hlist)
        1    0.000    0.000    0.000    0.000 relational.py:873(_Greater)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:985(__new__)
        1    0.000    0.000    0.000    0.000 _decorator.py:47(guaranteed_datapipes_determinism)
        1    0.000    0.000    0.000    0.000 polyoptions.py:384(Composite)
        1    0.000    0.000    0.000    0.000 _rules.py:126(_FxTracerSuccess)
        1    0.000    0.000    0.000    0.000 analyzer.py:1751(PointGroupOperations)
        1    0.000    0.000    0.000    0.000 line.py:2160(Ray2D)
        1    0.000    0.000    0.000    0.000 sparse.py:462(MutableSparseMatrix)
        1    0.000    0.000    0.000    0.000 factor_.py:740(maxsize)
        1    0.000    0.000    0.000    0.000 padding.py:341(ReplicationPad1d)
        1    0.000    0.000    0.000    0.000 events.py:610(AbstractEventLoopPolicy)
        1    0.000    0.000    0.000    0.000 constraints.py:384(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3061(invwishart_frozen)
        1    0.000    0.000    0.000    0.000 hyper.py:1129(appellf1)
        1    0.000    0.000    0.000    0.000 conv.py:1402(LazyConvTranspose1d)
        1    0.000    0.000    0.000    0.000 tz.py:328(_ttinfo)
        1    0.000    0.000    0.000    0.000 _rules.py:92(_OperatorSupportedInNewerOpsetVersion)
        1    0.000    0.000    0.000    0.000 ecm.py:17(Point)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:385(NameAddr)
        2    0.000    0.000    0.000    0.000 compat.py:113(__init__)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:344(ArrayComprehensionMap)
        1    0.000    0.000    0.000    0.000 activation.py:807(Softplus)
        1    0.000    0.000    0.000    0.000 _binomtest.py:10(BinomTestResult)
        1    0.000    0.000    0.000    0.000 hooks.py:92(BackwardHook)
        8    0.000    0.000    0.000    0.000 _pep440.py:70(__neg__)
        1    0.000    0.000    0.000    0.000 analyzer.py:1691(SpacegroupOperations)
        1    0.000    0.000    0.000    0.000 unix_events.py:823(AbstractChildWatcher)
        1    0.000    0.000    0.000    0.000 cnf.py:109(AND)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:860(SupportsComplex)
        1    0.000    0.000    0.000    0.000 __init__.py:2317(JupyterHTMLStr)
        4    0.000    0.000    0.000    0.000 _ops.py:129(py_impl)
        4    0.000    0.000    0.000    0.000 core.py:6544(__has_singleton)
        1    0.000    0.000    0.000    0.000 mlab.py:962(GaussianKDE)
        1    0.000    0.000    0.000    0.000 __init__.py:280(LogRecord)
        1    0.000    0.000    0.000    0.000 para4band.py:82(Para4Band)
        1    0.000    0.000    0.000    0.000 _rules.py:231(_FxIrAddNode)
        6    0.000    0.000    0.000    0.000 feedparser.py:125(__iter__)
        1    0.000    0.000    0.000    0.000 _guards.py:216(DuplicateInputs)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:186(LambdaLR)
        1    0.000    0.000    0.000    0.000 constraints.py:146(_DependentProperty)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:514(FunctionModifiers)
        1    0.000    0.000    0.000    0.000 conv.py:220(ConvTranspose1d)
        5    0.000    0.000    0.000    0.000 datetime.py:545(_check_tzinfo_arg)
        1    0.000    0.000    0.000    0.000 bz2.py:140(writable)
        1    0.000    0.000    0.000    0.000 __init__.py:110(DeQuantize)
        1    0.000    0.000    0.000    0.000 activation.py:733(LeakyReLU)
        5    0.000    0.000    0.000    0.000 polyhedron.py:473(faces)
        1    0.000    0.000    0.000    0.000 _common.py:6(weekday)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:80(_override_finalize_out)
        1    0.000    0.000    0.000    0.000 dates.py:648(ConciseDateFormatter)
        1    0.000    0.000    0.000    0.000 distance.py:1771(PDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:174(OddsRatioResult)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:113(Unpickler)
        1    0.000    0.000    0.000    0.000 server_process_global_profiler.py:16(_server_process_global_profile)
        1    0.000    0.000    0.000    0.000 torch_version.py:6(_LazyImport)
        1    0.000    0.000    0.000    0.000 conv.py:1470(LazyConvTranspose2d)
        1    0.000    0.000    0.000    0.000 scale.py:91(LinearScale)
        1    0.000    0.000    0.000    0.000 headerregistry.py:525(MessageIDHeader)
        1    0.000    0.000    0.000    0.000 image.py:1288(FigureImage)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:367(errstate)
        2    0.000    0.000    0.000    0.000 __init__.py:24(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:89(__init__)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:517(AddrSpec)
        1    0.000    0.000    0.000    0.000 line.py:2670(Ray3D)
        1    0.000    0.000    0.000    0.000 equality.py:257(LessThanPredicate)
        1    0.000    0.000    0.000    0.000 __init__.py:26(ContextProp)
        1    0.000    0.000    0.000    0.000 _vertex.py:179(VertexCacheBase)
        7    0.000    0.000    0.000    0.000 numeric.py:1389(_moveaxis_dispatcher)
        1    0.000    0.000    0.000    0.000 pathlib.py:304(__init__)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:413(_EnsurePackagesDiscovered)
        1    0.000    0.000    0.000    0.000 tensor.py:4578(WildTensorHead)
        5    0.000    0.000    0.000    0.000 due.py:43(_donothing_func)
        1    0.000    0.000    0.000    0.000 bessel.py:1347(AiryBase)
        1    0.000    0.000    0.000    0.000 offsetbox.py:918(AuxTransformBox)
        1    0.000    0.000    0.000    0.000 line.py:1872(LinearEntity2D)
        1    0.000    0.000    0.000    0.000 _script.py:215(OrderedModuleDict)
        1    0.000    0.000    0.000    0.000 category.py:163(UnitData)
        1    0.000    0.000    0.000    0.000 _constraints.py:227(Bounds)
        1    0.000    0.000    0.000    0.000 pycode.py:673(<dictcomp>)
        1    0.000    0.000    0.000    0.000 numbers.py:3961(EulerGamma)
        1    0.000    0.000    0.000    0.000 equality.py:161(GreaterThanPredicate)
        1    0.000    0.000    0.000    0.000 _codata.py:142(exact2002)
        1    0.000    0.000    0.000    0.000 kind.py:7(MatrixKind)
        1    0.000    0.000    0.000    0.000 string.py:54(Stringify)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:869(SupportsBytes)
        1    0.000    0.000    0.000    0.000 tz.py:1253(tzical)
        1    0.000    0.000    0.000    0.000 ticker.py:2372(LogLocator)
        1    0.000    0.000    0.000    0.000 laplace.py:1267(LaplaceTransform)
        1    0.000    0.000    0.000    0.000 function.py:966(WildFunction)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:455(Mailbox)
        1    0.000    0.000    0.000    0.000 _parser.py:50(ParsedRequirement)
        1    0.000    0.000    0.000    0.000 modules.py:504(FreeModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 rrule.py:305(rrule)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:292(ivmpf_constant)
        1    0.000    0.000    0.000    0.000 pooling.py:38(MaxPool1d)
        1    0.000    0.000    0.000    0.000 request.py:908(HTTPPasswordMgrWithPriorAuth)
        1    0.000    0.000    0.000    0.000 _globals.py:32(_NoValueType)
        1    0.000    0.000    0.000    0.000 python.py:10(PythonPrinter)
        1    0.000    0.000    0.000    0.000 pprint.py:80(_safe_key)
        1    0.000    0.000    0.000    0.000 __init__.py:840(_CudaBase)
        1    0.000    0.000    0.000    0.000 more.py:2438(islice_extended)
        1    0.000    0.000    0.000    0.000 fancysets.py:139(Naturals0)
        2    0.000    0.000    0.000    0.000 pathlib.py:53(__init__)
        1    0.000    0.000    0.000    0.000 version.py:38(_Version)
        1    0.000    0.000    0.000    0.000 csv.py:130(DictWriter)
        1    0.000    0.000    0.000    0.000 polynomials.py:687(chebyshevt_root)
        1    0.000    0.000    0.000    0.000 _pytree.py:135(LeafSpec)
        1    0.000    0.000    0.000    0.000 _meta.py:32(SimplePath)
        1    0.000    0.000    0.000    0.000 inputs.py:1919(Orbital)
        1    0.000    0.000    0.000    0.000 unix_events.py:1426(_UnixDefaultEventLoopPolicy)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11024(_SimpleNormal)
        1    0.000    0.000    0.000    0.000 series.py:1229(List2DSeries)
        1    0.000    0.000    0.000    0.000 assume.py:14(AssumptionsContext)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:13(_MultiDeviceReplicator)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5769(uniform_direction_gen)
        1    0.000    0.000    0.000    0.000 discovery.py:68(_Filter)
        1    0.000    0.000    0.000    0.000 _rules.py:182(_FxFrontendAotautograd)
        1    0.000    0.000    0.000    0.000 _internal.py:616(_Stream)
        1    0.000    0.000    0.000    0.000 pathlib.py:792(is_absolute)
        1    0.000    0.000    0.000    0.000 _rules.py:277(_AtenlibFxToOnnx)
        1    0.000    0.000    0.000    0.000 widgets.py:238(Slider)
        1    0.000    0.000    0.000    0.000 rootoftools.py:38(_pure_key_dict)
        1    0.000    0.000    0.000    0.000 hb.py:375(<dictcomp>)
        2    0.000    0.000    0.000    0.000 constraints.py:290(__init__)
        1    0.000    0.000    0.000    0.000 ImageFile.py:734(PyCodec)
        1    0.000    0.000    0.000    0.000 mathtext.py:1262(FontConstantsBase)
        1    0.000    0.000    0.000    0.000 __init__.py:275(cudaStatus)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:224(QuotedString)
        1    0.000    0.000    0.000    0.000 __init__.py:732(Context)
        1    0.000    0.000    0.000    0.000 headerregistry.py:562(HeaderRegistry)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3705(ortho_group_gen)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4063(AlexanderGovernResult)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:876(_PatchedFn)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:17(DCSRCH)
        1    0.000    0.000    0.000    0.000 line.py:2429(LinearEntity3D)
        1    0.000    0.000    0.000    0.000 __init__.py:58(cuFFTPlanCacheManager)
        1    0.000    0.000    0.000    0.000 _classes.py:21(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:626(_ProtocolMeta)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11078(_SimpleStudentT)
        1    0.000    0.000    0.000    0.000 unix_events.py:902(PidfdChildWatcher)
        1    0.000    0.000    0.000    0.000 timeutils.py:40(<listcomp>)
        1    0.000    0.000    0.000    0.000 sets.py:2759(SetKind)
        1    0.000    0.000    0.000    0.000 Image.py:3029(ImageTransformHandler)
        1    0.000    0.000    0.000    0.000 locks.py:219(Condition)
        4    0.000    0.000    0.000    0.000 _inspect.py:142(<lambda>)
        1    0.000    0.000    0.000    0.000 tools_common.py:90(FusionGroup)
        1    0.000    0.000    0.000    0.000 conv.py:1333(LazyConv3d)
        1    0.000    0.000    0.000    0.000 lines.py:1399(_AxLine)
        1    0.000    0.000    0.000    0.000 _monitor.py:15(TMonitor)
        1    0.000    0.000    0.000    0.000 tensor.py:4666(WildTensor)
        1    0.000    0.000    0.000    0.000 boolalg.py:1171(Xnor)
        1    0.000    0.000    0.000    0.000 __init__.py:41(_LazySeedTracker)
        1    0.000    0.000    0.000    0.000 error.py:24(StreamMark)
        1    0.000    0.000    0.000    0.000 streams.py:117(FlowControlMixin)
        1    0.000    0.000    0.000    0.000 parameters.py:60(__init__)
        1    0.000    0.000    0.000    0.000 polyoptions.py:711(Symbols)
        1    0.000    0.000    0.000    0.000 grad_mode.py:164(inference_mode)
        1    0.000    0.000    0.000    0.000 streamplot.py:313(Grid)
        1    0.000    0.000    0.000    0.000 activation.py:402(Mish)
        1    0.000    0.000    0.000    0.000 _backend.py:412(Dispatchable)
        1    0.000    0.000    0.000    0.000 _rules.py:208(_FxPassConvertNegToSigmoid)
        1    0.000    0.000    0.000    0.000 loader.py:23(_FailedTest)
        3    0.000    0.000    0.000    0.000 rcsetup.py:217(validate_dpi)
        1    0.000    0.000    0.000    0.000 _creation.py:17(<dictcomp>)
        1    0.000    0.000    0.000    0.000 selectors.py:60(_SelectorMapping)
        1    0.000    0.000    0.000    0.000 _parser.py:15(Node)
        1    0.000    0.000    0.000    0.000 assume.py:174(PredicateMeta)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:46(PytestTester)
        1    0.000    0.000    0.000    0.000 _decorator.py:148(runtime_validation_disabled)
        1    0.000    0.000    0.000    0.000 expand.py:53(StaticModule)
        1    0.000    0.000    0.000    0.000 _constraints.py:309(PreparedConstraint)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_tolower}
        1    0.000    0.000    0.000    0.000 triinterpolate.py:15(TriInterpolator)
        1    0.000    0.000    0.000    0.000 line.py:1987(Line2D)
        2    0.000    0.000    0.000    0.000 annotations.py:30(__init__)
        1    0.000    0.000    0.000    0.000 core.py:195(<listcomp>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5288(multivariate_hypergeom_frozen)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:8(Printable)
        1    0.000    0.000    0.000    0.000 conv.py:1538(LazyConvTranspose3d)
        1    0.000    0.000    0.000    0.000 kl.py:80(_Match)
        3    0.000    0.000    0.000    0.000 core.py:806(__init__)
        5    0.000    0.000    0.000    0.000 version.py:537(<lambda>)
        1    0.000    0.000    0.000    0.000 utils.py:117(Comparable)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:129(EnergyState)
        1    0.000    0.000    0.000    0.000 process.py:364(_ParentProcess)
        1    0.000    0.000    0.000    0.000 numpy.py:35(<dictcomp>)
        1    0.000    0.000    0.000    0.000 core.py:451(DebugActions)
        1    0.000    0.000    0.000    0.000 mock.py:281(_SentinelObject)
        1    0.000    0.000    0.000    0.000 abc.py:161(ResourceLoader)
        1    0.000    0.000    0.000    0.000 test.py:52(<listcomp>)
        1    0.000    0.000    0.000    0.000 _survival.py:219(ECDFResult)
        1    0.000    0.000    0.000    0.000 scale.py:334(FuncScaleLog)
        1    0.000    0.000    0.000    0.000 determinant.py:72(Permanent)
        3    0.000    0.000    0.000    0.000 {method 'toordinal' of 'datetime.date' objects}
        2    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        2    0.000    0.000    0.000    0.000 sysconfig.py:279(_get_preferred_schemes)
        2    0.000    0.000    0.000    0.000 __init__.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 fancysets.py:1493(Complexes)
        1    0.000    0.000    0.000    0.000 mathtext.py:1994(Kern)
        1    0.000    0.000    0.000    0.000 formal.py:1543(FormalPowerSeriesProduct)
        1    0.000    0.000    0.000    0.000 polyoptions.py:527(Gaussian)
        1    0.000    0.000    0.000    0.000 _rules.py:152(_FxTracerFailure)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:9(use_reflection)
        1    0.000    0.000    0.000    0.000 collections.py:1664(CircleCollection)
        1    0.000    0.000    0.000    0.000 _aliases.py:182(UniqueAllResult)
        1    0.000    0.000    0.000    0.000 ssl.py:154(<dictcomp>)
        1    0.000    0.000    0.000    0.000 activation.py:617(GLU)
        1    0.000    0.000    0.000    0.000 fnmatch.py:12(WildCard)
        1    0.000    0.000    0.000    0.000 orderings.py:137(InverseOrder)
        1    0.000    0.000    0.000    0.000 ops.py:156(<listcomp>)
        1    0.000    0.000    0.000    0.000 text.py:6(TextBackend)
        1    0.000    0.000    0.000    0.000 _rules.py:346(_ArgFormatTooVerbose)
        1    0.000    0.000    0.000    0.000 grad_mode.py:293(_unsafe_preserve_version_counter)
        1    0.000    0.000    0.000    0.000 _interface.py:846(IdentityOperator)
        1    0.000    0.000    0.000    0.000 lines.py:1440(VertexSelector)
        1    0.000    0.000    0.000    0.000 _root_scalar.py:20(MemoizeDer)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:263(Comment)
        1    0.000    0.000    0.000    0.000 comments.py:1136(TaggedScalar)
        1    0.000    0.000    0.000    0.000 tasks.py:689(_GatheringFuture)
        1    0.000    0.000    0.000    0.000 dates.py:846(AutoDateFormatter)
        1    0.000    0.000    0.000    0.000 timestamp.py:16(TimeStamp)
        1    0.000    0.000    0.000    0.000 art3d.py:293(Patch3D)
        1    0.000    0.000    0.000    0.000 _infra.py:167(StackFrame)
        1    0.000    0.000    0.000    0.000 conv.py:155(Conv3d)
        1    0.000    0.000    0.000    0.000 boolalg.py:1137(Nor)
        1    0.000    0.000    0.000    0.000 _rules.py:254(_AtenlibSymbolicFunction)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:24(Iterator)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1702(TukeyHSDResult)
        1    0.000    0.000    0.000    0.000 reinplace.py:53(_FunctionalizationMetadataProp)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:599(FloaterHormannInterpolator)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1304(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 dev.py:147(__init__)
        1    0.000    0.000    0.000    0.000 para4tb.py:133(__init__)
        1    0.000    0.000    0.000    0.000 _collections.py:5(FreezableDefaultDict)
        1    0.000    0.000    0.000    0.000 _arffread.py:232(StringAttribute)
        1    0.000    0.000    0.000    0.000 polyoptions.py:611(Strict)
        1    0.000    0.000    0.000    0.000 __init__.py:2213(NullHandler)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5689(random_table_frozen)
        1    0.000    0.000    0.000    0.000 reductions.py:62(_after_fork)
        1    0.000    0.000    0.000    0.000 grad_mode.py:108(set_grad_enabled)
        1    0.000    0.000    0.000    0.000 parameter.py:13(Parameter)
        1    0.000    0.000    0.000    0.000 _rules.py:300(_FxNodeToOnnx)
        1    0.000    0.000    0.000    0.000 _minimize.py:1050(_Patch_Callback_Equal_Variables)
        1    0.000    0.000    0.000    0.000 geo.py:229(_GeoTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:307(_LowLevelFile)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:12(LRUDict)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1088(_DOF_estimator_geom)
        1    0.000    0.000    0.000    0.000 bessel.py:2149(_besseli)
        4    0.000    0.000    0.000    0.000 _pytree.py:8(register_pytree_flatten_spec)
        2    0.000    0.000    0.000    0.000 glob.py:229(_ishidden)
        1    0.000    0.000    0.000    0.000 transforms.py:964(FourierTypeTransform)
        1    0.000    0.000    0.000    0.000 _comparison.py:414(NonePair)
        1    0.000    0.000    0.000    0.000 typing.py:951(__repr__)
        1    0.000    0.000    0.000    0.000 _trustregion_dogleg.py:38(DoglegSubproblem)
        1    0.000    0.000    0.000    0.000 join.py:11(JoinHook)
        1    0.000    0.000    0.000    0.000 constraints.py:68(Constraint)
        6    0.000    0.000    0.000    0.000 signal.py:48(_wraps)
        1    0.000    0.000    0.000    0.000 TiffTags.py:24(_TagInfo)
        1    0.000    0.000    0.000    0.000 discovery.py:179(PEP420PackageFinder)
        1    0.000    0.000    0.000    0.000 _pep440.py:135(_BaseVersion)
        1    0.000    0.000    0.000    0.000 core.py:957(NullCache)
        3    0.000    0.000    0.000    0.000 six.py:885(add_metaclass)
        1    0.000    0.000    0.000    0.000 deprecation.py:101(_DeprecationHelperStr)
        1    0.000    0.000    0.000    0.000 jiterator.py:42(_JittedFunction)
        1    0.000    0.000    0.000    0.000 __init__.py:86(_StrongRef)
        1    0.000    0.000    0.000    0.000 base.py:274(ConstantDenseOutput)
        1    0.000    0.000    0.000    0.000 _interpolate.py:167(_do_extrapolate)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:155(BootstrapSobolResult)
        1    0.000    0.000    0.000    0.000 __future__.py:81(_Feature)
        1    0.000    0.000    0.000    0.000 scale.py:246(InvertedLogTransform)
        1    0.000    0.000    0.000    0.000 loss.py:1226(CosineEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 calendar.py:573(LocaleTextCalendar)
        1    0.000    0.000    0.000    0.000 activation.py:650(GELU)
        1    0.000    0.000    0.000    0.000 ops.py:294(IndexableIter)
        1    0.000    0.000    0.000    0.000 equality.py:209(StrictLessThanPredicate)
        1    0.000    0.000    0.000    0.000 _pep440.py:77(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 events.py:17(Event)
        1    0.000    0.000    0.000    0.000 protocols.py:9(BaseProtocol)
        1    0.000    0.000    0.000    0.000 widgets.py:133(Button)
        1    0.000    0.000    0.000    0.000 actions.py:19(OnlyOnce)
        1    0.000    0.000    0.000    0.000 __init__.py:290(_DeviceGuard)
        1    0.000    0.000    0.000    0.000 scale.py:126(FuncTransform)
        1    0.000    0.000    0.000    0.000 legend_handler.py:338(HandlerRegularPolyCollection)
        1    0.000    0.000    0.000    0.000 gridspec.py:545(GridSpecFromSubplotSpec)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:12(PageTrendTestResult)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3562(special_ortho_group_gen)
        1    0.000    0.000    0.000    0.000 polar.py:269(ThetaTick)
        1    0.000    0.000    0.000    0.000 ImageFile.py:866(PyEncoder)
        1    0.000    0.000    0.000    0.000 core.py:943(_CacheType)
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:1851(_ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 events.py:170(AliasEvent)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_128}
        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 _nonlin.py:318(TerminationCondition)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:41(BasinHoppingRunner)
        1    0.000    0.000    0.000    0.000 _polyint.py:245(KroghInterpolator)
        1    0.000    0.000    0.000    0.000 _utils.py:39(Interval)
        1    0.000    0.000    0.000    0.000 transforms.py:587(SigmoidTransform)
        1    0.000    0.000    0.000    0.000 _nonlin.py:382(Jacobian)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:13(ReentrancyLock)
        1    0.000    0.000    0.000    0.000 autograd_function.py:29(CustomFunctionPyOperator)
        1    0.000    0.000    0.000    0.000 extras.py:213(_fromnxfunction)
        4    0.000    0.000    0.000    0.000 results.py:26(__init__)
        1    0.000    0.000    0.000    0.000 bessel.py:2180(_besselk)
        1    0.000    0.000    0.000    0.000 relational.py:891(_Less)
        1    0.000    0.000    0.000    0.000 context.py:203(reducer)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1740(ParamSpec)
        1    0.000    0.000    0.000    0.000 __init__.py:1239(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _datasource.py:74(_FileOpeners)
        1    0.000    0.000    0.000    0.000 graph.py:42(_CustomBuiltin)
        7    0.000    0.000    0.000    0.000 due.py:31(non_decorating_decorator)
        6    0.000    0.000    0.000    0.000 expr.py:1021(_eval_power)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:230(__init__)
        3    0.000    0.000    0.000    0.000 core.py:104(do_one)
        1    0.000    0.000    0.000    0.000 selectors.py:433(PollSelector)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:289(AddressList)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:900(ShapeGuardPrinter)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:91(AppliedFunction)
        1    0.000    0.000    0.000    0.000 request.py:1588(CacheFTPHandler)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:667(LaplaceTransformInversionMethods)
        1    0.000    0.000    0.000    0.000 emitter.py:57(Indents)
        1    0.000    0.000    0.000    0.000 graph.py:247(_node_list)
        1    0.000    0.000    0.000    0.000 _convertions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11039(_SimpleChi2)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:147(JvpInterpreter)
        1    0.000    0.000    0.000    0.000 _survival.py:469(LogRankResult)
        2    0.000    0.000    0.000    0.000 rootoftools.py:83(__init__)
        1    0.000    0.000    0.000    0.000 core.py:3473(CharsNotIn)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:81(_SupportsDType)
        1    0.000    0.000    0.000    0.000 getopt.py:43(GetoptError)
        1    0.000    0.000    0.000    0.000 _infra.py:302(Invocation)
        1    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 parameters.py:7(_global_parameters)
        1    0.000    0.000    0.000    0.000 configparser.py:168(Error)
        1    0.000    0.000    0.000    0.000 conv.py:154(_ConvTransposeNd)
        3    0.000    0.000    0.000    0.000 rendezvous.py:22(register_rendezvous_handler)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:556(DisplayName)
        1    0.000    0.000    0.000    0.000 constraint_registry.py:79(ConstraintRegistry)
        1    0.000    0.000    0.000    0.000 autograd_function.py:251(VmapInfo)
        1    0.000    0.000    0.000    0.000 threading.py:1317(_make_invoke_excepthook)
        1    0.000    0.000    0.000    0.000 _adapters.py:114(OrphanPath)
        1    0.000    0.000    0.000    0.000 arrayprint.py:905(FloatingFormat)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1251(__init__)
        6    0.000    0.000    0.000    0.000 _common.py:13(tzname_in_python2)
        1    0.000    0.000    0.000    0.000 pathlib.py:49(_Flavour)
        1    0.000    0.000    0.000    0.000 core.py:2679(CloseMatch)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:308(Address)
        1    0.000    0.000    0.000    0.000 traversal.py:68(preorder_traversal)
        1    0.000    0.000    0.000    0.000 widgets.py:1621(SpanSelector)
        1    0.000    0.000    0.000    0.000 polynomials.py:728(chebyshevu_root)
        1    0.000    0.000    0.000    0.000 __init__.py:303(device)
        1    0.000    0.000    0.000    0.000 _package_pickler.py:21(PackagePickler)
        1    0.000    0.000    0.000    0.000 threading.py:279(_is_owned)
        1    0.000    0.000    0.000    0.000 colors.py:1418(BoundaryNorm)
        1    0.000    0.000    0.000    0.000 facts.py:301(rules_alpha)
        3    0.000    0.000    0.000    0.000 facts.py:290(split_alpha_beta)
        1    0.000    0.000    0.000    0.000 PaletteFile.py:22(PaletteFile)
        1    0.000    0.000    0.000    0.000 widgets.py:1209(Cursor)
        1    0.000    0.000    0.000    0.000 arpack.py:389(_SymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 _adapters.py:7(SpecLoaderAdapter)
        1    0.000    0.000    0.000    0.000 activation.py:691(Hardshrink)
        1    0.000    0.000    0.000    0.000 art3d.py:375(Patch3DCollection)
        1    0.000    0.000    0.000    0.000 para4tb.py:132(ParaTB_train)
        1    0.000    0.000    0.000    0.000 polyoptions.py:50(BooleanOption)
        1    0.000    0.000    0.000    0.000 transforms.py:2654(TransformedPath)
        1    0.000    0.000    0.000    0.000 ordinals.py:261(OrdinalOmega)
        1    0.000    0.000    0.000    0.000 backend_tools.py:736(ZoomPanBase)
        1    0.000    0.000    0.000    0.000 _interface.py:639(_AdjointLinearOperator)
        1    0.000    0.000    0.000    0.000 proxy.py:22(Scope)
        1    0.000    0.000    0.000    0.000 errors.py:45(UnsupportedOperatorError)
        1    0.000    0.000    0.000    0.000 pooling.py:1121(_AdaptiveAvgPoolNd)
        1    0.000    0.000    0.000    0.000 mathtext.py:888(DejaVuFonts)
        1    0.000    0.000    0.000    0.000 qs.py:9(SievePolynomial)
        2    0.000    0.000    0.000    0.000 __init__.py:8(__init__)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:18(ParserSyntaxError)
        1    0.000    0.000    0.000    0.000 report.py:28(BasicReport)
        1    0.000    0.000    0.000    0.000 collections.py:1296(StarPolygonCollection)
        1    0.000    0.000    0.000    0.000 animation.py:1384(TimedAnimation)
        1    0.000    0.000    0.000    0.000 version.py:454(_TrimmedRelease)
        1    0.000    0.000    0.000    0.000 ticker.py:211(TickHelper)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:634(DomainLiteral)
        1    0.000    0.000    0.000    0.000 argparse.py:109(_AttributeHolder)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:113(OneHotCategoricalStraightThrough)
        1    0.000    0.000    0.000    0.000 __init__.py:1323(disable)
        1    0.000    0.000    0.000    0.000 quadrature.py:459(QuadratureMethods)
        1    0.000    0.000    0.000    0.000 util.py:6(assoc)
        1    0.000    0.000    0.000    0.000 datapipe.py:326(_DataPipeSerializationWrapper)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4330(_shift_scale_distribution_function_2arg)
        1    0.000    0.000    0.000    0.000 bessel.py:901(SphericalBesselBase)
        1    0.000    0.000    0.000    0.000 __init__.py:115(<dictcomp>)
        1    0.000    0.000    0.000    0.000 core.py:5823(Combine)
        1    0.000    0.000    0.000    0.000 combining.py:496(MultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 activation.py:361(SiLU)
        1    0.000    0.000    0.000    0.000 exceptions.py:29(IncompleteReadError)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:43(size_bytes)
        1    0.000    0.000    0.000    0.000 gmpyfinitefield.py:9(GMPYFiniteField)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2500(TypeVarTuple)
        1    0.000    0.000    0.000    0.000 _base.py:33(_axis_method_wrapper)
        1    0.000    0.000    0.000    0.000 widgets.py:1303(MultiCursor)
        1    0.000    0.000    0.000    0.000 error.py:52(StringMark)
        1    0.000    0.000    0.000    0.000 arrayop.py:458(Flatten)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:49(IncrementRecursionCount)
        1    0.000    0.000    0.000    0.000 numpy.py:483(CuPyPrinter)
        1    0.000    0.000    0.000    0.000 _datasource.py:99(__init__)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:11(Token)
        1    0.000    0.000    0.000    0.000 _infra.py:40(PatchedPropertyBag)
        1    0.000    0.000    0.000    0.000 tarfile.py:304(_LowLevelFile)
        2    0.000    0.000    0.000    0.000 _onenormest.py:121(_blocked_elementwise)
        1    0.000    0.000    0.000    0.000 symbol.py:26(Str)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:425(SR1)
        1    0.000    0.000    0.000    0.000 pydoc.py:389(ErrorDuringImport)
        1    0.000    0.000    0.000    0.000 pythonfinitefield.py:9(PythonFiniteField)
        1    0.000    0.000    0.000    0.000 storage.py:230(UntypedStorage)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:416(F)
        1    0.000    0.000    0.000    0.000 loss.py:1279(MarginRankingLoss)
        1    0.000    0.000    0.000    0.000 _base.py:6(Rule)
        1    0.000    0.000    0.000    0.000 abc.py:230(ExecutionLoader)
        1    0.000    0.000    0.000    0.000 _base.py:74(_AsCompletedWaiter)
        1    0.000    0.000    0.000    0.000 geo.py:17(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 transports.py:46(ReadTransport)
        1    0.000    0.000    0.000    0.000 parser.py:16(Parser)
        1    0.000    0.000    0.000    0.000 util.py:19(LazyEval)
        2    0.000    0.000    0.000    0.000 decorator.py:120(__init__)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1213(_RangeFunc)
        1    0.000    0.000    0.000    0.000 abc.py:112(PathEntryFinder)
        1    0.000    0.000    0.000    0.000 loss.py:380(KLDivLoss)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_256}
        1    0.000    0.000    0.000    0.000 stubs.py:4(QuantStub)
        1    0.000    0.000    0.000    0.000 _interface.py:692(_SumLinearOperator)
        1    0.000    0.000    0.000    0.000 linear.py:5(Linear)
        1    0.000    0.000    0.000    0.000 utils.py:138(ObjectWrapper)
        1    0.000    0.000    0.000    0.000 request.py:1256(AbstractHTTPHandler)
        1    0.000    0.000    0.000    0.000 backend_tools.py:366(RubberbandBase)
        1    0.000    0.000    0.000    0.000 expand.py:422(LazyMappingProxy)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:196(AdaptiveStepsize)
        1    0.000    0.000    0.000    0.000 conv.py:281(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 _optimize.py:3934(_Brute_Wrapper)
        1    0.000    0.000    0.000    0.000 bessel.py:846(hankel2)
        1    0.000    0.000    0.000    0.000 core.py:977(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 compat.py:112(Nprint)
        1    0.000    0.000    0.000    0.000 mathtext.py:932(DejaVuSerifFonts)
        1    0.000    0.000    0.000    0.000 pkgutil.py:194(ImpImporter)
        1    0.000    0.000    0.000    0.000 constraints.py:550(_Stack)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:83(VmapInterpreter)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:67(SourceLoader)
        1    0.000    0.000    0.000    0.000 _exceptions.py:38(_UFuncNoLoopError)
        1    0.000    0.000    0.000    0.000 case.py:1446(_SubTest)
        1    0.000    0.000    0.000    0.000 inference.py:273(PropKB)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__init__)
        1    0.000    0.000    0.000    0.000 hyper.py:29(TupleArg)
        1    0.000    0.000    0.000    0.000 polyutils.py:444(PicklableWithSlots)
        1    0.000    0.000    0.000    0.000 message.py:1195(EmailMessage)
        1    0.000    0.000    0.000    0.000 storage.py:972(_LegacyStorageMeta)
        4    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:403(_some_attrgetter)
        1    0.000    0.000    0.000    0.000 _cubic.py:72(CubicHermiteSpline)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3305(_moment_standardized_formula)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1285(<listcomp>)
        1    0.000    0.000    0.000    0.000 numpy.py:481(<dictcomp>)
        1    0.000    0.000    0.000    0.000 polar.py:202(_AxisWrapper)
        1    0.000    0.000    0.000    0.000 _arffread.py:655(MetaData)
        1    0.000    0.000    0.000    0.000 __init__.py:46(PackageNotFoundError)
        1    0.000    0.000    0.000    0.000 unix_events.py:980(BaseChildWatcher)
        1    0.000    0.000    0.000    0.000 transforms.py:865(SoftmaxTransform)
        1    0.000    0.000    0.000    0.000 comments.py:50(IDX)
        1    0.000    0.000    0.000    0.000 _vertex.py:205(VertexCube)
        1    0.000    0.000    0.000    0.000 reductions.py:49(SharedCache)
        1    0.000    0.000    0.000    0.000 _linalg.py:33(EighResult)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:61(ThroughputBenchmark)
        1    0.000    0.000    0.000    0.000 _typing.py:72(HasShape)
        1    0.000    0.000    0.000    0.000 core.py:4491(Each)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1677(poisson_binomial_frozen)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:1301(PrecisionManager)
        1    0.000    0.000    0.000    0.000 utils.py:8(SequenceWrapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 _typing.py:118(DTypesSigned)
        1    0.000    0.000    0.000    0.000 pydoc.py:1127(TextRepr)
        1    0.000    0.000    0.000    0.000 _recursive.py:358(__init__)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1328(_DerivedBivariateSpline)
        1    0.000    0.000    0.000    0.000 _state.py:12(EnabledProxy)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1274(_TypedDictSpecialForm)
        1    0.000    0.000    0.000    0.000 pathlib.py:422(_PathParents)
        1    0.000    0.000    0.000    0.000 _upfirdn.py:73(_UpFIRDn)
        1    0.000    0.000    0.000    0.000 locks.py:331(Semaphore)
        1    0.000    0.000    0.000    0.000 __init__.py:13(verbose)
        1    0.000    0.000    0.000    0.000 _compression.py:63(seekable)
        1    0.000    0.000    0.000    0.000 visualization.py:9(VisualizationMethods)
        1    0.000    0.000    0.000    0.000 context.py:276(ForkProcess)
        1    0.000    0.000    0.000    0.000 py3k.py:92(contextlib_nullcontext)
        1    0.000    0.000    0.000    0.000 pickle.py:263(_Unframer)
        4    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:39(LagrangianHessian)
        1    0.000    0.000    0.000    0.000 _interface.py:781(_PowerLinearOperator)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:301(Metropolis)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1459(OneCycleLR)
        2    0.000    0.000    0.000    0.000 core.py:3433(shape)
        1    0.000    0.000    0.000    0.000 offsetbox.py:577(PaddedBox)
        1    0.000    0.000    0.000    0.000 _array_like.py:39(_SupportsArray)
        1    0.000    0.000    0.000    0.000 series.py:1608(Parametric2DLineSeries)
        1    0.000    0.000    0.000    0.000 formal.py:1613(FormalPowerSeriesCompose)
        1    0.000    0.000    0.000    0.000 _policybase.py:41(__init__)
        1    0.000    0.000    0.000    0.000 container.py:31(Container)
        1    0.000    0.000    0.000    0.000 activation.py:438(Hardswish)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:4(DegenerateDataWarning)
        1    0.000    0.000    0.000    0.000 conv.py:1128(_ConvTransposeMixin)
        1    0.000    0.000    0.000    0.000 __init__.py:1237(_StderrHandler)
        1    0.000    0.000    0.000    0.000 datetime.py:1219(tzinfo)
        1    0.000    0.000    0.000    0.000 loss.py:474(MSELoss)
        1    0.000    0.000    0.000    0.000 tz.py:1036(tzstr)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:182(WhiteSpaceTokenList)
        1    0.000    0.000    0.000    0.000 numpy.py:504(<dictcomp>)
        1    0.000    0.000    0.000    0.000 ssl.py:170(_TLSContentType)
        1    0.000    0.000    0.000    0.000 loss.py:17(_Loss)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CudaError)
        1    0.000    0.000    0.000    0.000 font_manager.py:338(FontEntry)
        1    0.000    0.000    0.000    0.000 line.py:2504(Line3D)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:363(_broadcast_to_dispatcher)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1289(ExcitingMixing)
        1    0.000    0.000    0.000    0.000 _linalg.py:41(SlogdetResult)
        1    0.000    0.000    0.000    0.000 _typing.py:126(DTypesUnsigned)
        1    0.000    0.000    0.000    0.000 mul.py:25(NC_Marker)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1783(DraggableOffsetBox)
        1    0.000    0.000    0.000    0.000 _factories.py:8(_TzSingleton)
        1    0.000    0.000    0.000    0.000 Lattice.py:7(lattice)
        1    0.000    0.000    0.000    0.000 modules.py:1889(EndomorphismRing)
        1    0.000    0.000    0.000    0.000 core.py:6844(_frommethod)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:463(_VectorHessWrapper)
        1    0.000    0.000    0.000    0.000 conv_fused.py:495(ConvBn2d)
        1    0.000    0.000    0.000    0.000 core.py:6004(Suppress)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:410(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 core.py:194(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:576(_StreamProxy)
        1    0.000    0.000    0.000    0.000 readers.py:15(FileReader)
        1    0.000    0.000    0.000    0.000 _base.py:59(_Waiter)
        1    0.000    0.000    0.000    0.000 core.py:903(_MaskedUnaryOperation)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:600(rv_continuous_frozen)
        1    0.000    0.000    0.000    0.000 _util.py:1064(__getattr__)
        1    0.000    0.000    0.000    0.000 transforms.py:1165(SineTransform)
        2    0.000    0.000    0.000    0.000 {built-in method maketrans}
        1    0.000    0.000    0.000    0.000 graph.py:236(_InsertPoint)
        1    0.000    0.000    0.000    0.000 dviread.py:607(Vf)
        1    0.000    0.000    0.000    0.000 series.py:1800(SurfaceBaseSeries)
        1    0.000    0.000    0.000    0.000 single.py:1046(SecondNonlinearAutonomousConserved)
        1    0.000    0.000    0.000    0.000 memory.py:673(_CUDAAllocator)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6860(vonmises_fisher_frozen)
        1    0.000    0.000    0.000    0.000 _interface.py:719(_ProductLinearOperator)
        1    0.000    0.000    0.000    0.000 dev.py:125(requires)
        1    0.000    0.000    0.000    0.000 module.py:27(_IncompatibleKeys)
        1    0.000    0.000    0.000    0.000 six.py:178(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:878(BooleanOptionalAction)
        1    0.000    0.000    0.000    0.000 transforms.py:40(IntegralTransformError)
        1    0.000    0.000    0.000    0.000 {built-in method posix.cpu_count}
        1    0.000    0.000    0.000    0.000 util.py:127(LRUMemo)
        1    0.000    0.000    0.000    0.000 boolalg.py:368(__hash__)
        1    0.000    0.000    0.000    0.000 _vertex.py:165(VertexVectorField)
        1    0.000    0.000    0.000    0.000 single.py:572(FirstLinear)
        1    0.000    0.000    0.000    0.000 _static.py:9(Static)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:485(_IntegerInterval)
        1    0.000    0.000    0.000    0.000 core.py:5097(_MultipleMatch)
        1    0.000    0.000    0.000    0.000 splitter_base.py:186(Subgraph)
        1    0.000    0.000    0.000    0.000 package_exporter.py:128(PackagingError)
        1    0.000    0.000    0.000    0.000 variable.py:13(Variable)
        1    0.000    0.000    0.000    0.000 request.py:1474(FileHandler)
        1    0.000    0.000    0.000    0.000 _classes.py:6(_ClassNamespace)
        1    0.000    0.000    0.000    0.000 rcsetup.py:50(ValidateInStrings)
        1    0.000    0.000    0.000    0.000 widgets.py:517(CheckButtons)
        1    0.000    0.000    0.000    0.000 _interface.py:832(_AdjointMatrixOperator)
        1    0.000    0.000    0.000    0.000 pooling.py:97(MaxPool2d)
        1    0.000    0.000    0.000    0.000 _base.py:111(_AllCompletedWaiter)
        1    0.000    0.000    0.000    0.000 parse.py:795(_Quoter)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3563(Show)
        1    0.000    0.000    0.000    0.000 series.py:1755(Parametric3DLineSeries)
        1    0.000    0.000    0.000    0.000 transforms.py:331(MellinTransform)
        1    0.000    0.000    0.000    0.000 _spdx.py:6(SPDXLicense)
        1    0.000    0.000    0.000    0.000 _covariance.py:503(CovViaDiagonal)
        1    0.000    0.000    0.000    0.000 single.py:839(Factorable)
        1    0.000    0.000    0.000    0.000 permutations.py:3067(AppliedPermutation)
        1    0.000    0.000    0.000    0.000 trifinder.py:24(TrapezoidMapTriFinder)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:9(_HasStorage)
        1    0.000    0.000    0.000    0.000 forward_ad.py:190(_set_fwd_grad_enabled)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:493(Domain)
        1    0.000    0.000    0.000    0.000 arpack.py:274(ArpackError)
        1    0.000    0.000    0.000    0.000 __init__.py:503(PackagePath)
        1    0.000    0.000    0.000    0.000 _aliases.py:189(UniqueCountsResult)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__getattr__)
        3    0.000    0.000    0.000    0.000 arrayprint.py:898(_none_or_positive_arg)
        5    0.000    0.000    0.000    0.000 multiarray.py:85(empty_like)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:67(GradientFile)
        1    0.000    0.000    0.000    0.000 _shgo.py:1538(LMapCache)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:658(InterpolatedUnivariateSpline)
        1    0.000    0.000    0.000    0.000 _pytree.py:41(NodeDef)
        1    0.000    0.000    0.000    0.000 worker.py:51(ManagerWatchdog)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:659(FitDataError)
        1    0.000    0.000    0.000    0.000 npyio.py:42(BagObj)
        1    0.000    0.000    0.000    0.000 __init__.py:21(cuFFTPlanCacheAttrContextProp)
        1    0.000    0.000    0.000    0.000 bdf.py:456(BdfDenseOutput)
        1    0.000    0.000    0.000    0.000 cache.py:5(_cache)
        4    0.000    0.000    0.000    0.000 function_base.py:1800(_trim_zeros)
        1    0.000    0.000    0.000    0.000 patches.py:2001(Square)
        1    0.000    0.000    0.000    0.000 diophantine.py:1029(GeneralPythagorean)
        1    0.000    0.000    0.000    0.000 transforms.py:611(SoftplusTransform)
        2    0.000    0.000    0.000    0.000 {function DecompressReader.close at 0x146b82dc53a0}
        1    0.000    0.000    0.000    0.000 index_tricks.py:618(ndindex)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1352(KrylovJacobian)
        1    0.000    0.000    0.000    0.000 _guards.py:284(GuardsContext)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:9(ExportTypes)
        1    0.000    0.000    0.000    0.000 connection.py:578(SocketListener)
        1    0.000    0.000    0.000    0.000 activation.py:244(ReLU6)
        1    0.000    0.000    0.000    0.000 __init__.py:28(_QEngineProp)
        1    0.000    0.000    0.000    0.000 parameter.py:165(UninitializedParameter)
        4    0.000    0.000    0.000    0.000 ops.py:52(nan_if_exception)
        1    0.000    0.000    0.000    0.000 Manager.py:1(manager)
        1    0.000    0.000    0.000    0.000 utilities.py:7(DotProdSimpState)
        1    0.000    0.000    0.000    0.000 transforms.py:1047(InverseFourierTransform)
        1    0.000    0.000    0.000    0.000 series.py:28(IntervalMathPrinter)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:48(ProxyableClassMeta)
        1    0.000    0.000    0.000    0.000 legend_handler.py:132(HandlerNpoints)
        1    0.000    0.000    0.000    0.000 polyoptions.py:602(Symmetric)
        1    0.000    0.000    0.000    0.000 __init__.py:29(context)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:364(Group)
        1    0.000    0.000    0.000    0.000 __init__.py:9(verbose)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1243(LinearMixing)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:112(Bytes)
        1    0.000    0.000    0.000    0.000 _hypotests.py:917(BarnardExactResult)
        1    0.000    0.000    0.000    0.000 polyutils.py:187(<listcomp>)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:760(LinearVectorFunction)
        1    0.000    0.000    0.000    0.000 index_tricks.py:303(__init__)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1188(BoschlooExactResult)
        1    0.000    0.000    0.000    0.000 __init__.py:1152(FileHandler)
        1    0.000    0.000    0.000    0.000 least_squares.py:255(_WrapArgsKwargs)
        1    0.000    0.000    0.000    0.000 conv.py:342(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 __init__.py:82(is_available)
        1    0.000    0.000    0.000    0.000 _numdiff.py:863(_Fun_Wrapper)
        1    0.000    0.000    0.000    0.000 dbapi2.py:49(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:1284(CosineTransform)
        1    0.000    0.000    0.000    0.000 ndim_array.py:591(ImmutableNDimArray)
        1    0.000    0.000    0.000    0.000 pooling.py:893(LPPool1d)
        1    0.000    0.000    0.000    0.000 index_tricks.py:109(nd_grid)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:224(FortranFormatParser)
        1    0.000    0.000    0.000    0.000 colors.py:1367(PowerNorm)
        1    0.000    0.000    0.000    0.000 mock.py:341(_CallList)
        1    0.000    0.000    0.000    0.000 single.py:732(Bernoulli)
        1    0.000    0.000    0.000    0.000 scale.py:162(FuncScale)
        1    0.000    0.000    0.000    0.000 ticker.py:1816(IndexLocator)
        1    0.000    0.000    0.000    0.000 extension.py:23(Extension)
        1    0.000    0.000    0.000    0.000 comments.py:1085(CommentedOrderedMap)
        1    0.000    0.000    0.000    0.000 bessel.py:800(hankel1)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:4(InverseLaplaceTransform)
        1    0.000    0.000    0.000    0.000 polyutils.py:516(IntegerPowerable)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2687(_max_dispatcher)
        1    0.000    0.000    0.000    0.000 parameters.py:70(evaluate)
        1    0.000    0.000    0.000    0.000 profiler_util.py:534(FunctionEventAvg)
        1    0.000    0.000    0.000    0.000 threading.py:410(Semaphore)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:657(Parameter)
        1    0.000    0.000    0.000    0.000 mathtext.py:349(MathtextBackendCairo)
        2    0.000    0.000    0.000    0.000 version.py:511(_parse_local_version)
        1    0.000    0.000    0.000    0.000 client.py:1481(IncompleteRead)
        1    0.000    0.000    0.000    0.000 zipfile.py:618(LZMACompressor)
        1    0.000    0.000    0.000    0.000 doccer.py:23(Decorator)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:59(UnsupportedFakeTensorException)
        1    0.000    0.000    0.000    0.000 _parser.py:1589(ParserError)
        1    0.000    0.000    0.000    0.000 ticker.py:1845(FixedLocator)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:16(_ScalarGradWrapper)
        1    0.000    0.000    0.000    0.000 _ops.py:594(_Ops)
        1    0.000    0.000    0.000    0.000 core.py:2403(Token)
        1    0.000    0.000    0.000    0.000 argparse.py:783(Action)
        1    0.000    0.000    0.000    0.000 constraints.py:380(_HalfOpenInterval)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:45(DupFd)
        1    0.000    0.000    0.000    0.000 serialization.py:250(_open_file)
        1    0.000    0.000    0.000    0.000 core.py:5(Registry)
        1    0.000    0.000    0.000    0.000 request.py:605(BaseHandler)
        2    0.000    0.000    0.000    0.000 index_tricks.py:144(__init__)
        1    0.000    0.000    0.000    0.000 markers.py:33(InvalidMarker)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:20(NearestNDInterpolator)
        1    0.000    0.000    0.000    0.000 _interpolate.py:125(interp2d)
        1    0.000    0.000    0.000    0.000 category.py:113(StrCategoryLocator)
        1    0.000    0.000    0.000    0.000 graph_module.py:28(__init__)
        1    0.000    0.000    0.000    0.000 overrides.py:1872(enable_reentrant_dispatch)
        1    0.000    0.000    0.000    0.000 _musllinux.py:18(_MuslVersion)
        1    0.000    0.000    0.000    0.000 _mgc.py:17(_ParallelP)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:171(GaussianInteger)
        1    0.000    0.000    0.000    0.000 animation.py:1521(FuncAnimation)
        1    0.000    0.000    0.000    0.000 kind.py:36(KindMeta)
        1    0.000    0.000    0.000    0.000 zipfile.py:2271(FastLookup)
        1    0.000    0.000    0.000    0.000 __init__.py:790(Filterer)
        1    0.000    0.000    0.000    0.000 dataloader.py:83(_InfiniteConstantSampler)
        4    0.000    0.000    0.000    0.000 shape_base.py:19(_atleast_1d_dispatcher)
        1    0.000    0.000    0.000    0.000 mock.py:2140(MagicProxy)
        1    0.000    0.000    0.000    0.000 argparse.py:1638(_ArgumentGroup)
        3    0.000    0.000    0.000    0.000 orderings.py:156(__init__)
        1    0.000    0.000    0.000    0.000 _docscrape.py:615(ObjDoc)
        1    0.000    0.000    0.000    0.000 arpack.py:606(_UnsymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 polyoptions.py:664(Include)
        1    0.000    0.000    0.000    0.000 trirefine.py:12(TriRefiner)
        1    0.000    0.000    0.000    0.000 configparser.py:360(Interpolation)
        1    0.000    0.000    0.000    0.000 transforms.py:986(FourierTransform)
        1    0.000    0.000    0.000    0.000 widgets.py:2368(LassoSelector)
        1    0.000    0.000    0.000    0.000 modules.py:1286(SubModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 decoder.py:20(JSONDecodeError)
        1    0.000    0.000    0.000    0.000 core.py:2627(CaselessLiteral)
        1    0.000    0.000    0.000    0.000 base.py:233(DenseOutput)
        1    0.000    0.000    0.000    0.000 qconfig.py:79(QConfig)
        1    0.000    0.000    0.000    0.000 response.py:57(addinfo)
        1    0.000    0.000    0.000    0.000 polar.py:515(RadialTick)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:345(<genexpr>)
        1    0.000    0.000    0.000    0.000 containers.py:379(TupleKind)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:608(SequentialLR)
        1    0.000    0.000    0.000    0.000 rrule.py:66(weekday)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:69(_override_ufunc_default_kwargs)
        1    0.000    0.000    0.000    0.000 dataset.py:36(Dataset)
        1    0.000    0.000    0.000    0.000 loss.py:786(MultiLabelMarginLoss)
        1    0.000    0.000    0.000    0.000 constraints.py:245(_IntegerInterval)
        1    0.000    0.000    0.000    0.000 six.py:129(_LazyModule)
        1    0.000    0.000    0.000    0.000 groundtypes.py:21(_GMPYInteger)
        1    0.000    0.000    0.000    0.000 offsetbox.py:417(VPacker)
        1    0.000    0.000    0.000    0.000 diophantine.py:224(Univariate)
        1    0.000    0.000    0.000    0.000 _beartype.py:38(_create_beartype_decorator)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:15(DummyArray)
        1    0.000    0.000    0.000    0.000 arpack.py:957(IterInv)
        1    0.000    0.000    0.000    0.000 nodes.py:79(ScalarNode)
        1    0.000    0.000    0.000    0.000 transforms.py:1224(InverseSineTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:522(maxdict)
        1    0.000    0.000    0.000    0.000 __init__.py:711(BufferingFormatter)
        1    0.000    0.000    0.000    0.000 index_tricks.py:569(ndenumerate)
        1    0.000    0.000    0.000    0.000 core.py:2483(Empty)
        1    0.000    0.000    0.000    0.000 series.py:1742(Line3DBaseSeries)
        2    0.000    0.000    0.000    0.000 axis.py:604(__init__)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1226(_OptFunc)
        1    0.000    0.000    0.000    0.000 common.py:11(HolderModule)
        1    0.000    0.000    0.000    0.000 numbers.py:2764(IntegerConstant)
        1    0.000    0.000    0.000    0.000 ticker.py:1985(MultipleLocator)
        1    0.000    0.000    0.000    0.000 _miobase.py:337(MatVarReader)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:424(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:836(MikotaPair)
        1    0.000    0.000    0.000    0.000 inputs.py:3071(UnknownPotcarWarning)
        1    0.000    0.000    0.000    0.000 _recursive.py:123(SourceContext)
        1    0.000    0.000    0.000    0.000 locks.py:421(BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 more.py:2688(SequenceView)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6223(dirichlet_multinomial_frozen)
        1    0.000    0.000    0.000    0.000 blas.py:250(<dictcomp>)
        2    0.000    0.000    0.000    0.000 libmpf.py:692(mpf_sign)
        1    0.000    0.000    0.000    0.000 arpack.py:315(_ArpackParams)
        1    0.000    0.000    0.000    0.000 polyoptions.py:648(Formal)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:797(is_package)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:122(__bool__)
        1    0.000    0.000    0.000    0.000 parameter.py:6(_ParameterMeta)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3437(StatusbarBase)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4127(unitary_group_gen)
        1    0.000    0.000    0.000    0.000 case.py:282(_AssertWarnsContext)
        1    0.000    0.000    0.000    0.000 tarfile.py:570(_StreamProxy)
        1    0.000    0.000    0.000    0.000 __init__.py:156(py_object)
        1    0.000    0.000    0.000    0.000 frontend.py:101(FrontendError)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1153(_Frame)
        1    0.000    0.000    0.000    0.000 _minimize.py:1066(_Remove_From_Func)
        1    0.000    0.000    0.000    0.000 decoder.py:114(ImageHandler)
        1    0.000    0.000    0.000    0.000 threading.py:267(__exit__)
        1    0.000    0.000    0.000    0.000 dates.py:621(IndexDateFormatter)
        3    0.000    0.000    0.000    0.000 core.py:16(exhaust)
        1    0.000    0.000    0.000    0.000 core.py:5206(ZeroOrMore)
        1    0.000    0.000    0.000    0.000 response.py:37(addclosehook)
        1    0.000    0.000    0.000    0.000 events.py:76(CollectionStartEvent)
        2    0.000    0.000    0.000    0.000 _adapters.py:25(__init__)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:69(SymDispatchMode)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1242(_T)
        1    0.000    0.000    0.000    0.000 proxy.py:304(GraphAppendingTracer)
        1    0.000    0.000    0.000    0.000 spawn.py:25(ProcessRaisedException)
        1    0.000    0.000    0.000    0.000 exceptions.py:98(AxisError)
        1    0.000    0.000    0.000    0.000 scale.py:372(SymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 _linalg.py:37(QRResult)
        1    0.000    0.000    0.000    0.000 _constraints.py:21(NonlinearConstraint)
        1    0.000    0.000    0.000    0.000 _manylinux.py:80(_GLibCVersion)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:1330(P2POp)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:35(RootResults)
        1    0.000    0.000    0.000    0.000 pydoc.py:1979(__init__)
        1    0.000    0.000    0.000    0.000 polyoptions.py:375(Greedy)
        1    0.000    0.000    0.000    0.000 core.py:5054(NotAny)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:5(ReorderError)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:1398(FakeCopyMode)
        2    0.000    0.000    0.000    0.000 six.py:199(__get_module)
        1    0.000    0.000    0.000    0.000 core.py:2415(NoMatch)
        1    0.000    0.000    0.000    0.000 _ops.py:524(_OpNamespace)
        1    0.000    0.000    0.000    0.000 single.py:2012(SecondHypergeometric)
        1    0.000    0.000    0.000    0.000 pooling.py:488(_AvgPoolNd)
        1    0.000    0.000    0.000    0.000 exceptions.py:300(RecursiveGrammarException)
        1    0.000    0.000    0.000    0.000 core.py:3782(WordStart)
        1    0.000    0.000    0.000    0.000 core.py:4841(AtStringStart)
        1    0.000    0.000    0.000    0.000 abc.py:75(MetaPathFinder)
        1    0.000    0.000    0.000    0.000 argparse.py:1253(FileType)
        1    0.000    0.000    0.000    0.000 queue.py:223(PriorityQueue)
        1    0.000    0.000    0.000    0.000 request.py:1374(HTTPHandler)
        1    0.000    0.000    0.000    0.000 _util.py:571(_ScalarFunctionWrapper)
        1    0.000    0.000    0.000    0.000 fused.py:13(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 combining.py:62(ForkerIterDataPipe)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_384}
        1    0.000    0.000    0.000    0.000 ticker.py:2577(SymmetricalLogLocator)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:347(GroupList)
        1    0.000    0.000    0.000    0.000 events.py:128(DocumentStartEvent)
        1    0.000    0.000    0.000    0.000 context.py:330(on_interrupt)
        1    0.000    0.000    0.000    0.000 orderings.py:35(LexOrder)
        1    0.000    0.000    0.000    0.000 decorator.py:101(no_attrs_in_subclass)
        1    0.000    0.000    0.000    0.000 api.py:87(AllGatherStates)
        1    0.000    0.000    0.000    0.000 readers.py:107(NamespaceReader)
        1    0.000    0.000    0.000    0.000 py39.py:28(UnequalIterablesError)
        3    0.000    0.000    0.000    0.000 mock.py:283(__init__)
        1    0.000    0.000    0.000    0.000 forward_ad.py:145(dual_level)
        1    0.000    0.000    0.000    0.000 legend_handler.py:541(HandlerStem)
        1    0.000    0.000    0.000    0.000 polyoptions.py:728(Method)
        2    0.000    0.000    0.000    0.000 calendar.py:76(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:960(NoDefaultType)
        1    0.000    0.000    0.000    0.000 rrule.py:1315(_genitem)
        1    0.000    0.000    0.000    0.000 mathtext.py:1404(Box)
        1    0.000    0.000    0.000    0.000 modules.py:1847(ModuleEndomorphism)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:173(_enable_get_lr_call)
        1    0.000    0.000    0.000    0.000 _interface.py:660(_TransposedLinearOperator)
        1    0.000    0.000    0.000    0.000 _aliases.py:194(UniqueInverseResult)
        1    0.000    0.000    0.000    0.000 logic.py:365(And)
        1    0.000    0.000    0.000    0.000 _czt.py:275(ZoomFFT)
        1    0.000    0.000    0.000    0.000 profiler.py:552(emit_itt)
        1    0.000    0.000    0.000    0.000 __init__.py:2332(_classproperty)
        1    0.000    0.000    0.000    0.000 dataframes.py:205(CaptureCall)
        1    0.000    0.000    0.000    0.000 structures.py:7(DataChunkDF)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2106(wrap_logical_op_with_cast_to)
        1    0.000    0.000    0.000    0.000 single.py:2192(NthLinearConstantCoeffVariationOfParameters)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:33(mpnumeric)
        1    0.000    0.000    0.000    0.000 widgets.py:2298(EllipseSelector)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:598(LocalPart)
        1    0.000    0.000    0.000    0.000 scanner.py:57(SimpleKey)
        2    0.000    0.000    0.000    0.000 rl.py:10(rm_id)
        1    0.000    0.000    0.000    0.000 facts.py:571(FactKB)
        1    0.000    0.000    0.000    0.000 kind.py:84(_UndefinedKind)
        1    0.000    0.000    0.000    0.000 optimization.py:15(Newton)
        1    0.000    0.000    0.000    0.000 polyerrors.py:13(ExactQuotientFailed)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:212(StrategyChain)
        2    0.000    0.000    0.000    0.000 {method 'removesuffix' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getCompiledVersion}
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:443(_RealInterval)
        1    0.000    0.000    0.000    0.000 abc.py:276(SourceLoader)
        1    0.000    0.000    0.000    0.000 fused.py:149(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 __init__.py:41(PropModule)
        1    0.000    0.000    0.000    0.000 ticker.py:333(FixedFormatter)
        1    0.000    0.000    0.000    0.000 mock.py:2118(MagicMock)
        1    0.000    0.000    0.000    0.000 polyoptions.py:701(Series)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1336(CosineAnnealingWarmRestarts)
        1    0.000    0.000    0.000    0.000 ticker.py:2964(OldAutoLocator)
        1    0.000    0.000    0.000    0.000 font_manager.py:939(_JSONEncoder)
        1    0.000    0.000    0.000    0.000 loss.py:850(SmoothL1Loss)
        1    0.000    0.000    0.000    0.000 __init__.py:10(NBitBase)
        1    0.000    0.000    0.000    0.000 parse.py:182(_NetlocResultMixinStr)
        1    0.000    0.000    0.000    0.000 blocking_input.py:330(BlockingKeyMouseInput)
        1    0.000    0.000    0.000    0.000 ticker.py:2041(_Edge_integer)
        1    0.000    0.000    0.000    0.000 __init__.py:234(silent_list)
        1    0.000    0.000    0.000    0.000 facts.py:286(__init__)
        1    0.000    0.000    0.000    0.000 context.py:233(__init__)
        1    0.000    0.000    0.000    0.000 Image.py:3727(register_save)
        1    0.000    0.000    0.000    0.000 main.py:1477(YAMLObjectMetaclass)
        1    0.000    0.000    0.000    0.000 mixins.py:9(_LoopBoundMixin)
        1    0.000    0.000    0.000    0.000 single.py:2842(LieGroup)
        1    0.000    0.000    0.000    0.000 _bvp.py:515(BVPResult)
        1    0.000    0.000    0.000    0.000 loss.py:931(HuberLoss)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:721(MimeParameters)
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:26(HessianLinearOperator)
        1    0.000    0.000    0.000    0.000 _ltisys.py:814(TransferFunctionDiscrete)
        1    0.000    0.000    0.000    0.000 _typing.py:63(NestedSequence)
        1    0.000    0.000    0.000    0.000 geo.py:419(LambertTransform)
        1    0.000    0.000    0.000    0.000 patches.py:2025(Circle)
        1    0.000    0.000    0.000    0.000 pyplot.py:121(_NotIPython)
        1    0.000    0.000    0.000    0.000 extrapolation.py:728(cohen_alt_class)
        1    0.000    0.000    0.000    0.000 collections.py:1301(AsteriskPolygonCollection)
        1    0.000    0.000    0.000    0.000 _animation_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 report.py:44(IPReport)
        1    0.000    0.000    0.000    0.000 _ltisys.py:737(TransferFunctionContinuous)
        1    0.000    0.000    0.000    0.000 dotproduct.py:6(DotProduct)
        1    0.000    0.000    0.000    0.000 grad_mode.py:226(set_multithreading_enabled)
        1    0.000    0.000    0.000    0.000 context.py:295(ForkServerProcess)
        1    0.000    0.000    0.000    0.000 serialization.py:239(_opener)
        1    0.000    0.000    0.000    0.000 mathtext.py:1944(Filll)
        1    0.000    0.000    0.000    0.000 _morestats.py:4287(DirectionalStats)
        1    0.000    0.000    0.000    0.000 request.py:1226(HTTPDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 dropout.py:25(Dropout)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_512}
        1    0.000    0.000    0.000    0.000 core.py:2654(CaselessKeyword)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:57(DoubleInfiniteFunc)
        2    0.000    0.000    0.000    0.000 calendar.py:57(__init__)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:809(FormulaCollection)
        1    0.000    0.000    0.000    0.000 logic.py:399(Not)
        1    0.000    0.000    0.000    0.000 exceptions.py:19(DuplicateConstraint)
        1    0.000    0.000    0.000    0.000 expr.py:4076(UnevaluatedExpr)
        1    0.000    0.000    0.000    0.000 stubs.py:21(DeQuantStub)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:376(_RewindState)
        1    0.000    0.000    0.000    0.000 _testutils.py:56(PytestTester)
        1    0.000    0.000    0.000    0.000 argparse.py:1680(_MutuallyExclusiveGroup)
        2    0.000    0.000    0.000    0.000 gzip.py:323(closed)
        1    0.000    0.000    0.000    0.000 multidimensional.py:56(vectorize)
        1    0.000    0.000    0.000    0.000 Image.py:3228(SupportsArrayInterface)
        1    0.000    0.000    0.000    0.000 zipfile.py:742(_SharedFile)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:482(InvalidMailbox)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:234(MatlabObject)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:251(BareQuotedString)
        1    0.000    0.000    0.000    0.000 tokens.py:200(DirectiveToken)
        1    0.000    0.000    0.000    0.000 mutable_ndim_array.py:4(MutableNDimArray)
        1    0.000    0.000    0.000    0.000 graph.py:203(save_on_cpu)
        1    0.000    0.000    0.000    0.000 backend_agg.py:612(_BackendAgg)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:450(OptionDummy)
        1    0.000    0.000    0.000    0.000 argparse.py:917(_StoreAction)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2831(_min_dispatcher)
        1    0.000    0.000    0.000    0.000 art3d.py:441(Path3DCollection)
        1    0.000    0.000    0.000    0.000 Image.py:3712(register_mime)
        1    0.000    0.000    0.000    0.000 legend_handler.py:433(HandlerErrorbar)
        1    0.000    0.000    0.000    0.000 util.py:368(ForkAwareThreadLock)
        1    0.000    0.000    0.000    0.000 grad_mode.py:61(enable_grad)
        1    0.000    0.000    0.000    0.000 serialization.py:1096(StorageType)
        1    0.000    0.000    0.000    0.000 scanner.py:2023(EOLComment)
        5    0.000    0.000    0.000    0.000 platform.py:775(_unknown_as_blank)
        1    0.000    0.000    0.000    0.000 transforms.py:1343(InverseCosineTransform)
        1    0.000    0.000    0.000    0.000 serialization.py:286(_open_zipfile_writer_file)
        1    0.000    0.000    0.000    0.000 _sources.py:86(SourceContext)
        1    0.000    0.000    0.000    0.000 _covariance.py:618(CovViaPSD)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1019(Anderson)
        1    0.000    0.000    0.000    0.000 dataframes.py:417(DataFrameTracer)
        1    0.000    0.000    0.000    0.000 jiterator.py:10(_CodeParser)
        1    0.000    0.000    0.000    0.000 deprecation.py:254(_deprecate_privatize_attribute)
        1    0.000    0.000    0.000    0.000 comments.py:692(CommentedMapValuesView)
        1    0.000    0.000    0.000    0.000 polyoptions.py:674(All)
        1    0.000    0.000    0.000    0.000 dates.py:1928(ConciseDateConverter)
        1    0.000    0.000    0.000    0.000 constraints.py:311(_GreaterThan)
        1    0.000    0.000    0.000    0.000 _hypotests.py:356(CramerVonMisesResult)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1374(MouseEvent)
        1    0.000    0.000    0.000    0.000 series.py:2122(GenericDataSeries)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:2011(nchypergeom_wallenius_gen)
        1    0.000    0.000    0.000    0.000 constraints.py:345(_LessThan)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:272(MultiplicativeLR)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4083(random_correlation_frozen)
        1    0.000    0.000    0.000    0.000 __init__.py:822(Lookup)
        1    0.000    0.000    0.000    0.000 modules.py:454(FreeModulePolyRing)
        1    0.000    0.000    0.000    0.000 __init__.py:235(Splitter)
        1    0.000    0.000    0.000    0.000 _odepack_py.py:16(ODEintWarning)
        1    0.000    0.000    0.000    0.000 conv_fused.py:627(ConvBn3d)
        1    0.000    0.000    0.000    0.000 calendar.py:26(IllegalMonthError)
        1    0.000    0.000    0.000    0.000 calendar.py:162(setfirstweekday)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:537(FreeModuleHomomorphism)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1798(_process_parameters)
        1    0.000    0.000    0.000    0.000 configparser.py:181(NoSectionError)
        1    0.000    0.000    0.000    0.000 core.py:1125(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 _basic.py:2819(_range_prod)
        4    0.000    0.000    0.000    0.000 _pep440.py:426(_parse_local_version)
        1    0.000    0.000    0.000    0.000 offsetbox.py:368(PackerBase)
        1    0.000    0.000    0.000    0.000 hb.py:376(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _typing.py:340(_IterDataPipeMeta)
        1    0.000    0.000    0.000    0.000 pooling.py:935(LPPool2d)
        2    0.000    0.000    0.000    0.000 index_tricks.py:761(__init__)
        1    0.000    0.000    0.000    0.000 _typing.py:145(DTypesComplex)
        1    0.000    0.000    0.000    0.000 core.py:241(_ParseActionIndexError)
        1    0.000    0.000    0.000    0.000 _typing.py:113(DTypesBool)
        1    0.000    0.000    0.000    0.000 util.py:185(_GroupConsecutive)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:384(LocalSearchWrapper)
        1    0.000    0.000    0.000    0.000 radau.py:549(RadauDenseOutput)
        1    0.000    0.000    0.000    0.000 _polyint.py:145(_Interpolator1DWithDerivatives)
        1    0.000    0.000    0.000    0.000 protocols.py:109(BufferedProtocol)
        1    0.000    0.000    0.000    0.000 function.py:281(FunctionMeta)
        1    0.000    0.000    0.000    0.000 core.py:5880(Group)
        1    0.000    0.000    0.000    0.000 kind.py:106(_NumberKind)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        5    0.000    0.000    0.000    0.000 libmpf.py:49(<lambda>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1298(ComputerModernFontConstants)
        1    0.000    0.000    0.000    0.000 art3d.py:324(PathPatch3D)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1207(Event)
        1    0.000    0.000    0.000    0.000 dataframes.py:241(CaptureVariable)
        1    0.000    0.000    0.000    0.000 parse.py:127(_ResultMixinStr)
        1    0.000    0.000    0.000    0.000 fetch.py:18(_IterableDatasetFetcher)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._set_promotion_state}
        1    0.000    0.000    0.000    0.000 _new_distributions.py:336(_median_formula)
        1    0.000    0.000    0.000    0.000 memory.py:683(CUDAPluggableAllocator)
        3    0.000    0.000    0.000    0.000 _parser.py:99(checklookbehindgroup)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:191(PHBase)
        1    0.000    0.000    0.000    0.000 client.py:176(HTTPMessage)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:30(_get_logging_handler)
        1    0.000    0.000    0.000    0.000 numerictypes.py:425(_typedict)
        1    0.000    0.000    0.000    0.000 design_patterns.py:115(NullFile)
        1    0.000    0.000    0.000    0.000 _linalg.py:45(SVDResult)
        1    0.000    0.000    0.000    0.000 para4band.py:72(Eigen_Trans)
        1    0.000    0.000    0.000    0.000 Physics_System.py:5(Phy_Sys)
        1    0.000    0.000    0.000    0.000 report.py:36(SQPReport)
        1    0.000    0.000    0.000    0.000 entity.py:540(GeometrySet)
        1    0.000    0.000    0.000    0.000 facts.py:214(rules_2prereq)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:310(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:133(create_module)
        1    0.000    0.000    0.000    0.000 mock.py:2388(_ANY)
        1    0.000    0.000    0.000    0.000 protocols.py:162(DatagramProtocol)
        2    0.000    0.000    0.000    0.000 repmatrix.py:186(<genexpr>)
        1    0.000    0.000    0.000    0.000 calendar.py:594(LocaleHTMLCalendar)
        2    0.000    0.000    0.000    0.000 torch_version.py:19(__init__)
        1    0.000    0.000    0.000    0.000 _spdx.py:10(SPDXException)
        1    0.000    0.000    0.000    0.000 __init__.py:160(_special_method_cache)
        1    0.000    0.000    0.000    0.000 _vertex.py:222(VertexCacheIndex)
        1    0.000    0.000    0.000    0.000 csv.py:54(excel)
        1    0.000    0.000    0.000    0.000 single.py:2787(SecondLinearAiry)
        1    0.000    0.000    0.000    0.000 quadrature.py:260(TanhSinh)
        3    0.000    0.000    0.000    0.000 {built-in method sys.audit}
        1    0.000    0.000    0.000    0.000 ImageFile.py:723(PyCodecState)
        1    0.000    0.000    0.000    0.000 mathtext.py:949(DejaVuSansFonts)
        1    0.000    0.000    0.000    0.000 _base.py:96(_FirstCompletedWaiter)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1278(LocationEvent)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:37(SmallSampleWarning)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:29(SemiInfiniteFunc)
        1    0.000    0.000    0.000    0.000 str.py:998(StrReprPrinter)
        1    0.000    0.000    0.000    0.000 fetch.py:7(_BaseDatasetFetcher)
        1    0.000    0.000    0.000    0.000 events.py:151(DocumentEndEvent)
        1    0.000    0.000    0.000    0.000 constraints.py:409(_Multinomial)
        1    0.000    0.000    0.000    0.000 scalarstring.py:84(DoubleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 single.py:1685(HomogeneousCoeffBest)
        1    0.000    0.000    0.000    0.000 std.py:214(EMA)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:42(CGSteihaugSubproblem)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:163(_Sentinel)
        1    0.000    0.000    0.000    0.000 arpack.py:908(SpLuInv)
        1    0.000    0.000    0.000    0.000 __init__.py:1786(RootLogger)
        1    0.000    0.000    0.000    0.000 parse.py:135(_ResultMixinBytes)
        1    0.000    0.000    0.000    0.000 argparse.py:1097(_HelpAction)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:574(SubModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 numbers.py:2315(_MultisetHistogram)
        1    0.000    0.000    0.000    0.000 case.py:201(_AssertRaisesBaseContext)
        1    0.000    0.000    0.000    0.000 tensor.py:816(<listcomp>)
        1    0.000    0.000    0.000    0.000 six.py:91(_LazyDescr)
        1    0.000    0.000    0.000    0.000 Image.py:3740(register_save_all)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:176(FunctionalizeInterpreter)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:182(Tokenizer)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:820(IdentityVectorFunction)
        1    0.000    0.000    0.000    0.000 loss.py:991(SoftMarginLoss)
        1    0.000    0.000    0.000    0.000 polyerrors.py:6(BasePolynomialError)
        1    0.000    0.000    0.000    0.000 _version.py:70(<listcomp>)
        1    0.000    0.000    0.000    0.000 source.py:1(<module>)
        1    0.000    0.000    0.000    0.000 errors.py:33(MessageDefect)
        1    0.000    0.000    0.000    0.000 legend_handler.py:260(HandlerPatch)
        1    0.000    0.000    0.000    0.000 _interface.py:816(MatrixLinearOperator)
        1    0.000    0.000    0.000    0.000 ElementPath.py:350(_SelectorContext)
        1    0.000    0.000    0.000    0.000 series.py:2104(ContourSeries)
        1    0.000    0.000    0.000    0.000 _typing.py:47(SupportsRead)
        1    0.000    0.000    0.000    0.000 domainelement.py:6(DomainElement)
        1    0.000    0.000    0.000    0.000 _array_like.py:44(_SupportsArrayFunc)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3675(special_ortho_group_frozen)
        1    0.000    0.000    0.000    0.000 rk.py:552(RkDenseOutput)
        1    0.000    0.000    0.000    0.000 single.py:2572(NthLinearEulerEqNonhomogeneousUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 threading.py:1001(_set_ident)
        1    0.000    0.000    0.000    0.000 ase.py:31(Atoms)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:980(NoExtraItemsType)
        1    0.000    0.000    0.000    0.000 traceback.py:613(_ExceptionPrintContext)
        3    0.000    0.000    0.000    0.000 numeric.py:63(_zeros_like_dispatcher)
        1    0.000    0.000    0.000    0.000 scalarstring.py:54(LiteralScalarString)
        1    0.000    0.000    0.000    0.000 index_methods.py:22(IndexConformanceException)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:64(DynamicOutputShapeException)
        1    0.000    0.000    0.000    0.000 _interface.py:747(_ScaledLinearOperator)
        1    0.000    0.000    0.000    0.000 argparse.py:1116(_VersionAction)
        1    0.000    0.000    0.000    0.000 _exceptions.py:56(_UFuncBinaryResolutionError)
        1    0.000    0.000    0.000    0.000 backend_managers.py:11(ToolEvent)
        1    0.000    0.000    0.000    0.000 unicode.py:8(_lazyclassproperty)
        1    0.000    0.000    0.000    0.000 protocols.py:66(Protocol)
        4    0.000    0.000    0.000    0.000 core.py:6052(postParse)
        1    0.000    0.000    0.000    0.000 streamreader.py:8(StreamReaderIterDataPipe)
        1    0.000    0.000    0.000    0.000 constraints.py:284(_IntegerGreaterThan)
        2    0.000    0.000    0.000    0.000 _compression.py:160(tell)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:268(_reduce_op)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1670(SphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 transports.py:172(DatagramTransport)
        1    0.000    0.000    0.000    0.000 numpy.py:346(<dictcomp>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:577(ExponentialLR)
        1    0.000    0.000    0.000    0.000 backend_tools.py:487(AxisScaleBase)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:9(MathieuBase)
        1    0.000    0.000    0.000    0.000 parser.py:79(BytesParser)
        1    0.000    0.000    0.000    0.000 scale.py:404(InvertedSymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 trifinder.py:7(TriFinder)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:69(DataDependentOutputException)
        1    0.000    0.000    0.000    0.000 mock.py:2933(_AsyncIterator)
        1    0.000    0.000    0.000    0.000 optimization.py:7(OptimizationMethods)
        1    0.000    0.000    0.000    0.000 utils.py:117(_lazy_property_and_property)
        1    0.000    0.000    0.000    0.000 std.py:40(TqdmWarning)
        1    0.000    0.000    0.000    0.000 utils.py:226(CallbackIOWrapper)
        1    0.000    0.000    0.000    0.000 _endian.py:23(_swapped_meta)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:211(GaussianRational)
        1    0.000    0.000    0.000    0.000 threading.py:1370(Timer)
        1    0.000    0.000    0.000    0.000 unicode.py:135(BasicMultilingualPlane)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5899(uniform_direction_frozen)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1554(RectBivariateSpline)
        1    0.000    0.000    0.000    0.000 _optimize.py:544(_MaxFuncCallError)
        1    0.000    0.000    0.000    0.000 error.py:120(MarkedYAMLError)
        1    0.000    0.000    0.000    0.000 optimizer.py:20(_RequiredParameter)
        1    0.000    0.000    0.000    0.000 pickletools.py:948(StackObject)
        1    0.000    0.000    0.000    0.000 overrides.py:1865(BaseTorchFunctionMode)
        1    0.000    0.000    0.000    0.000 orderings.py:45(GradedLexOrder)
        1    0.000    0.000    0.000    0.000 _utils.py:769(_ClassPropertyDescriptor)
        1    0.000    0.000    0.000    0.000 usertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:840(ChainedScheduler)
        1    0.000    0.000    0.000    0.000 spawn.py:79(ProcessContext)
        1    0.000    0.000    0.000    0.000 core.py:861(_DomainGreater)
        1    0.000    0.000    0.000    0.000 units.py:74(AxisInfo)
        3    0.000    0.000    0.000    0.000 core.py:867(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1309(STIXFontConstants)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1355(SmoothBivariateSpline)
        1    0.000    0.000    0.000    0.000 single.py:2294(NthLinearConstantCoeffUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 worker.py:119(_IterableDatasetStopIteration)
        1    0.000    0.000    0.000    0.000 constraints.py:265(_IntegerLessThan)
        1    0.000    0.000    0.000    0.000 ticker.py:367(FuncFormatter)
        1    0.000    0.000    0.000    0.000 animation.py:99(__init__)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1090(BroadcastingListCls)
        1    0.000    0.000    0.000    0.000 spglib.py:75(SpglibError)
        1    0.000    0.000    0.000    0.000 pickletools.py:174(ArgumentDescriptor)
        1    0.000    0.000    0.000    0.000 {built-in method _functools.cmp_to_key}
        1    0.000    0.000    0.000    0.000 _new_distributions.py:99(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 request.py:1531(FTPHandler)
        1    0.000    0.000    0.000    0.000 pooling.py:1006(AdaptiveMaxPool1d)
        1    0.000    0.000    0.000    0.000 geo.py:255(AitoffTransform)
        1    0.000    0.000    0.000    0.000 tz.py:373(_tzfile)
        1    0.000    0.000    0.000    0.000 patches.py:3165(_Bracket)
        1    0.000    0.000    0.000    0.000 queues.py:234(LifoQueue)
        1    0.000    0.000    0.000    0.000 simpledomain.py:7(SimpleDomain)
        1    0.000    0.000    0.000    0.000 bezier.py:25(NonIntersectingPathException)
        1    0.000    0.000    0.000    0.000 _nonlin.py:589(GenericBroyden)
        1    0.000    0.000    0.000    0.000 request.py:1383(HTTPSHandler)
        1    0.000    0.000    0.000    0.000 annotations.py:29(Module)
        1    0.000    0.000    0.000    0.000 more.py:3250(time_limited)
        1    0.000    0.000    0.000    0.000 band_data_in.py:25(check)
        2    0.000    0.000    0.000    0.000 core.py:47(condition)
        1    0.000    0.000    0.000    0.000 patches.py:2570(Angle)
        1    0.000    0.000    0.000    0.000 queue.py:242(LifoQueue)
        1    0.000    0.000    0.000    0.000 streams.py:117(ExternalStream)
        1    0.000    0.000    0.000    0.000 unicode.py:160(Greek)
        1    0.000    0.000    0.000    0.000 <decorator-gen-2>:1(<module>)
        1    0.000    0.000    0.000    0.000 mock.py:1053(_AnyComparer)
        1    0.000    0.000    0.000    0.000 protocols.py:177(SubprocessProtocol)
        1    0.000    0.000    0.000    0.000 splitter_base.py:37(_SplitterSettingBase)
        1    0.000    0.000    0.000    0.000 modules.py:1328(QuotientModuleElement)
        1    0.000    0.000    0.000    0.000 hyper.py:71(TupleParametersBase)
        1    0.000    0.000    0.000    0.000 utils.py:34(MatchAllNode)
        1    0.000    0.000    0.000    0.000 sharding.py:21(_ShardingIterDataPipe)
        1    0.000    0.000    0.000    0.000 feedparser.py:532(BytesFeedParser)
        1    0.000    0.000    0.000    0.000 _morestats.py:1203(_BigFloat)
        1    0.000    0.000    0.000    0.000 package_importer.py:668(_ModuleNode)
        1    0.000    0.000    0.000    0.000 transforms.py:2199(BlendedAffine2D)
        1    0.000    0.000    0.000    0.000 argparse.py:1144(_ChoicesPseudoAction)
        1    0.000    0.000    0.000    0.000 axis.py:596(_LazyTickList)
        1    0.000    0.000    0.000    0.000 _typing.py:139(DTypesReal)
        1    0.000    0.000    0.000    0.000 decorators.py:207(_SympifyWrapper)
        1    0.000    0.000    0.000    0.000 optimization.py:159(Halley)
        1    0.000    0.000    0.000    0.000 lambdify.py:1336(_TensorflowEvaluatorPrinter)
        1    0.000    0.000    0.000    0.000 mathtext.py:321(MathtextBackendPath)
        1    0.000    0.000    0.000    0.000 patches.py:1945(_Base)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:366(ObjectiveFunWrapper)
        1    0.000    0.000    0.000    0.000 parse.py:212(_NetlocResultMixinBytes)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:418(_VectorJacWrapper)
        1    0.000    0.000    0.000    0.000 _adapters.py:20(TraversableResourcesLoader)
        1    0.000    0.000    0.000    0.000 python.py:67(Lit)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:353(StepLR)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:169(Token)
        1    0.000    0.000    0.000    0.000 _base.py:141(_AcquireFutures)
        1    0.000    0.000    0.000    0.000 patches.py:2200(Round4)
        1    0.000    0.000    0.000    0.000 mock.py:394(Base)
        1    0.000    0.000    0.000    0.000 calendar.py:548(different_locale)
        1    0.000    0.000    0.000    0.000 _idl.py:145(Pointer)
        1    0.000    0.000    0.000    0.000 linsolve.py:28(MatrixRankWarning)
        1    0.000    0.000    0.000    0.000 numbers.py:2751(RationalConstant)
        1    0.000    0.000    0.000    0.000 index_tricks.py:211(MGridClass)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1129(_idat)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(LimitOverrunError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:926(MeijerFormulaCollection)
        1    0.000    0.000    0.000    0.000 constraints.py:362(_Interval)
        1    0.000    0.000    0.000    0.000 error.py:19(URLError)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:94(_Bunch)
        1    0.000    0.000    0.000    0.000 rszeta.py:53(RSCache)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:451(ConstantLR)
        1    0.000    0.000    0.000    0.000 activation.py:784(LogSigmoid)
        1    0.000    0.000    0.000    0.000 constraints.py:232(_OneHot)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:717(PolynomialLR)
        1    0.000    0.000    0.000    0.000 core.py:5240(DelimitedList)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1081(ZerosPolesGainContinuous)
        1    0.000    0.000    0.000    0.000 _docscrape.py:101(ParseError)
        1    0.000    0.000    0.000    0.000 threading.py:498(BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:7(CharacteristicZero)
        1    0.000    0.000    0.000    0.000 mathtext.py:1974(HCentered)
        2    0.000    0.000    0.000    0.000 results.py:460(<lambda>)
        1    0.000    0.000    0.000    0.000 request.py:791(ProxyHandler)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:159(SpectralNormLoadStateDictPreHook)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 backend_tools.py:429(_ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 colors.py:1525(NoNorm)
        1    0.000    0.000    0.000    0.000 datapipes.py:18(DataFramesAsTuplesPipe)
        1    0.000    0.000    0.000    0.000 reduction.py:211(_C)
        1    0.000    0.000    0.000    0.000 six.py:144(MovedAttribute)
        1    0.000    0.000    0.000    0.000 patches.py:2080(RArrow)
        1    0.000    0.000    0.000    0.000 activation.py:274(Sigmoid)
        1    0.000    0.000    0.000    0.000 mathtext.py:1932(Fil)
        1    0.000    0.000    0.000    0.000 rcsetup.py:442(_validate_mathtext_fallback_to_cm)
        2    0.000    0.000    0.000    0.000 core.py:883(__init__)
        1    0.000    0.000    0.000    0.000 parser.py:804(RoundTripParser)
        1    0.000    0.000    0.000    0.000 cm.py:78(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2442(_UnpackSpecialForm)
        1    0.000    0.000    0.000    0.000 datapipes.py:42(ConcatDataFramesPipe)
        1    0.000    0.000    0.000    0.000 pickletools.py:2550(_Example)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:404(GroupMember)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:913(WhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 _array_api.py:585(<setcomp>)
        1    0.000    0.000    0.000    0.000 _trace.py:290(TracingCheckError)
        1    0.000    0.000    0.000    0.000 core.py:797(_DomainCheckInterval)
        1    0.000    0.000    0.000    0.000 __init__.py:414(_make_alias)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1022(ShiftB)
        1    0.000    0.000    0.000    0.000 core.py:4895(FollowedBy)
        1    0.000    0.000    0.000    0.000 emitter.py:32(ScalarAnalysis)
        1    0.000    0.000    0.000    0.000 __init__.py:7(is_built)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:153(JitTypeTraceStoreLogger)
        1    0.000    0.000    0.000    0.000 pathlib.py:300(_Selector)
        1    0.000    0.000    0.000    0.000 cyaml.py:22(CBaseLoader)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:16(PlaceHolder)
        1    0.000    0.000    0.000    0.000 contextlib.py:340(__init__)
        1    0.000    0.000    0.000    0.000 dispatcher.py:33(RaiseNotImplementedError)
        1    0.000    0.000    0.000    0.000 profiler_util.py:373(Interval)
        1    0.000    0.000    0.000    0.000 _comparison.py:389(ObjectPair)
        1    0.000    0.000    0.000    0.000 unicode.py:141(Latin1)
        1    0.000    0.000    0.000    0.000 _filter_design.py:38(BadCoefficients)
        1    0.000    0.000    0.000    0.000 modules.py:1867(InnerEndomorphism)
        1    0.000    0.000    0.000    0.000 optimization.py:58(Secant)
        2    0.000    0.000    0.000    0.000 __init__.py:440(__init__)
        1    0.000    0.000    0.000    0.000 dir_util.py:23(__init__)
        1    0.000    0.000    0.000    0.000 single.py:2098(NthLinearConstantCoeffHomogeneous)
        1    0.000    0.000    0.000    0.000 graph.py:422(_swap_with_cloned)
        1    0.000    0.000    0.000    0.000 parser.py:71(HeaderParser)
        1    0.000    0.000    0.000    0.000 request.py:641(HTTPDefaultErrorHandler)
        1    0.000    0.000    0.000    0.000 __init__.py:399(PyDLL)
        1    0.000    0.000    0.000    0.000 Image.py:521(SupportsGetData)
        1    0.000    0.000    0.000    0.000 core.py:3673(LineStart)
        1    0.000    0.000    0.000    0.000 core.py:5813(TokenConverter)
        1    0.000    0.000    0.000    0.000 configparser.py:276(InterpolationSyntaxError)
        1    0.000    0.000    0.000    0.000 lsoda.py:211(LsodaDenseOutput)
        1    0.000    0.000    0.000    0.000 parser.py:818(RoundTripParserSC)
        1    0.000    0.000    0.000    0.000 inputs.py:1943(PmgVaspPspDirError)
        1    0.000    0.000    0.000    0.000 mock.py:2100(NonCallableMagicMock)
        1    0.000    0.000    0.000    0.000 configparser.py:1242(SafeConfigParser)
        1    0.000    0.000    0.000    0.000 traceback.py:90(_Sentinel)
        1    0.000    0.000    0.000    0.000 {built-in method _elementtree._set_factories}
        1    0.000    0.000    0.000    0.000 operator_schemas.py:44(_FakeGlobalNamespace)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:313(default_pg)
        1    0.000    0.000    0.000    0.000 function.py:263(BackwardCFunction)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1278(_TimelikeFormat)
        1    0.000    0.000    0.000    0.000 patches.py:3508(Wedge)
        1    0.000    0.000    0.000    0.000 polyoptions.py:366(Field)
        1    0.000    0.000    0.000    0.000 variable.py:8(VariableMeta)
        1    0.000    0.000    0.000    0.000 widgets.py:2647(Lasso)
        1    0.000    0.000    0.000    0.000 patches.py:3420(Fancy)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:408(_VectorFunWrapper)
        1    0.000    0.000    0.000    0.000 dataframes.py:360(CaptureInitial)
        1    0.000    0.000    0.000    0.000 instancenorm.py:385(LazyInstanceNorm3d)
        2    0.000    0.000    0.000    0.000 arrayprint.py:493(_recursive_guard)
        1    0.000    0.000    0.000    0.000 numbers.py:12(Number)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:225(mat_struct)
        1    0.000    0.000    0.000    0.000 diophantine.py:695(HomogeneousTernaryQuadraticNormal)
        1    0.000    0.000    0.000    0.000 kind.py:48(Kind)
        1    0.000    0.000    0.000    0.000 structure.py:5574(StructureError)
        1    0.000    0.000    0.000    0.000 argparse.py:204(_Section)
        1    0.000    0.000    0.000    0.000 constraints.py:438(_LowerCholesky)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1245(ComplexFloatingFormat)
        1    0.000    0.000    0.000    0.000 instancenorm.py:153(LazyInstanceNorm1d)
        1    0.000    0.000    0.000    0.000 ticker.py:2903(AutoMinorLocator)
        1    0.000    0.000    0.000    0.000 dataframes.py:43(DataFrameTracedOps)
        1    0.000    0.000    0.000    0.000 function.py:576(InplaceFunction)
        1    0.000    0.000    0.000    0.000 patches.py:2047(LArrow)
        1    0.000    0.000    0.000    0.000 _guards.py:74(GuardBuilderBase)
        1    0.000    0.000    0.000    0.000 queue.py:23(Full)
        1    0.000    0.000    0.000    0.000 patches.py:3053(Curve)
        1    0.000    0.000    0.000    0.000 ticker.py:296(IndexFormatter)
        1    0.000    0.000    0.000    0.000 __init__.py:413(SeparatedValues)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1928(nchypergeom_fisher_gen)
        1    0.000    0.000    0.000    0.000 _codata.py:2116(ConstantWarning)
        1    0.000    0.000    0.000    0.000 frontend.py:118(UnsupportedNodeError)
        1    0.000    0.000    0.000    0.000 {built-in method _imp.get_frozen_object}
        1    0.000    0.000    0.000    0.000 _exporter_states.py:18(SymbolicContext)
        1    0.000    0.000    0.000    0.000 Image.py:3238(SupportsArrowArrayInterface)
        1    0.000    0.000    0.000    0.000 scalarstring.py:66(FoldedScalarString)
        1    0.000    0.000    0.000    0.000 diophantine.py:256(Linear)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:767(CosineAnnealingLR)
        1    0.000    0.000    0.000    0.000 __init__.py:2349(__init__)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:620(<lambda>)
        1    0.000    0.000    0.000    0.000 pooling.py:1132(AdaptiveAvgPool1d)
        1    0.000    0.000    0.000    0.000 _exceptions.py:32(UFuncTypeError)
        1    0.000    0.000    0.000    0.000 core.py:4931(PrecededBy)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:107(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        2    0.000    0.000    0.000    0.000 {method '__exit__' of 'posix.ScandirIterator' objects}
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1078(_DOF_estimator_user)
        1    0.000    0.000    0.000    0.000 mathtext.py:1810(Rule)
        1    0.000    0.000    0.000    0.000 mathtext.py:1430(Vbox)
        1    0.000    0.000    0.000    0.000 core.py:184(_should_enable_warnings)
        1    0.000    0.000    0.000    0.000 computed_entries.py:155(ManualEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 mock.py:2778(_SpecState)
        1    0.000    0.000    0.000    0.000 patches.py:2496(Arc3)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:591(rv_discrete_frozen)
        1    0.000    0.000    0.000    0.000 numbers.py:3142(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1623(_TypeVarLikeMeta)
        1    0.000    0.000    0.000    0.000 exceptions.py:26(DuplicateEditVariable)
        1    0.000    0.000    0.000    0.000 _shgo.py:1529(LMap)
        2    0.000    0.000    0.000    0.000 __init__.py:983(setFormatter)
        1    0.000    0.000    0.000    0.000 core.py:4073(_ErrorStop)
        1    0.000    0.000    0.000    0.000 headerregistry.py:387(SingleAddressHeader)
        2    0.000    0.000    0.000    0.000 matexpr.py:486(get_postprocessor)
        2    0.000    0.000    0.000    0.000 repmatrix.py:201(<genexpr>)
        1    0.000    0.000    0.000    0.000 _subplots.py:218(<genexpr>)
        1    0.000    0.000    0.000    0.000 analyzer.py:66(SymmetryUndeterminedError)
        1    0.000    0.000    0.000    0.000 comments.py:643(CommentedMapView)
        1    0.000    0.000    0.000    0.000 csv.py:69(unix_dialect)
        1    0.000    0.000    0.000    0.000 events.py:108(StreamStartEvent)
        1    0.000    0.000    0.000    0.000 pooling.py:249(_MaxUnpoolNd)
        1    0.000    0.000    0.000    0.000 dataframes.py:187(CaptureLikeMock)
        1    0.000    0.000    0.000    0.000 index_tricks.py:262(OGridClass)
        1    0.000    0.000    0.000    0.000 core.py:3017(Char)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:780(LSQUnivariateSpline)
        1    0.000    0.000    0.000    0.000 suite.py:375(_DebugResult)
        1    0.000    0.000    0.000    0.000 graph.py:494(_AllowMutationOnSavedContext)
        1    0.000    0.000    0.000    0.000 _mio4.py:601(MatFile4Writer)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:104(ImmutableSparseNDimArray)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'generator' objects}
        1    0.000    0.000    0.000    0.000 connection.py:764(ConnectionWrapper)
        1    0.000    0.000    0.000    0.000 tz.py:1156(_tzicalvtzcomp)
        1    0.000    0.000    0.000    0.000 loader.py:23(BaseLoader)
        1    0.000    0.000    0.000    0.000 parameter.py:196(UninitializedBuffer)
        1    0.000    0.000    0.000    0.000 _exceptions.py:80(_UFuncInputCastingError)
        1    0.000    0.000    0.000    0.000 outputs.py:4533(VaspParseError)
        1    0.000    0.000    0.000    0.000 datapipe.py:207(DFIterDataPipe)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10816(FitUniformFixedScaleDataError)
        1    0.000    0.000    0.000    0.000 line.py:2362(Segment2D)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:158(__init__)
        1    0.000    0.000    0.000    0.000 dataframes.py:268(CaptureGetItem)
        1    0.000    0.000    0.000    0.000 _script.py:264(ScriptMeta)
        1    0.000    0.000    0.000    0.000 dumper.py:21(BaseDumper)
        1    0.000    0.000    0.000    0.000 argparse.py:1308(Namespace)
        1    0.000    0.000    0.000    0.000 __init__.py:730(AbsolutePathError)
        1    0.000    0.000    0.000    0.000 arpack.py:932(LuInv)
        1    0.000    0.000    0.000    0.000 parsing.py:52(NotParenUncert)
        1    0.000    0.000    0.000    0.000 uuid.py:78(SafeUUID)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1162(MeijerUnShiftA)
        1    0.000    0.000    0.000    0.000 streamplot.py:233(StreamplotSet)
        1    0.000    0.000    0.000    0.000 animation.py:637(FFMpegFileWriter)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:717(_RealParameter)
        1    0.000    0.000    0.000    0.000 mock.py:388(_MockIter)
        1    0.000    0.000    0.000    0.000 events.py:659(_Local)
        2    0.000    0.000    0.000    0.000 groundtypes.py:22(__init__)
        1    0.000    0.000    0.000    0.000 batchnorm.py:341(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1222(IntegerFormat)
        1    0.000    0.000    0.000    0.000 function.py:867(UndefSageHelper)
        1    0.000    0.000    0.000    0.000 constraints.py:481(_Symmetric)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:68(__init__)
        1    0.000    0.000    0.000    0.000 diophantine.py:1134(GeneralSumOfEvenPowers)
        1    0.000    0.000    0.000    0.000 core.py:3722(LineEnd)
        1    0.000    0.000    0.000    0.000 profiler.py:745(EnforceUnique)
        1    0.000    0.000    0.000    0.000 mathtext.py:2079(AutoWidthChar)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:12(ConstantInputWarning)
        1    0.000    0.000    0.000    0.000 magic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 container.py:46(BarContainer)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1837(SmoothSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 case.py:192(_BaseTestCaseContext)
        1    0.000    0.000    0.000    0.000 rootoftools.py:152(RootOf)
        1    0.000    0.000    0.000    0.000 __init__.py:10(__init__)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1454(LSQBivariateSpline)
        1    0.000    0.000    0.000    0.000 dataframes.py:311(CaptureMul)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:446(ObsRoute)
        1    0.000    0.000    0.000    0.000 comments.py:52(__init__)
        1    0.000    0.000    0.000    0.000 _typing.py:156(DTypesAll)
        1    0.000    0.000    0.000    0.000 exponential.py:212(ExpMeta)
        1    0.000    0.000    0.000    0.000 qs.py:36(FactorBaseElem)
        1    0.000    0.000    0.000    0.000 argparse.py:1009(_AppendAction)
        1    0.000    0.000    0.000    0.000 legend_handler.py:637(HandlerTuple)
        1    0.000    0.000    0.000    0.000 activation.py:1315(Softsign)
        1    0.000    0.000    0.000    0.000 __init__.py:753(Filter)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_iscased}
        1    0.000    0.000    0.000    0.000 single.py:2483(NthLinearEulerEqNonhomogeneousVariationOfParameters)
        1    0.000    0.000    0.000    0.000 diophantine.py:454(BinaryQuadratic)
        1    0.000    0.000    0.000    0.000 engine.py:379(__init__)
        1    0.000    0.000    0.000    0.000 cyaml.py:70(CBaseDumper)
        1    0.000    0.000    0.000    0.000 decorator.py:254(ContextManager)
        1    0.000    0.000    0.000    0.000 constraints.py:222(_Boolean)
        1    0.000    0.000    0.000    0.000 graph.py:458(_CloneArgBeforeMutateMode)
        1    0.000    0.000    0.000    0.000 core.py:840(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 __init__.py:67(_256Bit)
        1    0.000    0.000    0.000    0.000 mathtext.py:1984(VCentered)
        1    0.000    0.000    0.000    0.000 more.py:4171(countable)
        1    0.000    0.000    0.000    0.000 _helpers.py:685(_dask_device)
        1    0.000    0.000    0.000    0.000 orderings.py:242(_ItemGetter)
        1    0.000    0.000    0.000    0.000 instancenorm.py:269(LazyInstanceNorm2d)
        1    0.000    0.000    0.000    0.000 rk.py:577(Dop853DenseOutput)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1076(UnShiftB)
        1    0.000    0.000    0.000    0.000 fused.py:159(ConvAddReLU2d)
        1    0.000    0.000    0.000    0.000 dataframes.py:231(CaptureVariableAssign)
        1    0.000    0.000    0.000    0.000 single.py:2387(NthLinearEulerEqHomogeneous)
        1    0.000    0.000    0.000    0.000 constraints.py:398(_Simplex)
        1    0.000    0.000    0.000    0.000 __init__.py:10(warn_distutils_present)
        1    0.000    0.000    0.000    0.000 _linesearch.py:23(LineSearchWarning)
        1    0.000    0.000    0.000    0.000 datapipes.py:111(ExampleAggregateAsDataFrames)
        1    0.000    0.000    0.000    0.000 pooling.py:1036(AdaptiveMaxPool2d)
        1    0.000    0.000    0.000    0.000 _utils.py:610(ExceptionWrapper)
        1    0.000    0.000    0.000    0.000 animation.py:753(ImageMagickFileWriter)
        1    0.000    0.000    0.000    0.000 arpack.py:288(ArpackNoConvergence)
        1    0.000    0.000    0.000    0.000 error.py:176(MarkedYAMLWarning)
        1    0.000    0.000    0.000    0.000 error.py:278(MarkedYAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 _sf_error.py:5(SpecialFunctionWarning)
        1    0.000    0.000    0.000    0.000 request.py:1641(DataHandler)
        1    0.000    0.000    0.000    0.000 tokens.py:220(StreamStartToken)
        1    0.000    0.000    0.000    0.000 tarfile.py:704(ExFileObject)
        1    0.000    0.000    0.000    0.000 _factories.py:25(_TzOffsetFactory)
        2    0.000    0.000    0.000    0.000 rcsetup.py:400(validate_fontsize_None)
        1    0.000    0.000    0.000    0.000 results.py:103(List)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:690(Attribute)
        1    0.000    0.000    0.000    0.000 single.py:2667(SecondLinearBessel)
        1    0.000    0.000    0.000    0.000 patches.py:3340(Simple)
        1    0.000    0.000    0.000    0.000 legend_handler.py:689(HandlerPolyCollection)
        1    0.000    0.000    0.000    0.000 reader.py:35(ReaderError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:30(PolynomialDivisionFailed)
        1    0.000    0.000    0.000    0.000 pickletools.py:1093(OpcodeInfo)
        1    0.000    0.000    0.000    0.000 core.py:2378(__init__)
        1    0.000    0.000    0.000    0.000 std.py:62(TqdmMonitorWarning)
        2    0.000    0.000    0.000    0.000 _state.py:39(__bool__)
        1    0.000    0.000    0.000    0.000 io.py:25(EncodingWarning)
        1    0.000    0.000    0.000    0.000 pooling.py:1160(AdaptiveAvgPool2d)
        1    0.000    0.000    0.000    0.000 _typing.py:68(SupportsArrayNamespace)
        1    0.000    0.000    0.000    0.000 exceptions.py:38(DMNonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 factorials.py:17(CombinatorialFunction)
        1    0.000    0.000    0.000    0.000 pooling.py:1199(AdaptiveAvgPool3d)
        1    0.000    0.000    0.000    0.000 dtypes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:50(InvalidLicenseExpression)
        1    0.000    0.000    0.000    0.000 __init__.py:250(ExecutableNotFoundError)
        1    0.000    0.000    0.000    0.000 profiler.py:619(emit_nvtx)
        1    0.000    0.000    0.000    0.000 parse.py:315(DefragResult)
        1    0.000    0.000    0.000    0.000 meijerint.py:313(_CoeffExpValueError)
        1    0.000    0.000    0.000    0.000 extras.py:263(_fromnxfunction_single)
        1    0.000    0.000    0.000    0.000 ticker.py:1154(LogFormatterMathtext)
        1    0.000    0.000    0.000    0.000 unicode.py:322(Hebrew)
        1    0.000    0.000    0.000    0.000 copyreg.py:22(constructor)
        1    0.000    0.000    0.000    0.000 mathtext.py:1938(Fill)
        1    0.000    0.000    0.000    0.000 unicode.py:282(Hangul)
        2    0.000    0.000    0.000    0.000 ordinals.py:83(<listcomp>)
        1    0.000    0.000    0.000    0.000 geo.py:458(InvertedLambertTransform)
        1    0.000    0.000    0.000    0.000 _lil.py:505(lil_array)
        1    0.000    0.000    0.000    0.000 argparse.py:952(_StoreConstAction)
        1    0.000    0.000    0.000    0.000 boolalg.py:443(__hash__)
        1    0.000    0.000    0.000    0.000 patches.py:2139(Round)
        1    0.000    0.000    0.000    0.000 <decorator-gen-0>:1(<module>)
        1    0.000    0.000    0.000    0.000 mock.py:2112(AsyncMagicMixin)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:262(RandomDisplacement)
        1    0.000    0.000    0.000    0.000 polyerrors.py:57(OperationNotSupported)
        1    0.000    0.000    0.000    0.000 assumptions.py:680(ManagedProperties)
        1    0.000    0.000    0.000    0.000 geo.py:280(InvertedAitoffTransform)
        1    0.000    0.000    0.000    0.000 exceptions.py:265(ParseException)
        1    0.000    0.000    0.000    0.000 docinfo.py:112(DocInfo)
        1    0.000    0.000    0.000    0.000 optimization.py:458(Ridder)
        1    0.000    0.000    0.000    0.000 _parser.py:1378(_attr)
        2    0.000    0.000    0.000    0.000 ops.py:173(no_complex_result)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:39(FixedTalbot)
        1    0.000    0.000    0.000    0.000 pathlib.py:331(_PreciseSelector)
        1    0.000    0.000    0.000    0.000 legend_handler.py:412(HandlerPathCollection)
        1    0.000    0.000    0.000    0.000 legend_handler.py:176(HandlerNpointsYoffsets)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:86(ParenthesisGroup)
        1    0.000    0.000    0.000    0.000 diophantine.py:782(HomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 codeprinter.py:37(PrintMethodNotImplementedError)
        1    0.000    0.000    0.000    0.000 _ops.py:588(_PyOpNamespace)
        1    0.000    0.000    0.000    0.000 extras.py:1637(mr_class)
        1    0.000    0.000    0.000    0.000 unicode.py:307(Thai)
        1    0.000    0.000    0.000    0.000 __init__.py:714(ExFileObject)
        1    0.000    0.000    0.000    0.000 scalarstring.py:93(PlainScalarString)
        1    0.000    0.000    0.000    0.000 mock.py:295(__init__)
        1    0.000    0.000    0.000    0.000 dispatcher.py:10(MDNotImplementedError)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:885(_PatchedFnSetItem)
        1    0.000    0.000    0.000    0.000 _script.py:323(_CachedForward)
        1    0.000    0.000    0.000    0.000 backend_managers.py:20(ToolTriggerEvent)
        1    0.000    0.000    0.000    0.000 request.py:1061(ProxyBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 core.py:4783(_Indent)
        1    0.000    0.000    0.000    0.000 deprecation.py:7(MatplotlibDeprecationWarning)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:923(ValueTerminal)
        1    0.000    0.000    0.000    0.000 hb.py:377(<dictcomp>)
        1    0.000    0.000    0.000    0.000 composition.py:1396(CompositionError)
        1    0.000    0.000    0.000    0.000 queues.py:11(QueueEmpty)
        2    0.000    0.000    0.000    0.000 repmatrix.py:202(<genexpr>)
        1    0.000    0.000    0.000    0.000 optimization.py:290(Bisection)
        1    0.000    0.000    0.000    0.000 geo.py:304(HammerTransform)
        1    0.000    0.000    0.000    0.000 inputs.py:787(BadPoscarWarning)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1035(UnShiftA)
        1    0.000    0.000    0.000    0.000 pickle.py:73(PickleError)
        1    0.000    0.000    0.000    0.000 core.py:3762(StringEnd)
        1    0.000    0.000    0.000    0.000 serialization.py:52(SourceChangeWarning)
        1    0.000    0.000    0.000    0.000 typing.py:1543(__repr__)
        1    0.000    0.000    0.000    0.000 _ltisys.py:2295(Bunch)
        1    0.000    0.000    0.000    0.000 mock.py:40(InvalidSpecError)
        1    0.000    0.000    0.000    0.000 dataframes.py:298(CaptureAdd)
        1    0.000    0.000    0.000    0.000 argparse.py:1074(_CountAction)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:364(split_symbols_custom)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1009(ShiftA)
        1    0.000    0.000    0.000    0.000 profiler_util.py:622(MemRecordsAcc)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1341(SubArrayFormat)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1260(AnchoredText)
        1    0.000    0.000    0.000    0.000 _dia.py:528(dia_array)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 _parser.py:661(_result)
        1    0.000    0.000    0.000    0.000 datapipes.py:30(PerRowDataFramesPipe)
        1    0.000    0.000    0.000    0.000 __init__.py:94(cuBLASModule)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:807(ParameterizedHeaderValue)
        1    0.000    0.000    0.000    0.000 _ode.py:767(IntegratorConcurrencyError)
        1    0.000    0.000    0.000    0.000 pathlib.py:347(_WildcardSelector)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:217(EncodedWord)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1809(DraggableAnnotation)
        1    0.000    0.000    0.000    0.000 polynomial.py:29(RankWarning)
        1    0.000    0.000    0.000    0.000 nodes.py:130(MappingNode)
        1    0.000    0.000    0.000    0.000 decorator.py:46(get_init)
        1    0.000    0.000    0.000    0.000 registration.py:210(__init__)
        1    0.000    0.000    0.000    0.000 pooling.py:1078(AdaptiveMaxPool3d)
        1    0.000    0.000    0.000    0.000 tarfile.py:267(TarError)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1173(_DOF_estimator_min_E)
        1    0.000    0.000    0.000    0.000 patches.py:2349(Roundtooth)
        1    0.000    0.000    0.000    0.000 conflict.py:3(AmbiguityWarning)
        1    0.000    0.000    0.000    0.000 _guards.py:205(GuardEnvExpr)
        1    0.000    0.000    0.000    0.000 tensor.py:5253(get_postprocessor)
        1    0.000    0.000    0.000    0.000 mathtext.py:212(MathtextBackendBitmap)
        1    0.000    0.000    0.000    0.000 dropout.py:62(Dropout1d)
        1    0.000    0.000    0.000    0.000 pathlib.py:834(PurePosixPath)
        1    0.000    0.000    0.000    0.000 serialization.py:258(_open_buffer_reader)
        1    0.000    0.000    0.000    0.000 mathtext.py:1968(SsGlue)
        1    0.000    0.000    0.000    0.000 solveset.py:68(NonlinearError)
        1    0.000    0.000    0.000    0.000 groundtypes.py:25(_GMPYRational)
        1    0.000    0.000    0.000    0.000 libhyper.py:43(NoConvergence)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1235(_NQuad)
        1    0.000    0.000    0.000    0.000 cyaml.py:158(CDumper)
        1    0.000    0.000    0.000    0.000 activation.py:337(Tanh)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:933(EWWhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 events.py:66(NodeEvent)
        1    0.000    0.000    0.000    0.000 cyaml.py:115(CSafeDumper)
        1    0.000    0.000    0.000    0.000 unicode.py:213(Chinese)
        1    0.000    0.000    0.000    0.000 util.py:81(_UnboundedCache)
        1    0.000    0.000    0.000    0.000 _monitor.py:9(TqdmSynchronisationWarning)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:220(Stehfest)
        1    0.000    0.000    0.000    0.000 client.py:1470(UnknownProtocol)
        1    0.000    0.000    0.000    0.000 _utils.py:603(KeyErrorMessage)
        1    0.000    0.000    0.000    0.000 _miobase.py:20(MatReadError)
        1    0.000    0.000    0.000    0.000 scalarint.py:82(BinaryInt)
        1    0.000    0.000    0.000    0.000 _comparison.py:306(UnsupportedInputs)
        1    0.000    0.000    0.000    0.000 pydoc.py:2209(ModuleScanner)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:106(HyperbolicFunction)
        1    0.000    0.000    0.000    0.000 _exceptions.py:98(_UFuncOutputCastingError)
        1    0.000    0.000    0.000    0.000 container.py:103(StemContainer)
        1    0.000    0.000    0.000    0.000 Image.py:70(DecompressionBombWarning)
        1    0.000    0.000    0.000    0.000 unicode.py:246(Hiragana)
        1    0.000    0.000    0.000    0.000 __init__.py:270(TarError)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:2163(RectSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 errors.py:12(MessageParseError)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:41(pretty_use_unicode)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3256(_NamedTupleMeta)
        1    0.000    0.000    0.000    0.000 patches.py:2099(DArrow)
        1    0.000    0.000    0.000    0.000 argparse.py:975(_StoreTrueAction)
        1    0.000    0.000    0.000    0.000 optimization.py:213(Muller)
        1    0.000    0.000    0.000    0.000 instancenorm.py:77(InstanceNorm1d)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._reload_guard}
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1615(_DefaultMixin)
        1    0.000    0.000    0.000    0.000 patches.py:3147(CurveFilledAB)
        1    0.000    0.000    0.000    0.000 __init__.py:519(FileHash)
        1    0.000    0.000    0.000    0.000 _sparse.py:6(SparseABC)
        1    0.000    0.000    0.000    0.000 activation.py:1338(Tanhshrink)
        1    0.000    0.000    0.000    0.000 types.py:26(SymInt)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:115(GimpGradientFile)
        1    0.000    0.000    0.000    0.000 ticker.py:1889(NullLocator)
        1    0.000    0.000    0.000    0.000 core.py:3745(StringStart)
        1    0.000    0.000    0.000    0.000 _nonlin.py:32(NoConvergence)
        1    0.000    0.000    0.000    0.000 dumper.py:171(RoundTripDumper)
        1    0.000    0.000    0.000    0.000 dates.py:1611(DayLocator)
        1    0.000    0.000    0.000    0.000 _vertex.py:446(FieldWrapper)
        1    0.000    0.000    0.000    0.000 optimization.py:104(MNewton)
        1    0.000    0.000    0.000    0.000 errors.py:8(MessageError)
        1    0.000    0.000    0.000    0.000 _nonlin.py:955(BroydenSecond)
        1    0.000    0.000    0.000    0.000 errors.py:81(HeaderDefect)
        1    0.000    0.000    0.000    0.000 calendar.py:33(IllegalWeekdayError)
        1    0.000    0.000    0.000    0.000 socket.py:211(_GiveupOnSendfile)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:949(SingletonMeta)
        1    0.000    0.000    0.000    0.000 _factories.py:19(_TzFactory)
        1    0.000    0.000    0.000    0.000 ElementTree.py:106(ParseError)
        1    0.000    0.000    0.000    0.000 units.py:189(Registry)
        1    0.000    0.000    0.000    0.000 mathtext.py:1829(Hrule)
        1    0.000    0.000    0.000    0.000 _tzpath.py:170(InvalidTZPathWarning)
        1    0.000    0.000    0.000    0.000 optimization.py:517(ANewton)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:273(_ExtensionsSpecialForm)
        1    0.000    0.000    0.000    0.000 pathlib.py:378(_RecursiveWildcardSelector)
        1    0.000    0.000    0.000    0.000 client.py:1507(BadStatusLine)
        1    0.000    0.000    0.000    0.000 design_patterns.py:128(NullStream)
        1    0.000    0.000    0.000    0.000 mock.py:1188(Mock)
        1    0.000    0.000    0.000    0.000 __init__.py:1261(PlaceHolder)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:313(PlotWriter)
        1    0.000    0.000    0.000    0.000 polar.py:185(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 core.py:4789(_IndentGreater)
        1    0.000    0.000    0.000    0.000 _csr.py:314(csr_array)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:25(GuardOnDataDependentSymNode)
        1    0.000    0.000    0.000    0.000 importer.py:16(ObjNotFoundError)
        1    0.000    0.000    0.000    0.000 specifiers.py:32(InvalidSpecifier)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:13(IntegrationWarning)
        1    0.000    0.000    0.000    0.000 polyutils.py:47(RankWarning)
        1    0.000    0.000    0.000    0.000 _spectral.py:11(_NoConvergence)
        1    0.000    0.000    0.000    0.000 calculus.py:1(CalculusMethods)
        1    0.000    0.000    0.000    0.000 pathlib.py:844(PureWindowsPath)
        1    0.000    0.000    0.000    0.000 enum.py:769(__getitem__)
        1    0.000    0.000    0.000    0.000 transforms.py:2725(TransformedPatchPath)
        1    0.000    0.000    0.000    0.000 argparse.py:720(MetavarTypeHelpFormatter)
        1    0.000    0.000    0.000    0.000 singleton.py:158(Singleton)
        1    0.000    0.000    0.000    0.000 process.py:349(AuthenticationString)
        1    0.000    0.000    0.000    0.000 offsetbox.py:495(HPacker)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1625(StateSpaceContinuous)
        1    0.000    0.000    0.000    0.000 emitter.py:1777(RoundTripEmitter)
        1    0.000    0.000    0.000    0.000 tokens.py:303(AnchorToken)
        2    0.000    0.000    0.000    0.000 _multiufuncs.py:66(_override_ufunc_default_args)
        1    0.000    0.000    0.000    0.000 dviread.py:734(Tfm)
        1    0.000    0.000    0.000    0.000 mathtext.py:1318(STIXSansFontConstants)
        1    0.000    0.000    0.000    0.000 mathtext.py:2040(AutoHeightChar)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:821(ContentType)
        1    0.000    0.000    0.000    0.000 _elffile.py:19(ELFInvalid)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:672(FitSolverError)
        1    0.000    0.000    0.000    0.000 pathlib.py:1398(WindowsPath)
        1    0.000    0.000    0.000    0.000 six.py:245(_MovedItems)
        1    0.000    0.000    0.000    0.000 _misc.py:9(LinAlgWarning)
        1    0.000    0.000    0.000    0.000 unicode.py:200(Cyrillic)
        1    0.000    0.000    0.000    0.000 wavfile.py:27(WavFileWarning)
        1    0.000    0.000    0.000    0.000 fused.py:94(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 batchnorm.py:306(LazyBatchNorm1d)
        1    0.000    0.000    0.000    0.000 utils.py:18(InvalidName)
        1    0.000    0.000    0.000    0.000 errors.py:64(InvalidMultipartContentTransferEncodingDefect)
        1    0.000    0.000    0.000    0.000 configparser.py:284(InterpolationDepthError)
        1    0.000    0.000    0.000    0.000 simplex.py:77(UnboundedLPError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1129(MeijerShiftB)
        1    0.000    0.000    0.000    0.000 ordinals.py:253(OrdinalZero)
        1    0.000    0.000    0.000    0.000 error.py:73(ContentTooShortError)
        1    0.000    0.000    0.000    0.000 legend_handler.py:208(HandlerLine2D)
        1    0.000    0.000    0.000    0.000 nodes.py:107(CollectionNode)
        1    0.000    0.000    0.000    0.000 io.py:340(FileLockException)
        1    0.000    0.000    0.000    0.000 optimization.py:357(Illinois)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1336(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:240(c_char_p)
        1    0.000    0.000    0.000    0.000 animation.py:735(ImageMagickWriter)
        1    0.000    0.000    0.000    0.000 _array_api.py:582(<listcomp>)
        1    0.000    0.000    0.000    0.000 libmpf.py:132(h_mask_big)
        1    0.000    0.000    0.000    0.000 orderings.py:54(ReversedGradedLexOrder)
        1    0.000    0.000    0.000    0.000 request.py:898(HTTPPasswordMgrWithDefaultRealm)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3828(ortho_group_frozen)
        1    0.000    0.000    0.000    0.000 dataframes.py:324(CaptureSub)
        1    0.000    0.000    0.000    0.000 tarfile.py:279(StreamError)
        1    0.000    0.000    0.000    0.000 error.py:48(FileMark)
        1    0.000    0.000    0.000    0.000 polysys.py:35(SolveFailed)
        1    0.000    0.000    0.000    0.000 process.py:397(_MainProcess)
        1    0.000    0.000    0.000    0.000 ticker.py:395(FormatStrFormatter)
        1    0.000    0.000    0.000    0.000 unicode.py:148(LatinA)
        1    0.000    0.000    0.000    0.000 configparser.py:190(DuplicateSectionError)
        1    0.000    0.000    0.000    0.000 _vertex.py:430(ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 _pep440.py:129(InvalidVersion)
        1    0.000    0.000    0.000    0.000 systems.py:32(ODEOrderError)
        1    0.000    0.000    0.000    0.000 codeprinter.py:31(AssignmentError)
        1    0.000    0.000    0.000    0.000 core.py:893(_MaskedUFunc)
        1    0.000    0.000    0.000    0.000 dumper.py:71(SafeDumper)
        1    0.000    0.000    0.000    0.000 dataframes.py:39(CaptureControl)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1490(KeyEvent)
        1    0.000    0.000    0.000    0.000 batchnorm.py:233(BatchNorm1d)
        1    0.000    0.000    0.000    0.000 exceptions.py:3(GeometryError)
        1    0.000    0.000    0.000    0.000 linalg.py:67(LinAlgError)
        1    0.000    0.000    0.000    0.000 __init__.py:281(sic)
        1    0.000    0.000    0.000    0.000 scalarstring.py:75(SingleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 batchnorm.py:413(LazyBatchNorm2d)
        1    0.000    0.000    0.000    0.000 patches.py:3314(BarAB)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1979(LSQSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 parser.py:98(ParserError)
        1    0.000    0.000    0.000    0.000 unix_events.py:798(_UnixSubprocessTransport)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1140(MeijerShiftC)
        1    0.000    0.000    0.000    0.000 fused.py:67(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 dropout.py:153(Dropout3d)
        1    0.000    0.000    0.000    0.000 __init__.py:201(DeferredCudaCallError)
        1    0.000    0.000    0.000    0.000 dates.py:1558(MonthLocator)
        1    0.000    0.000    0.000    0.000 unicode.py:336(Devanagari)
        1    0.000    0.000    0.000    0.000 context.py:242(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:310(first_invoke)
        1    0.000    0.000    0.000    0.000 _coo.py:1463(coo_matrix)
        1    0.000    0.000    0.000    0.000 constraints.py:303(_Real)
        1    0.000    0.000    0.000    0.000 engine.py:20(DiagnosticError)
        1    0.000    0.000    0.000    0.000 transforms.py:2542(BboxTransformToMaxOnly)
        1    0.000    0.000    0.000    0.000 core.py:2500(_SingleCharLiteral)
        1    0.000    0.000    0.000    0.000 argparse.py:669(RawDescriptionHelpFormatter)
        1    0.000    0.000    0.000    0.000 libmpf.py:43(ComplexResult)
        1    0.000    0.000    0.000    0.000 _typing.py:22(GenericMeta)
        1    0.000    0.000    0.000    0.000 constraints.py:427(_LowerTriangular)
        1    0.000    0.000    0.000    0.000 parser.py:126(BytesHeaderParser)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:537(Bunch)
        1    0.000    0.000    0.000    0.000 indexed.py:120(IndexException)
        1    0.000    0.000    0.000    0.000 polyoptions.py:61(OptionType)
        1    0.000    0.000    0.000    0.000 _arffread.py:54(ArffError)
        1    0.000    0.000    0.000    0.000 datapipes.py:59(ShuffleDataFramesPipe)
        1    0.000    0.000    0.000    0.000 geo.py:390(InvertedMollweideTransform)
        1    0.000    0.000    0.000    0.000 core.py:5012(Located)
        1    0.000    0.000    0.000    0.000 unicode.py:239(Kanji)
        1    0.000    0.000    0.000    0.000 constraints.py:504(_PositiveDefinite)
        1    0.000    0.000    0.000    0.000 package_exporter.py:120(EmptyMatchError)
        1    0.000    0.000    0.000    0.000 _exceptions.py:71(_UFuncCastingError)
        1    0.000    0.000    0.000    0.000 patches.py:3060(CurveA)
        1    0.000    0.000    0.000    0.000 mathtext.py:2025(SubSuperCluster)
        1    0.000    0.000    0.000    0.000 unicode.py:314(Arabic)
        1    0.000    0.000    0.000    0.000 _testutils.py:51(FPUModeChangeWarning)
        1    0.000    0.000    0.000    0.000 dataframes.py:178(CaptureA)
        1    0.000    0.000    0.000    0.000 dates.py:1583(WeekdayLocator)
        1    0.000    0.000    0.000    0.000 exceptions.py:10(CancelledError)
        1    0.000    0.000    0.000    0.000 diophantine.py:676(InhomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 transforms.py:453(MellinTransformStripError)
        1    0.000    0.000    0.000    0.000 util.py:108(_platform_supports_abstract_sockets)
        1    0.000    0.000    0.000    0.000 cache.py:45(__cacheit)
        1    0.000    0.000    0.000    0.000 patches.py:2632(Arc)
        1    0.000    0.000    0.000    0.000 pydoc.py:1545(_PlainTextDoc)
        1    0.000    0.000    0.000    0.000 _base.py:19(SparseWarning)
        1    0.000    0.000    0.000    0.000 _array_like.py:160(_UnknownType)
        1    0.000    0.000    0.000    0.000 error.py:248(MantissaNoDotYAML1_1Warning)
        1    0.000    0.000    0.000    0.000 core.py:822(_DomainTan)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(BadRequiredStrength)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:205(SpectralNormStateDictHook)
        1    0.000    0.000    0.000    0.000 results.py:19(<genexpr>)
        1    0.000    0.000    0.000    0.000 outputs.py:5916(UnconvergedVASPWarning)
        1    0.000    0.000    0.000    0.000 mathtext.py:1956(NegFill)
        1    0.000    0.000    0.000    0.000 errors.py:73(SymbolicValueError)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:97(BaseTorchDispatchMode)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:285(MinimizerWrapper)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1228(DrawEvent)
        1    0.000    0.000    0.000    0.000 core.py:5305(_NullToken)
        1    0.000    0.000    0.000    0.000 _parser.py:29(Variable)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4243(unitary_group_frozen)
        1    0.000    0.000    0.000    0.000 patches.py:3242(BracketAB)
        1    0.000    0.000    0.000    0.000 _base.py:45(Error)
        1    0.000    0.000    0.000    0.000 function.py:107(ArgumentIndexError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1437(Hbox)
        1    0.000    0.000    0.000    0.000 _optimize.py:1152(_LineSearchError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1200(MeijerUnShiftB)
        1    0.000    0.000    0.000    0.000 errors.py:24(MultipartConversionError)
        1    0.000    0.000    0.000    0.000 context.py:302(ForkContext)
        1    0.000    0.000    0.000    0.000 mathtext.py:1950(NegFil)
        2    0.000    0.000    0.000    0.000 ordinals.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 utils.py:77(_ntuple_from_first)
        1    0.000    0.000    0.000    0.000 _pep440.py:141(<lambda>)
        1    0.000    0.000    0.000    0.000 solvers.py:18(PolyNonlinearError)
        1    0.000    0.000    0.000    0.000 api.py:466(RRef)
        1    0.000    0.000    0.000    0.000 pathlib.py:325(_TerminatingSelector)
        1    0.000    0.000    0.000    0.000 ticker.py:2883(AutoLocator)
        1    0.000    0.000    0.000    0.000 fused.py:10(_FusedModule)
        1    0.000    0.000    0.000    0.000 _fortran.py:13(FortranEOFError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1247(MeijerUnShiftC)
        1    0.000    0.000    0.000    0.000 exceptions.py:13(DMError)
        1    0.000    0.000    0.000    0.000 _script.py:352(ConstMap)
        1    0.000    0.000    0.000    0.000 context.py:310(ForkServerContext)
        1    0.000    0.000    0.000    0.000 __init__.py:735(OutsideDestinationError)
        1    0.000    0.000    0.000    0.000 zipfile.py:43(BadZipFile)
        1    0.000    0.000    0.000    0.000 zipfile.py:641(LZMADecompressor)
        1    0.000    0.000    0.000    0.000 pickle.py:97(_Stop)
        1    0.000    0.000    0.000    0.000 exceptions.py:40(UnknownEditVariable)
        1    0.000    0.000    0.000    0.000 core.py:3632(PositionToken)
        1    0.000    0.000    0.000    0.000 vq.py:84(ClusterError)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:354(deHoog)
        1    0.000    0.000    0.000    0.000 core.py:84(MaskedArrayFutureWarning)
        1    0.000    0.000    0.000    0.000 _endian.py:48(BigEndianStructure)
        1    0.000    0.000    0.000    0.000 line.py:2834(Segment3D)
        1    0.000    0.000    0.000    0.000 errors.py:21(OnnxExporterWarning)
        1    0.000    0.000    0.000    0.000 deprecation.py:325(_deprecated_parameter_class)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:650(MIMEVersion)
        1    0.000    0.000    0.000    0.000 __init__.py:297(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:28(BadFortranFormat)
        1    0.000    0.000    0.000    0.000 single.py:37(ODEMatchError)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:542(Cohen)
        1    0.000    0.000    0.000    0.000 <decorator-gen-3>:1(<module>)
        1    0.000    0.000    0.000    0.000 functions.py:138(NoShapeError)
        1    0.000    0.000    0.000    0.000 net_min_base.py:31(FxNetMinimizerBadModuleError)
        1    0.000    0.000    0.000    0.000 __init__.py:14(_Await)
        1    0.000    0.000    0.000    0.000 index_tricks.py:537(CClass)
        1    0.000    0.000    0.000    0.000 configparser.py:340(MissingSectionHeaderError)
        1    0.000    0.000    0.000    0.000 core.py:720(NegativeStdDev)
        1    0.000    0.000    0.000    0.000 __init__.py:78(UnidentifiedImageError)
        1    0.000    0.000    0.000    0.000 dataframes.py:337(CaptureGetAttr)
        1    0.000    0.000    0.000    0.000 dist.py:1119(DistDeprecationWarning)
        1    0.000    0.000    0.000    0.000 tokens.py:312(TagToken)
        1    0.000    0.000    0.000    0.000 exceptions.py:6(MatrixError)
        1    0.000    0.000    0.000    0.000 constraints.py:493(_PositiveSemidefinite)
        3    0.000    0.000    0.000    0.000 core.py:2493(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1039(_ignorecase)
        1    0.000    0.000    0.000    0.000 ticker.py:1138(LogFormatterExponent)
        1    0.000    0.000    0.000    0.000 _lil.py:570(lil_matrix)
        1    0.000    0.000    0.000    0.000 request.py:1416(UnknownHandler)
        1    0.000    0.000    0.000    0.000 spawn.py:163(SpawnContext)
        1    0.000    0.000    0.000    0.000 instancenorm.py:192(InstanceNorm2d)
        1    0.000    0.000    0.000    0.000 __init__.py:165(c_short)
        1    0.000    0.000    0.000    0.000 units.py:54(ConversionError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1840(Vrule)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(UnsatisfiableConstraint)
        1    0.000    0.000    0.000    0.000 version.py:59(InvalidVersion)
        1    0.000    0.000    0.000    0.000 main.py:773(<listcomp>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:110(DomainError)
        1    0.000    0.000    0.000    0.000 tarfile.py:270(ExtractError)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:98(ExponentialFloat)
        1    0.000    0.000    0.000    0.000 dumper.py:121(Dumper)
        1    0.000    0.000    0.000    0.000 mathtext.py:1070(StixSansFonts)
        1    0.000    0.000    0.000    0.000 argparse.py:680(RawTextHelpFormatter)
        1    0.000    0.000    0.000    0.000 argparse.py:1242(_ExtendAction)
        1    0.000    0.000    0.000    0.000 rl.py:43(glom)
        1    0.000    0.000    0.000    0.000 core.py:830(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:43(_is_wildcard_pattern)
        1    0.000    0.000    0.000    0.000 geo.py:322(InvertedHammerTransform)
        1    0.000    0.000    0.000    0.000 mathtext.py:1329(DejaVuSansFontConstants)
        1    0.000    0.000    0.000    0.000 warnings.py:89(InformationOnly)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:700(Section)
        1    0.000    0.000    0.000    0.000 errors.py:1(Error)
        1    0.000    0.000    0.000    0.000 _typing.py:134(DTypesIntegral)
        1    0.000    0.000    0.000    0.000 fused.py:49(ConvBn1d)
        1    0.000    0.000    0.000    0.000 context.py:306(SpawnContext)
        1    0.000    0.000    0.000    0.000 errors.py:39(CheckerError)
        1    0.000    0.000    0.000    0.000 shutil.py:64(SameFileError)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:9(ReentrancyError)
        1    0.000    0.000    0.000    0.000 coreerrors.py:6(BaseCoreError)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:360(_unspecified)
        1    0.000    0.000    0.000    0.000 requirements.py:15(InvalidRequirement)
        1    0.000    0.000    0.000    0.000 __init__.py:742(SpecialFileError)
        1    0.000    0.000    0.000    0.000 scanner.py:2037(BlankLineComment)
        1    0.000    0.000    0.000    0.000 iterables.py:3015(NotIterable)
        1    0.000    0.000    0.000    0.000 gradcheck.py:18(GradcheckError)
        1    0.000    0.000    0.000    0.000 __init__.py:235(c_char)
        1    0.000    0.000    0.000    0.000 util.py:167(UnboundedMemo)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:828(ContentDisposition)
        1    0.000    0.000    0.000    0.000 fetch.py:45(_MapDatasetFetcher)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(ComplexWarning)
        1    0.000    0.000    0.000    0.000 scanner.py:2030(FullLineComment)
        1    0.000    0.000    0.000    0.000 package_importer.py:658(_PathNode)
        1    0.000    0.000    0.000    0.000 ticker.py:1202(LogFormatterSciNotation)
        1    0.000    0.000    0.000    0.000 core.py:5174(OneOrMore)
        1    0.000    0.000    0.000    0.000 tokens.py:294(AliasToken)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:949(Operator)
        1    0.000    0.000    0.000    0.000 factorials.py:281(MultiFactorial)
        1    0.000    0.000    0.000    0.000 sympify.py:49(CantSympify)
        1    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(<module>)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:39(GaloisGroupException)
        1    0.000    0.000    0.000    0.000 operations.py:483(ShortCircuit)
        1    0.000    0.000    0.000    0.000 zipfile.py:47(LargeZipFile)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:845(MsgID)
        1    0.000    0.000    0.000    0.000 <decorator-gen-4>:1(<module>)
        1    0.000    0.000    0.000    0.000 fused.py:31(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 __init__.py:11(_PyAwaitMeta)
        2    0.000    0.000    0.000    0.000 _compression.py:36(readable)
        1    0.000    0.000    0.000    0.000 errors.py:89(DistutilsExecError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:136(ComputationFailed)
        1    0.000    0.000    0.000    0.000 isoparser.py:43(__init__)
        1    0.000    0.000    0.000    0.000 ticker.py:434(OldScalarFormatter)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:21(NearConstantInputWarning)
        1    0.000    0.000    0.000    0.000 diophantine.py:918(InhomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 errors.py:33(InvalidConfigError)
        1    0.000    0.000    0.000    0.000 error.py:228(ReusedAnchorWarning)
        1    0.000    0.000    0.000    0.000 fused.py:22(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 datapipe.py:372(_MapDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:2229(createLock)
        1    0.000    0.000    0.000    0.000 csv.py:64(excel_tab)
        1    0.000    0.000    0.000    0.000 _base.py:28(SparseEfficiencyWarning)
        1    0.000    0.000    0.000    0.000 serialization.py:264(_open_buffer_writer)
        1    0.000    0.000    0.000    0.000 legend_handler.py:423(HandlerCircleCollection)
        1    0.000    0.000    0.000    0.000 six.py:382(Module_six_moves_urllib_error)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1118(MeijerShiftA)
        1    0.000    0.000    0.000    0.000 util.py:385(ForkAwareLocal)
        1    0.000    0.000    0.000    0.000 unicode.py:154(LatinB)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:256(MatlabFunction)
        1    0.000    0.000    0.000    0.000 emitter.py:28(EmitterError)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1002(MultOperator)
        1    0.000    0.000    0.000    0.000 alphabets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:414(StrMethodFormatter)
        1    0.000    0.000    0.000    0.000 transforms.py:1454(HankelTransform)
        1    0.000    0.000    0.000    0.000 modules.py:1096(ModuleOrder)
        1    0.000    0.000    0.000    0.000 errors.py:27(CallHintViolationWarning)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1255(ResizeEvent)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1200(InverseHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 _ccallback.py:9(CData)
        1    0.000    0.000    0.000    0.000 _typing.py:215(__init__)
        1    0.000    0.000    0.000    0.000 activation.py:1465(Softmax2d)
        1    0.000    0.000    0.000    0.000 index_tricks.py:435(RClass)
        1    0.000    0.000    0.000    0.000 dates.py:1637(HourLocator)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:458(_ExperimentalConfiguration)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:333(_mode_formula)
        1    0.000    0.000    0.000    0.000 tokens.py:321(ScalarToken)
        1    0.000    0.000    0.000    0.000 argparse.py:691(ArgumentDefaultsHelpFormatter)
        1    0.000    0.000    0.000    0.000 contextlib.py:342(__enter__)
        1    0.000    0.000    0.000    0.000 misc.py:13(Undecidable)
        1    0.000    0.000    0.000    0.000 quadrature.py:389(GaussLegendre)
        1    0.000    0.000    0.000    0.000 __init__.py:11(DeprecatedTzFormatWarning)
        1    0.000    0.000    0.000    0.000 _base.py:55(InvalidStateError)
        1    0.000    0.000    0.000    0.000 datapipes.py:83(FilterDataFramesPipe)
        1    0.000    0.000    0.000    0.000 patches.py:2726(Bar)
        1    0.000    0.000    0.000    0.000 _typing.py:151(DTypesNumeric)
        1    0.000    0.000    0.000    0.000 forward_ad.py:108(UnpackedDualTensor)
        1    0.000    0.000    0.000    0.000 exceptions.py:33(UnknownConstraint)
        1    0.000    0.000    0.000    0.000 diophantine.py:938(HomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 constraints.py:466(_Square)
        1    0.000    0.000    0.000    0.000 dropout.py:237(FeatureAlphaDropout)
        1    0.000    0.000    0.000    0.000 six.py:340(Module_six_moves_urllib_parse)
        1    0.000    0.000    0.000    0.000 patches.py:3077(CurveB)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1586(Specie)
        1    0.000    0.000    0.000    0.000 dataframes.py:169(CaptureF)
        1    0.000    0.000    0.000    0.000 facts.py:252(TautologyDetected)
        1    0.000    0.000    0.000    0.000 batchnorm.py:519(LazyBatchNorm3d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2223(_TypeFormForm)
        1    0.000    0.000    0.000    0.000 shutil.py:61(Error)
        1    0.000    0.000    0.000    0.000 backend_tools.py:682(ViewsPositionsBase)
        1    0.000    0.000    0.000    0.000 error.py:109(CommentMark)
        1    0.000    0.000    0.000    0.000 request.py:1244(ProxyDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 argparse.py:754(ArgumentError)
        1    0.000    0.000    0.000    0.000 net_min_base.py:40(FxNetMinimizerRunFuncError)
        1    0.000    0.000    0.000    0.000 client.py:1514(LineTooLong)
        1    0.000    0.000    0.000    0.000 frontend.py:114(NotSupportedError)
        1    0.000    0.000    0.000    0.000 dropout.py:104(Dropout2d)
        1    0.000    0.000    0.000    0.000 threading.py:832(<listcomp>)
        1    0.000    0.000    0.000    0.000 events.py:237(SequenceStartEvent)
        1    0.000    0.000    0.000    0.000 tokens.py:266(FlowMappingEndToken)
        1    0.000    0.000    0.000    0.000 _dok.py:536(dok_array)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:193(UnstructuredTokenList)
        1    0.000    0.000    0.000    0.000 _parser.py:34(Value)
        1    0.000    0.000    0.000    0.000 animation.py:613(FFMpegWriter)
        1    0.000    0.000    0.000    0.000 serializer.py:29(SerializerError)
        1    0.000    0.000    0.000    0.000 exceptions.py:4(ClosureFailure)
        1    0.000    0.000    0.000    0.000 pickle.py:77(PicklingError)
        1    0.000    0.000    0.000    0.000 diophantine.py:1107(CubicThue)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:23(_apply_params)
        1    0.000    0.000    0.000    0.000 connection.py:786(XmlListener)
        1    0.000    0.000    0.000    0.000 markers.py:39(UndefinedComparison)
        1    0.000    0.000    0.000    0.000 scalarint.py:89(OctalInt)
        1    0.000    0.000    0.000    0.000 constraints.py:452(_CorrCholesky)
        1    0.000    0.000    0.000    0.000 scalarint.py:100(HexInt)
        1    0.000    0.000    0.000    0.000 resolver.py:102(ResolverError)
        1    0.000    0.000    0.000    0.000 boolalg.py:371(__eq__)
        1    0.000    0.000    0.000    0.000 dropout.py:195(AlphaDropout)
        1    0.000    0.000    0.000    0.000 _csr.py:437(csr_matrix)
        1    0.000    0.000    0.000    0.000 simplex.py:96(InfeasibleLPError)
        1    0.000    0.000    0.000    0.000 config.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:169(_LRScheduler)
        1    0.000    0.000    0.000    0.000 __init__.py:13(_PyFutureMeta)
        1    0.000    0.000    0.000    0.000 hierarchy.py:157(ClusterWarning)
        1    0.000    0.000    0.000    0.000 cyaml.py:54(CLoader)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2055(_EllipsisDummy)
        1    0.000    0.000    0.000    0.000 container.py:71(ErrorbarContainer)
        1    0.000    0.000    0.000    0.000 patches.py:2532(Angle3)
        1    0.000    0.000    0.000    0.000 facts.py:565(InconsistentAssumptions)
        1    0.000    0.000    0.000    0.000 fused.py:40(LinearReLU)
        1    0.000    0.000    0.000    0.000 tarfile.py:291(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 cyaml.py:38(CSafeLoader)
        1    0.000    0.000    0.000    0.000 _pep440.py:150(<lambda>)
        1    0.000    0.000    0.000    0.000 _base.py:24(SparseFormatWarning)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1298(MeijerUnShiftD)
        1    0.000    0.000    0.000    0.000 fused.py:113(BNReLU3d)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:216(SqrtdenestStopIteration)
        1    0.000    0.000    0.000    0.000 evalf.py:65(PrecisionExhausted)
        1    0.000    0.000    0.000    0.000 gzip.py:117(BadGzipFile)
        1    0.000    0.000    0.000    0.000 context.py:14(ProcessError)
        1    0.000    0.000    0.000    0.000 __init__.py:256(c_wchar_p)
        1    0.000    0.000    0.000    0.000 representer.py:48(RepresenterError)
        1    0.000    0.000    0.000    0.000 loader.py:39(SafeLoader)
        1    0.000    0.000    0.000    0.000 discovery.py:263(FlatLayoutModuleFinder)
        1    0.000    0.000    0.000    0.000 __init__.py:273(ExtractError)
        1    0.000    0.000    0.000    0.000 backend_managers.py:27(ToolManagerMessageEvent)
        1    0.000    0.000    0.000    0.000 argparse.py:992(_StoreFalseAction)
        1    0.000    0.000    0.000    0.000 pathlib.py:1391(PosixPath)
        1    0.000    0.000    0.000    0.000 nodes.py:125(SequenceNode)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:103(ExponentialCapsFloat)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 mock.py:2345(AsyncMock)
        1    0.000    0.000    0.000    0.000 exceptions.py:17(InvalidStateError)
        1    0.000    0.000    0.000    0.000 fused.py:58(ConvBn2d)
        1    0.000    0.000    0.000    0.000 _fortran.py:24(FortranFormattingError)
        1    0.000    0.000    0.000    0.000 constructor.py:47(ConstructorError)
        1    0.000    0.000    0.000    0.000 _csc.py:179(csc_array)
        1    0.000    0.000    0.000    0.000 _static.py:145(SpecifierSet)
        1    0.000    0.000    0.000    0.000 client.py:1459(HTTPException)
        1    0.000    0.000    0.000    0.000 figure.py:154(AxesStack)
        1    0.000    0.000    0.000    0.000 threading.py:1199(daemon)
        1    0.000    0.000    0.000    0.000 dates.py:1657(MinuteLocator)
        1    0.000    0.000    0.000    0.000 errors.py:37(RemovedConfigError)
        1    0.000    0.000    0.000    0.000 inputs.py:1178(BadIncarWarning)
        1    0.000    0.000    0.000    0.000 numbers.py:3308(_as_mpf_val)
        2    0.000    0.000    0.000    0.000 __init__.py:137(exec_module)
        1    0.000    0.000    0.000    0.000 patches.py:3129(CurveFilledB)
        1    0.000    0.000    0.000    0.000 exceptions.py:284(ParseFatalException)
        1    0.000    0.000    0.000    0.000 exceptions.py:28(DMNotAField)
        1    0.000    0.000    0.000    0.000 errors.py:20(DistutilsError)
        1    0.000    0.000    0.000    0.000 _idl.py:153(ObjectPointer)
        2    0.000    0.000    0.000    0.000 groundtypes.py:26(__init__)
        1    0.000    0.000    0.000    0.000 eigen.py:38(Eigen)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:114(<listcomp>)
        1    0.000    0.000    0.000    0.000 parse.py:323(SplitResult)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2625(NonGuiException)
        1    0.000    0.000    0.000    0.000 scanner.py:53(ScannerError)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:281(ReadSubprocessPipeProto)
        1    0.000    0.000    0.000    0.000 profiler_util.py:613(StringTable)
        1    0.000    0.000    0.000    0.000 threading.py:798(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 threading.py:1400(_MainThread)
        1    0.000    0.000    0.000    0.000 core.py:148(MAError)
        1    0.000    0.000    0.000    0.000 _bsr.py:660(bsr_array)
        1    0.000    0.000    0.000    0.000 exceptions.py:10(ShapeError)
        1    0.000    0.000    0.000    0.000 utils.py:79(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {method 'isdecimal' of 'str' objects}
        1    0.000    0.000    0.000    0.000 extras.py:281(_fromnxfunction_seq)
        1    0.000    0.000    0.000    0.000 patches.py:3294(BracketB)
        1    0.000    0.000    0.000    0.000 tokens.py:210(DocumentStartToken)
        1    0.000    0.000    0.000    0.000 fused.py:76(ConvBnReLU2d)
        1    0.000    0.000    0.000    0.000 random.py:811(seed)
        1    0.000    0.000    0.000    0.000 _endian.py:55(BigEndianUnion)
        1    0.000    0.000    0.000    0.000 configparser.py:264(InterpolationMissingOptionError)
        1    0.000    0.000    0.000    0.000 fused.py:131(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1235(BoolFormat)
        1    0.000    0.000    0.000    0.000 _mio5.py:445(EmptyStructMarker)
        1    0.000    0.000    0.000    0.000 {method 'clear' of 'list' objects}
        1    0.000    0.000    0.000    0.000 _optimize.py:112(OptimizeResult)
        1    0.000    0.000    0.000    0.000 __init__.py:747(AbsoluteLinkError)
        1    0.000    0.000    0.000    0.000 case.py:334(_OrderedChainMap)
        1    0.000    0.000    0.000    0.000 identification.py:13(IdentificationMethods)
        1    0.000    0.000    0.000    0.000 _parser.py:39(Op)
        1    0.000    0.000    0.000    0.000 events.py:709(_RunningLoop)
        1    0.000    0.000    0.000    0.000 release.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_base.py:21(Context)
        1    0.000    0.000    0.000    0.000 _iotools.py:421(ConverterError)
        1    0.000    0.000    0.000    0.000 units.py:144(UnitError)
        1    0.000    0.000    0.000    0.000 _common.py:163(ZoneInfoNotFoundError)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._set_madvise_hugepage}
        1    0.000    0.000    0.000    0.000 events.py:253(MappingStartEvent)
        1    0.000    0.000    0.000    0.000 configparser.py:216(DuplicateOptionError)
        1    0.000    0.000    0.000    0.000 integerring.py:51(__init__)
        1    0.000    0.000    0.000    0.000 _dist_ver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'isascii' of 'str' objects}
        1    0.000    0.000    0.000    0.000 dates.py:1677(SecondLocator)
        1    0.000    0.000    0.000    0.000 font_manager.py:957(JSONEncoder)
        1    0.000    0.000    0.000    0.000 configparser.py:243(NoOptionError)
        1    0.000    0.000    0.000    0.000 subprocess.py:123(SubprocessError)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(ModuleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:212(Token)
        1    0.000    0.000    0.000    0.000 polyoptions.py:44(Flag)
        1    0.000    0.000    0.000    0.000 rl.py:83(sort)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:113(__init__)
        1    0.000    0.000    0.000    0.000 _internal.py:244(c_void_p)
        1    0.000    0.000    0.000    0.000 patches.py:3094(CurveAB)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:943(_InvalidEwError)
        1    0.000    0.000    0.000    0.000 scalarint.py:109(HexCapsInt)
        1    0.000    0.000    0.000    0.000 fused.py:123(LinearBn1d)
        1    0.000    0.000    0.000    0.000 events.py:123(StreamEndEvent)
        1    0.000    0.000    0.000    0.000 fused.py:140(LinearTanh)
        1    0.000    0.000    0.000    0.000 extras.py:294(_fromnxfunction_args)
        1    0.000    0.000    0.000    0.000 transforms.py:1516(InverseHankelTransform)
        1    0.000    0.000    0.000    0.000 extras.py:319(_fromnxfunction_allargs)
        1    0.000    0.000    0.000    0.000 loader.py:71(RoundTripLoader)
        1    0.000    0.000    0.000    0.000 core.py:115(switch)
        1    0.000    0.000    0.000    0.000 importer.py:22(ObjMismatchError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1962(NegFilll)
        1    0.000    0.000    0.000    0.000 markers.py:45(UndefinedEnvironmentName)
        1    0.000    0.000    0.000    0.000 _miobase.py:24(MatWriteError)
        1    0.000    0.000    0.000    0.000 facts.py:451(<setcomp>)
        1    0.000    0.000    0.000    0.000 odes.py:4(ODEMethods)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:157(JitTypeTraceStore)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3403(Buffer)
        1    0.000    0.000    0.000    0.000 fused.py:85(ConvBn3d)
        1    0.000    0.000    0.000    0.000 patches.py:2428(SimpleEvent)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1699(StateSpaceDiscrete)
        1    0.000    0.000    0.000    0.000 __init__.py:752(LinkOutsideDestinationError)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:33(FitError)
        1    0.000    0.000    0.000    0.000 solveset.py:794(_SolveTrig1Error)
        1    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 coreerrors.py:10(NonCommutativeExpression)
        1    0.000    0.000    0.000    0.000 _csc.py:274(csc_matrix)
        1    0.000    0.000    0.000    0.000 context.py:17(BufferTooShort)
        1    0.000    0.000    0.000    0.000 __init__.py:169(c_ushort)
        1    0.000    0.000    0.000    0.000 setupcfg.py:779(_DeprecatedConfig)
        1    0.000    0.000    0.000    0.000 _static.py:108(Dict)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:895(_PatchedFnSetAttr)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:161(JitTypeTraceConfig)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:401(group)
        1    0.000    0.000    0.000    0.000 __init__.py:25(clear_distutils)
        1    0.000    0.000    0.000    0.000 ops.py:861(NotUpcast)
        1    0.000    0.000    0.000    0.000 _miobase.py:31(MatWriteWarning)
        1    0.000    0.000    0.000    0.000 _adapters.py:143(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:260(IgnoredKeywordWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:18(DMBadInputError)
        1    0.000    0.000    0.000    0.000 abc.py:267(FileLoader)
        1    0.000    0.000    0.000    0.000 _coo.py:1352(coo_array)
        1    0.000    0.000    0.000    0.000 core.py:156(MaskError)
        1    0.000    0.000    0.000    0.000 patches.py:3274(BracketA)
        1    0.000    0.000    0.000    0.000 polyoptions.py:658(Polys)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:107(background_context)
        1    0.000    0.000    0.000    0.000 shutil.py:81(_GiveupOnFastCopy)
        1    0.000    0.000    0.000    0.000 exceptions.py:20(_ExceptionWordUnicodeSet)
        1    0.000    0.000    0.000    0.000 _arffread.py:58(ParseArffError)
        1    0.000    0.000    0.000    0.000 case.py:33(_ShouldStop)
        1    0.000    0.000    0.000    0.000 tarfile.py:273(ReadError)
        1    0.000    0.000    0.000    0.000 parse.py:342(SplitResultBytes)
        1    0.000    0.000    0.000    0.000 configparser.py:254(InterpolationError)
        1    0.000    0.000    0.000    0.000 client.py:1519(RemoteDisconnected)
        1    0.000    0.000    0.000    0.000 std.py:32(TqdmTypeError)
        1    0.000    0.000    0.000    0.000 exceptions.py:23(DMDomainError)
        1    0.000    0.000    0.000    0.000 _iotools.py:429(ConverterLockError)
        1    0.000    0.000    0.000    0.000 _static.py:61(Str)
        1    0.000    0.000    0.000    0.000 scalarint.py:118(DecimalInt)
        1    0.000    0.000    0.000    0.000 parse.py:328(ParseResult)
        1    0.000    0.000    0.000    0.000 boolalg.py:446(__eq__)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:834(ContentTransferEncoding)
        1    0.000    0.000    0.000    0.000 _static.py:69(List)
        1    0.000    0.000    0.000    0.000 core.py:270(ParseError)
        1    0.000    0.000    0.000    0.000 resolver.py:135(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:507(DotAtomText)
        1    0.000    0.000    0.000    0.000 function.py:103(PoleError)
        1    0.000    0.000    0.000    0.000 shutil.py:67(SpecialFileError)
        1    0.000    0.000    0.000    0.000 patches.py:3111(CurveFilledA)
        1    0.000    0.000    0.000    0.000 polyerrors.py:67(HeuristicGCDFailed)
        1    0.000    0.000    0.000    0.000 backend_tools.py:721(ConfigureSubplotsBase)
        1    0.000    0.000    0.000    0.000 _static.py:65(Tuple)
        1    0.000    0.000    0.000    0.000 _base.py:49(CancelledError)
        1    0.000    0.000    0.000    0.000 queues.py:16(QueueFull)
        1    0.000    0.000    0.000    0.000 polyerrors.py:71(ModularGCDFailed)
        1    0.000    0.000    0.000    0.000 utils.py:24(InvalidWheelFilename)
        1    0.000    0.000    0.000    0.000 warnings.py:99(SetuptoolsDeprecationWarning)
        1    0.000    0.000    0.000    0.000 unicode.py:304(CJK)
        1    0.000    0.000    0.000    0.000 _sf_error.py:13(SpecialFunctionError)
        1    0.000    0.000    0.000    0.000 _typing.py:26(Integer)
        1    0.000    0.000    0.000    0.000 ivp.py:24(OdeResult)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1592(DummySpecie)
        1    0.000    0.000    0.000    0.000 tokens.py:215(DocumentEndToken)
        1    0.000    0.000    0.000    0.000 _bsr.py:771(bsr_matrix)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(NonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 exceptions.py:33(DMFormatError)
        1    0.000    0.000    0.000    0.000 std.py:52(TqdmExperimentalWarning)
        1    0.000    0.000    0.000    0.000 function.py:583(_nested_map)
        1    0.000    0.000    0.000    0.000 parse.py:334(DefragResultBytes)
        1    0.000    0.000    0.000    0.000 shutil.py:71(ExecError)
        1    0.000    0.000    0.000    0.000 {built-in method _abc.get_cache_token}
        1    0.000    0.000    0.000    0.000 headerregistry.py:271(UniqueUnstructuredHeader)
        1    0.000    0.000    0.000    0.000 case.py:38(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 graph.py:419(_Handle)
        1    0.000    0.000    0.000    0.000 _parser.py:1608(UnknownTimezoneWarning)
        1    0.000    0.000    0.000    0.000 events.py:101(CollectionEndEvent)
        1    0.000    0.000    0.000    0.000 __init__.py:173(c_long)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:550(ObsLocalPart)
        1    0.000    0.000    0.000    0.000 systems.py:37(ODENonlinearError)
        1    0.000    0.000    0.000    0.000 exceptions.py:43(DMRankError)
        1    0.000    0.000    0.000    0.000 util.py:102(_FifoCache)
        1    0.000    0.000    0.000    0.000 error.py:232(UnsafeLoaderWarning)
        1    0.000    0.000    0.000    0.000 net_min_base.py:49(FxNetMinimizerResultMismatchError)
        1    0.000    0.000    0.000    0.000 __init__.py:70(_128Bit)
        1    0.000    0.000    0.000    0.000 errors.py:5(PreprocessError)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(DMValueError)
        1    0.000    0.000    0.000    0.000 shutil.py:74(ReadError)
        1    0.000    0.000    0.000    0.000 transports.py:148(Transport)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1274(CloseEvent)
        1    0.000    0.000    0.000    0.000 errors.py:41(RemovedCommandError)
        1    0.000    0.000    0.000    0.000 utils.py:30(InvalidSdistFilename)
        1    0.000    0.000    0.000    0.000 constructor.py:51(DuplicateKeyFutureWarning)
        1    0.000    0.000    0.000    0.000 errors.py:51(PackageDiscoveryError)
        1    0.000    0.000    0.000    0.000 composer.py:27(ComposerError)
        1    0.000    0.000    0.000    0.000 animation.py:674(AVConvWriter)
        1    0.000    0.000    0.000    0.000 animation.py:685(AVConvFileWriter)
        1    0.000    0.000    0.000    0.000 shutil.py:77(RegistryError)
        1    0.000    0.000    0.000    0.000 errors.py:20(BoundaryError)
        1    0.000    0.000    0.000    0.000 Image.py:74(DecompressionBombError)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1151(ZerosPolesGainDiscrete)
        1    0.000    0.000    0.000    0.000 polyerrors.py:122(UnsolvableFactorError)
        1    0.000    0.000    0.000    0.000 __init__.py:14(is_available)
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 headerregistry.py:382(UniqueAddressHeader)
        1    0.000    0.000    0.000    0.000 extension.py:176(Library)
        1    0.000    0.000    0.000    0.000 _script.py:328(ScriptWarning)
        1    0.000    0.000    0.000    0.000 context.py:20(TimeoutError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:840(HeaderLabel)
        1    0.000    0.000    0.000    0.000 error.py:168(YAMLStreamError)
        1    0.000    0.000    0.000    0.000 _base.py:651(BrokenExecutor)
        1    0.000    0.000    0.000    0.000 function.py:113(BadSignatureError)
        1    0.000    0.000    0.000    0.000 six.py:402(Module_six_moves_urllib_request)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:503(DotAtom)
        1    0.000    0.000    0.000    0.000 errors.py:28(CharsetError)
        1    0.000    0.000    0.000    0.000 errors.py:61(MultipartInvariantViolationDefect)
        1    0.000    0.000    0.000    0.000 headerregistry.py:322(UniqueDateHeader)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:200(Word)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:204(CFWSList)
        1    0.000    0.000    0.000    0.000 hb.py:30(MalformedHeader)
        1    0.000    0.000    0.000    0.000 exceptions.py:291(ParseSyntaxException)
        1    0.000    0.000    0.000    0.000 errors.py:81(DistutilsPlatformError)
        1    0.000    0.000    0.000    0.000 _dia.py:604(dia_matrix)
        1    0.000    0.000    0.000    0.000 events.py:248(SequenceEndEvent)
        1    0.000    0.000    0.000    0.000 errors.py:33(OnnxExporterError)
        1    0.000    0.000    0.000    0.000 exceptions.py:74(VisibleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 <string>:1(__create_fn__)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(MissingUnityError)
        1    0.000    0.000    0.000    0.000 exceptions.py:19(NonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 parse.py:347(ParseResultBytes)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:512(NoFoldLiteral)
        1    0.000    0.000    0.000    0.000 dataframes.py:367(CaptureDataFrame)
        1    0.000    0.000    0.000    0.000 __init__.py:276(ReadError)
        1    0.000    0.000    0.000    0.000 readers.py:27(files)
        1    0.000    0.000    0.000    0.000 _optimize.py:3113(BracketError)
        1    0.000    0.000    0.000    0.000 six.py:480(Module_six_moves_urllib_robotparser)
        1    0.000    0.000    0.000    0.000 polyerrors.py:82(ExtraneousFactors)
        1    0.000    0.000    0.000    0.000 _endian.py:34(_swapped_struct_meta)
        1    0.000    0.000    0.000    0.000 errors.py:33(DistutilsClassError)
        1    0.000    0.000    0.000    0.000 package_importer.py:675(_ExternNode)
        1    0.000    0.000    0.000    0.000 colors.py:1169(DivergingNorm)
        1    0.000    0.000    0.000    0.000 events.py:264(MappingEndEvent)
        1    0.000    0.000    0.000    0.000 exceptions.py:61(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 function.py:118(BadArgumentsError)
        1    0.000    0.000    0.000    0.000 std.py:57(TqdmDeprecationWarning)
        1    0.000    0.000    0.000    0.000 errors.py:96(DistutilsInternalError)
        1    0.000    0.000    0.000    0.000 argparse.py:774(ArgumentTypeError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:181(FlagError)
        1    0.000    0.000    0.000    0.000 _typing.py:30(Boolean)
        1    0.000    0.000    0.000    0.000 _iotools.py:437(ConversionWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:85(TooHardError)
        1    0.000    0.000    0.000    0.000 _miobase.py:28(MatReadWarning)
        1    0.000    0.000    0.000    0.000 splitter_base.py:182(FxNetSplitterInternalError)
        1    0.000    0.000    0.000    0.000 exceptions.py:189(DTypePromotionError)
        1    0.000    0.000    0.000    0.000 galoisgroups.py:35(MaxTriesException)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:43(ResolventException)
        1    0.000    0.000    0.000    0.000 pickle.py:84(UnpicklingError)
        1    0.000    0.000    0.000    0.000 __init__.py:190(c_uint)
        1    0.000    0.000    0.000    0.000 context.py:319(suppress)
        1    0.000    0.000    0.000    0.000 more.py:3661(AbortThread)
        1    0.000    0.000    0.000    0.000 error.py:172(YAMLWarning)
        1    0.000    0.000    0.000    0.000 tarfile.py:276(CompressionError)
        1    0.000    0.000    0.000    0.000 exceptions.py:39(StructureError)
        1    0.000    0.000    0.000    0.000 __init__.py:73(_96Bit)
        1    0.000    0.000    0.000    0.000 _optimize.py:157(OptimizeWarning)
        1    0.000    0.000    0.000    0.000 tokens.py:231(StreamEndToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:118(UnificationFailed)
        1    0.000    0.000    0.000    0.000 facts.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 exceptions.py:53(DMNonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1325(DejaVuSerifFontConstants)
        1    0.000    0.000    0.000    0.000 errors.py:48(DistutilsArgError)
        1    0.000    0.000    0.000    0.000 error.py:274(YAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 errors.py:41(NoBoundaryInMultipartDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:177(c_ulong)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:208(Atom)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:854(MessageID)
        1    0.000    0.000    0.000    0.000 constructor.py:58(DuplicateKeyError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:98(NotInvertible)
        1    0.000    0.000    0.000    0.000 polyerrors.py:114(PolynomialError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:858(InvalidMessageID)
        1    0.000    0.000    0.000    0.000 __init__.py:288(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:42(DistutilsGetoptError)
        1    0.000    0.000    0.000    0.000 proxy.py:317(TraceError)
        1    0.000    0.000    0.000    0.000 errors.py:87(InvalidHeaderDefect)
        1    0.000    0.000    0.000    0.000 errors.py:16(HeaderParseError)
        1    0.000    0.000    0.000    0.000 tarfile.py:282(HeaderError)
        1    0.000    0.000    0.000    0.000 headerregistry.py:397(UniqueSingleAddressHeader)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:685(InvalidParameter)
        1    0.000    0.000    0.000    0.000 resolver.py:294(Resolver)
        1    0.000    0.000    0.000    0.000 errors.py:104(ObsoleteHeaderDefect)
        1    0.000    0.000    0.000    0.000 exceptions.py:48(DMShapeError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:128(GeneratorsError)
        1    0.000    0.000    0.000    0.000 std.py:36(TqdmKeyError)
        1    0.000    0.000    0.000    0.000 tarfile.py:297(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:107(NonASCIILocalPartDefect)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:862(Header)
        1    0.000    0.000    0.000    0.000 hb.py:34(LineOverflow)
        1    0.000    0.000    0.000    0.000 client.py:1464(NotConnected)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:197(Phrase)
        1    0.000    0.000    0.000    0.000 exceptions.py:24(NonPositiveDefiniteMatrixError)
        1    0.000    0.000    0.000    0.000 tokens.py:271(KeyToken)
        1    0.000    0.000    0.000    0.000 errors.py:73(InvalidBase64CharactersDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:261(c_wchar)
        1    0.000    0.000    0.000    0.000 errors.py:74(DistutilsSetupError)
        1    0.000    0.000    0.000    0.000 tokens.py:246(BlockEndToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:90(RefinementFailed)
        1    0.000    0.000    0.000    0.000 polyerrors.py:102(NotReversible)
        1    0.000    0.000    0.000    0.000 backend_tools.py:439(ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 errors.py:67(UndecodableBytesDefect)
        1    0.000    0.000    0.000    0.000 frontend.py:131(FrontendTypeError)
        1    0.000    0.000    0.000    0.000 __init__.py:285(HeaderError)
        1    0.000    0.000    0.000    0.000 __init__.py:223(c_ubyte)
        1    0.000    0.000    0.000    0.000 streamplot.py:416(InvalidIndexError)
        1    0.000    0.000    0.000    0.000 comments.py:200(NotNone)
        1    0.000    0.000    0.000    0.000 polyerrors.py:94(CoercionFailed)
        1    0.000    0.000    0.000    0.000 polyerrors.py:147(UnivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 errors.py:53(MisplacedEnvelopeHeaderDefect)
        1    0.000    0.000    0.000    0.000 bdist.py:22(<lambda>)
        1    0.000    0.000    0.000    0.000 exceptions.py:21(SendfileNotAvailableError)
        1    0.000    0.000    0.000    0.000 tarfile.py:294(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:26(DistutilsModuleError)
        1    0.000    0.000    0.000    0.000 tokens.py:236(BlockSequenceStartToken)
        1    0.000    0.000    0.000    0.000 __init__.py:246(c_void_p)
        1    0.000    0.000    0.000    0.000 six.py:239(exec_module)
        1    0.000    0.000    0.000    0.000 tokens.py:289(FlowEntryToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:132(GeneratorsNeeded)
        1    0.000    0.000    0.000    0.000 mathtext.py:1370(MathTextWarning)
        1    0.000    0.000    0.000    0.000 errors.py:90(HeaderMissingRequiredValue)
        1    0.000    0.000    0.000    0.000 __init__.py:230(c_byte)
        1    0.000    0.000    0.000    0.000 errors.py:9(CompileError)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 tokens.py:256(FlowMappingStartToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:86(EvaluationFailed)
        1    0.000    0.000    0.000    0.000 __init__.py:186(c_int)
        1    0.000    0.000    0.000    0.000 __init__.py:300(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 tokens.py:241(BlockMappingStartToken)
        1    0.000    0.000    0.000    0.000 errors.py:56(MissingHeaderBodySeparatorDefect)
        1    0.000    0.000    0.000    0.000 errors.py:76(InvalidBase64LengthDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:198(c_double)
        1    0.000    0.000    0.000    0.000 json.py:906(MSONError)
        1    0.000    0.000    0.000    0.000 error.py:116(YAMLError)
        1    0.000    0.000    0.000    0.000 client.py:1478(UnimplementedFileMode)
        1    0.000    0.000    0.000    0.000 __init__.py:194(c_float)
        1    0.000    0.000    0.000    0.000 __init__.py:202(c_longdouble)
        1    0.000    0.000    0.000    0.000 _endian.py:35(_swapped_union_meta)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:465(_ToolsTypoInMetadata)
        1    0.000    0.000    0.000    0.000 __init__.py:291(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 __init__.py:294(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 tokens.py:251(FlowSequenceStartToken)
        1    0.000    0.000    0.000    0.000 tokens.py:279(ValueToken)
        1    0.000    0.000    0.000    0.000 polyerrors.py:151(MultivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 six.py:459(Module_six_moves_urllib_response)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CompressionError)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:28(__init__)
        1    0.000    0.000    0.000    0.000 polyerrors.py:78(IsomorphismFailed)
        1    0.000    0.000    0.000    0.000 errors.py:50(FirstHeaderLineIsContinuationDefect)
        1    0.000    0.000    0.000    0.000 context.py:23(AuthenticationError)
        1    0.000    0.000    0.000    0.000 tokens.py:261(FlowSequenceEndToken)
        1    0.000    0.000    0.000    0.000 tokens.py:284(BlockEntryToken)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:91(_take_dispatcher)
        1    0.000    0.000    0.000    0.000 __init__.py:282(StreamError)
        1    0.000    0.000    0.000    0.000 errors.py:55(DistutilsFileError)
        1    0.000    0.000    0.000    0.000 errors.py:103(DistutilsTemplateError)
        1    0.000    0.000    0.000    0.000 client.py:1495(ImproperConnectionState)
        1    0.000    0.000    0.000    0.000 errors.py:47(CloseBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 errors.py:70(InvalidBase64PaddingDefect)
        1    0.000    0.000    0.000    0.000 errors.py:63(DistutilsOptionError)
        1    0.000    0.000    0.000    0.000 client.py:1475(UnknownTransferEncoding)
        1    0.000    0.000    0.000    0.000 errors.py:107(DistutilsByteCompileError)
        1    0.000    0.000    0.000    0.000 errors.py:18(LinkError)
        1    0.000    0.000    0.000    0.000 errors.py:44(StartBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1823(tol)
        1    0.000    0.000    0.000    0.000 polyerrors.py:177(OptionError)
        1    0.000    0.000    0.000    0.000 errors.py:112(InvalidDateDefect)
        1    0.000    0.000    0.000    0.000 errors.py:13(LibError)
        1    0.000    0.000    0.000    0.000 __init__.py:251(c_bool)
        1    0.000    0.000    0.000    0.000 backend_tools.py:424(ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 tarfile.py:288(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 errors.py:23(UnknownFileType)
        1    0.000    0.000    0.000    0.000 client.py:1498(CannotSendRequest)
        1    0.000    0.000    0.000    0.000 __init__.py:76(_80Bit)
        1    0.000    0.000    0.000    0.000 polyerrors.py:106(NotAlgebraic)
        1    0.000    0.000    0.000    0.000 enum.py:1163(_missing_)
        1    0.000    0.000    0.000    0.000 streamplot.py:420(TerminateTrajectory)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:163(__init__)
        1    0.000    0.000    0.000    0.000 client.py:1504(ResponseNotReady)
        1    0.000    0.000    0.000    0.000 __init__.py:727(FilterError)
        1    0.000    0.000    0.000    0.000 tarfile.py:285(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 __init__.py:88(_8Bit)
        1    0.000    0.000    0.000    0.000 polyerrors.py:74(HomomorphismFailed)
        1    0.000    0.000    0.000    0.000 client.py:1467(InvalidURL)
        1    0.000    0.000    0.000    0.000 _functools.py:83(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:85(_16Bit)
        1    0.000    0.000    0.000    0.000 _utils_internal.py:37(prepare_multiprocessing_environment)
        1    0.000    0.000    0.000    0.000 streamplot.py:495(OutOfBounds)
        1    0.000    0.000    0.000    0.000 client.py:1501(CannotSendHeader)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_64Bit)
        1    0.000    0.000    0.000    0.000 __init__.py:82(_32Bit)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:584(_transpose_dispatcher)
        1    0.000    0.000    0.000    0.000 rationalfield.py:45(__init__)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:647(__init__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:93(_median_formula)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:442(__init__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:96(_mode_formula)


