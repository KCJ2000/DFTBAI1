import os
import sys
file_path = sys.argv[0]
root_path = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(file_path))))
sys.path.append(root_path)
sys.path.append(os.path.join(root_path,"module"))
import torch
import numpy as np


from module.physics_property.band.band import Band

band = Band()

para_input = torch.tensor([[ 8.8870e-02, -1.4146e+00,  1.2450e+00, -3.6168e-01,  6.9505e-01,
          1.0637e+00, -1.4573e-01,  6.2475e-01, -3.1389e+00,  1.8355e+00,
          1.1611e+00, -4.9038e-01, -2.0488e+00, -2.2836e+00,  1.4351e-01,
         -7.5583e-01, -1.4558e-01,  1.5079e+00,  2.2718e+00,  2.5133e+00,
          1.6135e-01, -2.2518e+00, -1.1872e-01,  4.5222e-01, -8.5346e-01,
         -1.0528e-01, -3.9588e-02, -1.5310e-01, -1.5730e+00,  8.6925e-01,
         -1.1493e-01,  1.4983e+00,  9.3925e-01, -3.3736e-01,  2.1305e-01,
          1.3250e+00,  1.0698e+00,  2.5977e-02, -3.6157e-01,  1.7057e+00,
          7.9849e-01,  2.2396e+00,  2.7140e-02, -1.3164e+00,  8.1773e-01,
          3.3374e-01,  5.2271e-01,  4.1800e-01, -2.6968e+00,  1.6201e+00,
         -9.7900e-01, -1.8823e+00,  1.0019e+00, -1.4620e+00, -3.8689e-01,
          4.4669e-01,  7.5323e-02, -6.9522e-01, -1.2486e+00,  2.5906e-01,
         -1.1435e+00,  4.7274e-01, -1.8291e+00,  2.2365e+00,  5.2905e-02,
          2.3637e-01, -6.5146e-02,  4.5366e-02,  1.4729e-02, -9.3629e-02,
         -2.2910e-01, -1.8111e-01, -1.5402e-01,  2.0940e-01, -9.9959e-02,
          9.1475e-02,  2.0730e-01, -1.7990e-01,  1.5587e-02, -2.9228e-01,
         -2.4764e-01, -6.3716e-02, -1.6445e-01, -1.8575e-01, -2.9004e-02,
         -2.1678e-02, -1.3525e-01, -4.8067e-02, -2.0002e-01, -1.6016e-01,
          1.3813e-01,  2.4126e-01, -1.3110e-01,  1.7549e-02,  7.9259e-02,
          1.6106e-03,  1.5765e-01, -2.3034e-01,  6.5840e-02,  4.4702e-02,
         -4.2964e-01, -9.5052e-01, -2.1322e-01,  1.2348e-01,  2.2746e-01,
          1.0557e+00,  1.1776e+00,  9.2272e-01, -4.2532e-01,  8.9702e-01,
          2.0766e-01, -5.4328e-03, -5.6930e-01,  1.3431e+00, -6.7049e-02,
         -5.4714e-01,  3.8067e-01,  1.3591e+00, -4.4657e-01, -3.2258e-01,
         -4.5785e-01, -6.9044e-01,  2.6331e-01,  5.0365e-01, -1.8177e+00,
          1.9729e-02, -1.2743e+00, -2.3465e-01, -3.8946e-01,  6.1031e-01,
          5.9471e-01, -1.0800e+00, -4.1227e-01,  7.4444e-01,  4.3042e-01,
         -1.2649e-01, -3.8879e-02,  5.2239e-01, -1.3985e-02,  1.2987e+00,
          1.6406e-01, -6.8657e-01,  6.5428e-01, -9.4317e-01, -2.8408e-01,
          3.4885e-01,  2.6999e-01, -2.2675e+00, -5.8569e-01,  1.1123e+00,
         -1.6700e+00,  1.8993e-01,  2.4532e-01,  6.6887e-01, -4.0604e-01,
         -1.6205e+00,  6.6559e-01,  8.7570e-01, -5.3276e-02,  4.4709e-02,
          7.2517e-01,  1.4178e-01,  6.6480e-01,  4.3441e-01,  2.3686e-01,
         -6.1408e-01,  5.6459e-01, -1.3614e+00,  7.1953e-02,  4.3900e-01,
         -1.3462e+00, -1.5623e+00,  6.1982e-01,  5.6597e-01,  8.9774e-02,
          8.6374e-01,  1.9014e-01, -1.4663e-01, -8.6850e-01, -1.2296e-02,
          8.0941e-01, -7.8165e-01, -2.4261e-01,  2.8634e-01,  3.0877e-01,
         -4.6700e-01,  4.3004e-01, -1.2501e-01, -5.8436e-01, -4.8513e-01,
         -5.8972e-01,  2.9330e-01,  2.4596e-01, -1.5252e-03, -1.0651e+00,
          5.9516e-01,  2.5600e-01,  2.1120e-01,  1.5058e+00,  1.3889e-01,
          1.5954e-01, -7.6098e-01,  8.0429e-02,  8.1251e-01, -6.3881e-02,
         -7.3098e-01,  3.6487e-01, -4.3151e-01,  2.1850e-01, -5.0448e-02,
         -1.7654e-01, -2.2175e-01, -3.3785e-01, -1.7198e-01, -9.9496e-01,
          1.2082e+00, -3.1643e-01,  2.2874e-01,  4.6948e-01,  9.2690e-01,
          2.7176e-01, -2.4313e-01, -4.3924e-02,  6.1850e-01, -1.2670e-01,
          3.1293e-01, -2.2451e-01,  5.4403e-01, -2.6033e-01, -2.9246e-01,
         -2.6575e-01,  3.6201e-01, -2.8393e-01, -2.0021e-01,  2.3865e-01,
         -4.5993e-01, -6.7693e-01,  2.9407e-01, -7.7201e-02, -3.1117e-01,
          3.6478e-02, -4.8366e-01, -5.7296e-01,  8.1229e-01, -6.3790e-01,
         -3.3480e-01,  2.0067e-01, -1.1074e+00, -1.0139e+00, -2.8212e-01,
          5.3715e-01,  3.2097e-01, -1.1614e+00, -1.5399e-01,  3.2555e-01,
         -5.7220e-01, -5.6778e-01,  5.7357e-02, -4.2727e-01,  9.5437e-01,
         -3.2134e-01, -1.5273e-01,  6.2843e-01,  6.3307e-01, -2.1531e-01,
          1.8485e-01,  1.6574e+00, -1.3277e+00, -1.1274e+00,  1.5312e+00,
         -1.3936e+00,  7.1438e-02,  5.9214e-01,  5.2022e-01, -2.4641e-01,
         -2.3637e+00,  9.2346e-01,  1.1902e+00,  7.0709e-02, -2.1133e-01,
          1.0381e+00, -8.5605e-04,  3.9675e-01,  9.3979e-01,  7.3182e-01,
         -9.5454e-01,  5.6339e-01, -8.5451e-01,  4.2392e-02,  7.7571e-01,
         -9.7702e-01, -2.1742e+00,  1.1728e-01,  6.3841e-03,  4.0539e-02,
         -2.3309e-01,  1.2856e-01,  6.6871e-03,  2.6814e-02,  1.5754e-02,
          1.9865e-01,  2.8903e-01, -9.4051e-02,  3.4936e-02, -1.2167e-01,
          6.5787e-02, -9.5742e-03,  1.2422e-01,  7.6035e-02,  1.3377e-01,
         -2.5861e-02,  5.3651e-02, -9.2174e-02,  2.4565e-01, -3.5093e-02,
          2.9314e-01, -2.5735e-01,  5.0797e-02,  3.5992e-02,  4.0359e-02,
          1.7106e-02,  1.3805e-01, -2.6315e-02,  2.2035e-03, -5.7663e-02,
          4.3079e-02, -9.2450e-02, -4.6196e-02,  4.3901e-01,  6.4826e-02,
          9.5712e-02, -1.6654e-01, -1.5904e-01, -1.8465e-01, -4.8861e-02,
         -1.2155e-01,  1.3194e-01, -2.3312e-01,  1.2220e-01, -2.0405e-01,
          9.2057e-02, -2.7471e-02, -7.6761e-03, -1.0257e-01, -3.1150e-02,
         -4.5054e-02, -7.4420e-02, -3.0002e-01,  1.0738e-01,  3.7970e-02,
         -1.1518e-01, -4.8527e-02, -1.4240e-01, -1.8521e-01,  6.7923e-02,
          5.5158e-02,  1.8718e-01,  4.8861e-02, -5.0715e-02, -1.4402e-01,
         -1.3633e-01,  3.3480e-01,  4.2893e-02,  4.3541e-02,  7.2650e-01,
         -5.0057e-01,  1.0140e+00,  1.0685e+00, -1.5594e+00,  3.3266e-01,
          1.0796e+00, -1.8888e-01,  4.2794e-01,  2.6874e-01, -1.5201e-01,
          1.1908e+00, -6.3094e-01,  3.0502e-01, -4.1594e-02,  6.4884e-01,
          7.5151e-01,  2.3529e-01,  5.8124e-01, -3.8684e-01,  9.4172e-01,
         -4.3029e-01,  3.5715e-01, -8.8308e-01, -2.1569e-01, -1.3448e+00,
          8.6961e-01, -1.3711e+00,  1.8286e+00,  1.2875e+00,  1.4617e-01,
         -9.3264e-01, -4.1538e-01, -5.3546e-02, -3.4797e-01,  1.5796e+00,
          2.8551e-01, -1.3420e+00, -1.1198e+00, -4.8059e-01, -1.0278e+00,
         -4.0866e-01, -2.9134e-01,  6.6554e-01,  7.6886e-01,  3.5290e-01,
          1.3655e+00,  2.3419e-01,  9.8240e-01,  1.2294e+00, -1.2198e-01,
         -5.3463e-02, -3.8859e-01, -3.9702e-01, -3.9636e-01,  9.9143e-01,
          1.5649e-01, -9.8484e-01,  8.6844e-01,  7.7729e-01,  2.4370e-01,
         -3.8318e-01, -7.9695e-02, -7.1178e-02, -7.5747e-01,  3.7624e-01,
         -1.3164e-01,  3.5011e-01, -2.7580e-01,  2.2033e-01, -1.5192e-01,
         -1.0872e+00,  2.1970e-01,  1.1786e+00, -4.1648e-01, -8.7646e-01,
         -9.4796e-02, -7.5403e-02, -9.8590e-01, -8.2909e-01, -3.7449e-01,
         -3.1827e-01,  3.0245e-01,  1.1066e-01, -1.0312e+00,  5.9184e-01,
         -3.0195e-01, -4.4757e-01, -1.0404e+00,  4.5300e-01,  1.0194e-01,
         -3.3176e-01, -1.7613e+00, -6.0608e-01,  4.5567e-01, -1.2549e+00,
          2.6092e-01,  2.7034e-01,  3.2757e-01, -5.3523e-01, -2.3914e-01,
         -7.1594e-01, -1.6863e-01,  5.5494e-01, -2.4612e-01,  2.1387e-01,
         -1.4020e-01,  5.5769e-01, -6.4301e-02, -3.7740e-01, -4.6045e-01,
         -1.8154e-02,  4.1764e-01,  3.2782e-01,  2.5566e-01, -1.1956e-01,
         -2.6460e-01,  1.4204e-01, -3.2999e-01, -2.7846e-02,  6.9667e-01,
          8.4968e-01, -9.7300e-01,  2.9906e-01,  1.4024e+00,  8.1773e-01,
          6.4687e-01, -1.2637e-01, -1.3684e-01,  8.2589e-03,  1.2778e-01,
         -1.3821e-02, -1.2054e-01, -8.4959e-02,  5.6308e-02,  2.4665e-01,
         -3.4352e-02,  1.8392e-01, -1.3177e-01,  4.8328e-02,  9.8048e-02,
          1.9177e-02,  3.6302e-02,  6.0886e-03, -1.1175e-01, -1.1361e-01,
          1.9450e-01,  1.2636e-01, -1.5948e-01, -1.9028e-01,  2.7859e-01,
          6.9732e-02,  4.7642e-02,  5.2720e-02, -1.0584e-01, -1.0596e-01,
          1.0552e-01, -2.6802e-01, -8.1736e-02, -2.5778e-01,  1.6669e-01,
         -4.2123e-02, -3.7606e-02,  1.8327e-01]])

n_kpoints = 40
kpoint = [[0,0,0],[0,0,1/2],[0,1/2,1/2],[0,0,0]]
klabel = ["GAMMA","X","S","GAMMA"]

threshold = 1e-2
para_input = torch.where(abs(para_input) < threshold, torch.tensor(0.0), para_input)

band.init_calculate_model("/Volumes/KINGSTON/DFTBAI1/example/test_TB/MX2/MX2.pkl",
                              para = para_input
                              )
band.calculate_band(nkpoints=n_kpoints,klabels=klabel,kpoints=kpoint)
# print(band.content)
band.save_data("/Volumes/KINGSTON/DFTBAI1/example/test_TB/MX2/model_data/BAND.dat")


import pickle
with open("/Volumes/KINGSTON/DFTBAI1/example/test_TB/MX2/MX2.pkl","rb") as f:
    # pickletools.dis(f)
    model_dict = pickle.load(f)
model = model_dict['model'][2]
for i in range(40):
    for j in range(40):
        print(i,j,model[i,j])
