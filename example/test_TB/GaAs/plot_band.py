import os
import sys
file_path = sys.argv[0]
root_path = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(file_path))))
sys.path.append(root_path)
sys.path.append(os.path.join(root_path,"module"))
import torch
import numpy as np


from module.physics_property.band.band import Band

band = Band()

band.get_data("/home/hp/users/kfh/DFTBAI1/example/BAND-total/GaAs/BAND.dat")
#band.get_data("/home/hp/users/kfh/DFTBAI1/example/test_TB/Si_like/Si_PC/BAND.dat")
print(band.content['k_vector'].shape)
print(band.content["energy"].shape)

band_index = [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]
model_index = [i for i in range(18)]

# band.plot_data("/home/hp/users/kfh/DFTBAI1/example/test_TB/GaAs/DFT_GaAs.png",band_index)

###GaAs_spd_sp_3n
para_input = torch.tensor([[-3.6288e+00, -6.0197e-01, -6.5082e-02, -1.9901e-01, -2.3751e-01,
         -1.2773e+00, -3.6018e+00, -1.3520e+00, -2.2928e+00, -7.9320e-01,
         -8.9079e-01, -1.4033e+00, -3.5796e-02, -4.0067e-02,  2.6501e-01,
          2.5771e-01,  3.3176e-01,  2.2401e-01,  5.3956e-01,  5.6590e-02,
          7.4566e-03, -9.2136e-02,  1.2380e-02, -6.0440e-02,  3.5287e-01,
          3.5015e-02,  1.2723e-01, -3.4201e-01,  5.8310e-02,  5.4731e-01,
          3.1735e-01, -1.0776e-03, -4.5661e-01,  2.5830e-01, -5.1252e-02,
          1.5231e-01,  1.4159e-01,  9.0346e-02,  1.2835e-01,  1.3020e-01,
          2.5026e-01,  1.1975e-02, -4.2907e-01,  1.8840e-01,  4.7312e-02,
         -1.0157e-01,  9.5646e-02, -3.5594e-01,  6.5676e-03,  7.1184e-02,
          1.0524e-01,  2.6505e-01,  3.8173e-01,  4.1518e-02, -5.0642e-02,
          3.4978e-02,  1.0124e-01, -3.1926e-02, -8.5400e-02,  9.1226e-02,
         -3.3112e-01,  5.0517e-01,  1.8170e-01, -5.8821e-02, -2.1358e-01,
         -5.7986e-02,  2.9860e-01,  3.3587e-01,  2.7305e-01,  8.7835e-02,
          9.0399e-02, -4.7407e-01,  1.2154e-01, -9.9473e-02, -7.5035e-02,
         -2.0822e-02, -1.5138e-01,  9.4598e-02, -2.0144e-01,  2.4441e-02,
          1.8977e-01,  3.1144e-01,  2.2868e-01,  2.5645e-01, -1.7791e-01,
          2.2411e-01,  8.5516e-02, -2.5567e-01,  4.5182e-02, -7.6147e-02,
          5.7264e-01, -8.3989e-02, -1.0036e-01, -3.4229e-01,  3.1617e-01,
          2.2476e-01,  2.0492e-01,  4.7808e-01]])


### GaAs_spd_sp_4n
para_input = torch.tensor([[-2.6862e+00, -1.1739e+00,  1.5936e+00, -5.4736e-01, -1.8421e+00,
         -1.1788e+00, -1.1113e+00, -4.5123e-01, -5.3531e-01, -8.6074e-01,
         -7.3513e-01, -1.3943e+00,  3.1418e-02,  2.2955e-01,  2.5955e-01,
         -2.0708e-01,  6.5864e-02,  2.2282e-01, -8.3118e-02,  1.0038e-01,
         -5.0665e-01,  2.5679e-01, -1.7467e-01, -2.3679e-01,  1.1326e-01,
          2.2991e-04,  6.4255e-02, -4.0916e-01,  8.8639e-01, -9.4191e-02,
          7.3550e-02,  4.5643e-02,  2.6897e-01,  1.2268e-02, -6.8335e-01,
         -9.4037e-03,  2.4169e-01, -3.9133e-01,  2.1620e-01,  1.2811e-03,
          9.3341e-02, -2.8112e-01, -2.5512e-02,  1.7080e-02, -1.2470e-01,
          1.2523e-02, -6.6513e-02,  3.8508e-02,  3.2916e-01, -6.0163e-02,
          1.0517e-01,  4.8297e-02,  2.2363e-01, -1.7195e-01, -2.0447e-01,
         -9.1628e-02,  4.2502e-02,  1.4390e-01, -1.0395e-01,  2.7840e-02,
         -1.6028e-01, -1.0693e-01, -1.9613e-01,  8.2077e-02,  2.3446e-02,
          3.2778e-01,  7.2089e-02,  2.2983e-01,  1.7646e-01, -8.8335e-03,
         -1.0346e-01, -4.3665e-01, -1.1121e-01, -1.3826e-01, -6.3960e-02,
          3.1079e-02,  1.5850e-01, -4.3115e-02, -2.5472e-01, -3.1323e-01,
          1.8005e-01, -2.8490e-01,  9.9362e-02, -2.1998e-01,  1.9130e-01,
         -1.9075e-01, -5.1014e-02, -2.1402e-01,  6.1382e-02, -4.3204e-02,
          1.0481e-01,  3.2728e-01,  2.2502e-02,  2.2668e-02, -1.6758e-01,
          1.0684e-01, -2.7004e-01,  4.0673e-02, -9.4172e-02, -1.1998e-01,
          4.3890e-02,  3.6508e-01, -8.6547e-02,  1.0170e-01, -7.0298e-02,
          2.9756e-01, -1.2701e-01, -9.3869e-02, -6.1589e-02, -3.2199e-02,
          2.2351e-01,  1.6168e-01, -1.2430e-01,  2.6464e-02,  2.3417e-01,
          6.2998e-03,  1.4615e-01, -2.3823e-01,  8.4229e-02, -8.8073e-02,
         -3.5013e-01,  9.8775e-04, -1.0594e-01,  1.9454e-01, -5.3435e-02,
         -3.6003e-03, -6.3675e-02, -4.0391e-03, -4.5470e-02, -2.6451e-02,
          9.4657e-02,  6.3627e-02,  1.6547e-01, -1.3519e-02,  2.4765e-02,
         -2.5898e-01, -1.4142e-01,  3.2090e-02, -7.7027e-02, -1.7482e-02,
         -4.9207e-02,  5.8135e-02, -4.6825e-02, -1.2560e-01, -1.0686e-01,
         -1.5082e-02,  9.2275e-02,  5.5938e-02,  5.4997e-02, -6.5213e-02,
          1.2326e-01, -2.8352e-02, -2.3091e-01,  5.3961e-02,  1.6484e-01,
          6.4002e-02]])
para_input = torch.tensor([[-3.8096e+00, -1.1463e+00,  1.3623e+00, -7.3452e-01, -1.3659e+00,
         -1.1991e+00, -2.3118e+00,  2.2990e-01,  8.1890e-01, -5.8111e-01,
         -1.2211e+00, -1.3888e+00, -2.7152e-01, -9.7463e-02, -4.6288e-01,
         -2.1422e-01, -5.9071e-02,  1.4568e-01,  3.0376e-02,  1.1648e-01,
         -2.9216e-01, -1.8859e-01, -5.7064e-02, -2.2317e-01, -1.1263e-01,
          1.8998e-02,  1.7338e-01,  1.6924e-01, -1.2063e-01,  1.3877e-01,
         -1.6773e-01,  3.0128e-01, -2.3894e-01,  6.0681e-01,  2.5616e-01,
         -3.8032e-01, -1.2813e-01,  1.2542e-01, -2.1430e-01, -1.3750e-02,
          2.6770e-01, -2.3106e-01,  4.0082e-02, -1.7035e-02, -2.1030e-02,
         -7.7812e-02, -1.3645e-01, -3.0813e-01, -1.1719e-01, -4.2531e-01,
          1.5046e-01, -6.0334e-02,  3.9359e-02,  3.1196e-01,  2.1630e-01,
          1.6147e-01, -3.3725e-01, -1.1087e-01,  6.1718e-02, -3.6065e-01,
         -7.9212e-02,  9.0222e-02, -1.7546e-01, -1.0721e-01, -1.6523e-03,
          3.9118e-01,  1.2581e-01,  1.6852e-03,  1.0534e-01, -3.2542e-03,
         -1.2376e-01,  1.6918e-01, -2.5116e-02,  1.9240e-01, -1.2942e-02,
          1.0711e-01, -1.1682e-01, -6.1524e-02, -4.8150e-01, -1.1888e-01,
         -5.2993e-02, -1.6079e-01,  1.0775e-01, -1.7540e-01, -3.3848e-01,
         -1.4398e-01, -1.0706e-01, -1.3744e-01,  1.0899e-01,  2.0941e-01,
          5.1023e-02,  2.9978e-02,  2.4386e-01, -8.3904e-02, -4.1141e-02,
          1.0289e-01, -1.0786e-01, -5.0227e-02,  9.7815e-02, -1.5754e-02,
          1.8258e-01, -6.2276e-02,  2.8002e-01, -1.6969e-01, -2.1695e-03,
         -4.3245e-02, -8.3586e-02,  9.3279e-02,  1.0512e-01, -1.7733e-01,
         -3.7307e-02, -1.3759e-01, -1.7456e-01,  1.1036e-01,  1.1843e-01,
          7.8883e-02,  1.8695e-01, -1.0247e-01,  2.3308e-01,  1.1984e-01,
          9.4115e-03, -4.7621e-02,  1.3085e-01,  7.8420e-02, -2.7182e-02,
         -1.3514e-01,  6.8608e-01,  2.4696e-02, -1.3375e-01, -2.0717e-01,
          3.3053e-03,  1.0683e-01,  8.9589e-02,  1.3422e-01,  2.2768e-02,
         -1.4248e-01, -9.6181e-02, -3.3094e-01,  1.9790e-02,  9.6332e-02,
         -1.3165e-01, -1.0360e-01,  1.5438e-02, -3.8134e-02,  1.2902e-01,
         -2.4495e-02,  2.1483e-02,  2.6146e-01, -1.2019e-02, -5.3604e-02,
         -4.5160e-02,  1.0245e-01,  1.7370e-01, -2.2294e-01, -1.0286e-01,
          1.9046e-01]])
para_input = torch.tensor([[-3.7221e+00, -1.0831e+00, -1.4256e+00, -6.7137e-01, -1.8993e+00,
         -1.3750e+00, -4.7262e-01, -1.2662e+00,  1.5144e-02, -1.4879e-01,
          1.1679e-01, -1.2309e+00,  1.3719e-01,  1.2668e-01,  5.6935e-02,
         -4.4602e-02,  2.4579e-01,  2.5029e-01, -4.7504e-01, -1.7500e-01,
          5.2456e-01,  2.6451e-01, -4.4145e-01, -4.9743e-02, -5.8562e-02,
         -8.5250e-02, -3.8795e-01, -1.4030e-01,  6.2606e-01,  2.9259e-01,
         -5.2809e-02, -1.4854e-01,  1.0601e-02, -7.1817e-01, -1.4415e-01,
          1.9073e-01,  2.7763e-01, -1.6110e-01,  2.7005e-02,  2.1178e-01,
          2.7669e-01, -3.7703e-02,  3.5244e-01,  1.1216e-01, -1.0127e-01,
         -9.5745e-02,  1.4922e-01,  1.4877e-01, -1.0740e-01,  2.4623e-01,
         -3.2636e-01,  2.7670e-01, -1.2548e-02, -6.8437e-03, -1.3726e-01,
         -1.4265e-01,  1.5562e-01,  2.4195e-01, -2.3848e-01, -1.8889e-01,
         -7.9889e-02,  4.8022e-03,  1.3609e-01,  1.4954e-02, -1.2821e-01,
          5.1777e-01,  8.7068e-02, -1.8238e-01,  3.8440e-02, -1.5694e-01,
         -8.1224e-02,  2.0490e-02, -1.5371e-01,  1.1565e-02, -2.1611e-01,
          4.0533e-02, -3.9669e-01, -3.2738e-01, -5.5468e-01,  1.7392e-02,
          4.5500e-02, -1.3862e-01,  3.0136e-01,  1.6439e-01,  2.1933e-01,
          1.2812e-01, -6.8729e-02, -1.0410e-01, -1.0854e-01,  5.3938e-02,
         -1.0724e-01,  1.8838e-02, -6.2530e-02,  2.3677e-01, -3.4486e-01,
         -1.9820e-01,  8.6355e-02, -1.3689e-01,  7.7266e-03, -5.6781e-02,
         -7.6958e-04,  7.0307e-02,  2.3171e-01, -4.9550e-02, -1.2316e-01,
          4.8549e-02,  7.3492e-02,  1.1585e-01, -1.2328e-01, -7.9702e-02,
          3.9717e-02, -1.1136e-02, -1.2649e-01,  1.9784e-01,  1.5822e-01,
         -6.1306e-02, -1.3881e-01, -2.1189e-01, -9.6788e-02,  1.0246e-02,
         -1.3698e-01, -5.4612e-03,  6.8004e-02, -1.0371e-01, -2.6416e-01,
          5.3141e-02,  1.5233e-01, -8.3827e-02, -1.5686e-02,  1.5537e-01,
         -1.3211e-02, -1.2639e-01,  2.4967e-01,  4.5017e-02, -9.1638e-02,
          1.1517e-01,  8.8592e-02, -2.5835e-02, -2.2628e-01, -1.1200e-01,
          1.3710e-01,  1.4417e-02, -7.3073e-02,  6.1748e-03, -1.2245e-01,
          2.5995e-01,  1.4272e-01, -1.3988e-01, -9.0468e-02,  3.7551e-02,
          1.3206e-01,  2.6530e-01, -1.3514e-01,  1.6967e-01, -1.7171e-02,
         -3.8535e-02]])

###GaAs_spd_spd_5n
para_input = torch.tensor([[-2.9676e+00, -1.5852e+00, -3.0060e-01,  1.2001e+00, -1.0312e+00,
         -1.2077e+00, -1.9638e+00, -6.7515e-01,  1.4399e-01,  4.6651e-01,
         -5.3778e-01, -1.3902e+00, -2.0590e-02,  5.8245e-01, -2.8558e-02,
          1.8474e-02,  3.1618e-01,  6.3728e-02, -1.4436e-01, -4.4745e-01,
         -8.7528e-02, -7.7471e-01, -3.9746e-02,  5.5246e-02, -3.5083e-01,
          4.5739e-03, -2.5846e-01,  3.4503e-02, -3.3186e-01, -2.0683e-01,
         -3.1089e-01, -1.0709e-02,  5.2307e-01, -2.0314e-01, -3.4116e-01,
          3.5615e-01,  6.7970e-02, -6.0770e-03, -2.1665e-01, -2.9496e-03,
          2.3934e-01,  9.0590e-02, -1.6175e-01, -2.7094e-02,  6.0502e-02,
         -2.8884e-02, -3.5128e-01,  2.1526e-01,  1.3254e-01,  2.6594e-01,
         -8.8490e-02,  3.4681e-01,  1.2334e-01,  1.9048e-04, -1.5424e-01,
          1.2077e-02, -2.3423e-02,  1.8282e-01, -1.7670e-02,  4.7253e-02,
         -2.3555e-01, -3.4521e-01,  1.2087e-01, -1.0336e-01, -1.8852e-02,
         -3.1640e-01, -7.9141e-02,  1.4508e-01,  8.3735e-02,  1.5072e-01,
         -2.1488e-01,  2.7254e-02, -1.6640e-01, -6.7163e-03,  4.1773e-02,
          6.4357e-02,  9.9208e-02,  9.9764e-02, -4.0716e-01,  1.8880e-01,
         -1.0017e-01, -1.0745e-01,  2.1096e-01, -1.4071e-01, -2.4326e-01,
         -2.9112e-01, -7.4281e-03, -1.3233e-01,  2.4357e-01, -1.0996e-01,
         -9.5969e-02,  6.9936e-02,  8.7968e-02, -1.9859e-01, -9.9430e-02,
          1.6262e-01, -1.5739e-01, -6.5670e-03, -5.9600e-02, -3.3009e-01,
         -3.9560e-02, -1.0603e-01,  5.7626e-02,  2.0678e-02,  2.0544e-01,
          1.4496e-02,  1.4479e-01,  3.1747e-02,  3.5885e-02, -2.6965e-02,
          6.8376e-02, -1.2158e-01,  6.9352e-02,  9.8306e-02, -1.3098e-01,
          1.3346e-01, -2.5189e-02,  2.2684e-01,  1.2686e-02,  2.2168e-01,
         -1.0444e-01,  1.2945e-02,  2.3412e-01, -3.9453e-02, -5.2962e-02,
         -1.1464e-01,  2.2419e-01, -1.6770e-01, -1.2758e-01, -4.7432e-02,
          1.9677e-01,  2.1478e-02, -1.4824e-01, -4.5572e-02, -2.2460e-02,
          5.1115e-02,  1.3598e-01,  4.9402e-02,  2.0036e-01, -9.8410e-02,
          1.0913e-01,  1.2450e-01,  2.3368e-02, -1.1208e-02, -2.3038e-01,
          2.9512e-02,  3.6160e-01, -1.1855e-02, -4.6285e-03,  2.3060e-01,
         -2.0601e-01, -4.4178e-01, -7.2196e-02,  1.5298e-01,  1.8301e-01,
         -1.8683e-01, -1.1546e-01, -1.2569e-01,  7.4811e-02, -1.3415e-01,
          9.1009e-02, -2.6379e-01,  2.0726e-01,  1.1664e-01,  7.4154e-02,
         -1.2739e-01,  1.6647e-01, -1.7663e-01, -4.9649e-01,  1.2299e-01,
         -3.5312e-01,  1.6127e-02,  3.3863e-01, -7.9940e-02, -2.0350e-01,
          3.5304e-01, -7.8197e-03, -7.1813e-02,  1.1673e-01,  5.6906e-02,
          1.4985e-01,  1.4210e-02, -1.2673e-02, -5.4522e-02, -1.2101e-01,
         -2.4876e-01, -6.4003e-03,  3.0787e-01,  1.0726e-01, -2.2200e-01]])

threshold = 1e-2
para_input = torch.where(abs(para_input) < threshold, torch.tensor(0.0), para_input)

band.init_calculate_model("/home/hp/users/kfh/DFTBAI1/example/test_TB/GaAs/GaAs_spd_spd_5n.pkl",
                              para = para_input
                              )
# band.plot_model(band.content['k_vector'],save_path="/home/hp/users/kfh/DFTBAI1/example/test_TB/Fe_fm/calculate_band.png",
#                     select_band=model_index
#                     )

print(para_input.shape)
band.plot_compare(band.content['k_vector'],save_path="/home/hp/users/kfh/DFTBAI1/example/test_TB/GaAs/compare.png",
                  model_index=model_index,band_index=band_index)