nohup: 忽略输入
atom间距搜索达到近邻要求
atom_rep: [[0.125 0.125 0.125 1.   ]
 [0.875 0.875 0.875 1.   ]]
neighbour_table: [{'0': [(0, array([0.125, 0.125, 0.125]))], '1': [(1, array([-0.125, -0.125, -0.125])), (1, array([-0.125, -0.125,  0.875])), (1, array([-0.125,  0.875, -0.125])), (1, array([ 0.875, -0.125, -0.125]))]}, {'0': [(1, array([0.875, 0.875, 0.875]))], '1': [(0, array([0.125, 1.125, 1.125])), (0, array([1.125, 0.125, 1.125])), (0, array([1.125, 1.125, 0.125])), (0, array([1.125, 1.125, 1.125]))]}]
orbit0 ['s', 's', 'px', 'py', 'pz']
lattice vector: Matrix([[0, 1/2, 1/2], [1/2, 0, 1/2], [1/2, 1/2, 0]])
完成无对称性约束的Hamiltonian生成
完成Hamiltonian旋转矩阵的构建
(50, 90)
[1, 10, 11, 2, 3, 20, 21, 4, 5, 30, 31, 6, 7, 40, 41, 8, 9, 13, 22, 23, 14, 15, 32, 33, 16, 17, 42, 43, 18, 19, 25, 34, 35, 26, 27, 44, 45, 28, 29, 37, 46, 47, 38, 39, 49, 51, 60, 61, 52, 53, 70, 71, 54, 55, 80, 81, 56, 57, 90, 91, 58, 59, 63, 72, 73, 64, 65, 82, 83, 66, 67, 92, 93, 68, 69, 75, 84, 85, 76, 77, 94, 95, 78, 79, 87, 96, 97, 88, 89, 99]
([0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 24, 26, 27, 28, 29, 36, 38, 39, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 74, 76, 77, 78, 79, 86, 88, 89, 98], 50)
neighbour: 0 op_name: ['E', [0, 0, 0]]
([0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 24, 26, 27, 28, 29, 36, 38, 39, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 74, 76, 77, 78, 79, 86, 88, 89, 98], 50)
neighbour: 0 op_name: ['C2x', [0, 0.25, 0.25]]
(24, 24)
([0, 2, 3, 4, 5, 12, 14, 15, 24, 36, 38, 39, 48, 50, 52, 53, 54, 55, 62, 64, 65, 74, 86, 88, 89, 98], 26)
neighbour: 0 op_name: ['C2y', [0.25, 0, 0.25]]
(12, 12)
([0, 2, 3, 12, 24, 36, 48, 50, 52, 53, 62, 74, 86, 98], 14)
neighbour: 0 op_name: ['C2z', [0.25, 0.25, 0]]
([0, 2, 3, 12, 24, 36, 48, 50, 52, 53, 62, 74, 86, 98], 14)
neighbour: 0 op_name: ['C31+', [0, 0, 0]]
(6, 6)
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C31-', [0, 0, 0]]
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C33-', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C33+', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C34-', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C34+', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C32-', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C32+', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48, 50, 52, 53, 62, 98], 10)
neighbour: 0 op_name: ['C4x+', [0.25, 0, 0.25]]
(14, 10)
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C4x-', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C4y+', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C4y-', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C4z+', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C4z-', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C2a', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C2b', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C2c', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C2e', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C2d', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['C2f', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['I', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_x', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_y', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_z', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S61-', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S61+', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S63+', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S63-', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S64+', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S64-', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S62+', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S62-', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S4x-', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S4x+', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S4y-', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S4y+', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S4z-', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['S4z+', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_da', [0.25, 0.25, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_db', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_dc', [0.25, 0, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_de', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_dd', [0, 0.25, 0.25]]
([0, 2, 3, 12, 48], 5)
neighbour: 0 op_name: ['Sigma_df', [0, 0, 0]]
([0, 2, 3, 12, 48], 5)
(200, 400)
[200, 201, 6, 7, 202, 203, 4, 5, 204, 205, 2, 3, 206, 207, 0, 1, 240, 241, 14, 15, 242, 243, 12, 13, 244, 245, 10, 11, 246, 247, 8, 9, 280, 281, 22, 23, 282, 283, 20, 21, 284, 285, 18, 19, 286, 287, 16, 17, 320, 321, 30, 31, 322, 323, 28, 29, 324, 325, 26, 27, 326, 327, 24, 25, 360, 361, 38, 39, 362, 363, 36, 37, 364, 365, 34, 35, 366, 367, 32, 33, 208, 209, 46, 47, 210, 211, 44, 45, 212, 213, 42, 43, 214, 215, 40, 41, 248, 249, 54, 55, 250, 251, 52, 53, 252, 253, 50, 51, 254, 255, 48, 49, 288, 289, 62, 63, 290, 291, 60, 61, 292, 293, 58, 59, 294, 295, 56, 57, 328, 329, 70, 71, 330, 331, 68, 69, 332, 333, 66, 67, 334, 335, 64, 65, 368, 369, 78, 79, 370, 371, 76, 77, 372, 373, 74, 75, 374, 375, 72, 73, 216, 217, 86, 87, 218, 219, 84, 85, 220, 221, 82, 83, 222, 223, 80, 81, 256, 257, 94, 95, 258, 259, 92, 93, 260, 261, 90, 91, 262, 263, 88, 89, 296, 297, 102, 103, 298, 299, 100, 101, 300, 301, 98, 99, 302, 303, 96, 97, 336, 337, 110, 111, 338, 339, 108, 109, 340, 341, 106, 107, 342, 343, 104, 105, 376, 377, 118, 119, 378, 379, 116, 117, 380, 381, 114, 115, 382, 383, 112, 113, 224, 225, 126, 127, 226, 227, 124, 125, 228, 229, 122, 123, 230, 231, 120, 121, 264, 265, 134, 135, 266, 267, 132, 133, 268, 269, 130, 131, 270, 271, 128, 129, 304, 305, 142, 143, 306, 307, 140, 141, 308, 309, 138, 139, 310, 311, 136, 137, 344, 345, 150, 151, 346, 347, 148, 149, 348, 349, 146, 147, 350, 351, 144, 145, 384, 385, 158, 159, 386, 387, 156, 157, 388, 389, 154, 155, 390, 391, 152, 153, 232, 233, 166, 167, 234, 235, 164, 165, 236, 237, 162, 163, 238, 239, 160, 161, 272, 273, 174, 175, 274, 275, 172, 173, 276, 277, 170, 171, 278, 279, 168, 169, 312, 313, 182, 183, 314, 315, 180, 181, 316, 317, 178, 179, 318, 319, 176, 177, 352, 353, 190, 191, 354, 355, 188, 189, 356, 357, 186, 187, 358, 359, 184, 185, 392, 393, 198, 199, 394, 395, 196, 197, 396, 397, 194, 195, 398, 399, 192, 193]
([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], 200)
neighbour: 1 op_name: ['E', [0, 0, 0]]
([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], 200)
neighbour: 1 op_name: ['C2x', [0, 0.25, 0.25]]
(200, 200)
([6, 7, 4, 5, 14, 15, 12, 13, 22, 23, 20, 21, 30, 31, 28, 29, 38, 39, 36, 37, 46, 47, 44, 45, 54, 55, 52, 53, 62, 63, 60, 61, 70, 71, 68, 69, 78, 79, 76, 77, 86, 87, 84, 85, 94, 95, 92, 93, 102, 103, 100, 101, 110, 111, 108, 109, 118, 119, 116, 117, 126, 127, 124, 125, 134, 135, 132, 133, 142, 143, 140, 141, 150, 151, 148, 149, 158, 159, 156, 157, 166, 167, 164, 165, 174, 175, 172, 173, 182, 183, 180, 181, 190, 191, 188, 189, 198, 199, 196, 197], 100)
neighbour: 1 op_name: ['C2y', [0.25, 0, 0.25]]
(200, 100)
([4, 5, 12, 13, 20, 21, 28, 29, 36, 37, 44, 45, 52, 53, 60, 61, 68, 69, 76, 77, 84, 85, 92, 93, 100, 101, 108, 109, 116, 117, 124, 125, 132, 133, 140, 141, 148, 149, 156, 157, 164, 165, 172, 173, 180, 181, 188, 189, 196, 197], 50)
neighbour: 1 op_name: ['C2z', [0.25, 0.25, 0]]
([4, 5, 12, 13, 20, 21, 28, 29, 36, 37, 44, 45, 52, 53, 60, 61, 68, 69, 76, 77, 84, 85, 92, 93, 100, 101, 108, 109, 116, 117, 124, 125, 132, 133, 140, 141, 148, 149, 156, 157, 164, 165, 172, 173, 180, 181, 188, 189, 196, 197], 50)
neighbour: 1 op_name: ['C31+', [0, 0, 0]]
(168, 42)
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C31-', [0, 0, 0]]
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C33-', [0.25, 0, 0.25]]
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C33+', [0.25, 0.25, 0]]
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C34-', [0.25, 0.25, 0]]
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C34+', [0, 0.25, 0.25]]
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C32-', [0, 0.25, 0.25]]
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C32+', [0.25, 0, 0.25]]
([4, 5, 12, 13, 36, 37, 44, 45, 52, 53, 76, 77, 164, 165, 172, 173, 196, 197, 180, 181, 188, 189], 22)
neighbour: 1 op_name: ['C4x+', [0.25, 0, 0.25]]
(200, 17)
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C4x-', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C4y+', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C4y-', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C4z+', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C4z-', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C2a', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C2b', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C2c', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C2e', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C2d', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['C2f', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180, 188], 11)
neighbour: 1 op_name: ['I', [0, 0, 0]]
(48, 2)
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_x', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_y', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_z', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S61-', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S61+', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S63+', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S63-', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S64+', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S64-', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S62+', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S62-', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S4x-', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S4x+', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S4y-', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S4y+', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S4z-', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['S4z+', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_da', [0.25, 0.25, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_db', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_dc', [0.25, 0, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_de', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_dd', [0, 0.25, 0.25]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
neighbour: 1 op_name: ['Sigma_df', [0, 0, 0]]
([4, 12, 13, 36, 37, 52, 76, 77, 196, 180], 10)
完成Hamiltonian构建
{0: 0, 2: 1, 3: 2, 12: 3, 48: 4}
{4: 5, 12: 6, 13: 7, 36: 8, 37: 9, 52: 10, 76: 11, 77: 12, 196: 13, 180: 14}
{0: array([[([array([0., 0., 0.])], [{0: 1}]),
        ([array([0., 0., 0.])], [{1: 1, 2: 1j}]), ([], []), ([], []),
        ([], []), ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([array([0., 0., 0.])], [{1: (1-0j), 2: -1j}]),
        ([array([0., 0., 0.])], [{3: 1}]), ([], []), ([], []), ([], []),
        ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([], []), ([], []), ([array([0., 0., 0.])], [{4: (1-0j)}]),
        ([], []), ([], []), ([], []), ([], []), ([], []), ([], []),
        ([], [])],
       [([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{4: (1-0j)}]), ([], []), ([], []),
        ([], []), ([], []), ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{4: 1}]), ([], []), ([], []), ([], []),
        ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{0: (1-0j)}]),
        ([array([0., 0., 0.])], [{1: (1-0j), 2: 1j}]), ([], []),
        ([], []), ([], [])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{1: (1-0j), 2: -1j}]),
        ([array([0., 0., 0.])], [{3: (1-0j)}]), ([], []), ([], []),
        ([], [])],
       [([], []), ([], []), ([], []), ([], []), ([], []), ([], []),
        ([], []), ([array([0., 0., 0.])], [{4: (1+0j)}]), ([], []),
        ([], [])],
       [([], []), ([], []), ([], []), ([], []), ([], []), ([], []),
        ([], []), ([], []), ([array([0., 0., 0.])], [{4: (1-0j)}]),
        ([], [])],
       [([], []), ([], []), ([], []), ([], []), ([], []), ([], []),
        ([], []), ([], []), ([], []),
        ([array([0., 0., 0.])], [{4: (1-0j)}])]], dtype=object), 1: array([[([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{5: (1-0j)}, {5: (1-0j)}, {5: 1}, {5: (1-0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{6: (1-0j), 7: 1j}, {6: (1-0j), 7: 1j}, {6: 1, 7: 1j}, {6: (1-0j), 7: 1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{8: (-1+0j), 9: -1j}, {8: (1-0j), 9: 1j}, {8: (1-0j), 9: 1j}, {8: (-1+0j), 9: -1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{8: (-1-0j), 9: -1j}, {8: (1+0j), 9: (-0+1j)}, {8: (-1+0j), 9: -1j}, {8: (1+0j), 9: (-0+1j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{8: (-1+0j), 9: -1j}, {8: (-1+0j), 9: -1j}, {8: 1, 9: 1j}, {8: (1-0j), 9: 1j}])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{6: (1-0j), 7: -1j}, {6: (1-0j), 7: -1j}, {6: (1-0j), 7: -1j}, {6: (1-0j), 7: -1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{10: (1-0j)}, {10: (1-0j)}, {10: 1}, {10: (1-0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{11: (-1+0j), 12: -1j}, {11: (1-0j), 12: 1j}, {11: (1-0j), 12: 1j}, {11: (-1+0j), 12: -1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{11: (-1-0j), 12: -1j}, {11: (1+0j), 12: (-0+1j)}, {11: (-1+0j), 12: -1j}, {11: (1+0j), 12: (-0+1j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{11: (-1+0j), 12: -1j}, {11: (-1+0j), 12: -1j}, {11: 1, 12: 1j}, {11: (1-0j), 12: 1j}])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{8: (1+0j), 9: -1j}, {8: (-1+0j), 9: 1j}, {8: (-1+0j), 9: 1j}, {8: (1+0j), 9: -1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{11: (1+0j), 12: -1j}, {11: (-1+0j), 12: 1j}, {11: (-1+0j), 12: 1j}, {11: (1+0j), 12: -1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{14: (1+0j)}, {14: (1+0j)}, {14: (-1+0j)}, {14: (-1+0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{14: (1+0j)}, {14: (-1-0j)}, {14: (1+0j)}, {14: (-1-0j)}])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{8: (1+0j), 9: -1j}, {8: (-1-0j), 9: 1j}, {8: (1+0j), 9: -1j}, {8: (-1-0j), 9: 1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{11: (1+0j), 12: -1j}, {11: (-1-0j), 12: 1j}, {11: (1+0j), 12: -1j}, {11: (-1-0j), 12: 1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{14: (1+0j)}, {14: (1+0j)}, {14: (-1+0j)}, {14: (-1+0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{14: (1+0j)}, {14: (-1+0j)}, {14: (-1+0j)}, {14: (1+0j)}])],
       [([], []), ([], []), ([], []), ([], []), ([], []),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{8: (1+0j), 9: -1j}, {8: (1+0j), 9: -1j}, {8: (-1+0j), 9: 1j}, {8: (-1+0j), 9: 1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{11: (1+0j), 12: -1j}, {11: (1+0j), 12: -1j}, {11: (-1+0j), 12: 1j}, {11: (-1+0j), 12: 1j}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{14: (1+0j)}, {14: (-1+0j)}, {14: 1}, {14: (-1+0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{14: (1+0j)}, {14: (-1-0j)}, {14: (-1+0j)}, {14: (1+0j)}]),
        ([array([-0.25, -0.25, -0.25]), array([-0.25, -0.25,  0.75]), array([-0.25,  0.75, -0.25]), array([ 0.75, -0.25, -0.25])], [{13: (1-0j)}, {13: (1+0j)}, {13: 1}, {13: (1-0j)}])],
       [([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{5: (1-0j)}, {5: (1-0j)}, {5: (1-0j)}, {5: (1-0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{6: (1-0j), 7: (-0+1j)}, {6: (1-0j), 7: (-0+1j)}, {6: (1-0j), 7: (-0+1j)}, {6: (1-0j), 7: (-0+1j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{8: (1+0j), 9: 1j}, {8: (-1+0j), 9: -1j}, {8: (-1+0j), 9: -1j}, {8: (1+0j), 9: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{8: (-1-0j), 9: -1j}, {8: (1+0j), 9: 1j}, {8: (-1-0j), 9: -1j}, {8: (1+0j), 9: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{8: (-1+0j), 9: -1j}, {8: (-1+0j), 9: -1j}, {8: (1+0j), 9: 1j}, {8: (1+0j), 9: 1j}]),
        ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{6: (1-0j), 7: -1j}, {6: (1-0j), 7: -1j}, {6: (1-0j), 7: -1j}, {6: (1-0j), 7: -1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{10: (1-0j)}, {10: (1-0j)}, {10: (1-0j)}, {10: (1-0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{11: (1+0j), 12: 1j}, {11: (-1+0j), 12: -1j}, {11: (-1+0j), 12: -1j}, {11: (1+0j), 12: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{11: (-1-0j), 12: -1j}, {11: (1+0j), 12: 1j}, {11: (-1-0j), 12: -1j}, {11: (1+0j), 12: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{11: (-1+0j), 12: -1j}, {11: (-1+0j), 12: -1j}, {11: (1+0j), 12: 1j}, {11: (1+0j), 12: 1j}]),
        ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{8: (-1+0j), 9: 1j}, {8: (1-0j), 9: -1j}, {8: (1-0j), 9: -1j}, {8: (-1+0j), 9: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{11: (-1+0j), 12: 1j}, {11: (1-0j), 12: -1j}, {11: (1-0j), 12: -1j}, {11: (-1+0j), 12: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{14: (-1+0j)}, {14: (-1+0j)}, {14: (1+0j)}, {14: (1+0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{14: (-1+0j)}, {14: (1-0j)}, {14: (-1+0j)}, {14: (1+0j)}]),
        ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{8: (1+0j), 9: -1j}, {8: (-1+0j), 9: (-0+1j)}, {8: (1+0j), 9: -1j}, {8: (-1-0j), 9: (-0+1j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{11: (1+0j), 12: -1j}, {11: (-1+0j), 12: (-0+1j)}, {11: (1+0j), 12: -1j}, {11: (-1-0j), 12: (-0+1j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{14: (-1+0j)}, {14: (-1+0j)}, {14: (1+0j)}, {14: (1+0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}, {13: (1-0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{14: (1+0j)}, {14: (-1+0j)}, {14: (-1-0j)}, {14: (1+0j)}]),
        ([], []), ([], []), ([], []), ([], []), ([], [])],
       [([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{8: (1-0j), 9: -1j}, {8: (1-0j), 9: -1j}, {8: (-1+0j), 9: (-0+1j)}, {8: (-1+0j), 9: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{11: (1-0j), 12: -1j}, {11: (1-0j), 12: -1j}, {11: (-1+0j), 12: (-0+1j)}, {11: (-1+0j), 12: 1j}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{14: (-1-0j)}, {14: (1+0j)}, {14: (-1-0j)}, {14: (1+0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{14: (1+0j)}, {14: (-1+0j)}, {14: (-1+0j)}, {14: (1+0j)}]),
        ([array([-0.75,  0.25,  0.25]), array([ 0.25, -0.75,  0.25]), array([ 0.25,  0.25, -0.75]), array([0.25, 0.25, 0.25])], [{13: (1-0j)}, {13: (1-0j)}, {13: (1+0j)}, {13: (1-0j)}]),
        ([], []), ([], []), ([], []), ([], []), ([], [])]], dtype=object)}/home/hp/users/kfh/DFTBAI1/module/parameter/para4band/para4band.py:76: UserWarning: Casting complex values to real discards the imaginary part (Triggered internally at ../aten/src/ATen/native/Copy.cpp:250.)
  eigens = torch.diagonal(eigen_matrices,dim1=-1,dim2=-2).type(torch.float32) ###Hermit矩阵实数特征值

0 特征值优化 tensor(11.7989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5172, -2.0904,  1.0663, -0.4755, -0.8327,  1.1520, -2.5854, -0.6389,
         -3.3530, -1.7158,  0.9760, -0.1419,  0.3099,  0.1618, -1.4760]],
       device='cuda:0') 0
1000 特征值优化 tensor(3.9298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3186, -1.2124,  0.6744,  0.5289,  0.0048,  1.9772, -1.9322, -0.2931,
         -2.4732, -0.9861,  0.9282,  0.4135,  0.1976,  0.0084, -0.7254]],
       device='cuda:0') tensor(0.3370, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
2000 特征值优化 tensor(1.6007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7685, -0.3900,  0.9312,  1.4441,  0.4195,  2.4391, -1.5242, -0.4067,
         -2.0101, -0.6931,  0.8446,  0.5924, -0.0290, -0.1146, -0.9620]],
       device='cuda:0') tensor(0.4224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
3000 特征值优化 tensor(1.4117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8536, -0.1267,  1.1828,  1.6131,  0.7956,  2.4988, -1.3898, -0.5333,
         -2.0032, -0.6855,  0.8303,  0.7100, -0.0060, -0.2172, -1.0606]],
       device='cuda:0') tensor(0.4293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
4000 特征值优化 tensor(1.3616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9147,  0.0075,  1.3918,  1.6074,  0.9998,  2.4173, -1.3009, -0.6477,
         -2.0305, -0.6759,  0.8224,  0.7191,  0.0699, -0.2592, -1.1070]],
       device='cuda:0') tensor(0.4131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
5000 特征值优化 tensor(1.3204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9650,  0.1243,  1.6734,  1.5210,  1.1529,  2.2891, -1.2199, -0.7721,
         -2.0577, -0.6628,  0.7941,  0.6857,  0.1754, -0.2972, -1.1392]],
       device='cuda:0') tensor(0.4394, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
6000 特征值优化 tensor(1.2864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0024,  0.2834,  1.9819,  1.4758,  1.3077,  2.1746, -1.1738, -0.8912,
         -2.0773, -0.6389,  0.7837,  0.6516,  0.2373, -0.3355, -1.1776]],
       device='cuda:0') tensor(0.4508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
7000 特征值优化 tensor(1.2613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9973,  0.4546,  2.2928,  1.3894,  1.4039,  2.1284, -1.1535, -0.9990,
         -2.0761, -0.6205,  0.7833,  0.6258,  0.2833, -0.3582, -1.2026]],
       device='cuda:0') tensor(0.4725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
8000 特征值优化 tensor(1.2430, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9539,  0.6260,  2.5778,  1.2927,  1.4847,  2.0996, -1.1382, -1.0942,
         -2.0643, -0.6124,  0.7850,  0.6067,  0.3219, -0.3781, -1.2227]],
       device='cuda:0') tensor(0.4774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
9000 特征值优化 tensor(1.2325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8692,  0.7708,  2.7952,  1.2311,  1.5353,  2.0620, -1.1228, -1.1509,
         -2.0486, -0.6002,  0.8087,  0.5863,  0.3382, -0.3902, -1.2341]],
       device='cuda:0') tensor(0.4336, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
10000 特征值优化 tensor(1.2285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7458,  0.8775,  2.9144,  1.2054,  1.5010,  2.0145, -1.1035, -1.1783,
         -2.0209, -0.5901,  0.8228,  0.5708,  0.3410, -0.3812, -1.2261]],
       device='cuda:0') tensor(0.4524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
11000 正交保障 tensor(0.4854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5845,  0.9725,  3.0241,  1.1686,  1.4796,  1.9480, -1.0850, -1.2026,
         -1.9899, -0.5797,  0.8274,  0.5549,  0.3429, -0.3741, -1.2201]],
       device='cuda:0') tensor(0.4854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
12000 特征值优化 tensor(8.0418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5710, -0.0694, -1.0846, -0.9673, -0.2168,  0.2810, -0.7789,  0.0645,
          0.0270,  2.1721, -0.3511,  1.9042,  1.9435, -0.0703,  0.5807]],
       device='cuda:0') tensor(0.2880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
13000 特征值优化 tensor(1.6128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3669,  0.2100, -0.5262, -0.1197,  0.6817, -0.1697, -0.3241, -0.2341,
          0.0623,  1.3648, -0.7944,  1.1458,  1.1789,  0.1709,  0.9983]],
       device='cuda:0') tensor(0.3413, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
14000 特征值优化 tensor(1.3606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5307,  0.1145, -0.5691, -0.1104,  0.9885, -0.2522, -0.3673, -0.4836,
          0.0701,  1.3088, -1.2132,  1.0917,  1.1319,  0.2456,  1.1032]],
       device='cuda:0') tensor(0.3523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
15000 特征值优化 tensor(1.3365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6401,  0.2116, -0.6398, -0.2363,  1.0748, -0.2441, -0.3645, -0.5662,
          0.0856,  1.3359, -1.3991,  1.0845,  1.1349,  0.2686,  1.1195]],
       device='cuda:0') tensor(0.3758, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
16000 特征值优化 tensor(1.3072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8121,  0.3323, -0.7771, -0.4490,  1.1707, -0.2306, -0.3781, -0.6551,
          0.1018,  1.3728, -1.6289,  1.0887,  1.1520,  0.2946,  1.1434]],
       device='cuda:0') tensor(0.4183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
17000 特征值优化 tensor(1.2753, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0477,  0.4687, -0.9442, -0.7277,  1.3009, -0.2102, -0.3728, -0.7349,
          0.1146,  1.4103, -1.8472,  1.0646,  1.1530,  0.3283,  1.1755]],
       device='cuda:0') tensor(0.3934, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
18000 特征值优化 tensor(1.2515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2897,  0.5746, -1.1208, -1.0309,  1.3633, -0.1751, -0.3457, -0.7930,
          0.1308,  1.4243, -1.9912,  1.0335,  1.1438,  0.3438,  1.1907]],
       device='cuda:0') tensor(0.4341, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
19000 特征值优化 tensor(1.2327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4884,  0.6725, -1.2935, -1.3896,  1.3986, -0.1285, -0.3124, -0.8390,
          0.1402,  1.4278, -2.1010,  0.9951,  1.1249,  0.3528,  1.2000]],
       device='cuda:0') tensor(0.4733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
20000 特征值优化 tensor(1.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.7444,  0.7805, -1.5325, -1.7761,  1.3886, -0.0578, -0.3044, -0.8457,
          0.1537,  1.3931, -2.1402,  0.9549,  1.1186,  0.3456,  1.1977]],
       device='cuda:0') tensor(0.4269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
21000 特征值优化 tensor(1.1893, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.9569,  0.8456, -1.7682, -2.1292,  1.2818,  0.0118, -0.2535, -0.8322,
          0.1563,  1.3551, -2.1369,  0.9150,  1.0856,  0.3144,  1.1717]],
       device='cuda:0') tensor(0.4392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
22000 特征值优化 tensor(1.1740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1198,  0.8713, -1.9930, -2.3990,  1.2414,  0.1189, -0.1959, -0.8019,
          0.1506,  1.3351, -2.1235,  0.8802,  1.0469,  0.3038,  1.1596]],
       device='cuda:0') tensor(0.4077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
23000 特征值优化 tensor(1.1630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2089,  0.8755, -2.1791, -2.5800,  1.2401,  0.2344, -0.1545, -0.7361,
          0.1390,  1.3284, -2.1333,  0.8456,  1.0167,  0.3051,  1.1582]],
       device='cuda:0') tensor(0.4082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
24000 特征值优化 tensor(1.1533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2781,  0.8799, -2.3473, -2.7586,  1.2374,  0.3146, -0.1145, -0.6733,
          0.1256,  1.3174, -2.1374,  0.8224,  0.9747,  0.3004,  1.1573]],
       device='cuda:0') tensor(0.3743, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
25000 特征值优化 tensor(1.1439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.3679,  0.8831, -2.5029, -2.9523,  1.2446,  0.3761, -0.0682, -0.6113,
          0.1176,  1.3023, -2.1332,  0.8050,  0.9326,  0.2981,  1.1575]],
       device='cuda:0') tensor(0.3997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
26000 特征值优化 tensor(1.1353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4897e+00,  8.8767e-01, -2.6475e+00, -3.1438e+00,  1.2505e+00,
          4.2743e-01, -4.0425e-03, -5.5399e-01,  1.1679e-01,  1.2834e+00,
         -2.1263e+00,  7.8285e-01,  9.0226e-01,  2.9641e-01,  1.1580e+00]],
       device='cuda:0') tensor(0.4049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
27000 特征值优化 tensor(1.1287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6022,  0.8797, -2.7689, -3.3015,  1.2641,  0.4514,  0.0512, -0.5137,
          0.1114,  1.2688, -2.1177,  0.7619,  0.8729,  0.2959,  1.1619]],
       device='cuda:0') tensor(0.4165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
28000 特征值优化 tensor(1.1237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7146,  0.8660, -2.8860, -3.4507,  1.2682,  0.4620,  0.1031, -0.4815,
          0.1159,  1.2476, -2.1264,  0.7419,  0.8574,  0.2923,  1.1636]],
       device='cuda:0') tensor(0.4402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
29000 特征值优化 tensor(1.1202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8183,  0.8508, -2.9753, -3.5526,  1.2830,  0.4531,  0.1542, -0.4593,
          0.1232,  1.2353, -2.1202,  0.7211,  0.8517,  0.2934,  1.1666]],
       device='cuda:0') tensor(0.4597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
30000 特征值优化 tensor(2.3536, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3537, -0.9181,  1.0585,  1.1804, -0.1189,  0.4255,  0.7478, -0.2261,
          0.5975, -1.8088,  0.7025,  0.6176, -0.3423, -0.0658,  0.7148]],
       device='cuda:0') tensor(0.2979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
31000 特征值优化 tensor(2.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3603, -0.5218,  0.7626,  1.1896,  0.3236,  0.3203,  0.4623, -0.1942,
          0.5722, -1.7278,  0.3373,  0.6768, -0.4417, -0.0792,  0.8776]],
       device='cuda:0') tensor(0.3187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
32000 特征值优化 tensor(1.8694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2861, -0.4637,  0.6410,  1.2403,  0.5614,  0.2678,  0.1486, -0.0949,
          0.5666, -1.7241,  0.1020,  0.7318, -0.4706,  0.1618,  0.9445]],
       device='cuda:0') tensor(0.3191, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
33000 特征值优化 tensor(1.8045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6514, -0.3707,  0.3289,  1.4368,  0.8889,  0.2186,  0.0813, -0.0706,
          0.5874, -1.8135,  0.0525,  0.7975, -0.4897,  0.2494,  1.0368]],
       device='cuda:0') tensor(0.3667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
34000 特征值优化 tensor(1.7866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9775, -0.2689,  0.2323,  1.5407,  1.0262,  0.1562,  0.0580, -0.0499,
          0.6020, -1.8736,  0.0367,  0.8198, -0.5031,  0.2865,  1.0712]],
       device='cuda:0') tensor(0.3596, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
35000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0375, -0.2544,  0.2187,  1.5620,  1.0294,  0.1555,  0.0573, -0.0490,
          0.6049, -1.8820,  0.0380,  0.8227, -0.5041,  0.2888,  1.0691]],
       device='cuda:0') tensor(0.4145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
36000 特征值优化 tensor(1.7863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0541, -0.2477,  0.2130,  1.5668,  1.0084,  0.1576,  0.0581, -0.0499,
          0.6060, -1.8848,  0.0376,  0.8215, -0.5034,  0.2852,  1.0645]],
       device='cuda:0') tensor(0.3303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
37000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0538, -0.2443,  0.2112,  1.5690,  0.9940,  0.1592,  0.0579, -0.0501,
          0.6062, -1.8810,  0.0370,  0.8211, -0.5029,  0.2813,  1.0596]],
       device='cuda:0') tensor(0.3649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
38000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0570, -0.2462,  0.2114,  1.5665,  0.9918,  0.1576,  0.0587, -0.0504,
          0.6052, -1.8820,  0.0378,  0.8202, -0.5029,  0.2842,  1.0598]],
       device='cuda:0') tensor(0.3719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
39000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0596, -0.2460,  0.2114,  1.5664,  0.9955,  0.1569,  0.0584, -0.0500,
          0.6057, -1.8819,  0.0372,  0.8213, -0.5040,  0.2852,  1.0613]],
       device='cuda:0') tensor(0.3897, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
40000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0591, -0.2451,  0.2093,  1.5672,  0.9854,  0.1576,  0.0582, -0.0504,
          0.6043, -1.8815,  0.0370,  0.8193, -0.5049,  0.2845,  1.0594]],
       device='cuda:0') tensor(0.3841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
41000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0602, -0.2461,  0.2088,  1.5644,  0.9755,  0.1578,  0.0591, -0.0505,
          0.6046, -1.8781,  0.0381,  0.8211, -0.5071,  0.2815,  1.0575]],
       device='cuda:0') tensor(0.3617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
42000 特征值优化 tensor(1.4081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7108, -1.5611, -1.0343, -0.4757,  0.7985, -0.9200, -0.9449, -0.2875,
          0.4838, -1.2486, -0.9179, -0.6513, -0.9599,  0.1941,  1.0552]],
       device='cuda:0') tensor(0.3483, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
43000 特征值优化 tensor(1.3081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8040, -1.8482, -0.9204, -0.4777,  1.0530, -0.9000, -0.9104, -0.4521,
          0.5205, -1.3461, -1.0269, -0.6287, -0.9107,  0.2658,  1.1141]],
       device='cuda:0') tensor(0.4306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
44000 特征值优化 tensor(1.2716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9112, -2.1120, -0.8693, -0.5827,  1.1674, -0.8581, -0.9381, -0.4973,
          0.5775, -1.3880, -1.0784, -0.6346, -0.8283,  0.2931,  1.1425]],
       device='cuda:0') tensor(0.3778, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
45000 正交保障 tensor(0.4138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0840, -2.4481, -0.8999, -0.7261,  1.2891, -0.8019, -0.9916, -0.5117,
          0.6206, -1.4139, -1.1342, -0.6408, -0.7449,  0.3231,  1.1722]],
       device='cuda:0') tensor(0.4138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
46000 正交保障 tensor(0.4707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2542, -2.7854, -0.9983, -0.9200,  1.2796, -0.7481, -1.0228, -0.5217,
          0.6428, -1.4026, -1.1621, -0.6343, -0.6740,  0.3137,  1.1688]],
       device='cuda:0') tensor(0.4707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
47000 特征值优化 tensor(1.1807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4112, -3.1014, -1.1637, -1.0855,  1.2531, -0.6744, -1.0732, -0.5015,
          0.6402, -1.3917, -1.1816, -0.6178, -0.6088,  0.3003,  1.1614]],
       device='cuda:0') tensor(0.4208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
48000 特征值优化 tensor(1.1622, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5352, -3.3525, -1.3068, -1.1926,  1.2563, -0.5595, -1.1098, -0.4638,
          0.6453, -1.3761, -1.1949, -0.6071, -0.5594,  0.3007,  1.1625]],
       device='cuda:0') tensor(0.4224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
49000 特征值优化 tensor(1.1488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6040, -3.5506, -1.4715, -1.3099,  1.2643, -0.4667, -1.1390, -0.3940,
          0.6439, -1.3498, -1.1983, -0.5973, -0.5162,  0.3007,  1.1633]],
       device='cuda:0') tensor(0.4043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
50000 特征值优化 tensor(1.1379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6594, -3.7542, -1.6158, -1.3936,  1.2774, -0.4023, -1.1555, -0.3334,
          0.6379, -1.3200, -1.2201, -0.5911, -0.4793,  0.2955,  1.1654]],
       device='cuda:0') tensor(0.4061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
51000 特征值优化 tensor(1.1297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7239, -3.9527, -1.7333, -1.4610,  1.3001, -0.3617, -1.1618, -0.2906,
          0.6350, -1.2917, -1.2687, -0.5843, -0.4517,  0.2917,  1.1725]],
       device='cuda:0') tensor(0.4159, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
52000 正交保障 tensor(0.4252, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8036, -4.1168, -1.8143, -1.4741,  1.3011, -0.3351, -1.1698, -0.2657,
          0.6317, -1.2763, -1.3061, -0.5864, -0.4281,  0.2894,  1.1719]],
       device='cuda:0') tensor(0.4252, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
53000 特征值优化 tensor(1.1209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8980, -4.2636, -1.8809, -1.4743,  1.3052, -0.3136, -1.1690, -0.2403,
          0.6369, -1.2620, -1.3467, -0.5865, -0.4118,  0.2869,  1.1735]],
       device='cuda:0') tensor(0.4603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
54000 特征值优化 tensor(4.8360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3177, -0.4891,  0.6788, -0.3589,  0.1476, -0.3156, -0.4432,  0.4758,
         -0.0147, -0.3813, -1.2526,  1.8210,  0.1419, -1.3599,  0.7793]],
       device='cuda:0') tensor(0.5368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
55000 特征值优化 tensor(1.8613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9099, -0.8849,  1.1951, -0.0857,  0.8106, -0.3179, -0.2949,  0.5018,
          0.2031, -0.5593, -1.1235,  1.7841,  0.0479, -0.5603,  1.1274]],
       device='cuda:0') tensor(0.4068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
56000 特征值优化 tensor(1.5347, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8596, -1.0777,  1.3022, -0.0775,  0.9270, -0.3060, -0.3281,  0.5187,
          0.1586, -0.5165, -1.1112,  1.7696,  0.0517, -0.2787,  1.1262]],
       device='cuda:0') tensor(0.3717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
57000 正交保障 tensor(0.3603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8067, -1.2374,  1.4091, -0.0634,  0.8894, -0.3103, -0.3571,  0.5280,
          0.1223, -0.4846, -1.0740,  1.7621,  0.0578, -0.2338,  1.1127]],
       device='cuda:0') tensor(0.3603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
58000 特征值优化 tensor(1.5149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7904, -1.3585,  1.4959, -0.0023,  0.8959, -0.3179, -0.3807,  0.5414,
          0.0996, -0.4648, -1.0602,  1.7690,  0.0608, -0.2335,  1.1136]],
       device='cuda:0') tensor(0.3923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
59000 特征值优化 tensor(1.5116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7809, -1.4445,  1.5615,  0.0924,  0.9107, -0.3293, -0.3962,  0.5569,
          0.0758, -0.4541, -1.0549,  1.7730,  0.0659, -0.2392,  1.1181]],
       device='cuda:0') tensor(0.3685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
60000 特征值优化 tensor(1.5072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7913, -1.5500,  1.6368,  0.2187,  0.9207, -0.3385, -0.4131,  0.5712,
          0.0491, -0.4442, -1.0302,  1.7834,  0.0719, -0.2488,  1.1194]],
       device='cuda:0') tensor(0.3937, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
61000 特征值优化 tensor(1.5045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8022, -1.6321,  1.6975,  0.3218,  0.9306, -0.3454, -0.4285,  0.5820,
          0.0312, -0.4366, -1.0113,  1.7936,  0.0792, -0.2505,  1.1220]],
       device='cuda:0') tensor(0.3867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
62000 特征值优化 tensor(1.5014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8221, -1.7284,  1.7710,  0.4587,  0.9445, -0.3487, -0.4430,  0.5969,
          0.0081, -0.4288, -0.9874,  1.8055,  0.0905, -0.2522,  1.1246]],
       device='cuda:0') tensor(0.3749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
63000 特征值优化 tensor(1.4993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8461, -1.8085,  1.8280,  0.5852,  0.9547, -0.3487, -0.4568,  0.6048,
         -0.0110, -0.4219, -0.9656,  1.8206,  0.0953, -0.2510,  1.1241]],
       device='cuda:0') tensor(0.3770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
64000 特征值优化 tensor(1.4976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8798, -1.8898,  1.8850,  0.6997,  0.9553, -0.3519, -0.4698,  0.6152,
         -0.0248, -0.4114, -0.9498,  1.8325,  0.1015, -0.2507,  1.1253]],
       device='cuda:0') tensor(0.4078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
65000 特征值优化 tensor(1.4966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8972, -1.9480,  1.9243,  0.7936,  0.9572, -0.3527, -0.4781,  0.6215,
         -0.0376, -0.4047, -0.9412,  1.8401,  0.1052, -0.2509,  1.1223]],
       device='cuda:0') tensor(0.3991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
66000 特征值优化 tensor(1.8908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.5308e-02, -2.2874e+00, -6.3818e-01, -6.7258e-01,  6.1508e-01,
         -1.6768e-01, -6.5662e-01, -1.1288e+00,  1.0537e-01, -1.2536e+00,
         -1.7309e+00, -1.7264e-01, -9.3182e-01, -7.3541e-05,  9.8891e-01]],
       device='cuda:0') tensor(0.3887, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
67000 特征值优化 tensor(1.3956, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2635, -2.3651, -1.0146, -0.8244,  1.0032, -0.5776, -0.8261, -0.8196,
          0.1546, -1.3400, -1.8564, -0.2128, -0.9554,  0.2459,  1.1086]],
       device='cuda:0') tensor(0.3608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
68000 特征值优化 tensor(1.2612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5867, -2.4891, -1.2690, -1.1080,  1.2486, -0.6634, -0.9707, -0.7144,
          0.1691, -1.4601, -1.6552, -0.1746, -0.8320,  0.3068,  1.1652]],
       device='cuda:0') tensor(0.4128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
69000 特征值优化 tensor(1.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8015, -2.6999, -1.4344, -1.3028,  1.3661, -0.6063, -0.9961, -0.6669,
          0.1759, -1.5354, -1.4758, -0.1344, -0.7093,  0.3293,  1.1940]],
       device='cuda:0') tensor(0.4344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
70000 正交保障 tensor(0.4568, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9709, -2.9201, -1.5736, -1.4075,  1.4074, -0.5339, -0.9754, -0.6141,
          0.1730, -1.5405, -1.2963, -0.1220, -0.6472,  0.3306,  1.2013]],
       device='cuda:0') tensor(0.4568, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
71000 特征值优化 tensor(1.1573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1414, -3.2147, -1.7652, -1.4563,  1.2873, -0.4391, -0.9290, -0.5718,
          0.1540, -1.5130, -1.2607, -0.0979, -0.5913,  0.2951,  1.1698]],
       device='cuda:0') tensor(0.4133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
72000 特征值优化 tensor(1.1425, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2949, -3.4569, -1.9260, -1.4816,  1.2961, -0.3322, -0.9234, -0.5780,
          0.1532, -1.5039, -1.3063, -0.0817, -0.5431,  0.2925,  1.1728]],
       device='cuda:0') tensor(0.4250, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
73000 正交保障 tensor(0.4173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4407, -3.6575, -2.0655, -1.5186,  1.3059, -0.2695, -0.9257, -0.5886,
          0.1478, -1.4960, -1.3793, -0.0663, -0.5109,  0.2897,  1.1764]],
       device='cuda:0') tensor(0.4173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
74000 正交保障 tensor(0.4016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5702, -3.7990, -2.1557, -1.5297,  1.3075, -0.2308, -0.9264, -0.5952,
          0.1477, -1.4939, -1.4274, -0.0554, -0.4895,  0.2881,  1.1765]],
       device='cuda:0') tensor(0.4016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
75000 特征值优化 tensor(1.1236, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6923, -3.9371, -2.2398, -1.5301,  1.3079, -0.1982, -0.9223, -0.6033,
          0.1526, -1.4915, -1.4702, -0.0496, -0.4658,  0.2877,  1.1754]],
       device='cuda:0') tensor(0.4309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
76000 特征值优化 tensor(1.1202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8392, -4.0640, -2.3184, -1.5031,  1.3043, -0.1704, -0.9228, -0.6060,
          0.1600, -1.4937, -1.5016, -0.0420, -0.4481,  0.2864,  1.1730]],
       device='cuda:0') tensor(0.4547, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
77000 特征值优化 tensor(1.1179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9482, -4.1688, -2.3813, -1.4832,  1.3009, -0.1503, -0.9199, -0.6059,
          0.1652, -1.4932, -1.5349, -0.0309, -0.4359,  0.2853,  1.1722]],
       device='cuda:0') tensor(0.4303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
78000 特征值优化 tensor(6.1925, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9613, -1.2320,  2.1652, -0.0625, -0.1650, -1.3364, -1.2212,  0.8705,
          0.2416, -0.0998, -1.0737,  0.3107,  0.2189,  1.3852,  1.1467]],
       device='cuda:0') tensor(0.4861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
79000 特征值优化 tensor(3.3863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0195, -1.3181,  2.1828,  0.0265,  0.5080, -1.4943, -1.1441,  0.8391,
          0.3099, -0.1189, -1.2413,  0.3354,  0.2244,  0.6431,  1.5742]],
       device='cuda:0') tensor(0.5787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
80000 特征值优化 tensor(2.4233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8757, -1.2993,  2.0287, -0.0325,  0.9567, -1.5953, -1.2047,  0.8352,
          0.2162, -0.2024, -1.2570,  0.3753,  0.3643,  0.2051,  1.8968]],
       device='cuda:0') tensor(0.6158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
81000 特征值优化 tensor(2.2960, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0640, -1.2538,  2.2037, -0.0460,  1.3075, -1.5716, -1.2600,  0.7449,
          0.1226, -0.2422, -1.1265,  0.3837,  0.4460,  0.0897,  2.0149]],
       device='cuda:0') tensor(0.5288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
82000 特征值优化 tensor(2.2587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3310, -1.2830,  2.4004,  0.0067,  1.5270, -1.5909, -1.2552,  0.6724,
          0.0612, -0.2800, -1.0764,  0.3910,  0.4925,  0.1238,  2.0717]],
       device='cuda:0') tensor(0.5774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
83000 特征值优化 tensor(2.2344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5368, -1.3049,  2.5518,  0.0256,  1.7435, -1.6631, -1.2536,  0.6169,
          0.0097, -0.2996, -1.0873,  0.3901,  0.5256,  0.1778,  2.1283]],
       device='cuda:0') tensor(0.6323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
84000 特征值优化 tensor(2.2147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6929, -1.2538,  2.6882, -0.0484,  1.9476, -1.7927, -1.2269,  0.5409,
         -0.0454, -0.3128, -1.1281,  0.3884,  0.5305,  0.2330,  2.1833]],
       device='cuda:0') tensor(0.5738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
85000 正交保障 tensor(0.6807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8160, -1.2356,  2.8001, -0.0814,  2.2078, -1.8575, -1.2435,  0.4882,
         -0.0929, -0.3267, -1.1249,  0.3812,  0.5530,  0.2988,  2.2481]],
       device='cuda:0') tensor(0.6807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
86000 特征值优化 tensor(2.1833, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9554, -1.2474,  2.9265, -0.0778,  2.4851, -1.9291, -1.2725,  0.4623,
         -0.1484, -0.3410, -1.1202,  0.3827,  0.5769,  0.3684,  2.3191]],
       device='cuda:0') tensor(0.6315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
87000 特征值优化 tensor(2.1716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0963, -1.2660,  3.0399, -0.0587,  2.7425, -1.9975, -1.3113,  0.4396,
         -0.1969, -0.3560, -1.1205,  0.3795,  0.6013,  0.4371,  2.3891]],
       device='cuda:0') tensor(0.5700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
88000 特征值优化 tensor(2.1621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2294, -1.2836,  3.1375, -0.0330,  2.9854, -2.0393, -1.3356,  0.4128,
         -0.2437, -0.3716, -1.1162,  0.3794,  0.6269,  0.4975,  2.4485]],
       device='cuda:0') tensor(0.6349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
89000 正交保障 tensor(0.7614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3386, -1.3016,  3.2303, -0.0056,  3.2010, -2.0846, -1.3536,  0.3841,
         -0.2852, -0.3816, -1.1161,  0.3791,  0.6499,  0.5536,  2.5059]],
       device='cuda:0') tensor(0.7614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
90000 正交保障 tensor(0.7817, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4460, -1.3160,  3.3052,  0.0072,  3.3981, -2.1344, -1.3697,  0.3597,
         -0.3245, -0.3895, -1.1225,  0.3733,  0.6673,  0.6034,  2.5570]],
       device='cuda:0') tensor(0.7817, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
91000 特征值优化 tensor(2.1436, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5430, -1.3340,  3.3749,  0.0423,  3.5708, -2.1741, -1.3889,  0.3392,
         -0.3586, -0.3984, -1.1276,  0.3705,  0.6831,  0.6447,  2.6031]],
       device='cuda:0') tensor(0.7440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
92000 特征值优化 tensor(2.1398, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6390, -1.3322,  3.4325,  0.0624,  3.7132, -2.2218, -1.4059,  0.3152,
         -0.3901, -0.4055, -1.1400,  0.3705,  0.6965,  0.6808,  2.6396]],
       device='cuda:0') tensor(0.7381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
93000 正交保障 tensor(0.3040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8797e+00,  3.4545e-02,  1.0400e-01,  1.3170e-01, -4.8360e-02,
         -3.2912e-01,  1.9418e-01,  3.2912e-01,  3.6371e-01, -7.3330e-01,
          9.6842e-01,  1.6541e+00, -7.8476e-01,  2.1226e-04,  7.3256e-01]],
       device='cuda:0') tensor(0.3040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
94000 正交保障 tensor(0.3254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8883e+00, -3.9953e-02,  1.6559e-01,  4.1949e-01,  5.9037e-01,
         -3.5507e-02,  5.9912e-02,  1.3352e-03,  3.6981e-01, -7.0424e-01,
          3.0140e-01,  1.7498e+00, -8.4430e-01,  2.0646e-01,  9.2829e-01]],
       device='cuda:0') tensor(0.3254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
95000 特征值优化 tensor(1.7923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6699, -0.1691,  0.1441,  0.9131,  0.8822,  0.0159,  0.0429, -0.0344,
          0.3597, -0.7016,  0.1721,  1.8352, -0.8710,  0.2607,  1.0293]],
       device='cuda:0') tensor(0.3487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
96000 正交保障 tensor(0.3902, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6096, -0.2148,  0.1662,  1.0075,  0.9436,  0.0249,  0.0521, -0.0401,
          0.3577, -0.6959,  0.1716,  1.8517, -0.8750,  0.2728,  1.0481]],
       device='cuda:0') tensor(0.3902, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
97000 特征值优化 tensor(1.7869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6113, -0.2163,  0.1652,  1.0077,  0.9584,  0.0257,  0.0530, -0.0408,
          0.3592, -0.6976,  0.1709,  1.8526, -0.8759,  0.2777,  1.0530]],
       device='cuda:0') tensor(0.3727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
98000 特征值优化 tensor(1.7868, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6194, -0.2160,  0.1653,  1.0060,  0.9752,  0.0247,  0.0513, -0.0391,
          0.3587, -0.6965,  0.1709,  1.8547, -0.8781,  0.2801,  1.0550]],
       device='cuda:0') tensor(0.3428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
99000 特征值优化 tensor(1.7866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6175, -0.2130,  0.1635,  1.0069,  0.9737,  0.0252,  0.0514, -0.0400,
          0.3567, -0.6960,  0.1698,  1.8551, -0.8781,  0.2812,  1.0556]],
       device='cuda:0') tensor(0.4023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
100000 特征值优化 tensor(1.7866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6182, -0.2164,  0.1664,  1.0068,  0.9817,  0.0247,  0.0520, -0.0399,
          0.3548, -0.6955,  0.1704,  1.8569, -0.8782,  0.2821,  1.0586]],
       device='cuda:0') tensor(0.3575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
101000 正交保障 tensor(0.3843, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6217, -0.2157,  0.1674,  1.0033,  0.9983,  0.0246,  0.0507, -0.0392,
          0.3522, -0.6939,  0.1711,  1.8615, -0.8762,  0.2848,  1.0617]],
       device='cuda:0') tensor(0.3843, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
102000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6229, -0.2119,  0.1646,  1.0036,  0.9840,  0.0241,  0.0504, -0.0386,
          0.3517, -0.6928,  0.1713,  1.8600, -0.8751,  0.2836,  1.0577]],
       device='cuda:0') tensor(0.3873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
103000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6179, -0.2138,  0.1654,  1.0050,  0.9774,  0.0245,  0.0514, -0.0396,
          0.3521, -0.6926,  0.1715,  1.8594, -0.8746,  0.2809,  1.0565]],
       device='cuda:0') tensor(0.4513, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
104000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6215, -0.2162,  0.1671,  1.0049,  0.9961,  0.0239,  0.0506, -0.0398,
          0.3517, -0.6932,  0.1700,  1.8627, -0.8737,  0.2864,  1.0617]],
       device='cuda:0') tensor(0.3677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
105000 特征值优化 tensor(1.8007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3244, -0.9300, -0.9475,  1.8886,  0.5466, -0.7213, -0.7315, -0.0941,
          1.6517, -0.8658, -0.5158,  0.8799,  0.2089, -0.3451,  1.0333]],
       device='cuda:0') tensor(0.3418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
106000 特征值优化 tensor(1.5488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3673, -1.1140, -1.1433,  1.7926,  0.7444, -1.0275, -0.7011, -0.0587,
          1.5876, -0.8121, -0.3266,  0.9081,  0.1923, -0.1958,  1.0755]],
       device='cuda:0') tensor(0.3632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
107000 特征值优化 tensor(1.5181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3358, -1.2958, -1.2987,  1.7472,  0.8704, -1.1603, -0.6889, -0.0930,
          1.5725, -0.7978, -0.2773,  0.9336,  0.1998, -0.2330,  1.1121]],
       device='cuda:0') tensor(0.3731, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
108000 特征值优化 tensor(1.5100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2644, -1.4352, -1.4288,  1.7610,  0.8929, -1.1444, -0.6769, -0.1402,
          1.5480, -0.7880, -0.2519,  0.9298,  0.2112, -0.2348,  1.1141]],
       device='cuda:0') tensor(0.3563, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
109000 特征值优化 tensor(1.5037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1818, -1.5687, -1.5645,  1.8109,  0.9176, -1.1061, -0.6745, -0.1854,
          1.5234, -0.7913, -0.2383,  0.9213,  0.2198, -0.2397,  1.1176]],
       device='cuda:0') tensor(0.3663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
110000 特征值优化 tensor(1.4987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1227, -1.6646, -1.6762,  1.8687,  0.9416, -1.0662, -0.6679, -0.2277,
          1.5046, -0.7893, -0.2172,  0.9157,  0.2317, -0.2504,  1.1226]],
       device='cuda:0') tensor(0.3443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
111000 特征值优化 tensor(1.4964, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0837, -1.7465, -1.7628,  1.9452,  0.9458, -1.0526, -0.6711, -0.2524,
          1.4905, -0.7909, -0.2135,  0.9146,  0.2387, -0.2487,  1.1254]],
       device='cuda:0') tensor(0.4141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
112000 特征值优化 tensor(1.4953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0759, -1.7967, -1.8341,  1.9952,  0.9495, -1.0601, -0.6770, -0.2671,
          1.4849, -0.7903, -0.2102,  0.9166,  0.2471, -0.2498,  1.1235]],
       device='cuda:0') tensor(0.3766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
113000 特征值优化 tensor(1.4941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0995, -1.8463, -1.9145,  2.0564,  0.9528, -1.0550, -0.6862, -0.2857,
          1.4784, -0.7987, -0.2078,  0.9228,  0.2550, -0.2497,  1.1229]],
       device='cuda:0') tensor(0.3743, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
114000 特征值优化 tensor(1.4931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1282, -1.8875, -1.9883,  2.1158,  0.9535, -1.0516, -0.6881, -0.3008,
          1.4770, -0.8042, -0.2001,  0.9239,  0.2652, -0.2498,  1.1239]],
       device='cuda:0') tensor(0.3977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
115000 特征值优化 tensor(1.4922, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1661, -1.9208, -2.0585,  2.1786,  0.9552, -1.0448, -0.6938, -0.3164,
          1.4763, -0.8084, -0.1939,  0.9266,  0.2765, -0.2514,  1.1228]],
       device='cuda:0') tensor(0.3581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
116000 特征值优化 tensor(4.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6317, -0.8593,  1.5442, -0.2153, -0.2417, -0.3494,  0.1751, -0.9455,
         -0.2659,  0.9990,  1.9196, -0.4036, -1.5583, -0.3152, -0.1312]],
       device='cuda:0') tensor(0.2357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
117000 特征值优化 tensor(1.7765, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8954, -0.7660,  1.6899, -0.0621, -0.0397, -0.1490,  0.0543, -0.8453,
         -0.3191,  0.8928,  1.9455, -0.4618, -1.5630, -0.1826, -0.7569]],
       device='cuda:0') tensor(0.3071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
118000 特征值优化 tensor(1.3310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1019, -1.1186,  1.8889, -0.2377,  0.7561,  0.0643,  0.0073, -0.8794,
         -0.2825,  0.9325,  2.0722, -0.4674, -1.6514, -0.2114, -1.0381]],
       device='cuda:0') tensor(0.3927, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
119000 特征值优化 tensor(1.2294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3411, -1.4446,  2.2053, -0.5069,  1.0959,  0.1364,  0.0505, -0.9549,
         -0.2353,  0.9563,  2.0894, -0.4422, -1.6718, -0.2739, -1.1231]],
       device='cuda:0') tensor(0.4552, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
120000 特征值优化 tensor(1.1997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5560, -1.6653,  2.4984, -0.7578,  1.2134,  0.1269,  0.1090, -1.0086,
         -0.2047,  0.9694,  2.0710, -0.4155, -1.6524, -0.2988, -1.1539]],
       device='cuda:0') tensor(0.4030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
121000 特征值优化 tensor(1.1799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7268, -1.8272,  2.7691, -0.9875,  1.2334,  0.0830,  0.1783, -1.0058,
         -0.1878,  0.9715,  1.9925, -0.3932, -1.6138, -0.3015, -1.1584]],
       device='cuda:0') tensor(0.4373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
122000 特征值优化 tensor(1.1686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7928, -1.8794,  2.9607, -1.1278,  1.2333,  0.0117,  0.2609, -0.9811,
         -0.1852,  0.9820,  1.9408, -0.3830, -1.5688, -0.3031, -1.1564]],
       device='cuda:0') tensor(0.4327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
123000 正交保障 tensor(0.4272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8465, -1.9098,  3.1791, -1.2732,  1.2368, -0.0678,  0.3534, -0.9269,
         -0.1818,  0.9783,  1.9170, -0.3706, -1.5212, -0.3012, -1.1562]],
       device='cuda:0') tensor(0.4272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
124000 特征值优化 tensor(1.1472, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8904, -1.9420,  3.3668, -1.4346,  1.2435, -0.1088,  0.4311, -0.8808,
         -0.1796,  0.9752,  1.8923, -0.3567, -1.4748, -0.2982, -1.1577]],
       device='cuda:0') tensor(0.4047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
125000 特征值优化 tensor(1.1387, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9694, -1.9762,  3.5398, -1.5933,  1.2462, -0.1315,  0.4972, -0.8466,
         -0.1814,  0.9748,  1.8509, -0.3469, -1.4282, -0.2968, -1.1560]],
       device='cuda:0') tensor(0.3834, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
126000 正交保障 tensor(0.4532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0648, -2.0022,  3.6938, -1.7265,  1.2555, -0.1366,  0.5608, -0.8166,
         -0.1720,  0.9671,  1.8092, -0.3361, -1.3943, -0.2962, -1.1588]],
       device='cuda:0') tensor(0.4532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
127000 特征值优化 tensor(1.1262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1366, -2.0324,  3.8174, -1.8325,  1.2750, -0.1231,  0.6076, -0.7969,
         -0.1710,  0.9651,  1.7851, -0.3284, -1.3615, -0.2946, -1.1646]],
       device='cuda:0') tensor(0.4500, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
128000 特征值优化 tensor(1.1220, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2194, -2.0692,  3.9391, -1.9349,  1.2789, -0.0956,  0.6595, -0.7806,
         -0.1650,  0.9553,  1.7582, -0.3178, -1.3380, -0.2949, -1.1646]],
       device='cuda:0') tensor(0.4497, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
129000 特征值优化 tensor(3.9037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3404,  0.6910,  0.1846,  1.0817, -0.9123,  1.1920, -1.4049,  0.3376,
          0.2188,  0.4241,  1.0164,  0.4425, -0.3778, -0.2206,  1.3235]],
       device='cuda:0') tensor(0.4156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
130000 特征值优化 tensor(3.0187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4849,  1.1536, -0.1175,  1.1823, -0.1326,  1.4732, -1.4223,  0.4004,
         -0.0143,  0.5283,  1.2521,  0.2037, -0.4388, -0.2982,  1.5985]],
       device='cuda:0') tensor(0.5595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
131000 特征值优化 tensor(2.6784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2360e-01,  1.5292e+00, -2.1671e-01,  9.3662e-01,  4.2419e-01,
          1.7625e+00, -1.6134e+00,  4.6768e-01, -2.6739e-04,  4.7007e-01,
          1.4731e+00,  2.1950e-01, -4.3807e-01, -3.0437e-01,  1.7770e+00]],
       device='cuda:0') tensor(0.5564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
132000 特征值优化 tensor(2.5104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0445,  1.8221, -0.2833,  0.6850,  0.9031,  1.9563, -1.7155,  0.4805,
          0.0376,  0.4391,  1.6252,  0.2738, -0.4486, -0.3193,  1.9272]],
       device='cuda:0') tensor(0.5717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
133000 特征值优化 tensor(2.4582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1169,  2.0157, -0.3791,  0.6046,  1.2058,  1.9939, -1.7346,  0.4626,
          0.0812,  0.3996,  1.6139,  0.3072, -0.4634, -0.3111,  2.0204]],
       device='cuda:0') tensor(0.6143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
134000 正交保障 tensor(0.6257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0780,  2.1075, -0.4686,  0.6028,  1.3962,  1.9786, -1.6992,  0.4291,
          0.0960,  0.3719,  1.5524,  0.3534, -0.4770, -0.3567,  2.0747]],
       device='cuda:0') tensor(0.6257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
135000 特征值优化 tensor(2.4331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0160,  2.0877, -0.5577,  0.5564,  1.5115,  1.9755, -1.6752,  0.3861,
          0.1178,  0.3593,  1.4957,  0.3752, -0.4814, -0.3814,  2.1025]],
       device='cuda:0') tensor(0.6536, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
136000 特征值优化 tensor(2.4288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1405,  2.0592, -0.6470,  0.5119,  1.5406,  2.0070, -1.6793,  0.3547,
          0.1344,  0.3495,  1.4710,  0.4018, -0.4871, -0.3815,  2.1107]],
       device='cuda:0') tensor(0.6377, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
137000 特征值优化 tensor(2.4198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3354,  2.0095, -0.7638,  0.4880,  1.5684,  2.0156, -1.6575,  0.2938,
          0.1693,  0.3317,  1.4112,  0.4363, -0.4879, -0.3820,  2.1226]],
       device='cuda:0') tensor(0.5963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
138000 特征值优化 tensor(2.4126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5474,  2.0127, -0.8453,  0.5698,  1.6114,  2.0779, -1.6481,  0.2575,
          0.1933,  0.3089,  1.4177,  0.4851, -0.4989, -0.3925,  2.1365]],
       device='cuda:0') tensor(0.6293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
139000 特征值优化 tensor(2.4052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7631,  1.9688, -0.9082,  0.6700,  1.6620,  2.1503, -1.6675,  0.2248,
          0.2285,  0.2997,  1.4355,  0.5353, -0.5163, -0.4018,  2.1548]],
       device='cuda:0') tensor(0.6374, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
140000 正交保障 tensor(0.6319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8984,  1.9328, -0.9337,  0.7497,  1.6815,  2.2177, -1.6986,  0.2068,
          0.2459,  0.2894,  1.4587,  0.5677, -0.5311, -0.3990,  2.1591]],
       device='cuda:0') tensor(0.6319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
141000 特征值优化 tensor(1.8627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1815,  0.2452,  1.1211,  1.2142,  0.2863,  2.5892,  0.6317, -0.5207,
         -0.6930,  1.3296, -0.0995, -1.1349,  0.2864,  0.1553, -0.9300]],
       device='cuda:0') tensor(0.3814, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
142000 特征值优化 tensor(1.6035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2008,  0.1416,  1.2233,  1.4366,  0.5523,  2.4770,  0.5332, -0.5932,
         -0.7732,  1.4315,  0.1253, -1.0038,  0.2755,  0.0892, -1.0145]],
       device='cuda:0') tensor(0.3767, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
143000 特征值优化 tensor(1.5737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3905,  0.1619,  1.2234,  1.5042,  0.5918,  2.2935,  0.4820, -0.6511,
         -0.7987,  1.4410,  0.2021, -0.9472,  0.3123,  0.1484, -1.0334]],
       device='cuda:0') tensor(0.3916, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
144000 特征值优化 tensor(1.5481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6357,  0.1945,  1.2761,  1.5741,  0.7229,  2.1482,  0.4432, -0.7142,
         -0.8285,  1.4355,  0.2761, -0.8862,  0.3284,  0.1923, -1.0697]],
       device='cuda:0') tensor(0.3727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
145000 特征值优化 tensor(1.5288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9939,  0.2508,  1.4271,  1.6253,  0.7991,  2.0199,  0.4170, -0.7534,
         -0.8275,  1.4096,  0.3284, -0.8381,  0.3376,  0.2121, -1.0893]],
       device='cuda:0') tensor(0.4072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
146000 特征值优化 tensor(1.5121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3519,  0.2657,  1.6280,  1.6620,  0.8327,  1.9060,  0.3690, -0.7648,
         -0.8055,  1.3621,  0.3358, -0.8078,  0.3575,  0.2218, -1.0936]],
       device='cuda:0') tensor(0.4690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
147000 特征值优化 tensor(1.4940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6994,  0.2563,  1.8322,  1.6761,  0.8708,  1.8303,  0.3078, -0.7665,
         -0.7881,  1.3099,  0.3204, -0.7798,  0.3632,  0.2452, -1.1001]],
       device='cuda:0') tensor(0.3704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
148000 特征值优化 tensor(1.4768, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0576,  0.2521,  2.0780,  1.7225,  0.8870,  1.7927,  0.2433, -0.7853,
         -0.7604,  1.2532,  0.2973, -0.7592,  0.3762,  0.2496, -1.0993]],
       device='cuda:0') tensor(0.4016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
149000 正交保障 tensor(0.4160, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3488,  0.2507,  2.2925,  1.8009,  0.9053,  1.7562,  0.1861, -0.7900,
         -0.7462,  1.1997,  0.2784, -0.7497,  0.3852,  0.2544, -1.1026]],
       device='cuda:0') tensor(0.4160, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
150000 特征值优化 tensor(1.4544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.5955,  0.2550,  2.4710,  1.9009,  0.9277,  1.7352,  0.1268, -0.7870,
         -0.7402,  1.1518,  0.2537, -0.7269,  0.3914,  0.2574, -1.1057]],
       device='cuda:0') tensor(0.4054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
151000 特征值优化 tensor(1.4474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8094,  0.2375,  2.6269,  2.0193,  0.9420,  1.7369,  0.0959, -0.8004,
         -0.7200,  1.1095,  0.2509, -0.7231,  0.3986,  0.2601, -1.1093]],
       device='cuda:0') tensor(0.4215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
152000 特征值优化 tensor(1.4424, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9767,  0.2138,  2.7597,  2.1036,  0.9505,  1.7647,  0.0700, -0.8184,
         -0.6990,  1.0794,  0.2591, -0.7127,  0.4029,  0.2575, -1.1112]],
       device='cuda:0') tensor(0.4716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
153000 特征值优化 tensor(1.4384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.1152,  0.2058,  2.8778,  2.1835,  0.9530,  1.7919,  0.0394, -0.8325,
         -0.6917,  1.0485,  0.2637, -0.7011,  0.4012,  0.2575, -1.1116]],
       device='cuda:0') tensor(0.3995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
154000 特征值优化 tensor(5.6503, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9127, -0.6605,  2.2217, -1.5427, -1.6608,  0.2948, -2.0612, -0.5807,
         -0.0651,  0.2467, -1.3787, -0.5447,  1.7861, -0.0125, -0.6426]],
       device='cuda:0') tensor(0.3551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
155000 特征值优化 tensor(2.8553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3818e+00, -1.0913e+00,  1.8025e+00, -1.1065e+00, -8.0983e-01,
         -3.0420e-01, -1.3963e+00, -1.5235e-01,  5.2422e-02,  4.6483e-01,
         -1.7951e+00, -4.7793e-01,  1.6370e+00,  8.2521e-05, -6.0628e-01]],
       device='cuda:0') tensor(0.3098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
156000 特征值优化 tensor(2.5763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5710, -1.0742,  1.7933, -0.9790, -0.4021, -0.3899, -1.1802, -0.1541,
          0.1484,  0.5653, -1.6519, -0.5264,  1.7028,  0.0405, -0.6298]],
       device='cuda:0') tensor(0.2995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
157000 正交保障 tensor(0.3155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7275, -1.0116,  1.8087, -0.8597, -0.2236, -0.3958, -0.9826, -0.1827,
          0.1894,  0.6048, -1.4056, -0.5466,  1.6782,  0.0420, -0.6681]],
       device='cuda:0') tensor(0.3155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
158000 特征值优化 tensor(2.4322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8796, -0.8881,  1.8130, -0.6814, -0.1960, -0.3485, -0.7178, -0.2218,
          0.2064,  0.6205, -1.0350, -0.5409,  1.5633,  0.0153, -0.6742]],
       device='cuda:0') tensor(0.2956, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
159000 特征值优化 tensor(2.3425, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0614, -0.7420,  1.7137, -0.3451, -0.2385, -0.3072, -0.4047, -0.1487,
          0.2184,  0.6406, -0.6935, -0.5351,  1.5479, -0.1358, -0.6630]],
       device='cuda:0') tensor(0.2692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
160000 特征值优化 tensor(2.2557, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2779, -0.5322,  1.3927,  0.2622, -0.2428, -0.2849, -0.1561, -0.1030,
          0.2242,  0.6870, -0.4305, -0.5617,  1.6365, -0.2125, -0.6633]],
       device='cuda:0') tensor(0.2898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
161000 特征值优化 tensor(2.1923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5039, -0.3101,  1.0572,  0.9154, -0.2108, -0.2774, -0.0288, -0.1201,
          0.2223,  0.7199, -0.2214, -0.5917,  1.7290, -0.2482, -0.6662]],
       device='cuda:0') tensor(0.2973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
162000 特征值优化 tensor(2.1722, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6122e+00, -2.0001e-01,  8.8254e-01,  1.2606e+00, -2.1320e-01,
         -2.6057e-01,  5.3039e-04, -1.4637e-01,  2.2149e-01,  7.3559e-01,
         -1.1100e-01, -6.0077e-01,  1.7759e+00, -2.6721e-01, -6.5997e-01]],
       device='cuda:0') tensor(0.2995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
163000 正交保障 tensor(0.2950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6064, -0.1746,  0.8344,  1.3361, -0.2142, -0.2705, -0.0050, -0.1360,
          0.2209,  0.7413, -0.1236, -0.6028,  1.7905, -0.2665, -0.6613]],
       device='cuda:0') tensor(0.2950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
164000 特征值优化 tensor(2.1711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5808, -0.1616,  0.7947,  1.3572, -0.2142, -0.2740, -0.0049, -0.1297,
          0.2186,  0.7414, -0.1340, -0.6019,  1.7966, -0.2636, -0.6612]],
       device='cuda:0') tensor(0.3282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
165000 特征值优化 tensor(2.1710, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5334, -0.1547,  0.7709,  1.3474, -0.2116, -0.2720, -0.0051, -0.1284,
          0.2184,  0.7407, -0.1322, -0.6003,  1.7977, -0.2647, -0.6626]],
       device='cuda:0') tensor(0.2943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
166000 特征值优化 tensor(2.1498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3302, -0.1034,  0.6905,  1.3086, -0.1977, -0.3479,  0.0070, -0.1568,
          0.2178,  0.7431, -0.1498, -0.6017,  1.7990, -0.2597, -0.6691]],
       device='cuda:0') tensor(0.2763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
167000 特征值优化 tensor(4.2634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7145,  0.1783, -0.5122,  0.9447,  0.8051, -0.7032,  0.8677,  0.9201,
         -1.7245,  0.6672, -0.7275,  1.1888, -0.2107, -1.1522, -0.7115]],
       device='cuda:0') tensor(0.4544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
168000 特征值优化 tensor(2.1548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0281,  0.4924, -0.2283,  1.3105,  1.3173, -0.7713,  0.5337,  0.4737,
         -1.9317,  0.5621, -0.5589,  1.4037, -0.4178, -0.5698, -1.1080]],
       device='cuda:0') tensor(0.4356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
169000 特征值优化 tensor(1.8837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7827,  0.4043, -0.0684,  1.3048,  1.2912, -0.2721,  0.1909,  0.1090,
         -1.8632,  0.5040, -0.1520,  1.3491, -0.4571, -0.4254, -1.1205]],
       device='cuda:0') tensor(0.4473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
170000 特征值优化 tensor(1.7901, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3860,  0.3887,  0.0233,  1.3690,  1.2228, -0.0776,  0.0829,  0.0049,
         -1.7429,  0.4738, -0.0786,  1.2881, -0.4392, -0.3548, -1.1056]],
       device='cuda:0') tensor(0.4231, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
171000 特征值优化 tensor(1.7860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2213,  0.3852,  0.0255,  1.4080,  1.1278, -0.1146,  0.0889,  0.0061,
         -1.7111,  0.4689, -0.0702,  1.2797, -0.4397, -0.3187, -1.0893]],
       device='cuda:0') tensor(0.3873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
172000 特征值优化 tensor(1.7860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1987,  0.3958,  0.0239,  1.4140,  1.0594, -0.1209,  0.0924,  0.0055,
         -1.6925,  0.4648, -0.0710,  1.2692, -0.4349, -0.2960, -1.0717]],
       device='cuda:0') tensor(0.3999, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
173000 正交保障 tensor(0.3834, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2036,  0.3993,  0.0236,  1.4176,  1.0113, -0.1227,  0.0937,  0.0059,
         -1.6842,  0.4645, -0.0717,  1.2652, -0.4346, -0.2854, -1.0632]],
       device='cuda:0') tensor(0.3834, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
174000 特征值优化 tensor(1.7862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2011,  0.3978,  0.0224,  1.4194,  1.0061, -0.1226,  0.0936,  0.0060,
         -1.6842,  0.4663, -0.0717,  1.2650, -0.4315, -0.2857, -1.0637]],
       device='cuda:0') tensor(0.3627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
175000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2066,  0.3948,  0.0215,  1.4215,  0.9849, -0.1227,  0.0940,  0.0059,
         -1.6821,  0.4687, -0.0719,  1.2637, -0.4302, -0.2849, -1.0595]],
       device='cuda:0') tensor(0.3290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
176000 正交保障 tensor(0.3777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2042,  0.3957,  0.0210,  1.4216,  0.9760, -0.1237,  0.0937,  0.0057,
         -1.6816,  0.4679, -0.0724,  1.2623, -0.4286, -0.2801, -1.0551]],
       device='cuda:0') tensor(0.3777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
177000 特征值优化 tensor(1.7863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2038,  0.3991,  0.0221,  1.4183,  1.0012, -0.1231,  0.0942,  0.0067,
         -1.6819,  0.4674, -0.0724,  1.2653, -0.4334, -0.2843, -1.0621]],
       device='cuda:0') tensor(0.3866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
178000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2046,  0.3981,  0.0217,  1.4187,  0.9933, -0.1226,  0.0938,  0.0075,
         -1.6837,  0.4695, -0.0716,  1.2629, -0.4330, -0.2853, -1.0610]],
       device='cuda:0') tensor(0.3619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
179000 特征值优化 tensor(2.7199, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8067, -2.1597, -0.2268, -0.0311,  1.0208,  2.5203,  0.4169,  0.3645,
         -0.3750, -2.1070,  0.1469, -0.4905,  0.0334,  0.0311, -1.0578]],
       device='cuda:0') tensor(0.3970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
180000 特征值优化 tensor(1.3052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4619, -2.4656, -0.7423,  0.6101,  1.1479,  2.1988,  0.8740,  0.3791,
         -0.2704, -1.7783,  0.4162, -0.3735, -0.2198, -0.2929, -1.1425]],
       device='cuda:0') tensor(0.4331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
181000 特征值优化 tensor(1.2451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4075, -2.6992, -0.8067,  0.7131,  1.1888,  1.8209,  0.9243,  0.3342,
         -0.2586, -1.7724,  0.4318, -0.3411, -0.1357, -0.2940, -1.1506]],
       device='cuda:0') tensor(0.4004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
182000 特征值优化 tensor(1.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3930, -3.0223, -0.8973,  0.8084,  1.2736,  1.6107,  0.9962,  0.3366,
         -0.2431, -1.7699,  0.4578, -0.3272, -0.0547, -0.3059, -1.1697]],
       device='cuda:0') tensor(0.4639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
183000 正交保障 tensor(0.4232, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.2886e-01, -3.3100e+00, -1.0116e+00,  8.9416e-01,  1.2619e+00,
          1.4568e+00,  1.0693e+00,  3.3286e-01, -2.3683e-01, -1.7413e+00,
          4.6733e-01, -3.1864e-01, -3.2123e-03, -3.0130e-01, -1.1656e+00]],
       device='cuda:0') tensor(0.4232, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
184000 特征值优化 tensor(1.1654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4983, -3.5724, -1.1181,  0.9593,  1.2583,  1.3135,  1.1399,  0.3300,
         -0.2239, -1.7112,  0.4848, -0.3021,  0.0335, -0.3003, -1.1629]],
       device='cuda:0') tensor(0.4176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
185000 特征值优化 tensor(1.1498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6640, -3.8057, -1.2709,  1.0088,  1.2599,  1.1721,  1.1895,  0.2831,
         -0.2116, -1.6560,  0.5078, -0.3061,  0.0711, -0.2996, -1.1634]],
       device='cuda:0') tensor(0.4568, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
186000 特征值优化 tensor(1.1381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8110, -4.0243, -1.3846,  1.0832,  1.2741,  1.0805,  1.2207,  0.2479,
         -0.2045, -1.6070,  0.5492, -0.3105,  0.1004, -0.2927, -1.1647]],
       device='cuda:0') tensor(0.4436, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
187000 特征值优化 tensor(1.1310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8959, -4.1966, -1.4627,  1.1533,  1.2883,  1.0340,  1.2392,  0.2355,
         -0.1952, -1.5760,  0.5959, -0.3090,  0.1179, -0.2923, -1.1694]],
       device='cuda:0') tensor(0.4556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
188000 特征值优化 tensor(1.1257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9479, -4.3582, -1.5281,  1.2443,  1.2985,  1.0030,  1.2584,  0.2318,
         -0.1956, -1.5509,  0.6383, -0.3110,  0.1400, -0.2894, -1.1729]],
       device='cuda:0') tensor(0.4449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
189000 特征值优化 tensor(1.1217, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9650, -4.5071, -1.5857,  1.3446,  1.3051,  0.9735,  1.2694,  0.2283,
         -0.1883, -1.5353,  0.6852, -0.3090,  0.1588, -0.2885, -1.1730]],
       device='cuda:0') tensor(0.4321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
190000 特征值优化 tensor(1.1186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9718, -4.6425, -1.6341,  1.4632,  1.2979,  0.9464,  1.2778,  0.2310,
         -0.1891, -1.5185,  0.7271, -0.3133,  0.1783, -0.2855, -1.1717]],
       device='cuda:0') tensor(0.4238, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
191000 特征值优化 tensor(3.2096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2502,  0.5829, -0.2703,  0.6573, -0.3771,  0.0537,  0.1322, -0.0984,
         -0.6584, -0.8281, -0.0403,  1.6512, -0.8909,  0.6314, -0.5679]],
       device='cuda:0') tensor(0.2819, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
192000 特征值优化 tensor(1.8368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5937,  0.4470,  0.0427,  0.9217,  0.1679,  0.3186, -0.0918, -0.4049,
         -0.6421, -0.7840,  0.4998,  1.5967, -0.8439,  0.1675, -0.8846]],
       device='cuda:0') tensor(0.3063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
193000 特征值优化 tensor(1.5997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5039,  0.5046,  0.1710,  0.8393,  0.5354,  0.5527, -0.2276, -0.7037,
         -0.6648, -0.8028,  0.9418,  1.5736, -0.8231,  0.1433, -1.0159]],
       device='cuda:0') tensor(0.3318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
194000 特征值优化 tensor(1.5835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4011,  0.5487,  0.2960,  0.7235,  0.5849,  0.5764, -0.2445, -0.7618,
         -0.6842, -0.8206,  1.0932,  1.5472, -0.8010,  0.1558, -1.0327]],
       device='cuda:0') tensor(0.3343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
195000 特征值优化 tensor(1.5665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2663,  0.6365,  0.4503,  0.5920,  0.7110,  0.5054, -0.2823, -0.7091,
         -0.6833, -0.8269,  1.1395,  1.5193, -0.7853,  0.1938, -1.0700]],
       device='cuda:0') tensor(0.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
196000 正交保障 tensor(0.3991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1388,  0.7999,  0.6000,  0.3829,  0.7627,  0.4493, -0.3145, -0.6494,
         -0.6693, -0.8278,  1.1186,  1.4729, -0.7763,  0.2067, -1.0834]],
       device='cuda:0') tensor(0.3991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
197000 特征值优化 tensor(1.5428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0589,  1.0017,  0.7283,  0.1549,  0.7978,  0.4357, -0.3348, -0.6138,
         -0.6354, -0.8189,  1.0672,  1.4327, -0.7653,  0.2156, -1.0902]],
       device='cuda:0') tensor(0.3608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
198000 特征值优化 tensor(1.5332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0272,  1.1814,  0.8247, -0.0318,  0.8379,  0.4217, -0.3578, -0.5831,
         -0.6158, -0.8223,  1.0307,  1.3912, -0.7631,  0.2219, -1.1022]],
       device='cuda:0') tensor(0.3898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
199000 特征值优化 tensor(1.5244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0308,  1.3866,  0.8885, -0.1639,  0.8734,  0.4076, -0.3902, -0.5554,
         -0.5795, -0.8276,  1.0104,  1.3584, -0.7721,  0.2299, -1.1103]],
       device='cuda:0') tensor(0.3792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
200000 特征值优化 tensor(1.5181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0641,  1.5604,  0.9066, -0.2515,  0.8898,  0.3903, -0.4243, -0.5333,
         -0.5567, -0.8369,  0.9954,  1.3372, -0.7724,  0.2339, -1.1126]],
       device='cuda:0') tensor(0.3468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
201000 特征值优化 tensor(1.5142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1194,  1.7203,  0.9311, -0.2717,  0.8962,  0.3781, -0.4540, -0.5266,
         -0.5307, -0.8474,  0.9934,  1.3247, -0.7895,  0.2335, -1.1135]],
       device='cuda:0') tensor(0.3572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
202000 正交保障 tensor(0.3508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1988,  1.8894,  0.9241, -0.2496,  0.9206,  0.3749, -0.4882, -0.5228,
         -0.5099, -0.8635,  1.0008,  1.3110, -0.8027,  0.2494, -1.1186]],
       device='cuda:0') tensor(0.3508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
203000 特征值优化 tensor(1.5049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2997,  2.0365,  0.9136, -0.2061,  0.9344,  0.3678, -0.5151, -0.5170,
         -0.4963, -0.8878,  0.9945,  1.2996, -0.8215,  0.2515, -1.1229]],
       device='cuda:0') tensor(0.4036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
204000 特征值优化 tensor(6.3943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2569, -0.3235, -0.1444,  0.6233, -2.0293, -0.6675,  0.3720, -0.3947,
          1.1038, -0.1504,  0.5495, -1.1822, -0.7610,  0.8968, -0.4618]],
       device='cuda:0') tensor(0.3174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
205000 特征值优化 tensor(3.1529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2563,  0.2069, -0.4992,  1.0782, -1.0998, -0.1209, -0.0152, -0.0148,
          1.0585, -0.1504,  0.2052, -1.2209, -0.8039,  0.2577, -0.6195]],
       device='cuda:0') tensor(0.2658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
206000 特征值优化 tensor(2.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5308,  0.3855, -0.6541,  1.2355, -0.3651,  0.2521, -0.3001,  0.2806,
          1.0826, -0.1617,  0.5362, -1.2654, -0.8393,  0.0489, -0.7648]],
       device='cuda:0') tensor(0.2605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
207000 特征值优化 tensor(1.6441, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5314,  0.4300, -0.6958,  1.2173,  0.1783,  0.5054, -0.4704,  0.4487,
          1.1042, -0.1753,  0.8516, -1.2869, -0.8653, -0.0990, -0.9032]],
       device='cuda:0') tensor(0.3388, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
208000 特征值优化 tensor(1.4392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5595,  0.5272, -0.7868,  1.2320,  0.6682,  0.6484, -0.5675,  0.5660,
          1.1365, -0.1783,  0.9935, -1.3389, -0.8944, -0.1868, -1.0242]],
       device='cuda:0') tensor(0.3935, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
209000 特征值优化 tensor(1.3663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4398,  0.6778, -1.0147,  1.2984,  0.9396,  0.8423, -0.6556,  0.6946,
          1.1196, -0.1537,  1.0603, -1.3987, -0.9075, -0.2420, -1.0892]],
       device='cuda:0') tensor(0.4227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
210000 正交保障 tensor(0.4057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0303,  0.8143, -1.3238,  1.5153,  1.0452,  1.0167, -0.7059,  0.8085,
          1.0240, -0.1147,  1.0370, -1.4524, -0.9120, -0.2663, -1.1125]],
       device='cuda:0') tensor(0.4057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
211000 特征值优化 tensor(1.2743, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3740,  1.0086, -1.6699,  1.7887,  1.1594,  1.1581, -0.7547,  0.9036,
          0.9254, -0.0686,  0.9669, -1.5009, -0.9091, -0.2923, -1.1402]],
       device='cuda:0') tensor(0.4866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
212000 特征值优化 tensor(1.2389, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6770,  1.2219, -1.9781,  2.0124,  1.2856,  1.2667, -0.7865,  0.9784,
          0.8468, -0.0456,  0.9137, -1.5342, -0.8999, -0.3221, -1.1713]],
       device='cuda:0') tensor(0.3827, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
213000 特征值优化 tensor(1.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9810,  1.4358, -2.2883,  2.2120,  1.3145,  1.2942, -0.7997,  1.0146,
          0.7911, -0.0280,  0.8346, -1.5257, -0.8840, -0.3247, -1.1799]],
       device='cuda:0') tensor(0.4685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
214000 特征值优化 tensor(1.1841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2361,  1.7066, -2.5938,  2.3848,  1.2537,  1.2889, -0.7790,  1.0287,
          0.7295, -0.0210,  0.7205, -1.5015, -0.8512, -0.3016, -1.1622]],
       device='cuda:0') tensor(0.3876, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
215000 特征值优化 tensor(1.1689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3820,  1.9200, -2.7709,  2.4609,  1.2381,  1.2832, -0.7266,  1.0512,
          0.6902, -0.0078,  0.5880, -1.4823, -0.8257, -0.3014, -1.1580]],
       device='cuda:0') tensor(0.3835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
216000 特征值优化 tensor(1.1587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4902,  2.0860, -2.8728,  2.4827,  1.2382,  1.2966, -0.6625,  1.0867,
          0.6686,  0.0126,  0.4899, -1.4573, -0.8104, -0.3018, -1.1573]],
       device='cuda:0') tensor(0.3957, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
217000 特征值优化 tensor(1.1474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5918,  2.2744, -3.0021,  2.5091,  1.2471,  1.3169, -0.5873,  1.1106,
          0.6398,  0.0251,  0.4039, -1.4263, -0.7981, -0.2986, -1.1593]],
       device='cuda:0') tensor(0.4465, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
218000 特征值优化 tensor(1.1373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6881,  2.4469, -3.1609,  2.5552,  1.2575,  1.3529, -0.5363,  1.1083,
          0.6112,  0.0408,  0.3060, -1.3988, -0.7798, -0.2978, -1.1615]],
       device='cuda:0') tensor(0.4575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
219000 特征值优化 tensor(1.1299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7736,  2.5852, -3.3033,  2.5823,  1.2736,  1.4014, -0.4948,  1.0931,
          0.5878,  0.0504,  0.2395, -1.3656, -0.7730, -0.2944, -1.1643]],
       device='cuda:0') tensor(0.4726, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
220000 特征值优化 tensor(1.1242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8368,  2.6990, -3.4433,  2.6299,  1.2909,  1.4595, -0.4660,  1.0737,
          0.5665,  0.0641,  0.1904, -1.3394, -0.7695, -0.2931, -1.1683]],
       device='cuda:0') tensor(0.4593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
221000 特征值优化 tensor(1.1200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8781,  2.8038, -3.5690,  2.6874,  1.2958,  1.5187, -0.4535,  1.0526,
          0.5444,  0.0617,  0.1454, -1.3201, -0.7640, -0.2923, -1.1709]],
       device='cuda:0') tensor(0.4661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
222000 特征值优化 tensor(3.1049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3887, -0.3444,  1.4211,  1.9340,  1.2897, -0.7415, -0.5109, -0.4195,
          1.4833,  0.6151, -0.8387, -0.4103,  1.1230, -0.8800,  1.1659]],
       device='cuda:0') tensor(0.4343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
223000 特征值优化 tensor(1.7083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1514, -0.9607,  0.5867,  1.7756,  1.3337, -1.1419, -0.7019,  0.0794,
          1.4246,  0.8053, -0.4573, -0.1379,  1.1873, -0.3730,  1.2595]],
       device='cuda:0') tensor(0.4184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
224000 特征值优化 tensor(1.5587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2317, -1.2543,  0.2495,  1.6256,  1.0206, -1.1620, -0.6127,  0.2612,
          1.3485,  0.7907, -0.3363, -0.0829,  1.1431, -0.2672,  1.1558]],
       device='cuda:0') tensor(0.3873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
225000 特征值优化 tensor(1.5205, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5200, -1.4631,  0.0836,  1.6837,  0.8941, -1.1022, -0.5422,  0.3409,
          1.3182,  0.7711, -0.3033, -0.0771,  1.1194, -0.2457,  1.1150]],
       device='cuda:0') tensor(0.3906, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
226000 特征值优化 tensor(1.5131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6748, -1.6026,  0.0291,  1.8035,  0.9088, -1.1210, -0.5610,  0.3180,
          1.3034,  0.7407, -0.2764, -0.0912,  1.1265, -0.2453,  1.1186]],
       device='cuda:0') tensor(0.3815, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
227000 正交保障 tensor(0.3972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7778, -1.7545, -0.0332,  1.9536,  0.9188, -1.1375, -0.5874,  0.2952,
          1.2998,  0.7181, -0.2485, -0.1150,  1.1331, -0.2478,  1.1175]],
       device='cuda:0') tensor(0.3972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
228000 特征值优化 tensor(1.5037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8151, -1.8732, -0.0967,  2.0833,  0.9276, -1.1365, -0.6050,  0.2680,
          1.2929,  0.7015, -0.2241, -0.1349,  1.1446, -0.2479,  1.1189]],
       device='cuda:0') tensor(0.3951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
229000 特征值优化 tensor(1.5005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8456, -1.9732, -0.1647,  2.2308,  0.9469, -1.1347, -0.6182,  0.2442,
          1.2947,  0.6881, -0.1966, -0.1487,  1.1546, -0.2514,  1.1231]],
       device='cuda:0') tensor(0.3976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
230000 特征值优化 tensor(1.4985, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8454, -2.0625, -0.2137,  2.3454,  0.9533, -1.1342, -0.6288,  0.2301,
          1.3021,  0.6751, -0.1769, -0.1682,  1.1585, -0.2514,  1.1255]],
       device='cuda:0') tensor(0.3858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
231000 特征值优化 tensor(1.4971, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8296, -2.1348, -0.2595,  2.4600,  0.9540, -1.1362, -0.6392,  0.2196,
          1.3063,  0.6674, -0.1620, -0.1810,  1.1669, -0.2511,  1.1256]],
       device='cuda:0') tensor(0.3704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
232000 特征值优化 tensor(1.4961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8123, -2.1797, -0.3025,  2.5487,  0.9580, -1.1376, -0.6471,  0.2143,
          1.3068,  0.6606, -0.1546, -0.1945,  1.1764, -0.2527,  1.1237]],
       device='cuda:0') tensor(0.3909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
233000 特征值优化 tensor(1.4950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7907, -2.2413, -0.3531,  2.6418,  0.9611, -1.1372, -0.6605,  0.2016,
          1.3082,  0.6579, -0.1430, -0.2040,  1.1854, -0.2522,  1.1217]],
       device='cuda:0') tensor(0.3555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
234000 特征值优化 tensor(1.9027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9209, -0.4928, -1.8773,  0.5204,  0.2380,  0.4829,  0.1049,  0.5820,
          0.3235, -1.6918,  0.3477, -0.6380,  0.0229,  0.3578, -0.8765]],
       device='cuda:0') tensor(0.3317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
235000 特征值优化 tensor(1.5337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9739, -0.6234, -1.9596,  0.4124,  0.6746,  0.7755,  0.1118,  0.7449,
          0.3325, -1.7193,  0.4742, -0.6470,  0.0402,  0.1782, -1.0500]],
       device='cuda:0') tensor(0.4100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
236000 正交保障 tensor(0.4014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0395, -0.6966, -2.0816,  0.3630,  0.8718,  0.8138,  0.1242,  0.7570,
          0.3452, -1.7373,  0.4912, -0.6384,  0.0545,  0.2299, -1.1075]],
       device='cuda:0') tensor(0.4014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
237000 特征值优化 tensor(1.5032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1125, -0.7773, -2.1978,  0.3169,  0.9237,  0.8322,  0.1348,  0.7765,
          0.3530, -1.7442,  0.5127, -0.6222,  0.0696,  0.2470, -1.1166]],
       device='cuda:0') tensor(0.4011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
238000 正交保障 tensor(0.3919, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1920, -0.8436, -2.3186,  0.2921,  0.9352,  0.8163,  0.1507,  0.7946,
          0.3606, -1.7455,  0.5227, -0.6098,  0.0830,  0.2482, -1.1199]],
       device='cuda:0') tensor(0.3919, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
239000 特征值优化 tensor(1.4984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2885, -0.8879, -2.3914,  0.2874,  0.9518,  0.7945,  0.1605,  0.8034,
          0.3645, -1.7522,  0.5299, -0.5988,  0.0926,  0.2498, -1.1236]],
       device='cuda:0') tensor(0.3308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
240000 正交保障 tensor(0.3968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3820, -0.9264, -2.4536,  0.2981,  0.9538,  0.7764,  0.1688,  0.8111,
          0.3668, -1.7590,  0.5344, -0.5884,  0.0982,  0.2503, -1.1223]],
       device='cuda:0') tensor(0.3968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
241000 特征值优化 tensor(1.4961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4771, -0.9677, -2.5088,  0.3037,  0.9558,  0.7575,  0.1744,  0.8190,
          0.3692, -1.7681,  0.5402, -0.5785,  0.1029,  0.2511, -1.1234]],
       device='cuda:0') tensor(0.3824, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
242000 特征值优化 tensor(1.4952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5663, -1.0045, -2.5583,  0.3036,  0.9596,  0.7427,  0.1837,  0.8238,
          0.3762, -1.7719,  0.5432, -0.5717,  0.1103,  0.2520, -1.1221]],
       device='cuda:0') tensor(0.3892, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
243000 正交保障 tensor(0.3354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6435, -1.0394, -2.6030,  0.3096,  0.9556,  0.7283,  0.1901,  0.8298,
          0.3815, -1.7742,  0.5464, -0.5643,  0.1165,  0.2507, -1.1180]],
       device='cuda:0') tensor(0.3354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
244000 特征值优化 tensor(1.4934, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7411, -1.0719, -2.6641,  0.3227,  0.9615,  0.7111,  0.1977,  0.8409,
          0.3866, -1.7840,  0.5520, -0.5573,  0.1229,  0.2508, -1.1226]],
       device='cuda:0') tensor(0.3728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
245000 特征值优化 tensor(1.4926, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8253, -1.1050, -2.7088,  0.3297,  0.9615,  0.6981,  0.2040,  0.8505,
          0.3906, -1.7897,  0.5471, -0.5524,  0.1277,  0.2510, -1.1220]],
       device='cuda:0') tensor(0.3726, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
246000 正交保障 tensor(0.3423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6453, -0.0366, -1.8885,  0.8607,  0.5939,  0.3090,  0.1375,  0.5531,
         -0.1389,  0.5353,  0.8416,  1.7397,  0.2196, -0.2457, -0.9820]],
       device='cuda:0') tensor(0.3423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
247000 特征值优化 tensor(1.3080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5914, -0.1684, -2.1861,  0.8962,  0.9970,  0.4249,  0.0875,  0.7570,
         -0.1287,  0.4575,  1.0421,  1.8329,  0.2338, -0.2484, -1.0999]],
       device='cuda:0') tensor(0.3709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
248000 特征值优化 tensor(1.2541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4912, -0.2632, -2.6318,  0.8724,  1.0962,  0.5208,  0.0802,  0.9529,
         -0.1234,  0.3823,  1.2147,  1.8715,  0.2307, -0.2718, -1.1249]],
       device='cuda:0') tensor(0.4195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
249000 特征值优化 tensor(1.2171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4211, -0.3385, -3.0526,  0.8395,  1.2019,  0.5976,  0.0864,  1.0909,
         -0.1273,  0.3173,  1.2653,  1.8654,  0.2305, -0.2968, -1.1513]],
       device='cuda:0') tensor(0.3931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
250000 特征值优化 tensor(1.1914, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3524, -0.4019, -3.4078,  0.7827,  1.2458,  0.6614,  0.0922,  1.1976,
         -0.1304,  0.2760,  1.2418,  1.8355,  0.2278, -0.3056, -1.1601]],
       device='cuda:0') tensor(0.4144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
251000 特征值优化 tensor(1.1750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3205, -0.4369, -3.6936,  0.6658,  1.2354,  0.6877,  0.1064,  1.2557,
         -0.1349,  0.2447,  1.1693,  1.7946,  0.2341, -0.3038, -1.1568]],
       device='cuda:0') tensor(0.4056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
252000 正交保障 tensor(0.4030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3117, -0.4425, -3.9039,  0.5218,  1.2346,  0.7038,  0.1251,  1.2773,
         -0.1417,  0.2164,  1.0662,  1.7534,  0.2387, -0.3033, -1.1564]],
       device='cuda:0') tensor(0.4030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
253000 正交保障 tensor(0.4455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3083, -0.4220, -4.0477,  0.3589,  1.2414,  0.7279,  0.1478,  1.2886,
         -0.1522,  0.1950,  0.9568,  1.7139,  0.2433, -0.3045, -1.1575]],
       device='cuda:0') tensor(0.4455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
254000 正交保障 tensor(0.4450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2992, -0.3837, -4.2423,  0.1412,  1.2534,  0.7794,  0.1817,  1.2762,
         -0.1657,  0.1774,  0.8299,  1.6537,  0.2471, -0.3007, -1.1602]],
       device='cuda:0') tensor(0.4450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
255000 正交保障 tensor(0.5068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2940, -0.3458, -4.4604, -0.0412,  1.2779,  0.8494,  0.2094,  1.2729,
         -0.1755,  0.1569,  0.7480,  1.5950,  0.2533, -0.2898, -1.1666]],
       device='cuda:0') tensor(0.5068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
256000 特征值优化 tensor(1.1274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3338, -0.3450, -4.6555, -0.1060,  1.2933,  0.9114,  0.2258,  1.2617,
         -0.1808,  0.1407,  0.7128,  1.5605,  0.2586, -0.2881, -1.1724]],
       device='cuda:0') tensor(0.4636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
257000 特征值优化 tensor(1.1228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4076, -0.3697, -4.8336, -0.1156,  1.2973,  0.9641,  0.2197,  1.2687,
         -0.1916,  0.1170,  0.6822,  1.5429,  0.2619, -0.2857, -1.1721]],
       device='cuda:0') tensor(0.4601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
258000 特征值优化 tensor(5.1267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7769, -1.2448, -0.8256, -1.7293,  2.4347, -0.5483, -1.2521,  1.0365,
          0.0224, -0.9740, -1.0906, -0.4438, -1.5173, -0.7733, -0.5788]],
       device='cuda:0') tensor(0.3914, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
259000 特征值优化 tensor(2.1312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6207, -1.1596, -0.9648, -1.7726,  1.8456, -0.5806, -0.8244,  0.5744,
         -0.1159, -1.0873, -0.9269, -0.4195, -1.7005, -0.3977, -1.2149]],
       device='cuda:0') tensor(0.4583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
260000 特征值优化 tensor(1.9001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5263, -0.9469, -0.9361, -1.2385,  1.8104, -0.2832, -0.4154,  0.2391,
         -0.2070, -0.9766, -0.3804, -0.3438, -1.6947, -0.3624, -1.2778]],
       device='cuda:0') tensor(0.4417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
261000 特征值优化 tensor(1.8332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5085, -0.7761, -0.6657, -0.7261,  1.8537, -0.1424, -0.1987,  0.1435,
         -0.1827, -0.9729, -0.1160, -0.3668, -1.7516, -0.4248, -1.2919]],
       device='cuda:0') tensor(0.4932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
262000 特征值优化 tensor(1.7880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6651, -0.5327, -0.4893, -0.1983,  1.9432, -0.0865, -0.0985,  0.1103,
         -0.1873, -1.0076,  0.0611, -0.3846, -1.8459, -0.4825, -1.3140]],
       device='cuda:0') tensor(0.3763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
263000 特征值优化 tensor(1.6766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0082, -0.0725, -0.3774,  0.5422,  2.1319, -0.0380,  0.0067,  0.0944,
         -0.2189, -1.0830,  0.3066, -0.3989, -1.9728, -0.5433, -1.3670]],
       device='cuda:0') tensor(0.4604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
264000 特征值优化 tensor(1.6618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1384,  0.0856, -0.4131,  0.6782,  2.3112, -0.0638, -0.0340,  0.1042,
         -0.2335, -1.1271,  0.2831, -0.4036, -2.0303, -0.5882, -1.4152]],
       device='cuda:0') tensor(0.3870, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
265000 特征值优化 tensor(1.6535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2376,  0.2070, -0.4749,  0.6802,  2.5003, -0.0742, -0.0597,  0.1185,
         -0.2481, -1.1554,  0.2953, -0.4088, -2.0581, -0.6356, -1.4730]],
       device='cuda:0') tensor(0.4408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
266000 特征值优化 tensor(1.6457, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3464,  0.3097, -0.5271,  0.6901,  2.7202, -0.0905, -0.0821,  0.1305,
         -0.2563, -1.1780,  0.3152, -0.4129, -2.0913, -0.6897, -1.5346]],
       device='cuda:0') tensor(0.4960, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
267000 特征值优化 tensor(1.6404, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4404,  0.3934, -0.5749,  0.6958,  2.8919, -0.0937, -0.0994,  0.1424,
         -0.2621, -1.1951,  0.3351, -0.4156, -2.1177, -0.7329, -1.5788]],
       device='cuda:0') tensor(0.4443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
268000 特征值优化 tensor(1.6366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5004,  0.4567, -0.6128,  0.6759,  3.0112, -0.0963, -0.1122,  0.1525,
         -0.2674, -1.2056,  0.3571, -0.4175, -2.1333, -0.7624, -1.6087]],
       device='cuda:0') tensor(0.5576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
269000 正交保障 tensor(0.4639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5582,  0.5070, -0.6341,  0.6879,  3.1407, -0.0972, -0.1243,  0.1559,
         -0.2707, -1.2181,  0.3677, -0.4183, -2.1528, -0.7946, -1.6437]],
       device='cuda:0') tensor(0.4639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
270000 特征值优化 tensor(4.9705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2118, -0.0032,  1.3374, -0.1651, -0.9470,  0.8390, -0.1812,  2.0946,
          0.8003,  0.0743, -1.3303,  2.1736, -0.4479, -0.0319, -0.5438]],
       device='cuda:0') tensor(0.2697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
271000 特征值优化 tensor(2.6183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7604e+00, -4.1608e-01,  1.6815e+00,  2.2229e-01, -3.0883e-01,
          1.5545e-01, -2.0088e-01,  1.4697e+00,  5.9361e-01, -2.2390e-01,
         -1.6651e+00,  1.9763e+00, -2.5951e-01,  1.2654e-03, -6.6727e-01]],
       device='cuda:0') tensor(0.3150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
272000 特征值优化 tensor(2.3769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7472, -0.3452,  1.5087,  0.3381,  0.1229,  0.0895, -0.1408,  1.1939,
          0.6054, -0.2552, -1.3597,  2.0353, -0.2589,  0.0111, -0.7850]],
       device='cuda:0') tensor(0.3325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
273000 特征值优化 tensor(2.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6685e+00, -3.0661e-01,  1.2470e+00,  3.9859e-01,  4.1664e-01,
          8.3017e-02, -6.3305e-02,  8.7994e-01,  5.8855e-01, -2.5972e-01,
         -9.1973e-01,  2.0120e+00, -2.5752e-01, -4.8259e-04, -8.7979e-01]],
       device='cuda:0') tensor(0.3503, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
274000 正交保障 tensor(0.3195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5971, -0.3574,  0.9880,  0.3762,  0.5719,  0.0621, -0.0073,  0.4781,
          0.5636, -0.2586, -0.4376,  1.9328, -0.2455, -0.1505, -0.9325]],
       device='cuda:0') tensor(0.3195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
275000 特征值优化 tensor(1.8352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5890, -0.2215,  0.6081,  0.6871,  0.9166, -0.0056, -0.0542,  0.1395,
          0.5741, -0.3100, -0.2158,  2.0213, -0.2441, -0.2464, -1.0320]],
       device='cuda:0') tensor(0.3765, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
276000 特征值优化 tensor(1.7889, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6121, -0.2207,  0.2022,  0.9412,  1.0531, -0.0183, -0.0464,  0.0337,
          0.5851, -0.3513, -0.1619,  2.0746, -0.2438, -0.2931, -1.0745]],
       device='cuda:0') tensor(0.3840, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
277000 特征值优化 tensor(1.7861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6440, -0.2264,  0.1066,  0.9582,  1.0357, -0.0184, -0.0509,  0.0238,
          0.5834, -0.3536, -0.1732,  2.0786, -0.2408, -0.2901, -1.0689]],
       device='cuda:0') tensor(0.4263, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
278000 正交保障 tensor(0.4083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6459, -0.2204,  0.1015,  0.9757,  1.0019, -0.0186, -0.0522,  0.0238,
          0.5825, -0.3531, -0.1765,  2.0788, -0.2422, -0.2847, -1.0634]],
       device='cuda:0') tensor(0.4083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
279000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6473, -0.2191,  0.0995,  0.9810,  0.9881, -0.0176, -0.0517,  0.0235,
          0.5797, -0.3512, -0.1767,  2.0775, -0.2421, -0.2849, -1.0600]],
       device='cuda:0') tensor(0.3709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
280000 正交保障 tensor(0.3739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6461, -0.2171,  0.0985,  0.9741,  0.9892, -0.0180, -0.0517,  0.0234,
          0.5748, -0.3464, -0.1779,  2.0789, -0.2396, -0.2809, -1.0578]],
       device='cuda:0') tensor(0.3739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
281000 特征值优化 tensor(1.7863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6486, -0.2175,  0.0985,  0.9764,  0.9976, -0.0178, -0.0512,  0.0235,
          0.5757, -0.3478, -0.1767,  2.0806, -0.2392, -0.2856, -1.0599]],
       device='cuda:0') tensor(0.3471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
282000 特征值优化 tensor(2.4913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6185,  0.2397, -0.4440,  0.7685, -0.3368, -0.5912, -0.2809,  0.0135,
         -2.0870, -0.2263,  0.1468,  0.0270,  0.7959, -0.2996, -0.6538]],
       device='cuda:0') tensor(0.2991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
283000 正交保障 tensor(0.3195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7934,  0.2065, -0.5737,  1.1381,  0.1399, -0.2737, -0.0595, -0.0597,
         -1.9717, -0.1940,  0.0080,  0.0126,  0.7800, -0.2457, -0.8374]],
       device='cuda:0') tensor(0.3195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
284000 正交保障 tensor(0.3371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8390,  0.1519, -0.4823,  1.2984,  0.4821, -0.0339, -0.0382,  0.1181,
         -2.0071, -0.1971,  0.1091,  0.0141,  0.8214, -0.3055, -0.9319]],
       device='cuda:0') tensor(0.3371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
285000 特征值优化 tensor(1.7380, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9067,  0.1799, -0.5572,  1.2550,  0.7399, -0.0442, -0.0442,  0.1354,
         -2.0393, -0.1993,  0.1314,  0.0149,  0.8292, -0.2852, -0.9996]],
       device='cuda:0') tensor(0.3554, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
286000 正交保障 tensor(0.3582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9947,  0.1954, -0.5936,  1.2125,  0.9956, -0.0620, -0.0476,  0.1428,
         -2.0801, -0.2000,  0.1476,  0.0140,  0.8386, -0.2965, -1.0685]],
       device='cuda:0') tensor(0.3582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
287000 特征值优化 tensor(1.7045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0490,  0.2175, -0.6504,  1.1513,  1.2951, -0.0666, -0.0537,  0.1572,
         -2.1196, -0.1983,  0.1742,  0.0151,  0.8475, -0.3381, -1.1401]],
       device='cuda:0') tensor(0.3694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
288000 特征值优化 tensor(1.6827, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1917,  0.2605, -0.7646,  1.0182,  1.6379, -0.0904, -0.0635,  0.1830,
         -2.1617, -0.1987,  0.2236,  0.0147,  0.8563, -0.4219, -1.2434]],
       device='cuda:0') tensor(0.3658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
289000 特征值优化 tensor(1.6653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4234,  0.2799, -0.8235,  0.9305,  2.0050, -0.1214, -0.0689,  0.1933,
         -2.2258, -0.1999,  0.2701,  0.0147,  0.8687, -0.5135, -1.3428]],
       device='cuda:0') tensor(0.4427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
290000 特征值优化 tensor(1.6537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6239,  0.2853, -0.8517,  0.8410,  2.2939, -0.1392, -0.0715,  0.2058,
         -2.2789, -0.2018,  0.3067,  0.0117,  0.8767, -0.5829, -1.4242]],
       device='cuda:0') tensor(0.4362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
291000 特征值优化 tensor(1.6456, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7706,  0.3026, -0.8955,  0.7911,  2.5353, -0.1439, -0.0750,  0.2237,
         -2.3187, -0.2013,  0.3473,  0.0131,  0.8831, -0.6435, -1.4880]],
       device='cuda:0') tensor(0.4894, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
292000 特征值优化 tensor(1.6396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9180,  0.3171, -0.9254,  0.7379,  2.7283, -0.1388, -0.0773,  0.2338,
         -2.3531, -0.2004,  0.3726,  0.0143,  0.8863, -0.6912, -1.5353]],
       device='cuda:0') tensor(0.4829, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
293000 特征值优化 tensor(1.6340, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0631,  0.3232, -0.9500,  0.6923,  2.9387, -0.1304, -0.0790,  0.2427,
         -2.3906, -0.2012,  0.3846,  0.0148,  0.8922, -0.7447, -1.5908]],
       device='cuda:0') tensor(0.5296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
294000 正交保障 tensor(0.4875, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2430,  0.3300, -0.9557,  0.6247,  3.1036, -0.1033, -0.0811,  0.2572,
         -2.4275, -0.2024,  0.4012,  0.0159,  0.8947, -0.7847, -1.6313]],
       device='cuda:0') tensor(0.4875, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
295000 特征值优化 tensor(1.6255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3989,  0.3334, -0.9521,  0.6112,  3.2409, -0.0618, -0.0792,  0.2625,
         -2.4626, -0.2043,  0.4022,  0.0155,  0.8980, -0.8203, -1.6664]],
       device='cuda:0') tensor(0.5857, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
296000 特征值优化 tensor(2.7346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7888e-01, -1.4054e+00,  1.4392e+00, -2.0486e+00,  3.1351e-01,
         -5.0282e-01, -1.2509e-01,  6.5378e-01,  1.6584e+00, -2.9026e-01,
         -4.0536e-01, -9.3501e-01,  9.7464e-02,  1.9466e-04,  4.8739e-06]],
       device='cuda:0') tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
297000 特征值优化 tensor(2.0796, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.1460e-01, -1.7533e+00,  1.9281e+00, -2.3243e+00,  1.0487e+00,
         -4.9227e-01, -2.4146e-01,  8.1568e-01,  1.7647e+00, -2.6284e-01,
         -5.9640e-01, -9.5162e-01,  1.6023e-01,  8.2520e-05, -5.4489e-05]],
       device='cuda:0') tensor(0.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
298000 特征值优化 tensor(1.8386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-4.7152e-01, -1.9345e+00,  2.2660e+00, -2.5086e+00,  1.5146e+00,
         -2.8179e-01, -3.8456e-01,  6.9445e-01,  1.7569e+00, -2.5131e-01,
         -6.2305e-01, -9.4264e-01,  1.6885e-01, -1.2991e-03,  3.7211e-03]],
       device='cuda:0') tensor(0.2815, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
299000 特征值优化 tensor(1.7208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6352, -2.1338,  2.5296, -2.8147,  1.8749, -0.2267, -0.4852,  0.6731,
          1.7155, -0.2498, -0.7055, -0.9248,  0.1668, -0.0580,  0.1146]],
       device='cuda:0') tensor(0.3219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
300000 特征值优化 tensor(1.6452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7067, -2.2239,  2.6270, -2.9534,  2.2633, -0.2130, -0.5327,  0.6839,
          1.7127, -0.2528, -0.7452, -0.9266,  0.1596, -0.1401,  0.2191]],
       device='cuda:0') tensor(0.3372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
301000 特征值优化 tensor(1.6180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8531, -2.1770,  2.5962, -3.0385,  2.5047, -0.2285, -0.5381,  0.6659,
          1.7045, -0.2488, -0.7626, -0.9263,  0.1637, -0.1801,  0.2903]],
       device='cuda:0') tensor(0.3350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
302000 特征值优化 tensor(1.6105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9643, -2.1326,  2.5639, -3.1063,  2.6373, -0.2378, -0.5321,  0.6520,
          1.6927, -0.2454, -0.7707, -0.9227,  0.1699, -0.2061,  0.3288]],
       device='cuda:0') tensor(0.3388, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
303000 特征值优化 tensor(1.6088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0441, -2.1025,  2.5481, -3.1567,  2.6794, -0.2553, -0.5273,  0.6464,
          1.6826, -0.2416, -0.7817, -0.9163,  0.1742, -0.2144,  0.3415]],
       device='cuda:0') tensor(0.3417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
304000 特征值优化 tensor(1.6081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1290, -2.0569,  2.5292, -3.1921,  2.6684, -0.2716, -0.5164,  0.6417,
          1.6623, -0.2344, -0.7870, -0.9032,  0.1829, -0.2082,  0.3405]],
       device='cuda:0') tensor(0.3616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
305000 特征值优化 tensor(1.6075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2121, -2.0231,  2.5137, -3.2377,  2.6659, -0.2916, -0.5085,  0.6380,
          1.6453, -0.2295, -0.7973, -0.8939,  0.1880, -0.2054,  0.3386]],
       device='cuda:0') tensor(0.3519, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
306000 特征值优化 tensor(1.6051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3539, -1.9686,  2.4874, -3.3228,  2.6765, -0.3263, -0.4944,  0.6304,
          1.6143, -0.2181, -0.8157, -0.8773,  0.1975, -0.2049,  0.3407]],
       device='cuda:0') tensor(0.3629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
307000 特征值优化 tensor(1.5653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7510, -1.7460,  2.3180, -3.5024,  2.7933, -0.4215, -0.4368,  0.5864,
          1.5671, -0.1874, -0.8585, -0.8434,  0.2412, -0.0976,  0.3700]],
       device='cuda:0') tensor(0.3751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
308000 特征值优化 tensor(1.5604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8526, -1.7050,  2.3082, -3.5772,  2.8836, -0.4319, -0.4357,  0.5899,
          1.5495, -0.1812, -0.8744, -0.8284,  0.2464, -0.1023,  0.3940]],
       device='cuda:0') tensor(0.3771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
309000 正交保障 tensor(0.4792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9205,  1.2542, -1.2094,  2.3061,  0.7826, -1.3122,  1.0660, -0.3634,
          1.1631, -0.4408, -1.0327, -1.3566,  0.2853, -0.6186,  1.0648]],
       device='cuda:0') tensor(0.4792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
310000 特征值优化 tensor(1.5112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1310,  1.3014, -1.5003,  2.1730,  0.8497, -1.3782,  1.0935, -0.4537,
          1.1015, -0.3789, -0.9994, -1.4285,  0.3260, -0.2666,  1.0960]],
       device='cuda:0') tensor(0.4273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
311000 特征值优化 tensor(1.4964, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2757,  1.4485, -1.6768,  2.1105,  0.8730, -1.4237,  1.0931, -0.5041,
          1.0719, -0.3685, -0.9505, -1.4149,  0.3302, -0.2461,  1.1001]],
       device='cuda:0') tensor(0.4286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
312000 特征值优化 tensor(1.4860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4420,  1.6121, -1.8008,  2.0370,  0.8887, -1.4386,  1.0647, -0.5299,
          1.0412, -0.3537, -0.8759, -1.3869,  0.3320, -0.2489,  1.1018]],
       device='cuda:0') tensor(0.4142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
313000 特征值优化 tensor(1.4741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6330,  1.7920, -1.9118,  1.9380,  0.8913, -1.4217,  0.9915, -0.5415,
          1.0071, -0.3371, -0.7750, -1.3454,  0.3307, -0.2511,  1.0993]],
       device='cuda:0') tensor(0.4114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
314000 正交保障 tensor(0.4242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8222,  2.0139, -2.0315,  1.8265,  0.9085, -1.3990,  0.8953, -0.5575,
          0.9659, -0.3202, -0.6475, -1.2964,  0.3269, -0.2526,  1.1028]],
       device='cuda:0') tensor(0.4242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
315000 特征值优化 tensor(1.4501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0019,  2.2038, -2.1561,  1.7494,  0.9281, -1.4069,  0.8427, -0.5909,
          0.9387, -0.2926, -0.5673, -1.2510,  0.3269, -0.2566,  1.1038]],
       device='cuda:0') tensor(0.4403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
316000 特征值优化 tensor(1.4432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1530,  2.3691, -2.2683,  1.7189,  0.9421, -1.4391,  0.8046, -0.6183,
          0.9113, -0.2802, -0.5241, -1.2077,  0.3275, -0.2584,  1.1074]],
       device='cuda:0') tensor(0.3735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
317000 正交保障 tensor(0.3566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2665,  2.4948, -2.3685,  1.7312,  0.9518, -1.4945,  0.7971, -0.6364,
          0.8905, -0.2671, -0.5100, -1.1813,  0.3248, -0.2574,  1.1102]],
       device='cuda:0') tensor(0.3566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
318000 特征值优化 tensor(1.4354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3518,  2.6065, -2.4486,  1.7408,  0.9579, -1.5253,  0.7898, -0.6494,
          0.8735, -0.2574, -0.4974, -1.1554,  0.3253, -0.2576,  1.1110]],
       device='cuda:0') tensor(0.4453, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
319000 特征值优化 tensor(1.4335, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4116,  2.6993, -2.5120,  1.7469,  0.9475, -1.5569,  0.7822, -0.6613,
          0.8604, -0.2475, -0.4909, -1.1323,  0.3299, -0.2547,  1.1067]],
       device='cuda:0') tensor(0.3767, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
320000 特征值优化 tensor(1.4320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4478,  2.7750, -2.5687,  1.7940,  0.9537, -1.5825,  0.7735, -0.6791,
          0.8502, -0.2402, -0.4813, -1.1222,  0.3344, -0.2563,  1.1089]],
       device='cuda:0') tensor(0.3894, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
321000 特征值优化 tensor(3.5267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2952, -0.8277, -1.3178,  0.2278,  2.3416,  1.9046, -0.5217,  0.3477,
         -1.2501,  1.4526, -0.0339, -0.3972,  0.9433,  1.2132, -1.3959]],
       device='cuda:0') tensor(0.4835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
322000 特征值优化 tensor(2.1274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5570, -0.5437, -1.7457,  0.7966,  2.3488,  1.7919, -0.1301,  0.6544,
         -1.3378,  1.4652,  0.3640, -0.2455,  0.8964,  0.7356, -1.5565]],
       device='cuda:0') tensor(0.5366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
323000 特征值优化 tensor(1.6820, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3268, -0.2559, -1.9960,  0.8748,  1.5816,  1.3181,  0.0085,  0.7197,
         -1.2955,  1.4233,  0.4087, -0.2226,  0.7749,  0.4050, -1.3348]],
       device='cuda:0') tensor(0.3785, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
324000 特征值优化 tensor(1.5156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0508, -0.0316, -2.2587,  0.8442,  1.0423,  1.0063,  0.1554,  0.7362,
         -1.2375,  1.3610,  0.3775, -0.1785,  0.6674,  0.2725, -1.1541]],
       device='cuda:0') tensor(0.3806, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
325000 特征值优化 tensor(1.5005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9503,  0.0458, -2.4398,  0.8512,  0.9400,  0.9191,  0.1938,  0.7412,
         -1.2159,  1.3403,  0.3912, -0.1716,  0.6362,  0.2508, -1.1218]],
       device='cuda:0') tensor(0.3675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
326000 正交保障 tensor(0.3741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9854,  0.0549, -2.5638,  0.8603,  0.9442,  0.8945,  0.1862,  0.7626,
         -1.2100,  1.3405,  0.3940, -0.1800,  0.6307,  0.2481, -1.1247]],
       device='cuda:0') tensor(0.3741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
327000 特征值优化 tensor(1.4964, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0557,  0.0658, -2.6688,  0.8718,  0.9514,  0.8814,  0.1804,  0.7803,
         -1.2067,  1.3465,  0.4019, -0.1867,  0.6225,  0.2496, -1.1247]],
       device='cuda:0') tensor(0.3841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
328000 特征值优化 tensor(1.4952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1415,  0.0810, -2.7540,  0.8883,  0.9525,  0.8693,  0.1761,  0.7921,
         -1.2098,  1.3530,  0.4049, -0.1968,  0.6160,  0.2494, -1.1243]],
       device='cuda:0') tensor(0.3735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
329000 特征值优化 tensor(1.4939, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2250,  0.1067, -2.8473,  0.9186,  0.9529,  0.8553,  0.1701,  0.8064,
         -1.2077,  1.3614,  0.4068, -0.2103,  0.6103,  0.2499, -1.1253]],
       device='cuda:0') tensor(0.3789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
330000 特征值优化 tensor(1.4930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3063,  0.1227, -2.9207,  0.9503,  0.9546,  0.8417,  0.1673,  0.8202,
         -1.2061,  1.3707,  0.4074, -0.2237,  0.6073,  0.2518, -1.1231]],
       device='cuda:0') tensor(0.3502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
331000 正交保障 tensor(0.4210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3913,  0.1343, -3.0033,  0.9828,  0.9569,  0.8285,  0.1623,  0.8348,
         -1.2070,  1.3807,  0.4072, -0.2323,  0.5973,  0.2503, -1.1238]],
       device='cuda:0') tensor(0.4210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
332000 特征值优化 tensor(5.3408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1418,  1.7197, -1.1995, -0.1185,  2.2081, -0.8416, -0.6654, -0.0086,
          0.6659,  0.1287, -2.1226,  0.2531,  1.4035, -0.2882,  0.3081]],
       device='cuda:0') tensor(0.3743, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
333000 特征值优化 tensor(2.1663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5104,  2.4937, -1.9562, -0.8213,  2.0504, -0.2663, -0.6138, -0.3309,
          1.2646,  0.6984, -1.7361,  0.6458,  1.9031, -0.1669,  0.1304]],
       device='cuda:0') tensor(0.3402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
334000 特征值优化 tensor(1.9673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5078,  2.4448, -2.2295, -0.9933,  2.2897,  0.0053, -0.1831, -0.4681,
          1.2654,  0.7782, -1.5189,  0.7012,  1.8686, -0.2257,  0.1844]],
       device='cuda:0') tensor(0.3392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
335000 特征值优化 tensor(1.8361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5666,  2.4820, -2.5325, -1.2790,  2.5156,  0.1449,  0.1290, -0.5982,
          1.2325,  0.8143, -1.2437,  0.7423,  1.8306, -0.3572,  0.2606]],
       device='cuda:0') tensor(0.3793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
336000 特征值优化 tensor(1.7462, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6243,  2.5662, -2.7847, -1.5796,  2.6815,  0.2285,  0.3733, -0.7115,
          1.2078,  0.8208, -0.9694,  0.7437,  1.7950, -0.4421,  0.3032]],
       device='cuda:0') tensor(0.3863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
337000 特征值优化 tensor(1.6522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5965,  2.6103, -2.9647, -1.9525,  2.6972,  0.1770,  0.5822, -0.7367,
          1.1601,  0.7985, -0.6485,  0.7055,  1.7133, -0.3299,  0.3046]],
       device='cuda:0') tensor(0.3380, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
338000 特征值优化 tensor(1.6367, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4024,  2.5796, -2.9558, -2.1858,  2.7458,  0.0938,  0.5802, -0.7219,
          1.1232,  0.7752, -0.6879,  0.6937,  1.6866, -0.2794,  0.3474]],
       device='cuda:0') tensor(0.3833, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
339000 特征值优化 tensor(1.6301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1968,  2.5011, -2.8835, -2.3935,  2.7617,  0.0503,  0.5640, -0.7116,
          1.0832,  0.7568, -0.7390,  0.6895,  1.6658, -0.2747,  0.3539]],
       device='cuda:0') tensor(0.3749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
340000 特征值优化 tensor(1.6237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7878e-03,  2.3992e+00, -2.7762e+00, -2.6203e+00,  2.7438e+00,
          9.6538e-03,  5.5637e-01, -6.9382e-01,  1.0390e+00,  7.3964e-01,
         -7.7477e-01,  6.8178e-01,  1.6325e+00, -2.5687e-01,  3.5192e-01]],
       device='cuda:0') tensor(0.3666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
341000 特征值优化 tensor(1.6189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1783,  2.3246, -2.6983, -2.8185,  2.7643, -0.0310,  0.5542, -0.6802,
          0.9989,  0.7258, -0.7938,  0.6706,  1.6029, -0.2531,  0.3599]],
       device='cuda:0') tensor(0.3792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
342000 特征值优化 tensor(1.6157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3183,  2.2516, -2.6440, -2.9814,  2.7744, -0.0624,  0.5496, -0.6695,
          0.9653,  0.7052, -0.7984,  0.6667,  1.5712, -0.2460,  0.3645]],
       device='cuda:0') tensor(0.3551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
343000 特征值优化 tensor(1.6128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4392,  2.1774, -2.5696, -3.1131,  2.7579, -0.1014,  0.5396, -0.6523,
          0.9323,  0.6919, -0.8160,  0.6593,  1.5468, -0.2428,  0.3606]],
       device='cuda:0') tensor(0.3857, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
344000 特征值优化 tensor(4.3443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2172e-01,  3.3213e-01,  4.6600e-01,  7.3168e-01, -2.4624e-04,
         -1.3148e-01,  1.3828e-02, -2.5840e-01,  9.3035e-01, -4.7886e-01,
         -6.5681e-02,  6.8850e-02,  6.8179e-01,  8.5859e-01, -8.1010e-01]],
       device='cuda:0') tensor(0.3468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
345000 特征值优化 tensor(1.5701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0772,  0.8177,  0.8989,  0.8239,  0.7819,  0.7584, -0.3359, -0.4458,
          1.2787, -0.8086,  0.4076,  0.0586,  1.0647,  0.2220, -1.0831]],
       device='cuda:0') tensor(0.3769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
346000 特征值优化 tensor(1.5438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2033,  0.9267,  0.9643,  0.7012,  0.7884,  0.8988, -0.3893, -0.5150,
          1.2549, -0.7891,  0.4596,  0.0534,  1.0575,  0.2105, -1.0866]],
       device='cuda:0') tensor(0.3800, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
347000 特征值优化 tensor(1.5408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3016,  1.0149,  1.0064,  0.6553,  0.7939,  0.9252, -0.4061, -0.5238,
          1.2423, -0.7788,  0.4691,  0.0635,  1.0404,  0.2125, -1.0873]],
       device='cuda:0') tensor(0.3903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
348000 特征值优化 tensor(1.5382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4028,  1.1233,  1.0329,  0.6161,  0.8031,  0.9323, -0.4217, -0.5184,
          1.2376, -0.7586,  0.4704,  0.0753,  1.0287,  0.2137, -1.0903]],
       device='cuda:0') tensor(0.4102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
349000 特征值优化 tensor(1.5351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4780,  1.2509,  1.0247,  0.6015,  0.8126,  0.9307, -0.4384, -0.5051,
          1.2351, -0.7345,  0.4670,  0.0936,  1.0178,  0.2159, -1.0918]],
       device='cuda:0') tensor(0.3634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
350000 正交保障 tensor(0.3644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5047,  1.4104,  0.9946,  0.6016,  0.8317,  0.9430, -0.4695, -0.4993,
          1.2409, -0.7154,  0.4724,  0.1192,  1.0098,  0.2196, -1.0969]],
       device='cuda:0') tensor(0.3644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
351000 正交保障 tensor(0.3542, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5275,  1.5748,  0.9645,  0.6214,  0.8590,  0.9609, -0.4993, -0.4965,
          1.2431, -0.6878,  0.4831,  0.1507,  1.0029,  0.2260, -1.1044]],
       device='cuda:0') tensor(0.3542, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
352000 特征值优化 tensor(1.5195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4784,  1.7515,  0.9112,  0.6925,  0.8942,  0.9579, -0.5315, -0.4842,
          1.2634, -0.6647,  0.4794,  0.1844,  1.0016,  0.2331, -1.1125]],
       device='cuda:0') tensor(0.3495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
353000 特征值优化 tensor(1.5168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4492,  1.8630,  0.8702,  0.7468,  0.8963,  0.9552, -0.5528, -0.4706,
          1.2754, -0.6492,  0.4670,  0.2045,  0.9986,  0.2335, -1.1131]],
       device='cuda:0') tensor(0.3664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
354000 特征值优化 tensor(1.5120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3948,  2.0074,  0.8107,  0.8316,  0.9218,  0.9578, -0.5784, -0.4639,
          1.2879, -0.6286,  0.4668,  0.2358,  1.0034,  0.2489, -1.1188]],
       device='cuda:0') tensor(0.3577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
355000 特征值优化 tensor(1.5083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3160,  2.1409,  0.7624,  0.9398,  0.9218,  0.9549, -0.6028, -0.4541,
          1.3067, -0.6127,  0.4566,  0.2646,  1.0054,  0.2486, -1.1176]],
       device='cuda:0') tensor(0.3520, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
356000 特征值优化 tensor(6.9200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8614,  0.4546, -0.0027, -0.5039, -0.0282,  0.4416,  0.0169,  2.0082,
          1.2860,  0.8012,  0.7401, -1.8208,  1.2369, -0.2217,  0.3074]],
       device='cuda:0') tensor(0.2578, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
357000 特征值优化 tensor(3.2664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0098,  1.1045, -0.1334,  0.0436,  0.6893,  0.8259, -0.5381,  1.4111,
          0.9554,  0.1811,  1.4000, -1.5086,  0.7493, -0.1315,  0.9035]],
       device='cuda:0') tensor(0.3663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
358000 特征值优化 tensor(2.2382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4278,  1.6528,  0.2219,  0.2633,  0.9124,  0.3763, -0.7320,  0.9329,
          1.0667, -0.2387,  1.1860, -1.6564,  0.5256,  0.0276,  1.0497]],
       device='cuda:0') tensor(0.4019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
359000 特征值优化 tensor(2.0443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4006,  1.4848,  0.4678,  0.2789,  1.0407,  0.1665, -0.4193,  0.5937,
          1.0269, -0.3347,  0.7795, -1.6366,  0.4430,  0.1805,  1.0723]],
       device='cuda:0') tensor(0.3887, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
360000 特征值优化 tensor(1.8595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5417,  1.3410,  0.6904,  0.4816,  1.3822, -0.0152, -0.1111,  0.2427,
          1.0278, -0.4051,  0.3629, -1.6491,  0.4045,  0.3156,  1.1688]],
       device='cuda:0') tensor(0.4550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
361000 特征值优化 tensor(1.7918, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7846,  1.0284,  0.5724,  0.8737,  1.7197, -0.0921,  0.0105,  0.1694,
          1.0843, -0.4275,  0.1440, -1.7547,  0.4258,  0.4289,  1.2564]],
       device='cuda:0') tensor(0.4564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
362000 特征值优化 tensor(1.6708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1564,  0.6001,  0.5379,  1.5495,  2.1226, -0.1704,  0.1337,  0.1323,
          1.1492, -0.4753, -0.0630, -1.9078,  0.4534,  0.5404,  1.3644]],
       device='cuda:0') tensor(0.4490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
363000 特征值优化 tensor(1.6581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1558,  0.5490,  0.6393,  1.6852,  2.3857, -0.1843,  0.1234,  0.1620,
          1.1715, -0.4926, -0.0372, -1.9610,  0.4623,  0.6083,  1.4398]],
       device='cuda:0') tensor(0.5183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
364000 特征值优化 tensor(1.6494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1375,  0.5218,  0.7445,  1.8005,  2.6252, -0.1993,  0.1204,  0.1866,
          1.1923, -0.5097, -0.0260, -1.9949,  0.4713,  0.6668,  1.5095]],
       device='cuda:0') tensor(0.5049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
365000 特征值优化 tensor(1.6419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1126,  0.5105,  0.8513,  1.9300,  2.8626, -0.2239,  0.1235,  0.2125,
          1.2078, -0.5193, -0.0189, -2.0317,  0.4752,  0.7259,  1.5704]],
       device='cuda:0') tensor(0.5019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
366000 正交保障 tensor(0.5951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0907,  0.5033,  0.9374,  2.0432,  3.0393, -0.2521,  0.1261,  0.2334,
          1.2209, -0.5301, -0.0147, -2.0570,  0.4789,  0.7703,  1.6159]],
       device='cuda:0') tensor(0.5951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
367000 特征值优化 tensor(1.6342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0864,  0.4891,  0.9812,  2.1001,  3.1330, -0.2602,  0.1231,  0.2434,
          1.2292, -0.5378, -0.0121, -2.0726,  0.4821,  0.7936,  1.6393]],
       device='cuda:0') tensor(0.5405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
368000 特征值优化 tensor(3.3560, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1889, -0.4614, -0.2942,  1.9253,  1.1832, -0.8502,  0.6771, -0.8314,
         -1.3302,  0.2473, -1.1238,  0.0440,  1.5322,  0.8668,  1.0152]],
       device='cuda:0') tensor(0.4943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
369000 特征值优化 tensor(1.3588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7802,  0.0373, -0.8301,  2.4771,  1.6020, -1.3077,  0.3611, -0.9280,
         -1.4921,  0.1640, -0.8176,  0.1642,  1.4063,  0.4083,  1.2565]],
       device='cuda:0') tensor(0.4271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
370000 特征值优化 tensor(1.2971, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8672,  0.2558, -0.8903,  2.5770,  1.5934, -1.4991,  0.3076, -0.9453,
         -1.3919,  0.1497, -0.6169,  0.1926,  1.5295,  0.4061,  1.2500]],
       device='cuda:0') tensor(0.4827, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
371000 特征值优化 tensor(1.2730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9998,  0.4044, -0.9960,  2.7406,  1.5834, -1.6280,  0.2893, -0.9742,
         -1.3283,  0.1651, -0.5246,  0.2059,  1.5799,  0.4037,  1.2466]],
       device='cuda:0') tensor(0.4933, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
372000 特征值优化 tensor(1.2514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2189,  0.5385, -1.1334,  2.9492,  1.5696, -1.7560,  0.2874, -1.0081,
         -1.2679,  0.1655, -0.4435,  0.2136,  1.6122,  0.3985,  1.2421]],
       device='cuda:0') tensor(0.4676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
373000 特征值优化 tensor(1.2321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5161,  0.6582, -1.2739,  3.1493,  1.5468, -1.8671,  0.3054, -1.0374,
         -1.2098,  0.1642, -0.3588,  0.2142,  1.6231,  0.3916,  1.2363]],
       device='cuda:0') tensor(0.4489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
374000 特征值优化 tensor(1.2208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7928,  0.7374, -1.3993,  3.2879,  1.5246, -1.9404,  0.3203, -1.0449,
         -1.1728,  0.1649, -0.3076,  0.2120,  1.6130,  0.3847,  1.2302]],
       device='cuda:0') tensor(0.4381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
375000 特征值优化 tensor(1.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1098,  0.8045, -1.5606,  3.4875,  1.4503, -1.8943,  0.3306, -1.0440,
         -1.1353,  0.1601, -0.2554,  0.2123,  1.5782,  0.3617,  1.2134]],
       device='cuda:0') tensor(0.4110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
376000 特征值优化 tensor(1.1848, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4094,  0.8676, -1.7473,  3.6595,  1.2905, -1.8509,  0.3456, -0.9886,
         -1.0915,  0.1584, -0.1930,  0.2107,  1.5246,  0.3116,  1.1713]],
       device='cuda:0') tensor(0.4535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
377000 特征值优化 tensor(1.1711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.6311,  0.9045, -1.9073,  3.8016,  1.2421, -1.8300,  0.3851, -0.9298,
         -1.0542,  0.1638, -0.0749,  0.2096,  1.4938,  0.3020,  1.1590]],
       device='cuda:0') tensor(0.4597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
378000 正交保障 tensor(0.4228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8258,  0.9022, -2.0396,  3.9021,  1.2460, -1.8218,  0.4340, -0.8625,
         -1.0216,  0.1730,  0.0209,  0.2055,  1.4707,  0.3037,  1.1596]],
       device='cuda:0') tensor(0.4228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
379000 特征值优化 tensor(1.1493, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.0449,  0.8948, -2.1983,  3.9937,  1.2506, -1.8152,  0.4996, -0.7848,
         -0.9898,  0.1843,  0.0888,  0.1917,  1.4347,  0.2991,  1.1595]],
       device='cuda:0') tensor(0.4392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
380000 特征值优化 tensor(1.1392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2514,  0.9194, -2.3650,  4.1054,  1.2507, -1.8248,  0.5340, -0.7065,
         -0.9511,  0.1930,  0.1540,  0.1939,  1.4060,  0.2976,  1.1592]],
       device='cuda:0') tensor(0.4371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
381000 特征值优化 tensor(1.1313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.4280,  0.9671, -2.5143,  4.2183,  1.2759, -1.8468,  0.5428, -0.6473,
         -0.9202,  0.1995,  0.2010,  0.1870,  1.3812,  0.2950,  1.1644]],
       device='cuda:0') tensor(0.4552, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
382000 特征值优化 tensor(1.1250, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5726,  1.0234, -2.6520,  4.3423,  1.2905, -1.8815,  0.5419, -0.5900,
         -0.8877,  0.2089,  0.2370,  0.1876,  1.3594,  0.2937,  1.1699]],
       device='cuda:0') tensor(0.4574, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
383000 特征值优化 tensor(1.1212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6779,  1.0615, -2.7553,  4.4528,  1.2949, -1.9177,  0.5358, -0.5571,
         -0.8662,  0.2192,  0.2617,  0.1912,  1.3445,  0.2923,  1.1712]],
       device='cuda:0') tensor(0.4585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
384000 特征值优化 tensor(3.5699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2879,  1.5882,  1.0126, -0.1802, -0.7721,  1.7118, -0.2554, -1.8883,
          0.0776,  0.3179,  1.7587, -0.5411, -0.1434, -0.2417, -1.1060]],
       device='cuda:0') tensor(0.4284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
385000 特征值优化 tensor(2.7297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4073,  1.5171,  1.0997, -0.0192,  0.1301,  1.7686, -0.2794, -1.8830,
          0.1034,  0.3328,  1.8415, -0.5341, -0.1637, -0.0649, -1.5948]],
       device='cuda:0') tensor(0.4647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
386000 特征值优化 tensor(2.4582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1867,  1.8001,  1.3660, -0.3386,  0.7452,  1.8500, -0.2949, -1.8954,
          0.0427,  0.1978,  1.8783, -0.5634, -0.1579, -0.0930, -1.8160]],
       device='cuda:0') tensor(0.5734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
387000 正交保障 tensor(0.5523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1861,  1.9890,  1.5175, -0.4059,  1.2451,  1.8280, -0.2973, -1.8934,
          0.0243,  0.0046,  1.7249, -0.6429, -0.1873, -0.0606, -1.9844]],
       device='cuda:0') tensor(0.5523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
388000 特征值优化 tensor(2.2564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4242,  2.1684,  1.6733, -0.4327,  1.5852,  1.8035, -0.2811, -1.8034,
          0.0596, -0.1072,  1.5994, -0.6553, -0.2014, -0.1383, -2.0807]],
       device='cuda:0') tensor(0.5847, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
389000 特征值优化 tensor(2.2293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5906,  2.2977,  1.6832, -0.4904,  1.8080,  1.8090, -0.2377, -1.6954,
          0.0813, -0.1804,  1.5212, -0.6688, -0.2007, -0.1914, -2.1376]],
       device='cuda:0') tensor(0.5577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
390000 特征值优化 tensor(2.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7352,  2.4219,  1.6500, -0.5474,  2.0658,  1.8673, -0.1912, -1.5978,
          0.0917, -0.2504,  1.4771, -0.6706, -0.2060, -0.2632, -2.2107]],
       device='cuda:0') tensor(0.6283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
391000 特征值优化 tensor(2.1880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8483,  2.5282,  1.6346, -0.6095,  2.3320,  1.9253, -0.1643, -1.5249,
          0.0987, -0.3166,  1.4403, -0.6744, -0.2024, -0.3313, -2.2822]],
       device='cuda:0') tensor(0.6102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
392000 正交保障 tensor(0.6717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0339,  2.6370,  1.6605, -0.6043,  2.6184,  1.9653, -0.1496, -1.4985,
          0.1142, -0.3929,  1.3833, -0.6844, -0.2029, -0.4037, -2.3550]],
       device='cuda:0') tensor(0.6717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
393000 特征值优化 tensor(2.1617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1804,  2.7279,  1.6988, -0.5994,  2.9086,  2.0039, -0.1375, -1.4901,
          0.1170, -0.4620,  1.3450, -0.6938, -0.2083, -0.4774, -2.4270]],
       device='cuda:0') tensor(0.6711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
394000 特征值优化 tensor(2.1533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2999,  2.8055,  1.7237, -0.6045,  3.1386,  2.0486, -0.1263, -1.4936,
          0.1179, -0.5144,  1.3280, -0.7001, -0.2140, -0.5377, -2.4901]],
       device='cuda:0') tensor(0.7321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
395000 特征值优化 tensor(2.1463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4005,  2.8647,  1.7535, -0.5940,  3.3792,  2.0903, -0.1134, -1.5065,
          0.1108, -0.5622,  1.3231, -0.7043, -0.2243, -0.5991, -2.5529]],
       device='cuda:0') tensor(0.7296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
396000 特征值优化 tensor(5.7239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1372,  0.7469, -1.1895,  2.1909, -0.3124, -0.0823,  0.7825, -0.0515,
          0.5671,  0.1045, -1.2873, -0.6832,  0.2262,  1.0672, -1.0895]],
       device='cuda:0') tensor(0.4462, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
397000 特征值优化 tensor(2.8867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5638,  1.3349, -1.2476,  1.6907,  0.3923, -0.7060,  1.0899, -0.4074,
          0.5092, -0.0557, -2.0661, -0.5460,  0.0535,  0.3994, -1.7470]],
       device='cuda:0') tensor(0.5407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
398000 特征值优化 tensor(2.4940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4087,  1.7465, -1.6668,  1.2296,  1.0220, -0.9593,  1.4202, -0.6708,
          0.5484,  0.0178, -2.5997, -0.4258,  0.0952,  0.3090, -1.9622]],
       device='cuda:0') tensor(0.5810, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
399000 特征值优化 tensor(2.4373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4868,  1.8086, -1.6177,  1.1980,  1.3051, -0.9778,  1.4319, -0.7392,
          0.6697,  0.0408, -2.6953, -0.3411,  0.1170,  0.3073, -2.0476]],
       device='cuda:0') tensor(0.5266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
400000 特征值优化 tensor(2.4184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5961,  1.7078, -1.4559,  1.2154,  1.4617, -0.9851,  1.4266, -0.7705,
          0.7510,  0.0562, -2.7350, -0.3075,  0.1153,  0.3504, -2.0883]],
       device='cuda:0') tensor(0.6460, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
401000 特征值优化 tensor(2.4037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7765,  1.7160, -1.3886,  1.2512,  1.6264, -1.0492,  1.3972, -0.7849,
          0.8285,  0.0671, -2.7814, -0.2835,  0.1177,  0.3873, -2.1333]],
       device='cuda:0') tensor(0.6355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
402000 特征值优化 tensor(2.3992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9604,  1.7286, -1.3360,  1.2786,  1.6823, -1.0955,  1.3928, -0.8027,
          0.8763,  0.0784, -2.7909, -0.2646,  0.1130,  0.4020, -2.1546]],
       device='cuda:0') tensor(0.6384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
403000 特征值优化 tensor(2.3976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0540,  1.7486, -1.2905,  1.2692,  1.6878, -1.1293,  1.3964, -0.8202,
          0.8994,  0.0829, -2.7958, -0.2512,  0.1013,  0.4030, -2.1580]],
       device='cuda:0') tensor(0.6071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
404000 正交保障 tensor(0.5977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0811,  1.7692, -1.2537,  1.2506,  1.6924, -1.1374,  1.3936, -0.8259,
          0.9075,  0.0829, -2.7881, -0.2417,  0.0925,  0.4033, -2.1616]],
       device='cuda:0') tensor(0.5977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
405000 特征值优化 tensor(2.3968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0973,  1.7811, -1.2241,  1.2259,  1.6974, -1.1426,  1.3931, -0.8343,
          0.9131,  0.0834, -2.7814, -0.2360,  0.0851,  0.4043, -2.1637]],
       device='cuda:0') tensor(0.6705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
406000 特征值优化 tensor(2.3968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0974,  1.7907, -1.1889,  1.2028,  1.6926, -1.1413,  1.3864, -0.8437,
          0.9090,  0.0851, -2.7739, -0.2330,  0.0762,  0.4021, -2.1601]],
       device='cuda:0') tensor(0.6084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
407000 特征值优化 tensor(2.3966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1025,  1.7980, -1.1608,  1.1835,  1.6953, -1.1474,  1.3874, -0.8510,
          0.9132,  0.0844, -2.7659, -0.2253,  0.0658,  0.4028, -2.1621]],
       device='cuda:0') tensor(0.5969, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
408000 特征值优化 tensor(9.2040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0608,  1.7246, -1.6663, -0.1110, -1.8139, -1.2551,  0.9067, -1.0831,
          1.4023, -0.1141, -1.1170, -0.1081,  0.8327,  1.5868, -0.5725]],
       device='cuda:0') tensor(0.4867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
409000 特征值优化 tensor(4.4221, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1706,  2.4358, -1.4101,  0.3649, -0.9561, -1.7269,  1.3505, -0.8581,
          1.2780, -0.5407, -1.2656, -0.6313,  0.4875,  0.7180, -0.6310]],
       device='cuda:0') tensor(0.4419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
410000 特征值优化 tensor(2.5784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1926,  2.5633, -1.0306,  0.6194, -0.3442, -0.9938,  0.9224, -0.6681,
          1.4119, -0.6758, -0.5591, -0.8322,  0.4793,  0.1916, -0.6507]],
       device='cuda:0') tensor(0.2973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
411000 特征值优化 tensor(2.4309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2127,  2.5353, -0.7913,  0.7603, -0.2036, -0.4761,  0.5536, -0.4871,
          1.2553, -0.6249, -0.1549, -0.8048,  0.4406,  0.0886, -0.6746]],
       device='cuda:0') tensor(0.2613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
412000 特征值优化 tensor(2.3693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3230,  2.4862, -0.7136,  0.9497, -0.1876, -0.3126,  0.4470, -0.2778,
          1.2459, -0.6511, -0.0467, -0.8397,  0.4155, -0.0440, -0.6752]],
       device='cuda:0') tensor(0.2750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
413000 特征值优化 tensor(2.2933, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7851,  2.1642, -0.6112,  1.3622, -0.2510, -0.2008,  0.4124, -0.1284,
          1.2944, -0.7018,  0.0108, -0.9123,  0.4192, -0.2028, -0.6591]],
       device='cuda:0') tensor(0.2930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
414000 特征值优化 tensor(2.2273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4068,  1.7259, -0.4469,  1.8552, -0.2270, -0.0354,  0.2999, -0.0555,
          1.3740, -0.7538,  0.1243, -0.9888,  0.4460, -0.2235, -0.6639]],
       device='cuda:0') tensor(0.3075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
415000 特征值优化 tensor(2.1809, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8925,  1.3716, -0.3405,  2.2148, -0.2166,  0.0596,  0.2343, -0.0345,
          1.4459, -0.7828,  0.1836, -1.0288,  0.4725, -0.2483, -0.6658]],
       device='cuda:0') tensor(0.2763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
416000 正交保障 tensor(0.2996, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0617,  1.2268, -0.3108,  2.3261, -0.2138,  0.0909,  0.2031, -0.0278,
          1.4667, -0.7984,  0.2224, -1.0462,  0.4855, -0.2670, -0.6595]],
       device='cuda:0') tensor(0.2996, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
417000 特征值优化 tensor(2.1709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0769,  1.1745, -0.3041,  2.3282, -0.2123,  0.0860,  0.2163, -0.0236,
          1.4751, -0.8023,  0.2207, -1.0489,  0.4868, -0.2663, -0.6612]],
       device='cuda:0') tensor(0.3159, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
418000 特征值优化 tensor(2.1709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0684,  1.1370, -0.2997,  2.3071, -0.2142,  0.0823,  0.2235, -0.0223,
          1.4774, -0.8041,  0.2225, -1.0497,  0.4889, -0.2650, -0.6595]],
       device='cuda:0') tensor(0.2873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
419000 特征值优化 tensor(2.1709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0432,  1.1055, -0.2945,  2.2704, -0.2150,  0.0878,  0.2308, -0.0194,
          1.4800, -0.8014,  0.2274, -1.0489,  0.4876, -0.2645, -0.6595]],
       device='cuda:0') tensor(0.2792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
420000 特征值优化 tensor(2.5037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8220, -0.3292, -0.5086,  1.2147,  0.4991,  1.6180,  0.9033, -0.0657,
          1.7400, -0.4863, -0.0426,  1.5753,  0.7586, -0.1526, -0.8306]],
       device='cuda:0') tensor(0.3278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
421000 特征值优化 tensor(1.4311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9442, -0.6705, -0.6233,  1.5882,  0.8645,  1.5521,  0.8211, -0.1741,
          1.5799, -0.3694,  0.3638,  1.3292,  0.5564, -0.2220, -1.0764]],
       device='cuda:0') tensor(0.4011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
422000 特征值优化 tensor(1.3642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7557, -0.8579, -0.9160,  1.6945,  1.0850,  1.5106,  0.9462, -0.1276,
          1.6412, -0.4163,  0.5264,  1.3098,  0.5653, -0.2769, -1.1224]],
       device='cuda:0') tensor(0.3997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
423000 特征值优化 tensor(1.3174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5347, -1.0742, -1.2395,  1.7149,  1.2283,  1.5913,  1.1101, -0.0579,
          1.6724, -0.4485,  0.6522,  1.2856,  0.5966, -0.3135, -1.1580]],
       device='cuda:0') tensor(0.3788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
424000 正交保障 tensor(0.4819, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3527, -1.3626, -1.5284,  1.7454,  1.3691,  1.6336,  1.2401,  0.0444,
          1.6669, -0.4736,  0.7379,  1.2571,  0.6271, -0.3480, -1.1915]],
       device='cuda:0') tensor(0.4819, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
425000 特征值优化 tensor(1.2555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1740, -1.6526, -1.7801,  1.7835,  1.4317,  1.6781,  1.3381,  0.1320,
          1.6490, -0.4872,  0.7871,  1.2329,  0.6373, -0.3617, -1.2071]],
       device='cuda:0') tensor(0.4171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
426000 特征值优化 tensor(1.2376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9849, -1.8896, -1.9929,  1.7652,  1.4787,  1.7139,  1.4098,  0.2074,
          1.6214, -0.4969,  0.8193,  1.2115,  0.6506, -0.3752, -1.2204]],
       device='cuda:0') tensor(0.4104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
427000 特征值优化 tensor(1.2287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8317, -2.0734, -2.1139,  1.7499,  1.4831,  1.7245,  1.4434,  0.2717,
          1.5958, -0.4965,  0.8297,  1.1932,  0.6557, -0.3744, -1.2192]],
       device='cuda:0') tensor(0.4551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
428000 正交保障 tensor(0.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6909, -2.2355, -2.1762,  1.7103,  1.4680,  1.7227,  1.4474,  0.3282,
          1.5680, -0.4930,  0.8281,  1.1750,  0.6484, -0.3714, -1.2175]],
       device='cuda:0') tensor(0.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
429000 特征值优化 tensor(1.2204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5449, -2.3713, -2.1787,  1.6392,  1.3968,  1.7009,  1.4244,  0.3674,
          1.5338, -0.4795,  0.7990,  1.1524,  0.6336, -0.3532, -1.1993]],
       device='cuda:0') tensor(0.4301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
430000 特征值优化 tensor(1.2175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4097, -2.4929, -2.1787,  1.5615,  1.3545,  1.6601,  1.3936,  0.4033,
          1.5030, -0.4683,  0.7607,  1.1314,  0.6230, -0.3421, -1.1885]],
       device='cuda:0') tensor(0.4411, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
431000 特征值优化 tensor(1.1886, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2863, -2.7500, -2.3621,  1.5575,  1.3089,  1.5450,  1.3416,  0.3911,
          1.4546, -0.4493,  0.6525,  1.1098,  0.6001, -0.3178, -1.1788]],
       device='cuda:0') tensor(0.3883, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
432000 特征值优化 tensor(1.1735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2016, -2.9856, -2.4892,  1.5532,  1.2372,  1.4670,  1.2603,  0.4431,
          1.4052, -0.4314,  0.5541,  1.0853,  0.5956, -0.3024, -1.1591]],
       device='cuda:0') tensor(0.4054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
433000 特征值优化 tensor(1.1618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1615, -3.2039, -2.5698,  1.4939,  1.2442,  1.4493,  1.1997,  0.5239,
          1.3588, -0.4240,  0.4425,  1.0718,  0.5974, -0.3048, -1.1593]],
       device='cuda:0') tensor(0.4150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
434000 特征值优化 tensor(1.1514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1188, -3.4064, -2.6571,  1.4125,  1.2408,  1.4650,  1.1479,  0.6007,
          1.3185, -0.4218,  0.3601,  1.0515,  0.5897, -0.2992, -1.1580]],
       device='cuda:0') tensor(0.4116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
435000 正交保障 tensor(0.4138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0491, -3.6316, -2.7528,  1.3999,  1.2480,  1.4453,  1.0896,  0.6693,
          1.2691, -0.4112,  0.3004,  1.0381,  0.5887, -0.2989, -1.1596]],
       device='cuda:0') tensor(0.4138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
436000 特征值优化 tensor(1.1330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0128, -3.8213, -2.8303,  1.4010,  1.2550,  1.4204,  1.0329,  0.7366,
          1.2343, -0.4106,  0.2683,  1.0174,  0.5824, -0.2970, -1.1586]],
       device='cuda:0') tensor(0.4056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
437000 正交保障 tensor(0.4231, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0600, -3.9701, -2.8952,  1.4042,  1.2756,  1.4005,  0.9936,  0.7859,
          1.2039, -0.4049,  0.2670,  1.0030,  0.5803, -0.2954, -1.1649]],
       device='cuda:0') tensor(0.4231, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
438000 特征值优化 tensor(1.1232, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1026, -4.0942, -2.9521,  1.4183,  1.2794,  1.3923,  0.9661,  0.8222,
          1.1735, -0.3974,  0.2732,  0.9990,  0.5802, -0.2955, -1.1666]],
       device='cuda:0') tensor(0.4161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
439000 正交保障 tensor(0.3943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6237, -1.0285, -0.4582,  0.5455,  0.7515, -0.4185,  0.0433, -1.3439,
         -0.7179,  0.3752, -0.6800, -0.9024,  1.6207, -0.0364, -0.9675]],
       device='cuda:0') tensor(0.3943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
440000 特征值优化 tensor(2.1334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8344, -1.1963, -0.4847,  0.6631,  0.8701, -0.3302, -0.0140, -0.9773,
         -0.8522,  0.3483, -0.6921, -0.8714,  1.6718, -0.1046, -1.0221]],
       device='cuda:0') tensor(0.3889, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
441000 特征值优化 tensor(1.9548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9157, -1.2704, -0.1755,  0.7142,  1.1620, -0.1003,  0.0905, -0.5741,
         -0.9017,  0.3317, -0.4340, -0.8565,  1.6441, -0.2551, -1.0989]],
       device='cuda:0') tensor(0.3708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
442000 特征值优化 tensor(1.7765, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0899, -1.1874,  0.1763,  1.1022,  1.5142,  0.0873,  0.1653, -0.1810,
         -0.9911,  0.3158, -0.1311, -0.8802,  1.7119, -0.3884, -1.2006]],
       device='cuda:0') tensor(0.3856, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
443000 特征值优化 tensor(1.6703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3247, -0.9121,  0.3772,  1.7343,  1.9410,  0.1463,  0.2132, -0.1050,
         -1.0606,  0.3139,  0.0191, -0.9383,  1.8512, -0.4970, -1.3219]],
       device='cuda:0') tensor(0.4550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
444000 特征值优化 tensor(1.6594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3112, -0.9513,  0.4606,  1.8543,  2.2066,  0.1618,  0.2225, -0.1279,
         -1.0811,  0.3131,  0.0056, -0.9538,  1.8934, -0.5635, -1.3974]],
       device='cuda:0') tensor(0.4665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
445000 正交保障 tensor(0.4336, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2970e+00, -1.0082e+00,  5.5534e-01,  1.9887e+00,  2.4806e+00,
          1.8876e-01,  2.3879e-01, -1.4537e-01, -1.1019e+00,  3.1185e-01,
          9.1047e-04, -9.6923e-01,  1.9353e+00, -6.2990e-01, -1.4747e+00]],
       device='cuda:0') tensor(0.4336, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
446000 特征值优化 tensor(1.6451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3082, -1.0037,  0.5895,  2.0525,  2.6319,  0.1939,  0.2453, -0.1461,
         -1.1150,  0.3113,  0.0077, -0.9809,  1.9593, -0.6682, -1.5136]],
       device='cuda:0') tensor(0.5212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
447000 特征值优化 tensor(1.6408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2769, -1.0448,  0.6385,  2.0951,  2.7667,  0.2182,  0.2596, -0.1573,
         -1.1197,  0.3085,  0.0182, -0.9908,  1.9746, -0.7013, -1.5458]],
       device='cuda:0') tensor(0.4973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
448000 正交保障 tensor(0.5209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2698, -1.1003,  0.7048,  2.1972,  2.9586,  0.2437,  0.2746, -0.1703,
         -1.1316,  0.3072,  0.0215, -0.9991,  2.0024, -0.7494, -1.5949]],
       device='cuda:0') tensor(0.5209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
449000 特征值优化 tensor(1.6324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2559, -1.1242,  0.7543,  2.2744,  3.0659,  0.2510,  0.2780, -0.1718,
         -1.1418,  0.3059,  0.0240, -1.0073,  2.0205, -0.7759, -1.6226]],
       device='cuda:0') tensor(0.5594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
450000 正交保障 tensor(0.4866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2591, -1.1414,  0.8060,  2.3702,  3.1715,  0.2584,  0.2899, -0.1671,
         -1.1521,  0.3052,  0.0418, -1.0153,  2.0381, -0.8026, -1.6492]],
       device='cuda:0') tensor(0.4866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
451000 特征值优化 tensor(2.4399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8586,  0.1329, -0.0672,  1.7432,  0.0577, -0.8314, -0.4637, -0.0845,
          1.2415,  0.3764,  0.2080, -1.1505,  1.2637,  0.0957, -0.7579]],
       device='cuda:0') tensor(0.2959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
452000 特征值优化 tensor(1.5874, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6969,  0.1175, -0.4660,  1.1888,  0.7535, -0.1232, -0.2827, -0.1470,
          1.3267,  0.4165,  0.9491, -1.2023,  1.3196, -0.1948, -1.0077]],
       device='cuda:0') tensor(0.3225, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
453000 特征值优化 tensor(1.3704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9266,  0.2813, -0.6534,  0.7629,  1.0584,  0.1189, -0.4360, -0.3553,
          1.2642,  0.3804,  1.4268, -1.2100,  1.3156, -0.2630, -1.1206]],
       device='cuda:0') tensor(0.3998, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
454000 特征值优化 tensor(1.3264, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1746,  0.4592, -0.8385,  0.4117,  1.2059,  0.1349, -0.5214, -0.3909,
          1.2772,  0.3846,  1.6675, -1.2043,  1.3206, -0.3033, -1.1524]],
       device='cuda:0') tensor(0.3876, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
455000 正交保障 tensor(0.3640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4532,  0.6679, -1.0408,  0.0121,  1.3411,  0.1181, -0.6057, -0.3784,
          1.3038,  0.4035,  1.9153, -1.2043,  1.3337, -0.3389, -1.1858]],
       device='cuda:0') tensor(0.3640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
456000 特征值优化 tensor(1.2611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.6948,  0.8626, -1.1934, -0.3407,  1.3989,  0.0856, -0.6846, -0.3476,
          1.3119,  0.4002,  2.1193, -1.1903,  1.3229, -0.3538, -1.1996]],
       device='cuda:0') tensor(0.4068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
457000 正交保障 tensor(0.4206, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.8703,  1.0212, -1.3311, -0.6852,  1.4529,  0.0317, -0.7329, -0.3065,
          1.3037,  0.4068,  2.2741, -1.1657,  1.3119, -0.3684, -1.2129]],
       device='cuda:0') tensor(0.4206, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
458000 特征值优化 tensor(1.2189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.1040,  1.2229, -1.4847, -1.0923,  1.4795, -0.0249, -0.7655, -0.2807,
          1.2778,  0.4015,  2.3593, -1.1421,  1.2908, -0.3738, -1.2203]],
       device='cuda:0') tensor(0.4605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
459000 特征值优化 tensor(1.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.2926,  1.4107, -1.5856, -1.4427,  1.3918, -0.0692, -0.7690, -0.2387,
          1.2497,  0.3892,  2.3919, -1.1127,  1.2559, -0.3451, -1.1975]],
       device='cuda:0') tensor(0.4598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
460000 特征值优化 tensor(1.1894, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.4273,  1.5820, -1.6357, -1.7333,  1.2330, -0.1320, -0.7605, -0.1717,
          1.2019,  0.3804,  2.3550, -1.0893,  1.2119, -0.3053, -1.1599]],
       device='cuda:0') tensor(0.3984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
461000 特征值优化 tensor(1.1788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5295,  1.7698, -1.6727, -1.9712,  1.2287, -0.2168, -0.7388, -0.1082,
          1.1904,  0.3738,  2.3523, -1.0571,  1.1835, -0.3047, -1.1570]],
       device='cuda:0') tensor(0.4244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
462000 特征值优化 tensor(1.1691, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.5937,  1.9357, -1.6909, -2.1607,  1.2328, -0.3205, -0.6781, -0.0417,
          1.1936,  0.3548,  2.3514, -1.0243,  1.1542, -0.3042, -1.1563]],
       device='cuda:0') tensor(0.4501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
463000 正交保障 tensor(0.5156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6385,  2.0980, -1.6975, -2.3213,  1.2234, -0.3922, -0.6143,  0.0064,
          1.1926,  0.3335,  2.3379, -1.0012,  1.1124, -0.3016, -1.1541]],
       device='cuda:0') tensor(0.5156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
464000 特征值优化 tensor(1.1525, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.6885,  2.2409, -1.7163, -2.4806,  1.2132, -0.4452, -0.5521,  0.0563,
          1.1781,  0.3225,  2.3275, -0.9824,  1.0803, -0.2978, -1.1500]],
       device='cuda:0') tensor(0.4372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
465000 正交保障 tensor(0.4181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.7936,  2.4139, -1.7515, -2.6901,  1.2389, -0.4764, -0.4839,  0.1186,
          1.1733,  0.3019,  2.2928, -0.9536,  1.0397, -0.2976, -1.1542]],
       device='cuda:0') tensor(0.4181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
466000 特征值优化 tensor(1.1352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.8840,  2.5451, -1.7739, -2.8573,  1.2433, -0.4941, -0.4388,  0.1781,
          1.1661,  0.2893,  2.2526, -0.9339,  0.9995, -0.2967, -1.1549]],
       device='cuda:0') tensor(0.4231, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
467000 正交保障 tensor(0.4190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.9794,  2.6448, -1.7743, -3.0143,  1.2525, -0.5064, -0.4087,  0.2272,
          1.1633,  0.2726,  2.2246, -0.9112,  0.9658, -0.2967, -1.1585]],
       device='cuda:0') tensor(0.4190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
468000 正交保障 tensor(0.4407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.0649,  2.7326, -1.7843, -3.1447,  1.2529, -0.5060, -0.3785,  0.2783,
          1.1521,  0.2637,  2.2042, -0.8915,  0.9458, -0.2966, -1.1589]],
       device='cuda:0') tensor(0.4407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
469000 特征值优化 tensor(5.0652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0942,  0.6650,  0.0578, -0.0378,  1.3112,  1.5700,  1.6979,  0.2300,
          0.7809, -0.6856,  0.5999, -0.7928, -0.9383,  0.3568,  0.0806]],
       device='cuda:0') tensor(0.2690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
470000 特征值优化 tensor(2.6163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-8.6403e-01,  1.3294e+00,  8.0016e-01, -7.5746e-01,  1.5130e+00,
          1.6414e+00,  1.3147e+00,  2.3548e-01,  6.2229e-01, -1.3927e+00,
          8.1039e-01, -6.2571e-01, -1.5219e+00, -1.5688e-02,  5.7486e-04]],
       device='cuda:0') tensor(0.3355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
471000 正交保障 tensor(0.2880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0945,  1.3094,  1.1169, -0.7037,  1.8941,  1.5676,  1.1115, -0.0727,
          0.5687, -1.4732,  0.5848, -0.5631, -1.5848, -0.1320, -0.0133]],
       device='cuda:0') tensor(0.2880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
472000 正交保障 tensor(0.3327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3987,  1.2275,  1.5627, -0.4864,  2.2237,  1.3354,  0.6876, -0.4000,
          0.5344, -1.5458,  0.3368, -0.4906, -1.5952, -0.1617, -0.1448]],
       device='cuda:0') tensor(0.3327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
473000 正交保障 tensor(0.3349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7642,  1.1830,  1.9814, -0.3810,  2.6389,  1.0621,  0.3188, -0.5195,
          0.4799, -1.5986,  0.2746, -0.4166, -1.5784, -0.2254, -0.2741]],
       device='cuda:0') tensor(0.3349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
474000 特征值优化 tensor(1.8316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1655,  1.0252,  2.1577, -0.6687,  2.8970,  0.9308,  0.1746, -0.5295,
          0.4405, -1.5790,  0.2702, -0.3660, -1.5021, -0.2085, -0.3597]],
       device='cuda:0') tensor(0.3399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
475000 特征值优化 tensor(1.6357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8428,  0.7178,  2.3637, -1.3099,  3.0179,  0.7938, -0.0663, -0.6126,
          0.3676, -1.4223,  0.3103, -0.2761, -1.3310, -0.0240, -0.4221]],
       device='cuda:0') tensor(0.3715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
476000 特征值优化 tensor(1.5758, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.2834,  0.6191,  2.6001, -1.6454,  2.8414,  0.8427, -0.1161, -0.6880,
          0.3163, -1.3478,  0.3707, -0.2224, -1.2332,  0.0913, -0.3815]],
       device='cuda:0') tensor(0.4030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
477000 特征值优化 tensor(1.5613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5243,  0.6157,  2.7687, -1.8013,  2.8755,  0.8651, -0.1539, -0.7079,
          0.3013, -1.3014,  0.4159, -0.2072, -1.1887,  0.1000, -0.3906]],
       device='cuda:0') tensor(0.3467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
478000 正交保障 tensor(0.3716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5888,  0.6137,  2.7976, -1.8364,  2.8842,  0.8747, -0.1564, -0.7156,
          0.2972, -1.2923,  0.4300, -0.2017, -1.1769,  0.1024, -0.3925]],
       device='cuda:0') tensor(0.3716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
479000 正交保障 tensor(0.3713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6041,  0.6179,  2.8048, -1.8424,  2.8791,  0.8797, -0.1587, -0.7170,
          0.2955, -1.2883,  0.4307, -0.2004, -1.1736,  0.1021, -0.3914]],
       device='cuda:0') tensor(0.3713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
480000 特征值优化 tensor(1.5604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.6060,  0.6200,  2.8119, -1.8481,  2.8855,  0.8823, -0.1608, -0.7170,
          0.2950, -1.2851,  0.4310, -0.1980, -1.1748,  0.1028, -0.3925]],
       device='cuda:0') tensor(0.3614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
481000 特征值优化 tensor(2.7609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6381,  0.9125,  0.2016,  0.7704,  0.3640, -0.1191, -0.6138, -0.4543,
          1.2252,  1.2791, -0.5478, -1.0353,  0.6523,  0.0539, -0.8399]],
       device='cuda:0') tensor(0.3131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
482000 特征值优化 tensor(1.4912, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5650,  1.3992,  0.2108,  0.8985,  0.8335,  0.6711, -0.5272, -0.3233,
          1.2009,  1.3269,  0.3180, -0.9898,  0.7123, -0.2117, -1.0509]],
       device='cuda:0') tensor(0.3933, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
483000 特征值优化 tensor(1.3175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4600,  1.8681,  0.1648,  0.8155,  1.0998,  0.9198, -0.7370, -0.5175,
          1.2291,  1.3422,  0.5984, -0.9211,  0.6538, -0.2692, -1.1261]],
       device='cuda:0') tensor(0.3876, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
484000 特征值优化 tensor(1.2833, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4464,  2.2223,  0.1731,  0.7053,  1.2069,  0.9816, -0.8336, -0.5812,
          1.2458,  1.3625,  0.7145, -0.8930,  0.6388, -0.3005, -1.1515]],
       device='cuda:0') tensor(0.4500, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
485000 正交保障 tensor(0.4139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4033,  2.6187,  0.2438,  0.4990,  1.2729,  1.1069, -0.9717, -0.6582,
          1.2499,  1.3624,  0.8514, -0.8884,  0.6395, -0.3178, -1.1686]],
       device='cuda:0') tensor(0.4139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
486000 正交保障 tensor(0.4406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3549,  2.9547,  0.3259,  0.3008,  1.2669,  1.1241, -1.0697, -0.6838,
          1.2314,  1.3327,  0.9267, -0.8576,  0.6215, -0.3136, -1.1670]],
       device='cuda:0') tensor(0.4406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
487000 特征值优化 tensor(1.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3318,  3.2600,  0.4559,  0.1009,  1.2484,  1.1108, -1.1664, -0.6828,
          1.2016,  1.3055,  0.9857, -0.8245,  0.6056, -0.3083, -1.1604]],
       device='cuda:0') tensor(0.3802, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
488000 特征值优化 tensor(1.1830, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3233,  3.5592,  0.6188, -0.1319,  1.2383,  1.0590, -1.2341, -0.6565,
          1.1660,  1.2723,  1.0103, -0.7903,  0.5889, -0.3053, -1.1583]],
       device='cuda:0') tensor(0.4576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
489000 正交保障 tensor(0.4423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3200,  3.7622,  0.7617, -0.3089,  1.2437,  1.0119, -1.2955, -0.5975,
          1.1276,  1.2463,  0.9982, -0.7717,  0.5964, -0.3054, -1.1582]],
       device='cuda:0') tensor(0.4423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
490000 正交保障 tensor(0.4040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3450,  3.9181,  0.9231, -0.4656,  1.2328,  0.9651, -1.3410, -0.5104,
          1.0897,  1.2110,  0.9499, -0.7553,  0.6095, -0.3025, -1.1560]],
       device='cuda:0') tensor(0.4040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
491000 特征值优化 tensor(1.1504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3715,  4.0872,  1.0459, -0.5962,  1.2406,  0.9284, -1.3700, -0.4335,
          1.0553,  1.1829,  0.9238, -0.7375,  0.6267, -0.2992, -1.1573]],
       device='cuda:0') tensor(0.4508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
492000 特征值优化 tensor(1.1422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3948,  4.2432,  1.1675, -0.6873,  1.2434,  0.8763, -1.3811, -0.3664,
          1.0322,  1.1523,  0.9056, -0.7153,  0.6385, -0.2972, -1.1571]],
       device='cuda:0') tensor(0.4296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
493000 特征值优化 tensor(1.1349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4205,  4.3886,  1.2803, -0.7636,  1.2474,  0.8317, -1.3849, -0.2992,
          1.0143,  1.1229,  0.9010, -0.6909,  0.6497, -0.2976, -1.1570]],
       device='cuda:0') tensor(0.4269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
494000 特征值优化 tensor(1.1293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4301,  4.5175,  1.3651, -0.8141,  1.2549,  0.7753, -1.3895, -0.2459,
          0.9884,  1.1088,  0.9139, -0.6755,  0.6452, -0.2974, -1.1592]],
       device='cuda:0') tensor(0.4224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
495000 特征值优化 tensor(1.1248, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4411,  4.6332,  1.4452, -0.8705,  1.2709,  0.7451, -1.3892, -0.2037,
          0.9718,  1.0872,  0.9368, -0.6595,  0.6502, -0.2962, -1.1642]],
       device='cuda:0') tensor(0.4188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
496000 特征值优化 tensor(9.9991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0239,  0.9261,  1.2132, -1.2298,  0.5463,  0.4411,  0.6546, -0.6613,
          0.9163, -0.2998,  0.3936,  1.7413,  0.6203, -2.6429, -0.8931]],
       device='cuda:0') tensor(0.7730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
497000 特征值优化 tensor(4.8068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8094,  0.0599,  0.8202, -0.4661,  1.3698,  0.0605,  0.0146, -0.1040,
          0.6230, -0.4141,  0.1373,  1.6064,  0.6501, -1.7131, -0.8857]],
       device='cuda:0') tensor(0.5823, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
498000 特征值优化 tensor(1.9914, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4594, -0.1502,  0.6423,  0.1780,  2.1440,  0.0324,  0.0034, -0.0840,
          0.6661, -0.5379,  0.1875,  1.8427,  0.7870, -0.8888, -1.2921]],
       device='cuda:0') tensor(0.5024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
499000 特征值优化 tensor(1.6825, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6568, -0.0669,  0.3418,  0.5881,  2.4089,  0.0181,  0.0118, -0.0755,
          0.6966, -0.5607,  0.2624,  1.9488,  0.8218, -0.6564, -1.4264]],
       device='cuda:0') tensor(0.4989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
500000 特征值优化 tensor(1.6671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7564e+00, -2.4436e-03,  2.4629e-01,  7.2597e-01,  2.4896e+00,
          3.5805e-03, -1.9464e-03, -5.7159e-02,  7.1671e-01, -5.7304e-01,
          2.5743e-01,  1.9850e+00,  8.4102e-01, -6.3378e-01, -1.4581e+00]],
       device='cuda:0') tensor(0.4981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
501000 特征值优化 tensor(1.6641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8158,  0.0653,  0.2010,  0.7112,  2.5418, -0.0071, -0.0192, -0.0456,
          0.7275, -0.5791,  0.2643,  1.9964,  0.8439, -0.6480, -1.4725]],
       device='cuda:0') tensor(0.5257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
502000 特征值优化 tensor(1.6588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9118,  0.1806,  0.1303,  0.6770,  2.6369, -0.0217, -0.0482, -0.0279,
          0.7394, -0.5818,  0.2793,  2.0126,  0.8464, -0.6704, -1.5017]],
       device='cuda:0') tensor(0.4866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
503000 正交保障 tensor(0.5129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0094,  0.3166,  0.0382,  0.6238,  2.7592, -0.0395, -0.0846, -0.0059,
          0.7533, -0.5905,  0.2978,  2.0314,  0.8486, -0.7010, -1.5380]],
       device='cuda:0') tensor(0.5129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
504000 特征值优化 tensor(1.6449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1113,  0.4204, -0.0604,  0.6455,  2.9214, -0.0492, -0.1082,  0.0212,
          0.7789, -0.6050,  0.3007,  2.0581,  0.8604, -0.7410, -1.5859]],
       device='cuda:0') tensor(0.5100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
505000 特征值优化 tensor(1.6401, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1991,  0.5105, -0.1343,  0.6632,  3.0618, -0.0564, -0.1273,  0.0343,
          0.7985, -0.6174,  0.3282,  2.0781,  0.8704, -0.7775, -1.6225]],
       device='cuda:0') tensor(0.5023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
506000 特征值优化 tensor(1.6361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2718,  0.5910, -0.1987,  0.6494,  3.1862, -0.0695, -0.1485,  0.0498,
          0.8110, -0.6274,  0.3343,  2.0952,  0.8746, -0.8069, -1.6575]],
       device='cuda:0') tensor(0.4715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
507000 特征值优化 tensor(1.6322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3677,  0.6633, -0.2543,  0.6407,  3.3207, -0.0704, -0.1652,  0.0633,
          0.8241, -0.6346,  0.3617,  2.1122,  0.8801, -0.8402, -1.6888]],
       device='cuda:0') tensor(0.4858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
508000 正交保障 tensor(0.2489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3682,  1.2166, -0.7840,  0.4757, -0.5965, -2.1594, -0.2336, -0.2824,
         -0.5024,  0.5827, -0.9175, -0.2798, -1.4590, -0.0825,  0.3469]],
       device='cuda:0') tensor(0.2489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
509000 正交保障 tensor(0.3361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6264,  1.7515, -1.0138,  0.7799,  0.1935, -1.3269,  0.6054, -0.4889,
         -0.1319,  1.0906, -0.4887,  0.0740, -1.3542, -0.0560,  0.9103]],
       device='cuda:0') tensor(0.3361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
510000 特征值优化 tensor(1.5651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1804,  1.4947, -1.3969,  0.5892,  0.5554, -1.1552,  0.8685, -0.4040,
         -0.1829,  1.1872, -0.5424,  0.0368, -1.3303, -0.1388,  1.0148]],
       device='cuda:0') tensor(0.3531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
511000 特征值优化 tensor(1.5266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0544,  1.5997, -1.6261,  0.5652,  0.6654, -1.1594,  0.9336, -0.4157,
         -0.2012,  1.2305, -0.7092,  0.0269, -1.2872, -0.1803,  1.0436]],
       device='cuda:0') tensor(0.3439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
512000 正交保障 tensor(0.3438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3033,  1.8033, -1.8728,  0.4906,  0.8522, -1.1665,  0.9731, -0.4545,
         -0.2134,  1.2247, -0.8338,  0.0156, -1.2432, -0.2270,  1.0961]],
       device='cuda:0') tensor(0.3438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
513000 特征值优化 tensor(1.4726, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5518,  2.0532, -2.0707,  0.3356,  0.8895, -1.1619,  0.9758, -0.5053,
         -0.2104,  1.1812, -0.8798,  0.0037, -1.1945, -0.2511,  1.0985]],
       device='cuda:0') tensor(0.3797, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
514000 特征值优化 tensor(1.4595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7351,  2.2872, -2.2401,  0.2287,  0.9119, -1.1382,  0.9344, -0.5544,
         -0.2106,  1.1364, -0.8674, -0.0109, -1.1568, -0.2546,  1.1043]],
       device='cuda:0') tensor(0.3920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
515000 特征值优化 tensor(1.4506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8454,  2.4807, -2.3814,  0.1612,  0.9408, -1.1208,  0.8977, -0.6023,
         -0.2136,  1.0976, -0.8478, -0.0239, -1.1244, -0.2597,  1.1084]],
       device='cuda:0') tensor(0.3672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
516000 特征值优化 tensor(1.4440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9340,  2.6545, -2.5195,  0.1348,  0.9478, -1.1388,  0.8902, -0.6459,
         -0.2100,  1.0590, -0.8613, -0.0339, -1.1006, -0.2587,  1.1111]],
       device='cuda:0') tensor(0.4274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
517000 特征值优化 tensor(1.4390, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9915,  2.8066, -2.6445,  0.1229,  0.9545, -1.1623,  0.8792, -0.6868,
         -0.2114,  1.0298, -0.8729, -0.0426, -1.0759, -0.2576,  1.1124]],
       device='cuda:0') tensor(0.4061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
518000 特征值优化 tensor(1.4358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0314,  2.9240, -2.7413,  0.1295,  0.9569, -1.1827,  0.8734, -0.7223,
         -0.2196,  1.0138, -0.8780, -0.0475, -1.0526, -0.2574,  1.1114]],
       device='cuda:0') tensor(0.4281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
519000 特征值优化 tensor(1.4340, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0426,  3.0185, -2.8152,  0.1590,  0.9562, -1.1888,  0.8656, -0.7442,
         -0.2238,  0.9957, -0.8717, -0.0539, -1.0450, -0.2564,  1.1088]],
       device='cuda:0') tensor(0.3830, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
520000 特征值优化 tensor(2.0358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5884e+00,  9.7020e-02, -1.1123e+00,  3.2049e-01, -6.0521e-02,
         -4.2033e-01, -4.3509e-01,  5.9082e-01,  1.3573e+00, -3.1324e-01,
          1.6930e+00, -1.1156e+00, -2.6992e-01, -1.0501e-04, -8.0824e-01]],
       device='cuda:0') tensor(0.2985, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
521000 特征值优化 tensor(1.4482, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9849,  0.1549, -1.2865,  0.1356,  0.6725,  0.0647, -0.4681,  0.6055,
          1.3818, -0.3474,  1.5415, -1.2764, -0.3565, -0.1773, -1.0242]],
       device='cuda:0') tensor(0.3540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
522000 正交保障 tensor(0.4119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2637,  0.0856, -1.4888, -0.2961,  1.0628,  0.2761, -0.5025,  0.7425,
          1.4308, -0.3292,  1.6456, -1.3519, -0.3614, -0.2680, -1.1167]],
       device='cuda:0') tensor(0.4119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
523000 特征值优化 tensor(1.2650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4635,  0.0171, -1.7162, -0.6378,  1.2004,  0.3223, -0.5188,  0.8590,
          1.4415, -0.3049,  1.7575, -1.3558, -0.3309, -0.3049, -1.1508]],
       device='cuda:0') tensor(0.4226, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
524000 特征值优化 tensor(1.2398, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6441, -0.0435, -1.9494, -0.9520,  1.3021,  0.3362, -0.5076,  0.9403,
          1.4506, -0.2783,  1.8489, -1.3452, -0.2963, -0.3271, -1.1746]],
       device='cuda:0') tensor(0.4189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
525000 特征值优化 tensor(1.2235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8033, -0.0658, -2.1854, -1.2483,  1.3598,  0.3267, -0.4869,  0.9891,
          1.4505, -0.2620,  1.9117, -1.3189, -0.2743, -0.3411, -1.1896]],
       device='cuda:0') tensor(0.4615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
526000 正交保障 tensor(0.4136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9387, -0.0789, -2.4285, -1.5473,  1.3829,  0.2651, -0.4758,  1.0110,
          1.4228, -0.2510,  1.8728, -1.2902, -0.2589, -0.3425, -1.1954]],
       device='cuda:0') tensor(0.4136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
527000 特征值优化 tensor(1.1808, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.1338, -0.0502, -2.7236, -1.8399,  1.2540,  0.1960, -0.4249,  0.9818,
          1.3772, -0.2424,  1.8329, -1.2420, -0.2376, -0.3006, -1.1643]],
       device='cuda:0') tensor(0.4183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
528000 特征值优化 tensor(1.1674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2191, -0.0087, -2.9434, -2.0125,  1.2362,  0.0586, -0.3532,  0.9522,
          1.3573, -0.2286,  1.8178, -1.2055, -0.2179, -0.3026, -1.1571]],
       device='cuda:0') tensor(0.3895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
529000 特征值优化 tensor(1.1568, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2388,  0.0380, -3.1321, -2.1405,  1.2434, -0.0505, -0.3015,  0.9095,
          1.3435, -0.2291,  1.8420, -1.1603, -0.2145, -0.2994, -1.1586]],
       device='cuda:0') tensor(0.4431, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
530000 特征值优化 tensor(1.1462, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.2781,  0.0928, -3.3244, -2.2892,  1.2455, -0.1397, -0.2385,  0.8693,
          1.3256, -0.2280,  1.8606, -1.1148, -0.2081, -0.2986, -1.1575]],
       device='cuda:0') tensor(0.3727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
531000 特征值优化 tensor(1.1377, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3599,  0.1381, -3.4820, -2.4364,  1.2508, -0.2020, -0.1739,  0.8406,
          1.3062, -0.2264,  1.8663, -1.0809, -0.1975, -0.2968, -1.1588]],
       device='cuda:0') tensor(0.4014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
532000 正交保障 tensor(0.4245, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.4701,  0.1946, -3.6361, -2.5794,  1.2716, -0.2369, -0.1165,  0.8172,
          1.2875, -0.2153,  1.8787, -1.0527, -0.1881, -0.2947, -1.1631]],
       device='cuda:0') tensor(0.4245, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
533000 特征值优化 tensor(1.1244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.5903,  0.2498, -3.7763, -2.7137,  1.2880, -0.2516, -0.0588,  0.8090,
          1.2786, -0.2074,  1.8972, -1.0204, -0.1793, -0.2946, -1.1684]],
       device='cuda:0') tensor(0.4393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
534000 特征值优化 tensor(1.1207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.6907,  0.2953, -3.8841, -2.8056,  1.2915, -0.2545, -0.0128,  0.8013,
          1.2651, -0.1971,  1.9116, -1.0016, -0.1717, -0.2920, -1.1693]],
       device='cuda:0') tensor(0.3880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
535000 特征值优化 tensor(3.9989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4180,  0.0271, -0.9317,  2.9659,  0.3679, -0.4201,  0.4281, -0.2170,
         -0.0948,  1.1782, -0.4933,  1.3495, -0.8472, -1.1429, -0.6134]],
       device='cuda:0') tensor(0.4606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
536000 特征值优化 tensor(1.9976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0198,  0.2800, -0.7744,  3.0411,  1.0314, -0.4029,  0.1749, -0.2564,
         -0.1528,  1.3972,  0.0915,  1.5438, -0.9732, -0.4824, -1.0459]],
       device='cuda:0') tensor(0.4088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
537000 特征值优化 tensor(1.8821, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2992,  0.2873, -0.5459,  2.7998,  1.2406, -0.2863,  0.0812, -0.1446,
         -0.1574,  1.3743,  0.2937,  1.4980, -0.9578, -0.3358, -1.1051]],
       device='cuda:0') tensor(0.4088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
538000 特征值优化 tensor(1.8470, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6368,  0.2177, -0.3977,  2.5653,  1.2674, -0.1728,  0.0410, -0.0774,
         -0.1554,  1.4019,  0.2443,  1.5046, -0.9706, -0.3334, -1.1253]],
       device='cuda:0') tensor(0.4365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
539000 特征值优化 tensor(1.8184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9898,  0.1405, -0.2526,  2.2738,  1.2681, -0.1256,  0.0199, -0.0447,
         -0.1562,  1.4254,  0.1619,  1.5145, -0.9701, -0.3400, -1.1245]],
       device='cuda:0') tensor(0.3809, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
540000 特征值优化 tensor(1.8088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1751,  0.1504, -0.2248,  2.0249,  1.1936, -0.1157,  0.0324, -0.0482,
         -0.1508,  1.4278,  0.0916,  1.4967, -0.9612, -0.3312, -1.0940]],
       device='cuda:0') tensor(0.4122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
541000 特征值优化 tensor(1.8007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2297,  0.2026, -0.2778,  1.7008,  1.0935, -0.1076,  0.0447, -0.0620,
         -0.1475,  1.4111,  0.0020,  1.4608, -0.9418, -0.3093, -1.0734]],
       device='cuda:0') tensor(0.3386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
542000 特征值优化 tensor(1.7873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3896,  0.2348, -0.2900,  1.3167,  1.0242, -0.0762,  0.0530, -0.0677,
         -0.1450,  1.4056, -0.0954,  1.4305, -0.9219, -0.2931, -1.0648]],
       device='cuda:0') tensor(0.3906, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
543000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3871,  0.2554, -0.3138,  1.2397,  0.9912, -0.0800,  0.0587, -0.0751,
         -0.1473,  1.4005, -0.1144,  1.4182, -0.9169, -0.2861, -1.0616]],
       device='cuda:0') tensor(0.3694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
544000 特征值优化 tensor(1.7868, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3876,  0.2537, -0.3152,  1.2386,  0.9897, -0.0793,  0.0607, -0.0754,
         -0.1446,  1.3994, -0.1147,  1.4198, -0.9158, -0.2836, -1.0595]],
       device='cuda:0') tensor(0.3832, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
545000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3904,  0.2522, -0.3153,  1.2386,  0.9863, -0.0792,  0.0595, -0.0748,
         -0.1438,  1.3984, -0.1154,  1.4207, -0.9141, -0.2835, -1.0565]],
       device='cuda:0') tensor(0.3818, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
546000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3892,  0.2501, -0.3164,  1.2392,  0.9825, -0.0797,  0.0597, -0.0752,
         -0.1411,  1.3982, -0.1152,  1.4214, -0.9127, -0.2844, -1.0583]],
       device='cuda:0') tensor(0.3626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
547000 特征值优化 tensor(2.6071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6413,  1.7395, -1.4771, -1.5344,  1.5536,  0.8114, -0.5850,  0.1489,
         -0.6181,  2.0601,  0.6906, -0.5670,  0.1768,  0.3210, -0.0721]],
       device='cuda:0') tensor(0.2837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
548000 特征值优化 tensor(1.8819, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3390,  2.2049, -1.9083, -1.8301,  1.8868,  0.6141, -0.6810,  0.3047,
         -0.6193,  2.0860,  0.2937, -0.6885,  0.2131,  0.0583, -0.1029]],
       device='cuda:0') tensor(0.2949, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
549000 特征值优化 tensor(1.7216, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1184,  2.5545, -2.1268, -1.9342,  2.1827,  0.2732, -0.6858,  0.5005,
         -0.5999,  1.9926,  0.3870, -0.6769,  0.1881,  0.1196, -0.1953]],
       device='cuda:0') tensor(0.3363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
550000 特征值优化 tensor(1.6343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3729,  2.8037, -2.3642, -2.0792,  2.5597,  0.2464, -0.7192,  0.5690,
         -0.6035,  1.9664,  0.4861, -0.6817,  0.1843,  0.1997, -0.3112]],
       device='cuda:0') tensor(0.3419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
551000 特征值优化 tensor(1.6231, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5811,  2.8593, -2.4020, -2.1830,  2.6937,  0.2613, -0.7343,  0.5918,
         -0.6048,  1.9472,  0.5214, -0.6769,  0.1746,  0.2398, -0.3410]],
       device='cuda:0') tensor(0.3168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
552000 特征值优化 tensor(1.6189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7687,  2.8426, -2.3781, -2.2634,  2.7362,  0.2744, -0.7319,  0.5953,
         -0.6019,  1.9157,  0.5479, -0.6656,  0.1643,  0.2465, -0.3534]],
       device='cuda:0') tensor(0.3203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
553000 正交保障 tensor(0.3496, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9511,  2.8142, -2.3375, -2.3325,  2.7549,  0.2899, -0.7224,  0.5870,
         -0.5937,  1.8823,  0.5676, -0.6478,  0.1533,  0.2451, -0.3597]],
       device='cuda:0') tensor(0.3496, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
554000 特征值优化 tensor(1.6131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1274,  2.7633, -2.2720, -2.3970,  2.7590,  0.3174, -0.7080,  0.5717,
         -0.5869,  1.8535,  0.5956, -0.6277,  0.1425,  0.2435, -0.3614]],
       device='cuda:0') tensor(0.3840, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
555000 特征值优化 tensor(1.6107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3107,  2.7209, -2.2083, -2.5005,  2.7468,  0.3466, -0.6955,  0.5560,
         -0.5788,  1.8182,  0.6166, -0.6071,  0.1283,  0.2342, -0.3614]],
       device='cuda:0') tensor(0.3617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
556000 正交保障 tensor(0.3428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4628,  2.6963, -2.1706, -2.5625,  2.6930,  0.3707, -0.6825,  0.5461,
         -0.5678,  1.7851,  0.6333, -0.5902,  0.1168,  0.2186, -0.3479]],
       device='cuda:0') tensor(0.3428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
557000 特征值优化 tensor(1.6088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5857,  2.6705, -2.1401, -2.6249,  2.6782,  0.3934, -0.6747,  0.5390,
         -0.5596,  1.7605,  0.6447, -0.5727,  0.1082,  0.2146, -0.3406]],
       device='cuda:0') tensor(0.3316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
558000 特征值优化 tensor(7.9375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1834, -0.0891, -0.8355,  1.7640, -1.4128,  0.1779, -1.9176,  2.3433,
          1.7599,  1.1162,  0.6705,  1.7062,  0.1594, -0.5833, -0.6091]],
       device='cuda:0') tensor(0.3984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
559000 特征值优化 tensor(2.2794, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7932,  0.5115, -1.5249,  2.3345, -0.5648,  1.0063, -1.1849,  1.7418,
          1.1470,  0.9058,  1.4278,  1.1900, -0.3122, -0.0935, -0.6529]],
       device='cuda:0') tensor(0.3143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
560000 特征值优化 tensor(2.0567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8138,  0.6266, -1.6771,  2.3301, -0.1723,  1.1377, -1.1080,  1.7185,
          1.1481,  0.9902,  1.5400,  1.2319, -0.4086, -0.1708, -0.7230]],
       device='cuda:0') tensor(0.3392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
561000 特征值优化 tensor(2.0398, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8060,  0.6994, -1.7434,  2.2971, -0.0818,  1.2167, -1.0686,  1.7328,
          1.1275,  1.0106,  1.6050,  1.2378, -0.4500, -0.1883, -0.7415]],
       device='cuda:0') tensor(0.3378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
562000 特征值优化 tensor(2.0357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7797,  0.7545, -1.7874,  2.2483, -0.0741,  1.2936, -1.0351,  1.7354,
          1.1083,  1.0147,  1.6677,  1.2401, -0.4712, -0.1894, -0.7458]],
       device='cuda:0') tensor(0.3848, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
563000 特征值优化 tensor(2.0341, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7602,  0.7966, -1.8211,  2.1953, -0.0738,  1.3461, -1.0095,  1.7329,
          1.0945,  1.0172,  1.6958,  1.2376, -0.4828, -0.1902, -0.7457]],
       device='cuda:0') tensor(0.3440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
564000 特征值优化 tensor(2.0337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7387,  0.8233, -1.8456,  2.1571, -0.0773,  1.3688, -0.9872,  1.7248,
          1.0861,  1.0142,  1.7028,  1.2350, -0.4906, -0.1907, -0.7440]],
       device='cuda:0') tensor(0.3954, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
565000 正交保障 tensor(0.3637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7029,  0.8617, -1.8523,  2.1126, -0.0705,  1.3761, -0.9691,  1.7177,
          1.0800,  1.0137,  1.6955,  1.2325, -0.4950, -0.1924, -0.7447]],
       device='cuda:0') tensor(0.3637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
566000 特征值优化 tensor(2.0331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6514,  0.8811, -1.8526,  2.0616, -0.0775,  1.3683, -0.9484,  1.7131,
          1.0703,  1.0129,  1.6815,  1.2282, -0.4970, -0.1949, -0.7417]],
       device='cuda:0') tensor(0.3443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
567000 特征值优化 tensor(2.0329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6226,  0.9106, -1.8566,  2.0210, -0.0809,  1.3656, -0.9304,  1.7030,
          1.0641,  1.0121,  1.6636,  1.2245, -0.5020, -0.1945, -0.7407]],
       device='cuda:0') tensor(0.3490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
568000 特征值优化 tensor(2.0329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5967,  0.9228, -1.8597,  1.9881, -0.0887,  1.3534, -0.9126,  1.6872,
          1.0581,  1.0100,  1.6483,  1.2218, -0.5034, -0.1920, -0.7365]],
       device='cuda:0') tensor(0.3703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
569000 正交保障 tensor(0.3844, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5683,  0.9301, -1.8660,  1.9580, -0.1002,  1.3397, -0.8990,  1.6731,
          1.0508,  1.0081,  1.6320,  1.2194, -0.5033, -0.1909, -0.7337]],
       device='cuda:0') tensor(0.3844, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
570000 特征值优化 tensor(7.1363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8312,  0.8541, -0.2165, -1.3590,  0.4596,  1.6453, -0.4007, -0.5267,
          0.0909,  0.6351,  1.1456,  1.1295,  1.4025,  1.6775,  1.1956]],
       device='cuda:0') tensor(0.6994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
571000 特征值优化 tensor(2.9792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.3488,  0.9724,  0.1064, -0.7506,  1.1215,  0.7935, -0.1077, -0.2736,
          0.1527,  0.3559,  0.7946,  1.2488,  1.5682,  0.8557,  0.9714]],
       device='cuda:0') tensor(0.5072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
572000 特征值优化 tensor(2.0714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.9356,  0.8866,  0.1080, -0.3180,  1.3573,  0.3220,  0.1645, -0.0165,
          0.3154,  0.4474,  0.6471,  1.3527,  1.7434,  0.4759,  1.1271]],
       device='cuda:0') tensor(0.4314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
573000 特征值优化 tensor(1.7916, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[2.3563, 0.8742, 0.0643, 0.1041, 1.4403, 0.1090, 0.3073, 0.0206, 0.3470,
         0.4996, 0.0083, 1.3077, 1.6675, 0.3557, 1.1827]], device='cuda:0') tensor(0.3797, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
574000 特征值优化 tensor(1.6896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3535,  0.9192,  0.0603,  0.7268,  1.5832,  0.0915,  0.2363,  0.0157,
          0.3801,  0.5537, -0.2529,  1.3506,  1.7251,  0.4053,  1.2256]],
       device='cuda:0') tensor(0.4091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
575000 特征值优化 tensor(1.6745, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4029,  0.9951,  0.0610,  0.9187,  1.7629,  0.0975,  0.2624,  0.0162,
          0.4022,  0.5913, -0.2233,  1.3854,  1.7668,  0.4504,  1.2762]],
       device='cuda:0') tensor(0.4368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
576000 特征值优化 tensor(1.6646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4443,  1.1071,  0.0681,  1.0317,  1.9720,  0.0911,  0.2782,  0.0166,
          0.4160,  0.6115, -0.2337,  1.4120,  1.8025,  0.5026,  1.3311]],
       device='cuda:0') tensor(0.3884, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
577000 特征值优化 tensor(1.6557, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5105,  1.2029,  0.0744,  1.1243,  2.1884,  0.0854,  0.2987,  0.0171,
          0.4278,  0.6262, -0.2553,  1.4363,  1.8358,  0.5570,  1.3930]],
       device='cuda:0') tensor(0.3921, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
578000 特征值优化 tensor(1.6468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5571,  1.3055,  0.0850,  1.1728,  2.4391,  0.0765,  0.3170,  0.0203,
          0.4373,  0.6448, -0.2725,  1.4604,  1.8671,  0.6199,  1.4613]],
       device='cuda:0') tensor(0.4383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
579000 特征值优化 tensor(1.6403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6042,  1.4069,  0.0979,  1.2106,  2.6645,  0.0766,  0.3258,  0.0225,
          0.4442,  0.6577, -0.2880,  1.4819,  1.8945,  0.6754,  1.5196]],
       device='cuda:0') tensor(0.4883, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
580000 特征值优化 tensor(1.6358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6253,  1.4754,  0.1039,  1.2666,  2.8330,  0.0665,  0.3251,  0.0226,
          0.4513,  0.6674, -0.2988,  1.4980,  1.9194,  0.7182,  1.5643]],
       device='cuda:0') tensor(0.4595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
581000 特征值优化 tensor(1.6306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6556,  1.5814,  0.1166,  1.3336,  3.0035,  0.0570,  0.3158,  0.0238,
          0.4608,  0.6819, -0.3442,  1.5159,  1.9417,  0.7602,  1.6067]],
       device='cuda:0') tensor(0.4840, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
582000 特征值优化 tensor(1.6268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6913,  1.6488,  0.1263,  1.4187,  3.1572,  0.0427,  0.2982,  0.0226,
          0.4688,  0.6931, -0.3746,  1.5346,  1.9659,  0.7986,  1.6445]],
       device='cuda:0') tensor(0.5481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
583000 特征值优化 tensor(2.9069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4193,  0.8123, -0.5898,  0.1728, -0.5650,  1.8741, -0.4614,  0.4247,
         -0.1030, -1.5551,  0.2142, -0.1697,  0.3766,  0.4263, -0.6876]],
       device='cuda:0') tensor(0.3414, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
584000 特征值优化 tensor(1.6819, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2217,  1.2259, -0.9526,  0.5810,  0.1321,  1.9027, -0.5104,  0.4038,
         -0.1322, -1.5491,  0.2339, -0.3046,  0.5356,  0.1279, -0.8954]],
       device='cuda:0') tensor(0.3384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
585000 特征值优化 tensor(1.5553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2385,  1.3069, -1.0288,  0.6622,  0.5150,  1.8164, -0.5200,  0.4044,
         -0.1369, -1.5741,  0.2550, -0.3136,  0.5419,  0.1383, -1.0049]],
       device='cuda:0') tensor(0.3438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
586000 特征值优化 tensor(1.5336, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4083,  1.3704, -1.1005,  0.6980,  0.6434,  1.6409, -0.5404,  0.4123,
         -0.1218, -1.5799,  0.2923, -0.2760,  0.4967,  0.1771, -1.0421]],
       device='cuda:0') tensor(0.3321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
587000 特征值优化 tensor(1.5051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6400,  1.5385, -1.2715,  0.6917,  0.7963,  1.5509, -0.5938,  0.4534,
         -0.1209, -1.5559,  0.3471, -0.2294,  0.4398,  0.2190, -1.0816]],
       device='cuda:0') tensor(0.4165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
588000 正交保障 tensor(0.3501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8443,  1.7916, -1.5027,  0.6221,  0.8853,  1.5202, -0.6053,  0.4644,
         -0.1004, -1.5261,  0.3655, -0.1721,  0.3879,  0.2438, -1.1009]],
       device='cuda:0') tensor(0.3501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
589000 特征值优化 tensor(1.4686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0071,  1.9951, -1.6871,  0.6059,  0.9200,  1.5048, -0.6339,  0.4939,
         -0.0914, -1.4969,  0.3951, -0.1253,  0.3491,  0.2462, -1.1078]],
       device='cuda:0') tensor(0.3644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
590000 正交保障 tensor(0.3689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1299,  2.1656, -1.8320,  0.6085,  0.9385,  1.4908, -0.6571,  0.5202,
         -0.0853, -1.4684,  0.4290, -0.0921,  0.3204,  0.2501, -1.1106]],
       device='cuda:0') tensor(0.3689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
591000 特征值优化 tensor(1.4528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2228,  2.3259, -1.9767,  0.6633,  0.9406,  1.4818, -0.6825,  0.5496,
         -0.0817, -1.4458,  0.4548, -0.0617,  0.2873,  0.2469, -1.1093]],
       device='cuda:0') tensor(0.4086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
592000 正交保障 tensor(0.4003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2745,  2.4485, -2.0808,  0.7102,  0.9447,  1.4861, -0.7048,  0.5738,
         -0.0820, -1.4273,  0.4842, -0.0366,  0.2728,  0.2468, -1.1088]],
       device='cuda:0') tensor(0.4003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
593000 特征值优化 tensor(1.4426, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2945,  2.5815, -2.2024,  0.7786,  0.9574,  1.5511, -0.7390,  0.6049,
         -0.0803, -1.4162,  0.5194, -0.0163,  0.2511,  0.2584, -1.1129]],
       device='cuda:0') tensor(0.4004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
594000 特征值优化 tensor(4.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2069, -1.6502, -0.1657,  2.7560, -1.7142, -0.2108, -0.7463,  0.0629,
         -1.0969,  0.4042, -0.2810, -0.0846,  1.3342,  0.0459, -0.4391]],
       device='cuda:0') tensor(0.2378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
595000 特征值优化 tensor(2.6204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6589, -1.6168, -0.2854,  3.0569, -0.8568, -0.0781, -0.5363, -0.0591,
         -1.1772,  0.4867, -0.1657, -0.1304,  1.4321, -0.0805, -0.6348]],
       device='cuda:0') tensor(0.2775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
596000 特征值优化 tensor(2.2019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3586, -1.4094, -0.3192,  3.4233, -0.3529,  0.1821, -0.2818, -0.0987,
         -1.2444,  0.5570,  0.1082, -0.1667,  1.5219, -0.2365, -0.6364]],
       device='cuda:0') tensor(0.2734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
597000 特征值优化 tensor(2.1719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6259, -1.3332, -0.3189,  3.5725, -0.2171,  0.1708, -0.2265, -0.1115,
         -1.2735,  0.5772,  0.1597, -0.1731,  1.5578, -0.2657, -0.6610]],
       device='cuda:0') tensor(0.2807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
598000 特征值优化 tensor(2.1717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6339, -1.3221, -0.3177,  3.5534, -0.2125,  0.1642, -0.2193, -0.1291,
         -1.2764,  0.5803,  0.1723, -0.1735,  1.5585, -0.2668, -0.6606]],
       device='cuda:0') tensor(0.3294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
599000 特征值优化 tensor(2.1716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6320, -1.3191, -0.3140,  3.5248, -0.2147,  0.1619, -0.2189, -0.1405,
         -1.2757,  0.5832,  0.1854, -0.1761,  1.5553, -0.2650, -0.6608]],
       device='cuda:0') tensor(0.2733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
600000 特征值优化 tensor(2.1716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6342, -1.3085, -0.3144,  3.5006, -0.2129,  0.1561, -0.2142, -0.1525,
         -1.2761,  0.5843,  0.1958, -0.1788,  1.5536, -0.2648, -0.6607]],
       device='cuda:0') tensor(0.2689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
601000 特征值优化 tensor(2.1715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6386, -1.2906, -0.3173,  3.4683, -0.2138,  0.1561, -0.2158, -0.1606,
         -1.2769,  0.5853,  0.2012, -0.1754,  1.5524, -0.2645, -0.6614]],
       device='cuda:0') tensor(0.2857, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
602000 正交保障 tensor(0.2343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6385, -1.2804, -0.3220,  3.4369, -0.2140,  0.1561, -0.2163, -0.1649,
         -1.2755,  0.5846,  0.2098, -0.1773,  1.5515, -0.2631, -0.6599]],
       device='cuda:0') tensor(0.2343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
603000 特征值优化 tensor(2.1714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6430, -1.2696, -0.3239,  3.4071, -0.2117,  0.1551, -0.2161, -0.1698,
         -1.2753,  0.5858,  0.2193, -0.1776,  1.5508, -0.2646, -0.6608]],
       device='cuda:0') tensor(0.2930, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
604000 特征值优化 tensor(2.1715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6435, -1.2601, -0.3280,  3.3733, -0.2158,  0.1492, -0.2151, -0.1758,
         -1.2773,  0.5840,  0.2300, -0.1794,  1.5463, -0.2628, -0.6612]],
       device='cuda:0') tensor(0.2775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
605000 特征值优化 tensor(2.1714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6434, -1.2482, -0.3332,  3.3553, -0.2130,  0.1529, -0.2155, -0.1781,
         -1.2770,  0.5864,  0.2351, -0.1795,  1.5452, -0.2646, -0.6611]],
       device='cuda:0') tensor(0.2938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
606000 特征值优化 tensor(7.9242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1777, -0.2666,  0.1385, -0.1627, -1.1769,  0.3350, -0.5589, -1.1651,
          0.8022,  0.4976, -2.2953,  0.7419,  0.2441,  1.3215, -1.5793]],
       device='cuda:0') tensor(0.5757, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
607000 特征值优化 tensor(3.4608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6552, -0.7784, -0.3670,  0.1285, -0.3953, -0.2180, -0.4804, -0.8122,
          0.3458,  0.1973, -2.8038,  0.5686,  0.0531,  0.4875, -1.4750]],
       device='cuda:0') tensor(0.5050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
608000 特征值优化 tensor(2.7583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6771, -0.9966, -0.5757, -0.3534,  0.1677, -0.3133, -0.6828, -0.9002,
          0.3052,  0.1907, -3.3327,  0.5592,  0.0275,  0.2964, -1.6850]],
       device='cuda:0') tensor(0.5523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
609000 特征值优化 tensor(2.5629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6942, -1.0859, -0.7080, -0.6947,  0.6769, -0.3867, -0.7241, -0.9213,
          0.3868,  0.2360, -3.5400,  0.5509,  0.0444,  0.3056, -1.8475]],
       device='cuda:0') tensor(0.5694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
610000 特征值优化 tensor(2.4517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8623, -1.1836, -0.8180, -0.7411,  1.1221, -0.3718, -0.7108, -0.9254,
          0.5045,  0.2641, -3.5800,  0.5177,  0.0676,  0.2936, -1.9871]],
       device='cuda:0') tensor(0.5435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
611000 特征值优化 tensor(2.4201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0424, -1.2440, -0.8672, -0.5752,  1.3360, -0.3317, -0.6757, -0.9114,
          0.6043,  0.2830, -3.5480,  0.4977,  0.0761,  0.3273, -2.0516]],
       device='cuda:0') tensor(0.5217, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
612000 特征值优化 tensor(2.4085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0308, -1.2474, -0.8504, -0.4183,  1.4946, -0.3337, -0.6499, -0.9091,
          0.6646,  0.2914, -3.5943,  0.4966,  0.0817,  0.3579, -2.0987]],
       device='cuda:0') tensor(0.5580, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
613000 特征值优化 tensor(2.4028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0841, -1.2273, -0.8435, -0.2887,  1.5951, -0.3699, -0.6322, -0.8967,
          0.7057,  0.3003, -3.6151,  0.4931,  0.0829,  0.3821, -2.1246]],
       device='cuda:0') tensor(0.6397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
614000 特征值优化 tensor(2.3977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2265, -1.2470, -0.8765, -0.1905,  1.6814, -0.4021, -0.6047, -0.8755,
          0.7482,  0.3062, -3.5718,  0.4841,  0.0841,  0.3997, -2.1592]],
       device='cuda:0') tensor(0.5838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
615000 特征值优化 tensor(2.3968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2663, -1.2828, -0.9049, -0.1383,  1.6952, -0.4100, -0.5901, -0.8615,
          0.7630,  0.3053, -3.5494,  0.4728,  0.0836,  0.4026, -2.1627]],
       device='cuda:0') tensor(0.6815, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
616000 特征值优化 tensor(2.3962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3061, -1.3276, -0.9377, -0.1131,  1.7049, -0.4200, -0.5814, -0.8546,
          0.7724,  0.3042, -3.5499,  0.4678,  0.0842,  0.4006, -2.1634]],
       device='cuda:0') tensor(0.6162, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
617000 特征值优化 tensor(2.3961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3119, -1.3453, -0.9530, -0.1156,  1.7057, -0.4204, -0.5769, -0.8447,
          0.7725,  0.3039, -3.5367,  0.4645,  0.0853,  0.3998, -2.1634]],
       device='cuda:0') tensor(0.6309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
618000 特征值优化 tensor(6.7226, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4953,  0.0433,  0.4914,  0.5788,  0.6977, -0.4153, -0.5023, -0.1556,
          0.6774,  1.0099, -0.4881, -0.2297, -2.4471, -1.9506,  0.7269]],
       device='cuda:0') tensor(0.5185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
619000 正交保障 tensor(0.4406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2601,  0.5211, -0.2130,  1.0341,  1.2421, -0.0740,  0.0353, -0.1697,
          0.4787,  0.6606, -0.6669, -0.0793, -2.0370, -1.0925,  1.1407]],
       device='cuda:0') tensor(0.4406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
620000 特征值优化 tensor(1.7035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3156,  0.5794, -0.6077,  0.8592,  1.2331, -0.3129,  0.2750, -0.5379,
          0.4520,  0.5848, -1.2311, -0.0604, -1.9801, -0.4243,  1.2399]],
       device='cuda:0') tensor(0.3908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
621000 特征值优化 tensor(1.5640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1500,  0.5053, -0.9196,  0.6761,  0.8835, -0.3364,  0.3685, -0.5510,
          0.4172,  0.5183, -1.2947, -0.0504, -1.8984, -0.2445,  1.1182]],
       device='cuda:0') tensor(0.3822, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
622000 特征值优化 tensor(1.5449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9797,  0.5365, -1.1311,  0.5494,  0.8029, -0.2911,  0.3832, -0.4904,
          0.3928,  0.4816, -1.2250, -0.0381, -1.8690, -0.2167,  1.0945]],
       device='cuda:0') tensor(0.3671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
623000 正交保障 tensor(0.4044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8837,  0.6658, -1.3526,  0.4284,  0.8521, -0.3054,  0.3733, -0.5050,
          0.3589,  0.4573, -1.1469, -0.0361, -1.8413, -0.2255,  1.1079]],
       device='cuda:0') tensor(0.4044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
624000 特征值优化 tensor(1.5228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7920,  0.7742, -1.5580,  0.3629,  0.8815, -0.3266,  0.3736, -0.5294,
          0.3243,  0.4381, -1.0796, -0.0347, -1.8203, -0.2319,  1.1148]],
       device='cuda:0') tensor(0.3701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
625000 特征值优化 tensor(1.5163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7263,  0.8636, -1.7370,  0.3516,  0.8940, -0.3404,  0.3780, -0.5538,
          0.2934,  0.4282, -1.0190, -0.0419, -1.7995, -0.2335,  1.1154]],
       device='cuda:0') tensor(0.4054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
626000 特征值优化 tensor(1.5108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6943,  0.9247, -1.8860,  0.3818,  0.9189, -0.3607,  0.3841, -0.5800,
          0.2681,  0.4156, -1.0090, -0.0433, -1.7957, -0.2478,  1.1186]],
       device='cuda:0') tensor(0.3617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
627000 特征值优化 tensor(1.5063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6784,  0.9942, -2.0404,  0.4695,  0.9196, -0.3731,  0.3967, -0.6107,
          0.2400,  0.3997, -0.9995, -0.0397, -1.8018, -0.2484,  1.1179]],
       device='cuda:0') tensor(0.4042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
628000 特征值优化 tensor(1.5029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6853,  1.0336, -2.1660,  0.5840,  0.9379, -0.3831,  0.4007, -0.6331,
          0.2157,  0.3936, -0.9693, -0.0456, -1.8122, -0.2509,  1.1238]],
       device='cuda:0') tensor(0.3658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
629000 正交保障 tensor(0.4087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7007,  1.0743, -2.2803,  0.6948,  0.9429, -0.3820,  0.4068, -0.6493,
          0.1916,  0.3899, -0.9421, -0.0483, -1.8204, -0.2503,  1.1217]],
       device='cuda:0') tensor(0.4087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
630000 特征值优化 tensor(3.1252, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0547,  2.1827, -1.7992, -0.2304,  0.8383,  0.7774, -1.4829,  0.6293,
         -0.2478, -1.3616,  1.4792, -0.4996,  0.1773, -0.1337,  1.1695]],
       device='cuda:0') tensor(0.4259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
631000 正交保障 tensor(0.3657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8629,  1.9627, -1.9271,  0.0831,  1.0209,  0.5943, -0.8898,  0.4648,
         -0.0255, -1.4839,  0.6031, -0.7112,  0.4930,  0.0225,  1.0565]],
       device='cuda:0') tensor(0.3657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
632000 特征值优化 tensor(1.9878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6205,  1.5009, -1.6446,  0.0918,  1.0909,  0.4877, -0.3741,  0.2350,
          0.0530, -1.3695,  0.3054, -0.7047,  0.5812,  0.0929,  1.0991]],
       device='cuda:0') tensor(0.3681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
633000 正交保障 tensor(0.4110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2237,  1.2851, -1.4232,  0.2342,  1.3182,  0.3907, -0.1952,  0.1859,
          0.0725, -1.4376,  0.1867, -0.7534,  0.6437,  0.2296,  1.1600]],
       device='cuda:0') tensor(0.4110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
634000 特征值优化 tensor(1.8648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7970,  1.1174, -1.2199,  0.4556,  1.5949,  0.2687, -0.1307,  0.1316,
          0.0743, -1.5357,  0.1287, -0.8075,  0.6860,  0.3169,  1.2347]],
       device='cuda:0') tensor(0.4021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
635000 特征值优化 tensor(1.8281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3671,  0.9352, -1.0112,  0.7162,  1.8691,  0.1593, -0.0761,  0.0792,
          0.0828, -1.6416,  0.0763, -0.8564,  0.7300,  0.4162,  1.3011]],
       device='cuda:0') tensor(0.4062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
636000 特征值优化 tensor(1.7922, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0787,  0.7373, -0.7938,  0.9785,  2.1139,  0.0383, -0.0222,  0.0217,
          0.0843, -1.7465,  0.0243, -0.9063,  0.7713,  0.5148,  1.3641]],
       device='cuda:0') tensor(0.4468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
637000 特征值优化 tensor(1.6754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8374,  0.3547, -0.3935,  1.4615,  2.4487, -0.2084,  0.0788, -0.0881,
          0.0937, -1.8999, -0.0657, -0.9847,  0.8441,  0.6222,  1.4473]],
       device='cuda:0') tensor(0.4200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
638000 特征值优化 tensor(1.6635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9297,  0.2827, -0.3258,  1.5771,  2.6734, -0.2112,  0.0707, -0.0796,
          0.0950, -1.9542, -0.0503, -1.0111,  0.8717,  0.6809,  1.5062]],
       device='cuda:0') tensor(0.4646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
639000 特征值优化 tensor(1.6584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8464,  0.2449, -0.3118,  1.6654,  2.8523, -0.2376,  0.0601, -0.0761,
          0.0967, -1.9704, -0.0314, -1.0217,  0.8792,  0.7242,  1.5538]],
       device='cuda:0') tensor(0.4808, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
640000 特征值优化 tensor(1.6521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7316,  0.1785, -0.2747,  1.8070,  3.0220, -0.2749,  0.0442, -0.0674,
          0.0982, -1.9868, -0.0056, -1.0328,  0.8939,  0.7671,  1.5994]],
       device='cuda:0') tensor(0.4961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
641000 特征值优化 tensor(1.6447, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5933,  0.0911, -0.2120,  1.9588,  3.1871, -0.3161,  0.0218, -0.0522,
          0.1036, -2.0004,  0.0257, -1.0503,  0.9098,  0.8084,  1.6477]],
       device='cuda:0') tensor(0.5086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
642000 特征值优化 tensor(1.6384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 5.0645e-01, -4.7026e-03, -1.4014e-01,  2.1226e+00,  3.3285e+00,
         -3.4582e-01, -2.2377e-03, -3.3137e-02,  1.0288e-01, -2.0155e+00,
          5.7418e-02, -1.0716e+00,  9.3166e-01,  8.4264e-01,  1.6877e+00]],
       device='cuda:0') tensor(0.5407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
643000 正交保障 tensor(0.3591, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7579, -1.0155,  0.7352,  1.8866, -0.0276,  1.4999,  1.0656,  0.1109,
          1.3074, -0.2074, -0.6096,  1.0435, -0.6478, -0.6551, -0.3221]],
       device='cuda:0') tensor(0.3591, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
644000 特征值优化 tensor(1.6062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5152, -1.0834,  0.8955,  2.2370,  0.3435,  1.7863,  0.7957, -0.0342,
          1.4124, -0.1473, -0.0894,  1.1210, -0.8207, -0.1937, -0.9032]],
       device='cuda:0') tensor(0.3306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
645000 正交保障 tensor(0.3942, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1120, -1.1376,  1.2213,  2.5158,  1.0349,  1.9054,  0.8639, -0.0590,
          1.5629, -0.1186,  0.1452,  1.1020, -0.8613, -0.2607, -1.1092]],
       device='cuda:0') tensor(0.3942, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
646000 正交保障 tensor(0.4151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2336, -1.2602,  1.5090,  2.6996,  1.2063,  1.9959,  0.9664, -0.1264,
          1.5806, -0.0913,  0.1910,  1.0709, -0.8891, -0.3044, -1.1514]],
       device='cuda:0') tensor(0.4151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
647000 特征值优化 tensor(1.2371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5235, -1.4062,  1.7221,  2.8408,  1.3065,  2.0729,  1.0223, -0.1897,
          1.5711, -0.0698,  0.2306,  1.0494, -0.9025, -0.3293, -1.1769]],
       device='cuda:0') tensor(0.4198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
648000 正交保障 tensor(0.4352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7857, -1.5714,  1.8831,  2.9443,  1.3451,  2.1167,  1.0491, -0.2358,
          1.5445, -0.0588,  0.2407,  1.0358, -0.9043, -0.3395, -1.1867]],
       device='cuda:0') tensor(0.4352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
649000 正交保障 tensor(0.4761, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0730, -1.7483,  2.0670,  3.0542,  1.3739,  2.0779,  1.0683, -0.2495,
          1.5131, -0.0600,  0.1825,  1.0124, -0.8886, -0.3407, -1.1942]],
       device='cuda:0') tensor(0.4761, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
650000 特征值优化 tensor(1.1840, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3518, -1.9759,  2.2310,  3.2162,  1.2609,  2.0190,  1.0363, -0.2884,
          1.4598, -0.0537,  0.1421,  0.9830, -0.8613, -0.3016, -1.1665]],
       device='cuda:0') tensor(0.4686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
651000 特征值优化 tensor(1.1704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5381, -2.1814,  2.3380,  3.3165,  1.2395,  1.9683,  0.9724, -0.3407,
          1.4055, -0.0520,  0.0355,  0.9777, -0.8641, -0.3041, -1.1587]],
       device='cuda:0') tensor(0.4008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
652000 特征值优化 tensor(1.1588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6912, -2.3807,  2.4143,  3.3841,  1.2378,  1.9683,  0.8990, -0.3738,
          1.3433, -0.0576, -0.0786,  0.9818, -0.8603, -0.3031, -1.1577]],
       device='cuda:0') tensor(0.3726, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
653000 特征值优化 tensor(1.1489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.8475, -2.5589,  2.5009,  3.4373,  1.2430,  1.9753,  0.8323, -0.4130,
          1.2982, -0.0509, -0.1590,  0.9736, -0.8506, -0.2987, -1.1572]],
       device='cuda:0') tensor(0.4299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
654000 特征值优化 tensor(1.1396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.0050, -2.7384,  2.5769,  3.5186,  1.2451,  1.9631,  0.7674, -0.4526,
          1.2479, -0.0484, -0.2191,  0.9723, -0.8380, -0.2978, -1.1580]],
       device='cuda:0') tensor(0.4296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
655000 特征值优化 tensor(1.1326, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1334, -2.8860,  2.6308,  3.5960,  1.2523,  1.9488,  0.7125, -0.4895,
          1.2061, -0.0540, -0.2552,  0.9637, -0.8354, -0.2973, -1.1581]],
       device='cuda:0') tensor(0.3852, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
656000 特征值优化 tensor(1.1265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.2476, -3.0227,  2.6979,  3.6854,  1.2724,  1.9412,  0.6671, -0.5288,
          1.1691, -0.0550, -0.2697,  0.9567, -0.8286, -0.2966, -1.1638]],
       device='cuda:0') tensor(0.4312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
657000 正交保障 tensor(0.4092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.3547, -3.1380,  2.7490,  3.7538,  1.2775,  1.9413,  0.6244, -0.5638,
          1.1336, -0.0612, -0.2697,  0.9520, -0.8230, -0.2949, -1.1657]],
       device='cuda:0') tensor(0.4092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
658000 特征值优化 tensor(7.8311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4148, -0.8631, -0.8705,  0.2269,  0.1579, -1.1380,  0.3120,  1.8036,
          0.3339, -1.2241, -0.0538,  0.2166, -0.1279, -1.5320,  0.9158]],
       device='cuda:0') tensor(0.5795, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
659000 特征值优化 tensor(2.3031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2339, -1.6397, -0.0668,  1.0367,  0.8488, -1.8708, -0.3316,  1.0878,
          0.6128, -1.6995, -0.8121,  0.6697, -0.4657, -0.7067,  1.1186]],
       device='cuda:0') tensor(0.4519, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
660000 特征值优化 tensor(1.6587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5465, -1.4585,  0.0768,  1.0445,  0.9753, -1.6459, -0.5251,  0.9258,
          0.5771, -1.8172, -0.7732,  0.7179, -0.3087, -0.3440,  1.1592]],
       device='cuda:0') tensor(0.4261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
661000 特征值优化 tensor(1.5754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6253, -1.5179,  0.1816,  0.9354,  0.8543, -1.4645, -0.6089,  0.7917,
          0.5505, -1.8462, -0.6784,  0.7386, -0.2105, -0.2281,  1.1159]],
       device='cuda:0') tensor(0.4150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
662000 特征值优化 tensor(1.5440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6685, -1.6822,  0.2919,  0.7818,  0.8627, -1.3059, -0.6466,  0.6519,
          0.5156, -1.8449, -0.5745,  0.7702, -0.1291, -0.2318,  1.1116]],
       device='cuda:0') tensor(0.3582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
663000 特征值优化 tensor(1.5200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6550, -1.8818,  0.4288,  0.6813,  0.8790, -1.0714, -0.6573,  0.5115,
          0.4981, -1.8218, -0.5039,  0.7718, -0.0826, -0.2331,  1.1142]],
       device='cuda:0') tensor(0.4213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
664000 正交保障 tensor(0.4280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6018, -2.0831,  0.5083,  0.5805,  0.9005, -0.9549, -0.6744,  0.4657,
          0.4828, -1.7926, -0.4998,  0.7493, -0.0632, -0.2441,  1.1139]],
       device='cuda:0') tensor(0.4280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
665000 特征值优化 tensor(1.5036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5708, -2.2591,  0.5822,  0.5078,  0.9215, -0.8773, -0.6894,  0.4428,
          0.4723, -1.7707, -0.5101,  0.7309, -0.0529, -0.2486,  1.1169]],
       device='cuda:0') tensor(0.3215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
666000 特征值优化 tensor(1.4981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5692, -2.4116,  0.6514,  0.4830,  0.9391, -0.7753, -0.7051,  0.4148,
          0.4629, -1.7539, -0.5104,  0.7153, -0.0413, -0.2495,  1.1231]],
       device='cuda:0') tensor(0.3845, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
667000 正交保障 tensor(0.4281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6270, -2.5359,  0.6974,  0.4661,  0.9475, -0.7404, -0.7254,  0.4053,
          0.4575, -1.7482, -0.5213,  0.7027, -0.0341, -0.2488,  1.1245]],
       device='cuda:0') tensor(0.4281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
668000 特征值优化 tensor(1.4945, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6874, -2.6306,  0.7109,  0.4600,  0.9510, -0.7300, -0.7399,  0.4051,
          0.4562, -1.7483, -0.5319,  0.6977, -0.0242, -0.2499,  1.1246]],
       device='cuda:0') tensor(0.3746, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
669000 特征值优化 tensor(1.4934, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7668, -2.7271,  0.7203,  0.4630,  0.9527, -0.7173, -0.7561,  0.4036,
          0.4539, -1.7525, -0.5394,  0.6911, -0.0141, -0.2497,  1.1231]],
       device='cuda:0') tensor(0.3642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
670000 特征值优化 tensor(3.7583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0280,  1.1784, -1.5092, -0.2272, -0.6138, -0.5648,  0.4337, -0.6032,
         -0.1299,  0.3838, -0.1481,  0.1428, -0.5701,  0.1091,  1.2520]],
       device='cuda:0') tensor(0.4201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
671000 特征值优化 tensor(2.5991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2308,  1.3862, -1.5964,  0.1579,  0.5243, -1.0286,  0.5575, -0.7748,
          0.0555,  0.4064, -0.5953,  0.2889, -0.4020,  0.0706,  1.7349]],
       device='cuda:0') tensor(0.4872, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
672000 特征值优化 tensor(2.3618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.5894e-01,  1.4458e+00, -1.6608e+00,  1.8744e-01,  1.1410e+00,
         -1.3490e+00,  5.9267e-01, -9.1993e-01, -4.6746e-05,  3.2113e-01,
         -7.2677e-01,  3.0581e-01, -5.0755e-01,  5.3318e-02,  1.9641e+00]],
       device='cuda:0') tensor(0.5276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
673000 特征值优化 tensor(2.2835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4811,  1.6528, -1.8006,  0.1681,  1.5065, -1.5993,  0.5569, -1.0225,
         -0.0530,  0.2360, -0.7242,  0.3098, -0.5598,  0.1206,  2.0713]],
       device='cuda:0') tensor(0.5888, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
674000 特征值优化 tensor(2.2473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6961,  1.7998, -1.8906,  0.1617,  1.7767, -1.7481,  0.4877, -1.0093,
         -0.0863,  0.1767, -0.7180,  0.3126, -0.5926,  0.1916,  2.1429]],
       device='cuda:0') tensor(0.6939, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
675000 正交保障 tensor(0.7156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9226,  1.9586, -1.9848,  0.1391,  2.0511, -1.9222,  0.4412, -1.0175,
         -0.1141,  0.1181, -0.6923,  0.3148, -0.6222,  0.2596,  2.2108]],
       device='cuda:0') tensor(0.7156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
676000 特征值优化 tensor(2.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1563,  2.1103, -2.0769,  0.1497,  2.3196, -2.0660,  0.4016, -1.0312,
         -0.1455,  0.0598, -0.6661,  0.3140, -0.6602,  0.3277,  2.2788]],
       device='cuda:0') tensor(0.7304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
677000 特征值优化 tensor(2.1843, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3647,  2.2478, -2.1619,  0.1693,  2.5987, -2.1966,  0.3691, -1.0451,
         -0.1731,  0.0035, -0.6480,  0.3147, -0.6964,  0.3980,  2.3494]],
       device='cuda:0') tensor(0.6160, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
678000 特征值优化 tensor(2.1714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5518,  2.3590, -2.2354,  0.1961,  2.8706, -2.2968,  0.3411, -1.0429,
         -0.2019, -0.0460, -0.6285,  0.3195, -0.7242,  0.4700,  2.4214]],
       device='cuda:0') tensor(0.7133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
679000 特征值优化 tensor(2.1617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7096,  2.4539, -2.3020,  0.2358,  3.1082, -2.3824,  0.3179, -1.0463,
         -0.2238, -0.0930, -0.6118,  0.3275, -0.7543,  0.5315,  2.4832]],
       device='cuda:0') tensor(0.6879, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
680000 特征值优化 tensor(2.1538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8583,  2.5412, -2.3717,  0.2692,  3.3268, -2.4547,  0.2943, -1.0568,
         -0.2480, -0.1355, -0.6047,  0.3387, -0.7777,  0.5859,  2.5396]],
       device='cuda:0') tensor(0.7112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
681000 特征值优化 tensor(2.1473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9759,  2.6173, -2.4301,  0.2913,  3.5351, -2.5427,  0.2752, -1.0688,
         -0.2669, -0.1741, -0.6020,  0.3445, -0.7942,  0.6363,  2.5927]],
       device='cuda:0') tensor(0.7122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
682000 特征值优化 tensor(2.1431, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0918,  2.6752, -2.4768,  0.3027,  3.6747, -2.6158,  0.2574, -1.0759,
         -0.2809, -0.2062, -0.5980,  0.3473, -0.8072,  0.6703,  2.6311]],
       device='cuda:0') tensor(0.7380, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
683000 特征值优化 tensor(6.0843, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1039, -1.0167, -0.9985,  0.9212,  0.8196,  0.0622, -0.4319, -0.7618,
          1.4705, -0.0684,  0.1651,  1.4732,  0.9080, -1.1806, -1.5476]],
       device='cuda:0') tensor(0.5864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
684000 特征值优化 tensor(2.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5415, -1.5555, -0.7832,  1.3816,  1.3593, -0.4820, -0.4062, -0.2090,
          1.5279,  0.2344, -0.0298,  1.3099,  0.5530, -0.5220, -1.1279]],
       device='cuda:0') tensor(0.4315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
685000 正交保障 tensor(0.4321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3550, -1.3300, -0.5228,  1.3356,  1.4449, -0.4567, -0.3327, -0.1299,
          1.5491,  0.2693, -0.0380,  1.2863,  0.5115, -0.3707, -1.1687]],
       device='cuda:0') tensor(0.4321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
686000 特征值优化 tensor(1.8722, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1163, -1.1190, -0.2724,  1.2544,  1.4399, -0.4150, -0.2765, -0.0659,
          1.5967,  0.3092, -0.0813,  1.2724,  0.4702, -0.3697, -1.1693]],
       device='cuda:0') tensor(0.4051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
687000 特征值优化 tensor(1.8342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3058e-01, -9.3567e-01, -1.0990e-02,  1.1249e+00,  1.4100e+00,
         -3.1770e-01, -2.1322e-01,  1.3782e-03,  1.6595e+00,  3.4480e-01,
         -1.2838e-01,  1.2524e+00,  4.2132e-01, -3.6208e-01, -1.1674e+00]],
       device='cuda:0') tensor(0.4058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
688000 正交保障 tensor(0.4031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5884, -0.7640,  0.0746,  1.1568,  1.3967, -0.1447, -0.1095,  0.0134,
          1.6720,  0.3536, -0.0856,  1.2207,  0.3963, -0.3602, -1.1667]],
       device='cuda:0') tensor(0.4031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
689000 特征值优化 tensor(1.7875, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9071, -0.5711,  0.0599,  1.3159,  1.4041, -0.0826, -0.0650,  0.0059,
          1.7268,  0.3661, -0.0519,  1.2445,  0.4012, -0.3706, -1.1699]],
       device='cuda:0') tensor(0.3633, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
690000 特征值优化 tensor(1.7863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0116, -0.5129,  0.0538,  1.3383,  1.3583, -0.0944, -0.0694,  0.0069,
          1.7403,  0.3617, -0.0514,  1.2484,  0.4004, -0.3608, -1.1535]],
       device='cuda:0') tensor(0.3871, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
691000 正交保障 tensor(0.3750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0715, -0.4747,  0.0512,  1.3745,  1.2607, -0.1080, -0.0786,  0.0067,
          1.7412,  0.3622, -0.0581,  1.2478,  0.3984, -0.3399, -1.1298]],
       device='cuda:0') tensor(0.3750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
692000 正交保障 tensor(0.4277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1145, -0.4471,  0.0466,  1.3920,  1.1685, -0.1132, -0.0825,  0.0095,
          1.7384,  0.3594, -0.0617,  1.2474,  0.3981, -0.3198, -1.1058]],
       device='cuda:0') tensor(0.4277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
693000 特征值优化 tensor(1.7862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1385, -0.4303,  0.0461,  1.4030,  1.1004, -0.1176, -0.0862,  0.0089,
          1.7326,  0.3608, -0.0641,  1.2463,  0.4002, -0.3030, -1.0852]],
       device='cuda:0') tensor(0.4141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
694000 特征值优化 tensor(1.7862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1660, -0.4119,  0.0437,  1.4193,  1.0501, -0.1224, -0.0900,  0.0091,
          1.7322,  0.3595, -0.0671,  1.2456,  0.4021, -0.2929, -1.0742]],
       device='cuda:0') tensor(0.3798, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
695000 特征值优化 tensor(2.2696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5715, -0.6221, -1.6619, -0.4796, -0.2272,  0.2170,  0.1059,  0.4749,
          0.7078, -1.3570,  0.3412, -0.1636, -0.7094,  0.1916, -0.7525]],
       device='cuda:0') tensor(0.2978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
696000 特征值优化 tensor(1.5747, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7935, -0.7477, -1.9679, -0.3566,  0.4489,  0.5026,  0.2529,  0.6970,
          0.7140, -1.2895,  0.6710, -0.2525, -0.8158,  0.1200, -0.9767]],
       device='cuda:0') tensor(0.3374, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
697000 特征值优化 tensor(1.5302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9291, -0.6787, -2.0535, -0.3688,  0.6939,  0.5956,  0.3164,  0.7047,
          0.7321, -1.3443,  0.7211, -0.2630, -0.8203,  0.1830, -1.0534]],
       device='cuda:0') tensor(0.3442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
698000 正交保障 tensor(0.3624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1099, -0.6336, -2.1310, -0.3974,  0.9010,  0.6567,  0.3350,  0.7257,
          0.7430, -1.3877,  0.7507, -0.2460, -0.8222,  0.2366, -1.1118]],
       device='cuda:0') tensor(0.3624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
699000 特征值优化 tensor(1.5051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2662, -0.6184, -2.2124, -0.4153,  0.9249,  0.6513,  0.3351,  0.7402,
          0.7405, -1.4131,  0.7558, -0.2301, -0.8055,  0.2472, -1.1174]],
       device='cuda:0') tensor(0.3455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
700000 特征值优化 tensor(1.5026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4262, -0.6089, -2.2962, -0.4199,  0.9351,  0.6296,  0.3290,  0.7555,
          0.7431, -1.4376,  0.7592, -0.2220, -0.7876,  0.2457, -1.1208]],
       device='cuda:0') tensor(0.3763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
701000 特征值优化 tensor(1.5008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5773, -0.6009, -2.3728, -0.4207,  0.9370,  0.6032,  0.3256,  0.7649,
          0.7460, -1.4596,  0.7655, -0.2085, -0.7791,  0.2458, -1.1198]],
       device='cuda:0') tensor(0.4357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
702000 特征值优化 tensor(1.4995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7080, -0.5929, -2.4322, -0.4171,  0.9364,  0.5864,  0.3219,  0.7764,
          0.7448, -1.4779,  0.7660, -0.1984, -0.7715,  0.2459, -1.1197]],
       device='cuda:0') tensor(0.3567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
703000 特征值优化 tensor(1.4977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8519, -0.5739, -2.4699, -0.3932,  0.9570,  0.5545,  0.3156,  0.7713,
          0.7492, -1.4994,  0.7634, -0.1889, -0.7622,  0.2520, -1.1239]],
       device='cuda:0') tensor(0.3569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
704000 正交保障 tensor(0.3588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9912, -0.5666, -2.5173, -0.3849,  0.9588,  0.5402,  0.3140,  0.7827,
          0.7531, -1.5199,  0.7634, -0.1797, -0.7520,  0.2515, -1.1209]],
       device='cuda:0') tensor(0.3588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
705000 特征值优化 tensor(1.4955, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0990, -0.5599, -2.5683, -0.3785,  0.9573,  0.5272,  0.3137,  0.7904,
          0.7492, -1.5359,  0.7679, -0.1742, -0.7440,  0.2507, -1.1196]],
       device='cuda:0') tensor(0.3712, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
706000 特征值优化 tensor(1.4945, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2076, -0.5594, -2.6253, -0.3734,  0.9611,  0.5093,  0.3141,  0.8018,
          0.7499, -1.5499,  0.7644, -0.1682, -0.7375,  0.2498, -1.1218]],
       device='cuda:0') tensor(0.3899, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
707000 特征值优化 tensor(2.2261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 4.9322e-01,  5.8455e-01,  3.6642e-01,  8.9636e-01,  4.3583e-01,
         -6.8547e-01,  4.7501e-01,  6.0746e-01, -1.1813e+00, -5.8941e-01,
         -2.9089e-01,  1.5850e+00,  4.0994e-01,  4.2187e-05, -9.2267e-01]],
       device='cuda:0') tensor(0.3763, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
708000 特征值优化 tensor(1.8478, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7257,  0.7583,  0.3642,  1.0763,  0.7420, -0.2117,  0.1824,  0.0929,
         -1.1984, -0.6574, -0.1546,  1.5180,  0.3503, -0.2122, -0.9859]],
       device='cuda:0') tensor(0.3729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
709000 特征值优化 tensor(1.8054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9632,  0.6550,  0.1852,  1.0719,  0.9901, -0.1211,  0.1216,  0.0356,
         -1.2700, -0.7000, -0.1312,  1.5178,  0.3407, -0.2646, -1.0572]],
       device='cuda:0') tensor(0.3646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
710000 特征值优化 tensor(1.7886, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1644,  0.5263,  0.1462,  1.1688,  1.1224, -0.0760,  0.0790,  0.0226,
         -1.3172, -0.7264, -0.0888,  1.5355,  0.3514, -0.3080, -1.0974]],
       device='cuda:0') tensor(0.3784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
711000 特征值优化 tensor(1.7861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2570,  0.4557,  0.1275,  1.2255,  1.1267, -0.0880,  0.0875,  0.0255,
         -1.3316, -0.7354, -0.0952,  1.5459,  0.3572, -0.3099, -1.0949]],
       device='cuda:0') tensor(0.3679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
712000 特征值优化 tensor(1.7858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2908,  0.4304,  0.1218,  1.2571,  1.0843, -0.0889,  0.0890,  0.0246,
         -1.3355, -0.7378, -0.0960,  1.5454,  0.3574, -0.3024, -1.0842]],
       device='cuda:0') tensor(0.4093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
713000 特征值优化 tensor(1.7860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3132,  0.4117,  0.1168,  1.2802,  1.0449, -0.0913,  0.0909,  0.0266,
         -1.3358, -0.7388, -0.0987,  1.5445,  0.3585, -0.2943, -1.0741]],
       device='cuda:0') tensor(0.3532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
714000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3269,  0.3981,  0.1130,  1.2962,  1.0070, -0.0942,  0.0937,  0.0259,
         -1.3325, -0.7369, -0.1016,  1.5468,  0.3584, -0.2845, -1.0631]],
       device='cuda:0') tensor(0.3903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
715000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3315,  0.3948,  0.1124,  1.2944,  0.9902, -0.0935,  0.0934,  0.0264,
         -1.3302, -0.7348, -0.1021,  1.5478,  0.3583, -0.2853, -1.0603]],
       device='cuda:0') tensor(0.3560, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
716000 特征值优化 tensor(1.7867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3324,  0.3948,  0.1113,  1.2937,  0.9819, -0.0928,  0.0941,  0.0267,
         -1.3289, -0.7323, -0.1021,  1.5479,  0.3593, -0.2821, -1.0573]],
       device='cuda:0') tensor(0.3350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
717000 特征值优化 tensor(1.7863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3331,  0.3956,  0.1095,  1.2944,  0.9919, -0.0922,  0.0923,  0.0290,
         -1.3285, -0.7317, -0.1018,  1.5511,  0.3616, -0.2864, -1.0616]],
       device='cuda:0') tensor(0.4073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
718000 特征值优化 tensor(1.7867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3333,  0.3937,  0.1144,  1.2919,  0.9872, -0.0932,  0.0930,  0.0270,
         -1.3241, -0.7325, -0.1030,  1.5542,  0.3543, -0.2827, -1.0593]],
       device='cuda:0') tensor(0.3626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
719000 特征值优化 tensor(2.3411, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7534, -0.0492,  1.5864,  0.0568,  0.9360, -1.4677, -0.7574,  1.0158,
          0.3008,  0.2508, -1.1392, -0.2159,  0.6468, -0.2439,  1.9265]],
       device='cuda:0') tensor(0.5279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
720000 特征值优化 tensor(2.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7620, -0.1278,  1.9500,  0.2003,  1.3242, -1.5071, -0.7195,  1.1280,
          0.1693,  0.2796, -1.2368, -0.1618,  0.6714, -0.3066,  2.0575]],
       device='cuda:0') tensor(0.5507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
721000 正交保障 tensor(0.6428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8197, -0.1653,  2.1775,  0.2770,  1.5421, -1.4741, -0.6710,  1.0943,
          0.1065,  0.2563, -1.1803, -0.1562,  0.7222, -0.3626,  2.1245]],
       device='cuda:0') tensor(0.6428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
722000 特征值优化 tensor(2.1495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8910, -0.1426,  2.3465,  0.2308,  1.7648, -1.5096, -0.6493,  1.0511,
          0.0712,  0.2159, -1.0932, -0.1637,  0.7496, -0.4135,  2.1839]],
       device='cuda:0') tensor(0.5843, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
723000 特征值优化 tensor(2.1420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9623, -0.1313,  2.4596,  0.1635,  1.8461, -1.5481, -0.6362,  1.0169,
          0.0582,  0.1685, -1.0379, -0.1607,  0.7574, -0.4230,  2.2036]],
       device='cuda:0') tensor(0.6758, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
724000 特征值优化 tensor(2.1376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0461, -0.1422,  2.5471,  0.1055,  1.8501, -1.6012, -0.6135,  0.9967,
          0.0430,  0.1292, -0.9855, -0.1635,  0.7515, -0.4318,  2.2056]],
       device='cuda:0') tensor(0.6332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
725000 特征值优化 tensor(2.1348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1075, -0.1557,  2.6080,  0.0758,  1.8624, -1.6370, -0.5999,  0.9824,
          0.0399,  0.0947, -0.9570, -0.1617,  0.7485, -0.4283,  2.2066]],
       device='cuda:0') tensor(0.6278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
726000 正交保障 tensor(0.6342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1593, -0.1706,  2.6496,  0.0474,  1.8648, -1.6647, -0.5831,  0.9744,
          0.0361,  0.0665, -0.9330, -0.1622,  0.7450, -0.4283,  2.2071]],
       device='cuda:0') tensor(0.6342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
727000 正交保障 tensor(0.6325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1920, -0.1875,  2.6772,  0.0230,  1.8641, -1.6855, -0.5676,  0.9692,
          0.0338,  0.0437, -0.9141, -0.1621,  0.7400, -0.4266,  2.2058]],
       device='cuda:0') tensor(0.6325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
728000 特征值优化 tensor(2.1313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2279, -0.2079,  2.7011,  0.0083,  1.8663, -1.7068, -0.5527,  0.9651,
          0.0328,  0.0248, -0.8983, -0.1625,  0.7376, -0.4278,  2.2081]],
       device='cuda:0') tensor(0.6670, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
729000 特征值优化 tensor(2.1306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2381, -0.2280,  2.7158, -0.0053,  1.8767, -1.7191, -0.5353,  0.9641,
          0.0346,  0.0047, -0.8838, -0.1676,  0.7320, -0.4269,  2.2107]],
       device='cuda:0') tensor(0.5835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
730000 特征值优化 tensor(6.6970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0984,  0.9057, -0.3909, -0.7666, -2.5302,  1.1137,  1.0991,  1.1639,
         -0.0549,  0.1773, -1.7582, -0.9050,  0.3985, -0.0956, -0.2070]],
       device='cuda:0') tensor(0.6773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
731000 特征值优化 tensor(3.7057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8890,  1.1379,  0.0245, -0.7654, -1.5382,  0.3934,  0.5271,  0.5559,
         -0.1328, -0.0388, -1.7739, -1.4931,  0.8269, -0.0087, -0.5523]],
       device='cuda:0') tensor(0.3156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
732000 特征值优化 tensor(2.5628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4901,  0.8970, -0.1034, -0.4072, -0.7235,  0.2425,  0.3164,  0.3803,
          0.0088, -0.1324, -1.1853, -1.5971,  0.9143, -0.0552, -0.6362]],
       device='cuda:0') tensor(0.3466, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
733000 特征值优化 tensor(2.1114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5633,  0.6743, -0.1744,  0.0425, -0.2012,  0.0686,  0.0723,  0.1437,
          0.0399, -0.1405, -0.6342, -1.6702,  0.9480, -0.1713, -0.7528]],
       device='cuda:0') tensor(0.3024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
734000 特征值优化 tensor(1.8629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6093,  0.3083, -0.1159,  0.8600,  0.2153,  0.0032, -0.0068, -0.0023,
          0.0579, -0.1549, -0.1879, -1.8092,  1.0234, -0.2591, -0.8609]],
       device='cuda:0') tensor(0.3393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
735000 特征值优化 tensor(1.8082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7038e+00,  6.6745e-02, -3.7078e-02,  1.0617e+00,  4.8743e-01,
         -7.9147e-04,  9.1417e-03, -1.0095e-02,  6.3880e-02, -1.6955e-01,
         -1.6228e-01, -1.8694e+00,  1.0498e+00, -2.9803e-01, -9.3450e-01]],
       device='cuda:0') tensor(0.3467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
736000 特征值优化 tensor(1.7958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7062e+00,  4.4845e-02, -3.6963e-02,  1.0380e+00,  6.6616e-01,
         -1.0927e-03,  9.0748e-03, -9.0675e-03,  6.5427e-02, -1.7279e-01,
         -1.6493e-01, -1.8867e+00,  1.0604e+00, -2.7245e-01, -9.7869e-01]],
       device='cuda:0') tensor(0.3791, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
737000 特征值优化 tensor(1.7898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7062e+00,  4.4692e-02, -4.0258e-02,  9.8050e-01,  8.0107e-01,
         -1.7292e-03,  1.3892e-02, -1.1534e-02,  6.8236e-02, -1.7410e-01,
         -1.7606e-01, -1.8959e+00,  1.0655e+00, -2.7312e-01, -1.0152e+00]],
       device='cuda:0') tensor(0.3531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
738000 特征值优化 tensor(1.7879, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7072e+00,  5.0276e-02, -4.3400e-02,  9.2653e-01,  8.8784e-01,
         -1.1106e-03,  1.2282e-02, -1.0618e-02,  6.2663e-02, -1.7213e-01,
         -1.8996e-01, -1.9023e+00,  1.0640e+00, -2.7313e-01, -1.0361e+00]],
       device='cuda:0') tensor(0.4010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
739000 正交保障 tensor(0.3417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7116e+00,  5.2347e-02, -4.6421e-02,  9.0759e-01,  9.4982e-01,
         -8.0054e-04,  1.2331e-02, -1.0295e-02,  6.3661e-02, -1.7354e-01,
         -1.9356e-01, -1.9072e+00,  1.0666e+00, -2.7708e-01, -1.0508e+00]],
       device='cuda:0') tensor(0.3417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
740000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7163e+00,  5.1536e-02, -4.2642e-02,  9.0722e-01,  9.8037e-01,
         -1.4957e-03,  1.2144e-02, -9.6904e-03,  6.1496e-02, -1.7533e-01,
         -1.9447e-01, -1.9098e+00,  1.0704e+00, -2.8202e-01, -1.0595e+00]],
       device='cuda:0') tensor(0.4121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
741000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7163e+00,  5.1825e-02, -4.4872e-02,  9.0841e-01,  9.8485e-01,
         -1.4697e-03,  1.2514e-02, -1.0472e-02,  6.4503e-02, -1.7374e-01,
         -1.9388e-01, -1.9107e+00,  1.0704e+00, -2.8377e-01, -1.0587e+00]],
       device='cuda:0') tensor(0.3862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
742000 特征值优化 tensor(9.4793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3135, -0.9087, -0.5194, -0.9000,  0.1693,  0.1935, -0.0117,  0.0768,
         -1.6168, -0.6243, -1.3434,  0.4130,  1.2222,  2.5900, -0.1809]],
       device='cuda:0') tensor(0.6122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
743000 特征值优化 tensor(4.8052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8237e+00, -2.9493e-01, -9.0892e-01, -1.1010e-01,  9.0142e-01,
          1.2650e-01,  3.4923e-04,  2.1669e-01, -1.5398e+00, -4.5032e-01,
         -5.2572e-01,  2.9433e-01,  1.3823e+00,  1.7039e+00, -8.9973e-01]],
       device='cuda:0') tensor(0.5103, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
744000 特征值优化 tensor(2.9147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 3.0331, -0.0633, -0.6183,  0.2787,  1.2807,  0.2594, -0.0745,  0.0560,
         -1.5765, -0.4378, -0.2628,  0.2917,  1.5208,  0.9348, -1.1570]],
       device='cuda:0') tensor(0.4443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
745000 正交保障 tensor(0.3794, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.8196, -0.0734, -0.1997,  0.5359,  1.0610,  0.4602, -0.0783,  0.0728,
         -1.6232, -0.4532, -0.1286,  0.2868,  1.5110,  0.4083, -1.1335]],
       device='cuda:0') tensor(0.3794, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
746000 特征值优化 tensor(1.7228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6048e+00,  1.8975e-03, -1.8961e-01,  7.3384e-01,  5.7724e-01,
          8.7702e-01, -2.3201e-01,  4.1382e-01, -1.6110e+00, -4.5089e-01,
          2.4683e-01,  2.6960e-01,  1.4109e+00,  1.1566e-01, -1.0267e+00]],
       device='cuda:0') tensor(0.3787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
747000 特征值优化 tensor(1.5979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1946,  0.1041, -0.3481,  0.6787,  0.5428,  1.2245, -0.3695,  0.7038,
         -1.6008, -0.4408,  0.5328,  0.2511,  1.2928,  0.1452, -1.0208]],
       device='cuda:0') tensor(0.3743, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
748000 特征值优化 tensor(1.5899, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9510,  0.1651, -0.4783,  0.5901,  0.5683,  1.2276, -0.3765,  0.7380,
         -1.5826, -0.4281,  0.5799,  0.2465,  1.2620,  0.1513, -1.0287]],
       device='cuda:0') tensor(0.3308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
749000 特征值优化 tensor(1.5851, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7140,  0.2316, -0.5955,  0.5111,  0.5814,  1.1401, -0.3602,  0.7214,
         -1.5563, -0.4178,  0.5916,  0.2435,  1.2353,  0.1549, -1.0314]],
       device='cuda:0') tensor(0.3654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
750000 特征值优化 tensor(1.5677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4633,  0.3138, -0.7738,  0.4417,  0.7126,  0.9870, -0.3584,  0.7216,
         -1.5663, -0.4163,  0.6716,  0.2350,  1.1845,  0.1935, -1.0705]],
       device='cuda:0') tensor(0.3641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
751000 正交保障 tensor(0.3884, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3362,  0.4312, -1.0189,  0.1644,  0.7917,  0.7961, -0.3401,  0.7152,
         -1.5502, -0.4210,  0.7548,  0.2254,  1.1157,  0.2136, -1.0912]],
       device='cuda:0') tensor(0.3884, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
752000 特征值优化 tensor(1.5310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3885,  0.5592, -1.2478, -0.1363,  0.8606,  0.6816, -0.3227,  0.6798,
         -1.5351, -0.4167,  0.7638,  0.2159,  1.0588,  0.2266, -1.1098]],
       device='cuda:0') tensor(0.3194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
753000 特征值优化 tensor(1.5196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5197,  0.6689, -1.4192, -0.3968,  0.8850,  0.5915, -0.3199,  0.6687,
         -1.5359, -0.4050,  0.7897,  0.1989,  1.0014,  0.2322, -1.1142]],
       device='cuda:0') tensor(0.3775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
754000 特征值优化 tensor(1.5145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6354,  0.7366, -1.5279, -0.5321,  0.9019,  0.5426, -0.3224,  0.6693,
         -1.5400, -0.3974,  0.8088,  0.1910,  0.9677,  0.2357, -1.1171]],
       device='cuda:0') tensor(0.3812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
755000 正交保障 tensor(0.4196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8322,  0.8139, -1.6469, -0.6707,  0.9176,  0.5254, -0.3360,  0.6958,
         -1.5618, -0.3896,  0.8521,  0.1873,  0.9288,  0.2479, -1.1167]],
       device='cuda:0') tensor(0.4196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
756000 特征值优化 tensor(1.5037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0053,  0.8647, -1.7240, -0.7484,  0.9315,  0.4871, -0.3421,  0.6989,
         -1.5803, -0.3865,  0.8717,  0.1784,  0.9034,  0.2495, -1.1211]],
       device='cuda:0') tensor(0.3838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
757000 特征值优化 tensor(6.1704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3106,  0.0206,  0.8736, -0.1324,  1.1860, -0.5915, -0.2108,  0.5650,
         -0.5404, -1.2897, -0.5532,  1.3201, -0.4682, -2.2562,  1.0801]],
       device='cuda:0') tensor(0.6393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
758000 正交保障 tensor(0.4777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8237, -0.0484,  1.0359,  0.4305,  1.6805, -0.2593, -0.0108,  0.3025,
         -0.5369, -1.3375, -0.3549,  1.3976, -0.5338, -1.4689,  1.2246]],
       device='cuda:0') tensor(0.4777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
759000 特征值优化 tensor(2.0488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8321, -0.1045,  1.2214,  0.3688,  1.8680, -0.4560, -0.0267,  0.5552,
         -0.5449, -1.3179, -0.6846,  1.3825, -0.5145, -0.7138,  1.4317]],
       device='cuda:0') tensor(0.4652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
760000 特征值优化 tensor(1.6083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6017, -0.3601,  1.4689, -0.0383,  1.2755, -0.5805, -0.0867,  0.6730,
         -0.5469, -1.2136, -0.7987,  1.2587, -0.4257, -0.3482,  1.2338]],
       device='cuda:0') tensor(0.3898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
761000 特征值优化 tensor(1.5322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5957, -0.6118,  1.6356, -0.2346,  0.9099, -0.5866, -0.1124,  0.6810,
         -0.5678, -1.1587, -0.7761,  1.1870, -0.3560, -0.2417,  1.1188]],
       device='cuda:0') tensor(0.4021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
762000 特征值优化 tensor(1.5228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6500, -0.7918,  1.6934, -0.3184,  0.8792, -0.6072, -0.1445,  0.7202,
         -0.6024, -1.1553, -0.8154,  1.1706, -0.3166, -0.2312,  1.1102]],
       device='cuda:0') tensor(0.3935, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
763000 特征值优化 tensor(1.5173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7404, -0.9431,  1.7741, -0.3699,  0.8948, -0.5941, -0.1708,  0.7332,
         -0.6296, -1.1494, -0.8267,  1.1600, -0.2821, -0.2333,  1.1130]],
       device='cuda:0') tensor(0.3692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
764000 特征值优化 tensor(1.5140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8338, -1.0593,  1.8303, -0.3964,  0.8979, -0.5847, -0.1963,  0.7447,
         -0.6501, -1.1484, -0.8428,  1.1519, -0.2575, -0.2360,  1.1134]],
       device='cuda:0') tensor(0.3679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
765000 特征值优化 tensor(1.5091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9712, -1.1846,  1.8817, -0.3714,  0.9203, -0.5685, -0.2144,  0.7506,
         -0.6812, -1.1447, -0.8516,  1.1552, -0.2292, -0.2484,  1.1165]],
       device='cuda:0') tensor(0.3751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
766000 特征值优化 tensor(1.5064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1013, -1.2815,  1.9177, -0.3539,  0.9249, -0.5513, -0.2315,  0.7570,
         -0.7033, -1.1510, -0.8526,  1.1574, -0.2092, -0.2479,  1.1183]],
       device='cuda:0') tensor(0.3363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
767000 特征值优化 tensor(1.5037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2359, -1.3800,  1.9495, -0.3276,  0.9304, -0.5358, -0.2474,  0.7639,
         -0.7299, -1.1594, -0.8530,  1.1573, -0.1873, -0.2476,  1.1184]],
       device='cuda:0') tensor(0.3885, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
768000 特征值优化 tensor(1.5017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3653, -1.4690,  1.9882, -0.2961,  0.9341, -0.5226, -0.2598,  0.7702,
         -0.7477, -1.1672, -0.8566,  1.1611, -0.1681, -0.2457,  1.1212]],
       device='cuda:0') tensor(0.3880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
769000 特征值优化 tensor(2.7892, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5920, -0.3113, -1.0284, -0.0824, -0.7437,  1.0195,  0.0988,  0.8671,
         -0.7925,  0.0294,  0.2528, -0.3323,  1.5435, -0.0908,  0.6718]],
       device='cuda:0') tensor(0.2953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
770000 特征值优化 tensor(2.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8097, -0.3576, -1.1075,  0.0329, -0.1930,  0.6212,  0.0991,  0.5737,
         -0.9837,  0.0300,  0.2763, -0.3241,  1.5310,  0.0822,  0.7447]],
       device='cuda:0') tensor(0.3327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
771000 特征值优化 tensor(1.9364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9522, -0.2776, -0.9436,  0.1646,  0.2611,  0.2095,  0.0425,  0.2208,
         -1.1010,  0.0388,  0.2074, -0.3259,  1.5488,  0.1689,  0.8642]],
       device='cuda:0') tensor(0.3355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
772000 特征值优化 tensor(1.8312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1633, -0.1654, -0.6751,  0.6799,  0.6398,  0.0989,  0.0347,  0.1386,
         -1.1825,  0.0454,  0.2039, -0.3463,  1.6548,  0.1904,  0.9694]],
       device='cuda:0') tensor(0.3666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
773000 特征值优化 tensor(1.7921, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3869, -0.1018, -0.4167,  1.0776,  0.8614,  0.0693,  0.0233,  0.0958,
         -1.2410,  0.0447,  0.1404, -0.3618,  1.7371,  0.2485,  1.0276]],
       device='cuda:0') tensor(0.3090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
774000 特征值优化 tensor(1.7873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4467, -0.0902, -0.3688,  1.1720,  0.9332,  0.0649,  0.0229,  0.0903,
         -1.2567,  0.0442,  0.1315, -0.3676,  1.7565,  0.2731,  1.0475]],
       device='cuda:0') tensor(0.3658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
775000 正交保障 tensor(0.3531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4498, -0.0884, -0.3725,  1.1716,  0.9712,  0.0644,  0.0231,  0.0896,
         -1.2571,  0.0429,  0.1314, -0.3658,  1.7624,  0.2813,  1.0561]],
       device='cuda:0') tensor(0.3531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
776000 正交保障 tensor(0.3724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4531, -0.0888, -0.3738,  1.1659,  0.9770,  0.0647,  0.0255,  0.0877,
         -1.2551,  0.0411,  0.1299, -0.3638,  1.7643,  0.2825,  1.0563]],
       device='cuda:0') tensor(0.3724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
777000 正交保障 tensor(0.3505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4564, -0.0879, -0.3756,  1.1711,  0.9908,  0.0640,  0.0217,  0.0875,
         -1.2553,  0.0389,  0.1318, -0.3645,  1.7673,  0.2859,  1.0606]],
       device='cuda:0') tensor(0.3505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
778000 特征值优化 tensor(1.7866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4569, -0.0915, -0.3741,  1.1699,  0.9896,  0.0639,  0.0222,  0.0885,
         -1.2565,  0.0408,  0.1318, -0.3658,  1.7660,  0.2846,  1.0596]],
       device='cuda:0') tensor(0.3480, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
779000 特征值优化 tensor(1.7865, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4586, -0.0906, -0.3749,  1.1700,  0.9976,  0.0628,  0.0223,  0.0875,
         -1.2557,  0.0391,  0.1314, -0.3644,  1.7677,  0.2864,  1.0607]],
       device='cuda:0') tensor(0.3886, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
780000 特征值优化 tensor(1.7862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4574, -0.0896, -0.3752,  1.1713,  1.0017,  0.0631,  0.0210,  0.0883,
         -1.2560,  0.0379,  0.1305, -0.3651,  1.7684,  0.2869,  1.0620]],
       device='cuda:0') tensor(0.3974, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
781000 特征值优化 tensor(2.6815, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1242,  1.1841,  0.4199,  1.5815,  0.7757, -0.7868,  0.9014,  0.1486,
         -2.0574, -0.9320, -0.9736,  0.4375,  0.1943,  0.4892, -0.9518]],
       device='cuda:0') tensor(0.3603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
782000 特征值优化 tensor(2.1573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1948,  1.0786,  0.3303,  1.5091,  0.7880, -0.8461,  0.7627,  0.0814,
         -1.8826, -0.8096, -0.5212,  0.5360,  0.2157,  0.2066, -1.0315]],
       device='cuda:0') tensor(0.3689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
783000 正交保障 tensor(0.3412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0788,  0.9580,  0.2382,  1.2477,  0.6835, -0.5772,  0.4377,  0.0390,
         -1.7776, -0.7500, -0.2060,  0.5665,  0.2191,  0.1790, -1.0024]],
       device='cuda:0') tensor(0.3412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
784000 特征值优化 tensor(1.9997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1564,  1.0083,  0.1970,  1.1593,  0.6137, -0.3955,  0.2274,  0.0188,
         -1.7039, -0.7156, -0.0925,  0.5872,  0.2062,  0.0742, -1.0007]],
       device='cuda:0') tensor(0.3615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
785000 正交保障 tensor(0.3644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0122,  0.6339,  0.0552,  1.4135,  0.9264, -0.3106,  0.1137,  0.0085,
         -1.7648, -0.7518, -0.0419,  0.6701,  0.2236, -0.2404, -1.0460]],
       device='cuda:0') tensor(0.3644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
786000 特征值优化 tensor(1.7994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4707,  0.4335,  0.0362,  1.5304,  1.1411, -0.1915,  0.0702,  0.0063,
         -1.8476, -0.7883, -0.0264,  0.7047,  0.2307, -0.2957, -1.0995]],
       device='cuda:0') tensor(0.3727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
787000 特征值优化 tensor(1.7862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8115,  0.3240,  0.0276,  1.5950,  1.2095, -0.1518,  0.0560,  0.0052,
         -1.8968, -0.8126, -0.0208,  0.7214,  0.2353, -0.3241, -1.1166]],
       device='cuda:0') tensor(0.3991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
788000 特征值优化 tensor(1.7858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8891,  0.3036,  0.0256,  1.6111,  1.1382, -0.1613,  0.0579,  0.0052,
         -1.9000, -0.8106, -0.0215,  0.7207,  0.2374, -0.3139, -1.0987]],
       device='cuda:0') tensor(0.4108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
789000 特征值优化 tensor(1.7859, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9352,  0.2866,  0.0239,  1.6174,  1.0835, -0.1633,  0.0595,  0.0055,
         -1.9028, -0.8079, -0.0212,  0.7188,  0.2347, -0.3023, -1.0847]],
       device='cuda:0') tensor(0.3844, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
790000 特征值优化 tensor(1.7862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9717,  0.2746,  0.0232,  1.6241,  1.0389, -0.1679,  0.0613,  0.0051,
         -1.9034, -0.8055, -0.0223,  0.7171,  0.2341, -0.2911, -1.0700]],
       device='cuda:0') tensor(0.3368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
791000 特征值优化 tensor(1.7863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9932,  0.2654,  0.0221,  1.6283,  1.0068, -0.1730,  0.0622,  0.0044,
         -1.9051, -0.8027, -0.0224,  0.7151,  0.2317, -0.2844, -1.0617]],
       device='cuda:0') tensor(0.3455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
792000 特征值优化 tensor(1.7866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9949,  0.2651,  0.0233,  1.6261,  0.9872, -0.1732,  0.0630,  0.0054,
         -1.9028, -0.8011, -0.0226,  0.7156,  0.2311, -0.2811, -1.0589]],
       device='cuda:0') tensor(0.3757, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
793000 特征值优化 tensor(1.9752, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3156,  1.5378,  0.5379,  0.9525,  1.3256,  0.7499,  0.1345, -0.3595,
          1.6031,  0.1937, -0.1280, -0.5318,  1.1917,  0.2321,  1.1823]],
       device='cuda:0') tensor(0.4555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
794000 特征值优化 tensor(1.8544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5181,  1.3689,  0.5386,  0.9189,  1.4016,  0.3212,  0.1917, -0.2531,
          1.6664,  0.1883,  0.0206, -0.5186,  1.1139,  0.3248,  1.1721]],
       device='cuda:0') tensor(0.4112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
795000 特征值优化 tensor(1.7972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7912,  1.1037,  0.4439,  1.0491,  1.5165,  0.0913,  0.1879, -0.1222,
          1.7337,  0.1929, -0.0225, -0.5261,  1.1293,  0.3794,  1.1987]],
       device='cuda:0') tensor(0.5049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
796000 特征值优化 tensor(1.6874, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3246,  0.8268,  0.1395,  1.3892,  1.7406, -0.1153,  0.1987,  0.0211,
          1.8444,  0.2256, -0.1087, -0.5327,  1.1944,  0.4477,  1.2657]],
       device='cuda:0') tensor(0.3777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
797000 特征值优化 tensor(1.6718, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4545,  0.8678,  0.0280,  1.4673,  1.9744, -0.0919,  0.2158, -0.0095,
          1.8969,  0.2397, -0.0978, -0.5425,  1.2335,  0.5090,  1.3310]],
       device='cuda:0') tensor(0.4441, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
798000 特征值优化 tensor(1.6617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5154,  0.9609, -0.0696,  1.4864,  2.2058, -0.0837,  0.2328, -0.0309,
          1.9345,  0.2450, -0.1033, -0.5430,  1.2558,  0.5617,  1.3950]],
       device='cuda:0') tensor(0.4569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
799000 特征值优化 tensor(1.6515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5987,  1.0589, -0.1586,  1.5216,  2.4686, -0.0863,  0.2599, -0.0510,
          1.9703,  0.2534, -0.1118, -0.5513,  1.2829,  0.6273,  1.4704]],
       device='cuda:0') tensor(0.4838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
800000 正交保障 tensor(0.4703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6767,  1.1417, -0.2326,  1.5566,  2.6743, -0.0900,  0.2786, -0.0642,
          2.0007,  0.2641, -0.1267, -0.5559,  1.3037,  0.6783,  1.5238]],
       device='cuda:0') tensor(0.4703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
801000 特征值优化 tensor(1.6395, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7059,  1.1911, -0.2873,  1.5555,  2.8512, -0.1038,  0.2962, -0.0708,
          2.0226,  0.2695, -0.1409, -0.5593,  1.3178,  0.7221,  1.5685]],
       device='cuda:0') tensor(0.4543, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
802000 特征值优化 tensor(1.6359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7526,  1.2354, -0.3227,  1.5794,  3.0047, -0.1063,  0.3060, -0.0792,
          2.0421,  0.2754, -0.1476, -0.5631,  1.3324,  0.7607,  1.6084]],
       device='cuda:0') tensor(0.4791, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
803000 特征值优化 tensor(1.6313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8066,  1.3124, -0.3900,  1.5976,  3.1678, -0.1238,  0.3251, -0.0863,
          2.0652,  0.2802, -0.1682, -0.5635,  1.3451,  0.8019,  1.6491]],
       device='cuda:0') tensor(0.4736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
804000 特征值优化 tensor(7.1650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1605, -0.1839, -0.5828, -1.0350,  1.2060, -0.3570,  0.1379,  0.2150,
         -0.0158, -2.1106,  0.7510,  1.8561, -0.0367, -1.4803,  0.8570]],
       device='cuda:0') tensor(0.4338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
805000 特征值优化 tensor(2.9924, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4148, -0.4918,  0.4212, -0.0439,  1.8900, -0.5237, -0.1446,  0.1895,
          0.0930, -1.5432, -0.0595,  1.1769, -0.1145, -0.7263,  1.3124]],
       device='cuda:0') tensor(0.4217, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
806000 特征值优化 tensor(1.6145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0521, -1.3651,  1.1195,  0.6285,  1.3773, -0.8798, -0.4091,  0.3830,
          0.2735, -1.4087, -0.3511,  0.9209, -0.3055, -0.3429,  1.2652]],
       device='cuda:0') tensor(0.4018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
807000 特征值优化 tensor(1.5371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0483, -1.4941,  1.1242,  0.6736,  0.9546, -0.9919, -0.4613,  0.4488,
          0.2391, -1.3674, -0.4064,  0.9041, -0.2622, -0.2499,  1.1310]],
       device='cuda:0') tensor(0.3807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
808000 特征值优化 tensor(1.5267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0575, -1.5930,  1.0755,  0.6771,  0.8580, -1.0439, -0.4915,  0.4762,
          0.1994, -1.3667, -0.4221,  0.9085, -0.2172, -0.2253,  1.1028]],
       device='cuda:0') tensor(0.3760, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
809000 特征值优化 tensor(1.5230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0176, -1.6994,  1.0490,  0.7283,  0.8856, -1.0415, -0.5074,  0.4696,
          0.1804, -1.3713, -0.4190,  0.9192, -0.1835, -0.2307,  1.1078]],
       device='cuda:0') tensor(0.3787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
810000 特征值优化 tensor(1.5205, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9626, -1.7809,  1.0154,  0.7899,  0.8966, -1.0397, -0.5228,  0.4710,
          0.1687, -1.3787, -0.4172,  0.9358, -0.1612, -0.2336,  1.1113]],
       device='cuda:0') tensor(0.3837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
811000 特征值优化 tensor(1.5187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9166, -1.8631,  0.9791,  0.8477,  0.8964, -1.0375, -0.5397,  0.4646,
          0.1554, -1.3844, -0.4124,  0.9513, -0.1386, -0.2329,  1.1110]],
       device='cuda:0') tensor(0.4070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
812000 特征值优化 tensor(1.5136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8181, -1.9980,  0.9170,  0.9721,  0.8963, -1.0500, -0.5656,  0.4669,
          0.1357, -1.3872, -0.4172,  0.9781, -0.0997, -0.2341,  1.1116]],
       device='cuda:0') tensor(0.3692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
813000 特征值优化 tensor(1.5108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7665, -2.1038,  0.8849,  1.0716,  0.8994, -1.0439, -0.5831,  0.4620,
          0.1223, -1.3895, -0.4083,  0.9989, -0.0755, -0.2347,  1.1109]],
       device='cuda:0') tensor(0.3973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
814000 特征值优化 tensor(1.5067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6998, -2.2236,  0.8214,  1.2004,  0.9275, -1.0358, -0.6031,  0.4485,
          0.1012, -1.4058, -0.3898,  1.0217, -0.0521, -0.2470,  1.1172]],
       device='cuda:0') tensor(0.4079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
815000 特征值优化 tensor(1.5047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6256, -2.3050,  0.7798,  1.3051,  0.9371, -1.0338, -0.6140,  0.4449,
          0.0867, -1.4198, -0.3806,  1.0354, -0.0356, -0.2455,  1.1201]],
       device='cuda:0') tensor(0.3515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
816000 特征值优化 tensor(6.1702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4835, -0.2492, -0.6884, -1.5094,  0.3983,  0.0881, -0.0628, -0.6285,
          0.1276, -0.2663,  0.8742, -0.8624, -0.6661, -0.1765,  1.4638]],
       device='cuda:0') tensor(0.4367, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
817000 特征值优化 tensor(2.1188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.6915, -1.4900, -1.8249, -0.6441,  0.8647,  0.3027,  0.4014,  0.2415,
          0.0030, -1.0830,  0.5867, -0.7793, -0.7783,  0.0727,  1.0324]],
       device='cuda:0') tensor(0.3861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
818000 特征值优化 tensor(1.9847, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4950, -1.5657, -1.8296, -0.3601,  1.0804,  0.3745,  0.2831,  0.2714,
          0.0197, -1.1954,  0.3914, -0.7586, -0.7243,  0.1001,  1.0962]],
       device='cuda:0') tensor(0.3544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
819000 特征值优化 tensor(1.9364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3455, -1.4808, -1.6997, -0.2213,  1.3564,  0.3720,  0.2217,  0.2482,
          0.0355, -1.2815,  0.2942, -0.7754, -0.7161,  0.2131,  1.1670]],
       device='cuda:0') tensor(0.3800, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
820000 正交保障 tensor(0.4869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1534, -1.3563, -1.5545, -0.0067,  1.7173,  0.3165,  0.1765,  0.2033,
          0.0396, -1.3744,  0.2302, -0.8018, -0.7396,  0.3185,  1.2644]],
       device='cuda:0') tensor(0.4869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
821000 正交保障 tensor(0.4645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9596, -1.2384, -1.4278,  0.1862,  2.0121,  0.2612,  0.1429,  0.1671,
          0.0448, -1.4562,  0.1827, -0.8283, -0.7628,  0.4026,  1.3468]],
       device='cuda:0') tensor(0.4645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
822000 特征值优化 tensor(1.8338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7138, -1.1083, -1.2657,  0.4087,  2.3328,  0.1947,  0.1060,  0.1231,
          0.0395, -1.5528,  0.1326, -0.8541, -0.7921,  0.5096,  1.4329]],
       device='cuda:0') tensor(0.5143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
823000 特征值优化 tensor(1.8122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4348, -0.9817, -1.1122,  0.6271,  2.5630,  0.1184,  0.0673,  0.0789,
          0.0436, -1.6354,  0.0890, -0.8874, -0.8230,  0.5892,  1.4859]],
       device='cuda:0') tensor(0.5145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
824000 特征值优化 tensor(1.7864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0904, -0.8016, -0.9156,  0.8482,  2.7617,  0.0251,  0.0264,  0.0293,
          0.0485, -1.7259,  0.0435, -0.9290, -0.8595,  0.6700,  1.5332]],
       device='cuda:0') tensor(0.4839, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
825000 正交保障 tensor(0.4846, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5842, -0.4617, -0.5218,  1.3260,  3.0229, -0.2247, -0.0847, -0.0967,
          0.0567, -1.8587, -0.0708, -1.0068, -0.9251,  0.7671,  1.5896]],
       device='cuda:0') tensor(0.4846, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
826000 正交保障 tensor(0.5744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8313, -0.3192, -0.3608,  1.5735,  3.1962, -0.2361, -0.0777, -0.0881,
          0.0558, -1.9416, -0.0544, -1.0542, -0.9681,  0.8111,  1.6445]],
       device='cuda:0') tensor(0.5744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
827000 特征值优化 tensor(1.6491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7628, -0.2875, -0.3134,  1.6863,  3.2682, -0.2632, -0.0712, -0.0773,
          0.0574, -1.9507, -0.0301, -1.0635, -0.9761,  0.8272,  1.6632]],
       device='cuda:0') tensor(0.5655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
828000 特征值优化 tensor(1.6428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 6.3649e-01, -2.3572e-01, -2.3857e-01,  1.8623e+00,  3.3908e+00,
         -3.0473e-01, -5.7822e-02, -5.8264e-02,  5.5078e-02, -1.9586e+00,
          2.2910e-03, -1.0848e+00, -9.9373e-01,  8.5849e-01,  1.6985e+00]],
       device='cuda:0') tensor(0.5659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
829000 特征值优化 tensor(1.6371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.5372, -0.1611, -0.1553,  2.0346,  3.5163, -0.3376, -0.0382, -0.0363,
          0.0526, -1.9716,  0.0374, -1.1069, -1.0157,  0.8896,  1.7358]],
       device='cuda:0') tensor(0.5446, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
830000 正交保障 tensor(0.5100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.4502, -0.1006, -0.0889,  2.1815,  3.5846, -0.3726, -0.0245, -0.0222,
          0.0516, -1.9820,  0.0617, -1.1187, -1.0250,  0.9076,  1.7552]],
       device='cuda:0') tensor(0.5100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
831000 特征值优化 tensor(3.2740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1438, -0.1214, -2.0257, -0.8034,  1.4686,  1.4589,  1.1271, -0.9705,
          0.3797,  1.5447,  0.7958, -1.4450,  0.0214,  0.5357, -0.0830]],
       device='cuda:0') tensor(0.3107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
832000 特征值优化 tensor(2.2789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2968, -0.5904, -2.2969, -0.6839,  1.9278,  1.4189,  1.0502, -0.6729,
          0.2507,  1.7923,  0.8551, -1.6021,  0.1955,  0.1434, -0.0751]],
       device='cuda:0') tensor(0.3587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
833000 特征值优化 tensor(2.0994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3810, -0.9949, -2.5571, -0.5532,  2.0347,  1.1738,  1.0010, -0.3151,
          0.2264,  1.8162,  0.7355, -1.5989,  0.2380,  0.1229, -0.1407]],
       device='cuda:0') tensor(0.3149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
834000 特征值优化 tensor(1.9599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7287, -1.3057, -2.5682, -0.7437,  2.2206,  0.9056,  0.7691, -0.0156,
          0.1861,  1.7779,  0.6078, -1.5530,  0.2750,  0.1494, -0.2083]],
       device='cuda:0') tensor(0.3518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
835000 特征值优化 tensor(1.8524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2365, -1.5374, -2.4914, -1.1854,  2.4854,  0.7786,  0.5888,  0.1558,
          0.1321,  1.6951,  0.5839, -1.4492,  0.3149,  0.1824, -0.2785]],
       device='cuda:0') tensor(0.3245, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
836000 特征值优化 tensor(1.6480, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.9703, -1.7746, -2.2072, -1.8534,  2.5998,  0.5610,  0.5237,  0.4709,
          0.0885,  1.5116,  0.4772, -1.2951,  0.3089,  0.1269, -0.3179]],
       device='cuda:0') tensor(0.3661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
837000 特征值优化 tensor(1.5768, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4996, -1.9537, -2.1517, -2.3654,  2.7705,  0.6246,  0.5180,  0.5246,
          0.0412,  1.4090,  0.5805, -1.1851,  0.3220,  0.0772, -0.3633]],
       device='cuda:0') tensor(0.3908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
838000 特征值优化 tensor(1.5618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7356, -2.0423, -2.1661, -2.5937,  2.8470,  0.6614,  0.5225,  0.5483,
          0.0264,  1.3585,  0.6253, -1.1344,  0.3219,  0.0940, -0.3829]],
       device='cuda:0') tensor(0.3621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
839000 特征值优化 tensor(1.5604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7864, -2.0630, -2.1690, -2.6395,  2.8859,  0.6713,  0.5272,  0.5545,
          0.0259,  1.3492,  0.6339, -1.1235,  0.3193,  0.1029, -0.3930]],
       device='cuda:0') tensor(0.3929, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
840000 特征值优化 tensor(1.5604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7960, -2.0707, -2.1764, -2.6482,  2.8826,  0.6723,  0.5277,  0.5567,
          0.0247,  1.3463,  0.6375, -1.1186,  0.3176,  0.1019, -0.3918]],
       device='cuda:0') tensor(0.3926, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
841000 正交保障 tensor(0.3826, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.8038, -2.0741, -2.1768, -2.6514,  2.8782,  0.6761,  0.5299,  0.5575,
          0.0254,  1.3443,  0.6372, -1.1177,  0.3168,  0.1018, -0.3921]],
       device='cuda:0') tensor(0.3826, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
842000 特征值优化 tensor(5.9075, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1640, -1.5202,  0.8898,  0.3243,  0.5137, -0.6897, -2.2532,  0.6733,
          0.5352, -0.5537,  0.5721,  0.2796,  2.1747,  0.4652,  0.7859]],
       device='cuda:0') tensor(0.3867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
843000 特征值优化 tensor(1.5353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3205, -2.4145,  1.4543,  0.9780,  1.0775, -1.5202, -1.5526,  0.5689,
          0.7339, -0.0776, -0.3507,  0.4060,  1.6179,  0.1466,  1.1266]],
       device='cuda:0') tensor(0.3787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
844000 特征值优化 tensor(1.2438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.1308, -2.7999,  1.4622,  1.1227,  1.2853, -1.6516, -1.3682,  0.6673,
          0.7731, -0.0791, -0.6768,  0.4212,  1.6487,  0.3090,  1.1690]],
       device='cuda:0') tensor(0.4520, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
845000 特征值优化 tensor(1.2137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0979, -3.0060,  1.4217,  1.1142,  1.3679, -1.5992, -1.3511,  0.7598,
          0.7777, -0.1051, -0.7597,  0.4102,  1.6541,  0.3399,  1.1896]],
       device='cuda:0') tensor(0.4960, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
846000 特征值优化 tensor(1.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.2342, -3.1462,  1.4630,  1.0934,  1.3885, -1.5507, -1.3257,  0.7628,
          0.7734, -0.1115, -0.7831,  0.3989,  1.6423,  0.3445,  1.1964]],
       device='cuda:0') tensor(0.4949, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
847000 特征值优化 tensor(1.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3113, -3.2264,  1.5119,  1.0540,  1.3690, -1.4821, -1.2802,  0.7307,
          0.7650, -0.1143, -0.7538,  0.3906,  1.6195,  0.3366,  1.1904]],
       device='cuda:0') tensor(0.4323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
848000 特征值优化 tensor(1.1997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.3868, -3.2935,  1.5635,  0.9717,  1.3103, -1.4168, -1.2266,  0.6958,
          0.7542, -0.1127, -0.7073,  0.3839,  1.5838,  0.3206,  1.1761]],
       device='cuda:0') tensor(0.4511, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
849000 特征值优化 tensor(1.1961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.4830, -3.3529,  1.6119,  0.8887,  1.2970, -1.3518, -1.1690,  0.6612,
          0.7460, -0.1128, -0.6589,  0.3802,  1.5489,  0.3148,  1.1713]],
       device='cuda:0') tensor(0.4733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
850000 特征值优化 tensor(1.1529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6319, -3.5788,  1.7153,  0.9140,  1.2450, -1.1515, -1.0595,  0.6455,
          0.7257, -0.1009, -0.5642,  0.3689,  1.4908,  0.2945,  1.1586]],
       device='cuda:0') tensor(0.4538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
851000 特征值优化 tensor(1.1414, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6403, -3.7756,  1.8612,  0.9520,  1.2695, -1.1668, -1.0617,  0.6020,
          0.6937, -0.1194, -0.4616,  0.3571,  1.4706,  0.2990,  1.1647]],
       device='cuda:0') tensor(0.4302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
852000 特征值优化 tensor(1.1327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6880, -3.9581,  2.0048,  0.9464,  1.2802, -1.2154, -1.0779,  0.5617,
          0.6647, -0.1300, -0.4010,  0.3461,  1.4411,  0.2909,  1.1666]],
       device='cuda:0') tensor(0.4828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
853000 正交保障 tensor(0.4542, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.7150, -4.1124,  2.1211,  0.9800,  1.2961, -1.2569, -1.0933,  0.5270,
          0.6457, -0.1434, -0.3790,  0.3410,  1.4191,  0.2899,  1.1703]],
       device='cuda:0') tensor(0.4542, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
854000 特征值优化 tensor(1.1224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6981, -4.2610,  2.2271,  1.0588,  1.3010, -1.2885, -1.1131,  0.4961,
          0.6222, -0.1523, -0.3605,  0.3304,  1.4146,  0.2877,  1.1716]],
       device='cuda:0') tensor(0.4508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
855000 特征值优化 tensor(2.2379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0736, -0.0780, -0.5143,  2.1460,  0.1439, -0.2017, -0.0608, -0.3553,
         -1.5555, -0.9357, -0.1758, -0.7659,  0.7596,  0.1262,  0.7226]],
       device='cuda:0') tensor(0.2951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
856000 特征值优化 tensor(1.4859, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.0267, -0.0153, -0.4265,  1.9705,  0.8029, -0.7500, -0.1136, -0.4965,
         -1.4563, -0.8561, -0.3785, -0.7555,  0.7463,  0.1995,  1.0427]],
       device='cuda:0') tensor(0.3018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
857000 特征值优化 tensor(1.3989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0123, -0.0087, -0.5900,  1.9445,  0.9624, -1.0900, -0.1240, -0.6094,
         -1.4289, -0.8281, -0.3594, -0.7981,  0.7728,  0.2372,  1.0967]],
       device='cuda:0') tensor(0.3852, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
858000 特征值优化 tensor(1.3720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1881,  0.0902, -0.6158,  2.0536,  1.0347, -1.2778, -0.1103, -0.6376,
         -1.4010, -0.8005, -0.3142, -0.8530,  0.8010,  0.2568,  1.1146]],
       device='cuda:0') tensor(0.4254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
859000 特征值优化 tensor(1.3361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.5351,  0.2206, -0.6241,  2.2925,  1.1319, -1.4997, -0.0901, -0.7033,
         -1.3847, -0.7865, -0.2967, -0.9236,  0.8382,  0.2847,  1.1338]],
       device='cuda:0') tensor(0.4047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
860000 特征值优化 tensor(1.2929, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9642,  0.4122, -0.6796,  2.6202,  1.2708, -1.7426, -0.0512, -0.7746,
         -1.3574, -0.7469, -0.2514, -0.9920,  0.8650,  0.3215,  1.1687]],
       device='cuda:0') tensor(0.4057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
861000 特征值优化 tensor(1.2573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3734e+00,  5.9254e-01, -8.0954e-01,  2.9578e+00,  1.3656e+00,
         -1.9192e+00, -4.6612e-04, -7.9747e-01, -1.3142e+00, -7.0787e-01,
         -1.7590e-01, -1.0458e+00,  8.7719e-01,  3.4596e-01,  1.1926e+00]],
       device='cuda:0') tensor(0.4402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
862000 特征值优化 tensor(1.2338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.7461,  0.7433, -0.9492,  3.2218,  1.3675, -2.0406,  0.0456, -0.8178,
         -1.2688, -0.6700, -0.1212, -1.0690,  0.8810,  0.3435,  1.1911]],
       device='cuda:0') tensor(0.4080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
863000 正交保障 tensor(0.4532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.1292,  0.8824, -1.0940,  3.4916,  1.3701, -2.0840,  0.0711, -0.8360,
         -1.2290, -0.6425, -0.0397, -1.0677,  0.8739,  0.3395,  1.1930]],
       device='cuda:0') tensor(0.4532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
864000 特征值优化 tensor(1.1890, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.4834,  1.0197, -1.2831,  3.7305,  1.2876, -2.0719,  0.0937, -0.8063,
         -1.1778, -0.6105,  0.0319, -1.0542,  0.8574,  0.3160,  1.1708]],
       device='cuda:0') tensor(0.4203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
865000 特征值优化 tensor(1.1718, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.7640,  1.1361, -1.4746,  3.9150,  1.2459, -2.0536,  0.1130, -0.7480,
         -1.1319, -0.5841,  0.1357, -1.0365,  0.8469,  0.3010,  1.1601]],
       device='cuda:0') tensor(0.4230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
866000 正交保障 tensor(0.3851, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-2.9802,  1.2339, -1.6418,  4.0285,  1.2477, -2.0611,  0.1179, -0.6724,
         -1.0855, -0.5678,  0.2423, -1.0263,  0.8422,  0.3002,  1.1599]],
       device='cuda:0') tensor(0.3851, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
867000 特征值优化 tensor(1.1479, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.1743,  1.3133, -1.8079,  4.1533,  1.2464, -2.0651,  0.1163, -0.5897,
         -1.0437, -0.5507,  0.3322, -1.0112,  0.8330,  0.2984,  1.1587]],
       device='cuda:0') tensor(0.4442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
868000 特征值优化 tensor(1.1377, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.3761,  1.3889, -1.9701,  4.3108,  1.2544, -2.0681,  0.1388, -0.5171,
         -1.0005, -0.5324,  0.3973, -0.9984,  0.8293,  0.2965,  1.1600]],
       device='cuda:0') tensor(0.4440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
869000 特征值优化 tensor(1.1300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.5528,  1.4328, -2.1077,  4.4622,  1.2737, -2.0745,  0.1585, -0.4600,
         -0.9621, -0.5201,  0.4270, -0.9849,  0.8261,  0.2937,  1.1650]],
       device='cuda:0') tensor(0.4477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
870000 特征值优化 tensor(1.1247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.7038,  1.4643, -2.2066,  4.5854,  1.2800, -2.0910,  0.1923, -0.4103,
         -0.9413, -0.5000,  0.4418, -0.9724,  0.8196,  0.2940,  1.1667]],
       device='cuda:0') tensor(0.4400, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
871000 特征值优化 tensor(1.1212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-3.8099,  1.4926, -2.2911,  4.7010,  1.2872, -2.1042,  0.2199, -0.3792,
         -0.9181, -0.4939,  0.4485, -0.9655,  0.8141,  0.2913,  1.1687]],
       device='cuda:0') tensor(0.4694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
872000 特征值优化 tensor(1.3427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1289, -1.7213, -0.9011, -0.4078,  1.3378,  0.5374,  0.5661,  0.5176,
         -0.4974, -0.0452,  0.9082, -0.7964,  1.5439, -0.3199, -1.1854]],
       device='cuda:0') tensor(0.4349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
873000 正交保障 tensor(0.4064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8717, -2.1009, -1.0337, -0.3734,  1.3355,  0.5130,  0.7266,  0.5311,
         -0.4746, -0.1097,  1.1236, -0.7943,  1.5774, -0.3289, -1.1850]],
       device='cuda:0') tensor(0.4064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
874000 正交保障 tensor(0.4646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7732, -2.4963, -1.2025, -0.4263,  1.3229,  0.5314,  0.8391,  0.5690,
         -0.4506, -0.1570,  1.2717, -0.7787,  1.5757, -0.3265, -1.1813]],
       device='cuda:0') tensor(0.4646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
875000 特征值优化 tensor(1.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7615, -2.8223, -1.3702, -0.5018,  1.2890,  0.5332,  0.9019,  0.5730,
         -0.4153, -0.1873,  1.2937, -0.7493,  1.5517, -0.3163, -1.1705]],
       device='cuda:0') tensor(0.4363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
876000 正交保障 tensor(0.3770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8208, -3.1284, -1.5607, -0.6151,  1.2553,  0.5434,  0.9778,  0.5789,
         -0.3699, -0.2095,  1.2621, -0.7208,  1.5229, -0.3007, -1.1619]],
       device='cuda:0') tensor(0.3770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
877000 特征值优化 tensor(1.1604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9076, -3.3526, -1.7263, -0.7235,  1.2432,  0.5390,  1.0448,  0.5693,
         -0.3256, -0.2248,  1.1784, -0.6931,  1.5058, -0.2972, -1.1590]],
       device='cuda:0') tensor(0.4243, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
878000 正交保障 tensor(0.3734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9830, -3.5336, -1.8724, -0.8514,  1.2634,  0.5629,  1.0830,  0.5529,
         -0.2930, -0.2429,  1.0720, -0.6683,  1.4794, -0.3003, -1.1626]],
       device='cuda:0') tensor(0.3734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
879000 特征值优化 tensor(1.1363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0617, -3.7305, -2.0316, -0.9972,  1.2829,  0.6163,  1.1190,  0.5415,
         -0.2615, -0.2563,  0.9968, -0.6577,  1.4356, -0.2918, -1.1681]],
       device='cuda:0') tensor(0.4534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
880000 特征值优化 tensor(1.1288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1614, -3.9169, -2.1519, -1.0646,  1.2981,  0.6668,  1.1472,  0.5344,
         -0.2431, -0.2702,  0.9637, -0.6407,  1.4132, -0.2902, -1.1727]],
       device='cuda:0') tensor(0.4609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
881000 特征值优化 tensor(1.1240, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2830, -4.0692, -2.2464, -1.0676,  1.3086,  0.7094,  1.1640,  0.5318,
         -0.2263, -0.2826,  0.9362, -0.6266,  1.4052, -0.2880, -1.1743]],
       device='cuda:0') tensor(0.4792, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
882000 特征值优化 tensor(1.1200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4062, -4.2161, -2.3437, -1.0505,  1.3064,  0.7506,  1.1800,  0.5198,
         -0.2101, -0.2975,  0.9176, -0.6217,  1.3948, -0.2874, -1.1744]],
       device='cuda:0') tensor(0.4970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
883000 特征值优化 tensor(1.1175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5201, -4.3337, -2.4139, -1.0207,  1.2995,  0.7813,  1.1950,  0.5182,
         -0.2003, -0.3115,  0.9011, -0.6175,  1.3894, -0.2856, -1.1721]],
       device='cuda:0') tensor(0.4702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
884000 特征值优化 tensor(3.9091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3700,  0.7845, -0.1881, -1.8268,  1.5489,  1.3603, -0.1982,  0.9884,
         -0.6656, -2.0473,  0.6051, -0.0613,  0.1551, -0.8754,  0.0479]],
       device='cuda:0') tensor(0.3359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
885000 特征值优化 tensor(2.1600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6723,  0.8273, -0.6564, -2.7754,  2.1440,  1.1217, -0.3574,  0.8667,
         -0.7225, -2.1636,  0.6224, -0.0872, -0.0851, -0.2527,  0.0696]],
       device='cuda:0') tensor(0.2826, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
886000 特征值优化 tensor(1.9961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6125,  1.0818, -1.0739, -3.0064,  2.0722,  0.7217, -0.3675,  0.6882,
         -0.7118, -2.1176,  0.6482, -0.0952, -0.1221, -0.1335,  0.0764]],
       device='cuda:0') tensor(0.2814, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
887000 特征值优化 tensor(1.8947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.0764,  1.2308, -1.3263, -3.2109,  1.8918,  0.4039, -0.3564,  0.5363,
         -0.6711, -1.9542,  0.6444, -0.1143, -0.1117, -0.0250,  0.0506]],
       device='cuda:0') tensor(0.3004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
888000 正交保障 tensor(0.3096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-6.9220e-01,  1.4581e+00, -1.6225e+00, -3.5458e+00,  1.8626e+00,
          2.7370e-01, -3.9282e-01,  4.7372e-01, -6.2649e-01, -1.7804e+00,
          7.9514e-01, -1.2875e-01, -8.1607e-02, -2.4573e-03,  3.1905e-02]],
       device='cuda:0') tensor(0.3096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
889000 特征值优化 tensor(1.7529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0343e+00,  1.6693e+00, -1.8566e+00, -3.8750e+00,  1.8730e+00,
          2.6449e-01, -4.2334e-01,  4.8016e-01, -5.9806e-01, -1.6626e+00,
          9.3829e-01, -1.2804e-01, -7.8355e-02, -1.8025e-03,  4.3293e-02]],
       device='cuda:0') tensor(0.2932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
890000 特征值优化 tensor(1.7442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2084e+00,  1.7608e+00, -1.9515e+00, -4.0782e+00,  1.8555e+00,
          2.9036e-01, -4.4349e-01,  4.9162e-01, -5.8605e-01, -1.5941e+00,
          9.9883e-01, -1.2539e-01, -7.5566e-02, -2.6078e-03,  3.9118e-02]],
       device='cuda:0') tensor(0.3147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
891000 特征值优化 tensor(1.7437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2777e+00,  1.7679e+00, -1.9683e+00, -4.1284e+00,  1.8544e+00,
          2.9158e-01, -4.4267e-01,  4.9449e-01, -5.8195e-01, -1.5712e+00,
          1.0115e+00, -1.2844e-01, -7.3696e-02, -2.5226e-03,  3.8251e-02]],
       device='cuda:0') tensor(0.2721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
892000 正交保障 tensor(0.2898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3062e+00,  1.7789e+00, -1.9829e+00, -4.1617e+00,  1.8568e+00,
          2.9007e-01, -4.4675e-01,  4.9574e-01, -5.7955e-01, -1.5594e+00,
          1.0191e+00, -1.2894e-01, -7.4899e-02, -2.7141e-03,  4.0712e-02]],
       device='cuda:0') tensor(0.2898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
893000 特征值优化 tensor(1.7434, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3317e+00,  1.7873e+00, -1.9921e+00, -4.1826e+00,  1.8585e+00,
          2.8637e-01, -4.4829e-01,  4.9648e-01, -5.7747e-01, -1.5502e+00,
          1.0249e+00, -1.2927e-01, -7.5703e-02, -2.6703e-03,  4.1662e-02]],
       device='cuda:0') tensor(0.3004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
894000 特征值优化 tensor(1.7430, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3419e+00,  1.7987e+00, -1.9970e+00, -4.2167e+00,  1.8779e+00,
          2.8833e-01, -4.5115e-01,  4.9553e-01, -5.7391e-01, -1.5463e+00,
          1.0329e+00, -1.2778e-01, -7.6883e-02, -3.0692e-03,  4.9603e-02]],
       device='cuda:0') tensor(0.3083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
895000 特征值优化 tensor(7.0461, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.1287, -0.2859, -0.1007, -0.3209,  1.8353, -0.3441,  0.3963, -0.7236,
          0.4891,  1.2972, -0.1895,  1.5698,  0.5046, -0.0404,  2.7811]],
       device='cuda:0') tensor(0.6737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
896000 特征值优化 tensor(2.6284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.6628, -0.0744, -0.6270,  0.4097,  2.3538, -0.8179,  0.2707, -0.8652,
          0.1549,  0.7212, -0.6751,  0.9634,  0.1611, -0.2916,  2.4467]],
       device='cuda:0') tensor(0.6563, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
897000 特征值优化 tensor(2.3018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8951, -0.1134, -1.1127,  0.5763,  2.5465, -1.2598,  0.5820, -1.3320,
          0.2027,  0.6170, -0.9381,  0.8818,  0.1997, -0.3163,  2.4790]],
       device='cuda:0') tensor(0.6167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
898000 特征值优化 tensor(2.2513, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9691,  0.0338, -1.2769,  0.6777,  2.7002, -1.3453,  0.7120, -1.4730,
          0.2775,  0.5528, -0.9442,  0.8569,  0.2619, -0.3427,  2.5020]],
       device='cuda:0') tensor(0.6794, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
899000 特征值优化 tensor(2.2405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0191,  0.1534, -1.4132,  0.7501,  2.7625, -1.3199,  0.7487, -1.5021,
          0.3117,  0.5191, -0.8958,  0.8546,  0.2981, -0.3507,  2.5084]],
       device='cuda:0') tensor(0.7504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
900000 特征值优化 tensor(2.2254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9363,  0.2852, -1.6650,  0.6923,  2.7613, -1.3447,  0.7778, -1.5776,
          0.3174,  0.4827, -0.9113,  0.8185,  0.3038, -0.3380,  2.4811]],
       device='cuda:0') tensor(0.6875, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
901000 正交保障 tensor(0.6241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8699,  0.3915, -1.9136,  0.6515,  2.7333, -1.2335,  0.7672, -1.5407,
          0.3200,  0.4502, -0.8127,  0.7809,  0.3068, -0.3353,  2.4718]],
       device='cuda:0') tensor(0.6241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
902000 特征值优化 tensor(2.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8260,  0.4352, -2.1563,  0.5755,  2.6794, -1.1565,  0.7799, -1.4921,
          0.3284,  0.4172, -0.7119,  0.7360,  0.3057, -0.3197,  2.4519]],
       device='cuda:0') tensor(0.7212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
903000 特征值优化 tensor(2.1961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8126,  0.3709, -2.2844,  0.4614,  2.6772, -1.1571,  0.8090, -1.4371,
          0.3294,  0.3894, -0.6716,  0.7025,  0.3066, -0.3194,  2.4487]],
       device='cuda:0') tensor(0.6622, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
904000 特征值优化 tensor(2.1906, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8479,  0.3120, -2.4166,  0.3634,  2.6799, -1.1681,  0.8351, -1.3645,
          0.3482,  0.3685, -0.6230,  0.6714,  0.3054, -0.3182,  2.4499]],
       device='cuda:0') tensor(0.6364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
905000 特征值优化 tensor(2.1886, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8735,  0.2810, -2.5137,  0.3554,  2.6723, -1.1782,  0.8521, -1.3248,
          0.3541,  0.3467, -0.6126,  0.6607,  0.3154, -0.3180,  2.4378]],
       device='cuda:0') tensor(0.5608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
906000 特征值优化 tensor(2.1872, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9058,  0.2513, -2.5676,  0.3729,  2.6815, -1.1879,  0.8680, -1.3104,
          0.3547,  0.3290, -0.6127,  0.6605,  0.3256, -0.3181,  2.4446]],
       device='cuda:0') tensor(0.7134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
907000 特征值优化 tensor(3.3100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8104, -1.6342,  0.4335, -1.3742,  0.1554, -1.6589, -0.2614, -1.0532,
         -0.2991, -0.9799, -0.8219, -0.1837, -1.3844,  0.1031,  0.6347]],
       device='cuda:0') tensor(0.3263, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
908000 特征值优化 tensor(1.4564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0990, -1.9691, -0.0996, -1.0263,  0.6640, -1.1392, -0.7812, -0.6650,
          0.0504, -1.1893, -1.0553, -0.5016, -1.1544,  0.1734,  1.0186]],
       device='cuda:0') tensor(0.4007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
909000 正交保障 tensor(0.3869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1952, -2.0667, -0.2288, -1.0039,  0.9973, -0.9232, -0.9343, -0.4839,
          0.1482, -1.3386, -1.2337, -0.5590, -1.0488,  0.2492,  1.1010]],
       device='cuda:0') tensor(0.3869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
910000 特征值优化 tensor(1.2594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3855, -2.3166, -0.2090, -1.1825,  1.0905, -0.7706, -1.0009, -0.3788,
          0.2138, -1.4211, -1.3038, -0.5770, -0.9183,  0.2699,  1.1242]],
       device='cuda:0') tensor(0.4299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
911000 正交保障 tensor(0.4052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6335, -2.6436, -0.2013, -1.3793,  1.2071, -0.6535, -1.0389, -0.3129,
          0.2533, -1.4556, -1.3419, -0.5841, -0.8303,  0.2966,  1.1532]],
       device='cuda:0') tensor(0.4052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
912000 特征值优化 tensor(1.1867, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8856, -2.9935, -0.2591, -1.5836,  1.2575, -0.5064, -1.0699, -0.2569,
          0.2759, -1.4699, -1.3833, -0.5733, -0.7463,  0.3010,  1.1637]],
       device='cuda:0') tensor(0.4427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
913000 特征值优化 tensor(1.1631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0686, -3.3022, -0.3469, -1.7421,  1.2627, -0.3383, -1.0985, -0.1907,
          0.2884, -1.4588, -1.4145, -0.5640, -0.6803,  0.3021,  1.1640]],
       device='cuda:0') tensor(0.4801, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
914000 正交保障 tensor(0.3863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1059, -3.5223, -0.4467, -1.8910,  1.2586, -0.2133, -1.0846, -0.1273,
          0.2906, -1.4293, -1.4309, -0.5516, -0.6336,  0.3016,  1.1617]],
       device='cuda:0') tensor(0.3863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
915000 正交保障 tensor(0.4375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1372, -3.7284, -0.5169, -2.0165,  1.2814, -0.1483, -1.0702, -0.0724,
          0.2882, -1.3942, -1.4582, -0.5433, -0.6007,  0.2959,  1.1673]],
       device='cuda:0') tensor(0.4375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
916000 特征值优化 tensor(1.1306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2127, -3.9432, -0.5902, -2.1289,  1.3029, -0.1128, -1.0553, -0.0311,
          0.2867, -1.3679, -1.5138, -0.5380, -0.5662,  0.2902,  1.1746]],
       device='cuda:0') tensor(0.4713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
917000 特征值优化 tensor(1.1248, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3630, -4.1345, -0.6323, -2.1725,  1.3110, -0.0818, -1.0461, -0.0082,
          0.2896, -1.3570, -1.5614, -0.5405, -0.5376,  0.2889,  1.1761]],
       device='cuda:0') tensor(0.4273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
918000 正交保障 tensor(0.4218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4912, -4.2752, -0.6678, -2.1943,  1.3049, -0.0694, -1.0408,  0.0167,
          0.2953, -1.3502, -1.5937, -0.5397, -0.5179,  0.2870,  1.1736]],
       device='cuda:0') tensor(0.4218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
919000 特征值优化 tensor(4.8738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8506, -1.3925, -0.2546, -2.6740,  1.5321, -0.2959,  0.4403,  0.6808,
         -0.8489, -1.1989,  0.9276,  0.6358,  0.4207, -1.1764,  0.4512]],
       device='cuda:0') tensor(0.3477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
920000 特征值优化 tensor(2.4555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7230, -1.8448, -0.7984, -3.4633,  2.1978,  0.0495,  0.3521,  0.2690,
         -1.0649, -1.3497,  1.4008,  0.9328,  0.7788, -0.6512,  0.1696]],
       device='cuda:0') tensor(0.3094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
921000 特征值优化 tensor(2.1742, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0333, -2.0920, -0.9970, -4.2613,  2.2986, -0.0917,  0.4518,  0.2480,
         -1.0522, -1.2722,  1.5429,  1.0560,  0.9312, -0.5016,  0.1323]],
       device='cuda:0') tensor(0.3381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
922000 特征值优化 tensor(2.1425, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0492, -2.2524, -1.0666, -4.6611,  2.1752, -0.1226,  0.5394,  0.2672,
         -1.0133, -1.2150,  1.5983,  1.0159,  0.8982, -0.4595,  0.1111]],
       device='cuda:0') tensor(0.3335, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
923000 特征值优化 tensor(2.1263, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0554, -2.3201, -1.1108, -4.8882,  2.0347, -0.1463,  0.5794,  0.2798,
         -0.9816, -1.1847,  1.5912,  0.9914,  0.8705, -0.3805,  0.0791]],
       device='cuda:0') tensor(0.3368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
924000 特征值优化 tensor(2.1207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.2044, -2.4172, -1.1541, -4.9590,  1.9097, -0.1849,  0.6053,  0.2891,
         -0.9708, -1.1905,  1.6075,  0.9867,  0.8568, -0.3430,  0.0563]],
       device='cuda:0') tensor(0.3202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
925000 正交保障 tensor(0.2989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.3544, -2.4852, -1.1817, -4.9297,  1.8253, -0.2250,  0.6261,  0.2954,
         -0.9769, -1.2006,  1.6079,  0.9883,  0.8540, -0.3179,  0.0376]],
       device='cuda:0') tensor(0.2989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
926000 特征值优化 tensor(2.1092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.4643, -2.5240, -1.1898, -4.8496,  1.7188, -0.2528,  0.6317,  0.2986,
         -0.9851, -1.2141,  1.5777,  0.9906,  0.8547, -0.2355,  0.0190]],
       device='cuda:0') tensor(0.3144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
927000 特征值优化 tensor(2.1059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.6374e+00, -2.5676e+00, -1.1997e+00, -4.7489e+00,  1.6553e+00,
         -2.9653e-01,  6.4279e-01,  2.9936e-01, -9.9664e-01, -1.2334e+00,
          1.5509e+00,  9.9940e-01,  8.5863e-01, -2.1165e-01, -4.5052e-03]],
       device='cuda:0') tensor(0.3079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
928000 正交保障 tensor(0.2931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7181e+00, -2.6153e+00, -1.2109e+00, -4.7337e+00,  1.6468e+00,
         -3.1610e-01,  6.5585e-01,  3.0557e-01, -1.0051e+00, -1.2424e+00,
          1.5503e+00,  1.0019e+00,  8.6043e-01, -2.0459e-01, -3.3881e-03]],
       device='cuda:0') tensor(0.2931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
929000 特征值优化 tensor(2.1021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7563e+00, -2.6394e+00, -1.2189e+00, -4.7260e+00,  1.6250e+00,
         -3.4559e-01,  6.6112e-01,  3.0452e-01, -1.0096e+00, -1.2441e+00,
          1.5257e+00,  1.0063e+00,  8.5447e-01, -1.7342e-01, -5.1206e-05]],
       device='cuda:0') tensor(0.2997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
930000 特征值优化 tensor(2.1021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.7569e+00, -2.6418e+00, -1.2194e+00, -4.7198e+00,  1.6241e+00,
         -3.4527e-01,  6.6057e-01,  3.0457e-01, -1.0123e+00, -1.2428e+00,
          1.5230e+00,  1.0080e+00,  8.5443e-01, -1.7446e-01,  1.1480e-04]],
       device='cuda:0') tensor(0.2967, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
931000 特征值优化 tensor(5.2510, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7779,  0.9566, -0.3418,  0.7498, -0.7274, -1.2090,  1.4886,  0.0764,
          1.1186, -0.8492,  1.9533,  0.9731, -0.0339,  0.2572,  0.4225]],
       device='cuda:0') tensor(0.2827, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
932000 特征值优化 tensor(2.3976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5640,  0.2075,  0.3470,  1.5365,  0.0305, -0.4440,  0.8216, -0.1383,
          1.3222, -1.0192,  1.4410,  1.3611, -0.0684,  0.0074,  0.7545]],
       device='cuda:0') tensor(0.3196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
933000 特征值优化 tensor(2.0597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6303,  0.1485,  0.4393,  1.7236,  0.5001, -0.2774,  0.5209, -0.0291,
          1.3265, -1.0474,  0.7836,  1.4354, -0.0518,  0.1126,  0.9035]],
       device='cuda:0') tensor(0.3688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
934000 特征值优化 tensor(1.7547, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5200,  0.3062,  0.4732,  1.9563,  0.8476, -0.2113,  0.1097,  0.1497,
          1.3510, -1.0779,  0.1004,  1.4536, -0.0382,  0.2367,  1.0142]],
       device='cuda:0') tensor(0.3485, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
935000 特征值优化 tensor(1.7143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3750,  0.3937,  0.5703,  1.9819,  1.1449, -0.1308,  0.0959,  0.1454,
          1.3681, -1.0920,  0.0318,  1.4751, -0.0389,  0.3271,  1.1057]],
       device='cuda:0') tensor(0.3604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
936000 特征值优化 tensor(1.6925, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2795,  0.4711,  0.6923,  1.9679,  1.4823, -0.1454,  0.1225,  0.1722,
          1.3851, -1.1050,  0.0233,  1.4971, -0.0394,  0.3864,  1.1980]],
       device='cuda:0') tensor(0.4157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
937000 特征值优化 tensor(1.6738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2547,  0.5958,  0.8033,  2.0115,  1.8127, -0.1610,  0.1616,  0.1899,
          1.4115, -1.1234,  0.0226,  1.5268, -0.0407,  0.4653,  1.2895]],
       device='cuda:0') tensor(0.4386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
938000 特征值优化 tensor(1.6599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2735,  0.7279,  0.8629,  2.0873,  2.1350, -0.1719,  0.1944,  0.2016,
          1.4426, -1.1438,  0.0229,  1.5627, -0.0442,  0.5439,  1.3794]],
       device='cuda:0') tensor(0.4767, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
939000 特征值优化 tensor(1.6508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3034,  0.8241,  0.8866,  2.1491,  2.3928, -0.1845,  0.2066,  0.2134,
          1.4719, -1.1596,  0.0167,  1.5925, -0.0507,  0.6077,  1.4541]],
       device='cuda:0') tensor(0.4739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
940000 正交保障 tensor(0.5013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3273e+00,  9.1260e-01,  9.2702e-01,  2.2031e+00,  2.5978e+00,
         -2.1829e-01,  2.2773e-01,  2.3190e-01,  1.4953e+00, -1.1711e+00,
         -5.0169e-04,  1.6123e+00, -5.5117e-02,  6.5856e-01,  1.5032e+00]],
       device='cuda:0') tensor(0.5013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
941000 特征值优化 tensor(1.6377, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3572,  1.0162,  0.9610,  2.2691,  2.8062, -0.2323,  0.2380,  0.2389,
          1.5182, -1.1861, -0.0074,  1.6360, -0.0595,  0.7111,  1.5567]],
       device='cuda:0') tensor(0.4746, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
942000 特征值优化 tensor(1.6336, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3807,  1.0932,  0.9757,  2.3233,  2.9703, -0.2435,  0.2399,  0.2451,
          1.5366, -1.1996, -0.0109,  1.6553, -0.0627,  0.7522,  1.5986]],
       device='cuda:0') tensor(0.5170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
943000 正交保障 tensor(0.5016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4243,  1.1993,  0.9805,  2.3841,  3.1219, -0.2683,  0.2327,  0.2585,
          1.5581, -1.2111, -0.0277,  1.6757, -0.0702,  0.7899,  1.6361]],
       device='cuda:0') tensor(0.5016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
944000 特征值优化 tensor(1.6255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4835,  1.2918,  0.9801,  2.4626,  3.2642, -0.2901,  0.2171,  0.2598,
          1.5786, -1.2248, -0.0435,  1.6992, -0.0765,  0.8260,  1.6725]],
       device='cuda:0') tensor(0.5129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
945000 特征值优化 tensor(4.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.3500, -1.2290, -0.0825,  0.1582, -0.0221,  0.5149,  1.7890,  1.7491,
          0.0663, -0.0553,  1.5828,  0.7288,  0.4163,  0.0217, -1.4049]],
       device='cuda:0') tensor(0.4505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
946000 特征值优化 tensor(2.4219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9088, -1.8237, -0.5769,  0.6353,  0.6364,  1.1063,  1.2922,  1.2121,
          0.2941,  0.1159,  2.0529,  0.6150,  0.2993,  0.1849, -1.8117]],
       device='cuda:0') tensor(0.5736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
947000 特征值优化 tensor(2.2454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8433, -2.0594, -0.6819,  0.6204,  1.1502,  1.1553,  1.2181,  1.1389,
          0.2140,  0.0815,  2.0918,  0.6334,  0.3068,  0.2841, -1.9904]],
       device='cuda:0') tensor(0.6025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
948000 特征值优化 tensor(2.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7534, -2.2094, -0.6703,  0.5483,  1.3408,  1.1633,  1.1209,  1.0816,
          0.1961,  0.0462,  2.0617,  0.6226,  0.3097,  0.2862, -2.0503]],
       device='cuda:0') tensor(0.5775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
949000 正交保障 tensor(0.6068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7038, -2.2845, -0.5560,  0.5106,  1.4601,  1.0998,  0.9682,  1.0172,
          0.2233,  0.0088,  1.9042,  0.6052,  0.3220,  0.3175, -2.0974]],
       device='cuda:0') tensor(0.6068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
950000 特征值优化 tensor(2.1511, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7121, -2.4070, -0.5304,  0.5710,  1.6833,  1.0259,  0.8353,  0.9453,
          0.2483, -0.0511,  1.7250,  0.6266,  0.3465,  0.4003, -2.1604]],
       device='cuda:0') tensor(0.6067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
951000 特征值优化 tensor(2.1392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7206, -2.5321, -0.5238,  0.5407,  1.8030,  1.0120,  0.7703,  0.9140,
          0.2740, -0.0934,  1.6270,  0.6258,  0.3700,  0.4186, -2.1911]],
       device='cuda:0') tensor(0.6379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
952000 特征值优化 tensor(2.1351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7525, -2.6184, -0.5308,  0.5017,  1.8568,  1.0314,  0.7406,  0.9138,
          0.2967, -0.1207,  1.5879,  0.6018,  0.3782,  0.4320, -2.2046]],
       device='cuda:0') tensor(0.6173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
953000 特征值优化 tensor(2.1329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7983, -2.6754, -0.5433,  0.4594,  1.8704,  1.0536,  0.7174,  0.9220,
          0.3157, -0.1489,  1.5613,  0.5788,  0.3697,  0.4271, -2.2081]],
       device='cuda:0') tensor(0.6029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
954000 正交保障 tensor(0.6337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8416, -2.7148, -0.5386,  0.4153,  1.8664,  1.0642,  0.7073,  0.9212,
          0.3403, -0.1747,  1.5470,  0.5514,  0.3556,  0.4283, -2.2054]],
       device='cuda:0') tensor(0.6337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
955000 正交保障 tensor(0.6029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.8777, -2.7442, -0.5549,  0.3861,  1.8765,  1.0854,  0.6932,  0.9286,
          0.3604, -0.1956,  1.5262,  0.5320,  0.3421,  0.4265, -2.2095]],
       device='cuda:0') tensor(0.6029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
956000 特征值优化 tensor(2.1300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9061, -2.7550, -0.5616,  0.3532,  1.8761,  1.0984,  0.6877,  0.9307,
          0.3745, -0.2069,  1.5111,  0.5175,  0.3322,  0.4266, -2.2086]],
       device='cuda:0') tensor(0.6114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
957000 正交保障 tensor(0.4531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4488, -0.5507,  1.1040,  0.2117,  0.9601, -0.4630, -0.7544, -0.4893,
         -0.9359,  0.6056, -0.8236, -1.8106, -0.0404, -0.4281, -1.0163]],
       device='cuda:0') tensor(0.4531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
958000 特征值优化 tensor(1.8738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3819, -0.2374,  1.2737,  0.3070,  1.2253, -0.1348, -0.3573, -0.2474,
         -1.0268,  0.4325, -0.3188, -1.7749,  0.0975, -0.2701, -1.1257]],
       device='cuda:0') tensor(0.4271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
959000 特征值优化 tensor(1.7646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5183, -0.0805,  1.0810,  0.7371,  1.3901, -0.0076, -0.1144, -0.2055,
         -1.0559,  0.4311,  0.0184, -1.8477,  0.1048, -0.3576, -1.1634]],
       device='cuda:0') tensor(0.3588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
960000 特征值优化 tensor(1.6836, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7412,  0.1469,  0.8909,  1.2275,  1.6758,  0.0294, -0.0492, -0.2150,
         -1.1218,  0.4280,  0.1393, -1.9617,  0.1265, -0.4310, -1.2534]],
       device='cuda:0') tensor(0.4365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
961000 特征值优化 tensor(1.6701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8058,  0.2485,  0.9624,  1.3038,  1.9343,  0.0269, -0.0809, -0.2336,
         -1.1520,  0.4349,  0.1310, -2.0076,  0.1356, -0.4950, -1.3212]],
       device='cuda:0') tensor(0.4390, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
962000 正交保障 tensor(0.3928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8562,  0.3501,  1.0398,  1.3577,  2.1978,  0.0289, -0.1057, -0.2520,
         -1.1771,  0.4386,  0.1339, -2.0458,  0.1398, -0.5586, -1.3923]],
       device='cuda:0') tensor(0.3928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
963000 特征值优化 tensor(1.6493, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9123,  0.4595,  1.1106,  1.4230,  2.4644,  0.0368, -0.1231, -0.2679,
         -1.2058,  0.4448,  0.1482, -2.0857,  0.1457, -0.6264, -1.4705]],
       device='cuda:0') tensor(0.4476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
964000 特征值优化 tensor(1.6440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9284,  0.5093,  1.1426,  1.4532,  2.6370,  0.0525, -0.1262, -0.2852,
         -1.2184,  0.4471,  0.1703, -2.1081,  0.1493, -0.6686, -1.5119]],
       device='cuda:0') tensor(0.4281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
965000 特征值优化 tensor(1.6372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.9774,  0.5939,  1.2259,  1.5052,  2.8652,  0.0657, -0.1451, -0.3035,
         -1.2382,  0.4536,  0.1887, -2.1390,  0.1489, -0.7269, -1.5722]],
       device='cuda:0') tensor(0.4769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
966000 特征值优化 tensor(1.6337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0031,  0.6592,  1.2683,  1.5520,  2.9980,  0.0728, -0.1456, -0.3104,
         -1.2522,  0.4551,  0.1958, -2.1612,  0.1535, -0.7589, -1.6056]],
       device='cuda:0') tensor(0.4850, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
967000 特征值优化 tensor(1.6307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0346,  0.7169,  1.3068,  1.6084,  3.1176,  0.0796, -0.1394, -0.3177,
         -1.2660,  0.4589,  0.2108, -2.1788,  0.1548, -0.7890, -1.6352]],
       device='cuda:0') tensor(0.4766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
968000 正交保障 tensor(0.5145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0799,  0.8224,  1.3406,  1.6942,  3.2788,  0.0888, -0.1327, -0.3218,
         -1.2880,  0.4624,  0.2373, -2.2096,  0.1573, -0.8291, -1.6766]],
       device='cuda:0') tensor(0.5145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
969000 特征值优化 tensor(4.3942, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2544,  2.6835, -0.2689, -0.6306,  0.6895,  0.1649,  1.4538, -0.4208,
         -0.5947,  0.8052, -0.2447, -0.8417,  1.2351, -0.6738,  0.0404]],
       device='cuda:0') tensor(0.2903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
970000 正交保障 tensor(0.2788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-5.6226e-01,  3.4121e+00, -5.9479e-01, -1.4188e+00,  1.4173e+00,
         -1.0898e-03,  8.7052e-01, -2.2538e-01, -7.0666e-01,  7.8964e-01,
         -5.3200e-01, -9.4454e-01,  1.5177e+00, -9.6109e-02,  3.3945e-02]],
       device='cuda:0') tensor(0.2788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
971000 特征值优化 tensor(1.7544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.6625,  3.6263, -0.7105, -1.7650,  1.7540, -0.1399,  0.8572, -0.2163,
         -0.7022,  0.7718, -0.6024, -0.9449,  1.5420, -0.0486,  0.0805]],
       device='cuda:0') tensor(0.3408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
972000 特征值优化 tensor(1.6808, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.8148,  3.7403, -0.7591, -1.9715,  2.0867, -0.1975,  0.8880, -0.2202,
         -0.6999,  0.7682, -0.6377, -0.9363,  1.5271, -0.1103,  0.1736]],
       device='cuda:0') tensor(0.3268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
973000 特征值优化 tensor(1.6382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-0.9172,  3.7394, -0.7643, -2.1050,  2.3780, -0.2293,  0.9073, -0.2162,
         -0.7025,  0.7699, -0.6286, -0.9323,  1.5305, -0.1729,  0.2522]],
       device='cuda:0') tensor(0.3411, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
974000 特征值优化 tensor(1.6224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.0432,  3.6357, -0.7569, -2.2349,  2.5623, -0.2575,  0.8969, -0.2077,
         -0.6997,  0.7576, -0.6242, -0.9274,  1.5228, -0.1957,  0.3088]],
       device='cuda:0') tensor(0.3500, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
975000 特征值优化 tensor(1.6151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.1498,  3.5351, -0.7539, -2.3705,  2.6700, -0.2810,  0.8870, -0.2015,
         -0.6937,  0.7363, -0.6341, -0.9163,  1.5106, -0.2196,  0.3384]],
       device='cuda:0') tensor(0.3669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
976000 特征值优化 tensor(1.6118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2638,  3.4359, -0.7534, -2.5141,  2.6934, -0.3050,  0.8663, -0.1989,
         -0.6821,  0.7122, -0.6518, -0.9028,  1.4910, -0.2238,  0.3461]],
       device='cuda:0') tensor(0.3292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
977000 特征值优化 tensor(1.6099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.3646,  3.3697, -0.7537, -2.6496,  2.6782, -0.3323,  0.8461, -0.1934,
         -0.6691,  0.6882, -0.6694, -0.8875,  1.4689, -0.2150,  0.3421]],
       device='cuda:0') tensor(0.3632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
978000 特征值优化 tensor(1.6090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4361,  3.3252, -0.7549, -2.7442,  2.6783, -0.3465,  0.8372, -0.1931,
         -0.6606,  0.6719, -0.6859, -0.8761,  1.4532, -0.2154,  0.3419]],
       device='cuda:0') tensor(0.3331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
979000 特征值优化 tensor(1.6081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.4938,  3.2657, -0.7574, -2.8276,  2.6743, -0.3564,  0.8230, -0.1925,
         -0.6512,  0.6510, -0.7020, -0.8646,  1.4402, -0.2090,  0.3428]],
       device='cuda:0') tensor(0.3599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
980000 特征值优化 tensor(1.6072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.5695,  3.2199, -0.7540, -2.9191,  2.6685, -0.3751,  0.8100, -0.1937,
         -0.6407,  0.6321, -0.7219, -0.8551,  1.4247, -0.2038,  0.3396]],
       device='cuda:0') tensor(0.3610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
981000 特征值优化 tensor(3.4851, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.2679,  0.3007, -0.3249,  1.6347,  0.1560,  0.1330,  0.0489,  0.3871,
          0.5864,  0.3897,  1.3946, -0.6109, -0.0760, -0.1415,  1.9624]],
       device='cuda:0') tensor(0.5913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
982000 特征值优化 tensor(2.6138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.7065,  0.6192, -0.0024,  2.0580,  0.5939,  0.1220, -0.1589,  0.0597,
          0.6426,  0.2714,  0.6458, -0.6040, -0.3211, -0.1476,  2.0736]],
       device='cuda:0') tensor(0.5678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
983000 特征值优化 tensor(2.5397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9305,  0.4347, -0.0174,  1.9849,  0.6846,  0.0883, -0.0767,  0.0105,
          0.6997,  0.2944,  0.3402, -0.6182, -0.3254, -0.1476,  2.1061]],
       device='cuda:0') tensor(0.5574, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
984000 正交保障 tensor(0.5474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0014,  0.4553, -0.0331,  1.6221,  0.7178,  0.1014, -0.0780,  0.0078,
          0.7239,  0.3004,  0.1664, -0.5760, -0.3068, -0.1658,  2.1096]],
       device='cuda:0') tensor(0.5474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
985000 特征值优化 tensor(2.4981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0484,  0.4837, -0.0426,  1.3518,  0.7773,  0.1205, -0.0903,  0.0079,
          0.7334,  0.3077,  0.0652, -0.5507, -0.2905, -0.1614,  2.1370]],
       device='cuda:0') tensor(0.5300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
986000 正交保障 tensor(0.5480, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0626,  0.4938, -0.0439,  1.3264,  0.7760,  0.1172, -0.0904,  0.0075,
          0.7358,  0.3082,  0.0709, -0.5439, -0.2871, -0.1623,  2.1356]],
       device='cuda:0') tensor(0.5480, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
987000 特征值优化 tensor(2.4979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0653,  0.4935, -0.0431,  1.3246,  0.7778,  0.1180, -0.0905,  0.0079,
          0.7356,  0.3087,  0.0698, -0.5448, -0.2870, -0.1617,  2.1380]],
       device='cuda:0') tensor(0.5178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
988000 特征值优化 tensor(2.4977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0637,  0.4954, -0.0434,  1.3231,  0.7920,  0.1175, -0.0917,  0.0071,
          0.7355,  0.3115,  0.0720, -0.5457, -0.2906, -0.1584,  2.1431]],
       device='cuda:0') tensor(0.5207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
989000 特征值优化 tensor(2.4978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0636,  0.4949, -0.0459,  1.3241,  0.7862,  0.1179, -0.0905,  0.0082,
          0.7355,  0.3102,  0.0704, -0.5433, -0.2911, -0.1598,  2.1406]],
       device='cuda:0') tensor(0.5060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
990000 正交保障 tensor(0.5420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0655,  0.4945, -0.0470,  1.3242,  0.7855,  0.1178, -0.0911,  0.0079,
          0.7361,  0.3099,  0.0706, -0.5440, -0.2913, -0.1598,  2.1408]],
       device='cuda:0') tensor(0.5420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
991000 特征值优化 tensor(2.4978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0675,  0.4951, -0.0450,  1.3213,  0.7892,  0.1185, -0.0915,  0.0084,
          0.7351,  0.3087,  0.0714, -0.5468, -0.2913, -0.1595,  2.1420]],
       device='cuda:0') tensor(0.5028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
992000 特征值优化 tensor(2.4976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0637,  0.4974, -0.0459,  1.3198,  0.8019,  0.1198, -0.0912,  0.0093,
          0.7348,  0.3106,  0.0704, -0.5458, -0.2932, -0.1559,  2.1454]],
       device='cuda:0') tensor(0.4962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
已收敛，重新迭代
993000 正交保障 tensor(0.4714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3288, -1.2556,  0.4147,  2.2225, -0.2078, -0.6237,  0.0903, -0.1309,
         -0.3924,  0.9535,  0.0353,  0.1838,  0.1999,  0.2482, -1.7273]],
       device='cuda:0') tensor(0.4714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
994000 特征值优化 tensor(2.5515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6622, -0.8911,  0.3517,  2.1065,  0.1462, -0.1108,  0.1858, -0.1005,
         -0.3810,  0.8969,  0.0649,  0.2185,  0.1287,  0.0260, -1.9588]],
       device='cuda:0') tensor(0.4693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
995000 特征值优化 tensor(2.2350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7044, -1.0259,  0.5140,  1.8831,  0.7473,  0.1813,  0.2491, -0.1128,
         -0.4204,  0.9550,  0.1337,  0.2504,  0.1366, -0.2293, -2.1119]],
       device='cuda:0') tensor(0.5361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
996000 特征值优化 tensor(2.1950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7793, -1.0761,  0.5798,  1.8956,  1.0589,  0.2014,  0.2410, -0.1221,
         -0.4528,  1.0119,  0.1569,  0.2793,  0.1372, -0.2632, -2.1922]],
       device='cuda:0') tensor(0.5891, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
997000 特征值优化 tensor(2.1727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8920, -1.1293,  0.6561,  1.9251,  1.3324,  0.1913,  0.2524, -0.1414,
         -0.4791,  1.0644,  0.1677,  0.3074,  0.1326, -0.3128, -2.2669]],
       device='cuda:0') tensor(0.5992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
998000 特征值优化 tensor(2.1645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.0204, -1.1753,  0.7255,  1.9534,  1.5152,  0.1849,  0.2435, -0.1433,
         -0.4968,  1.1045,  0.1855,  0.3272,  0.1239, -0.3532, -2.3148]],
       device='cuda:0') tensor(0.5721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
999000 正交保障 tensor(0.6918, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 2.1290, -1.2122,  0.7746,  1.9754,  1.6395,  0.2158,  0.2191, -0.1287,
         -0.5096,  1.1331,  0.2103,  0.3418,  0.1193, -0.3874, -2.3474]],
       device='cuda:0') tensor(0.6918, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
完成共1000000轮迭代 推荐参数如下：
收敛loss为： ('收敛', tensor(1.1189))
tensor([[ 1.5263, -4.3383, -2.4179, -1.0207,  1.3008,  0.7829,  1.1961,  0.5175,
         -0.1986, -0.3115,  0.9014, -0.6172,  1.3901, -0.2847, -1.1724]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1193))
tensor([[ 1.9482, -4.1687, -2.3812, -1.4826,  1.3004, -0.1504, -0.9203, -0.6059,
          0.1650, -1.4934, -1.5349, -0.0310, -0.4359,  0.2853,  1.1720]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1194))
tensor([[-0.9684, -4.6854, -1.6480,  1.4991,  1.3014,  0.9429,  1.2801,  0.2299,
         -0.1865, -1.5162,  0.7412, -0.3150,  0.1845, -0.2859, -1.1720]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1211))
tensor([[ 2.5723, -4.3587, -0.6882, -2.1902,  1.3001, -0.0562, -1.0339,  0.0231,
          0.2991, -1.3458, -1.6160, -0.5453, -0.5055,  0.2853,  1.1715]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1213))
tensor([[-1.8865,  2.8173, -3.5858,  2.6956,  1.2930,  1.5263, -0.4509,  1.0537,
          0.5432,  0.0634,  0.1435, -1.3193, -0.7618, -0.2909, -1.1694]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1214))
tensor([[-2.4163, -3.2197,  2.7910,  3.8084,  1.2826,  1.9336,  0.5880, -0.5980,
          1.1202, -0.0531, -0.2580,  0.9391, -0.8154, -0.2942, -1.1672]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1216))
tensor([[ 4.8282,  0.8480, -2.9852, -3.5651,  1.2820,  0.4528,  0.1605, -0.4548,
          0.1232,  1.2327, -2.1213,  0.7190,  0.8496,  0.2916,  1.1668]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1222))
tensor([[ 3.7091,  0.3028, -3.9028, -2.8230,  1.2937, -0.2531, -0.0053,  0.7999,
          1.2650, -0.1956,  1.9167, -0.9963, -0.1724, -0.2912, -1.1701]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1222))
tensor([[-0.6834, -4.3465,  2.2858,  1.1123,  1.3022, -1.3059, -1.1189,  0.4758,
          0.6125, -0.1602, -0.3541,  0.3297,  1.4089,  0.2871,  1.1728]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1224))
tensor([[ 1.9145, -4.2843, -1.8907, -1.4719,  1.3042, -0.3082, -1.1695, -0.2382,
          0.6370, -1.2599, -1.3523, -0.5855, -0.4093,  0.2871,  1.1732]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1226))
tensor([[ 0.4581, -0.3861, -4.9303, -0.1073,  1.3009,  0.9918,  0.2158,  1.2677,
         -0.1975,  0.1060,  0.6677,  1.5339,  0.2656, -0.2862, -1.1723]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1228))
tensor([[-3.8156,  1.4947, -2.2959,  4.7079,  1.2890, -2.1047,  0.2207, -0.3773,
         -0.9162, -0.4935,  0.4474, -0.9649,  0.8137,  0.2922,  1.1688]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1230))
tensor([[-3.6865,  1.0656, -2.7646,  4.4611,  1.2930, -1.9208,  0.5353, -0.5533,
         -0.8648,  0.2198,  0.2638,  0.1910,  1.3430,  0.2919,  1.1701]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1230))
tensor([[ 3.2325, -2.0731,  3.9620, -1.9567,  1.2728, -0.0927,  0.6686, -0.7769,
         -0.1673,  0.9547,  1.7551, -0.3171, -1.3285, -0.2932, -1.1645]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1235))
tensor([[-0.1216, -4.1521, -2.9757,  1.4307,  1.2819,  1.3853,  0.9494,  0.8383,
          1.1592, -0.3936,  0.2810,  0.9963,  0.5814, -0.2953, -1.1662]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1237))
tensor([[ 2.4466,  4.7218,  1.5067, -0.9100,  1.2767,  0.7300, -1.3848, -0.1674,
          0.9528,  1.0723,  0.9581, -0.6506,  0.6530, -0.2947, -1.1656]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.1250))
tensor([[ 5.1048,  2.7753, -1.7922, -3.2151,  1.2661, -0.4990, -0.3653,  0.3035,
          1.1486,  0.2605,  2.1970, -0.8823,  0.9341, -0.2953, -1.1625]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.2246))
tensor([[ 1.4433,  1.0432,  3.0838,  1.1621,  1.4250,  1.8884, -1.0664, -1.2089,
         -1.9607, -0.5708,  0.8258,  0.5428,  0.3359, -0.3589, -1.2065]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4328))
tensor([[-2.4474,  2.7760, -2.5693,  1.7953,  0.9547, -1.5832,  0.7733, -0.6793,
          0.8500, -0.2401, -0.4813, -1.1222,  0.3343, -0.2558,  1.1082]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4340))
tensor([[-1.0390,  3.0646, -2.8614,  0.1860,  0.9581, -1.1942,  0.8607, -0.7564,
         -0.2288,  0.9914, -0.8751, -0.0576, -1.0397, -0.2572,  1.1112]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4389))
tensor([[-3.1713,  0.2026,  2.9328,  2.2218,  0.9570,  1.8043,  0.0221, -0.8382,
         -0.6854,  1.0380,  0.2613, -0.6964,  0.4039,  0.2574, -1.1113]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4414))
tensor([[-2.3249,  2.6819, -2.2940,  0.8541,  0.9584,  1.5602, -0.7603,  0.6322,
         -0.0801, -1.4053,  0.5458,  0.0038,  0.2395,  0.2584, -1.1123]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4917))
tensor([[ 1.4664,  0.1438, -3.0727,  1.0114,  0.9570,  0.8169,  0.1605,  0.8478,
         -1.2106,  1.3873,  0.4000, -0.2401,  0.5905,  0.2495, -1.1236]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4919))
tensor([[ 0.1959, -1.9524, -2.1179,  2.2394,  0.9557, -1.0388, -0.7000, -0.3271,
          1.4754, -0.8114, -0.1862,  0.9322,  0.2849, -0.2498,  1.1235]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4930))
tensor([[ 1.8331, -1.1078, -2.7132,  0.3306,  0.9595,  0.6974,  0.2053,  0.8506,
          0.3918, -1.7892,  0.5461, -0.5527,  0.1287,  0.2515, -1.1239]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4934))
tensor([[ 1.8155, -2.7716,  0.7239,  0.4703,  0.9520, -0.7078, -0.7640,  0.4016,
          0.4525, -1.7562, -0.5408,  0.6877, -0.0086, -0.2496,  1.1229]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4949))
tensor([[ 2.2226, -0.5611, -2.6330, -0.3702,  0.9643,  0.5084,  0.3141,  0.8034,
          0.7504, -1.5515,  0.7642, -0.1659, -0.7372,  0.2516, -1.1222]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4955))
tensor([[-0.7898, -2.2493, -0.3580,  2.6562,  0.9624, -1.1379, -0.6619,  0.2002,
          1.3082,  0.6571, -0.1408, -0.2053,  1.1871, -0.2522,  1.1223]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.4970))
tensor([[ 0.9014, -1.9539,  1.9280,  0.8059,  0.9576, -0.3512, -0.4804,  0.6212,
         -0.0383, -0.4028, -0.9409,  1.8428,  0.1043, -0.2519,  1.1245]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5004))
tensor([[ 0.7121,  1.0938, -2.3333,  0.7567,  0.9518, -0.3848,  0.4086, -0.6573,
          0.1802,  0.3872, -0.9327, -0.0498, -1.8260, -0.2517,  1.1252]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5021))
tensor([[ 1.4057, -1.5031,  2.0005, -0.2861,  0.9365, -0.5168, -0.2662,  0.7709,
         -0.7543, -1.1672, -0.8571,  1.1633, -0.1623, -0.2459,  1.1214]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5038))
tensor([[ 2.1088,  0.8975, -1.7617, -0.7811,  0.9447,  0.4668, -0.3440,  0.7016,
         -1.5922, -0.3843,  0.8798,  0.1728,  0.8867,  0.2516, -1.1231]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5041))
tensor([[-0.5420, -2.3707,  0.7436,  1.3983,  0.9384, -1.0238, -0.6256,  0.4419,
          0.0701, -1.4312, -0.3723,  1.0572, -0.0235, -0.2467,  1.1203]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5049))
tensor([[ 1.3633,  2.1182,  0.9025, -0.1751,  0.9352,  0.3594, -0.5288, -0.5145,
         -0.4896, -0.9023,  0.9888,  1.2945, -0.8303,  0.2497, -1.1226]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5079))
tensor([[-0.2606,  2.2357,  0.7297,  1.0041,  0.9250,  0.9541, -0.6185, -0.4480,
          1.3233, -0.6008,  0.4466,  0.2829,  1.0028,  0.2481, -1.1179]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5604))
tensor([[-3.6086,  0.6204,  2.8091, -1.8490,  2.8767,  0.8804, -0.1589, -0.7175,
          0.2929, -1.2862,  0.4329, -0.2011, -1.1734,  0.1004, -0.3912]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5605))
tensor([[-2.8021, -2.0777, -2.1792, -2.6574,  2.8841,  0.6756,  0.5296,  0.5579,
          0.0248,  1.3441,  0.6390, -1.1172,  0.3161,  0.1028, -0.3932]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.5614))
tensor([[-1.8531, -1.7063,  2.3104, -3.5805,  2.8814, -0.4326, -0.4360,  0.5902,
          1.5487, -0.1809, -0.8743, -0.8280,  0.2459, -0.1019,  0.3928]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6072))
tensor([[-1.6222,  3.1820, -0.7557, -2.9858,  2.6750, -0.3851,  0.8009, -0.1918,
         -0.6361,  0.6178, -0.7411, -0.8480,  1.4126, -0.2054,  0.3410]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6083))
tensor([[-1.6859,  2.6387, -2.1029, -2.6585,  2.6790,  0.4136, -0.6690,  0.5298,
         -0.5533,  1.7420,  0.6507, -0.5559,  0.1008,  0.2091, -0.3435]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6126))
tensor([[-0.5337,  2.1324, -2.5285, -3.2135,  2.7160, -0.1199,  0.5308, -0.6402,
          0.9064,  0.6826, -0.8287,  0.6510,  1.5263, -0.2305,  0.3504]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6264))
tensor([[ 1.5050,  1.3195,  0.9763,  2.4949,  3.3076, -0.2998,  0.2069,  0.2603,
          1.5901, -1.2286, -0.0511,  1.7038, -0.0788,  0.8363,  1.6826]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6267))
tensor([[ 2.1022,  0.8669,  1.3612,  1.7461,  3.3438,  0.0946, -0.1264, -0.3220,
         -1.2969,  0.4622,  0.2479, -2.2244,  0.1619, -0.8461, -1.6928]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6274))
tensor([[ 3.4011,  0.3343, -0.9529,  0.6101,  3.2397, -0.0593, -0.0804,  0.2615,
         -2.4616, -0.2053,  0.4015,  0.0143,  0.8989, -0.8202, -1.6666]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6285))
tensor([[ 2.6941,  1.6557,  0.1286,  1.4300,  3.1759,  0.0410,  0.2959,  0.0228,
          0.4699,  0.6937, -0.3790,  1.5359,  1.9697,  0.8042,  1.6503]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6301))
tensor([[ 1.2607, -1.1434,  0.8377,  2.4190,  3.2197,  0.2632,  0.2920, -0.1635,
         -1.1566,  0.3058,  0.0489, -1.0189,  2.0501, -0.8148, -1.6608]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6305))
tensor([[ 1.8632,  1.3480, -0.4434,  1.6204,  3.2471, -0.1303,  0.3263, -0.0845,
          2.0836,  0.2819, -0.1730, -0.5642,  1.3543,  0.8216,  1.6677]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6322))
tensor([[ 2.4052,  0.7086, -0.2939,  0.6494,  3.3700, -0.0723, -0.1734,  0.0712,
          0.8318, -0.6385,  0.3650,  2.1200,  0.8867, -0.8521, -1.7009]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6340))
tensor([[ 2.5824,  0.5361, -0.6501,  0.6833,  3.1839, -0.0956, -0.1261,  0.1597,
         -0.2695, -1.2204,  0.3853, -0.4182, -2.1585, -0.8068, -1.6549]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6342))
tensor([[ 1.0851,  0.4873,  1.0001,  2.1311,  3.1818, -0.2642,  0.1221,  0.2466,
          1.2321, -0.5400, -0.0114, -2.0808,  0.4836,  0.8055,  1.6540]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6351))
tensor([[ 0.4435, -0.0951, -0.0834,  2.1975,  3.5991, -0.3734, -0.0232, -0.0197,
          0.0500, -1.9830,  0.0636, -1.1213, -1.0273,  0.9103,  1.7583]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.6373))
tensor([[ 0.4581, -0.0681, -0.0955,  2.2469,  3.4161, -0.3752, -0.0192, -0.0238,
          0.1033, -2.0271,  0.0720, -1.0853,  0.9420,  0.8645,  1.7108]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7430))
tensor([[-1.3572e+00,  1.8054e+00, -2.0039e+00, -4.2321e+00,  1.8744e+00,
          2.8281e-01, -4.5081e-01,  4.9541e-01, -5.7199e-01, -1.5383e+00,
          1.0357e+00, -1.3060e-01, -7.7723e-02, -3.1671e-03,  4.8152e-02]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7860))
tensor([[ 1.1726, -0.4059,  0.0440,  1.4226,  1.0389, -0.1237, -0.0905,  0.0094,
          1.7319,  0.3616, -0.0674,  1.2455,  0.3999, -0.2921, -1.0717]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7864))
tensor([[ 1.6481, -0.2188,  0.0995,  0.9741,  0.9899, -0.0182, -0.0515,  0.0240,
          0.5743, -0.3466, -0.1752,  2.0805, -0.2382, -0.2840, -1.0595]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7864))
tensor([[ 1.7187e+00,  5.3665e-02, -4.5461e-02,  9.0748e-01,  9.9638e-01,
         -1.3259e-03,  1.3297e-02, -1.0984e-02,  6.4870e-02, -1.7316e-01,
         -1.9311e-01, -1.9136e+00,  1.0682e+00, -2.8554e-01, -1.0623e+00]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7864))
tensor([[ 1.4570, -0.0885, -0.3747,  1.1715,  0.9916,  0.0635,  0.0212,  0.0883,
         -1.2564,  0.0396,  0.1306, -0.3667,  1.7664,  0.2869,  1.0612]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7864))
tensor([[ 1.2047,  0.3978,  0.0236,  1.4203,  0.9887, -0.1229,  0.0941,  0.0052,
         -1.6826,  0.4675, -0.0720,  1.2620, -0.4330, -0.2814, -1.0571]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7864))
tensor([[ 0.9963,  0.2640,  0.0229,  1.6269,  0.9917, -0.1725,  0.0625,  0.0056,
         -1.9041, -0.8015, -0.0227,  0.7159,  0.2311, -0.2836, -1.0612]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7865))
tensor([[ 1.3881,  0.2510, -0.3150,  1.2395,  0.9801, -0.0794,  0.0603, -0.0750,
         -0.1418,  1.3981, -0.1150,  1.4206, -0.9132, -0.2831, -1.0570]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7865))
tensor([[ 1.6222, -0.2148,  0.1673,  1.0044,  0.9970,  0.0243,  0.0504, -0.0393,
          0.3521, -0.6936,  0.1696,  1.8618, -0.8743,  0.2862,  1.0618]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7865))
tensor([[ 1.3354,  0.3954,  0.1118,  1.2900,  0.9871, -0.0925,  0.0939,  0.0271,
         -1.3226, -0.7327, -0.1028,  1.5547,  0.3566, -0.2837, -1.0602]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(1.7865))
tensor([[ 1.0622, -0.2463,  0.2091,  1.5636,  0.9741,  0.1559,  0.0590, -0.0504,
          0.6038, -1.8789,  0.0376,  0.8199, -0.5061,  0.2804,  1.0541]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.0328))
tensor([[ 1.5475,  0.9443, -1.8692,  1.9380, -0.1023,  1.3265, -0.8868,  1.6586,
          1.0463,  1.0077,  1.6159,  1.2168, -0.5034, -0.1910, -0.7327]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1022))
tensor([[ 2.7593e+00, -2.6367e+00, -1.2185e+00, -4.7193e+00,  1.6219e+00,
         -3.4589e-01,  6.5905e-01,  3.0466e-01, -1.0108e+00, -1.2443e+00,
          1.5236e+00,  1.0065e+00,  8.5520e-01, -1.7358e-01, -5.4858e-05]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1301))
tensor([[ 0.9114, -2.7551, -0.5625,  0.3450,  1.8749,  1.1015,  0.6879,  0.9313,
          0.3760, -0.2078,  1.5078,  0.5154,  0.3306,  0.4263, -2.2081]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1305))
tensor([[ 1.2403, -0.2514,  2.7252, -0.0106,  1.8700, -1.7280, -0.5263,  0.9599,
          0.0440, -0.0165, -0.8722, -0.1736,  0.7251, -0.4290,  2.2074]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1413))
tensor([[ 2.6542, -1.3315,  3.4418,  0.0655,  3.7281, -2.2287, -1.4093,  0.3114,
         -0.3954, -0.4062, -1.1406,  0.3708,  0.6985,  0.6841,  2.6428]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1439))
tensor([[ 2.1301,  2.6971, -2.4904,  0.3097,  3.7180, -2.6417,  0.2503, -1.0731,
         -0.2862, -0.2158, -0.5967,  0.3466, -0.8116,  0.6819,  2.6425]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1454))
tensor([[ 3.4790,  2.9039,  1.7680, -0.5836,  3.4946,  2.1195, -0.1042, -1.5173,
          0.1063, -0.5880,  1.3250, -0.7080, -0.2313, -0.6284, -2.5837]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1500))
tensor([[ 2.3289, -0.1142,  0.6818,  1.3052, -0.1979, -0.3466,  0.0076, -0.1551,
          0.2185,  0.7423, -0.1470, -0.6012,  1.7991, -0.2575, -0.6661]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1709))
tensor([[ 2.0280,  1.0813, -0.2917,  2.2439, -0.2159,  0.0895,  0.2341, -0.0171,
          1.4817, -0.7989,  0.2291, -1.0500,  0.4865, -0.2642, -0.6592]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1714))
tensor([[ 1.6445, -1.2341, -0.3359,  3.3329, -0.2121,  0.1553, -0.2195, -0.1789,
         -1.2748,  0.5892,  0.2381, -0.1787,  1.5444, -0.2640, -0.6615]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.1871))
tensor([[ 0.9194,  0.2307, -2.5988,  0.3823,  2.6782, -1.1917,  0.8782, -1.3038,
          0.3523,  0.3168, -0.6126,  0.6608,  0.3327, -0.3176,  2.4417]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.3961))
tensor([[ 2.3125, -1.3538, -0.9610, -0.1207,  1.6968, -0.4201, -0.5717, -0.8395,
          0.7691,  0.3037, -3.5269,  0.4624,  0.0859,  0.4013, -2.1613]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.3967))
tensor([[ 1.1026,  1.8066, -1.1415,  1.1744,  1.6959, -1.1488,  1.3872, -0.8516,
          0.9133,  0.0811, -2.7607, -0.2215,  0.0610,  0.4033, -2.1624]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.4022))
tensor([[ 0.9262,  1.9289, -0.9366,  0.7711,  1.6819,  2.2314, -1.7047,  0.2041,
          0.2505,  0.2901,  1.4680,  0.5748, -0.5341, -0.4011,  2.1602]],
       device='cuda:0')
收敛loss为： ('收敛', tensor(2.4978))
tensor([[ 1.0623,  0.4960, -0.0451,  1.3229,  0.8028,  0.1190, -0.0926,  0.0086,
          0.7380,  0.3099,  0.0725, -0.5443, -0.2937, -0.1557,  2.1444]],
       device='cuda:0')
4238.296283483505
