frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
0 loss tensor(12.5405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(7.9254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(4.6150, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(4.8582e-15, device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>) tensor([[1.0100, 1.0100, 1.0100, 1.0100, 1.0100, 0.9900, 1.0100, 0.9900, 1.0100,
         1.0100, 0.9900, 1.0100, 1.0100, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900,
         0.9900, 1.0100, 0.9900, 1.0100, 0.9900, 1.0100, 1.0100, 1.0100, 0.9900,
         0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900,
         0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900,
         0.9900, 0.9900, 0.9900, 0.9900]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
1000 loss tensor(0.9041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.3880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.4141, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.1020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4895,  1.2278,  1.3131,  2.4297,  1.8992, -0.6708, -0.3019,  1.4235,
          0.7111,  0.3774,  0.2423,  1.0688,  0.6364,  1.5644, -0.1246,  0.2742,
         -0.0314,  0.4304,  1.5030,  0.0536,  0.7709,  0.2604,  0.2301,  0.9447,
          0.4664,  1.4388, -0.1525,  0.9209,  0.5483,  0.5711,  0.7062,  0.8771,
          0.5219,  0.2365,  0.1156,  0.9017,  0.6645,  0.1396,  0.9884,  0.2881,
          1.1432,  0.2621,  0.3055,  0.9357,  0.1547,  0.3605,  0.2203,  1.2593,
          0.0799]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
2000 loss tensor(0.7004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.2858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.3852, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4217,  1.4500,  0.8210,  3.0477,  1.9891, -0.6962, -0.3116,  1.4070,
          0.8040,  0.3954,  0.3131,  1.0538,  0.7093,  1.5121,  0.0399,  0.1988,
         -0.1139,  0.5023,  1.5572, -0.0143,  0.8702,  0.1648,  0.0263,  0.8597,
          0.4145,  1.4985, -0.2147,  0.9221,  0.5423,  0.6486,  0.8170,  0.9465,
          0.5079,  0.1700,  0.0940,  1.0528,  0.6436,  0.1172,  1.0343,  0.1493,
          1.1652,  0.2957,  0.2698,  1.1093,  0.2208,  0.3676,  0.1803,  1.2890,
          0.0408]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
3000 loss tensor(0.6179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.2692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.3420, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3630,  1.4522,  0.7199,  3.1466,  2.0861, -0.6909, -0.3366,  1.3883,
          0.8378,  0.3918,  0.3071,  1.0369,  0.7326,  1.5061,  0.1064,  0.1771,
         -0.1223,  0.5162,  1.5850, -0.0400,  0.8968,  0.1095, -0.0061,  0.8520,
          0.4062,  1.5230, -0.2309,  0.9207,  0.5436,  0.6649,  0.9113,  0.9806,
          0.5012,  0.1725,  0.0855,  1.1131,  0.6284,  0.1148,  1.0400,  0.1276,
          1.1463,  0.3039,  0.2691,  1.1482,  0.2641,  0.3660,  0.1751,  1.3072,
          0.0153]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
4000 loss tensor(0.5703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.2556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.3107, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3011,  1.4534,  0.6961,  3.1635,  2.1434, -0.6581, -0.3303,  1.3715,
          0.8535,  0.4029,  0.2967,  1.0240,  0.7543,  1.5080,  0.1451,  0.1731,
         -0.1202,  0.5137,  1.5778, -0.0430,  0.8886,  0.0785, -0.0091,  0.8480,
          0.3983,  1.5441, -0.2205,  0.8832,  0.5491,  0.6742,  1.0035,  1.0064,
          0.4926,  0.1807,  0.0791,  1.1227,  0.6336,  0.1097,  1.0249,  0.1115,
          1.1299,  0.2991,  0.2817,  1.1600,  0.2958,  0.3413,  0.1785,  1.3176,
         -0.0036]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
5000 loss tensor(0.5835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.2437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.3368, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2707,  1.4414,  0.6812,  3.1830,  2.2242, -0.6220, -0.3275,  1.3557,
          0.8637,  0.4109,  0.2985,  1.0079,  0.7812,  1.5109,  0.1755,  0.1764,
         -0.1193,  0.5151,  1.5647, -0.0598,  0.8806,  0.0668, -0.0086,  0.8499,
          0.3894,  1.5440, -0.2101,  0.8483,  0.5578,  0.6848,  1.1313,  1.0381,
          0.4880,  0.1802,  0.0797,  1.1292,  0.6289,  0.1073,  1.0201,  0.1078,
          1.1231,  0.3068,  0.2921,  1.1705,  0.3281,  0.3310,  0.1839,  1.3295,
         -0.0069]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
6000 loss tensor(0.5025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.2210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2789, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2478,  1.4257,  0.6367,  3.2115,  2.2989, -0.5745, -0.3238,  1.3492,
          0.8857,  0.4201,  0.2998,  0.9925,  0.8083,  1.5092,  0.2328,  0.1921,
         -0.1191,  0.5132,  1.5735, -0.0705,  0.8980,  0.0424, -0.0166,  0.8465,
          0.3810,  1.5493, -0.2047,  0.7720,  0.5557,  0.7006,  1.1857,  1.0963,
          0.4914,  0.1801,  0.0760,  1.1432,  0.6128,  0.0950,  1.0225,  0.1054,
          1.1162,  0.3156,  0.2897,  1.1839,  0.3380,  0.3008,  0.2051,  1.3517,
         -0.0295]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
7000 loss tensor(0.4369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2434, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2737,  1.4172,  0.6507,  3.2122,  2.3222, -0.5505, -0.3286,  1.3485,
          0.9094,  0.4216,  0.2946,  0.9872,  0.8316,  1.5425,  0.2623,  0.2161,
         -0.1214,  0.5150,  1.5637, -0.0697,  0.9078,  0.0327, -0.0235,  0.8357,
          0.3782,  1.5470, -0.1933,  0.7830,  0.5612,  0.7008,  1.2968,  1.1564,
          0.5114,  0.1770,  0.0771,  1.1616,  0.6020,  0.0940,  1.0204,  0.0980,
          1.1126,  0.3242,  0.3033,  1.1953,  0.3732,  0.2843,  0.2037,  1.3569,
         -0.0808]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
8000 loss tensor(0.4282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2473, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2754,  1.4282,  0.6884,  3.2061,  2.3979, -0.5469, -0.3362,  1.3346,
          0.9190,  0.4140,  0.2844,  0.9795,  0.8673,  1.6118,  0.2295,  0.2328,
         -0.1244,  0.5077,  1.5429, -0.0728,  0.9102,  0.0438, -0.0233,  0.8396,
          0.3879,  1.5201, -0.1644,  0.8850,  0.5913,  0.7020,  1.4878,  1.1670,
          0.5275,  0.1763,  0.0827,  1.1832,  0.6065,  0.1019,  1.0008,  0.0913,
          1.1088,  0.3405,  0.3358,  1.2019,  0.3985,  0.3257,  0.1594,  1.3419,
         -0.0459]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
9000 loss tensor(0.3895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2795,  1.4358,  0.6994,  3.1976,  2.3949, -0.5459, -0.3359,  1.3370,
          0.9173,  0.4085,  0.2789,  0.9799,  0.8688,  1.6280,  0.2156,  0.2338,
         -0.1249,  0.5043,  1.5355, -0.0702,  0.9151,  0.0468, -0.0238,  0.8393,
          0.3944,  1.5138, -0.1615,  0.9019,  0.5918,  0.7007,  1.4953,  1.1727,
          0.5306,  0.1786,  0.0830,  1.1848,  0.6077,  0.1011,  0.9953,  0.0922,
          1.1084,  0.3377,  0.3399,  1.2012,  0.3762,  0.3417,  0.1356,  1.3353,
         -0.0142]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
10000 loss tensor(0.4288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2509, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2826,  1.4356,  0.7054,  3.1983,  2.3347, -0.5402, -0.3342,  1.3393,
          0.9171,  0.3988,  0.2750,  0.9771,  0.8706,  1.6220,  0.2180,  0.2390,
         -0.1235,  0.5022,  1.5297, -0.0725,  0.9165,  0.0442, -0.0235,  0.8339,
          0.3957,  1.5053, -0.1615,  0.8933,  0.5747,  0.7037,  1.4992,  1.1891,
          0.5344,  0.1792,  0.0817,  1.1886,  0.6066,  0.1011,  0.9902,  0.0906,
          1.1076,  0.3339,  0.3442,  1.2016,  0.3371,  0.3357,  0.1180,  1.3329,
          0.0065]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
11000 loss tensor(0.3992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2831,  1.4454,  0.7178,  3.1935,  2.2608, -0.5394, -0.3355,  1.3467,
          0.9188,  0.3903,  0.2638,  0.9763,  0.8766,  1.6567,  0.2184,  0.2448,
         -0.1230,  0.5003,  1.5198, -0.0702,  0.9169,  0.0438, -0.0241,  0.8168,
          0.4050,  1.4959, -0.1607,  0.9208,  0.5676,  0.7000,  1.5184,  1.2356,
          0.5379,  0.1829,  0.0800,  1.1941,  0.6077,  0.1061,  0.9845,  0.0913,
          1.1061,  0.3340,  0.3544,  1.2060,  0.3098,  0.3281,  0.0910,  1.3221,
          0.0068]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
12000 loss tensor(0.3728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2760,  1.4633,  0.7397,  3.1877,  2.1747, -0.5395, -0.3402,  1.3642,
          0.9276,  0.3790,  0.2439,  0.9760,  0.8975,  1.7411,  0.2401,  0.2547,
         -0.1218,  0.4976,  1.5114, -0.0635,  0.9216,  0.0431, -0.0272,  0.7934,
          0.4123,  1.4821, -0.1535,  0.9519,  0.5581,  0.6983,  1.5612,  1.3587,
          0.5477,  0.1869,  0.0739,  1.2017,  0.6074,  0.1144,  0.9749,  0.0907,
          1.1053,  0.3314,  0.3701,  1.2150,  0.2517,  0.3103,  0.0410,  1.3144,
          0.0172]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
13000 loss tensor(0.3527, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2537,  1.4882,  0.7652,  3.1935,  2.0784, -0.5505, -0.3508,  1.3861,
          0.9410,  0.3677,  0.2113,  0.9766,  0.9328,  1.8638,  0.2898,  0.2736,
         -0.1213,  0.4968,  1.5103, -0.0596,  0.9243,  0.0391, -0.0327,  0.7692,
          0.4127,  1.4673, -0.1427,  0.9690,  0.5407,  0.7057,  1.6213,  1.5616,
          0.5633,  0.1956,  0.0660,  1.2117,  0.6131,  0.1284,  0.9678,  0.0890,
          1.1086,  0.3357,  0.3944,  1.2338,  0.1486,  0.2729, -0.0299,  1.3072,
          0.0602]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
14000 loss tensor(0.3379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2278,  1.5099,  0.7915,  3.2041,  1.9622, -0.5582, -0.3593,  1.4015,
          0.9531,  0.3576,  0.1865,  0.9785,  0.9686,  1.9736,  0.3318,  0.2902,
         -0.1235,  0.4965,  1.5112, -0.0634,  0.9242,  0.0414, -0.0402,  0.7543,
          0.4034,  1.4557, -0.1286,  0.9875,  0.5136,  0.7157,  1.7110,  1.7462,
          0.5842,  0.2029,  0.0661,  1.2233,  0.6218,  0.1382,  0.9546,  0.0868,
          1.1114,  0.3407,  0.4219,  1.2499,  0.0512,  0.2338, -0.1046,  1.2995,
          0.1066]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
15000 loss tensor(0.3038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.1771, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2120,  1.5245,  0.8126,  3.2400,  1.8197, -0.5604, -0.3663,  1.4046,
          0.9546,  0.3438,  0.1806,  0.9789,  0.9906,  2.0232,  0.3321,  0.3046,
         -0.1228,  0.4969,  1.5101, -0.0708,  0.9198,  0.0432, -0.0477,  0.7378,
          0.4079,  1.4417, -0.1174,  1.0398,  0.4874,  0.7204,  1.8335,  1.8166,
          0.6016,  0.2042,  0.0696,  1.2381,  0.6317,  0.1439,  0.9356,  0.0806,
          1.1083,  0.3503,  0.4495,  1.2625,  0.0110,  0.2117, -0.1546,  1.2904,
          0.1241]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
16000 loss tensor(0.2599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.1093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.1474, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1881,  1.5392,  0.8115,  3.2785,  1.7543, -0.5670, -0.3632,  1.4165,
          0.9533,  0.3411,  0.1838,  0.9817,  0.9992,  2.0600,  0.3349,  0.3112,
         -0.1210,  0.4978,  1.5190, -0.0691,  0.9215,  0.0489, -0.0569,  0.7104,
          0.4262,  1.4381, -0.1126,  1.0619,  0.4731,  0.7223,  1.8374,  1.8638,
          0.6070,  0.2092,  0.0674,  1.2410,  0.6360,  0.1463,  0.9254,  0.0712,
          1.1060,  0.3654,  0.4611,  1.2700, -0.0155,  0.2055, -0.1780,  1.2878,
          0.1281]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
17000 loss tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.1205, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1675,  1.5537,  0.8084,  3.3104,  1.6802, -0.5777, -0.3638,  1.4279,
          0.9509,  0.3388,  0.1808,  0.9877,  1.0091,  2.1123,  0.3421,  0.3166,
         -0.1191,  0.5008,  1.5272, -0.0665,  0.9222,  0.0559, -0.0677,  0.6806,
          0.4381,  1.4311, -0.1067,  1.0912,  0.4583,  0.7235,  1.8340,  1.9355,
          0.6139,  0.2131,  0.0648,  1.2449,  0.6432,  0.1503,  0.9180,  0.0632,
          1.1079,  0.3770,  0.4729,  1.2791, -0.0559,  0.1925, -0.2123,  1.2814,
          0.1374]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
18000 loss tensor(0.2225, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0905, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.1292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1729,  1.5600,  0.8112,  3.3282,  1.5665, -0.5839, -0.3680,  1.4331,
          0.9494,  0.3325,  0.1683,  0.9908,  1.0152,  2.1570,  0.3431,  0.3203,
         -0.1175,  0.5035,  1.5282, -0.0678,  0.9213,  0.0622, -0.0714,  0.6729,
          0.4352,  1.4254, -0.1039,  1.1364,  0.4449,  0.7221,  1.8573,  1.9925,
          0.6194,  0.2155,  0.0657,  1.2539,  0.6506,  0.1568,  0.9079,  0.0621,
          1.1094,  0.3799,  0.4874,  1.2845, -0.0903,  0.1780, -0.2479,  1.2729,
          0.1494]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
19000 loss tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0845, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.1177, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1860,  1.5671,  0.8089,  3.3496,  1.4430, -0.5870, -0.3702,  1.4352,
          0.9465,  0.3251,  0.1601,  0.9955,  1.0146,  2.1841,  0.3257,  0.3226,
         -0.1174,  0.5068,  1.5259, -0.0684,  0.9216,  0.0681, -0.0761,  0.6685,
          0.4378,  1.4203, -0.1006,  1.1959,  0.4287,  0.7183,  1.9021,  2.0146,
          0.6245,  0.2164,  0.0677,  1.2637,  0.6573,  0.1616,  0.8939,  0.0612,
          1.1071,  0.3851,  0.5016,  1.2896, -0.1119,  0.1712, -0.2849,  1.2629,
          0.1590]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
20000 loss tensor(0.1703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0973, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1938,  1.5790,  0.8014,  3.3887,  1.2993, -0.5939, -0.3746,  1.4440,
          0.9432,  0.3157,  0.1493,  1.0046,  1.0214,  2.2479,  0.3136,  0.3248,
         -0.1165,  0.5129,  1.5260, -0.0656,  0.9244,  0.0747, -0.0879,  0.6545,
          0.4413,  1.4152, -0.0946,  1.2730,  0.4080,  0.7170,  1.9599,  2.0777,
          0.6338,  0.2174,  0.0704,  1.2787,  0.6700,  0.1674,  0.8769,  0.0577,
          1.1064,  0.3938,  0.5212,  1.2993, -0.1513,  0.1633, -0.3427,  1.2543,
          0.1826]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
21000 loss tensor(0.1479, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0804, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2107,  1.5908,  0.7881,  3.4256,  1.1277, -0.6036, -0.3803,  1.4567,
          0.9406,  0.3082,  0.1314,  1.0154,  1.0303,  2.3370,  0.3069,  0.3265,
         -0.1171,  0.5205,  1.5309, -0.0653,  0.9286,  0.0829, -0.0991,  0.6477,
          0.4348,  1.4151, -0.0931,  1.3654,  0.3882,  0.7161,  2.0292,  2.1713,
          0.6433,  0.2214,  0.0735,  1.2980,  0.6826,  0.1753,  0.8553,  0.0559,
          1.1066,  0.3991,  0.5433,  1.3111, -0.2055,  0.1505, -0.4150,  1.2402,
          0.2184]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
22000 loss tensor(0.1353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0740, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2333,  1.5917,  0.7599,  3.4448,  1.0676, -0.6116, -0.3815,  1.4626,
          0.9396,  0.3089,  0.1222,  1.0223,  1.0327,  2.3891,  0.3200,  0.3222,
         -0.1155,  0.5284,  1.5386, -0.0650,  0.9316,  0.0873, -0.1062,  0.6448,
          0.4259,  1.4149, -0.0908,  1.3985,  0.3770,  0.7153,  2.0345,  2.2374,
          0.6447,  0.2230,  0.0747,  1.3061,  0.6878,  0.1828,  0.8433,  0.0548,
          1.1080,  0.4038,  0.5530,  1.3157, -0.2399,  0.1389, -0.4430,  1.2365,
          0.2380]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
23000 loss tensor(0.1230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0650, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2550,  1.5899,  0.7264,  3.4537,  1.0480, -0.6222, -0.3819,  1.4678,
          0.9399,  0.3143,  0.1126,  1.0286,  1.0347,  2.4396,  0.3509,  0.3162,
         -0.1131,  0.5370,  1.5489, -0.0642,  0.9300,  0.0912, -0.1113,  0.6403,
          0.4103,  1.4153, -0.0913,  1.4061,  0.3687,  0.7172,  2.0088,  2.3120,
          0.6426,  0.2254,  0.0755,  1.3125,  0.6900,  0.1923,  0.8342,  0.0522,
          1.1110,  0.4108,  0.5601,  1.3187, -0.2747,  0.1213, -0.4563,  1.2318,
          0.2528]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
24000 loss tensor(0.1348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0783, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2817,  1.5836,  0.6940,  3.4589,  1.0393, -0.6243, -0.3804,  1.4698,
          0.9389,  0.3178,  0.1132,  1.0320,  1.0308,  2.4556,  0.3627,  0.3073,
         -0.1110,  0.5414,  1.5567, -0.0615,  0.9307,  0.0934, -0.1159,  0.6413,
          0.4024,  1.4154, -0.0893,  1.4137,  0.3612,  0.7158,  1.9897,  2.3324,
          0.6402,  0.2272,  0.0780,  1.3159,  0.6892,  0.1989,  0.8255,  0.0525,
          1.1099,  0.4133,  0.5636,  1.3154, -0.2844,  0.1155, -0.4559,  1.2281,
          0.2577]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
25000 loss tensor(0.1235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0482, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0722, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3082,  1.5809,  0.6526,  3.4702,  1.0186, -0.6378, -0.3815,  1.4787,
          0.9408,  0.3248,  0.1031,  1.0430,  1.0340,  2.5242,  0.4055,  0.2989,
         -0.1093,  0.5528,  1.5721, -0.0610,  0.9318,  0.0955, -0.1228,  0.6380,
          0.3830,  1.4181, -0.0891,  1.4244,  0.3482,  0.7187,  1.9604,  2.4344,
          0.6360,  0.2295,  0.0777,  1.3231,  0.6914,  0.2098,  0.8124,  0.0480,
          1.1122,  0.4204,  0.5716,  1.3186, -0.3289,  0.0935, -0.4723,  1.2257,
          0.2766]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
26000 loss tensor(0.1194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0469, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0696, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3338,  1.5777,  0.6181,  3.4757,  1.0081, -0.6453, -0.3786,  1.4850,
          0.9417,  0.3303,  0.0991,  1.0510,  1.0333,  2.5646,  0.4326,  0.2890,
         -0.1094,  0.5592,  1.5859, -0.0608,  0.9333,  0.0977, -0.1291,  0.6376,
          0.3704,  1.4212, -0.0880,  1.4341,  0.3373,  0.7187,  1.9411,  2.4956,
          0.6334,  0.2320,  0.0793,  1.3285,  0.6908,  0.2172,  0.8004,  0.0461,
          1.1114,  0.4240,  0.5768,  1.3171, -0.3553,  0.0797, -0.4798,  1.2239,
          0.2868]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
27000 loss tensor(0.1065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0415, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0620, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3609,  1.5709,  0.5766,  3.4784,  0.9958, -0.6557, -0.3783,  1.4926,
          0.9421,  0.3352,  0.0950,  1.0615,  1.0333,  2.6212,  0.4726,  0.2786,
         -0.1077,  0.5691,  1.6025, -0.0619,  0.9362,  0.0969, -0.1361,  0.6355,
          0.3520,  1.4244, -0.0887,  1.4460,  0.3244,  0.7209,  1.9183,  2.5784,
          0.6297,  0.2334,  0.0790,  1.3360,  0.6922,  0.2268,  0.7868,  0.0436,
          1.1115,  0.4281,  0.5847,  1.3182, -0.3906,  0.0611, -0.4887,  1.2219,
          0.3021]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
28000 loss tensor(0.0900, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0377, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0494, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3771,  1.5655,  0.5549,  3.4767,  0.9903, -0.6591, -0.3774,  1.4943,
          0.9398,  0.3363,  0.0946,  1.0648,  1.0284,  2.6301,  0.4855,  0.2729,
         -0.1061,  0.5733,  1.6084, -0.0626,  0.9351,  0.0968, -0.1372,  0.6369,
          0.3438,  1.4231, -0.0888,  1.4552,  0.3195,  0.7210,  1.9038,  2.5904,
          0.6254,  0.2320,  0.0794,  1.3405,  0.6910,  0.2329,  0.7795,  0.0407,
          1.1103,  0.4302,  0.5885,  1.3155, -0.3978,  0.0557, -0.4840,  1.2223,
          0.3063]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
29000 loss tensor(0.1001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0413, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0561, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3967,  1.5591,  0.5275,  3.4754,  0.9862, -0.6640, -0.3762,  1.4977,
          0.9394,  0.3377,  0.0941,  1.0711,  1.0251,  2.6529,  0.5066,  0.2653,
         -0.1053,  0.5787,  1.6165, -0.0647,  0.9364,  0.0958, -0.1408,  0.6362,
          0.3338,  1.4238, -0.0894,  1.4649,  0.3115,  0.7210,  1.8908,  2.6225,
          0.6213,  0.2321,  0.0804,  1.3456,  0.6908,  0.2387,  0.7704,  0.0396,
          1.1089,  0.4327,  0.5942,  1.3135, -0.4115,  0.0468, -0.4826,  1.2204,
          0.3133]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
30000 loss tensor(0.0900, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0512, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4175,  1.5538,  0.4954,  3.4781,  0.9830, -0.6683, -0.3742,  1.5038,
          0.9398,  0.3401,  0.0944,  1.0806,  1.0239,  2.6902,  0.5363,  0.2550,
         -0.1057,  0.5843,  1.6287, -0.0667,  0.9403,  0.0938, -0.1468,  0.6376,
          0.3218,  1.4252, -0.0890,  1.4745,  0.3003,  0.7211,  1.8796,  2.6727,
          0.6197,  0.2318,  0.0814,  1.3514,  0.6901,  0.2446,  0.7590,  0.0387,
          1.1065,  0.4335,  0.5994,  1.3120, -0.4310,  0.0359, -0.4845,  1.2241,
          0.3219]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
31000 loss tensor(0.0870, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0486, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4316,  1.5516,  0.4803,  3.4782,  0.9830, -0.6696, -0.3728,  1.5047,
          0.9391,  0.3399,  0.0950,  1.0842,  1.0193,  2.6950,  0.5449,  0.2505,
         -0.1054,  0.5864,  1.6328, -0.0669,  0.9409,  0.0941, -0.1481,  0.6387,
          0.3176,  1.4245, -0.0888,  1.4806,  0.2965,  0.7206,  1.8736,  2.6780,
          0.6164,  0.2309,  0.0818,  1.3537,  0.6894,  0.2480,  0.7542,  0.0370,
          1.1045,  0.4346,  0.6023,  1.3100, -0.4337,  0.0328, -0.4800,  1.2249,
          0.3241]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
32000 loss tensor(0.0709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0351, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4448,  1.5478,  0.4637,  3.4770,  0.9806, -0.6722, -0.3706,  1.5055,
          0.9390,  0.3404,  0.0944,  1.0890,  1.0157,  2.7096,  0.5593,  0.2465,
         -0.1062,  0.5899,  1.6381, -0.0674,  0.9414,  0.0940, -0.1495,  0.6389,
          0.3118,  1.4254, -0.0897,  1.4864,  0.2916,  0.7202,  1.8687,  2.6954,
          0.6132,  0.2326,  0.0812,  1.3577,  0.6885,  0.2518,  0.7487,  0.0351,
          1.1023,  0.4364,  0.6058,  1.3090, -0.4397,  0.0280, -0.4774,  1.2270,
          0.3285]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
33000 loss tensor(0.0764, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0377, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4573,  1.5455,  0.4461,  3.4787,  0.9808, -0.6740, -0.3712,  1.5074,
          0.9385,  0.3404,  0.0947,  1.0937,  1.0139,  2.7223,  0.5743,  0.2417,
         -0.1051,  0.5923,  1.6453, -0.0677,  0.9431,  0.0922, -0.1515,  0.6398,
          0.3073,  1.4246, -0.0896,  1.4930,  0.2879,  0.7192,  1.8669,  2.7125,
          0.6119,  0.2309,  0.0817,  1.3618,  0.6893,  0.2554,  0.7441,  0.0347,
          1.1008,  0.4370,  0.6094,  1.3078, -0.4459,  0.0219, -0.4745,  1.2336,
          0.3333]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
34000 loss tensor(0.0775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0425, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4711,  1.5417,  0.4236,  3.4798,  0.9790, -0.6777, -0.3709,  1.5106,
          0.9395,  0.3408,  0.0940,  1.1007,  1.0103,  2.7464,  0.5984,  0.2367,
         -0.1058,  0.5968,  1.6540, -0.0682,  0.9441,  0.0914, -0.1538,  0.6399,
          0.2995,  1.4270, -0.0916,  1.5015,  0.2826,  0.7207,  1.8670,  2.7458,
          0.6095,  0.2319,  0.0806,  1.3671,  0.6893,  0.2607,  0.7372,  0.0322,
          1.0985,  0.4397,  0.6139,  1.3092, -0.4582,  0.0127, -0.4722,  1.2395,
          0.3427]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
35000 loss tensor(0.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4748,  1.5399,  0.4208,  3.4765,  0.9768, -0.6785, -0.3707,  1.5096,
          0.9379,  0.3398,  0.0932,  1.1009,  1.0097,  2.7516,  0.6022,  0.2361,
         -0.1050,  0.5981,  1.6536, -0.0687,  0.9434,  0.0912, -0.1533,  0.6392,
          0.2965,  1.4247, -0.0912,  1.5027,  0.2816,  0.7214,  1.8606,  2.7507,
          0.6076,  0.2312,  0.0802,  1.3688,  0.6903,  0.2625,  0.7366,  0.0316,
          1.0991,  0.4402,  0.6160,  1.3093, -0.4618,  0.0106, -0.4722,  1.2389,
          0.3437]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
36000 loss tensor(0.0634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4774,  1.5403,  0.4211,  3.4729,  0.9725, -0.6780, -0.3697,  1.5082,
          0.9369,  0.3399,  0.0928,  1.1009,  1.0086,  2.7510,  0.6015,  0.2356,
         -0.1046,  0.5974,  1.6529, -0.0679,  0.9429,  0.0929, -0.1528,  0.6387,
          0.2967,  1.4230, -0.0904,  1.5026,  0.2810,  0.7209,  1.8569,  2.7489,
          0.6066,  0.2314,  0.0804,  1.3677,  0.6903,  0.2630,  0.7366,  0.0317,
          1.0987,  0.4396,  0.6169,  1.3081, -0.4620,  0.0106, -0.4723,  1.2392,
          0.3436]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
37000 loss tensor(0.0646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4810,  1.5410,  0.4210,  3.4708,  0.9699, -0.6772, -0.3686,  1.5070,
          0.9371,  0.3396,  0.0922,  1.1012,  1.0067,  2.7508,  0.5997,  0.2354,
         -0.1044,  0.5965,  1.6520, -0.0669,  0.9420,  0.0942, -0.1518,  0.6389,
          0.2978,  1.4216, -0.0903,  1.5016,  0.2798,  0.7192,  1.8521,  2.7472,
          0.6058,  0.2313,  0.0813,  1.3661,  0.6903,  0.2626,  0.7362,  0.0314,
          1.0978,  0.4400,  0.6167,  1.3069, -0.4607,  0.0118, -0.4729,  1.2384,
          0.3421]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
38000 loss tensor(0.0769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0421, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4839,  1.5426,  0.4207,  3.4684,  0.9658, -0.6753, -0.3669,  1.5058,
          0.9368,  0.3412,  0.0925,  1.1019,  1.0063,  2.7488,  0.5989,  0.2343,
         -0.1051,  0.5954,  1.6530, -0.0650,  0.9430,  0.0968, -0.1517,  0.6396,
          0.2982,  1.4208, -0.0882,  1.5021,  0.2796,  0.7185,  1.8483,  2.7459,
          0.6052,  0.2324,  0.0818,  1.3643,  0.6892,  0.2625,  0.7351,  0.0318,
          1.0966,  0.4385,  0.6167,  1.3047, -0.4611,  0.0116, -0.4723,  1.2362,
          0.3424]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
39000 loss tensor(0.0755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0335, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0392, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4865,  1.5426,  0.4207,  3.4647,  0.9628, -0.6744, -0.3660,  1.5046,
          0.9359,  0.3407,  0.0921,  1.1018,  1.0048,  2.7469,  0.5979,  0.2339,
         -0.1047,  0.5944,  1.6526, -0.0636,  0.9415,  0.0981, -0.1510,  0.6393,
          0.2989,  1.4181, -0.0877,  1.5024,  0.2797,  0.7183,  1.8434,  2.7437,
          0.6051,  0.2320,  0.0822,  1.3639,  0.6895,  0.2626,  0.7348,  0.0323,
          1.0965,  0.4384,  0.6171,  1.3035, -0.4613,  0.0110, -0.4723,  1.2345,
          0.3422]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
40000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0340, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4887,  1.5428,  0.4194,  3.4624,  0.9584, -0.6728, -0.3658,  1.5034,
          0.9349,  0.3407,  0.0927,  1.1018,  1.0047,  2.7460,  0.5970,  0.2330,
         -0.1037,  0.5935,  1.6527, -0.0630,  0.9412,  0.0988, -0.1509,  0.6398,
          0.2986,  1.4155, -0.0872,  1.5024,  0.2790,  0.7168,  1.8384,  2.7412,
          0.6047,  0.2315,  0.0829,  1.3624,  0.6898,  0.2629,  0.7348,  0.0331,
          1.0965,  0.4370,  0.6175,  1.3015, -0.4608,  0.0115, -0.4720,  1.2346,
          0.3424]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
41000 loss tensor(0.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0335, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4910,  1.5411,  0.4191,  3.4576,  0.9541, -0.6725, -0.3655,  1.5008,
          0.9330,  0.3398,  0.0918,  1.1005,  1.0031,  2.7439,  0.5972,  0.2332,
         -0.1024,  0.5937,  1.6510, -0.0636,  0.9397,  0.0999, -0.1497,  0.6382,
          0.2980,  1.4132, -0.0861,  1.5035,  0.2797,  0.7170,  1.8331,  2.7382,
          0.6041,  0.2308,  0.0825,  1.3628,  0.6904,  0.2645,  0.7355,  0.0330,
          1.0969,  0.4365,  0.6189,  1.3012, -0.4618,  0.0106, -0.4706,  1.2335,
          0.3427]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
42000 loss tensor(0.0767, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0425, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4947,  1.5432,  0.4197,  3.4554,  0.9515, -0.6707, -0.3636,  1.5002,
          0.9334,  0.3409,  0.0918,  1.1016,  1.0014,  2.7430,  0.5952,  0.2321,
         -0.1032,  0.5923,  1.6511, -0.0618,  0.9405,  0.1018, -0.1497,  0.6396,
          0.2992,  1.4119, -0.0850,  1.5028,  0.2787,  0.7157,  1.8293,  2.7368,
          0.6032,  0.2313,  0.0829,  1.3603,  0.6895,  0.2639,  0.7343,  0.0335,
          1.0958,  0.4359,  0.6183,  1.2994, -0.4614,  0.0111, -0.4716,  1.2325,
          0.3415]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
43000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4968,  1.5433,  0.4205,  3.4516,  0.9464, -0.6709, -0.3621,  1.4983,
          0.9327,  0.3412,  0.0907,  1.1016,  0.9993,  2.7420,  0.5944,  0.2325,
         -0.1035,  0.5920,  1.6500, -0.0602,  0.9395,  0.1041, -0.1482,  0.6394,
          0.2995,  1.4112, -0.0852,  1.5026,  0.2785,  0.7155,  1.8243,  2.7346,
          0.6015,  0.2327,  0.0828,  1.3595,  0.6891,  0.2647,  0.7338,  0.0324,
          1.0949,  0.4365,  0.6184,  1.2984, -0.4609,  0.0115, -0.4713,  1.2306,
          0.3421]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
44000 loss tensor(0.0702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0343, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.4992,  1.5436,  0.4188,  3.4492,  0.9429, -0.6688, -0.3618,  1.4972,
          0.9316,  0.3408,  0.0912,  1.1019,  0.9988,  2.7413,  0.5935,  0.2313,
         -0.1025,  0.5910,  1.6496, -0.0596,  0.9389,  0.1051, -0.1483,  0.6387,
          0.3000,  1.4077, -0.0834,  1.5027,  0.2780,  0.7144,  1.8200,  2.7323,
          0.6023,  0.2315,  0.0834,  1.3586,  0.6896,  0.2650,  0.7341,  0.0336,
          1.0951,  0.4349,  0.6190,  1.2969, -0.4604,  0.0119, -0.4709,  1.2303,
          0.3417]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
45000 loss tensor(0.0745, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0386, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5020,  1.5435,  0.4184,  3.4468,  0.9396, -0.6683, -0.3607,  1.4961,
          0.9308,  0.3406,  0.0906,  1.1013,  0.9975,  2.7401,  0.5927,  0.2312,
         -0.1022,  0.5903,  1.6490, -0.0588,  0.9393,  0.1061, -0.1474,  0.6393,
          0.3004,  1.4060, -0.0823,  1.5027,  0.2777,  0.7135,  1.8149,  2.7304,
          0.6010,  0.2318,  0.0842,  1.3574,  0.6899,  0.2655,  0.7338,  0.0336,
          1.0946,  0.4347,  0.6195,  1.2956, -0.4608,  0.0119, -0.4709,  1.2285,
          0.3418]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
46000 loss tensor(0.0701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0336, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5053,  1.5444,  0.4198,  3.4435,  0.9356, -0.6678, -0.3593,  1.4936,
          0.9303,  0.3412,  0.0894,  1.1016,  0.9958,  2.7382,  0.5918,  0.2313,
         -0.1027,  0.5903,  1.6495, -0.0579,  0.9376,  0.1091, -0.1463,  0.6383,
          0.3004,  1.4052, -0.0829,  1.5029,  0.2777,  0.7133,  1.8106,  2.7283,
          0.6000,  0.2328,  0.0839,  1.3569,  0.6889,  0.2656,  0.7329,  0.0327,
          1.0940,  0.4351,  0.6200,  1.2945, -0.4607,  0.0114, -0.4707,  1.2274,
          0.3413]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
47000 loss tensor(0.0744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0384, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5071,  1.5431,  0.4182,  3.4398,  0.9308, -0.6678, -0.3598,  1.4914,
          0.9286,  0.3401,  0.0883,  1.1005,  0.9942,  2.7365,  0.5921,  0.2317,
         -0.1012,  0.5904,  1.6468, -0.0578,  0.9365,  0.1095, -0.1448,  0.6379,
          0.2995,  1.4016, -0.0831,  1.5037,  0.2783,  0.7140,  1.8057,  2.7254,
          0.5988,  0.2319,  0.0831,  1.3567,  0.6901,  0.2671,  0.7340,  0.0324,
          1.0948,  0.4353,  0.6212,  1.2945, -0.4612,  0.0109, -0.4692,  1.2260,
          0.3422]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
48000 loss tensor(0.0704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0340, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5096,  1.5440,  0.4184,  3.4364,  0.9282, -0.6660, -0.3595,  1.4901,
          0.9278,  0.3400,  0.0883,  1.1004,  0.9942,  2.7351,  0.5913,  0.2313,
         -0.1006,  0.5893,  1.6466, -0.0566,  0.9355,  0.1094, -0.1443,  0.6374,
          0.2993,  1.3995, -0.0819,  1.5039,  0.2782,  0.7131,  1.8016,  2.7229,
          0.5987,  0.2313,  0.0840,  1.3561,  0.6908,  0.2675,  0.7340,  0.0331,
          1.0947,  0.4344,  0.6219,  1.2928, -0.4612,  0.0106, -0.4690,  1.2256,
          0.3420]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
49000 loss tensor(0.0726, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5109,  1.5443,  0.4193,  3.4318,  0.9241, -0.6658, -0.3577,  1.4887,
          0.9270,  0.3404,  0.0879,  1.1006,  0.9917,  2.7335,  0.5904,  0.2308,
         -0.1009,  0.5891,  1.6462, -0.0560,  0.9349,  0.1120, -0.1437,  0.6378,
          0.2999,  1.3988, -0.0813,  1.5042,  0.2780,  0.7129,  1.7983,  2.7212,
          0.5974,  0.2325,  0.0835,  1.3549,  0.6899,  0.2677,  0.7334,  0.0327,
          1.0938,  0.4341,  0.6220,  1.2918, -0.4612,  0.0105, -0.4686,  1.2237,
          0.3420]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
50000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5125,  1.5447,  0.4192,  3.4307,  0.9215, -0.6641, -0.3584,  1.4879,
          0.9260,  0.3402,  0.0877,  1.1000,  0.9919,  2.7330,  0.5894,  0.2304,
         -0.0996,  0.5879,  1.6449, -0.0550,  0.9348,  0.1121, -0.1435,  0.6377,
          0.2998,  1.3953, -0.0803,  1.5041,  0.2777,  0.7119,  1.7928,  2.7181,
          0.5975,  0.2309,  0.0848,  1.3543,  0.6905,  0.2687,  0.7339,  0.0331,
          1.0943,  0.4329,  0.6224,  1.2906, -0.4615,  0.0105, -0.4688,  1.2242,
          0.3410]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
51000 loss tensor(0.0774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0423, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5158,  1.5441,  0.4199,  3.4272,  0.9175, -0.6636, -0.3563,  1.4859,
          0.9250,  0.3402,  0.0874,  1.1004,  0.9902,  2.7320,  0.5887,  0.2304,
         -0.1002,  0.5878,  1.6441, -0.0545,  0.9346,  0.1141, -0.1423,  0.6380,
          0.3002,  1.3947, -0.0795,  1.5042,  0.2774,  0.7114,  1.7895,  2.7171,
          0.5963,  0.2324,  0.0839,  1.3533,  0.6904,  0.2689,  0.7334,  0.0329,
          1.0934,  0.4332,  0.6229,  1.2897, -0.4613,  0.0105, -0.4687,  1.2220,
          0.3422]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
52000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0362, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5191,  1.5459,  0.4203,  3.4251,  0.9144, -0.6617, -0.3552,  1.4853,
          0.9257,  0.3412,  0.0882,  1.1015,  0.9897,  2.7320,  0.5871,  0.2288,
         -0.1002,  0.5858,  1.6452, -0.0525,  0.9347,  0.1157, -0.1429,  0.6391,
          0.3015,  1.3935, -0.0786,  1.5034,  0.2761,  0.7099,  1.7862,  2.7156,
          0.5963,  0.2326,  0.0855,  1.3514,  0.6897,  0.2676,  0.7325,  0.0340,
          1.0920,  0.4320,  0.6225,  1.2873, -0.4599,  0.0117, -0.4693,  1.2216,
          0.3405]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
53000 loss tensor(0.0878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0479, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5232,  1.5462,  0.4195,  3.4225,  0.9108, -0.6606, -0.3544,  1.4839,
          0.9253,  0.3411,  0.0880,  1.1016,  0.9885,  2.7317,  0.5862,  0.2285,
         -0.0999,  0.5853,  1.6446, -0.0505,  0.9340,  0.1166, -0.1421,  0.6385,
          0.3014,  1.3918, -0.0775,  1.5029,  0.2755,  0.7096,  1.7816,  2.7132,
          0.5958,  0.2322,  0.0858,  1.3502,  0.6901,  0.2677,  0.7319,  0.0345,
          1.0918,  0.4322,  0.6230,  1.2866, -0.4599,  0.0119, -0.4694,  1.2195,
          0.3405]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
54000 loss tensor(0.0709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0369, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5240,  1.5458,  0.4205,  3.4185,  0.9089, -0.6603, -0.3532,  1.4816,
          0.9243,  0.3414,  0.0867,  1.1013,  0.9863,  2.7290,  0.5854,  0.2287,
         -0.1005,  0.5851,  1.6427, -0.0520,  0.9322,  0.1192, -0.1407,  0.6377,
          0.3019,  1.3912, -0.0780,  1.5036,  0.2761,  0.7092,  1.7782,  2.7110,
          0.5945,  0.2340,  0.0857,  1.3500,  0.6898,  0.2689,  0.7318,  0.0333,
          1.0914,  0.4326,  0.6236,  1.2859, -0.4606,  0.0109, -0.4692,  1.2190,
          0.3402]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
55000 loss tensor(0.0720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0377, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5265,  1.5459,  0.4201,  3.4155,  0.9037, -0.6590, -0.3522,  1.4808,
          0.9235,  0.3410,  0.0870,  1.1015,  0.9865,  2.7280,  0.5845,  0.2279,
         -0.0993,  0.5840,  1.6433, -0.0498,  0.9325,  0.1196, -0.1407,  0.6384,
          0.3024,  1.3879, -0.0763,  1.5034,  0.2756,  0.7084,  1.7750,  2.7102,
          0.5941,  0.2325,  0.0862,  1.3488,  0.6898,  0.2688,  0.7317,  0.0344,
          1.0915,  0.4310,  0.6235,  1.2840, -0.4601,  0.0113, -0.4686,  1.2190,
          0.3400]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
56000 loss tensor(0.0731, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5289,  1.5466,  0.4202,  3.4128,  0.9005, -0.6587, -0.3510,  1.4788,
          0.9229,  0.3414,  0.0858,  1.1011,  0.9837,  2.7261,  0.5837,  0.2279,
         -0.0998,  0.5840,  1.6422, -0.0491,  0.9313,  0.1222, -0.1396,  0.6384,
          0.3026,  1.3876, -0.0764,  1.5036,  0.2755,  0.7085,  1.7711,  2.7081,
          0.5931,  0.2337,  0.0859,  1.3480,  0.6892,  0.2693,  0.7310,  0.0333,
          1.0905,  0.4314,  0.6238,  1.2834, -0.4604,  0.0110, -0.4685,  1.2174,
          0.3403]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
57000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0366, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5317,  1.5466,  0.4196,  3.4094,  0.8976, -0.6573, -0.3510,  1.4779,
          0.9221,  0.3410,  0.0862,  1.1009,  0.9836,  2.7256,  0.5830,  0.2271,
         -0.0987,  0.5828,  1.6418, -0.0480,  0.9311,  0.1220, -0.1396,  0.6383,
          0.3027,  1.3848, -0.0750,  1.5034,  0.2750,  0.7070,  1.7675,  2.7059,
          0.5932,  0.2326,  0.0868,  1.3469,  0.6899,  0.2694,  0.7311,  0.0342,
          1.0906,  0.4299,  0.6243,  1.2815, -0.4600,  0.0114, -0.4682,  1.2167,
          0.3403]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
58000 loss tensor(0.0794, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0433, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5338,  1.5470,  0.4196,  3.4060,  0.8946, -0.6565, -0.3502,  1.4764,
          0.9213,  0.3409,  0.0854,  1.1010,  0.9826,  2.7247,  0.5824,  0.2269,
         -0.0984,  0.5822,  1.6416, -0.0476,  0.9304,  0.1238, -0.1388,  0.6383,
          0.3025,  1.3830, -0.0748,  1.5035,  0.2750,  0.7069,  1.7635,  2.7033,
          0.5923,  0.2324,  0.0869,  1.3461,  0.6896,  0.2701,  0.7312,  0.0345,
          1.0903,  0.4298,  0.6249,  1.2806, -0.4603,  0.0110, -0.4684,  1.2160,
          0.3399]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
59000 loss tensor(0.0795, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0433, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5365,  1.5475,  0.4182,  3.4046,  0.8906, -0.6553, -0.3490,  1.4746,
          0.9205,  0.3411,  0.0849,  1.1010,  0.9816,  2.7226,  0.5811,  0.2266,
         -0.0982,  0.5821,  1.6410, -0.0459,  0.9295,  0.1250, -0.1382,  0.6380,
          0.3028,  1.3806, -0.0743,  1.5037,  0.2750,  0.7065,  1.7612,  2.7021,
          0.5917,  0.2324,  0.0872,  1.3454,  0.6899,  0.2704,  0.7307,  0.0345,
          1.0901,  0.4293,  0.6254,  1.2796, -0.4601,  0.0110, -0.4676,  1.2150,
          0.3401]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
60000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0359, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5380,  1.5474,  0.4186,  3.4007,  0.8866, -0.6553, -0.3499,  1.4722,
          0.9188,  0.3404,  0.0838,  1.0999,  0.9801,  2.7210,  0.5819,  0.2273,
         -0.0968,  0.5822,  1.6393, -0.0460,  0.9281,  0.1250, -0.1368,  0.6368,
          0.3020,  1.3777, -0.0739,  1.5046,  0.2756,  0.7064,  1.7562,  2.6989,
          0.5905,  0.2319,  0.0867,  1.3455,  0.6911,  0.2719,  0.7316,  0.0338,
          1.0906,  0.4294,  0.6270,  1.2792, -0.4608,  0.0102, -0.4665,  1.2134,
          0.3409]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
61000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5404,  1.5470,  0.4195,  3.3965,  0.8835, -0.6553, -0.3474,  1.4705,
          0.9180,  0.3404,  0.0832,  1.0997,  0.9775,  2.7193,  0.5810,  0.2271,
         -0.0976,  0.5818,  1.6384, -0.0463,  0.9271,  0.1283, -0.1360,  0.6371,
          0.3022,  1.3774, -0.0735,  1.5048,  0.2756,  0.7064,  1.7525,  2.6970,
          0.5890,  0.2331,  0.0861,  1.3444,  0.6901,  0.2723,  0.7310,  0.0334,
          1.0899,  0.4300,  0.6269,  1.2786, -0.4611,  0.0099, -0.4665,  1.2121,
          0.3405]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
62000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0355, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5422,  1.5472,  0.4182,  3.3934,  0.8808, -0.6537, -0.3479,  1.4693,
          0.9174,  0.3400,  0.0831,  1.0995,  0.9778,  2.7183,  0.5805,  0.2266,
         -0.0964,  0.5809,  1.6387, -0.0448,  0.9267,  0.1279, -0.1356,  0.6370,
          0.3023,  1.3745, -0.0727,  1.5047,  0.2753,  0.7057,  1.7491,  2.6944,
          0.5896,  0.2318,  0.0871,  1.3437,  0.6908,  0.2726,  0.7308,  0.0342,
          1.0897,  0.4285,  0.6275,  1.2769, -0.4608,  0.0099, -0.4660,  1.2113,
          0.3408]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
63000 loss tensor(0.0779, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0429, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5457,  1.5481,  0.4190,  3.3907,  0.8783, -0.6526, -0.3455,  1.4686,
          0.9179,  0.3413,  0.0827,  1.1007,  0.9769,  2.7176,  0.5785,  0.2254,
         -0.0975,  0.5793,  1.6382, -0.0437,  0.9270,  0.1300, -0.1355,  0.6377,
          0.3034,  1.3735, -0.0720,  1.5038,  0.2741,  0.7043,  1.7474,  2.6937,
          0.5892,  0.2328,  0.0881,  1.3419,  0.6897,  0.2718,  0.7299,  0.0345,
          1.0886,  0.4280,  0.6269,  1.2751, -0.4600,  0.0107, -0.4668,  1.2102,
          0.3391]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
64000 loss tensor(0.0784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0426, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5479,  1.5471,  0.4187,  3.3866,  0.8737, -0.6517, -0.3463,  1.4665,
          0.9160,  0.3404,  0.0830,  1.0995,  0.9762,  2.7163,  0.5786,  0.2255,
         -0.0959,  0.5792,  1.6364, -0.0435,  0.9252,  0.1301, -0.1345,  0.6372,
          0.3027,  1.3706, -0.0718,  1.5045,  0.2747,  0.7049,  1.7418,  2.6912,
          0.5884,  0.2323,  0.0879,  1.3420,  0.6909,  0.2732,  0.7305,  0.0343,
          1.0893,  0.4277,  0.6281,  1.2750, -0.4604,  0.0101, -0.4657,  1.2100,
          0.3405]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
65000 loss tensor(0.0657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5504,  1.5483,  0.4195,  3.3852,  0.8715, -0.6497, -0.3444,  1.4656,
          0.9161,  0.3410,  0.0832,  1.1007,  0.9750,  2.7163,  0.5769,  0.2244,
         -0.0966,  0.5781,  1.6372, -0.0416,  0.9256,  0.1333, -0.1346,  0.6378,
          0.3040,  1.3703, -0.0701,  1.5035,  0.2735,  0.7028,  1.7396,  2.6903,
          0.5881,  0.2330,  0.0886,  1.3402,  0.6901,  0.2722,  0.7294,  0.0351,
          1.0879,  0.4269,  0.6274,  1.2727, -0.4592,  0.0114, -0.4667,  1.2090,
          0.3392]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
66000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5526,  1.5472,  0.4197,  3.3809,  0.8677, -0.6509, -0.3436,  1.4629,
          0.9146,  0.3405,  0.0811,  1.0997,  0.9727,  2.7137,  0.5777,  0.2255,
         -0.0960,  0.5786,  1.6350, -0.0421,  0.9239,  0.1343, -0.1325,  0.6369,
          0.3032,  1.3683, -0.0709,  1.5050,  0.2748,  0.7042,  1.7347,  2.6870,
          0.5862,  0.2332,  0.0876,  1.3402,  0.6904,  0.2738,  0.7299,  0.0335,
          1.0884,  0.4281,  0.6287,  1.2735, -0.4608,  0.0097, -0.4653,  1.2065,
          0.3399]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
67000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5544,  1.5481,  0.4191,  3.3788,  0.8650, -0.6487, -0.3438,  1.4620,
          0.9137,  0.3403,  0.0819,  1.0994,  0.9723,  2.7131,  0.5760,  0.2244,
         -0.0953,  0.5773,  1.6342, -0.0407,  0.9236,  0.1348, -0.1327,  0.6364,
          0.3031,  1.3661, -0.0697,  1.5042,  0.2743,  0.7036,  1.7316,  2.6851,
          0.5870,  0.2324,  0.0889,  1.3397,  0.6907,  0.2741,  0.7301,  0.0348,
          1.0883,  0.4273,  0.6293,  1.2718, -0.4602,  0.0098, -0.4657,  1.2061,
          0.3393]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
68000 loss tensor(0.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5576,  1.5487,  0.4193,  3.3762,  0.8622, -0.6476, -0.3421,  1.4609,
          0.9142,  0.3415,  0.0818,  1.1008,  0.9716,  2.7128,  0.5748,  0.2238,
         -0.0959,  0.5764,  1.6350, -0.0396,  0.9239,  0.1371, -0.1326,  0.6371,
          0.3045,  1.3650, -0.0683,  1.5038,  0.2730,  0.7018,  1.7304,  2.6839,
          0.5859,  0.2331,  0.0893,  1.3377,  0.6896,  0.2735,  0.7287,  0.0345,
          1.0869,  0.4259,  0.6287,  1.2697, -0.4594,  0.0106, -0.4660,  1.2062,
          0.3387]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
69000 loss tensor(0.0708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0368, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5596,  1.5488,  0.4189,  3.3730,  0.8589, -0.6467, -0.3412,  1.4594,
          0.9137,  0.3413,  0.0816,  1.1003,  0.9707,  2.7114,  0.5743,  0.2233,
         -0.0955,  0.5757,  1.6346, -0.0385,  0.9226,  0.1379, -0.1321,  0.6370,
          0.3044,  1.3634, -0.0678,  1.5038,  0.2729,  0.7012,  1.7274,  2.6824,
          0.5855,  0.2330,  0.0896,  1.3368,  0.6900,  0.2737,  0.7289,  0.0349,
          1.0868,  0.4255,  0.6293,  1.2687, -0.4596,  0.0105, -0.4656,  1.2052,
          0.3390]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
70000 loss tensor(0.0649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5617,  1.5483,  0.4199,  3.3706,  0.8544, -0.6465, -0.3399,  1.4578,
          0.9127,  0.3418,  0.0799,  1.1005,  0.9686,  2.7095,  0.5745,  0.2235,
         -0.0958,  0.5756,  1.6317, -0.0383,  0.9225,  0.1403, -0.1308,  0.6364,
          0.3040,  1.3626, -0.0683,  1.5048,  0.2734,  0.7017,  1.7255,  2.6807,
          0.5842,  0.2344,  0.0896,  1.3365,  0.6894,  0.2742,  0.7284,  0.0341,
          1.0861,  0.4266,  0.6296,  1.2681, -0.4598,  0.0102, -0.4641,  1.2019,
          0.3399]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
71000 loss tensor(0.0696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0363, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5632,  1.5480,  0.4195,  3.3671,  0.8521, -0.6461, -0.3401,  1.4555,
          0.9111,  0.3401,  0.0794,  1.0993,  0.9679,  2.7081,  0.5740,  0.2238,
         -0.0944,  0.5758,  1.6312, -0.0384,  0.9219,  0.1406, -0.1299,  0.6357,
          0.3034,  1.3591, -0.0676,  1.5050,  0.2738,  0.7014,  1.7208,  2.6784,
          0.5833,  0.2335,  0.0890,  1.3357,  0.6907,  0.2753,  0.7294,  0.0336,
          1.0870,  0.4259,  0.6310,  1.2675, -0.4608,  0.0095, -0.4641,  1.2020,
          0.3400]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
72000 loss tensor(0.0775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0403, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5661,  1.5483,  0.4203,  3.3639,  0.8485, -0.6460, -0.3390,  1.4537,
          0.9105,  0.3404,  0.0787,  1.0992,  0.9666,  2.7066,  0.5730,  0.2236,
         -0.0946,  0.5753,  1.6307, -0.0377,  0.9195,  0.1421, -0.1291,  0.6356,
          0.3036,  1.3580, -0.0678,  1.5050,  0.2736,  0.7008,  1.7193,  2.6775,
          0.5826,  0.2339,  0.0889,  1.3355,  0.6906,  0.2758,  0.7289,  0.0331,
          1.0862,  0.4259,  0.6312,  1.2665, -0.4604,  0.0092, -0.4638,  1.2013,
          0.3397]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
73000 loss tensor(0.0783, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0431, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5676,  1.5488,  0.4189,  3.3604,  0.8453, -0.6441, -0.3385,  1.4525,
          0.9096,  0.3404,  0.0788,  1.0991,  0.9665,  2.7062,  0.5724,  0.2228,
         -0.0937,  0.5739,  1.6309, -0.0363,  0.9195,  0.1424, -0.1291,  0.6358,
          0.3037,  1.3558, -0.0663,  1.5049,  0.2731,  0.7000,  1.7159,  2.6754,
          0.5830,  0.2329,  0.0902,  1.3347,  0.6910,  0.2756,  0.7286,  0.0350,
          1.0863,  0.4245,  0.6318,  1.2654, -0.4598,  0.0097, -0.4635,  1.2012,
          0.3398]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
74000 loss tensor(0.0600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5708,  1.5492,  0.4198,  3.3583,  0.8427, -0.6428, -0.3368,  1.4518,
          0.9107,  0.3406,  0.0792,  1.0998,  0.9650,  2.7069,  0.5712,  0.2218,
         -0.0944,  0.5732,  1.6316, -0.0347,  0.9212,  0.1440, -0.1290,  0.6371,
          0.3054,  1.3552, -0.0645,  1.5033,  0.2717,  0.6986,  1.7140,  2.6733,
          0.5826,  0.2335,  0.0907,  1.3322,  0.6901,  0.2746,  0.7279,  0.0348,
          1.0850,  0.4242,  0.6314,  1.2635, -0.4587,  0.0108, -0.4645,  1.1996,
          0.3384]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
75000 loss tensor(0.0714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0392, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5732,  1.5498,  0.4196,  3.3557,  0.8387, -0.6427, -0.3370,  1.4501,
          0.9092,  0.3412,  0.0791,  1.0999,  0.9651,  2.7049,  0.5708,  0.2216,
         -0.0941,  0.5718,  1.6300, -0.0338,  0.9194,  0.1453, -0.1287,  0.6364,
          0.3045,  1.3541, -0.0648,  1.5038,  0.2718,  0.6982,  1.7118,  2.6725,
          0.5819,  0.2335,  0.0914,  1.3323,  0.6900,  0.2757,  0.7273,  0.0354,
          1.0843,  0.4235,  0.6315,  1.2624, -0.4588,  0.0105, -0.4632,  1.1980,
          0.3396]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
76000 loss tensor(0.0664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5751,  1.5494,  0.4207,  3.3531,  0.8369, -0.6416, -0.3355,  1.4482,
          0.9088,  0.3418,  0.0782,  1.1001,  0.9621,  2.7025,  0.5710,  0.2219,
         -0.0944,  0.5718,  1.6293, -0.0328,  0.9179,  0.1472, -0.1273,  0.6368,
          0.3053,  1.3523, -0.0651,  1.5046,  0.2727,  0.6993,  1.7080,  2.6701,
          0.5807,  0.2345,  0.0908,  1.3315,  0.6894,  0.2762,  0.7265,  0.0339,
          1.0839,  0.4241,  0.6320,  1.2622, -0.4599,  0.0095, -0.4629,  1.1967,
          0.3401]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
77000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5776,  1.5489,  0.4195,  3.3495,  0.8342, -0.6416, -0.3358,  1.4460,
          0.9074,  0.3405,  0.0769,  1.0990,  0.9626,  2.7018,  0.5700,  0.2220,
         -0.0929,  0.5720,  1.6281, -0.0327,  0.9171,  0.1478, -0.1265,  0.6354,
          0.3040,  1.3494, -0.0643,  1.5041,  0.2725,  0.6986,  1.7056,  2.6673,
          0.5800,  0.2335,  0.0908,  1.3316,  0.6906,  0.2770,  0.7278,  0.0339,
          1.0848,  0.4234,  0.6334,  1.2611, -0.4597,  0.0094, -0.4629,  1.1976,
          0.3392]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
78000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5786,  1.5491,  0.4204,  3.3456,  0.8314, -0.6410, -0.3346,  1.4442,
          0.9072,  0.3409,  0.0765,  1.0991,  0.9600,  2.7003,  0.5696,  0.2219,
         -0.0930,  0.5716,  1.6272, -0.0318,  0.9162,  0.1488, -0.1257,  0.6357,
          0.3046,  1.3483, -0.0639,  1.5043,  0.2727,  0.6984,  1.7036,  2.6654,
          0.5793,  0.2341,  0.0905,  1.3309,  0.6902,  0.2771,  0.7271,  0.0334,
          1.0840,  0.4239,  0.6335,  1.2605, -0.4597,  0.0089, -0.4626,  1.1952,
          0.3393]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
79000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0334, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5811,  1.5493,  0.4196,  3.3436,  0.8282, -0.6404, -0.3336,  1.4432,
          0.9062,  0.3406,  0.0754,  1.0992,  0.9594,  2.6991,  0.5686,  0.2217,
         -0.0929,  0.5708,  1.6262, -0.0314,  0.9158,  0.1499, -0.1252,  0.6353,
          0.3044,  1.3461, -0.0633,  1.5041,  0.2724,  0.6977,  1.7000,  2.6644,
          0.5782,  0.2338,  0.0913,  1.3297,  0.6905,  0.2778,  0.7270,  0.0335,
          1.0840,  0.4234,  0.6341,  1.2597, -0.4595,  0.0093, -0.4623,  1.1943,
          0.3393]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
80000 loss tensor(0.0741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5835,  1.5497,  0.4194,  3.3404,  0.8247, -0.6391, -0.3332,  1.4417,
          0.9054,  0.3406,  0.0752,  1.0992,  0.9580,  2.6979,  0.5681,  0.2214,
         -0.0925,  0.5703,  1.6256, -0.0309,  0.9152,  0.1513, -0.1247,  0.6355,
          0.3044,  1.3440, -0.0628,  1.5043,  0.2724,  0.6976,  1.6982,  2.6627,
          0.5782,  0.2337,  0.0914,  1.3286,  0.6906,  0.2782,  0.7267,  0.0339,
          1.0838,  0.4229,  0.6343,  1.2590, -0.4598,  0.0089, -0.4621,  1.1935,
          0.3393]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
81000 loss tensor(0.0642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5880,  1.5513,  0.4211,  3.3395,  0.8228, -0.6373, -0.3320,  1.4405,
          0.9060,  0.3414,  0.0762,  1.0998,  0.9578,  2.6991,  0.5665,  0.2200,
         -0.0931,  0.5683,  1.6264, -0.0286,  0.9148,  0.1523, -0.1253,  0.6361,
          0.3059,  1.3428, -0.0618,  1.5023,  0.2706,  0.6961,  1.6965,  2.6617,
          0.5789,  0.2338,  0.0927,  1.3272,  0.6899,  0.2774,  0.7257,  0.0351,
          1.0823,  0.4222,  0.6340,  1.2569, -0.4574,  0.0106, -0.4629,  1.1934,
          0.3378]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
82000 loss tensor(0.0771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0422, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5890,  1.5508,  0.4206,  3.3350,  0.8208, -0.6371, -0.3308,  1.4389,
          0.9053,  0.3418,  0.0753,  1.0998,  0.9561,  2.6974,  0.5662,  0.2201,
         -0.0931,  0.5684,  1.6254, -0.0284,  0.9144,  0.1543, -0.1243,  0.6361,
          0.3057,  1.3419, -0.0613,  1.5028,  0.2709,  0.6961,  1.6951,  2.6595,
          0.5774,  0.2347,  0.0921,  1.3266,  0.6892,  0.2778,  0.7255,  0.0340,
          1.0816,  0.4219,  0.6340,  1.2557, -0.4581,  0.0100, -0.4627,  1.1919,
          0.3383]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
83000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0330, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5903,  1.5512,  0.4206,  3.3322,  0.8169, -0.6361, -0.3305,  1.4377,
          0.9044,  0.3418,  0.0748,  1.0997,  0.9551,  2.6950,  0.5664,  0.2199,
         -0.0927,  0.5678,  1.6240, -0.0281,  0.9139,  0.1557, -0.1237,  0.6356,
          0.3057,  1.3403, -0.0612,  1.5039,  0.2714,  0.6960,  1.6931,  2.6584,
          0.5769,  0.2346,  0.0925,  1.3254,  0.6894,  0.2786,  0.7253,  0.0340,
          1.0818,  0.4217,  0.6346,  1.2551, -0.4589,  0.0093, -0.4612,  1.1906,
          0.3392]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
84000 loss tensor(0.0788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0432, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5924,  1.5500,  0.4196,  3.3292,  0.8140, -0.6362, -0.3303,  1.4350,
          0.9029,  0.3414,  0.0734,  1.0989,  0.9542,  2.6946,  0.5657,  0.2205,
         -0.0918,  0.5680,  1.6233, -0.0277,  0.9123,  0.1560, -0.1225,  0.6344,
          0.3047,  1.3380, -0.0614,  1.5032,  0.2714,  0.6958,  1.6894,  2.6562,
          0.5756,  0.2341,  0.0919,  1.3259,  0.6903,  0.2795,  0.7261,  0.0334,
          1.0823,  0.4216,  0.6363,  1.2549, -0.4584,  0.0094, -0.4612,  1.1899,
          0.3392]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
85000 loss tensor(0.0644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5939,  1.5505,  0.4193,  3.3256,  0.8118, -0.6349, -0.3299,  1.4338,
          0.9021,  0.3410,  0.0736,  1.0989,  0.9530,  2.6938,  0.5650,  0.2199,
         -0.0914,  0.5676,  1.6224, -0.0278,  0.9119,  0.1579, -0.1222,  0.6354,
          0.3048,  1.3357, -0.0596,  1.5031,  0.2713,  0.6956,  1.6876,  2.6542,
          0.5755,  0.2337,  0.0921,  1.3245,  0.6900,  0.2800,  0.7258,  0.0337,
          1.0821,  0.4208,  0.6362,  1.2542, -0.4589,  0.0089, -0.4611,  1.1896,
          0.3390]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
86000 loss tensor(0.0730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0381, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5960,  1.5505,  0.4203,  3.3229,  0.8100, -0.6343, -0.3291,  1.4319,
          0.9020,  0.3407,  0.0733,  1.0985,  0.9532,  2.6918,  0.5648,  0.2195,
         -0.0911,  0.5669,  1.6220, -0.0267,  0.9112,  0.1581, -0.1220,  0.6342,
          0.3048,  1.3342, -0.0600,  1.5036,  0.2714,  0.6947,  1.6865,  2.6529,
          0.5747,  0.2344,  0.0924,  1.3245,  0.6907,  0.2796,  0.7259,  0.0338,
          1.0817,  0.4206,  0.6371,  1.2522, -0.4589,  0.0084, -0.4604,  1.1882,
          0.3391]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
87000 loss tensor(0.0747, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.5994,  1.5500,  0.4196,  3.3212,  0.8069, -0.6338, -0.3285,  1.4302,
          0.9013,  0.3403,  0.0725,  1.0986,  0.9522,  2.6909,  0.5640,  0.2195,
         -0.0909,  0.5664,  1.6208, -0.0256,  0.9101,  0.1589, -0.1211,  0.6343,
          0.3049,  1.3324, -0.0593,  1.5034,  0.2713,  0.6944,  1.6840,  2.6511,
          0.5741,  0.2342,  0.0926,  1.3236,  0.6908,  0.2802,  0.7257,  0.0334,
          1.0816,  0.4201,  0.6375,  1.2515, -0.4586,  0.0085, -0.4602,  1.1872,
          0.3391]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
88000 loss tensor(0.0742, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0409, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6006,  1.5506,  0.4188,  3.3175,  0.8043, -0.6320, -0.3288,  1.4287,
          0.9002,  0.3407,  0.0731,  1.0981,  0.9512,  2.6900,  0.5632,  0.2188,
         -0.0900,  0.5654,  1.6212, -0.0250,  0.9099,  0.1595, -0.1211,  0.6347,
          0.3051,  1.3305, -0.0583,  1.5028,  0.2710,  0.6946,  1.6830,  2.6494,
          0.5746,  0.2331,  0.0933,  1.3229,  0.6908,  0.2805,  0.7256,  0.0343,
          1.0811,  0.4194,  0.6377,  1.2507, -0.4580,  0.0089, -0.4600,  1.1870,
          0.3385]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
89000 loss tensor(0.0701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0335, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6021,  1.5514,  0.4208,  3.3151,  0.8029, -0.6309, -0.3262,  1.4281,
          0.9013,  0.3415,  0.0725,  1.0995,  0.9494,  2.6902,  0.5622,  0.2179,
         -0.0917,  0.5647,  1.6202, -0.0236,  0.9107,  0.1629, -0.1210,  0.6354,
          0.3059,  1.3308, -0.0575,  1.5021,  0.2699,  0.6930,  1.6814,  2.6486,
          0.5738,  0.2350,  0.0933,  1.3206,  0.6894,  0.2794,  0.7245,  0.0341,
          1.0794,  0.4194,  0.6369,  1.2495, -0.4578,  0.0096, -0.4610,  1.1855,
          0.3379]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
90000 loss tensor(0.0734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0376, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6043,  1.5509,  0.4219,  3.3124,  0.8009, -0.6298, -0.3263,  1.4269,
          0.9001,  0.3418,  0.0727,  1.0994,  0.9493,  2.6897,  0.5617,  0.2174,
         -0.0908,  0.5631,  1.6203, -0.0227,  0.9099,  0.1632, -0.1209,  0.6360,
          0.3056,  1.3285, -0.0568,  1.5017,  0.2698,  0.6926,  1.6797,  2.6467,
          0.5739,  0.2341,  0.0946,  1.3204,  0.6889,  0.2804,  0.7239,  0.0347,
          1.0791,  0.4186,  0.6373,  1.2486, -0.4576,  0.0094, -0.4609,  1.1867,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
91000 loss tensor(0.0688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0358, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6066,  1.5516,  0.4207,  3.3098,  0.7988, -0.6295, -0.3259,  1.4252,
          0.8995,  0.3414,  0.0722,  1.0991,  0.9493,  2.6886,  0.5611,  0.2170,
         -0.0901,  0.5628,  1.6194, -0.0216,  0.9084,  0.1636, -0.1205,  0.6354,
          0.3059,  1.3262, -0.0563,  1.5016,  0.2696,  0.6923,  1.6778,  2.6448,
          0.5732,  0.2340,  0.0948,  1.3201,  0.6900,  0.2802,  0.7240,  0.0347,
          1.0794,  0.4178,  0.6381,  1.2470, -0.4572,  0.0094, -0.4606,  1.1856,
          0.3373]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
92000 loss tensor(0.0787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0433, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6095,  1.5512,  0.4214,  3.3073,  0.7964, -0.6289, -0.3243,  1.4231,
          0.8994,  0.3416,  0.0707,  1.0992,  0.9470,  2.6874,  0.5605,  0.2171,
         -0.0908,  0.5631,  1.6189, -0.0209,  0.9081,  0.1659, -0.1192,  0.6353,
          0.3059,  1.3259, -0.0558,  1.5017,  0.2697,  0.6922,  1.6756,  2.6435,
          0.5720,  0.2350,  0.0944,  1.3189,  0.6892,  0.2802,  0.7232,  0.0335,
          1.0784,  0.4179,  0.6382,  1.2467, -0.4572,  0.0093, -0.4603,  1.1831,
          0.3376]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
93000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6113,  1.5510,  0.4216,  3.3033,  0.7931, -0.6281, -0.3235,  1.4219,
          0.8988,  0.3416,  0.0708,  1.0992,  0.9463,  2.6864,  0.5599,  0.2166,
         -0.0907,  0.5618,  1.6179, -0.0208,  0.9078,  0.1670, -0.1191,  0.6355,
          0.3061,  1.3243, -0.0558,  1.5012,  0.2694,  0.6916,  1.6740,  2.6430,
          0.5717,  0.2352,  0.0952,  1.3182,  0.6890,  0.2804,  0.7232,  0.0344,
          1.0780,  0.4183,  0.6384,  1.2456, -0.4569,  0.0094, -0.4602,  1.1833,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
94000 loss tensor(0.0657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6119,  1.5511,  0.4205,  3.3000,  0.7909, -0.6267, -0.3239,  1.4210,
          0.8979,  0.3414,  0.0712,  1.0989,  0.9462,  2.6852,  0.5594,  0.2160,
         -0.0898,  0.5614,  1.6166, -0.0206,  0.9077,  0.1677, -0.1191,  0.6355,
          0.3061,  1.3219, -0.0545,  1.5012,  0.2693,  0.6911,  1.6738,  2.6410,
          0.5719,  0.2341,  0.0956,  1.3172,  0.6896,  0.2809,  0.7235,  0.0348,
          1.0783,  0.4165,  0.6391,  1.2445, -0.4573,  0.0090, -0.4596,  1.1830,
          0.3376]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
95000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6147,  1.5515,  0.4216,  3.2978,  0.7894, -0.6262, -0.3229,  1.4188,
          0.8976,  0.3418,  0.0705,  1.0989,  0.9451,  2.6843,  0.5593,  0.2159,
         -0.0896,  0.5606,  1.6165, -0.0192,  0.9061,  0.1682, -0.1186,  0.6353,
          0.3066,  1.3198, -0.0542,  1.5010,  0.2694,  0.6908,  1.6714,  2.6387,
          0.5713,  0.2341,  0.0958,  1.3169,  0.6895,  0.2811,  0.7229,  0.0348,
          1.0779,  0.4167,  0.6394,  1.2434, -0.4568,  0.0087, -0.4596,  1.1822,
          0.3372]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
96000 loss tensor(0.0646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6162,  1.5496,  0.4208,  3.2950,  0.7862, -0.6261, -0.3233,  1.4160,
          0.8959,  0.3402,  0.0690,  1.0974,  0.9447,  2.6821,  0.5598,  0.2167,
         -0.0887,  0.5611,  1.6149, -0.0193,  0.9049,  0.1694, -0.1169,  0.6345,
          0.3056,  1.3182, -0.0542,  1.5021,  0.2703,  0.6912,  1.6695,  2.6366,
          0.5701,  0.2338,  0.0950,  1.3172,  0.6901,  0.2824,  0.7242,  0.0335,
          1.0783,  0.4166,  0.6409,  1.2433, -0.4580,  0.0080, -0.4582,  1.1816,
          0.3384]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
97000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0369, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6172,  1.5507,  0.4211,  3.2901,  0.7840, -0.6252, -0.3229,  1.4149,
          0.8956,  0.3405,  0.0689,  1.0976,  0.9438,  2.6816,  0.5595,  0.2162,
         -0.0882,  0.5606,  1.6140, -0.0189,  0.9045,  0.1690, -0.1165,  0.6336,
          0.3054,  1.3160, -0.0532,  1.5016,  0.2700,  0.6906,  1.6683,  2.6352,
          0.5699,  0.2331,  0.0954,  1.3165,  0.6908,  0.2822,  0.7237,  0.0340,
          1.0783,  0.4162,  0.6412,  1.2423, -0.4577,  0.0077, -0.4580,  1.1806,
          0.3381]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
98000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6206,  1.5515,  0.4227,  3.2891,  0.7805, -0.6251, -0.3213,  1.4127,
          0.8951,  0.3420,  0.0683,  1.0982,  0.9429,  2.6808,  0.5591,  0.2166,
         -0.0892,  0.5603,  1.6138, -0.0169,  0.9033,  0.1714, -0.1158,  0.6345,
          0.3060,  1.3152, -0.0544,  1.5014,  0.2697,  0.6911,  1.6665,  2.6350,
          0.5685,  0.2338,  0.0952,  1.3161,  0.6893,  0.2825,  0.7222,  0.0333,
          1.0769,  0.4163,  0.6405,  1.2412, -0.4571,  0.0079, -0.4576,  1.1793,
          0.3386]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
99000 loss tensor(0.0745, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0365, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6212,  1.5509,  0.4221,  3.2858,  0.7800, -0.6228, -0.3206,  1.4130,
          0.8953,  0.3413,  0.0693,  1.0986,  0.9421,  2.6813,  0.5573,  0.2149,
         -0.0891,  0.5583,  1.6141, -0.0168,  0.9047,  0.1727, -0.1167,  0.6352,
          0.3068,  1.3141, -0.0522,  1.5003,  0.2686,  0.6895,  1.6660,  2.6335,
          0.5693,  0.2341,  0.0967,  1.3138,  0.6896,  0.2816,  0.7224,  0.0345,
          1.0765,  0.4145,  0.6407,  1.2395, -0.4566,  0.0087, -0.4591,  1.1791,
          0.3373]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
100000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6216,  1.5493,  0.4219,  3.2836,  0.7768, -0.6233, -0.3216,  1.4101,
          0.8935,  0.3402,  0.0673,  1.0971,  0.9414,  2.6792,  0.5578,  0.2153,
         -0.0875,  0.5583,  1.6118, -0.0173,  0.9021,  0.1727, -0.1152,  0.6337,
          0.3047,  1.3117, -0.0519,  1.5010,  0.2696,  0.6903,  1.6636,  2.6314,
          0.5686,  0.2334,  0.0966,  1.3148,  0.6906,  0.2833,  0.7237,  0.0339,
          1.0772,  0.4151,  0.6424,  1.2404, -0.4571,  0.0076, -0.4575,  1.1780,
          0.3382]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
101000 loss tensor(0.0737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0347, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0360, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6242,  1.5506,  0.4224,  3.2799,  0.7752, -0.6212, -0.3193,  1.4097,
          0.8945,  0.3412,  0.0678,  1.0984,  0.9398,  2.6793,  0.5568,  0.2142,
         -0.0886,  0.5570,  1.6122, -0.0155,  0.9035,  0.1756, -0.1157,  0.6349,
          0.3066,  1.3108, -0.0510,  1.4998,  0.2685,  0.6888,  1.6634,  2.6313,
          0.5689,  0.2341,  0.0970,  1.3125,  0.6889,  0.2821,  0.7221,  0.0348,
          1.0757,  0.4146,  0.6416,  1.2385, -0.4558,  0.0088, -0.4579,  1.1763,
          0.3372]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
102000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6268,  1.5508,  0.4230,  3.2784,  0.7739, -0.6212, -0.3190,  1.4078,
          0.8938,  0.3412,  0.0671,  1.0983,  0.9402,  2.6782,  0.5561,  0.2142,
         -0.0883,  0.5567,  1.6114, -0.0147,  0.9016,  0.1755, -0.1152,  0.6346,
          0.3064,  1.3090, -0.0507,  1.4995,  0.2684,  0.6887,  1.6623,  2.6289,
          0.5680,  0.2344,  0.0979,  1.3124,  0.6895,  0.2826,  0.7222,  0.0342,
          1.0754,  0.4139,  0.6422,  1.2371, -0.4559,  0.0083, -0.4579,  1.1768,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
103000 loss tensor(0.0773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0419, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6282,  1.5502,  0.4222,  3.2742,  0.7721, -0.6202, -0.3185,  1.4058,
          0.8930,  0.3410,  0.0668,  1.0980,  0.9391,  2.6772,  0.5553,  0.2138,
         -0.0880,  0.5561,  1.6110, -0.0140,  0.9006,  0.1772, -0.1148,  0.6343,
          0.3059,  1.3077, -0.0502,  1.4991,  0.2684,  0.6883,  1.6616,  2.6275,
          0.5677,  0.2347,  0.0980,  1.3117,  0.6894,  0.2828,  0.7221,  0.0344,
          1.0752,  0.4134,  0.6424,  1.2365, -0.4559,  0.0080, -0.4580,  1.1768,
          0.3368]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
104000 loss tensor(0.0697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0365, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6304,  1.5508,  0.4223,  3.2720,  0.7692, -0.6196, -0.3176,  1.4044,
          0.8928,  0.3417,  0.0667,  1.0986,  0.9385,  2.6763,  0.5553,  0.2137,
         -0.0880,  0.5556,  1.6100, -0.0137,  0.9004,  0.1778, -0.1144,  0.6343,
          0.3064,  1.3057, -0.0501,  1.4991,  0.2681,  0.6879,  1.6607,  2.6267,
          0.5671,  0.2343,  0.0979,  1.3108,  0.6894,  0.2826,  0.7215,  0.0347,
          1.0746,  0.4133,  0.6426,  1.2352, -0.4554,  0.0081, -0.4575,  1.1753,
          0.3374]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
105000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6335,  1.5507,  0.4230,  3.2694,  0.7670, -0.6191, -0.3172,  1.4024,
          0.8925,  0.3412,  0.0659,  1.0978,  0.9374,  2.6759,  0.5549,  0.2134,
         -0.0878,  0.5549,  1.6091, -0.0126,  0.8999,  0.1786, -0.1137,  0.6341,
          0.3065,  1.3048, -0.0498,  1.4986,  0.2679,  0.6875,  1.6587,  2.6252,
          0.5667,  0.2342,  0.0981,  1.3103,  0.6895,  0.2826,  0.7213,  0.0344,
          1.0741,  0.4131,  0.6432,  1.2345, -0.4546,  0.0086, -0.4571,  1.1739,
          0.3374]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
106000 loss tensor(0.0651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0334, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6330,  1.5499,  0.4219,  3.2658,  0.7638, -0.6176, -0.3171,  1.4013,
          0.8913,  0.3406,  0.0657,  1.0974,  0.9374,  2.6746,  0.5549,  0.2131,
         -0.0874,  0.5543,  1.6068, -0.0136,  0.8996,  0.1796, -0.1133,  0.6331,
          0.3054,  1.3031, -0.0488,  1.4991,  0.2682,  0.6872,  1.6584,  2.6238,
          0.5668,  0.2343,  0.0988,  1.3102,  0.6899,  0.2835,  0.7218,  0.0344,
          1.0743,  0.4124,  0.6437,  1.2335, -0.4549,  0.0082, -0.4560,  1.1726,
          0.3381]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
107000 loss tensor(0.0643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0336, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6367,  1.5491,  0.4233,  3.2632,  0.7634, -0.6173, -0.3158,  1.3999,
          0.8913,  0.3414,  0.0653,  1.0979,  0.9357,  2.6737,  0.5540,  0.2125,
         -0.0874,  0.5535,  1.6083, -0.0116,  0.8995,  0.1812, -0.1132,  0.6347,
          0.3062,  1.3015, -0.0490,  1.4982,  0.2680,  0.6873,  1.6572,  2.6219,
          0.5659,  0.2345,  0.0988,  1.3086,  0.6889,  0.2834,  0.7209,  0.0344,
          1.0736,  0.4121,  0.6434,  1.2330, -0.4551,  0.0081, -0.4570,  1.1735,
          0.3368]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
108000 loss tensor(0.0784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0427, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6385,  1.5499,  0.4235,  3.2597,  0.7610, -0.6173, -0.3151,  1.3976,
          0.8908,  0.3417,  0.0644,  1.0979,  0.9341,  2.6726,  0.5535,  0.2131,
         -0.0880,  0.5536,  1.6070, -0.0110,  0.8975,  0.1820, -0.1120,  0.6343,
          0.3061,  1.3008, -0.0495,  1.4981,  0.2679,  0.6872,  1.6569,  2.6211,
          0.5646,  0.2354,  0.0984,  1.3085,  0.6888,  0.2837,  0.7204,  0.0335,
          1.0729,  0.4131,  0.6441,  1.2325, -0.4545,  0.0081, -0.4563,  1.1709,
          0.3369]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
109000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6403,  1.5493,  0.4241,  3.2558,  0.7588, -0.6166, -0.3145,  1.3958,
          0.8903,  0.3414,  0.0644,  1.0976,  0.9336,  2.6714,  0.5532,  0.2128,
         -0.0875,  0.5529,  1.6061, -0.0110,  0.8970,  0.1833, -0.1117,  0.6345,
          0.3059,  1.2993, -0.0484,  1.4980,  0.2678,  0.6867,  1.6562,  2.6200,
          0.5641,  0.2349,  0.0982,  1.3078,  0.6888,  0.2839,  0.7202,  0.0339,
          1.0727,  0.4126,  0.6443,  1.2317, -0.4546,  0.0081, -0.4560,  1.1709,
          0.3373]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
110000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0334, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6397,  1.5488,  0.4235,  3.2532,  0.7565, -0.6161, -0.3150,  1.3931,
          0.8886,  0.3408,  0.0624,  1.0967,  0.9325,  2.6698,  0.5539,  0.2132,
         -0.0865,  0.5533,  1.6046, -0.0110,  0.8958,  0.1835, -0.1104,  0.6330,
          0.3050,  1.2970, -0.0495,  1.4987,  0.2688,  0.6875,  1.6536,  2.6180,
          0.5634,  0.2345,  0.0980,  1.3079,  0.6897,  0.2853,  0.7211,  0.0331,
          1.0734,  0.4130,  0.6459,  1.2319, -0.4554,  0.0070, -0.4549,  1.1693,
          0.3382]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
111000 loss tensor(0.0650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6425,  1.5487,  0.4225,  3.2503,  0.7545, -0.6151, -0.3149,  1.3921,
          0.8881,  0.3401,  0.0628,  1.0964,  0.9331,  2.6696,  0.5531,  0.2127,
         -0.0859,  0.5525,  1.6041, -0.0102,  0.8951,  0.1842, -0.1104,  0.6331,
          0.3052,  1.2953, -0.0470,  1.4979,  0.2682,  0.6863,  1.6539,  2.6170,
          0.5637,  0.2338,  0.0989,  1.3074,  0.6903,  0.2847,  0.7216,  0.0339,
          1.0734,  0.4115,  0.6462,  1.2303, -0.4545,  0.0074, -0.4548,  1.1704,
          0.3376]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
112000 loss tensor(0.0722, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6459,  1.5483,  0.4244,  3.2496,  0.7537, -0.6149, -0.3136,  1.3901,
          0.8874,  0.3402,  0.0616,  1.0964,  0.9325,  2.6680,  0.5533,  0.2130,
         -0.0859,  0.5524,  1.6042, -0.0078,  0.8939,  0.1850, -0.1096,  0.6337,
          0.3057,  1.2939, -0.0475,  1.4984,  0.2689,  0.6870,  1.6523,  2.6147,
          0.5617,  0.2339,  0.0985,  1.3072,  0.6901,  0.2851,  0.7211,  0.0326,
          1.0732,  0.4116,  0.6466,  1.2295, -0.4555,  0.0064, -0.4546,  1.1692,
          0.3377]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
113000 loss tensor(0.0712, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6449,  1.5481,  0.4235,  3.2435,  0.7512, -0.6145, -0.3134,  1.3889,
          0.8870,  0.3404,  0.0615,  1.0964,  0.9304,  2.6675,  0.5526,  0.2126,
         -0.0860,  0.5515,  1.6026, -0.0090,  0.8938,  0.1865, -0.1090,  0.6336,
          0.3051,  1.2924, -0.0469,  1.4977,  0.2685,  0.6866,  1.6519,  2.6134,
          0.5618,  0.2343,  0.0989,  1.3059,  0.6899,  0.2858,  0.7205,  0.0330,
          1.0729,  0.4120,  0.6467,  1.2296, -0.4552,  0.0066, -0.4543,  1.1678,
          0.3378]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
114000 loss tensor(0.0664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6477,  1.5484,  0.4239,  3.2418,  0.7492, -0.6137, -0.3125,  1.3868,
          0.8867,  0.3408,  0.0608,  1.0967,  0.9295,  2.6660,  0.5522,  0.2122,
         -0.0860,  0.5511,  1.6022, -0.0081,  0.8929,  0.1875, -0.1088,  0.6334,
          0.3052,  1.2909, -0.0467,  1.4977,  0.2687,  0.6864,  1.6511,  2.6127,
          0.5617,  0.2344,  0.0992,  1.3055,  0.6898,  0.2860,  0.7203,  0.0329,
          1.0722,  0.4117,  0.6470,  1.2287, -0.4548,  0.0064, -0.4536,  1.1669,
          0.3382]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
115000 loss tensor(0.0654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6497,  1.5475,  0.4230,  3.2393,  0.7474, -0.6123, -0.3127,  1.3856,
          0.8861,  0.3403,  0.0613,  1.0961,  0.9304,  2.6666,  0.5523,  0.2116,
         -0.0852,  0.5503,  1.6015, -0.0078,  0.8924,  0.1878, -0.1089,  0.6333,
          0.3049,  1.2891, -0.0450,  1.4969,  0.2680,  0.6855,  1.6496,  2.6106,
          0.5615,  0.2338,  0.0998,  1.3051,  0.6902,  0.2855,  0.7203,  0.0335,
          1.0720,  0.4104,  0.6477,  1.2271, -0.4543,  0.0070, -0.4539,  1.1674,
          0.3374]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
116000 loss tensor(0.0778, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0432, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6525,  1.5468,  0.4238,  3.2364,  0.7453, -0.6125, -0.3115,  1.3838,
          0.8859,  0.3404,  0.0598,  1.0961,  0.9282,  2.6639,  0.5515,  0.2120,
         -0.0857,  0.5500,  1.6000, -0.0072,  0.8918,  0.1900, -0.1078,  0.6334,
          0.3045,  1.2884, -0.0458,  1.4972,  0.2685,  0.6855,  1.6496,  2.6102,
          0.5606,  0.2346,  0.0995,  1.3040,  0.6894,  0.2861,  0.7198,  0.0326,
          1.0715,  0.4112,  0.6478,  1.2272, -0.4549,  0.0061, -0.4532,  1.1653,
          0.3383]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
117000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6528,  1.5474,  0.4234,  3.2332,  0.7433, -0.6112, -0.3117,  1.3823,
          0.8854,  0.3406,  0.0601,  1.0964,  0.9290,  2.6646,  0.5517,  0.2112,
         -0.0847,  0.5486,  1.5996, -0.0064,  0.8911,  0.1891, -0.1081,  0.6327,
          0.3050,  1.2860, -0.0450,  1.4963,  0.2679,  0.6851,  1.6490,  2.6077,
          0.5612,  0.2337,  0.1008,  1.3043,  0.6904,  0.2859,  0.7199,  0.0338,
          1.0713,  0.4103,  0.6483,  1.2252, -0.4537,  0.0065, -0.4532,  1.1655,
          0.3377]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
118000 loss tensor(0.0739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0382, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6550,  1.5483,  0.4236,  3.2307,  0.7423, -0.6096, -0.3099,  1.3816,
          0.8856,  0.3415,  0.0605,  1.0974,  0.9280,  2.6640,  0.5501,  0.2102,
         -0.0855,  0.5477,  1.5996, -0.0045,  0.8920,  0.1911, -0.1083,  0.6342,
          0.3063,  1.2852, -0.0440,  1.4953,  0.2672,  0.6841,  1.6499,  2.6075,
          0.5607,  0.2343,  0.1011,  1.3021,  0.6894,  0.2854,  0.7189,  0.0339,
          1.0702,  0.4092,  0.6476,  1.2239, -0.4531,  0.0072, -0.4539,  1.1648,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
119000 loss tensor(0.0755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0415, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6568,  1.5479,  0.4242,  3.2286,  0.7412, -0.6093, -0.3099,  1.3796,
          0.8850,  0.3412,  0.0598,  1.0971,  0.9271,  2.6629,  0.5498,  0.2103,
         -0.0852,  0.5472,  1.5992, -0.0045,  0.8905,  0.1925, -0.1079,  0.6337,
          0.3059,  1.2840, -0.0434,  1.4950,  0.2672,  0.6837,  1.6480,  2.6058,
          0.5605,  0.2341,  0.1015,  1.3020,  0.6891,  0.2856,  0.7190,  0.0337,
          1.0700,  0.4091,  0.6481,  1.2231, -0.4530,  0.0068, -0.4537,  1.1641,
          0.3365]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
120000 loss tensor(0.0734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0384, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6568,  1.5477,  0.4236,  3.2241,  0.7397, -0.6090, -0.3094,  1.3779,
          0.8839,  0.3409,  0.0589,  1.0962,  0.9269,  2.6624,  0.5492,  0.2099,
         -0.0851,  0.5467,  1.5979, -0.0048,  0.8898,  0.1930, -0.1076,  0.6326,
          0.3044,  1.2824, -0.0439,  1.4945,  0.2671,  0.6835,  1.6482,  2.6040,
          0.5602,  0.2352,  0.1020,  1.3017,  0.6894,  0.2865,  0.7194,  0.0337,
          1.0699,  0.4087,  0.6491,  1.2225, -0.4528,  0.0068, -0.4535,  1.1640,
          0.3361]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
121000 loss tensor(0.0678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6598,  1.5469,  0.4253,  3.2217,  0.7373, -0.6092, -0.3094,  1.3750,
          0.8829,  0.3408,  0.0576,  1.0959,  0.9249,  2.6599,  0.5502,  0.2109,
         -0.0846,  0.5471,  1.5968, -0.0041,  0.8877,  0.1941, -0.1058,  0.6327,
          0.3046,  1.2806, -0.0441,  1.4956,  0.2683,  0.6842,  1.6465,  2.6025,
          0.5583,  0.2344,  0.1006,  1.3019,  0.6896,  0.2874,  0.7192,  0.0320,
          1.0699,  0.4096,  0.6496,  1.2228, -0.4535,  0.0056, -0.4519,  1.1622,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
122000 loss tensor(0.0691, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6612,  1.5466,  0.4246,  3.2183,  0.7349, -0.6083, -0.3089,  1.3737,
          0.8827,  0.3408,  0.0572,  1.0957,  0.9239,  2.6594,  0.5501,  0.2104,
         -0.0847,  0.5466,  1.5962, -0.0032,  0.8876,  0.1950, -0.1055,  0.6333,
          0.3044,  1.2798, -0.0444,  1.4954,  0.2682,  0.6838,  1.6464,  2.6012,
          0.5581,  0.2347,  0.1010,  1.3008,  0.6894,  0.2874,  0.7188,  0.0323,
          1.0695,  0.4094,  0.6499,  1.2220, -0.4532,  0.0058, -0.4518,  1.1610,
          0.3378]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
123000 loss tensor(0.0717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6632e+00,  1.5473e+00,  4.2464e-01,  3.2169e+00,  7.3478e-01,
         -6.0691e-01, -3.0721e-01,  1.3730e+00,  8.8335e-01,  3.4163e-01,
          5.7473e-02,  1.0969e+00,  9.2321e-01,  2.6595e+00,  5.4887e-01,
          2.0926e-01, -8.5461e-02,  5.4511e-01,  1.5962e+00, -1.2925e-03,
          8.8831e-01,  1.9676e-01, -1.0601e-01,  6.3390e-01,  3.0499e-01,
          1.2788e+00, -4.2954e-02,  1.4942e+00,  2.6709e-01,  6.8317e-01,
          1.6469e+00,  2.6004e+00,  5.5845e-01,  2.3545e-01,  1.0166e-01,
          1.2995e+00,  6.8832e-01,  2.8627e-01,  7.1782e-01,  3.2472e-02,
          1.0679e+00,  4.0897e-01,  6.4938e-01,  1.2205e+00, -4.5202e-01,
          6.6467e-03, -4.5260e-01,  1.1607e+00,  3.3660e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
124000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6651e+00,  1.5457e+00,  4.2381e-01,  3.2134e+00,  7.3189e-01,
         -6.0676e-01, -3.0838e-01,  1.3703e+00,  8.8160e-01,  3.4000e-01,
          5.6958e-02,  1.0953e+00,  9.2339e-01,  2.6574e+00,  5.4896e-01,
          2.0961e-01, -8.3969e-02,  5.4550e-01,  1.5956e+00, -2.3137e-03,
          8.8666e-01,  1.9677e-01, -1.0504e-01,  6.3326e-01,  3.0393e-01,
          1.2764e+00, -4.2008e-02,  1.4951e+00,  2.6798e-01,  6.8348e-01,
          1.6462e+00,  2.5997e+00,  5.5795e-01,  2.3376e-01,  1.0160e-01,
          1.2994e+00,  6.8955e-01,  2.8719e-01,  7.1880e-01,  3.2676e-02,
          1.0689e+00,  4.0772e-01,  6.5076e-01,  1.2203e+00, -4.5309e-01,
          5.4581e-03, -4.5115e-01,  1.1604e+00,  3.3785e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
125000 loss tensor(0.0717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6672e+00,  1.5458e+00,  4.2494e-01,  3.2107e+00,  7.3040e-01,
         -6.0525e-01, -3.0710e-01,  1.3697e+00,  8.8220e-01,  3.4102e-01,
          5.7621e-02,  1.0960e+00,  9.2251e-01,  2.6575e+00,  5.4820e-01,
          2.0834e-01, -8.4519e-02,  5.4355e-01,  1.5957e+00, -8.4853e-04,
          8.8629e-01,  1.9764e-01, -1.0566e-01,  6.3404e-01,  3.0519e-01,
          1.2750e+00, -4.1919e-02,  1.4935e+00,  2.6684e-01,  6.8230e-01,
          1.6463e+00,  2.5989e+00,  5.5844e-01,  2.3450e-01,  1.0258e-01,
          1.2981e+00,  6.8841e-01,  2.8665e-01,  7.1735e-01,  3.3450e-02,
          1.0677e+00,  4.0760e-01,  6.5012e-01,  1.2187e+00, -4.5154e-01,
          6.4074e-03, -4.5180e-01,  1.1608e+00,  3.3672e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
126000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0369, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6686e+00,  1.5460e+00,  4.2620e-01,  3.2070e+00,  7.2824e-01,
         -6.0519e-01, -3.0567e-01,  1.3678e+00,  8.8159e-01,  3.4159e-01,
          5.6324e-02,  1.0964e+00,  9.2118e-01,  2.6556e+00,  5.4902e-01,
          2.0890e-01, -8.5025e-02,  5.4383e-01,  1.5933e+00, -2.0437e-04,
          8.8558e-01,  1.9927e-01, -1.0450e-01,  6.3363e-01,  3.0530e-01,
          1.2742e+00, -4.2415e-02,  1.4944e+00,  2.6757e-01,  6.8264e-01,
          1.6457e+00,  2.5975e+00,  5.5698e-01,  2.3566e-01,  1.0232e-01,
          1.2978e+00,  6.8855e-01,  2.8731e-01,  7.1717e-01,  3.2725e-02,
          1.0674e+00,  4.0802e-01,  6.5033e-01,  1.2183e+00, -4.5228e-01,
          5.6731e-03, -4.5046e-01,  1.1581e+00,  3.3808e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
127000 loss tensor(0.0666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6695e+00,  1.5452e+00,  4.2442e-01,  3.2036e+00,  7.2662e-01,
         -6.0503e-01, -3.0638e-01,  1.3661e+00,  8.8031e-01,  3.4069e-01,
          5.5667e-02,  1.0953e+00,  9.2044e-01,  2.6547e+00,  5.4832e-01,
          2.0900e-01, -8.3724e-02,  5.4368e-01,  1.5934e+00, -6.7491e-04,
          8.8407e-01,  1.9935e-01, -1.0396e-01,  6.3293e-01,  3.0438e-01,
          1.2721e+00, -4.2055e-02,  1.4941e+00,  2.6798e-01,  6.8265e-01,
          1.6452e+00,  2.5959e+00,  5.5618e-01,  2.3462e-01,  1.0228e-01,
          1.2979e+00,  6.8972e-01,  2.8799e-01,  7.1808e-01,  3.2484e-02,
          1.0682e+00,  4.0782e-01,  6.5153e-01,  1.2184e+00, -4.5235e-01,
          5.0112e-03, -4.5034e-01,  1.1582e+00,  3.3776e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
128000 loss tensor(0.0751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0408, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6710e+00,  1.5462e+00,  4.2507e-01,  3.2010e+00,  7.2589e-01,
         -6.0361e-01, -3.0601e-01,  1.3652e+00,  8.8065e-01,  3.4114e-01,
          5.6096e-02,  1.0961e+00,  9.2111e-01,  2.6553e+00,  5.4726e-01,
          2.0773e-01, -8.3875e-02,  5.4235e-01,  1.5938e+00, -7.1671e-05,
          8.8550e-01,  2.0084e-01, -1.0454e-01,  6.3307e-01,  3.0488e-01,
          1.2717e+00, -4.0436e-02,  1.4927e+00,  2.6657e-01,  6.8128e-01,
          1.6456e+00,  2.5949e+00,  5.5693e-01,  2.3424e-01,  1.0358e-01,
          1.2963e+00,  6.8872e-01,  2.8690e-01,  7.1697e-01,  3.3308e-02,
          1.0669e+00,  4.0663e-01,  6.5085e-01,  1.2161e+00, -4.5102e-01,
          6.3668e-03, -4.5101e-01,  1.1580e+00,  3.3691e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
129000 loss tensor(0.0774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0427, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6724e+00,  1.5444e+00,  4.2551e-01,  3.1991e+00,  7.2344e-01,
         -6.0420e-01, -3.0526e-01,  1.3622e+00,  8.7916e-01,  3.4058e-01,
          5.4197e-02,  1.0954e+00,  9.1975e-01,  2.6534e+00,  5.4772e-01,
          2.0892e-01, -8.3484e-02,  5.4288e-01,  1.5916e+00,  5.2623e-04,
          8.8338e-01,  2.0101e-01, -1.0288e-01,  6.3279e-01,  3.0445e-01,
          1.2694e+00, -4.0797e-02,  1.4933e+00,  2.6765e-01,  6.8210e-01,
          1.6435e+00,  2.5926e+00,  5.5513e-01,  2.3431e-01,  1.0228e-01,
          1.2967e+00,  6.8967e-01,  2.8874e-01,  7.1788e-01,  3.1994e-02,
          1.0677e+00,  4.0687e-01,  6.5227e-01,  1.2166e+00, -4.5198e-01,
          5.0841e-03, -4.4981e-01,  1.1571e+00,  3.3757e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
130000 loss tensor(0.0695, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0363, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6742e+00,  1.5456e+00,  4.2530e-01,  3.1962e+00,  7.2347e-01,
         -6.0231e-01, -3.0502e-01,  1.3618e+00,  8.7991e-01,  3.4127e-01,
          5.5157e-02,  1.0961e+00,  9.1942e-01,  2.6539e+00,  5.4637e-01,
          2.0727e-01, -8.3480e-02,  5.4103e-01,  1.5919e+00,  1.5994e-03,
          8.8424e-01,  2.0246e-01, -1.0393e-01,  6.3376e-01,  3.0520e-01,
          1.2680e+00, -3.8939e-02,  1.4918e+00,  2.6642e-01,  6.8091e-01,
          1.6441e+00,  2.5919e+00,  5.5599e-01,  2.3438e-01,  1.0390e-01,
          1.2952e+00,  6.8843e-01,  2.8726e-01,  7.1706e-01,  3.3096e-02,
          1.0666e+00,  4.0555e-01,  6.5155e-01,  1.2147e+00, -4.5062e-01,
          6.1401e-03, -4.5075e-01,  1.1570e+00,  3.3631e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
131000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6768e+00,  1.5447e+00,  4.2587e-01,  3.1933e+00,  7.2118e-01,
         -6.0230e-01, -3.0364e-01,  1.3597e+00,  8.7975e-01,  3.4177e-01,
          5.4193e-02,  1.0963e+00,  9.1809e-01,  2.6521e+00,  5.4613e-01,
          2.0721e-01, -8.4051e-02,  5.4056e-01,  1.5910e+00,  1.9913e-03,
          8.8293e-01,  2.0329e-01, -1.0302e-01,  6.3339e-01,  3.0499e-01,
          1.2672e+00, -4.0137e-02,  1.4920e+00,  2.6669e-01,  6.8093e-01,
          1.6435e+00,  2.5919e+00,  5.5509e-01,  2.3519e-01,  1.0397e-01,
          1.2949e+00,  6.8853e-01,  2.8736e-01,  7.1637e-01,  3.2592e-02,
          1.0659e+00,  4.0642e-01,  6.5192e-01,  1.2143e+00, -4.5060e-01,
          5.9797e-03, -4.5043e-01,  1.1557e+00,  3.3680e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
132000 loss tensor(0.0755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0413, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6776e+00,  1.5442e+00,  4.2459e-01,  3.1913e+00,  7.1988e-01,
         -6.0120e-01, -3.0397e-01,  1.3584e+00,  8.7868e-01,  3.4092e-01,
          5.4228e-02,  1.0958e+00,  9.1822e-01,  2.6517e+00,  5.4594e-01,
          2.0682e-01, -8.3356e-02,  5.3987e-01,  1.5903e+00,  2.6604e-03,
          8.8273e-01,  2.0368e-01, -1.0311e-01,  6.3338e-01,  3.0474e-01,
          1.2659e+00, -3.8152e-02,  1.4913e+00,  2.6665e-01,  6.8052e-01,
          1.6435e+00,  2.5898e+00,  5.5539e-01,  2.3452e-01,  1.0431e-01,
          1.2941e+00,  6.8876e-01,  2.8801e-01,  7.1665e-01,  3.3090e-02,
          1.0656e+00,  4.0484e-01,  6.5228e-01,  1.2133e+00, -4.5060e-01,
          5.8397e-03, -4.5019e-01,  1.1562e+00,  3.3658e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
133000 loss tensor(0.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6789e+00,  1.5433e+00,  4.2597e-01,  3.1879e+00,  7.1777e-01,
         -6.0149e-01, -3.0458e-01,  1.3550e+00,  8.7747e-01,  3.4019e-01,
          5.2403e-02,  1.0945e+00,  9.1799e-01,  2.6501e+00,  5.4684e-01,
          2.0763e-01, -8.2453e-02,  5.4071e-01,  1.5891e+00,  2.8791e-03,
          8.8038e-01,  2.0409e-01, -1.0149e-01,  6.3252e-01,  3.0357e-01,
          1.2639e+00, -3.8928e-02,  1.4921e+00,  2.6756e-01,  6.8104e-01,
          1.6424e+00,  2.5877e+00,  5.5375e-01,  2.3419e-01,  1.0314e-01,
          1.2952e+00,  6.8970e-01,  2.8881e-01,  7.1763e-01,  3.1872e-02,
          1.0664e+00,  4.0570e-01,  6.5383e-01,  1.2134e+00, -4.5081e-01,
          4.7752e-03, -4.4887e-01,  1.1551e+00,  3.3755e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
134000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0355, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6796,  1.5428,  0.4246,  3.1842,  0.7150, -0.6009, -0.3036,  1.3540,
          0.8772,  0.3406,  0.0529,  1.0948,  0.9162,  2.6501,  0.5465,  0.2075,
         -0.0828,  0.5402,  1.5888,  0.0042,  0.8807,  0.2055, -0.1011,  0.6333,
          0.3034,  1.2628, -0.0393,  1.4912,  0.2670,  0.6810,  1.6419,  2.5866,
          0.5533,  0.2342,  0.1032,  1.2939,  0.6892,  0.2891,  0.7166,  0.0319,
          1.0656,  0.4059,  0.6540,  1.2130, -0.4503,  0.0053, -0.4489,  1.1539,
          0.3374]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
135000 loss tensor(0.0753, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0415, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6830,  1.5436,  0.4265,  3.1823,  0.7154, -0.5996, -0.3023,  1.3527,
          0.8777,  0.3413,  0.0527,  1.0956,  0.9156,  2.6487,  0.5447,  0.2062,
         -0.0837,  0.5388,  1.5885,  0.0048,  0.8812,  0.2076, -0.1017,  0.6336,
          0.3045,  1.2628, -0.0385,  1.4907,  0.2667,  0.6801,  1.6424,  2.5867,
          0.5534,  0.2357,  0.1041,  1.2923,  0.6882,  0.2881,  0.7160,  0.0320,
          1.0644,  0.4051,  0.6535,  1.2113, -0.4499,  0.0055, -0.4494,  1.1538,
          0.3365]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
136000 loss tensor(0.0717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0372, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6842,  1.5439,  0.4269,  3.1794,  0.7131, -0.5990, -0.3024,  1.3514,
          0.8773,  0.3414,  0.0522,  1.0956,  0.9155,  2.6487,  0.5448,  0.2056,
         -0.0827,  0.5379,  1.5881,  0.0047,  0.8800,  0.2072, -0.1018,  0.6336,
          0.3044,  1.2605, -0.0377,  1.4899,  0.2662,  0.6792,  1.6430,  2.5851,
          0.5541,  0.2345,  0.1050,  1.2921,  0.6888,  0.2882,  0.7160,  0.0326,
          1.0644,  0.4040,  0.6539,  1.2101, -0.4490,  0.0059, -0.4488,  1.1533,
          0.3365]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
137000 loss tensor(0.0654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6846,  1.5430,  0.4276,  3.1757,  0.7127, -0.5983, -0.3015,  1.3497,
          0.8757,  0.3413,  0.0518,  1.0950,  0.9157,  2.6474,  0.5454,  0.2064,
         -0.0835,  0.5382,  1.5848,  0.0052,  0.8784,  0.2093, -0.1007,  0.6325,
          0.3025,  1.2599, -0.0381,  1.4909,  0.2674,  0.6806,  1.6413,  2.5820,
          0.5530,  0.2360,  0.1045,  1.2929,  0.6884,  0.2890,  0.7158,  0.0321,
          1.0646,  0.4039,  0.6542,  1.2103, -0.4504,  0.0043, -0.4480,  1.1525,
          0.3368]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
138000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6860,  1.5412,  0.4258,  3.1724,  0.7098, -0.5989, -0.3017,  1.3479,
          0.8754,  0.3408,  0.0509,  1.0946,  0.9128,  2.6462,  0.5451,  0.2066,
         -0.0823,  0.5378,  1.5845,  0.0048,  0.8787,  0.2091, -0.0997,  0.6327,
          0.3033,  1.2575, -0.0376,  1.4907,  0.2673,  0.6801,  1.6418,  2.5827,
          0.5518,  0.2345,  0.1041,  1.2916,  0.6892,  0.2897,  0.7161,  0.0318,
          1.0646,  0.4047,  0.6550,  1.2104, -0.4501,  0.0047, -0.4471,  1.1508,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
139000 loss tensor(0.0751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0393, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6879,  1.5420,  0.4276,  3.1712,  0.7079, -0.5985, -0.3007,  1.3452,
          0.8755,  0.3408,  0.0497,  1.0949,  0.9126,  2.6447,  0.5454,  0.2064,
         -0.0823,  0.5375,  1.5862,  0.0084,  0.8767,  0.2099, -0.0993,  0.6334,
          0.3036,  1.2560, -0.0374,  1.4907,  0.2675,  0.6803,  1.6418,  2.5816,
          0.5513,  0.2343,  0.1046,  1.2913,  0.6890,  0.2894,  0.7156,  0.0313,
          1.0639,  0.4044,  0.6551,  1.2092, -0.4498,  0.0043, -0.4467,  1.1509,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
140000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6902,  1.5426,  0.4287,  3.1687,  0.7067, -0.5975, -0.3001,  1.3445,
          0.8757,  0.3417,  0.0498,  1.0958,  0.9126,  2.6457,  0.5445,  0.2055,
         -0.0825,  0.5368,  1.5841,  0.0070,  0.8777,  0.2115, -0.0996,  0.6333,
          0.3042,  1.2557, -0.0369,  1.4895,  0.2661,  0.6787,  1.6423,  2.5803,
          0.5510,  0.2348,  0.1046,  1.2898,  0.6881,  0.2885,  0.7150,  0.0315,
          1.0628,  0.4034,  0.6547,  1.2070, -0.4480,  0.0056, -0.4469,  1.1508,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
141000 loss tensor(0.0639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6916,  1.5411,  0.4271,  3.1658,  0.7066, -0.5964, -0.2999,  1.3437,
          0.8751,  0.3410,  0.0500,  1.0955,  0.9120,  2.6450,  0.5434,  0.2046,
         -0.0822,  0.5350,  1.5838,  0.0075,  0.8772,  0.2120, -0.0997,  0.6334,
          0.3039,  1.2536, -0.0358,  1.4887,  0.2659,  0.6784,  1.6417,  2.5793,
          0.5518,  0.2344,  0.1061,  1.2892,  0.6883,  0.2887,  0.7151,  0.0326,
          1.0630,  0.4024,  0.6555,  1.2068, -0.4479,  0.0056, -0.4476,  1.1497,
          0.3362]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
142000 loss tensor(0.0720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0367, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6922,  1.5416,  0.4292,  3.1632,  0.7053, -0.5959, -0.2990,  1.3414,
          0.8747,  0.3414,  0.0491,  1.0950,  0.9108,  2.6438,  0.5432,  0.2047,
         -0.0829,  0.5349,  1.5830,  0.0084,  0.8758,  0.2139, -0.0990,  0.6335,
          0.3036,  1.2539, -0.0363,  1.4885,  0.2661,  0.6785,  1.6416,  2.5782,
          0.5508,  0.2357,  0.1057,  1.2891,  0.6877,  0.2892,  0.7149,  0.0313,
          1.0621,  0.4033,  0.6556,  1.2066, -0.4479,  0.0052, -0.4473,  1.1490,
          0.3364]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
143000 loss tensor(0.0733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0407, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6928,  1.5395,  0.4268,  3.1593,  0.7034, -0.5959, -0.2994,  1.3391,
          0.8726,  0.3401,  0.0477,  1.0938,  0.9101,  2.6417,  0.5436,  0.2053,
         -0.0819,  0.5353,  1.5819,  0.0071,  0.8748,  0.2138, -0.0981,  0.6323,
          0.3022,  1.2509, -0.0362,  1.4894,  0.2672,  0.6791,  1.6398,  2.5767,
          0.5498,  0.2351,  0.1050,  1.2892,  0.6888,  0.2905,  0.7161,  0.0314,
          1.0632,  0.4025,  0.6569,  1.2066, -0.4489,  0.0041, -0.4459,  1.1478,
          0.3373]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
144000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6941,  1.5390,  0.4276,  3.1562,  0.7017, -0.5952, -0.2996,  1.3373,
          0.8727,  0.3405,  0.0473,  1.0939,  0.9091,  2.6410,  0.5438,  0.2051,
         -0.0815,  0.5347,  1.5813,  0.0081,  0.8743,  0.2143, -0.0975,  0.6323,
          0.3022,  1.2501, -0.0359,  1.4889,  0.2671,  0.6790,  1.6403,  2.5751,
          0.5495,  0.2350,  0.1054,  1.2888,  0.6885,  0.2901,  0.7155,  0.0310,
          1.0626,  0.4030,  0.6572,  1.2058, -0.4483,  0.0042, -0.4456,  1.1466,
          0.3372]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
145000 loss tensor(0.0731, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0379, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6965,  1.5400,  0.4282,  3.1529,  0.7003, -0.5948, -0.2991,  1.3352,
          0.8723,  0.3405,  0.0468,  1.0941,  0.9089,  2.6406,  0.5437,  0.2048,
         -0.0815,  0.5341,  1.5813,  0.0091,  0.8733,  0.2152, -0.0971,  0.6321,
          0.3020,  1.2482, -0.0361,  1.4887,  0.2671,  0.6788,  1.6402,  2.5729,
          0.5492,  0.2348,  0.1054,  1.2884,  0.6887,  0.2903,  0.7153,  0.0309,
          1.0625,  0.4031,  0.6574,  1.2051, -0.4481,  0.0041, -0.4455,  1.1471,
          0.3372]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
146000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6975,  1.5404,  0.4284,  3.1506,  0.7000, -0.5930, -0.2984,  1.3352,
          0.8730,  0.3413,  0.0476,  1.0948,  0.9083,  2.6398,  0.5423,  0.2035,
         -0.0823,  0.5319,  1.5813,  0.0103,  0.8741,  0.2161, -0.0979,  0.6334,
          0.3032,  1.2478, -0.0341,  1.4874,  0.2662,  0.6775,  1.6412,  2.5734,
          0.5499,  0.2350,  0.1070,  1.2869,  0.6878,  0.2896,  0.7145,  0.0321,
          1.0611,  0.4016,  0.6568,  1.2038, -0.4471,  0.0048, -0.4464,  1.1461,
          0.3359]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
147000 loss tensor(0.0686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.6997,  1.5389,  0.4284,  3.1485,  0.6982, -0.5925, -0.2980,  1.3335,
          0.8723,  0.3412,  0.0470,  1.0946,  0.9082,  2.6397,  0.5421,  0.2034,
         -0.0816,  0.5319,  1.5799,  0.0108,  0.8738,  0.2166, -0.0976,  0.6333,
          0.3032,  1.2465, -0.0343,  1.4871,  0.2659,  0.6773,  1.6412,  2.5715,
          0.5494,  0.2351,  0.1074,  1.2868,  0.6879,  0.2894,  0.7148,  0.0319,
          1.0610,  0.4011,  0.6573,  1.2024, -0.4464,  0.0051, -0.4456,  1.1462,
          0.3360]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
148000 loss tensor(0.0728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0376, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7007,  1.5387,  0.4290,  3.1461,  0.6969, -0.5919, -0.2973,  1.3318,
          0.8714,  0.3413,  0.0465,  1.0945,  0.9069,  2.6394,  0.5423,  0.2032,
         -0.0820,  0.5312,  1.5780,  0.0105,  0.8725,  0.2183, -0.0971,  0.6334,
          0.3020,  1.2456, -0.0347,  1.4866,  0.2660,  0.6775,  1.6410,  2.5699,
          0.5489,  0.2362,  0.1072,  1.2862,  0.6878,  0.2901,  0.7141,  0.0316,
          1.0607,  0.4015,  0.6572,  1.2024, -0.4466,  0.0049, -0.4457,  1.1447,
          0.3364]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
149000 loss tensor(0.0743, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0409, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7022,  1.5381,  0.4283,  3.1428,  0.6951, -0.5916, -0.2977,  1.3302,
          0.8715,  0.3408,  0.0464,  1.0946,  0.9070,  2.6382,  0.5416,  0.2027,
         -0.0810,  0.5310,  1.5789,  0.0117,  0.8727,  0.2182, -0.0973,  0.6337,
          0.3029,  1.2434, -0.0330,  1.4861,  0.2657,  0.6765,  1.6400,  2.5694,
          0.5488,  0.2344,  0.1073,  1.2853,  0.6880,  0.2898,  0.7140,  0.0321,
          1.0604,  0.4004,  0.6576,  1.2014, -0.4458,  0.0052, -0.4452,  1.1447,
          0.3363]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
150000 loss tensor(0.0702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7036,  1.5383,  0.4292,  3.1398,  0.6951, -0.5903, -0.2972,  1.3285,
          0.8714,  0.3412,  0.0458,  1.0944,  0.9066,  2.6371,  0.5413,  0.2020,
         -0.0810,  0.5301,  1.5779,  0.0124,  0.8712,  0.2186, -0.0970,  0.6334,
          0.3027,  1.2422, -0.0334,  1.4859,  0.2659,  0.6767,  1.6402,  2.5675,
          0.5489,  0.2349,  0.1080,  1.2853,  0.6877,  0.2895,  0.7138,  0.0320,
          1.0601,  0.3999,  0.6580,  1.2001, -0.4457,  0.0048, -0.4453,  1.1442,
          0.3359]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
151000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0358, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7042,  1.5378,  0.4296,  3.1362,  0.6924, -0.5900, -0.2965,  1.3265,
          0.8705,  0.3416,  0.0449,  1.0947,  0.9054,  2.6362,  0.5409,  0.2022,
         -0.0812,  0.5297,  1.5781,  0.0122,  0.8706,  0.2195, -0.0964,  0.6336,
          0.3031,  1.2406, -0.0330,  1.4857,  0.2660,  0.6763,  1.6400,  2.5668,
          0.5483,  0.2347,  0.1078,  1.2846,  0.6876,  0.2903,  0.7136,  0.0322,
          1.0599,  0.4001,  0.6578,  1.2002, -0.4452,  0.0050, -0.4451,  1.1443,
          0.3364]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
152000 loss tensor(0.0678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7058,  1.5365,  0.4289,  3.1343,  0.6920, -0.5898, -0.2965,  1.3251,
          0.8702,  0.3408,  0.0445,  1.0941,  0.9051,  2.6348,  0.5407,  0.2021,
         -0.0810,  0.5292,  1.5772,  0.0124,  0.8705,  0.2208, -0.0962,  0.6338,
          0.3022,  1.2396, -0.0322,  1.4855,  0.2661,  0.6760,  1.6399,  2.5660,
          0.5477,  0.2345,  0.1080,  1.2837,  0.6873,  0.2903,  0.7137,  0.0318,
          1.0596,  0.3990,  0.6584,  1.1989, -0.4456,  0.0049, -0.4445,  1.1435,
          0.3363]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
153000 loss tensor(0.0613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7067,  1.5357,  0.4286,  3.1302,  0.6907, -0.5897, -0.2965,  1.3234,
          0.8692,  0.3403,  0.0441,  1.0930,  0.9045,  2.6342,  0.5405,  0.2020,
         -0.0806,  0.5288,  1.5757,  0.0122,  0.8697,  0.2213, -0.0957,  0.6330,
          0.3019,  1.2388, -0.0324,  1.4849,  0.2662,  0.6758,  1.6394,  2.5634,
          0.5472,  0.2352,  0.1086,  1.2839,  0.6885,  0.2908,  0.7148,  0.0317,
          1.0600,  0.3996,  0.6597,  1.1990, -0.4452,  0.0044, -0.4443,  1.1422,
          0.3358]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
154000 loss tensor(0.0783, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0428, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7084,  1.5360,  0.4295,  3.1284,  0.6897, -0.5888, -0.2962,  1.3220,
          0.8694,  0.3408,  0.0440,  1.0938,  0.9039,  2.6337,  0.5403,  0.2012,
         -0.0804,  0.5276,  1.5756,  0.0135,  0.8698,  0.2216, -0.0957,  0.6340,
          0.3022,  1.2373, -0.0314,  1.4850,  0.2657,  0.6756,  1.6407,  2.5633,
          0.5470,  0.2347,  0.1084,  1.2829,  0.6880,  0.2897,  0.7133,  0.0315,
          1.0591,  0.3983,  0.6590,  1.1972, -0.4449,  0.0046, -0.4440,  1.1424,
          0.3363]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
155000 loss tensor(0.0602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7102,  1.5358,  0.4304,  3.1262,  0.6874, -0.5879, -0.2956,  1.3199,
          0.8692,  0.3409,  0.0434,  1.0939,  0.9033,  2.6331,  0.5401,  0.2010,
         -0.0805,  0.5275,  1.5750,  0.0148,  0.8683,  0.2232, -0.0953,  0.6336,
          0.3022,  1.2361, -0.0320,  1.4848,  0.2657,  0.6758,  1.6403,  2.5626,
          0.5468,  0.2350,  0.1087,  1.2826,  0.6876,  0.2895,  0.7134,  0.0316,
          1.0589,  0.3985,  0.6593,  1.1967, -0.4442,  0.0050, -0.4435,  1.1411,
          0.3361]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
156000 loss tensor(0.0734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0407, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7092,  1.5341,  0.4296,  3.1225,  0.6864, -0.5884, -0.2960,  1.3172,
          0.8675,  0.3400,  0.0418,  1.0928,  0.9030,  2.6313,  0.5410,  0.2019,
         -0.0794,  0.5279,  1.5735,  0.0139,  0.8672,  0.2221, -0.0938,  0.6325,
          0.3008,  1.2344, -0.0322,  1.4855,  0.2670,  0.6758,  1.6391,  2.5597,
          0.5462,  0.2340,  0.1080,  1.2834,  0.6890,  0.2911,  0.7145,  0.0313,
          1.0595,  0.3991,  0.6607,  1.1972, -0.4455,  0.0034, -0.4424,  1.1413,
          0.3372]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
157000 loss tensor(0.0749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7124,  1.5344,  0.4315,  3.1201,  0.6853, -0.5874, -0.2949,  1.3172,
          0.8682,  0.3409,  0.0430,  1.0940,  0.9021,  2.6315,  0.5393,  0.2008,
         -0.0808,  0.5265,  1.5737,  0.0152,  0.8675,  0.2245, -0.0946,  0.6339,
          0.3016,  1.2340, -0.0315,  1.4840,  0.2654,  0.6750,  1.6402,  2.5601,
          0.5457,  0.2352,  0.1087,  1.2816,  0.6872,  0.2900,  0.7135,  0.0314,
          1.0580,  0.3982,  0.6598,  1.1959, -0.4440,  0.0050, -0.4430,  1.1405,
          0.3361]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
158000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0374, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7131,  1.5346,  0.4309,  3.1170,  0.6847, -0.5866, -0.2947,  1.3158,
          0.8678,  0.3409,  0.0417,  1.0937,  0.9018,  2.6302,  0.5392,  0.2005,
         -0.0802,  0.5258,  1.5727,  0.0161,  0.8673,  0.2250, -0.0944,  0.6337,
          0.3020,  1.2328, -0.0308,  1.4841,  0.2659,  0.6747,  1.6410,  2.5594,
          0.5455,  0.2348,  0.1095,  1.2810,  0.6877,  0.2902,  0.7133,  0.0317,
          1.0582,  0.3975,  0.6603,  1.1951, -0.4442,  0.0041, -0.4427,  1.1404,
          0.3360]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
159000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0351, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7150,  1.5339,  0.4326,  3.1151,  0.6833, -0.5861, -0.2943,  1.3141,
          0.8675,  0.3408,  0.0414,  1.0939,  0.9001,  2.6300,  0.5390,  0.2001,
         -0.0801,  0.5253,  1.5719,  0.0158,  0.8658,  0.2260, -0.0942,  0.6338,
          0.3021,  1.2313, -0.0304,  1.4837,  0.2657,  0.6747,  1.6402,  2.5579,
          0.5455,  0.2349,  0.1097,  1.2803,  0.6873,  0.2902,  0.7131,  0.0315,
          1.0580,  0.3977,  0.6605,  1.1946, -0.4436,  0.0045, -0.4425,  1.1391,
          0.3360]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
160000 loss tensor(0.0599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7151e+00,  1.5322e+00,  4.3240e-01,  3.1109e+00,  6.8117e-01,
         -5.8704e-01, -2.9461e-01,  1.3108e+00,  8.6598e-01,  3.4025e-01,
          3.9190e-02,  1.0928e+00,  8.9927e-01,  2.6280e+00,  5.4017e-01,
          2.0148e-01, -7.9564e-02,  5.2598e-01,  1.5704e+00,  1.6200e-02,
          8.6466e-01,  2.2619e-01, -9.2327e-02,  6.3275e-01,  3.0013e-01,
          1.2292e+00, -3.1601e-02,  1.4844e+00,  2.6693e-01,  6.7578e-01,
          1.6387e+00,  2.5554e+00,  5.4352e-01,  2.3500e-01,  1.0841e-01,
          1.2810e+00,  6.8819e-01,  2.9186e-01,  7.1395e-01,  3.0133e-02,
          1.0585e+00,  3.9859e-01,  6.6174e-01,  1.1954e+00, -4.4496e-01,
          3.0459e-03, -4.4145e-01,  1.1383e+00,  3.3718e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
161000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0361, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7185,  1.5328,  0.4332,  3.1101,  0.6797, -0.5864, -0.2942,  1.3097,
          0.8668,  0.3412,  0.0392,  1.0938,  0.8986,  2.6271,  0.5399,  0.2007,
         -0.0802,  0.5250,  1.5717,  0.0171,  0.8640,  0.2279, -0.0924,  0.6339,
          0.3010,  1.2294, -0.0309,  1.4840,  0.2664,  0.6746,  1.6401,  2.5556,
          0.5429,  0.2351,  0.1088,  1.2796,  0.6870,  0.2909,  0.7127,  0.0297,
          1.0570,  0.3977,  0.6610,  1.1937, -0.4438,  0.0036, -0.4408,  1.1381,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
162000 loss tensor(0.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7191,  1.5321,  0.4320,  3.1066,  0.6796, -0.5850, -0.2936,  1.3085,
          0.8661,  0.3407,  0.0397,  1.0934,  0.8994,  2.6277,  0.5387,  0.1995,
         -0.0798,  0.5235,  1.5716,  0.0183,  0.8650,  0.2274, -0.0931,  0.6338,
          0.3010,  1.2272, -0.0294,  1.4827,  0.2654,  0.6736,  1.6397,  2.5533,
          0.5443,  0.2348,  0.1100,  1.2791,  0.6875,  0.2906,  0.7129,  0.0313,
          1.0571,  0.3957,  0.6613,  1.1924, -0.4428,  0.0043, -0.4418,  1.1378,
          0.3362]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
163000 loss tensor(0.0610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7188,  1.5307,  0.4320,  3.1023,  0.6765, -0.5853, -0.2946,  1.3057,
          0.8649,  0.3402,  0.0384,  1.0924,  0.8971,  2.6263,  0.5395,  0.2005,
         -0.0789,  0.5243,  1.5689,  0.0168,  0.8627,  0.2283, -0.0915,  0.6333,
          0.3000,  1.2257, -0.0306,  1.4830,  0.2666,  0.6752,  1.6386,  2.5521,
          0.5430,  0.2344,  0.1093,  1.2797,  0.6878,  0.2920,  0.7137,  0.0303,
          1.0576,  0.3974,  0.6624,  1.1934, -0.4433,  0.0035, -0.4408,  1.1366,
          0.3367]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
164000 loss tensor(0.0677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7198,  1.5304,  0.4332,  3.1002,  0.6767, -0.5846, -0.2935,  1.3041,
          0.8645,  0.3402,  0.0376,  1.0923,  0.8966,  2.6255,  0.5393,  0.2002,
         -0.0794,  0.5238,  1.5678,  0.0177,  0.8619,  0.2296, -0.0912,  0.6329,
          0.2996,  1.2256, -0.0311,  1.4830,  0.2668,  0.6743,  1.6380,  2.5509,
          0.5425,  0.2348,  0.1091,  1.2792,  0.6875,  0.2918,  0.7133,  0.0303,
          1.0571,  0.3974,  0.6626,  1.1927, -0.4433,  0.0032, -0.4404,  1.1353,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
165000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7206,  1.5296,  0.4315,  3.0970,  0.6748, -0.5846, -0.2939,  1.3028,
          0.8639,  0.3395,  0.0374,  1.0915,  0.8969,  2.6245,  0.5388,  0.1997,
         -0.0784,  0.5233,  1.5687,  0.0175,  0.8621,  0.2303, -0.0914,  0.6331,
          0.2989,  1.2237, -0.0295,  1.4827,  0.2665,  0.6742,  1.6383,  2.5494,
          0.5428,  0.2340,  0.1098,  1.2784,  0.6879,  0.2918,  0.7135,  0.0307,
          1.0572,  0.3957,  0.6630,  1.1913, -0.4430,  0.0034, -0.4400,  1.1363,
          0.3367]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
166000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7227,  1.5309,  0.4335,  3.0948,  0.6737, -0.5834, -0.2922,  1.3022,
          0.8649,  0.3410,  0.0369,  1.0930,  0.8954,  2.6245,  0.5378,  0.1990,
         -0.0800,  0.5221,  1.5672,  0.0194,  0.8622,  0.2311, -0.0914,  0.6345,
          0.3006,  1.2239, -0.0296,  1.4812,  0.2655,  0.6737,  1.6404,  2.5494,
          0.5420,  0.2357,  0.1103,  1.2771,  0.6865,  0.2908,  0.7123,  0.0302,
          1.0553,  0.3962,  0.6621,  1.1905, -0.4415,  0.0045, -0.4407,  1.1343,
          0.3362]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
167000 loss tensor(0.0757, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0413, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7235,  1.5295,  0.4329,  3.0925,  0.6739, -0.5825, -0.2924,  1.3000,
          0.8640,  0.3405,  0.0370,  1.0927,  0.8961,  2.6235,  0.5375,  0.1983,
         -0.0793,  0.5212,  1.5679,  0.0193,  0.8616,  0.2314, -0.0914,  0.6341,
          0.3006,  1.2222, -0.0283,  1.4812,  0.2657,  0.6729,  1.6394,  2.5476,
          0.5425,  0.2348,  0.1107,  1.2769,  0.6871,  0.2911,  0.7126,  0.0308,
          1.0553,  0.3946,  0.6626,  1.1891, -0.4416,  0.0039, -0.4406,  1.1357,
          0.3356]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
168000 loss tensor(0.0603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7254e+00,  1.5285e+00,  4.3284e-01,  3.0883e+00,  6.7104e-01,
         -5.8261e-01, -2.9304e-01,  1.2977e+00,  8.6243e-01,  3.3991e-01,
          3.6053e-02,  1.0916e+00,  8.9574e-01,  2.6220e+00,  5.3836e-01,
          1.9895e-01, -7.8057e-02,  5.2177e-01,  1.5661e+00,  1.9109e-02,
          8.6022e-01,  2.3092e-01, -9.0612e-02,  6.3324e-01,  2.9924e-01,
          1.2199e+00, -2.8777e-02,  1.4820e+00,  2.6665e-01,  6.7378e-01,
          1.6389e+00,  2.5462e+00,  5.4139e-01,  2.3402e-01,  1.1003e-01,
          1.2776e+00,  6.8823e-01,  2.9247e-01,  7.1327e-01,  3.0809e-02,
          1.0563e+00,  3.9460e-01,  6.6389e-01,  1.1896e+00, -4.4212e-01,
          3.0474e-03, -4.3902e-01,  1.1345e+00,  3.3665e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
169000 loss tensor(0.0782, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0428, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7263e+00,  1.5283e+00,  4.3424e-01,  3.0856e+00,  6.7044e-01,
         -5.8220e-01, -2.9253e-01,  1.2964e+00,  8.6194e-01,  3.4039e-01,
          3.5168e-02,  1.0919e+00,  8.9418e-01,  2.6205e+00,  5.3843e-01,
          1.9902e-01, -7.8729e-02,  5.2128e-01,  1.5659e+00,  2.0732e-02,
          8.5926e-01,  2.3237e-01, -8.9948e-02,  6.3487e-01,  2.9966e-01,
          1.2188e+00, -2.9244e-02,  1.4818e+00,  2.6668e-01,  6.7422e-01,
          1.6386e+00,  2.5450e+00,  5.4038e-01,  2.3452e-01,  1.0974e-01,
          1.2769e+00,  6.8722e-01,  2.9261e-01,  7.1223e-01,  2.9577e-02,
          1.0557e+00,  3.9447e-01,  6.6306e-01,  1.1891e+00, -4.4226e-01,
          2.7222e-03, -4.3883e-01,  1.1345e+00,  3.3687e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
170000 loss tensor(0.0812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0445, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7268,  1.5276,  0.4350,  3.0824,  0.6700, -0.5814, -0.2926,  1.2955,
          0.8626,  0.3396,  0.0355,  1.0917,  0.8932,  2.6205,  0.5368,  0.1980,
         -0.0778,  0.5202,  1.5647,  0.0194,  0.8602,  0.2331, -0.0901,  0.6333,
          0.2995,  1.2179, -0.0275,  1.4807,  0.2661,  0.6721,  1.6406,  2.5444,
          0.5408,  0.2340,  0.1110,  1.2756,  0.6878,  0.2912,  0.7133,  0.0302,
          1.0555,  0.3950,  0.6640,  1.1885, -0.4414,  0.0033, -0.4395,  1.1340,
          0.3356]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
171000 loss tensor(0.0641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7290,  1.5270,  0.4350,  3.0811,  0.6685, -0.5802, -0.2915,  1.2942,
          0.8626,  0.3404,  0.0356,  1.0923,  0.8935,  2.6203,  0.5369,  0.1973,
         -0.0786,  0.5188,  1.5645,  0.0209,  0.8593,  0.2338, -0.0904,  0.6341,
          0.3005,  1.2172, -0.0271,  1.4802,  0.2658,  0.6723,  1.6397,  2.5440,
          0.5410,  0.2344,  0.1115,  1.2752,  0.6869,  0.2910,  0.7123,  0.0310,
          1.0545,  0.3937,  0.6635,  1.1864, -0.4406,  0.0039, -0.4391,  1.1328,
          0.3361]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
172000 loss tensor(0.0774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0427, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7276e+00,  1.5259e+00,  4.3382e-01,  3.0762e+00,  6.6725e-01,
         -5.8081e-01, -2.9234e-01,  1.2915e+00,  8.6115e-01,  3.3914e-01,
          3.4092e-02,  1.0910e+00,  8.9305e-01,  2.6187e+00,  5.3761e-01,
          1.9805e-01, -7.8042e-02,  5.1893e-01,  1.5642e+00,  2.0742e-02,
          8.5791e-01,  2.3459e-01, -8.9318e-02,  6.3330e-01,  2.9799e-01,
          1.2159e+00, -2.7838e-02,  1.4808e+00,  2.6648e-01,  6.7284e-01,
          1.6385e+00,  2.5415e+00,  5.4003e-01,  2.3410e-01,  1.1140e-01,
          1.2756e+00,  6.8723e-01,  2.9212e-01,  7.1298e-01,  3.0264e-02,
          1.0550e+00,  3.9379e-01,  6.6451e-01,  1.1869e+00, -4.4147e-01,
          2.8601e-03, -4.3810e-01,  1.1324e+00,  3.3652e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
173000 loss tensor(0.0621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7310e+00,  1.5260e+00,  4.3510e-01,  3.0752e+00,  6.6568e-01,
         -5.8099e-01, -2.9179e-01,  1.2894e+00,  8.6090e-01,  3.3987e-01,
          3.2369e-02,  1.0914e+00,  8.9118e-01,  2.6178e+00,  5.3729e-01,
          1.9812e-01, -7.8292e-02,  5.1896e-01,  1.5624e+00,  2.1890e-02,
          8.5683e-01,  2.3554e-01, -8.8514e-02,  6.3339e-01,  2.9842e-01,
          1.2141e+00, -2.9066e-02,  1.4805e+00,  2.6665e-01,  6.7330e-01,
          1.6392e+00,  2.5399e+00,  5.3922e-01,  2.3440e-01,  1.1074e-01,
          1.2755e+00,  6.8730e-01,  2.9246e-01,  7.1243e-01,  2.9560e-02,
          1.0549e+00,  3.9458e-01,  6.6464e-01,  1.1872e+00, -4.4088e-01,
          2.7095e-03, -4.3795e-01,  1.1310e+00,  3.3680e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
174000 loss tensor(0.0755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0419, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7327,  1.5262,  0.4352,  3.0730,  0.6655, -0.5797, -0.2903,  1.2893,
          0.8613,  0.3409,  0.0331,  1.0920,  0.8908,  2.6176,  0.5360,  0.1967,
         -0.0792,  0.5170,  1.5629,  0.0220,  0.8577,  0.2363, -0.0893,  0.6351,
          0.2991,  1.2143, -0.0275,  1.4794,  0.2658,  0.6720,  1.6397,  2.5402,
          0.5395,  0.2354,  0.1123,  1.2736,  0.6862,  0.2914,  0.7112,  0.0306,
          1.0534,  0.3933,  0.6636,  1.1853, -0.4397,  0.0037, -0.4386,  1.1307,
          0.3359]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
175000 loss tensor(0.0682, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7334,  1.5252,  0.4362,  3.0699,  0.6646, -0.5786, -0.2910,  1.2882,
          0.8610,  0.3403,  0.0329,  1.0919,  0.8905,  2.6166,  0.5356,  0.1963,
         -0.0783,  0.5164,  1.5619,  0.0214,  0.8570,  0.2368, -0.0894,  0.6337,
          0.2981,  1.2129, -0.0272,  1.4792,  0.2658,  0.6712,  1.6403,  2.5393,
          0.5396,  0.2351,  0.1125,  1.2729,  0.6870,  0.2907,  0.7125,  0.0309,
          1.0537,  0.3936,  0.6648,  1.1849, -0.4397,  0.0036, -0.4382,  1.1293,
          0.3356]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
176000 loss tensor(0.0718, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7348,  1.5251,  0.4367,  3.0681,  0.6634, -0.5779, -0.2907,  1.2859,
          0.8604,  0.3402,  0.0324,  1.0920,  0.8902,  2.6168,  0.5354,  0.1959,
         -0.0783,  0.5165,  1.5615,  0.0225,  0.8569,  0.2375, -0.0893,  0.6343,
          0.2990,  1.2120, -0.0274,  1.4787,  0.2655,  0.6713,  1.6398,  2.5382,
          0.5392,  0.2350,  0.1126,  1.2726,  0.6870,  0.2911,  0.7122,  0.0309,
          1.0534,  0.3929,  0.6651,  1.1839, -0.4389,  0.0041, -0.4384,  1.1292,
          0.3354]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
177000 loss tensor(0.0696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0363, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7343,  1.5237,  0.4364,  3.0643,  0.6609, -0.5795, -0.2907,  1.2833,
          0.8592,  0.3399,  0.0305,  1.0911,  0.8888,  2.6152,  0.5363,  0.1971,
         -0.0783,  0.5170,  1.5596,  0.0226,  0.8557,  0.2386, -0.0877,  0.6341,
          0.2974,  1.2101, -0.0278,  1.4792,  0.2663,  0.6721,  1.6384,  2.5369,
          0.5378,  0.2345,  0.1112,  1.2729,  0.6867,  0.2929,  0.7121,  0.0297,
          1.0538,  0.3930,  0.6654,  1.1846, -0.4397,  0.0032, -0.4370,  1.1286,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
178000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0399, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7357e+00,  1.5232e+00,  4.3605e-01,  3.0613e+00,  6.6043e-01,
         -5.7819e-01, -2.9113e-01,  1.2814e+00,  8.5857e-01,  3.3942e-01,
          3.0532e-02,  1.0906e+00,  8.8958e-01,  2.6139e+00,  5.3655e-01,
          1.9673e-01, -7.7314e-02,  5.1609e-01,  1.5600e+00,  2.3580e-02,
          8.5395e-01,  2.3811e-01, -8.7537e-02,  6.3389e-01,  2.9774e-01,
          1.2088e+00, -2.6295e-02,  1.4793e+00,  2.6660e-01,  6.7197e-01,
          1.6390e+00,  2.5348e+00,  5.3797e-01,  2.3396e-01,  1.1205e-01,
          1.2732e+00,  6.8767e-01,  2.9252e-01,  7.1273e-01,  3.0154e-02,
          1.0537e+00,  3.9230e-01,  6.6630e-01,  1.1834e+00, -4.3968e-01,
          2.7190e-03, -4.3664e-01,  1.1290e+00,  3.3670e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
179000 loss tensor(0.0738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0410, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7363e+00,  1.5219e+00,  4.3653e-01,  3.0573e+00,  6.5927e-01,
         -5.7845e-01, -2.9059e-01,  1.2802e+00,  8.5796e-01,  3.3962e-01,
          2.9702e-02,  1.0907e+00,  8.8783e-01,  2.6132e+00,  5.3625e-01,
          1.9648e-01, -7.7749e-02,  5.1578e-01,  1.5588e+00,  2.2591e-02,
          8.5452e-01,  2.3980e-01, -8.7107e-02,  6.3415e-01,  2.9735e-01,
          1.2077e+00, -2.6836e-02,  1.4789e+00,  2.6665e-01,  6.7221e-01,
          1.6388e+00,  2.5338e+00,  5.3729e-01,  2.3450e-01,  1.1160e-01,
          1.2719e+00,  6.8660e-01,  2.9297e-01,  7.1215e-01,  2.9856e-02,
          1.0535e+00,  3.9238e-01,  6.6571e-01,  1.1835e+00, -4.3956e-01,
          2.6436e-03, -4.3631e-01,  1.1277e+00,  3.3664e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
180000 loss tensor(0.0709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0369, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7374e+00,  1.5222e+00,  4.3657e-01,  3.0554e+00,  6.5790e-01,
         -5.7753e-01, -2.9073e-01,  1.2782e+00,  8.5782e-01,  3.3971e-01,
          2.9669e-02,  1.0904e+00,  8.8844e-01,  2.6124e+00,  5.3614e-01,
          1.9621e-01, -7.7041e-02,  5.1525e-01,  1.5586e+00,  2.3777e-02,
          8.5378e-01,  2.3929e-01, -8.7252e-02,  6.3397e-01,  2.9732e-01,
          1.2067e+00, -2.6390e-02,  1.4788e+00,  2.6658e-01,  6.7156e-01,
          1.6391e+00,  2.5327e+00,  5.3761e-01,  2.3411e-01,  1.1211e-01,
          1.2722e+00,  6.8754e-01,  2.9233e-01,  7.1247e-01,  3.0329e-02,
          1.0533e+00,  3.9159e-01,  6.6643e-01,  1.1821e+00, -4.3888e-01,
          2.6065e-03, -4.3621e-01,  1.1282e+00,  3.3685e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
181000 loss tensor(0.0657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7405,  1.5217,  0.4382,  3.0548,  0.6583, -0.5778, -0.2891,  1.2771,
          0.8584,  0.3407,  0.0288,  1.0914,  0.8868,  2.6122,  0.5349,  0.1957,
         -0.0787,  0.5140,  1.5576,  0.0246,  0.8533,  0.2416, -0.0870,  0.6352,
          0.2981,  1.2075, -0.0266,  1.4775,  0.2656,  0.6708,  1.6394,  2.5318,
          0.5364,  0.2357,  0.1125,  1.2707,  0.6858,  0.2922,  0.7113,  0.0296,
          1.0516,  0.3918,  0.6656,  1.1814, -0.4381,  0.0035, -0.4370,  1.1265,
          0.3357]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
182000 loss tensor(0.0670, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7409,  1.5219,  0.4375,  3.0519,  0.6560, -0.5757, -0.2894,  1.2761,
          0.8581,  0.3404,  0.0290,  1.0917,  0.8872,  2.6117,  0.5346,  0.1948,
         -0.0779,  0.5130,  1.5579,  0.0257,  0.8537,  0.2412, -0.0874,  0.6349,
          0.2980,  1.2049, -0.0256,  1.4773,  0.2655,  0.6703,  1.6400,  2.5313,
          0.5374,  0.2348,  0.1136,  1.2702,  0.6862,  0.2920,  0.7113,  0.0305,
          1.0517,  0.3906,  0.6659,  1.1800, -0.4374,  0.0036, -0.4365,  1.1264,
          0.3359]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
183000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0377, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7425,  1.5216,  0.4387,  3.0483,  0.6548, -0.5756, -0.2893,  1.2751,
          0.8572,  0.3407,  0.0288,  1.0913,  0.8864,  2.6108,  0.5350,  0.1944,
         -0.0778,  0.5124,  1.5567,  0.0250,  0.8533,  0.2416, -0.0876,  0.6354,
          0.2979,  1.2042, -0.0256,  1.4773,  0.2655,  0.6700,  1.6401,  2.5305,
          0.5369,  0.2352,  0.1137,  1.2695,  0.6865,  0.2922,  0.7112,  0.0307,
          1.0515,  0.3904,  0.6658,  1.1792, -0.4372,  0.0035, -0.4356,  1.1257,
          0.3361]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
184000 loss tensor(0.0673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7418e+00,  1.5193e+00,  4.3889e-01,  3.0438e+00,  6.5223e-01,
         -5.7631e-01, -2.8939e-01,  1.2718e+00,  8.5646e-01,  3.3993e-01,
          2.6324e-02,  1.0903e+00,  8.8461e-01,  2.6091e+00,  5.3525e-01,
          1.9545e-01, -7.7338e-02,  5.1325e-01,  1.5562e+00,  2.4598e-02,
          8.5122e-01,  2.4257e-01, -8.5581e-02,  6.3470e-01,  2.9645e-01,
          1.2029e+00, -2.7484e-02,  1.4776e+00,  2.6651e-01,  6.7113e-01,
          1.6392e+00,  2.5285e+00,  5.3558e-01,  2.3511e-01,  1.1273e-01,
          1.2700e+00,  6.8649e-01,  2.9295e-01,  7.1188e-01,  2.9192e-02,
          1.0520e+00,  3.9138e-01,  6.6694e-01,  1.1804e+00, -4.3787e-01,
          2.6445e-03, -4.3498e-01,  1.1247e+00,  3.3694e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
185000 loss tensor(0.0659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7441,  1.5194,  0.4381,  3.0425,  0.6517, -0.5748, -0.2888,  1.2713,
          0.8570,  0.3403,  0.0272,  1.0908,  0.8845,  2.6091,  0.5348,  0.1937,
         -0.0775,  0.5115,  1.5550,  0.0257,  0.8520,  0.2430, -0.0867,  0.6350,
          0.2973,  1.2017, -0.0249,  1.4768,  0.2654,  0.6697,  1.6406,  2.5277,
          0.5365,  0.2350,  0.1143,  1.2687,  0.6862,  0.2919,  0.7110,  0.0304,
          1.0511,  0.3898,  0.6663,  1.1786, -0.4368,  0.0035, -0.4350,  1.1239,
          0.3368]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
186000 loss tensor(0.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0415, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7437e+00,  1.5179e+00,  4.3824e-01,  3.0380e+00,  6.5089e-01,
         -5.7573e-01, -2.8892e-01,  1.2689e+00,  8.5528e-01,  3.3971e-01,
          2.5607e-02,  1.0897e+00,  8.8362e-01,  2.6075e+00,  5.3482e-01,
          1.9501e-01, -7.7246e-02,  5.1180e-01,  1.5545e+00,  2.5207e-02,
          8.5036e-01,  2.4394e-01, -8.5115e-02,  6.3491e-01,  2.9617e-01,
          1.2009e+00, -2.5788e-02,  1.4769e+00,  2.6663e-01,  6.7086e-01,
          1.6395e+00,  2.5253e+00,  5.3490e-01,  2.3463e-01,  1.1300e-01,
          1.2694e+00,  6.8638e-01,  2.9362e-01,  7.1163e-01,  2.9630e-02,
          1.0516e+00,  3.9036e-01,  6.6693e-01,  1.1793e+00, -4.3750e-01,
          2.4477e-03, -4.3471e-01,  1.1245e+00,  3.3688e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
187000 loss tensor(0.0731, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7455e+00,  1.5175e+00,  4.3871e-01,  3.0364e+00,  6.4952e-01,
         -5.7490e-01, -2.8966e-01,  1.2670e+00,  8.5502e-01,  3.3932e-01,
          2.5765e-02,  1.0898e+00,  8.8472e-01,  2.6067e+00,  5.3467e-01,
          1.9423e-01, -7.6449e-02,  5.1098e-01,  1.5554e+00,  2.5980e-02,
          8.4955e-01,  2.4280e-01, -8.5431e-02,  6.3477e-01,  2.9608e-01,
          1.1987e+00, -2.4980e-02,  1.4766e+00,  2.6638e-01,  6.7039e-01,
          1.6384e+00,  2.5248e+00,  5.3549e-01,  2.3385e-01,  1.1369e-01,
          1.2692e+00,  6.8706e-01,  2.9268e-01,  7.1208e-01,  3.0024e-02,
          1.0513e+00,  3.8937e-01,  6.6778e-01,  1.1779e+00, -4.3694e-01,
          2.8203e-03, -4.3435e-01,  1.1245e+00,  3.3699e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
188000 loss tensor(0.0767, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0419, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7476e+00,  1.5174e+00,  4.3959e-01,  3.0348e+00,  6.4797e-01,
         -5.7475e-01, -2.8860e-01,  1.2652e+00,  8.5604e-01,  3.4000e-01,
          2.4835e-02,  1.0908e+00,  8.8253e-01,  2.6061e+00,  5.3457e-01,
          1.9426e-01, -7.7184e-02,  5.1070e-01,  1.5549e+00,  2.7287e-02,
          8.4957e-01,  2.4526e-01, -8.4619e-02,  6.3600e-01,  2.9668e-01,
          1.1990e+00, -2.5528e-02,  1.4763e+00,  2.6617e-01,  6.7014e-01,
          1.6392e+00,  2.5244e+00,  5.3363e-01,  2.3445e-01,  1.1278e-01,
          1.2676e+00,  6.8580e-01,  2.9212e-01,  7.1085e-01,  2.8502e-02,
          1.0503e+00,  3.8992e-01,  6.6697e-01,  1.1774e+00, -4.3632e-01,
          2.9569e-03, -4.3418e-01,  1.1229e+00,  3.3754e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
189000 loss tensor(0.0790, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0439, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7474,  1.5173,  0.4390,  3.0307,  0.6482, -0.5734, -0.2881,  1.2650,
          0.8549,  0.3402,  0.0258,  1.0909,  0.8821,  2.6061,  0.5331,  0.1928,
         -0.0775,  0.5090,  1.5549,  0.0270,  0.8507,  0.2460, -0.0856,  0.6364,
          0.2968,  1.1979, -0.0239,  1.4752,  0.2655,  0.6693,  1.6393,  2.5233,
          0.5351,  0.2346,  0.1141,  1.2663,  0.6855,  0.2920,  0.7106,  0.0305,
          1.0500,  0.3888,  0.6668,  1.1768, -0.4357,  0.0039, -0.4348,  1.1235,
          0.3360]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
190000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7491e+00,  1.5163e+00,  4.3967e-01,  3.0283e+00,  6.4633e-01,
         -5.7401e-01, -2.8820e-01,  1.2620e+00,  8.5394e-01,  3.3955e-01,
          2.3387e-02,  1.0898e+00,  8.8151e-01,  2.6044e+00,  5.3428e-01,
          1.9403e-01, -7.7000e-02,  5.0970e-01,  1.5531e+00,  2.8108e-02,
          8.4858e-01,  2.4590e-01, -8.4011e-02,  6.3601e-01,  2.9616e-01,
          1.1965e+00, -2.5617e-02,  1.4759e+00,  2.6651e-01,  6.7026e-01,
          1.6384e+00,  2.5217e+00,  5.3331e-01,  2.3465e-01,  1.1323e-01,
          1.2674e+00,  6.8601e-01,  2.9280e-01,  7.1127e-01,  2.9030e-02,
          1.0505e+00,  3.8951e-01,  6.6769e-01,  1.1768e+00, -4.3630e-01,
          2.6187e-03, -4.3357e-01,  1.1221e+00,  3.3723e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
191000 loss tensor(0.0696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0362, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7494,  1.5162,  0.4407,  3.0259,  0.6465, -0.5724, -0.2880,  1.2616,
          0.8543,  0.3401,  0.0246,  1.0903,  0.8818,  2.6045,  0.5326,  0.1921,
         -0.0770,  0.5081,  1.5531,  0.0282,  0.8491,  0.2469, -0.0854,  0.6364,
          0.2966,  1.1963, -0.0239,  1.4747,  0.2653,  0.6689,  1.6404,  2.5211,
          0.5343,  0.2351,  0.1148,  1.2661,  0.6857,  0.2918,  0.7111,  0.0303,
          1.0493,  0.3879,  0.6676,  1.1747, -0.4349,  0.0037, -0.4343,  1.1223,
          0.3355]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
192000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7499,  1.5150,  0.4411,  3.0222,  0.6455, -0.5728, -0.2889,  1.2593,
          0.8532,  0.3394,  0.0235,  1.0892,  0.8815,  2.6039,  0.5328,  0.1929,
         -0.0760,  0.5086,  1.5518,  0.0276,  0.8473,  0.2467, -0.0843,  0.6353,
          0.2953,  1.1943, -0.0242,  1.4742,  0.2657,  0.6689,  1.6388,  2.5182,
          0.5333,  0.2342,  0.1139,  1.2667,  0.6866,  0.2930,  0.7119,  0.0299,
          1.0500,  0.3882,  0.6685,  1.1751, -0.4350,  0.0034, -0.4340,  1.1224,
          0.3353]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
193000 loss tensor(0.0775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0427, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7515e+00,  1.5137e+00,  4.4003e-01,  3.0198e+00,  6.4408e-01,
         -5.7273e-01, -2.8795e-01,  1.2575e+00,  8.5274e-01,  3.3918e-01,
          2.2422e-02,  1.0891e+00,  8.8039e-01,  2.6020e+00,  5.3327e-01,
          1.9317e-01, -7.6321e-02,  5.0830e-01,  1.5509e+00,  2.8591e-02,
          8.4715e-01,  2.4734e-01, -8.3577e-02,  6.3551e-01,  2.9544e-01,
          1.1936e+00, -2.4373e-02,  1.4752e+00,  2.6672e-01,  6.6925e-01,
          1.6395e+00,  2.5176e+00,  5.3249e-01,  2.3465e-01,  1.1388e-01,
          1.2666e+00,  6.8670e-01,  2.9286e-01,  7.1195e-01,  2.9170e-02,
          1.0501e+00,  3.8810e-01,  6.6899e-01,  1.1747e+00, -4.3576e-01,
          2.2200e-03, -4.3294e-01,  1.1212e+00,  3.3704e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
194000 loss tensor(0.0774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0426, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7521e+00,  1.5132e+00,  4.4081e-01,  3.0174e+00,  6.4242e-01,
         -5.7234e-01, -2.8870e-01,  1.2557e+00,  8.5224e-01,  3.3935e-01,
          2.1866e-02,  1.0889e+00,  8.8053e-01,  2.6011e+00,  5.3326e-01,
          1.9257e-01, -7.5861e-02,  5.0760e-01,  1.5511e+00,  2.8830e-02,
          8.4604e-01,  2.4791e-01, -8.3652e-02,  6.3586e-01,  2.9448e-01,
          1.1922e+00, -2.4506e-02,  1.4749e+00,  2.6645e-01,  6.6933e-01,
          1.6389e+00,  2.5171e+00,  5.3279e-01,  2.3442e-01,  1.1419e-01,
          1.2662e+00,  6.8628e-01,  2.9277e-01,  7.1175e-01,  2.9138e-02,
          1.0494e+00,  3.8737e-01,  6.6931e-01,  1.1735e+00, -4.3509e-01,
          2.8084e-03, -4.3243e-01,  1.1214e+00,  3.3669e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
195000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0367, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7557,  1.5145,  0.4422,  3.0156,  0.6415, -0.5719, -0.2865,  1.2546,
          0.8530,  0.3405,  0.0211,  1.0904,  0.8790,  2.6016,  0.5320,  0.1919,
         -0.0776,  0.5068,  1.5499,  0.0300,  0.8464,  0.2495, -0.0836,  0.6366,
          0.2962,  1.1920, -0.0238,  1.4734,  0.2654,  0.6682,  1.6403,  2.5171,
          0.5325,  0.2358,  0.1148,  1.2648,  0.6855,  0.2918,  0.7104,  0.0293,
          1.0482,  0.3879,  0.6683,  1.1728, -0.4334,  0.0036, -0.4334,  1.1198,
          0.3363]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
196000 loss tensor(0.0770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0420, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7540,  1.5131,  0.4430,  3.0120,  0.6410, -0.5712, -0.2869,  1.2530,
          0.8526,  0.3403,  0.0207,  1.0901,  0.8780,  2.6005,  0.5320,  0.1918,
         -0.0775,  0.5059,  1.5491,  0.0302,  0.8462,  0.2508, -0.0833,  0.6370,
          0.2957,  1.1919, -0.0238,  1.4733,  0.2656,  0.6681,  1.6403,  2.5154,
          0.5323,  0.2359,  0.1144,  1.2642,  0.6846,  0.2925,  0.7108,  0.0290,
          1.0477,  0.3873,  0.6683,  1.1727, -0.4334,  0.0038, -0.4328,  1.1191,
          0.3357]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
197000 loss tensor(0.0686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7561e+00,  1.5118e+00,  4.4272e-01,  3.0096e+00,  6.4009e-01,
         -5.7214e-01, -2.8773e-01,  1.2514e+00,  8.5114e-01,  3.3974e-01,
          1.9529e-02,  1.0892e+00,  8.7709e-01,  2.5989e+00,  5.3279e-01,
          1.9226e-01, -7.6357e-02,  5.0564e-01,  1.5477e+00,  2.9088e-02,
          8.4558e-01,  2.5018e-01, -8.2296e-02,  6.3560e-01,  2.9398e-01,
          1.1898e+00, -2.4488e-02,  1.4740e+00,  2.6656e-01,  6.6871e-01,
          1.6398e+00,  2.5133e+00,  5.3137e-01,  2.3492e-01,  1.1454e-01,
          1.2644e+00,  6.8602e-01,  2.9324e-01,  7.1131e-01,  2.8623e-02,
          1.0490e+00,  3.8801e-01,  6.6948e-01,  1.1732e+00, -4.3461e-01,
          2.3796e-03, -4.3190e-01,  1.1189e+00,  3.3686e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
198000 loss tensor(0.0779, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0426, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7556e+00,  1.5113e+00,  4.4271e-01,  3.0057e+00,  6.3814e-01,
         -5.7177e-01, -2.8802e-01,  1.2493e+00,  8.5086e-01,  3.3908e-01,
          1.8845e-02,  1.0887e+00,  8.7635e-01,  2.5976e+00,  5.3233e-01,
          1.9204e-01, -7.6351e-02,  5.0542e-01,  1.5476e+00,  2.9726e-02,
          8.4398e-01,  2.5114e-01, -8.2189e-02,  6.3578e-01,  2.9360e-01,
          1.1889e+00, -2.3993e-02,  1.4739e+00,  2.6664e-01,  6.6881e-01,
          1.6386e+00,  2.5129e+00,  5.3103e-01,  2.3510e-01,  1.1445e-01,
          1.2642e+00,  6.8541e-01,  2.9300e-01,  7.1159e-01,  2.8546e-02,
          1.0486e+00,  3.8689e-01,  6.6964e-01,  1.1722e+00, -4.3413e-01,
          2.4838e-03, -4.3138e-01,  1.1182e+00,  3.3706e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
199000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7575,  1.5115,  0.4415,  3.0037,  0.6374, -0.5702, -0.2874,  1.2492,
          0.8513,  0.3401,  0.0198,  1.0897,  0.8767,  2.5982,  0.5312,  0.1906,
         -0.0764,  0.5038,  1.5485,  0.0309,  0.8445,  0.2519, -0.0834,  0.6367,
          0.2949,  1.1877, -0.0232,  1.4726,  0.2656,  0.6678,  1.6406,  2.5119,
          0.5320,  0.2349,  0.1158,  1.2624,  0.6849,  0.2923,  0.7107,  0.0302,
          1.0478,  0.3856,  0.6692,  1.1706, -0.4329,  0.0037, -0.4322,  1.1179,
          0.3359]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
200000 loss tensor(0.0733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7589e+00,  1.5102e+00,  4.4396e-01,  3.0011e+00,  6.3581e-01,
         -5.7091e-01, -2.8734e-01,  1.2461e+00,  8.5036e-01,  3.3954e-01,
          1.7930e-02,  1.0889e+00,  8.7620e-01,  2.5964e+00,  5.3264e-01,
          1.9175e-01, -7.6282e-02,  5.0427e-01,  1.5480e+00,  3.2148e-02,
          8.4313e-01,  2.5152e-01, -8.1738e-02,  6.3666e-01,  2.9410e-01,
          1.1866e+00, -2.4587e-02,  1.4736e+00,  2.6654e-01,  6.6857e-01,
          1.6401e+00,  2.5100e+00,  5.3042e-01,  2.3467e-01,  1.1484e-01,
          1.2634e+00,  6.8515e-01,  2.9267e-01,  7.1077e-01,  2.8642e-02,
          1.0478e+00,  3.8689e-01,  6.6951e-01,  1.1707e+00, -4.3350e-01,
          2.3956e-03, -4.3085e-01,  1.1171e+00,  3.3733e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
201000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7591e+00,  1.5089e+00,  4.4260e-01,  2.9985e+00,  6.3642e-01,
         -5.7032e-01, -2.8782e-01,  1.2444e+00,  8.4955e-01,  3.3871e-01,
          1.7802e-02,  1.0882e+00,  8.7616e-01,  2.5956e+00,  5.3176e-01,
          1.9100e-01, -7.5549e-02,  5.0394e-01,  1.5464e+00,  3.0847e-02,
          8.4325e-01,  2.5175e-01, -8.2049e-02,  6.3603e-01,  2.9319e-01,
          1.1851e+00, -2.1908e-02,  1.4732e+00,  2.6659e-01,  6.6763e-01,
          1.6396e+00,  2.5085e+00,  5.3098e-01,  2.3440e-01,  1.1511e-01,
          1.2628e+00,  6.8571e-01,  2.9284e-01,  7.1227e-01,  2.9291e-02,
          1.0482e+00,  3.8497e-01,  6.7042e-01,  1.1701e+00, -4.3344e-01,
          2.5727e-03, -4.3081e-01,  1.1173e+00,  3.3709e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
202000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7598,  1.5107,  0.4450,  2.9959,  0.6342, -0.5697, -0.2859,  1.2436,
          0.8502,  0.3402,  0.0171,  1.0895,  0.8744,  2.5963,  0.5310,  0.1904,
         -0.0774,  0.5026,  1.5472,  0.0326,  0.8434,  0.2540, -0.0817,  0.6379,
          0.2943,  1.1863, -0.0239,  1.4719,  0.2654,  0.6672,  1.6408,  2.5079,
          0.5305,  0.2360,  0.1155,  1.2618,  0.6843,  0.2922,  0.7105,  0.0289,
          1.0466,  0.3857,  0.6693,  1.1693, -0.4315,  0.0036, -0.4317,  1.1171,
          0.3358]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
203000 loss tensor(0.0737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7618,  1.5089,  0.4449,  2.9947,  0.6339, -0.5697, -0.2864,  1.2422,
          0.8497,  0.3399,  0.0162,  1.0891,  0.8737,  2.5950,  0.5306,  0.1901,
         -0.0771,  0.5020,  1.5454,  0.0319,  0.8430,  0.2547, -0.0816,  0.6375,
          0.2938,  1.1854, -0.0228,  1.4716,  0.2655,  0.6671,  1.6405,  2.5077,
          0.5298,  0.2359,  0.1154,  1.2611,  0.6842,  0.2924,  0.7105,  0.0288,
          1.0460,  0.3851,  0.6693,  1.1686, -0.4318,  0.0035, -0.4315,  1.1159,
          0.3366]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
204000 loss tensor(0.0732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0382, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7623,  1.5075,  0.4432,  2.9921,  0.6337, -0.5686, -0.2867,  1.2408,
          0.8495,  0.3398,  0.0169,  1.0888,  0.8746,  2.5943,  0.5305,  0.1894,
         -0.0763,  0.5012,  1.5454,  0.0323,  0.8425,  0.2544, -0.0821,  0.6379,
          0.2939,  1.1834, -0.0218,  1.4713,  0.2655,  0.6665,  1.6400,  2.5059,
          0.5301,  0.2353,  0.1164,  1.2608,  0.6843,  0.2919,  0.7106,  0.0296,
          1.0461,  0.3832,  0.6697,  1.1672, -0.4317,  0.0033, -0.4314,  1.1162,
          0.3362]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
205000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7620e+00,  1.5063e+00,  4.4448e-01,  2.9883e+00,  6.3129e-01,
         -5.6888e-01, -2.8717e-01,  1.2383e+00,  8.4777e-01,  3.3881e-01,
          1.4977e-02,  1.0881e+00,  8.7370e-01,  2.5927e+00,  5.3106e-01,
          1.9022e-01, -7.5389e-02,  5.0174e-01,  1.5444e+00,  3.1799e-02,
          8.4094e-01,  2.5389e-01, -8.0712e-02,  6.3649e-01,  2.9248e-01,
          1.1819e+00, -2.3349e-02,  1.4721e+00,  2.6667e-01,  6.6744e-01,
          1.6395e+00,  2.5040e+00,  5.2908e-01,  2.3467e-01,  1.1536e-01,
          1.2614e+00,  6.8560e-01,  2.9298e-01,  7.1184e-01,  2.8785e-02,
          1.0470e+00,  3.8444e-01,  6.7104e-01,  1.1680e+00, -4.3204e-01,
          2.4289e-03, -4.3025e-01,  1.1152e+00,  3.3665e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
206000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0350, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7626,  1.5070,  0.4453,  2.9839,  0.6313, -0.5677, -0.2869,  1.2378,
          0.8483,  0.3389,  0.0162,  1.0881,  0.8722,  2.5930,  0.5300,  0.1887,
         -0.0758,  0.5000,  1.5441,  0.0317,  0.8413,  0.2548, -0.0817,  0.6369,
          0.2929,  1.1812, -0.0223,  1.4703,  0.2656,  0.6661,  1.6401,  2.5029,
          0.5305,  0.2349,  0.1166,  1.2601,  0.6852,  0.2922,  0.7115,  0.0301,
          1.0465,  0.3846,  0.6708,  1.1675, -0.4305,  0.0034, -0.4307,  1.1145,
          0.3358]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
207000 loss tensor(0.0719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0379, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7648e+00,  1.5059e+00,  4.4543e-01,  2.9830e+00,  6.2869e-01,
         -5.6835e-01, -2.8703e-01,  1.2350e+00,  8.4768e-01,  3.3955e-01,
          1.3723e-02,  1.0884e+00,  8.7268e-01,  2.5916e+00,  5.3129e-01,
          1.8967e-01, -7.5906e-02,  5.0051e-01,  1.5439e+00,  3.3580e-02,
          8.3968e-01,  2.5593e-01, -8.0349e-02,  6.3748e-01,  2.9232e-01,
          1.1796e+00, -2.2814e-02,  1.4717e+00,  2.6639e-01,  6.6792e-01,
          1.6396e+00,  2.5015e+00,  5.2831e-01,  2.3534e-01,  1.1544e-01,
          1.2603e+00,  6.8441e-01,  2.9263e-01,  7.1097e-01,  2.8292e-02,
          1.0460e+00,  3.8313e-01,  6.7061e-01,  1.1665e+00, -4.3132e-01,
          2.5578e-03, -4.2936e-01,  1.1148e+00,  3.3749e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
208000 loss tensor(0.0735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0406, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7643e+00,  1.5047e+00,  4.4519e-01,  2.9788e+00,  6.2837e-01,
         -5.6756e-01, -2.8739e-01,  1.2335e+00,  8.4658e-01,  3.3857e-01,
          1.3814e-02,  1.0874e+00,  8.7196e-01,  2.5905e+00,  5.3086e-01,
          1.8908e-01, -7.4826e-02,  4.9975e-01,  1.5437e+00,  3.2850e-02,
          8.3888e-01,  2.5541e-01, -8.0344e-02,  6.3752e-01,  2.9178e-01,
          1.1775e+00, -2.2467e-02,  1.4713e+00,  2.6656e-01,  6.6684e-01,
          1.6401e+00,  2.5002e+00,  5.2927e-01,  2.3420e-01,  1.1587e-01,
          1.2603e+00,  6.8507e-01,  2.9277e-01,  7.1170e-01,  2.9386e-02,
          1.0467e+00,  3.8271e-01,  6.7181e-01,  1.1667e+00, -4.3081e-01,
          2.6115e-03, -4.2901e-01,  1.1139e+00,  3.3693e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
209000 loss tensor(0.0634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7667e+00,  1.5049e+00,  4.4740e-01,  2.9784e+00,  6.2635e-01,
         -5.6793e-01, -2.8659e-01,  1.2318e+00,  8.4727e-01,  3.3978e-01,
          1.2792e-02,  1.0884e+00,  8.7025e-01,  2.5889e+00,  5.3083e-01,
          1.8926e-01, -7.5729e-02,  4.9927e-01,  1.5434e+00,  3.4704e-02,
          8.3845e-01,  2.5657e-01, -7.9751e-02,  6.3789e-01,  2.9293e-01,
          1.1785e+00, -2.2950e-02,  1.4713e+00,  2.6660e-01,  6.6667e-01,
          1.6405e+00,  2.5006e+00,  5.2781e-01,  2.3468e-01,  1.1553e-01,
          1.2591e+00,  6.8386e-01,  2.9249e-01,  7.1066e-01,  2.8268e-02,
          1.0452e+00,  3.8336e-01,  6.7061e-01,  1.1656e+00, -4.3037e-01,
          2.5930e-03, -4.2847e-01,  1.1127e+00,  3.3739e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
210000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0372, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7676,  1.5042,  0.4474,  2.9747,  0.6270, -0.5666, -0.2867,  1.2320,
          0.8470,  0.3395,  0.0135,  1.0884,  0.8707,  2.5896,  0.5294,  0.1877,
         -0.0758,  0.4975,  1.5425,  0.0346,  0.8400,  0.2577, -0.0809,  0.6386,
          0.2926,  1.1777, -0.0213,  1.4701,  0.2653,  0.6657,  1.6406,  2.4995,
          0.5283,  0.2351,  0.1171,  1.2581,  0.6838,  0.2916,  0.7108,  0.0297,
          1.0451,  0.3815,  0.6707,  1.1641, -0.4296,  0.0038, -0.4294,  1.1124,
          0.3362]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
211000 loss tensor(0.0622, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7662e+00,  1.5034e+00,  4.4739e-01,  2.9712e+00,  6.2568e-01,
         -5.6657e-01, -2.8768e-01,  1.2288e+00,  8.4527e-01,  3.3814e-01,
          1.2196e-02,  1.0870e+00,  8.7016e-01,  2.5883e+00,  5.3040e-01,
          1.8865e-01, -7.4683e-02,  4.9818e-01,  1.5421e+00,  3.4481e-02,
          8.3792e-01,  2.5646e-01, -7.9646e-02,  6.3772e-01,  2.9142e-01,
          1.1756e+00, -2.1698e-02,  1.4706e+00,  2.6646e-01,  6.6630e-01,
          1.6403e+00,  2.4972e+00,  5.2799e-01,  2.3389e-01,  1.1626e-01,
          1.2591e+00,  6.8539e-01,  2.9300e-01,  7.1191e-01,  2.9405e-02,
          1.0458e+00,  3.8187e-01,  6.7220e-01,  1.1648e+00, -4.3035e-01,
          2.4142e-03, -4.2843e-01,  1.1132e+00,  3.3702e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
212000 loss tensor(0.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7688,  1.5033,  0.4486,  2.9700,  0.6251, -0.5665, -0.2858,  1.2285,
          0.8459,  0.3398,  0.0117,  1.0884,  0.8684,  2.5878,  0.5286,  0.1875,
         -0.0765,  0.4965,  1.5411,  0.0346,  0.8376,  0.2595, -0.0798,  0.6391,
          0.2925,  1.1765, -0.0225,  1.4694,  0.2655,  0.6656,  1.6402,  2.4980,
          0.5277,  0.2362,  0.1170,  1.2572,  0.6832,  0.2925,  0.7108,  0.0288,
          1.0442,  0.3817,  0.6706,  1.1642, -0.4293,  0.0034, -0.4295,  1.1119,
          0.3362]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
213000 loss tensor(0.0764, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0417, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7682e+00,  1.5023e+00,  4.4874e-01,  2.9667e+00,  6.2354e-01,
         -5.6656e-01, -2.8728e-01,  1.2257e+00,  8.4498e-01,  3.3939e-01,
          1.0161e-02,  1.0877e+00,  8.6767e-01,  2.5868e+00,  5.2973e-01,
          1.8824e-01, -7.5098e-02,  4.9726e-01,  1.5396e+00,  3.4424e-02,
          8.3687e-01,  2.5837e-01, -7.8833e-02,  6.3804e-01,  2.9123e-01,
          1.1741e+00, -2.2938e-02,  1.4700e+00,  2.6646e-01,  6.6660e-01,
          1.6399e+00,  2.4951e+00,  5.2700e-01,  2.3483e-01,  1.1589e-01,
          1.2580e+00,  6.8450e-01,  2.9314e-01,  7.1172e-01,  2.8515e-02,
          1.0452e+00,  3.8250e-01,  6.7213e-01,  1.1643e+00, -4.2973e-01,
          2.7798e-03, -4.2851e-01,  1.1104e+00,  3.3766e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
214000 loss tensor(0.0666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7700,  1.5016,  0.4503,  2.9652,  0.6219, -0.5666, -0.2862,  1.2241,
          0.8456,  0.3392,  0.0091,  1.0878,  0.8673,  2.5855,  0.5299,  0.1877,
         -0.0761,  0.4966,  1.5411,  0.0361,  0.8366,  0.2599, -0.0787,  0.6387,
          0.2917,  1.1746, -0.0219,  1.4700,  0.2662,  0.6658,  1.6419,  2.4946,
          0.5265,  0.2354,  0.1162,  1.2569,  0.6831,  0.2919,  0.7105,  0.0280,
          1.0440,  0.3816,  0.6708,  1.1629, -0.4290,  0.0030, -0.4276,  1.1108,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
215000 loss tensor(0.0679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7710e+00,  1.5009e+00,  4.4967e-01,  2.9623e+00,  6.2133e-01,
         -5.6651e-01, -2.8659e-01,  1.2226e+00,  8.4372e-01,  3.3870e-01,
          9.3706e-03,  1.0869e+00,  8.6677e-01,  2.5849e+00,  5.2980e-01,
          1.8803e-01, -7.5332e-02,  4.9588e-01,  1.5393e+00,  3.6067e-02,
          8.3507e-01,  2.5951e-01, -7.8405e-02,  6.3901e-01,  2.9155e-01,
          1.1725e+00, -2.2646e-02,  1.4694e+00,  2.6650e-01,  6.6589e-01,
          1.6402e+00,  2.4930e+00,  5.2583e-01,  2.3477e-01,  1.1661e-01,
          1.2577e+00,  6.8420e-01,  2.9340e-01,  7.1143e-01,  2.8113e-02,
          1.0444e+00,  3.8144e-01,  6.7208e-01,  1.1629e+00, -4.2913e-01,
          2.6747e-03, -4.2786e-01,  1.1116e+00,  3.3694e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
216000 loss tensor(0.0645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7707e+00,  1.4989e+00,  4.4982e-01,  2.9591e+00,  6.2121e-01,
         -5.6644e-01, -2.8660e-01,  1.2208e+00,  8.4330e-01,  3.3839e-01,
          8.4223e-03,  1.0868e+00,  8.6640e-01,  2.5839e+00,  5.2952e-01,
          1.8776e-01, -7.5287e-02,  4.9554e-01,  1.5385e+00,  3.5641e-02,
          8.3550e-01,  2.5974e-01, -7.8131e-02,  6.3822e-01,  2.9090e-01,
          1.1715e+00, -2.2706e-02,  1.4695e+00,  2.6669e-01,  6.6582e-01,
          1.6396e+00,  2.4918e+00,  5.2612e-01,  2.3510e-01,  1.1660e-01,
          1.2576e+00,  6.8410e-01,  2.9323e-01,  7.1177e-01,  2.8697e-02,
          1.0444e+00,  3.8136e-01,  6.7256e-01,  1.1622e+00, -4.2909e-01,
          2.3207e-03, -4.2744e-01,  1.1101e+00,  3.3729e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
217000 loss tensor(0.0790, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0435, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7713,  1.4984,  0.4502,  2.9563,  0.6208, -0.5641, -0.2862,  1.2205,
          0.8436,  0.3378,  0.0095,  1.0871,  0.8653,  2.5850,  0.5282,  0.1861,
         -0.0751,  0.4939,  1.5369,  0.0349,  0.8349,  0.2609, -0.0793,  0.6385,
          0.2906,  1.1709, -0.0218,  1.4677,  0.2656,  0.6643,  1.6402,  2.4907,
          0.5275,  0.2353,  0.1178,  1.2559,  0.6842,  0.2924,  0.7121,  0.0300,
          1.0443,  0.3808,  0.6723,  1.1621, -0.4279,  0.0036, -0.4284,  1.1095,
          0.3358]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
218000 loss tensor(0.0618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7712e+00,  1.4977e+00,  4.4956e-01,  2.9530e+00,  6.1856e-01,
         -5.6538e-01, -2.8719e-01,  1.2179e+00,  8.4264e-01,  3.3745e-01,
          7.2647e-03,  1.0862e+00,  8.6570e-01,  2.5823e+00,  5.2908e-01,
          1.8679e-01, -7.4302e-02,  4.9461e-01,  1.5380e+00,  3.5811e-02,
          8.3433e-01,  2.6032e-01, -7.8113e-02,  6.3848e-01,  2.8981e-01,
          1.1689e+00, -2.1526e-02,  1.4690e+00,  2.6658e-01,  6.6567e-01,
          1.6407e+00,  2.4896e+00,  5.2630e-01,  2.3426e-01,  1.1698e-01,
          1.2562e+00,  6.8411e-01,  2.9248e-01,  7.1197e-01,  2.9013e-02,
          1.0446e+00,  3.7923e-01,  6.7288e-01,  1.1612e+00, -4.2836e-01,
          2.4478e-03, -4.2663e-01,  1.1097e+00,  3.3740e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
219000 loss tensor(0.0765, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0420, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7728e+00,  1.4973e+00,  4.5125e-01,  2.9509e+00,  6.1706e-01,
         -5.6527e-01, -2.8642e-01,  1.2161e+00,  8.4270e-01,  3.3815e-01,
          6.1117e-03,  1.0865e+00,  8.6429e-01,  2.5820e+00,  5.2888e-01,
          1.8700e-01, -7.4978e-02,  4.9393e-01,  1.5364e+00,  3.5833e-02,
          8.3414e-01,  2.6181e-01, -7.7377e-02,  6.3828e-01,  2.9008e-01,
          1.1689e+00, -2.2696e-02,  1.4684e+00,  2.6641e-01,  6.6531e-01,
          1.6398e+00,  2.4885e+00,  5.2553e-01,  2.3514e-01,  1.1697e-01,
          1.2559e+00,  6.8408e-01,  2.9263e-01,  7.1204e-01,  2.8511e-02,
          1.0441e+00,  3.8071e-01,  6.7282e-01,  1.1612e+00, -4.2784e-01,
          2.6253e-03, -4.2659e-01,  1.1077e+00,  3.3724e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
220000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7734e+00,  1.4969e+00,  4.5139e-01,  2.9474e+00,  6.1664e-01,
         -5.6518e-01, -2.8659e-01,  1.2149e+00,  8.4209e-01,  3.3837e-01,
          5.7223e-03,  1.0863e+00,  8.6349e-01,  2.5809e+00,  5.2861e-01,
          1.8676e-01, -7.5076e-02,  4.9345e-01,  1.5362e+00,  3.5957e-02,
          8.3384e-01,  2.6238e-01, -7.7169e-02,  6.3885e-01,  2.8923e-01,
          1.1683e+00, -2.2194e-02,  1.4683e+00,  2.6648e-01,  6.6540e-01,
          1.6411e+00,  2.4871e+00,  5.2489e-01,  2.3527e-01,  1.1668e-01,
          1.2553e+00,  6.8334e-01,  2.9252e-01,  7.1176e-01,  2.8045e-02,
          1.0436e+00,  3.8001e-01,  6.7281e-01,  1.1606e+00, -4.2771e-01,
          2.3495e-03, -4.2649e-01,  1.1071e+00,  3.3729e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
221000 loss tensor(0.0753, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0416, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7758e+00,  1.4967e+00,  4.5150e-01,  2.9456e+00,  6.1513e-01,
         -5.6476e-01, -2.8614e-01,  1.2135e+00,  8.4239e-01,  3.3854e-01,
          5.2879e-03,  1.0869e+00,  8.6328e-01,  2.5795e+00,  5.2851e-01,
          1.8619e-01, -7.5358e-02,  4.9274e-01,  1.5375e+00,  3.7361e-02,
          8.3335e-01,  2.6277e-01, -7.7124e-02,  6.3980e-01,  2.8955e-01,
          1.1667e+00, -2.1290e-02,  1.4683e+00,  2.6646e-01,  6.6501e-01,
          1.6402e+00,  2.4871e+00,  5.2448e-01,  2.3495e-01,  1.1697e-01,
          1.2541e+00,  6.8274e-01,  2.9162e-01,  7.1091e-01,  2.8314e-02,
          1.0429e+00,  3.7925e-01,  6.7237e-01,  1.1596e+00, -4.2747e-01,
          2.6918e-03, -4.2585e-01,  1.1070e+00,  3.3773e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
222000 loss tensor(0.0744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7760,  1.4967,  0.4517,  2.9440,  0.6148, -0.5632, -0.2859,  1.2135,
          0.8420,  0.3389,  0.0062,  1.0873,  0.8637,  2.5804,  0.5270,  0.1851,
         -0.0753,  0.4911,  1.5358,  0.0377,  0.8333,  0.2633, -0.0781,  0.6397,
          0.2909,  1.1661, -0.0208,  1.4670,  0.2652,  0.6638,  1.6413,  2.4861,
          0.5251,  0.2350,  0.1182,  1.2536,  0.6831,  0.2917,  0.7114,  0.0296,
          1.0429,  0.3776,  0.6725,  1.1582, -0.4261,  0.0037, -0.4268,  1.1073,
          0.3368]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
223000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0366, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7756,  1.4953,  0.4520,  2.9413,  0.6155, -0.5631, -0.2861,  1.2118,
          0.8414,  0.3381,  0.0053,  1.0869,  0.8632,  2.5795,  0.5271,  0.1847,
         -0.0750,  0.4907,  1.5355,  0.0371,  0.8329,  0.2640, -0.0779,  0.6406,
          0.2900,  1.1654, -0.0207,  1.4666,  0.2655,  0.6639,  1.6406,  2.4845,
          0.5252,  0.2352,  0.1183,  1.2530,  0.6826,  0.2916,  0.7116,  0.0295,
          1.0425,  0.3773,  0.6723,  1.1577, -0.4265,  0.0036, -0.4269,  1.1071,
          0.3363]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
224000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7772e+00,  1.4932e+00,  4.5389e-01,  2.9379e+00,  6.1301e-01,
         -5.6425e-01, -2.8660e-01,  1.2086e+00,  8.4011e-01,  3.3815e-01,
          3.8438e-03,  1.0861e+00,  8.6169e-01,  2.5776e+00,  5.2776e-01,
          1.8572e-01, -7.4686e-02,  4.9101e-01,  1.5344e+00,  3.6906e-02,
          8.3141e-01,  2.6401e-01, -7.6300e-02,  6.3920e-01,  2.8854e-01,
          1.1651e+00, -2.1553e-02,  1.4675e+00,  2.6666e-01,  6.6517e-01,
          1.6407e+00,  2.4825e+00,  5.2326e-01,  2.3523e-01,  1.1721e-01,
          1.2541e+00,  6.8303e-01,  2.9296e-01,  7.1214e-01,  2.8152e-02,
          1.0427e+00,  3.7834e-01,  6.7376e-01,  1.1586e+00, -4.2691e-01,
          2.3121e-03, -4.2564e-01,  1.1071e+00,  3.3725e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
225000 loss tensor(0.0745, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7772e+00,  1.4927e+00,  4.5318e-01,  2.9342e+00,  6.1226e-01,
         -5.6399e-01, -2.8624e-01,  1.2071e+00,  8.3994e-01,  3.3799e-01,
          2.9876e-03,  1.0859e+00,  8.6104e-01,  2.5771e+00,  5.2822e-01,
          1.8547e-01, -7.4733e-02,  4.9084e-01,  1.5342e+00,  3.6883e-02,
          8.3102e-01,  2.6470e-01, -7.6010e-02,  6.3949e-01,  2.8855e-01,
          1.1635e+00, -2.2286e-02,  1.4675e+00,  2.6665e-01,  6.6466e-01,
          1.6401e+00,  2.4812e+00,  5.2328e-01,  2.3528e-01,  1.1718e-01,
          1.2533e+00,  6.8301e-01,  2.9244e-01,  7.1170e-01,  2.8644e-02,
          1.0424e+00,  3.7842e-01,  6.7358e-01,  1.1585e+00, -4.2663e-01,
          2.2953e-03, -4.2534e-01,  1.1055e+00,  3.3741e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
226000 loss tensor(0.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0415, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7783e+00,  1.4920e+00,  4.5276e-01,  2.9325e+00,  6.1061e-01,
         -5.6354e-01, -2.8682e-01,  1.2058e+00,  8.3985e-01,  3.3750e-01,
          2.6688e-03,  1.0855e+00,  8.6138e-01,  2.5761e+00,  5.2742e-01,
          1.8502e-01, -7.4151e-02,  4.9022e-01,  1.5338e+00,  3.7530e-02,
          8.3092e-01,  2.6497e-01, -7.6173e-02,  6.3932e-01,  2.8807e-01,
          1.1624e+00, -2.0699e-02,  1.4668e+00,  2.6631e-01,  6.6407e-01,
          1.6397e+00,  2.4812e+00,  5.2326e-01,  2.3457e-01,  1.1768e-01,
          1.2530e+00,  6.8316e-01,  2.9216e-01,  7.1231e-01,  2.8651e-02,
          1.0425e+00,  3.7748e-01,  6.7372e-01,  1.1569e+00, -4.2599e-01,
          2.9393e-03, -4.2510e-01,  1.1053e+00,  3.3777e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
227000 loss tensor(0.0744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0407, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7805,  1.4922,  0.4544,  2.9293,  0.6110, -0.5623, -0.2854,  1.2057,
          0.8401,  0.3384,  0.0034,  1.0865,  0.8600,  2.5757,  0.5264,  0.1837,
         -0.0757,  0.4881,  1.5336,  0.0385,  0.8303,  0.2659, -0.0770,  0.6410,
          0.2892,  1.1624, -0.0209,  1.4658,  0.2655,  0.6635,  1.6417,  2.4804,
          0.5236,  0.2360,  0.1186,  1.2516,  0.6818,  0.2916,  0.7109,  0.0293,
          1.0412,  0.3767,  0.6727,  1.1565, -0.4252,  0.0037, -0.4257,  1.1049,
          0.3365]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
228000 loss tensor(0.0677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0353, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7801e+00,  1.4918e+00,  4.5385e-01,  2.9285e+00,  6.0942e-01,
         -5.6190e-01, -2.8634e-01,  1.2036e+00,  8.3981e-01,  3.3824e-01,
          2.4935e-03,  1.0863e+00,  8.6037e-01,  2.5751e+00,  5.2619e-01,
          1.8347e-01, -7.4397e-02,  4.8805e-01,  1.5331e+00,  3.8583e-02,
          8.3108e-01,  2.6599e-01, -7.6878e-02,  6.4088e-01,  2.8946e-01,
          1.1609e+00, -1.9778e-02,  1.4654e+00,  2.6547e-01,  6.6293e-01,
          1.6415e+00,  2.4800e+00,  5.2384e-01,  2.3472e-01,  1.1857e-01,
          1.2514e+00,  6.8242e-01,  2.9145e-01,  7.1144e-01,  2.9402e-02,
          1.0410e+00,  3.7539e-01,  6.7308e-01,  1.1553e+00, -4.2453e-01,
          3.7378e-03, -4.2552e-01,  1.1049e+00,  3.3647e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
229000 loss tensor(0.0718, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7800e+00,  1.4907e+00,  4.5414e-01,  2.9249e+00,  6.0879e-01,
         -5.6266e-01, -2.8672e-01,  1.2014e+00,  8.3797e-01,  3.3708e-01,
          1.1549e-03,  1.0854e+00,  8.5945e-01,  2.5729e+00,  5.2692e-01,
          1.8434e-01, -7.4541e-02,  4.8848e-01,  1.5326e+00,  3.9649e-02,
          8.2913e-01,  2.6692e-01, -7.5682e-02,  6.4194e-01,  2.8768e-01,
          1.1600e+00, -2.0484e-02,  1.4663e+00,  2.6666e-01,  6.6447e-01,
          1.6401e+00,  2.4771e+00,  5.2213e-01,  2.3476e-01,  1.1760e-01,
          1.2513e+00,  6.8208e-01,  2.9276e-01,  7.1233e-01,  2.8553e-02,
          1.0414e+00,  3.7533e-01,  6.7355e-01,  1.1559e+00, -4.2608e-01,
          2.4522e-03, -4.2454e-01,  1.1050e+00,  3.3713e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
230000 loss tensor(0.0746, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0388, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7826e+00,  1.4909e+00,  4.5558e-01,  2.9227e+00,  6.0758e-01,
         -5.6279e-01, -2.8555e-01,  1.2005e+00,  8.3914e-01,  3.3861e-01,
          4.0853e-04,  1.0861e+00,  8.5849e-01,  2.5741e+00,  5.2595e-01,
          1.8341e-01, -7.5696e-02,  4.8714e-01,  1.5307e+00,  3.8542e-02,
          8.2981e-01,  2.6826e-01, -7.5881e-02,  6.4064e-01,  2.8784e-01,
          1.1608e+00, -2.1040e-02,  1.4646e+00,  2.6535e-01,  6.6306e-01,
          1.6410e+00,  2.4765e+00,  5.2215e-01,  2.3647e-01,  1.1865e-01,
          1.2502e+00,  6.8122e-01,  2.9137e-01,  7.1143e-01,  2.8745e-02,
          1.0403e+00,  3.7624e-01,  6.7297e-01,  1.1546e+00, -4.2402e-01,
          3.8291e-03, -4.2527e-01,  1.1028e+00,  3.3662e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
231000 loss tensor(0.0606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7813e+00,  1.4881e+00,  4.5469e-01,  2.9176e+00,  6.0577e-01,
         -5.6208e-01, -2.8659e-01,  1.1985e+00,  8.3761e-01,  3.3691e-01,
          7.1403e-05,  1.0844e+00,  8.5849e-01,  2.5719e+00,  5.2676e-01,
          1.8374e-01, -7.3967e-02,  4.8751e-01,  1.5311e+00,  3.9020e-02,
          8.2803e-01,  2.6653e-01, -7.5193e-02,  6.4075e-01,  2.8708e-01,
          1.1579e+00, -2.0621e-02,  1.4656e+00,  2.6651e-01,  6.6359e-01,
          1.6402e+00,  2.4752e+00,  5.2195e-01,  2.3468e-01,  1.1823e-01,
          1.2511e+00,  6.8271e-01,  2.9212e-01,  7.1233e-01,  2.8971e-02,
          1.0411e+00,  3.7496e-01,  6.7434e-01,  1.1549e+00, -4.2487e-01,
          2.6227e-03, -4.2382e-01,  1.1034e+00,  3.3802e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
232000 loss tensor(0.0648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7822e+00,  1.4894e+00,  4.5735e-01,  2.9171e+00,  6.0561e-01,
         -5.6155e-01, -2.8556e-01,  1.1973e+00,  8.3842e-01,  3.3802e-01,
         -7.0243e-04,  1.0860e+00,  8.5707e-01,  2.5722e+00,  5.2573e-01,
          1.8276e-01, -7.5453e-02,  4.8659e-01,  1.5306e+00,  3.9743e-02,
          8.2916e-01,  2.6831e-01, -7.5494e-02,  6.4164e-01,  2.8809e-01,
          1.1585e+00, -2.0711e-02,  1.4645e+00,  2.6533e-01,  6.6277e-01,
          1.6418e+00,  2.4750e+00,  5.2206e-01,  2.3618e-01,  1.1854e-01,
          1.2496e+00,  6.8139e-01,  2.9096e-01,  7.1153e-01,  2.8438e-02,
          1.0399e+00,  3.7506e-01,  6.7311e-01,  1.1534e+00, -4.2343e-01,
          3.7756e-03, -4.2463e-01,  1.1021e+00,  3.3685e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
233000 loss tensor(0.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0362, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7825e+00,  1.4880e+00,  4.5669e-01,  2.9141e+00,  6.0295e-01,
         -5.6137e-01, -2.8735e-01,  1.1948e+00,  8.3675e-01,  3.3701e-01,
         -1.5771e-03,  1.0847e+00,  8.5735e-01,  2.5713e+00,  5.2650e-01,
          1.8292e-01, -7.3511e-02,  4.8646e-01,  1.5303e+00,  3.9108e-02,
          8.2773e-01,  2.6706e-01, -7.5112e-02,  6.4033e-01,  2.8679e-01,
          1.1556e+00, -2.0909e-02,  1.4647e+00,  2.6594e-01,  6.6304e-01,
          1.6400e+00,  2.4733e+00,  5.2182e-01,  2.3432e-01,  1.1829e-01,
          1.2501e+00,  6.8250e-01,  2.9183e-01,  7.1279e-01,  2.9135e-02,
          1.0414e+00,  3.7487e-01,  6.7455e-01,  1.1539e+00, -4.2342e-01,
          3.4810e-03, -4.2321e-01,  1.1022e+00,  3.3776e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
234000 loss tensor(0.0678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7834e+00,  1.4864e+00,  4.5546e-01,  2.9120e+00,  6.0270e-01,
         -5.6183e-01, -2.8688e-01,  1.1939e+00,  8.3621e-01,  3.3694e-01,
         -2.6410e-03,  1.0846e+00,  8.5714e-01,  2.5691e+00,  5.2608e-01,
          1.8265e-01, -7.3830e-02,  4.8512e-01,  1.5300e+00,  3.9591e-02,
          8.2672e-01,  2.6838e-01, -7.4725e-02,  6.4087e-01,  2.8618e-01,
          1.1555e+00, -2.0378e-02,  1.4650e+00,  2.6643e-01,  6.6327e-01,
          1.6409e+00,  2.4724e+00,  5.2141e-01,  2.3461e-01,  1.1888e-01,
          1.2498e+00,  6.8207e-01,  2.9201e-01,  7.1242e-01,  2.9156e-02,
          1.0409e+00,  3.7358e-01,  6.7430e-01,  1.1534e+00, -4.2398e-01,
          2.6712e-03, -4.2307e-01,  1.1025e+00,  3.3770e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
235000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7855e+00,  1.4864e+00,  4.5718e-01,  2.9101e+00,  6.0082e-01,
         -5.6138e-01, -2.8579e-01,  1.1926e+00,  8.3642e-01,  3.3805e-01,
         -2.4332e-03,  1.0850e+00,  8.5599e-01,  2.5686e+00,  5.2617e-01,
          1.8236e-01, -7.5223e-02,  4.8455e-01,  1.5302e+00,  4.1751e-02,
          8.2608e-01,  2.6987e-01, -7.4933e-02,  6.4253e-01,  2.8705e-01,
          1.1557e+00, -2.1085e-02,  1.4647e+00,  2.6608e-01,  6.6362e-01,
          1.6410e+00,  2.4713e+00,  5.2094e-01,  2.3600e-01,  1.1899e-01,
          1.2491e+00,  6.8030e-01,  2.9180e-01,  7.1149e-01,  2.8622e-02,
          1.0396e+00,  3.7366e-01,  6.7347e-01,  1.1523e+00, -4.2348e-01,
          3.0441e-03, -4.2282e-01,  1.1007e+00,  3.3770e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
236000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0365, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7854,  1.4863,  0.4575,  2.9075,  0.6011, -0.5614, -0.2858,  1.1918,
          0.8364,  0.3383, -0.0031,  1.0856,  0.8552,  2.5687,  0.5248,  0.1816,
         -0.0754,  0.4836,  1.5281,  0.0399,  0.8266,  0.2697, -0.0750,  0.6414,
          0.2866,  1.1550, -0.0206,  1.4635,  0.2654,  0.6621,  1.6422,  2.4711,
          0.5209,  0.2372,  0.1196,  1.2483,  0.6813,  0.2916,  0.7117,  0.0293,
          1.0390,  0.3740,  0.6736,  1.1518, -0.4223,  0.0035, -0.4237,  1.1005,
          0.3370]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
237000 loss tensor(0.0602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7846,  1.4848,  0.4568,  2.9045,  0.6012, -0.5602, -0.2867,  1.1903,
          0.8358,  0.3368, -0.0032,  1.0845,  0.8539,  2.5686,  0.5247,  0.1810,
         -0.0742,  0.4827,  1.5275,  0.0402,  0.8265,  0.2696, -0.0751,  0.6411,
          0.2863,  1.1531, -0.0198,  1.4627,  0.2652,  0.6615,  1.6414,  2.4684,
          0.5213,  0.2358,  0.1200,  1.2481,  0.6818,  0.2917,  0.7129,  0.0298,
          1.0401,  0.3736,  0.6749,  1.1523, -0.4220,  0.0035, -0.4238,  1.1009,
          0.3365]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
238000 loss tensor(0.0642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7872,  1.4852,  0.4585,  2.9035,  0.5999, -0.5604, -0.2866,  1.1887,
          0.8358,  0.3375, -0.0040,  1.0858,  0.8545,  2.5673,  0.5247,  0.1808,
         -0.0745,  0.4825,  1.5286,  0.0414,  0.8260,  0.2702, -0.0751,  0.6426,
          0.2872,  1.1521, -0.0200,  1.4631,  0.2651,  0.6619,  1.6418,  2.4687,
          0.5208,  0.2355,  0.1197,  1.2468,  0.6811,  0.2910,  0.7120,  0.0295,
          1.0394,  0.3722,  0.6741,  1.1503, -0.4219,  0.0036, -0.4235,  1.1002,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
239000 loss tensor(0.0639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7868,  1.4843,  0.4598,  2.9001,  0.5996, -0.5607, -0.2864,  1.1865,
          0.8353,  0.3378, -0.0053,  1.0853,  0.8529,  2.5671,  0.5246,  0.1809,
         -0.0750,  0.4818,  1.5264,  0.0405,  0.8251,  0.2707, -0.0746,  0.6421,
          0.2858,  1.1523, -0.0207,  1.4625,  0.2650,  0.6616,  1.6418,  2.4665,
          0.5208,  0.2367,  0.1197,  1.2471,  0.6806,  0.2912,  0.7120,  0.0291,
          1.0389,  0.3729,  0.6741,  1.1504, -0.4213,  0.0036, -0.4233,  1.0995,
          0.3372]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
240000 loss tensor(0.0624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7877,  1.4836,  0.4598,  2.8983,  0.5979, -0.5600, -0.2862,  1.1852,
          0.8353,  0.3373, -0.0056,  1.0851,  0.8530,  2.5660,  0.5242,  0.1802,
         -0.0745,  0.4812,  1.5271,  0.0423,  0.8253,  0.2708, -0.0747,  0.6425,
          0.2862,  1.1511, -0.0202,  1.4624,  0.2649,  0.6615,  1.6420,  2.4664,
          0.5206,  0.2357,  0.1197,  1.2463,  0.6808,  0.2906,  0.7123,  0.0296,
          1.0390,  0.3716,  0.6742,  1.1496, -0.4209,  0.0038, -0.4228,  1.0988,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
241000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7864,  1.4824,  0.4607,  2.8950,  0.5971, -0.5602, -0.2872,  1.1827,
          0.8338,  0.3362, -0.0062,  1.0840,  0.8528,  2.5653,  0.5245,  0.1813,
         -0.0736,  0.4817,  1.5272,  0.0420,  0.8239,  0.2707, -0.0737,  0.6422,
          0.2851,  1.1498, -0.0204,  1.4621,  0.2654,  0.6620,  1.6401,  2.4639,
          0.5196,  0.2347,  0.1191,  1.2471,  0.6817,  0.2914,  0.7133,  0.0291,
          1.0392,  0.3720,  0.6754,  1.1498, -0.4210,  0.0037, -0.4227,  1.0996,
          0.3368]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
242000 loss tensor(0.0704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0367, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7870e+00,  1.4802e+00,  4.5936e-01,  2.8925e+00,  5.9616e-01,
         -5.6071e-01, -2.8623e-01,  1.1820e+00,  8.3279e-01,  3.3616e-01,
         -7.8860e-03,  1.0841e+00,  8.5115e-01,  2.5634e+00,  5.2475e-01,
          1.8136e-01, -7.4312e-02,  4.8118e-01,  1.5260e+00,  4.2084e-02,
          8.2363e-01,  2.7250e-01, -7.3138e-02,  6.4340e-01,  2.8522e-01,
          1.1491e+00, -2.0627e-02,  1.4630e+00,  2.6619e-01,  6.6232e-01,
          1.6406e+00,  2.4634e+00,  5.1858e-01,  2.3524e-01,  1.1879e-01,
          1.2462e+00,  6.8055e-01,  2.9228e-01,  7.1289e-01,  2.8172e-02,
          1.0392e+00,  3.7110e-01,  6.7478e-01,  1.1502e+00, -4.2245e-01,
          2.5655e-03, -4.2176e-01,  1.0992e+00,  3.3773e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
243000 loss tensor(0.0592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7895,  1.4802,  0.4619,  2.8905,  0.5957, -0.5600, -0.2868,  1.1811,
          0.8339,  0.3362, -0.0076,  1.0842,  0.8501,  2.5644,  0.5237,  0.1800,
         -0.0740,  0.4797,  1.5249,  0.0421,  0.8244,  0.2716, -0.0740,  0.6419,
          0.2843,  1.1488, -0.0205,  1.4613,  0.2648,  0.6612,  1.6414,  2.4624,
          0.5197,  0.2361,  0.1202,  1.2453,  0.6815,  0.2905,  0.7133,  0.0292,
          1.0392,  0.3725,  0.6755,  1.1493, -0.4203,  0.0039, -0.4226,  1.0972,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
244000 loss tensor(0.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7883e+00,  1.4789e+00,  4.6301e-01,  2.8883e+00,  5.9411e-01,
         -5.6098e-01, -2.8699e-01,  1.1781e+00,  8.3186e-01,  3.3627e-01,
         -9.4012e-03,  1.0838e+00,  8.5052e-01,  2.5618e+00,  5.2473e-01,
          1.8096e-01, -7.4019e-02,  4.8023e-01,  1.5245e+00,  4.2182e-02,
          8.2271e-01,  2.7290e-01, -7.2929e-02,  6.4242e-01,  2.8386e-01,
          1.1477e+00, -2.0610e-02,  1.4628e+00,  2.6615e-01,  6.6206e-01,
          1.6407e+00,  2.4612e+00,  5.1826e-01,  2.3560e-01,  1.1895e-01,
          1.2462e+00,  6.8103e-01,  2.9196e-01,  7.1324e-01,  2.8348e-02,
          1.0391e+00,  3.7111e-01,  6.7527e-01,  1.1488e+00, -4.2178e-01,
          2.2917e-03, -4.2118e-01,  1.0978e+00,  3.3855e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
245000 loss tensor(0.0627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7900,  1.4797,  0.4652,  2.8869,  0.5929, -0.5599, -0.2862,  1.1773,
          0.8333,  0.3375, -0.0094,  1.0850,  0.8500,  2.5622,  0.5236,  0.1798,
         -0.0750,  0.4789,  1.5247,  0.0439,  0.8225,  0.2740, -0.0735,  0.6440,
          0.2852,  1.1481, -0.0212,  1.4613,  0.2648,  0.6613,  1.6418,  2.4615,
          0.5182,  0.2369,  0.1196,  1.2447,  0.6796,  0.2904,  0.7124,  0.0288,
          1.0374,  0.3711,  0.6745,  1.1474, -0.4199,  0.0037, -0.4219,  1.0965,
          0.3374]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
246000 loss tensor(0.0713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7896,  1.4778,  0.4627,  2.8831,  0.5927, -0.5586, -0.2874,  1.1761,
          0.8314,  0.3361, -0.0092,  1.0834,  0.8501,  2.5615,  0.5236,  0.1795,
         -0.0740,  0.4784,  1.5246,  0.0431,  0.8218,  0.2730, -0.0734,  0.6430,
          0.2839,  1.1463, -0.0203,  1.4610,  0.2652,  0.6613,  1.6404,  2.4589,
          0.5190,  0.2358,  0.1202,  1.2449,  0.6813,  0.2914,  0.7137,  0.0298,
          1.0386,  0.3697,  0.6758,  1.1478, -0.4200,  0.0033, -0.4216,  1.0969,
          0.3368]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
247000 loss tensor(0.0708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0372, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7900e+00,  1.4769e+00,  4.6317e-01,  2.8808e+00,  5.9141e-01,
         -5.6016e-01, -2.8810e-01,  1.1736e+00,  8.3138e-01,  3.3533e-01,
         -1.1367e-02,  1.0832e+00,  8.4954e-01,  2.5595e+00,  5.2444e-01,
          1.7975e-01, -7.3254e-02,  4.7865e-01,  1.5242e+00,  4.3110e-02,
          8.2157e-01,  2.7304e-01, -7.2453e-02,  6.4225e-01,  2.8321e-01,
          1.1450e+00, -2.0514e-02,  1.4620e+00,  2.6589e-01,  6.6175e-01,
          1.6404e+00,  2.4580e+00,  5.1823e-01,  2.3478e-01,  1.1930e-01,
          1.2448e+00,  6.8112e-01,  2.9073e-01,  7.1377e-01,  2.8780e-02,
          1.0388e+00,  3.7007e-01,  6.7599e-01,  1.1470e+00, -4.2055e-01,
          2.2638e-03, -4.2052e-01,  1.0967e+00,  3.3843e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
248000 loss tensor(0.0746, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0412, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7923e+00,  1.4774e+00,  4.6515e-01,  2.8791e+00,  5.8958e-01,
         -5.5974e-01, -2.8716e-01,  1.1729e+00,  8.3221e-01,  3.3661e-01,
         -1.1827e-02,  1.0845e+00,  8.4768e-01,  2.5586e+00,  5.2433e-01,
          1.7938e-01, -7.4280e-02,  4.7825e-01,  1.5231e+00,  4.3691e-02,
          8.2158e-01,  2.7444e-01, -7.2292e-02,  6.4392e-01,  2.8432e-01,
          1.1447e+00, -2.0483e-02,  1.4618e+00,  2.6570e-01,  6.6128e-01,
          1.6413e+00,  2.4578e+00,  5.1750e-01,  2.3552e-01,  1.1918e-01,
          1.2432e+00,  6.7938e-01,  2.8997e-01,  7.1258e-01,  2.8161e-02,
          1.0374e+00,  3.7017e-01,  6.7488e-01,  1.1464e+00, -4.1999e-01,
          2.6086e-03, -4.2001e-01,  1.0951e+00,  3.3874e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
249000 loss tensor(0.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0369, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7917e+00,  1.4763e+00,  4.6655e-01,  2.8770e+00,  5.8951e-01,
         -5.5976e-01, -2.8776e-01,  1.1701e+00,  8.3034e-01,  3.3565e-01,
         -1.2717e-02,  1.0833e+00,  8.4786e-01,  2.5576e+00,  5.2396e-01,
          1.7960e-01, -7.3694e-02,  4.7748e-01,  1.5235e+00,  4.4454e-02,
          8.2017e-01,  2.7515e-01, -7.1874e-02,  6.4388e-01,  2.8356e-01,
          1.1434e+00, -2.0859e-02,  1.4614e+00,  2.6599e-01,  6.6137e-01,
          1.6414e+00,  2.4562e+00,  5.1753e-01,  2.3503e-01,  1.1919e-01,
          1.2442e+00,  6.7992e-01,  2.9138e-01,  7.1360e-01,  2.8235e-02,
          1.0379e+00,  3.6951e-01,  6.7592e-01,  1.1464e+00, -4.2016e-01,
          2.3149e-03, -4.2007e-01,  1.0964e+00,  3.3824e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
250000 loss tensor(0.0679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0355, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7923e+00,  1.4755e+00,  4.6735e-01,  2.8740e+00,  5.8723e-01,
         -5.5979e-01, -2.8711e-01,  1.1689e+00,  8.3053e-01,  3.3593e-01,
         -1.3290e-02,  1.0835e+00,  8.4655e-01,  2.5565e+00,  5.2363e-01,
          1.7947e-01, -7.4302e-02,  4.7688e-01,  1.5234e+00,  4.5299e-02,
          8.1875e-01,  2.7522e-01, -7.1733e-02,  6.4429e-01,  2.8368e-01,
          1.1431e+00, -2.1926e-02,  1.4613e+00,  2.6600e-01,  6.6206e-01,
          1.6415e+00,  2.4555e+00,  5.1642e-01,  2.3613e-01,  1.1922e-01,
          1.2438e+00,  6.7970e-01,  2.9090e-01,  7.1322e-01,  2.7946e-02,
          1.0373e+00,  3.7026e-01,  6.7575e-01,  1.1458e+00, -4.1950e-01,
          2.3401e-03, -4.1977e-01,  1.0949e+00,  3.3860e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
251000 loss tensor(0.0708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7929e+00,  1.4751e+00,  4.6642e-01,  2.8719e+00,  5.8703e-01,
         -5.5929e-01, -2.8723e-01,  1.1680e+00,  8.2943e-01,  3.3652e-01,
         -1.3662e-02,  1.0836e+00,  8.4707e-01,  2.5567e+00,  5.2375e-01,
          1.7926e-01, -7.4107e-02,  4.7653e-01,  1.5220e+00,  4.5102e-02,
          8.1898e-01,  2.7564e-01, -7.1373e-02,  6.4443e-01,  2.8341e-01,
          1.1419e+00, -2.1081e-02,  1.4607e+00,  2.6571e-01,  6.6157e-01,
          1.6408e+00,  2.4536e+00,  5.1651e-01,  2.3520e-01,  1.1909e-01,
          1.2434e+00,  6.7942e-01,  2.9107e-01,  7.1296e-01,  2.8323e-02,
          1.0372e+00,  3.6887e-01,  6.7549e-01,  1.1451e+00, -4.1935e-01,
          2.6810e-03, -4.2001e-01,  1.0954e+00,  3.3826e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
252000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7929e+00,  1.4736e+00,  4.6770e-01,  2.8687e+00,  5.8685e-01,
         -5.5944e-01, -2.8780e-01,  1.1654e+00,  8.2942e-01,  3.3540e-01,
         -1.4427e-02,  1.0828e+00,  8.4578e-01,  2.5553e+00,  5.2358e-01,
          1.7914e-01, -7.3815e-02,  4.7602e-01,  1.5217e+00,  4.4571e-02,
          8.1897e-01,  2.7536e-01, -7.1076e-02,  6.4378e-01,  2.8202e-01,
          1.1419e+00, -2.0604e-02,  1.4609e+00,  2.6614e-01,  6.6129e-01,
          1.6411e+00,  2.4528e+00,  5.1640e-01,  2.3583e-01,  1.1909e-01,
          1.2429e+00,  6.8004e-01,  2.9094e-01,  7.1395e-01,  2.8458e-02,
          1.0369e+00,  3.6927e-01,  6.7629e-01,  1.1456e+00, -4.1951e-01,
          2.2903e-03, -4.1944e-01,  1.0944e+00,  3.3839e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
253000 loss tensor(0.0629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7949,  1.4738,  0.4678,  2.8674,  0.5856, -0.5592, -0.2870,  1.1653,
          0.8301,  0.3362, -0.0153,  1.0836,  0.8453,  2.5554,  0.5223,  0.1781,
         -0.0747,  0.4751,  1.5209,  0.0449,  0.8196,  0.2770, -0.0716,  0.6443,
          0.2828,  1.1414, -0.0203,  1.4596,  0.2647,  0.6605,  1.6429,  2.4525,
          0.5163,  0.2366,  0.1201,  1.2413,  0.6788,  0.2898,  0.7132,  0.0284,
          1.0358,  0.3680,  0.6752,  1.1438, -0.4180,  0.0034, -0.4200,  1.0929,
          0.3373]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
254000 loss tensor(0.0775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0423, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7953e+00,  1.4736e+00,  4.6933e-01,  2.8651e+00,  5.8353e-01,
         -5.5859e-01, -2.8731e-01,  1.1630e+00,  8.2979e-01,  3.3632e-01,
         -1.5465e-02,  1.0834e+00,  8.4469e-01,  2.5536e+00,  5.2355e-01,
          1.7811e-01, -7.4404e-02,  4.7467e-01,  1.5209e+00,  4.5835e-02,
          8.1793e-01,  2.7697e-01, -7.1063e-02,  6.4465e-01,  2.8309e-01,
          1.1403e+00, -2.0370e-02,  1.4604e+00,  2.6545e-01,  6.6076e-01,
          1.6423e+00,  2.4511e+00,  5.1600e-01,  2.3582e-01,  1.1957e-01,
          1.2414e+00,  6.7855e-01,  2.8983e-01,  7.1268e-01,  2.7988e-02,
          1.0359e+00,  3.6827e-01,  6.7532e-01,  1.1436e+00, -4.1849e-01,
          2.6460e-03, -4.1867e-01,  1.0928e+00,  3.3854e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
255000 loss tensor(0.0681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0361, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7949e+00,  1.4716e+00,  4.6914e-01,  2.8618e+00,  5.8298e-01,
         -5.5929e-01, -2.8784e-01,  1.1618e+00,  8.2774e-01,  3.3529e-01,
         -1.6660e-02,  1.0824e+00,  8.4456e-01,  2.5528e+00,  5.2318e-01,
          1.7833e-01, -7.3542e-02,  4.7445e-01,  1.5208e+00,  4.5785e-02,
          8.1727e-01,  2.7630e-01, -7.0682e-02,  6.4494e-01,  2.8163e-01,
          1.1390e+00, -2.0863e-02,  1.4598e+00,  2.6567e-01,  6.6110e-01,
          1.6403e+00,  2.4489e+00,  5.1527e-01,  2.3576e-01,  1.1969e-01,
          1.2420e+00,  6.7947e-01,  2.9083e-01,  7.1411e-01,  2.8175e-02,
          1.0366e+00,  3.6765e-01,  6.7641e-01,  1.1439e+00, -4.1853e-01,
          2.4897e-03, -4.1872e-01,  1.0933e+00,  3.3836e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
256000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7951e+00,  1.4710e+00,  4.6930e-01,  2.8584e+00,  5.8204e-01,
         -5.5884e-01, -2.8789e-01,  1.1602e+00,  8.2760e-01,  3.3568e-01,
         -1.7175e-02,  1.0826e+00,  8.4386e-01,  2.5514e+00,  5.2284e-01,
          1.7800e-01, -7.3831e-02,  4.7349e-01,  1.5195e+00,  4.5159e-02,
          8.1666e-01,  2.7689e-01, -7.0532e-02,  6.4466e-01,  2.8195e-01,
          1.1387e+00, -2.1472e-02,  1.4596e+00,  2.6570e-01,  6.6085e-01,
          1.6408e+00,  2.4483e+00,  5.1501e-01,  2.3604e-01,  1.1937e-01,
          1.2416e+00,  6.7931e-01,  2.9083e-01,  7.1417e-01,  2.8385e-02,
          1.0364e+00,  3.6732e-01,  6.7660e-01,  1.1434e+00, -4.1840e-01,
          2.1465e-03, -4.1861e-01,  1.0929e+00,  3.3904e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
257000 loss tensor(0.0759, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0417, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7967,  1.4702,  0.4692,  2.8565,  0.5820, -0.5579, -0.2880,  1.1595,
          0.8279,  0.3351, -0.0157,  1.0823,  0.8425,  2.5518,  0.5216,  0.1763,
         -0.0737,  0.4717,  1.5180,  0.0442,  0.8172,  0.2769, -0.0715,  0.6443,
          0.2819,  1.1378, -0.0210,  1.4581,  0.2649,  0.6594,  1.6416,  2.4472,
          0.5165,  0.2363,  0.1209,  1.2402,  0.6796,  0.2898,  0.7144,  0.0299,
          1.0361,  0.3677,  0.6765,  1.1431, -0.4169,  0.0030, -0.4194,  1.0917,
          0.3373]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
258000 loss tensor(0.0650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7960e+00,  1.4691e+00,  4.6879e-01,  2.8546e+00,  5.7965e-01,
         -5.5833e-01, -2.8898e-01,  1.1569e+00,  8.2697e-01,  3.3438e-01,
         -1.7931e-02,  1.0816e+00,  8.4286e-01,  2.5502e+00,  5.2273e-01,
          1.7716e-01, -7.3022e-02,  4.7241e-01,  1.5191e+00,  4.5467e-02,
          8.1666e-01,  2.7687e-01, -7.0490e-02,  6.4393e-01,  2.8062e-01,
          1.1363e+00, -2.0296e-02,  1.4590e+00,  2.6548e-01,  6.6051e-01,
          1.6416e+00,  2.4459e+00,  5.1506e-01,  2.3561e-01,  1.1974e-01,
          1.2405e+00,  6.7943e-01,  2.8998e-01,  7.1472e-01,  2.8435e-02,
          1.0360e+00,  3.6608e-01,  6.7693e-01,  1.1421e+00, -4.1743e-01,
          2.3773e-03, -4.1808e-01,  1.0921e+00,  3.3857e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
259000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7977,  1.4694,  0.4698,  2.8526,  0.5792, -0.5570, -0.2880,  1.1572,
          0.8277,  0.3352, -0.0174,  1.0828,  0.8423,  2.5502,  0.5212,  0.1758,
         -0.0739,  0.4707,  1.5188,  0.0462,  0.8168,  0.2787, -0.0716,  0.6460,
          0.2814,  1.1363, -0.0196,  1.4575,  0.2643,  0.6593,  1.6425,  2.4458,
          0.5153,  0.2362,  0.1210,  1.2388,  0.6778,  0.2893,  0.7138,  0.0294,
          1.0348,  0.3650,  0.6757,  1.1410, -0.4161,  0.0037, -0.4188,  1.0915,
          0.3374]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
260000 loss tensor(0.0636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7993,  1.4691,  0.4711,  2.8501,  0.5778, -0.5583, -0.2874,  1.1545,
          0.8276,  0.3357, -0.0194,  1.0826,  0.8408,  2.5491,  0.5213,  0.1761,
         -0.0746,  0.4709,  1.5178,  0.0462,  0.8159,  0.2789, -0.0704,  0.6455,
          0.2814,  1.1361, -0.0207,  1.4575,  0.2645,  0.6596,  1.6425,  2.4448,
          0.5143,  0.2370,  0.1202,  1.2390,  0.6780,  0.2892,  0.7139,  0.0285,
          1.0343,  0.3664,  0.6758,  1.1414, -0.4159,  0.0033, -0.4184,  1.0902,
          0.3378]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
261000 loss tensor(0.0757, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0417, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7978e+00,  1.4677e+00,  4.7100e-01,  2.8465e+00,  5.7554e-01,
         -5.5803e-01, -2.8792e-01,  1.1525e+00,  8.2594e-01,  3.3500e-01,
         -2.0106e-02,  1.0816e+00,  8.4044e-01,  2.5476e+00,  5.2219e-01,
          1.7664e-01, -7.3396e-02,  4.7128e-01,  1.5187e+00,  4.6300e-02,
          8.1420e-01,  2.7801e-01, -6.9597e-02,  6.4471e-01,  2.8055e-01,
          1.1341e+00, -2.1382e-02,  1.4582e+00,  2.6556e-01,  6.6043e-01,
          1.6411e+00,  2.4428e+00,  5.1405e-01,  2.3603e-01,  1.2001e-01,
          1.2397e+00,  6.7873e-01,  2.9019e-01,  7.1432e-01,  2.8303e-02,
          1.0350e+00,  3.6641e-01,  6.7661e-01,  1.1416e+00, -4.1645e-01,
          2.6583e-03, -4.1726e-01,  1.0900e+00,  3.3872e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
262000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7992e+00,  1.4654e+00,  4.7045e-01,  2.8442e+00,  5.7561e-01,
         -5.5886e-01, -2.8826e-01,  1.1514e+00,  8.2577e-01,  3.3429e-01,
         -2.0590e-02,  1.0809e+00,  8.4080e-01,  2.5466e+00,  5.2187e-01,
          1.7621e-01, -7.3244e-02,  4.7062e-01,  1.5173e+00,  4.5793e-02,
          8.1461e-01,  2.7887e-01, -6.9676e-02,  6.4500e-01,  2.7958e-01,
          1.1333e+00, -2.0954e-02,  1.4578e+00,  2.6513e-01,  6.5986e-01,
          1.6415e+00,  2.4411e+00,  5.1349e-01,  2.3650e-01,  1.1970e-01,
          1.2391e+00,  6.7813e-01,  2.8966e-01,  7.1488e-01,  2.8147e-02,
          1.0351e+00,  3.6509e-01,  6.7714e-01,  1.1405e+00, -4.1646e-01,
          2.3538e-03, -4.1724e-01,  1.0899e+00,  3.3842e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
263000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.7986e+00,  1.4663e+00,  4.7104e-01,  2.8406e+00,  5.7522e-01,
         -5.5758e-01, -2.8897e-01,  1.1497e+00,  8.2493e-01,  3.3421e-01,
         -2.0897e-02,  1.0811e+00,  8.4037e-01,  2.5456e+00,  5.2192e-01,
          1.7574e-01, -7.2808e-02,  4.6995e-01,  1.5165e+00,  4.6484e-02,
          8.1325e-01,  2.7852e-01, -6.9728e-02,  6.4471e-01,  2.7994e-01,
          1.1323e+00, -2.0765e-02,  1.4579e+00,  2.6537e-01,  6.5940e-01,
          1.6410e+00,  2.4398e+00,  5.1372e-01,  2.3580e-01,  1.2045e-01,
          1.2392e+00,  6.7858e-01,  2.8963e-01,  7.1544e-01,  2.9112e-02,
          1.0348e+00,  3.6463e-01,  6.7738e-01,  1.1403e+00, -4.1639e-01,
          2.3156e-03, -4.1705e-01,  1.0895e+00,  3.3865e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
264000 loss tensor(0.0634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8008,  1.4660,  0.4722,  2.8393,  0.5743, -0.5576, -0.2874,  1.1492,
          0.8258,  0.3356, -0.0213,  1.0822,  0.8389,  2.5461,  0.5210,  0.1749,
         -0.0745,  0.4681,  1.5159,  0.0472,  0.8135,  0.2801, -0.0701,  0.6463,
          0.2801,  1.1333, -0.0209,  1.4563,  0.2641,  0.6588,  1.6425,  2.4390,
          0.5138,  0.2375,  0.1208,  1.2376,  0.6769,  0.2889,  0.7138,  0.0289,
          1.0331,  0.3645,  0.6760,  1.1394, -0.4147,  0.0033, -0.4176,  1.0880,
          0.3376]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
265000 loss tensor(0.0735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0408, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8008e+00,  1.4635e+00,  4.7123e-01,  2.8366e+00,  5.7249e-01,
         -5.5785e-01, -2.8847e-01,  1.1467e+00,  8.2436e-01,  3.3392e-01,
         -2.2515e-02,  1.0808e+00,  8.3832e-01,  2.5432e+00,  5.2138e-01,
          1.7500e-01, -7.3267e-02,  4.6879e-01,  1.5159e+00,  4.6541e-02,
          8.1325e-01,  2.7993e-01, -6.9244e-02,  6.4546e-01,  2.7926e-01,
          1.1314e+00, -2.0659e-02,  1.4575e+00,  2.6539e-01,  6.5952e-01,
          1.6413e+00,  2.4388e+00,  5.1369e-01,  2.3599e-01,  1.2012e-01,
          1.2380e+00,  6.7713e-01,  2.8909e-01,  7.1507e-01,  2.8829e-02,
          1.0342e+00,  3.6469e-01,  6.7712e-01,  1.1395e+00, -4.1583e-01,
          2.1184e-03, -4.1633e-01,  1.0881e+00,  3.3875e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
266000 loss tensor(0.0631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8004,  1.4644,  0.4731,  2.8349,  0.5714, -0.5568, -0.2883,  1.1466,
          0.8251,  0.3350, -0.0223,  1.0819,  0.8373,  2.5443,  0.5202,  0.1739,
         -0.0741,  0.4667,  1.5143,  0.0459,  0.8133,  0.2804, -0.0702,  0.6456,
          0.2793,  1.1311, -0.0205,  1.4556,  0.2638,  0.6581,  1.6423,  2.4375,
          0.5144,  0.2371,  0.1212,  1.2368,  0.6764,  0.2885,  0.7141,  0.0297,
          1.0331,  0.3638,  0.6757,  1.1385, -0.4136,  0.0041, -0.4173,  1.0874,
          0.3378]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
267000 loss tensor(0.0742, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8015e+00,  1.4632e+00,  4.7353e-01,  2.8324e+00,  5.6989e-01,
         -5.5777e-01, -2.8911e-01,  1.1437e+00,  8.2328e-01,  3.3430e-01,
         -2.3891e-02,  1.0806e+00,  8.3642e-01,  2.5420e+00,  5.2108e-01,
          1.7512e-01, -7.3272e-02,  4.6776e-01,  1.5143e+00,  4.7318e-02,
          8.1236e-01,  2.8041e-01, -6.8641e-02,  6.4543e-01,  2.7863e-01,
          1.1297e+00, -2.1635e-02,  1.4564e+00,  2.6527e-01,  6.5935e-01,
          1.6416e+00,  2.4356e+00,  5.1246e-01,  2.3639e-01,  1.2027e-01,
          1.2372e+00,  6.7731e-01,  2.8986e-01,  7.1508e-01,  2.8290e-02,
          1.0339e+00,  3.6403e-01,  6.7726e-01,  1.1391e+00, -4.1530e-01,
          1.8895e-03, -4.1626e-01,  1.0867e+00,  3.3875e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
268000 loss tensor(0.0681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8008e+00,  1.4619e+00,  4.7279e-01,  2.8293e+00,  5.6897e-01,
         -5.5640e-01, -2.8980e-01,  1.1429e+00,  8.2310e-01,  3.3371e-01,
         -2.3617e-02,  1.0801e+00,  8.3737e-01,  2.5407e+00,  5.2111e-01,
          1.7416e-01, -7.2704e-02,  4.6676e-01,  1.5156e+00,  4.7247e-02,
          8.1122e-01,  2.7944e-01, -6.9083e-02,  6.4633e-01,  2.7815e-01,
          1.1287e+00, -2.0540e-02,  1.4564e+00,  2.6503e-01,  6.5917e-01,
          1.6414e+00,  2.4348e+00,  5.1292e-01,  2.3584e-01,  1.2093e-01,
          1.2374e+00,  6.7765e-01,  2.8913e-01,  7.1540e-01,  2.9309e-02,
          1.0338e+00,  3.6311e-01,  6.7750e-01,  1.1380e+00, -4.1489e-01,
          2.0491e-03, -4.1556e-01,  1.0880e+00,  3.3884e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
269000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8033,  1.4624,  0.4746,  2.8289,  0.5683, -0.5562, -0.2890,  1.1421,
          0.8236,  0.3342, -0.0241,  1.0810,  0.8369,  2.5413,  0.5199,  0.1733,
         -0.0735,  0.4657,  1.5143,  0.0478,  0.8119,  0.2809, -0.0697,  0.6474,
          0.2793,  1.1282, -0.0194,  1.4550,  0.2638,  0.6579,  1.6420,  2.4346,
          0.5127,  0.2363,  0.1214,  1.2356,  0.6769,  0.2885,  0.7148,  0.0296,
          1.0329,  0.3613,  0.6765,  1.1369, -0.4135,  0.0035, -0.4165,  1.0872,
          0.3376]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
270000 loss tensor(0.0627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8024e+00,  1.4607e+00,  4.7331e-01,  2.8253e+00,  5.6765e-01,
         -5.5663e-01, -2.9021e-01,  1.1396e+00,  8.2222e-01,  3.3369e-01,
         -2.4757e-02,  1.0799e+00,  8.3627e-01,  2.5395e+00,  5.2089e-01,
          1.7390e-01, -7.2624e-02,  4.6569e-01,  1.5140e+00,  4.7381e-02,
          8.1036e-01,  2.8043e-01, -6.8631e-02,  6.4580e-01,  2.7782e-01,
          1.1270e+00, -2.0916e-02,  1.4557e+00,  2.6480e-01,  6.5880e-01,
          1.6408e+00,  2.4318e+00,  5.1205e-01,  2.3574e-01,  1.2109e-01,
          1.2363e+00,  6.7748e-01,  2.8909e-01,  7.1580e-01,  2.9513e-02,
          1.0332e+00,  3.6188e-01,  6.7770e-01,  1.1370e+00, -4.1441e-01,
          2.1436e-03, -4.1555e-01,  1.0868e+00,  3.3868e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
271000 loss tensor(0.0738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8047e+00,  1.4610e+00,  4.7570e-01,  2.8239e+00,  5.6523e-01,
         -5.5720e-01, -2.8936e-01,  1.1383e+00,  8.2197e-01,  3.3441e-01,
         -2.6339e-02,  1.0805e+00,  8.3530e-01,  2.5383e+00,  5.2088e-01,
          1.7409e-01, -7.3484e-02,  4.6562e-01,  1.5137e+00,  4.8601e-02,
          8.0986e-01,  2.8167e-01, -6.8043e-02,  6.4693e-01,  2.7825e-01,
          1.1268e+00, -2.1113e-02,  1.4555e+00,  2.6486e-01,  6.5938e-01,
          1.6423e+00,  2.4316e+00,  5.1071e-01,  2.3627e-01,  1.2088e-01,
          1.2356e+00,  6.7590e-01,  2.8881e-01,  7.1455e-01,  2.7977e-02,
          1.0323e+00,  3.6222e-01,  6.7628e-01,  1.1368e+00, -4.1398e-01,
          2.1263e-03, -4.1488e-01,  1.0860e+00,  3.3915e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
272000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8031e+00,  1.4592e+00,  4.7544e-01,  2.8203e+00,  5.6487e-01,
         -5.5665e-01, -2.9001e-01,  1.1364e+00,  8.2149e-01,  3.3306e-01,
         -2.7122e-02,  1.0796e+00,  8.3494e-01,  2.5378e+00,  5.2078e-01,
          1.7345e-01, -7.2604e-02,  4.6503e-01,  1.5136e+00,  4.8313e-02,
          8.1035e-01,  2.8142e-01, -6.8175e-02,  6.4639e-01,  2.7744e-01,
          1.1252e+00, -2.0400e-02,  1.4553e+00,  2.6484e-01,  6.5849e-01,
          1.6415e+00,  2.4299e+00,  5.1176e-01,  2.3589e-01,  1.2103e-01,
          1.2356e+00,  6.7683e-01,  2.8868e-01,  7.1628e-01,  2.8643e-02,
          1.0331e+00,  3.6149e-01,  6.7751e-01,  1.1364e+00, -4.1411e-01,
          1.8058e-03, -4.1493e-01,  1.0865e+00,  3.3852e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
273000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8058e+00,  1.4589e+00,  4.7636e-01,  2.8198e+00,  5.6354e-01,
         -5.5678e-01, -2.8900e-01,  1.1356e+00,  8.2210e-01,  3.3422e-01,
         -2.7603e-02,  1.0807e+00,  8.3350e-01,  2.5368e+00,  5.2053e-01,
          1.7326e-01, -7.4050e-02,  4.6436e-01,  1.5117e+00,  4.8417e-02,
          8.1003e-01,  2.8312e-01, -6.7927e-02,  6.4765e-01,  2.7872e-01,
          1.1254e+00, -2.0798e-02,  1.4548e+00,  2.6445e-01,  6.5822e-01,
          1.6417e+00,  2.4299e+00,  5.1062e-01,  2.3661e-01,  1.2058e-01,
          1.2339e+00,  6.7563e-01,  2.8822e-01,  7.1488e-01,  2.8457e-02,
          1.0318e+00,  3.6179e-01,  6.7652e-01,  1.1359e+00, -4.1334e-01,
          2.4301e-03, -4.1456e-01,  1.0854e+00,  3.3876e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
274000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8049e+00,  1.4578e+00,  4.7552e-01,  2.8160e+00,  5.6334e-01,
         -5.5692e-01, -2.9045e-01,  1.1338e+00,  8.2038e-01,  3.3301e-01,
         -2.8009e-02,  1.0792e+00,  8.3384e-01,  2.5360e+00,  5.2042e-01,
          1.7292e-01, -7.2531e-02,  4.6393e-01,  1.5122e+00,  4.8638e-02,
          8.0951e-01,  2.8161e-01, -6.7892e-02,  6.4660e-01,  2.7671e-01,
          1.1240e+00, -2.0810e-02,  1.4547e+00,  2.6462e-01,  6.5836e-01,
          1.6421e+00,  2.4280e+00,  5.1093e-01,  2.3583e-01,  1.2058e-01,
          1.2346e+00,  6.7692e-01,  2.8847e-01,  7.1653e-01,  2.9336e-02,
          1.0327e+00,  3.6100e-01,  6.7795e-01,  1.1355e+00, -4.1345e-01,
          1.8438e-03, -4.1457e-01,  1.0851e+00,  3.3863e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
275000 loss tensor(0.0717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8060,  1.4583,  0.4775,  2.8143,  0.5625, -0.5568, -0.2888,  1.1329,
          0.8215,  0.3342, -0.0288,  1.0807,  0.8321,  2.5362,  0.5190,  0.1720,
         -0.0742,  0.4628,  1.5108,  0.0483,  0.8098,  0.2839, -0.0680,  0.6467,
          0.2778,  1.1247, -0.0213,  1.4536,  0.2635,  0.6575,  1.6424,  2.4279,
          0.5113,  0.2374,  0.1216,  1.2331,  0.6751,  0.2872,  0.7151,  0.0289,
          1.0311,  0.3612,  0.6765,  1.1344, -0.4118,  0.0032, -0.4153,  1.0830,
          0.3382]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
276000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0360, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8063,  1.4575,  0.4779,  2.8132,  0.5607, -0.5555, -0.2894,  1.1320,
          0.8208,  0.3340, -0.0286,  1.0805,  0.8329,  2.5355,  0.5187,  0.1715,
         -0.0735,  0.4619,  1.5113,  0.0490,  0.8093,  0.2833, -0.0687,  0.6479,
          0.2777,  1.1229, -0.0208,  1.4529,  0.2631,  0.6571,  1.6424,  2.4269,
          0.5110,  0.2365,  0.1220,  1.2329,  0.6755,  0.2874,  0.7157,  0.0298,
          1.0313,  0.3597,  0.6766,  1.1338, -0.4116,  0.0031, -0.4151,  1.0840,
          0.3380]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
277000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0339, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8069,  1.4567,  0.4790,  2.8101,  0.5607, -0.5565, -0.2889,  1.1301,
          0.8205,  0.3341, -0.0299,  1.0800,  0.8314,  2.5347,  0.5190,  0.1714,
         -0.0741,  0.4617,  1.5106,  0.0496,  0.8088,  0.2845, -0.0679,  0.6484,
          0.2771,  1.1233, -0.0215,  1.4529,  0.2634,  0.6578,  1.6429,  2.4245,
          0.5103,  0.2377,  0.1215,  1.2325,  0.6747,  0.2877,  0.7154,  0.0287,
          1.0305,  0.3604,  0.6765,  1.1339, -0.4115,  0.0030, -0.4149,  1.0832,
          0.3380]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
278000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0350, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8056e+00,  1.4547e+00,  4.7896e-01,  2.8057e+00,  5.5787e-01,
         -5.5729e-01, -2.8970e-01,  1.1274e+00,  8.1918e-01,  3.3299e-01,
         -3.1267e-02,  1.0787e+00,  8.3068e-01,  2.5332e+00,  5.1980e-01,
          1.7216e-01, -7.3025e-02,  4.6184e-01,  1.5097e+00,  4.8546e-02,
          8.0715e-01,  2.8369e-01, -6.6737e-02,  6.4766e-01,  2.7636e-01,
          1.1213e+00, -2.1752e-02,  1.4534e+00,  2.6422e-01,  6.5829e-01,
          1.6417e+00,  2.4236e+00,  5.0966e-01,  2.3686e-01,  1.2062e-01,
          1.2334e+00,  6.7556e-01,  2.8835e-01,  7.1655e-01,  2.8469e-02,
          1.0315e+00,  3.6081e-01,  6.7760e-01,  1.1349e+00, -4.1172e-01,
          2.1537e-03, -4.1375e-01,  1.0831e+00,  3.3857e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
279000 loss tensor(0.0727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8061e+00,  1.4547e+00,  4.7795e-01,  2.8042e+00,  5.5721e-01,
         -5.5616e-01, -2.9049e-01,  1.1265e+00,  8.1854e-01,  3.3229e-01,
         -3.1149e-02,  1.0785e+00,  8.3150e-01,  2.5320e+00,  5.1964e-01,
          1.7133e-01, -7.2501e-02,  4.6075e-01,  1.5101e+00,  4.9918e-02,
          8.0615e-01,  2.8325e-01, -6.7151e-02,  6.4737e-01,  2.7530e-01,
          1.1203e+00, -2.1777e-02,  1.4535e+00,  2.6414e-01,  6.5776e-01,
          1.6420e+00,  2.4222e+00,  5.0978e-01,  2.3620e-01,  1.2173e-01,
          1.2330e+00,  6.7584e-01,  2.8791e-01,  7.1681e-01,  2.9053e-02,
          1.0313e+00,  3.5975e-01,  6.7797e-01,  1.1335e+00, -4.1181e-01,
          1.7228e-03, -4.1341e-01,  1.0834e+00,  3.3883e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
280000 loss tensor(0.0787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0433, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8062e+00,  1.4533e+00,  4.7923e-01,  2.8019e+00,  5.5708e-01,
         -5.5677e-01, -2.9005e-01,  1.1247e+00,  8.1866e-01,  3.3274e-01,
         -3.2213e-02,  1.0781e+00,  8.3046e-01,  2.5302e+00,  5.1844e-01,
          1.7175e-01, -7.2816e-02,  4.6155e-01,  1.5092e+00,  4.9264e-02,
          8.0541e-01,  2.8417e-01, -6.6622e-02,  6.4808e-01,  2.7600e-01,
          1.1203e+00, -2.0720e-02,  1.4528e+00,  2.6447e-01,  6.5867e-01,
          1.6414e+00,  2.4217e+00,  5.0878e-01,  2.3700e-01,  1.2092e-01,
          1.2324e+00,  6.7551e-01,  2.8812e-01,  7.1739e-01,  2.8100e-02,
          1.0311e+00,  3.5930e-01,  6.7780e-01,  1.1333e+00, -4.1163e-01,
          1.9657e-03, -4.1387e-01,  1.0819e+00,  3.3803e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
281000 loss tensor(0.0688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8084e+00,  1.4535e+00,  4.8100e-01,  2.8006e+00,  5.5523e-01,
         -5.5570e-01, -2.8946e-01,  1.1242e+00,  8.1894e-01,  3.3352e-01,
         -3.1933e-02,  1.0794e+00,  8.2915e-01,  2.5306e+00,  5.1833e-01,
          1.7068e-01, -7.3960e-02,  4.5976e-01,  1.5086e+00,  4.9872e-02,
          8.0761e-01,  2.8524e-01, -6.7117e-02,  6.4854e-01,  2.7661e-01,
          1.1203e+00, -2.0938e-02,  1.4520e+00,  2.6320e-01,  6.5703e-01,
          1.6427e+00,  2.4212e+00,  5.0927e-01,  2.3758e-01,  1.2118e-01,
          1.2308e+00,  6.7403e-01,  2.8704e-01,  7.1592e-01,  2.8956e-02,
          1.0296e+00,  3.5913e-01,  6.7676e-01,  1.1322e+00, -4.1068e-01,
          2.7148e-03, -4.1402e-01,  1.0807e+00,  3.3812e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
282000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0366, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8088e+00,  1.4530e+00,  4.8109e-01,  2.7987e+00,  5.5532e-01,
         -5.5612e-01, -2.8957e-01,  1.1226e+00,  8.1861e-01,  3.3337e-01,
         -3.3116e-02,  1.0792e+00,  8.2840e-01,  2.5290e+00,  5.1825e-01,
          1.7028e-01, -7.4060e-02,  4.5916e-01,  1.5085e+00,  5.0040e-02,
          8.0584e-01,  2.8558e-01, -6.6972e-02,  6.4838e-01,  2.7596e-01,
          1.1195e+00, -2.0728e-02,  1.4520e+00,  2.6349e-01,  6.5721e-01,
          1.6432e+00,  2.4198e+00,  5.0894e-01,  2.3802e-01,  1.2136e-01,
          1.2307e+00,  6.7378e-01,  2.8715e-01,  7.1578e-01,  2.8528e-02,
          1.0295e+00,  3.5852e-01,  6.7644e-01,  1.1320e+00, -4.1088e-01,
          2.3752e-03, -4.1355e-01,  1.0810e+00,  3.3820e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
283000 loss tensor(0.0734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8094e+00,  1.4519e+00,  4.8027e-01,  2.7967e+00,  5.5277e-01,
         -5.5555e-01, -2.9058e-01,  1.1215e+00,  8.1827e-01,  3.3277e-01,
         -3.2825e-02,  1.0789e+00,  8.2831e-01,  2.5289e+00,  5.1886e-01,
          1.6955e-01, -7.3417e-02,  4.5812e-01,  1.5075e+00,  4.9600e-02,
          8.0689e-01,  2.8498e-01, -6.7434e-02,  6.4672e-01,  2.7552e-01,
          1.1179e+00, -2.0388e-02,  1.4519e+00,  2.6296e-01,  6.5630e-01,
          1.6431e+00,  2.4188e+00,  5.0965e-01,  2.3703e-01,  1.2196e-01,
          1.2303e+00,  6.7422e-01,  2.8637e-01,  7.1642e-01,  2.9609e-02,
          1.0297e+00,  3.5786e-01,  6.7706e-01,  1.1315e+00, -4.1005e-01,
          2.6471e-03, -4.1235e-01,  1.0795e+00,  3.3861e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
284000 loss tensor(0.0735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8080e+00,  1.4505e+00,  4.7993e-01,  2.7922e+00,  5.5087e-01,
         -5.5631e-01, -2.9146e-01,  1.1191e+00,  8.1666e-01,  3.3166e-01,
         -3.4042e-02,  1.0773e+00,  8.2832e-01,  2.5269e+00,  5.1882e-01,
          1.7033e-01, -7.2453e-02,  4.5875e-01,  1.5077e+00,  5.0111e-02,
          8.0503e-01,  2.8484e-01, -6.6412e-02,  6.4821e-01,  2.7453e-01,
          1.1169e+00, -2.0790e-02,  1.4519e+00,  2.6377e-01,  6.5713e-01,
          1.6424e+00,  2.4175e+00,  5.0879e-01,  2.3630e-01,  1.2137e-01,
          1.2308e+00,  6.7467e-01,  2.8758e-01,  7.1769e-01,  2.8973e-02,
          1.0303e+00,  3.5742e-01,  6.7801e-01,  1.1318e+00, -4.1064e-01,
          2.0281e-03, -4.1168e-01,  1.0814e+00,  3.3880e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
285000 loss tensor(0.0717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0374, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8093e+00,  1.4497e+00,  4.7981e-01,  2.7910e+00,  5.5024e-01,
         -5.5586e-01, -2.9179e-01,  1.1180e+00,  8.1617e-01,  3.3166e-01,
         -3.4365e-02,  1.0774e+00,  8.2826e-01,  2.5267e+00,  5.1885e-01,
          1.6988e-01, -7.2335e-02,  4.5764e-01,  1.5072e+00,  4.9979e-02,
          8.0438e-01,  2.8470e-01, -6.6379e-02,  6.4806e-01,  2.7431e-01,
          1.1157e+00, -2.0459e-02,  1.4514e+00,  2.6355e-01,  6.5724e-01,
          1.6418e+00,  2.4153e+00,  5.0873e-01,  2.3635e-01,  1.2176e-01,
          1.2305e+00,  6.7487e-01,  2.8730e-01,  7.1795e-01,  2.9396e-02,
          1.0302e+00,  3.5679e-01,  6.7803e-01,  1.1314e+00, -4.1044e-01,
          1.7530e-03, -4.1180e-01,  1.0807e+00,  3.3866e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
286000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8093e+00,  1.4496e+00,  4.8258e-01,  2.7891e+00,  5.5050e-01,
         -5.5694e-01, -2.9090e-01,  1.1158e+00,  8.1586e-01,  3.3166e-01,
         -3.6041e-02,  1.0773e+00,  8.2676e-01,  2.5253e+00,  5.1835e-01,
          1.6991e-01, -7.3184e-02,  4.5793e-01,  1.5060e+00,  4.9681e-02,
          8.0351e-01,  2.8583e-01, -6.5574e-02,  6.4779e-01,  2.7408e-01,
          1.1160e+00, -2.1522e-02,  1.4513e+00,  2.6370e-01,  6.5712e-01,
          1.6429e+00,  2.4142e+00,  5.0782e-01,  2.3680e-01,  1.2068e-01,
          1.2303e+00,  6.7423e-01,  2.8769e-01,  7.1743e-01,  2.8465e-02,
          1.0294e+00,  3.5759e-01,  6.7727e-01,  1.1313e+00, -4.1014e-01,
          1.5690e-03, -4.1203e-01,  1.0809e+00,  3.3818e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
287000 loss tensor(0.0718, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8100e+00,  1.4482e+00,  4.8197e-01,  2.7857e+00,  5.4931e-01,
         -5.5568e-01, -2.9086e-01,  1.1156e+00,  8.1587e-01,  3.3158e-01,
         -3.5604e-02,  1.0776e+00,  8.2534e-01,  2.5258e+00,  5.1760e-01,
          1.6890e-01, -7.2861e-02,  4.5589e-01,  1.5047e+00,  5.0011e-02,
          8.0428e-01,  2.8567e-01, -6.6598e-02,  6.4833e-01,  2.7450e-01,
          1.1148e+00, -2.1485e-02,  1.4498e+00,  2.6265e-01,  6.5625e-01,
          1.6432e+00,  2.4137e+00,  5.0870e-01,  2.3698e-01,  1.2230e-01,
          1.2292e+00,  6.7452e-01,  2.8676e-01,  7.1782e-01,  2.9891e-02,
          1.0296e+00,  3.5769e-01,  6.7794e-01,  1.1307e+00, -4.0898e-01,
          2.3835e-03, -4.1257e-01,  1.0795e+00,  3.3750e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
288000 loss tensor(0.0740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0412, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8098e+00,  1.4492e+00,  4.8327e-01,  2.7843e+00,  5.4850e-01,
         -5.5486e-01, -2.9090e-01,  1.1142e+00,  8.1567e-01,  3.3272e-01,
         -3.5657e-02,  1.0783e+00,  8.2675e-01,  2.5247e+00,  5.1748e-01,
          1.6837e-01, -7.3116e-02,  4.5555e-01,  1.5063e+00,  5.1425e-02,
          8.0383e-01,  2.8638e-01, -6.6812e-02,  6.4905e-01,  2.7521e-01,
          1.1142e+00, -2.0865e-02,  1.4498e+00,  2.6246e-01,  6.5640e-01,
          1.6419e+00,  2.4124e+00,  5.0797e-01,  2.3739e-01,  1.2211e-01,
          1.2288e+00,  6.7347e-01,  2.8658e-01,  7.1730e-01,  2.9688e-02,
          1.0287e+00,  3.5629e-01,  6.7721e-01,  1.1291e+00, -4.0890e-01,
          2.4063e-03, -4.1235e-01,  1.0793e+00,  3.3783e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
289000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8101e+00,  1.4472e+00,  4.8299e-01,  2.7820e+00,  5.4700e-01,
         -5.5617e-01, -2.9087e-01,  1.1121e+00,  8.1442e-01,  3.3178e-01,
         -3.7454e-02,  1.0770e+00,  8.2534e-01,  2.5235e+00,  5.1748e-01,
          1.6908e-01, -7.3003e-02,  4.5601e-01,  1.5058e+00,  5.0999e-02,
          8.0260e-01,  2.8681e-01, -6.5642e-02,  6.5025e-01,  2.7399e-01,
          1.1143e+00, -2.1941e-02,  1.4493e+00,  2.6294e-01,  6.5689e-01,
          1.6412e+00,  2.4113e+00,  5.0652e-01,  2.3716e-01,  1.2112e-01,
          1.2291e+00,  6.7345e-01,  2.8739e-01,  7.1799e-01,  2.8330e-02,
          1.0287e+00,  3.5658e-01,  6.7777e-01,  1.1299e+00, -4.0889e-01,
          2.1967e-03, -4.1233e-01,  1.0796e+00,  3.3735e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
290000 loss tensor(0.0771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0422, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8118e+00,  1.4462e+00,  4.8430e-01,  2.7807e+00,  5.4634e-01,
         -5.5515e-01, -2.9070e-01,  1.1112e+00,  8.1484e-01,  3.3216e-01,
         -3.7250e-02,  1.0775e+00,  8.2553e-01,  2.5224e+00,  5.1690e-01,
          1.6776e-01, -7.3130e-02,  4.5439e-01,  1.5041e+00,  5.0628e-02,
          8.0265e-01,  2.8700e-01, -6.6401e-02,  6.4894e-01,  2.7396e-01,
          1.1132e+00, -2.0742e-02,  1.4490e+00,  2.6234e-01,  6.5555e-01,
          1.6434e+00,  2.4106e+00,  5.0768e-01,  2.3769e-01,  1.2240e-01,
          1.2284e+00,  6.7339e-01,  2.8605e-01,  7.1787e-01,  2.9605e-02,
          1.0282e+00,  3.5567e-01,  6.7765e-01,  1.1284e+00, -4.0838e-01,
          2.0393e-03, -4.1184e-01,  1.0787e+00,  3.3760e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
291000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0355, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8118e+00,  1.4453e+00,  4.8394e-01,  2.7772e+00,  5.4330e-01,
         -5.5600e-01, -2.9158e-01,  1.1090e+00,  8.1392e-01,  3.3157e-01,
         -3.9288e-02,  1.0767e+00,  8.2339e-01,  2.5208e+00,  5.1807e-01,
          1.6862e-01, -7.2922e-02,  4.5485e-01,  1.5038e+00,  5.1112e-02,
          8.0179e-01,  2.8737e-01, -6.4998e-02,  6.4916e-01,  2.7313e-01,
          1.1120e+00, -2.1781e-02,  1.4497e+00,  2.6339e-01,  6.5680e-01,
          1.6412e+00,  2.4091e+00,  5.0651e-01,  2.3710e-01,  1.2126e-01,
          1.2284e+00,  6.7319e-01,  2.8704e-01,  7.1801e-01,  2.8744e-02,
          1.0287e+00,  3.5628e-01,  6.7779e-01,  1.1299e+00, -4.0916e-01,
          1.3574e-03, -4.1076e-01,  1.0773e+00,  3.3872e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
292000 loss tensor(0.0716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0374, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8123e+00,  1.4448e+00,  4.8492e-01,  2.7745e+00,  5.4280e-01,
         -5.5619e-01, -2.9170e-01,  1.1071e+00,  8.1324e-01,  3.3135e-01,
         -3.9692e-02,  1.0762e+00,  8.2318e-01,  2.5192e+00,  5.1784e-01,
          1.6854e-01, -7.3075e-02,  4.5446e-01,  1.5041e+00,  5.1278e-02,
          8.0110e-01,  2.8700e-01, -6.4784e-02,  6.4932e-01,  2.7238e-01,
          1.1112e+00, -2.2198e-02,  1.4497e+00,  2.6342e-01,  6.5656e-01,
          1.6417e+00,  2.4076e+00,  5.0612e-01,  2.3759e-01,  1.2110e-01,
          1.2282e+00,  6.7284e-01,  2.8689e-01,  7.1823e-01,  2.8394e-02,
          1.0281e+00,  3.5603e-01,  6.7810e-01,  1.1292e+00, -4.0898e-01,
          1.0430e-03, -4.1048e-01,  1.0774e+00,  3.3839e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
293000 loss tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0378, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8113e+00,  1.4440e+00,  4.8506e-01,  2.7722e+00,  5.4147e-01,
         -5.5551e-01, -2.9239e-01,  1.1062e+00,  8.1257e-01,  3.3088e-01,
         -3.9152e-02,  1.0757e+00,  8.2377e-01,  2.5187e+00,  5.1765e-01,
          1.6766e-01, -7.2383e-02,  4.5328e-01,  1.5041e+00,  5.2131e-02,
          8.0121e-01,  2.8697e-01, -6.5412e-02,  6.4932e-01,  2.7218e-01,
          1.1099e+00, -2.1721e-02,  1.4493e+00,  2.6318e-01,  6.5614e-01,
          1.6415e+00,  2.4063e+00,  5.0698e-01,  2.3684e-01,  1.2201e-01,
          1.2280e+00,  6.7275e-01,  2.8665e-01,  7.1833e-01,  2.9483e-02,
          1.0281e+00,  3.5488e-01,  6.7803e-01,  1.1280e+00, -4.0857e-01,
          1.2721e-03, -4.1033e-01,  1.0778e+00,  3.3841e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
294000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8136e+00,  1.4436e+00,  4.8603e-01,  2.7712e+00,  5.4107e-01,
         -5.5493e-01, -2.9178e-01,  1.1059e+00,  8.1329e-01,  3.3150e-01,
         -3.9621e-02,  1.0766e+00,  8.2314e-01,  2.5189e+00,  5.1653e-01,
          1.6669e-01, -7.3218e-02,  4.5229e-01,  1.5036e+00,  5.1958e-02,
          8.0114e-01,  2.8764e-01, -6.5963e-02,  6.5063e-01,  2.7277e-01,
          1.1102e+00, -2.0857e-02,  1.4480e+00,  2.6201e-01,  6.5554e-01,
          1.6424e+00,  2.4057e+00,  5.0653e-01,  2.3777e-01,  1.2241e-01,
          1.2266e+00,  6.7186e-01,  2.8576e-01,  7.1818e-01,  2.9680e-02,
          1.0268e+00,  3.5374e-01,  6.7764e-01,  1.1272e+00, -4.0724e-01,
          2.2161e-03, -4.1095e-01,  1.0774e+00,  3.3714e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
295000 loss tensor(0.0736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0384, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8121e+00,  1.4423e+00,  4.8599e-01,  2.7682e+00,  5.3934e-01,
         -5.5477e-01, -2.9174e-01,  1.1042e+00,  8.1214e-01,  3.3069e-01,
         -4.0311e-02,  1.0758e+00,  8.2214e-01,  2.5184e+00,  5.1623e-01,
          1.6657e-01, -7.2855e-02,  4.5174e-01,  1.5029e+00,  5.1439e-02,
          8.0071e-01,  2.8782e-01, -6.5836e-02,  6.4921e-01,  2.7247e-01,
          1.1092e+00, -2.1740e-02,  1.4473e+00,  2.6197e-01,  6.5520e-01,
          1.6429e+00,  2.4042e+00,  5.0689e-01,  2.3776e-01,  1.2265e-01,
          1.2268e+00,  6.7293e-01,  2.8646e-01,  7.1945e-01,  3.0200e-02,
          1.0277e+00,  3.5461e-01,  6.7817e-01,  1.1274e+00, -4.0657e-01,
          2.3887e-03, -4.1097e-01,  1.0762e+00,  3.3730e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
296000 loss tensor(0.0677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8138e+00,  1.4417e+00,  4.8653e-01,  2.7664e+00,  5.3820e-01,
         -5.5585e-01, -2.9267e-01,  1.1022e+00,  8.1168e-01,  3.3009e-01,
         -4.1635e-02,  1.0754e+00,  8.2260e-01,  2.5158e+00,  5.1714e-01,
          1.6728e-01, -7.2233e-02,  4.5225e-01,  1.5033e+00,  5.2101e-02,
          7.9945e-01,  2.8756e-01, -6.5073e-02,  6.4951e-01,  2.7171e-01,
          1.1078e+00, -2.1506e-02,  1.4485e+00,  2.6276e-01,  6.5593e-01,
          1.6414e+00,  2.4039e+00,  5.0550e-01,  2.3686e-01,  1.2176e-01,
          1.2268e+00,  6.7270e-01,  2.8596e-01,  7.1911e-01,  2.9600e-02,
          1.0274e+00,  3.5407e-01,  6.7830e-01,  1.1266e+00, -4.0770e-01,
          1.4066e-03, -4.0928e-01,  1.0766e+00,  3.3891e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
297000 loss tensor(0.0738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0402, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8150e+00,  1.4417e+00,  4.8770e-01,  2.7653e+00,  5.3586e-01,
         -5.5572e-01, -2.9201e-01,  1.1006e+00,  8.1221e-01,  3.3099e-01,
         -4.2838e-02,  1.0758e+00,  8.2084e-01,  2.5157e+00,  5.1762e-01,
          1.6712e-01, -7.3376e-02,  4.5189e-01,  1.5026e+00,  5.3387e-02,
          8.0044e-01,  2.8830e-01, -6.4219e-02,  6.5039e-01,  2.7213e-01,
          1.1082e+00, -2.2506e-02,  1.4482e+00,  2.6237e-01,  6.5619e-01,
          1.6413e+00,  2.4029e+00,  5.0508e-01,  2.3731e-01,  1.2175e-01,
          1.2259e+00,  6.7150e-01,  2.8508e-01,  7.1809e-01,  2.8465e-02,
          1.0263e+00,  3.5462e-01,  6.7788e-01,  1.1266e+00, -4.0709e-01,
          1.5227e-03, -4.0924e-01,  1.0748e+00,  3.3863e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
298000 loss tensor(0.0643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8132e+00,  1.4404e+00,  4.8842e-01,  2.7623e+00,  5.3718e-01,
         -5.5440e-01, -2.9279e-01,  1.1002e+00,  8.1168e-01,  3.3014e-01,
         -4.2616e-02,  1.0757e+00,  8.2028e-01,  2.5151e+00,  5.1598e-01,
          1.6549e-01, -7.2988e-02,  4.5004e-01,  1.5015e+00,  5.1550e-02,
          7.9957e-01,  2.8930e-01, -6.5588e-02,  6.5028e-01,  2.7150e-01,
          1.1070e+00, -2.0942e-02,  1.4468e+00,  2.6182e-01,  6.5470e-01,
          1.6419e+00,  2.4016e+00,  5.0596e-01,  2.3768e-01,  1.2286e-01,
          1.2244e+00,  6.7200e-01,  2.8515e-01,  7.1941e-01,  3.0146e-02,
          1.0267e+00,  3.5372e-01,  6.7825e-01,  1.1265e+00, -4.0676e-01,
          1.5987e-03, -4.1045e-01,  1.0746e+00,  3.3741e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
299000 loss tensor(0.0737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0410, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8137e+00,  1.4400e+00,  4.8888e-01,  2.7607e+00,  5.3484e-01,
         -5.5550e-01, -2.9365e-01,  1.0970e+00,  8.1050e-01,  3.2974e-01,
         -4.4660e-02,  1.0746e+00,  8.2054e-01,  2.5136e+00,  5.1712e-01,
          1.6647e-01, -7.2292e-02,  4.5082e-01,  1.5012e+00,  5.2982e-02,
          7.9842e-01,  2.8893e-01, -6.4356e-02,  6.4985e-01,  2.7073e-01,
          1.1061e+00, -2.1366e-02,  1.4475e+00,  2.6229e-01,  6.5581e-01,
          1.6417e+00,  2.4004e+00,  5.0545e-01,  2.3692e-01,  1.2150e-01,
          1.2255e+00,  6.7222e-01,  2.8607e-01,  7.1982e-01,  2.9562e-02,
          1.0267e+00,  3.5326e-01,  6.7899e-01,  1.1261e+00, -4.0721e-01,
          6.4430e-04, -4.0918e-01,  1.0754e+00,  3.3905e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
300000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0358, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8136e+00,  1.4392e+00,  4.8909e-01,  2.7580e+00,  5.3369e-01,
         -5.5495e-01, -2.9279e-01,  1.0972e+00,  8.1027e-01,  3.2983e-01,
         -4.3877e-02,  1.0750e+00,  8.1996e-01,  2.5138e+00,  5.1577e-01,
          1.6551e-01, -7.2955e-02,  4.4930e-01,  1.5007e+00,  5.2453e-02,
          7.9841e-01,  2.8898e-01, -6.5145e-02,  6.5063e-01,  2.7062e-01,
          1.1052e+00, -2.0866e-02,  1.4460e+00,  2.6149e-01,  6.5540e-01,
          1.6422e+00,  2.3993e+00,  5.0574e-01,  2.3816e-01,  1.2285e-01,
          1.2249e+00,  6.7194e-01,  2.8533e-01,  7.2026e-01,  3.0325e-02,
          1.0268e+00,  3.5242e-01,  6.7851e-01,  1.1254e+00, -4.0583e-01,
          1.7453e-03, -4.0982e-01,  1.0745e+00,  3.3735e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
301000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8138e+00,  1.4381e+00,  4.8885e-01,  2.7555e+00,  5.3246e-01,
         -5.5489e-01, -2.9339e-01,  1.0957e+00,  8.0927e-01,  3.2983e-01,
         -4.4372e-02,  1.0746e+00,  8.1947e-01,  2.5129e+00,  5.1553e-01,
          1.6535e-01, -7.2655e-02,  4.4867e-01,  1.5007e+00,  5.2214e-02,
          7.9777e-01,  2.8949e-01, -6.4908e-02,  6.4983e-01,  2.7045e-01,
          1.1046e+00, -2.1068e-02,  1.4457e+00,  2.6152e-01,  6.5519e-01,
          1.6414e+00,  2.3992e+00,  5.0552e-01,  2.3740e-01,  1.2285e-01,
          1.2247e+00,  6.7202e-01,  2.8547e-01,  7.1999e-01,  3.0550e-02,
          1.0268e+00,  3.5200e-01,  6.7872e-01,  1.1256e+00, -4.0580e-01,
          1.9237e-03, -4.0957e-01,  1.0744e+00,  3.3798e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
302000 loss tensor(0.0672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8156e+00,  1.4381e+00,  4.9101e-01,  2.7559e+00,  5.2944e-01,
         -5.5618e-01, -2.9277e-01,  1.0930e+00,  8.1007e-01,  3.3089e-01,
         -4.6574e-02,  1.0753e+00,  8.1862e-01,  2.5107e+00,  5.1667e-01,
          1.6600e-01, -7.2837e-02,  4.4971e-01,  1.5003e+00,  5.4668e-02,
          7.9755e-01,  2.9033e-01, -6.3626e-02,  6.5115e-01,  2.7093e-01,
          1.1043e+00, -2.1529e-02,  1.4469e+00,  2.6188e-01,  6.5639e-01,
          1.6423e+00,  2.3987e+00,  5.0379e-01,  2.3748e-01,  1.2148e-01,
          1.2243e+00,  6.7081e-01,  2.8492e-01,  7.1920e-01,  2.8326e-02,
          1.0252e+00,  3.5281e-01,  6.7790e-01,  1.1240e+00, -4.0624e-01,
          8.4929e-04, -4.0801e-01,  1.0737e+00,  3.3916e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
303000 loss tensor(0.0729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0398, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8148e+00,  1.4372e+00,  4.9168e-01,  2.7518e+00,  5.2989e-01,
         -5.5594e-01, -2.9367e-01,  1.0917e+00,  8.0883e-01,  3.3003e-01,
         -4.7021e-02,  1.0743e+00,  8.1739e-01,  2.5097e+00,  5.1671e-01,
          1.6581e-01, -7.2820e-02,  4.4877e-01,  1.4990e+00,  5.2714e-02,
          7.9692e-01,  2.9018e-01, -6.3512e-02,  6.5042e-01,  2.6968e-01,
          1.1038e+00, -2.2161e-02,  1.4466e+00,  2.6217e-01,  6.5580e-01,
          1.6417e+00,  2.3965e+00,  5.0339e-01,  2.3763e-01,  1.2138e-01,
          1.2238e+00,  6.7115e-01,  2.8578e-01,  7.2000e-01,  2.9278e-02,
          1.0256e+00,  3.5268e-01,  6.7841e-01,  1.1252e+00, -4.0660e-01,
          3.9954e-04, -4.0822e-01,  1.0733e+00,  3.3840e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
304000 loss tensor(0.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0362, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8165e+00,  1.4373e+00,  4.9232e-01,  2.7510e+00,  5.2924e-01,
         -5.5536e-01, -2.9275e-01,  1.0913e+00,  8.0965e-01,  3.3073e-01,
         -4.7177e-02,  1.0751e+00,  8.1688e-01,  2.5099e+00,  5.1526e-01,
          1.6453e-01, -7.3756e-02,  4.4719e-01,  1.4985e+00,  5.3659e-02,
          7.9683e-01,  2.9181e-01, -6.4363e-02,  6.5147e-01,  2.7092e-01,
          1.1040e+00, -2.1639e-02,  1.4449e+00,  2.6092e-01,  6.5482e-01,
          1.6429e+00,  2.3961e+00,  5.0373e-01,  2.3873e-01,  1.2275e-01,
          1.2227e+00,  6.6997e-01,  2.8464e-01,  7.1876e-01,  2.9109e-02,
          1.0244e+00,  3.5163e-01,  6.7741e-01,  1.1236e+00, -4.0512e-01,
          1.3779e-03, -4.0907e-01,  1.0727e+00,  3.3807e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
305000 loss tensor(0.0686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8171e+00,  1.4358e+00,  4.9171e-01,  2.7475e+00,  5.2860e-01,
         -5.5605e-01, -2.9422e-01,  1.0892e+00,  8.0900e-01,  3.2911e-01,
         -4.7915e-02,  1.0741e+00,  8.1592e-01,  2.5095e+00,  5.1533e-01,
          1.6476e-01, -7.2219e-02,  4.4748e-01,  1.4980e+00,  5.2431e-02,
          7.9672e-01,  2.8975e-01, -6.3817e-02,  6.5029e-01,  2.6940e-01,
          1.1017e+00, -2.1889e-02,  1.4443e+00,  2.6079e-01,  6.5416e-01,
          1.6427e+00,  2.3937e+00,  5.0353e-01,  2.3739e-01,  1.2221e-01,
          1.2227e+00,  6.7110e-01,  2.8452e-01,  7.2027e-01,  2.9457e-02,
          1.0252e+00,  3.5216e-01,  6.7850e-01,  1.1239e+00, -4.0439e-01,
          1.5775e-03, -4.0889e-01,  1.0730e+00,  3.3730e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
306000 loss tensor(0.0600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8165e+00,  1.4351e+00,  4.9277e-01,  2.7465e+00,  5.2679e-01,
         -5.5486e-01, -2.9320e-01,  1.0881e+00,  8.0850e-01,  3.3033e-01,
         -4.7849e-02,  1.0747e+00,  8.1602e-01,  2.5079e+00,  5.1533e-01,
          1.6399e-01, -7.3231e-02,  4.4585e-01,  1.4982e+00,  5.3702e-02,
          7.9520e-01,  2.9047e-01, -6.4244e-02,  6.5175e-01,  2.7039e-01,
          1.1021e+00, -2.0950e-02,  1.4444e+00,  2.6084e-01,  6.5444e-01,
          1.6417e+00,  2.3933e+00,  5.0365e-01,  2.3793e-01,  1.2229e-01,
          1.2222e+00,  6.6997e-01,  2.8466e-01,  7.1933e-01,  3.0157e-02,
          1.0243e+00,  3.5061e-01,  6.7762e-01,  1.1230e+00, -4.0449e-01,
          1.0570e-03, -4.0867e-01,  1.0729e+00,  3.3786e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
307000 loss tensor(0.0618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8178e+00,  1.4336e+00,  4.9355e-01,  2.7450e+00,  5.2542e-01,
         -5.5551e-01, -2.9368e-01,  1.0873e+00,  8.0843e-01,  3.2933e-01,
         -4.9178e-02,  1.0740e+00,  8.1540e-01,  2.5069e+00,  5.1486e-01,
          1.6352e-01, -7.3471e-02,  4.4572e-01,  1.4972e+00,  5.2158e-02,
          7.9582e-01,  2.9158e-01, -6.4010e-02,  6.5055e-01,  2.6961e-01,
          1.1019e+00, -2.1620e-02,  1.4438e+00,  2.6039e-01,  6.5363e-01,
          1.6419e+00,  2.3927e+00,  5.0350e-01,  2.3873e-01,  1.2274e-01,
          1.2214e+00,  6.6991e-01,  2.8396e-01,  7.2034e-01,  2.9561e-02,
          1.0242e+00,  3.5087e-01,  6.7845e-01,  1.1227e+00, -4.0416e-01,
          1.3949e-03, -4.0837e-01,  1.0712e+00,  3.3779e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
308000 loss tensor(0.0666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8177e+00,  1.4340e+00,  4.9293e-01,  2.7423e+00,  5.2316e-01,
         -5.5601e-01, -2.9366e-01,  1.0856e+00,  8.0711e-01,  3.2973e-01,
         -5.0734e-02,  1.0737e+00,  8.1624e-01,  2.5056e+00,  5.1612e-01,
          1.6416e-01, -7.2893e-02,  4.4605e-01,  1.4980e+00,  5.4369e-02,
          7.9456e-01,  2.9079e-01, -6.3294e-02,  6.5193e-01,  2.6929e-01,
          1.1001e+00, -2.2064e-02,  1.4446e+00,  2.6106e-01,  6.5532e-01,
          1.6421e+00,  2.3904e+00,  5.0165e-01,  2.3783e-01,  1.2178e-01,
          1.2218e+00,  6.6936e-01,  2.8456e-01,  7.1976e-01,  2.8592e-02,
          1.0242e+00,  3.4983e-01,  6.7797e-01,  1.1220e+00, -4.0458e-01,
          3.9167e-04, -4.0712e-01,  1.0716e+00,  3.3857e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
309000 loss tensor(0.0769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0424, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8173e+00,  1.4329e+00,  4.9470e-01,  2.7399e+00,  5.2334e-01,
         -5.5572e-01, -2.9373e-01,  1.0835e+00,  8.0659e-01,  3.2949e-01,
         -5.0826e-02,  1.0732e+00,  8.1470e-01,  2.5042e+00,  5.1535e-01,
          1.6402e-01, -7.2672e-02,  4.4569e-01,  1.4978e+00,  5.4855e-02,
          7.9327e-01,  2.9106e-01, -6.3062e-02,  6.5226e-01,  2.6886e-01,
          1.0993e+00, -2.2401e-02,  1.4439e+00,  2.6127e-01,  6.5511e-01,
          1.6415e+00,  2.3892e+00,  5.0186e-01,  2.3786e-01,  1.2136e-01,
          1.2222e+00,  6.6982e-01,  2.8524e-01,  7.2076e-01,  2.8799e-02,
          1.0239e+00,  3.5062e-01,  6.7873e-01,  1.1222e+00, -4.0447e-01,
          2.1485e-04, -4.0769e-01,  1.0719e+00,  3.3756e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
310000 loss tensor(0.0716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8171e+00,  1.4318e+00,  4.9284e-01,  2.7374e+00,  5.2152e-01,
         -5.5599e-01, -2.9489e-01,  1.0816e+00,  8.0642e-01,  3.2857e-01,
         -5.1827e-02,  1.0727e+00,  8.1462e-01,  2.5030e+00,  5.1558e-01,
          1.6391e-01, -7.2285e-02,  4.4505e-01,  1.4977e+00,  5.4663e-02,
          7.9343e-01,  2.9121e-01, -6.2854e-02,  6.5147e-01,  2.6753e-01,
          1.0986e+00, -2.2441e-02,  1.4441e+00,  2.6129e-01,  6.5479e-01,
          1.6410e+00,  2.3882e+00,  5.0220e-01,  2.3729e-01,  1.2196e-01,
          1.2214e+00,  6.6965e-01,  2.8432e-01,  7.2140e-01,  2.9407e-02,
          1.0241e+00,  3.4978e-01,  6.7911e-01,  1.1220e+00, -4.0446e-01,
          1.5705e-05, -4.0691e-01,  1.0704e+00,  3.3854e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
311000 loss tensor(0.0709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0397, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8184e+00,  1.4306e+00,  4.9383e-01,  2.7344e+00,  5.1976e-01,
         -5.5546e-01, -2.9546e-01,  1.0806e+00,  8.0586e-01,  3.2813e-01,
         -5.1655e-02,  1.0725e+00,  8.1369e-01,  2.5024e+00,  5.1541e-01,
          1.6321e-01, -7.1904e-02,  4.4461e-01,  1.4958e+00,  5.3425e-02,
          7.9302e-01,  2.9080e-01, -6.3126e-02,  6.5161e-01,  2.6736e-01,
          1.0973e+00, -2.2413e-02,  1.4437e+00,  2.6113e-01,  6.5448e-01,
          1.6409e+00,  2.3873e+00,  5.0241e-01,  2.3761e-01,  1.2137e-01,
          1.2212e+00,  6.6993e-01,  2.8445e-01,  7.2183e-01,  2.9761e-02,
          1.0241e+00,  3.4941e-01,  6.7900e-01,  1.1215e+00, -4.0378e-01,
         -3.1032e-05, -4.0659e-01,  1.0698e+00,  3.3882e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
312000 loss tensor(0.0631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8179e+00,  1.4297e+00,  4.9400e-01,  2.7326e+00,  5.1914e-01,
         -5.5566e-01, -2.9518e-01,  1.0793e+00,  8.0524e-01,  3.2808e-01,
         -5.2660e-02,  1.0721e+00,  8.1321e-01,  2.5012e+00,  5.1532e-01,
          1.6294e-01, -7.2161e-02,  4.4397e-01,  1.4957e+00,  5.4288e-02,
          7.9270e-01,  2.9122e-01, -6.2801e-02,  6.5102e-01,  2.6710e-01,
          1.0963e+00, -2.2284e-02,  1.4435e+00,  2.6120e-01,  6.5468e-01,
          1.6414e+00,  2.3858e+00,  5.0211e-01,  2.3759e-01,  1.2192e-01,
          1.2206e+00,  6.6960e-01,  2.8441e-01,  7.2135e-01,  2.9652e-02,
          1.0238e+00,  3.4879e-01,  6.7905e-01,  1.1212e+00, -4.0404e-01,
         -3.3740e-04, -4.0609e-01,  1.0700e+00,  3.3882e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
313000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8201e+00,  1.4307e+00,  4.9575e-01,  2.7319e+00,  5.1716e-01,
         -5.5571e-01, -2.9369e-01,  1.0784e+00,  8.0587e-01,  3.2916e-01,
         -5.3690e-02,  1.0733e+00,  8.1172e-01,  2.5015e+00,  5.1421e-01,
          1.6236e-01, -7.3958e-02,  4.4288e-01,  1.4945e+00,  5.5107e-02,
          7.9361e-01,  2.9328e-01, -6.2875e-02,  6.5212e-01,  2.6839e-01,
          1.0977e+00, -2.2338e-02,  1.4422e+00,  2.5981e-01,  6.5384e-01,
          1.6418e+00,  2.3864e+00,  5.0135e-01,  2.3882e-01,  1.2193e-01,
          1.2193e+00,  6.6760e-01,  2.8361e-01,  7.2040e-01,  2.9566e-02,
          1.0221e+00,  3.4889e-01,  6.7775e-01,  1.1206e+00, -4.0230e-01,
          1.1829e-03, -4.0685e-01,  1.0685e+00,  3.3811e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
314000 loss tensor(0.0771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0423, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8197e+00,  1.4296e+00,  4.9502e-01,  2.7300e+00,  5.1708e-01,
         -5.5474e-01, -2.9480e-01,  1.0778e+00,  8.0472e-01,  3.2858e-01,
         -5.3725e-02,  1.0729e+00,  8.1344e-01,  2.5003e+00,  5.1436e-01,
          1.6176e-01, -7.3296e-02,  4.4197e-01,  1.4970e+00,  5.5376e-02,
          7.9301e-01,  2.9212e-01, -6.3345e-02,  6.5271e-01,  2.6741e-01,
          1.0950e+00, -2.2526e-02,  1.4422e+00,  2.6009e-01,  6.5347e-01,
          1.6425e+00,  2.3840e+00,  5.0262e-01,  2.3865e-01,  1.2305e-01,
          1.2195e+00,  6.6806e-01,  2.8344e-01,  7.2092e-01,  3.0445e-02,
          1.0228e+00,  3.4770e-01,  6.7818e-01,  1.1195e+00, -4.0240e-01,
          2.6561e-04, -4.0647e-01,  1.0703e+00,  3.3770e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
315000 loss tensor(0.0761, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0417, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8189e+00,  1.4277e+00,  4.9486e-01,  2.7270e+00,  5.1441e-01,
         -5.5553e-01, -2.9571e-01,  1.0753e+00,  8.0427e-01,  3.2718e-01,
         -5.5260e-02,  1.0717e+00,  8.1168e-01,  2.4982e+00,  5.1502e-01,
          1.6212e-01, -7.2185e-02,  4.4204e-01,  1.4958e+00,  5.5153e-02,
          7.9120e-01,  2.9196e-01, -6.2360e-02,  6.5240e-01,  2.6669e-01,
          1.0940e+00, -2.1970e-02,  1.4425e+00,  2.6057e-01,  6.5396e-01,
          1.6418e+00,  2.3829e+00,  5.0165e-01,  2.3752e-01,  1.2210e-01,
          1.2194e+00,  6.6842e-01,  2.8406e-01,  7.2191e-01,  2.9625e-02,
          1.0230e+00,  3.4738e-01,  6.7906e-01,  1.1204e+00, -4.0297e-01,
         -4.5612e-05, -4.0499e-01,  1.0686e+00,  3.3869e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
316000 loss tensor(0.0743, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0411, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8198e+00,  1.4283e+00,  4.9620e-01,  2.7239e+00,  5.1448e-01,
         -5.5510e-01, -2.9508e-01,  1.0752e+00,  8.0471e-01,  3.2840e-01,
         -5.4705e-02,  1.0725e+00,  8.1055e-01,  2.4984e+00,  5.1367e-01,
          1.6104e-01, -7.2865e-02,  4.4066e-01,  1.4933e+00,  5.4102e-02,
          7.9237e-01,  2.9211e-01, -6.3224e-02,  6.5148e-01,  2.6732e-01,
          1.0942e+00, -2.3013e-02,  1.4410e+00,  2.5942e-01,  6.5284e-01,
          1.6419e+00,  2.3825e+00,  5.0159e-01,  2.3845e-01,  1.2294e-01,
          1.2180e+00,  6.6848e-01,  2.8292e-01,  7.2159e-01,  3.0619e-02,
          1.0221e+00,  3.4869e-01,  6.7856e-01,  1.1193e+00, -4.0146e-01,
          6.5987e-04, -4.0617e-01,  1.0669e+00,  3.3788e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
317000 loss tensor(0.0732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0384, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8204e+00,  1.4266e+00,  4.9727e-01,  2.7228e+00,  5.1233e-01,
         -5.5609e-01, -2.9562e-01,  1.0728e+00,  8.0284e-01,  3.2801e-01,
         -5.6203e-02,  1.0716e+00,  8.0980e-01,  2.4966e+00,  5.1484e-01,
          1.6209e-01, -7.2478e-02,  4.4100e-01,  1.4944e+00,  5.4898e-02,
          7.9051e-01,  2.9246e-01, -6.1825e-02,  6.5124e-01,  2.6582e-01,
          1.0930e+00, -2.3633e-02,  1.4422e+00,  2.6080e-01,  6.5455e-01,
          1.6407e+00,  2.3809e+00,  5.0063e-01,  2.3792e-01,  1.2200e-01,
          1.2189e+00,  6.6823e-01,  2.8417e-01,  7.2180e-01,  2.9777e-02,
          1.0222e+00,  3.4878e-01,  6.7883e-01,  1.1200e+00, -4.0231e-01,
         -4.8305e-04, -4.0498e-01,  1.0676e+00,  3.3880e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
318000 loss tensor(0.0728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8206e+00,  1.4255e+00,  4.9725e-01,  2.7212e+00,  5.1126e-01,
         -5.5588e-01, -2.9541e-01,  1.0714e+00,  8.0243e-01,  3.2758e-01,
         -5.7627e-02,  1.0710e+00,  8.0889e-01,  2.4960e+00,  5.1490e-01,
          1.6171e-01, -7.2796e-02,  4.4103e-01,  1.4925e+00,  5.4049e-02,
          7.9061e-01,  2.9330e-01, -6.1713e-02,  6.5230e-01,  2.6620e-01,
          1.0923e+00, -2.3330e-02,  1.4415e+00,  2.6026e-01,  6.5410e-01,
          1.6417e+00,  2.3798e+00,  4.9978e-01,  2.3841e-01,  1.2136e-01,
          1.2181e+00,  6.6774e-01,  2.8418e-01,  7.2209e-01,  2.9426e-02,
          1.0223e+00,  3.4757e-01,  6.7871e-01,  1.1198e+00, -4.0236e-01,
         -4.7512e-04, -4.0500e-01,  1.0675e+00,  3.3866e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
319000 loss tensor(0.0648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8210e+00,  1.4267e+00,  4.9920e-01,  2.7191e+00,  5.1035e-01,
         -5.5452e-01, -2.9514e-01,  1.0710e+00,  8.0326e-01,  3.2828e-01,
         -5.6606e-02,  1.0721e+00,  8.0980e-01,  2.4952e+00,  5.1346e-01,
          1.6007e-01, -7.2938e-02,  4.3893e-01,  1.4937e+00,  5.5687e-02,
          7.9021e-01,  2.9317e-01, -6.3317e-02,  6.5307e-01,  2.6695e-01,
          1.0916e+00, -2.2182e-02,  1.4403e+00,  2.5913e-01,  6.5300e-01,
          1.6426e+00,  2.3797e+00,  5.0066e-01,  2.3840e-01,  1.2264e-01,
          1.2170e+00,  6.6701e-01,  2.8271e-01,  7.2145e-01,  3.0680e-02,
          1.0210e+00,  3.4610e-01,  6.7786e-01,  1.1175e+00, -4.0109e-01,
          2.7050e-04, -4.0561e-01,  1.0673e+00,  3.3758e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
320000 loss tensor(0.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8207e+00,  1.4246e+00,  4.9749e-01,  2.7164e+00,  5.0788e-01,
         -5.5528e-01, -2.9708e-01,  1.0692e+00,  8.0199e-01,  3.2726e-01,
         -5.7906e-02,  1.0705e+00,  8.0904e-01,  2.4939e+00,  5.1431e-01,
          1.6066e-01, -7.1859e-02,  4.3906e-01,  1.4919e+00,  5.4672e-02,
          7.8950e-01,  2.9253e-01, -6.2101e-02,  6.5296e-01,  2.6540e-01,
          1.0899e+00, -2.3139e-02,  1.4409e+00,  2.5991e-01,  6.5338e-01,
          1.6409e+00,  2.3785e+00,  5.0022e-01,  2.3782e-01,  1.2223e-01,
          1.2174e+00,  6.6817e-01,  2.8400e-01,  7.2312e-01,  3.0099e-02,
          1.0220e+00,  3.4614e-01,  6.7938e-01,  1.1186e+00, -4.0149e-01,
         -3.2324e-04, -4.0426e-01,  1.0671e+00,  3.3855e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
321000 loss tensor(0.0670, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8217e+00,  1.4236e+00,  4.9800e-01,  2.7139e+00,  5.0762e-01,
         -5.5594e-01, -2.9601e-01,  1.0677e+00,  8.0175e-01,  3.2679e-01,
         -5.9155e-02,  1.0703e+00,  8.0832e-01,  2.4929e+00,  5.1464e-01,
          1.6077e-01, -7.2453e-02,  4.3924e-01,  1.4916e+00,  5.4376e-02,
          7.8890e-01,  2.9335e-01, -6.1432e-02,  6.5240e-01,  2.6516e-01,
          1.0905e+00, -2.3076e-02,  1.4409e+00,  2.6011e-01,  6.5347e-01,
          1.6412e+00,  2.3763e+00,  4.9938e-01,  2.3859e-01,  1.2213e-01,
          1.2168e+00,  6.6759e-01,  2.8334e-01,  7.2314e-01,  2.9433e-02,
          1.0214e+00,  3.4641e-01,  6.7931e-01,  1.1182e+00, -4.0226e-01,
         -1.0233e-03, -4.0396e-01,  1.0659e+00,  3.3836e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
322000 loss tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8221e+00,  1.4231e+00,  4.9862e-01,  2.7122e+00,  5.0653e-01,
         -5.5607e-01, -2.9639e-01,  1.0655e+00,  8.0161e-01,  3.2655e-01,
         -5.9614e-02,  1.0700e+00,  8.0813e-01,  2.4921e+00,  5.1431e-01,
          1.6056e-01, -7.2582e-02,  4.3850e-01,  1.4919e+00,  5.5240e-02,
          7.8836e-01,  2.9336e-01, -6.1317e-02,  6.5191e-01,  2.6476e-01,
          1.0899e+00, -2.3506e-02,  1.4403e+00,  2.5989e-01,  6.5375e-01,
          1.6410e+00,  2.3751e+00,  4.9915e-01,  2.3852e-01,  1.2195e-01,
          1.2169e+00,  6.6773e-01,  2.8281e-01,  7.2318e-01,  2.9826e-02,
          1.0212e+00,  3.4616e-01,  6.7929e-01,  1.1176e+00, -4.0111e-01,
         -9.5220e-04, -4.0403e-01,  1.0661e+00,  3.3880e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
323000 loss tensor(0.0606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8229e+00,  1.4238e+00,  4.9992e-01,  2.7109e+00,  5.0468e-01,
         -5.5412e-01, -2.9573e-01,  1.0662e+00,  8.0198e-01,  3.2760e-01,
         -5.9064e-02,  1.0709e+00,  8.0783e-01,  2.4927e+00,  5.1333e-01,
          1.5858e-01, -7.2873e-02,  4.3710e-01,  1.4918e+00,  5.6099e-02,
          7.8955e-01,  2.9416e-01, -6.2669e-02,  6.5346e-01,  2.6566e-01,
          1.0894e+00, -2.2749e-02,  1.4389e+00,  2.5804e-01,  6.5200e-01,
          1.6413e+00,  2.3748e+00,  5.0020e-01,  2.3868e-01,  1.2281e-01,
          1.2153e+00,  6.6623e-01,  2.8174e-01,  7.2219e-01,  3.0695e-02,
          1.0198e+00,  3.4491e-01,  6.7825e-01,  1.1161e+00, -3.9936e-01,
          8.8870e-04, -4.0473e-01,  1.0649e+00,  3.3749e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
324000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8230e+00,  1.4219e+00,  4.9981e-01,  2.7078e+00,  5.0491e-01,
         -5.5488e-01, -2.9594e-01,  1.0645e+00,  8.0112e-01,  3.2711e-01,
         -5.9780e-02,  1.0701e+00,  8.0605e-01,  2.4912e+00,  5.1319e-01,
          1.5896e-01, -7.2862e-02,  4.3684e-01,  1.4910e+00,  5.5826e-02,
          7.8834e-01,  2.9352e-01, -6.2247e-02,  6.5261e-01,  2.6458e-01,
          1.0883e+00, -2.2677e-02,  1.4385e+00,  2.5867e-01,  6.5240e-01,
          1.6420e+00,  2.3733e+00,  4.9961e-01,  2.3955e-01,  1.2305e-01,
          1.2156e+00,  6.6710e-01,  2.8224e-01,  7.2309e-01,  3.0717e-02,
          1.0203e+00,  3.4566e-01,  6.7928e-01,  1.1171e+00, -3.9993e-01,
         -1.4585e-04, -4.0458e-01,  1.0649e+00,  3.3697e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
325000 loss tensor(0.0729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0406, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8236e+00,  1.4229e+00,  5.0164e-01,  2.7075e+00,  5.0268e-01,
         -5.5491e-01, -2.9601e-01,  1.0634e+00,  8.0090e-01,  3.2750e-01,
         -6.0559e-02,  1.0707e+00,  8.0626e-01,  2.4896e+00,  5.1293e-01,
          1.5840e-01, -7.3237e-02,  4.3608e-01,  1.4913e+00,  5.6255e-02,
          7.8829e-01,  2.9459e-01, -6.2490e-02,  6.5449e-01,  2.6557e-01,
          1.0880e+00, -2.2726e-02,  1.4385e+00,  2.5843e-01,  6.5239e-01,
          1.6411e+00,  2.3731e+00,  4.9951e-01,  2.3870e-01,  1.2286e-01,
          1.2146e+00,  6.6562e-01,  2.8192e-01,  7.2253e-01,  3.0655e-02,
          1.0194e+00,  3.4441e-01,  6.7820e-01,  1.1158e+00, -3.9981e-01,
         -1.5075e-04, -4.0408e-01,  1.0645e+00,  3.3743e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
326000 loss tensor(0.0738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0408, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8230e+00,  1.4219e+00,  5.0220e-01,  2.7039e+00,  5.0008e-01,
         -5.5541e-01, -2.9716e-01,  1.0608e+00,  7.9935e-01,  3.2667e-01,
         -6.2016e-02,  1.0697e+00,  8.0553e-01,  2.4876e+00,  5.1400e-01,
          1.5937e-01, -7.2556e-02,  4.3661e-01,  1.4906e+00,  5.7169e-02,
          7.8642e-01,  2.9444e-01, -6.0931e-02,  6.5333e-01,  2.6464e-01,
          1.0865e+00, -2.4018e-02,  1.4391e+00,  2.5940e-01,  6.5349e-01,
          1.6407e+00,  2.3714e+00,  4.9800e-01,  2.3800e-01,  1.2158e-01,
          1.2152e+00,  6.6584e-01,  2.8315e-01,  7.2285e-01,  2.9696e-02,
          1.0199e+00,  3.4478e-01,  6.7856e-01,  1.1162e+00, -4.0022e-01,
         -1.2202e-03, -4.0275e-01,  1.0648e+00,  3.3874e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
327000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8244e+00,  1.4214e+00,  5.0232e-01,  2.7021e+00,  4.9974e-01,
         -5.5569e-01, -2.9610e-01,  1.0602e+00,  8.0022e-01,  3.2727e-01,
         -6.2462e-02,  1.0700e+00,  8.0433e-01,  2.4880e+00,  5.1296e-01,
          1.5850e-01, -7.3542e-02,  4.3542e-01,  1.4899e+00,  5.6256e-02,
          7.8742e-01,  2.9534e-01, -6.1473e-02,  6.5447e-01,  2.6477e-01,
          1.0876e+00, -2.3549e-02,  1.4380e+00,  2.5841e-01,  6.5266e-01,
          1.6415e+00,  2.3699e+00,  4.9796e-01,  2.3940e-01,  1.2238e-01,
          1.2138e+00,  6.6503e-01,  2.8207e-01,  7.2291e-01,  2.9758e-02,
          1.0186e+00,  3.4461e-01,  6.7812e-01,  1.1159e+00, -3.9928e-01,
         -4.2685e-04, -4.0382e-01,  1.0629e+00,  3.3731e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
328000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8248e+00,  1.4187e+00,  5.0106e-01,  2.7000e+00,  4.9847e-01,
         -5.5581e-01, -2.9760e-01,  1.0580e+00,  7.9886e-01,  3.2570e-01,
         -6.3020e-02,  1.0685e+00,  8.0493e-01,  2.4857e+00,  5.1379e-01,
          1.5875e-01, -7.2475e-02,  4.3574e-01,  1.4889e+00,  5.5651e-02,
          7.8639e-01,  2.9485e-01, -6.1009e-02,  6.5313e-01,  2.6364e-01,
          1.0856e+00, -2.3406e-02,  1.4386e+00,  2.5920e-01,  6.5257e-01,
          1.6409e+00,  2.3681e+00,  4.9858e-01,  2.3856e-01,  1.2163e-01,
          1.2143e+00,  6.6567e-01,  2.8269e-01,  7.2412e-01,  3.0144e-02,
          1.0192e+00,  3.4389e-01,  6.7928e-01,  1.1157e+00, -4.0033e-01,
         -1.5355e-03, -4.0255e-01,  1.0642e+00,  3.3838e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
329000 loss tensor(0.0753, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0417, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8247e+00,  1.4199e+00,  5.0348e-01,  2.6987e+00,  4.9649e-01,
         -5.5567e-01, -2.9670e-01,  1.0573e+00,  7.9954e-01,  3.2739e-01,
         -6.4148e-02,  1.0695e+00,  8.0318e-01,  2.4853e+00,  5.1256e-01,
          1.5761e-01, -7.3408e-02,  4.3446e-01,  1.4885e+00,  5.6211e-02,
          7.8639e-01,  2.9545e-01, -6.1408e-02,  6.5387e-01,  2.6407e-01,
          1.0857e+00, -2.3627e-02,  1.4374e+00,  2.5795e-01,  6.5194e-01,
          1.6418e+00,  2.3682e+00,  4.9771e-01,  2.3965e-01,  1.2211e-01,
          1.2132e+00,  6.6442e-01,  2.8159e-01,  7.2299e-01,  2.9705e-02,
          1.0177e+00,  3.4409e-01,  6.7805e-01,  1.1147e+00, -3.9862e-01,
         -4.0523e-04, -4.0312e-01,  1.0626e+00,  3.3765e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
330000 loss tensor(0.0672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0327, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8235e+00,  1.4186e+00,  5.0273e-01,  2.6955e+00,  4.9527e-01,
         -5.5538e-01, -2.9715e-01,  1.0567e+00,  7.9873e-01,  3.2637e-01,
         -6.3634e-02,  1.0688e+00,  8.0400e-01,  2.4849e+00,  5.1237e-01,
          1.5714e-01, -7.3078e-02,  4.3377e-01,  1.4887e+00,  5.5355e-02,
          7.8580e-01,  2.9450e-01, -6.1796e-02,  6.5336e-01,  2.6341e-01,
          1.0844e+00, -2.3788e-02,  1.4368e+00,  2.5763e-01,  6.5165e-01,
          1.6417e+00,  2.3666e+00,  4.9811e-01,  2.3977e-01,  1.2280e-01,
          1.2129e+00,  6.6474e-01,  2.8134e-01,  7.2373e-01,  3.1080e-02,
          1.0181e+00,  3.4308e-01,  6.7828e-01,  1.1137e+00, -3.9813e-01,
         -4.7891e-04, -4.0301e-01,  1.0627e+00,  3.3744e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
331000 loss tensor(0.0629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8255e+00,  1.4173e+00,  5.0315e-01,  2.6942e+00,  4.9394e-01,
         -5.5598e-01, -2.9858e-01,  1.0529e+00,  7.9768e-01,  3.2534e-01,
         -6.4922e-02,  1.0676e+00,  8.0328e-01,  2.4832e+00,  5.1326e-01,
          1.5780e-01, -7.1638e-02,  4.3448e-01,  1.4874e+00,  5.6302e-02,
          7.8498e-01,  2.9467e-01, -6.0758e-02,  6.5371e-01,  2.6246e-01,
          1.0830e+00, -2.4038e-02,  1.4375e+00,  2.5868e-01,  6.5243e-01,
          1.6406e+00,  2.3647e+00,  4.9771e-01,  2.3833e-01,  1.2182e-01,
          1.2129e+00,  6.6533e-01,  2.8226e-01,  7.2487e-01,  3.0339e-02,
          1.0190e+00,  3.4308e-01,  6.7929e-01,  1.1146e+00, -3.9916e-01,
         -1.4825e-03, -4.0211e-01,  1.0623e+00,  3.3778e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
332000 loss tensor(0.0748, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8251e+00,  1.4158e+00,  5.0339e-01,  2.6922e+00,  4.9182e-01,
         -5.5619e-01, -2.9840e-01,  1.0526e+00,  7.9718e-01,  3.2545e-01,
         -6.5862e-02,  1.0676e+00,  8.0272e-01,  2.4815e+00,  5.1316e-01,
          1.5730e-01, -7.1995e-02,  4.3276e-01,  1.4877e+00,  5.6357e-02,
          7.8360e-01,  2.9484e-01, -6.0944e-02,  6.5368e-01,  2.6243e-01,
          1.0819e+00, -2.3730e-02,  1.4373e+00,  2.5847e-01,  6.5226e-01,
          1.6403e+00,  2.3635e+00,  4.9783e-01,  2.3858e-01,  1.2253e-01,
          1.2134e+00,  6.6479e-01,  2.8230e-01,  7.2478e-01,  3.0338e-02,
          1.0185e+00,  3.4268e-01,  6.7919e-01,  1.1141e+00, -3.9892e-01,
         -1.8793e-03, -4.0173e-01,  1.0624e+00,  3.3816e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
333000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8242e+00,  1.4165e+00,  5.0337e-01,  2.6888e+00,  4.9128e-01,
         -5.5627e-01, -2.9822e-01,  1.0511e+00,  7.9658e-01,  3.2494e-01,
         -6.6982e-02,  1.0669e+00,  8.0234e-01,  2.4807e+00,  5.1341e-01,
          1.5734e-01, -7.2324e-02,  4.3287e-01,  1.4879e+00,  5.6836e-02,
          7.8385e-01,  2.9498e-01, -6.0462e-02,  6.5330e-01,  2.6260e-01,
          1.0820e+00, -2.3794e-02,  1.4370e+00,  2.5840e-01,  6.5194e-01,
          1.6395e+00,  2.3621e+00,  4.9693e-01,  2.3854e-01,  1.2239e-01,
          1.2131e+00,  6.6507e-01,  2.8185e-01,  7.2471e-01,  3.0783e-02,
          1.0184e+00,  3.4311e-01,  6.7957e-01,  1.1137e+00, -3.9827e-01,
         -1.9269e-03, -4.0142e-01,  1.0618e+00,  3.3786e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
334000 loss tensor(0.0585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8255e+00,  1.4154e+00,  5.0426e-01,  2.6873e+00,  4.8915e-01,
         -5.5571e-01, -2.9910e-01,  1.0496e+00,  7.9598e-01,  3.2516e-01,
         -6.7438e-02,  1.0669e+00,  8.0218e-01,  2.4797e+00,  5.1314e-01,
          1.5684e-01, -7.1825e-02,  4.3241e-01,  1.4875e+00,  5.6791e-02,
          7.8279e-01,  2.9417e-01, -6.0799e-02,  6.5338e-01,  2.6154e-01,
          1.0809e+00, -2.4143e-02,  1.4366e+00,  2.5825e-01,  6.5223e-01,
          1.6396e+00,  2.3610e+00,  4.9688e-01,  2.3851e-01,  1.2238e-01,
          1.2127e+00,  6.6531e-01,  2.8236e-01,  7.2495e-01,  3.0975e-02,
          1.0180e+00,  3.4212e-01,  6.7996e-01,  1.1137e+00, -3.9825e-01,
         -1.9797e-03, -4.0126e-01,  1.0614e+00,  3.3805e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
335000 loss tensor(0.0749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8261e+00,  1.4155e+00,  5.0667e-01,  2.6853e+00,  4.8874e-01,
         -5.5658e-01, -2.9866e-01,  1.0488e+00,  7.9660e-01,  3.2525e-01,
         -6.8241e-02,  1.0674e+00,  7.9936e-01,  2.4795e+00,  5.1162e-01,
          1.5635e-01, -7.1635e-02,  4.3210e-01,  1.4868e+00,  5.6824e-02,
          7.8307e-01,  2.9494e-01, -6.0530e-02,  6.5462e-01,  2.6253e-01,
          1.0804e+00, -2.4676e-02,  1.4353e+00,  2.5748e-01,  6.5138e-01,
          1.6394e+00,  2.3597e+00,  4.9598e-01,  2.3813e-01,  1.2180e-01,
          1.2110e+00,  6.6414e-01,  2.8127e-01,  7.2485e-01,  3.0323e-02,
          1.0177e+00,  3.4303e-01,  6.7898e-01,  1.1137e+00, -3.9741e-01,
         -1.2787e-03, -4.0247e-01,  1.0609e+00,  3.3696e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
336000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8266e+00,  1.4148e+00,  5.0507e-01,  2.6842e+00,  4.8698e-01,
         -5.5610e-01, -2.9784e-01,  1.0482e+00,  7.9638e-01,  3.2636e-01,
         -6.8405e-02,  1.0676e+00,  7.9971e-01,  2.4787e+00,  5.1140e-01,
          1.5544e-01, -7.3842e-02,  4.3034e-01,  1.4858e+00,  5.6717e-02,
          7.8280e-01,  2.9667e-01, -6.0871e-02,  6.5446e-01,  2.6238e-01,
          1.0811e+00, -2.4512e-02,  1.4349e+00,  2.5656e-01,  6.5165e-01,
          1.6398e+00,  2.3600e+00,  4.9603e-01,  2.4040e-01,  1.2255e-01,
          1.2105e+00,  6.6290e-01,  2.8097e-01,  7.2403e-01,  3.0635e-02,
          1.0162e+00,  3.4157e-01,  6.7833e-01,  1.1120e+00, -3.9680e-01,
         -7.4552e-04, -4.0190e-01,  1.0591e+00,  3.3709e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
337000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8271e+00,  1.4142e+00,  5.0663e-01,  2.6828e+00,  4.8471e-01,
         -5.5506e-01, -2.9805e-01,  1.0476e+00,  7.9595e-01,  3.2571e-01,
         -6.8411e-02,  1.0678e+00,  7.9988e-01,  2.4778e+00,  5.1107e-01,
          1.5487e-01, -7.3177e-02,  4.2995e-01,  1.4860e+00,  5.7144e-02,
          7.8285e-01,  2.9628e-01, -6.1472e-02,  6.5420e-01,  2.6220e-01,
          1.0799e+00, -2.4198e-02,  1.4347e+00,  2.5640e-01,  6.5075e-01,
          1.6396e+00,  2.3591e+00,  4.9670e-01,  2.3980e-01,  1.2243e-01,
          1.2099e+00,  6.6304e-01,  2.8064e-01,  7.2454e-01,  3.1198e-02,
          1.0160e+00,  3.4067e-01,  6.7838e-01,  1.1114e+00, -3.9613e-01,
         -6.7110e-04, -4.0142e-01,  1.0600e+00,  3.3710e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
338000 loss tensor(0.0695, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0364, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8268e+00,  1.4130e+00,  5.0553e-01,  2.6796e+00,  4.8272e-01,
         -5.5557e-01, -2.9975e-01,  1.0449e+00,  7.9471e-01,  3.2491e-01,
         -6.9574e-02,  1.0664e+00,  7.9934e-01,  2.4753e+00,  5.1216e-01,
          1.5558e-01, -7.2355e-02,  4.3000e-01,  1.4853e+00,  5.6925e-02,
          7.8150e-01,  2.9540e-01, -6.0192e-02,  6.5293e-01,  2.6072e-01,
          1.0781e+00, -2.4653e-02,  1.4355e+00,  2.5734e-01,  6.5159e-01,
          1.6381e+00,  2.3571e+00,  4.9608e-01,  2.3855e-01,  1.2194e-01,
          1.2108e+00,  6.6387e-01,  2.8145e-01,  7.2535e-01,  3.0904e-02,
          1.0169e+00,  3.4029e-01,  6.7970e-01,  1.1120e+00, -3.9736e-01,
         -2.0972e-03, -4.0023e-01,  1.0600e+00,  3.3786e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
339000 loss tensor(0.0614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8270e+00,  1.4136e+00,  5.0803e-01,  2.6773e+00,  4.8111e-01,
         -5.5517e-01, -2.9816e-01,  1.0442e+00,  7.9520e-01,  3.2594e-01,
         -7.0179e-02,  1.0668e+00,  7.9781e-01,  2.4749e+00,  5.1207e-01,
          1.5520e-01, -7.3563e-02,  4.2943e-01,  1.4843e+00,  5.7252e-02,
          7.8172e-01,  2.9691e-01, -6.0260e-02,  6.5429e-01,  2.6156e-01,
          1.0791e+00, -2.5491e-02,  1.4351e+00,  2.5675e-01,  6.5108e-01,
          1.6391e+00,  2.3564e+00,  4.9553e-01,  2.4021e-01,  1.2205e-01,
          1.2095e+00,  6.6264e-01,  2.8084e-01,  7.2470e-01,  3.0863e-02,
          1.0155e+00,  3.4109e-01,  6.7845e-01,  1.1111e+00, -3.9655e-01,
         -1.7352e-03, -4.0015e-01,  1.0587e+00,  3.3760e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
340000 loss tensor(0.0708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0370, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8269e+00,  1.4125e+00,  5.0686e-01,  2.6760e+00,  4.8131e-01,
         -5.5596e-01, -2.9935e-01,  1.0439e+00,  7.9456e-01,  3.2516e-01,
         -7.0476e-02,  1.0668e+00,  7.9799e-01,  2.4742e+00,  5.1063e-01,
          1.5409e-01, -7.3154e-02,  4.2854e-01,  1.4847e+00,  5.6418e-02,
          7.8258e-01,  2.9715e-01, -6.0948e-02,  6.5423e-01,  2.6111e-01,
          1.0777e+00, -2.3989e-02,  1.4342e+00,  2.5626e-01,  6.5049e-01,
          1.6378e+00,  2.3550e+00,  4.9587e-01,  2.3979e-01,  1.2323e-01,
          1.2085e+00,  6.6280e-01,  2.8028e-01,  7.2544e-01,  3.1330e-02,
          1.0157e+00,  3.3999e-01,  6.7872e-01,  1.1111e+00, -3.9645e-01,
         -1.2525e-03, -4.0079e-01,  1.0578e+00,  3.3676e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
341000 loss tensor(0.0688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8286e+00,  1.4125e+00,  5.0944e-01,  2.6747e+00,  4.7701e-01,
         -5.5654e-01, -2.9911e-01,  1.0413e+00,  7.9454e-01,  3.2540e-01,
         -7.2257e-02,  1.0669e+00,  7.9713e-01,  2.4727e+00,  5.1193e-01,
          1.5512e-01, -7.3118e-02,  4.2909e-01,  1.4842e+00,  5.8159e-02,
          7.8084e-01,  2.9700e-01, -5.9770e-02,  6.5444e-01,  2.6126e-01,
          1.0764e+00, -2.5918e-02,  1.4351e+00,  2.5672e-01,  6.5144e-01,
          1.6374e+00,  2.3541e+00,  4.9450e-01,  2.3897e-01,  1.2138e-01,
          1.2087e+00,  6.6190e-01,  2.8067e-01,  7.2472e-01,  3.0065e-02,
          1.0152e+00,  3.4077e-01,  6.7834e-01,  1.1108e+00, -3.9673e-01,
         -1.9848e-03, -3.9927e-01,  1.0576e+00,  3.3810e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
342000 loss tensor(0.0636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8278e+00,  1.4109e+00,  5.0852e-01,  2.6712e+00,  4.7786e-01,
         -5.5632e-01, -2.9992e-01,  1.0410e+00,  7.9334e-01,  3.2435e-01,
         -7.1537e-02,  1.0657e+00,  7.9628e-01,  2.4732e+00,  5.1028e-01,
          1.5382e-01, -7.2811e-02,  4.2781e-01,  1.4829e+00,  5.7143e-02,
          7.8141e-01,  2.9672e-01, -6.0700e-02,  6.5355e-01,  2.6005e-01,
          1.0758e+00, -2.5405e-02,  1.4333e+00,  2.5580e-01,  6.5026e-01,
          1.6370e+00,  2.3520e+00,  4.9534e-01,  2.4008e-01,  1.2274e-01,
          1.2084e+00,  6.6310e-01,  2.8009e-01,  7.2613e-01,  3.1477e-02,
          1.0160e+00,  3.4018e-01,  6.7957e-01,  1.1107e+00, -3.9549e-01,
         -1.4157e-03, -4.0070e-01,  1.0573e+00,  3.3617e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
343000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8272,  1.4100,  0.5092,  2.6706,  0.4755, -0.5574, -0.2997,  1.0389,
          0.7923,  0.3242, -0.0744,  1.0653,  0.7958,  2.4709,  0.5111,  0.1551,
         -0.0730,  0.4280,  1.4821,  0.0574,  0.7805,  0.2977, -0.0591,  0.6540,
          0.2600,  1.0751, -0.0253,  1.4343,  0.2567,  0.6512,  1.6352,  2.3510,
          0.4939,  0.2393,  0.1216,  1.2084,  0.6629,  0.2815,  0.7264,  0.0304,
          1.0160,  0.3402,  0.6795,  1.1114, -0.3970, -0.0028, -0.3996,  1.0572,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
344000 loss tensor(0.0643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8293e+00,  1.4104e+00,  5.1105e-01,  2.6690e+00,  4.7463e-01,
         -5.5574e-01, -2.9942e-01,  1.0382e+00,  7.9307e-01,  3.2492e-01,
         -7.3639e-02,  1.0661e+00,  7.9580e-01,  2.4706e+00,  5.0993e-01,
          1.5299e-01, -7.3008e-02,  4.2650e-01,  1.4834e+00,  5.7838e-02,
          7.8015e-01,  2.9734e-01, -6.0781e-02,  6.5425e-01,  2.6082e-01,
          1.0746e+00, -2.5169e-02,  1.4332e+00,  2.5551e-01,  6.5007e-01,
          1.6355e+00,  2.3502e+00,  4.9507e-01,  2.3999e-01,  1.2236e-01,
          1.2073e+00,  6.6213e-01,  2.7964e-01,  7.2614e-01,  3.1575e-02,
          1.0151e+00,  3.3923e-01,  6.7877e-01,  1.1093e+00, -3.9562e-01,
         -1.9894e-03, -4.0025e-01,  1.0560e+00,  3.3648e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
345000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8286e+00,  1.4094e+00,  5.1032e-01,  2.6667e+00,  4.7206e-01,
         -5.5599e-01, -2.9968e-01,  1.0374e+00,  7.9232e-01,  3.2441e-01,
         -7.3538e-02,  1.0659e+00,  7.9509e-01,  2.4698e+00,  5.0985e-01,
          1.5296e-01, -7.3098e-02,  4.2588e-01,  1.4829e+00,  5.8313e-02,
          7.8074e-01,  2.9767e-01, -6.0810e-02,  6.5451e-01,  2.6102e-01,
          1.0744e+00, -2.4995e-02,  1.4332e+00,  2.5497e-01,  6.5005e-01,
          1.6351e+00,  2.3491e+00,  4.9472e-01,  2.4018e-01,  1.2234e-01,
          1.2069e+00,  6.6175e-01,  2.7992e-01,  7.2607e-01,  3.1393e-02,
          1.0145e+00,  3.3773e-01,  6.7850e-01,  1.1084e+00, -3.9496e-01,
         -1.5800e-03, -3.9985e-01,  1.0561e+00,  3.3678e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
346000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0362, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8265e+00,  1.4080e+00,  5.1131e-01,  2.6636e+00,  4.7118e-01,
         -5.5625e-01, -3.0030e-01,  1.0350e+00,  7.9136e-01,  3.2345e-01,
         -7.5482e-02,  1.0646e+00,  7.9469e-01,  2.4690e+00,  5.0957e-01,
          1.5284e-01, -7.2776e-02,  4.2566e-01,  1.4819e+00,  5.7064e-02,
          7.7905e-01,  2.9718e-01, -6.0297e-02,  6.5395e-01,  2.5932e-01,
          1.0733e+00, -2.5554e-02,  1.4326e+00,  2.5522e-01,  6.4990e-01,
          1.6333e+00,  2.3469e+00,  4.9500e-01,  2.4052e-01,  1.2223e-01,
          1.2075e+00,  6.6250e-01,  2.8027e-01,  7.2770e-01,  3.1678e-02,
          1.0150e+00,  3.3822e-01,  6.7972e-01,  1.1089e+00, -3.9509e-01,
         -2.0419e-03, -3.9992e-01,  1.0567e+00,  3.3596e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
347000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8289,  1.4079,  0.5120,  2.6627,  0.4685, -0.5573, -0.3006,  1.0339,
          0.7901,  0.3232, -0.0770,  1.0641,  0.7938,  2.4663,  0.5104,  0.1535,
         -0.0727,  0.4256,  1.4821,  0.0583,  0.7768,  0.2980, -0.0592,  0.6543,
          0.2591,  1.0728, -0.0270,  1.4338,  0.2561,  0.6505,  1.6319,  2.3457,
          0.4937,  0.2402,  0.1219,  1.2074,  0.6621,  0.2810,  0.7271,  0.0310,
          1.0146,  0.3387,  0.6798,  1.1093, -0.3963, -0.0034, -0.3988,  1.0566,
          0.3375]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
348000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8268,  1.4074,  0.5128,  2.6602,  0.4661, -0.5573, -0.3014,  1.0320,
          0.7899,  0.3231, -0.0775,  1.0636,  0.7935,  2.4656,  0.5102,  0.1530,
         -0.0722,  0.4253,  1.4821,  0.0583,  0.7777,  0.2972, -0.0595,  0.6545,
          0.2587,  1.0716, -0.0255,  1.4335,  0.2556,  0.6502,  1.6313,  2.3443,
          0.4936,  0.2396,  0.1220,  1.2069,  0.6621,  0.2805,  0.7277,  0.0315,
          1.0147,  0.3375,  0.6796,  1.1084, -0.3958, -0.0032, -0.3985,  1.0551,
          0.3371]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
349000 loss tensor(0.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8288e+00,  1.4076e+00,  5.1342e-01,  2.6588e+00,  4.6455e-01,
         -5.5718e-01, -3.0044e-01,  1.0321e+00,  7.9070e-01,  3.2412e-01,
         -7.7905e-02,  1.0648e+00,  7.9210e-01,  2.4650e+00,  5.0882e-01,
          1.5196e-01, -7.3706e-02,  4.2359e-01,  1.4808e+00,  5.7893e-02,
          7.7832e-01,  2.9867e-01, -5.9820e-02,  6.5556e-01,  2.5972e-01,
          1.0722e+00, -2.6367e-02,  1.4323e+00,  2.5443e-01,  6.4929e-01,
          1.6305e+00,  2.3444e+00,  4.9345e-01,  2.4081e-01,  1.2229e-01,
          1.2052e+00,  6.6051e-01,  2.7980e-01,  7.2665e-01,  3.1385e-02,
          1.0132e+00,  3.3745e-01,  6.7863e-01,  1.1077e+00, -3.9475e-01,
         -2.2583e-03, -3.9932e-01,  1.0543e+00,  3.3642e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
350000 loss tensor(0.0701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0392, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8277,  1.4065,  0.5124,  2.6560,  0.4616, -0.5569, -0.3026,  1.0296,
          0.7890,  0.3227, -0.0785,  1.0631,  0.7925,  2.4633,  0.5096,  0.1523,
         -0.0720,  0.4240,  1.4814,  0.0583,  0.7764,  0.2975, -0.0592,  0.6542,
          0.2581,  1.0700, -0.0259,  1.4329,  0.2551,  0.6498,  1.6285,  2.3416,
          0.4931,  0.2394,  0.1220,  1.2061,  0.6616,  0.2807,  0.7283,  0.0316,
          1.0142,  0.3364,  0.6798,  1.1081, -0.3958, -0.0033, -0.3982,  1.0550,
          0.3370]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
351000 loss tensor(0.0729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0401, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8291,  1.4067,  0.5142,  2.6548,  0.4595, -0.5584, -0.3012,  1.0284,
          0.7886,  0.3240, -0.0800,  1.0637,  0.7918,  2.4618,  0.5090,  0.1526,
         -0.0730,  0.4238,  1.4811,  0.0586,  0.7764,  0.2986, -0.0588,  0.6561,
          0.2595,  1.0699, -0.0270,  1.4332,  0.2551,  0.6502,  1.6276,  2.3404,
          0.4918,  0.2399,  0.1211,  1.2051,  0.6605,  0.2804,  0.7271,  0.0314,
          1.0136,  0.3362,  0.6788,  1.1071, -0.3956, -0.0036, -0.3980,  1.0542,
          0.3370]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
352000 loss tensor(0.0610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8288e+00,  1.4062e+00,  5.1600e-01,  2.6535e+00,  4.5810e-01,
         -5.5700e-01, -3.0173e-01,  1.0282e+00,  7.8918e-01,  3.2318e-01,
         -7.9830e-02,  1.0635e+00,  7.9090e-01,  2.4621e+00,  5.0831e-01,
          1.5078e-01, -7.3033e-02,  4.2214e-01,  1.4807e+00,  5.8907e-02,
          7.7695e-01,  2.9844e-01, -6.0239e-02,  6.5573e-01,  2.5951e-01,
          1.0685e+00, -2.5341e-02,  1.4320e+00,  2.5352e-01,  6.4871e-01,
          1.6275e+00,  2.3397e+00,  4.9352e-01,  2.4034e-01,  1.2223e-01,
          1.2040e+00,  6.6011e-01,  2.7950e-01,  7.2768e-01,  3.2416e-02,
          1.0129e+00,  3.3517e-01,  6.7902e-01,  1.1066e+00, -3.9446e-01,
         -2.4336e-03, -3.9884e-01,  1.0529e+00,  3.3556e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
353000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8284e+00,  1.4053e+00,  5.1515e-01,  2.6502e+00,  4.5592e-01,
         -5.5757e-01, -3.0316e-01,  1.0262e+00,  7.8815e-01,  3.2257e-01,
         -8.1034e-02,  1.0626e+00,  7.9022e-01,  2.4611e+00,  5.0776e-01,
          1.5139e-01, -7.1994e-02,  4.2268e-01,  1.4810e+00,  5.8469e-02,
          7.7621e-01,  2.9831e-01, -5.9151e-02,  6.5474e-01,  2.5749e-01,
          1.0680e+00, -2.5850e-02,  1.4317e+00,  2.5371e-01,  6.4892e-01,
          1.6250e+00,  2.3372e+00,  4.9218e-01,  2.4016e-01,  1.2142e-01,
          1.2045e+00,  6.6118e-01,  2.7969e-01,  7.2867e-01,  3.1822e-02,
          1.0135e+00,  3.3575e-01,  6.7998e-01,  1.1067e+00, -3.9408e-01,
         -2.3679e-03, -3.9839e-01,  1.0533e+00,  3.3547e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
354000 loss tensor(0.0690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8292e+00,  1.4055e+00,  5.1680e-01,  2.6493e+00,  4.5410e-01,
         -5.5837e-01, -3.0202e-01,  1.0263e+00,  7.8829e-01,  3.2376e-01,
         -8.1837e-02,  1.0636e+00,  7.8873e-01,  2.4600e+00,  5.0723e-01,
          1.5042e-01, -7.3817e-02,  4.2128e-01,  1.4789e+00,  5.8722e-02,
          7.7569e-01,  3.0043e-01, -5.9460e-02,  6.5546e-01,  2.5802e-01,
          1.0690e+00, -2.7093e-02,  1.4316e+00,  2.5318e-01,  6.4862e-01,
          1.6245e+00,  2.3372e+00,  4.9250e-01,  2.4213e-01,  1.2167e-01,
          1.2032e+00,  6.5943e-01,  2.7955e-01,  7.2814e-01,  3.1312e-02,
          1.0123e+00,  3.3555e-01,  6.7869e-01,  1.1060e+00, -3.9399e-01,
         -2.5977e-03, -3.9855e-01,  1.0518e+00,  3.3545e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
355000 loss tensor(0.0636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8286,  1.4033,  0.5160,  2.6475,  0.4511, -0.5597, -0.3025,  1.0236,
          0.7864,  0.3226, -0.0828,  1.0620,  0.7885,  2.4577,  0.5077,  0.1511,
         -0.0725,  0.4220,  1.4795,  0.0586,  0.7755,  0.2990, -0.0585,  0.6555,
          0.2576,  1.0673, -0.0275,  1.4326,  0.2540,  0.6491,  1.6227,  2.3347,
          0.4912,  0.2411,  0.1204,  1.2036,  0.6603,  0.2802,  0.7290,  0.0313,
          1.0129,  0.3354,  0.6796,  1.1065, -0.3952, -0.0037, -0.3975,  1.0520,
          0.3366]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
356000 loss tensor(0.0741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0409, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8308e+00,  1.4046e+00,  5.1873e-01,  2.6464e+00,  4.4924e-01,
         -5.5827e-01, -3.0160e-01,  1.0230e+00,  7.8789e-01,  3.2334e-01,
         -8.2790e-02,  1.0637e+00,  7.8769e-01,  2.4580e+00,  5.0656e-01,
          1.5009e-01, -7.3854e-02,  4.2057e-01,  1.4799e+00,  5.9363e-02,
          7.7496e-01,  3.0122e-01, -5.9116e-02,  6.5603e-01,  2.5881e-01,
          1.0680e+00, -2.7833e-02,  1.4315e+00,  2.5261e-01,  6.4802e-01,
          1.6220e+00,  2.3345e+00,  4.9148e-01,  2.4188e-01,  1.2086e-01,
          1.2019e+00,  6.5920e-01,  2.7894e-01,  7.2826e-01,  3.1388e-02,
          1.0115e+00,  3.3545e-01,  6.7892e-01,  1.1050e+00, -3.9372e-01,
         -2.4465e-03, -3.9844e-01,  1.0503e+00,  3.3588e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
357000 loss tensor(0.0601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8307e+00,  1.4039e+00,  5.1838e-01,  2.6450e+00,  4.4621e-01,
         -5.5856e-01, -3.0225e-01,  1.0219e+00,  7.8713e-01,  3.2334e-01,
         -8.4060e-02,  1.0628e+00,  7.8683e-01,  2.4572e+00,  5.0620e-01,
          1.4967e-01, -7.3628e-02,  4.1921e-01,  1.4786e+00,  5.9183e-02,
          7.7494e-01,  3.0018e-01, -5.9367e-02,  6.5587e-01,  2.5834e-01,
          1.0666e+00, -2.7978e-02,  1.4312e+00,  2.5208e-01,  6.4765e-01,
          1.6192e+00,  2.3338e+00,  4.9149e-01,  2.4189e-01,  1.2173e-01,
          1.2017e+00,  6.5912e-01,  2.7859e-01,  7.2835e-01,  3.2021e-02,
          1.0114e+00,  3.3507e-01,  6.7906e-01,  1.1046e+00, -3.9351e-01,
         -2.2533e-03, -3.9829e-01,  1.0504e+00,  3.3534e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
358000 loss tensor(0.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8304e+00,  1.4041e+00,  5.1917e-01,  2.6431e+00,  4.4440e-01,
         -5.5946e-01, -3.0259e-01,  1.0203e+00,  7.8657e-01,  3.2282e-01,
         -8.4808e-02,  1.0626e+00,  7.8648e-01,  2.4555e+00,  5.0575e-01,
          1.4974e-01, -7.3766e-02,  4.1974e-01,  1.4784e+00,  5.9298e-02,
          7.7549e-01,  3.0140e-01, -5.9008e-02,  6.5530e-01,  2.5825e-01,
          1.0667e+00, -2.6775e-02,  1.4314e+00,  2.5215e-01,  6.4785e-01,
          1.6187e+00,  2.3321e+00,  4.9072e-01,  2.4198e-01,  1.2117e-01,
          1.2014e+00,  6.5888e-01,  2.7901e-01,  7.2855e-01,  3.2126e-02,
          1.0110e+00,  3.3379e-01,  6.7882e-01,  1.1042e+00, -3.9360e-01,
         -2.6273e-03, -3.9785e-01,  1.0505e+00,  3.3545e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
359000 loss tensor(0.0690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8303,  1.4034,  0.5196,  2.6412,  0.4422, -0.5577, -0.3034,  1.0192,
          0.7859,  0.3225, -0.0852,  1.0621,  0.7861,  2.4542,  0.5053,  0.1486,
         -0.0731,  0.4184,  1.4789,  0.0607,  0.7745,  0.2997, -0.0596,  0.6552,
          0.2577,  1.0650, -0.0265,  1.4313,  0.2516,  0.6471,  1.6170,  2.3307,
          0.4916,  0.2418,  0.1215,  1.2011,  0.6595,  0.2781,  0.7292,  0.0324,
          1.0115,  0.3332,  0.6790,  1.1032, -0.3935, -0.0027, -0.3977,  1.0496,
          0.3351]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
360000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8301,  1.4017,  0.5190,  2.6386,  0.4380, -0.5600, -0.3038,  1.0176,
          0.7842,  0.3222, -0.0871,  1.0610,  0.7845,  2.4522,  0.5058,  0.1499,
         -0.0726,  0.4191,  1.4784,  0.0598,  0.7731,  0.2996, -0.0581,  0.6558,
          0.2568,  1.0637, -0.0285,  1.4320,  0.2525,  0.6482,  1.6140,  2.3291,
          0.4894,  0.2413,  0.1205,  1.2013,  0.6597,  0.2802,  0.7295,  0.0315,
          1.0118,  0.3340,  0.6796,  1.1046, -0.3946, -0.0041, -0.3967,  1.0501,
          0.3360]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
361000 loss tensor(0.0617, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8302,  1.4017,  0.5191,  2.6366,  0.4361, -0.5601, -0.3046,  1.0161,
          0.7841,  0.3216, -0.0875,  1.0605,  0.7852,  2.4521,  0.5057,  0.1491,
         -0.0721,  0.4184,  1.4778,  0.0602,  0.7730,  0.3001, -0.0583,  0.6555,
          0.2557,  1.0636, -0.0287,  1.4317,  0.2517,  0.6475,  1.6121,  2.3269,
          0.4900,  0.2412,  0.1204,  1.2009,  0.6597,  0.2790,  0.7305,  0.0322,
          1.0117,  0.3331,  0.6804,  1.1038, -0.3941, -0.0035, -0.3969,  1.0494,
          0.3360]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
362000 loss tensor(0.0719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0401, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8293,  1.4011,  0.5198,  2.6335,  0.4353, -0.5590, -0.3046,  1.0160,
          0.7844,  0.3212, -0.0877,  1.0606,  0.7830,  2.4514,  0.5040,  0.1476,
         -0.0726,  0.4170,  1.4766,  0.0584,  0.7742,  0.3006, -0.0592,  0.6558,
          0.2567,  1.0630, -0.0283,  1.4307,  0.2509,  0.6461,  1.6109,  2.3257,
          0.4912,  0.2423,  0.1217,  1.1993,  0.6596,  0.2784,  0.7308,  0.0331,
          1.0116,  0.3333,  0.6802,  1.1036, -0.3934, -0.0030, -0.3977,  1.0477,
          0.3344]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
363000 loss tensor(0.0720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8301,  1.4018,  0.5218,  2.6329,  0.4316, -0.5594, -0.3039,  1.0151,
          0.7843,  0.3223, -0.0890,  1.0613,  0.7822,  2.4488,  0.5049,  0.1480,
         -0.0731,  0.4169,  1.4769,  0.0600,  0.7728,  0.3012, -0.0586,  0.6560,
          0.2572,  1.0633, -0.0292,  1.4322,  0.2514,  0.6468,  1.6104,  2.3254,
          0.4900,  0.2425,  0.1213,  1.1987,  0.6585,  0.2787,  0.7299,  0.0326,
          1.0102,  0.3329,  0.6791,  1.1024, -0.3941, -0.0039, -0.3961,  1.0471,
          0.3357]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
364000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8316,  1.4016,  0.5222,  2.6317,  0.4296, -0.5590, -0.3045,  1.0137,
          0.7836,  0.3222, -0.0887,  1.0607,  0.7828,  2.4492,  0.5031,  0.1469,
         -0.0732,  0.4156,  1.4773,  0.0608,  0.7723,  0.3014, -0.0591,  0.6566,
          0.2564,  1.0624, -0.0278,  1.4308,  0.2501,  0.6462,  1.6083,  2.3238,
          0.4902,  0.2424,  0.1210,  1.1983,  0.6584,  0.2780,  0.7300,  0.0332,
          1.0104,  0.3313,  0.6795,  1.1018, -0.3931, -0.0029, -0.3974,  1.0472,
          0.3347]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
365000 loss tensor(0.0618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8310,  1.3995,  0.5214,  2.6294,  0.4264, -0.5611, -0.3054,  1.0118,
          0.7822,  0.3214, -0.0912,  1.0599,  0.7808,  2.4465,  0.5041,  0.1481,
         -0.0724,  0.4164,  1.4761,  0.0593,  0.7719,  0.3012, -0.0577,  0.6554,
          0.2558,  1.0611, -0.0291,  1.4321,  0.2512,  0.6469,  1.6056,  2.3220,
          0.4890,  0.2422,  0.1199,  1.1986,  0.6591,  0.2789,  0.7310,  0.0323,
          1.0110,  0.3323,  0.6800,  1.1027, -0.3942, -0.0046, -0.3958,  1.0465,
          0.3355]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
366000 loss tensor(0.0648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8317,  1.3989,  0.5214,  2.6285,  0.4245, -0.5601, -0.3062,  1.0112,
          0.7815,  0.3207, -0.0909,  1.0590,  0.7809,  2.4453,  0.5033,  0.1469,
         -0.0720,  0.4149,  1.4762,  0.0596,  0.7718,  0.3006, -0.0581,  0.6555,
          0.2547,  1.0606, -0.0290,  1.4322,  0.2509,  0.6463,  1.6033,  2.3199,
          0.4894,  0.2417,  0.1207,  1.1981,  0.6593,  0.2785,  0.7316,  0.0336,
          1.0106,  0.3313,  0.6804,  1.1022, -0.3947, -0.0046, -0.3960,  1.0461,
          0.3354]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
367000 loss tensor(0.0612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8323,  1.4002,  0.5232,  2.6262,  0.4217, -0.5610, -0.3049,  1.0104,
          0.7822,  0.3218, -0.0919,  1.0601,  0.7800,  2.4449,  0.5021,  0.1466,
         -0.0731,  0.4151,  1.4755,  0.0592,  0.7719,  0.3021, -0.0582,  0.6559,
          0.2567,  1.0607, -0.0288,  1.4308,  0.2495,  0.6455,  1.6020,  2.3191,
          0.4882,  0.2431,  0.1199,  1.1971,  0.6578,  0.2775,  0.7308,  0.0325,
          1.0094,  0.3313,  0.6791,  1.1012, -0.3930, -0.0035, -0.3969,  1.0448,
          0.3343]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
368000 loss tensor(0.0771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0426, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8300,  1.3991,  0.5226,  2.6233,  0.4189, -0.5604, -0.3064,  1.0083,
          0.7802,  0.3205, -0.0922,  1.0585,  0.7799,  2.4433,  0.5026,  0.1467,
         -0.0717,  0.4144,  1.4757,  0.0602,  0.7703,  0.3009, -0.0582,  0.6554,
          0.2556,  1.0588, -0.0302,  1.4320,  0.2502,  0.6459,  1.5991,  2.3167,
          0.4890,  0.2419,  0.1203,  1.1978,  0.6592,  0.2787,  0.7322,  0.0335,
          1.0104,  0.3305,  0.6807,  1.1013, -0.3942, -0.0046, -0.3959,  1.0463,
          0.3351]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
369000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8321,  1.3998,  0.5245,  2.6227,  0.4164, -0.5609, -0.3059,  1.0082,
          0.7809,  0.3215, -0.0930,  1.0596,  0.7789,  2.4432,  0.5015,  0.1457,
         -0.0730,  0.4131,  1.4767,  0.0612,  0.7706,  0.3019, -0.0584,  0.6562,
          0.2561,  1.0590, -0.0291,  1.4307,  0.2489,  0.6453,  1.5979,  2.3152,
          0.4892,  0.2427,  0.1208,  1.1962,  0.6575,  0.2778,  0.7312,  0.0340,
          1.0090,  0.3299,  0.6789,  1.1000, -0.3933, -0.0038, -0.3966,  1.0453,
          0.3339]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
370000 loss tensor(0.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8328,  1.3984,  0.5251,  2.6212,  0.4129, -0.5620, -0.3053,  1.0073,
          0.7806,  0.3212, -0.0942,  1.0592,  0.7771,  2.4418,  0.5011,  0.1455,
         -0.0735,  0.4129,  1.4753,  0.0603,  0.7713,  0.3022, -0.0578,  0.6572,
          0.2559,  1.0592, -0.0306,  1.4308,  0.2485,  0.6448,  1.5965,  2.3141,
          0.4878,  0.2438,  0.1202,  1.1955,  0.6571,  0.2774,  0.7311,  0.0329,
          1.0085,  0.3304,  0.6789,  1.0999, -0.3930, -0.0034, -0.3964,  1.0434,
          0.3340]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
371000 loss tensor(0.0770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0425, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8320,  1.3988,  0.5239,  2.6187,  0.4106, -0.5606, -0.3064,  1.0065,
          0.7797,  0.3211, -0.0944,  1.0588,  0.7778,  2.4408,  0.5004,  0.1447,
         -0.0726,  0.4121,  1.4746,  0.0596,  0.7702,  0.3022, -0.0586,  0.6557,
          0.2557,  1.0575, -0.0296,  1.4307,  0.2481,  0.6440,  1.5938,  2.3123,
          0.4884,  0.2432,  0.1209,  1.1954,  0.6578,  0.2777,  0.7320,  0.0344,
          1.0089,  0.3286,  0.6792,  1.0991, -0.3932, -0.0040, -0.3966,  1.0437,
          0.3339]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
372000 loss tensor(0.0622, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8315,  1.3981,  0.5241,  2.6177,  0.4079, -0.5612, -0.3065,  1.0057,
          0.7792,  0.3207, -0.0943,  1.0582,  0.7768,  2.4389,  0.4998,  0.1441,
         -0.0727,  0.4116,  1.4746,  0.0591,  0.7703,  0.3026, -0.0587,  0.6558,
          0.2554,  1.0572, -0.0293,  1.4307,  0.2481,  0.6437,  1.5921,  2.3113,
          0.4883,  0.2433,  0.1210,  1.1947,  0.6574,  0.2774,  0.7321,  0.0346,
          1.0085,  0.3278,  0.6791,  1.0988, -0.3932, -0.0040, -0.3962,  1.0427,
          0.3334]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
373000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8316,  1.3967,  0.5253,  2.6141,  0.4035, -0.5626, -0.3073,  1.0030,
          0.7781,  0.3201, -0.0970,  1.0571,  0.7752,  2.4362,  0.5005,  0.1452,
         -0.0723,  0.4124,  1.4745,  0.0596,  0.7688,  0.3023, -0.0568,  0.6555,
          0.2545,  1.0563, -0.0314,  1.4317,  0.2490,  0.6447,  1.5893,  2.3099,
          0.4868,  0.2430,  0.1191,  1.1950,  0.6575,  0.2783,  0.7327,  0.0334,
          1.0091,  0.3294,  0.6803,  1.0998, -0.3943, -0.0052, -0.3947,  1.0426,
          0.3347]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
374000 loss tensor(0.0677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8309,  1.3968,  0.5258,  2.6123,  0.4020, -0.5620, -0.3070,  1.0034,
          0.7775,  0.3197, -0.0971,  1.0574,  0.7741,  2.4364,  0.4987,  0.1437,
         -0.0725,  0.4105,  1.4735,  0.0585,  0.7687,  0.3030, -0.0581,  0.6563,
          0.2547,  1.0561, -0.0306,  1.4303,  0.2476,  0.6429,  1.5868,  2.3072,
          0.4876,  0.2438,  0.1200,  1.1943,  0.6573,  0.2779,  0.7335,  0.0346,
          1.0090,  0.3283,  0.6797,  1.0995, -0.3931, -0.0042, -0.3962,  1.0420,
          0.3331]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
375000 loss tensor(0.0760, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0422, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8336,  1.3947,  0.5256,  2.6131,  0.3989, -0.5635, -0.3068,  1.0020,
          0.7780,  0.3198, -0.0988,  1.0578,  0.7736,  2.4349,  0.4982,  0.1433,
         -0.0729,  0.4100,  1.4728,  0.0591,  0.7699,  0.3030, -0.0579,  0.6558,
          0.2549,  1.0555, -0.0299,  1.4310,  0.2470,  0.6434,  1.5861,  2.3075,
          0.4873,  0.2442,  0.1203,  1.1924,  0.6567,  0.2770,  0.7325,  0.0348,
          1.0079,  0.3279,  0.6794,  1.0983, -0.3931, -0.0042, -0.3957,  1.0408,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
376000 loss tensor(0.0732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0401, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8310,  1.3961,  0.5273,  2.6105,  0.3955, -0.5639, -0.3079,  0.9995,
          0.7760,  0.3198, -0.1000,  1.0563,  0.7733,  2.4336,  0.4990,  0.1446,
         -0.0723,  0.4110,  1.4730,  0.0597,  0.7680,  0.3030, -0.0568,  0.6560,
          0.2542,  1.0546, -0.0312,  1.4316,  0.2476,  0.6441,  1.5826,  2.3046,
          0.4861,  0.2434,  0.1187,  1.1939,  0.6572,  0.2788,  0.7337,  0.0335,
          1.0086,  0.3277,  0.6805,  1.0986, -0.3940, -0.0050, -0.3953,  1.0413,
          0.3337]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
377000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0350, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8309,  1.3960,  0.5280,  2.6092,  0.3929, -0.5633, -0.3074,  0.9986,
          0.7752,  0.3195, -0.1012,  1.0562,  0.7729,  2.4323,  0.4987,  0.1442,
         -0.0726,  0.4100,  1.4737,  0.0608,  0.7665,  0.3033, -0.0567,  0.6569,
          0.2544,  1.0541, -0.0323,  1.4319,  0.2474,  0.6435,  1.5795,  2.3029,
          0.4854,  0.2437,  0.1183,  1.1936,  0.6567,  0.2783,  0.7334,  0.0334,
          1.0081,  0.3269,  0.6798,  1.0976, -0.3937, -0.0052, -0.3950,  1.0416,
          0.3340]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
378000 loss tensor(0.0700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8323,  1.3948,  0.5286,  2.6070,  0.3912, -0.5637, -0.3086,  0.9966,
          0.7751,  0.3193, -0.1011,  1.0557,  0.7717,  2.4310,  0.4982,  0.1440,
         -0.0719,  0.4098,  1.4722,  0.0599,  0.7679,  0.3030, -0.0568,  0.6554,
          0.2536,  1.0530, -0.0318,  1.4321,  0.2476,  0.6439,  1.5780,  2.3012,
          0.4857,  0.2440,  0.1184,  1.1926,  0.6572,  0.2783,  0.7342,  0.0343,
          1.0085,  0.3278,  0.6803,  1.0980, -0.3942, -0.0059, -0.3948,  1.0395,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
379000 loss tensor(0.0606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8333,  1.3949,  0.5288,  2.6057,  0.3885, -0.5631, -0.3087,  0.9974,
          0.7748,  0.3193, -0.1008,  1.0560,  0.7708,  2.4308,  0.4968,  0.1425,
         -0.0725,  0.4076,  1.4712,  0.0597,  0.7676,  0.3034, -0.0576,  0.6555,
          0.2538,  1.0525, -0.0318,  1.4309,  0.2458,  0.6421,  1.5762,  2.3003,
          0.4863,  0.2443,  0.1196,  1.1918,  0.6571,  0.2779,  0.7341,  0.0351,
          1.0081,  0.3270,  0.6801,  1.0970, -0.3930, -0.0047, -0.3956,  1.0396,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
380000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0377, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8325,  1.3953,  0.5296,  2.6043,  0.3859, -0.5631, -0.3088,  0.9962,
          0.7751,  0.3192, -0.1018,  1.0563,  0.7709,  2.4298,  0.4964,  0.1417,
         -0.0725,  0.4077,  1.4729,  0.0609,  0.7665,  0.3041, -0.0579,  0.6568,
          0.2544,  1.0525, -0.0307,  1.4309,  0.2454,  0.6420,  1.5739,  2.2990,
          0.4862,  0.2444,  0.1193,  1.1906,  0.6560,  0.2770,  0.7339,  0.0351,
          1.0070,  0.3249,  0.6797,  1.0955, -0.3934, -0.0047, -0.3957,  1.0396,
          0.3326]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
381000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0337, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8335,  1.3933,  0.5294,  2.6020,  0.3826, -0.5652, -0.3096,  0.9941,
          0.7737,  0.3181, -0.1038,  1.0545,  0.7701,  2.4275,  0.4963,  0.1424,
         -0.0716,  0.4086,  1.4731,  0.0605,  0.7672,  0.3036, -0.0568,  0.6562,
          0.2529,  1.0513, -0.0322,  1.4317,  0.2463,  0.6432,  1.5708,  2.2962,
          0.4846,  0.2443,  0.1181,  1.1912,  0.6566,  0.2773,  0.7356,  0.0342,
          1.0078,  0.3258,  0.6807,  1.0964, -0.3939, -0.0056, -0.3951,  1.0385,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
382000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8354,  1.3948,  0.5308,  2.6016,  0.3781, -0.5645, -0.3099,  0.9931,
          0.7738,  0.3199, -0.1041,  1.0558,  0.7688,  2.4259,  0.4966,  0.1422,
         -0.0726,  0.4068,  1.4718,  0.0613,  0.7659,  0.3044, -0.0566,  0.6570,
          0.2539,  1.0509, -0.0329,  1.4320,  0.2458,  0.6424,  1.5705,  2.2961,
          0.4845,  0.2439,  0.1181,  1.1900,  0.6552,  0.2774,  0.7336,  0.0344,
          1.0066,  0.3248,  0.6792,  1.0957, -0.3938, -0.0057, -0.3940,  1.0379,
          0.3336]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
383000 loss tensor(0.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0367, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8325,  1.3945,  0.5307,  2.5983,  0.3766, -0.5639, -0.3095,  0.9931,
          0.7735,  0.3191, -0.1042,  1.0555,  0.7684,  2.4259,  0.4949,  0.1406,
         -0.0727,  0.4056,  1.4711,  0.0600,  0.7669,  0.3038, -0.0577,  0.6568,
          0.2544,  1.0506, -0.0311,  1.4310,  0.2444,  0.6409,  1.5674,  2.2951,
          0.4854,  0.2449,  0.1191,  1.1884,  0.6558,  0.2767,  0.7346,  0.0361,
          1.0066,  0.3237,  0.6796,  1.0945, -0.3931, -0.0047, -0.3951,  1.0375,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
384000 loss tensor(0.0630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8319,  1.3930,  0.5309,  2.5963,  0.3722, -0.5644, -0.3110,  0.9911,
          0.7721,  0.3179, -0.1055,  1.0537,  0.7676,  2.4232,  0.4951,  0.1412,
         -0.0715,  0.4061,  1.4718,  0.0604,  0.7655,  0.3037, -0.0568,  0.6563,
          0.2525,  1.0488, -0.0325,  1.4321,  0.2452,  0.6418,  1.5645,  2.2931,
          0.4850,  0.2441,  0.1186,  1.1894,  0.6565,  0.2775,  0.7356,  0.0356,
          1.0071,  0.3238,  0.6807,  1.0952, -0.3938, -0.0057, -0.3937,  1.0373,
          0.3330]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
385000 loss tensor(0.0626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8337,  1.3932,  0.5322,  2.5950,  0.3695, -0.5652, -0.3099,  0.9900,
          0.7716,  0.3183, -0.1071,  1.0537,  0.7653,  2.4224,  0.4953,  0.1414,
         -0.0724,  0.4058,  1.4704,  0.0612,  0.7653,  0.3047, -0.0561,  0.6572,
          0.2530,  1.0489, -0.0332,  1.4320,  0.2450,  0.6417,  1.5619,  2.2910,
          0.4837,  0.2445,  0.1173,  1.1886,  0.6555,  0.2775,  0.7350,  0.0349,
          1.0066,  0.3244,  0.6800,  1.0951, -0.3940, -0.0060, -0.3939,  1.0361,
          0.3328]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
386000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8339,  1.3929,  0.5317,  2.5934,  0.3669, -0.5646, -0.3103,  0.9898,
          0.7722,  0.3182, -0.1074,  1.0543,  0.7652,  2.4217,  0.4934,  0.1394,
         -0.0726,  0.4042,  1.4694,  0.0595,  0.7662,  0.3051, -0.0576,  0.6557,
          0.2530,  1.0486, -0.0325,  1.4309,  0.2435,  0.6400,  1.5610,  2.2905,
          0.4853,  0.2455,  0.1192,  1.1871,  0.6552,  0.2762,  0.7354,  0.0365,
          1.0060,  0.3232,  0.6797,  1.0940, -0.3931, -0.0051, -0.3946,  1.0347,
          0.3320]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
387000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8343,  1.3928,  0.5336,  2.5934,  0.3640, -0.5648, -0.3107,  0.9888,
          0.7721,  0.3188, -0.1073,  1.0542,  0.7659,  2.4207,  0.4929,  0.1393,
         -0.0730,  0.4039,  1.4687,  0.0606,  0.7647,  0.3050, -0.0576,  0.6564,
          0.2529,  1.0482, -0.0320,  1.4311,  0.2428,  0.6403,  1.5597,  2.2893,
          0.4848,  0.2460,  0.1190,  1.1868,  0.6552,  0.2763,  0.7357,  0.0362,
          1.0058,  0.3223,  0.6802,  1.0927, -0.3928, -0.0048, -0.3945,  1.0345,
          0.3321]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
388000 loss tensor(0.0666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0347, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8337,  1.3924,  0.5339,  2.5899,  0.3615, -0.5662, -0.3118,  0.9868,
          0.7701,  0.3174, -0.1087,  1.0529,  0.7652,  2.4186,  0.4936,  0.1400,
         -0.0716,  0.4037,  1.4708,  0.0615,  0.7634,  0.3044, -0.0565,  0.6568,
          0.2523,  1.0470, -0.0330,  1.4321,  0.2438,  0.6405,  1.5553,  2.2865,
          0.4837,  0.2448,  0.1180,  1.1876,  0.6554,  0.2771,  0.7364,  0.0358,
          1.0061,  0.3220,  0.6805,  1.0933, -0.3941, -0.0065, -0.3937,  1.0352,
          0.3324]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
389000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0393, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8352,  1.3914,  0.5341,  2.5897,  0.3586, -0.5660, -0.3124,  0.9859,
          0.7697,  0.3171, -0.1095,  1.0529,  0.7634,  2.4186,  0.4922,  0.1390,
         -0.0714,  0.4023,  1.4689,  0.0601,  0.7637,  0.3047, -0.0569,  0.6557,
          0.2519,  1.0458, -0.0340,  1.4309,  0.2428,  0.6391,  1.5523,  2.2853,
          0.4841,  0.2450,  0.1185,  1.1869,  0.6558,  0.2766,  0.7370,  0.0364,
          1.0063,  0.3228,  0.6806,  1.0937, -0.3931, -0.0055, -0.3944,  1.0347,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
390000 loss tensor(0.0640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8349,  1.3923,  0.5340,  2.5876,  0.3541, -0.5673, -0.3116,  0.9846,
          0.7694,  0.3184, -0.1114,  1.0528,  0.7632,  2.4165,  0.4925,  0.1397,
         -0.0723,  0.4035,  1.4701,  0.0622,  0.7644,  0.3052, -0.0561,  0.6572,
          0.2525,  1.0460, -0.0338,  1.4317,  0.2428,  0.6405,  1.5506,  2.2840,
          0.4823,  0.2455,  0.1173,  1.1856,  0.6545,  0.2764,  0.7359,  0.0355,
          1.0051,  0.3214,  0.6799,  1.0920, -0.3933, -0.0058, -0.3934,  1.0326,
          0.3324]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
391000 loss tensor(0.0640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8350,  1.3924,  0.5360,  2.5855,  0.3532, -0.5665, -0.3122,  0.9847,
          0.7696,  0.3179, -0.1110,  1.0530,  0.7626,  2.4157,  0.4908,  0.1378,
         -0.0724,  0.4017,  1.4687,  0.0599,  0.7632,  0.3057, -0.0574,  0.6560,
          0.2527,  1.0455, -0.0335,  1.4311,  0.2417,  0.6387,  1.5490,  2.2830,
          0.4834,  0.2462,  0.1186,  1.1850,  0.6546,  0.2756,  0.7367,  0.0368,
          1.0049,  0.3212,  0.6800,  1.0915, -0.3930, -0.0056, -0.3944,  1.0328,
          0.3314]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
392000 loss tensor(0.0751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0417, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8341,  1.3915,  0.5363,  2.5844,  0.3483, -0.5671, -0.3122,  0.9832,
          0.7690,  0.3176, -0.1134,  1.0522,  0.7613,  2.4134,  0.4918,  0.1386,
         -0.0723,  0.4024,  1.4694,  0.0614,  0.7634,  0.3054, -0.0559,  0.6572,
          0.2524,  1.0447, -0.0342,  1.4322,  0.2427,  0.6398,  1.5472,  2.2811,
          0.4822,  0.2460,  0.1172,  1.1845,  0.6547,  0.2760,  0.7366,  0.0357,
          1.0049,  0.3210,  0.6798,  1.0917, -0.3941, -0.0066, -0.3933,  1.0320,
          0.3327]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
393000 loss tensor(0.0766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0421, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8337,  1.3910,  0.5360,  2.5815,  0.3464, -0.5671, -0.3140,  0.9810,
          0.7676,  0.3169, -0.1138,  1.0511,  0.7610,  2.4129,  0.4914,  0.1382,
         -0.0717,  0.4013,  1.4681,  0.0604,  0.7625,  0.3052, -0.0561,  0.6559,
          0.2516,  1.0436, -0.0339,  1.4320,  0.2420,  0.6389,  1.5439,  2.2786,
          0.4827,  0.2454,  0.1177,  1.1853,  0.6556,  0.2765,  0.7382,  0.0365,
          1.0053,  0.3207,  0.6811,  1.0918, -0.3940, -0.0069, -0.3935,  1.0322,
          0.3319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
394000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8337,  1.3901,  0.5369,  2.5802,  0.3422, -0.5681, -0.3131,  0.9806,
          0.7673,  0.3172, -0.1148,  1.0508,  0.7593,  2.4113,  0.4906,  0.1380,
         -0.0724,  0.4010,  1.4666,  0.0600,  0.7625,  0.3061, -0.0558,  0.6561,
          0.2508,  1.0444, -0.0359,  1.4319,  0.2418,  0.6391,  1.5412,  2.2784,
          0.4824,  0.2471,  0.1173,  1.1842,  0.6546,  0.2763,  0.7379,  0.0365,
          1.0049,  0.3212,  0.6809,  1.0917, -0.3937, -0.0064, -0.3929,  1.0303,
          0.3322]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
395000 loss tensor(0.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8348,  1.3905,  0.5385,  2.5790,  0.3400, -0.5689, -0.3124,  0.9805,
          0.7676,  0.3177, -0.1152,  1.0520,  0.7587,  2.4107,  0.4891,  0.1374,
         -0.0734,  0.3997,  1.4672,  0.0606,  0.7620,  0.3078, -0.0562,  0.6565,
          0.2513,  1.0446, -0.0355,  1.4311,  0.2406,  0.6382,  1.5397,  2.2768,
          0.4819,  0.2478,  0.1181,  1.1829,  0.6534,  0.2760,  0.7374,  0.0363,
          1.0036,  0.3203,  0.6798,  1.0907, -0.3932, -0.0059, -0.3941,  1.0304,
          0.3309]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
396000 loss tensor(0.0621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8352,  1.3910,  0.5397,  2.5776,  0.3365, -0.5688, -0.3129,  0.9789,
          0.7671,  0.3175, -0.1161,  1.0513,  0.7580,  2.4096,  0.4889,  0.1367,
         -0.0729,  0.4001,  1.4675,  0.0612,  0.7623,  0.3071, -0.0564,  0.6571,
          0.2517,  1.0431, -0.0346,  1.4310,  0.2401,  0.6379,  1.5380,  2.2755,
          0.4814,  0.2473,  0.1171,  1.1827,  0.6536,  0.2757,  0.7374,  0.0366,
          1.0032,  0.3199,  0.6799,  1.0902, -0.3933, -0.0061, -0.3940,  1.0300,
          0.3306]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
397000 loss tensor(0.0716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0372, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8336,  1.3893,  0.5380,  2.5750,  0.3334, -0.5680, -0.3148,  0.9780,
          0.7652,  0.3164, -0.1160,  1.0501,  0.7580,  2.4074,  0.4891,  0.1368,
         -0.0712,  0.3989,  1.4675,  0.0612,  0.7613,  0.3058, -0.0563,  0.6573,
          0.2511,  1.0415, -0.0358,  1.4320,  0.2408,  0.6383,  1.5343,  2.2728,
          0.4816,  0.2462,  0.1170,  1.1829,  0.6544,  0.2765,  0.7384,  0.0373,
          1.0041,  0.3190,  0.6810,  1.0899, -0.3942, -0.0069, -0.3929,  1.0304,
          0.3317]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
398000 loss tensor(0.0702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0388, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8354,  1.3899,  0.5394,  2.5755,  0.3296, -0.5690, -0.3140,  0.9758,
          0.7653,  0.3172, -0.1182,  1.0499,  0.7564,  2.4058,  0.4889,  0.1367,
         -0.0725,  0.3992,  1.4681,  0.0619,  0.7601,  0.3069, -0.0556,  0.6578,
          0.2518,  1.0411, -0.0353,  1.4320,  0.2403,  0.6384,  1.5324,  2.2724,
          0.4804,  0.2468,  0.1162,  1.1822,  0.6530,  0.2763,  0.7375,  0.0361,
          1.0031,  0.3184,  0.6801,  1.0896, -0.3943, -0.0072, -0.3928,  1.0300,
          0.3315]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
399000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0364, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8351,  1.3891,  0.5391,  2.5722,  0.3281, -0.5700, -0.3151,  0.9755,
          0.7654,  0.3158, -0.1187,  1.0493,  0.7552,  2.4061,  0.4874,  0.1356,
         -0.0716,  0.3981,  1.4663,  0.0598,  0.7614,  0.3062, -0.0562,  0.6568,
          0.2506,  1.0401, -0.0352,  1.4307,  0.2390,  0.6365,  1.5309,  2.2699,
          0.4811,  0.2469,  0.1173,  1.1811,  0.6542,  0.2754,  0.7389,  0.0373,
          1.0035,  0.3188,  0.6805,  1.0892, -0.3930, -0.0061, -0.3938,  1.0288,
          0.3300]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
400000 loss tensor(0.0739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0409, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8350,  1.3879,  0.5406,  2.5697,  0.3247, -0.5695, -0.3148,  0.9741,
          0.7639,  0.3161, -0.1196,  1.0489,  0.7550,  2.4033,  0.4882,  0.1362,
         -0.0720,  0.3979,  1.4664,  0.0599,  0.7605,  0.3067, -0.0552,  0.6564,
          0.2503,  1.0409, -0.0365,  1.4321,  0.2400,  0.6368,  1.5271,  2.2676,
          0.4804,  0.2474,  0.1161,  1.1815,  0.6535,  0.2767,  0.7395,  0.0365,
          1.0030,  0.3191,  0.6806,  1.0895, -0.3945, -0.0077, -0.3926,  1.0278,
          0.3310]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
401000 loss tensor(0.0719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8368,  1.3890,  0.5410,  2.5698,  0.3209, -0.5707, -0.3154,  0.9731,
          0.7643,  0.3172, -0.1204,  1.0495,  0.7548,  2.4021,  0.4875,  0.1357,
         -0.0725,  0.3979,  1.4672,  0.0615,  0.7599,  0.3072, -0.0555,  0.6576,
          0.2509,  1.0396, -0.0361,  1.4320,  0.2394,  0.6371,  1.5252,  2.2673,
          0.4796,  0.2475,  0.1161,  1.1801,  0.6524,  0.2756,  0.7382,  0.0367,
          1.0026,  0.3174,  0.6800,  1.0877, -0.3943, -0.0073, -0.3926,  1.0272,
          0.3312]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
402000 loss tensor(0.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8355,  1.3891,  0.5417,  2.5685,  0.3190, -0.5689, -0.3153,  0.9735,
          0.7639,  0.3163, -0.1205,  1.0494,  0.7545,  2.4020,  0.4859,  0.1341,
         -0.0723,  0.3958,  1.4656,  0.0603,  0.7599,  0.3072, -0.0570,  0.6569,
          0.2510,  1.0393, -0.0355,  1.4310,  0.2379,  0.6358,  1.5230,  2.2655,
          0.4811,  0.2477,  0.1178,  1.1792,  0.6529,  0.2751,  0.7392,  0.0386,
          1.0021,  0.3163,  0.6799,  1.0871, -0.3936, -0.0068, -0.3939,  1.0274,
          0.3301]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
403000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8349,  1.3872,  0.5422,  2.5655,  0.3150, -0.5705, -0.3173,  0.9710,
          0.7626,  0.3153, -0.1222,  1.0478,  0.7531,  2.4005,  0.4865,  0.1347,
         -0.0713,  0.3953,  1.4657,  0.0609,  0.7589,  0.3072, -0.0559,  0.6567,
          0.2495,  1.0376, -0.0368,  1.4317,  0.2383,  0.6365,  1.5200,  2.2635,
          0.4804,  0.2472,  0.1165,  1.1799,  0.6531,  0.2763,  0.7400,  0.0377,
          1.0030,  0.3168,  0.6806,  1.0880, -0.3943, -0.0075, -0.3928,  1.0270,
          0.3308]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
404000 loss tensor(0.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8354,  1.3876,  0.5422,  2.5644,  0.3129, -0.5708, -0.3167,  0.9708,
          0.7628,  0.3160, -0.1227,  1.0482,  0.7533,  2.3993,  0.4851,  0.1336,
         -0.0723,  0.3949,  1.4655,  0.0603,  0.7590,  0.3076, -0.0566,  0.6574,
          0.2495,  1.0381, -0.0370,  1.4310,  0.2371,  0.6353,  1.5187,  2.2620,
          0.4804,  0.2486,  0.1173,  1.1787,  0.6525,  0.2748,  0.7401,  0.0384,
          1.0016,  0.3162,  0.6802,  1.0865, -0.3935, -0.0069, -0.3935,  1.0260,
          0.3294]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
405000 loss tensor(0.0737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0408, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8353,  1.3866,  0.5417,  2.5622,  0.3085, -0.5714, -0.3172,  0.9692,
          0.7615,  0.3148, -0.1238,  1.0471,  0.7519,  2.3971,  0.4854,  0.1341,
         -0.0716,  0.3951,  1.4656,  0.0609,  0.7589,  0.3069, -0.0557,  0.6563,
          0.2486,  1.0370, -0.0365,  1.4319,  0.2378,  0.6356,  1.5160,  2.2606,
          0.4800,  0.2479,  0.1165,  1.1785,  0.6530,  0.2756,  0.7406,  0.0382,
          1.0024,  0.3157,  0.6808,  1.0871, -0.3943, -0.0077, -0.3922,  1.0256,
          0.3304]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
406000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8353,  1.3876,  0.5443,  2.5627,  0.3054, -0.5720, -0.3169,  0.9680,
          0.7608,  0.3157, -0.1253,  1.0478,  0.7513,  2.3958,  0.4851,  0.1340,
         -0.0724,  0.3945,  1.4653,  0.0615,  0.7584,  0.3088, -0.0554,  0.6580,
          0.2502,  1.0372, -0.0376,  1.4321,  0.2377,  0.6358,  1.5129,  2.2595,
          0.4790,  0.2481,  0.1157,  1.1778,  0.6518,  0.2765,  0.7398,  0.0377,
          1.0016,  0.3154,  0.6802,  1.0861, -0.3947, -0.0078, -0.3924,  1.0256,
          0.3306]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
407000 loss tensor(0.0730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0399, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8350,  1.3865,  0.5438,  2.5608,  0.3022, -0.5717, -0.3182,  0.9666,
          0.7608,  0.3145, -0.1256,  1.0467,  0.7508,  2.3946,  0.4847,  0.1335,
         -0.0714,  0.3946,  1.4664,  0.0619,  0.7576,  0.3069, -0.0558,  0.6573,
          0.2497,  1.0359, -0.0365,  1.4320,  0.2370,  0.6354,  1.5108,  2.2582,
          0.4791,  0.2478,  0.1157,  1.1774,  0.6524,  0.2754,  0.7409,  0.0381,
          1.0015,  0.3145,  0.6808,  1.0858, -0.3945, -0.0080, -0.3918,  1.0252,
          0.3307]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
408000 loss tensor(0.0604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8350,  1.3865,  0.5448,  2.5593,  0.3002, -0.5720, -0.3169,  0.9670,
          0.7607,  0.3156, -0.1263,  1.0475,  0.7493,  2.3943,  0.4830,  0.1326,
         -0.0730,  0.3930,  1.4646,  0.0610,  0.7580,  0.3087, -0.0561,  0.6578,
          0.2497,  1.0363, -0.0375,  1.4310,  0.2358,  0.6347,  1.5095,  2.2568,
          0.4786,  0.2498,  0.1167,  1.1763,  0.6515,  0.2755,  0.7409,  0.0385,
          1.0003,  0.3149,  0.6800,  1.0856, -0.3938, -0.0071, -0.3929,  1.0240,
          0.3292]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
409000 loss tensor(0.0724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0379, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8358,  1.3864,  0.5458,  2.5573,  0.2974, -0.5720, -0.3172,  0.9663,
          0.7604,  0.3151, -0.1261,  1.0467,  0.7489,  2.3933,  0.4825,  0.1316,
         -0.0723,  0.3925,  1.4643,  0.0612,  0.7582,  0.3087, -0.0565,  0.6575,
          0.2499,  1.0354, -0.0364,  1.4310,  0.2353,  0.6337,  1.5078,  2.2552,
          0.4791,  0.2494,  0.1166,  1.1755,  0.6514,  0.2747,  0.7406,  0.0391,
          1.0003,  0.3137,  0.6803,  1.0846, -0.3937, -0.0071, -0.3929,  1.0234,
          0.3292]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
410000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8368,  1.3860,  0.5466,  2.5563,  0.2936, -0.5734, -0.3171,  0.9654,
          0.7600,  0.3152, -0.1287,  1.0468,  0.7471,  2.3921,  0.4821,  0.1320,
         -0.0733,  0.3920,  1.4632,  0.0614,  0.7574,  0.3098, -0.0556,  0.6579,
          0.2494,  1.0357, -0.0374,  1.4309,  0.2350,  0.6339,  1.5050,  2.2540,
          0.4781,  0.2503,  0.1161,  1.1749,  0.6507,  0.2753,  0.7407,  0.0384,
          0.9998,  0.3144,  0.6801,  1.0849, -0.3936, -0.0071, -0.3929,  1.0225,
          0.3291]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
411000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8364,  1.3863,  0.5465,  2.5549,  0.2905, -0.5719, -0.3181,  0.9637,
          0.7590,  0.3148, -0.1282,  1.0461,  0.7474,  2.3907,  0.4816,  0.1311,
         -0.0725,  0.3910,  1.4645,  0.0624,  0.7569,  0.3089, -0.0564,  0.6580,
          0.2493,  1.0345, -0.0375,  1.4308,  0.2345,  0.6333,  1.5022,  2.2525,
          0.4788,  0.2495,  0.1158,  1.1745,  0.6513,  0.2746,  0.7410,  0.0395,
          0.9999,  0.3132,  0.6801,  1.0842, -0.3936, -0.0072, -0.3930,  1.0227,
          0.3290]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
412000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8359,  1.3864,  0.5475,  2.5530,  0.2877, -0.5733, -0.3182,  0.9629,
          0.7587,  0.3149, -0.1298,  1.0459,  0.7460,  2.3894,  0.4814,  0.1313,
         -0.0733,  0.3906,  1.4630,  0.0622,  0.7569,  0.3103, -0.0558,  0.6580,
          0.2494,  1.0341, -0.0385,  1.4311,  0.2345,  0.6336,  1.4997,  2.2506,
          0.4780,  0.2502,  0.1161,  1.1738,  0.6506,  0.2750,  0.7413,  0.0390,
          0.9995,  0.3137,  0.6799,  1.0842, -0.3939, -0.0074, -0.3929,  1.0215,
          0.3289]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
413000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8359,  1.3844,  0.5465,  2.5501,  0.2846, -0.5736, -0.3199,  0.9608,
          0.7571,  0.3136, -0.1307,  1.0442,  0.7463,  2.3874,  0.4819,  0.1316,
         -0.0714,  0.3911,  1.4640,  0.0612,  0.7555,  0.3080, -0.0551,  0.6569,
          0.2476,  1.0323, -0.0383,  1.4319,  0.2350,  0.6340,  1.4974,  2.2476,
          0.4778,  0.2490,  0.1153,  1.1746,  0.6520,  0.2755,  0.7425,  0.0394,
          1.0004,  0.3126,  0.6812,  1.0845, -0.3947, -0.0087, -0.3918,  1.0221,
          0.3295]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
414000 loss tensor(0.0677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0359, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8363,  1.3853,  0.5483,  2.5503,  0.2819, -0.5736, -0.3187,  0.9613,
          0.7574,  0.3147, -0.1312,  1.0455,  0.7451,  2.3866,  0.4802,  0.1305,
         -0.0730,  0.3898,  1.4628,  0.0614,  0.7559,  0.3100, -0.0560,  0.6576,
          0.2492,  1.0326, -0.0383,  1.4309,  0.2337,  0.6328,  1.4949,  2.2476,
          0.4773,  0.2506,  0.1159,  1.1729,  0.6498,  0.2748,  0.7415,  0.0397,
          0.9989,  0.3122,  0.6798,  1.0833, -0.3944, -0.0079, -0.3929,  1.0209,
          0.3287]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
415000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8356,  1.3832,  0.5478,  2.5478,  0.2775, -0.5743, -0.3204,  0.9591,
          0.7559,  0.3134, -0.1330,  1.0437,  0.7439,  2.3847,  0.4810,  0.1307,
         -0.0717,  0.3898,  1.4624,  0.0611,  0.7553,  0.3082, -0.0548,  0.6568,
          0.2475,  1.0309, -0.0389,  1.4319,  0.2344,  0.6332,  1.4928,  2.2457,
          0.4775,  0.2494,  0.1151,  1.1732,  0.6514,  0.2755,  0.7429,  0.0393,
          1.0002,  0.3127,  0.6813,  1.0844, -0.3950, -0.0090, -0.3917,  1.0207,
          0.3295]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
416000 loss tensor(0.0598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8353,  1.3835,  0.5488,  2.5468,  0.2759, -0.5737, -0.3200,  0.9596,
          0.7561,  0.3129, -0.1330,  1.0440,  0.7427,  2.3845,  0.4792,  0.1292,
         -0.0718,  0.3883,  1.4611,  0.0603,  0.7554,  0.3090, -0.0562,  0.6572,
          0.2481,  1.0308, -0.0384,  1.4304,  0.2329,  0.6317,  1.4907,  2.2437,
          0.4781,  0.2504,  0.1159,  1.1720,  0.6514,  0.2748,  0.7432,  0.0407,
          0.9998,  0.3124,  0.6809,  1.0838, -0.3941, -0.0079, -0.3929,  1.0199,
          0.3279]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
417000 loss tensor(0.0621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8353,  1.3845,  0.5507,  2.5457,  0.2729, -0.5738, -0.3201,  0.9589,
          0.7560,  0.3138, -0.1332,  1.0438,  0.7436,  2.3831,  0.4794,  0.1291,
         -0.0724,  0.3882,  1.4624,  0.0617,  0.7558,  0.3098, -0.0562,  0.6582,
          0.2489,  1.0301, -0.0376,  1.4311,  0.2327,  0.6321,  1.4874,  2.2422,
          0.4776,  0.2499,  0.1158,  1.1713,  0.6497,  0.2741,  0.7424,  0.0402,
          0.9987,  0.3103,  0.6806,  1.0817, -0.3948, -0.0083, -0.3924,  1.0189,
          0.3283]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
418000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8343,  1.3826,  0.5500,  2.5438,  0.2691, -0.5751, -0.3213,  0.9557,
          0.7542,  0.3128, -0.1352,  1.0425,  0.7427,  2.3809,  0.4795,  0.1299,
         -0.0713,  0.3891,  1.4616,  0.0610,  0.7543,  0.3086, -0.0551,  0.6567,
          0.2476,  1.0293, -0.0393,  1.4319,  0.2332,  0.6324,  1.4850,  2.2407,
          0.4765,  0.2497,  0.1145,  1.1718,  0.6511,  0.2751,  0.7437,  0.0405,
          0.9993,  0.3108,  0.6816,  1.0825, -0.3952, -0.0092, -0.3915,  1.0190,
          0.3286]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
419000 loss tensor(0.0599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8352,  1.3839,  0.5515,  2.5431,  0.2664, -0.5750, -0.3201,  0.9552,
          0.7549,  0.3140, -0.1365,  1.0437,  0.7408,  2.3808,  0.4782,  0.1289,
         -0.0730,  0.3879,  1.4614,  0.0617,  0.7550,  0.3105, -0.0556,  0.6578,
          0.2483,  1.0299, -0.0398,  1.4308,  0.2316,  0.6315,  1.4841,  2.2401,
          0.4762,  0.2515,  0.1144,  1.1700,  0.6496,  0.2741,  0.7425,  0.0399,
          0.9978,  0.3111,  0.6803,  1.0811, -0.3938, -0.0079, -0.3924,  1.0175,
          0.3277]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
420000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0334, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8354,  1.3820,  0.5511,  2.5410,  0.2632, -0.5763, -0.3217,  0.9545,
          0.7530,  0.3125, -0.1378,  1.0421,  0.7412,  2.3782,  0.4786,  0.1291,
         -0.0715,  0.3865,  1.4616,  0.0610,  0.7532,  0.3098, -0.0552,  0.6574,
          0.2471,  1.0277, -0.0391,  1.4318,  0.2325,  0.6319,  1.4812,  2.2374,
          0.4764,  0.2502,  0.1154,  1.1709,  0.6504,  0.2752,  0.7441,  0.0405,
          0.9993,  0.3099,  0.6812,  1.0821, -0.3953, -0.0095, -0.3914,  1.0182,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
421000 loss tensor(0.0646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8368,  1.3833,  0.5513,  2.5402,  0.2596, -0.5758, -0.3213,  0.9544,
          0.7544,  0.3132, -0.1378,  1.0429,  0.7400,  2.3784,  0.4771,  0.1280,
         -0.0726,  0.3863,  1.4617,  0.0613,  0.7538,  0.3107, -0.0559,  0.6585,
          0.2477,  1.0290, -0.0392,  1.4305,  0.2308,  0.6309,  1.4788,  2.2369,
          0.4762,  0.2516,  0.1153,  1.1689,  0.6494,  0.2732,  0.7434,  0.0405,
          0.9974,  0.3094,  0.6803,  1.0809, -0.3937, -0.0079, -0.3922,  1.0167,
          0.3276]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
422000 loss tensor(0.0680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8358,  1.3816,  0.5517,  2.5381,  0.2568, -0.5765, -0.3228,  0.9514,
          0.7524,  0.3122, -0.1394,  1.0411,  0.7399,  2.3758,  0.4778,  0.1287,
         -0.0714,  0.3873,  1.4604,  0.0607,  0.7522,  0.3091, -0.0548,  0.6573,
          0.2467,  1.0274, -0.0401,  1.4317,  0.2317,  0.6312,  1.4752,  2.2344,
          0.4756,  0.2505,  0.1139,  1.1698,  0.6505,  0.2746,  0.7444,  0.0409,
          0.9982,  0.3099,  0.6816,  1.0813, -0.3956, -0.0098, -0.3913,  1.0161,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
423000 loss tensor(0.0749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0416, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8361,  1.3820,  0.5520,  2.5362,  0.2531, -0.5765, -0.3224,  0.9527,
          0.7525,  0.3127, -0.1390,  1.0421,  0.7389,  2.3755,  0.4761,  0.1271,
         -0.0722,  0.3851,  1.4597,  0.0601,  0.7538,  0.3101, -0.0560,  0.6571,
          0.2472,  1.0271, -0.0400,  1.4305,  0.2303,  0.6299,  1.4748,  2.2335,
          0.4762,  0.2516,  0.1149,  1.1677,  0.6497,  0.2737,  0.7439,  0.0418,
          0.9973,  0.3084,  0.6803,  1.0802, -0.3941, -0.0086, -0.3920,  1.0159,
          0.3275]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
424000 loss tensor(0.0644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8365,  1.3822,  0.5535,  2.5354,  0.2510, -0.5773, -0.3222,  0.9509,
          0.7524,  0.3127, -0.1416,  1.0417,  0.7370,  2.3743,  0.4759,  0.1274,
         -0.0726,  0.3860,  1.4589,  0.0604,  0.7537,  0.3110, -0.0551,  0.6576,
          0.2475,  1.0271, -0.0411,  1.4307,  0.2301,  0.6298,  1.4725,  2.2318,
          0.4749,  0.2521,  0.1141,  1.1670,  0.6491,  0.2741,  0.7442,  0.0407,
          0.9966,  0.3096,  0.6806,  1.0804, -0.3946, -0.0089, -0.3923,  1.0144,
          0.3270]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
425000 loss tensor(0.0740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0408, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8354,  1.3806,  0.5530,  2.5329,  0.2467, -0.5783, -0.3233,  0.9494,
          0.7500,  0.3116, -0.1425,  1.0403,  0.7370,  2.3720,  0.4762,  0.1279,
         -0.0721,  0.3853,  1.4590,  0.0603,  0.7524,  0.3108, -0.0544,  0.6576,
          0.2462,  1.0255, -0.0407,  1.4314,  0.2306,  0.6303,  1.4694,  2.2298,
          0.4741,  0.2514,  0.1135,  1.1678,  0.6491,  0.2754,  0.7450,  0.0407,
          0.9975,  0.3080,  0.6810,  1.0808, -0.3959, -0.0100, -0.3913,  1.0153,
          0.3279]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
426000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8361,  1.3800,  0.5530,  2.5320,  0.2433, -0.5774, -0.3247,  0.9488,
          0.7500,  0.3112, -0.1423,  1.0397,  0.7366,  2.3706,  0.4759,  0.1270,
         -0.0713,  0.3841,  1.4589,  0.0625,  0.7509,  0.3095, -0.0549,  0.6581,
          0.2462,  1.0240, -0.0406,  1.4316,  0.2303,  0.6303,  1.4672,  2.2284,
          0.4747,  0.2505,  0.1141,  1.1679,  0.6495,  0.2750,  0.7450,  0.0414,
          0.9975,  0.3074,  0.6814,  1.0800, -0.3959, -0.0099, -0.3907,  1.0148,
          0.3280]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
427000 loss tensor(0.0606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8373,  1.3806,  0.5543,  2.5312,  0.2394, -0.5776, -0.3243,  0.9472,
          0.7495,  0.3116, -0.1428,  1.0399,  0.7371,  2.3692,  0.4756,  0.1269,
         -0.0717,  0.3840,  1.4602,  0.0627,  0.7510,  0.3097, -0.0549,  0.6582,
          0.2469,  1.0240, -0.0407,  1.4315,  0.2298,  0.6303,  1.4651,  2.2275,
          0.4745,  0.2511,  0.1135,  1.1668,  0.6485,  0.2744,  0.7448,  0.0415,
          0.9969,  0.3067,  0.6810,  1.0789, -0.3952, -0.0097, -0.3903,  1.0146,
          0.3280]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
428000 loss tensor(0.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8363,  1.3797,  0.5540,  2.5283,  0.2377, -0.5781, -0.3250,  0.9459,
          0.7489,  0.3109, -0.1437,  1.0387,  0.7355,  2.3682,  0.4751,  0.1265,
         -0.0712,  0.3841,  1.4603,  0.0612,  0.7509,  0.3106, -0.0547,  0.6575,
          0.2452,  1.0239, -0.0415,  1.4313,  0.2298,  0.6299,  1.4622,  2.2251,
          0.4739,  0.2514,  0.1129,  1.1667,  0.6490,  0.2746,  0.7460,  0.0413,
          0.9968,  0.3073,  0.6819,  1.0795, -0.3957, -0.0101, -0.3908,  1.0140,
          0.3271]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
429000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0366, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8360,  1.3798,  0.5549,  2.5278,  0.2332, -0.5777, -0.3252,  0.9459,
          0.7483,  0.3110, -0.1444,  1.0385,  0.7347,  2.3675,  0.4743,  0.1257,
         -0.0715,  0.3823,  1.4584,  0.0611,  0.7496,  0.3105, -0.0552,  0.6569,
          0.2457,  1.0231, -0.0410,  1.4308,  0.2286,  0.6292,  1.4612,  2.2247,
          0.4746,  0.2517,  0.1144,  1.1662,  0.6494,  0.2748,  0.7457,  0.0422,
          0.9967,  0.3068,  0.6815,  1.0789, -0.3949, -0.0096, -0.3908,  1.0139,
          0.3276]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
430000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8358,  1.3794,  0.5558,  2.5257,  0.2318, -0.5779, -0.3249,  0.9456,
          0.7487,  0.3106, -0.1452,  1.0386,  0.7328,  2.3665,  0.4732,  0.1244,
         -0.0718,  0.3820,  1.4575,  0.0602,  0.7508,  0.3109, -0.0558,  0.6577,
          0.2459,  1.0229, -0.0418,  1.4300,  0.2281,  0.6281,  1.4582,  2.2228,
          0.4745,  0.2524,  0.1149,  1.1645,  0.6487,  0.2739,  0.7463,  0.0427,
          0.9960,  0.3071,  0.6813,  1.0787, -0.3953, -0.0099, -0.3920,  1.0123,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
431000 loss tensor(0.0639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8358,  1.3795,  0.5557,  2.5240,  0.2283, -0.5797, -0.3259,  0.9426,
          0.7475,  0.3105, -0.1477,  1.0378,  0.7326,  2.3639,  0.4741,  0.1257,
         -0.0721,  0.3825,  1.4581,  0.0608,  0.7503,  0.3105, -0.0540,  0.6570,
          0.2451,  1.0229, -0.0428,  1.4313,  0.2287,  0.6290,  1.4556,  2.2207,
          0.4735,  0.2526,  0.1128,  1.1649,  0.6484,  0.2746,  0.7465,  0.0417,
          0.9960,  0.3070,  0.6814,  1.0788, -0.3963, -0.0107, -0.3906,  1.0121,
          0.3274]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
432000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8363,  1.3793,  0.5566,  2.5243,  0.2259, -0.5797, -0.3245,  0.9438,
          0.7477,  0.3116, -0.1475,  1.0386,  0.7321,  2.3636,  0.4723,  0.1247,
         -0.0732,  0.3807,  1.4572,  0.0613,  0.7499,  0.3122, -0.0553,  0.6587,
          0.2467,  1.0228, -0.0421,  1.4304,  0.2272,  0.6280,  1.4544,  2.2200,
          0.4731,  0.2534,  0.1138,  1.1634,  0.6471,  0.2737,  0.7455,  0.0419,
          0.9946,  0.3054,  0.6801,  1.0770, -0.3953, -0.0097, -0.3914,  1.0112,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
433000 loss tensor(0.0640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8360,  1.3795,  0.5580,  2.5230,  0.2222, -0.5795, -0.3251,  0.9429,
          0.7471,  0.3108, -0.1482,  1.0383,  0.7319,  2.3626,  0.4717,  0.1241,
         -0.0728,  0.3804,  1.4563,  0.0616,  0.7504,  0.3113, -0.0557,  0.6588,
          0.2461,  1.0223, -0.0413,  1.4300,  0.2268,  0.6275,  1.4523,  2.2190,
          0.4733,  0.2534,  0.1135,  1.1633,  0.6471,  0.2736,  0.7460,  0.0426,
          0.9947,  0.3045,  0.6801,  1.0768, -0.3950, -0.0097, -0.3914,  1.0105,
          0.3259]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
434000 loss tensor(0.0701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8353,  1.3788,  0.5575,  2.5203,  0.2185, -0.5808, -0.3263,  0.9410,
          0.7460,  0.3105, -0.1496,  1.0371,  0.7310,  2.3605,  0.4725,  0.1248,
         -0.0725,  0.3805,  1.4573,  0.0624,  0.7480,  0.3112, -0.0544,  0.6583,
          0.2453,  1.0210, -0.0433,  1.4311,  0.2275,  0.6287,  1.4493,  2.2167,
          0.4721,  0.2530,  0.1127,  1.1638,  0.6473,  0.2747,  0.7466,  0.0420,
          0.9947,  0.3049,  0.6808,  1.0773, -0.3958, -0.0106, -0.3903,  1.0112,
          0.3271]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
435000 loss tensor(0.0673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8376,  1.3788,  0.5569,  2.5193,  0.2151, -0.5817, -0.3260,  0.9399,
          0.7459,  0.3107, -0.1516,  1.0373,  0.7306,  2.3596,  0.4720,  0.1244,
         -0.0724,  0.3808,  1.4577,  0.0618,  0.7487,  0.3113, -0.0541,  0.6579,
          0.2451,  1.0200, -0.0426,  1.4308,  0.2268,  0.6285,  1.4467,  2.2158,
          0.4715,  0.2532,  0.1126,  1.1622,  0.6468,  0.2738,  0.7464,  0.0418,
          0.9943,  0.3042,  0.6808,  1.0761, -0.3959, -0.0104, -0.3902,  1.0096,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
436000 loss tensor(0.0593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8374,  1.3791,  0.5593,  2.5184,  0.2138, -0.5804, -0.3268,  0.9395,
          0.7464,  0.3109, -0.1507,  1.0374,  0.7297,  2.3594,  0.4707,  0.1226,
         -0.0725,  0.3785,  1.4553,  0.0616,  0.7486,  0.3116, -0.0559,  0.6584,
          0.2455,  1.0204, -0.0430,  1.4300,  0.2252,  0.6270,  1.4461,  2.2140,
          0.4730,  0.2538,  0.1138,  1.1613,  0.6468,  0.2726,  0.7466,  0.0430,
          0.9938,  0.3036,  0.6807,  1.0753, -0.3946, -0.0096, -0.3910,  1.0083,
          0.3259]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
437000 loss tensor(0.0624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8367,  1.3767,  0.5582,  2.5153,  0.2099, -0.5817, -0.3278,  0.9381,
          0.7443,  0.3100, -0.1522,  1.0360,  0.7292,  2.3574,  0.4714,  0.1238,
         -0.0714,  0.3793,  1.4569,  0.0611,  0.7480,  0.3102, -0.0549,  0.6577,
          0.2446,  1.0181, -0.0427,  1.4308,  0.2261,  0.6273,  1.4421,  2.2119,
          0.4721,  0.2531,  0.1128,  1.1621,  0.6474,  0.2738,  0.7479,  0.0428,
          0.9947,  0.3038,  0.6817,  1.0760, -0.3960, -0.0109, -0.3902,  1.0091,
          0.3263]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
438000 loss tensor(0.0610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8363,  1.3766,  0.5596,  2.5141,  0.2075, -0.5817, -0.3280,  0.9361,
          0.7444,  0.3092, -0.1531,  1.0355,  0.7283,  2.3556,  0.4709,  0.1233,
         -0.0716,  0.3798,  1.4563,  0.0615,  0.7475,  0.3111, -0.0543,  0.6569,
          0.2439,  1.0184, -0.0437,  1.4310,  0.2263,  0.6274,  1.4404,  2.2102,
          0.4720,  0.2532,  0.1123,  1.1614,  0.6473,  0.2736,  0.7484,  0.0428,
          0.9944,  0.3038,  0.6821,  1.0759, -0.3962, -0.0115, -0.3902,  1.0089,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
439000 loss tensor(0.0601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8375,  1.3771,  0.5601,  2.5128,  0.2034, -0.5821, -0.3277,  0.9361,
          0.7430,  0.3095, -0.1542,  1.0353,  0.7275,  2.3543,  0.4703,  0.1234,
         -0.0725,  0.3783,  1.4554,  0.0619,  0.7466,  0.3122, -0.0541,  0.6582,
          0.2445,  1.0177, -0.0433,  1.4311,  0.2257,  0.6274,  1.4380,  2.2098,
          0.4713,  0.2533,  0.1119,  1.1608,  0.6465,  0.2742,  0.7476,  0.0425,
          0.9938,  0.3029,  0.6812,  1.0754, -0.3962, -0.0111, -0.3897,  1.0084,
          0.3265]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
440000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8362,  1.3778,  0.5607,  2.5128,  0.2015, -0.5819, -0.3280,  0.9362,
          0.7439,  0.3101, -0.1545,  1.0358,  0.7274,  2.3543,  0.4689,  0.1216,
         -0.0726,  0.3770,  1.4550,  0.0622,  0.7476,  0.3121, -0.0556,  0.6584,
          0.2450,  1.0182, -0.0433,  1.4297,  0.2239,  0.6257,  1.4368,  2.2082,
          0.4718,  0.2542,  0.1132,  1.1595,  0.6460,  0.2728,  0.7478,  0.0435,
          0.9925,  0.3023,  0.6807,  1.0737, -0.3949, -0.0101, -0.3908,  1.0071,
          0.3252]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
441000 loss tensor(0.0596, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8371,  1.3761,  0.5606,  2.5099,  0.1973, -0.5818, -0.3296,  0.9341,
          0.7422,  0.3086, -0.1551,  1.0340,  0.7266,  2.3515,  0.4696,  0.1223,
         -0.0714,  0.3772,  1.4549,  0.0620,  0.7465,  0.3108, -0.0548,  0.6577,
          0.2436,  1.0159, -0.0435,  1.4307,  0.2248,  0.6265,  1.4340,  2.2061,
          0.4721,  0.2533,  0.1128,  1.1598,  0.6470,  0.2741,  0.7489,  0.0438,
          0.9937,  0.3022,  0.6820,  1.0749, -0.3964, -0.0113, -0.3895,  1.0073,
          0.3262]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
442000 loss tensor(0.0710, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8381,  1.3769,  0.5610,  2.5093,  0.1946, -0.5820, -0.3288,  0.9347,
          0.7428,  0.3097, -0.1555,  1.0352,  0.7253,  2.3513,  0.4680,  0.1208,
         -0.0727,  0.3760,  1.4542,  0.0603,  0.7469,  0.3123, -0.0555,  0.6571,
          0.2444,  1.0162, -0.0436,  1.4296,  0.2235,  0.6252,  1.4321,  2.2054,
          0.4720,  0.2544,  0.1132,  1.1579,  0.6460,  0.2728,  0.7481,  0.0450,
          0.9924,  0.3018,  0.6810,  1.0743, -0.3953, -0.0106, -0.3905,  1.0055,
          0.3251]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
443000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8374,  1.3773,  0.5628,  2.5080,  0.1921, -0.5827, -0.3284,  0.9333,
          0.7420,  0.3098, -0.1571,  1.0347,  0.7241,  2.3503,  0.4678,  0.1211,
         -0.0729,  0.3766,  1.4541,  0.0620,  0.7465,  0.3122, -0.0548,  0.6579,
          0.2449,  1.0165, -0.0445,  1.4295,  0.2232,  0.6256,  1.4298,  2.2031,
          0.4704,  0.2550,  0.1119,  1.1577,  0.6454,  0.2731,  0.7479,  0.0436,
          0.9915,  0.3019,  0.6808,  1.0736, -0.3954, -0.0109, -0.3908,  1.0054,
          0.3247]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
444000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0339, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8361,  1.3758,  0.5622,  2.5058,  0.1884, -0.5842, -0.3296,  0.9311,
          0.7410,  0.3086, -0.1592,  1.0332,  0.7231,  2.3478,  0.4681,  0.1214,
         -0.0721,  0.3760,  1.4530,  0.0610,  0.7456,  0.3126, -0.0538,  0.6576,
          0.2435,  1.0152, -0.0456,  1.4305,  0.2239,  0.6255,  1.4272,  2.2012,
          0.4703,  0.2550,  0.1115,  1.1580,  0.6459,  0.2734,  0.7492,  0.0434,
          0.9925,  0.3025,  0.6817,  1.0742, -0.3965, -0.0118, -0.3896,  1.0045,
          0.3258]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
445000 loss tensor(0.0739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0402, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8369,  1.3757,  0.5631,  2.5054,  0.1867, -0.5849, -0.3296,  0.9304,
          0.7410,  0.3083, -0.1602,  1.0334,  0.7218,  2.3470,  0.4671,  0.1210,
         -0.0723,  0.3761,  1.4522,  0.0606,  0.7454,  0.3124, -0.0540,  0.6579,
          0.2442,  1.0147, -0.0465,  1.4296,  0.2231,  0.6246,  1.4257,  2.2002,
          0.4696,  0.2550,  0.1116,  1.1566,  0.6455,  0.2735,  0.7498,  0.0433,
          0.9919,  0.3026,  0.6814,  1.0741, -0.3962, -0.0115, -0.3907,  1.0046,
          0.3246]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
446000 loss tensor(0.0621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8361,  1.3741,  0.5620,  2.5033,  0.1828, -0.5847, -0.3303,  0.9295,
          0.7396,  0.3076, -0.1614,  1.0323,  0.7218,  2.3449,  0.4673,  0.1206,
         -0.0722,  0.3750,  1.4527,  0.0604,  0.7451,  0.3127, -0.0537,  0.6577,
          0.2433,  1.0136, -0.0454,  1.4305,  0.2233,  0.6255,  1.4224,  2.1984,
          0.4701,  0.2549,  0.1112,  1.1565,  0.6452,  0.2735,  0.7495,  0.0437,
          0.9924,  0.3011,  0.6814,  1.0740, -0.3972, -0.0123, -0.3896,  1.0038,
          0.3256]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
447000 loss tensor(0.0713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8379,  1.3748,  0.5628,  2.5018,  0.1798, -0.5840, -0.3312,  0.9282,
          0.7391,  0.3075, -0.1607,  1.0317,  0.7225,  2.3441,  0.4672,  0.1204,
         -0.0717,  0.3747,  1.4541,  0.0616,  0.7439,  0.3118, -0.0545,  0.6573,
          0.2429,  1.0129, -0.0453,  1.4304,  0.2229,  0.6252,  1.4207,  2.1967,
          0.4705,  0.2548,  0.1120,  1.1565,  0.6457,  0.2730,  0.7502,  0.0447,
          0.9919,  0.3002,  0.6820,  1.0728, -0.3966, -0.0121, -0.3893,  1.0043,
          0.3251]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
448000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0368, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8375,  1.3752,  0.5649,  2.5013,  0.1760, -0.5841, -0.3303,  0.9279,
          0.7393,  0.3085, -0.1608,  1.0325,  0.7207,  2.3436,  0.4664,  0.1195,
         -0.0732,  0.3734,  1.4523,  0.0618,  0.7445,  0.3135, -0.0547,  0.6579,
          0.2436,  1.0142, -0.0451,  1.4297,  0.2214,  0.6237,  1.4204,  2.1965,
          0.4699,  0.2558,  0.1114,  1.1553,  0.6440,  0.2728,  0.7486,  0.0448,
          0.9901,  0.3001,  0.6808,  1.0720, -0.3958, -0.0113, -0.3894,  1.0029,
          0.3252]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
449000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0363, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8360,  1.3736,  0.5647,  2.4989,  0.1743, -0.5846, -0.3320,  0.9260,
          0.7380,  0.3068, -0.1623,  1.0310,  0.7208,  2.3414,  0.4663,  0.1196,
         -0.0717,  0.3739,  1.4532,  0.0618,  0.7434,  0.3118, -0.0542,  0.6571,
          0.2425,  1.0121, -0.0447,  1.4302,  0.2221,  0.6248,  1.4175,  2.1937,
          0.4698,  0.2546,  0.1113,  1.1557,  0.6450,  0.2729,  0.7505,  0.0448,
          0.9914,  0.2992,  0.6819,  1.0722, -0.3974, -0.0126, -0.3891,  1.0027,
          0.3248]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
450000 loss tensor(0.0627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8376,  1.3739,  0.5657,  2.4992,  0.1715, -0.5854, -0.3303,  0.9274,
          0.7384,  0.3080, -0.1636,  1.0321,  0.7196,  2.3410,  0.4645,  0.1187,
         -0.0735,  0.3717,  1.4514,  0.0602,  0.7438,  0.3127, -0.0549,  0.6570,
          0.2436,  1.0125, -0.0450,  1.4293,  0.2207,  0.6232,  1.4157,  2.1938,
          0.4697,  0.2566,  0.1122,  1.1541,  0.6440,  0.2726,  0.7498,  0.0452,
          0.9903,  0.2990,  0.6806,  1.0715, -0.3958, -0.0113, -0.3899,  1.0017,
          0.3239]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
451000 loss tensor(0.0598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8386,  1.3747,  0.5656,  2.4977,  0.1666, -0.5856, -0.3318,  0.9250,
          0.7373,  0.3081, -0.1650,  1.0314,  0.7201,  2.3390,  0.4654,  0.1191,
         -0.0725,  0.3732,  1.4521,  0.0623,  0.7419,  0.3129, -0.0541,  0.6592,
          0.2434,  1.0117, -0.0460,  1.4300,  0.2211,  0.6247,  1.4117,  2.1918,
          0.4683,  0.2557,  0.1106,  1.1543,  0.6438,  0.2730,  0.7497,  0.0443,
          0.9903,  0.2983,  0.6807,  1.0711, -0.3965, -0.0122, -0.3890,  1.0018,
          0.3250]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
452000 loss tensor(0.0720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0401, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8373,  1.3745,  0.5675,  2.4965,  0.1651, -0.5854, -0.3312,  0.9250,
          0.7374,  0.3078, -0.1652,  1.0316,  0.7182,  2.3385,  0.4639,  0.1178,
         -0.0732,  0.3713,  1.4505,  0.0622,  0.7431,  0.3134, -0.0551,  0.6589,
          0.2435,  1.0110, -0.0461,  1.4291,  0.2199,  0.6232,  1.4114,  2.1909,
          0.4693,  0.2566,  0.1116,  1.1531,  0.6436,  0.2724,  0.7499,  0.0454,
          0.9896,  0.2987,  0.6805,  1.0704, -0.3960, -0.0116, -0.3899,  1.0013,
          0.3237]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
453000 loss tensor(0.0686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8374,  1.3725,  0.5663,  2.4941,  0.1616, -0.5858, -0.3333,  0.9228,
          0.7353,  0.3066, -0.1662,  1.0299,  0.7184,  2.3364,  0.4645,  0.1180,
         -0.0716,  0.3712,  1.4515,  0.0615,  0.7416,  0.3119, -0.0544,  0.6571,
          0.2422,  1.0091, -0.0470,  1.4302,  0.2206,  0.6238,  1.4070,  2.1878,
          0.4692,  0.2556,  0.1112,  1.1537,  0.6446,  0.2729,  0.7513,  0.0456,
          0.9907,  0.2979,  0.6821,  1.0710, -0.3968, -0.0129, -0.3888,  1.0010,
          0.3245]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
454000 loss tensor(0.0583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8385,  1.3738,  0.5675,  2.4944,  0.1579, -0.5871, -0.3324,  0.9224,
          0.7367,  0.3074, -0.1680,  1.0307,  0.7164,  2.3351,  0.4640,  0.1180,
         -0.0727,  0.3716,  1.4502,  0.0622,  0.7434,  0.3131, -0.0539,  0.6581,
          0.2432,  1.0099, -0.0472,  1.4300,  0.2201,  0.6235,  1.4068,  2.1876,
          0.4680,  0.2559,  0.1103,  1.1513,  0.6431,  0.2721,  0.7504,  0.0451,
          0.9892,  0.2983,  0.6806,  1.0703, -0.3967, -0.0126, -0.3886,  0.9993,
          0.3245]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
455000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8392,  1.3738,  0.5686,  2.4927,  0.1558, -0.5861, -0.3325,  0.9218,
          0.7358,  0.3075, -0.1684,  1.0301,  0.7159,  2.3348,  0.4627,  0.1169,
         -0.0733,  0.3708,  1.4505,  0.0622,  0.7423,  0.3143, -0.0546,  0.6590,
          0.2429,  1.0102, -0.0473,  1.4290,  0.2188,  0.6228,  1.4052,  2.1865,
          0.4679,  0.2572,  0.1104,  1.1509,  0.6428,  0.2723,  0.7507,  0.0455,
          0.9885,  0.2978,  0.6811,  1.0699, -0.3962, -0.0119, -0.3896,  0.9992,
          0.3234]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
456000 loss tensor(0.0587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8373,  1.3725,  0.5695,  2.4910,  0.1539, -0.5868, -0.3341,  0.9198,
          0.7342,  0.3060, -0.1687,  1.0285,  0.7161,  2.3340,  0.4627,  0.1173,
         -0.0715,  0.3705,  1.4502,  0.0619,  0.7413,  0.3127, -0.0545,  0.6576,
          0.2412,  1.0087, -0.0471,  1.4290,  0.2190,  0.6229,  1.4013,  2.1836,
          0.4681,  0.2559,  0.1103,  1.1523,  0.6443,  0.2727,  0.7524,  0.0459,
          0.9895,  0.2971,  0.6827,  1.0699, -0.3962, -0.0125, -0.3898,  0.9994,
          0.3230]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
457000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0358, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8379,  1.3727,  0.5704,  2.4887,  0.1511, -0.5874, -0.3334,  0.9196,
          0.7345,  0.3071, -0.1698,  1.0294,  0.7145,  2.3325,  0.4618,  0.1164,
         -0.0731,  0.3696,  1.4507,  0.0619,  0.7420,  0.3139, -0.0547,  0.6586,
          0.2425,  1.0089, -0.0466,  1.4287,  0.2180,  0.6225,  1.4005,  2.1828,
          0.4675,  0.2574,  0.1105,  1.1501,  0.6427,  0.2723,  0.7511,  0.0458,
          0.9882,  0.2969,  0.6812,  1.0693, -0.3965, -0.0124, -0.3898,  0.9986,
          0.3232]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
458000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8387,  1.3718,  0.5702,  2.4874,  0.1472, -0.5880, -0.3335,  0.9182,
          0.7346,  0.3068, -0.1708,  1.0288,  0.7136,  2.3311,  0.4615,  0.1162,
         -0.0732,  0.3694,  1.4502,  0.0617,  0.7413,  0.3142, -0.0546,  0.6580,
          0.2426,  1.0084, -0.0474,  1.4287,  0.2177,  0.6218,  1.3990,  2.1817,
          0.4669,  0.2579,  0.1103,  1.1495,  0.6425,  0.2717,  0.7515,  0.0455,
          0.9878,  0.2969,  0.6810,  1.0688, -0.3965, -0.0124, -0.3894,  0.9969,
          0.3230]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
459000 loss tensor(0.0642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8381,  1.3720,  0.5705,  2.4867,  0.1439, -0.5878, -0.3345,  0.9180,
          0.7341,  0.3069, -0.1722,  1.0289,  0.7127,  2.3292,  0.4607,  0.1155,
         -0.0732,  0.3691,  1.4495,  0.0615,  0.7411,  0.3136, -0.0549,  0.6585,
          0.2421,  1.0073, -0.0477,  1.4287,  0.2173,  0.6219,  1.3965,  2.1809,
          0.4674,  0.2577,  0.1100,  1.1488,  0.6423,  0.2719,  0.7515,  0.0460,
          0.9877,  0.2965,  0.6808,  1.0685, -0.3963, -0.0124, -0.3893,  0.9964,
          0.3230]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
460000 loss tensor(0.0661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8369,  1.3718,  0.5704,  2.4860,  0.1406, -0.5888, -0.3351,  0.9167,
          0.7327,  0.3066, -0.1735,  1.0278,  0.7138,  2.3273,  0.4619,  0.1162,
         -0.0727,  0.3683,  1.4498,  0.0623,  0.7397,  0.3132, -0.0541,  0.6586,
          0.2419,  1.0066, -0.0478,  1.4297,  0.2180,  0.6228,  1.3935,  2.1776,
          0.4663,  0.2572,  0.1096,  1.1493,  0.6422,  0.2731,  0.7520,  0.0456,
          0.9878,  0.2954,  0.6813,  1.0682, -0.3976, -0.0137, -0.3882,  0.9971,
          0.3239]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
461000 loss tensor(0.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0340, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8379,  1.3724,  0.5702,  2.4843,  0.1383, -0.5887, -0.3351,  0.9165,
          0.7330,  0.3063, -0.1738,  1.0275,  0.7122,  2.3277,  0.4601,  0.1150,
         -0.0735,  0.3678,  1.4492,  0.0620,  0.7403,  0.3139, -0.0547,  0.6585,
          0.2422,  1.0069, -0.0489,  1.4282,  0.2163,  0.6211,  1.3910,  2.1766,
          0.4665,  0.2582,  0.1108,  1.1476,  0.6421,  0.2720,  0.7518,  0.0467,
          0.9870,  0.2950,  0.6810,  1.0674, -0.3964, -0.0124, -0.3895,  0.9956,
          0.3229]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
462000 loss tensor(0.0719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8364,  1.3713,  0.5708,  2.4817,  0.1347, -0.5883, -0.3361,  0.9156,
          0.7312,  0.3052, -0.1735,  1.0265,  0.7124,  2.3264,  0.4598,  0.1144,
         -0.0725,  0.3669,  1.4486,  0.0612,  0.7386,  0.3132, -0.0552,  0.6578,
          0.2412,  1.0051, -0.0478,  1.4281,  0.2163,  0.6213,  1.3895,  2.1746,
          0.4677,  0.2579,  0.1109,  1.1482,  0.6428,  0.2727,  0.7537,  0.0479,
          0.9881,  0.2946,  0.6821,  1.0682, -0.3965, -0.0128, -0.3894,  0.9961,
          0.3222]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
463000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8371,  1.3697,  0.5714,  2.4801,  0.1316, -0.5907, -0.3368,  0.9135,
          0.7308,  0.3050, -0.1762,  1.0257,  0.7108,  2.3237,  0.4602,  0.1154,
         -0.0724,  0.3673,  1.4486,  0.0614,  0.7393,  0.3133, -0.0536,  0.6577,
          0.2406,  1.0042, -0.0491,  1.4292,  0.2169,  0.6216,  1.3874,  2.1733,
          0.4660,  0.2578,  0.1100,  1.1480,  0.6422,  0.2723,  0.7535,  0.0466,
          0.9876,  0.2955,  0.6824,  1.0685, -0.3976, -0.0139, -0.3882,  0.9951,
          0.3235]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
464000 loss tensor(0.0713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8378,  1.3701,  0.5729,  2.4801,  0.1286, -0.5895, -0.3372,  0.9128,
          0.7300,  0.3047, -0.1758,  1.0254,  0.7111,  2.3222,  0.4601,  0.1145,
         -0.0720,  0.3661,  1.4482,  0.0629,  0.7383,  0.3126, -0.0547,  0.6575,
          0.2407,  1.0040, -0.0480,  1.4293,  0.2166,  0.6215,  1.3849,  2.1726,
          0.4665,  0.2574,  0.1098,  1.1475,  0.6422,  0.2726,  0.7538,  0.0473,
          0.9873,  0.2942,  0.6825,  1.0672, -0.3977, -0.0139, -0.3878,  0.9958,
          0.3233]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
465000 loss tensor(0.0755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0418, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8385,  1.3710,  0.5724,  2.4789,  0.1254, -0.5905, -0.3370,  0.9118,
          0.7299,  0.3056, -0.1778,  1.0259,  0.7103,  2.3211,  0.4597,  0.1146,
         -0.0729,  0.3658,  1.4485,  0.0626,  0.7373,  0.3138, -0.0539,  0.6584,
          0.2413,  1.0040, -0.0484,  1.4293,  0.2160,  0.6216,  1.3831,  2.1709,
          0.4658,  0.2579,  0.1094,  1.1466,  0.6412,  0.2722,  0.7530,  0.0469,
          0.9865,  0.2938,  0.6813,  1.0665, -0.3977, -0.0141, -0.3877,  0.9948,
          0.3231]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
466000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8375,  1.3689,  0.5738,  2.4770,  0.1227, -0.5915, -0.3379,  0.9103,
          0.7292,  0.3047, -0.1792,  1.0251,  0.7088,  2.3202,  0.4594,  0.1145,
         -0.0727,  0.3660,  1.4476,  0.0616,  0.7378,  0.3130, -0.0539,  0.6573,
          0.2403,  1.0028, -0.0496,  1.4290,  0.2157,  0.6210,  1.3807,  2.1694,
          0.4656,  0.2582,  0.1096,  1.1466,  0.6421,  0.2730,  0.7540,  0.0474,
          0.9870,  0.2945,  0.6821,  1.0675, -0.3981, -0.0143, -0.3882,  0.9939,
          0.3228]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
467000 loss tensor(0.0648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8369,  1.3697,  0.5737,  2.4762,  0.1201, -0.5913, -0.3378,  0.9102,
          0.7290,  0.3051, -0.1803,  1.0253,  0.7089,  2.3187,  0.4590,  0.1139,
         -0.0728,  0.3661,  1.4474,  0.0621,  0.7379,  0.3137, -0.0538,  0.6588,
          0.2411,  1.0029, -0.0491,  1.4290,  0.2153,  0.6209,  1.3789,  2.1685,
          0.4647,  0.2585,  0.1094,  1.1451,  0.6410,  0.2717,  0.7533,  0.0470,
          0.9861,  0.2932,  0.6812,  1.0658, -0.3983, -0.0144, -0.3879,  0.9931,
          0.3228]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
468000 loss tensor(0.0687, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8365,  1.3684,  0.5741,  2.4748,  0.1175, -0.5906, -0.3386,  0.9097,
          0.7292,  0.3035, -0.1800,  1.0245,  0.7073,  2.3185,  0.4572,  0.1122,
         -0.0729,  0.3647,  1.4462,  0.0614,  0.7382,  0.3134, -0.0552,  0.6574,
          0.2400,  1.0021, -0.0484,  1.4275,  0.2139,  0.6195,  1.3774,  2.1676,
          0.4668,  0.2592,  0.1106,  1.1444,  0.6415,  0.2710,  0.7547,  0.0486,
          0.9860,  0.2936,  0.6821,  1.0664, -0.3972, -0.0136, -0.3888,  0.9921,
          0.3216]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
469000 loss tensor(0.0573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8374,  1.3687,  0.5751,  2.4736,  0.1146, -0.5918, -0.3393,  0.9082,
          0.7283,  0.3038, -0.1804,  1.0239,  0.7073,  2.3173,  0.4570,  0.1123,
         -0.0727,  0.3643,  1.4459,  0.0612,  0.7373,  0.3138, -0.0550,  0.6583,
          0.2400,  1.0013, -0.0505,  1.4278,  0.2137,  0.6191,  1.3759,  2.1657,
          0.4659,  0.2591,  0.1101,  1.1438,  0.6420,  0.2715,  0.7547,  0.0483,
          0.9858,  0.2935,  0.6824,  1.0659, -0.3974, -0.0138, -0.3888,  0.9917,
          0.3219]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
470000 loss tensor(0.0637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8370,  1.3678,  0.5743,  2.4734,  0.1115, -0.5909, -0.3394,  0.9076,
          0.7267,  0.3039, -0.1811,  1.0234,  0.7072,  2.3164,  0.4565,  0.1117,
         -0.0726,  0.3632,  1.4466,  0.0622,  0.7364,  0.3140, -0.0551,  0.6570,
          0.2395,  1.0016, -0.0479,  1.4276,  0.2133,  0.6194,  1.3730,  2.1643,
          0.4659,  0.2590,  0.1102,  1.1438,  0.6417,  0.2722,  0.7551,  0.0491,
          0.9857,  0.2916,  0.6823,  1.0657, -0.3974, -0.0139, -0.3890,  0.9920,
          0.3215]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
471000 loss tensor(0.0739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0411, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8373,  1.3680,  0.5777,  2.4720,  0.1092, -0.5920, -0.3401,  0.9058,
          0.7264,  0.3031, -0.1826,  1.0231,  0.7065,  2.3135,  0.4571,  0.1123,
         -0.0721,  0.3628,  1.4468,  0.0628,  0.7360,  0.3126, -0.0549,  0.6575,
          0.2398,  0.9998, -0.0486,  1.4287,  0.2140,  0.6193,  1.3707,  2.1632,
          0.4652,  0.2585,  0.1091,  1.1439,  0.6414,  0.2725,  0.7552,  0.0489,
          0.9860,  0.2924,  0.6828,  1.0654, -0.3988, -0.0150, -0.3880,  0.9924,
          0.3226]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
472000 loss tensor(0.0648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8363,  1.3669,  0.5765,  2.4700,  0.1065, -0.5931, -0.3401,  0.9056,
          0.7261,  0.3032, -0.1845,  1.0230,  0.7054,  2.3129,  0.4561,  0.1122,
         -0.0725,  0.3639,  1.4465,  0.0613,  0.7364,  0.3132, -0.0543,  0.6578,
          0.2396,  1.0003, -0.0502,  1.4282,  0.2135,  0.6199,  1.3686,  2.1610,
          0.4644,  0.2596,  0.1095,  1.1427,  0.6412,  0.2716,  0.7561,  0.0480,
          0.9855,  0.2923,  0.6829,  1.0652, -0.3989, -0.0152, -0.3886,  0.9907,
          0.3212]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
473000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0379, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8385,  1.3673,  0.5776,  2.4708,  0.1026, -0.5931, -0.3399,  0.9054,
          0.7266,  0.3038, -0.1847,  1.0233,  0.7051,  2.3132,  0.4556,  0.1110,
         -0.0733,  0.3617,  1.4449,  0.0621,  0.7364,  0.3130, -0.0556,  0.6577,
          0.2401,  1.0003, -0.0487,  1.4272,  0.2114,  0.6180,  1.3680,  2.1615,
          0.4647,  0.2603,  0.1102,  1.1414,  0.6404,  0.2709,  0.7548,  0.0492,
          0.9840,  0.2912,  0.6817,  1.0637, -0.3971, -0.0136, -0.3886,  0.9894,
          0.3216]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
474000 loss tensor(0.0642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8358,  1.3673,  0.5788,  2.4691,  0.0997, -0.5931, -0.3402,  0.9035,
          0.7262,  0.3033, -0.1860,  1.0231,  0.7040,  2.3113,  0.4552,  0.1110,
         -0.0739,  0.3619,  1.4451,  0.0629,  0.7359,  0.3150, -0.0550,  0.6577,
          0.2397,  1.0005, -0.0512,  1.4278,  0.2115,  0.6187,  1.3642,  2.1597,
          0.4644,  0.2610,  0.1097,  1.1407,  0.6399,  0.2711,  0.7552,  0.0484,
          0.9834,  0.2919,  0.6816,  1.0632, -0.3977, -0.0138, -0.3886,  0.9889,
          0.3219]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
475000 loss tensor(0.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8377,  1.3666,  0.5790,  2.4665,  0.0953, -0.5931, -0.3422,  0.9016,
          0.7251,  0.3031, -0.1862,  1.0219,  0.7047,  2.3091,  0.4559,  0.1112,
         -0.0721,  0.3618,  1.4461,  0.0629,  0.7349,  0.3137, -0.0547,  0.6573,
          0.2391,  0.9986, -0.0500,  1.4286,  0.2122,  0.6194,  1.3628,  2.1584,
          0.4640,  0.2591,  0.1085,  1.1411,  0.6398,  0.2713,  0.7552,  0.0488,
          0.9838,  0.2904,  0.6826,  1.0634, -0.3989, -0.0152, -0.3872,  0.9894,
          0.3227]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
476000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0342, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8368,  1.3662,  0.5803,  2.4657,  0.0955, -0.5935, -0.3415,  0.9029,
          0.7248,  0.3031, -0.1872,  1.0224,  0.7033,  2.3088,  0.4545,  0.1102,
         -0.0732,  0.3604,  1.4458,  0.0616,  0.7347,  0.3139, -0.0555,  0.6588,
          0.2396,  0.9973, -0.0492,  1.4271,  0.2108,  0.6182,  1.3611,  2.1565,
          0.4643,  0.2603,  0.1093,  1.1399,  0.6395,  0.2715,  0.7556,  0.0497,
          0.9835,  0.2902,  0.6820,  1.0634, -0.3986, -0.0147, -0.3886,  0.9892,
          0.3205]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
477000 loss tensor(0.0712, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0372, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8362,  1.3655,  0.5796,  2.4643,  0.0905, -0.5954, -0.3424,  0.9007,
          0.7240,  0.3021, -0.1894,  1.0209,  0.7015,  2.3069,  0.4551,  0.1108,
         -0.0728,  0.3609,  1.4430,  0.0612,  0.7343,  0.3149, -0.0542,  0.6575,
          0.2386,  0.9975, -0.0511,  1.4280,  0.2114,  0.6188,  1.3583,  2.1546,
          0.4638,  0.2600,  0.1086,  1.1400,  0.6396,  0.2719,  0.7566,  0.0491,
          0.9838,  0.2912,  0.6825,  1.0642, -0.3993, -0.0158, -0.3874,  0.9875,
          0.3221]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
478000 loss tensor(0.0648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8370,  1.3657,  0.5795,  2.4622,  0.0888, -0.5958, -0.3426,  0.9002,
          0.7226,  0.3026, -0.1902,  1.0205,  0.7014,  2.3058,  0.4542,  0.1106,
         -0.0730,  0.3600,  1.4439,  0.0619,  0.7322,  0.3142, -0.0542,  0.6586,
          0.2381,  0.9970, -0.0522,  1.4273,  0.2109,  0.6190,  1.3568,  2.1525,
          0.4628,  0.2607,  0.1088,  1.1396,  0.6397,  0.2722,  0.7568,  0.0491,
          0.9838,  0.2906,  0.6826,  1.0639, -0.3986, -0.0154, -0.3883,  0.9881,
          0.3208]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
479000 loss tensor(0.0589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8355,  1.3646,  0.5795,  2.4613,  0.0854, -0.5952, -0.3425,  0.9006,
          0.7229,  0.3013, -0.1903,  1.0204,  0.7002,  2.3056,  0.4533,  0.1089,
         -0.0731,  0.3593,  1.4435,  0.0613,  0.7343,  0.3136, -0.0554,  0.6574,
          0.2384,  0.9961, -0.0497,  1.4265,  0.2097,  0.6171,  1.3546,  2.1518,
          0.4642,  0.2608,  0.1097,  1.1383,  0.6402,  0.2711,  0.7570,  0.0506,
          0.9838,  0.2901,  0.6827,  1.0637, -0.3984, -0.0149, -0.3884,  0.9866,
          0.3206]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
480000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8365,  1.3644,  0.5813,  2.4606,  0.0812, -0.5960, -0.3436,  0.8981,
          0.7220,  0.3020, -0.1924,  1.0201,  0.7001,  2.3029,  0.4542,  0.1104,
         -0.0731,  0.3597,  1.4429,  0.0620,  0.7323,  0.3140, -0.0539,  0.6570,
          0.2380,  0.9955, -0.0515,  1.4280,  0.2106,  0.6183,  1.3525,  2.1510,
          0.4627,  0.2606,  0.1082,  1.1386,  0.6394,  0.2721,  0.7565,  0.0495,
          0.9830,  0.2902,  0.6827,  1.0630, -0.3992, -0.0158, -0.3868,  0.9864,
          0.3223]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
481000 loss tensor(0.0638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8366,  1.3643,  0.5814,  2.4603,  0.0796, -0.5967, -0.3433,  0.8972,
          0.7214,  0.3012, -0.1931,  1.0195,  0.6995,  2.3021,  0.4528,  0.1097,
         -0.0726,  0.3601,  1.4440,  0.0628,  0.7329,  0.3143, -0.0544,  0.6591,
          0.2387,  0.9952, -0.0514,  1.4271,  0.2100,  0.6180,  1.3506,  2.1491,
          0.4624,  0.2608,  0.1080,  1.1378,  0.6392,  0.2715,  0.7576,  0.0494,
          0.9827,  0.2895,  0.6830,  1.0627, -0.3991, -0.0159, -0.3881,  0.9872,
          0.3204]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
482000 loss tensor(0.0741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0407, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8341,  1.3647,  0.5813,  2.4567,  0.0767, -0.5951, -0.3437,  0.8979,
          0.7207,  0.3013, -0.1924,  1.0191,  0.6998,  2.3015,  0.4520,  0.1080,
         -0.0732,  0.3582,  1.4423,  0.0617,  0.7324,  0.3152, -0.0553,  0.6577,
          0.2378,  0.9946, -0.0505,  1.4263,  0.2090,  0.6168,  1.3494,  2.1479,
          0.4638,  0.2611,  0.1091,  1.1371,  0.6388,  0.2708,  0.7578,  0.0508,
          0.9830,  0.2881,  0.6832,  1.0621, -0.3989, -0.0155, -0.3881,  0.9857,
          0.3203]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
483000 loss tensor(0.0696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0385, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8345,  1.3643,  0.5821,  2.4565,  0.0738, -0.5956, -0.3443,  0.8961,
          0.7199,  0.3008, -0.1930,  1.0185,  0.6991,  2.3009,  0.4518,  0.1080,
         -0.0732,  0.3577,  1.4429,  0.0620,  0.7318,  0.3139, -0.0554,  0.6573,
          0.2374,  0.9942, -0.0517,  1.4261,  0.2084,  0.6170,  1.3466,  2.1458,
          0.4636,  0.2612,  0.1085,  1.1373,  0.6393,  0.2716,  0.7581,  0.0514,
          0.9825,  0.2883,  0.6829,  1.0620, -0.3984, -0.0151, -0.3881,  0.9859,
          0.3201]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
484000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8355,  1.3631,  0.5832,  2.4547,  0.0710, -0.5984, -0.3443,  0.8945,
          0.7201,  0.3002, -0.1964,  1.0179,  0.6977,  2.2980,  0.4522,  0.1088,
         -0.0728,  0.3592,  1.4424,  0.0619,  0.7316,  0.3136, -0.0540,  0.6576,
          0.2380,  0.9937, -0.0519,  1.4273,  0.2093,  0.6173,  1.3444,  2.1446,
          0.4617,  0.2613,  0.1072,  1.1364,  0.6389,  0.2711,  0.7582,  0.0500,
          0.9824,  0.2886,  0.6832,  1.0621, -0.4000, -0.0167, -0.3872,  0.9851,
          0.3207]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
485000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8373,  1.3636,  0.5843,  2.4549,  0.0681, -0.5978, -0.3443,  0.8935,
          0.7202,  0.3015, -0.1955,  1.0192,  0.6973,  2.2977,  0.4510,  0.1076,
         -0.0742,  0.3578,  1.4418,  0.0622,  0.7324,  0.3151, -0.0552,  0.6585,
          0.2385,  0.9943, -0.0520,  1.4263,  0.2078,  0.6165,  1.3442,  2.1445,
          0.4622,  0.2624,  0.1075,  1.1349,  0.6379,  0.2712,  0.7571,  0.0507,
          0.9805,  0.2877,  0.6818,  1.0607, -0.3989, -0.0156, -0.3880,  0.9841,
          0.3204]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
486000 loss tensor(0.0609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8361,  1.3629,  0.5845,  2.4538,  0.0645, -0.5980, -0.3455,  0.8928,
          0.7184,  0.3001, -0.1975,  1.0173,  0.6968,  2.2966,  0.4518,  0.1082,
         -0.0731,  0.3563,  1.4420,  0.0620,  0.7297,  0.3133, -0.0541,  0.6563,
          0.2375,  0.9931, -0.0512,  1.4269,  0.2084,  0.6166,  1.3407,  2.1420,
          0.4621,  0.2614,  0.1077,  1.1362,  0.6387,  0.2715,  0.7580,  0.0508,
          0.9813,  0.2877,  0.6830,  1.0613, -0.3993, -0.0166, -0.3870,  0.9843,
          0.3208]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
487000 loss tensor(0.0607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8379,  1.3629,  0.5853,  2.4536,  0.0611, -0.5987, -0.3457,  0.8918,
          0.7182,  0.3012, -0.1987,  1.0178,  0.6968,  2.2942,  0.4512,  0.1079,
         -0.0734,  0.3562,  1.4414,  0.0630,  0.7303,  0.3151, -0.0543,  0.6575,
          0.2385,  0.9925, -0.0526,  1.4271,  0.2080,  0.6171,  1.3393,  2.1416,
          0.4609,  0.2613,  0.1070,  1.1345,  0.6372,  0.2716,  0.7573,  0.0507,
          0.9807,  0.2871,  0.6822,  1.0600, -0.3999, -0.0168, -0.3867,  0.9838,
          0.3211]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
488000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8367,  1.3622,  0.5849,  2.4518,  0.0582, -0.5977, -0.3467,  0.8911,
          0.7177,  0.2998, -0.1988,  1.0166,  0.6964,  2.2934,  0.4510,  0.1068,
         -0.0731,  0.3549,  1.4408,  0.0634,  0.7292,  0.3149, -0.0549,  0.6576,
          0.2374,  0.9913, -0.0524,  1.4270,  0.2074,  0.6164,  1.3376,  2.1403,
          0.4621,  0.2611,  0.1084,  1.1345,  0.6377,  0.2712,  0.7583,  0.0516,
          0.9808,  0.2864,  0.6832,  1.0605, -0.4001, -0.0167, -0.3864,  0.9840,
          0.3212]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
489000 loss tensor(0.0708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8365,  1.3622,  0.5856,  2.4494,  0.0568, -0.5988, -0.3472,  0.8898,
          0.7174,  0.2994, -0.2002,  1.0158,  0.6953,  2.2920,  0.4507,  0.1066,
         -0.0726,  0.3556,  1.4412,  0.0626,  0.7293,  0.3133, -0.0546,  0.6573,
          0.2371,  0.9907, -0.0522,  1.4268,  0.2072,  0.6161,  1.3357,  2.1383,
          0.4618,  0.2612,  0.1078,  1.1339,  0.6382,  0.2710,  0.7593,  0.0515,
          0.9810,  0.2869,  0.6837,  1.0604, -0.4004, -0.0171, -0.3868,  0.9825,
          0.3205]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
490000 loss tensor(0.0637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8360,  1.3619,  0.5866,  2.4489,  0.0535, -0.5988, -0.3462,  0.8903,
          0.7178,  0.3003, -0.2003,  1.0169,  0.6942,  2.2918,  0.4491,  0.1055,
         -0.0740,  0.3544,  1.4407,  0.0625,  0.7300,  0.3138, -0.0554,  0.6582,
          0.2385,  0.9906, -0.0519,  1.4259,  0.2057,  0.6153,  1.3349,  2.1384,
          0.4617,  0.2623,  0.1076,  1.1323,  0.6370,  0.2704,  0.7579,  0.0521,
          0.9795,  0.2864,  0.6821,  1.0592, -0.3996, -0.0161, -0.3877,  0.9818,
          0.3198]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
491000 loss tensor(0.0657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0343, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8353,  1.3623,  0.5866,  2.4476,  0.0503, -0.5991, -0.3468,  0.8885,
          0.7163,  0.2999, -0.2015,  1.0163,  0.6947,  2.2899,  0.4502,  0.1058,
         -0.0745,  0.3545,  1.4410,  0.0634,  0.7298,  0.3159, -0.0551,  0.6581,
          0.2371,  0.9912, -0.0526,  1.4265,  0.2063,  0.6163,  1.3320,  2.1361,
          0.4613,  0.2629,  0.1074,  1.1326,  0.6361,  0.2705,  0.7584,  0.0520,
          0.9793,  0.2856,  0.6826,  1.0588, -0.4005, -0.0174, -0.3864,  0.9808,
          0.3208]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
492000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8368,  1.3611,  0.5881,  2.4465,  0.0478, -0.6001, -0.3479,  0.8876,
          0.7158,  0.3001, -0.2032,  1.0159,  0.6935,  2.2884,  0.4497,  0.1063,
         -0.0736,  0.3542,  1.4399,  0.0632,  0.7287,  0.3148, -0.0544,  0.6583,
          0.2370,  0.9894, -0.0527,  1.4265,  0.2061,  0.6161,  1.3303,  2.1343,
          0.4601,  0.2623,  0.1067,  1.1320,  0.6364,  0.2712,  0.7584,  0.0513,
          0.9794,  0.2855,  0.6827,  1.0588, -0.4007, -0.0177, -0.3865,  0.9815,
          0.3208]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
493000 loss tensor(0.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0398, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8349,  1.3608,  0.5872,  2.4457,  0.0442, -0.6000, -0.3478,  0.8885,
          0.7156,  0.2995, -0.2026,  1.0155,  0.6924,  2.2882,  0.4488,  0.1048,
         -0.0738,  0.3525,  1.4391,  0.0625,  0.7291,  0.3141, -0.0555,  0.6585,
          0.2372,  0.9889, -0.0530,  1.4257,  0.2048,  0.6149,  1.3293,  2.1338,
          0.4609,  0.2628,  0.1085,  1.1311,  0.6363,  0.2705,  0.7584,  0.0526,
          0.9786,  0.2849,  0.6821,  1.0581, -0.3996, -0.0165, -0.3867,  0.9802,
          0.3205]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
494000 loss tensor(0.0748, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0415, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8348,  1.3602,  0.5889,  2.4432,  0.0424, -0.6010, -0.3489,  0.8855,
          0.7150,  0.2985, -0.2055,  1.0143,  0.6915,  2.2859,  0.4488,  0.1055,
         -0.0734,  0.3536,  1.4392,  0.0624,  0.7284,  0.3148, -0.0543,  0.6568,
          0.2361,  0.9883, -0.0542,  1.4261,  0.2055,  0.6153,  1.3262,  2.1321,
          0.4604,  0.2627,  0.1071,  1.1311,  0.6366,  0.2709,  0.7596,  0.0522,
          0.9794,  0.2861,  0.6836,  1.0591, -0.4008, -0.0177, -0.3865,  0.9791,
          0.3203]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
495000 loss tensor(0.0620, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8352,  1.3612,  0.5897,  2.4435,  0.0391, -0.6009, -0.3489,  0.8859,
          0.7147,  0.2997, -0.2066,  1.0153,  0.6916,  2.2847,  0.4485,  0.1050,
         -0.0741,  0.3524,  1.4386,  0.0627,  0.7275,  0.3155, -0.0548,  0.6584,
          0.2377,  0.9884, -0.0538,  1.4261,  0.2047,  0.6147,  1.3246,  2.1314,
          0.4599,  0.2633,  0.1071,  1.1299,  0.6359,  0.2707,  0.7593,  0.0520,
          0.9780,  0.2847,  0.6824,  1.0575, -0.4006, -0.0176, -0.3862,  0.9799,
          0.3206]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
496000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8352,  1.3607,  0.5906,  2.4420,  0.0371, -0.6013, -0.3486,  0.8847,
          0.7149,  0.2993, -0.2069,  1.0149,  0.6902,  2.2848,  0.4475,  0.1042,
         -0.0747,  0.3520,  1.4387,  0.0634,  0.7281,  0.3149, -0.0552,  0.6581,
          0.2371,  0.9886, -0.0542,  1.4252,  0.2035,  0.6144,  1.3227,  2.1302,
          0.4598,  0.2641,  0.1069,  1.1291,  0.6355,  0.2704,  0.7592,  0.0524,
          0.9771,  0.2851,  0.6827,  1.0574, -0.3998, -0.0167, -0.3872,  0.9784,
          0.3196]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
497000 loss tensor(0.0654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8359,  1.3602,  0.5892,  2.4405,  0.0330, -0.6011, -0.3508,  0.8834,
          0.7129,  0.2985, -0.2075,  1.0132,  0.6911,  2.2828,  0.4481,  0.1043,
         -0.0730,  0.3509,  1.4395,  0.0634,  0.7270,  0.3139, -0.0552,  0.6576,
          0.2362,  0.9863, -0.0537,  1.4258,  0.2039,  0.6152,  1.3214,  2.1282,
          0.4601,  0.2625,  0.1076,  1.1298,  0.6366,  0.2712,  0.7599,  0.0528,
          0.9781,  0.2840,  0.6834,  1.0574, -0.4006, -0.0178, -0.3860,  0.9794,
          0.3205]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
498000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0362, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8352,  1.3587,  0.5896,  2.4385,  0.0307, -0.6017, -0.3513,  0.8822,
          0.7128,  0.2976, -0.2083,  1.0126,  0.6904,  2.2811,  0.4474,  0.1037,
         -0.0728,  0.3518,  1.4390,  0.0626,  0.7264,  0.3135, -0.0549,  0.6559,
          0.2354,  0.9858, -0.0540,  1.4256,  0.2038,  0.6142,  1.3195,  2.1272,
          0.4600,  0.2628,  0.1071,  1.1293,  0.6372,  0.2705,  0.7607,  0.0534,
          0.9781,  0.2840,  0.6841,  1.0574, -0.4011, -0.0183, -0.3862,  0.9779,
          0.3202]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
499000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0385, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.8360,  1.3597,  0.5913,  2.4377,  0.0278, -0.6027, -0.3497,  0.8823,
          0.7134,  0.2983, -0.2093,  1.0132,  0.6891,  2.2807,  0.4471,  0.1034,
         -0.0743,  0.3518,  1.4377,  0.0630,  0.7271,  0.3155, -0.0550,  0.6575,
          0.2360,  0.9872, -0.0548,  1.4255,  0.2031,  0.6139,  1.3187,  2.1259,
          0.4590,  0.2642,  0.1070,  1.1277,  0.6353,  0.2699,  0.7599,  0.0530,
          0.9768,  0.2844,  0.6827,  1.0559, -0.4003, -0.0175, -0.3863,  0.9765,
          0.3199]], device='cuda:0')
超出最大迭代
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
500000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[-1.2079, -1.1379,  0.9830,  1.4490, -1.5329, -1.6170, -0.5358, -0.6943,
          0.0292, -0.0127,  1.1791,  0.4206, -1.4021, -0.9724, -0.3290,  0.3148,
         -0.4968, -1.6286, -0.8141,  0.5597, -0.1658,  1.6243,  0.8898,  0.4165,
         -0.5546, -0.5827,  0.6977, -1.0213,  0.3283,  0.2387, -0.8390,  0.1199,
          0.7366,  1.6323, -1.0220, -0.3320, -0.6585,  1.8645,  1.2687,  1.3174,
          1.2652,  0.0522, -0.0046, -0.7646,  1.7884,  1.3601,  1.0011, -0.8306,
          0.5414]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
501000 loss tensor(0.1706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0586, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0634,  1.0296,  0.1488,  2.6182, -1.2777, -1.6812, -0.6486,  0.7199,
          0.3095, -0.0504, -0.1126,  1.0498,  0.2950,  0.8286,  0.7819, -0.4052,
         -0.1790,  0.0881,  1.1480,  0.2265,  0.4304,  0.3732,  0.2250,  0.5367,
          0.0492,  0.6024, -0.1335,  1.1987,  0.1791,  0.4466,  0.9407,  0.9947,
          0.2352,  0.2457, -0.1230,  0.7224,  0.4009,  0.3570,  0.7232,  0.3090,
          0.8378, -0.1076,  0.7841,  0.8009,  0.3880,  0.0051, -0.5156,  0.6972,
          0.2319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
502000 loss tensor(0.1118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0534, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0950,  1.0161,  0.1742,  2.7391, -1.1671, -1.6570, -0.6872,  0.7965,
          0.3346, -0.0420, -0.0797,  1.0549,  0.3350,  0.9193,  0.7611, -0.4234,
         -0.2021,  0.1270,  1.2071,  0.2019,  0.4710,  0.3260,  0.2375,  0.5542,
          0.0924,  0.6194, -0.1342,  1.2718,  0.1948,  0.4507,  0.9234,  1.0130,
          0.2229,  0.2227, -0.1095,  0.7813,  0.4052,  0.3529,  0.7120,  0.3333,
          0.8136, -0.0568,  0.7983,  0.8241,  0.3755,  0.0376, -0.5172,  0.7014,
          0.2721]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
503000 loss tensor(0.0876, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0376, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0340,  1.0217,  0.1708,  2.7371, -1.0142, -1.6245, -0.6775,  0.7912,
          0.3459, -0.0222, -0.0786,  1.0574,  0.3666,  0.9710,  0.7726, -0.4284,
         -0.2020,  0.1385,  1.2044,  0.1955,  0.4656,  0.2817,  0.2280,  0.5821,
          0.0955,  0.6610, -0.1400,  1.2908,  0.2141,  0.4589,  0.9662,  1.0445,
          0.2156,  0.2042, -0.1064,  0.7979,  0.4243,  0.3480,  0.7022,  0.3431,
          0.8019, -0.0282,  0.8080,  0.8361,  0.3671,  0.0674, -0.5213,  0.7073,
          0.3109]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
504000 loss tensor(0.0858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0425, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0159,  1.0176,  0.1823,  2.7225, -0.9230, -1.6144, -0.6743,  0.7823,
          0.3569, -0.0097, -0.0643,  1.0572,  0.3852,  0.9980,  0.7855, -0.4288,
         -0.2026,  0.1443,  1.2065,  0.1983,  0.4569,  0.2575,  0.2222,  0.5917,
          0.0921,  0.6738, -0.1419,  1.2913,  0.2267,  0.4633,  1.0134,  1.0643,
          0.2142,  0.1950, -0.0998,  0.8091,  0.4322,  0.3467,  0.6972,  0.3400,
          0.7922, -0.0141,  0.8148,  0.8422,  0.3779,  0.0739, -0.5154,  0.7116,
          0.3203]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
505000 loss tensor(0.0785, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0037,  1.0086,  0.2034,  2.7202, -0.8676, -1.6144, -0.6755,  0.7760,
          0.3636, -0.0057, -0.0455,  1.0536,  0.3934,  1.0097,  0.7985, -0.4292,
         -0.2052,  0.1538,  1.2055,  0.1994,  0.4509,  0.2464,  0.2213,  0.5943,
          0.0830,  0.6749, -0.1432,  1.2888,  0.2322,  0.4663,  1.0502,  1.0757,
          0.2125,  0.1890, -0.0926,  0.8147,  0.4326,  0.3439,  0.6956,  0.3376,
          0.7815, -0.0089,  0.8211,  0.8446,  0.3869,  0.0741, -0.5080,  0.7136,
          0.3194]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
506000 loss tensor(0.0618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.9389e-01,  9.9790e-01,  2.3931e-01,  2.7512e+00, -8.5653e-01,
         -1.6161e+00, -6.8121e-01,  7.8592e-01,  3.6425e-01, -2.1383e-03,
         -2.1014e-02,  1.0434e+00,  3.9176e-01,  1.0099e+00,  8.0255e-01,
         -4.3204e-01, -2.0713e-01,  1.6340e-01,  1.2019e+00,  1.9728e-01,
          4.5242e-01,  2.3794e-01,  2.2984e-01,  5.9435e-01,  7.4426e-02,
          6.6926e-01, -1.4257e-01,  1.2903e+00,  2.3141e-01,  4.6654e-01,
          1.0477e+00,  1.0753e+00,  2.0759e-01,  1.8364e-01, -7.9080e-02,
          8.1709e-01,  4.3532e-01,  3.4246e-01,  6.9573e-01,  3.4527e-01,
          7.6687e-01, -9.2902e-03,  8.2587e-01,  8.4735e-01,  3.8792e-01,
          7.5399e-02, -5.0114e-01,  7.1607e-01,  3.1821e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
507000 loss tensor(0.0725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.8928e-01,  9.9587e-01,  2.4700e-01,  2.7611e+00, -8.5098e-01,
         -1.6147e+00, -6.8123e-01,  7.8837e-01,  3.6546e-01, -7.1406e-05,
         -1.5771e-02,  1.0422e+00,  3.9106e-01,  1.0107e+00,  8.0482e-01,
         -4.3357e-01, -2.0913e-01,  1.6751e-01,  1.2019e+00,  1.9619e-01,
          4.5454e-01,  2.3838e-01,  2.3252e-01,  5.9520e-01,  7.2837e-02,
          6.6836e-01, -1.4323e-01,  1.2910e+00,  2.2979e-01,  4.6679e-01,
          1.0459e+00,  1.0769e+00,  2.0615e-01,  1.8364e-01, -7.8279e-02,
          8.1655e-01,  4.3395e-01,  3.4090e-01,  6.9543e-01,  3.4772e-01,
          7.6237e-01, -8.8546e-03,  8.2548e-01,  8.4747e-01,  3.8801e-01,
          7.4999e-02, -4.9795e-01,  7.1514e-01,  3.1794e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
508000 loss tensor(0.0680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0336, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.8926e-01,  9.9209e-01,  2.4644e-01,  2.7592e+00, -8.4761e-01,
         -1.6120e+00, -6.8155e-01,  7.8734e-01,  3.6419e-01, -3.4412e-04,
         -1.5123e-02,  1.0406e+00,  3.9149e-01,  1.0118e+00,  8.0928e-01,
         -4.3332e-01, -2.0797e-01,  1.6629e-01,  1.2026e+00,  1.9605e-01,
          4.5412e-01,  2.3688e-01,  2.3211e-01,  5.9528e-01,  7.0474e-02,
          6.6726e-01, -1.4248e-01,  1.2926e+00,  2.2980e-01,  4.6889e-01,
          1.0421e+00,  1.0777e+00,  2.0609e-01,  1.8201e-01, -7.8102e-02,
          8.1775e-01,  4.3363e-01,  3.4125e-01,  6.9655e-01,  3.4704e-01,
          7.6303e-01, -9.8559e-03,  8.2626e-01,  8.4825e-01,  3.8576e-01,
          7.2700e-02, -4.9390e-01,  7.1833e-01,  3.2022e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
509000 loss tensor(0.0720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 9.8485e-01,  9.9084e-01,  2.4464e-01,  2.7560e+00, -8.4029e-01,
         -1.6108e+00, -6.7905e-01,  7.8883e-01,  3.6542e-01,  1.1991e-03,
         -1.2738e-02,  1.0408e+00,  3.8896e-01,  1.0183e+00,  8.1438e-01,
         -4.3436e-01, -2.0862e-01,  1.6685e-01,  1.2038e+00,  1.9287e-01,
          4.5559e-01,  2.3594e-01,  2.3058e-01,  5.9537e-01,  6.9052e-02,
          6.6797e-01, -1.4579e-01,  1.2921e+00,  2.2602e-01,  4.6838e-01,
          1.0412e+00,  1.0838e+00,  2.0464e-01,  1.8153e-01, -7.7422e-02,
          8.1612e-01,  4.3272e-01,  3.3985e-01,  6.9694e-01,  3.4611e-01,
          7.6253e-01, -8.1528e-03,  8.2512e-01,  8.4929e-01,  3.8361e-01,
          7.1896e-02, -4.9065e-01,  7.2009e-01,  3.2075e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
510000 loss tensor(0.0681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0361, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9799,  0.9882,  0.2398,  2.7541, -0.8299, -1.6095, -0.6770,  0.7893,
          0.3652,  0.0028, -0.0112,  1.0407,  0.3888,  1.0257,  0.8223, -0.4333,
         -0.2091,  0.1681,  1.2072,  0.1896,  0.4549,  0.2355,  0.2310,  0.5970,
          0.0665,  0.6694, -0.1481,  1.2939,  0.2239,  0.4707,  1.0377,  1.0930,
          0.2019,  0.1805, -0.0779,  0.8166,  0.4311,  0.3400,  0.6981,  0.3430,
          0.7618, -0.0095,  0.8243,  0.8509,  0.3774,  0.0677, -0.4857,  0.7252,
          0.3229]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
511000 loss tensor(0.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9799,  0.9862,  0.2366,  2.7536, -0.8250, -1.6067, -0.6744,  0.7888,
          0.3671,  0.0045, -0.0085,  1.0416,  0.3868,  1.0326,  0.8294, -0.4339,
         -0.2104,  0.1684,  1.2078,  0.1888,  0.4570,  0.2353,  0.2301,  0.5966,
          0.0642,  0.6704, -0.1492,  1.2957,  0.2212,  0.4712,  1.0364,  1.1018,
          0.2015,  0.1800, -0.0795,  0.8154,  0.4285,  0.3383,  0.6971,  0.3427,
          0.7605, -0.0093,  0.8230,  0.8516,  0.3733,  0.0660, -0.4813,  0.7272,
          0.3264]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
512000 loss tensor(0.0649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0319, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9798,  0.9849,  0.2370,  2.7511, -0.8247, -1.6073, -0.6758,  0.7893,
          0.3659,  0.0039, -0.0095,  1.0402,  0.3879,  1.0319,  0.8295, -0.4336,
         -0.2087,  0.1664,  1.2085,  0.1888,  0.4573,  0.2336,  0.2302,  0.5963,
          0.0633,  0.6690, -0.1480,  1.2957,  0.2219,  0.4716,  1.0352,  1.1001,
          0.2021,  0.1791, -0.0784,  0.8165,  0.4301,  0.3391,  0.6984,  0.3425,
          0.7616, -0.0099,  0.8237,  0.8522,  0.3725,  0.0649, -0.4812,  0.7288,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
513000 loss tensor(0.0588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9809,  0.9844,  0.2362,  2.7494, -0.8259, -1.6076, -0.6749,  0.7877,
          0.3655,  0.0040, -0.0113,  1.0392,  0.3865,  1.0319,  0.8291, -0.4326,
         -0.2092,  0.1681,  1.2082,  0.1887,  0.4561,  0.2338,  0.2306,  0.5960,
          0.0630,  0.6690, -0.1488,  1.2952,  0.2216,  0.4722,  1.0345,  1.1002,
          0.2011,  0.1803, -0.0792,  0.8161,  0.4303,  0.3390,  0.6986,  0.3409,
          0.7612, -0.0093,  0.8240,  0.8523,  0.3731,  0.0649, -0.4819,  0.7283,
          0.3255]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
514000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9820,  0.9852,  0.2384,  2.7482, -0.8272, -1.6074, -0.6746,  0.7875,
          0.3668,  0.0044, -0.0109,  1.0407,  0.3856,  1.0320,  0.8286, -0.4334,
         -0.2099,  0.1675,  1.2090,  0.1897,  0.4564,  0.2350,  0.2290,  0.5963,
          0.0643,  0.6694, -0.1484,  1.2943,  0.2200,  0.4711,  1.0353,  1.1007,
          0.2015,  0.1811, -0.0793,  0.8141,  0.4287,  0.3373,  0.6980,  0.3411,
          0.7593, -0.0102,  0.8225,  0.8505,  0.3741,  0.0658, -0.4822,  0.7264,
          0.3253]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
515000 loss tensor(0.0643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9822,  0.9843,  0.2377,  2.7462, -0.8285, -1.6057, -0.6762,  0.7859,
          0.3652,  0.0036, -0.0112,  1.0388,  0.3861,  1.0317,  0.8285, -0.4334,
         -0.2085,  0.1667,  1.2081,  0.1894,  0.4572,  0.2340,  0.2286,  0.5950,
          0.0623,  0.6682, -0.1475,  1.2937,  0.2200,  0.4712,  1.0345,  1.1000,
          0.2032,  0.1804, -0.0789,  0.8152,  0.4306,  0.3384,  0.6989,  0.3428,
          0.7609, -0.0100,  0.8239,  0.8516,  0.3744,  0.0654, -0.4823,  0.7268,
          0.3255]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
516000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9839,  0.9856,  0.2395,  2.7441, -0.8299, -1.6055, -0.6759,  0.7863,
          0.3659,  0.0050, -0.0117,  1.0393,  0.3863,  1.0308,  0.8295, -0.4337,
         -0.2085,  0.1654,  1.2088,  0.1900,  0.4565,  0.2347,  0.2282,  0.5955,
          0.0633,  0.6683, -0.1476,  1.2941,  0.2196,  0.4708,  1.0349,  1.1004,
          0.2029,  0.1802, -0.0790,  0.8141,  0.4292,  0.3374,  0.6981,  0.3421,
          0.7597, -0.0104,  0.8226,  0.8498,  0.3747,  0.0650, -0.4809,  0.7268,
          0.3261]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
517000 loss tensor(0.0727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0401, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9839,  0.9849,  0.2384,  2.7417, -0.8300, -1.6051, -0.6764,  0.7856,
          0.3657,  0.0035, -0.0128,  1.0382,  0.3849,  1.0305,  0.8286, -0.4330,
         -0.2085,  0.1651,  1.2076,  0.1901,  0.4559,  0.2340,  0.2283,  0.5955,
          0.0624,  0.6671, -0.1483,  1.2932,  0.2197,  0.4707,  1.0337,  1.1006,
          0.2035,  0.1807, -0.0786,  0.8140,  0.4303,  0.3379,  0.6994,  0.3418,
          0.7598, -0.0092,  0.8235,  0.8511,  0.3745,  0.0647, -0.4822,  0.7270,
          0.3254]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
518000 loss tensor(0.0645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9857,  0.9853,  0.2407,  2.7406, -0.8305, -1.6062, -0.6755,  0.7853,
          0.3655,  0.0051, -0.0131,  1.0384,  0.3852,  1.0297,  0.8287, -0.4333,
         -0.2082,  0.1644,  1.2088,  0.1911,  0.4551,  0.2344,  0.2275,  0.5968,
          0.0634,  0.6680, -0.1484,  1.2934,  0.2195,  0.4705,  1.0340,  1.1000,
          0.2032,  0.1812, -0.0789,  0.8136,  0.4292,  0.3376,  0.6991,  0.3413,
          0.7590, -0.0107,  0.8224,  0.8497,  0.3747,  0.0643, -0.4822,  0.7268,
          0.3253]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
519000 loss tensor(0.0730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9868,  0.9852,  0.2405,  2.7391, -0.8324, -1.6049, -0.6764,  0.7838,
          0.3655,  0.0047, -0.0138,  1.0381,  0.3855,  1.0298,  0.8297, -0.4329,
         -0.2085,  0.1631,  1.2077,  0.1923,  0.4553,  0.2344,  0.2273,  0.5958,
          0.0628,  0.6668, -0.1487,  1.2932,  0.2190,  0.4706,  1.0329,  1.0997,
          0.2039,  0.1812, -0.0790,  0.8133,  0.4298,  0.3373,  0.6992,  0.3413,
          0.7586, -0.0102,  0.8227,  0.8493,  0.3752,  0.0644, -0.4815,  0.7266,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
520000 loss tensor(0.0587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9871,  0.9846,  0.2407,  2.7366, -0.8322, -1.6053, -0.6761,  0.7834,
          0.3645,  0.0057, -0.0141,  1.0372,  0.3852,  1.0289,  0.8289, -0.4327,
         -0.2081,  0.1630,  1.2081,  0.1907,  0.4542,  0.2343,  0.2269,  0.5964,
          0.0630,  0.6669, -0.1484,  1.2927,  0.2192,  0.4711,  1.0322,  1.0984,
          0.2036,  0.1822, -0.0790,  0.8136,  0.4297,  0.3383,  0.6994,  0.3411,
          0.7591, -0.0106,  0.8230,  0.8495,  0.3747,  0.0636, -0.4823,  0.7264,
          0.3252]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
521000 loss tensor(0.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9888,  0.9848,  0.2408,  2.7354, -0.8337, -1.6047, -0.6765,  0.7820,
          0.3654,  0.0050, -0.0150,  1.0368,  0.3844,  1.0288,  0.8292, -0.4326,
         -0.2079,  0.1635,  1.2093,  0.1920,  0.4539,  0.2342,  0.2266,  0.5962,
          0.0627,  0.6658, -0.1478,  1.2923,  0.2186,  0.4705,  1.0323,  1.0991,
          0.2037,  0.1820, -0.0795,  0.8126,  0.4295,  0.3372,  0.6995,  0.3413,
          0.7582, -0.0106,  0.8224,  0.8491,  0.3759,  0.0642, -0.4821,  0.7265,
          0.3254]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
522000 loss tensor(0.0673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9890,  0.9838,  0.2410,  2.7322, -0.8333, -1.6051, -0.6764,  0.7818,
          0.3646,  0.0051, -0.0164,  1.0364,  0.3838,  1.0283,  0.8293, -0.4323,
         -0.2076,  0.1629,  1.2083,  0.1912,  0.4537,  0.2333,  0.2265,  0.5960,
          0.0627,  0.6659, -0.1481,  1.2920,  0.2185,  0.4708,  1.0316,  1.0980,
          0.2043,  0.1823, -0.0788,  0.8125,  0.4301,  0.3374,  0.7002,  0.3408,
          0.7584, -0.0102,  0.8228,  0.8494,  0.3753,  0.0632, -0.4825,  0.7256,
          0.3249]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
523000 loss tensor(0.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9892,  0.9831,  0.2401,  2.7296, -0.8352, -1.6057, -0.6770,  0.7796,
          0.3643,  0.0050, -0.0183,  1.0348,  0.3831,  1.0266,  0.8302, -0.4308,
         -0.2073,  0.1634,  1.2097,  0.1914,  0.4527,  0.2341,  0.2274,  0.5955,
          0.0613,  0.6656, -0.1492,  1.2929,  0.2195,  0.4721,  1.0308,  1.0973,
          0.2033,  0.1822, -0.0802,  0.8127,  0.4300,  0.3380,  0.7004,  0.3395,
          0.7589, -0.0092,  0.8234,  0.8499,  0.3745,  0.0618, -0.4813,  0.7253,
          0.3262]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
524000 loss tensor(0.0741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0413, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9910,  0.9844,  0.2426,  2.7294, -0.8361, -1.6041, -0.6767,  0.7800,
          0.3642,  0.0057, -0.0173,  1.0357,  0.3833,  1.0271,  0.8293, -0.4323,
         -0.2074,  0.1621,  1.2088,  0.1931,  0.4538,  0.2337,  0.2256,  0.5965,
          0.0623,  0.6654, -0.1473,  1.2917,  0.2181,  0.4712,  1.0302,  1.0987,
          0.2050,  0.1822, -0.0795,  0.8116,  0.4297,  0.3372,  0.7000,  0.3405,
          0.7577, -0.0109,  0.8224,  0.8483,  0.3759,  0.0632, -0.4821,  0.7252,
          0.3257]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
525000 loss tensor(0.0601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9921,  0.9844,  0.2430,  2.7271, -0.8378, -1.6057, -0.6774,  0.7787,
          0.3641,  0.0063, -0.0190,  1.0349,  0.3831,  1.0252,  0.8308, -0.4305,
         -0.2074,  0.1621,  1.2095,  0.1933,  0.4521,  0.2345,  0.2269,  0.5964,
          0.0618,  0.6652, -0.1488,  1.2928,  0.2191,  0.4724,  1.0298,  1.0972,
          0.2035,  0.1827, -0.0805,  0.8123,  0.4290,  0.3375,  0.7000,  0.3388,
          0.7574, -0.0097,  0.8225,  0.8483,  0.3750,  0.0615, -0.4810,  0.7253,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
526000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9939,  0.9847,  0.2432,  2.7258, -0.8394, -1.6043, -0.6781,  0.7774,
          0.3644,  0.0058, -0.0197,  1.0347,  0.3820,  1.0258,  0.8306, -0.4315,
         -0.2067,  0.1602,  1.2078,  0.1936,  0.4528,  0.2336,  0.2256,  0.5962,
          0.0615,  0.6640, -0.1477,  1.2918,  0.2178,  0.4710,  1.0299,  1.0979,
          0.2050,  0.1820, -0.0791,  0.8115,  0.4293,  0.3367,  0.7002,  0.3391,
          0.7570, -0.0104,  0.8221,  0.8479,  0.3761,  0.0620, -0.4813,  0.7250,
          0.3264]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
527000 loss tensor(0.0630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0330, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9946,  0.9838,  0.2427,  2.7238, -0.8404, -1.6045, -0.6781,  0.7776,
          0.3634,  0.0062, -0.0201,  1.0336,  0.3829,  1.0243,  0.8309, -0.4310,
         -0.2062,  0.1600,  1.2098,  0.1947,  0.4515,  0.2332,  0.2255,  0.5966,
          0.0613,  0.6634, -0.1479,  1.2922,  0.2186,  0.4724,  1.0292,  1.0972,
          0.2049,  0.1823, -0.0795,  0.8117,  0.4296,  0.3374,  0.7002,  0.3394,
          0.7575, -0.0109,  0.8226,  0.8477,  0.3757,  0.0612, -0.4808,  0.7251,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
528000 loss tensor(0.0639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0342, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9944,  0.9836,  0.2432,  2.7210, -0.8401, -1.6049, -0.6778,  0.7774,
          0.3636,  0.0048, -0.0204,  1.0333,  0.3812,  1.0252,  0.8296, -0.4316,
         -0.2066,  0.1600,  1.2080,  0.1929,  0.4522,  0.2338,  0.2244,  0.5958,
          0.0609,  0.6638, -0.1489,  1.2900,  0.2171,  0.4707,  1.0295,  1.0963,
          0.2059,  0.1836, -0.0794,  0.8111,  0.4305,  0.3371,  0.7023,  0.3399,
          0.7573, -0.0095,  0.8229,  0.8480,  0.3769,  0.0620, -0.4826,  0.7248,
          0.3253]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
529000 loss tensor(0.0630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9956,  0.9834,  0.2446,  2.7189, -0.8413, -1.6056, -0.6773,  0.7766,
          0.3631,  0.0065, -0.0221,  1.0329,  0.3818,  1.0231,  0.8309, -0.4301,
         -0.2070,  0.1598,  1.2095,  0.1948,  0.4504,  0.2349,  0.2252,  0.5974,
          0.0615,  0.6640, -0.1487,  1.2915,  0.2181,  0.4722,  1.0287,  1.0967,
          0.2041,  0.1840, -0.0800,  0.8108,  0.4290,  0.3371,  0.7009,  0.3381,
          0.7563, -0.0106,  0.8224,  0.8473,  0.3755,  0.0600, -0.4816,  0.7239,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
530000 loss tensor(0.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9973,  0.9825,  0.2438,  2.7180, -0.8426, -1.6058, -0.6780,  0.7738,
          0.3624,  0.0055, -0.0232,  1.0316,  0.3811,  1.0238,  0.8311, -0.4297,
         -0.2062,  0.1594,  1.2083,  0.1937,  0.4501,  0.2331,  0.2255,  0.5955,
          0.0608,  0.6626, -0.1480,  1.2908,  0.2177,  0.4720,  1.0279,  1.0954,
          0.2050,  0.1839, -0.0802,  0.8115,  0.4303,  0.3379,  0.7019,  0.3380,
          0.7572, -0.0103,  0.8235,  0.8481,  0.3765,  0.0604, -0.4815,  0.7239,
          0.3262]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
531000 loss tensor(0.0607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9971,  0.9826,  0.2455,  2.7152, -0.8429, -1.6039, -0.6779,  0.7740,
          0.3638,  0.0060, -0.0225,  1.0324,  0.3807,  1.0230,  0.8301, -0.4311,
         -0.2063,  0.1596,  1.2098,  0.1948,  0.4515,  0.2338,  0.2234,  0.5974,
          0.0617,  0.6627, -0.1478,  1.2900,  0.2167,  0.4715,  1.0283,  1.0964,
          0.2061,  0.1840, -0.0805,  0.8095,  0.4294,  0.3364,  0.7014,  0.3389,
          0.7560, -0.0112,  0.8222,  0.8465,  0.3770,  0.0607, -0.4821,  0.7233,
          0.3259]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
532000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9972,  0.9825,  0.2446,  2.7125, -0.8445, -1.6051, -0.6788,  0.7729,
          0.3626,  0.0062, -0.0251,  1.0312,  0.3794,  1.0224,  0.8313, -0.4293,
         -0.2058,  0.1590,  1.2086,  0.1948,  0.4502,  0.2333,  0.2250,  0.5959,
          0.0599,  0.6619, -0.1488,  1.2907,  0.2178,  0.4726,  1.0272,  1.0949,
          0.2053,  0.1844, -0.0806,  0.8102,  0.4301,  0.3375,  0.7025,  0.3379,
          0.7566, -0.0094,  0.8234,  0.8486,  0.3764,  0.0595, -0.4814,  0.7232,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
533000 loss tensor(0.0688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9997,  0.9824,  0.2462,  2.7109, -0.8448, -1.6047, -0.6784,  0.7718,
          0.3622,  0.0068, -0.0254,  1.0306,  0.3802,  1.0212,  0.8312, -0.4292,
         -0.2060,  0.1582,  1.2102,  0.1960,  0.4490,  0.2342,  0.2247,  0.5969,
          0.0608,  0.6620, -0.1488,  1.2903,  0.2174,  0.4726,  1.0259,  1.0953,
          0.2055,  0.1843, -0.0812,  0.8103,  0.4292,  0.3375,  0.7017,  0.3375,
          0.7560, -0.0100,  0.8229,  0.8471,  0.3762,  0.0590, -0.4814,  0.7239,
          0.3267]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
534000 loss tensor(0.0636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0000,  0.9824,  0.2467,  2.7110, -0.8453, -1.6038, -0.6779,  0.7721,
          0.3635,  0.0067, -0.0251,  1.0310,  0.3798,  1.0214,  0.8301, -0.4304,
         -0.2060,  0.1579,  1.2092,  0.1961,  0.4500,  0.2337,  0.2227,  0.5975,
          0.0614,  0.6620, -0.1481,  1.2890,  0.2161,  0.4712,  1.0278,  1.0960,
          0.2066,  0.1849, -0.0808,  0.8090,  0.4293,  0.3360,  0.7023,  0.3382,
          0.7549, -0.0106,  0.8219,  0.8458,  0.3776,  0.0598, -0.4822,  0.7227,
          0.3255]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
535000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0385, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 0.9999,  0.9815,  0.2455,  2.7070, -0.8475, -1.6049, -0.6787,  0.7707,
          0.3624,  0.0065, -0.0270,  1.0295,  0.3781,  1.0200,  0.8314, -0.4288,
         -0.2056,  0.1577,  1.2089,  0.1947,  0.4487,  0.2340,  0.2238,  0.5957,
          0.0599,  0.6611, -0.1499,  1.2897,  0.2170,  0.4722,  1.0265,  1.0941,
          0.2058,  0.1854, -0.0804,  0.8094,  0.4299,  0.3371,  0.7032,  0.3368,
          0.7557, -0.0092,  0.8232,  0.8471,  0.3765,  0.0580, -0.4813,  0.7222,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
536000 loss tensor(0.0739, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0406, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0012,  0.9820,  0.2474,  2.7066, -0.8486, -1.6044, -0.6788,  0.7694,
          0.3627,  0.0072, -0.0273,  1.0298,  0.3788,  1.0195,  0.8317, -0.4286,
         -0.2058,  0.1569,  1.2094,  0.1971,  0.4485,  0.2343,  0.2236,  0.5972,
          0.0602,  0.6611, -0.1482,  1.2895,  0.2166,  0.4730,  1.0263,  1.0952,
          0.2065,  0.1852, -0.0815,  0.8087,  0.4284,  0.3366,  0.7023,  0.3365,
          0.7548, -0.0103,  0.8220,  0.8459,  0.3771,  0.0585, -0.4812,  0.7220,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
537000 loss tensor(0.0722, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0020,  0.9824,  0.2480,  2.7049, -0.8481, -1.6042, -0.6782,  0.7687,
          0.3629,  0.0071, -0.0283,  1.0295,  0.3777,  1.0204,  0.8309, -0.4291,
         -0.2060,  0.1574,  1.2093,  0.1966,  0.4483,  0.2349,  0.2227,  0.5967,
          0.0601,  0.6615, -0.1493,  1.2885,  0.2156,  0.4716,  1.0265,  1.0942,
          0.2066,  0.1865, -0.0812,  0.8079,  0.4288,  0.3355,  0.7029,  0.3368,
          0.7541, -0.0098,  0.8220,  0.8455,  0.3782,  0.0588, -0.4824,  0.7214,
          0.3258]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
538000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0035,  0.9805,  0.2477,  2.7027, -0.8506, -1.6042, -0.6799,  0.7687,
          0.3614,  0.0067, -0.0284,  1.0278,  0.3778,  1.0188,  0.8315, -0.4291,
         -0.2038,  0.1554,  1.2089,  0.1961,  0.4476,  0.2331,  0.2222,  0.5962,
          0.0590,  0.6585, -0.1483,  1.2887,  0.2160,  0.4722,  1.0253,  1.0943,
          0.2075,  0.1849, -0.0803,  0.8091,  0.4299,  0.3371,  0.7036,  0.3371,
          0.7555, -0.0101,  0.8234,  0.8464,  0.3781,  0.0584, -0.4810,  0.7218,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
539000 loss tensor(0.0631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0048,  0.9806,  0.2481,  2.7028, -0.8508, -1.6029, -0.6793,  0.7679,
          0.3616,  0.0070, -0.0286,  1.0283,  0.3779,  1.0191,  0.8314, -0.4296,
         -0.2047,  0.1551,  1.2090,  0.1976,  0.4490,  0.2333,  0.2210,  0.5970,
          0.0601,  0.6600, -0.1468,  1.2881,  0.2151,  0.4712,  1.0260,  1.0945,
          0.2083,  0.1858, -0.0806,  0.8076,  0.4290,  0.3361,  0.7032,  0.3375,
          0.7541, -0.0115,  0.8221,  0.8447,  0.3787,  0.0584, -0.4814,  0.7213,
          0.3263]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
540000 loss tensor(0.0604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0033,  0.9817,  0.2490,  2.6997, -0.8508, -1.6038, -0.6787,  0.7673,
          0.3619,  0.0074, -0.0295,  1.0283,  0.3772,  1.0186,  0.8308, -0.4291,
         -0.2054,  0.1553,  1.2095,  0.1977,  0.4475,  0.2347,  0.2216,  0.5976,
          0.0600,  0.6600, -0.1494,  1.2874,  0.2151,  0.4715,  1.0254,  1.0934,
          0.2075,  0.1871, -0.0813,  0.8070,  0.4285,  0.3361,  0.7035,  0.3363,
          0.7534, -0.0100,  0.8217,  0.8446,  0.3786,  0.0581, -0.4825,  0.7211,
          0.3256]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
541000 loss tensor(0.0681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0359, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0059,  0.9811,  0.2502,  2.6989, -0.8517, -1.6037, -0.6784,  0.7654,
          0.3623,  0.0078, -0.0314,  1.0278,  0.3766,  1.0176,  0.8309, -0.4290,
         -0.2054,  0.1557,  1.2099,  0.1980,  0.4473,  0.2349,  0.2213,  0.5972,
          0.0601,  0.6609, -0.1490,  1.2875,  0.2149,  0.4716,  1.0255,  1.0941,
          0.2080,  0.1876, -0.0820,  0.8065,  0.4285,  0.3353,  0.7038,  0.3359,
          0.7530, -0.0098,  0.8219,  0.8448,  0.3790,  0.0577, -0.4823,  0.7205,
          0.3261]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
542000 loss tensor(0.0588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0051,  0.9804,  0.2501,  2.6955, -0.8528, -1.6035, -0.6803,  0.7635,
          0.3607,  0.0072, -0.0317,  1.0262,  0.3768,  1.0168,  0.8315, -0.4276,
         -0.2045,  0.1550,  1.2091,  0.1972,  0.4462,  0.2345,  0.2218,  0.5954,
          0.0581,  0.6591, -0.1492,  1.2875,  0.2154,  0.4721,  1.0242,  1.0929,
          0.2079,  0.1869, -0.0816,  0.8079,  0.4293,  0.3364,  0.7046,  0.3362,
          0.7540, -0.0095,  0.8228,  0.8455,  0.3786,  0.0568, -0.4819,  0.7212,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
543000 loss tensor(0.0738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0407, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0057,  0.9804,  0.2492,  2.6932, -0.8540, -1.6028, -0.6800,  0.7657,
          0.3614,  0.0065, -0.0316,  1.0262,  0.3757,  1.0163,  0.8306, -0.4288,
         -0.2044,  0.1542,  1.2089,  0.1977,  0.4473,  0.2332,  0.2204,  0.5963,
          0.0591,  0.6588, -0.1479,  1.2865,  0.2147,  0.4716,  1.0255,  1.0934,
          0.2094,  0.1872, -0.0805,  0.8064,  0.4299,  0.3355,  0.7051,  0.3366,
          0.7537, -0.0101,  0.8227,  0.8448,  0.3795,  0.0571, -0.4823,  0.7207,
          0.3259]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
544000 loss tensor(0.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0366, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0061,  0.9792,  0.2492,  2.6913, -0.8554, -1.6039, -0.6798,  0.7637,
          0.3612,  0.0068, -0.0335,  1.0254,  0.3749,  1.0165,  0.8309, -0.4285,
         -0.2043,  0.1545,  1.2093,  0.1978,  0.4454,  0.2338,  0.2205,  0.5968,
          0.0584,  0.6586, -0.1500,  1.2861,  0.2143,  0.4728,  1.0234,  1.0928,
          0.2092,  0.1882, -0.0810,  0.8062,  0.4291,  0.3356,  0.7057,  0.3359,
          0.7533, -0.0089,  0.8229,  0.8451,  0.3799,  0.0573, -0.4827,  0.7191,
          0.3256]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
545000 loss tensor(0.0681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0385, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0092,  0.9807,  0.2513,  2.6910, -0.8576, -1.6031, -0.6794,  0.7624,
          0.3611,  0.0081, -0.0339,  1.0255,  0.3761,  1.0155,  0.8329, -0.4274,
         -0.2048,  0.1533,  1.2105,  0.1998,  0.4452,  0.2339,  0.2205,  0.5976,
          0.0588,  0.6581, -0.1489,  1.2872,  0.2147,  0.4731,  1.0234,  1.0927,
          0.2086,  0.1876, -0.0820,  0.8063,  0.4283,  0.3358,  0.7043,  0.3354,
          0.7524, -0.0106,  0.8215,  0.8438,  0.3794,  0.0560, -0.4815,  0.7202,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
546000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0095,  0.9805,  0.2507,  2.6880, -0.8573, -1.6025, -0.6798,  0.7615,
          0.3616,  0.0087, -0.0341,  1.0255,  0.3747,  1.0142,  0.8323, -0.4276,
         -0.2051,  0.1531,  1.2101,  0.1998,  0.4459,  0.2341,  0.2202,  0.5966,
          0.0584,  0.6584, -0.1488,  1.2868,  0.2143,  0.4727,  1.0237,  1.0926,
          0.2088,  0.1886, -0.0822,  0.8049,  0.4282,  0.3348,  0.7042,  0.3353,
          0.7518, -0.0098,  0.8216,  0.8437,  0.3795,  0.0558, -0.4813,  0.7190,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
547000 loss tensor(0.0579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0112,  0.9796,  0.2505,  2.6880, -0.8584, -1.6028, -0.6808,  0.7616,
          0.3601,  0.0077, -0.0346,  1.0240,  0.3754,  1.0136,  0.8328, -0.4272,
         -0.2034,  0.1515,  1.2099,  0.2003,  0.4444,  0.2323,  0.2197,  0.5970,
          0.0581,  0.6565, -0.1482,  1.2868,  0.2146,  0.4730,  1.0218,  1.0919,
          0.2094,  0.1874, -0.0814,  0.8060,  0.4290,  0.3360,  0.7048,  0.3352,
          0.7525, -0.0110,  0.8220,  0.8434,  0.3796,  0.0555, -0.4810,  0.7205,
          0.3271]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
548000 loss tensor(0.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0115,  0.9805,  0.2515,  2.6843, -0.8580, -1.6022, -0.6805,  0.7620,
          0.3604,  0.0086, -0.0347,  1.0243,  0.3747,  1.0140,  0.8317, -0.4281,
         -0.2038,  0.1515,  1.2097,  0.1995,  0.4455,  0.2331,  0.2185,  0.5971,
          0.0588,  0.6575, -0.1481,  1.2852,  0.2133,  0.4717,  1.0232,  1.0911,
          0.2096,  0.1883, -0.0812,  0.8049,  0.4291,  0.3349,  0.7055,  0.3354,
          0.7518, -0.0110,  0.8215,  0.8431,  0.3802,  0.0555, -0.4827,  0.7201,
          0.3257]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
549000 loss tensor(0.0702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0129,  0.9796,  0.2514,  2.6827, -0.8607, -1.6028, -0.6800,  0.7600,
          0.3610,  0.0090, -0.0363,  1.0237,  0.3732,  1.0125,  0.8328, -0.4272,
         -0.2042,  0.1524,  1.2092,  0.1999,  0.4448,  0.2336,  0.2192,  0.5965,
          0.0582,  0.6567, -0.1489,  1.2858,  0.2138,  0.4725,  1.0223,  1.0918,
          0.2093,  0.1893, -0.0824,  0.8044,  0.4285,  0.3344,  0.7055,  0.3345,
          0.7515, -0.0100,  0.8215,  0.8428,  0.3804,  0.0550, -0.4813,  0.7186,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
550000 loss tensor(0.0729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0407, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0153,  0.9795,  0.2533,  2.6827, -0.8611, -1.6022, -0.6811,  0.7593,
          0.3606,  0.0083, -0.0368,  1.0233,  0.3733,  1.0127,  0.8325, -0.4272,
         -0.2034,  0.1500,  1.2100,  0.2007,  0.4444,  0.2325,  0.2187,  0.5973,
          0.0577,  0.6565, -0.1478,  1.2852,  0.2131,  0.4716,  1.0227,  1.0914,
          0.2101,  0.1878, -0.0816,  0.8042,  0.4288,  0.3342,  0.7051,  0.3343,
          0.7509, -0.0105,  0.8212,  0.8428,  0.3811,  0.0552, -0.4816,  0.7189,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
551000 loss tensor(0.0733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0407, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0150,  0.9800,  0.2541,  2.6807, -0.8627, -1.6019, -0.6818,  0.7588,
          0.3604,  0.0082, -0.0383,  1.0231,  0.3733,  1.0126,  0.8330, -0.4270,
         -0.2028,  0.1492,  1.2084,  0.2019,  0.4440,  0.2328,  0.2183,  0.5970,
          0.0576,  0.6556, -0.1482,  1.2849,  0.2128,  0.4720,  1.0218,  1.0913,
          0.2101,  0.1877, -0.0816,  0.8040,  0.4289,  0.3350,  0.7056,  0.3343,
          0.7511, -0.0104,  0.8216,  0.8422,  0.3814,  0.0553, -0.4814,  0.7197,
          0.3269]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
552000 loss tensor(0.0579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0156,  0.9783,  0.2520,  2.6785, -0.8615, -1.6025, -0.6819,  0.7585,
          0.3596,  0.0076, -0.0395,  1.0217,  0.3732,  1.0132,  0.8322, -0.4266,
         -0.2024,  0.1502,  1.2093,  0.1995,  0.4432,  0.2318,  0.2185,  0.5970,
          0.0561,  0.6557, -0.1482,  1.2838,  0.2124,  0.4717,  1.0206,  1.0898,
          0.2106,  0.1890, -0.0807,  0.8041,  0.4303,  0.3344,  0.7074,  0.3342,
          0.7515, -0.0096,  0.8226,  0.8433,  0.3819,  0.0551, -0.4826,  0.7190,
          0.3257]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
553000 loss tensor(0.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0164,  0.9795,  0.2527,  2.6756, -0.8643, -1.6025, -0.6814,  0.7571,
          0.3597,  0.0095, -0.0400,  1.0218,  0.3728,  1.0108,  0.8331, -0.4260,
         -0.2034,  0.1492,  1.2093,  0.2015,  0.4433,  0.2337,  0.2184,  0.5965,
          0.0569,  0.6555, -0.1484,  1.2848,  0.2132,  0.4732,  1.0207,  1.0902,
          0.2102,  0.1891, -0.0814,  0.8037,  0.4284,  0.3345,  0.7060,  0.3330,
          0.7507, -0.0101,  0.8214,  0.8424,  0.3807,  0.0538, -0.4812,  0.7181,
          0.3273]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
554000 loss tensor(0.0724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0403, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0172,  0.9799,  0.2540,  2.6742, -0.8641, -1.6022, -0.6806,  0.7567,
          0.3599,  0.0096, -0.0397,  1.0217,  0.3716,  1.0108,  0.8324, -0.4264,
         -0.2038,  0.1502,  1.2105,  0.2020,  0.4432,  0.2336,  0.2176,  0.5973,
          0.0580,  0.6561, -0.1484,  1.2838,  0.2123,  0.4724,  1.0212,  1.0902,
          0.2101,  0.1901, -0.0828,  0.8028,  0.4282,  0.3339,  0.7062,  0.3334,
          0.7498, -0.0103,  0.8213,  0.8420,  0.3815,  0.0540, -0.4822,  0.7173,
          0.3264]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
555000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0170,  0.9792,  0.2550,  2.6720, -0.8644, -1.6027, -0.6809,  0.7563,
          0.3586,  0.0085, -0.0417,  1.0203,  0.3721,  1.0094,  0.8324, -0.4258,
         -0.2027,  0.1492,  1.2104,  0.2020,  0.4411,  0.2332,  0.2179,  0.5971,
          0.0573,  0.6549, -0.1494,  1.2840,  0.2132,  0.4731,  1.0199,  1.0895,
          0.2101,  0.1902, -0.0821,  0.8039,  0.4293,  0.3354,  0.7076,  0.3331,
          0.7509, -0.0097,  0.8220,  0.8424,  0.3809,  0.0529, -0.4823,  0.7195,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
556000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0343, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0180,  0.9784,  0.2540,  2.6697, -0.8655, -1.6013, -0.6820,  0.7554,
          0.3590,  0.0079, -0.0410,  1.0200,  0.3711,  1.0098,  0.8323, -0.4269,
         -0.2021,  0.1491,  1.2094,  0.2015,  0.4424,  0.2317,  0.2165,  0.5966,
          0.0568,  0.6541, -0.1486,  1.2828,  0.2119,  0.4715,  1.0207,  1.0895,
          0.2121,  0.1901, -0.0818,  0.8024,  0.4300,  0.3342,  0.7080,  0.3339,
          0.7505, -0.0101,  0.8220,  0.8422,  0.3821,  0.0534, -0.4825,  0.7176,
          0.3255]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
557000 loss tensor(0.0629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0178,  0.9778,  0.2546,  2.6661, -0.8671, -1.6020, -0.6824,  0.7533,
          0.3585,  0.0087, -0.0430,  1.0192,  0.3710,  1.0086,  0.8338, -0.4250,
         -0.2023,  0.1486,  1.2096,  0.2023,  0.4417,  0.2329,  0.2177,  0.5965,
          0.0558,  0.6539, -0.1498,  1.2837,  0.2128,  0.4733,  1.0188,  1.0882,
          0.2108,  0.1903, -0.0831,  0.8031,  0.4294,  0.3347,  0.7077,  0.3325,
          0.7502, -0.0093,  0.8222,  0.8421,  0.3812,  0.0523, -0.4813,  0.7177,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
558000 loss tensor(0.0595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0207,  0.9773,  0.2550,  2.6656, -0.8673, -1.6021, -0.6829,  0.7531,
          0.3584,  0.0086, -0.0430,  1.0185,  0.3719,  1.0078,  0.8329, -0.4251,
         -0.2016,  0.1475,  1.2106,  0.2033,  0.4405,  0.2314,  0.2167,  0.5971,
          0.0558,  0.6527, -0.1493,  1.2830,  0.2125,  0.4731,  1.0186,  1.0874,
          0.2115,  0.1898, -0.0817,  0.8030,  0.4302,  0.3346,  0.7083,  0.3330,
          0.7502, -0.0106,  0.8224,  0.8416,  0.3816,  0.0519, -0.4821,  0.7183,
          0.3262]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
559000 loss tensor(0.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0353, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0205,  0.9760,  0.2548,  2.6629, -0.8687, -1.6022, -0.6825,  0.7522,
          0.3581,  0.0083, -0.0446,  1.0178,  0.3708,  1.0072,  0.8339, -0.4245,
         -0.2017,  0.1482,  1.2102,  0.2024,  0.4405,  0.2332,  0.2168,  0.5960,
          0.0553,  0.6532, -0.1491,  1.2832,  0.2123,  0.4728,  1.0186,  1.0873,
          0.2115,  0.1905, -0.0823,  0.8024,  0.4293,  0.3343,  0.7085,  0.3318,
          0.7497, -0.0100,  0.8223,  0.8413,  0.3815,  0.0516, -0.4813,  0.7174,
          0.3269]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
560000 loss tensor(0.0593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0242,  0.9778,  0.2558,  2.6641, -0.8704, -1.6007, -0.6825,  0.7514,
          0.3592,  0.0088, -0.0442,  1.0186,  0.3706,  1.0083,  0.8329, -0.4261,
         -0.2022,  0.1469,  1.2106,  0.2039,  0.4410,  0.2327,  0.2152,  0.5978,
          0.0560,  0.6533, -0.1491,  1.2815,  0.2105,  0.4729,  1.0181,  1.0880,
          0.2132,  0.1907, -0.0818,  0.8009,  0.4293,  0.3322,  0.7077,  0.3334,
          0.7490, -0.0108,  0.8214,  0.8399,  0.3840,  0.0532, -0.4820,  0.7161,
          0.3263]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
561000 loss tensor(0.0754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0418, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0236,  0.9784,  0.2570,  2.6612, -0.8701, -1.6006, -0.6824,  0.7507,
          0.3590,  0.0090, -0.0441,  1.0186,  0.3692,  1.0065,  0.8331, -0.4260,
         -0.2020,  0.1471,  1.2102,  0.2040,  0.4413,  0.2320,  0.2152,  0.5977,
          0.0565,  0.6525, -0.1480,  1.2818,  0.2110,  0.4725,  1.0192,  1.0885,
          0.2127,  0.1914, -0.0830,  0.8004,  0.4290,  0.3327,  0.7079,  0.3326,
          0.7486, -0.0105,  0.8210,  0.8401,  0.3831,  0.0518, -0.4820,  0.7163,
          0.3263]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
562000 loss tensor(0.0627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0244,  0.9777,  0.2574,  2.6592, -0.8713, -1.6012, -0.6820,  0.7495,
          0.3586,  0.0099, -0.0459,  1.0182,  0.3684,  1.0062,  0.8328, -0.4255,
         -0.2023,  0.1466,  1.2104,  0.2036,  0.4398,  0.2328,  0.2149,  0.5978,
          0.0566,  0.6529, -0.1484,  1.2813,  0.2108,  0.4727,  1.0187,  1.0879,
          0.2127,  0.1924, -0.0829,  0.8006,  0.4284,  0.3332,  0.7071,  0.3319,
          0.7480, -0.0101,  0.8208,  0.8403,  0.3834,  0.0518, -0.4824,  0.7158,
          0.3263]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
563000 loss tensor(0.0649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0241,  0.9769,  0.2581,  2.6564, -0.8730, -1.6019, -0.6829,  0.7498,
          0.3568,  0.0090, -0.0479,  1.0165,  0.3698,  1.0046,  0.8339, -0.4238,
         -0.2017,  0.1465,  1.2107,  0.2044,  0.4385,  0.2326,  0.2157,  0.5979,
          0.0557,  0.6519, -0.1498,  1.2818,  0.2114,  0.4734,  1.0172,  1.0871,
          0.2117,  0.1916, -0.0829,  0.8014,  0.4290,  0.3342,  0.7089,  0.3308,
          0.7487, -0.0101,  0.8218,  0.8405,  0.3822,  0.0505, -0.4814,  0.7168,
          0.3269]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
564000 loss tensor(0.0727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0408, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0253,  0.9770,  0.2580,  2.6555, -0.8743, -1.6009, -0.6826,  0.7478,
          0.3578,  0.0104, -0.0477,  1.0168,  0.3701,  1.0042,  0.8343, -0.4243,
         -0.2022,  0.1461,  1.2114,  0.2053,  0.4390,  0.2335,  0.2149,  0.5977,
          0.0559,  0.6521, -0.1480,  1.2816,  0.2112,  0.4736,  1.0170,  1.0870,
          0.2130,  0.1921, -0.0838,  0.8005,  0.4279,  0.3330,  0.7082,  0.3315,
          0.7477, -0.0110,  0.8210,  0.8392,  0.3829,  0.0504, -0.4811,  0.7152,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
565000 loss tensor(0.0740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0247,  0.9770,  0.2581,  2.6532, -0.8734, -1.6016, -0.6828,  0.7481,
          0.3569,  0.0092, -0.0494,  1.0157,  0.3683,  1.0039,  0.8335, -0.4239,
         -0.2012,  0.1455,  1.2113,  0.2046,  0.4378,  0.2319,  0.2154,  0.5981,
          0.0556,  0.6512, -0.1489,  1.2810,  0.2113,  0.4737,  1.0162,  1.0861,
          0.2126,  0.1925, -0.0822,  0.8008,  0.4287,  0.3345,  0.7100,  0.3312,
          0.7482, -0.0099,  0.8216,  0.8407,  0.3832,  0.0500, -0.4824,  0.7162,
          0.3261]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
566000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0273,  0.9770,  0.2601,  2.6520, -0.8757, -1.6010, -0.6825,  0.7472,
          0.3576,  0.0103, -0.0491,  1.0159,  0.3675,  1.0040,  0.8335, -0.4243,
         -0.2019,  0.1454,  1.2100,  0.2055,  0.4391,  0.2327,  0.2143,  0.5979,
          0.0559,  0.6521, -0.1489,  1.2804,  0.2102,  0.4727,  1.0173,  1.0864,
          0.2132,  0.1931, -0.0832,  0.7998,  0.4281,  0.3331,  0.7092,  0.3309,
          0.7469, -0.0098,  0.8206,  0.8394,  0.3842,  0.0504, -0.4821,  0.7152,
          0.3263]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
567000 loss tensor(0.0734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0406, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0262,  0.9766,  0.2584,  2.6483, -0.8755, -1.6021, -0.6834,  0.7466,
          0.3568,  0.0096, -0.0508,  1.0150,  0.3678,  1.0033,  0.8339, -0.4235,
         -0.2010,  0.1457,  1.2111,  0.2045,  0.4376,  0.2319,  0.2145,  0.5978,
          0.0550,  0.6511, -0.1488,  1.2799,  0.2106,  0.4735,  1.0158,  1.0850,
          0.2127,  0.1929, -0.0831,  0.8000,  0.4291,  0.3337,  0.7103,  0.3305,
          0.7479, -0.0099,  0.8219,  0.8403,  0.3838,  0.0497, -0.4822,  0.7156,
          0.3259]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
568000 loss tensor(0.0625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0291,  0.9760,  0.2600,  2.6488, -0.8780, -1.6005, -0.6840,  0.7452,
          0.3572,  0.0090, -0.0513,  1.0145,  0.3667,  1.0031,  0.8337, -0.4241,
         -0.2002,  0.1433,  1.2091,  0.2050,  0.4382,  0.2314,  0.2134,  0.5966,
          0.0548,  0.6500, -0.1487,  1.2792,  0.2096,  0.4722,  1.0164,  1.0859,
          0.2145,  0.1921, -0.0823,  0.7997,  0.4294,  0.3332,  0.7101,  0.3306,
          0.7474, -0.0099,  0.8214,  0.8398,  0.3850,  0.0504, -0.4822,  0.7159,
          0.3262]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
569000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0374, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0292,  0.9764,  0.2598,  2.6487, -0.8780, -1.6012, -0.6825,  0.7459,
          0.3577,  0.0103, -0.0516,  1.0153,  0.3674,  1.0030,  0.8336, -0.4239,
         -0.2016,  0.1433,  1.2101,  0.2067,  0.4373,  0.2330,  0.2130,  0.5983,
          0.0558,  0.6514, -0.1487,  1.2790,  0.2088,  0.4723,  1.0162,  1.0859,
          0.2138,  0.1939, -0.0829,  0.7989,  0.4281,  0.3321,  0.7096,  0.3302,
          0.7461, -0.0106,  0.8203,  0.8379,  0.3855,  0.0506, -0.4824,  0.7143,
          0.3264]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
570000 loss tensor(0.0658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0300,  0.9750,  0.2595,  2.6436, -0.8788, -1.6007, -0.6837,  0.7432,
          0.3560,  0.0101, -0.0524,  1.0133,  0.3662,  1.0011,  0.8351, -0.4225,
         -0.2007,  0.1434,  1.2107,  0.2055,  0.4367,  0.2320,  0.2138,  0.5965,
          0.0542,  0.6490, -0.1484,  1.2800,  0.2102,  0.4733,  1.0151,  1.0843,
          0.2137,  0.1933, -0.0832,  0.7993,  0.4292,  0.3331,  0.7099,  0.3300,
          0.7474, -0.0100,  0.8217,  0.8397,  0.3836,  0.0484, -0.4813,  0.7143,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
571000 loss tensor(0.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0322,  0.9760,  0.2610,  2.6439, -0.8807, -1.5998, -0.6835,  0.7426,
          0.3570,  0.0109, -0.0526,  1.0136,  0.3669,  1.0000,  0.8352, -0.4228,
         -0.2012,  0.1435,  1.2115,  0.2078,  0.4369,  0.2322,  0.2129,  0.5976,
          0.0550,  0.6500, -0.1480,  1.2799,  0.2099,  0.4739,  1.0152,  1.0854,
          0.2145,  0.1937, -0.0841,  0.7988,  0.4280,  0.3321,  0.7096,  0.3304,
          0.7460, -0.0107,  0.8209,  0.8377,  0.3842,  0.0483, -0.4810,  0.7135,
          0.3275]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
572000 loss tensor(0.0614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0310,  0.9748,  0.2607,  2.6403, -0.8806, -1.6005, -0.6843,  0.7426,
          0.3557,  0.0102, -0.0536,  1.0122,  0.3664,  0.9998,  0.8353, -0.4225,
         -0.2003,  0.1418,  1.2110,  0.2074,  0.4358,  0.2322,  0.2129,  0.5979,
          0.0544,  0.6487, -0.1487,  1.2792,  0.2097,  0.4736,  1.0146,  1.0838,
          0.2146,  0.1934, -0.0832,  0.7991,  0.4289,  0.3334,  0.7107,  0.3299,
          0.7466, -0.0103,  0.8212,  0.8386,  0.3843,  0.0478, -0.4815,  0.7152,
          0.3270]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
573000 loss tensor(0.0608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0339,  0.9741,  0.2609,  2.6405, -0.8831, -1.6004, -0.6851,  0.7418,
          0.3553,  0.0099, -0.0536,  1.0119,  0.3666,  1.0007,  0.8353, -0.4226,
         -0.1996,  0.1413,  1.2108,  0.2070,  0.4365,  0.2310,  0.2123,  0.5976,
          0.0541,  0.6477, -0.1482,  1.2784,  0.2089,  0.4736,  1.0138,  1.0837,
          0.2154,  0.1931, -0.0827,  0.7989,  0.4293,  0.3329,  0.7111,  0.3304,
          0.7464, -0.0105,  0.8216,  0.8380,  0.3858,  0.0487, -0.4811,  0.7144,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
574000 loss tensor(0.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0336,  0.9751,  0.2631,  2.6378, -0.8821, -1.6000, -0.6848,  0.7397,
          0.3569,  0.0110, -0.0551,  1.0123,  0.3659,  0.9995,  0.8344, -0.4234,
         -0.2002,  0.1421,  1.2108,  0.2068,  0.4369,  0.2306,  0.2113,  0.5966,
          0.0542,  0.6488, -0.1481,  1.2780,  0.2081,  0.4730,  1.0144,  1.0843,
          0.2161,  0.1941, -0.0834,  0.7974,  0.4284,  0.3313,  0.7105,  0.3305,
          0.7451, -0.0101,  0.8204,  0.8374,  0.3859,  0.0485, -0.4820,  0.7131,
          0.3267]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
575000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0350, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0345,  0.9741,  0.2619,  2.6362, -0.8827, -1.6000, -0.6848,  0.7398,
          0.3562,  0.0104, -0.0558,  1.0111,  0.3641,  0.9995,  0.8343, -0.4229,
         -0.1999,  0.1421,  1.2101,  0.2063,  0.4359,  0.2325,  0.2113,  0.5971,
          0.0541,  0.6488, -0.1492,  1.2774,  0.2083,  0.4726,  1.0146,  1.0835,
          0.2155,  0.1947, -0.0840,  0.7973,  0.4287,  0.3320,  0.7118,  0.3297,
          0.7453, -0.0091,  0.8214,  0.8385,  0.3860,  0.0482, -0.4823,  0.7130,
          0.3260]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
576000 loss tensor(0.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0350,  0.9754,  0.2635,  2.6338, -0.8848, -1.5996, -0.6835,  0.7394,
          0.3560,  0.0118, -0.0563,  1.0120,  0.3646,  0.9992,  0.8351, -0.4224,
         -0.2010,  0.1417,  1.2100,  0.2080,  0.4359,  0.2323,  0.2114,  0.5976,
          0.0545,  0.6495, -0.1481,  1.2775,  0.2078,  0.4731,  1.0148,  1.0837,
          0.2151,  0.1959, -0.0840,  0.7966,  0.4279,  0.3313,  0.7101,  0.3295,
          0.7444, -0.0099,  0.8201,  0.8368,  0.3868,  0.0483, -0.4815,  0.7123,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
577000 loss tensor(0.0600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0353,  0.9743,  0.2621,  2.6329, -0.8858, -1.5996, -0.6858,  0.7385,
          0.3550,  0.0101, -0.0573,  1.0100,  0.3647,  0.9974,  0.8354, -0.4219,
         -0.1989,  0.1405,  1.2107,  0.2079,  0.4349,  0.2311,  0.2112,  0.5970,
          0.0534,  0.6470, -0.1472,  1.2779,  0.2087,  0.4742,  1.0129,  1.0834,
          0.2160,  0.1939, -0.0831,  0.7977,  0.4293,  0.3323,  0.7118,  0.3294,
          0.7456, -0.0100,  0.8215,  0.8374,  0.3857,  0.0469, -0.4811,  0.7138,
          0.3274]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
578000 loss tensor(0.0632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0374,  0.9753,  0.2646,  2.6315, -0.8861, -1.5990, -0.6852,  0.7387,
          0.3556,  0.0113, -0.0574,  1.0105,  0.3644,  0.9981,  0.8349, -0.4227,
         -0.1997,  0.1397,  1.2100,  0.2091,  0.4352,  0.2308,  0.2099,  0.5975,
          0.0542,  0.6479, -0.1480,  1.2766,  0.2072,  0.4733,  1.0133,  1.0834,
          0.2162,  0.1944, -0.0834,  0.7962,  0.4284,  0.3313,  0.7115,  0.3298,
          0.7443, -0.0108,  0.8203,  0.8367,  0.3869,  0.0479, -0.4820,  0.7132,
          0.3265]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
579000 loss tensor(0.0688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0362, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0372,  0.9736,  0.2637,  2.6296, -0.8870, -1.5988, -0.6856,  0.7372,
          0.3549,  0.0109, -0.0581,  1.0097,  0.3647,  0.9977,  0.8345, -0.4227,
         -0.1992,  0.1400,  1.2110,  0.2088,  0.4341,  0.2311,  0.2095,  0.5979,
          0.0530,  0.6475, -0.1470,  1.2763,  0.2074,  0.4740,  1.0137,  1.0822,
          0.2169,  0.1951, -0.0834,  0.7966,  0.4287,  0.3316,  0.7119,  0.3297,
          0.7445, -0.0113,  0.8207,  0.8368,  0.3873,  0.0472, -0.4825,  0.7127,
          0.3255]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
580000 loss tensor(0.0747, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0416, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0386,  0.9738,  0.2640,  2.6283, -0.8878, -1.5990, -0.6846,  0.7357,
          0.3557,  0.0117, -0.0601,  1.0096,  0.3627,  0.9971,  0.8350, -0.4221,
         -0.1998,  0.1402,  1.2104,  0.2082,  0.4341,  0.2329,  0.2102,  0.5985,
          0.0544,  0.6475, -0.1499,  1.2759,  0.2070,  0.4735,  1.0137,  1.0820,
          0.2164,  0.1960, -0.0846,  0.7955,  0.4281,  0.3311,  0.7120,  0.3280,
          0.7439, -0.0093,  0.8206,  0.8367,  0.3872,  0.0469, -0.4825,  0.7113,
          0.3265]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
581000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0393,  0.9737,  0.2651,  2.6271, -0.8891, -1.5980, -0.6856,  0.7367,
          0.3552,  0.0115, -0.0589,  1.0094,  0.3629,  0.9958,  0.8352, -0.4225,
         -0.1991,  0.1393,  1.2108,  0.2094,  0.4352,  0.2313,  0.2089,  0.5988,
          0.0541,  0.6464, -0.1482,  1.2756,  0.2069,  0.4731,  1.0131,  1.0827,
          0.2172,  0.1955, -0.0838,  0.7945,  0.4284,  0.3305,  0.7119,  0.3289,
          0.7436, -0.0110,  0.8200,  0.8358,  0.3871,  0.0463, -0.4820,  0.7122,
          0.3267]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
582000 loss tensor(0.0732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0393,  0.9741,  0.2649,  2.6251, -0.8911, -1.5987, -0.6861,  0.7358,
          0.3543,  0.0119, -0.0603,  1.0085,  0.3638,  0.9947,  0.8365, -0.4214,
         -0.1983,  0.1380,  1.2114,  0.2102,  0.4333,  0.2307,  0.2095,  0.5986,
          0.0537,  0.6447, -0.1480,  1.2764,  0.2074,  0.4744,  1.0117,  1.0826,
          0.2169,  0.1949, -0.0831,  0.7959,  0.4278,  0.3311,  0.7120,  0.3286,
          0.7438, -0.0111,  0.8200,  0.8354,  0.3870,  0.0455, -0.4809,  0.7120,
          0.3277]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
583000 loss tensor(0.0625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0414,  0.9734,  0.2659,  2.6231, -0.8922, -1.5981, -0.6863,  0.7344,
          0.3548,  0.0117, -0.0607,  1.0083,  0.3622,  0.9951,  0.8362, -0.4215,
         -0.1990,  0.1374,  1.2101,  0.2097,  0.4341,  0.2310,  0.2089,  0.5980,
          0.0537,  0.6452, -0.1473,  1.2756,  0.2065,  0.4730,  1.0129,  1.0821,
          0.2175,  0.1958, -0.0838,  0.7949,  0.4277,  0.3311,  0.7120,  0.3287,
          0.7431, -0.0108,  0.8197,  0.8356,  0.3880,  0.0459, -0.4811,  0.7114,
          0.3274]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
584000 loss tensor(0.0625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0417,  0.9742,  0.2665,  2.6214, -0.8915, -1.5988, -0.6859,  0.7344,
          0.3546,  0.0116, -0.0622,  1.0077,  0.3625,  0.9945,  0.8354, -0.4220,
         -0.1988,  0.1374,  1.2107,  0.2103,  0.4324,  0.2311,  0.2081,  0.5990,
          0.0543,  0.6454, -0.1478,  1.2748,  0.2063,  0.4733,  1.0122,  1.0817,
          0.2174,  0.1964, -0.0835,  0.7949,  0.4282,  0.3305,  0.7125,  0.3284,
          0.7427, -0.0112,  0.8198,  0.8350,  0.3882,  0.0457, -0.4821,  0.7120,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
585000 loss tensor(0.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0414,  0.9724,  0.2658,  2.6166, -0.8914, -1.5984, -0.6866,  0.7331,
          0.3544,  0.0113, -0.0624,  1.0067,  0.3612,  0.9937,  0.8351, -0.4217,
         -0.1984,  0.1375,  1.2102,  0.2097,  0.4331,  0.2309,  0.2080,  0.5976,
          0.0531,  0.6450, -0.1487,  1.2742,  0.2062,  0.4731,  1.0124,  1.0808,
          0.2179,  0.1969, -0.0833,  0.7945,  0.4288,  0.3308,  0.7138,  0.3282,
          0.7432, -0.0092,  0.8207,  0.8360,  0.3882,  0.0450, -0.4824,  0.7110,
          0.3262]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
586000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0429,  0.9718,  0.2654,  2.6167, -0.8938, -1.5980, -0.6865,  0.7321,
          0.3529,  0.0110, -0.0633,  1.0061,  0.3623,  0.9938,  0.8356, -0.4210,
         -0.1982,  0.1369,  1.2119,  0.2110,  0.4318,  0.2313,  0.2080,  0.5980,
          0.0523,  0.6443, -0.1473,  1.2741,  0.2062,  0.4738,  1.0108,  1.0799,
          0.2184,  0.1967, -0.0839,  0.7950,  0.4287,  0.3317,  0.7143,  0.3283,
          0.7435, -0.0105,  0.8212,  0.8360,  0.3883,  0.0451, -0.4824,  0.7115,
          0.3264]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
587000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0429,  0.9728,  0.2668,  2.6153, -0.8931, -1.5982, -0.6865,  0.7319,
          0.3539,  0.0118, -0.0641,  1.0065,  0.3617,  0.9929,  0.8358, -0.4213,
         -0.1986,  0.1364,  1.2113,  0.2104,  0.4322,  0.2306,  0.2075,  0.5986,
          0.0533,  0.6445, -0.1479,  1.2739,  0.2057,  0.4731,  1.0110,  1.0802,
          0.2187,  0.1968, -0.0834,  0.7937,  0.4283,  0.3302,  0.7131,  0.3280,
          0.7423, -0.0107,  0.8197,  0.8349,  0.3883,  0.0446, -0.4824,  0.7109,
          0.3265]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
588000 loss tensor(0.0712, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0393, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0437,  0.9717,  0.2659,  2.6130, -0.8952, -1.5977, -0.6873,  0.7305,
          0.3527,  0.0111, -0.0651,  1.0050,  0.3614,  0.9926,  0.8360, -0.4206,
         -0.1977,  0.1361,  1.2108,  0.2109,  0.4317,  0.2301,  0.2075,  0.5977,
          0.0518,  0.6435, -0.1479,  1.2734,  0.2058,  0.4736,  1.0099,  1.0797,
          0.2190,  0.1970, -0.0832,  0.7946,  0.4291,  0.3312,  0.7143,  0.3281,
          0.7430, -0.0106,  0.8206,  0.8354,  0.3886,  0.0442, -0.4822,  0.7113,
          0.3261]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
589000 loss tensor(0.0702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0455,  0.9734,  0.2681,  2.6125, -0.8963, -1.5989, -0.6863,  0.7304,
          0.3541,  0.0125, -0.0667,  1.0059,  0.3598,  0.9920,  0.8359, -0.4204,
         -0.1989,  0.1366,  1.2107,  0.2109,  0.4310,  0.2311,  0.2078,  0.5977,
          0.0532,  0.6442, -0.1484,  1.2732,  0.2051,  0.4734,  1.0109,  1.0803,
          0.2178,  0.1980, -0.0847,  0.7930,  0.4278,  0.3296,  0.7136,  0.3266,
          0.7413, -0.0099,  0.8198,  0.8345,  0.3894,  0.0445, -0.4823,  0.7097,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
590000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0451,  0.9718,  0.2678,  2.6097, -0.8965, -1.5973, -0.6874,  0.7289,
          0.3528,  0.0116, -0.0659,  1.0045,  0.3604,  0.9920,  0.8362, -0.4203,
         -0.1976,  0.1359,  1.2103,  0.2107,  0.4317,  0.2302,  0.2068,  0.5969,
          0.0525,  0.6429, -0.1470,  1.2728,  0.2051,  0.4736,  1.0102,  1.0789,
          0.2195,  0.1972, -0.0844,  0.7937,  0.4290,  0.3307,  0.7148,  0.3281,
          0.7422, -0.0103,  0.8203,  0.8352,  0.3895,  0.0439, -0.4822,  0.7107,
          0.3262]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
591000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0468,  0.9705,  0.2675,  2.6089, -0.8980, -1.5984, -0.6878,  0.7282,
          0.3523,  0.0114, -0.0681,  1.0038,  0.3598,  0.9895,  0.8374, -0.4196,
         -0.1974,  0.1344,  1.2104,  0.2119,  0.4304,  0.2297,  0.2075,  0.5973,
          0.0515,  0.6425, -0.1474,  1.2739,  0.2062,  0.4742,  1.0093,  1.0787,
          0.2192,  0.1973, -0.0839,  0.7937,  0.4288,  0.3309,  0.7143,  0.3270,
          0.7424, -0.0102,  0.8206,  0.8352,  0.3882,  0.0424, -0.4813,  0.7105,
          0.3276]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
592000 loss tensor(0.0650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0263, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0368, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0480,  0.9699,  0.2687,  2.6067, -0.8990, -1.5989, -0.6878,  0.7268,
          0.3525,  0.0118, -0.0689,  1.0033,  0.3592,  0.9895,  0.8377, -0.4191,
         -0.1968,  0.1349,  1.2109,  0.2118,  0.4297,  0.2298,  0.2077,  0.5975,
          0.0519,  0.6419, -0.1485,  1.2736,  0.2060,  0.4745,  1.0092,  1.0778,
          0.2185,  0.1974, -0.0847,  0.7936,  0.4287,  0.3307,  0.7149,  0.3264,
          0.7419, -0.0090,  0.8213,  0.8350,  0.3886,  0.0421, -0.4813,  0.7095,
          0.3271]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
593000 loss tensor(0.0640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0492,  0.9721,  0.2691,  2.6056, -0.9006, -1.5973, -0.6882,  0.7271,
          0.3535,  0.0128, -0.0689,  1.0041,  0.3586,  0.9896,  0.8375, -0.4196,
         -0.1970,  0.1332,  1.2112,  0.2133,  0.4299,  0.2302,  0.2063,  0.5984,
          0.0529,  0.6415, -0.1479,  1.2728,  0.2046,  0.4740,  1.0094,  1.0791,
          0.2195,  0.1973, -0.0841,  0.7922,  0.4280,  0.3292,  0.7138,  0.3265,
          0.7409, -0.0097,  0.8196,  0.8340,  0.3901,  0.0431, -0.4812,  0.7089,
          0.3275]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
594000 loss tensor(0.0597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0488,  0.9715,  0.2696,  2.6039, -0.9001, -1.5982, -0.6869,  0.7263,
          0.3523,  0.0127, -0.0702,  1.0033,  0.3595,  0.9884,  0.8377, -0.4191,
         -0.1982,  0.1348,  1.2120,  0.2136,  0.4287,  0.2313,  0.2064,  0.5990,
          0.0530,  0.6426, -0.1476,  1.2731,  0.2054,  0.4750,  1.0090,  1.0782,
          0.2189,  0.1986, -0.0851,  0.7923,  0.4274,  0.3299,  0.7143,  0.3258,
          0.7407, -0.0106,  0.8197,  0.8332,  0.3888,  0.0417, -0.4811,  0.7083,
          0.3275]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
595000 loss tensor(0.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0508,  0.9718,  0.2707,  2.6027, -0.9017, -1.5990, -0.6873,  0.7261,
          0.3531,  0.0133, -0.0710,  1.0032,  0.3583,  0.9879,  0.8377, -0.4190,
         -0.1976,  0.1342,  1.2120,  0.2132,  0.4294,  0.2305,  0.2066,  0.5980,
          0.0530,  0.6421, -0.1478,  1.2727,  0.2047,  0.4739,  1.0095,  1.0787,
          0.2187,  0.1991, -0.0849,  0.7912,  0.4276,  0.3292,  0.7145,  0.3250,
          0.7402, -0.0098,  0.8198,  0.8335,  0.3896,  0.0419, -0.4811,  0.7088,
          0.3275]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
596000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0492,  0.9706,  0.2707,  2.5995, -0.9026, -1.5983, -0.6884,  0.7240,
          0.3519,  0.0125, -0.0720,  1.0019,  0.3579,  0.9869,  0.8379, -0.4182,
         -0.1969,  0.1335,  1.2117,  0.2126,  0.4272,  0.2301,  0.2066,  0.5973,
          0.0516,  0.6416, -0.1479,  1.2724,  0.2051,  0.4749,  1.0082,  1.0776,
          0.2191,  0.1989, -0.0851,  0.7919,  0.4284,  0.3303,  0.7158,  0.3255,
          0.7409, -0.0093,  0.8203,  0.8343,  0.3896,  0.0409, -0.4812,  0.7093,
          0.3274]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
597000 loss tensor(0.0644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0515,  0.9716,  0.2717,  2.5995, -0.9045, -1.5974, -0.6887,  0.7252,
          0.3525,  0.0128, -0.0717,  1.0024,  0.3574,  0.9874,  0.8378, -0.4190,
         -0.1964,  0.1320,  1.2109,  0.2145,  0.4282,  0.2285,  0.2051,  0.5981,
          0.0525,  0.6404, -0.1478,  1.2717,  0.2038,  0.4740,  1.0087,  1.0787,
          0.2203,  0.1979, -0.0845,  0.7911,  0.4283,  0.3289,  0.7149,  0.3260,
          0.7398, -0.0097,  0.8194,  0.8328,  0.3909,  0.0421, -0.4810,  0.7088,
          0.3276]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
598000 loss tensor(0.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0525,  0.9713,  0.2714,  2.5982, -0.9039, -1.5979, -0.6873,  0.7233,
          0.3529,  0.0131, -0.0734,  1.0019,  0.3572,  0.9871,  0.8368, -0.4189,
         -0.1977,  0.1332,  1.2117,  0.2139,  0.4278,  0.2305,  0.2049,  0.5989,
          0.0532,  0.6417, -0.1489,  1.2708,  0.2034,  0.4741,  1.0084,  1.0779,
          0.2198,  0.1999, -0.0853,  0.7903,  0.4276,  0.3290,  0.7154,  0.3251,
          0.7394, -0.0093,  0.8194,  0.8326,  0.3912,  0.0420, -0.4822,  0.7078,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
599000 loss tensor(0.0599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0527,  0.9710,  0.2722,  2.5959, -0.9049, -1.5973, -0.6883,  0.7218,
          0.3524,  0.0131, -0.0738,  1.0011,  0.3569,  0.9849,  0.8380, -0.4181,
         -0.1975,  0.1330,  1.2114,  0.2148,  0.4273,  0.2312,  0.2053,  0.5979,
          0.0523,  0.6410, -0.1472,  1.2718,  0.2045,  0.4749,  1.0082,  1.0777,
          0.2201,  0.1996, -0.0860,  0.7906,  0.4273,  0.3289,  0.7152,  0.3253,
          0.7393, -0.0097,  0.8194,  0.8328,  0.3898,  0.0405, -0.4809,  0.7082,
          0.3278]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
600000 loss tensor(0.0693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0527,  0.9704,  0.2733,  2.5942, -0.9058, -1.5966, -0.6888,  0.7232,
          0.3516,  0.0134, -0.0738,  1.0012,  0.3565,  0.9862,  0.8368, -0.4192,
         -0.1965,  0.1313,  1.2104,  0.2141,  0.4281,  0.2299,  0.2036,  0.5982,
          0.0519,  0.6408, -0.1471,  1.2700,  0.2029,  0.4743,  1.0076,  1.0772,
          0.2214,  0.1995, -0.0848,  0.7904,  0.4279,  0.3292,  0.7161,  0.3258,
          0.7388, -0.0103,  0.8191,  0.8325,  0.3917,  0.0417, -0.4820,  0.7080,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
601000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0536,  0.9700,  0.2735,  2.5928, -0.9065, -1.5976, -0.6896,  0.7206,
          0.3506,  0.0122, -0.0760,  0.9992,  0.3565,  0.9840,  0.8384, -0.4173,
         -0.1963,  0.1313,  1.2119,  0.2153,  0.4265,  0.2304,  0.2052,  0.5986,
          0.0518,  0.6397, -0.1467,  1.2710,  0.2040,  0.4750,  1.0068,  1.0769,
          0.2203,  0.1994, -0.0857,  0.7912,  0.4277,  0.3300,  0.7165,  0.3243,
          0.7395, -0.0092,  0.8199,  0.8334,  0.3903,  0.0399, -0.4810,  0.7087,
          0.3276]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
602000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0537,  0.9693,  0.2736,  2.5894, -0.9066, -1.5974, -0.6896,  0.7204,
          0.3504,  0.0130, -0.0765,  0.9990,  0.3555,  0.9849,  0.8381, -0.4173,
         -0.1963,  0.1308,  1.2125,  0.2149,  0.4251,  0.2299,  0.2045,  0.5993,
          0.0515,  0.6396, -0.1481,  1.2700,  0.2033,  0.4752,  1.0058,  1.0754,
          0.2204,  0.1999, -0.0850,  0.7905,  0.4281,  0.3298,  0.7166,  0.3243,
          0.7394, -0.0086,  0.8202,  0.8332,  0.3911,  0.0402, -0.4820,  0.7078,
          0.3264]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
603000 loss tensor(0.0680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0558,  0.9699,  0.2742,  2.5890, -0.9074, -1.5975, -0.6887,  0.7199,
          0.3516,  0.0135, -0.0766,  0.9996,  0.3557,  0.9843,  0.8375, -0.4181,
         -0.1970,  0.1314,  1.2119,  0.2152,  0.4264,  0.2295,  0.2034,  0.5983,
          0.0523,  0.6398, -0.1473,  1.2695,  0.2025,  0.4743,  1.0072,  1.0766,
          0.2208,  0.2009, -0.0858,  0.7892,  0.4275,  0.3281,  0.7167,  0.3241,
          0.7381, -0.0099,  0.8189,  0.8314,  0.3921,  0.0406, -0.4819,  0.7066,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
604000 loss tensor(0.0710, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0562,  0.9698,  0.2747,  2.5872, -0.9083, -1.5972, -0.6884,  0.7195,
          0.3517,  0.0137, -0.0768,  0.9994,  0.3552,  0.9836,  0.8377, -0.4180,
         -0.1969,  0.1313,  1.2118,  0.2150,  0.4263,  0.2294,  0.2031,  0.5987,
          0.0530,  0.6398, -0.1477,  1.2694,  0.2023,  0.4745,  1.0068,  1.0765,
          0.2211,  0.2012, -0.0860,  0.7886,  0.4278,  0.3281,  0.7164,  0.3249,
          0.7378, -0.0091,  0.8192,  0.8314,  0.3921,  0.0401, -0.4819,  0.7066,
          0.3270]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
605000 loss tensor(0.0679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0554,  0.9685,  0.2737,  2.5849, -0.9087, -1.5975, -0.6887,  0.7184,
          0.3501,  0.0133, -0.0787,  0.9979,  0.3557,  0.9824,  0.8378, -0.4174,
         -0.1963,  0.1309,  1.2115,  0.2150,  0.4247,  0.2300,  0.2032,  0.5984,
          0.0509,  0.6391, -0.1483,  1.2693,  0.2031,  0.4754,  1.0060,  1.0753,
          0.2214,  0.2012, -0.0858,  0.7898,  0.4281,  0.3293,  0.7182,  0.3246,
          0.7389, -0.0093,  0.8203,  0.8320,  0.3911,  0.0386, -0.4820,  0.7074,
          0.3263]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
606000 loss tensor(0.0614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0571,  0.9688,  0.2756,  2.5851, -0.9104, -1.5966, -0.6896,  0.7177,
          0.3511,  0.0136, -0.0780,  0.9984,  0.3551,  0.9825,  0.8379, -0.4180,
         -0.1958,  0.1303,  1.2119,  0.2166,  0.4260,  0.2293,  0.2020,  0.5989,
          0.0518,  0.6385, -0.1464,  1.2685,  0.2018,  0.4743,  1.0072,  1.0761,
          0.2219,  0.2009, -0.0857,  0.7883,  0.4274,  0.3277,  0.7173,  0.3249,
          0.7375, -0.0102,  0.8189,  0.8312,  0.3923,  0.0394, -0.4819,  0.7063,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
607000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0575,  0.9685,  0.2751,  2.5826, -0.9122, -1.5966, -0.6894,  0.7173,
          0.3509,  0.0140, -0.0800,  0.9979,  0.3543,  0.9812,  0.8389, -0.4173,
         -0.1963,  0.1300,  1.2107,  0.2157,  0.4251,  0.2305,  0.2027,  0.5984,
          0.0520,  0.6386, -0.1476,  1.2691,  0.2023,  0.4748,  1.0070,  1.0756,
          0.2218,  0.2021, -0.0859,  0.7880,  0.4267,  0.3276,  0.7170,  0.3237,
          0.7373, -0.0096,  0.8190,  0.8308,  0.3919,  0.0385, -0.4808,  0.7055,
          0.3278]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
608000 loss tensor(0.0593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0603,  0.9684,  0.2762,  2.5808, -0.9136, -1.5968, -0.6903,  0.7155,
          0.3492,  0.0134, -0.0810,  0.9969,  0.3549,  0.9806,  0.8390, -0.4163,
         -0.1963,  0.1286,  1.2117,  0.2161,  0.4242,  0.2302,  0.2027,  0.5990,
          0.0513,  0.6376, -0.1467,  1.2690,  0.2025,  0.4756,  1.0049,  1.0755,
          0.2211,  0.2008, -0.0855,  0.7888,  0.4272,  0.3287,  0.7167,  0.3231,
          0.7373, -0.0102,  0.8191,  0.8313,  0.3915,  0.0379, -0.4810,  0.7067,
          0.3281]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
609000 loss tensor(0.0601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0589,  0.9678,  0.2767,  2.5798, -0.9135, -1.5966, -0.6894,  0.7165,
          0.3501,  0.0135, -0.0816,  0.9972,  0.3535,  0.9810,  0.8381, -0.4170,
         -0.1967,  0.1279,  1.2113,  0.2166,  0.4247,  0.2304,  0.2016,  0.5989,
          0.0517,  0.6380, -0.1477,  1.2675,  0.2011,  0.4747,  1.0055,  1.0750,
          0.2221,  0.2023, -0.0850,  0.7876,  0.4263,  0.3281,  0.7173,  0.3233,
          0.7365, -0.0091,  0.8184,  0.8305,  0.3928,  0.0387, -0.4820,  0.7058,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
610000 loss tensor(0.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0606,  0.9682,  0.2780,  2.5782, -0.9133, -1.5961, -0.6903,  0.7153,
          0.3506,  0.0136, -0.0816,  0.9966,  0.3536,  0.9798,  0.8383, -0.4174,
         -0.1953,  0.1284,  1.2122,  0.2164,  0.4246,  0.2290,  0.2009,  0.5987,
          0.0521,  0.6380, -0.1468,  1.2678,  0.2015,  0.4744,  1.0071,  1.0747,
          0.2230,  0.2015, -0.0856,  0.7874,  0.4274,  0.3270,  0.7179,  0.3241,
          0.7365, -0.0095,  0.8188,  0.8303,  0.3929,  0.0379, -0.4816,  0.7055,
          0.3269]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
611000 loss tensor(0.0670, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0608,  0.9668,  0.2763,  2.5759, -0.9152, -1.5958, -0.6907,  0.7146,
          0.3498,  0.0129, -0.0822,  0.9957,  0.3525,  0.9803,  0.8384, -0.4171,
         -0.1951,  0.1282,  1.2109,  0.2156,  0.4242,  0.2283,  0.2006,  0.5984,
          0.0504,  0.6362, -0.1473,  1.2668,  0.2008,  0.4743,  1.0051,  1.0738,
          0.2238,  0.2020, -0.0852,  0.7874,  0.4285,  0.3278,  0.7189,  0.3241,
          0.7371, -0.0091,  0.8194,  0.8308,  0.3936,  0.0381, -0.4821,  0.7057,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
612000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0393, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0603,  0.9671,  0.2761,  2.5735, -0.9162, -1.5966, -0.6913,  0.7126,
          0.3493,  0.0132, -0.0845,  0.9946,  0.3523,  0.9784,  0.8397, -0.4156,
         -0.1952,  0.1271,  1.2109,  0.2162,  0.4226,  0.2286,  0.2020,  0.5983,
          0.0504,  0.6365, -0.1476,  1.2679,  0.2019,  0.4755,  1.0044,  1.0735,
          0.2228,  0.2024, -0.0854,  0.7881,  0.4276,  0.3283,  0.7194,  0.3229,
          0.7373, -0.0083,  0.8196,  0.8312,  0.3924,  0.0366, -0.4811,  0.7062,
          0.3278]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
613000 loss tensor(0.0602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0616,  0.9674,  0.2764,  2.5723, -0.9170, -1.5958, -0.6920,  0.7134,
          0.3486,  0.0128, -0.0844,  0.9943,  0.3523,  0.9794,  0.8386, -0.4160,
         -0.1942,  0.1265,  1.2112,  0.2165,  0.4232,  0.2275,  0.2007,  0.5985,
          0.0502,  0.6356, -0.1468,  1.2663,  0.2006,  0.4749,  1.0038,  1.0728,
          0.2236,  0.2013, -0.0848,  0.7881,  0.4287,  0.3284,  0.7192,  0.3236,
          0.7368, -0.0090,  0.8196,  0.8311,  0.3941,  0.0378, -0.4819,  0.7065,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
614000 loss tensor(0.0572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0625,  0.9660,  0.2784,  2.5700, -0.9174, -1.5968, -0.6918,  0.7118,
          0.3487,  0.0132, -0.0861,  0.9937,  0.3519,  0.9774,  0.8396, -0.4152,
         -0.1946,  0.1275,  1.2122,  0.2173,  0.4217,  0.2291,  0.2011,  0.5995,
          0.0502,  0.6358, -0.1487,  1.2670,  0.2014,  0.4759,  1.0043,  1.0723,
          0.2225,  0.2027, -0.0852,  0.7874,  0.4278,  0.3288,  0.7195,  0.3220,
          0.7365, -0.0081,  0.8194,  0.8311,  0.3928,  0.0360, -0.4813,  0.7060,
          0.3273]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
615000 loss tensor(0.0627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0636,  0.9676,  0.2788,  2.5696, -0.9175, -1.5964, -0.6908,  0.7112,
          0.3495,  0.0139, -0.0863,  0.9944,  0.3516,  0.9776,  0.8391, -0.4159,
         -0.1956,  0.1273,  1.2117,  0.2181,  0.4224,  0.2294,  0.1999,  0.5990,
          0.0510,  0.6365, -0.1472,  1.2660,  0.2001,  0.4750,  1.0051,  1.0727,
          0.2231,  0.2034, -0.0859,  0.7864,  0.4267,  0.3269,  0.7192,  0.3224,
          0.7351, -0.0089,  0.8185,  0.8295,  0.3941,  0.0368, -0.4821,  0.7045,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
616000 loss tensor(0.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0637,  0.9672,  0.2790,  2.5681, -0.9192, -1.5966, -0.6906,  0.7111,
          0.3494,  0.0139, -0.0868,  0.9943,  0.3510,  0.9765,  0.8390, -0.4160,
         -0.1952,  0.1266,  1.2120,  0.2184,  0.4219,  0.2289,  0.1997,  0.5991,
          0.0512,  0.6362, -0.1476,  1.2659,  0.2002,  0.4754,  1.0039,  1.0732,
          0.2236,  0.2032, -0.0862,  0.7859,  0.4264,  0.3268,  0.7194,  0.3223,
          0.7349, -0.0093,  0.8180,  0.8290,  0.3939,  0.0363, -0.4816,  0.7043,
          0.3271]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
617000 loss tensor(0.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0376, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0674,  0.9665,  0.2795,  2.5668, -0.9213, -1.5950, -0.6923,  0.7101,
          0.3490,  0.0142, -0.0870,  0.9935,  0.3519,  0.9771,  0.8393, -0.4158,
         -0.1945,  0.1256,  1.2114,  0.2194,  0.4232,  0.2278,  0.1992,  0.5978,
          0.0506,  0.6347, -0.1465,  1.2650,  0.1992,  0.4746,  1.0045,  1.0726,
          0.2247,  0.2024, -0.0857,  0.7858,  0.4273,  0.3267,  0.7191,  0.3230,
          0.7349, -0.0096,  0.8185,  0.8287,  0.3950,  0.0366, -0.4815,  0.7046,
          0.3274]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
618000 loss tensor(0.0630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0676,  0.9662,  0.2807,  2.5648, -0.9224, -1.5944, -0.6925,  0.7083,
          0.3488,  0.0140, -0.0870,  0.9929,  0.3512,  0.9759,  0.8399, -0.4157,
         -0.1947,  0.1241,  1.2112,  0.2196,  0.4221,  0.2282,  0.1986,  0.5990,
          0.0503,  0.6345, -0.1462,  1.2655,  0.1995,  0.4750,  1.0039,  1.0725,
          0.2249,  0.2029, -0.0860,  0.7862,  0.4271,  0.3270,  0.7189,  0.3229,
          0.7345, -0.0093,  0.8185,  0.8288,  0.3948,  0.0363, -0.4808,  0.7047,
          0.3277]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
619000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0377, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0676,  0.9664,  0.2804,  2.5640, -0.9228, -1.5958, -0.6911,  0.7084,
          0.3488,  0.0143, -0.0893,  0.9928,  0.3503,  0.9761,  0.8390, -0.4153,
         -0.1953,  0.1254,  1.2113,  0.2195,  0.4206,  0.2289,  0.1988,  0.5993,
          0.0508,  0.6352, -0.1472,  1.2645,  0.1989,  0.4754,  1.0034,  1.0721,
          0.2239,  0.2041, -0.0859,  0.7853,  0.4263,  0.3264,  0.7198,  0.3216,
          0.7341, -0.0097,  0.8182,  0.8286,  0.3953,  0.0365, -0.4819,  0.7039,
          0.3267]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
620000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0378, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0674,  0.9649,  0.2797,  2.5607, -0.9226, -1.5941, -0.6933,  0.7080,
          0.3473,  0.0131, -0.0892,  0.9913,  0.3502,  0.9757,  0.8393, -0.4156,
         -0.1935,  0.1242,  1.2108,  0.2188,  0.4208,  0.2274,  0.1984,  0.5976,
          0.0493,  0.6338, -0.1473,  1.2642,  0.1991,  0.4751,  1.0030,  1.0710,
          0.2255,  0.2036, -0.0855,  0.7859,  0.4278,  0.3268,  0.7208,  0.3233,
          0.7358, -0.0084,  0.8197,  0.8299,  0.3953,  0.0358, -0.4816,  0.7041,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
621000 loss tensor(0.0693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0692,  0.9655,  0.2812,  2.5595, -0.9226, -1.5952, -0.6928,  0.7071,
          0.3484,  0.0140, -0.0900,  0.9916,  0.3495,  0.9744,  0.8392, -0.4157,
         -0.1941,  0.1235,  1.2107,  0.2182,  0.4211,  0.2274,  0.1976,  0.5982,
          0.0501,  0.6338, -0.1465,  1.2641,  0.1990,  0.4750,  1.0033,  1.0711,
          0.2254,  0.2044, -0.0853,  0.7848,  0.4274,  0.3260,  0.7206,  0.3226,
          0.7345, -0.0084,  0.8187,  0.8292,  0.3950,  0.0349, -0.4819,  0.7033,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
622000 loss tensor(0.0641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0689,  0.9646,  0.2806,  2.5575, -0.9247, -1.5955, -0.6930,  0.7053,
          0.3480,  0.0130, -0.0914,  0.9908,  0.3490,  0.9741,  0.8393, -0.4153,
         -0.1938,  0.1242,  1.2108,  0.2187,  0.4207,  0.2271,  0.1978,  0.5980,
          0.0499,  0.6333, -0.1469,  1.2635,  0.1987,  0.4747,  1.0020,  1.0712,
          0.2259,  0.2042, -0.0858,  0.7850,  0.4278,  0.3263,  0.7214,  0.3223,
          0.7345, -0.0082,  0.8190,  0.8288,  0.3959,  0.0354, -0.4816,  0.7032,
          0.3269]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
623000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0713,  0.9641,  0.2814,  2.5572, -0.9264, -1.5956, -0.6931,  0.7049,
          0.3474,  0.0139, -0.0921,  0.9902,  0.3503,  0.9730,  0.8409, -0.4145,
         -0.1931,  0.1233,  1.2125,  0.2207,  0.4195,  0.2269,  0.1976,  0.5997,
          0.0495,  0.6321, -0.1462,  1.2644,  0.1992,  0.4765,  1.0020,  1.0701,
          0.2252,  0.2035, -0.0862,  0.7853,  0.4266,  0.3265,  0.7204,  0.3215,
          0.7341, -0.0099,  0.8185,  0.8276,  0.3950,  0.0340, -0.4806,  0.7029,
          0.3276]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
624000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0709,  0.9646,  0.2820,  2.5543, -0.9265, -1.5946, -0.6938,  0.7043,
          0.3468,  0.0136, -0.0930,  0.9891,  0.3493,  0.9722,  0.8410, -0.4141,
         -0.1928,  0.1225,  1.2113,  0.2211,  0.4190,  0.2271,  0.1978,  0.5993,
          0.0493,  0.6318, -0.1463,  1.2643,  0.1994,  0.4761,  1.0017,  1.0694,
          0.2256,  0.2032, -0.0859,  0.7857,  0.4270,  0.3270,  0.7210,  0.3217,
          0.7344, -0.0089,  0.8188,  0.8285,  0.3948,  0.0333, -0.4807,  0.7042,
          0.3277]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
625000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0721,  0.9647,  0.2821,  2.5519, -0.9269, -1.5961, -0.6932,  0.7043,
          0.3467,  0.0141, -0.0952,  0.9892,  0.3484,  0.9711,  0.8401, -0.4137,
         -0.1934,  0.1227,  1.2123,  0.2202,  0.4182,  0.2279,  0.1980,  0.6000,
          0.0494,  0.6330, -0.1475,  1.2635,  0.1993,  0.4765,  1.0017,  1.0697,
          0.2248,  0.2049, -0.0860,  0.7847,  0.4273,  0.3272,  0.7220,  0.3203,
          0.7338, -0.0083,  0.8192,  0.8288,  0.3951,  0.0329, -0.4818,  0.7032,
          0.3270]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
626000 loss tensor(0.0746, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0719,  0.9647,  0.2829,  2.5519, -0.9285, -1.5954, -0.6935,  0.7026,
          0.3473,  0.0148, -0.0944,  0.9893,  0.3490,  0.9708,  0.8412, -0.4133,
         -0.1937,  0.1226,  1.2119,  0.2210,  0.4179,  0.2280,  0.1972,  0.5991,
          0.0496,  0.6326, -0.1469,  1.2638,  0.1988,  0.4766,  1.0015,  1.0698,
          0.2246,  0.2049, -0.0871,  0.7846,  0.4261,  0.3264,  0.7212,  0.3204,
          0.7331, -0.0094,  0.8183,  0.8272,  0.3955,  0.0330, -0.4804,  0.7030,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
627000 loss tensor(0.0748, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0416, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0720,  0.9641,  0.2834,  2.5489, -0.9278, -1.5964, -0.6933,  0.7030,
          0.3465,  0.0135, -0.0962,  0.9881,  0.3483,  0.9698,  0.8399, -0.4135,
         -0.1932,  0.1226,  1.2117,  0.2206,  0.4173,  0.2273,  0.1970,  0.5996,
          0.0490,  0.6323, -0.1475,  1.2631,  0.1991,  0.4763,  1.0010,  1.0687,
          0.2251,  0.2053, -0.0864,  0.7849,  0.4269,  0.3271,  0.7226,  0.3204,
          0.7335, -0.0082,  0.8190,  0.8277,  0.3951,  0.0321, -0.4817,  0.7031,
          0.3268]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
628000 loss tensor(0.0702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0392, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0726,  0.9632,  0.2826,  2.5479, -0.9299, -1.5951, -0.6938,  0.7007,
          0.3465,  0.0138, -0.0964,  0.9876,  0.3477,  0.9696,  0.8412, -0.4129,
         -0.1930,  0.1224,  1.2119,  0.2204,  0.4176,  0.2278,  0.1975,  0.5988,
          0.0487,  0.6311, -0.1479,  1.2632,  0.1988,  0.4769,  1.0006,  1.0689,
          0.2255,  0.2053, -0.0867,  0.7844,  0.4269,  0.3263,  0.7223,  0.3202,
          0.7331, -0.0082,  0.8193,  0.8279,  0.3955,  0.0321, -0.4806,  0.7019,
          0.3277]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
629000 loss tensor(0.0612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0750,  0.9628,  0.2844,  2.5476, -0.9311, -1.5955, -0.6933,  0.7016,
          0.3473,  0.0148, -0.0971,  0.9883,  0.3474,  0.9689,  0.8411, -0.4135,
         -0.1929,  0.1219,  1.2112,  0.2219,  0.4182,  0.2275,  0.1964,  0.5999,
          0.0499,  0.6312, -0.1473,  1.2628,  0.1984,  0.4762,  1.0018,  1.0695,
          0.2255,  0.2056, -0.0862,  0.7831,  0.4260,  0.3252,  0.7214,  0.3202,
          0.7323, -0.0087,  0.8180,  0.8268,  0.3961,  0.0321, -0.4805,  0.7012,
          0.3280]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
630000 loss tensor(0.0567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0756,  0.9633,  0.2843,  2.5454, -0.9318, -1.5951, -0.6935,  0.6989,
          0.3467,  0.0152, -0.0987,  0.9873,  0.3476,  0.9686,  0.8413, -0.4130,
         -0.1942,  0.1216,  1.2116,  0.2218,  0.4176,  0.2279,  0.1965,  0.5997,
          0.0494,  0.6309, -0.1467,  1.2626,  0.1980,  0.4768,  0.9997,  1.0686,
          0.2264,  0.2060, -0.0869,  0.7833,  0.4256,  0.3258,  0.7217,  0.3201,
          0.7317, -0.0092,  0.8180,  0.8265,  0.3962,  0.0318, -0.4804,  0.7013,
          0.3279]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
631000 loss tensor(0.0669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0350, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0741,  0.9623,  0.2854,  2.5430, -0.9320, -1.5950, -0.6940,  0.6997,
          0.3458,  0.0144, -0.0989,  0.9867,  0.3464,  0.9681,  0.8405, -0.4129,
         -0.1925,  0.1211,  1.2115,  0.2218,  0.4163,  0.2268,  0.1961,  0.5998,
          0.0483,  0.6306, -0.1475,  1.2620,  0.1981,  0.4773,  1.0001,  1.0677,
          0.2265,  0.2060, -0.0862,  0.7838,  0.4270,  0.3268,  0.7233,  0.3202,
          0.7322, -0.0082,  0.8186,  0.8269,  0.3966,  0.0314, -0.4813,  0.7023,
          0.3267]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
632000 loss tensor(0.0588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0754,  0.9634,  0.2868,  2.5411, -0.9339, -1.5949, -0.6944,  0.6991,
          0.3462,  0.0149, -0.0996,  0.9867,  0.3467,  0.9675,  0.8413, -0.4128,
         -0.1928,  0.1211,  1.2116,  0.2221,  0.4165,  0.2271,  0.1955,  0.5996,
          0.0500,  0.6304, -0.1465,  1.2618,  0.1977,  0.4768,  1.0002,  1.0684,
          0.2260,  0.2059, -0.0869,  0.7827,  0.4263,  0.3257,  0.7225,  0.3194,
          0.7317, -0.0092,  0.8178,  0.8260,  0.3963,  0.0310, -0.4806,  0.7015,
          0.3279]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
633000 loss tensor(0.0610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0760,  0.9614,  0.2850,  2.5400, -0.9338, -1.5953, -0.6945,  0.6988,
          0.3459,  0.0143, -0.1012,  0.9857,  0.3463,  0.9674,  0.8406, -0.4128,
         -0.1924,  0.1207,  1.2124,  0.2217,  0.4163,  0.2262,  0.1952,  0.5997,
          0.0489,  0.6298, -0.1471,  1.2610,  0.1973,  0.4766,  0.9990,  1.0673,
          0.2265,  0.2062, -0.0860,  0.7830,  0.4272,  0.3259,  0.7239,  0.3193,
          0.7319, -0.0081,  0.8189,  0.8267,  0.3972,  0.0312, -0.4814,  0.7015,
          0.3270]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
634000 loss tensor(0.0603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0783,  0.9612,  0.2865,  2.5384, -0.9347, -1.5938, -0.6954,  0.6965,
          0.3455,  0.0135, -0.1003,  0.9854,  0.3463,  0.9680,  0.8404, -0.4130,
         -0.1922,  0.1197,  1.2111,  0.2225,  0.4172,  0.2260,  0.1945,  0.5988,
          0.0481,  0.6298, -0.1462,  1.2601,  0.1966,  0.4765,  0.9992,  1.0668,
          0.2282,  0.2061, -0.0871,  0.7826,  0.4275,  0.3256,  0.7240,  0.3211,
          0.7315, -0.0083,  0.8188,  0.8267,  0.3983,  0.0313, -0.4814,  0.7013,
          0.3266]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
635000 loss tensor(0.0618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0773,  0.9615,  0.2863,  2.5360, -0.9360, -1.5956, -0.6951,  0.6976,
          0.3451,  0.0145, -0.1024,  0.9850,  0.3446,  0.9659,  0.8410, -0.4119,
         -0.1922,  0.1197,  1.2125,  0.2218,  0.4152,  0.2265,  0.1951,  0.5992,
          0.0489,  0.6292, -0.1473,  1.2606,  0.1972,  0.4768,  0.9988,  1.0662,
          0.2269,  0.2068, -0.0871,  0.7825,  0.4267,  0.3260,  0.7239,  0.3189,
          0.7316, -0.0076,  0.8187,  0.8270,  0.3971,  0.0302, -0.4813,  0.7010,
          0.3273]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
636000 loss tensor(0.0612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0801,  0.9625,  0.2880,  2.5360, -0.9369, -1.5936, -0.6951,  0.6965,
          0.3465,  0.0145, -0.1020,  0.9853,  0.3451,  0.9660,  0.8406, -0.4136,
         -0.1920,  0.1193,  1.2110,  0.2229,  0.4169,  0.2261,  0.1935,  0.5991,
          0.0499,  0.6292, -0.1457,  1.2598,  0.1958,  0.4758,  1.0000,  1.0677,
          0.2284,  0.2067, -0.0869,  0.7808,  0.4263,  0.3240,  0.7233,  0.3201,
          0.7303, -0.0085,  0.8176,  0.8252,  0.3984,  0.0309, -0.4813,  0.7004,
          0.3275]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
637000 loss tensor(0.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0342, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0813,  0.9629,  0.2885,  2.5347, -0.9381, -1.5939, -0.6944,  0.6951,
          0.3465,  0.0153, -0.1035,  0.9849,  0.3445,  0.9656,  0.8411, -0.4128,
         -0.1926,  0.1196,  1.2117,  0.2235,  0.4152,  0.2272,  0.1939,  0.5994,
          0.0498,  0.6290, -0.1466,  1.2593,  0.1957,  0.4762,  0.9997,  1.0673,
          0.2278,  0.2073, -0.0872,  0.7808,  0.4251,  0.3242,  0.7236,  0.3190,
          0.7296, -0.0083,  0.8176,  0.8260,  0.3988,  0.0309, -0.4814,  0.7002,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
638000 loss tensor(0.0597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0817,  0.9614,  0.2884,  2.5323, -0.9377, -1.5939, -0.6962,  0.6941,
          0.3454,  0.0142, -0.1036,  0.9837,  0.3434,  0.9650,  0.8407, -0.4125,
         -0.1916,  0.1179,  1.2105,  0.2225,  0.4157,  0.2256,  0.1936,  0.5989,
          0.0483,  0.6279, -0.1461,  1.2589,  0.1957,  0.4759,  0.9994,  1.0660,
          0.2286,  0.2068, -0.0865,  0.7810,  0.4273,  0.3246,  0.7241,  0.3198,
          0.7306, -0.0077,  0.8181,  0.8264,  0.3987,  0.0302, -0.4816,  0.7002,
          0.3269]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
639000 loss tensor(0.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0830,  0.9616,  0.2899,  2.5321, -0.9394, -1.5943, -0.6947,  0.6937,
          0.3454,  0.0153, -0.1052,  0.9841,  0.3437,  0.9640,  0.8408, -0.4126,
         -0.1927,  0.1179,  1.2112,  0.2242,  0.4149,  0.2260,  0.1928,  0.6009,
          0.0496,  0.6292, -0.1463,  1.2588,  0.1954,  0.4763,  0.9995,  1.0672,
          0.2278,  0.2083, -0.0874,  0.7805,  0.4254,  0.3247,  0.7236,  0.3188,
          0.7294, -0.0082,  0.8173,  0.8254,  0.3988,  0.0300, -0.4814,  0.6995,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
640000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0372, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0823,  0.9599,  0.2872,  2.5284, -0.9407, -1.5933, -0.6963,  0.6921,
          0.3449,  0.0139, -0.1048,  0.9829,  0.3430,  0.9643,  0.8411, -0.4122,
         -0.1913,  0.1179,  1.2109,  0.2230,  0.4158,  0.2252,  0.1927,  0.5983,
          0.0482,  0.6276, -0.1461,  1.2583,  0.1950,  0.4756,  0.9983,  1.0660,
          0.2296,  0.2072, -0.0872,  0.7802,  0.4272,  0.3240,  0.7252,  0.3204,
          0.7302, -0.0074,  0.8183,  0.8258,  0.3996,  0.0301, -0.4813,  0.6997,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
641000 loss tensor(0.0587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0819,  0.9596,  0.2894,  2.5266, -0.9423, -1.5947, -0.6968,  0.6920,
          0.3444,  0.0147, -0.1072,  0.9820,  0.3426,  0.9623,  0.8421, -0.4108,
         -0.1916,  0.1176,  1.2114,  0.2236,  0.4138,  0.2255,  0.1939,  0.5983,
          0.0479,  0.6271, -0.1470,  1.2589,  0.1958,  0.4769,  0.9982,  1.0658,
          0.2282,  0.2074, -0.0876,  0.7809,  0.4266,  0.3250,  0.7247,  0.3182,
          0.7301, -0.0071,  0.8185,  0.8260,  0.3982,  0.0284, -0.4803,  0.6992,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
642000 loss tensor(0.0634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0844,  0.9601,  0.2891,  2.5261, -0.9425, -1.5927, -0.6962,  0.6915,
          0.3452,  0.0149, -0.1060,  0.9825,  0.3422,  0.9626,  0.8414, -0.4123,
         -0.1917,  0.1174,  1.2106,  0.2236,  0.4147,  0.2256,  0.1920,  0.5992,
          0.0488,  0.6271, -0.1466,  1.2577,  0.1946,  0.4760,  0.9988,  1.0659,
          0.2300,  0.2084, -0.0872,  0.7798,  0.4266,  0.3235,  0.7250,  0.3195,
          0.7291, -0.0071,  0.8177,  0.8252,  0.3997,  0.0292, -0.4813,  0.6990,
          0.3272]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
643000 loss tensor(0.0592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0842,  0.9606,  0.2900,  2.5241, -0.9428, -1.5931, -0.6966,  0.6912,
          0.3442,  0.0139, -0.1071,  0.9813,  0.3420,  0.9628,  0.8412, -0.4122,
         -0.1908,  0.1175,  1.2108,  0.2238,  0.4141,  0.2250,  0.1920,  0.5984,
          0.0481,  0.6266, -0.1467,  1.2571,  0.1945,  0.4762,  0.9985,  1.0645,
          0.2295,  0.2079, -0.0867,  0.7798,  0.4273,  0.3241,  0.7255,  0.3193,
          0.7296, -0.0075,  0.8181,  0.8251,  0.4001,  0.0291, -0.4817,  0.6994,
          0.3269]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
644000 loss tensor(0.0629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0861,  0.9603,  0.2910,  2.5245, -0.9446, -1.5932, -0.6972,  0.6913,
          0.3446,  0.0147, -0.1083,  0.9817,  0.3421,  0.9618,  0.8428, -0.4112,
         -0.1911,  0.1153,  1.2109,  0.2252,  0.4143,  0.2250,  0.1921,  0.5995,
          0.0492,  0.6261, -0.1455,  1.2577,  0.1944,  0.4766,  0.9983,  1.0655,
          0.2296,  0.2075, -0.0865,  0.7793,  0.4261,  0.3238,  0.7242,  0.3184,
          0.7286, -0.0078,  0.8169,  0.8245,  0.4000,  0.0287, -0.4801,  0.6989,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
645000 loss tensor(0.0651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0853,  0.9612,  0.2910,  2.5216, -0.9449, -1.5939, -0.6959,  0.6903,
          0.3449,  0.0154, -0.1094,  0.9819,  0.3415,  0.9616,  0.8419, -0.4114,
         -0.1919,  0.1167,  1.2108,  0.2248,  0.4132,  0.2265,  0.1916,  0.5993,
          0.0491,  0.6276, -0.1469,  1.2568,  0.1940,  0.4763,  0.9978,  1.0645,
          0.2288,  0.2094, -0.0877,  0.7785,  0.4257,  0.3228,  0.7251,  0.3175,
          0.7281, -0.0075,  0.8169,  0.8241,  0.4005,  0.0285, -0.4814,  0.6980,
          0.3275]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
646000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0392, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0872,  0.9608,  0.2923,  2.5198, -0.9461, -1.5937, -0.6957,  0.6897,
          0.3444,  0.0156, -0.1096,  0.9813,  0.3414,  0.9606,  0.8419, -0.4111,
         -0.1918,  0.1161,  1.2115,  0.2256,  0.4124,  0.2250,  0.1913,  0.6002,
          0.0494,  0.6271, -0.1462,  1.2565,  0.1939,  0.4768,  0.9980,  1.0644,
          0.2289,  0.2095, -0.0875,  0.7789,  0.4255,  0.3235,  0.7253,  0.3179,
          0.7277, -0.0081,  0.8166,  0.8237,  0.4006,  0.0283, -0.4813,  0.6985,
          0.3273]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
647000 loss tensor(0.0642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0334, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0874,  0.9589,  0.2920,  2.5174, -0.9472, -1.5940, -0.6976,  0.6880,
          0.3433,  0.0147, -0.1112,  0.9797,  0.3410,  0.9594,  0.8434, -0.4098,
         -0.1906,  0.1156,  1.2113,  0.2250,  0.4119,  0.2255,  0.1923,  0.5990,
          0.0476,  0.6247, -0.1469,  1.2572,  0.1950,  0.4778,  0.9968,  1.0633,
          0.2294,  0.2085, -0.0873,  0.7799,  0.4262,  0.3243,  0.7259,  0.3173,
          0.7288, -0.0065,  0.8183,  0.8253,  0.3994,  0.0266, -0.4802,  0.6980,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
648000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0898,  0.9593,  0.2922,  2.5179, -0.9489, -1.5937, -0.6973,  0.6878,
          0.3443,  0.0153, -0.1116,  0.9805,  0.3407,  0.9594,  0.8433, -0.4106,
         -0.1911,  0.1138,  1.2108,  0.2259,  0.4125,  0.2237,  0.1912,  0.5996,
          0.0482,  0.6254, -0.1453,  1.2566,  0.1936,  0.4765,  0.9974,  1.0643,
          0.2302,  0.2085, -0.0869,  0.7784,  0.4258,  0.3227,  0.7251,  0.3178,
          0.7275, -0.0075,  0.8166,  0.8235,  0.4010,  0.0274, -0.4802,  0.6981,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
649000 loss tensor(0.0661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0343, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0885,  0.9579,  0.2919,  2.5137, -0.9497, -1.5939, -0.6977,  0.6861,
          0.3434,  0.0148, -0.1121,  0.9789,  0.3402,  0.9580,  0.8431, -0.4097,
         -0.1906,  0.1152,  1.2109,  0.2258,  0.4118,  0.2246,  0.1919,  0.5993,
          0.0472,  0.6250, -0.1467,  1.2567,  0.1943,  0.4776,  0.9964,  1.0631,
          0.2295,  0.2090, -0.0878,  0.7791,  0.4262,  0.3235,  0.7265,  0.3170,
          0.7281, -0.0066,  0.8178,  0.8245,  0.4002,  0.0263, -0.4802,  0.6977,
          0.3285]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
650000 loss tensor(0.0576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0906,  0.9572,  0.2923,  2.5140, -0.9505, -1.5930, -0.6977,  0.6851,
          0.3431,  0.0149, -0.1124,  0.9787,  0.3411,  0.9570,  0.8435, -0.4099,
         -0.1901,  0.1154,  1.2124,  0.2260,  0.4107,  0.2243,  0.1912,  0.5996,
          0.0478,  0.6245, -0.1456,  1.2565,  0.1944,  0.4779,  0.9957,  1.0629,
          0.2302,  0.2090, -0.0886,  0.7788,  0.4259,  0.3231,  0.7264,  0.3170,
          0.7278, -0.0079,  0.8178,  0.8234,  0.4003,  0.0258, -0.4798,  0.6984,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
651000 loss tensor(0.0673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0894,  0.9579,  0.2939,  2.5107, -0.9510, -1.5929, -0.6988,  0.6859,
          0.3420,  0.0146, -0.1129,  0.9775,  0.3400,  0.9572,  0.8434, -0.4099,
         -0.1895,  0.1134,  1.2110,  0.2259,  0.4112,  0.2239,  0.1906,  0.5991,
          0.0468,  0.6237, -0.1454,  1.2561,  0.1940,  0.4775,  0.9960,  1.0620,
          0.2311,  0.2082, -0.0865,  0.7793,  0.4268,  0.3235,  0.7266,  0.3178,
          0.7282, -0.0075,  0.8180,  0.8237,  0.4002,  0.0254, -0.4803,  0.6981,
          0.3285]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
652000 loss tensor(0.0612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0910,  0.9578,  0.2938,  2.5092, -0.9517, -1.5923, -0.6982,  0.6853,
          0.3429,  0.0145, -0.1134,  0.9780,  0.3391,  0.9572,  0.8424, -0.4106,
         -0.1901,  0.1136,  1.2103,  0.2252,  0.4114,  0.2245,  0.1894,  0.5989,
          0.0477,  0.6242, -0.1464,  1.2546,  0.1929,  0.4767,  0.9965,  1.0620,
          0.2320,  0.2094, -0.0868,  0.7778,  0.4268,  0.3225,  0.7273,  0.3182,
          0.7276, -0.0070,  0.8175,  0.8239,  0.4013,  0.0259, -0.4814,  0.6976,
          0.3273]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
653000 loss tensor(0.0713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0938,  0.9584,  0.2953,  2.5090, -0.9524, -1.5924, -0.6978,  0.6843,
          0.3433,  0.0156, -0.1134,  0.9779,  0.3395,  0.9564,  0.8423, -0.4110,
         -0.1902,  0.1128,  1.2117,  0.2271,  0.4106,  0.2253,  0.1889,  0.5999,
          0.0482,  0.6237, -0.1458,  1.2544,  0.1925,  0.4764,  0.9965,  1.0624,
          0.2317,  0.2098, -0.0873,  0.7772,  0.4251,  0.3214,  0.7265,  0.3177,
          0.7265, -0.0077,  0.8169,  0.8225,  0.4019,  0.0260, -0.4813,  0.6973,
          0.3276]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
654000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0359, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0919,  0.9571,  0.2950,  2.5058, -0.9542, -1.5927, -0.6992,  0.6839,
          0.3430,  0.0147, -0.1154,  0.9773,  0.3382,  0.9564,  0.8428, -0.4098,
         -0.1894,  0.1119,  1.2102,  0.2259,  0.4113,  0.2235,  0.1894,  0.5987,
          0.0477,  0.6232, -0.1464,  1.2539,  0.1923,  0.4763,  0.9959,  1.0616,
          0.2319,  0.2089, -0.0866,  0.7776,  0.4264,  0.3225,  0.7278,  0.3166,
          0.7267, -0.0069,  0.8172,  0.8233,  0.4022,  0.0258, -0.4811,  0.6985,
          0.3278]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
655000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0948,  0.9565,  0.2951,  2.5063, -0.9555, -1.5927, -0.6989,  0.6824,
          0.3419,  0.0148, -0.1165,  0.9765,  0.3394,  0.9552,  0.8430, -0.4096,
         -0.1891,  0.1129,  1.2111,  0.2262,  0.4099,  0.2219,  0.1894,  0.5995,
          0.0477,  0.6232, -0.1440,  1.2541,  0.1926,  0.4773,  0.9961,  1.0618,
          0.2316,  0.2096, -0.0866,  0.7777,  0.4266,  0.3226,  0.7283,  0.3169,
          0.7273, -0.0072,  0.8179,  0.8233,  0.4023,  0.0253, -0.4803,  0.6979,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
656000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0937,  0.9579,  0.2963,  2.5041, -0.9552, -1.5917, -0.6985,  0.6828,
          0.3427,  0.0155, -0.1160,  0.9770,  0.3390,  0.9554,  0.8428, -0.4105,
         -0.1899,  0.1123,  1.2107,  0.2266,  0.4095,  0.2243,  0.1881,  0.5994,
          0.0478,  0.6233, -0.1453,  1.2532,  0.1917,  0.4771,  0.9961,  1.0611,
          0.2322,  0.2107, -0.0869,  0.7769,  0.4255,  0.3215,  0.7278,  0.3172,
          0.7256, -0.0081,  0.8164,  0.8218,  0.4024,  0.0253, -0.4812,  0.6971,
          0.3271]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
657000 loss tensor(0.0597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0932,  0.9569,  0.2964,  2.5012, -0.9567, -1.5916, -0.6987,  0.6816,
          0.3421,  0.0149, -0.1170,  0.9759,  0.3376,  0.9546,  0.8428, -0.4103,
         -0.1895,  0.1128,  1.2101,  0.2259,  0.4098,  0.2233,  0.1882,  0.5991,
          0.0478,  0.6225, -0.1461,  1.2529,  0.1917,  0.4767,  0.9958,  1.0611,
          0.2325,  0.2108, -0.0876,  0.7765,  0.4265,  0.3219,  0.7285,  0.3172,
          0.7266, -0.0068,  0.8172,  0.8228,  0.4028,  0.0250, -0.4812,  0.6963,
          0.3273]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
658000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0953,  0.9566,  0.2962,  2.5002, -0.9582, -1.5924, -0.6987,  0.6806,
          0.3410,  0.0156, -0.1189,  0.9751,  0.3377,  0.9534,  0.8441, -0.4088,
         -0.1896,  0.1115,  1.2114,  0.2271,  0.4088,  0.2244,  0.1893,  0.5996,
          0.0474,  0.6214, -0.1449,  1.2536,  0.1925,  0.4781,  0.9943,  1.0597,
          0.2314,  0.2103, -0.0879,  0.7773,  0.4255,  0.3229,  0.7278,  0.3153,
          0.7263, -0.0067,  0.8171,  0.8234,  0.4018,  0.0237, -0.4802,  0.6972,
          0.3280]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
659000 loss tensor(0.0573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0971,  0.9564,  0.2966,  2.4987, -0.9580, -1.5922, -0.7000,  0.6800,
          0.3411,  0.0152, -0.1189,  0.9744,  0.3379,  0.9524,  0.8444, -0.4089,
         -0.1885,  0.1110,  1.2103,  0.2276,  0.4078,  0.2230,  0.1883,  0.5986,
          0.0470,  0.6209, -0.1460,  1.2535,  0.1924,  0.4779,  0.9943,  1.0595,
          0.2327,  0.2097, -0.0869,  0.7775,  0.4261,  0.3223,  0.7284,  0.3165,
          0.7262, -0.0072,  0.8173,  0.8228,  0.4018,  0.0231, -0.4800,  0.6969,
          0.3279]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
660000 loss tensor(0.0735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0410, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0983,  0.9562,  0.2969,  2.4978, -0.9608, -1.5914, -0.6991,  0.6787,
          0.3425,  0.0159, -0.1186,  0.9754,  0.3373,  0.9532,  0.8445, -0.4097,
         -0.1896,  0.1112,  1.2100,  0.2282,  0.4087,  0.2236,  0.1874,  0.5992,
          0.0478,  0.6217, -0.1451,  1.2525,  0.1911,  0.4775,  0.9949,  1.0606,
          0.2332,  0.2110, -0.0884,  0.7757,  0.4252,  0.3207,  0.7277,  0.3168,
          0.7248, -0.0073,  0.8162,  0.8214,  0.4034,  0.0243, -0.4800,  0.6955,
          0.3290]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
661000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0978,  0.9552,  0.2969,  2.4952, -0.9605, -1.5920, -0.7000,  0.6786,
          0.3412,  0.0155, -0.1204,  0.9738,  0.3368,  0.9517,  0.8446, -0.4084,
         -0.1889,  0.1106,  1.2107,  0.2277,  0.4078,  0.2235,  0.1885,  0.5988,
          0.0475,  0.6208, -0.1466,  1.2528,  0.1920,  0.4783,  0.9938,  1.0592,
          0.2322,  0.2111, -0.0878,  0.7763,  0.4260,  0.3217,  0.7290,  0.3158,
          0.7258, -0.0066,  0.8174,  0.8228,  0.4024,  0.0227, -0.4803,  0.6958,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
662000 loss tensor(0.0609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0988,  0.9550,  0.2974,  2.4944, -0.9606, -1.5932, -0.6995,  0.6780,
          0.3404,  0.0152, -0.1224,  0.9731,  0.3367,  0.9507,  0.8445, -0.4078,
         -0.1891,  0.1104,  1.2115,  0.2291,  0.4064,  0.2232,  0.1885,  0.5997,
          0.0475,  0.6209, -0.1463,  1.2528,  0.1921,  0.4779,  0.9922,  1.0594,
          0.2322,  0.2108, -0.0876,  0.7768,  0.4257,  0.3220,  0.7291,  0.3153,
          0.7258, -0.0066,  0.8170,  0.8223,  0.4026,  0.0226, -0.4801,  0.6967,
          0.3283]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
663000 loss tensor(0.0673, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0355, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.0988,  0.9540,  0.2971,  2.4915, -0.9616, -1.5924, -0.7003,  0.6771,
          0.3408,  0.0153, -0.1218,  0.9730,  0.3365,  0.9503,  0.8447, -0.4079,
         -0.1887,  0.1104,  1.2106,  0.2278,  0.4071,  0.2237,  0.1876,  0.5994,
          0.0465,  0.6204, -0.1465,  1.2522,  0.1914,  0.4783,  0.9935,  1.0580,
          0.2327,  0.2111, -0.0877,  0.7756,  0.4256,  0.3212,  0.7294,  0.3152,
          0.7251, -0.0065,  0.8171,  0.8220,  0.4025,  0.0221, -0.4800,  0.6960,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
664000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0386, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1001,  0.9547,  0.2984,  2.4902, -0.9626, -1.5932, -0.7001,  0.6766,
          0.3402,  0.0160, -0.1229,  0.9727,  0.3360,  0.9498,  0.8446, -0.4075,
         -0.1890,  0.1093,  1.2111,  0.2284,  0.4058,  0.2234,  0.1878,  0.5994,
          0.0468,  0.6201, -0.1452,  1.2519,  0.1915,  0.4786,  0.9931,  1.0585,
          0.2322,  0.2118, -0.0879,  0.7762,  0.4254,  0.3220,  0.7295,  0.3148,
          0.7250, -0.0069,  0.8173,  0.8223,  0.4028,  0.0218, -0.4802,  0.6962,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
665000 loss tensor(0.0582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1015,  0.9549,  0.2984,  2.4894, -0.9645, -1.5922, -0.6995,  0.6756,
          0.3413,  0.0165, -0.1235,  0.9730,  0.3362,  0.9491,  0.8449, -0.4079,
         -0.1900,  0.1103,  1.2120,  0.2292,  0.4064,  0.2232,  0.1873,  0.6001,
          0.0475,  0.6201, -0.1448,  1.2517,  0.1909,  0.4789,  0.9933,  1.0589,
          0.2334,  0.2122, -0.0888,  0.7749,  0.4242,  0.3207,  0.7287,  0.3154,
          0.7239, -0.0075,  0.8161,  0.8208,  0.4032,  0.0219, -0.4797,  0.6944,
          0.3288]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
666000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0374, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1017,  0.9544,  0.2987,  2.4882, -0.9646, -1.5919, -0.7009,  0.6742,
          0.3398,  0.0151, -0.1239,  0.9717,  0.3364,  0.9481,  0.8449, -0.4077,
         -0.1883,  0.1094,  1.2106,  0.2290,  0.4063,  0.2238,  0.1868,  0.5993,
          0.0467,  0.6193, -0.1459,  1.2514,  0.1910,  0.4783,  0.9920,  1.0582,
          0.2336,  0.2113, -0.0882,  0.7759,  0.4254,  0.3212,  0.7300,  0.3158,
          0.7243, -0.0070,  0.8171,  0.8213,  0.4030,  0.0210, -0.4801,  0.6953,
          0.3291]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
667000 loss tensor(0.0700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1024,  0.9546,  0.3004,  2.4866, -0.9662, -1.5924, -0.7002,  0.6763,
          0.3412,  0.0166, -0.1252,  0.9728,  0.3340,  0.9478,  0.8450, -0.4077,
         -0.1888,  0.1090,  1.2103,  0.2292,  0.4062,  0.2225,  0.1865,  0.6000,
          0.0481,  0.6200, -0.1459,  1.2511,  0.1905,  0.4782,  0.9935,  1.0587,
          0.2328,  0.2124, -0.0875,  0.7740,  0.4247,  0.3201,  0.7292,  0.3146,
          0.7231, -0.0061,  0.8155,  0.8205,  0.4035,  0.0210, -0.4801,  0.6944,
          0.3288]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
668000 loss tensor(0.0592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1032,  0.9541,  0.3015,  2.4862, -0.9669, -1.5917, -0.7000,  0.6750,
          0.3409,  0.0162, -0.1253,  0.9724,  0.3347,  0.9491,  0.8445, -0.4085,
         -0.1890,  0.1080,  1.2103,  0.2296,  0.4057,  0.2215,  0.1857,  0.5999,
          0.0478,  0.6197, -0.1453,  1.2496,  0.1891,  0.4777,  0.9926,  1.0578,
          0.2336,  0.2130, -0.0872,  0.7737,  0.4247,  0.3203,  0.7293,  0.3150,
          0.7228, -0.0069,  0.8153,  0.8205,  0.4049,  0.0220, -0.4809,  0.6949,
          0.3279]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
669000 loss tensor(0.0583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1031,  0.9530,  0.2997,  2.4836, -0.9670, -1.5919, -0.7010,  0.6733,
          0.3395,  0.0156, -0.1269,  0.9705,  0.3336,  0.9472,  0.8453, -0.4071,
         -0.1882,  0.1080,  1.2107,  0.2291,  0.4054,  0.2223,  0.1867,  0.5992,
          0.0465,  0.6187, -0.1453,  1.2503,  0.1903,  0.4789,  0.9919,  1.0569,
          0.2339,  0.2126, -0.0877,  0.7745,  0.4254,  0.3209,  0.7305,  0.3145,
          0.7236, -0.0056,  0.8167,  0.8213,  0.4038,  0.0204, -0.4803,  0.6946,
          0.3283]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
670000 loss tensor(0.0580, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1043,  0.9530,  0.3008,  2.4824, -0.9686, -1.5916, -0.7014,  0.6729,
          0.3392,  0.0155, -0.1273,  0.9702,  0.3342,  0.9467,  0.8455, -0.4066,
         -0.1881,  0.1070,  1.2118,  0.2301,  0.4045,  0.2224,  0.1862,  0.6001,
          0.0472,  0.6179, -0.1444,  1.2501,  0.1901,  0.4791,  0.9914,  1.0566,
          0.2338,  0.2124, -0.0875,  0.7747,  0.4249,  0.3208,  0.7305,  0.3141,
          0.7234, -0.0066,  0.8165,  0.8210,  0.4042,  0.0204, -0.4800,  0.6951,
          0.3283]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
671000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1049,  0.9532,  0.3000,  2.4799, -0.9696, -1.5919, -0.7017,  0.6720,
          0.3396,  0.0156, -0.1282,  0.9696,  0.3337,  0.9455,  0.8455, -0.4071,
         -0.1873,  0.1081,  1.2104,  0.2299,  0.4046,  0.2222,  0.1858,  0.5995,
          0.0466,  0.6180, -0.1452,  1.2499,  0.1899,  0.4789,  0.9926,  1.0567,
          0.2349,  0.2121, -0.0878,  0.7740,  0.4255,  0.3201,  0.7312,  0.3150,
          0.7232, -0.0059,  0.8167,  0.8208,  0.4044,  0.0199, -0.4796,  0.6946,
          0.3290]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
672000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1058,  0.9542,  0.3019,  2.4804, -0.9695, -1.5909, -0.7012,  0.6721,
          0.3402,  0.0161, -0.1279,  0.9707,  0.3339,  0.9458,  0.8445, -0.4079,
         -0.1880,  0.1070,  1.2110,  0.2306,  0.4044,  0.2223,  0.1846,  0.5997,
          0.0484,  0.6184, -0.1447,  1.2485,  0.1887,  0.4782,  0.9923,  1.0568,
          0.2347,  0.2128, -0.0878,  0.7729,  0.4242,  0.3194,  0.7303,  0.3148,
          0.7222, -0.0070,  0.8157,  0.8192,  0.4054,  0.0207, -0.4807,  0.6938,
          0.3278]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
673000 loss tensor(0.0624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1062,  0.9530,  0.3030,  2.4785, -0.9717, -1.5925, -0.7009,  0.6719,
          0.3402,  0.0163, -0.1301,  0.9698,  0.3322,  0.9441,  0.8458, -0.4069,
         -0.1881,  0.1072,  1.2103,  0.2300,  0.4039,  0.2222,  0.1852,  0.6000,
          0.0479,  0.6181, -0.1457,  1.2493,  0.1893,  0.4787,  0.9927,  1.0567,
          0.2339,  0.2134, -0.0876,  0.7725,  0.4241,  0.3193,  0.7307,  0.3132,
          0.7217, -0.0053,  0.8156,  0.8198,  0.4045,  0.0195, -0.4796,  0.6931,
          0.3290]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
674000 loss tensor(0.0646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1065,  0.9536,  0.3028,  2.4760, -0.9739, -1.5918, -0.7005,  0.6711,
          0.3396,  0.0178, -0.1291,  0.9694,  0.3324,  0.9452,  0.8459, -0.4069,
         -0.1885,  0.1073,  1.2107,  0.2305,  0.4036,  0.2223,  0.1844,  0.6002,
          0.0478,  0.6184, -0.1447,  1.2483,  0.1885,  0.4793,  0.9918,  1.0562,
          0.2344,  0.2147, -0.0886,  0.7725,  0.4243,  0.3192,  0.7304,  0.3144,
          0.7216, -0.0065,  0.8155,  0.8195,  0.4058,  0.0203, -0.4797,  0.6926,
          0.3287]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
675000 loss tensor(0.0733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0406, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1071,  0.9523,  0.3035,  2.4748, -0.9721, -1.5906, -0.7024,  0.6710,
          0.3389,  0.0154, -0.1297,  0.9685,  0.3318,  0.9444,  0.8446, -0.4075,
         -0.1871,  0.1058,  1.2098,  0.2296,  0.4040,  0.2217,  0.1838,  0.5997,
          0.0472,  0.6175, -0.1451,  1.2471,  0.1882,  0.4778,  0.9917,  1.0552,
          0.2359,  0.2135, -0.0872,  0.7727,  0.4252,  0.3197,  0.7320,  0.3145,
          0.7220, -0.0058,  0.8161,  0.8203,  0.4061,  0.0197, -0.4810,  0.6937,
          0.3274]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
676000 loss tensor(0.0728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1077,  0.9506,  0.3022,  2.4725, -0.9734, -1.5924, -0.7023,  0.6692,
          0.3384,  0.0158, -0.1328,  0.9675,  0.3316,  0.9426,  0.8458, -0.4057,
         -0.1875,  0.1062,  1.2107,  0.2302,  0.4025,  0.2216,  0.1848,  0.5988,
          0.0461,  0.6166, -0.1452,  1.2482,  0.1891,  0.4790,  0.9912,  1.0546,
          0.2351,  0.2137, -0.0876,  0.7725,  0.4248,  0.3191,  0.7317,  0.3132,
          0.7224, -0.0059,  0.8163,  0.8202,  0.4046,  0.0180, -0.4799,  0.6926,
          0.3286]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
677000 loss tensor(0.0687, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0359, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1098,  0.9523,  0.3041,  2.4729, -0.9757, -1.5907, -0.7020,  0.6695,
          0.3390,  0.0167, -0.1316,  0.9683,  0.3317,  0.9433,  0.8456, -0.4069,
         -0.1878,  0.1055,  1.2098,  0.2323,  0.4036,  0.2215,  0.1834,  0.6008,
          0.0477,  0.6168, -0.1436,  1.2470,  0.1877,  0.4787,  0.9919,  1.0555,
          0.2364,  0.2138, -0.0884,  0.7713,  0.4243,  0.3180,  0.7309,  0.3147,
          0.7209, -0.0067,  0.8150,  0.8190,  0.4065,  0.0192, -0.4805,  0.6937,
          0.3281]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
678000 loss tensor(0.0708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1108,  0.9507,  0.3044,  2.4709, -0.9751, -1.5901, -0.7025,  0.6680,
          0.3379,  0.0154, -0.1320,  0.9668,  0.3310,  0.9428,  0.8449, -0.4068,
         -0.1872,  0.1050,  1.2101,  0.2313,  0.4030,  0.2217,  0.1830,  0.5990,
          0.0461,  0.6161, -0.1443,  1.2464,  0.1878,  0.4783,  0.9909,  1.0539,
          0.2371,  0.2140, -0.0879,  0.7722,  0.4253,  0.3188,  0.7325,  0.3147,
          0.7216, -0.0057,  0.8160,  0.8197,  0.4066,  0.0188, -0.4810,  0.6931,
          0.3274]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
679000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0401, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1087,  0.9505,  0.3049,  2.4674, -0.9767, -1.5910, -0.7028,  0.6677,
          0.3376,  0.0162, -0.1346,  0.9660,  0.3308,  0.9411,  0.8465, -0.4054,
         -0.1873,  0.1051,  1.2106,  0.2311,  0.4015,  0.2212,  0.1838,  0.5995,
          0.0460,  0.6155, -0.1447,  1.2473,  0.1885,  0.4792,  0.9900,  1.0535,
          0.2356,  0.2143, -0.0881,  0.7718,  0.4251,  0.3193,  0.7323,  0.3134,
          0.7217, -0.0053,  0.8162,  0.8199,  0.4054,  0.0174, -0.4800,  0.6929,
          0.3290]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
680000 loss tensor(0.0672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1107,  0.9510,  0.3068,  2.4669, -0.9776, -1.5905, -0.7018,  0.6677,
          0.3382,  0.0166, -0.1341,  0.9671,  0.3304,  0.9415,  0.8455, -0.4063,
         -0.1881,  0.1043,  1.2099,  0.2321,  0.4022,  0.2218,  0.1825,  0.6000,
          0.0475,  0.6166, -0.1443,  1.2459,  0.1871,  0.4786,  0.9912,  1.0546,
          0.2361,  0.2153, -0.0875,  0.7709,  0.4235,  0.3186,  0.7319,  0.3134,
          0.7200, -0.0060,  0.8149,  0.8186,  0.4070,  0.0184, -0.4806,  0.6922,
          0.3281]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
681000 loss tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0398, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1109,  0.9518,  0.3053,  2.4653, -0.9782, -1.5907, -0.7024,  0.6660,
          0.3388,  0.0167, -0.1352,  0.9666,  0.3298,  0.9409,  0.8456, -0.4058,
         -0.1878,  0.1053,  1.2099,  0.2314,  0.4018,  0.2224,  0.1826,  0.5995,
          0.0476,  0.6164, -0.1446,  1.2457,  0.1868,  0.4787,  0.9914,  1.0544,
          0.2365,  0.2155, -0.0890,  0.7704,  0.4241,  0.3176,  0.7320,  0.3132,
          0.7196, -0.0057,  0.8150,  0.8183,  0.4074,  0.0180, -0.4807,  0.6913,
          0.3281]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
682000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0356, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1124,  0.9511,  0.3064,  2.4642, -0.9789, -1.5905, -0.7032,  0.6656,
          0.3384,  0.0168, -0.1357,  0.9663,  0.3305,  0.9403,  0.8457, -0.4064,
         -0.1870,  0.1046,  1.2093,  0.2315,  0.4019,  0.2209,  0.1814,  0.5996,
          0.0473,  0.6152, -0.1446,  1.2453,  0.1866,  0.4787,  0.9904,  1.0539,
          0.2374,  0.2152, -0.0883,  0.7702,  0.4247,  0.3176,  0.7326,  0.3140,
          0.7198, -0.0065,  0.8148,  0.8178,  0.4075,  0.0176, -0.4805,  0.6917,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
683000 loss tensor(0.0630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1131,  0.9503,  0.3067,  2.4633, -0.9804, -1.5901, -0.7030,  0.6650,
          0.3379,  0.0167, -0.1360,  0.9658,  0.3301,  0.9395,  0.8457, -0.4058,
         -0.1869,  0.1039,  1.2104,  0.2325,  0.4010,  0.2214,  0.1814,  0.6006,
          0.0480,  0.6153, -0.1436,  1.2451,  0.1865,  0.4783,  0.9908,  1.0536,
          0.2376,  0.2149, -0.0883,  0.7700,  0.4238,  0.3175,  0.7330,  0.3137,
          0.7192, -0.0073,  0.8148,  0.8177,  0.4075,  0.0171, -0.4804,  0.6917,
          0.3280]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
684000 loss tensor(0.0634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1128,  0.9505,  0.3061,  2.4593, -0.9804, -1.5914, -0.7032,  0.6639,
          0.3370,  0.0161, -0.1378,  0.9643,  0.3288,  0.9382,  0.8459, -0.4047,
         -0.1867,  0.1043,  1.2108,  0.2318,  0.4002,  0.2208,  0.1825,  0.5996,
          0.0462,  0.6147, -0.1449,  1.2452,  0.1874,  0.4798,  0.9888,  1.0520,
          0.2363,  0.2154, -0.0878,  0.7709,  0.4244,  0.3181,  0.7337,  0.3124,
          0.7199, -0.0054,  0.8161,  0.8189,  0.4067,  0.0161, -0.4808,  0.6915,
          0.3278]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
685000 loss tensor(0.0589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1167,  0.9500,  0.3085,  2.4593, -0.9830, -1.5916, -0.7037,  0.6632,
          0.3369,  0.0173, -0.1385,  0.9646,  0.3296,  0.9373,  0.8470, -0.4045,
         -0.1868,  0.1028,  1.2119,  0.2332,  0.3994,  0.2221,  0.1823,  0.6001,
          0.0467,  0.6145, -0.1445,  1.2455,  0.1871,  0.4802,  0.9889,  1.0522,
          0.2365,  0.2151, -0.0890,  0.7705,  0.4234,  0.3179,  0.7325,  0.3122,
          0.7192, -0.0059,  0.8149,  0.8179,  0.4069,  0.0156, -0.4795,  0.6913,
          0.3289]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
686000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1174,  0.9498,  0.3088,  2.4587, -0.9849, -1.5908, -0.7035,  0.6628,
          0.3378,  0.0171, -0.1391,  0.9648,  0.3286,  0.9372,  0.8472, -0.4043,
         -0.1870,  0.1031,  1.2102,  0.2333,  0.4007,  0.2207,  0.1821,  0.5998,
          0.0475,  0.6140, -0.1443,  1.2450,  0.1867,  0.4791,  0.9892,  1.0528,
          0.2370,  0.2151, -0.0893,  0.7695,  0.4232,  0.3170,  0.7327,  0.3117,
          0.7183, -0.0050,  0.8144,  0.8176,  0.4076,  0.0159, -0.4794,  0.6908,
          0.3293]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
687000 loss tensor(0.0602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1178,  0.9491,  0.3089,  2.4578, -0.9850, -1.5901, -0.7035,  0.6623,
          0.3373,  0.0164, -0.1390,  0.9643,  0.3288,  0.9377,  0.8460, -0.4057,
         -0.1864,  0.1028,  1.2104,  0.2335,  0.3997,  0.2212,  0.1806,  0.5998,
          0.0481,  0.6140, -0.1445,  1.2435,  0.1854,  0.4788,  0.9892,  1.0523,
          0.2377,  0.2161, -0.0882,  0.7690,  0.4236,  0.3166,  0.7336,  0.3121,
          0.7185, -0.0059,  0.8149,  0.8170,  0.4088,  0.0166, -0.4807,  0.6909,
          0.3279]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
688000 loss tensor(0.0738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0409, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1168,  0.9496,  0.3094,  2.4540, -0.9852, -1.5907, -0.7038,  0.6615,
          0.3365,  0.0174, -0.1403,  0.9634,  0.3294,  0.9356,  0.8475, -0.4041,
         -0.1866,  0.1027,  1.2113,  0.2342,  0.3986,  0.2207,  0.1813,  0.6001,
          0.0473,  0.6138, -0.1440,  1.2445,  0.1864,  0.4800,  0.9890,  1.0510,
          0.2368,  0.2160, -0.0888,  0.7694,  0.4234,  0.3175,  0.7336,  0.3117,
          0.7185, -0.0061,  0.8147,  0.8170,  0.4072,  0.0145, -0.4794,  0.6909,
          0.3291]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
689000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0350, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1185,  0.9490,  0.3099,  2.4538, -0.9865, -1.5908, -0.7041,  0.6616,
          0.3372,  0.0175, -0.1414,  0.9632,  0.3273,  0.9351,  0.8475, -0.4043,
         -0.1864,  0.1020,  1.2101,  0.2332,  0.3995,  0.2199,  0.1808,  0.6000,
          0.0477,  0.6132, -0.1446,  1.2440,  0.1860,  0.4796,  0.9881,  1.0517,
          0.2375,  0.2160, -0.0880,  0.7684,  0.4235,  0.3167,  0.7336,  0.3116,
          0.7180, -0.0053,  0.8142,  0.8172,  0.4078,  0.0147, -0.4794,  0.6903,
          0.3291]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
690000 loss tensor(0.0624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1191,  0.9477,  0.3095,  2.4518, -0.9872, -1.5901, -0.7044,  0.6594,
          0.3355,  0.0162, -0.1420,  0.9615,  0.3282,  0.9347,  0.8474, -0.4037,
         -0.1856,  0.1021,  1.2107,  0.2339,  0.3977,  0.2210,  0.1813,  0.5995,
          0.0463,  0.6118, -0.1447,  1.2438,  0.1863,  0.4797,  0.9875,  1.0502,
          0.2381,  0.2157, -0.0890,  0.7696,  0.4245,  0.3174,  0.7346,  0.3119,
          0.7189, -0.0049,  0.8158,  0.8181,  0.4078,  0.0141, -0.4797,  0.6906,
          0.3288]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
691000 loss tensor(0.0738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0409, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1208,  0.9482,  0.3113,  2.4511, -0.9892, -1.5887, -0.7042,  0.6586,
          0.3361,  0.0167, -0.1414,  0.9619,  0.3285,  0.9339,  0.8473, -0.4043,
         -0.1861,  0.1019,  1.2107,  0.2341,  0.3990,  0.2206,  0.1800,  0.6001,
          0.0465,  0.6126, -0.1427,  1.2436,  0.1860,  0.4801,  0.9886,  1.0512,
          0.2390,  0.2161, -0.0899,  0.7690,  0.4231,  0.3165,  0.7340,  0.3128,
          0.7179, -0.0060,  0.8146,  0.8165,  0.4082,  0.0141, -0.4794,  0.6900,
          0.3294]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
692000 loss tensor(0.0621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1203,  0.9475,  0.3109,  2.4488, -0.9887, -1.5896, -0.7044,  0.6588,
          0.3352,  0.0162, -0.1437,  0.9612,  0.3269,  0.9339,  0.8471, -0.4037,
         -0.1858,  0.1011,  1.2096,  0.2335,  0.3976,  0.2197,  0.1806,  0.5998,
          0.0465,  0.6118, -0.1441,  1.2427,  0.1856,  0.4796,  0.9877,  1.0498,
          0.2385,  0.2163, -0.0887,  0.7694,  0.4239,  0.3178,  0.7351,  0.3119,
          0.7183, -0.0045,  0.8152,  0.8180,  0.4084,  0.0138, -0.4805,  0.6915,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
693000 loss tensor(0.0605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1220,  0.9478,  0.3115,  2.4483, -0.9913, -1.5888, -0.7049,  0.6578,
          0.3366,  0.0169, -0.1430,  0.9616,  0.3269,  0.9341,  0.8477, -0.4044,
         -0.1858,  0.1007,  1.2098,  0.2345,  0.3988,  0.2194,  0.1793,  0.5992,
          0.0466,  0.6127, -0.1434,  1.2419,  0.1844,  0.4791,  0.9885,  1.0508,
          0.2395,  0.2162, -0.0889,  0.7680,  0.4237,  0.3156,  0.7343,  0.3125,
          0.7172, -0.0054,  0.8146,  0.8168,  0.4097,  0.0144, -0.4798,  0.6899,
          0.3289]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
694000 loss tensor(0.0680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1214,  0.9478,  0.3113,  2.4462, -0.9917, -1.5898, -0.7038,  0.6578,
          0.3362,  0.0163, -0.1443,  0.9610,  0.3258,  0.9339,  0.8469, -0.4043,
         -0.1864,  0.1007,  1.2089,  0.2343,  0.3976,  0.2195,  0.1791,  0.6006,
          0.0475,  0.6128, -0.1452,  1.2412,  0.1840,  0.4795,  0.9879,  1.0497,
          0.2392,  0.2179, -0.0875,  0.7677,  0.4231,  0.3159,  0.7348,  0.3110,
          0.7166, -0.0045,  0.8141,  0.8162,  0.4103,  0.0146, -0.4804,  0.6888,
          0.3288]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
695000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1221,  0.9469,  0.3129,  2.4441, -0.9934, -1.5895, -0.7048,  0.6563,
          0.3360,  0.0172, -0.1444,  0.9610,  0.3256,  0.9325,  0.8478, -0.4039,
         -0.1863,  0.1005,  1.2107,  0.2338,  0.3977,  0.2210,  0.1794,  0.5999,
          0.0476,  0.6121, -0.1438,  1.2417,  0.1843,  0.4798,  0.9882,  1.0495,
          0.2389,  0.2180, -0.0895,  0.7677,  0.4224,  0.3157,  0.7343,  0.3110,
          0.7164, -0.0047,  0.8141,  0.8161,  0.4097,  0.0138, -0.4794,  0.6890,
          0.3293]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
696000 loss tensor(0.0600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1239,  0.9465,  0.3122,  2.4423, -0.9927, -1.5894, -0.7059,  0.6557,
          0.3349,  0.0163, -0.1458,  0.9593,  0.3262,  0.9327,  0.8472, -0.4034,
         -0.1846,  0.0992,  1.2100,  0.2352,  0.3960,  0.2191,  0.1794,  0.6004,
          0.0457,  0.6105, -0.1439,  1.2408,  0.1842,  0.4799,  0.9861,  1.0477,
          0.2399,  0.2164, -0.0882,  0.7688,  0.4240,  0.3170,  0.7359,  0.3115,
          0.7176, -0.0050,  0.8155,  0.8172,  0.4105,  0.0136, -0.4805,  0.6899,
          0.3278]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
697000 loss tensor(0.0666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1241,  0.9471,  0.3148,  2.4412, -0.9935, -1.5898, -0.7048,  0.6557,
          0.3358,  0.0172, -0.1452,  0.9606,  0.3251,  0.9316,  0.8469, -0.4041,
         -0.1859,  0.0996,  1.2107,  0.2348,  0.3972,  0.2190,  0.1783,  0.6007,
          0.0480,  0.6116, -0.1432,  1.2406,  0.1836,  0.4793,  0.9879,  1.0491,
          0.2395,  0.2182, -0.0893,  0.7672,  0.4230,  0.3156,  0.7348,  0.3115,
          0.7157, -0.0045,  0.8133,  0.8157,  0.4104,  0.0132, -0.4805,  0.6891,
          0.3283]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
698000 loss tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1260,  0.9464,  0.3133,  2.4395, -0.9954, -1.5889, -0.7057,  0.6536,
          0.3354,  0.0174, -0.1475,  0.9593,  0.3257,  0.9307,  0.8481, -0.4035,
         -0.1854,  0.0998,  1.2103,  0.2347,  0.3971,  0.2202,  0.1787,  0.5987,
          0.0461,  0.6106, -0.1447,  1.2411,  0.1840,  0.4805,  0.9862,  1.0489,
          0.2405,  0.2175, -0.0901,  0.7670,  0.4230,  0.3156,  0.7352,  0.3116,
          0.7161, -0.0048,  0.8140,  0.8155,  0.4099,  0.0123, -0.4794,  0.6874,
          0.3296]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
699000 loss tensor(0.0661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1264,  0.9471,  0.3145,  2.4391, -0.9967, -1.5888, -0.7059,  0.6541,
          0.3352,  0.0174, -0.1472,  0.9589,  0.3242,  0.9308,  0.8482, -0.4034,
         -0.1853,  0.0984,  1.2093,  0.2345,  0.3962,  0.2193,  0.1780,  0.5996,
          0.0481,  0.6101, -0.1438,  1.2405,  0.1834,  0.4798,  0.9875,  1.0485,
          0.2403,  0.2179, -0.0887,  0.7670,  0.4226,  0.3156,  0.7352,  0.3119,
          0.7158, -0.0046,  0.8134,  0.8151,  0.4109,  0.0126, -0.4791,  0.6883,
          0.3292]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
700000 loss tensor(0.0664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0353, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1269,  0.9458,  0.3149,  2.4363, -0.9975, -1.5885, -0.7058,  0.6531,
          0.3349,  0.0176, -0.1481,  0.9586,  0.3254,  0.9291,  0.8482, -0.4030,
         -0.1855,  0.0998,  1.2110,  0.2363,  0.3961,  0.2196,  0.1780,  0.5999,
          0.0471,  0.6098, -0.1435,  1.2404,  0.1838,  0.4806,  0.9863,  1.0479,
          0.2403,  0.2182, -0.0903,  0.7667,  0.4227,  0.3154,  0.7355,  0.3112,
          0.7154, -0.0054,  0.8140,  0.8152,  0.4102,  0.0115, -0.4793,  0.6883,
          0.3294]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
701000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0376, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1271,  0.9458,  0.3153,  2.4334, -0.9983, -1.5898, -0.7058,  0.6533,
          0.3339,  0.0178, -0.1497,  0.9578,  0.3249,  0.9286,  0.8486, -0.4019,
         -0.1849,  0.0983,  1.2110,  0.2364,  0.3936,  0.2193,  0.1786,  0.6007,
          0.0471,  0.6094, -0.1439,  1.2404,  0.1841,  0.4810,  0.9859,  1.0466,
          0.2395,  0.2180, -0.0890,  0.7673,  0.4228,  0.3165,  0.7361,  0.3100,
          0.7155, -0.0048,  0.8142,  0.8153,  0.4102,  0.0110, -0.4792,  0.6890,
          0.3292]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
702000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0364, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1272,  0.9442,  0.3144,  2.4310, -0.9985, -1.5897, -0.7063,  0.6529,
          0.3340,  0.0162, -0.1510,  0.9564,  0.3234,  0.9279,  0.8481, -0.4026,
         -0.1843,  0.0985,  1.2100,  0.2350,  0.3944,  0.2185,  0.1779,  0.5994,
          0.0464,  0.6091, -0.1445,  1.2398,  0.1840,  0.4803,  0.9858,  1.0465,
          0.2400,  0.2184, -0.0882,  0.7666,  0.4240,  0.3154,  0.7374,  0.3102,
          0.7161, -0.0039,  0.8152,  0.8158,  0.4102,  0.0105, -0.4792,  0.6882,
          0.3292]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
703000 loss tensor(0.0657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0347, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1283,  0.9444,  0.3158,  2.4308, -0.9990, -1.5880, -0.7073,  0.6512,
          0.3335,  0.0161, -0.1507,  0.9565,  0.3240,  0.9284,  0.8475, -0.4032,
         -0.1844,  0.0983,  1.2101,  0.2356,  0.3949,  0.2176,  0.1770,  0.5999,
          0.0459,  0.6087, -0.1425,  1.2386,  0.1829,  0.4802,  0.9855,  1.0459,
          0.2415,  0.2182, -0.0895,  0.7670,  0.4246,  0.3157,  0.7375,  0.3117,
          0.7158, -0.0050,  0.8146,  0.8157,  0.4113,  0.0110, -0.4803,  0.6887,
          0.3280]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
704000 loss tensor(0.0591, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1293,  0.9436,  0.3161,  2.4291, -1.0010, -1.5891, -0.7075,  0.6512,
          0.3331,  0.0163, -0.1515,  0.9558,  0.3232,  0.9272,  0.8486, -0.4026,
         -0.1833,  0.0970,  1.2096,  0.2360,  0.3942,  0.2178,  0.1773,  0.5993,
          0.0456,  0.6076, -0.1435,  1.2391,  0.1833,  0.4802,  0.9849,  1.0455,
          0.2413,  0.2179, -0.0882,  0.7668,  0.4238,  0.3156,  0.7373,  0.3112,
          0.7159, -0.0042,  0.8143,  0.8160,  0.4111,  0.0102, -0.4792,  0.6884,
          0.3291]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
705000 loss tensor(0.0645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1281,  0.9446,  0.3169,  2.4265, -1.0004, -1.5889, -0.7068,  0.6506,
          0.3335,  0.0160, -0.1519,  0.9559,  0.3229,  0.9267,  0.8478, -0.4026,
         -0.1852,  0.0981,  1.2107,  0.2360,  0.3934,  0.2191,  0.1766,  0.6000,
          0.0466,  0.6091, -0.1443,  1.2383,  0.1830,  0.4807,  0.9854,  1.0443,
          0.2413,  0.2202, -0.0891,  0.7670,  0.4232,  0.3161,  0.7380,  0.3103,
          0.7151, -0.0037,  0.8144,  0.8153,  0.4113,  0.0097, -0.4802,  0.6885,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
706000 loss tensor(0.0582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1305,  0.9434,  0.3173,  2.4247, -1.0034, -1.5890, -0.7074,  0.6498,
          0.3332,  0.0165, -0.1536,  0.9552,  0.3220,  0.9261,  0.8492, -0.4020,
         -0.1842,  0.0969,  1.2101,  0.2364,  0.3942,  0.2169,  0.1771,  0.5985,
          0.0458,  0.6081, -0.1430,  1.2385,  0.1828,  0.4806,  0.9853,  1.0450,
          0.2414,  0.2187, -0.0887,  0.7659,  0.4231,  0.3143,  0.7374,  0.3101,
          0.7149, -0.0034,  0.8142,  0.8155,  0.4115,  0.0096, -0.4792,  0.6880,
          0.3295]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
707000 loss tensor(0.0602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1312,  0.9432,  0.3175,  2.4243, -1.0028, -1.5885, -0.7076,  0.6503,
          0.3335,  0.0164, -0.1529,  0.9553,  0.3219,  0.9259,  0.8476, -0.4031,
         -0.1838,  0.0968,  1.2096,  0.2361,  0.3936,  0.2169,  0.1753,  0.5993,
          0.0469,  0.6077, -0.1431,  1.2369,  0.1818,  0.4796,  0.9859,  1.0451,
          0.2423,  0.2194, -0.0886,  0.7657,  0.4239,  0.3145,  0.7382,  0.3112,
          0.7148, -0.0042,  0.8140,  0.8148,  0.4122,  0.0101, -0.4803,  0.6878,
          0.3280]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
708000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0378, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1324,  0.9444,  0.3179,  2.4229, -1.0053, -1.5895, -0.7067,  0.6494,
          0.3341,  0.0176, -0.1550,  0.9559,  0.3214,  0.9244,  0.8489, -0.4018,
         -0.1842,  0.0964,  1.2090,  0.2370,  0.3937,  0.2177,  0.1766,  0.5992,
          0.0473,  0.6074, -0.1436,  1.2379,  0.1821,  0.4805,  0.9857,  1.0460,
          0.2409,  0.2194, -0.0889,  0.7646,  0.4225,  0.3138,  0.7369,  0.3091,
          0.7133, -0.0037,  0.8128,  0.8139,  0.4117,  0.0093, -0.4788,  0.6867,
          0.3296]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
709000 loss tensor(0.0719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0398, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1329,  0.9428,  0.3193,  2.4211, -1.0043, -1.5884, -0.7077,  0.6486,
          0.3329,  0.0164, -0.1544,  0.9545,  0.3207,  0.9250,  0.8478, -0.4029,
         -0.1837,  0.0959,  1.2093,  0.2359,  0.3924,  0.2173,  0.1753,  0.5989,
          0.0467,  0.6071, -0.1429,  1.2365,  0.1814,  0.4797,  0.9844,  1.0444,
          0.2427,  0.2195, -0.0890,  0.7652,  0.4237,  0.3146,  0.7384,  0.3107,
          0.7140, -0.0035,  0.8139,  0.8149,  0.4126,  0.0097, -0.4801,  0.6876,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
710000 loss tensor(0.0545, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0260, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0263, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1352,  0.9428,  0.3198,  2.4207, -1.0066, -1.5894, -0.7075,  0.6480,
          0.3328,  0.0174, -0.1565,  0.9541,  0.3214,  0.9234,  0.8495, -0.4010,
         -0.1840,  0.0949,  1.2107,  0.2385,  0.3918,  0.2179,  0.1766,  0.6002,
          0.0472,  0.6069, -0.1434,  1.2374,  0.1822,  0.4818,  0.9841,  1.0444,
          0.2415,  0.2192, -0.0894,  0.7653,  0.4222,  0.3147,  0.7379,  0.3090,
          0.7136, -0.0038,  0.8135,  0.8142,  0.4122,  0.0087, -0.4787,  0.6877,
          0.3298]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
711000 loss tensor(0.0709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0369, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1354,  0.9440,  0.3189,  2.4191, -1.0075, -1.5890, -0.7069,  0.6471,
          0.3342,  0.0173, -0.1574,  0.9544,  0.3207,  0.9237,  0.8483, -0.4019,
         -0.1848,  0.0961,  1.2102,  0.2377,  0.3917,  0.2177,  0.1753,  0.6008,
          0.0476,  0.6085, -0.1432,  1.2361,  0.1809,  0.4807,  0.9853,  1.0447,
          0.2418,  0.2208, -0.0891,  0.7639,  0.4219,  0.3127,  0.7382,  0.3095,
          0.7124, -0.0034,  0.8132,  0.8135,  0.4133,  0.0093, -0.4799,  0.6869,
          0.3289]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
712000 loss tensor(0.0633, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1350,  0.9421,  0.3206,  2.4163, -1.0088, -1.5893, -0.7082,  0.6465,
          0.3320,  0.0168, -0.1583,  0.9527,  0.3208,  0.9220,  0.8493, -0.4005,
         -0.1836,  0.0950,  1.2089,  0.2377,  0.3912,  0.2175,  0.1762,  0.5999,
          0.0454,  0.6061, -0.1440,  1.2368,  0.1818,  0.4813,  0.9839,  1.0428,
          0.2423,  0.2198, -0.0890,  0.7650,  0.4232,  0.3145,  0.7391,  0.3094,
          0.7134, -0.0034,  0.8138,  0.8145,  0.4122,  0.0076, -0.4790,  0.6875,
          0.3296]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
713000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1353,  0.9425,  0.3203,  2.4152, -1.0085, -1.5875, -0.7085,  0.6449,
          0.3319,  0.0160, -0.1574,  0.9523,  0.3203,  0.9227,  0.8484, -0.4019,
         -0.1830,  0.0952,  1.2098,  0.2383,  0.3916,  0.2164,  0.1746,  0.5992,
          0.0459,  0.6055, -0.1426,  1.2352,  0.1808,  0.4802,  0.9838,  1.0427,
          0.2439,  0.2197, -0.0894,  0.7644,  0.4237,  0.3139,  0.7396,  0.3105,
          0.7132, -0.0037,  0.8138,  0.8140,  0.4135,  0.0083, -0.4800,  0.6869,
          0.3284]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
714000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1368,  0.9421,  0.3210,  2.4136, -1.0095, -1.5894, -0.7080,  0.6452,
          0.3327,  0.0169, -0.1590,  0.9527,  0.3190,  0.9218,  0.8485, -0.4015,
         -0.1840,  0.0951,  1.2094,  0.2371,  0.3913,  0.2171,  0.1748,  0.5991,
          0.0471,  0.6060, -0.1430,  1.2350,  0.1803,  0.4803,  0.9843,  1.0427,
          0.2427,  0.2213, -0.0894,  0.7633,  0.4226,  0.3127,  0.7392,  0.3093,
          0.7123, -0.0032,  0.8132,  0.8138,  0.4136,  0.0077, -0.4803,  0.6853,
          0.3282]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
715000 loss tensor(0.0744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0412, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1384,  0.9420,  0.3211,  2.4132, -1.0120, -1.5888, -0.7087,  0.6439,
          0.3320,  0.0177, -0.1598,  0.9525,  0.3205,  0.9198,  0.8499, -0.4005,
         -0.1835,  0.0943,  1.2098,  0.2388,  0.3915,  0.2169,  0.1751,  0.5992,
          0.0469,  0.6063, -0.1422,  1.2360,  0.1811,  0.4817,  0.9836,  1.0429,
          0.2426,  0.2202, -0.0898,  0.7637,  0.4218,  0.3135,  0.7385,  0.3086,
          0.7121, -0.0040,  0.8128,  0.8129,  0.4129,  0.0068, -0.4788,  0.6858,
          0.3301]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
716000 loss tensor(0.0587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1376,  0.9413,  0.3216,  2.4103, -1.0141, -1.5882, -0.7082,  0.6424,
          0.3322,  0.0178, -0.1604,  0.9523,  0.3202,  0.9196,  0.8499, -0.4010,
         -0.1838,  0.0949,  1.2101,  0.2381,  0.3898,  0.2187,  0.1741,  0.5994,
          0.0472,  0.6055, -0.1441,  1.2354,  0.1807,  0.4816,  0.9836,  1.0432,
          0.2432,  0.2216, -0.0897,  0.7635,  0.4219,  0.3130,  0.7390,  0.3091,
          0.7119, -0.0042,  0.8130,  0.8126,  0.4133,  0.0068, -0.4787,  0.6854,
          0.3302]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
717000 loss tensor(0.0686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0381, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1399,  0.9413,  0.3221,  2.4102, -1.0141, -1.5873, -0.7094,  0.6421,
          0.3324,  0.0175, -0.1603,  0.9512,  0.3191,  0.9200,  0.8492, -0.4015,
         -0.1831,  0.0933,  1.2092,  0.2383,  0.3914,  0.2162,  0.1733,  0.5991,
          0.0467,  0.6045, -0.1426,  1.2345,  0.1797,  0.4803,  0.9841,  1.0423,
          0.2445,  0.2202, -0.0893,  0.7625,  0.4223,  0.3122,  0.7387,  0.3100,
          0.7115, -0.0040,  0.8126,  0.8124,  0.4142,  0.0071, -0.4791,  0.6847,
          0.3292]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
718000 loss tensor(0.0609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1388,  0.9398,  0.3231,  2.4087, -1.0142, -1.5871, -0.7090,  0.6436,
          0.3315,  0.0174, -0.1604,  0.9508,  0.3191,  0.9197,  0.8486, -0.4013,
         -0.1831,  0.0931,  1.2101,  0.2379,  0.3905,  0.2163,  0.1732,  0.5989,
          0.0460,  0.6043, -0.1433,  1.2336,  0.1795,  0.4800,  0.9833,  1.0418,
          0.2447,  0.2217, -0.0889,  0.7631,  0.4228,  0.3128,  0.7397,  0.3097,
          0.7118, -0.0041,  0.8128,  0.8123,  0.4145,  0.0067, -0.4801,  0.6863,
          0.3286]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
719000 loss tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0401, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1404,  0.9396,  0.3220,  2.4066, -1.0163, -1.5883, -0.7100,  0.6406,
          0.3318,  0.0166, -0.1626,  0.9502,  0.3183,  0.9176,  0.8502, -0.4000,
         -0.1824,  0.0936,  1.2100,  0.2392,  0.3902,  0.2162,  0.1737,  0.5999,
          0.0464,  0.6036, -0.1426,  1.2345,  0.1801,  0.4817,  0.9827,  1.0418,
          0.2439,  0.2205, -0.0903,  0.7626,  0.4222,  0.3120,  0.7400,  0.3087,
          0.7115, -0.0035,  0.8131,  0.8126,  0.4138,  0.0058, -0.4783,  0.6848,
          0.3299]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
720000 loss tensor(0.0597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1411,  0.9403,  0.3240,  2.4057, -1.0165, -1.5880, -0.7101,  0.6402,
          0.3309,  0.0176, -0.1633,  0.9496,  0.3190,  0.9170,  0.8502, -0.4001,
         -0.1823,  0.0927,  1.2096,  0.2399,  0.3886,  0.2159,  0.1733,  0.6000,
          0.0460,  0.6035, -0.1421,  1.2341,  0.1801,  0.4821,  0.9820,  1.0403,
          0.2440,  0.2202, -0.0895,  0.7632,  0.4220,  0.3128,  0.7396,  0.3089,
          0.7112, -0.0043,  0.8126,  0.8123,  0.4138,  0.0052, -0.4787,  0.6858,
          0.3300]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
721000 loss tensor(0.0700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1417,  0.9404,  0.3243,  2.4048, -1.0179, -1.5884, -0.7086,  0.6404,
          0.3318,  0.0180, -0.1639,  0.9500,  0.3172,  0.9181,  0.8492, -0.4005,
         -0.1838,  0.0924,  1.2094,  0.2388,  0.3892,  0.2158,  0.1727,  0.6004,
          0.0476,  0.6045, -0.1424,  1.2325,  0.1785,  0.4811,  0.9825,  1.0412,
          0.2439,  0.2224, -0.0894,  0.7620,  0.4214,  0.3118,  0.7397,  0.3081,
          0.7102, -0.0032,  0.8120,  0.8121,  0.4156,  0.0064, -0.4798,  0.6843,
          0.3290]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
722000 loss tensor(0.0665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1425,  0.9399,  0.3246,  2.4034, -1.0193, -1.5870, -0.7108,  0.6399,
          0.3312,  0.0177, -0.1640,  0.9495,  0.3183,  0.9167,  0.8503, -0.4002,
         -0.1822,  0.0918,  1.2100,  0.2397,  0.3890,  0.2158,  0.1724,  0.6002,
          0.0463,  0.6024, -0.1420,  1.2331,  0.1792,  0.4819,  0.9816,  1.0405,
          0.2449,  0.2208, -0.0890,  0.7623,  0.4217,  0.3121,  0.7399,  0.3091,
          0.7105, -0.0047,  0.8125,  0.8113,  0.4149,  0.0053, -0.4785,  0.6847,
          0.3299]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
723000 loss tensor(0.0695, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0386, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1418,  0.9385,  0.3244,  2.4015, -1.0191, -1.5879, -0.7096,  0.6403,
          0.3306,  0.0167, -0.1650,  0.9487,  0.3166,  0.9165,  0.8491, -0.4005,
         -0.1825,  0.0914,  1.2089,  0.2384,  0.3897,  0.2150,  0.1720,  0.5999,
          0.0470,  0.6031, -0.1418,  1.2318,  0.1784,  0.4803,  0.9823,  1.0399,
          0.2450,  0.2220, -0.0886,  0.7619,  0.4223,  0.3119,  0.7408,  0.3088,
          0.7105, -0.0037,  0.8123,  0.8122,  0.4150,  0.0052, -0.4798,  0.6850,
          0.3288]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
724000 loss tensor(0.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1430,  0.9386,  0.3254,  2.3992, -1.0220, -1.5871, -0.7108,  0.6383,
          0.3302,  0.0165, -0.1652,  0.9479,  0.3163,  0.9157,  0.8497, -0.4002,
         -0.1821,  0.0912,  1.2080,  0.2390,  0.3889,  0.2147,  0.1718,  0.5990,
          0.0462,  0.6025, -0.1417,  1.2316,  0.1783,  0.4808,  0.9824,  1.0401,
          0.2459,  0.2216, -0.0891,  0.7624,  0.4227,  0.3121,  0.7414,  0.3088,
          0.7106, -0.0033,  0.8128,  0.8125,  0.4157,  0.0050, -0.4791,  0.6861,
          0.3295]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
725000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0351, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1432,  0.9387,  0.3255,  2.3979, -1.0219, -1.5860, -0.7106,  0.6383,
          0.3296,  0.0168, -0.1658,  0.9475,  0.3168,  0.9153,  0.8494, -0.4001,
         -0.1821,  0.0909,  1.2093,  0.2394,  0.3876,  0.2150,  0.1715,  0.6006,
          0.0459,  0.6011, -0.1416,  1.2311,  0.1782,  0.4816,  0.9810,  1.0385,
          0.2460,  0.2219, -0.0894,  0.7625,  0.4226,  0.3125,  0.7415,  0.3091,
          0.7107, -0.0038,  0.8128,  0.8125,  0.4159,  0.0048, -0.4797,  0.6848,
          0.3286]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
726000 loss tensor(0.0694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1444,  0.9389,  0.3276,  2.3977, -1.0226, -1.5872, -0.7095,  0.6380,
          0.3308,  0.0176, -0.1677,  0.9484,  0.3156,  0.9147,  0.8496, -0.4000,
         -0.1831,  0.0911,  1.2089,  0.2398,  0.3878,  0.2157,  0.1713,  0.6003,
          0.0474,  0.6029, -0.1431,  1.2308,  0.1776,  0.4812,  0.9821,  1.0395,
          0.2452,  0.2232, -0.0891,  0.7608,  0.4210,  0.3113,  0.7406,  0.3078,
          0.7088, -0.0028,  0.8113,  0.8111,  0.4161,  0.0047, -0.4798,  0.6837,
          0.3292]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
727000 loss tensor(0.0598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1455,  0.9371,  0.3263,  2.3952, -1.0237, -1.5873, -0.7120,  0.6365,
          0.3296,  0.0163, -0.1682,  0.9465,  0.3160,  0.9132,  0.8510, -0.3992,
         -0.1810,  0.0904,  1.2085,  0.2396,  0.3871,  0.2142,  0.1718,  0.5996,
          0.0451,  0.6012, -0.1420,  1.2314,  0.1786,  0.4819,  0.9807,  1.0379,
          0.2463,  0.2217, -0.0885,  0.7624,  0.4221,  0.3118,  0.7419,  0.3084,
          0.7101, -0.0030,  0.8132,  0.8120,  0.4153,  0.0033, -0.4784,  0.6843,
          0.3297]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
728000 loss tensor(0.0680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1467,  0.9382,  0.3275,  2.3945, -1.0244, -1.5879, -0.7095,  0.6370,
          0.3306,  0.0178, -0.1687,  0.9475,  0.3148,  0.9130,  0.8493, -0.3996,
         -0.1828,  0.0909,  1.2095,  0.2398,  0.3867,  0.2147,  0.1709,  0.6001,
          0.0475,  0.6020, -0.1426,  1.2303,  0.1775,  0.4814,  0.9816,  1.0385,
          0.2456,  0.2234, -0.0898,  0.7603,  0.4208,  0.3108,  0.7408,  0.3074,
          0.7087, -0.0032,  0.8114,  0.8110,  0.4165,  0.0038, -0.4797,  0.6833,
          0.3291]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
729000 loss tensor(0.0632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1472,  0.9379,  0.3267,  2.3926, -1.0268, -1.5876, -0.7104,  0.6349,
          0.3300,  0.0178, -0.1698,  0.9466,  0.3158,  0.9119,  0.8508, -0.3987,
         -0.1825,  0.0910,  1.2105,  0.2409,  0.3867,  0.2157,  0.1715,  0.6001,
          0.0468,  0.6012, -0.1422,  1.2310,  0.1781,  0.4829,  0.9806,  1.0378,
          0.2460,  0.2232, -0.0901,  0.7608,  0.4205,  0.3104,  0.7410,  0.3078,
          0.7092, -0.0033,  0.8119,  0.8106,  0.4160,  0.0029, -0.4783,  0.6827,
          0.3302]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
730000 loss tensor(0.0592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1470e+00,  9.3627e-01,  3.2782e-01,  2.3897e+00, -1.0267e+00,
         -1.5873e+00, -7.1174e-01,  6.3509e-01,  3.2858e-01,  1.7187e-02,
         -1.7149e-01,  9.4518e-01,  3.1459e-01,  9.1129e-01,  8.5087e-01,
         -3.9819e-01, -1.8169e-01,  8.9568e-02,  1.2088e+00,  2.4015e-01,
          3.8565e-01,  2.1436e-01,  1.7163e-01,  5.9910e-01,  4.5585e-02,
          6.0057e-01, -1.4230e-01,  1.2306e+00,  1.7813e-01,  4.8217e-01,
          9.8040e-01,  1.0370e+00,  2.4561e-01,  2.2272e-01, -8.9191e-02,
          7.6143e-01,  4.2203e-01,  3.1118e-01,  7.4191e-01,  3.0750e-01,
          7.0940e-01, -2.8458e-03,  8.1280e-01,  8.1168e-01,  4.1564e-01,
          2.0737e-03, -4.7856e-01,  6.8390e-01,  3.2994e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
731000 loss tensor(0.0724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1477,  0.9364,  0.3281,  2.3885, -1.0273, -1.5866, -0.7110,  0.6357,
          0.3287,  0.0174, -0.1703,  0.9457,  0.3145,  0.9118,  0.8496, -0.3995,
         -0.1814,  0.0894,  1.2083,  0.2401,  0.3863,  0.2143,  0.1696,  0.5997,
          0.0467,  0.6005, -0.1422,  1.2288,  0.1768,  0.4812,  0.9804,  1.0366,
          0.2467,  0.2235, -0.0887,  0.7603,  0.4218,  0.3109,  0.7424,  0.3081,
          0.7088, -0.0035,  0.8119,  0.8113,  0.4168,  0.0031, -0.4797,  0.6842,
          0.3288]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
732000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1481e+00,  9.3606e-01,  3.2800e-01,  2.3863e+00, -1.0288e+00,
         -1.5880e+00, -7.1182e-01,  6.3343e-01,  3.2923e-01,  1.6962e-02,
         -1.7300e-01,  9.4448e-01,  3.1358e-01,  9.1006e-01,  8.5102e-01,
         -3.9791e-01, -1.8128e-01,  8.9577e-02,  1.2087e+00,  2.4046e-01,
          3.8561e-01,  2.1426e-01,  1.7129e-01,  5.9908e-01,  4.5735e-02,
          5.9996e-01, -1.4273e-01,  1.2300e+00,  1.7764e-01,  4.8221e-01,
          9.7955e-01,  1.0361e+00,  2.4598e-01,  2.2323e-01, -8.8737e-02,
          7.6038e-01,  4.2138e-01,  3.1024e-01,  7.4246e-01,  3.0705e-01,
          7.0886e-01, -1.6791e-03,  8.1245e-01,  8.1144e-01,  4.1639e-01,
          1.7338e-03, -4.7833e-01,  6.8246e-01,  3.2992e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
733000 loss tensor(0.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1502,  0.9360,  0.3286,  2.3863, -1.0291, -1.5868, -0.7113,  0.6336,
          0.3294,  0.0170, -0.1722,  0.9449,  0.3131,  0.9110,  0.8500, -0.3995,
         -0.1815,  0.0895,  1.2082,  0.2401,  0.3862,  0.2141,  0.1697,  0.5992,
          0.0459,  0.5999, -0.1423,  1.2284,  0.1761,  0.4813,  0.9804,  1.0365,
          0.2475,  0.2238, -0.0883,  0.7590,  0.4219,  0.3091,  0.7427,  0.3080,
          0.7081, -0.0027,  0.8117,  0.8105,  0.4179,  0.0030, -0.4791,  0.6822,
          0.3290]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
734000 loss tensor(0.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0400, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1511e+00,  9.3591e-01,  3.3044e-01,  2.3851e+00, -1.0313e+00,
         -1.5873e+00, -7.1184e-01,  6.3166e-01,  3.2813e-01,  1.7021e-02,
         -1.7383e-01,  9.4380e-01,  3.1334e-01,  9.0921e-01,  8.5110e-01,
         -3.9758e-01, -1.8161e-01,  8.8681e-02,  1.2094e+00,  2.4161e-01,
          3.8476e-01,  2.1435e-01,  1.7050e-01,  5.9946e-01,  4.6574e-02,
          5.9972e-01, -1.4226e-01,  1.2291e+00,  1.7705e-01,  4.8273e-01,
          9.7872e-01,  1.0361e+00,  2.4587e-01,  2.2312e-01, -8.9918e-02,
          7.6044e-01,  4.2133e-01,  3.1080e-01,  7.4249e-01,  3.0639e-01,
          7.0809e-01, -2.6996e-03,  8.1212e-01,  8.1109e-01,  4.1696e-01,
          1.6903e-03, -4.7828e-01,  6.8323e-01,  3.3020e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
735000 loss tensor(0.0709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0397, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1506e+00,  9.3546e-01,  3.2980e-01,  2.3824e+00, -1.0318e+00,
         -1.5865e+00, -7.1231e-01,  6.3249e-01,  3.2945e-01,  1.7282e-02,
         -1.7306e-01,  9.4380e-01,  3.1243e-01,  9.0916e-01,  8.4990e-01,
         -3.9905e-01, -1.8095e-01,  8.9187e-02,  1.2075e+00,  2.3999e-01,
          3.8589e-01,  2.1406e-01,  1.6888e-01,  5.9973e-01,  4.6541e-02,
          5.9909e-01, -1.4290e-01,  1.2278e+00,  1.7577e-01,  4.8115e-01,
          9.8044e-01,  1.0361e+00,  2.4784e-01,  2.2395e-01, -8.8796e-02,
          7.5865e-01,  4.2164e-01,  3.0869e-01,  7.4307e-01,  3.0821e-01,
          7.0752e-01, -2.5378e-03,  8.1162e-01,  8.1052e-01,  4.1807e-01,
          2.1288e-03, -4.7914e-01,  6.8197e-01,  3.2903e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
736000 loss tensor(0.0642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1514e+00,  9.3593e-01,  3.3040e-01,  2.3822e+00, -1.0325e+00,
         -1.5869e+00, -7.1173e-01,  6.3148e-01,  3.2939e-01,  1.7395e-02,
         -1.7456e-01,  9.4434e-01,  3.1290e-01,  9.0806e-01,  8.5077e-01,
         -3.9866e-01, -1.8170e-01,  8.9733e-02,  1.2086e+00,  2.4124e-01,
          3.8487e-01,  2.1495e-01,  1.6922e-01,  5.9858e-01,  4.6894e-02,
          5.9910e-01, -1.4272e-01,  1.2281e+00,  1.7621e-01,  4.8192e-01,
          9.8036e-01,  1.0358e+00,  2.4685e-01,  2.2437e-01, -8.9967e-02,
          7.5810e-01,  4.2072e-01,  3.0856e-01,  7.4301e-01,  3.0710e-01,
          7.0704e-01, -3.1483e-03,  8.1134e-01,  8.0974e-01,  4.1755e-01,
          1.2097e-03, -4.7897e-01,  6.8168e-01,  3.2988e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
737000 loss tensor(0.0629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1521e+00,  9.3459e-01,  3.3019e-01,  2.3809e+00, -1.0344e+00,
         -1.5867e+00, -7.1328e-01,  6.2935e-01,  3.2778e-01,  1.6822e-02,
         -1.7570e-01,  9.4235e-01,  3.1252e-01,  9.0737e-01,  8.5177e-01,
         -3.9778e-01, -1.8019e-01,  8.8171e-02,  1.2082e+00,  2.4141e-01,
          3.8454e-01,  2.1363e-01,  1.6990e-01,  6.0046e-01,  4.6596e-02,
          5.9774e-01, -1.4199e-01,  1.2282e+00,  1.7660e-01,  4.8238e-01,
          9.7922e-01,  1.0346e+00,  2.4771e-01,  2.2342e-01, -8.9954e-02,
          7.5961e-01,  4.2129e-01,  3.1014e-01,  7.4341e-01,  3.0693e-01,
          7.0802e-01, -2.0561e-03,  8.1201e-01,  8.1076e-01,  4.1741e-01,
          3.2645e-04, -4.7808e-01,  6.8238e-01,  3.3024e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
738000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1526e+00,  9.3445e-01,  3.3084e-01,  2.3787e+00, -1.0345e+00,
         -1.5867e+00, -7.1282e-01,  6.2954e-01,  3.2747e-01,  1.6462e-02,
         -1.7598e-01,  9.4251e-01,  3.1265e-01,  9.0763e-01,  8.5054e-01,
         -3.9830e-01, -1.8106e-01,  8.8007e-02,  1.2090e+00,  2.4126e-01,
          3.8447e-01,  2.1290e-01,  1.6850e-01,  5.9996e-01,  4.5623e-02,
          5.9760e-01, -1.4071e-01,  1.2268e+00,  1.7570e-01,  4.8213e-01,
          9.7879e-01,  1.0342e+00,  2.4850e-01,  2.2418e-01, -9.0329e-02,
          7.5921e-01,  4.2155e-01,  3.0986e-01,  7.4416e-01,  3.0786e-01,
          7.0776e-01, -3.1293e-03,  8.1220e-01,  8.1054e-01,  4.1813e-01,
          8.9922e-04, -4.7926e-01,  6.8276e-01,  3.2909e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
739000 loss tensor(0.0641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0313, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1546e+00,  9.3389e-01,  3.3099e-01,  2.3778e+00, -1.0361e+00,
         -1.5865e+00, -7.1390e-01,  6.2818e-01,  3.2771e-01,  1.6301e-02,
         -1.7686e-01,  9.4152e-01,  3.1198e-01,  9.0594e-01,  8.5181e-01,
         -3.9744e-01, -1.8001e-01,  8.7807e-02,  1.2087e+00,  2.4129e-01,
          3.8414e-01,  2.1225e-01,  1.6924e-01,  5.9903e-01,  4.5753e-02,
          5.9744e-01, -1.4062e-01,  1.2276e+00,  1.7627e-01,  4.8235e-01,
          9.7908e-01,  1.0345e+00,  2.4878e-01,  2.2354e-01, -8.9585e-02,
          7.5928e-01,  4.2178e-01,  3.0890e-01,  7.4409e-01,  3.0723e-01,
          7.0755e-01, -2.5858e-03,  8.1233e-01,  8.1027e-01,  4.1788e-01,
          4.1892e-05, -4.7786e-01,  6.8205e-01,  3.3013e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
740000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1554e+00,  9.3466e-01,  3.3325e-01,  2.3775e+00, -1.0379e+00,
         -1.5859e+00, -7.1412e-01,  6.2877e-01,  3.2827e-01,  1.7396e-02,
         -1.7714e-01,  9.4249e-01,  3.1193e-01,  9.0651e-01,  8.5209e-01,
         -3.9794e-01, -1.8033e-01,  8.6157e-02,  1.2079e+00,  2.4212e-01,
          3.8418e-01,  2.1267e-01,  1.6832e-01,  6.0008e-01,  4.7150e-02,
          5.9824e-01, -1.4072e-01,  1.2268e+00,  1.7492e-01,  4.8176e-01,
          9.7943e-01,  1.0340e+00,  2.4835e-01,  2.2371e-01, -8.9513e-02,
          7.5864e-01,  4.2050e-01,  3.0892e-01,  7.4339e-01,  3.0643e-01,
          7.0642e-01, -2.3946e-03,  8.1087e-01,  8.0936e-01,  4.1887e-01,
          7.1142e-04, -4.7787e-01,  6.8209e-01,  3.3017e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
741000 loss tensor(0.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1541e+00,  9.3342e-01,  3.3212e-01,  2.3733e+00, -1.0374e+00,
         -1.5859e+00, -7.1367e-01,  6.2787e-01,  3.2779e-01,  1.6602e-02,
         -1.7709e-01,  9.4160e-01,  3.1044e-01,  9.0558e-01,  8.5054e-01,
         -3.9813e-01, -1.8064e-01,  8.7413e-02,  1.2074e+00,  2.4058e-01,
          3.8420e-01,  2.1217e-01,  1.6764e-01,  5.9870e-01,  4.6238e-02,
          5.9733e-01, -1.4061e-01,  1.2257e+00,  1.7488e-01,  4.8173e-01,
          9.7881e-01,  1.0340e+00,  2.4879e-01,  2.2458e-01, -8.9570e-02,
          7.5785e-01,  4.2169e-01,  3.0849e-01,  7.4443e-01,  3.0747e-01,
          7.0680e-01, -1.8689e-03,  8.1161e-01,  8.1023e-01,  4.1855e-01,
         -3.1326e-05, -4.7890e-01,  6.8154e-01,  3.2918e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
742000 loss tensor(0.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0388, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1559e+00,  9.3358e-01,  3.3240e-01,  2.3732e+00, -1.0384e+00,
         -1.5865e+00, -7.1265e-01,  6.2797e-01,  3.2856e-01,  1.7165e-02,
         -1.7891e-01,  9.4173e-01,  3.1049e-01,  9.0554e-01,  8.5083e-01,
         -3.9764e-01, -1.8144e-01,  8.6914e-02,  1.2078e+00,  2.4192e-01,
          3.8330e-01,  2.1254e-01,  1.6791e-01,  6.0012e-01,  4.6998e-02,
          5.9760e-01, -1.4147e-01,  1.2254e+00,  1.7443e-01,  4.8198e-01,
          9.7920e-01,  1.0326e+00,  2.4861e-01,  2.2564e-01, -8.9250e-02,
          7.5697e-01,  4.2044e-01,  3.0788e-01,  7.4405e-01,  3.0624e-01,
          7.0568e-01, -2.0102e-03,  8.1088e-01,  8.0902e-01,  4.1936e-01,
          5.2558e-05, -4.7922e-01,  6.8099e-01,  3.2910e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
743000 loss tensor(0.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1560e+00,  9.3231e-01,  3.3258e-01,  2.3705e+00, -1.0399e+00,
         -1.5862e+00, -7.1425e-01,  6.2595e-01,  3.2732e-01,  1.6230e-02,
         -1.8014e-01,  9.4002e-01,  3.1054e-01,  9.0401e-01,  8.5196e-01,
         -3.9703e-01, -1.7926e-01,  8.6768e-02,  1.2085e+00,  2.4185e-01,
          3.8293e-01,  2.1288e-01,  1.6842e-01,  5.9928e-01,  4.5855e-02,
          5.9629e-01, -1.4154e-01,  1.2261e+00,  1.7536e-01,  4.8290e-01,
          9.7781e-01,  1.0321e+00,  2.4878e-01,  2.2458e-01, -9.0028e-02,
          7.5802e-01,  4.2114e-01,  3.0874e-01,  7.4459e-01,  3.0597e-01,
          7.0661e-01, -1.1495e-03,  8.1203e-01,  8.0984e-01,  4.1838e-01,
         -1.4160e-03, -4.7818e-01,  6.8163e-01,  3.3016e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
744000 loss tensor(0.0718, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1587e+00,  9.3322e-01,  3.3384e-01,  2.3708e+00, -1.0420e+00,
         -1.5868e+00, -7.1315e-01,  6.2522e-01,  3.2756e-01,  1.7183e-02,
         -1.8194e-01,  9.4050e-01,  3.1063e-01,  9.0349e-01,  8.5237e-01,
         -3.9652e-01, -1.8130e-01,  8.6498e-02,  1.2091e+00,  2.4303e-01,
          3.8212e-01,  2.1293e-01,  1.6822e-01,  5.9976e-01,  4.6254e-02,
          5.9661e-01, -1.4177e-01,  1.2256e+00,  1.7470e-01,  4.8316e-01,
          9.7710e-01,  1.0326e+00,  2.4887e-01,  2.2564e-01, -8.9831e-02,
          7.5751e-01,  4.1988e-01,  3.0823e-01,  7.4372e-01,  3.0620e-01,
          7.0557e-01, -2.5197e-03,  8.1109e-01,  8.0883e-01,  4.1909e-01,
         -1.1195e-03, -4.7801e-01,  6.8097e-01,  3.3077e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
745000 loss tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0403, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1569e+00,  9.3236e-01,  3.3394e-01,  2.3687e+00, -1.0415e+00,
         -1.5864e+00, -7.1314e-01,  6.2498e-01,  3.2688e-01,  1.6494e-02,
         -1.8168e-01,  9.3951e-01,  3.0950e-01,  9.0276e-01,  8.5092e-01,
         -3.9683e-01, -1.8084e-01,  8.7257e-02,  1.2092e+00,  2.4180e-01,
          3.8150e-01,  2.1238e-01,  1.6766e-01,  5.9978e-01,  4.6527e-02,
          5.9687e-01, -1.4124e-01,  1.2249e+00,  1.7476e-01,  4.8316e-01,
          9.7762e-01,  1.0321e+00,  2.4882e-01,  2.2645e-01, -8.9496e-02,
          7.5769e-01,  4.2081e-01,  3.0836e-01,  7.4568e-01,  3.0586e-01,
          7.0558e-01, -1.3706e-03,  8.1219e-01,  8.0970e-01,  4.1917e-01,
         -1.5068e-03, -4.7895e-01,  6.8134e-01,  3.2934e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
746000 loss tensor(0.0678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0382, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1582e+00,  9.3124e-01,  3.3530e-01,  2.3662e+00, -1.0425e+00,
         -1.5873e+00, -7.1434e-01,  6.2512e-01,  3.2637e-01,  1.6907e-02,
         -1.8214e-01,  9.3906e-01,  3.0911e-01,  9.0210e-01,  8.5238e-01,
         -3.9572e-01, -1.8032e-01,  8.5394e-02,  1.2082e+00,  2.4212e-01,
          3.8189e-01,  2.1157e-01,  1.6780e-01,  5.9927e-01,  4.5986e-02,
          5.9582e-01, -1.4169e-01,  1.2252e+00,  1.7490e-01,  4.8322e-01,
          9.7693e-01,  1.0310e+00,  2.4878e-01,  2.2539e-01, -8.9069e-02,
          7.5806e-01,  4.2112e-01,  3.0862e-01,  7.4537e-01,  3.0563e-01,
          7.0581e-01, -8.8363e-04,  8.1138e-01,  8.0961e-01,  4.1861e-01,
         -2.6218e-03, -4.7798e-01,  6.8106e-01,  3.3045e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
747000 loss tensor(0.0697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0386, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1598e+00,  9.3222e-01,  3.3597e-01,  2.3681e+00, -1.0443e+00,
         -1.5865e+00, -7.1375e-01,  6.2532e-01,  3.2705e-01,  1.7370e-02,
         -1.8251e-01,  9.4021e-01,  3.0901e-01,  9.0288e-01,  8.5146e-01,
         -3.9734e-01, -1.8008e-01,  8.5124e-02,  1.2082e+00,  2.4310e-01,
          3.8219e-01,  2.1091e-01,  1.6638e-01,  6.0047e-01,  4.7164e-02,
          5.9638e-01, -1.4080e-01,  1.2238e+00,  1.7320e-01,  4.8265e-01,
          9.7838e-01,  1.0319e+00,  2.4950e-01,  2.2583e-01, -8.9389e-02,
          7.5609e-01,  4.2020e-01,  3.0749e-01,  7.4464e-01,  3.0648e-01,
          7.0445e-01, -2.2342e-03,  8.0996e-01,  8.0826e-01,  4.2060e-01,
         -1.0680e-03, -4.7872e-01,  6.8069e-01,  3.2965e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
748000 loss tensor(0.0593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1586e+00,  9.3076e-01,  3.3568e-01,  2.3646e+00, -1.0442e+00,
         -1.5860e+00, -7.1496e-01,  6.2378e-01,  3.2681e-01,  1.6373e-02,
         -1.8341e-01,  9.3856e-01,  3.0835e-01,  9.0162e-01,  8.5139e-01,
         -3.9718e-01, -1.7925e-01,  8.5622e-02,  1.2071e+00,  2.4159e-01,
          3.8241e-01,  2.1113e-01,  1.6647e-01,  5.9890e-01,  4.6836e-02,
          5.9460e-01, -1.4046e-01,  1.2236e+00,  1.7361e-01,  4.8207e-01,
          9.7834e-01,  1.0315e+00,  2.5030e-01,  2.2568e-01, -8.9272e-02,
          7.5646e-01,  4.2111e-01,  3.0791e-01,  7.4580e-01,  3.0679e-01,
          7.0515e-01, -1.5498e-03,  8.1126e-01,  8.0930e-01,  4.1985e-01,
         -2.0178e-03, -4.7879e-01,  6.8047e-01,  3.2947e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
749000 loss tensor(0.0657, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0339, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1600e+00,  9.3097e-01,  3.3561e-01,  2.3640e+00, -1.0457e+00,
         -1.5868e+00, -7.1507e-01,  6.2511e-01,  3.2639e-01,  1.6437e-02,
         -1.8441e-01,  9.3830e-01,  3.0737e-01,  9.0185e-01,  8.5162e-01,
         -3.9675e-01, -1.7900e-01,  8.4630e-02,  1.2069e+00,  2.4218e-01,
          3.8067e-01,  2.1116e-01,  1.6641e-01,  5.9949e-01,  4.6854e-02,
          5.9458e-01, -1.4114e-01,  1.2230e+00,  1.7308e-01,  4.8213e-01,
          9.7736e-01,  1.0304e+00,  2.4940e-01,  2.2579e-01, -8.8278e-02,
          7.5628e-01,  4.2116e-01,  3.0760e-01,  7.4605e-01,  3.0570e-01,
          7.0500e-01, -7.1974e-04,  8.1108e-01,  8.0919e-01,  4.2056e-01,
         -1.8004e-03, -4.7879e-01,  6.8027e-01,  3.2911e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
750000 loss tensor(0.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1609e+00,  9.3203e-01,  3.3728e-01,  2.3629e+00, -1.0464e+00,
         -1.5858e+00, -7.1429e-01,  6.2306e-01,  3.2696e-01,  1.7482e-02,
         -1.8445e-01,  9.3868e-01,  3.0747e-01,  9.0091e-01,  8.5178e-01,
         -3.9698e-01, -1.8015e-01,  8.4068e-02,  1.2075e+00,  2.4310e-01,
          3.8084e-01,  2.1054e-01,  1.6580e-01,  6.0004e-01,  4.7517e-02,
          5.9543e-01, -1.3979e-01,  1.2228e+00,  1.7274e-01,  4.8253e-01,
          9.7759e-01,  1.0311e+00,  2.5002e-01,  2.2638e-01, -8.9362e-02,
          7.5575e-01,  4.1991e-01,  3.0678e-01,  7.4510e-01,  3.0617e-01,
          7.0375e-01, -1.4412e-03,  8.1001e-01,  8.0800e-01,  4.2082e-01,
         -2.2558e-03, -4.7890e-01,  6.7943e-01,  3.2961e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
751000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0382, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1615,  0.9309,  0.3368,  2.3616, -1.0482, -1.5849, -0.7158,  0.6223,
          0.3257,  0.0169, -0.1857,  0.9375,  0.3086,  0.8993,  0.8530, -0.3958,
         -0.1789,  0.0836,  1.2079,  0.2439,  0.3802,  0.2110,  0.1662,  0.6003,
          0.0465,  0.5936, -0.1397,  1.2237,  0.1736,  0.4837,  0.9770,  1.0301,
          0.2501,  0.2250, -0.0895,  0.7567,  0.4199,  0.3078,  0.7454,  0.3054,
          0.7043, -0.0025,  0.8104,  0.8083,  0.4197, -0.0035, -0.4776,  0.6808,
          0.3304]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
752000 loss tensor(0.0641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1630e+00,  9.3066e-01,  3.3822e-01,  2.3604e+00, -1.0495e+00,
         -1.5857e+00, -7.1480e-01,  6.2038e-01,  3.2640e-01,  1.7648e-02,
         -1.8629e-01,  9.3777e-01,  3.0792e-01,  8.9872e-01,  8.5286e-01,
         -3.9591e-01, -1.8024e-01,  8.4326e-02,  1.2078e+00,  2.4408e-01,
          3.8041e-01,  2.1106e-01,  1.6635e-01,  6.0021e-01,  4.6646e-02,
          5.9461e-01, -1.3978e-01,  1.2233e+00,  1.7306e-01,  4.8314e-01,
          9.7761e-01,  1.0307e+00,  2.5047e-01,  2.2635e-01, -9.1171e-02,
          7.5600e-01,  4.1901e-01,  3.0658e-01,  7.4504e-01,  3.0576e-01,
          7.0348e-01, -1.8522e-03,  8.1006e-01,  8.0790e-01,  4.2056e-01,
         -3.4366e-03, -4.7748e-01,  6.7952e-01,  3.3034e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
753000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1644,  0.9303,  0.3383,  2.3591, -1.0496, -1.5853, -0.7151,  0.6216,
          0.3262,  0.0170, -0.1856,  0.9375,  0.3074,  0.8987,  0.8518, -0.3967,
         -0.1793,  0.0844,  1.2084,  0.2432,  0.3804,  0.2112,  0.1646,  0.6003,
          0.0480,  0.5943, -0.1400,  1.2218,  0.1722,  0.4827,  0.9776,  1.0302,
          0.2505,  0.2271, -0.0896,  0.7551,  0.4199,  0.3065,  0.7459,  0.3057,
          0.7032, -0.0025,  0.8099,  0.8073,  0.4212, -0.0033, -0.4788,  0.6798,
          0.3295]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
754000 loss tensor(0.0603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1629e+00,  9.2980e-01,  3.3866e-01,  2.3556e+00, -1.0498e+00,
         -1.5849e+00, -7.1598e-01,  6.2037e-01,  3.2529e-01,  1.6699e-02,
         -1.8699e-01,  9.3635e-01,  3.0585e-01,  8.9813e-01,  8.5171e-01,
         -3.9675e-01, -1.7910e-01,  8.3162e-02,  1.2064e+00,  2.4254e-01,
          3.7991e-01,  2.1078e-01,  1.6466e-01,  5.9895e-01,  4.7035e-02,
          5.9368e-01, -1.4073e-01,  1.2213e+00,  1.7227e-01,  4.8228e-01,
          9.7709e-01,  1.0288e+00,  2.5148e-01,  2.2689e-01, -8.9369e-02,
          7.5562e-01,  4.2050e-01,  3.0685e-01,  7.4689e-01,  3.0609e-01,
          7.0378e-01, -7.4734e-04,  8.1045e-01,  8.0844e-01,  4.2132e-01,
         -3.6883e-03, -4.7870e-01,  6.7942e-01,  3.2930e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
755000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0403, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1642e+00,  9.2939e-01,  3.3821e-01,  2.3562e+00, -1.0516e+00,
         -1.5861e+00, -7.1479e-01,  6.1950e-01,  3.2570e-01,  1.7544e-02,
         -1.8857e-01,  9.3665e-01,  3.0600e-01,  8.9782e-01,  8.5240e-01,
         -3.9588e-01, -1.7993e-01,  8.4446e-02,  1.2076e+00,  2.4392e-01,
          3.7974e-01,  2.1182e-01,  1.6506e-01,  5.9938e-01,  4.7509e-02,
          5.9466e-01, -1.4074e-01,  1.2212e+00,  1.7192e-01,  4.8288e-01,
          9.7659e-01,  1.0291e+00,  2.5009e-01,  2.2781e-01, -9.0250e-02,
          7.5431e-01,  4.1881e-01,  3.0596e-01,  7.4650e-01,  3.0466e-01,
          7.0255e-01, -1.4057e-03,  8.0984e-01,  8.0748e-01,  4.2148e-01,
         -3.7786e-03, -4.7866e-01,  6.7891e-01,  3.2976e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
756000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1662e+00,  9.2901e-01,  3.3897e-01,  2.3542e+00, -1.0524e+00,
         -1.5856e+00, -7.1631e-01,  6.1950e-01,  3.2572e-01,  1.7206e-02,
         -1.8881e-01,  9.3635e-01,  3.0621e-01,  8.9723e-01,  8.5204e-01,
         -3.9647e-01, -1.7899e-01,  8.2757e-02,  1.2070e+00,  2.4338e-01,
          3.7962e-01,  2.1052e-01,  1.6415e-01,  5.9946e-01,  4.6910e-02,
          5.9351e-01, -1.4033e-01,  1.2205e+00,  1.7129e-01,  4.8290e-01,
          9.7666e-01,  1.0289e+00,  2.5155e-01,  2.2750e-01, -8.9620e-02,
          7.5430e-01,  4.1966e-01,  3.0560e-01,  7.4718e-01,  3.0568e-01,
          7.0264e-01, -1.5076e-03,  8.0996e-01,  8.0721e-01,  4.2240e-01,
         -3.6716e-03, -4.7852e-01,  6.7881e-01,  3.2942e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
757000 loss tensor(0.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1654e+00,  9.2822e-01,  3.4061e-01,  2.3527e+00, -1.0544e+00,
         -1.5857e+00, -7.1556e-01,  6.1857e-01,  3.2501e-01,  1.6628e-02,
         -1.8944e-01,  9.3518e-01,  3.0661e-01,  8.9663e-01,  8.5250e-01,
         -3.9562e-01, -1.7908e-01,  8.3730e-02,  1.2082e+00,  2.4519e-01,
          3.7883e-01,  2.1058e-01,  1.6427e-01,  6.0025e-01,  4.6981e-02,
          5.9287e-01, -1.3915e-01,  1.2207e+00,  1.7178e-01,  4.8407e-01,
          9.7567e-01,  1.0279e+00,  2.5064e-01,  2.2712e-01, -9.0051e-02,
          7.5517e-01,  4.1929e-01,  3.0639e-01,  7.4714e-01,  3.0544e-01,
          7.0276e-01, -2.1807e-03,  8.1038e-01,  8.0714e-01,  4.2168e-01,
         -4.4344e-03, -4.7838e-01,  6.7949e-01,  3.2988e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
758000 loss tensor(0.0650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1662e+00,  9.2744e-01,  3.3913e-01,  2.3505e+00, -1.0539e+00,
         -1.5864e+00, -7.1515e-01,  6.1758e-01,  3.2507e-01,  1.6292e-02,
         -1.9187e-01,  9.3449e-01,  3.0459e-01,  8.9620e-01,  8.5222e-01,
         -3.9562e-01, -1.7876e-01,  8.3654e-02,  1.2071e+00,  2.4330e-01,
          3.7898e-01,  2.0987e-01,  1.6453e-01,  5.9886e-01,  4.6417e-02,
          5.9412e-01, -1.4110e-01,  1.2200e+00,  1.7145e-01,  4.8276e-01,
          9.7545e-01,  1.0271e+00,  2.5136e-01,  2.2816e-01, -8.9858e-02,
          7.5431e-01,  4.2027e-01,  3.0549e-01,  7.4778e-01,  3.0494e-01,
          7.0269e-01,  2.7051e-04,  8.1077e-01,  8.0792e-01,  4.2210e-01,
         -4.8007e-03, -4.7893e-01,  6.7951e-01,  3.2962e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
759000 loss tensor(0.0627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1671e+00,  9.2846e-01,  3.4126e-01,  2.3492e+00, -1.0567e+00,
         -1.5859e+00, -7.1664e-01,  6.1679e-01,  3.2431e-01,  1.7005e-02,
         -1.9251e-01,  9.3431e-01,  3.0513e-01,  8.9383e-01,  8.5329e-01,
         -3.9429e-01, -1.7898e-01,  8.1969e-02,  1.2064e+00,  2.4419e-01,
          3.7797e-01,  2.0997e-01,  1.6483e-01,  5.9892e-01,  4.6741e-02,
          5.9238e-01, -1.3997e-01,  1.2209e+00,  1.7222e-01,  4.8420e-01,
          9.7413e-01,  1.0275e+00,  2.5081e-01,  2.2753e-01, -8.9848e-02,
          7.5475e-01,  4.1930e-01,  3.0653e-01,  7.4714e-01,  3.0405e-01,
          7.0279e-01, -9.2595e-04,  8.1010e-01,  8.0772e-01,  4.2112e-01,
         -6.1137e-03, -4.7740e-01,  6.7961e-01,  3.3083e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
760000 loss tensor(0.0659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0342, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1673e+00,  9.2741e-01,  3.4097e-01,  2.3475e+00, -1.0567e+00,
         -1.5844e+00, -7.1760e-01,  6.1685e-01,  3.2388e-01,  1.6162e-02,
         -1.9194e-01,  9.3344e-01,  3.0591e-01,  8.9481e-01,  8.5281e-01,
         -3.9476e-01, -1.7798e-01,  8.1859e-02,  1.2072e+00,  2.4435e-01,
          3.7772e-01,  2.0981e-01,  1.6423e-01,  5.9951e-01,  4.6081e-02,
          5.9138e-01, -1.3960e-01,  1.2196e+00,  1.7150e-01,  4.8336e-01,
          9.7381e-01,  1.0262e+00,  2.5210e-01,  2.2697e-01, -8.9560e-02,
          7.5506e-01,  4.2016e-01,  3.0626e-01,  7.4823e-01,  3.0465e-01,
          7.0281e-01, -1.3670e-03,  8.1034e-01,  8.0761e-01,  4.2205e-01,
         -5.6374e-03, -4.7840e-01,  6.7964e-01,  3.2953e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
761000 loss tensor(0.0631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1684e+00,  9.2734e-01,  3.4155e-01,  2.3474e+00, -1.0586e+00,
         -1.5844e+00, -7.1565e-01,  6.1694e-01,  3.2421e-01,  1.7462e-02,
         -1.9214e-01,  9.3408e-01,  3.0493e-01,  8.9439e-01,  8.5249e-01,
         -3.9534e-01, -1.7907e-01,  8.1606e-02,  1.2069e+00,  2.4470e-01,
          3.7834e-01,  2.0881e-01,  1.6311e-01,  5.9936e-01,  4.6831e-02,
          5.9191e-01, -1.3916e-01,  1.2191e+00,  1.7052e-01,  4.8353e-01,
          9.7473e-01,  1.0273e+00,  2.5179e-01,  2.2840e-01, -8.9249e-02,
          7.5338e-01,  4.1927e-01,  3.0523e-01,  7.4721e-01,  3.0489e-01,
          7.0155e-01, -2.2665e-03,  8.0909e-01,  8.0616e-01,  4.2264e-01,
         -5.4329e-03, -4.7827e-01,  6.7858e-01,  3.2983e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
762000 loss tensor(0.0702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1698e+00,  9.2682e-01,  3.4192e-01,  2.3453e+00, -1.0594e+00,
         -1.5854e+00, -7.1725e-01,  6.1497e-01,  3.2397e-01,  1.7673e-02,
         -1.9379e-01,  9.3334e-01,  3.0455e-01,  8.9252e-01,  8.5392e-01,
         -3.9383e-01, -1.7856e-01,  8.1249e-02,  1.2072e+00,  2.4458e-01,
          3.7739e-01,  2.0996e-01,  1.6426e-01,  5.9928e-01,  4.6730e-02,
          5.9122e-01, -1.3989e-01,  1.2200e+00,  1.7161e-01,  4.8437e-01,
          9.7388e-01,  1.0258e+00,  2.5137e-01,  2.2763e-01, -9.0460e-02,
          7.5399e-01,  4.1887e-01,  3.0579e-01,  7.4737e-01,  3.0363e-01,
          7.0185e-01, -6.6956e-04,  8.0960e-01,  8.0700e-01,  4.2131e-01,
         -7.0510e-03, -4.7735e-01,  6.7890e-01,  3.3086e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
763000 loss tensor(0.0730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0405, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1709e+00,  9.2743e-01,  3.4260e-01,  2.3450e+00, -1.0612e+00,
         -1.5846e+00, -7.1810e-01,  6.1557e-01,  3.2445e-01,  1.7374e-02,
         -1.9405e-01,  9.3383e-01,  3.0429e-01,  8.9311e-01,  8.5391e-01,
         -3.9458e-01, -1.7812e-01,  8.0057e-02,  1.2067e+00,  2.4554e-01,
          3.7724e-01,  2.0951e-01,  1.6308e-01,  5.9954e-01,  4.7154e-02,
          5.9070e-01, -1.4004e-01,  1.2190e+00,  1.7030e-01,  4.8326e-01,
          9.7510e-01,  1.0264e+00,  2.5237e-01,  2.2767e-01, -8.9582e-02,
          7.5324e-01,  4.1876e-01,  3.0473e-01,  7.4760e-01,  3.0441e-01,
          7.0115e-01, -1.0069e-03,  8.0883e-01,  8.0618e-01,  4.2326e-01,
         -6.2554e-03, -4.7735e-01,  6.7829e-01,  3.3083e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
764000 loss tensor(0.0631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1706e+00,  9.2525e-01,  3.4214e-01,  2.3429e+00, -1.0610e+00,
         -1.5852e+00, -7.1793e-01,  6.1451e-01,  3.2350e-01,  1.6378e-02,
         -1.9542e-01,  9.3171e-01,  3.0400e-01,  8.9118e-01,  8.5391e-01,
         -3.9377e-01, -1.7766e-01,  8.0518e-02,  1.2067e+00,  2.4572e-01,
          3.7729e-01,  2.0796e-01,  1.6341e-01,  5.9862e-01,  4.6654e-02,
          5.9050e-01, -1.3950e-01,  1.2193e+00,  1.7114e-01,  4.8370e-01,
          9.7437e-01,  1.0258e+00,  2.5198e-01,  2.2792e-01, -8.8824e-02,
          7.5382e-01,  4.1964e-01,  3.0501e-01,  7.4868e-01,  3.0375e-01,
          7.0200e-01, -6.0386e-04,  8.1016e-01,  8.0660e-01,  4.2247e-01,
         -7.7308e-03, -4.7698e-01,  6.7836e-01,  3.3056e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
765000 loss tensor(0.0700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1700e+00,  9.2528e-01,  3.4299e-01,  2.3410e+00, -1.0619e+00,
         -1.5838e+00, -7.1794e-01,  6.1294e-01,  3.2305e-01,  1.6027e-02,
         -1.9532e-01,  9.3137e-01,  3.0401e-01,  8.9150e-01,  8.5259e-01,
         -3.9454e-01, -1.7767e-01,  8.0945e-02,  1.2064e+00,  2.4489e-01,
          3.7606e-01,  2.0882e-01,  1.6249e-01,  5.9986e-01,  4.6608e-02,
          5.9037e-01, -1.3852e-01,  1.2178e+00,  1.7006e-01,  4.8338e-01,
          9.7459e-01,  1.0253e+00,  2.5367e-01,  2.2801e-01, -9.0081e-02,
          7.5410e-01,  4.1974e-01,  3.0535e-01,  7.4918e-01,  3.0529e-01,
          7.0179e-01, -1.1509e-03,  8.1016e-01,  8.0692e-01,  4.2346e-01,
         -6.6645e-03, -4.7818e-01,  6.7875e-01,  3.2971e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
766000 loss tensor(0.0624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1716e+00,  9.2656e-01,  3.4496e-01,  2.3399e+00, -1.0627e+00,
         -1.5842e+00, -7.1711e-01,  6.1403e-01,  3.2335e-01,  1.7286e-02,
         -1.9583e-01,  9.3215e-01,  3.0262e-01,  8.9082e-01,  8.5294e-01,
         -3.9458e-01, -1.7903e-01,  7.9638e-02,  1.2066e+00,  2.4529e-01,
          3.7608e-01,  2.0974e-01,  1.6227e-01,  5.9989e-01,  4.7805e-02,
          5.9077e-01, -1.4047e-01,  1.2177e+00,  1.6972e-01,  4.8353e-01,
          9.7510e-01,  1.0257e+00,  2.5288e-01,  2.2929e-01, -8.9340e-02,
          7.5238e-01,  4.1829e-01,  3.0480e-01,  7.4788e-01,  3.0444e-01,
          7.0005e-01, -4.8065e-04,  8.0880e-01,  8.0607e-01,  4.2319e-01,
         -7.2128e-03, -4.7816e-01,  6.7742e-01,  3.2980e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
767000 loss tensor(0.0722, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0399, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1725e+00,  9.2651e-01,  3.4543e-01,  2.3399e+00, -1.0652e+00,
         -1.5836e+00, -7.1815e-01,  6.1303e-01,  3.2339e-01,  1.7263e-02,
         -1.9652e-01,  9.3140e-01,  3.0277e-01,  8.9093e-01,  8.5376e-01,
         -3.9451e-01, -1.7791e-01,  7.9193e-02,  1.2055e+00,  2.4536e-01,
          3.7640e-01,  2.0910e-01,  1.6200e-01,  5.9893e-01,  4.7456e-02,
          5.9035e-01, -1.3940e-01,  1.2173e+00,  1.6918e-01,  4.8358e-01,
          9.7418e-01,  1.0253e+00,  2.5378e-01,  2.2822e-01, -8.9807e-02,
          7.5245e-01,  4.1892e-01,  3.0439e-01,  7.4857e-01,  3.0403e-01,
          7.0054e-01, -4.0385e-04,  8.0872e-01,  8.0568e-01,  4.2413e-01,
         -7.0297e-03, -4.7747e-01,  6.7739e-01,  3.3037e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
768000 loss tensor(0.0647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1711e+00,  9.2550e-01,  3.4578e-01,  2.3363e+00, -1.0646e+00,
         -1.5847e+00, -7.1790e-01,  6.1235e-01,  3.2182e-01,  1.6636e-02,
         -1.9834e-01,  9.2996e-01,  3.0273e-01,  8.8904e-01,  8.5401e-01,
         -3.9318e-01, -1.7778e-01,  7.9592e-02,  1.2066e+00,  2.4598e-01,
          3.7510e-01,  2.0834e-01,  1.6308e-01,  6.0043e-01,  4.7126e-02,
          5.8985e-01, -1.3988e-01,  1.2177e+00,  1.7045e-01,  4.8448e-01,
          9.7321e-01,  1.0234e+00,  2.5252e-01,  2.2911e-01, -8.9514e-02,
          7.5300e-01,  4.1934e-01,  3.0499e-01,  7.4986e-01,  3.0327e-01,
          7.0128e-01,  2.1885e-04,  8.0959e-01,  8.0676e-01,  4.2268e-01,
         -8.9902e-03, -4.7782e-01,  6.7837e-01,  3.3058e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
769000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0392, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1731e+00,  9.2490e-01,  3.4583e-01,  2.3358e+00, -1.0663e+00,
         -1.5833e+00, -7.1878e-01,  6.1209e-01,  3.2239e-01,  1.6340e-02,
         -1.9844e-01,  9.3019e-01,  3.0097e-01,  8.8921e-01,  8.5298e-01,
         -3.9403e-01, -1.7760e-01,  7.9002e-02,  1.2046e+00,  2.4415e-01,
          3.7683e-01,  2.0782e-01,  1.6169e-01,  5.9889e-01,  4.7381e-02,
          5.8947e-01, -1.3990e-01,  1.2160e+00,  1.6912e-01,  4.8314e-01,
          9.7399e-01,  1.0238e+00,  2.5471e-01,  2.2873e-01, -8.9543e-02,
          7.5204e-01,  4.1955e-01,  3.0440e-01,  7.4978e-01,  3.0466e-01,
          7.0059e-01,  2.4175e-04,  8.0889e-01,  8.0659e-01,  4.2412e-01,
         -7.9113e-03, -4.7794e-01,  6.7794e-01,  3.2978e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
770000 loss tensor(0.0626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1746e+00,  9.2553e-01,  3.4736e-01,  2.3350e+00, -1.0674e+00,
         -1.5838e+00, -7.1796e-01,  6.1101e-01,  3.2317e-01,  1.7546e-02,
         -1.9876e-01,  9.3005e-01,  3.0173e-01,  8.8743e-01,  8.5427e-01,
         -3.9326e-01, -1.7834e-01,  7.9267e-02,  1.2045e+00,  2.4587e-01,
          3.7538e-01,  2.0893e-01,  1.6236e-01,  5.9891e-01,  4.7762e-02,
          5.9034e-01, -1.3886e-01,  1.2171e+00,  1.6971e-01,  4.8418e-01,
          9.7400e-01,  1.0241e+00,  2.5394e-01,  2.2970e-01, -9.0713e-02,
          7.5191e-01,  4.1784e-01,  3.0316e-01,  7.4861e-01,  3.0382e-01,
          6.9975e-01,  4.4760e-05,  8.0839e-01,  8.0538e-01,  4.2364e-01,
         -9.1589e-03, -4.7694e-01,  6.7659e-01,  3.3088e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
771000 loss tensor(0.0613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1748e+00,  9.2422e-01,  3.4721e-01,  2.3329e+00, -1.0686e+00,
         -1.5832e+00, -7.1837e-01,  6.1003e-01,  3.2258e-01,  1.7278e-02,
         -1.9912e-01,  9.2949e-01,  3.0253e-01,  8.8685e-01,  8.5403e-01,
         -3.9332e-01, -1.7790e-01,  7.9942e-02,  1.2070e+00,  2.4626e-01,
          3.7509e-01,  2.0930e-01,  1.6155e-01,  5.9985e-01,  4.7684e-02,
          5.8861e-01, -1.3922e-01,  1.2170e+00,  1.6991e-01,  4.8459e-01,
          9.7296e-01,  1.0238e+00,  2.5450e-01,  2.2925e-01, -9.1418e-02,
          7.5168e-01,  4.1835e-01,  3.0299e-01,  7.4942e-01,  3.0413e-01,
          6.9967e-01, -7.7791e-04,  8.0923e-01,  8.0510e-01,  4.2345e-01,
         -9.4875e-03, -4.7697e-01,  6.7605e-01,  3.3117e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
772000 loss tensor(0.0645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1753e+00,  9.2390e-01,  3.4568e-01,  2.3324e+00, -1.0692e+00,
         -1.5848e+00, -7.1841e-01,  6.1137e-01,  3.2250e-01,  1.6186e-02,
         -2.0111e-01,  9.2924e-01,  3.0017e-01,  8.8813e-01,  8.5357e-01,
         -3.9328e-01, -1.7700e-01,  7.8656e-02,  1.2058e+00,  2.4552e-01,
          3.7426e-01,  2.0718e-01,  1.6151e-01,  5.9908e-01,  4.7149e-02,
          5.8927e-01, -1.3990e-01,  1.2151e+00,  1.6855e-01,  4.8404e-01,
          9.7277e-01,  1.0222e+00,  2.5367e-01,  2.3038e-01, -8.8646e-02,
          7.5105e-01,  4.1935e-01,  3.0319e-01,  7.5051e-01,  3.0310e-01,
          6.9992e-01,  1.2881e-03,  8.0919e-01,  8.0616e-01,  4.2504e-01,
         -8.5699e-03, -4.7810e-01,  6.7718e-01,  3.2958e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
773000 loss tensor(0.0734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0402, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1758e+00,  9.2495e-01,  3.4775e-01,  2.3297e+00, -1.0702e+00,
         -1.5842e+00, -7.1763e-01,  6.0952e-01,  3.2173e-01,  1.7951e-02,
         -2.0152e-01,  9.2902e-01,  3.0221e-01,  8.8619e-01,  8.5454e-01,
         -3.9295e-01, -1.7814e-01,  7.8871e-02,  1.2074e+00,  2.4687e-01,
          3.7396e-01,  2.0789e-01,  1.6118e-01,  6.0048e-01,  4.7828e-02,
          5.8934e-01, -1.3897e-01,  1.2159e+00,  1.6892e-01,  4.8492e-01,
          9.7209e-01,  1.0221e+00,  2.5392e-01,  2.3051e-01, -9.0108e-02,
          7.5121e-01,  4.1772e-01,  3.0313e-01,  7.4915e-01,  3.0350e-01,
          6.9897e-01, -1.0984e-03,  8.0801e-01,  8.0481e-01,  4.2421e-01,
         -1.0076e-02, -4.7745e-01,  6.7589e-01,  3.3036e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
774000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0358, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1770e+00,  9.2388e-01,  3.4845e-01,  2.3292e+00, -1.0711e+00,
         -1.5843e+00, -7.1818e-01,  6.0914e-01,  3.2240e-01,  1.7702e-02,
         -2.0255e-01,  9.2874e-01,  3.0016e-01,  8.8614e-01,  8.5346e-01,
         -3.9345e-01, -1.7783e-01,  7.8140e-02,  1.2051e+00,  2.4666e-01,
          3.7442e-01,  2.0708e-01,  1.6038e-01,  5.9949e-01,  4.7838e-02,
          5.8783e-01, -1.3870e-01,  1.2145e+00,  1.6783e-01,  4.8389e-01,
          9.7334e-01,  1.0220e+00,  2.5471e-01,  2.3030e-01, -8.9780e-02,
          7.5061e-01,  4.1812e-01,  3.0277e-01,  7.4976e-01,  3.0389e-01,
          6.9857e-01, -2.6052e-04,  8.0803e-01,  8.0514e-01,  4.2527e-01,
         -9.2845e-03, -4.7757e-01,  6.7611e-01,  3.2969e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
775000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0347, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1774e+00,  9.2350e-01,  3.4853e-01,  2.3279e+00, -1.0721e+00,
         -1.5831e+00, -7.1885e-01,  6.0864e-01,  3.2185e-01,  1.6952e-02,
         -2.0220e-01,  9.2851e-01,  3.0066e-01,  8.8578e-01,  8.5342e-01,
         -3.9369e-01, -1.7715e-01,  7.8237e-02,  1.2062e+00,  2.4660e-01,
          3.7383e-01,  2.0778e-01,  1.5952e-01,  5.9970e-01,  4.8374e-02,
          5.8792e-01, -1.3852e-01,  1.2143e+00,  1.6758e-01,  4.8373e-01,
          9.7278e-01,  1.0218e+00,  2.5500e-01,  2.3015e-01, -8.9894e-02,
          7.5011e-01,  4.1838e-01,  3.0260e-01,  7.5010e-01,  3.0390e-01,
          6.9865e-01, -1.2099e-03,  8.0837e-01,  8.0471e-01,  4.2547e-01,
         -9.5401e-03, -4.7783e-01,  6.7675e-01,  3.2996e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
776000 loss tensor(0.0621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1794e+00,  9.2281e-01,  3.4903e-01,  2.3271e+00, -1.0737e+00,
         -1.5845e+00, -7.1923e-01,  6.0758e-01,  3.2127e-01,  1.7537e-02,
         -2.0391e-01,  9.2766e-01,  3.0061e-01,  8.8384e-01,  8.5456e-01,
         -3.9211e-01, -1.7697e-01,  7.7729e-02,  1.2064e+00,  2.4769e-01,
          3.7270e-01,  2.0794e-01,  1.6107e-01,  5.9919e-01,  4.7894e-02,
          5.8779e-01, -1.3874e-01,  1.2151e+00,  1.6863e-01,  4.8504e-01,
          9.7170e-01,  1.0210e+00,  2.5374e-01,  2.3020e-01, -9.0188e-02,
          7.5098e-01,  4.1755e-01,  3.0280e-01,  7.4995e-01,  3.0266e-01,
          6.9848e-01, -2.1069e-04,  8.0854e-01,  8.0471e-01,  4.2466e-01,
         -1.0826e-02, -4.7659e-01,  6.7640e-01,  3.3074e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
777000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1785e+00,  9.2304e-01,  3.4929e-01,  2.3244e+00, -1.0741e+00,
         -1.5838e+00, -7.1820e-01,  6.0677e-01,  3.2228e-01,  1.7407e-02,
         -2.0430e-01,  9.2757e-01,  2.9934e-01,  8.8421e-01,  8.5387e-01,
         -3.9261e-01, -1.7800e-01,  7.8355e-02,  1.2063e+00,  2.4704e-01,
          3.7327e-01,  2.0782e-01,  1.6029e-01,  5.9963e-01,  4.8576e-02,
          5.8784e-01, -1.3962e-01,  1.2138e+00,  1.6744e-01,  4.8438e-01,
          9.7239e-01,  1.0212e+00,  2.5475e-01,  2.3139e-01, -9.0474e-02,
          7.4954e-01,  4.1760e-01,  3.0212e-01,  7.5049e-01,  3.0303e-01,
          6.9793e-01,  7.2245e-04,  8.0837e-01,  8.0415e-01,  4.2563e-01,
         -1.0087e-02, -4.7761e-01,  6.7561e-01,  3.3003e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
778000 loss tensor(0.0607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1778e+00,  9.2213e-01,  3.4937e-01,  2.3225e+00, -1.0744e+00,
         -1.5841e+00, -7.1940e-01,  6.0719e-01,  3.2053e-01,  1.6468e-02,
         -2.0479e-01,  9.2635e-01,  2.9976e-01,  8.8339e-01,  8.5401e-01,
         -3.9195e-01, -1.7611e-01,  7.8269e-02,  1.2064e+00,  2.4631e-01,
          3.7243e-01,  2.0779e-01,  1.6042e-01,  5.9995e-01,  4.8259e-02,
          5.8649e-01, -1.4007e-01,  1.2138e+00,  1.6810e-01,  4.8480e-01,
          9.7143e-01,  1.0197e+00,  2.5456e-01,  2.3065e-01, -8.9590e-02,
          7.5020e-01,  4.1906e-01,  3.0280e-01,  7.5170e-01,  3.0249e-01,
          6.9889e-01,  2.8391e-04,  8.0886e-01,  8.0503e-01,  4.2491e-01,
         -1.1499e-02, -4.7777e-01,  6.7676e-01,  3.2979e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
779000 loss tensor(0.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1796e+00,  9.2314e-01,  3.5033e-01,  2.3210e+00, -1.0768e+00,
         -1.5842e+00, -7.1921e-01,  6.0677e-01,  3.2161e-01,  1.7798e-02,
         -2.0618e-01,  9.2684e-01,  2.9865e-01,  8.8235e-01,  8.5489e-01,
         -3.9177e-01, -1.7676e-01,  7.7323e-02,  1.2054e+00,  2.4684e-01,
          3.7254e-01,  2.0658e-01,  1.6038e-01,  5.9870e-01,  4.9048e-02,
          5.8653e-01, -1.3957e-01,  1.2141e+00,  1.6790e-01,  4.8475e-01,
          9.7192e-01,  1.0206e+00,  2.5454e-01,  2.3075e-01, -8.9600e-02,
          7.4906e-01,  4.1786e-01,  3.0177e-01,  7.5059e-01,  3.0216e-01,
          6.9773e-01,  6.8747e-04,  8.0791e-01,  8.0417e-01,  4.2505e-01,
         -1.1786e-02, -4.7649e-01,  6.7521e-01,  3.3122e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
780000 loss tensor(0.0607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1798e+00,  9.2138e-01,  3.5111e-01,  2.3199e+00, -1.0776e+00,
         -1.5834e+00, -7.2044e-01,  6.0398e-01,  3.2007e-01,  1.6086e-02,
         -2.0664e-01,  9.2516e-01,  2.9944e-01,  8.8188e-01,  8.5478e-01,
         -3.9159e-01, -1.7631e-01,  7.6975e-02,  1.2053e+00,  2.4705e-01,
          3.7126e-01,  2.0651e-01,  1.6011e-01,  5.9829e-01,  4.7317e-02,
          5.8636e-01, -1.3851e-01,  1.2138e+00,  1.6795e-01,  4.8463e-01,
          9.7108e-01,  1.0200e+00,  2.5575e-01,  2.3047e-01, -9.0169e-02,
          7.5080e-01,  4.1865e-01,  3.0253e-01,  7.5198e-01,  3.0328e-01,
          6.9832e-01,  3.7137e-04,  8.0908e-01,  8.0444e-01,  4.2516e-01,
         -1.2422e-02, -4.7661e-01,  6.7598e-01,  3.3088e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
781000 loss tensor(0.0632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0330, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1813e+00,  9.2067e-01,  3.5115e-01,  2.3178e+00, -1.0779e+00,
         -1.5843e+00, -7.2020e-01,  6.0548e-01,  3.2040e-01,  1.6176e-02,
         -2.0736e-01,  9.2471e-01,  2.9900e-01,  8.8190e-01,  8.5377e-01,
         -3.9185e-01, -1.7606e-01,  7.6597e-02,  1.2061e+00,  2.4739e-01,
          3.7090e-01,  2.0634e-01,  1.5964e-01,  5.9955e-01,  4.7740e-02,
          5.8519e-01, -1.3852e-01,  1.2125e+00,  1.6704e-01,  4.8438e-01,
          9.7119e-01,  1.0188e+00,  2.5521e-01,  2.3127e-01, -8.8984e-02,
          7.4985e-01,  4.1881e-01,  3.0193e-01,  7.5239e-01,  3.0282e-01,
          6.9800e-01,  1.9063e-04,  8.0924e-01,  8.0451e-01,  4.2643e-01,
         -1.1582e-02, -4.7757e-01,  6.7618e-01,  3.2956e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
782000 loss tensor(0.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1833e+00,  9.2176e-01,  3.5236e-01,  2.3170e+00, -1.0805e+00,
         -1.5839e+00, -7.1983e-01,  6.0402e-01,  3.2108e-01,  1.7595e-02,
         -2.0832e-01,  9.2543e-01,  2.9788e-01,  8.8084e-01,  8.5499e-01,
         -3.9205e-01, -1.7676e-01,  7.6772e-02,  1.2050e+00,  2.4736e-01,
          3.7135e-01,  2.0720e-01,  1.5933e-01,  5.9891e-01,  4.8320e-02,
          5.8595e-01, -1.3984e-01,  1.2129e+00,  1.6659e-01,  4.8483e-01,
          9.7145e-01,  1.0201e+00,  2.5590e-01,  2.3163e-01, -9.0606e-02,
          7.4867e-01,  4.1747e-01,  3.0154e-01,  7.5078e-01,  3.0243e-01,
          6.9683e-01,  9.6136e-04,  8.0767e-01,  8.0370e-01,  4.2612e-01,
         -1.2310e-02, -4.7638e-01,  6.7501e-01,  3.3127e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
783000 loss tensor(0.0630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1841e+00,  9.1967e-01,  3.5328e-01,  2.3158e+00, -1.0787e+00,
         -1.5820e+00, -7.2108e-01,  6.0305e-01,  3.1965e-01,  1.6465e-02,
         -2.0750e-01,  9.2398e-01,  2.9834e-01,  8.8112e-01,  8.5388e-01,
         -3.9192e-01, -1.7613e-01,  7.5225e-02,  1.2054e+00,  2.4790e-01,
          3.7132e-01,  2.0665e-01,  1.5879e-01,  5.9806e-01,  4.7530e-02,
          5.8461e-01, -1.3855e-01,  1.2117e+00,  1.6621e-01,  4.8474e-01,
          9.7100e-01,  1.0178e+00,  2.5710e-01,  2.3129e-01, -9.0031e-02,
          7.4997e-01,  4.1842e-01,  3.0236e-01,  7.5269e-01,  3.0339e-01,
          6.9775e-01,  9.3558e-04,  8.0901e-01,  8.0458e-01,  4.2680e-01,
         -1.2091e-02, -4.7768e-01,  6.7526e-01,  3.2964e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
784000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0359, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1851e+00,  9.2131e-01,  3.5425e-01,  2.3144e+00, -1.0820e+00,
         -1.5821e+00, -7.2053e-01,  6.0254e-01,  3.2067e-01,  1.7211e-02,
         -2.0854e-01,  9.2463e-01,  2.9754e-01,  8.8070e-01,  8.5529e-01,
         -3.9178e-01, -1.7669e-01,  7.4875e-02,  1.2049e+00,  2.4819e-01,
          3.7125e-01,  2.0531e-01,  1.5861e-01,  5.9757e-01,  4.8451e-02,
          5.8471e-01, -1.3781e-01,  1.2119e+00,  1.6599e-01,  4.8437e-01,
          9.7142e-01,  1.0190e+00,  2.5732e-01,  2.3138e-01, -9.0433e-02,
          7.4871e-01,  4.1792e-01,  3.0137e-01,  7.5140e-01,  3.0314e-01,
          6.9608e-01,  9.1543e-04,  8.0759e-01,  8.0362e-01,  4.2701e-01,
         -1.2182e-02, -4.7629e-01,  6.7498e-01,  3.3133e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
785000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0402, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1861e+00,  9.2123e-01,  3.5494e-01,  2.3144e+00, -1.0809e+00,
         -1.5831e+00, -7.2058e-01,  6.0355e-01,  3.2028e-01,  1.7145e-02,
         -2.0932e-01,  9.2426e-01,  2.9762e-01,  8.8014e-01,  8.5452e-01,
         -3.9248e-01, -1.7596e-01,  7.5545e-02,  1.2050e+00,  2.4694e-01,
          3.7098e-01,  2.0630e-01,  1.5765e-01,  5.9850e-01,  4.9098e-02,
          5.8537e-01, -1.3825e-01,  1.2113e+00,  1.6547e-01,  4.8393e-01,
          9.7076e-01,  1.0183e+00,  2.5689e-01,  2.3226e-01, -8.9688e-02,
          7.4849e-01,  4.1822e-01,  3.0080e-01,  7.5216e-01,  3.0326e-01,
          6.9614e-01,  1.7613e-04,  8.0775e-01,  8.0263e-01,  4.2756e-01,
         -1.2151e-02, -4.7710e-01,  6.7479e-01,  3.2995e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
786000 loss tensor(0.0590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1852e+00,  9.1943e-01,  3.5452e-01,  2.3107e+00, -1.0819e+00,
         -1.5830e+00, -7.2181e-01,  6.0213e-01,  3.2006e-01,  1.5894e-02,
         -2.0994e-01,  9.2291e-01,  2.9632e-01,  8.7944e-01,  8.5413e-01,
         -3.9233e-01, -1.7571e-01,  7.5579e-02,  1.2040e+00,  2.4732e-01,
          3.7123e-01,  2.0580e-01,  1.5758e-01,  5.9838e-01,  4.8094e-02,
          5.8407e-01, -1.3853e-01,  1.2106e+00,  1.6544e-01,  4.8394e-01,
          9.7140e-01,  1.0179e+00,  2.5732e-01,  2.3206e-01, -8.9781e-02,
          7.4809e-01,  4.1872e-01,  3.0105e-01,  7.5304e-01,  3.0273e-01,
          6.9652e-01,  1.6093e-03,  8.0857e-01,  8.0401e-01,  4.2756e-01,
         -1.2592e-02, -4.7728e-01,  6.7462e-01,  3.2992e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
787000 loss tensor(0.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0329, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1854e+00,  9.1829e-01,  3.5435e-01,  2.3092e+00, -1.0835e+00,
         -1.5840e+00, -7.2139e-01,  6.0112e-01,  3.1910e-01,  1.6389e-02,
         -2.1228e-01,  9.2197e-01,  2.9677e-01,  8.7865e-01,  8.5506e-01,
         -3.9065e-01, -1.7575e-01,  7.5717e-02,  1.2049e+00,  2.4718e-01,
          3.6997e-01,  2.0561e-01,  1.5892e-01,  5.9765e-01,  4.7633e-02,
          5.8443e-01, -1.3922e-01,  1.2111e+00,  1.6613e-01,  4.8547e-01,
          9.6878e-01,  1.0164e+00,  2.5654e-01,  2.3277e-01, -8.9408e-02,
          7.4841e-01,  4.1877e-01,  3.0100e-01,  7.5331e-01,  3.0148e-01,
          6.9680e-01,  1.4505e-03,  8.0906e-01,  8.0347e-01,  4.2715e-01,
         -1.3640e-02, -4.7695e-01,  6.7465e-01,  3.3052e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
788000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1868e+00,  9.1907e-01,  3.5615e-01,  2.3081e+00, -1.0844e+00,
         -1.5834e+00, -7.2135e-01,  6.0091e-01,  3.1871e-01,  1.7032e-02,
         -2.1227e-01,  9.2245e-01,  2.9705e-01,  8.7708e-01,  8.5550e-01,
         -3.9037e-01, -1.7596e-01,  7.4123e-02,  1.2056e+00,  2.4932e-01,
          3.6920e-01,  2.0559e-01,  1.5858e-01,  5.9937e-01,  4.8433e-02,
          5.8330e-01, -1.3834e-01,  1.2113e+00,  1.6630e-01,  4.8575e-01,
          9.6927e-01,  1.0164e+00,  2.5645e-01,  2.3159e-01, -8.9713e-02,
          7.4863e-01,  4.1752e-01,  3.0176e-01,  7.5269e-01,  3.0187e-01,
          6.9616e-01,  8.9549e-04,  8.0805e-01,  8.0305e-01,  4.2643e-01,
         -1.4678e-02, -4.7617e-01,  6.7505e-01,  3.3092e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
789000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0373, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1875e+00,  9.1791e-01,  3.5643e-01,  2.3059e+00, -1.0854e+00,
         -1.5834e+00, -7.2210e-01,  6.0002e-01,  3.1839e-01,  1.6648e-02,
         -2.1287e-01,  9.2129e-01,  2.9644e-01,  8.7662e-01,  8.5574e-01,
         -3.9010e-01, -1.7554e-01,  7.3819e-02,  1.2055e+00,  2.4859e-01,
          3.6862e-01,  2.0506e-01,  1.5838e-01,  5.9886e-01,  4.7987e-02,
          5.8289e-01, -1.3861e-01,  1.2108e+00,  1.6594e-01,  4.8529e-01,
          9.6898e-01,  1.0157e+00,  2.5689e-01,  2.3190e-01, -8.9960e-02,
          7.4895e-01,  4.1799e-01,  3.0160e-01,  7.5334e-01,  3.0173e-01,
          6.9629e-01,  1.4030e-03,  8.0831e-01,  8.0383e-01,  4.2679e-01,
         -1.4836e-02, -4.7635e-01,  6.7529e-01,  3.3074e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
790000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1886e+00,  9.1792e-01,  3.5744e-01,  2.3061e+00, -1.0871e+00,
         -1.5822e+00, -7.2128e-01,  5.9922e-01,  3.1916e-01,  1.7092e-02,
         -2.1271e-01,  9.2180e-01,  2.9635e-01,  8.7709e-01,  8.5444e-01,
         -3.9139e-01, -1.7585e-01,  7.4001e-02,  1.2052e+00,  2.4850e-01,
          3.6940e-01,  2.0493e-01,  1.5688e-01,  5.9857e-01,  4.8933e-02,
          5.8235e-01, -1.3696e-01,  1.2094e+00,  1.6458e-01,  4.8458e-01,
          9.6929e-01,  1.0160e+00,  2.5810e-01,  2.3210e-01, -9.0277e-02,
          7.4768e-01,  4.1745e-01,  3.0024e-01,  7.5270e-01,  3.0230e-01,
          6.9515e-01,  2.7441e-04,  8.0721e-01,  8.0243e-01,  4.2787e-01,
         -1.4115e-02, -4.7732e-01,  6.7431e-01,  3.3002e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
791000 loss tensor(0.0568, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1890e+00,  9.1762e-01,  3.5603e-01,  2.3042e+00, -1.0890e+00,
         -1.5833e+00, -7.2192e-01,  5.9930e-01,  3.1867e-01,  1.7114e-02,
         -2.1485e-01,  9.2112e-01,  2.9580e-01,  8.7493e-01,  8.5556e-01,
         -3.8972e-01, -1.7532e-01,  7.3874e-02,  1.2056e+00,  2.4934e-01,
          3.6744e-01,  2.0476e-01,  1.5809e-01,  5.9952e-01,  4.7714e-02,
          5.8243e-01, -1.3781e-01,  1.2101e+00,  1.6556e-01,  4.8638e-01,
          9.6832e-01,  1.0161e+00,  2.5706e-01,  2.3247e-01, -8.9723e-02,
          7.4818e-01,  4.1756e-01,  3.0121e-01,  7.5339e-01,  3.0157e-01,
          6.9570e-01,  1.7881e-03,  8.0783e-01,  8.0357e-01,  4.2742e-01,
         -1.5084e-02, -4.7565e-01,  6.7472e-01,  3.3110e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
792000 loss tensor(0.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1904e+00,  9.1797e-01,  3.5812e-01,  2.3034e+00, -1.0893e+00,
         -1.5820e+00, -7.2229e-01,  5.9772e-01,  3.1924e-01,  1.6526e-02,
         -2.1394e-01,  9.2123e-01,  2.9518e-01,  8.7542e-01,  8.5535e-01,
         -3.9107e-01, -1.7531e-01,  7.4066e-02,  1.2045e+00,  2.4866e-01,
          3.7036e-01,  2.0511e-01,  1.5675e-01,  5.9766e-01,  4.9143e-02,
          5.8233e-01, -1.3703e-01,  1.2091e+00,  1.6431e-01,  4.8460e-01,
          9.6976e-01,  1.0160e+00,  2.5870e-01,  2.3255e-01, -9.0204e-02,
          7.4677e-01,  4.1724e-01,  2.9878e-01,  7.5313e-01,  3.0230e-01,
          6.9472e-01,  1.3776e-03,  8.0721e-01,  8.0263e-01,  4.2840e-01,
         -1.4857e-02, -4.7659e-01,  6.7279e-01,  3.3108e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
793000 loss tensor(0.0618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1905e+00,  9.1659e-01,  3.5853e-01,  2.3018e+00, -1.0921e+00,
         -1.5814e+00, -7.2287e-01,  5.9745e-01,  3.1822e-01,  1.6890e-02,
         -2.1516e-01,  9.2030e-01,  2.9555e-01,  8.7393e-01,  8.5589e-01,
         -3.9027e-01, -1.7487e-01,  7.2576e-02,  1.2044e+00,  2.4897e-01,
          3.6841e-01,  2.0415e-01,  1.5683e-01,  5.9747e-01,  4.8199e-02,
          5.8126e-01, -1.3738e-01,  1.2095e+00,  1.6496e-01,  4.8560e-01,
          9.6806e-01,  1.0155e+00,  2.5882e-01,  2.3213e-01, -8.8651e-02,
          7.4741e-01,  4.1751e-01,  2.9999e-01,  7.5369e-01,  3.0227e-01,
          6.9512e-01,  7.1530e-04,  8.0732e-01,  8.0240e-01,  4.2795e-01,
         -1.5780e-02, -4.7573e-01,  6.7445e-01,  3.3141e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
794000 loss tensor(0.0601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1902e+00,  9.1762e-01,  3.5899e-01,  2.3006e+00, -1.0917e+00,
         -1.5821e+00, -7.2229e-01,  5.9745e-01,  3.1872e-01,  1.6878e-02,
         -2.1517e-01,  9.2059e-01,  2.9502e-01,  8.7445e-01,  8.5462e-01,
         -3.9110e-01, -1.7523e-01,  7.3443e-02,  1.2047e+00,  2.4892e-01,
          3.6846e-01,  2.0468e-01,  1.5603e-01,  5.9911e-01,  4.9899e-02,
          5.8220e-01, -1.3731e-01,  1.2078e+00,  1.6380e-01,  4.8494e-01,
          9.6959e-01,  1.0149e+00,  2.5895e-01,  2.3280e-01, -9.0442e-02,
          7.4596e-01,  4.1680e-01,  2.9934e-01,  7.5390e-01,  3.0234e-01,
          6.9417e-01,  1.1374e-04,  8.0688e-01,  8.0201e-01,  4.2898e-01,
         -1.5300e-02, -4.7709e-01,  6.7303e-01,  3.3026e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
795000 loss tensor(0.0693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0386, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1906e+00,  9.1603e-01,  3.5942e-01,  2.2986e+00, -1.0927e+00,
         -1.5831e+00, -7.2238e-01,  5.9701e-01,  3.1780e-01,  1.6435e-02,
         -2.1765e-01,  9.1949e-01,  2.9374e-01,  8.7362e-01,  8.5515e-01,
         -3.9027e-01, -1.7501e-01,  7.2190e-02,  1.2045e+00,  2.4886e-01,
          3.6735e-01,  2.0417e-01,  1.5655e-01,  5.9840e-01,  4.9090e-02,
          5.8255e-01, -1.3803e-01,  1.2075e+00,  1.6387e-01,  4.8466e-01,
          9.6902e-01,  1.0137e+00,  2.5811e-01,  2.3338e-01, -8.8635e-02,
          7.4700e-01,  4.1751e-01,  3.0045e-01,  7.5472e-01,  3.0064e-01,
          6.9435e-01,  1.9732e-03,  8.0754e-01,  8.0315e-01,  4.2891e-01,
         -1.5822e-02, -4.7719e-01,  6.7466e-01,  3.3036e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
796000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0379, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1911,  0.9155,  0.3587,  2.2971, -1.0913, -1.5838, -0.7226,  0.5969,
          0.3183,  0.0159, -0.2186,  0.9186,  0.2928,  0.8728,  0.8553, -0.3899,
         -0.1743,  0.0732,  1.2044,  0.2483,  0.3670,  0.2039,  0.1568,  0.5980,
          0.0485,  0.5817, -0.1390,  1.2077,  0.1643,  0.4848,  0.9689,  1.0129,
          0.2584,  0.2337, -0.0888,  0.7461,  0.4181,  0.2989,  0.7552,  0.3009,
          0.6947,  0.0030,  0.8077,  0.8032,  0.4284, -0.0169, -0.4773,  0.6730,
          0.3297]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
797000 loss tensor(0.0626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0326, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1920e+00,  9.1719e-01,  3.6022e-01,  2.2967e+00, -1.0952e+00,
         -1.5825e+00, -7.2181e-01,  5.9653e-01,  3.1764e-01,  1.6892e-02,
         -2.1825e-01,  9.1933e-01,  2.9396e-01,  8.7322e-01,  8.5511e-01,
         -3.9009e-01, -1.7608e-01,  7.2791e-02,  1.2042e+00,  2.4956e-01,
          3.6830e-01,  2.0316e-01,  1.5555e-01,  5.9866e-01,  4.8872e-02,
          5.8154e-01, -1.3686e-01,  1.2067e+00,  1.6295e-01,  4.8497e-01,
          9.6854e-01,  1.0138e+00,  2.5881e-01,  2.3412e-01, -8.9573e-02,
          7.4589e-01,  4.1700e-01,  2.9908e-01,  7.5383e-01,  3.0172e-01,
          6.9321e-01,  1.2301e-03,  8.0588e-01,  8.0145e-01,  4.2971e-01,
         -1.5825e-02, -4.7680e-01,  6.7278e-01,  3.3065e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
798000 loss tensor(0.0573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1925,  0.9154,  0.3603,  2.2943, -1.0952, -1.5819, -0.7238,  0.5951,
          0.3179,  0.0159, -0.2190,  0.9185,  0.2925,  0.8726,  0.8551, -0.3903,
         -0.1743,  0.0732,  1.2038,  0.2484,  0.3677,  0.2036,  0.1556,  0.5974,
          0.0486,  0.5811, -0.1385,  1.2061,  0.1628,  0.4842,  0.9687,  1.0133,
          0.2598,  0.2339, -0.0897,  0.7452,  0.4181,  0.2987,  0.7554,  0.3018,
          0.6940,  0.0027,  0.8073,  0.8025,  0.4301, -0.0160, -0.4770,  0.6729,
          0.3303]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
799000 loss tensor(0.0605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1935e+00,  9.1605e-01,  3.5964e-01,  2.2925e+00, -1.0967e+00,
         -1.5823e+00, -7.2460e-01,  5.9319e-01,  3.1716e-01,  1.6266e-02,
         -2.1964e-01,  9.1762e-01,  2.9291e-01,  8.7072e-01,  8.5620e-01,
         -3.8921e-01, -1.7383e-01,  7.2264e-02,  1.2050e+00,  2.4941e-01,
          3.6668e-01,  2.0262e-01,  1.5592e-01,  5.9829e-01,  4.8334e-02,
          5.7879e-01, -1.3703e-01,  1.2072e+00,  1.6389e-01,  4.8586e-01,
          9.6658e-01,  1.0126e+00,  2.5942e-01,  2.3294e-01, -9.0400e-02,
          7.4610e-01,  4.1753e-01,  2.9871e-01,  7.5552e-01,  3.0179e-01,
          6.9436e-01,  2.0594e-03,  8.0811e-01,  8.0285e-01,  4.2924e-01,
         -1.7398e-02, -4.7609e-01,  6.7258e-01,  3.3083e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
800000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1948e+00,  9.1457e-01,  3.6174e-01,  2.2927e+00, -1.0977e+00,
         -1.5813e+00, -7.2394e-01,  5.9236e-01,  3.1726e-01,  1.7019e-02,
         -2.1972e-01,  9.1758e-01,  2.9406e-01,  8.6947e-01,  8.5664e-01,
         -3.8903e-01, -1.7504e-01,  7.2278e-02,  1.2048e+00,  2.5066e-01,
          3.6572e-01,  2.0411e-01,  1.5560e-01,  5.9787e-01,  4.8435e-02,
          5.8041e-01, -1.3710e-01,  1.2072e+00,  1.6370e-01,  4.8644e-01,
          9.6744e-01,  1.0127e+00,  2.6004e-01,  2.3398e-01, -9.0819e-02,
          7.4588e-01,  4.1637e-01,  2.9812e-01,  7.5473e-01,  3.0180e-01,
          6.9297e-01,  1.0111e-03,  8.0675e-01,  8.0148e-01,  4.2920e-01,
         -1.8011e-02, -4.7569e-01,  6.7332e-01,  3.3140e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
801000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1959e+00,  9.1481e-01,  3.6176e-01,  2.2908e+00, -1.0984e+00,
         -1.5808e+00, -7.2423e-01,  5.9250e-01,  3.1698e-01,  1.7136e-02,
         -2.2107e-01,  9.1718e-01,  2.9382e-01,  8.6914e-01,  8.5656e-01,
         -3.8925e-01, -1.7428e-01,  7.1530e-02,  1.2047e+00,  2.5062e-01,
          3.6572e-01,  2.0392e-01,  1.5534e-01,  5.9751e-01,  4.8578e-02,
          5.7938e-01, -1.3683e-01,  1.2067e+00,  1.6324e-01,  4.8604e-01,
          9.6761e-01,  1.0117e+00,  2.6020e-01,  2.3332e-01, -9.0334e-02,
          7.4583e-01,  4.1660e-01,  2.9804e-01,  7.5486e-01,  3.0149e-01,
          6.9335e-01,  7.8244e-04,  8.0685e-01,  8.0082e-01,  4.2896e-01,
         -1.8210e-02, -4.7587e-01,  6.7267e-01,  3.3134e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
802000 loss tensor(0.0672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0354, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1956e+00,  9.1438e-01,  3.6415e-01,  2.2886e+00, -1.0991e+00,
         -1.5823e+00, -7.2307e-01,  5.9352e-01,  3.1726e-01,  1.7116e-02,
         -2.2121e-01,  9.1756e-01,  2.9205e-01,  8.6912e-01,  8.5555e-01,
         -3.8969e-01, -1.7483e-01,  7.1142e-02,  1.2041e+00,  2.4969e-01,
          3.6629e-01,  2.0258e-01,  1.5429e-01,  5.9843e-01,  4.9868e-02,
          5.8002e-01, -1.3652e-01,  1.2054e+00,  1.6230e-01,  4.8542e-01,
          9.6761e-01,  1.0122e+00,  2.5954e-01,  2.3488e-01, -8.9352e-02,
          7.4464e-01,  4.1669e-01,  2.9800e-01,  7.5477e-01,  3.0075e-01,
          6.9217e-01,  1.6955e-03,  8.0571e-01,  8.0097e-01,  4.2992e-01,
         -1.7773e-02, -4.7674e-01,  6.7207e-01,  3.3066e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
803000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0398, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1974,  0.9129,  0.3635,  2.2874, -1.1000, -1.5812, -0.7251,  0.5913,
          0.3162,  0.0154, -0.2225,  0.9163,  0.2915,  0.8692,  0.8556, -0.3896,
         -0.1738,  0.0710,  1.2038,  0.2498,  0.3657,  0.2026,  0.1545,  0.5977,
          0.0489,  0.5786, -0.1374,  1.2046,  0.1622,  0.4851,  0.9666,  1.0106,
          0.2607,  0.2340, -0.0909,  0.7452,  0.4178,  0.2988,  0.7560,  0.3014,
          0.6931,  0.0027,  0.8070,  0.8022,  0.4303, -0.0180, -0.4769,  0.6731,
          0.3305]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
804000 loss tensor(0.0577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1987e+00,  9.1395e-01,  3.6353e-01,  2.2868e+00, -1.1020e+00,
         -1.5814e+00, -7.2515e-01,  5.9067e-01,  3.1603e-01,  1.6507e-02,
         -2.2337e-01,  9.1588e-01,  2.9264e-01,  8.6781e-01,  8.5694e-01,
         -3.8840e-01, -1.7361e-01,  7.0386e-02,  1.2042e+00,  2.5110e-01,
          3.6535e-01,  2.0379e-01,  1.5505e-01,  5.9878e-01,  4.9451e-02,
          5.7861e-01, -1.3776e-01,  1.2057e+00,  1.6259e-01,  4.8637e-01,
          9.6576e-01,  1.0102e+00,  2.5994e-01,  2.3346e-01, -9.0184e-02,
          7.4537e-01,  4.1668e-01,  2.9896e-01,  7.5572e-01,  3.0064e-01,
          6.9252e-01,  2.1071e-03,  8.0661e-01,  8.0114e-01,  4.2999e-01,
         -1.9043e-02, -4.7575e-01,  6.7248e-01,  3.3135e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
805000 loss tensor(0.0719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0399, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1979,  0.9148,  0.3645,  2.2846, -1.1033, -1.5825, -0.7243,  0.5917,
          0.3171,  0.0173, -0.2250,  0.9161,  0.2901,  0.8662,  0.8569, -0.3885,
         -0.1740,  0.0707,  1.2035,  0.2502,  0.3650,  0.2028,  0.1548,  0.5984,
          0.0499,  0.5792, -0.1378,  1.2055,  0.1625,  0.4861,  0.9675,  1.0110,
          0.2596,  0.2348, -0.0894,  0.7437,  0.4164,  0.2973,  0.7556,  0.2999,
          0.6917,  0.0031,  0.8059,  0.8010,  0.4297, -0.0196, -0.4755,  0.6714,
          0.3319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
806000 loss tensor(0.0608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1978e+00,  9.1400e-01,  3.6586e-01,  2.2839e+00, -1.1031e+00,
         -1.5832e+00, -7.2355e-01,  5.9189e-01,  3.1637e-01,  1.7296e-02,
         -2.2504e-01,  9.1603e-01,  2.9153e-01,  8.6631e-01,  8.5691e-01,
         -3.8874e-01, -1.7430e-01,  7.0316e-02,  1.2038e+00,  2.5076e-01,
          3.6360e-01,  2.0219e-01,  1.5464e-01,  5.9831e-01,  5.0263e-02,
          5.7959e-01, -1.3724e-01,  1.2050e+00,  1.6238e-01,  4.8638e-01,
          9.6664e-01,  1.0095e+00,  2.5970e-01,  2.3542e-01, -8.9179e-02,
          7.4405e-01,  4.1578e-01,  2.9762e-01,  7.5579e-01,  3.0016e-01,
          6.9151e-01,  2.0435e-03,  8.0596e-01,  8.0049e-01,  4.2982e-01,
         -1.9911e-02, -4.7588e-01,  6.7162e-01,  3.3108e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
807000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0384, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.1986,  0.9120,  0.3642,  2.2816, -1.1046, -1.5832, -0.7249,  0.5893,
          0.3155,  0.0161, -0.2272,  0.9143,  0.2910,  0.8656,  0.8575, -0.3874,
         -0.1737,  0.0710,  1.2032,  0.2499,  0.3641,  0.2021,  0.1553,  0.5973,
          0.0487,  0.5782, -0.1372,  1.2050,  0.1622,  0.4867,  0.9651,  1.0088,
          0.2608,  0.2348, -0.0900,  0.7448,  0.4169,  0.2977,  0.7569,  0.3002,
          0.6922,  0.0027,  0.8068,  0.8011,  0.4301, -0.0205, -0.4755,  0.6721,
          0.3310]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
808000 loss tensor(0.0635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0333, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2005,  0.9134,  0.3656,  2.2815, -1.1066, -1.5821, -0.7245,  0.5900,
          0.3166,  0.0169, -0.2263,  0.9153,  0.2896,  0.8654,  0.8571, -0.3885,
         -0.1740,  0.0698,  1.2027,  0.2508,  0.3649,  0.2028,  0.1541,  0.5980,
          0.0504,  0.5791, -0.1371,  1.2041,  0.1613,  0.4857,  0.9671,  1.0104,
          0.2608,  0.2356, -0.0896,  0.7430,  0.4160,  0.2967,  0.7562,  0.3002,
          0.6910,  0.0035,  0.8057,  0.8005,  0.4308, -0.0200, -0.4754,  0.6709,
          0.3315]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
809000 loss tensor(0.0600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2008,  0.9124,  0.3649,  2.2803, -1.1072, -1.5812, -0.7258,  0.5882,
          0.3160,  0.0167, -0.2267,  0.9145,  0.2912,  0.8642,  0.8570, -0.3878,
         -0.1734,  0.0702,  1.2042,  0.2514,  0.3640,  0.2029,  0.1542,  0.5981,
          0.0496,  0.5771, -0.1363,  1.2043,  0.1618,  0.4868,  0.9659,  1.0095,
          0.2611,  0.2343, -0.0903,  0.7433,  0.4161,  0.2964,  0.7563,  0.3006,
          0.6911,  0.0023,  0.8063,  0.8003,  0.4305, -0.0205, -0.4752,  0.6716,
          0.3313]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
810000 loss tensor(0.0696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0387, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2023e+00,  9.1180e-01,  3.6798e-01,  2.2792e+00, -1.1079e+00,
         -1.5807e+00, -7.2592e-01,  5.8822e-01,  3.1590e-01,  1.6948e-02,
         -2.2631e-01,  9.1413e-01,  2.9008e-01,  8.6454e-01,  8.5626e-01,
         -3.8848e-01, -1.7385e-01,  6.9060e-02,  1.2032e+00,  2.5217e-01,
          3.6389e-01,  2.0219e-01,  1.5282e-01,  5.9801e-01,  5.0129e-02,
          5.7724e-01, -1.3558e-01,  1.2028e+00,  1.6051e-01,  4.8615e-01,
          9.6604e-01,  1.0093e+00,  2.6230e-01,  2.3494e-01, -9.0246e-02,
          7.4318e-01,  4.1607e-01,  2.9648e-01,  7.5649e-01,  3.0157e-01,
          6.9058e-01,  2.0393e-03,  8.0555e-01,  8.0008e-01,  4.3183e-01,
         -1.9654e-02, -4.7599e-01,  6.7164e-01,  3.3059e-01]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
811000 loss tensor(0.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2009,  0.9122,  0.3671,  2.2768, -1.1087, -1.5809, -0.7254,  0.5886,
          0.3158,  0.0167, -0.2279,  0.9140,  0.2898,  0.8640,  0.8562, -0.3884,
         -0.1742,  0.0685,  1.2027,  0.2512,  0.3631,  0.2022,  0.1527,  0.5981,
          0.0505,  0.5775, -0.1369,  1.2023,  0.1601,  0.4859,  0.9658,  1.0088,
          0.2616,  0.2363, -0.0890,  0.7429,  0.4159,  0.2966,  0.7568,  0.3002,
          0.6903,  0.0028,  0.8052,  0.7998,  0.4319, -0.0202, -0.4761,  0.6712,
          0.3308]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
812000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0360, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2029,  0.9099,  0.3669,  2.2751, -1.1096, -1.5810, -0.7265,  0.5863,
          0.3144,  0.0156, -0.2284,  0.9125,  0.2897,  0.8637,  0.8558, -0.3882,
         -0.1734,  0.0692,  1.2025,  0.2511,  0.3634,  0.2015,  0.1524,  0.5970,
          0.0489,  0.5768, -0.1360,  1.2018,  0.1602,  0.4861,  0.9658,  1.0085,
          0.2623,  0.2356, -0.0900,  0.7432,  0.4173,  0.2964,  0.7583,  0.3017,
          0.6915,  0.0030,  0.8067,  0.8010,  0.4319, -0.0206, -0.4765,  0.6712,
          0.3300]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
813000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2027,  0.9102,  0.3671,  2.2738, -1.1117, -1.5811, -0.7272,  0.5859,
          0.3141,  0.0160, -0.2297,  0.9119,  0.2888,  0.8638,  0.8576, -0.3874,
         -0.1733,  0.0680,  1.2027,  0.2508,  0.3626,  0.2001,  0.1533,  0.5965,
          0.0493,  0.5750, -0.1356,  1.2018,  0.1599,  0.4860,  0.9647,  1.0071,
          0.2624,  0.2354, -0.0888,  0.7434,  0.4169,  0.2967,  0.7576,  0.3004,
          0.6914,  0.0033,  0.8064,  0.8011,  0.4325, -0.0203, -0.4751,  0.6710,
          0.3313]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
814000 loss tensor(0.0650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2031,  0.9089,  0.3678,  2.2714, -1.1111, -1.5820, -0.7266,  0.5858,
          0.3147,  0.0160, -0.2309,  0.9114,  0.2882,  0.8609,  0.8576, -0.3867,
         -0.1733,  0.0680,  1.2018,  0.2516,  0.3627,  0.2013,  0.1536,  0.5972,
          0.0493,  0.5762, -0.1370,  1.2025,  0.1612,  0.4865,  0.9646,  1.0069,
          0.2619,  0.2363, -0.0894,  0.7428,  0.4164,  0.2963,  0.7581,  0.2996,
          0.6905,  0.0044,  0.8064,  0.8010,  0.4311, -0.0225, -0.4752,  0.6701,
          0.3313]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
815000 loss tensor(0.0672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0381, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2045,  0.9103,  0.3692,  2.2727, -1.1127, -1.5797, -0.7264,  0.5847,
          0.3153,  0.0171, -0.2301,  0.9127,  0.2880,  0.8613,  0.8561, -0.3883,
         -0.1736,  0.0685,  1.2038,  0.2521,  0.3634,  0.2019,  0.1518,  0.5974,
          0.0509,  0.5766, -0.1363,  1.2011,  0.1592,  0.4855,  0.9663,  1.0082,
          0.2627,  0.2369, -0.0908,  0.7412,  0.4156,  0.2954,  0.7573,  0.3000,
          0.6892,  0.0036,  0.8049,  0.7998,  0.4332, -0.0206, -0.4758,  0.6702,
          0.3307]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
816000 loss tensor(0.0747, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2039,  0.9096,  0.3691,  2.2696, -1.1137, -1.5817, -0.7265,  0.5842,
          0.3155,  0.0166, -0.2319,  0.9116,  0.2881,  0.8613,  0.8567, -0.3878,
         -0.1729,  0.0684,  1.2017,  0.2514,  0.3628,  0.2013,  0.1518,  0.5977,
          0.0500,  0.5763, -0.1363,  1.2006,  0.1590,  0.4858,  0.9649,  1.0069,
          0.2632,  0.2369, -0.0896,  0.7411,  0.4159,  0.2946,  0.7580,  0.3007,
          0.6892,  0.0036,  0.8053,  0.7994,  0.4332, -0.0213, -0.4757,  0.6700,
          0.3309]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
817000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0353, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2047,  0.9100,  0.3704,  2.2688, -1.1142, -1.5811, -0.7263,  0.5848,
          0.3152,  0.0163, -0.2321,  0.9113,  0.2876,  0.8611,  0.8571, -0.3872,
         -0.1738,  0.0680,  1.2015,  0.2522,  0.3615,  0.2005,  0.1518,  0.5978,
          0.0508,  0.5759, -0.1361,  1.2000,  0.1589,  0.4860,  0.9645,  1.0057,
          0.2629,  0.2373, -0.0892,  0.7414,  0.4159,  0.2948,  0.7582,  0.2997,
          0.6891,  0.0032,  0.8051,  0.7994,  0.4329, -0.0219, -0.4761,  0.6700,
          0.3307]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
818000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0353, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2057,  0.9077,  0.3708,  2.2685, -1.1157, -1.5811, -0.7262,  0.5840,
          0.3148,  0.0166, -0.2329,  0.9109,  0.2874,  0.8597,  0.8567, -0.3877,
         -0.1734,  0.0677,  1.2021,  0.2511,  0.3620,  0.2008,  0.1513,  0.5966,
          0.0512,  0.5767, -0.1362,  1.2001,  0.1590,  0.4861,  0.9651,  1.0062,
          0.2630,  0.2379, -0.0896,  0.7408,  0.4157,  0.2947,  0.7583,  0.2999,
          0.6891,  0.0044,  0.8053,  0.7992,  0.4329, -0.0223, -0.4758,  0.6693,
          0.3309]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
819000 loss tensor(0.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0393, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2063,  0.9090,  0.3713,  2.2661, -1.1174, -1.5809, -0.7273,  0.5840,
          0.3134,  0.0169, -0.2339,  0.9100,  0.2877,  0.8583,  0.8580, -0.3865,
         -0.1730,  0.0666,  1.2019,  0.2529,  0.3607,  0.2007,  0.1522,  0.5973,
          0.0509,  0.5747, -0.1360,  1.2009,  0.1599,  0.4875,  0.9643,  1.0055,
          0.2625,  0.2371, -0.0897,  0.7418,  0.4154,  0.2958,  0.7579,  0.2992,
          0.6891,  0.0035,  0.8053,  0.7993,  0.4321, -0.0235, -0.4746,  0.6701,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
820000 loss tensor(0.0575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0275, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2089,  0.9080,  0.3712,  2.2673, -1.1191, -1.5813, -0.7274,  0.5829,
          0.3146,  0.0166, -0.2349,  0.9104,  0.2867,  0.8589,  0.8579, -0.3864,
         -0.1727,  0.0665,  1.2009,  0.2520,  0.3618,  0.2008,  0.1516,  0.5971,
          0.0511,  0.5736, -0.1361,  1.1999,  0.1584,  0.4863,  0.9645,  1.0059,
          0.2628,  0.2362, -0.0899,  0.7407,  0.4156,  0.2943,  0.7582,  0.2995,
          0.6884,  0.0047,  0.8047,  0.7991,  0.4336, -0.0227, -0.4750,  0.6691,
          0.3317]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
821000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2077,  0.9066,  0.3728,  2.2640, -1.1194, -1.5806, -0.7283,  0.5821,
          0.3127,  0.0154, -0.2354,  0.9087,  0.2870,  0.8581,  0.8578, -0.3862,
         -0.1717,  0.0660,  1.2020,  0.2518,  0.3604,  0.1991,  0.1514,  0.5972,
          0.0497,  0.5733, -0.1348,  1.1996,  0.1588,  0.4860,  0.9643,  1.0047,
          0.2639,  0.2362, -0.0898,  0.7419,  0.4167,  0.2960,  0.7593,  0.2999,
          0.6894,  0.0038,  0.8054,  0.8002,  0.4332, -0.0233, -0.4747,  0.6703,
          0.3315]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
822000 loss tensor(0.0644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2081,  0.9071,  0.3728,  2.2619, -1.1196, -1.5805, -0.7280,  0.5822,
          0.3130,  0.0151, -0.2350,  0.9085,  0.2859,  0.8581,  0.8570, -0.3869,
         -0.1720,  0.0668,  1.2017,  0.2516,  0.3597,  0.1999,  0.1507,  0.5973,
          0.0510,  0.5737, -0.1359,  1.1983,  0.1580,  0.4860,  0.9638,  1.0032,
          0.2639,  0.2376, -0.0893,  0.7409,  0.4167,  0.2946,  0.7602,  0.3001,
          0.6894,  0.0045,  0.8057,  0.7999,  0.4337, -0.0236, -0.4760,  0.6696,
          0.3305]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
823000 loss tensor(0.0740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0411, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2077,  0.9081,  0.3736,  2.2614, -1.1193, -1.5805, -0.7271,  0.5815,
          0.3130,  0.0168, -0.2375,  0.9089,  0.2870,  0.8573,  0.8575, -0.3866,
         -0.1733,  0.0658,  1.2018,  0.2531,  0.3589,  0.2008,  0.1506,  0.5976,
          0.0513,  0.5749, -0.1360,  1.1984,  0.1580,  0.4859,  0.9629,  1.0035,
          0.2637,  0.2387, -0.0886,  0.7404,  0.4155,  0.2940,  0.7592,  0.2993,
          0.6877,  0.0041,  0.8045,  0.7983,  0.4339, -0.0239, -0.4760,  0.6697,
          0.3308]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
824000 loss tensor(0.0598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2104,  0.9069,  0.3749,  2.2601, -1.1219, -1.5800, -0.7287,  0.5803,
          0.3127,  0.0159, -0.2368,  0.9077,  0.2865,  0.8552,  0.8580, -0.3858,
         -0.1717,  0.0656,  1.2026,  0.2535,  0.3589,  0.2007,  0.1511,  0.5980,
          0.0502,  0.5727, -0.1346,  1.1991,  0.1589,  0.4873,  0.9624,  1.0029,
          0.2640,  0.2366, -0.0901,  0.7410,  0.4152,  0.2944,  0.7593,  0.2994,
          0.6879,  0.0041,  0.8051,  0.7989,  0.4333, -0.0248, -0.4747,  0.6698,
          0.3313]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
825000 loss tensor(0.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2095,  0.9057,  0.3740,  2.2574, -1.1227, -1.5806, -0.7287,  0.5803,
          0.3118,  0.0160, -0.2383,  0.9070,  0.2853,  0.8548,  0.8582, -0.3855,
         -0.1723,  0.0653,  1.2013,  0.2524,  0.3590,  0.1995,  0.1514,  0.5966,
          0.0504,  0.5727, -0.1354,  1.1986,  0.1589,  0.4869,  0.9630,  1.0020,
          0.2642,  0.2377, -0.0897,  0.7407,  0.4160,  0.2949,  0.7601,  0.2992,
          0.6885,  0.0050,  0.8058,  0.7997,  0.4332, -0.0256, -0.4748,  0.6700,
          0.3313]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
826000 loss tensor(0.0737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0409, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2121,  0.9054,  0.3749,  2.2575, -1.1247, -1.5794, -0.7282,  0.5791,
          0.3133,  0.0166, -0.2384,  0.9077,  0.2856,  0.8554,  0.8571, -0.3864,
         -0.1722,  0.0661,  1.2016,  0.2529,  0.3600,  0.1998,  0.1496,  0.5974,
          0.0511,  0.5729, -0.1345,  1.1970,  0.1571,  0.4861,  0.9628,  1.0033,
          0.2650,  0.2372, -0.0905,  0.7389,  0.4153,  0.2924,  0.7595,  0.2999,
          0.6870,  0.0036,  0.8044,  0.7981,  0.4347, -0.0245, -0.4756,  0.6686,
          0.3308]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
827000 loss tensor(0.0654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0343, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2107,  0.9066,  0.3755,  2.2551, -1.1253, -1.5799, -0.7279,  0.5796,
          0.3117,  0.0163, -0.2388,  0.9067,  0.2855,  0.8534,  0.8581, -0.3861,
         -0.1722,  0.0661,  1.2022,  0.2530,  0.3582,  0.2009,  0.1500,  0.5975,
          0.0514,  0.5727, -0.1351,  1.1977,  0.1581,  0.4876,  0.9628,  1.0012,
          0.2647,  0.2384, -0.0908,  0.7401,  0.4149,  0.2938,  0.7601,  0.2993,
          0.6877,  0.0042,  0.8051,  0.7982,  0.4335, -0.0259, -0.4745,  0.6683,
          0.3317]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
828000 loss tensor(0.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2108,  0.9046,  0.3748,  2.2533, -1.1268, -1.5804, -0.7287,  0.5785,
          0.3116,  0.0155, -0.2416,  0.9059,  0.2838,  0.8528,  0.8584, -0.3850,
         -0.1720,  0.0656,  1.2004,  0.2521,  0.3586,  0.1994,  0.1507,  0.5965,
          0.0507,  0.5717, -0.1348,  1.1975,  0.1583,  0.4872,  0.9619,  1.0009,
          0.2644,  0.2384, -0.0900,  0.7395,  0.4156,  0.2934,  0.7608,  0.2988,
          0.6879,  0.0053,  0.8050,  0.7994,  0.4334, -0.0265, -0.4748,  0.6685,
          0.3319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
829000 loss tensor(0.0640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0336, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2137,  0.9049,  0.3757,  2.2524, -1.1284, -1.5795, -0.7284,  0.5777,
          0.3120,  0.0170, -0.2404,  0.9061,  0.2851,  0.8521,  0.8585, -0.3851,
         -0.1725,  0.0657,  1.2018,  0.2535,  0.3584,  0.1996,  0.1501,  0.5966,
          0.0514,  0.5721, -0.1340,  1.1971,  0.1577,  0.4879,  0.9620,  1.0016,
          0.2654,  0.2384, -0.0909,  0.7392,  0.4145,  0.2924,  0.7599,  0.2994,
          0.6867,  0.0044,  0.8040,  0.7979,  0.4344, -0.0266, -0.4743,  0.6680,
          0.3320]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
830000 loss tensor(0.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0400, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2140,  0.9039,  0.3764,  2.2509, -1.1292, -1.5797, -0.7297,  0.5773,
          0.3113,  0.0153, -0.2418,  0.9048,  0.2840,  0.8518,  0.8585, -0.3849,
         -0.1708,  0.0653,  1.2014,  0.2526,  0.3577,  0.1997,  0.1500,  0.5958,
          0.0504,  0.5711, -0.1359,  1.1965,  0.1576,  0.4875,  0.9619,  1.0000,
          0.2647,  0.2383, -0.0899,  0.7393,  0.4158,  0.2928,  0.7615,  0.2985,
          0.6875,  0.0052,  0.8051,  0.7988,  0.4342, -0.0270, -0.4745,  0.6686,
          0.3319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
831000 loss tensor(0.0661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0351, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2149,  0.9037,  0.3772,  2.2500, -1.1305, -1.5789, -0.7301,  0.5760,
          0.3115,  0.0156, -0.2420,  0.9045,  0.2839,  0.8504,  0.8584, -0.3852,
         -0.1704,  0.0646,  1.2013,  0.2534,  0.3577,  0.1989,  0.1497,  0.5971,
          0.0502,  0.5706, -0.1341,  1.1963,  0.1574,  0.4873,  0.9619,  1.0006,
          0.2660,  0.2378, -0.0901,  0.7393,  0.4159,  0.2927,  0.7611,  0.2995,
          0.6869,  0.0049,  0.8051,  0.7988,  0.4346, -0.0273, -0.4743,  0.6689,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
832000 loss tensor(0.0680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0360, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2154,  0.9048,  0.3791,  2.2478, -1.1311, -1.5789, -0.7284,  0.5775,
          0.3118,  0.0163, -0.2415,  0.9053,  0.2834,  0.8508,  0.8577, -0.3863,
         -0.1716,  0.0640,  1.2012,  0.2532,  0.3580,  0.1988,  0.1479,  0.5976,
          0.0522,  0.5713, -0.1346,  1.1950,  0.1561,  0.4869,  0.9623,  1.0005,
          0.2658,  0.2387, -0.0897,  0.7383,  0.4146,  0.2924,  0.7600,  0.2993,
          0.6855,  0.0044,  0.8032,  0.7973,  0.4354, -0.0267, -0.4752,  0.6680,
          0.3311]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
833000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2167,  0.9035,  0.3792,  2.2482, -1.1325, -1.5798, -0.7286,  0.5766,
          0.3116,  0.0164, -0.2432,  0.9052,  0.2828,  0.8506,  0.8579, -0.3862,
         -0.1716,  0.0638,  1.2005,  0.2535,  0.3574,  0.1974,  0.1481,  0.5977,
          0.0522,  0.5712, -0.1336,  1.1947,  0.1559,  0.4867,  0.9624,  1.0004,
          0.2665,  0.2390, -0.0898,  0.7379,  0.4146,  0.2924,  0.7609,  0.2991,
          0.6856,  0.0043,  0.8034,  0.7974,  0.4359, -0.0267, -0.4751,  0.6678,
          0.3311]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
834000 loss tensor(0.0614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2161,  0.9030,  0.3792,  2.2438, -1.1337, -1.5797, -0.7299,  0.5756,
          0.3107,  0.0158, -0.2449,  0.9036,  0.2823,  0.8489,  0.8588, -0.3840,
         -0.1713,  0.0636,  1.2009,  0.2534,  0.3565,  0.1979,  0.1496,  0.5964,
          0.0508,  0.5702, -0.1349,  1.1951,  0.1570,  0.4875,  0.9610,  0.9987,
          0.2655,  0.2391, -0.0893,  0.7388,  0.4152,  0.2927,  0.7615,  0.2985,
          0.6865,  0.0057,  0.8047,  0.7989,  0.4347, -0.0284, -0.4743,  0.6680,
          0.3318]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
835000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2186,  0.9033,  0.3798,  2.2440, -1.1349, -1.5795, -0.7285,  0.5752,
          0.3115,  0.0164, -0.2453,  0.9039,  0.2823,  0.8496,  0.8585, -0.3850,
         -0.1718,  0.0640,  1.2002,  0.2533,  0.3574,  0.1985,  0.1486,  0.5968,
          0.0521,  0.5721, -0.1350,  1.1943,  0.1555,  0.4868,  0.9617,  0.9993,
          0.2659,  0.2399, -0.0895,  0.7376,  0.4143,  0.2908,  0.7608,  0.2988,
          0.6850,  0.0058,  0.8034,  0.7971,  0.4363, -0.0275, -0.4744,  0.6672,
          0.3319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
836000 loss tensor(0.0659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2195,  0.9021,  0.3798,  2.2429, -1.1361, -1.5795, -0.7305,  0.5737,
          0.3106,  0.0160, -0.2460,  0.9034,  0.2829,  0.8477,  0.8590, -0.3844,
         -0.1705,  0.0631,  1.2013,  0.2541,  0.3562,  0.1980,  0.1486,  0.5977,
          0.0518,  0.5691, -0.1345,  1.1946,  0.1565,  0.4883,  0.9605,  0.9983,
          0.2661,  0.2382, -0.0900,  0.7382,  0.4142,  0.2919,  0.7608,  0.2983,
          0.6852,  0.0054,  0.8038,  0.7973,  0.4352, -0.0288, -0.4739,  0.6681,
          0.3320]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
837000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2196,  0.9012,  0.3808,  2.2411, -1.1363, -1.5783, -0.7306,  0.5735,
          0.3101,  0.0151, -0.2454,  0.9030,  0.2808,  0.8485,  0.8579, -0.3850,
         -0.1707,  0.0633,  1.2003,  0.2539,  0.3567,  0.1979,  0.1480,  0.5956,
          0.0510,  0.5693, -0.1342,  1.1930,  0.1551,  0.4868,  0.9611,  0.9980,
          0.2672,  0.2392, -0.0907,  0.7375,  0.4156,  0.2920,  0.7621,  0.2994,
          0.6853,  0.0061,  0.8043,  0.7983,  0.4362, -0.0282, -0.4754,  0.6679,
          0.3309]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
838000 loss tensor(0.0664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2184,  0.9018,  0.3813,  2.2390, -1.1379, -1.5797, -0.7304,  0.5732,
          0.3110,  0.0161, -0.2466,  0.9030,  0.2819,  0.8478,  0.8582, -0.3851,
         -0.1709,  0.0637,  1.1998,  0.2534,  0.3571,  0.1975,  0.1472,  0.5961,
          0.0518,  0.5697, -0.1340,  1.1928,  0.1549,  0.4869,  0.9610,  0.9983,
          0.2671,  0.2393, -0.0900,  0.7368,  0.4147,  0.2909,  0.7617,  0.2994,
          0.6841,  0.0053,  0.8033,  0.7968,  0.4367, -0.0282, -0.4748,  0.6669,
          0.3314]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
839000 loss tensor(0.0720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2196,  0.9009,  0.3823,  2.2373, -1.1380, -1.5794, -0.7304,  0.5733,
          0.3095,  0.0154, -0.2483,  0.9015,  0.2813,  0.8457,  0.8590, -0.3836,
         -0.1707,  0.0623,  1.1998,  0.2543,  0.3555,  0.1968,  0.1485,  0.5967,
          0.0516,  0.5686, -0.1344,  1.1937,  0.1560,  0.4878,  0.9595,  0.9972,
          0.2664,  0.2395, -0.0894,  0.7378,  0.4152,  0.2922,  0.7622,  0.2983,
          0.6852,  0.0059,  0.8041,  0.7979,  0.4353, -0.0298, -0.4743,  0.6681,
          0.3320]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
840000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2194,  0.9010,  0.3816,  2.2378, -1.1390, -1.5791, -0.7316,  0.5725,
          0.3101,  0.0150, -0.2487,  0.9014,  0.2803,  0.8468,  0.8580, -0.3848,
         -0.1694,  0.0628,  1.1986,  0.2536,  0.3559,  0.1964,  0.1476,  0.5959,
          0.0525,  0.5685, -0.1349,  1.1920,  0.1544,  0.4869,  0.9602,  0.9975,
          0.2673,  0.2390, -0.0888,  0.7370,  0.4158,  0.2911,  0.7633,  0.2983,
          0.6850,  0.0067,  0.8042,  0.7974,  0.4372, -0.0287, -0.4750,  0.6677,
          0.3311]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
841000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2199,  0.9010,  0.3831,  2.2357, -1.1398, -1.5796, -0.7301,  0.5720,
          0.3099,  0.0159, -0.2493,  0.9016,  0.2795,  0.8458,  0.8585, -0.3845,
         -0.1712,  0.0629,  1.2000,  0.2535,  0.3552,  0.1969,  0.1475,  0.5951,
          0.0522,  0.5696, -0.1346,  1.1920,  0.1545,  0.4870,  0.9609,  0.9967,
          0.2669,  0.2411, -0.0897,  0.7361,  0.4148,  0.2911,  0.7624,  0.2984,
          0.6838,  0.0070,  0.8035,  0.7975,  0.4370, -0.0293, -0.4753,  0.6664,
          0.3307]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
842000 loss tensor(0.0678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0360, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2225,  0.9007,  0.3842,  2.2341, -1.1408, -1.5798, -0.7310,  0.5714,
          0.3090,  0.0152, -0.2500,  0.9000,  0.2808,  0.8443,  0.8593, -0.3831,
         -0.1707,  0.0618,  1.2006,  0.2554,  0.3545,  0.1963,  0.1481,  0.5964,
          0.0526,  0.5681, -0.1340,  1.1926,  0.1553,  0.4882,  0.9591,  0.9964,
          0.2663,  0.2400, -0.0894,  0.7374,  0.4147,  0.2914,  0.7629,  0.2977,
          0.6843,  0.0061,  0.8038,  0.7969,  0.4360, -0.0308, -0.4742,  0.6677,
          0.3322]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
843000 loss tensor(0.0595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2235,  0.9010,  0.3859,  2.2343, -1.1416, -1.5785, -0.7302,  0.5718,
          0.3096,  0.0162, -0.2498,  0.9011,  0.2799,  0.8446,  0.8584, -0.3841,
         -0.1714,  0.0610,  1.1996,  0.2547,  0.3550,  0.1958,  0.1469,  0.5956,
          0.0533,  0.5682, -0.1335,  1.1914,  0.1538,  0.4868,  0.9606,  0.9965,
          0.2676,  0.2409, -0.0897,  0.7360,  0.4144,  0.2904,  0.7623,  0.2984,
          0.6832,  0.0060,  0.8021,  0.7963,  0.4377, -0.0299, -0.4749,  0.6665,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
844000 loss tensor(0.0622, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0328, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2245,  0.9003,  0.3860,  2.2325, -1.1441, -1.5799, -0.7309,  0.5714,
          0.3098,  0.0163, -0.2514,  0.9009,  0.2801,  0.8436,  0.8595, -0.3836,
         -0.1707,  0.0613,  1.1999,  0.2550,  0.3547,  0.1966,  0.1475,  0.5957,
          0.0529,  0.5679, -0.1333,  1.1917,  0.1543,  0.4880,  0.9597,  0.9964,
          0.2664,  0.2407, -0.0892,  0.7357,  0.4134,  0.2902,  0.7622,  0.2971,
          0.6830,  0.0062,  0.8026,  0.7961,  0.4375, -0.0304, -0.4740,  0.6662,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
845000 loss tensor(0.0549, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0270, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2246,  0.8999,  0.3851,  2.2305, -1.1456, -1.5786, -0.7310,  0.5696,
          0.3098,  0.0162, -0.2516,  0.9001,  0.2802,  0.8426,  0.8596, -0.3834,
         -0.1709,  0.0626,  1.2005,  0.2554,  0.3543,  0.1968,  0.1472,  0.5957,
          0.0532,  0.5671, -0.1330,  1.1916,  0.1545,  0.4884,  0.9591,  0.9961,
          0.2683,  0.2404, -0.0909,  0.7357,  0.4135,  0.2900,  0.7624,  0.2982,
          0.6826,  0.0059,  0.8030,  0.7958,  0.4372, -0.0310, -0.4735,  0.6650,
          0.3327]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
846000 loss tensor(0.0655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0349, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2235,  0.8977,  0.3854,  2.2282, -1.1456, -1.5788, -0.7326,  0.5687,
          0.3082,  0.0147, -0.2525,  0.8984,  0.2797,  0.8418,  0.8594, -0.3830,
         -0.1694,  0.0613,  1.1992,  0.2552,  0.3536,  0.1960,  0.1470,  0.5956,
          0.0512,  0.5664, -0.1338,  1.1916,  0.1547,  0.4877,  0.9590,  0.9949,
          0.2684,  0.2400, -0.0897,  0.7364,  0.4151,  0.2901,  0.7641,  0.2986,
          0.6837,  0.0066,  0.8039,  0.7965,  0.4371, -0.0319, -0.4737,  0.6670,
          0.3327]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
847000 loss tensor(0.0577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2253,  0.8987,  0.3870,  2.2286, -1.1464, -1.5788, -0.7329,  0.5695,
          0.3086,  0.0147, -0.2537,  0.8987,  0.2782,  0.8428,  0.8587, -0.3836,
         -0.1691,  0.0612,  1.1989,  0.2536,  0.3533,  0.1949,  0.1464,  0.5949,
          0.0526,  0.5675, -0.1340,  1.1896,  0.1530,  0.4872,  0.9594,  0.9942,
          0.2674,  0.2410, -0.0888,  0.7357,  0.4151,  0.2904,  0.7641,  0.2974,
          0.6829,  0.0075,  0.8031,  0.7971,  0.4386, -0.0307, -0.4748,  0.6666,
          0.3308]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
848000 loss tensor(0.0695, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0385, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2265,  0.8982,  0.3870,  2.2260, -1.1475, -1.5782, -0.7326,  0.5694,
          0.3084,  0.0146, -0.2537,  0.8984,  0.2784,  0.8423,  0.8589, -0.3834,
         -0.1692,  0.0610,  1.1996,  0.2546,  0.3526,  0.1946,  0.1459,  0.5954,
          0.0523,  0.5661, -0.1338,  1.1894,  0.1528,  0.4871,  0.9587,  0.9935,
          0.2682,  0.2410, -0.0888,  0.7359,  0.4152,  0.2901,  0.7643,  0.2981,
          0.6829,  0.0063,  0.8032,  0.7962,  0.4389, -0.0311, -0.4748,  0.6667,
          0.3311]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
849000 loss tensor(0.0613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2278,  0.8983,  0.3876,  2.2245, -1.1490, -1.5787, -0.7321,  0.5686,
          0.3082,  0.0156, -0.2547,  0.8986,  0.2790,  0.8402,  0.8597, -0.3827,
         -0.1702,  0.0602,  1.1997,  0.2558,  0.3524,  0.1953,  0.1465,  0.5956,
          0.0532,  0.5661, -0.1329,  1.1902,  0.1537,  0.4887,  0.9579,  0.9932,
          0.2680,  0.2404, -0.0894,  0.7357,  0.4136,  0.2903,  0.7631,  0.2977,
          0.6823,  0.0064,  0.8028,  0.7956,  0.4374, -0.0327, -0.4739,  0.6661,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
850000 loss tensor(0.0710, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0399, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2271,  0.8968,  0.3885,  2.2230, -1.1494, -1.5777, -0.7333,  0.5670,
          0.3074,  0.0143, -0.2545,  0.8969,  0.2784,  0.8407,  0.8590, -0.3831,
         -0.1696,  0.0608,  1.1991,  0.2555,  0.3527,  0.1949,  0.1454,  0.5947,
          0.0518,  0.5659, -0.1327,  1.1888,  0.1527,  0.4879,  0.9583,  0.9924,
          0.2696,  0.2411, -0.0890,  0.7358,  0.4150,  0.2900,  0.7647,  0.2991,
          0.6824,  0.0064,  0.8035,  0.7961,  0.4388, -0.0320, -0.4745,  0.6658,
          0.3312]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
851000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0353, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2278,  0.8967,  0.3884,  2.2213, -1.1511, -1.5778, -0.7336,  0.5661,
          0.3076,  0.0143, -0.2551,  0.8965,  0.2782,  0.8390,  0.8596, -0.3825,
         -0.1686,  0.0610,  1.1992,  0.2553,  0.3525,  0.1941,  0.1464,  0.5943,
          0.0522,  0.5648, -0.1329,  1.1893,  0.1532,  0.4880,  0.9585,  0.9928,
          0.2687,  0.2409, -0.0895,  0.7353,  0.4148,  0.2894,  0.7645,  0.2984,
          0.6825,  0.0069,  0.8037,  0.7960,  0.4382, -0.0329, -0.4734,  0.6658,
          0.3324]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
852000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0347, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2278,  0.8967,  0.3892,  2.2218, -1.1513, -1.5786, -0.7323,  0.5664,
          0.3082,  0.0149, -0.2566,  0.8972,  0.2779,  0.8393,  0.8587, -0.3829,
         -0.1703,  0.0604,  1.1991,  0.2544,  0.3518,  0.1950,  0.1455,  0.5951,
          0.0538,  0.5659, -0.1326,  1.1878,  0.1523,  0.4877,  0.9578,  0.9922,
          0.2687,  0.2425, -0.0893,  0.7348,  0.4137,  0.2890,  0.7648,  0.2977,
          0.6817,  0.0065,  0.8029,  0.7953,  0.4390, -0.0326, -0.4749,  0.6663,
          0.3304]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
853000 loss tensor(0.0720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0403, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2293,  0.8977,  0.3901,  2.2202, -1.1532, -1.5787, -0.7319,  0.5663,
          0.3084,  0.0160, -0.2571,  0.8973,  0.2766,  0.8387,  0.8591, -0.3831,
         -0.1703,  0.0603,  1.1993,  0.2551,  0.3518,  0.1950,  0.1450,  0.5950,
          0.0544,  0.5656, -0.1332,  1.1878,  0.1520,  0.4883,  0.9574,  0.9919,
          0.2686,  0.2424, -0.0902,  0.7338,  0.4133,  0.2882,  0.7641,  0.2973,
          0.6810,  0.0074,  0.8020,  0.7952,  0.4392, -0.0328, -0.4745,  0.6649,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
854000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2287,  0.8955,  0.3905,  2.2174, -1.1545, -1.5781, -0.7332,  0.5664,
          0.3068,  0.0144, -0.2577,  0.8957,  0.2771,  0.8382,  0.8589, -0.3829,
         -0.1691,  0.0597,  1.1992,  0.2554,  0.3505,  0.1948,  0.1446,  0.5959,
          0.0532,  0.5646, -0.1332,  1.1871,  0.1520,  0.4880,  0.9572,  0.9907,
          0.2694,  0.2418, -0.0885,  0.7349,  0.4143,  0.2895,  0.7657,  0.2978,
          0.6817,  0.0068,  0.8029,  0.7961,  0.4393, -0.0331, -0.4745,  0.6657,
          0.3312]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
855000 loss tensor(0.0595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2307,  0.8966,  0.3922,  2.2180, -1.1556, -1.5765, -0.7326,  0.5656,
          0.3078,  0.0152, -0.2570,  0.8963,  0.2764,  0.8370,  0.8588, -0.3834,
         -0.1694,  0.0591,  1.1989,  0.2559,  0.3515,  0.1950,  0.1440,  0.5956,
          0.0547,  0.5640, -0.1331,  1.1870,  0.1515,  0.4880,  0.9578,  0.9920,
          0.2702,  0.2420, -0.0896,  0.7339,  0.4135,  0.2880,  0.7645,  0.2982,
          0.6803,  0.0064,  0.8020,  0.7942,  0.4398, -0.0333, -0.4743,  0.6649,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
856000 loss tensor(0.0725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0397, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2316,  0.8957,  0.3914,  2.2155, -1.1572, -1.5772, -0.7337,  0.5634,
          0.3070,  0.0158, -0.2594,  0.8952,  0.2779,  0.8360,  0.8600, -0.3823,
         -0.1698,  0.0605,  1.1985,  0.2555,  0.3507,  0.1954,  0.1450,  0.5940,
          0.0526,  0.5642, -0.1319,  1.1875,  0.1522,  0.4886,  0.9567,  0.9903,
          0.2697,  0.2423, -0.0912,  0.7341,  0.4126,  0.2880,  0.7646,  0.2974,
          0.6810,  0.0067,  0.8023,  0.7944,  0.4390, -0.0345, -0.4731,  0.6643,
          0.3324]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
857000 loss tensor(0.0561, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2321,  0.8947,  0.3915,  2.2147, -1.1586, -1.5780, -0.7337,  0.5638,
          0.3066,  0.0146, -0.2599,  0.8946,  0.2760,  0.8362,  0.8602, -0.3819,
         -0.1687,  0.0590,  1.1971,  0.2562,  0.3507,  0.1937,  0.1450,  0.5949,
          0.0535,  0.5635, -0.1321,  1.1867,  0.1517,  0.4886,  0.9562,  0.9901,
          0.2703,  0.2418, -0.0894,  0.7344,  0.4138,  0.2887,  0.7658,  0.2971,
          0.6809,  0.0070,  0.8020,  0.7956,  0.4399, -0.0343, -0.4734,  0.6652,
          0.3326]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
858000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2312,  0.8950,  0.3927,  2.2120, -1.1585, -1.5776, -0.7330,  0.5632,
          0.3065,  0.0142, -0.2600,  0.8946,  0.2751,  0.8356,  0.8591, -0.3821,
         -0.1694,  0.0596,  1.1980,  0.2555,  0.3507,  0.1956,  0.1446,  0.5944,
          0.0540,  0.5641, -0.1338,  1.1857,  0.1513,  0.4878,  0.9574,  0.9897,
          0.2699,  0.2431, -0.0902,  0.7332,  0.4135,  0.2881,  0.7669,  0.2975,
          0.6803,  0.0082,  0.8024,  0.7953,  0.4400, -0.0347, -0.4746,  0.6643,
          0.3311]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
859000 loss tensor(0.0599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2343,  0.8950,  0.3932,  2.2114, -1.1606, -1.5777, -0.7327,  0.5626,
          0.3072,  0.0149, -0.2607,  0.8949,  0.2752,  0.8346,  0.8591, -0.3821,
         -0.1695,  0.0589,  1.1986,  0.2555,  0.3501,  0.1955,  0.1441,  0.5957,
          0.0544,  0.5642, -0.1327,  1.1855,  0.1508,  0.4880,  0.9576,  0.9903,
          0.2702,  0.2433, -0.0905,  0.7330,  0.4126,  0.2876,  0.7659,  0.2966,
          0.6793,  0.0071,  0.8015,  0.7946,  0.4405, -0.0348, -0.4743,  0.6643,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
860000 loss tensor(0.0697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0385, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2350,  0.8943,  0.3940,  2.2107, -1.1616, -1.5777, -0.7340,  0.5625,
          0.3064,  0.0154, -0.2621,  0.8941,  0.2762,  0.8334,  0.8607, -0.3812,
         -0.1690,  0.0582,  1.1988,  0.2566,  0.3493,  0.1933,  0.1445,  0.5953,
          0.0541,  0.5629, -0.1316,  1.1862,  0.1514,  0.4891,  0.9550,  0.9890,
          0.2697,  0.2426, -0.0896,  0.7336,  0.4125,  0.2874,  0.7653,  0.2963,
          0.6796,  0.0073,  0.8016,  0.7945,  0.4395, -0.0361, -0.4732,  0.6648,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
861000 loss tensor(0.0577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2346,  0.8930,  0.3926,  2.2072, -1.1632, -1.5779, -0.7341,  0.5617,
          0.3063,  0.0149, -0.2628,  0.8932,  0.2744,  0.8326,  0.8606, -0.3808,
         -0.1683,  0.0582,  1.1988,  0.2563,  0.3497,  0.1932,  0.1444,  0.5952,
          0.0537,  0.5625, -0.1327,  1.1856,  0.1514,  0.4892,  0.9564,  0.9884,
          0.2697,  0.2430, -0.0900,  0.7328,  0.4132,  0.2876,  0.7661,  0.2962,
          0.6802,  0.0086,  0.8023,  0.7954,  0.4398, -0.0364, -0.4733,  0.6644,
          0.3326]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
862000 loss tensor(0.0672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0379, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2354,  0.8948,  0.3956,  2.2076, -1.1645, -1.5771, -0.7336,  0.5621,
          0.3066,  0.0156, -0.2626,  0.8936,  0.2745,  0.8333,  0.8592, -0.3819,
         -0.1697,  0.0572,  1.1972,  0.2566,  0.3493,  0.1930,  0.1430,  0.5952,
          0.0548,  0.5631, -0.1317,  1.1841,  0.1497,  0.4883,  0.9561,  0.9887,
          0.2705,  0.2438, -0.0887,  0.7324,  0.4125,  0.2868,  0.7654,  0.2970,
          0.6786,  0.0075,  0.8006,  0.7938,  0.4412, -0.0350, -0.4741,  0.6644,
          0.3318]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
863000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2361,  0.8925,  0.3943,  2.2057, -1.1646, -1.5765, -0.7347,  0.5603,
          0.3058,  0.0142, -0.2630,  0.8920,  0.2733,  0.8322,  0.8594, -0.3818,
         -0.1678,  0.0586,  1.1977,  0.2552,  0.3497,  0.1932,  0.1431,  0.5938,
          0.0541,  0.5617, -0.1318,  1.1839,  0.1500,  0.4879,  0.9567,  0.9882,
          0.2718,  0.2429, -0.0893,  0.7324,  0.4136,  0.2866,  0.7670,  0.2979,
          0.6796,  0.0082,  0.8023,  0.7952,  0.4413, -0.0360, -0.4739,  0.6643,
          0.3318]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
864000 loss tensor(0.0699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2360,  0.8916,  0.3946,  2.2040, -1.1660, -1.5777, -0.7349,  0.5600,
          0.3053,  0.0142, -0.2643,  0.8915,  0.2740,  0.8315,  0.8598, -0.3810,
         -0.1677,  0.0586,  1.1979,  0.2560,  0.3480,  0.1935,  0.1434,  0.5949,
          0.0536,  0.5616, -0.1327,  1.1839,  0.1503,  0.4889,  0.9547,  0.9869,
          0.2707,  0.2433, -0.0890,  0.7326,  0.4137,  0.2866,  0.7674,  0.2965,
          0.6796,  0.0084,  0.8020,  0.7946,  0.4410, -0.0366, -0.4738,  0.6645,
          0.3311]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
865000 loss tensor(0.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2370,  0.8916,  0.3959,  2.2018, -1.1669, -1.5759, -0.7350,  0.5587,
          0.3050,  0.0140, -0.2638,  0.8911,  0.2740,  0.8311,  0.8596, -0.3816,
         -0.1682,  0.0573,  1.1980,  0.2565,  0.3489,  0.1926,  0.1428,  0.5940,
          0.0534,  0.5611, -0.1309,  1.1833,  0.1497,  0.4883,  0.9550,  0.9868,
          0.2720,  0.2433, -0.0899,  0.7326,  0.4137,  0.2864,  0.7676,  0.2977,
          0.6793,  0.0077,  0.8020,  0.7945,  0.4411, -0.0369, -0.4740,  0.6640,
          0.3314]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
866000 loss tensor(0.0723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0402, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2374,  0.8919,  0.3963,  2.2010, -1.1679, -1.5770, -0.7347,  0.5591,
          0.3045,  0.0145, -0.2653,  0.8910,  0.2731,  0.8293,  0.8601, -0.3807,
         -0.1675,  0.0572,  1.1975,  0.2564,  0.3471,  0.1938,  0.1435,  0.5958,
          0.0544,  0.5608, -0.1326,  1.1840,  0.1505,  0.4893,  0.9556,  0.9857,
          0.2713,  0.2433, -0.0893,  0.7326,  0.4132,  0.2873,  0.7675,  0.2962,
          0.6791,  0.0081,  0.8018,  0.7947,  0.4403, -0.0379, -0.4731,  0.6645,
          0.3320]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
867000 loss tensor(0.0748, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0415, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2386,  0.8914,  0.3978,  2.2010, -1.1682, -1.5766, -0.7352,  0.5586,
          0.3057,  0.0139, -0.2658,  0.8905,  0.2721,  0.8294,  0.8598, -0.3815,
         -0.1672,  0.0569,  1.1976,  0.2568,  0.3480,  0.1917,  0.1426,  0.5948,
          0.0549,  0.5604, -0.1314,  1.1827,  0.1494,  0.4880,  0.9557,  0.9865,
          0.2715,  0.2435, -0.0880,  0.7315,  0.4131,  0.2856,  0.7677,  0.2961,
          0.6784,  0.0090,  0.8017,  0.7941,  0.4415, -0.0372, -0.4739,  0.6632,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
868000 loss tensor(0.0636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2389,  0.8912,  0.3974,  2.1981, -1.1705, -1.5771, -0.7354,  0.5577,
          0.3045,  0.0142, -0.2671,  0.8897,  0.2732,  0.8283,  0.8608, -0.3805,
         -0.1676,  0.0557,  1.1970,  0.2568,  0.3471,  0.1907,  0.1430,  0.5936,
          0.0538,  0.5595, -0.1317,  1.1832,  0.1500,  0.4889,  0.9539,  0.9854,
          0.2721,  0.2430, -0.0886,  0.7319,  0.4134,  0.2863,  0.7678,  0.2973,
          0.6790,  0.0086,  0.8018,  0.7947,  0.4410, -0.0384, -0.4729,  0.6637,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
869000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0347, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2396,  0.8906,  0.3978,  2.1983, -1.1707, -1.5762, -0.7349,  0.5576,
          0.3053,  0.0145, -0.2672,  0.8905,  0.2723,  0.8286,  0.8603, -0.3809,
         -0.1681,  0.0570,  1.1972,  0.2567,  0.3468,  0.1941,  0.1424,  0.5945,
          0.0548,  0.5611, -0.1334,  1.1818,  0.1488,  0.4886,  0.9551,  0.9845,
          0.2726,  0.2447, -0.0890,  0.7306,  0.4122,  0.2847,  0.7681,  0.2964,
          0.6772,  0.0093,  0.8009,  0.7936,  0.4420, -0.0380, -0.4738,  0.6632,
          0.3317]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
870000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2410,  0.8901,  0.3990,  2.1964, -1.1740, -1.5771, -0.7349,  0.5565,
          0.3042,  0.0146, -0.2686,  0.8893,  0.2726,  0.8270,  0.8614, -0.3797,
         -0.1681,  0.0562,  1.1967,  0.2577,  0.3467,  0.1922,  0.1430,  0.5937,
          0.0540,  0.5603, -0.1316,  1.1825,  0.1496,  0.4893,  0.9539,  0.9843,
          0.2719,  0.2440, -0.0896,  0.7318,  0.4121,  0.2858,  0.7676,  0.2958,
          0.6778,  0.0092,  0.8007,  0.7939,  0.4415, -0.0391, -0.4727,  0.6631,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
871000 loss tensor(0.0731, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0410, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2412,  0.8904,  0.3996,  2.1946, -1.1755, -1.5759, -0.7354,  0.5568,
          0.3048,  0.0149, -0.2677,  0.8896,  0.2715,  0.8276,  0.8606, -0.3814,
         -0.1676,  0.0556,  1.1966,  0.2561,  0.3474,  0.1922,  0.1413,  0.5934,
          0.0544,  0.5602, -0.1310,  1.1810,  0.1480,  0.4880,  0.9550,  0.9850,
          0.2732,  0.2446, -0.0886,  0.7304,  0.4121,  0.2838,  0.7674,  0.2971,
          0.6769,  0.0086,  0.8000,  0.7933,  0.4430, -0.0381, -0.4729,  0.6627,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
872000 loss tensor(0.0595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2414,  0.8895,  0.3998,  2.1935, -1.1754, -1.5754, -0.7359,  0.5557,
          0.3042,  0.0140, -0.2682,  0.8886,  0.2713,  0.8271,  0.8600, -0.3808,
         -0.1673,  0.0564,  1.1968,  0.2563,  0.3472,  0.1916,  0.1412,  0.5931,
          0.0549,  0.5591, -0.1312,  1.1803,  0.1479,  0.4881,  0.9546,  0.9838,
          0.2733,  0.2443, -0.0894,  0.7306,  0.4131,  0.2849,  0.7690,  0.2970,
          0.6774,  0.0089,  0.8011,  0.7939,  0.4430, -0.0386, -0.4737,  0.6632,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
873000 loss tensor(0.0668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0350, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2418,  0.8885,  0.3997,  2.1920, -1.1766, -1.5754, -0.7366,  0.5541,
          0.3037,  0.0136, -0.2690,  0.8881,  0.2713,  0.8260,  0.8602, -0.3804,
         -0.1676,  0.0553,  1.1959,  0.2575,  0.3472,  0.1909,  0.1415,  0.5929,
          0.0540,  0.5584, -0.1309,  1.1801,  0.1480,  0.4882,  0.9542,  0.9841,
          0.2737,  0.2444, -0.0890,  0.7311,  0.4131,  0.2848,  0.7687,  0.2970,
          0.6770,  0.0094,  0.8007,  0.7939,  0.4432, -0.0388, -0.4733,  0.6638,
          0.3319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
874000 loss tensor(0.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0393, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2434,  0.8888,  0.4009,  2.1893, -1.1777, -1.5765, -0.7354,  0.5549,
          0.3036,  0.0140, -0.2702,  0.8877,  0.2715,  0.8250,  0.8606, -0.3799,
         -0.1679,  0.0568,  1.1976,  0.2571,  0.3454,  0.1924,  0.1415,  0.5936,
          0.0548,  0.5585, -0.1325,  1.1802,  0.1483,  0.4897,  0.9533,  0.9821,
          0.2725,  0.2456, -0.0894,  0.7305,  0.4124,  0.2849,  0.7691,  0.2965,
          0.6772,  0.0088,  0.8012,  0.7942,  0.4428, -0.0399, -0.4733,  0.6631,
          0.3319]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
875000 loss tensor(0.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2437,  0.8877,  0.4008,  2.1887, -1.1791, -1.5755, -0.7357,  0.5543,
          0.3038,  0.0138, -0.2705,  0.8875,  0.2696,  0.8244,  0.8596, -0.3809,
         -0.1669,  0.0556,  1.1956,  0.2561,  0.3469,  0.1905,  0.1405,  0.5932,
          0.0552,  0.5579, -0.1303,  1.1792,  0.1476,  0.4884,  0.9544,  0.9832,
          0.2741,  0.2451, -0.0893,  0.7298,  0.4127,  0.2838,  0.7690,  0.2970,
          0.6767,  0.0094,  0.8004,  0.7939,  0.4434, -0.0395, -0.4733,  0.6629,
          0.3318]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
876000 loss tensor(0.0659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2440,  0.8884,  0.4024,  2.1887, -1.1796, -1.5766, -0.7354,  0.5549,
          0.3026,  0.0138, -0.2728,  0.8866,  0.2707,  0.8238,  0.8606, -0.3797,
         -0.1672,  0.0542,  1.1969,  0.2580,  0.3445,  0.1908,  0.1418,  0.5950,
          0.0552,  0.5582, -0.1311,  1.1795,  0.1481,  0.4893,  0.9522,  0.9817,
          0.2725,  0.2455, -0.0886,  0.7308,  0.4123,  0.2851,  0.7694,  0.2951,
          0.6766,  0.0093,  0.8006,  0.7936,  0.4431, -0.0403, -0.4734,  0.6642,
          0.3318]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
877000 loss tensor(0.0603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2463,  0.8866,  0.4026,  2.1866, -1.1799, -1.5747, -0.7367,  0.5532,
          0.3024,  0.0139, -0.2716,  0.8863,  0.2703,  0.8234,  0.8600, -0.3800,
         -0.1671,  0.0541,  1.1959,  0.2580,  0.3458,  0.1906,  0.1405,  0.5924,
          0.0549,  0.5570, -0.1303,  1.1787,  0.1474,  0.4883,  0.9538,  0.9814,
          0.2742,  0.2448, -0.0895,  0.7304,  0.4127,  0.2845,  0.7696,  0.2970,
          0.6764,  0.0093,  0.8003,  0.7938,  0.4435, -0.0404, -0.4730,  0.6631,
          0.3316]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
878000 loss tensor(0.0633, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2462,  0.8868,  0.4024,  2.1851, -1.1826, -1.5753, -0.7379,  0.5525,
          0.3032,  0.0137, -0.2725,  0.8858,  0.2703,  0.8224,  0.8611, -0.3796,
         -0.1661,  0.0542,  1.1962,  0.2572,  0.3447,  0.1900,  0.1412,  0.5924,
          0.0545,  0.5557, -0.1303,  1.1792,  0.1479,  0.4894,  0.9521,  0.9813,
          0.2742,  0.2444, -0.0889,  0.7298,  0.4121,  0.2835,  0.7695,  0.2964,
          0.6768,  0.0096,  0.8008,  0.7937,  0.4432, -0.0413, -0.4721,  0.6626,
          0.3322]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
879000 loss tensor(0.0679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2470,  0.8859,  0.4034,  2.1838, -1.1824, -1.5753, -0.7369,  0.5522,
          0.3035,  0.0145, -0.2726,  0.8862,  0.2695,  0.8221,  0.8602, -0.3804,
         -0.1667,  0.0548,  1.1956,  0.2576,  0.3453,  0.1898,  0.1401,  0.5929,
          0.0553,  0.5570, -0.1294,  1.1783,  0.1468,  0.4884,  0.9537,  0.9817,
          0.2748,  0.2456, -0.0890,  0.7288,  0.4118,  0.2824,  0.7692,  0.2968,
          0.6752,  0.0094,  0.7999,  0.7930,  0.4442, -0.0407, -0.4729,  0.6617,
          0.3320]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
880000 loss tensor(0.0581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2461,  0.8861,  0.4029,  2.1814, -1.1842, -1.5761, -0.7371,  0.5517,
          0.3024,  0.0137, -0.2755,  0.8847,  0.2691,  0.8205,  0.8614, -0.3783,
         -0.1666,  0.0540,  1.1957,  0.2577,  0.3445,  0.1903,  0.1415,  0.5926,
          0.0543,  0.5565, -0.1307,  1.1788,  0.1478,  0.4892,  0.9523,  0.9798,
          0.2737,  0.2456, -0.0884,  0.7294,  0.4121,  0.2833,  0.7701,  0.2951,
          0.6761,  0.0101,  0.8007,  0.7931,  0.4430, -0.0423, -0.4720,  0.6621,
          0.3329]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
881000 loss tensor(0.0725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0404, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2479,  0.8849,  0.4030,  2.1811, -1.1851, -1.5760, -0.7371,  0.5512,
          0.3027,  0.0133, -0.2755,  0.8846,  0.2691,  0.8204,  0.8615, -0.3788,
         -0.1661,  0.0543,  1.1961,  0.2582,  0.3435,  0.1911,  0.1411,  0.5933,
          0.0551,  0.5558, -0.1311,  1.1782,  0.1473,  0.4893,  0.9514,  0.9794,
          0.2745,  0.2451, -0.0894,  0.7289,  0.4117,  0.2829,  0.7705,  0.2955,
          0.6759,  0.0097,  0.8004,  0.7934,  0.4437, -0.0422, -0.4723,  0.6619,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
882000 loss tensor(0.0703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2511,  0.8860,  0.4060,  2.1817, -1.1866, -1.5739, -0.7367,  0.5508,
          0.3030,  0.0142, -0.2737,  0.8852,  0.2690,  0.8203,  0.8605, -0.3798,
         -0.1668,  0.0536,  1.1958,  0.2588,  0.3441,  0.1903,  0.1394,  0.5935,
          0.0559,  0.5559, -0.1295,  1.1769,  0.1460,  0.4889,  0.9528,  0.9804,
          0.2750,  0.2454, -0.0898,  0.7282,  0.4112,  0.2830,  0.7694,  0.2962,
          0.6741,  0.0093,  0.7990,  0.7919,  0.4446, -0.0415, -0.4728,  0.6617,
          0.3324]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
883000 loss tensor(0.0564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0264, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0271, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2487,  0.8854,  0.4049,  2.1786, -1.1885, -1.5759, -0.7368,  0.5498,
          0.3022,  0.0149, -0.2764,  0.8845,  0.2683,  0.8189,  0.8616, -0.3784,
         -0.1666,  0.0532,  1.1959,  0.2581,  0.3439,  0.1904,  0.1406,  0.5943,
          0.0559,  0.5558, -0.1303,  1.1775,  0.1467,  0.4897,  0.9514,  0.9792,
          0.2739,  0.2462, -0.0889,  0.7282,  0.4112,  0.2822,  0.7698,  0.2952,
          0.6749,  0.0105,  0.7997,  0.7926,  0.4438, -0.0428, -0.4722,  0.6613,
          0.3329]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
884000 loss tensor(0.0634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0332, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2498,  0.8847,  0.4056,  2.1767, -1.1889, -1.5762, -0.7380,  0.5490,
          0.3017,  0.0136, -0.2772,  0.8832,  0.2681,  0.8182,  0.8618, -0.3782,
         -0.1661,  0.0543,  1.1956,  0.2576,  0.3438,  0.1888,  0.1408,  0.5928,
          0.0547,  0.5550, -0.1294,  1.1772,  0.1468,  0.4898,  0.9515,  0.9782,
          0.2748,  0.2457, -0.0905,  0.7286,  0.4115,  0.2828,  0.7707,  0.2956,
          0.6751,  0.0107,  0.8000,  0.7928,  0.4439, -0.0434, -0.4720,  0.6620,
          0.3327]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
885000 loss tensor(0.0627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2507,  0.8843,  0.4057,  2.1761, -1.1897, -1.5764, -0.7370,  0.5498,
          0.3023,  0.0134, -0.2782,  0.8833,  0.2670,  0.8187,  0.8608, -0.3787,
         -0.1663,  0.0539,  1.1947,  0.2575,  0.3432,  0.1891,  0.1399,  0.5925,
          0.0561,  0.5561, -0.1310,  1.1757,  0.1455,  0.4884,  0.9517,  0.9782,
          0.2744,  0.2471, -0.0880,  0.7274,  0.4117,  0.2818,  0.7711,  0.2945,
          0.6744,  0.0112,  0.7998,  0.7927,  0.4450, -0.0425, -0.4730,  0.6618,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
886000 loss tensor(0.0629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2524,  0.8846,  0.4084,  2.1753, -1.1914, -1.5744, -0.7384,  0.5494,
          0.3013,  0.0132, -0.2765,  0.8828,  0.2672,  0.8179,  0.8608, -0.3790,
         -0.1654,  0.0521,  1.1954,  0.2587,  0.3433,  0.1883,  0.1393,  0.5933,
          0.0562,  0.5547, -0.1291,  1.1753,  0.1454,  0.4885,  0.9516,  0.9781,
          0.2754,  0.2455, -0.0888,  0.7279,  0.4120,  0.2824,  0.7711,  0.2954,
          0.6743,  0.0109,  0.7994,  0.7929,  0.4457, -0.0425, -0.4727,  0.6632,
          0.3326]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
887000 loss tensor(0.0633, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2520,  0.8828,  0.4070,  2.1737, -1.1922, -1.5758, -0.7375,  0.5487,
          0.3008,  0.0139, -0.2790,  0.8823,  0.2666,  0.8160,  0.8618, -0.3778,
         -0.1659,  0.0525,  1.1960,  0.2592,  0.3419,  0.1882,  0.1402,  0.5941,
          0.0563,  0.5534, -0.1294,  1.1763,  0.1465,  0.4897,  0.9515,  0.9775,
          0.2745,  0.2466, -0.0889,  0.7278,  0.4110,  0.2826,  0.7709,  0.2948,
          0.6747,  0.0111,  0.7996,  0.7929,  0.4442, -0.0443, -0.4719,  0.6618,
          0.3329]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
888000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2530,  0.8844,  0.4086,  2.1724, -1.1940, -1.5749, -0.7385,  0.5481,
          0.3005,  0.0143, -0.2791,  0.8821,  0.2676,  0.8155,  0.8619, -0.3780,
         -0.1657,  0.0515,  1.1952,  0.2595,  0.3421,  0.1880,  0.1397,  0.5932,
          0.0566,  0.5535, -0.1288,  1.1758,  0.1458,  0.4899,  0.9512,  0.9775,
          0.2751,  0.2462, -0.0879,  0.7277,  0.4110,  0.2821,  0.7702,  0.2950,
          0.6739,  0.0098,  0.7988,  0.7917,  0.4452, -0.0441, -0.4714,  0.6621,
          0.3330]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
889000 loss tensor(0.0706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0400, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2543,  0.8839,  0.4097,  2.1712, -1.1950, -1.5752, -0.7386,  0.5476,
          0.3019,  0.0144, -0.2806,  0.8823,  0.2661,  0.8147,  0.8619, -0.3777,
         -0.1659,  0.0524,  1.1938,  0.2581,  0.3429,  0.1887,  0.1398,  0.5922,
          0.0566,  0.5545, -0.1292,  1.1756,  0.1456,  0.4896,  0.9518,  0.9778,
          0.2753,  0.2469, -0.0888,  0.7265,  0.4106,  0.2810,  0.7709,  0.2948,
          0.6733,  0.0109,  0.7987,  0.7920,  0.4450, -0.0445, -0.4714,  0.6604,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
890000 loss tensor(0.0652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2546,  0.8832,  0.4105,  2.1708, -1.1964, -1.5740, -0.7379,  0.5464,
          0.3011,  0.0142, -0.2797,  0.8821,  0.2665,  0.8155,  0.8616, -0.3785,
         -0.1668,  0.0514,  1.1941,  0.2588,  0.3427,  0.1888,  0.1388,  0.5922,
          0.0566,  0.5541, -0.1284,  1.1744,  0.1446,  0.4892,  0.9510,  0.9768,
          0.2766,  0.2468, -0.0890,  0.7268,  0.4105,  0.2812,  0.7706,  0.2957,
          0.6726,  0.0105,  0.7981,  0.7914,  0.4459, -0.0437, -0.4715,  0.6607,
          0.3328]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
891000 loss tensor(0.0570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0275, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2554,  0.8828,  0.4107,  2.1688, -1.1967, -1.5751, -0.7388,  0.5460,
          0.2999,  0.0139, -0.2815,  0.8806,  0.2668,  0.8134,  0.8622, -0.3774,
         -0.1658,  0.0516,  1.1953,  0.2594,  0.3410,  0.1888,  0.1391,  0.5925,
          0.0574,  0.5533, -0.1294,  1.1748,  0.1454,  0.4906,  0.9503,  0.9755,
          0.2748,  0.2469, -0.0890,  0.7271,  0.4108,  0.2817,  0.7714,  0.2940,
          0.6733,  0.0104,  0.7992,  0.7922,  0.4449, -0.0454, -0.4714,  0.6616,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
892000 loss tensor(0.0625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2560,  0.8816,  0.4110,  2.1666, -1.1988, -1.5743, -0.7388,  0.5458,
          0.2995,  0.0140, -0.2817,  0.8800,  0.2665,  0.8144,  0.8624, -0.3777,
         -0.1661,  0.0510,  1.1941,  0.2594,  0.3413,  0.1878,  0.1387,  0.5909,
          0.0554,  0.5523, -0.1281,  1.1737,  0.1446,  0.4897,  0.9487,  0.9747,
          0.2765,  0.2469, -0.0879,  0.7276,  0.4110,  0.2816,  0.7715,  0.2958,
          0.6730,  0.0105,  0.7989,  0.7917,  0.4462, -0.0446, -0.4715,  0.6612,
          0.3334]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
893000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2552,  0.8810,  0.4103,  2.1645, -1.1992, -1.5744, -0.7394,  0.5443,
          0.2999,  0.0133, -0.2831,  0.8795,  0.2661,  0.8126,  0.8622, -0.3774,
         -0.1648,  0.0522,  1.1943,  0.2586,  0.3411,  0.1884,  0.1391,  0.5917,
          0.0561,  0.5530, -0.1292,  1.1739,  0.1450,  0.4894,  0.9495,  0.9747,
          0.2765,  0.2469, -0.0893,  0.7266,  0.4116,  0.2808,  0.7725,  0.2951,
          0.6733,  0.0110,  0.7996,  0.7917,  0.4452, -0.0460, -0.4714,  0.6605,
          0.3333]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
894000 loss tensor(0.0628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2558,  0.8819,  0.4120,  2.1623, -1.1989, -1.5747, -0.7383,  0.5454,
          0.2996,  0.0136, -0.2835,  0.8793,  0.2664,  0.8120,  0.8610, -0.3775,
         -0.1663,  0.0519,  1.1946,  0.2593,  0.3400,  0.1895,  0.1383,  0.5917,
          0.0567,  0.5534, -0.1297,  1.1731,  0.1446,  0.4902,  0.9497,  0.9742,
          0.2759,  0.2484, -0.0886,  0.7266,  0.4107,  0.2807,  0.7730,  0.2944,
          0.6728,  0.0106,  0.7993,  0.7916,  0.4459, -0.0460, -0.4725,  0.6608,
          0.3320]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
895000 loss tensor(0.0619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0325, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2588,  0.8807,  0.4127,  2.1627, -1.2011, -1.5737, -0.7391,  0.5439,
          0.3012,  0.0143, -0.2827,  0.8802,  0.2657,  0.8122,  0.8615, -0.3785,
         -0.1651,  0.0516,  1.1943,  0.2587,  0.3410,  0.1880,  0.1372,  0.5920,
          0.0577,  0.5523, -0.1286,  1.1723,  0.1432,  0.4893,  0.9501,  0.9746,
          0.2774,  0.2471, -0.0890,  0.7252,  0.4110,  0.2796,  0.7719,  0.2955,
          0.6714,  0.0103,  0.7981,  0.7905,  0.4471, -0.0455, -0.4719,  0.6601,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
896000 loss tensor(0.0683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2588,  0.8792,  0.4139,  2.1604, -1.2021, -1.5749, -0.7395,  0.5440,
          0.2993,  0.0132, -0.2849,  0.8782,  0.2649,  0.8107,  0.8624, -0.3766,
         -0.1653,  0.0507,  1.1946,  0.2597,  0.3399,  0.1875,  0.1391,  0.5924,
          0.0561,  0.5519, -0.1289,  1.1731,  0.1446,  0.4899,  0.9495,  0.9734,
          0.2763,  0.2475, -0.0883,  0.7264,  0.4109,  0.2810,  0.7727,  0.2948,
          0.6722,  0.0116,  0.7989,  0.7919,  0.4460, -0.0468, -0.4713,  0.6604,
          0.3330]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
897000 loss tensor(0.0604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2582,  0.8797,  0.4144,  2.1598, -1.2034, -1.5743, -0.7395,  0.5433,
          0.3001,  0.0132, -0.2846,  0.8786,  0.2636,  0.8110,  0.8614, -0.3779,
         -0.1651,  0.0517,  1.1942,  0.2593,  0.3406,  0.1877,  0.1376,  0.5922,
          0.0579,  0.5524, -0.1298,  1.1715,  0.1430,  0.4895,  0.9498,  0.9736,
          0.2773,  0.2485, -0.0895,  0.7250,  0.4111,  0.2797,  0.7733,  0.2947,
          0.6712,  0.0123,  0.7989,  0.7910,  0.4474, -0.0460, -0.4721,  0.6600,
          0.3322]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
898000 loss tensor(0.0652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2599,  0.8804,  0.4157,  2.1582, -1.2035, -1.5748, -0.7389,  0.5442,
          0.2998,  0.0141, -0.2855,  0.8784,  0.2639,  0.8100,  0.8614, -0.3779,
         -0.1659,  0.0508,  1.1934,  0.2589,  0.3407,  0.1864,  0.1372,  0.5915,
          0.0576,  0.5518, -0.1284,  1.1712,  0.1430,  0.4889,  0.9494,  0.9729,
          0.2768,  0.2491, -0.0879,  0.7247,  0.4106,  0.2798,  0.7728,  0.2949,
          0.6711,  0.0111,  0.7977,  0.7907,  0.4472, -0.0469, -0.4725,  0.6598,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
899000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2609,  0.8785,  0.4154,  2.1572, -1.2066, -1.5738, -0.7409,  0.5416,
          0.2983,  0.0127, -0.2856,  0.8769,  0.2639,  0.8090,  0.8625, -0.3774,
         -0.1643,  0.0505,  1.1933,  0.2595,  0.3397,  0.1873,  0.1379,  0.5907,
          0.0564,  0.5501, -0.1277,  1.1717,  0.1438,  0.4903,  0.9488,  0.9724,
          0.2776,  0.2475, -0.0882,  0.7258,  0.4106,  0.2800,  0.7731,  0.2953,
          0.6716,  0.0114,  0.7990,  0.7913,  0.4468, -0.0475, -0.4709,  0.6598,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
900000 loss tensor(0.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0400, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2605,  0.8796,  0.4157,  2.1557, -1.2070, -1.5749, -0.7400,  0.5427,
          0.3002,  0.0144, -0.2876,  0.8783,  0.2633,  0.8079,  0.8626, -0.3769,
         -0.1651,  0.0505,  1.1929,  0.2602,  0.3394,  0.1861,  0.1377,  0.5920,
          0.0585,  0.5514, -0.1290,  1.1716,  0.1433,  0.4900,  0.9491,  0.9730,
          0.2762,  0.2486, -0.0882,  0.7240,  0.4097,  0.2789,  0.7723,  0.2940,
          0.6701,  0.0119,  0.7973,  0.7903,  0.4469, -0.0477, -0.4709,  0.6596,
          0.3339]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
901000 loss tensor(0.0569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2612,  0.8802,  0.4166,  2.1543, -1.2082, -1.5742, -0.7392,  0.5420,
          0.3001,  0.0143, -0.2874,  0.8775,  0.2627,  0.8080,  0.8628, -0.3769,
         -0.1657,  0.0510,  1.1933,  0.2602,  0.3398,  0.1870,  0.1377,  0.5914,
          0.0582,  0.5518, -0.1284,  1.1709,  0.1427,  0.4900,  0.9498,  0.9724,
          0.2774,  0.2493, -0.0885,  0.7241,  0.4094,  0.2780,  0.7726,  0.2947,
          0.6697,  0.0123,  0.7975,  0.7897,  0.4480, -0.0474, -0.4707,  0.6587,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
902000 loss tensor(0.0573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2624,  0.8785,  0.4171,  2.1518, -1.2083, -1.5740, -0.7411,  0.5415,
          0.2990,  0.0136, -0.2873,  0.8769,  0.2626,  0.8077,  0.8616, -0.3776,
         -0.1645,  0.0504,  1.1933,  0.2594,  0.3395,  0.1860,  0.1364,  0.5907,
          0.0578,  0.5511, -0.1282,  1.1697,  0.1422,  0.4895,  0.9489,  0.9714,
          0.2779,  0.2488, -0.0881,  0.7237,  0.4108,  0.2782,  0.7733,  0.2952,
          0.6703,  0.0120,  0.7980,  0.7905,  0.4476, -0.0478, -0.4719,  0.6588,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
903000 loss tensor(0.0582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2647,  0.8792,  0.4195,  2.1515, -1.2094, -1.5743, -0.7398,  0.5415,
          0.2989,  0.0142, -0.2880,  0.8771,  0.2627,  0.8070,  0.8618, -0.3772,
         -0.1652,  0.0493,  1.1932,  0.2601,  0.3390,  0.1855,  0.1364,  0.5916,
          0.0586,  0.5510, -0.1276,  1.1695,  0.1420,  0.4897,  0.9489,  0.9712,
          0.2777,  0.2489, -0.0881,  0.7238,  0.4099,  0.2786,  0.7729,  0.2949,
          0.6692,  0.0118,  0.7975,  0.7896,  0.4484, -0.0478, -0.4715,  0.6591,
          0.3326]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
904000 loss tensor(0.0711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0394, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2652,  0.8775,  0.4189,  2.1495, -1.2114, -1.5740, -0.7410,  0.5404,
          0.2983,  0.0136, -0.2896,  0.8757,  0.2631,  0.8056,  0.8631, -0.3757,
         -0.1652,  0.0489,  1.1938,  0.2608,  0.3376,  0.1857,  0.1375,  0.5917,
          0.0577,  0.5504, -0.1284,  1.1702,  0.1428,  0.4908,  0.9475,  0.9707,
          0.2772,  0.2486, -0.0883,  0.7248,  0.4099,  0.2793,  0.7734,  0.2934,
          0.6697,  0.0122,  0.7981,  0.7901,  0.4475, -0.0491, -0.4705,  0.6598,
          0.3336]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
905000 loss tensor(0.0693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0389, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2652,  0.8778,  0.4183,  2.1480, -1.2119, -1.5741, -0.7401,  0.5412,
          0.2986,  0.0134, -0.2902,  0.8759,  0.2613,  0.8063,  0.8620, -0.3771,
         -0.1653,  0.0497,  1.1922,  0.2596,  0.3383,  0.1862,  0.1365,  0.5913,
          0.0586,  0.5507, -0.1289,  1.1686,  0.1416,  0.4896,  0.9481,  0.9703,
          0.2777,  0.2500, -0.0879,  0.7234,  0.4099,  0.2785,  0.7740,  0.2938,
          0.6691,  0.0128,  0.7974,  0.7901,  0.4482, -0.0488, -0.4718,  0.6589,
          0.3324]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
906000 loss tensor(0.0573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2659,  0.8772,  0.4199,  2.1468, -1.2140, -1.5738, -0.7406,  0.5398,
          0.2991,  0.0135, -0.2910,  0.8762,  0.2616,  0.8058,  0.8619, -0.3767,
         -0.1654,  0.0494,  1.1926,  0.2606,  0.3380,  0.1855,  0.1363,  0.5915,
          0.0587,  0.5504, -0.1287,  1.1682,  0.1408,  0.4903,  0.9470,  0.9705,
          0.2780,  0.2500, -0.0882,  0.7229,  0.4096,  0.2778,  0.7736,  0.2941,
          0.6684,  0.0123,  0.7965,  0.7894,  0.4494, -0.0481, -0.4715,  0.6587,
          0.3325]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
907000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0340, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2656,  0.8767,  0.4204,  2.1444, -1.2147, -1.5741, -0.7413,  0.5395,
          0.2972,  0.0124, -0.2918,  0.8742,  0.2615,  0.8040,  0.8632, -0.3755,
         -0.1643,  0.0482,  1.1927,  0.2610,  0.3374,  0.1851,  0.1372,  0.5906,
          0.0580,  0.5489, -0.1285,  1.1689,  0.1423,  0.4903,  0.9466,  0.9685,
          0.2778,  0.2492, -0.0882,  0.7244,  0.4105,  0.2787,  0.7743,  0.2938,
          0.6699,  0.0131,  0.7977,  0.7906,  0.4478, -0.0501, -0.4705,  0.6592,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
908000 loss tensor(0.0561, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0267, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2675,  0.8744,  0.4205,  2.1452, -1.2147, -1.5736, -0.7421,  0.5386,
          0.2969,  0.0123, -0.2921,  0.8739,  0.2618,  0.8031,  0.8623, -0.3765,
         -0.1630,  0.0481,  1.1928,  0.2614,  0.3379,  0.1831,  0.1359,  0.5911,
          0.0578,  0.5478, -0.1269,  1.1681,  0.1419,  0.4899,  0.9465,  0.9692,
          0.2787,  0.2491, -0.0873,  0.7248,  0.4112,  0.2782,  0.7749,  0.2945,
          0.6695,  0.0121,  0.7978,  0.7904,  0.4486, -0.0501, -0.4709,  0.6596,
          0.3328]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
909000 loss tensor(0.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0382, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2677,  0.8749,  0.4209,  2.1433, -1.2171, -1.5730, -0.7426,  0.5378,
          0.2967,  0.0126, -0.2917,  0.8734,  0.2615,  0.8026,  0.8628, -0.3758,
         -0.1630,  0.0483,  1.1922,  0.2611,  0.3367,  0.1854,  0.1363,  0.5904,
          0.0586,  0.5473, -0.1271,  1.1682,  0.1416,  0.4906,  0.9463,  0.9686,
          0.2789,  0.2486, -0.0884,  0.7239,  0.4102,  0.2782,  0.7746,  0.2952,
          0.6692,  0.0123,  0.7981,  0.7900,  0.4486, -0.0504, -0.4702,  0.6594,
          0.3334]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
910000 loss tensor(0.0570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2692,  0.8743,  0.4213,  2.1417, -1.2178, -1.5729, -0.7426,  0.5370,
          0.2976,  0.0123, -0.2929,  0.8732,  0.2600,  0.8027,  0.8621, -0.3760,
         -0.1630,  0.0483,  1.1921,  0.2604,  0.3377,  0.1843,  0.1361,  0.5902,
          0.0588,  0.5475, -0.1271,  1.1670,  0.1407,  0.4895,  0.9471,  0.9685,
          0.2791,  0.2486, -0.0877,  0.7229,  0.4105,  0.2771,  0.7748,  0.2940,
          0.6685,  0.0136,  0.7977,  0.7901,  0.4494, -0.0499, -0.4711,  0.6590,
          0.3328]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
911000 loss tensor(0.0656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0264, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0369, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2695,  0.8757,  0.4231,  2.1407, -1.2197, -1.5730, -0.7424,  0.5364,
          0.2966,  0.0135, -0.2937,  0.8731,  0.2613,  0.8013,  0.8636, -0.3754,
         -0.1637,  0.0470,  1.1929,  0.2613,  0.3354,  0.1848,  0.1362,  0.5893,
          0.0587,  0.5476, -0.1271,  1.1678,  0.1413,  0.4912,  0.9459,  0.9673,
          0.2792,  0.2489, -0.0883,  0.7233,  0.4095,  0.2777,  0.7745,  0.2942,
          0.6683,  0.0123,  0.7976,  0.7893,  0.4487, -0.0511, -0.4699,  0.6589,
          0.3337]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
912000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0377, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2680,  0.8737,  0.4219,  2.1383, -1.2198, -1.5731, -0.7434,  0.5366,
          0.2964,  0.0121, -0.2944,  0.8719,  0.2604,  0.8011,  0.8632, -0.3756,
         -0.1628,  0.0479,  1.1918,  0.2609,  0.3357,  0.1842,  0.1358,  0.5897,
          0.0580,  0.5463, -0.1268,  1.1670,  0.1411,  0.4902,  0.9456,  0.9668,
          0.2800,  0.2491, -0.0877,  0.7228,  0.4103,  0.2768,  0.7758,  0.2948,
          0.6688,  0.0128,  0.7979,  0.7895,  0.4490, -0.0514, -0.4703,  0.6584,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
913000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0321, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2705,  0.8739,  0.4235,  2.1390, -1.2212, -1.5732, -0.7417,  0.5364,
          0.2975,  0.0131, -0.2943,  0.8728,  0.2595,  0.8016,  0.8623, -0.3765,
         -0.1637,  0.0480,  1.1916,  0.2598,  0.3369,  0.1835,  0.1349,  0.5892,
          0.0596,  0.5466, -0.1265,  1.1654,  0.1395,  0.4902,  0.9466,  0.9671,
          0.2801,  0.2505, -0.0879,  0.7216,  0.4099,  0.2761,  0.7750,  0.2952,
          0.6675,  0.0128,  0.7966,  0.7887,  0.4507, -0.0503, -0.4709,  0.6571,
          0.3327]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
914000 loss tensor(0.0645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0339, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2715,  0.8740,  0.4233,  2.1361, -1.2229, -1.5733, -0.7424,  0.5353,
          0.2971,  0.0131, -0.2965,  0.8719,  0.2600,  0.7989,  0.8634, -0.3751,
         -0.1640,  0.0474,  1.1923,  0.2619,  0.3358,  0.1838,  0.1357,  0.5908,
          0.0599,  0.5467, -0.1272,  1.1664,  0.1406,  0.4911,  0.9459,  0.9667,
          0.2796,  0.2496, -0.0877,  0.7218,  0.4092,  0.2760,  0.7745,  0.2939,
          0.6671,  0.0136,  0.7967,  0.7889,  0.4495, -0.0520, -0.4700,  0.6577,
          0.3337]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
915000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0373, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2722,  0.8745,  0.4248,  2.1366, -1.2239, -1.5718, -0.7430,  0.5351,
          0.2964,  0.0129, -0.2956,  0.8719,  0.2603,  0.8002,  0.8633, -0.3758,
         -0.1635,  0.0467,  1.1919,  0.2616,  0.3358,  0.1842,  0.1346,  0.5905,
          0.0600,  0.5458, -0.1270,  1.1655,  0.1393,  0.4899,  0.9463,  0.9665,
          0.2807,  0.2497, -0.0871,  0.7220,  0.4096,  0.2763,  0.7749,  0.2948,
          0.6671,  0.0123,  0.7963,  0.7880,  0.4508, -0.0513, -0.4703,  0.6573,
          0.3337]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
916000 loss tensor(0.0745, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0414, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2717,  0.8727,  0.4253,  2.1341, -1.2235, -1.5722, -0.7426,  0.5354,
          0.2956,  0.0119, -0.2965,  0.8707,  0.2592,  0.7996,  0.8622, -0.3764,
         -0.1630,  0.0472,  1.1916,  0.2611,  0.3338,  0.1847,  0.1341,  0.5901,
          0.0593,  0.5466, -0.1276,  1.1643,  0.1391,  0.4901,  0.9451,  0.9649,
          0.2803,  0.2511, -0.0872,  0.7221,  0.4099,  0.2770,  0.7764,  0.2942,
          0.6673,  0.0131,  0.7969,  0.7889,  0.4507, -0.0514, -0.4713,  0.6584,
          0.3323]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
917000 loss tensor(0.0695, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0388, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2724,  0.8737,  0.4275,  2.1336, -1.2254, -1.5720, -0.7427,  0.5344,
          0.2966,  0.0127, -0.2972,  0.8715,  0.2593,  0.7984,  0.8624, -0.3757,
         -0.1641,  0.0470,  1.1913,  0.2615,  0.3343,  0.1847,  0.1342,  0.5903,
          0.0614,  0.5462, -0.1290,  1.1643,  0.1387,  0.4905,  0.9461,  0.9659,
          0.2800,  0.2514, -0.0876,  0.7212,  0.4087,  0.2761,  0.7758,  0.2938,
          0.6660,  0.0135,  0.7962,  0.7878,  0.4506, -0.0518, -0.4709,  0.6574,
          0.3329]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
918000 loss tensor(0.0588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2720,  0.8726,  0.4263,  2.1321, -1.2260, -1.5736, -0.7425,  0.5343,
          0.2961,  0.0128, -0.2988,  0.8713,  0.2582,  0.7980,  0.8621, -0.3757,
         -0.1644,  0.0467,  1.1908,  0.2610,  0.3350,  0.1836,  0.1341,  0.5903,
          0.0604,  0.5464, -0.1269,  1.1640,  0.1387,  0.4907,  0.9460,  0.9655,
          0.2802,  0.2519, -0.0873,  0.7201,  0.4088,  0.2756,  0.7756,  0.2937,
          0.6659,  0.0134,  0.7957,  0.7878,  0.4507, -0.0521, -0.4708,  0.6569,
          0.3328]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
919000 loss tensor(0.0682, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2750,  0.8722,  0.4273,  2.1303, -1.2278, -1.5727, -0.7433,  0.5326,
          0.2966,  0.0131, -0.2991,  0.8701,  0.2580,  0.7964,  0.8634, -0.3751,
         -0.1640,  0.0470,  1.1905,  0.2615,  0.3351,  0.1842,  0.1345,  0.5887,
          0.0602,  0.5461, -0.1261,  1.1645,  0.1391,  0.4910,  0.9452,  0.9652,
          0.2809,  0.2510, -0.0886,  0.7205,  0.4085,  0.2752,  0.7755,  0.2937,
          0.6657,  0.0141,  0.7962,  0.7880,  0.4502, -0.0533, -0.4698,  0.6560,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
920000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2743,  0.8724,  0.4282,  2.1294, -1.2281, -1.5723, -0.7431,  0.5339,
          0.2959,  0.0127, -0.2996,  0.8700,  0.2578,  0.7967,  0.8626, -0.3755,
         -0.1637,  0.0461,  1.1905,  0.2617,  0.3333,  0.1854,  0.1340,  0.5904,
          0.0609,  0.5451, -0.1275,  1.1634,  0.1383,  0.4906,  0.9449,  0.9637,
          0.2808,  0.2515, -0.0875,  0.7202,  0.4080,  0.2754,  0.7757,  0.2941,
          0.6656,  0.0138,  0.7959,  0.7878,  0.4509, -0.0529, -0.4707,  0.6570,
          0.3324]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
921000 loss tensor(0.0675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0375, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2751,  0.8723,  0.4290,  2.1277, -1.2310, -1.5723, -0.7435,  0.5323,
          0.2950,  0.0130, -0.3011,  0.8696,  0.2585,  0.7949,  0.8636, -0.3745,
         -0.1632,  0.0455,  1.1908,  0.2628,  0.3330,  0.1827,  0.1346,  0.5892,
          0.0604,  0.5456, -0.1263,  1.1639,  0.1390,  0.4912,  0.9448,  0.9640,
          0.2802,  0.2510, -0.0875,  0.7207,  0.4087,  0.2754,  0.7760,  0.2932,
          0.6658,  0.0133,  0.7962,  0.7879,  0.4505, -0.0540, -0.4695,  0.6571,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
922000 loss tensor(0.0713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0370, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2763,  0.8700,  0.4286,  2.1258, -1.2304, -1.5733, -0.7442,  0.5320,
          0.2944,  0.0115, -0.3018,  0.8675,  0.2573,  0.7945,  0.8636, -0.3740,
         -0.1621,  0.0459,  1.1908,  0.2621,  0.3332,  0.1811,  0.1345,  0.5885,
          0.0594,  0.5437, -0.1259,  1.1635,  0.1392,  0.4907,  0.9439,  0.9627,
          0.2800,  0.2518, -0.0868,  0.7211,  0.4098,  0.2753,  0.7771,  0.2938,
          0.6666,  0.0145,  0.7972,  0.7891,  0.4506, -0.0547, -0.4698,  0.6568,
          0.3333]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
923000 loss tensor(0.0604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0296, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2766,  0.8707,  0.4292,  2.1240, -1.2323, -1.5725, -0.7434,  0.5308,
          0.2952,  0.0127, -0.3019,  0.8684,  0.2576,  0.7935,  0.8638, -0.3741,
         -0.1636,  0.0467,  1.1915,  0.2624,  0.3330,  0.1825,  0.1340,  0.5887,
          0.0603,  0.5442, -0.1255,  1.1634,  0.1387,  0.4916,  0.9444,  0.9636,
          0.2813,  0.2518, -0.0883,  0.7200,  0.4085,  0.2743,  0.7762,  0.2941,
          0.6652,  0.0135,  0.7962,  0.7877,  0.4508, -0.0550, -0.4694,  0.6560,
          0.3341]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
924000 loss tensor(0.0607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0317, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2788,  0.8702,  0.4305,  2.1242, -1.2335, -1.5725, -0.7438,  0.5318,
          0.2957,  0.0123, -0.3019,  0.8681,  0.2564,  0.7941,  0.8637, -0.3750,
         -0.1627,  0.0461,  1.1893,  0.2617,  0.3338,  0.1820,  0.1332,  0.5889,
          0.0610,  0.5443, -0.1260,  1.1622,  0.1374,  0.4906,  0.9444,  0.9624,
          0.2821,  0.2519, -0.0875,  0.7191,  0.4091,  0.2739,  0.7766,  0.2941,
          0.6648,  0.0139,  0.7957,  0.7877,  0.4521, -0.0542, -0.4696,  0.6556,
          0.3339]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
925000 loss tensor(0.0704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2780,  0.8690,  0.4307,  2.1212, -1.2341, -1.5723, -0.7449,  0.5305,
          0.2939,  0.0114, -0.3028,  0.8666,  0.2563,  0.7926,  0.8638, -0.3739,
         -0.1621,  0.0446,  1.1903,  0.2621,  0.3321,  0.1811,  0.1340,  0.5890,
          0.0601,  0.5425, -0.1255,  1.1624,  0.1384,  0.4908,  0.9437,  0.9616,
          0.2815,  0.2516, -0.0870,  0.7201,  0.4093,  0.2751,  0.7776,  0.2939,
          0.6658,  0.0144,  0.7966,  0.7884,  0.4507, -0.0556, -0.4698,  0.6572,
          0.3339]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
926000 loss tensor(0.0580, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2794,  0.8685,  0.4314,  2.1208, -1.2359, -1.5710, -0.7448,  0.5296,
          0.2940,  0.0114, -0.3032,  0.8670,  0.2556,  0.7925,  0.8629, -0.3745,
         -0.1627,  0.0449,  1.1895,  0.2619,  0.3326,  0.1817,  0.1329,  0.5882,
          0.0609,  0.5433, -0.1255,  1.1610,  0.1371,  0.4900,  0.9436,  0.9617,
          0.2824,  0.2520, -0.0879,  0.7197,  0.4093,  0.2745,  0.7774,  0.2946,
          0.6648,  0.0147,  0.7959,  0.7883,  0.4520, -0.0550, -0.4701,  0.6578,
          0.3330]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
927000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0360, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2783,  0.8699,  0.4324,  2.1197, -1.2367, -1.5724, -0.7439,  0.5301,
          0.2948,  0.0125, -0.3042,  0.8673,  0.2556,  0.7922,  0.8631, -0.3741,
         -0.1636,  0.0453,  1.1898,  0.2625,  0.3321,  0.1825,  0.1331,  0.5890,
          0.0615,  0.5444, -0.1257,  1.1608,  0.1368,  0.4907,  0.9440,  0.9618,
          0.2814,  0.2534, -0.0879,  0.7186,  0.4079,  0.2740,  0.7775,  0.2929,
          0.6635,  0.0148,  0.7953,  0.7871,  0.4524, -0.0549, -0.4704,  0.6560,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
928000 loss tensor(0.0595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2798,  0.8699,  0.4335,  2.1183, -1.2381, -1.5719, -0.7449,  0.5300,
          0.2944,  0.0123, -0.3042,  0.8668,  0.2561,  0.7925,  0.8633, -0.3745,
         -0.1626,  0.0453,  1.1900,  0.2623,  0.3319,  0.1810,  0.1323,  0.5888,
          0.0615,  0.5431, -0.1253,  1.1598,  0.1362,  0.4909,  0.9435,  0.9604,
          0.2815,  0.2526, -0.0871,  0.7185,  0.4085,  0.2737,  0.7775,  0.2939,
          0.6637,  0.0137,  0.7951,  0.7876,  0.4531, -0.0552, -0.4705,  0.6564,
          0.3333]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
929000 loss tensor(0.0586, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2819,  0.8676,  0.4329,  2.1165, -1.2408, -1.5718, -0.7461,  0.5283,
          0.2938,  0.0109, -0.3054,  0.8652,  0.2546,  0.7907,  0.8639, -0.3737,
         -0.1612,  0.0447,  1.1889,  0.2626,  0.3322,  0.1812,  0.1329,  0.5881,
          0.0606,  0.5421, -0.1256,  1.1603,  0.1367,  0.4899,  0.9434,  0.9606,
          0.2824,  0.2514, -0.0865,  0.7191,  0.4091,  0.2736,  0.7784,  0.2938,
          0.6645,  0.0152,  0.7962,  0.7883,  0.4530, -0.0560, -0.4697,  0.6567,
          0.3341]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
930000 loss tensor(0.0579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2812,  0.8673,  0.4341,  2.1153, -1.2410, -1.5706, -0.7458,  0.5276,
          0.2934,  0.0112, -0.3054,  0.8652,  0.2543,  0.7909,  0.8634, -0.3743,
         -0.1618,  0.0443,  1.1882,  0.2620,  0.3325,  0.1814,  0.1322,  0.5882,
          0.0611,  0.5419, -0.1266,  1.1590,  0.1361,  0.4903,  0.9430,  0.9599,
          0.2834,  0.2524, -0.0875,  0.7186,  0.4090,  0.2740,  0.7786,  0.2944,
          0.6639,  0.0154,  0.7955,  0.7880,  0.4536, -0.0557, -0.4699,  0.6565,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
931000 loss tensor(0.0705, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0395, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2821,  0.8664,  0.4332,  2.1145, -1.2412, -1.5713, -0.7456,  0.5273,
          0.2934,  0.0110, -0.3066,  0.8643,  0.2546,  0.7897,  0.8634, -0.3738,
         -0.1618,  0.0448,  1.1878,  0.2622,  0.3312,  0.1813,  0.1324,  0.5873,
          0.0604,  0.5419, -0.1256,  1.1593,  0.1362,  0.4903,  0.9430,  0.9589,
          0.2833,  0.2527, -0.0870,  0.7187,  0.4090,  0.2726,  0.7790,  0.2942,
          0.6638,  0.0156,  0.7964,  0.7875,  0.4530, -0.0566, -0.4701,  0.6562,
          0.3331]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
932000 loss tensor(0.0601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2821,  0.8667,  0.4339,  2.1133, -1.2429, -1.5715, -0.7463,  0.5262,
          0.2929,  0.0111, -0.3074,  0.8636,  0.2550,  0.7881,  0.8643, -0.3730,
         -0.1610,  0.0450,  1.1899,  0.2627,  0.3299,  0.1817,  0.1330,  0.5879,
          0.0615,  0.5412, -0.1256,  1.1598,  0.1369,  0.4918,  0.9418,  0.9580,
          0.2824,  0.2516, -0.0880,  0.7184,  0.4086,  0.2727,  0.7786,  0.2934,
          0.6636,  0.0150,  0.7961,  0.7875,  0.4523, -0.0577, -0.4691,  0.6562,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
933000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2829,  0.8665,  0.4347,  2.1107, -1.2436, -1.5707, -0.7469,  0.5258,
          0.2925,  0.0110, -0.3075,  0.8633,  0.2544,  0.7877,  0.8646, -0.3732,
         -0.1609,  0.0435,  1.1885,  0.2631,  0.3299,  0.1804,  0.1324,  0.5874,
          0.0603,  0.5401, -0.1253,  1.1594,  0.1367,  0.4913,  0.9412,  0.9578,
          0.2836,  0.2522, -0.0873,  0.7190,  0.4086,  0.2734,  0.7787,  0.2939,
          0.6638,  0.0150,  0.7960,  0.7877,  0.4527, -0.0579, -0.4690,  0.6565,
          0.3339]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
934000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0352, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2843,  0.8664,  0.4370,  2.1112, -1.2442, -1.5712, -0.7455,  0.5265,
          0.2929,  0.0119, -0.3078,  0.8637,  0.2541,  0.7873,  0.8631, -0.3737,
         -0.1621,  0.0440,  1.1882,  0.2625,  0.3303,  0.1793,  0.1317,  0.5880,
          0.0619,  0.5419, -0.1241,  1.1581,  0.1358,  0.4903,  0.9433,  0.9585,
          0.2832,  0.2537, -0.0867,  0.7180,  0.4079,  0.2727,  0.7789,  0.2936,
          0.6626,  0.0143,  0.7949,  0.7871,  0.4534, -0.0576, -0.4698,  0.6563,
          0.3330]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
935000 loss tensor(0.0612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2851,  0.8668,  0.4354,  2.1096, -1.2475, -1.5716, -0.7458,  0.5258,
          0.2933,  0.0115, -0.3100,  0.8636,  0.2542,  0.7864,  0.8648, -0.3727,
         -0.1618,  0.0438,  1.1891,  0.2636,  0.3303,  0.1802,  0.1327,  0.5878,
          0.0614,  0.5404, -0.1255,  1.1588,  0.1360,  0.4918,  0.9406,  0.9580,
          0.2831,  0.2529, -0.0874,  0.7172,  0.4078,  0.2712,  0.7783,  0.2927,
          0.6623,  0.0152,  0.7948,  0.7865,  0.4529, -0.0586, -0.4687,  0.6547,
          0.3347]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
936000 loss tensor(0.0726, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0402, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2854,  0.8647,  0.4371,  2.1077, -1.2471, -1.5714, -0.7465,  0.5259,
          0.2922,  0.0110, -0.3106,  0.8627,  0.2545,  0.7862,  0.8635, -0.3730,
         -0.1601,  0.0431,  1.1895,  0.2637,  0.3292,  0.1793,  0.1319,  0.5891,
          0.0617,  0.5398, -0.1247,  1.1577,  0.1358,  0.4916,  0.9409,  0.9563,
          0.2827,  0.2530, -0.0856,  0.7182,  0.4079,  0.2726,  0.7793,  0.2926,
          0.6629,  0.0144,  0.7955,  0.7875,  0.4533, -0.0586, -0.4698,  0.6567,
          0.3329]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
937000 loss tensor(0.0598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2857,  0.8664,  0.4387,  2.1068, -1.2486, -1.5712, -0.7453,  0.5252,
          0.2926,  0.0120, -0.3107,  0.8632,  0.2531,  0.7862,  0.8633, -0.3734,
         -0.1624,  0.0432,  1.1876,  0.2625,  0.3295,  0.1796,  0.1314,  0.5880,
          0.0630,  0.5411, -0.1257,  1.1568,  0.1346,  0.4907,  0.9419,  0.9569,
          0.2830,  0.2544, -0.0867,  0.7169,  0.4076,  0.2719,  0.7789,  0.2930,
          0.6616,  0.0161,  0.7938,  0.7861,  0.4544, -0.0577, -0.4697,  0.6555,
          0.3331]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
938000 loss tensor(0.0667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0351, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2858,  0.8646,  0.4378,  2.1056, -1.2485, -1.5714, -0.7465,  0.5242,
          0.2925,  0.0109, -0.3115,  0.8620,  0.2524,  0.7847,  0.8637, -0.3726,
         -0.1608,  0.0437,  1.1882,  0.2627,  0.3287,  0.1806,  0.1317,  0.5883,
          0.0624,  0.5399, -0.1261,  1.1571,  0.1355,  0.4916,  0.9404,  0.9554,
          0.2827,  0.2539, -0.0872,  0.7168,  0.4078,  0.2721,  0.7798,  0.2923,
          0.6620,  0.0171,  0.7952,  0.7874,  0.4536, -0.0594, -0.4699,  0.6559,
          0.3330]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
939000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2865,  0.8636,  0.4379,  2.1044, -1.2509, -1.5708, -0.7465,  0.5230,
          0.2916,  0.0110, -0.3119,  0.8612,  0.2532,  0.7840,  0.8644, -0.3718,
         -0.1607,  0.0438,  1.1888,  0.2634,  0.3281,  0.1799,  0.1318,  0.5871,
          0.0620,  0.5395, -0.1242,  1.1571,  0.1355,  0.4923,  0.9403,  0.9549,
          0.2837,  0.2534, -0.0879,  0.7174,  0.4080,  0.2716,  0.7802,  0.2931,
          0.6622,  0.0156,  0.7956,  0.7872,  0.4536, -0.0597, -0.4687,  0.6558,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
940000 loss tensor(0.0701, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0391, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2864,  0.8636,  0.4394,  2.1027, -1.2515, -1.5693, -0.7473,  0.5225,
          0.2908,  0.0106, -0.3117,  0.8603,  0.2531,  0.7842,  0.8635, -0.3728,
         -0.1610,  0.0430,  1.1882,  0.2633,  0.3287,  0.1797,  0.1306,  0.5873,
          0.0617,  0.5385, -0.1237,  1.1557,  0.1344,  0.4912,  0.9392,  0.9549,
          0.2846,  0.2539, -0.0878,  0.7172,  0.4083,  0.2720,  0.7803,  0.2941,
          0.6622,  0.0152,  0.7951,  0.7870,  0.4544, -0.0592, -0.4694,  0.6562,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
941000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0384, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2881,  0.8631,  0.4393,  2.1007, -1.2535, -1.5715, -0.7467,  0.5225,
          0.2919,  0.0112, -0.3132,  0.8603,  0.2520,  0.7823,  0.8647, -0.3714,
         -0.1612,  0.0429,  1.1877,  0.2637,  0.3289,  0.1792,  0.1320,  0.5871,
          0.0622,  0.5389, -0.1247,  1.1564,  0.1351,  0.4920,  0.9403,  0.9555,
          0.2835,  0.2536, -0.0879,  0.7161,  0.4076,  0.2705,  0.7797,  0.2926,
          0.6610,  0.0165,  0.7945,  0.7862,  0.4538, -0.0603, -0.4682,  0.6545,
          0.3345]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
942000 loss tensor(0.0594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2886,  0.8627,  0.4412,  2.1001, -1.2541, -1.5702, -0.7473,  0.5222,
          0.2920,  0.0111, -0.3134,  0.8607,  0.2516,  0.7831,  0.8632, -0.3731,
         -0.1610,  0.0433,  1.1878,  0.2625,  0.3295,  0.1793,  0.1303,  0.5866,
          0.0630,  0.5393, -0.1242,  1.1549,  0.1335,  0.4906,  0.9410,  0.9550,
          0.2847,  0.2541, -0.0868,  0.7153,  0.4078,  0.2702,  0.7803,  0.2936,
          0.6607,  0.0164,  0.7943,  0.7862,  0.4551, -0.0594, -0.4693,  0.6546,
          0.3334]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
943000 loss tensor(0.0689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0382, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2896,  0.8629,  0.4410,  2.0998, -1.2550, -1.5703, -0.7469,  0.5217,
          0.2922,  0.0114, -0.3131,  0.8607,  0.2516,  0.7827,  0.8639, -0.3731,
         -0.1608,  0.0430,  1.1869,  0.2637,  0.3289,  0.1793,  0.1300,  0.5869,
          0.0638,  0.5387, -0.1242,  1.1547,  0.1333,  0.4911,  0.9403,  0.9546,
          0.2850,  0.2544, -0.0875,  0.7151,  0.4071,  0.2695,  0.7800,  0.2935,
          0.6602,  0.0162,  0.7939,  0.7853,  0.4557, -0.0596, -0.4689,  0.6542,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
944000 loss tensor(0.0576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2900,  0.8626,  0.4421,  2.0991, -1.2563, -1.5701, -0.7460,  0.5224,
          0.2918,  0.0117, -0.3146,  0.8606,  0.2515,  0.7819,  0.8636, -0.3722,
         -0.1619,  0.0421,  1.1871,  0.2638,  0.3272,  0.1798,  0.1302,  0.5874,
          0.0644,  0.5395, -0.1253,  1.1542,  0.1331,  0.4915,  0.9403,  0.9540,
          0.2843,  0.2553, -0.0864,  0.7149,  0.4066,  0.2703,  0.7803,  0.2922,
          0.6597,  0.0160,  0.7938,  0.7852,  0.4553, -0.0597, -0.4694,  0.6546,
          0.3336]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
945000 loss tensor(0.0686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0382, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2902,  0.8624,  0.4418,  2.0950, -1.2568, -1.5705, -0.7467,  0.5210,
          0.2914,  0.0120, -0.3148,  0.8592,  0.2518,  0.7798,  0.8648, -0.3717,
         -0.1613,  0.0426,  1.1884,  0.2635,  0.3267,  0.1786,  0.1308,  0.5871,
          0.0633,  0.5382, -0.1238,  1.1550,  0.1341,  0.4922,  0.9398,  0.9530,
          0.2840,  0.2549, -0.0870,  0.7151,  0.4067,  0.2697,  0.7799,  0.2927,
          0.6599,  0.0159,  0.7942,  0.7852,  0.4543, -0.0615, -0.4681,  0.6537,
          0.3343]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
946000 loss tensor(0.0642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0337, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2915,  0.8610,  0.4421,  2.0961, -1.2582, -1.5698, -0.7476,  0.5201,
          0.2913,  0.0112, -0.3152,  0.8592,  0.2511,  0.7803,  0.8636, -0.3724,
         -0.1607,  0.0429,  1.1866,  0.2628,  0.3273,  0.1799,  0.1300,  0.5864,
          0.0640,  0.5384, -0.1239,  1.1536,  0.1331,  0.4914,  0.9402,  0.9529,
          0.2849,  0.2553, -0.0875,  0.7143,  0.4063,  0.2695,  0.7809,  0.2927,
          0.6594,  0.0166,  0.7939,  0.7855,  0.4555, -0.0608, -0.4690,  0.6537,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
947000 loss tensor(0.0646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0345, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2917,  0.8596,  0.4425,  2.0918, -1.2591, -1.5691, -0.7483,  0.5192,
          0.2901,  0.0099, -0.3159,  0.8578,  0.2509,  0.7798,  0.8639, -0.3721,
         -0.1602,  0.0421,  1.1871,  0.2632,  0.3268,  0.1782,  0.1298,  0.5863,
          0.0629,  0.5362, -0.1229,  1.1533,  0.1331,  0.4913,  0.9385,  0.9517,
          0.2855,  0.2546, -0.0869,  0.7157,  0.4082,  0.2701,  0.7818,  0.2937,
          0.6608,  0.0166,  0.7948,  0.7864,  0.4555, -0.0615, -0.4689,  0.6548,
          0.3333]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
948000 loss tensor(0.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0381, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2925,  0.8600,  0.4433,  2.0918, -1.2607, -1.5714, -0.7479,  0.5197,
          0.2902,  0.0105, -0.3178,  0.8570,  0.2505,  0.7783,  0.8650, -0.3715,
         -0.1599,  0.0421,  1.1866,  0.2638,  0.3251,  0.1780,  0.1310,  0.5862,
          0.0627,  0.5376, -0.1247,  1.1543,  0.1338,  0.4918,  0.9380,  0.9513,
          0.2847,  0.2545, -0.0863,  0.7152,  0.4073,  0.2697,  0.7813,  0.2923,
          0.6600,  0.0177,  0.7949,  0.7864,  0.4547, -0.0626, -0.4679,  0.6545,
          0.3340]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
949000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2940,  0.8606,  0.4451,  2.0897, -1.2601, -1.5706, -0.7480,  0.5188,
          0.2902,  0.0104, -0.3181,  0.8571,  0.2498,  0.7774,  0.8641, -0.3707,
         -0.1606,  0.0411,  1.1859,  0.2640,  0.3260,  0.1783,  0.1310,  0.5866,
          0.0639,  0.5368, -0.1253,  1.1534,  0.1338,  0.4922,  0.9376,  0.9506,
          0.2852,  0.2548, -0.0867,  0.7155,  0.4072,  0.2701,  0.7820,  0.2925,
          0.6598,  0.0186,  0.7947,  0.7859,  0.4549, -0.0629, -0.4689,  0.6543,
          0.3334]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
950000 loss tensor(0.0682, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0384, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2945,  0.8610,  0.4452,  2.0893, -1.2622, -1.5702, -0.7473,  0.5198,
          0.2906,  0.0111, -0.3185,  0.8578,  0.2492,  0.7775,  0.8639, -0.3718,
         -0.1611,  0.0410,  1.1869,  0.2638,  0.3258,  0.1781,  0.1298,  0.5871,
          0.0641,  0.5372, -0.1236,  1.1523,  0.1322,  0.4915,  0.9385,  0.9504,
          0.2854,  0.2560, -0.0864,  0.7139,  0.4064,  0.2695,  0.7814,  0.2923,
          0.6587,  0.0173,  0.7935,  0.7856,  0.4560, -0.0622, -0.4690,  0.6543,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
951000 loss tensor(0.0604, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2970,  0.8605,  0.4461,  2.0889, -1.2644, -1.5690, -0.7482,  0.5179,
          0.2905,  0.0109, -0.3179,  0.8570,  0.2499,  0.7771,  0.8641, -0.3722,
         -0.1602,  0.0408,  1.1852,  0.2644,  0.3266,  0.1780,  0.1291,  0.5864,
          0.0644,  0.5359, -0.1221,  1.1521,  0.1318,  0.4907,  0.9390,  0.9515,
          0.2862,  0.2548, -0.0872,  0.7140,  0.4064,  0.2690,  0.7809,  0.2928,
          0.6583,  0.0168,  0.7929,  0.7848,  0.4567, -0.0624, -0.4684,  0.6538,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
952000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0388, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2981,  0.8604,  0.4454,  2.0884, -1.2656, -1.5697, -0.7477,  0.5176,
          0.2901,  0.0113, -0.3193,  0.8567,  0.2488,  0.7762,  0.8645, -0.3710,
         -0.1606,  0.0412,  1.1873,  0.2651,  0.3255,  0.1776,  0.1300,  0.5861,
          0.0647,  0.5367, -0.1231,  1.1521,  0.1317,  0.4918,  0.9387,  0.9507,
          0.2850,  0.2558, -0.0862,  0.7135,  0.4066,  0.2689,  0.7814,  0.2920,
          0.6581,  0.0171,  0.7940,  0.7850,  0.4568, -0.0622, -0.4678,  0.6539,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
953000 loss tensor(0.0651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0338, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2974,  0.8595,  0.4470,  2.0852, -1.2670, -1.5695, -0.7490,  0.5168,
          0.2905,  0.0112, -0.3199,  0.8565,  0.2488,  0.7753,  0.8653, -0.3706,
         -0.1602,  0.0407,  1.1863,  0.2647,  0.3258,  0.1773,  0.1302,  0.5860,
          0.0643,  0.5363, -0.1231,  1.1519,  0.1321,  0.4920,  0.9382,  0.9503,
          0.2856,  0.2553, -0.0871,  0.7133,  0.4060,  0.2683,  0.7811,  0.2919,
          0.6576,  0.0180,  0.7935,  0.7843,  0.4567, -0.0631, -0.4674,  0.6533,
          0.3344]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
954000 loss tensor(0.0707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2984,  0.8577,  0.4465,  2.0847, -1.2686, -1.5689, -0.7493,  0.5164,
          0.2898,  0.0105, -0.3192,  0.8559,  0.2497,  0.7751,  0.8649, -0.3713,
         -0.1600,  0.0405,  1.1848,  0.2645,  0.3258,  0.1783,  0.1291,  0.5851,
          0.0636,  0.5352, -0.1234,  1.1512,  0.1315,  0.4915,  0.9386,  0.9501,
          0.2872,  0.2551, -0.0868,  0.7134,  0.4060,  0.2677,  0.7817,  0.2932,
          0.6582,  0.0171,  0.7934,  0.7841,  0.4568, -0.0632, -0.4671,  0.6531,
          0.3347]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
955000 loss tensor(0.0719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0402, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2986,  0.8590,  0.4489,  2.0828, -1.2689, -1.5698, -0.7481,  0.5169,
          0.2899,  0.0109, -0.3212,  0.8561,  0.2481,  0.7744,  0.8641, -0.3709,
         -0.1604,  0.0399,  1.1863,  0.2657,  0.3236,  0.1773,  0.1291,  0.5863,
          0.0660,  0.5365, -0.1234,  1.1505,  0.1310,  0.4914,  0.9385,  0.9498,
          0.2853,  0.2560, -0.0861,  0.7131,  0.4058,  0.2682,  0.7816,  0.2912,
          0.6568,  0.0172,  0.7931,  0.7843,  0.4571, -0.0631, -0.4682,  0.6540,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
956000 loss tensor(0.0615, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2980,  0.8581,  0.4484,  2.0816, -1.2695, -1.5692, -0.7485,  0.5155,
          0.2898,  0.0114, -0.3222,  0.8550,  0.2487,  0.7737,  0.8652, -0.3712,
         -0.1594,  0.0410,  1.1854,  0.2644,  0.3242,  0.1790,  0.1290,  0.5855,
          0.0658,  0.5351, -0.1240,  1.1510,  0.1317,  0.4924,  0.9376,  0.9479,
          0.2863,  0.2558, -0.0864,  0.7129,  0.4057,  0.2677,  0.7819,  0.2921,
          0.6575,  0.0174,  0.7934,  0.7840,  0.4563, -0.0646, -0.4676,  0.6531,
          0.3339]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
957000 loss tensor(0.0583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2996,  0.8570,  0.4486,  2.0805, -1.2698, -1.5695, -0.7498,  0.5159,
          0.2900,  0.0103, -0.3225,  0.8549,  0.2479,  0.7742,  0.8644, -0.3714,
         -0.1598,  0.0409,  1.1852,  0.2645,  0.3248,  0.1761,  0.1281,  0.5860,
          0.0650,  0.5345, -0.1229,  1.1495,  0.1303,  0.4916,  0.9374,  0.9474,
          0.2866,  0.2566, -0.0857,  0.7116,  0.4064,  0.2666,  0.7824,  0.2926,
          0.6571,  0.0176,  0.7930,  0.7844,  0.4576, -0.0639, -0.4683,  0.6525,
          0.3331]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
958000 loss tensor(0.0692, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0390, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.2991,  0.8571,  0.4494,  2.0796, -1.2727, -1.5690, -0.7501,  0.5146,
          0.2889,  0.0110, -0.3232,  0.8540,  0.2482,  0.7715,  0.8654, -0.3699,
         -0.1599,  0.0399,  1.1853,  0.2659,  0.3233,  0.1766,  0.1294,  0.5866,
          0.0656,  0.5334, -0.1230,  1.1506,  0.1316,  0.4926,  0.9363,  0.9480,
          0.2863,  0.2560, -0.0862,  0.7128,  0.4057,  0.2674,  0.7819,  0.2919,
          0.6574,  0.0180,  0.7927,  0.7843,  0.4563, -0.0654, -0.4671,  0.6532,
          0.3348]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
959000 loss tensor(0.0685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0383, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3004,  0.8563,  0.4512,  2.0774, -1.2734, -1.5694, -0.7498,  0.5142,
          0.2881,  0.0100, -0.3245,  0.8530,  0.2470,  0.7713,  0.8650, -0.3695,
         -0.1594,  0.0394,  1.1852,  0.2651,  0.3240,  0.1758,  0.1295,  0.5849,
          0.0647,  0.5331, -0.1225,  1.1498,  0.1310,  0.4918,  0.9370,  0.9476,
          0.2862,  0.2568, -0.0864,  0.7133,  0.4064,  0.2683,  0.7835,  0.2918,
          0.6573,  0.0191,  0.7937,  0.7853,  0.4575, -0.0650, -0.4669,  0.6531,
          0.3342]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
960000 loss tensor(0.0708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3002,  0.8569,  0.4514,  2.0775, -1.2736, -1.5694, -0.7494,  0.5141,
          0.2890,  0.0103, -0.3239,  0.8537,  0.2470,  0.7717,  0.8646, -0.3704,
         -0.1604,  0.0401,  1.1844,  0.2652,  0.3242,  0.1766,  0.1284,  0.5854,
          0.0664,  0.5342, -0.1219,  1.1486,  0.1300,  0.4919,  0.9368,  0.9469,
          0.2864,  0.2573, -0.0862,  0.7119,  0.4056,  0.2671,  0.7828,  0.2917,
          0.6561,  0.0181,  0.7928,  0.7837,  0.4580, -0.0649, -0.4679,  0.6525,
          0.3337]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
961000 loss tensor(0.0584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3017,  0.8558,  0.4525,  2.0753, -1.2746, -1.5693, -0.7494,  0.5141,
          0.2878,  0.0098, -0.3250,  0.8523,  0.2458,  0.7709,  0.8643, -0.3703,
         -0.1598,  0.0397,  1.1843,  0.2645,  0.3233,  0.1754,  0.1283,  0.5845,
          0.0652,  0.5340, -0.1229,  1.1482,  0.1301,  0.4916,  0.9367,  0.9455,
          0.2867,  0.2575, -0.0863,  0.7122,  0.4065,  0.2681,  0.7836,  0.2923,
          0.6567,  0.0194,  0.7934,  0.7850,  0.4581, -0.0655, -0.4682,  0.6532,
          0.3331]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
962000 loss tensor(0.0586, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3015,  0.8561,  0.4521,  2.0741, -1.2748, -1.5692, -0.7492,  0.5136,
          0.2883,  0.0106, -0.3254,  0.8528,  0.2464,  0.7699,  0.8644, -0.3705,
         -0.1602,  0.0399,  1.1852,  0.2645,  0.3230,  0.1762,  0.1278,  0.5846,
          0.0660,  0.5337, -0.1221,  1.1479,  0.1298,  0.4917,  0.9365,  0.9454,
          0.2869,  0.2579, -0.0857,  0.7110,  0.4059,  0.2667,  0.7835,  0.2925,
          0.6559,  0.0186,  0.7928,  0.7842,  0.4578, -0.0659, -0.4679,  0.6524,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
963000 loss tensor(0.0599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3020,  0.8537,  0.4520,  2.0727, -1.2763, -1.5683, -0.7505,  0.5125,
          0.2879,  0.0101, -0.3256,  0.8523,  0.2469,  0.7696,  0.8643, -0.3708,
         -0.1591,  0.0396,  1.1841,  0.2643,  0.3231,  0.1760,  0.1271,  0.5847,
          0.0658,  0.5330, -0.1219,  1.1475,  0.1294,  0.4919,  0.9360,  0.9452,
          0.2878,  0.2575, -0.0870,  0.7110,  0.4060,  0.2662,  0.7838,  0.2926,
          0.6559,  0.0179,  0.7927,  0.7838,  0.4581, -0.0662, -0.4679,  0.6523,
          0.3333]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
964000 loss tensor(0.0591, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0281, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3020,  0.8541,  0.4522,  2.0694, -1.2783, -1.5696, -0.7499,  0.5126,
          0.2874,  0.0099, -0.3274,  0.8507,  0.2459,  0.7679,  0.8654, -0.3694,
         -0.1589,  0.0397,  1.1839,  0.2649,  0.3221,  0.1757,  0.1287,  0.5851,
          0.0662,  0.5326, -0.1223,  1.1481,  0.1304,  0.4925,  0.9349,  0.9445,
          0.2872,  0.2572, -0.0853,  0.7115,  0.4061,  0.2667,  0.7842,  0.2912,
          0.6567,  0.0189,  0.7938,  0.7846,  0.4575, -0.0673, -0.4668,  0.6533,
          0.3345]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
965000 loss tensor(0.0576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0275, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3035,  0.8547,  0.4546,  2.0704, -1.2795, -1.5693, -0.7505,  0.5126,
          0.2869,  0.0108, -0.3278,  0.8515,  0.2469,  0.7676,  0.8656, -0.3696,
         -0.1592,  0.0385,  1.1844,  0.2655,  0.3213,  0.1751,  0.1280,  0.5851,
          0.0663,  0.5320, -0.1219,  1.1476,  0.1300,  0.4931,  0.9350,  0.9445,
          0.2867,  0.2573, -0.0854,  0.7114,  0.4054,  0.2671,  0.7832,  0.2914,
          0.6553,  0.0179,  0.7922,  0.7834,  0.4577, -0.0671, -0.4666,  0.6524,
          0.3342]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
966000 loss tensor(0.0614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3043,  0.8537,  0.4554,  2.0692, -1.2816, -1.5674, -0.7506,  0.5106,
          0.2871,  0.0104, -0.3268,  0.8510,  0.2466,  0.7668,  0.8657, -0.3697,
         -0.1600,  0.0380,  1.1844,  0.2664,  0.3217,  0.1759,  0.1276,  0.5847,
          0.0664,  0.5326, -0.1210,  1.1472,  0.1296,  0.4926,  0.9352,  0.9447,
          0.2883,  0.2575, -0.0873,  0.7114,  0.4046,  0.2666,  0.7834,  0.2921,
          0.6549,  0.0183,  0.7920,  0.7831,  0.4581, -0.0674, -0.4664,  0.6522,
          0.3350]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
967000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0380, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3054,  0.8538,  0.4552,  2.0679, -1.2833, -1.5682, -0.7509,  0.5111,
          0.2865,  0.0103, -0.3295,  0.8500,  0.2462,  0.7663,  0.8658, -0.3692,
         -0.1591,  0.0379,  1.1845,  0.2671,  0.3211,  0.1742,  0.1279,  0.5850,
          0.0661,  0.5311, -0.1213,  1.1469,  0.1294,  0.4933,  0.9338,  0.9437,
          0.2871,  0.2570, -0.0857,  0.7112,  0.4053,  0.2660,  0.7833,  0.2909,
          0.6551,  0.0183,  0.7919,  0.7834,  0.4584, -0.0675, -0.4664,  0.6527,
          0.3346]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
968000 loss tensor(0.0671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3044,  0.8523,  0.4555,  2.0660, -1.2832, -1.5682, -0.7513,  0.5106,
          0.2867,  0.0092, -0.3284,  0.8493,  0.2446,  0.7662,  0.8644, -0.3702,
         -0.1583,  0.0389,  1.1827,  0.2645,  0.3221,  0.1743,  0.1266,  0.5843,
          0.0669,  0.5307, -0.1211,  1.1455,  0.1286,  0.4916,  0.9353,  0.9437,
          0.2887,  0.2576, -0.0860,  0.7106,  0.4067,  0.2653,  0.7851,  0.2930,
          0.6555,  0.0197,  0.7929,  0.7839,  0.4589, -0.0674, -0.4674,  0.6520,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
969000 loss tensor(0.0651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0344, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3054,  0.8522,  0.4575,  2.0658, -1.2830, -1.5678, -0.7508,  0.5096,
          0.2856,  0.0087, -0.3294,  0.8490,  0.2453,  0.7653,  0.8646, -0.3693,
         -0.1592,  0.0377,  1.1831,  0.2659,  0.3208,  0.1750,  0.1274,  0.5829,
          0.0661,  0.5316, -0.1208,  1.1457,  0.1292,  0.4920,  0.9338,  0.9421,
          0.2890,  0.2585, -0.0864,  0.7116,  0.4053,  0.2664,  0.7852,  0.2926,
          0.6549,  0.0191,  0.7930,  0.7841,  0.4584, -0.0685, -0.4676,  0.6527,
          0.3329]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
970000 loss tensor(0.0599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3061,  0.8521,  0.4572,  2.0645, -1.2851, -1.5679, -0.7509,  0.5103,
          0.2863,  0.0094, -0.3302,  0.8492,  0.2453,  0.7658,  0.8650, -0.3698,
         -0.1592,  0.0372,  1.1822,  0.2661,  0.3207,  0.1734,  0.1265,  0.5855,
          0.0663,  0.5306, -0.1215,  1.1447,  0.1277,  0.4919,  0.9341,  0.9420,
          0.2889,  0.2582, -0.0848,  0.7101,  0.4056,  0.2655,  0.7846,  0.2923,
          0.6546,  0.0188,  0.7915,  0.7831,  0.4595, -0.0678, -0.4675,  0.6524,
          0.3336]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
971000 loss tensor(0.0574, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0280, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3084,  0.8519,  0.4577,  2.0641, -1.2863, -1.5686, -0.7520,  0.5095,
          0.2859,  0.0082, -0.3312,  0.8487,  0.2436,  0.7644,  0.8648, -0.3691,
         -0.1581,  0.0371,  1.1818,  0.2657,  0.3212,  0.1726,  0.1268,  0.5838,
          0.0673,  0.5297, -0.1197,  1.1446,  0.1281,  0.4918,  0.9343,  0.9421,
          0.2882,  0.2573, -0.0852,  0.7102,  0.4063,  0.2653,  0.7849,  0.2915,
          0.6547,  0.0200,  0.7922,  0.7839,  0.4597, -0.0681, -0.4670,  0.6528,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
972000 loss tensor(0.0663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0372, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3084,  0.8514,  0.4569,  2.0620, -1.2880, -1.5675, -0.7522,  0.5075,
          0.2859,  0.0099, -0.3313,  0.8483,  0.2455,  0.7633,  0.8659, -0.3685,
         -0.1588,  0.0379,  1.1837,  0.2664,  0.3198,  0.1748,  0.1274,  0.5837,
          0.0666,  0.5296, -0.1204,  1.1450,  0.1284,  0.4934,  0.9330,  0.9406,
          0.2883,  0.2580, -0.0870,  0.7096,  0.4049,  0.2649,  0.7843,  0.2913,
          0.6540,  0.0187,  0.7921,  0.7826,  0.4590, -0.0692, -0.4663,  0.6515,
          0.3342]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
973000 loss tensor(0.0569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3088,  0.8499,  0.4594,  2.0609, -1.2882, -1.5678, -0.7516,  0.5085,
          0.2853,  0.0086, -0.3322,  0.8476,  0.2437,  0.7640,  0.8649, -0.3697,
         -0.1580,  0.0374,  1.1811,  0.2656,  0.3209,  0.1734,  0.1262,  0.5826,
          0.0663,  0.5297, -0.1216,  1.1432,  0.1271,  0.4915,  0.9341,  0.9401,
          0.2900,  0.2582, -0.0852,  0.7095,  0.4061,  0.2657,  0.7862,  0.2926,
          0.6544,  0.0201,  0.7923,  0.7836,  0.4608, -0.0681, -0.4673,  0.6520,
          0.3332]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
974000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3091,  0.8493,  0.4582,  2.0592, -1.2899, -1.5674, -0.7537,  0.5066,
          0.2851,  0.0090, -0.3327,  0.8468,  0.2449,  0.7613,  0.8661, -0.3686,
         -0.1574,  0.0370,  1.1827,  0.2664,  0.3191,  0.1730,  0.1264,  0.5837,
          0.0664,  0.5288, -0.1199,  1.1444,  0.1283,  0.4932,  0.9330,  0.9400,
          0.2890,  0.2570, -0.0857,  0.7100,  0.4054,  0.2646,  0.7853,  0.2920,
          0.6540,  0.0184,  0.7924,  0.7829,  0.4586, -0.0703, -0.4658,  0.6522,
          0.3347]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
975000 loss tensor(0.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0348, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3102,  0.8509,  0.4597,  2.0591, -1.2911, -1.5672, -0.7522,  0.5073,
          0.2862,  0.0094, -0.3326,  0.8476,  0.2435,  0.7618,  0.8650, -0.3695,
         -0.1581,  0.0374,  1.1814,  0.2659,  0.3198,  0.1731,  0.1256,  0.5841,
          0.0683,  0.5291, -0.1206,  1.1428,  0.1269,  0.4925,  0.9339,  0.9403,
          0.2895,  0.2584, -0.0857,  0.7085,  0.4045,  0.2638,  0.7853,  0.2921,
          0.6527,  0.0188,  0.7912,  0.7824,  0.4600, -0.0693, -0.4667,  0.6513,
          0.3336]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
976000 loss tensor(0.0585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3097,  0.8490,  0.4584,  2.0556, -1.2920, -1.5677, -0.7520,  0.5059,
          0.2848,  0.0084, -0.3339,  0.8459,  0.2434,  0.7600,  0.8656, -0.3683,
         -0.1578,  0.0373,  1.1814,  0.2656,  0.3191,  0.1731,  0.1266,  0.5830,
          0.0677,  0.5284, -0.1207,  1.1434,  0.1281,  0.4929,  0.9332,  0.9392,
          0.2891,  0.2589, -0.0855,  0.7092,  0.4052,  0.2644,  0.7861,  0.2922,
          0.6538,  0.0203,  0.7922,  0.7837,  0.4589, -0.0710, -0.4662,  0.6519,
          0.3343]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
977000 loss tensor(0.0565, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3106,  0.8487,  0.4611,  2.0554, -1.2942, -1.5664, -0.7529,  0.5045,
          0.2846,  0.0085, -0.3339,  0.8457,  0.2423,  0.7600,  0.8648, -0.3691,
         -0.1578,  0.0362,  1.1811,  0.2659,  0.3197,  0.1730,  0.1256,  0.5822,
          0.0674,  0.5275, -0.1201,  1.1420,  0.1269,  0.4924,  0.9327,  0.9399,
          0.2905,  0.2585, -0.0857,  0.7089,  0.4055,  0.2645,  0.7858,  0.2924,
          0.6534,  0.0207,  0.7914,  0.7836,  0.4606, -0.0701, -0.4666,  0.6523,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
978000 loss tensor(0.0591, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3104,  0.8486,  0.4615,  2.0550, -1.2951, -1.5678, -0.7527,  0.5059,
          0.2853,  0.0086, -0.3342,  0.8462,  0.2422,  0.7599,  0.8650, -0.3695,
         -0.1576,  0.0377,  1.1815,  0.2658,  0.3198,  0.1721,  0.1252,  0.5829,
          0.0682,  0.5278, -0.1203,  1.1415,  0.1263,  0.4919,  0.9325,  0.9394,
          0.2901,  0.2588, -0.0857,  0.7076,  0.4052,  0.2635,  0.7861,  0.2926,
          0.6528,  0.0203,  0.7915,  0.7825,  0.4609, -0.0702, -0.4668,  0.6508,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
979000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0322, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3134,  0.8489,  0.4629,  2.0541, -1.2974, -1.5659, -0.7532,  0.5047,
          0.2848,  0.0091, -0.3346,  0.8459,  0.2427,  0.7597,  0.8663, -0.3688,
         -0.1580,  0.0355,  1.1810,  0.2668,  0.3195,  0.1725,  0.1251,  0.5824,
          0.0677,  0.5280, -0.1196,  1.1417,  0.1260,  0.4918,  0.9336,  0.9391,
          0.2906,  0.2584, -0.0862,  0.7079,  0.4041,  0.2631,  0.7852,  0.2926,
          0.6517,  0.0198,  0.7904,  0.7821,  0.4613, -0.0702, -0.4658,  0.6517,
          0.3346]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
980000 loss tensor(0.0614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0312, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3125,  0.8474,  0.4632,  2.0523, -1.2968, -1.5662, -0.7542,  0.5042,
          0.2842,  0.0089, -0.3352,  0.8447,  0.2435,  0.7581,  0.8666, -0.3685,
         -0.1572,  0.0361,  1.1810,  0.2662,  0.3183,  0.1735,  0.1255,  0.5830,
          0.0678,  0.5278, -0.1197,  1.1420,  0.1269,  0.4937,  0.9317,  0.9370,
          0.2909,  0.2589, -0.0858,  0.7086,  0.4038,  0.2629,  0.7866,  0.2926,
          0.6522,  0.0196,  0.7910,  0.7825,  0.4600, -0.0719, -0.4657,  0.6511,
          0.3345]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
981000 loss tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3142,  0.8473,  0.4639,  2.0510, -1.2987, -1.5662, -0.7539,  0.5036,
          0.2839,  0.0086, -0.3365,  0.8440,  0.2425,  0.7576,  0.8667, -0.3679,
         -0.1567,  0.0355,  1.1807,  0.2675,  0.3175,  0.1717,  0.1257,  0.5823,
          0.0678,  0.5265, -0.1201,  1.1418,  0.1267,  0.4931,  0.9314,  0.9367,
          0.2902,  0.2583, -0.0853,  0.7088,  0.4044,  0.2639,  0.7865,  0.2917,
          0.6526,  0.0201,  0.7915,  0.7830,  0.4605, -0.0719, -0.4655,  0.6520,
          0.3344]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
982000 loss tensor(0.0681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0381, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3141,  0.8471,  0.4638,  2.0489, -1.2995, -1.5660, -0.7533,  0.5042,
          0.2838,  0.0083, -0.3363,  0.8437,  0.2427,  0.7578,  0.8654, -0.3688,
         -0.1573,  0.0362,  1.1816,  0.2668,  0.3179,  0.1726,  0.1245,  0.5831,
          0.0686,  0.5271, -0.1206,  1.1399,  0.1256,  0.4928,  0.9313,  0.9363,
          0.2908,  0.2592, -0.0856,  0.7076,  0.4045,  0.2630,  0.7871,  0.2922,
          0.6519,  0.0193,  0.7914,  0.7819,  0.4609, -0.0718, -0.4664,  0.6511,
          0.3334]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
983000 loss tensor(0.0652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0366, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3142,  0.8477,  0.4651,  2.0471, -1.3001, -1.5672, -0.7529,  0.5029,
          0.2842,  0.0091, -0.3378,  0.8435,  0.2416,  0.7554,  0.8665, -0.3676,
         -0.1576,  0.0354,  1.1814,  0.2677,  0.3170,  0.1717,  0.1257,  0.5822,
          0.0689,  0.5278, -0.1197,  1.1412,  0.1265,  0.4934,  0.9313,  0.9358,
          0.2894,  0.2599, -0.0856,  0.7077,  0.4033,  0.2626,  0.7862,  0.2911,
          0.6508,  0.0205,  0.7909,  0.7818,  0.4603, -0.0731, -0.4655,  0.6509,
          0.3348]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
984000 loss tensor(0.0630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3147,  0.8444,  0.4637,  2.0467, -1.3024, -1.5678, -0.7548,  0.5022,
          0.2830,  0.0081, -0.3397,  0.8429,  0.2414,  0.7561,  0.8666, -0.3674,
         -0.1565,  0.0358,  1.1795,  0.2671,  0.3167,  0.1719,  0.1255,  0.5825,
          0.0675,  0.5269, -0.1205,  1.1401,  0.1257,  0.4933,  0.9299,  0.9353,
          0.2898,  0.2596, -0.0849,  0.7083,  0.4048,  0.2631,  0.7873,  0.2908,
          0.6518,  0.0208,  0.7917,  0.7827,  0.4614, -0.0727, -0.4655,  0.6513,
          0.3346]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
985000 loss tensor(0.0652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3167,  0.8470,  0.4659,  2.0466, -1.3037, -1.5654, -0.7546,  0.5022,
          0.2842,  0.0087, -0.3381,  0.8431,  0.2403,  0.7553,  0.8663, -0.3680,
         -0.1572,  0.0350,  1.1788,  0.2671,  0.3175,  0.1718,  0.1247,  0.5818,
          0.0684,  0.5261, -0.1190,  1.1396,  0.1251,  0.4925,  0.9313,  0.9364,
          0.2916,  0.2596, -0.0855,  0.7071,  0.4038,  0.2617,  0.7865,  0.2924,
          0.6508,  0.0206,  0.7903,  0.7823,  0.4621, -0.0724, -0.4653,  0.6505,
          0.3347]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
986000 loss tensor(0.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0371, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3159,  0.8459,  0.4652,  2.0444, -1.3051, -1.5667, -0.7543,  0.5015,
          0.2836,  0.0082, -0.3400,  0.8417,  0.2405,  0.7539,  0.8667, -0.3668,
         -0.1573,  0.0357,  1.1802,  0.2672,  0.3180,  0.1706,  0.1257,  0.5814,
          0.0685,  0.5251, -0.1200,  1.1398,  0.1260,  0.4937,  0.9300,  0.9356,
          0.2906,  0.2594, -0.0855,  0.7067,  0.4044,  0.2620,  0.7874,  0.2907,
          0.6514,  0.0217,  0.7912,  0.7822,  0.4606, -0.0737, -0.4649,  0.6507,
          0.3352]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
987000 loss tensor(0.0676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0357, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3174,  0.8453,  0.4657,  2.0446, -1.3060, -1.5660, -0.7550,  0.5014,
          0.2839,  0.0083, -0.3394,  0.8422,  0.2406,  0.7544,  0.8667, -0.3680,
         -0.1571,  0.0355,  1.1797,  0.2675,  0.3181,  0.1704,  0.1241,  0.5814,
          0.0694,  0.5254, -0.1186,  1.1387,  0.1246,  0.4924,  0.9312,  0.9351,
          0.2918,  0.2597, -0.0854,  0.7063,  0.4034,  0.2608,  0.7868,  0.2929,
          0.6504,  0.0205,  0.7903,  0.7815,  0.4626, -0.0727, -0.4649,  0.6500,
          0.3352]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
988000 loss tensor(0.0600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3159,  0.8455,  0.4674,  2.0419, -1.3059, -1.5663, -0.7538,  0.5016,
          0.2830,  0.0080, -0.3416,  0.8417,  0.2391,  0.7532,  0.8655, -0.3678,
         -0.1575,  0.0347,  1.1792,  0.2664,  0.3166,  0.1711,  0.1246,  0.5822,
          0.0696,  0.5265, -0.1201,  1.1378,  0.1244,  0.4925,  0.9308,  0.9342,
          0.2914,  0.2611, -0.0843,  0.7062,  0.4040,  0.2618,  0.7878,  0.2914,
          0.6507,  0.0226,  0.7902,  0.7822,  0.4623, -0.0733, -0.4659,  0.6507,
          0.3336]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
989000 loss tensor(0.0700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0388, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3167,  0.8441,  0.4663,  2.0403, -1.3070, -1.5658, -0.7552,  0.5002,
          0.2831,  0.0071, -0.3411,  0.8406,  0.2393,  0.7530,  0.8653, -0.3677,
         -0.1563,  0.0354,  1.1782,  0.2665,  0.3172,  0.1701,  0.1240,  0.5816,
          0.0695,  0.5256, -0.1195,  1.1373,  0.1241,  0.4921,  0.9311,  0.9338,
          0.2920,  0.2605, -0.0843,  0.7061,  0.4048,  0.2611,  0.7883,  0.2922,
          0.6506,  0.0217,  0.7908,  0.7818,  0.4630, -0.0734, -0.4659,  0.6504,
          0.3338]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
990000 loss tensor(0.0713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0399, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3185,  0.8448,  0.4684,  2.0408, -1.3086, -1.5652, -0.7546,  0.4999,
          0.2831,  0.0084, -0.3412,  0.8412,  0.2394,  0.7517,  0.8657, -0.3679,
         -0.1570,  0.0341,  1.1797,  0.2673,  0.3166,  0.1700,  0.1238,  0.5825,
          0.0701,  0.5248, -0.1179,  1.1372,  0.1242,  0.4929,  0.9307,  0.9333,
          0.2921,  0.2601, -0.0854,  0.7059,  0.4031,  0.2620,  0.7871,  0.2922,
          0.6495,  0.0210,  0.7895,  0.7813,  0.4625, -0.0741, -0.4657,  0.6510,
          0.3333]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
991000 loss tensor(0.0613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3188,  0.8430,  0.4677,  2.0397, -1.3107, -1.5661, -0.7547,  0.4999,
          0.2831,  0.0084, -0.3424,  0.8409,  0.2391,  0.7520,  0.8658, -0.3678,
         -0.1568,  0.0353,  1.1790,  0.2666,  0.3162,  0.1702,  0.1238,  0.5810,
          0.0703,  0.5249, -0.1192,  1.1365,  0.1235,  0.4925,  0.9302,  0.9326,
          0.2921,  0.2608, -0.0855,  0.7049,  0.4034,  0.2601,  0.7877,  0.2917,
          0.6495,  0.0212,  0.7899,  0.7812,  0.4633, -0.0739, -0.4656,  0.6494,
          0.3340]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
992000 loss tensor(0.0709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0398, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3183,  0.8427,  0.4696,  2.0370, -1.3107, -1.5651, -0.7552,  0.4992,
          0.2814,  0.0071, -0.3429,  0.8396,  0.2395,  0.7512,  0.8658, -0.3672,
         -0.1564,  0.0339,  1.1790,  0.2675,  0.3153,  0.1698,  0.1239,  0.5811,
          0.0693,  0.5240, -0.1179,  1.1363,  0.1240,  0.4930,  0.9284,  0.9314,
          0.2923,  0.2602, -0.0853,  0.7066,  0.4042,  0.2614,  0.7888,  0.2923,
          0.6504,  0.0212,  0.7907,  0.7821,  0.4627, -0.0746, -0.4658,  0.6505,
          0.3337]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
993000 loss tensor(0.0589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0284, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3191,  0.8431,  0.4703,  2.0363, -1.3114, -1.5657, -0.7546,  0.4993,
          0.2818,  0.0073, -0.3433,  0.8392,  0.2375,  0.7500,  0.8656, -0.3676,
         -0.1561,  0.0341,  1.1778,  0.2667,  0.3154,  0.1692,  0.1233,  0.5808,
          0.0707,  0.5239, -0.1191,  1.1360,  0.1236,  0.4920,  0.9302,  0.9318,
          0.2925,  0.2608, -0.0845,  0.7051,  0.4041,  0.2611,  0.7887,  0.2925,
          0.6497,  0.0221,  0.7900,  0.7822,  0.4632, -0.0748, -0.4657,  0.6500,
          0.3337]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
994000 loss tensor(0.0653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0346, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3209,  0.8426,  0.4713,  2.0352, -1.3128, -1.5666, -0.7552,  0.4994,
          0.2818,  0.0077, -0.3450,  0.8391,  0.2378,  0.7494,  0.8658, -0.3668,
         -0.1564,  0.0337,  1.1785,  0.2682,  0.3149,  0.1693,  0.1240,  0.5822,
          0.0707,  0.5241, -0.1188,  1.1356,  0.1234,  0.4934,  0.9291,  0.9311,
          0.2912,  0.2614, -0.0840,  0.7050,  0.4031,  0.2614,  0.7882,  0.2905,
          0.6490,  0.0223,  0.7902,  0.7816,  0.4634, -0.0751, -0.4659,  0.6509,
          0.3336]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
995000 loss tensor(0.0698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0393, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3198,  0.8411,  0.4709,  2.0333, -1.3144, -1.5659, -0.7557,  0.4983,
          0.2811,  0.0067, -0.3449,  0.8387,  0.2379,  0.7492,  0.8660, -0.3672,
         -0.1559,  0.0336,  1.1776,  0.2678,  0.3154,  0.1695,  0.1230,  0.5804,
          0.0702,  0.5237, -0.1190,  1.1351,  0.1229,  0.4924,  0.9290,  0.9299,
          0.2923,  0.2612, -0.0846,  0.7050,  0.4040,  0.2610,  0.7897,  0.2918,
          0.6492,  0.0222,  0.7899,  0.7815,  0.4636, -0.0755, -0.4658,  0.6505,
          0.3335]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
996000 loss tensor(0.0623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0324, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3210,  0.8415,  0.4720,  2.0316, -1.3161, -1.5650, -0.7563,  0.4974,
          0.2815,  0.0076, -0.3451,  0.8382,  0.2390,  0.7480,  0.8669, -0.3669,
         -0.1561,  0.0348,  1.1791,  0.2678,  0.3143,  0.1702,  0.1233,  0.5811,
          0.0703,  0.5239, -0.1192,  1.1354,  0.1232,  0.4938,  0.9280,  0.9297,
          0.2924,  0.2616, -0.0855,  0.7048,  0.4028,  0.2599,  0.7889,  0.2918,
          0.6489,  0.0211,  0.7901,  0.7810,  0.4628, -0.0764, -0.4651,  0.6493,
          0.3341]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
997000 loss tensor(0.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0399, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3221,  0.8421,  0.4718,  2.0317, -1.3165, -1.5662, -0.7557,  0.4976,
          0.2820,  0.0080, -0.3472,  0.8384,  0.2373,  0.7476,  0.8658, -0.3664,
         -0.1569,  0.0342,  1.1775,  0.2671,  0.3136,  0.1685,  0.1231,  0.5801,
          0.0702,  0.5239, -0.1185,  1.1346,  0.1223,  0.4933,  0.9289,  0.9303,
          0.2921,  0.2625, -0.0830,  0.7038,  0.4032,  0.2592,  0.7891,  0.2918,
          0.6481,  0.0221,  0.7895,  0.7811,  0.4639, -0.0759, -0.4655,  0.6489,
          0.3340]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
998000 loss tensor(0.0715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0396, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3236,  0.8399,  0.4741,  2.0309, -1.3174, -1.5642, -0.7576,  0.4960,
          0.2804,  0.0064, -0.3463,  0.8368,  0.2380,  0.7471,  0.8667, -0.3662,
         -0.1552,  0.0330,  1.1782,  0.2685,  0.3131,  0.1690,  0.1234,  0.5801,
          0.0704,  0.5218, -0.1170,  1.1347,  0.1230,  0.4924,  0.9275,  0.9288,
          0.2926,  0.2607, -0.0851,  0.7054,  0.4036,  0.2606,  0.7892,  0.2917,
          0.6489,  0.0220,  0.7903,  0.7821,  0.4635, -0.0765, -0.4649,  0.6501,
          0.3342]], device='cuda:0')
frame^H@frame tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64)
999000 loss tensor(0.0608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss1 tensor(0.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) loss2 tensor(0.0299, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>) loss3 tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>) tensor([[ 1.3244,  0.8403,  0.4729,  2.0302, -1.3190, -1.5647, -0.7568,  0.4962,
          0.2807,  0.0073, -0.3470,  0.8366,  0.2383,  0.7453,  0.8670, -0.3661,
         -0.1554,  0.0328,  1.1780,  0.2680,  0.3137,  0.1680,  0.1233,  0.5798,
          0.0702,  0.5211, -0.1170,  1.1350,  0.1232,  0.4938,  0.9276,  0.9289,
          0.2934,  0.2611, -0.0844,  0.7049,  0.4027,  0.2592,  0.7883,  0.2921,
          0.6483,  0.0209,  0.7896,  0.7806,  0.4631, -0.0773, -0.4640,  0.6496,
          0.3343]], device='cuda:0')
完成共1000000轮迭代 推荐参数如下：
收敛loss为： ('超出最大迭代次数', tensor(0.0668))
tensor([[ 1.8361,  1.3595,  0.5909,  2.4367,  0.0248, -0.6035, -0.3506,  0.8805,
          0.7123,  0.2982, -0.2110,  1.0127,  0.6891,  2.2789,  0.4470,  0.1036,
         -0.0742,  0.3510,  1.4394,  0.0638,  0.7252,  0.3144, -0.0548,  0.6578,
          0.2365,  0.9865, -0.0536,  1.4257,  0.2030,  0.6146,  1.3157,  2.1245,
          0.4586,  0.2639,  0.1063,  1.1277,  0.6350,  0.2704,  0.7603,  0.0526,
          0.9763,  0.2833,  0.6831,  1.0562, -0.4011, -0.0185, -0.3858,  0.9770,
          0.3202]], device='cuda:0')
4139.306838274002
         2456478496 function calls (2450809122 primitive calls) in 4169.454 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   2837/1    0.065    0.000 4169.461 4169.461 {built-in method builtins.exec}
        1    0.007    0.007 4169.461 4169.461 test.py:1(<module>)
        1   61.666   61.666 4139.300 4139.300 para4band.py:466(train_Stiefel)
  1000000   10.379    0.000 1215.862    0.001 optimizer.py:265(wrapper)
  1000000  136.876    0.000 1208.672    0.001 para4band.py:446(loss_Stiefel)
  1000000    6.152    0.000 1180.087    0.001 optimizer.py:29(_use_grad)
  1000000    5.345    0.000 1170.789    0.001 adam.py:108(step)
  1000000   41.697    0.000 1020.592    0.001 adam.py:231(adam)
  1000000    3.093    0.000  993.460    0.001 _tensor.py:428(backward)
  1000000    4.308    0.000  990.113    0.001 __init__.py:106(backward)
  1000000  967.133    0.001  967.133    0.001 {method 'run_backward' of 'torch._C._EngineBase' objects}
  1000000   13.243    0.000  942.205    0.001 adam.py:396(_multi_tensor_adam)
2000000/1000000    5.225    0.000  844.489    0.001 module.py:1494(_call_impl)
  1000000    6.770    0.000  840.145    0.001 para4band.py:111(forward)
  2000000    7.945    0.000  653.214    0.000 _contextlib.py:112(decorate_context)
  1000003    1.763    0.000  557.497    0.001 para4tb.py:113(create_model_function)
  1000003  305.527    0.000  555.735    0.001 para4tb.py:87(__create_TB_function)
  1000000  372.743    0.000  511.560    0.001 para4band.py:31(fast_cayley_retraction)
  2000000  232.508    0.000  232.508    0.000 {built-in method torch._foreach_add_}
  1000003    9.015    0.000  186.479    0.000 para4tb.py:92(<listcomp>)
 50050300   15.720    0.000  177.657    0.000 container.py:629(<genexpr>)
  1000001   20.750    0.000  164.072    0.000 para4tb.py:101(matrix_function)
 49049294   35.839    0.000  161.936    0.000 container.py:603(__getitem__)
  1000000   97.617    0.000  130.083    0.000 adam.py:66(_init_group)
  1000000   98.166    0.000  119.930    0.000 _foreach_utils.py:20(_group_tensors_by_device_and_dtype)
  1000000   24.200    0.000  107.516    0.000 para4band.py:136(loss1)
 98000000   61.088    0.000  102.176    0.000 optimizer.py:39(_get_value)
  1000000   99.602    0.000   99.602    0.000 {built-in method torch._foreach_addcmul_}
  1000000    1.475    0.000   99.366    0.000 para4band.py:49(forward)
  1000000    3.249    0.000   97.892    0.000 function.py:501(apply)
  2000002   11.690    0.000   97.574    0.000 functional.py:192(einsum)
  3000001   90.454    0.000   90.454    0.000 {built-in method torch.matmul}
      295    0.011    0.000   89.538    0.304 __init__.py:1(<module>)
  1000000   12.075    0.000   88.415    0.000 {built-in method apply}
  2000002   82.374    0.000   82.374    0.000 {built-in method torch.einsum}
  1000000    4.556    0.000   76.340    0.000 para4band.py:54(forward)
  1000000   17.941    0.000   72.185    0.000 adam.py:489(<listcomp>)
 49049392   34.869    0.000   69.155    0.000 container.py:586(_get_abs_string_index)
  3001001   67.915    0.000   67.915    0.000 {built-in method torch.abs}
  1000000   65.236    0.000   65.236    0.000 {built-in method torch._foreach_add}
  1000000   64.994    0.000   64.994    0.000 {built-in method torch._foreach_sqrt}
  5998000   64.848    0.000   64.848    0.000 {built-in method torch.mean}
  1000000   15.565    0.000   63.497    0.000 adam.py:490(<listcomp>)
  1000000   32.760    0.000   61.502    0.000 optimizer.py:435(zero_grad)
 57165966   38.595    0.000   53.145    0.000 {built-in method builtins.getattr}
  1000000    9.429    0.000   51.201    0.000 adam.py:494(<listcomp>)
 49000000   28.415    0.000   41.773    0.000 optimizer.py:52(_dispatch_sqrt)
216562932/216559831   29.548    0.000   40.013    0.000 {built-in method builtins.len}
 99057052   38.009    0.000   38.009    0.000 {method 'item' of 'torch._C._TensorBase' objects}
  1998000   14.705    0.000   36.037    0.000 functional.py:1387(norm)
196000000   35.395    0.000   35.395    0.000 {built-in method torch.is_complex}
  3038204    9.492    0.000   34.905    0.000 {built-in method builtins.all}
  1071960   33.876    0.000   33.878    0.000 {built-in method builtins.min}
  1001004   30.663    0.000   30.663    0.000 {built-in method torch.stack}
  4000228   16.450    0.000   30.433    0.000 module.py:1617(__setattr__)
492131025   28.949    0.000   28.949    0.000 {method 'append' of 'list' objects}
170351627/166345153   20.202    0.000   28.482    0.000 {built-in method builtins.isinstance}
  1000000   28.247    0.000   28.247    0.000 {built-in method torch._foreach_div_}
   998209   26.944    0.000   26.944    0.000 {built-in method torch.tensor}
   2672/5    0.013    0.000   26.738    5.348 <frozen importlib._bootstrap>:1167(_find_and_load)
   2638/5    0.010    0.000   26.738    5.348 <frozen importlib._bootstrap>:1122(_find_and_load_unlocked)
  2361/12    0.008    0.000   26.733    2.228 <frozen importlib._bootstrap>:666(_load_unlocked)
   2163/5    0.005    0.000   26.732    5.346 <frozen importlib._bootstrap_external>:934(exec_module)
  5727/13    0.003    0.000   26.689    2.053 <frozen importlib._bootstrap>:233(_call_with_frames_removed)
  2000000   26.684    0.000   26.684    0.000 {built-in method torch._foreach_mul_}
  1000000   26.458    0.000   26.458    0.000 {built-in method torch._foreach_addcdiv_}
  2000000    3.656    0.000   25.208    0.000 profiler.py:491(__enter__)
  1075/92    0.002    0.000   23.884    0.260 {built-in method builtins.__import__}
  2000005   23.221    0.000   23.221    0.000 {method 'type' of 'torch._C._TensorBase' objects}
  1000000   21.854    0.000   21.854    0.000 {method 'repeat' of 'torch._C._TensorBase' objects}
  2000000    1.477    0.000   21.553    0.000 _ops.py:497(__call__)
  1000000   21.164    0.000   21.164    0.000 {built-in method torch.topk}
  1998000   20.555    0.000   20.555    0.000 {built-in method torch._C._linalg.linalg_vector_norm}
  2000000    8.659    0.000   20.362    0.000 profiler.py:495(__exit__)
  2000000   20.075    0.000   20.075    0.000 {built-in method torch._ops.profiler._record_function_enter_new}
     2163    0.014    0.000   19.256    0.009 <frozen importlib._bootstrap_external>:1007(get_code)
  1000000    1.710    0.000   19.120    0.000 optimizer.py:64(_default_to_fused_or_foreach)
     2164    0.006    0.000   18.962    0.009 <frozen importlib._bootstrap_external>:1127(get_data)
 52054399   18.247    0.000   18.247    0.000 module.py:1601(__getattr__)
 2430/660    0.005    0.000   18.046    0.027 <frozen importlib._bootstrap>:1209(_handle_fromlist)
2240/2170   17.910    0.008   18.046    0.008 {method 'read' of '_io.BufferedReader' objects}
  1000000    1.393    0.000   17.946    0.000 _tensor.py:34(wrapped)
  1000001   17.819    0.000   17.819    0.000 {built-in method torch.diag_embed}
  1000000    8.413    0.000   17.668    0.000 adam.py:433(<listcomp>)
  5001003   17.583    0.000   17.583    0.000 {method 'transpose' of 'torch._C._TensorBase' objects}
  1000000    4.008    0.000   16.986    0.000 __init__.py:50(_make_grads)
  1000005   16.943    0.000   16.943    0.000 {built-in method torch.zeros}
  1000000    9.099    0.000   16.242    0.000 _tensor.py:850(__rdiv__)
  1000000    6.962    0.000   15.955    0.000 adam.py:436(<listcomp>)
  1000000    7.097    0.000   15.680    0.000 adam.py:434(<listcomp>)
  1000000    6.928    0.000   15.491    0.000 adam.py:435(<listcomp>)
  1000000    1.968    0.000   14.476    0.000 optimizer.py:228(_cuda_graph_capture_health_check)
 49000294    9.372    0.000   14.079    0.000 _tensor.py:942(__hash__)
  3000000   13.280    0.000   13.280    0.000 {built-in method torch.diagonal}
 50000000   10.367    0.000   13.127    0.000 adam.py:268(<genexpr>)
  5001001   12.710    0.000   12.710    0.000 {method 'conj' of 'torch._C._TensorBase' objects}
 50000000   12.272    0.000   12.272    0.000 optimizer.py:72(<genexpr>)
  1000000   12.106    0.000   12.106    0.000 {built-in method torch.ones_like}
  1000001   12.095    0.000   12.095    0.000 {method 'clone' of 'torch._C._TensorBase' objects}
  1000003    1.488    0.000   11.235    0.000 __init__.py:94(is_available)
155011112   11.100    0.000   11.100    0.000 _jit_internal.py:1102(is_scripting)
  2000000    1.483    0.000   11.062    0.000 _ops.py:286(__call__)
 99099891   10.463    0.000   10.463    0.000 container.py:625(__len__)
  2000000    9.579    0.000    9.579    0.000 {built-in method torch._ops.profiler.}
  4006132    6.821    0.000    8.827    0.000 parameter.py:8(__instancecheck__)
  1000000    8.262    0.000    8.262    0.000 {built-in method torch.randint}
  1000001    7.944    0.000    7.944    0.000 {built-in method torch.exp}
        1    0.000    0.000    7.838    7.838 band.py:1(<module>)
  1000003    1.003    0.000    7.419    0.000 __init__.py:91(_nvml_based_avail)
  6022204    5.006    0.000    7.177    0.000 grad_mode.py:149(__init__)
  1000000    7.143    0.000    7.143    0.000 {method 'reciprocal' of 'torch._C._TensorBase' objects}
  1000025    0.695    0.000    6.417    0.000 <frozen os>:772(getenv)
 99000000    6.392    0.000    6.392    0.000 _utils.py:786(is_compiling)
  2000000    4.130    0.000    6.207    0.000 profiler.py:482(__init__)
        1    0.001    0.001    5.974    5.974 _meta_registrations.py:1(<module>)
  1000000    2.376    0.000    5.802    0.000 utils.py:18(unwrap_dead_wrappers)
  1001246    1.587    0.000    5.722    0.000 <frozen _collections_abc>:771(get)
        2    0.001    0.000    5.546    2.773 decompositions.py:1(<module>)
        1    0.000    0.000    5.414    5.414 band_data_in.py:1(<module>)
        1    0.000    0.000    5.278    5.278 fake_tensor.py:1(<module>)
        1    0.000    0.000    5.231    5.231 _guards.py:1(<module>)
  1000000    4.936    0.000    4.936    0.000 {method 'view' of 'torch._C._TensorBase' objects}
  2000000    1.655    0.000    4.834    0.000 _contextlib.py:141(clone)
 49023449    4.709    0.000    4.709    0.000 {built-in method builtins.id}
  2011102    2.092    0.000    4.667    0.000 grad_mode.py:57(__exit__)
2361/2230    0.004    0.000    4.512    0.002 <frozen importlib._bootstrap>:566(module_from_spec)
  160/140    0.000    0.000    4.459    0.032 <frozen importlib._bootstrap_external>:1231(create_module)
  160/140    3.578    0.022    4.459    0.032 {built-in method _imp.create_dynamic}
  2011102    2.038    0.000    4.319    0.000 grad_mode.py:53(__enter__)
 49000007    4.139    0.000    4.139    0.000 {built-in method math.sqrt}
  1000355    2.757    0.000    4.136    0.000 <frozen os>:673(__getitem__)
        1    0.000    0.000    3.896    3.896 outputs.py:1(<module>)
  1000000    3.856    0.000    3.856    0.000 adam.py:492(<listcomp>)
  1049051    3.648    0.000    3.648    0.000 {method 'detach' of 'torch._C._TensorBase' objects}
 49055745    3.581    0.000    3.581    0.000 {built-in method _operator.index}
        1    0.000    0.000    3.521    3.521 para4band.py:123(__init__)
        1    0.000    0.000    3.521    3.521 para4band.py:83(__init__)
        1    0.000    0.000    3.520    3.520 para4tb.py:13(__init__)
  3000000    1.771    0.000    3.425    0.000 utils.py:20(<genexpr>)
  1001006    1.967    0.000    3.348    0.000 container.py:628(__iter__)
        1    0.000    0.000    3.292    3.292 dos.py:1(<module>)
        3    0.000    0.000    3.255    1.085 _support_alternative_backends.py:1(<module>)
  2011112    3.011    0.000    3.194    0.000 grad_mode.py:48(__init__)
        1    0.000    0.000    3.174    3.174 tight_binding_hamiltonian.py:1(<module>)
  1000000    2.548    0.000    3.164    0.000 _foreach_utils.py:24(<listcomp>)
  2010005    3.139    0.000    3.139    0.000 {built-in method torch._C._get_tracing_state}
        1    0.000    0.000    3.123    3.123 _signal_api.py:1(<module>)
        1    0.000    0.000    3.094    3.094 Orbit_spd_manager.py:1(<module>)
        1    0.000    0.000    3.089    3.089 Orbit_spd_with_spin.py:1(<module>)
        1    0.000    0.000    3.087    3.087 Orbit_spd_without_spin.py:1(<module>)
        1    0.000    0.000    3.085    3.085 Orbit_spd.py:1(<module>)
  160/129    0.000    0.000    2.875    0.022 <frozen importlib._bootstrap_external>:1239(exec_module)
  160/129    0.014    0.000    2.874    0.022 {built-in method _imp.exec_dynamic}
     2005    0.020    0.000    2.542    0.001 {built-in method builtins.print}
  1000000    2.528    0.000    2.528    0.000 module.py:1676(__delattr__)
     6002    0.015    0.000    2.521    0.000 _tensor.py:420(__repr__)
     6002    0.048    0.000    2.505    0.000 _tensor_str.py:633(_str)
        1    0.000    0.000    2.454    2.454 eager_transforms.py:1(<module>)
     6002    0.153    0.000    2.363    0.000 _tensor_str.py:366(_str_intern)
  1000000    0.436    0.000    2.123    0.000 graphs.py:19(is_current_stream_capturing)
     5002    0.037    0.000    2.120    0.000 _tensor_str.py:287(_tensor_str)
        5    0.000    0.000    2.058    0.412 functional.py:1(<module>)
 13071510    2.046    0.000    2.046    0.000 {method 'get' of 'dict' objects}
  9033306    1.914    0.000    1.914    0.000 {built-in method torch.is_grad_enabled}
     5002    0.541    0.000    1.882    0.000 _tensor_str.py:100(__init__)
2003902/2003650    1.819    0.000    1.867    0.000 typing.py:357(inner)
  1000000    1.186    0.000    1.796    0.000 _foreach_utils.py:27(<lambda>)
2498/2398    0.019    0.000    1.794    0.001 <frozen importlib._bootstrap>:1056(_find_spec)
        1    0.000    0.000    1.760    1.760 proxy_tensor.py:1(<module>)
        2    0.000    0.000    1.759    0.879 python.py:1(<module>)
  1000000    1.687    0.000    1.687    0.000 {built-in method torch._C._cuda_isCurrentStreamCapturing}
    15109    1.657    0.000    1.682    0.000 {method 'to' of 'torch._C._TensorBase' objects}
        2    0.000    0.000    1.657    0.829 module.py:1039(to)
        2    0.000    0.000    1.657    0.829 module.py:795(_apply)
       98    0.000    0.000    1.656    0.017 module.py:1139(convert)
  1221865    1.175    0.000    1.626    0.000 {method 'format' of 'str' objects}
  2000015    1.074    0.000    1.588    0.000 _VF.py:26(__getattr__)
        1    0.000    0.000    1.568    1.568 _kdtree.py:1(<module>)
        1    0.000    0.000    1.543    1.543 para4band.py:89(init_frame)
        1    0.000    0.000    1.478    1.478 inputs.py:1(<module>)
        1    0.000    0.000    1.445    1.445 _spline_filters.py:1(<module>)
        1    0.000    0.000    1.443    1.443 _signaltools.py:1(<module>)
  1000003    1.433    0.000    1.433    0.000 {built-in method torch._C._cuda_getDeviceCount}
        1    0.000    0.000    1.416    1.416 _ltisys.py:1(<module>)
  2000000    1.410    0.000    1.410    0.000 {built-in method torch._C._functorch.unwrap_if_dead}
        1    0.000    0.000    1.381    1.381 pyplot.py:1(<module>)
  1000363    0.844    0.000    1.378    0.000 <frozen os>:755(encode)
        1    0.000    0.000    1.357    1.357 _peak_finding.py:1(<module>)
        1    0.000    0.000    1.283    1.283 _interpolate.py:1(<module>)
        1    0.000    0.000    1.226    1.226 _fitpack_py.py:1(<module>)
        1    0.000    0.000    1.211    1.211 polyfuncs.py:1(<module>)
        1    0.000    0.000    1.209    1.209 specialpolys.py:1(<module>)
     2491    0.002    0.000    1.200    0.000 <frozen importlib._bootstrap_external>:1496(find_spec)
2504/2491    0.007    0.000    1.198    0.000 <frozen importlib._bootstrap_external>:1464(_get_spec)
  1000001    1.195    0.000    1.195    0.000 {method 'requires_grad_' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    1.184    1.184 _bsplines.py:1(<module>)
     3686    0.028    0.000    1.177    0.000 <frozen importlib._bootstrap_external>:1604(find_spec)
        4    0.000    0.000    1.117    0.279 _base.py:1(<module>)
    10559    0.004    0.000    1.104    0.000 <frozen importlib._bootstrap_external>:140(_path_stat)
    10728    1.103    0.000    1.103    0.000 {built-in method posix.stat}
    46/41    0.000    0.000    1.087    0.027 __init__.py:108(import_module)
    47/41    0.000    0.000    1.087    0.027 <frozen importlib._bootstrap>:1194(_gcd_import)
        1    0.000    0.000    1.081    1.081 rings.py:1(<module>)
  6022204    1.081    0.000    1.081    0.000 {built-in method torch._C._set_grad_enabled}
     2164    1.070    0.000    1.070    0.000 {built-in method io.open_code}
     4417    0.003    0.000    1.070    0.000 <frozen importlib._bootstrap_external>:150(_path_is_mode_type)
     3972    0.002    0.000    1.070    0.000 <frozen importlib._bootstrap_external>:159(_path_isfile)
2043858/2043517    0.513    0.000    1.004    0.000 {built-in method builtins.hasattr}
5017/4863    0.072    0.000    0.984    0.000 {built-in method builtins.__build_class__}
  2000000    0.941    0.000    0.941    0.000 {built-in method torch._C._are_functorch_transforms_active}
        1    0.000    0.000    0.911    0.911 mock.py:1(<module>)
  1000004    0.637    0.000    0.895    0.000 __init__.py:87(_is_compiled)
  4006132    0.877    0.000    0.877    0.000 {function _ParameterMeta.__instancecheck__ at 0x15529acff9c0}
        1    0.000    0.000    0.874    0.874 _sputils.py:1(<module>)
        2    0.000    0.000    0.865    0.433 _util.py:1(<module>)
  3000002    0.862    0.000    0.862    0.000 {built-in method torch._C._has_torch_function}
        1    0.000    0.000    0.859    0.859 _array_api.py:1(<module>)
  3057052    0.803    0.000    0.803    0.000 {built-in method torch._C._has_torch_function_unary}
        1    0.000    0.000    0.774    0.774 pycode.py:1(<module>)
        1    0.000    0.000    0.772    0.772 codeprinter.py:1(<module>)
       10    0.000    0.000    0.709    0.071 linear.py:1(<module>)
        1    0.000    0.000    0.705    0.705 figure.py:1(<module>)
        1    0.000    0.000    0.695    0.695 para4tb.py:32(load_and_check_matrix)
        6    0.000    0.000    0.675    0.113 __init__.py:274(load)
        1    0.001    0.001    0.672    0.672 _stats_py.py:1(<module>)
        5    0.000    0.000    0.670    0.134 serialization.py:28(loadfn)
  1000000    0.537    0.000    0.661    0.000 optimizer.py:46(_stack_if_compiling)
        1    0.000    0.000    0.627    0.627 const_fold.py:1(<module>)
        1    0.623    0.623    0.623    0.623 {built-in method torch._C._linalg.linalg_eigh}
        1    0.000    0.000    0.618    0.618 _subplots.py:1(<module>)
2500/2398    0.002    0.000    0.611    0.000 __init__.py:101(find_spec)
      2/1    0.000    0.000    0.608    0.608 __init__.py:111(spec_for_distutils)
        1    0.000    0.000    0.593    0.593 _jit_internal.py:1(<module>)
        1    0.000    0.000    0.593    0.593 _axes.py:1(<module>)
  4000104    0.589    0.000    0.589    0.000 {method 'values' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.562    0.562 inputs.py:1947(PotcarSingle)
  1000000    0.547    0.000    0.547    0.000 _foreach_utils.py:27(<listcomp>)
 1159/799    0.001    0.000    0.543    0.001 {built-in method builtins.sum}
      400    0.005    0.000    0.542    0.001 matrix_element.py:127(__add__)
        1    0.000    0.000    0.522    0.522 colorbar.py:1(<module>)
    16118    0.025    0.000    0.517    0.000 numeric.py:2170(allclose)
       19    0.001    0.000    0.507    0.027 utils.py:1(<module>)
        1    0.000    0.000    0.502    0.502 distributions.py:1(<module>)
        1    0.000    0.000    0.485    0.485 partfrac.py:1(<module>)
        1    0.000    0.000    0.485    0.485 decorator.py:65(xthreaded)
        1    0.000    0.000    0.485    0.485 decorator.py:16(threaded_factory)
        7    0.003    0.000    0.477    0.068 __init__.py:299(loads)
  1000000    0.472    0.000    0.472    0.000 __init__.py:98(_tensor_or_tensors_to_tuple)
        5    0.000    0.000    0.472    0.094 json.py:885(decode)
  1021008    0.465    0.000    0.465    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
        3    0.000    0.000    0.455    0.152 __config__.py:1(<module>)
    53050    0.060    0.000    0.452    0.000 _tensor.py:868(__format__)
      400    0.000    0.000    0.451    0.001 matrix_element.py:14(__init__)
      400    0.013    0.000    0.450    0.001 matrix_element.py:21(check_input)
  1000498    0.438    0.000    0.438    0.000 {method 'encode' of 'str' objects}
    16118    0.063    0.000    0.437    0.000 numeric.py:2249(isclose)
  2000000    0.433    0.000    0.433    0.000 {method '__exit__' of 'torch._C.DisableTorchFunctionSubclass' objects}
        1    0.000    0.000    0.432    0.432 _optimize.py:1(<module>)
       31    0.000    0.000    0.429    0.014 __init__.py:129(__getattr__)
  1000000    0.424    0.000    0.424    0.000 function.py:18(save_for_backward)
 571498/5    0.170    0.000    0.378    0.076 json.py:728(process_decoded)
26830/756    0.061    0.000    0.377    0.000 json.py:876(<dictcomp>)
        1    0.000    0.000    0.373    0.373 polytools.py:1(<module>)
        1    0.000    0.000    0.358    0.358 ctx_fp.py:1(<module>)
        1    0.000    0.000    0.352    0.352 products.py:1(<module>)
        2    0.000    0.000    0.349    0.174 constructor.py:1(<module>)
23121/12951    0.076    0.000    0.346    0.000 json.py:881(<listcomp>)
        1    0.000    0.000    0.345    0.345 contour.py:1(<module>)
        1    0.000    0.000    0.327    0.327 ctx_base.py:1(<module>)
       12    0.001    0.000    0.318    0.027 core.py:1(<module>)
        1    0.003    0.003    0.316    0.316 {built-in method torch._C._initExtension}
        2    0.000    0.000    0.315    0.158 dist.py:1(<module>)
        1    0.000    0.000    0.310    0.310 distributed_c10d.py:1(<module>)
        2    0.000    0.000    0.310    0.155 main.py:1(<module>)
        2    0.000    0.000    0.302    0.151 quantize.py:1(<module>)
        1    0.000    0.000    0.296    0.296 _geometric_slerp.py:1(<module>)
        2    0.000    0.000    0.284    0.142 distance.py:1(<module>)
        1    0.000    0.000    0.284    0.284 immutable.py:1(<module>)
        1    0.000    0.000    0.281    0.281 base_events.py:1(<module>)
        1    0.000    0.000    0.277    0.277 summations.py:1(<module>)
        5    0.000    0.000    0.274    0.055 errors.py:1(<module>)
     1000    0.019    0.000    0.270    0.000 para4band.py:545(<listcomp>)
    16118    0.090    0.000    0.268    0.000 numeric.py:2330(within_tol)
        1    0.000    0.000    0.268    0.268 _distn_infrastructure.py:1(<module>)
  2000000    0.261    0.000    0.261    0.000 __init__.py:89(annotate)
1012089/1012084    0.257    0.000    0.257    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.253    0.253 _misc.py:1(<module>)
        1    0.000    0.000    0.252    0.252 json.py:1(<module>)
        1    0.000    0.000    0.251    0.251 rcsetup.py:1(<module>)
        1    0.000    0.000    0.247    0.247 _diagnostic.py:1(<module>)
        2    0.000    0.000    0.246    0.123 utilities.py:1(<module>)
        1    0.000    0.000    0.239    0.239 hub.py:1(<module>)
        1    0.000    0.000    0.232    0.232 wannier90.py:1(<module>)
        1    0.000    0.000    0.231    0.231 sympify.py:1(<module>)
        2    0.000    0.000    0.231    0.116 structure.py:1(<module>)
     2162    0.005    0.000    0.230    0.000 <frozen importlib._bootstrap_external>:727(_compile_bytecode)
     2162    0.221    0.000    0.221    0.000 {built-in method marshal.loads}
        1    0.000    0.000    0.220    0.220 ode.py:1(<module>)
        2    0.000    0.000    0.219    0.110 text.py:1(<module>)
        1    0.000    0.000    0.219    0.219 expr.py:1(<module>)
        1    0.000    0.000    0.216    0.216 _minimize.py:1(<module>)
     5002    0.215    0.000    0.215    0.000 {built-in method torch.masked_select}
       10    0.067    0.007    0.214    0.021 {method 'read' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    0.214    0.214 override.py:1(<module>)
        1    0.000    0.000    0.214    0.214 __init__.py:80(do_override)
        1    0.000    0.000    0.214    0.214 __init__.py:63(ensure_local_distutils)
        1    0.000    0.000    0.213    0.213 _csr.py:1(<module>)
        1    0.000    0.000    0.212    0.212 cyaml.py:1(<module>)
        1    0.000    0.000    0.200    0.200 symbolic_opset11.py:1(<module>)
        3    0.000    0.000    0.197    0.066 solvers.py:1(<module>)
      245    0.000    0.000    0.196    0.001 _docscrape.py:579(__init__)
6003/5002    0.012    0.000    0.195    0.000 _tensor_str.py:250(_tensor_str_with_formatter)
        1    0.000    0.000    0.192    0.192 _infra.py:1(<module>)
        1    0.000    0.000    0.191    0.191 _windows.py:1(<module>)
        3    0.000    0.000    0.187    0.062 numbers.py:1(<module>)
     5002    0.186    0.000    0.186    0.000 {built-in method torch.isfinite}
  1002184    0.183    0.000    0.183    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.180    0.180 fontconfig_pattern.py:1(<module>)
        1    0.000    0.000    0.180    0.180 integrals.py:1(<module>)
        2    0.000    0.000    0.177    0.088 dense.py:1(<module>)
        1    0.000    0.000    0.177    0.177 plot.py:1(<module>)
        1    0.000    0.000    0.176    0.176 formatter.py:1(<module>)
      251    0.001    0.000    0.174    0.001 _docscrape.py:140(__init__)
        2    0.000    0.000    0.171    0.086 bsplines.py:1(<module>)
        1    0.000    0.000    0.165    0.165 _linprog.py:1(<module>)
        1    0.000    0.000    0.157    0.157 textpath.py:1(<module>)
        2    0.000    0.000    0.157    0.078 _compression.py:113(readall)
        1    0.000    0.000    0.152    0.152 mathtext.py:1(<module>)
        1    0.000    0.000    0.152    0.152 _multicomp.py:1(<module>)
        1    0.015    0.015    0.151    0.151 {built-in method _pickle.load}
      109    0.000    0.000    0.150    0.001 linecache.py:36(getlines)
       50    0.000    0.000    0.150    0.003 linecache.py:80(updatecache)
        1    0.000    0.000    0.150    0.150 request.py:1(<module>)
        2    0.000    0.000    0.149    0.074 fake_quantize.py:1(<module>)
        2    0.000    0.000    0.148    0.074 function.py:1(<module>)
       13    0.000    0.000    0.147    0.011 tokenize.py:392(open)
        1    0.000    0.000    0.146    0.146 bz2.py:157(read)
       29    0.000    0.000    0.145    0.005 tokenize.py:299(detect_encoding)
       34    0.000    0.000    0.145    0.004 tokenize.py:323(read_or_stop)
       18    0.145    0.008    0.145    0.008 {method 'readline' of '_io.BufferedReader' objects}
    48354    0.029    0.000    0.144    0.000 fromnumeric.py:2421(all)
        9    0.000    0.000    0.144    0.016 _compression.py:72(read)
        1    0.000    0.000    0.144    0.144 matrixbase.py:1(<module>)
        1    0.000    0.000    0.142    0.142 client.py:1(<module>)
        4    0.000    0.000    0.141    0.035 basic.py:1(<module>)
     1001    0.007    0.000    0.140    0.000 _tensor_str.py:276(<listcomp>)
        1    0.000    0.000    0.136    0.136 _qmc.py:1(<module>)
 2056/183    0.001    0.000    0.136    0.001 cache.py:69(wrapper)
        1    0.000    0.000    0.135    0.135 _docscrape.py:1(<module>)
    28/25    0.000    0.000    0.135    0.005 operations.py:62(__new__)
        1    0.000    0.000    0.135    0.135 mul.py:1(<module>)
      251    0.004    0.000    0.135    0.001 _docscrape.py:388(_parse)
        2    0.000    0.000    0.134    0.067 observer.py:1(<module>)
       39    0.134    0.003    0.134    0.003 {method 'decompress' of '_bz2.BZ2Decompressor' objects}
        5    0.000    0.000    0.133    0.027 add.py:197(flatten)
  1000000    0.132    0.000    0.132    0.000 optimizer.py:249(_optimizer_step_code)
     1001    0.009    0.000    0.130    0.000 _tensor_str.py:208(_vector_str)
        1    0.000    0.000    0.130    0.130 multiarray.py:1(<module>)
        1    0.000    0.000    0.130    0.130 Image.py:1(<module>)
        1    0.000    0.000    0.129    0.129 blas.py:1(<module>)
        1    0.000    0.000    0.127    0.127 singularity_functions.py:1(<module>)
        1    0.000    0.000    0.125    0.125 delta_functions.py:1(<module>)
        3    0.000    0.000    0.125    0.042 _basic.py:1(<module>)
        2    0.000    0.000    0.125    0.062 overrides.py:1(<module>)
        1    0.000    0.000    0.123    0.123 _compressed.py:1(<module>)
        1    0.000    0.000    0.123    0.123 _root.py:1(<module>)
        1    0.000    0.000    0.122    0.122 memory.py:1(<module>)
        2    0.000    0.000    0.122    0.061 parser.py:1(<module>)
        1    0.000    0.000    0.121    0.121 _memory_viz.py:1(<module>)
        1    0.000    0.000    0.121    0.121 _script.py:1(<module>)
        1    0.000    0.000    0.119    0.119 tensor.py:1(<module>)
        1    0.000    0.000    0.117    0.117 datapipe.py:1(<module>)
    10005    0.016    0.000    0.117    0.000 _tensor.py:920(__iter__)
    48391    0.045    0.000    0.115    0.000 fromnumeric.py:71(_wrapreduction)
        2    0.000    0.000    0.115    0.057 _parser.py:1(<module>)
        2    0.000    0.000    0.114    0.057 domainmatrix.py:1(<module>)
        3    0.000    0.000    0.113    0.038 para4tb.py:126(set_zero_and_init_matrix_fuction)
        4    0.000    0.000    0.112    0.028 eigen.py:1(<module>)
       16    0.000    0.000    0.112    0.007 traceback.py:220(extract_stack)
       16    0.000    0.000    0.112    0.007 traceback.py:375(extract)
       16    0.000    0.000    0.112    0.007 traceback.py:397(_extract_from_extended_frame_gen)
      181    0.000    0.000    0.111    0.001 traceback.py:316(line)
       83    0.000    0.000    0.111    0.001 linecache.py:26(getline)
        1    0.000    0.000    0.110    0.110 bandstructure.py:1(<module>)
        1    0.000    0.000    0.110    0.110 algebraicfield.py:1(<module>)
        1    0.000    0.000    0.109    0.109 base_backend.py:1(<module>)
        1    0.000    0.000    0.107    0.107 _continuous_distns.py:1(<module>)
        1    0.000    0.000    0.106    0.106 cmd.py:1(<module>)
        1    0.000    0.000    0.106    0.106 maggroups.py:1(<module>)
        4    0.000    0.000    0.103    0.026 random.py:1(<module>)
        1    0.000    0.000    0.102    0.102 polyclasses.py:1(<module>)
        1    0.000    0.000    0.101    0.101 _recursive.py:1(<module>)
        1    0.000    0.000    0.101    0.101 _minpack_py.py:1(<module>)
        1    0.000    0.000    0.099    0.099 composition.py:1(<module>)
        2    0.000    0.000    0.098    0.049 series.py:1(<module>)
        1    0.000    0.000    0.098    0.098 lapack.py:1(<module>)
        3    0.000    0.000    0.098    0.033 linalg.py:1(<module>)
      142    0.091    0.001    0.098    0.001 __init__.py:348(namedtuple)
        2    0.000    0.000    0.098    0.049 _matfuncs.py:1(<module>)
        1    0.000    0.000    0.097    0.097 index_tricks.py:1(<module>)
        1    0.000    0.000    0.097    0.097 numerictypes.py:1(<module>)
        1    0.000    0.000    0.097    0.097 _entry_points.py:1(<module>)
        1    0.000    0.000    0.097    0.097 _ndimage_api.py:1(<module>)
        1    0.000    0.000    0.096    0.096 sparse_adam.py:1(<module>)
       10    0.096    0.010    0.096    0.010 {orjson.loads}
        1    0.000    0.000    0.096    0.096 category.py:1(<module>)
     1001    0.011    0.000    0.095    0.000 _tensor_str.py:238(<listcomp>)
        1    0.000    0.000    0.095    0.095 analyzer.py:1(<module>)
        1    0.000    0.000    0.095    0.095 slice.py:1(<module>)
        2    0.000    0.000    0.094    0.047 _aliases.py:1(<module>)
        1    0.000    0.000    0.092    0.092 _mio.py:1(<module>)
     6407    0.005    0.000    0.092    0.000 __init__.py:272(_compile)
        1    0.000    0.000    0.089    0.089 simplify.py:1(<module>)
        1    0.000    0.000    0.089    0.089 _svds.py:1(<module>)
        1    0.000    0.000    0.088    0.088 _mannwhitneyu.py:1(<module>)
    10005    0.088    0.000    0.088    0.000 {method 'unbind' of 'torch._C._TensorBase' objects}
        6    0.000    0.000    0.087    0.015 linear_relu.py:1(<module>)
        1    0.000    0.000    0.087    0.087 computed_entries.py:1(<module>)
        2    0.000    0.000    0.086    0.043 fft.py:1(<module>)
        1    0.000    0.000    0.086    0.086 autograd_function.py:1(<module>)
        1    0.000    0.000    0.086    0.086 _morestats.py:1(<module>)
     2500    0.002    0.000    0.086    0.000 inspect.py:3270(signature)
3228/2522    0.014    0.000    0.086    0.000 inspect.py:2422(_signature_from_callable)
        1    0.000    0.000    0.085    0.085 _functional.py:1(<module>)
        1    0.000    0.000    0.085    0.085 feedparser.py:1(<module>)
        1    0.000    0.000    0.085    0.085 _svdp.py:1(<module>)
        1    0.000    0.000    0.085    0.085 matexpr.py:1(<module>)
        1    0.000    0.000    0.085    0.085 _utils_internal.py:1(<module>)
    49049    0.015    0.000    0.085    0.000 _tensor_str.py:219(_val_formatter)
       97    0.001    0.000    0.084    0.001 _array_api.py:806(decorator)
     2500    0.002    0.000    0.084    0.000 inspect.py:3016(from_callable)
        3    0.000    0.000    0.084    0.028 reductions.py:1(<module>)
      295    0.001    0.000    0.083    0.000 _compiler.py:738(compile)
        1    0.000    0.000    0.083    0.083 tempfile.py:1(<module>)
    53050    0.042    0.000    0.081    0.000 _tensor_str.py:176(format)
        1    0.000    0.000    0.080    0.080 _policybase.py:1(<module>)
    32272    0.036    0.000    0.079    0.000 _ufunc_config.py:33(seterr)
        3    0.000    0.000    0.079    0.026 serialization.py:1(<module>)
        6    0.000    0.000    0.079    0.013 rnn.py:1(<module>)
        1    0.000    0.000    0.079    0.079 lambdarepr.py:1(<module>)
        1    0.000    0.000    0.078    0.078 find_first_use_of_broken_modules.py:1(<module>)
        1    0.000    0.000    0.077    0.077 spglib.py:1(<module>)
        1    0.000    0.000    0.076    0.076 power.py:1(<module>)
        3    0.000    0.000    0.076    0.025 profiler.py:1(<module>)
        7    0.000    0.000    0.073    0.010 common.py:1(<module>)
      110    0.002    0.000    0.073    0.001 _distn_infrastructure.py:1863(__init__)
        1    0.000    0.000    0.073    0.073 single.py:1(<module>)
      531    0.000    0.000    0.072    0.000 __init__.py:225(compile)
        1    0.000    0.000    0.071    0.071 symbolic_caffe2.py:1(<module>)
        1    0.000    0.000    0.070    0.070 _tensor.py:1(<module>)
        2    0.000    0.000    0.068    0.034 events.py:1(<module>)
     3025    0.042    0.000    0.067    0.000 inspect.py:867(cleandoc)
    44766    0.015    0.000    0.067    0.000 {built-in method builtins.next}
      130    0.000    0.000    0.067    0.001 dataclasses.py:1210(wrap)
        1    0.000    0.000    0.067    0.067 package_exporter.py:1(<module>)
      130    0.005    0.000    0.067    0.001 dataclasses.py:885(_process_class)
        1    0.000    0.000    0.067    0.067 _helper.py:1(<module>)
        1    0.000    0.000    0.066    0.066 _kde.py:1(<module>)
        6    0.000    0.000    0.066    0.011 conv.py:1(<module>)
        1    0.000    0.000    0.066    0.066 periodic_table.py:1(<module>)
     3197    0.009    0.000    0.065    0.000 functools.py:35(update_wrapper)
        1    0.000    0.000    0.064    0.064 minimize_trustregion_constr.py:1(<module>)
        1    0.000    0.000    0.064    0.064 pretty.py:1(<module>)
     1400    0.004    0.000    0.063    0.000 _docscrape.py:201(_read_to_next_section)
       11    0.000    0.000    0.063    0.006 artist.py:1613(kwdoc)
        1    0.000    0.000    0.063    0.063 image.py:1(<module>)
        1    0.000    0.000    0.062    0.062 numeric.py:1(<module>)
     1444    0.002    0.000    0.062    0.000 _docscrape.py:212(_read_sections)
        3    0.000    0.000    0.062    0.021 __init__.py:342(__init__)
        3    0.061    0.020    0.061    0.020 {built-in method _ctypes.dlopen}
        2    0.000    0.000    0.061    0.031 __init__.py:12(__getattr__)
        1    0.000    0.000    0.061    0.061 __init__.py:159(_load_global_deps)
       63    0.001    0.000    0.061    0.001 _axis_nan_policy.py:418(axis_nan_policy_decorator)
        1    0.000    0.000    0.060    0.060 matmul.py:1(<module>)
        2    0.000    0.000    0.060    0.030 __init__.py:181(_lazy_call)
        2    0.000    0.000    0.060    0.030 traceback.py:213(format_stack)
     2668    0.003    0.000    0.060    0.000 <frozen importlib._bootstrap>:169(__enter__)
        1    0.000    0.000    0.060    0.060 collections.py:1(<module>)
        1    0.000    0.000    0.060    0.060 _type_aliases.py:1(<module>)
        2    0.000    0.000    0.059    0.029 _ops.py:1(<module>)
        1    0.000    0.000    0.059    0.059 _ode.py:1(<module>)
     2632    0.002    0.000    0.058    0.000 inspect.py:848(getdoc)
        1    0.000    0.000    0.058    0.058 defmatrix.py:1(<module>)
        1    0.000    0.000    0.056    0.056 kl.py:1(<module>)
        1    0.000    0.000    0.056    0.056 hierarchy.py:1(<module>)
      130    0.000    0.000    0.056    0.000 dataclasses.py:1193(dataclass)
        1    0.000    0.000    0.056    0.056 _modified.py:1(<module>)
        2    0.000    0.000    0.056    0.028 quantization_mappings.py:1(<module>)
       26    0.000    0.000    0.055    0.002 _jit_internal.py:847(_check_overload_body)
        1    0.000    0.000    0.055    0.055 polyhedron.py:1(<module>)
       26    0.000    0.000    0.055    0.002 _sources.py:119(parse_def)
        1    0.000    0.000    0.055    0.055 ElementTree.py:1(<module>)
        1    0.000    0.000    0.055    0.055 Periodicity_System.py:1(<module>)
      295    0.001    0.000    0.054    0.000 _parser.py:970(parse)
      140    0.001    0.000    0.054    0.000 deprecation.py:168(deprecate)
     2005    0.017    0.000    0.053    0.000 inspect.py:2327(_signature_from_function)
        1    0.000    0.000    0.053    0.053 graph_drawer.py:1(<module>)
        1    0.000    0.000    0.053    0.053 net_min_base.py:1(<module>)
        2    0.000    0.000    0.053    0.027 _helpers.py:1(<module>)
       26    0.000    0.000    0.053    0.002 _sources.py:11(get_source_lines_and_file)
       26    0.000    0.000    0.052    0.002 inspect.py:1243(getsourcelines)
        4    0.000    0.000    0.052    0.013 graph.py:1(<module>)
  877/295    0.003    0.000    0.052    0.000 _parser.py:447(_parse_sub)
        1    0.000    0.000    0.052    0.052 sslproto.py:1(<module>)
        1    0.000    0.000    0.051    0.051 frontend.py:1(<module>)
       83    0.000    0.000    0.051    0.001 deprecation.py:222(finalize)
 1297/316    0.019    0.000    0.051    0.000 _parser.py:507(_parse)
        2    0.000    0.000    0.051    0.025 _importlib.py:1(<module>)
    16136    0.010    0.000    0.051    0.000 _ufunc_config.py:430(__enter__)
        1    0.000    0.000    0.051    0.051 graph_module.py:1(<module>)
        1    0.000    0.000    0.051    0.051 quiver.py:1(<module>)
    22152    0.010    0.000    0.051    0.000 contextlib.py:132(__enter__)
        1    0.000    0.000    0.050    0.050 quiver.py:442(Quiver)
        1    0.000    0.000    0.050    0.050 blocking_input.py:1(<module>)
      462    0.001    0.000    0.050    0.000 basic.py:212(__init_subclass__)
        1    0.000    0.000    0.050    0.050 _pickle.py:1(<module>)
     5002    0.050    0.000    0.050    0.000 {method 'min' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.050    0.050 _filters.py:1(<module>)
16014/14797    0.012    0.000    0.049    0.000 {built-in method __new__ of type object at 0x864300}
      463    0.022    0.000    0.049    0.000 assumptions.py:614(_prepare_class_assumptions)
    48398    0.049    0.000    0.049    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     2361    0.009    0.000    0.049    0.000 <frozen importlib._bootstrap>:493(_init_module_attrs)
        1    0.000    0.000    0.049    0.049 point.py:1(<module>)
       68    0.000    0.000    0.049    0.001 _util.py:1195(decorator)
        2    0.000    0.000    0.049    0.024 markers.py:1(<module>)
        1    0.000    0.000    0.049    0.049 legend.py:1(<module>)
    16136    0.010    0.000    0.049    0.000 _ufunc_config.py:435(__exit__)
        2    0.000    0.000    0.049    0.024 linsolve.py:1(<module>)
        1    0.000    0.000    0.048    0.048 _multivariate.py:1(<module>)
        2    0.000    0.000    0.048    0.024 context.py:1(<module>)
      449    0.001    0.000    0.048    0.000 __init__.py:80(decomposition_decorator)
     4863    0.046    0.000    0.048    0.000 <frozen importlib._bootstrap>:100(acquire)
        1    0.000    0.000    0.048    0.048 artist.py:1(<module>)
        1    0.000    0.000    0.047    0.047 backend_bases.py:1(<module>)
       11    0.001    0.000    0.047    0.004 artist.py:1386(pprint_setters)
        1    0.000    0.000    0.047    0.047 limits.py:1(<module>)
        2    0.000    0.000    0.047    0.023 exponential.py:1(<module>)
        1    0.000    0.000    0.046    0.046 entity.py:1(<module>)
        1    0.000    0.000    0.045    0.045 _linprog_highs.py:1(<module>)
       20    0.000    0.000    0.045    0.002 _jit_internal.py:875(_overload)
        1    0.000    0.000    0.045    0.045 evalf.py:1(<module>)
        1    0.000    0.000    0.045    0.045 basis.py:1(<module>)
      521    0.005    0.000    0.044    0.000 _docscrape.py:224(_parse_param_list)
        2    0.000    0.000    0.044    0.022 subprocess.py:1(<module>)
       87    0.000    0.000    0.044    0.001 dispatcher.py:178(add)
       87    0.000    0.000    0.044    0.001 dispatcher.py:222(reorder)
        2    0.000    0.000    0.044    0.022 scanner.py:1(<module>)
       13    0.000    0.000    0.044    0.003 library.py:32(__init__)
      463    0.009    0.000    0.043    0.000 doccer.py:29(docformat)
        1    0.000    0.000    0.043    0.043 PngImagePlugin.py:1(<module>)
        2    0.000    0.000    0.043    0.021 path.py:1(<module>)
     4001    0.004    0.000    0.043    0.000 _tensor_str.py:195(_scalar_str)
        1    0.000    0.000    0.043    0.043 shutil.py:1(<module>)
        1    0.000    0.000    0.042    0.042 assumptions.py:1(<module>)
     2700    0.007    0.000    0.042    0.000 textwrap.py:419(dedent)
     5002    0.042    0.000    0.042    0.000 {built-in method torch.ceil}
        1    0.000    0.000    0.042    0.042 symbolic_helper.py:1(<module>)
        1    0.000    0.000    0.042    0.042 _conversion.py:1(<module>)
     5002    0.042    0.000    0.042    0.000 {method 'max' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.042    0.042 groups.py:1(<module>)
        1    0.000    0.000    0.042    0.042 secrets.py:1(<module>)
        1    0.000    0.000    0.042    0.042 _discrete_distns.py:1(<module>)
      550    0.001    0.000    0.041    0.000 _pytree.py:194(tree_map)
       91    0.002    0.000    0.041    0.000 enum.py:466(__new__)
        1    0.000    0.000    0.041    0.041 iterables.py:1(<module>)
        1    0.000    0.000    0.041    0.041 tz.py:1(<module>)
    22152    0.017    0.000    0.040    0.000 contextlib.py:141(__exit__)
       26    0.000    0.000    0.040    0.002 inspect.py:1055(findsource)
        1    0.000    0.000    0.040    0.040 bernoulli.py:1(<module>)
        1    0.000    0.000    0.040    0.040 para4tb.py:73(__get_TB_fix_data)
        1    0.000    0.000    0.040    0.040 header.py:1(<module>)
    22152    0.013    0.000    0.040    0.000 contextlib.py:284(helper)
        1    0.000    0.000    0.039    0.039 ddm.py:1(<module>)
      131    0.001    0.000    0.039    0.000 _distn_infrastructure.py:830(_construct_doc)
        2    0.000    0.000    0.038    0.019 abc.py:1(<module>)
      421    0.002    0.000    0.038    0.000 dataclasses.py:413(_create_fn)
        1    0.000    0.000    0.038    0.038 unix_events.py:1(<module>)
     5002    0.038    0.000    0.038    0.000 {method 'ne' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.038    0.038 _delegation.py:1(<module>)
     5425    0.016    0.000    0.038    0.000 _docscrape.py:67(read_to_condition)
     1001    0.038    0.000    0.038    0.000 {built-in method torch.nonzero}
        2    0.000    0.000    0.037    0.019 callable.py:1(<module>)
       28    0.014    0.000    0.037    0.001 __init__.py:785(_rc_params_in_file)
        1    0.000    0.000    0.037    0.037 _decomp_lu.py:1(<module>)
    15006    0.011    0.000    0.037    0.000 _tensor_str.py:94(tensor_totype)
     4326    0.013    0.000    0.037    0.000 <frozen importlib._bootstrap_external>:437(cache_from_source)
        1    0.000    0.000    0.037    0.037 domain.py:1(<module>)
        1    0.001    0.001    0.036    0.036 groups.py:293(SpaceGroup)
        1    0.000    0.000    0.036    0.036 _spherical_voronoi.py:1(<module>)
      550    0.000    0.000    0.036    0.000 _pytree.py:196(<listcomp>)
        1    0.000    0.000    0.036    0.036 finitefield.py:1(<module>)
    21160    0.014    0.000    0.036    0.000 <frozen importlib._bootstrap_external>:126(_path_join)
        1    0.000    0.000    0.036    0.036 cli.py:1(<module>)
     5002    0.035    0.000    0.035    0.000 {method 'abs' of 'torch._C._TensorBase' objects}
      592    0.003    0.000    0.035    0.000 __init__.py:31(_add_op_to_registry)
        1    0.000    0.000    0.035    0.035 __init__.py:155(_check_versions)
        1    0.000    0.000    0.035    0.035 trigonometric.py:1(<module>)
        1    0.000    0.000    0.035    0.035 lsq_linear.py:1(<module>)
        1    0.000    0.000    0.035    0.035 dbapi2.py:1(<module>)
        1    0.000    0.000    0.035    0.035 axes3d.py:1(<module>)
     1002    0.007    0.000    0.035    0.000 enum.py:233(__set_name__)
      454    0.000    0.000    0.035    0.000 __init__.py:127(register)
        1    0.000    0.000    0.034    0.034 least_squares.py:1(<module>)
     6002    0.024    0.000    0.034    0.000 _tensor_str.py:331(_add_suffixes)
        1    0.000    0.000    0.034    0.034 complexes.py:1(<module>)
        1    0.000    0.000    0.033    0.033 gmpy.py:1(<module>)
        2    0.000    0.000    0.033    0.017 spawn.py:1(<module>)
        2    0.000    0.000    0.033    0.016 fuse_modules.py:1(<module>)
     3969    0.003    0.000    0.032    0.000 _docscrape.py:77(read_to_next_empty_line)
        1    0.000    0.000    0.032    0.032 _mio5.py:1(<module>)
        1    0.000    0.000    0.032    0.032 _funcs.py:1(<module>)
        2    0.032    0.016    0.032    0.016 {built-in method torch.sort}
        1    0.000    0.000    0.032    0.032 py3k.py:1(<module>)
        1    0.000    0.000    0.031    0.031 _rotation_groups.py:1(<module>)
        1    0.000    0.000    0.031    0.031 result.py:1(<module>)
        2    0.000    0.000    0.031    0.016 _backend.py:1(<module>)
     1465    0.005    0.000    0.031    0.000 _ops.py:447(__getattr__)
        1    0.000    0.000    0.031    0.031 pyfunctorch.py:1(<module>)
        1    0.000    0.000    0.031    0.031 nvfuser_prims.py:1(<module>)
        1    0.000    0.000    0.031    0.031 core.py:164(load_base_library)
        1    0.000    0.000    0.031    0.031 core.py:196(read_style_directory)
        1    0.003    0.003    0.031    0.031 _meta_registrations.py:2649(activate_meta)
        1    0.000    0.000    0.031    0.031 staggered.py:1(<module>)
     4220    0.015    0.000    0.031    0.000 _docscrape.py:168(_is_at_section)
        1    0.000    0.000    0.030    0.030 exp_family.py:1(<module>)
        1    0.000    0.000    0.030    0.030 locks.py:1(<module>)
        2    0.000    0.000    0.030    0.015 distributed.py:1(<module>)
       26    0.000    0.000    0.030    0.001 __init__.py:859(rc_params_from_file)
    32272    0.027    0.000    0.030    0.000 _ufunc_config.py:132(geterr)
      398    0.003    0.000    0.029    0.000 _util.py:504(getfullargspec_no_self)
        1    0.000    0.000    0.029    0.029 ssl.py:1(<module>)
     5002    0.029    0.000    0.029    0.000 {method 'reshape' of 'torch._C._TensorBase' objects}
        2    0.000    0.000    0.029    0.014 shape_base.py:1(<module>)
        1    0.000    0.000    0.029    0.029 mg_operation.py:1(<module>)
        1    0.000    0.000    0.029    0.029 _rgi.py:1(<module>)
     4486    0.003    0.000    0.029    0.000 <frozen importlib._bootstrap>:392(cached)
        1    0.000    0.000    0.029    0.029 _highs_wrapper.py:1(<module>)
        1    0.000    0.000    0.028    0.028 formal.py:1(<module>)
        1    0.000    0.000    0.028    0.028 symbol.py:1(<module>)
        1    0.000    0.000    0.028    0.028 band.py:29(get_data)
        1    0.000    0.000    0.028    0.028 band_data_in.py:13(__init__)
        1    0.000    0.000    0.028    0.028 band_data_in.py:29(__module_choose)
        1    0.001    0.001    0.028    0.028 band_data_in.py:36(__get_dat_content)
      295    0.001    0.000    0.027    0.000 _compiler.py:571(_code)
      778    0.003    0.000    0.027    0.000 _ops.py:553(__getattr__)
        1    0.000    0.000    0.027    0.027 _tokenizer.py:1(<module>)
        4    0.000    0.000    0.027    0.007 transforms.py:1(<module>)
        1    0.000    0.000    0.027    0.027 ivp.py:1(<module>)
    53050    0.027    0.000    0.027    0.000 {method '__format__' of 'float' objects}
    22152    0.022    0.000    0.027    0.000 contextlib.py:104(__init__)
        1    0.000    0.000    0.027    0.027 bz2.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _tnc.py:1(<module>)
        1    0.000    0.000    0.026    0.026 _linprog_ip.py:1(<module>)
       26    0.000    0.000    0.026    0.001 _util.py:277(decorator)
     2323    0.003    0.000    0.026    0.000 <frozen importlib._bootstrap_external>:567(_get_cached)
        1    0.001    0.001    0.026    0.026 para4band.py:18(__init__)
        1    0.000    0.000    0.025    0.025 archive_util.py:1(<module>)
     1001    0.025    0.000    0.025    0.000 {built-in method torch.eye}
        1    0.000    0.000    0.025    0.025 data_parallel.py:1(<module>)
        1    0.000    0.000    0.025    0.025 _testutils.py:1(<module>)
        1    0.000    0.000    0.025    0.025 lattice.py:1(<module>)
        1    0.000    0.000    0.025    0.025 _tool.py:1(<module>)
      4/1    0.000    0.000    0.025    0.025 __init__.py:219(_lazy_init)
        1    0.000    0.000    0.025    0.025 _external_properties.py:1(<module>)
        1    0.023    0.023    0.025    0.025 para4tb.py:55(__get_values_and_index)
        1    0.000    0.000    0.025    0.025 __init__.py:128(_check_capability)
        1    0.000    0.000    0.025    0.025 tags.py:1(<module>)
       12    0.002    0.000    0.025    0.002 artist.py:1337(get_setters)
     1111    0.004    0.000    0.025    0.000 typing.py:1336(__init__)
        1    0.000    0.000    0.025    0.025 _at.py:1(<module>)
       67    0.024    0.000    0.024    0.000 {built-in method io.open}
        5    0.000    0.000    0.024    0.005 polyhedron.py:34(__new__)
        1    0.000    0.000    0.024    0.024 npyio.py:1(<module>)
       43    0.000    0.000    0.024    0.001 dispatcher.py:147(_)
        1    0.009    0.009    0.024    0.024 band_data_in.py:71(get_band)
        1    0.000    0.000    0.024    0.024 _direct_py.py:1(<module>)
        1    0.000    0.000    0.024    0.024 error_functions.py:1(<module>)
        1    0.000    0.000    0.024    0.024 lines.py:1(<module>)
        1    0.000    0.000    0.024    0.024 forward_ad.py:1(<module>)
        1    0.000    0.000    0.024    0.024 __init__.py:645(device_count)
        1    0.000    0.000    0.024    0.024 __init__.py:616(_device_count_nvml)
        1    0.023    0.023    0.024    0.024 __init__.py:539(_raw_device_count_nvml)
        1    0.000    0.000    0.024    0.024 _new_distributions.py:1(<module>)
      120    0.001    0.000    0.024    0.000 periodic_table.py:77(__init__)
     1411    0.005    0.000    0.023    0.000 library.py:71(impl)
        1    0.000    0.000    0.023    0.023 contingency.py:1(<module>)
        3    0.000    0.000    0.023    0.008 __init__.py:984(version)
      425    0.001    0.000    0.023    0.000 artist.py:1290(get_valid_values)
        3    0.000    0.000    0.023    0.008 _distribution_infrastructure.py:1317(_combine_docs)
        1    0.000    0.000    0.023    0.023 base64.py:1(<module>)
        1    0.000    0.000    0.023    0.023 gradcheck.py:1(<module>)
     1747    0.001    0.000    0.023    0.000 artist.py:1356(is_alias)
        1    0.000    0.000    0.023    0.023 fromnumeric.py:1(<module>)
     2137    0.002    0.000    0.022    0.000 _docscrape.py:573(dedent_lines)
       87    0.000    0.000    0.022    0.000 conflict.py:24(ambiguities)
      778    0.022    0.000    0.022    0.000 {built-in method torch._C._jit_get_operation}
  583/432    0.000    0.000    0.022    0.000 typing.py:477(__getitem__)
        2    0.000    0.000    0.022    0.011 kind.py:1(<module>)
       87    0.005    0.000    0.022    0.000 conflict.py:27(<setcomp>)
      426    0.001    0.000    0.022    0.000 units.py:153(__init__)
     6709    0.013    0.000    0.022    0.000 inspect.py:2676(__init__)
        5    0.000    0.000    0.022    0.004 _common.py:1(<module>)
        1    0.000    0.000    0.022    0.022 std.py:1(<module>)
        1    0.000    0.000    0.022    0.022 node.py:1(<module>)
        1    0.000    0.000    0.022    0.022 font_manager.py:1(<module>)
        1    0.000    0.000    0.022    0.022 vq.py:1(<module>)
        2    0.000    0.000    0.022    0.011 batchnorm.py:1(<module>)
        9    0.000    0.000    0.022    0.002 exceptions.py:1(<module>)
        1    0.000    0.000    0.021    0.021 dir_util.py:1(<module>)
 2251/295    0.009    0.000    0.021    0.000 _compiler.py:37(_compile)
        1    0.000    0.000    0.021    0.021 uarray.py:1(<module>)
       35    0.000    0.000    0.021    0.001 core.py:59(_)
        1    0.000    0.000    0.021    0.021 splitter_base.py:1(<module>)
       87    0.001    0.000    0.021    0.000 conflict.py:56(ordering)
 9538/251    0.010    0.000    0.021    0.000 copy.py:128(deepcopy)
        1    0.000    0.000    0.021    0.021 dataloader.py:1(<module>)
    60057    0.017    0.000    0.021    0.000 {built-in method builtins.max}
        3    0.000    0.000    0.021    0.007 __init__.py:625(version)
        3    0.000    0.000    0.021    0.007 __init__.py:598(metadata)
      130    0.001    0.000    0.021    0.000 dataclasses.py:530(_init_fn)
64668/64665    0.018    0.000    0.020    0.000 {method 'join' of 'str' objects}
      481    0.013    0.000    0.020    0.000 doccer.py:225(indentcount_lines)
      426    0.011    0.000    0.020    0.000 units.py:163(check_mappings)
  502/251    0.003    0.000    0.020    0.000 copy.py:227(_deepcopy_dict)
      376    0.000    0.000    0.020    0.000 __init__.py:686(__getitem__)
        1    0.000    0.000    0.020    0.020 animation.py:1(<module>)
      3/2    0.000    0.000    0.020    0.010 pyplot.py:216(switch_backend)
    12004    0.016    0.000    0.020    0.000 _python_dispatch.py:86(_disable_current_modes)
        1    0.000    0.000    0.020    0.020 trf_linear.py:1(<module>)
        1    0.000    0.000    0.020    0.020 libmpc.py:1(<module>)
        2    0.000    0.000    0.020    0.010 decoder.py:1(<module>)
      131    0.001    0.000    0.020    0.000 _distn_infrastructure.py:749(_construct_argparser)
        1    0.000    0.000    0.020    0.020 message.py:1(<module>)
      431    0.002    0.000    0.020    0.000 typing.py:652(Union)
        1    0.000    0.000    0.020    0.020 tokens.py:1(<module>)
        1    0.000    0.000    0.020    0.020 ctx_mp.py:1(<module>)
        1    0.000    0.000    0.019    0.019 scimath.py:1(<module>)
        1    0.000    0.000    0.019    0.019 trigsimp.py:1(<module>)
        1    0.000    0.000    0.019    0.019 split_utils.py:1(<module>)
        1    0.000    0.000    0.019    0.019 onnx_proto_utils.py:1(<module>)
        1    0.000    0.000    0.019    0.019 minpoly.py:1(<module>)
        1    0.000    0.000    0.019    0.019 polyroots.py:1(<module>)
        1    0.000    0.000    0.019    0.019 setupcfg.py:1(<module>)
        1    0.000    0.000    0.019    0.019 _entropy.py:1(<module>)
     1001    0.019    0.000    0.019    0.000 {method 'tolist' of 'torch._C._TensorBase' objects}
        5    0.000    0.000    0.019    0.004 pathlib.py:1053(read_text)
        1    0.000    0.000    0.018    0.018 arpack.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _code_flow.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _distribution_infrastructure.py:1(<module>)
        4    0.000    0.000    0.018    0.005 __init__.py:926(read_text)
        1    0.000    0.000    0.018    0.018 _odepack_py.py:1(<module>)
        6    0.000    0.000    0.018    0.003 _typing.py:1(<module>)
        1    0.000    0.000    0.018    0.018 _lbfgsb_py.py:1(<module>)
      121    0.001    0.000    0.018    0.000 __init__.py:259(_make_prim)
       10    0.000    0.000    0.018    0.002 version.py:1(<module>)
        1    0.000    0.000    0.018    0.018 galoisgroups.py:1(<module>)
       12    0.000    0.000    0.018    0.001 artist.py:1242(__init__)
    21160    0.013    0.000    0.018    0.000 <frozen importlib._bootstrap_external>:128(<listcomp>)
       12    0.001    0.000    0.018    0.001 artist.py:1262(get_aliases)
        1    0.000    0.000    0.018    0.018 factor_.py:1(<module>)
        1    0.000    0.000    0.018    0.018 homomorphisms.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _support_alternative_backends.py:294(<dictcomp>)
       23    0.000    0.000    0.017    0.001 _support_alternative_backends.py:46(wrapper)
        1    0.000    0.000    0.017    0.017 uuid.py:1(<module>)
        2    0.000    0.000    0.017    0.009 laplace.py:1(<module>)
    32236    0.011    0.000    0.017    0.000 _ufunc_config.py:452(_no_nep50_warning)
        2    0.000    0.000    0.017    0.009 pyplot.py:276(backend_mod)
        1    0.000    0.000    0.017    0.017 partitions_.py:1(<module>)
        1    0.000    0.000    0.017    0.017 cm.py:1(<module>)
        1    0.000    0.000    0.017    0.017 intersection.py:1(<module>)
      251    0.001    0.000    0.017    0.000 _docscrape.py:366(_parse_summary)
        1    0.000    0.000    0.017    0.017 _thread_flow.py:1(<module>)
       87    0.002    0.000    0.017    0.000 conflict.py:62(<listcomp>)
        1    0.000    0.000    0.017    0.017 tarfile.py:1(<module>)
        1    0.000    0.000    0.017    0.017 dispatcher.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _linprog_util.py:1(<module>)
        1    0.000    0.000    0.017    0.017 blockmatrix.py:1(<module>)
        1    0.000    0.000    0.017    0.017 iterative.py:1(<module>)
        1    0.000    0.000    0.017    0.017 trf.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _upfirdn.py:1(<module>)
        1    0.000    0.000    0.017    0.017 _cubature.py:1(<module>)
        1    0.000    0.000    0.017    0.017 replicate.py:1(<module>)
     4863    0.011    0.000    0.016    0.000 <frozen importlib._bootstrap>:179(_get_module_lock)
    32732    0.016    0.000    0.016    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.016    0.016 _beartype.py:1(<module>)
    48391    0.016    0.000    0.016    0.000 fromnumeric.py:72(<dictcomp>)
        5    0.000    0.000    0.016    0.003 polyhedron.py:388(<listcomp>)
        1    0.000    0.000    0.016    0.016 para4band.py:1(<module>)
       50    0.000    0.000    0.016    0.000 iterables.py:2618(minlex)
        6    0.000    0.000    0.016    0.003 _docscrape.py:626(__init__)
        1    0.000    0.000    0.016    0.016 api.py:1(<module>)
        2    0.000    0.000    0.016    0.008 traverse.py:1(<module>)
        1    0.000    0.000    0.016    0.016 compat.py:1(<module>)
        1    0.000    0.000    0.016    0.016 _root_scalar.py:1(<module>)
        1    0.000    0.000    0.016    0.016 _tanhsinh.py:1(<module>)
        1    0.000    0.000    0.016    0.016 distribution.py:1(<module>)
        1    0.000    0.000    0.016    0.016 _builtins.py:1(<module>)
      232    0.001    0.000    0.016    0.000 function.py:164(__init__)
        1    0.000    0.000    0.016    0.016 _lil.py:1(<module>)
        2    0.000    0.000    0.016    0.008 grouping.py:1(<module>)
        1    0.000    0.000    0.016    0.016 gumbel.py:1(<module>)
        1    0.000    0.000    0.016    0.016 pickle.py:1(<module>)
        1    0.000    0.000    0.015    0.015 pyprojecttoml.py:1(<module>)
        2    0.000    0.000    0.015    0.008 inverse.py:1(<module>)
     6176    0.002    0.000    0.015    0.000 conflict.py:19(ambiguous)
        1    0.000    0.000    0.015    0.015 _mio4.py:1(<module>)
     6043    0.015    0.000    0.015    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.015    0.015 connection.py:1(<module>)
        1    0.000    0.000    0.015    0.015 gamma_functions.py:1(<module>)
        1    0.000    0.000    0.015    0.015 conflict.py:1(<module>)
        1    0.000    0.000    0.015    0.015 discovery.py:1(<module>)
        1    0.000    0.000    0.015    0.015 colors.py:1(<module>)
        1    0.000    0.000    0.015    0.015 equality_constrained_sqp.py:1(<module>)
        1    0.000    0.000    0.015    0.015 _thread_flow_location.py:1(<module>)
     3146    0.010    0.000    0.015    0.000 inspect.py:2962(__init__)
        1    0.000    0.000    0.015    0.015 _rbfinterp.py:1(<module>)
      245    0.001    0.000    0.015    0.000 _docscrape.py:599(__str__)
    13223    0.003    0.000    0.015    0.000 conflict.py:43(edge)
        1    0.000    0.000    0.015    0.015 _trustregion_krylov.py:1(<module>)
     6002    0.008    0.000    0.015    0.000 forward_ad.py:114(unpack_dual)
        1    0.000    0.000    0.015    0.015 _fftlog.py:1(<module>)
     2700    0.014    0.000    0.014    0.000 {method 'findall' of 're.Pattern' objects}
        1    0.000    0.000    0.014    0.014 worker.py:1(<module>)
        1    0.000    0.000    0.014    0.014 _linesearch.py:1(<module>)
        1    0.000    0.000    0.014    0.014 axis.py:1(<module>)
      524    0.000    0.000    0.014    0.000 __init__.py:173(search)
        1    0.000    0.000    0.014    0.014 coord.py:1(<module>)
        1    0.000    0.000    0.014    0.014 _linprog_rs.py:1(<module>)
        1    0.000    0.000    0.014    0.014 server_process_global_profiler.py:1(<module>)
     1411    0.014    0.000    0.014    0.000 {built-in method torch._C.impl}
        1    0.000    0.000    0.014    0.014 dates.py:1(<module>)
        1    0.000    0.000    0.014    0.014 _numdiff.py:1(<module>)
        1    0.000    0.000    0.014    0.014 engine.py:1(<module>)
        1    0.000    0.000    0.014    0.014 _mstats_basic.py:1(<module>)
       21    0.000    0.000    0.014    0.001 _distn_infrastructure.py:3319(__init__)
        1    0.000    0.000    0.014    0.014 _apply_pyprojecttoml.py:1(<module>)
        1    0.000    0.000    0.014    0.014 adadelta.py:1(<module>)
        1    0.000    0.000    0.014    0.014 _isotonic.py:1(<module>)
        1    0.000    0.000    0.014    0.014 module.py:1(<module>)
        1    0.000    0.000    0.014    0.014 pc_groups.py:1(<module>)
        1    0.000    0.000    0.013    0.013 _lowrank.py:1(<module>)
     2324    0.003    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:1599(_get_spec)
        1    0.000    0.000    0.013    0.013 timeutils.py:1(<module>)
        1    0.000    0.000    0.013    0.013 jit_utils.py:1(<module>)
      110    0.001    0.000    0.013    0.000 _distn_infrastructure.py:1923(_attach_methods)
        2    0.000    0.000    0.013    0.007 operations.py:1(<module>)
    89521    0.013    0.000    0.013    0.000 {method 'startswith' of 'str' objects}
      248    0.002    0.000    0.013    0.000 _docscrape.py:548(__str__)
        1    0.000    0.000    0.013    0.013 scatter_gather.py:1(<module>)
     2163    0.002    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:1146(path_stats)
        1    0.000    0.000    0.013    0.013 package_importer.py:1(<module>)
        1    0.000    0.000    0.013    0.013 _slsqp_py.py:1(<module>)
        1    0.000    0.000    0.013    0.013 helpers.py:1(<module>)
        1    0.000    0.000    0.013    0.013 ellipse.py:1(<module>)
      367    0.001    0.000    0.013    0.000 permutations.py:1628(__call__)
      131    0.000    0.000    0.013    0.000 _distn_infrastructure.py:735(_attach_argparser_methods)
        1    0.000    0.000    0.013    0.013 mstats.py:1(<module>)
        2    0.000    0.000    0.013    0.007 fnmatch.py:1(<module>)
2164/2161    0.002    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:599(_check_name_wrapper)
    70058    0.013    0.000    0.013    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
     1465    0.012    0.000    0.013    0.000 _ops.py:239(__init__)
        1    0.000    0.000    0.013    0.013 half_normal.py:1(<module>)
     4327    0.006    0.000    0.013    0.000 <frozen importlib._bootstrap_external>:132(_path_split)
      232    0.001    0.000    0.013    0.000 function.py:124(arity)
        1    0.000    0.000    0.013    0.013 _filter_design.py:1(<module>)
     2195    0.002    0.000    0.013    0.000 <frozen importlib._bootstrap>:216(_lock_unlock_module)
     6176    0.006    0.000    0.012    0.000 conflict.py:12(consistent)
        1    0.000    0.000    0.012    0.012 logging.py:1(<module>)
        1    0.000    0.000    0.012    0.012 charset.py:1(<module>)
     3859    0.003    0.000    0.012    0.000 <frozen importlib._bootstrap_external>:1421(_path_importer_cache)
        1    0.000    0.000    0.012    0.012 gridspec.py:1(<module>)
        1    0.000    0.000    0.012    0.012 lambdify.py:1(<module>)
     1456    0.001    0.000    0.012    0.000 _docscrape.py:85(read_to_next_unindented_line)
    15865    0.008    0.000    0.012    0.000 conflict.py:7(supercedes)
      213    0.000    0.000    0.012    0.000 units.py:318(__new__)
        9    0.000    0.000    0.012    0.001 util.py:1(<module>)
       26    0.001    0.000    0.012    0.000 inspect.py:1232(getblock)
     1241    0.001    0.000    0.012    0.000 __init__.py:655(__setitem__)
        1    0.000    0.000    0.012    0.012 more.py:1(<module>)
        1    0.000    0.000    0.012    0.012 io.py:1(<module>)
        1    0.000    0.000    0.012    0.012 dataframes.py:1(<module>)
       55    0.000    0.000    0.012    0.000 __init__.py:388(inner)
        2    0.000    0.000    0.012    0.006 sysconfig.py:710(get_config_var)
      4/3    0.000    0.000    0.012    0.004 sysconfig.py:629(get_config_vars)
       56    0.000    0.000    0.012    0.000 __init__.py:770(_open_file_or_url)
     2245    0.005    0.000    0.011    0.000 typing.py:168(_type_check)
        1    0.000    0.000    0.011    0.011 encoders.py:1(<module>)
        4    0.000    0.000    0.011    0.003 _utils.py:1(<module>)
    19254    0.006    0.000    0.011    0.000 _parser.py:252(get)
        1    0.000    0.000    0.011    0.011 _fitpack_impl.py:1(<module>)
        1    0.000    0.000    0.011    0.011 mod.py:1(<module>)
        1    0.000    0.000    0.011    0.011 chi2.py:1(<module>)
        1    0.000    0.000    0.011    0.011 matpow.py:1(<module>)
     2222    0.011    0.000    0.011    0.000 {method '__exit__' of '_io._IOBase' objects}
      213    0.000    0.000    0.011    0.000 units.py:299(__init__)
        1    0.000    0.000    0.011    0.011 actions.py:1(<module>)
     1503    0.003    0.000    0.011    0.000 tokenize.py:433(_tokenize)
        1    0.000    0.000    0.011    0.011 polyoptions.py:1(<module>)
        1    0.000    0.000    0.011    0.011 gzip.py:296(read)
        7    0.000    0.000    0.011    0.002 gzip.py:474(read)
       22    0.011    0.000    0.011    0.000 {method 'readlines' of '_io._IOBase' objects}
    34455    0.009    0.000    0.011    0.000 _docscrape.py:64(eof)
        1    0.000    0.000    0.011    0.011 fancy_getopt.py:1(<module>)
    27158    0.011    0.000    0.011    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.011    0.011 _directory_reader.py:1(<module>)
        1    0.000    0.000    0.011    0.011 reader.py:1(<module>)
        1    0.000    0.000    0.011    0.011 sysconfig.py:527(_init_posix)
        6    0.000    0.000    0.011    0.002 _jit_internal.py:928(_overload_method)
        1    0.000    0.000    0.011    0.011 ImagePalette.py:1(<module>)
        1    0.000    0.000    0.011    0.011 _axes.py:71(Axes)
        1    0.000    0.000    0.011    0.011 sg_operation.py:1(<module>)
     2038    0.011    0.000    0.011    0.000 {built-in method torch._C._dispatch_has_kernel_for_dispatch_key}
        1    0.000    0.000    0.011    0.011 monkey.py:1(<module>)
      131    0.000    0.000    0.011    0.000 _distn_infrastructure.py:683(__init__)
        1    0.000    0.000    0.010    0.010 _remove_redundancy.py:1(<module>)
        2    0.000    0.000    0.010    0.005 readers.py:1(<module>)
        1    0.000    0.000    0.010    0.010 _common.py:17(files)
        1    0.000    0.000    0.010    0.010 structures.py:1(<module>)
      222    0.002    0.000    0.010    0.000 wrappers.py:191(_out_wrapper)
        1    0.000    0.000    0.010    0.010 _common.py:59(from_package)
        1    0.000    0.000    0.010    0.010 _adapters.py:28(get_resource_reader)
      100    0.002    0.000    0.010    0.000 iterables.py:1165(least_rotation)
        1    0.000    0.000    0.010    0.010 _adapters.py:151(_native)
        1    0.000    0.000    0.010    0.010 _adapters.py:146(_reader)
        1    0.000    0.000    0.010    0.010 <frozen importlib._bootstrap_external>:1136(get_resource_reader)
        2    0.000    0.000    0.010    0.005 gzip.py:467(_read_gzip_header)
        2    0.000    0.000    0.010    0.005 gzip.py:418(_read_gzip_header)
       31    0.000    0.000    0.010    0.000 gzip.py:86(read)
      129    0.000    0.000    0.010    0.000 dataclasses.py:589(_repr_fn)
        1    0.000    0.000    0.010    0.010 _normalization.py:1(<module>)
        1    0.000    0.000    0.010    0.010 lie_group.py:1(<module>)
     8262    0.005    0.000    0.010    0.000 typing.py:1280(__setattr__)
        1    0.000    0.000    0.010    0.010 _ccallback.py:1(<module>)
        1    0.000    0.000    0.010    0.010 parametrizations.py:1(<module>)
        1    0.000    0.000    0.010    0.010 nvfuser_prims.py:806(register_nvprims)
        1    0.000    0.000    0.010    0.010 _validation.py:1(<module>)
        1    0.000    0.000    0.010    0.010 _measurements.py:1(<module>)
     1465    0.010    0.000    0.010    0.000 {built-in method torch._C._get_operation_overload}
     3310    0.002    0.000    0.010    0.000 __init__.py:178(sub)
        2    0.000    0.000    0.010    0.005 polyutils.py:1(<module>)
       36    0.000    0.000    0.010    0.000 __init__.py:893(inner)
        1    0.000    0.000    0.010    0.010 beta.py:1(<module>)
      191    0.007    0.000    0.010    0.000 {built-in method builtins.eval}
        1    0.000    0.000    0.010    0.010 _plotutils.py:1(<module>)
        2    0.000    0.000    0.010    0.005 base.py:1(<module>)
        1    0.000    0.000    0.010    0.010 annotations.py:1(<module>)
        1    0.000    0.000    0.010    0.010 libhyper.py:1(<module>)
      292    0.001    0.000    0.010    0.000 <frozen importlib._bootstrap_external>:1408(_path_hooks)
     8189    0.007    0.000    0.010    0.000 _docscrape.py:57(seek_next_non_empty_line)
      292    0.001    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:1655(_fill_cache)
       11    0.000    0.000    0.009    0.001 __init__.py:10(partialclass)
     2324    0.006    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:778(spec_from_file_location)
       22    0.000    0.000    0.009    0.000 core.py:620(set_parse_action)
      403    0.001    0.000    0.009    0.000 <frozen abc>:105(__new__)
        1    0.000    0.000    0.009    0.009 comments.py:1(<module>)
      128    0.000    0.000    0.009    0.000 dataclasses.py:625(_cmp_fn)
       22    0.000    0.000    0.009    0.000 core.py:701(<listcomp>)
       26    0.000    0.000    0.009    0.000 core.py:257(_trim_arity)
        2    0.000    0.000    0.009    0.005 bessel.py:1(<module>)
        1    0.000    0.000    0.009    0.009 grad.py:1(<module>)
        1    0.000    0.000    0.009    0.009 interpolative.py:1(<module>)
        1    0.000    0.000    0.009    0.009 facts.py:1(<module>)
        1    0.000    0.000    0.009    0.009 rnn.py:340(RNN)
        1    0.000    0.000    0.009    0.009 interval_arithmetic.py:1(<module>)
        1    0.000    0.000    0.009    0.009 _decomp.py:1(<module>)
        1    0.000    0.000    0.009    0.009 libmpf.py:1(<module>)
     4863    0.007    0.000    0.009    0.000 <frozen importlib._bootstrap>:125(release)
        1    0.000    0.000    0.009    0.009 art3d.py:1(<module>)
        1    0.000    0.000    0.009    0.009 generate.py:1(<module>)
        1    0.000    0.000    0.009    0.009 stringpict.py:1(<module>)
        2    0.000    0.000    0.009    0.004 _adapters.py:1(<module>)
        1    0.000    0.000    0.009    0.009 _spectral_py.py:1(<module>)
    32273    0.009    0.000    0.009    0.000 {built-in method numpy.seterrobj}
2659/2614    0.002    0.000    0.009    0.000 {built-in method builtins.any}
    27683    0.007    0.000    0.009    0.000 {built-in method builtins.setattr}
        1    0.000    0.000    0.009    0.009 font_manager.py:1004(json_load)
      393    0.001    0.000    0.009    0.000 typing.py:1539(copy_with)
      465    0.001    0.000    0.009    0.000 permutations.py:902(__new__)
      300    0.009    0.000    0.009    0.000 {built-in method posix.listdir}
      257    0.001    0.000    0.009    0.000 typing.py:1530(__getitem__)
        1    0.000    0.000    0.009    0.009 lowrank_multivariate_normal.py:1(<module>)
      189    0.000    0.000    0.008    0.000 library.py:50(define)
      965    0.002    0.000    0.008    0.000 typing_extensions.py:3177(_collect_parameters)
     7323    0.006    0.000    0.008    0.000 enum.py:669(__call__)
      189    0.008    0.000    0.008    0.000 {built-in method torch._C.define}
        1    0.000    0.000    0.008    0.008 grad_mode.py:1(<module>)
        1    0.000    0.000    0.008    0.008 gtk.py:1(<module>)
    95906    0.008    0.000    0.008    0.000 {method 'lstrip' of 'str' objects}
        2    0.000    0.000    0.008    0.004 function_base.py:1(<module>)
        1    0.000    0.000    0.008    0.008 type_check.py:1(<module>)
    12610    0.008    0.000    0.008    0.000 {method 'expandtabs' of 'str' objects}
        1    0.000    0.000    0.008    0.008 _resampling.py:1(<module>)
      151    0.000    0.000    0.008    0.000 typing.py:692(Optional)
        1    0.000    0.000    0.008    0.008 expand.py:1(<module>)
     2163    0.004    0.000    0.008    0.000 <frozen importlib._bootstrap_external>:642(_classify_pyc)
       97    0.001    0.000    0.008    0.000 __init__.py:427(_make_inplace)
        1    0.000    0.000    0.008    0.008 specifiers.py:1(<module>)
    98214    0.008    0.000    0.008    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.008    0.008 _result.py:1(<module>)
     2668    0.002    0.000    0.008    0.000 <frozen importlib._bootstrap>:173(__exit__)
       70    0.001    0.000    0.008    0.000 __init__.py:1364(_preprocess_data)
       93    0.000    0.000    0.007    0.000 pydoc.py:186(getdoc)
    10171    0.006    0.000    0.007    0.000 _docscrape.py:91(peek)
        1    0.000    0.000    0.007    0.007 struct.py:1(<module>)
     1318    0.003    0.000    0.007    0.000 enum.py:352(__setitem__)
        1    0.000    0.000    0.007    0.007 loss.py:1(<module>)
        1    0.000    0.000    0.007    0.007 patches.py:1(<module>)
        1    0.000    0.000    0.007    0.007 common.py:8(pyparsing_common)
     9689    0.007    0.000    0.007    0.000 {method 'splitlines' of 'str' objects}
        1    0.000    0.000    0.007    0.007 specifiers.py:99(Specifier)
       41    0.001    0.000    0.007    0.000 typing.py:2817(__new__)
      214    0.007    0.000    0.007    0.000 {built-in method builtins.compile}
1062/1021    0.003    0.000    0.007    0.000 sorting.py:10(default_sort_key)
        1    0.000    0.000    0.007    0.007 union.py:1(<module>)
     2232    0.004    0.000    0.007    0.000 _docscrape.py:475(_str_param_list)
       93    0.000    0.000    0.007    0.000 pydoc.py:170(_getdoc)
    21761    0.005    0.000    0.007    0.000 _docscrape.py:80(is_empty)
        1    0.000    0.000    0.007    0.007 hyperexpand.py:1(<module>)
     2603    0.004    0.000    0.007    0.000 inspect.py:735(unwrap)
     1115    0.001    0.000    0.007    0.000 typing.py:1241(__init__)
      748    0.003    0.000    0.007    0.000 dataclasses.py:724(_get_field)
       47    0.000    0.000    0.007    0.000 __init__.py:424(_make_elementwise_unary_prim)
        1    0.000    0.000    0.007    0.007 _memory_profiler.py:1(<module>)
    64546    0.007    0.000    0.007    0.000 {built-in method numpy.geterrobj}
        1    0.000    0.000    0.007    0.007 _tool_component.py:1(<module>)
   112/79    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1311(__iter__)
    48497    0.007    0.000    0.007    0.000 {built-in method numpy.asanyarray}
   164/92    0.000    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1297(_recalculate)
        1    0.000    0.000    0.007    0.007 _expm_multiply.py:1(<module>)
  515/173    0.001    0.000    0.007    0.000 sorting.py:202(ordered)
        1    0.000    0.000    0.007    0.007 _hypotests.py:1(<module>)
        3    0.000    0.000    0.006    0.002 _distribution_infrastructure.py:1368(_generate_example)
        1    0.000    0.000    0.006    0.006 _artifact.py:1(<module>)
        1    0.000    0.000    0.006    0.006 ExifTags.py:1(<module>)
        1    0.000    0.000    0.006    0.006 headerregistry.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _manylinux.py:1(<module>)
    48354    0.006    0.000    0.006    0.000 fromnumeric.py:2416(_all_dispatcher)
      665    0.005    0.000    0.006    0.000 _compiler.py:241(_optimize_charset)
    14840    0.005    0.000    0.006    0.000 _parser.py:162(__getitem__)
        2    0.000    0.000    0.006    0.003 decorator.py:1(<module>)
        1    0.000    0.000    0.006    0.006 tokenize.py:99(_compile)
     6488    0.004    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:84(_unpack_uint32)
        1    0.000    0.000    0.006    0.006 pathlib.py:1(<module>)
       21    0.000    0.000    0.006    0.000 _distn_infrastructure.py:3380(_construct_docstrings)
        5    0.000    0.000    0.006    0.001 sets.py:1982(__new__)
        1    0.000    0.000    0.006    0.006 backend_tools.py:1(<module>)
      459    0.001    0.000    0.006    0.000 permutations.py:354(list)
        1    0.000    0.000    0.006    0.006 dense_ndim_array.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _differentiable_functions.py:1(<module>)
       44    0.000    0.000    0.006    0.000 typing.py:2797(_make_nmtuple)
     9305    0.003    0.000    0.006    0.000 typing.py:1229(_is_dunder)
        1    0.000    0.000    0.006    0.006 meta_utils.py:1(<module>)
        1    0.000    0.000    0.006    0.006 _run.py:1(<module>)
    22106    0.006    0.000    0.006    0.000 _parser.py:231(__next)
     2163    0.003    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:675(_validate_timestamp_pyc)
     5726    0.004    0.000    0.006    0.000 _docscrape.py:86(is_unindented)
        1    0.000    0.000    0.006    0.006 comm.py:1(<module>)
        1    0.000    0.000    0.006    0.006 backend_agg.py:1(<module>)
     1298    0.006    0.000    0.006    0.000 {built-in method torch._C._dispatch_has_kernel}
        1    0.000    0.000    0.006    0.006 pythonmpq.py:1(<module>)
    28116    0.005    0.000    0.006    0.000 units.py:166(<genexpr>)
        1    0.000    0.000    0.006    0.006 _codata.py:1(<module>)
        1    0.000    0.000    0.006    0.006 graph_settings.py:1(<module>)
     6002    0.006    0.000    0.006    0.000 {built-in method torch._C._functorch.is_functorch_wrapped_tensor}
        1    0.000    0.000    0.006    0.006 line.py:1(<module>)
    66801    0.006    0.000    0.006    0.000 {method 'strip' of 'str' objects}
      317    0.001    0.000    0.006    0.000 overrides.py:142(decorator)
      706    0.002    0.000    0.006    0.000 inspect.py:2042(_signature_bound_method)
        1    0.000    0.000    0.006    0.006 ask.py:1(<module>)
    21600    0.005    0.000    0.005    0.000 <frozen importlib._bootstrap>:244(_verbose_message)
        1    0.000    0.000    0.005    0.005 subsets.py:1(<module>)
     7790    0.003    0.000    0.005    0.000 <frozen importlib._bootstrap>:405(parent)
    30632    0.005    0.000    0.005    0.000 assumptions.py:489(as_property)
    30618    0.005    0.000    0.005    0.000 _docscrape.py:43(__getitem__)
 2638/706    0.004    0.000    0.005    0.000 _parser.py:172(getwidth)
        1    0.000    0.000    0.005    0.005 comparison.py:1(<module>)
      295    0.001    0.000    0.005    0.000 _compiler.py:509(_compile_info)
      472    0.001    0.000    0.005    0.000 assumptions.py:469(__init__)
        1    0.000    0.000    0.005    0.005 mutable_ndim_array.py:1(<module>)
      136    0.000    0.000    0.005    0.000 typing.py:1614(__getitem__)
        1    0.000    0.000    0.005    0.005 rk.py:1(<module>)
    52885    0.005    0.000    0.005    0.000 {method 'rstrip' of 'str' objects}
      292    0.001    0.000    0.005    0.000 <frozen importlib._bootstrap_external>:1696(path_hook_for_FileFinder)
      901    0.001    0.000    0.005    0.000 inspect.py:3032(replace)
        1    0.000    0.000    0.005    0.005 reduction.py:1(<module>)
        1    0.000    0.000    0.005    0.005 cm.py:53(_gen_cmap_registry)
        2    0.000    0.000    0.005    0.002 fourier.py:1(<module>)
    19542    0.005    0.000    0.005    0.000 {method 'rpartition' of 'str' objects}
     2492    0.002    0.000    0.005    0.000 <frozen importlib._bootstrap>:922(find_spec)
        1    0.000    0.000    0.005    0.005 _shgo.py:1(<module>)
      459    0.001    0.000    0.005    0.000 permutations.py:385(<listcomp>)
        1    0.000    0.000    0.005    0.005 _invocation.py:1(<module>)
     1477    0.001    0.000    0.005    0.000 typing.py:684(<genexpr>)
3977/3797    0.003    0.000    0.005    0.000 sympify.py:124(sympify)
      134    0.000    0.000    0.005    0.000 wrappers.py:105(__call__)
        2    0.000    0.000    0.005    0.002 modules.py:1(<module>)
       29    0.000    0.000    0.005    0.000 __init__.py:439(_make_elementwise_binary_prim)
      700    0.001    0.000    0.005    0.000 colors.py:161(to_rgba)
     1001    0.005    0.000    0.005    0.000 {built-in method torch.transpose}
        1    0.000    0.000    0.005    0.005 _location.py:1(<module>)
        1    0.000    0.000    0.005    0.005 ring_series.py:1(<module>)
        1    0.000    0.000    0.005    0.005 diophantine.py:1(<module>)
       81    0.000    0.000    0.005    0.000 docstring.py:77(dedent_interpd)
    10588    0.005    0.000    0.005    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.005    0.005 _symbolic_trace.py:1(<module>)
       68    0.000    0.000    0.005    0.000 _internal.py:31(inner)
     1644    0.002    0.000    0.005    0.000 dataclasses.py:665(_is_type)
        1    0.000    0.000    0.004    0.004 wavfile.py:1(<module>)
       17    0.000    0.000    0.004    0.000 rcsetup.py:928(validate_cycler)
    93/40    0.000    0.000    0.004    0.000 typing.py:1363(__getitem__)
     6002    0.004    0.000    0.004    0.000 {built-in method torch._C._get_default_device}
     2005    0.003    0.000    0.004    0.000 inspect.py:167(get_annotations)
    13536    0.003    0.000    0.004    0.000 conflict.py:15(<genexpr>)
       97    0.000    0.000    0.004    0.000 _array_api.py:733(_make_capabilities_note)
      131    0.002    0.000    0.004    0.000 facts.py:599(deduce_all_facts)
     6074    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
     2597    0.002    0.000    0.004    0.000 <frozen importlib._bootstrap>:71(__init__)
  580/530    0.001    0.000    0.004    0.000 containers.py:54(__new__)
      428    0.000    0.000    0.004    0.000 rcsetup.py:360(validate_color)
     3700    0.001    0.000    0.004    0.000 <frozen abc>:117(__instancecheck__)
41415/39575    0.004    0.000    0.004    0.000 {built-in method builtins.hash}
     2925    0.004    0.000    0.004    0.000 {built-in method numpy.array}
      459    0.001    0.000    0.004    0.000 permutations.py:433(__init__)
       13    0.000    0.000    0.004    0.000 enum.py:874(_convert_)
    10053    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1032(__exit__)
     2597    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:198(cb)
     1005    0.002    0.000    0.004    0.000 {built-in method builtins.sorted}
       20    0.002    0.000    0.004    0.000 enum.py:1625(convert_class)
        1    0.000    0.000    0.004    0.004 mathtext.py:2275(Parser)
     1602    0.001    0.000    0.004    0.000 __init__.py:163(match)
        1    0.000    0.000    0.004    0.004 _decomp_svd.py:1(<module>)
        1    0.000    0.000    0.004    0.004 graphs.py:1(<module>)
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<lambda>)
      160    0.001    0.000    0.004    0.000 _docscrape.py:290(_parse_see_also)
        1    0.000    0.000    0.004    0.004 mathtext.py:2845(<listcomp>)
        1    0.000    0.000    0.004    0.004 _solvers.py:1(<module>)
        1    0.000    0.000    0.004    0.004 bdf.py:1(<module>)
       36    0.000    0.000    0.004    0.000 __init__.py:1329(_add_data_doc)
       64    0.000    0.000    0.004    0.000 core.py:1449(__add__)
        1    0.000    0.000    0.004    0.004 platform.py:1(<module>)
        1    0.000    0.000    0.004    0.004 _differentialevolution.py:1(<module>)
        1    0.000    0.000    0.004    0.004 densebasic.py:1(<module>)
        1    0.000    0.000    0.004    0.004 <frozen importlib._bootstrap_external>:999(source_to_code)
        1    0.000    0.000    0.004    0.004 ops.py:205(add_arithmetic_ops)
     8654    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap_external>:134(<genexpr>)
  628/550    0.001    0.000    0.004    0.000 _pytree.py:143(tree_flatten)
    10053    0.003    0.000    0.004    0.000 <frozen importlib._bootstrap>:1028(__enter__)
     8132    0.004    0.000    0.004    0.000 {method 'replace' of 'str' objects}
       32    0.001    0.000    0.004    0.000 colors.py:776(from_list)
       18    0.000    0.000    0.004    0.000 ops.py:348(_wrap)
     8288    0.003    0.000    0.004    0.000 inspect.py:3011(<genexpr>)
       22    0.000    0.000    0.004    0.000 inspect.py:1344(getfullargspec)
     1001    0.002    0.000    0.004    0.000 _tensor_str.py:243(<listcomp>)
        1    0.000    0.000    0.004    0.004 binary.py:1(<module>)
    58/39    0.000    0.000    0.004    0.000 functools.py:981(__get__)
        1    0.000    0.000    0.004    0.004 _ni_docstrings.py:1(<module>)
       65    0.000    0.000    0.004    0.000 core.py:4081(__init__)
       45    0.000    0.000    0.004    0.000 core.py:3146(mayReturnEmpty)
    16128    0.004    0.000    0.004    0.000 _ufunc_config.py:426(__init__)
       14    0.000    0.000    0.004    0.000 inspect.py:592(getmembers)
        8    0.000    0.000    0.004    0.000 core.py:5842(__init__)
      138    0.000    0.000    0.004    0.000 rcsetup.py:87(f)
        1    0.000    0.000    0.004    0.004 composer.py:1(<module>)
     1048    0.003    0.000    0.004    0.000 _ops.py:314(inner)
       11    0.000    0.000    0.004    0.000 core.py:1152(parse_string)
       14    0.001    0.000    0.004    0.000 inspect.py:550(_getmembers)
    16118    0.004    0.000    0.004    0.000 {method 'set' of '_contextvars.ContextVar' objects}
        1    0.001    0.001    0.004    0.004 symbolic_opset9.py:1(<module>)
    38/19    0.000    0.000    0.004    0.000 core.py:3119(re)
        2    0.000    0.000    0.004    0.002 polynomial.py:1(<module>)
      426    0.000    0.000    0.004    0.000 colors.py:129(is_color_like)
     28/7    0.000    0.000    0.004    0.001 core.py:4715(leave_whitespace)
     2568    0.001    0.000    0.003    0.000 typing.py:159(_type_convert)
        1    0.000    0.000    0.003    0.003 _array_like.py:1(<module>)
     2015    0.001    0.000    0.003    0.000 containers.py:60(__getitem__)
     4952    0.001    0.000    0.003    0.000 permutations.py:320(__missing__)
        2    0.000    0.000    0.003    0.002 _globals.py:1(<module>)
       42    0.000    0.000    0.003    0.000 doccer.py:283(decorate)
      278    0.001    0.000    0.003    0.000 overrides.py:83(verify_matching_signatures)
        4    0.002    0.001    0.003    0.001 _codata.py:1993(parse_constants_2002to2014)
        1    0.000    0.000    0.003    0.003 hmac.py:1(<module>)
     3700    0.001    0.000    0.003    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.003    0.003 relational.py:1(<module>)
 2198/390    0.000    0.000    0.003    0.000 <frozen abc>:121(__subclasscheck__)
      401    0.000    0.000    0.003    0.000 _parser.py:94(closegroup)
      292    0.001    0.000    0.003    0.000 <frozen zipimport>:64(__init__)
     6002    0.003    0.000    0.003    0.000 {built-in method torch._is_functional_tensor}
      786    0.001    0.000    0.003    0.000 _builtins.py:161(_register_builtin)
 2198/390    0.003    0.000    0.003    0.000 {built-in method _abc._abc_subclasscheck}
       87    0.000    0.000    0.003    0.000 typing.py:483(__getitem__)
      370    0.001    0.000    0.003    0.000 colors.py:197(_to_rgba_no_colorcycle)
      129    0.000    0.000    0.003    0.000 typing.py:1585(__getitem__)
     6266    0.002    0.000    0.003    0.000 misc.py:500(as_int)
        1    0.000    0.000    0.003    0.003 _artifact_change.py:1(<module>)
      436    0.000    0.000    0.003    0.000 core.py:526(copy)
     1513    0.001    0.000    0.003    0.000 sympify.py:514(_sympify)
        1    0.000    0.000    0.003    0.003 stateless.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _construct.py:1(<module>)
       16    0.000    0.000    0.003    0.000 inspect.py:2311(_signature_from_builtin)
        1    0.000    0.000    0.003    0.003 radsimp.py:1(<module>)
        2    0.000    0.000    0.003    0.002 deprecation.py:208(_inner_deprecate_positional_args)
        1    0.000    0.000    0.003    0.003 _methods.py:1(<module>)
       15    0.000    0.000    0.003    0.000 _bunch.py:32(_make_tuple_bunch)
        1    0.000    0.000    0.003    0.003 _pep440.py:1(<module>)
        1    0.000    0.000    0.003    0.003 rootoftools.py:1(<module>)
    10773    0.002    0.000    0.003    0.000 mathtext.py:2847(<genexpr>)
       71    0.000    0.000    0.003    0.000 typing.py:701(Literal)
       16    0.000    0.000    0.003    0.000 inspect.py:2177(_signature_fromstr)
        1    0.000    0.000    0.003    0.003 para4tb.py:118(init_para)
2950/2720    0.001    0.000    0.003    0.000 containers.py:56(<genexpr>)
    16118    0.003    0.000    0.003    0.000 {method 'reset' of '_contextvars.ContextVar' objects}
      239    0.000    0.000    0.003    0.000 rcsetup.py:353(validate_color_for_prop_cycle)
       64    0.000    0.000    0.003    0.000 rcsetup.py:106(<listcomp>)
        1    0.000    0.000    0.003    0.003 _parseaddr.py:1(<module>)
     3514    0.002    0.000    0.003    0.000 copy.py:201(_deepcopy_list)
        5    0.000    0.000    0.003    0.001 io.py:28(zopen)
        1    0.000    0.000    0.003    0.003 hyper.py:1(<module>)
      100    0.000    0.000    0.003    0.000 iterables.py:1127(rotate_left)
    13004    0.003    0.000    0.003    0.000 {built-in method torch.get_default_dtype}
     59/7    0.000    0.000    0.003    0.000 core.py:3923(leave_whitespace)
    20723    0.003    0.000    0.003    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.003    0.003 table.py:1(<module>)
        5    0.000    0.000    0.003    0.001 pathlib.py:1036(open)
      544    0.000    0.000    0.003    0.000 registration.py:296(wrapper)
     1465    0.003    0.000    0.003    0.000 {built-in method torch._C._get_schema}
        1    0.000    0.000    0.003    0.003 hyperbolic.py:1(<module>)
      436    0.001    0.000    0.003    0.000 copy.py:66(copy)
        1    0.000    0.000    0.003    0.003 _qmvnt.py:1(<module>)
        1    0.000    0.000    0.003    0.003 lzma.py:1(<module>)
       87    0.001    0.000    0.003    0.000 utils.py:25(_toposort)
        1    0.000    0.000    0.003    0.003 residue_ntheory.py:1(<module>)
        1    0.000    0.000    0.003    0.003 boolalg.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _fit.py:1(<module>)
       64    0.000    0.000    0.003    0.000 util.py:401(replaced_by_pep8)
        2    0.000    0.000    0.003    0.001 _pytree.py:1(<module>)
        1    0.000    0.000    0.003    0.003 trajectory.py:1(<module>)
      101    0.000    0.000    0.003    0.000 _meta_registrations.py:33(wrapper)
       12    0.000    0.000    0.003    0.000 dataclasses.py:600(_frozen_get_del_attr)
   127/59    0.000    0.000    0.003    0.000 core.py:4015(copy)
        3    0.000    0.000    0.003    0.001 __init__.py:958(distribution)
        1    0.000    0.000    0.003    0.003 smtlib.py:1(<module>)
     4016    0.002    0.000    0.003    0.000 copy.py:243(_keep_alive)
        3    0.000    0.000    0.003    0.001 __init__.py:545(from_name)
    93/40    0.000    0.000    0.003    0.000 typing.py:1395(_determine_new_args)
       74    0.000    0.000    0.003    0.000 typing.py:1599(__getitem_inner__)
      292    0.001    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:1559(__init__)
        1    0.000    0.000    0.003    0.003 _decomp_schur.py:1(<module>)
     2162    0.003    0.000    0.003    0.000 {built-in method _imp._fix_co_filename}
        1    0.000    0.000    0.003    0.003 storage.py:1(<module>)
        1    0.000    0.000    0.003    0.003 socket.py:1(<module>)
        1    0.000    0.000    0.003    0.003 _stats_mstats_common.py:1(<module>)
       69    0.003    0.000    0.003    0.000 {built-in method builtins.dir}
   260/11    0.001    0.000    0.003    0.000 core.py:813(_parseNoCache)
       21    0.000    0.000    0.003    0.000 _distn_infrastructure.py:3358(_attach_methods)
        1    0.000    0.000    0.003    0.003 _logsumexp.py:1(<module>)
      140    0.000    0.000    0.003    0.000 core.py:4109(<genexpr>)
        1    0.000    0.000    0.003    0.003 gmpyfinitefield.py:1(<module>)
    63/11    0.000    0.000    0.002    0.000 core.py:4172(parseImpl)
        7    0.000    0.000    0.002    0.000 core.py:2833(__init__)
        1    0.000    0.000    0.002    0.002 constraint_registry.py:1(<module>)
        1    0.000    0.000    0.002    0.002 structure.py:5581(<dictcomp>)
      786    0.001    0.000    0.002    0.000 _builtins.py:128(_get_builtin_table)
       16    0.000    0.000    0.002    0.000 structure.py:5069(__init__)
       21    0.000    0.000    0.002    0.000 __init__.py:910(<genexpr>)
        1    0.000    0.000    0.002    0.002 _decomp_qr.py:1(<module>)
      431    0.001    0.000    0.002    0.000 typing.py:320(_remove_dups_flatten)
       24    0.001    0.000    0.002    0.000 util.py:210(_collapse_string_to_ranges)
       18    0.000    0.000    0.002    0.000 rcsetup.py:437(validate_font_properties)
        6    0.000    0.000    0.002    0.000 _docscrape.py:680(methods)
        1    0.000    0.000    0.002    0.002 _pep440.py:285(Version)
        1    0.000    0.000    0.002    0.002 version.py:161(Version)
       16    0.000    0.000    0.002    0.000 structure.py:3449(__init__)
       16    0.000    0.000    0.002    0.000 util.py:412(_inner)
       16    0.000    0.000    0.002    0.000 rcsetup.py:843(cycler)
        9    0.000    0.000    0.002    0.000 fontconfig_pattern.py:119(parse)
        1    0.000    0.000    0.002    0.002 _basinhopping.py:1(<module>)
        1    0.000    0.000    0.002    0.002 difflib.py:1(<module>)
       18    0.000    0.000    0.002    0.000 __init__.py:808(search)
       54    0.000    0.000    0.002    0.000 deprecation.py:333(_delete_parameter)
        1    0.000    0.000    0.002    0.002 _dtype_like.py:1(<module>)
      367    0.001    0.000    0.002    0.000 permutations.py:1323(__mul__)
       93    0.000    0.000    0.002    0.000 _compatibility.py:10(mark_back_compat)
        2    0.000    0.000    0.002    0.001 polynomials.py:1(<module>)
      445    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:164(_path_isdir)
        1    0.000    0.000    0.002    0.002 _decomp_qz.py:1(<module>)
        6    0.000    0.000    0.002    0.000 _docscrape.py:694(properties)
       21    0.000    0.000    0.002    0.000 decompositions.py:3288(register_inplace)
        1    0.000    0.000    0.002    0.002 typing_extensions.py:1(<module>)
     5002    0.002    0.000    0.002    0.000 {method '_is_zerotensor' of 'torch._C._TensorBase' objects}
      512    0.000    0.000    0.002    0.000 numbers.py:1984(__lt__)
    17513    0.002    0.000    0.002    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.002    0.002 parameters.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _decomp_cholesky.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _notification.py:1(<module>)
    16918    0.002    0.000    0.002    0.000 {built-in method builtins.issubclass}
    16118    0.002    0.000    0.002    0.000 numeric.py:2166(_allclose_dispatcher)
       78    0.000    0.000    0.002    0.000 typing.py:1772(__class_getitem__)
        1    0.000    0.000    0.002    0.002 _reporting_descriptor.py:1(<module>)
      605    0.001    0.000    0.002    0.000 _inspect.py:96(getargspec)
    10163    0.002    0.000    0.002    0.000 {method 'endswith' of 'str' objects}
        1    0.000    0.000    0.002    0.002 hb.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _address.py:1(<module>)
        3    0.000    0.000    0.002    0.001 __init__.py:32(message_from_string)
    17513    0.002    0.000    0.002    0.000 {built-in method _imp.release_lock}
     5359    0.002    0.000    0.002    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.002    0.002 pretty_symbology.py:1(<module>)
        3    0.000    0.000    0.002    0.001 ctx_mp.py:63(__init__)
   127/59    0.000    0.000    0.002    0.000 core.py:4018(<listcomp>)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:2043(_draw)
        3    0.000    0.000    0.002    0.001 parser.py:59(parsestr)
        1    0.000    0.000    0.002    0.002 permutations.py:1(<module>)
        1    0.000    0.000    0.002    0.002 configparser.py:1(<module>)
        1    0.000    0.000    0.002    0.002 unary.py:1(<module>)
        3    0.000    0.000    0.002    0.001 parser.py:41(parse)
        1    0.000    0.000    0.002    0.002 clip_grad.py:1(<module>)
      165    0.000    0.000    0.002    0.000 typing.py:832(__init__)
     1193    0.002    0.000    0.002    0.000 _docscrape.py:188(_strip)
      965    0.002    0.000    0.002    0.000 typing_extensions.py:3092(_has_generic_or_protocol_as_origin)
       93    0.000    0.000    0.002    0.000 sites.py:38(__init__)
        1    0.000    0.000    0.002    0.002 _docscrape.py:112(NumpyDocString)
       20    0.000    0.000    0.002    0.000 mul.py:205(flatten)
        8    0.000    0.000    0.002    0.000 __init__.py:817(lookup)
        1    0.000    0.000    0.002    0.002 common_types.py:1(<module>)
      532    0.002    0.000    0.002    0.000 function_base.py:2285(__init__)
        3    0.000    0.000    0.002    0.001 patches.py:1867(pprint_styles)
       59    0.000    0.000    0.002    0.000 core.py:3931(<listcomp>)
     6251    0.001    0.000    0.002    0.000 _parser.py:247(match)
        8    0.000    0.000    0.002    0.000 __init__.py:823(__init__)
        1    0.001    0.001    0.002    0.002 para4tb.py:45(__get_exp)
       16    0.000    0.000    0.002    0.000 _functools.py:75(wrapper)
     6002    0.002    0.000    0.002    0.000 {built-in method torch._C._len_torch_dispatch_stack}
       28    0.000    0.000    0.002    0.000 _basic.py:16(_dispatch)
        2    0.001    0.001    0.002    0.001 _codata.py:2019(parse_constants_2018toXXXX)
       71    0.000    0.000    0.002    0.000 enum.py:451(__prepare__)
      607    0.000    0.000    0.002    0.000 typing.py:1535(<genexpr>)
       28    0.000    0.000    0.002    0.000 _backend.py:174(generate_multimethod)
        1    0.000    0.000    0.002    0.002 _replacement.py:1(<module>)
        1    0.000    0.000    0.002    0.002 integers.py:1(<module>)
      125    0.000    0.000    0.002    0.000 cache.py:66(func_wrapper)
      325    0.000    0.000    0.002    0.000 function_base.py:497(add_newdoc)
    11004    0.002    0.000    0.002    0.000 {method 'has_names' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.002    0.002 afm.py:1(<module>)
      590    0.001    0.000    0.002    0.000 enum.py:1483(__and__)
        5    0.000    0.000    0.002    0.000 ctx_base.py:42(__init__)
        1    0.000    0.000    0.002    0.002 core.py:6281(<listcomp>)
        2    0.000    0.000    0.002    0.001 _add_newdocs.py:1(<module>)
        4    0.000    0.000    0.002    0.000 feedparser.py:173(feed)
        1    0.000    0.000    0.002    0.002 pyplot.py:2138(_setup_pyplot_info_docstrings)
     5212    0.002    0.000    0.002    0.000 {built-in method _thread.allocate_lock}
        1    0.000    0.000    0.002    0.002 proxy.py:1(<module>)
     2616    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:180(_path_isabs)
        2    0.002    0.001    0.002    0.001 {method 'join' of 'bytes' objects}
        1    0.000    0.000    0.002    0.002 symbolic_shapes.py:1(<module>)
        1    0.002    0.002    0.002    0.002 {built-in method torch._C._c10d_init}
        1    0.000    0.000    0.002    0.002 _complex.py:1(<module>)
     1800    0.001    0.000    0.002    0.000 _docscrape.py:457(_str_indent)
     2602    0.001    0.000    0.002    0.000 numbers.py:1965(__eq__)
        1    0.000    0.000    0.002    0.002 polynomialring.py:1(<module>)
        1    0.000    0.000    0.002    0.002 ctx_mp_python.py:1(<module>)
        7    0.001    0.000    0.002    0.000 _builtins.py:134(register_all)
    16118    0.002    0.000    0.002    0.000 numeric.py:2245(_isclose_dispatcher)
      200    0.000    0.000    0.002    0.000 containers.py:75(__add__)
     2776    0.001    0.000    0.002    0.000 inspect.py:755(_is_wrapper)
  108/107    0.000    0.000    0.002    0.000 __init__.py:235(wrapper)
        1    0.000    0.000    0.002    0.002 _artifact_content.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _stack.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _package_pickler.py:1(<module>)
       28    0.000    0.000    0.002    0.000 _backend.py:312(get_defaults)
     7319    0.002    0.000    0.002    0.000 enum.py:1074(__new__)
        7    0.000    0.000    0.002    0.000 feedparser.py:178(_call_parse)
        1    0.000    0.000    0.002    0.002 _artifact_location.py:1(<module>)
        3    0.000    0.000    0.002    0.001 patches.py:1871(<listcomp>)
        1    0.000    0.000    0.002    0.002 _arffread.py:1(<module>)
       64    0.000    0.000    0.002    0.000 wrappers.py:285(backwards_not_supported)
    16186    0.002    0.000    0.002    0.000 multiarray.py:669(result_type)
     5579    0.001    0.000    0.002    0.000 _ops.py:289(__hash__)
       74    0.000    0.000    0.002    0.000 typing.py:1580(copy_with)
        7    0.000    0.000    0.002    0.000 feedparser.py:218(_parsegen)
      544    0.001    0.000    0.002    0.000 registration.py:213(register)
        1    0.000    0.000    0.002    0.002 transformed_distribution.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _quadpack_py.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _dual_annealing.py:1(<module>)
        5    0.001    0.000    0.002    0.000 functions.py:18(__init__)
       35    0.000    0.000    0.002    0.000 _typing.py:346(__new__)
        1    0.000    0.000    0.002    0.002 interpreter.py:1(<module>)
     4901    0.001    0.000    0.002    0.000 inspect.py:378(isfunction)
        2    0.000    0.000    0.002    0.001 decoder.py:332(decode)
     1001    0.002    0.000    0.002    0.000 _tensor_str.py:240(<listcomp>)
        1    0.000    0.000    0.002    0.002 _graph.py:1(<module>)
     1043    0.001    0.000    0.002    0.000 typing.py:1270(__getattr__)
        1    0.000    0.000    0.002    0.002 _configuration_override.py:1(<module>)
        3    0.000    0.000    0.002    0.001 _distribution_infrastructure.py:868(draw)
        2    0.001    0.000    0.002    0.001 decoder.py:343(raw_decode)
        1    0.000    0.000    0.002    0.002 _reporting_descriptor_reference.py:1(<module>)
        1    0.000    0.000    0.002    0.002 combsimp.py:1(<module>)
        2    0.000    0.000    0.002    0.001 factorials.py:1(<module>)
        1    0.000    0.000    0.002    0.002 perm_groups.py:1(<module>)
        2    0.000    0.000    0.002    0.001 error.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _trustregion_dogleg.py:1(<module>)
     1126    0.000    0.000    0.002    0.000 colors.py:124(_is_nth_color)
       22    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:1083(filtered)
      265    0.000    0.000    0.002    0.000 <frozen codecs>:319(decode)
        6    0.000    0.000    0.002    0.000 _distribution_infrastructure.py:605(draw)
     4289    0.001    0.000    0.002    0.000 _parser.py:170(append)
        1    0.000    0.000    0.002    0.002 _header_value_parser.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _max_len_seq.py:1(<module>)
       44    0.000    0.000    0.002    0.000 typing.py:2799(<dictcomp>)
     6002    0.002    0.000    0.002    0.000 _python_dispatch.py:89(<listcomp>)
      459    0.001    0.000    0.002    0.000 iterables.py:1923(has_dups)
      243    0.000    0.000    0.002    0.000 functools.py:518(decorating_function)
        1    0.000    0.000    0.002    0.002 _comparison.py:1(<module>)
     2492    0.002    0.000    0.002    0.000 {built-in method _imp.find_frozen}
     1456    0.001    0.000    0.002    0.000 _docscrape.py:49(read)
        2    0.000    0.000    0.002    0.001 sets.py:1(<module>)
        1    0.000    0.000    0.002    0.002 twodim_base.py:1(<module>)
        1    0.000    0.000    0.002    0.002 field.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _attachment.py:1(<module>)
      592    0.001    0.000    0.002    0.000 _pytree.py:136(__init__)
        1    0.000    0.000    0.002    0.002 vmap.py:1(<module>)
       72    0.000    0.000    0.002    0.000 inspect.py:3224(__str__)
     5002    0.002    0.000    0.002    0.000 {method 'is_neg' of 'torch._C._TensorBase' objects}
      100    0.000    0.000    0.002    0.000 matrix_element.py:167(__radd__)
        7    0.000    0.000    0.002    0.000 ctx_mp_python.py:279(binary_op)
     4881    0.001    0.000    0.002    0.000 _parser.py:158(__len__)
        2    0.000    0.000    0.002    0.001 container.py:580(__init__)
        1    0.000    0.000    0.002    0.002 _char_codes.py:1(<module>)
        1    0.000    0.000    0.002    0.002 monkey.py:72(patch_all)
      400    0.001    0.000    0.002    0.000 matrix_element.py:41(<listcomp>)
     9729    0.002    0.000    0.002    0.000 {method '__exit__' of '_thread.lock' objects}
        3    0.000    0.000    0.002    0.001 _constants.py:1(<module>)
        1    0.000    0.000    0.002    0.002 monkey.py:93(_patch_distribution_metadata)
        1    0.000    0.000    0.002    0.002 expr_with_intlimits.py:1(<module>)
       15    0.000    0.000    0.002    0.000 core.py:1601(__or__)
  274/176    0.000    0.000    0.002    0.000 core.py:1947(name)
      961    0.002    0.000    0.002    0.000 {method 'search' of 're.Pattern' objects}
     2194    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:48(_new_module)
        1    0.000    0.000    0.002    0.002 _static.py:1(<module>)
        1    0.000    0.000    0.002    0.002 _nonlin.py:1(<module>)
      976    0.001    0.000    0.002    0.000 _compiler.py:396(_simple)
        1    0.000    0.000    0.002    0.002 parsing.py:1(<module>)
       30    0.000    0.000    0.002    0.000 __init__.py:652(__init__)
        1    0.000    0.000    0.002    0.002 nonhomogeneous.py:1(<module>)
        2    0.000    0.000    0.002    0.001 container.py:631(__iadd__)
      403    0.002    0.000    0.002    0.000 {built-in method _abc._abc_init}
        1    0.000    0.000    0.002    0.002 depends.py:1(<module>)
        2    0.000    0.000    0.002    0.001 container.py:650(extend)
     2664    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:357(__init__)
        1    0.000    0.000    0.002    0.002 accumulationbounds.py:1(<module>)
       30    0.000    0.000    0.002    0.000 <frozen _collections_abc>:941(update)
       15    0.000    0.000    0.001    0.000 core.py:4399(__init__)
        1    0.000    0.000    0.001    0.001 _zeros_py.py:1(<module>)
        2    0.000    0.000    0.001    0.001 fractions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 routeddecoder.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ExifTags.py:21(Base)
  206/114    0.000    0.000    0.001    0.000 core.py:1910(default_name)
        1    0.000    0.000    0.001    0.001 lgmres.py:1(<module>)
        1    0.000    0.000    0.001    0.001 visualization.py:1(<module>)
        1    0.000    0.000    0.001    0.001 csv.py:1(<module>)
     1482    0.001    0.000    0.001    0.000 enum.py:809(__setattr__)
      265    0.001    0.000    0.001    0.000 {built-in method _codecs.utf_8_decode}
     2869    0.001    0.000    0.001    0.000 functools.py:65(wraps)
       13    0.000    0.000    0.001    0.000 enum.py:891(<listcomp>)
       98    0.000    0.000    0.001    0.000 container.py:639(append)
       35    0.000    0.000    0.001    0.000 core.py:76(ismethod)
      400    0.001    0.000    0.001    0.000 matrix_element.py:90(__extract_var)
       57    0.000    0.000    0.001    0.000 <frozen genericpath>:16(exists)
        1    0.000    0.000    0.001    0.001 zeta_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 fancysets.py:1(<module>)
        1    0.000    0.000    0.001    0.001 dviread.py:1(<module>)
     6492    0.001    0.000    0.001    0.000 {built-in method from_bytes}
        1    0.000    0.000    0.001    0.001 module.py:366(Module)
        1    0.000    0.000    0.001    0.001 wavfile.py:72(WAVE_FORMAT)
        1    0.000    0.000    0.001    0.001 polyoptions.py:397(Domain)
        1    0.000    0.000    0.001    0.001 _expm_frechet.py:1(<module>)
        1    0.000    0.000    0.001    0.001 core.py:389(ParserElement)
        1    0.000    0.000    0.001    0.001 _ufunc_config.py:1(<module>)
        1    0.000    0.000    0.001    0.001 grad_scaler.py:1(<module>)
       16    0.000    0.000    0.001    0.000 inspect.py:2105(_signature_strip_non_python_syntax)
        7    0.000    0.000    0.001    0.000 _nonlin.py:1584(_nonlin_wrapper)
     1366    0.000    0.000    0.001    0.000 {built-in method builtins.delattr}
     9748    0.001    0.000    0.001    0.000 {built-in method _thread.get_ident}
      248    0.001    0.000    0.001    0.000 _docscrape.py:499(_str_see_also)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap>:977(exec_module)
     2202    0.001    0.000    0.001    0.000 {method 'extend' of 'list' objects}
      628    0.000    0.000    0.001    0.000 _pytree.py:105(_is_leaf)
        2    0.000    0.000    0.001    0.001 core.py:6134(srange)
       12    0.001    0.000    0.001    0.000 artist.py:1273(<listcomp>)
       14    0.000    0.000    0.001    0.000 core.py:115(doc_note)
        1    0.000    0.000    0.001    0.001 <frozen ntpath>:1(<module>)
      927    0.001    0.000    0.001    0.000 permutations.py:1028(_af_new)
     1627    0.001    0.000    0.001    0.000 enum.py:78(_is_private)
      541    0.000    0.000    0.001    0.000 dataclasses.py:828(_set_new_attribute)
      502    0.001    0.000    0.001    0.000 typing.py:306(_deduplicate)
        1    0.000    0.000    0.001    0.001 assume.py:1(<module>)
       29    0.000    0.000    0.001    0.000 typing.py:1628(copy_with)
        1    0.000    0.000    0.001    0.001 message.py:135(Message)
     3872    0.001    0.000    0.001    0.000 typing.py:1348(__eq__)
      365    0.000    0.000    0.001    0.000 typing.py:1623(<genexpr>)
        1    0.000    0.000    0.001    0.001 configparser.py:569(RawConfigParser)
      197    0.001    0.000    0.001    0.000 {built-in method torch.zeros_like}
       20    0.000    0.000    0.001    0.000 core.py:5119(parseImpl)
    28/22    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1136(wrapped)
        1    0.000    0.000    0.001    0.001 _sensitivity_analysis.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _miobase.py:1(<module>)
      822    0.000    0.000    0.001    0.000 typing_extensions.py:3114(_is_unpacked_typevartuple)
       43    0.000    0.000    0.001    0.000 ast.py:33(parse)
        5    0.000    0.000    0.001    0.000 perm_groups.py:124(__new__)
     22/3    0.000    0.000    0.001    0.000 core.py:4122(streamline)
       42    0.000    0.000    0.001    0.000 _typing.py:257(__new__)
      104    0.000    0.000    0.001    0.000 typing.py:1006(__init__)
     4191    0.001    0.000    0.001    0.000 numbers.py:2011(__hash__)
        1    0.000    0.000    0.001    0.001 sequences.py:1(<module>)
        1    0.000    0.000    0.001    0.001 galoistools.py:1(<module>)
        1    0.000    0.000    0.001    0.001 unary.py:167(<dictcomp>)
        1    0.000    0.000    0.001    0.001 ImageMode.py:1(<module>)
        1    0.000    0.000    0.001    0.001 getlimits.py:162(_register_known_types)
       44    0.000    0.000    0.001    0.000 core.py:4404(<genexpr>)
    11121    0.001    0.000    0.001    0.000 inspect.py:2729(name)
     8013    0.001    0.000    0.001    0.000 _docscrape.py:153(__getitem__)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap_external>:1151(_cache_bytecode)
      628    0.000    0.000    0.001    0.000 <string>:2(__init__)
        1    0.000    0.000    0.001    0.001 realfield.py:1(<module>)
      317    0.000    0.000    0.001    0.000 font_manager.py:962(_json_decode)
     2994    0.001    0.000    0.001    0.000 _parser.py:284(tell)
     1662    0.001    0.000    0.001    0.000 basic.py:288(__new__)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap_external>:1156(set_data)
       31    0.000    0.000    0.001    0.000 _base.py:56(__set_name__)
        1    0.000    0.000    0.001    0.001 pythonfinitefield.py:1(<module>)
    10276    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.001    0.001 _sketches.py:1(<module>)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap_external>:185(_write_atomic)
      138    0.000    0.000    0.001    0.000 _meta_registrations.py:34(register)
        1    0.000    0.000    0.001    0.001 _correlation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 helpers.py:634(make_html_tags)
     72/4    0.000    0.000    0.001    0.000 core.py:980(_parseCache)
        1    0.000    0.000    0.001    0.001 helpers.py:576(_makeTags)
     8747    0.001    0.000    0.001    0.000 {method 'isidentifier' of 'str' objects}
     30/4    0.000    0.000    0.001    0.000 core.py:3963(streamline)
       75    0.000    0.000    0.001    0.000 pathlib.py:868(__new__)
      755    0.001    0.000    0.001    0.000 dataclasses.py:451(_field_init)
       55    0.000    0.000    0.001    0.000 __init__.py:2081(getLogger)
       82    0.000    0.000    0.001    0.000 pathlib.py:504(_from_parts)
        1    0.000    0.000    0.001    0.001 Bravais_Lattice.py:1(<module>)
      436    0.000    0.000    0.001    0.000 copy.py:259(_reconstruct)
        1    0.000    0.000    0.001    0.001 realfield.py:87(__init__)
      992    0.001    0.000    0.001    0.000 _docscrape.py:491(_str_section)
        1    0.000    0.000    0.001    0.001 sites.py:1(<module>)
        1    0.000    0.000    0.001    0.001 extras.py:1(<module>)
       64    0.000    0.000    0.001    0.000 typing.py:1470(copy_with)
       96    0.000    0.000    0.001    0.000 pathlib.py:484(_parse_args)
1647/1434    0.001    0.000    0.001    0.000 typing.py:1354(__hash__)
      199    0.000    0.000    0.001    0.000 typing.py:245(_collect_parameters)
        6    0.000    0.000    0.001    0.000 warnings.py:130(filterwarnings)
        1    0.000    0.000    0.001    0.001 binary.py:171(<dictcomp>)
     1456    0.001    0.000    0.001    0.000 _docscrape.py:16(strip_blank_lines)
        1    0.000    0.000    0.001    0.001 relativedelta.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _torch_docs.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _reqs.py:1(<module>)
     7522    0.001    0.000    0.001    0.000 {built-in method posix.fspath}
     6941    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
      748    0.001    0.000    0.001    0.000 dataclasses.py:347(field)
      129    0.000    0.000    0.001    0.000 dataclasses.py:394(_recursive_repr)
      141    0.000    0.000    0.001    0.000 sorting.py:179(_nodes)
      215    0.000    0.000    0.001    0.000 symbolic_helper.py:263(decorator)
        1    0.000    0.000    0.001    0.001 singleton.py:1(<module>)
  755/724    0.001    0.000    0.001    0.000 typing.py:1636(__hash__)
      105    0.000    0.000    0.001    0.000 typing.py:1822(__init_subclass__)
     1800    0.001    0.000    0.001    0.000 _docscrape.py:458(<listcomp>)
        1    0.000    0.000    0.001    0.001 subgraph_rewriter.py:1(<module>)
    11885    0.001    0.000    0.001    0.000 inspect.py:2741(kind)
        1    0.000    0.000    0.001    0.001 _decomp_ldl.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:1129(manager_path)
        1    0.000    0.000    0.001    0.001 c10d_error_logger.py:1(<module>)
      146    0.000    0.000    0.001    0.000 enum.py:923(_get_mixins_)
      586    0.001    0.000    0.001    0.000 _inspect.py:65(getargs)
       52    0.000    0.000    0.001    0.000 inspect.py:936(getsourcefile)
        9    0.000    0.000    0.001    0.000 assume.py:175(__new__)
        1    0.000    0.000    0.001    0.001 fontconfig_pattern.py:62(__init__)
        6    0.000    0.000    0.001    0.000 pathlib.py:1245(is_dir)
  518/510    0.000    0.000    0.001    0.000 {built-in method builtins.repr}
        1    0.000    0.000    0.001    0.001 graph.py:675(Graph)
     3659    0.001    0.000    0.001    0.000 facts.py:633(<genexpr>)
        6    0.000    0.000    0.001    0.000 getlimits.py:34(__init__)
        1    0.000    0.000    0.001    0.001 _variation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 rnn.py:551(LSTM)
        1    0.000    0.000    0.001    0.001 tools_common.py:1(<module>)
    11079    0.001    0.000    0.001    0.000 {built-in method builtins.callable}
        2    0.000    0.000    0.001    0.001 __init__.py:456(_get_config_or_cache_dir)
        1    0.000    0.000    0.001    0.001 groundtypes.py:1(<module>)
        6    0.000    0.000    0.001    0.000 pathlib.py:1008(stat)
        1    0.000    0.000    0.001    0.001 _rules.py:1(<module>)
        2    0.000    0.000    0.001    0.000 __init__.py:368(get_device_capability)
       69    0.000    0.000    0.001    0.000 _compatibility.py:24(mark_not_back_compat)
       98    0.000    0.000    0.001    0.000 container.py:614(__setitem__)
        3    0.000    0.000    0.001    0.000 __init__.py:385(get_device_properties)
       21    0.000    0.000    0.001    0.000 arrayprint.py:506(wrapper)
        1    0.000    0.000    0.001    0.001 _gauss_kronrod.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:454(StrFormatStyle)
        2    0.000    0.000    0.001    0.000 container.py:1(<module>)
     2546    0.001    0.000    0.001    0.000 _docscrape.py:403(<genexpr>)
        1    0.000    0.000    0.001    0.001 _survival.py:1(<module>)
      205    0.000    0.000    0.001    0.000 inspect.py:2763(__str__)
        3    0.001    0.000    0.001    0.000 {built-in method torch.cuda._get_device_properties}
       54    0.000    0.000    0.001    0.000 __init__.py:1327(getLogger)
        1    0.000    0.000    0.001    0.001 runner.py:1(<module>)
        2    0.000    0.000    0.001    0.000 combining.py:1(<module>)
        1    0.000    0.000    0.001    0.001 integerring.py:1(<module>)
        1    0.000    0.000    0.001    0.001 miscellaneous.py:1(<module>)
        1    0.000    0.000    0.001    0.001 band_data_out.py:1(<module>)
        1    0.000    0.000    0.001    0.001 rl.py:1(<module>)
        1    0.001    0.001    0.001    0.001 artist.py:60(Artist)
      425    0.000    0.000    0.001    0.000 artist.py:1363(aliased_name)
       37    0.001    0.000    0.001    0.000 function_base.py:24(linspace)
        1    0.000    0.000    0.001    0.001 scalarstring.py:1(<module>)
      459    0.000    0.000    0.001    0.000 permutations.py:455(<listcomp>)
        3    0.000    0.000    0.001    0.000 string.py:1(<module>)
      665    0.001    0.000    0.001    0.000 _compiler.py:214(_compile_charset)
     7354    0.001    0.000    0.001    0.000 {method '__contains__' of 'frozenset' objects}
        8    0.000    0.000    0.001    0.000 core.py:2951(_generateDefaultName)
      426    0.000    0.000    0.001    0.000 __init__.py:218(finditer)
     1001    0.001    0.000    0.001    0.000 {method 'size' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.001    0.001 operator_schemas.py:1(<module>)
        2    0.000    0.000    0.001    0.000 pathlib.py:1111(mkdir)
     2686    0.001    0.000    0.001    0.000 util.py:202(__call__)
        1    0.000    0.000    0.001    0.001 datetime.py:1(<module>)
       90    0.000    0.000    0.001    0.000 basic.py:447(sort_key)
        1    0.000    0.000    0.001    0.001 _text.py:1(<module>)
  628/550    0.001    0.000    0.001    0.000 _pytree.py:165(tree_unflatten)
        1    0.000    0.000    0.001    0.001 __init__.py:42(_load_pmg_settings)
      772    0.001    0.000    0.001    0.000 _docscrape.py:28(__init__)
     1286    0.001    0.000    0.001    0.000 enum.py:728(__delattr__)
        1    0.001    0.001    0.001    0.001 events.py:644(BaseDefaultEventLoopPolicy)
     10/3    0.000    0.000    0.001    0.000 unicode.py:14(__get__)
        1    0.000    0.000    0.001    0.001 _info.py:1(<module>)
     20/6    0.000    0.000    0.001    0.000 core.py:4741(streamline)
       80    0.000    0.000    0.001    0.000 _array_api.py:757(xp_capabilities)
        2    0.001    0.000    0.001    0.000 {built-in method posix.mkdir}
        1    0.000    0.000    0.001    0.001 elliptic_integrals.py:1(<module>)
     1375    0.001    0.000    0.001    0.000 enum.py:37(_is_descriptor)
      886    0.001    0.000    0.001    0.000 typing.py:2374(get_origin)
       84    0.000    0.000    0.001    0.000 __init__.py:1641(get_aten_op)
      542    0.001    0.000    0.001    0.000 _parser.py:367(_escape)
        1    0.000    0.000    0.001    0.001 mathieu_functions.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _external_property_file_references.py:1(<module>)
      115    0.000    0.000    0.001    0.000 inspect.py:786(_finddoc)
      106    0.000    0.000    0.001    0.000 contextlib.py:257(contextmanager)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2297(entropy)
        2    0.000    0.000    0.001    0.000 _internal.py:1(<module>)
      628    0.001    0.000    0.001    0.000 _pytree.py:120(__post_init__)
        3    0.000    0.000    0.001    0.000 feedparser.py:471(_parse_headers)
      182    0.000    0.000    0.001    0.000 numbers.py:1975(__gt__)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2317(_entropy_quadrature)
       59    0.000    0.000    0.001    0.000 __init__.py:791(joinpath)
     1747    0.001    0.000    0.001    0.000 enum.py:47(_is_dunder)
        1    0.000    0.000    0.001    0.001 defchararray.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _distribution_infrastructure.py:2076(_quadrature)
        1    0.000    0.000    0.001    0.001 unary.py:170(<dictcomp>)
     2237    0.001    0.000    0.001    0.000 inspect.py:292(isclass)
        6    0.000    0.000    0.001    0.000 _docscrape.py:698(<listcomp>)
        1    0.000    0.000    0.001    0.001 _interpolation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 decimal.py:1(<module>)
       15    0.000    0.000    0.001    0.000 typing.py:2893(__new__)
        1    0.000    0.000    0.001    0.001 matcher_utils.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _compat.py:1(<module>)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._autograd_init}
       27    0.000    0.000    0.001    0.000 pathlib.py:940(glob)
       14    0.000    0.000    0.001    0.000 periodic_table.py:1608(get_el_sp)
       98    0.000    0.000    0.001    0.000 pathlib.py:56(parse_parts)
        1    0.000    0.000    0.001    0.001 indexed.py:1(<module>)
       50    0.000    0.000    0.001    0.000 basic.py:737(as_dummy)
       63    0.000    0.000    0.001    0.000 colors.py:829(reversed)
      423    0.001    0.000    0.001    0.000 {method 'copy' of 'dict' objects}
      664    0.000    0.000    0.001    0.000 _pytree.py:99(_get_node_type)
      395    0.000    0.000    0.001    0.000 containers.py:110(__hash__)
        1    0.000    0.000    0.001    0.001 _nnls.py:1(<module>)
       20    0.000    0.000    0.001    0.000 core.py:5363(parseImpl)
    24/12    0.000    0.000    0.001    0.000 core.py:4425(parseImpl)
       17    0.000    0.000    0.001    0.000 deprecation.py:416(_make_keyword_only)
      401    0.000    0.000    0.001    0.000 _parser.py:82(opengroup)
        1    0.000    0.000    0.001    0.001 special.py:1(<module>)
        1    0.000    0.000    0.001    0.001 bonds.py:1(<module>)
        1    0.000    0.000    0.001    0.001 signal.py:1(<module>)
        1    0.000    0.000    0.001    0.001 torch_version.py:1(<module>)
       12    0.000    0.000    0.001    0.000 __init__.py:1852(_define_aliases)
        2    0.000    0.000    0.001    0.000 adam.py:14(__init__)
        2    0.000    0.000    0.001    0.000 _procrustes.py:1(<module>)
        1    0.000    0.000    0.001    0.001 string.py:69(__init_subclass__)
     5813    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.001    0.001 _region.py:1(<module>)
      347    0.000    0.000    0.001    0.000 pretty_symbology.py:10(U)
        1    0.000    0.000    0.001    0.001 _type_utils.py:1(<module>)
        1    0.000    0.000    0.001    0.001 scale.py:1(<module>)
       11    0.000    0.000    0.001    0.000 core.py:2952(charsAsStr)
        3    0.000    0.000    0.001    0.000 ctx_mp.py:96(init_builtins)
      468    0.000    0.000    0.001    0.000 _parser.py:444(_uniq)
      485    0.001    0.000    0.001    0.000 _array_api.py:676(__str__)
        2    0.000    0.000    0.001    0.000 optimizer.py:169(__init__)
        1    0.000    0.000    0.001    0.001 bonds.py:21(_load_bond_length_data)
     1820    0.001    0.000    0.001    0.000 _docscrape.py:156(__setitem__)
        1    0.000    0.000    0.001    0.001 _tanhsinh.py:958(nsum)
     1721    0.001    0.000    0.001    0.000 typing.py:1631(__eq__)
     2668    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:165(__init__)
       97    0.000    0.000    0.001    0.000 {method 'sort' of 'list' objects}
     1001    0.001    0.000    0.001    0.000 {built-in method math.floor}
      398    0.001    0.000    0.001    0.000 _util.py:526(<listcomp>)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pydoc.py:1(<module>)
        1    0.000    0.000    0.001    0.001 std.py:245(tqdm)
        1    0.000    0.000    0.001    0.001 _tensor_docs.py:1(<module>)
       83    0.000    0.000    0.001    0.000 core.py:3887(__init__)
       18    0.000    0.000    0.001    0.000 core.py:5230(parseImpl)
        1    0.001    0.001    0.001    0.001 {built-in method posix.open}
      110    0.000    0.000    0.001    0.000 _compiler.py:384(_mk_bitmap)
      349    0.000    0.000    0.001    0.000 _docscrape.py:303(parse_item_name)
      235    0.001    0.000    0.001    0.000 core.py:456(__init__)
       80    0.001    0.000    0.001    0.000 function.py:289(__init__)
        1    0.000    0.000    0.001    0.001 _decomp_polar.py:1(<module>)
      347    0.001    0.000    0.001    0.000 {built-in method unicodedata.lookup}
        2    0.000    0.000    0.001    0.000 combinatorics.py:1(<module>)
        2    0.000    0.000    0.001    0.000 __init__.py:474(_get_data_path)
     2412    0.001    0.000    0.001    0.000 _parser.py:109(__init__)
        1    0.000    0.000    0.001    0.001 reinplace.py:1(<module>)
        1    0.000    0.000    0.001    0.001 rnn.py:830(GRU)
      264    0.000    0.000    0.001    0.000 <frozen _collections_abc>:859(__iter__)
     3208    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
        1    0.000    0.000    0.001    0.001 equality.py:1(<module>)
     1627    0.001    0.000    0.001    0.000 enum.py:58(_is_sunder)
       10    0.000    0.000    0.001    0.000 extras.py:233(__init__)
        1    0.000    0.000    0.001    0.001 tools_common.py:78(FxNetAccFusionsFinder)
        1    0.000    0.000    0.001    0.001 complexfield.py:1(<module>)
        1    0.000    0.000    0.001    0.001 helpers.py:678(<dictcomp>)
        1    0.000    0.000    0.001    0.001 parse.py:1(<module>)
     2496    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:748(find_spec)
       63    0.000    0.000    0.001    0.000 colors.py:848(<dictcomp>)
       10    0.000    0.000    0.001    0.000 extras.py:237(getdoc)
        4    0.000    0.000    0.001    0.000 enum.py:822(_create_)
     1008    0.000    0.000    0.001    0.000 colors.py:266(<genexpr>)
        1    0.000    0.000    0.001    0.001 gammazeta.py:1372(<listcomp>)
        2    0.000    0.000    0.001    0.000 sysconfig.py:185(_safe_realpath)
       93    0.000    0.000    0.001    0.000 composition.py:141(__init__)
        1    0.000    0.000    0.001    0.001 unicode.py:80(alphanums)
       80    0.001    0.000    0.001    0.000 _array_api.py:682(_make_sphinx_capabilities)
      750    0.000    0.000    0.001    0.000 numbers.py:1972(__ne__)
       15    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:3136(moment)
       20    0.000    0.000    0.001    0.000 typing.py:1357(__or__)
        2    0.000    0.000    0.001    0.000 <frozen posixpath>:411(realpath)
       58    0.000    0.000    0.001    0.000 wrappers.py:328(elementwise_unary_scalar_wrapper)
        1    0.000    0.000    0.001    0.001 _short_time_fft.py:1(<module>)
       71    0.000    0.000    0.001    0.000 enum.py:987(_find_new_)
     20/6    0.000    0.000    0.001    0.000 core.py:4698(parseImpl)
        1    0.000    0.000    0.001    0.001 ElementPath.py:1(<module>)
       38    0.000    0.000    0.001    0.000 getlimits.py:111(_float_to_str)
        1    0.000    0.000    0.001    0.001 _realtransforms.py:1(<module>)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1597(__init__)
        1    0.000    0.000    0.001    0.001 functional.py:1176(cdist)
       28    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:305(get_numerical_endpoints)
      3/2    0.000    0.000    0.001    0.000 <frozen posixpath>:420(_joinrealpath)
        1    0.000    0.000    0.001    0.001 operator_support.py:1(<module>)
        1    0.000    0.000    0.001    0.001 bz2.py:271(open)
        1    0.000    0.000    0.001    0.001 gzip.py:25(open)
       65    0.000    0.000    0.001    0.000 assumptions.py:497(getit)
        6    0.000    0.000    0.001    0.000 _docscrape.py:684(<listcomp>)
        1    0.000    0.000    0.001    0.001 _web_request.py:1(<module>)
        1    0.001    0.001    0.001    0.001 _multivariate.py:3505(multinomial_frozen)
        3    0.000    0.000    0.001    0.000 activation.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:516(get_data_path)
      428    0.001    0.000    0.001    0.000 libmpf.py:291(from_man_exp)
        1    0.001    0.001    0.001    0.001 {built-in method torch.cdist}
  335/280    0.001    0.000    0.001    0.000 _compiler.py:434(_get_literal_prefix)
      297    0.000    0.000    0.001    0.000 _parser.py:222(__init__)
        1    0.000    0.000    0.001    0.001 pickletools.py:1(<module>)
        5    0.000    0.000    0.001    0.000 polyhedron.py:390(<listcomp>)
        1    0.000    0.000    0.001    0.001 _pocketfft.py:1(<module>)
        1    0.000    0.000    0.001    0.001 complexfield.py:48(__init__)
       42    0.000    0.000    0.001    0.000 {numpy.random._generator.default_rng}
        1    0.000    0.000    0.001    0.001 __init__.py:1151(<listcomp>)
      269    0.000    0.000    0.001    0.000 __init__.py:304(<genexpr>)
        1    0.000    0.000    0.001    0.001 gzip.py:134(__init__)
       34    0.000    0.000    0.001    0.000 symbol.py:494(__new__)
      431    0.000    0.000    0.001    0.000 _util.py:541(<genexpr>)
        1    0.000    0.000    0.001    0.001 unicode.py:70(alphas)
        1    0.000    0.000    0.001    0.001 beta_functions.py:1(<module>)
        2    0.000    0.000    0.001    0.000 unicode.py:55(_chars_for_ranges)
        1    0.000    0.000    0.001    0.001 _web_response.py:1(<module>)
        1    0.000    0.000    0.001    0.001 tensor_functions.py:1(<module>)
       98    0.000    0.000    0.001    0.000 module.py:799(compute_should_use_set_data)
        1    0.000    0.000    0.001    0.001 latex.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:537(_get_data_path)
        1    0.000    0.000    0.001    0.001 bz2.py:37(__init__)
        1    0.000    0.000    0.001    0.001 __init__.py:569(matplotlib_fname)
     2164    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1097(__init__)
      266    0.000    0.000    0.001    0.000 dataclasses.py:380(_tuple_str)
        1    0.000    0.000    0.001    0.001 polar.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:505(get_cachedir)
        1    0.000    0.000    0.001    0.001 pooling.py:1(<module>)
        2    0.000    0.000    0.001    0.000 loader.py:1(<module>)
     3970    0.001    0.000    0.001    0.000 {method 'values' of 'mappingproxy' objects}
        1    0.000    0.000    0.001    0.001 _elffile.py:1(<module>)
        1    0.001    0.001    0.001    0.001 {built-in method torch._C._rpc_init}
        1    0.000    0.000    0.001    0.001 ctx_iv.py:306(__init__)
        1    0.000    0.000    0.001    0.001 libintmath.py:1(<module>)
        1    0.000    0.000    0.001    0.001 dviread.py:185(Dvi)
     1246    0.000    0.000    0.001    0.000 _docscrape.py:454(_str_header)
     2838    0.001    0.000    0.001    0.000 facts.py:582(_tell)
      186    0.000    0.000    0.001    0.000 typing.py:1673(__hash__)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:1(<module>)
        1    0.000    0.000    0.001    0.001 texmanager.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pkgutil.py:506(extend_path)
       26    0.000    0.000    0.001    0.000 _hook_iterator.py:102(hook_iterator)
        1    0.000    0.000    0.001    0.001 periodic_table.py:865(Element)
        1    0.000    0.000    0.001    0.001 ctx_iv.py:1(<module>)
      106    0.000    0.000    0.001    0.000 typing.py:932(__init__)
        6    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:1616(_update_parameters)
        1    0.000    0.000    0.001    0.001 dataset.py:1(<module>)
        1    0.000    0.000    0.001    0.001 TiffTags.py:1(<module>)
     3959    0.001    0.000    0.001    0.000 typing.py:1341(<genexpr>)
        1    0.000    0.000    0.001    0.001 figure.py:220(Figure)
       90    0.000    0.000    0.001    0.000 basic.py:475(<listcomp>)
        6    0.001    0.000    0.001    0.000 {method 'decompress' of 'zlib.Decompress' objects}
        3    0.000    0.000    0.001    0.000 arrayprint.py:1487(_array_repr_implementation)
        1    0.000    0.000    0.001    0.001 _suppression.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _exception.py:1(<module>)
       19    0.001    0.000    0.001    0.000 {built-in method posix.lstat}
        1    0.000    0.000    0.001    0.001 symbolic_opset10.py:1(<module>)
      185    0.000    0.000    0.001    0.000 inspect.py:1449(formatannotation)
        1    0.000    0.000    0.001    0.001 sampler.py:1(<module>)
     5535    0.001    0.000    0.001    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.001    0.001 _graph_traversal.py:1(<module>)
       61    0.000    0.000    0.001    0.000 core.py:4672(__init__)
       29    0.000    0.000    0.001    0.000 _array_api.py:553(xp_promote)
      130    0.000    0.000    0.001    0.000 dataclasses.py:371(_fields_in_init_order)
        1    0.000    0.000    0.001    0.001 _translation_metadata.py:1(<module>)
        4    0.000    0.000    0.001    0.000 __init__.py:590(gen_candidates)
        4    0.000    0.000    0.001    0.000 __init__.py:2295(_make_reduction_prim)
        1    0.000    0.000    0.001    0.001 _add_docstring.py:27(_parse_docstrings)
        1    0.000    0.000    0.001    0.001 _linalg.py:1(<module>)
      544    0.000    0.000    0.001    0.000 registration.py:159(add)
       19    0.000    0.000    0.001    0.000 functools.py:852(register)
       24    0.000    0.000    0.001    0.000 dviread.py:167(decorate)
        1    0.000    0.000    0.001    0.001 _result_provenance.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ticker.py:1(<module>)
       45    0.000    0.000    0.001    0.000 basic.py:1386(has)
     4835    0.001    0.000    0.001    0.000 _ops.py:398(name)
        1    0.000    0.000    0.001    0.001 _special_matrices.py:1(<module>)
        5    0.000    0.000    0.001    0.000 decorator.py:177(create)
       16    0.000    0.000    0.001    0.000 arraypad.py:533(pad)
        3    0.000    0.000    0.001    0.000 arrayprint.py:561(array2string)
      664    0.000    0.000    0.001    0.000 _pytree.py:89(_is_namedtuple_instance)
        1    0.000    0.000    0.001    0.001 _page_trend_test.py:1(<module>)
        1    0.000    0.000    0.001    0.001 texmanager.py:47(TexManager)
       14    0.000    0.000    0.001    0.000 __init__.py:2089(_warn_external)
     6709    0.001    0.000    0.001    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.001    0.001 _logical_location.py:1(<module>)
     5303    0.001    0.000    0.001    0.000 inspect.py:3024(parameters)
        1    0.000    0.000    0.001    0.001 registration.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _rectangle.py:1(<module>)
        1    0.000    0.000    0.001    0.001 binary.py:174(<dictcomp>)
       42    0.000    0.000    0.001    0.000 symbol.py:359(__xnew__)
      245    0.000    0.000    0.001    0.000 _docscrape.py:591(get_func)
      188    0.001    0.000    0.001    0.000 colors.py:850(<listcomp>)
        1    0.000    0.000    0.001    0.001 six.py:1(<module>)
      237    0.000    0.000    0.001    0.000 libmpf.py:330(from_int)
        1    0.000    0.000    0.001    0.001 __init__.py:149(EntryPoint)
       10    0.000    0.000    0.001    0.000 dataclasses.py:846(_hash_add)
       87    0.000    0.000    0.001    0.000 utils.py:83(groupby)
      540    0.000    0.000    0.001    0.000 _tensor_docs.py:8(add_docstr_all)
        1    0.000    0.000    0.001    0.001 __init__.py:486(get_configdir)
       72    0.000    0.000    0.001    0.000 pydoc.py:104(_finddoc)
      130    0.000    0.000    0.001    0.000 dataclasses.py:574(<listcomp>)
     4878    0.001    0.000    0.001    0.000 basic.py:906(args)
        1    0.001    0.001    0.001    0.001 platform.py:781(uname_result)
        1    0.000    0.000    0.001    0.001 _version_control_details.py:1(<module>)
       58    0.000    0.000    0.001    0.000 <frozen abc>:110(register)
      639    0.000    0.000    0.001    0.000 ctx_mp_python.py:1014(_wrap_specfun)
        1    0.000    0.000    0.001    0.001 __init__.py:421(PercentStyle)
      217    0.000    0.000    0.001    0.000 enum.py:913(_check_for_existing_members_)
        1    0.000    0.000    0.001    0.001 ase.py:1(<module>)
       12    0.000    0.000    0.001    0.000 _distribution_infrastructure.py:943(filtered)
       45    0.000    0.000    0.001    0.000 basic.py:1507(_has)
      420    0.000    0.000    0.001    0.000 _ops.py:505(overloads)
        1    0.000    0.000    0.001    0.001 _stack_frame.py:1(<module>)
        1    0.000    0.000    0.001    0.001 ordinals.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _node.py:1(<module>)
      790    0.000    0.000    0.001    0.000 containers.py:66(__len__)
       63    0.000    0.000    0.001    0.000 _axis_nan_policy.py:291(_get_axis_params)
        7    0.000    0.000    0.001    0.000 periodic_table.py:1223(from_str)
      148    0.000    0.000    0.001    0.000 enum.py:753(__getattr__)
        3    0.000    0.000    0.001    0.000 pyplot.py:794(close)
       82    0.000    0.000    0.001    0.000 __init__.py:1873(make_alias)
        1    0.000    0.000    0.001    0.001 __init__.py:345(<listcomp>)
        1    0.000    0.000    0.001    0.001 widgets.py:1(<module>)
       18    0.000    0.000    0.000    0.000 arrayprint.py:1595(_array_str_implementation)
        1    0.000    0.000    0.000    0.000 _short_time_fft.py:229(ShortTimeFFT)
      115    0.000    0.000    0.000    0.000 containers.py:100(__eq__)
       98    0.000    0.000    0.000    0.000 {built-in method torch._has_compatible_shallow_copy_type}
        1    0.000    0.000    0.000    0.000 internal.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _pylab_helpers.py:79(destroy_all)
      146    0.000    0.000    0.000    0.000 deprecation.py:24(_generate_deprecation_warning)
      129    0.000    0.000    0.000    0.000 ctx_mp_python.py:979(_wrap_libmp_function)
      271    0.000    0.000    0.000    0.000 _parser.py:307(_class_escape)
        3    0.000    0.000    0.000    0.000 arrayprint.py:523(_array2string)
        1    0.000    0.000    0.000    0.000 node.py:105(Node)
       58    0.000    0.000    0.000    0.000 {built-in method _abc._abc_register}
      163    0.000    0.000    0.000    0.000 iterables.py:585(sift)
       10    0.000    0.000    0.000    0.000 dataclasses.py:639(_hash_fn)
     1318    0.000    0.000    0.000    0.000 enum.py:69(_is_internal_class)
        1    0.000    0.000    0.000    0.000 conventions.py:1(<module>)
        6    0.000    0.000    0.000    0.000 deprecation.py:56(warn_deprecated)
        6    0.000    0.000    0.000    0.000 printer.py:424(decorator)
     1406    0.000    0.000    0.000    0.000 _parser.py:79(groups)
      146    0.000    0.000    0.000    0.000 enum.py:959(_find_data_type_)
     2213    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
      544    0.000    0.000    0.000    0.000 registration.py:135(__init__)
        1    0.000    0.000    0.000    0.000 para4tb.py:24(<listcomp>)
        2    0.000    0.000    0.000    0.000 qconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 reductions.py:148(<dictcomp>)
     5522    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
        1    0.000    0.000    0.000    0.000 return_types.py:1(<module>)
        1    0.000    0.000    0.000    0.000 timeouts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _message.py:1(<module>)
      540    0.000    0.000    0.000    0.000 dataclasses.py:821(_set_qualname)
        1    0.000    0.000    0.000    0.000 join.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polygon.py:1(<module>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:531(_str_index)
        6    0.000    0.000    0.000    0.000 printer.py:392(__init__)
        1    0.000    0.000    0.000    0.000 diagonal.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {built-in method gc.collect}
      330    0.000    0.000    0.000    0.000 basic.py:468(inner_key)
      325    0.000    0.000    0.000    0.000 function_base.py:483(_add_docstring)
        1    0.000    0.000    0.000    0.000 libintmath.py:127(<listcomp>)
       87    0.000    0.000    0.000    0.000 conflict.py:67(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:1(<module>)
      748    0.000    0.000    0.000    0.000 dataclasses.py:267(__init__)
        1    0.000    0.000    0.000    0.000 pyplot.py:1872(get_plot_commands)
     3686    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:71(_relax_case)
        8    0.000    0.000    0.000    0.000 __init__.py:794(children)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:1(<module>)
     1164    0.000    0.000    0.000    0.000 {built-in method torch._C._add_docstr}
     1191    0.000    0.000    0.000    0.000 libintmath.py:91(python_bitcount)
     1293    0.000    0.000    0.000    0.000 inspect.py:1182(tokeneater)
   190/92    0.000    0.000    0.000    0.000 core.py:1956(__str__)
       24    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:386(draw)
     10/4    0.000    0.000    0.000    0.000 core.py:4409(streamline)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_agg.py:389(FigureCanvasAgg)
        1    0.000    0.000    0.000    0.000 _physical_location.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _edge.py:1(<module>)
        1    0.000    0.000    0.000    0.000 projections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _location_relationship.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:1(<module>)
       28    0.000    0.000    0.000    0.000 _decorator.py:23(__call__)
      171    0.000    0.000    0.000    0.000 <frozen posixpath>:71(join)
       87    0.000    0.000    0.000    0.000 utils.py:61(reverse_dict)
       15    0.000    0.000    0.000    0.000 typing.py:2916(<dictcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:1(<module>)
     1036    0.000    0.000    0.000    0.000 _parser.py:166(__setitem__)
       10    0.000    0.000    0.000    0.000 contextlib.py:78(inner)
        1    0.000    0.000    0.000    0.000 utils.py:34(envwrap)
       18    0.000    0.000    0.000    0.000 arrayprint.py:1588(_guarded_repr_or_str)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:1(<module>)
      117    0.000    0.000    0.000    0.000 typing.py:1020(__typing_subst__)
        1    0.000    0.000    0.000    0.000 _trace.py:1(<module>)
     1272    0.000    0.000    0.000    0.000 typing.py:882(__eq__)
        1    0.000    0.000    0.000    0.000 _scalars.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bisect.py:1(<module>)
      131    0.000    0.000    0.000    0.000 fromnumeric.py:53(_wrapfunc)
       98    0.000    0.000    0.000    0.000 module.py:539(register_parameter)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3211(_moment_central_dispatch)
        6    0.000    0.000    0.000    0.000 _version.py:55(__init__)
      140    0.000    0.000    0.000    0.000 basic.py:497(__eq__)
        1    0.000    0.000    0.000    0.000 encoder.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1(<module>)
       40    0.000    0.000    0.000    0.000 mul.py:483(_gather)
     2189    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 interpreter.py:16(Interpreter)
      459    0.000    0.000    0.000    0.000 iterables.py:1943(<genexpr>)
       52    0.000    0.000    0.000    0.000 core.py:894(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:313(select_from)
        1    0.000    0.000    0.000    0.000 utils.py:73(<dictcomp>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:621(get_path)
  460/100    0.000    0.000    0.000    0.000 sorting.py:168(_node_count)
      398    0.000    0.000    0.000    0.000 _util.py:531(<listcomp>)
        1    0.000    0.000    0.000    0.000 queue.py:1(<module>)
       49    0.000    0.000    0.000    0.000 core.py:131(get_object_signature)
        2    0.000    0.000    0.000    0.000 sysconfig.py:609(get_paths)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1779(_validate)
        2    0.000    0.000    0.000    0.000 __init__.py:2078(_make_copy_from_view)
        1    0.000    0.000    0.000    0.000 due.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:261(_expand_vars)
        5    0.000    0.000    0.000    0.000 perm_groups.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 version.py:112(StrictVersion)
        2    0.000    0.000    0.000    0.000 _functions.py:1(<module>)
        5    0.000    0.000    0.000    0.000 ctx_iv.py:244(_binary_op)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 main.py:57(__init__)
        1    0.000    0.000    0.000    0.000 request.py:939(AbstractBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 _spdx.py:1(<module>)
       57    0.000    0.000    0.000    0.000 <frozen posixpath>:228(expanduser)
        1    0.000    0.000    0.000    0.000 ImageFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _property_bag.py:1(<module>)
      776    0.000    0.000    0.000    0.000 enum.py:188(__get__)
       86    0.000    0.000    0.000    0.000 _parser.py:265(getuntil)
        1    0.000    0.000    0.000    0.000 modules.py:606(SubModule)
        1    0.000    0.000    0.000    0.000 collate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataloader.py:129(DataLoader)
      240    0.000    0.000    0.000    0.000 functools.py:479(lru_cache)
        1    0.000    0.000    0.000    0.000 _fix.py:1(<module>)
       26    0.000    0.000    0.000    0.000 core.py:6855(__init__)
      135    0.000    0.000    0.000    0.000 pyplot.py:1884(<genexpr>)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:358(decorator)
        1    0.000    0.000    0.000    0.000 backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 shape_prop.py:1(<module>)
       54    0.000    0.000    0.000    0.000 decorators.py:46(deco)
        1    0.000    0.000    0.000    0.000 options.py:1(<module>)
     2336    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1565(<genexpr>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:833(validation)
      110    0.000    0.000    0.000    0.000 _compiler.py:386(<listcomp>)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:18(__init__)
      471    0.000    0.000    0.000    0.000 {built-in method fromkeys}
       68    0.000    0.000    0.000    0.000 _internal.py:14(get_xp)
      327    0.000    0.000    0.000    0.000 <frozen posixpath>:60(isabs)
      398    0.000    0.000    0.000    0.000 _util.py:536(<listcomp>)
     4061    0.000    0.000    0.000    0.000 inspect.py:2733(default)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3276(_moment_standardized)
        1    0.000    0.000    0.000    0.000 ExifTags.py:295(<dictcomp>)
      266    0.000    0.000    0.000    0.000 inspect.py:973(getmodule)
        1    0.000    0.000    0.000    0.000 ops.py:89(get_ops_with_reflection)
     1694    0.000    0.000    0.000    0.000 unicode.py:63(<genexpr>)
      109    0.000    0.000    0.000    0.000 inspect.py:2068(_signature_is_builtin)
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4172(get_distribution_names)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:1(<module>)
       25    0.000    0.000    0.000    0.000 typing.py:2013(__init_subclass__)
        6    0.000    0.000    0.000    0.000 rcsetup.py:340(validate_color_or_inherit)
       26    0.000    0.000    0.000    0.000 core.py:6860(getdoc)
        1    0.000    0.000    0.000    0.000 main.py:761(official_plug_ins)
        1    0.000    0.000    0.000    0.000 backend_registry.py:1(<module>)
     2603    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3282(_moment_standardized_dispatch)
       97    0.000    0.000    0.000    0.000 fromnumeric.py:1025(argsort)
       91    0.000    0.000    0.000    0.000 core.py:2408(__init__)
       34    0.000    0.000    0.000    0.000 core.py:3064(__init__)
     1760    0.000    0.000    0.000    0.000 dataclasses.py:427(<genexpr>)
        1    0.000    0.000    0.000    0.000 artist.py:1236(ArtistInspector)
  157/148    0.000    0.000    0.000    0.000 fake_tensor.py:92(contains_tensor_types)
       87    0.000    0.000    0.000    0.000 _docscrape.py:658(splitlines_x)
        1    0.000    0.000    0.000    0.000 hashlib.py:1(<module>)
       54    0.000    0.000    0.000    0.000 decorators.py:52(__sympifyit)
       13    0.000    0.000    0.000    0.000 _deprecation.py:20(decorator)
      436    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
      231    0.000    0.000    0.000    0.000 _compiler.py:465(_get_charset_prefix)
       25    0.000    0.000    0.000    0.000 decorator.py:317(deprecated_decorator)
        1    0.000    0.000    0.000    0.000 mlab.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glob.py:13(glob)
        1    0.000    0.000    0.000    0.000 {built-in method torch.max}
      154    0.000    0.000    0.000    0.000 <frozen _collections_abc>:428(__new__)
      778    0.000    0.000    0.000    0.000 _ops.py:419(__init__)
        1    0.000    0.000    0.000    0.000 entities.py:1(<module>)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:647(_is_classvar)
       26    0.000    0.000    0.000    0.000 _sources.py:102(make_source_context)
        1    0.000    0.000    0.000    0.000 hadamard.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1506(UnivariateDistribution)
        1    0.000    0.000    0.000    0.000 dlpack.py:1(<module>)
       50    0.000    0.000    0.000    0.000 numbers.py:1622(__eq__)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:664(register_var_mean)
        9    0.000    0.000    0.000    0.000 _multivariate.py:5755(_docfill)
      100    0.000    0.000    0.000    0.000 iterables.py:1970(uniq)
        1    0.000    0.000    0.000    0.000 axis.py:628(Axis)
      398    0.000    0.000    0.000    0.000 _util.py:553(<dictcomp>)
       16    0.000    0.000    0.000    0.000 inspect.py:2124(<listcomp>)
        1    0.000    0.000    0.000    0.000 pickle.py:197(<listcomp>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3308(_moment_standardized_normalize)
      3/1    0.000    0.000    0.000    0.000 glob.py:60(_iglob)
       62    0.000    0.000    0.000    0.000 decorator.py:233(memoize_property)
        1    0.000    0.000    0.000    0.000 piecewise.py:1(<module>)
        4    0.000    0.000    0.000    0.000 assumptions.py:509(_ask)
      398    0.000    0.000    0.000    0.000 _util.py:550(<dictcomp>)
        5    0.000    0.000    0.000    0.000 decorator.py:144(make)
        1    0.000    0.000    0.000    0.000 gammasimp.py:1(<module>)
       19    0.000    0.000    0.000    0.000 path.py:98(__init__)
        1    0.000    0.000    0.000    0.000 symbolic_opset8.py:1(<module>)
      277    0.000    0.000    0.000    0.000 results.py:153(__new__)
        1    0.000    0.000    0.000    0.000 selectors.py:1(<module>)
      398    0.000    0.000    0.000    0.000 _util.py:546(<listcomp>)
        3    0.000    0.000    0.000    0.000 typing.py:2852(NamedTuple)
        1    0.000    0.000    0.000    0.000 split_module.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:1(<module>)
       13    0.000    0.000    0.000    0.000 deprecation.py:277(_rename_parameter)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1122(get_filename)
       82    0.000    0.000    0.000    0.000 linecache.py:52(checkcache)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:724(validate)
       14    0.000    0.000    0.000    0.000 hashlib.py:126(__get_openssl_constructor)
        1    0.000    0.000    0.000    0.000 ask.py:21(AssumptionKeys)
     1371    0.000    0.000    0.000    0.000 {method 'capitalize' of 'str' objects}
        1    0.000    0.000    0.000    0.000 passthrough.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:204(Tracer)
        1    0.000    0.000    0.000    0.000 matadd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutation.py:1(<module>)
      482    0.000    0.000    0.000    0.000 dataclasses.py:306(__set_name__)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:10(parse_kwargs)
        6    0.000    0.000    0.000    0.000 typing.py:1360(__ror__)
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1293(_get_parent_path)
     2361    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:413(has_location)
        1    0.000    0.000    0.000    0.000 _special_locations.py:1(<module>)
        1    0.000    0.000    0.000    0.000 band_data_in.py:60(generate_k_path)
     3292    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        3    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(_held_figure)
        1    0.000    0.000    0.000    0.000 str.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:452(_get_format_function)
      456    0.000    0.000    0.000    0.000 feedparser.py:128(__next__)
        3    0.000    0.000    0.000    0.000 decorators.py:123(sympify_method_args)
        3    0.000    0.000    0.000    0.000 decorator.py:200(decorate)
      171    0.000    0.000    0.000    0.000 typing.py:1287(__instancecheck__)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:1125(_qualified_name)
        1    0.000    0.000    0.000    0.000 _sources.py:1(<module>)
        2    0.000    0.000    0.000    0.000 determinant.py:1(<module>)
       52    0.000    0.000    0.000    0.000 package_importer.py:687(_patched_getfile)
        1    0.000    0.000    0.000    0.000 constraints.py:1(<module>)
        1    0.000    0.000    0.000    0.000 argparse.py:1(<module>)
        4    0.000    0.000    0.000    0.000 core.py:1518(__mul__)
        1    0.000    0.000    0.000    0.000 threading.py:1(<module>)
      838    0.000    0.000    0.000    0.000 {method 'update' of 'set' objects}
      436    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:1(<module>)
       10    0.000    0.000    0.000    0.000 symbol.py:654(symbols)
       40    0.000    0.000    0.000    0.000 core.py:2462(__init__)
      216    0.000    0.000    0.000    0.000 _policybase.py:293(header_source_parse)
        1    0.000    0.000    0.000    0.000 datapipes.py:1(<module>)
       43    0.000    0.000    0.000    0.000 decompositions.py:43(type_casts)
       53    0.000    0.000    0.000    0.000 core.py:3161(parseImpl)
      115    0.000    0.000    0.000    0.000 inspect.py:776(_findclass)
        1    0.000    0.000    0.000    0.000 markers.py:145(MarkerStyle)
        1    0.000    0.000    0.000    0.000 heapq.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sharding.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _script.py:892(_get_methods)
      590    0.000    0.000    0.000    0.000 _compiler.py:568(isstring)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1(<module>)
       54    0.000    0.000    0.000    0.000 __init__.py:1378(_fixupParents)
      735    0.000    0.000    0.000    0.000 dataclasses.py:511(_init_param)
        1    0.000    0.000    0.000    0.000 glob.py:1(<module>)
        1    0.000    0.000    0.000    0.000 containers.py:1(<module>)
       24    0.000    0.000    0.000    0.000 core.py:5818(__init__)
       22    0.000    0.000    0.000    0.000 core.py:4215(_generateDefaultName)
  420/397    0.000    0.000    0.000    0.000 basic.py:315(__hash__)
        1    0.000    0.000    0.000    0.000 types.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3017(sample)
        1    0.000    0.000    0.000    0.000 periodic_table.py:72(ElementBase)
      536    0.000    0.000    0.000    0.000 function_base.py:348(iterable)
      295    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        1    0.000    0.000    0.000    0.000 gmpy.py:110(_get_flint)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:655(_is_initvar)
       30    0.000    0.000    0.000    0.000 _array_api.py:503(xp_result_type)
       50    0.000    0.000    0.000    0.000 containers.py:177(<lambda>)
        1    0.000    0.000    0.000    0.000 geo.py:1(<module>)
       21    0.000    0.000    0.000    0.000 symbol.py:325(__new__)
        1    0.000    0.000    0.000    0.000 TiffTags.py:439(_populate)
        2    0.000    0.000    0.000    0.000 doccer.py:263(filldoc)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:352(contains)
        1    0.000    0.000    0.000    0.000 _color_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 para4tb.py:121(<listcomp>)
        1    0.000    0.000    0.000    0.000 pkgutil.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:258(WordSet)
        1    0.000    0.000    0.000    0.000 nanfunctions.py:1(<module>)
        3    0.000    0.000    0.000    0.000 functions.py:1(<module>)
     2169    0.000    0.000    0.000    0.000 typing.py:1662(<genexpr>)
        2    0.000    0.000    0.000    0.000 doccer.py:292(unindent_dict)
        3    0.000    0.000    0.000    0.000 arrayprint.py:411(<lambda>)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
      757    0.000    0.000    0.000    0.000 __init__.py:907(<lambda>)
       71    0.000    0.000    0.000    0.000 typing.py:335(_flatten_literal_params)
        1    0.000    0.000    0.000    0.000 binrel.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method posix.replace}
        1    0.000    0.000    0.000    0.000 _foreach_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 profiler_util.py:1(<module>)
       73    0.000    0.000    0.000    0.000 rcsetup.py:90(<listcomp>)
        1    0.000    0.000    0.000    0.000 compatibility.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset12.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tensor.py:81(Tensor)
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:1(<module>)
        7    0.000    0.000    0.000    0.000 power.py:136(__new__)
       26    0.000    0.000    0.000    0.000 _sources.py:87(__init__)
       18    0.000    0.000    0.000    0.000 message.py:489(get)
        1    0.000    0.000    0.000    0.000 _named_member_accessor.py:85(NamedMemberAccessor)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:1(<module>)
      191    0.000    0.000    0.000    0.000 typing.py:1608(<genexpr>)
        1    0.000    0.000    0.000    0.000 partitions.py:1(<module>)
      958    0.000    0.000    0.000    0.000 utils.py:56(<genexpr>)
        1    0.000    0.000    0.000    0.000 _mgc.py:1(<module>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:907(__init__)
       77    0.000    0.000    0.000    0.000 <frozen posixpath>:150(dirname)
        1    0.000    0.000    0.000    0.000 _conversions.py:1(<module>)
       35    0.000    0.000    0.000    0.000 transforms.py:1251(__init_subclass__)
     1330    0.000    0.000    0.000    0.000 {built-in method sys.intern}
       41    0.000    0.000    0.000    0.000 decorators.py:110(priority_decorator)
     1001    0.000    0.000    0.000    0.000 _tensor_str.py:173(width)
        2    0.000    0.000    0.000    0.000 hashlib.py:82(__get_builtin_constructor)
        1    0.000    0.000    0.000    0.000 glob.py:105(_glob1)
        1    0.000    0.000    0.000    0.000 nccl.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:198(split)
        1    0.000    0.000    0.000    0.000 sysconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1536(from_str)
       98    0.000    0.000    0.000    0.000 parameter.py:30(__new__)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:49(__init__)
        1    0.000    0.000    0.000    0.000 add.py:1(<module>)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:100(<lambda>)
       26    0.000    0.000    0.000    0.000 _sources.py:37(normalize_source_lines)
     2163    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:931(create_module)
        5    0.000    0.000    0.000    0.000 perm_groups.py:146(<listcomp>)
        1    0.000    0.000    0.000    0.000 colorbar.py:321(ColorbarBase)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1(<module>)
        4    0.000    0.000    0.000    0.000 assumptions.py:481(copy)
       24    0.000    0.000    0.000    0.000 doccer.py:311(unindent_string)
      187    0.000    0.000    0.000    0.000 typing.py:908(_is_unpacked_typevartuple)
        2    0.000    0.000    0.000    0.000 quant_type.py:1(<module>)
        8    0.000    0.000    0.000    0.000 typing.py:2248(get_type_hints)
        1    0.000    0.000    0.000    0.000 para4band.py:530(<listcomp>)
       10    0.000    0.000    0.000    0.000 _contextlib.py:123(__call__)
       17    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
        1    0.000    0.000    0.000    0.000 _exporter_states.py:1(<module>)
      367    0.000    0.000    0.000    0.000 permutations.py:1385(<listcomp>)
        1    0.000    0.000    0.000    0.000 proxy.py:83(TracerBase)
        1    0.000    0.000    0.000    0.000 zipfile.py:1(<module>)
      686    0.000    0.000    0.000    0.000 inspect.py:2457(<lambda>)
        1    0.000    0.000    0.000    0.000 functional_call.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numpy.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2391(skewness)
        3    0.000    0.000    0.000    0.000 streams.py:1(<module>)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1057(__hash__)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:1(<module>)
      790    0.000    0.000    0.000    0.000 containers.py:63(<genexpr>)
        1    0.000    0.000    0.000    0.000 _base.py:422(_AxesBase)
       97    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 _musllinux.py:1(<module>)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:633(__new__)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:257(LOBPCGAutogradFunction)
        4    0.000    0.000    0.000    0.000 constants.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adjoint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 contextvars.py:1(<module>)
     12/2    0.000    0.000    0.000    0.000 core.py:1578(makeOptionalList)
      190    0.000    0.000    0.000    0.000 pyplot.py:82(_copy_docstring_and_deprecators)
        1    0.000    0.000    0.000    0.000 collections.py:22(Collection)
       73    0.000    0.000    0.000    0.000 _internal.py:872(_ufunc_doc_signature_formatter)
        3    0.000    0.000    0.000    0.000 arrayprint.py:934(fillFormat)
      605    0.000    0.000    0.000    0.000 _inspect.py:13(ismethod)
        1    0.000    0.000    0.000    0.000 polytools.py:106(Poly)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:1(<module>)
        2    0.000    0.000    0.000    0.000 decorator.py:215(decorator)
       71    0.000    0.000    0.000    0.000 inspect.py:2745(replace)
      453    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:108(<dictcomp>)
        1    0.000    0.000    0.000    0.000 callable.py:171(CollatorIterDataPipe)
        7    0.000    0.000    0.000    0.000 pathlib.py:909(home)
      171    0.000    0.000    0.000    0.000 typing.py:1546(__subclasscheck__)
       52    0.000    0.000    0.000    0.000 inspect.py:896(getfile)
        2    0.000    0.000    0.000    0.000 normalization.py:1(<module>)
    429/1    0.000    0.000    0.000    0.000 __config__.py:14(_cleanup)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3247(_moment_central_transform)
        2    0.000    0.000    0.000    0.000 traceback.py:1(<module>)
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:292(_apply)
        1    0.000    0.000    0.000    0.000 padding.py:1(<module>)
       27    0.000    0.000    0.000    0.000 artist.py:20(allow_rasterization)
        1    0.000    0.000    0.000    0.000 _meta.py:1(<module>)
     49/1    0.000    0.000    0.000    0.000 __config__.py:20(<dictcomp>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:253(_extend_dict)
        1    0.000    0.000    0.000    0.000 _interpolate.py:282(__init__)
       55    0.000    0.000    0.000    0.000 __init__.py:1447(__init__)
        2    0.000    0.000    0.000    0.000 conv_fused.py:1(<module>)
      156    0.000    0.000    0.000    0.000 inspect.py:330(isdatadescriptor)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1276(__init__)
        2    0.000    0.000    0.000    0.000 traceback.py:29(format_list)
        1    0.000    0.000    0.000    0.000 case.py:1(<module>)
        1    0.000    0.000    0.000    0.000 smtlib.py:25(SMTLibPrinter)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transformer.py:1(<module>)
      232    0.000    0.000    0.000    0.000 function.py:147(<listcomp>)
     1239    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
      325    0.000    0.000    0.000    0.000 function_base.py:465(_needs_add_docstring)
        1    0.000    0.000    0.000    0.000 kronecker.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pickletools.py:2224(assure_pickle_consistency)
        1    0.000    0.000    0.000    0.000 _binned_statistic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:771(register_view)
        2    0.000    0.000    0.000    0.000 units.py:1(<module>)
       95    0.000    0.000    0.000    0.000 permutations.py:2051(is_identity)
      172    0.000    0.000    0.000    0.000 decorator.py:184(public)
      295    0.000    0.000    0.000    0.000 _distn_infrastructure.py:839(<genexpr>)
       27    0.000    0.000    0.000    0.000 singleton.py:190(__init__)
       79    0.000    0.000    0.000    0.000 core.py:4216(<genexpr>)
        1    0.000    0.000    0.000    0.000 matrixbase.py:99(MatrixBase)
        1    0.000    0.000    0.000    0.000 runners.py:1(<module>)
     2914    0.000    0.000    0.000    0.000 basic.py:208(__sympy__)
      259    0.000    0.000    0.000    0.000 dataclasses.py:389(<listcomp>)
      268    0.000    0.000    0.000    0.000 libmpf.py:322(<genexpr>)
       10    0.000    0.000    0.000    0.000 {function SeedSequence.generate_state at 0x15529b65ea20}
        1    0.000    0.000    0.000    0.000 unicode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:385(register_full)
       32    0.000    0.000    0.000    0.000 rcsetup.py:925(<genexpr>)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:1(<module>)
       49    0.000    0.000    0.000    0.000 {built-in method torch.ones}
        1    0.000    0.000    0.000    0.000 _cm_listed.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _decorator.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:917(<dictcomp>)
       26    0.000    0.000    0.000    0.000 {slot wrapper '__init__' of 'object' objects}
      295    0.000    0.000    0.000    0.000 _parser.py:954(fix_flags)
       17    0.000    0.000    0.000    0.000 getlimits.py:484(__new__)
       26    0.000    0.000    0.000    0.000 core.py:921(__init__)
       24    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:71(add_newdoc_for_scalar_type)
      251    0.000    0.000    0.000    0.000 _docscrape.py:393(<setcomp>)
        1    0.000    0.000    0.000    0.000 graph_module.py:283(GraphModule)
        2    0.000    0.000    0.000    0.000 optimizer.py:489(add_param_group)
      216    0.000    0.000    0.000    0.000 message.py:506(set_raw)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1504(<dictcomp>)
        1    0.000    0.000    0.000    0.000 quaternion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:310(Pair)
      300    0.000    0.000    0.000    0.000 matrix_element.py:157(<listcomp>)
       26    0.000    0.000    0.000    0.000 _mangling.py:44(is_mangled)
        1    0.000    0.000    0.000    0.000 streamreader.py:1(<module>)
        4    0.000    0.000    0.000    0.000 sparse.py:1(<module>)
       12    0.000    0.000    0.000    0.000 message.py:591(get_content_type)
        1    0.000    0.000    0.000    0.000 container.py:42(Sequential)
        1    0.000    0.000    0.000    0.000 isoparser.py:1(<module>)
      603    0.000    0.000    0.000    0.000 <frozen posixpath>:41(_get_sep)
        1    0.000    0.000    0.000    0.000 representer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parametrize.py:1(<module>)
     1023    0.000    0.000    0.000    0.000 _docscrape.py:46(reset)
        1    0.000    0.000    0.000    0.000 sysconfig.py:443(get_makefile_filename)
        1    0.000    0.000    0.000    0.000 param_fetch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis.py:34(Tick)
      248    0.000    0.000    0.000    0.000 _docscrape.py:465(_str_summary)
      267    0.000    0.000    0.000    0.000 function.py:152(<lambda>)
      453    0.000    0.000    0.000    0.000 wrappers.py:210(<genexpr>)
        2    0.000    0.000    0.000    0.000 operations.py:623(register_handlerclass)
        1    0.000    0.000    0.000    0.000 pydoc.py:465(Doc)
       23    0.000    0.000    0.000    0.000 overrides.py:177(decorator)
      135    0.000    0.000    0.000    0.000 core.py:2016(__eq__)
       98    0.000    0.000    0.000    0.000 {built-in method _make_subclass}
      130    0.000    0.000    0.000    0.000 dataclasses.py:550(<dictcomp>)
       87    0.000    0.000    0.000    0.000 docstring.py:38(__call__)
       30    0.000    0.000    0.000    0.000 _inspect.py:140(formatargspec)
      243    0.000    0.000    0.000    0.000 iterables.py:3083(is_sequence)
      108    0.000    0.000    0.000    0.000 typing.py:2532(overload)
       46    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:276(__init__)
        1    0.000    0.000    0.000    0.000 _crosstab.py:1(<module>)
     1623    0.000    0.000    0.000    0.000 permutations.py:456(<genexpr>)
       37    0.000    0.000    0.000    0.000 decorators.py:214(make_wrapped)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1485(__str__)
      737    0.000    0.000    0.000    0.000 dataclasses.py:439(_field_assign)
       62    0.000    0.000    0.000    0.000 __init__.py:873(normalize)
        1    0.000    0.000    0.000    0.000 polyoptions.py:300(Wrt)
        1    0.000    0.000    0.000    0.000 backend_managers.py:1(<module>)
      449    0.000    0.000    0.000    0.000 __init__.py:57(register_decomposition)
        1    0.000    0.000    0.000    0.000 fileopener.py:1(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:482(cycler)
        1    0.000    0.000    0.000    0.000 rrule.py:1(<module>)
        2    0.000    0.000    0.000    0.000 traceback.py:513(format)
      519    0.000    0.000    0.000    0.000 inspect.py:300(ismethod)
        1    0.000    0.000    0.000    0.000 plane.py:1(<module>)
       12    0.000    0.000    0.000    0.000 core.py:6035(__init__)
      970    0.000    0.000    0.000    0.000 _array_api.py:665(_render)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:30(ErrorMeta)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:391(__init__)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:25(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_init}
        1    0.000    0.000    0.000    0.000 _multivariate.py:2694(__init__)
       27    0.000    0.000    0.000    0.000 pathlib.py:353(_select_from)
     1048    0.000    0.000    0.000    0.000 _ops.py:313(py_impl)
       10    0.000    0.000    0.000    0.000 _contextlib.py:69(context_decorator)
      231    0.000    0.000    0.000    0.000 inspect.py:1950(_signature_get_user_defined_method)
       13    0.000    0.000    0.000    0.000 enum.py:1473(__or__)
      548    0.000    0.000    0.000    0.000 <frozen os>:759(decode)
      472    0.000    0.000    0.000    0.000 facts.py:579(__init__)
        1    0.000    0.000    0.000    0.000 instancenorm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expr.py:46(Expr)
       16    0.000    0.000    0.000    0.000 structure.py:3569(nelectrons)
        2    0.000    0.000    0.000    0.000 _multivariate.py:2009(__init__)
        1    0.000    0.000    0.000    0.000 ExifTags.py:305(GPS)
        1    0.000    0.000    0.000    0.000 _encoded_words.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _type_utils.py:58(JitScalarType)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:340(_axis_nan_policy_factory)
        1    0.000    0.000    0.000    0.000 selecting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 net_min_base.py:89(_MinimizerBase)
        7    0.000    0.000    0.000    0.000 ops.py:136(<listcomp>)
     1019    0.000    0.000    0.000    0.000 permutations.py:1065(array_form)
        1    0.000    0.000    0.000    0.000 isoparser.py:42(isoparser)
        1    0.000    0.000    0.000    0.000 timeouts.py:26(Timeout)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:29(_initialize)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tasks.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _version.py:114(_compare)
        2    0.000    0.000    0.000    0.000 kind.py:287(_)
      456    0.000    0.000    0.000    0.000 feedparser.py:78(readline)
        1    0.000    0.000    0.000    0.000 tensor_can.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scale.py:670(_get_scale_docs)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2394(kurtosis)
       95    0.000    0.000    0.000    0.000 permutations.py:2055(is_Identity)
      420    0.000    0.000    0.000    0.000 _ops.py:506(<listcomp>)
        1    0.000    0.000    0.000    0.000 flatten.py:1(<module>)
      605    0.000    0.000    0.000    0.000 _inspect.py:26(isfunction)
       23    0.000    0.000    0.000    0.000 core.py:5355(__init__)
        1    0.000    0.000    0.000    0.000 path.py:23(Path)
        1    0.000    0.000    0.000    0.000 options.py:43(TensorPipeRpcBackendOptions)
       43    0.000    0.000    0.000    0.000 pathlib.py:546(__fspath__)
        2    0.000    0.000    0.000    0.000 _shape.py:1(<module>)
       82    0.000    0.000    0.000    0.000 return_types.py:9(pytree_register_structseq)
      273    0.000    0.000    0.000    0.000 typing_extensions.py:3054(_check_generic)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:296(__init__)
       32    0.000    0.000    0.000    0.000 arraypad.py:458(_as_pairs)
        3    0.000    0.000    0.000    0.000 _adapters.py:35(__init__)
        2    0.000    0.000    0.000    0.000 _version.py:151(__ge__)
     1282    0.000    0.000    0.000    0.000 dataclasses.py:661(_is_kw_only)
        1    0.000    0.000    0.000    0.000 __init__.py:746(copy)
        2    0.000    0.000    0.000    0.000 fuser_method_mappings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:747(<dictcomp>)
    347/1    0.000    0.000    0.000    0.000 __config__.py:19(_cleanup)
       24    0.000    0.000    0.000    0.000 dtypes.py:66(_add_dtype_helper)
        1    0.000    0.000    0.000    0.000 process.py:1(<module>)
       56    0.000    0.000    0.000    0.000 pathlib.py:536(__str__)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:922(ShapeEnv)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:605(register_rand_like)
        1    0.000    0.000    0.000    0.000 widgets.py:1087(SubplotTool)
       27    0.000    0.000    0.000    0.000 pretty_symbology.py:121(<genexpr>)
      222    0.000    0.000    0.000    0.000 wrappers.py:187(out_wrapper)
      309    0.000    0.000    0.000    0.000 types.py:164(__init__)
        1    0.000    0.000    0.000    0.000 gmpy.py:135(_get_gmpy2)
     39/1    0.000    0.000    0.000    0.000 __config__.py:25(<dictcomp>)
        5    0.000    0.000    0.000    0.000 symbol.py:339(_canonical_assumptions)
        1    0.000    0.000    0.000    0.000 pathlib.py:281(_make_selector)
       20    0.000    0.000    0.000    0.000 numbers.py:3148(__eq__)
        1    0.000    0.000    0.000    0.000 join.py:112(Join)
        1    0.000    0.000    0.000    0.000 graph.py:19(Node)
        3    0.000    0.000    0.000    0.000 _itertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _guards.py:83(Guard)
        1    0.000    0.000    0.000    0.000 filelister.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _adapters.py:42(_repair_headers)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3336(_moment_transform_center)
        6    0.000    0.000    0.000    0.000 deprecation.py:272(__set_name__)
        1    0.000    0.000    0.000    0.000 order.py:1(<module>)
      185    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        1    0.000    0.000    0.000    0.000 calendar.py:1(<module>)
        9    0.000    0.000    0.000    0.000 functools.py:800(singledispatch)
      248    0.000    0.000    0.000    0.000 _docscrape.py:460(_str_signature)
        1    0.000    0.000    0.000    0.000 patches.py:617(Shadow)
       42    0.000    0.000    0.000    0.000 core.py:277(wrapper)
        1    0.000    0.000    0.000    0.000 companion.py:1(<module>)
      295    0.000    0.000    0.000    0.000 _parser.py:73(__init__)
        1    0.000    0.000    0.000    0.000 _decomp_cossin.py:1(<module>)
        1    0.000    0.000    0.000    0.000 results.py:1(<module>)
      248    0.000    0.000    0.000    0.000 _docscrape.py:470(_str_extended_summary)
      544    0.000    0.000    0.000    0.000 registration.py:267(onnx_symbolic)
     1260    0.000    0.000    0.000    0.000 colors.py:276(<genexpr>)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:76(wrap)
        2    0.000    0.000    0.000    0.000 fused.py:1(<module>)
     1191    0.000    0.000    0.000    0.000 {built-in method _bisect.bisect_right}
        1    0.000    0.000    0.000    0.000 mathml.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:349(__init__)
      213    0.000    0.000    0.000    0.000 ctx_fp.py:51(_wrap_specfun)
     2730    0.000    0.000    0.000    0.000 inspect.py:589(<lambda>)
        1    0.000    0.000    0.000    0.000 _decorator.py:63(non_deterministic)
       16    0.000    0.000    0.000    0.000 __init__.py:546(_cycler)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importtools.py:48(import_module)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:118(<lambda>)
        1    0.000    0.000    0.000    0.000 ndim_array.py:1(<module>)
       72    0.000    0.000    0.000    0.000 pydoc.py:94(_findclass)
       23    0.000    0.000    0.000    0.000 distributed_c10d.py:1432(exception_handler)
       24    0.000    0.000    0.000    0.000 <frozen genericpath>:27(isfile)
        1    0.000    0.000    0.000    0.000 axis3d.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arraysetops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transpose.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2385(variance)
       36    0.000    0.000    0.000    0.000 inspect.py:402(isgeneratorfunction)
        1    0.000    0.000    0.000    0.000 container.py:684(ParameterDict)
       89    0.000    0.000    0.000    0.000 _parser.py:894(_parse_flags)
        1    0.000    0.000    0.000    0.000 importer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:260(compile_pattern)
        9    0.000    0.000    0.000    0.000 message.py:615(get_content_maintype)
      363    0.000    0.000    0.000    0.000 socket.py:78(<lambda>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:360(_get_scalar_type_map)
        1    0.000    0.000    0.000    0.000 monomials.py:1(<module>)
       55    0.000    0.000    0.000    0.000 symbol.py:294(_sanitize)
      264    0.000    0.000    0.000    0.000 <frozen os>:696(__iter__)
       28    0.000    0.000    0.000    0.000 <frozen _collections_abc>:778(__contains__)
        7    0.000    0.000    0.000    0.000 pathlib.py:1377(expanduser)
        1    0.000    0.000    0.000    0.000 matexpr.py:37(MatrixExpr)
        1    0.000    0.000    0.000    0.000 repmatrix.py:566(__new__)
      586    0.000    0.000    0.000    0.000 _inspect.py:41(iscode)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:1(<module>)
       68    0.000    0.000    0.000    0.000 _util.py:1165(_apply_over_batch)
      628    0.000    0.000    0.000    0.000 _pytree.py:121(<listcomp>)
       13    0.000    0.000    0.000    0.000 core.py:8389(__init__)
        1    0.000    0.000    0.000    0.000 package_exporter.py:186(PackageExporter)
       54    0.000    0.000    0.000    0.000 typing.py:1620(<genexpr>)
        1    0.000    0.000    0.000    0.000 _quadrature.py:1(<module>)
      366    0.000    0.000    0.000    0.000 socket.py:93(<lambda>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:371(<dictcomp>)
      226    0.000    0.000    0.000    0.000 rcsetup.py:150(validate_bool)
      364    0.000    0.000    0.000    0.000 socket.py:83(<lambda>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1925(<dictcomp>)
      304    0.000    0.000    0.000    0.000 _docscrape.py:374(<listcomp>)
        1    0.000    0.000    0.000    0.000 selector_events.py:1(<module>)
     2343    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      265    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        1    0.000    0.000    0.000    0.000 upsampling.py:1(<module>)
        1    0.000    0.000    0.000    0.000 container.py:408(ModuleDict)
        1    0.000    0.000    0.000    0.000 repmatrix.py:569(_new)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:342(<listcomp>)
      365    0.000    0.000    0.000    0.000 socket.py:88(<lambda>)
       32    0.000    0.000    0.000    0.000 basic.py:2117(_exec_constructor_postprocessors)
       42    0.000    0.000    0.000    0.000 traceback.py:458(format_frame_summary)
       30    0.000    0.000    0.000    0.000 utils.py:104(__init__)
        1    0.000    0.000    0.000    0.000 abc.py:56(Traversable)
        1    0.000    0.000    0.000    0.000 _color_data.py:995(<dictcomp>)
        1    0.000    0.000    0.000    0.000 conditionset.py:1(<module>)
        5    0.000    0.000    0.000    0.000 decorator.py:75(__init__)
        1    0.000    0.000    0.000    0.000 _vmap_internals.py:1(<module>)
      113    0.000    0.000    0.000    0.000 typing.py:1926(_caller)
       21    0.000    0.000    0.000    0.000 deprecation.py:178(finalize)
        1    0.000    0.000    0.000    0.000 _creation.py:1(<module>)
      750    0.000    0.000    0.000    0.000 rcsetup.py:234(validator)
       40    0.000    0.000    0.000    0.000 rcsetup.py:51(__init__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1385(AnnotationBbox)
        1    0.000    0.000    0.000    0.000 _meta.py:7(PackageMetadata)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:67(_apply)
       17    0.000    0.000    0.000    0.000 __init__.py:416(by_key)
       93    0.000    0.000    0.000    0.000 typing.py:277(_unpack_args)
      544    0.000    0.000    0.000    0.000 registration.py:76(set_base)
       52    0.000    0.000    0.000    0.000 singleton.py:131(__getattr__)
       19    0.000    0.000    0.000    0.000 deprecation.py:372(<listcomp>)
     1534    0.000    0.000    0.000    0.000 {method 'isupper' of 'str' objects}
      129    0.000    0.000    0.000    0.000 dataclasses.py:593(<listcomp>)
        1    0.000    0.000    0.000    0.000 legend_handler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adam.py:1(<module>)
        1    0.000    0.000    0.000    0.000 exprtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:6550(__new__)
        1    0.000    0.000    0.000    0.000 shlex.py:1(<module>)
       28    0.000    0.000    0.000    0.000 inspect.py:2248(p)
       93    0.000    0.000    0.000    0.000 inspect.py:2080(_signature_is_functionlike)
        5    0.000    0.000    0.000    0.000 core.py:1485(__radd__)
     1326    0.000    0.000    0.000    0.000 _builtins.py:124(_is_special_functional_bound_op)
        1    0.000    0.000    0.000    0.000 meijerint.py:1(<module>)
       39    0.000    0.000    0.000    0.000 inspect.py:391(_has_code_flag)
        2    0.000    0.000    0.000    0.000 getlimits.py:540(_init)
       20    0.000    0.000    0.000    0.000 colors.py:929(reversed)
        1    0.000    0.000    0.000    0.000 _cubic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fnmatch.py:48(filter)
      117    0.000    0.000    0.000    0.000 __init__.py:321(filter)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
       58    0.000    0.000    0.000    0.000 _utils.py:779(classproperty)
      367    0.000    0.000    0.000    0.000 permutations.py:381(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'topk' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:2306(_make_var_reduction_prim)
        9    0.000    0.000    0.000    0.000 deprecation.py:435(<listcomp>)
       40    0.000    0.000    0.000    0.000 colors.py:889(__init__)
        8    0.000    0.000    0.000    0.000 symbol.py:393(__xnew_cached_)
        7    0.000    0.000    0.000    0.000 ops.py:140(<listcomp>)
      582    0.000    0.000    0.000    0.000 __init__.py:422(<genexpr>)
        1    0.000    0.000    0.000    0.000 radau.py:1(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:226(_from_iter)
       71    0.000    0.000    0.000    0.000 enum.py:345(__init__)
      163    0.000    0.000    0.000    0.000 function.py:149(<listcomp>)
       13    0.000    0.000    0.000    0.000 core.py:8394(getdoc)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2177(sum)
      865    0.000    0.000    0.000    0.000 dataclasses.py:375(<genexpr>)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:120(<dictcomp>)
       13    0.000    0.000    0.000    0.000 {built-in method torch._C._dispatch_library}
       18    0.000    0.000    0.000    0.000 __init__.py:811(mtime)
       16    0.000    0.000    0.000    0.000 tokenize.py:408(tokenize)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:480(broadcast_arrays)
      108    0.000    0.000    0.000    0.000 iterables.py:3025(iterable)
        1    0.000    0.000    0.000    0.000 _trace.py:566(ignore_lib_warnings)
       19    0.000    0.000    0.000    0.000 _continuous_distns.py:59(_call_super_mom)
        1    0.000    0.000    0.000    0.000 flatten.py:54(Unflatten)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1018(<listcomp>)
        1    0.000    0.000    0.000    0.000 _polybase.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nvfuser_prims.py:526(register_native_batch_norm)
       23    0.000    0.000    0.000    0.000 symbolic_shapes.py:699(_make_node_magic)
       14    0.000    0.000    0.000    0.000 pathlib.py:530(_make_child)
      635    0.000    0.000    0.000    0.000 typing.py:729(<genexpr>)
        1    0.000    0.000    0.000    0.000 series_class.py:1(<module>)
      306    0.000    0.000    0.000    0.000 rcsetup.py:1043(_convert_validator_spec)
      494    0.000    0.000    0.000    0.000 _compiler.py:31(_combine_flags)
      109    0.000    0.000    0.000    0.000 inspect.py:310(ismethoddescriptor)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:15(_init_logger)
        1    0.000    0.000    0.000    0.000 adaptive.py:1(<module>)
        3    0.000    0.000    0.000    0.000 embedding_ops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:75(TensorKey)
        1    0.000    0.000    0.000    0.000 prufer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _vertex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 container.py:250(ModuleList)
        1    0.000    0.000    0.000    0.000 gruntz.py:1(<module>)
       43    0.000    0.000    0.000    0.000 core.py:3157(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1254(_direct)
      126    0.000    0.000    0.000    0.000 colors.py:704(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method torch.randn}
       17    0.000    0.000    0.000    0.000 ctx_iv.py:407(_mpq)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:393(DataFlowNode)
        8    0.000    0.000    0.000    0.000 deprecation.py:231(wrapper)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:1(<module>)
       40    0.000    0.000    0.000    0.000 getlimits.py:91(_float_to_float)
        1    0.000    0.000    0.000    0.000 wishart.py:1(<module>)
       19    0.000    0.000    0.000    0.000 pythonmpq.py:57(__new__)
      255    0.000    0.000    0.000    0.000 traversal.py:12(iterargs)
      426    0.000    0.000    0.000    0.000 {method 'finditer' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 profiler.py:306(profile)
        1    0.000    0.000    0.000    0.000 curve.py:1(<module>)
       26    0.000    0.000    0.000    0.000 pretty_symbology.py:117(<lambda>)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:324(_init_builtins)
        1    0.000    0.000    0.000    0.000 animation.py:408(FileMovieWriter)
        1    0.000    0.000    0.000    0.000 powerset.py:1(<module>)
       18    0.000    0.000    0.000    0.000 core.py:997(__init__)
        3    0.000    0.000    0.000    0.000 autocast_mode.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2894(icdf)
        7    0.000    0.000    0.000    0.000 __init__.py:72(CFUNCTYPE)
        1    0.000    0.000    0.000    0.000 configparser.py:376(BasicInterpolation)
        1    0.000    0.000    0.000    0.000 fnmatch.py:38(_compile_pattern)
       20    0.000    0.000    0.000    0.000 numbers.py:3314(__eq__)
        1    0.000    0.000    0.000    0.000 parabola.py:1(<module>)
    52/46    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1320(__len__)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:2812(ArrowStyle)
      162    0.000    0.000    0.000    0.000 core.py:2446(__new__)
      386    0.000    0.000    0.000    0.000 inspect.py:283(ismodule)
        1    0.000    0.000    0.000    0.000 _parser.py:58(_timelex)
        3    0.000    0.000    0.000    0.000 __init__.py:801(zip_children)
        1    0.000    0.000    0.000    0.000 common.py:432(<listcomp>)
      871    0.000    0.000    0.000    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 configparser.py:522(LegacyInterpolation)
     1080    0.000    0.000    0.000    0.000 inspect.py:729(getmro)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1249(wrapped)
        3    0.000    0.000    0.000    0.000 arrayprint.py:780(_formatArray)
        1    0.000    0.000    0.000    0.000 trace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combinatorics.py:17(SamplerIterDataPipe)
     1269    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 backend_managers.py:39(ToolManager)
        1    0.000    0.000    0.000    0.000 resolver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:802(QMCEngine)
        1    0.000    0.000    0.000    0.000 contains.py:1(<module>)
       18    0.000    0.000    0.000    0.000 _static.py:27(_prevent_modification)
       68    0.000    0.000    0.000    0.000 pickletools.py:1124(__init__)
        4    0.000    0.000    0.000    0.000 module.py:437(__init__)
        1    0.000    0.000    0.000    0.000 graycode.py:1(<module>)
     1282    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
      237    0.000    0.000    0.000    0.000 pydoc.py:155(_getowndoc)
       42    0.000    0.000    0.000    0.000 results.py:573(copy)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:634(MemoryProfile)
        4    0.000    0.000    0.000    0.000 _miobase.py:134(convert_dtypes)
      871    0.000    0.000    0.000    0.000 conflict.py:67(<listcomp>)
        1    0.000    0.000    0.000    0.000 axes3d.py:44(Axes3D)
      786    0.000    0.000    0.000    0.000 utils.py:45(<genexpr>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2318(integrand)
        1    0.000    0.000    0.000    0.000 polar.py:776(PolarAxes)
      194    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1283(_find_parent_path_names)
        1    0.000    0.000    0.000    0.000 jit_utils.py:22(GraphContext)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 immutable_collections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dotproduct.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method torch.gather}
        1    0.000    0.000    0.000    0.000 backend_registry.py:56(register_backend)
        1    0.000    0.000    0.000    0.000 helpers.py:1084(<listcomp>)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1863(Glue)
        9    0.000    0.000    0.000    0.000 textwrap.py:470(indent)
      130    0.000    0.000    0.000    0.000 <frozen abc>:146(update_abstractmethods)
        1    0.000    0.000    0.000    0.000 rcsetup.py:96(<listcomp>)
       12    0.000    0.000    0.000    0.000 doccer.py:161(_doc)
      544    0.000    0.000    0.000    0.000 registration.py:71(__init__)
        1    0.000    0.000    0.000    0.000 solveset.py:1(<module>)
      432    0.000    0.000    0.000    0.000 colors.py:224(<genexpr>)
        7    0.000    0.000    0.000    0.000 numeric.py:1393(moveaxis)
        2    0.000    0.000    0.000    0.000 windows.py:1(<module>)
       40    0.000    0.000    0.000    0.000 rcsetup.py:63(<dictcomp>)
     15/3    0.000    0.000    0.000    0.000 arrayprint.py:789(recurser)
        4    0.000    0.000    0.000    0.000 feedparser.py:101(push)
        1    0.000    0.000    0.000    0.000 _interface.py:1(<module>)
     1297    0.000    0.000    0.000    0.000 permutations.py:1613(__iter__)
        1    0.000    0.000    0.000    0.000 legend.py:269(Legend)
        1    0.000    0.000    0.000    0.000 backend_agg.py:71(RendererAgg)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:913(_set_invalid_nan)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._dist_autograd_init}
      151    0.000    0.000    0.000    0.000 libintmath.py:353(ifac)
        3    0.000    0.000    0.000    0.000 zipfile.py:2370(__init__)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:45(GradScaler)
        1    0.000    0.000    0.000    0.000 core.py:141(MaskedTensor)
        1    0.000    0.000    0.000    0.000 mul.py:91(Mul)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:86(DomainMatrix)
        1    0.000    0.000    0.000    0.000 bezier.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:108(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 _basic.py:33(<dictcomp>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:1044(<listcomp>)
     1185    0.000    0.000    0.000    0.000 enum.py:1125(__init__)
       12    0.000    0.000    0.000    0.000 datetime.py:592(__new__)
        1    0.000    0.000    0.000    0.000 _iotools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:593(CategoryElement)
        1    0.000    0.000    0.000    0.000 groups.py:316(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:94(_add_aliases)
       19    0.000    0.000    0.000    0.000 __init__.py:2271(_check_shape)
        1    0.000    0.000    0.000    0.000 _data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:361(LightSource)
        1    0.000    0.000    0.000    0.000 mathematica.py:1(<module>)
      138    0.000    0.000    0.000    0.000 {built-in method builtins.round}
        1    0.000    0.000    0.000    0.000 kl.py:818(_add_kl_info)
        1    0.000    0.000    0.000    0.000 _recursive.py:354(ConcreteTypeStore)
      416    0.000    0.000    0.000    0.000 typing.py:1667(__eq__)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:899(_nsum_iv)
        1    0.000    0.000    0.000    0.000 spines.py:1(<module>)
        2    0.000    0.000    0.000    0.000 bn_relu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:1(<module>)
        1    0.000    0.000    0.000    0.000 hooks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _collections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:582(_ReducedHCT_Element)
        1    0.000    0.000    0.000    0.000 unicode.py:123(pyparsing_unicode)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:149(Backend)
        1    0.000    0.000    0.000    0.000 _multivariate.py:394(__init__)
        2    0.000    0.000    0.000    0.000 dropout.py:1(<module>)
        2    0.000    0.000    0.000    0.000 mixins.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:15(ExpressionDomain)
        1    0.000    0.000    0.000    0.000 _covariance.py:1(<module>)
        3    0.000    0.000    0.000    0.000 feedparser.py:184(close)
        1    0.000    0.000    0.000    0.000 storage.py:18(_StorageBase)
      865    0.000    0.000    0.000    0.000 dataclasses.py:1102(<genexpr>)
        1    0.000    0.000    0.000    0.000 _bsr.py:1(<module>)
        5    0.000    0.000    0.000    0.000 core.py:589(_setResultsName)
      158    0.000    0.000    0.000    0.000 typing.py:1800(<genexpr>)
        1    0.000    0.000    0.000    0.000 configparser.py:448(ExtendedInterpolation)
        1    0.000    0.000    0.000    0.000 von_mises.py:1(<module>)
        5    0.000    0.000    0.000    0.000 core.py:6040(__add__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:121(RendererBase)
        1    0.000    0.000    0.000    0.000 _exceptions.py:1(<module>)
       64    0.000    0.000    0.000    0.000 wrappers.py:294(BackwardsNotSupported)
        1    0.000    0.000    0.000    0.000 profiler.py:47(_KinetoProfile)
     1790    0.000    0.000    0.000    0.000 __init__.py:785(<lambda>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:187(_init_dependencies_order)
        6    0.000    0.000    0.000    0.000 _codata.py:2045(replace_exact)
        4    0.000    0.000    0.000    0.000 enum.py:1357(_missing_)
       27    0.000    0.000    0.000    0.000 singleton.py:125(register)
      566    0.000    0.000    0.000    0.000 _compiler.py:426(_get_iscased)
        9    0.000    0.000    0.000    0.000 _util.py:981(decorator)
       15    0.000    0.000    0.000    0.000 _bunch.py:5(_validate_names)
        1    0.000    0.000    0.000    0.000 numbers.py:329(tribonacci)
      166    0.000    0.000    0.000    0.000 pathlib.py:239(splitroot)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:585(__init__)
       23    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:593(__init__)
        1    0.000    0.000    0.000    0.000 _coo.py:1(<module>)
       34    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2382(mean)
     1002    0.000    0.000    0.000    0.000 enum.py:230(__init__)
     1616    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        1    0.000    0.000    0.000    0.000 tricontour.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parameter.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dirichlet.py:1(<module>)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1660(ElementType)
      682    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
       10    0.000    0.000    0.000    0.000 version.py:52(__init__)
        5    0.000    0.000    0.000    0.000 backend_bases.py:1580(_check_savefig_extra_args)
       32    0.000    0.000    0.000    0.000 basic.py:2128(<setcomp>)
        3    0.000    0.000    0.000    0.000 zipfile.py:2251(make)
       54    0.000    0.000    0.000    0.000 typing.py:1496(__mro_entries__)
        2    0.000    0.000    0.000    0.000 typing.py:1556(__or__)
       16    0.000    0.000    0.000    0.000 arraypad.py:86(_pad_simple)
        1    0.000    0.000    0.000    0.000 analyzer.py:1018(PointGroupAnalyzer)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:191(SchemaMatcher)
        1    0.000    0.000    0.000    0.000 gzip.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sequences.py:26(SeqBase)
        1    0.000    0.000    0.000    0.000 weak.py:1(<module>)
       43    0.000    0.000    0.000    0.000 symbolic_shapes.py:817(_make_user_magic)
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:1(<module>)
      166    0.000    0.000    0.000    0.000 colors.py:521(__init__)
        1    0.000    0.000    0.000    0.000 _rules.py:382(_POERules)
        1    0.000    0.000    0.000    0.000 monomials.py:387(MonomialOps)
      513    0.000    0.000    0.000    0.000 {method 'items' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 quoprimime.py:1(<module>)
       62    0.000    0.000    0.000    0.000 rational.py:31(__new__)
        1    0.000    0.000    0.000    0.000 _dok.py:1(<module>)
       34    0.000    0.000    0.000    0.000 tokenize.py:329(find_cookie)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:181(SymNode)
       18    0.000    0.000    0.000    0.000 __init__.py:844(search)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:1(<module>)
      191    0.000    0.000    0.000    0.000 <frozen abc>:7(abstractmethod)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3206(_moment_central)
       92    0.000    0.000    0.000    0.000 _collections.py:20(__missing__)
      117    0.000    0.000    0.000    0.000 _parser.py:1090(expand_template)
        1    0.000    0.000    0.000    0.000 configparser.py:1325(ConverterMapping)
        1    0.000    0.000    0.000    0.000 core.py:52(Orbital)
      307    0.000    0.000    0.000    0.000 __init__.py:722(__iter__)
        1    0.000    0.000    0.000    0.000 _legacy.py:1(<module>)
        2    0.000    0.000    0.000    0.000 extension.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unicode.py:85(identchars)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2979(prod)
       83    0.000    0.000    0.000    0.000 linecache.py:147(lazycache)
        1    0.000    0.000    0.000    0.000 fu.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1339(_generate_domain_support)
        1    0.000    0.000    0.000    0.000 _fir_filter_design.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combinatorics.py:14(ShufflerIterDataPipe)
        1    0.000    0.000    0.000    0.000 transformer.py:17(Transformer)
       54    0.000    0.000    0.000    0.000 <frozen codecs>:309(__init__)
      147    0.000    0.000    0.000    0.000 TiffTags.py:35(__new__)
        1    0.000    0.000    0.000    0.000 _adapters.py:8(Message)
        1    0.000    0.000    0.000    0.000 fake_utils.py:1(<module>)
      694    0.000    0.000    0.000    0.000 boolalg.py:480(<lambda>)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2007(_validate_order_kind)
       26    0.000    0.000    0.000    0.000 _basic.py:33(<listcomp>)
        1    0.000    0.000    0.000    0.000 adam.py:13(Adam)
        2    0.000    0.000    0.000    0.000 _basic.py:3190(factorial2)
        1    0.000    0.000    0.000    0.000 sampler.py:210(BatchSampler)
        1    0.000    0.000    0.000    0.000 mathtext.py:219(MathtextBackendPs)
      261    0.000    0.000    0.000    0.000 dispatcher.py:204(<genexpr>)
        1    0.000    0.000    0.000    0.000 glob.py:175(_listdir)
        1    0.000    0.000    0.000    0.000 _csc.py:1(<module>)
        5    0.000    0.000    0.000    0.000 random.py:119(__init__)
    27/23    0.000    0.000    0.000    0.000 basic.py:366(compare)
       16    0.000    0.000    0.000    0.000 _internal.py:32(wrapped_f)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4994(__init__)
       34    0.000    0.000    0.000    0.000 libmpf.py:491(from_rational)
        1    0.000    0.000    0.000    0.000 _polyint.py:1(<module>)
        2    0.000    0.000    0.000    0.000 conv_relu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:740(_code_to_timestamp_pyc)
       11    0.000    0.000    0.000    0.000 fractions.py:62(__new__)
        1    0.000    0.000    0.000    0.000 lazy.py:1(<module>)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2249(_support)
        1    0.000    0.000    0.000    0.000 glob_group.py:1(<module>)
       26    0.000    0.000    0.000    0.000 {built-in method torch._C.call_stack}
       21    0.000    0.000    0.000    0.000 domain.py:379(__call__)
       41    0.000    0.000    0.000    0.000 deprecation.py:365(<genexpr>)
        1    0.000    0.000    0.000    0.000 repr.py:1(<module>)
      216    0.000    0.000    0.000    0.000 typing.py:1389(<genexpr>)
       15    0.000    0.000    0.000    0.000 decorator.py:170(depends_on_deco)
        1    0.000    0.000    0.000    0.000 pyplot.py:2172(<listcomp>)
        1    0.000    0.000    0.000    0.000 records.py:1(<module>)
       21    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1118(_dispatch)
        1    0.000    0.000    0.000    0.000 dos.py:644(CompleteDos)
        1    0.000    0.000    0.000    0.000 transports.py:1(<module>)
       92    0.000    0.000    0.000    0.000 permutations.py:463(size)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2785(NavigationToolbar2)
      114    0.000    0.000    0.000    0.000 textwrap.py:482(prefixed_lines)
       48    0.000    0.000    0.000    0.000 pretty_symbology.py:101(<lambda>)
        1    0.000    0.000    0.000    0.000 routeddecoder.py:17(RoutedDecoderIterDataPipe)
        1    0.000    0.000    0.000    0.000 unicode.py:99(identbodychars)
       44    0.000    0.000    0.000    0.000 core.py:4124(<genexpr>)
        1    0.000    0.000    0.000    0.000 zetazeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 splitter_base.py:256(_SplitterBase)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:58(bitname)
        1    0.000    0.000    0.000    0.000 _base.py:85(_spbase)
       29    0.000    0.000    0.000    0.000 _array_api.py:576(<listcomp>)
        1    0.000    0.000    0.000    0.000 find_file_dependencies.py:7(_ExtractModuleReferences)
        1    0.000    0.000    0.000    0.000 ddm.py:102(DDM)
        1    0.000    0.000    0.000    0.000 streamplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4440(TruncatedDistribution)
        1    0.000    0.000    0.000    0.000 animation.py:96(MovieWriterRegistry)
        1    0.000    0.000    0.000    0.000 patches.py:1909(BoxStyle)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1128(__init__)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 _parser.py:1371(_tzparser)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1652(_avg_pool)
        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.FileIO' objects}
        1    0.000    0.000    0.000    0.000 fields.py:1(<module>)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1536(find_distributions)
        1    0.000    0.000    0.000    0.000 _endian.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 operations.py:415(inversion)
        6    0.000    0.000    0.000    0.000 ctx_iv.py:413(convert)
        8    0.000    0.000    0.000    0.000 typing.py:2345(<dictcomp>)
        1    0.000    0.000    0.000    0.000 structure.py:1006(IStructure)
        1    0.000    0.000    0.000    0.000 exponential.py:1108(LambertW)
        1    0.000    0.000    0.000    0.000 sdm.py:1(<module>)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:87(_apply)
        1    0.000    0.000    0.000    0.000 colors.py:97(<dictcomp>)
       20    0.000    0.000    0.000    0.000 mul.py:34(_mulsort)
        1    0.000    0.000    0.000    0.000 dumper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:166(ComplexRootOf)
        2    0.000    0.000    0.000    0.000 deprecation.py:1(<module>)
        2    0.000    0.000    0.000    0.000 helper.py:1(<module>)
       10    0.000    0.000    0.000    0.000 _text.py:79(__hash__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3267(__init__)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:1(<module>)
       58    0.000    0.000    0.000    0.000 core.py:1922(set_name)
       34    0.000    0.000    0.000    0.000 operations.py:118(_from_args)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:29(_nonzero_schemas)
        1    0.000    0.000    0.000    0.000 spines.py:11(Spine)
       49    0.000    0.000    0.000    0.000 _compiler.py:405(_generate_overlap_table)
        1    0.000    0.000    0.000    0.000 queues.py:1(<module>)
        1    0.000    0.000    0.000    0.000 package_importer.py:48(PackageImporter)
        1    0.000    0.000    0.000    0.000 histograms.py:1(<module>)
       99    0.000    0.000    0.000    0.000 traceback.py:389(extended_frame_gen)
       37    0.000    0.000    0.000    0.000 mul.py:494(<listcomp>)
        3    0.000    0.000    0.000    0.000 design_patterns.py:43(cached_class)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3161(rv_discrete)
      480    0.000    0.000    0.000    0.000 artist.py:1371(<genexpr>)
      135    0.000    0.000    0.000    0.000 containers.py:72(__iter__)
        1    0.000    0.000    0.000    0.000 distribution.py:10(Distribution)
        1    0.000    0.000    0.000    0.000 printer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bdist.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:90(<listcomp>)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1211(Rational)
      711    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
        1    0.000    0.000    0.000    0.000 polyclasses.py:138(DMP)
        1    0.000    0.000    0.000    0.000 exceptions.py:30(ParseBaseException)
       66    0.000    0.000    0.000    0.000 __init__.py:228(_acquireLock)
        4    0.000    0.000    0.000    0.000 _new_distributions.py:412(_icdf_formula)
        1    0.000    0.000    0.000    0.000 sampler.py:18(Sampler)
        3    0.000    0.000    0.000    0.000 zipfile.py:1242(__init__)
        1    0.000    0.000    0.000    0.000 conv.py:1195(LazyConv1d)
        4    0.000    0.000    0.000    0.000 _pep440.py:292(__init__)
        1    0.000    0.000    0.000    0.000 proxy.py:476(ParameterProxy)
        2    0.000    0.000    0.000    0.000 _basic.py:3035(_factorialx_wrapper)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:5241(__init__)
       90    0.000    0.000    0.000    0.000 _pytree.py:47(_register_pytree_node)
       95    0.000    0.000    0.000    0.000 permutations.py:1060(_hashable_content)
        1    0.000    0.000    0.000    0.000 hermite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:351(_sanity_check)
        6    0.000    0.000    0.000    0.000 numeric.py:2507(extend_all)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6108(__init__)
       26    0.000    0.000    0.000    0.000 pathlib.py:657(stem)
       12    0.000    0.000    0.000    0.000 polytools.py:69(_polifyit)
        1    0.000    0.000    0.000    0.000 emitter.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wishart.py:30(Wishart)
        1    0.000    0.000    0.000    0.000 optimization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset7.py:1(<module>)
        1    0.000    0.000    0.000    0.000 upsampling.py:11(Upsample)
        6    0.000    0.000    0.000    0.000 core.py:1737(__call__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:270(Uniform)
      160    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1220(__init__)
        1    0.000    0.000    0.000    0.000 rational.py:1(<module>)
       48    0.000    0.000    0.000    0.000 string.py:139(formula_double_format)
        1    0.000    0.000    0.000    0.000 mathtext.py:261(MathtextBackendPdf)
        4    0.000    0.000    0.000    0.000 random.py:128(seed)
      350    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.add_docstring}
       23    0.000    0.000    0.000    0.000 functools.py:841(_is_union_type)
        2    0.000    0.000    0.000    0.000 glob.py:141(_iterdir)
        1    0.000    0.000    0.000    0.000 core.py:2697(MaskedArray)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:757(__init_subclass__)
       87    0.000    0.000    0.000    0.000 utils.py:44(<dictcomp>)
      702    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
        9    0.000    0.000    0.000    0.000 pathlib.py:765(__truediv__)
        2    0.000    0.000    0.000    0.000 sysconfig.py:109(_getuserbase)
        1    0.000    0.000    0.000    0.000 _freeze.py:1(<module>)
       21    0.000    0.000    0.000    0.000 __init__.py:315(_subx)
        1    0.000    0.000    0.000    0.000 patches.py:3564(FancyBboxPatch)
        1    0.000    0.000    0.000    0.000 linear.py:9(Linear)
      544    0.000    0.000    0.000    0.000 registration.py:81(in_base)
       18    0.000    0.000    0.000    0.000 _compiler.py:389(_bytes_to_codes)
       15    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2223(support)
        8    0.000    0.000    0.000    0.000 kind.py:43(__new__)
        1    0.000    0.000    0.000    0.000 repmatrix.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 optimizer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 chebyshev.py:1(<module>)
       12    0.000    0.000    0.000    0.000 weakref.py:104(__init__)
        1    0.000    0.000    0.000    0.000 expr.py:266(__pow__)
        2    0.000    0.000    0.000    0.000 expressiondomain.py:26(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method marshal.dumps}
       16    0.000    0.000    0.000    0.000 sysconfig.py:244(_subst_vars)
        3    0.000    0.000    0.000    0.000 _adapters.py:49(<listcomp>)
       23    0.000    0.000    0.000    0.000 pythonmpq.py:103(_new)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1379(<listcomp>)
        1    0.000    0.000    0.000    0.000 getlimits.py:1(<module>)
        1    0.000    0.000    0.000    0.000 libelefun.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:666(<listcomp>)
        4    0.000    0.000    0.000    0.000 functools.py:861(<lambda>)
        1    0.000    0.000    0.000    0.000 _parser.py:1373(_result)
       16    0.000    0.000    0.000    0.000 {method 'uniform' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:119(ScalarFunction)
       21    0.000    0.000    0.000    0.000 domain.py:371(new)
      254    0.000    0.000    0.000    0.000 core.py:3902(<genexpr>)
        1    0.000    0.000    0.000    0.000 _secondary_axes.py:37(SecondaryAxis)
        1    0.000    0.000    0.000    0.000 doccer.py:1(<module>)
    18/17    0.000    0.000    0.000    0.000 typing.py:1474(__repr__)
        1    0.000    0.000    0.000    0.000 basic.py:156(Basic)
        2    0.000    0.000    0.000    0.000 _distributor_init.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<dictcomp>)
       10    0.000    0.000    0.000    0.000 __init__.py:216(_logged_cached)
        1    0.000    0.000    0.000    0.000 results.py:39(ParseResults)
      200    0.000    0.000    0.000    0.000 _ops.py:437(__hash__)
        1    0.000    0.000    0.000    0.000 systems.py:1(<module>)
      128    0.000    0.000    0.000    0.000 dataclasses.py:1053(<listcomp>)
        1    0.000    0.000    0.000    0.000 _compat_pickle.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3646(_logpxf_dispatch)
      224    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
       71    0.000    0.000    0.000    0.000 enum.py:945(_find_data_repr_)
        1    0.000    0.000    0.000    0.000 rnn.py:18(LSTMCell)
        1    0.000    0.000    0.000    0.000 orderings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _adapters.py:42(CompatibilityFiles)
        1    0.000    0.000    0.000    0.000 _state.py:1(<module>)
       38    0.000    0.000    0.000    0.000 assumptions.py:494(make_property)
        1    0.000    0.000    0.000    0.000 maple.py:1(<module>)
      841    0.000    0.000    0.000    0.000 inspect.py:2737(annotation)
       10    0.000    0.000    0.000    0.000 deprecation.py:83(wrap)
      213    0.000    0.000    0.000    0.000 ctx_iv.py:369(_wrap_specfun)
        1    0.000    0.000    0.000    0.000 core.py:3882(ParseExpression)
      748    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        2    0.000    0.000    0.000    0.000 typing.py:2962(TypedDict)
        6    0.000    0.000    0.000    0.000 abc.py:32(_register)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4391(__init__)
        1    0.000    0.000    0.000    0.000 decorators.py:236(_func)
        1    0.000    0.000    0.000    0.000 container.py:552(ParameterList)
      309    0.000    0.000    0.000    0.000 enum.py:220(__set_name__)
        1    0.000    0.000    0.000    0.000 interpreter.py:370(Transformer)
        1    0.000    0.000    0.000    0.000 _trigonometric_special.py:1(<module>)
      143    0.000    0.000    0.000    0.000 core.py:794(preParse)
        3    0.000    0.000    0.000    0.000 message.py:243(get_payload)
        1    0.000    0.000    0.000    0.000 accumulationbounds.py:14(AccumulationBounds)
        1    0.000    0.000    0.000    0.000 hooks.py:9(RemovableHandle)
        1    0.000    0.000    0.000    0.000 legendre.py:1(<module>)
       22    0.000    0.000    0.000    0.000 numbers.py:1811(__new__)
        1    0.000    0.000    0.000    0.000 _tukeylambda_stats.py:1(<module>)
      130    0.000    0.000    0.000    0.000 dataclasses.py:325(__init__)
        1    0.000    0.000    0.000    0.000 _guards.py:26(GuardSource)
        5    0.000    0.000    0.000    0.000 pathlib.py:757(joinpath)
        1    0.000    0.000    0.000    0.000 symbolic_opset14.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:107(FullHessianUpdateStrategy)
        4    0.000    0.000    0.000    0.000 ctx_iv.py:43(__new__)
        1    0.000    0.000    0.000    0.000 scale.py:204(LogTransform)
       72    0.000    0.000    0.000    0.000 util.py:113(set_)
        1    0.000    0.000    0.000    0.000 patches.py:1185(Arrow)
        3    0.000    0.000    0.000    0.000 patches.py:1885(<listcomp>)
        1    0.000    0.000    0.000    0.000 _sysconfigdata__linux_x86_64-linux-gnu.py:1(<module>)
       72    0.000    0.000    0.000    0.000 util.py:110(get)
       47    0.000    0.000    0.000    0.000 numbers.py:1927(__mul__)
       37    0.000    0.000    0.000    0.000 libmpf.py:950(mpf_div)
        1    0.000    0.000    0.000    0.000 swa_utils.py:1(<module>)
      257    0.000    0.000    0.000    0.000 typing.py:1661(_value_and_type_iter)
        1    0.000    0.000    0.000    0.000 laguerre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 free_groups.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:414(StreamContext)
      317    0.000    0.000    0.000    0.000 overrides.py:105(array_function_dispatch)
      212    0.000    0.000    0.000    0.000 transforms.py:1256(<genexpr>)
        4    0.000    0.000    0.000    0.000 typing.py:349(_tp_cache)
      107    0.000    0.000    0.000    0.000 rcsetup.py:65(__call__)
        5    0.000    0.000    0.000    0.000 matrices.py:749(__init__)
        1    0.000    0.000    0.000    0.000 _fuser.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fancysets.py:1386(CartesianComplexRegion)
        1    0.000    0.000    0.000    0.000 core.py:4667(ParseElementEnhance)
        1    0.000    0.000    0.000    0.000 assumptions_generated.py:1(<module>)
      576    0.000    0.000    0.000    0.000 {method '__init_subclass__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 spectral_norm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:1(<module>)
        2    0.000    0.000    0.000    0.000 version.py:47(parse)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:9(PythonRationalField)
        1    0.000    0.000    0.000    0.000 scalarint.py:1(<module>)
      729    0.000    0.000    0.000    0.000 conflict.py:63(<lambda>)
       16    0.000    0.000    0.000    0.000 __init__.py:150(__init__)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:3828(FancyArrowPatch)
       51    0.000    0.000    0.000    0.000 nvfuser_prims.py:144(_assert_nvfuser_op_exists)
        1    0.000    0.000    0.000    0.000 docstring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:209(_flat_list_to_DomainMatrix)
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.isSubtypeOf}
        1    0.000    0.000    0.000    0.000 cnf.py:1(<module>)
       15    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)
       62    0.000    0.000    0.000    0.000 rational.py:7(create_reduced)
        1    0.000    0.000    0.000    0.000 serialization.py:281(_open_zipfile_reader)
      129    0.000    0.000    0.000    0.000 dataclasses.py:1047(<listcomp>)
      777    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_iscased}
       40    0.000    0.000    0.000    0.000 getlimits.py:24(_fr1)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:649(__init__)
      149    0.000    0.000    0.000    0.000 _util.py:373(check_random_state)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:37(Category)
        1    0.000    0.000    0.000    0.000 __init__.py:437(_get_xdg_config_dir)
  277/275    0.000    0.000    0.000    0.000 results.py:176(__init__)
        1    0.000    0.000    0.000    0.000 logic.py:1(<module>)
      152    0.000    0.000    0.000    0.000 typing.py:456(__repr__)
        1    0.000    0.000    0.000    0.000 conv.py:272(Conv1d)
        8    0.000    0.000    0.000    0.000 core.py:5098(__init__)
      4/3    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 basic.py:2233(Atom)
      108    0.000    0.000    0.000    0.000 typing.py:1015(<genexpr>)
        1    0.000    0.000    0.000    0.000 streams.py:395(StreamReader)
       29    0.000    0.000    0.000    0.000 _array_api.py:571(<listcomp>)
      567    0.000    0.000    0.000    0.000 permutations.py:1184(size)
       23    0.000    0.000    0.000    0.000 rcsetup.py:347(validate_color_or_auto)
        1    0.000    0.000    0.000    0.000 para4tb.py:74(<listcomp>)
        1    0.000    0.000    0.000    0.000 importer.py:28(Importer)
        1    0.000    0.000    0.000    0.000 band_data_in.py:40(get_Kpoint)
        4    0.000    0.000    0.000    0.000 _script.py:265(__init__)
      127    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
      377    0.000    0.000    0.000    0.000 enum.py:779(<genexpr>)
        1    0.000    0.000    0.000    0.000 pooling.py:257(MaxUnpool1d)
       93    0.000    0.000    0.000    0.000 _script.py:897(<lambda>)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:169(FakeTensorConverter)
        1    0.000    0.000    0.000    0.000 _guards.py:318(TracingContext)
        1    0.000    0.000    0.000    0.000 _dataclass_impls.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv_add.py:1(<module>)
        3    0.000    0.000    0.000    0.000 blas.py:395(getter)
       15    0.000    0.000    0.000    0.000 <frozen _collections_abc>:933(clear)
        1    0.000    0.000    0.000    0.000 core.py:5544(Forward)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:1(<module>)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _at.py:27(_AtOp)
        1    0.000    0.000    0.000    0.000 decorators.py:111(binary_op_wrapper)
    32/24    0.000    0.000    0.000    0.000 typing.py:2348(_strip_annotations)
        1    0.000    0.000    0.000    0.000 conv.py:182(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 sgd.py:1(<module>)
        9    0.000    0.000    0.000    0.000 numeric.py:136(ones)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:138(_family)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:255(WriteSubprocessPipeProto)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:6169(<listcomp>)
        1    0.000    0.000    0.000    0.000 futures.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:555(set_results_name)
        1    0.000    0.000    0.000    0.000 nodes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:125(Diagnostics)
        1    0.000    0.000    0.000    0.000 add.py:93(Add)
        1    0.000    0.000    0.000    0.000 libintmath.py:126(<listcomp>)
        3    0.000    0.000    0.000    0.000 __init__.py:893(find_distributions)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 functional_modules.py:1(<module>)
       40    0.000    0.000    0.000    0.000 _parser.py:256(getwhile)
        1    0.000    0.000    0.000    0.000 polar.py:111(PolarAffine)
        1    0.000    0.000    0.000    0.000 ellipse.py:41(Ellipse)
       62    0.000    0.000    0.000    0.000 __init__.py:26(__new__)
        1    0.000    0.000    0.000    0.000 core.py:2808(__new__)
        1    0.000    0.000    0.000    0.000 _fft.py:1(<module>)
        1    0.000    0.000    0.000    0.000 activation.py:889(MultiheadAttention)
       45    0.000    0.000    0.000    0.000 pathlib.py:523(_format_parsed_parts)
      682    0.000    0.000    0.000    0.000 {function RcParams.__getitem__ at 0x155271d22200}
        1    0.000    0.000    0.000    0.000 suite.py:328(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 __init__.py:979(ComplexFloatStorage)
        1    0.000    0.000    0.000    0.000 operator_support.py:37(OperatorSupport)
        1    0.000    0.000    0.000    0.000 rnn.py:32(RNNBase)
        1    0.000    0.000    0.000    0.000 _compression.py:1(<module>)
        4    0.000    0.000    0.000    0.000 typing.py:353(decorator)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1539(_max_pool)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:517(GaussianRationalField)
        1    0.000    0.000    0.000    0.000 testing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dlpack.py:10(DLDeviceType)
      130    0.000    0.000    0.000    0.000 dataclasses.py:376(<genexpr>)
        1    0.000    0.000    0.000    0.000 ask_generated.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polytools.py:4542(PurePoly)
        1    0.000    0.000    0.000    0.000 polyconfig.py:1(<module>)
        1    0.000    0.000    0.000    0.000 cse_main.py:1(<module>)
       37    0.000    0.000    0.000    0.000 numeric.py:1855(isscalar)
       58    0.000    0.000    0.000    0.000 results.py:454(__iadd__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2835(deprecated)
        1    0.000    0.000    0.000    0.000 expr.py:261(_pow)
       37    0.000    0.000    0.000    0.000 rcsetup.py:558(_validate_linestyle)
      208    0.000    0.000    0.000    0.000 inspect.py:946(<genexpr>)
       19    0.000    0.000    0.000    0.000 __init__.py:1281(_to_unmasked_float_array)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:397(_logpmf_formula)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:328(GaussianIntegerRing)
        6    0.000    0.000    0.000    0.000 constraints.py:192(__init__)
        3    0.000    0.000    0.000    0.000 monkey.py:44(get_unpatched)
        1    0.000    0.000    0.000    0.000 repmatrix.py:183(_dod_to_DomainMatrix)
        1    0.000    0.000    0.000    0.000 <frozen os>:44(_get_exports_list)
        1    0.000    0.000    0.000    0.000 representer.py:492(RoundTripRepresenter)
        1    0.000    0.000    0.000    0.000 _cm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polar.py:225(ThetaLocator)
        1    0.000    0.000    0.000    0.000 module.py:53(_WrappedHook)
        1    0.000    0.000    0.000    0.000 mixins.py:59(NDArrayOperatorsMixin)
        7    0.000    0.000    0.000    0.000 enum.py:1532(unique)
        2    0.000    0.000    0.000    0.000 __init__.py:305(_compile_repl)
        1    0.000    0.000    0.000    0.000 composition.py:38(Composition)
        1    0.000    0.000    0.000    0.000 _multicomp.py:25(DunnettResult)
        1    0.000    0.000    0.000    0.000 inputs.py:1182(KpointsSupportedModes)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1644(FigureCanvasBase)
        2    0.000    0.000    0.000    0.000 version.py:188(__init__)
        1    0.000    0.000    0.000    0.000 ordinals.py:56(Ordinal)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:1(<module>)
       28    0.000    0.000    0.000    0.000 ops.py:324(__getitem__)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:508(contains)
        8    0.000    0.000    0.000    0.000 core.py:4464(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 transforms.py:270(ComposeTransform)
      174    0.000    0.000    0.000    0.000 _docscrape.py:713(_should_skip_member)
        1    0.000    0.000    0.000    0.000 conv.py:103(Conv1d)
        1    0.000    0.000    0.000    0.000 transforms.py:213(BboxBase)
        1    0.000    0.000    0.000    0.000 ntheory.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pprint.py:1(<module>)
        4    0.000    0.000    0.000    0.000 {function Random.seed at 0x155355b258a0}
        1    0.000    0.000    0.000    0.000 _netcdf.py:1(<module>)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:367(broadcast_to)
        3    0.000    0.000    0.000    0.000 __init__.py:882(__init__)
        1    0.000    0.000    0.000    0.000 symbol.py:456(Dummy)
        9    0.000    0.000    0.000    0.000 warnings.py:165(simplefilter)
       14    0.000    0.000    0.000    0.000 numeric.py:1330(normalize_axis_tuple)
        1    0.000    0.000    0.000    0.000 numbers.py:281(Number)
       10    0.000    0.000    0.000    0.000 version.py:314(parse)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3269(round)
        2    0.000    0.000    0.000    0.000 _pep440.py:117(parse)
      250    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        7    0.000    0.000    0.000    0.000 dev.py:112(decorator)
        1    0.000    0.000    0.000    0.000 patches.py:4184(ConnectionPatch)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:410(ints)
        1    0.000    0.000    0.000    0.000 core.py:51(InputFile)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:13(DenseNDimArray)
        1    0.000    0.000    0.000    0.000 hb.py:414(HBFile)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:1(<module>)
    36/32    0.000    0.000    0.000    0.000 typing.py:224(_type_repr)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:199(ExprWithLimits)
       14    0.000    0.000    0.000    0.000 _infra.py:65(from_sarif)
        3    0.000    0.000    0.000    0.000 blas.py:422(get_blas_funcs)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2457(pdf)
    35/24    0.000    0.000    0.000    0.000 typing.py:371(_eval_type)
        1    0.000    0.000    0.000    0.000 selectors.py:341(_PollLikeSelector)
        1    0.000    0.000    0.000    0.000 fake_utils.py:48(CrossRefFakeMode)
        1    0.000    0.000    0.000    0.000 facts.py:380(FactRules)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:1(<module>)
        1    0.000    0.000    0.000    0.000 uniform.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sysconfig.py:118(joinuser)
        1    0.000    0.000    0.000    0.000 binomial.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cubic.py:378(Akima1DInterpolator)
      140    0.000    0.000    0.000    0.000 deprecation.py:112(deprecated)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:129(_max_pool)
        1    0.000    0.000    0.000    0.000 trigonometry.py:1(<module>)
        1    0.000    0.000    0.000    0.000 factorials.py:285(subfactorial)
        2    0.000    0.000    0.000    0.000 warnings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tzpath.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:748(FakeTensor)
        1    0.000    0.000    0.000    0.000 weight_norm.py:1(<module>)
       80    0.000    0.000    0.000    0.000 _sources.py:51(remove_prefix)
        1    0.000    0.000    0.000    0.000 tensor.py:1984(TensExpr)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor.py:17(ReportingDescriptor)
        1    0.000    0.000    0.000    0.000 grouping.py:144(GrouperIterDataPipe)
        1    0.000    0.000    0.000    0.000 _parser.py:569(__init__)
        2    0.000    0.000    0.000    0.000 optimizer.py:291(_patch_step_function)
        1    0.000    0.000    0.000    0.000 json.py:111(MSONable)
        1    0.000    0.000    0.000    0.000 filelist.py:1(<module>)
       76    0.000    0.000    0.000    0.000 signal.py:9(<lambda>)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2894(__call__)
        1    0.000    0.000    0.000    0.000 polysys.py:1(<module>)
       24    0.000    0.000    0.000    0.000 constructor.py:337(add_default_constructor)
        1    0.000    0.000    0.000    0.000 compositedomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 adamw.py:1(<module>)
       66    0.000    0.000    0.000    0.000 __init__.py:237(_releaseLock)
        1    0.000    0.000    0.000    0.000 patches.py:2376(ConnectionStyle)
      397    0.000    0.000    0.000    0.000 enum.py:1226(value)
        5    0.000    0.000    0.000    0.000 iterables.py:1948(has_variety)
        3    0.000    0.000    0.000    0.000 six.py:887(wrapper)
        8    0.000    0.000    0.000    0.000 deprecation.py:493(_suppress_matplotlib_deprecation_warning)
       68    0.000    0.000    0.000    0.000 _internal.py:38(<listcomp>)
        1    0.000    0.000    0.000    0.000 simplex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 einsumfunc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:1689(Locator)
      156    0.000    0.000    0.000    0.000 inspect.py:943(<genexpr>)
       40    0.000    0.000    0.000    0.000 numbers.py:780(__new__)
        1    0.000    0.000    0.000    0.000 categorical.py:1(<module>)
       55    0.000    0.000    0.000    0.000 numbers.py:3145(__hash__)
        1    0.000    0.000    0.000    0.000 lbfgs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1960(PoissonDisk)
        1    0.000    0.000    0.000    0.000 extrapolation.py:1(<module>)
        4    0.000    0.000    0.000    0.000 polynomial.py:1227(__init__)
       26    0.000    0.000    0.000    0.000 _decomp_lu.py:16(<listcomp>)
      212    0.000    0.000    0.000    0.000 transforms.py:1262(<genexpr>)
        2    0.000    0.000    0.000    0.000 multinomial.py:1(<module>)
        2    0.000    0.000    0.000    0.000 core.py:2978(__array_finalize__)
        1    0.000    0.000    0.000    0.000 _subplots.py:11(SubplotBase)
        2    0.000    0.000    0.000    0.000 twodim_base.py:158(eye)
        1    0.000    0.000    0.000    0.000 combining.py:56(ZipperMapDataPipe)
        1    0.000    0.000    0.000    0.000 threading.py:1402(__init__)
        1    0.000    0.000    0.000    0.000 readers.py:16(__init__)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:1(<module>)
        1    0.000    0.000    0.000    0.000 assumptions.py:220(_load_pre_generated_assumption_rules)
        2    0.000    0.000    0.000    0.000 init.py:1(<module>)
       59    0.000    0.000    0.000    0.000 _array_api.py:170(_asarray)
        1    0.000    0.000    0.000    0.000 puiseux.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parser.py:294(__init__)
       11    0.000    0.000    0.000    0.000 _tensor.py:31(_handle_torch_function_and_wrap_type_error_to_not_implemented)
        6    0.000    0.000    0.000    0.000 gzip.py:525(_add_read_data)
        3    0.000    0.000    0.000    0.000 {method 'integers' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 pathlib.py:857(Path)
        1    0.000    0.000    0.000    0.000 _bws_test.py:1(<module>)
       85    0.000    0.000    0.000    0.000 _parser.py:295(checkgroupname)
       30    0.000    0.000    0.000    0.000 warnings.py:466(__enter__)
       40    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
        1    0.000    0.000    0.000    0.000 _ndbspline.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wrappers.py:1(<module>)
      120    0.000    0.000    0.000    0.000 periodic_table.py:170(__getattr__)
        1    0.000    0.000    0.000    0.000 scale.py:263(LogScale)
        1    0.000    0.000    0.000    0.000 _contextlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 win.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _comparison.py:484(NumberPair)
       11    0.000    0.000    0.000    0.000 __init__.py:119(inplace_wrapper)
        1    0.000    0.000    0.000    0.000 numbers.py:419(bernoulli)
        1    0.000    0.000    0.000    0.000 pooling.py:735(FractionalMaxPool2d)
        2    0.000    0.000    0.000    0.000 log.py:1(<module>)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:340(_broadcast_to)
       23    0.000    0.000    0.000    0.000 stride_tricks.py:416(_broadcast_shape)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:35(IdentityFunction)
        1    0.000    0.000    0.000    0.000 _qmc.py:1609(Sobol)
       28    0.000    0.000    0.000    0.000 locale.py:678(getpreferredencoding)
        1    0.000    0.000    0.000    0.000 constants.py:31(_SendfileMode)
        3    0.000    0.000    0.000    0.000 monkey.py:54(get_unpatched_class)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataset.py:202(ConcatDataset)
        1    0.000    0.000    0.000    0.000 package_exporter.py:74(PackagingErrorReason)
        1    0.000    0.000    0.000    0.000 rationalfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _constraints.py:1(<module>)
        1    0.000    0.000    0.000    0.000 independent.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset15.py:1(<module>)
       65    0.000    0.000    0.000    0.000 core.py:4087(<listcomp>)
        1    0.000    0.000    0.000    0.000 _ksstats.py:1(<module>)
       13    0.000    0.000    0.000    0.000 sympy_parser.py:1239(<genexpr>)
        4    0.000    0.000    0.000    0.000 enum.py:1420(<listcomp>)
        1    0.000    0.000    0.000    0.000 polar.py:407(RadialLocator)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:14(Normal)
        1    0.000    0.000    0.000    0.000 single.py:1107(Liouville)
        6    0.000    0.000    0.000    0.000 core.py:5220(__init__)
        1    0.000    0.000    0.000    0.000 parametrize.py:69(ParametrizationList)
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 facts.py:474(_from_python)
        5    0.000    0.000    0.000    0.000 functools.py:188(total_ordering)
        1    0.000    0.000    0.000    0.000 _datasource.py:1(<module>)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 proxy.py:321(Proxy)
        1    0.000    0.000    0.000    0.000 datetime.py:1311(time)
       55    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        1    0.000    0.000    0.000    0.000 coreerrors.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:1(<module>)
        2    0.000    0.000    0.000    0.000 linear_fused.py:1(<module>)
      673    0.000    0.000    0.000    0.000 _beartype.py:34(_no_op_decorator)
        6    0.000    0.000    0.000    0.000 core.py:1146(__init__)
        1    0.000    0.000    0.000    0.000 split_utils.py:31(Component)
        4    0.000    0.000    0.000    0.000 typing_extensions.py:491(__init__)
        1    0.000    0.000    0.000    0.000 colorbar.py:1186(Colorbar)
        1    0.000    0.000    0.000    0.000 selecting.py:19(FilterIterDataPipe)
        1    0.000    0.000    0.000    0.000 fold.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _compatibility.py:1(<module>)
        1    0.000    0.000    0.000    0.000 response.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pooling.py:331(MaxUnpool2d)
        5    0.000    0.000    0.000    0.000 symbolic_shapes.py:858(_lru_cache)
       26    0.000    0.000    0.000    0.000 pathlib.py:877(_make_child_relpath)
        1    0.000    0.000    0.000    0.000 filelister.py:13(FileListerIterDataPipe)
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pooling.py:805(FractionalMaxPool3d)
        1    0.000    0.000    0.000    0.000 geometric.py:1(<module>)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:100(dtype_from_ctypes_type)
       16    0.000    0.000    0.000    0.000 arraypad.py:129(_set_pad_area)
       20    0.000    0.000    0.000    0.000 core.py:1030(reset_cache)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:1(<module>)
       10    0.000    0.000    0.000    0.000 typing_extensions.py:567(_get_protocol_attrs)
        8    0.000    0.000    0.000    0.000 {built-in method zlib.crc32}
        1    0.000    0.000    0.000    0.000 Image.py:138(Transpose)
       26    0.000    0.000    0.000    0.000 _sources.py:72(<listcomp>)
        3    0.000    0.000    0.000    0.000 core.py:1627(__xor__)
      130    0.000    0.000    0.000    0.000 core.py:1785(set_whitespace_chars)
        1    0.000    0.000    0.000    0.000 quadrature.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pydoc.py:1803(Helper)
        1    0.000    0.000    0.000    0.000 pooling.py:418(MaxUnpool3d)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:1(<module>)
      101    0.000    0.000    0.000    0.000 core.py:6161(_expanded)
        1    0.000    0.000    0.000    0.000 math2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datapipe.py:42(IterDataPipe)
        1    0.000    0.000    0.000    0.000 von_mises.py:70(VonMises)
        4    0.000    0.000    0.000    0.000 doccer.py:202(_doc)
       88    0.000    0.000    0.000    0.000 six.py:146(__init__)
       74    0.000    0.000    0.000    0.000 six.py:194(find_spec)
       27    0.000    0.000    0.000    0.000 functools.py:845(_is_valid_dispatch_type)
       19    0.000    0.000    0.000    0.000 path.py:193(_update_values)
        1    0.000    0.000    0.000    0.000 transforms.py:2038(IdentityTransform)
        3    0.000    0.000    0.000    0.000 __init__.py:906(_search_paths)
       26    0.000    0.000    0.000    0.000 _sources.py:75(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:1122(ELEMENTWISE_TYPE_PROMOTION_KIND)
       15    0.000    0.000    0.000    0.000 copyreg.py:113(_slotnames)
       12    0.000    0.000    0.000    0.000 matexpr.py:23(deco)
        1    0.000    0.000    0.000    0.000 octave.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1502(<listcomp>)
        1    0.000    0.000    0.000    0.000 lattice.py:38(Lattice)
        1    0.000    0.000    0.000    0.000 lines.py:200(Line2D)
       24    0.000    0.000    0.000    0.000 {built-in method _warnings.warn}
        1    0.000    0.000    0.000    0.000 symbolic_opset16.py:1(<module>)
       28    0.000    0.000    0.000    0.000 <frozen posixpath>:388(normpath)
      643    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_tolower}
        1    0.000    0.000    0.000    0.000 transforms.py:543(PowerTransform)
        1    0.000    0.000    0.000    0.000 cm.py:211(ScalarMappable)
        8    0.000    0.000    0.000    0.000 _ops.py:603(__getattr__)
        1    0.000    0.000    0.000    0.000 iterables.py:781(topological_sort)
      507    0.000    0.000    0.000    0.000 boolalg.py:440(__bool__)
       26    0.000    0.000    0.000    0.000 _util.py:188(_transition_to_rng)
        1    0.000    0.000    0.000    0.000 graph.py:131(saved_tensors_hooks)
        1    0.000    0.000    0.000    0.000 conv.py:180(Conv1d)
        3    0.000    0.000    0.000    0.000 blas.py:337(_get_funcs)
        1    0.000    0.000    0.000    0.000 logging_handlers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ImageColor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 glsl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _infra.py:13(Level)
      157    0.000    0.000    0.000    0.000 {built-in method torch._C.get}
        1    0.000    0.000    0.000    0.000 para4tb.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:154(UniformQuantizationObserverBase)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:1(<module>)
        2    0.000    0.000    0.000    0.000 cache.py:168(lazy_function)
       10    0.000    0.000    0.000    0.000 util.py:421(_inner)
       42    0.000    0.000    0.000    0.000 ctx_mp_python.py:336(__new__)
        1    0.000    0.000    0.000    0.000 trace_dependencies.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nadam.py:1(<module>)
       13    0.000    0.000    0.000    0.000 core.py:8406(_replace_return_type)
      252    0.000    0.000    0.000    0.000 rcsetup.py:58(func)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:24(<dictcomp>)
        1    0.000    0.000    0.000    0.000 adagrad.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _bvp.py:1(<module>)
        7    0.000    0.000    0.000    0.000 <frozen posixpath>:396(abspath)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:204(_LogUniform)
      144    0.000    0.000    0.000    0.000 core.py:2025(__hash__)
        1    0.000    0.000    0.000    0.000 numbers.py:594(Float)
        6    0.000    0.000    0.000    0.000 libmpf.py:410(from_float)
        1    0.000    0.000    0.000    0.000 conv.py:47(_ConvNd)
        5    0.000    0.000    0.000    0.000 _basic.py:3009(_is_subdtype)
       51    0.000    0.000    0.000    0.000 rcsetup.py:407(validate_fontsize)
        2    0.000    0.000    0.000    0.000 hypergeometric.py:1(<module>)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:18(autocast)
        1    0.000    0.000    0.000    0.000 umath.py:1(<module>)
       13    0.000    0.000    0.000    0.000 weakref.py:367(__init__)
        1    0.000    0.000    0.000    0.000 dist.py:77(Distribution)
        1    0.000    0.000    0.000    0.000 graph.py:275(CodeGen)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 evalf.py:1395(_create_evalf_table)
        1    0.000    0.000    0.000    0.000 conv.py:465(Conv3d)
       30    0.000    0.000    0.000    0.000 _array_api.py:523(<listcomp>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1078(StandardPsFonts)
        1    0.000    0.000    0.000    0.000 conv.py:156(Conv2d)
    18/17    0.000    0.000    0.000    0.000 typing.py:1480(<listcomp>)
        1    0.000    0.000    0.000    0.000 table.py:30(Cell)
        7    0.000    0.000    0.000    0.000 dev.py:80(deprecated_function_decorator)
        1    0.000    0.000    0.000    0.000 julia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quiver.py:195(QuiverKey)
      231    0.000    0.000    0.000    0.000 periodic_table.py:237(__hash__)
        1    0.000    0.000    0.000    0.000 _mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:1(<module>)
       13    0.000    0.000    0.000    0.000 enum.py:1347(_iter_member_by_def_)
        1    0.000    0.000    0.000    0.000 package_exporter.py:53(_ModuleProviderAction)
        1    0.000    0.000    0.000    0.000 _fortran.py:1(<module>)
       46    0.000    0.000    0.000    0.000 getlimits.py:101(_float_conv)
        1    0.000    0.000    0.000    0.000 conv.py:316(Conv2d)
        1    0.000    0.000    0.000    0.000 collections.py:1888(QuadMesh)
      130    0.000    0.000    0.000    0.000 unicode.py:105(<genexpr>)
        1    0.000    0.000    0.000    0.000 adamax.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _polyint.py:108(_reshape_yi)
        1    0.000    0.000    0.000    0.000 storage.py:318(TypedStorage)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:1(<module>)
        1    0.000    0.000    0.000    0.000 combining.py:313(DemultiplexerIterDataPipe)
       11    0.000    0.000    0.000    0.000 __init__.py:12(NewCls)
        1    0.000    0.000    0.000    0.000 _rules.py:22(_NodeMissingOnnxShapeInference)
        1    0.000    0.000    0.000    0.000 tensor.py:968(TensorIndexType)
        1    0.000    0.000    0.000    0.000 modularinteger.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rmsprop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scale.py:560(LogitScale)
        1    0.000    0.000    0.000    0.000 __init__.py:447(_get_xdg_cache_dir)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:65(_DTypeDictBase)
        2    0.000    0.000    0.000    0.000 _parser.py:997(parse_template)
        3    0.000    0.000    0.000    0.000 symbolic_opset10.py:240(_avg_pool)
      423    0.000    0.000    0.000    0.000 typing.py:2216(cast)
        1    0.000    0.000    0.000    0.000 quoprimime.py:55(<listcomp>)
       99    0.000    0.000    0.000    0.000 traceback.py:325(walk_stack)
        1    0.000    0.000    0.000    0.000 _factories.py:1(<module>)
        9    0.000    0.000    0.000    0.000 api.py:74(_require_initialized)
        1    0.000    0.000    0.000    0.000 extensions.py:1(<module>)
      110    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 symbol.py:212(Symbol)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:43(RuntimeTypeCheckState)
        1    0.000    0.000    0.000    0.000 registration.py:64(OverrideDict)
        1    0.000    0.000    0.000    0.000 libmpi.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ExifTags.py:341(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _pytree.py:114(TreeSpec)
        1    0.000    0.000    0.000    0.000 testing.py:17(pyparsing_test)
        1    0.000    0.000    0.000    0.000 asgd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 power.py:22(Pow)
        6    0.000    0.000    0.000    0.000 {method 'multinomial' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:1(<module>)
        1    0.000    0.000    0.000    0.000 registration.py:123(_SymbolicFunctionGroup)
        5    0.000    0.000    0.000    0.000 add.py:40(_addsort)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:1(<module>)
       15    0.000    0.000    0.000    0.000 arrayprint.py:989(<genexpr>)
      362    0.000    0.000    0.000    0.000 inspect.py:3028(return_annotation)
      109    0.000    0.000    0.000    0.000 inspect.py:505(isbuiltin)
        1    0.000    0.000    0.000    0.000 qs.py:1(<module>)
       11    0.000    0.000    0.000    0.000 __init__.py:1467(debug)
        1    0.000    0.000    0.000    0.000 protocols.py:1(<module>)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _path.py:1(<module>)
        7    0.000    0.000    0.000    0.000 decoder.py:284(__init__)
       30    0.000    0.000    0.000    0.000 core.py:4465(<genexpr>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2494(pmf)
        1    0.000    0.000    0.000    0.000 latex.py:142(LatexPrinter)
        5    0.000    0.000    0.000    0.000 version.py:70(__lt__)
        7    0.000    0.000    0.000    0.000 memoization.py:27(decorator)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2388(standard_deviation)
        1    0.000    0.000    0.000    0.000 spglib.py:84(DictInterface)
        1    0.000    0.000    0.000    0.000 polynomial.py:1472(Polynomial)
        1    0.000    0.000    0.000    0.000 cache.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:1(<module>)
      391    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 recipes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _version.py:20(get_versions)
       87    0.000    0.000    0.000    0.000 kl.py:41(register_kl)
        1    0.000    0.000    0.000    0.000 numbers.py:2986(Infinity)
        1    0.000    0.000    0.000    0.000 normal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _fftlog_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 structure.py:213(SiteCollection)
        1    0.000    0.000    0.000    0.000 report.py:1(<module>)
        7    0.000    0.000    0.000    0.000 symbolic_opset11.py:345(_interpolate)
        1    0.000    0.000    0.000    0.000 importtools.py:14(__sympy_debug)
        1    0.000    0.000    0.000    0.000 parametrizations.py:33(_OrthMaps)
        3    0.000    0.000    0.000    0.000 core.py:4241(__init__)
        4    0.000    0.000    0.000    0.000 typing.py:1520(__init__)
        1    0.000    0.000    0.000    0.000 _idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:31(Cursors)
        1    0.000    0.000    0.000    0.000 numbers.py:4474(_register_classes)
        1    0.000    0.000    0.000    0.000 patches.py:1551(Arc)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:1(<module>)
        1    0.000    0.000    0.000    0.000 plotgrid.py:1(<module>)
        1    0.000    0.000    0.000    0.000 powsimp.py:1(<module>)
        3    0.000    0.000    0.000    0.000 patches.py:1878(<listcomp>)
        1    0.000    0.000    0.000    0.000 graph.py:267(_PyTreeInfo)
        1    0.000    0.000    0.000    0.000 _globals.py:65(_CopyMode)
        1    0.000    0.000    0.000    0.000 pareto.py:1(<module>)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 arraypad.py:1(<module>)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matrices.py:1(<module>)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:422(spec_from_loader)
       85    0.000    0.000    0.000    0.000 typing.py:891(__hash__)
        6    0.000    0.000    0.000    0.000 {method 'permuted' of 'numpy.random._generator.Generator' objects}
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:863(__str__)
        2    0.000    0.000    0.000    0.000 traversal.py:1(<module>)
       50    0.000    0.000    0.000    0.000 sets.py:125(_infimum_key)
        1    0.000    0.000    0.000    0.000 radam.py:1(<module>)
        1    0.000    0.000    0.000    0.000 geo.py:252(AitoffAxes)
        1    0.000    0.000    0.000    0.000 scale.py:515(LogitTransform)
        1    0.000    0.000    0.000    0.000 conv.py:214(Conv3d)
       24    0.000    0.000    0.000    0.000 proxy.py:514(_scope)
        1    0.000    0.000    0.000    0.000 docstring.py:6(Substitution)
        1    0.000    0.000    0.000    0.000 _policybase.py:99(_extend_docstrings)
        1    0.000    0.000    0.000    0.000 polyconfig.py:52(configure)
       14    0.000    0.000    0.000    0.000 numerictypes.py:357(issubdtype)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bz2.py:97(close)
        1    0.000    0.000    0.000    0.000 gridspec.py:602(SubplotSpec)
        1    0.000    0.000    0.000    0.000 weak.py:79(WeakIdKeyDictionary)
        1    0.000    0.000    0.000    0.000 cauchy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gamma.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:47(Action)
        1    0.000    0.000    0.000    0.000 rprop.py:1(<module>)
      215    0.000    0.000    0.000    0.000 symbolic_helper.py:234(parse_args)
        1    0.000    0.000    0.000    0.000 numbers.py:3176(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 meta_utils.py:70(MetaConverter)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3145(_moment_raw)
       42    0.000    0.000    0.000    0.000 docstring.py:43(update)
        7    0.000    0.000    0.000    0.000 core.py:3633(__init__)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numeric.py:2123(identity)
        1    0.000    0.000    0.000    0.000 requirements.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rings.py:586(PolyElement)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:1(<module>)
        1    0.000    0.000    0.000    0.000 plane.py:27(<listcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method posix.scandir}
        1    0.000    0.000    0.000    0.000 ExifTags.py:352(IFD)
        1    0.000    0.000    0.000    0.000 _kdtree.py:206(KDTree)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:44(_bits_of)
      141    0.000    0.000    0.000    0.000 __init__.py:259(__iter__)
        1    0.000    0.000    0.000    0.000 studentT.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sslproto.py:19(SSLProtocolState)
       20    0.000    0.000    0.000    0.000 <frozen io>:60(__getattr__)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2692(max)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2029(InverseTrigonometricFunction)
        1    0.000    0.000    0.000    0.000 matplotlib.py:1(<module>)
        3    0.000    0.000    0.000    0.000 numbers.py:1306(__new__)
        1    0.000    0.000    0.000    0.000 const_fold.py:11(FoldedGraphModule)
        1    0.000    0.000    0.000    0.000 facts.py:411(__init__)
        1    0.000    0.000    0.000    0.000 _sf_error.py:1(<module>)
       43    0.000    0.000    0.000    0.000 pathlib.py:515(_from_parsed_parts)
        1    0.000    0.000    0.000    0.000 rcode.py:1(<module>)
      101    0.000    0.000    0.000    0.000 module.py:1618(remove_from)
        1    0.000    0.000    0.000    0.000 design_patterns.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:888(HistogramObserver)
        1    0.000    0.000    0.000    0.000 lll.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pycode.py:79(AbstractPythonCodePrinter)
       36    0.000    0.000    0.000    0.000 deprecation.py:192(_deprecated_property)
        1    0.000    0.000    0.000    0.000 core.py:3127(view)
        1    0.000    0.000    0.000    0.000 _result.py:28(Result)
        1    0.000    0.000    0.000    0.000 Image.py:158(Resampling)
      162    0.000    0.000    0.000    0.000 _compatibility.py:7(compatibility)
        1    0.000    0.000    0.000    0.000 _web_response.py:15(WebResponse)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4590(ShiftedScaledDistribution)
        3    0.000    0.000    0.000    0.000 core.py:1667(__invert__)
        1    0.000    0.000    0.000    0.000 lobpcg.py:1(<module>)
       12    0.000    0.000    0.000    0.000 __init__.py:1893(get_aliased_and_aliases)
        7    0.000    0.000    0.000    0.000 symbolic_helper.py:1064(_interpolate_helper)
        3    0.000    0.000    0.000    0.000 functools.py:651(cache)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 primes.py:1(<module>)
       25    0.000    0.000    0.000    0.000 pretty_symbology.py:133(<genexpr>)
        1    0.000    0.000    0.000    0.000 quant_type.py:9(QuantType)
        1    0.000    0.000    0.000    0.000 _web_request.py:15(WebRequest)
        1    0.000    0.000    0.000    0.000 _ir_utils.py:4(_InsertPoint)
        1    0.000    0.000    0.000    0.000 _comparison.py:430(BooleanPair)
        8    0.000    0.000    0.000    0.000 _aliases.py:89(asarray)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:516(ProxySymDispatchMode)
        1    0.000    0.000    0.000    0.000 _comparison.py:607(TensorLikePair)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:298(OpTree)
        1    0.000    0.000    0.000    0.000 fractionfield.py:1(<module>)
      169    0.000    0.000    0.000    0.000 contextlib.py:431(__exit__)
       30    0.000    0.000    0.000    0.000 _array_api.py:531(<listcomp>)
       10    0.000    0.000    0.000    0.000 basic.py:135(_get_postprocessors)
        2    0.000    0.000    0.000    0.000 _compression.py:39(__init__)
        1    0.000    0.000    0.000    0.000 ideals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:1(<module>)
       57    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 timeouts.py:18(_State)
        1    0.000    0.000    0.000    0.000 ufunclike.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tool_component.py:19(ToolComponent)
       62    0.000    0.000    0.000    0.000 __init__.py:202(_checkLevel)
        1    0.000    0.000    0.000    0.000 ctx_fp.py:12(FPContext)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        3    0.000    0.000    0.000    0.000 __init__.py:576(__init__)
       30    0.000    0.000    0.000    0.000 warnings.py:487(__exit__)
        1    0.000    0.000    0.000    0.000 recurr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1656(DraggableBase)
        7    0.000    0.000    0.000    0.000 _parser.py:309(_convert)
        1    0.000    0.000    0.000    0.000 sets.py:47(Set)
      377    0.000    0.000    0.000    0.000 enum.py:1221(name)
        3    0.000    0.000    0.000    0.000 core.py:2488(__init__)
        1    0.000    0.000    0.000    0.000 scale.py:431(SymmetricalLogScale)
        1    0.000    0.000    0.000    0.000 _spherical_bessel.py:1(<module>)
        8    0.000    0.000    0.000    0.000 core.py:1031(deprecation_wrapper)
        1    0.000    0.000    0.000    0.000 optimizer.py:262(profile_hook_step)
        1    0.000    0.000    0.000    0.000 serializer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'expand_as' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.000    0.000 core.py:39(OrbitalType)
        3    0.000    0.000    0.000    0.000 misc.py:1(<module>)
       12    0.000    0.000    0.000    0.000 misc.py:304(func_name)
        1    0.000    0.000    0.000    0.000 _polyint.py:53(__init__)
      120    0.000    0.000    0.000    0.000 _multiufuncs.py:43(<genexpr>)
        2    0.000    0.000    0.000    0.000 stubs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset17.py:1(<module>)
        1    0.000    0.000    0.000    0.000 padding.py:82(ConstantPad2d)
       83    0.000    0.000    0.000    0.000 traceback.py:264(__init__)
        1    0.000    0.000    0.000    0.000 rendezvous.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pretty.py:30(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 __init__.py:354(<listcomp>)
       10    0.000    0.000    0.000    0.000 getlimits.py:685(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:172(SDPBackend)
        1    0.000    0.000    0.000    0.000 ExifTags.py:344(Interop)
        3    0.000    0.000    0.000    0.000 monkey.py:26(_get_mro)
        4    0.000    0.000    0.000    0.000 ssl.py:461(__new__)
        1    0.000    0.000    0.000    0.000 rings.py:196(PolyRing)
        1    0.000    0.000    0.000    0.000 symbolic_opset18.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trifinder.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parallel_apply.py:1(<module>)
       14    0.000    0.000    0.000    0.000 rcsetup.py:623(validate_capstyle)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:772(create_module)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:17(_get_or_create_logger)
        1    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
        1    0.000    0.000    0.000    0.000 _monitor.py:1(<module>)
       93    0.000    0.000    0.000    0.000 sites.py:138(species)
        1    0.000    0.000    0.000    0.000 reductions.py:379(init_reductions)
      104    0.000    0.000    0.000    0.000 inspect.py:456(istraceback)
       16    0.000    0.000    0.000    0.000 __init__.py:62(_process_keys)
        2    0.000    0.000    0.000    0.000 lsoda.py:1(<module>)
       29    0.000    0.000    0.000    0.000 constraint_registry.py:106(<lambda>)
        1    0.000    0.000    0.000    0.000 sdm.py:25(SDM)
       48    0.000    0.000    0.000    0.000 lapack.py:908(backtickrepl)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1366(MouseButton)
       61    0.000    0.000    0.000    0.000 _inspect.py:144(<lambda>)
        5    0.000    0.000    0.000    0.000 version.py:334(_cmp)
        1    0.000    0.000    0.000    0.000 taskgroups.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _czt.py:1(<module>)
        1    0.000    0.000    0.000    0.000 groups.py:317(<dictcomp>)
        1    0.000    0.000    0.000    0.000 matcher_utils.py:50(SubgraphMatcher)
        1    0.000    0.000    0.000    0.000 inference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 spectrum.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:387(_WorldMeta)
       58    0.000    0.000    0.000    0.000 unary.py:158(_torch_inplace_unary)
        1    0.000    0.000    0.000    0.000 operations.py:29(AssocOp)
        3    0.000    0.000    0.000    0.000 core.py:5079(__init__)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:835(__iter__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:865(<listcomp>)
       91    0.000    0.000    0.000    0.000 dataclasses.py:604(<genexpr>)
        1    0.000    0.000    0.000    0.000 core.py:23(Spin)
       62    0.000    0.000    0.000    0.000 unary.py:149(_torch_unary)
        1    0.000    0.000    0.000    0.000 __init__.py:42(__sympy_debug)
        1    0.000    0.000    0.000    0.000 library.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3841(Format)
        1    0.000    0.000    0.000    0.000 _signal_api.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 _core_metadata.py:1(<module>)
       14    0.000    0.000    0.000    0.000 <frozen posixpath>:140(basename)
        1    0.000    0.000    0.000    0.000 _classes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 internal.py:23(RPCExecMode)
       87    0.000    0.000    0.000    0.000 kl.py:72(decorator)
        2    0.000    0.000    0.000    0.000 immutable_collections.py:18(_create_immutable_container)
        1    0.000    0.000    0.000    0.000 profiler.py:230(ProfilerAction)
        1    0.000    0.000    0.000    0.000 jscode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 order.py:11(Order)
        1    0.000    0.000    0.000    0.000 scale.py:541(LogisticTransform)
        2    0.000    0.000    0.000    0.000 __init__.py:653(get_arch_list)
        1    0.000    0.000    0.000    0.000 variable.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _polybase.py:18(ABCPolyBase)
        3    0.000    0.000    0.000    0.000 feedparser.py:139(__init__)
        1    0.000    0.000    0.000    0.000 _invocation.py:17(Invocation)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._init_names}
        1    0.000    0.000    0.000    0.000 _elffile.py:33(EMachine)
       13    0.000    0.000    0.000    0.000 fromnumeric.py:200(reshape)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2772(_Mode)
        1    0.000    0.000    0.000    0.000 rrule.py:1307(rruleset)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _run.py:30(Run)
       92    0.000    0.000    0.000    0.000 {built-in method math.log}
        3    0.000    0.000    0.000    0.000 TiffTags.py:450(<dictcomp>)
        2    0.000    0.000    0.000    0.000 signals.py:1(<module>)
       47    0.000    0.000    0.000    0.000 enum.py:1128(_generate_next_value_)
        1    0.000    0.000    0.000    0.000 jiterator.py:1(<module>)
       13    0.000    0.000    0.000    0.000 mixins.py:44(_numeric_methods)
        7    0.000    0.000    0.000    0.000 _legacy.py:15(deprecated)
      105    0.000    0.000    0.000    0.000 textwrap.py:479(predicate)
        1    0.000    0.000    0.000    0.000 mock.py:44(<setcomp>)
        1    0.000    0.000    0.000    0.000 poisson.py:1(<module>)
        1    0.000    0.000    0.000    0.000 preview.py:1(<module>)
        1    0.000    0.000    0.000    0.000 log_normal.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:1460(setLevel)
        1    0.000    0.000    0.000    0.000 combining.py:562(ZipperIterDataPipe)
       52    0.000    0.000    0.000    0.000 _add_newdocs.py:6754(refer_to_array_attribute)
       63    0.000    0.000    0.000    0.000 _axis_nan_policy.py:659(<listcomp>)
       38    0.000    0.000    0.000    0.000 constructor.py:321(add_constructor)
        6    0.000    0.000    0.000    0.000 <frozen posixpath>:117(splitext)
        1    0.000    0.000    0.000    0.000 profiler.py:446(record_function)
        1    0.000    0.000    0.000    0.000 core.py:2510(Keyword)
        1    0.000    0.000    0.000    0.000 profiler.py:820(KinetoStepTracker)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:888(Symbol)
       42    0.000    0.000    0.000    0.000 typing.py:1803(<genexpr>)
        1    0.000    0.000    0.000    0.000 _mstats_extras.py:1(<module>)
        1    0.000    0.000    0.000    0.000 weibull.py:1(<module>)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linalg.py:97(_determine_error_states)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:393(norm_gen)
        1    0.000    0.000    0.000    0.000 dates.py:589(DateFormatter)
        3    0.000    0.000    0.000    0.000 __init__.py:866(__init__)
        1    0.000    0.000    0.000    0.000 factortools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mio5.py:149(MatFile5Reader)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:433(broadcast_shapes)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:1(<module>)
      127    0.000    0.000    0.000    0.000 ssl.py:125(<lambda>)
       93    0.000    0.000    0.000    0.000 exceptions.py:49(__init__)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:464(__str__)
        1    0.000    0.000    0.000    0.000 widgets.py:672(TextBox)
        1    0.000    0.000    0.000    0.000 dop853_coefficients.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _cm_listed.py:2061(<dictcomp>)
        1    0.000    0.000    0.000    0.000 entity.py:67(<listcomp>)
       89    0.000    0.000    0.000    0.000 operations.py:73(<genexpr>)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:465(boolean_dispatch)
        1    0.000    0.000    0.000    0.000 docinfo.py:1(<module>)
       71    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        1    0.000    0.000    0.000    0.000 polygon.py:25(<listcomp>)
        1    0.000    0.000    0.000    0.000 Image.py:149(Transform)
        1    0.000    0.000    0.000    0.000 registration.py:202(SymbolicRegistry)
        6    0.000    0.000    0.000    0.000 symbolic_opset10.py:262(_interpolate)
        1    0.000    0.000    0.000    0.000 combining.py:362(_DemultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 _hook_iterator.py:8(_SnapshotState)
       47    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1103(_sanity_check)
        1    0.000    0.000    0.000    0.000 _mio4.py:316(MatFile4Reader)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1730(_adaptive_pool)
       23    0.000    0.000    0.000    0.000 qconfig.py:98(__new__)
        1    0.000    0.000    0.000    0.000 __init__.py:319(ELEMENTWISE_PRIM_TYPE_PROMOTION_KIND)
        2    0.000    0.000    0.000    0.000 rationaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:225(BackendConfig)
        2    0.000    0.000    0.000    0.000 dispatcher.py:46(ambiguity_register_error_ignore_dup)
        4    0.000    0.000    0.000    0.000 ctx_base.py:52(_init_aliases)
        9    0.000    0.000    0.000    0.000 typing.py:1639(__repr__)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2322(any)
        5    0.000    0.000    0.000    0.000 misc.py:181(debug_decorator)
        1    0.000    0.000    0.000    0.000 glob.py:111(_glob0)
        6    0.000    0.000    0.000    0.000 {built-in method torch._C._log_api_usage_once}
        2    0.000    0.000    0.000    0.000 polyclasses.py:146(__new__)
        3    0.000    0.000    0.000    0.000 symbolic_opset11.py:577(_avg_pool)
        6    0.000    0.000    0.000    0.000 bessel.py:893(assume_integer_order)
        3    0.000    0.000    0.000    0.000 numbers.py:1374(_new)
        1    0.000    0.000    0.000    0.000 padding.py:133(ConstantPad3d)
        1    0.000    0.000    0.000    0.000 core.py:6568(__array_finalize__)
      124    0.000    0.000    0.000    0.000 functions.py:85(defun)
        1    0.000    0.000    0.000    0.000 contour.py:670(ContourSet)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:138(__new__)
        6    0.000    0.000    0.000    0.000 gaussiandomains.py:23(__new__)
        1    0.000    0.000    0.000    0.000 compatibility.py:240(IPolys)
        1    0.000    0.000    0.000    0.000 base_events.py:387(BaseEventLoop)
       47    0.000    0.000    0.000    0.000 core.py:2501(parseImpl)
        1    0.000    0.000    0.000    0.000 __init__.py:456(<listcomp>)
        1    0.000    0.000    0.000    0.000 settings.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _translation_metadata.py:15(TranslationMetadata)
        3    0.000    0.000    0.000    0.000 __init__.py:36(__deprecate_private_class)
        8    0.000    0.000    0.000    0.000 resolver.py:131(add_implicit_resolver_base)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:3376(_unsupported_dropout)
       15    0.000    0.000    0.000    0.000 arrayprint.py:984(<genexpr>)
        1    0.000    0.000    0.000    0.000 distributed.py:148(_BufferCommHookLocation)
        1    0.000    0.000    0.000    0.000 pg_operation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:231(<listcomp>)
       38    0.000    0.000    0.000    0.000 getlimits.py:16(_fr0)
        1    0.000    0.000    0.000    0.000 bdist.py:48(bdist)
       55    0.000    0.000    0.000    0.000 numbers.py:546(__hash__)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _string_helpers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 getlimits.py:612(tiny)
       90    0.000    0.000    0.000    0.000 basic.py:938(_sorted_args)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:4792(_one_hidden_rnn)
        1    0.000    0.000    0.000    0.000 locks.py:439(_BarrierState)
       58    0.000    0.000    0.000    0.000 constraint_registry.py:87(register)
      127    0.000    0.000    0.000    0.000 ssl.py:135(<lambda>)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:1(<module>)
      127    0.000    0.000    0.000    0.000 ssl.py:140(<lambda>)
        1    0.000    0.000    0.000    0.000 para4band.py:14(Stiefel_Frame)
        1    0.000    0.000    0.000    0.000 patches.py:1242(FancyArrow)
       38    0.000    0.000    0.000    0.000 observer.py:77(_with_args)
      112    0.000    0.000    0.000    0.000 patches.py:1885(<genexpr>)
        1    0.000    0.000    0.000    0.000 reinplace.py:16(_ViewType)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11012(vonmises_gen)
       26    0.000    0.000    0.000    0.000 basic.py:88(_cmp_name)
        1    0.000    0.000    0.000    0.000 _lazy.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._multiprocessing_init}
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:604(CategoryDict)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:47(__new__)
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3153(_moment_raw_dispatch)
       28    0.000    0.000    0.000    0.000 typing_extensions.py:495(__setattr__)
      116    0.000    0.000    0.000    0.000 typing.py:1812(<genexpr>)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:1(<module>)
      104    0.000    0.000    0.000    0.000 inspect.py:466(isframe)
        1    0.000    0.000    0.000    0.000 outputs.py:205(Vasprun)
        1    0.000    0.000    0.000    0.000 _spectral.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:144(_check_size)
        1    0.000    0.000    0.000    0.000 fancysets.py:1440(PolarComplexRegion)
        1    0.000    0.000    0.000    0.000 _common.py:47(get_package)
        1    0.000    0.000    0.000    0.000 _binomtest.py:1(<module>)
      127    0.000    0.000    0.000    0.000 ssl.py:150(<lambda>)
      124    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        1    0.000    0.000    0.000    0.000 sparse_adam.py:7(SparseAdam)
        1    0.000    0.000    0.000    0.000 para4band.py:122(Para4Band_train)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1744(_broadcast)
        2    0.000    0.000    0.000    0.000 contextlib.py:77(__call__)
       11    0.000    0.000    0.000    0.000 __init__.py:1734(isEnabledFor)
       36    0.000    0.000    0.000    0.000 constraints.py:170(__init__)
      100    0.000    0.000    0.000    0.000 perm_groups.py:136(<genexpr>)
        1    0.000    0.000    0.000    0.000 quasirandom.py:1(<module>)
        2    0.000    0.000    0.000    0.000 calculus.py:1(<module>)
       95    0.000    0.000    0.000    0.000 iterables.py:2000(check)
        1    0.000    0.000    0.000    0.000 _mio5.py:817(MatFile5Writer)
      127    0.000    0.000    0.000    0.000 ssl.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 Image.py:527(Image)
      127    0.000    0.000    0.000    0.000 ssl.py:130(<lambda>)
        1    0.000    0.000    0.000    0.000 Image.py:177(Dither)
       12    0.000    0.000    0.000    0.000 weakref.py:289(update)
        1    0.000    0.000    0.000    0.000 geo.py:301(HammerAxes)
    54/46    0.000    0.000    0.000    0.000 fake_tensor.py:94(<genexpr>)
       13    0.000    0.000    0.000    0.000 {method 'random' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 _utils.py:46(EventKey)
       12    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        1    0.000    0.000    0.000    0.000 _threadsafety.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ecm.py:1(<module>)
        4    0.000    0.000    0.000    0.000 platform.py:1107(python_implementation)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:132(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:1(<module>)
      110    0.000    0.000    0.000    0.000 _internal.py:883(<genexpr>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2327(median)
        1    0.000    0.000    0.000    0.000 _external_properties.py:25(ExternalProperties)
        1    0.000    0.000    0.000    0.000 enumerative.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __future__.py:1(<module>)
        2    0.000    0.000    0.000    0.000 complexfield.py:81(dtype)
        1    0.000    0.000    0.000    0.000 geo.py:346(MollweideAxes)
        1    0.000    0.000    0.000    0.000 fetch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 domainscalar.py:1(<module>)
       41    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:83(<genexpr>)
        6    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
        5    0.000    0.000    0.000    0.000 transforms.py:242(make_wrapper)
        3    0.000    0.000    0.000    0.000 rcsetup.py:701(_validate_hinting)
        1    0.000    0.000    0.000    0.000 runners.py:15(_State)
        2    0.000    0.000    0.000    0.000 getlimits.py:307(_get_machar)
       12    0.000    0.000    0.000    0.000 arrayprint.py:1018(__call__)
        1    0.000    0.000    0.000    0.000 zeta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matpow.py:12(MatPow)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:601(__str__)
        2    0.000    0.000    0.000    0.000 __init__.py:386(__getattr__)
       12    0.000    0.000    0.000    0.000 arrayprint.py:753(_extendLine_pretty)
      134    0.000    0.000    0.000    0.000 wrappers.py:96(__init__)
       15    0.000    0.000    0.000    0.000 rcsetup.py:84(_listify_validator)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1770(Integer)
        1    0.000    0.000    0.000    0.000 transforms.py:1746(Affine2DBase)
        1    0.000    0.000    0.000    0.000 remote_device.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _index.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _guards.py:253(GuardsCheckpointState)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:211(_set_array_types)
        1    0.000    0.000    0.000    0.000 distributed.py:256(DistributedDataParallel)
        1    0.000    0.000    0.000    0.000 _morphology.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Image.py:190(Quantize)
        1    0.000    0.000    0.000    0.000 tritools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sslproto.py:27(AppProtocolState)
        1    0.000    0.000    0.000    0.000 combining.py:23(ConcaterIterDataPipe)
        1    0.000    0.000    0.000    0.000 lbfgs.py:184(LBFGS)
       93    0.000    0.000    0.000    0.000 composition.py:207(items)
        1    0.000    0.000    0.000    0.000 _miobase.py:351(MatFileReader)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:21(ReplacedPatterns)
        1    0.000    0.000    0.000    0.000 _location.py:19(Location)
        2    0.000    0.000    0.000    0.000 core.py:6744(__init__)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sharding.py:16(SHARDING_PRIORITIES)
        1    0.000    0.000    0.000    0.000 egyptian_fraction.py:1(<module>)
       28    0.000    0.000    0.000    0.000 core.py:17(__setattr__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2630(FigureManagerBase)
        1    0.000    0.000    0.000    0.000 geo.py:416(LambertAxes)
        1    0.000    0.000    0.000    0.000 patches.py:698(Rectangle)
        1    0.000    0.000    0.000    0.000 _ellip_harm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:57(pretty_try_use_unicode)
        1    0.000    0.000    0.000    0.000 combinatorics.py:54(ShufflerIterDataPipe)
        1    0.000    0.000    0.000    0.000 __init__.py:1131(REDUCTION_OUTPUT_TYPE_KIND)
        1    0.000    0.000    0.000    0.000 base_futures.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ellipse.py:38(<listcomp>)
       25    0.000    0.000    0.000    0.000 polyoptions.py:64(__init__)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.create_builtin}
        1    0.000    0.000    0.000    0.000 common.py:286(StreamWrapper)
       98    0.000    0.000    0.000    0.000 {method 'is_floating_point' of 'torch._C._TensorBase' objects}
       41    0.000    0.000    0.000    0.000 numbers.py:442(sort_key)
        2    0.000    0.000    0.000    0.000 getlimits.py:86(_str_smallest_subnormal)
        1    0.000    0.000    0.000    0.000 _VF.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:883(RegularPolygon)
        1    0.000    0.000    0.000    0.000 core.py:231(reload_library)
        1    0.000    0.000    0.000    0.000 libmpf.py:136(<listcomp>)
        1    0.000    0.000    0.000    0.000 combining.py:10(ConcaterMapDataPipe)
       28    0.000    0.000    0.000    0.000 {built-in method _locale.getencoding}
        1    0.000    0.000    0.000    0.000 datetime.py:2293(timezone)
        2    0.000    0.000    0.000    0.000 conflict.py:34(super_signature)
        1    0.000    0.000    0.000    0.000 decompositions.py:34(Reduction)
        4    0.000    0.000    0.000    0.000 {built-in method _ssl.txt2obj}
        1    0.000    0.000    0.000    0.000 line.py:47(<listcomp>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2584(atan)
        1    0.000    0.000    0.000    0.000 parametrizations.py:39(_Orthogonal)
        1    0.000    0.000    0.000    0.000 _polyint.py:116(_set_yi)
        1    0.000    0.000    0.000    0.000 glob.py:191(_lexists)
        1    0.000    0.000    0.000    0.000 helpers.py:692(OpAssoc)
        1    0.000    0.000    0.000    0.000 operations.py:575(AssocOpDispatcher)
        1    0.000    0.000    0.000    0.000 __init__.py:1076(__init__)
        1    0.000    0.000    0.000    0.000 negative_binomial.py:9(NegativeBinomial)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:107(Disposal)
        1    0.000    0.000    0.000    0.000 rszeta.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {built-in method _csv.register_dialect}
        1    0.000    0.000    0.000    0.000 grad_scaler.py:35(OptState)
      256    0.000    0.000    0.000    0.000 libintmath.py:62(python_trailing)
        1    0.000    0.000    0.000    0.000 tensor.py:2417(TensAdd)
        1    0.000    0.000    0.000    0.000 logistic_normal.py:1(<module>)
        4    0.000    0.000    0.000    0.000 getlimits.py:62(smallest_subnormal)
       49    0.000    0.000    0.000    0.000 core.py:2472(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 rnn.py:382(LSTM)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2345(mode)
        3    0.000    0.000    0.000    0.000 core.py:3727(__init__)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1019(<listcomp>)
       24    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.dragon4_positional}
        2    0.000    0.000    0.000    0.000 _delegators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _backend.py:51(set_global_backend)
       20    0.000    0.000    0.000    0.000 pkgutil.py:407(get_importer)
       49    0.000    0.000    0.000    0.000 results.py:215(__getitem__)
        1    0.000    0.000    0.000    0.000 __init__.py:154(_check_cubins)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:512(__div__)
        1    0.000    0.000    0.000    0.000 binomial.py:13(Binomial)
      116    0.000    0.000    0.000    0.000 typing.py:1814(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:707(beta_gen)
        2    0.000    0.000    0.000    0.000 __init__.py:912(createLock)
        1    0.000    0.000    0.000    0.000 __init__.py:264(_reset_cache)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:175(<lambda>)
        9    0.000    0.000    0.000    0.000 typing_extensions.py:776(runtime_checkable)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3643(_pxf_dispatch)
        2    0.000    0.000    0.000    0.000 fnmatch.py:74(translate)
        1    0.000    0.000    0.000    0.000 subscheck.py:1(<module>)
        1    0.000    0.000    0.000    0.000 distributed.py:13(DistributedSampler)
        1    0.000    0.000    0.000    0.000 _mode_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lowrank_multivariate_normal.py:48(LowRankMultivariateNormal)
       44    0.000    0.000    0.000    0.000 typing.py:2798(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:5454(__init__)
        1    0.000    0.000    0.000    0.000 ring.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:1415(_clear_cache)
      100    0.000    0.000    0.000    0.000 perm_groups.py:134(<genexpr>)
        5    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1074(_set_invalid_nan_property)
      196    0.000    0.000    0.000    0.000 core.py:485(mayReturnEmpty)
        1    0.000    0.000    0.000    0.000 callable.py:21(MapperIterDataPipe)
        1    0.000    0.000    0.000    0.000 _digraph.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _check.py:1(<module>)
        1    0.000    0.000    0.000    0.000 util.py:49(get_platform)
        1    0.000    0.000    0.000    0.000 ssl.py:477(Purpose)
       36    0.000    0.000    0.000    0.000 deprecation.py:211(finalize)
       42    0.000    0.000    0.000    0.000 _typing.py:275(__init__)
        1    0.000    0.000    0.000    0.000 kind.py:190(KindDispatcher)
        1    0.000    0.000    0.000    0.000 gzip.py:456(__init__)
        1    0.000    0.000    0.000    0.000 _cm.py:158(<dictcomp>)
        1    0.000    0.000    0.000    0.000 <frozen posixpath>:174(lexists)
        1    0.000    0.000    0.000    0.000 text.py:104(Text)
        1    0.000    0.000    0.000    0.000 ssl.py:1006(SSLSocket)
        1    0.000    0.000    0.000    0.000 _linalg_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:3343(NaN)
        1    0.000    0.000    0.000    0.000 sysconfig.py:219(is_python_build)
        1    0.000    0.000    0.000    0.000 numerictypes.py:589(_register_types)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:328(impl_decorator)
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing.py:611(ClassVar)
        1    0.000    0.000    0.000    0.000 autograd_function.py:511(WrappedCtx)
        4    0.000    0.000    0.000    0.000 platform.py:915(system)
        1    0.000    0.000    0.000    0.000 trirefine.py:1(<module>)
       93    0.000    0.000    0.000    0.000 _inspect.py:131(strseq)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6024(laplace_gen)
        9    0.000    0.000    0.000    0.000 mul.py:844(as_coeff_Mul)
        4    0.000    0.000    0.000    0.000 vmap.py:30(doesnt_support_saved_tensors_hooks)
        2    0.000    0.000    0.000    0.000 _codata.py:1533(exact2018)
       27    0.000    0.000    0.000    0.000 pathlib.py:622(name)
        1    0.000    0.000    0.000    0.000 bivariate.py:1(<module>)
        5    0.000    0.000    0.000    0.000 _version.py:1(<module>)
        1    0.000    0.000    0.000    0.000 intfunc.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:144(is_cpython)
        1    0.000    0.000    0.000    0.000 dates.py:1124(RRuleLocator)
        1    0.000    0.000    0.000    0.000 exponential.py:219(exp)
        1    0.000    0.000    0.000    0.000 case.py:344(TestCase)
      186    0.000    0.000    0.000    0.000 __init__.py:108(<lambda>)
        1    0.000    0.000    0.000    0.000 _laplacian.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _external_property_file_references.py:15(ExternalPropertyFileReferences)
        1    0.000    0.000    0.000    0.000 defaults.py:1(<module>)
        1    0.000    0.000    0.000    0.000 riccati.py:1(<module>)
        9    0.000    0.000    0.000    0.000 deprecation.py:433(<listcomp>)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:538(<listcomp>)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:16(_FuncInfo)
        1    0.000    0.000    0.000    0.000 __config__.py:9(DisplayModes)
        1    0.000    0.000    0.000    0.000 _sparse.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:327(<listcomp>)
        1    0.000    0.000    0.000    0.000 _machar.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:4777(IndentedBlock)
        1    0.000    0.000    0.000    0.000 function.py:296(_SingleLevelFunction)
        1    0.000    0.000    0.000    0.000 _trustregion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 inequalities.py:1(<module>)
       15    0.000    0.000    0.000    0.000 weakref.py:495(popitem)
      216    0.000    0.000    0.000    0.000 _adapters.py:43(redent)
        1    0.000    0.000    0.000    0.000 index_methods.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _elffile.py:23(EIClass)
        1    0.000    0.000    0.000    0.000 identification.py:1(<module>)
       25    0.000    0.000    0.000    0.000 rcsetup.py:773(_validate_greaterequal0_lessequal1)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2037(expon_gen)
      147    0.000    0.000    0.000    0.000 <frozen _collections_abc>:477(_is_param_expr)
      449    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
        3    0.000    0.000    0.000    0.000 core.py:5901(__init__)
        1    0.000    0.000    0.000    0.000 core.py:3696(__init__)
        9    0.000    0.000    0.000    0.000 pythonmpq.py:93(_new_check)
       16    0.000    0.000    0.000    0.000 fake_quantize.py:106(with_args)
        1    0.000    0.000    0.000    0.000 grouping.py:29(BatcherIterDataPipe)
        1    0.000    0.000    0.000    0.000 arrayop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 getlimits.py:589(smallest_normal)
        1    0.000    0.000    0.000    0.000 {method 'unsqueeze' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.000    0.000 refine.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datapipe.py:358(_IterDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 util.py:35(get_host_platform)
        2    0.000    0.000    0.000    0.000 densebasic.py:343(dmp_validate)
        1    0.000    0.000    0.000    0.000 patches.py:19(Patch)
       18    0.000    0.000    0.000    0.000 <frozen _collections_abc>:78(_check_methods)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9038(rayleigh_gen)
        5    0.000    0.000    0.000    0.000 decorator.py:127(update)
        7    0.000    0.000    0.000    0.000 core.py:4767(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 dataset.py:63(IterableDataset)
        1    0.000    0.000    0.000    0.000 grouping.py:10(BatcherMapDataPipe)
      169    0.000    0.000    0.000    0.000 contextlib.py:425(__init__)
        1    0.000    0.000    0.000    0.000 subfield.py:1(<module>)
       36    0.000    0.000    0.000    0.000 binary.py:153(_torch_binary)
        1    0.000    0.000    0.000    0.000 base_tasks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tzpath.py:5(reset_tzpath)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:487(DataFlowGraph)
        1    0.000    0.000    0.000    0.000 __init__.py:1243(__init__)
        1    0.000    0.000    0.000    0.000 multivariate_normal.py:80(MultivariateNormal)
        1    0.000    0.000    0.000    0.000 __config__.py:14(DisplayModes)
        1    0.000    0.000    0.000    0.000 perm_groups.py:26(PermutationGroup)
        5    0.000    0.000    0.000    0.000 inverselaplace.py:668(__init__)
        1    0.000    0.000    0.000    0.000 orthopolys.py:1(<module>)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:368(__new__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:370(Binomial)
        1    0.000    0.000    0.000    0.000 patches.py:1375(Ellipse)
        1    0.000    0.000    0.000    0.000 core.py:3589(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:821(InverseMellinTransform)
       21    0.000    0.000    0.000    0.000 _distn_infrastructure.py:3308(__new__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4259(gumbel_r_gen)
        2    0.000    0.000    0.000    0.000 rcsetup.py:130(_validate_date)
      161    0.000    0.000    0.000    0.000 core.py:1774(leave_whitespace)
        1    0.000    0.000    0.000    0.000 activation.py:15(MultiheadAttention)
       54    0.000    0.000    0.000    0.000 <frozen codecs>:260(__init__)
       26    0.000    0.000    0.000    0.000 _hook_iterator.py:110(IteratorDecorator)
        1    0.000    0.000    0.000    0.000 _distr_params.py:1(<module>)
       19    0.000    0.000    0.000    0.000 {method 'round' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 core.py:1757(suppress)
        1    0.000    0.000    0.000    0.000 immutable.py:30(ImmutableRepMatrix)
        1    0.000    0.000    0.000    0.000 error_functions.py:49(erf)
        4    0.000    0.000    0.000    0.000 rrule.py:80(_invalidates_cache)
       26    0.000    0.000    0.000    0.000 {method 'fullmatch' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {built-in method torch._C._nn._parse_to}
       36    0.000    0.000    0.000    0.000 _string_helpers.py:16(english_lower)
       89    0.000    0.000    0.000    0.000 functions.py:81(defun_wrapped)
        3    0.000    0.000    0.000    0.000 rcsetup.py:487(validate_whiskers)
        3    0.000    0.000    0.000    0.000 _common.py:132(_validate_fromutc_inputs)
        2    0.000    0.000    0.000    0.000 quantize_jit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:506(convert_to)
        1    0.000    0.000    0.000    0.000 gui.py:1(<module>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:227(_SpecialForm)
        3    0.000    0.000    0.000    0.000 <frozen os>:681(__setitem__)
        1    0.000    0.000    0.000    0.000 laplace.py:2203(InverseLaplaceTransform)
       66    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        9    0.000    0.000    0.000    0.000 overrides.py:23(set_array_function_like_doc)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 approximants.py:1(<module>)
       17    0.000    0.000    0.000    0.000 _multivariate.py:216(__init__)
        1    0.000    0.000    0.000    0.000 result.py:24(TestResult)
      235    0.000    0.000    0.000    0.000 basic.py:324(_hashable_content)
        1    0.000    0.000    0.000    0.000 _typing.py:248(_DataPipeMeta)
        1    0.000    0.000    0.000    0.000 _exception.py:16(Exception)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:71(_DTypeDict)
        3    0.000    0.000    0.000    0.000 __init__.py:435(validate)
        1    0.000    0.000    0.000    0.000 ctx_base.py:24(StandardBaseContext)
      4/2    0.000    0.000    0.000    0.000 _aliases.py:594(isdtype)
        1    0.000    0.000    0.000    0.000 gzip.py:327(close)
        1    0.000    0.000    0.000    0.000 _backend.py:330(set_global_backend)
        1    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 _new_distributions.py:394(_pmf_formula)
       14    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:473(_get_endpoint_str)
       25    0.000    0.000    0.000    0.000 {built-in method _struct.calcsize}
        1    0.000    0.000    0.000    0.000 image.py:215(_ImageBase)
      101    0.000    0.000    0.000    0.000 _meta_registrations.py:32(register_meta)
        1    0.000    0.000    0.000    0.000 dist.py:144(<listcomp>)
       46    0.000    0.000    0.000    0.000 six.py:110(__init__)
        1    0.000    0.000    0.000    0.000 _asarray.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:58(Sectioned)
        1    0.000    0.000    0.000    0.000 _parser.py:568(parser)
        1    0.000    0.000    0.000    0.000 timeit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 appellseqs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8574(powerlaw_gen)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:1(<module>)
        2    0.000    0.000    0.000    0.000 realfield.py:121(dtype)
        5    0.000    0.000    0.000    0.000 symbolic_opset9.py:2119(wrap_logical_op_with_negation)
        1    0.000    0.000    0.000    0.000 _rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sampler.py:160(WeightedRandomSampler)
      102    0.000    0.000    0.000    0.000 patches.py:1878(<genexpr>)
       55    0.000    0.000    0.000    0.000 logic.py:92(fuzzy_bool)
       58    0.000    0.000    0.000    0.000 __init__.py:795(__init__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3548(export)
        1    0.000    0.000    0.000    0.000 __init__.py:638(levy_stable_gen)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4810(OrderStatisticDistribution)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:18(numeric_type_aliases)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:95(take)
        1    0.000    0.000    0.000    0.000 _subplots.py:199(subplot_class_factory)
       78    0.000    0.000    0.000    0.000 inspect.py:480(iscode)
        1    0.000    0.000    0.000    0.000 fractions.py:38(Fraction)
        1    0.000    0.000    0.000    0.000 animation.py:789(HTMLWriter)
        1    0.000    0.000    0.000    0.000 elliptic.py:1(<module>)
       44    0.000    0.000    0.000    0.000 unicode.py:17(<genexpr>)
        1    0.000    0.000    0.000    0.000 _script.py:1506(_ScriptProfileTable)
        1    0.000    0.000    0.000    0.000 euclidtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 datapipe.py:377(DataChunk)
        1    0.000    0.000    0.000    0.000 _matrix.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dev.py:1(<module>)
      195    0.000    0.000    0.000    0.000 permutations.py:2083(<genexpr>)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tensor.py:3394(TensMul)
        1    0.000    0.000    0.000    0.000 tag.py:1(<module>)
       12    0.000    0.000    0.000    0.000 core.py:6117(<lambda>)
        1    0.000    0.000    0.000    0.000 _qmc.py:1286(LatinHypercube)
       42    0.000    0.000    0.000    0.000 typing.py:266(_check_generic)
       82    0.000    0.000    0.000    0.000 core.py:1962(streamline)
        6    0.000    0.000    0.000    0.000 _jit_internal.py:895(get_class_name_lineno)
        6    0.000    0.000    0.000    0.000 basic.py:147(_get_postprocessors_for_type)
        1    0.000    0.000    0.000    0.000 expintegrals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_reference.py:15(ReportingDescriptorReference)
        2    0.000    0.000    0.000    0.000 {built-in method _ctypes.POINTER}
        1    0.000    0.000    0.000    0.000 __init__.py:221(<listcomp>)
        4    0.000    0.000    0.000    0.000 isoparser.py:22(_takes_ascii)
        1    0.000    0.000    0.000    0.000 error_functions.py:2383(fresnels)
        3    0.000    0.000    0.000    0.000 numeric.py:67(zeros_like)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unicode.py:75(nums)
        1    0.000    0.000    0.000    0.000 getopt.py:1(<module>)
        2    0.000    0.000    0.000    0.000 blas.py:388(_memoize_get_funcs)
        1    0.000    0.000    0.000    0.000 singularities.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1145(RETURN_TYPE)
        1    0.000    0.000    0.000    0.000 _fourier.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:503(PYFUNCTYPE)
        1    0.000    0.000    0.000    0.000 tableform.py:1(<module>)
       23    0.000    0.000    0.000    0.000 functools.py:966(__init__)
        7    0.000    0.000    0.000    0.000 _aliases.py:447(reshape)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6801(lognorm_gen)
      166    0.000    0.000    0.000    0.000 enum.py:897(<lambda>)
        1    0.000    0.000    0.000    0.000 _structures.py:1(<module>)
       12    0.000    0.000    0.000    0.000 _basic.py:3032(<genexpr>)
        1    0.000    0.000    0.000    0.000 _censored_data.py:1(<module>)
       59    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 tools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pickle.py:1137(_Unpickler)
        4    0.000    0.000    0.000    0.000 random.py:797(getrandbits)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3605(_pmf_formula)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:153(__new__)
        5    0.000    0.000    0.000    0.000 quadrature.py:461(__init__)
       97    0.000    0.000    0.000    0.000 core.py:6163(<genexpr>)
        1    0.000    0.000    0.000    0.000 series_class.py:11(SeriesBase)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:440(__repr__)
       15    0.000    0.000    0.000    0.000 proxy.py:524(_define_reflectable)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8375(pearson3_gen)
        1    0.000    0.000    0.000    0.000 core.py:177(update_user_library)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:171(<lambda>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2797(acot)
        4    0.000    0.000    0.000    0.000 _ops.py:130(inner)
        1    0.000    0.000    0.000    0.000 _globals.py:24(__init__)
       57    0.000    0.000    0.000    0.000 core.py:4169(<genexpr>)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:1(<module>)
       24    0.000    0.000    0.000    0.000 pickletools.py:193(__init__)
       45    0.000    0.000    0.000    0.000 {built-in method torch._C.containedTypes}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3968(genhyperbolic_gen)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:128(Blend)
        1    0.000    0.000    0.000    0.000 json.py:46(_load_redirect)
      257    0.000    0.000    0.000    0.000 hmac.py:20(<genexpr>)
        1    0.000    0.000    0.000    0.000 polyutils.py:188(<listcomp>)
        1    0.000    0.000    0.000    0.000 _qap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 primetest.py:1(<module>)
       97    0.000    0.000    0.000    0.000 docstring.py:65(do_copy)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:804(_reduce_with_dtype)
       81    0.000    0.000    0.000    0.000 __init__.py:25(decorator)
       16    0.000    0.000    0.000    0.000 doccer.py:126(_doc)
        1    0.000    0.000    0.000    0.000 dogbox.py:1(<module>)
       14    0.000    0.000    0.000    0.000 constraints.py:175(__call__)
       32    0.000    0.000    0.000    0.000 decorators.py:202(wrapper)
        1    0.000    0.000    0.000    0.000 uniform.py:11(Uniform)
        1    0.000    0.000    0.000    0.000 sampler.py:64(SequentialSampler)
        1    0.000    0.000    0.000    0.000 cmd.py:34(Command)
        1    0.000    0.000    0.000    0.000 pde.py:1(<module>)
      230    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _common.py:42(resolve)
       24    0.000    0.000    0.000    0.000 datapipe.py:133(register_datapipe_as_function)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1735(DUP_Flint)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method uarray._uarray.set_global_backend}
        4    0.000    0.000    0.000    0.000 __init__.py:511(cast)
        1    0.000    0.000    0.000    0.000 function.py:281(Application)
        1    0.000    0.000    0.000    0.000 _elffile.py:28(EIData)
        1    0.000    0.000    0.000    0.000 categorical.py:9(Categorical)
        1    0.000    0.000    0.000    0.000 core.py:3494(__init__)
        1    0.000    0.000    0.000    0.000 _artifact.py:17(Artifact)
      161    0.000    0.000    0.000    0.000 util.py:242(escape_re_range_char)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:311(SizeMap)
      257    0.000    0.000    0.000    0.000 hmac.py:19(<genexpr>)
        2    0.000    0.000    0.000    0.000 datetime.py:765(__neg__)
        6    0.000    0.000    0.000    0.000 _methods.py:55(_any)
        3    0.000    0.000    0.000    0.000 datetime.py:1673(__new__)
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       97    0.000    0.000    0.000    0.000 docstring.py:63(copy)
        1    0.000    0.000    0.000    0.000 <frozen os>:48(<listcomp>)
       13    0.000    0.000    0.000    0.000 enum.py:901(<dictcomp>)
       18    0.000    0.000    0.000    0.000 conflict.py:30(<genexpr>)
       28    0.000    0.000    0.000    0.000 power.py:803(as_base_exp)
        1    0.000    0.000    0.000    0.000 arrayterator.py:1(<module>)
       81    0.000    0.000    0.000    0.000 __init__.py:14(set_module)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:14(decorator)
        1    0.000    0.000    0.000    0.000 realtransforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 geo.py:14(GeoAxes)
        1    0.000    0.000    0.000    0.000 format.py:1(<module>)
        1    0.000    0.000    0.000    0.000 interval_membership.py:1(<module>)
       13    0.000    0.000    0.000    0.000 enum.py:1337(_iter_member_by_value_)
       90    0.000    0.000    0.000    0.000 basic.py:442(class_key)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:780(exec_module)
        1    0.000    0.000    0.000    0.000 plot_implicit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _thread_flow_location.py:19(ThreadFlowLocation)
        1    0.000    0.000    0.000    0.000 exponential.py:607(log)
        1    0.000    0.000    0.000    0.000 typing.py:1563(__repr__)
        1    0.000    0.000    0.000    0.000 decorators.py:1(<module>)
       12    0.000    0.000    0.000    0.000 rcsetup.py:200(validate_axisbelow)
        3    0.000    0.000    0.000    0.000 expr.py:220(__neg__)
       90    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 codeprinter.py:53(CodePrinter)
        8    0.000    0.000    0.000    0.000 _nonlin.py:119(_set_doc)
       18    0.000    0.000    0.000    0.000 _ops.py:31(_apply_docstring_templates)
        1    0.000    0.000    0.000    0.000 printing.py:1(<module>)
       30    0.000    0.000    0.000    0.000 warnings.py:440(__init__)
      122    0.000    0.000    0.000    0.000 core.py:2459(__getnewargs__)
        1    0.000    0.000    0.000    0.000 <string>:2(__div__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4238(<dictcomp>)
        1    0.000    0.000    0.000    0.000 mock.py:402(NonCallableMock)
       14    0.000    0.000    0.000    0.000 __init__.py:253(escape)
        1    0.000    0.000    0.000    0.000 PaletteFile.py:1(<module>)
       26    0.000    0.000    0.000    0.000 inspect.py:1172(__init__)
        1    0.000    0.000    0.000    0.000 timestamp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bernoulli.py:12(Bernoulli)
      174    0.000    0.000    0.000    0.000 _docscrape.py:724(_is_show_member)
        1    0.000    0.000    0.000    0.000 _basic_backend.py:1(<module>)
       53    0.000    0.000    0.000    0.000 six.py:182(_add_module)
       55    0.000    0.000    0.000    0.000 __init__.py:382(_make_elementwise_unary_reference)
        1    0.000    0.000    0.000    0.000 __init__.py:850(TarInfo)
       16    0.000    0.000    0.000    0.000 pretty_symbology.py:169(<lambda>)
        1    0.000    0.000    0.000    0.000 function.py:382(Function)
        1    0.000    0.000    0.000    0.000 differentiation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:367(<listcomp>)
        4    0.000    0.000    0.000    0.000 symbolic_opset9.py:787(overload_by_arg_count)
        1    0.000    0.000    0.000    0.000 simpledomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 triangulation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pin_memory.py:1(<module>)
        1    0.000    0.000    0.000    0.000 calendar.py:52(_localized_month)
        6    0.000    0.000    0.000    0.000 numbers.py:3598(__hash__)
        3    0.000    0.000    0.000    0.000 feedparser.py:197(_new_message)
        1    0.000    0.000    0.000    0.000 _ndimage_api.py:16(<listcomp>)
       96    0.000    0.000    0.000    0.000 {built-in method math.isclose}
        1    0.000    0.000    0.000    0.000 lib_interval.py:1(<module>)
        1    0.000    0.000    0.000    0.000 densetools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _complex.py:13(Complex)
        1    0.000    0.000    0.000    0.000 core.py:170(iter_user_libraries)
        1    0.000    0.000    0.000    0.000 domainelement.py:1(<module>)
       85    0.000    0.000    0.000    0.000 __init__.py:185(keys)
        1    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:150(_families)
        1    0.000    0.000    0.000    0.000 _async.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dates.py:1475(YearLocator)
        1    0.000    0.000    0.000    0.000 py39.py:1(<module>)
        4    0.000    0.000    0.000    0.000 fontconfig_pattern.py:158(_property)
        3    0.000    0.000    0.000    0.000 sdm.py:78(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:39(_get_running_interactive_framework)
        7    0.000    0.000    0.000    0.000 rcsetup.py:292(validate_backend)
       82    0.000    0.000    0.000    0.000 typing.py:2823(<genexpr>)
       12    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3600(_overrides)
        1    0.000    0.000    0.000    0.000 pycode.py:753(MpmathPrinter)
        1    0.000    0.000    0.000    0.000 Lattice.py:1(<module>)
        3    0.000    0.000    0.000    0.000 typing.py:856(_evaluate)
        1    0.000    0.000    0.000    0.000 inputs.py:82(Poscar)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:1(<module>)
        8    0.000    0.000    0.000    0.000 ctx_iv.py:30(convert_mpf_)
        1    0.000    0.000    0.000    0.000 Image.py:185(Palette)
      187    0.000    0.000    0.000    0.000 boolalg.py:365(__bool__)
       40    0.000    0.000    0.000    0.000 libmpf.py:208(_normalize1)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:744(FakeTensorConfig)
        1    0.000    0.000    0.000    0.000 _infra.py:270(__post_init__)
        1    0.000    0.000    0.000    0.000 domain.py:18(Domain)
        3    0.000    0.000    0.000    0.000 six.py:96(__get__)
       35    0.000    0.000    0.000    0.000 core.py:13(dispatch)
        1    0.000    0.000    0.000    0.000 _replicated_tensor_ddp_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:553(cos)
        1    0.000    0.000    0.000    0.000 _at.py:52(Undef)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3028(_sample_dispatch)
        1    0.000    0.000    0.000    0.000 _await.py:1(<module>)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2836(min)
        1    0.000    0.000    0.000    0.000 _iotools.py:450(StringConverter)
        1    0.000    0.000    0.000    0.000 _qmc.py:1117(Halton)
        3    0.000    0.000    0.000    0.000 coroutines.py:21(iscoroutinefunction)
        8    0.000    0.000    0.000    0.000 sympify.py:78(_is_numpy_instance)
        1    0.000    0.000    0.000    0.000 continuous_bernoulli.py:12(ContinuousBernoulli)
       38    0.000    0.000    0.000    0.000 __init__.py:23(<genexpr>)
        2    0.000    0.000    0.000    0.000 __init__.py:393(__getitem__)
        1    0.000    0.000    0.000    0.000 backend_tools.py:524(ToolViewsPositions)
        1    0.000    0.000    0.000    0.000 _constrained_layout.py:1(<module>)
       41    0.000    0.000    0.000    0.000 typing.py:2885(_namedtuple_mro_entries)
        1    0.000    0.000    0.000    0.000 numbers.py:609(bell)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9339(irwinhall_gen)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1255(cot)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1070(csch)
        1    0.000    0.000    0.000    0.000 numerictypes.py:441(_construct_lookups)
        1    0.000    0.000    0.000    0.000 bessel.py:1374(airyai)
       62    0.000    0.000    0.000    0.000 _bunch.py:128(<genexpr>)
        4    0.000    0.000    0.000    0.000 enum.py:1727(<listcomp>)
        1    0.000    0.000    0.000    0.000 inputs.py:1212(Kpoints)
       18    0.000    0.000    0.000    0.000 {method 'tolist' of 'memoryview' objects}
      130    0.000    0.000    0.000    0.000 __init__.py:247(<genexpr>)
       56    0.000    0.000    0.000    0.000 patches.py:1901(_register_style)
        4    0.000    0.000    0.000    0.000 _pep440.py:437(_cmpkey)
        1    0.000    0.000    0.000    0.000 error_functions.py:288(erfc)
        1    0.000    0.000    0.000    0.000 str.py:20(StrPrinter)
       30    0.000    0.000    0.000    0.000 binary.py:162(_torch_inplace_binary)
        1    0.000    0.000    0.000    0.000 _interpolate.py:434(fill_value)
        1    0.000    0.000    0.000    0.000 trigonometric.py:915(tan)
        3    0.000    0.000    0.000    0.000 _stats.py:14(count)
       18    0.000    0.000    0.000    0.000 transforms.py:52(_make_str_method)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:55(_pdf_formula)
        3    0.000    0.000    0.000    0.000 arrayprint.py:64(_make_options_dict)
        1    0.000    0.000    0.000    0.000 mathml.py:547(MathMLPresentationPrinter)
        1    0.000    0.000    0.000    0.000 rationalfield.py:14(RationalField)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9661(skewnorm_gen)
        6    0.000    0.000    0.000    0.000 stride_tricks.py:472(<listcomp>)
        1    0.000    0.000    0.000    0.000 parametrizations.py:288(_SpectralNorm)
        1    0.000    0.000    0.000    0.000 trigonometric.py:243(sin)
        6    0.000    0.000    0.000    0.000 _weakrefset.py:37(__init__)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:1(<module>)
        2    0.000    0.000    0.000    0.000 numbers.py:408(__float__)
        1    0.000    0.000    0.000    0.000 epathtools.py:1(<module>)
       28    0.000    0.000    0.000    0.000 numerictypes.py:283(issubclass_)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:628(<dictcomp>)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 engine.py:177(DiagnosticContext)
        5    0.000    0.000    0.000    0.000 functools.py:191(<setcomp>)
        1    0.000    0.000    0.000    0.000 outputs.py:1962(Outcar)
        1    0.000    0.000    0.000    0.000 scalarbool.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:849(__init__)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:153(sinh)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2697(weibull_min_gen)
       24    0.000    0.000    0.000    0.000 numerictypes.py:514(_scalar_type_key)
        1    0.000    0.000    0.000    0.000 permutations.py:473(Permutation)
        1    0.000    0.000    0.000    0.000 deltafunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sysconfig.py:719(get_platform)
        1    0.000    0.000    0.000    0.000 tarfile.py:715(TarInfo)
        1    0.000    0.000    0.000    0.000 _norm.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matrix_element.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sorting.py:1(<module>)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2149(_overrides)
        1    0.000    0.000    0.000    0.000 _region.py:16(Region)
        2    0.000    0.000    0.000    0.000 tree.py:1(<module>)
        2    0.000    0.000    0.000    0.000 conflict.py:39(<listcomp>)
        1    0.000    0.000    0.000    0.000 _milp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 limitseq.py:1(<module>)
        2    0.000    0.000    0.000    0.000 traceback.py:439(from_list)
        3    0.000    0.000    0.000    0.000 message.py:409(__getitem__)
        1    0.000    0.000    0.000    0.000 trsock.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _waveforms.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:256(_register_at_fork_reinit_lock)
        1    0.000    0.000    0.000    0.000 libintmath.py:89(<listcomp>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1800(csc)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:355(_Gamma)
        3    0.000    0.000    0.000    0.000 result.py:12(failfast)
        1    0.000    0.000    0.000    0.000 pprint.py:106(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:611(tanh)
        1    0.000    0.000    0.000    0.000 tz.py:1470(__get_gettz)
        4    0.000    0.000    0.000    0.000 platform.py:1003(_sys_version)
        1    0.000    0.000    0.000    0.000 boolalg.py:972(Xor)
        1    0.000    0.000    0.000    0.000 reductions.py:151(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:1(<module>)
        5    0.000    0.000    0.000    0.000 perm_groups.py:149(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:136(script_if_tracing)
        1    0.000    0.000    0.000    0.000 core.py:336(AffineScalarFunc)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:365(cosh)
        1    0.000    0.000    0.000    0.000 core.py:4055(And)
       18    0.000    0.000    0.000    0.000 pickletools.py:961(__init__)
       28    0.000    0.000    0.000    0.000 {built-in method posix._path_normpath}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3545(gamma_gen)
      169    0.000    0.000    0.000    0.000 contextlib.py:428(__enter__)
        1    0.000    0.000    0.000    0.000 odes.py:1(<module>)
        6    0.000    0.000    0.000    0.000 numeric.py:274(full)
        1    0.000    0.000    0.000    0.000 function.py:1045(Derivative)
        1    0.000    0.000    0.000    0.000 bessel.py:1546(airybi)
        1    0.000    0.000    0.000    0.000 geometric.py:11(Geometric)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3040(_sample_inverse_transform)
        1    0.000    0.000    0.000    0.000 frontend.py:682(ExprBuilder)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1384(acosh)
        1    0.000    0.000    0.000    0.000 bvls.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _array_api_compat_vendor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 discovery.py:210(FlatLayoutPackageFinder)
       39    0.000    0.000    0.000    0.000 functools.py:421(_unwrap_partial)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:22(<listcomp>)
        1    0.000    0.000    0.000    0.000 _polyint.py:136(_set_dtype)
        2    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
        1    0.000    0.000    0.000    0.000 pyplot.py:1891(colormaps)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis3d.py:35(Axis)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3176(ndim)
       26    0.000    0.000    0.000    0.000 core.py:4417(<genexpr>)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1159(_cdf2_input_validation)
        2    0.000    0.000    0.000    0.000 {method 't' of 'torch._C._TensorBase' objects}
       98    0.000    0.000    0.000    0.000 __future__.py:20(get_overwrite_module_params_on_conversion)
       12    0.000    0.000    0.000    0.000 functools.py:355(__init__)
       28    0.000    0.000    0.000    0.000 inspect.py:2211(parse_name)
        1    0.000    0.000    0.000    0.000 series.py:126(BaseSeries)
       82    0.000    0.000    0.000    0.000 symbolic_helper.py:313(quantized_args)
        1    0.000    0.000    0.000    0.000 _address.py:12(Address)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1236(DMP_Python)
        1    0.000    0.000    0.000    0.000 unicode.py:236(Japanese)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3246(acsc)
        1    0.000    0.000    0.000    0.000 timeutils.py:37(__do_timings)
        4    0.000    0.000    0.000    0.000 uuid.py:139(__init__)
       18    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:19(type_aliases_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:1635(TarFile)
        1    0.000    0.000    0.000    0.000 _state.py:18(__init__)
        1    0.000    0.000    0.000    0.000 Orbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 error_functions.py:482(erfi)
        9    0.000    0.000    0.000    0.000 <frozen _collections_abc>:516(__subclasshook__)
        6    0.000    0.000    0.000    0.000 <frozen genericpath>:121(_splitext)
        1    0.000    0.000    0.000    0.000 dfm.py:1(<module>)
       24    0.000    0.000    0.000    0.000 calculus.py:4(defun)
        1    0.000    0.000    0.000    0.000 pathlib.py:112(_WindowsFlavour)
       11    0.000    0.000    0.000    0.000 init.py:531(_make_deprecate)
        1    0.000    0.000    0.000    0.000 formatting.py:1(<module>)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:63(__init__)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1572(atanh)
       36    0.000    0.000    0.000    0.000 __init__.py:884(_make_elementwise_binary_reference)
      208    0.000    0.000    0.000    0.000 multiarray.py:503(can_cast)
        1    0.000    0.000    0.000    0.000 powerset.py:10(PowerSet)
        1    0.000    0.000    0.000    0.000 itt.py:1(<module>)
        6    0.000    0.000    0.000    0.000 rcsetup.py:617(validate_joinstyle)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1017(<listcomp>)
        1    0.000    0.000    0.000    0.000 sym_operation.py:1(<module>)
        4    0.000    0.000    0.000    0.000 platform.py:826(uname)
       29    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:301(wrapper)
        1    0.000    0.000    0.000    0.000 tensor.py:2845(Tensor)
        1    0.000    0.000    0.000    0.000 reader.py:59(Reader)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3015(asec)
        1    0.000    0.000    0.000    0.000 Image.py:3874(_apply_env_variables)
        1    0.000    0.000    0.000    0.000 random.py:358(randint)
        6    0.000    0.000    0.000    0.000 {built-in method math.frexp}
        1    0.000    0.000    0.000    0.000 trigonometric.py:2343(acos)
        9    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3622(_overrides)
        2    0.000    0.000    0.000    0.000 __init__.py:394(pass_none)
       21    0.000    0.000    0.000    0.000 fancy_getopt.py:443(translate_longopt)
        1    0.000    0.000    0.000    0.000 generate.py:45(__init__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1689(<lambda>)
        1    0.000    0.000    0.000    0.000 signal_handling.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linalg.py:39(EigResult)
       15    0.000    0.000    0.000    0.000 decorator.py:132(doctest_depends_on)
       25    0.000    0.000    0.000    0.000 enum.py:787(__members__)
        1    0.000    0.000    0.000    0.000 calendar.py:54(<listcomp>)
        1    0.000    0.000    0.000    0.000 events.py:203(AbstractEventLoop)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:71(_from_ctypes_scalar)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:490(_SpecialGenericAlias)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:22(<listcomp>)
        2    0.000    0.000    0.000    0.000 types.py:247(coroutine)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:125(StandardNormal)
       20    0.000    0.000    0.000    0.000 __init__.py:2254(_check_in_list)
        1    0.000    0.000    0.000    0.000 __init__.py:144(<listcomp>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1206(asinh)
        1    0.000    0.000    0.000    0.000 pathlib.py:934(_scandir)
       87    0.000    0.000    0.000    0.000 kl.py:822(<lambda>)
        6    0.000    0.000    0.000    0.000 operations.py:135(_new_rawargs)
       33    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 __init__.py:1273(append)
        1    0.000    0.000    0.000    0.000 dates.py:1230(AutoDateLocator)
        1    0.000    0.000    0.000    0.000 boolalg.py:1286(Equivalent)
        1    0.000    0.000    0.000    0.000 independent.py:9(Independent)
        1    0.000    0.000    0.000    0.000 mathtext.py:3302(MathTextParser)
        1    0.000    0.000    0.000    0.000 quaternion.py:58(Quaternion)
      115    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 core.py:720(add_condition)
        1    0.000    0.000    0.000    0.000 patches.py:1095(Wedge)
        2    0.000    0.000    0.000    0.000 core.py:3767(__init__)
        1    0.000    0.000    0.000    0.000 ratsimp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:1103(enable_packrat)
        1    0.000    0.000    0.000    0.000 _serialization.py:1(<module>)
        5    0.000    0.000    0.000    0.000 <frozen os>:1080(__subclasshook__)
        1    0.000    0.000    0.000    0.000 sqfreetools.py:1(<module>)
        2    0.000    0.000    0.000    0.000 multidimensional.py:93(__call__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:2110(asin)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1884(asech)
        1    0.000    0.000    0.000    0.000 pyplot.py:111(install_repl_displayhook)
        1    0.000    0.000    0.000    0.000 _polyint.py:533(BarycentricInterpolator)
        1    0.000    0.000    0.000    0.000 subprocess.py:693(_use_posix_spawn)
        1    0.000    0.000    0.000    0.000 multidimensional.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dist.py:244(Distribution)
        9    0.000    0.000    0.000    0.000 _ops.py:545(__init__)
       54    0.000    0.000    0.000    0.000 decorators.py:23(_sympifyit)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:417(<lambda>)
        1    0.000    0.000    0.000    0.000 _factories.py:26(__init__)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:11(LogitRelaxedBernoulli)
        1    0.000    0.000    0.000    0.000 _lti_conversion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 eigen_symmetric.py:1(<module>)
        1    0.000    0.000    0.000    0.000 densearith.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _compressed.py:25(_cs_matrix)
       32    0.000    0.000    0.000    0.000 _type_aliases.py:46(<genexpr>)
        2    0.000    0.000    0.000    0.000 core.py:3529(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 typing.py:1569(<listcomp>)
        1    0.000    0.000    0.000    0.000 _onenormest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 format_helpers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1001(Polygon)
       15    0.000    0.000    0.000    0.000 _util.py:356(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:995(CatTransform)
        1    0.000    0.000    0.000    0.000 _graph_traversal.py:16(GraphTraversal)
        1    0.000    0.000    0.000    0.000 patches.py:1510(Circle)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:150(_pdf_formula)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1381(<listcomp>)
        2    0.000    0.000    0.000    0.000 _mio5_params.py:184(_convert_codecs)
       30    0.000    0.000    0.000    0.000 _type_aliases.py:203(_add_array_type)
        1    0.000    0.000    0.000    0.000 inputs.py:2869(Potcar)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:276(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:863(_addHandlerRef)
        1    0.000    0.000    0.000    0.000 error_functions.py:2544(fresnelc)
       58    0.000    0.000    0.000    0.000 results.py:269(__bool__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1692(sec)
        1    0.000    0.000    0.000    0.000 _trace.py:1215(_script_if_tracing)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:123(_add_integer_aliases)
       22    0.000    0.000    0.000    0.000 typing.py:913(_is_typevar_like)
       78    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:89(<listcomp>)
        1    0.000    0.000    0.000    0.000 Physics_System.py:1(<module>)
        1    0.000    0.000    0.000    0.000 precedence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:727(DistributionFinder)
        1    0.000    0.000    0.000    0.000 {built-in method math.log2}
       14    0.000    0.000    0.000    0.000 numeric.py:1380(<listcomp>)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:74(_add_types)
        1    0.000    0.000    0.000    0.000 _stack.py:16(Stack)
       21    0.000    0.000    0.000    0.000 _codata.py:2127(value)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1141(sech)
        1    0.000    0.000    0.000    0.000 _coo.py:26(_coo_base)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1737(acoth)
        4    0.000    0.000    0.000    0.000 shape_base.py:23(atleast_1d)
       56    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
       28    0.000    0.000    0.000    0.000 typing_extensions.py:486(_is_dunder)
       22    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000    0.000    0.000 pathlib.py:455(PurePath)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:70(_icdf_formula)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:1(<module>)
       15    0.000    0.000    0.000    0.000 __init__.py:593(<genexpr>)
        1    0.000    0.000    0.000    0.000 anchor.py:1(<module>)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:27(merge_dicts)
        1    0.000    0.000    0.000    0.000 normalforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _extract.py:1(<module>)
        1    0.000    0.000    0.000    0.000 groebnertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:118(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9162(reciprocal_gen)
        1    0.000    0.000    0.000    0.000 patches.py:1347(CirclePolygon)
       12    0.000    0.000    0.000    0.000 typing.py:2356(<genexpr>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:2080(acsch)
       16    0.000    0.000    0.000    0.000 structure.py:230(__iter__)
        1    0.000    0.000    0.000    0.000 scanner.py:71(Scanner)
        6    0.000    0.000    0.000    0.000 rcsetup.py:264(validate_fonttype)
        3    0.000    0.000    0.000    0.000 inspect.py:409(iscoroutinefunction)
        7    0.000    0.000    0.000    0.000 legend_handler.py:136(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:16(_deprecation_notice)
        3    0.000    0.000    0.000    0.000 _adapters.py:30(__new__)
       30    0.000    0.000    0.000    0.000 core.py:4416(<genexpr>)
        4    0.000    0.000    0.000    0.000 legend_handler.py:181(__init__)
        3    0.000    0.000    0.000    0.000 _array_api.py:485(xp_ravel)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:824(coth)
        1    0.000    0.000    0.000    0.000 property.py:1(<module>)
       89    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.RLock' objects}
       14    0.000    0.000    0.000    0.000 dispatcher.py:113(__init__)
      144    0.000    0.000    0.000    0.000 periodic_table.py:1519(oxi_state)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10433(truncpareto_gen)
        4    0.000    0.000    0.000    0.000 {built-in method _imp.exec_builtin}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4094(<lambda>)
        1    0.000    0.000    0.000    0.000 request.py:317(Request)
        7    0.000    0.000    0.000    0.000 feedparser.py:122(pushlines)
        1    0.000    0.000    0.000    0.000 matmul.py:24(MatMul)
       44    0.000    0.000    0.000    0.000 core.py:699(<genexpr>)
        1    0.000    0.000    0.000    0.000 rules.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:119(Cycler)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:434(mpc_convert_lhs)
        1    0.000    0.000    0.000    0.000 dirichlet.py:16(_Dirichlet)
       10    0.000    0.000    0.000    0.000 _torch_docs.py:23(<listcomp>)
        1    0.000    0.000    0.000    0.000 _mangling.py:1(<module>)
       20    0.000    0.000    0.000    0.000 mixins.py:16(_binary_method)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:513(__str__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6694(loglaplace_gen)
       12    0.000    0.000    0.000    0.000 arrayprint.py:739(_extendLine)
        1    0.000    0.000    0.000    0.000 emitter.py:103(Emitter)
        1    0.000    0.000    0.000    0.000 core.py:103(__diag__)
        1    0.000    0.000    0.000    0.000 _state.py:23(parse_env)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6455(logistic_gen)
        1    0.000    0.000    0.000    0.000 bessel.py:1028(yn)
       61    0.000    0.000    0.000    0.000 stride_tricks.py:542(<genexpr>)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:124(<listcomp>)
       26    0.000    0.000    0.000    0.000 _jit_internal.py:860(is_pass)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1713(_identify_parameterization)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8154(pareto_gen)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:1(<module>)
        1    0.000    0.000    0.000    0.000 text.py:1521(Annotation)
       32    0.000    0.000    0.000    0.000 arraypad.py:109(<genexpr>)
       41    0.000    0.000    0.000    0.000 representer.py:131(add_representer)
        1    0.000    0.000    0.000    0.000 symbol.py:524(Wild)
        1    0.000    0.000    0.000    0.000 Files_out.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3758(erlang_gen)
        1    0.000    0.000    0.000    0.000 minres.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _notification.py:18(Notification)
        2    0.000    0.000    0.000    0.000 sparsetools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _mio5.py:516(VarWriter5)
       20    0.000    0.000    0.000    0.000 <frozen os>:817(fsdecode)
        1    0.000    0.000    0.000    0.000 function.py:818(DefinedFunction)
        1    0.000    0.000    0.000    0.000 rk.py:293(RK45)
        1    0.000    0.000    0.000    0.000 continued_fraction.py:1(<module>)
        1    0.000    0.000    0.000    0.000 more.py:2049(numeric_range)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:612(_set_prec)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:91(Tokenizer)
        1    0.000    0.000    0.000    0.000 __init__.py:45(enabled)
        1    0.000    0.000    0.000    0.000 _realtransforms_backend.py:1(<module>)
        1    0.000    0.000    0.000    0.000 table.py:232(Table)
       23    0.000    0.000    0.000    0.000 __init__.py:1267(__init__)
        1    0.000    0.000    0.000    0.000 common.py:449(PMGDir)
        1    0.000    0.000    0.000    0.000 dot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_configuration.py:12(ReportingConfiguration)
       22    0.000    0.000    0.000    0.000 util.py:197(__init__)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:677(rv_generic)
        1    0.000    0.000    0.000    0.000 representer.py:238(SafeRepresenter)
        2    0.000    0.000    0.000    0.000 _utils_internal.py:23(get_file_path)
        1    0.000    0.000    0.000    0.000 {built-in method posix.readlink}
        1    0.000    0.000    0.000    0.000 ast.py:82(_convert)
        5    0.000    0.000    0.000    0.000 datetime.py:515(_check_date_fields)
        1    0.000    0.000    0.000    0.000 numbers.py:189(fibonacci)
        1    0.000    0.000    0.000    0.000 main.py:56(YAML)
        1    0.000    0.000    0.000    0.000 matadd.py:19(MatAdd)
        1    0.000    0.000    0.000    0.000 threads.py:1(<module>)
        1    0.000    0.000    0.000    0.000 engine.py:28(Diagnostic)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:302(_World)
        1    0.000    0.000    0.000    0.000 Files_in.py:1(<module>)
        3    0.000    0.000    0.000    0.000 _codata.py:478(exact2006)
        1    0.000    0.000    0.000    0.000 mock.py:1256(_patch)
       39    0.000    0.000    0.000    0.000 _jit_internal.py:530(export)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4472(halfcauchy_gen)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:951(FakeTensorMode)
       18    0.000    0.000    0.000    0.000 traceback.py:310(_original_line)
       75    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
       29    0.000    0.000    0.000    0.000 __init__.py:1830(_str_equal)
        1    0.000    0.000    0.000    0.000 coreerrors.py:14(LazyExceptionMessage)
        1    0.000    0.000    0.000    0.000 _util.py:671(_workers_wrapper)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:232(<lambda>)
        2    0.000    0.000    0.000    0.000 {built-in method zlib.decompressobj}
        1    0.000    0.000    0.000    0.000 client.py:789(HTTPConnection)
        2    0.000    0.000    0.000    0.000 __init__.py:12(<listcomp>)
       10    0.000    0.000    0.000    0.000 inspect.py:1754(currentframe)
       26    0.000    0.000    0.000    0.000 inspect.py:752(_is_wrapper)
       12    0.000    0.000    0.000    0.000 domain.py:403(convert)
      138    0.000    0.000    0.000    0.000 core.py:809(postParse)
        1    0.000    0.000    0.000    0.000 selector_events.py:43(BaseSelectorEventLoop)
        1    0.000    0.000    0.000    0.000 _rgi.py:56(RegularGridInterpolator)
        1    0.000    0.000    0.000    0.000 __init__.py:775(FastPath)
      134    0.000    0.000    0.000    0.000 six.py:93(__init__)
        1    0.000    0.000    0.000    0.000 singularityfunctions.py:1(<module>)
        4    0.000    0.000    0.000    0.000 gaussiandomains.py:56(__neg__)
        1    0.000    0.000    0.000    0.000 frontend.py:531(StmtBuilder)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:235(<lambda>)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:475(ProxyTorchDispatchMode)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1596(<listcomp>)
        1    0.000    0.000    0.000    0.000 linalg.py:55(SVDResult)
        1    0.000    0.000    0.000    0.000 sites.py:28(Site)
        1    0.000    0.000    0.000    0.000 batch_norm_replacement.py:1(<module>)
        3    0.000    0.000    0.000    0.000 intfunc.py:162(igcd)
        2    0.000    0.000    0.000    0.000 ordinals.py:81(__new__)
        6    0.000    0.000    0.000    0.000 _policybase.py:94(_append_doc)
        1    0.000    0.000    0.000    0.000 algebraicfield.py:15(AlgebraicField)
       66    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 convert_parameters.py:1(<module>)
        2    0.000    0.000    0.000    0.000 datetime.py:923(__new__)
       16    0.000    0.000    0.000    0.000 arraypad.py:58(_view_roi)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2845(ANP)
      115    0.000    0.000    0.000    0.000 dataclasses.py:843(_hash_set_none)
        2    0.000    0.000    0.000    0.000 _compression.py:59(close)
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:807(__init__)
        4    0.000    0.000    0.000    0.000 {built-in method posix.uname}
        1    0.000    0.000    0.000    0.000 point.py:42(Point)
        1    0.000    0.000    0.000    0.000 bessel.py:1094(SphericalHankelBase)
        1    0.000    0.000    0.000    0.000 pydoc.py:565(HTMLDoc)
       16    0.000    0.000    0.000    0.000 inspect.py:2230(RewriteSymbolics)
       24    0.000    0.000    0.000    0.000 ctx_iv.py:397(make_mpf)
        1    0.000    0.000    0.000    0.000 _quantile.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:484(SSLContext)
        1    0.000    0.000    0.000    0.000 filelist.py:21(FileList)
        1    0.000    0.000    0.000    0.000 puiseux.py:231(PuiseuxPoly)
       27    0.000    0.000    0.000    0.000 _testutils.py:86(__init__)
        1    0.000    0.000    0.000    0.000 Manager.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lsqr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:129(Command)
        1    0.000    0.000    0.000    0.000 threading.py:583(set)
       28    0.000    0.000    0.000    0.000 operations.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 reductions.py:154(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _dok.py:17(_dok_base)
        1    0.000    0.000    0.000    0.000 _version_control_details.py:15(VersionControlDetails)
        1    0.000    0.000    0.000    0.000 _result_provenance.py:15(ResultProvenance)
        2    0.000    0.000    0.000    0.000 cache.py:123(_getenv)
        1    0.000    0.000    0.000    0.000 pathlib.py:667(with_name)
       79    0.000    0.000    0.000    0.000 reduction.py:43(register)
       57    0.000    0.000    0.000    0.000 __init__.py:2291(<genexpr>)
        1    0.000    0.000    0.000    0.000 glsl.py:30(GLSLPrinter)
        1    0.000    0.000    0.000    0.000 _gcrotmk.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tarfile.py:1445(TarFile)
       23    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        6    0.000    0.000    0.000    0.000 deprecation.py:269(__init__)
        1    0.000    0.000    0.000    0.000 sites.py:289(PeriodicSite)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4391(gumbel_l_gen)
        1    0.000    0.000    0.000    0.000 transforms.py:685(Bbox)
        1    0.000    0.000    0.000    0.000 case.py:44(_Outcome)
        1    0.000    0.000    0.000    0.000 datetime.py:1665(datetime)
       20    0.000    0.000    0.000    0.000 rcsetup.py:600(_deprecate_case_insensitive_join_cap)
        1    0.000    0.000    0.000    0.000 boolalg.py:68(Boolean)
        1    0.000    0.000    0.000    0.000 _probability_distribution.py:5(_ProbabilityDistribution)
       25    0.000    0.000    0.000    0.000 decorator.py:251(deprecated)
        1    0.000    0.000    0.000    0.000 loss.py:1498(TripletMarginWithDistanceLoss)
        1    0.000    0.000    0.000    0.000 _infra.py:36(Tag)
        1    0.000    0.000    0.000    0.000 _logical_location.py:12(LogicalLocation)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4694(halfnorm_gen)
        1    0.000    0.000    0.000    0.000 rnn.py:518(GRU)
        3    0.000    0.000    0.000    0.000 feedparser.py:53(__init__)
       18    0.000    0.000    0.000    0.000 {method 'cast' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _dtype.py:1(<module>)
       58    0.000    0.000    0.000    0.000 <frozen _collections_abc>:315(__subclasshook__)
        4    0.000    0.000    0.000    0.000 function_base.py:1804(trim_zeros)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:119(__repr__)
        1    0.000    0.000    0.000    0.000 rnn.py:62(RNNBase)
       15    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 matcher_utils.py:31(InternalMatch)
        3    0.000    0.000    0.000    0.000 __init__.py:290(__getattr__)
        5    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
        3    0.000    0.000    0.000    0.000 _aliases.py:612(<genexpr>)
        2    0.000    0.000    0.000    0.000 datetime.py:1336(__new__)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2108(decorator)
        1    0.000    0.000    0.000    0.000 patches.py:973(PathPatch)
        2    0.000    0.000    0.000    0.000 core.py:2952(_update_from)
        8    0.000    0.000    0.000    0.000 copyreg.py:12(pickle)
        2    0.000    0.000    0.000    0.000 arrayprint.py:503(decorating_function)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:397(PythonKeyTracer)
        3    0.000    0.000    0.000    0.000 core.py:708(add_parse_action)
        2    0.000    0.000    0.000    0.000 libmpi.py:454(mpi_from_str)
        1    0.000    0.000    0.000    0.000 linalg.py:43(EighResult)
        1    0.000    0.000    0.000    0.000 io_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:1(<module>)
        2    0.000    0.000    0.000    0.000 typing.py:1211(__init__)
      8/2    0.000    0.000    0.000    0.000 densebasic.py:315(_rec_validate)
        1    0.000    0.000    0.000    0.000 decompogen.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:277(DeprecatedList)
       16    0.000    0.000    0.000    0.000 doccer.py:82(inherit_docstring_from)
        4    0.000    0.000    0.000    0.000 core.py:5381(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 sslproto.py:262(SSLProtocol)
        1    0.000    0.000    0.000    0.000 convolutions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tz.py:41(tzutc)
        1    0.000    0.000    0.000    0.000 process.py:71(BaseProcess)
        2    0.000    0.000    0.000    0.000 <frozen os>:687(__delitem__)
        3    0.000    0.000    0.000    0.000 {built-in method posix.putenv}
       26    0.000    0.000    0.000    0.000 tokenize.py:616(generate_tokens)
        1    0.000    0.000    0.000    0.000 subprocess.py:747(Popen)
       11    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2035(_preserve_type)
        1    0.000    0.000    0.000    0.000 nvtx.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:579(_calc_mode)
        8    0.000    0.000    0.000    0.000 util.py:119(clear)
        1    0.000    0.000    0.000    0.000 piecewise.py:65(Piecewise)
        1    0.000    0.000    0.000    0.000 unicode.py:31(unicode_set)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:165(_icdf_formula)
       36    0.000    0.000    0.000    0.000 _pytree.py:59(_list_unflatten)
        1    0.000    0.000    0.000    0.000 base64mime.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:527(Distribution)
        1    0.000    0.000    0.000    0.000 _cubature.py:29(CubatureRegion)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1015(<listcomp>)
       32    0.000    0.000    0.000    0.000 typing.py:2906(<genexpr>)
        8    0.000    0.000    0.000    0.000 rrule.py:77(<genexpr>)
        1    0.000    0.000    0.000    0.000 approximation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:642(BakomaFonts)
        2    0.000    0.000    0.000    0.000 module.py:2167(children)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:26(_apply)
        1    0.000    0.000    0.000    0.000 pareto.py:9(Pareto)
        1    0.000    0.000    0.000    0.000 function_docs.py:1(<module>)
        2    0.000    0.000    0.000    0.000 version.py:523(_cmpkey)
        1    0.000    0.000    0.000    0.000 mixture_same_family.py:9(MixtureSameFamily)
        1    0.000    0.000    0.000    0.000 animation.py:172(AbstractMovieWriter)
       50    0.000    0.000    0.000    0.000 typing.py:2018(<genexpr>)
        3    0.000    0.000    0.000    0.000 __init__.py:4998(_make_r_binary_op)
       76    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
        1    0.000    0.000    0.000    0.000 _suppression.py:12(Suppression)
        1    0.000    0.000    0.000    0.000 __init__.py:121(<listcomp>)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:12(ExpressionRawDomain)
        1    0.000    0.000    0.000    0.000 threading.py:1008(_set_tstate_lock)
        1    0.000    0.000    0.000    0.000 argparse.py:157(HelpFormatter)
        1    0.000    0.000    0.000    0.000 mock.py:1960(<setcomp>)
        1    0.000    0.000    0.000    0.000 hermite.py:1658(Hermite)
        1    0.000    0.000    0.000    0.000 _qmc.py:2312(MultivariateNormalQMC)
        1    0.000    0.000    0.000    0.000 textpath.py:18(TextToPath)
        1    0.000    0.000    0.000    0.000 compat.py:62(with_metaclass)
        6    0.000    0.000    0.000    0.000 rcsetup.py:228(_make_type_validator)
        1    0.000    0.000    0.000    0.000 gosper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:209(_InverseTransform)
        1    0.000    0.000    0.000    0.000 pythonrational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 theta.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _common.py:149(_tzinfo)
        7    0.000    0.000    0.000    0.000 {method 'read' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 core.py:321(condition_as_parse_action)
        1    0.000    0.000    0.000    0.000 core.py:3750(__init__)
        3    0.000    0.000    0.000    0.000 numbers.py:1397(from_coprime_ints)
        1    0.000    0.000    0.000    0.000 _mmio.py:248(MMFile)
        1    0.000    0.000    0.000    0.000 futures.py:30(Future)
        1    0.000    0.000    0.000    0.000 _methods.py:47(_sum)
       40    0.000    0.000    0.000    0.000 enum.py:92(_is_single_bit)
       43    0.000    0.000    0.000    0.000 dispatcher.py:120(register)
        1    0.000    0.000    0.000    0.000 facts.py:95(deduce_alpha_implications)
        1    0.000    0.000    0.000    0.000 modular.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:491(_parse_visible_devices)
        1    0.000    0.000    0.000    0.000 sdm.py:910(convert_to)
        1    0.000    0.000    0.000    0.000 mathtext.py:966(StixFonts)
        1    0.000    0.000    0.000    0.000 _spfun_stats.py:1(<module>)
       59    0.000    0.000    0.000    0.000 {function FreezableDefaultDict.__missing__ at 0x155272236b60}
        1    0.000    0.000    0.000    0.000 periodic_table.py:993(Species)
        1    0.000    0.000    0.000    0.000 __init__.py:112(<listcomp>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1657(rv_continuous)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1650(HermiteE)
        1    0.000    0.000    0.000    0.000 constructor.py:62(BaseConstructor)
        1    0.000    0.000    0.000    0.000 structure.py:3439(IMolecule)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2898(_icdf_dispatch)
       16    0.000    0.000    0.000    0.000 {method 'popitem' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 art3d.py:74(Text3D)
        2    0.000    0.000    0.000    0.000 charset.py:211(__init__)
        8    0.000    0.000    0.000    0.000 mock.py:322(_delegating_property)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4565(halflogistic_gen)
        1    0.000    0.000    0.000    0.000 _run_automation_details.py:12(RunAutomationDetails)
        1    0.000    0.000    0.000    0.000 sets.py:1819(EmptySet)
        1    0.000    0.000    0.000    0.000 groups.py:66(SymmetryGroup)
        1    0.000    0.000    0.000    0.000 chebyshev.py:1995(Chebyshev)
        7    0.000    0.000    0.000    0.000 core.py:2544(_arraymethod)
        1    0.000    0.000    0.000    0.000 outputs.py:5920(Vaspout)
        1    0.000    0.000    0.000    0.000 transformed_distribution.py:11(TransformedDistribution)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1701(skellam_gen)
        1    0.000    0.000    0.000    0.000 _savitzky_golay.py:1(<module>)
        1    0.000    0.000    0.000    0.000 qmc.py:1(<module>)
        2    0.000    0.000    0.000    0.000 weakref.py:164(__setitem__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5028(Mixture)
       16    0.000    0.000    0.000    0.000 _collections.py:23(freeze)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:104(_format_size)
       16    0.000    0.000    0.000    0.000 ctx_mp_python.py:597(make_mpf)
        7    0.000    0.000    0.000    0.000 dev.py:20(deprecated)
        1    0.000    0.000    0.000    0.000 std.py:76(TqdmDefaultWriteLock)
        1    0.000    0.000    0.000    0.000 laguerre.py:1606(Laguerre)
       93    0.000    0.000    0.000    0.000 {method 'ljust' of 'str' objects}
        3    0.000    0.000    0.000    0.000 blas.py:270(find_best_blas_type)
        1    0.000    0.000    0.000    0.000 finite_diff.py:1(<module>)
       56    0.000    0.000    0.000    0.000 __init__.py:1894(<genexpr>)
        1    0.000    0.000    0.000    0.000 datetime.py:893(date)
        1    0.000    0.000    0.000    0.000 _qmc.py:2486(MultinomialQMC)
        5    0.000    0.000    0.000    0.000 assume.py:305(__new__)
        1    0.000    0.000    0.000    0.000 sslproto.py:78(_SSLProtocolTransport)
        1    0.000    0.000    0.000    0.000 _rectangle.py:12(Rectangle)
        1    0.000    0.000    0.000    0.000 _stats_py.py:9096(QuantileTestResult)
        1    0.000    0.000    0.000    0.000 textplot.py:1(<module>)
       10    0.000    0.000    0.000    0.000 gaussiandomains.py:27(new)
        1    0.000    0.000    0.000    0.000 session.py:1(<module>)
       32    0.000    0.000    0.000    0.000 arraypad.py:33(_slice_at_axis)
        1    0.000    0.000    0.000    0.000 _lil.py:20(_lil_base)
        1    0.000    0.000    0.000    0.000 context.py:30(BaseContext)
        1    0.000    0.000    0.000    0.000 defmatrix.py:73(matrix)
        1    0.000    0.000    0.000    0.000 __init__.py:142(CudnnModule)
        1    0.000    0.000    0.000    0.000 conv.py:36(_ConvNd)
       74    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       15    0.000    0.000    0.000    0.000 weakref.py:427(__setitem__)
        1    0.000    0.000    0.000    0.000 resolver.py:106(BaseResolver)
       11    0.000    0.000    0.000    0.000 threading.py:90(RLock)
        1    0.000    0.000    0.000    0.000 observer.py:611(PerChannelMinMaxObserver)
        1    0.000    0.000    0.000    0.000 quiver.py:904(Barbs)
        2    0.000    0.000    0.000    0.000 _helpers.py:310(is_numpy_namespace)
        1    0.000    0.000    0.000    0.000 single.py:42(SingleODEProblem)
        1    0.000    0.000    0.000    0.000 _crash_handler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:32(Complex)
        3    0.000    0.000    0.000    0.000 libmpf.py:59(prec_to_dps)
        1    0.000    0.000    0.000    0.000 repmatrix.py:23(RepMatrix)
       41    0.000    0.000    0.000    0.000 decorators.py:83(call_highest_priority)
       12    0.000    0.000    0.000    0.000 typing.py:389(<genexpr>)
       14    0.000    0.000    0.000    0.000 util.py:30(__init__)
        1    0.000    0.000    0.000    0.000 julia.py:48(JuliaCodePrinter)
        1    0.000    0.000    0.000    0.000 shape_prop.py:11(TensorMetadata)
        3    0.000    0.000    0.000    0.000 feedparser.py:70(close)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:10(Gcf)
        1    0.000    0.000    0.000    0.000 computed_entries.py:696(GibbsComputedStructureEntry)
        1    0.000    0.000    0.000    0.000 tz.py:132(tzoffset)
        2    0.000    0.000    0.000    0.000 selectors.py:583(_can_use)
        1    0.000    0.000    0.000    0.000 multinomial.py:11(Multinomial)
        1    0.000    0.000    0.000    0.000 __init__.py:939(ByteStorage)
        1    0.000    0.000    0.000    0.000 _edge.py:12(Edge)
        1    0.000    0.000    0.000    0.000 _cobyla_py.py:1(<module>)
        3    0.000    0.000    0.000    0.000 legend_handler.py:341(__init__)
        1    0.000    0.000    0.000    0.000 inputs.py:791(Incar)
        1    0.000    0.000    0.000    0.000 tripcolor.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rk.py:183(RK23)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1431(__init__)
        1    0.000    0.000    0.000    0.000 _sarif_log.py:16(SarifLog)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2067(_num_parameters)
        1    0.000    0.000    0.000    0.000 _thread_flow.py:16(ThreadFlow)
        1    0.000    0.000    0.000    0.000 numbers.py:2955(motzkin)
        1    0.000    0.000    0.000    0.000 trajectory.py:42(Trajectory)
        1    0.000    0.000    0.000    0.000 collections.py:1233(RegularPolyCollection)
        1    0.000    0.000    0.000    0.000 font_manager.py:1022(FontManager)
        1    0.000    0.000    0.000    0.000 transformer.py:370(TransformerEncoderLayer)
        1    0.000    0.000    0.000    0.000 file_util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 parameter.py:81(UninitializedTensorMixin)
        1    0.000    0.000    0.000    0.000 sparse.py:226(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 transformer.py:593(TransformerDecoderLayer)
        1    0.000    0.000    0.000    0.000 operations.py:29(SymmOp)
       13    0.000    0.000    0.000    0.000 enum.py:775(__iter__)
        5    0.000    0.000    0.000    0.000 __init__.py:750(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10826(uniform_gen)
        1    0.000    0.000    0.000    0.000 polynomialring.py:10(PolynomialRing)
        1    0.000    0.000    0.000    0.000 _message.py:12(Message)
        8    0.000    0.000    0.000    0.000 __init__.py:56(__init_subclass__)
        1    0.000    0.000    0.000    0.000 linear.py:9(LinearPackedParams)
        1    0.000    0.000    0.000    0.000 __init__.py:869(ByteStorage)
        1    0.000    0.000    0.000    0.000 uuid.py:85(UUID)
       14    0.000    0.000    0.000    0.000 libelefun.py:85(constant_memo)
       85    0.000    0.000    0.000    0.000 _compat_pickle.py:167(<genexpr>)
       14    0.000    0.000    0.000    0.000 mixins.py:26(_reflected_binary_method)
        1    0.000    0.000    0.000    0.000 _physical_location.py:17(PhysicalLocation)
       93    0.000    0.000    0.000    0.000 composition.py:542(num_atoms)
        1    0.000    0.000    0.000    0.000 core.py:5959(__init__)
        1    0.000    0.000    0.000    0.000 animation.py:256(MovieWriter)
        1    0.000    0.000    0.000    0.000 octave.py:65(OctaveCodePrinter)
        1    0.000    0.000    0.000    0.000 tight_layout.py:1(<module>)
       36    0.000    0.000    0.000    0.000 __init__.py:888(__bool__)
        1    0.000    0.000    0.000    0.000 ImageChops.py:1(<module>)
        1    0.000    0.000    0.000    0.000 euler.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:425(_reduce_with_dtype)
        1    0.000    0.000    0.000    0.000 _pade.py:1(<module>)
        1    0.000    0.000    0.000    0.000 qp_subproblem.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gzip.py:529(_read_eof)
        2    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 _dtype_ctypes.py:1(<module>)
        6    0.000    0.000    0.000    0.000 parse.py:786(__getattr__)
       97    0.000    0.000    0.000    0.000 fromnumeric.py:1021(_argsort_dispatcher)
        1    0.000    0.000    0.000    0.000 _stack_frame.py:12(StackFrame)
        1    0.000    0.000    0.000    0.000 lsmr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _decomposition_utils.py:1(<module>)
       15    0.000    0.000    0.000    0.000 _helpers.py:660(_check_device)
       32    0.000    0.000    0.000    0.000 arraypad.py:120(<genexpr>)
        1    0.000    0.000    0.000    0.000 context.py:79(_compose)
       10    0.000    0.000    0.000    0.000 axis.py:1935(_make_getset_interval)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1832(tol)
        1    0.000    0.000    0.000    0.000 _node.py:17(Node)
        1    0.000    0.000    0.000    0.000 tempfile.py:665(SpooledTemporaryFile)
       41    0.000    0.000    0.000    0.000 typing.py:2835(<listcomp>)
        1    0.000    0.000    0.000    0.000 legendre.py:1619(Legendre)
        1    0.000    0.000    0.000    0.000 transforms.py:687(AffineTransform)
        1    0.000    0.000    0.000    0.000 testing.py:126(TestParseResultsAsserts)
        1    0.000    0.000    0.000    0.000 polytools.py:7556(GroebnerBasis)
        1    0.000    0.000    0.000    0.000 image.py:1010(NonUniformImage)
        1    0.000    0.000    0.000    0.000 _artifact_content.py:15(ArtifactContent)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3635(_pdf_formula)
        1    0.000    0.000    0.000    0.000 patches.py:2415(_Base)
        1    0.000    0.000    0.000    0.000 _attachment.py:18(Attachment)
        1    0.000    0.000    0.000    0.000 hb.py:354(HBMatrixType)
        8    0.000    0.000    0.000    0.000 fontconfig_pattern.py:144(_name)
        1    0.000    0.000    0.000    0.000 dviread.py:789(PsfontsMap)
        1    0.000    0.000    0.000    0.000 _survival.py:17(EmpiricalDistributionFunction)
        1    0.000    0.000    0.000    0.000 dist.py:1109(DistributionMetadata)
        1    0.000    0.000    0.000    0.000 rref.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:192(<dictcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:1327(_TorchCompileInductorWrapper)
       15    0.000    0.000    0.000    0.000 ssl.py:1000(_sslcopydoc)
        1    0.000    0.000    0.000    0.000 random.py:284(randrange)
        1    0.000    0.000    0.000    0.000 stringpict.py:22(stringPict)
       30    0.000    0.000    0.000    0.000 _array_api.py:525(<listcomp>)
       59    0.000    0.000    0.000    0.000 <frozen _collections_abc>:409(__subclasshook__)
        1    0.000    0.000    0.000    0.000 dev.py:159(__call__)
       13    0.000    0.000    0.000    0.000 {method 'index' of 'tuple' objects}
        1    0.000    0.000    0.000    0.000 _property_bag.py:10(PropertyBag)
        1    0.000    0.000    0.000    0.000 linalg.py:47(QRResult)
        1    0.000    0.000    0.000    0.000 _data.py:20(_data_matrix)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:117(_sample_formula)
        1    0.000    0.000    0.000    0.000 conditionset.py:19(ConditionSet)
        1    0.000    0.000    0.000    0.000 _bracket.py:1(<module>)
        1    0.000    0.000    0.000    0.000 comments.py:706(CommentedMap)
        1    0.000    0.000    0.000    0.000 conv.py:675(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 blocking_input.py:101(BlockingMouseInput)
        4    0.000    0.000    0.000    0.000 libmpf.py:631(mpf_le)
       14    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)
       36    0.000    0.000    0.000    0.000 symbol.py:410(_hashable_content)
       40    0.000    0.000    0.000    0.000 typing_extensions.py:723(__hash__)
        1    0.000    0.000    0.000    0.000 polyclasses.py:2448(DMF)
        1    0.000    0.000    0.000    0.000 _lobpcg.py:695(LOBPCG)
        9    0.000    0.000    0.000    0.000 __init__.py:163(__new__)
        1    0.000    0.000    0.000    0.000 structure.py:4137(Structure)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._distributed_c10d.set_debug_level_from_env}
        1    0.000    0.000    0.000    0.000 _external_property_file_reference.py:15(ExternalPropertyFileReference)
        1    0.000    0.000    0.000    0.000 linalg.py:51(SlogdetResult)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:71(_export_c_types)
        1    0.000    0.000    0.000    0.000 _edge_traversal.py:12(EdgeTraversal)
        8    0.000    0.000    0.000    0.000 __init__.py:150(<genexpr>)
        1    0.000    0.000    0.000    0.000 _linprog_simplex.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _script.py:486(ScriptModule)
        1    0.000    0.000    0.000    0.000 legend_handler.py:545(__init__)
        1    0.000    0.000    0.000    0.000 client.py:239(HTTPResponse)
        1    0.000    0.000    0.000    0.000 _artifact_location.py:12(ArtifactLocation)
        1    0.000    0.000    0.000    0.000 matrixbase.py:3796(_handle_creation_inputs)
        1    0.000    0.000    0.000    0.000 _location_relationship.py:12(LocationRelationship)
        1    0.000    0.000    0.000    0.000 tasks.py:78(Task)
        1    0.000    0.000    0.000    0.000 _finite_differences.py:1(<module>)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1692(reset_cache)
        1    0.000    0.000    0.000    0.000 core.py:2420(__init__)
        1    0.000    0.000    0.000    0.000 context.py:297(passes)
        1    0.000    0.000    0.000    0.000 mathematica.py:122(MCodePrinter)
        1    0.000    0.000    0.000    0.000 _script.py:562(RecursiveScriptModule)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:122(<listcomp>)
        1    0.000    0.000    0.000    0.000 _csr.py:18(_csr_base)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 __init__.py:353(get_device_name)
        3    0.000    0.000    0.000    0.000 _policybase.py:311(header_fetch_parse)
        1    0.000    0.000    0.000    0.000 function.py:517(once_differentiable)
        5    0.000    0.000    0.000    0.000 _torch_docs.py:28(<dictcomp>)
        1    0.000    0.000    0.000    0.000 formal.py:968(FormalPowerSeries)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:282(define_parameters)
        8    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:254(_requires_builtin_wrapper)
       59    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
       59    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1846(cache_policy)
        1    0.000    0.000    0.000    0.000 generators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:10(ArrayComprehension)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:172(<lambda>)
       11    0.000    0.000    0.000    0.000 eigen.py:41(defun)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:386(_set_prec)
       13    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 _version.py:136(__lt__)
        2    0.000    0.000    0.000    0.000 matexpr.py:81(__new__)
        1    0.000    0.000    0.000    0.000 socket.py:214(socket)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1013(<listcomp>)
        1    0.000    0.000    0.000    0.000 sparse.py:13(Embedding)
        1    0.000    0.000    0.000    0.000 core.py:4918(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:21(__deprecated_private_func)
       19    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        1    0.000    0.000    0.000    0.000 numbers.py:294(Integral)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:151(_set_up_aliases)
        5    0.000    0.000    0.000    0.000 __init__.py:10(set_module)
        1    0.000    0.000    0.000    0.000 ast.py:74(_convert_signed_num)
        1    0.000    0.000    0.000    0.000 backend_bases.py:733(GraphicsContextBase)
        1    0.000    0.000    0.000    0.000 pickle.py:407(_Pickler)
        1    0.000    0.000    0.000    0.000 residues.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _reporting_descriptor_relationship.py:16(ReportingDescriptorRelationship)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4981(invgauss_gen)
        1    0.000    0.000    0.000    0.000 _internal.py:240(_missing_ctypes)
        1    0.000    0.000    0.000    0.000 _tool_component_reference.py:12(ToolComponentReference)
        1    0.000    0.000    0.000    0.000 _bsplines.py:69(BSpline)
        2    0.000    0.000    0.000    0.000 {built-in method posix.access}
       17    0.000    0.000    0.000    0.000 __init__.py:438(<dictcomp>)
       20    0.000    0.000    0.000    0.000 enum.py:1609(_simple_enum)
        1    0.000    0.000    0.000    0.000 repr.py:18(ReprPrinter)
        1    0.000    0.000    0.000    0.000 defchararray.py:1922(chararray)
        1    0.000    0.000    0.000    0.000 matrices.py:9(_matrix)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:58(MPContext)
        2    0.000    0.000    0.000    0.000 operations.py:613(__init__)
        1    0.000    0.000    0.000    0.000 queues.py:21(Queue)
       55    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1867(validation_policy)
       13    0.000    0.000    0.000    0.000 enum.py:116(_iter_bits_lsb)
        1    0.000    0.000    0.000    0.000 numpy.py:37(NumPyPrinter)
       10    0.000    0.000    0.000    0.000 version.py:319(<listcomp>)
        7    0.000    0.000    0.000    0.000 getlimits.py:709(max)
        1    0.000    0.000    0.000    0.000 argparse.py:1142(_SubParsersAction)
        1    0.000    0.000    0.000    0.000 distance.py:1796(MetricInfo)
        4    0.000    0.000    0.000    0.000 results.py:224(__setitem__)
        1    0.000    0.000    0.000    0.000 ticker.py:232(Formatter)
        1    0.000    0.000    0.000    0.000 libmpc.py:205(mpc_div_mpf)
       12    0.000    0.000    0.000    0.000 patches.py:1883(<genexpr>)
        1    0.000    0.000    0.000    0.000 qfunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _array_api.py:659(_XPSphinxCapability)
        1    0.000    0.000    0.000    0.000 memoization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tzpath.py:31(_parse_python_tzpath)
        1    0.000    0.000    0.000    0.000 mock.py:2158(AsyncMockMixin)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:145(__float__)
        1    0.000    0.000    0.000    0.000 backend_registry.py:43(backend_registered)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3121(_one)
       33    0.000    0.000    0.000    0.000 _collections.py:24(<lambda>)
        1    0.000    0.000    0.000    0.000 base_backend.py:49(Plot)
        6    0.000    0.000    0.000    0.000 glob.py:222(has_magic)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:99(__init__)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:176(<lambda>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:403(_get_formatdict)
        1    0.000    0.000    0.000    0.000 dir_util.py:30(wrap)
       10    0.000    0.000    0.000    0.000 _text.py:90(lower)
        1    0.000    0.000    0.000    0.000 fusion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 common.py:465(<dictcomp>)
        6    0.000    0.000    0.000    0.000 ctx_mp_python.py:82(mpf_convert_arg)
        1    0.000    0.000    0.000    0.000 complexfield.py:16(ComplexField)
        1    0.000    0.000    0.000    0.000 polynomial.py:1077(poly1d)
        1    0.000    0.000    0.000    0.000 transforms.py:1080(LockableBbox)
        1    0.000    0.000    0.000    0.000 ssl.py:845(SSLObject)
       29    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 datapipe.py:212(MapDataPipe)
        1    0.000    0.000    0.000    0.000 utils.py:17(LinearBlockSparsePattern)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2331(_median_dispatch)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:170(<lambda>)
        3    0.000    0.000    0.000    0.000 core.py:5093(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 _conversion.py:17(Conversion)
        1    0.000    0.000    0.000    0.000 hyper.py:391(meijerg)
        1    0.000    0.000    0.000    0.000 abc.py:14(ResourceReader)
        1    0.000    0.000    0.000    0.000 core.py:1329(make_mask_descr)
        1    0.000    0.000    0.000    0.000 rnn.py:178(LSTMCell)
        1    0.000    0.000    0.000    0.000 ops.py:726(add_comparative_ops)
        7    0.000    0.000    0.000    0.000 fractions.py:277(_operator_fallbacks)
        1    0.000    0.000    0.000    0.000 conv.py:39(Conv1d)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5334(random_table_gen)
        1    0.000    0.000    0.000    0.000 random.py:103(Random)
        1    0.000    0.000    0.000    0.000 computed_entries.py:287(ComputedEntry)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:623(convert)
        1    0.000    0.000    0.000    0.000 canonical_constraint.py:5(CanonicalConstraint)
        1    0.000    0.000    0.000    0.000 rcode.py:78(RCodePrinter)
        1    0.000    0.000    0.000    0.000 _trustregion_exact.py:185(IterativeSubproblem)
        1    0.000    0.000    0.000    0.000 coroutines.py:1(<module>)
       24    0.000    0.000    0.000    0.000 dviread.py:168(<listcomp>)
        1    0.000    0.000    0.000    0.000 fourier.py:127(FourierSeries)
        1    0.000    0.000    0.000    0.000 optimizer.py:154(Optimizer)
        1    0.000    0.000    0.000    0.000 {built-in method time.localtime}
       38    0.000    0.000    0.000    0.000 ops.py:25(set_doc)
        1    0.000    0.000    0.000    0.000 parser.py:102(Parser)
        1    0.000    0.000    0.000    0.000 re.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:555(__init__)
       13    0.000    0.000    0.000    0.000 basic.py:539(__ne__)
       10    0.000    0.000    0.000    0.000 dataclasses.py:847(<listcomp>)
        1    0.000    0.000    0.000    0.000 zipfile.py:1216(ZipFile)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:60(FakeQuantizeBase)
        1    0.000    0.000    0.000    0.000 _graph.py:17(Graph)
       36    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:39(_mpf)
        6    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 digits.py:1(<module>)
        1    0.000    0.000    0.000    0.000 client.py:108(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _matrix.py:1(spmatrix)
        1    0.000    0.000    0.000    0.000 debug.py:1(<module>)
       28    0.000    0.000    0.000    0.000 _decorator.py:14(__init__)
        1    0.000    0.000    0.000    0.000 reductions.py:52(__init__)
        1    0.000    0.000    0.000    0.000 _fix.py:16(Fix)
       11    0.000    0.000    0.000    0.000 windows.py:53(decorator)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:3172(_ndim_dispatcher)
        1    0.000    0.000    0.000    0.000 core.py:238(<listcomp>)
        5    0.000    0.000    0.000    0.000 ctx_base.py:458(memoize)
        1    0.000    0.000    0.000    0.000 _multiformat_message_string.py:12(MultiformatMessageString)
        1    0.000    0.000    0.000    0.000 threading.py:389(notify_all)
       38    0.000    0.000    0.000    0.000 ops.py:33(set_doc_string)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:382(PngStream)
        1    0.000    0.000    0.000    0.000 normal.py:12(Normal)
       43    0.000    0.000    0.000    0.000 _compat_pickle.py:165(<genexpr>)
        7    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 numpy.py:9(<listcomp>)
       58    0.000    0.000    0.000    0.000 _utils.py:770(__init__)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:359(_mpc)
        1    0.000    0.000    0.000    0.000 finitefield.py:108(FiniteField)
        1    0.000    0.000    0.000    0.000 sets.py:1035(Interval)
        1    0.000    0.000    0.000    0.000 subsets.py:6(Subset)
        2    0.000    0.000    0.000    0.000 six.py:119(_resolve)
       58    0.000    0.000    0.000    0.000 units.py:138(<genexpr>)
        1    0.000    0.000    0.000    0.000 dataclasses.py:1224(fields)
        1    0.000    0.000    0.000    0.000 sparse.py:9(Embedding)
        1    0.000    0.000    0.000    0.000 dispatcher.py:89(Dispatcher)
        1    0.000    0.000    0.000    0.000 tensor.py:416(_TensorDataLazyEvaluator)
        1    0.000    0.000    0.000    0.000 art3d.py:128(Line3D)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:75(NumExprPrinter)
        1    0.000    0.000    0.000    0.000 _text.py:7(FoldedCase)
        1    0.000    0.000    0.000    0.000 modules.py:1280(ModuleElement)
        1    0.000    0.000    0.000    0.000 subspaces.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:507(DifferentialEvolutionSolver)
       18    0.000    0.000    0.000    0.000 _data.py:142(_create_method)
        1    0.000    0.000    0.000    0.000 setupcfg.py:228(ConfigHandler)
        1    0.000    0.000    0.000    0.000 _reduction.py:1(<module>)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:379(MinMaxBase)
        1    0.000    0.000    0.000    0.000 linear.py:99(Linear)
        1    0.000    0.000    0.000    0.000 dataframe_wrapper.py:23(PandasWrapper)
        1    0.000    0.000    0.000    0.000 font_manager.py:618(FontProperties)
        1    0.000    0.000    0.000    0.000 _polyutils.py:1(<module>)
        9    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:388(_attrgetter)
       10    0.000    0.000    0.000    0.000 symbol.py:798(<listcomp>)
        2    0.000    0.000    0.000    0.000 gzip.py:463(_init_read)
        5    0.000    0.000    0.000    0.000 <frozen _collections_abc>:489(_type_repr)
        1    0.000    0.000    0.000    0.000 adaptive.py:19(AdaptiveLogSoftmaxWithLoss)
        1    0.000    0.000    0.000    0.000 conv.py:806(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 queue.py:28(Queue)
        1    0.000    0.000    0.000    0.000 data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _tool.py:12(Tool)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1759(<listcomp>)
        1    0.000    0.000    0.000    0.000 binrel.py:15(BinaryRelation)
        7    0.000    0.000    0.000    0.000 graph.py:57(_register_custom_builtin)
        1    0.000    0.000    0.000    0.000 pycode.py:763(<listcomp>)
       44    0.000    0.000    0.000    0.000 core.py:4405(<genexpr>)
        1    0.000    0.000    0.000    0.000 conv.py:16(_ConvNd)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:444(<listcomp>)
        1    0.000    0.000    0.000    0.000 ndim_array.py:86(NDimArray)
        1    0.000    0.000    0.000    0.000 contour.py:48(ContourLabeler)
        1    0.000    0.000    0.000    0.000 integerring.py:20(IntegerRing)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:506(rv_frozen)
        1    0.000    0.000    0.000    0.000 _bsr.py:24(_bsr_base)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:46(PythonMPQ)
        1    0.000    0.000    0.000    0.000 bessel.py:1207(hn2)
        1    0.000    0.000    0.000    0.000 _chandrupatla.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'normal' of 'numpy.random._generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 relational.py:65(Relational)
        1    0.000    0.000    0.000    0.000 decorator.py:85(conserve_mpmath_dps)
        1    0.000    0.000    0.000    0.000 axis3d.py:477(YAxis)
        1    0.000    0.000    0.000    0.000 _cobyqa_py.py:1(<module>)
       45    0.000    0.000    0.000    0.000 ctx_iv.py:394(<lambda>)
        1    0.000    0.000    0.000    0.000 core.py:87(Magmom)
       37    0.000    0.000    0.000    0.000 numbers.py:1761(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 datetime.py:573(timedelta)
        1    0.000    0.000    0.000    0.000 line.py:50(LinearEntity)
        1    0.000    0.000    0.000    0.000 polygon.py:28(Polygon)
        1    0.000    0.000    0.000    0.000 report.py:3(ReportBase)
        1    0.000    0.000    0.000    0.000 _csc.py:17(_csc_base)
        1    0.000    0.000    0.000    0.000 _stdlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _infra.py:272(<setcomp>)
        1    0.000    0.000    0.000    0.000 cse_opts.py:1(<module>)
        1    0.000    0.000    0.000    0.000 context.py:270(raises)
        3    0.000    0.000    0.000    0.000 zipfile.py:1868(__del__)
        1    0.000    0.000    0.000    0.000 tfqmr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 units.py:277(FloatWithUnit)
        9    0.000    0.000    0.000    0.000 core.py:3771(parseImpl)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:418(_mode_formula)
       36    0.000    0.000    0.000    0.000 _pytree.py:56(_list_flatten)
        1    0.000    0.000    0.000    0.000 conv.py:961(ConvTranspose3d)
       77    0.000    0.000    0.000    0.000 signal.py:16(<lambda>)
       52    0.000    0.000    0.000    0.000 pathlib.py:327(_select_from)
        1    0.000    0.000    0.000    0.000 pooling.py:16(_MaxPoolNd)
        1    0.000    0.000    0.000    0.000 __init__.py:1803(LoggerAdapter)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:348(_sample_formula)
        1    0.000    0.000    0.000    0.000 dirichlet.py:30(Dirichlet)
        1    0.000    0.000    0.000    0.000 settings.py:27(JonesFaithfulTransformation)
        1    0.000    0.000    0.000    0.000 _interpolate.py:173(interp1d)
       38    0.000    0.000    0.000    0.000 observer.py:53(__init__)
        2    0.000    0.000    0.000    0.000 pathlib.py:777(parent)
        1    0.000    0.000    0.000    0.000 __init__.py:98(<listcomp>)
        2    0.000    0.000    0.000    0.000 {method 'replace' of 'code' objects}
        1    0.000    0.000    0.000    0.000 modularinteger.py:15(ModularInteger)
        1    0.000    0.000    0.000    0.000 _binary.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colors.py:81(__init__)
       11    0.000    0.000    0.000    0.000 legend_handler.py:59(__init__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:816(matches)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:307(_pdf_formula)
        1    0.000    0.000    0.000    0.000 dbapi2.py:54(register_adapters_and_converters)
        1    0.000    0.000    0.000    0.000 remote_device.py:6(_remote_device)
       36    0.000    0.000    0.000    0.000 discovery.py:252(<genexpr>)
        1    0.000    0.000    0.000    0.000 _base.py:352(ProductNestedFixed)
        1    0.000    0.000    0.000    0.000 free_groups.py:350(FreeGroupElement)
        6    0.000    0.000    0.000    0.000 monkey.py:60(<genexpr>)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:790(items)
        5    0.000    0.000    0.000    0.000 core.py:6175(token_map)
        1    0.000    0.000    0.000    0.000 ast.py:70(_convert_num)
        1    0.000    0.000    0.000    0.000 domainscalar.py:17(DomainScalar)
        1    0.000    0.000    0.000    0.000 tensor.py:98(_IndexStructure)
        1    0.000    0.000    0.000    0.000 pycode.py:664(CmathPrinter)
        1    0.000    0.000    0.000    0.000 core.py:3039(Regex)
        1    0.000    0.000    0.000    0.000 _deprecate.py:1(<module>)
       74    0.000    0.000    0.000    0.000 util.py:245(no_escape_re_range_char)
        2    0.000    0.000    0.000    0.000 reprlib.py:9(recursive_repr)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:994(wrap)
       37    0.000    0.000    0.000    0.000 function_base.py:19(_linspace_dispatcher)
        1    0.000    0.000    0.000    0.000 analyzer.py:84(SpacegroupAnalyzer)
        1    0.000    0.000    0.000    0.000 __init__.py:37(FoldedCase)
       21    0.000    0.000    0.000    0.000 symbolic_opset9.py:298(_export)
        3    0.000    0.000    0.000    0.000 message.py:150(__init__)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:16(GaussianElement)
        1    0.000    0.000    0.000    0.000 iterators.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:1315(_replace_dtype_fields)
        1    0.000    0.000    0.000    0.000 distance.py:1984(<dictcomp>)
        1    0.000    0.000    0.000    0.000 axis.py:1965(XAxis)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1221(StateSpace)
        1    0.000    0.000    0.000    0.000 figure.py:47(_AxesStack)
        1    0.000    0.000    0.000    0.000 __init__.py:1148(<listcomp>)
        1    0.000    0.000    0.000    0.000 tensor.py:812(__init__)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:70(Embedding)
        1    0.000    0.000    0.000    0.000 _builtins.py:114(_gen_torch_functional_registered_ops)
        1    0.000    0.000    0.000    0.000 threading.py:838(Thread)
        1    0.000    0.000    0.000    0.000 _lebedev.py:1(<module>)
        6    0.000    0.000    0.000    0.000 libmpf.py:653(mpf_pos)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:46(LayoutBox)
        1    0.000    0.000    0.000    0.000 _dia.py:20(_dia_base)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:85(add)
        8    0.000    0.000    0.000    0.000 relativedelta.py:13(<genexpr>)
        1    0.000    0.000    0.000    0.000 dos.py:171(Dos)
        1    0.000    0.000    0.000    0.000 matexpr.py:739(_LeftRightArgs)
        1    0.000    0.000    0.000    0.000 join.py:43(Joinable)
        1    0.000    0.000    0.000    0.000 _testutils.py:138(_TestPythranFunc)
        1    0.000    0.000    0.000    0.000 bessel.py:1151(hn1)
        1    0.000    0.000    0.000    0.000 pydoc.py:1159(TextDoc)
        1    0.000    0.000    0.000    0.000 is_from_package.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:145(__neg__)
        1    0.000    0.000    0.000    0.000 rnn.py:111(RNNCell)
        1    0.000    0.000    0.000    0.000 ImagePalette.py:31(ImagePalette)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:195(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 constructor.py:348(SafeConstructor)
        1    0.000    0.000    0.000    0.000 inputs.py:3075(VaspInput)
        1    0.000    0.000    0.000    0.000 __init__.py:221(<dictcomp>)
       23    0.000    0.000    0.000    0.000 functools.py:972(__set_name__)
        1    0.000    0.000    0.000    0.000 serializer.py:33(Serializer)
        1    0.000    0.000    0.000    0.000 core.py:80(__compat__)
        1    0.000    0.000    0.000    0.000 polyhedron.py:1011(<listcomp>)
        5    0.000    0.000    0.000    0.000 datetime.py:528(_check_time_fields)
        1    0.000    0.000    0.000    0.000 _covariance.py:11(Covariance)
        1    0.000    0.000    0.000    0.000 units.py:141(<dictcomp>)
        1    0.000    0.000    0.000    0.000 std.py:131(Bar)
        2    0.000    0.000    0.000    0.000 typing.py:3089(__init__)
        1    0.000    0.000    0.000    0.000 indexed.py:362(IndexedBase)
        1    0.000    0.000    0.000    0.000 upsampling.py:213(UpsamplingBilinear2d)
       12    0.000    0.000    0.000    0.000 doccer.py:139(extend_notes_in_docstring)
        1    0.000    0.000    0.000    0.000 transforms.py:900(StickBreakingTransform)
       31    0.000    0.000    0.000    0.000 _base.py:51(__init__)
        1    0.000    0.000    0.000    0.000 memory_format.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1105(EvaluateFalseTransformer)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:225(from_rep)
        2    0.000    0.000    0.000    0.000 reprlib.py:12(decorating_function)
        1    0.000    0.000    0.000    0.000 _ltisys.py:490(TransferFunction)
       32    0.000    0.000    0.000    0.000 decorators.py:196(sympify_return)
        1    0.000    0.000    0.000    0.000 operations.py:516(MagSymmOp)
        3    0.000    0.000    0.000    0.000 core.py:714(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:391(IndependentTransform)
        1    0.000    0.000    0.000    0.000 collections.py:1824(TriMesh)
        1    0.000    0.000    0.000    0.000 deutils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 observer.py:1365(RecordingObserver)
       21    0.000    0.000    0.000    0.000 _script.py:940(_make_fail)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:14(GMPYIntegerRing)
        1    0.000    0.000    0.000    0.000 __init__.py:949(DoubleStorage)
        1    0.000    0.000    0.000    0.000 _replacement.py:16(Replacement)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1279(BPoly)
        1    0.000    0.000    0.000    0.000 relativedelta.py:18(relativedelta)
        1    0.000    0.000    0.000    0.000 _configuration_override.py:16(ConfigurationOverride)
        3    0.000    0.000    0.000    0.000 arrayprint.py:1415(dtype_is_implied)
        1    0.000    0.000    0.000    0.000 modules.py:204(Module)
        1    0.000    0.000    0.000    0.000 _artifact_change.py:16(ArtifactChange)
       13    0.000    0.000    0.000    0.000 mixins.py:36(_inplace_binary_method)
        1    0.000    0.000    0.000    0.000 dos.py:395(FermiDos)
        5    0.000    0.000    0.000    0.000 {built-in method posix.register_at_fork}
        1    0.000    0.000    0.000    0.000 nadam.py:10(NAdam)
        1    0.000    0.000    0.000    0.000 difflib.py:44(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 error_functions.py:1502(li)
        1    0.000    0.000    0.000    0.000 unary.py:75(<listcomp>)
       78    0.000    0.000    0.000    0.000 signal.py:21(<lambda>)
        1    0.000    0.000    0.000    0.000 printer.py:235(Printer)
        6    0.000    0.000    0.000    0.000 basic.py:149(<genexpr>)
        1    0.000    0.000    0.000    0.000 _digraph.py:5(DiGraph)
        1    0.000    0.000    0.000    0.000 numbers.py:147(Real)
       15    0.000    0.000    0.000    0.000 libelefun.py:106(def_mpf_constant)
        4    0.000    0.000    0.000    0.000 kind.py:75(__new__)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2349(_mode_dispatch)
        7    0.000    0.000    0.000    0.000 {method 'deleter' of 'property' objects}
        1    0.000    0.000    0.000    0.000 _aliases.py:122(ones)
        3    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 operator_support.py:27(OperatorSupportBase)
        1    0.000    0.000    0.000    0.000 plane.py:30(Plane)
       10    0.000    0.000    0.000    0.000 bz2.py:121(closed)
        1    0.000    0.000    0.000    0.000 _factories.py:56(__init__)
       14    0.000    0.000    0.000    0.000 pathlib.py:94(join_parsed_parts)
       13    0.000    0.000    0.000    0.000 _internal.py:920(npy_ctypes_check)
        1    0.000    0.000    0.000    0.000 compositedomain.py:9(CompositeDomain)
       29    0.000    0.000    0.000    0.000 core.py:4695(recurse)
       30    0.000    0.000    0.000    0.000 symbolic_opset9.py:289(_apply_params)
        1    0.000    0.000    0.000    0.000 bandstructure.py:38(Kpoint)
       32    0.000    0.000    0.000    0.000 expr.py:185(_hashable_content)
        3    0.000    0.000    0.000    0.000 legend_handler.py:212(__init__)
        3    0.000    0.000    0.000    0.000 six.py:85(_import_module)
        1    0.000    0.000    0.000    0.000 collections.py:887(_CollectionWithSizes)
        1    0.000    0.000    0.000    0.000 mathml.py:84(MathMLContentPrinter)
        1    0.000    0.000    0.000    0.000 _imp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:8(OneHotCategorical)
        1    0.000    0.000    0.000    0.000 hyper.py:90(hyper)
        1    0.000    0.000    0.000    0.000 outputs.py:5666(Waveder)
        1    0.000    0.000    0.000    0.000 _covariance.py:463(CovViaPrecision)
        1    0.000    0.000    0.000    0.000 _ops.py:597(__init__)
        5    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1037(_resolve_name)
       15    0.000    0.000    0.000    0.000 math2.py:27(_mathfun_real)
        1    0.000    0.000    0.000    0.000 core.py:191(<listcomp>)
        1    0.000    0.000    0.000    0.000 _code_flow.py:16(CodeFlow)
        1    0.000    0.000    0.000    0.000 art3d.py:246(Line3DCollection)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1407(<listcomp>)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2461(_pdf_dispatch)
       13    0.000    0.000    0.000    0.000 _conversions.py:38(_make_conversion_method)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3125(_constants)
        1    0.000    0.000    0.000    0.000 outputs.py:4596(Xdatcar)
        1    0.000    0.000    0.000    0.000 bz2.py:131(seekable)
        1    0.000    0.000    0.000    0.000 exponential.py:10(Exponential)
       18    0.000    0.000    0.000    0.000 __init__.py:788(__init__)
       31    0.000    0.000    0.000    0.000 laplace.py:48(DEBUG_WRAP)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:24(BlockMatrix)
        1    0.000    0.000    0.000    0.000 maple.py:84(MapleCodePrinter)
        1    0.000    0.000    0.000    0.000 linear.py:67(Linear)
       32    0.000    0.000    0.000    0.000 decorators.py:210(__init__)
       20    0.000    0.000    0.000    0.000 _parser.py:160(__delitem__)
        1    0.000    0.000    0.000    0.000 linear.py:17(LinearPackedParams)
       10    0.000    0.000    0.000    0.000 rcsetup.py:765(_validate_greaterequal0_lessthan1)
        2    0.000    0.000    0.000    0.000 module.py:2176(named_children)
        1    0.000    0.000    0.000    0.000 _resampling.py:2175(PermutationMethod)
       18    0.000    0.000    0.000    0.000 ops.py:312(__init__)
        1    0.000    0.000    0.000    0.000 parse.py:143(_NetlocResultMixinBase)
        1    0.000    0.000    0.000    0.000 _kde.py:36(gaussian_kde)
        5    0.000    0.000    0.000    0.000 _new_distributions.py:339(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 adadelta.py:12(Adadelta)
        1    0.000    0.000    0.000    0.000 loader.py:66(TestLoader)
        2    0.000    0.000    0.000    0.000 _helpers.py:305(_compat_module_name)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3621(DiscreteDistribution)
        1    0.000    0.000    0.000    0.000 special.py:181(__new__)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1413(DummySpecies)
        7    0.000    0.000    0.000    0.000 rrule.py:70(__init__)
        1    0.000    0.000    0.000    0.000 _index.py:25(IndexMixin)
        1    0.000    0.000    0.000    0.000 message.py:972(MIMEPart)
        1    0.000    0.000    0.000    0.000 overrides.py:1786(TorchFunctionMode)
        1    0.000    0.000    0.000    0.000 specifiers.py:44(BaseSpecifier)
        1    0.000    0.000    0.000    0.000 rk.py:407(DOP853)
        1    0.000    0.000    0.000    0.000 num.py:1(<module>)
        1    0.000    0.000    0.000    0.000 special.py:75(__new__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2342(_median_icdf)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:18(ModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 quasirandom.py:5(SobolEngine)
        1    0.000    0.000    0.000    0.000 _resampling.py:2261(BootstrapMethod)
        1    0.000    0.000    0.000    0.000 __init__.py:222(__exit__)
        1    0.000    0.000    0.000    0.000 formatting.py:112(<dictcomp>)
        1    0.000    0.000    0.000    0.000 request.py:1694(URLopener)
        1    0.000    0.000    0.000    0.000 fglmtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rnn.py:334(LSTM)
        1    0.000    0.000    0.000    0.000 _base.py:325(Future)
        1    0.000    0.000    0.000    0.000 index_tricks.py:310(AxisConcatenator)
        1    0.000    0.000    0.000    0.000 dop.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linear.py:12(Linear)
        1    0.000    0.000    0.000    0.000 process.py:399(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:295(multivariate_normal_gen)
        1    0.000    0.000    0.000    0.000 gammazeta.py:394(bernoulli_size)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:304(MPIntervalContext)
        1    0.000    0.000    0.000    0.000 modules.py:840(Submodule)
       48    0.000    0.000    0.000    0.000 periodic_table.py:1531(symbol)
        1    0.000    0.000    0.000    0.000 factor_.py:665(FactorCache)
       10    0.000    0.000    0.000    0.000 _policybase.py:104(<genexpr>)
        6    0.000    0.000    0.000    0.000 six.py:131(__init__)
        1    0.000    0.000    0.000    0.000 gamma.py:14(Gamma)
        1    0.000    0.000    0.000    0.000 tensor.py:1392(TensorSymmetry)
        1    0.000    0.000    0.000    0.000 main.py:56(TestProgram)
        2    0.000    0.000    0.000    0.000 core.py:3613(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 kind.py:64(__new__)
        1    0.000    0.000    0.000    0.000 _special_locations.py:15(SpecialLocations)
        1    0.000    0.000    0.000    0.000 tz.py:1545(__init__)
        1    0.000    0.000    0.000    0.000 polyquinticconst.py:22(PolyQuintic)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:12(GMPYRationalField)
        1    0.000    0.000    0.000    0.000 sparse.py:49(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 connection.py:114(_ConnectionBase)
        8    0.000    0.000    0.000    0.000 __init__.py:463(_asdict)
        1    0.000    0.000    0.000    0.000 fancysets.py:519(Range)
        1    0.000    0.000    0.000    0.000 entity.py:71(GeometryEntity)
        1    0.000    0.000    0.000    0.000 constructor.py:664(Constructor)
       23    0.000    0.000    0.000    0.000 _support_alternative_backends.py:35(name)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:583(PythonMPContext)
        1    0.000    0.000    0.000    0.000 _ltisys.py:299(dlti)
        1    0.000    0.000    0.000    0.000 tight_bbox.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _functools.py:6(method_cache)
        1    0.000    0.000    0.000    0.000 pydoc.py:525(__init__)
        1    0.000    0.000    0.000    0.000 cnf.py:270(CNF)
        1    0.000    0.000    0.000    0.000 _namedtensor_internals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:33(Entry)
        1    0.000    0.000    0.000    0.000 weight_norm.py:11(WeightNorm)
        1    0.000    0.000    0.000    0.000 transforms.py:1098(StackTransform)
        1    0.000    0.000    0.000    0.000 _kdtree.py:287(node)
        1    0.000    0.000    0.000    0.000 _text_layout.py:1(<module>)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:12(SpectralNorm)
        5    0.000    0.000    0.000    0.000 datapipe.py:265(register_datapipe_as_function)
        1    0.000    0.000    0.000    0.000 _ltisys.py:879(ZerosPolesGain)
       25    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 jscode.py:46(JavascriptCodePrinter)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1849(_nchypergeom_gen)
        1    0.000    0.000    0.000    0.000 _gauss_legendre.py:10(GaussLegendreQuadrature)
       11    0.000    0.000    0.000    0.000 results.py:272(__iter__)
        5    0.000    0.000    0.000    0.000 __init__.py:20(is_available)
        1    0.000    0.000    0.000    0.000 sysconfig.py:456(_get_sysconfigdata_name)
        2    0.000    0.000    0.000    0.000 sysconfig.py:311(get_default_scheme)
        1    0.000    0.000    0.000    0.000 computed_entries.py:47(EnergyAdjustment)
        1    0.000    0.000    0.000    0.000 comments.py:273(CommentedBase)
        8    0.000    0.000    0.000    0.000 core.py:5113(stopOn)
       10    0.000    0.000    0.000    0.000 quadrature.py:21(__init__)
        1    0.000    0.000    0.000    0.000 prufer.py:11(Prufer)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:41(<setcomp>)
       12    0.000    0.000    0.000    0.000 rcsetup.py:424(validate_fontweight)
       24    0.000    0.000    0.000    0.000 dviread.py:135(_dispatch)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:190(_Domain)
       16    0.000    0.000    0.000    0.000 _pep440.py:301(<genexpr>)
       70    0.000    0.000    0.000    0.000 _jit_internal.py:1091(__getitem__)
        1    0.000    0.000    0.000    0.000 error_functions.py:1828(Si)
        1    0.000    0.000    0.000    0.000 functions.py:3(SpecialFunctions)
        1    0.000    0.000    0.000    0.000 conv.py:617(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:753(PngImageFile)
        5    0.000    0.000    0.000    0.000 _basic.py:3031(<listcomp>)
        1    0.000    0.000    0.000    0.000 collections.py:1684(EllipseCollection)
        1    0.000    0.000    0.000    0.000 numpy.py:503(<dictcomp>)
        1    0.000    0.000    0.000    0.000 logic.py:221(Logic)
        1    0.000    0.000    0.000    0.000 tempfile.py:840(TemporaryDirectory)
        1    0.000    0.000    0.000    0.000 compat.py:187(MutableSliceableSequence)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:79(_pack_uint32)
       24    0.000    0.000    0.000    0.000 sympify.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 polygon.py:1420(RegularPolygon)
        3    0.000    0.000    0.000    0.000 bz2.py:135(readable)
        1    0.000    0.000    0.000    0.000 numbers.py:2231(AlgebraicNumber)
        1    0.000    0.000    0.000    0.000 operator_support.py:177(OpSupports)
       15    0.000    0.000    0.000    0.000 arrayprint.py:993(<genexpr>)
        1    0.000    0.000    0.000    0.000 profiler.py:59(profile)
        6    0.000    0.000    0.000    0.000 signal.py:49(decorator)
        3    0.000    0.000    0.000    0.000 _header_value_parser.py:876(__new__)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:262(__subclasshook__)
        1    0.000    0.000    0.000    0.000 wannier90.py:24(Unk)
        2    0.000    0.000    0.000    0.000 _aliases.py:116(astype)
        1    0.000    0.000    0.000    0.000 _matrix_io.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis.py:2253(YAxis)
        1    0.000    0.000    0.000    0.000 numpy.py:348(SciPyPrinter)
        6    0.000    0.000    0.000    0.000 _exceptions.py:17(_display_as_base)
        1    0.000    0.000    0.000    0.000 _builtins.py:120(<setcomp>)
        1    0.000    0.000    0.000    0.000 mathtext.py:535(TruetypeFonts)
        1    0.000    0.000    0.000    0.000 rnn.py:135(_LSTMSingleLayer)
        1    0.000    0.000    0.000    0.000 sparse.py:21(SparseRepMatrix)
       31    0.000    0.000    0.000    0.000 singleton.py:192(<lambda>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:1101(RootSum)
        6    0.000    0.000    0.000    0.000 _version.py:62(<listcomp>)
        1    0.000    0.000    0.000    0.000 realfield.py:54(RealField)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1572(ReciprocalTrigonometricFunction)
        1    0.000    0.000    0.000    0.000 conv_fused.py:25(_ConvBnNd)
        1    0.000    0.000    0.000    0.000 _interface.py:55(LinearOperator)
        1    0.000    0.000    0.000    0.000 __init__.py:165(<listcomp>)
        1    0.000    0.000    0.000    0.000 _censored_data.py:60(CensoredData)
        1    0.000    0.000    0.000    0.000 utils.py:8(IterableWrapperIterDataPipe)
        1    0.000    0.000    0.000    0.000 util.py:15(__config_flags)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:73(UnivariateSpline)
        1    0.000    0.000    0.000    0.000 tensor.py:1695(TensorHead)
        1    0.000    0.000    0.000    0.000 base_events.py:274(Server)
       13    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:808(<dictcomp>)
       12    0.000    0.000    0.000    0.000 domain.py:470(of_type)
       12    0.000    0.000    0.000    0.000 fake_tensor.py:327(register_op_impl)
        1    0.000    0.000    0.000    0.000 fractionfield.py:9(FractionField)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12328(rel_breitwigner_gen)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:172(_ConfigExpander)
        1    0.000    0.000    0.000    0.000 proj3d.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sets.py:1947(FiniteSet)
        1    0.000    0.000    0.000    0.000 complexes.py:446(Abs)
        1    0.000    0.000    0.000    0.000 quopri.py:1(<module>)
        1    0.000    0.000    0.000    0.000 exponential.py:35(ExpBase)
        1    0.000    0.000    0.000    0.000 image.py:1134(PcolorImage)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:117(<listcomp>)
        4    0.000    0.000    0.000    0.000 serialization.py:90(register_package)
        2    0.000    0.000    0.000    0.000 results.py:462(<listcomp>)
        1    0.000    0.000    0.000    0.000 heuristicgcd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:6540(MaskedConstant)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:38(ivmpf)
        2    0.000    0.000    0.000    0.000 constraints.py:126(__call__)
        1    0.000    0.000    0.000    0.000 _inspect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:41(Transform)
        1    0.000    0.000    0.000    0.000 error.py:35(HTTPError)
        1    0.000    0.000    0.000    0.000 tz.py:386(tzfile)
        1    0.000    0.000    0.000    0.000 __init__.py:1067(StreamHandler)
        4    0.000    0.000    0.000    0.000 core.py:5236(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 offsetbox.py:179(OffsetBox)
        1    0.000    0.000    0.000    0.000 _ltisys.py:46(LinearTimeInvariant)
       24    0.000    0.000    0.000    0.000 expr.py:2053(as_base_exp)
        3    0.000    0.000    0.000    0.000 _policybase.py:281(_sanitize_header)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:25(__init__)
        1    0.000    0.000    0.000    0.000 _trace.py:1202(TopLevelTracedModule)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11322(wrapcauchy_gen)
        5    0.000    0.000    0.000    0.000 decorator.py:152(<listcomp>)
        1    0.000    0.000    0.000    0.000 std.py:67(TRLock)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
        1    0.000    0.000    0.000    0.000 free_groups.py:114(FreeGroup)
        1    0.000    0.000    0.000    0.000 _netcdf.py:98(netcdf_file)
        1    0.000    0.000    0.000    0.000 _shgo.py:488(SHGO)
        1    0.000    0.000    0.000    0.000 case.py:243(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 log_normal.py:8(LogNormal)
        2    0.000    0.000    0.000    0.000 numerictypes.py:229(obj2sctype)
        1    0.000    0.000    0.000    0.000 _common.py:267(tzrangebase)
        1    0.000    0.000    0.000    0.000 patches.py:1824(_simpleprint_styles)
        2    0.000    0.000    0.000    0.000 reprlib.py:38(__init__)
        4    0.000    0.000    0.000    0.000 __init__.py:798(__init__)
        1    0.000    0.000    0.000    0.000 ideals.py:7(Ideal)
       23    0.000    0.000    0.000    0.000 overrides.py:173(array_function_from_dispatcher)
        6    0.000    0.000    0.000    0.000 utils.py:51(_has_surrogates)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:576(unused)
        1    0.000    0.000    0.000    0.000 laplace.py:9(Laplace)
        5    0.000    0.000    0.000    0.000 _compression.py:12(_check_not_closed)
        1    0.000    0.000    0.000    0.000 polygon.py:2053(Triangle)
        1    0.000    0.000    0.000    0.000 argparse.py:1708(ArgumentParser)
        2    0.000    0.000    0.000    0.000 _adapters.py:165(wrap_spec)
        1    0.000    0.000    0.000    0.000 _globals.py:17(_InternalGlobals)
       41    0.000    0.000    0.000    0.000 numbers.py:438(class_key)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.set_typeDict}
        9    0.000    0.000    0.000    0.000 typing_extensions.py:712(__eq__)
        1    0.000    0.000    0.000    0.000 functional_modules.py:129(QFunctional)
        1    0.000    0.000    0.000    0.000 gridspec.py:26(GridSpecBase)
        1    0.000    0.000    0.000    0.000 fancysets.py:291(ImageSet)
        1    0.000    0.000    0.000    0.000 profiler_util.py:352(FormattedTimesMixin)
       12    0.000    0.000    0.000    0.000 {method 'islower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'difference_update' of 'set' objects}
        5    0.000    0.000    0.000    0.000 typing.py:2191(runtime_checkable)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1881(ComplexInterval)
        1    0.000    0.000    0.000    0.000 axis.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 linear_relu.py:9(LinearReLU)
        1    0.000    0.000    0.000    0.000 _interpolate.py:151(_check_broadcast_up_to)
        1    0.000    0.000    0.000    0.000 numpy.py:345(<dictcomp>)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:100(split)
        1    0.000    0.000    0.000    0.000 __init__.py:37(cuFFTPlanCache)
        1    0.000    0.000    0.000    0.000 request.py:2139(FancyURLopener)
        1    0.000    0.000    0.000    0.000 products.py:17(Product)
        1    0.000    0.000    0.000    0.000 threading.py:236(__init__)
        1    0.000    0.000    0.000    0.000 types.py:39(Storage)
        1    0.000    0.000    0.000    0.000 context.py:99(compose_two)
        2    0.000    0.000    0.000    0.000 __init__.py:2356(_backend_module_name)
        2    0.000    0.000    0.000    0.000 decorator.py:319(wrapper)
        1    0.000    0.000    0.000    0.000 transforms.py:1827(Affine2D)
        1    0.000    0.000    0.000    0.000 pooling.py:564(AvgPool2d)
        1    0.000    0.000    0.000    0.000 zipfile.py:344(ZipInfo)
        2    0.000    0.000    0.000    0.000 kind.py:266(register)
        1    0.000    0.000    0.000    0.000 series.py:1861(SurfaceOver2DRangeSeries)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:90(KroneckerDelta)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:337(_ExpmPadeHelper)
       20    0.000    0.000    0.000    0.000 core.py:3915(recurse)
        1    0.000    0.000    0.000    0.000 utilities.py:8(__init__)
       25    0.000    0.000    0.000    0.000 symbolic_helper.py:664(_block_list_in_opset)
        3    0.000    0.000    0.000    0.000 __init__.py:7(is_available)
        1    0.000    0.000    0.000    0.000 <frozen genericpath>:39(isdir)
        1    0.000    0.000    0.000    0.000 image.py:841(AxesImage)
        1    0.000    0.000    0.000    0.000 pycode.py:707(<listcomp>)
        1    0.000    0.000    0.000    0.000 ast.py:65(_raise_malformed_node)
        1    0.000    0.000    0.000    0.000 fontconfig_pattern.py:27(FontconfigPatternParser)
        3    0.000    0.000    0.000    0.000 rcsetup.py:459(_validate_mathtext_fallback)
        1    0.000    0.000    0.000    0.000 tight_binding_hamiltonian.py:18(TBHamiltonian)
        2    0.000    0.000    0.000    0.000 _distn_infrastructure.py:841(<genexpr>)
        1    0.000    0.000    0.000    0.000 rational.py:24(mpq)
        1    0.000    0.000    0.000    0.000 integrals.py:35(Integral)
        1    0.000    0.000    0.000    0.000 fields.py:292(FracElement)
        6    0.000    0.000    0.000    0.000 _parser.py:286(seek)
        1    0.000    0.000    0.000    0.000 _helpers.py:487(_AutoJITWrapper)
       17    0.000    0.000    0.000    0.000 __init__.py:190(change_key)
        1    0.000    0.000    0.000    0.000 representer.py:52(BaseRepresenter)
        1    0.000    0.000    0.000    0.000 _policybase.py:112(Policy)
        1    0.000    0.000    0.000    0.000 function_base.py:2314(<listcomp>)
        8    0.000    0.000    0.000    0.000 {method 'removeprefix' of 'str' objects}
       21    0.000    0.000    0.000    0.000 multiarray.py:153(concatenate)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:441(_setdef)
        1    0.000    0.000    0.000    0.000 pycode.py:87(<listcomp>)
       15    0.000    0.000    0.000    0.000 symbolic_opset10.py:64(_apply_params)
        2    0.000    0.000    0.000    0.000 _parser.py:1006(addgroup)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        1    0.000    0.000    0.000    0.000 summations.py:42(Sum)
        1    0.000    0.000    0.000    0.000 selectors.py:80(BaseSelector)
        1    0.000    0.000    0.000    0.000 group_constructs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 readers.py:53(MultiplexedPath)
       17    0.000    0.000    0.000    0.000 ctx_fp.py:28(<lambda>)
        1    0.000    0.000    0.000    0.000 ticker.py:468(ScalarFormatter)
        1    0.000    0.000    0.000    0.000 conv.py:232(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 _ndbspline.py:26(NdBSpline)
        1    0.000    0.000    0.000    0.000 trsock.py:4(TransportSocket)
       18    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1761(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:236(SymInt)
        1    0.000    0.000    0.000    0.000 decorator.py:65(FunctionMaker)
        1    0.000    0.000    0.000    0.000 integers.py:21(RoundFunction)
        1    0.000    0.000    0.000    0.000 coord.py:362(Simplex)
        1    0.000    0.000    0.000    0.000 sequences.py:726(RecursiveSeq)
        1    0.000    0.000    0.000    0.000 facts.py:75(transitive_closure)
        2    0.000    0.000    0.000    0.000 {built-in method _struct.unpack}
        1    0.000    0.000    0.000    0.000 GimpPaletteFile.py:23(GimpPaletteFile)
        1    0.000    0.000    0.000    0.000 ticker.py:2084(MaxNLocator)
        3    0.000    0.000    0.000    0.000 __init__.py:590(_discover_resolvers)
        4    0.000    0.000    0.000    0.000 libmpf.py:1313(from_str)
        1    0.000    0.000    0.000    0.000 curve.py:22(Curve)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1612(<dictcomp>)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:70(_apply)
        1    0.000    0.000    0.000    0.000 series.py:2180(ImplicitSeries)
        1    0.000    0.000    0.000    0.000 error_functions.py:2210(Chi)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3629(__init__)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1879(validation_policy)
        2    0.000    0.000    0.000    0.000 __init__.py:1646(addHandler)
        1    0.000    0.000    0.000    0.000 Image.py:3765(register_extensions)
        1    0.000    0.000    0.000    0.000 __init__.py:909(LongStorage)
        1    0.000    0.000    0.000    0.000 numpy.py:34(<dictcomp>)
        1    0.000    0.000    0.000    0.000 tensor.py:4488(TensorElement)
        1    0.000    0.000    0.000    0.000 binary.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 factorials.py:36(factorial)
        1    0.000    0.000    0.000    0.000 bz2.py:26(BZ2File)
        1    0.000    0.000    0.000    0.000 pathlib.py:128(<setcomp>)
        1    0.000    0.000    0.000    0.000 ordinals.py:273(__new__)
        1    0.000    0.000    0.000    0.000 __init__.py:283(SymFloat)
        1    0.000    0.000    0.000    0.000 fields.py:103(FracField)
        1    0.000    0.000    0.000    0.000 bandstructure.py:157(BandStructure)
        1    0.000    0.000    0.000    0.000 _aliases.py:536(floor)
        1    0.000    0.000    0.000    0.000 series.py:989(Line2DBaseSeries)
        1    0.000    0.000    0.000    0.000 conv_relu.py:19(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 integers.py:496(frac)
        1    0.000    0.000    0.000    0.000 _infra.py:266(RuleCollection)
        1    0.000    0.000    0.000    0.000 _byteordercodes.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _aliases.py:51(empty_like)
        1    0.000    0.000    0.000    0.000 _log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 wrappers.py:78(elementwise_type_promotion_wrapper)
        1    0.000    0.000    0.000    0.000 creation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 upsampling.py:168(UpsamplingNearest2d)
        1    0.000    0.000    0.000    0.000 spawn.py:39(ProcessExitedException)
        1    0.000    0.000    0.000    0.000 poisson.py:10(Poisson)
        1    0.000    0.000    0.000    0.000 repmatrix.py:555(MutableRepMatrix)
        1    0.000    0.000    0.000    0.000 {built-in method posix.confstr}
       22    0.000    0.000    0.000    0.000 reductions.py:123(_torch_grad_reduce)
        1    0.000    0.000    0.000    0.000 core.py:6345(mvoid)
       15    0.000    0.000    0.000    0.000 serialization.py:59(<genexpr>)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:30(binom_gen)
        1    0.000    0.000    0.000    0.000 adamw.py:12(AdamW)
        1    0.000    0.000    0.000    0.000 _interpolate.py:816(PPoly)
        1    0.000    0.000    0.000    0.000 numbers.py:59(carmichael)
       15    0.000    0.000    0.000    0.000 _jit_internal.py:747(_copy_to_script_wrapper)
        1    0.000    0.000    0.000    0.000 unix_events.py:57(_UnixSelectorEventLoop)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1364(<listcomp>)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:47(Resolvent)
        1    0.000    0.000    0.000    0.000 collections.py:1464(EventCollection)
        1    0.000    0.000    0.000    0.000 containers.py:219(Dict)
       11    0.000    0.000    0.000    0.000 ctx_iv.py:293(__new__)
        1    0.000    0.000    0.000    0.000 afm.py:358(AFM)
        2    0.000    0.000    0.000    0.000 densebasic.py:333(_rec_strip)
        1    0.000    0.000    0.000    0.000 observer.py:124(ObserverBase)
        1    0.000    0.000    0.000    0.000 _interpolate.py:1836(NdPPoly)
        1    0.000    0.000    0.000    0.000 random.py:235(_randbelow_with_getrandbits)
        1    0.000    0.000    0.000    0.000 __init__.py:1069(QInt8Storage)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:61(_ResourceSharer)
        1    0.000    0.000    0.000    0.000 streams.py:140(Event)
        1    0.000    0.000    0.000    0.000 interval_arithmetic.py:42(interval)
        1    0.000    0.000    0.000    0.000 _infra.py:309(DiagnosticOptions)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:996(ReciprocalHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 Periodicity_System.py:12(PeriodicityPhysicsSystem)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:9(__PrinterOptions)
        6    0.000    0.000    0.000    0.000 __init__.py:784(__new__)
        1    0.000    0.000    0.000    0.000 factor_.py:700(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method math.exp}
        1    0.000    0.000    0.000    0.000 gzip.py:455(_GzipReader)
        1    0.000    0.000    0.000    0.000 polyhedron.py:11(Polyhedron)
        1    0.000    0.000    0.000    0.000 __init__.py:1009(CharStorage)
        1    0.000    0.000    0.000    0.000 splitter_base.py:193(SplitResult)
        1    0.000    0.000    0.000    0.000 sets.py:1496(Intersection)
        1    0.000    0.000    0.000    0.000 spectral.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _genz_malik.py:11(GenzMalikCubature)
        1    0.000    0.000    0.000    0.000 sgd.py:10(SGD)
        1    0.000    0.000    0.000    0.000 __init__.py:1792(__init__)
        1    0.000    0.000    0.000    0.000 six.py:236(create_module)
        1    0.000    0.000    0.000    0.000 linear_relu.py:12(LinearReLU)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:362(__subclasshook__)
        1    0.000    0.000    0.000    0.000 ElementTree.py:125(Element)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:10(BaseSubprocessTransport)
        1    0.000    0.000    0.000    0.000 named_groups.py:1(<module>)
        1    0.000    0.000    0.000    0.000 art3d.py:557(Poly3DCollection)
        1    0.000    0.000    0.000    0.000 csv.py:80(DictReader)
        1    0.000    0.000    0.000    0.000 band.py:16(Band)
        1    0.000    0.000    0.000    0.000 observer.py:383(MinMaxObserver)
        1    0.000    0.000    0.000    0.000 _infra.py:55(Rule)
        1    0.000    0.000    0.000    0.000 reduction.py:33(ForkingPickler)
        1    0.000    0.000    0.000    0.000 lazy.py:10(_LazyProtocol)
        1    0.000    0.000    0.000    0.000 numbers.py:2771(Zero)
        1    0.000    0.000    0.000    0.000 functional_modules.py:9(FloatFunctional)
        1    0.000    0.000    0.000    0.000 rnn.py:261(LSTM)
        1    0.000    0.000    0.000    0.000 normalization.py:5(LayerNorm)
        1    0.000    0.000    0.000    0.000 conv.py:118(Conv3d)
        3    0.000    0.000    0.000    0.000 mock.py:298(__getattr__)
        1    0.000    0.000    0.000    0.000 context.py:206(ExceptionTrap)
       13    0.000    0.000    0.000    0.000 utils.py:34(exposed_in)
        1    0.000    0.000    0.000    0.000 biasedurn.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polar.py:17(PolarTransform)
        1    0.000    0.000    0.000    0.000 _lambertw.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _bunch.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colors.py:509(Colormap)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2498(_pmf_dispatch)
        1    0.000    0.000    0.000    0.000 sdm.py:186(new)
        1    0.000    0.000    0.000    0.000 libmpi.py:96(mpi_neg)
       14    0.000    0.000    0.000    0.000 mock.py:1936(<genexpr>)
        1    0.000    0.000    0.000    0.000 _ode.py:110(ode)
       26    0.000    0.000    0.000    0.000 core.py:4415(<genexpr>)
        8    0.000    0.000    0.000    0.000 version.py:207(<genexpr>)
        1    0.000    0.000    0.000    0.000 comments.py:1007(CommentedKeyMap)
        1    0.000    0.000    0.000    0.000 annotations.py:41(EvalEnv)
        1    0.000    0.000    0.000    0.000 bessel.py:282(bessely)
        1    0.000    0.000    0.000    0.000 profiler_legacy.py:18(profile)
        1    0.000    0.000    0.000    0.000 sets.py:1319(Union)
        2    0.000    0.000    0.000    0.000 matfuncs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 structure.py:5062(Molecule)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:123(<listcomp>)
        1    0.000    0.000    0.000    0.000 exprtools.py:288(Factors)
        1    0.000    0.000    0.000    0.000 gzip.py:121(GzipFile)
        1    0.000    0.000    0.000    0.000 polyoptions.py:18(Option)
        1    0.000    0.000    0.000    0.000 _storage_docs.py:12(add_docstr_all)
        1    0.000    0.000    0.000    0.000 monomials.py:512(Monomial)
       35    0.000    0.000    0.000    0.000 core.py:1967(recurse)
        1    0.000    0.000    0.000    0.000 file_structure_representation.py:9(Directory)
        1    0.000    0.000    0.000    0.000 qconfig_mapping.py:157(QConfigMapping)
        1    0.000    0.000    0.000    0.000 axis3d.py:470(XAxis)
        1    0.000    0.000    0.000    0.000 legend_handler.py:436(__init__)
        1    0.000    0.000    0.000    0.000 depends.py:20(Require)
       29    0.000    0.000    0.000    0.000 {method 'groupdict' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 mathtext.py:378(Fonts)
        1    0.000    0.000    0.000    0.000 rnn.py:1159(LSTMCell)
       10    0.000    0.000    0.000    0.000 wrappers.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 activation.py:14(ReLU6)
        1    0.000    0.000    0.000    0.000 Image.py:3915(Exif)
        1    0.000    0.000    0.000    0.000 expr.py:3989(AtomicExpr)
        1    0.000    0.000    0.000    0.000 _aliases.py:24(arange)
        1    0.000    0.000    0.000    0.000 numbers.py:3602(Exp1)
        1    0.000    0.000    0.000    0.000 _functions.py:10(Broadcast)
        3    0.000    0.000    0.000    0.000 __init__.py:42(__init__)
        1    0.000    0.000    0.000    0.000 backend_tools.py:40(ToolBase)
        1    0.000    0.000    0.000    0.000 comments.py:88(Comment)
        1    0.000    0.000    0.000    0.000 _ccallback.py:26(LowLevelCallable)
        1    0.000    0.000    0.000    0.000 indexed.py:124(Indexed)
        4    0.000    0.000    0.000    0.000 {method '__exit__' of 'numpy.nditer' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:873(Handler)
        5    0.000    0.000    0.000    0.000 sets.py:2010(__iter__)
       15    0.000    0.000    0.000    0.000 arrayprint.py:994(<genexpr>)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:163(__neg__)
        1    0.000    0.000    0.000    0.000 zipfile.py:2290(Path)
        1    0.000    0.000    0.000    0.000 typing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:11(EmbeddingPackedParams)
        4    0.000    0.000    0.000    0.000 assumptions.py:484(generator)
        5    0.000    0.000    0.000    0.000 rszeta.py:54(__init__)
        3    0.000    0.000    0.000    0.000 message.py:330(set_payload)
        1    0.000    0.000    0.000    0.000 ImageFile.py:449(StubHandler)
        1    0.000    0.000    0.000    0.000 bezier.py:182(BezierSegment)
        1    0.000    0.000    0.000    0.000 outputs.py:4448(Oszicar)
        1    0.000    0.000    0.000    0.000 tensor.py:815(_comm_init)
        1    0.000    0.000    0.000    0.000 common.py:32(VolumetricData)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1767(yulesimon_gen)
       24    0.000    0.000    0.000    0.000 traceback.py:307(__len__)
        1    0.000    0.000    0.000    0.000 extract.py:1(<module>)
        7    0.000    0.000    0.000    0.000 _nonlin.py:1599(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7002(gibrat_gen)
        1    0.000    0.000    0.000    0.000 six.py:498(Module_six_moves_urllib)
        1    0.000    0.000    0.000    0.000 conv.py:10(_ConvNd)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:15(Ynm)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1824(dpareto_lognorm_gen)
        1    0.000    0.000    0.000    0.000 triangulation.py:4(Triangulation)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4881(multivariate_hypergeom_gen)
        2    0.000    0.000    0.000    0.000 deprecation.py:184(_deprecate_positional_args)
        1    0.000    0.000    0.000    0.000 boolalg.py:483(BooleanFunction)
        1    0.000    0.000    0.000    0.000 filters.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2301(_entropy_dispatch)
       12    0.000    0.000    0.000    0.000 matexpr.py:21(_sympifyit)
        1    0.000    0.000    0.000    0.000 container.py:5(Container)
        9    0.000    0.000    0.000    0.000 _util.py:949(_rename_parameter)
        1    0.000    0.000    0.000    0.000 conv.py:277(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 maggroups.py:33(MagneticSpaceGroup)
        1    0.000    0.000    0.000    0.000 kind.py:97(__new__)
        1    0.000    0.000    0.000    0.000 log.py:41(Log)
        1    0.000    0.000    0.000    0.000 matexpr.py:666(MatrixSymbol)
        1    0.000    0.000    0.000    0.000 error_functions.py:1092(Ei)
        1    0.000    0.000    0.000    0.000 cauchy.py:12(Cauchy)
       10    0.000    0.000    0.000    0.000 _pytesttester.py:76(__init__)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:13(PythonIntegerRing)
        1    0.000    0.000    0.000    0.000 __init__.py:949(BoolStorage)
        1    0.000    0.000    0.000    0.000 version.py:280(LooseVersion)
        1    0.000    0.000    0.000    0.000 linear_fused.py:13(LinearBn1d)
        1    0.000    0.000    0.000    0.000 __init__.py:892(MetadataPathFinder)
        1    0.000    0.000    0.000    0.000 normalization.py:81(InstanceNorm1d)
        1    0.000    0.000    0.000    0.000 fishersnedecor.py:11(FisherSnedecor)
       27    0.000    0.000    0.000    0.000 singleton.py:152(__repr__)
        1    0.000    0.000    0.000    0.000 modules.py:698(PowerBasis)
        1    0.000    0.000    0.000    0.000 bessel.py:438(besseli)
        1    0.000    0.000    0.000    0.000 outputs.py:3920(Chgcar)
       20    0.000    0.000    0.000    0.000 inverselaplace.py:17(__init__)
        1    0.000    0.000    0.000    0.000 _ops.py:238(OpOverload)
        1    0.000    0.000    0.000    0.000 subprocess.py:469(CompletedProcess)
       22    0.000    0.000    0.000    0.000 symbol.py:799(<genexpr>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5454(norminvgauss_gen)
        1    0.000    0.000    0.000    0.000 add_newdocs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 locks.py:446(Barrier)
        1    0.000    0.000    0.000    0.000 __init__.py:1432(Logger)
        1    0.000    0.000    0.000    0.000 typing.py:1258(__mro_entries__)
       18    0.000    0.000    0.000    0.000 multiarray.py:1080(copyto)
        1    0.000    0.000    0.000    0.000 getlimits.py:378(finfo)
        1    0.000    0.000    0.000    0.000 _base.py:245(NestedFixedRule)
        1    0.000    0.000    0.000    0.000 enumerative.py:368(MultisetPartitionTraverser)
       39    0.000    0.000    0.000    0.000 {built-in method _ctypes.sizeof}
        4    0.000    0.000    0.000    0.000 doccer.py:180(replace_notes_in_docstring)
        1    0.000    0.000    0.000    0.000 numpy.py:480(<dictcomp>)
        1    0.000    0.000    0.000    0.000 pooling.py:643(AvgPool3d)
        6    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 glob_group.py:7(GlobGroup)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._tracer_warn_use_python}
        1    0.000    0.000    0.000    0.000 numbers.py:4083(ImaginaryUnit)
        1    0.000    0.000    0.000    0.000 outputs.py:4975(Wavecar)
        1    0.000    0.000    0.000    0.000 function.py:2101(Subs)
        1    0.000    0.000    0.000    0.000 boolalg.py:741(Or)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:21(Expression)
        9    0.000    0.000    0.000    0.000 core.py:4246(<genexpr>)
        1    0.000    0.000    0.000    0.000 half_normal.py:12(HalfNormal)
        1    0.000    0.000    0.000    0.000 beta_functions.py:20(beta)
        1    0.000    0.000    0.000    0.000 connection.py:431(Listener)
        3    0.000    0.000    0.000    0.000 typing_extensions.py:2877(__init__)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:161(SobolResult)
        1    0.000    0.000    0.000    0.000 _ode.py:843(vode)
       22    0.000    0.000    0.000    0.000 core.py:3595(<genexpr>)
        1    0.000    0.000    0.000    0.000 units.py:494(ArrayWithUnit)
        1    0.000    0.000    0.000    0.000 storage.py:981(_LegacyStorage)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3460(_Backend)
        1    0.000    0.000    0.000    0.000 calendar.py:71(_localized_day)
        1    0.000    0.000    0.000    0.000 proxy.py:455(Attribute)
        2    0.000    0.000    0.000    0.000 {built-in method posix.unsetenv}
        2    0.000    0.000    0.000    0.000 polyclasses.py:155(new)
        1    0.000    0.000    0.000    0.000 _stats_py.py:5955(TtestResult)
        1    0.000    0.000    0.000    0.000 minpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nodes.py:11(Node)
       24    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:273(<dictcomp>)
        1    0.000    0.000    0.000    0.000 hadamard.py:313(HadamardPower)
        1    0.000    0.000    0.000    0.000 threading.py:224(Condition)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:775(_Parameterization)
        1    0.000    0.000    0.000    0.000 batchnorm.py:552(SyncBatchNorm)
        1    0.000    0.000    0.000    0.000 abc.py:177(InspectLoader)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:290(FusedMovingAvgObsFakeQuantize)
        4    0.000    0.000    0.000    0.000 libmpf.py:574(mpf_cmp)
        1    0.000    0.000    0.000    0.000 singleton.py:24(SingletonRegistry)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:246(GaussianDomain)
        1    0.000    0.000    0.000    0.000 function.py:155(FunctionClass)
        1    0.000    0.000    0.000    0.000 stackplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 specfun.py:1(<module>)
        1    0.000    0.000    0.000    0.000 studentT.py:11(StudentT)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8315(lomax_gen)
        1    0.000    0.000    0.000    0.000 internal.py:41(__init__)
        1    0.000    0.000    0.000    0.000 traceback.py:636(TracebackException)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:588(transpose)
        1    0.000    0.000    0.000    0.000 radau.py:179(Radau)
       21    0.000    0.000    0.000    0.000 _codata.py:2121(_check_obsolete)
        1    0.000    0.000    0.000    0.000 util.py:103(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:83(OptEinsumModule)
        1    0.000    0.000    0.000    0.000 single.py:211(SingleODESolver)
        1    0.000    0.000    0.000    0.000 tokens.py:13(Token)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1897(wishart_gen)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1052(TimerBase)
        1    0.000    0.000    0.000    0.000 tarfile.py:328(_Stream)
        1    0.000    0.000    0.000    0.000 __init__.py:71(MkldnnModule)
        1    0.000    0.000    0.000    0.000 _ni_support.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:398(uppergamma)
        1    0.000    0.000    0.000    0.000 _guards.py:238(Checkpointable)
        1    0.000    0.000    0.000    0.000 internal.py:30(_InternalRPCPickler)
        1    0.000    0.000    0.000    0.000 __init__.py:1224(levy_stable_frozen)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:151(ivmpc)
        3    0.000    0.000    0.000    0.000 arrayprint.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 lzma.py:38(LZMAFile)
        1    0.000    0.000    0.000    0.000 error_functions.py:674(erf2)
        1    0.000    0.000    0.000    0.000 functional_modules.py:82(FXFloatFunctional)
        1    0.000    0.000    0.000    0.000 rnn.py:1000(LSTMCell)
        1    0.000    0.000    0.000    0.000 delta_functions.py:393(Heaviside)
        1    0.000    0.000    0.000    0.000 _parser.py:241(parserinfo)
        3    0.000    0.000    0.000    0.000 __init__.py:753(path)
        1    0.000    0.000    0.000    0.000 adagrad.py:12(Adagrad)
        1    0.000    0.000    0.000    0.000 _nonlin.py:615(LowRankMatrix)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._using_numpy2_behavior}
        1    0.000    0.000    0.000    0.000 conv.py:588(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 primes.py:41(PrimeIdeal)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1132(burr_gen)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:913(ReduceLROnPlateau)
        2    0.000    0.000    0.000    0.000 math2.py:53(_mathfun_n)
        3    0.000    0.000    0.000    0.000 rcsetup.py:990(validate_hist_bins)
        1    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:54(_get_platform_and_machine)
        4    0.000    0.000    0.000    0.000 core.py:3536(parseImpl)
        1    0.000    0.000    0.000    0.000 cnf.py:15(Literal)
        1    0.000    0.000    0.000    0.000 __init__.py:439(LibraryLoader)
        1    0.000    0.000    0.000    0.000 __init__.py:70(__init__)
        1    0.000    0.000    0.000    0.000 graycode.py:6(GrayCode)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7864(ncf_gen)
        1    0.000    0.000    0.000    0.000 _atfork.py:18(register_after_fork)
        1    0.000    0.000    0.000    0.000 main.py:1489(YAMLObject)
        1    0.000    0.000    0.000    0.000 error_functions.py:1964(Ci)
       10    0.000    0.000    0.000    0.000 case.py:1366(_deprecate)
        1    0.000    0.000    0.000    0.000 __init__.py:1049(ComplexFloatStorage)
        4    0.000    0.000    0.000    0.000 pythonmpq.py:194(__neg__)
        1    0.000    0.000    0.000    0.000 more.py:3665(callback_iter)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:151(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 extensions.py:11(ExtensionElement)
        7    0.000    0.000    0.000    0.000 __init__.py:101(CFunctionType)
        1    0.000    0.000    0.000    0.000 matplotlib.py:43(MatplotlibBackend)
        1    0.000    0.000    0.000    0.000 __init__.py:1039(ComplexDoubleStorage)
        1    0.000    0.000    0.000    0.000 constructor.py:932(RoundTripConstructor)
        1    0.000    0.000    0.000    0.000 _parser.py:394(_ymd)
        1    0.000    0.000    0.000    0.000 selector_events.py:744(_SelectorTransport)
        1    0.000    0.000    0.000    0.000 offsetbox.py:651(DrawingArea)
        1    0.000    0.000    0.000    0.000 _netcdf.py:811(netcdf_variable)
        1    0.000    0.000    0.000    0.000 extensions.py:219(MonogenicFiniteExtension)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1027(matrix_normal_gen)
        1    0.000    0.000    0.000    0.000 sequences.py:962(SeqExprOp)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:282(nbinom_gen)
        1    0.000    0.000    0.000    0.000 axis3d.py:484(ZAxis)
        1    0.000    0.000    0.000    0.000 Image.py:3689(register_open)
        1    0.000    0.000    0.000    0.000 swa_utils.py:13(AveragedModel)
       30    0.000    0.000    0.000    0.000 polyoptions.py:196(<genexpr>)
        1    0.000    0.000    0.000    0.000 relational.py:549(Equality)
        1    0.000    0.000    0.000    0.000 header.py:413(_ValueFormatter)
        1    0.000    0.000    0.000    0.000 __init__.py:408(Deprecated)
        1    0.000    0.000    0.000    0.000 specifiers.py:690(SpecifierSet)
        1    0.000    0.000    0.000    0.000 delta_functions.py:17(DiracDelta)
        1    0.000    0.000    0.000    0.000 padding.py:15(_ConstantPadNd)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:96(ExpFormat)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:433(_moment_central_formula)
        1    0.000    0.000    0.000    0.000 Orbit_spd_without_spin.py:15(orbit_spd_without_spin)
        1    0.000    0.000    0.000    0.000 core.py:726(Variable)
        1    0.000    0.000    0.000    0.000 core.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 rk.py:74(RungeKutta)
        1    0.000    0.000    0.000    0.000 tensor.py:4928(_WildTensExpr)
        1    0.000    0.000    0.000    0.000 __init__.py:531(Formatter)
        2    0.000    0.000    0.000    0.000 sysconfig.py:299(get_preferred_scheme)
        1    0.000    0.000    0.000    0.000 modules.py:44(Module)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:11(ExpRelaxedCategorical)
       13    0.000    0.000    0.000    0.000 _deprecation.py:8(deprecated)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1432(cauchy_gen)
        1    0.000    0.000    0.000    0.000 decoder.py:269(Decoder)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:19(ArgsKwargsPair)
        1    0.000    0.000    0.000    0.000 transforms.py:1203(Transform)
        9    0.000    0.000    0.000    0.000 timeutils.py:54(decorator)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1962(dweibull_gen)
        1    0.000    0.000    0.000    0.000 dfm.py:18(DFM_dummy)
        5    0.000    0.000    0.000    0.000 cache.py:155(cached_property)
        1    0.000    0.000    0.000    0.000 __init__.py:230(_remove_shim)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 pycode.py:552(PythonCodePrinter)
        1    0.000    0.000    0.000    0.000 diophantine.py:1213(<setcomp>)
        1    0.000    0.000    0.000    0.000 pooling.py:874(_LPPoolNd)
        1    0.000    0.000    0.000    0.000 graph_module.py:230(_WrappedCall)
        6    0.000    0.000    0.000    0.000 deprecation.py:81(_deprecated)
        1    0.000    0.000    0.000    0.000 __init__.py:879(DoubleStorage)
        3    0.000    0.000    0.000    0.000 glob.py:213(_join)
        1    0.000    0.000    0.000    0.000 sampler.py:82(RandomSampler)
        1    0.000    0.000    0.000    0.000 _internal.py:249(_ctypes)
        1    0.000    0.000    0.000    0.000 structure.py:25(SymmetrizedStructure)
        3    0.000    0.000    0.000    0.000 constraints.py:109(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:2106(BlendedGenericTransform)
        1    0.000    0.000    0.000    0.000 transforms.py:1702(__init__)
        1    0.000    0.000    0.000    0.000 _infra.py:180(Stack)
        1    0.000    0.000    0.000    0.000 function.py:1941(Lambda)
        1    0.000    0.000    0.000    0.000 dos.py:37(DOS)
        1    0.000    0.000    0.000    0.000 polar.py:464(_ThetaShift)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1857(cache_policy)
        1    0.000    0.000    0.000    0.000 mathtext.py:82(MathtextBackend)
        1    0.000    0.000    0.000    0.000 integers.py:297(ceiling)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5674(jf_skew_t_gen)
        1    0.000    0.000    0.000    0.000 interval_membership.py:4(intervalMembership)
        1    0.000    0.000    0.000    0.000 isolve.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:959(FloatStorage)
        1    0.000    0.000    0.000    0.000 activation.py:175(Hardtanh)
        1    0.000    0.000    0.000    0.000 selectors.py:442(EpollSelector)
        1    0.000    0.000    0.000    0.000 animation.py:895(Animation)
        1    0.000    0.000    0.000    0.000 special.py:213(OneMatrix)
        1    0.000    0.000    0.000    0.000 transforms.py:2380(CompositeAffine2D)
        1    0.000    0.000    0.000    0.000 _package_unpickler.py:7(PackageUnpickler)
        1    0.000    0.000    0.000    0.000 spectrum.py:38(Spectrum)
       19    0.000    0.000    0.000    0.000 fromnumeric.py:3265(_round_dispatcher)
        1    0.000    0.000    0.000    0.000 conv.py:856(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 core.py:109(InputSet)
        1    0.000    0.000    0.000    0.000 __init__.py:331(_Stream)
        1    0.000    0.000    0.000    0.000 extras.py:1607(MAxisConcatenator)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2861(truncweibull_min_gen)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1171(randint_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1595(chi2_gen)
        1    0.000    0.000    0.000    0.000 radam.py:13(RAdam)
       10    0.000    0.000    0.000    0.000 __future__.py:83(__init__)
        1    0.000    0.000    0.000    0.000 colors.py:1681(LightSource)
        4    0.000    0.000    0.000    0.000 libmpf.py:454(to_float)
       20    0.000    0.000    0.000    0.000 mul.py:571(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:1012(TransformedBbox)
        1    0.000    0.000    0.000    0.000 _binomtest.py:10(BinomTestResult)
        3    0.000    0.000    0.000    0.000 __init__.py:1720(getEffectiveLevel)
        2    0.000    0.000    0.000    0.000 results.py:441(__getattr__)
        1    0.000    0.000    0.000    0.000 bessel.py:36(BesselBase)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:498(geom_gen)
        1    0.000    0.000    0.000    0.000 axis.py:29(<listcomp>)
        1    0.000    0.000    0.000    0.000 para4band.py:554(<listcomp>)
        1    0.000    0.000    0.000    0.000 traceback.py:372(StackSummary)
       16    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
        1    0.000    0.000    0.000    0.000 binrel.py:135(AppliedBinaryRelation)
        1    0.000    0.000    0.000    0.000 adamax.py:12(Adamax)
        1    0.000    0.000    0.000    0.000 _typing.py:36(JustInt)
        1    0.000    0.000    0.000    0.000 _aliases.py:665(finfo)
        1    0.000    0.000    0.000    0.000 __init__.py:385(check_sparse_tensor_invariants)
        1    0.000    0.000    0.000    0.000 __init__.py:969(HalfStorage)
        1    0.000    0.000    0.000    0.000 vode.py:1(<module>)
        1    0.000    0.000    0.000    0.000 abc.py:131(TraversableResources)
       11    0.000    0.000    0.000    0.000 windows.py:41(_add_docstr)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:674(Formula)
       11    0.000    0.000    0.000    0.000 optimizer.py:28(_use_grad_for_differentiable)
        1    0.000    0.000    0.000    0.000 feedparser.py:136(FeedParser)
        1    0.000    0.000    0.000    0.000 _interpolate.py:592(_PPolyBase)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3579(TypeAliasType)
        1    0.000    0.000    0.000    0.000 immutable.py:140(ImmutableSparseMatrix)
        1    0.000    0.000    0.000    0.000 widgets.py:1893(RectangleSelector)
        1    0.000    0.000    0.000    0.000 bdist.py:37(ListCompat)
        1    0.000    0.000    0.000    0.000 hyper.py:796(HyperRep)
        1    0.000    0.000    0.000    0.000 colors.py:371(ColorConverter)
        2    0.000    0.000    0.000    0.000 gzip.py:402(_read_exact)
        1    0.000    0.000    0.000    0.000 stringpict.py:354(prettyForm)
        1    0.000    0.000    0.000    0.000 numbers.py:3465(ComplexInfinity)
        1    0.000    0.000    0.000    0.000 requirements.py:21(Requirement)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:233(<lambda>)
        1    0.000    0.000    0.000    0.000 special_matrices.py:1(<module>)
        4    0.000    0.000    0.000    0.000 mixins.py:51(_unary_method)
        1    0.000    0.000    0.000    0.000 containers.py:23(Tuple)
        1    0.000    0.000    0.000    0.000 backend_tools.py:394(ToolQuit)
        1    0.000    0.000    0.000    0.000 __init__.py:347(EntryPoints)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1728(RealInterval)
        1    0.000    0.000    0.000    0.000 ase.py:86(AseAtomsAdaptor)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:287(CubicTriInterpolator)
        1    0.000    0.000    0.000    0.000 discovery.py:298(ConfigDiscovery)
        1    0.000    0.000    0.000    0.000 axis.py:553(Ticker)
        1    0.000    0.000    0.000    0.000 bessel.py:607(besselk)
        1    0.000    0.000    0.000    0.000 rnn.py:163(_LSTMLayer)
        1    0.000    0.000    0.000    0.000 beta.py:11(Beta)
        1    0.000    0.000    0.000    0.000 asgd.py:18(ASGD)
        1    0.000    0.000    0.000    0.000 profiler_util.py:385(FunctionEvent)
        1    0.000    0.000    0.000    0.000 _kdtree.py:98(Rectangle)
        1    0.000    0.000    0.000    0.000 polar.py:144(InvertedPolarTransform)
       11    0.000    0.000    0.000    0.000 reductions.py:110(_torch_reduce)
        1    0.000    0.000    0.000    0.000 selector_events.py:888(_SelectorSocketTransport)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:607(default)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:897(_resolve_filename)
        1    0.000    0.000    0.000    0.000 linear.py:11(Linear)
        1    0.000    0.000    0.000    0.000 adjoint.py:6(Adjoint)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:476(Hyper_Function)
        1    0.000    0.000    0.000    0.000 complexes.py:265(sign)
        1    0.000    0.000    0.000    0.000 headerregistry.py:276(DateHeader)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2479(_logpmf_dispatch)
        1    0.000    0.000    0.000    0.000 ckdtree.py:1(<module>)
        3    0.000    0.000    0.000    0.000 message.py:211(is_multipart)
        1    0.000    0.000    0.000    0.000 swa_utils.py:200(SWALR)
       14    0.000    0.000    0.000    0.000 _common.py:9(__init__)
        1    0.000    0.000    0.000    0.000 _nested_sequence.py:18(_NestedSequence)
        1    0.000    0.000    0.000    0.000 outputs.py:177(KpointOptProps)
        1    0.000    0.000    0.000    0.000 para4band.py:552(<listcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1744(dgamma_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:999(ShortStorage)
        1    0.000    0.000    0.000    0.000 contains.py:10(Contains)
        3    0.000    0.000    0.000    0.000 typing.py:900(__repr__)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:10(LaplacianNd)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8080(nct_gen)
        2    0.000    0.000    0.000    0.000 Files_in.py:4(__init__)
        1    0.000    0.000    0.000    0.000 dataframes.py:60(Capture)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:4158(Sentinel)
        1    0.000    0.000    0.000    0.000 setupcfg.py:603(ConfigOptionsHandler)
        1    0.000    0.000    0.000    0.000 conv.py:382(Conv2d)
       11    0.000    0.000    0.000    0.000 _color_data.py:31(<genexpr>)
        1    0.000    0.000    0.000    0.000 _datasource.py:196(DataSource)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:118(<listcomp>)
        1    0.000    0.000    0.000    0.000 glob.py:31(iglob)
        1    0.000    0.000    0.000    0.000 worker.py:64(WorkerInfo)
       16    0.000    0.000    0.000    0.000 _add_newdocs_scalars.py:79(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:858(Prepared)
        1    0.000    0.000    0.000    0.000 assume.py:224(Predicate)
        1    0.000    0.000    0.000    0.000 threading.py:822(_maintain_shutdown_locks)
        1    0.000    0.000    0.000    0.000 structure.py:142(PeriodicNeighbor)
        1    0.000    0.000    0.000    0.000 periodic_table.py:637(is_valid_symbol)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:324(_icdf_formula)
        1    0.000    0.000    0.000    0.000 autograd_function.py:30(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:6(HTTPStatus)
        1    0.000    0.000    0.000    0.000 transforms.py:1696(AffineBase)
        1    0.000    0.000    0.000    0.000 _exceptions.py:116(_ArrayMemoryError)
        1    0.000    0.000    0.000    0.000 pathlib.py:971(absolute)
        1    0.000    0.000    0.000    0.000 __init__.py:1303(Manager)
        1    0.000    0.000    0.000    0.000 ticker.py:923(LogFormatter)
        1    0.000    0.000    0.000    0.000 _wavelets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv.py:82(Conv2d)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:4006(rv_sample)
        1    0.000    0.000    0.000    0.000 ticker.py:1564(PercentFormatter)
        1    0.000    0.000    0.000    0.000 core.py:190(<listcomp>)
       12    0.000    0.000    0.000    0.000 symbol.py:784(literal)
        1    0.000    0.000    0.000    0.000 numbers.py:2839(One)
        1    0.000    0.000    0.000    0.000 __init__.py:13(register)
        1    0.000    0.000    0.000    0.000 _support_alternative_backends.py:295(<listcomp>)
        1    0.000    0.000    0.000    0.000 series.py:1978(ParametricSurfaceSeries)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:236(<lambda>)
        1    0.000    0.000    0.000    0.000 bessel.py:106(besselj)
        3    0.000    0.000    0.000    0.000 __init__.py:880(legacy_normalize)
        1    0.000    0.000    0.000    0.000 rprop.py:11(Rprop)
        1    0.000    0.000    0.000    0.000 modules.py:1339(QuotientModule)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:215(_ProxyTensor)
        1    0.000    0.000    0.000    0.000 bonds.py:58(CovalentBond)
        1    0.000    0.000    0.000    0.000 exceptions.py:11(SymPyDeprecationWarning)
        1    0.000    0.000    0.000    0.000 single.py:341(NthAlgebraic)
        1    0.000    0.000    0.000    0.000 linear.py:48(Linear)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:1122(TOMS748Solver)
        1    0.000    0.000    0.000    0.000 rrule.py:1418(_rrulestr)
        1    0.000    0.000    0.000    0.000 __init__.py:143(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:989(IntStorage)
        1    0.000    0.000    0.000    0.000 core.py:3553(White)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 tensor.py:1597(TensorType)
        1    0.000    0.000    0.000    0.000 rnn.py:948(RNNCell)
        1    0.000    0.000    0.000    0.000 conv_add.py:52(ConvAddReLU2d)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1363(exec_module)
        1    0.000    0.000    0.000    0.000 tokens.py:334(CommentToken)
        1    0.000    0.000    0.000    0.000 numbers.py:762(harmonic)
        1    0.000    0.000    0.000    0.000 core.py:4381(MatchFirst)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9889(trapezoid_gen)
        1    0.000    0.000    0.000    0.000 distance.py:1990(<dictcomp>)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:25(lerchphi)
        1    0.000    0.000    0.000    0.000 __init__.py:889(FloatStorage)
       51    0.000    0.000    0.000    0.000 iterables.py:861(key)
        1    0.000    0.000    0.000    0.000 singleton.py:114(__init__)
        1    0.000    0.000    0.000    0.000 arrayterator.py:16(Arrayterator)
        1    0.000    0.000    0.000    0.000 rrule.py:94(rrulebase)
        1    0.000    0.000    0.000    0.000 calendar.py:150(Calendar)
        2    0.000    0.000    0.000    0.000 core.py:6643(__setattr__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10754(tukeylambda_gen)
        1    0.000    0.000    0.000    0.000 bn_relu.py:48(BNReLU3d)
        1    0.000    0.000    0.000    0.000 transforms.py:955(LowerCholeskyTransform)
        1    0.000    0.000    0.000    0.000 graphs.py:40(CUDAGraph)
        1    0.000    0.000    0.000    0.000 six.py:169(_SixMetaPathImporter)
        1    0.000    0.000    0.000    0.000 _data.py:168(_minmax_mixin)
        1    0.000    0.000    0.000    0.000 partitions.py:15(Partition)
        1    0.000    0.000    0.000    0.000 cobyla.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sets.py:10(MatrixSet)
        1    0.000    0.000    0.000    0.000 npyio.py:106(NpzFile)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7134(mielke_gen)
        1    0.000    0.000    0.000    0.000 _atfork.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unix_events.py:457(_UnixReadPipeTransport)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11948(rv_histogram)
        1    0.000    0.000    0.000    0.000 fancysets.py:166(Integers)
        1    0.000    0.000    0.000    0.000 rmsprop.py:11(RMSprop)
        1    0.000    0.000    0.000    0.000 lambdify.py:1123(_EvaluatorPrinter)
        1    0.000    0.000    0.000    0.000 warnings.py:25(SetuptoolsWarning)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3134(genpareto_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3321(genextreme_gen)
        1    0.000    0.000    0.000    0.000 proxy_tensor.py:579(DecompositionInterpreter)
        1    0.000    0.000    0.000    0.000 transforms.py:280(__init__)
        1    0.000    0.000    0.000    0.000 utils.py:11(WeightedQuantizedModule)
        1    0.000    0.000    0.000    0.000 __init__.py:79(method_cache)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:299(_process_parameters)
        1    0.000    0.000    0.000    0.000 assume.py:358(UndefinedPredicate)
        1    0.000    0.000    0.000    0.000 kind.py:257(__init__)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:900(_Patcher)
        1    0.000    0.000    0.000    0.000 __init__.py:72(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:2266(CompositeGenericTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:1402(_fixupChildren)
        1    0.000    0.000    0.000    0.000 ticker.py:1413(EngFormatter)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:159(ChunkStream)
        1    0.000    0.000    0.000    0.000 series.py:1496(ParametricLineBaseSeries)
        1    0.000    0.000    0.000    0.000 normalization.py:87(LayerNorm)
        9    0.000    0.000    0.000    0.000 enum.py:1354(<lambda>)
        1    0.000    0.000    0.000    0.000 hyper.py:1087(HyperRep_cosasin)
        1    0.000    0.000    0.000    0.000 trace.py:11(Trace)
        1    0.000    0.000    0.000    0.000 difflib.py:724(Differ)
        1    0.000    0.000    0.000    0.000 autograd_function.py:536(CtxWithSavedTensors)
        1    0.000    0.000    0.000    0.000 _ops.py:589(__init__)
        1    0.000    0.000    0.000    0.000 dos.py:1413(LobsterCompleteDos)
        1    0.000    0.000    0.000    0.000 pc_groups.py:42(Collector)
        1    0.000    0.000    0.000    0.000 mod.py:12(Mod)
        1    0.000    0.000    0.000    0.000 _version.py:14(NumpyVersion)
        1    0.000    0.000    0.000    0.000 ideals.py:282(ModuleImplementedIdeal)
        1    0.000    0.000    0.000    0.000 arffread.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pycode.py:765(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rnn.py:230(GRUCell)
        1    0.000    0.000    0.000    0.000 _ode.py:781(IntegratorBase)
        1    0.000    0.000    0.000    0.000 cm.py:75(_DeprecatedCmapDictWrapper)
        1    0.000    0.000    0.000    0.000 lkj_cholesky.py:19(LKJCholesky)
        1    0.000    0.000    0.000    0.000 functions.py:11(TensorProduct)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1905(sinc)
        1    0.000    0.000    0.000    0.000 discovery.py:84(_Finder)
        1    0.000    0.000    0.000    0.000 outputs.py:4849(Dynmat)
        1    0.000    0.000    0.000    0.000 widgets.py:1417(_SelectorWidget)
        1    0.000    0.000    0.000    0.000 outputs.py:5824(WSWQ)
        7    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:30(_isnull)
        1    0.000    0.000    0.000    0.000 function.py:252(_HookMixin)
        1    0.000    0.000    0.000    0.000 wavelets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 point.py:1073(Point3D)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5508(FoldedDistribution)
        1    0.000    0.000    0.000    0.000 core.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 dataset.py:280(Subset)
        1    0.000    0.000    0.000    0.000 pg_operation.py:10(PointGroupOp)
        1    0.000    0.000    0.000    0.000 padding.py:330(_ReplicationPadNd)
        1    0.000    0.000    0.000    0.000 unix_events.py:1337(ThreadedChildWatcher)
        1    0.000    0.000    0.000    0.000 pycode.py:89(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rnn.py:749(RNNCellBase)
        1    0.000    0.000    0.000    0.000 sampler.py:139(SubsetRandomSampler)
        1    0.000    0.000    0.000    0.000 _ltisys.py:132(lti)
        1    0.000    0.000    0.000    0.000 batchnorm.py:9(_BatchNorm)
        1    0.000    0.000    0.000    0.000 _ode.py:1250(lsoda)
        2    0.000    0.000    0.000    0.000 facts.py:305(rules_beta)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:237(<lambda>)
        1    0.000    0.000    0.000    0.000 structure.py:83(Neighbor)
       11    0.000    0.000    0.000    0.000 api.py:488(method_factory)
        1    0.000    0.000    0.000    0.000 diophantine.py:40(DiophantineSolutionSet)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7473(kappa3_gen)
        1    0.000    0.000    0.000    0.000 combining.py:117(_ForkerIterDataPipe)
        1    0.000    0.000    0.000    0.000 linalg.py:108(LinearAlgebraMethods)
        1    0.000    0.000    0.000    0.000 _docscrape.py:25(Reader)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:393(WORLD)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3816(gengamma_gen)
        1    0.000    0.000    0.000    0.000 mio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:271(Gens)
        1    0.000    0.000    0.000    0.000 six.py:164(_resolve)
        1    0.000    0.000    0.000    0.000 backend_tools.py:800(ToolZoom)
        1    0.000    0.000    0.000    0.000 decoder.py:254(JSONDecoder)
        5    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        1    0.000    0.000    0.000    0.000 __init__.py:17(Future)
        1    0.000    0.000    0.000    0.000 __init__.py:714(ExFileObject)
        1    0.000    0.000    0.000    0.000 half_cauchy.py:12(HalfCauchy)
        1    0.000    0.000    0.000    0.000 __init__.py:899(HalfStorage)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2578(invwishart_gen)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:115(TokenList)
        1    0.000    0.000    0.000    0.000 _compression.py:9(BaseStream)
        1    0.000    0.000    0.000    0.000 contextlib.py:344(__exit__)
        1    0.000    0.000    0.000    0.000 streams.py:301(StreamWriter)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4346(_shift_scale_distribution_function)
        2    0.000    0.000    0.000    0.000 _pep440.py:158(_compare)
        8    0.000    0.000    0.000    0.000 mathtext.py:1903(__init__)
        1    0.000    0.000    0.000    0.000 _docscrape.py:623(ClassDoc)
        1    0.000    0.000    0.000    0.000 __init__.py:84(__init__)
        1    0.000    0.000    0.000    0.000 backend_tools.py:160(ToolToggleBase)
        1    0.000    0.000    0.000    0.000 __init__.py:919(IntStorage)
        1    0.000    0.000    0.000    0.000 docinfo.py:25(Version)
        1    0.000    0.000    0.000    0.000 integers.py:97(floor)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4387(TransformedDistribution)
        1    0.000    0.000    0.000    0.000 _pep440.py:140(__lt__)
        1    0.000    0.000    0.000    0.000 polyoptions.py:76(Options)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11258(wald_gen)
        1    0.000    0.000    0.000    0.000 mio4.py:1(<module>)
        1    0.000    0.000    0.000    0.000 scanner.py:2044(ScannedComments)
        1    0.000    0.000    0.000    0.000 units.py:110(ConversionInterface)
        8    0.000    0.000    0.000    0.000 unicode.py:9(__init__)
       18    0.000    0.000    0.000    0.000 typing_extensions.py:762(<genexpr>)
        1    0.000    0.000    0.000    0.000 _ode.py:600(complex_ode)
        3    0.000    0.000    0.000    0.000 units.py:808(wrap)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3772(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10191(truncnorm_gen)
        1    0.000    0.000    0.000    0.000 streamplot.py:249(DomainMap)
        1    0.000    0.000    0.000    0.000 fft.py:250(_ShapeAndDims)
        1    0.000    0.000    0.000    0.000 error_functions.py:2104(Shi)
        1    0.000    0.000    0.000    0.000 _odds_ratio.py:174(OddsRatioResult)
        1    0.000    0.000    0.000    0.000 msgpack.py:1(<module>)
        2    0.000    0.000    0.000    0.000 util.py:289(<listcomp>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:886(SupportsAbs)
        1    0.000    0.000    0.000    0.000 singularity_functions.py:14(SingularityFunction)
        1    0.000    0.000    0.000    0.000 line.py:1343(Ray)
        3    0.000    0.000    0.000    0.000 __init__.py:6(is_available)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:34(gamma)
        1    0.000    0.000    0.000    0.000 activation.py:1408(Softmax)
        1    0.000    0.000    0.000    0.000 queue.py:258(_PySimpleQueue)
        1    0.000    0.000    0.000    0.000 gumbel.py:12(Gumbel)
        1    0.000    0.000    0.000    0.000 sets.py:854(ProductSet)
        1    0.000    0.000    0.000    0.000 backend_tools.py:736(ZoomPanBase)
        1    0.000    0.000    0.000    0.000 kumaraswamy.py:20(Kumaraswamy)
        1    0.000    0.000    0.000    0.000 base_events.py:206(_SendfileFallbackProtocol)
        7    0.000    0.000    0.000    0.000 getlimits.py:157(_register_type)
        1    0.000    0.000    0.000    0.000 codata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1019(BoolStorage)
        1    0.000    0.000    0.000    0.000 _script.py:179(OrderedDictWrapper)
        1    0.000    0.000    0.000    0.000 util.py:182(Finalize)
        2    0.000    0.000    0.000    0.000 densebasic.py:255(dup_strip)
        1    0.000    0.000    0.000    0.000 __init__.py:637(RcParams)
        1    0.000    0.000    0.000    0.000 complexes.py:897(transpose)
        1    0.000    0.000    0.000    0.000 _vertex.py:9(VertexBase)
        1    0.000    0.000    0.000    0.000 combining.py:93(_ContainerTemplate)
        1    0.000    0.000    0.000    0.000 __init__.py:979(LongStorage)
        1    0.000    0.000    0.000    0.000 mvn.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:1613(TransformWrapper)
        1    0.000    0.000    0.000    0.000 fancysets.py:1110(ComplexRegion)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5835(__init__)
        1    0.000    0.000    0.000    0.000 fitpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7199(kappa4_gen)
        1    0.000    0.000    0.000    0.000 _disjoint_set.py:6(DisjointSet)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'select.epoll' objects}
        1    0.000    0.000    0.000    0.000 spglib.py:108(SpglibDataset)
        1    0.000    0.000    0.000    0.000 base.py:28(OdeSolver)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1347(ReduceOrder)
        1    0.000    0.000    0.000    0.000 dataloader.py:684(_MultiProcessingDataLoaderIter)
        1    0.000    0.000    0.000    0.000 _multivariate.py:211(multi_rv_generic)
        1    0.000    0.000    0.000    0.000 __init__.py:282(Throttler)
        1    0.000    0.000    0.000    0.000 kronecker.py:86(KroneckerProduct)
        1    0.000    0.000    0.000    0.000 _functions.py:6(SyncBatchNorm)
        5    0.000    0.000    0.000    0.000 typing.py:2588(final)
        1    0.000    0.000    0.000    0.000 boolalg.py:230(BooleanAtom)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3162(multinomial_gen)
        1    0.000    0.000    0.000    0.000 extras.py:1655(__init__)
        1    0.000    0.000    0.000    0.000 connection.py:347(Connection)
        1    0.000    0.000    0.000    0.000 tensor.py:792(_TensorManager)
        4    0.000    0.000    0.000    0.000 generate.py:67(<genexpr>)
       20    0.000    0.000    0.000    0.000 numbers.py:2835(__bool__)
        1    0.000    0.000    0.000    0.000 bn_relu.py:12(BNReLU2d)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:253(iTXt)
        1    0.000    0.000    0.000    0.000 transforms.py:459(ReshapeTransform)
        1    0.000    0.000    0.000    0.000 utils.py:104(_Deprecate)
        1    0.000    0.000    0.000    0.000 _internal.py:217(_getintp_ctype)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1304(OffsetImage)
       13    0.000    0.000    0.000    0.000 utils.py:35(wrapper)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7648(nakagami_gen)
        1    0.000    0.000    0.000    0.000 groups.py:139(PointGroup)
        1    0.000    0.000    0.000    0.000 __init__.py:855(_CudaLegacyStorage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9591(skewcauchy_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:929(ShortStorage)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:103(elliptic_f)
        1    0.000    0.000    0.000    0.000 plotgrid.py:16(PlotGrid)
        1    0.000    0.000    0.000    0.000 pkgutil.py:269(ImpLoader)
        1    0.000    0.000    0.000    0.000 __init__.py:219(__enter__)
        1    0.000    0.000    0.000    0.000 boolalg.py:397(BooleanFalse)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:114(FakeQuantize)
        1    0.000    0.000    0.000    0.000 tritools.py:11(TriAnalyzer)
        6    0.000    0.000    0.000    0.000 rcsetup.py:177(_validate_tex_preamble)
        1    0.000    0.000    0.000    0.000 profiler_util.py:16(EventList)
        1    0.000    0.000    0.000    0.000 __init__.py:1089(QUInt4x2Storage)
        1    0.000    0.000    0.000    0.000 _at.py:61(at)
        3    0.000    0.000    0.000    0.000 rcsetup.py:541(validate_ps_distiller)
        1    0.000    0.000    0.000    0.000 parabola.py:20(Parabola)
        1    0.000    0.000    0.000    0.000 blockmatrix.py:560(BlockDiagMatrix)
        1    0.000    0.000    0.000    0.000 __init__.py:545(Stack)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:516(VectorFunction)
        1    0.000    0.000    0.000    0.000 socket.py:662(SocketIO)
        1    0.000    0.000    0.000    0.000 conv.py:672(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 graph_module.py:27(_EvalCacheLoader)
        1    0.000    0.000    0.000    0.000 _svdp.py:50(_AProd)
        1    0.000    0.000    0.000    0.000 conv_fused.py:695(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 __init__.py:939(CharStorage)
       25    0.000    0.000    0.000    0.000 polyoptions.py:198(<genexpr>)
        1    0.000    0.000    0.000    0.000 pycode.py:416(ArrayPrinter)
        1    0.000    0.000    0.000    0.000 tr_interior_point.py:23(BarrierSubproblem)
        1    0.000    0.000    0.000    0.000 orderings.py:63(ProductOrder)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5604(invweibull_gen)
        2    0.000    0.000    0.000    0.000 cache.py:190(LazyFunction)
        1    0.000    0.000    0.000    0.000 rotation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:51(FuncTorchInterpreter)
        1    0.000    0.000    0.000    0.000 argparse.py:1328(_ActionsContainer)
        1    0.000    0.000    0.000    0.000 graph.py:113(_Namespace)
        1    0.000    0.000    0.000    0.000 __config__.py:95(<listcomp>)
        1    0.000    0.000    0.000    0.000 _machar.py:17(MachAr)
        1    0.000    0.000    0.000    0.000 version.py:69(_BaseVersion)
        1    0.000    0.000    0.000    0.000 mock.py:2422(_Call)
        1    0.000    0.000    0.000    0.000 batchnorm.py:17(_NormBase)
       14    0.000    0.000    0.000    0.000 {method 'seek' of '_io.StringIO' objects}
        2    0.000    0.000    0.000    0.000 {method 'tobytes' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 function_base.py:2117(vectorize)
        1    0.000    0.000    0.000    0.000 conv_add.py:9(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 _atfork.py:15(_register)
       12    0.000    0.000    0.000    0.000 patches.py:1879(<genexpr>)
        1    0.000    0.000    0.000    0.000 difflib.py:1666(HtmlDiff)
        1    0.000    0.000    0.000    0.000 sputils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1204(catalan)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:129(bernoulli_gen)
        1    0.000    0.000    0.000    0.000 modules.py:1647(PowerBasisElement)
        1    0.000    0.000    0.000    0.000 transformer.py:166(TransformerEncoder)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:611(arcsine_gen)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:37(FancyGetopt)
        1    0.000    0.000    0.000    0.000 inverse.py:8(Inverse)
        1    0.000    0.000    0.000    0.000 sets.py:1893(UniversalSet)
        1    0.000    0.000    0.000    0.000 relaxed_categorical.py:88(RelaxedOneHotCategorical)
       16    0.000    0.000    0.000    0.000 dataclasses.py:1239(<genexpr>)
        1    0.000    0.000    0.000    0.000 conv.py:1141(_LazyConvXdMixin)
        1    0.000    0.000    0.000    0.000 tag.py:20(Tag)
        1    0.000    0.000    0.000    0.000 ndim_array.py:15(ArrayKind)
        2    0.000    0.000    0.000    0.000 _adapters.py:12(__init__)
        1    0.000    0.000    0.000    0.000 facts.py:135(apply_beta_to_alpha_route)
       15    0.000    0.000    0.000    0.000 dataclasses.py:179(__repr__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3046(genlogistic_gen)
        1    0.000    0.000    0.000    0.000 mock.py:293(_Sentinel)
        1    0.000    0.000    0.000    0.000 string.py:57(Template)
        1    0.000    0.000    0.000    0.000 mio_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 padding.py:184(ReflectionPad1d)
        1    0.000    0.000    0.000    0.000 point.py:860(Point2D)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:512(AddressList)
        1    0.000    0.000    0.000    0.000 quadpack.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:370(_FuncPtr)
        1    0.000    0.000    0.000    0.000 sympify.py:27(SympifyError)
        3    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 polar.py:720(_WedgeBbox)
        7    0.000    0.000    0.000    0.000 memoization.py:4(recurrence_memo)
        1    0.000    0.000    0.000    0.000 linear.py:15(Linear)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:428(FloorDiv)
        1    0.000    0.000    0.000    0.000 outputs.py:4024(Procar)
        1    0.000    0.000    0.000    0.000 dense.py:28(DenseMatrix)
        1    0.000    0.000    0.000    0.000 function.py:674(NestedIOFunction)
        1    0.000    0.000    0.000    0.000 subgraph_rewriter.py:14(Match)
        1    0.000    0.000    0.000    0.000 dbapi2.py:48(<listcomp>)
        1    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
        1    0.000    0.000    0.000    0.000 repmatrix.py:585(_fromrep)
        1    0.000    0.000    0.000    0.000 markers.py:274(Marker)
        1    0.000    0.000    0.000    0.000 _cubic.py:160(PchipInterpolator)
        1    0.000    0.000    0.000    0.000 _type_utils.py:270(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:379(DataFlowEdge)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:36(IntFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:1079(QInt32Storage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7768(ncx2_gen)
        1    0.000    0.000    0.000    0.000 backend_tools.py:992(ToolHelpBase)
        1    0.000    0.000    0.000    0.000 activation.py:161(Softmax)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1235(_kwargs2args)
        1    0.000    0.000    0.000    0.000 decomp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1030(planck_gen)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:786(keys)
        1    0.000    0.000    0.000    0.000 fancysets.py:24(Rationals)
        6    0.000    0.000    0.000    0.000 docstring.py:33(__init__)
        7    0.000    0.000    0.000    0.000 __init__.py:27(__init__)
        1    0.000    0.000    0.000    0.000 core.py:1283(_replace_dtype_fields_recursive)
        1    0.000    0.000    0.000    0.000 transforms.py:670(AbsTransform)
        1    0.000    0.000    0.000    0.000 fft.py:409(_CanonicalizeC2rReturn)
       10    0.000    0.000    0.000    0.000 decorator.py:195(<genexpr>)
        1    0.000    0.000    0.000    0.000 loss.py:622(BCEWithLogitsLoss)
        1    0.000    0.000    0.000    0.000 dir_util.py:15(SkipRepeatAbsolutePaths)
       20    0.000    0.000    0.000    0.000 mul.py:672(<listcomp>)
        1    0.000    0.000    0.000    0.000 distance.py:1983(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_224}
        1    0.000    0.000    0.000    0.000 ticker.py:2735(LogitLocator)
        3    0.000    0.000    0.000    0.000 feedparser.py:210(_pop_message)
        4    0.000    0.000    0.000    0.000 {method 'extend' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5135(geninvgauss_gen)
        1    0.000    0.000    0.000    0.000 outputs.py:3699(VolumetricData)
        1    0.000    0.000    0.000    0.000 core.py:116(<listcomp>)
        1    0.000    0.000    0.000    0.000 rnn.py:1018(RNNCellBase)
        1    0.000    0.000    0.000    0.000 _globals.py:52(__new__)
        1    0.000    0.000    0.000    0.000 _sources.py:111(ParsedDef)
        1    0.000    0.000    0.000    0.000 conv.py:483(Conv3d)
        1    0.000    0.000    0.000    0.000 __init__.py:959(BFloat16Storage)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 normalization.py:14(LocalResponseNorm)
        1    0.000    0.000    0.000    0.000 calendar.py:295(TextCalendar)
        1    0.000    0.000    0.000    0.000 __init__.py:1308(__init__)
        1    0.000    0.000    0.000    0.000 special.py:10(ZeroMatrix)
        1    0.000    0.000    0.000    0.000 __init__.py:1029(BFloat16Storage)
        1    0.000    0.000    0.000    0.000 _ode.py:1121(dopri5)
        1    0.000    0.000    0.000    0.000 zipfile.py:802(ZipExtFile)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:8(Embedding)
        1    0.000    0.000    0.000    0.000 para4tb.py:12(ParaTB)
        1    0.000    0.000    0.000    0.000 join.py:88(_JoinConfig)
        1    0.000    0.000    0.000    0.000 operations.py:38(__init__)
        1    0.000    0.000    0.000    0.000 rnn.py:7(LSTM)
        1    0.000    0.000    0.000    0.000 _trustregion.py:30(BaseQuadraticSubproblem)
        1    0.000    0.000    0.000    0.000 rnn.py:30(PackedSequence)
        1    0.000    0.000    0.000    0.000 taskgroups.py:12(TaskGroup)
        1    0.000    0.000    0.000    0.000 __init__.py:2401(_CustomTextWrap)
        1    0.000    0.000    0.000    0.000 fileopener.py:13(FileOpenerIterDataPipe)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7963(t_gen)
        1    0.000    0.000    0.000    0.000 backend_tools.py:474(ToolFullScreen)
        1    0.000    0.000    0.000    0.000 _deprecation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 generate.py:26(Sieve)
        1    0.000    0.000    0.000    0.000 __init__.py:1099(QUInt2x4Storage)
        1    0.000    0.000    0.000    0.000 activation.py:1249(PReLU)
        1    0.000    0.000    0.000    0.000 __init__.py:969(ComplexDoubleStorage)
        1    0.000    0.000    0.000    0.000 _util.py:559(_FunctionWrapper)
        1    0.000    0.000    0.000    0.000 rnn.py:282(RNNBase)
        1    0.000    0.000    0.000    0.000 exprtools.py:809(Term)
       32    0.000    0.000    0.000    0.000 {method 'is_dir' of 'posix.DirEntry' objects}
        1    0.000    0.000    0.000    0.000 decomp_cholesky.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Orbit.py:2(orbit)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:191(<listcomp>)
        1    0.000    0.000    0.000    0.000 transforms.py:634(TanhTransform)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:6(autocast)
        1    0.000    0.000    0.000    0.000 configparser.py:297(ParsingError)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10074(truncexpon_gen)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:132(ImmutableDenseNDimArray)
        1    0.000    0.000    0.000    0.000 feedparser.py:45(BufferedSubFile)
        1    0.000    0.000    0.000    0.000 core.py:877(_DomainGreaterEqual)
        1    0.000    0.000    0.000    0.000 engine.py:342(DiagnosticEngine)
       17    0.000    0.000    0.000    0.000 stride_tricks.py:476(_broadcast_arrays_dispatcher)
        2    0.000    0.000    0.000    0.000 Image.py:3754(register_extension)
        1    0.000    0.000    0.000    0.000 events.py:24(Handle)
        1    0.000    0.000    0.000    0.000 linear_relu.py:50(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 computed_entries.py:549(ComputedStructureEntry)
        1    0.000    0.000    0.000    0.000 patches.py:1833(_Style)
        1    0.000    0.000    0.000    0.000 _datasource.py:536(Repository)
        1    0.000    0.000    0.000    0.000 events.py:98(TimerHandle)
        1    0.000    0.000    0.000    0.000 __init__.py:35(_SupportedQEnginesProp)
        1    0.000    0.000    0.000    0.000 core.py:2430(Literal)
        1    0.000    0.000    0.000    0.000 expr.py:4134(ExprBuilder)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1767(C14NWriterTarget)
        1    0.000    0.000    0.000    0.000 comments.py:467(CommentedSeq)
        1    0.000    0.000    0.000    0.000 assume.py:80(AppliedPredicate)
        1    0.000    0.000    0.000    0.000 configparser.py:1210(ConfigParser)
        2    0.000    0.000    0.000    0.000 _new_distributions.py:44(__new__)
        1    0.000    0.000    0.000    0.000 subprocess.py:126(CalledProcessError)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._jit_init}
       16    0.000    0.000    0.000    0.000 results.py:29(__getitem__)
       16    0.000    0.000    0.000    0.000 arraypad.py:525(_pad_dispatcher)
        1    0.000    0.000    0.000    0.000 charset.py:167(Charset)
        1    0.000    0.000    0.000    0.000 utils.py:8(ReferenceQuantizedModule)
        1    0.000    0.000    0.000    0.000 _orthogonal.py:115(orthopoly1d)
        1    0.000    0.000    0.000    0.000 collections.py:934(PathCollection)
        1    0.000    0.000    0.000    0.000 _nbit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:267(Rational)
        1    0.000    0.000    0.000    0.000 mathml.py:21(MathMLPrinterBase)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11558(crystalball_gen)
        1    0.000    0.000    0.000    0.000 triplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 complexes.py:142(im)
        1    0.000    0.000    0.000    0.000 outputs.py:3969(Elfcar)
        1    0.000    0.000    0.000    0.000 polyoptions.py:349(Order)
        1    0.000    0.000    0.000    0.000 __init__.py:43(QuantizedEngine)
        1    0.000    0.000    0.000    0.000 rnn.py:492(GRU)
        1    0.000    0.000    0.000    0.000 hmac.py:27(HMAC)
        1    0.000    0.000    0.000    0.000 loss.py:931(HuberLoss)
        1    0.000    0.000    0.000    0.000 threading.py:1421(_DummyThread)
        1    0.000    0.000    0.000    0.000 factorials.py:828(binomial)
        1    0.000    0.000    0.000    0.000 core.py:5202(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 dviread.py:734(Tfm)
        1    0.000    0.000    0.000    0.000 activation.py:199(MultiheadAttention)
        1    0.000    0.000    0.000    0.000 bandstructure.py:909(LobsterBandStructureSymmLine)
        1    0.000    0.000    0.000    0.000 byteordercodes.py:1(<module>)
        2    0.000    0.000    0.000    0.000 _jit_internal.py:639(ignore)
        1    0.000    0.000    0.000    0.000 filter_design.py:1(<module>)
        4    0.000    0.000    0.000    0.000 typing.py:442(__init__)
        1    0.000    0.000    0.000    0.000 band_data_in.py:12(BandDataIn)
        1    0.000    0.000    0.000    0.000 distributed.py:164(_DDPSink)
        1    0.000    0.000    0.000    0.000 matrix_element.py:5(Matrix_Ele)
        1    0.000    0.000    0.000    0.000 traceback.py:247(FrameSummary)
        1    0.000    0.000    0.000    0.000 trigonometric.py:45(TrigonometricFunction)
        1    0.000    0.000    0.000    0.000 qconfig.py:106(QConfigDynamic)
       14    0.000    0.000    0.000    0.000 mock.py:1937(<genexpr>)
        1    0.000    0.000    0.000    0.000 animation.py:696(ImageMagickBase)
        1    0.000    0.000    0.000    0.000 _iotools.py:229(NameValidator)
        1    0.000    0.000    0.000    0.000 numbers.py:1350(genocchi)
        1    0.000    0.000    0.000    0.000 arpack.py:990(IterOpInv)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1384(TreeBuilder)
        1    0.000    0.000    0.000    0.000 axis.py:482(YTick)
        1    0.000    0.000    0.000    0.000 six.py:205(load_module)
        1    0.000    0.000    0.000    0.000 py38.py:1(<module>)
        1    0.000    0.000    0.000    0.000 kdtree.py:1(<module>)
        1    0.000    0.000    0.000    0.000 case.py:1388(FunctionTestCase)
       15    0.000    0.000    0.000    0.000 fromnumeric.py:2974(_prod_dispatcher)
        1    0.000    0.000    0.000    0.000 weak.py:37(WeakIdRef)
        1    0.000    0.000    0.000    0.000 widgets.py:1836(ToolHandles)
        1    0.000    0.000    0.000    0.000 headerregistry.py:156(BaseHeader)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:890(_PatchedFnDel)
        2    0.000    0.000    0.000    0.000 traceback.py:297(__getitem__)
        1    0.000    0.000    0.000    0.000 colors.py:695(LinearSegmentedColormap)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3789(Doc)
        1    0.000    0.000    0.000    0.000 animation.py:657(AVConvBase)
       18    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISLNK}
        3    0.000    0.000    0.000    0.000 __init__.py:421(<genexpr>)
        2    0.000    0.000    0.000    0.000 weakref.py:347(__new__)
        2    0.000    0.000    0.000    0.000 legend_handler.py:264(__init__)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:13(elliptic_k)
        2    0.000    0.000    0.000    0.000 scale.py:634(get_scale_names)
        3    0.000    0.000    0.000    0.000 datetime.py:2313(_create)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1632(TypeVar)
        1    0.000    0.000    0.000    0.000 _encoded_words.py:73(_QByteMap)
        1    0.000    0.000    0.000    0.000 timeit.py:84(Timer)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:228(IntervalPrinter)
        1    0.000    0.000    0.000    0.000 ImageFile.py:113(ImageFile)
        1    0.000    0.000    0.000    0.000 transforms.py:60(IntegralTransform)
        1    0.000    0.000    0.000    0.000 fold.py:10(Fold)
        1    0.000    0.000    0.000    0.000 complexes.py:20(re)
        1    0.000    0.000    0.000    0.000 legend_handler.py:176(HandlerNpointsYoffsets)
        1    0.000    0.000    0.000    0.000 expr_with_limits.py:538(AddWithLimits)
        2    0.000    0.000    0.000    0.000 <frozen posixpath>:52(normcase)
        5    0.000    0.000    0.000    0.000 constructor.py:331(add_multi_constructor)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1007(AnchoredOffsetbox)
        1    0.000    0.000    0.000    0.000 immutable.py:82(ImmutableDenseMatrix)
        1    0.000    0.000    0.000    0.000 mio5_utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pydoc.py:1129(__init__)
        1    0.000    0.000    0.000    0.000 stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rnn.py:1061(RNNCell)
        1    0.000    0.000    0.000    0.000 Bravais_Lattice.py:10(bravaislattice)
        1    0.000    0.000    0.000    0.000 tempfile.py:459(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 numbers.py:3757(Pi)
        1    0.000    0.000    0.000    0.000 cpp_backtrace.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:606(_FileInFile)
        1    0.000    0.000    0.000    0.000 hyper.py:866(HyperRep_power1)
        1    0.000    0.000    0.000    0.000 inference.py:252(KB)
        1    0.000    0.000    0.000    0.000 hyper.py:1002(HyperRep_sqrts1)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6257(vonmises_fisher_gen)
        1    0.000    0.000    0.000    0.000 compressed.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:564(polygamma)
        1    0.000    0.000    0.000    0.000 tz.py:201(tzlocal)
        1    0.000    0.000    0.000    0.000 hyper.py:959(HyperRep_asin1)
        1    0.000    0.000    0.000    0.000 _util.py:13(DeferredError)
        1    0.000    0.000    0.000    0.000 kl.py:80(_Match)
        1    0.000    0.000    0.000    0.000 __init__.py:1059(QUInt8Storage)
        1    0.000    0.000    0.000    0.000 tnc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1557(List)
        1    0.000    0.000    0.000    0.000 fancysets.py:73(Naturals)
        1    0.000    0.000    0.000    0.000 mstats_basic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:8376(_convert2ma)
        1    0.000    0.000    0.000    0.000 <frozen _collections_abc>:381(__subclasshook__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1832(dirichlet_frozen)
        1    0.000    0.000    0.000    0.000 _windows.py:2509(<listcomp>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6223(dirichlet_multinomial_frozen)
        1    0.000    0.000    0.000    0.000 hyper.py:978(HyperRep_asin2)
        1    0.000    0.000    0.000    0.000 lbfgsb.py:1(<module>)
        1    0.000    0.000    0.000    0.000 modules.py:1005(SubQuotientModule)
        3    0.000    0.000    0.000    0.000 index_tricks.py:320(__init__)
        1    0.000    0.000    0.000    0.000 functions.py:89(defun_static)
        1    0.000    0.000    0.000    0.000 frontend.py:519(WithItemBuilder)
        1    0.000    0.000    0.000    0.000 widgets.py:238(Slider)
        1    0.000    0.000    0.000    0.000 _type_utils.py:338(<dictcomp>)
        1    0.000    0.000    0.000    0.000 discovery.py:132(PackageFinder)
        1    0.000    0.000    0.000    0.000 interpolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 autocast_mode.py:13(autocast)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:222(lowergamma)
        1    0.000    0.000    0.000    0.000 spglib.py:254(SpglibMagneticDataset)
        3    0.000    0.000    0.000    0.000 rcsetup.py:740(validate_bbox)
        1    0.000    0.000    0.000    0.000 art3d.py:293(Patch3D)
        1    0.000    0.000    0.000    0.000 tz.py:1475(GettzFunc)
        8    0.000    0.000    0.000    0.000 animation.py:116(wrapper)
        1    0.000    0.000    0.000    0.000 tags.py:42(Tag)
        1    0.000    0.000    0.000    0.000 bsr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutations.py:244(Cycle)
        1    0.000    0.000    0.000    0.000 boolalg.py:572(And)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6574(loggamma_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6247(levy_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11743(argus_gen)
        1    0.000    0.000    0.000    0.000 decomp_qr.py:1(<module>)
       12    0.000    0.000    0.000    0.000 comments.py:55(__call__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8974(rdist_gen)
        1    0.000    0.000    0.000    0.000 idl.py:1(<module>)
        1    0.000    0.000    0.000    0.000 morphology.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colors.py:80(_ColorMapping)
        1    0.000    0.000    0.000    0.000 numbers.py:3888(TribonacciConstant)
        1    0.000    0.000    0.000    0.000 odepack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 header.py:541(_Accumulator)
        1    0.000    0.000    0.000    0.000 tz.py:1036(tzstr)
        1    0.000    0.000    0.000    0.000 special.py:104(Identity)
        1    0.000    0.000    0.000    0.000 _cubature.py:48(CubatureResult)
        1    0.000    0.000    0.000    0.000 observer.py:1393(NoopObserver)
        1    0.000    0.000    0.000    0.000 interface.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polynomials.py:773(legendre)
        1    0.000    0.000    0.000    0.000 more.py:2438(islice_extended)
        1    0.000    0.000    0.000    0.000 contour.py:1388(QuadContourSet)
        1    0.000    0.000    0.000    0.000 ltisys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3936(__init__)
        1    0.000    0.000    0.000    0.000 mio5.py:1(<module>)
        2    0.000    0.000    0.000    0.000 integerring.py:54(__eq__)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:223(polylog)
        1    0.000    0.000    0.000    0.000 extrapolation.py:266(levin_class)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:27(ExecutionStats)
        3    0.000    0.000    0.000    0.000 rcsetup.py:754(validate_sketch)
        1    0.000    0.000    0.000    0.000 loss.py:28(_WeightedLoss)
        1    0.000    0.000    0.000    0.000 hyper.py:918(HyperRep_log1)
        1    0.000    0.000    0.000    0.000 _structures.py:6(InfinityType)
        1    0.000    0.000    0.000    0.000 sets.py:1726(Complement)
        1    0.000    0.000    0.000    0.000 platform.py:739(_Processor)
        3    0.000    0.000    0.000    0.000 ctx_mp_python.py:602(make_mpc)
        1    0.000    0.000    0.000    0.000 matexpr.py:597(MatrixElement)
        1    0.000    0.000    0.000    0.000 ndgriddata.py:1(<module>)
        1    0.000    0.000    0.000    0.000 importer.py:170(_SysImporter)
        1    0.000    0.000    0.000    0.000 harwell_boeing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colors.py:956(Normalize)
        1    0.000    0.000    0.000    0.000 complexes.py:820(conjugate)
        1    0.000    0.000    0.000    0.000 resolver.py:303(VersionedResolver)
        1    0.000    0.000    0.000    0.000 _aliases.py:147(zeros)
        1    0.000    0.000    0.000    0.000 comments.py:230(LineCol)
        9    0.000    0.000    0.000    0.000 multiarray.py:346(where)
        1    0.000    0.000    0.000    0.000 mstats_extras.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _common.py:127(_TZifHeader)
        1    0.000    0.000    0.000    0.000 more.py:2880(run_length)
        1    0.000    0.000    0.000    0.000 formal.py:958(Coeff)
        1    0.000    0.000    0.000    0.000 _arraytools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _multiufuncs.py:24(MultiUFunc)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8859(powerlognorm_gen)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:14(TorchDispatchMode)
        1    0.000    0.000    0.000    0.000 linear.py:134(Bilinear)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:5382(MonotonicTransformedDistribution)
        1    0.000    0.000    0.000    0.000 ase.py:55(MSONAtoms)
        1    0.000    0.000    0.000    0.000 nonlin.py:1(<module>)
        1    0.000    0.000    0.000    0.000 calculus.py:5(MatrixCalculusMethods)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 formal.py:1492(FiniteFormalPowerSeries)
        1    0.000    0.000    0.000    0.000 __init__.py:60(Quantize)
        1    0.000    0.000    0.000    0.000 _backend.py:7(_ScipyBackend)
        1    0.000    0.000    0.000    0.000 __init__.py:99(version_info)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9998(triang_gen)
        1    0.000    0.000    0.000    0.000 function.py:882(UndefinedFunction)
        4    0.000    0.000    0.000    0.000 polynomial.py:1218(_coeffs)
        1    0.000    0.000    0.000    0.000 scale.py:686(<listcomp>)
        1    0.000    0.000    0.000    0.000 flatten.py:9(Flatten)
        1    0.000    0.000    0.000    0.000 rrule.py:1315(_genitem)
        1    0.000    0.000    0.000    0.000 mathtext.py:1899(GlueSpec)
        1    0.000    0.000    0.000    0.000 Orbit_spd_with_spin.py:19(orbit_spd_with_spin)
        1    0.000    0.000    0.000    0.000 lti_conversion.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unix_events.py:593(_UnixWritePipeTransport)
        1    0.000    0.000    0.000    0.000 activation.py:241(PReLU)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:280(PngInfo)
        1    0.000    0.000    0.000    0.000 conv.py:19(Conv1d)
        1    0.000    0.000    0.000    0.000 trigonometric.py:3448(atan2)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:196(AAA)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4308(multivariate_t_gen)
        1    0.000    0.000    0.000    0.000 optimize.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conv.py:765(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 profiler.py:553(ExecutionGraphObserver)
        1    0.000    0.000    0.000    0.000 events.py:189(ScalarEvent)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:302(<dictcomp>)
        1    0.000    0.000    0.000    0.000 activation.py:18(Threshold)
        1    0.000    0.000    0.000    0.000 _infra.py:129(Location)
        1    0.000    0.000    0.000    0.000 unix_events.py:1033(SafeChildWatcher)
        1    0.000    0.000    0.000    0.000 _script.py:413(RecursiveScriptClass)
        1    0.000    0.000    0.000    0.000 decomp_lu.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pydoc.py:1855(<listcomp>)
        1    0.000    0.000    0.000    0.000 hierarchy.py:1074(ClusterNode)
        1    0.000    0.000    0.000    0.000 utils.py:183(DisableOnWriteError)
        1    0.000    0.000    0.000    0.000 transformer.py:317(TransformerDecoder)
        1    0.000    0.000    0.000    0.000 operations.py:487(LatticeOp)
        1    0.000    0.000    0.000    0.000 {built-in method posix.sysconf}
        1    0.000    0.000    0.000    0.000 hyper.py:1109(HyperRep_sinasin)
        1    0.000    0.000    0.000    0.000 interpnd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4888(invgamma_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6351(levy_l_gen)
        1    0.000    0.000    0.000    0.000 distance.py:8(PairwiseDistance)
        1    0.000    0.000    0.000    0.000 core.py:5478(_update_ignorer)
        1    0.000    0.000    0.000    0.000 more.py:941(bucket)
        1    0.000    0.000    0.000    0.000 ImageFile.py:866(PyEncoder)
        1    0.000    0.000    0.000    0.000 core.py:2766(Word)
        1    0.000    0.000    0.000    0.000 kind.py:165(_BooleanKind)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:395(zeta)
        1    0.000    0.000    0.000    0.000 weibull.py:11(Weibull)
        1    0.000    0.000    0.000    0.000 mathtext.py:2632(State)
       10    0.000    0.000    0.000    0.000 __init__.py:318(_wrap_deprecated_method)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3112(_moment_methods)
        1    0.000    0.000    0.000    0.000 headerregistry.py:402(MIMEVersionHeader)
        1    0.000    0.000    0.000    0.000 morestats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 permutation.py:168(MatrixPermute)
        1    0.000    0.000    0.000    0.000 series.py:1289(LineOver1DRangeSeries)
        1    0.000    0.000    0.000    0.000 _script.py:1478(_ScriptProfileColumn)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1506(XMLParser)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1060(digamma)
        1    0.000    0.000    0.000    0.000 streams.py:12(Stream)
        1    0.000    0.000    0.000    0.000 measurements.py:1(<module>)
        1    0.000    0.000    0.000    0.000 kde.py:1(<module>)
        9    0.000    0.000    0.000    0.000 core.py:1550(<genexpr>)
        2    0.000    0.000    0.000    0.000 multidimensional.py:81(__init__)
        1    0.000    0.000    0.000    0.000 core.py:2372(_MaskedPrintOption)
        1    0.000    0.000    0.000    0.000 _arffread.py:65(Attribute)
        1    0.000    0.000    0.000    0.000 rbf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1347(fisk_gen)
        4    0.000    0.000    0.000    0.000 sympify.py:28(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:74(<listcomp>)
       16    0.000    0.000    0.000    0.000 structure.py:244(sites)
        1    0.000    0.000    0.000    0.000 complexes.py:696(arg)
        6    0.000    0.000    0.000    0.000 printer.py:422(print_function)
        1    0.000    0.000    0.000    0.000 activation.py:1361(Softmin)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:6099(laplace_asymmetric_gen)
        1    0.000    0.000    0.000    0.000 spfun_stats.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7553(moyal_gen)
        1    0.000    0.000    0.000    0.000 qhull.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:456(_ASN1Object)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6468(__init__)
        1    0.000    0.000    0.000    0.000 ticker.py:1816(IndexLocator)
        1    0.000    0.000    0.000    0.000 text.py:1326(_AnnotationBase)
        1    0.000    0.000    0.000    0.000 activation.py:52(Hardswish)
        1    0.000    0.000    0.000    0.000 fir_filter_design.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:282(<listcomp>)
        9    0.000    0.000    0.000    0.000 fromnumeric.py:2172(_sum_dispatcher)
        1    0.000    0.000    0.000    0.000 decomp_schur.py:1(<module>)
        6    0.000    0.000    0.000    0.000 conflict.py:37(<genexpr>)
        1    0.000    0.000    0.000    0.000 _base.py:569(Executor)
        1    0.000    0.000    0.000    0.000 padding.py:31(ConstantPad1d)
        1    0.000    0.000    0.000    0.000 linesearch.py:1(<module>)
        3    0.000    0.000    0.000    0.000 rcsetup.py:520(_update_savefig_format)
        1    0.000    0.000    0.000    0.000 configparser.py:1255(SectionProxy)
        1    0.000    0.000    0.000    0.000 core.py:117(<listcomp>)
        3    0.000    0.000    0.000    0.000 <frozen _collections_abc>:812(__init__)
        1    0.000    0.000    0.000    0.000 batchnorm.py:48(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 _mannwhitneyu.py:21(_MWU)
        1    0.000    0.000    0.000    0.000 request.py:624(HTTPErrorProcessor)
        1    0.000    0.000    0.000    0.000 mio5_params.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:2577(SymmetricalLogLocator)
        1    0.000    0.000    0.000    0.000 zipfile.py:2222(CompleteDirs)
        1    0.000    0.000    0.000    0.000 _check.py:8(AttributeTypeIsSupportedChecker)
       12    0.000    0.000    0.000    0.000 _pep440.py:392(_parse_letter_version)
       16    0.000    0.000    0.000    0.000 structure.py:3559(charge)
        1    0.000    0.000    0.000    0.000 mathtext.py:2107(Ship)
        1    0.000    0.000    0.000    0.000 parse.py:353(_fix_result_transcoding)
        1    0.000    0.000    0.000    0.000 special.py:68(GenericZeroMatrix)
        1    0.000    0.000    0.000    0.000 logistic_normal.py:8(LogisticNormal)
        1    0.000    0.000    0.000    0.000 netcdf.py:1(<module>)
        1    0.000    0.000    0.000    0.000 moduleTNC.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _gauss_kronrod.py:9(GaussKronrodQuadrature)
        1    0.000    0.000    0.000    0.000 core.py:5392(SkipTo)
        1    0.000    0.000    0.000    0.000 mock.py:1761(_patch_dict)
        1    0.000    0.000    0.000    0.000 index_tricks.py:530(__init__)
        1    0.000    0.000    0.000    0.000 signaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:42(LeviCivita)
        1    0.000    0.000    0.000    0.000 zeros.py:1(<module>)
        1    0.000    0.000    0.000    0.000 slsqp.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _rules.py:42(_MissingCustomSymbolicFunction)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11392(gennorm_gen)
        1    0.000    0.000    0.000    0.000 _rules.py:323(_FxFrontendDynamoMakeFx)
       13    0.000    0.000    0.000    0.000 fromnumeric.py:195(_reshape_dispatcher)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1367(StructuredVoidFormat)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:174(<lambda>)
        1    0.000    0.000    0.000    0.000 worker.py:124(_ResumeIteration)
        1    0.000    0.000    0.000    0.000 permutation.py:9(PermutationMatrix)
        1    0.000    0.000    0.000    0.000 _fortran.py:33(FortranFile)
        1    0.000    0.000    0.000    0.000 _covariance.py:538(CovViaCholesky)
        1    0.000    0.000    0.000    0.000 csc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 error_functions.py:1275(expint)
        1    0.000    0.000    0.000    0.000 _utils.py:25(EventMetrics)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:8(PixelShuffle)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2511(f_gen)
        1    0.000    0.000    0.000    0.000 headerregistry.py:12(Address)
        1    0.000    0.000    0.000    0.000 runner.py:30(TextTestResult)
        1    0.000    0.000    0.000    0.000 offsetbox.py:918(AuxTransformBox)
        1    0.000    0.000    0.000    0.000 mock.py:2891(PropertyMock)
        1    0.000    0.000    0.000    0.000 callable.py:18(MapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 function.py:410(Function)
        1    0.000    0.000    0.000    0.000 ElementTree.py:477(QName)
        2    0.000    0.000    0.000    0.000 main.py:1482(__init__)
        1    0.000    0.000    0.000    0.000 _pep440.py:165(LegacyVersion)
        1    0.000    0.000    0.000    0.000 __init__.py:463(SelectableGroups)
        1    0.000    0.000    0.000    0.000 _multivariate.py:877(multivariate_normal_frozen)
        1    0.000    0.000    0.000    0.000 conv_fused.py:407(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 slice.py:31(MatrixSlice)
        1    0.000    0.000    0.000    0.000 numbers.py:2890(NegativeOne)
        1    0.000    0.000    0.000    0.000 ImageFile.py:488(Parser)
        1    0.000    0.000    0.000    0.000 __init__.py:434(Stripper)
        9    0.000    0.000    0.000    0.000 typing.py:3026(<lambda>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:508(alpha_gen)
        1    0.000    0.000    0.000    0.000 constraints.py:96(_Dependent)
        1    0.000    0.000    0.000    0.000 fitpack2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 category.py:26(StrCategoryConverter)
        1    0.000    0.000    0.000    0.000 single.py:976(RationalRiccati)
        1    0.000    0.000    0.000    0.000 core.py:6004(Suppress)
        1    0.000    0.000    0.000    0.000 orderings.py:10(MonomialOrder)
        1    0.000    0.000    0.000    0.000 tz.py:1167(_tzicalvtz)
        1    0.000    0.000    0.000    0.000 decomp_svd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 shlex.py:19(shlex)
        1    0.000    0.000    0.000    0.000 dropout.py:5(Dropout)
        1    0.000    0.000    0.000    0.000 ElementTree.py:525(ElementTree)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5777(johnsonsb_gen)
        1    0.000    0.000    0.000    0.000 matrixbase.py:5400(DeferredVector)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:202(_concrete_ndptr)
        1    0.000    0.000    0.000    0.000 activation.py:568(SELU)
        2    0.000    0.000    0.000    0.000 polyclasses.py:1241(_new)
        1    0.000    0.000    0.000    0.000 __init__.py:106(__version__)
        1    0.000    0.000    0.000    0.000 composer.py:31(Composer)
        1    0.000    0.000    0.000    0.000 filelist.py:335(_UniqueDirs)
        1    0.000    0.000    0.000    0.000 colors.py:102(<dictcomp>)
        1    0.000    0.000    0.000    0.000 interpolate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:386(<dictcomp>)
        1    0.000    0.000    0.000    0.000 hyper.py:890(HyperRep_power2)
        1    0.000    0.000    0.000    0.000 ops.py:153(<listcomp>)
        1    0.000    0.000    0.000    0.000 runner.py:14(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 numbers.py:3545(NumberSymbol)
        1    0.000    0.000    0.000    0.000 _vertex.py:247(VertexCacheField)
        1    0.000    0.000    0.000    0.000 dataloader.py:71(_DatasetKind)
        1    0.000    0.000    0.000    0.000 scalarint.py:12(ScalarInt)
        1    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:503(_MissingDynamic)
        1    0.000    0.000    0.000    0.000 fourier.py:475(FiniteFourierSeries)
        1    0.000    0.000    0.000    0.000 constraints.py:515(_Cat)
        1    0.000    0.000    0.000    0.000 _adapters.py:114(OrphanPath)
        1    0.000    0.000    0.000    0.000 bessel.py:2044(marcumq)
        1    0.000    0.000    0.000    0.000 random.py:215(__init_subclass__)
        1    0.000    0.000    0.000    0.000 minpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bessel.py:1880(airybiprime)
        1    0.000    0.000    0.000    0.000 _tqdm_pandas.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:637(Barrier)
        1    0.000    0.000    0.000    0.000 getlimits.py:32(MachArLike)
        1    0.000    0.000    0.000    0.000 transpose.py:5(Transpose)
       10    0.000    0.000    0.000    0.000 symbolic_opset11.py:84(_apply_params)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:608(G_Function)
        1    0.000    0.000    0.000    0.000 mathtext.py:1994(Kern)
        1    0.000    0.000    0.000    0.000 spline.py:1(<module>)
        1    0.000    0.000    0.000    0.000 comments.py:591(CommentedKeySeq)
        1    0.000    0.000    0.000    0.000 core.py:3237(QuotedString)
        1    0.000    0.000    0.000    0.000 polynomials.py:1006(hermite)
        4    0.000    0.000    0.000    0.000 math2.py:42(_mathfun)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_TextToBytesWrapper)
        1    0.000    0.000    0.000    0.000 ticker.py:1909(LinearLocator)
        1    0.000    0.000    0.000    0.000 transforms.py:521(ExpTransform)
        1    0.000    0.000    0.000    0.000 linear.py:208(LazyLinear)
        1    0.000    0.000    0.000    0.000 hadamard.py:41(HadamardProduct)
        1    0.000    0.000    0.000    0.000 polynomials.py:443(chebyshevt)
        1    0.000    0.000    0.000    0.000 _arffread.py:95(NominalAttribute)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5932(landau_gen)
        1    0.000    0.000    0.000    0.000 _util.py:597(MapWrapper)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6860(vonmises_fisher_frozen)
        1    0.000    0.000    0.000    0.000 construct.py:1(<module>)
        1    0.000    0.000    0.000    0.000 modules.py:260(FreeModuleElement)
        1    0.000    0.000    0.000    0.000 threading.py:544(Event)
        1    0.000    0.000    0.000    0.000 six.py:219(is_package)
        1    0.000    0.000    0.000    0.000 single.py:646(AlmostLinear)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:196(kstwo_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:918(PathDistribution)
        1    0.000    0.000    0.000    0.000 dsolve.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:865(loggamma)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4297(PearsonRResult)
        1    0.000    0.000    0.000    0.000 mmio.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dates.py:1872(DateConverter)
        1    0.000    0.000    0.000    0.000 numpy.py:506(JaxPrinter)
        1    0.000    0.000    0.000    0.000 core.py:3017(Char)
        8    0.000    0.000    0.000    0.000 animation.py:106(register)
        1    0.000    0.000    0.000    0.000 _typing.py:7(RingElement)
        1    0.000    0.000    0.000    0.000 indexed.py:580(Idx)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:631(_IgnoreContextManager)
        1    0.000    0.000    0.000    0.000 events.py:170(AliasEvent)
        1    0.000    0.000    0.000    0.000 ellipse.py:1477(Circle)
        1    0.000    0.000    0.000    0.000 _fit.py:41(FitResult)
        1    0.000    0.000    0.000    0.000 linear_relu.py:6(LinearReLU)
        7    0.000    0.000    0.000    0.000 numeric.py:1455(<listcomp>)
        1    0.000    0.000    0.000    0.000 waveforms.py:1(<module>)
        1    0.000    0.000    0.000    0.000 coo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:2654(TransformedPath)
        1    0.000    0.000    0.000    0.000 solvers.py:23(RawMatrix)
        7    0.000    0.000    0.000    0.000 {method 'truncate' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 gzip.py:75(_PaddedFile)
        1    0.000    0.000    0.000    0.000 activation.py:109(LeakyReLU)
        1    0.000    0.000    0.000    0.000 csr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lazy.py:53(LazyModuleMixin)
        1    0.000    0.000    0.000    0.000 dates.py:648(ConciseDateFormatter)
        1    0.000    0.000    0.000    0.000 streams.py:181(StreamReaderProtocol)
        1    0.000    0.000    0.000    0.000 piecewise.py:19(ExprCondPair)
        3    0.000    0.000    0.000    0.000 __init__.py:43(private_class)
        1    0.000    0.000    0.000    0.000 backend_tools.py:926(ToolPan)
        4    0.000    0.000    0.000    0.000 _apply_pyprojecttoml.py:403(_some_attrgetter)
        1    0.000    0.000    0.000    0.000 tarfile.py:600(_FileInFile)
        1    0.000    0.000    0.000    0.000 single.py:1930(NthOrderReducible)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1154(trigamma)
        7    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISDIR}
        1    0.000    0.000    0.000    0.000 request.py:426(OpenerDirector)
        1    0.000    0.000    0.000    0.000 mock.py:2441(__new__)
        1    0.000    0.000    0.000    0.000 polynomials.py:28(OrthogonalPolynomial)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:188(elliptic_e)
        3    0.000    0.000    0.000    0.000 parser.py:17(__init__)
        1    0.000    0.000    0.000    0.000 polyint.py:1(<module>)
        1    0.000    0.000    0.000    0.000 zipfile.py:782(_Tellable)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4780(hypsecant_gen)
        1    0.000    0.000    0.000    0.000 textpath.py:336(TextPath)
       10    0.000    0.000    0.000    0.000 ctx_iv.py:355(_wrap_mpi_function)
        5    0.000    0.000    0.000    0.000 due.py:28(dcite)
        1    0.000    0.000    0.000    0.000 dok.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:185(_TLSAlertType)
        1    0.000    0.000    0.000    0.000 transforms.py:80(TransformNode)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:7066(maxwell_gen)
        1    0.000    0.000    0.000    0.000 expand.py:422(LazyMappingProxy)
        1    0.000    0.000    0.000    0.000 single.py:1297(SeparableReduced)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4186(__init__)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:584(dirichlet_eta)
        1    0.000    0.000    0.000    0.000 ring.py:9(Ring)
        1    0.000    0.000    0.000    0.000 __init__.py:329(SymBool)
        1    0.000    0.000    0.000    0.000 locks.py:158(Event)
        1    0.000    0.000    0.000    0.000 bessel.py:940(jn)
        1    0.000    0.000    0.000    0.000 colors.py:1238(SymLogNorm)
        1    0.000    0.000    0.000    0.000 gammasimp.py:463(_rf)
        1    0.000    0.000    0.000    0.000 grad_mode.py:258(_force_original_view_tracking)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:688(MikotaM)
        2    0.000    0.000    0.000    0.000 domain.py:846(__eq__)
        1    0.000    0.000    0.000    0.000 linear_relu.py:116(LinearTanh)
        1    0.000    0.000    0.000    0.000 threading.py:359(notify)
        1    0.000    0.000    0.000    0.000 {built-in method _ctypes.byref}
        1    0.000    0.000    0.000    0.000 sets.py:2192(SymmetricDifference)
        1    0.000    0.000    0.000    0.000 hierarchy.py:1105(__init__)
        1    0.000    0.000    0.000    0.000 _mio4.py:107(VarReader4)
        1    0.000    0.000    0.000    0.000 diophantine.py:146(DiophantineEquationType)
        1    0.000    0.000    0.000    0.000 miobase.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _lbfgsb_py.py:513(LbfgsInvHessProduct)
        1    0.000    0.000    0.000    0.000 sf_error.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dataset.py:181(TensorDataset)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:412(AngleAddr)
        1    0.000    0.000    0.000    0.000 polyerrors.py:155(PolificationFailed)
        4    0.000    0.000    0.000    0.000 timeutils.py:53(timethis)
        1    0.000    0.000    0.000    0.000 outputs.py:194(BandgapProps)
        1    0.000    0.000    0.000    0.000 _memory_profiler.py:54(_Storage)
        1    0.000    0.000    0.000    0.000 utils.py:163(SimpleTextIOWrapper)
        3    0.000    0.000    0.000    0.000 zipfile.py:689(_check_compression)
        4    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.000    0.000    0.000    0.000 transports.py:197(SubprocessTransport)
        1    0.000    0.000    0.000    0.000 funcmatrix.py:9(FunctionMatrix)
        1    0.000    0.000    0.000    0.000 para4band.py:53(Stiefel_Frame_Function)
        1    0.000    0.000    0.000    0.000 loader.py:77(__init__)
        1    0.000    0.000    0.000    0.000 modules.py:1746(ModuleHomomorphism)
        4    0.000    0.000    0.000    0.000 function.py:613(_iter_filter)
        1    0.000    0.000    0.000    0.000 backend_tools.py:694(ToolHome)
        1    0.000    0.000    0.000    0.000 dataframes.py:371(CaptureDataFrameWithDataPipeOps)
        1    0.000    0.000    0.000    0.000 pooling.py:171(MaxPool3d)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:810(__len__)
        1    0.000    0.000    0.000    0.000 normalization.py:63(CrossMapLRN2d)
        1    0.000    0.000    0.000    0.000 sets.py:2261(DisjointUnion)
        1    0.000    0.000    0.000    0.000 tensor.py:1270(TensorIndex)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:5836(johnsonsu_gen)
        1    0.000    0.000    0.000    0.000 scale.py:404(InvertedSymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:11(SparseNDimArray)
        4    0.000    0.000    0.000    0.000 results.py:266(__len__)
        1    0.000    0.000    0.000    0.000 observer.py:1273(FixedQParamsObserver)
        1    0.000    0.000    0.000    0.000 relational.py:1150(LessThan)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:13(ScalarFloat)
        1    0.000    0.000    0.000    0.000 lil.py:1(<module>)
        1    0.000    0.000    0.000    0.000 units.py:148(Unit)
        1    0.000    0.000    0.000    0.000 function.py:16(FunctionCtx)
        5    0.000    0.000    0.000    0.000 core.py:3142(re_match)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1547(dirichlet_gen)
        1    0.000    0.000    0.000    0.000 sequences.py:415(SeqExpr)
        1    0.000    0.000    0.000    0.000 outputs.py:3894(Locpot)
        1    0.000    0.000    0.000    0.000 instancenorm.py:9(_InstanceNorm)
        1    0.000    0.000    0.000    0.000 trifinder.py:24(TrapezoidMapTriFinder)
        1    0.000    0.000    0.000    0.000 __init__.py:7(ProjectionRegistry)
        1    0.000    0.000    0.000    0.000 transforms.py:976(PositiveDefiniteTransform)
        1    0.000    0.000    0.000    0.000 splitter_base.py:81(FxNetAccNodesFinder)
        1    0.000    0.000    0.000    0.000 mock.py:2069(MagicMixin)
        1    0.000    0.000    0.000    0.000 _base.py:174(_process_plot_var_args)
        1    0.000    0.000    0.000    0.000 _dok.py:589(dok_matrix)
        1    0.000    0.000    0.000    0.000 __init__.py:758(is_url)
        1    0.000    0.000    0.000    0.000 hyper.py:1031(HyperRep_sqrts2)
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:2062(_num_parameterizations)
        1    0.000    0.000    0.000    0.000 conv_relu.py:69(ConvReLU2d)
        2    0.000    0.000    0.000    0.000 {method 'cache_clear' of 'functools._lru_cache_wrapper' objects}
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1511(chi_gen)
        1    0.000    0.000    0.000    0.000 sg_operation.py:11(SpaceGroupOp)
        3    0.000    0.000    0.000    0.000 _utils.py:7(_get_device_index)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:53(_ScalarHessWrapper)
        1    0.000    0.000    0.000    0.000 composition.py:1400(ChemicalPotential)
        1    0.000    0.000    0.000    0.000 legend_handler.py:541(HandlerStem)
        1    0.000    0.000    0.000    0.000 pathlib.py:129(<setcomp>)
        1    0.000    0.000    0.000    0.000 bandstructure.py:707(BandStructureSymmLine)
        1    0.000    0.000    0.000    0.000 _adapters.py:7(SpecLoaderAdapter)
        1    0.000    0.000    0.000    0.000 runners.py:21(Runner)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1257(burr12_gen)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3437(StatusbarBase)
        1    0.000    0.000    0.000    0.000 more.py:270(peekable)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:211(AddrlistClass)
        1    0.000    0.000    0.000    0.000 Orbit_spd.py:16(orbit_spd)
        1    0.000    0.000    0.000    0.000 backend_tools.py:444(ToolGrid)
        1    0.000    0.000    0.000    0.000 normalization.py:46(GroupNorm)
        1    0.000    0.000    0.000    0.000 ssl.py:159(TLSVersion)
        1    0.000    0.000    0.000    0.000 channelshuffle.py:8(ChannelShuffle)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4200(gompertz_gen)
        1    0.000    0.000    0.000    0.000 headerregistry.py:260(UnstructuredHeader)
        1    0.000    0.000    0.000    0.000 extension.py:38(Extension)
        1    0.000    0.000    0.000    0.000 _rbf.py:55(Rbf)
        6    0.000    0.000    0.000    0.000 core.py:3614(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3282(ToolContainerBase)
        1    0.000    0.000    0.000    0.000 polynomials.py:561(chebyshevu)
        1    0.000    0.000    0.000    0.000 dataloader.py:567(_BaseDataLoaderIter)
        1    0.000    0.000    0.000    0.000 loss.py:104(NLLLoss)
        1    0.000    0.000    0.000    0.000 _VF.py:22(__init__)
        1    0.000    0.000    0.000    0.000 _resampling.py:740(MonteCarloTestResult)
        1    0.000    0.000    0.000    0.000 scalarstring.py:23(ScalarString)
        1    0.000    0.000    0.000    0.000 polyoptions.py:327(Sort)
        1    0.000    0.000    0.000    0.000 special.py:174(GenericIdentity)
        1    0.000    0.000    0.000    0.000 setupcfg.py:520(ConfigMetadataHandler)
        1    0.000    0.000    0.000    0.000 request.py:1050(HTTPBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 abc.py:43(Finder)
        2    0.000    0.000    0.000    0.000 {method 'title' of 'str' objects}
        1    0.000    0.000    0.000    0.000 factorials.py:383(factorial2)
        1    0.000    0.000    0.000    0.000 mathtext.py:1618(Hlist)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:234(<lambda>)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:842(SupportsInt)
        4    0.000    0.000    0.000    0.000 dataclasses.py:566(<genexpr>)
        1    0.000    0.000    0.000    0.000 _arffread.py:655(MetaData)
        2    0.000    0.000    0.000    0.000 _parser.py:96(checkgroup)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1197(<listcomp>)
        1    0.000    0.000    0.000    0.000 _ode.py:1049(zvode)
        1    0.000    0.000    0.000    0.000 modules.py:160(ModuleElement)
        1    0.000    0.000    0.000    0.000 headerregistry.py:504(ContentTransferEncodingHeader)
        1    0.000    0.000    0.000    0.000 request.py:1398(HTTPCookieProcessor)
        5    0.000    0.000    0.000    0.000 datetime.py:51(_days_in_month)
        1    0.000    0.000    0.000    0.000 hb.py:44(HBInfo)
        1    0.000    0.000    0.000    0.000 _util.py:1062(_RichResult)
        1    0.000    0.000    0.000    0.000 factorials.py:503(RisingFactorial)
        1    0.000    0.000    0.000    0.000 threading.py:264(__enter__)
        1    0.000    0.000    0.000    0.000 header.py:179(Header)
        1    0.000    0.000    0.000    0.000 pyplot.py:92(<dictcomp>)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:232(LinearTriInterpolator)
        4    0.000    0.000    0.000    0.000 bessel.py:385(c_memo)
        1    0.000    0.000    0.000    0.000 client.py:1398(HTTPSConnection)
        1    0.000    0.000    0.000    0.000 _optimize.py:2439(Brent)
        1    0.000    0.000    0.000    0.000 _cubature.py:535(_VariableTransform)
        1    0.000    0.000    0.000    0.000 backend_registration.py:1(<module>)
        6    0.000    0.000    0.000    0.000 sdm.py:85(<genexpr>)
        2    0.000    0.000    0.000    0.000 weakref.py:352(__init__)
        1    0.000    0.000    0.000    0.000 bessel.py:1723(airyaiprime)
        1    0.000    0.000    0.000    0.000 normalization.py:198(GroupNorm)
        3    0.000    0.000    0.000    0.000 __init__.py:428(__init__)
      2/1    0.000    0.000    0.000    0.000 {method 'seekable' of '_io.BufferedReader' objects}
        3    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1384(<listcomp>)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:171(MatrixPowerOperator)
        1    0.000    0.000    0.000    0.000 widgets.py:2368(LassoSelector)
        7    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 _cubic.py:569(CubicSpline)
        1    0.000    0.000    0.000    0.000 constraints.py:328(_GreaterThanEq)
        1    0.000    0.000    0.000    0.000 numbers.py:1849(jacobi_symbol)
        1    0.000    0.000    0.000    0.000 headerregistry.py:327(AddressHeader)
        1    0.000    0.000    0.000    0.000 legend_handler.py:652(__init__)
        1    0.000    0.000    0.000    0.000 activation.py:1492(LogSoftmax)
        1    0.000    0.000    0.000    0.000 _type_utils.py:293(<dictcomp>)
        1    0.000    0.000    0.000    0.000 loss.py:1032(CrossEntropyLoss)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:960(betaprime_gen)
        1    0.000    0.000    0.000    0.000 ImageFile.py:458(StubImageFile)
        1    0.000    0.000    0.000    0.000 complexes.py:954(adjoint)
        6    0.000    0.000    0.000    0.000 sdm.py:83(<genexpr>)
        1    0.000    0.000    0.000    0.000 _infra.py:203(ThreadFlowLocation)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 numbers.py:1490(andre)
       12    0.000    0.000    0.000    0.000 distance.py:1814(<lambda>)
        1    0.000    0.000    0.000    0.000 index_tricks.py:255(__init__)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5342(Coset)
        1    0.000    0.000    0.000    0.000 polynomials.py:45(jacobi)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2380(fatiguelife_gen)
        1    0.000    0.000    0.000    0.000 polyoptions.py:638(Frac)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:181(_ndptr)
        1    0.000    0.000    0.000    0.000 _pep440.py:149(__ge__)
        1    0.000    0.000    0.000    0.000 _functions.py:37(ReduceAddCoalesced)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:238(_Interval)
        1    0.000    0.000    0.000    0.000 _polyint.py:19(_Interpolator1D)
        1    0.000    0.000    0.000    0.000 polynomials.py:1108(hermite_prob)
       12    0.000    0.000    0.000    0.000 message.py:633(get_default_type)
        1    0.000    0.000    0.000    0.000 limits.py:132(Limit)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1567(poisson_binom_gen)
        1    0.000    0.000    0.000    0.000 perm_groups.py:5258(SymmetricPermutationGroup)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5401(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:1137(SineCosineTypeTransform)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:683(Max)
        1    0.000    0.000    0.000    0.000 hyper.py:1062(HyperRep_log2)
        1    0.000    0.000    0.000    0.000 polynomials.py:1210(laguerre)
        1    0.000    0.000    0.000    0.000 complexes.py:1105(periodic_argument)
        3    0.000    0.000    0.000    0.000 wrappers.py:204(<listcomp>)
        1    0.000    0.000    0.000    0.000 animation.py:1452(ArtistAnimation)
        1    0.000    0.000    0.000    0.000 utils.py:97(lazy_property)
        1    0.000    0.000    0.000    0.000 zipfile.py:1995(PyZipFile)
        1    0.000    0.000    0.000    0.000 spglib.py:365(SpaceGroupType)
        1    0.000    0.000    0.000    0.000 _resampling.py:257(BootstrapResult)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9274(rice_gen)
        1    0.000    0.000    0.000    0.000 gridspec.py:362(GridSpec)
        1    0.000    0.000    0.000    0.000 _ops.py:116(__init__)
       10    0.000    0.000    0.000    0.000 contextlib.py:65(_recreate_cm)
        1    0.000    0.000    0.000    0.000 comments.py:654(CommentedMapKeysView)
        1    0.000    0.000    0.000    0.000 hamiltonian.py:3(Hamiltonian)
        1    0.000    0.000    0.000    0.000 _compression.py:33(DecompressReader)
        1    0.000    0.000    0.000    0.000 __init__.py:234(silent_list)
        1    0.000    0.000    0.000    0.000 reduction.py:251(AbstractReducer)
        2    0.000    0.000    0.000    0.000 para4band.py:131(mask)
        1    0.000    0.000    0.000    0.000 blocking_input.py:32(BlockingInput)
        2    0.000    0.000    0.000    0.000 __init__.py:87(__setattr__)
        1    0.000    0.000    0.000    0.000 polynomials.py:889(assoc_legendre)
        1    0.000    0.000    0.000    0.000 _tensor_str.py:99(_Formatter)
        1    0.000    0.000    0.000    0.000 parse.py:182(_NetlocResultMixinStr)
        1    0.000    0.000    0.000    0.000 observer.py:1311(PlaceholderObserver)
        1    0.000    0.000    0.000    0.000 threading.py:1005(_set_native_id)
        1    0.000    0.000    0.000    0.000 Image.py:468(ImagePointTransform)
        1    0.000    0.000    0.000    0.000 numbers.py:1037(euler)
        1    0.000    0.000    0.000    0.000 trirefine.py:47(UniformTriRefiner)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2972(weibull_max_gen)
        1    0.000    0.000    0.000    0.000 puiseux.py:59(PuiseuxRing)
        6    0.000    0.000    0.000    0.000 profiler_util.py:348(_attr_formatter)
        1    0.000    0.000    0.000    0.000 decoder.py:236(MatHandler)
        1    0.000    0.000    0.000    0.000 string.py:188(Formatter)
        1    0.000    0.000    0.000    0.000 mg_operation.py:10(MagneticGroupOp)
        1    0.000    0.000    0.000    0.000 conv_relu.py:119(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:518(Sakurai)
        1    0.000    0.000    0.000    0.000 determinant.py:9(Determinant)
        1    0.000    0.000    0.000    0.000 _arffread.py:256(DateAttribute)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:870(Terminal)
        1    0.000    0.000    0.000    0.000 factorials.py:664(FallingFactorial)
        1    0.000    0.000    0.000    0.000 blas.py:249(<dictcomp>)
        1    0.000    0.000    0.000    0.000 graph.py:214(PythonCode)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9528(semicircular_gen)
        1    0.000    0.000    0.000    0.000 units.py:682(_my_partial)
        1    0.000    0.000    0.000    0.000 colorsys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 partitions.py:308(IntegerPartition)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:961(poisson_gen)
        1    0.000    0.000    0.000    0.000 error_functions.py:2327(FresnelIntegral)
        2    0.000    0.000    0.000    0.000 constraints.py:315(__init__)
        1    0.000    0.000    0.000    0.000 error_functions.py:1669(Li)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:103(ksone_gen)
        1    0.000    0.000    0.000    0.000 dense.py:115(MutableDenseMatrix)
        1    0.000    0.000    0.000    0.000 error_functions.py:2710(_erfs)
        1    0.000    0.000    0.000    0.000 _trace.py:565(TracerWarning)
       11    0.000    0.000    0.000    0.000 {built-in method io.text_encoding}
        1    0.000    0.000    0.000    0.000 _diagnostic.py:40(ExportDiagnostic)
        1    0.000    0.000    0.000    0.000 relational.py:752(Unequality)
        1    0.000    0.000    0.000    0.000 mock.py:1084(CallableMixin)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:582(hypergeom_gen)
        1    0.000    0.000    0.000    0.000 patches.py:2047(LArrow)
        9    0.000    0.000    0.000    0.000 typing.py:495(__repr__)
        1    0.000    0.000    0.000    0.000 evalf.py:1560(EvalfMixin)
        3    0.000    0.000    0.000    0.000 zipfile.py:1872(close)
        1    0.000    0.000    0.000    0.000 rnn.py:1043(GRUCell)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:757(MikotaK)
        1    0.000    0.000    0.000    0.000 complexes.py:1020(polar_lift)
        1    0.000    0.000    0.000    0.000 polyoptions.py:512(Split)
        1    0.000    0.000    0.000    0.000 errors.py:93(NonPrintableDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:323(device_of)
        1    0.000    0.000    0.000    0.000 headerregistry.py:468(ContentTypeHeader)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:333(MailboxList)
        1    0.000    0.000    0.000    0.000 frontend.py:315(Builder)
        1    0.000    0.000    0.000    0.000 _kdtree.py:327(innernode)
        1    0.000    0.000    0.000    0.000 relational.py:909(GreaterThan)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11024(_SimpleNormal)
        2    0.000    0.000    0.000    0.000 cache.py:183(LazyFunctionMeta)
        1    0.000    0.000    0.000    0.000 wavfile.py:31(SeekEmulatingReader)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:553(_Parameter)
        1    0.000    0.000    0.000    0.000 Image.py:3018(ImagePointHandler)
        1    0.000    0.000    0.000    0.000 observer.py:520(MovingAverageMinMaxObserver)
        9    0.000    0.000    0.000    0.000 core.py:4247(<genexpr>)
        1    0.000    0.000    0.000    0.000 field.py:8(Field)
        1    0.000    0.000    0.000    0.000 sequences.py:1020(SeqAdd)
        1    0.000    0.000    0.000    0.000 data_parallel.py:42(DataParallel)
        1    0.000    0.000    0.000    0.000 transforms.py:2088(_BlendedMixin)
        1    0.000    0.000    0.000    0.000 _classes.py:18(_Classes)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:864(Rem)
        1    0.000    0.000    0.000    0.000 relaxed_bernoulli.py:94(RelaxedBernoulli)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2443(__init__)
        1    0.000    0.000    0.000    0.000 graph.py:607(_PyTreeCodeGen)
        1    0.000    0.000    0.000    0.000 _relative_risk.py:19(RelativeRiskResult)
        1    0.000    0.000    0.000    0.000 subprocess.py:115(Process)
        1    0.000    0.000    0.000    0.000 dropout.py:8(_DropoutNd)
        1    0.000    0.000    0.000    0.000 error.py:120(MarkedYAMLError)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:25(_maybe_view_as_subclass)
        1    0.000    0.000    0.000    0.000 embedding_ops.py:75(EmbeddingBag)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:81(ExportDiagnosticEngine)
        7    0.000    0.000    0.000    0.000 __init__.py:176(is_initialized)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:965(__new__)
        1    0.000    0.000    0.000    0.000 tempfile.py:132(_RandomNameSequence)
        1    0.000    0.000    0.000    0.000 compat.py:38(ordereddict)
        2    0.000    0.000    0.000    0.000 __init__.py:132(DistutilsLoader)
        1    0.000    0.000    0.000    0.000 __init__.py:104(CallbackRegistry)
        1    0.000    0.000    0.000    0.000 epathtools.py:6(EPath)
        1    0.000    0.000    0.000    0.000 context.py:220(Process)
        1    0.000    0.000    0.000    0.000 polyoptions.py:664(Include)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:1398(FakeCopyMode)
        1    0.000    0.000    0.000    0.000 animation.py:534(PillowWriter)
        1    0.000    0.000    0.000    0.000 error_functions.py:912(erfcinv)
        1    0.000    0.000    0.000    0.000 _constraints.py:127(LinearConstraint)
        1    0.000    0.000    0.000    0.000 padding.py:173(_ReflectionPadNd)
        1    0.000    0.000    0.000    0.000 formal.py:1690(FormalPowerSeriesInverse)
        1    0.000    0.000    0.000    0.000 serialization.py:294(_open_zipfile_writer_buffer)
        1    0.000    0.000    0.000    0.000 ordinals.py:5(OmegaPower)
        1    0.000    0.000    0.000    0.000 quadrature.py:5(QuadratureRule)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:12129(studentized_range_gen)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3915(genhalflogistic_gen)
        1    0.000    0.000    0.000    0.000 bdf.py:72(BDF)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1395(_TensorExtractor)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11053(_SimpleBeta)
        1    0.000    0.000    0.000    0.000 _ops.py:115(PyOperator)
        1    0.000    0.000    0.000    0.000 _spherical_voronoi.py:36(SphericalVoronoi)
        1    0.000    0.000    0.000    0.000 fake_quantize.py:261(FixedQParamsFakeQuantize)
        1    0.000    0.000    0.000    0.000 units.py:153(DecimalConverter)
        1    0.000    0.000    0.000    0.000 backend_tools.py:414(_ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 numbers.py:1604(partition)
        1    0.000    0.000    0.000    0.000 _multivariate.py:123(_PSD)
        1    0.000    0.000    0.000    0.000 csv.py:23(Dialect)
        1    0.000    0.000    0.000    0.000 numbers.py:1729(udivisor_sigma)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1272(XMLPullParser)
        1    0.000    0.000    0.000    0.000 datetime.py:1280(IsoCalendarDate)
        1    0.000    0.000    0.000    0.000 __init__.py:226(insert_shim)
        1    0.000    0.000    0.000    0.000 band_data_out.py:9(BandDataOut)
        3    0.000    0.000    0.000    0.000 utils.py:16(<genexpr>)
        1    0.000    0.000    0.000    0.000 _vertex.py:75(VertexScalarField)
        1    0.000    0.000    0.000    0.000 core.py:5917(Dict)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:11491(halfgennorm_gen)
        2    0.000    0.000    0.000    0.000 compat.py:113(__init__)
        1    0.000    0.000    0.000    0.000 loss.py:991(SoftMarginLoss)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:182(Tokenizer)
        1    0.000    0.000    0.000    0.000 backend_tools.py:404(ToolQuitAll)
        6    0.000    0.000    0.000    0.000 core.py:5906(postParse)
        1    0.000    0.000    0.000    0.000 _input_validation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:23(get_projection_names)
        1    0.000    0.000    0.000    0.000 gruntz.py:155(SubsSet)
        1    0.000    0.000    0.000    0.000 widgets.py:63(Widget)
        4    0.000    0.000    0.000    0.000 _array_api.py:131(array_namespace)
        2    0.000    0.000    0.000    0.000 constraints.py:332(__init__)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:509(LinearLR)
        1    0.000    0.000    0.000    0.000 boolalg.py:281(BooleanTrue)
        1    0.000    0.000    0.000    0.000 _structures.py:35(NegativeInfinityType)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3562(special_ortho_group_gen)
        1    0.000    0.000    0.000    0.000 collections.py:1306(LineCollection)
        1    0.000    0.000    0.000    0.000 patches.py:3274(BracketA)
        1    0.000    0.000    0.000    0.000 markers.py:52(Environment)
        1    0.000    0.000    0.000    0.000 loss.py:1414(TripletMarginLoss)
        1    0.000    0.000    0.000    0.000 facts.py:257(Prover)
        1    0.000    0.000    0.000    0.000 distance.py:56(CosineSimilarity)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:24(mathieus)
        1    0.000    0.000    0.000    0.000 scanner.py:1730(RoundTripScanner)
        1    0.000    0.000    0.000    0.000 core.py:376(dtype)
        1    0.000    0.000    0.000    0.000 text.py:1243(OffsetFrom)
        1    0.000    0.000    0.000    0.000 error_functions.py:1765(TrigonometricIntegral)
        1    0.000    0.000    0.000    0.000 _ops.py:44(PyOperatorABC)
        1    0.000    0.000    0.000    0.000 computed_entries.py:168(CompositionEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 mathtext.py:1444(Char)
        1    0.000    0.000    0.000    0.000 diagonal.py:86(DiagonalOf)
        1    0.000    0.000    0.000    0.000 numbers.py:1801(legendre_symbol)
        4    0.000    0.000    0.000    0.000 numbers.py:2871(__neg__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:8917(powernorm_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:123(DeprecatedTuple)
        1    0.000    0.000    0.000    0.000 batchnorm.py:78(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 loss.py:1336(MultiMarginLoss)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:11(HessianUpdateStrategy)
        5    0.000    0.000    0.000    0.000 six.py:186(_get_module)
        1    0.000    0.000    0.000    0.000 io.py:344(FileLock)
        1    0.000    0.000    0.000    0.000 mathtext.py:755(UnicodeFonts)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(UnsatisfiableConstraint)
        1    0.000    0.000    0.000    0.000 diagonal.py:9(DiagonalMatrix)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:330(_constant)
        1    0.000    0.000    0.000    0.000 animation.py:561(FFMpegBase)
        1    0.000    0.000    0.000    0.000 _mio4.py:461(VarWriter4)
        1    0.000    0.000    0.000    0.000 fancysets.py:239(Reals)
        1    0.000    0.000    0.000    0.000 collections.py:1190(BrokenBarHCollection)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2324(exponpow_gen)
        1    0.000    0.000    0.000    0.000 kind.py:156(__new__)
        1    0.000    0.000    0.000    0.000 _nonlin.py:454(InverseJacobian)
        1    0.000    0.000    0.000    0.000 image.py:1288(FigureImage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:565(anglit_gen)
        1    0.000    0.000    0.000    0.000 numbers.py:1662(divisor_sigma)
        1    0.000    0.000    0.000    0.000 __init__.py:321(CDLL)
        1    0.000    0.000    0.000    0.000 elliptic_integrals.py:310(elliptic_pi)
        2    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3117(_zero)
        1    0.000    0.000    0.000    0.000 dviread.py:955(Encoding)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2632(foldnorm_gen)
        2    0.000    0.000    0.000    0.000 pyplot.py:211(_get_required_interactive_framework)
        1    0.000    0.000    0.000    0.000 _ops.py:418(OpOverloadPacket)
        1    0.000    0.000    0.000    0.000 _linprog_doc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:4862(AtLineStart)
        1    0.000    0.000    0.000    0.000 __init__.py:531(__init__)
        1    0.000    0.000    0.000    0.000 dense_ndim_array.py:160(MutableDenseNDimArray)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1686(cosine_gen)
        1    0.000    0.000    0.000    0.000 random.py:784(SystemRandom)
        6    0.000    0.000    0.000    0.000 core.py:846(__init__)
        1    0.000    0.000    0.000    0.000 boolalg.py:1202(Implies)
        1    0.000    0.000    0.000    0.000 boolalg.py:856(Not)
        1    0.000    0.000    0.000    0.000 _policybase.py:18(_PolicyBase)
        1    0.000    0.000    0.000    0.000 fold.py:156(Unfold)
        3    0.000    0.000    0.000    0.000 _add_docstring.py:11(add_newdoc)
        1    0.000    0.000    0.000    0.000 torch_version.py:41(TorchVersion)
        1    0.000    0.000    0.000    0.000 _wilcoxon.py:12(WilcoxonDistribution)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:61(_override_key)
        1    0.000    0.000    0.000    0.000 polynomials.py:290(gegenbauer)
        1    0.000    0.000    0.000    0.000 function.py:826(AppliedUndef)
        1    0.000    0.000    0.000    0.000 tz.py:874(tzrange)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1207(Event)
        1    0.000    0.000    0.000    0.000 inputs.py:1927(OrbitalDescription)
        1    0.000    0.000    0.000    0.000 dist.py:75(__getattr__)
        1    0.000    0.000    0.000    0.000 activation.py:80(ELU)
        1    0.000    0.000    0.000    0.000 more.py:2733(seekable)
        1    0.000    0.000    0.000    0.000 unix_events.py:1212(MultiLoopChildWatcher)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:928(_BivariateSplineBase)
        1    0.000    0.000    0.000    0.000 discovery.py:185(ModuleFinder)
        1    0.000    0.000    0.000    0.000 diophantine.py:958(GeneralSumOfSquares)
        1    0.000    0.000    0.000    0.000 backend_tools.py:459(ToolMinorGrid)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6964(normal_inverse_gamma_gen)
        3    0.000    0.000    0.000    0.000 core.py:806(__init__)
        1    0.000    0.000    0.000    0.000 events.py:161(AbstractServer)
        1    0.000    0.000    0.000    0.000 category.py:133(StrCategoryFormatter)
        1    0.000    0.000    0.000    0.000 _elffile.py:41(ELFFile)
        1    0.000    0.000    0.000    0.000 __config__.py:98(<listcomp>)
        4    0.000    0.000    0.000    0.000 core.py:3417(dtype)
        1    0.000    0.000    0.000    0.000 dos.py:622(DosFingerprint)
        1    0.000    0.000    0.000    0.000 transforms.py:2460(BboxTransform)
        1    0.000    0.000    0.000    0.000 boolalg.py:1370(ITE)
        1    0.000    0.000    0.000    0.000 companion.py:8(CompanionMatrix)
        6    0.000    0.000    0.000    0.000 iterables.py:858(<genexpr>)
        1    0.000    0.000    0.000    0.000 image.py:1351(BboxImage)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:3254(genexpon_gen)
        1    0.000    0.000    0.000    0.000 json.py:552(MontyEncoder)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11039(_SimpleChi2)
        1    0.000    0.000    0.000    0.000 assumptions.py:464(StdFactKB)
        1    0.000    0.000    0.000    0.000 shape_prop.py:68(ShapeProp)
        1    0.000    0.000    0.000    0.000 subprocess.py:17(SubprocessStreamProtocol)
        3    0.000    0.000    0.000    0.000 _version.py:78(_compare_version)
        1    0.000    0.000    0.000    0.000 modules.py:1106(SubModulePolyRing)
        1    0.000    0.000    0.000    0.000 rnn.py:40(RNNCellBase)
        1    0.000    0.000    0.000    0.000 _covariance.py:562(CovViaEigendecomposition)
        1    0.000    0.000    0.000    0.000 ssl.py:227(_TLSMessageType)
        1    0.000    0.000    0.000    0.000 legend_handler.py:43(HandlerBase)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:913(Reader)
        1    0.000    0.000    0.000    0.000 _functools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pycode.py:837(SymPyPrinter)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:964(create_module)
        1    0.000    0.000    0.000    0.000 transforms.py:2624(AffineDeltaTransform)
        1    0.000    0.000    0.000    0.000 _pep440.py:45(Infinity)
        1    0.000    0.000    0.000    0.000 transports.py:9(BaseTransport)
        4    0.000    0.000    0.000    0.000 numbers.py:1444(_eval_is_zero)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2447(_UnpackAlias)
        1    0.000    0.000    0.000    0.000 _utils.py:93(BasicEvaluation)
        1    0.000    0.000    0.000    0.000 subprocess.py:163(TimeoutExpired)
        1    0.000    0.000    0.000    0.000 backend_tools.py:514(ToolXScale)
        1    0.000    0.000    0.000    0.000 observer.py:804(MovingAveragePerChannelMinMaxObserver)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:765(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 dates.py:1052(DateLocator)
        1    0.000    0.000    0.000    0.000 padding.py:225(ReflectionPad2d)
        1    0.000    0.000    0.000    0.000 dataframes.py:282(CaptureSetItem)
        1    0.000    0.000    0.000    0.000 _contextlib.py:120(_DecoratorContextManager)
        1    0.000    0.000    0.000    0.000 memmap.py:22(memmap)
        1    0.000    0.000    0.000    0.000 _factories.py:13(__call__)
        1    0.000    0.000    0.000    0.000 error_functions.py:819(erfinv)
        1    0.000    0.000    0.000    0.000 cse_main.py:345(Unevaluated)
        1    0.000    0.000    0.000    0.000 _nonlin.py:843(BroydenFirst)
        1    0.000    0.000    0.000    0.000 combining.py:238(_ChildDataPipe)
        1    0.000    0.000    0.000    0.000 polyoptions.py:621(Auto)
        1    0.000    0.000    0.000    0.000 conv_fused.py:458(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 numbers.py:4020(Catalan)
        1    0.000    0.000    0.000    0.000 proxy.py:53(ScopeContextManager)
        1    0.000    0.000    0.000    0.000 tableform.py:9(TableForm)
        1    0.000    0.000    0.000    0.000 _docs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 request.py:1588(CacheFTPHandler)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3599(ContinuousDistribution)
        1    0.000    0.000    0.000    0.000 transforms.py:107(__init__)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1087(CyclicLR)
        1    0.000    0.000    0.000    0.000 core.py:6735(_extrema_operation)
        1    0.000    0.000    0.000    0.000 package_exporter.py:103(_PatternInfo)
        6    0.000    0.000    0.000    0.000 _type_aliases.py:92(<genexpr>)
        1    0.000    0.000    0.000    0.000 computed_entries.py:112(ConstantEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:408(Pow)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1255(multigamma)
        1    0.000    0.000    0.000    0.000 polyoptions.py:543(Extension)
        1    0.000    0.000    0.000    0.000 gzip.py:80(__init__)
        1    0.000    0.000    0.000    0.000 _morestats.py:2625(_ABW)
        1    0.000    0.000    0.000    0.000 modules.py:286(FreeModule)
        1    0.000    0.000    0.000    0.000 sharding.py:25(ShardingFilterIterDataPipe)
        1    0.000    0.000    0.000    0.000 encoder.py:74(JSONEncoder)
        1    0.000    0.000    0.000    0.000 pooling.py:497(AvgPool1d)
        1    0.000    0.000    0.000    0.000 linear.py:21(Identity)
        1    0.000    0.000    0.000    0.000 selectors.py:206(_BaseSelectorImpl)
        1    0.000    0.000    0.000    0.000 threading.py:103(_RLock)
        3    0.000    0.000    0.000    0.000 datetime.py:46(_days_before_year)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:30(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:9471(recipinvgauss_gen)
        1    0.000    0.000    0.000    0.000 lambdarepr.py:20(LambdaPrinter)
        4    0.000    0.000    0.000    0.000 expr.py:3570(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 _adapters.py:48(SpecPath)
        1    0.000    0.000    0.000    0.000 _functions.py:180(CrossMapLRN2d)
        1    0.000    0.000    0.000    0.000 request.py:1080(AbstractDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 index_tricks.py:717(IndexExpression)
        1    0.000    0.000    0.000    0.000 sequences.py:466(SeqPer)
        1    0.000    0.000    0.000    0.000 relational.py:827(_Inequality)
        1    0.000    0.000    0.000    0.000 backend_registry.py:74(<dictcomp>)
        1    0.000    0.000    0.000    0.000 rk.py:577(Dop853DenseOutput)
        1    0.000    0.000    0.000    0.000 cnf.py:77(OR)
        1    0.000    0.000    0.000    0.000 loss.py:228(PoissonNLLLoss)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:1615(_ShapeInfo)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1483(dlaplace_gen)
        1    0.000    0.000    0.000    0.000 backend_tools.py:728(SaveFigureBase)
        1    0.000    0.000    0.000    0.000 beta_functions.py:282(betainc_regularized)
        1    0.000    0.000    0.000    0.000 _ode.py:1209(dop853)
        1    0.000    0.000    0.000    0.000 sym_operation.py:4(SymOp)
        2    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        1    0.000    0.000    0.000    0.000 _resampling.py:2105(MonteCarloMethod)
        1    0.000    0.000    0.000    0.000 queues.py:218(PriorityQueue)
        1    0.000    0.000    0.000    0.000 __init__.py:1198(is_interactive)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:72(_override_resolve_out_shapes)
        1    0.000    0.000    0.000    0.000 dataset.py:252(ChainDataset)
        1    0.000    0.000    0.000    0.000 constraints.py:384(__init__)
        4    0.000    0.000    0.000    0.000 utils.py:8(_ntuple)
        1    0.000    0.000    0.000    0.000 axis.py:409(XTick)
        1    0.000    0.000    0.000    0.000 line.py:1578(Segment)
        1    0.000    0.000    0.000    0.000 exponential.py:139(exp_polar)
        1    0.000    0.000    0.000    0.000 hub.py:20(_Faketqdm)
        7    0.000    0.000    0.000    0.000 typing.py:406(__init_subclass__)
        1    0.000    0.000    0.000    0.000 numbers.py:2954(Half)
        1    0.000    0.000    0.000    0.000 colorbar.py:229(_ColorbarAutoLocator)
        1    0.000    0.000    0.000    0.000 _typing.py:44(JustFloat)
        1    0.000    0.000    0.000    0.000 _optimize.py:61(MemoizeJac)
        1    0.000    0.000    0.000    0.000 diagonal.py:157(DiagMatrix)
        1    0.000    0.000    0.000    0.000 _info.py:33(__array_namespace_info__)
        1    0.000    0.000    0.000    0.000 __init__.py:936(setLevel)
        1    0.000    0.000    0.000    0.000 backend_tools.py:703(ToolBack)
        1    0.000    0.000    0.000    0.000 _interface.py:593(_CustomLinearOperator)
        1    0.000    0.000    0.000    0.000 numbers.py:1920(kronecker_symbol)
        1    0.000    0.000    0.000    0.000 records.py:223(record)
        1    0.000    0.000    0.000    0.000 offsetbox.py:770(TextArea)
        1    0.000    0.000    0.000    0.000 periodic_table.py:852(_ElementMeta)
        1    0.000    0.000    0.000    0.000 _multivariate.py:2512(wishart_frozen)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_converter}
        1    0.000    0.000    0.000    0.000 argparse.py:1047(_AppendConstAction)
        1    0.000    0.000    0.000    0.000 loss.py:301(GaussianNLLLoss)
        1    0.000    0.000    0.000    0.000 records.py:308(recarray)
        1    0.000    0.000    0.000    0.000 padding.py:475(ZeroPad2d)
        9    0.000    0.000    0.000    0.000 _globals.py:58(__repr__)
        1    0.000    0.000    0.000    0.000 dev.py:147(__init__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2149(exponnorm_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:303(device)
        1    0.000    0.000    0.000    0.000 ImageMode.py:24(ModeDescriptor)
        1    0.000    0.000    0.000    0.000 equality.py:25(EqualityPredicate)
        1    0.000    0.000    0.000    0.000 numbers.py:3825(GoldenRatio)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:36(_BarycentricRational)
        1    0.000    0.000    0.000    0.000 kind.py:181(__new__)
        1    0.000    0.000    0.000    0.000 calendar.py:412(HTMLCalendar)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1151(MeijerShiftD)
        5    0.000    0.000    0.000    0.000 transforms.py:224(_noconds_)
        1    0.000    0.000    0.000    0.000 error_functions.py:995(erf2inv)
        1    0.000    0.000    0.000    0.000 pydoc.py:523(HTMLRepr)
        1    0.000    0.000    0.000    0.000 net_min_base.py:58(_MinimizerSettingBase)
        1    0.000    0.000    0.000    0.000 pickle.py:200(_Framer)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1390(zipfian_gen)
        1    0.000    0.000    0.000    0.000 _guards.py:354(Source)
        1    0.000    0.000    0.000    0.000 _cubature.py:589(_InfiniteLimitsTransform)
        1    0.000    0.000    0.000    0.000 transforms.py:2562(BboxTransformFrom)
        1    0.000    0.000    0.000    0.000 activation.py:110(RReLU)
        1    0.000    0.000    0.000    0.000 distance.py:1744(CDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 _comparison.py:74(<dictcomp>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:1030(ToolCopyToClipboardBase)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:801(Min)
        1    0.000    0.000    0.000    0.000 cnf.py:394(EncodedCNF)
        1    0.000    0.000    0.000    0.000 selectors.py:290(SelectSelector)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1001(_DOF_estimator)
        1    0.000    0.000    0.000    0.000 sequences.py:378(EmptySequence)
        1    0.000    0.000    0.000    0.000 __init__.py:154(HTTPMethod)
        1    0.000    0.000    0.000    0.000 grad_scaler.py:13(_MultiDeviceReplicator)
        1    0.000    0.000    0.000    0.000 mathtext.py:137(MathtextBackendAgg)
        1    0.000    0.000    0.000    0.000 selector_events.py:1126(_SelectorDatagramTransport)
        1    0.000    0.000    0.000    0.000 observer.py:1419(ReuseInputObserver)
        1    0.000    0.000    0.000    0.000 _policybase.py:271(Compat32)
        1    0.000    0.000    0.000    0.000 _multivariate.py:6001(dirichlet_multinomial_gen)
        1    0.000    0.000    0.000    0.000 _mangling.py:9(PackageMangler)
        1    0.000    0.000    0.000    0.000 due.py:22(InactiveDueCreditCollector)
       12    0.000    0.000    0.000    0.000 core.py:970(clear)
        1    0.000    0.000    0.000    0.000 ticker.py:1218(LogitFormatter)
        1    0.000    0.000    0.000    0.000 zipfile.py:1131(_ZipWriteFile)
        1    0.000    0.000    0.000    0.000 expand.py:379(EnsurePackagesDiscovered)
        1    0.000    0.000    0.000    0.000 patches.py:2850(_Base)
        1    0.000    0.000    0.000    0.000 stubs.py:38(QuantWrapper)
        1    0.000    0.000    0.000    0.000 comments.py:1089(CommentedSet)
        1    0.000    0.000    0.000    0.000 request.py:834(HTTPPasswordMgr)
        1    0.000    0.000    0.000    0.000 array_comprehension.py:344(ArrayComprehensionMap)
        1    0.000    0.000    0.000    0.000 comments.py:671(CommentedMapItemsView)
        1    0.000    0.000    0.000    0.000 _factories.py:9(__init__)
        1    0.000    0.000    0.000    0.000 ElementTree.py:1105(_ListDataStream)
        1    0.000    0.000    0.000    0.000 polynomials.py:1320(assoc_laguerre)
        1    0.000    0.000    0.000    0.000 _interpolate.py:125(interp2d)
        1    0.000    0.000    0.000    0.000 polyoptions.py:576(Modulus)
        1    0.000    0.000    0.000    0.000 matrices.py:747(MatrixMethods)
        1    0.000    0.000    0.000    0.000 backend_tools.py:504(ToolYScale)
        3    0.000    0.000    0.000    0.000 utils.py:17(<genexpr>)
        1    0.000    0.000    0.000    0.000 grad_mode.py:293(_unsafe_preserve_version_counter)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:26(LRScheduler)
        1    0.000    0.000    0.000    0.000 _cm.py:66(cubehelix)
        1    0.000    0.000    0.000    0.000 complexes.py:1233(principal_branch)
        2    0.000    0.000    0.000    0.000 constraint_registry.py:83(__init__)
        1    0.000    0.000    0.000    0.000 _infra.py:230(Graph)
        1    0.000    0.000    0.000    0.000 _hypotests.py:705(SomersDResult)
        3    0.000    0.000    0.000    0.000 tag.py:25(__init__)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:13(ExprWithIntLimits)
        1    0.000    0.000    0.000    0.000 tz.py:1253(tzical)
        1    0.000    0.000    0.000    0.000 band.py:17(__init__)
        1    0.000    0.000    0.000    0.000 loss.py:539(BCELoss)
        1    0.000    0.000    0.000    0.000 fused.py:104(BNReLU2d)
        1    0.000    0.000    0.000    0.000 __init__.py:44(__init__)
        1    0.000    0.000    0.000    0.000 _expm_multiply.py:396(LazyOperatorNormInfo)
        1    0.000    0.000    0.000    0.000 _rbfinterp.py:134(RBFInterpolator)
        1    0.000    0.000    0.000    0.000 equality.py:113(StrictGreaterThanPredicate)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:851(SupportsFloat)
        1    0.000    0.000    0.000    0.000 colorbar.py:262(_ColorbarAutoMinorLocator)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:1074(bradford_gen)
        1    0.000    0.000    0.000    0.000 _print_helpers.py:8(Printable)
        1    0.000    0.000    0.000    0.000 batchnorm.py:446(BatchNorm3d)
        1    0.000    0.000    0.000    0.000 mathtext.py:3324(__init__)
        1    0.000    0.000    0.000    0.000 _rules.py:62(_MissingStandardSymbolicFunction)
        1    0.000    0.000    0.000    0.000 streamplot.py:313(Grid)
        1    0.000    0.000    0.000    0.000 normalization.py:121(InstanceNorm2d)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:76(_interpolate)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:4829(gausshyper_gen)
        1    0.000    0.000    0.000    0.000 sequences.py:611(SeqFormula)
        3    0.000    0.000    0.000    0.000 units.py:791(unitized)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:67(GradientFile)
        1    0.000    0.000    0.000    0.000 dates.py:1637(HourLocator)
        1    0.000    0.000    0.000    0.000 single.py:443(FirstExact)
        1    0.000    0.000    0.000    0.000 _matfuncs.py:207(ProductOperator)
        1    0.000    0.000    0.000    0.000 _VF.py:19(VFModule)
        1    0.000    0.000    0.000    0.000 _compression.py:16(_check_can_read)
        8    0.000    0.000    0.000    0.000 _pep440.py:70(__neg__)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2460(foldcauchy_gen)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:444(MatrixHomomorphism)
        1    0.000    0.000    0.000    0.000 widgets.py:25(LockDraw)
        1    0.000    0.000    0.000    0.000 lsoda.py:7(LSODA)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:293(kstwobign_gen)
        1    0.000    0.000    0.000    0.000 _rules.py:92(_OperatorSupportedInNewerOpsetVersion)
        1    0.000    0.000    0.000    0.000 dviread.py:516(DviFont)
        1    0.000    0.000    0.000    0.000 containers.py:339(OrderedSet)
        1    0.000    0.000    0.000    0.000 transports.py:72(WriteTransport)
        1    0.000    0.000    0.000    0.000 widgets.py:2443(PolygonSelector)
        1    0.000    0.000    0.000    0.000 transforms.py:2503(BboxTransformTo)
        1    0.000    0.000    0.000    0.000 conv_fused.py:590(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 fused.py:67(ConvBnReLU1d)
        1    0.000    0.000    0.000    0.000 events.py:17(Event)
        1    0.000    0.000    0.000    0.000 padding.py:277(ReflectionPad3d)
        1    0.000    0.000    0.000    0.000 polar.py:362(ThetaAxis)
        1    0.000    0.000    0.000    0.000 relational.py:1167(StrictGreaterThan)
        1    0.000    0.000    0.000    0.000 optimization.py:602(MDNewton)
        6    0.000    0.000    0.000    0.000 symbolic_opset8.py:67(_apply_params)
        1    0.000    0.000    0.000    0.000 graph_drawer.py:322(FxGraphDrawer)
        1    0.000    0.000    0.000    0.000 conv_fused.py:763(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 __init__.py:7(Warning)
        1    0.000    0.000    0.000    0.000 results.py:22(_ParseResultsWithOffset)
        1    0.000    0.000    0.000    0.000 batchnorm.py:186(_LazyNormBase)
        1    0.000    0.000    0.000    0.000 spglib.py:402(MagneticSpaceGroupType)
        1    0.000    0.000    0.000    0.000 exp_family.py:6(ExponentialFamily)
        1    0.000    0.000    0.000    0.000 _czt.py:115(CZT)
        1    0.000    0.000    0.000    0.000 dispatcher.py:366(MethodDispatcher)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:129(EnergyState)
        1    0.000    0.000    0.000    0.000 __init__.py:764(Grouper)
        1    0.000    0.000    0.000    0.000 polyoptions.py:258(Expand)
        1    0.000    0.000    0.000    0.000 unix_events.py:1107(FastChildWatcher)
        1    0.000    0.000    0.000    0.000 numbers.py:277(lucas)
        1    0.000    0.000    0.000    0.000 request.py:645(HTTPRedirectHandler)
        1    0.000    0.000    0.000    0.000 __init__.py:199(strict_fusion)
        1    0.000    0.000    0.000    0.000 core.py:2589(MaskedIterator)
        1    0.000    0.000    0.000    0.000 activation.py:140(Sigmoid)
        1    0.000    0.000    0.000    0.000 scalarbool.py:21(ScalarBoolean)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:420(TrueDiv)
        1    0.000    0.000    0.000    0.000 autograd_function.py:547(CtxCustomSave)
        1    0.000    0.000    0.000    0.000 grad_mode.py:9(no_grad)
        1    0.000    0.000    0.000    0.000 _resampling.py:981(PowerResult)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:740(nhypergeom_gen)
        1    0.000    0.000    0.000    0.000 backend_tools.py:712(ToolForward)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:505(IsNonOverlappingAndDenseIndicator)
        1    0.000    0.000    0.000    0.000 _multivariate.py:245(multi_rv_frozen)
        1    0.000    0.000    0.000    0.000 chi2.py:6(Chi2)
        1    0.000    0.000    0.000    0.000 encoder.py:105(__init__)
        2    0.000    0.000    0.000    0.000 glob.py:108(<genexpr>)
        6    0.000    0.000    0.000    0.000 ops.py:752(force_aff_func_args)
        1    0.000    0.000    0.000    0.000 activation.py:68(ReLU)
        3    0.000    0.000    0.000    0.000 __init__.py:919(__init__)
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 request.py:908(HTTPPasswordMgrWithPriorAuth)
        1    0.000    0.000    0.000    0.000 outputs.py:5528(Eigenval)
        1    0.000    0.000    0.000    0.000 abc.py:112(PathEntryFinder)
        1    0.000    0.000    0.000    0.000 enumerative.py:92(PartComponent)
        2    0.000    0.000    0.000    0.000 pathlib.py:53(__init__)
        1    0.000    0.000    0.000    0.000 pathlib.py:231(_PosixFlavour)
        1    0.000    0.000    0.000    0.000 parameters.py:60(__init__)
        1    0.000    0.000    0.000    0.000 _guards.py:78(ShapeGuard)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:13(ReentrancyLock)
        2    0.000    0.000    0.000    0.000 representer.py:137(add_multi_representer)
        1    0.000    0.000    0.000    0.000 text.py:6(TextBackend)
        1    0.000    0.000    0.000    0.000 response.py:68(addinfourl)
        1    0.000    0.000    0.000    0.000 single.py:294(SinglePatternODESolver)
        1    0.000    0.000    0.000    0.000 headerregistry.py:490(ContentDispositionHeader)
        1    0.000    0.000    0.000    0.000 version.py:45(Version)
        1    0.000    0.000    0.000    0.000 relational.py:1185(StrictLessThan)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:897(SupportsRound)
        1    0.000    0.000    0.000    0.000 numbers.py:2039(primenu)
        1    0.000    0.000    0.000    0.000 conv_fused.py:539(ConvBnReLU2d)
        3    0.000    0.000    0.000    0.000 __init__.py:1319(disable)
        1    0.000    0.000    0.000    0.000 series.py:1608(Parametric2DLineSeries)
        1    0.000    0.000    0.000    0.000 sequences.py:1126(SeqMul)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:197(betabinom_gen)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1104(boltzmann_gen)
        1    0.000    0.000    0.000    0.000 context.py:230(DefaultContext)
        1    0.000    0.000    0.000    0.000 spawn.py:12(ProcessException)
        1    0.000    0.000    0.000    0.000 __init__.py:169(<listcomp>)
        1    0.000    0.000    0.000    0.000 computed_entries.py:226(TemperatureEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 pixelshuffle.py:60(PixelUnshuffle)
        1    0.000    0.000    0.000    0.000 category.py:163(UnitData)
        1    0.000    0.000    0.000    0.000 mathtext.py:1731(Vlist)
        6    0.000    0.000    0.000    0.000 version.py:471(_parse_letter_version)
        1    0.000    0.000    0.000    0.000 logic.py:320(AndOr_Base)
        1    0.000    0.000    0.000    0.000 _functions.py:52(Gather)
        1    0.000    0.000    0.000    0.000 _base.py:1554(sparray)
        1    0.000    0.000    0.000    0.000 __init__.py:488(StringTemplateStyle)
        1    0.000    0.000    0.000    0.000 transforms.py:2598(ScaledTranslation)
        1    0.000    0.000    0.000    0.000 _interface.py:639(_AdjointLinearOperator)
        1    0.000    0.000    0.000    0.000 core.py:2362(_PendingSkip)
        1    0.000    0.000    0.000    0.000 timeutils.py:40(<listcomp>)
        1    0.000    0.000    0.000    0.000 package_importer.py:662(_PackageNode)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1928(nchypergeom_fisher_gen)
        1    0.000    0.000    0.000    0.000 patches.py:2532(Angle3)
        1    0.000    0.000    0.000    0.000 outputs.py:1766(BSVasprun)
        1    0.000    0.000    0.000    0.000 _kdtree.py:318(leafnode)
        1    0.000    0.000    0.000    0.000 numbers.py:3961(EulerGamma)
        1    0.000    0.000    0.000    0.000 visualization.py:9(VisualizationMethods)
        1    0.000    0.000    0.000    0.000 transforms.py:1169(CumulativeDistributionTransform)
        1    0.000    0.000    0.000    0.000 request.py:2399(ftpwrapper)
        1    0.000    0.000    0.000    0.000 _resampling.py:1314(PermutationTestResult)
        1    0.000    0.000    0.000    0.000 unix_events.py:902(PidfdChildWatcher)
        1    0.000    0.000    0.000    0.000 _functions.py:273(BackwardHookFunction)
        1    0.000    0.000    0.000    0.000 _backend.py:36(_backend_from_arg)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1740(ParamSpec)
        1    0.000    0.000    0.000    0.000 single.py:1203(Separable)
        1    0.000    0.000    0.000    0.000 beta_functions.py:173(betainc)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:667(riemann_xi)
        1    0.000    0.000    0.000    0.000 polyoptions.py:684(Gen)
        1    0.000    0.000    0.000    0.000 version.py:38(_Version)
        1    0.000    0.000    0.000    0.000 _collections.py:27(Pair)
        1    0.000    0.000    0.000    0.000 _arffread.py:170(NumericAttribute)
        1    0.000    0.000    0.000    0.000 _base.py:154(FixedRule)
        1    0.000    0.000    0.000    0.000 transports.py:251(_FlowControlMixin)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:49(IncrementRecursionCount)
        3    0.000    0.000    0.000    0.000 __init__.py:504(CFunctionType)
        1    0.000    0.000    0.000    0.000 mathtext.py:1374(Node)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:18(Storage)
        1    0.000    0.000    0.000    0.000 numbers.py:1959(mobius)
        1    0.000    0.000    0.000    0.000 tempfile.py:416(_TemporaryFileCloser)
        1    0.000    0.000    0.000    0.000 numbers.py:2091(primeomega)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:402(betanbinom_gen)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:751(Protocol)
        1    0.000    0.000    0.000    0.000 ticker.py:183(_DummyAxis)
        1    0.000    0.000    0.000    0.000 tools_common.py:90(FusionGroup)
        1    0.000    0.000    0.000    0.000 _trace.py:1111(TracedModule)
        1    0.000    0.000    0.000    0.000 backend_tools.py:248(SetCursorBase)
        1    0.000    0.000    0.000    0.000 function.py:966(WildFunction)
        6    0.000    0.000    0.000    0.000 fuser_method_mappings.py:153(_sequential_wrapper2)
        2    0.000    0.000    0.000    0.000 <frozen _collections_abc>:98(__subclasshook__)
        1    0.000    0.000    0.000    0.000 index_tricks.py:562(__init__)
        1    0.000    0.000    0.000    0.000 observer.py:52(_PartialWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:280(LogRecord)
        1    0.000    0.000    0.000    0.000 numbers.py:2144(totient)
        1    0.000    0.000    0.000    0.000 _weights_only_unpickler.py:113(Unpickler)
        1    0.000    0.000    0.000    0.000 hooks.py:92(BackwardHook)
        1    0.000    0.000    0.000    0.000 _root_scalar.py:20(MemoizeDer)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:626(_ProtocolMeta)
        3    0.000    0.000    0.000    0.000 libmpf.py:663(mpf_neg)
        1    0.000    0.000    0.000    0.000 loss.py:1614(CTCLoss)
        4    0.000    0.000    0.000    0.000 _spherical_bessel.py:9(use_reflection)
        1    0.000    0.000    0.000    0.000 __init__.py:275(cudaStatus)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4776(multivariate_t_frozen)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:902(logser_gen)
        1    0.000    0.000    0.000    0.000 python.py:10(PythonPrinter)
        1    0.000    0.000    0.000    0.000 relational.py:873(_Greater)
        1    0.000    0.000    0.000    0.000 tz.py:328(_ttinfo)
        1    0.000    0.000    0.000    0.000 rnn.py:1248(GRUCell)
        1    0.000    0.000    0.000    0.000 equality.py:69(UnequalityPredicate)
        1    0.000    0.000    0.000    0.000 hyper.py:937(HyperRep_atanh)
        1    0.000    0.000    0.000    0.000 single.py:1046(SecondNonlinearAutonomousConserved)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:2249(exponweib_gen)
        1    0.000    0.000    0.000    0.000 _rules.py:182(_FxFrontendAotautograd)
        1    0.000    0.000    0.000    0.000 headerregistry.py:104(Group)
        1    0.000    0.000    0.000    0.000 cse_main.py:218(FuncArgTracker)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:267(Znm)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:930(Writer)
        1    0.000    0.000    0.000    0.000 _resampling.py:2082(ResamplingMethod)
        1    0.000    0.000    0.000    0.000 arpack.py:274(ArpackError)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:86(mathieuc)
        1    0.000    0.000    0.000    0.000 figure.py:159(SubplotParams)
        1    0.000    0.000    0.000    0.000 utilities.py:166(AlgIntPowers)
        1    0.000    0.000    0.000    0.000 transforms.py:89(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:156(__init__)
        1    0.000    0.000    0.000    0.000 ImageFile.py:812(PyDecoder)
        1    0.000    0.000    0.000    0.000 _trace.py:75(ONNXTracedModule)
        1    0.000    0.000    0.000    0.000 _convertions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 analyzer.py:1691(SpacegroupOperations)
        1    0.000    0.000    0.000    0.000 ecm.py:17(Point)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1044(_TypedDictMeta)
        1    0.000    0.000    0.000    0.000 response.py:14(addbase)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:12(PageTrendTestResult)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:385(NameAddr)
        6    0.000    0.000    0.000    0.000 expr.py:1021(_eval_power)
        3    0.000    0.000    0.000    0.000 _new_distributions.py:343(_moment_central_formula)
        3    0.000    0.000    0.000    0.000 rcsetup.py:217(validate_dpi)
        1    0.000    0.000    0.000    0.000 tools.py:38(typed)
        1    0.000    0.000    0.000    0.000 _infra.py:167(StackFrame)
        1    0.000    0.000    0.000    0.000 fancysets.py:1493(Complexes)
        1    0.000    0.000    0.000    0.000 bessel.py:2149(_besseli)
        1    0.000    0.000    0.000    0.000 constraints.py:186(_IndependentConstraint)
        1    0.000    0.000    0.000    0.000 __init__.py:307(_LowLevelFile)
        1    0.000    0.000    0.000    0.000 grad_mode.py:164(inference_mode)
        1    0.000    0.000    0.000    0.000 numbers.py:2252(primepi)
        1    0.000    0.000    0.000    0.000 normalization.py:161(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 colors.py:1174(LogNorm)
        1    0.000    0.000    0.000    0.000 _decorator.py:47(guaranteed_datapipes_determinism)
        1    0.000    0.000    0.000    0.000 TiffTags.py:32(TagInfo)
        1    0.000    0.000    0.000    0.000 loss.py:35(L1Loss)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1295(zipf_gen)
        1    0.000    0.000    0.000    0.000 factor_.py:740(maxsize)
        1    0.000    0.000    0.000    0.000 _utils.py:39(Interval)
        3    0.000    0.000    0.000    0.000 core.py:1362(getmask)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:9(detect_anomaly)
        1    0.000    0.000    0.000    0.000 core.py:237(LinearCombination)
        1    0.000    0.000    0.000    0.000 error_functions.py:2759(_eis)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:706(stieltjes)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:782(_make_node_sizes_strides)
        1    0.000    0.000    0.000    0.000 equality.py:161(GreaterThanPredicate)
        1    0.000    0.000    0.000    0.000 library.py:18(Library)
        1    0.000    0.000    0.000    0.000 _internal.py:616(_Stream)
        1    0.000    0.000    0.000    0.000 core.py:255(InputGenerator)
        1    0.000    0.000    0.000    0.000 ticker.py:2372(LogLocator)
        1    0.000    0.000    0.000    0.000 boolalg.py:1108(Nand)
        1    0.000    0.000    0.000    0.000 storage.py:230(UntypedStorage)
        1    0.000    0.000    0.000    0.000 numbers.py:2194(reduced_totient)
        1    0.000    0.000    0.000    0.000 conv.py:1264(LazyConv2d)
        1    0.000    0.000    0.000    0.000 protocols.py:9(BaseProtocol)
        1    0.000    0.000    0.000    0.000 gui.py:24(tqdm_gui)
        1    0.000    0.000    0.000    0.000 loss.py:1179(MultiLabelSoftMarginLoss)
        1    0.000    0.000    0.000    0.000 polynomials.py:728(chebyshevu_root)
        2    0.000    0.000    0.000    0.000 constraints.py:366(__init__)
        1    0.000    0.000    0.000    0.000 package_importer.py:697(_PackageResourceReader)
        1    0.000    0.000    0.000    0.000 conv.py:90(Conv2d)
        1    0.000    0.000    0.000    0.000 cnf.py:109(AND)
        1    0.000    0.000    0.000    0.000 mock.py:2473(__init__)
        1    0.000    0.000    0.000    0.000 polyoptions.py:711(Symbols)
        1    0.000    0.000    0.000    0.000 index_tricks.py:303(__init__)
        1    0.000    0.000    0.000    0.000 _adapters.py:83(ChildPath)
        1    0.000    0.000    0.000    0.000 _nonlin.py:382(Jacobian)
        1    0.000    0.000    0.000    0.000 colors.py:861(ListedColormap)
        1    0.000    0.000    0.000    0.000 reductions.py:22(StorageWeakRef)
        1    0.000    0.000    0.000    0.000 __init__.py:840(_CudaBase)
        1    0.000    0.000    0.000    0.000 headerregistry.py:525(MessageIDHeader)
        5    0.000    0.000    0.000    0.000 version.py:537(<lambda>)
        2    0.000    0.000    0.000    0.000 __init__.py:8(__init__)
        1    0.000    0.000    0.000    0.000 Files_out.py:2(FilesOut)
        6    0.000    0.000    0.000    0.000 fromnumeric.py:2317(_any_dispatcher)
        1    0.000    0.000    0.000    0.000 bz2.py:140(writable)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1232(_Sparse_Matrix_coo)
        1    0.000    0.000    0.000    0.000 __init__.py:2317(JupyterHTMLStr)
        1    0.000    0.000    0.000    0.000 setupcfg.py:759(_AmbiguousMarker)
        1    0.000    0.000    0.000    0.000 suite.py:92(TestSuite)
        1    0.000    0.000    0.000    0.000 transforms.py:783(CorrCholeskyTransform)
        1    0.000    0.000    0.000    0.000 _guards.py:216(DuplicateInputs)
        1    0.000    0.000    0.000    0.000 tensor.py:4849(WildTensorIndex)
        1    0.000    0.000    0.000    0.000 parameter.py:13(Parameter)
        1    0.000    0.000    0.000    0.000 property.py:3(Property)
        1    0.000    0.000    0.000    0.000 _optimize.py:3934(_Brute_Wrapper)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:17(DirectoryReader)
        1    0.000    0.000    0.000    0.000 series.py:1229(List2DSeries)
        1    0.000    0.000    0.000    0.000 _typing.py:52(JustComplex)
        1    0.000    0.000    0.000    0.000 importer.py:183(OrderedImporter)
        1    0.000    0.000    0.000    0.000 pathlib.py:304(__init__)
        1    0.000    0.000    0.000    0.000 _globals.py:32(_NoValueType)
        1    0.000    0.000    0.000    0.000 dataframes.py:241(CaptureVariable)
        1    0.000    0.000    0.000    0.000 core.py:4223(Or)
        1    0.000    0.000    0.000    0.000 padding.py:434(ReplicationPad3d)
        1    0.000    0.000    0.000    0.000 _datasource.py:74(_FileOpeners)
        1    0.000    0.000    0.000    0.000 scale.py:26(ScaleBase)
        1    0.000    0.000    0.000    0.000 getlimits.py:630(iinfo)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:224(QuotedString)
        1    0.000    0.000    0.000    0.000 util.py:6(assoc)
        1    0.000    0.000    0.000    0.000 rules.py:5(Transform)
        1    0.000    0.000    0.000    0.000 _idl.py:629(AttrDict)
        1    0.000    0.000    0.000    0.000 selectors.py:433(PollSelector)
        1    0.000    0.000    0.000    0.000 _script.py:1534(_ScriptProfile)
        1    0.000    0.000    0.000    0.000 polar.py:666(RadialAxis)
        1    0.000    0.000    0.000    0.000 __init__.py:110(DeQuantize)
        1    0.000    0.000    0.000    0.000 _guards.py:284(GuardsContext)
        1    0.000    0.000    0.000    0.000 _decorator.py:11(functional_datapipe)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:285(BFGS)
        1    0.000    0.000    0.000    0.000 inputs.py:1919(Orbital)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5689(random_table_frozen)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:15(TriInterpolator)
        1    0.000    0.000    0.000    0.000 _typing.py:210(_DataPipeType)
        1    0.000    0.000    0.000    0.000 torch_version.py:6(_LazyImport)
        1    0.000    0.000    0.000    0.000 ssl.py:154(<dictcomp>)
        1    0.000    0.000    0.000    0.000 core.py:3473(CharsNotIn)
        1    0.000    0.000    0.000    0.000 batchnorm.py:121(_BatchNorm)
        1    0.000    0.000    0.000    0.000 _dtype_like.py:81(_SupportsDType)
        1    0.000    0.000    0.000    0.000 ticker.py:211(TickHelper)
        1    0.000    0.000    0.000    0.000 streams.py:117(FlowControlMixin)
        1    0.000    0.000    0.000    0.000 ctx_iv.py:292(ivmpf_constant)
        6    0.000    0.000    0.000    0.000 symbolic_opset9.py:1997(_interpolate)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5288(multivariate_hypergeom_frozen)
        1    0.000    0.000    0.000    0.000 _backend.py:412(Dispatchable)
        1    0.000    0.000    0.000    0.000 padding.py:341(ReplicationPad1d)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1189(BivariateSpline)
        1    0.000    0.000    0.000    0.000 distance.py:1771(PDistMetricWrapper)
        1    0.000    0.000    0.000    0.000 locks.py:24(Lock)
        1    0.000    0.000    0.000    0.000 activation.py:807(Softplus)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:11(Token)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:148(mathieusprime)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:210(mathieucprime)
        1    0.000    0.000    0.000    0.000 grouping.py:19(__getattr__)
        8    0.000    0.000    0.000    0.000 _multiufuncs.py:80(_override_finalize_out)
        1    0.000    0.000    0.000    0.000 _dcsrch.py:17(DCSRCH)
        8    0.000    0.000    0.000    0.000 six.py:80(_add_doc)
        1    0.000    0.000    0.000    0.000 grouping.py:89(UnBatcherIterDataPipe)
        1    0.000    0.000    0.000    0.000 activation.py:478(ELU)
        1    0.000    0.000    0.000    0.000 line.py:2429(LinearEntity3D)
        2    0.000    0.000    0.000    0.000 glob.py:229(_ishidden)
        1    0.000    0.000    0.000    0.000 _stats_py.py:4063(AlexanderGovernResult)
        1    0.000    0.000    0.000    0.000 boolalg.py:1137(Nor)
        1    0.000    0.000    0.000    0.000 tensor.py:4578(WildTensorHead)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:985(__new__)
        1    0.000    0.000    0.000    0.000 __init__.py:46(PackageNotFoundError)
        1    0.000    0.000    0.000    0.000 _pep440.py:77(NegativeInfinity)
        5    0.000    0.000    0.000    0.000 datetime.py:545(_check_tzinfo_arg)
        1    0.000    0.000    0.000    0.000 __init__.py:2111(_OrderedSet)
        1    0.000    0.000    0.000    0.000 formal.py:1543(FormalPowerSeriesProduct)
        1    0.000    0.000    0.000    0.000 bessel.py:2180(_besselk)
        1    0.000    0.000    0.000    0.000 _rules.py:300(_FxNodeToOnnx)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1702(TukeyHSDResult)
        1    0.000    0.000    0.000    0.000 _minimize.py:1050(_Patch_Callback_Equal_Variables)
        1    0.000    0.000    0.000    0.000 testing.py:22(reset_pyparsing_context)
        1    0.000    0.000    0.000    0.000 pooling.py:990(_AdaptiveMaxPoolNd)
        1    0.000    0.000    0.000    0.000 Files_in.py:3(FilesIn)
        1    0.000    0.000    0.000    0.000 conv_fused.py:363(ConvBn1d)
        1    0.000    0.000    0.000    0.000 loss.py:726(HingeEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3061(invwishart_frozen)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3858(random_correlation_gen)
        1    0.000    0.000    0.000    0.000 _collections.py:5(FreezableDefaultDict)
        1    0.000    0.000    0.000    0.000 distributed.py:153(_BufferCommHook)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:885(MeijerFormula)
        7    0.000    0.000    0.000    0.000 _pep440.py:446(<lambda>)
        1    0.000    0.000    0.000    0.000 distributed.py:194(_DDPJoinHook)
        1    0.000    0.000    0.000    0.000 rrule.py:1112(_iterinfo)
        1    0.000    0.000    0.000    0.000 dviread.py:607(Vf)
        1    0.000    0.000    0.000    0.000 unix_events.py:1426(_UnixDefaultEventLoopPolicy)
        1    0.000    0.000    0.000    0.000 determinant.py:72(Permanent)
        1    0.000    0.000    0.000    0.000 __init__.py:1237(_StderrHandler)
        1    0.000    0.000    0.000    0.000 _iotools.py:133(LineSplitter)
        1    0.000    0.000    0.000    0.000 __init__.py:1152(FileHandler)
        1    0.000    0.000    0.000    0.000 _meta.py:32(SimplePath)
        1    0.000    0.000    0.000    0.000 boolalg.py:1171(Xnor)
        1    0.000    0.000    0.000    0.000 _docscrape.py:578(FunctionDoc)
        1    0.000    0.000    0.000    0.000 hb.py:375(<dictcomp>)
        1    0.000    0.000    0.000    0.000 art3d.py:375(Patch3DCollection)
        1    0.000    0.000    0.000    0.000 deprecation.py:101(_DeprecationHelperStr)
        1    0.000    0.000    0.000    0.000 context.py:283(SpawnProcess)
        1    0.000    0.000    0.000    0.000 kind.py:7(MatrixKind)
        1    0.000    0.000    0.000    0.000 datetime.py:1219(tzinfo)
        1    0.000    0.000    0.000    0.000 _sensitivity_analysis.py:155(BootstrapSobolResult)
        1    0.000    0.000    0.000    0.000 pyplot.py:514(_xkcd)
        1    0.000    0.000    0.000    0.000 core.py:5313(Opt)
        1    0.000    0.000    0.000    0.000 line.py:1987(Line2D)
        1    0.000    0.000    0.000    0.000 _arffread.py:339(RelationalAttribute)
        1    0.000    0.000    0.000    0.000 parser.py:16(Parser)
        1    0.000    0.000    0.000    0.000 _page_trend_test.py:417(_PageL)
        1    0.000    0.000    0.000    0.000 sparse.py:462(MutableSparseMatrix)
        1    0.000    0.000    0.000    0.000 _pytree.py:135(LeafSpec)
        1    0.000    0.000    0.000    0.000 ImageFile.py:734(PyCodec)
        3    0.000    0.000    0.000    0.000 rcsetup.py:391(validate_aspect)
        1    0.000    0.000    0.000    0.000 variable.py:13(Variable)
        1    0.000    0.000    0.000    0.000 assume.py:174(PredicateMeta)
        6    0.000    0.000    0.000    0.000 signal.py:48(_wraps)
        1    0.000    0.000    0.000    0.000 __future__.py:81(_Feature)
        1    0.000    0.000    0.000    0.000 util.py:19(LazyEval)
        1    0.000    0.000    0.000    0.000 request.py:1474(FileHandler)
        7    0.000    0.000    0.000    0.000 due.py:31(non_decorating_decorator)
        1    0.000    0.000    0.000    0.000 polyoptions.py:384(Composite)
        1    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 dates.py:1697(MicrosecondLocator)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:878(SupportsIndex)
        1    0.000    0.000    0.000    0.000 para4band.py:82(Para4Band)
        1    0.000    0.000    0.000    0.000 join.py:11(JoinHook)
        2    0.000    0.000    0.000    0.000 {built-in method _sqlite3.register_adapter}
        3    0.000    0.000    0.000    0.000 rendezvous.py:22(register_rendezvous_handler)
        1    0.000    0.000    0.000    0.000 dates.py:947(rrulewrapper)
        1    0.000    0.000    0.000    0.000 laplace.py:1267(LaplaceTransform)
        1    0.000    0.000    0.000    0.000 symbol.py:26(Str)
        1    0.000    0.000    0.000    0.000 grad_mode.py:108(set_grad_enabled)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:118(GradInterpreter)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:860(SupportsComplex)
        1    0.000    0.000    0.000    0.000 _survival.py:469(LogRankResult)
        1    0.000    0.000    0.000    0.000 timestamp.py:16(TimeStamp)
        1    0.000    0.000    0.000    0.000 loss.py:1226(CosineEmbeddingLoss)
        1    0.000    0.000    0.000    0.000 headerregistry.py:439(ParameterizedMIMEHeader)
        1    0.000    0.000    0.000    0.000 _rules.py:346(_ArgFormatTooVerbose)
        1    0.000    0.000    0.000    0.000 runner.py:161(TextTestRunner)
        1    0.000    0.000    0.000    0.000 TiffTags.py:24(_TagInfo)
        1    0.000    0.000    0.000    0.000 pycode.py:673(<dictcomp>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1527(Accent)
        1    0.000    0.000    0.000    0.000 _rules.py:126(_FxTracerSuccess)
        1    0.000    0.000    0.000    0.000 assume.py:14(AssumptionsContext)
        1    0.000    0.000    0.000    0.000 pprint.py:80(_safe_key)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5769(uniform_direction_gen)
        1    0.000    0.000    0.000    0.000 _aliases.py:182(UniqueAllResult)
        1    0.000    0.000    0.000    0.000 padding.py:382(ReplicationPad2d)
        1    0.000    0.000    0.000    0.000 arpack.py:315(_ArpackParams)
        1    0.000    0.000    0.000    0.000 _static.py:9(Static)
        1    0.000    0.000    0.000    0.000 error.py:24(StreamMark)
        1    0.000    0.000    0.000    0.000 extras.py:213(_fromnxfunction)
        3    0.000    0.000    0.000    0.000 {method 'toordinal' of 'datetime.date' objects}
        2    0.000    0.000    0.000    0.000 decorator.py:120(__init__)
        1    0.000    0.000    0.000    0.000 graphs.py:118(graph)
        1    0.000    0.000    0.000    0.000 _spdx.py:6(SPDXLicense)
        1    0.000    0.000    0.000    0.000 hyper.py:1129(appellf1)
        1    0.000    0.000    0.000    0.000 formal.py:1613(FormalPowerSeriesCompose)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:367(errstate)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:455(Mailbox)
        1    0.000    0.000    0.000    0.000 threading.py:1317(_make_invoke_excepthook)
        1    0.000    0.000    0.000    0.000 _tanhsinh.py:1285(<listcomp>)
        1    0.000    0.000    0.000    0.000 printer.py:388(_PrintFunction)
        1    0.000    0.000    0.000    0.000 _ops.py:594(_Ops)
        1    0.000    0.000    0.000    0.000 _parser.py:15(Node)
        1    0.000    0.000    0.000    0.000 _rotation_spline.py:251(RotationSpline)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:514(FunctionModifiers)
        5    0.000    0.000    0.000    0.000 _inspect.py:143(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 _rules.py:277(_AtenlibFxToOnnx)
        1    0.000    0.000    0.000    0.000 context.py:203(reducer)
        1    0.000    0.000    0.000    0.000 anomaly_mode.py:91(set_detect_anomaly)
        1    0.000    0.000    0.000    0.000 arrayprint.py:905(FloatingFormat)
        1    0.000    0.000    0.000    0.000 Image.py:3029(ImageTransformHandler)
        1    0.000    0.000    0.000    0.000 mlab.py:962(GaussianKDE)
        1    0.000    0.000    0.000    0.000 __init__.py:503(PackagePath)
        1    0.000    0.000    0.000    0.000 split_module.py:11(Partition)
        1    0.000    0.000    0.000    0.000 locks.py:219(Condition)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1081(ZerosPolesGainContinuous)
        1    0.000    0.000    0.000    0.000 arpack.py:957(IterInv)
        1    0.000    0.000    0.000    0.000 server_process_global_profiler.py:16(_server_process_global_profile)
        1    0.000    0.000    0.000    0.000 reductions.py:49(SharedCache)
        7    0.000    0.000    0.000    0.000 numeric.py:1389(_moveaxis_dispatcher)
        1    0.000    0.000    0.000    0.000 polar.py:269(ThetaTick)
        1    0.000    0.000    0.000    0.000 expand.py:53(StaticModule)
        2    0.000    0.000    0.000    0.000 _adapters.py:16(__getattr__)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4367(_shift_scale_inverse_function)
        1    0.000    0.000    0.000    0.000 _rules.py:208(_FxPassConvertNegToSigmoid)
        1    0.000    0.000    0.000    0.000 line.py:2160(Ray2D)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:12(LRUDict)
        1    0.000    0.000    0.000    0.000 core.py:943(_CacheType)
        1    0.000    0.000    0.000    0.000 _classes.py:21(__init__)
        1    0.000    0.000    0.000    0.000 typing.py:951(__repr__)
        3    0.000    0.000    0.000    0.000 facts.py:290(split_alpha_beta)
        2    0.000    0.000    0.000    0.000 __init__.py:24(__init__)
        1    0.000    0.000    0.000    0.000 _arffread.py:232(StringAttribute)
        1    0.000    0.000    0.000    0.000 utils.py:8(SequenceWrapperMapDataPipe)
        1    0.000    0.000    0.000    0.000 autograd_function.py:251(VmapInfo)
        1    0.000    0.000    0.000    0.000 arrayop.py:458(Flatten)
        1    0.000    0.000    0.000    0.000 six.py:108(MovedModule)
        1    0.000    0.000    0.000    0.000 blocking_input.py:271(BlockingContourLabeler)
        1    0.000    0.000    0.000    0.000 abc.py:276(SourceLoader)
        1    0.000    0.000    0.000    0.000 arpack.py:389(_SymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 colorbar.py:289(_ColorbarLogLocator)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:41(BasinHoppingRunner)
        1    0.000    0.000    0.000    0.000 _pep440.py:135(_BaseVersion)
        1    0.000    0.000    0.000    0.000 main.py:882(YAMLContextManager)
        1    0.000    0.000    0.000    0.000 rrule.py:305(rrule)
        1    0.000    0.000    0.000    0.000 csv.py:165(Sniffer)
        1    0.000    0.000    0.000    0.000 blas.py:250(<dictcomp>)
        1    0.000    0.000    0.000    0.000 traversal.py:68(preorder_traversal)
        1    0.000    0.000    0.000    0.000 transforms.py:1428(HankelTypeTransform)
        1    0.000    0.000    0.000    0.000 utils.py:117(Comparable)
        1    0.000    0.000    0.000    0.000 __init__.py:290(_DeviceGuard)
        1    0.000    0.000    0.000    0.000 abc.py:161(ResourceLoader)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:91(AppliedFunction)
        1    0.000    0.000    0.000    0.000 __init__.py:1239(<dictcomp>)
        1    0.000    0.000    0.000    0.000 throughput_benchmark.py:61(ThroughputBenchmark)
        1    0.000    0.000    0.000    0.000 loader.py:23(_FailedTest)
        1    0.000    0.000    0.000    0.000 records.py:87(format_parser)
        1    0.000    0.000    0.000    0.000 _multivariate.py:1385(matrix_normal_frozen)
        1    0.000    0.000    0.000    0.000 line.py:2670(Ray3D)
        1    0.000    0.000    0.000    0.000 colors.py:1099(TwoSlopeNorm)
        1    0.000    0.000    0.000    0.000 line.py:1872(LinearEntity2D)
        1    0.000    0.000    0.000    0.000 mathtext.py:1262(FontConstantsBase)
        1    0.000    0.000    0.000    0.000 _tokenizer.py:18(ParserSyntaxError)
        1    0.000    0.000    0.000    0.000 abc.py:230(ExecutionLoader)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:876(_PatchedFn)
        1    0.000    0.000    0.000    0.000 single.py:1436(HomogeneousCoeffSubsDepDivIndep)
        1    0.000    0.000    0.000    0.000 connection.py:578(SocketListener)
        2    0.000    0.000    0.000    0.000 {method 'isdisjoint' of 'set' objects}
        1    0.000    0.000    0.000    0.000 equality.py:209(StrictLessThanPredicate)
        6    0.000    0.000    0.000    0.000 _common.py:13(tzname_in_python2)
        1    0.000    0.000    0.000    0.000 lines.py:1399(_AxLine)
        1    0.000    0.000    0.000    0.000 single.py:572(FirstLinear)
        1    0.000    0.000    0.000    0.000 utils.py:138(ObjectWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:41(_LazySeedTracker)
        1    0.000    0.000    0.000    0.000 graph_manipulation.py:43(size_bytes)
        1    0.000    0.000    0.000    0.000 _stats_py.py:11078(_SimpleStudentT)
        1    0.000    0.000    0.000    0.000 graph.py:247(_node_list)
        1    0.000    0.000    0.000    0.000 pooling.py:38(MaxPool1d)
        1    0.000    0.000    0.000    0.000 mock.py:281(_SentinelObject)
        1    0.000    0.000    0.000    0.000 single.py:1748(LinearCoefficients)
        1    0.000    0.000    0.000    0.000 threading.py:279(_is_owned)
        1    0.000    0.000    0.000    0.000 parameters.py:7(_global_parameters)
        1    0.000    0.000    0.000    0.000 scale.py:91(LinearScale)
        1    0.000    0.000    0.000    0.000 proxy.py:22(Scope)
        1    0.000    0.000    0.000    0.000 _comparison.py:414(NonePair)
        1    0.000    0.000    0.000    0.000 version.py:78(__lt__)
        1    0.000    0.000    0.000    0.000 boolalg.py:1487(Exclusive)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:186(LambdaLR)
        1    0.000    0.000    0.000    0.000 loss.py:17(_Loss)
        1    0.000    0.000    0.000    0.000 para4tb.py:132(ParaTB_train)
        1    0.000    0.000    0.000    0.000 ops.py:156(<listcomp>)
        1    0.000    0.000    0.000    0.000 ImageSequence.py:24(Iterator)
        1    0.000    0.000    0.000    0.000 _trustregion_dogleg.py:38(DoglegSubproblem)
        3    0.000    0.000    0.000    0.000 core.py:104(do_one)
        1    0.000    0.000    0.000    0.000 _rules.py:152(_FxTracerFailure)
        1    0.000    0.000    0.000    0.000 scanner.py:1979(CommentBase)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3563(Show)
        1    0.000    0.000    0.000    0.000 version.py:454(_TrimmedRelease)
        1    0.000    0.000    0.000    0.000 datapipe.py:326(_DataPipeSerializationWrapper)
        4    0.000    0.000    0.000    0.000 core.py:6544(__has_singleton)
        1    0.000    0.000    0.000    0.000 _survival.py:219(ECDFResult)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:900(ShapeGuardPrinter)
        1    0.000    0.000    0.000    0.000 loss.py:219(NLLLoss2d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:869(SupportsBytes)
        1    0.000    0.000    0.000    0.000 conv.py:1470(LazyConvTranspose2d)
        1    0.000    0.000    0.000    0.000 scale.py:334(FuncScaleLog)
        1    0.000    0.000    0.000    0.000 _common.py:6(weekday)
        1    0.000    0.000    0.000    0.000 rnn.py:46(PackedParameter)
        1    0.000    0.000    0.000    0.000 __init__.py:58(cuFFTPlanCacheManager)
        1    0.000    0.000    0.000    0.000 _decorator.py:148(runtime_validation_disabled)
        1    0.000    0.000    0.000    0.000 _package_pickler.py:21(PackagePickler)
        5    0.000    0.000    0.000    0.000 multiarray.py:85(empty_like)
        1    0.000    0.000    0.000    0.000 _differentialevolution.py:1851(_ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__getattr__)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:485(_IntegerInterval)
        1    0.000    0.000    0.000    0.000 widgets.py:133(Button)
        1    0.000    0.000    0.000    0.000 sets.py:2759(SetKind)
        1    0.000    0.000    0.000    0.000 core.py:5(Registry)
        1    0.000    0.000    0.000    0.000 reinplace.py:53(_FunctionalizationMetadataProp)
        1    0.000    0.000    0.000    0.000 gmpyfinitefield.py:9(GMPYFiniteField)
        1    0.000    0.000    0.000    0.000 pkgutil.py:194(ImpImporter)
        1    0.000    0.000    0.000    0.000 _multivariate.py:7252(normal_inverse_gamma_frozen)
        1    0.000    0.000    0.000    0.000 _constraints.py:309(PreparedConstraint)
        1    0.000    0.000    0.000    0.000 equality.py:257(LessThanPredicate)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:797(is_package)
        1    0.000    0.000    0.000    0.000 _interface.py:747(_ScaledLinearOperator)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:138(MutableSparseNDimArray)
        1    0.000    0.000    0.000    0.000 _parser.py:50(ParsedRequirement)
        1    0.000    0.000    0.000    0.000 _functions.py:85(Scatter)
        1    0.000    0.000    0.000    0.000 line.py:1109(Line)
        1    0.000    0.000    0.000    0.000 polynomials.py:687(chebyshevt_root)
        1    0.000    0.000    0.000    0.000 codeprinter.py:18(requires)
        1    0.000    0.000    0.000    0.000 _script.py:215(OrderedModuleDict)
        1    0.000    0.000    0.000    0.000 __init__.py:2213(NullHandler)
        1    0.000    0.000    0.000    0.000 _datasource.py:99(__init__)
        1    0.000    0.000    0.000    0.000 ops.py:294(IndexableIter)
        1    0.000    0.000    0.000    0.000 orderings.py:137(InverseOrder)
        1    0.000    0.000    0.000    0.000 _exceptions.py:38(_UFuncNoLoopError)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1243(LinearMixing)
        4    0.000    0.000    0.000    0.000 results.py:26(__init__)
        2    0.000    0.000    0.000    0.000 sysconfig.py:279(_get_preferred_schemes)
        1    0.000    0.000    0.000    0.000 _creation.py:17(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method posix.cpu_count}
        1    0.000    0.000    0.000    0.000 headerregistry.py:562(HeaderRegistry)
        1    0.000    0.000    0.000    0.000 transforms.py:331(MellinTransform)
        1    0.000    0.000    0.000    0.000 conv.py:1402(LazyConvTranspose1d)
        1    0.000    0.000    0.000    0.000 core.py:195(<listcomp>)
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:39(LagrangianHessian)
        1    0.000    0.000    0.000    0.000 widgets.py:1621(SpanSelector)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:147(JvpInterpreter)
        1    0.000    0.000    0.000    0.000 fnmatch.py:12(WildCard)
        1    0.000    0.000    0.000    0.000 tricontour.py:8(TriContourSet)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1251(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2500(TypeVarTuple)
        1    0.000    0.000    0.000    0.000 one_hot_categorical.py:113(OneHotCategoricalStraightThrough)
        1    0.000    0.000    0.000    0.000 _rules.py:254(_AtenlibSymbolicFunction)
        1    0.000    0.000    0.000    0.000 process.py:364(_ParentProcess)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:345(<genexpr>)
        1    0.000    0.000    0.000    0.000 _interpolate.py:167(_do_extrapolate)
        1    0.000    0.000    0.000    0.000 _minimize.py:1066(_Remove_From_Func)
        1    0.000    0.000    0.000    0.000 loss.py:380(KLDivLoss)
        1    0.000    0.000    0.000    0.000 __init__.py:1323(disable)
        1    0.000    0.000    0.000    0.000 core.py:957(NullCache)
        1    0.000    0.000    0.000    0.000 bessel.py:1347(AiryBase)
        1    0.000    0.000    0.000    0.000 polyoptions.py:611(Strict)
        1    0.000    0.000    0.000    0.000 __init__.py:711(BufferingFormatter)
        1    0.000    0.000    0.000    0.000 collections.py:1296(StarPolygonCollection)
        1    0.000    0.000    0.000    0.000 transforms.py:40(IntegralTransformError)
        1    0.000    0.000    0.000    0.000 _upfirdn.py:73(_UpFIRDn)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:517(AddrSpec)
        1    0.000    0.000    0.000    0.000 context.py:330(on_interrupt)
        1    0.000    0.000    0.000    0.000 comments.py:204(Format)
        1    0.000    0.000    0.000    0.000 _monitor.py:15(TMonitor)
        1    0.000    0.000    0.000    0.000 _internal.py:205(dummy_ctype)
        1    0.000    0.000    0.000    0.000 para4tb.py:133(__init__)
        1    0.000    0.000    0.000    0.000 readers.py:31(ZipReader)
        1    0.000    0.000    0.000    0.000 ticker.py:1985(MultipleLocator)
        1    0.000    0.000    0.000    0.000 conv.py:1333(LazyConv3d)
        1    0.000    0.000    0.000    0.000 unix_events.py:823(AbstractChildWatcher)
        1    0.000    0.000    0.000    0.000 _rules.py:231(_FxIrAddNode)
        1    0.000    0.000    0.000    0.000 numerictypes.py:425(_typedict)
        3    0.000    0.000    0.000    0.000 six.py:885(add_metaclass)
        1    0.000    0.000    0.000    0.000 _base.py:33(_axis_method_wrapper)
        1    0.000    0.000    0.000    0.000 getopt.py:43(GetoptError)
        1    0.000    0.000    0.000    0.000 fancysets.py:139(Naturals0)
        1    0.000    0.000    0.000    0.000 zipfile.py:742(_SharedFile)
        1    0.000    0.000    0.000    0.000 font_manager.py:338(FontEntry)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:463(_VectorHessWrapper)
        1    0.000    0.000    0.000    0.000 numpy.py:35(<dictcomp>)
        4    0.000    0.000    0.000    0.000 _pytree.py:8(register_pytree_flatten_spec)
        2    0.000    0.000    0.000    0.000 core.py:3433(shape)
        1    0.000    0.000    0.000    0.000 bessel.py:846(hankel2)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:171(GaussianInteger)
        1    0.000    0.000    0.000    0.000 constraints.py:146(_DependentProperty)
        1    0.000    0.000    0.000    0.000 emitter.py:57(Indents)
        1    0.000    0.000    0.000    0.000 configparser.py:168(Error)
        1    0.000    0.000    0.000    0.000 __init__.py:13(verbose)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1459(OneCycleLR)
        1    0.000    0.000    0.000    0.000 _hypotests.py:917(BarnardExactResult)
        1    0.000    0.000    0.000    0.000 discovery.py:179(PEP420PackageFinder)
        1    0.000    0.000    0.000    0.000 package_exporter.py:128(PackagingError)
        1    0.000    0.000    0.000    0.000 report.py:28(BasicReport)
        1    0.000    0.000    0.000    0.000 activation.py:733(LeakyReLU)
        1    0.000    0.000    0.000    0.000 pc_groups.py:7(PolycyclicGroup)
        1    0.000    0.000    0.000    0.000 report.py:36(SQPReport)
        1    0.000    0.000    0.000    0.000 scanner.py:2211(RoundTripScannerSC)
        1    0.000    0.000    0.000    0.000 rootoftools.py:38(_pure_key_dict)
        1    0.000    0.000    0.000    0.000 relational.py:891(_Less)
        1    0.000    0.000    0.000    0.000 modules.py:504(FreeModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:83(VmapInterpreter)
        1    0.000    0.000    0.000    0.000 linear.py:127(NonDynamicallyQuantizableLinear)
        1    0.000    0.000    0.000    0.000 events.py:76(CollectionStartEvent)
        1    0.000    0.000    0.000    0.000 ImageFile.py:101(_Tile)
        1    0.000    0.000    0.000    0.000 numpy.py:481(<dictcomp>)
        1    0.000    0.000    0.000    0.000 collections.py:1102(PolyCollection)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3705(ortho_group_gen)
        1    0.000    0.000    0.000    0.000 graph.py:42(_CustomBuiltin)
        4    0.000    0.000    0.000    0.000 ops.py:52(nan_if_exception)
        1    0.000    0.000    0.000    0.000 request.py:1256(AbstractHTTPHandler)
        1    0.000    0.000    0.000    0.000 case.py:1446(_SubTest)
        1    0.000    0.000    0.000    0.000 core.py:977(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:224(FortranFormatParser)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:413(_EnsurePackagesDiscovered)
        1    0.000    0.000    0.000    0.000 activation.py:361(SiLU)
        1    0.000    0.000    0.000    0.000 six.py:129(_LazyModule)
        2    0.000    0.000    0.000    0.000 constraints.py:290(__init__)
        1    0.000    0.000    0.000    0.000 tz.py:373(_tzfile)
        1    0.000    0.000    0.000    0.000 discovery.py:68(_Filter)
        1    0.000    0.000    0.000    0.000 mathtext.py:932(DejaVuSerifFonts)
        4    0.000    0.000    0.000    0.000 __init__.py:799(<dictcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:61(get_calls)
        1    0.000    0.000    0.000    0.000 pickle.py:263(_Unframer)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1175(DiagBroyden)
        1    0.000    0.000    0.000    0.000 _parser.py:1589(ParserError)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1304(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 csv.py:130(DictWriter)
        1    0.000    0.000    0.000    0.000 hyper.py:29(TupleArg)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:67(SourceLoader)
        1    0.000    0.000    0.000    0.000 minimize_trustregion_constr.py:26(HessianLinearOperator)
        1    0.000    0.000    0.000    0.000 string.py:54(Stringify)
        1    0.000    0.000    0.000    0.000 widgets.py:1303(MultiCursor)
        1    0.000    0.000    0.000    0.000 npyio.py:42(BagObj)
        1    0.000    0.000    0.000    0.000 _bary_rational.py:599(FloaterHormannInterpolator)
        1    0.000    0.000    0.000    0.000 series.py:1755(Parametric3DLineSeries)
        4    0.000    0.000    0.000    0.000 _ops.py:129(py_impl)
        1    0.000    0.000    0.000    0.000 _base.py:74(_AsCompletedWaiter)
        1    0.000    0.000    0.000    0.000 quadrature.py:459(QuadratureMethods)
        1    0.000    0.000    0.000    0.000 transforms.py:587(SigmoidTransform)
        1    0.000    0.000    0.000    0.000 profiler_util.py:534(FunctionEventAvg)
        1    0.000    0.000    0.000    0.000 _vertex.py:179(VertexCacheBase)
        1    0.000    0.000    0.000    0.000 qs.py:9(SievePolynomial)
        1    0.000    0.000    0.000    0.000 _polyint.py:245(KroghInterpolator)
        1    0.000    0.000    0.000    0.000 activation.py:524(CELU)
        1    0.000    0.000    0.000    0.000 constraints.py:68(Constraint)
        1    0.000    0.000    0.000    0.000 activation.py:298(Hardsigmoid)
        1    0.000    0.000    0.000    0.000 band_data_in.py:25(check)
        1    0.000    0.000    0.000    0.000 core.py:194(<listcomp>)
        2    0.000    0.000    0.000    0.000 index_tricks.py:144(__init__)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:263(Comment)
        1    0.000    0.000    0.000    0.000 pydoc.py:1127(TextRepr)
        1    0.000    0.000    0.000    0.000 polyoptions.py:527(Gaussian)
        1    0.000    0.000    0.000    0.000 __init__.py:86(_StrongRef)
        1    0.000    0.000    0.000    0.000 pathlib.py:422(_PathParents)
        1    0.000    0.000    0.000    0.000 polyoptions.py:50(BooleanOption)
        1    0.000    0.000    0.000    0.000 core.py:5097(_MultipleMatch)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:196(AdaptiveStepsize)
        1    0.000    0.000    0.000    0.000 dev.py:125(requires)
        1    0.000    0.000    0.000    0.000 bessel.py:800(hankel1)
        1    0.000    0.000    0.000    0.000 argparse.py:109(_AttributeHolder)
        1    0.000    0.000    0.000    0.000 jiterator.py:42(_JittedFunction)
        1    0.000    0.000    0.000    0.000 _linalg.py:33(EighResult)
        1    0.000    0.000    0.000    0.000 _musllinux.py:18(_MuslVersion)
        1    0.000    0.000    0.000    0.000 _state.py:12(EnabledProxy)
        1    0.000    0.000    0.000    0.000 design_patterns.py:115(NullFile)
        1    0.000    0.000    0.000    0.000 common.py:137(OdeSolution)
        1    0.000    0.000    0.000    0.000 __init__.py:25(clear_distutils)
        1    0.000    0.000    0.000    0.000 _base.py:111(_AllCompletedWaiter)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:556(DisplayName)
        1    0.000    0.000    0.000    0.000 bessel.py:901(SphericalBesselBase)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:4(InverseLaplaceTransform)
        1    0.000    0.000    0.000    0.000 activation.py:650(GELU)
        1    0.000    0.000    0.000    0.000 conv.py:154(_ConvTransposeNd)
        1    0.000    0.000    0.000    0.000 calendar.py:573(LocaleTextCalendar)
        1    0.000    0.000    0.000    0.000 selectors.py:60(_SelectorMapping)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_128}
        1    0.000    0.000    0.000    0.000 core.py:2403(Token)
        1    0.000    0.000    0.000    0.000 transports.py:46(ReadTransport)
        1    0.000    0.000    0.000    0.000 single.py:2012(SecondHypergeometric)
        1    0.000    0.000    0.000    0.000 __init__.py:9(verbose)
        1    0.000    0.000    0.000    0.000 tarfile.py:304(_LowLevelFile)
        1    0.000    0.000    0.000    0.000 core.py:4491(Each)
        1    0.000    0.000    0.000    0.000 conv.py:220(ConvTranspose1d)
        1    0.000    0.000    0.000    0.000 pythonfinitefield.py:9(PythonFiniteField)
        1    0.000    0.000    0.000    0.000 _hypotests.py:1188(BoschlooExactResult)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:48(ProxyableClassMeta)
        1    0.000    0.000    0.000    0.000 facts.py:286(__init__)
        1    0.000    0.000    0.000    0.000 loss.py:1279(MarginRankingLoss)
        1    0.000    0.000    0.000    0.000 activation.py:617(GLU)
        1    0.000    0.000    0.000    0.000 colorbar.py:1636(ColorbarPatch)
        1    0.000    0.000    0.000    0.000 conv.py:1538(LazyConvTranspose3d)
        1    0.000    0.000    0.000    0.000 activation.py:244(ReLU6)
        1    0.000    0.000    0.000    0.000 actions.py:19(OnlyOnce)
        1    0.000    0.000    0.000    0.000 _interface.py:781(_PowerLinearOperator)
        1    0.000    0.000    0.000    0.000 rcsetup.py:50(ValidateInStrings)
        1    0.000    0.000    0.000    0.000 transforms.py:964(FourierTypeTransform)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_256}
        1    0.000    0.000    0.000    0.000 _base.py:59(_Waiter)
        1    0.000    0.000    0.000    0.000 mock.py:341(_CallList)
        1    0.000    0.000    0.000    0.000 PaletteFile.py:22(PaletteFile)
        1    0.000    0.000    0.000    0.000 parse.py:795(_Quoter)
        1    0.000    0.000    0.000    0.000 combining.py:496(MultiplexerIterDataPipe)
        1    0.000    0.000    0.000    0.000 dates.py:1558(MonthLocator)
        1    0.000    0.000    0.000    0.000 more.py:2688(SequenceView)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:667(LaplaceTransformInversionMethods)
        1    0.000    0.000    0.000    0.000 diophantine.py:1029(GeneralPythagorean)
        1    0.000    0.000    0.000    0.000 _directory_reader.py:9(_HasStorage)
        6    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:3305(_moment_standardized_formula)
        1    0.000    0.000    0.000    0.000 forward_ad.py:190(_set_fwd_grad_enabled)
        1    0.000    0.000    0.000    0.000 tasks.py:689(_GatheringFuture)
        1    0.000    0.000    0.000    0.000 _beartype.py:38(_create_beartype_decorator)
        1    0.000    0.000    0.000    0.000 representer.py:383(Representer)
        1    0.000    0.000    0.000    0.000 conv.py:155(Conv3d)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:416(F)
        1    0.000    0.000    0.000    0.000 core.py:903(_MaskedUnaryOperation)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:10816(FitUniformFixedScaleDataError)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:20(VisitingDistribution)
        1    0.000    0.000    0.000    0.000 stubs.py:4(QuantStub)
        1    0.000    0.000    0.000    0.000 linear.py:5(Linear)
        1    0.000    0.000    0.000    0.000 pooling.py:1121(_AdaptiveAvgPoolNd)
        1    0.000    0.000    0.000    0.000 tensor.py:4666(WildTensor)
        1    0.000    0.000    0.000    0.000 scale.py:126(FuncTransform)
        1    0.000    0.000    0.000    0.000 _vertex.py:205(VertexCube)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:289(AddressList)
        1    0.000    0.000    0.000    0.000 activation.py:849(Softshrink)
        1    0.000    0.000    0.000    0.000 _codata.py:142(exact2002)
        1    0.000    0.000    0.000    0.000 _base.py:96(_FirstCompletedWaiter)
        1    0.000    0.000    0.000    0.000 parser.py:79(BytesParser)
        1    0.000    0.000    0.000    0.000 mathtext.py:1404(Box)
        1    0.000    0.000    0.000    0.000 _compression.py:63(seekable)
        1    0.000    0.000    0.000    0.000 _infra.py:40(PatchedPropertyBag)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2687(_max_dispatcher)
        1    0.000    0.000    0.000    0.000 category.py:113(StrCategoryLocator)
        1    0.000    0.000    0.000    0.000 request.py:1374(HTTPHandler)
        1    0.000    0.000    0.000    0.000 memory.py:673(_CUDAAllocator)
        1    0.000    0.000    0.000    0.000 anchor.py:10(Anchor)
        1    0.000    0.000    0.000    0.000 decoder.py:114(ImageHandler)
        1    0.000    0.000    0.000    0.000 autograd_function.py:29(CustomFunctionPyOperator)
        1    0.000    0.000    0.000    0.000 streamplot.py:365(StreamMask)
        1    0.000    0.000    0.000    0.000 _covariance.py:503(CovViaDiagonal)
        1    0.000    0.000    0.000    0.000 core.py:5823(Combine)
        1    0.000    0.000    0.000    0.000 permutations.py:3067(AppliedPermutation)
        1    0.000    0.000    0.000    0.000 colors.py:1367(PowerNorm)
        1    0.000    0.000    0.000    0.000 events.py:610(AbstractEventLoopPolicy)
        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 libmpf.py:692(mpf_sign)
        1    0.000    0.000    0.000    0.000 activation.py:691(Hardshrink)
        1    0.000    0.000    0.000    0.000 transforms.py:2199(BlendedAffine2D)
        1    0.000    0.000    0.000    0.000 unix_events.py:980(BaseChildWatcher)
        1    0.000    0.000    0.000    0.000 conv_fused.py:627(ConvBn3d)
        1    0.000    0.000    0.000    0.000 gridspec.py:545(GridSpecFromSubplotSpec)
        1    0.000    0.000    0.000    0.000 core.py:2627(CaselessLiteral)
        2    0.000    0.000    0.000    0.000 _state.py:39(__bool__)
        1    0.000    0.000    0.000    0.000 py3k.py:92(contextlib_nullcontext)
        1    0.000    0.000    0.000    0.000 collections.py:1664(CircleCollection)
        1    0.000    0.000    0.000    0.000 transforms.py:1165(SineTransform)
        1    0.000    0.000    0.000    0.000 _interface.py:832(_AdjointMatrixOperator)
        1    0.000    0.000    0.000    0.000 util.py:185(_GroupConsecutive)
        1    0.000    0.000    0.000    0.000 doccer.py:23(Decorator)
        1    0.000    0.000    0.000    0.000 compat.py:112(Nprint)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1274(_TypedDictSpecialForm)
        1    0.000    0.000    0.000    0.000 single.py:1560(HomogeneousCoeffSubsIndepDivDep)
        1    0.000    0.000    0.000    0.000 combining.py:62(ForkerIterDataPipe)
        1    0.000    0.000    0.000    0.000 core.py:2654(CaselessKeyword)
        1    0.000    0.000    0.000    0.000 extension.py:23(Extension)
        1    0.000    0.000    0.000    0.000 reductions.py:62(_after_fork)
        1    0.000    0.000    0.000    0.000 report.py:44(IPReport)
        6    0.000    0.000    0.000    0.000 feedparser.py:125(__iter__)
        1    0.000    0.000    0.000    0.000 _ops.py:524(_OpNamespace)
        1    0.000    0.000    0.000    0.000 scale.py:162(FuncScale)
        1    0.000    0.000    0.000    0.000 _animation_data.py:1(<module>)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:64(DynamicOutputShapeException)
        1    0.000    0.000    0.000    0.000 constraints.py:550(_Stack)
        1    0.000    0.000    0.000    0.000 request.py:605(BaseHandler)
        1    0.000    0.000    0.000    0.000 ordinals.py:261(OrdinalOmega)
        1    0.000    0.000    0.000    0.000 _pytree.py:41(NodeDef)
        1    0.000    0.000    0.000    0.000 c10d_error_logger.py:30(_get_logging_handler)
        1    0.000    0.000    0.000    0.000 polar.py:515(RadialTick)
        1    0.000    0.000    0.000    0.000 dataloader.py:83(_InfiniteConstantSampler)
        5    0.000    0.000    0.000    0.000 due.py:43(_donothing_func)
        1    0.000    0.000    0.000    0.000 main.py:1477(YAMLObjectMetaclass)
        1    0.000    0.000    0.000    0.000 _shgo.py:1538(LMapCache)
        1    0.000    0.000    0.000    0.000 comments.py:1136(TaggedScalar)
        1    0.000    0.000    0.000    0.000 scale.py:372(SymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 core.py:3839(Tag)
        1    0.000    0.000    0.000    0.000 polar.py:202(_AxisWrapper)
        1    0.000    0.000    0.000    0.000 index_tricks.py:569(ndenumerate)
        1    0.000    0.000    0.000    0.000 argparse.py:878(BooleanOptionalAction)
        1    0.000    0.000    0.000    0.000 orderings.py:35(LexOrder)
        2    0.000    0.000    0.000    0.000 __init__.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 pooling.py:97(MaxPool2d)
        3    0.000    0.000    0.000    0.000 mock.py:283(__init__)
        1    0.000    0.000    0.000    0.000 modules.py:1889(EndomorphismRing)
        1    0.000    0.000    0.000    0.000 _recursive.py:358(__init__)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1328(_DerivedBivariateSpline)
        1    0.000    0.000    0.000    0.000 zipfile.py:2271(FastLookup)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1289(ExcitingMixing)
        1    0.000    0.000    0.000    0.000 patches.py:2001(Square)
        1    0.000    0.000    0.000    0.000 legend_handler.py:338(HandlerRegularPolyCollection)
        1    0.000    0.000    0.000    0.000 __init__.py:29(context)
        1    0.000    0.000    0.000    0.000 blocking_input.py:330(BlockingKeyMouseInput)
        1    0.000    0.000    0.000    0.000 response.py:37(addclosehook)
        1    0.000    0.000    0.000    0.000 __init__.py:28(_QEngineProp)
        1    0.000    0.000    0.000    0.000 base.py:233(DenseOutput)
        1    0.000    0.000    0.000    0.000 offsetbox.py:577(PaddedBox)
        2    0.000    0.000    0.000    0.000 {built-in method maketrans}
        1    0.000    0.000    0.000    0.000 Image.py:3727(register_save)
        1    0.000    0.000    0.000    0.000 loss.py:474(MSELoss)
        1    0.000    0.000    0.000    0.000 _mio4.py:89(VarHeader4)
        2    0.000    0.000    0.000    0.000 calendar.py:76(__init__)
        1    0.000    0.000    0.000    0.000 arpack.py:288(ArpackNoConvergence)
        1    0.000    0.000    0.000    0.000 numpy.py:483(CuPyPrinter)
        1    0.000    0.000    0.000    0.000 polyoptions.py:701(Series)
        1    0.000    0.000    0.000    0.000 kind.py:84(_UndefinedKind)
        1    0.000    0.000    0.000    0.000 conv_fused.py:495(ConvBn2d)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:268(_reduce_op)
        3    0.000    0.000    0.000    0.000 {method 'to_bytes' of 'int' objects}
        1    0.000    0.000    0.000    0.000 colors.py:1418(BoundaryNorm)
        1    0.000    0.000    0.000    0.000 core.py:2483(Empty)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:493(Domain)
        1    0.000    0.000    0.000    0.000 analyzer.py:1751(PointGroupOperations)
        1    0.000    0.000    0.000    0.000 __init__.py:732(Context)
        1    0.000    0.000    0.000    0.000 _typing.py:118(DTypesSigned)
        1    0.000    0.000    0.000    0.000 docinfo.py:95(Tag)
        1    0.000    0.000    0.000    0.000 six.py:178(__init__)
        1    0.000    0.000    0.000    0.000 widgets.py:517(CheckButtons)
        1    0.000    0.000    0.000    0.000 widgets.py:1209(Cursor)
        1    0.000    0.000    0.000    0.000 dataframes.py:417(DataFrameTracer)
        1    0.000    0.000    0.000    0.000 _parser.py:219(_resultbase)
        1    0.000    0.000    0.000    0.000 backend_tools.py:366(RubberbandBase)
        1    0.000    0.000    0.000    0.000 transforms.py:865(SoftmaxTransform)
        1    0.000    0.000    0.000    0.000 inference.py:273(PropKB)
        2    0.000    0.000    0.000    0.000 annotations.py:30(__init__)
        1    0.000    0.000    0.000    0.000 mock.py:2388(_ANY)
        1    0.000    0.000    0.000    0.000 Lattice.py:7(lattice)
        1    0.000    0.000    0.000    0.000 Image.py:3740(register_save_all)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:634(DomainLiteral)
        1    0.000    0.000    0.000    0.000 animation.py:1384(TimedAnimation)
        1    0.000    0.000    0.000    0.000 index_tricks.py:618(ndindex)
        1    0.000    0.000    0.000    0.000 pathlib.py:49(_Flavour)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:46(PytestTester)
        1    0.000    0.000    0.000    0.000 __init__.py:790(Filterer)
        1    0.000    0.000    0.000    0.000 line.py:2504(Line3D)
        1    0.000    0.000    0.000    0.000 mathtext.py:888(DejaVuFonts)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:443(_RealInterval)
        1    0.000    0.000    0.000    0.000 polyutils.py:187(<listcomp>)
        3    0.000    0.000    0.000    0.000 arrayprint.py:898(_none_or_positive_arg)
        1    0.000    0.000    0.000    0.000 std.py:214(EMA)
        1    0.000    0.000    0.000    0.000 _interface.py:660(_TransposedLinearOperator)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:721(MimeParameters)
        1    0.000    0.000    0.000    0.000 Image.py:3712(register_mime)
        1    0.000    0.000    0.000    0.000 core.py:2679(CloseMatch)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:364(Group)
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'set' objects}
        1    0.000    0.000    0.000    0.000 _factories.py:8(_TzSingleton)
        1    0.000    0.000    0.000    0.000 protocols.py:66(Protocol)
        1    0.000    0.000    0.000    0.000 overrides.py:1872(enable_reentrant_dispatch)
        1    0.000    0.000    0.000    0.000 polyutils.py:444(PicklableWithSlots)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:230(__init__)
        1    0.000    0.000    0.000    0.000 series.py:1800(SurfaceBaseSeries)
        1    0.000    0.000    0.000    0.000 _classes.py:6(_ClassNamespace)
        1    0.000    0.000    0.000    0.000 __init__.py:26(ContextProp)
        1    0.000    0.000    0.000    0.000 {method 'close' of 'generator' objects}
        1    0.000    0.000    0.000    0.000 core.py:5206(ZeroOrMore)
        1    0.000    0.000    0.000    0.000 ssl.py:170(_TLSContentType)
        1    0.000    0.000    0.000    0.000 splitter_base.py:186(Subgraph)
        4    0.000    0.000    0.000    0.000 _multiufuncs.py:69(_override_ufunc_default_kwargs)
        1    0.000    0.000    0.000    0.000 base.py:274(ConstantDenseOutput)
        1    0.000    0.000    0.000    0.000 core.py:3722(LineEnd)
        1    0.000    0.000    0.000    0.000 _util.py:1064(__getattr__)
        1    0.000    0.000    0.000    0.000 utils.py:102(FormatReplace)
        1    0.000    0.000    0.000    0.000 events.py:128(DocumentStartEvent)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1374(MouseEvent)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:33(mpnumeric)
        1    0.000    0.000    0.000    0.000 context.py:276(ForkProcess)
        1    0.000    0.000    0.000    0.000 activation.py:438(Hardswish)
        2    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getArchFlags}
        1    0.000    0.000    0.000    0.000 widgets.py:2298(EllipseSelector)
        3    0.000    0.000    0.000    0.000 core.py:867(__init__)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:1330(P2POp)
        2    0.000    0.000    0.000    0.000 _onenormest.py:121(_blocked_elementwise)
        1    0.000    0.000    0.000    0.000 _zeros_py.py:35(RootResults)
        1    0.000    0.000    0.000    0.000 dataset.py:36(Dataset)
        1    0.000    0.000    0.000    0.000 legend.py:50(DraggableLegend)
        1    0.000    0.000    0.000    0.000 facts.py:301(rules_alpha)
        1    0.000    0.000    0.000    0.000 geo.py:229(_GeoTransform)
        1    0.000    0.000    0.000    0.000 single.py:1685(HomogeneousCoeffBest)
        1    0.000    0.000    0.000    0.000 parameters.py:70(evaluate)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:308(Address)
        1    0.000    0.000    0.000    0.000 pydoc.py:1979(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:115(<dictcomp>)
        1    0.000    0.000    0.000    0.000 loss.py:850(SmoothL1Loss)
        1    0.000    0.000    0.000    0.000 _nonlin.py:318(TerminationCondition)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1088(_DOF_estimator_geom)
        1    0.000    0.000    0.000    0.000 util.py:127(LRUMemo)
        1    0.000    0.000    0.000    0.000 core.py:3782(WordStart)
        1    0.000    0.000    0.000    0.000 argparse.py:1638(_ArgumentGroup)
        1    0.000    0.000    0.000    0.000 core.py:6844(_frommethod)
        1    0.000    0.000    0.000    0.000 _cubic.py:72(CubicHermiteSpline)
        1    0.000    0.000    0.000    0.000 transforms.py:986(FourierTransform)
        1    0.000    0.000    0.000    0.000 sdm.py:1447(unop_dict)
        1    0.000    0.000    0.000    0.000 core.py:2378(__init__)
        4    0.000    0.000    0.000    0.000 _inspect.py:142(<lambda>)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:658(InterpolatedUnivariateSpline)
        1    0.000    0.000    0.000    0.000 client.py:1481(IncompleteRead)
        1    0.000    0.000    0.000    0.000 tarfile.py:570(_StreamProxy)
        2    0.000    0.000    0.000    0.000 {function DecompressReader.close at 0x155355af93a0}
        1    0.000    0.000    0.000    0.000 __init__.py:576(_StreamProxy)
        1    0.000    0.000    0.000    0.000 frontend.py:101(FrontendError)
        1    0.000    0.000    0.000    0.000 _nonlin.py:1352(KrylovJacobian)
        1    0.000    0.000    0.000    0.000 exceptions.py:29(IncompleteReadError)
        1    0.000    0.000    0.000    0.000 numpy.py:504(<dictcomp>)
        3    0.000    0.000    0.000    0.000 orderings.py:156(__init__)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:657(Parameter)
        1    0.000    0.000    0.000    0.000 events.py:659(_Local)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:29(SemiInfiniteFunc)
        1    0.000    0.000    0.000    0.000 patches.py:2923(_Curve)
        1    0.000    0.000    0.000    0.000 csv.py:54(excel)
        4    0.000    0.000    0.000    0.000 function_base.py:1800(_trim_zeros)
        1    0.000    0.000    0.000    0.000 series.py:28(IntervalMathPrinter)
        4    0.000    0.000    0.000    0.000 _pep440.py:426(_parse_local_version)
        1    0.000    0.000    0.000    0.000 loss.py:786(MultiLabelMarginLoss)
        1    0.000    0.000    0.000    0.000 Orbit_spd_manager.py:11(orbit_spd_manager)
        1    0.000    0.000    0.000    0.000 zipfile.py:618(LZMACompressor)
        1    0.000    0.000    0.000    0.000 entity.py:540(GeometrySet)
        1    0.000    0.000    0.000    0.000 expr_with_intlimits.py:5(ReorderError)
        1    0.000    0.000    0.000    0.000 extrapolation.py:728(cohen_alt_class)
        3    0.000    0.000    0.000    0.000 {built-in method sys.audit}
        1    0.000    0.000    0.000    0.000 constraints.py:311(_GreaterThan)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1153(_Frame)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:1301(PrecisionManager)
        1    0.000    0.000    0.000    0.000 gzip.py:99(prepend)
        1    0.000    0.000    0.000    0.000 locks.py:421(BoundedSemaphore)
        4    0.000    0.000    0.000    0.000 shape_base.py:19(_atleast_1d_dispatcher)
        1    0.000    0.000    0.000    0.000 {built-in method _imp.get_frozen_object}
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:217(EncodedWord)
        1    0.000    0.000    0.000    0.000 dataloader.py:661(_SingleProcessDataLoaderIter)
        1    0.000    0.000    0.000    0.000 ticker.py:2041(_Edge_integer)
        1    0.000    0.000    0.000    0.000 readers.py:15(FileReader)
        1    0.000    0.000    0.000    0.000 single.py:839(Factorable)
        1    0.000    0.000    0.000    0.000 stubs.py:21(DeQuantStub)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
        1    0.000    0.000    0.000    0.000 scale.py:246(InvertedLogTransform)
        1    0.000    0.000    0.000    0.000 decorator.py:101(no_attrs_in_subclass)
        1    0.000    0.000    0.000    0.000 _hessian_update_strategy.py:425(SR1)
        1    0.000    0.000    0.000    0.000 mathtext.py:321(MathtextBackendPath)
        1    0.000    0.000    0.000    0.000 parameter.py:165(UninitializedParameter)
        1    0.000    0.000    0.000    0.000 _spdx.py:10(SPDXException)
        1    0.000    0.000    0.000    0.000 __init__.py:250(ExecutableNotFoundError)
        1    0.000    0.000    0.000    0.000 locks.py:331(Semaphore)
        2    0.000    0.000    0.000    0.000 {method 'removesuffix' of 'str' objects}
        1    0.000    0.000    0.000    0.000 graph.py:494(_AllowMutationOnSavedContext)
        1    0.000    0.000    0.000    0.000 _hypotests.py:356(CramerVonMisesResult)
        1    0.000    0.000    0.000    0.000 abc.py:75(MetaPathFinder)
        1    0.000    0.000    0.000    0.000 Manager.py:1(manager)
        1    0.000    0.000    0.000    0.000 _typing.py:72(HasShape)
        1    0.000    0.000    0.000    0.000 polyutils.py:516(IntegerPowerable)
        1    0.000    0.000    0.000    0.000 core.py:5054(NotAny)
        1    0.000    0.000    0.000    0.000 _manylinux.py:80(_GLibCVersion)
        1    0.000    0.000    0.000    0.000 core.py:3639(GoToColumn)
        1    0.000    0.000    0.000    0.000 _vertex.py:222(VertexCacheIndex)
        1    0.000    0.000    0.000    0.000 polyerrors.py:13(ExactQuotientFailed)
        1    0.000    0.000    0.000    0.000 _mgc.py:17(_ParallelP)
        1    0.000    0.000    0.000    0.000 decorators.py:207(_SympifyWrapper)
        1    0.000    0.000    0.000    0.000 _numdiff.py:863(_Fun_Wrapper)
        1    0.000    0.000    0.000    0.000 _interface.py:692(_SumLinearOperator)
        1    0.000    0.000    0.000    0.000 variable.py:8(VariableMeta)
        1    0.000    0.000    0.000    0.000 sharding.py:21(_ShardingIterDataPipe)
        1    0.000    0.000    0.000    0.000 streamreader.py:8(StreamReaderIterDataPipe)
        1    0.000    0.000    0.000    0.000 constraint_registry.py:79(ConstraintRegistry)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:424(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 {built-in method _thread.get_native_id}
        4    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        1    0.000    0.000    0.000    0.000 _constraints.py:227(Bounds)
        1    0.000    0.000    0.000    0.000 arpack.py:606(_UnsymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_512}
        1    0.000    0.000    0.000    0.000 _aliases.py:189(UniqueCountsResult)
        1    0.000    0.000    0.000    0.000 mock.py:2100(NonCallableMagicMock)
        1    0.000    0.000    0.000    0.000 case.py:282(_AssertWarnsContext)
        1    0.000    0.000    0.000    0.000 __init__.py:10(NBitBase)
        1    0.000    0.000    0.000    0.000 core.py:3673(LineStart)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_shake_256}
        1    0.000    0.000    0.000    0.000 offsetbox.py:417(VPacker)
        1    0.000    0.000    0.000    0.000 _util.py:571(_ScalarFunctionWrapper)
        3    0.000    0.000    0.000    0.000 core.py:16(exhaust)
        1    0.000    0.000    0.000    0.000 activation.py:402(Mish)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_tolower}
        1    0.000    0.000    0.000    0.000 __init__.py:413(SeparatedValues)
        1    0.000    0.000    0.000    0.000 transforms.py:1047(InverseFourierTransform)
        1    0.000    0.000    0.000    0.000 _base.py:6(Rule)
        4    0.000    0.000    0.000    0.000 stride_tricks.py:363(_broadcast_to_dispatcher)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:9(ExportTypes)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:760(LinearVectorFunction)
        1    0.000    0.000    0.000    0.000 rrule.py:66(weekday)
        1    0.000    0.000    0.000    0.000 simpledomain.py:7(SimpleDomain)
        1    0.000    0.000    0.000    0.000 engine.py:379(__init__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1783(DraggableOffsetBox)
        1    0.000    0.000    0.000    0.000 core.py:451(DebugActions)
        1    0.000    0.000    0.000    0.000 geo.py:17(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 single.py:912(RiccatiSpecial)
        1    0.000    0.000    0.000    0.000 __init__.py:156(py_object)
        1    0.000    0.000    0.000    0.000 mathtext.py:949(DejaVuSansFonts)
        1    0.000    0.000    0.000    0.000 lines.py:1440(VertexSelector)
        1    0.000    0.000    0.000    0.000 transforms.py:611(SoftplusTransform)
        1    0.000    0.000    0.000    0.000 storage.py:972(_LegacyStorageMeta)
        1    0.000    0.000    0.000    0.000 legend_handler.py:132(HandlerNpoints)
        1    0.000    0.000    0.000    0.000 context.py:295(ForkServerProcess)
        1    0.000    0.000    0.000    0.000 threading.py:410(Semaphore)
        1    0.000    0.000    0.000    0.000 exceptions.py:98(AxisError)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:234(MatlabObject)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:182(WhiteSpaceTokenList)
        1    0.000    0.000    0.000    0.000 parser.py:71(HeaderParser)
        1    0.000    0.000    0.000    0.000 diophantine.py:224(Univariate)
        1    0.000    0.000    0.000    0.000 polyoptions.py:648(Formal)
        5    0.000    0.000    0.000    0.000 platform.py:775(_unknown_as_blank)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:16(_ScalarGradWrapper)
        1    0.000    0.000    0.000    0.000 bdf.py:456(BdfDenseOutput)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:69(DataDependentOutputException)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:1090(BroadcastingListCls)
        1    0.000    0.000    0.000    0.000 json.py:713(MontyDecoder)
        1    0.000    0.000    0.000    0.000 serialization.py:250(_open_file)
        1    0.000    0.000    0.000    0.000 _ndgriddata.py:20(NearestNDInterpolator)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:1242(_T)
        1    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha3_384}
        1    0.000    0.000    0.000    0.000 _nonlin.py:1019(Anderson)
        1    0.000    0.000    0.000    0.000 csv.py:69(unix_dialect)
        1    0.000    0.000    0.000    0.000 _miobase.py:337(MatVarReader)
        1    0.000    0.000    0.000    0.000 containers.py:379(TupleKind)
        1    0.000    0.000    0.000    0.000 conv.py:281(ConvTranspose2d)
        1    0.000    0.000    0.000    0.000 _testutils.py:56(PytestTester)
        1    0.000    0.000    0.000    0.000 protocols.py:109(BufferedProtocol)
        1    0.000    0.000    0.000    0.000 polyoptions.py:602(Symmetric)
        1    0.000    0.000    0.000    0.000 ticker.py:333(FixedFormatter)
        1    0.000    0.000    0.000    0.000 conv.py:342(ConvTranspose3d)
        1    0.000    0.000    0.000    0.000 threading.py:1001(_set_ident)
        1    0.000    0.000    0.000    0.000 hb.py:376(<dictcomp>)
        1    0.000    0.000    0.000    0.000 ndim_array.py:591(ImmutableNDimArray)
        1    0.000    0.000    0.000    0.000 facts.py:571(FactKB)
        1    0.000    0.000    0.000    0.000 fused.py:13(ConvReLU1d)
        1    0.000    0.000    0.000    0.000 client.py:176(HTTPMessage)
        1    0.000    0.000    0.000    0.000 queue.py:223(PriorityQueue)
        1    0.000    0.000    0.000    0.000 common.py:11(HolderModule)
        1    0.000    0.000    0.000    0.000 request.py:791(ProxyHandler)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:960(NoDefaultType)
        1    0.000    0.000    0.000    0.000 single.py:2098(NthLinearConstantCoeffHomogeneous)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:4330(_shift_scale_distribution_function_2arg)
        1    0.000    0.000    0.000    0.000 geo.py:419(LambertTransform)
        1    0.000    0.000    0.000    0.000 argparse.py:783(Action)
        1    0.000    0.000    0.000    0.000 numbers.py:2751(RationalConstant)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CudaError)
        1    0.000    0.000    0.000    0.000 decoder.py:20(JSONDecodeError)
        1    0.000    0.000    0.000    0.000 _ltisys.py:814(TransferFunctionDiscrete)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:482(InvalidMailbox)
        1    0.000    0.000    0.000    0.000 _basic.py:2819(_range_prod)
        1    0.000    0.000    0.000    0.000 boolalg.py:368(__hash__)
        1    0.000    0.000    0.000    0.000 proxy.py:304(GraphAppendingTracer)
        1    0.000    0.000    0.000    0.000 animation.py:1521(FuncAnimation)
        1    0.000    0.000    0.000    0.000 graph_module.py:28(__init__)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:608(SequentialLR)
        2    0.000    0.000    0.000    0.000 rl.py:10(rm_id)
        1    0.000    0.000    0.000    0.000 _policybase.py:41(__init__)
        1    0.000    0.000    0.000    0.000 pooling.py:935(LPPool2d)
        1    0.000    0.000    0.000    0.000 dates.py:846(AutoDateFormatter)
        1    0.000    0.000    0.000    0.000 singleton.py:158(Singleton)
        1    0.000    0.000    0.000    0.000 pooling.py:893(LPPool1d)
        1    0.000    0.000    0.000    0.000 six.py:91(_LazyDescr)
        1    0.000    0.000    0.000    0.000 factorials.py:17(CombinatorialFunction)
        1    0.000    0.000    0.000    0.000 _interface.py:719(_ProductLinearOperator)
        1    0.000    0.000    0.000    0.000 __init__.py:2332(_classproperty)
        1    0.000    0.000    0.000    0.000 _interface.py:846(IdentityOperator)
        1    0.000    0.000    0.000    0.000 multidimensional.py:56(vectorize)
        1    0.000    0.000    0.000    0.000 numbers.py:12(Number)
        5    0.000    0.000    0.000    0.000 polyhedron.py:473(faces)
        1    0.000    0.000    0.000    0.000 grad_mode.py:226(set_multithreading_enabled)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:376(_RewindState)
        1    0.000    0.000    0.000    0.000 argparse.py:1680(_MutuallyExclusiveGroup)
        1    0.000    0.000    0.000    0.000 constraints.py:245(_IntegerInterval)
        1    0.000    0.000    0.000    0.000 {built-in method numpy._set_promotion_state}
        1    0.000    0.000    0.000    0.000 widgets.py:948(RadioButtons)
        1    0.000    0.000    0.000    0.000 dbapi2.py:49(<listcomp>)
        1    0.000    0.000    0.000    0.000 structures.py:7(DataChunkDF)
        1    0.000    0.000    0.000    0.000 ticker.py:1845(FixedLocator)
        1    0.000    0.000    0.000    0.000 kind.py:36(KindMeta)
        1    0.000    0.000    0.000    0.000 forward_ad.py:145(dual_level)
        1    0.000    0.000    0.000    0.000 instancenorm.py:153(LazyInstanceNorm1d)
        1    0.000    0.000    0.000    0.000 backend_tools.py:429(_ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 locks.py:13(_ContextManagerMixin)
        1    0.000    0.000    0.000    0.000 logic.py:399(Not)
        1    0.000    0.000    0.000    0.000 _array_like.py:39(_SupportsArray)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:212(StrategyChain)
        1    0.000    0.000    0.000    0.000 nodes.py:79(ScalarNode)
        1    0.000    0.000    0.000    0.000 ticker.py:367(FuncFormatter)
        1    0.000    0.000    0.000    0.000 polyoptions.py:728(Method)
        1    0.000    0.000    0.000    0.000 parse.py:127(_ResultMixinStr)
        1    0.000    0.000    0.000    0.000 _ltisys.py:737(TransferFunctionContinuous)
        1    0.000    0.000    0.000    0.000 frontend.py:118(UnsupportedNodeError)
        1    0.000    0.000    0.000    0.000 error.py:52(StringMark)
        2    0.000    0.000    0.000    0.000 __init__.py:440(__init__)
        1    0.000    0.000    0.000    0.000 para4band.py:72(Eigen_Trans)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:384(LocalSearchWrapper)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1979(LSQSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 fake_tensor.py:59(UnsupportedFakeTensorException)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:336(_median_formula)
        1    0.000    0.000    0.000    0.000 more.py:3250(time_limited)
        1    0.000    0.000    0.000    0.000 py39.py:28(UnequalIterablesError)
        1    0.000    0.000    0.000    0.000 message.py:1195(EmailMessage)
        1    0.000    0.000    0.000    0.000 module.py:27(_IncompatibleKeys)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:410(_reduce_op_symbolic)
        1    0.000    0.000    0.000    0.000 serialization.py:239(_opener)
        1    0.000    0.000    0.000    0.000 traceback.py:613(_ExceptionPrintContext)
        1    0.000    0.000    0.000    0.000 art3d.py:441(Path3DCollection)
        1    0.000    0.000    0.000    0.000 configparser.py:360(Interpolation)
        1    0.000    0.000    0.000    0.000 kind.py:106(_NumberKind)
        1    0.000    0.000    0.000    0.000 art3d.py:324(PathPatch3D)
        1    0.000    0.000    0.000    0.000 core.py:5880(Group)
        1    0.000    0.000    0.000    0.000 transforms.py:1224(InverseSineTransform)
        1    0.000    0.000    0.000    0.000 spawn.py:25(ProcessRaisedException)
        1    0.000    0.000    0.000    0.000 profiler.py:745(EnforceUnique)
        1    0.000    0.000    0.000    0.000 ElementPath.py:350(_SelectorContext)
        1    0.000    0.000    0.000    0.000 dotproduct.py:6(DotProduct)
        1    0.000    0.000    0.000    0.000 copyreg.py:22(constructor)
        1    0.000    0.000    0.000    0.000 _vertex.py:165(VertexVectorField)
        1    0.000    0.000    0.000    0.000 backend_tools.py:319(ToolCursorPosition)
        1    0.000    0.000    0.000    0.000 graph.py:236(_InsertPoint)
        1    0.000    0.000    0.000    0.000 core.py:797(_DomainCheckInterval)
        1    0.000    0.000    0.000    0.000 mathtext.py:291(MathtextBackendSvg)
        1    0.000    0.000    0.000    0.000 contour.py:35(ClabelText)
        1    0.000    0.000    0.000    0.000 util.py:368(ForkAwareThreadLock)
        1    0.000    0.000    0.000    0.000 _linalg.py:37(QRResult)
        1    0.000    0.000    0.000    0.000 errors.py:45(UnsupportedOperatorError)
        1    0.000    0.000    0.000    0.000 collections.py:1769(PatchCollection)
        1    0.000    0.000    0.000    0.000 series.py:1742(Line3DBaseSeries)
        1    0.000    0.000    0.000    0.000 serialization.py:286(_open_zipfile_writer_file)
        1    0.000    0.000    0.000    0.000 ticker.py:2964(OldAutoLocator)
        1    0.000    0.000    0.000    0.000 profiler.py:552(emit_itt)
        1    0.000    0.000    0.000    0.000 grad_mode.py:61(enable_grad)
        1    0.000    0.000    0.000    0.000 index_tricks.py:211(MGridClass)
        1    0.000    0.000    0.000    0.000 _endian.py:23(_swapped_meta)
        1    0.000    0.000    0.000    0.000 Image.py:3228(SupportsArrayInterface)
        1    0.000    0.000    0.000    0.000 mathtext.py:349(MathtextBackendCairo)
        1    0.000    0.000    0.000    0.000 cm.py:78(__init__)
        1    0.000    0.000    0.000    0.000 dropout.py:25(Dropout)
        1    0.000    0.000    0.000    0.000 pathlib.py:792(is_absolute)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:4(DegenerateDataWarning)
        1    0.000    0.000    0.000    0.000 arpack.py:932(LuInv)
        1    0.000    0.000    0.000    0.000 backend_agg.py:612(_BackendAgg)
        1    0.000    0.000    0.000    0.000 mathtext.py:1298(ComputerModernFontConstants)
        1    0.000    0.000    0.000    0.000 batchnorm.py:413(LazyBatchNorm2d)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:112(Bytes)
        1    0.000    0.000    0.000    0.000 _typing.py:126(DTypesUnsigned)
        1    0.000    0.000    0.000    0.000 widgets.py:91(AxesWidget)
        1    0.000    0.000    0.000    0.000 argparse.py:1116(_VersionAction)
        1    0.000    0.000    0.000    0.000 fused.py:149(ConvAdd2d)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:15(DummyArray)
        1    0.000    0.000    0.000    0.000 transforms.py:1284(CosineTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:46(__init__)
        1    0.000    0.000    0.000    0.000 index_tricks.py:109(nd_grid)
        1    0.000    0.000    0.000    0.000 _covariance.py:618(CovViaPSD)
        1    0.000    0.000    0.000    0.000 readers.py:107(NamespaceReader)
        1    0.000    0.000    0.000    0.000 parameter.py:6(_ParameterMeta)
        1    0.000    0.000    0.000    0.000 _morestats.py:4287(DirectionalStats)
        1    0.000    0.000    0.000    0.000 modules.py:1847(ModuleEndomorphism)
        1    0.000    0.000    0.000    0.000 backend_tools.py:487(AxisScaleBase)
        1    0.000    0.000    0.000    0.000 core.py:241(_ParseActionIndexError)
        1    0.000    0.000    0.000    0.000 argparse.py:669(RawDescriptionHelpFormatter)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1213(_RangeFunc)
        1    0.000    0.000    0.000    0.000 single.py:732(Bernoulli)
        1    0.000    0.000    0.000    0.000 _constraints.py:21(NonlinearConstraint)
        1    0.000    0.000    0.000    0.000 mathtext.py:1810(Rule)
        1    0.000    0.000    0.000    0.000 modules.py:1286(SubModuleQuotientRing)
        1    0.000    0.000    0.000    0.000 pythonmpq.py:122(__bool__)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:598(LocalPart)
        1    0.000    0.000    0.000    0.000 resource_sharer.py:45(DupFd)
        1    0.000    0.000    0.000    0.000 constraints.py:345(_LessThan)
        1    0.000    0.000    0.000    0.000 _sources.py:86(SourceContext)
        1    0.000    0.000    0.000    0.000 threading.py:498(BoundedSemaphore)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:2831(_min_dispatcher)
        1    0.000    0.000    0.000    0.000 _trustregion_ncg.py:42(CGSteihaugSubproblem)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:301(Metropolis)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:107(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:3810(WordEnd)
        1    0.000    0.000    0.000    0.000 mock.py:295(__init__)
        1    0.000    0.000    0.000    0.000 orderings.py:242(_ItemGetter)
        1    0.000    0.000    0.000    0.000 context.py:233(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:26(IllegalMonthError)
        1    0.000    0.000    0.000    0.000 recipes.py:336(UnequalIterablesError)
        1    0.000    0.000    0.000    0.000 mock.py:394(Base)
        1    0.000    0.000    0.000    0.000 mock.py:1053(_AnyComparer)
        1    0.000    0.000    0.000    0.000 memory.py:683(CUDAPluggableAllocator)
        1    0.000    0.000    0.000    0.000 pydoc.py:389(ErrorDuringImport)
        1    0.000    0.000    0.000    0.000 worker.py:51(ManagerWatchdog)
        1    0.000    0.000    0.000    0.000 calendar.py:594(LocaleHTMLCalendar)
        1    0.000    0.000    0.000    0.000 __init__.py:2349(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:21(cuFFTPlanCacheAttrContextProp)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:1677(poisson_binomial_frozen)
        2    0.000    0.000    0.000    0.000 axis.py:604(__init__)
        1    0.000    0.000    0.000    0.000 feedparser.py:532(BytesFeedParser)
        1    0.000    0.000    0.000    0.000 {built-in method _functools.cmp_to_key}
        1    0.000    0.000    0.000    0.000 optimizer.py:20(_RequiredParameter)
        1    0.000    0.000    0.000    0.000 deprecation.py:254(_deprecate_privatize_attribute)
        1    0.000    0.000    0.000    0.000 fetch.py:18(_IterableDatasetFetcher)
        1    0.000    0.000    0.000    0.000 transforms.py:1343(InverseCosineTransform)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:272(MultiplicativeLR)
        1    0.000    0.000    0.000    0.000 __init__.py:235(Splitter)
        1    0.000    0.000    0.000    0.000 transports.py:172(DatagramTransport)
        1    0.000    0.000    0.000    0.000 cache.py:5(_cache)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:211(GaussianRational)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1022(ShiftB)
        1    0.000    0.000    0.000    0.000 client.py:1519(RemoteDisconnected)
        2    0.000    0.000    0.000    0.000 gzip.py:323(closed)
        1    0.000    0.000    0.000    0.000 pooling.py:488(_AvgPoolNd)
        1    0.000    0.000    0.000    0.000 threading.py:267(__exit__)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:591(rv_discrete_frozen)
        1    0.000    0.000    0.000    0.000 mutable_ndim_array.py:4(MutableNDimArray)
        1    0.000    0.000    0.000    0.000 facts.py:214(rules_2prereq)
        1    0.000    0.000    0.000    0.000 serialization.py:1096(StorageType)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4127(unitary_group_gen)
        1    0.000    0.000    0.000    0.000 trifinder.py:7(TriFinder)
        1    0.000    0.000    0.000    0.000 core.py:2415(NoMatch)
        1    0.000    0.000    0.000    0.000 solvers.py:18(PolyNonlinearError)
        1    0.000    0.000    0.000    0.000 __init__.py:41(PropModule)
        1    0.000    0.000    0.000    0.000 events.py:108(StreamStartEvent)
        2    0.000    0.000    0.000    0.000 rootoftools.py:83(__init__)
        1    0.000    0.000    0.000    0.000 legend_handler.py:306(HandlerLineCollection)
        1    0.000    0.000    0.000    0.000 core.py:4841(AtStringStart)
        1    0.000    0.000    0.000    0.000 _aliases.py:194(UniqueInverseResult)
        1    0.000    0.000    0.000    0.000 str.py:998(StrReprPrinter)
        1    0.000    0.000    0.000    0.000 instancenorm.py:269(LazyInstanceNorm2d)
        1    0.000    0.000    0.000    0.000 connection.py:764(ConnectionWrapper)
        1    0.000    0.000    0.000    0.000 parsing.py:52(NotParenUncert)
        1    0.000    0.000    0.000    0.000 python.py:67(Lit)
        1    0.000    0.000    0.000    0.000 dispatcher.py:33(RaiseNotImplementedError)
        1    0.000    0.000    0.000    0.000 least_squares.py:255(_WrapArgsKwargs)
        1    0.000    0.000    0.000    0.000 instancenorm.py:385(LazyInstanceNorm3d)
        1    0.000    0.000    0.000    0.000 _array_api.py:585(<setcomp>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:6(BasePolynomialError)
        1    0.000    0.000    0.000    0.000 container.py:31(Container)
        1    0.000    0.000    0.000    0.000 package_exporter.py:120(EmptyMatchError)
        1    0.000    0.000    0.000    0.000 radau.py:549(RadauDenseOutput)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1278(LocationEvent)
        1    0.000    0.000    0.000    0.000 splitter_base.py:37(_SplitterSettingBase)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:717(_RealParameter)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1009(ShiftA)
        1    0.000    0.000    0.000    0.000 queue.py:242(LifoQueue)
        1    0.000    0.000    0.000    0.000 core.py:1125(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 _typing.py:113(DTypesBool)
        1    0.000    0.000    0.000    0.000 animation.py:753(ImageMagickFileWriter)
        1    0.000    0.000    0.000    0.000 mock.py:40(InvalidSpecError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1309(STIXFontConstants)
        1    0.000    0.000    0.000    0.000 single.py:2842(LieGroup)
        2    0.000    0.000    0.000    0.000 __init__.py:133(create_module)
        1    0.000    0.000    0.000    0.000 expr.py:4076(UnevaluatedExpr)
        1    0.000    0.000    0.000    0.000 _recursive.py:123(SourceContext)
        1    0.000    0.000    0.000    0.000 polyoptions.py:674(All)
        1    0.000    0.000    0.000    0.000 fetch.py:7(_BaseDatasetFetcher)
        1    0.000    0.000    0.000    0.000 __init__.py:1786(RootLogger)
        1    0.000    0.000    0.000    0.000 argparse.py:1253(FileType)
        1    0.000    0.000    0.000    0.000 graph.py:203(save_on_cpu)
        1    0.000    0.000    0.000    0.000 single.py:2192(NthLinearConstantCoeffVariationOfParameters)
        1    0.000    0.000    0.000    0.000 domainelement.py:6(DomainElement)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1341(SubArrayFormat)
        1    0.000    0.000    0.000    0.000 hyper.py:71(TupleParametersBase)
        1    0.000    0.000    0.000    0.000 mul.py:25(NC_Marker)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:809(FormulaCollection)
        1    0.000    0.000    0.000    0.000 inputs.py:1943(PmgVaspPspDirError)
        1    0.000    0.000    0.000    0.000 parser.py:818(RoundTripParserSC)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1140(_fdat)
        4    0.000    0.000    0.000    0.000 core.py:6052(postParse)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:7(CharacteristicZero)
        1    0.000    0.000    0.000    0.000 constraints.py:409(_Multinomial)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:659(FitDataError)
        1    0.000    0.000    0.000    0.000 __init__.py:522(maxdict)
        1    0.000    0.000    0.000    0.000 engine.py:20(DiagnosticError)
        1    0.000    0.000    0.000    0.000 _special_sparse_arrays.py:836(MikotaPair)
        1    0.000    0.000    0.000    0.000 unicode.py:160(Greek)
        1    0.000    0.000    0.000    0.000 headerregistry.py:387(SingleAddressHeader)
        1    0.000    0.000    0.000    0.000 dir_util.py:23(__init__)
        1    0.000    0.000    0.000    0.000 protocols.py:177(SubprocessProtocol)
        1    0.000    0.000    0.000    0.000 _odepack_py.py:16(ODEintWarning)
        1    0.000    0.000    0.000    0.000 modules.py:1328(QuotientModuleElement)
        1    0.000    0.000    0.000    0.000 shutil.py:64(SameFileError)
        1    0.000    0.000    0.000    0.000 Physics_System.py:5(Phy_Sys)
        1    0.000    0.000    0.000    0.000 single.py:2294(NthLinearConstantCoeffUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 inputs.py:787(BadPoscarWarning)
        1    0.000    0.000    0.000    0.000 ImageFile.py:723(PyCodecState)
        1    0.000    0.000    0.000    0.000 usertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 axis.py:596(_LazyTickList)
        1    0.000    0.000    0.000    0.000 mathieu_functions.py:9(MathieuBase)
        1    0.000    0.000    0.000    0.000 _ode.py:767(IntegratorConcurrencyError)
        1    0.000    0.000    0.000    0.000 _base.py:24(SparseFormatWarning)
        1    0.000    0.000    0.000    0.000 mixins.py:9(_LoopBoundMixin)
        1    0.000    0.000    0.000    0.000 source.py:1(<module>)
        1    0.000    0.000    0.000    0.000 PngImagePlugin.py:1129(_idat)
        1    0.000    0.000    0.000    0.000 diophantine.py:782(HomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 request.py:1226(HTTPDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:86(ParenthesisGroup)
        2    0.000    0.000    0.000    0.000 matexpr.py:486(get_postprocessor)
        1    0.000    0.000    0.000    0.000 jiterator.py:10(_CodeParser)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:717(PolynomialLR)
        1    0.000    0.000    0.000    0.000 _array_like.py:44(_SupportsArrayFunc)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1454(LSQBivariateSpline)
        1    0.000    0.000    0.000    0.000 parser.py:804(RoundTripParser)
        1    0.000    0.000    0.000    0.000 geo.py:280(InvertedAitoffTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:160(_special_method_cache)
        1    0.000    0.000    0.000    0.000 animation.py:637(FFMpegFileWriter)
        1    0.000    0.000    0.000    0.000 _discrete_distns.py:2011(nchypergeom_wallenius_gen)
        1    0.000    0.000    0.000    0.000 font_manager.py:939(_JSONEncoder)
        1    0.000    0.000    0.000    0.000 fancy_getopt.py:450(OptionDummy)
        1    0.000    0.000    0.000    0.000 response.py:57(addinfo)
        1    0.000    0.000    0.000    0.000 more.py:4171(countable)
        1    0.000    0.000    0.000    0.000 optimization.py:15(Newton)
        1    0.000    0.000    0.000    0.000 ase.py:31(Atoms)
        1    0.000    0.000    0.000    0.000 errors.py:33(MessageDefect)
        1    0.000    0.000    0.000    0.000 constraints.py:362(_Interval)
        1    0.000    0.000    0.000    0.000 scalarstring.py:54(LiteralScalarString)
        1    0.000    0.000    0.000    0.000 __init__.py:10(warn_distutils_present)
        1    0.000    0.000    0.000    0.000 units.py:74(AxisInfo)
        1    0.000    0.000    0.000    0.000 pickletools.py:174(ArgumentDescriptor)
        1    0.000    0.000    0.000    0.000 threading.py:1370(Timer)
        1    0.000    0.000    0.000    0.000 package_importer.py:668(_ModuleNode)
        4    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1798(_process_parameters)
        1    0.000    0.000    0.000    0.000 _dual_annealing.py:366(ObjectiveFunWrapper)
        1    0.000    0.000    0.000    0.000 ticker.py:2903(AutoMinorLocator)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:57(DoubleInfiniteFunc)
        1    0.000    0.000    0.000    0.000 unicode.py:141(Latin1)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:404(GroupMember)
        1    0.000    0.000    0.000    0.000 _version.py:70(<listcomp>)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:12(ConstantInputWarning)
        1    0.000    0.000    0.000    0.000 _mio4.py:601(MatFile4Writer)
        1    0.000    0.000    0.000    0.000 polyoptions.py:375(Greedy)
        1    0.000    0.000    0.000    0.000 core.py:5240(DelimitedList)
        1    0.000    0.000    0.000    0.000 _infra.py:302(Invocation)
        1    0.000    0.000    0.000    0.000 computed_entries.py:155(ManualEnergyAdjustment)
        1    0.000    0.000    0.000    0.000 _interface.py:816(MatrixLinearOperator)
        1    0.000    0.000    0.000    0.000 dtypes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dates.py:621(IndexDateFormatter)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:933(EWWhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(ComplexWarning)
        1    0.000    0.000    0.000    0.000 mock.py:1188(Mock)
        1    0.000    0.000    0.000    0.000 _comparison.py:389(ObjectPair)
        1    0.000    0.000    0.000    0.000 colors.py:1525(NoNorm)
        1    0.000    0.000    0.000    0.000 constraints.py:284(_IntegerGreaterThan)
        1    0.000    0.000    0.000    0.000 qconfig.py:79(QConfig)
        2    0.000    0.000    0.000    0.000 torch_version.py:19(__init__)
        1    0.000    0.000    0.000    0.000 events.py:66(NodeEvent)
        1    0.000    0.000    0.000    0.000 typing.py:1543(__repr__)
        1    0.000    0.000    0.000    0.000 util.py:167(UnboundedMemo)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000    0.000    0.000 annotations.py:29(Module)
        1    0.000    0.000    0.000    0.000 _utils.py:610(ExceptionWrapper)
        1    0.000    0.000    0.000    0.000 results.py:103(List)
        1    0.000    0.000    0.000    0.000 function.py:263(BackwardCFunction)
        1    0.000    0.000    0.000    0.000 argparse.py:917(_StoreAction)
        1    0.000    0.000    0.000    0.000 polyoptions.py:366(Field)
        1    0.000    0.000    0.000    0.000 scanner.py:2023(EOLComment)
        1    0.000    0.000    0.000    0.000 tokens.py:200(DirectiveToken)
        1    0.000    0.000    0.000    0.000 mock.py:388(_MockIter)
        1    0.000    0.000    0.000    0.000 spawn.py:79(ProcessContext)
        1    0.000    0.000    0.000    0.000 _exceptions.py:80(_UFuncInputCastingError)
        2    0.000    0.000    0.000    0.000 arrayprint.py:493(_recursive_guard)
        1    0.000    0.000    0.000    0.000 _filter_design.py:38(BadCoefficients)
        1    0.000    0.000    0.000    0.000 queues.py:234(LifoQueue)
        1    0.000    0.000    0.000    0.000 __init__.py:7(is_built)
        1    0.000    0.000    0.000    0.000 _exceptions.py:56(_UFuncBinaryResolutionError)
        3    0.000    0.000    0.000    0.000 _parser.py:99(checklookbehindgroup)
        1    0.000    0.000    0.000    0.000 _czt.py:275(ZoomFFT)
        1    0.000    0.000    0.000    0.000 unicode.py:8(_lazyclassproperty)
        1    0.000    0.000    0.000    0.000 utilities.py:7(DotProdSimpState)
        2    0.000    0.000    0.000    0.000 core.py:883(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:204(_Section)
        1    0.000    0.000    0.000    0.000 lambdify.py:1336(_TensorflowEvaluatorPrinter)
        1    0.000    0.000    0.000    0.000 mathtext.py:1974(HCentered)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:159(SpectralNormLoadStateDictPreHook)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1355(SmoothBivariateSpline)
        2    0.000    0.000    0.000    0.000 rcsetup.py:400(validate_fontsize_None)
        1    0.000    0.000    0.000    0.000 _typing.py:340(_IterDataPipeMeta)
        1    0.000    0.000    0.000    0.000 rootoftools.py:152(RootOf)
        1    0.000    0.000    0.000    0.000 request.py:1531(FTPHandler)
        1    0.000    0.000    0.000    0.000 _morestats.py:1203(_BigFloat)
        1    0.000    0.000    0.000    0.000 offsetbox.py:368(PackerBase)
        1    0.000    0.000    0.000    0.000 _linalg.py:41(SlogdetResult)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(LimitOverrunError)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:69(SymDispatchMode)
        1    0.000    0.000    0.000    0.000 inputs.py:3071(UnknownPotcarWarning)
        2    0.000    0.000    0.000    0.000 version.py:511(_parse_local_version)
        1    0.000    0.000    0.000    0.000 _base.py:141(_AcquireFutures)
        1    0.000    0.000    0.000    0.000 argparse.py:1097(_HelpAction)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:418(_VectorJacWrapper)
        1    0.000    0.000    0.000    0.000 legend_handler.py:433(HandlerErrorbar)
        1    0.000    0.000    0.000    0.000 unicode.py:246(Hiragana)
        1    0.000    0.000    0.000    0.000 decorator.py:254(ContextManager)
        1    0.000    0.000    0.000    0.000 _linalg.py:45(SVDResult)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:926(MeijerFormulaCollection)
        1    0.000    0.000    0.000    0.000 dataframes.py:205(CaptureCall)
        1    0.000    0.000    0.000    0.000 series.py:2122(GenericDataSeries)
        2    0.000    0.000    0.000    0.000 core.py:47(condition)
        1    0.000    0.000    0.000    0.000 parse.py:212(_NetlocResultMixinBytes)
        2    0.000    0.000    0.000    0.000 __init__.py:983(setFormatter)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3675(special_ortho_group_frozen)
        1    0.000    0.000    0.000    0.000 _typing.py:63(NestedSequence)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:537(FreeModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 logic.py:365(And)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:353(StepLR)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:451(ConstantLR)
        1    0.000    0.000    0.000    0.000 rk.py:552(RkDenseOutput)
        1    0.000    0.000    0.000    0.000 __init__.py:730(AbsolutePathError)
        1    0.000    0.000    0.000    0.000 spectral_norm.py:205(SpectralNormStateDictHook)
        1    0.000    0.000    0.000    0.000 tensor.py:816(<listcomp>)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:99(_moment_raw_formula)
        1    0.000    0.000    0.000    0.000 animation.py:613(FFMpegWriter)
        1    0.000    0.000    0.000    0.000 parameter.py:196(UninitializedBuffer)
        4    0.000    0.000    0.000    0.000 {built-in method _sre.ascii_iscased}
        1    0.000    0.000    0.000    0.000 exceptions.py:33(UnknownConstraint)
        1    0.000    0.000    0.000    0.000 constraints.py:380(_HalfOpenInterval)
        1    0.000    0.000    0.000    0.000 _nonlin.py:589(GenericBroyden)
        1    0.000    0.000    0.000    0.000 comments.py:50(IDX)
        1    0.000    0.000    0.000    0.000 quadrature.py:260(TanhSinh)
        1    0.000    0.000    0.000    0.000 function.py:281(FunctionMeta)
        1    0.000    0.000    0.000    0.000 _idl.py:145(Pointer)
        1    0.000    0.000    0.000    0.000 trirefine.py:12(TriRefiner)
        1    0.000    0.000    0.000    0.000 patches.py:2252(Sawtooth)
        1    0.000    0.000    0.000    0.000 exponential.py:212(ExpMeta)
        1    0.000    0.000    0.000    0.000 core.py:840(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:650(MIMEVersion)
        1    0.000    0.000    0.000    0.000 errors.py:8(MessageError)
        3    0.000    0.000    0.000    0.000 symbolic_opset9.py:2106(wrap_logical_op_with_cast_to)
        1    0.000    0.000    0.000    0.000 pickletools.py:948(StackObject)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1222(IntegerFormat)
        1    0.000    0.000    0.000    0.000 arpack.py:908(SpLuInv)
        1    0.000    0.000    0.000    0.000 loader.py:23(BaseLoader)
        1    0.000    0.000    0.000    0.000 six.py:144(MovedAttribute)
        1    0.000    0.000    0.000    0.000 _adapters.py:20(TraversableResourcesLoader)
        1    0.000    0.000    0.000    0.000 _pep440.py:141(<lambda>)
        1    0.000    0.000    0.000    0.000 scalarstring.py:66(FoldedScalarString)
        1    0.000    0.000    0.000    0.000 events.py:151(DocumentEndEvent)
        1    0.000    0.000    0.000    0.000 version.py:59(InvalidVersion)
        1    0.000    0.000    0.000    0.000 parser.py:126(BytesHeaderParser)
        1    0.000    0.000    0.000    0.000 pathlib.py:300(_Selector)
        1    0.000    0.000    0.000    0.000 pydoc.py:2209(ModuleScanner)
        1    0.000    0.000    0.000    0.000 groundtypes.py:21(_GMPYInteger)
        2    0.000    0.000    0.000    0.000 _compression.py:160(tell)
        1    0.000    0.000    0.000    0.000 ElementTree.py:106(ParseError)
        1    0.000    0.000    0.000    0.000 solveset.py:68(NonlinearError)
        1    0.000    0.000    0.000    0.000 suite.py:375(_DebugResult)
        1    0.000    0.000    0.000    0.000 __init__.py:1261(PlaceHolder)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1235(_NQuad)
        1    0.000    0.000    0.000    0.000 dates.py:1928(ConciseDateConverter)
        1    0.000    0.000    0.000    0.000 mock.py:2933(_AsyncIterator)
        1    0.000    0.000    0.000    0.000 magic.py:1(<module>)
        1    0.000    0.000    0.000    0.000 worker.py:119(_IterableDatasetStopIteration)
        1    0.000    0.000    0.000    0.000 _exceptions.py:98(_UFuncOutputCastingError)
        1    0.000    0.000    0.000    0.000 _typing.py:47(SupportsRead)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:1336(CosineAnnealingWarmRestarts)
        1    0.000    0.000    0.000    0.000 pytree_hacks.py:16(PlaceHolder)
        1    0.000    0.000    0.000    0.000 function.py:867(UndefSageHelper)
        1    0.000    0.000    0.000    0.000 __init__.py:519(FileHash)
        1    0.000    0.000    0.000    0.000 utils.py:226(CallbackIOWrapper)
        1    0.000    0.000    0.000    0.000 cyaml.py:22(CBaseLoader)
        1    0.000    0.000    0.000    0.000 error.py:176(MarkedYAMLWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:822(Lookup)
        1    0.000    0.000    0.000    0.000 single.py:2667(SecondLinearBessel)
        1    0.000    0.000    0.000    0.000 core.py:861(_DomainGreater)
        1    0.000    0.000    0.000    0.000 ticker.py:296(IndexFormatter)
        1    0.000    0.000    0.000    0.000 pyfunctorch.py:176(FunctionalizeInterpreter)
        1    0.000    0.000    0.000    0.000 traceback.py:90(_Sentinel)
        1    0.000    0.000    0.000    0.000 animation.py:99(__init__)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:347(GroupList)
        1    0.000    0.000    0.000    0.000 {built-in method _elementtree._set_factories}
        1    0.000    0.000    0.000    0.000 legend_handler.py:260(HandlerPatch)
        1    0.000    0.000    0.000    0.000 __init__.py:94(cuBLASModule)
        1    0.000    0.000    0.000    0.000 batchnorm.py:306(LazyBatchNorm1d)
        1    0.000    0.000    0.000    0.000 graph.py:458(_CloneArgBeforeMutateMode)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:225(mat_struct)
        1    0.000    0.000    0.000    0.000 _distn_infrastructure.py:600(rv_continuous_frozen)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:2163(RectSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 datapipes.py:18(DataFramesAsTuplesPipe)
        1    0.000    0.000    0.000    0.000 _trace.py:290(TracingCheckError)
        1    0.000    0.000    0.000    0.000 geo.py:255(AitoffTransform)
        1    0.000    0.000    0.000    0.000 request.py:1383(HTTPSHandler)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:169(Token)
        1    0.000    0.000    0.000    0.000 emitter.py:32(ScalarAnalysis)
        1    0.000    0.000    0.000    0.000 patches.py:2025(Circle)
        1    0.000    0.000    0.000    0.000 activation.py:274(Sigmoid)
        1    0.000    0.000    0.000    0.000 pickletools.py:2550(_Example)
        3    0.000    0.000    0.000    0.000 core.py:2493(_generateDefaultName)
        1    0.000    0.000    0.000    0.000 fused.py:40(LinearReLU)
        1    0.000    0.000    0.000    0.000 _shgo.py:1529(LMap)
        1    0.000    0.000    0.000    0.000 Image.py:521(SupportsGetData)
        1    0.000    0.000    0.000    0.000 core.py:4931(PrecededBy)
        1    0.000    0.000    0.000    0.000 series.py:2104(ContourSeries)
        5    0.000    0.000    0.000    0.000 libmpf.py:49(<lambda>)
        1    0.000    0.000    0.000    0.000 request.py:641(HTTPDefaultErrorHandler)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:923(ValueTerminal)
        2    0.000    0.000    0.000    0.000 index_tricks.py:761(__init__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:5899(uniform_direction_frozen)
        1    0.000    0.000    0.000    0.000 _polyint.py:145(_Interpolator1DWithDerivatives)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:251(BareQuotedString)
        1    0.000    0.000    0.000    0.000 constraints.py:232(_OneHot)
        1    0.000    0.000    0.000    0.000 backend_managers.py:11(ToolEvent)
        1    0.000    0.000    0.000    0.000 codeprinter.py:31(AssignmentError)
        1    0.000    0.000    0.000    0.000 api.py:466(RRef)
        1    0.000    0.000    0.000    0.000 single.py:2572(NthLinearEulerEqNonhomogeneousUndeterminedCoefficients)
        1    0.000    0.000    0.000    0.000 simplex.py:77(UnboundedLPError)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:840(ChainedScheduler)
        2    0.000    0.000    0.000    0.000 six.py:199(__get_module)
        1    0.000    0.000    0.000    0.000 patches.py:3060(CurveA)
        1    0.000    0.000    0.000    0.000 importer.py:22(ObjMismatchError)
        1    0.000    0.000    0.000    0.000 overrides.py:1865(BaseTorchFunctionMode)
        1    0.000    0.000    0.000    0.000 __init__.py:165(c_short)
        1    0.000    0.000    0.000    0.000 rcsetup.py:442(_validate_mathtext_fallback_to_cm)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1615(_DefaultMixin)
        1    0.000    0.000    0.000    0.000 exceptions.py:19(DuplicateConstraint)
        1    0.000    0.000    0.000    0.000 util.py:81(_UnboundedCache)
        1    0.000    0.000    0.000    0.000 reduction.py:211(_C)
        1    0.000    0.000    0.000    0.000 structure.py:5574(StructureError)
        1    0.000    0.000    0.000    0.000 configparser.py:181(NoSectionError)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:577(ExponentialLR)
        1    0.000    0.000    0.000    0.000 exceptions.py:18(DMBadInputError)
        1    0.000    0.000    0.000    0.000 numbers.py:2764(IntegerConstant)
        1    0.000    0.000    0.000    0.000 function.py:107(ArgumentIndexError)
        1    0.000    0.000    0.000    0.000 index_tricks.py:435(RClass)
        1    0.000    0.000    0.000    0.000 patches.py:3165(_Bracket)
        1    0.000    0.000    0.000    0.000 profiler.py:619(emit_nvtx)
        1    0.000    0.000    0.000    0.000 api.py:87(AllGatherStates)
        1    0.000    0.000    0.000    0.000 pickletools.py:1093(OpcodeInfo)
        1    0.000    0.000    0.000    0.000 core.py:4895(FollowedBy)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1245(ComplexFloatingFormat)
        1    0.000    0.000    0.000    0.000 mathtext.py:1437(Hbox)
        1    0.000    0.000    0.000    0.000 unicode.py:135(BasicMultilingualPlane)
        1    0.000    0.000    0.000    0.000 modules.py:1867(InnerEndomorphism)
        1    0.000    0.000    0.000    0.000 constraints.py:265(_IntegerLessThan)
        3    0.000    0.000    0.000    0.000 numeric.py:63(_zeros_like_dispatcher)
        1    0.000    0.000    0.000    0.000 parse.py:315(DefragResult)
        1    0.000    0.000    0.000    0.000 meijerint.py:313(_CoeffExpValueError)
        1    0.000    0.000    0.000    0.000 pooling.py:1132(AdaptiveAvgPool1d)
        1    0.000    0.000    0.000    0.000 _base.py:45(Error)
        1    0.000    0.000    0.000    0.000 protocols.py:162(DatagramProtocol)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:402(MultiStepLR)
        1    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 tarfile.py:267(TarError)
        1    0.000    0.000    0.000    0.000 _multivariate.py:3828(ortho_group_frozen)
        1    0.000    0.000    0.000    0.000 docinfo.py:112(DocInfo)
        1    0.000    0.000    0.000    0.000 collections.py:1301(AsteriskPolygonCollection)
        1    0.000    0.000    0.000    0.000 configparser.py:340(MissingSectionHeaderError)
        1    0.000    0.000    0.000    0.000 cyaml.py:38(CSafeLoader)
        1    0.000    0.000    0.000    0.000 _csr.py:314(csr_array)
        1    0.000    0.000    0.000    0.000 extras.py:263(_fromnxfunction_single)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:820(IdentityVectorFunction)
        1    0.000    0.000    0.000    0.000 lsoda.py:211(LsodaDenseOutput)
        1    0.000    0.000    0.000    0.000 core.py:4073(_ErrorStop)
        1    0.000    0.000    0.000    0.000 <decorator-gen-4>:1(<module>)
        1    0.000    0.000    0.000    0.000 single.py:2787(SecondLinearAiry)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:39(FixedTalbot)
        1    0.000    0.000    0.000    0.000 utils.py:34(MatchAllNode)
        1    0.000    0.000    0.000    0.000 dropout.py:62(Dropout1d)
        1    0.000    0.000    0.000    0.000 _vertex.py:430(ConstraintWrapper)
        1    0.000    0.000    0.000    0.000 single.py:2483(NthLinearEulerEqNonhomogeneousVariationOfParameters)
        1    0.000    0.000    0.000    0.000 _exceptions.py:32(UFuncTypeError)
        1    0.000    0.000    0.000    0.000 patches.py:1945(_Base)
        1    0.000    0.000    0.000    0.000 single.py:2387(NthLinearEulerEqHomogeneous)
        1    0.000    0.000    0.000    0.000 tarfile.py:704(ExFileObject)
        1    0.000    0.000    0.000    0.000 mathtext.py:1318(STIXSansFontConstants)
        1    0.000    0.000    0.000    0.000 calendar.py:548(different_locale)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._has_torch_function_variadic}
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:913(WhiteSpaceTerminal)
        1    0.000    0.000    0.000    0.000 case.py:192(_BaseTestCaseContext)
        1    0.000    0.000    0.000    0.000 outputs.py:5916(UnconvergedVASPWarning)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:1226(_OptFunc)
        1    0.000    0.000    0.000    0.000 diophantine.py:454(BinaryQuadratic)
        1    0.000    0.000    0.000    0.000 mathtext.py:1829(Hrule)
        1    0.000    0.000    0.000    0.000 streamplot.py:233(StreamplotSet)
        1    0.000    0.000    0.000    0.000 line.py:2362(Segment2D)
        1    0.000    0.000    0.000    0.000 orderings.py:45(GradedLexOrder)
        1    0.000    0.000    0.000    0.000 dataframes.py:43(DataFrameTracedOps)
        1    0.000    0.000    0.000    0.000 spglib.py:75(SpglibError)
        1    0.000    0.000    0.000    0.000 __init__.py:10(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:2040(AutoHeightChar)
        1    0.000    0.000    0.000    0.000 mock.py:2140(MagicProxy)
        1    0.000    0.000    0.000    0.000 streams.py:117(ExternalStream)
        1    0.000    0.000    0.000    0.000 geo.py:458(InvertedLambertTransform)
        1    0.000    0.000    0.000    0.000 error.py:19(URLError)
        1    0.000    0.000    0.000    0.000 std.py:40(TqdmWarning)
        1    0.000    0.000    0.000    0.000 activation.py:1315(Softsign)
        1    0.000    0.000    0.000    0.000 exceptions.py:300(RecursiveGrammarException)
        1    0.000    0.000    0.000    0.000 core.py:5012(Located)
        2    0.000    0.000    0.000    0.000 _adapters.py:25(__init__)
        1    0.000    0.000    0.000    0.000 _typing.py:139(DTypesReal)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:173(_enable_get_lr_call)
        1    0.000    0.000    0.000    0.000 core.py:3762(StringEnd)
        1    0.000    0.000    0.000    0.000 core.py:184(_should_enable_warnings)
        1    0.000    0.000    0.000    0.000 _base.py:19(SparseWarning)
        1    0.000    0.000    0.000    0.000 extras.py:1637(mr_class)
        1    0.000    0.000    0.000    0.000 configparser.py:1242(SafeConfigParser)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1625(StateSpaceContinuous)
        1    0.000    0.000    0.000    0.000 reader.py:35(ReaderError)
        1    0.000    0.000    0.000    0.000 exceptions.py:3(GeometryError)
        1    0.000    0.000    0.000    0.000 libmpf.py:132(h_mask_big)
        1    0.000    0.000    0.000    0.000 geo.py:304(HammerTransform)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1809(DraggableAnnotation)
        1    0.000    0.000    0.000    0.000 __init__.py:399(PyDLL)
        1    0.000    0.000    0.000    0.000 widgets.py:2647(Lasso)
        1    0.000    0.000    0.000    0.000 polysys.py:35(SolveFailed)
        1    0.000    0.000    0.000    0.000 _utils.py:769(_ClassPropertyDescriptor)
        1    0.000    0.000    0.000    0.000 contextlib.py:340(__init__)
        1    0.000    0.000    0.000    0.000 <decorator-gen-2>:1(<module>)
        1    0.000    0.000    0.000    0.000 net_min_base.py:31(FxNetMinimizerBadModuleError)
        2    0.000    0.000    0.000    0.000 results.py:460(<lambda>)
        1    0.000    0.000    0.000    0.000 numpy.py:346(<dictcomp>)
        1    0.000    0.000    0.000    0.000 operator_schemas.py:44(_FakeGlobalNamespace)
        1    0.000    0.000    0.000    0.000 constraints.py:398(_Simplex)
        1    0.000    0.000    0.000    0.000 request.py:898(HTTPPasswordMgrWithDefaultRealm)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:767(CosineAnnealingLR)
        1    0.000    0.000    0.000    0.000 __init__.py:414(_make_alias)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:163(_Sentinel)
        2    0.000    0.000    0.000    0.000 {method '__exit__' of 'posix.ScandirIterator' objects}
        1    0.000    0.000    0.000    0.000 tz.py:1156(_tzicalvtzcomp)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2625(NonGuiException)
        1    0.000    0.000    0.000    0.000 transports.py:148(Transport)
        1    0.000    0.000    0.000    0.000 single.py:37(ODEMatchError)
        1    0.000    0.000    0.000    0.000 numbers.py:3142(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 queue.py:23(Full)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1449(PickEvent)
        1    0.000    0.000    0.000    0.000 patches.py:3314(BarAB)
        1    0.000    0.000    0.000    0.000 __init__.py:82(is_available)
        1    0.000    0.000    0.000    0.000 legend_handler.py:689(HandlerPolyCollection)
        1    0.000    0.000    0.000    0.000 backend_tools.py:682(ViewsPositionsBase)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:821(ContentType)
        1    0.000    0.000    0.000    0.000 argparse.py:1308(Namespace)
        1    0.000    0.000    0.000    0.000 systems.py:32(ODEOrderError)
        1    0.000    0.000    0.000    0.000 datapipes.py:111(ExampleAggregateAsDataFrames)
        1    0.000    0.000    0.000    0.000 index_tricks.py:262(OGridClass)
        1    0.000    0.000    0.000    0.000 pathlib.py:331(_PreciseSelector)
        1    0.000    0.000    0.000    0.000 mathtext.py:1932(Fil)
        1    0.000    0.000    0.000    0.000 _tzpath.py:170(InvalidTZPathWarning)
        1    0.000    0.000    0.000    0.000 transforms.py:453(MellinTransformStripError)
        1    0.000    0.000    0.000    0.000 pooling.py:1078(AdaptiveMaxPool3d)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4083(random_correlation_frozen)
        1    0.000    0.000    0.000    0.000 patches.py:3340(Simple)
        1    0.000    0.000    0.000    0.000 exceptions.py:265(ParseException)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:446(ObsRoute)
        1    0.000    0.000    0.000    0.000 sparse_ndim_array.py:104(ImmutableSparseNDimArray)
        1    0.000    0.000    0.000    0.000 errors.py:27(CallHintViolationWarning)
        1    0.000    0.000    0.000    0.000 pooling.py:1006(AdaptiveMaxPool1d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:980(NoExtraItemsType)
        1    0.000    0.000    0.000    0.000 offsetbox.py:495(HPacker)
        1    0.000    0.000    0.000    0.000 patches.py:2080(RArrow)
        1    0.000    0.000    0.000    0.000 qs.py:36(FactorBaseElem)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:158(__init__)
        1    0.000    0.000    0.000    0.000 graph.py:422(_swap_with_cloned)
        1    0.000    0.000    0.000    0.000 ticker.py:1889(NullLocator)
        1    0.000    0.000    0.000    0.000 importer.py:16(ObjNotFoundError)
        1    0.000    0.000    0.000    0.000 _comparison.py:306(UnsupportedInputs)
        1    0.000    0.000    0.000    0.000 _misc.py:9(LinAlgWarning)
        1    0.000    0.000    0.000    0.000 case.py:201(_AssertRaisesBaseContext)
        1    0.000    0.000    0.000    0.000 modules.py:454(FreeModulePolyRing)
        1    0.000    0.000    0.000    0.000 core.py:5813(TokenConverter)
        1    0.000    0.000    0.000    0.000 argparse.py:1074(_CountAction)
        1    0.000    0.000    0.000    0.000 diophantine.py:1134(GeneralSumOfEvenPowers)
        1    0.000    0.000    0.000    0.000 conv.py:1128(_ConvTransposeMixin)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._reload_guard}
        1    0.000    0.000    0.000    0.000 mathtext.py:1984(VCentered)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:620(<lambda>)
        1    0.000    0.000    0.000    0.000 optimization.py:104(MNewton)
        1    0.000    0.000    0.000    0.000 dumper.py:21(BaseDumper)
        1    0.000    0.000    0.000    0.000 patches.py:2349(Roundtooth)
        2    0.000    0.000    0.000    0.000 _multiufuncs.py:66(_override_ufunc_default_args)
        1    0.000    0.000    0.000    0.000 constraints.py:222(_Boolean)
        1    0.000    0.000    0.000    0.000 gradcheck.py:18(GradcheckError)
        1    0.000    0.000    0.000    0.000 pathlib.py:378(_RecursiveWildcardSelector)
        1    0.000    0.000    0.000    0.000 _optimize.py:544(_MaxFuncCallError)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:220(Stehfest)
        1    0.000    0.000    0.000    0.000 core.py:822(_DomainTan)
        1    0.000    0.000    0.000    0.000 rszeta.py:53(RSCache)
        1    0.000    0.000    0.000    0.000 _guards.py:74(GuardBuilderBase)
        1    0.000    0.000    0.000    0.000 pathlib.py:834(PurePosixPath)
        1    0.000    0.000    0.000    0.000 _helpers.py:685(_dask_device)
        1    0.000    0.000    0.000    0.000 pooling.py:1036(AdaptiveMaxPool2d)
        1    0.000    0.000    0.000    0.000 scalarint.py:82(BinaryInt)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:106(HyperbolicFunction)
        1    0.000    0.000    0.000    0.000 instancenorm.py:308(InstanceNorm3d)
        1    0.000    0.000    0.000    0.000 comments.py:692(CommentedMapValuesView)
        1    0.000    0.000    0.000    0.000 diophantine.py:695(HomogeneousTernaryQuadraticNormal)
        1    0.000    0.000    0.000    0.000 registration.py:210(__init__)
        1    0.000    0.000    0.000    0.000 pooling.py:1199(AdaptiveAvgPool3d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:1623(_TypeVarLikeMeta)
        1    0.000    0.000    0.000    0.000 _miobase.py:20(MatReadError)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1554(RectBivariateSpline)
        1    0.000    0.000    0.000    0.000 GimpGradientFile.py:115(GimpGradientFile)
        1    0.000    0.000    0.000    0.000 exceptions.py:13(DMError)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:885(_PatchedFnSetItem)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:949(SingletonMeta)
        1    0.000    0.000    0.000    0.000 optimization.py:517(ANewton)
        1    0.000    0.000    0.000    0.000 tokens.py:220(StreamStartToken)
        1    0.000    0.000    0.000    0.000 patches.py:3053(Curve)
        1    0.000    0.000    0.000    0.000 _exporter_states.py:18(SymbolicContext)
        1    0.000    0.000    0.000    0.000 function.py:576(InplaceFunction)
        1    0.000    0.000    0.000    0.000 transforms.py:2725(TransformedPatchPath)
        1    0.000    0.000    0.000    0.000 dataframes.py:178(CaptureA)
        1    0.000    0.000    0.000    0.000 utils.py:79(<dictcomp>)
        1    0.000    0.000    0.000    0.000 linsolve.py:28(MatrixRankWarning)
        1    0.000    0.000    0.000    0.000 mathtext.py:2079(AutoWidthChar)
        1    0.000    0.000    0.000    0.000 context.py:310(ForkServerContext)
        2    0.000    0.000    0.000    0.000 __init__.py:137(exec_module)
        1    0.000    0.000    0.000    0.000 diophantine.py:256(Linear)
        1    0.000    0.000    0.000    0.000 request.py:1244(ProxyDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 _continuous_distns.py:672(FitSolverError)
        1    0.000    0.000    0.000    0.000 __init__.py:742(SpecialFileError)
        1    0.000    0.000    0.000    0.000 instancenorm.py:192(InstanceNorm2d)
        1    0.000    0.000    0.000    0.000 analyzer.py:66(SymmetryUndeterminedError)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1837(SmoothSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 fused.py:113(BNReLU3d)
        1    0.000    0.000    0.000    0.000 fused.py:159(ConvAddReLU2d)
        1    0.000    0.000    0.000    0.000 mathtext.py:2025(SubSuperCluster)
        1    0.000    0.000    0.000    0.000 __init__.py:270(TarError)
        1    0.000    0.000    0.000    0.000 polynomial.py:29(RankWarning)
        1    0.000    0.000    0.000    0.000 _docscrape.py:101(ParseError)
        1    0.000    0.000    0.000    0.000 fused.py:49(ConvBn1d)
        1    0.000    0.000    0.000    0.000 cyaml.py:70(CBaseDumper)
        1    0.000    0.000    0.000    0.000 _sf_error.py:5(SpecialFunctionWarning)
        1    0.000    0.000    0.000    0.000 datapipe.py:207(DFIterDataPipe)
        1    0.000    0.000    0.000    0.000 profiler_util.py:373(Interval)
        1    0.000    0.000    0.000    0.000 container.py:46(BarContainer)
        2    0.000    0.000    0.000    0.000 ordinals.py:84(<genexpr>)
        1    0.000    0.000    0.000    0.000 polyutils.py:47(RankWarning)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:21(NearConstantInputWarning)
        1    0.000    0.000    0.000    0.000 _quadpack_py.py:13(IntegrationWarning)
        1    0.000    0.000    0.000    0.000 _common.py:163(ZoneInfoNotFoundError)
        1    0.000    0.000    0.000    0.000 events.py:237(SequenceStartEvent)
        1    0.000    0.000    0.000    0.000 patches.py:3420(Fancy)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1118(MeijerShiftA)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:41(pretty_use_unicode)
        1    0.000    0.000    0.000    0.000 process.py:349(AuthenticationString)
        1    0.000    0.000    0.000    0.000 instancenorm.py:77(InstanceNorm1d)
        1    0.000    0.000    0.000    0.000 core.py:2500(_SingleCharLiteral)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getCompiledVersion}
        1    0.000    0.000    0.000    0.000 error.py:278(MarkedYAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 functions.py:138(NoShapeError)
        1    0.000    0.000    0.000    0.000 dataframes.py:268(CaptureGetItem)
        1    0.000    0.000    0.000    0.000 errors.py:81(HeaderDefect)
        1    0.000    0.000    0.000    0.000 _ops.py:588(_PyOpNamespace)
        1    0.000    0.000    0.000    0.000 homomorphisms.py:574(SubModuleHomomorphism)
        1    0.000    0.000    0.000    0.000 _script.py:264(ScriptMeta)
        1    0.000    0.000    0.000    0.000 _differentiable_functions.py:408(_VectorFunWrapper)
        1    0.000    0.000    0.000    0.000 mathtext.py:212(MathtextBackendBitmap)
        1    0.000    0.000    0.000    0.000 unicode.py:282(Hangul)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:310(__init__)
        1    0.000    0.000    0.000    0.000 _vertex.py:446(FieldWrapper)
        1    0.000    0.000    0.000    0.000 _nonlin.py:32(NoConvergence)
        1    0.000    0.000    0.000    0.000 rcsetup.py:1039(_ignorecase)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1162(MeijerUnShiftA)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:256(MatlabFunction)
        1    0.000    0.000    0.000    0.000 scalarstring.py:75(SingleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 argparse.py:720(MetavarTypeHelpFormatter)
        1    0.000    0.000    0.000    0.000 core.py:3745(StringStart)
        1    0.000    0.000    0.000    0.000 _jit_internal.py:68(__init__)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1278(_TimelikeFormat)
        1    0.000    0.000    0.000    0.000 tokens.py:294(AliasToken)
        1    0.000    0.000    0.000    0.000 pyplot.py:121(_NotIPython)
        1    0.000    0.000    0.000    0.000 pooling.py:1160(AdaptiveAvgPool2d)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2442(_UnpackSpecialForm)
        1    0.000    0.000    0.000    0.000 _guards.py:205(GuardEnvExpr)
        1    0.000    0.000    0.000    0.000 dataframes.py:360(CaptureInitial)
        1    0.000    0.000    0.000    0.000 __init__.py:753(Filter)
        1    0.000    0.000    0.000    0.000 __init__.py:78(UnidentifiedImageError)
        1    0.000    0.000    0.000    0.000 argparse.py:1009(_AppendAction)
        2    0.000    0.000    0.000    0.000 distributed_c10d.py:313(default_pg)
        1    0.000    0.000    0.000    0.000 csv.py:64(excel_tab)
        1    0.000    0.000    0.000    0.000 _adapters.py:143(__init__)
        1    0.000    0.000    0.000    0.000 _codata.py:2116(ConstantWarning)
        1    0.000    0.000    0.000    0.000 _factories.py:25(_TzOffsetFactory)
        1    0.000    0.000    0.000    0.000 utils.py:18(InvalidName)
        1    0.000    0.000    0.000    0.000 mock.py:2778(_SpecState)
        1    0.000    0.000    0.000    0.000 coreerrors.py:6(BaseCoreError)
        1    0.000    0.000    0.000    0.000 profiler_util.py:622(MemRecordsAcc)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1586(Specie)
        1    0.000    0.000    0.000    0.000 exceptions.py:10(CancelledError)
        1    0.000    0.000    0.000    0.000 queues.py:11(QueueEmpty)
        1    0.000    0.000    0.000    0.000 _monitor.py:9(TqdmSynchronisationWarning)
        1    0.000    0.000    0.000    0.000 ticker.py:1154(LogFormatterMathtext)
        1    0.000    0.000    0.000    0.000 _exceptions.py:71(_UFuncCastingError)
        1    0.000    0.000    0.000    0.000 tokens.py:284(BlockEntryToken)
        1    0.000    0.000    0.000    0.000 transforms.py:2542(BboxTransformToMaxOnly)
        1    0.000    0.000    0.000    0.000 batchnorm.py:233(BatchNorm1d)
        1    0.000    0.000    0.000    0.000 cyaml.py:115(CSafeDumper)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3571(ShowBase)
        1    0.000    0.000    0.000    0.000 patches.py:3242(BracketAB)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:153(JitTypeTraceStoreLogger)
        1    0.000    0.000    0.000    0.000 __init__.py:281(sic)
        1    0.000    0.000    0.000    0.000 calculus.py:1(CalculusMethods)
        1    0.000    0.000    0.000    0.000 libhyper.py:43(NoConvergence)
        1    0.000    0.000    0.000    0.000 spawn.py:163(SpawnContext)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:507(DotAtomText)
        1    0.000    0.000    0.000    0.000 _sf_error.py:13(SpecialFunctionError)
        1    0.000    0.000    0.000    0.000 request.py:1641(DataHandler)
        1    0.000    0.000    0.000    0.000 scanner.py:2030(FullLineComment)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1173(_DOF_estimator_min_E)
        1    0.000    0.000    0.000    0.000 dates.py:1583(WeekdayLocator)
        2    0.000    0.000    0.000    0.000 ordinals.py:83(<listcomp>)
        2    0.000    0.000    0.000    0.000 groundtypes.py:26(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:50(InvalidLicenseExpression)
        2    0.000    0.000    0.000    0.000 calendar.py:57(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:33(IllegalWeekdayError)
        1    0.000    0.000    0.000    0.000 emitter.py:1777(RoundTripEmitter)
        1    0.000    0.000    0.000    0.000 _typing.py:145(DTypesComplex)
        1    0.000    0.000    0.000    0.000 tokens.py:321(ScalarToken)
        1    0.000    0.000    0.000    0.000 __init__.py:310(first_invoke)
        1    0.000    0.000    0.000    0.000 _lil.py:505(lil_array)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1076(UnShiftB)
        1    0.000    0.000    0.000    0.000 core.py:893(_MaskedUFunc)
        1    0.000    0.000    0.000    0.000 exceptions.py:10(ShapeError)
        1    0.000    0.000    0.000    0.000 pooling.py:249(_MaxUnpoolNd)
        1    0.000    0.000    0.000    0.000 _optimize.py:3113(BracketError)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:285(MinimizerWrapper)
        1    0.000    0.000    0.000    0.000 ticker.py:325(NullFormatter)
        1    0.000    0.000    0.000    0.000 polyerrors.py:136(ComputationFailed)
        1    0.000    0.000    0.000    0.000 eigen.py:38(Eigen)
        1    0.000    0.000    0.000    0.000 activation.py:784(LogSigmoid)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:191(PHBase)
        1    0.000    0.000    0.000    0.000 comments.py:1085(CommentedOrderedMap)
        1    0.000    0.000    0.000    0.000 scalarint.py:100(HexInt)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:949(Operator)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3256(_NamedTupleMeta)
        1    0.000    0.000    0.000    0.000 units.py:189(Registry)
        1    0.000    0.000    0.000    0.000 core.py:84(MaskedArrayFutureWarning)
        1    0.000    0.000    0.000    0.000 _quad_vec.py:94(_Bunch)
        1    0.000    0.000    0.000    0.000 uuid.py:78(SafeUUID)
        1    0.000    0.000    0.000    0.000 markers.py:33(InvalidMarker)
        1    0.000    0.000    0.000    0.000 datapipes.py:42(ConcatDataFramesPipe)
        1    0.000    0.000    0.000    0.000 pathlib.py:1398(WindowsPath)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:807(ParameterizedHeaderValue)
        1    0.000    0.000    0.000    0.000 deprecation.py:7(MatplotlibDeprecationWarning)
        1    0.000    0.000    0.000    0.000 requirements.py:15(InvalidRequirement)
        1    0.000    0.000    0.000    0.000 optimization.py:58(Secant)
        1    0.000    0.000    0.000    0.000 modules.py:1096(ModuleOrder)
        1    0.000    0.000    0.000    0.000 io.py:25(EncodingWarning)
        1    0.000    0.000    0.000    0.000 errors.py:33(InvalidConfigError)
        1    0.000    0.000    0.000    0.000 <decorator-gen-1>:1(<module>)
        1    0.000    0.000    0.000    0.000 symbolic_shapes.py:25(GuardOnDataDependentSymNode)
        1    0.000    0.000    0.000    0.000 patches.py:2099(DArrow)
        1    0.000    0.000    0.000    0.000 _parser.py:29(Variable)
        1    0.000    0.000    0.000    0.000 specifiers.py:32(InvalidSpecifier)
        1    0.000    0.000    0.000    0.000 periodic_table.py:1592(DummySpecie)
        1    0.000    0.000    0.000    0.000 events.py:253(MappingStartEvent)
        1    0.000    0.000    0.000    0.000 polar.py:185(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 patches.py:2496(Arc3)
        1    0.000    0.000    0.000    0.000 mathtext.py:1938(Fill)
        1    0.000    0.000    0.000    0.000 legend_handler.py:637(HandlerTuple)
        1    0.000    0.000    0.000    0.000 errors.py:1(Error)
        1    0.000    0.000    0.000    0.000 parse.py:135(_ResultMixinBytes)
        1    0.000    0.000    0.000    0.000 _testutils.py:51(FPUModeChangeWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:2229(createLock)
        1    0.000    0.000    0.000    0.000 backend_managers.py:27(ToolManagerMessageEvent)
        1    0.000    0.000    0.000    0.000 unicode.py:307(Thai)
        1    0.000    0.000    0.000    0.000 core.py:3632(PositionToken)
        1    0.000    0.000    0.000    0.000 argparse.py:992(_StoreFalseAction)
        1    0.000    0.000    0.000    0.000 rl.py:43(glom)
        1    0.000    0.000    0.000    0.000 activation.py:337(Tanh)
        1    0.000    0.000    0.000    0.000 exceptions.py:26(DuplicateEditVariable)
        1    0.000    0.000    0.000    0.000 mock.py:2118(MagicMock)
        1    0.000    0.000    0.000    0.000 pickle.py:73(PickleError)
        1    0.000    0.000    0.000    0.000 para4band.py:555(<listcomp>)
        1    0.000    0.000    0.000    0.000 _fitpack_repro.py:537(Bunch)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:262(RandomDisplacement)
        1    0.000    0.000    0.000    0.000 deprecation.py:325(_deprecated_parameter_class)
        1    0.000    0.000    0.000    0.000 design_patterns.py:128(NullStream)
        1    0.000    0.000    0.000    0.000 Image.py:3238(SupportsArrowArrayInterface)
        1    0.000    0.000    0.000    0.000 mathtext.py:1956(NegFill)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:700(Section)
        1    0.000    0.000    0.000    0.000 batchnorm.py:519(LazyBatchNorm3d)
        1    0.000    0.000    0.000    0.000 _axis_nan_policy.py:37(SmallSampleWarning)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:1670(SphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:690(Attribute)
        1    0.000    0.000    0.000    0.000 _coo.py:1463(coo_matrix)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1260(AnchoredText)
        1    0.000    0.000    0.000    0.000 patches.py:2632(Arc)
        1    0.000    0.000    0.000    0.000 patches.py:3094(CurveAB)
        1    0.000    0.000    0.000    0.000 <decorator-gen-0>:1(<module>)
        1    0.000    0.000    0.000    0.000 _typing.py:68(SupportsArrayNamespace)
        1    0.000    0.000    0.000    0.000 error.py:73(ContentTooShortError)
        1    0.000    0.000    0.000    0.000 {built-in method _abc.get_cache_token}
        1    0.000    0.000    0.000    0.000 inputs.py:1178(BadIncarWarning)
        1    0.000    0.000    0.000    0.000 context.py:242(__init__)
        1    0.000    0.000    0.000    0.000 net_min_base.py:49(FxNetMinimizerResultMismatchError)
        1    0.000    0.000    0.000    0.000 tensor.py:5253(get_postprocessor)
        1    0.000    0.000    0.000    0.000 core.py:4783(_Indent)
        1    0.000    0.000    0.000    0.000 serialization.py:264(_open_buffer_writer)
        1    0.000    0.000    0.000    0.000 patches.py:2200(Round4)
        1    0.000    0.000    0.000    0.000 unicode.py:213(Chinese)
        1    0.000    0.000    0.000    0.000 warnings.py:89(InformationOnly)
        1    0.000    0.000    0.000    0.000 __init__.py:235(c_char)
        1    0.000    0.000    0.000    0.000 mathtext.py:1968(SsGlue)
        1    0.000    0.000    0.000    0.000 polyerrors.py:30(PolynomialDivisionFailed)
        1    0.000    0.000    0.000    0.000 zipfile.py:43(BadZipFile)
        1    0.000    0.000    0.000    0.000 serialization.py:258(_open_buffer_reader)
        1    0.000    0.000    0.000    0.000 comments.py:643(CommentedMapView)
        1    0.000    0.000    0.000    0.000 pydoc.py:1545(_PlainTextDoc)
        1    0.000    0.000    0.000    0.000 _fitpack2.py:780(LSQUnivariateSpline)
        1    0.000    0.000    0.000    0.000 mock.py:2112(AsyncMagicMixin)
        1    0.000    0.000    0.000    0.000 dataframes.py:324(CaptureSub)
        1    0.000    0.000    0.000    0.000 dropout.py:153(Dropout3d)
        1    0.000    0.000    0.000    0.000 <decorator-gen-3>:1(<module>)
        1    0.000    0.000    0.000    0.000 pathlib.py:43(_is_wildcard_pattern)
        1    0.000    0.000    0.000    0.000 _utils.py:603(KeyErrorMessage)
        1    0.000    0.000    0.000    0.000 patches.py:3508(Wedge)
        1    0.000    0.000    0.000    0.000 argparse.py:754(ArgumentError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1228(DrawEvent)
        1    0.000    0.000    0.000    0.000 _dok.py:536(dok_array)
        1    0.000    0.000    0.000    0.000 argparse.py:680(RawTextHelpFormatter)
        1    0.000    0.000    0.000    0.000 hb.py:377(<dictcomp>)
        1    0.000    0.000    0.000    0.000 nodes.py:130(MappingNode)
        1    0.000    0.000    0.000    0.000 exceptions.py:21(SendfileNotAvailableError)
        1    0.000    0.000    0.000    0.000 _array_like.py:160(_UnknownType)
        1    0.000    0.000    0.000    0.000 comments.py:52(__init__)
        1    0.000    0.000    0.000    0.000 _factories.py:55(_TzStrFactory)
        1    0.000    0.000    0.000    0.000 mathtext.py:1950(NegFil)
        1    0.000    0.000    0.000    0.000 zipfile.py:641(LZMADecompressor)
        1    0.000    0.000    0.000    0.000 _parser.py:1378(_attr)
        1    0.000    0.000    0.000    0.000 optimization.py:213(Muller)
        1    0.000    0.000    0.000    0.000 datapipe.py:372(_MapDataPipeSerializationWrapper)
        1    0.000    0.000    0.000    0.000 extension.py:176(Library)
        1    0.000    0.000    0.000    0.000 kind.py:48(Kind)
        1    0.000    0.000    0.000    0.000 optimization.py:7(OptimizationMethods)
        1    0.000    0.000    0.000    0.000 dataframes.py:187(CaptureLikeMock)
        1    0.000    0.000    0.000    0.000 unicode.py:200(Cyrillic)
        1    0.000    0.000    0.000    0.000 assumptions.py:680(ManagedProperties)
        1    0.000    0.000    0.000    0.000 _typing.py:215(__init__)
        1    0.000    0.000    0.000    0.000 _script.py:352(ConstMap)
        1    0.000    0.000    0.000    0.000 connection.py:786(XmlListener)
        1    0.000    0.000    0.000    0.000 _optimize.py:1152(_LineSearchError)
        1    0.000    0.000    0.000    0.000 case.py:334(_OrderedChainMap)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1255(ResizeEvent)
        1    0.000    0.000    0.000    0.000 unicode.py:239(Kanji)
        1    0.000    0.000    0.000    0.000 core.py:5174(OneOrMore)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:706(Value)
        1    0.000    0.000    0.000    0.000 wavfile.py:27(WavFileWarning)
        1    0.000    0.000    0.000    0.000 geo.py:349(MollweideTransform)
        1    0.000    0.000    0.000    0.000 six.py:245(_MovedItems)
        1    0.000    0.000    0.000    0.000 mathtext.py:1430(Vbox)
        1    0.000    0.000    0.000    0.000 mathtext.py:1962(NegFilll)
        1    0.000    0.000    0.000    0.000 configparser.py:190(DuplicateSectionError)
        1    0.000    0.000    0.000    0.000 boolalg.py:443(__hash__)
        1    0.000    0.000    0.000    0.000 utils.py:77(_ntuple_from_first)
        1    0.000    0.000    0.000    0.000 _warnings_errors.py:33(FitError)
        1    0.000    0.000    0.000    0.000 patches.py:3077(CurveB)
        1    0.000    0.000    0.000    0.000 unicode.py:258(Katakana)
        1    0.000    0.000    0.000    0.000 abc.py:267(FileLoader)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:273(_ExtensionsSpecialForm)
        1    0.000    0.000    0.000    0.000 _mio5_params.py:268(MatlabOpaque)
        1    0.000    0.000    0.000    0.000 cyaml.py:158(CDumper)
        1    0.000    0.000    0.000    0.000 core.py:4789(_IndentGreater)
        1    0.000    0.000    0.000    0.000 _pep440.py:129(InvalidVersion)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1035(UnShiftA)
        1    0.000    0.000    0.000    0.000 facts.py:565(InconsistentAssumptions)
        1    0.000    0.000    0.000    0.000 zipfile.py:47(LargeZipFile)
        1    0.000    0.000    0.000    0.000 socket.py:211(_GiveupOnSendfile)
        1    0.000    0.000    0.000    0.000 __init__.py:201(DeferredCudaCallError)
        1    0.000    0.000    0.000    0.000 _endian.py:48(BigEndianStructure)
        1    0.000    0.000    0.000    0.000 numbers.py:2315(_MultisetHistogram)
        1    0.000    0.000    0.000    0.000 dataframes.py:311(CaptureMul)
        1    0.000    0.000    0.000    0.000 client.py:1507(BadStatusLine)
        1    0.000    0.000    0.000    0.000 context.py:302(ForkContext)
        1    0.000    0.000    0.000    0.000 __init__.py:735(OutsideDestinationError)
        1    0.000    0.000    0.000    0.000 fused.py:22(ConvReLU2d)
        1    0.000    0.000    0.000    0.000 _ltisys.py:2295(Bunch)
        1    0.000    0.000    0.000    0.000 simplex.py:96(InfeasibleLPError)
        1    0.000    0.000    0.000    0.000 _arffread.py:54(ArffError)
        1    0.000    0.000    0.000    0.000 datapipes.py:30(PerRowDataFramesPipe)
        1    0.000    0.000    0.000    0.000 core.py:5305(_NullToken)
        1    0.000    0.000    0.000    0.000 diophantine.py:676(InhomogeneousTernaryQuadratic)
        1    0.000    0.000    0.000    0.000 quadrature.py:389(GaussLegendre)
        1    0.000    0.000    0.000    0.000 _typing.py:22(GenericMeta)
        1    0.000    0.000    0.000    0.000 _csc.py:179(csc_array)
        1    0.000    0.000    0.000    0.000 _sparse.py:6(SparseABC)
        1    0.000    0.000    0.000    0.000 events.py:709(_RunningLoop)
        1    0.000    0.000    0.000    0.000 dispatcher.py:10(MDNotImplementedError)
        1    0.000    0.000    0.000    0.000 patches.py:2726(Bar)
        1    0.000    0.000    0.000    0.000 unicode.py:314(Arabic)
        1    0.000    0.000    0.000    0.000 animation.py:735(ImageMagickWriter)
        1    0.000    0.000    0.000    0.000 unix_events.py:798(_UnixSubprocessTransport)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:364(split_symbols_custom)
        1    0.000    0.000    0.000    0.000 errors.py:73(SymbolicValueError)
        1    0.000    0.000    0.000    0.000 _fortran.py:13(FortranEOFError)
        1    0.000    0.000    0.000    0.000 _factories.py:19(_TzFactory)
        1    0.000    0.000    0.000    0.000 optimization.py:458(Ridder)
        1    0.000    0.000    0.000    0.000 gzip.py:117(BadGzipFile)
        1    0.000    0.000    0.000    0.000 activation.py:1338(Tanhshrink)
        1    0.000    0.000    0.000    0.000 pathlib.py:844(PureWindowsPath)
        1    0.000    0.000    0.000    0.000 vq.py:84(ClusterError)
        1    0.000    0.000    0.000    0.000 patches.py:2139(Round)
        1    0.000    0.000    0.000    0.000 mathtext.py:1070(StixSansFonts)
        1    0.000    0.000    0.000    0.000 patches.py:2570(Angle)
        1    0.000    0.000    0.000    0.000 _python_dispatch.py:97(BaseTorchDispatchMode)
        2    0.000    0.000    0.000    0.000 groundtypes.py:22(__init__)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:313(PlotWriter)
        1    0.000    0.000    0.000    0.000 error.py:248(MantissaNoDotYAML1_1Warning)
        1    0.000    0.000    0.000    0.000 orderings.py:54(ReversedGradedLexOrder)
        1    0.000    0.000    0.000    0.000 datapipes.py:83(FilterDataFramesPipe)
        1    0.000    0.000    0.000    0.000 errors.py:21(OnnxExporterWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:14(_Await)
        1    0.000    0.000    0.000    0.000 _dia.py:604(dia_matrix)
        1    0.000    0.000    0.000    0.000 argparse.py:975(_StoreTrueAction)
        1    0.000    0.000    0.000    0.000 argparse.py:691(ArgumentDefaultsHelpFormatter)
        1    0.000    0.000    0.000    0.000 fetch.py:45(_MapDatasetFetcher)
        1    0.000    0.000    0.000    0.000 constraints.py:504(_PositiveDefinite)
        1    0.000    0.000    0.000    0.000 net_min_base.py:40(FxNetMinimizerRunFuncError)
        1    0.000    0.000    0.000    0.000 batchnorm.py:341(BatchNorm2d)
        1    0.000    0.000    0.000    0.000 {method 'isdecimal' of 'str' objects}
        1    0.000    0.000    0.000    0.000 dumper.py:71(SafeDumper)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1490(KeyEvent)
        1    0.000    0.000    0.000    0.000 enum.py:769(__getitem__)
        1    0.000    0.000    0.000    0.000 units.py:144(UnitError)
        1    0.000    0.000    0.000    0.000 factorials.py:281(MultiFactorial)
        1    0.000    0.000    0.000    0.000 dataframes.py:231(CaptureVariableAssign)
        1    0.000    0.000    0.000    0.000 dropout.py:237(FeatureAlphaDropout)
        1    0.000    0.000    0.000    0.000 comments.py:200(NotNone)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1078(_DOF_estimator_user)
        1    0.000    0.000    0.000    0.000 backend_managers.py:20(ToolTriggerEvent)
        1    0.000    0.000    0.000    0.000 argparse.py:952(_StoreConstAction)
        1    0.000    0.000    0.000    0.000 pickle.py:97(_Stop)
        1    0.000    0.000    0.000    0.000 hierarchy.py:157(ClusterWarning)
        1    0.000    0.000    0.000    0.000 ticker.py:414(StrMethodFormatter)
        1    0.000    0.000    0.000    0.000 unicode.py:154(LatinB)
        1    0.000    0.000    0.000    0.000 line.py:2834(Segment3D)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1247(MeijerUnShiftC)
        1    0.000    0.000    0.000    0.000 cache.py:45(__cacheit)
        1    0.000    0.000    0.000    0.000 errors.py:104(ObsoleteHeaderDefect)
        1    0.000    0.000    0.000    0.000 activation.py:1465(Softmax2d)
        1    0.000    0.000    0.000    0.000 nodes.py:107(CollectionNode)
        1    0.000    0.000    0.000    0.000 ticker.py:434(OldScalarFormatter)
        1    0.000    0.000    0.000    0.000 _array_api.py:582(<listcomp>)
        1    0.000    0.000    0.000    0.000 exceptions.py:4(ClosureFailure)
        1    0.000    0.000    0.000    0.000 datapipes.py:59(ShuffleDataFramesPipe)
        1    0.000    0.000    0.000    0.000 groundtypes.py:25(_GMPYRational)
        1    0.000    0.000    0.000    0.000 fused.py:10(_FusedModule)
        1    0.000    0.000    0.000    0.000 request.py:1416(UnknownHandler)
        1    0.000    0.000    0.000    0.000 isoparser.py:43(__init__)
        1    0.000    0.000    0.000    0.000 systems.py:37(ODENonlinearError)
        1    0.000    0.000    0.000    0.000 patches.py:3147(CurveFilledAB)
        1    0.000    0.000    0.000    0.000 configparser.py:264(InterpolationMissingOptionError)
        1    0.000    0.000    0.000    0.000 base_subprocess.py:281(ReadSubprocessPipeProto)
        1    0.000    0.000    0.000    0.000 index_methods.py:22(IndexConformanceException)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(ModuleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 mathtext.py:1944(Filll)
        1    0.000    0.000    0.000    0.000 ticker.py:2883(AutoLocator)
        1    0.000    0.000    0.000    0.000 _bvp.py:515(BVPResult)
        1    0.000    0.000    0.000    0.000 dumper.py:171(RoundTripDumper)
        1    0.000    0.000    0.000    0.000 conflict.py:3(AmbiguityWarning)
        1    0.000    0.000    0.000    0.000 _ufunc_config.py:360(_unspecified)
        1    0.000    0.000    0.000    0.000 _mio5.py:445(EmptyStructMarker)
        1    0.000    0.000    0.000    0.000 ticker.py:395(FormatStrFormatter)
        1    0.000    0.000    0.000    0.000 __init__.py:240(c_char_p)
        1    0.000    0.000    0.000    0.000 diophantine.py:918(InhomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 tokens.py:303(AnchorToken)
        1    0.000    0.000    0.000    0.000 unicode.py:336(Devanagari)
        1    0.000    0.000    0.000    0.000 core.py:720(NegativeStdDev)
        1    0.000    0.000    0.000    0.000 _parser.py:34(Value)
        1    0.000    0.000    0.000    0.000 optimization.py:159(Halley)
        1    0.000    0.000    0.000    0.000 threading.py:798(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 figure.py:154(AxesStack)
        1    0.000    0.000    0.000    0.000 function.py:113(BadSignatureError)
        1    0.000    0.000    0.000    0.000 dataframes.py:337(CaptureGetAttr)
        1    0.000    0.000    0.000    0.000 _elementwise_iterative_method.py:114(<listcomp>)
        1    0.000    0.000    0.000    0.000 core.py:830(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:67(LinAlgError)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1336(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 cyaml.py:54(CLoader)
        1    0.000    0.000    0.000    0.000 container.py:71(ErrorbarContainer)
        1    0.000    0.000    0.000    0.000 ticker.py:1138(LogFormatterExponent)
        1    0.000    0.000    0.000    0.000 sympify.py:49(CantSympify)
        1    0.000    0.000    0.000    0.000 dataframes.py:39(CaptureControl)
        1    0.000    0.000    0.000    0.000 geo.py:390(InvertedMollweideTransform)
        1    0.000    0.000    0.000    0.000 _parser.py:661(_result)
        1    0.000    0.000    0.000    0.000 utils.py:24(InvalidWheelFilename)
        1    0.000    0.000    0.000    0.000 loader.py:39(SafeLoader)
        1    0.000    0.000    0.000    0.000 units.py:54(ConversionError)
        1    0.000    0.000    0.000    0.000 libmpf.py:43(ComplexResult)
        1    0.000    0.000    0.000    0.000 fused.py:58(ConvBn2d)
        1    0.000    0.000    0.000    0.000 outputs.py:4533(VaspParseError)
        1    0.000    0.000    0.000    0.000 composer.py:27(ComposerError)
        1    0.000    0.000    0.000    0.000 _static.py:145(SpecifierSet)
        1    0.000    0.000    0.000    0.000 configparser.py:216(DuplicateOptionError)
        1    0.000    0.000    0.000    0.000 para4band.py:556(<listcomp>)
        1    0.000    0.000    0.000    0.000 _nonlin.py:955(BroydenSecond)
        1    0.000    0.000    0.000    0.000 _spectral.py:11(_NoConvergence)
        1    0.000    0.000    0.000    0.000 exceptions.py:6(MatrixError)
        1    0.000    0.000    0.000    0.000 core.py:148(MAError)
        1    0.000    0.000    0.000    0.000 _idl.py:153(ObjectPointer)
        1    0.000    0.000    0.000    0.000 bezier.py:25(NonIntersectingPathException)
        1    0.000    0.000    0.000    0.000 fused.py:31(ConvReLU3d)
        1    0.000    0.000    0.000    0.000 serialization.py:52(SourceChangeWarning)
        1    0.000    0.000    0.000    0.000 pathlib.py:325(_TerminatingSelector)
        1    0.000    0.000    0.000    0.000 scalarstring.py:93(PlainScalarString)
        1    0.000    0.000    0.000    0.000 evalf.py:65(PrecisionExhausted)
        1    0.000    0.000    0.000    0.000 util.py:385(ForkAwareLocal)
        1    0.000    0.000    0.000    0.000 pathlib.py:1391(PosixPath)
        1    0.000    0.000    0.000    0.000 io.py:340(FileLockException)
        1    0.000    0.000    0.000    0.000 geo.py:322(InvertedHammerTransform)
        1    0.000    0.000    0.000    0.000 process.py:397(_MainProcess)
        1    0.000    0.000    0.000    0.000 exceptions.py:17(InvalidStateError)
        1    0.000    0.000    0.000    0.000 optimization.py:357(Illinois)
        1    0.000    0.000    0.000    0.000 util.py:108(_platform_supports_abstract_sockets)
        1    0.000    0.000    0.000    0.000 <string>:1(__create_fn__)
        1    0.000    0.000    0.000    0.000 _multivariate.py:4243(unitary_group_frozen)
        1    0.000    0.000    0.000    0.000 markers.py:39(UndefinedComparison)
        1    0.000    0.000    0.000    0.000 polyerrors.py:57(OperationNotSupported)
        1    0.000    0.000    0.000    0.000 client.py:1470(UnknownProtocol)
        1    0.000    0.000    0.000    0.000 types.py:26(SymInt)
        2    0.000    0.000    0.000    0.000 ops.py:173(no_complex_result)
        1    0.000    0.000    0.000    0.000 composition.py:1396(CompositionError)
        1    0.000    0.000    0.000    0.000 dist.py:1119(DistDeprecationWarning)
        1    0.000    0.000    0.000    0.000 codeprinter.py:37(PrintMethodNotImplementedError)
        1    0.000    0.000    0.000    0.000 fused.py:94(ConvBnReLU3d)
        1    0.000    0.000    0.000    0.000 request.py:1061(ProxyBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 profiler_util.py:613(StringTable)
        1    0.000    0.000    0.000    0.000 container.py:103(StemContainer)
        1    0.000    0.000    0.000    0.000 emitter.py:28(EmitterError)
        1    0.000    0.000    0.000    0.000 _subplots.py:218(<genexpr>)
        1    0.000    0.000    0.000    0.000 bdist.py:21(deprecated)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1235(BoolFormat)
        1    0.000    0.000    0.000    0.000 legend_handler.py:208(HandlerLine2D)
        1    0.000    0.000    0.000    0.000 font_manager.py:957(JSONEncoder)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:828(ContentDisposition)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1298(MeijerUnShiftD)
        1    0.000    0.000    0.000    0.000 fused.py:76(ConvBnReLU2d)
        1    0.000    0.000    0.000    0.000 dataframes.py:298(CaptureAdd)
        1    0.000    0.000    0.000    0.000 {method 'clear' of 'list' objects}
        1    0.000    0.000    0.000    0.000 optimization.py:290(Bisection)
        1    0.000    0.000    0.000    0.000 utils.py:117(_lazy_property_and_property)
        1    0.000    0.000    0.000    0.000 __init__.py:11(_PyAwaitMeta)
        1    0.000    0.000    0.000    0.000 scanner.py:2037(BlankLineComment)
        1    0.000    0.000    0.000    0.000 unicode.py:148(LatinA)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1200(MeijerUnShiftB)
        1    0.000    0.000    0.000    0.000 __init__.py:256(c_wchar_p)
        1    0.000    0.000    0.000    0.000 configparser.py:284(InterpolationDepthError)
        1    0.000    0.000    0.000    0.000 fused.py:123(LinearBn1d)
        1    0.000    0.000    0.000    0.000 ops.py:861(NotUpcast)
        1    0.000    0.000    0.000    0.000 ticker.py:1202(LogFormatterSciNotation)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:845(MsgID)
        1    0.000    0.000    0.000    0.000 constraints.py:481(_Symmetric)
        1    0.000    0.000    0.000    0.000 forward_ad.py:108(UnpackedDualTensor)
        1    0.000    0.000    0.000    0.000 _linesearch.py:23(LineSearchWarning)
        1    0.000    0.000    0.000    0.000 main.py:773(<listcomp>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1840(Vrule)
        1    0.000    0.000    0.000    0.000 results.py:19(<genexpr>)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1140(MeijerShiftC)
        1    0.000    0.000    0.000    0.000 _static.py:108(Dict)
        1    0.000    0.000    0.000    0.000 threading.py:1400(_MainThread)
        1    0.000    0.000    0.000    0.000 scanner.py:57(SimpleKey)
        1    0.000    0.000    0.000    0.000 splitter_base.py:182(FxNetSplitterInternalError)
        1    0.000    0.000    0.000    0.000 legend_handler.py:412(HandlerPathCollection)
        1    0.000    0.000    0.000    0.000 _coo.py:1352(coo_array)
        1    0.000    0.000    0.000    0.000 transforms.py:1516(InverseHankelTransform)
        1    0.000    0.000    0.000    0.000 shutil.py:61(Error)
        1    0.000    0.000    0.000    0.000 patches.py:3294(BracketB)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(BadRequiredStrength)
        1    0.000    0.000    0.000    0.000 function.py:103(PoleError)
        1    0.000    0.000    0.000    0.000 constraints.py:303(_Real)
        1    0.000    0.000    0.000    0.000 unicode.py:322(Hebrew)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1002(MultOperator)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1200(InverseHyperbolicFunction)
        1    0.000    0.000    0.000    0.000 _threadsafety.py:9(ReentrancyError)
        1    0.000    0.000    0.000    0.000 frontend.py:114(NotSupportedError)
        1    0.000    0.000    0.000    0.000 tokens.py:312(TagToken)
        1    0.000    0.000    0.000    0.000 logic.py:391(Or)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:354(deHoog)
        1    0.000    0.000    0.000    0.000 _diagnostic.py:107(background_context)
        1    0.000    0.000    0.000    0.000 __init__.py:752(LinkOutsideDestinationError)
        1    0.000    0.000    0.000    0.000 _elffile.py:19(ELFInvalid)
        1    0.000    0.000    0.000    0.000 _docscrape.py:615(ObjDoc)
        1    0.000    0.000    0.000    0.000 polyoptions.py:61(OptionType)
        1    0.000    0.000    0.000    0.000 _script.py:323(_CachedForward)
        1    0.000    0.000    0.000    0.000 resolver.py:135(<dictcomp>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:721(ConfigureSubplotsBase)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:157(JitTypeTraceStore)
        1    0.000    0.000    0.000    0.000 index_tricks.py:537(CClass)
        1    0.000    0.000    0.000    0.000 errors.py:37(RemovedConfigError)
        1    0.000    0.000    0.000    0.000 argparse.py:1144(_ChoicesPseudoAction)
        1    0.000    0.000    0.000    0.000 fused.py:85(ConvBn3d)
        1    0.000    0.000    0.000    0.000 constraints.py:493(_PositiveSemidefinite)
        1    0.000    0.000    0.000    0.000 repmatrix.py:186(<genexpr>)
        1    0.000    0.000    0.000    0.000 distributed_c10d.py:401(group)
        1    0.000    0.000    0.000    0.000 dataframes.py:169(CaptureF)
        1    0.000    0.000    0.000    0.000 _dist_ver.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _optimize.py:112(OptimizeResult)
        1    0.000    0.000    0.000    0.000 _optimize.py:157(OptimizeWarning)
        1    0.000    0.000    0.000    0.000 scalarstring.py:84(DoubleQuotedScalarString)
        1    0.000    0.000    0.000    0.000 case.py:33(_ShouldStop)
        1    0.000    0.000    0.000    0.000 _base.py:49(CancelledError)
        1    0.000    0.000    0.000    0.000 operations.py:483(ShortCircuit)
        1    0.000    0.000    0.000    0.000 polyoptions.py:44(Flag)
        1    0.000    0.000    0.000    0.000 indexed.py:120(IndexException)
        1    0.000    0.000    0.000    0.000 context.py:14(ProcessError)
        1    0.000    0.000    0.000    0.000 Image.py:70(DecompressionBombWarning)
        1    0.000    0.000    0.000    0.000 _memory_viz.py:113(__init__)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:333(_mode_formula)
        1    0.000    0.000    0.000    0.000 scalarint.py:89(OctalInt)
        1    0.000    0.000    0.000    0.000 _pep440.py:150(<lambda>)
        1    0.000    0.000    0.000    0.000 argparse.py:1242(_ExtendAction)
        1    0.000    0.000    0.000    0.000 events.py:101(CollectionEndEvent)
        1    0.000    0.000    0.000    0.000 loader.py:55(Loader)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:216(SqrtdenestStopIteration)
        1    0.000    0.000    0.000    0.000 pathlib.py:347(_WildcardSelector)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:98(ExponentialFloat)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:858(InvalidMessageID)
        1    0.000    0.000    0.000    0.000 __init__.py:273(ExtractError)
        1    0.000    0.000    0.000    0.000 _dia.py:528(dia_array)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:39(GaloisGroupException)
        1    0.000    0.000    0.000    0.000 calendar.py:162(setfirstweekday)
        1    0.000    0.000    0.000    0.000 symbolic_opset13.py:23(_apply_params)
        1    0.000    0.000    0.000    0.000 hb.py:30(MalformedHeader)
        1    0.000    0.000    0.000    0.000 events.py:123(StreamEndEvent)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:1129(MeijerShiftB)
        1    0.000    0.000    0.000    0.000 parse.py:323(SplitResult)
        1    0.000    0.000    0.000    0.000 tokens.py:210(DocumentStartToken)
        1    0.000    0.000    0.000    0.000 _arffread.py:58(ParseArffError)
        1    0.000    0.000    0.000    0.000 threading.py:1199(daemon)
        1    0.000    0.000    0.000    0.000 _internal.py:244(c_void_p)
        1    0.000    0.000    0.000    0.000 _base.py:28(SparseEfficiencyWarning)
        1    0.000    0.000    0.000    0.000 solveset.py:794(_SolveTrig1Error)
        1    0.000    0.000    0.000    0.000 transforms.py:1454(HankelTransform)
        1    0.000    0.000    0.000    0.000 inverselaplace.py:542(Cohen)
        1    0.000    0.000    0.000    0.000 dropout.py:104(Dropout2d)
        1    0.000    0.000    0.000    0.000 core.py:156(MaskError)
        1    0.000    0.000    0.000    0.000 {built-in method _thread._set_sentinel}
        1    0.000    0.000    0.000    0.000 patches.py:2428(SimpleEvent)
        1    0.000    0.000    0.000    0.000 exceptions.py:284(ParseFatalException)
        1    0.000    0.000    0.000    0.000 ordinals.py:253(OrdinalZero)
        1    0.000    0.000    0.000    0.000 iterables.py:3015(NotIterable)
        1    0.000    0.000    0.000    0.000 errors.py:12(MessageParseError)
        1    0.000    0.000    0.000    0.000 configparser.py:243(NoOptionError)
        1    0.000    0.000    0.000    0.000 _static.py:65(Tuple)
        1    0.000    0.000    0.000    0.000 ctx_base.py:21(Context)
        1    0.000    0.000    0.000    0.000 facts.py:252(TautologyDetected)
        1    0.000    0.000    0.000    0.000 constraints.py:427(_LowerTriangular)
        1    0.000    0.000    0.000    0.000 _ccallback.py:9(CData)
        1    0.000    0.000    0.000    0.000 diophantine.py:1107(CubicThue)
        1    0.000    0.000    0.000    0.000 dropout.py:195(AlphaDropout)
        1    0.000    0.000    0.000    0.000 extras.py:281(_fromnxfunction_seq)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:943(_InvalidEwError)
        2    0.000    0.000    0.000    0.000 _compression.py:36(readable)
        1    0.000    0.000    0.000    0.000 _endian.py:55(BigEndianUnion)
        1    0.000    0.000    0.000    0.000 diophantine.py:938(HomogeneousGeneralQuadratic)
        1    0.000    0.000    0.000    0.000 exceptions.py:19(NonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 identification.py:13(IdentificationMethods)
        1    0.000    0.000    0.000    0.000 headerregistry.py:271(UniqueUnstructuredHeader)
        1    0.000    0.000    0.000    0.000 __init__.py:11(DeprecatedTzFormatWarning)
        1    0.000    0.000    0.000    0.000 _parser.py:39(Op)
        1    0.000    0.000    0.000    0.000 queues.py:16(QueueFull)
        1    0.000    0.000    0.000    0.000 coreerrors.py:10(NonCommutativeExpression)
        1    0.000    0.000    0.000    0.000 rl.py:83(sort)
        1    0.000    0.000    0.000    0.000 _miobase.py:24(MatWriteError)
        1    0.000    0.000    0.000    0.000 dates.py:1677(SecondLocator)
        1    0.000    0.000    0.000    0.000 patches.py:3129(CurveFilledB)
        1    0.000    0.000    0.000    0.000 __init__.py:747(AbsoluteLinkError)
        1    0.000    0.000    0.000    0.000 dates.py:1657(MinuteLocator)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:197(Phrase)
        1    0.000    0.000    0.000    0.000 configparser.py:254(InterpolationError)
        1    0.000    0.000    0.000    0.000 integerring.py:51(__init__)
        1    0.000    0.000    0.000    0.000 six.py:402(Module_six_moves_urllib_request)
        1    0.000    0.000    0.000    0.000 util.py:102(_FifoCache)
        1    0.000    0.000    0.000    0.000 fused.py:140(LinearTanh)
        1    0.000    0.000    0.000    0.000 lr_scheduler.py:169(_LRScheduler)
        1    0.000    0.000    0.000    0.000 __init__.py:13(_PyFutureMeta)
        1    0.000    0.000    0.000    0.000 dumper.py:121(Dumper)
        1    0.000    0.000    0.000    0.000 headerregistry.py:397(UniqueSingleAddressHeader)
        1    0.000    0.000    0.000    0.000 errors.py:20(DistutilsError)
        1    0.000    0.000    0.000    0.000 core.py:115(switch)
        1    0.000    0.000    0.000    0.000 __init__.py:67(_256Bit)
        1    0.000    0.000    0.000    0.000 __init__.py:73(_96Bit)
        1    0.000    0.000    0.000    0.000 fused.py:131(LinearLeakyReLU)
        1    0.000    0.000    0.000    0.000 package_importer.py:658(_PathNode)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2223(_TypeFormForm)
        1    0.000    0.000    0.000    0.000 representer.py:48(RepresenterError)
        1    0.000    0.000    0.000    0.000 patches.py:3111(CurveFilledA)
        1    0.000    0.000    0.000    0.000 exceptions.py:40(UnknownEditVariable)
        1    0.000    0.000    0.000    0.000 _bsr.py:660(bsr_array)
        1    0.000    0.000    0.000    0.000 _bsr.py:771(bsr_matrix)
        1    0.000    0.000    0.000    0.000 mock.py:2345(AsyncMock)
        1    0.000    0.000    0.000    0.000 _static.py:61(Str)
        1    0.000    0.000    0.000    0.000 std.py:52(TqdmExperimentalWarning)
        1    0.000    0.000    0.000    0.000 _parser.py:1608(UnknownTimezoneWarning)
        1    0.000    0.000    0.000    0.000 client.py:1514(LineTooLong)
        1    0.000    0.000    0.000    0.000 errors.py:39(CheckerError)
        1    0.000    0.000    0.000    0.000 core.py:270(ParseError)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:193(UnstructuredTokenList)
        1    0.000    0.000    0.000    0.000 release.py:1(<module>)
        1    0.000    0.000    0.000    0.000 frontend.py:131(FrontendTypeError)
        1    0.000    0.000    0.000    0.000 scalarfloat.py:103(ExponentialCapsFloat)
        1    0.000    0.000    0.000    0.000 _typing.py:134(DTypesIntegral)
        1    0.000    0.000    0.000    0.000 ivp.py:24(OdeResult)
        1    0.000    0.000    0.000    0.000 _static.py:69(List)
        1    0.000    0.000    0.000    0.000 function.py:583(_nested_map)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:3403(Buffer)
        1    0.000    0.000    0.000    0.000 decorator.py:46(get_init)
        1    0.000    0.000    0.000    0.000 _csr.py:437(csr_matrix)
        1    0.000    0.000    0.000    0.000 _symbolic_trace.py:895(_PatchedFnSetAttr)
        1    0.000    0.000    0.000    0.000 constructor.py:47(ConstructorError)
        1    0.000    0.000    0.000    0.000 odes.py:4(ODEMethods)
        1    0.000    0.000    0.000    0.000 galoisgroups.py:35(MaxTriesException)
        1    0.000    0.000    0.000    0.000 nodes.py:125(SequenceNode)
        1    0.000    0.000    0.000    0.000 headerregistry.py:382(UniqueAddressHeader)
        1    0.000    0.000    0.000    0.000 errors.py:9(CompileError)
        1    0.000    0.000    0.000    0.000 error.py:48(FileMark)
        1    0.000    0.000    0.000    0.000 six.py:340(Module_six_moves_urllib_parse)
        1    0.000    0.000    0.000    0.000 polyoptions.py:658(Polys)
        1    0.000    0.000    0.000    0.000 package_importer.py:675(_ExternNode)
        1    0.000    0.000    0.000    0.000 exceptions.py:24(NonPositiveDefiniteMatrixError)
        1    0.000    0.000    0.000    0.000 config.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tarfile.py:297(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 json.py:906(MSONError)
        1    0.000    0.000    0.000    0.000 dates.py:1611(DayLocator)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:212(Token)
        1    0.000    0.000    0.000    0.000 exceptions.py:15(NonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 parse.py:347(ParseResultBytes)
        1    0.000    0.000    0.000    0.000 setupcfg.py:779(_DeprecatedConfig)
        1    0.000    0.000    0.000    0.000 resolver.py:102(ResolverError)
        1    0.000    0.000    0.000    0.000 loader.py:71(RoundTripLoader)
        1    0.000    0.000    0.000    0.000 error.py:109(CommentMark)
        1    0.000    0.000    0.000    0.000 misc.py:13(Undecidable)
        1    0.000    0.000    0.000    0.000 tarfile.py:273(ReadError)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1699(StateSpaceDiscrete)
        1    0.000    0.000    0.000    0.000 exceptions.py:33(DMFormatError)
        1    0.000    0.000    0.000    0.000 alphabets.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:3308(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 _iotools.py:437(ConversionWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:189(DTypePromotionError)
        1    0.000    0.000    0.000    0.000 __init__.py:169(c_ushort)
        1    0.000    0.000    0.000    0.000 __init__.py:260(IgnoredKeywordWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:70(_128Bit)
        1    0.000    0.000    0.000    0.000 polyerrors.py:74(HomomorphismFailed)
        1    0.000    0.000    0.000    0.000 tarfile.py:270(ExtractError)
        1    0.000    0.000    0.000    0.000 shutil.py:67(SpecialFileError)
        1    0.000    0.000    0.000    0.000 scalarint.py:118(DecimalInt)
        1    0.000    0.000    0.000    0.000 _lil.py:570(lil_matrix)
        1    0.000    0.000    0.000    0.000 __init__.py:14(is_available)
        1    0.000    0.000    0.000    0.000 _iotools.py:421(ConverterError)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:28(BadFortranFormat)
        1    0.000    0.000    0.000    0.000 polyerrors.py:122(UnsolvableFactorError)
        1    0.000    0.000    0.000    0.000 _endian.py:34(_swapped_struct_meta)
        1    0.000    0.000    0.000    0.000 backend_tools.py:424(ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 legend_handler.py:423(HandlerCircleCollection)
        1    0.000    0.000    0.000    0.000 exceptions.py:23(DMDomainError)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 error.py:228(ReusedAnchorWarning)
        1    0.000    0.000    0.000    0.000 six.py:382(Module_six_moves_urllib_error)
        1    0.000    0.000    0.000    0.000 animation.py:674(AVConvWriter)
        1    0.000    0.000    0.000    0.000 six.py:459(Module_six_moves_urllib_response)
        1    0.000    0.000    0.000    0.000 exceptions.py:28(DMNotAField)
        1    0.000    0.000    0.000    0.000 facts.py:451(<setcomp>)
        1    0.000    0.000    0.000    0.000 serializer.py:29(SerializerError)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:442(__init__)
        1    0.000    0.000    0.000    0.000 function.py:118(BadArgumentsError)
        1    0.000    0.000    0.000    0.000 errors.py:33(OnnxExporterError)
        1    0.000    0.000    0.000    0.000 _iotools.py:429(ConverterLockError)
        1    0.000    0.000    0.000    0.000 tokens.py:256(FlowMappingStartToken)
        1    0.000    0.000    0.000    0.000 scalarint.py:109(HexCapsInt)
        1    0.000    0.000    0.000    0.000 configparser.py:276(InterpolationSyntaxError)
        1    0.000    0.000    0.000    0.000 discovery.py:263(FlatLayoutModuleFinder)
        1    0.000    0.000    0.000    0.000 constraints.py:438(_LowerCholesky)
        1    0.000    0.000    0.000    0.000 error.py:232(UnsafeLoaderWarning)
        1    0.000    0.000    0.000    0.000 errors.py:5(PreprocessError)
        1    0.000    0.000    0.000    0.000 animation.py:685(AVConvFileWriter)
        1    0.000    0.000    0.000    0.000 _csc.py:274(csc_matrix)
        1    0.000    0.000    0.000    0.000 _typing.py:26(Integer)
        1    0.000    0.000    0.000    0.000 events.py:248(SequenceEndEvent)
        1    0.000    0.000    0.000    0.000 polyerrors.py:118(UnificationFailed)
        1    0.000    0.000    0.000    0.000 constraints.py:466(_Square)
        1    0.000    0.000    0.000    0.000 shutil.py:77(RegistryError)
        1    0.000    0.000    0.000    0.000 constraints.py:452(_CorrCholesky)
        1    0.000    0.000    0.000    0.000 _base.py:651(BrokenExecutor)
        1    0.000    0.000    0.000    0.000 _monkeytype_config.py:161(JitTypeTraceConfig)
        1    0.000    0.000    0.000    0.000 extras.py:319(_fromnxfunction_allargs)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:91(_take_dispatcher)
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 tokens.py:231(StreamEndToken)
        1    0.000    0.000    0.000    0.000 utils.py:30(InvalidSdistFilename)
        1    0.000    0.000    0.000    0.000 exceptions.py:39(StructureError)
        1    0.000    0.000    0.000    0.000 client.py:1475(UnknownTransferEncoding)
        1    0.000    0.000    0.000    0.000 __init__.py:279(CompressionError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1325(DejaVuSerifFontConstants)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:834(ContentTransferEncoding)
        1    0.000    0.000    0.000    0.000 threading.py:832(<listcomp>)
        1    0.000    0.000    0.000    0.000 exceptions.py:74(VisibleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 tokens.py:261(FlowSequenceEndToken)
        1    0.000    0.000    0.000    0.000 __init__.py:79(_64Bit)
        1    0.000    0.000    0.000    0.000 parse.py:328(ParseResult)
        1    0.000    0.000    0.000    0.000 random.py:811(seed)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:208(Atom)
        1    0.000    0.000    0.000    0.000 case.py:38(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 graph.py:419(_Handle)
        1    0.000    0.000    0.000    0.000 scanner.py:53(ScannerError)
        1    0.000    0.000    0.000    0.000 tokens.py:215(DocumentEndToken)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:503(DotAtom)
        1    0.000    0.000    0.000    0.000 boolalg.py:371(__eq__)
        1    0.000    0.000    0.000    0.000 context.py:17(BufferTooShort)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1274(CloseEvent)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:458(_ExperimentalConfiguration)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:685(InvalidParameter)
        1    0.000    0.000    0.000    0.000 __init__.py:276(ReadError)
        1    0.000    0.000    0.000    0.000 extras.py:294(_fromnxfunction_args)
        1    0.000    0.000    0.000    0.000 backend_tools.py:439(ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 context.py:319(suppress)
        1    0.000    0.000    0.000    0.000 exceptions.py:61(BrokenBarrierError)
        1    0.000    0.000    0.000    0.000 parse.py:334(DefragResultBytes)
        1    0.000    0.000    0.000    0.000 _fortran.py:24(FortranFormattingError)
        1    0.000    0.000    0.000    0.000 tokens.py:246(BlockEndToken)
        1    0.000    0.000    0.000    0.000 events.py:264(MappingEndEvent)
        1    0.000    0.000    0.000    0.000 markers.py:45(UndefinedEnvironmentName)
        1    0.000    0.000    0.000    0.000 client.py:1459(HTTPException)
        1    0.000    0.000    0.000    0.000 proxy.py:317(TraceError)
        1    0.000    0.000    0.000    0.000 errors.py:24(MultipartConversionError)
        1    0.000    0.000    0.000    0.000 pickle.py:77(PicklingError)
        1    0.000    0.000    0.000    0.000 tokens.py:266(FlowMappingEndToken)
        1    0.000    0.000    0.000    0.000 tokens.py:289(FlowEntryToken)
        1    0.000    0.000    0.000    0.000 streamplot.py:416(InvalidIndexError)
        1    0.000    0.000    0.000    0.000 _base.py:55(InvalidStateError)
        1    0.000    0.000    0.000    0.000 __init__.py:76(_80Bit)
        1    0.000    0.000    0.000    0.000 _ltisys.py:1151(ZerosPolesGainDiscrete)
        1    0.000    0.000    0.000    0.000 tokens.py:279(ValueToken)
        1    0.000    0.000    0.000    0.000 parser.py:98(ParserError)
        1    0.000    0.000    0.000    0.000 errors.py:51(PackageDiscoveryError)
        1    0.000    0.000    0.000    0.000 tokens.py:271(KeyToken)
        1    0.000    0.000    0.000    0.000 errors.py:73(InvalidBase64CharactersDefect)
        1    0.000    0.000    0.000    0.000 six.py:480(Module_six_moves_urllib_robotparser)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:550(ObsLocalPart)
        1    0.000    0.000    0.000    0.000 warnings.py:99(SetuptoolsDeprecationWarning)
        1    0.000    0.000    0.000    0.000 exceptions.py:85(TooHardError)
        1    0.000    0.000    0.000    0.000 tokens.py:241(BlockMappingStartToken)
        1    0.000    0.000    0.000    0.000 headerregistry.py:322(UniqueDateHeader)
        1    0.000    0.000    0.000    0.000 __init__.py:727(FilterError)
        1    0.000    0.000    0.000    0.000 _typing.py:30(Boolean)
        1    0.000    0.000    0.000    0.000 exceptions.py:20(_ExceptionWordUnicodeSet)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:840(HeaderLabel)
        1    0.000    0.000    0.000    0.000 polyerrors.py:71(ModularGCDFailed)
        1    0.000    0.000    0.000    0.000 tokens.py:251(FlowSequenceStartToken)
        1    0.000    0.000    0.000    0.000 argparse.py:774(ArgumentTypeError)
        1    0.000    0.000    0.000    0.000 errors.py:87(InvalidHeaderDefect)
        1    0.000    0.000    0.000    0.000 unicode.py:304(CJK)
        1    0.000    0.000    0.000    0.000 errors.py:41(RemovedCommandError)
        1    0.000    0.000    0.000    0.000 errors.py:26(DistutilsModuleError)
        1    0.000    0.000    0.000    0.000 __init__.py:173(c_long)
        1    0.000    0.000    0.000    0.000 error.py:168(YAMLStreamError)
        1    0.000    0.000    0.000    0.000 exceptions.py:47(MissingUnityError)
        1    0.000    0.000    0.000    0.000 boolalg.py:446(__eq__)
        1    0.000    0.000    0.000    0.000 errors.py:76(InvalidBase64LengthDefect)
        1    0.000    0.000    0.000    0.000 polyerrors.py:78(IsomorphismFailed)
        1    0.000    0.000    0.000    0.000 constructor.py:51(DuplicateKeyFutureWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:282(StreamError)
        1    0.000    0.000    0.000    0.000 facts.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 errors.py:41(NoBoundaryInMultipartDefect)
        1    0.000    0.000    0.000    0.000 std.py:32(TqdmTypeError)
        1    0.000    0.000    0.000    0.000 std.py:62(TqdmMonitorWarning)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath._set_madvise_hugepage}
        1    0.000    0.000    0.000    0.000 __init__.py:202(c_longdouble)
        1    0.000    0.000    0.000    0.000 exceptions.py:38(DMNonInvertibleMatrixError)
        1    0.000    0.000    0.000    0.000 _script.py:328(ScriptWarning)
        1    0.000    0.000    0.000    0.000 tokens.py:236(BlockSequenceStartToken)
        1    0.000    0.000    0.000    0.000 exceptions.py:53(DMNonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 _miobase.py:28(MatReadWarning)
        1    0.000    0.000    0.000    0.000 bdist.py:22(<lambda>)
        1    0.000    0.000    0.000    0.000 errors.py:23(UnknownFileType)
        1    0.000    0.000    0.000    0.000 errors.py:13(LibError)
        1    0.000    0.000    0.000    0.000 tarfile.py:276(CompressionError)
        1    0.000    0.000    0.000    0.000 shutil.py:71(ExecError)
        1    0.000    0.000    0.000    0.000 errors.py:107(NonASCIILocalPartDefect)
        1    0.000    0.000    0.000    0.000 parse.py:342(SplitResultBytes)
        1    0.000    0.000    0.000    0.000 exceptions.py:291(ParseSyntaxException)
        1    0.000    0.000    0.000    0.000 __init__.py:288(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 _typing.py:151(DTypesNumeric)
        1    0.000    0.000    0.000    0.000 exceptions.py:43(DMRankError)
        1    0.000    0.000    0.000    0.000 errors.py:56(MissingHeaderBodySeparatorDefect)
        1    0.000    0.000    0.000    0.000 Image.py:74(DecompressionBombError)
        1    0.000    0.000    0.000    0.000 errors.py:64(InvalidMultipartContentTransferEncodingDefect)
        1    0.000    0.000    0.000    0.000 _distribution_infrastructure.py:1823(tol)
        1    0.000    0.000    0.000    0.000 errors.py:33(DistutilsClassError)
        1    0.000    0.000    0.000    0.000 errors.py:63(DistutilsOptionError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:67(HeuristicGCDFailed)
        1    0.000    0.000    0.000    0.000 context.py:306(SpawnContext)
        1    0.000    0.000    0.000    0.000 errors.py:61(MultipartInvariantViolationDefect)
        1    0.000    0.000    0.000    0.000 _utils_internal.py:37(prepare_multiprocessing_environment)
        1    0.000    0.000    0.000    0.000 resolver.py:294(Resolver)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:200(Word)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:512(NoFoldLiteral)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:862(Header)
        1    0.000    0.000    0.000    0.000 _functools.py:83(<lambda>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1329(DejaVuSansFontConstants)
        1    0.000    0.000    0.000    0.000 errors.py:50(FirstHeaderLineIsContinuationDefect)
        1    0.000    0.000    0.000    0.000 errors.py:53(MisplacedEnvelopeHeaderDefect)
        1    0.000    0.000    0.000    0.000 errors.py:70(InvalidBase64PaddingDefect)
        1    0.000    0.000    0.000    0.000 __init__.py:82(_32Bit)
        1    0.000    0.000    0.000    0.000 _miobase.py:31(MatWriteWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:285(HeaderError)
        1    0.000    0.000    0.000    0.000 repmatrix.py:201(<genexpr>)
        1    0.000    0.000    0.000    0.000 errors.py:67(UndecodableBytesDefect)
        1    0.000    0.000    0.000    0.000 errors.py:90(HeaderMissingRequiredValue)
        1    0.000    0.000    0.000    0.000 constructor.py:58(DuplicateKeyError)
        1    0.000    0.000    0.000    0.000 errors.py:47(CloseBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 errors.py:18(LinkError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1370(MathTextWarning)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:854(MessageID)
        1    0.000    0.000    0.000    0.000 __init__.py:198(c_double)
        1    0.000    0.000    0.000    0.000 errors.py:107(DistutilsByteCompileError)
        1    0.000    0.000    0.000    0.000 errors.py:44(StartBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 pyprojecttoml.py:465(_ToolsTypoInMetadata)
        1    0.000    0.000    0.000    0.000 _header_value_parser.py:204(CFWSList)
        1    0.000    0.000    0.000    0.000 readers.py:27(files)
        1    0.000    0.000    0.000    0.000 dataframes.py:367(CaptureDataFrame)
        1    0.000    0.000    0.000    0.000 __init__.py:85(_16Bit)
        1    0.000    0.000    0.000    0.000 __init__.py:88(_8Bit)
        1    0.000    0.000    0.000    0.000 shutil.py:81(_GiveupOnFastCopy)
        1    0.000    0.000    0.000    0.000 __init__.py:294(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 exceptions.py:48(DMShapeError)
        1    0.000    0.000    0.000    0.000 tarfile.py:282(HeaderError)
        1    0.000    0.000    0.000    0.000 exceptions.py:58(DMValueError)
        1    0.000    0.000    0.000    0.000 _typing.py:156(DTypesAll)
        1    0.000    0.000    0.000    0.000 __init__.py:297(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 more.py:3661(AbortThread)
        1    0.000    0.000    0.000    0.000 errors.py:16(HeaderParseError)
        1    0.000    0.000    0.000    0.000 shutil.py:74(ReadError)
        1    0.000    0.000    0.000    0.000 errors.py:28(CharsetError)
        1    0.000    0.000    0.000    0.000 pickle.py:84(UnpicklingError)
        1    0.000    0.000    0.000    0.000 error.py:274(YAMLFutureWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:291(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:102(NotReversible)
        1    0.000    0.000    0.000    0.000 context.py:23(AuthenticationError)
        1    0.000    0.000    0.000    0.000 tarfile.py:288(TruncatedHeaderError)
        1    0.000    0.000    0.000    0.000 hb.py:34(LineOverflow)
        1    0.000    0.000    0.000    0.000 errors.py:42(DistutilsGetoptError)
        1    0.000    0.000    0.000    0.000 __init__.py:223(c_ubyte)
        1    0.000    0.000    0.000    0.000 errors.py:20(BoundaryError)
        1    0.000    0.000    0.000    0.000 errors.py:89(DistutilsExecError)
        1    0.000    0.000    0.000    0.000 tarfile.py:285(EmptyHeaderError)
        1    0.000    0.000    0.000    0.000 std.py:57(TqdmDeprecationWarning)
        1    0.000    0.000    0.000    0.000 galois_resolvents.py:43(ResolventException)
        1    0.000    0.000    0.000    0.000 errors.py:112(InvalidDateDefect)
        1    0.000    0.000    0.000    0.000 std.py:36(TqdmKeyError)
        1    0.000    0.000    0.000    0.000 context.py:20(TimeoutError)
        1    0.000    0.000    0.000    0.000 tarfile.py:279(StreamError)
        1    0.000    0.000    0.000    0.000 error.py:116(YAMLError)
        1    0.000    0.000    0.000    0.000 errors.py:81(DistutilsPlatformError)
        1    0.000    0.000    0.000    0.000 client.py:1467(InvalidURL)
        1    0.000    0.000    0.000    0.000 subprocess.py:123(SubprocessError)
        1    0.000    0.000    0.000    0.000 tarfile.py:291(EOFHeaderError)
        1    0.000    0.000    0.000    0.000 streamplot.py:420(TerminateTrajectory)
        1    0.000    0.000    0.000    0.000 __init__.py:194(c_float)
        1    0.000    0.000    0.000    0.000 errors.py:48(DistutilsArgError)
        1    0.000    0.000    0.000    0.000 _endian.py:35(_swapped_union_meta)
        1    0.000    0.000    0.000    0.000 polyerrors.py:98(NotInvertible)
        1    0.000    0.000    0.000    0.000 __init__.py:230(c_byte)
        1    0.000    0.000    0.000    0.000 error.py:172(YAMLWarning)
        1    0.000    0.000    0.000    0.000 errors.py:74(DistutilsSetupError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:106(NotAlgebraic)
        1    0.000    0.000    0.000    0.000 __init__.py:190(c_uint)
        1    0.000    0.000    0.000    0.000 errors.py:55(DistutilsFileError)
        1    0.000    0.000    0.000    0.000 errors.py:96(DistutilsInternalError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:132(GeneratorsNeeded)
        1    0.000    0.000    0.000    0.000 client.py:1478(UnimplementedFileMode)
        1    0.000    0.000    0.000    0.000 __init__.py:300(SubsequentHeaderError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:94(CoercionFailed)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:163(__init__)
        1    0.000    0.000    0.000    0.000 polyerrors.py:177(OptionError)
        1    0.000    0.000    0.000    0.000 rationalfield.py:45(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:246(c_void_p)
        1    0.000    0.000    0.000    0.000 streamplot.py:495(OutOfBounds)
        1    0.000    0.000    0.000    0.000 client.py:1464(NotConnected)
        1    0.000    0.000    0.000    0.000 {method 'isascii' of 'str' objects}
        1    0.000    0.000    0.000    0.000 errors.py:103(DistutilsTemplateError)
        1    0.000    0.000    0.000    0.000 repmatrix.py:202(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:251(c_bool)
        1    0.000    0.000    0.000    0.000 polyerrors.py:110(DomainError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:114(PolynomialError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:128(GeneratorsError)
        1    0.000    0.000    0.000    0.000 __init__.py:177(c_ulong)
        1    0.000    0.000    0.000    0.000 __init__.py:186(c_int)
        1    0.000    0.000    0.000    0.000 contextlib.py:342(__enter__)
        1    0.000    0.000    0.000    0.000 tarfile.py:294(InvalidHeaderError)
        1    0.000    0.000    0.000    0.000 __init__.py:261(c_wchar)
        1    0.000    0.000    0.000    0.000 expressionrawdomain.py:28(__init__)
        1    0.000    0.000    0.000    0.000 polyerrors.py:90(RefinementFailed)
        1    0.000    0.000    0.000    0.000 six.py:239(exec_module)
        1    0.000    0.000    0.000    0.000 client.py:1501(CannotSendHeader)
        1    0.000    0.000    0.000    0.000 client.py:1495(ImproperConnectionState)
        1    0.000    0.000    0.000    0.000 polyerrors.py:151(MultivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:181(FlagError)
        1    0.000    0.000    0.000    0.000 client.py:1498(CannotSendRequest)
        1    0.000    0.000    0.000    0.000 client.py:1504(ResponseNotReady)
        1    0.000    0.000    0.000    0.000 colors.py:1169(DivergingNorm)
        1    0.000    0.000    0.000    0.000 gaussiandomains.py:647(__init__)
        1    0.000    0.000    0.000    0.000 typing_extensions.py:2055(_EllipsisDummy)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:584(_transpose_dispatcher)
        1    0.000    0.000    0.000    0.000 polyerrors.py:82(ExtraneousFactors)
        1    0.000    0.000    0.000    0.000 polyerrors.py:147(UnivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:93(_median_formula)
        1    0.000    0.000    0.000    0.000 enum.py:1163(_missing_)
        1    0.000    0.000    0.000    0.000 _new_distributions.py:96(_mode_formula)
        1    0.000    0.000    0.000    0.000 polyerrors.py:86(EvaluationFailed)


